WEBVTT

00:00:07.074 --> 00:00:16.216 align:start position:43% line:-1
(音楽)

00:00:21.188 --> 00:00:28.962 align:start position:43% line:-1
(拍手)

00:00:29.062 --> 00:00:33.233 align:start position:21% line:-2
今回のテーマは
Playgroundの活用法です

00:00:33.433 --> 00:00:34.935 align:start position:36% line:-1
私はチベットです

00:00:35.035 --> 00:00:39.006 align:start position:29% line:-2
後ほど同僚のアレックスと
ＴＪも加わります

00:00:40.174 --> 00:00:44.611 align:start position:20% line:-2
コードをすぐに試せる
Playgroundは便利ですよね

00:00:45.145 --> 00:00:49.016 align:start position:25% line:-2
今回はお勧めのワークフローを
ご紹介します

00:00:49.349 --> 00:00:55.022 align:start position:23% line:-2
Playgroundへの理解が
より深まるセッションです

00:00:56.823 --> 00:01:00.260 align:start position:30% line:-2
まずは基本的なことから
お話しします

00:00:56.823 --> 00:01:00.260 align:start position:30% line:-2
まずは基本的なことから
お話しします

00:01:00.360 --> 00:01:04.864 align:start position:29% line:-2
概要やマークアップ
埋め込みリソースなどです

00:01:05.432 --> 00:01:08.502 align:start position:23% line:-1
その後 ステップ実行を行います

00:01:08.902 --> 00:01:12.940 align:start position:23% line:-2
コードの実行をコントロールする
方法もお伝えします

00:01:14.208 --> 00:01:20.314 align:start position:5% line:-2
終盤ではCustomPlayground
DisplayConvertibleもご紹介します

00:01:20.614 --> 00:01:24.284 align:start position:23% line:-2
インラインの結果表示を
カスタマイズするプロトコルです

00:01:25.052 --> 00:01:28.088 align:start position:32% line:-2
フレームワークで
コードを動かすための

00:01:28.188 --> 00:01:30.891 align:start position:29% line:-2
ワークスペースの使い方も
取り上げます

00:01:32.526 --> 00:01:39.500 align:start position:11% line:-2
PlaygroundはSwiftを試すための
インタラクティブな環境です

00:01:40.400 --> 00:01:43.837 align:start position:20% line:-1
実際にXcodeで開いてみましょう

00:01:46.773 --> 00:01:50.544 align:start position:25% line:-2
Playgroundを開くと
エディタが現れます

00:01:51.311 --> 00:01:55.682 align:start position:20% line:-1
Xcodeの標準的なエディタですね

00:01:56.183 --> 00:01:59.086 align:start position:20% line:-1
ですがPlaygroundの場合は

00:01:59.186 --> 00:02:04.625 align:start position:27% line:-2
右側のサイドバーに
コードの結果が表示されます

00:01:59.186 --> 00:02:04.625 align:start position:27% line:-2
右側のサイドバーに
コードの結果が表示されます

00:02:06.059 --> 00:02:10.330 align:start position:30% line:-2
結果をインラインで
表示することもできます

00:02:10.864 --> 00:02:16.036 align:start position:27% line:-2
サイドバーの結果の横にある
長方形のボタンを選択すれば

00:02:16.837 --> 00:02:20.474 align:start position:21% line:-1
エディタ領域に結果を表示できます

00:02:22.776 --> 00:02:26.446 align:start position:9% line:-2
この例では
“Hello, playground”の文言が

00:02:26.547 --> 00:02:29.583 align:start position:27% line:-1
変数宣言の下に確認できます

00:02:31.518 --> 00:02:33.987 align:start position:12% line:-1
Assistant Editorも便利です

00:02:34.821 --> 00:02:37.858 align:start position:27% line:-1
このモードの面白いところは

00:02:37.958 --> 00:02:42.229 align:start position:30% line:-2
ライブビューで詳細に
結果を確認できる点です

00:02:43.697 --> 00:02:48.635 align:start position:25% line:-2
例ではUIViewを使い
ライブビューを作成しましたが

00:02:49.136 --> 00:02:53.473 align:start position:12% line:-2
iOSやtvOSの場合は
UIViewControllerも使えます

00:02:53.674 --> 00:02:57.578 align:start position:12% line:-2
macOSにはNSViewと
NSViewControllerが使えます

00:03:01.849 --> 00:03:05.919 align:start position:23% line:-2
こちらはライブビューを表示する
スニペットです

00:03:06.453 --> 00:03:09.189 align:start position:11% line:-2
まずはPlayground Supportの
インポートです

00:03:10.123 --> 00:03:15.729 align:start position:18% line:-2
このフレームワークはXcodeと
Playgroundの連携を強めます

00:03:15.829 --> 00:03:18.332 align:start position:27% line:-1
ライブビューもその１つです

00:03:18.832 --> 00:03:22.736 align:start position:21% line:-2
このフレームワークを
インポートすればAPIも使えます

00:03:23.670 --> 00:03:28.375 align:start position:12% line:-2
UIKitやAppKitを使い
View Controllerを作成したら

00:03:28.509 --> 00:03:31.278 align:start position:29% line:-1
フレームワークに渡します

00:03:31.745 --> 00:03:37.150 align:start position:11% line:-2
これには“liveView”プロパティを
“viewController”に設定します

00:03:37.584 --> 00:03:41.955 align:start position:11% line:-2
これでAssistant Editorに
View Controllerが表示されます

00:03:43.657 --> 00:03:48.195 align:start position:20% line:-2
次はマークアップで
Playgroundを整えましょう

00:03:48.328 --> 00:03:51.732 align:start position:29% line:-2
他の人とシェアする際にも
役立ちます

00:03:52.099 --> 00:03:57.437 align:start position:29% line:-2
リッチテキストや画像
そして動画なども使えます

00:03:58.038 --> 00:04:01.675 align:start position:23% line:-1
それでは手順を見ていきましょう

00:03:58.038 --> 00:04:01.675 align:start position:23% line:-1
それでは手順を見ていきましょう

00:04:03.744 --> 00:04:07.714 align:start position:27% line:-2
これはマークアップで書いた
私の詩です

00:04:08.148 --> 00:04:13.086 align:start position:23% line:-2
スラッシュ２本とコロンのあとに
記述したものは

00:04:13.220 --> 00:04:16.557 align:start position:23% line:-1
マークアップテキストになります

00:04:18.192 --> 00:04:24.164 align:start position:23% line:-2
これを複数行 続けて記述すると
１つのブロックにまとまります

00:04:25.432 --> 00:04:30.637 align:start position:21% line:-2
または最初のアスタリスクのあとに
コロンをつけても同じです

00:04:31.972 --> 00:04:37.544 align:start position:29% line:-2
こちらがXcode上での
マークアップです

00:04:38.011 --> 00:04:41.114 align:start position:21% line:-1
レンダリングされたものを見るには

00:04:41.215 --> 00:04:45.152 align:start position:29% line:-2
右上のボタンから
インスペクタを表示します

00:04:45.853 --> 00:04:49.923 align:start position:4% line:-2
そして“Render Documentation”を
選択すると―

00:04:50.924 --> 00:04:53.327 align:start position:27% line:-1
詩がレンダリングされました

00:04:55.462 --> 00:04:59.833 align:start position:23% line:-2
またマークアップで
見出しをつけることも可能なので

00:05:00.100 --> 00:05:03.103 align:start position:16% line:-1
Playground内を構造化できます

00:05:03.203 --> 00:05:06.907 align:start position:25% line:-2
サイズはナンバーサインの数で
変わります

00:05:07.875 --> 00:05:13.113 align:start position:11% line:-2
この例では 詩の題名である
“Roses Are Red”が大見出しです

00:05:13.647 --> 00:05:17.384 align:start position:11% line:-2
副題の“An ode to markup”は
中見出しです

00:05:17.885 --> 00:05:20.521 align:start position:29% line:-1
そして署名は小見出しです

00:05:21.388 --> 00:05:24.992 align:start position:29% line:-2
ナンバーサインまで
一緒に表示されないよう―

00:05:25.092 --> 00:05:27.828 align:start position:25% line:-1
必ずスペースを入れてください

00:05:29.530 --> 00:05:32.733 align:start position:21% line:-1
では レンダリングしてみましょう

00:05:33.667 --> 00:05:39.039 align:start position:25% line:-2
サイズの異なる３つの見出しが
確認できますね

00:05:40.674 --> 00:05:43.911 align:start position:25% line:-1
テキストの書式設定も可能です

00:05:44.778 --> 00:05:50.918 align:start position:25% line:-2
アスタリスクで囲んだ文字列は
イタリックになります

00:05:51.585 --> 00:05:55.088 align:start position:30% line:-2
バッククォートで囲めば
コード記述時のフォント

00:05:56.790 --> 00:06:01.228 align:start position:27% line:-2
２つのアスタリスクで囲めば
ボールドになります

00:05:56.790 --> 00:06:01.228 align:start position:27% line:-2
２つのアスタリスクで囲めば
ボールドになります

00:06:01.728 --> 00:06:03.463 align:start position:38% line:-1
見てみましょう

00:06:05.232 --> 00:06:08.535 align:start position:27% line:-2
“red”と“blue”は
イタリックですね

00:06:08.635 --> 00:06:12.306 align:start position:23% line:-2
“markup”と“fun”も
変わっています

00:06:13.941 --> 00:06:16.677 align:start position:30% line:-1
次はリストについてです

00:06:17.244 --> 00:06:23.550 align:start position:23% line:-2
数字とピリオドを記述することで
順序リストを作成できます

00:06:24.551 --> 00:06:28.555 align:start position:27% line:-2
この例では
詩を順序リストで示しました

00:06:29.289 --> 00:06:32.492 align:start position:27% line:-1
レンダリングしてみましょう

00:06:32.593 --> 00:06:36.263 align:start position:25% line:-1
詩の各行に番号が振られました

00:06:37.397 --> 00:06:40.100 align:start position:29% line:-1
項目リストも作成できます

00:06:40.701 --> 00:06:46.039 align:start position:29% line:-2
数字とピリオドではなく
アスタリスクを記述します

00:06:47.641 --> 00:06:50.477 align:start position:27% line:-1
レンダリングしてみましょう

00:06:50.577 --> 00:06:55.148 align:start position:27% line:-2
詩の各行の頭が
丸の記号から始まっています

00:06:56.950 --> 00:06:59.453 align:start position:32% line:-1
リンクも設定できます

00:07:00.053 --> 00:07:03.857 align:start position:21% line:-2
例では“Roses”と
“Violets”に設定しました

00:07:04.324 --> 00:07:10.030 align:start position:27% line:-2
文字列を角括弧で囲んだあと
URLを丸括弧で囲みます

00:07:11.532 --> 00:07:15.836 align:start position:32% line:-2
または参照表記でも
リンクを設定できます

00:07:15.936 --> 00:07:21.708 align:start position:25% line:-2
この例では[1]としましたが
数字でなくても構いません

00:07:22.943 --> 00:07:27.014 align:start position:21% line:-1
このようにリンク名を角括弧で囲み

00:07:27.114 --> 00:07:31.084 align:start position:21% line:-1
URLはコロンのあとに記述します

00:07:32.786 --> 00:07:35.923 align:start position:21% line:-1
レンダリングすると こうなります

00:07:36.356 --> 00:07:41.295 align:start position:11% line:-2
“Roses”“Violets”“fun”に
リンクが張れました

00:07:43.096 --> 00:07:46.800 align:start position:18% line:-2
Playgroundは複数のページで
開くこともでき

00:07:47.100 --> 00:07:52.172 align:start position:21% line:-2
それぞれにマークアップやコードを
記述できます

00:07:52.873 --> 00:07:57.845 align:start position:25% line:-2
新しいページを開くには
“File”の“New”から

00:07:57.945 --> 00:08:00.280 align:start position:9% line:-1
“Playground Page”を選択します

00:07:57.945 --> 00:08:00.280 align:start position:9% line:-1
“Playground Page”を選択します

00:08:01.014 --> 00:08:02.916 align:start position:21% line:-1
またはPlayground上で―

00:08:03.016 --> 00:08:07.187 align:start position:23% line:-2
controlクリックをしても
作成できます

00:08:09.056 --> 00:08:13.060 align:start position:27% line:-2
マークアップで
ページ間のリンクも可能です

00:08:13.760 --> 00:08:18.999 align:start position:23% line:-2
前ページに移動するには
“(@previous)”とし

00:08:19.600 --> 00:08:23.871 align:start position:27% line:-2
次ページに移動するには
“(@next)”とします

00:08:24.438 --> 00:08:30.777 align:start position:23% line:-2
特定のページの場合は
ページのファイル名を記述します

00:08:30.878 --> 00:08:33.746 align:start position:30% line:-1
スペースや特殊な文字は

00:08:33.847 --> 00:08:37.284 align:start position:30% line:-2
文字コード中の“%”で
置き換えてください

00:08:39.520 --> 00:08:43.890 align:start position:30% line:-2
また コンテンツを
埋め込むことも可能です

00:08:45.058 --> 00:08:49.997 align:start position:11% line:-2
SourcesフォルダにSwiftファイルを
追加することもできます

00:08:50.731 --> 00:08:53.867 align:start position:29% line:-2
Sourcesフォルダは
各ページにもあります

00:08:54.168 --> 00:08:59.173 align:start position:23% line:-2
各ソースはコンパイルされ
複数のモジュールが作成されます

00:08:59.273 --> 00:09:01.942 align:start position:29% line:-1
インポート命令は不要です

00:08:59.273 --> 00:09:01.942 align:start position:29% line:-1
インポート命令は不要です

00:09:02.342 --> 00:09:04.912 align:start position:30% line:-1
それぞれのモジュールは

00:09:05.012 --> 00:09:10.517 align:start position:21% line:-2
アクセスコントロールで
補助ソースの書き出しを制御します

00:09:11.585 --> 00:09:16.290 align:start position:16% line:-2
メインのPlaygroundのソースは
“public”としてください

00:09:16.590 --> 00:09:21.094 align:start position:20% line:-2
Sourcesフォルダに置くものの
好例はヘルパーコードでしょう

00:09:21.195 --> 00:09:25.766 align:start position:16% line:-2
メインのPlaygroundの外にある
クラスやエクステンションです

00:09:28.635 --> 00:09:31.305 align:start position:27% line:-1
他のリソースも追加できます

00:09:31.872 --> 00:09:39.213 align:start position:11% line:-2
画像や音声 動画
Storyboardファイル ZIPなどです

00:09:40.414 --> 00:09:41.915 align:start position:23% line:-1
Resourcesフォルダは―

00:09:42.015 --> 00:09:46.720 align:start position:14% line:-2
Sourcesフォルダと同じく
Playgroundの各ページにあります

00:09:48.455 --> 00:09:53.660 align:start position:27% line:-2
リソースはマークアップにも
コードにも追加できます

00:09:54.595 --> 00:10:01.735 align:start position:25% line:-2
リンク設定と同じような構文で
画像を埋め込むことが可能です

00:09:54.595 --> 00:10:01.735 align:start position:25% line:-2
リンク設定と同じような構文で
画像を埋め込むことが可能です

00:10:02.636 --> 00:10:06.940 align:start position:16% line:-2
“MyPicture.jpg”のような
画像ファイルを指定します

00:10:07.040 --> 00:10:08.942 align:start position:29% line:-1
ホバータイトルだけでなく

00:10:09.042 --> 00:10:14.414 align:start position:29% line:-2
埋め込んだ画像を説明する
代替テキストも指定します

00:10:15.082 --> 00:10:21.421 align:start position:21% line:-2
これらの設定は音声ブラウザなどの
ユーザに有用です

00:10:22.689 --> 00:10:28.662 align:start position:9% line:-2
そしてUIImageまたはNSImageを使い
この画像にアクセスします

00:10:30.164 --> 00:10:34.334 align:start position:32% line:-2
動画ファイルも同様に
埋め込みが可能です

00:10:35.002 --> 00:10:38.205 align:start position:29% line:-1
構文も先ほどと似ています

00:10:38.305 --> 00:10:44.278 align:start position:25% line:-2
動画のサイズだけでなく
ポスター画像も指定しましょう

00:10:46.213 --> 00:10:50.751 align:start position:25% line:-2
この動画など 他のリソースに
アクセスしたい時は

00:10:51.051 --> 00:10:55.022 align:start position:30% line:-2
バンドルAPIで
見つけることができます

00:10:55.989 --> 00:10:59.760 align:start position:21% line:-1
この例ではリソース名と拡張子から

00:10:59.860 --> 00:11:03.831 align:start position:9% line:-1
“MyVideo.mp4”のURLを取得します

00:10:59.860 --> 00:11:03.831 align:start position:9% line:-1
“MyVideo.mp4”のURLを取得します

00:11:04.932 --> 00:11:10.003 align:start position:27% line:-2
リソースはメインバンドルの
リソースとして扱われます

00:11:12.005 --> 00:11:17.945 align:start position:23% line:-2
フレームワークやマークアップの
より詳しい情報は

00:11:18.045 --> 00:11:20.280 align:start position:14% line:-2
developer.apple.comで
ご確認ください

00:11:21.648 --> 00:11:28.789 align:start position:12% line:-2
続いては 同僚のアレックスから
Playgroundの新機能をご紹介します

00:11:29.156 --> 00:11:29.990 align:start position:45% line:-1
どうも

00:11:30.090 --> 00:11:38.665 align:start position:43% line:-1
(拍手)

00:11:39.066 --> 00:11:40.133 align:start position:41% line:-1
ありがとう

00:11:40.367 --> 00:11:43.837 align:start position:27% line:-2
Core OSエンジニアの
アレックスです

00:11:44.905 --> 00:11:46.640 align:start position:36% line:-1
皆さんに質問です

00:11:46.974 --> 00:11:50.344 align:start position:34% line:-2
思いついたコードを
試してみる前に―

00:11:50.444 --> 00:11:53.914 align:start position:32% line:-2
忘れてしまった経験は
ありませんか？

00:11:54.748 --> 00:11:58.485 align:start position:25% line:-2
プロジェクトのセットアップを
事前にしていなかったなど

00:11:58.585 --> 00:12:01.188 align:start position:34% line:-1
理由は様々でしょう

00:11:58.585 --> 00:12:01.188 align:start position:34% line:-1
理由は様々でしょう

00:12:02.289 --> 00:12:09.329 align:start position:14% line:-2
今回のお話はAppleのAPIの初心者や
納期を抱える熟練のエンジニア

00:12:09.630 --> 00:12:13.133 align:start position:21% line:-2
そしてデータサイエンティストにも
有用です

00:12:13.901 --> 00:12:18.238 align:start position:27% line:-2
AppleのAPIに対する
コーディングを始めたいなら

00:12:18.338 --> 00:12:21.775 align:start position:18% line:-1
Playgroundは一番の近道です

00:12:24.344 --> 00:12:29.483 align:start position:14% line:-2
Xcode 10でPlaygroundは
より速く レスポンシブになり

00:12:29.583 --> 00:12:33.120 align:start position:32% line:-2
新たにステップ実行も
可能となりました

00:12:34.221 --> 00:12:37.858 align:start position:21% line:-1
そのためのUIをお見せしましょう

00:12:41.595 --> 00:12:45.666 align:start position:27% line:-2
Playgroundに
なじみのある方なら まず―

00:12:45.966 --> 00:12:49.469 align:start position:21% line:-1
左側の青いラインに気づくでしょう

00:12:50.571 --> 00:12:53.841 align:start position:23% line:-2
プレイボタンは
ポインタがある行に表示されます

00:12:55.809 --> 00:13:01.014 align:start position:27% line:-2
青くなった行番号のコードは
実行可能なコードです

00:12:55.809 --> 00:13:01.014 align:start position:27% line:-2
青くなった行番号のコードは
実行可能なコードです

00:13:01.849 --> 00:13:03.650 align:start position:32% line:-1
プレイボタンを押すと

00:13:03.984 --> 00:13:10.057 align:start position:21% line:-2
プレイボタンを含む青い行すべての
コードが実行されます

00:13:10.157 --> 00:13:11.792 align:start position:38% line:-1
見てみましょう

00:13:12.960 --> 00:13:17.764 align:start position:21% line:-2
このとおり 最初の３行のコードが
実行されました

00:13:18.031 --> 00:13:20.667 align:start position:30% line:-1
結果は右側に出ています

00:13:21.468 --> 00:13:24.371 align:start position:23% line:-1
プレイボタンが灰色になったのは

00:13:24.471 --> 00:13:30.143 align:start position:21% line:-2
これらのコードがすでに
実行済みであることを表しています

00:13:31.278 --> 00:13:34.815 align:start position:21% line:-1
他にプレイボタンが灰色になるのは

00:13:34.915 --> 00:13:39.453 align:start position:30% line:-2
その行がコードの
最上行ではない場合です

00:13:39.753 --> 00:13:44.525 align:start position:30% line:-2
例えば関数の括弧の中や
forループの中です

00:13:44.792 --> 00:13:46.960 align:start position:27% line:-1
forループを実行するには

00:13:47.060 --> 00:13:52.866 align:start position:21% line:-2
ポインタをプレイボタンが青くなる
閉じ波括弧の行に移します

00:13:52.966 --> 00:13:54.768 align:start position:34% line:-1
これで実行できます

00:13:58.272 --> 00:14:03.010 align:start position:12% line:-2
キーボードショートカットの
“shift + return”も便利です

00:13:58.272 --> 00:14:03.010 align:start position:12% line:-2
キーボードショートカットの
“shift + return”も便利です

00:14:03.310 --> 00:14:07.848 align:start position:27% line:-2
コードを１行
書き終えたあとに使用すると

00:14:07.948 --> 00:14:13.187 align:start position:27% line:-2
その行を実行した上で
カーソルが次の行に移ります

00:14:14.555 --> 00:14:17.991 align:start position:23% line:-1
青い行はコードの編集も可能です

00:14:18.091 --> 00:14:23.030 align:start position:12% line:-2
手動でPlaygroundをリセットせずに
編集できます

00:14:23.297 --> 00:14:27.734 align:start position:27% line:-2
青い行のコードを編集すると
その影響は―

00:14:28.469 --> 00:14:31.305 align:start position:25% line:-1
実行済みのコードにも及びます

00:14:31.405 --> 00:14:35.709 align:start position:27% line:-2
つまり変更を反映するために
リセットが必要ですが

00:14:36.076 --> 00:14:41.181 align:start position:27% line:-2
青い行を編集すると
自動でリセットされるのです

00:14:44.518 --> 00:14:48.622 align:start position:29% line:-2
手動でリセットする必要が
ある場合は

00:14:48.722 --> 00:14:52.593 align:start position:32% line:-2
デバッグバーにある
停止ボタンを押します

00:14:53.627 --> 00:14:57.764 align:start position:27% line:-2
では ステップ実行の利点は
何なのでしょう？

00:14:58.031 --> 00:15:01.201 align:start position:21% line:-1
まず １行だけの実行なら一瞬です

00:14:58.031 --> 00:15:01.201 align:start position:21% line:-1
まず １行だけの実行なら一瞬です

00:15:01.301 --> 00:15:05.873 align:start position:18% line:-2
Playgroundを再起動するより
断然 素早く済みます

00:15:06.707 --> 00:15:10.244 align:start position:21% line:-1
また データに瞬時に対応できます

00:15:10.344 --> 00:15:14.515 align:start position:32% line:-2
コードを書き 実行し
結果を確認すれば

00:15:14.615 --> 00:15:18.118 align:start position:30% line:-2
次のコードを
書く流れにつながります

00:15:18.819 --> 00:15:24.191 align:start position:12% line:-2
さらに Playgroundを再実行すると
毎回 値が変わります

00:15:24.324 --> 00:15:26.593 align:start position:30% line:-2
ネットワークリソースに
アクセスしたり

00:15:26.693 --> 00:15:30.364 align:start position:30% line:-2
ランダムな数値を
生成したりする場合です

00:15:30.697 --> 00:15:35.769 align:start position:23% line:-2
ステップ実行ならデータモデルは
不変なので 理解も容易です

00:15:36.336 --> 00:15:40.207 align:start position:34% line:-2
それでは簡単な例を
お見せしましょう

00:15:42.843 --> 00:15:48.916 align:start position:27% line:-2
私は様々なゲームが好きで
ゲームを書くのも好きですが

00:15:49.016 --> 00:15:52.486 align:start position:30% line:-2
強くはないので
単純なゲームをやります

00:15:52.586 --> 00:15:55.789 align:start position:21% line:-2
これは“Roshambo”という
ゲームです

00:15:55.889 --> 00:16:00.027 align:start position:29% line:-2
グー チョキ パーで競う
子供の遊びですね

00:15:55.889 --> 00:16:00.027 align:start position:29% line:-2
グー チョキ パーで競う
子供の遊びですね

00:16:00.627 --> 00:16:05.132 align:start position:29% line:-2
勝敗の判定には
チェック関数を使いました

00:16:05.532 --> 00:16:09.837 align:start position:25% line:-2
相手プレーヤーは
ランダムに動くようにしました

00:16:10.737 --> 00:16:16.276 align:start position:25% line:-2
相手プレーヤーが動く６行目を
ステップ実行すれば

00:16:16.677 --> 00:16:19.213 align:start position:32% line:-1
相手の手が分かります

00:16:19.413 --> 00:16:24.151 align:start position:23% line:-2
例では 相手はグーを出したので
こちらはパーを出します

00:16:25.018 --> 00:16:27.221 align:start position:36% line:-1
無事に勝てました

00:16:27.921 --> 00:16:32.993 align:start position:27% line:-2
ずるいかもしれませんが
これは高度なテクニックです

00:16:35.896 --> 00:16:41.635 align:start position:25% line:-2
なじみのないAPIを学ぶ際に
使えるテクニックですよ

00:16:41.735 --> 00:16:45.839 align:start position:30% line:-2
型や値が分からない
データ構造にも使えます

00:16:46.573 --> 00:16:48.509 align:start position:34% line:-1
今のは簡単な例です

00:16:48.642 --> 00:16:51.411 align:start position:25% line:-1
次は より踏み込んだデモです

00:16:54.615 --> 00:17:01.588 align:start position:43% line:-1
(拍手)

00:16:54.615 --> 00:17:01.588 align:start position:43% line:-1
(拍手)

00:17:04.525 --> 00:17:08.095 align:start position:25% line:-1
先ほどのゲームとは異なります

00:17:08.194 --> 00:17:10.731 align:start position:32% line:-1
こちらは三目並べです

00:17:11.698 --> 00:17:13.934 align:start position:29% line:-1
すでにゲームエンジンと―

00:17:14.434 --> 00:17:18.204 align:start position:29% line:-2
UIの最初のバージョンは
作ってあります

00:17:18.305 --> 00:17:22.209 align:start position:30% line:-2
それらのコードは
補助ソースに移しました

00:17:22.309 --> 00:17:26.113 align:start position:27% line:-2
これにより
ゲームの実行とUIの改良に

00:17:26.213 --> 00:17:29.750 align:start position:23% line:-1
集中して取り組むことができます

00:17:30.884 --> 00:17:37.458 align:start position:25% line:-2
ライブビューも使いますが
まず青い行番号を見てください

00:17:37.624 --> 00:17:39.927 align:start position:27% line:-1
ポインタに合わせて動きます

00:17:40.394 --> 00:17:44.631 align:start position:30% line:-2
それではまず
ゲーム盤をロードします

00:17:45.132 --> 00:17:47.034 align:start position:39% line:-1
回転させます

00:17:48.569 --> 00:17:50.971 align:start position:30% line:-1
三目並べのゲーム盤です

00:17:51.071 --> 00:17:54.541 align:start position:29% line:-2
このとおり
途中までコードを実行でき

00:17:54.641 --> 00:17:57.711 align:start position:29% line:-1
残りも実行可能な状態です

00:17:58.145 --> 00:18:00.614 align:start position:32% line:-1
私の第一手もあります

00:17:58.145 --> 00:18:00.614 align:start position:32% line:-1
私の第一手もあります

00:18:01.281 --> 00:18:02.316 align:start position:38% line:-1
実行しましょう

00:18:03.317 --> 00:18:04.318 align:start position:41% line:-1
打てました

00:18:04.418 --> 00:18:10.691 align:start position:23% line:-2
コードでゲームを進めながら
結果をライブビューで見られます

00:18:11.291 --> 00:18:13.393 align:start position:32% line:-1
相手に打たせましょう

00:18:17.931 --> 00:18:18.966 align:start position:41% line:-1
いいですね

00:18:19.066 --> 00:18:24.238 align:start position:27% line:-2
相手の動きはランダムなので
私が勝てるはずです

00:18:24.338 --> 00:18:27.341 align:start position:41% line:-1
(笑い声)

00:18:28.475 --> 00:18:31.578 align:start position:23% line:-1
ここまで複数行のコードを実行し

00:18:31.678 --> 00:18:36.283 align:start position:32% line:-2
またステップ実行でも
コードを実行しました

00:18:36.383 --> 00:18:40.921 align:start position:30% line:-2
そして さらにコードを
追記することも可能です

00:18:41.021 --> 00:18:42.723 align:start position:36% line:-1
やってみましょう

00:18:51.665 --> 00:18:52.533 align:start position:41% line:-1
書けました

00:18:52.633 --> 00:18:54.968 align:start position:32% line:-1
プレイボタンを押し―

00:18:56.470 --> 00:19:02.142 align:start position:21% line:-2
この１行を実行して
さらにもう１行 記述していきます

00:18:56.470 --> 00:19:02.142 align:start position:21% line:-2
この１行を実行して
さらにもう１行 記述していきます

00:19:07.648 --> 00:19:08.749 align:start position:43% line:-1
よかった

00:19:08.849 --> 00:19:12.920 align:start position:41% line:-1
(笑い声)

00:19:13.020 --> 00:19:15.089 align:start position:34% line:-1
大事な点があります

00:19:15.189 --> 00:19:21.762 align:start position:21% line:-2
最初はゲーム盤が水平だったため
私が回転させて見やすくしましたね

00:19:23.397 --> 00:19:28.168 align:start position:27% line:-2
その後 コードを実行しても
盤は水平には戻りません

00:19:28.268 --> 00:19:33.040 align:start position:21% line:-2
見やすい位置に回転させるコードは
書いていません

00:19:33.140 --> 00:19:37.711 align:start position:29% line:-2
クォータニオンを使うので
私にはまだ難しいです

00:19:39.213 --> 00:19:41.615 align:start position:27% line:-1
さらに 大事な点があります

00:19:41.715 --> 00:19:47.120 align:start position:21% line:-2
もし新たなコードを実行するたびに
相手がやり直せたとしたら

00:19:47.221 --> 00:19:50.457 align:start position:27% line:-1
それは少々 不公平でしょう

00:19:51.458 --> 00:19:54.428 align:start position:25% line:-1
進めましょう　たぶん勝てます

00:20:04.638 --> 00:20:05.873 align:start position:41% line:-1
どうかな？

00:20:08.876 --> 00:20:09.910 align:start position:41% line:-1
勝ちました

00:20:10.510 --> 00:20:17.184 align:start position:43% line:-1
(拍手)

00:20:17.284 --> 00:20:22.189 align:start position:29% line:-2
今回 ３個そろった列には
赤い丸が付きましたが

00:20:23.090 --> 00:20:27.227 align:start position:34% line:-2
もっと勝利の喜びを
感じたいところです

00:20:27.327 --> 00:20:30.664 align:start position:25% line:-1
ですのでUIを改良しましょう

00:20:30.864 --> 00:20:33.100 align:start position:34% line:-1
従来の開発環境では

00:20:33.200 --> 00:20:40.440 align:start position:21% line:-2
ゲームを自動で進行させる際には
複雑なハーネスを設計していました

00:20:40.541 --> 00:20:44.678 align:start position:25% line:-2
プログラムの終わりの挙動の
テストには それが必要でした

00:20:45.212 --> 00:20:50.384 align:start position:27% line:-2
しかしステップ実行があれば
終わりだけを実行でき

00:20:50.484 --> 00:20:55.155 align:start position:27% line:-2
その結果を踏まえて
新たなコードを追記できます

00:20:55.255 --> 00:20:56.557 align:start position:39% line:-1
やってみます

00:21:01.228 --> 00:21:05.465 align:start position:25% line:-2
パーティクルシステムを用いて
エフェクトを作ります

00:21:06.400 --> 00:21:08.836 align:start position:16% line:-1
“shift + return”で実行

00:21:09.503 --> 00:21:13.173 align:start position:30% line:-2
いいですね
勝利の実感が得られます

00:21:13.774 --> 00:21:17.778 align:start position:43% line:-1
(拍手)

00:21:17.878 --> 00:21:20.247 align:start position:34% line:-1
では おさらいです

00:21:20.647 --> 00:21:25.786 align:start position:29% line:-2
ステップ実行を使えば
１行ずつコードを吟味でき

00:21:26.253 --> 00:21:30.557 align:start position:32% line:-2
コードとデータ間の
会話が可能になります

00:21:30.657 --> 00:21:37.097 align:start position:21% line:-2
結果を逐一 確認しながら
より進んだコードを試していけます

00:21:37.598 --> 00:21:42.703 align:start position:14% line:-2
“shift + return”を使えば
手も頭も休みなく動かせます

00:21:43.136 --> 00:21:49.409 align:start position:23% line:-2
さらにライブビューも活用すれば
別の見方でモデルを確認できます

00:21:49.510 --> 00:21:55.716 align:start position:21% line:-2
グラフィカルな環境とコード記述を
シームレスに操れるのです

00:21:56.817 --> 00:22:03.156 align:start position:23% line:-2
新しいAppleのAPIを
学んでいる最中の初心者の皆さん

00:21:56.817 --> 00:22:03.156 align:start position:23% line:-2
新しいAppleのAPIを
学んでいる最中の初心者の皆さん

00:22:03.791 --> 00:22:10.531 align:start position:21% line:-2
新たなアプリケーションを思案中の
経験豊富なプログラマの皆さん

00:22:12.132 --> 00:22:18.639 align:start position:14% line:-2
次にコードを思いついた際には
Playgroundを使ってみてください

00:22:21.508 --> 00:22:26.580 align:start position:25% line:-2
よいアイデアを思いつくための
ヒントを３つ 提案します

00:22:27.014 --> 00:22:30.851 align:start position:23% line:-1
まず APIを自分で作るのなら

00:22:30.951 --> 00:22:36.156 align:start position:30% line:-2
チュートリアルの作成は
とても大事なことです

00:22:36.256 --> 00:22:41.462 align:start position:25% line:-2
ユーザはステップ実行しながら
コードの動きを確認できます

00:22:43.230 --> 00:22:47.834 align:start position:25% line:-2
次に 公開されているデータを
ダウンロードし

00:22:47.935 --> 00:22:52.973 align:start position:23% line:-2
ステップ実行しながら自分なりに
掘り下げるのもいいでしょう

00:22:53.707 --> 00:22:59.213 align:start position:29% line:-2
地図や自治体のデータ
学校の研究課題も使えます

00:23:00.447 --> 00:23:05.319 align:start position:23% line:-2
また ゲームやアニメーションの
作成もお勧めです

00:23:05.719 --> 00:23:07.221 align:start position:34% line:-1
難しくはありません

00:23:07.788 --> 00:23:13.961 align:start position:14% line:-2
SpriteKitやSyncKitを使い
１行ずつ強化していくのです

00:23:16.163 --> 00:23:20.901 align:start position:25% line:-2
Playgroundは
単なるオモチャではありません

00:23:21.001 --> 00:23:23.804 align:start position:30% line:-1
真面目に遊べるものです

00:23:23.904 --> 00:23:26.640 align:start position:41% line:-1
(笑い声)

00:23:26.740 --> 00:23:30.410 align:start position:29% line:-2
インタラクティブに
コードやデータを扱えます

00:23:30.644 --> 00:23:36.150 align:start position:20% line:-2
REST APIでJSONの未知の
スニペットをダウンロードした方や

00:23:36.250 --> 00:23:42.422 align:start position:21% line:-2
機械学習アプリケーションで
膨大なコードを扱う方にも有用です

00:23:42.523 --> 00:23:44.391 align:start position:36% line:-1
特に後者の方には

00:23:44.491 --> 00:23:50.898 align:start position:16% line:-2
Create MLに関するセッションの
動画をお勧めします

00:23:51.899 --> 00:23:56.670 align:start position:14% line:-2
また Playgroundは
AppleのAPIを学ぶベストな手段です

00:23:56.803 --> 00:24:03.243 align:start position:18% line:-2
初心者でも WWDCで学んだAPIを
試したい方でも活用できます

00:23:56.803 --> 00:24:03.243 align:start position:18% line:-2
初心者でも WWDCで学んだAPIを
試したい方でも活用できます

00:24:04.878 --> 00:24:07.748 align:start position:16% line:-1
AppleのAPIでなくても大丈夫です

00:24:07.848 --> 00:24:11.185 align:start position:29% line:-2
ご自身のフレームワークも
インポートできます

00:24:11.285 --> 00:24:17.191 align:start position:25% line:-2
それを見せるには データ型の
表現をカスタマイズします

00:24:17.291 --> 00:24:21.962 align:start position:29% line:-2
デベロッパが適切な情報を
一目で得られます

00:24:22.629 --> 00:24:28.035 align:start position:25% line:-2
こういった高度な概念のお話は
ＴＪにバトンタッチします

00:24:28.769 --> 00:24:36.944 align:start position:43% line:-1
(拍手)

00:24:37.044 --> 00:24:38.078 align:start position:41% line:-1
ありがとう

00:24:38.178 --> 00:24:41.715 align:start position:20% line:-1
私はXcodeエンジニアのＴＪです

00:24:42.049 --> 00:24:45.686 align:start position:32% line:-2
あなたのライブラリや
フレームワークは

00:24:45.786 --> 00:24:52.559 align:start position:16% line:-2
Playgroundの機能を活用すれば
きっと さらに改善されるはずです

00:24:53.460 --> 00:24:58.332 align:start position:27% line:-2
リッチなエクスペリエンスが
反映されるのは―

00:24:58.432 --> 00:25:03.237 align:start position:23% line:-2
READMEやチュートリアル
一般的なAPIドキュメントです

00:24:58.432 --> 00:25:03.237 align:start position:23% line:-2
READMEやチュートリアル
一般的なAPIドキュメントです

00:25:04.805 --> 00:25:08.709 align:start position:18% line:-2
Playgroundを活用することの
利点のひとつは

00:25:08.809 --> 00:25:12.279 align:start position:27% line:-1
自由な表現ができることです

00:25:12.412 --> 00:25:15.015 align:start position:25% line:-1
それを可能にしてくれるのが―

00:25:15.249 --> 00:25:18.552 align:start position:9% line:-2
CustomPlaygroundDisplay
Convertibleです

00:25:18.652 --> 00:25:25.492 align:start position:20% line:-2
Playground内の型の表現の
カスタマイズが可能になります

00:25:25.592 --> 00:25:28.195 align:start position:25% line:-1
結果が分かりやすくなりますね

00:25:28.896 --> 00:25:35.135 align:start position:12% line:-2
まずPlaygroundにフレームワークを
インポートすることから説明します

00:25:35.602 --> 00:25:41.141 align:start position:23% line:-2
さらにトラブルシューティングも
ご紹介していきます

00:25:43.911 --> 00:25:46.914 align:start position:27% line:-1
それでは早速 始めましょう

00:25:47.748 --> 00:25:53.253 align:start position:18% line:-2
ご存知のとおり ユーザが
Playgroundでコードを書くと

00:25:53.654 --> 00:25:57.791 align:start position:29% line:-2
結果は右側のサイドバーに
表示されます

00:25:59.593 --> 00:26:02.596 align:start position:29% line:-2
Playground用に
最適化されていない型は

00:25:59.593 --> 00:26:02.596 align:start position:29% line:-2
Playground用に
最適化されていない型は

00:26:02.830 --> 00:26:06.300 align:start position:34% line:-2
次の２通りの方法で
値が表現されます

00:26:07.034 --> 00:26:11.672 align:start position:7% line:-2
CustomStringConvertibleに
適合していない型の場合は―

00:26:12.906 --> 00:26:17.244 align:start position:25% line:-2
Swiftの型で構造化された
表現を作成します

00:26:17.478 --> 00:26:20.447 align:start position:29% line:-1
一方 適合する型の場合は

00:26:20.547 --> 00:26:24.151 align:start position:30% line:-2
記述を呼び出し
使用することになります

00:26:26.420 --> 00:26:28.255 align:start position:34% line:-1
これが不十分なら―

00:26:28.355 --> 00:26:33.961 align:start position:21% line:-2
ユーザはサイドバーにある
クイックルック機能を使うでしょう

00:26:35.629 --> 00:26:43.003 align:start position:23% line:-2
もしくは長方形のボタンを選択し
インラインで結果を確認しますね

00:26:43.937 --> 00:26:45.472 align:start position:39% line:-1
後者の場合―

00:26:46.907 --> 00:26:51.945 align:start position:27% line:-2
テキスト表現で
値が示されることが多いです

00:26:52.546 --> 00:26:59.653 align:start position:21% line:-2
大抵の場合はそれで十分ですが
数値を返してほしい場合もあります

00:27:00.988 --> 00:27:04.658 align:start position:30% line:-2
またはテキストや数値の
表現ではなく―

00:27:04.892 --> 00:27:10.831 align:start position:23% line:-2
画像などグラフィカルな表現を
返してほしい場合もあるでしょう

00:27:12.966 --> 00:27:15.536 align:start position:29% line:-2
それらを
コントロールできるのが―

00:27:16.203 --> 00:27:19.640 align:start position:9% line:-2
CustomPlaygroundDisplay
Convertibleです

00:27:20.007 --> 00:27:26.880 align:start position:9% line:-2
Xcode 9.3とSwift 4.1で新たに
サポートされたプロトコルです

00:27:27.147 --> 00:27:33.020 align:start position:0% line:-2
CustomPlaygroundQuickLookableの
後継にあたります

00:27:34.655 --> 00:27:37.491 align:start position:30% line:-1
詳しく見ていきましょう

00:27:39.993 --> 00:27:46.200 align:start position:4% line:-2
“playgroundDescription”という
プロパティしか返していませんね

00:27:46.433 --> 00:27:49.102 align:start position:32% line:-1
これはAny型なので

00:27:49.203 --> 00:27:55.042 align:start position:23% line:-2
最もベストと思われる値の表現を
返すことができます

00:27:56.443 --> 00:28:03.016 align:start position:18% line:-2
いくつかの型においては
Appleが表現形式を用意しています

00:27:56.443 --> 00:28:03.016 align:start position:18% line:-2
いくつかの型においては
Appleが表現形式を用意しています

00:28:04.418 --> 00:28:06.186 align:start position:34% line:-1
ここに挙げた型は―

00:28:06.286 --> 00:28:12.159 align:start position:9% line:-2
Xcode 9.3とSwift 4.1の時点で
特別な表現形式を使えるものです

00:28:12.559 --> 00:28:17.164 align:start position:30% line:-2
左は特にテキスト表現が
用意されている型

00:28:17.698 --> 00:28:21.001 align:start position:23% line:-1
そして右はグラフィカル表現です

00:28:21.368 --> 00:28:28.342 align:start position:21% line:-2
ご自分が返したい値の表現に
どれが合うか ぜひ試してください

00:28:31.111 --> 00:28:36.850 align:start position:25% line:-2
満足いくものが出来上がったら
ユーザに提供したいですよね

00:28:38.252 --> 00:28:40.821 align:start position:25% line:-2
Appleのフレームワークと
ともに―

00:28:41.255 --> 00:28:46.360 align:start position:21% line:-2
カスタムフレームワークを
インポートする方法をお伝えします

00:28:48.395 --> 00:28:53.300 align:start position:21% line:-2
通常 プロジェクトで
単一のフレームワークを作成すると

00:28:53.634 --> 00:28:56.770 align:start position:23% line:-2
ビルドプロダクトディレクトリに
入ります

00:28:58.539 --> 00:29:03.777 align:start position:16% line:-2
Playgroundは そこを見に行き
フレームワークをインポートします

00:28:58.539 --> 00:29:03.777 align:start position:16% line:-2
Playgroundは そこを見に行き
フレームワークをインポートします

00:29:04.177 --> 00:29:10.851 align:start position:12% line:-2
そのためには 単純にPlaygroundを
プロジェクトに加えてください

00:29:11.752 --> 00:29:18.158 align:start position:23% line:-2
アクセスと編集ができる
単純なプロジェクトにお勧めです

00:29:18.692 --> 00:29:21.628 align:start position:27% line:-2
こちらが
プロジェクトナビゲータです

00:29:24.965 --> 00:29:30.838 align:start position:18% line:-2
ご自身のプロジェクトに
Playgroundを追加した際には

00:29:30.938 --> 00:29:35.008 align:start position:23% line:-2
“ビルドは歩くことと同じだ”と
考えてください

00:29:35.242 --> 00:29:39.246 align:start position:29% line:-2
ビルドなしにプログラムを
走らせることはできません

00:29:42.349 --> 00:29:46.887 align:start position:32% line:-2
複数のプロジェクトが
ある場合もありますね

00:29:46.987 --> 00:29:51.525 align:start position:25% line:-2
フレームワークが３つも４つも
あるかもしれません

00:29:52.960 --> 00:29:58.465 align:start position:25% line:-2
プロジェクトが分かれていると
状況はやや複雑化します

00:29:58.565 --> 00:30:02.169 align:start position:23% line:-2
ビルドプロダクトディレクトリも
複数になるからです

00:29:58.565 --> 00:30:02.169 align:start position:23% line:-2
ビルドプロダクトディレクトリも
複数になるからです

00:30:02.269 --> 00:30:06.907 align:start position:23% line:-2
コードをPlaygroundに
インポートするのも大変です

00:30:07.007 --> 00:30:09.209 align:start position:32% line:-1
これを解決するには―

00:30:09.309 --> 00:30:13.781 align:start position:21% line:-2
各プロジェクトを
単一のワークスペースに追加します

00:30:13.881 --> 00:30:17.084 align:start position:21% line:-1
各プロジェクトをビルドした際には

00:30:17.684 --> 00:30:24.191 align:start position:21% line:-2
フレームワークはワークスペースの
単一のディレクトリに入ります

00:30:24.291 --> 00:30:30.130 align:start position:12% line:-2
その後 そのワークスペースに
Playgroundを追加すればいいのです

00:30:31.598 --> 00:30:35.502 align:start position:29% line:-2
プロジェクトナビゲータは
このように見えます

00:30:36.837 --> 00:30:43.677 align:start position:21% line:-2
以上のことを説明とおりにやっても
うまくいかなかったとしましょう

00:30:43.777 --> 00:30:46.013 align:start position:25% line:-1
“だまされた”と感じますよね

00:30:48.482 --> 00:30:54.588 align:start position:21% line:-2
その場合はディレクトリにきちんと
入ったかを確認することになります

00:30:56.223 --> 00:30:57.825 align:start position:36% line:-1
その確認方法です

00:30:59.026 --> 00:31:02.763 align:start position:11% line:-2
“File”から
“Project Settings”に入り―

00:30:59.026 --> 00:31:02.763 align:start position:11% line:-2
“File”から
“Project Settings”に入り―

00:31:05.199 --> 00:31:07.701 align:start position:18% line:-1
“Advanced”ボタンを押します

00:31:09.736 --> 00:31:17.311 align:start position:21% line:-2
このスクリーンの中には薄い灰色で
プロダクトの宛先が示されています

00:31:17.411 --> 00:31:19.346 align:start position:32% line:-1
クリックすれば直接―

00:31:19.446 --> 00:31:24.384 align:start position:25% line:-2
今 開いているプロジェクトの
ディレクトリに入れます

00:31:27.054 --> 00:31:29.289 align:start position:25% line:-1
Finderではこう見えます

00:31:30.657 --> 00:31:34.194 align:start position:30% line:-2
以上のことを
デモでお見せしましょう

00:31:35.562 --> 00:31:41.702 align:start position:43% line:-1
(拍手)

00:31:43.370 --> 00:31:46.039 align:start position:32% line:-1
私を知っている方は―

00:31:46.340 --> 00:31:50.644 align:start position:25% line:-2
私が音楽が好きだということも
ご存知でしょう

00:31:51.545 --> 00:31:53.714 align:start position:34% line:-1
無類の音楽好きです

00:31:53.814 --> 00:31:59.820 align:start position:21% line:-2
最近“ヘルムホルツ表記法”という
音階の表し方を知りました

00:31:59.920 --> 00:32:04.158 align:start position:32% line:-2
そしてこの知識を
広めたいと思いました

00:31:59.920 --> 00:32:04.158 align:start position:32% line:-2
そしてこの知識を
広めたいと思いました

00:32:05.359 --> 00:32:09.997 align:start position:25% line:-2
そこで私は
フレームワークを作ったのです

00:32:10.364 --> 00:32:14.768 align:start position:21% line:-2
ご覧のとおり
Playgroundを加えました

00:32:14.868 --> 00:32:19.740 align:start position:21% line:-2
Wikipediaで調べたことを
基にしながら

00:32:19.840 --> 00:32:24.078 align:start position:32% line:-2
この表記法についての
説明を書きました

00:32:24.178 --> 00:32:27.347 align:start position:29% line:-1
その下には値を書いたので

00:32:27.448 --> 00:32:32.853 align:start position:29% line:-2
右側のサイドバーに
音高表記も現れるはずです

00:32:35.222 --> 00:32:37.291 align:start position:30% line:-1
レンダリングしてみます

00:32:38.192 --> 00:32:44.865 align:start position:23% line:-2
チベットから説明があったように
リンクが青くなっていますね

00:32:48.268 --> 00:32:52.172 align:start position:21% line:-1
走らせる前にきちんとビルドします

00:32:55.676 --> 00:32:59.146 align:start position:16% line:-1
ここでPlaygroundを実行します

00:32:59.413 --> 00:33:00.681 align:start position:43% line:-1
出ました

00:32:59.413 --> 00:33:00.681 align:start position:43% line:-1
出ました

00:33:00.848 --> 00:33:05.519 align:start position:43% line:-1
(拍手)

00:33:05.619 --> 00:33:10.290 align:start position:25% line:-2
サイドバーに
面白い音高表記が出ていますね

00:33:10.390 --> 00:33:14.661 align:start position:27% line:-2
この表記は
非常に興味深いものなのです

00:33:14.761 --> 00:33:21.001 align:start position:25% line:-2
低音は大文字で表され
高音は小文字で表されています

00:33:21.101 --> 00:33:27.040 align:start position:27% line:-2
オクターブはコンマか
アポストロフィで表されます

00:33:27.207 --> 00:33:32.146 align:start position:29% line:-2
この説明で興味を持って
いただけたらいいんですが

00:33:32.246 --> 00:33:34.448 align:start position:32% line:-1
どうだったでしょうか

00:33:34.548 --> 00:33:41.121 align:start position:21% line:-2
残念ながら私の何人かの教え子は
興味を持ってくれませんでしたので

00:33:41.255 --> 00:33:44.158 align:start position:23% line:-1
別のフレームワークを作りました

00:33:44.458 --> 00:33:50.364 align:start position:27% line:-2
興味を引くことができるよう
鍵盤を表示させたのです

00:33:51.131 --> 00:33:55.903 align:start position:21% line:-2
それを使うために
別のPlaygroundを作成し

00:33:56.003 --> 00:34:00.407 align:start position:30% line:-2
両方のフレームワークを
インポートします

00:33:56.003 --> 00:34:00.407 align:start position:30% line:-2
両方のフレームワークを
インポートします

00:34:01.008 --> 00:34:05.078 align:start position:32% line:-2
というわけで
こちらは閉じましょう

00:34:07.214 --> 00:34:13.520 align:start position:30% line:-2
新しいワークスペースを
作成することにします

00:34:13.620 --> 00:34:18.891 align:start position:18% line:-2
“File”から“New”を開き
“Workspace”で作成できます

00:34:21.161 --> 00:34:26.132 align:start position:21% line:-2
名前は“Tutoring”として
デスクトップに置きます

00:34:30.938 --> 00:34:36.710 align:start position:16% line:-2
そして“Add Files...”から
各フレームワークを追加します

00:34:38.612 --> 00:34:43.083 align:start position:23% line:-2
まずは“Helmholtz”の
フレームワークです

00:34:44.184 --> 00:34:48.889 align:start position:25% line:-2
今度は“Keyboard”の
フレームワークを追加します

00:34:52.693 --> 00:34:58.565 align:start position:16% line:-2
そして“File”から“New”に入り
新しいPlaygroundを追加します

00:35:02.903 --> 00:35:04.605 align:start position:27% line:-1
“Blank”で構いません

00:35:05.606 --> 00:35:09.376 align:start position:16% line:-2
名前は“MyPlayground”でも
問題ありません

00:35:11.445 --> 00:35:18.152 align:start position:16% line:-2
それでは まず“Helmholtz”と
“Keyboard”をインポートします

00:35:22.289 --> 00:35:23.090 align:start position:41% line:-1
いいですね

00:35:23.991 --> 00:35:29.096 align:start position:29% line:-2
次に きちんと音高表記が
表示されるかどうか

00:35:29.463 --> 00:35:32.332 align:start position:29% line:-1
簡単にチェックしてみます

00:35:33.267 --> 00:35:36.537 align:start position:23% line:-1
各フレームワークをビルドします

00:35:37.004 --> 00:35:39.907 align:start position:30% line:-1
スキームから選択します

00:35:40.007 --> 00:35:44.878 align:start position:23% line:-2
各プロジェクトがまとまった
スキームも作りたいところですが

00:35:44.978 --> 00:35:47.514 align:start position:30% line:-1
今日は時間がありません

00:35:48.782 --> 00:35:52.352 align:start position:14% line:-1
“MyPlayground”を実行します

00:35:52.452 --> 00:35:57.724 align:start position:29% line:-2
挙動は問題ありませんが
ビジュアルが物足りません

00:35:57.824 --> 00:36:00.928 align:start position:29% line:-2
なのでピアノしか知らない
教え子のため

00:35:57.824 --> 00:36:00.928 align:start position:29% line:-2
なのでピアノしか知らない
教え子のため

00:36:01.028 --> 00:36:02.896 align:start position:29% line:-1
スニペットを用意しました

00:36:05.032 --> 00:36:10.971 align:start position:29% line:-2
記述の中にインラインで
ビューを作成してくれます

00:36:11.071 --> 00:36:14.875 align:start position:25% line:-1
１行 書くのを忘れていました

00:36:15.876 --> 00:36:19.680 align:start position:18% line:-2
“view.customText =
description”です

00:36:20.914 --> 00:36:25.385 align:start position:34% line:-2
ビューを構成したら
それを返すだけです

00:36:25.719 --> 00:36:29.690 align:start position:27% line:-2
元々あったフレームワークで
単純化できました

00:36:29.790 --> 00:36:35.195 align:start position:30% line:-2
それではこの４行目を
再実行したいと思います

00:36:35.295 --> 00:36:40.534 align:start position:18% line:-2
停止ボタンを押して
Playgroundをリセットします

00:36:44.405 --> 00:36:50.911 align:start position:23% line:-2
インラインで結果を表示してから
全体を再実行させます

00:36:54.047 --> 00:36:55.148 align:start position:36% line:-1
そして ついに…

00:36:55.249 --> 00:37:02.589 align:start position:43% line:-1
(拍手)

00:36:55.249 --> 00:37:02.589 align:start position:43% line:-1
(拍手)

00:37:02.689 --> 00:37:05.993 align:start position:30% line:-1
ついに鍵盤が現れました

00:37:06.093 --> 00:37:11.965 align:start position:21% line:-2
これで教え子には音高表記と併せて
鍵盤も見せることができます

00:37:15.536 --> 00:37:21.775 align:start position:27% line:-2
それでは今回 学んだことを
振り返ってみましょう

00:37:25.345 --> 00:37:26.580 align:start position:36% line:-1
チベットからは―

00:37:26.680 --> 00:37:32.719 align:start position:23% line:-2
レイアウトやマークアップ構文の
説明がありました

00:37:33.120 --> 00:37:37.758 align:start position:21% line:-2
アレックスはステップ実行について
教えてくれました

00:37:37.858 --> 00:37:43.063 align:start position:2% line:-2
私からはCustomPlaygroundDisplay
Convertibleをご紹介しました

00:37:43.864 --> 00:37:48.535 align:start position:30% line:-2
今回 お聴きいただいた
セッションの内容が

00:37:48.635 --> 00:37:52.773 align:start position:25% line:-1
皆さんのお役に立てば幸いです

00:37:53.841 --> 00:37:55.008 align:start position:41% line:-1
来年には―

00:37:55.108 --> 00:37:59.813 align:start position:16% line:-2
全プロジェクトがPlaygroundを
活用していることを願います

00:38:03.083 --> 00:38:06.954 align:start position:32% line:-2
質問があれば
いつでもラボへどうぞ

00:38:07.354 --> 00:38:08.355 align:start position:41% line:-1
では また

00:38:08.455 --> 00:38:13.260 align:start position:43% line:-1
(拍手)
