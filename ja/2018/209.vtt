WEBVTT

00:00:07.140 --> 00:00:16.116 align:start position:43% line:-1
(音楽)

00:00:21.788 --> 00:00:28.228 align:start position:43% line:-1
(拍手)

00:00:29.530 --> 00:00:31.765 align:start position:32% line:-1
どうも 私はアリです

00:00:31.865 --> 00:00:35.002 align:start position:30% line:-1
同僚のクリスとジェスと

00:00:35.102 --> 00:00:38.939 align:start position:23% line:-2
macOS Mojaveの
Cocoaの新機能を説明します

00:00:40.841 --> 00:00:44.745 align:start position:27% line:-2
AppKitの新機能の話を
昨日しましたが

00:00:44.845 --> 00:00:48.115 align:start position:32% line:-1
今日も様々な機能や―

00:00:48.215 --> 00:00:50.817 align:start position:27% line:-1
APIの改良点も紹介します

00:00:50.918 --> 00:00:55.856 align:start position:27% line:-2
ダークモードや
Layer Backing

00:00:55.956 --> 00:00:58.192 align:start position:32% line:-2
クイックアクションの
カスタムです

00:00:58.792 --> 00:01:03.630 align:start position:29% line:-2
では まずは
我らが誇るAPIの話です

00:00:58.792 --> 00:01:03.630 align:start position:29% line:-2
では まずは
我らが誇るAPIの話です

00:01:03.730 --> 00:01:09.036 align:start position:29% line:-2
我々は機能的で力強い
APIを目指してきました

00:01:09.703 --> 00:01:14.174 align:start position:18% line:-2
その思いの下で
Objective-CやSwiftの

00:01:14.274 --> 00:01:16.810 align:start position:32% line:-1
改善に努めてきました

00:01:16.910 --> 00:01:21.748 align:start position:25% line:-2
AppKitや
Foundationに限らず

00:01:21.849 --> 00:01:25.419 align:start position:25% line:-1
UIKitにも対応しています

00:01:26.720 --> 00:01:31.525 align:start position:20% line:-2
APIを Objective-Cに
完全にソース互換させ

00:01:31.625 --> 00:01:37.130 align:start position:23% line:-2
将来的にはSwiftでの利用も
目指しています

00:01:37.764 --> 00:01:41.201 align:start position:36% line:-2
APIの改良点を
見ていきましょう

00:01:43.170 --> 00:01:47.441 align:start position:36% line:-2
まずは文字列型の
アップデートです

00:01:48.208 --> 00:01:50.611 align:start position:27% line:-1
前回は列挙型を紹介しました

00:01:50.711 --> 00:01:54.081 align:start position:38% line:-2
関連する定数を
まとめる方法で

00:01:54.181 --> 00:01:57.751 align:start position:29% line:-2
APIの文字列型の扱いが
明確になります

00:01:58.785 --> 00:02:00.120 align:start position:39% line:-1
例えば１行目

00:01:58.785 --> 00:02:00.120 align:start position:39% line:-1
例えば１行目

00:02:00.220 --> 00:02:03.423 align:start position:23% line:-2
NS STRING ENUMと
宣言します

00:02:03.524 --> 00:02:08.628 align:start position:32% line:-2
これは 拡張性のない
フレームワークの

00:02:08.729 --> 00:02:12.332 align:start position:34% line:-2
値を指定するための
列挙型です

00:02:12.432 --> 00:02:15.903 align:start position:23% line:-2
次にNS EXTENSIBLE
STRING ENUMです

00:02:16.003 --> 00:02:21.842 align:start position:27% line:-2
これで列挙型を宣言し
ボックスの値が指定できます

00:02:21.942 --> 00:02:25.512 align:start position:30% line:-2
他のフレームワークでも
使えます

00:02:26.647 --> 00:02:30.017 align:start position:32% line:-2
改良点は２つで
１つ目はシンプルです

00:02:30.117 --> 00:02:36.056 align:start position:27% line:-2
今紹介した２つの文字列を
類似のものに置き換えました

00:02:36.156 --> 00:02:40.961 align:start position:29% line:-2
これは
ノーオペレーション命令で

00:02:41.061 --> 00:02:44.498 align:start position:36% line:-2
コードなどに
変化はありません

00:02:44.598 --> 00:02:46.633 align:start position:23% line:-1
次はNSImageNameです

00:02:46.767 --> 00:02:51.872 align:start position:29% line:-2
列挙型に代わる
最も重要な変化となります

00:02:51.972 --> 00:02:54.975 align:start position:21% line:-2
NS SWIFT BRIDGED
TYPEDEFと

00:02:55.075 --> 00:02:57.411 align:start position:27% line:-1
Typedefを宣言します

00:02:57.578 --> 00:03:00.247 align:start position:23% line:-1
Swiftなら こんな具合です

00:02:57.578 --> 00:03:00.247 align:start position:23% line:-1
Swiftなら こんな具合です

00:03:00.814 --> 00:03:04.618 align:start position:23% line:-1
Swift 4では構造体になり

00:03:04.718 --> 00:03:07.721 align:start position:34% line:-2
このように列挙型を
宣言します

00:03:07.821 --> 00:03:14.094 align:start position:21% line:-2
Swift 4.2では昔ながらの
Typealiasを使います

00:03:14.194 --> 00:03:15.262 align:start position:38% line:-1
シンプルですね

00:03:15.896 --> 00:03:17.931 align:start position:32% line:-1
なぜこれをするのか？

00:03:18.031 --> 00:03:20.267 align:start position:32% line:-1
コールサイトの例です

00:03:22.836 --> 00:03:28.275 align:start position:27% line:-2
Swift 4では文字列に
NSImageを使って

00:03:28.375 --> 00:03:29.743 align:start position:34% line:-1
名前を表示できます

00:03:29.843 --> 00:03:34.715 align:start position:23% line:-2
文字列を選び
NSImage.Nameを用い

00:03:34.815 --> 00:03:37.751 align:start position:20% line:-2
さらにNSImage namedと
します

00:03:37.851 --> 00:03:42.689 align:start position:27% line:-2
NSImage.Nameを
繰り返すのは面倒ですね

00:03:42.823 --> 00:03:46.093 align:start position:25% line:-1
次に Swift 4.2です

00:03:46.193 --> 00:03:48.495 align:start position:20% line:-1
NSImage.Nameは重複せず

00:03:48.595 --> 00:03:52.232 align:start position:34% line:-2
より合理的で
ムダが少ないですね

00:03:52.332 --> 00:03:57.171 align:start position:25% line:-2
こちらのTypedefの方が
普遍的な値です

00:03:57.638 --> 00:04:01.108 align:start position:43% line:-1
(拍手)

00:03:57.638 --> 00:04:01.108 align:start position:43% line:-1
(拍手)

00:04:01.208 --> 00:04:03.477 align:start position:32% line:-1
皆さんの意見を聞き―

00:04:04.511 --> 00:04:09.183 align:start position:32% line:-2
こちらが適していると
確信を得ました

00:04:09.283 --> 00:04:12.219 align:start position:29% line:-2
値とは
フレームワークに関わらず

00:04:12.319 --> 00:04:14.955 align:start position:32% line:-1
普遍的であるものです

00:04:15.055 --> 00:04:18.659 align:start position:32% line:-2
画像や色 自動保存の
名前も同様ですから

00:04:18.759 --> 00:04:21.028 align:start position:29% line:-1
普遍的な方が適しています

00:04:21.128 --> 00:04:27.167 align:start position:27% line:-2
この新機能があっても
API独自の宣言が使えます

00:04:27.267 --> 00:04:29.770 align:start position:25% line:-1
NSImageの宣言方法です

00:04:29.870 --> 00:04:33.941 align:start position:23% line:-2
NSImage.Nameの話が
先ほど出ましたが

00:04:34.041 --> 00:04:36.210 align:start position:30% line:-1
ここでもまた出てきます

00:04:36.410 --> 00:04:38.912 align:start position:34% line:-1
３種類のリストです

00:04:39.012 --> 00:04:44.017 align:start position:32% line:-2
これは実に多くの型で
用いられているのです

00:04:45.352 --> 00:04:50.724 align:start position:29% line:-2
まだまだあります
多くの型が変更になります

00:04:53.527 --> 00:04:56.196 align:start position:30% line:-1
次はプレフィックスです

00:04:56.296 --> 00:05:00.634 align:start position:29% line:-2
今まで サフィックスから
移行してきました

00:04:56.296 --> 00:05:00.634 align:start position:29% line:-2
今まで サフィックスから
移行してきました

00:05:00.734 --> 00:05:05.005 align:start position:21% line:-2
数年来 Objective-Cは
プレフィックスを用いています

00:05:05.105 --> 00:05:10.511 align:start position:29% line:-2
グループに名前をつけたり
見つけやすくなったり

00:05:10.611 --> 00:05:12.880 align:start position:27% line:-1
Swiftが容易になります

00:05:13.480 --> 00:05:15.148 align:start position:34% line:-1
例を見てみましょう

00:05:16.717 --> 00:05:19.686 align:start position:20% line:-1
macOS 10.13のSDKには

00:05:19.786 --> 00:05:21.688 align:start position:21% line:-2
NSLineJoinStyleと
出てきます

00:05:21.788 --> 00:05:24.057 align:start position:27% line:-2
macOS 10.14では
こうなります

00:05:24.158 --> 00:05:30.731 align:start position:12% line:-2
MiterLineJoinStyleが
LineJoinStyleMiterとなり

00:05:30.831 --> 00:05:35.235 align:start position:25% line:-2
Swiftのプレフィックスが
変化しました

00:05:35.335 --> 00:05:38.672 align:start position:16% line:-2
MiterLineJoinStyleが
Miterにです

00:05:38.772 --> 00:05:41.909 align:start position:30% line:-2
この型を
繰り返す必要がなくなり

00:05:42.009 --> 00:05:44.678 align:start position:36% line:-2
コールサイトも
簡潔になりました

00:05:44.778 --> 00:05:47.314 align:start position:32% line:-1
思わずニッコリですね

00:05:48.015 --> 00:05:49.283 align:start position:43% line:-1
(拍手)

00:05:49.383 --> 00:05:50.117 align:start position:45% line:-1
どうも

00:05:51.084 --> 00:05:56.156 align:start position:30% line:-2
そして 他の型でも
同様のことを行いました

00:05:56.256 --> 00:05:58.325 align:start position:38% line:-1
型のリストです

00:06:00.460 --> 00:06:02.796 align:start position:30% line:-1
次はプロトコルの話です

00:06:03.564 --> 00:06:06.567 align:start position:29% line:-2
かつては
NSObjectといった

00:06:06.667 --> 00:06:10.771 align:start position:32% line:-2
非形式のプロトコルを
使っていました

00:06:10.871 --> 00:06:14.675 align:start position:32% line:-2
以来 オプショナルな
機能を加え

00:06:14.775 --> 00:06:17.578 align:start position:36% line:-2
形式プロトコルに
移行してきました

00:06:17.678 --> 00:06:21.849 align:start position:36% line:-2
その例を１つ
お見せしましょう

00:06:23.183 --> 00:06:27.387 align:start position:20% line:-1
validateMenuItemで

00:06:27.487 --> 00:06:31.158 align:start position:27% line:-2
macOS 10.13の
非形式プロトコルの機能です

00:06:31.258 --> 00:06:35.496 align:start position:14% line:-2
形式プロトコルでは
NSMenuItemValidation

00:06:35.596 --> 00:06:40.767 align:start position:16% line:-2
Swiftの表示はNSObjectから
形式プロトコルに変わります

00:06:40.868 --> 00:06:45.906 align:start position:11% line:-2
Swift 4.2では
NSMenuItemValidationです

00:06:46.006 --> 00:06:51.745 align:start position:27% line:-2
このプロトコルに従った
オブジェクトと宣言されます

00:06:51.845 --> 00:06:55.649 align:start position:30% line:-2
他の多くのAPIで
同様のことを行いました

00:06:55.749 --> 00:06:59.853 align:start position:27% line:-2
AppKitに追加した
形式プロトコルのリストです

00:06:59.953 --> 00:07:02.523 align:start position:36% line:-2
色やフォントの
切り替えといった

00:06:59.953 --> 00:07:02.523 align:start position:36% line:-2
色やフォントの
切り替えといった

00:07:02.623 --> 00:07:07.661 align:start position:14% line:-2
NSEditorや
NSEditorRegistration

00:07:07.761 --> 00:07:10.631 align:start position:29% line:-1
形式プロトコルの一覧です

00:07:11.899 --> 00:07:15.035 align:start position:29% line:-2
次はインスタンス変数への
アクセスです

00:07:15.702 --> 00:07:19.106 align:start position:30% line:-1
現在 我々のAPIでは

00:07:19.206 --> 00:07:22.376 align:start position:32% line:-2
インスタンス変数は
ほぼプライベートです

00:07:22.476 --> 00:07:27.915 align:start position:25% line:-2
しかし 古いAppKitでは
宣言のされ方次第で

00:07:28.015 --> 00:07:33.520 align:start position:29% line:-2
インスタンス変数に
直接アクセスできるのです

00:07:33.620 --> 00:07:38.325 align:start position:30% line:-2
お気付きでなかった方は
試さないでください

00:07:38.425 --> 00:07:42.296 align:start position:30% line:-2
自分で書いたのではない
古いコードが

00:07:42.396 --> 00:07:44.565 align:start position:34% line:-2
インスタンス変数を
直接 使うのです

00:07:44.665 --> 00:07:49.203 align:start position:29% line:-2
今後は こういった現象に
もう少し注意して

00:07:49.303 --> 00:07:50.938 align:start position:34% line:-1
非推奨していきます

00:07:51.038 --> 00:07:55.108 align:start position:29% line:-2
直接インスタンス変数に
アクセスした際の警告です

00:07:55.209 --> 00:07:57.678 align:start position:29% line:-1
次回の更新で削除されます

00:07:57.778 --> 00:08:01.515 align:start position:30% line:-2
このような警告が出たら
修正してください

00:07:57.778 --> 00:08:01.515 align:start position:30% line:-2
このような警告が出たら
修正してください

00:08:02.282 --> 00:08:07.487 align:start position:30% line:-2
直接アクセスするより
修正はよっぽど簡単です

00:08:07.588 --> 00:08:12.159 align:start position:27% line:-2
ゲッターを呼ぶか
プロパティに行ってください

00:08:12.259 --> 00:08:18.098 align:start position:27% line:-2
理由があってのアクセスなら
我々に知らせてください

00:08:18.866 --> 00:08:22.102 align:start position:32% line:-2
非推奨の話が出たので
お話しします

00:08:23.337 --> 00:08:25.672 align:start position:32% line:-1
非推奨公式ソフトです

00:08:25.873 --> 00:08:30.744 align:start position:27% line:-2
多くのAPIが非推奨になり
代替が提案されています

00:08:30.878 --> 00:08:35.849 align:start position:27% line:-2
緊急でない場合は
手順を踏んで非推奨にします

00:08:35.948 --> 00:08:40.154 align:start position:29% line:-2
リリースノートを出すなど
非推奨の勧告をし

00:08:40.254 --> 00:08:42.623 align:start position:30% line:-1
その後 非推奨にします

00:08:42.722 --> 00:08:44.725 align:start position:34% line:-1
混乱を防ぐためです

00:08:44.825 --> 00:08:48.362 align:start position:29% line:-2
一方 公式に非推奨にする
方法があります

00:08:48.462 --> 00:08:50.030 align:start position:36% line:-1
例を見せましょう

00:08:50.697 --> 00:08:53.634 align:start position:30% line:-1
非推奨の記号があります

00:08:53.734 --> 00:08:57.004 align:start position:25% line:-2
NSBoxOldStyleは
非推奨され

00:08:57.104 --> 00:09:00.140 align:start position:27% line:-1
非推奨と明記されていますね

00:08:57.104 --> 00:09:00.140 align:start position:27% line:-1
非推奨と明記されていますね

00:09:00.240 --> 00:09:03.911 align:start position:14% line:-2
バージョンナンバーは
API TO BE DEPRECATED

00:09:04.745 --> 00:09:10.951 align:start position:27% line:-2
コンパイラに非推奨の警告を
出さないようにしています

00:09:11.051 --> 00:09:17.424 align:start position:25% line:-2
もし この記号をXcodeや
新しいコードで用いたら

00:09:17.524 --> 00:09:22.029 align:start position:29% line:-2
警告を受け
代替の記号が提示されます

00:09:22.129 --> 00:09:24.665 align:start position:30% line:-1
Swiftでも同様です

00:09:24.765 --> 00:09:29.503 align:start position:21% line:-2
バージョンナンバー100000に
注目してください

00:09:29.603 --> 00:09:33.507 align:start position:29% line:-2
これは遠い将来発売される
SDKではなく

00:09:33.607 --> 00:09:37.911 align:start position:32% line:-2
プレースホルダ番号で
この機能を示します

00:09:40.113 --> 00:09:43.150 align:start position:29% line:-1
公式の非推奨の他の例です

00:09:43.717 --> 00:09:45.986 align:start position:34% line:-1
これを見てください

00:09:46.086 --> 00:09:50.757 align:start position:12% line:-2
MiterLineJoinStyleは
LineJoinStyleMiterになり

00:09:50.858 --> 00:09:54.628 align:start position:16% line:-2
Objective-Cのソースコードは
互換性があります

00:09:54.728 --> 00:09:58.632 align:start position:29% line:-2
では 自分がリネームした
古い記号は？

00:09:58.732 --> 00:10:04.671 align:start position:12% line:-2
API TO BE DEPRECATEDが
古い記号には使われ

00:09:58.732 --> 00:10:04.671 align:start position:12% line:-2
API TO BE DEPRECATEDが
古い記号には使われ

00:10:04.771 --> 00:10:10.878 align:start position:29% line:-2
新たに使おうとすると
警告が出るようになります

00:10:10.978 --> 00:10:16.016 align:start position:23% line:-2
しかしObjective-Cの
ソースコードを乱さないため

00:10:16.116 --> 00:10:18.886 align:start position:30% line:-1
既存のものは残されます

00:10:21.355 --> 00:10:26.093 align:start position:27% line:-2
こういった対象になる記号が
多かったため

00:10:26.193 --> 00:10:29.763 align:start position:30% line:-2
多くのAPIが非推奨と
記されています

00:10:29.863 --> 00:10:34.268 align:start position:29% line:-2
多くはプレフィックスへの
移行のためで

00:10:34.368 --> 00:10:39.573 align:start position:27% line:-2
新機能への転換のため
非推奨にしたものもあります

00:10:39.673 --> 00:10:44.178 align:start position:27% line:-2
あとで話す ダークモードが
いい例です

00:10:45.946 --> 00:10:48.782 align:start position:29% line:-2
最後は
セキュアコーディングです

00:10:49.082 --> 00:10:50.984 align:start position:21% line:-1
OS X 10.8とiOS 6で

00:10:51.084 --> 00:10:56.256 align:start position:30% line:-2
セキュアコーディングを
復活させました

00:10:56.356 --> 00:10:58.826 align:start position:29% line:-1
これによりアーカイブの際

00:10:58.926 --> 00:11:02.663 align:start position:32% line:-2
クラスを特定するのに
役立ちます

00:10:58.926 --> 00:11:02.663 align:start position:32% line:-2
クラスを特定するのに
役立ちます

00:11:02.763 --> 00:11:07.501 align:start position:27% line:-2
エラーがあった場合は
アーカイブに入れられません

00:11:08.001 --> 00:11:11.772 align:start position:30% line:-2
我々の
セキュアコーディングは

00:11:12.172 --> 00:11:14.708 align:start position:29% line:-1
オプショナルな機能でした

00:11:14.808 --> 00:11:19.913 align:start position:30% line:-2
しかし新しいAPIでは
デフォルトにできます

00:11:20.013 --> 00:11:22.883 align:start position:27% line:-1
エラーリターンも得られます

00:11:22.983 --> 00:11:27.354 align:start position:32% line:-2
エラーリターンは
あった方がいいですね

00:11:27.454 --> 00:11:31.558 align:start position:27% line:-2
新APIはエラーリターンが
デフォルトです

00:11:32.659 --> 00:11:36.930 align:start position:29% line:-2
一番興味深い
APIをお見せしましょう

00:11:37.030 --> 00:11:39.833 align:start position:16% line:-1
NSKeyedUnarchiverです

00:11:39.933 --> 00:11:45.172 align:start position:18% line:-2
keyedUnarchiverを作り
エラーを返します

00:11:45.672 --> 00:11:49.143 align:start position:30% line:-2
他にも２つのメソッドが
適用されます

00:11:49.243 --> 00:11:51.578 align:start position:21% line:-2
unarchivedObject
(ofClasses fromと

00:11:51.678 --> 00:11:54.081 align:start position:21% line:-2
unarchivedObject
(ofClassfromです

00:11:54.181 --> 00:11:57.718 align:start position:30% line:-2
これらはオブジェクトを
安全に

00:11:57.818 --> 00:12:02.756 align:start position:29% line:-2
アンアーカイブし
問題時にエラーを返します

00:11:57.818 --> 00:12:02.756 align:start position:29% line:-2
アンアーカイブし
問題時にエラーを返します

00:12:02.856 --> 00:12:08.128 align:start position:32% line:-2
２つめのメソッドです
かなりゴテゴテですね

00:12:08.228 --> 00:12:14.001 align:start position:25% line:-2
これでSwiftがリターンの
タイプを識別できます

00:12:14.101 --> 00:12:16.637 align:start position:27% line:-1
Swiftの得意分野ですね

00:12:16.737 --> 00:12:20.941 align:start position:34% line:-2
注意してほしいのは
これらのすべてが

00:12:21.041 --> 00:12:24.011 align:start position:16% line:-2
macOS 10.13やiOS 11に
対応することです

00:12:24.111 --> 00:12:27.481 align:start position:27% line:-2
古いバージョンのSDKでも
利用可能です

00:12:28.782 --> 00:12:32.519 align:start position:36% line:-2
一覧のメソッドが
入れ替わります

00:12:33.086 --> 00:12:38.392 align:start position:14% line:-2
macOS 10.14やiOS 12では
これらは非推奨になります

00:12:38.492 --> 00:12:42.496 align:start position:29% line:-2
セキュアコーディングでは
ないため

00:12:42.596 --> 00:12:46.333 align:start position:34% line:-2
通常の手順を踏まず
非推奨にします

00:12:46.433 --> 00:12:50.404 align:start position:30% line:-2
セキュアコーディングを
推奨するためです

00:12:52.439 --> 00:12:55.876 align:start position:14% line:-2
次にValue Transformerに
ついて

00:12:55.976 --> 00:12:58.412 align:start position:16% line:-1
NSValueTransformerは

00:12:58.512 --> 00:13:01.849 align:start position:32% line:-2
自動的に値を変換する
クラスです

00:12:58.512 --> 00:13:01.849 align:start position:32% line:-2
自動的に値を変換する
クラスです

00:13:01.949 --> 00:13:07.521 align:start position:7% line:-2
unarchiveFromDataと
keyedUnarchivedFromDataで

00:13:07.621 --> 00:13:12.226 align:start position:29% line:-2
アーカイブをロックしたり
解除したりします

00:13:12.326 --> 00:13:15.662 align:start position:34% line:-2
思ったように
機能しなかったので

00:13:15.762 --> 00:13:19.633 align:start position:29% line:-2
非推奨し
新しいものに置き換えます

00:13:19.733 --> 00:13:23.103 align:start position:9% line:-2
安全にアンアーカイブする
FromDataTransformerName

00:13:23.203 --> 00:13:25.806 align:start position:30% line:-1
こちらを使ってください

00:13:27.407 --> 00:13:30.511 align:start position:30% line:-2
さらに
セキュアコーディングを

00:13:30.611 --> 00:13:33.447 align:start position:30% line:-2
多くのAppKitにも
適用していきます

00:13:33.547 --> 00:13:35.916 align:start position:27% line:-1
NSAppearanceは

00:13:36.016 --> 00:13:40.120 align:start position:30% line:-2
新しいですが
かなり利用されています

00:13:40.220 --> 00:13:44.825 align:start position:23% line:-2
ダークモードや
他のAppKitの機能にもです

00:13:44.925 --> 00:13:48.529 align:start position:30% line:-2
セキュアコーディングを
導入したAPIの

00:13:48.629 --> 00:13:50.330 align:start position:36% line:-1
リストになります

00:13:51.098 --> 00:13:52.799 align:start position:38% line:-1
最後にもう１つ

00:13:52.900 --> 00:13:57.838 align:start position:12% line:-2
木曜のセッション
“Data You Can Trust”で

00:13:57.938 --> 00:14:03.143 align:start position:27% line:-2
堅固で安全なコーディングや
アーカイブの話をします

00:13:57.938 --> 00:14:03.143 align:start position:27% line:-2
堅固で安全なコーディングや
アーカイブの話をします

00:14:03.243 --> 00:14:06.647 align:start position:36% line:-2
木曜の朝９時に
お待ちしています

00:14:07.881 --> 00:14:12.920 align:start position:29% line:-2
ここからはAppKitの
新機能の話に移ります

00:14:13.020 --> 00:14:15.689 align:start position:32% line:-1
クリスを呼びましょう

00:14:16.190 --> 00:14:21.261 align:start position:43% line:-1
(拍手)

00:14:21.395 --> 00:14:22.329 align:start position:45% line:-1
どうも

00:14:22.429 --> 00:14:26.066 align:start position:36% line:-2
ダークモードは
注目の新機能です

00:14:26.166 --> 00:14:29.803 align:start position:36% line:-2
もうご存知の人も
いると思いますが

00:14:29.903 --> 00:14:31.471 align:start position:38% line:-1
見てみましょう

00:14:31.839 --> 00:14:35.909 align:start position:29% line:-2
すばらしいアートワークの
システムですね

00:14:36.009 --> 00:14:38.946 align:start position:34% line:-2
インターフェイスの
見た目がよくなり

00:14:39.046 --> 00:14:41.048 align:start position:29% line:-1
コンテンツが引き立ちます

00:14:41.148 --> 00:14:44.251 align:start position:30% line:-2
さて
これを導入する方法です

00:14:45.452 --> 00:14:47.721 align:start position:34% line:-1
第一段階は簡単です

00:14:47.821 --> 00:14:52.226 align:start position:21% line:-2
macOS 10.14のSDKに
リンクします

00:14:52.326 --> 00:14:56.497 align:start position:29% line:-2
美しいアプリケーションを
作るのに 多くの場合は

00:14:56.597 --> 00:14:58.465 align:start position:30% line:-1
これだけでは不十分です

00:14:58.565 --> 00:15:04.404 align:start position:27% line:-2
次に色を設定した値の箇所を
アプリケーション内で探し

00:14:58.565 --> 00:15:04.404 align:start position:27% line:-2
次に色を設定した値の箇所を
アプリケーション内で探し

00:15:04.505 --> 00:15:08.008 align:start position:34% line:-2
アピアランス対応の
色に置き換えます

00:15:08.542 --> 00:15:13.714 align:start position:30% line:-2
AppKitは
ほとんどのUIに対応し

00:15:13.814 --> 00:15:19.253 align:start position:27% line:-2
現状のアピアランスに準じた
カラーシステムを提供します

00:15:19.353 --> 00:15:23.490 align:start position:23% line:-2
macOS 10.14のものも
加えましょう

00:15:24.625 --> 00:15:27.027 align:start position:27% line:-1
システムの設定をしなくても

00:15:27.127 --> 00:15:31.465 align:start position:32% line:-2
ドキュメントモデルの
見た目も映えます

00:15:31.565 --> 00:15:35.335 align:start position:23% line:-2
Asset Catalogから
色を選べます

00:15:35.769 --> 00:15:38.739 align:start position:25% line:-1
Xcodeの色編集機能に行き

00:15:38.839 --> 00:15:44.845 align:start position:27% line:-2
右のサイドバーを使って
見た目や色の設定ができます

00:15:44.945 --> 00:15:49.683 align:start position:27% line:-2
ここでモードの明暗によって
色を選択します

00:15:49.783 --> 00:15:52.653 align:start position:30% line:-2
フォールバックカラーも
あります

00:15:54.688 --> 00:15:55.989 align:start position:43% line:-1
色と同様

00:15:56.089 --> 00:15:59.693 align:start position:34% line:-2
テンプレート画像も
見ていきましょう

00:16:00.260 --> 00:16:03.464 align:start position:34% line:-2
テンプレート画像は
モードに関わらず

00:16:03.564 --> 00:16:06.333 align:start position:30% line:-1
明るい色になっています

00:16:06.433 --> 00:16:11.939 align:start position:27% line:-2
グレーや黒のアートワークの
アプリケーションは

00:16:12.039 --> 00:16:15.976 align:start position:36% line:-2
ダークモードでは
映えませんでした

00:16:16.076 --> 00:16:21.849 align:start position:27% line:-2
そこで テンプレートを作り
カタログに追加できます

00:16:22.583 --> 00:16:26.053 align:start position:36% line:-2
ダークモードでも
制限することなく

00:16:26.153 --> 00:16:30.724 align:start position:27% line:-2
ダークモードで映える画像を
特定できます

00:16:30.824 --> 00:16:36.063 align:start position:27% line:-2
このアプリケーションで
北米はダークモードで夜です

00:16:36.163 --> 00:16:39.066 align:start position:27% line:-1
他のモードでは北米は昼です

00:16:41.668 --> 00:16:44.238 align:start position:27% line:-1
ダークモードの特徴の１つは

00:16:44.338 --> 00:16:47.107 align:start position:38% line:-2
デスクトップの
写真の処理です

00:16:47.207 --> 00:16:48.976 align:start position:36% line:-1
例を見せましょう

00:16:49.376 --> 00:16:54.581 align:start position:29% line:-2
システム環境設定は
ダークグレーに見えますが

00:16:54.681 --> 00:16:56.517 align:start position:32% line:-1
実際はもっと複雑です

00:16:56.683 --> 00:17:03.290 align:start position:27% line:-2
背景の砂丘には 青や
光やダークグレーがあります

00:16:56.683 --> 00:17:03.290 align:start position:27% line:-2
背景の砂丘には 青や
光やダークグレーがあります

00:17:03.390 --> 00:17:06.560 align:start position:32% line:-2
この写真に
平均色の長方形を重ね

00:17:06.660 --> 00:17:09.663 align:start position:38% line:-2
ダークブルーで
塗りつぶします

00:17:10.130 --> 00:17:14.233 align:start position:29% line:-2
インターフェイスの背景は
ダークグレーにしました

00:17:14.334 --> 00:17:16.336 align:start position:30% line:-1
ダークブルーも残ります

00:17:16.435 --> 00:17:20.140 align:start position:27% line:-2
ウインドウの内容を戻しても
変わりません

00:17:20.240 --> 00:17:22.910 align:start position:27% line:-1
デスクトップで映えるのです

00:17:23.777 --> 00:17:27.848 align:start position:30% line:-2
違う写真ではどうなるか
お見せしましょう

00:17:27.948 --> 00:17:32.686 align:start position:32% line:-2
もっと明るい紫や緑の
デスクトップの色が

00:17:32.786 --> 00:17:35.289 align:start position:30% line:-1
ウインドウに影響します

00:17:35.389 --> 00:17:39.259 align:start position:32% line:-2
赤い花の写真にしたら
もっと分かります

00:17:39.359 --> 00:17:43.864 align:start position:29% line:-2
デスクトップの暖かい色が
ウインドウに反映され

00:17:43.964 --> 00:17:46.500 align:start position:30% line:-2
インターフェイス全体が
変わります

00:17:47.334 --> 00:17:50.671 align:start position:34% line:-2
みなさんは
疑問に思うでしょう

00:17:50.771 --> 00:17:54.441 align:start position:36% line:-2
ウインドウ位置や
平均色を特定し

00:17:54.541 --> 00:17:57.778 align:start position:34% line:-2
変更するのは
大変じゃないかとね

00:17:57.878 --> 00:18:03.450 align:start position:27% line:-2
心配しなくても大丈夫
AppKitがしてくれます

00:17:57.878 --> 00:18:03.450 align:start position:27% line:-2
心配しなくても大丈夫
AppKitがしてくれます

00:18:04.184 --> 00:18:09.189 align:start position:29% line:-2
すでにご存知の
これらのクラスを使います

00:18:09.289 --> 00:18:12.593 align:start position:30% line:-2
ウインドウや
スクロールビューなどは

00:18:12.693 --> 00:18:15.896 align:start position:30% line:-2
何も変えずに
ダークモードで使えます

00:18:15.996 --> 00:18:19.867 align:start position:30% line:-2
カスタマイズしたければ
それも可能です

00:18:20.734 --> 00:18:23.136 align:start position:27% line:-1
背景のカラープロパティです

00:18:23.237 --> 00:18:27.474 align:start position:34% line:-2
そして 私が
特に紹介したいのが

00:18:27.574 --> 00:18:31.278 align:start position:32% line:-2
ここに挙げた４種類の
NSColorです

00:18:31.378 --> 00:18:36.116 align:start position:29% line:-2
これらは デスクトップの
写真と調和し

00:18:36.216 --> 00:18:40.420 align:start position:30% line:-2
インターフェイスの
役割によって変化します

00:18:41.088 --> 00:18:45.726 align:start position:30% line:-2
もう１つ紹介したいのが
NSBoxです

00:18:45.826 --> 00:18:50.063 align:start position:29% line:-2
ボックスのカスタマイズに
塗りつぶし機能が使えます

00:18:50.164 --> 00:18:53.500 align:start position:32% line:-2
NSColorや
他のカラーも使えます

00:18:53.600 --> 00:18:58.539 align:start position:29% line:-2
NSBoxでボックスを
きれいな色で塗れるのです

00:18:58.639 --> 00:19:01.775 align:start position:27% line:-1
他のクラスでは難しいですね

00:18:58.639 --> 00:19:01.775 align:start position:27% line:-1
他のクラスでは難しいですね

00:19:02.776 --> 00:19:07.714 align:start position:30% line:-2
もっとこだわる人には
別のクラスを紹介します

00:19:07.814 --> 00:19:09.750 align:start position:11% line:-1
“NSVisualEffectView”です

00:19:09.850 --> 00:19:12.519 align:start position:36% line:-2
マテリアルの
プロパティがあり

00:19:12.619 --> 00:19:16.757 align:start position:29% line:-2
背景に合わせた視覚効果を
決定できます

00:19:16.857 --> 00:19:19.226 align:start position:29% line:-1
色のブレンドをするのです

00:19:19.326 --> 00:19:24.231 align:start position:32% line:-2
使用された例を
いくつか見せましょう

00:19:24.331 --> 00:19:27.267 align:start position:27% line:-2
macOS 10.14には
もっとあります

00:19:27.367 --> 00:19:33.173 align:start position:27% line:-2
どんなインターフェイスにも
合ったマテリアルがあります

00:19:33.273 --> 00:19:38.345 align:start position:27% line:-2
過去のOSではダークか
ライトか明記されていました

00:19:38.445 --> 00:19:43.217 align:start position:32% line:-2
新しいモードでは
見え方が違ってきます

00:19:45.419 --> 00:19:48.489 align:start position:29% line:-2
そこで
アクセントカラーの話です

00:19:48.589 --> 00:19:52.693 align:start position:34% line:-2
これらのUIは
目を引くものですが

00:19:52.793 --> 00:19:56.130 align:start position:30% line:-2
それは色や
様々な要素のおかげです

00:19:56.230 --> 00:19:59.132 align:start position:27% line:-1
macOS 10.14には

00:19:59.233 --> 00:20:02.503 align:start position:34% line:-2
アクセントカラーを
多数追加しました

00:19:59.233 --> 00:20:02.503 align:start position:34% line:-2
アクセントカラーを
多数追加しました

00:20:02.603 --> 00:20:04.471 align:start position:32% line:-1
すばらしいでしょう？

00:20:04.805 --> 00:20:08.976 align:start position:36% line:-2
自分で作るなら…
拍手を待ってます

00:20:09.209 --> 00:20:13.146 align:start position:43% line:-1
(拍手)

00:20:13.247 --> 00:20:14.681 align:start position:45% line:-1
どうも

00:20:14.781 --> 00:20:16.817 align:start position:30% line:-1
これらのUIを作る時は

00:20:16.917 --> 00:20:20.521 align:start position:30% line:-2
モチーフも自分で作って
色を加えます

00:20:20.621 --> 00:20:25.392 align:start position:11% line:-2
以前はNSColor.
currentControlTintを使って

00:20:25.492 --> 00:20:29.630 align:start position:27% line:-2
システムがアクアか
グラファイトか選択しました

00:20:29.730 --> 00:20:33.801 align:start position:29% line:-2
今はこれより
もっと多くの色があります

00:20:33.901 --> 00:20:37.037 align:start position:12% line:-1
macOS 10.14ではNSColorの

00:20:37.137 --> 00:20:40.707 align:start position:16% line:-2
controlAccentColorを
推奨します

00:20:41.341 --> 00:20:45.212 align:start position:27% line:-2
NSColorは
アクセントカラーだけでなく

00:20:45.312 --> 00:20:47.181 align:start position:34% line:-1
他の機能も満載です

00:20:47.281 --> 00:20:51.084 align:start position:34% line:-2
UIの作成時
一番気にかけるのが

00:20:51.185 --> 00:20:55.222 align:start position:29% line:-2
ユーザインタラクションで
色が反映されるかです

00:20:55.322 --> 00:20:59.159 align:start position:14% line:-2
そこでwithSystemEffectを
導入しました

00:20:59.259 --> 00:21:03.397 align:start position:34% line:-2
起動時と非起動時の
効果を設定します

00:20:59.259 --> 00:21:03.397 align:start position:34% line:-2
起動時と非起動時の
効果を設定します

00:21:03.497 --> 00:21:07.468 align:start position:27% line:-2
将来的にはベースカラーから
新しい色を作り

00:21:07.568 --> 00:21:12.739 align:start position:27% line:-2
アピアランスに
加えられるようにしたいです

00:21:12.839 --> 00:21:15.776 align:start position:30% line:-1
そうすれば色を変える際

00:21:15.876 --> 00:21:18.445 align:start position:32% line:-2
自分で式を作る必要は
ありません

00:21:18.545 --> 00:21:21.482 align:start position:30% line:-1
インタラクションごとの

00:21:21.582 --> 00:21:24.117 align:start position:38% line:-2
複雑なコードも
必要ありません

00:21:24.451 --> 00:21:26.320 align:start position:30% line:-1
便利なAPIになります

00:21:28.622 --> 00:21:30.257 align:start position:36% line:-1
さらに色の話です

00:21:30.357 --> 00:21:35.362 align:start position:32% line:-2
コンテンツの明清色と
呼んでいるものです

00:21:35.896 --> 00:21:41.068 align:start position:27% line:-2
このモックアップにあるのは
一見 テキストだけですが

00:21:41.201 --> 00:21:44.071 align:start position:29% line:-1
いくつかの要素があります

00:21:45.772 --> 00:21:49.276 align:start position:32% line:-2
これは ユーザが
クリックする箇所です

00:21:49.376 --> 00:21:54.414 align:start position:29% line:-2
一般的なボーダーは
使いたくありませんでした

00:21:54.515 --> 00:21:58.652 align:start position:14% line:-2
macOS 10.14ならボーダーのない
ボタンにできます

00:21:58.752 --> 00:22:03.023 align:start position:27% line:-2
画像表示で
クリックできると認識します

00:21:58.752 --> 00:22:03.023 align:start position:27% line:-2
画像表示で
クリックできると認識します

00:22:03.724 --> 00:22:05.993 align:start position:38% line:-1
簡単な操作です

00:22:06.093 --> 00:22:08.228 align:start position:23% line:-2
NSButtonと
NSImageViewの総称が

00:22:08.328 --> 00:22:10.631 align:start position:14% line:-1
Content Tint Colorです

00:22:10.731 --> 00:22:15.569 align:start position:29% line:-2
好きな色や
色調の変更も設定できます

00:22:15.669 --> 00:22:20.841 align:start position:12% line:-2
これをInterface Builderに
組み込めます

00:22:21.141 --> 00:22:23.377 align:start position:34% line:-1
画像表示の設定です

00:22:23.477 --> 00:22:26.380 align:start position:34% line:-2
色調の選択は
右のサイドバーです

00:22:28.248 --> 00:22:33.453 align:start position:29% line:-2
macOS 10.14の
アピアランスに関する

00:22:33.554 --> 00:22:37.758 align:start position:21% line:-2
さらなるセッションが WWDCの
アプリケーションにあります

00:22:37.858 --> 00:22:39.459 align:start position:36% line:-1
ぜひご覧ください

00:22:40.561 --> 00:22:42.696 align:start position:36% line:-1
次のトピックです

00:22:42.796 --> 00:22:46.333 align:start position:11% line:-2
CocoaはLayer Backingなしに
語れません

00:22:47.334 --> 00:22:48.869 align:start position:38% line:-1
まずは確認です

00:22:48.969 --> 00:22:52.906 align:start position:16% line:-2
macOS 10.14で新しいSDKに
リンクすると

00:22:53.006 --> 00:22:56.677 align:start position:25% line:-2
AppKitは従来の
バッキングストアを使いません

00:22:56.777 --> 00:23:01.748 align:start position:16% line:-2
Core Animationのレイヤを
使います

00:22:56.777 --> 00:23:01.748 align:start position:16% line:-2
Core Animationのレイヤを
使います

00:23:02.416 --> 00:23:06.320 align:start position:30% line:-2
iOSユーザなら
親しみのある機能ですが

00:23:06.420 --> 00:23:08.922 align:start position:30% line:-1
詳しく見ていきましょう

00:23:09.022 --> 00:23:12.392 align:start position:34% line:-2
UIKitでの
ビューの関連図です

00:23:12.493 --> 00:23:15.062 align:start position:32% line:-1
とてもシンプルですね

00:23:15.162 --> 00:23:17.297 align:start position:30% line:-1
各ビューにレイヤが１つ

00:23:17.397 --> 00:23:21.969 align:start position:32% line:-2
ビュー間の親子関係も
表されています

00:23:22.936 --> 00:23:25.239 align:start position:23% line:-1
AppKitでのレイヤ関連図は

00:23:25.339 --> 00:23:29.476 align:start position:30% line:-2
ビュー階層のプロセスで
決められます

00:23:29.843 --> 00:23:35.616 align:start position:27% line:-2
複数のビューに対し
１つのレイヤを選択できます

00:23:35.716 --> 00:23:41.054 align:start position:29% line:-2
するとシステムやGPUの
メモリ消費を減らし

00:23:41.155 --> 00:23:45.425 align:start position:34% line:-2
ウインドウサーバの
負荷も軽減できます

00:23:45.559 --> 00:23:47.461 align:start position:32% line:-1
強調しておきたいのは

00:23:47.561 --> 00:23:51.165 align:start position:32% line:-2
ビュー階層の設定に
基づくということです

00:23:51.265 --> 00:23:53.400 align:start position:30% line:-1
だから変化できるのです

00:23:53.500 --> 00:24:00.040 align:start position:29% line:-2
iOSのような親子関係に
縛られることもありません

00:23:53.500 --> 00:24:00.040 align:start position:29% line:-2
iOSのような親子関係に
縛られることもありません

00:24:03.243 --> 00:24:07.681 align:start position:27% line:-2
ここでのプログラムとしての
大きな変化は

00:24:07.781 --> 00:24:12.052 align:start position:29% line:-2
wantsLayerを
使わなくてもいいことです

00:24:12.152 --> 00:24:16.890 align:start position:23% line:-2
macOS 10.14を使えば
AppKitがしてくれます

00:24:19.493 --> 00:24:21.028 align:start position:27% line:-1
macOS 10.14を…

00:24:21.228 --> 00:24:25.499 align:start position:43% line:-1
(拍手)

00:24:25.599 --> 00:24:29.636 align:start position:32% line:-2
このプロパティを使う
推奨すらしません

00:24:29.736 --> 00:24:33.574 align:start position:27% line:-2
“true”にすれば
ビューのレイヤが決まります

00:24:33.674 --> 00:24:36.310 align:start position:36% line:-2
最適化しなくとも
複数のビューが

00:24:36.410 --> 00:24:38.846 align:start position:27% line:-1
１つのレイヤに表示されます

00:24:38.946 --> 00:24:42.049 align:start position:36% line:-2
古いOSでは
必要な手順ですが

00:24:42.149 --> 00:24:44.718 align:start position:32% line:-2
無視して
飛ばすこともできます

00:24:45.752 --> 00:24:51.225 align:start position:23% line:-2
次に CALayerを使う際の
他のパターンを紹介します

00:24:51.325 --> 00:24:56.997 align:start position:25% line:-2
簡単なのは CALayerを
上書きするか

00:24:57.097 --> 00:24:59.333 align:start position:32% line:-2
デリゲートメソッドを
実行します

00:24:59.433 --> 00:25:02.836 align:start position:32% line:-2
NSViewには
様々な機能があるので

00:24:59.433 --> 00:25:02.836 align:start position:32% line:-2
NSViewには
様々な機能があるので

00:25:02.936 --> 00:25:05.572 align:start position:30% line:-2
そちらを
使った方がいいでしょう

00:25:06.840 --> 00:25:08.509 align:start position:29% line:-1
NSViewを使う場合は

00:25:08.609 --> 00:25:13.146 align:start position:27% line:-2
ダイナミックカラーの反映も
管理してくれます

00:25:13.247 --> 00:25:15.682 align:start position:34% line:-2
バッキングストアの
解像度も管理します

00:25:15.782 --> 00:25:18.752 align:start position:30% line:-2
レイヤメソッドと同様に
簡単なので

00:25:18.852 --> 00:25:22.956 align:start position:27% line:-2
ビューレベルでの
描画の上書きをお勧めします

00:25:24.625 --> 00:25:29.296 align:start position:30% line:-2
CALayerを使って
レイヤプロパティを

00:25:29.396 --> 00:25:31.465 align:start position:30% line:-1
更新することもあります

00:25:31.565 --> 00:25:35.435 align:start position:34% line:-2
その方が効果的で
作業も早いからです

00:25:35.536 --> 00:25:40.240 align:start position:32% line:-2
NSViewを使って
レイヤに上書きすれば

00:25:40.340 --> 00:25:44.177 align:start position:32% line:-2
drawRectでも
同じ効果が得られます

00:25:45.045 --> 00:25:50.617 align:start position:29% line:-2
レイヤとNSView
両方の手法が使えるのです

00:25:50.717 --> 00:25:55.823 align:start position:27% line:-2
レイヤにビューが１つの場合
レイヤのメソッドを使い

00:25:55.923 --> 00:26:00.694 align:start position:27% line:-2
他のビューもある場合は
drawRectを用います

00:25:55.923 --> 00:26:00.694 align:start position:27% line:-2
他のビューもある場合は
drawRectを用います

00:26:00.794 --> 00:26:04.765 align:start position:36% line:-2
両方使用した方が
いいわけです

00:26:05.332 --> 00:26:10.404 align:start position:23% line:-2
CGやAppKitのAPIでも
表現しきれないなら

00:26:10.504 --> 00:26:15.342 align:start position:20% line:-2
wantsUpdateLayerを
上書きします

00:26:15.442 --> 00:26:20.414 align:start position:21% line:-2
それで“true”と返ってきたら
レイヤを明示にします

00:26:22.916 --> 00:26:27.788 align:start position:11% line:-2
AppKitとCore Animationの
別の便利な利用法です

00:26:27.888 --> 00:26:33.093 align:start position:23% line:-2
NSViewsの基本的な用語で
インターフェイスを設定します

00:26:33.260 --> 00:26:36.663 align:start position:20% line:-2
NSImageViewとNSBox
NSTextFieldです

00:26:36.763 --> 00:26:39.700 align:start position:29% line:-2
複雑なインターフェイスの
設定には最適で

00:26:39.800 --> 00:26:44.338 align:start position:27% line:-2
表示にどんな技術を使っても
正確に起動します

00:26:45.539 --> 00:26:48.141 align:start position:16% line:-1
Layer Backingの変更点です

00:26:48.242 --> 00:26:51.812 align:start position:21% line:-2
これはmacOS 10.14では
もう使えません

00:26:51.912 --> 00:26:54.448 align:start position:20% line:-2
NSViewのlockFocusと
unlockFocusを使う場合

00:26:54.548 --> 00:26:57.985 align:start position:34% line:-2
直接ウインドウに
アクセスする場合は

00:26:58.085 --> 00:27:02.689 align:start position:25% line:-2
NSViewをサブクラスにし
drawRectを実行します

00:26:58.085 --> 00:27:02.689 align:start position:25% line:-2
NSViewをサブクラスにし
drawRectを実行します

00:27:02.790 --> 00:27:06.727 align:start position:34% line:-2
どちらのメソッドも
細心の注意を払い

00:27:06.827 --> 00:27:08.796 align:start position:30% line:-1
トラブルを避けましょう

00:27:08.896 --> 00:27:12.032 align:start position:21% line:-1
これはObjective-C用で

00:27:12.132 --> 00:27:14.735 align:start position:23% line:-1
Swift関連で話すのは変です

00:27:14.835 --> 00:27:20.107 align:start position:27% line:-2
Swiftではこのコードを
見たことがありませんから

00:27:20.240 --> 00:27:25.078 align:start position:27% line:-2
試して私を驚かせようなんて
しないでください

00:27:27.581 --> 00:27:31.251 align:start position:25% line:-2
Layer Backingの
もう１つの変化です

00:27:31.351 --> 00:27:34.288 align:start position:27% line:-2
NSOpenGLのクラスで
OpenGLで表示し

00:27:34.388 --> 00:27:36.657 align:start position:18% line:-1
macOS 10.14にリンクします

00:27:36.757 --> 00:27:41.828 align:start position:23% line:-2
MacでのOpenGLの技法は
少し違います

00:27:41.929 --> 00:27:44.364 align:start position:38% line:-1
何点かあります

00:27:44.464 --> 00:27:48.235 align:start position:14% line:-2
しかし重要なのはmacOS 10.14の
プラットフォームで

00:27:48.335 --> 00:27:50.838 align:start position:30% line:-2
OpenGLは
非推奨だということです

00:27:50.938 --> 00:27:56.009 align:start position:25% line:-2
NSOpenGLより
MTKViewをお勧めします

00:27:56.143 --> 00:28:00.914 align:start position:29% line:-2
Metalのセッションが
今日予定されています

00:27:56.143 --> 00:28:00.914 align:start position:29% line:-2
Metalのセッションが
今日予定されています

00:28:03.317 --> 00:28:08.322 align:start position:29% line:-2
最後の改良点はフォントの
アンチエイリアスです

00:28:08.422 --> 00:28:10.524 align:start position:34% line:-1
比較してみましょう

00:28:10.624 --> 00:28:12.860 align:start position:25% line:-1
左がmacOS 10.13で

00:28:12.960 --> 00:28:14.795 align:start position:23% line:-1
右がmacOS 10.14です

00:28:14.895 --> 00:28:18.699 align:start position:30% line:-2
ウインドウのテキストは
基本的に同じです

00:28:18.799 --> 00:28:23.203 align:start position:25% line:-2
しかしスケール因子48倍まで
拡大すると

00:28:23.303 --> 00:28:28.709 align:start position:14% line:-2
macOS 10.13はカラーフリンジが
用いられています

00:28:29.409 --> 00:28:33.413 align:start position:21% line:-2
一方 macOS 10.14では
使用されていません

00:28:33.514 --> 00:28:37.751 align:start position:30% line:-2
どんな大きさのパネルで
拡大しても

00:28:37.851 --> 00:28:39.686 align:start position:30% line:-1
テキストがぼやけません

00:28:40.521 --> 00:28:43.290 align:start position:29% line:-1
他にもいろいろありますが

00:28:43.390 --> 00:28:46.793 align:start position:34% line:-2
その説明はジェスに
代わりましょう

00:28:48.028 --> 00:28:52.032 align:start position:43% line:-1
(拍手)

00:28:52.132 --> 00:28:55.335 align:start position:36% line:-1
みなさん どうも

00:28:55.435 --> 00:28:59.773 align:start position:34% line:-2
まず ユーザ通知の
フレームワークです

00:28:59.873 --> 00:29:05.846 align:start position:14% line:-2
iOSにあったものを
macOS Mojaveにも導入しました

00:28:59.873 --> 00:29:05.846 align:start position:14% line:-2
iOSにあったものを
macOS Mojaveにも導入しました

00:29:07.948 --> 00:29:11.018 align:start position:34% line:-2
ユーザ通知の
管理を容易にします

00:29:11.118 --> 00:29:15.489 align:start position:21% line:-2
iOSと同様にアプリケーションが
作動するのです

00:29:15.589 --> 00:29:18.692 align:start position:25% line:-2
使うのは
NSApplicationの

00:29:18.792 --> 00:29:20.994 align:start position:14% line:-2
registerFor
RemoteNotificationsか

00:29:21.094 --> 00:29:25.632 align:start position:9% line:-2
userNotificationCenterの
requestAuthorizationです

00:29:27.601 --> 00:29:32.706 align:start position:30% line:-2
同時に関連するAPIを
非推奨にしました

00:29:32.806 --> 00:29:37.211 align:start position:9% line:-2
NSApplicationの
remoteNotificationTypeや

00:29:37.311 --> 00:29:38.278 align:start position:30% line:-1
OptionSetです

00:29:38.378 --> 00:29:41.582 align:start position:20% line:-2
registerForRemote
Notificationsや

00:29:41.682 --> 00:29:45.119 align:start position:14% line:-2
enabledRemote
NotificationTypesもです

00:29:45.219 --> 00:29:48.255 align:start position:16% line:-2
NSUserNotificationも
非推奨にしました

00:29:49.056 --> 00:29:51.625 align:start position:30% line:-1
SDKを再設定する際は

00:29:51.725 --> 00:29:54.728 align:start position:36% line:-2
フレームワークを
更新してください

00:29:56.497 --> 00:29:59.733 align:start position:23% line:-1
次にNSToolbarの話です

00:30:00.334 --> 00:30:04.004 align:start position:34% line:-2
ツールバーの中央に
アイテムを入れる際

00:30:04.104 --> 00:30:07.508 align:start position:32% line:-2
両サイドに
スペースが必要でした

00:30:07.608 --> 00:30:09.910 align:start position:34% line:-1
これには欠点があり

00:30:10.010 --> 00:30:14.681 align:start position:29% line:-2
さらにアイテムを入れると
押し出されてしまいます

00:30:14.781 --> 00:30:19.219 align:start position:25% line:-2
しかし NSToolbarの
新しいプロパティでは

00:30:19.319 --> 00:30:22.990 align:start position:30% line:-2
中央にしたいアイテムを
特定できます

00:30:23.090 --> 00:30:25.292 align:start position:30% line:-1
そして そのアイテムは

00:30:25.392 --> 00:30:30.197 align:start position:30% line:-2
他のアイテムが入っても
押し出されません

00:30:31.198 --> 00:30:34.001 align:start position:36% line:-2
他の改良点も
お伝えしましょう

00:30:35.736 --> 00:30:39.573 align:start position:27% line:-2
Auto Layoutが
アイテムのサイズを測ります

00:30:39.673 --> 00:30:43.143 align:start position:32% line:-2
最小値 最大値が
未設定なのが条件です

00:30:44.745 --> 00:30:47.981 align:start position:18% line:-2
この機能はmacOS 10.14のみ
対応しています

00:30:48.081 --> 00:30:53.921 align:start position:29% line:-2
ボタンのサイズを変える際
サイズが自動で測られます

00:30:59.860 --> 00:31:01.562 align:start position:18% line:-1
Interface Builderで

00:30:59.860 --> 00:31:01.562 align:start position:18% line:-1
Interface Builderで

00:31:01.662 --> 00:31:04.331 align:start position:9% line:-2
centeredItemIdentifierも
できます

00:31:04.431 --> 00:31:07.601 align:start position:30% line:-2
これが
インスペクタペインです

00:31:07.701 --> 00:31:11.004 align:start position:30% line:-2
一番下に
新しいボタンがあります

00:31:11.104 --> 00:31:14.408 align:start position:34% line:-2
ここをクリックする
だけでよく

00:31:14.508 --> 00:31:17.144 align:start position:25% line:-1
APIに戻る必要がないのです

00:31:17.244 --> 00:31:21.748 align:start position:27% line:-2
インターフェイスの
ほぼすべての設定ができます

00:31:21.849 --> 00:31:27.521 align:start position:18% line:-2
Interface Builderの
すばらしい新サポートは

00:31:27.621 --> 00:31:30.524 align:start position:29% line:-2
編集のための
NSGridViewです

00:31:30.624 --> 00:31:33.961 align:start position:30% line:-2
グリッドビューは
数年前に開発されました

00:31:34.061 --> 00:31:37.931 align:start position:34% line:-2
ビューをグリッドで
表示します

00:31:38.031 --> 00:31:40.500 align:start position:32% line:-1
例をお見せしましょう

00:31:40.601 --> 00:31:46.006 align:start position:29% line:-2
このレイアウトを設定する
制約はとても少ないです

00:31:46.106 --> 00:31:51.178 align:start position:25% line:-2
しかしNSGridViewで
もっと簡単に作れます

00:31:51.278 --> 00:31:55.182 align:start position:18% line:-2
Interface Builderの
新サポートです

00:31:55.282 --> 00:32:00.087 align:start position:18% line:-2
これはStoryboardファイルの
インターフェイスです

00:31:55.282 --> 00:32:00.087 align:start position:18% line:-2
これはStoryboardファイルの
インターフェイスです

00:32:00.187 --> 00:32:03.557 align:start position:27% line:-2
コントロールを選択し
グリッドビューを適用します

00:32:03.657 --> 00:32:08.295 align:start position:32% line:-2
そして 余白や
セルのそろえを調整し

00:32:08.395 --> 00:32:11.031 align:start position:30% line:-1
レイアウトしていきます

00:32:11.765 --> 00:32:17.504 align:start position:27% line:-2
表計算のように
セルにビューを入れられます

00:32:17.604 --> 00:32:22.209 align:start position:30% line:-2
列と行からセルを選び
プロパティを調整します

00:32:22.309 --> 00:32:25.879 align:start position:32% line:-2
下の２行のように
セルの結合もできます

00:32:26.480 --> 00:32:29.583 align:start position:30% line:-1
試しに列を選びましょう

00:32:29.683 --> 00:32:32.686 align:start position:32% line:-2
インスペクタペインは
このようになります

00:32:32.786 --> 00:32:38.158 align:start position:29% line:-2
この行のセルの位置と
上と下の余白を調整します

00:32:38.258 --> 00:32:42.763 align:start position:30% line:-2
サイズインスペクタで
行の幅を明示しなければ

00:32:42.863 --> 00:32:47.468 align:start position:29% line:-2
行のサイズは内容によって
自動的に決まります

00:32:48.936 --> 00:32:54.208 align:start position:27% line:-2
この機能のいい点は
過去のOSでも使える点です

00:32:54.308 --> 00:32:56.810 align:start position:18% line:-2
Interface Builderの
グリッドビューは

00:32:56.910 --> 00:33:00.881 align:start position:18% line:-2
macOS 10.13.4に戻しても
使えます

00:32:56.910 --> 00:33:00.881 align:start position:18% line:-2
macOS 10.13.4に戻しても
使えます

00:33:00.981 --> 00:33:05.385 align:start position:20% line:-2
セルの結合以外は
macOS 10.12でも使えます

00:33:05.485 --> 00:33:09.523 align:start position:23% line:-2
古いバージョンで
アプリケーションを設計する時も

00:33:09.623 --> 00:33:13.293 align:start position:30% line:-2
このすばらしい新機能が
使えるのです

00:33:15.062 --> 00:33:19.266 align:start position:18% line:-1
次はNSTextViewの改良点です

00:33:20.067 --> 00:33:22.569 align:start position:30% line:-2
新ファクトリメソッドは
数点です

00:33:22.669 --> 00:33:26.840 align:start position:23% line:-2
fieldEditorが
NSTextFieldと同様に

00:33:26.940 --> 00:33:29.776 align:start position:36% line:-2
テキストビューの
編集をします

00:33:29.877 --> 00:33:35.716 align:start position:27% line:-2
これによりテキストビューの
設定を簡単にします

00:33:36.150 --> 00:33:40.754 align:start position:34% line:-2
下の３つは
スクロールビューで

00:33:40.854 --> 00:33:43.724 align:start position:30% line:-1
一般的な使用ケースです

00:33:43.824 --> 00:33:46.226 align:start position:29% line:-1
さらに編集を加えたければ

00:33:46.326 --> 00:33:51.231 align:start position:32% line:-2
ドキュメントビューを
見てください

00:33:51.331 --> 00:33:53.333 align:start position:16% line:-2
Interface Builderでも
これらは可能で

00:33:53.433 --> 00:33:57.070 align:start position:25% line:-1
APIに戻る必要がありません

00:33:57.171 --> 00:34:02.042 align:start position:30% line:-2
４つすべてを示した
サンプルウインドウです

00:33:57.171 --> 00:34:02.042 align:start position:30% line:-2
４つすべてを示した
サンプルウインドウです

00:34:02.142 --> 00:34:07.214 align:start position:27% line:-2
テキストビューの
ミスコンフィグレーションは

00:34:07.314 --> 00:34:11.217 align:start position:25% line:-2
FieldEditorの
ファクトリメソッドで防げます

00:34:11.719 --> 00:34:15.621 align:start position:16% line:-2
scrollableTextViewは
テキストビューに使われます

00:34:15.722 --> 00:34:20.661 align:start position:30% line:-2
ポップオーバーなどの
補足テキストのためです

00:34:20.761 --> 00:34:24.264 align:start position:30% line:-2
下の２つはメイン文書の
テキストです

00:34:24.364 --> 00:34:28.502 align:start position:29% line:-2
左はリッチテキスト
右はプレーンテキストです

00:34:28.735 --> 00:34:33.407 align:start position:32% line:-2
何が違うのかと
疑問に思うでしょうね

00:34:33.507 --> 00:34:37.210 align:start position:30% line:-2
一番は システム設定の
心配が要りません

00:34:37.311 --> 00:34:41.782 align:start position:29% line:-2
ダークモードの方が
もっと分かりやすいですね

00:34:42.416 --> 00:34:45.719 align:start position:30% line:-2
リッチテキストの背景は
白のままですが

00:34:45.819 --> 00:34:49.857 align:start position:27% line:-2
プレーンテキストは黒になり
システムにマッチします

00:34:49.956 --> 00:34:52.025 align:start position:29% line:-1
このファクトリメソッドで

00:34:52.125 --> 00:34:56.496 align:start position:32% line:-2
システムの他の仕様と
一貫性が出ます

00:34:58.599 --> 00:35:04.004 align:start position:29% line:-2
他の改良点としては
テキストの変更メソッドの

00:34:58.599 --> 00:35:04.004 align:start position:29% line:-2
他の改良点としては
テキストの変更メソッドの

00:35:04.104 --> 00:35:06.073 align:start position:21% line:-2
PerformValidated
Replacementです

00:35:06.173 --> 00:35:12.012 align:start position:27% line:-2
テキストビューでの
テキストの扱いが簡単になり

00:35:12.112 --> 00:35:16.383 align:start position:29% line:-2
ユーザ自身で変更した際の
対応もします

00:35:16.783 --> 00:35:20.487 align:start position:32% line:-2
デリゲートメソッドも
実行してくれます

00:35:20.587 --> 00:35:25.959 align:start position:30% line:-2
何よりも 入力文字列が
特定されていない属性は

00:35:26.059 --> 00:35:30.030 align:start position:20% line:-2
typingAttributesで
自動的に属性を持たせます

00:35:30.330 --> 00:35:32.332 align:start position:32% line:-1
例をお見せしましょう

00:35:32.432 --> 00:35:34.301 align:start position:36% line:-2
リッチテキストの
ウインドウです

00:35:34.401 --> 00:35:38.005 align:start position:11% line:-2
スニペット“performValidated
Replacement”に

00:35:38.105 --> 00:35:40.574 align:start position:20% line:-1
“Developers”と入れます

00:35:41.175 --> 00:35:44.445 align:start position:30% line:-2
そうすると文字になって
現れます

00:35:44.545 --> 00:35:49.983 align:start position:27% line:-2
周囲のスタイルと合っていて
属性の指定は不要です

00:35:50.551 --> 00:35:52.986 align:start position:29% line:-1
ここで少し注意が必要です

00:35:53.086 --> 00:35:57.191 align:start position:12% line:-2
属性の指定は
typingAttributesが行います

00:35:57.291 --> 00:36:01.628 align:start position:30% line:-2
それなので
リッチテキストから始め

00:35:57.291 --> 00:36:01.628 align:start position:30% line:-2
それなので
リッチテキストから始め

00:36:01.729 --> 00:36:05.933 align:start position:34% line:-2
最後を薄い字にして
真ん中に挿入すると

00:36:06.033 --> 00:36:11.305 align:start position:30% line:-2
スタイルの属性は最後の
薄い字になります

00:36:12.339 --> 00:36:16.310 align:start position:14% line:-2
そのためperformValidated
Replacementを呼ぶ前に

00:36:16.410 --> 00:36:20.480 align:start position:30% line:-2
範囲を選択するか
見極めないといけません

00:36:22.783 --> 00:36:25.619 align:start position:29% line:-1
選択すると こうなります

00:36:27.187 --> 00:36:31.658 align:start position:14% line:-2
次にContinuity Cameraの
説明を簡単に

00:36:31.759 --> 00:36:35.996 align:start position:27% line:-2
macOS Mojaveの
特徴の１つです

00:36:36.096 --> 00:36:39.533 align:start position:18% line:-1
NSTextViewを使っているなら

00:36:39.633 --> 00:36:44.838 align:start position:30% line:-2
フレームワークが
自動で起動してくれます

00:36:44.938 --> 00:36:48.408 align:start position:30% line:-2
しかし もっと特化した
利用がしたければ

00:36:48.509 --> 00:36:51.178 align:start position:30% line:-1
直接使うこともできます

00:36:51.278 --> 00:36:56.450 align:start position:25% line:-2
これは既存のAPIサービスの
実装になります

00:36:56.550 --> 00:37:01.822 align:start position:27% line:-2
応用クラスが画像を
処理できるようにするのです

00:36:56.550 --> 00:37:01.822 align:start position:27% line:-2
応用クラスが画像を
処理できるようにするのです

00:37:01.922 --> 00:37:04.958 align:start position:23% line:-2
validRequestorで
可能です

00:37:05.058 --> 00:37:09.596 align:start position:23% line:-2
validRequestorや
関連のメソッドの説明に

00:37:09.697 --> 00:37:11.732 align:start position:30% line:-1
目を通しておきましょう

00:37:13.600 --> 00:37:16.270 align:start position:29% line:-2
次はクイックアクションの
カスタムです

00:37:16.370 --> 00:37:21.909 align:start position:25% line:-2
クイックアクションについては
昨日も紹介されました

00:37:22.009 --> 00:37:27.648 align:start position:27% line:-2
アプリケーションを
開くといった簡単な動作から

00:37:27.748 --> 00:37:33.620 align:start position:27% line:-2
複雑な動作では ファイルに
フィルタをかけたりできます

00:37:33.720 --> 00:37:36.123 align:start position:32% line:-2
クイックアクションの
カスタムは

00:37:36.223 --> 00:37:40.761 align:start position:20% line:-2
App Extensionや
Automatorを使ってできます

00:37:41.028 --> 00:37:45.232 align:start position:30% line:-2
様々な場所で使え
起動の仕方も様々ですが

00:37:45.332 --> 00:37:48.168 align:start position:23% line:-1
一押しはTouch Barです

00:37:48.268 --> 00:37:52.339 align:start position:25% line:-2
Touch Barに
クイックアクションを加えれば

00:37:52.439 --> 00:37:54.475 align:start position:30% line:-1
いつでも簡単に使えます

00:37:54.575 --> 00:37:57.978 align:start position:32% line:-2
システム環境設定の
“キーボード”に行き

00:37:58.078 --> 00:38:04.084 align:start position:20% line:-2
Touch Barの表示のさせ方を
設定します

00:37:58.078 --> 00:38:04.084 align:start position:20% line:-2
Touch Barの表示のさせ方を
設定します

00:38:04.318 --> 00:38:09.623 align:start position:29% line:-2
カスタムしたいなら
一番下にボタンがあります

00:38:11.491 --> 00:38:16.296 align:start position:30% line:-2
また ショートカットの
サービスを見ると

00:38:16.396 --> 00:38:21.001 align:start position:30% line:-2
何を表示させるかを
選択することができます

00:38:21.101 --> 00:38:23.570 align:start position:32% line:-2
Touch Barに
表示されないのは

00:38:23.670 --> 00:38:25.706 align:start position:21% line:-1
例えばFinderウインドウです

00:38:25.806 --> 00:38:29.877 align:start position:25% line:-2
コンテキストメニューに
クイックアクションがあります

00:38:31.345 --> 00:38:34.815 align:start position:29% line:-2
プレビューにも
クイックアクションがあり

00:38:34.915 --> 00:38:38.185 align:start position:32% line:-2
“More”を押すと
リストが出てきます

00:38:38.285 --> 00:38:42.122 align:start position:21% line:-2
Automatorのアクションは
サービスで見られます

00:38:42.222 --> 00:38:46.360 align:start position:21% line:-2
TrimLogsはデバッグログを
検索するものです

00:38:47.394 --> 00:38:51.732 align:start position:27% line:-2
次にアクションのまとめ方を
説明します

00:38:51.832 --> 00:38:56.336 align:start position:27% line:-2
これはAutomatorの
新機能です

00:38:56.437 --> 00:39:01.475 align:start position:29% line:-2
新規ドキュメントを作ると
オプションが出てきます

00:38:56.437 --> 00:39:01.475 align:start position:29% line:-2
新規ドキュメントを作ると
オプションが出てきます

00:39:01.575 --> 00:39:05.579 align:start position:27% line:-2
一般的なワークフローですが
１番上のボタンで

00:39:05.679 --> 00:39:10.684 align:start position:27% line:-2
インプットやアウトプット
アイコンの色も設定できます

00:39:11.351 --> 00:39:13.854 align:start position:30% line:-1
簡単な例をお見せします

00:39:13.954 --> 00:39:17.424 align:start position:30% line:-2
テキストエディットで
ファイルを開きたくても

00:39:17.524 --> 00:39:20.427 align:start position:30% line:-2
拡張子のため
開けないことがあります

00:39:20.527 --> 00:39:24.097 align:start position:30% line:-2
Automatorなら
簡単に解決です

00:39:24.565 --> 00:39:29.903 align:start position:21% line:-2
ライブラリに行き
Finderアイテムを開くを選び

00:39:30.003 --> 00:39:35.208 align:start position:27% line:-2
テキストエディットで開くと
設定すればいいのです

00:39:35.542 --> 00:39:40.080 align:start position:29% line:-2
これはFinder内の
全ファイルに適用されます

00:39:40.180 --> 00:39:43.350 align:start position:30% line:-1
名前を付けて保存すれば

00:39:43.450 --> 00:39:48.322 align:start position:18% line:-2
Touch Barや他のメニューにも
表示されます

00:39:50.490 --> 00:39:56.130 align:start position:29% line:-2
さて 様々な新機能や
改良点を説明してきました

00:39:56.230 --> 00:39:58.832 align:start position:27% line:-1
皆さんのエクスペリエンスや

00:39:58.932 --> 00:40:02.002 align:start position:34% line:-2
アプリケーションを
向上させるものです

00:39:58.932 --> 00:40:02.002 align:start position:34% line:-2
アプリケーションを
向上させるものです

00:40:02.703 --> 00:40:09.376 align:start position:21% line:-2
新SDKのリストをチェックし
アプリケーションに使ってください

00:40:10.077 --> 00:40:14.214 align:start position:23% line:-2
よりよいアプリケーションになり
ユーザも喜ぶでしょう

00:40:14.948 --> 00:40:17.784 align:start position:27% line:-1
さらなる詳細はこのURLで

00:40:18.352 --> 00:40:21.955 align:start position:25% line:-2
WWDCのアプリケーションも
見てみてください

00:40:22.055 --> 00:40:24.792 align:start position:32% line:-2
関連する
セッションもあります

00:40:24.925 --> 00:40:26.093 align:start position:30% line:-1
ありがとうございました

00:40:26.326 --> 00:40:31.899 align:start position:43% line:-1
(拍手)
