WEBVTT

00:00:07.107 --> 00:00:16.049 align:start position:43% line:-1
(音楽)

00:00:18.652 --> 00:00:20.721 align:start position:32% line:-1
<i>拍手でお迎えください</i>

00:00:20.821 --> 00:00:24.591 align:start position:29% line:-2
<i>ソフトウェア担当副社長の</i>
<i>セバスチャンです</i>

00:00:24.691 --> 00:00:30.397 align:start position:43% line:-1
(拍手)

00:00:31.832 --> 00:00:34.434 align:start position:34% line:-1
皆さん　こんにちは

00:00:34.535 --> 00:00:38.805 align:start position:32% line:-2
WWDC 2018の
午後の部にようこそ

00:00:39.106 --> 00:00:42.276 align:start position:34% line:-2
午前のセッションは
最高でした

00:00:42.376 --> 00:00:46.213 align:start position:36% line:-2
すばらしい発表が
数多くありました

00:00:46.313 --> 00:00:50.817 align:start position:23% line:-2
2018年はエコシステム全体の
基盤に強く焦点を当て―

00:00:50.918 --> 00:00:56.423 align:start position:32% line:-2
カギとなる技術分野で
限界に挑戦しています

00:00:56.590 --> 00:00:59.526 align:start position:27% line:-1
多くのAPIや機能を導入し

00:00:59.626 --> 00:01:02.896 align:start position:34% line:-2
広範囲に及ぶ
新体験を提供します

00:00:59.626 --> 00:01:02.896 align:start position:34% line:-2
広範囲に及ぶ
新体験を提供します

00:01:03.030 --> 00:01:05.766 align:start position:27% line:-1
例えば 機械学習や拡張現実

00:01:05.866 --> 00:01:09.736 align:start position:29% line:-2
高性能なグラフィックスと
新しい開発ツールなどです

00:01:10.070 --> 00:01:14.308 align:start position:29% line:-2
APIが大きく改善し
すべてのOSに適用され―

00:01:14.608 --> 00:01:16.877 align:start position:36% line:-1
共に前進できます

00:01:17.044 --> 00:01:19.046 align:start position:29% line:-1
iCloudのおかげで―

00:01:19.146 --> 00:01:24.384 align:start position:27% line:-2
どのデバイスからでも
一貫性のある体験ができます

00:01:24.885 --> 00:01:31.225 align:start position:27% line:-2
ARの新機能やメッセージの
カメラエフェクトなど―

00:01:31.325 --> 00:01:34.728 align:start position:32% line:-2
iOS 12は
新しい機能が満載です

00:01:34.828 --> 00:01:38.232 align:start position:32% line:-2
使用時間が分かる
スクリーンタイムや―

00:01:38.332 --> 00:01:41.502 align:start position:36% line:-2
パフォーマンスに
力を入れました

00:01:41.835 --> 00:01:46.406 align:start position:27% line:-2
macOSのダークモードも
とても楽しみです

00:01:46.507 --> 00:01:51.011 align:start position:25% line:-2
新しいFinderやNews
株価などのアプリケーション

00:01:51.111 --> 00:01:56.216 align:start position:18% line:-2
刷新されたMac App Store
プライバシーとセキュリティ

00:01:56.683 --> 00:02:01.054 align:start position:30% line:-2
watchOS 5の
インタラクティブな通知

00:01:56.683 --> 00:02:01.054 align:start position:30% line:-2
watchOS 5の
インタラクティブな通知

00:02:01.154 --> 00:02:05.259 align:start position:25% line:-2
Siri文字盤のコンテンツや
ショートカットのサポート

00:02:05.359 --> 00:02:07.027 align:start position:32% line:-2
バックグラウンド
オーディオモードや―

00:02:07.160 --> 00:02:09.395 align:start position:36% line:-1
APIの改善など

00:02:09.863 --> 00:02:14.735 align:start position:18% line:-2
さらにtvOSに
Dolby Atmosを追加したため

00:02:14.835 --> 00:02:18.672 align:start position:29% line:-2
没入型音響に対応しました
本当にすばらしい

00:02:18.772 --> 00:02:24.611 align:start position:25% line:-2
iOSデバイスのパスワードを
安全に共有します

00:02:24.811 --> 00:02:28.815 align:start position:18% line:-2
VPPはUIKitとTVMLKitを
強化しました

00:02:28.916 --> 00:02:31.852 align:start position:36% line:-2
これで見た目も
操作性も優れた―

00:02:31.952 --> 00:02:33.820 align:start position:25% line:-2
ネイティブアプリケーションが
作れます

00:02:34.454 --> 00:02:40.027 align:start position:27% line:-2
私たちのすばらしい製品は
世界にインパクトを与えます

00:02:40.127 --> 00:02:43.096 align:start position:32% line:-2
エコシステムの広さを
考えると―

00:02:43.197 --> 00:02:46.433 align:start position:38% line:-2
ユーザの生活に
不可欠でしょう

00:02:47.000 --> 00:02:52.673 align:start position:32% line:-2
ユーザの創造性を育み
大事な人とつなげ―

00:02:52.773 --> 00:02:56.143 align:start position:34% line:-2
健康管理の助けにも
なっています

00:02:56.243 --> 00:02:59.947 align:start position:29% line:-2
我々はユーザにとって
大事なことに焦点を当て―

00:03:00.047 --> 00:03:02.950 align:start position:27% line:-1
すばらしい体験を提供します

00:03:03.517 --> 00:03:08.021 align:start position:34% line:-2
テクノロジーは
人々に力を与えます

00:03:08.422 --> 00:03:13.827 align:start position:27% line:-2
そのため Apple製品は
手が届きやすくしています

00:03:14.061 --> 00:03:19.533 align:start position:29% line:-2
我々のプラットフォームや
アプリケーションを―

00:03:19.633 --> 00:03:22.669 align:start position:29% line:-1
最大限に活用してください

00:03:22.769 --> 00:03:25.072 align:start position:38% line:-2
ユーザにとって
重要だからです

00:03:26.340 --> 00:03:30.043 align:start position:29% line:-2
ユーザが安心して
データを預けられるよう―

00:03:30.143 --> 00:03:33.447 align:start position:27% line:-2
Appleはプライバシーと
セキュリティを重要視します

00:03:33.547 --> 00:03:38.151 align:start position:27% line:-2
ケイティに
詳しく話してもらいましょう

00:03:38.252 --> 00:03:44.458 align:start position:43% line:-1
(拍手)

00:03:45.526 --> 00:03:46.960 align:start position:29% line:-1
セバスチャン　ありがとう

00:03:47.060 --> 00:03:48.862 align:start position:36% line:-1
プライバシーを―

00:03:48.962 --> 00:03:53.300 align:start position:29% line:-2
すべての製品とサービスに
組み込む方法を考えます

00:03:53.400 --> 00:03:55.736 align:start position:34% line:-1
細微に渡りますが―

00:03:55.836 --> 00:03:59.673 align:start position:32% line:-2
大事なのは大枠である
“信頼”です

00:03:59.840 --> 00:04:03.810 align:start position:29% line:-2
ユーザが私たちを信頼して
データを預けるかは―

00:03:59.840 --> 00:04:03.810 align:start position:29% line:-2
ユーザが私たちを信頼して
データを預けるかは―

00:04:03.911 --> 00:04:08.115 align:start position:27% line:-1
私たち全員に懸かっています

00:04:08.215 --> 00:04:13.887 align:start position:36% line:-2
財務資料から
位置や写真まで―

00:04:14.021 --> 00:04:19.192 align:start position:27% line:-2
技術が生活の一部になるほど
信頼の重要性は高まります

00:04:19.927 --> 00:04:22.729 align:start position:36% line:-2
ではユーザと
信頼を築くには？

00:04:22.863 --> 00:04:27.334 align:start position:34% line:-2
大きく４つに分けて
ご説明します

00:04:28.769 --> 00:04:31.338 align:start position:27% line:-1
マップはサインイン不要です

00:04:31.438 --> 00:04:34.508 align:start position:27% line:-2
代わりに
ランダムな識別子を使います

00:04:34.608 --> 00:04:38.979 align:start position:29% line:-2
Apple IDに
ひも付くことはありません

00:04:39.546 --> 00:04:43.450 align:start position:9% line:-2
On-device intelligenceは
iCloudで写真解析をせずに

00:04:43.550 --> 00:04:49.156 align:start position:29% line:-2
写真を検索したり
メモリーを作ったりします

00:04:50.257 --> 00:04:54.394 align:start position:25% line:-2
暗号化できるFace IDを
設計したことで―

00:04:54.495 --> 00:04:58.966 align:start position:18% line:-2
Secure Enclaveで守られ
デバイスから流出しません

00:04:59.766 --> 00:05:04.905 align:start position:27% line:-2
ユーザデータを集めたり
第三者がデータを集める時は

00:04:59.766 --> 00:05:04.905 align:start position:27% line:-2
ユーザデータを集めたり
第三者がデータを集める時は

00:05:05.005 --> 00:05:07.841 align:start position:34% line:-2
必ずユーザの許可を
得ています

00:05:08.809 --> 00:05:12.412 align:start position:32% line:-2
透明性と管理について
少しお話しします

00:05:12.813 --> 00:05:18.619 align:start position:27% line:-2
位置や写真にアクセスすると
このような通知が出ます

00:05:19.286 --> 00:05:21.388 align:start position:29% line:-1
この通知を見てみましょう

00:05:21.488 --> 00:05:24.658 align:start position:30% line:-1
データが必要な理由と―

00:05:24.758 --> 00:05:28.962 align:start position:29% line:-2
データが何に使われるかが
書かれています

00:05:29.196 --> 00:05:32.366 align:start position:30% line:-2
よい文章には
アクセスを許可すると―

00:05:32.466 --> 00:05:38.138 align:start position:29% line:-2
有効になる機能や改善点が
明記されています

00:05:39.540 --> 00:05:43.177 align:start position:34% line:-2
情報をより具体的に
開示するほど―

00:05:43.277 --> 00:05:46.613 align:start position:32% line:-2
ユーザは
アクセスを許可します

00:05:47.347 --> 00:05:52.319 align:start position:27% line:-2
データの使われ方を
ユーザに理解してもらうのは

00:05:52.419 --> 00:05:54.488 align:start position:38% line:-1
とても重要です

00:05:54.788 --> 00:05:58.959 align:start position:27% line:-2
アプリケーションの評価でも
見られています

00:06:00.160 --> 00:06:04.398 align:start position:34% line:-2
データの使われ方を
明記していないと―

00:06:04.498 --> 00:06:07.301 align:start position:29% line:-1
評価に響くかもしれません

00:06:08.669 --> 00:06:12.739 align:start position:34% line:-2
データの使われ方を
明記したとしても―

00:06:12.873 --> 00:06:18.979 align:start position:27% line:-2
詳細に欠けていたら
ユーザは判断に悩むでしょう

00:06:20.314 --> 00:06:26.019 align:start position:29% line:-2
マイクのアクセス許可を
心配するユーザもいますが

00:06:26.119 --> 00:06:29.857 align:start position:29% line:-2
アプリケーションの機能に
必須かもしれません

00:06:30.224 --> 00:06:34.495 align:start position:29% line:-2
こういう時ほど
データの使われ方と目的を

00:06:34.595 --> 00:06:38.198 align:start position:32% line:-2
明確に説明することが
重要です

00:06:39.533 --> 00:06:44.071 align:start position:27% line:-2
プライバシーを
犠牲にする必要はありません

00:06:44.171 --> 00:06:50.444 align:start position:27% line:-2
ユーザがデータを守れるよう
サポートすればいいのです

00:06:54.147 --> 00:06:56.683 align:start position:38% line:-2
セキュリティも
非常に重要です

00:06:56.783 --> 00:07:01.555 align:start position:29% line:-2
デバイスに保存されている
繊細なデータを守るため―

00:06:56.783 --> 00:07:01.555 align:start position:29% line:-2
デバイスに保存されている
繊細なデータを守るため―

00:07:01.655 --> 00:07:06.460 align:start position:30% line:-2
私たちはセキュリティを
相対的に考えています

00:07:07.027 --> 00:07:12.833 align:start position:29% line:-2
安全なアプリケーションを
作る技術を提供しています

00:07:12.933 --> 00:07:16.537 align:start position:29% line:-1
いくつか例を挙げましょう

00:07:17.171 --> 00:07:18.639 align:start position:30% line:-1
iOSはデフォルトで―

00:07:18.972 --> 00:07:22.809 align:start position:27% line:-2
アプリケーションのデータを
自動で暗号化します

00:07:23.644 --> 00:07:26.280 align:start position:36% line:-2
ATSを使うと
クライアントの―

00:07:26.380 --> 00:07:30.551 align:start position:27% line:-2
ネットワークライブラリへの
パッチが不要です

00:07:31.385 --> 00:07:33.687 align:start position:32% line:-1
CloudKitは―

00:07:33.787 --> 00:07:38.392 align:start position:32% line:-2
データを安全に保管し
デバイスと同期します

00:07:39.026 --> 00:07:42.663 align:start position:32% line:-2
皆さんはユーザ体験に
集中できます

00:07:42.763 --> 00:07:47.134 align:start position:23% line:-2
アカウントの管理や
iCloudの心配が要りません

00:07:48.969 --> 00:07:53.373 align:start position:32% line:-2
最高のセキュリティを
享受できます

00:07:53.540 --> 00:07:56.944 align:start position:29% line:-1
例えば２ファクタ認証です

00:07:57.578 --> 00:08:02.783 align:start position:23% line:-2
３年前に開始して以来
Apple IDアカウントの―

00:07:57.578 --> 00:08:02.783 align:start position:23% line:-2
３年前に開始して以来
Apple IDアカウントの―

00:08:02.883 --> 00:08:05.953 align:start position:29% line:-1
３分の２が採用しています

00:08:06.587 --> 00:08:10.357 align:start position:34% line:-2
同業他社と比べると
大成功です

00:08:10.457 --> 00:08:16.263 align:start position:25% line:-2
業界で２ファクタ認証を
使ってるのは10％未満ですが

00:08:16.897 --> 00:08:19.066 align:start position:29% line:-1
私たちには非常に重要です

00:08:19.166 --> 00:08:24.438 align:start position:29% line:-2
ユーザアカウントの安全を
より一層 確保します

00:08:24.538 --> 00:08:30.577 align:start position:27% line:-2
たとえパスワードが漏れても
自分しかアクセスできません

00:08:32.446 --> 00:08:34.548 align:start position:34% line:-1
iOS 12では―

00:08:34.648 --> 00:08:40.419 align:start position:30% line:-2
パスワードをより便利に
より安全にしました

00:08:41.288 --> 00:08:44.758 align:start position:36% line:-2
ユーザの情報や
IDを守るには―

00:08:44.858 --> 00:08:49.062 align:start position:34% line:-2
安全なパスワードが
何より大事です

00:08:49.830 --> 00:08:52.132 align:start position:29% line:-1
しかし覚えるのが大変で―

00:08:52.232 --> 00:08:56.169 align:start position:32% line:-2
単純な文字列にしたり
再利用したりします

00:08:56.637 --> 00:09:00.140 align:start position:32% line:-2
デベロッパにとっても
問題です

00:08:56.637 --> 00:09:00.140 align:start position:32% line:-2
デベロッパにとっても
問題です

00:09:00.507 --> 00:09:04.178 align:start position:32% line:-2
ユーザがサインインを
諦めると―

00:09:04.278 --> 00:09:07.147 align:start position:27% line:-1
パスワードをリセットします

00:09:07.381 --> 00:09:13.520 align:start position:29% line:-2
弱いパスワードのため
乗っ取りの恐れもあります

00:09:13.787 --> 00:09:16.423 align:start position:27% line:-1
そこで解決法を用意しました

00:09:17.090 --> 00:09:23.130 align:start position:27% line:-2
iOSが強力なパスワードを
自動的に作成し―

00:09:23.230 --> 00:09:26.366 align:start position:36% line:-2
自動入力して
保存してくれます

00:09:27.668 --> 00:09:33.073 align:start position:27% line:-2
さらにアプリケーションでも
自動的に機能します

00:09:33.173 --> 00:09:37.711 align:start position:27% line:-2
どのデバイスで作成しても
強力なパスワードが作成され

00:09:37.811 --> 00:09:40.547 align:start position:29% line:-1
全デバイスに同期されます

00:09:41.281 --> 00:09:44.985 align:start position:30% line:-2
これ以上
簡単な方法はありません

00:09:45.118 --> 00:09:48.455 align:start position:32% line:-2
アプリケーション内で
変更は不要です

00:09:48.555 --> 00:09:54.194 align:start position:29% line:-2
ただし ドメインに
関連付ける必要があります

00:09:54.294 --> 00:09:58.565 align:start position:27% line:-2
ユニバーサルリンクに
対応していれば対応済みです

00:09:59.199 --> 00:10:02.636 align:start position:30% line:-2
ユーザ名とパスワードは
区別が必要です

00:09:59.199 --> 00:10:02.636 align:start position:30% line:-2
ユーザ名とパスワードは
区別が必要です

00:10:02.736 --> 00:10:06.773 align:start position:29% line:-2
アプリケーションの要求と
パスワードが合わない場合

00:10:06.874 --> 00:10:08.775 align:start position:39% line:-1
変更できます

00:10:10.077 --> 00:10:14.448 align:start position:32% line:-2
パスワードを
確認するのも簡単です

00:10:14.648 --> 00:10:16.016 align:start position:32% line:-1
Siriに頼むのです

00:10:16.116 --> 00:10:20.320 align:start position:34% line:-2
一度 認証すれば
リストを表示します

00:10:21.054 --> 00:10:25.893 align:start position:30% line:-2
さらに古いパスワードの
削除もできます

00:10:26.126 --> 00:10:30.731 align:start position:29% line:-2
既存アカウントで
使っているパスワードか―

00:10:30.831 --> 00:10:33.000 align:start position:36% line:-1
簡単に分かります

00:10:34.101 --> 00:10:36.870 align:start position:32% line:-2
脆弱なパスワードには
警告が出され―

00:10:36.970 --> 00:10:41.875 align:start position:27% line:-2
パスワード変更ができるよう
サイトにアクセスできます

00:10:44.278 --> 00:10:47.848 align:start position:30% line:-1
SMSに送られてくる―

00:10:47.948 --> 00:10:52.352 align:start position:25% line:-2
ワンタイムパスコードの入力も
楽になります

00:10:53.520 --> 00:10:59.626 align:start position:29% line:-2
入力候補に自動で表示され
そこから入力できるのです

00:10:59.726 --> 00:11:05.566 align:start position:43% line:-1
(拍手)

00:10:59.726 --> 00:11:05.566 align:start position:43% line:-1
(拍手)

00:11:06.633 --> 00:11:11.805 align:start position:30% line:-2
他社製のパスワード
マネジャーにも対応し―

00:11:11.905 --> 00:11:16.610 align:start position:21% line:-2
アプリケーションやSafariで
入力できます

00:11:16.710 --> 00:11:22.316 align:start position:43% line:-1
(拍手)

00:11:23.016 --> 00:11:27.955 align:start position:18% line:-2
この機能はiOSはもちろん
MacやApple TVでも使えます

00:11:28.055 --> 00:11:31.792 align:start position:25% line:-2
Apple製デバイスすべてで
体験できます

00:11:33.460 --> 00:11:36.363 align:start position:36% line:-2
プライバシーと
セキュリティは―

00:11:36.463 --> 00:11:39.366 align:start position:30% line:-1
私たちの製品の基盤です

00:11:39.733 --> 00:11:44.838 align:start position:30% line:-2
皆さんがユーザの信頼を
得られるよう―

00:11:44.938 --> 00:11:49.109 align:start position:32% line:-2
私たちは その基盤を
作る機能を提供します

00:11:49.743 --> 00:11:52.446 align:start position:30% line:-1
セバスチャンに戻します

00:11:53.113 --> 00:11:58.218 align:start position:43% line:-1
(拍手)

00:11:58.352 --> 00:11:59.353 align:start position:41% line:-1
ありがとう

00:11:59.453 --> 00:12:02.656 align:start position:27% line:-1
新しいパスワード機能でした

00:11:59.453 --> 00:12:02.656 align:start position:27% line:-1
新しいパスワード機能でした

00:12:02.756 --> 00:12:05.492 align:start position:32% line:-1
本当にすごいですよね

00:12:05.959 --> 00:12:10.030 align:start position:29% line:-2
我々の究極の目標は
すばらしいユーザ体験です

00:12:10.130 --> 00:12:15.802 align:start position:30% line:-2
それは革新的な機能を
備えることを意味します

00:12:16.436 --> 00:12:21.975 align:start position:30% line:-2
だからといって
動作遅延を甘受しません

00:12:22.242 --> 00:12:25.312 align:start position:25% line:-2
それがAppleエンジニアの
最重要事項です

00:12:25.445 --> 00:12:28.882 align:start position:30% line:-2
そのために
ツールや事例を開発し―

00:12:29.249 --> 00:12:34.855 align:start position:30% line:-2
皆さんにも同じツールを
提供できるのです

00:12:35.155 --> 00:12:41.094 align:start position:27% line:-2
数多くのツールによって
コードはより堅強になります

00:12:41.361 --> 00:12:46.266 align:start position:27% line:-2
アプリケーションの安定性や
速い動作は必須です

00:12:46.366 --> 00:12:50.237 align:start position:29% line:-2
そのために多くのツールを
用意しています

00:12:50.437 --> 00:12:52.539 align:start position:29% line:-1
複雑なシステムにおいて―

00:12:52.639 --> 00:12:56.743 align:start position:29% line:-2
パフォーマンスの最適化は
課題です

00:12:56.844 --> 00:13:02.249 align:start position:27% line:-2
多くの時間をかけて開発した
新しいツールと技術を―

00:12:56.844 --> 00:13:02.249 align:start position:27% line:-2
多くの時間をかけて開発した
新しいツールと技術を―

00:13:02.349 --> 00:13:05.219 align:start position:32% line:-2
皆さんと共有したいと
思います

00:13:05.319 --> 00:13:09.256 align:start position:21% line:-1
Xcode 10は機能を拡張し―

00:13:09.356 --> 00:13:13.927 align:start position:30% line:-2
カスタムツールとして
これまで以上に使えます

00:13:14.161 --> 00:13:16.830 align:start position:32% line:-2
すべて旧来のAPIが
始まりです

00:13:16.930 --> 00:13:19.399 align:start position:29% line:-1
使用経験者もいるでしょう

00:13:19.500 --> 00:13:24.304 align:start position:23% line:-2
printfには悪いがAPIの
スイス･アーミーナイフです

00:13:24.438 --> 00:13:28.208 align:start position:34% line:-2
コードのデバッグや
追跡に使ったが遅い

00:13:28.642 --> 00:13:32.646 align:start position:21% line:-2
そこで２年前にos logという
APIを追加しました

00:13:32.746 --> 00:13:38.819 align:start position:29% line:-2
ログやトレースポイントを
取るのに効果的です

00:13:38.919 --> 00:13:44.291 align:start position:29% line:-2
速くて軽いので未使用なら
ぜひ導入してください

00:13:44.391 --> 00:13:49.763 align:start position:18% line:-2
今年はos logに加えて
os signpostを追加しました

00:13:49.863 --> 00:13:53.534 align:start position:29% line:-2
Instrumentsが
読み取れる形式で―

00:13:53.634 --> 00:13:58.005 align:start position:32% line:-2
コンテキストデータを
提供する技術です

00:13:58.305 --> 00:14:01.375 align:start position:29% line:-2
signpostを使うと
コードを追跡でき―

00:13:58.305 --> 00:14:01.375 align:start position:29% line:-2
signpostを使うと
コードを追跡でき―

00:14:01.475 --> 00:14:06.346 align:start position:29% line:-2
大事な部分を
マークすることもできます

00:14:06.446 --> 00:14:12.653 align:start position:30% line:-2
データを取得してからが
力の見せどころです

00:14:13.153 --> 00:14:18.125 align:start position:18% line:-2
新しいカスタムinstrumentで
さらに力を発揮します

00:14:18.225 --> 00:14:22.663 align:start position:34% line:-2
ケンがデモを使って
ご説明します

00:14:23.096 --> 00:14:27.601 align:start position:43% line:-1
(拍手)

00:14:28.402 --> 00:14:29.937 align:start position:29% line:-1
ありがとう　セバスチャン

00:14:30.037 --> 00:14:33.407 align:start position:5% line:-2
Solar System Explorationの
アプリケーションです

00:14:33.507 --> 00:14:36.777 align:start position:30% line:-1
少し問題を見つけました

00:14:36.877 --> 00:14:42.449 align:start position:23% line:-2
データ更新や起動時
command+Rを押すたびに

00:14:42.549 --> 00:14:45.552 align:start position:29% line:-2
このとおり
UIの動作が鈍くなります

00:14:45.652 --> 00:14:48.689 align:start position:34% line:-2
惑星の軌道が
カクカクしてますね

00:14:48.789 --> 00:14:52.326 align:start position:34% line:-2
更新が完了すれば
スムーズに動きます

00:14:52.426 --> 00:14:54.628 align:start position:34% line:-1
問題を調べましょう

00:14:55.496 --> 00:15:00.133 align:start position:5% line:-2
PlanetUpdateService.swift
というコードで

00:14:55.496 --> 00:15:00.133 align:start position:5% line:-2
PlanetUpdateService.swift
というコードで

00:15:00.234 --> 00:15:03.504 align:start position:36% line:-2
惑星の更新を操る
ファイルです

00:15:03.604 --> 00:15:08.709 align:start position:20% line:-2
logとsignpostを追加して
原因を探ります

00:15:09.042 --> 00:15:12.012 align:start position:25% line:-1
まずログハンドルを追加します

00:15:12.546 --> 00:15:17.784 align:start position:12% line:-2
新しいカテゴリの
pointsOfInterestを使います

00:15:18.051 --> 00:15:20.454 align:start position:29% line:-1
これは特別なカテゴリで―

00:15:20.554 --> 00:15:25.225 align:start position:32% line:-2
ログを取ると自動的に
右側に表示されます

00:15:25.926 --> 00:15:30.898 align:start position:30% line:-2
まず更新を開始する時の
状態を確認しましょう

00:15:30.998 --> 00:15:35.002 align:start position:29% line:-2
このメソッドで起こるので
ログステートメントを追加

00:15:35.102 --> 00:15:38.605 align:start position:9% line:-2
Requesting planet dataで
分かるでしょう

00:15:39.173 --> 00:15:42.943 align:start position:34% line:-2
何より知りたいのは
データを処理し―

00:15:43.043 --> 00:15:47.047 align:start position:27% line:-1
解析するのにかかる時間です

00:15:47.347 --> 00:15:50.551 align:start position:30% line:-1
ここで処理が行われます

00:15:50.651 --> 00:15:54.221 align:start position:18% line:-2
可視化できるように
いくつかsignpostを追加します

00:15:54.321 --> 00:15:56.123 align:start position:27% line:-1
最初のsignpostは―

00:15:56.523 --> 00:16:01.428 align:start position:12% line:-2
作業直前に置く
begin-type signpostです

00:15:56.523 --> 00:16:01.428 align:start position:12% line:-2
作業直前に置く
begin-type signpostです

00:16:01.628 --> 00:16:06.266 align:start position:34% line:-2
それと作業終了後に
追加するのは―

00:16:06.366 --> 00:16:07.935 align:start position:16% line:-1
end-type signpostです

00:16:08.035 --> 00:16:10.404 align:start position:30% line:-1
これで時間軸が作られ―

00:16:10.571 --> 00:16:14.541 align:start position:29% line:-2
自動的にデルタ値を計算し
表示されます

00:16:14.942 --> 00:16:18.846 align:start position:25% line:-2
ではInstrumentsで
データを見てみましょう

00:16:19.146 --> 00:16:22.516 align:start position:12% line:-1
ProductのProfileを選択します

00:16:22.616 --> 00:16:26.019 align:start position:18% line:-2
XcodeがInstrumentsを
起動し―

00:16:26.119 --> 00:16:29.823 align:start position:29% line:-1
データが表示され始めます

00:16:30.357 --> 00:16:32.926 align:start position:12% line:-1
pointsOfInterestの追跡です

00:16:33.026 --> 00:16:38.499 align:start position:32% line:-2
ログを取ったデータが
すべて表示されます

00:16:38.632 --> 00:16:43.470 align:start position:25% line:-2
optionキーを押しながら
ドラッグし拡大すると

00:16:43.637 --> 00:16:47.107 align:start position:9% line:-2
Requesting planet dataの
フラグがあります

00:16:47.207 --> 00:16:50.677 align:start position:30% line:-2
コードに追加したログの
結果です

00:16:50.878 --> 00:16:55.415 align:start position:30% line:-2
この青い部分で
データ処理をしています

00:16:55.516 --> 00:16:58.151 align:start position:21% line:-1
これがsignpostの結果です

00:16:58.785 --> 00:17:02.656 align:start position:32% line:-2
これを見れば
原因が分かるはずです

00:16:58.785 --> 00:17:02.656 align:start position:32% line:-2
これを見れば
原因が分かるはずです

00:17:02.756 --> 00:17:05.325 align:start position:30% line:-1
データ処理をするたび―

00:17:05.425 --> 00:17:09.128 align:start position:29% line:-2
メインスレッドのCPUの
使用率が上がります

00:17:09.296 --> 00:17:15.502 align:start position:27% line:-2
おそらくメインスレッドで
データ処理をしているのです

00:17:15.602 --> 00:17:17.804 align:start position:27% line:-1
UIが不安定になるはずです

00:17:17.905 --> 00:17:20.807 align:start position:29% line:-2
ログステートメントと
signpostだけで―

00:17:20.907 --> 00:17:25.846 align:start position:30% line:-2
パフォーマンスの状況を
把握できるのです

00:17:26.346 --> 00:17:30.083 align:start position:29% line:-2
新しいツールを使えば
これ以上のことができます

00:17:30.184 --> 00:17:33.020 align:start position:30% line:-2
Xcode 10の
新しいテンプレートで―

00:17:33.187 --> 00:17:37.558 align:start position:25% line:-2
カスタムinstrument
パッケージを作れます

00:17:37.658 --> 00:17:44.198 align:start position:14% line:-2
同僚が同じネットワークと
追加したsignpostを基に作りました

00:17:44.298 --> 00:17:47.000 align:start position:32% line:-1
最新版が届いています

00:17:47.100 --> 00:17:48.802 align:start position:38% line:-1
これを開くと―

00:17:49.536 --> 00:17:52.806 align:start position:32% line:-2
インストールするよう
通知されます

00:17:52.906 --> 00:17:54.541 align:start position:34% line:-1
インストールします

00:17:54.741 --> 00:17:56.710 align:start position:30% line:-1
新しいテンプレートです

00:17:56.810 --> 00:18:00.347 align:start position:16% line:-2
Solar Systemテンプレートを
ダブルクリックすると―

00:17:56.810 --> 00:18:00.347 align:start position:16% line:-2
Solar Systemテンプレートを
ダブルクリックすると―

00:18:01.115 --> 00:18:03.717 align:start position:27% line:-1
再度データを記録し始めます

00:18:04.017 --> 00:18:09.223 align:start position:16% line:-2
またpointsOfInterestで
データを追跡します

00:18:09.323 --> 00:18:15.295 align:start position:29% line:-2
先ほどよりも詳細な情報が
得られました

00:18:15.395 --> 00:18:18.499 align:start position:30% line:-1
また拡大して見てみます

00:18:22.302 --> 00:18:26.373 align:start position:21% line:-2
このカスタムinstrument
パッケージは―

00:18:26.473 --> 00:18:30.777 align:start position:27% line:-2
フレームワークを使う様子を
可視化してくれます

00:18:30.878 --> 00:18:33.647 align:start position:38% line:-2
この例のように
10秒ごとの―

00:18:33.747 --> 00:18:37.885 align:start position:29% line:-2
ネットワークの要求回数の
平均が分かります

00:18:38.085 --> 00:18:43.590 align:start position:29% line:-2
ここを見ると毎回の要求の
詳細情報が分かります

00:18:43.690 --> 00:18:44.792 align:start position:36% line:-1
かかった時間は？

00:18:44.892 --> 00:18:47.494 align:start position:27% line:-1
赤い部分は重複した要求です

00:18:47.594 --> 00:18:51.965 align:start position:34% line:-2
まったく同じ要求を
複数回しています

00:18:52.065 --> 00:18:55.435 align:start position:23% line:-1
50％以上 重複してるようです

00:18:55.536 --> 00:18:58.305 align:start position:29% line:-1
これらのパフォーマンスは

00:18:58.405 --> 00:19:04.511 align:start position:29% line:-2
フレームワークを効果的に
使うために必要なのです

00:18:58.405 --> 00:19:04.511 align:start position:29% line:-2
フレームワークを効果的に
使うために必要なのです

00:19:04.611 --> 00:19:07.714 align:start position:9% line:-2
signpostとカスタムinstrument
パッケージの―

00:19:07.948 --> 00:19:12.786 align:start position:29% line:-2
２つのすばらしいツールで
データを可視化できます

00:19:12.920 --> 00:19:14.221 align:start position:30% line:-1
これが新しいツールです

00:19:14.321 --> 00:19:15.489 align:start position:39% line:-1
セバスチャン

00:19:15.622 --> 00:19:19.693 align:start position:43% line:-1
(拍手)

00:19:19.793 --> 00:19:21.228 align:start position:36% line:-1
ありがとう　ケン

00:19:21.361 --> 00:19:23.630 align:start position:32% line:-1
すばらしいデモでした

00:19:23.730 --> 00:19:29.136 align:start position:27% line:-2
アプリケーションの高速化に
役立つツールです

00:19:29.636 --> 00:19:35.075 align:start position:25% line:-2
ここまで ユーザ体験を向上し
信頼を得るための―

00:19:35.209 --> 00:19:39.246 align:start position:34% line:-2
すばらしいツールを
紹介してきました

00:19:39.546 --> 00:19:43.484 align:start position:23% line:-1
ここからはMacの話に移ります

00:19:44.084 --> 00:19:49.823 align:start position:27% line:-2
17年前にOS Xを発表し
常に向上させてきました

00:19:49.923 --> 00:19:52.292 align:start position:20% line:-1
64ビットに対応したLeopard

00:19:52.726 --> 00:19:57.598 align:start position:18% line:-2
Gatekeeperを導入した
OS X Mountain Lion

00:19:57.831 --> 00:20:02.236 align:start position:34% line:-2
我々のミッションは
最新技術を活用し―

00:19:57.831 --> 00:20:02.236 align:start position:34% line:-2
我々のミッションは
最新技術を活用し―

00:20:02.336 --> 00:20:04.905 align:start position:29% line:-1
常に限界を超えることです

00:20:05.038 --> 00:20:09.943 align:start position:30% line:-2
先に進むためには
過去の機能に固執せず―

00:20:10.043 --> 00:20:12.946 align:start position:32% line:-2
時には廃止することも
必要です

00:20:13.347 --> 00:20:17.351 align:start position:18% line:-2
昨年 発表した最新の
macOS High Sierraは

00:20:17.451 --> 00:20:21.288 align:start position:25% line:-2
32ビットアプリケーションに
対応しました

00:20:21.422 --> 00:20:24.391 align:start position:25% line:-2
しかし今年 発表する
macOS Mojaveは―

00:20:24.491 --> 00:20:28.629 align:start position:29% line:-2
32ビットをサポートする
最後のOSになります

00:20:29.296 --> 00:20:31.698 align:start position:29% line:-2
来年は
32ビットのサポートと―

00:20:31.798 --> 00:20:35.035 align:start position:27% line:-2
32ビット単独の
フレームワークを廃止します

00:20:35.135 --> 00:20:39.139 align:start position:29% line:-2
Javaフレームワークや
QuickTimeもです

00:20:40.507 --> 00:20:43.410 align:start position:21% line:-1
Macのセキュリティについては―

00:20:43.510 --> 00:20:47.214 align:start position:14% line:-2
Gatekeeperがマルウェアの保護に
ひと役買いました

00:20:47.314 --> 00:20:50.184 align:start position:30% line:-1
今年はさらに前進します

00:20:50.517 --> 00:20:52.186 align:start position:36% line:-1
ユーザのために―

00:20:52.286 --> 00:20:55.956 align:start position:18% line:-2
新たにNotary Serviceを
開始します

00:20:56.056 --> 00:20:58.425 align:start position:30% line:-1
詳細を見ていきましょう

00:20:59.159 --> 00:21:00.594 align:start position:27% line:-1
午前のセッションのとおり―

00:20:59.159 --> 00:21:00.594 align:start position:27% line:-1
午前のセッションのとおり―

00:21:00.694 --> 00:21:05.165 align:start position:29% line:-2
繊細なシステムリソースに
保護を拡大します

00:21:05.866 --> 00:21:09.303 align:start position:32% line:-2
カメラやマイクを含む
リソースに対して―

00:21:09.403 --> 00:21:13.140 align:start position:23% line:-2
APIと直接アクセスする許可を
必要とします

00:21:13.474 --> 00:21:15.309 align:start position:29% line:-1
つまり どういうことか？

00:21:15.509 --> 00:21:18.712 align:start position:32% line:-2
甘く見ると
アプリケーションが―

00:21:18.812 --> 00:21:23.550 align:start position:29% line:-2
ユーザ許可を得られない
恐れがあるということです

00:21:24.685 --> 00:21:29.089 align:start position:29% line:-2
ケイティが説明したように
ユーザへの通知は―

00:21:29.189 --> 00:21:35.295 align:start position:27% line:-2
データアクセスの目的が
よく分かる文章にしましょう

00:21:36.396 --> 00:21:40.234 align:start position:27% line:-2
ユーザデータを保護するため
バックアップツールなど―

00:21:40.334 --> 00:21:45.172 align:start position:27% line:-2
特別なアプリケーションのみ
データアクセスを要求します

00:21:45.272 --> 00:21:49.576 align:start position:30% line:-2
セキュリティと
プライバシーペインで―

00:21:49.676 --> 00:21:52.546 align:start position:29% line:-1
ユーザの許可を要求します

00:21:53.814 --> 00:21:57.784 align:start position:34% line:-2
次は実行時の保護の
強化についてです

00:21:57.985 --> 00:22:03.690 align:start position:23% line:-2
今まで ZIPファイルの保護を
拡張する要求をしていました

00:21:57.985 --> 00:22:03.690 align:start position:23% line:-2
今まで ZIPファイルの保護を
拡張する要求をしていました

00:22:03.824 --> 00:22:07.528 align:start position:30% line:-1
新たなセキュリティは―

00:22:07.628 --> 00:22:11.131 align:start position:30% line:-2
オプトインできる機能を
必要とします

00:22:11.231 --> 00:22:17.104 align:start position:27% line:-2
強力なコードを検証を超えて
コードの導入を妨げる

00:22:17.404 --> 00:22:19.907 align:start position:18% line:-2
Enhanced Runtimeには
後方互換性があります

00:22:20.007 --> 00:22:23.644 align:start position:25% line:-2
Xcodeの単純なスイッチで
オプトインします

00:22:24.478 --> 00:22:28.215 align:start position:20% line:-2
そして“Notarized”という
概念を導入し―

00:22:29.216 --> 00:22:34.421 align:start position:14% line:-2
Mac App Store以外で配信する
アプリケーションにも拡張します

00:22:34.521 --> 00:22:36.190 align:start position:38% line:-1
目的は２つです

00:22:36.290 --> 00:22:42.129 align:start position:27% line:-2
ユーザにマルウェアが
配布される前に検出すること

00:22:42.229 --> 00:22:45.833 align:start position:27% line:-2
そして アプリケーションの
脆弱性のあるバージョンのみ

00:22:45.933 --> 00:22:49.403 align:start position:29% line:-1
無効にすることができます

00:22:49.503 --> 00:22:53.407 align:start position:34% line:-2
開発者の証明書ごと
無効にはしません

00:22:53.674 --> 00:22:55.109 align:start position:34% line:-1
仕組みを説明します

00:22:55.209 --> 00:22:57.878 align:start position:29% line:-2
通常どおり
アプリケーションを作り―

00:22:57.978 --> 00:23:00.814 align:start position:21% line:-2
Developer ID証明書で
署名します

00:22:57.978 --> 00:23:00.814 align:start position:21% line:-2
Developer ID証明書で
署名します

00:23:00.981 --> 00:23:03.183 align:start position:30% line:-1
ユーザに配布する前に―

00:23:03.283 --> 00:23:06.120 align:start position:14% line:-2
ここでDeveloper ID
Notary Serviceに提出します

00:23:06.220 --> 00:23:10.457 align:start position:27% line:-2
認証されると
既存チャネルで配布できます

00:23:11.058 --> 00:23:15.329 align:start position:25% line:-2
ユーザが起動すると
macOS Mojaveが―

00:23:15.429 --> 00:23:21.535 align:start position:20% line:-2
Notary Serviceを使い
認証されてるか確認します

00:23:21.969 --> 00:23:25.005 align:start position:36% line:-1
レビューがなく―

00:23:25.105 --> 00:23:30.010 align:start position:21% line:-2
Developer IDに新たな
ガイドラインも課しません

00:23:30.110 --> 00:23:34.948 align:start position:29% line:-2
セキュリティを目的とした
解析のみ実行します

00:23:36.116 --> 00:23:40.020 align:start position:14% line:-2
将来 すべてのDeveloper IDの
アプリケーションに対し―

00:23:40.120 --> 00:23:44.591 align:start position:25% line:-2
macOSはインストール前に
認証を要求します

00:23:44.691 --> 00:23:50.397 align:start position:27% line:-2
今日 ベータ版が出たので
皆さんの反応を待っています

00:23:50.864 --> 00:23:55.035 align:start position:12% line:-2
macOS Mojaveの
Gatekeeper強化については以上です

00:23:55.135 --> 00:23:58.806 align:start position:27% line:-2
ここからはmacOSの
ユーザ体験について話します

00:23:58.906 --> 00:24:02.009 align:start position:29% line:-1
クリステンを呼びましょう

00:23:58.906 --> 00:24:02.009 align:start position:29% line:-1
クリステンを呼びましょう

00:24:02.109 --> 00:24:03.143 align:start position:41% line:-1
クリステン

00:24:03.510 --> 00:24:05.045 align:start position:43% line:-1
(拍手)

00:24:05.145 --> 00:24:06.480 align:start position:41% line:-1
ありがとう

00:24:06.580 --> 00:24:08.248 align:start position:34% line:-1
とても興奮してます

00:24:08.415 --> 00:24:10.884 align:start position:25% line:-1
macOS Mojaveは―

00:24:10.984 --> 00:24:15.255 align:start position:23% line:-2
Finderやデスクトップなど
多くが改良されました

00:24:15.622 --> 00:24:19.793 align:start position:30% line:-2
デベロッパとして
今日 注目したいのは―

00:24:19.893 --> 00:24:21.595 align:start position:30% line:-1
クイックアクションです

00:24:25.199 --> 00:24:28.035 align:start position:30% line:-2
Finderの
クイックアクションで―

00:24:28.135 --> 00:24:31.338 align:start position:21% line:-2
Finderのプレビューパネルに
ツールを埋め込みます

00:24:31.705 --> 00:24:36.410 align:start position:27% line:-2
Finderから直接
動作ができるようになります

00:24:37.544 --> 00:24:41.815 align:start position:27% line:-2
ファイル形式に合わせて
異なるアクションが可能です

00:24:43.750 --> 00:24:47.087 align:start position:34% line:-2
ここでビデオも
PDFも見られます

00:24:47.387 --> 00:24:49.122 align:start position:30% line:-1
初期設定だけではなく―

00:24:49.223 --> 00:24:52.559 align:start position:30% line:-1
自分で設定できるのです

00:24:52.659 --> 00:24:55.929 align:start position:29% line:-2
そのアクションも
Finderで見られます

00:24:57.431 --> 00:25:03.136 align:start position:18% line:-2
デベロッパは
App Extensionが使えます

00:24:57.431 --> 00:25:03.136 align:start position:18% line:-2
デベロッパは
App Extensionが使えます

00:25:03.337 --> 00:25:06.440 align:start position:20% line:-2
ユーザはshell scriptと
AppleScript―

00:25:06.573 --> 00:25:09.943 align:start position:23% line:-2
Automatorアクションを
組み合わせられます

00:25:10.043 --> 00:25:12.613 align:start position:23% line:-2
アクションバンドルを
Automatorで作るのです

00:25:12.713 --> 00:25:18.418 align:start position:27% line:-2
ファイル形式ごとに
Finderで確認できます

00:25:19.653 --> 00:25:24.958 align:start position:27% line:-2
Touch Barのように
Finderを使えるのです

00:25:25.058 --> 00:25:27.194 align:start position:32% line:-2
Touch Barを
カスタマイズして―

00:25:27.294 --> 00:25:32.132 align:start position:30% line:-2
アクションを
表示することもできます

00:25:33.167 --> 00:25:34.201 align:start position:38% line:-1
話題を変えます

00:25:34.701 --> 00:25:40.107 align:start position:21% line:-2
午前のKeynoteで紹介された
ワクワクする技術があります

00:25:40.207 --> 00:25:43.644 align:start position:27% line:-2
iOSアプリケーションを
Macで簡単に使う方法です

00:25:44.778 --> 00:25:49.750 align:start position:25% line:-2
４つのアプリケーションを使い
開発している最中です

00:25:49.850 --> 00:25:52.586 align:start position:20% line:-1
News 株価 ボイスメモ ホーム

00:25:54.988 --> 00:25:57.090 align:start position:25% line:-1
UIKitを使っていますが―

00:25:57.191 --> 00:26:00.861 align:start position:34% line:-2
Macで配信できる
新たな方法です

00:25:57.191 --> 00:26:00.861 align:start position:34% line:-2
Macで配信できる
新たな方法です

00:26:01.628 --> 00:26:07.734 align:start position:23% line:-2
Macの能力を発揮するには
もちろんAppKitが一番です

00:26:07.835 --> 00:26:10.671 align:start position:34% line:-1
それは否定しません

00:26:10.904 --> 00:26:13.507 align:start position:29% line:-2
でも Macのネイティブ
アプリケーションが―

00:26:13.607 --> 00:26:15.709 align:start position:29% line:-1
未経験の人も多いでしょう

00:26:15.809 --> 00:26:21.748 align:start position:21% line:-2
なので Macに移す簡単な方法を
ご紹介しましょう

00:26:22.216 --> 00:26:23.650 align:start position:41% line:-1
こちらです

00:26:25.419 --> 00:26:29.523 align:start position:23% line:-2
UIKitのアプリケーションは
ネイティブで動作します

00:26:29.623 --> 00:26:35.996 align:start position:27% line:-2
よく見るとスタックは
AppKitと似ていますね

00:26:36.296 --> 00:26:42.236 align:start position:29% line:-2
実際に同じ基盤で開発され
枝分かれしたのです

00:26:42.703 --> 00:26:46.940 align:start position:32% line:-2
これを論理的に
生かすことにしました

00:26:47.040 --> 00:26:48.876 align:start position:36% line:-1
うれしいことに―

00:26:48.976 --> 00:26:53.146 align:start position:34% line:-2
移植できるコードを
書きやすくなります

00:26:54.448 --> 00:26:57.618 align:start position:27% line:-2
これらのアプリケーションは
典型的な機能を持ちます

00:26:57.718 --> 00:27:00.921 align:start position:30% line:-1
今から お見せしますね

00:26:57.718 --> 00:27:00.921 align:start position:30% line:-1
今から お見せしますね

00:27:13.500 --> 00:27:17.070 align:start position:32% line:-2
iPadの新しい株価
アプリケーションです

00:27:17.738 --> 00:27:21.608 align:start position:27% line:-2
同じソースがベースの
Macバージョンを開きます

00:27:21.909 --> 00:27:26.079 align:start position:27% line:-2
マウスの動きがUIと連動し
クリックすると―

00:27:26.180 --> 00:27:29.016 align:start position:32% line:-1
詳細情報が見られます

00:27:29.516 --> 00:27:33.620 align:start position:27% line:-2
チャートでマウスを動かすと
株価が表示され―

00:27:33.720 --> 00:27:37.658 align:start position:34% line:-2
ドラッグした期間の
値動きが見られます

00:27:38.258 --> 00:27:41.094 align:start position:27% line:-1
記事はクリックして開きます

00:27:41.195 --> 00:27:47.201 align:start position:16% line:-2
MacなのでWindowサイズの変更や
全画面にもできます

00:27:47.935 --> 00:27:52.539 align:start position:27% line:-2
２本指で
画面のスクロールもできます

00:27:52.639 --> 00:27:58.345 align:start position:30% line:-2
コピーしたいテキストは
選択し ドラッグして―

00:28:00.047 --> 00:28:02.683 align:start position:32% line:-1
メモにドロップします

00:28:02.883 --> 00:28:05.452 align:start position:34% line:-2
メモに記事の
リンクができました

00:28:05.919 --> 00:28:09.656 align:start position:21% line:-1
クリックするとNewsが開きます

00:28:10.023 --> 00:28:15.896 align:start position:30% line:-2
アプリケーションの
メニューを作成しました

00:28:15.996 --> 00:28:19.967 align:start position:29% line:-2
ファイルメニューを開き
チャネルをフォローすると

00:28:20.200 --> 00:28:24.571 align:start position:30% line:-2
ESPNがサイドバーに
表示されます

00:28:24.805 --> 00:28:27.374 align:start position:29% line:-1
下層コンテンツの赤色が―

00:28:27.474 --> 00:28:31.512 align:start position:36% line:-2
ツールバーにも
反映して見えます

00:28:31.778 --> 00:28:36.016 align:start position:34% line:-2
ツールバーに
共有ボタンもあり―

00:28:36.116 --> 00:28:39.887 align:start position:32% line:-2
クリックすると記事を
友人に見せられます

00:28:40.420 --> 00:28:45.325 align:start position:18% line:-1
MacでUIKitを駆け足で見ました

00:28:46.393 --> 00:28:49.396 align:start position:43% line:-1
(拍手)

00:28:49.496 --> 00:28:50.197 align:start position:43% line:-1
ここで…

00:28:51.231 --> 00:28:52.332 align:start position:41% line:-1
ありがとう

00:28:53.267 --> 00:28:57.271 align:start position:32% line:-2
この技術は開発段階で
精査しています

00:28:57.371 --> 00:29:02.609 align:start position:27% line:-2
皆さんに お届けできるのは
来年を予定しています

00:28:57.371 --> 00:29:02.609 align:start position:27% line:-2
皆さんに お届けできるのは
来年を予定しています

00:29:04.678 --> 00:29:06.813 align:start position:32% line:-1
次はダークモードです

00:29:09.283 --> 00:29:14.855 align:start position:27% line:-2
macOS Mojaveの
大きな特徴だといえます

00:29:15.355 --> 00:29:17.191 align:start position:34% line:-1
少し見てみましょう

00:29:19.960 --> 00:29:23.363 align:start position:32% line:-2
背景が暗いと
コンテンツが映えます

00:29:24.231 --> 00:29:28.769 align:start position:29% line:-2
サイドバーは透過性があり
コンテンツは色鮮やかです

00:29:28.869 --> 00:29:33.640 align:start position:29% line:-2
下層ウィンドウとの
コントラストも保たれます

00:29:34.608 --> 00:29:39.546 align:start position:29% line:-2
いくつかですが
アイコンも少し変えました

00:29:39.646 --> 00:29:43.884 align:start position:27% line:-2
写真アイコンと
ゴミ箱が暗くなっていますね

00:29:45.352 --> 00:29:47.521 align:start position:30% line:-1
分かりづらいのですが―

00:29:47.621 --> 00:29:52.626 align:start position:29% line:-2
背景はデスクトップの色を
抽出しています

00:29:53.627 --> 00:29:59.032 align:start position:29% line:-2
説明のため 異なる背景を
２つ並べてみました

00:29:59.600 --> 00:30:05.439 align:start position:27% line:-2
左側は青ベースの背景画像に
合わせて青っぽく―

00:29:59.600 --> 00:30:05.439 align:start position:27% line:-2
左側は青ベースの背景画像に
合わせて青っぽく―

00:30:05.539 --> 00:30:10.777 align:start position:27% line:-2
右側はオレンジの画像に
合わせてオレンジ系の色です

00:30:10.878 --> 00:30:12.212 align:start position:34% line:-1
透光性はありません

00:30:12.312 --> 00:30:15.549 align:start position:34% line:-2
デスクトップの
平均的な色を使い―

00:30:15.682 --> 00:30:17.184 align:start position:34% line:-1
透過性を出しました

00:30:17.284 --> 00:30:21.955 align:start position:27% line:-2
デスクトップの様々な画像と
調和がとれます

00:30:23.857 --> 00:30:27.528 align:start position:20% line:-2
Dark Modeのサポート方法を
見てみましょう

00:30:28.829 --> 00:30:34.902 align:start position:27% line:-2
自動オプトインではないので
互換性を保つ必要があります

00:30:35.002 --> 00:30:38.505 align:start position:16% line:-2
MacOS Mojave STKitに
作る必要があります

00:30:40.274 --> 00:30:46.613 align:start position:23% line:-2
MojaveでKeynoteを
初めて起動しました

00:30:46.914 --> 00:30:52.152 align:start position:29% line:-2
ツールバーは暗いですが
想像した色ではありません

00:30:53.020 --> 00:30:56.023 align:start position:32% line:-2
この部分は
背景に対して明るく―

00:30:56.256 --> 00:31:00.627 align:start position:32% line:-2
スライドナビゲータは
ぼやけて読みづらい

00:30:56.256 --> 00:31:00.627 align:start position:32% line:-2
スライドナビゲータは
ぼやけて読みづらい

00:31:00.928 --> 00:31:05.699 align:start position:36% line:-2
サイトバーは
半透明すぎますね

00:31:07.034 --> 00:31:08.235 align:start position:41% line:-1
それから…

00:31:09.303 --> 00:31:14.541 align:start position:29% line:-2
ここには 白い背景に
白い記号が使われています

00:31:15.509 --> 00:31:19.246 align:start position:32% line:-2
幸いなことに
どれも修正は簡単です

00:31:20.614 --> 00:31:23.717 align:start position:36% line:-2
ダークモードは
簡単なAPIです

00:31:23.817 --> 00:31:28.989 align:start position:25% line:-2
どれも長年 使われているので
少し追加すればいいだけです

00:31:29.490 --> 00:31:31.125 align:start position:34% line:-1
NSColorです

00:31:32.092 --> 00:31:36.196 align:start position:23% line:-2
背景色部分は
containerViewで―

00:31:36.797 --> 00:31:39.666 align:start position:14% line:-2
素材は
UIVisualEffectViewです

00:31:40.500 --> 00:31:45.205 align:start position:29% line:-2
テンプレートを使った
新しいカラー化の方法です

00:31:46.540 --> 00:31:50.744 align:start position:23% line:-2
KeynoteをこれらAPIで
更新した結果です

00:31:51.378 --> 00:31:52.746 align:start position:39% line:-1
すてきですね

00:31:54.848 --> 00:31:58.752 align:start position:32% line:-2
とても簡単なので
ぜひ お試しください

00:31:58.852 --> 00:32:03.257 align:start position:27% line:-2
システムカラーの成功事例を
導入してるなら―

00:31:58.852 --> 00:32:03.257 align:start position:27% line:-2
システムカラーの成功事例を
導入してるなら―

00:32:03.357 --> 00:32:07.060 align:start position:32% line:-2
皆さんは
成功に近づいています

00:32:07.161 --> 00:32:10.497 align:start position:29% line:-2
前回 リリースされている
技術なので―

00:32:10.597 --> 00:32:13.333 align:start position:34% line:-1
簡単に導入できます

00:32:13.667 --> 00:32:17.471 align:start position:27% line:-2
カスタムコントロールの数に
よりますが―

00:32:17.571 --> 00:32:20.874 align:start position:34% line:-2
２～３つなら
１日もかかりません

00:32:21.875 --> 00:32:24.611 align:start position:36% line:-2
便利なツールも
ご紹介しましょう

00:32:24.845 --> 00:32:27.648 align:start position:32% line:-1
この先はマシューが―

00:32:27.748 --> 00:32:32.653 align:start position:20% line:-2
Xcode 10でのダークモードの
導入方法について話します

00:32:33.053 --> 00:32:38.959 align:start position:43% line:-1
(拍手)

00:32:39.059 --> 00:32:40.394 align:start position:30% line:-1
ありがとう　クリステン

00:32:40.561 --> 00:32:43.897 align:start position:27% line:-2
今年リリースのXcodeは
生産性に力を入れています

00:32:43.997 --> 00:32:47.835 align:start position:29% line:-2
ワークフローや
パフォーマンスの改善も―

00:32:47.935 --> 00:32:50.204 align:start position:21% line:-1
すべてSTkitに集約されてます

00:32:50.304 --> 00:32:56.109 align:start position:18% line:-2
macOS Mojaveを起動すると
Xcodeは新しくなっています

00:32:56.343 --> 00:33:02.649 align:start position:23% line:-2
ダークモードを
Xcodeで調整してみましょう

00:32:56.343 --> 00:33:02.649 align:start position:23% line:-2
ダークモードを
Xcodeで調整してみましょう

00:33:05.686 --> 00:33:09.323 align:start position:21% line:-2
先ほどのSolar System
アプリケーションです

00:33:09.456 --> 00:33:13.360 align:start position:34% line:-2
ダークモードへの
切り替えは順調で―

00:33:13.694 --> 00:33:16.497 align:start position:29% line:-1
数ヵ所の調整で完成します

00:33:16.597 --> 00:33:20.234 align:start position:34% line:-2
デザイナーが描いた
暗い色調の地球です

00:33:20.434 --> 00:33:24.872 align:start position:29% line:-2
ハードコード化した２つの
ボックスを変更します

00:33:25.139 --> 00:33:28.075 align:start position:18% line:-2
Xcodeのアセットカタログがあれば
簡単にできます

00:33:28.442 --> 00:33:30.277 align:start position:39% line:-1
始めましょう

00:33:30.944 --> 00:33:33.247 align:start position:27% line:-1
アセットでタブを変更します

00:33:33.347 --> 00:33:37.484 align:start position:29% line:-2
すでに全カラーの
暗い色調を設定しています

00:33:38.418 --> 00:33:40.954 align:start position:29% line:-1
これが惑星のグループで―

00:33:41.054 --> 00:33:44.258 align:start position:34% line:-1
暗い配色を作ります

00:33:44.658 --> 00:33:45.659 align:start position:43% line:-1
簡単です

00:33:46.026 --> 00:33:46.994 align:start position:41% line:-1
選択して―

00:33:47.327 --> 00:33:50.564 align:start position:32% line:-2
インスペクタで
暗い配色を追加します

00:33:50.931 --> 00:33:55.502 align:start position:27% line:-2
デザイナーから届いた素材を
フォルダから取り出し

00:33:55.602 --> 00:33:57.638 align:start position:32% line:-1
カタログに追加します

00:33:58.071 --> 00:33:58.872 align:start position:43% line:-1
以上です

00:33:59.406 --> 00:34:01.675 align:start position:27% line:-1
インターフェイスに戻ったら

00:33:59.406 --> 00:34:01.675 align:start position:27% line:-1
インターフェイスに戻ったら

00:34:01.775 --> 00:34:06.046 align:start position:12% line:-2
地球がInterface Builderに
マッチしています

00:34:07.080 --> 00:34:10.417 align:start position:34% line:-2
カラー配色を
設定してあるので―

00:34:10.516 --> 00:34:13.754 align:start position:30% line:-2
ボックスを更新するため
選択します

00:34:13.853 --> 00:34:18.324 align:start position:29% line:-2
インスペクタで
カタログから色を選びます

00:34:18.492 --> 00:34:20.728 align:start position:32% line:-1
バッジ背景色にします

00:34:21.261 --> 00:34:23.996 align:start position:34% line:-2
インターフェイスが
よくなりました

00:34:24.697 --> 00:34:28.034 align:start position:34% line:-2
インターフェイスを
変更する時は―

00:34:28.135 --> 00:34:30.838 align:start position:32% line:-1
他の部分も確認します

00:34:31.304 --> 00:34:33.306 align:start position:18% line:-2
Interface Builderを
使えば簡単です

00:34:33.674 --> 00:34:38.946 align:start position:29% line:-2
下部に新しいバーがあり
見た目を切り替えられます

00:34:39.246 --> 00:34:44.117 align:start position:30% line:-2
左を選択すると
明るい場合も見られて―

00:34:44.251 --> 00:34:46.620 align:start position:34% line:-1
進捗確認が簡単です

00:34:47.853 --> 00:34:50.690 align:start position:34% line:-2
アプリケーションを
起動してみましょう

00:34:51.158 --> 00:34:54.360 align:start position:34% line:-2
アセットを更新して
起動します

00:34:54.561 --> 00:34:57.664 align:start position:27% line:-1
アプリケーションが開きます

00:34:57.931 --> 00:35:00.134 align:start position:38% line:-1
いい感じですね

00:34:57.931 --> 00:35:00.134 align:start position:38% line:-1
いい感じですね

00:35:00.801 --> 00:35:04.838 align:start position:27% line:-2
ダークモードが
システムとマッチしています

00:35:05.038 --> 00:35:07.975 align:start position:30% line:-1
開発中でも変更できます

00:35:08.375 --> 00:35:12.880 align:start position:21% line:-2
下のデバッグバーは
Touch Barにもありますが

00:35:12.980 --> 00:35:15.449 align:start position:36% line:-2
アピアランスも
切り替えられます

00:35:15.549 --> 00:35:18.118 align:start position:34% line:-2
ライトモードと
ダークモードの他―

00:35:18.218 --> 00:35:21.722 align:start position:27% line:-2
“コントラストを上げる”も
追加しました

00:35:22.122 --> 00:35:24.157 align:start position:36% line:-1
ライトモードです

00:35:24.291 --> 00:35:27.995 align:start position:30% line:-2
アセットをロードすれば
アプリケーションも対応

00:35:28.462 --> 00:35:31.832 align:start position:18% line:-2
Interface Builderと
アセットカタログで簡単です

00:35:32.032 --> 00:35:37.137 align:start position:30% line:-2
ダークモードでも簡単に
見た目をよくできます

00:35:38.739 --> 00:35:44.645 align:start position:43% line:-1
(拍手)

00:35:45.879 --> 00:35:51.051 align:start position:27% line:-2
Xcodeでダークモードが
欲しいという声は―

00:35:51.285 --> 00:35:53.821 align:start position:29% line:-1
一番多いリクエストでした

00:35:53.921 --> 00:35:58.625 align:start position:23% line:-2
数週間前 App Storeに
投稿がありました

00:35:58.725 --> 00:36:01.729 align:start position:34% line:-2
ロニー･ボー･
ボニーさんからです

00:35:58.725 --> 00:36:01.729 align:start position:34% line:-2
ロニー･ボー･
ボニーさんからです

00:36:02.329 --> 00:36:04.097 align:start position:32% line:-1
作り話ではありません

00:36:04.431 --> 00:36:06.467 align:start position:30% line:-1
彼に言いたいことがある

00:36:06.567 --> 00:36:09.503 align:start position:32% line:-2
ロニー
ダークモードは無償だ

00:36:09.603 --> 00:36:12.639 align:start position:41% line:-1
(笑い声)

00:36:12.740 --> 00:36:16.076 align:start position:43% line:-1
(拍手)

00:36:16.243 --> 00:36:20.280 align:start position:29% line:-2
デザインツールの改良点も
お話しします

00:36:21.281 --> 00:36:25.819 align:start position:27% line:-2
Macではプリファレンスや
インスペクタが好まれます

00:36:25.919 --> 00:36:30.157 align:start position:20% line:-2
CocoaのNSGridViewは
レイアウトにぴったりです

00:36:30.390 --> 00:36:34.361 align:start position:14% line:-1
NSGridViewの力を見てみましょう

00:36:34.461 --> 00:36:40.200 align:start position:29% line:-2
スプレッドシートの表の
行列をデザインするように

00:36:40.500 --> 00:36:42.703 align:start position:32% line:-2
ドラッグ＆ドロップで
できます

00:36:42.803 --> 00:36:44.538 align:start position:43% line:-1
(拍手)

00:36:44.638 --> 00:36:46.139 align:start position:39% line:-1
どうぞ拍手を

00:36:46.240 --> 00:36:48.609 align:start position:43% line:-1
(拍手)

00:36:48.709 --> 00:36:50.477 align:start position:27% line:-1
スプレッドシートは最高です

00:36:51.478 --> 00:36:54.114 align:start position:30% line:-2
ドラッグ＆ドロップで
コンテンツを移動でき―

00:36:54.214 --> 00:36:57.951 align:start position:30% line:-2
システムへのアクセスも
自在です

00:36:58.685 --> 00:37:02.222 align:start position:34% line:-2
インターフェイスを
デザインする上で―

00:36:58.685 --> 00:37:02.222 align:start position:34% line:-2
インターフェイスを
デザインする上で―

00:37:02.422 --> 00:37:04.458 align:start position:32% line:-1
ライブラリは重要です

00:37:04.558 --> 00:37:07.861 align:start position:38% line:-2
インスペクタと
切り分けました

00:37:08.128 --> 00:37:11.531 align:start position:34% line:-2
ライブラリを
好きな場所に置き―

00:37:11.632 --> 00:37:14.067 align:start position:32% line:-1
サイズ変更もできます

00:37:14.167 --> 00:37:19.373 align:start position:30% line:-2
作業中は開いたままで
終了時に自動で閉じます

00:37:19.506 --> 00:37:25.312 align:start position:43% line:-1
(拍手)

00:37:25.446 --> 00:37:30.784 align:start position:29% line:-2
コードのスニペットなどの
コンテンツでも使えます

00:37:31.451 --> 00:37:34.922 align:start position:29% line:-1
デザインツールを使えば―

00:37:35.022 --> 00:37:39.893 align:start position:27% line:-2
ドキュメントのロードも
キャンバスの操作も速いです

00:37:40.861 --> 00:37:44.198 align:start position:29% line:-1
我々のソースエディタも―

00:37:44.298 --> 00:37:47.834 align:start position:34% line:-2
素早く流れるような
操作性です

00:37:48.368 --> 00:37:52.806 align:start position:32% line:-2
多くのドキュメントを
より速くロードし―

00:37:52.906 --> 00:37:56.643 align:start position:30% line:-2
１秒あたり60フレーム
スクロールします

00:37:57.344 --> 00:38:03.150 align:start position:25% line:-2
SourceKitの安定性と
言語統合を強化しました

00:37:57.344 --> 00:38:03.150 align:start position:25% line:-2
SourceKitの安定性と
言語統合を強化しました

00:38:03.250 --> 00:38:08.956 align:start position:29% line:-2
皆さんの色とりどりの
コメントも残されています

00:38:09.056 --> 00:38:10.124 align:start position:41% line:-1
(笑い声)

00:38:10.224 --> 00:38:16.063 align:start position:43% line:-1
(拍手)

00:38:16.163 --> 00:38:21.301 align:start position:21% line:-2
Code Completionと
Navigateは不可欠です

00:38:21.468 --> 00:38:24.271 align:start position:20% line:-1
Code Completionは―

00:38:24.371 --> 00:38:27.508 align:start position:36% line:-2
より信頼性の高い
結果を出せます

00:38:27.908 --> 00:38:30.477 align:start position:27% line:-1
ナビゲートすると定義に移動

00:38:30.577 --> 00:38:35.315 align:start position:27% line:-2
行き先はファイルや
ライン情報によって提供され

00:38:35.416 --> 00:38:38.118 align:start position:30% line:-1
選びやすくなっています

00:38:38.285 --> 00:38:43.357 align:start position:43% line:-1
(拍手)

00:38:43.457 --> 00:38:48.562 align:start position:23% line:-2
アクションメニューの
Callersオプションから―

00:38:48.662 --> 00:38:51.999 align:start position:30% line:-2
情報が得られ
スムーズに移動できます

00:38:53.033 --> 00:38:57.538 align:start position:23% line:-2
昨年 Swiftを含む全言語の
リファクタリングが可能になり

00:38:57.638 --> 00:39:03.210 align:start position:21% line:-2
Swift communityも
この機会を享受しました

00:38:57.638 --> 00:39:03.210 align:start position:21% line:-2
Swift communityも
この機会を享受しました

00:39:03.811 --> 00:39:07.214 align:start position:34% line:-2
新たなアクションが
追加され―

00:39:07.314 --> 00:39:10.818 align:start position:21% line:-1
Xcodeで簡単に作成されました

00:39:12.252 --> 00:39:16.623 align:start position:30% line:-2
リファクタリングで
ソースの修正ができます

00:39:16.723 --> 00:39:19.393 align:start position:36% line:-2
変更履歴を
見やすくするため

00:39:19.493 --> 00:39:22.596 align:start position:4% line:-2
Source Control Change Barを
導入しました

00:39:23.230 --> 00:39:25.532 align:start position:29% line:-1
エディタの左サイドにあり

00:39:25.632 --> 00:39:29.837 align:start position:27% line:-1
変更部分をハイライトします

00:39:30.137 --> 00:39:34.208 align:start position:30% line:-2
インジケータの色などで
変更の種類が分かります

00:39:34.308 --> 00:39:37.578 align:start position:27% line:-1
自分やチームがした変更点や

00:39:37.678 --> 00:39:41.582 align:start position:34% line:-2
競合してる部分も
ひと目で分かります

00:39:42.583 --> 00:39:44.451 align:start position:39% line:-1
この機能は…

00:39:44.551 --> 00:39:49.256 align:start position:43% line:-1
(拍手)

00:39:49.790 --> 00:39:51.625 align:start position:34% line:-1
すばらしいですよね

00:39:51.725 --> 00:39:54.595 align:start position:29% line:-1
ここでデモをお見せします

00:39:56.196 --> 00:39:58.999 align:start position:23% line:-2
Solar Systemの
アプリケーションに戻りましょう

00:39:59.099 --> 00:40:03.103 align:start position:29% line:-2
変更したい
ソースファイルがあります

00:39:59.099 --> 00:40:03.103 align:start position:29% line:-2
変更したい
ソースファイルがあります

00:40:03.203 --> 00:40:05.539 align:start position:9% line:-1
View Controller Sceneです

00:40:06.106 --> 00:40:08.842 align:start position:27% line:-1
該当箇所にスクロールします

00:40:09.710 --> 00:40:13.647 align:start position:29% line:-2
行番号のすぐ左に見える
Change Barが―

00:40:14.114 --> 00:40:18.819 align:start position:29% line:-2
チームの誰かが変更したと
示しています

00:40:18.952 --> 00:40:24.892 align:start position:30% line:-2
もし私が変更していたら
赤で競合箇所を表します

00:40:25.192 --> 00:40:27.394 align:start position:29% line:-1
インジケータに合わせると

00:40:27.494 --> 00:40:31.732 align:start position:34% line:-2
変更点と競合箇所が
ハイライトされます

00:40:32.032 --> 00:40:35.335 align:start position:29% line:-2
インジケータをクリックで
アクションメニューへ飛び

00:40:35.436 --> 00:40:39.339 align:start position:34% line:-2
何かアクションを
取ることができます

00:40:39.907 --> 00:40:43.043 align:start position:32% line:-2
チームが
コメントを残してます

00:40:43.210 --> 00:40:48.348 align:start position:27% line:-2
彼の変更を生かすことにして
私の変更は破棄します

00:40:48.482 --> 00:40:52.186 align:start position:21% line:-2
Source Controlから
彼の変更を呼び出します

00:40:53.354 --> 00:40:56.723 align:start position:27% line:-1
これが彼の記述的な変更です

00:40:57.024 --> 00:41:01.662 align:start position:30% line:-2
さらにスクロールして
何かないか見ていきます

00:40:57.024 --> 00:41:01.662 align:start position:30% line:-2
さらにスクロールして
何かないか見ていきます

00:41:01.862 --> 00:41:06.033 align:start position:23% line:-2
オーバースクロールを
Xcode 10は採用しました

00:41:06.366 --> 00:41:12.172 align:start position:43% line:-1
(拍手)

00:41:12.306 --> 00:41:14.808 align:start position:29% line:-1
変更したい部分に戻ります

00:41:14.908 --> 00:41:20.781 align:start position:27% line:-2
ハードコード化された機能を
プロパティに変換しましょう

00:41:21.215 --> 00:41:26.787 align:start position:27% line:-2
３ヵ所ありますが
コメントのせいで離れてます

00:41:27.087 --> 00:41:30.691 align:start position:18% line:-1
Xcode 10では問題になりません

00:41:30.958 --> 00:41:33.460 align:start position:29% line:-1
何でも折りたためるのです

00:41:33.560 --> 00:41:35.529 align:start position:29% line:-1
リボンを付けているので―

00:41:35.629 --> 00:41:38.532 align:start position:27% line:-1
行番号の右をクリックします

00:41:38.632 --> 00:41:42.536 align:start position:43% line:-1
(拍手)

00:41:42.636 --> 00:41:44.137 align:start position:34% line:-1
コードが隠れました

00:41:44.238 --> 00:41:47.708 align:start position:27% line:-1
非表示になり洗練されました

00:41:48.442 --> 00:41:53.814 align:start position:27% line:-2
これが変更したい機能ですが
どれも似ているので―

00:41:53.914 --> 00:41:57.584 align:start position:29% line:-2
同時に変更できたらいいと
思いませんか？

00:41:58.152 --> 00:42:01.655 align:start position:7% line:-2
multi-cursor editingを使えば
可能です

00:41:58.152 --> 00:42:01.655 align:start position:7% line:-2
multi-cursor editingを使えば
可能です

00:42:01.755 --> 00:42:07.628 align:start position:43% line:-1
(拍手)

00:42:08.028 --> 00:42:12.099 align:start position:12% line:-2
multi-cursor editingは
controlとshiftを使います

00:42:12.299 --> 00:42:16.904 align:start position:27% line:-2
２つのボタンを押したまま
各冒頭部分をクリックします

00:42:17.204 --> 00:42:20.374 align:start position:34% line:-2
範囲選択を使い
これをVARに変更

00:42:20.474 --> 00:42:22.509 align:start position:32% line:-1
これもコロンにします

00:42:22.609 --> 00:42:25.245 align:start position:38% line:-1
いい調子ですね

00:42:25.746 --> 00:42:31.752 align:start position:29% line:-2
カタログの色の名前が
プロパティ名と同じなので

00:42:31.852 --> 00:42:34.755 align:start position:30% line:-1
その名前をコピーします

00:42:34.855 --> 00:42:37.591 align:start position:29% line:-1
そして ここを変更します

00:42:37.691 --> 00:42:42.129 align:start position:27% line:-2
再度 ３ヵ所をクリックして
すべて選択し―

00:42:42.229 --> 00:42:46.867 align:start position:27% line:-2
名前を入力して貼り付ければ
変更できます

00:42:46.967 --> 00:42:48.602 align:start position:38% line:-1
３倍の速さです

00:42:48.702 --> 00:42:54.708 align:start position:43% line:-1
(拍手)

00:42:55.375 --> 00:42:59.546 align:start position:12% line:-2
multi-cursor editingは
カラムの編集にも使えます

00:42:59.713 --> 00:43:03.016 align:start position:30% line:-2
私のIBOutletが
弱いとされました

00:42:59.713 --> 00:43:03.016 align:start position:30% line:-2
私のIBOutletが
弱いとされました

00:43:03.116 --> 00:43:06.987 align:start position:25% line:-2
optionキーを押しながら
ここを選択します

00:43:07.087 --> 00:43:07.988 align:start position:43% line:-1
（歓声）

00:43:08.088 --> 00:43:12.726 align:start position:34% line:-2
そう ご覧ください
こうして変換します

00:43:12.826 --> 00:43:14.595 align:start position:36% line:-1
あっという間です

00:43:14.695 --> 00:43:18.265 align:start position:20% line:-2
Source Controlバーで
変更を確実にします

00:43:18.665 --> 00:43:22.736 align:start position:29% line:-2
Xcode 10の
すばらしい編集機能でした

00:43:23.136 --> 00:43:28.809 align:start position:43% line:-1
(拍手)

00:43:30.577 --> 00:43:34.415 align:start position:4% line:-2
Source Control Change Barや
multi-cursor editingの他―

00:43:34.515 --> 00:43:37.351 align:start position:29% line:-2
パフォーマンスと安定性が
改善しました

00:43:37.451 --> 00:43:41.789 align:start position:25% line:-2
Xcode 10は編集体験を
常に向上させます

00:43:42.790 --> 00:43:48.028 align:start position:18% line:-2
Source Controlの統合も
拡張しています

00:43:48.595 --> 00:43:53.000 align:start position:30% line:-2
競合解消システムを
Gitで管理し始めて―

00:43:53.100 --> 00:43:57.838 align:start position:29% line:-2
正確で予測可能で
より一層 速くなりました

00:43:58.739 --> 00:44:02.142 align:start position:32% line:-2
次にプルアクションを
強化しました

00:43:58.739 --> 00:44:02.142 align:start position:32% line:-2
次にプルアクションを
強化しました

00:44:02.676 --> 00:44:06.246 align:start position:29% line:-2
ブランチ間の変更を再生…
拍手をどうぞ

00:44:06.380 --> 00:44:09.149 align:start position:43% line:-1
(拍手)

00:44:09.249 --> 00:44:13.720 align:start position:30% line:-2
不必要な統合をせずに
ブランチ間で再生します

00:44:14.354 --> 00:44:18.625 align:start position:23% line:-2
安全に接続するため
XcodeがSSHキーを作成し

00:44:18.725 --> 00:44:21.862 align:start position:30% line:-2
サービスアカウントに
直接アップロードします

00:44:21.962 --> 00:44:26.767 align:start position:43% line:-1
(拍手)

00:44:26.867 --> 00:44:29.970 align:start position:27% line:-1
我々のサービスが向上します

00:44:30.070 --> 00:44:34.441 align:start position:20% line:-2
さらにAtlassianの
Bitbucket Cloudと―

00:44:34.541 --> 00:44:38.078 align:start position:20% line:-2
Bitbucket Serverを
サポートします

00:44:38.178 --> 00:44:42.482 align:start position:43% line:-1
(拍手)

00:44:42.583 --> 00:44:46.487 align:start position:23% line:-1
GitLab.comも同様です

00:44:46.587 --> 00:44:50.090 align:start position:43% line:-1
(拍手)

00:44:50.190 --> 00:44:52.359 align:start position:14% line:-1
Source Controlが好きですね

00:44:52.526 --> 00:44:58.499 align:start position:27% line:-2
ウェブのインターフェイスは
直接 Xcodeへ行きます

00:45:00.033 --> 00:45:06.040 align:start position:21% line:-2
我々はアプリケーションの最適化と
デバッグツールに注力しています

00:45:06.140 --> 00:45:10.177 align:start position:30% line:-2
今年はツールの安定性に
焦点を当てました

00:45:10.811 --> 00:45:13.781 align:start position:27% line:-1
まずLLDBから始めました

00:45:13.881 --> 00:45:15.115 align:start position:36% line:-1
起動が速くなり―

00:45:15.215 --> 00:45:20.621 align:start position:12% line:-2
コンソールとXcodeのVariables
Viewの変数へのアクセスが正確です

00:45:21.555 --> 00:45:25.526 align:start position:25% line:-2
次にdSYMのダウンロードが
５倍速くなりました

00:45:25.626 --> 00:45:27.861 align:start position:34% line:-1
何秒という世界です

00:45:27.961 --> 00:45:33.434 align:start position:43% line:-1
(拍手)

00:45:33.534 --> 00:45:36.336 align:start position:29% line:-2
メモリのデバッグツールも
強化し―

00:45:36.437 --> 00:45:39.673 align:start position:34% line:-2
ロードと保存時間を
短縮しました

00:45:39.773 --> 00:45:43.177 align:start position:30% line:-2
可視化しやすい
レイアウトになりました

00:45:43.777 --> 00:45:48.215 align:start position:25% line:-2
今春 クラッシュログのような
エネルギー使用ログの―

00:45:48.315 --> 00:45:51.018 align:start position:29% line:-2
エネルギー診断レポートを
導入しました

00:45:51.451 --> 00:45:53.754 align:start position:32% line:-2
App Storeの
アプリケーションで―

00:45:53.854 --> 00:45:56.156 align:start position:30% line:-1
自動で試験をしています

00:45:56.256 --> 00:46:00.427 align:start position:27% line:-2
画面に影響する前面や背景の
使用量の詳細です

00:45:56.256 --> 00:46:00.427 align:start position:27% line:-2
画面に影響する前面や背景の
使用量の詳細です

00:46:01.295 --> 00:46:03.397 align:start position:29% line:-1
オーガナイザに表示され―

00:46:03.497 --> 00:46:06.467 align:start position:34% line:-2
スタックフレームで
解説されます

00:46:06.800 --> 00:46:10.604 align:start position:29% line:-2
クラッシュログのように
プロジェクトから開くと―

00:46:10.704 --> 00:46:14.174 align:start position:29% line:-1
修正箇所を示してくれます

00:46:15.509 --> 00:46:18.912 align:start position:27% line:-1
さらにテストを改良しました

00:46:19.680 --> 00:46:22.182 align:start position:27% line:-1
今春 コードカバレッジに―

00:46:22.282 --> 00:46:25.252 align:start position:27% line:-2
データへアクセスできる
コマンド番号を追加しました

00:46:25.352 --> 00:46:29.857 align:start position:34% line:-2
個々のターゲットを
選択できるのです

00:46:30.190 --> 00:46:35.629 align:start position:27% line:-2
コーディングとテストに
集中できるようになりました

00:46:36.730 --> 00:46:42.135 align:start position:27% line:-2
さらに今年 ワークフローを
３つ追加予定です

00:46:42.669 --> 00:46:48.375 align:start position:29% line:-2
テストバンドルのテストを
自動で追加や削除できます

00:46:48.875 --> 00:46:54.882 align:start position:29% line:-2
不意の依存を防ぐため
順序をランダムにできます

00:46:55.416 --> 00:46:57.117 align:start position:29% line:-1
そして最も大きな変更は―

00:46:57.217 --> 00:47:01.355 align:start position:30% line:-2
Xcodeで同時に
テストができることです

00:46:57.217 --> 00:47:01.355 align:start position:30% line:-2
Xcodeで同時に
テストができることです

00:47:01.455 --> 00:47:07.361 align:start position:43% line:-1
(拍手)

00:47:07.461 --> 00:47:12.599 align:start position:29% line:-2
複数のデバイスで
同じテストをするために―

00:47:12.699 --> 00:47:15.569 align:start position:21% line:-1
Xcodebuildは有効でした

00:47:15.903 --> 00:47:20.307 align:start position:32% line:-2
テスト範囲を広げたい
デベロッパに最適です

00:47:20.908 --> 00:47:24.778 align:start position:27% line:-2
Xcodeの作業で
１つのコンフィグに集中し―

00:47:24.878 --> 00:47:28.048 align:start position:34% line:-2
できるだけ早く
テストを完了させる

00:47:28.582 --> 00:47:34.421 align:start position:29% line:-2
これがXcode 10の
劇的に改善したテストです

00:47:35.088 --> 00:47:40.894 align:start position:23% line:-2
Xcodeはアプリケーションや
iOSのコピーを作り―

00:47:40.994 --> 00:47:43.564 align:start position:34% line:-2
それぞれを
同時にテストします

00:47:44.331 --> 00:47:50.337 align:start position:27% line:-2
コンフィグ１つのテストでも
わずかな時間で終わるのです

00:47:50.938 --> 00:47:54.675 align:start position:27% line:-2
マシンのスペックに合わせて
同時テストを行います

00:47:54.775 --> 00:47:58.245 align:start position:18% line:-1
つまりiMac Proなら超最高です

00:47:58.345 --> 00:47:59.546 align:start position:41% line:-1
(笑い声)

00:47:59.646 --> 00:48:01.048 align:start position:36% line:-1
どんなに最高か？

00:47:59.646 --> 00:48:01.048 align:start position:36% line:-1
どんなに最高か？

00:48:01.148 --> 00:48:03.217 align:start position:32% line:-1
デモを見てみましょう

00:48:05.452 --> 00:48:08.322 align:start position:16% line:-1
またSolar Systemの出番です

00:48:08.855 --> 00:48:09.857 align:start position:43% line:-1
これは―

00:48:10.524 --> 00:48:14.194 align:start position:21% line:-1
先ほどMacでテストしたログです

00:48:14.294 --> 00:48:16.263 align:start position:34% line:-1
14秒かかりました

00:48:16.864 --> 00:48:19.099 align:start position:30% line:-1
同時テストをしてみます

00:48:19.333 --> 00:48:22.803 align:start position:21% line:-1
ツールバーのTestを選択します

00:48:22.936 --> 00:48:24.738 align:start position:29% line:-1
スキームシートを出します

00:48:25.572 --> 00:48:28.642 align:start position:0% line:-2
OptionsのExecute in parallelを
チェックし―

00:48:28.742 --> 00:48:30.210 align:start position:36% line:-1
テストを押します

00:48:30.711 --> 00:48:34.448 align:start position:34% line:-2
同時テストを行うと
右下に―

00:48:34.548 --> 00:48:38.285 align:start position:32% line:-2
たくさんのプロセスが
表示されます

00:48:38.385 --> 00:48:42.189 align:start position:34% line:-2
テストスイートの
それぞれの結果です

00:48:42.890 --> 00:48:47.094 align:start position:32% line:-2
今までの４倍の速さで
テストが完了しました

00:48:47.394 --> 00:48:53.267 align:start position:43% line:-1
(拍手)

00:48:54.001 --> 00:48:59.273 align:start position:27% line:-2
同時テストはUIテストでも
すばらしく有効です

00:48:59.640 --> 00:49:05.379 align:start position:29% line:-2
iOSアプリケーションで
テストしてみます

00:48:59.640 --> 00:49:05.379 align:start position:29% line:-2
iOSアプリケーションで
テストしてみます

00:49:05.712 --> 00:49:09.116 align:start position:29% line:-1
裏でシミュレータを生成し

00:49:09.216 --> 00:49:12.686 align:start position:32% line:-2
デバッグセッションを
いくつも設定します

00:49:12.786 --> 00:49:15.756 align:start position:34% line:-2
宇宙へ飛ぶと
すべてテスト中です

00:49:16.557 --> 00:49:20.194 align:start position:30% line:-2
異なるテストスイートを
各シミュレータで―

00:49:20.294 --> 00:49:23.096 align:start position:36% line:-2
テストすることが
できるのです

00:49:23.430 --> 00:49:28.302 align:start position:29% line:-2
すべてのデバイスで
同じテストを速く実行し―

00:49:28.402 --> 00:49:32.239 align:start position:27% line:-2
より良いアプリケーションを
作ることができます

00:49:32.506 --> 00:49:36.610 align:start position:27% line:-2
Xcode 10の超最高な
同時テストでした

00:49:36.710 --> 00:49:42.049 align:start position:43% line:-1
(拍手)

00:49:46.620 --> 00:49:51.225 align:start position:25% line:-2
Swiftの新しいシステムを
昨年 プレビューしました

00:49:51.391 --> 00:49:55.262 align:start position:27% line:-2
多くの方から
フィードバックがありました

00:49:55.396 --> 00:49:59.800 align:start position:30% line:-2
最新のビルドシステムが
すべてに適用されました

00:50:00.300 --> 00:50:03.337 align:start position:32% line:-1
安定性と信頼性の他―

00:50:03.437 --> 00:50:06.306 align:start position:36% line:-2
パフォーマンスに
注目しました

00:50:06.673 --> 00:50:10.944 align:start position:27% line:-2
速いリビルドや
改善されたタスク同時実行が

00:50:11.044 --> 00:50:12.746 align:start position:30% line:-1
少ないメモリで可能です

00:50:13.380 --> 00:50:16.483 align:start position:36% line:-2
ビルドシステムの
診断ツールは―

00:50:16.583 --> 00:50:21.421 align:start position:32% line:-2
コンフィグの調整の
手助けとなるでしょう

00:50:22.656 --> 00:50:27.261 align:start position:25% line:-2
ビルドパフォーマンスに関して
リリースがあります

00:50:27.361 --> 00:50:28.896 align:start position:30% line:-1
Swift 4.2です

00:50:29.663 --> 00:50:35.235 align:start position:27% line:-2
Swiftプロジェクトで
昨年 頑強な改善をしました

00:50:35.802 --> 00:50:39.173 align:start position:27% line:-2
iOSアプリケーションの
オープンソースを出しました

00:50:39.273 --> 00:50:41.408 align:start position:29% line:-1
前回のリリースに対して―

00:50:41.508 --> 00:50:46.180 align:start position:27% line:-2
デバッグビルドの
パフォーマンスが２倍速です

00:50:46.847 --> 00:50:49.049 align:start position:38% line:-2
新たなサイズの
最適化機能で―

00:50:49.249 --> 00:50:53.954 align:start position:30% line:-2
コードサイズは
最大で30％減らせます

00:50:54.054 --> 00:50:56.924 align:start position:29% line:-2
モバイルのダウンロードに
好都合です

00:50:58.192 --> 00:51:01.495 align:start position:34% line:-2
さらに多くの機能が
追加され―

00:50:58.192 --> 00:51:01.495 align:start position:34% line:-2
さらに多くの機能が
追加され―

00:51:01.595 --> 00:51:04.965 align:start position:30% line:-2
ランタイムランゲージを
改善しました

00:51:05.399 --> 00:51:09.670 align:start position:27% line:-2
中には舌をかむような名前の
APIもあります

00:51:10.637 --> 00:51:15.342 align:start position:18% line:-2
Xcode Playgroundsで
お試しください

00:51:15.442 --> 00:51:19.680 align:start position:21% line:-2
Playgroundセッションを
再開することなく―

00:51:19.780 --> 00:51:25.052 align:start position:30% line:-2
新しいコードを
評価することができます

00:51:25.486 --> 00:51:30.557 align:start position:43% line:-1
(拍手)

00:51:30.791 --> 00:51:32.526 align:start position:21% line:-2
Solar Systemビューの
Playgroundです

00:51:32.626 --> 00:51:35.963 align:start position:18% line:-1
Playgroundを起動したまま―

00:51:36.063 --> 00:51:40.300 align:start position:30% line:-2
追加したコードを評価し
結果が得られます

00:51:41.869 --> 00:51:45.572 align:start position:30% line:-2
ランタイムランゲージと
ツールの改善で―

00:51:45.672 --> 00:51:49.643 align:start position:30% line:-2
Xcode 10の中で
Swiftは飛躍します

00:51:50.544 --> 00:51:55.015 align:start position:21% line:-2
さらにSwift 5のリリースを
予定しています

00:51:55.883 --> 00:52:01.688 align:start position:23% line:-2
OSの一部として
Swiftが動くようになります

00:51:55.883 --> 00:52:01.688 align:start position:23% line:-2
OSの一部として
Swiftが動くようになります

00:52:01.922 --> 00:52:04.491 align:start position:25% line:-2
Swiftの実行時間の考慮は
不要です

00:52:04.591 --> 00:52:06.627 align:start position:36% line:-1
最新のOSなら―

00:52:07.161 --> 00:52:10.464 align:start position:36% line:-2
小さい容量で
速く起動できます

00:52:10.564 --> 00:52:15.636 align:start position:43% line:-1
(拍手)

00:52:15.969 --> 00:52:20.174 align:start position:30% line:-2
目標に向かって
すばらしく前進しました

00:52:20.274 --> 00:52:23.744 align:start position:30% line:-1
リリースは来年初頭です

00:52:25.078 --> 00:52:29.650 align:start position:27% line:-2
Xcode 10は生産性が
非常に改善されました

00:52:29.750 --> 00:52:33.120 align:start position:29% line:-2
もちろん
パフォーマンス 頑強さ―

00:52:33.220 --> 00:52:36.256 align:start position:27% line:-1
安定性にも力を入れています

00:52:36.356 --> 00:52:40.294 align:start position:27% line:-2
すべてのツールで
最高の仕事を素早くできます

00:52:40.494 --> 00:52:42.863 align:start position:27% line:-1
それがXcode 10です

00:52:43.597 --> 00:52:49.536 align:start position:43% line:-1
(拍手)

00:52:51.038 --> 00:52:55.142 align:start position:25% line:-2
次にジョンから
機械学習についてお話しします

00:52:55.242 --> 00:52:56.076 align:start position:45% line:-1
ジョン

00:52:56.610 --> 00:52:58.445 align:start position:43% line:-1
(拍手)

00:52:58.545 --> 00:52:59.947 align:start position:32% line:-1
マシュー　ありがとう

00:53:02.182 --> 00:53:07.054 align:start position:27% line:-2
機械学習はOSと
アプリケーションの基盤です

00:53:07.154 --> 00:53:11.692 align:start position:29% line:-2
しかし目標は
誰もが機械学習を使える―

00:53:12.259 --> 00:53:15.262 align:start position:29% line:-2
シンプルで簡単なAPIを
提供すること

00:53:15.662 --> 00:53:19.933 align:start position:30% line:-2
皆さんは革新的な機能や
アプリケーションを―

00:53:20.033 --> 00:53:22.269 align:start position:32% line:-1
多く作ってくれました

00:53:24.238 --> 00:53:30.010 align:start position:25% line:-2
昨年 フレームワークである
Core MLを導入しました

00:53:30.110 --> 00:53:33.113 align:start position:30% line:-1
まずは同時に導入した―

00:53:33.213 --> 00:53:38.252 align:start position:7% line:-2
VisionとNatural Languageの
改善をお見せします

00:53:40.154 --> 00:53:42.389 align:start position:30% line:-1
Visionを使います

00:53:42.523 --> 00:53:44.992 align:start position:29% line:-1
写真は深度が欲しいですね

00:53:45.092 --> 00:53:48.395 align:start position:32% line:-2
APIは
物体検出機能があり―

00:53:48.495 --> 00:53:51.732 align:start position:32% line:-2
箱のような
枠が表示されています

00:53:52.399 --> 00:53:56.937 align:start position:30% line:-2
顔認証や顔パーツ検出も
可能です

00:53:57.438 --> 00:54:02.376 align:start position:30% line:-2
QRコードのような
バーコードも検出します

00:53:57.438 --> 00:54:02.376 align:start position:30% line:-2
QRコードのような
バーコードも検出します

00:54:03.143 --> 00:54:07.347 align:start position:32% line:-2
今までは深度を
提供していましたが―

00:54:07.448 --> 00:54:12.252 align:start position:27% line:-2
さらに人物を切り抜くことが
できるようになりました

00:54:12.353 --> 00:54:17.558 align:start position:30% line:-2
背景から人物を切り抜き
別の背景に移せるのです

00:54:20.127 --> 00:54:25.432 align:start position:20% line:-2
Natural Languageは
Swiftに最適化したAPIです

00:54:26.767 --> 00:54:33.140 align:start position:29% line:-2
このような簡単な文章は
自動的に英語と特定します

00:54:34.107 --> 00:54:36.210 align:start position:30% line:-1
簡単なAPIを使って―

00:54:36.977 --> 00:54:40.814 align:start position:36% line:-2
文をトークン化し
品詞を識別します

00:54:41.448 --> 00:54:45.352 align:start position:32% line:-2
さらに固有表現抽出も
できます

00:54:45.953 --> 00:54:52.059 align:start position:23% line:-2
この文では組織名のAppleや
地名のサンノゼです

00:54:52.926 --> 00:54:56.330 align:start position:36% line:-2
英語なら簡単だと
思うでしょうか

00:54:56.430 --> 00:55:00.634 align:start position:32% line:-2
フランス語やドイツ語
日本語や簡体字など―

00:54:56.430 --> 00:55:00.634 align:start position:32% line:-2
フランス語やドイツ語
日本語や簡体字など―

00:55:00.734 --> 00:55:03.937 align:start position:34% line:-2
多くの言語を
サポートしています

00:55:06.640 --> 00:55:08.242 align:start position:30% line:-1
次はCore MLです

00:55:08.342 --> 00:55:11.678 align:start position:32% line:-2
我々の機械学習技術の
基盤です

00:55:12.546 --> 00:55:15.649 align:start position:25% line:-1
１年前に ここで発表して以来

00:55:15.749 --> 00:55:21.321 align:start position:27% line:-2
大手の訓練フレームワークに
採用されました

00:55:21.588 --> 00:55:24.925 align:start position:36% line:-2
たった１年で
驚くべき成果です

00:55:25.592 --> 00:55:27.427 align:start position:27% line:-1
しかし ここで止まりません

00:55:28.162 --> 00:55:30.430 align:start position:23% line:-1
Core ML 2を導入します

00:55:31.498 --> 00:55:34.968 align:start position:29% line:-1
モデルの実行をより速く―

00:55:35.068 --> 00:55:39.306 align:start position:27% line:-2
より小さく
カスタマイズしやすくします

00:55:39.907 --> 00:55:44.077 align:start position:30% line:-2
これが私たちが
最もお薦めする機能です

00:55:45.579 --> 00:55:49.683 align:start position:23% line:-2
パフォーマンスを改善するため
新しいバッチAPIを加えました

00:55:51.018 --> 00:55:56.757 align:start position:25% line:-2
以前は各画像を推論して
CPU･GPU間に送りました

00:55:57.191 --> 00:55:59.760 align:start position:29% line:-1
今は推論の要求をまとめて

00:55:59.860 --> 00:56:04.365 align:start position:30% line:-2
CPUとGPUの性能を
フルに発揮できます

00:55:59.860 --> 00:56:04.365 align:start position:30% line:-2
CPUとGPUの性能を
フルに発揮できます

00:56:04.965 --> 00:56:09.536 align:start position:5% line:-2
Metal Performance Shaderを
強化したことで―

00:56:09.636 --> 00:56:15.342 align:start position:23% line:-2
ResNetでパフォーマンスが
30％上がりました

00:56:15.442 --> 00:56:19.580 align:start position:29% line:-2
しかしiOSで使うような
小さなネットワーク―

00:56:19.680 --> 00:56:23.450 align:start position:29% line:-2
MobileNetsでの
起動時間は４倍です

00:56:24.551 --> 00:56:26.020 align:start position:36% line:-1
まだ止まりません

00:56:26.453 --> 00:56:30.858 align:start position:30% line:-2
モデルを小さくするため
量子化を進めます

00:56:31.024 --> 00:56:36.163 align:start position:25% line:-1
以前の容量は4.3MBでした

00:56:36.463 --> 00:56:41.468 align:start position:23% line:-2
MobileNetを例にすると
int8にまで削減し―

00:56:41.735 --> 00:56:45.139 align:start position:21% line:-1
17MBから５MB未満にしました

00:56:45.439 --> 00:56:49.076 align:start position:32% line:-1
とても大きな節約です

00:56:52.246 --> 00:56:57.084 align:start position:23% line:-2
ルックアップテーブルの量子化で
さらに減らします

00:56:57.384 --> 00:57:02.556 align:start position:30% line:-2
カスタムモデルや
フレキシブルな形など―

00:56:57.384 --> 00:57:02.556 align:start position:30% line:-2
カスタムモデルや
フレキシブルな形など―

00:57:02.656 --> 00:57:05.392 align:start position:32% line:-1
多くの機能があります

00:57:05.492 --> 00:57:09.363 align:start position:29% line:-2
推論に使う形を
すべて覚えさせなくても―

00:57:09.463 --> 00:57:14.601 align:start position:25% line:-2
１つのモデルを搭載すれば
APIがすべて行ってくれます

00:57:17.171 --> 00:57:19.306 align:start position:27% line:-1
次はCreate MLです

00:57:19.406 --> 00:57:23.777 align:start position:27% line:-2
新しくて簡単な機械学習訓練
フレームワークです

00:57:23.977 --> 00:57:26.813 align:start position:20% line:-1
機械学習 SwiftとXcode―

00:57:26.914 --> 00:57:30.384 align:start position:20% line:-2
Xcode Playgourndを
１つにします

00:57:31.418 --> 00:57:33.554 align:start position:34% line:-2
オンラインから
ダウンロードする―

00:57:33.654 --> 00:57:37.157 align:start position:27% line:-2
長く複雑なチュートリアルは
もう要りません

00:57:38.292 --> 00:57:43.564 align:start position:29% line:-2
画像分類や自然言語など
訓練をサポートしますが―

00:57:44.131 --> 00:57:49.002 align:start position:30% line:-2
機械学習には昔ながらの
アルゴリズムがあります

00:57:49.103 --> 00:57:54.141 align:start position:27% line:-2
線形回帰 ブースト決定木や
データ処理です

00:57:54.842 --> 00:58:01.048 align:start position:25% line:-2
しかし 機能に特化した訓練を
例に見ていきましょう

00:57:54.842 --> 00:58:01.048 align:start position:25% line:-2
しかし 機能に特化した訓練を
例に見ていきましょう

00:58:01.849 --> 00:58:03.484 align:start position:39% line:-1
自然言語では

00:58:04.518 --> 00:58:07.955 align:start position:25% line:-1
独自の自然言語モデルがあり―

00:58:08.055 --> 00:58:13.394 align:start position:30% line:-2
多言語のテキスト分類
単語のタグ付けをします

00:58:15.062 --> 00:58:19.600 align:start position:30% line:-2
とても少ないデータから
詳細な分析ができます

00:58:19.700 --> 00:58:22.135 align:start position:29% line:-1
例えば映画のレビューです

00:58:22.236 --> 00:58:25.506 align:start position:29% line:-2
肯定的または
否定的な文字列を訓練し―

00:58:25.606 --> 00:58:28.442 align:start position:30% line:-2
自分のテキスト分類器を
作成します

00:58:30.577 --> 00:58:33.680 align:start position:27% line:-1
ドメインの分析でも同じです

00:58:33.781 --> 00:58:39.787 align:start position:27% line:-2
訓練すれば話題がホテルか
レストランなのか分かります

00:58:41.588 --> 00:58:47.261 align:start position:29% line:-2
皆さんが一番気になるのは
画像分類でしょう

00:58:48.662 --> 00:58:50.964 align:start position:32% line:-1
こちらをご覧ください

00:58:51.531 --> 00:58:54.935 align:start position:36% line:-2
巨大なモデルを
訓練するとします

00:58:55.035 --> 00:58:59.573 align:start position:27% line:-2
デベロッパなので
少ないデータしかありません

00:58:59.673 --> 00:59:03.610 align:start position:34% line:-2
十分な訓練ができず
予測はイマイチです

00:58:59.673 --> 00:59:03.610 align:start position:34% line:-2
十分な訓練ができず
予測はイマイチです

00:59:05.179 --> 00:59:09.416 align:start position:29% line:-2
Appleは数百万に及ぶ
画像データを使い―

00:59:09.516 --> 00:59:13.287 align:start position:36% line:-2
巨大なモデルを
訓練してきました

00:59:13.387 --> 00:59:16.957 align:start position:32% line:-2
皆さんにすべて
体験していただきたい

00:59:17.558 --> 00:59:20.360 align:start position:30% line:-1
転移学習という技術で―

00:59:21.028 --> 00:59:24.365 align:start position:36% line:-2
自身の画像分類を
訓練できます

00:59:25.065 --> 00:59:29.903 align:start position:30% line:-2
このモデルはあらかじめ
OSに搭載されます

00:59:30.003 --> 00:59:35.843 align:start position:20% line:-2
Create MLで機械学習を使い
このモデルを増補しましょう

00:59:36.610 --> 00:59:40.447 align:start position:32% line:-2
増補した部分だけを
搭載すればいいので―

00:59:41.148 --> 00:59:43.984 align:start position:34% line:-2
アプリケーションの
節約になります

00:59:44.818 --> 00:59:49.690 align:start position:23% line:-2
すでに100MB規模のモデルは
お持ちだと思いますが

00:59:49.790 --> 00:59:52.960 align:start position:30% line:-2
アプリケーションに
賢い機能を追加しました

00:59:53.260 --> 00:59:58.265 align:start position:29% line:-2
転移学習でモデルサイズを
３MBにしました

00:59:58.666 --> 01:00:04.738 align:start position:43% line:-1
(拍手)

00:59:58.666 --> 01:00:04.738 align:start position:43% line:-1
(拍手)

01:00:06.206 --> 01:00:11.278 align:start position:9% line:-2
XcodeとXcode Playgroundで
すべて実行しています

01:00:11.378 --> 01:00:14.681 align:start position:36% line:-2
リジーを呼んで
デモを見ましょう

01:00:15.082 --> 01:00:16.950 align:start position:43% line:-1
(拍手)

01:00:17.051 --> 01:00:17.918 align:start position:45% line:-1
リジー

01:00:18.585 --> 01:00:19.753 align:start position:34% line:-1
ジョン　ありがとう

01:00:20.053 --> 01:00:25.392 align:start position:30% line:-2
花の分類をする仕組みの
作り方を見てみましょう

01:00:25.559 --> 01:00:30.931 align:start position:23% line:-2
Inception B3という
画像分類モデルを使いますが

01:00:31.031 --> 01:00:33.267 align:start position:34% line:-1
２つ問題があります

01:00:33.367 --> 01:00:38.772 align:start position:29% line:-2
まず このモデルは巨大で
100MB使うこと

01:00:38.906 --> 01:00:44.344 align:start position:25% line:-2
２つ目は1000種類の分類が
可能ですが―

01:00:44.445 --> 01:00:47.581 align:start position:32% line:-2
バラを正確に
分類できないことです

01:00:47.948 --> 01:00:51.852 align:start position:29% line:-2
通常ならオープンソースの
機械学習ライブラリで―

01:00:51.952 --> 01:00:57.024 align:start position:36% line:-2
何時間もモデルを
訓練させます

01:00:57.291 --> 01:01:00.160 align:start position:20% line:-1
しかしCreate MLを使えば―

01:00:57.291 --> 01:01:00.160 align:start position:20% line:-1
しかしCreate MLを使えば―

01:01:00.260 --> 01:01:03.697 align:start position:27% line:-1
Xcodeで数分でできます

01:01:04.465 --> 01:01:06.600 align:start position:25% line:-2
新しいPlaygroundに
切り替えて―

01:01:06.700 --> 01:01:08.902 align:start position:27% line:-2
Create ML UIを
インポートします

01:01:09.369 --> 01:01:12.339 align:start position:25% line:-1
次にBuilderに対して―

01:01:13.106 --> 01:01:15.642 align:start position:27% line:-1
画像分類モデルを定義します

01:01:16.143 --> 01:01:19.847 align:start position:29% line:-2
ドラッグ＆ドロップ操作を
加えて―

01:01:19.947 --> 01:01:22.516 align:start position:25% line:-1
ライブビューで見てみましょう

01:01:22.616 --> 01:01:27.387 align:start position:29% line:-2
画像をドラッグするだけで
訓練ができます

01:01:28.255 --> 01:01:33.894 align:start position:32% line:-2
デスクトップに様々な
花の画像があり―

01:01:33.994 --> 01:01:38.265 align:start position:27% line:-2
フォルダに花の名前を付けて
整理しています

01:01:38.398 --> 01:01:44.171 align:start position:30% line:-2
デイジーやハイビスカス
もちろんバラもあります

01:01:45.339 --> 01:01:49.276 align:start position:29% line:-2
では このフォルダを
UIにドラッグしてみます

01:01:49.376 --> 01:01:53.680 align:start position:27% line:-2
GPUで加速されたMacで
分類モデルが―

01:01:53.814 --> 01:01:56.116 align:start position:36% line:-1
訓練を始めました

01:01:56.583 --> 01:02:00.354 align:start position:27% line:-2
すぐにデータセットの精度を
確認できます

01:01:56.583 --> 01:02:00.354 align:start position:27% line:-2
すぐにデータセットの精度を
確認できます

01:02:00.454 --> 01:02:05.659 align:start position:29% line:-2
未知の花の種類の
パフォーマンスを調べます

01:02:05.826 --> 01:02:09.496 align:start position:36% line:-2
このフォルダを
ドラッグすると―

01:02:09.596 --> 01:02:12.900 align:start position:34% line:-2
モデルは新しい花の
評価を開始します

01:02:13.000 --> 01:02:15.235 align:start position:34% line:-1
スクロールすると―

01:02:15.335 --> 01:02:19.907 align:start position:29% line:-2
本当の名前と
モデルの推論が見られます

01:02:20.574 --> 01:02:24.812 align:start position:30% line:-2
95％は
よくできていますので―

01:02:25.012 --> 01:02:27.748 align:start position:25% line:-1
アプリケーションに追加します

01:02:27.848 --> 01:02:31.418 align:start position:27% line:-2
それもドラッグ＆ドロップで
できます

01:02:34.021 --> 01:02:35.322 align:start position:41% line:-1
追加します

01:02:35.422 --> 01:02:40.294 align:start position:34% line:-2
この新しいモデルは
たった50KBです

01:02:40.394 --> 01:02:42.029 align:start position:36% line:-1
大きな節約ですね

01:02:42.129 --> 01:02:44.498 align:start position:38% line:-1
そこで削除を…

01:02:44.698 --> 01:02:50.704 align:start position:43% line:-1
(拍手)

01:02:52.373 --> 01:02:57.578 align:start position:27% line:-2
100MBのモデルは削除し
新しいほうを初期化します

01:02:58.879 --> 01:03:01.582 align:start position:34% line:-2
アプリケーションを
再起動すると―

01:02:58.879 --> 01:03:01.582 align:start position:34% line:-2
アプリケーションを
再起動すると―

01:03:01.682 --> 01:03:05.219 align:start position:27% line:-1
新しいモデルが搭載されます

01:03:05.586 --> 01:03:09.857 align:start position:29% line:-2
訓練した花か
新しいタイプのどちらか―

01:03:09.957 --> 01:03:14.161 align:start position:29% line:-2
正確に画像を推測できるか
試しましょう

01:03:14.261 --> 01:03:17.931 align:start position:27% line:-1
バラだと正確に分類しました

01:03:18.265 --> 01:03:20.167 align:start position:36% line:-1
ハイビスカスは？

01:03:20.367 --> 01:03:25.606 align:start position:27% line:-2
訓練して組み込んでいるので
正確に推測できました

01:03:25.806 --> 01:03:31.278 align:start position:27% line:-2
Create MLを使えば
自分の分類モデルが―

01:03:31.378 --> 01:03:35.616 align:start position:32% line:-2
時間をかけず
小さい容量で作れます

01:03:35.716 --> 01:03:38.385 align:start position:20% line:-1
SwiftとXcodeのおかげです

01:03:38.686 --> 01:03:40.187 align:start position:32% line:-1
ジョンにお返しします

01:03:40.320 --> 01:03:43.424 align:start position:43% line:-1
(拍手)

01:03:43.524 --> 01:03:44.792 align:start position:34% line:-1
リジー　ありがとう

01:03:47.194 --> 01:03:48.195 align:start position:43% line:-1
見事です

01:03:48.295 --> 01:03:49.830 align:start position:32% line:-1
自分の画像分類器が―

01:03:49.930 --> 01:03:54.668 align:start position:23% line:-1
３行のSwiftで作れるのです

01:03:57.271 --> 01:04:03.444 align:start position:7% line:-2
VisionとNatural Languageの
新しいAPIでした

01:03:57.271 --> 01:04:03.444 align:start position:7% line:-2
VisionとNatural Languageの
新しいAPIでした

01:04:04.011 --> 01:04:09.550 align:start position:27% line:-2
より小さく より速く
改善したCore ML 2

01:04:09.650 --> 01:04:14.989 align:start position:20% line:-2
Macの機械学習訓練
フレームワークのCreate ML

01:04:16.657 --> 01:04:22.196 align:start position:30% line:-2
次はOSに搭載した
ショートカットの話です

01:04:22.529 --> 01:04:28.268 align:start position:29% line:-2
アプリケーションの処理を
Siriで行えます

01:04:29.336 --> 01:04:34.975 align:start position:30% line:-2
音声で指示することも
できるようになりました

01:04:36.543 --> 01:04:41.048 align:start position:29% line:-2
紹介してきたAppleの
ソフトウェアの機能を―

01:04:41.148 --> 01:04:45.352 align:start position:30% line:-2
ショートカットを使って
行えるのです

01:04:46.153 --> 01:04:52.025 align:start position:27% line:-2
機械学習を使うデバイスの
プライバシーは保護されます

01:04:53.293 --> 01:04:56.096 align:start position:25% line:-1
ショートカットの設定方法は？

01:04:56.563 --> 01:04:59.967 align:start position:25% line:-2
Spotlight検索や
Handoffの機能を持つ―

01:05:00.067 --> 01:05:03.604 align:start position:23% line:-2
NSUserActivityは
採用済みでしょう

01:05:04.071 --> 01:05:07.774 align:start position:36% line:-2
コードを１行
追加するだけで―

01:05:07.875 --> 01:05:10.744 align:start position:29% line:-1
システムを有効にできます

01:05:10.978 --> 01:05:12.246 align:start position:43% line:-1
(拍手)

01:05:12.346 --> 01:05:13.947 align:start position:38% line:-1
たった１行です

01:05:14.114 --> 01:05:15.582 align:start position:43% line:-1
(拍手)

01:05:15.682 --> 01:05:19.253 align:start position:30% line:-2
ショートカットの良さを
フルで体験するなら―

01:05:19.353 --> 01:05:23.390 align:start position:16% line:-2
SiriKitのIntent APIを
採用してください

01:05:23.891 --> 01:05:27.861 align:start position:30% line:-2
それを使えば
豊かな機能を組み込み―

01:05:27.995 --> 01:05:31.231 align:start position:23% line:-1
Siriで動かすことができます

01:05:31.498 --> 01:05:34.201 align:start position:30% line:-1
任意の音声で作動します

01:05:34.535 --> 01:05:38.639 align:start position:34% line:-2
ショートカットに
処理を埋め込めば―

01:05:38.739 --> 01:05:42.176 align:start position:27% line:-1
ユーザも面白くなるでしょう

01:05:43.610 --> 01:05:46.280 align:start position:30% line:-2
優れたショートカットを
作れば―

01:05:46.380 --> 01:05:50.083 align:start position:32% line:-2
アプリケーションの
使用頻度が増加します

01:05:50.517 --> 01:05:54.321 align:start position:29% line:-2
繰り返し
使用されるようになります

01:05:54.521 --> 01:05:57.591 align:start position:20% line:-1
例えば TeamSnapを使って―

01:05:57.691 --> 01:06:01.929 align:start position:32% line:-2
子供の試合予定を
毎週土曜に確認したい

01:05:57.691 --> 01:06:01.929 align:start position:32% line:-2
子供の試合予定を
毎週土曜に確認したい

01:06:02.363 --> 01:06:07.501 align:start position:27% line:-2
わざわざアプリケーションで
入力することなく―

01:06:07.601 --> 01:06:09.770 align:start position:27% line:-1
Siriでできたら便利です

01:06:09.903 --> 01:06:12.873 align:start position:30% line:-1
実現する方法があります

01:06:14.041 --> 01:06:18.112 align:start position:29% line:-2
ショートカットを作るのは
３ステップです

01:06:18.212 --> 01:06:23.851 align:start position:27% line:-2
ユーザが興味を持つ処理を
ショートカットに定義します

01:06:24.385 --> 01:06:28.822 align:start position:27% line:-2
自分用のショートカットでも
提供することになります

01:06:28.922 --> 01:06:32.559 align:start position:30% line:-2
将来のショートカットに
反映するためです

01:06:33.026 --> 01:06:36.363 align:start position:29% line:-2
その時には
ショートカットを使えます

01:06:37.064 --> 01:06:40.868 align:start position:30% line:-2
このようにして
HomePodで直接―

01:06:40.968 --> 01:06:43.904 align:start position:29% line:-1
ショートカットが使えます

01:06:44.104 --> 01:06:48.308 align:start position:18% line:-2
iPhoneなしでHomePodから
Siriにお願いできます

01:06:48.408 --> 01:06:52.446 align:start position:27% line:-2
子供のサッカーの予定も
アプリケーションで調べます

01:06:53.580 --> 01:06:58.485 align:start position:25% line:-2
ショートカットを
Siriの文字盤で使うなら―

01:06:58.585 --> 01:07:01.655 align:start position:27% line:-2
Relevant APIを
採用しましょう

01:06:58.585 --> 01:07:01.655 align:start position:27% line:-2
Relevant APIを
採用しましょう

01:07:03.891 --> 01:07:07.427 align:start position:34% line:-2
アプリケーションの
主要機能を―

01:07:07.694 --> 01:07:12.299 align:start position:29% line:-2
Siriで操作できる
新しいショートカットです

01:07:13.567 --> 01:07:18.272 align:start position:30% line:-2
続いてジェレミーから
Metalの話をします

01:07:19.106 --> 01:07:19.773 align:start position:41% line:-1
ジェレミー

01:07:19.873 --> 01:07:23.110 align:start position:43% line:-1
(拍手)

01:07:23.210 --> 01:07:24.344 align:start position:34% line:-1
ジョン　ありがとう

01:07:24.678 --> 01:07:29.349 align:start position:27% line:-2
Metalはプログラミング
インターフェイスで―

01:07:29.449 --> 01:07:33.854 align:start position:23% line:-2
Appleのプラットフォームの
心臓部であるGPUの源です

01:07:33.954 --> 01:07:39.493 align:start position:27% line:-2
3Dグラフィックスと
並行データ処理を加速します

01:07:39.727 --> 01:07:44.031 align:start position:29% line:-2
2014年に
Metalを導入しました

01:07:44.131 --> 01:07:47.868 align:start position:29% line:-2
以来 UIから3Dゲーム
最先端の画像処理―

01:07:47.968 --> 01:07:53.674 align:start position:34% line:-2
ARやVRまで
広く使われています

01:07:53.874 --> 01:07:58.178 align:start position:21% line:-2
昨秋 iPhoneの最新モデルを
リリースした時―

01:07:58.278 --> 01:08:03.550 align:start position:25% line:-2
A11 Bionicチップで
次の章へ幕が開けたのです

01:07:58.278 --> 01:08:03.550 align:start position:25% line:-2
A11 Bionicチップで
次の章へ幕が開けたのです

01:08:03.650 --> 01:08:08.922 align:start position:27% line:-2
Appleはハードウェアと
ソフトウェアデザインの―

01:08:09.022 --> 01:08:13.560 align:start position:23% line:-2
長年の経験を生かし
Metal 2にGPUを最適化

01:08:13.660 --> 01:08:16.930 align:start position:36% line:-2
こうした革新的な
性能のおかげで―

01:08:17.064 --> 01:08:22.669 align:start position:29% line:-2
最先端のプログラミングが
より速く省電力で使えます

01:08:22.970 --> 01:08:27.408 align:start position:27% line:-2
またアプリケーションから
直接 Metalを使えます

01:08:27.508 --> 01:08:33.380 align:start position:25% line:-2
Appleのフレームワークの
動力となっているのです

01:08:33.881 --> 01:08:35.649 align:start position:36% line:-1
例をお見せします

01:08:35.749 --> 01:08:37.885 align:start position:34% line:-2
iOSカメラの
フレームワークです

01:08:37.984 --> 01:08:41.822 align:start position:27% line:-2
Metalで深度情報の計算
人物の特定

01:08:41.921 --> 01:08:45.759 align:start position:29% line:-2
写真の
被写界深度の生成をします

01:08:46.093 --> 01:08:50.497 align:start position:16% line:-2
iPhoneやiPadやMacで人気の
フォートナイトも―

01:08:50.596 --> 01:08:55.669 align:start position:20% line:-2
Epic GamesがMetalを
基盤にしています

01:08:56.336 --> 01:09:00.439 align:start position:25% line:-2
AMBのMetalを加速する
プラグインがあります

01:08:56.336 --> 01:09:00.439 align:start position:25% line:-2
AMBのMetalを加速する
プラグインがあります

01:09:00.640 --> 01:09:05.245 align:start position:23% line:-2
MAXONのCinema 4D
オートデスクのMayaの―

01:09:05.345 --> 01:09:09.015 align:start position:36% line:-2
パフォーマンスを
引き出しています

01:09:09.350 --> 01:09:13.720 align:start position:18% line:-2
Gravity Sketchのような
アプリケーションで―

01:09:13.821 --> 01:09:17.625 align:start position:27% line:-2
VR編集など次世代アートに
使われています

01:09:18.892 --> 01:09:21.895 align:start position:23% line:-1
Metalの機械学習によって―

01:09:21.996 --> 01:09:26.066 align:start position:30% line:-2
BeCassoが画像を
絵画に変換します

01:09:26.167 --> 01:09:31.772 align:start position:12% line:-2
Mac専用のPixelmator Proの
画像編集も支えています

01:09:32.171 --> 01:09:37.210 align:start position:32% line:-2
今では40万以上の
アプリケーションが―

01:09:37.310 --> 01:09:41.682 align:start position:21% line:-1
Metal APIを使っています

01:09:42.282 --> 01:09:47.020 align:start position:14% line:-2
iOS 12とmacOS Mojaveを
搭載しているシステム―

01:09:47.121 --> 01:09:51.792 align:start position:27% line:-2
過去５年に出たデバイスが
Metalに対応しています

01:09:52.192 --> 01:09:55.562 align:start position:27% line:-2
10億以上の
アプリケーションとゲームが

01:09:55.663 --> 01:09:58.231 align:start position:30% line:-1
Metalシステムです

01:09:58.966 --> 01:10:04.304 align:start position:25% line:-2
MetalがPCやモバイルに
広くサポートされたため―

01:09:58.966 --> 01:10:04.304 align:start position:25% line:-2
MetalがPCやモバイルに
広くサポートされたため―

01:10:04.404 --> 01:10:08.275 align:start position:20% line:-2
旧来のOpenGLとOpenCLは
非推奨としていきます

01:10:08.375 --> 01:10:12.513 align:start position:16% line:-2
macOS MojaveとiOS 12
tvOS 12から非推奨です

01:10:12.880 --> 01:10:16.350 align:start position:36% line:-2
旧来のAPIも
動作はしますが―

01:10:16.450 --> 01:10:20.087 align:start position:36% line:-2
旧来の技術を
廃止する準備です

01:10:20.187 --> 01:10:23.791 align:start position:21% line:-1
Metalへの移行をお願いします

01:10:23.891 --> 01:10:28.329 align:start position:29% line:-2
移行の詳細は
近い将来 お知らせします

01:10:28.662 --> 01:10:31.098 align:start position:34% line:-2
Metalの適用を
お手伝いします

01:10:31.198 --> 01:10:35.102 align:start position:27% line:-2
他のどのGPU
プログラミングAPIよりも

01:10:35.202 --> 01:10:37.304 align:start position:20% line:-1
Metal APIはずっと簡単です

01:10:37.404 --> 01:10:41.275 align:start position:21% line:-2
C++のプロファイリングツールを
包括しています

01:10:41.375 --> 01:10:46.313 align:start position:27% line:-2
先端のパフォーマンス測定や
デバッグツールに―

01:10:46.413 --> 01:10:49.550 align:start position:25% line:-2
Metalが使われ
Xcodeに搭載されています

01:10:49.783 --> 01:10:55.088 align:start position:29% line:-2
シェーダーコードの
負担が大きい行を特定し―

01:10:55.188 --> 01:10:59.326 align:start position:21% line:-2
ビジュアルAPIのデバッガで
Metalの関数呼び出しをします

01:10:59.426 --> 01:11:04.798 align:start position:16% line:-2
Metal System Traceは
状況によって指示を出します

01:10:59.426 --> 01:11:04.798 align:start position:16% line:-2
Metal System Traceは
状況によって指示を出します

01:11:04.898 --> 01:11:08.135 align:start position:27% line:-2
さらに２つの強力なツールを
今年 発表します

01:11:08.235 --> 01:11:10.104 align:start position:30% line:-1
１つは依存関係ビューア

01:11:10.204 --> 01:11:14.441 align:start position:29% line:-2
マルチパスレンダリングや
エンコーダを調査します

01:11:14.542 --> 01:11:18.746 align:start position:23% line:-2
もう１つはGPUソースコードと
互換のシェーダーデバッガ

01:11:18.846 --> 01:11:23.317 align:start position:29% line:-2
Metalコードを
ピクセルまで探索できます

01:11:23.917 --> 01:11:29.123 align:start position:29% line:-2
セスに新しいツールの
デモをしてもらいましょう

01:11:29.223 --> 01:11:29.890 align:start position:46% line:-1
セス

01:11:31.325 --> 01:11:35.396 align:start position:43% line:-1
(拍手)

01:11:35.796 --> 01:11:36.997 align:start position:34% line:-1
ありがとう　ジョン

01:11:37.397 --> 01:11:38.666 align:start position:36% line:-1
GPデバッガは―

01:11:38.766 --> 01:11:41.602 align:start position:25% line:-2
Metalアプリケーションの
開発ツールです

01:11:42.002 --> 01:11:47.274 align:start position:29% line:-2
左のデバッグナビゲータで
コードを確認できます

01:11:47.441 --> 01:11:51.145 align:start position:34% line:-2
右で選択した結果が
見られます

01:11:51.312 --> 01:11:57.050 align:start position:29% line:-2
エディタでバッファや
テクスチャなどを示します

01:11:57.451 --> 01:12:00.554 align:start position:25% line:-2
依存関係ビューアを
Xcode 10で導入します

01:11:57.451 --> 01:12:00.554 align:start position:25% line:-2
依存関係ビューアを
Xcode 10で導入します

01:12:00.654 --> 01:12:06.793 align:start position:25% line:-2
複雑な処理のレンダー パスが
シーンを統合させます

01:12:07.561 --> 01:12:09.663 align:start position:34% line:-2
フレームの青写真が
得られます

01:12:09.763 --> 01:12:14.635 align:start position:29% line:-2
グラフィック形成がいかに
複雑か理解できます

01:12:14.735 --> 01:12:19.540 align:start position:12% line:-2
Unityの
Book of the Deadのデモです

01:12:20.607 --> 01:12:23.410 align:start position:27% line:-1
拡大すると詳細が見られます

01:12:24.711 --> 01:12:27.681 align:start position:25% line:-1
初期のレンダー パスは上部に

01:12:28.082 --> 01:12:30.817 align:start position:36% line:-2
最新情報は下部に
表示されます

01:12:31.218 --> 01:12:34.622 align:start position:27% line:-1
線はパス間の依存を示します

01:12:34.755 --> 01:12:37.725 align:start position:27% line:-1
選択したパスは青くなります

01:12:38.592 --> 01:12:43.597 align:start position:25% line:-2
レンダー パスが100以上で
難しいシーンだと分かります

01:12:44.898 --> 01:12:49.036 align:start position:29% line:-2
シーンはいいですが
もっとフレアが入るので―

01:12:49.336 --> 01:12:52.573 align:start position:29% line:-1
レンズフレアを追加します

01:12:53.106 --> 01:12:57.578 align:start position:32% line:-2
しかし 緑が濃すぎて
しっくりきません

01:12:58.078 --> 01:13:00.180 align:start position:38% line:-1
拡大してみます

01:12:58.078 --> 01:13:00.180 align:start position:38% line:-1
拡大してみます

01:13:02.683 --> 01:13:07.054 align:start position:29% line:-2
１ピクセルを選択し
シェーダーデバッガを起動

01:13:07.321 --> 01:13:11.058 align:start position:27% line:-1
シェーダーをデバッグします

01:13:13.160 --> 01:13:15.729 align:start position:29% line:-1
エディタでソースが見られ

01:13:15.929 --> 01:13:20.701 align:start position:29% line:-2
その右サイドに
各コードの関数があります

01:13:21.035 --> 01:13:25.372 align:start position:29% line:-2
これを開くと
さらに詳細が確認できます

01:13:26.040 --> 01:13:30.010 align:start position:29% line:-2
選択したピクセル周辺を
２つのビューで見られます

01:13:30.177 --> 01:13:35.048 align:start position:32% line:-2
フレームの選択部分に
対応しています

01:13:36.216 --> 01:13:39.720 align:start position:30% line:-2
左側では
関数の値を可視化します

01:13:39.920 --> 01:13:43.757 align:start position:32% line:-1
右側は実行マスクです

01:13:44.191 --> 01:13:48.162 align:start position:25% line:-2
どのピクセルが どのコードを
実行してるかを示します

01:13:48.462 --> 01:13:54.635 align:start position:27% line:-2
GPUのシェーダーの巨大な
実行処理をデバッグできます

01:13:55.569 --> 01:14:01.542 align:start position:29% line:-2
実行マスクの形が
ビジュアル異常と一致し―

01:13:55.569 --> 01:14:01.542 align:start position:29% line:-2
実行マスクの形が
ビジュアル異常と一致し―

01:14:01.642 --> 01:14:04.745 align:start position:32% line:-2
コードに問題があると
分かります

01:14:05.279 --> 01:14:08.582 align:start position:27% line:-1
どこが間違いか分かりました

01:14:08.682 --> 01:14:10.684 align:start position:38% line:-2
レンズフレアの
色ではなく―

01:14:10.751 --> 01:14:12.920 align:start position:36% line:-2
ベクトルの長さを
使っています

01:14:13.086 --> 01:14:14.722 align:start position:38% line:-1
修正は簡単です

01:14:17.157 --> 01:14:20.494 align:start position:32% line:-2
更新ボタンで
すぐに修正を反映し―

01:14:20.594 --> 01:14:24.064 align:start position:27% line:-2
シェーダーを再コンパイルし
GPUに配置します

01:14:24.264 --> 01:14:29.336 align:start position:25% line:-2
ご覧のとおり レンズフレアが
修正されました

01:14:29.770 --> 01:14:36.076 align:start position:43% line:-1
(拍手)

01:14:36.610 --> 01:14:40.681 align:start position:23% line:-2
Metalアプリケーション用の
依存関係ビューアと―

01:14:40.781 --> 01:14:43.817 align:start position:29% line:-1
シェーダーデバッガでした

01:14:43.917 --> 01:14:45.052 align:start position:41% line:-1
ジェレミー

01:14:46.287 --> 01:14:48.489 align:start position:36% line:-1
セス　ありがとう

01:14:48.589 --> 01:14:50.657 align:start position:43% line:-1
(拍手)

01:14:50.757 --> 01:14:54.228 align:start position:14% line:-2
Metalの向上のため
iOS 12とmacOS Mojaveに

01:14:54.328 --> 01:14:58.666 align:start position:30% line:-2
さらにすばらしい機能を
実装しました

01:14:58.766 --> 01:15:01.335 align:start position:30% line:-1
お話しするのは３つです

01:14:58.766 --> 01:15:01.335 align:start position:30% line:-1
お話しするのは３つです

01:15:01.435 --> 01:15:03.203 align:start position:23% line:-1
GPU駆動のコマンドエンコーダ

01:15:03.303 --> 01:15:05.372 align:start position:27% line:-1
機械学習トレーニングの加速

01:15:05.472 --> 01:15:06.974 align:start position:36% line:-1
レイトレーシング

01:15:07.408 --> 01:15:09.510 align:start position:30% line:-2
まずGPU駆動の
コマンドエンコーダです

01:15:09.610 --> 01:15:13.947 align:start position:25% line:-2
通常 CPUを使って
GPUコマンドをエンコードし

01:15:14.047 --> 01:15:16.884 align:start position:32% line:-2
その後 GPUで
コマンドを実行します

01:15:16.984 --> 01:15:19.987 align:start position:25% line:-2
Metalはこのエンコードを
加速する一方―

01:15:20.087 --> 01:15:24.491 align:start position:30% line:-2
CPUとGPUの同期が
障壁となります

01:15:24.691 --> 01:15:30.464 align:start position:14% line:-2
iOS 12とmacOS Mojaveは
GPUでエンコードできます

01:15:30.564 --> 01:15:35.168 align:start position:32% line:-2
CPUの貴重な時間を
ゲームなどに割けます

01:15:35.603 --> 01:15:39.473 align:start position:34% line:-2
GPUでコマンドを
発行するため―

01:15:39.573 --> 01:15:43.410 align:start position:27% line:-2
同時にいくつものコマンドを
構築することができます

01:15:43.510 --> 01:15:48.349 align:start position:27% line:-2
パフォーマンスが
新たなレベルに到達しました

01:15:49.450 --> 01:15:54.188 align:start position:25% line:-2
次はMetalがサポートする
機械学習について

01:15:54.288 --> 01:15:56.857 align:start position:20% line:-2
iOS 12と
macOS Mojaveが対象です

01:15:56.957 --> 01:16:00.394 align:start position:29% line:-2
Metalパフォーマンス
シェーダーを増強し―

01:15:56.957 --> 01:16:00.394 align:start position:29% line:-2
Metalパフォーマンス
シェーダーを増強し―

01:16:00.494 --> 01:16:06.333 align:start position:38% line:-2
機械学習訓練を
最適化しました

01:16:06.433 --> 01:16:10.037 align:start position:25% line:-1
iOSとMacデバイス上です

01:16:10.137 --> 01:16:14.575 align:start position:27% line:-2
Metalパフォーマンス
シェーダーとトレーニングは

01:16:14.675 --> 01:16:18.879 align:start position:38% line:-2
飛躍的に改善し
速くなりました

01:16:19.246 --> 01:16:23.383 align:start position:20% line:-2
MetalでTensorFlowを
加速する共同研究を―

01:16:23.483 --> 01:16:25.252 align:start position:27% line:-1
Googleと行っています

01:16:25.352 --> 01:16:28.555 align:start position:30% line:-2
既存のソフトと比較して
20倍も改善する―

01:16:28.655 --> 01:16:31.692 align:start position:27% line:-1
驚くべき結果を出しています

01:16:33.026 --> 01:16:34.428 align:start position:43% line:-1
見事です

01:16:34.762 --> 01:16:37.030 align:start position:43% line:-1
(拍手)

01:16:37.130 --> 01:16:38.599 align:start position:32% line:-2
３つ目の
レイトレーシングです

01:16:38.699 --> 01:16:43.203 align:start position:30% line:-2
本物のようなシーンを
作り出すことに成功し―

01:16:43.303 --> 01:16:46.507 align:start position:32% line:-2
レンダリングや
3Dに使われています

01:16:46.607 --> 01:16:51.612 align:start position:29% line:-2
しかし オフラインで
作業する必要がありました

01:16:53.080 --> 01:16:55.148 align:start position:36% line:-1
簡単に説明します

01:16:55.249 --> 01:17:00.187 align:start position:29% line:-2
光源から出た光線は
物体に当たって跳ね返り―

01:16:55.249 --> 01:17:00.187 align:start position:29% line:-2
光源から出た光線は
物体に当たって跳ね返り―

01:17:00.287 --> 01:17:04.091 align:start position:34% line:-2
スクリーンを通って
目に届きます

01:17:04.191 --> 01:17:09.096 align:start position:29% line:-2
より高い解像度を目指すと
もっともっと…

01:17:09.196 --> 01:17:11.632 align:start position:32% line:-1
もっと光線が必要です

01:17:12.933 --> 01:17:15.836 align:start position:27% line:-1
求めてる解像度になりました

01:17:15.969 --> 01:17:20.207 align:start position:25% line:-2
単純な１KBの画像に
約600万の光線が使われます

01:17:20.741 --> 01:17:25.946 align:start position:29% line:-2
各光線の生成に最低２つの
計算を要しています

01:17:26.046 --> 01:17:30.317 align:start position:30% line:-2
最初に光線が交差する
特定の三角形を決めて―

01:17:30.417 --> 01:17:35.556 align:start position:27% line:-2
素材を特定したシェーダーを
ピクセルに適用させます

01:17:36.156 --> 01:17:39.994 align:start position:30% line:-2
本来 CPUで
実行されていましたが―

01:17:40.094 --> 01:17:43.030 align:start position:30% line:-2
GPUでも
シェーディングできます

01:17:43.130 --> 01:17:47.167 align:start position:29% line:-2
光線と三角形の交点が
CPUのボトルネックで―

01:17:47.268 --> 01:17:50.804 align:start position:30% line:-2
GPUに効率的に
移行するのが困難でした

01:17:51.472 --> 01:17:55.075 align:start position:18% line:-2
Metal Ray-Triangle
Intersectorが解決します

01:17:55.175 --> 01:17:59.613 align:start position:23% line:-2
新しいAPIでパフォーマンスが
最大10倍になったのです

01:17:59.747 --> 01:18:05.819 align:start position:25% line:-2
iOSとmacOSのGPUに
最適化されています

01:17:59.747 --> 01:18:05.819 align:start position:25% line:-2
iOSとmacOSのGPUに
最適化されています

01:18:06.053 --> 01:18:09.690 align:start position:30% line:-2
本当に簡単で
数行のコードで済みます

01:18:10.257 --> 01:18:13.561 align:start position:32% line:-2
GPU実行のような
レイトレーシングは―

01:18:13.661 --> 01:18:18.799 align:start position:29% line:-2
GPUの馬力を
最大限に生かせる処理です

01:18:18.933 --> 01:18:24.138 align:start position:21% line:-2
GPUをサポートする
Metal 2で性能を発揮します

01:18:24.338 --> 01:18:28.442 align:start position:29% line:-1
ラヴがデモをお見せします

01:18:28.542 --> 01:18:29.209 align:start position:46% line:-1
ラヴ

01:18:29.643 --> 01:18:34.281 align:start position:43% line:-1
(拍手)

01:18:34.381 --> 01:18:35.048 align:start position:41% line:-1
ありがとう

01:18:35.649 --> 01:18:41.355 align:start position:18% line:-2
Amazon Lumberyardの
Bistroのシーンです

01:18:41.455 --> 01:18:45.292 align:start position:25% line:-1
CPUで交差計算を処理します

01:18:45.392 --> 01:18:51.031 align:start position:20% line:-2
iMac Proの10コアすべてで
処理が最適化されています

01:18:51.632 --> 01:18:58.338 align:start position:29% line:-2
80回の反復にかかる
所要時間を基準にするため

01:18:58.872 --> 01:19:04.578 align:start position:34% line:-2
60億回もの試験を
行う必要があります

01:18:58.872 --> 01:19:04.578 align:start position:34% line:-2
60億回もの試験を
行う必要があります

01:19:04.678 --> 01:19:09.450 align:start position:29% line:-2
ご覧のとおり
CPUで12秒かかります

01:19:09.550 --> 01:19:15.689 align:start position:5% line:-2
iMac ProのMetal
Ray-Triangle Intersectorで

01:19:15.789 --> 01:19:17.925 align:start position:36% line:-1
比べてみましょう

01:19:18.325 --> 01:19:20.794 align:start position:34% line:-2
飛躍的に速いことが
分かります

01:19:20.895 --> 01:19:24.765 align:start position:23% line:-1
同じ処理を1.3秒で行いました

01:19:24.865 --> 01:19:27.101 align:start position:30% line:-1
もう一度 やってみます

01:19:28.302 --> 01:19:29.336 align:start position:39% line:-1
もう完了です

01:19:29.937 --> 01:19:35.142 align:start position:34% line:-2
10倍も速いなんて
すばらしいですよね

01:19:35.242 --> 01:19:36.944 align:start position:30% line:-1
それだけではありません

01:19:37.044 --> 01:19:42.616 align:start position:25% line:-2
レイトレーシングはGPUでの
並行処理に適しています

01:19:42.716 --> 01:19:47.154 align:start position:30% line:-2
iMac Proに
外付けGPUを付けて―

01:19:47.254 --> 01:19:50.591 align:start position:30% line:-2
レンダリング処理時間を
半分にできます

01:19:51.191 --> 01:19:52.993 align:start position:29% line:-1
緑の線を追加することで―

01:19:53.093 --> 01:19:57.331 align:start position:30% line:-2
２つのGPUが処理を
二分してると分かります

01:19:57.431 --> 01:20:01.135 align:start position:25% line:-1
各GPUが半分ずつ処理します

01:19:57.431 --> 01:20:01.135 align:start position:25% line:-1
各GPUが半分ずつ処理します

01:20:01.401 --> 01:20:03.237 align:start position:34% line:-1
すばらしい進歩です

01:20:03.337 --> 01:20:06.907 align:start position:29% line:-2
GPUは
いくつあっても困りません

01:20:07.007 --> 01:20:12.780 align:start position:27% line:-2
合計４つのGPUで
レンダリングしてみましょう

01:20:13.213 --> 01:20:18.752 align:start position:29% line:-2
iMac Proで容量は
40テラフロップス以上―

01:20:19.353 --> 01:20:23.390 align:start position:30% line:-2
CPUの30倍の速さで
レンダリングしています

01:20:23.490 --> 01:20:26.060 align:start position:30% line:-1
これは驚くべき性能です

01:20:26.427 --> 01:20:32.566 align:start position:43% line:-1
(拍手)

01:20:34.635 --> 01:20:36.904 align:start position:32% line:-1
明かりを少し消して―

01:20:36.970 --> 01:20:40.107 align:start position:34% line:-2
影のレンダリングを
お見せします

01:20:40.207 --> 01:20:45.245 align:start position:29% line:-2
GPUでの処理スピードの
速さが体感できます

01:20:46.113 --> 01:20:51.518 align:start position:16% line:-2
Metal Ray-Triangle
Intersectorと外付けGPUで

01:20:51.618 --> 01:20:57.891 align:start position:27% line:-2
レイトレーシング技術を速め
ワークフローを助けます

01:20:57.991 --> 01:20:59.860 align:start position:41% line:-1
ありがとう

01:20:59.960 --> 01:21:01.929 align:start position:43% line:-1
(拍手)

01:20:59.960 --> 01:21:01.929 align:start position:43% line:-1
(拍手)

01:21:02.029 --> 01:21:05.332 align:start position:36% line:-2
ありがとう　ラヴ
驚きでしたね

01:21:05.933 --> 01:21:09.036 align:start position:14% line:-2
iOS 12とmacOS Mojaveの
Metal 2でした

01:21:09.136 --> 01:21:13.641 align:start position:27% line:-2
3Dグラフィックスと
GPU APIが１つになり

01:21:13.774 --> 01:21:16.844 align:start position:34% line:-2
Apple製品を
広くサポートします

01:21:16.977 --> 01:21:20.581 align:start position:23% line:-2
例えば A11 Bionicや
Apple GPUなどです

01:21:20.981 --> 01:21:23.417 align:start position:27% line:-2
GPUのデベロッパツールは
Xcodeに統合されていて

01:21:23.517 --> 01:21:29.156 align:start position:27% line:-2
機械学習訓練などの
最先端機能に対応しています

01:21:29.256 --> 01:21:33.627 align:start position:27% line:-2
今こそMetalに移行して
制作に役立ててください

01:21:33.727 --> 01:21:34.562 align:start position:41% line:-1
ありがとう

01:21:35.195 --> 01:21:38.231 align:start position:32% line:-1
ここからはマイクが―

01:21:38.332 --> 01:21:41.668 align:start position:32% line:-2
ARの最新ニュースを
お話しします

01:21:41.769 --> 01:21:44.104 align:start position:43% line:-1
(拍手)

01:21:44.204 --> 01:21:45.439 align:start position:30% line:-1
ジェレミー　ありがとう

01:21:47.774 --> 01:21:51.712 align:start position:29% line:-2
昨年 Appleは
すばらしいARの年でした

01:21:51.812 --> 01:21:55.082 align:start position:29% line:-2
前回のWWDCで
ARKitがデビューし―

01:21:55.182 --> 01:22:01.321 align:start position:27% line:-2
今やiOSが世界最大の
ARのプラットフォームです

01:21:55.182 --> 01:22:01.321 align:start position:27% line:-2
今やiOSが世界最大の
ARのプラットフォームです

01:22:01.555 --> 01:22:04.391 align:start position:25% line:-1
AR対応のiOSデバイスが―

01:22:04.491 --> 01:22:08.562 align:start position:29% line:-2
何千万台も世の中にあふれ
増え続けています

01:22:08.929 --> 01:22:13.467 align:start position:29% line:-2
午前のセッションのとおり
iOS 12を使って―

01:22:13.567 --> 01:22:17.738 align:start position:27% line:-2
ARをOSに
行き渡らせようとしています

01:22:18.372 --> 01:22:22.509 align:start position:32% line:-2
メッセージやNews
Safariなどで―

01:22:22.609 --> 01:22:26.980 align:start position:30% line:-2
クイックルックを使って
AR体験ができます

01:22:27.314 --> 01:22:33.454 align:start position:27% line:-2
そのため ARに最適化した
ファイル形式が必要です

01:22:33.554 --> 01:22:35.689 align:start position:29% line:-1
ピクサーとアドビと共に―

01:22:35.789 --> 01:22:39.626 align:start position:32% line:-2
ARの新フォーマット
USDZを作りました

01:22:39.994 --> 01:22:43.230 align:start position:32% line:-2
コンテンツ制作業界で
使用される―

01:22:43.330 --> 01:22:47.134 align:start position:27% line:-1
記述形式が基になっています

01:22:47.434 --> 01:22:50.737 align:start position:34% line:-2
モバイルに最適化し
アニメーションと―

01:22:50.837 --> 01:22:52.873 align:start position:23% line:-2
Rich 3D assetsに
対応しました

01:22:53.440 --> 01:22:57.210 align:start position:34% line:-2
USDZの使い方は
とても簡単です

01:22:57.878 --> 01:23:01.281 align:start position:29% line:-2
ウェブなら
HTMLに数行 書くだけ

01:22:57.878 --> 01:23:01.281 align:start position:29% line:-2
ウェブなら
HTMLに数行 書くだけ

01:23:01.381 --> 01:23:04.484 align:start position:27% line:-2
Model I/Oを使った
SceneKitで―

01:23:04.584 --> 01:23:08.555 align:start position:32% line:-2
アプリケーションにも
簡単に使えます

01:23:09.490 --> 01:23:13.394 align:start position:29% line:-2
コンテンツ制作ツールの
業界リーダーとも連携して

01:23:13.527 --> 01:23:15.729 align:start position:38% line:-2
ネイティブでも
サポートします

01:23:16.296 --> 01:23:21.635 align:start position:29% line:-2
午前の部でアドビに関する
プレビューがありました

01:23:21.735 --> 01:23:25.039 align:start position:32% line:-2
ここでアバイに
見せてもらいましょう

01:23:25.172 --> 01:23:26.140 align:start position:45% line:-1
アバイ

01:23:26.307 --> 01:23:29.743 align:start position:43% line:-1
(拍手)

01:23:29.843 --> 01:23:31.078 align:start position:34% line:-1
ありがとう　マイク

01:23:32.846 --> 01:23:34.682 align:start position:32% line:-1
また呼ばれて光栄です

01:23:35.115 --> 01:23:40.187 align:start position:16% line:-2
Keynoteのとおり ARKitや
アドビのCreative Cloudは

01:23:40.287 --> 01:23:44.524 align:start position:29% line:-2
デジタルと物理的な世界を
融合します

01:23:45.025 --> 01:23:51.131 align:start position:27% line:-2
デザインの相互作用モデルの
完全なる再想像です

01:23:51.932 --> 01:23:57.404 align:start position:25% line:-2
午前の部でAR体験を制作する
新システムを発表しました

01:23:57.504 --> 01:23:59.239 align:start position:25% line:-1
Project Aeroです

01:23:59.573 --> 01:24:04.578 align:start position:12% line:-2
PhotoshopやDimensionなど
なじみのCreative Cloudで

01:23:59.573 --> 01:24:04.578 align:start position:12% line:-2
PhotoshopやDimensionなど
なじみのCreative Cloudで

01:24:04.678 --> 01:24:07.147 align:start position:25% line:-1
ARKitに魂を吹き込みます

01:24:07.514 --> 01:24:11.385 align:start position:23% line:-2
Creative Cloudと
iOSを使って初めて―

01:24:11.485 --> 01:24:16.490 align:start position:27% line:-2
ARで見えるものが
つかめるように編集できます

01:24:19.159 --> 01:24:24.131 align:start position:20% line:-2
ARKitは間違いなく
ARのトップのプラットフォームです

01:24:24.231 --> 01:24:28.035 align:start position:27% line:-2
Appleと密に連携できて
とても興奮しています

01:24:28.135 --> 01:24:33.374 align:start position:30% line:-2
没入感のあるデザインの
限界に共に挑戦します

01:24:34.875 --> 01:24:37.277 align:start position:29% line:-1
ARの可能性を考えると―

01:24:37.377 --> 01:24:40.247 align:start position:34% line:-2
エコシステムの
取り組みが必要です

01:24:40.347 --> 01:24:44.985 align:start position:36% line:-2
そこでアドビは
公式に発表します

01:24:45.085 --> 01:24:49.123 align:start position:27% line:-2
Appleとピクサーと共に
USDZ形式に対応します

01:24:49.790 --> 01:24:50.757 align:start position:43% line:-1
(拍手)

01:24:50.857 --> 01:24:54.061 align:start position:30% line:-1
ARは類のない媒体です

01:24:54.161 --> 01:24:59.099 align:start position:27% line:-2
スクリーンの向こう側の
コンテンツに作用するのです

01:24:59.199 --> 01:25:03.871 align:start position:27% line:-2
自分の周りの物理的な空間が
キャンバスになります

01:24:59.199 --> 01:25:03.871 align:start position:27% line:-2
自分の周りの物理的な空間が
キャンバスになります

01:25:03.971 --> 01:25:05.306 align:start position:36% line:-1
お見せしましょう

01:25:07.908 --> 01:25:17.851 align:start position:43% line:-1
(音楽)

01:26:24.018 --> 01:26:24.818 align:start position:43% line:-1
(拍手)

01:26:24.918 --> 01:26:26.187 align:start position:43% line:-1
最高です

01:26:29.990 --> 01:26:34.995 align:start position:27% line:-2
没入できるコンテンツ制作を
民主化するという―

01:26:35.095 --> 01:26:38.499 align:start position:29% line:-2
アドビのビジョンと
ミッションの一部なのです

01:26:39.133 --> 01:26:45.306 align:start position:27% line:-2
クリエイターとデベロッパは
これらのツールを使い―

01:26:45.406 --> 01:26:49.410 align:start position:27% line:-1
協働してAR体験を広めます

01:26:50.944 --> 01:26:56.884 align:start position:18% line:-2
Project Aeroの最新情報は
Adobe MAXで発表します

01:26:57.451 --> 01:27:00.587 align:start position:30% line:-2
このパートナーシップに
興奮しています

01:26:57.451 --> 01:27:00.587 align:start position:30% line:-2
このパートナーシップに
興奮しています

01:27:00.688 --> 01:27:03.557 align:start position:30% line:-1
新しい伝達媒体の力を―

01:27:03.657 --> 01:27:07.528 align:start position:36% line:-2
協働して限界まで
推し進めたいです

01:27:07.628 --> 01:27:09.496 align:start position:41% line:-1
ありがとう

01:27:09.696 --> 01:27:12.433 align:start position:43% line:-1
(拍手)

01:27:12.533 --> 01:27:13.834 align:start position:34% line:-1
ありがとう　アバイ

01:27:14.468 --> 01:27:16.937 align:start position:41% line:-1
最高ですね

01:27:18.372 --> 01:27:21.708 align:start position:29% line:-2
AppleのARの基盤は
ARKitです

01:27:21.842 --> 01:27:26.980 align:start position:27% line:-2
デバイスの位置ローカライズ
正確な調光 サイズ推定など

01:27:27.081 --> 01:27:31.151 align:start position:27% line:-2
ARアプリケーション制作は
ARkitで簡単にできます

01:27:31.485 --> 01:27:34.588 align:start position:30% line:-2
特別なハードウェアが
必要とされた顔追跡を―

01:27:34.688 --> 01:27:37.090 align:start position:21% line:-1
iPhone Xが可能にしました

01:27:38.091 --> 01:27:43.597 align:start position:25% line:-2
最初のリリース後すぐに
ARKit 1.5を発表し―

01:27:43.697 --> 01:27:48.835 align:start position:27% line:-2
2Dイメージトリガーや
高解像度カメラを加えました

01:27:48.936 --> 01:27:52.406 align:start position:27% line:-2
電話に応答しても
ARセッションが切れません

01:27:52.740 --> 01:27:58.913 align:start position:27% line:-2
次の大きな飛躍となる
ARKit 2が楽しみです

01:28:00.480 --> 01:28:04.318 align:start position:32% line:-2
ARKit 2は
顔追跡の改良を含む―

01:28:04.418 --> 01:28:07.354 align:start position:27% line:-1
革新的な内容になっています

01:28:07.454 --> 01:28:11.892 align:start position:27% line:-1
目の動きや舌まで追跡します

01:28:12.259 --> 01:28:17.097 align:start position:32% line:-2
顔のアニメーションの
新たなレベルです

01:28:17.431 --> 01:28:22.169 align:start position:30% line:-2
子供がアニ文字で遊ぶと
まず舌を突き出します

01:28:22.269 --> 01:28:25.439 align:start position:34% line:-2
よくありそうなので
機能を追加しました

01:28:28.242 --> 01:28:33.514 align:start position:29% line:-2
物体をシーンに
より正確に統合するため―

01:28:33.614 --> 01:28:38.953 align:start position:30% line:-2
カメラに映る実像の
物理的構成を創造します

01:28:39.053 --> 01:28:42.790 align:start position:36% line:-2
写真が地球儀に
反射していますね

01:28:43.423 --> 01:28:46.060 align:start position:36% line:-2
しかしカメラに
映らないものは？

01:28:46.360 --> 01:28:51.565 align:start position:29% line:-2
機械学習で典型的な環境を
何千も訓練しました

01:28:51.665 --> 01:28:56.036 align:start position:27% line:-2
ARKitは残りのシーンを
想像します

01:28:56.270 --> 01:29:01.008 align:start position:27% line:-2
地球儀にもっともらしく
天井照明が反射していますが

01:28:56.270 --> 01:29:01.008 align:start position:27% line:-2
地球儀にもっともらしく
天井照明が反射していますが

01:29:01.108 --> 01:29:04.812 align:start position:30% line:-1
ここに照明はありません

01:29:07.114 --> 01:29:09.783 align:start position:29% line:-1
２次元画像検出を拡張し―

01:29:09.883 --> 01:29:14.822 align:start position:32% line:-2
３次元の画像の追跡を
サポートしました

01:29:15.222 --> 01:29:20.194 align:start position:30% line:-2
実像の画像と
3Dの物体が固定され―

01:29:20.294 --> 01:29:25.299 align:start position:29% line:-2
動いても 2Dだけでなく
3Dでも追跡します

01:29:27.401 --> 01:29:33.073 align:start position:43% line:-1
(拍手)

01:29:33.707 --> 01:29:37.578 align:start position:20% line:-1
ARKitは3Dの物体を検出します

01:29:37.678 --> 01:29:40.214 align:start position:32% line:-2
APIや提供している
デベロッパツールで―

01:29:40.314 --> 01:29:43.550 align:start position:30% line:-1
物体をスキャンできます

01:29:44.618 --> 01:29:50.657 align:start position:27% line:-2
その後 地図が物体と位置を
認識するため―

01:29:50.757 --> 01:29:54.428 align:start position:12% line:-2
contextually-relevant
AR体験を もたらします

01:29:56.597 --> 01:29:59.500 align:start position:43% line:-1
(拍手)

01:29:59.600 --> 01:30:05.139 align:start position:25% line:-2
ARKit 2は持続性のある
体験をサポートします

01:29:59.600 --> 01:30:05.139 align:start position:25% line:-2
ARKit 2は持続性のある
体験をサポートします

01:30:05.239 --> 01:30:09.876 align:start position:27% line:-2
ビデオでは環境を描いてから
物体が置かれます

01:30:10.144 --> 01:30:14.481 align:start position:29% line:-2
この地図は保存され
後で空間認識に利用でき―

01:30:14.582 --> 01:30:17.751 align:start position:32% line:-2
同じように
ローカライズされます

01:30:18.619 --> 01:30:20.721 align:start position:29% line:-1
同じデバイスだけでなく―

01:30:20.821 --> 01:30:26.060 align:start position:27% line:-2
地図を他のデバイスと共有し
同じ体験ができます

01:30:26.260 --> 01:30:28.395 align:start position:34% line:-1
この機能によって―

01:30:28.495 --> 01:30:32.833 align:start position:30% line:-2
持続性のある体験が
何度も可能になるのです

01:30:33.233 --> 01:30:38.739 align:start position:29% line:-2
自宅に写真が貼られた
ARのコルクボードを持ち

01:30:39.740 --> 01:30:42.977 align:start position:30% line:-2
iCloudを介さずに
この地図を共有できます

01:30:43.077 --> 01:30:47.314 align:start position:27% line:-2
ローカルデバイスで
P2Pを使い 共有できます

01:30:49.116 --> 01:30:55.422 align:start position:29% line:-2
さらに この地図の共有は
リアルタイムで行えるので

01:30:55.756 --> 01:31:00.427 align:start position:27% line:-2
複数同時プレイの
ARゲームを可能にしました

01:30:55.756 --> 01:31:00.427 align:start position:27% line:-2
複数同時プレイの
ARゲームを可能にしました

01:31:00.627 --> 01:31:04.999 align:start position:23% line:-2
これを体験するため
SwiftShotを作りました

01:31:05.099 --> 01:31:08.902 align:start position:32% line:-2
我々の成果を
ビデオでお見せします

01:31:09.002 --> 01:31:19.013 align:start position:43% line:-1
(音楽)

01:31:45.606 --> 01:31:51.679 align:start position:23% line:-2
SwiftShotは会場の
ARゲームエリアで体験できます

01:31:52.012 --> 01:31:55.916 align:start position:30% line:-2
皆さんと共有したいので
フルソースコードを―

01:31:56.016 --> 01:31:58.719 align:start position:32% line:-2
オープンライセンスで
ダウンロードできます

01:31:58.819 --> 01:32:01.055 align:start position:32% line:-1
好きに修正もできます

01:31:58.819 --> 01:32:01.055 align:start position:32% line:-1
好きに修正もできます

01:32:01.155 --> 01:32:04.058 align:start position:27% line:-1
皆さんの創造力が楽しみです

01:32:05.259 --> 01:32:07.361 align:start position:29% line:-1
以上がARKit 2です

01:32:07.794 --> 01:32:11.665 align:start position:38% line:-2
顔追跡の改良
環境の立体構造

01:32:11.899 --> 01:32:15.869 align:start position:38% line:-2
画像検出と追跡
3D物体の検出

01:32:15.969 --> 01:32:21.208 align:start position:34% line:-2
持続性のある体験
複数ユーザでの体験

01:32:21.708 --> 01:32:25.045 align:start position:25% line:-1
これにUSDZが組み合わさり

01:32:25.146 --> 01:32:30.184 align:start position:27% line:-2
iOS 12は最大のARの
プラットフォームになります

01:32:30.284 --> 01:32:34.988 align:start position:32% line:-2
リリース後の皆さんの
活動が楽しみです

01:32:35.289 --> 01:32:37.891 align:start position:30% line:-1
セバスチャンに戻します

01:32:37.991 --> 01:32:42.997 align:start position:43% line:-1
(拍手)

01:32:43.097 --> 01:32:44.498 align:start position:34% line:-1
ありがとう　マイク

01:32:45.099 --> 01:32:49.403 align:start position:34% line:-2
たくさんの新技術を
見てきましたが―

01:32:49.503 --> 01:32:52.806 align:start position:27% line:-2
皆さんも
ワクワクしていると願います

01:32:52.973 --> 01:32:58.212 align:start position:29% line:-2
機械学習をテコ入れし
ARkitで新体験を創出

01:32:58.312 --> 01:33:00.214 align:start position:27% line:-1
グラフィックスのMetal

01:32:58.312 --> 01:33:00.214 align:start position:27% line:-1
グラフィックスのMetal

01:33:00.314 --> 01:33:04.418 align:start position:25% line:-2
さらにMacはダークモードで
一歩 前進しました

01:33:04.551 --> 01:33:07.654 align:start position:30% line:-2
我々の開発ツールが
すばらしい進歩を支え―

01:33:07.754 --> 01:33:12.726 align:start position:29% line:-2
パワフルな技術に
必要不可欠となっています

01:33:13.093 --> 01:33:15.729 align:start position:32% line:-2
我々のユーザに
一番 重要なことも―

01:33:15.829 --> 01:33:19.433 align:start position:30% line:-1
今日は お話ししました

01:33:19.900 --> 01:33:22.770 align:start position:25% line:-1
WWDCの参加者ポータルで―

01:33:22.870 --> 01:33:26.373 align:start position:27% line:-1
技術やツールが公開されます

01:33:26.473 --> 01:33:28.509 align:start position:27% line:-1
ダウンロードはしましたか？

01:33:29.209 --> 01:33:33.046 align:start position:38% line:-2
配布は限定です
急いでください

01:33:34.848 --> 01:33:39.954 align:start position:29% line:-2
すぐにダウンロードして
有意義に過ごしてください

01:33:40.054 --> 01:33:44.925 align:start position:27% line:-2
100以上の基調講演で
それぞれ詳しくお話しします

01:33:45.025 --> 01:33:46.460 align:start position:34% line:-1
すばらしい講演です

01:33:46.560 --> 01:33:50.564 align:start position:27% line:-1
ラボもぜひ活用してください

01:33:50.664 --> 01:33:54.034 align:start position:27% line:-1
Appleのエンジニアが―

01:33:54.134 --> 01:33:56.704 align:start position:27% line:-1
皆さんの疑問にお答えします

01:33:57.070 --> 01:34:02.509 align:start position:32% line:-2
ぜひ楽しんでください
会場で会いましょう

01:33:57.070 --> 01:34:02.509 align:start position:32% line:-2
ぜひ楽しんでください
会場で会いましょう

01:34:02.643 --> 01:34:06.313 align:start position:43% line:-1
(拍手)
