WEBVTT

00:00:07.007 --> 00:00:14.781 align:start position:43% line:-1
(音楽)

00:00:21.154 --> 00:00:22.422 align:start position:41% line:-1
こんにちは

00:00:22.890 --> 00:00:28.462 align:start position:43% line:-1
(拍手）

00:00:28.562 --> 00:00:32.466 align:start position:27% line:-2
MapKit JSチームの
ヴィッキ･マーリーです

00:00:32.566 --> 00:00:36.136 align:start position:12% line:-2
こちらはセッション212
Introducing MapKit JS

00:00:37.237 --> 00:00:42.309 align:start position:23% line:-2
10年以上前に iPhoneが
登場して 物事が変わりました

00:00:42.409 --> 00:00:46.680 align:start position:27% line:-2
このアプリケーションの
エコシステムができたのです

00:00:47.247 --> 00:00:52.786 align:start position:29% line:-2
今ではアプリケーションが
生活必需品となりましたが

00:00:53.053 --> 00:00:56.557 align:start position:23% line:-1
以前はウェブサイトが主流でした

00:00:57.191 --> 00:01:02.296 align:start position:21% line:-2
iPhone以前に創業した会社は
ウェブサイトを作りました

00:00:57.191 --> 00:01:02.296 align:start position:21% line:-2
iPhone以前に創業した会社は
ウェブサイトを作りました

00:01:02.396 --> 00:01:04.498 align:start position:27% line:-2
現在も
アプリケーションを使いつつ

00:01:04.631 --> 00:01:09.870 align:start position:23% line:-2
ウェブサイトも併用して
広範囲に発信する企業があります

00:01:10.404 --> 00:01:15.309 align:start position:30% line:-2
両方を扱うデベロッパも
多いことでしょう

00:01:15.409 --> 00:01:19.980 align:start position:29% line:-2
WWDCのウェブサイトが
いい例です

00:01:20.080 --> 00:01:22.816 align:start position:27% line:-2
ウェブサイトと
アプリケーションがあります

00:01:22.916 --> 00:01:26.420 align:start position:29% line:-2
おそらく 皆さんは
それを使って会場の場所を

00:01:26.520 --> 00:01:28.922 align:start position:25% line:-1
確認したのではないでしょうか

00:01:29.857 --> 00:01:34.061 align:start position:21% line:-2
Appleでは ありがたいことに
以前から―

00:01:34.161 --> 00:01:38.565 align:start position:25% line:-2
自社のウェブサイトで
Apple マップが使えます

00:01:38.732 --> 00:01:41.435 align:start position:27% line:-1
こちらは WWDCのページ

00:01:41.535 --> 00:01:45.172 align:start position:32% line:-2
他のイベントの場所が
示されています

00:01:46.173 --> 00:01:49.476 align:start position:23% line:-2
iCloudで
“iPhoneを探す”を使うと

00:01:49.576 --> 00:01:51.712 align:start position:21% line:-2
ウェブサイトに
Apple マップが表示されます

00:01:52.546 --> 00:01:55.148 align:start position:32% line:-1
小売店を検索する時も

00:01:55.249 --> 00:01:58.552 align:start position:21% line:-2
同じく ウェブサイトに
Apple マップが表示されます

00:01:59.486 --> 00:02:03.857 align:start position:29% line:-2
アプリケーションでは
おなじみのMapKitを

00:01:59.486 --> 00:02:03.857 align:start position:29% line:-2
アプリケーションでは
おなじみのMapKitを

00:02:04.157 --> 00:02:08.794 align:start position:25% line:-2
今日からはウェブサイト上でも
ご利用いただけます

00:02:10.030 --> 00:02:14.134 align:start position:43% line:-1
(拍手)

00:02:14.801 --> 00:02:19.506 align:start position:16% line:-2
WWDCでは今週
MapKit JSベータ版を公開します

00:02:19.606 --> 00:02:24.111 align:start position:27% line:-2
ライブラリは
私たちのサイト用と同じです

00:02:24.711 --> 00:02:30.384 align:start position:21% line:-2
すべてのウェブマップライブラリは
無料使用の段階があり

00:02:30.484 --> 00:02:33.187 align:start position:23% line:-1
一定回数のリクエストが可能です

00:02:33.287 --> 00:02:35.756 align:start position:25% line:-1
MapKit JSも同じです

00:02:36.190 --> 00:02:38.258 align:start position:30% line:-1
MapKit JSでは

00:02:38.358 --> 00:02:42.729 align:start position:32% line:-2
ユーザはマップを
25万回表示できます

00:02:43.697 --> 00:02:46.233 align:start position:21% line:-1
リクエストの上限は２万5000回

00:02:46.433 --> 00:02:48.902 align:start position:29% line:-2
含まれるのは
ジオコーディングや検索―

00:02:49.002 --> 00:02:51.572 align:start position:21% line:-1
検索オートコンプリートと経路です

00:02:51.772 --> 00:02:56.343 align:start position:30% line:-2
通常 この無料段階には
一定の期間が設けられ

00:02:56.443 --> 00:03:00.047 align:start position:27% line:-1
年単位 月単位 週単位など

00:02:56.443 --> 00:03:00.047 align:start position:27% line:-1
年単位 月単位 週単位など

00:03:00.147 --> 00:03:05.719 align:start position:23% line:-2
MapKit JSベータ版では
同じ上限が１日単位です

00:03:05.953 --> 00:03:11.258 align:start position:43% line:-1
(拍手)

00:03:11.592 --> 00:03:13.060 align:start position:39% line:-1
十分ですよね

00:03:13.393 --> 00:03:17.731 align:start position:32% line:-2
もし 特殊な事情で
それ以上必要な場合は

00:03:17.831 --> 00:03:20.133 align:start position:32% line:-2
オンラインフォームで
ご連絡ください

00:03:20.234 --> 00:03:23.837 align:start position:34% line:-2
記入して提出すると
我々に届きます

00:03:24.705 --> 00:03:27.674 align:start position:18% line:-1
MapKit JSにはキーが必要です

00:03:27.774 --> 00:03:30.644 align:start position:29% line:-2
デベロッパ用アカウントに
サインインして

00:03:30.744 --> 00:03:33.947 align:start position:21% line:-1
“証明書、ID、プロファイル”へ

00:03:34.114 --> 00:03:39.786 align:start position:29% line:-2
すると 他のサービス同様
キーを取得できます

00:03:40.821 --> 00:03:44.858 align:start position:20% line:-2
MapKit JSベータ版のキーは
数量限定なので

00:03:44.958 --> 00:03:48.128 align:start position:23% line:-1
なるべく早めに取得してください

00:03:50.697 --> 00:03:53.901 align:start position:25% line:-1
キーを取得して 使い始めたら

00:03:54.001 --> 00:03:56.403 align:start position:29% line:-1
きっと気に入ると思います

00:03:56.503 --> 00:03:59.806 align:start position:23% line:-1
魅力的な点がいろいろあるのです

00:04:00.207 --> 00:04:04.478 align:start position:25% line:-2
１つめは アプリケーションと
ウェブサイトで

00:04:04.578 --> 00:04:06.947 align:start position:25% line:-1
共通のマップを提供できること

00:04:07.181 --> 00:04:10.317 align:start position:32% line:-2
アプリケーション内で
ご利用かと思いますが

00:04:10.450 --> 00:04:13.353 align:start position:30% line:-1
今度はどこでも使えます

00:04:15.322 --> 00:04:17.190 align:start position:16% line:-1
The MapKit JS APIは

00:04:17.291 --> 00:04:22.095 align:start position:23% line:-2
皆さんがネイティブで使っている
APIに基づいています

00:04:22.196 --> 00:04:25.232 align:start position:32% line:-2
ウェブサイトの
デベロッパにとっても

00:04:25.332 --> 00:04:27.534 align:start position:32% line:-1
なじみのあるものです

00:04:29.570 --> 00:04:32.206 align:start position:29% line:-1
ウェブサイト上での動作は

00:04:32.306 --> 00:04:36.677 align:start position:21% line:-2
従来のApple マップの動作と
変わりません

00:04:36.777 --> 00:04:40.814 align:start position:29% line:-2
32の言語に対応し
右から左へ書くことができ

00:04:40.914 --> 00:04:44.785 align:start position:32% line:-2
キーボードアクセスも
ボイスオーバーも可能

00:04:45.185 --> 00:04:49.590 align:start position:27% line:-2
Apple マップで人気の
美しい地図

00:04:49.690 --> 00:04:52.693 align:start position:27% line:-1
拡大や回転 スクロールなど

00:04:52.826 --> 00:04:57.631 align:start position:30% line:-2
ネイティブジェスチャも
サポートします

00:04:59.032 --> 00:05:02.436 align:start position:29% line:-2
適応レンダリングモードも
利用できます

00:04:59.032 --> 00:05:02.436 align:start position:29% line:-2
適応レンダリングモードも
利用できます

00:05:02.636 --> 00:05:07.407 align:start position:23% line:-2
これは マップのレンダリングが
数種類あるということです

00:05:07.741 --> 00:05:10.077 align:start position:12% line:-2
１つめは
Client-Side Rendering

00:05:10.177 --> 00:05:15.249 align:start position:27% line:-2
フルWebGLエンジンで
クライアント上に表示します

00:05:15.682 --> 00:05:20.220 align:start position:27% line:-2
ピンチズームや
２本指でのスクロールなどが

00:05:20.320 --> 00:05:24.291 align:start position:29% line:-2
スムーズに実行できるのは
このおかげです

00:05:24.424 --> 00:05:29.596 align:start position:23% line:-2
ネイティブ表示と同様
ズームレベルで文字が変わります

00:05:32.099 --> 00:05:36.637 align:start position:27% line:-2
この機能を使って
ラベル表示の管理もできます

00:05:36.737 --> 00:05:42.409 align:start position:27% line:-2
例えば ２本指で
マップを回転させる場合でも

00:05:42.543 --> 00:05:45.879 align:start position:23% line:-1
ラベルは水平のまま表示されます

00:05:47.347 --> 00:05:49.850 align:start position:32% line:-1
さらに CSRでは

00:05:49.950 --> 00:05:54.521 align:start position:25% line:-2
iOSで見ていたのと同じ
マーカー型の注釈が出てきます

00:05:54.621 --> 00:05:58.158 align:start position:25% line:-1
この注釈はMy Marker

00:05:58.258 --> 00:06:01.094 align:start position:30% line:-2
この注釈を選ぶと
サブタイトルが出ますが

00:05:58.258 --> 00:06:01.094 align:start position:30% line:-2
この注釈を選ぶと
サブタイトルが出ますが

00:06:01.195 --> 00:06:04.398 align:start position:21% line:-1
下のラベルと重なることがあります

00:06:04.832 --> 00:06:08.702 align:start position:29% line:-2
その際 CSRと
ラベルの管理機能を使って

00:06:08.802 --> 00:06:11.438 align:start position:32% line:-1
ラベルを消しましょう

00:06:11.538 --> 00:06:16.577 align:start position:30% line:-2
そうすれば注釈の文字と
重なることはありません

00:06:18.078 --> 00:06:23.684 align:start position:25% line:-2
ズームインやアウトで
マップ上のラベルが変わっても

00:06:23.784 --> 00:06:27.654 align:start position:30% line:-2
ラベルは 注釈の文字に
重なりません

00:06:27.955 --> 00:06:33.760 align:start position:30% line:-2
動かせるタイプの注釈を
ユーザが移動させても

00:06:33.927 --> 00:06:38.632 align:start position:23% line:-2
注釈の文字が
ラベルと重なることはありません

00:06:39.566 --> 00:06:42.970 align:start position:30% line:-1
これがCSRの一例です

00:06:43.237 --> 00:06:47.908 align:start position:21% line:-2
しかし サイトやデバイスの状態は
個々に異なります

00:06:48.475 --> 00:06:51.612 align:start position:34% line:-2
例えば ユーザが
古いデバイスなど―

00:06:51.712 --> 00:06:56.283 align:start position:30% line:-2
低パフォーマンスの
環境にいるとしましょう

00:06:56.416 --> 00:07:00.053 align:start position:0% line:-2
その際は Labels-Only Client-Side
Renderingがあります

00:06:56.416 --> 00:07:00.053 align:start position:0% line:-2
その際は Labels-Only Client-Side
Renderingがあります

00:07:00.587 --> 00:07:05.659 align:start position:29% line:-2
これは基本となるマップの
グリッド画像タイルで

00:07:05.926 --> 00:07:10.531 align:start position:27% line:-2
WebGLラベルのレイヤを
重ねています

00:07:10.697 --> 00:07:14.201 align:start position:29% line:-2
これにより
回転やラベルの省略など―

00:07:14.301 --> 00:07:20.073 align:start position:27% line:-2
便利な機能を多くのユーザに
効率よく提供できます

00:07:21.875 --> 00:07:25.479 align:start position:25% line:-2
ユーザが
WebGLを使えない環境なら

00:07:25.579 --> 00:07:27.781 align:start position:11% line:-2
Server-Side Renderingを
使います

00:07:27.881 --> 00:07:31.351 align:start position:29% line:-2
こちらも
タイル状になっていますが

00:07:31.451 --> 00:07:34.688 align:start position:21% line:-1
ラベルは画像の一部になっています

00:07:36.123 --> 00:07:38.792 align:start position:25% line:-1
クライアントの環境に合わせて

00:07:38.892 --> 00:07:43.030 align:start position:30% line:-2
適切なモードを
提供できるのが魅力です

00:07:43.397 --> 00:07:46.733 align:start position:25% line:-1
モードは自動で切り替わるので

00:07:46.833 --> 00:07:52.472 align:start position:30% line:-2
どちらのモードがいいか
悩む必要もありません

00:07:52.739 --> 00:07:57.344 align:start position:29% line:-2
簡単なテストで
最適なモードを判定します

00:07:58.846 --> 00:08:04.818 align:start position:21% line:-2
今のところ CSRか
LO-CSRが大半を占めています

00:07:58.846 --> 00:08:04.818 align:start position:21% line:-2
今のところ CSRか
LO-CSRが大半を占めています

00:08:06.186 --> 00:08:08.522 align:start position:32% line:-1
簡単な紹介はここまで

00:08:08.622 --> 00:08:13.894 align:start position:23% line:-2
次はジュリアン･クイントが
APIの使用について解説します

00:08:14.928 --> 00:08:17.698 align:start position:43% line:-1
(拍手)

00:08:21.101 --> 00:08:22.436 align:start position:32% line:-1
ありがとう ヴィッキ

00:08:24.638 --> 00:08:28.709 align:start position:27% line:-2
ウェブサイトで使用する際の
技術的な説明をします

00:08:29.710 --> 00:08:31.545 align:start position:38% line:-1
まずは設定です

00:08:32.078 --> 00:08:36.450 align:start position:29% line:-2
独自データを表示する際の
注釈の動かし方や

00:08:37.384 --> 00:08:41.922 align:start position:29% line:-2
付加サービス提供の方法も
ご紹介します

00:08:43.789 --> 00:08:46.994 align:start position:30% line:-1
設定の手順は４段階です

00:08:47.661 --> 00:08:49.763 align:start position:18% line:-1
まず MapKit JSをインポート

00:08:50.097 --> 00:08:53.634 align:start position:30% line:-2
このscriptタグを
ページ内に加えます

00:08:53.867 --> 00:09:00.240 align:start position:11% line:-2
MapKit JS scriptのURLには
バージョン情報もあります

00:08:53.867 --> 00:09:00.240 align:start position:11% line:-2
MapKit JS scriptのURLには
バージョン情報もあります

00:09:00.974 --> 00:09:04.378 align:start position:32% line:-2
表示はセマンティック
バージョニングで

00:09:04.478 --> 00:09:10.384 align:start position:29% line:-2
大幅な変更があった場合は
１つめの数字が変わります

00:09:10.617 --> 00:09:13.954 align:start position:25% line:-1
２つめの数字はマイナーな変更

00:09:14.154 --> 00:09:17.558 align:start position:27% line:-1
バグの修正や 新機能の追加

00:09:17.658 --> 00:09:21.094 align:start position:29% line:-2
パフォーマンス向上の際に
変わります

00:09:21.195 --> 00:09:24.765 align:start position:25% line:-1
最後の数字は緊急パッチ用です

00:09:24.865 --> 00:09:30.337 align:start position:27% line:-2
マイナーとパッチについては
xを使うこともできます

00:09:30.537 --> 00:09:34.575 align:start position:30% line:-2
初回リリース時に
緊急バグ修正をしたので

00:09:34.675 --> 00:09:38.078 align:start position:30% line:-2
導入にあたっては
5.0.xを推奨します

00:09:40.113 --> 00:09:43.283 align:start position:32% line:-2
ウェブサイトに
マップを表示するには

00:09:43.383 --> 00:09:47.621 align:start position:30% line:-2
表示位置を
指定する必要があります

00:09:47.721 --> 00:09:49.189 align:start position:39% line:-1
そのために―

00:09:49.423 --> 00:09:55.295 align:start position:21% line:-2
HTML要素を使って
マップの表示場所を指定しましょう

00:09:55.395 --> 00:10:00.834 align:start position:23% line:-2
この場合は
div要素を使うといいでしょう

00:09:55.395 --> 00:10:00.834 align:start position:23% line:-2
この場合は
div要素を使うといいでしょう

00:10:01.235 --> 00:10:04.838 align:start position:34% line:-2
確認しやすいように
IDもつけています

00:10:04.938 --> 00:10:09.109 align:start position:29% line:-2
一番大事なのは
サイズを指定することです

00:10:09.243 --> 00:10:11.612 align:start position:23% line:-1
マップ自体にはサイズがないので

00:10:11.712 --> 00:10:15.849 align:start position:29% line:-2
表示場所の要素のサイズが
使われます

00:10:16.283 --> 00:10:21.188 align:start position:27% line:-2
ここにグレーで示したものが
div要素なら

00:10:21.288 --> 00:10:24.057 align:start position:29% line:-2
マップは
この要素内に表示されます

00:10:24.158 --> 00:10:27.995 align:start position:27% line:-2
要素に応じて
マップのサイズも変わります

00:10:29.463 --> 00:10:32.366 align:start position:30% line:-1
これで要素の設定は完了

00:10:32.533 --> 00:10:35.402 align:start position:20% line:-1
次はMapKit JSの初期化です

00:10:35.502 --> 00:10:39.673 align:start position:25% line:-2
MapKit JSの利用には
キーが必要です

00:10:39.806 --> 00:10:42.476 align:start position:27% line:-1
MapKitの初期化では

00:10:43.410 --> 00:10:46.680 align:start position:11% line:-2
authorizationCallbackを
取得します

00:10:46.780 --> 00:10:52.319 align:start position:25% line:-2
すると MapKit JSの
サービスが始まり

00:10:52.419 --> 00:10:57.024 align:start position:29% line:-2
ウェブサイトにマップを
表示できるようになります

00:10:57.925 --> 00:11:00.627 align:start position:25% line:-2
そして
マップのオブジェクト作成には

00:10:57.925 --> 00:11:00.627 align:start position:25% line:-2
そして
マップのオブジェクト作成には

00:11:00.928 --> 00:11:03.931 align:start position:23% line:-2
MapKitの
マップコンストラクタを使います

00:11:04.031 --> 00:11:07.000 align:start position:25% line:-1
マップの表示位置を指定すると

00:11:07.100 --> 00:11:11.038 align:start position:27% line:-2
このように ウェブサイトで
マップが表示されます

00:11:12.406 --> 00:11:15.976 align:start position:23% line:-1
パラメータを指定していないので

00:11:16.076 --> 00:11:18.612 align:start position:30% line:-1
初期設定状態の表示です

00:11:18.712 --> 00:11:21.715 align:start position:21% line:-1
右下にコントロールも出ていますね

00:11:21.815 --> 00:11:25.719 align:start position:30% line:-2
回転のための方位磁石や
ズーム機能もあります

00:11:26.220 --> 00:11:29.122 align:start position:30% line:-2
画面上部で
マップの種類も選べます

00:11:30.824 --> 00:11:33.494 align:start position:29% line:-1
これは広大なエリアですが

00:11:33.594 --> 00:11:39.366 align:start position:27% line:-2
とても小さなマップを
表示したい時もありますよね

00:11:39.466 --> 00:11:42.503 align:start position:30% line:-1
省スペース化も可能です

00:11:42.636 --> 00:11:46.673 align:start position:32% line:-2
マップの縦横が
基準よりも小さい場合

00:11:46.773 --> 00:11:50.310 align:start position:23% line:-1
自動でこの機能が切り替わります

00:11:50.844 --> 00:11:54.014 align:start position:32% line:-2
タッチデバイスは
ウェブサイトと異なり

00:11:54.114 --> 00:11:58.151 align:start position:32% line:-2
ズームや方位磁石を
出す必要がありません

00:11:58.252 --> 00:12:01.188 align:start position:32% line:-1
ジェスチャを使って―

00:11:58.252 --> 00:12:01.188 align:start position:32% line:-1
ジェスチャを使って―

00:12:01.288 --> 00:12:05.025 align:start position:27% line:-1
回転やズームを行うからです

00:12:05.192 --> 00:12:11.331 align:start position:25% line:-2
なので スペース確保のために
最初から消しておきます

00:12:12.933 --> 00:12:15.936 align:start position:36% line:-2
ロゴと法律文は
常に表示されます

00:12:16.937 --> 00:12:22.476 align:start position:25% line:-2
コントロールの表示･非表示も
任意で設定できます

00:12:22.576 --> 00:12:26.613 align:start position:32% line:-2
方位磁石や拡大縮小は
適応制御なので

00:12:26.747 --> 00:12:31.251 align:start position:30% line:-2
プラットフォームにより
少し動きが異なります

00:12:31.351 --> 00:12:35.689 align:start position:27% line:-2
iOSの初期設定では
方位磁石は表示されませんが

00:12:35.789 --> 00:12:40.227 align:start position:32% line:-2
マップを回転させると
北を示す表示が出ます

00:12:40.427 --> 00:12:44.665 align:start position:25% line:-2
マップ上に
距離を示す目盛りがありますが

00:12:44.765 --> 00:12:48.735 align:start position:30% line:-2
これは 拡大縮小時のみ
表示されます

00:12:48.969 --> 00:12:53.874 align:start position:23% line:-2
そして 拡大縮小や回転をすると
右下に―

00:12:53.974 --> 00:12:57.377 align:start position:32% line:-2
方位磁石が
出たり消えたりします

00:12:57.477 --> 00:13:00.380 align:start position:27% line:-1
距離の目盛りは左上に出ます

00:12:57.477 --> 00:13:00.380 align:start position:27% line:-1
距離の目盛りは左上に出ます

00:13:00.547 --> 00:13:04.685 align:start position:25% line:-2
“常に表示” もしくは
“常に非表示” にもできます

00:13:06.119 --> 00:13:08.388 align:start position:34% line:-1
他のコントロールは

00:13:08.489 --> 00:13:14.394 align:start position:29% line:-2
ブールプロパティで
表示･非表示を設定します

00:13:16.029 --> 00:13:20.701 align:start position:30% line:-2
こちらは 初期設定では
非表示のもので

00:13:20.801 --> 00:13:26.273 align:start position:21% line:-2
例えば ユーザ位置コントロールは
右下に表示されます

00:13:26.473 --> 00:13:28.675 align:start position:36% line:-1
今 選択したので

00:13:28.775 --> 00:13:32.613 align:start position:29% line:-2
現在位置がマップの中央に
表示されています

00:13:33.180 --> 00:13:37.818 align:start position:25% line:-2
距離目盛りは
常に表示するよう設定しました

00:13:38.552 --> 00:13:41.088 align:start position:25% line:-1
他にもいろいろ設定が可能です

00:13:41.989 --> 00:13:47.728 align:start position:25% line:-2
ウェブサイトの色みに合わせて
マップの色を変えたり

00:13:47.828 --> 00:13:51.231 align:start position:34% line:-2
コントロールの色を
変えたりできます

00:13:51.331 --> 00:13:55.169 align:start position:32% line:-2
こちらのマップでは
ユーザコントロールを

00:13:55.269 --> 00:14:00.307 align:start position:29% line:-2
赤に設定したので
赤で強調されていますよね

00:13:55.269 --> 00:14:00.307 align:start position:29% line:-2
赤に設定したので
赤で強調されていますよね

00:14:00.407 --> 00:14:02.776 align:start position:23% line:-1
CSSなら どの色でも使えます

00:14:04.578 --> 00:14:08.682 align:start position:25% line:-2
言語設定は
ブラウザのものが使われるので

00:14:08.782 --> 00:14:14.788 align:start position:23% line:-2
ユーザにとっては
希望どおりの言語が出るはずです

00:14:14.888 --> 00:14:17.958 align:start position:32% line:-2
初期化コードで
言語を設定できますし

00:14:18.058 --> 00:14:20.994 align:start position:34% line:-2
プロパティでも
言語を変えられます

00:14:21.094 --> 00:14:25.732 align:start position:25% line:-2
今は
マップとコントロールの両方を

00:14:25.833 --> 00:14:27.868 align:start position:32% line:-1
日本語に設定しました

00:14:28.135 --> 00:14:32.339 align:start position:32% line:-2
方位磁石の北の表示が
置き換えられ―

00:14:32.506 --> 00:14:35.509 align:start position:23% line:-1
単位もメートル法になっています

00:14:35.609 --> 00:14:40.447 align:start position:29% line:-2
日本では 昔から
メートル法が主流なのです

00:14:42.082 --> 00:14:47.888 align:start position:27% line:-2
右から左に書くヘブライ語や
アラビア語などの場合

00:14:47.988 --> 00:14:52.192 align:start position:25% line:-2
コントロールも
それに合うように配置されます

00:14:53.727 --> 00:14:55.562 align:start position:32% line:-1
コントロールを使うと

00:14:55.662 --> 00:15:00.400 align:start position:29% line:-2
マップを操作できますが
直接動かすこともできます

00:14:55.662 --> 00:15:00.400 align:start position:29% line:-2
マップを操作できますが
直接動かすこともできます

00:15:00.501 --> 00:15:04.905 align:start position:34% line:-2
タッチデバイスでは
ジェスチャが有効で

00:15:05.005 --> 00:15:07.908 align:start position:23% line:-1
トラックパッドでも一部有効です

00:15:08.008 --> 00:15:11.044 align:start position:23% line:-1
マウスでマップの向きを変えたり

00:15:11.144 --> 00:15:14.381 align:start position:32% line:-2
ダブルタップで
拡大したりもできます

00:15:14.481 --> 00:15:17.951 align:start position:34% line:-2
拡大やスクロール
回転のプロパティを

00:15:18.051 --> 00:15:22.956 align:start position:21% line:-2
falseにすれば
これら直接の操作を無効にできます

00:15:23.056 --> 00:15:27.528 align:start position:30% line:-2
例えば 先ほどの
小さいマップの場合です

00:15:27.694 --> 00:15:31.398 align:start position:29% line:-2
ユーザが誤って
表示エリアを変えないよう

00:15:31.498 --> 00:15:33.600 align:start position:34% line:-1
固定したいですよね

00:15:33.700 --> 00:15:37.871 align:start position:27% line:-2
各設定をfalseにすれば
マップは動きません

00:15:40.140 --> 00:15:43.744 align:start position:23% line:-1
マップの設定方法が分かったので

00:15:43.844 --> 00:15:46.713 align:start position:23% line:-1
面白いコンテンツを出しましょう

00:15:47.581 --> 00:15:52.286 align:start position:29% line:-2
世界中を巡りながら
特定のエリアを出せますが

00:15:52.386 --> 00:15:58.292 align:start position:27% line:-2
表示中の地域に
注釈をつけることもできます

00:16:00.594 --> 00:16:03.030 align:start position:29% line:-1
地域の中心を設定する方法

00:16:03.130 --> 00:16:05.766 align:start position:29% line:-1
マップに注釈をつける方法

00:16:05.866 --> 00:16:08.969 align:start position:21% line:-1
オーバーレイの使い方を紹介します

00:16:09.236 --> 00:16:11.905 align:start position:27% line:-1
まずは中心と地域の設定です

00:16:13.207 --> 00:16:14.942 align:start position:32% line:-1
これは初期設定の状態

00:16:15.042 --> 00:16:18.011 align:start position:32% line:-1
最も縮小した状態で―

00:16:18.111 --> 00:16:22.382 align:start position:36% line:-2
初期設定の地域を
表示しています

00:16:22.516 --> 00:16:26.119 align:start position:30% line:-2
マップの中心は
緯度 経度共に０度です

00:16:26.653 --> 00:16:29.723 align:start position:27% line:-1
特定の地域を表示しましょう

00:16:29.823 --> 00:16:34.661 align:start position:32% line:-2
今回はブラジルの
リオデジャネイロです

00:16:35.095 --> 00:16:39.299 align:start position:30% line:-2
マップの中心を
リオデジャネイロに設定

00:16:39.399 --> 00:16:45.272 align:start position:23% line:-2
右のマップを見ると 中心が
リオデジャネイロになっています

00:16:45.772 --> 00:16:48.542 align:start position:25% line:-1
しかし 縮尺はそのままなので

00:16:48.642 --> 00:16:53.180 align:start position:30% line:-2
まだ 南アメリカ全体が
表示されています

00:16:53.280 --> 00:16:55.382 align:start position:34% line:-1
少し拡大しましょう

00:16:56.250 --> 00:16:59.186 align:start position:30% line:-1
まずは地域を設定します

00:16:59.286 --> 00:17:05.224 align:start position:27% line:-2
点で示されたマップの中心と
緯度と経度の幅で

00:16:59.286 --> 00:17:05.224 align:start position:27% line:-2
点で示されたマップの中心と
緯度と経度の幅で

00:17:05.492 --> 00:17:07.728 align:start position:34% line:-1
表示する地域を指定

00:17:07.828 --> 00:17:12.232 align:start position:30% line:-2
すると このように
点線で四角く囲まれます

00:17:12.833 --> 00:17:17.471 align:start position:25% line:-2
しかしマップに示された地域は
指定した範囲より

00:17:17.570 --> 00:17:20.240 align:start position:34% line:-1
広いかもしれません

00:17:20.339 --> 00:17:22.709 align:start position:27% line:-1
これは指定したエリア全体を

00:17:22.809 --> 00:17:25.945 align:start position:25% line:-1
設定した範囲に収めるためです

00:17:26.046 --> 00:17:30.517 align:start position:32% line:-2
この場合は
北と南に余白を作って

00:17:30.617 --> 00:17:34.588 align:start position:32% line:-2
指定した地域すべてが
収まるようにします

00:17:34.688 --> 00:17:39.960 align:start position:18% line:-2
MapKit JSのフレームワークを
設定する場合

00:17:40.060 --> 00:17:45.432 align:start position:12% line:-2
中心はmapkit.Coordinateで
緯度と経度

00:17:45.732 --> 00:17:49.102 align:start position:21% line:-2
CordinateRegionで
地域を設定

00:17:49.203 --> 00:17:51.939 align:start position:27% line:-1
２つのメンバーが含まれます

00:17:52.039 --> 00:17:54.141 align:start position:25% line:-1
中心もCoordinateで

00:17:54.241 --> 00:17:58.612 align:start position:23% line:-2
CoordinateSpanは
緯度と経度の差分です

00:18:01.682 --> 00:18:06.220 align:start position:27% line:-2
マップの範囲の座標は
どう確認すればいいでしょう

00:18:06.320 --> 00:18:12.025 align:start position:27% line:-2
各地域の緯度と経度の
調べ方は いろいろあります

00:18:12.125 --> 00:18:16.096 align:start position:23% line:-1
例えばウィキペディアで探せます

00:18:16.196 --> 00:18:21.735 align:start position:25% line:-2
地理情報のデータベースで
確認することもできるでしょう

00:18:21.869 --> 00:18:25.305 align:start position:27% line:-1
MapKitのサービスの―

00:18:25.405 --> 00:18:30.944 align:start position:29% line:-2
ジオコーディングや検索を
使うこともできます

00:18:31.044 --> 00:18:34.014 align:start position:25% line:-1
ジオコーディングで検索すると

00:18:34.314 --> 00:18:36.817 align:start position:27% line:-1
その地域の座標が得られます

00:18:36.917 --> 00:18:41.955 align:start position:23% line:-2
先ほどは MapKit JSの
ジオコーディングを使って

00:18:42.055 --> 00:18:46.126 align:start position:29% line:-2
リオデジャネイロの
座標を探して設定しました

00:18:46.527 --> 00:18:50.130 align:start position:30% line:-2
また 場所を
検索することもできます

00:18:50.230 --> 00:18:54.001 align:start position:27% line:-1
場所の座標を示すだけでなく

00:18:54.101 --> 00:18:59.439 align:start position:25% line:-2
すべての結果を含めるよう
周辺地域を示すこともできます

00:19:01.108 --> 00:19:06.680 align:start position:25% line:-2
簡単に地域を設定するには
showItemsも使えます

00:19:06.980 --> 00:19:10.517 align:start position:27% line:-2
では 注釈とオーバーレイを
追加しましょう

00:19:10.617 --> 00:19:15.489 align:start position:23% line:-2
showItemsを呼び出せば
当該地域のアイテムを

00:19:15.589 --> 00:19:17.958 align:start position:32% line:-1
ユーザに提示できます

00:19:19.626 --> 00:19:24.665 align:start position:27% line:-2
表示地域の変更には
アニメーションを使うことも

00:19:24.765 --> 00:19:27.301 align:start position:29% line:-1
瞬時の切り替えも可能です

00:19:29.102 --> 00:19:32.606 align:start position:23% line:-1
表示地域やマップの中心の変更は

00:19:32.706 --> 00:19:35.742 align:start position:25% line:-1
コードから行うことができます

00:19:35.843 --> 00:19:39.079 align:start position:34% line:-2
また ユーザとの
インタラクションに

00:19:39.179 --> 00:19:42.916 align:start position:23% line:-1
反応する形で行うこともできます

00:19:43.016 --> 00:19:44.751 align:start position:30% line:-1
マップのオブジェクトで

00:19:45.619 --> 00:19:49.022 align:start position:27% line:-1
ユーザの操作に対応できます

00:19:49.122 --> 00:19:53.961 align:start position:25% line:-2
例えば 地域の移動の
開始から終了といった動きです

00:19:54.061 --> 00:19:58.198 align:start position:23% line:-2
拡大縮小や回転といった操作にも
対応できます

00:19:58.365 --> 00:20:01.268 align:start position:20% line:-1
DOMイベントのモデルに従うので

00:19:58.365 --> 00:20:01.268 align:start position:20% line:-1
DOMイベントのモデルに従うので

00:20:01.368 --> 00:20:06.006 align:start position:7% line:-2
addEventListenerや
removeEventListenerが使えます

00:20:06.106 --> 00:20:10.878 align:start position:25% line:-2
また イベントオブジェクトと
パラメータも使えます

00:20:10.978 --> 00:20:14.481 align:start position:34% line:-2
例えば ユーザが
地域を変更するたび

00:20:14.615 --> 00:20:18.218 align:start position:25% line:-1
マップを再表示させたい場合は

00:20:18.318 --> 00:20:20.954 align:start position:27% line:-1
地域変更とイベントを待てば

00:20:21.054 --> 00:20:24.558 align:start position:27% line:-2
別の場所が指定されたことが
分かります

00:20:24.658 --> 00:20:28.128 align:start position:30% line:-1
地図のその地域を使って

00:20:28.228 --> 00:20:32.299 align:start position:23% line:-1
どんな情報を見せるか計算します

00:20:34.635 --> 00:20:39.506 align:start position:27% line:-2
マップの設定が分かったので
独自の情報を追加しましょう

00:20:39.606 --> 00:20:41.542 align:start position:27% line:-1
使うのは注釈とオーバーレイ

00:20:41.642 --> 00:20:45.412 align:start position:30% line:-2
MapKit JSでは
３種類の注釈が使えます

00:20:45.512 --> 00:20:49.516 align:start position:32% line:-2
１つは先ほど紹介した
マーカー注釈

00:20:50.284 --> 00:20:56.023 align:start position:21% line:-2
マーカー以外では
画像を使ったカスタマイズが可能で

00:20:56.123 --> 00:21:01.395 align:start position:25% line:-2
DOM要素を使えば 見た目を
完全にカスタマイズできます

00:20:56.123 --> 00:21:01.395 align:start position:25% line:-2
DOM要素を使えば 見た目を
完全にカスタマイズできます

00:21:02.696 --> 00:21:06.867 align:start position:18% line:-2
マーカー注釈は
MapKit JSの最も便利な注釈で

00:21:06.967 --> 00:21:12.172 align:start position:29% line:-2
豊富なインタラクションが
組み込まれています

00:21:12.706 --> 00:21:14.007 align:start position:36% line:-1
スタイルも豊富で

00:21:14.107 --> 00:21:18.345 align:start position:23% line:-2
iOSで見ているマーカー注釈に
似ています

00:21:18.946 --> 00:21:22.082 align:start position:32% line:-2
選択と非選択の
アニメーションがあり

00:21:22.316 --> 00:21:26.787 align:start position:34% line:-2
注釈に重なる文字は
自動的に消えます

00:21:26.887 --> 00:21:28.789 align:start position:36% line:-1
注釈を選択すると

00:21:28.889 --> 00:21:34.428 align:start position:23% line:-2
サブタイトルのために
駅の出口のラベルが消えましたね

00:21:36.463 --> 00:21:38.665 align:start position:38% line:-1
マーカー注釈は

00:21:39.066 --> 00:21:43.170 align:start position:21% line:-2
選択された
レンダリングモードに従い自動的に

00:21:43.270 --> 00:21:46.573 align:start position:25% line:-1
形が変わるようになっています

00:21:46.840 --> 00:21:51.845 align:start position:29% line:-2
先ほど ご紹介したように
CSRかLO-CSRなら

00:21:51.945 --> 00:21:57.251 align:start position:23% line:-2
ラベルを隠し 注釈のタイトルと
サブタイトルを表示できます

00:21:57.384 --> 00:22:00.053 align:start position:29% line:-1
その様子が左側の画像です

00:21:57.384 --> 00:22:00.053 align:start position:29% line:-1
その様子が左側の画像です

00:22:00.621 --> 00:22:02.789 align:start position:7% line:-1
Server-Side Renderingの場合

00:22:02.890 --> 00:22:05.893 align:start position:25% line:-1
ラベルは固定なので隠せません

00:22:05.993 --> 00:22:09.396 align:start position:32% line:-2
右のマップを見ると
ラベルが多いですよね

00:22:09.496 --> 00:22:11.598 align:start position:29% line:-1
何も隠していないからです

00:22:11.698 --> 00:22:15.636 align:start position:32% line:-2
ちゃんと見えるように
注釈を出したいので

00:22:15.736 --> 00:22:19.540 align:start position:30% line:-2
吹き出しのみで
ラベルは出していません

00:22:19.640 --> 00:22:23.377 align:start position:27% line:-1
注釈の吹き出しを選択すると

00:22:23.477 --> 00:22:27.548 align:start position:29% line:-2
タイトルとサブタイトルが
見られます

00:22:27.648 --> 00:22:33.687 align:start position:21% line:-2
カスタム注釈でも吹き出しで
タイトルとサブタイトルを出します

00:22:35.255 --> 00:22:39.226 align:start position:29% line:-2
マーカー注釈にも
いろいろな種類があります

00:22:39.493 --> 00:22:41.695 align:start position:30% line:-1
こちらは初期設定のもの

00:22:41.795 --> 00:22:46.800 align:start position:21% line:-2
座標とタイトルなどのプロパティで
注釈を作れます

00:22:46.900 --> 00:22:50.270 align:start position:27% line:-1
初期設定のレンダリングでは

00:22:50.437 --> 00:22:55.876 align:start position:27% line:-2
吹き出しの中にピンがあって
色は赤になっています

00:22:56.877 --> 00:23:00.114 align:start position:25% line:-1
CSSの色コードが使えるので

00:22:56.877 --> 00:23:00.114 align:start position:25% line:-1
CSSの色コードが使えるので

00:23:00.214 --> 00:23:03.584 align:start position:27% line:-1
吹き出しを緑にしてみました

00:23:03.684 --> 00:23:05.886 align:start position:30% line:-1
記号の色も変えられます

00:23:05.986 --> 00:23:07.921 align:start position:32% line:-1
記号は１色のみなので

00:23:08.021 --> 00:23:12.659 align:start position:29% line:-2
ここでは初期設定の白から
黄色に変更しました

00:23:13.794 --> 00:23:18.332 align:start position:34% line:-2
この記号をピンから
任意のラスタ画像に

00:23:18.432 --> 00:23:21.268 align:start position:30% line:-1
変更することも可能です

00:23:21.368 --> 00:23:23.403 align:start position:27% line:-1
今回は この画像にしました

00:23:23.504 --> 00:23:27.908 align:start position:25% line:-2
ピクセル比の違う複数の画像を
用意できます

00:23:29.343 --> 00:23:32.679 align:start position:21% line:-1
選択されると注釈が大きくなるので

00:23:32.779 --> 00:23:35.449 align:start position:29% line:-1
記号のスペースが増えます

00:23:35.549 --> 00:23:38.886 align:start position:23% line:-1
例えば 注釈が選択された場合に

00:23:38.986 --> 00:23:41.922 align:start position:25% line:-1
別の画像を出すことができます

00:23:43.223 --> 00:23:46.960 align:start position:29% line:-2
画像の代わりに
文字を出すこともできます

00:23:47.194 --> 00:23:52.966 align:start position:25% line:-2
文字を出す場合 ３文字以内の
短いものにするのが無難です

00:23:53.066 --> 00:23:55.669 align:start position:27% line:-1
今回は“Ｍ”という文字です

00:23:55.802 --> 00:24:00.941 align:start position:27% line:-2
文字と画像が指定された場合
文字が表示されます

00:23:55.802 --> 00:24:00.941 align:start position:27% line:-2
文字と画像が指定された場合
文字が表示されます

00:24:01.341 --> 00:24:04.478 align:start position:30% line:-2
マーカー注釈の出し方が
分かったので

00:24:04.578 --> 00:24:07.481 align:start position:29% line:-2
マップ上に
注釈をたくさん出せますね

00:24:07.648 --> 00:24:11.518 align:start position:30% line:-2
こちらはパリでの
カフェとバーの検索結果

00:24:11.618 --> 00:24:15.189 align:start position:32% line:-2
見分けがつくように
スタイルを変えました

00:24:15.455 --> 00:24:21.228 align:start position:27% line:-2
しかし このエリアでは
注釈が多すぎるのが問題です

00:24:21.895 --> 00:24:26.099 align:start position:29% line:-2
その問題を解消する方法が
２つあります

00:24:26.266 --> 00:24:30.237 align:start position:30% line:-2
１つは注釈の
表示優先順位の設定です

00:24:30.637 --> 00:24:33.173 align:start position:25% line:-1
２つの注釈が かち合った場合

00:24:33.273 --> 00:24:36.610 align:start position:27% line:-2
優先順位の高いプロパティを
数字で判断し

00:24:37.077 --> 00:24:41.748 align:start position:29% line:-2
順位の低い注釈を
引っ込めることができます

00:24:42.749 --> 00:24:45.919 align:start position:34% line:-2
かなりの数の注釈が
消えましたね

00:24:46.019 --> 00:24:48.789 align:start position:23% line:-1
この状態からマップを拡大すると

00:24:48.889 --> 00:24:53.160 align:start position:36% line:-2
消えていた注釈が
再び表示されます

00:24:53.327 --> 00:24:55.462 align:start position:34% line:-1
優先順位が同じ場合

00:24:55.562 --> 00:25:01.869 align:start position:30% line:-2
画面の下側に近い注釈が
優先的に表示されます

00:24:55.562 --> 00:25:01.869 align:start position:30% line:-2
画面の下側に近い注釈が
優先的に表示されます

00:25:03.036 --> 00:25:07.441 align:start position:29% line:-2
優先順位以外に
クラスタリングも使えます

00:25:07.641 --> 00:25:11.278 align:start position:30% line:-2
例えば マーカー注釈の
プロパティで

00:25:11.378 --> 00:25:15.649 align:start position:30% line:-2
クラスタがどちらも
単なる文字列だとします

00:25:15.749 --> 00:25:19.820 align:start position:30% line:-2
２つの注釈がかち合って
クラスタが同じ場合

00:25:19.920 --> 00:25:23.290 align:start position:36% line:-2
両方を示す注釈に
入れ替えられます

00:25:23.390 --> 00:25:26.994 align:start position:27% line:-2
３つ以上がかち合った場合も
同じです

00:25:27.161 --> 00:25:31.865 align:start position:21% line:-1
つまり 近くに他の注釈がなければ

00:25:31.965 --> 00:25:34.201 align:start position:34% line:-1
単独で表示されます

00:25:34.301 --> 00:25:36.670 align:start position:29% line:-1
しかし 密集した場所では

00:25:36.870 --> 00:25:40.240 align:start position:21% line:-1
複数の注釈が１つにまとめられます

00:25:40.440 --> 00:25:43.877 align:start position:32% line:-2
クラスタが作られたら
マーカー注釈で

00:25:44.011 --> 00:25:47.481 align:start position:23% line:-1
クラスタ内の注釈の数を示します

00:25:47.581 --> 00:25:52.853 align:start position:25% line:-2
また 新しいスタイルや種類の
注釈を指定することで

00:25:52.953 --> 00:25:57.257 align:start position:30% line:-2
クラスタの見栄えも
変更することができます

00:25:57.624 --> 00:26:01.995 align:start position:30% line:-2
注釈が使われている例を
お見せしましょう

00:25:57.624 --> 00:26:01.995 align:start position:30% line:-2
注釈が使われている例を
お見せしましょう

00:26:06.433 --> 00:26:07.801 align:start position:38% line:-1
このデモでは…

00:26:10.037 --> 00:26:11.271 align:start position:43% line:-1
よし出た

00:26:12.039 --> 00:26:13.807 align:start position:27% line:-1
このデモでは マップを使い

00:26:14.274 --> 00:26:16.677 align:start position:32% line:-1
データをお見せします

00:26:17.277 --> 00:26:20.581 align:start position:27% line:-1
ビッグフットの目撃情報です

00:26:20.681 --> 00:26:26.320 align:start position:30% line:-2
セッション終了後か
イベント後の週末にでも

00:26:26.420 --> 00:26:31.325 align:start position:29% line:-2
北カリフォルニアの森で
ビッグフットを探せますよ

00:26:33.760 --> 00:26:35.295 align:start position:34% line:-1
こちらのマップでは

00:26:35.996 --> 00:26:41.802 align:start position:27% line:-2
前のスライドで紹介した形で
マップを表示しています

00:26:43.070 --> 00:26:48.308 align:start position:27% line:-2
ここに集めたものは
ビッグフットの目撃情報です

00:26:48.408 --> 00:26:54.147 align:start position:29% line:-2
目撃された場所や年などの
さまざまな情報を集め

00:26:54.248 --> 00:26:57.117 align:start position:34% line:-1
リストにしたのです

00:26:57.284 --> 00:27:02.256 align:start position:23% line:-2
この情報をマーカー注釈を使って
マップに表示しましょう

00:26:57.284 --> 00:27:02.256 align:start position:23% line:-2
この情報をマーカー注釈を使って
マップに表示しましょう

00:27:02.356 --> 00:27:06.126 align:start position:23% line:-1
まず 場所や年などの目撃情報を

00:27:06.226 --> 00:27:10.797 align:start position:27% line:-2
マーカー注釈に
置き換える仕組みを作ります

00:27:12.032 --> 00:27:13.901 align:start position:36% line:-1
目撃情報を得たら

00:27:14.001 --> 00:27:18.005 align:start position:34% line:-2
その座標を注釈で
使えるようにします

00:27:18.405 --> 00:27:21.942 align:start position:29% line:-2
場所以外に
年などの情報もあるので

00:27:22.042 --> 00:27:24.344 align:start position:27% line:-1
それはタイトルに表示します

00:27:24.478 --> 00:27:30.517 align:start position:25% line:-2
ビッグフット調査機関による
データベースを利用しています

00:27:30.617 --> 00:27:34.855 align:start position:30% line:-2
さらに詳細な目撃情報を
知りたい人のために

00:27:34.955 --> 00:27:39.726 align:start position:29% line:-2
データベースを見るための
IDも表示します

00:27:39.927 --> 00:27:45.566 align:start position:25% line:-2
これで 座標やその他の情報の
注釈を作る準備ができました

00:27:46.200 --> 00:27:51.472 align:start position:29% line:-2
目撃情報をマーカー注釈で
出す方法が分かったので

00:27:52.172 --> 00:27:54.975 align:start position:25% line:-1
用意した情報を表示しましょう

00:27:56.243 --> 00:27:58.612 align:start position:29% line:-1
この目撃情報のリストから

00:27:58.745 --> 00:28:01.381 align:start position:29% line:-1
それぞれの注釈を作ります

00:27:58.745 --> 00:28:01.381 align:start position:29% line:-1
それぞれの注釈を作ります

00:28:02.583 --> 00:28:03.684 align:start position:43% line:-1
そして―

00:28:04.384 --> 00:28:07.621 align:start position:27% line:-2
情報がマップに表示されるか
確認します

00:28:07.721 --> 00:28:11.225 align:start position:18% line:-2
注釈の表示も確認
さらに showItemsを使います

00:28:11.325 --> 00:28:17.464 align:start position:27% line:-2
表示だけでなく アイテムの
追加もできるので便利です

00:28:18.432 --> 00:28:20.100 align:start position:34% line:-1
ウェブサイトなので

00:28:20.200 --> 00:28:25.372 align:start position:27% line:-2
当該地域での目撃回数などの
補足情報も追加できます

00:28:26.507 --> 00:28:29.543 align:start position:29% line:-1
ここで しっかり保存して

00:28:30.510 --> 00:28:32.112 align:start position:32% line:-1
再読み込みしましょう

00:28:33.213 --> 00:28:36.417 align:start position:21% line:-1
60件の目撃情報が表示されました

00:28:36.583 --> 00:28:41.021 align:start position:32% line:-2
すべて目撃情報ですが
問題があります

00:28:41.121 --> 00:28:47.060 align:start position:23% line:-2
公園付近での目撃情報が多すぎて
注釈が重なっています

00:28:47.161 --> 00:28:50.497 align:start position:29% line:-2
拡大しても
ゴチャゴチャしているので

00:28:50.597 --> 00:28:54.334 align:start position:21% line:-2
displayPriorityで
スッキリさせましょう

00:28:54.434 --> 00:28:56.770 align:start position:32% line:-1
注釈のプロパティです

00:28:58.005 --> 00:29:02.843 align:start position:30% line:-2
優先順位を決めるために
とても重要なのは―

00:28:58.005 --> 00:29:02.843 align:start position:30% line:-2
優先順位を決めるために
とても重要なのは―

00:29:02.943 --> 00:29:05.546 align:start position:29% line:-1
目撃情報のプロパティです

00:29:05.746 --> 00:29:09.917 align:start position:21% line:-1
実際にビッグフットを目撃したのか

00:29:10.017 --> 00:29:13.887 align:start position:27% line:-1
音や足跡といった情報なのか

00:29:13.987 --> 00:29:18.058 align:start position:32% line:-2
このフラグで
優先順位を設定します

00:29:18.225 --> 00:29:22.095 align:start position:21% line:-2
displayPriorityは
任意の数字なので

00:29:22.196 --> 00:29:25.065 align:start position:27% line:-1
事前に定義した値を入れます

00:29:25.165 --> 00:29:28.969 align:start position:21% line:-1
例えば 常に表示するものもあれば

00:29:29.069 --> 00:29:31.638 align:start position:25% line:-1
優先順位の低いものもあります

00:29:31.738 --> 00:29:35.142 align:start position:34% line:-2
確かな目撃情報なら
優先順位は高く

00:29:35.242 --> 00:29:37.978 align:start position:36% line:-2
そうでない場合は
低く設定します

00:29:38.612 --> 00:29:42.750 align:start position:30% line:-2
ユーザにも
優先順位が分かるように

00:29:42.850 --> 00:29:47.554 align:start position:29% line:-2
最後に 注釈を色分けする
エンコードをします

00:29:47.688 --> 00:29:52.860 align:start position:30% line:-2
茶色なら確実な情報
緑なら不確かな情報です

00:29:53.160 --> 00:29:55.362 align:start position:27% line:-1
どうなったか見てみましょう

00:29:56.697 --> 00:29:59.399 align:start position:25% line:-1
重なった注釈が整理されたので

00:29:59.500 --> 00:30:02.436 align:start position:23% line:-1
マップがとてもスッキリしました

00:29:59.500 --> 00:30:02.436 align:start position:23% line:-1
マップがとてもスッキリしました

00:30:02.603 --> 00:30:06.340 align:start position:21% line:-1
茶色の注釈は 確実な目撃情報です

00:30:06.440 --> 00:30:10.944 align:start position:30% line:-2
まずは 茶色の地点から
訪れるべきでしょう

00:30:11.512 --> 00:30:17.551 align:start position:29% line:-2
マップを拡大していくと
隠れていた注釈が現れます

00:30:17.651 --> 00:30:20.988 align:start position:32% line:-2
つまり ユーザは
マップ上を巡りながら

00:30:21.088 --> 00:30:24.391 align:start position:34% line:-2
可能性のある場所を
確認できるのです

00:30:25.225 --> 00:30:28.228 align:start position:25% line:-1
このデモの最後に もう１つ―

00:30:28.929 --> 00:30:31.131 align:start position:32% line:-1
情報を追加しましょう

00:30:31.231 --> 00:30:32.766 align:start position:38% line:-1
注釈の記号を―

00:30:33.233 --> 00:30:38.205 align:start position:29% line:-2
ビッグフットのアイコンに
変更します

00:30:38.305 --> 00:30:40.073 align:start position:34% line:-1
このPNG画像を―

00:30:41.808 --> 00:30:44.144 align:start position:27% line:-1
確かな情報の注釈に使います

00:30:44.311 --> 00:30:48.081 align:start position:27% line:-1
不確かな目撃情報の注釈には

00:30:48.415 --> 00:30:53.554 align:start position:21% line:-2
分かりやすく
クエスチョンマークを使いましょう

00:30:55.055 --> 00:30:58.025 align:start position:32% line:-1
すると こうなります

00:30:58.559 --> 00:31:02.095 align:start position:34% line:-2
不確かな情報には
クエスチョンマーク

00:30:58.559 --> 00:31:02.095 align:start position:34% line:-2
不確かな情報には
クエスチョンマーク

00:31:02.229 --> 00:31:06.567 align:start position:27% line:-2
確かな情報には
ビッグフットのアイコンです

00:31:08.902 --> 00:31:11.438 align:start position:27% line:-1
１つめのデモはここまでです

00:31:11.839 --> 00:31:12.606 align:start position:43% line:-1
(拍手)

00:31:12.706 --> 00:31:13.407 align:start position:45% line:-1
どうも

00:31:13.507 --> 00:31:15.976 align:start position:43% line:-1
(拍手)

00:31:16.076 --> 00:31:18.779 align:start position:38% line:-1
今回のデモでは

00:31:18.879 --> 00:31:23.050 align:start position:16% line:-2
JavaScriptのオブジェクトから
注釈を作成

00:31:23.417 --> 00:31:27.721 align:start position:34% line:-2
優先順位をつけて
注釈を整理しました

00:31:28.155 --> 00:31:31.391 align:start position:25% line:-1
また 注釈に画像や文字を使い

00:31:31.492 --> 00:31:35.729 align:start position:32% line:-2
どんな情報かを
マップ上に示しました

00:31:37.264 --> 00:31:40.400 align:start position:29% line:-1
マーカー注釈は便利ですが

00:31:40.500 --> 00:31:43.837 align:start position:29% line:-2
マップ上で
使いにくい場合もあります

00:31:43.937 --> 00:31:48.509 align:start position:29% line:-2
例えば 複数の色の
会社のロゴを使いたくても

00:31:48.609 --> 00:31:53.080 align:start position:30% line:-2
記号で使える色は
１色に限定されています

00:31:53.313 --> 00:31:57.451 align:start position:27% line:-2
形だけで表現できないものも
ありますよね

00:31:57.551 --> 00:32:02.156 align:start position:32% line:-2
その場合 代わりに
注釈に画像を使います

00:31:57.551 --> 00:32:02.156 align:start position:32% line:-2
その場合 代わりに
注釈に画像を使います

00:32:02.256 --> 00:32:04.458 align:start position:27% line:-1
このマップでは 丸い画像で

00:32:04.691 --> 00:32:08.328 align:start position:36% line:-2
最近訪れた場所に
注釈をつけました

00:32:09.329 --> 00:32:12.099 align:start position:29% line:-1
使ったのはラスタ画像です

00:32:12.232 --> 00:32:17.604 align:start position:27% line:-2
先ほど同様 タイトルなどは
吹き出しの中に表示されます

00:32:17.805 --> 00:32:22.409 align:start position:25% line:-2
画像の場合も
マーカー注釈とほぼ同じですが

00:32:22.576 --> 00:32:27.014 align:start position:30% line:-2
画像のURLを
付け足す必要があります

00:32:27.181 --> 00:32:30.651 align:start position:32% line:-2
異なるピクセル比用の
２つのURLです

00:32:32.653 --> 00:32:37.958 align:start position:27% line:-2
注釈を出すもう１つの方法は
従来のピン型です

00:32:38.125 --> 00:32:41.428 align:start position:21% line:-1
ピンには さまざまな色が使えます

00:32:41.528 --> 00:32:47.401 align:start position:23% line:-2
問題はピンの色が増えれば
多くの画像が必要になることです

00:32:47.568 --> 00:32:50.571 align:start position:27% line:-1
これでは管理しきれないので

00:32:50.704 --> 00:32:52.906 align:start position:27% line:-1
カスタム注釈を使いましょう

00:32:53.006 --> 00:32:58.412 align:start position:25% line:-2
この場合 画像ではなく
DOM要素で注釈を表示します

00:33:00.080 --> 00:33:03.617 align:start position:23% line:-1
要素はオンデマンドで作られます

00:33:03.750 --> 00:33:04.852 align:start position:34% line:-1
例を見てみましょう

00:33:04.952 --> 00:33:10.991 align:start position:29% line:-2
マップ上のピンの色を
カスタマイズしたい場合―

00:33:11.592 --> 00:33:14.895 align:start position:21% line:-1
座標とオプションで注釈を作ります

00:33:14.995 --> 00:33:19.633 align:start position:32% line:-2
３つめのパラメータは
注釈のDOM要素です

00:33:19.833 --> 00:33:22.135 align:start position:25% line:-1
ここではキャンバス要素を作り

00:33:22.236 --> 00:33:24.638 align:start position:34% line:-1
コンテキストを取得

00:33:24.771 --> 00:33:26.807 align:start position:30% line:-1
キャンバスにピンを描き

00:33:27.207 --> 00:33:31.044 align:start position:32% line:-2
好みの色に変え
キャンバスに戻します

00:33:31.145 --> 00:33:35.015 align:start position:30% line:-2
マップ上のキャンバスは
こうなりました

00:33:37.551 --> 00:33:40.454 align:start position:30% line:-1
注釈は この３種類です

00:33:40.721 --> 00:33:44.558 align:start position:30% line:-2
しかし 時には
マップ上に複数の場所を

00:33:44.658 --> 00:33:47.060 align:start position:29% line:-1
示したい時もありますよね

00:33:47.161 --> 00:33:51.098 align:start position:32% line:-2
エリア全体の表示が
必要なこともあります

00:33:51.698 --> 00:33:56.370 align:start position:30% line:-2
そんな時は ３種類の
オーバーレイが使えます

00:33:56.603 --> 00:33:59.640 align:start position:25% line:-1
使い方の例をお見せしましょう

00:34:00.274 --> 00:34:05.212 align:start position:29% line:-2
円のオーバーレイを使うと
中心からの距離を示せます

00:34:05.312 --> 00:34:08.447 align:start position:25% line:-1
経路ならポリラインで示せます

00:34:08.681 --> 00:34:13.286 align:start position:32% line:-2
また ポリゴンの
オーバーレイを使えば

00:34:13.387 --> 00:34:18.025 align:start position:23% line:-1
国や市などの境界を表示できます

00:34:19.326 --> 00:34:22.062 align:start position:25% line:-1
こちらは円のオーバーレイです

00:34:22.329 --> 00:34:24.063 align:start position:34% line:-1
場所はブリュッセル

00:34:24.164 --> 00:34:27.234 align:start position:29% line:-1
小便小僧を中心にしました

00:34:27.801 --> 00:34:33.273 align:start position:30% line:-2
ここは市の中心で
散歩にも適した場所です

00:34:33.440 --> 00:34:37.177 align:start position:34% line:-2
この場所を中心に
同心円を描くことで

00:34:37.277 --> 00:34:41.215 align:start position:32% line:-2
ウォーキングの距離の
目安になります

00:34:41.380 --> 00:34:44.551 align:start position:34% line:-2
そこで座標を基に
オーバーレイを作り

00:34:44.650 --> 00:34:49.922 align:start position:29% line:-2
２つめのパラメータとして
メートル単位の範囲を指定

00:34:50.056 --> 00:34:54.027 align:start position:25% line:-2
ここでは400メートルごとに
表示したので

00:34:54.127 --> 00:34:57.197 align:start position:23% line:-2
400メートル 800メートル
という具合です

00:34:57.598 --> 00:35:01.869 align:start position:32% line:-2
右側を見ると
漫画博物館があります

00:34:57.598 --> 00:35:01.869 align:start position:32% line:-2
右側を見ると
漫画博物館があります

00:35:01.969 --> 00:35:04.171 align:start position:38% line:-1
面白そうですね

00:35:04.271 --> 00:35:08.842 align:start position:27% line:-2
1200メートルから
1600メートルの間なので

00:35:08.942 --> 00:35:10.944 align:start position:32% line:-1
徒歩15分弱でしょう

00:35:11.979 --> 00:35:15.449 align:start position:29% line:-2
オーバーレイで大切なのは
スタイルです

00:35:16.016 --> 00:35:19.453 align:start position:25% line:-1
このオーバーレイを出すために

00:35:19.553 --> 00:35:21.722 align:start position:23% line:-2
MapKitの
スタイルオブジェクトが使えます

00:35:21.989 --> 00:35:27.294 align:start position:30% line:-2
線の幅や長さ 色などの
プロパティがあり

00:35:27.394 --> 00:35:29.663 align:start position:29% line:-1
CSSの色を指定できます

00:35:29.797 --> 00:35:34.968 align:start position:27% line:-2
初期設定では
円のオーバーレイは青ですが

00:35:35.068 --> 00:35:39.707 align:start position:18% line:-2
透明にしたいので
塗りつぶしの色は nullにしました

00:35:41.375 --> 00:35:45.345 align:start position:34% line:-2
さて 漫画博物館に
行くことにしました

00:35:45.512 --> 00:35:49.917 align:start position:27% line:-2
MapKit JSを使うと
徒歩と車の場合の

00:35:50.050 --> 00:35:52.452 align:start position:29% line:-1
２地点の経路が分かります

00:35:52.653 --> 00:35:58.525 align:start position:23% line:-2
今回は小便小僧から目的地までの
経路を尋ねました

00:35:58.892 --> 00:36:03.530 align:start position:29% line:-2
結果は ポリラインの
オーバーレイで示されます

00:35:58.892 --> 00:36:03.530 align:start position:29% line:-2
結果は ポリラインの
オーバーレイで示されます

00:36:03.630 --> 00:36:09.169 align:start position:25% line:-2
この線は 座標の情報に基づき
点をつないだものです

00:36:09.269 --> 00:36:13.006 align:start position:14% line:-2
スタイルは
strokeOpacityで設定できます

00:36:13.106 --> 00:36:16.743 align:start position:27% line:-2
目立つように
線を太くすることも可能です

00:36:18.378 --> 00:36:20.514 align:start position:30% line:-1
最後の例は ポリゴンで

00:36:20.614 --> 00:36:23.317 align:start position:29% line:-1
データの可視化に有効です

00:36:23.417 --> 00:36:28.355 align:start position:21% line:-2
これはアメリカで
各州がオーバーレイになっています

00:36:28.455 --> 00:36:33.560 align:start position:27% line:-2
こちらも点を結んで
ポリゴンを定義していますが

00:36:33.660 --> 00:36:36.597 align:start position:25% line:-1
今回は中を塗りつぶしています

00:36:37.998 --> 00:36:42.369 align:start position:34% line:-2
もっと複雑なものも
点で指定できます

00:36:42.469 --> 00:36:48.242 align:start position:27% line:-2
実際 地理的によく存在する
飛び地などの情報です

00:36:48.809 --> 00:36:51.511 align:start position:32% line:-1
注釈もオーバーレイも

00:36:51.612 --> 00:36:56.149 align:start position:32% line:-2
データのプロパティに
情報を追加できます

00:36:56.383 --> 00:37:01.488 align:start position:21% line:-2
例えば アメリカの州ごとの人口を
表示しましょう

00:36:56.383 --> 00:37:01.488 align:start position:21% line:-2
例えば アメリカの州ごとの人口を
表示しましょう

00:37:01.588 --> 00:37:03.357 align:start position:36% line:-1
まず 色を見ると

00:37:03.991 --> 00:37:06.460 align:start position:27% line:-1
おおよその人口が分かります

00:37:06.560 --> 00:37:09.029 align:start position:30% line:-1
データの追加も可能です

00:37:09.129 --> 00:37:12.733 align:start position:32% line:-2
ユーザが
オーバーレイの中から

00:37:12.833 --> 00:37:14.635 align:start position:34% line:-1
テキサス州を選ぶと

00:37:14.835 --> 00:37:19.173 align:start position:27% line:-2
人口が2000万人以上だと
分かります

00:37:20.007 --> 00:37:22.810 align:start position:27% line:-2
注釈と同様
オーバーレイも選択できます

00:37:26.146 --> 00:37:31.285 align:start position:25% line:-2
先ほどのような
道順や州の情報を表示するには

00:37:31.385 --> 00:37:33.554 align:start position:27% line:-1
膨大なデータと点が必要です

00:37:33.654 --> 00:37:37.091 align:start position:21% line:-1
アメリカには 膨大な点があるので

00:37:37.791 --> 00:37:42.162 align:start position:23% line:-2
各種データは
GeoJSONから取り込みます

00:37:42.262 --> 00:37:47.034 align:start position:18% line:-2
データファイルを
MapKit JSに自動で取り込むと

00:37:47.167 --> 00:37:49.369 align:start position:23% line:-1
注釈やオーバーレイが作られます

00:37:49.469 --> 00:37:52.439 align:start position:27% line:-1
こちらは別のデータファイル

00:37:52.539 --> 00:37:55.976 align:start position:23% line:-1
UFOの目撃情報が入っています

00:37:56.176 --> 00:38:01.415 align:start position:25% line:-2
マップの詳細を見ると
目撃情報がたくさんありますね

00:37:56.176 --> 00:38:01.415 align:start position:25% line:-2
マップの詳細を見ると
目撃情報がたくさんありますね

00:38:02.316 --> 00:38:05.652 align:start position:32% line:-2
注釈とオーバーレイは
自動で作られますが

00:38:05.752 --> 00:38:09.623 align:start position:30% line:-2
デリゲートメソッドで
カスタマイズも可能です

00:38:11.458 --> 00:38:17.431 align:start position:25% line:-2
注釈とオーバーレイは
ユーザによって選択されるので

00:38:17.631 --> 00:38:21.535 align:start position:29% line:-2
ユーザからも
情報を得ることができます

00:38:21.769 --> 00:38:24.204 align:start position:30% line:-1
イベントの選択を確認し

00:38:24.304 --> 00:38:29.243 align:start position:29% line:-2
注釈がドラッグされるのも
確認できます

00:38:29.343 --> 00:38:32.446 align:start position:21% line:-2
使用するのは
addEventListener

00:38:32.546 --> 00:38:37.918 align:start position:14% line:-2
addEventListenerを使えば
注釈とオーバーレイが

00:38:38.018 --> 00:38:42.089 align:start position:23% line:-1
いつ選択されたのかが分かります

00:38:42.256 --> 00:38:44.458 align:start position:27% line:-1
そのデモをお見せしましょう

00:38:45.959 --> 00:38:49.596 align:start position:27% line:-2
次は質の高い
インタラクションの提供です

00:38:49.697 --> 00:38:52.666 align:start position:23% line:-1
ここからはメロディが担当します

00:38:53.200 --> 00:38:58.138 align:start position:43% line:-1
(拍手)

00:39:05.512 --> 00:39:08.949 align:start position:25% line:-2
MapKit JSでは
３つのサービスが利用できます

00:39:09.049 --> 00:39:11.819 align:start position:21% line:-1
ジオコーディング 検索 経路です

00:39:12.186 --> 00:39:16.990 align:start position:27% line:-2
１つずつ説明しますが
まず共通点を紹介しましょう

00:39:18.392 --> 00:39:22.029 align:start position:21% line:-1
どれも簡単な４ステップで使えます

00:39:22.396 --> 00:39:24.565 align:start position:21% line:-1
まず サービスオブジェクトを作り

00:39:24.965 --> 00:39:27.768 align:start position:21% line:-1
次にパラメータとオプションを指定

00:39:28.235 --> 00:39:29.603 align:start position:34% line:-1
そして リクエスト

00:39:30.037 --> 00:39:33.907 align:start position:27% line:-2
最後にコールバックで
非同期レスポンスを扱います

00:39:34.475 --> 00:39:36.810 align:start position:30% line:-1
まずは ジオコーダです

00:39:38.378 --> 00:39:42.249 align:start position:32% line:-2
ジオコーダを使う際の
２つの方法は

00:39:42.616 --> 00:39:44.251 align:start position:25% line:-1
ルックアップと逆ルックアップ

00:39:44.485 --> 00:39:48.822 align:start position:30% line:-2
住所などが分かっていて
座標を探す方法と

00:39:48.922 --> 00:39:52.292 align:start position:27% line:-2
その反対で
座標から住所を探す方法です

00:39:53.861 --> 00:39:56.196 align:start position:25% line:-1
まずはオブジェクトを作ります

00:39:57.564 --> 00:40:01.368 align:start position:20% line:-2
getsUserLocationの
パラメータで提供し

00:39:57.564 --> 00:40:01.368 align:start position:20% line:-2
getsUserLocationの
パラメータで提供し

00:40:01.568 --> 00:40:05.038 align:start position:27% line:-2
ジオコーダに
コンテキストを追加できます

00:40:05.239 --> 00:40:10.144 align:start position:23% line:-2
これは 同じ地名が
複数の地域にある場合に便利です

00:40:10.544 --> 00:40:13.213 align:start position:23% line:-1
ここで ブリスベンを検索すると

00:40:13.313 --> 00:40:18.385 align:start position:23% line:-2
カリフォルニア州の
ブリスベンが出るのがその例です

00:40:19.820 --> 00:40:21.655 align:start position:29% line:-1
次にリクエストを作ります

00:40:21.755 --> 00:40:23.657 align:start position:34% line:-1
使うのは この会場

00:40:25.058 --> 00:40:26.960 align:start position:30% line:-1
レスポンスを処理します

00:40:27.394 --> 00:40:32.566 align:start position:27% line:-2
ジオコーダを使うと
簡単に注釈を設定できるので

00:40:32.666 --> 00:40:35.269 align:start position:27% line:-1
マップに追加してみましょう

00:40:37.738 --> 00:40:40.641 align:start position:34% line:-2
逆ルックアップでは
座標から―

00:40:40.741 --> 00:40:44.044 align:start position:29% line:-1
その場所の住所を調べます

00:40:46.013 --> 00:40:47.614 align:start position:36% line:-1
これがジオコーダ

00:40:47.714 --> 00:40:50.951 align:start position:25% line:-1
次はサービスコンテキストです

00:40:51.118 --> 00:40:55.022 align:start position:21% line:-2
getsUserLocation
パラメータに加えて

00:40:55.122 --> 00:40:58.258 align:start position:29% line:-1
検索する座標と地域も提供

00:40:58.725 --> 00:41:02.296 align:start position:30% line:-2
これにより適切な結果が
表示されます

00:40:58.725 --> 00:41:02.296 align:start position:30% line:-2
これにより適切な結果が
表示されます

00:41:02.462 --> 00:41:07.834 align:start position:27% line:-2
複数の場所に
同じ地名がある場合に有効で

00:41:07.935 --> 00:41:10.938 align:start position:23% line:-1
ユーザに近い結果を提供できます

00:41:13.073 --> 00:41:16.009 align:start position:29% line:-1
検索サービスは 例えば―

00:41:16.510 --> 00:41:19.646 align:start position:25% line:-1
最寄りのカフェを探すなどです

00:41:20.714 --> 00:41:23.350 align:start position:21% line:-1
まず サービスオブジェクトを作成

00:41:24.885 --> 00:41:28.855 align:start position:27% line:-2
“コーヒー”などのクエリで
リクエストを構築します

00:41:28.956 --> 00:41:33.560 align:start position:30% line:-2
特定のカフェなどを
設定することもできます

00:41:35.896 --> 00:41:37.564 align:start position:36% line:-1
そして結果を処理

00:41:38.832 --> 00:41:44.338 align:start position:27% line:-2
複数の結果も 注釈を使って
簡単に表示できます

00:41:44.438 --> 00:41:49.209 align:start position:25% line:-2
そして座標とタイトルの情報を
注釈に入れられます

00:41:50.978 --> 00:41:56.383 align:start position:27% line:-2
最後にshowItemsで
注釈を追加し 表示できます

00:41:58.418 --> 00:42:02.456 align:start position:23% line:-2
リクエストへの全クエリがあれば
これは有用です

00:41:58.418 --> 00:42:02.456 align:start position:23% line:-2
リクエストへの全クエリがあれば
これは有用です

00:42:02.556 --> 00:42:05.959 align:start position:36% line:-2
また 検索バーに
入力させる場合は

00:42:06.060 --> 00:42:08.362 align:start position:21% line:-1
検索オートコンプリートが使えます

00:42:09.429 --> 00:42:13.400 align:start position:27% line:-2
検索オートコンプリートでは
クエリの一部を

00:42:13.500 --> 00:42:15.469 align:start position:30% line:-1
表示することができます

00:42:15.569 --> 00:42:18.372 align:start position:25% line:-1
入力に合わせて候補が出るので

00:42:18.472 --> 00:42:20.908 align:start position:32% line:-1
検索を効率化できます

00:42:23.277 --> 00:42:25.279 align:start position:36% line:-1
最後は 経路です

00:42:26.780 --> 00:42:31.084 align:start position:34% line:-2
他のサービスと同様
オブジェクトを作成

00:42:31.919 --> 00:42:37.558 align:start position:27% line:-2
言語を指定すると
その言語で道順を提示します

00:42:38.859 --> 00:42:44.131 align:start position:23% line:-2
言語を指定しない場合は
MapKitの設定言語が使われ

00:42:44.264 --> 00:42:48.202 align:start position:27% line:-2
それもない場合は
ブラウザの言語が使われます

00:42:49.870 --> 00:42:54.675 align:start position:25% line:-2
そして始点と目的地を入力して
道順をリクエストします

00:42:54.908 --> 00:42:58.312 align:start position:32% line:-2
座標 住所
または場所の名前です

00:43:00.047 --> 00:43:02.916 align:start position:25% line:-1
初期設定では交通手段は車です

00:43:03.016 --> 00:43:06.987 align:start position:27% line:-2
これを徒歩に変更することも
可能ですが

00:43:07.121 --> 00:43:09.656 align:start position:25% line:-1
遠すぎるので今回は使いません

00:43:10.057 --> 00:43:12.426 align:start position:25% line:-1
代替経路をリクエストすると―

00:43:12.559 --> 00:43:15.529 align:start position:27% line:-1
複数の選択肢を提示できます

00:43:15.629 --> 00:43:20.868 align:start position:27% line:-2
最適な経路の他にも
別の経路を表示できるのです

00:43:22.703 --> 00:43:26.273 align:start position:23% line:-1
そしてマップに結果を表示します

00:43:26.373 --> 00:43:29.343 align:start position:27% line:-2
ポリラインのオーバーレイが
見えますね

00:43:29.443 --> 00:43:34.014 align:start position:27% line:-2
他の経路の距離と所要時間も
表示されています

00:43:34.114 --> 00:43:38.552 align:start position:30% line:-2
概要が分かったところで
ジュリアンに交代します

00:43:40.087 --> 00:43:42.522 align:start position:43% line:-1
(拍手)

00:43:45.325 --> 00:43:46.593 align:start position:41% line:-1
ありがとう

00:43:46.760 --> 00:43:48.996 align:start position:32% line:-1
では 先ほどの続きで

00:43:49.296 --> 00:43:52.599 align:start position:27% line:-2
ビッグフット探査用マップを
作りましょう

00:43:53.667 --> 00:43:58.272 align:start position:29% line:-2
このマップには １つ
欠けているものがあります

00:43:58.372 --> 00:44:01.542 align:start position:30% line:-1
自分の現在地も分かるし

00:43:58.372 --> 00:44:01.542 align:start position:30% line:-1
自分の現在地も分かるし

00:44:02.042 --> 00:44:04.578 align:start position:23% line:-1
ビッグフットの場所も分かります

00:44:04.678 --> 00:44:06.747 align:start position:29% line:-1
でも 道順が分かりません

00:44:07.514 --> 00:44:09.850 align:start position:25% line:-1
そこで 経路を追加しましょう

00:44:10.317 --> 00:44:14.188 align:start position:27% line:-2
現在地のマッケナリー･
コンベンションセンターから

00:44:14.555 --> 00:44:17.391 align:start position:25% line:-1
ビッグフットの居場所までです

00:44:17.491 --> 00:44:21.128 align:start position:32% line:-2
MapKit JSの
経路サービスを使い―

00:44:21.228 --> 00:44:23.597 align:start position:27% line:-2
ポリラインのオーバーレイを
描きます

00:44:24.298 --> 00:44:29.136 align:start position:30% line:-2
しかし その前に
やるべきことがあります

00:44:29.236 --> 00:44:35.008 align:start position:21% line:-2
まず ユーザがどこに行きたいのか
確認が必要です

00:44:35.809 --> 00:44:40.314 align:start position:27% line:-2
さて ユーザが
行きたい場所を選択しました

00:44:40.414 --> 00:44:42.249 align:start position:34% line:-1
そこで こうします

00:44:42.349 --> 00:44:45.986 align:start position:11% line:-2
selectEventListenerを使い
ユーザが―

00:44:46.120 --> 00:44:49.556 align:start position:21% line:-1
どの注釈を選択したのか確認します

00:44:49.690 --> 00:44:51.859 align:start position:34% line:-1
注釈が選択されたら

00:44:51.959 --> 00:44:56.296 align:start position:29% line:-2
その場所への道順に
関心があるということです

00:44:56.396 --> 00:45:01.602 align:start position:25% line:-2
それで経路をリクエストし
道順が分かるように提示します

00:44:56.396 --> 00:45:01.602 align:start position:25% line:-2
それで経路をリクエストし
道順が分かるように提示します

00:45:01.702 --> 00:45:05.205 align:start position:30% line:-2
あとは ユーザに経路を
選んでもらいます

00:45:05.305 --> 00:45:09.576 align:start position:25% line:-1
経路サービスが返した選択肢を

00:45:09.710 --> 00:45:12.913 align:start position:21% line:-1
各ルートの詳細とともに提示します

00:45:13.247 --> 00:45:16.650 align:start position:20% line:-2
まずはeventListenerを
設定しましょう

00:45:17.618 --> 00:45:20.320 align:start position:29% line:-1
マップから選択情報を確認

00:45:20.554 --> 00:45:24.491 align:start position:27% line:-2
注釈やオーバーレイの選択を
把握します

00:45:24.758 --> 00:45:28.028 align:start position:27% line:-2
これが受け取ったイベントの
プロパティです

00:45:28.128 --> 00:45:32.466 align:start position:30% line:-2
ifに値があれば
注釈は選択されています

00:45:32.566 --> 00:45:37.337 align:start position:20% line:-2
MapKitで一度に選ばれる注釈は
１つだけなので

00:45:37.438 --> 00:45:39.039 align:start position:32% line:-1
曖昧さは ありません

00:45:39.139 --> 00:45:41.041 align:start position:30% line:-1
これが行きたい場所です

00:45:41.141 --> 00:45:43.977 align:start position:27% line:-1
注釈への経路を示しましょう

00:45:46.580 --> 00:45:49.316 align:start position:29% line:-1
マップ上に経路を描きます

00:45:49.449 --> 00:45:52.186 align:start position:23% line:-1
ポリラインのオーバーレイを使い

00:45:52.286 --> 00:45:54.621 align:start position:30% line:-1
マップに経路を描きます

00:45:54.888 --> 00:45:59.159 align:start position:32% line:-2
まず 全経路で使う
スタイルを定義します

00:45:59.326 --> 00:46:03.197 align:start position:30% line:-2
目立つように
不透過率や線の幅を設定

00:45:59.326 --> 00:46:03.197 align:start position:30% line:-2
目立つように
不透過率や線の幅を設定

00:46:03.297 --> 00:46:08.001 align:start position:32% line:-2
今回は初期設定の青を
そのまま使います

00:46:08.435 --> 00:46:13.874 align:start position:21% line:-2
オブジェクト用に
オンデマンドの注釈を作ったように

00:46:13.974 --> 00:46:16.610 align:start position:23% line:-1
経路用のオーバーレイを作ります

00:46:17.044 --> 00:46:22.216 align:start position:25% line:-2
MapKitの経路サービスが
提供する情報には

00:46:22.416 --> 00:46:25.886 align:start position:27% line:-1
さまざまなものが含まれます

00:46:26.020 --> 00:46:30.657 align:start position:30% line:-2
Ａ地点からＢ地点までの
道順のリストがあり

00:46:30.824 --> 00:46:34.495 align:start position:30% line:-2
それぞれに点のリストが
含まれています

00:46:35.396 --> 00:46:39.299 align:start position:27% line:-2
線のオーバーレイには
点のリストが必要でしたよね

00:46:39.399 --> 00:46:43.604 align:start position:29% line:-2
点のリストが複数あるので
１つに絞り

00:46:43.704 --> 00:46:47.474 align:start position:25% line:-1
経路を順番に１つずつ作ります

00:46:48.108 --> 00:46:51.678 align:start position:23% line:-1
このリストを使って線を描きます

00:46:51.779 --> 00:46:57.051 align:start position:29% line:-2
オーバーレイのスタイルは
先ほど定義したものです

00:46:57.518 --> 00:47:02.189 align:start position:29% line:-2
ユーザが選択すると
詳細な情報が表示されます

00:46:57.518 --> 00:47:02.189 align:start position:29% line:-2
ユーザが選択すると
詳細な情報が表示されます

00:47:02.289 --> 00:47:06.360 align:start position:30% line:-2
経路のオブジェクトを
データプロパティに入れ

00:47:06.460 --> 00:47:10.397 align:start position:21% line:-1
移動にかかる時間の予測を示します

00:47:11.732 --> 00:47:13.333 align:start position:30% line:-1
オーバーレイを描くため

00:47:13.434 --> 00:47:17.438 align:start position:29% line:-2
サービスからリクエストを
出す必要があります

00:47:17.905 --> 00:47:19.673 align:start position:38% line:-1
こんな感じです

00:47:21.341 --> 00:47:23.911 align:start position:25% line:-1
やや長めですが いいでしょう

00:47:24.077 --> 00:47:26.513 align:start position:29% line:-1
経路のオブジェクトを作成

00:47:26.613 --> 00:47:31.885 align:start position:27% line:-2
現在の言語で経路を示すので
初期設定のままにします

00:47:32.986 --> 00:47:36.723 align:start position:25% line:-1
では 特定の注釈までの道順を

00:47:36.823 --> 00:47:39.526 align:start position:21% line:-1
いくつか示すようリクエストします

00:47:39.760 --> 00:47:44.832 align:start position:30% line:-2
その前に 先ほど出した
経路を消しましょう

00:47:45.032 --> 00:47:48.502 align:start position:21% line:-1
オーバーレイのプロパティを見ると

00:47:48.602 --> 00:47:52.172 align:start position:34% line:-2
どのオーバーレイを
表示中か分かります

00:47:52.272 --> 00:47:55.108 align:start position:18% line:-2
それをremoveOverlaysで
削除します

00:47:55.208 --> 00:47:59.179 align:start position:21% line:-1
では 新しい経路を表示しましょう

00:47:59.747 --> 00:48:01.949 align:start position:29% line:-1
まず始点のリクエストです

00:47:59.747 --> 00:48:01.949 align:start position:29% line:-1
まず始点のリクエストです

00:48:02.049 --> 00:48:05.385 align:start position:30% line:-2
始点はマッケナリー･
コンベンションセンター

00:48:05.486 --> 00:48:09.022 align:start position:29% line:-1
座標での指定も可能ですが

00:48:09.123 --> 00:48:12.092 align:start position:27% line:-1
場所の名前の方が簡単ですね

00:48:12.493 --> 00:48:15.396 align:start position:23% line:-1
目的地については座標を入れます

00:48:15.496 --> 00:48:19.133 align:start position:27% line:-1
注釈の座標のパラメータです

00:48:19.800 --> 00:48:23.704 align:start position:27% line:-2
経路は すべては無理ですが
いくつか―

00:48:23.804 --> 00:48:27.041 align:start position:27% line:-1
可能な経路を表示しましょう

00:48:27.141 --> 00:48:31.145 align:start position:9% line:-2
requestAlternateRoutesを
trueにします

00:48:32.312 --> 00:48:34.381 align:start position:30% line:-1
リクエストを作れたので

00:48:35.015 --> 00:48:39.453 align:start position:27% line:-2
routeで経路サービスを
実行できます

00:48:42.623 --> 00:48:45.225 align:start position:29% line:-1
クエリで失敗も起きるので

00:48:45.325 --> 00:48:49.329 align:start position:34% line:-2
エラーが出た場合の
対策も必要です

00:48:49.429 --> 00:48:53.333 align:start position:27% line:-1
この場合 初期設定の経路の

00:48:53.434 --> 00:48:55.369 align:start position:32% line:-1
直線が出てしまいます

00:48:55.469 --> 00:48:57.871 align:start position:30% line:-1
直線が出てはいけません

00:48:59.840 --> 00:49:05.312 align:start position:23% line:-2
とりあえず うまくいった場合を
見てみましょう

00:48:59.840 --> 00:49:05.312 align:start position:23% line:-2
とりあえず うまくいった場合を
見てみましょう

00:49:05.412 --> 00:49:08.215 align:start position:30% line:-1
経路のリストに基づいて

00:49:08.315 --> 00:49:12.219 align:start position:27% line:-2
それぞれ
線のオーバーレイを出します

00:49:12.920 --> 00:49:17.491 align:start position:27% line:-2
マップに経路を表示するには
showItemsを使い

00:49:17.591 --> 00:49:21.428 align:start position:29% line:-2
経路全体が含まれるように
地域を設定します

00:49:21.829 --> 00:49:26.433 align:start position:25% line:-2
さらにいくつかの
オプションをご紹介しましょう

00:49:26.533 --> 00:49:27.901 align:start position:29% line:-1
１つはアニメーションです

00:49:28.035 --> 00:49:33.540 align:start position:25% line:-2
今 表示されているマップから
経路表示に変える際

00:49:33.640 --> 00:49:37.344 align:start position:25% line:-1
スムーズに移行したいですよね

00:49:38.479 --> 00:49:42.015 align:start position:32% line:-2
また 余計な場所まで
含めないように

00:49:42.115 --> 00:49:45.652 align:start position:21% line:-1
周辺に余白を加える場合もあります

00:49:46.854 --> 00:49:48.222 align:start position:36% line:-1
さて できました

00:49:49.590 --> 00:49:54.828 align:start position:29% line:-2
この会場から注釈までの
経路をリクエストするため

00:49:54.928 --> 00:49:56.730 align:start position:32% line:-1
これを選択しましょう

00:49:57.764 --> 00:50:02.202 align:start position:29% line:-2
注釈を選んだので
リクエストが行われました

00:49:57.764 --> 00:50:02.202 align:start position:29% line:-2
注釈を選んだので
リクエストが行われました

00:50:03.136 --> 00:50:05.205 align:start position:34% line:-1
示された経路は３つ

00:50:05.305 --> 00:50:08.942 align:start position:32% line:-2
途中までは同じですが
最後が違っています

00:50:09.209 --> 00:50:13.414 align:start position:23% line:-2
始点は
このコンベンションセンターです

00:50:13.514 --> 00:50:14.815 align:start position:38% line:-1
合っていますね

00:50:14.915 --> 00:50:16.450 align:start position:38% line:-1
大丈夫そうです

00:50:17.384 --> 00:50:19.620 align:start position:34% line:-1
経路が３つあります

00:50:19.853 --> 00:50:23.223 align:start position:34% line:-2
ここで知りたいのは
それぞれの経路の

00:50:23.323 --> 00:50:25.726 align:start position:30% line:-1
所要時間と距離の差です

00:50:25.826 --> 00:50:30.531 align:start position:30% line:-2
確認したいところですが
経路を選択しても

00:50:30.631 --> 00:50:35.402 align:start position:23% line:-2
一度に１つしか選択できないので
選択が解除されます

00:50:35.502 --> 00:50:38.672 align:start position:30% line:-2
問題は オーバーレイが
選択された時の―

00:50:39.073 --> 00:50:41.742 align:start position:25% line:-1
動作が決まっていないことです

00:50:42.109 --> 00:50:43.610 align:start position:34% line:-1
これを決めましょう

00:50:43.777 --> 00:50:48.816 align:start position:25% line:-2
注釈をハイライトし
サイドバーに情報を表示します

00:50:49.583 --> 00:50:52.152 align:start position:30% line:-2
オーバーレイを
ハイライトするために―

00:50:52.486 --> 00:50:58.058 align:start position:23% line:-2
ハイライト時のスタイルを作って
ここに入れましょう

00:50:58.625 --> 00:51:00.394 align:start position:30% line:-1
古いスタイルも入れます

00:50:58.625 --> 00:51:00.394 align:start position:30% line:-1
古いスタイルも入れます

00:51:00.494 --> 00:51:02.629 align:start position:32% line:-1
不透過率は同じままで

00:51:02.729 --> 00:51:08.001 align:start position:30% line:-2
他よりも目立つように
線の色を紫に設定します

00:51:09.937 --> 00:51:13.841 align:start position:25% line:-2
これを選択時のオーバーレイに
適用しますが

00:51:14.208 --> 00:51:19.313 align:start position:23% line:-2
すでに選択の
イベントハンドラがありますよね

00:51:20.848 --> 00:51:26.320 align:start position:27% line:-2
ここまでは注釈の
選択だけを確認してきました

00:51:26.420 --> 00:51:31.358 align:start position:29% line:-2
しかし 今度はこの関数を
追加することができます

00:51:36.630 --> 00:51:40.234 align:start position:30% line:-2
注釈が選択された場合は
同じですが

00:51:40.334 --> 00:51:46.206 align:start position:25% line:-2
オーバーレイが選択された時は
定義したスタイルに変更します

00:51:46.306 --> 00:51:48.976 align:start position:32% line:-1
つまりハイライトです

00:51:49.743 --> 00:51:51.411 align:start position:38% line:-1
見てみましょう

00:51:55.482 --> 00:51:57.551 align:start position:38% line:-1
他を選択します

00:51:58.052 --> 00:51:58.919 align:start position:43% line:-1
よかった

00:52:00.587 --> 00:52:04.558 align:start position:27% line:-2
リストから
経路が複数提示されるので―

00:52:05.526 --> 00:52:09.496 align:start position:30% line:-2
そこから経路を
選べることがわかります

00:52:09.596 --> 00:52:11.865 align:start position:30% line:-1
まだ表示はしていません

00:52:12.099 --> 00:52:14.368 align:start position:27% line:-1
別の経路を選んでみましょう

00:52:14.568 --> 00:52:19.139 align:start position:25% line:-2
初期設定では オーバーレイを
選んでも何も起こらず

00:52:19.239 --> 00:52:22.042 align:start position:36% line:-2
選択を解除しても
何も起きません

00:52:22.142 --> 00:52:25.612 align:start position:25% line:-1
この部分も動作指定が必要です

00:52:27.314 --> 00:52:28.615 align:start position:38% line:-1
では ここで―

00:52:28.982 --> 00:52:33.821 align:start position:27% line:-2
選択解除時の
イベントリスナを追加します

00:52:34.121 --> 00:52:36.223 align:start position:34% line:-1
選択が解除されたら

00:52:36.623 --> 00:52:39.526 align:start position:25% line:-1
初期設定のスタイルに戻します

00:52:41.328 --> 00:52:42.663 align:start position:38% line:-1
これで問題が―

00:52:43.564 --> 00:52:44.731 align:start position:39% line:-1
解消されます

00:52:45.699 --> 00:52:47.000 align:start position:38% line:-1
では もう一度

00:52:47.234 --> 00:52:49.136 align:start position:32% line:-1
ここに経路があります

00:52:49.336 --> 00:52:54.274 align:start position:23% line:-2
同じ場所を選ぶと
オーバーレイが重なっているので

00:52:54.375 --> 00:52:56.510 align:start position:25% line:-1
別のオーバーレイが選ばれます

00:52:56.810 --> 00:53:02.716 align:start position:27% line:-2
選択解除のハンドラが働き
前のハイライトが消えました

00:52:56.810 --> 00:53:02.716 align:start position:27% line:-2
選択解除のハンドラが働き
前のハイライトが消えました

00:53:02.816 --> 00:53:06.820 align:start position:32% line:-2
そして 新しい選択が
表示されています

00:53:06.987 --> 00:53:09.223 align:start position:34% line:-1
ちゃんと動きますね

00:53:10.023 --> 00:53:11.792 align:start position:36% line:-1
もう１つの例です

00:53:12.793 --> 00:53:15.262 align:start position:27% line:-1
今度は 詳細情報を求めて―

00:53:16.830 --> 00:53:18.465 align:start position:30% line:-1
こちらの経路を選びます

00:53:18.565 --> 00:53:21.869 align:start position:36% line:-2
知りたいのは
経路や所要時間―

00:53:21.969 --> 00:53:24.738 align:start position:27% line:-1
そして 経路の比較情報です

00:53:25.439 --> 00:53:28.809 align:start position:30% line:-1
これは とても簡単です

00:53:28.909 --> 00:53:32.513 align:start position:21% line:-1
知りたい情報がすべてあるからです

00:53:32.613 --> 00:53:36.517 align:start position:32% line:-2
オーバーレイに
データを格納しており

00:53:36.617 --> 00:53:39.520 align:start position:34% line:-2
選択･非選択時の
動作も決めています

00:53:39.620 --> 00:53:41.555 align:start position:27% line:-1
オーバーレイが選択されたら

00:53:41.655 --> 00:53:44.024 align:start position:34% line:-1
データを表示します

00:53:46.060 --> 00:53:47.494 align:start position:36% line:-1
場所はサイドバー

00:53:48.796 --> 00:53:50.264 align:start position:38% line:-1
基本の動きです

00:53:50.364 --> 00:53:53.834 align:start position:23% line:-1
HTMLのフォーマットにして―

00:53:53.934 --> 00:53:59.606 align:start position:23% line:-2
ウェブサイトに組み込む仕組みも
整っています

00:53:59.807 --> 00:54:04.211 align:start position:30% line:-2
データはオーバーレイと
連携していて

00:53:59.807 --> 00:54:04.211 align:start position:30% line:-2
データはオーバーレイと
連携していて

00:54:04.344 --> 00:54:06.980 align:start position:30% line:-1
選択すると表示されます

00:54:07.448 --> 00:54:09.950 align:start position:32% line:-1
注意すべきことが１つ

00:54:10.050 --> 00:54:13.554 align:start position:23% line:-1
複数の経路が表示されないように

00:54:13.654 --> 00:54:16.823 align:start position:27% line:-1
選択解除でデータを隠します

00:54:18.358 --> 00:54:19.660 align:start position:36% line:-1
やってみましょう

00:54:20.427 --> 00:54:22.796 align:start position:32% line:-1
先ほどの例に戻ります

00:54:23.730 --> 00:54:26.400 align:start position:29% line:-1
再び この経路を選びます

00:54:26.600 --> 00:54:30.604 align:start position:32% line:-2
経路が選択されたので
画面の右側に

00:54:30.704 --> 00:54:33.140 align:start position:29% line:-1
詳細情報が表示されました

00:54:33.240 --> 00:54:37.778 align:start position:16% line:-2
経路の名前は経由する
“Mount Hamilton Rd”

00:54:38.579 --> 00:54:41.481 align:start position:34% line:-2
距離は70キロで
運転に適した道です

00:54:41.582 --> 00:54:44.518 align:start position:30% line:-1
所要時間は１時間32分

00:54:44.618 --> 00:54:49.156 align:start position:32% line:-2
こちらに目的地までの
道順が示されています

00:54:49.790 --> 00:54:51.391 align:start position:34% line:-1
こちらの道を見ると

00:54:51.992 --> 00:54:56.730 align:start position:25% line:-2
距離は長くても
早く到着することが分かります

00:54:57.064 --> 00:54:57.965 align:start position:45% line:-1
さて―

00:54:59.032 --> 00:55:03.203 align:start position:27% line:-2
ビッグフット探索用マップが
できました

00:54:59.032 --> 00:55:03.203 align:start position:27% line:-2
ビッグフット探索用マップが
できました

00:55:03.303 --> 00:55:06.340 align:start position:32% line:-1
これで どの場所に―

00:55:06.440 --> 00:55:10.110 align:start position:25% line:-1
どう行けばいいか調べられます

00:55:10.811 --> 00:55:12.579 align:start position:43% line:-1
(拍手)

00:55:12.679 --> 00:55:13.647 align:start position:45% line:-1
どうも

00:55:13.747 --> 00:55:16.450 align:start position:43% line:-1
(拍手)

00:55:16.683 --> 00:55:17.818 align:start position:39% line:-1
おさらいです

00:55:17.918 --> 00:55:22.156 align:start position:21% line:-2
選択･非選択など
ユーザイベントへの反応を見ました

00:55:24.191 --> 00:55:27.161 align:start position:20% line:-1
MapKit JSから経路を取得し

00:55:27.261 --> 00:55:30.864 align:start position:27% line:-2
ポリラインのオーバーレイで
表示します

00:55:31.165 --> 00:55:35.002 align:start position:34% line:-2
初期設定の動作が
決まっていないので

00:55:35.102 --> 00:55:38.939 align:start position:32% line:-2
オーバーレイ選択時の
動作を設定します

00:55:40.541 --> 00:55:43.944 align:start position:34% line:-2
お話ししたいことは
山ほどありますが

00:55:44.044 --> 00:55:48.015 align:start position:34% line:-2
１時間しかないので
ここで終了します

00:55:49.516 --> 00:55:52.419 align:start position:27% line:-1
MapKit JSを使って

00:55:52.519 --> 00:55:57.124 align:start position:32% line:-2
最高のマップ体験を
提供できれば幸いです

00:55:58.225 --> 00:56:03.364 align:start position:29% line:-2
なじみがあり柔軟性もある
APIを使うので

00:55:58.225 --> 00:56:03.364 align:start position:29% line:-2
なじみがあり柔軟性もある
APIを使うので

00:56:03.464 --> 00:56:08.802 align:start position:23% line:-2
MapKit API利用者には
使いやすいと思います

00:56:08.902 --> 00:56:10.604 align:start position:38% line:-1
概念は同じです

00:56:10.704 --> 00:56:13.006 align:start position:27% line:-1
ウェブデベロッパが喜ぶのは

00:56:13.106 --> 00:56:17.177 align:start position:16% line:-1
JavaScriptにも対応する点です

00:56:18.979 --> 00:56:23.684 align:start position:21% line:-2
利用にはMapKit JSキーが
必要なので

00:56:24.051 --> 00:56:27.788 align:start position:27% line:-2
ポータルからキーを取得して
試してください

00:56:29.123 --> 00:56:35.696 align:start position:23% line:-2
ドキュメントとサンプルコードは
こちらのURLにあります

00:56:37.831 --> 00:56:42.703 align:start position:30% line:-2
このセッションの情報は
こちらのURLです

00:56:42.803 --> 00:56:45.139 align:start position:29% line:-1
MapKit JSキーの

00:56:45.239 --> 00:56:49.843 align:start position:29% line:-2
取得方法を解説した動画も
用意しています

00:56:51.044 --> 00:56:55.816 align:start position:29% line:-2
そして 水曜と金曜の朝に
ラボがあるので―

00:56:55.916 --> 00:57:01.755 align:start position:25% line:-2
MapKit JSのチームに
直接質問することもできます

00:56:55.916 --> 00:57:01.755 align:start position:25% line:-2
MapKit JSのチームに
直接質問することもできます

00:57:02.456 --> 00:57:03.257 align:start position:45% line:-1
どうも

00:57:03.357 --> 00:57:07.194 align:start position:43% line:-1
(拍手)
