WEBVTT

00:00:07.074 --> 00:00:16.483 align:start position:43% line:-1
(音楽)

00:00:17.518 --> 00:00:26.193 align:start position:43% line:-1
(拍手)

00:00:26.827 --> 00:00:27.427 align:start position:41% line:-1
こんにちは

00:00:27.528 --> 00:00:31.832 align:start position:27% line:-2
私ポールと同僚のジョシュが
話すテーマは

00:00:31.932 --> 00:00:35.002 align:start position:21% line:-2
Siriの文字盤の
Siri Shortcutsです

00:00:36.303 --> 00:00:40.974 align:start position:30% line:-2
昨年 一目で分かる
Siriの文字盤を発表

00:00:41.074 --> 00:00:43.944 align:start position:34% line:-2
手首を上げると
情報が表示されます

00:00:44.278 --> 00:00:47.481 align:start position:38% line:-2
ユーザが今一番
欲しい情報を

00:00:47.581 --> 00:00:50.751 align:start position:27% line:-1
自動で更新し提供するのです

00:00:51.718 --> 00:00:54.821 align:start position:27% line:-2
watchOS 5では
アプリケーションも文字盤の

00:00:54.922 --> 00:00:57.124 align:start position:30% line:-1
データソースになります

00:00:58.125 --> 00:01:02.229 align:start position:27% line:-2
ショートカットは文字盤の
“プラッター”で見られます

00:00:58.125 --> 00:01:02.229 align:start position:27% line:-2
ショートカットは文字盤の
“プラッター”で見られます

00:01:02.496 --> 00:01:06.166 align:start position:29% line:-2
使う際は
これをタップするだけです

00:01:06.466 --> 00:01:07.835 align:start position:36% line:-1
状況に合わせて―

00:01:07.935 --> 00:01:10.604 align:start position:34% line:-2
アプリケーションを
起動できます

00:01:11.271 --> 00:01:14.107 align:start position:32% line:-2
バックグラウンド処理
対応なら

00:01:14.641 --> 00:01:16.944 align:start position:34% line:-1
文字盤上で使えます

00:01:17.511 --> 00:01:19.980 align:start position:29% line:-1
アプリケーションの機能を

00:01:20.080 --> 00:01:21.782 align:start position:34% line:-1
すぐに使えるのです

00:01:22.616 --> 00:01:24.618 align:start position:34% line:-1
では本日の概要です

00:01:24.818 --> 00:01:28.255 align:start position:30% line:-2
まずは文字盤の
コンテンツ表示について

00:01:29.122 --> 00:01:31.425 align:start position:27% line:-1
次はコンテンツ表示のための

00:01:31.525 --> 00:01:34.828 align:start position:9% line:-2
Relevant Shortcuts APIの
話です

00:01:36.029 --> 00:01:41.034 align:start position:27% line:-2
iOSから文字盤への
コンテンツ提供も説明します

00:01:41.735 --> 00:01:45.072 align:start position:29% line:-1
ジョシュは予測エンジンと

00:01:45.405 --> 00:01:49.309 align:start position:29% line:-2
APIの最適な使用方法を
紹介します

00:01:51.078 --> 00:01:54.047 align:start position:36% line:-2
まずは文字盤での
表示方法です

00:01:55.115 --> 00:01:58.519 align:start position:30% line:-2
すべてユーザとの関連で
ソートします

00:01:58.752 --> 00:02:02.656 align:start position:34% line:-2
関連性が高い順に
上から表示されます

00:01:58.752 --> 00:02:02.656 align:start position:34% line:-2
関連性が高い順に
上から表示されます

00:02:02.990 --> 00:02:06.894 align:start position:32% line:-2
多数のインプットから
関連を計算します

00:02:06.994 --> 00:02:10.264 align:start position:30% line:-2
例えば 時刻 位置情報
日々の行動

00:02:10.364 --> 00:02:12.432 align:start position:30% line:-1
データへの関与などです

00:02:13.433 --> 00:02:17.771 align:start position:16% line:-2
Relevant Shortcutsが
提供するコンテンツには

00:02:17.971 --> 00:02:22.042 align:start position:29% line:-2
UIや表示のタイミングも
紐づいています

00:02:22.910 --> 00:02:26.380 align:start position:36% line:-2
そしてユーザの
使用履歴に基づき

00:02:26.480 --> 00:02:29.383 align:start position:32% line:-2
コンテンツの関連性が
決まります

00:02:29.550 --> 00:02:34.154 align:start position:29% line:-2
しかし 最適な情報や
未使用のショートカットを

00:02:34.321 --> 00:02:37.357 align:start position:29% line:-1
提案したいと思いますよね

00:02:37.457 --> 00:02:39.927 align:start position:27% line:-2
そこでRelevance
Providerを使います

00:02:40.727 --> 00:02:42.629 align:start position:38% line:-1
ユーザが簡単に

00:02:42.729 --> 00:02:45.699 align:start position:32% line:-2
データソースの
オンとオフができます

00:02:45.799 --> 00:02:48.802 align:start position:34% line:-2
文字盤の
設定画面で行います

00:02:50.370 --> 00:02:53.373 align:start position:30% line:-1
APIの話を進める前に

00:02:53.473 --> 00:02:56.276 align:start position:34% line:-2
関連の計算について
補足します

00:02:56.376 --> 00:02:58.178 align:start position:30% line:-1
ショートカットの表示を

00:02:58.278 --> 00:03:00.280 align:start position:38% line:-1
決める手順です

00:02:58.278 --> 00:03:00.280 align:start position:38% line:-1
決める手順です

00:03:00.647 --> 00:03:01.548 align:start position:43% line:-1
開発中は

00:03:01.648 --> 00:03:05.452 align:start position:34% line:-2
iOS設定の
開発画面にいきます

00:03:05.919 --> 00:03:07.788 align:start position:29% line:-1
そこのテストセクションに

00:03:08.922 --> 00:03:12.359 align:start position:29% line:-2
“最近のショートカットを
表示”があります

00:03:12.459 --> 00:03:14.127 align:start position:34% line:-1
これをオンにすれば

00:03:14.228 --> 00:03:16.930 align:start position:30% line:-2
最新のショートカットが
上に表示されます

00:03:20.067 --> 00:03:24.238 align:start position:27% line:-2
また このAPIで
iOSアプリケーションでも

00:03:24.605 --> 00:03:28.876 align:start position:25% line:-2
ショートカットをWatchと
同期できます

00:03:28.976 --> 00:03:32.145 align:start position:30% line:-2
“Watchと同期”を
タップするだけです

00:03:33.914 --> 00:03:35.916 align:start position:12% line:-2
Relevant Shortcutsの話に
戻ります

00:03:36.049 --> 00:03:38.552 align:start position:34% line:-2
そのコアは
ショートカットです

00:03:39.253 --> 00:03:42.523 align:start position:34% line:-2
ショートカットで
アプリケーションを

00:03:42.623 --> 00:03:44.892 align:start position:30% line:-1
より簡単に利用できます

00:03:45.225 --> 00:03:47.961 align:start position:25% line:-1
Siriにキーワードを言うか

00:03:48.061 --> 00:03:49.863 align:start position:34% line:-1
タップで実行します

00:03:49.963 --> 00:03:53.300 align:start position:30% line:-2
Watchだと文字盤の
プラッターです

00:03:54.434 --> 00:03:57.771 align:start position:30% line:-2
今年のショートカットの
開発では

00:03:57.871 --> 00:04:01.642 align:start position:29% line:-2
watchOSでの使用が
話の焦点です

00:03:57.871 --> 00:04:01.642 align:start position:29% line:-2
watchOSでの使用が
話の焦点です

00:04:01.742 --> 00:04:04.745 align:start position:21% line:-2
“Introduction to
Siri Shortcuts”と

00:04:04.845 --> 00:04:08.916 align:start position:7% line:-2
“Building for Voice with
Siri Shortcuts”もぜひ

00:04:10.117 --> 00:04:12.786 align:start position:36% line:-2
ショートカットの
作り方は２つ

00:04:13.220 --> 00:04:14.521 align:start position:25% line:-2
１つは
NSUserActivity

00:04:14.621 --> 00:04:18.192 align:start position:27% line:-1
ユーザの使用状態を指します

00:04:18.791 --> 00:04:22.329 align:start position:30% line:-2
２つ目のIntentは
タスクを実行します

00:04:23.030 --> 00:04:26.833 align:start position:30% line:-2
バックグラウンド処理が
可能なので

00:04:26.934 --> 00:04:31.004 align:start position:30% line:-2
アプリケーション起動の
手間が省けます

00:04:31.238 --> 00:04:33.974 align:start position:23% line:-2
Apple Watchや
HomePodのIntentを

00:04:34.074 --> 00:04:37.044 align:start position:29% line:-1
iPhoneでも使えます

00:04:38.045 --> 00:04:41.615 align:start position:32% line:-2
既存のIntentは
多くあります

00:04:41.715 --> 00:04:44.885 align:start position:38% line:-2
メッセージ送信
運動 配車など

00:04:45.219 --> 00:04:47.354 align:start position:25% line:-2
しかし watchOS 5と
iOS 12では

00:04:47.454 --> 00:04:49.189 align:start position:30% line:-1
Intentを作れます

00:04:49.289 --> 00:04:51.725 align:start position:29% line:-1
カスタマイズできるのです

00:04:52.326 --> 00:04:56.930 align:start position:27% line:-2
Xcodeに定義ファイルと
エディタがあります

00:04:57.030 --> 00:04:59.466 align:start position:16% line:-2
Relevant Shortcutsの
要旨を話しますが

00:04:59.566 --> 00:05:02.302 align:start position:36% line:-2
前出のプレゼンも
ご覧ください

00:04:59.566 --> 00:05:02.302 align:start position:36% line:-2
前出のプレゼンも
ご覧ください

00:05:03.704 --> 00:05:06.640 align:start position:30% line:-2
では Watchの
ショートカット使用例を

00:05:06.740 --> 00:05:08.242 align:start position:36% line:-1
見ていきましょう

00:05:09.510 --> 00:05:12.646 align:start position:29% line:-2
ユーザがショートカットを
利用する際

00:05:12.746 --> 00:05:16.550 align:start position:32% line:-2
タップするか
キーワードを言います

00:05:16.783 --> 00:05:18.352 align:start position:29% line:-1
それにWatchが反応し

00:05:18.519 --> 00:05:22.589 align:start position:27% line:-2
対応可能な
アプリケーションを探します

00:05:22.923 --> 00:05:25.425 align:start position:29% line:-1
この例では見つかりました

00:05:25.526 --> 00:05:28.996 align:start position:30% line:-2
それにショートカットを
割り当てます

00:05:29.596 --> 00:05:33.500 align:start position:30% line:-2
バックグラウンド処理が
可能な場合

00:05:34.067 --> 00:05:37.137 align:start position:32% line:-2
Intentが
ショートカットを実行

00:05:37.404 --> 00:05:41.842 align:start position:21% line:-2
NSUserActivityなど
バックグラウンドの対象外は

00:05:41.942 --> 00:05:44.878 align:start position:34% line:-2
アプリケーションが
実行します

00:05:45.746 --> 00:05:49.917 align:start position:34% line:-2
その後 結果が
画面に表示されます

00:05:51.084 --> 00:05:52.653 align:start position:41% line:-1
次の例です

00:05:52.986 --> 00:05:56.490 align:start position:32% line:-2
ユーザが
タップかキーワードで

00:05:56.590 --> 00:05:58.692 align:start position:29% line:-1
ショートカットを使います

00:05:59.059 --> 00:06:00.527 align:start position:30% line:-1
Watchが検証します

00:05:59.059 --> 00:06:00.527 align:start position:30% line:-1
Watchが検証します

00:06:00.661 --> 00:06:05.165 align:start position:25% line:-2
今回は対応できる
アプリケーションがありません

00:06:05.532 --> 00:06:10.470 align:start position:27% line:-2
iPhone内でも検索され
見つかりました

00:06:10.571 --> 00:06:16.276 align:start position:27% line:-2
そこで要請を転送し
ショートカットを実行します

00:06:17.511 --> 00:06:22.649 align:start position:27% line:-2
iPhoneで結果が出たら
Watchに戻ります

00:06:24.651 --> 00:06:28.755 align:start position:30% line:-2
以上がショートカットの
作成と実行の概要です

00:06:28.856 --> 00:06:30.424 align:start position:12% line:-2
次はRelevant Shortcutsの
話です

00:06:30.657 --> 00:06:33.894 align:start position:27% line:-1
関連の高さで表示を決めます

00:06:34.962 --> 00:06:38.298 align:start position:30% line:-2
その時に
必要なショートカットを

00:06:38.398 --> 00:06:40.100 align:start position:27% line:-1
自動的に文字盤に表示します

00:06:40.467 --> 00:06:44.872 align:start position:30% line:-2
プラッター画面は
カスタマイズも可能です

00:06:46.573 --> 00:06:49.776 align:start position:27% line:-1
もちろん実行にはタップだけ

00:06:50.177 --> 00:06:52.579 align:start position:29% line:-1
それでは見ていきましょう

00:06:53.380 --> 00:06:55.582 align:start position:23% line:-1
UserActivityの場合

00:06:55.682 --> 00:06:58.619 align:start position:34% line:-2
タップすると
アプリケーションは起動します

00:06:59.119 --> 00:07:00.988 align:start position:30% line:-1
ショートカット完了です

00:06:59.119 --> 00:07:00.988 align:start position:30% line:-1
ショートカット完了です

00:07:02.055 --> 00:07:05.359 align:start position:29% line:-1
Intentを使った場合

00:07:05.559 --> 00:07:08.762 align:start position:36% line:-2
タップすると
“確認”が出ます

00:07:09.396 --> 00:07:13.834 align:start position:25% line:-2
タップすると
Intentが直接実行するか

00:07:14.468 --> 00:07:20.007 align:start position:29% line:-2
アプリケーションを起動後
実行します

00:07:21.175 --> 00:07:23.710 align:start position:16% line:-2
Relevant Shortcutsの
APIを見ましょう

00:07:24.244 --> 00:07:26.680 align:start position:34% line:-2
そのコアは
ショートカットです

00:07:27.014 --> 00:07:30.784 align:start position:18% line:-2
Relevance Provider
については

00:07:30.884 --> 00:07:32.119 align:start position:36% line:-1
あとで説明します

00:07:33.120 --> 00:07:37.124 align:start position:27% line:-2
ショートカットに加えて
UIをカスタマイズする場合

00:07:37.224 --> 00:07:40.327 align:start position:14% line:-2
DefaultCardTemplateを
使います

00:07:42.162 --> 00:07:45.866 align:start position:16% line:-2
Relevant Shortcutsの
作成後は

00:07:45.966 --> 00:07:48.435 align:start position:32% line:-1
ストアにセットします

00:07:48.669 --> 00:07:50.771 align:start position:32% line:-1
配列を渡してください

00:07:50.938 --> 00:07:55.075 align:start position:27% line:-2
すると 過去のコンテンツが
上書きされ

00:07:55.209 --> 00:07:57.945 align:start position:32% line:-1
ストアが更新されます

00:07:58.045 --> 00:08:02.382 align:start position:30% line:-2
関連する事柄を すべて
網羅することが重要です

00:07:58.045 --> 00:08:02.382 align:start position:30% line:-2
関連する事柄を すべて
網羅することが重要です

00:08:04.184 --> 00:08:06.553 align:start position:32% line:-1
次は表示についてです

00:08:06.720 --> 00:08:11.058 align:start position:29% line:-2
左上にアイコン
続いてアプリケーション名

00:08:11.492 --> 00:08:13.327 align:start position:36% line:-1
次に見出しがあり

00:08:13.427 --> 00:08:17.231 align:start position:32% line:-2
もう１行
補足文も入れられます

00:08:17.331 --> 00:08:18.932 align:start position:36% line:-1
イタリック体です

00:08:19.233 --> 00:08:22.369 align:start position:32% line:-2
左側にカスタム画像も
出せます

00:08:22.736 --> 00:08:26.173 align:start position:34% line:-2
透過して
角が丸いタイプです

00:08:26.707 --> 00:08:28.909 align:start position:32% line:-1
寸法の詳細については

00:08:29.009 --> 00:08:32.044 align:start position:29% line:-2
watchOSのHIGを
ご覧ください

00:08:32.645 --> 00:08:37.116 align:start position:29% line:-2
枠内はショートカットから
自動で表示されます

00:08:38.085 --> 00:08:39.586 align:start position:29% line:-1
カスタムIntentでは

00:08:39.820 --> 00:08:44.491 align:start position:29% line:-2
すべてのパラメータに
関連する見出しがあります

00:08:45.459 --> 00:08:48.428 align:start position:29% line:-2
また どのパラメータにも
コードで

00:08:48.795 --> 00:08:51.031 align:start position:34% line:-1
画像を設定できます

00:08:51.365 --> 00:08:53.167 align:start position:27% line:-1
パラメータの関連性の高さで

00:08:53.267 --> 00:08:56.670 align:start position:36% line:-2
表示される画像が
選択されます

00:08:57.237 --> 00:09:02.576 align:start position:23% line:-2
定義ファイル内の順番で
パラメータの特異性を定義します

00:08:57.237 --> 00:09:02.576 align:start position:23% line:-2
定義ファイル内の順番で
パラメータの特異性を定義します

00:09:04.311 --> 00:09:08.815 align:start position:23% line:-2
NSUserActivityで
ショートカットを作る場合

00:09:08.982 --> 00:09:13.020 align:start position:2% line:-2
Info.plistからuserActivityタイプ
を指定します

00:09:13.153 --> 00:09:17.825 align:start position:29% line:-2
見出しは“Title”に
設定してください

00:09:18.525 --> 00:09:22.229 align:start position:12% line:-2
iOSではCSSearchableItem
AttributeSetを使い

00:09:22.329 --> 00:09:25.299 align:start position:27% line:-1
補足文と画像を設定できます

00:09:26.200 --> 00:09:29.937 align:start position:16% line:-2
補足文は
contentDescriptionに

00:09:30.304 --> 00:09:32.539 align:start position:20% line:-2
画像はthumbnailDataに
セット

00:09:33.407 --> 00:09:38.479 align:start position:23% line:-2
属性セットはcontent
AttributeSetに設定

00:09:40.380 --> 00:09:44.117 align:start position:29% line:-2
ショートカットの
コンテンツを使わない場合

00:09:44.218 --> 00:09:48.288 align:start position:14% line:-2
DefaultCardTemplateを
使用します

00:09:48.455 --> 00:09:51.992 align:start position:30% line:-2
内容に応じて
レイアウトが決まります

00:09:52.459 --> 00:09:55.162 align:start position:29% line:-1
右２つは画像がありません

00:09:55.262 --> 00:09:58.966 align:start position:32% line:-2
その場合 テキストを
左に寄せます

00:09:59.666 --> 00:10:02.002 align:start position:29% line:-1
下２つは補足文がないので

00:09:59.666 --> 00:10:02.002 align:start position:29% line:-1
下２つは補足文がないので

00:10:02.102 --> 00:10:04.671 align:start position:30% line:-1
見出しを２行にできます

00:10:06.807 --> 00:10:10.077 align:start position:21% line:-1
Intentのショートカットでは

00:10:10.177 --> 00:10:12.146 align:start position:34% line:-1
確認画面が現れます

00:10:12.646 --> 00:10:15.549 align:start position:36% line:-2
左上はアイコンで
少し大きめです

00:10:15.649 --> 00:10:17.117 align:start position:30% line:-1
隣にアプリケーション名

00:10:17.384 --> 00:10:21.221 align:start position:32% line:-2
下に見出しと補足文が
表示されます

00:10:21.688 --> 00:10:23.857 align:start position:32% line:-1
ユーザの選択肢は３つ

00:10:24.091 --> 00:10:27.828 align:start position:30% line:-2
中央のピンクのボタンを
タップして実行

00:10:28.061 --> 00:10:31.265 align:start position:21% line:-2
“Dismiss”か
Digital Crownで終了

00:10:31.498 --> 00:10:33.400 align:start position:36% line:-1
３つ目の選択肢は

00:10:33.867 --> 00:10:38.105 align:start position:30% line:-2
ショートカットの内容を
変更する場合です

00:10:38.238 --> 00:10:40.974 align:start position:32% line:-1
上の枠をタップします

00:10:41.074 --> 00:10:44.578 align:start position:29% line:-2
アプリケーションが起動し
Intentが戻ります

00:10:44.678 --> 00:10:47.915 align:start position:36% line:-2
そこでユーザが
編集できるように

00:10:48.015 --> 00:10:49.583 align:start position:38% line:-1
UIを作れます

00:10:50.684 --> 00:10:53.754 align:start position:34% line:-2
確認ボタンについて
説明します

00:10:55.255 --> 00:10:57.090 align:start position:18% line:-1
“Action Verb”の文字列は

00:10:57.191 --> 00:11:01.495 align:start position:27% line:-2
定義ファイルの
カテゴリーから取得されます

00:10:57.191 --> 00:11:01.495 align:start position:27% line:-2
定義ファイルの
カテゴリーから取得されます

00:11:02.729 --> 00:11:08.302 align:start position:23% line:-2
色はアプリケーションの
Global Tintの色です

00:11:09.636 --> 00:11:13.106 align:start position:23% line:-1
Watchのアプリケーションは

00:11:13.207 --> 00:11:16.477 align:start position:25% line:-1
iOSのものと同じになります

00:11:16.643 --> 00:11:22.082 align:start position:29% line:-2
つまり 見出しや補足文の
文字列が同一です

00:11:22.249 --> 00:11:25.686 align:start position:34% line:-2
Watchは小さく
文字の制限が厳しい

00:11:25.953 --> 00:11:28.255 align:start position:20% line:-2
NSStringVariable
WidthRuleTypeを使った

00:11:28.355 --> 00:11:31.258 align:start position:29% line:-1
文字列辞書をお勧めします

00:11:31.492 --> 00:11:35.195 align:start position:29% line:-2
これで表示に合うサイズの
文字列を

00:11:35.362 --> 00:11:37.231 align:start position:34% line:-1
渡すことができます

00:11:38.432 --> 00:11:42.336 align:start position:36% line:-2
watchOSの
文字列のルールは

00:11:42.436 --> 00:11:45.539 align:start position:29% line:-2
38ミリのWatchには
20が良く

00:11:45.639 --> 00:11:48.475 align:start position:27% line:-1
42ミリには24が最適です

00:11:50.077 --> 00:11:52.746 align:start position:34% line:-1
このAPIの詳細は

00:11:52.846 --> 00:11:55.949 align:start position:16% line:-2
昨年の“Localizing with
Xcode 9”をご覧ください

00:11:57.751 --> 00:11:59.887 align:start position:12% line:-2
次はRelevance Providerの
話です

00:12:01.154 --> 00:12:05.492 align:start position:29% line:-2
これは情報をいつ出すかの
ヒントを与えます

00:12:06.326 --> 00:12:09.396 align:start position:32% line:-2
時間や位置情報などの
インプットの

00:12:09.496 --> 00:12:12.599 align:start position:38% line:-2
関連性の高さを
教えてくれます

00:12:13.167 --> 00:12:16.203 align:start position:25% line:-2
１つのショートカットに
Providerが２つの場合

00:12:16.637 --> 00:12:18.739 align:start position:29% line:-1
両方に該当すれば有効です

00:12:19.039 --> 00:12:22.209 align:start position:29% line:-1
例えば １つは時間の情報

00:12:22.543 --> 00:12:24.645 align:start position:29% line:-1
もう１つは場所の情報です

00:12:25.012 --> 00:12:28.215 align:start position:34% line:-2
時間と場所の両方に
合致すると

00:12:28.315 --> 00:12:30.050 align:start position:34% line:-1
関連が高くなります

00:12:30.484 --> 00:12:32.920 align:start position:29% line:-1
片方でも有効とする場合は

00:12:33.020 --> 00:12:37.691 align:start position:30% line:-2
２つのショートカットを
作成してください

00:12:38.892 --> 00:12:40.861 align:start position:32% line:-1
では具体例に移ります

00:12:41.461 --> 00:12:44.064 align:start position:23% line:-2
INDateRelevance
Providerには

00:12:44.498 --> 00:12:47.868 align:start position:18% line:-2
startDateとendDateを
設定します

00:12:48.402 --> 00:12:50.537 align:start position:36% line:-1
開始日に近づくと

00:12:50.838 --> 00:12:55.609 align:start position:23% line:-2
このProviderの関連性が
上がります

00:12:56.109 --> 00:12:59.246 align:start position:36% line:-2
その日を過ぎると
関連性が下がり

00:12:59.346 --> 00:13:01.448 align:start position:32% line:-1
他の情報が上にきます

00:12:59.346 --> 00:13:01.448 align:start position:32% line:-1
他の情報が上にきます

00:13:01.648 --> 00:13:05.619 align:start position:30% line:-2
終了日も設定した場合
その曲線が調整されます

00:13:07.120 --> 00:13:09.890 align:start position:32% line:-1
位置情報が重要な時は

00:13:09.990 --> 00:13:12.359 align:start position:16% line:-2
INLocationRelevance
Providerです

00:13:13.060 --> 00:13:16.997 align:start position:23% line:-2
CLRegionをパラメータと
しています

00:13:17.097 --> 00:13:19.299 align:start position:30% line:-1
そこにユーザが近づくと

00:13:19.500 --> 00:13:22.669 align:start position:20% line:-1
このProviderの関連性が上昇

00:13:23.670 --> 00:13:25.939 align:start position:30% line:-1
次は特定の時間も場所も

00:13:26.039 --> 00:13:28.742 align:start position:32% line:-1
決まっていない例です

00:13:30.177 --> 00:13:33.814 align:start position:34% line:-2
予定や好きな場所は
人それぞれです

00:13:33.914 --> 00:13:36.817 align:start position:32% line:-2
すべてを
追跡したくありません

00:13:36.917 --> 00:13:41.455 align:start position:9% line:-2
INDailyRoutineRelevance
Providerを使えば

00:13:41.555 --> 00:13:45.792 align:start position:32% line:-2
賢いSiriが適切な
時と場所を判断します

00:13:46.260 --> 00:13:50.497 align:start position:34% line:-2
例えばユーザが朝
天気予報を見る場合

00:13:50.631 --> 00:13:53.033 align:start position:29% line:-1
起床時間の設定は不要です

00:13:53.133 --> 00:13:55.169 align:start position:29% line:-1
“朝”と設定するだけです

00:13:55.669 --> 00:13:58.705 align:start position:27% line:-1
ジムでの運動を提案するなら

00:13:58.805 --> 00:14:00.774 align:start position:30% line:-1
“ジム”という状況だけ

00:13:58.805 --> 00:14:00.774 align:start position:30% line:-1
“ジム”という状況だけ

00:14:03.010 --> 00:14:07.214 align:start position:23% line:-2
では実際にRelevant
Shorcutsを作りましょう

00:14:07.881 --> 00:14:11.518 align:start position:32% line:-2
この架空の
アプリケーションでは

00:14:11.618 --> 00:14:14.822 align:start position:36% line:-2
課題を決め
食事をログします

00:14:14.922 --> 00:14:17.991 align:start position:32% line:-1
今週の課題は野菜です

00:14:18.292 --> 00:14:20.561 align:start position:25% line:-2
食事ログの
userActivityを―

00:14:21.128 --> 00:14:22.362 align:start position:41% line:-1
生成します

00:14:22.462 --> 00:14:25.699 align:start position:16% line:-2
タイプは
com.myapp.LogMealです

00:14:25.899 --> 00:14:27.968 align:start position:30% line:-1
夕食時に表示させるため

00:14:28.068 --> 00:14:32.072 align:start position:29% line:-2
userInfoの辞書に
“夕食”と設定

00:14:32.873 --> 00:14:34.608 align:start position:21% line:-1
userActivityのあとは

00:14:34.708 --> 00:14:37.911 align:start position:21% line:-2
ショートカットとRelevant
Shortcutsを作成します

00:14:38.679 --> 00:14:43.684 align:start position:30% line:-2
さて 課題は野菜だと
文字盤に出したいですね

00:14:43.784 --> 00:14:46.854 align:start position:25% line:-1
UIをカスタマイズし見出しを

00:14:47.020 --> 00:14:48.689 align:start position:30% line:-1
“夕食をログ”とします

00:14:48.889 --> 00:14:52.759 align:start position:30% line:-2
補足文と画像には
“野菜が課題”と出ます

00:14:53.827 --> 00:14:57.231 align:start position:27% line:-1
夕食のログは毎日しなくても

00:14:57.331 --> 00:14:58.665 align:start position:36% line:-1
課題は継続します

00:14:58.765 --> 00:15:02.002 align:start position:34% line:-2
そのため夕食時には
表示したい

00:14:58.765 --> 00:15:02.002 align:start position:34% line:-2
そのため夕食時には
表示したい

00:15:02.102 --> 00:15:04.338 align:start position:12% line:-2
DailyRoutineRelevance
Providerを渡し

00:15:04.438 --> 00:15:05.939 align:start position:38% line:-1
“夕方”と設定

00:15:06.540 --> 00:15:10.878 align:start position:20% line:-2
設定したRelevant
Shorcutsをストアに渡します

00:15:12.279 --> 00:15:13.614 align:start position:41% line:-1
次の例です

00:15:13.714 --> 00:15:16.950 align:start position:30% line:-2
ユーザは
このアプリケーションで

00:15:17.050 --> 00:15:20.120 align:start position:36% line:-2
いろいろな好物を
設定できます

00:15:20.220 --> 00:15:23.557 align:start position:18% line:-2
LogFavoritelntentを
使います

00:15:24.258 --> 00:15:29.196 align:start position:29% line:-2
文字盤に表示すれば
より簡単にログできますね

00:15:29.630 --> 00:15:31.732 align:start position:27% line:-1
そこでインスタンスを利用し

00:15:32.099 --> 00:15:34.401 align:start position:29% line:-1
好物の１つをパラメータに

00:15:34.501 --> 00:15:37.137 align:start position:27% line:-1
この例では“クッキー”です

00:15:37.604 --> 00:15:40.040 align:start position:32% line:-1
画像も設定されるため

00:15:40.140 --> 00:15:44.311 align:start position:30% line:-2
ユーザはログする内容を
思い出せます

00:15:45.279 --> 00:15:49.616 align:start position:30% line:-2
続いてIntentで
ショートカットの作成後

00:15:50.484 --> 00:15:52.820 align:start position:12% line:-1
Relevant Shortcutsを作り

00:15:52.920 --> 00:15:54.555 align:start position:36% line:-1
ストアに渡します

00:15:54.655 --> 00:15:57.825 align:start position:32% line:-2
見出し文字列と画像が
あるので

00:15:57.925 --> 00:16:00.394 align:start position:30% line:-1
テンプレートは不要です

00:15:57.925 --> 00:16:00.394 align:start position:30% line:-1
テンプレートは不要です

00:16:00.828 --> 00:16:05.466 align:start position:16% line:-2
Relevance Providerも
今回は要りません

00:16:05.566 --> 00:16:07.134 align:start position:38% line:-1
習慣だからです

00:16:07.234 --> 00:16:12.539 align:start position:29% line:-2
Siriの予測エンジンが
適切な時間に表示します

00:16:13.740 --> 00:16:17.311 align:start position:16% line:-2
Relevant Shortcutsの
作成後に

00:16:17.477 --> 00:16:19.246 align:start position:34% line:-1
まだ処理が必要です

00:16:19.346 --> 00:16:20.747 align:start position:30% line:-1
watchOS 5では

00:16:20.848 --> 00:16:25.252 align:start position:14% line:-2
WKExtensionDelegateに
メソッドを追加

00:16:26.220 --> 00:16:30.157 align:start position:29% line:-2
最初の例はタップで
アプリケーションを起動し

00:16:30.257 --> 00:16:32.993 align:start position:27% line:-2
userActivityを
メソッドに渡します

00:16:33.093 --> 00:16:35.996 align:start position:16% line:-2
タイプは
com.myapp.LogMealです

00:16:36.530 --> 00:16:39.566 align:start position:29% line:-1
次に 正しく動作するため

00:16:39.666 --> 00:16:41.602 align:start position:23% line:-2
rootInterface
Controllerにポップし

00:16:41.702 --> 00:16:44.138 align:start position:21% line:-2
LogMealInterface
Controllerをプッシュ

00:16:44.338 --> 00:16:49.743 align:start position:30% line:-2
userInfo辞書の
内容を必ず渡しましょう

00:16:51.545 --> 00:16:55.349 align:start position:32% line:-2
次の例では多くの場合
バックグラウンドで

00:16:55.449 --> 00:16:58.118 align:start position:27% line:-1
Intentが実行されます

00:16:58.285 --> 00:17:02.422 align:start position:27% line:-2
しかしアプリケーションが
コールバックされる例があり

00:16:58.285 --> 00:17:02.422 align:start position:27% line:-2
しかしアプリケーションが
コールバックされる例があり

00:17:02.589 --> 00:17:04.691 align:start position:34% line:-1
実行時のエラーなら

00:17:04.791 --> 00:17:06.727 align:start position:32% line:-2
アプリケ－ション内で
処理します

00:17:07.027 --> 00:17:10.696 align:start position:29% line:-2
ユーザが内容を
変更したい場合もあります

00:17:10.797 --> 00:17:14.667 align:start position:32% line:-2
例えばクッキーの数の
修正などです

00:17:14.768 --> 00:17:19.339 align:start position:30% line:-2
上の枠をタップ後
コールバックを受けます

00:17:19.540 --> 00:17:21.275 align:start position:21% line:-1
userActivityタイプは

00:17:21.375 --> 00:17:25.179 align:start position:30% line:-2
Intentのクラスと
同じです

00:17:26.280 --> 00:17:29.516 align:start position:25% line:-2
userActivityから
Intentが取得でき

00:17:29.616 --> 00:17:34.788 align:start position:27% line:-2
そこに設定したパラメータが
すべてあります

00:17:36.290 --> 00:17:39.760 align:start position:11% line:-2
これでRelevant Shortcutsを
作成できます

00:17:39.860 --> 00:17:43.964 align:start position:30% line:-2
ただ文字盤に表示中でも
アプリケーションが

00:17:44.064 --> 00:17:46.266 align:start position:29% line:-1
動いていない時もあります

00:17:46.500 --> 00:17:49.336 align:start position:29% line:-1
ランタイムを増やす機能が

00:17:49.436 --> 00:17:53.707 align:start position:9% line:-2
WKRelevantShortcut
RefreshBackgroundTaskです

00:17:54.474 --> 00:17:58.612 align:start position:32% line:-2
このタスクを提供する
アプリケーションは

00:17:58.712 --> 00:18:03.283 align:start position:27% line:-2
便利なショートカットがあり
ユーザに人気です

00:17:58.712 --> 00:18:03.283 align:start position:27% line:-2
便利なショートカットがあり
ユーザに人気です

00:18:04.184 --> 00:18:08.722 align:start position:29% line:-2
このタスクを取得したら
データを更新する機会です

00:18:08.822 --> 00:18:12.926 align:start position:11% line:-2
新たなRelevant Shortcutsを
提供してください

00:18:13.794 --> 00:18:15.095 align:start position:39% line:-1
補足すると―

00:18:15.596 --> 00:18:19.666 align:start position:16% line:-2
バックグラウンドで動く
IntentはExtension内です

00:18:19.766 --> 00:18:21.368 align:start position:32% line:-1
データストアの更新で

00:18:21.468 --> 00:18:24.705 align:start position:27% line:-2
UIなどが古くなる可能性が
あります

00:18:25.439 --> 00:18:27.641 align:start position:23% line:-1
そのためwatchOS 5では

00:18:28.075 --> 00:18:30.978 align:start position:12% line:-2
WKIntentDidRunRefresh
BackgroundTaskを使用

00:18:31.078 --> 00:18:32.880 align:start position:23% line:-2
Intentがショートカットを
実行したら

00:18:32.980 --> 00:18:36.216 align:start position:34% line:-2
ランタイムとともに
提供されます

00:18:36.984 --> 00:18:39.920 align:start position:34% line:-2
この機会に
UIを更新ください

00:18:40.220 --> 00:18:42.256 align:start position:34% line:-2
スナップショットや
再読み込み

00:18:42.356 --> 00:18:45.192 align:start position:27% line:-2
コンプリケーションの更新も
いいでしょう

00:18:47.294 --> 00:18:51.231 align:start position:30% line:-2
では このAPIを
iOSで利用するには？

00:18:51.565 --> 00:18:55.269 align:start position:7% line:-2
WKRefreshBackgroundTaskを
除き

00:18:55.369 --> 00:18:59.373 align:start position:30% line:-2
まったく同じAPIを
iOSでも利用できます

00:19:00.174 --> 00:19:02.276 align:start position:29% line:-2
iOSのRelevant
Shortcutsは

00:19:02.376 --> 00:19:04.478 align:start position:25% line:-1
定期的にWatchに同期され

00:19:04.578 --> 00:19:09.182 align:start position:32% line:-2
Watchの文字盤に
表示可能になります

00:19:09.817 --> 00:19:12.786 align:start position:32% line:-2
UIのカスタマイズも
同様にできます

00:19:12.886 --> 00:19:16.290 align:start position:29% line:-2
違いはバックグラウンドの
ショートカットでは

00:19:16.390 --> 00:19:20.194 align:start position:34% line:-2
iOSのアイコンが
表示されることです

00:19:21.462 --> 00:19:25.299 align:start position:32% line:-2
次はショートカットの
実行についてです

00:19:25.399 --> 00:19:28.168 align:start position:29% line:-2
どこで
実行されるのでしょうか？

00:19:29.770 --> 00:19:33.841 align:start position:27% line:-2
Watchのローカルにある
アプリケーションでは

00:19:33.941 --> 00:19:38.412 align:start position:21% line:-2
ショートカットはwatchOSで
実行されます

00:19:38.512 --> 00:19:42.115 align:start position:32% line:-2
これは負荷が低く
待ち時間もありません

00:19:42.916 --> 00:19:46.620 align:start position:21% line:-2
watchOSでショートカットを
実行するため

00:19:46.720 --> 00:19:52.092 align:start position:16% line:-2
NSUserActivityTypeは
Info.plist内に設定します

00:19:52.493 --> 00:19:55.996 align:start position:14% line:-2
一方Intentは
Intents Extension内です

00:19:57.431 --> 00:20:01.034 align:start position:34% line:-2
もしWatchで
実行できない場合は

00:19:57.431 --> 00:20:01.034 align:start position:34% line:-2
もしWatchで
実行できない場合は

00:20:01.168 --> 00:20:05.539 align:start position:25% line:-2
iPhoneが近くになくても
iOSで実行されます

00:20:07.141 --> 00:20:09.576 align:start position:34% line:-1
この場合ユーザには

00:20:09.676 --> 00:20:13.981 align:start position:27% line:-2
Watchをタップせず
iPhoneを探してほしい

00:20:14.181 --> 00:20:16.216 align:start position:27% line:-2
そのためiPhoneに戻す
ショートカットには

00:20:16.316 --> 00:20:18.786 align:start position:29% line:-1
いくつかルールがあります

00:20:19.186 --> 00:20:24.124 align:start position:27% line:-2
バックグラウンド処理が
可能なIntentを使用し

00:20:24.224 --> 00:20:26.326 align:start position:29% line:-1
保護データが必要ないこと

00:20:26.427 --> 00:20:29.563 align:start position:30% line:-2
これはロック時に
暗号化されたデータです

00:20:30.130 --> 00:20:33.233 align:start position:25% line:-2
カスタムIntentの内容や
バックグランド処理の―

00:20:33.333 --> 00:20:38.872 align:start position:29% line:-2
サポートの有無で
条件に合うか確認できます

00:20:38.972 --> 00:20:44.778 align:start position:27% line:-2
また認証制限の設定について
確認してください

00:20:45.279 --> 00:20:47.614 align:start position:32% line:-1
選択肢は３つあります

00:20:47.714 --> 00:20:49.716 align:start position:32% line:-1
１つ目は“制限なし”

00:20:49.850 --> 00:20:53.320 align:start position:30% line:-2
２つ目は
“ロック時のみ制限”で

00:20:53.420 --> 00:20:56.290 align:start position:29% line:-1
実行にはアンロックが必要

00:20:56.723 --> 00:21:00.761 align:start position:29% line:-2
最後は“ロック時のみ制限
または保護データなし”

00:20:56.723 --> 00:21:00.761 align:start position:29% line:-2
最後は“ロック時のみ制限
または保護データなし”

00:21:01.828 --> 00:21:06.467 align:start position:16% line:-2
これでWatchとiPhoneの両方で
ショートカットを作れます

00:21:06.567 --> 00:21:09.837 align:start position:29% line:-1
ではジョシュに交代します

00:21:09.937 --> 00:21:10.571 align:start position:41% line:-1
ありがとう

00:21:10.671 --> 00:21:17.244 align:start position:43% line:-1
(拍手)

00:21:17.811 --> 00:21:20.480 align:start position:34% line:-2
どうも
おはようございます

00:21:20.614 --> 00:21:23.684 align:start position:30% line:-2
watchOSチームの
ジョシュです

00:21:23.784 --> 00:21:28.956 align:start position:27% line:-2
私たちはSiri文字盤の
ショートカットが楽しみです

00:21:29.723 --> 00:21:33.227 align:start position:16% line:-2
ポールがAPIと
Relevant Shortcutsの

00:21:33.327 --> 00:21:36.230 align:start position:27% line:-1
提供方法について話しました

00:21:36.497 --> 00:21:40.000 align:start position:30% line:-2
私はシステムが関連性を
どう予測するかと

00:21:40.100 --> 00:21:45.772 align:start position:29% line:-2
ユーザに最適な情報を
出す方法について話します

00:21:48.008 --> 00:21:49.710 align:start position:39% line:-1
前述のとおり

00:21:49.810 --> 00:21:53.614 align:start position:32% line:-2
文字盤の内容は
関連順に表示されます

00:21:53.847 --> 00:21:58.552 align:start position:27% line:-2
手首を上げると
ユーザに必要な情報が出ます

00:21:58.652 --> 00:22:01.021 align:start position:32% line:-1
それは時間や位置情報

00:21:58.652 --> 00:22:01.021 align:start position:32% line:-1
それは時間や位置情報

00:22:01.121 --> 00:22:03.323 align:start position:36% line:-2
その他の要素から
計算されます

00:22:05.159 --> 00:22:07.394 align:start position:30% line:-1
ユーザの好みを知るため

00:22:07.494 --> 00:22:11.965 align:start position:34% line:-2
他のプラッターの
使用状況を調べます

00:22:12.065 --> 00:22:15.269 align:start position:34% line:-2
何をタップするか？
何を見ているか？

00:22:15.369 --> 00:22:18.472 align:start position:34% line:-2
何をスクロールして
飛ばすのか？

00:22:18.672 --> 00:22:21.408 align:start position:32% line:-2
システムは
このすべての情報から

00:22:21.508 --> 00:22:25.379 align:start position:32% line:-2
ユーザがすぐに見たい
内容を探ります

00:22:27.748 --> 00:22:32.219 align:start position:34% line:-2
最適なコンテンツを
表示したいので

00:22:32.319 --> 00:22:37.324 align:start position:30% line:-2
関連性が高く魅力的な
内容を提供してください

00:22:40.694 --> 00:22:45.666 align:start position:30% line:-2
では具体的な表示方法を
見ていきましょう

00:22:45.766 --> 00:22:47.367 align:start position:39% line:-1
前述のとおり

00:22:47.468 --> 00:22:53.173 align:start position:11% line:-2
まずはRelevant Shortcutsを
ストアに設定します

00:22:53.941 --> 00:22:58.679 align:start position:32% line:-2
そのショートカットを
機械学習モデルに入力

00:22:58.779 --> 00:23:02.749 align:start position:30% line:-2
そして最適な表示方法を
見つけます

00:22:58.779 --> 00:23:02.749 align:start position:30% line:-2
そして最適な表示方法を
見つけます

00:23:02.916 --> 00:23:06.220 align:start position:34% line:-2
ではモデルの項目を
見ていきましょう

00:23:07.488 --> 00:23:10.390 align:start position:29% line:-2
まずはRelevance
Providerです

00:23:10.691 --> 00:23:14.428 align:start position:29% line:-2
これはアプリケーションの
追加情報を

00:23:14.528 --> 00:23:15.863 align:start position:36% line:-1
知らせてくれます

00:23:15.963 --> 00:23:19.933 align:start position:36% line:-2
特定の時間や場所
その他の情報です

00:23:21.168 --> 00:23:26.140 align:start position:27% line:-2
ショートカットの使用履歴も
考慮されます

00:23:26.240 --> 00:23:29.743 align:start position:32% line:-2
文字盤の何をタップし
見ていたか？

00:23:29.843 --> 00:23:33.013 align:start position:36% line:-2
何をスクロールで
飛ばしたか？

00:23:34.414 --> 00:23:38.418 align:start position:30% line:-2
システムの様々な要素も
判断材料です

00:23:38.519 --> 00:23:44.391 align:start position:32% line:-2
例えば 日時や現在地
ユーザの日課などです

00:23:44.491 --> 00:23:47.694 align:start position:32% line:-1
これらの要素を考慮し

00:23:47.794 --> 00:23:52.666 align:start position:30% line:-2
ショートカットの有効な
状況を探ります

00:23:55.235 --> 00:24:01.041 align:start position:27% line:-2
重要なのはモデルの安全性と
カスタマイズ性です

00:23:55.235 --> 00:24:01.041 align:start position:27% line:-2
重要なのはモデルの安全性と
カスタマイズ性です

00:24:01.175 --> 00:24:03.777 align:start position:30% line:-1
デバイスの情報を基に―

00:24:04.645 --> 00:24:08.715 align:start position:29% line:-2
各ユーザに応じたモデルを
構築します

00:24:08.816 --> 00:24:13.020 align:start position:34% line:-2
文字盤の使い方は
十人十色だからです

00:24:14.254 --> 00:24:19.092 align:start position:16% line:-2
モデルの訓練が済めば
Relevant Shortcutsを

00:24:19.426 --> 00:24:22.596 align:start position:32% line:-2
関連性順に
文字盤に表示できます

00:24:26.366 --> 00:24:30.871 align:start position:30% line:-2
前のセッションで既出の
情報の“提供”は

00:24:31.071 --> 00:24:35.676 align:start position:29% line:-2
ユーザの動向を
システムに伝える方法です

00:24:36.844 --> 00:24:41.115 align:start position:27% line:-2
Siriの文字盤のUIには
現れませんが

00:24:41.415 --> 00:24:45.252 align:start position:30% line:-2
ユーザの行動を知るのに
利用します

00:24:48.021 --> 00:24:52.759 align:start position:30% line:-2
重要なタスクや
アプリケーション内の―

00:24:52.860 --> 00:24:57.464 align:start position:27% line:-2
ユーザの行動を
システムに伝えられるのです

00:24:58.565 --> 00:25:03.670 align:start position:30% line:-2
ユーザの行動パターンが
これで理解できます

00:24:58.565 --> 00:25:03.670 align:start position:30% line:-2
ユーザの行動パターンが
これで理解できます

00:25:03.771 --> 00:25:05.839 align:start position:36% line:-1
例えばユーザが―

00:25:06.540 --> 00:25:11.812 align:start position:29% line:-2
毎日決まった行動を取ると
それをシステムが学習

00:25:11.912 --> 00:25:17.818 align:start position:29% line:-2
最適なショートカットを
表示できるというわけです

00:25:20.754 --> 00:25:24.658 align:start position:23% line:-2
NSUserActivityで
情報提供する場合

00:25:24.758 --> 00:25:28.395 align:start position:29% line:-1
いくつかの手順を踏みます

00:25:28.695 --> 00:25:35.469 align:start position:14% line:-2
まずNSUserActivityの２つの
設定を“true”にします

00:25:37.004 --> 00:25:42.743 align:start position:18% line:-2
userActivityのサポートを
Info.plistで確認

00:25:43.944 --> 00:25:49.216 align:start position:29% line:-2
コンテンツ表示中に
システムに情報提供すれば

00:25:49.316 --> 00:25:51.919 align:start position:32% line:-2
システムがパターンを
学習します

00:25:53.253 --> 00:25:56.890 align:start position:38% line:-2
この情報提供を
可能にするのが

00:25:56.990 --> 00:25:59.927 align:start position:23% line:-2
NSUserActivityの
becomeCurrentです

00:26:01.161 --> 00:26:07.334 align:start position:16% line:-2
一方 今回導入の
updateUserActivityは

00:26:07.434 --> 00:26:10.904 align:start position:34% line:-2
インターフェイス
コントローラを使用

00:26:11.071 --> 00:26:13.640 align:start position:34% line:-1
これが表示されると

00:26:13.740 --> 00:26:17.644 align:start position:27% line:-2
userActivityは
自動的に提供されます

00:26:18.212 --> 00:26:23.383 align:start position:30% line:-2
iOSなどに使用される
類似のAPIは

00:26:23.484 --> 00:26:27.421 align:start position:23% line:-2
NSUserActivityと
UIを紐づけます

00:26:28.355 --> 00:26:33.360 align:start position:30% line:-2
以上がwatchOSで
推奨する提供方法です

00:26:35.963 --> 00:26:39.733 align:start position:29% line:-2
ショートカットが
Intentで作られる時

00:26:39.833 --> 00:26:43.136 align:start position:18% line:-2
INInteraction APIで
Intentを提供できます

00:26:43.871 --> 00:26:47.241 align:start position:29% line:-2
これも以前のセッションで
既出です

00:26:48.442 --> 00:26:51.078 align:start position:29% line:-1
まずはIntentを作成

00:26:51.178 --> 00:26:54.982 align:start position:30% line:-2
ユーザに応じて
パラメータを調整します

00:26:55.449 --> 00:26:58.318 align:start position:21% line:-2
次にIntentと
INInteractionを作成

00:26:58.418 --> 00:27:02.256 align:start position:36% line:-2
提供用メソッドを
呼び出します

00:26:58.418 --> 00:27:02.256 align:start position:36% line:-2
提供用メソッドを
呼び出します

00:27:04.191 --> 00:27:09.897 align:start position:25% line:-2
もう１つ大事なのが
watchOSの予測に要る―

00:27:09.997 --> 00:27:11.632 align:start position:30% line:-1
主要ショートカットです

00:27:13.333 --> 00:27:16.904 align:start position:29% line:-2
Xcodeの
Intentエディタ内で

00:27:17.004 --> 00:27:19.773 align:start position:32% line:-2
主要ショートカットが
選べます

00:27:20.340 --> 00:27:25.045 align:start position:29% line:-2
システムに最重要の
ユースケースを示せますが

00:27:25.145 --> 00:27:27.714 align:start position:32% line:-1
それが意味するのは？

00:27:30.384 --> 00:27:34.121 align:start position:32% line:-2
主要ショートカットの
ユースケースの指定で

00:27:34.221 --> 00:27:40.160 align:start position:25% line:-2
ユーザに重要なユースケースが
システムに伝わります

00:27:41.295 --> 00:27:44.231 align:start position:29% line:-2
これをIntentごとに
行えます

00:27:45.632 --> 00:27:49.203 align:start position:14% line:-2
指定したパラメータは
Relevant Shortcuts内の

00:27:49.303 --> 00:27:52.773 align:start position:29% line:-2
パラメータのサブセットを
含みます

00:27:52.873 --> 00:27:56.143 align:start position:27% line:-1
いくつか例を見てみましょう

00:27:58.412 --> 00:28:04.251 align:start position:29% line:-2
この情報を基に より早く
ユーザの行動パターンや

00:27:58.412 --> 00:28:04.251 align:start position:29% line:-2
この情報を基に より早く
ユーザの行動パターンや

00:28:04.351 --> 00:28:09.289 align:start position:23% line:-2
関心のあるRelevant
Shortcutsが分かります

00:28:10.824 --> 00:28:15.262 align:start position:27% line:-2
ポールと私は
チャットアプリケーションで

00:28:15.362 --> 00:28:17.631 align:start position:34% line:-1
毎朝やり取りします

00:28:17.731 --> 00:28:22.803 align:start position:27% line:-2
今日の準備や
お昼のクッキーについてです

00:28:24.805 --> 00:28:27.908 align:start position:18% line:-2
これにSiri Shortcutsを
搭載し

00:28:28.008 --> 00:28:31.078 align:start position:34% line:-2
異なるパラメータを
定義しました

00:28:31.178 --> 00:28:34.681 align:start position:34% line:-2
その１つが
メールの受信者です

00:28:35.149 --> 00:28:39.520 align:start position:34% line:-2
そして もう１つは
メールの内容です

00:28:40.854 --> 00:28:44.758 align:start position:32% line:-2
ポールとは
毎朝メールで話します

00:28:44.858 --> 00:28:48.862 align:start position:32% line:-2
しかし内容は
日によって様々なので

00:28:49.263 --> 00:28:53.500 align:start position:30% line:-2
主要ショートカットには
向きません

00:28:53.600 --> 00:28:56.904 align:start position:27% line:-1
どのショートカットが適切か

00:28:57.004 --> 00:28:59.339 align:start position:34% line:-1
システムが迷います

00:28:59.439 --> 00:29:03.510 align:start position:30% line:-2
しかし メールの頻度が
非常に高く

00:28:59.439 --> 00:29:03.510 align:start position:30% line:-2
しかし メールの頻度が
非常に高く

00:29:03.610 --> 00:29:08.315 align:start position:29% line:-2
この行為はパターンとして
覚えやすいのです

00:29:10.851 --> 00:29:15.122 align:start position:27% line:-2
私は毎朝アプリケーションで
コーヒーを買います

00:29:15.823 --> 00:29:18.725 align:start position:25% line:-2
Siri Shortcuts
搭載です

00:29:19.159 --> 00:29:23.864 align:start position:34% line:-2
異なるパラメータは
コーヒーの種類

00:29:23.964 --> 00:29:27.167 align:start position:32% line:-2
砂糖やクリームなどの
トッピング

00:29:27.534 --> 00:29:31.371 align:start position:27% line:-1
コーヒーショップの場所です

00:29:31.905 --> 00:29:35.976 align:start position:32% line:-2
私は毎朝
コーヒーを買いますが

00:29:36.076 --> 00:29:40.881 align:start position:32% line:-2
どこで会議があるかで
購入場所を変えます

00:29:40.981 --> 00:29:45.018 align:start position:34% line:-2
会議がどこでも
注文したコーヒーを

00:29:45.119 --> 00:29:47.788 align:start position:34% line:-1
近場で受け取りたい

00:29:48.789 --> 00:29:52.326 align:start position:29% line:-1
場所は様々に変化するため

00:29:52.426 --> 00:29:55.262 align:start position:30% line:-2
主要ショートカットには
向きません

00:29:55.629 --> 00:29:59.867 align:start position:36% line:-2
システムの学習に
時間がかかります

00:29:59.967 --> 00:30:04.004 align:start position:30% line:-2
しかし注文内容は一定で
常にラテと

00:29:59.967 --> 00:30:04.004 align:start position:30% line:-2
しかし注文内容は一定で
常にラテと

00:30:04.104 --> 00:30:07.074 align:start position:34% line:-1
同じトッピングです

00:30:07.174 --> 00:30:10.510 align:start position:27% line:-1
主要ショートカット向きです

00:30:12.913 --> 00:30:16.150 align:start position:29% line:-1
コーヒーだけでは不十分で

00:30:16.250 --> 00:30:20.988 align:start position:32% line:-2
トッピングが加わると
条件を満たします

00:30:22.589 --> 00:30:27.861 align:start position:29% line:-2
アプリケーションを介した
情報提供の方法でした

00:30:27.961 --> 00:30:31.432 align:start position:12% line:-2
次はRelevant Shortcutsの
予測です

00:30:32.599 --> 00:30:35.702 align:start position:27% line:-1
具体例を見ながら説明します

00:30:37.037 --> 00:30:41.175 align:start position:34% line:-2
これは私が毎日使う
アプリケーションで

00:30:41.275 --> 00:30:44.278 align:start position:29% line:-1
レシピを提案してくれます

00:30:46.013 --> 00:30:50.984 align:start position:29% line:-2
夜の運動を知らせてくれる
運動用アプリケーション

00:30:52.986 --> 00:30:57.691 align:start position:34% line:-2
旅先で面白い場所を
提案してくれる―

00:30:57.791 --> 00:31:00.094 align:start position:27% line:-1
旅行ガイドアプリケーション

00:30:57.791 --> 00:31:00.094 align:start position:27% line:-1
旅行ガイドアプリケーション

00:31:01.328 --> 00:31:06.867 align:start position:27% line:-2
それぞれ３つのカテゴリーに
当てはまります

00:31:07.067 --> 00:31:09.403 align:start position:34% line:-1
“ダウンタイム”は

00:31:09.670 --> 00:31:13.607 align:start position:36% line:-2
時間や場所が
関係ないものです

00:31:14.675 --> 00:31:19.379 align:start position:32% line:-2
いつレシピが必要かは
人それぞれです

00:31:19.780 --> 00:31:23.884 align:start position:36% line:-2
しかし運動には
時間が関係します

00:31:23.984 --> 00:31:29.189 align:start position:30% line:-2
私には午後８時の通知が
最も適しています

00:31:29.890 --> 00:31:32.259 align:start position:32% line:-1
この情報でシステムは

00:31:32.359 --> 00:31:37.798 align:start position:16% line:-2
Relevant Shortcutsを
より正確に順位づけできます

00:31:39.166 --> 00:31:42.002 align:start position:27% line:-1
旅行用のアプリケーションは

00:31:42.102 --> 00:31:45.072 align:start position:32% line:-1
位置情報を判断します

00:31:45.172 --> 00:31:48.709 align:start position:30% line:-2
例えば
ゴールデンゲートパーク

00:31:48.909 --> 00:31:53.413 align:start position:29% line:-2
この情報を基に
ショートカットの関連性を

00:31:53.514 --> 00:31:56.083 align:start position:30% line:-1
より正確に予測できます

00:31:58.652 --> 00:32:04.358 align:start position:29% line:-2
時間 場所などに関わらず
追加情報をシステムに

00:31:58.652 --> 00:32:04.358 align:start position:29% line:-2
時間 場所などに関わらず
追加情報をシステムに

00:32:04.458 --> 00:32:07.895 align:start position:9% line:-2
Relevance Provider APIで
提供できます

00:32:08.028 --> 00:32:13.600 align:start position:30% line:-2
また コンテンツ表示の
最適な時期を示せます

00:32:15.903 --> 00:32:19.673 align:start position:34% line:-2
新しいコンテンツも
表示可能です

00:32:20.107 --> 00:32:23.010 align:start position:36% line:-1
この情報があれば

00:32:23.410 --> 00:32:27.414 align:start position:34% line:-2
ユーザの好みを
素早く把握できます

00:32:27.514 --> 00:32:30.818 align:start position:36% line:-2
システムの判断を
待たずにです

00:32:33.587 --> 00:32:36.657 align:start position:29% line:-2
しかし
ユーザエンゲージメントは

00:32:36.757 --> 00:32:39.493 align:start position:32% line:-1
全過程で考慮されます

00:32:39.593 --> 00:32:42.896 align:start position:16% line:-2
Relevance Providerの
有無に関わらず

00:32:42.996 --> 00:32:46.066 align:start position:34% line:-2
適切なコンテンツを
表示したいのです

00:32:49.203 --> 00:32:52.239 align:start position:29% line:-2
例えば
レシピ用アプリケーション

00:32:52.339 --> 00:32:57.711 align:start position:32% line:-2
これには時間や場所は
あまり関係ありません

00:32:58.278 --> 00:33:01.482 align:start position:32% line:-1
夕食時にも使えますし

00:32:58.278 --> 00:33:01.482 align:start position:32% line:-1
夕食時にも使えますし

00:33:01.582 --> 00:33:03.750 align:start position:38% line:-1
ランチでもいい

00:33:04.885 --> 00:33:09.957 align:start position:16% line:-2
Relevance Providerは
空白です

00:33:12.092 --> 00:33:16.430 align:start position:29% line:-2
ショートカットの関連性の
判断材料は

00:33:16.530 --> 00:33:19.166 align:start position:32% line:-1
ユーザの使用履歴です

00:33:19.266 --> 00:33:22.903 align:start position:34% line:-2
私の場合
夕食時の午後７時に

00:33:23.003 --> 00:33:26.840 align:start position:32% line:-2
このショートカットが
表示されます

00:33:28.742 --> 00:33:34.081 align:start position:29% line:-2
運動用アプリケーションで
時間を提供するのは

00:33:34.314 --> 00:33:37.484 align:start position:9% line:-1
DateRelevanceProviderです

00:33:37.584 --> 00:33:40.287 align:start position:30% line:-1
午後８時が開始時刻です

00:33:42.656 --> 00:33:45.859 align:start position:34% line:-1
特定のコンテンツが

00:33:45.959 --> 00:33:48.562 align:start position:29% line:-1
特定の時間に表示されます

00:33:49.530 --> 00:33:52.232 align:start position:32% line:-1
午後８時に近づくほど

00:33:52.332 --> 00:33:54.835 align:start position:34% line:-1
関連性が上がります

00:33:54.935 --> 00:33:56.837 align:start position:38% line:-1
確認しましょう

00:33:58.672 --> 00:34:01.742 align:start position:29% line:-1
文字盤にカードが並びます

00:33:58.672 --> 00:34:01.742 align:start position:29% line:-1
文字盤にカードが並びます

00:34:01.842 --> 00:34:06.680 align:start position:30% line:-2
今日の予定を示す通知が
一番上にあり

00:34:06.880 --> 00:34:11.217 align:start position:36% line:-2
真ん中にあるのが
ニュースの通知

00:34:11.819 --> 00:34:15.121 align:start position:34% line:-2
最後が運動に関する
通知です

00:34:19.960 --> 00:34:23.931 align:start position:36% line:-2
午前８時に
起床したとします

00:34:24.531 --> 00:34:29.536 align:start position:34% line:-2
運動に関する通知が
すでに表示中なのは

00:34:29.636 --> 00:34:34.274 align:start position:36% line:-2
ユーザの注意を
喚起するためです

00:34:34.475 --> 00:34:39.079 align:start position:32% line:-2
しかし関連性に合わせ
下に表示されます

00:34:40.179 --> 00:34:45.452 align:start position:30% line:-2
今日の予定の通知が示す
時間を過ぎると

00:34:45.552 --> 00:34:48.589 align:start position:30% line:-1
運動の通知が上に来ます

00:34:48.688 --> 00:34:52.458 align:start position:32% line:-2
午後８時に近づくほど
重要になります

00:34:54.194 --> 00:34:58.098 align:start position:36% line:-2
午後８時には
最重要事項となり

00:34:58.198 --> 00:35:03.103 align:start position:30% line:-2
忘れないために
文字盤のトップに来ます

00:34:58.198 --> 00:35:03.103 align:start position:30% line:-2
忘れないために
文字盤のトップに来ます

00:35:05.739 --> 00:35:08.575 align:start position:29% line:-1
訪問する場所を提案する―

00:35:08.675 --> 00:35:12.679 align:start position:29% line:-2
旅行用アプリケーションを
見てみます

00:35:14.648 --> 00:35:19.753 align:start position:20% line:-2
LocationRelevance
Providerで

00:35:19.853 --> 00:35:22.422 align:start position:29% line:-2
ゴールデンゲートパークを
指定

00:35:25.125 --> 00:35:29.062 align:start position:38% line:-2
該当する場所に
近づくにつれて

00:35:29.163 --> 00:35:32.800 align:start position:29% line:-1
コンテンツが表示されます

00:35:33.400 --> 00:35:36.303 align:start position:32% line:-1
その場所に近づくほど

00:35:36.403 --> 00:35:39.306 align:start position:32% line:-1
関連性が高くなります

00:35:40.607 --> 00:35:44.344 align:start position:34% line:-2
サンフランシスコに
到着すると

00:35:44.445 --> 00:35:47.414 align:start position:32% line:-1
すでに通知が見えます

00:35:47.581 --> 00:35:51.051 align:start position:27% line:-1
関連性に合わせ位置は下です

00:35:51.151 --> 00:35:54.555 align:start position:27% line:-1
しかし 目には入るでしょう

00:35:55.756 --> 00:35:58.458 align:start position:34% line:-1
位置が近くなるほど

00:35:58.559 --> 00:36:01.762 align:start position:32% line:-1
関連性は高くなります

00:35:58.559 --> 00:36:01.762 align:start position:32% line:-1
関連性は高くなります

00:36:01.862 --> 00:36:05.065 align:start position:30% line:-1
あとはタップするだけで

00:36:05.165 --> 00:36:08.102 align:start position:30% line:-1
詳細な情報を得られます

00:36:09.937 --> 00:36:14.975 align:start position:29% line:-2
位置情報の登録に使う
CLRegionの提供で

00:36:15.142 --> 00:36:18.212 align:start position:34% line:-2
２つのプロパティを
指定できます

00:36:18.312 --> 00:36:23.550 align:start position:30% line:-2
コンテンツを表示する
座標を示す緯度 経度と

00:36:23.650 --> 00:36:24.985 align:start position:43% line:-1
半径です

00:36:25.085 --> 00:36:28.889 align:start position:36% line:-2
いつコンテンツが
表示されるのか

00:36:31.425 --> 00:36:34.495 align:start position:36% line:-2
位置情報の認識を
調整する―

00:36:34.595 --> 00:36:37.831 align:start position:32% line:-1
プロパティもあります

00:36:38.565 --> 00:36:40.500 align:start position:21% line:-1
１つはnotifyOnEntry

00:36:40.634 --> 00:36:45.005 align:start position:30% line:-2
名前のとおり
ユーザが領域に入るまで

00:36:45.105 --> 00:36:48.008 align:start position:30% line:-1
待機し 通知を送ります

00:36:49.943 --> 00:36:53.480 align:start position:27% line:-1
notifyOnExitは

00:36:53.580 --> 00:36:58.919 align:start position:30% line:-2
ユーザが領域を出るまで
通知を送りません

00:36:59.920 --> 00:37:04.124 align:start position:30% line:-2
この２つのプロパティは
Siriの文字盤で

00:36:59.920 --> 00:37:04.124 align:start position:30% line:-2
この２つのプロパティは
Siriの文字盤で

00:37:04.224 --> 00:37:08.095 align:start position:29% line:-2
ジオフェンシングの役割を
果たします

00:37:10.097 --> 00:37:13.834 align:start position:23% line:-1
デフォルトの設定は“true”

00:37:14.034 --> 00:37:17.004 align:start position:38% line:-2
特定の場所との
距離に基づいて

00:37:17.104 --> 00:37:20.708 align:start position:32% line:-2
円滑に関連性の変更を
行います

00:37:23.177 --> 00:37:25.679 align:start position:29% line:-2
CLRegionの作成は
簡単です

00:37:26.480 --> 00:37:29.349 align:start position:27% line:-1
Apple Park周辺の

00:37:29.449 --> 00:37:32.986 align:start position:29% line:-1
座標と半径を入力しました

00:37:33.086 --> 00:37:36.189 align:start position:30% line:-1
２キロ以内に設定します

00:37:38.058 --> 00:37:43.230 align:start position:21% line:-2
次にnotifyOnEntryと
notifyOnExitを調整

00:37:43.530 --> 00:37:48.802 align:start position:20% line:-2
LocationRelevance
Providerはすぐ作れます

00:37:51.004 --> 00:37:53.974 align:start position:34% line:-1
ここで注意事項です

00:37:54.641 --> 00:37:57.578 align:start position:32% line:-1
位置情報の使用許可は

00:37:57.678 --> 00:38:00.447 align:start position:30% line:-1
機能の利用に不可欠です

00:37:57.678 --> 00:38:00.447 align:start position:30% line:-1
機能の利用に不可欠です

00:38:01.949 --> 00:38:08.122 align:start position:27% line:-2
バッテリー節約のため
位置情報の更新は限られます

00:38:11.024 --> 00:38:15.462 align:start position:29% line:-2
以上が特定の時間と場所の
登録方法です

00:38:15.662 --> 00:38:18.966 align:start position:29% line:-1
次はデバイスの個別化です

00:38:20.000 --> 00:38:25.239 align:start position:12% line:-2
DailyRoutineRelevance
Providerはコンテンツを

00:38:25.339 --> 00:38:28.976 align:start position:34% line:-2
有効な時間や場所で
表示します

00:38:31.011 --> 00:38:36.016 align:start position:32% line:-2
それらの時間や場所は
個別化されたものです

00:38:38.318 --> 00:38:41.355 align:start position:30% line:-1
朝の例を見てみましょう

00:38:42.489 --> 00:38:45.959 align:start position:36% line:-2
起床と同時に
コンテンツを表示

00:38:46.360 --> 00:38:49.463 align:start position:29% line:-1
自社の気象データソースに

00:38:49.563 --> 00:38:52.299 align:start position:30% line:-1
この機能は応用済みです

00:38:52.399 --> 00:38:56.570 align:start position:27% line:-2
起きてすぐ天気予報の概要が
提供され

00:38:56.670 --> 00:39:00.507 align:start position:36% line:-2
他のコンテンツが
あとに続きます

00:38:56.670 --> 00:39:00.507 align:start position:36% line:-2
他のコンテンツが
あとに続きます

00:39:02.476 --> 00:39:04.511 align:start position:38% line:-1
夜はどうなるか

00:39:04.645 --> 00:39:08.448 align:start position:30% line:-2
就寝前に
コンテンツを表示します

00:39:08.549 --> 00:39:12.686 align:start position:27% line:-2
新しいwatchOS 5で
導入した―

00:39:12.786 --> 00:39:16.557 align:start position:30% line:-2
１日の心拍数を通知する
機能です

00:39:18.392 --> 00:39:23.397 align:start position:5% line:-2
状況指定だけのDaily
RoutineRelevanceProviderも

00:39:23.497 --> 00:39:24.565 align:start position:43% line:-1
この場合

00:39:24.665 --> 00:39:29.770 align:start position:29% line:-2
起床時のコンテンツ表示は
容易にできます

00:39:32.206 --> 00:39:35.075 align:start position:30% line:-1
朝と夜に見られる動作は

00:39:35.175 --> 00:39:38.245 align:start position:11% line:-2
DateRelevanceProviderに
類似します

00:39:38.712 --> 00:39:43.917 align:start position:27% line:-2
違いは 自動で日付の選択が
行われるかどうかです

00:39:46.453 --> 00:39:48.622 align:start position:34% line:-1
コンテンツの表示が

00:39:48.722 --> 00:39:51.825 align:start position:29% line:-1
有効な状況は複数あります

00:39:51.925 --> 00:39:56.130 align:start position:36% line:-2
それは自宅や職場
学校 あるいは―

00:39:57.097 --> 00:39:58.599 align:start position:39% line:-1
ジムなどです

00:39:59.900 --> 00:40:03.103 align:start position:5% line:-2
これらのDaily
RoutineRelevanceProviderも

00:39:59.900 --> 00:40:03.103 align:start position:5% line:-2
これらのDaily
RoutineRelevanceProviderも

00:40:03.203 --> 00:40:05.906 align:start position:34% line:-1
状況の設定だけです

00:40:08.408 --> 00:40:11.879 align:start position:32% line:-2
そして
ここで見られる動作も

00:40:12.112 --> 00:40:14.815 align:start position:20% line:-2
LocationRelevance
Providerに類似します

00:40:14.915 --> 00:40:18.752 align:start position:34% line:-2
ただし場所の選択は
自動で行われます

00:40:19.219 --> 00:40:21.622 align:start position:38% line:-1
ユーザの位置で

00:40:21.722 --> 00:40:24.825 align:start position:32% line:-2
コンテンツの関連性が
変わります

00:40:26.793 --> 00:40:31.765 align:start position:11% line:-2
以上がRelevant Shortcutsの
予測について

00:40:31.865 --> 00:40:35.903 align:start position:32% line:-2
そして最適な状況での
コンテンツ表示を

00:40:36.003 --> 00:40:39.039 align:start position:32% line:-1
可能にする方法でした

00:40:39.907 --> 00:40:44.244 align:start position:30% line:-2
次はSiriの文字盤の
活用方法です

00:40:45.312 --> 00:40:49.683 align:start position:30% line:-2
文字盤を改良する過程で
学びました

00:40:51.418 --> 00:40:55.289 align:start position:32% line:-2
文字盤で
大きな力を発揮する―

00:40:55.389 --> 00:40:58.692 align:start position:32% line:-2
２種類のコンテンツが
あります

00:40:59.693 --> 00:41:02.129 align:start position:27% line:-1
１つは“一目で分かる情報”

00:40:59.693 --> 00:41:02.129 align:start position:27% line:-1
１つは“一目で分かる情報”

00:41:02.262 --> 00:41:07.101 align:start position:30% line:-2
手首を上げると
情報の概要が瞬時に現れ

00:41:07.201 --> 00:41:10.671 align:start position:36% line:-2
詳細はタップで
簡単に見られます

00:41:11.739 --> 00:41:13.941 align:start position:29% line:-1
もう１つは“タップ機能”

00:41:14.041 --> 00:41:17.811 align:start position:36% line:-2
プラッターを
タップするだけで

00:41:17.978 --> 00:41:20.948 align:start position:30% line:-1
複雑な動作が完了します

00:41:22.416 --> 00:41:27.021 align:start position:34% line:-2
一目で分かる情報の
例を見ましょう

00:41:27.554 --> 00:41:32.159 align:start position:34% line:-2
文字盤に目をやれば
常にレシピの候補が

00:41:32.259 --> 00:41:35.229 align:start position:30% line:-1
簡潔に表示されています

00:41:35.329 --> 00:41:39.266 align:start position:30% line:-2
それを作るか外食するか
すぐ判断できます

00:41:40.334 --> 00:41:44.137 align:start position:36% line:-2
家路につく際に
タップするだけで

00:41:44.805 --> 00:41:48.775 align:start position:36% line:-2
食料品店に寄るか
判断できます

00:41:53.247 --> 00:41:58.352 align:start position:30% line:-2
この情報を表示する際の
留意点があります

00:41:58.885 --> 00:42:03.757 align:start position:29% line:-2
ショートカットで示すのは
情報の要点です

00:41:58.885 --> 00:42:03.757 align:start position:29% line:-2
ショートカットで示すのは
情報の要点です

00:42:04.691 --> 00:42:07.794 align:start position:32% line:-1
ユーザが１日を通して

00:42:07.895 --> 00:42:11.732 align:start position:34% line:-2
すぐに見たい情報を
表示します

00:42:14.167 --> 00:42:18.539 align:start position:32% line:-2
ユーザによるタップで
アプリケーションから

00:42:18.639 --> 00:42:20.874 align:start position:32% line:-1
詳細情報を提供します

00:42:21.108 --> 00:42:24.445 align:start position:27% line:-1
タップが意図的ではない場合

00:42:24.545 --> 00:42:28.682 align:start position:29% line:-2
バックグラウンドタスクは
邪魔になります

00:42:31.518 --> 00:42:33.053 align:start position:41% line:-1
システムが

00:42:33.153 --> 00:42:38.725 align:start position:27% line:-2
自動でバックグラウンドでの
更新を行うからです

00:42:38.825 --> 00:42:44.465 align:start position:29% line:-2
なので面白いコンテンツを
準備しておくことです

00:42:46.900 --> 00:42:50.771 align:start position:36% line:-2
新たなデータを
得る時があります

00:42:50.871 --> 00:42:55.742 align:start position:32% line:-2
アプリケーションが
起動される時などです

00:42:55.943 --> 00:42:59.947 align:start position:9% line:-2
その時 Relevant Shortcutsや
コンテンツも

00:43:00.047 --> 00:43:03.050 align:start position:29% line:-1
最新で面白いものにします

00:43:05.652 --> 00:43:09.189 align:start position:29% line:-1
ショートカットが適時なら

00:43:09.289 --> 00:43:12.226 align:start position:32% line:-1
情報提供してください

00:43:12.326 --> 00:43:15.929 align:start position:34% line:-2
それで最適な時期に
表示できます

00:43:18.532 --> 00:43:24.371 align:start position:30% line:-2
一目で分かる情報の次は
タップ機能についてです

00:43:26.273 --> 00:43:28.575 align:start position:34% line:-1
ランニングの通知が

00:43:28.675 --> 00:43:32.980 align:start position:29% line:-2
アプリケーションから届き
すぐ見られます

00:43:34.882 --> 00:43:40.287 align:start position:32% line:-2
実行を確認する画面が
タップで表示されます

00:43:41.188 --> 00:43:43.424 align:start position:36% line:-1
タップは２回だけ

00:43:43.524 --> 00:43:48.195 align:start position:34% line:-2
アプリケーションを
探し回ることなく

00:43:48.295 --> 00:43:49.997 align:start position:39% line:-1
運動開始です

00:43:50.097 --> 00:43:54.501 align:start position:36% line:-2
実行に必要なのは
２タップだけです

00:43:57.204 --> 00:44:00.674 align:start position:34% line:-2
タップ機能に関する
留意点です

00:43:57.204 --> 00:44:00.674 align:start position:34% line:-2
タップ機能に関する
留意点です

00:44:01.809 --> 00:44:05.212 align:start position:14% line:-2
Intentの処理は
SiriKitのExtension内です

00:44:05.312 --> 00:44:09.850 align:start position:30% line:-2
バックグラウンドで
自動的に実行されるので

00:44:09.950 --> 00:44:13.987 align:start position:36% line:-2
画面の切り替えは
必要ありません

00:44:16.023 --> 00:44:18.992 align:start position:29% line:-1
システム承認UIの表示は

00:44:19.093 --> 00:44:23.964 align:start position:32% line:-2
ユーザに実行の意思を
確認するためです

00:44:27.067 --> 00:44:31.238 align:start position:16% line:-2
Relevant Shortcutsを
十分に特定すれば

00:44:31.471 --> 00:44:36.243 align:start position:30% line:-2
実行するのに
追加の承認は要りません

00:44:37.111 --> 00:44:40.748 align:start position:29% line:-2
ユーザがショートカットに
タップすれば

00:44:40.848 --> 00:44:45.319 align:start position:29% line:-2
ユーザ情報を
入手する必要もありません

00:44:45.419 --> 00:44:50.791 align:start position:18% line:-2
SiriKitのExtensionが
バックグラウンドで動作します

00:44:54.127 --> 00:44:59.199 align:start position:30% line:-2
ユーザの間で
よく使われるタスクこそ

00:44:59.299 --> 00:45:02.469 align:start position:16% line:-2
Relevant Shortcutsに
最適です

00:44:59.299 --> 00:45:02.469 align:start position:16% line:-2
Relevant Shortcutsに
最適です

00:45:02.569 --> 00:45:06.040 align:start position:36% line:-2
素早いアクセスが
求められます

00:45:08.509 --> 00:45:11.678 align:start position:16% line:-2
Relevant Shortcutsの
作成は

00:45:11.812 --> 00:45:15.849 align:start position:29% line:-2
頻繁に行い
システムに提供しましょう

00:45:15.949 --> 00:45:20.821 align:start position:29% line:-2
ユーザが常に
アクセスできるようにです

00:45:21.321 --> 00:45:23.991 align:start position:30% line:-1
バックグラウンド処理で

00:45:24.091 --> 00:45:27.861 align:start position:29% line:-2
アプリケーションの遅延を
回避します

00:45:30.063 --> 00:45:32.566 align:start position:16% line:-1
Relevant Shortcutsと

00:45:32.666 --> 00:45:37.638 align:start position:29% line:-2
Siriの文字盤について
話しました

00:45:39.940 --> 00:45:43.777 align:start position:36% line:-2
重要で魅力的な
コンテンツこそが

00:45:43.877 --> 00:45:47.981 align:start position:36% line:-2
ユーザが文字盤で
見たいものです

00:45:48.082 --> 00:45:51.752 align:start position:36% line:-2
文字盤のトップに
表示されるのです

00:45:54.388 --> 00:45:57.591 align:start position:34% line:-2
watchOSの
アプリケーションは

00:45:57.858 --> 00:46:01.328 align:start position:34% line:-2
バックグラウンドで
更新が可能

00:45:57.858 --> 00:46:01.328 align:start position:34% line:-2
バックグラウンドで
更新が可能

00:46:01.428 --> 00:46:06.600 align:start position:32% line:-2
そしてタップ後に
待ち時間はありません

00:46:08.669 --> 00:46:10.904 align:start position:36% line:-1
もし質問があれば

00:46:11.004 --> 00:46:14.808 align:start position:34% line:-2
後ほどのラボで
この内容に触れます

00:46:15.142 --> 00:46:20.480 align:start position:30% line:-2
皆さんが生み出す体験を
楽しみにしています

00:46:20.748 --> 00:46:21.415 align:start position:41% line:-1
ありがとう

00:46:21.515 --> 00:46:24.585 align:start position:43% line:-1
(拍手)
