WEBVTT

00:00:07.074 --> 00:00:16.717 align:start position:43% line:-1
(音楽)

00:00:20.187 --> 00:00:23.290 align:start position:43% line:-1
(拍手)

00:00:23.390 --> 00:00:25.392 align:start position:41% line:-1
こんにちは

00:00:25.492 --> 00:00:30.097 align:start position:0% line:-2
Managing Documents In Your iOS
Appsにようこそ

00:00:30.731 --> 00:00:35.002 align:start position:29% line:-2
ドキュメント管理チームの
ブランドンです

00:00:35.269 --> 00:00:39.173 align:start position:32% line:-2
同僚のトマとロニーも
後に登壇します

00:00:40.741 --> 00:00:44.978 align:start position:25% line:-2
iOSでのドキュメント管理の
概要を説明した後

00:00:45.078 --> 00:00:47.581 align:start position:34% line:-1
新機能を説明します

00:00:48.282 --> 00:00:54.521 align:start position:7% line:-2
Document Management APIの
使い方をトマが説明し

00:00:54.888 --> 00:01:01.094 align:start position:21% line:-2
最後に Appを向上させるコツを
ロニーが解説します

00:00:54.888 --> 00:01:01.094 align:start position:21% line:-2
最後に Appを向上させるコツを
ロニーが解説します

00:01:03.230 --> 00:01:07.334 align:start position:23% line:-1
iOSでのドキュメント管理は―

00:01:08.368 --> 00:01:10.304 align:start position:30% line:-1
複数の技術の集合体です

00:01:10.404 --> 00:01:13.340 align:start position:25% line:-1
Appデベロッパ用のAPIや

00:01:13.874 --> 00:01:16.844 align:start position:20% line:-2
クラウドベンダ用の
File Provider API

00:01:17.244 --> 00:01:19.112 align:start position:29% line:-1
ファイルAppもあります

00:01:20.981 --> 00:01:22.115 align:start position:36% line:-1
iOS 11では

00:01:22.216 --> 00:01:24.885 align:start position:0% line:-2
UIDocumentBrowserViewController
を発表しました

00:01:24.985 --> 00:01:28.889 align:start position:0% line:-2
UIDocumentPickerViewController
も大幅に改善されています

00:01:30.057 --> 00:01:34.394 align:start position:30% line:-2
これらのコントローラは
クラウドベンダの

00:01:34.494 --> 00:01:37.998 align:start position:27% line:-2
ファイルの管理とブラウズを
可能にします

00:01:38.298 --> 00:01:42.336 align:start position:32% line:-2
クラウドベンダ全体の
検索も可能です

00:01:43.170 --> 00:01:45.506 align:start position:25% line:-1
フォルダをお気に入りにすると

00:01:45.606 --> 00:01:48.208 align:start position:29% line:-1
サイドバーに表示されます

00:01:48.542 --> 00:01:52.412 align:start position:29% line:-2
またファイルをタグ付けし
整理できます

00:01:53.046 --> 00:01:56.917 align:start position:25% line:-2
使用したファイルは
最近使った項目に表示されます

00:02:00.087 --> 00:02:03.524 align:start position:20% line:-2
UIDocumentBrowser
ViewControllerにより

00:02:03.624 --> 00:02:09.395 align:start position:25% line:-2
ユーザはファイルAppと同じ
エクスペリエンスが得られます

00:02:09.663 --> 00:02:13.000 align:start position:32% line:-2
文書ブラウザの提供は
不要となります

00:02:14.301 --> 00:02:18.071 align:start position:30% line:-1
その分 表示や編集での

00:02:18.405 --> 00:02:20.941 align:start position:30% line:-2
エクスペリエンス向上に
集中できます

00:02:21.608 --> 00:02:23.110 align:start position:30% line:-1
まずは昨年のセッション

00:02:23.210 --> 00:02:27.447 align:start position:0% line:-2
Building Great Document-based
Apps in iOSをご覧ください

00:02:29.783 --> 00:02:32.419 align:start position:29% line:-2
クラウドベンダ用APIも
あります

00:02:33.654 --> 00:02:35.856 align:start position:16% line:-1
File Provider APIです

00:02:36.290 --> 00:02:38.725 align:start position:7% line:-1
File Provider Extensionや

00:02:38.826 --> 00:02:43.697 align:start position:21% line:-2
サインインなどのUIアクションを
書くために使用されます

00:02:45.899 --> 00:02:50.771 align:start position:21% line:-2
ユーザによるファイルアクセスには
必要ありません

00:02:53.240 --> 00:02:55.642 align:start position:7% line:-2
File Provider Extensionを
書く場合に

00:02:55.742 --> 00:02:59.246 align:start position:0% line:-2
UIDocumentBrowserViewController
に表示されます

00:02:59.346 --> 00:03:02.182 align:start position:25% line:-1
Locationsの下ですね

00:02:59.346 --> 00:03:02.182 align:start position:25% line:-1
Locationsの下ですね

00:03:03.851 --> 00:03:05.118 align:start position:34% line:-1
またサインインには

00:03:05.485 --> 00:03:09.957 align:start position:9% line:-2
FPUIActionExtensionView
Controllerが使用されています

00:03:10.257 --> 00:03:11.258 align:start position:39% line:-1
これにより―

00:03:11.358 --> 00:03:15.696 align:start position:27% line:-2
ユーザは より簡単に
サービスにログインできます

00:03:15.996 --> 00:03:17.865 align:start position:34% line:-1
例を見てみましょう

00:03:20.100 --> 00:03:22.069 align:start position:34% line:-1
サインインの例です

00:03:22.803 --> 00:03:28.175 align:start position:25% line:-2
ユーザはワークフローを
中断せずにサインインできます

00:03:28.275 --> 00:03:32.579 align:start position:30% line:-2
Appから出ることなく
作業を続けられるのです

00:03:34.047 --> 00:03:37.784 align:start position:36% line:-2
避けるべき例も
お見せしましょう

00:03:38.018 --> 00:03:40.554 align:start position:34% line:-1
UI要素の重複です

00:03:40.654 --> 00:03:43.957 align:start position:36% line:-2
取り消しボタンが
２つありますよね

00:03:45.025 --> 00:03:46.927 align:start position:30% line:-1
他の例も見てみましょう

00:03:47.494 --> 00:03:49.329 align:start position:29% line:-1
Appを立ち上げるだけの

00:03:49.429 --> 00:03:52.533 align:start position:34% line:-2
サインインボタンも
避けるべきです

00:03:52.966 --> 00:03:56.870 align:start position:30% line:-2
ユーザのワークフローを
妨げてしまいます

00:03:58.772 --> 00:04:01.909 align:start position:32% line:-2
昨年 これらは多くの
デベロッパや

00:03:58.772 --> 00:04:01.909 align:start position:32% line:-2
昨年 これらは多くの
デベロッパや

00:04:02.009 --> 00:04:04.811 align:start position:36% line:-2
クラウドベンダに
採用されました

00:04:05.112 --> 00:04:08.148 align:start position:36% line:-2
多くのAppにも
使用されています

00:04:08.615 --> 00:04:10.517 align:start position:36% line:-1
未使用の方はぜひ

00:04:10.617 --> 00:04:14.021 align:start position:0% line:-2
UIDocumentBrowserViewController
を試してください

00:04:14.321 --> 00:04:19.827 align:start position:7% line:-2
File Provider Extensionを
未提供の方もお試しください

00:04:20.861 --> 00:04:22.663 align:start position:30% line:-1
次は新機能についてです

00:04:24.598 --> 00:04:26.300 align:start position:34% line:-1
クラウドベンダが―

00:04:26.400 --> 00:04:31.071 align:start position:7% line:-2
File Provider Extensionの
作成に苦労している

00:04:31.338 --> 00:04:34.241 align:start position:30% line:-2
そう聞いて
新ツールを開発しました

00:04:34.341 --> 00:04:37.144 align:start position:4% line:-1
File Provider-Validationです

00:04:37.644 --> 00:04:40.914 align:start position:32% line:-2
これはテストの実行を
サポートし

00:04:41.014 --> 00:04:45.152 align:start position:25% line:-2
問題の表示と
修正の手助けをするツールです

00:04:45.385 --> 00:04:48.555 align:start position:29% line:-2
デベロッパWebサイトで
ダウンロードできます

00:04:48.922 --> 00:04:52.159 align:start position:32% line:-2
ツールには次のものが
含まれています

00:04:52.593 --> 00:04:57.464 align:start position:5% line:-2
File Provider Extension用の
ソースファイルと

00:04:57.664 --> 00:05:01.668 align:start position:16% line:-1
iPad用のiOSアプリケーションです

00:04:57.664 --> 00:05:01.668 align:start position:16% line:-1
iPad用のiOSアプリケーションです

00:05:02.936 --> 00:05:08.742 align:start position:20% line:-2
プロジェクトを修正し そのAppを
iPadにインストールすると

00:05:08.842 --> 00:05:11.111 align:start position:29% line:-1
このような画面になります

00:05:11.745 --> 00:05:14.848 align:start position:11% line:-2
“File Provider...”が左側に
表示されます

00:05:14.948 --> 00:05:17.484 align:start position:34% line:-2
それをタップし
実行ボタンを押すと

00:05:17.584 --> 00:05:21.455 align:start position:7% line:-2
File Provider Extensionの
テストが実行されます

00:05:22.155 --> 00:05:25.726 align:start position:34% line:-2
そして成功と失敗が
リスト化されます

00:05:25.926 --> 00:05:30.731 align:start position:30% line:-2
失敗をタップし
コードを修正しましょう

00:05:31.131 --> 00:05:35.102 align:start position:32% line:-2
これは木曜と金曜の
ラボでサポートします

00:05:38.405 --> 00:05:43.010 align:start position:25% line:-2
なお 今年発表された
Siriのショートカットにも

00:05:43.110 --> 00:05:47.681 align:start position:7% line:-2
File Provider Extensionが
対応します

00:05:48.248 --> 00:05:53.253 align:start position:30% line:-2
これは 最近開いたか
作成したドキュメントを

00:05:53.887 --> 00:05:58.258 align:start position:30% line:-2
検索またはロック画面に
表示します

00:05:59.426 --> 00:06:02.496 align:start position:29% line:-2
またユーザはデバイス間で
同期された―

00:05:59.426 --> 00:06:02.496 align:start position:29% line:-2
またユーザはデバイス間で
同期された―

00:06:02.729 --> 00:06:05.365 align:start position:25% line:-1
ショートカットを作成できます

00:06:05.532 --> 00:06:08.035 align:start position:29% line:-1
同期している点が重要です

00:06:08.569 --> 00:06:11.171 align:start position:32% line:-1
これを実現するには―

00:06:11.271 --> 00:06:15.609 align:start position:23% line:-2
File Providerは
デバイス間にわたる各ファイルに

00:06:15.709 --> 00:06:18.979 align:start position:30% line:-2
固有の識別子を
使用する必要があります

00:06:19.913 --> 00:06:22.216 align:start position:39% line:-1
このためには

00:06:22.316 --> 00:06:25.986 align:start position:7% line:-2
File Provider Extensionで
Siriショートカットを有効にします

00:06:26.086 --> 00:06:31.525 align:start position:0% line:-2
NSFileProviderUsesUniqueItem
IdentifiersAcrossDevicesを

00:06:31.625 --> 00:06:34.761 align:start position:7% line:-2
File Provider Extensionの
Info.plistファイルに追加します

00:06:35.028 --> 00:06:38.198 align:start position:23% line:-2
あとはApple Storeに
提出するだけです

00:06:39.299 --> 00:06:42.102 align:start position:34% line:-2
デベロッパは何も
しなくていいのです

00:06:42.603 --> 00:06:44.872 align:start position:21% line:-1
Siriのショートカットの詳細は

00:06:45.038 --> 00:06:48.308 align:start position:14% line:-2
Introduction to Siri
Shortcutsをご覧ください

00:06:50.477 --> 00:06:51.712 align:start position:43% line:-1
今年は―

00:06:53.614 --> 00:06:56.783 align:start position:23% line:-2
Particles見本Appを
リリースします

00:06:57.117 --> 00:07:02.322 align:start position:0% line:-2
UIDocumentBrowserViewController
のデモに使用したコードです

00:06:57.117 --> 00:07:02.322 align:start position:0% line:-2
UIDocumentBrowserViewController
のデモに使用したコードです

00:07:02.890 --> 00:07:04.191 align:start position:41% line:-1
これですね

00:07:04.958 --> 00:07:09.930 align:start position:0% line:-2
UIDocumentBrowserViewController
が主なView Controllerで―

00:07:11.031 --> 00:07:13.200 align:start position:29% line:-2
ファイルのフォーマットを
定義します

00:07:15.269 --> 00:07:17.371 align:start position:30% line:-1
そして状態復旧を実行し

00:07:18.505 --> 00:07:22.342 align:start position:0% line:-2
UIDocumentPickerViewController
でアセットをインポートします

00:07:23.310 --> 00:07:25.112 align:start position:25% line:-1
今日からダウンロード可能です

00:07:25.212 --> 00:07:29.550 align:start position:20% line:-1
WWDCのAppにリンクがあります

00:07:30.684 --> 00:07:32.186 align:start position:18% line:-1
Particlesについては以上です

00:07:33.287 --> 00:07:36.890 align:start position:25% line:-1
ここからはトマがご説明します

00:07:37.958 --> 00:07:41.862 align:start position:43% line:-1
(拍手)

00:07:41.962 --> 00:07:43.096 align:start position:41% line:-1
こんにちは

00:07:43.197 --> 00:07:46.233 align:start position:21% line:-1
ソフトウェアエンジニアのトマです

00:07:46.433 --> 00:07:49.303 align:start position:23% line:-1
iOSのドキュメント管理機能を

00:07:49.403 --> 00:07:53.740 align:start position:29% line:-2
App内で活用する方法を
説明します

00:07:54.842 --> 00:08:00.414 align:start position:25% line:-2
まず ドキュメントピッカーと
文書ブラウザの説明と

00:07:54.842 --> 00:08:00.414 align:start position:25% line:-2
まず ドキュメントピッカーと
文書ブラウザの説明と

00:08:00.781 --> 00:08:02.916 align:start position:34% line:-1
使い方を解説します

00:08:03.483 --> 00:08:08.222 align:start position:18% line:-2
その後 Particles Appに
ドキュメントピッカーを追加

00:08:09.256 --> 00:08:12.259 align:start position:27% line:-1
最後にドキュメントタイプと

00:08:12.359 --> 00:08:14.995 align:start position:23% line:-1
Xcodeでの設定を説明します

00:08:17.197 --> 00:08:21.468 align:start position:27% line:-2
ドキュメントとの相互作用が
意味するものは？

00:08:22.402 --> 00:08:26.173 align:start position:32% line:-1
ユーザにUIを提供し

00:08:26.273 --> 00:08:29.643 align:start position:34% line:-2
ドキュメント管理を
可能にすることです

00:08:29.910 --> 00:08:32.779 align:start position:30% line:-2
Appコンテナ内の
ドキュメントが対象です

00:08:33.947 --> 00:08:37.384 align:start position:32% line:-2
最近それらの多くは
クラウド上にあります

00:08:37.650 --> 00:08:41.587 align:start position:29% line:-2
故にユーザはクラウド上の
ドキュメントへの

00:08:41.822 --> 00:08:43.756 align:start position:34% line:-1
アクセスが必要です

00:08:45.058 --> 00:08:46.260 align:start position:36% line:-1
これを実現する―

00:08:47.427 --> 00:08:50.497 align:start position:32% line:-1
２つの方法があります

00:08:51.231 --> 00:08:52.566 align:start position:30% line:-1
ドキュメントピッカーと

00:08:52.699 --> 00:08:54.168 align:start position:36% line:-1
文書ブラウザです

00:08:55.135 --> 00:08:57.604 align:start position:25% line:-1
この２つの違いは何でしょう？

00:08:59.506 --> 00:09:05.212 align:start position:23% line:-2
いずれも iOSデバイスまたは
クラウド上にあるファイルの

00:08:59.506 --> 00:09:05.212 align:start position:23% line:-2
いずれも iOSデバイスまたは
クラウド上にあるファイルの

00:09:05.312 --> 00:09:07.281 align:start position:34% line:-1
ブラウズが可能です

00:09:08.282 --> 00:09:11.385 align:start position:27% line:-2
別のAppからのアクセスも
可能です

00:09:13.754 --> 00:09:16.390 align:start position:23% line:-1
しかし それぞれ用途が違います

00:09:17.591 --> 00:09:21.929 align:start position:27% line:-2
ドキュメントピッカーは
ファイルにアクセスするため

00:09:22.362 --> 00:09:26.867 align:start position:36% line:-2
ユーザが一時的に
使用するものです

00:09:28.702 --> 00:09:30.737 align:start position:32% line:-1
一方 文書ブラウザは

00:09:31.505 --> 00:09:35.542 align:start position:21% line:-1
Appの主な文書ブラウズUIです

00:09:38.879 --> 00:09:41.882 align:start position:23% line:-1
文書ブラウザから説明しましょう

00:09:45.152 --> 00:09:46.553 align:start position:38% line:-1
文書ブラウザは

00:09:46.787 --> 00:09:51.191 align:start position:29% line:-2
UIのAppを起動すると
表示されるものです

00:09:52.292 --> 00:09:54.361 align:start position:25% line:-1
ドキュメントベースのAppは

00:09:54.595 --> 00:09:59.032 align:start position:30% line:-2
文書ブラウザを使って
表示するといいでしょう

00:10:00.200 --> 00:10:02.002 align:start position:41% line:-1
その場合―

00:10:02.603 --> 00:10:06.073 align:start position:30% line:-2
Appを起動すると
このように表示されます

00:10:07.174 --> 00:10:11.378 align:start position:29% line:-2
ユーザはすぐにファイルを
使えるわけです

00:10:13.380 --> 00:10:15.782 align:start position:30% line:-2
文書ブラウザは
フルスクリーン表示です

00:10:16.250 --> 00:10:21.455 align:start position:27% line:-2
Appが扱うドキュメントを
開いたり管理できます

00:10:25.292 --> 00:10:28.795 align:start position:30% line:-2
ファイルAppと同様の
機能があります

00:10:29.530 --> 00:10:33.233 align:start position:30% line:-2
検索 タグ お気に入り
最近使った項目など

00:10:33.333 --> 00:10:37.471 align:start position:36% line:-2
編集済みの機能が
すべて無料です

00:10:40.908 --> 00:10:42.576 align:start position:30% line:-1
カスタマイズも可能です

00:10:43.076 --> 00:10:48.182 align:start position:29% line:-2
右上のボタンのように
独自のボタンに変更したり

00:10:48.715 --> 00:10:51.818 align:start position:30% line:-2
Appの見た目に
合わせることもできます

00:10:52.186 --> 00:10:55.656 align:start position:21% line:-2
NumbersとKeynoteは
見た目が異なりますが

00:10:55.789 --> 00:10:58.959 align:start position:9% line:-2
いずれもDocumentView
BrowserControllerがベースです

00:11:00.794 --> 00:11:04.231 align:start position:30% line:-2
ユーザがドキュメントを
開きます

00:11:04.565 --> 00:11:09.169 align:start position:32% line:-2
すると独自のUIが
ブラウザ上に展開され

00:11:09.336 --> 00:11:11.905 align:start position:23% line:-1
ドキュメントUIを表示できます

00:11:12.139 --> 00:11:16.276 align:start position:32% line:-2
文書ブラウザは
Appの開始点なので

00:11:16.410 --> 00:11:19.546 align:start position:16% line:-2
ルートView Controllerに
設定するといいでしょう

00:11:20.714 --> 00:11:24.117 align:start position:25% line:-1
しかし昨年のフィードバックで

00:11:24.484 --> 00:11:27.955 align:start position:11% line:-2
ルートView Controllerの作成が
難しいと聞きました

00:11:29.156 --> 00:11:33.527 align:start position:27% line:-2
そこで昨年のガイドラインの
補足説明をします

00:11:34.695 --> 00:11:38.765 align:start position:23% line:-2
文書ブラウザはフルスクリーンで
モーダル表示できます

00:11:40.467 --> 00:11:42.369 align:start position:36% line:-1
起動後すぐにです

00:11:43.704 --> 00:11:47.708 align:start position:29% line:-2
とはいえ 文書ブラウザは
Appの開始点です

00:11:48.342 --> 00:11:53.313 align:start position:30% line:-2
まずドキュメントが
表示されるべきでしょう

00:11:55.849 --> 00:12:01.722 align:start position:25% line:-2
従って ブラウザ外に出られる
仕様は推奨しません

00:11:55.849 --> 00:12:01.722 align:start position:25% line:-2
従って ブラウザ外に出られる
仕様は推奨しません

00:12:03.023 --> 00:12:05.726 align:start position:25% line:-1
ブラウザを隠したいのであれば

00:12:06.260 --> 00:12:11.431 align:start position:21% line:-2
後にお話しする
ドキュメントピッカーがお勧めです

00:12:14.001 --> 00:12:17.538 align:start position:11% line:-2
新しいDocumentViewBrowser
Controllerの始め方は？

00:12:18.505 --> 00:12:20.474 align:start position:21% line:-1
Xcodeで新たなAppを作ると

00:12:20.807 --> 00:12:23.443 align:start position:21% line:-1
Appテンプレートが使用できます

00:12:24.344 --> 00:12:28.448 align:start position:0% line:-2
DocumentViewBrowserController
ベースとなるわけです

00:12:29.316 --> 00:12:30.851 align:start position:38% line:-1
既存のAppに

00:12:30.951 --> 00:12:35.122 align:start position:0% line:-2
DocumentViewBrowserControllerを
追加することもできます

00:12:35.856 --> 00:12:38.525 align:start position:18% line:-2
文書ブラウザをStoryboardに
ドラッグし

00:12:38.859 --> 00:12:43.063 align:start position:2% line:-2
Is Initial View Controllerを
チェックします

00:12:47.501 --> 00:12:51.271 align:start position:0% line:-2
DocumentViewBrowserControllerで
カスタマイズできます

00:12:52.139 --> 00:12:55.776 align:start position:27% line:-2
独自のボタンを
バーやメニューに追加したり

00:12:57.044 --> 00:13:01.415 align:start position:30% line:-2
色やテーマを設定して
Appに合わせられます

00:12:57.044 --> 00:13:01.415 align:start position:30% line:-2
色やテーマを設定して
Appに合わせられます

00:13:04.751 --> 00:13:09.022 align:start position:23% line:-2
ドキュメントを開く
アニメーションも変更できるため

00:13:09.122 --> 00:13:14.795 align:start position:29% line:-2
サムネールから編集UIに
ズームすることも可能です

00:13:14.928 --> 00:13:19.700 align:start position:29% line:-2
詳細は昨年のセッションを
ご覧ください

00:13:22.269 --> 00:13:23.871 align:start position:29% line:-1
ブランドンが触れたとおり

00:13:24.538 --> 00:13:30.043 align:start position:23% line:-2
そのセッションに基づいた
サンプルコードも提供しています

00:13:32.980 --> 00:13:37.684 align:start position:25% line:-2
さて ドキュメントピッカーは
また違うものです

00:13:39.353 --> 00:13:43.757 align:start position:25% line:-2
クラウド上や他のAppにある
ドキュメントや

00:13:43.857 --> 00:13:45.726 align:start position:30% line:-1
アセットを開くものです

00:13:46.026 --> 00:13:50.564 align:start position:27% line:-2
しかしファイルを選択すると
消えていきます

00:13:51.465 --> 00:13:54.601 align:start position:25% line:-1
これはメールで使われています

00:13:55.669 --> 00:13:58.772 align:start position:23% line:-1
メールにファイルを添付するには

00:13:59.006 --> 00:14:01.675 align:start position:23% line:-2
“添付ファイルを追加”ボタンを
押します

00:13:59.006 --> 00:14:01.675 align:start position:23% line:-2
“添付ファイルを追加”ボタンを
押します

00:14:02.176 --> 00:14:06.380 align:start position:29% line:-2
このシートが
ドキュメントピッカーです

00:14:06.947 --> 00:14:11.618 align:start position:25% line:-2
添付するファイルを選択すると
シートは消えます

00:14:13.287 --> 00:14:15.522 align:start position:30% line:-1
iWorkでも同様です

00:14:15.856 --> 00:14:20.961 align:start position:27% line:-2
Pagesのドキュメントに
PDFを挿入する場合

00:14:21.962 --> 00:14:26.567 align:start position:29% line:-2
“挿入元”ボタンを押して
ファイルを選択すると

00:14:27.000 --> 00:14:28.869 align:start position:36% line:-1
シートは消えます

00:14:29.770 --> 00:14:33.941 align:start position:29% line:-2
ユーザがクラウド上にある
ファイルを開けるように

00:14:34.775 --> 00:14:37.077 align:start position:29% line:-1
UIを表示したいとします

00:14:37.544 --> 00:14:43.217 align:start position:23% line:-2
そしてファイル選択後に隠すなら
ドキュメントピッカーが最適です

00:14:45.519 --> 00:14:49.089 align:start position:30% line:-2
ドキュメントピッカーが
必要な理由は？

00:14:49.990 --> 00:14:55.028 align:start position:29% line:-2
ファイルが複数の場所に
あるかもしれないからです

00:14:55.162 --> 00:14:58.599 align:start position:30% line:-2
クラウド上や他の
Appコンテナ内ですね

00:14:59.133 --> 00:15:02.703 align:start position:34% line:-2
デフォルトでは
アクセスできません

00:14:59.133 --> 00:15:02.703 align:start position:34% line:-2
デフォルトでは
アクセスできません

00:15:03.704 --> 00:15:05.138 align:start position:32% line:-1
故に場所と場所の間で

00:15:05.439 --> 00:15:11.111 align:start position:25% line:-2
ドキュメントへのアクセスや
コピー･移動の手段が必要です

00:15:11.879 --> 00:15:14.548 align:start position:30% line:-2
ドキュメントピッカーが
それを可能にします

00:15:17.518 --> 00:15:20.354 align:start position:23% line:-1
ファイルを選択すると消えるので

00:15:20.454 --> 00:15:26.727 align:start position:25% line:-2
画面に長く表示させたい場合は
文書ブラウザを推奨します

00:15:31.298 --> 00:15:35.903 align:start position:29% line:-2
ドキュメントピッカーには
様々な用途があります

00:15:36.270 --> 00:15:39.807 align:start position:27% line:-2
クラウド上にあるファイルに
直接アクセスできます

00:15:42.743 --> 00:15:46.813 align:start position:27% line:-1
また作成したコピーを使い―

00:15:48.415 --> 00:15:53.287 align:start position:25% line:-2
クラウド上に移動して
安全に保管することも可能です

00:15:54.822 --> 00:15:58.058 align:start position:34% line:-2
ファイルのコピーは
混乱するものです

00:15:58.358 --> 00:16:01.128 align:start position:23% line:-1
しかし どうしても必要な場合は

00:15:58.358 --> 00:16:01.128 align:start position:23% line:-1
しかし どうしても必要な場合は

00:16:01.228 --> 00:16:05.132 align:start position:29% line:-2
クラウド上からのコピーや
その逆にも使用できます

00:16:09.603 --> 00:16:11.839 align:start position:34% line:-1
クラウド上の映画に

00:16:11.939 --> 00:16:16.009 align:start position:25% line:-2
ユーザがアクセスできるように
したいとします

00:16:16.410 --> 00:16:19.079 align:start position:0% line:-2
DocumentPickerViewControllerが
最適です

00:16:20.013 --> 00:16:22.449 align:start position:0% line:-2
DocumentPickerViewControllerを
作成し

00:16:22.683 --> 00:16:27.754 align:start position:25% line:-2
ユーザが最初に選択する
ファイルのタイプを指定します

00:16:28.288 --> 00:16:32.292 align:start position:30% line:-2
２番目のドキュメントは
定数を指定します

00:16:34.261 --> 00:16:37.197 align:start position:29% line:-1
そして デリゲートを設定

00:16:37.297 --> 00:16:43.470 align:start position:29% line:-2
これでユーザがファイルを
選択した時に通知が来ます

00:16:44.371 --> 00:16:45.572 align:start position:25% line:-1
そしてpresentとします

00:16:47.207 --> 00:16:49.042 align:start position:34% line:-1
ファイルの選択後は

00:16:49.143 --> 00:16:52.479 align:start position:29% line:-2
このデリゲートメソッドに
コールバックされます

00:16:54.081 --> 00:16:58.919 align:start position:29% line:-2
これでファイルを直接
使用できるようになります

00:16:59.887 --> 00:17:03.490 align:start position:27% line:-2
１つではなく多くのURLが
ありますよね

00:16:59.887 --> 00:17:03.490 align:start position:27% line:-2
１つではなく多くのURLが
ありますよね

00:17:03.590 --> 00:17:06.792 align:start position:30% line:-2
複数のファイル選択が
可能になるプロパティが

00:17:06.993 --> 00:17:10.864 align:start position:30% line:-2
ドキュメントピッカーに
あるからです

00:17:15.269 --> 00:17:17.838 align:start position:27% line:-1
ではドキュメントピッカーを

00:17:18.839 --> 00:17:22.843 align:start position:23% line:-2
デモ用Appの
Particlesに追加します

00:17:26.646 --> 00:17:28.749 align:start position:27% line:-1
これは昨年使ったAppです

00:17:28.849 --> 00:17:32.819 align:start position:30% line:-2
文書ブラウザにより
ファイルが選択できます

00:17:33.587 --> 00:17:39.560 align:start position:23% line:-2
ご覧のように 最近使った項目や
タグ 検索などがあります

00:17:39.660 --> 00:17:41.461 align:start position:38% line:-1
すべて無料です

00:17:42.396 --> 00:17:45.799 align:start position:30% line:-1
こうしてファイルを開き

00:17:46.767 --> 00:17:49.870 align:start position:30% line:-2
パーティクルシステムを
調整できます

00:17:51.839 --> 00:17:54.074 align:start position:34% line:-1
人気のAppですが

00:17:54.341 --> 00:17:58.479 align:start position:29% line:-2
見た目を良くしたいという
要望が寄せられました

00:18:00.013 --> 00:18:05.018 align:start position:27% line:-2
それを受けて新たに作られた
デザインイメージが

00:18:05.185 --> 00:18:08.789 align:start position:23% line:-1
iCloud上で共有されました

00:18:09.256 --> 00:18:12.759 align:start position:32% line:-2
これらをカスタマイズ
してみましょう

00:18:13.327 --> 00:18:18.432 align:start position:21% line:-2
ナビゲーションバーに
“イメージを選択”ボタンを追加し

00:18:19.233 --> 00:18:23.737 align:start position:20% line:-2
iCloudからファイルを選択して
パーティクルをカスタマイズします

00:18:25.405 --> 00:18:27.441 align:start position:25% line:-1
Storyboardを開くと

00:18:28.041 --> 00:18:30.244 align:start position:9% line:-2
Editor View Controllerが
立ち上がります

00:18:30.711 --> 00:18:35.616 align:start position:25% line:-2
エディタに新たなバーボタンを
ドラッグして追加します

00:18:40.821 --> 00:18:45.893 align:start position:32% line:-2
“イメージを選択”と
名付けます

00:18:51.165 --> 00:18:51.865 align:start position:43% line:-1
おっと…

00:18:53.867 --> 00:18:55.068 align:start position:34% line:-1
“イメージを選択”

00:18:56.437 --> 00:19:00.908 align:start position:27% line:-2
ドキュメントピッカーの
コントローラに表示させます

00:18:56.437 --> 00:19:00.908 align:start position:27% line:-2
ドキュメントピッカーの
コントローラに表示させます

00:19:01.041 --> 00:19:03.710 align:start position:29% line:-1
そのために アクションを

00:19:04.478 --> 00:19:09.216 align:start position:29% line:-2
ボタンからソースコードに
ドラッグします

00:19:09.516 --> 00:19:12.419 align:start position:32% line:-2
“イメージを選択”と
名付けます

00:19:12.553 --> 00:19:15.322 align:start position:27% line:-1
送信者はバーボタン項目です

00:19:16.290 --> 00:19:17.858 align:start position:30% line:-1
コードが倍になりました

00:19:18.258 --> 00:19:22.763 align:start position:27% line:-2
コードを大きなウィンドウに
映しますね

00:19:25.966 --> 00:19:28.802 align:start position:14% line:-1
chooseImageメソッドの部分です

00:19:29.469 --> 00:19:32.906 align:start position:0% line:-2
まずDocumentPickerViewController
を作成します

00:19:33.173 --> 00:19:36.243 align:start position:21% line:-2
ユーザが選択するファイルタイプを
指定しましょう

00:19:36.343 --> 00:19:40.781 align:start position:20% line:-1
UTTypeImageとモードです

00:19:40.881 --> 00:19:45.919 align:start position:21% line:-2
パーティクルの画像を埋め込むため
.importとしていますが

00:19:46.153 --> 00:19:49.623 align:start position:29% line:-2
多くの場合は.openを
使うと思います

00:19:51.758 --> 00:19:53.927 align:start position:34% line:-1
デリゲートを設定し

00:19:54.995 --> 00:19:56.430 align:start position:30% line:-1
presentとします

00:19:57.297 --> 00:20:00.801 align:start position:30% line:-2
ドキュメントピッカーが
呼び出され

00:19:57.297 --> 00:20:00.801 align:start position:30% line:-2
ドキュメントピッカーが
呼び出され

00:20:01.835 --> 00:20:04.605 align:start position:30% line:-2
ファイルが選択されると
コールバックされます

00:20:04.705 --> 00:20:07.508 align:start position:21% line:-1
そのため 次のメソッドを入れます

00:20:08.008 --> 00:20:10.811 align:start position:5% line:-2
“documentPicker...didPick
DocumentsAt”ですね

00:20:11.478 --> 00:20:14.248 align:start position:30% line:-2
ドキュメントを選択する
プロパティが

00:20:14.348 --> 00:20:16.750 align:start position:30% line:-1
まだ設定されていません

00:20:17.584 --> 00:20:22.156 align:start position:27% line:-2
URLが１つしかないことを
確認します

00:20:24.525 --> 00:20:28.729 align:start position:32% line:-2
そのURLを取得して
イメージを作成し

00:20:29.196 --> 00:20:32.599 align:start position:21% line:-2
SceneKit内の
パーティクルシステムに設定します

00:20:34.334 --> 00:20:35.869 align:start position:38% line:-1
では実行します

00:20:38.071 --> 00:20:42.042 align:start position:30% line:-2
間もなくシミュレータが
開くでしょう

00:20:47.948 --> 00:20:51.418 align:start position:34% line:-2
シミュレータで
ファイルを開けると

00:20:51.518 --> 00:20:58.592 align:start position:23% line:-2
“イメージを選択”ボタンから
ドキュメントピッカーにいけます

00:20:59.259 --> 00:21:02.196 align:start position:30% line:-2
ファイルAppの画像が
全部あります

00:20:59.259 --> 00:21:02.196 align:start position:30% line:-2
ファイルAppの画像が
全部あります

00:21:02.296 --> 00:21:05.265 align:start position:29% line:-2
ファイルの検索やタグ付け
ブラウズが可能です

00:21:05.732 --> 00:21:08.035 align:start position:30% line:-1
すべての機能が無料です

00:21:09.236 --> 00:21:15.042 align:start position:20% line:-2
“最近使った項目”に
iCloud上のイメージがあります

00:21:15.409 --> 00:21:18.479 align:start position:32% line:-2
ここで星のイメージを
選択すると―

00:21:19.146 --> 00:21:22.115 align:start position:25% line:-1
パーティクルが星に変わります

00:21:22.849 --> 00:21:26.253 align:start position:43% line:-1
(拍手)

00:21:29.323 --> 00:21:30.490 align:start position:39% line:-1
簡単でしたね

00:21:30.591 --> 00:21:32.426 align:start position:32% line:-1
実際の作業でもすぐに

00:21:32.526 --> 00:21:37.064 align:start position:30% line:-2
ドキュメントピッカーを
Appに追加できます

00:21:37.898 --> 00:21:43.036 align:start position:23% line:-2
他社製のライブラリに依存しない
短いコードです

00:21:43.470 --> 00:21:48.275 align:start position:29% line:-2
ファイルの場所に関わらず
アクセス可能になります

00:21:49.843 --> 00:21:53.981 align:start position:25% line:-2
先ほどファイルタイプについて
話しましたが

00:21:54.081 --> 00:21:56.984 align:start position:32% line:-2
何だか分からない人も
多いでしょう

00:21:57.217 --> 00:21:59.686 align:start position:36% line:-1
では 説明します

00:22:02.089 --> 00:22:07.828 align:start position:23% line:-2
ドキュメントタイプはシステムに
処理可能なファイルを知らせます

00:22:09.630 --> 00:22:13.901 align:start position:29% line:-2
ファイルAppで
ファイルが選択された際に

00:22:15.002 --> 00:22:18.172 align:start position:20% line:-1
iOSでAppを起動させるわけです

00:22:19.006 --> 00:22:22.776 align:start position:20% line:-1
また共有シートにAppを表示します

00:22:24.044 --> 00:22:28.282 align:start position:23% line:-2
そしてiOSが適切なアイコンを
選択するようにします

00:22:29.483 --> 00:22:33.687 align:start position:18% line:-2
タイプを適切に設定し
サムネールExtensionを書けば

00:22:33.821 --> 00:22:37.090 align:start position:34% line:-2
ファイルApp内に
表示されるはずです

00:22:37.791 --> 00:22:38.826 align:start position:39% line:-1
間違えると―

00:22:39.893 --> 00:22:42.863 align:start position:23% line:-1
このように表示されてしまいます

00:22:42.963 --> 00:22:46.266 align:start position:27% line:-1
ファイルも開けなくなります

00:22:47.167 --> 00:22:49.436 align:start position:30% line:-1
では設定してみましょう

00:22:51.572 --> 00:22:55.342 align:start position:27% line:-2
ドキュメントタイプの設定は
２段階あります

00:22:55.843 --> 00:22:59.880 align:start position:27% line:-2
iOSが宣言していなければ
タイプを宣言し

00:23:00.280 --> 00:23:06.887 align:start position:21% line:-2
ファイルの閲覧や編集ができるよう
iOSに要求します

00:23:08.489 --> 00:23:10.624 align:start position:36% line:-1
では始めましょう

00:23:11.825 --> 00:23:16.029 align:start position:29% line:-2
まずタイプの宣言が
必要かどうかを見極めます

00:23:16.430 --> 00:23:20.968 align:start position:29% line:-2
一般的なファイルタイプを
扱うことが多いからです

00:23:21.068 --> 00:23:25.205 align:start position:25% line:-2
動画 画像 PDF
プレゼンテーションなどですね

00:23:25.839 --> 00:23:30.744 align:start position:30% line:-2
その場合 既にiOSが
宣言をしているはずです

00:23:31.411 --> 00:23:33.347 align:start position:34% line:-1
それを確認するには

00:23:34.047 --> 00:23:37.718 align:start position:29% line:-2
このURLにある一覧表を
ご覧ください

00:23:40.754 --> 00:23:45.025 align:start position:34% line:-2
この一覧表にあれば
もう宣言済みなので

00:23:45.125 --> 00:23:47.761 align:start position:30% line:-1
タイプの要求に移ります

00:23:50.697 --> 00:23:52.666 align:start position:32% line:-1
他のよくあるケースは

00:23:52.766 --> 00:23:56.970 align:start position:25% line:-2
独自のファイルフォーマットの
場合です

00:23:57.738 --> 00:24:01.842 align:start position:29% line:-2
独自のフォーマットなので
定義が必要です

00:23:57.738 --> 00:24:01.842 align:start position:29% line:-2
独自のフォーマットなので
定義が必要です

00:24:02.409 --> 00:24:05.312 align:start position:25% line:-2
この場合はタイプを
exportedと宣言します

00:24:05.479 --> 00:24:10.017 align:start position:27% line:-2
これで権限はあなたにあると
iOSに通知されました

00:24:12.386 --> 00:24:17.791 align:start position:18% line:-2
これはParticles Appでの
ケースですね

00:24:19.159 --> 00:24:22.296 align:start position:30% line:-2
パーティクルファイルは
独自のフォーマットです

00:24:23.797 --> 00:24:26.733 align:start position:34% line:-2
そこでXcodeで
タイプを設定します

00:24:29.436 --> 00:24:35.309 align:start position:18% line:-2
エクスポートされたUI内で
Info.plistが編集できるので

00:24:35.542 --> 00:24:38.212 align:start position:29% line:-1
タイプ識別子を指定します

00:24:38.312 --> 00:24:41.115 align:start position:32% line:-2
私が選択した文字列を
使います

00:24:41.448 --> 00:24:45.385 align:start position:0% line:-2
com.example.apple-samplecode.
Particles.Particlesです

00:24:46.920 --> 00:24:49.423 align:start position:29% line:-1
そして親タイプのリストを

00:24:49.790 --> 00:24:53.460 align:start position:20% line:-2
Conforms Toフィールドに
宣言します

00:24:54.294 --> 00:24:56.029 align:start position:38% line:-1
親タイプとは？

00:24:58.398 --> 00:25:03.270 align:start position:23% line:-1
タイプは関数ツリーを形成します

00:24:58.398 --> 00:25:03.270 align:start position:23% line:-1
タイプは関数ツリーを形成します

00:25:03.804 --> 00:25:09.943 align:start position:16% line:-2
Swiftなど オブジェクト指向言語の
継承ツリーと似ています

00:25:10.444 --> 00:25:11.478 align:start position:43% line:-1
例えば―

00:25:12.012 --> 00:25:17.851 align:start position:30% line:-2
JPEG及びHEIFは
いずれも画像です

00:25:18.519 --> 00:25:22.923 align:start position:23% line:-2
ユーザが作成または
見られる.imageファイルは

00:25:23.023 --> 00:25:25.425 align:start position:30% line:-1
ルートタイプに従います

00:25:25.893 --> 00:25:28.328 align:start position:14% line:-1
public.contentのことですね

00:25:29.730 --> 00:25:34.501 align:start position:7% line:-2
これにはpublic.spreadsheetなど
他の子ファイルもあります

00:25:36.203 --> 00:25:41.241 align:start position:27% line:-2
タイプの一覧は前述の
ドキュメントをご覧ください

00:25:42.476 --> 00:25:46.079 align:start position:18% line:-2
このツリーに
Particlesタイプを追加します

00:25:47.314 --> 00:25:51.118 align:start position:29% line:-2
パーティクルシステムは
一般的なファイルではなく

00:25:51.518 --> 00:25:53.854 align:start position:32% line:-1
カテゴリがありません

00:25:54.021 --> 00:25:57.724 align:start position:20% line:-2
故にpublic.contentの
直下には置けません

00:25:58.759 --> 00:26:02.296 align:start position:4% line:-2
public.contentか
public.spreadsheetや.imageに

00:25:58.759 --> 00:26:02.296 align:start position:4% line:-2
public.contentか
public.spreadsheetや.imageに

00:26:02.396 --> 00:26:05.799 align:start position:34% line:-2
直接または間接的に
従う必要があります

00:26:06.066 --> 00:26:09.903 align:start position:29% line:-2
最近使った項目や
検索に表示させるためです

00:26:12.372 --> 00:26:15.809 align:start position:34% line:-2
物理ツリーという
別の方式もあります

00:26:15.943 --> 00:26:19.746 align:start position:29% line:-2
ファイルの表示方法を
iOSに知らせるものです

00:26:20.314 --> 00:26:24.284 align:start position:34% line:-2
２つの選択肢のみと
より単純な作りです

00:26:25.285 --> 00:26:26.653 align:start position:41% line:-1
多くの場合

00:26:27.054 --> 00:26:31.892 align:start position:29% line:-2
ドキュメント用として
１つのファイルを使います

00:26:33.660 --> 00:26:37.097 align:start position:23% line:-1
複数のリソースをまとめたい場合

00:26:37.631 --> 00:26:42.269 align:start position:11% line:-2
ファイルパッケージがあれば
com.apple.packageを使います

00:26:42.369 --> 00:26:45.606 align:start position:27% line:-2
ファイルが１つなら
public.dataです

00:26:47.875 --> 00:26:52.513 align:start position:21% line:-2
Particlesなので
public.dataに従います

00:26:54.815 --> 00:26:56.150 align:start position:39% line:-1
ツリーなので

00:26:56.250 --> 00:27:02.222 align:start position:16% line:-2
.dataと.packageはいずれも
ルートタイプに従います

00:26:56.250 --> 00:27:02.222 align:start position:16% line:-2
.dataと.packageはいずれも
ルートタイプに従います

00:27:02.589 --> 00:27:04.691 align:start position:25% line:-1
public.itemですね

00:27:04.825 --> 00:27:09.062 align:start position:16% line:-2
それは考える必要がないので
.dataか.packageを選びます

00:27:10.931 --> 00:27:14.935 align:start position:0% line:-2
親はpublic.dataとpublic.content
の２つになりました

00:27:15.502 --> 00:27:18.438 align:start position:29% line:-1
では Xcode UIで

00:27:18.539 --> 00:27:22.109 align:start position:34% line:-2
その２つに従うよう
設定しましょう

00:27:23.610 --> 00:27:25.245 align:start position:43% line:-1
最後に―

00:27:25.812 --> 00:27:30.450 align:start position:16% line:-2
タイプとひもづいた
ExtensionをiOSに通知します

00:27:32.953 --> 00:27:38.125 align:start position:18% line:-2
これで.particlesファイルが
今定義したタイプだと認識されます

00:27:39.326 --> 00:27:42.663 align:start position:2% line:-2
このため UTTypeTagSpecification
プロパティを

00:27:43.297 --> 00:27:46.099 align:start position:25% line:-2
エクスポートされた
UTIプロパティに追加します

00:27:48.035 --> 00:27:52.606 align:start position:4% line:-2
public.filename-extensionを
このディクショナリに追加します

00:27:52.806 --> 00:27:57.177 align:start position:21% line:-2
これはタイプにひもづけたい一連の
ファイルExtensionです

00:27:58.979 --> 00:28:02.416 align:start position:21% line:-2
新たな項目 Particlesが
出来ました

00:27:58.979 --> 00:28:02.416 align:start position:21% line:-2
新たな項目 Particlesが
出来ました

00:28:04.251 --> 00:28:07.621 align:start position:32% line:-1
これで宣言は完了です

00:28:09.089 --> 00:28:12.226 align:start position:29% line:-2
もう１つ
付け加えることがあります

00:28:13.527 --> 00:28:19.366 align:start position:25% line:-2
独自のタイプを宣言しつつ
別のAppが定義したタイプを

00:28:19.666 --> 00:28:23.237 align:start position:27% line:-1
使いたいこともあるでしょう

00:28:24.805 --> 00:28:27.708 align:start position:29% line:-2
Appが未インストールの
場合に備え

00:28:28.108 --> 00:28:31.945 align:start position:30% line:-2
当該のタイプも宣言する
必要があります

00:28:32.846 --> 00:28:35.816 align:start position:30% line:-2
これはインポートされた
タイプの宣言です

00:28:38.385 --> 00:28:44.124 align:start position:29% line:-2
故に その定義がどこかに
別途存在していると

00:28:44.224 --> 00:28:46.660 align:start position:27% line:-1
iOSはそちらを優先します

00:28:47.361 --> 00:28:49.029 align:start position:29% line:-1
iOSが宣言していない―

00:28:49.129 --> 00:28:53.834 align:start position:29% line:-2
一般的なファイルタイプを
使うにはこうです

00:28:54.434 --> 00:28:59.606 align:start position:30% line:-2
前述のUIと同様なので
安心してください

00:29:01.041 --> 00:29:04.578 align:start position:32% line:-2
違うのはインポートに
あることだけです

00:29:07.948 --> 00:29:09.917 align:start position:32% line:-1
タイプを定義した後は

00:29:10.017 --> 00:29:15.322 align:start position:11% line:-2
info.plistまたはXcode UIで
サポートを要求できます

00:29:16.723 --> 00:29:17.691 align:start position:39% line:-1
このためには

00:29:18.592 --> 00:29:22.162 align:start position:30% line:-2
定義したタイプ識別子を
指定します

00:29:23.697 --> 00:29:27.601 align:start position:25% line:-1
後はランクを定義するだけです

00:29:27.868 --> 00:29:31.905 align:start position:30% line:-2
ファイルを開くAppが
複数ある際の

00:29:32.005 --> 00:29:34.741 align:start position:23% line:-1
iOSの動作を設定するわけです

00:29:37.010 --> 00:29:39.346 align:start position:30% line:-1
３つの選択肢があります

00:29:42.216 --> 00:29:46.787 align:start position:27% line:-2
独自のファイルタイプなら
“Owner”を選択します

00:29:46.920 --> 00:29:52.326 align:start position:27% line:-2
これは自分で作った独自の
タイプの場合のみ選択します

00:29:53.861 --> 00:29:57.397 align:start position:21% line:-2
多くの場合は
“Default”になるでしょう

00:29:57.498 --> 00:30:01.201 align:start position:29% line:-2
タイプが編集可能であれば
これを選びます

00:29:57.498 --> 00:30:01.201 align:start position:29% line:-2
タイプが編集可能であれば
これを選びます

00:30:01.468 --> 00:30:05.906 align:start position:21% line:-2
読めるが編集不可であれば
“Alternate”を選びます

00:30:07.708 --> 00:30:11.545 align:start position:30% line:-2
macOSではランクの
ルールが異なります

00:30:11.645 --> 00:30:14.148 align:start position:25% line:-1
macOS用のAppの場合は

00:30:14.515 --> 00:30:17.184 align:start position:23% line:-1
こちらのリンクを ご覧ください

00:30:20.821 --> 00:30:24.458 align:start position:29% line:-2
タイプのサポートの要求は
明確に指定します

00:30:24.992 --> 00:30:29.296 align:start position:21% line:-2
今回.particlesという
特定のファイル用に要求しましたが

00:30:29.496 --> 00:30:34.501 align:start position:20% line:-2
public.imageを使用する
カテゴリでも要求できます

00:30:35.235 --> 00:30:38.605 align:start position:32% line:-2
しかし 希望どおりに
表示させるには

00:30:38.705 --> 00:30:42.176 align:start position:36% line:-2
できる限り詳細に
指定してください

00:30:42.943 --> 00:30:45.512 align:start position:20% line:-2
また public.dataや
public.contentなどの

00:30:45.612 --> 00:30:48.749 align:start position:23% line:-2
ワイルドカードに
サポートを要求しないでください

00:30:49.850 --> 00:30:53.187 align:start position:23% line:-1
想定外の場所にAppが表示され

00:30:53.287 --> 00:30:56.757 align:start position:25% line:-1
ユーザを混乱させてしまいます

00:31:00.194 --> 00:31:02.663 align:start position:25% line:-1
では セッションのまとめです

00:31:03.797 --> 00:31:07.701 align:start position:25% line:-2
クラウド上にあるファイルへの
アクセスは

00:31:07.801 --> 00:31:11.939 align:start position:25% line:-2
文書ブラウザか ドキュメント
ピッカーを使いましょう

00:31:12.573 --> 00:31:15.876 align:start position:25% line:-2
多くのクラウドベンダが
当社のAPIを採用しています

00:31:17.611 --> 00:31:19.746 align:start position:11% line:-1
これらのView Controllerにより

00:31:19.847 --> 00:31:24.484 align:start position:21% line:-2
ユーザはファイルの場所に関わらず
アクセス可能です

00:31:24.818 --> 00:31:28.088 align:start position:34% line:-2
クラウドベンダ別の
コードは不要です

00:31:30.124 --> 00:31:36.063 align:start position:21% line:-2
iOS 11の登場以前に独自の
文書ブラウズUIを書いているなら

00:31:36.263 --> 00:31:39.766 align:start position:0% line:-2
UIDocumentBrowserViewController
に変更する良い機会です

00:31:40.801 --> 00:31:43.136 align:start position:34% line:-1
たくさんの機能が…

00:31:45.706 --> 00:31:51.879 align:start position:23% line:-2
たくさんの機能が搭載されており
すべて無料で使用できます

00:31:54.148 --> 00:32:00.387 align:start position:25% line:-2
Xcode内でドキュメントを
正しく設定することも忘れずに

00:31:54.148 --> 00:32:00.387 align:start position:25% line:-2
Xcode内でドキュメントを
正しく設定することも忘れずに

00:32:01.054 --> 00:32:06.193 align:start position:32% line:-2
Appを適切な場所に
表示させるためです

00:32:07.628 --> 00:32:10.297 align:start position:27% line:-1
では ロニーに引き継ぎます

00:32:10.964 --> 00:32:15.402 align:start position:43% line:-1
(拍手)

00:32:15.903 --> 00:32:16.870 align:start position:45% line:-1
どうも

00:32:17.438 --> 00:32:18.372 align:start position:41% line:-1
こんにちは

00:32:18.572 --> 00:32:22.276 align:start position:29% line:-2
ドキュメント管理チームの
ロニー･ファデルです

00:32:23.343 --> 00:32:27.347 align:start position:30% line:-2
文書ブラウザや
ドキュメントピッカーの

00:32:27.448 --> 00:32:30.584 align:start position:29% line:-1
Appへの適用は容易です

00:32:31.418 --> 00:32:35.622 align:start position:27% line:-2
では ベストプラクティスを
紹介します

00:32:35.722 --> 00:32:38.792 align:start position:27% line:-1
iOS上で皆さんのAppが

00:32:38.892 --> 00:32:43.263 align:start position:34% line:-2
問題なく動くのかを
確認できる事例です

00:32:44.832 --> 00:32:50.370 align:start position:25% line:-2
文書ブラウザか
ドキュメントピッカーを導入し

00:32:51.205 --> 00:32:53.774 align:start position:29% line:-1
ドキュメントを選択します

00:32:54.408 --> 00:32:57.678 align:start position:27% line:-1
ここではコピーを作成せずに

00:32:57.811 --> 00:33:02.115 align:start position:29% line:-2
ドキュメントに
直接アクセスするとします

00:32:57.811 --> 00:33:02.115 align:start position:29% line:-2
ドキュメントに
直接アクセスするとします

00:33:02.750 --> 00:33:05.252 align:start position:32% line:-1
直接編集したい場合は

00:33:05.419 --> 00:33:08.589 align:start position:29% line:-1
オープン操作を実行します

00:33:09.523 --> 00:33:16.029 align:start position:20% line:-2
例えばParticles Appを
使用しているとします

00:33:16.430 --> 00:33:20.400 align:start position:23% line:-1
システムのイメージを変更します

00:33:22.002 --> 00:33:27.040 align:start position:32% line:-2
ドキュメントの選択で
コールバックが出ます

00:33:27.541 --> 00:33:31.245 align:start position:29% line:-2
１つ目は
ブラウザで選択した場合―

00:33:31.812 --> 00:33:36.683 align:start position:23% line:-2
２つ目は
ピッカーで選択した場合に出ます

00:33:38.585 --> 00:33:43.924 align:start position:25% line:-2
このドキュメントとピッカーは
選択したURLを

00:33:44.024 --> 00:33:47.227 align:start position:30% line:-1
Appに提供しています

00:33:48.395 --> 00:33:54.401 align:start position:21% line:-2
ドキュメントに直接アクセスすると
許可エラーが出かねません

00:33:55.702 --> 00:33:58.005 align:start position:32% line:-1
詳しく見てみましょう

00:33:58.572 --> 00:34:02.309 align:start position:20% line:-1
Appはサンドボックス内にあります

00:33:58.572 --> 00:34:02.309 align:start position:20% line:-1
Appはサンドボックス内にあります

00:34:02.810 --> 00:34:05.245 align:start position:34% line:-1
アクセスできるのは

00:34:05.445 --> 00:34:11.118 align:start position:27% line:-2
自分のAppコンテナだけに
制限されます

00:34:11.485 --> 00:34:17.024 align:start position:29% line:-2
他のAppのコンテナには
アクセスできません

00:34:17.123 --> 00:34:20.661 align:start position:23% line:-1
iCloudコンテナも同様です

00:34:21.460 --> 00:34:26.600 align:start position:25% line:-2
これはAppやプロセスを守る
仕組みです

00:34:26.800 --> 00:34:31.237 align:start position:27% line:-2
他のコンテナを
のぞき見ることはできません

00:34:31.338 --> 00:34:36.409 align:start position:30% line:-2
ドキュメントへの
アクセスを行う場合には

00:34:36.510 --> 00:34:39.646 align:start position:30% line:-1
ユーザの同意が必要です

00:34:41.315 --> 00:34:45.918 align:start position:27% line:-2
他のコンテナへのアクセスは
制限されますが

00:34:46.085 --> 00:34:50.924 align:start position:30% line:-2
Appが他のコンテナに
アクセスする方法は？

00:34:51.658 --> 00:34:56.530 align:start position:25% line:-2
サンドボックスに
それらドキュメントを含めます

00:34:57.097 --> 00:35:00.734 align:start position:32% line:-2
ブラウザやピッカーが
URLを返します

00:34:57.097 --> 00:35:00.734 align:start position:32% line:-2
ブラウザやピッカーが
URLを返します

00:35:01.702 --> 00:35:05.539 align:start position:34% line:-2
セキュリティ対応の
リソース付きです

00:35:06.306 --> 00:35:10.844 align:start position:32% line:-2
システムが承認した
トークンとも言えます

00:35:11.011 --> 00:35:16.517 align:start position:25% line:-2
トークンでAppから
ドキュメントにアクセスします

00:35:18.052 --> 00:35:21.822 align:start position:20% line:-1
次のURL APIでアクセスします

00:35:22.923 --> 00:35:26.860 align:start position:0% line:-2
startAccessingSecurityScoped
Resourceをコールすると

00:35:27.027 --> 00:35:32.699 align:start position:20% line:-2
Appはドキュメントの表示と編集を
許可されます

00:35:32.866 --> 00:35:35.636 align:start position:32% line:-1
表示と編集を終えたら

00:35:36.336 --> 00:35:40.908 align:start position:2% line:-2
stopAccessingSecurityScoped
Resourceをコールします

00:35:41.008 --> 00:35:45.746 align:start position:29% line:-2
すると再び
アクセス制限がかかります

00:35:48.482 --> 00:35:54.521 align:start position:27% line:-2
以上が サンドボックス内の
ドキュメントの使用方法です

00:35:56.189 --> 00:35:59.193 align:start position:27% line:-1
コードをコールする場所は？

00:36:00.394 --> 00:36:06.767 align:start position:16% line:-2
startAccessingのコードは
冒頭でコールし

00:36:07.401 --> 00:36:13.240 align:start position:25% line:-2
stopAccessingは
作業終了時にコールします

00:36:14.508 --> 00:36:17.578 align:start position:23% line:-1
startが“true”なら―

00:36:18.145 --> 00:36:23.116 align:start position:21% line:-2
stopをコールするというように
単純です

00:36:25.285 --> 00:36:28.522 align:start position:27% line:-1
アクセス時間を最小限に抑え

00:36:28.855 --> 00:36:35.662 align:start position:20% line:-2
startをコールする際の
Appのリソース消費量を節約します

00:36:35.762 --> 00:36:39.900 align:start position:32% line:-2
そしてタスク終了時に
リソースを放棄し

00:36:40.000 --> 00:36:45.939 align:start position:25% line:-2
追加のドキュメントへの
アクセスができるようにします

00:36:47.374 --> 00:36:51.812 align:start position:27% line:-2
ドキュメントが
自分のコンテナ内にあるなら

00:36:51.912 --> 00:36:54.014 align:start position:36% line:-1
コールは不要です

00:36:54.248 --> 00:36:57.451 align:start position:29% line:-1
不安ならコール可能ですが

00:36:57.718 --> 00:37:00.921 align:start position:25% line:-1
実際は何もしなくていいのです

00:36:57.718 --> 00:37:00.921 align:start position:25% line:-1
実際は何もしなくていいのです

00:37:03.457 --> 00:37:06.793 align:start position:25% line:-1
アクセス方法は分かりましたね

00:37:06.894 --> 00:37:12.966 align:start position:21% line:-2
事例で説明した方法で
ドキュメントにアクセスしましょう

00:37:14.401 --> 00:37:19.907 align:start position:23% line:-2
ご覧のとおり
クラウド上の複数のAppからの

00:37:20.007 --> 00:37:24.545 align:start position:30% line:-2
ドキュメントへの
同時アクセスも可能です

00:37:25.212 --> 00:37:28.582 align:start position:27% line:-1
ここではアクセスするための

00:37:28.715 --> 00:37:32.452 align:start position:21% line:-1
システムの仕組みが必要となります

00:37:32.619 --> 00:37:38.659 align:start position:21% line:-2
この仕組みにより
他からのドキュメントの読み書きを

00:37:38.759 --> 00:37:39.793 align:start position:41% line:-1
防ぐのです

00:37:41.228 --> 00:37:45.332 align:start position:27% line:-2
ファイルコーディネーション
という仕組みです

00:37:45.432 --> 00:37:50.938 align:start position:12% line:-2
NSFileCoordinatorと
NSFilePresenterで実行します

00:37:51.572 --> 00:37:55.776 align:start position:30% line:-2
このコードは
読み書きをロックします

00:37:57.111 --> 00:38:03.984 align:start position:25% line:-2
ローカルにないドキュメントの
ダウンロードの命令もします

00:37:57.111 --> 00:38:03.984 align:start position:25% line:-2
ローカルにないドキュメントの
ダウンロードの命令もします

00:38:04.117 --> 00:38:09.556 align:start position:27% line:-2
ローカルに存在しない
ドキュメントも多いからです

00:38:10.891 --> 00:38:15.496 align:start position:25% line:-2
ファイルコーディネーションの
操作では

00:38:15.596 --> 00:38:19.199 align:start position:21% line:-1
冗長で誤ったコードを書きがちです

00:38:19.833 --> 00:38:24.371 align:start position:27% line:-2
ドキュメントの表示と編集を
するだけなら

00:38:24.471 --> 00:38:30.010 align:start position:16% line:-2
UIDocumentという簡単な方法が
あります

00:38:30.310 --> 00:38:33.414 align:start position:25% line:-1
iOS 5以降で使用可能です

00:38:33.914 --> 00:38:38.685 align:start position:27% line:-2
ドキュメントの表示と編集に
お勧めの方法です

00:38:39.386 --> 00:38:44.925 align:start position:20% line:-2
この方法ならstartやstopの
コールは不要です

00:38:45.426 --> 00:38:47.895 align:start position:23% line:-2
ファイルコーディネーションにも
対応します

00:38:47.995 --> 00:38:52.132 align:start position:30% line:-2
つまりマニュアル作業が
不要となります

00:38:53.600 --> 00:38:57.838 align:start position:12% line:-2
詳細は“Building Document
Based Apps”という―

00:38:57.938 --> 00:39:02.943 align:start position:27% line:-2
セッションのビデオを活用し
ご確認ください

00:38:57.938 --> 00:39:02.943 align:start position:27% line:-2
セッションのビデオを活用し
ご確認ください

00:39:03.043 --> 00:39:08.148 align:start position:25% line:-2
WWDC 2015に行われた
詳細セッションです

00:39:10.017 --> 00:39:15.989 align:start position:23% line:-2
これで パーティクルシステムの
ドキュメントにアクセスし

00:39:16.423 --> 00:39:18.392 align:start position:38% line:-1
編集ができます

00:39:18.492 --> 00:39:23.564 align:start position:23% line:-2
ここからは少し
WWDCのサイトについて確認し

00:39:23.764 --> 00:39:25.566 align:start position:29% line:-1
再びAppの話に戻ります

00:39:27.201 --> 00:39:31.872 align:start position:25% line:-1
では少しブラウザの話をします

00:39:32.406 --> 00:39:37.878 align:start position:29% line:-2
ユーザはAppを使用中
元に戻す機能を期待します

00:39:39.079 --> 00:39:42.583 align:start position:27% line:-1
これまでの例を元に話します

00:39:42.983 --> 00:39:46.086 align:start position:21% line:-1
これがAppのライフサイクルです

00:39:47.187 --> 00:39:51.491 align:start position:23% line:-1
Appの編集は最前面で行います

00:39:51.859 --> 00:39:58.165 align:start position:27% line:-2
Appスイッチャーを使うと
Appは背面に移動します

00:39:59.366 --> 00:40:02.636 align:start position:23% line:-1
Appは背面に移ると停止します

00:39:59.366 --> 00:40:02.636 align:start position:23% line:-1
Appは背面に移ると停止します

00:40:03.003 --> 00:40:06.974 align:start position:25% line:-1
Appを停止させることにより

00:40:07.207 --> 00:40:10.043 align:start position:27% line:-1
メモリの負荷を減らすのです

00:40:10.878 --> 00:40:15.983 align:start position:30% line:-2
前面に移動させると
Appは再起動されます

00:40:16.316 --> 00:40:19.620 align:start position:34% line:-2
ここでUIの状態の
リストアを行います

00:40:19.787 --> 00:40:25.125 align:start position:25% line:-2
これでユーザは
元のAppでの作業に戻れます

00:40:26.193 --> 00:40:29.129 align:start position:34% line:-1
状態復旧の方法は？

00:40:29.396 --> 00:40:30.864 align:start position:41% line:-1
簡単なのは

00:40:30.964 --> 00:40:38.138 align:start position:20% line:-2
ブラウザやピッカーが示したURLを
リストアする方法でしょう

00:40:39.206 --> 00:40:41.975 align:start position:25% line:-1
しかし２つの原因で失敗します

00:40:42.276 --> 00:40:47.448 align:start position:30% line:-2
１つ目はドキュメントの
移動や改名による―

00:40:47.548 --> 00:40:50.918 align:start position:25% line:-1
リンクの無効化という原因です

00:40:51.185 --> 00:40:55.823 align:start position:27% line:-2
２つ目はURLの
セキュリティ対応リソースの

00:40:56.457 --> 00:40:59.493 align:start position:30% line:-1
未暗号化という原因です

00:40:59.827 --> 00:41:04.898 align:start position:30% line:-2
そしてドキュメントへの
アクセスが失われます

00:40:59.827 --> 00:41:04.898 align:start position:30% line:-2
そしてドキュメントへの
アクセスが失われます

00:41:05.032 --> 00:41:07.935 align:start position:32% line:-2
移動や改名がなくても
失われます

00:41:09.903 --> 00:41:15.609 align:start position:23% line:-2
セキュリティ対応ブックマークを
使用すれば解決します

00:41:15.843 --> 00:41:19.680 align:start position:20% line:-1
参照先URLが正確なものになります

00:41:19.780 --> 00:41:22.349 align:start position:29% line:-1
移動や改名にも対応します

00:41:27.287 --> 00:41:32.559 align:start position:23% line:-2
セキュリティ対応ブックマークを
保存するには

00:41:32.726 --> 00:41:37.931 align:start position:11% line:-1
bookmarkData APIを適用します

00:41:38.732 --> 00:41:40.300 align:start position:36% line:-1
App再起動後に

00:41:40.467 --> 00:41:45.806 align:start position:20% line:-2
bookmarkDataをコールし
URLを変更します

00:41:47.741 --> 00:41:52.312 align:start position:34% line:-2
以上がUIの状態の
リストア方法です

00:41:52.412 --> 00:41:55.148 align:start position:29% line:-1
ここで少しデモを行います

00:42:01.922 --> 00:42:03.223 align:start position:39% line:-1
ご覧ください

00:42:03.824 --> 00:42:09.163 align:start position:25% line:-2
Particles Appを
シミュレータで走らせます

00:42:10.297 --> 00:42:13.367 align:start position:23% line:-1
次にAppを背面に移動させます

00:42:13.600 --> 00:42:17.671 align:start position:23% line:-1
Appは一時停止状態となります

00:42:18.672 --> 00:42:20.207 align:start position:32% line:-1
Xcodeを用います

00:42:23.043 --> 00:42:27.748 align:start position:32% line:-2
Appを再起動すると
ブラウザに戻ります

00:42:28.048 --> 00:42:32.653 align:start position:30% line:-2
ここでは
状態保存と復旧を実行し

00:42:32.753 --> 00:42:34.855 align:start position:34% line:-1
元の状態に戻します

00:42:35.756 --> 00:42:37.925 align:start position:30% line:-1
Xcodeに移動します

00:42:38.492 --> 00:42:45.132 align:start position:20% line:-2
ここではAppに対し デリゲートで
保存と復旧を宣言します

00:42:47.067 --> 00:42:52.139 align:start position:2% line:-2
shouldSaveApplicationStateに
“true”を返します

00:42:52.506 --> 00:42:56.276 align:start position:0% line:-2
shouldRestoreApplicationState
でも “true”を返します

00:42:58.045 --> 00:43:00.480 align:start position:21% line:-1
次にStoryboardに移動し

00:42:58.045 --> 00:43:00.480 align:start position:21% line:-1
次にStoryboardに移動し

00:43:00.581 --> 00:43:04.985 align:start position:0% line:-2
DocumentBrowserViewControllerに
復旧IDを与えます

00:43:05.085 --> 00:43:09.423 align:start position:23% line:-2
するとシステムがオブジェクトを
リストアします

00:43:09.857 --> 00:43:13.327 align:start position:18% line:-2
ここではStoryboard IDを
使用します

00:43:16.563 --> 00:43:20.634 align:start position:0% line:-2
次に
DocumentBrowserViewControllerに

00:43:20.734 --> 00:43:23.737 align:start position:25% line:-1
状態の保存と復旧を実装します

00:43:26.306 --> 00:43:30.544 align:start position:4% line:-2
つまりencodeRestorableStateから
スタートし

00:43:31.745 --> 00:43:35.916 align:start position:9% line:-2
次にeditorViewControllerを
取得します

00:43:36.016 --> 00:43:38.452 align:start position:14% line:-1
そしてdocumentURLを取得します

00:43:39.720 --> 00:43:41.421 align:start position:32% line:-1
URLを取得したら…

00:43:41.855 --> 00:43:43.190 align:start position:36% line:-1
字が小さいですね

00:43:43.357 --> 00:43:45.225 align:start position:34% line:-1
URLを取得したら

00:43:45.426 --> 00:43:49.596 align:start position:27% line:-2
アクセスし
サンドボックスを拡張します

00:43:50.731 --> 00:43:54.435 align:start position:27% line:-2
そしてdeferブロックで
アクセスを終了します

00:43:57.871 --> 00:43:58.705 align:start position:43% line:-1
もしも…

00:44:00.140 --> 00:44:02.476 align:start position:30% line:-1
アクセスを開始する際は

00:44:03.577 --> 00:44:08.415 align:start position:14% line:-2
bookmarkDataブロックを作成し
暗号化します

00:44:10.718 --> 00:44:12.953 align:start position:23% line:-1
最後にsuperをコールします

00:44:14.121 --> 00:44:17.724 align:start position:14% line:-1
RestorableStateの暗号化と

00:44:17.824 --> 00:44:20.828 align:start position:30% line:-1
復号化の説明に移ります

00:44:21.562 --> 00:44:27.701 align:start position:9% line:-2
decodeRestorableStateから
逆の手順を踏みます

00:44:28.035 --> 00:44:31.271 align:start position:11% line:-2
まずcoderからbookmarkDataを
取得します

00:44:31.405 --> 00:44:33.374 align:start position:30% line:-1
そして該当する場合のみ

00:44:33.674 --> 00:44:38.779 align:start position:4% line:-2
URL(resolvingBookmarkDataで
ドキュメントのURLを作成します

00:44:41.315 --> 00:44:44.284 align:start position:27% line:-2
そしてURLに
ドキュメントを表示させます

00:44:45.486 --> 00:44:49.590 align:start position:21% line:-1
ここでもsuperをコールします

00:44:50.424 --> 00:44:52.926 align:start position:29% line:-1
では Appを起動します

00:44:57.631 --> 00:45:01.101 align:start position:27% line:-1
シミュレータで起動されます

00:44:57.631 --> 00:45:01.101 align:start position:27% line:-1
シミュレータで起動されます

00:45:02.102 --> 00:45:06.140 align:start position:27% line:-2
これでドキュメントの使用を
開始できます

00:45:06.607 --> 00:45:12.713 align:start position:25% line:-2
ここでAppを背面に移動させ
Appの停止をシミュレート

00:45:16.483 --> 00:45:21.889 align:start position:30% line:-2
そしてAppの再起動で
Editorに戻ります

00:45:22.322 --> 00:45:26.960 align:start position:43% line:-1
(拍手)

00:45:28.996 --> 00:45:35.202 align:start position:23% line:-2
破損を恐れることなく
ドキュメントにアクセスできます

00:45:35.302 --> 00:45:41.175 align:start position:27% line:-2
restoreを宣言すれば
元の状態に戻せます

00:45:41.375 --> 00:45:43.610 align:start position:30% line:-1
App停止中も戻せます

00:45:45.312 --> 00:45:49.950 align:start position:29% line:-2
ファイルを開き
コールアウトメニューから

00:45:50.050 --> 00:45:52.319 align:start position:30% line:-1
“共有”をタップすれば

00:45:52.519 --> 00:45:55.589 align:start position:21% line:-1
共有シートにAppが追加されます

00:45:56.156 --> 00:46:00.327 align:start position:20% line:-2
しかし “Open in”ではなく
“Copy to”と表示されます

00:45:56.156 --> 00:46:00.327 align:start position:20% line:-2
しかし “Open in”ではなく
“Copy to”と表示されます

00:46:00.828 --> 00:46:05.399 align:start position:25% line:-2
共有シートで
Appアイコンをタップすると

00:46:05.499 --> 00:46:10.504 align:start position:25% line:-2
システムによりドキュメントが
コピーされます

00:46:10.904 --> 00:46:16.076 align:start position:29% line:-2
つまり ここではコピーを
編集するということです

00:46:17.377 --> 00:46:21.381 align:start position:25% line:-1
ユーザが原本の編集をするには

00:46:21.882 --> 00:46:28.288 align:start position:14% line:-2
iOSのOpen in Placeという
機能を適用する必要があります

00:46:30.357 --> 00:46:32.326 align:start position:32% line:-1
この機能を適用すると

00:46:32.426 --> 00:46:37.231 align:start position:21% line:-2
共有シートには
“Open in”が表示されます

00:46:38.799 --> 00:46:41.535 align:start position:29% line:-1
この機能の適用は簡単です

00:46:41.869 --> 00:46:46.673 align:start position:25% line:-2
ドキュメントベースAppの
Xcodeのテンプレートなら

00:46:47.041 --> 00:46:50.310 align:start position:21% line:-2
“Open in”がデフォルトで
有効です

00:46:50.844 --> 00:46:56.216 align:start position:2% line:-2
または Info.plistにLSSupports
OpeningDocumentInPlaceの追加です

00:46:57.718 --> 00:47:02.122 align:start position:20% line:-2
Open in Placeの使用を
宣言すれば

00:46:57.718 --> 00:47:02.122 align:start position:20% line:-2
Open in Placeの使用を
宣言すれば

00:47:02.222 --> 00:47:06.560 align:start position:16% line:-2
UIApplicationのデリゲート
メソッドでアクセスします

00:47:08.062 --> 00:47:11.031 align:start position:23% line:-1
Appが文書ブラウザベースなら

00:47:12.032 --> 00:47:18.605 align:start position:0% line:-2
DocumentBrowserViewControllerで
revealDocumentをコールします

00:47:19.439 --> 00:47:24.878 align:start position:27% line:-2
完了ハンドラをコールすれば
ドキュメントが表示されます

00:47:25.345 --> 00:47:28.248 align:start position:21% line:-2
これはXcodeのテンプレートで
設定済みです

00:47:29.483 --> 00:47:34.021 align:start position:23% line:-2
共有シートのAppをタップして
アクセスできます

00:47:34.455 --> 00:47:40.127 align:start position:27% line:-2
クラウド上のドキュメントも
あるため 進捗を表示します

00:47:41.261 --> 00:47:46.000 align:start position:25% line:-2
ダウンロードに時間がかかれば
取り消しもできます

00:47:46.100 --> 00:47:49.770 align:start position:27% line:-2
ドキュメントの開封を中止し
ブラウザに戻れます

00:47:51.638 --> 00:47:54.741 align:start position:23% line:-1
Appで進捗を表示する方法は？

00:47:56.410 --> 00:48:00.314 align:start position:12% line:-1
revealDocumentをコールすれば

00:47:56.410 --> 00:48:00.314 align:start position:12% line:-1
revealDocumentをコールすれば

00:48:00.414 --> 00:48:04.051 align:start position:23% line:-1
無料で進捗のUIを使用できます

00:48:04.151 --> 00:48:08.855 align:start position:30% line:-2
ブラウザ上のアイコンに
UIが反映されます

00:48:09.623 --> 00:48:13.827 align:start position:30% line:-2
独自の進捗UIを
表示する方法もあります

00:48:14.328 --> 00:48:20.534 align:start position:14% line:-2
UIDocumentは Progress
Reportingに準拠しています

00:48:20.901 --> 00:48:23.637 align:start position:25% line:-1
独自の進捗UIを表示するには

00:48:23.737 --> 00:48:27.808 align:start position:30% line:-2
進捗プロパティに
表示させればいいのです

00:48:29.877 --> 00:48:34.214 align:start position:30% line:-2
これでAppは
配信の準備が整いました

00:48:36.783 --> 00:48:40.287 align:start position:25% line:-1
今日 持ち帰ってほしい知識は

00:48:40.387 --> 00:48:43.891 align:start position:27% line:-2
Appにおける
ドキュメント管理の方法です

00:48:45.259 --> 00:48:48.962 align:start position:32% line:-2
ドキュメントの編集が
必要になったら

00:48:49.062 --> 00:48:52.866 align:start position:21% line:-1
UIDocumentを適用します

00:48:54.768 --> 00:48:59.406 align:start position:21% line:-2
UIDocumentを適用しない
ドキュメントの場合は？

00:48:59.506 --> 00:49:06.380 align:start position:21% line:-2
サンドボックス内のドキュメントに
アクセスできることを確認し

00:48:59.506 --> 00:49:06.380 align:start position:21% line:-2
サンドボックス内のドキュメントに
アクセスできることを確認し

00:49:06.980 --> 00:49:10.050 align:start position:23% line:-1
ベストプラクティスを適用します

00:49:11.418 --> 00:49:14.455 align:start position:25% line:-1
ドキュメントへのアクセスでは

00:49:14.555 --> 00:49:18.325 align:start position:21% line:-1
編集ができることを確認しましょう

00:49:19.860 --> 00:49:23.997 align:start position:32% line:-2
状態復旧を実装すれば
Appが停止中でも―

00:49:24.097 --> 00:49:27.868 align:start position:25% line:-1
元の状態のファイルに戻れます

00:49:29.036 --> 00:49:34.107 align:start position:16% line:-1
Open in Placeを適用すれば

00:49:34.208 --> 00:49:38.412 align:start position:34% line:-2
常にコピーではなく
原本を編集できます

00:49:39.079 --> 00:49:45.419 align:start position:23% line:-2
クラウド上にあるドキュメント
などは進捗をレポートしましょう

00:49:47.087 --> 00:49:49.523 align:start position:30% line:-1
本日の内容を確認します

00:49:49.923 --> 00:49:55.562 align:start position:27% line:-2
ブラウザとピッカーの
APIの適用は簡単でしたね

00:49:55.662 --> 00:49:57.865 align:start position:32% line:-1
本日中に試しましょう

00:49:58.999 --> 00:50:02.035 align:start position:23% line:-1
ベストプラクティスも扱いました

00:49:58.999 --> 00:50:02.035 align:start position:23% line:-1
ベストプラクティスも扱いました

00:50:02.135 --> 00:50:05.672 align:start position:20% line:-1
Appでドキュメント管理ができます

00:50:06.707 --> 00:50:08.509 align:start position:34% line:-1
クラウドベンダには

00:50:08.976 --> 00:50:13.447 align:start position:21% line:-2
Siriのショートカットについて
お話ししました

00:50:13.614 --> 00:50:20.721 align:start position:21% line:-2
ユーザに ドキュメントへの
スムーズなアクセスを提供できます

00:50:22.189 --> 00:50:25.526 align:start position:7% line:-2
File Provider-Validation
ツールにも触れました

00:50:25.626 --> 00:50:30.631 align:start position:0% line:-2
FileProviderUI Extentionにおける
認証フロー適用の

00:50:30.731 --> 00:50:33.200 align:start position:27% line:-1
ガイドラインも説明しました

00:50:34.802 --> 00:50:39.740 align:start position:30% line:-2
セッションのサイトでは
更なる情報が得られます

00:50:40.040 --> 00:50:44.244 align:start position:0% line:-2
Introduction to Siri Shortcuts
にもご参加ください

00:50:44.611 --> 00:50:48.649 align:start position:25% line:-1
本日はありがとうございました

00:50:48.749 --> 00:50:52.419 align:start position:43% line:-1
(拍手)
