WEBVTT

00:00:07.107 --> 00:00:16.517 align:start position:43% line:-1
(音楽)

00:00:22.489 --> 00:00:28.762 align:start position:43% line:-1
(拍手)

00:00:29.062 --> 00:00:32.665 align:start position:25% line:-2
CarPlayのオーディオと
ナビのアプリケーションです

00:00:32.766 --> 00:00:36.537 align:start position:30% line:-2
開発担当のジョナサンと
申します

00:00:36.637 --> 00:00:39.773 align:start position:21% line:-2
CarPlayアプリケーションの
構築に関する―

00:00:39.873 --> 00:00:42.743 align:start position:30% line:-1
最新情報をお伝えします

00:00:44.044 --> 00:00:47.080 align:start position:29% line:-2
CarPlayオーディオ
アプリケーションを復習し

00:00:47.181 --> 00:00:51.818 align:start position:27% line:-2
ナビ用のCarPlay
フレームワークを紹介します

00:00:51.919 --> 00:00:55.622 align:start position:29% line:-2
これを使えば
ナビのアプリケーションが

00:00:55.722 --> 00:00:58.592 align:start position:30% line:-1
簡単に構築できるのです

00:00:58.759 --> 00:01:01.328 align:start position:32% line:-2
ではCarPlayの
復習をしましょう

00:00:58.759 --> 00:01:01.328 align:start position:32% line:-2
ではCarPlayの
復習をしましょう

00:01:03.230 --> 00:01:07.534 align:start position:30% line:-2
CarPlayは
より優れた安全な方法で

00:01:07.668 --> 00:01:13.407 align:start position:25% line:-2
車載スクリーン上での
iPhone操作を実現します

00:01:13.740 --> 00:01:16.777 align:start position:29% line:-1
通話やメッセージの送受信

00:01:16.877 --> 00:01:19.746 align:start position:25% line:-1
音楽 Podcast ラジオ

00:01:19.847 --> 00:01:23.150 align:start position:30% line:-2
ナビアプリケーションを
使った走行など

00:01:23.250 --> 00:01:25.519 align:start position:30% line:-1
すべて運転中に可能です

00:01:26.119 --> 00:01:30.891 align:start position:27% line:-2
iPhoneの
外部ディスプレーと言えます

00:01:31.258 --> 00:01:35.162 align:start position:34% line:-2
車載スクリーンは
各社 車種によって

00:01:35.262 --> 00:01:38.999 align:start position:25% line:-1
UIや外観の仕様が異なります

00:01:39.766 --> 00:01:44.438 align:start position:30% line:-2
しかしCarPlayは
その点も考慮しています

00:01:46.306 --> 00:01:49.610 align:start position:30% line:-2
CarPlay搭載車の
入力方法は様々です

00:01:49.710 --> 00:01:51.612 align:start position:36% line:-1
タッチスクリーン

00:01:51.712 --> 00:01:56.383 align:start position:32% line:-2
回転つまみで
調整や動作を選ぶ方式

00:01:56.483 --> 00:01:59.620 align:start position:34% line:-2
指の動きを感知して
入力する―

00:01:59.720 --> 00:02:02.956 align:start position:30% line:-1
タッチパッドもあります

00:01:59.720 --> 00:02:02.956 align:start position:30% line:-1
タッチパッドもあります

00:02:04.057 --> 00:02:06.126 align:start position:32% line:-1
右ハンドル車の場合は

00:02:06.293 --> 00:02:12.766 align:start position:23% line:-2
CarPlayの表示は自動的に
運転席側に変更されます

00:02:13.767 --> 00:02:19.773 align:start position:30% line:-2
夜間やライト点灯時の
ダークモードへの変更を

00:02:19.873 --> 00:02:23.644 align:start position:36% line:-2
iOSに通知する
車種もあります

00:02:24.611 --> 00:02:27.481 align:start position:32% line:-2
そのタイミングで
地図表示を変更する―

00:02:27.581 --> 00:02:29.883 align:start position:36% line:-1
仕様にもできます

00:02:31.418 --> 00:02:32.986 align:start position:30% line:-1
CarPlay搭載車は

00:02:33.086 --> 00:02:36.757 align:start position:36% line:-2
様々な仕様の
スクリーンに対応

00:02:37.090 --> 00:02:40.027 align:start position:29% line:-1
すべてiOSが管理します

00:02:40.127 --> 00:02:42.563 align:start position:34% line:-2
アプリケーションを
作ってしまえば

00:02:42.663 --> 00:02:46.366 align:start position:21% line:-1
あとはCarPlayに任せるだけ

00:02:46.633 --> 00:02:48.735 align:start position:27% line:-1
アプリケーションの種類には

00:02:49.036 --> 00:02:52.239 align:start position:27% line:-1
５つのカテゴリーがあります

00:02:52.339 --> 00:02:54.341 align:start position:34% line:-1
車は特別な場所です

00:02:54.441 --> 00:02:57.044 align:start position:27% line:-2
これらのアプリケーションを
お持ちなら

00:02:57.144 --> 00:03:00.914 align:start position:29% line:-2
CarPlayへの連携を
ご検討ください

00:02:57.144 --> 00:03:00.914 align:start position:29% line:-2
CarPlayへの連携を
ご検討ください

00:03:02.082 --> 00:03:06.553 align:start position:27% line:-2
このカテゴリーに該当するか
ご不明であれば

00:03:06.653 --> 00:03:10.657 align:start position:29% line:-2
後ほど
ご質問をお受けいたします

00:03:10.991 --> 00:03:14.962 align:start position:32% line:-2
こちらのURLからも
確認できます

00:03:15.462 --> 00:03:18.465 align:start position:29% line:-2
アプリケーションの一例を
紹介します

00:03:19.833 --> 00:03:23.170 align:start position:34% line:-2
自動車メーカーの
アプリケーションは

00:03:23.270 --> 00:03:28.509 align:start position:30% line:-2
そのメーカーの車種用に
構築されたものです

00:03:29.076 --> 00:03:31.512 align:start position:30% line:-1
各社 独自のUIを持ち

00:03:31.612 --> 00:03:37.384 align:start position:27% line:-2
温度調節や座席制御など
車内の設定をつかさどります

00:03:37.751 --> 00:03:43.190 align:start position:29% line:-2
SiriKitを使えば
音声による操作が可能です

00:03:45.225 --> 00:03:49.363 align:start position:29% line:-2
昨年導入したのが
メッセージとVoIPです

00:03:49.463 --> 00:03:52.399 align:start position:25% line:-1
SiriKitとも連携します

00:03:52.499 --> 00:03:56.003 align:start position:27% line:-2
CarPlayに接続すれば
運転したまま

00:03:56.103 --> 00:03:59.806 align:start position:30% line:-2
メッセージのやり取りが
できます

00:04:00.374 --> 00:04:06.013 align:start position:23% line:-2
SiriKitの詳細については
昨年の発表をご覧ください

00:04:08.248 --> 00:04:13.187 align:start position:25% line:-2
こちらはCarPlay対応の
オーディオアプリケーション

00:04:13.287 --> 00:04:16.523 align:start position:34% line:-2
車載スクリーンに
表示するデータには

00:04:16.623 --> 00:04:20.194 align:start position:32% line:-2
専用のテンプレートを
使用しています

00:04:20.494 --> 00:04:22.763 align:start position:29% line:-1
今回さらに性能をアップし

00:04:22.863 --> 00:04:26.466 align:start position:32% line:-2
最適化を実現したので
紹介します

00:04:27.968 --> 00:04:31.705 align:start position:29% line:-1
ナビアプリケーション用の

00:04:31.805 --> 00:04:35.742 align:start position:21% line:-2
CarPlayフレームワークにも
ご期待ください

00:04:37.444 --> 00:04:41.515 align:start position:43% line:-1
(拍手)

00:04:42.449 --> 00:04:48.255 align:start position:27% line:-2
ナビアプリケーションが
車載スクリーン上で使えます

00:04:48.388 --> 00:04:54.061 align:start position:29% line:-2
入力方法や画面の仕様を
心配する必要はありません

00:04:54.161 --> 00:04:58.365 align:start position:30% line:-2
ナビが随時更新されれば
いいのです

00:04:59.299 --> 00:05:05.272 align:start position:23% line:-2
CarPlayフレームワークは
各種テンプレートも提供

00:04:59.299 --> 00:05:05.272 align:start position:23% line:-2
CarPlayフレームワークは
各種テンプレートも提供

00:05:05.672 --> 00:05:08.775 align:start position:34% line:-2
ユーザ操作に対する
レスポンスを

00:05:08.876 --> 00:05:13.580 align:start position:29% line:-2
各種テンプレートを使って
自由に構築できます

00:05:13.680 --> 00:05:16.617 align:start position:30% line:-1
後ほど詳しく紹介します

00:05:18.118 --> 00:05:20.154 align:start position:36% line:-1
この５つの中から

00:05:20.254 --> 00:05:22.890 align:start position:34% line:-2
２つのカテゴリーに
着目します

00:05:22.990 --> 00:05:24.791 align:start position:32% line:-1
オーディオとナビです

00:05:24.892 --> 00:05:26.226 align:start position:34% line:-1
オーディオの説明は

00:05:26.326 --> 00:05:27.094 align:start position:38% line:-1
アルバートから

00:05:28.128 --> 00:05:32.499 align:start position:43% line:-1
(拍手)

00:05:33.433 --> 00:05:34.434 align:start position:41% line:-1
ありがとう

00:05:35.169 --> 00:05:39.373 align:start position:29% line:-2
この情報を早く
お知らせしたかったんです

00:05:39.640 --> 00:05:43.877 align:start position:25% line:-2
お伝えするのは
CarPlayへの設定方法と

00:05:44.044 --> 00:05:48.182 align:start position:30% line:-2
最新のiOS 12用に
最適化された情報です

00:05:48.348 --> 00:05:49.950 align:start position:30% line:-2
また
アプリケーション開発の

00:05:50.050 --> 00:05:54.488 align:start position:27% line:-2
最適な手順や
よくあるケースも紹介します

00:05:55.722 --> 00:05:58.625 align:start position:29% line:-1
ドライブと言えば音楽です

00:05:58.725 --> 00:06:03.096 align:start position:32% line:-2
運転中は好きな音楽を
聞きたいですね

00:05:58.725 --> 00:06:03.096 align:start position:32% line:-2
運転中は好きな音楽を
聞きたいですね

00:06:03.197 --> 00:06:06.967 align:start position:36% line:-2
クラシック音楽や
Podcast―

00:06:07.067 --> 00:06:10.037 align:start position:27% line:-1
ラジオのニュースも聴きます

00:06:10.671 --> 00:06:13.207 align:start position:27% line:-1
皆さんのアプリケーションで

00:06:13.307 --> 00:06:16.610 align:start position:36% line:-2
最高のドライブを
提供しましょう

00:06:17.177 --> 00:06:21.682 align:start position:32% line:-2
その一例に
私の作品を紹介します

00:06:21.782 --> 00:06:24.818 align:start position:32% line:-1
たぶんヒットするはず

00:06:25.853 --> 00:06:27.020 align:start position:30% line:-1
名前はSrirocka

00:06:28.622 --> 00:06:31.792 align:start position:29% line:-1
由来は私の大好物である―

00:06:31.892 --> 00:06:34.294 align:start position:32% line:-1
チリソースと音楽です

00:06:34.394 --> 00:06:40.300 align:start position:27% line:-2
大人気のアプリケーションに
なるでしょう

00:06:41.201 --> 00:06:44.371 align:start position:32% line:-2
Srirockaは
十分機能していますが

00:06:44.471 --> 00:06:46.440 align:start position:25% line:-1
CarPlayと連携させます

00:06:46.540 --> 00:06:48.842 align:start position:30% line:-1
その過程をお見せします

00:06:50.711 --> 00:06:53.480 align:start position:36% line:-2
ジョナサンが
お伝えしたとおり

00:06:53.580 --> 00:06:57.017 align:start position:30% line:-2
CarPlayでは
わずらわしい側面を排除

00:06:57.117 --> 00:07:00.354 align:start position:34% line:-2
入力方法や
画面の仕様などです

00:06:57.117 --> 00:07:00.354 align:start position:34% line:-2
入力方法や
画面の仕様などです

00:07:00.454 --> 00:07:04.224 align:start position:27% line:-2
そのためアプリケーションに
求められるのは

00:07:04.324 --> 00:07:07.327 align:start position:34% line:-2
情報の表示と
楽曲の提供だけです

00:07:07.461 --> 00:07:12.900 align:start position:30% line:-2
通常はテーブルビューや
タブで表示しますね

00:07:13.734 --> 00:07:17.037 align:start position:32% line:-2
そこで重要なのが
適切なコンテンツです

00:07:17.137 --> 00:07:22.576 align:start position:25% line:-2
開発者の方なら
既存のAPIはご存知でしょう

00:07:22.743 --> 00:07:24.645 align:start position:34% line:-1
詳しく見ていきます

00:07:26.246 --> 00:07:30.984 align:start position:23% line:-2
CarPlayで知っておくべき
３つのAPIです

00:07:31.485 --> 00:07:37.057 align:start position:27% line:-2
各APIの詳細は
昨年の発表時に触れましたが

00:07:37.157 --> 00:07:39.927 align:start position:32% line:-1
簡単に説明しましょう

00:07:40.661 --> 00:07:45.365 align:start position:14% line:-2
コンテンツを見るには
MPPlayableContentを使用

00:07:45.465 --> 00:07:48.435 align:start position:32% line:-2
これはデータソースと
デリゲートを保有し

00:07:48.535 --> 00:07:53.273 align:start position:27% line:-2
アプリケーションの情報を
CarPlayに追加します

00:07:53.373 --> 00:07:58.445 align:start position:23% line:-2
またCarPlay上での選曲も
コールバックされます

00:07:59.379 --> 00:08:03.383 align:start position:25% line:-2
“Now Playing”を
ロック画面で表示できるなら

00:07:59.379 --> 00:08:03.383 align:start position:25% line:-2
“Now Playing”を
ロック画面で表示できるなら

00:08:03.483 --> 00:08:08.989 align:start position:29% line:-2
次の２つのAPIは
すでにご存知だと思います

00:08:10.023 --> 00:08:14.628 align:start position:9% line:-2
MPNowPlayingInfoCenterは
メタデータを追加

00:08:14.728 --> 00:08:18.265 align:start position:38% line:-2
曲のタイトルや
アートワークが

00:08:18.365 --> 00:08:20.234 align:start position:21% line:-2
CarPlayの
“Now Playing”と連動

00:08:20.334 --> 00:08:23.504 align:start position:30% line:-1
ロック画面でも同じです

00:08:24.404 --> 00:08:28.375 align:start position:11% line:-2
MPRemoteCommandCenterは
遠隔操作に対応

00:08:28.475 --> 00:08:31.345 align:start position:21% line:-2
“Play”や
“Next Track”などです

00:08:32.044 --> 00:08:35.616 align:start position:25% line:-2
CarPlayでも連続再生を
実現します

00:08:35.716 --> 00:08:37.851 align:start position:34% line:-1
コードを見ましょう

00:08:38.952 --> 00:08:42.389 align:start position:25% line:-2
Srirockaを例に挙げて
説明します

00:08:42.489 --> 00:08:45.826 align:start position:30% line:-2
アプリケーションに
最低限必要なのはこちら

00:08:45.926 --> 00:08:50.564 align:start position:7% line:-2
まずは
MPPlayableContentManager

00:08:50.664 --> 00:08:54.067 align:start position:29% line:-2
Srirockaが情報を
CarPlayに提供し

00:08:54.168 --> 00:08:56.403 align:start position:30% line:-1
必要に応じて表示します

00:08:57.337 --> 00:09:01.108 align:start position:14% line:-2
次に使うのは
NowPlayingInfoCenter

00:08:57.337 --> 00:09:01.108 align:start position:14% line:-2
次に使うのは
NowPlayingInfoCenter

00:09:01.208 --> 00:09:04.945 align:start position:29% line:-1
メタデータに情報を提供し

00:09:05.045 --> 00:09:06.813 align:start position:25% line:-2
“Now Playing”を
表示します

00:09:07.748 --> 00:09:10.751 align:start position:12% line:-2
最後が
MPRemoteCommandCenter

00:09:10.851 --> 00:09:12.986 align:start position:30% line:-1
特に“Play”の時に

00:09:13.086 --> 00:09:17.858 align:start position:21% line:-2
Srirockaが
“Now Playing”を表示

00:09:18.859 --> 00:09:24.698 align:start position:16% line:-2
CarPlayに必要なAPIは
MPPlayableContentです

00:09:24.798 --> 00:09:28.802 align:start position:34% line:-2
iOS 12では
この最適化に着目し

00:09:28.902 --> 00:09:32.940 align:start position:18% line:-2
MPPlayableContentを
リマスターしました

00:09:34.408 --> 00:09:38.479 align:start position:43% line:-1
(拍手)

00:09:39.079 --> 00:09:41.648 align:start position:18% line:-2
MPPlayableContentを
見直し

00:09:41.748 --> 00:09:46.587 align:start position:27% line:-2
データソースやデリゲートの
要求のパフォーマンスを向上

00:09:46.954 --> 00:09:50.457 align:start position:29% line:-2
既存のアプリケーションを
変更せずに

00:09:50.557 --> 00:09:56.663 align:start position:27% line:-2
素早く起動し 様々な動作に
スムーズに対応します

00:09:57.231 --> 00:10:00.267 align:start position:32% line:-2
アプリケーションとの
互換性も向上し

00:09:57.231 --> 00:10:00.267 align:start position:32% line:-2
アプリケーションとの
互換性も向上し

00:10:00.367 --> 00:10:04.872 align:start position:27% line:-2
ユーザの操作を予測し
CarPlayに表示します

00:10:05.639 --> 00:10:09.576 align:start position:29% line:-2
これでアプリケーションが
進化しますね

00:10:09.676 --> 00:10:13.180 align:start position:27% line:-2
私たちが検討したのは
reloadDataの実装

00:10:13.280 --> 00:10:18.652 align:start position:30% line:-2
データをリロードして
最適化してくれるのです

00:10:19.119 --> 00:10:24.291 align:start position:18% line:-2
実際 reloadDataを使うのは
限られた時だけでした

00:10:24.658 --> 00:10:29.630 align:start position:16% line:-2
reloadDataはCarPlayの
階層を脱構築し

00:10:29.730 --> 00:10:32.733 align:start position:30% line:-1
すべてを構築し直します

00:10:32.833 --> 00:10:36.570 align:start position:34% line:-2
これは費用のかかる
オペレーションです

00:10:37.704 --> 00:10:40.607 align:start position:29% line:-1
コンテンツの更新だけなら

00:10:40.707 --> 00:10:44.578 align:start position:7% line:-2
beginUpdatesとendUpdatesが
使えます

00:10:44.678 --> 00:10:47.347 align:start position:32% line:-1
問題なく処理できます

00:10:48.282 --> 00:10:51.585 align:start position:7% line:-1
beginUpdatesとendUpdatesは

00:10:51.685 --> 00:10:55.255 align:start position:32% line:-2
データとの
非同期動作を行います

00:10:55.355 --> 00:11:01.261 align:start position:30% line:-2
内部データは別の場所に
格納しておいてください

00:10:55.355 --> 00:11:01.261 align:start position:30% line:-2
内部データは別の場所に
格納しておいてください

00:11:01.361 --> 00:11:05.299 align:start position:34% line:-2
必要な時だけ
情報を共有できれば

00:11:05.399 --> 00:11:07.835 align:start position:32% line:-1
連携がうまくいきます

00:11:08.802 --> 00:11:13.540 align:start position:25% line:-2
次はCarPlayでの動作の
最適化についてです

00:11:14.308 --> 00:11:18.378 align:start position:29% line:-2
Srirockaは一部で
実装されています

00:11:18.479 --> 00:11:22.516 align:start position:30% line:-2
ユーザは
このプレイリストを選択

00:11:22.616 --> 00:11:25.719 align:start position:29% line:-1
大人気のプレイリストです

00:11:26.186 --> 00:11:30.524 align:start position:34% line:-2
なぜかロードに
手間取っていますね

00:11:30.624 --> 00:11:34.728 align:start position:34% line:-2
一定時間を過ぎると
タイムアウトします

00:11:34.828 --> 00:11:38.799 align:start position:32% line:-2
原因は完了ハンドラか
情報の読み込みです

00:11:39.566 --> 00:11:41.468 align:start position:38% line:-1
電話の状態は？

00:11:42.169 --> 00:11:45.239 align:start position:30% line:-1
運転時に考えられるのは

00:11:45.339 --> 00:11:48.942 align:start position:36% line:-2
通信の遅さや
画面のロックです

00:11:49.042 --> 00:11:54.281 align:start position:29% line:-2
多くのユーザは運転中に
パスコードをかけています

00:11:55.349 --> 00:11:59.953 align:start position:27% line:-2
ロック時に
データにアクセスできないと

00:12:00.053 --> 00:12:04.458 align:start position:25% line:-2
情報が得られず
CarPlayは機能しません

00:12:04.558 --> 00:12:08.061 align:start position:32% line:-2
ロック時でも
アクセスできるように

00:12:08.161 --> 00:12:10.998 align:start position:29% line:-1
利用規約を見直しましょう

00:12:12.933 --> 00:12:14.968 align:start position:34% line:-1
もう１つの問題は―

00:12:16.069 --> 00:12:21.742 align:start position:27% line:-2
携帯の電波が入らない場所で
運転している時です

00:12:22.342 --> 00:12:27.214 align:start position:27% line:-2
運転場所は田舎から都会まで
様々ですね

00:12:27.314 --> 00:12:29.516 align:start position:36% line:-1
走行場所が違えば

00:12:29.917 --> 00:12:33.554 align:start position:21% line:-2
CarPlayやデータサービスも
異なります

00:12:33.654 --> 00:12:37.758 align:start position:29% line:-2
Wi-Fiがない状況にも
備えねばなりません

00:12:38.992 --> 00:12:41.695 align:start position:25% line:-1
Srirockaも同じですが

00:12:41.795 --> 00:12:46.466 align:start position:32% line:-2
話題の曲を選ぶには
高度な技術が必要です

00:12:46.567 --> 00:12:50.804 align:start position:34% line:-2
しかもデバイス上で
行わねばなりません

00:12:50.904 --> 00:12:53.073 align:start position:30% line:-1
処理にも時間が必要です

00:12:53.173 --> 00:12:54.975 align:start position:32% line:-1
では その解決策は？

00:12:55.976 --> 00:13:01.482 align:start position:9% line:-2
beginLoadingChildItemsを
使えばいいのです

00:12:55.976 --> 00:13:01.482 align:start position:9% line:-2
beginLoadingChildItemsを
使えばいいのです

00:13:01.815 --> 00:13:06.820 align:start position:18% line:-2
CarPlayでIndexPathが
閲覧できれば呼び出せます

00:13:06.920 --> 00:13:11.258 align:start position:30% line:-2
テーブルのスクロールや
タブで選ぶと

00:13:11.492 --> 00:13:15.462 align:start position:9% line:-2
beginLoadingChildItemsが
呼び出されます

00:13:17.030 --> 00:13:21.969 align:start position:30% line:-2
コンテンツを選ぶ前に
ロードが可能になります

00:13:22.336 --> 00:13:24.705 align:start position:20% line:-1
これはSrirockaのコードです

00:13:24.805 --> 00:13:30.410 align:start position:25% line:-2
先ほどのプレイリストが
CarPlayに表示されると

00:13:30.511 --> 00:13:32.546 align:start position:36% line:-1
処理が始まります

00:13:32.646 --> 00:13:37.151 align:start position:29% line:-2
ネットワークリクエストを
経由して

00:13:37.251 --> 00:13:40.354 align:start position:27% line:-1
コンテンツの提供が可能です

00:13:41.388 --> 00:13:45.559 align:start position:30% line:-2
CarPlay用の
アプリケーション開発で

00:13:45.659 --> 00:13:47.861 align:start position:32% line:-1
想定される事態とは？

00:13:48.662 --> 00:13:53.267 align:start position:23% line:-2
Srirockaは満足度の高い
サービスです

00:13:53.367 --> 00:13:57.538 align:start position:32% line:-2
ご覧のとおり
デザインもすばらしく

00:13:57.638 --> 00:14:00.841 align:start position:29% line:-1
リピート率も高いでしょう

00:13:57.638 --> 00:14:00.841 align:start position:29% line:-1
リピート率も高いでしょう

00:14:01.441 --> 00:14:03.177 align:start position:27% line:-1
では CarPlayでは？

00:14:04.411 --> 00:14:07.748 align:start position:38% line:-2
ログアウト時は
接続不可能です

00:14:07.848 --> 00:14:10.184 align:start position:29% line:-1
これでは楽しくありません

00:14:10.284 --> 00:14:15.589 align:start position:34% line:-2
アプリケーションに
接続できないのです

00:14:16.590 --> 00:14:19.693 align:start position:36% line:-2
ログアウト中でも
操作を可能にし

00:14:19.793 --> 00:14:23.997 align:start position:30% line:-2
楽しい体験が
できるようにしましょう

00:14:24.097 --> 00:14:27.434 align:start position:34% line:-2
そうすれば
満足度は上がります

00:14:28.469 --> 00:14:32.906 align:start position:32% line:-2
オーディオに関しては
利点が多いです

00:14:33.607 --> 00:14:37.744 align:start position:18% line:-2
MPPlayableContentの
テンプレートを使えば

00:14:37.845 --> 00:14:42.282 align:start position:23% line:-2
CarPlayでも最高の体験を
提供できます

00:14:42.883 --> 00:14:47.454 align:start position:29% line:-2
ログアウトや
ロック画面の時を想定して

00:14:47.554 --> 00:14:50.858 align:start position:27% line:-1
スムーズに機能させましょう

00:14:51.692 --> 00:14:55.863 align:start position:27% line:-2
iOS 12のおかげで
アプリケーションの開発でも

00:14:55.963 --> 00:14:57.965 align:start position:32% line:-2
最適化や性能アップが
期待されます

00:14:58.065 --> 00:15:03.570 align:start position:27% line:-2
皆さんのアプリケーションも
改良してみてください

00:14:58.065 --> 00:15:03.570 align:start position:27% line:-2
皆さんのアプリケーションも
改良してみてください

00:15:04.271 --> 00:15:06.840 align:start position:30% line:-1
正しい方向に進むために

00:15:06.940 --> 00:15:10.978 align:start position:23% line:-2
CarPlayフレームワークを
紹介します

00:15:11.078 --> 00:15:11.678 align:start position:46% line:-1
では

00:15:11.778 --> 00:15:16.483 align:start position:43% line:-1
(拍手)

00:15:17.017 --> 00:15:18.519 align:start position:41% line:-1
ありがとう

00:15:19.286 --> 00:15:24.558 align:start position:29% line:-2
ナビのアプリケーションに
関する発表です

00:15:24.858 --> 00:15:29.196 align:start position:30% line:-2
CarPlayにおける
ナビの役割は大きく

00:15:29.296 --> 00:15:34.001 align:start position:27% line:-2
なじみのアプリケーションが
使えたら最高です

00:15:34.835 --> 00:15:37.070 align:start position:36% line:-1
お伝えしたとおり

00:15:37.171 --> 00:15:41.141 align:start position:30% line:-2
テンプレートを基にして
それを実現しました

00:15:42.276 --> 00:15:46.647 align:start position:32% line:-2
アプリケーションの
データやメタデータは

00:15:46.747 --> 00:15:49.550 align:start position:36% line:-2
車載スクリーンに
表示されます

00:15:49.783 --> 00:15:52.119 align:start position:34% line:-1
動作状況も順調です

00:15:52.452 --> 00:15:56.390 align:start position:27% line:-2
でもナビアプリケーションは
勝手が違います

00:15:56.723 --> 00:15:59.993 align:start position:32% line:-1
皆さんの地図は美しい

00:16:00.093 --> 00:16:03.163 align:start position:32% line:-1
そんな見事な地図なら

00:16:03.263 --> 00:16:06.633 align:start position:27% line:-1
当然 車内でも使いたいはず

00:16:07.100 --> 00:16:11.471 align:start position:23% line:-2
iOS 12ではCarPlay
フレームワークを発表

00:16:11.772 --> 00:16:14.074 align:start position:23% line:-1
CarPlayフレームワークは

00:16:14.174 --> 00:16:18.312 align:start position:29% line:-2
ナビアプリケーションを
構築する最高のツールです

00:16:18.445 --> 00:16:22.716 align:start position:27% line:-2
テンプレートオブジェクトを
使えば

00:16:22.816 --> 00:16:27.154 align:start position:27% line:-2
iOSがアプリケーションの
UIに変換します

00:16:27.588 --> 00:16:33.560 align:start position:25% line:-2
これさえあれば 簡単に
CarPlayでの動作を実現

00:16:34.261 --> 00:16:36.497 align:start position:36% line:-1
詳しく説明します

00:16:36.830 --> 00:16:40.334 align:start position:27% line:-2
我々が開発した
CountryRoadsは

00:16:40.434 --> 00:16:43.871 align:start position:34% line:-2
景色を優先して
道案内してくれます

00:16:44.071 --> 00:16:46.173 align:start position:29% line:-1
CarPlay版がこちら

00:16:47.474 --> 00:16:53.480 align:start position:16% line:-2
ホーム画面にCountryRoadsの
アイコンが出ています

00:16:53.881 --> 00:16:58.685 align:start position:27% line:-2
起動すると
タイル画像が表示されました

00:16:59.119 --> 00:17:04.191 align:start position:27% line:-2
CarPlayに接続すると
ウインドウが表れます

00:16:59.119 --> 00:17:04.191 align:start position:27% line:-2
CarPlayに接続すると
ウインドウが表れます

00:17:04.324 --> 00:17:07.361 align:start position:32% line:-1
ここに表示されるのは

00:17:07.461 --> 00:17:11.698 align:start position:29% line:-2
非対話型のナビに関連した
コンテンツです

00:17:12.199 --> 00:17:14.233 align:start position:30% line:-1
テンプレートのおかげで

00:17:14.334 --> 00:17:19.406 align:start position:27% line:-2
iOSがアプリケーションの
UIに変更します

00:17:20.339 --> 00:17:24.645 align:start position:30% line:-2
CarPlay接続時の
コードがこちら

00:17:25.646 --> 00:17:28.715 align:start position:34% line:-2
アプリケーションの
デリゲートと

00:17:28.816 --> 00:17:32.286 align:start position:25% line:-2
CarPlayのプロトコルを
一致させます

00:17:32.386 --> 00:17:34.188 align:start position:12% line:-2
CPApplicationDelegate
です

00:17:35.022 --> 00:17:40.527 align:start position:0% line:-2
これは
didConnectCarInterfaceController

00:17:41.061 --> 00:17:44.565 align:start position:32% line:-2
重要なオブジェクトを
２つ提供します

00:17:44.665 --> 00:17:48.202 align:start position:12% line:-2
１つは
CPInterfaceController

00:17:48.702 --> 00:17:52.039 align:start position:32% line:-2
アプリケーションと
テンプレートをつなぎ

00:17:52.139 --> 00:17:55.542 align:start position:34% line:-2
車載スクリーンへの
表示を可能にします

00:17:55.976 --> 00:18:00.881 align:start position:27% line:-2
そして先ほどのウインドウも
表示させます

00:17:55.976 --> 00:18:00.881 align:start position:27% line:-2
そして先ほどのウインドウも
表示させます

00:18:01.815 --> 00:18:06.453 align:start position:32% line:-2
２つのリファレンスは
覚えておいてください

00:18:07.221 --> 00:18:11.191 align:start position:16% line:-2
そしてView Controllerを
作り出し

00:18:11.291 --> 00:18:13.093 align:start position:18% line:-2
Review Controllerに
割り当てます

00:18:13.193 --> 00:18:15.329 align:start position:32% line:-2
ルートテンプレートを
作ったら

00:18:15.429 --> 00:18:19.433 align:start position:14% line:-2
InterfaceControllerで
設定します

00:18:20.200 --> 00:18:24.071 align:start position:30% line:-2
いくつかテンプレートを
紹介しましょう

00:18:24.171 --> 00:18:27.007 align:start position:29% line:-1
１つは おなじみのもので

00:18:27.107 --> 00:18:30.144 align:start position:36% line:-2
ユーザにも
関連するものです

00:18:30.244 --> 00:18:32.312 align:start position:23% line:-1
それは MapTemplate

00:18:32.913 --> 00:18:38.285 align:start position:30% line:-2
他のテンプレートと違い
透過的になっています

00:18:38.452 --> 00:18:41.255 align:start position:27% line:-1
ウインドウ上のコンテンツは

00:18:41.355 --> 00:18:44.725 align:start position:25% line:-2
MapTemplateの下に
表示されます

00:18:45.425 --> 00:18:48.428 align:start position:27% line:-1
テンプレートの構成は様々で

00:18:48.529 --> 00:18:50.831 align:start position:34% line:-1
ボタンの追加も可能

00:18:50.998 --> 00:18:55.969 align:start position:30% line:-2
左右に２つずつ
設定することができます

00:18:56.170 --> 00:18:59.339 align:start position:20% line:-1
これらはCPBarButtonです

00:18:59.439 --> 00:19:02.176 align:start position:30% line:-1
テキストや画像で作成し

00:18:59.439 --> 00:19:02.176 align:start position:30% line:-1
テキストや画像で作成し

00:19:02.276 --> 00:19:05.646 align:start position:36% line:-2
サイズや仕様を
自動で合わせます

00:19:06.013 --> 00:19:10.150 align:start position:32% line:-2
ボタン操作は
定義されていないので

00:19:10.250 --> 00:19:13.787 align:start position:27% line:-2
独自のアクションハンドラが
必要です

00:19:13.887 --> 00:19:17.090 align:start position:34% line:-2
車載スクリーン上で
ボタンを押すと

00:19:17.191 --> 00:19:19.793 align:start position:32% line:-2
アクションハンドラが
呼ばれます

00:19:20.727 --> 00:19:24.898 align:start position:30% line:-2
地図のウインドウ上部に
専用のボタンを

00:19:24.998 --> 00:19:26.667 align:start position:32% line:-1
４つまで配置できます

00:19:26.767 --> 00:19:32.105 align:start position:29% line:-2
通常のバーボタンと異なり
カスタマイズが可能です

00:19:32.940 --> 00:19:38.278 align:start position:27% line:-2
MapTemplateには
多くの機能があります

00:19:38.378 --> 00:19:40.514 align:start position:32% line:-1
地図をパンする機能や

00:19:41.048 --> 00:19:45.519 align:start position:32% line:-2
重要な情報を通知する
アラート機能などです

00:19:45.619 --> 00:19:48.255 align:start position:32% line:-2
もちろん
ルート案内もそうです

00:19:48.689 --> 00:19:50.624 align:start position:30% line:-1
ルート案内の説明の前に

00:19:50.724 --> 00:19:54.595 align:start position:30% line:-2
パンとアラートについて
お話します

00:19:54.862 --> 00:19:57.264 align:start position:32% line:-1
パン機能を付けるなら

00:19:57.364 --> 00:20:00.567 align:start position:36% line:-2
パンモード用の
ボタンが必要です

00:19:57.364 --> 00:20:00.567 align:start position:36% line:-2
パンモード用の
ボタンが必要です

00:20:00.667 --> 00:20:06.006 align:start position:27% line:-2
ナビゲーションバーか
地図ウインドウに配置します

00:20:06.306 --> 00:20:11.578 align:start position:30% line:-2
パンモードでは４方向に
ボタンが表示されます

00:20:11.712 --> 00:20:16.917 align:start position:25% line:-2
アプリケーションは
APIを介し方向を認識します

00:20:17.417 --> 00:20:21.388 align:start position:34% line:-2
車載システムの
複雑さを軽減する―

00:20:21.488 --> 00:20:23.557 align:start position:36% line:-1
一例を紹介します

00:20:23.891 --> 00:20:26.460 align:start position:34% line:-1
タッチ操作において

00:20:26.560 --> 00:20:29.463 align:start position:29% line:-2
スクリーンのレイテンシは
問いません

00:20:29.663 --> 00:20:33.467 align:start position:30% line:-2
回転つまみや
タッチパッドも使えます

00:20:33.700 --> 00:20:37.037 align:start position:34% line:-2
回転つまみについて
補足します

00:20:37.137 --> 00:20:39.873 align:start position:32% line:-1
方向の変換ができれば

00:20:39.973 --> 00:20:42.709 align:start position:30% line:-1
APIで連携が可能です

00:20:42.809 --> 00:20:45.946 align:start position:34% line:-2
システム間の連携は
心配無用です

00:20:46.813 --> 00:20:50.284 align:start position:32% line:-2
運転中に
知りたい情報と言えば

00:20:50.384 --> 00:20:55.089 align:start position:29% line:-2
道路情報や
より最適なルートでしょう

00:20:55.189 --> 00:20:57.891 align:start position:27% line:-2
そこで使うのが
ナビゲーションアラート機能

00:20:58.091 --> 00:21:00.828 align:start position:27% line:-2
MapTemplateの
ナビゲーションアラートには

00:20:58.091 --> 00:21:00.828 align:start position:27% line:-2
MapTemplateの
ナビゲーションアラートには

00:21:00.928 --> 00:21:06.900 align:start position:25% line:-2
タイトル サブタイトル 画像
アクションの設定が可能です

00:21:07.000 --> 00:21:11.905 align:start position:27% line:-2
アラートを消すタイミングも
設定できます

00:21:13.140 --> 00:21:16.510 align:start position:32% line:-2
テンプレートの構成を
見ながら

00:21:16.610 --> 00:21:20.814 align:start position:27% line:-2
CountryRoadsに
ボタンを追加してみます

00:21:22.416 --> 00:21:24.551 align:start position:34% line:-2
これは以前の
テンプレートなので

00:21:24.651 --> 00:21:28.722 align:start position:21% line:-2
まずCPMapTemplateの
インスタンスを生成します

00:21:29.523 --> 00:21:32.626 align:start position:29% line:-2
次に
追加するボタンを作ります

00:21:33.494 --> 00:21:35.362 align:start position:21% line:-1
CountryRoadsの特色は

00:21:35.462 --> 00:21:38.131 align:start position:36% line:-2
よく使う項目から
検索できること

00:21:38.699 --> 00:21:40.033 align:start position:32% line:-1
このボタンを作ります

00:21:40.134 --> 00:21:42.703 align:start position:9% line:-1
CPBarButtonのType Imageに

00:21:42.803 --> 00:21:48.242 align:start position:30% line:-2
よく使う項目を表示する
アクションを指定します

00:21:48.642 --> 00:21:51.712 align:start position:32% line:-2
画像を
ボタンに割り当てます

00:21:51.845 --> 00:21:55.749 align:start position:30% line:-2
すでにあるボタンの横に
配置するので

00:21:55.849 --> 00:22:00.254 align:start position:27% line:-2
ナビゲーションバーに
２つのボタンを割り当てます

00:21:55.849 --> 00:22:00.254 align:start position:27% line:-2
ナビゲーションバーに
２つのボタンを割り当てます

00:22:00.554 --> 00:22:02.156 align:start position:38% line:-1
これで完了です

00:22:03.056 --> 00:22:05.392 align:start position:29% line:-1
新たなボタンができました

00:22:05.492 --> 00:22:08.829 align:start position:30% line:-2
次は
ユーザへの表示方法です

00:22:08.929 --> 00:22:11.432 align:start position:27% line:-1
ここで最適なテンプレートが

00:22:11.532 --> 00:22:13.267 align:start position:25% line:-1
GridTemplateです

00:22:13.467 --> 00:22:18.839 align:start position:30% line:-2
グリッド上に最大８つの
ボタンが配置できます

00:22:19.506 --> 00:22:24.812 align:start position:27% line:-2
ボタンには画像とタイトルを
設定できます

00:22:25.679 --> 00:22:31.051 align:start position:30% line:-2
ナビゲーションバーにも
適用可能で

00:22:31.151 --> 00:22:35.722 align:start position:16% line:-2
タイトルのみでも
GridTemplateを利用できます

00:22:36.423 --> 00:22:39.693 align:start position:21% line:-2
早速 GridTemplateを
使ってみます

00:22:41.662 --> 00:22:44.998 align:start position:25% line:-2
まずは
“Parks”ボタンの画像を

00:22:45.399 --> 00:22:47.034 align:start position:36% line:-1
リトリーブします

00:22:48.569 --> 00:22:52.272 align:start position:32% line:-2
“Parks”と
リトリーブした画像で

00:22:52.372 --> 00:22:54.074 align:start position:34% line:-1
インスタンスを生成

00:22:55.509 --> 00:22:58.278 align:start position:32% line:-1
次に配置を指定します

00:22:58.378 --> 00:23:01.048 align:start position:23% line:-2
同じく
CPGridTemplateで

00:22:58.378 --> 00:23:01.048 align:start position:23% line:-2
同じく
CPGridTemplateで

00:23:01.148 --> 00:23:04.151 align:start position:23% line:-2
よく使う項目の
“Favorites”を作成し

00:23:04.251 --> 00:23:07.321 align:start position:36% line:-2
コードで作成した
ボタンと並べます

00:23:07.988 --> 00:23:11.859 align:start position:12% line:-2
ここで使うのが
InterfaceControllerです

00:23:12.025 --> 00:23:15.028 align:start position:30% line:-1
車載スクリーンの表示に

00:23:15.162 --> 00:23:20.534 align:start position:27% line:-2
GridTemplateを
追加することができます

00:23:22.069 --> 00:23:26.273 align:start position:30% line:-2
よく使う項目の
検索が可能になりました

00:23:26.373 --> 00:23:31.612 align:start position:20% line:-2
検索結果の表示には
ListTemplateを使います

00:23:32.513 --> 00:23:35.682 align:start position:36% line:-2
リスト表示用の
テンプレートです

00:23:35.782 --> 00:23:41.088 align:start position:30% line:-2
アイテムには文字 画像
記号などを設定できます

00:23:41.321 --> 00:23:42.789 align:start position:30% line:-1
複数セクションに対応し

00:23:42.890 --> 00:23:47.761 align:start position:30% line:-2
ナビゲーションバーも
同じように表示できます

00:23:48.161 --> 00:23:51.031 align:start position:23% line:-1
CarPlayフレームワークは

00:23:51.165 --> 00:23:54.768 align:start position:27% line:-2
必要に応じ
スクロールバーを表示します

00:23:54.868 --> 00:23:57.037 align:start position:29% line:-1
簡単に結果が確認できます

00:23:57.938 --> 00:23:59.740 align:start position:27% line:-2
ListTemplateを
構成しましょう

00:24:00.941 --> 00:24:03.310 align:start position:30% line:-1
まず 検索結果の配列を

00:24:03.410 --> 00:24:09.149 align:start position:25% line:-2
CPListItemの配列に
変換する必要があります

00:24:09.416 --> 00:24:12.886 align:start position:30% line:-2
検索結果のプロパティを
使います

00:24:14.488 --> 00:24:20.494 align:start position:23% line:-2
CPListTemplateを
セクションとともに初期化し

00:24:20.794 --> 00:24:25.666 align:start position:29% line:-2
タイトルとユーザ操作の
デリゲートを割り当てます

00:24:26.133 --> 00:24:30.537 align:start position:29% line:-2
テンプレートの追加方法は
先ほどと同じです

00:24:31.405 --> 00:24:34.208 align:start position:32% line:-2
ユーザが
検索結果を確認します

00:24:35.475 --> 00:24:40.480 align:start position:29% line:-2
この時 テンプレートに
完了ハンドラが呼ばれます

00:24:41.682 --> 00:24:46.053 align:start position:21% line:-2
CarPlayフレームワークには
他にもアイテムがあります

00:24:47.054 --> 00:24:50.724 align:start position:23% line:-2
CarPlayフレームワークの
優れた点の１つが

00:24:50.824 --> 00:24:55.028 align:start position:30% line:-2
車載システムの複雑さを
軽減してくれること

00:24:55.629 --> 00:24:59.766 align:start position:18% line:-2
こちらは
SearchTemplateにある―

00:24:59.867 --> 00:25:02.202 align:start position:34% line:-2
タッチスクリーン用
キーボードです

00:24:59.867 --> 00:25:02.202 align:start position:34% line:-2
タッチスクリーン用
キーボードです

00:25:02.469 --> 00:25:06.373 align:start position:29% line:-2
タッチスクリーン搭載車は
限られます

00:25:06.607 --> 00:25:10.477 align:start position:36% line:-2
回転つまみを使う
車も多いでしょう

00:25:10.878 --> 00:25:16.049 align:start position:34% line:-2
その場合は
文字列で表示します

00:25:16.550 --> 00:25:22.189 align:start position:32% line:-2
同じ検索APIを介し
文字認識ができれば

00:25:22.289 --> 00:25:26.093 align:start position:36% line:-2
タッチパッドでも
問題ありません

00:25:27.161 --> 00:25:32.199 align:start position:32% line:-2
重要な情報をユーザに
表示したい時は

00:25:32.332 --> 00:25:36.203 align:start position:20% line:-2
ActionSheetStyleの
CPAlertを使います

00:25:36.303 --> 00:25:41.408 align:start position:32% line:-2
特に重要な情報は
全画面表示が可能です

00:25:42.543 --> 00:25:46.880 align:start position:27% line:-1
また 音声も重要な要素です

00:25:47.181 --> 00:25:50.884 align:start position:30% line:-2
音声コントロールの
テンプレートもあります

00:25:51.485 --> 00:25:55.489 align:start position:30% line:-2
ここで再び
ジョナサンに代わります

00:25:55.589 --> 00:25:56.356 align:start position:41% line:-1
ジョナサン

00:25:56.490 --> 00:26:00.761 align:start position:43% line:-1
(拍手)

00:25:56.490 --> 00:26:00.761 align:start position:43% line:-1
(拍手)

00:26:01.795 --> 00:26:02.763 align:start position:41% line:-1
ありがとう

00:26:03.197 --> 00:26:05.966 align:start position:23% line:-2
CountryRoadsを例に
デモを行います

00:26:11.738 --> 00:26:14.908 align:start position:23% line:-2
Xcodeの
CarPlayシミュレータです

00:26:15.475 --> 00:26:17.544 align:start position:32% line:-1
まずはホーム画面です

00:26:17.644 --> 00:26:21.014 align:start position:27% line:-2
CarPlay仕様の
CountryRoadsを

00:26:21.115 --> 00:26:23.250 align:start position:38% line:-1
起動してみます

00:26:24.952 --> 00:26:27.755 align:start position:29% line:-1
最初に地図が表示されます

00:26:27.855 --> 00:26:31.258 align:start position:27% line:-1
透過性のオーバーレイ方式で

00:26:31.358 --> 00:26:34.895 align:start position:30% line:-2
タイル画像が
美しい地図になりました

00:26:35.028 --> 00:26:37.197 align:start position:34% line:-1
すばらしいですよね

00:26:38.098 --> 00:26:40.334 align:start position:32% line:-1
地図の拡大と縮小には

00:26:40.701 --> 00:26:43.937 align:start position:20% line:-1
CPMapButtonを利用します

00:26:45.973 --> 00:26:49.610 align:start position:34% line:-2
パンモードへの
切り替えもできます

00:26:52.546 --> 00:26:56.316 align:start position:34% line:-2
これらのボタンは
簡単に設定できます

00:26:56.417 --> 00:27:00.053 align:start position:34% line:-2
ユーザが
ボタンを操作すると

00:26:56.417 --> 00:27:00.053 align:start position:34% line:-2
ユーザが
ボタンを操作すると

00:27:00.154 --> 00:27:04.925 align:start position:29% line:-2
アプリケーションに
指令が伝わり実行されます

00:27:05.759 --> 00:27:07.795 align:start position:30% line:-1
先ほど追加したボタンが

00:27:07.895 --> 00:27:11.064 align:start position:32% line:-2
ナビゲーションバーに
ありますね

00:27:11.365 --> 00:27:16.570 align:start position:21% line:-2
ボタンをタップすると
GridTemplateと連動し

00:27:16.670 --> 00:27:20.073 align:start position:30% line:-2
よく使う目的地の項目が
表示されます

00:27:20.407 --> 00:27:25.979 align:start position:21% line:-2
“Parks”を選ぶと
ListTemplateと連動し

00:27:26.213 --> 00:27:29.683 align:start position:30% line:-2
近くの公園が
リストで表示されました

00:27:29.883 --> 00:27:31.618 align:start position:36% line:-1
続きはまた後ほど

00:27:31.718 --> 00:27:33.287 align:start position:34% line:-1
マイクに代わります

00:27:35.823 --> 00:27:38.125 align:start position:43% line:-1
(拍手)

00:27:40.727 --> 00:27:42.129 align:start position:41% line:-1
ありがとう

00:27:43.797 --> 00:27:48.802 align:start position:32% line:-2
ユーザにとって
最も重要な機能の１つ

00:27:48.902 --> 00:27:51.705 align:start position:32% line:-1
それはルート案内です

00:27:52.005 --> 00:27:56.210 align:start position:32% line:-2
ルート案内開始までの
典型的な流れを

00:27:56.310 --> 00:27:58.445 align:start position:39% line:-2
ユーザ視点で
見ていきます

00:27:59.413 --> 00:28:02.049 align:start position:30% line:-1
まずは目的地を選びます

00:27:59.413 --> 00:28:02.049 align:start position:30% line:-1
まずは目的地を選びます

00:28:02.382 --> 00:28:06.286 align:start position:27% line:-1
ナビ上から選ぶ場合もあれば

00:28:06.687 --> 00:28:10.224 align:start position:27% line:-2
すでに
決まっている場合もあります

00:28:11.058 --> 00:28:14.261 align:start position:38% line:-2
次はルートと
関連情報を確認

00:28:14.361 --> 00:28:18.966 align:start position:27% line:-2
例えば
所要時間や到着予定時刻です

00:28:19.533 --> 00:28:22.703 align:start position:30% line:-1
ルート候補が複数あれば

00:28:22.803 --> 00:28:27.207 align:start position:27% line:-2
プレビューを見て
最適なルートを選ぶでしょう

00:28:28.408 --> 00:28:31.111 align:start position:30% line:-2
そして
ナビをスタートさせます

00:28:31.278 --> 00:28:35.949 align:start position:27% line:-2
ここからアプリケーションの
ルート案内が始まり

00:28:36.617 --> 00:28:40.554 align:start position:30% line:-2
到着 あるいは
案内の停止まで続きます

00:28:41.288 --> 00:28:45.993 align:start position:23% line:-2
CarPlayフレームワークで
同じ流れを見ていきます

00:28:46.994 --> 00:28:49.463 align:start position:30% line:-2
まずは
ルートのプレビューから

00:28:49.897 --> 00:28:54.802 align:start position:32% line:-2
目的地までのルートを
視覚化したデータを

00:28:54.968 --> 00:28:58.872 align:start position:34% line:-2
画面上に表示し
ユーザに提供します

00:28:59.039 --> 00:29:01.975 align:start position:30% line:-1
目的地の名称はもちろん

00:28:59.039 --> 00:29:01.975 align:start position:30% line:-1
目的地の名称はもちろん

00:29:02.075 --> 00:29:05.546 align:start position:29% line:-1
注意喚起なども含まれます

00:29:05.879 --> 00:29:08.949 align:start position:29% line:-1
到着予定時刻も提供します

00:29:09.583 --> 00:29:11.518 align:start position:34% line:-1
複数の候補があれば

00:29:11.618 --> 00:29:15.155 align:start position:30% line:-2
それを知らせるボタンを
表示します

00:29:15.689 --> 00:29:21.228 align:start position:27% line:-2
ユーザがルートを
切り替えるためのボタンです

00:29:22.396 --> 00:29:25.666 align:start position:27% line:-1
クラスとメソッドを見ながら

00:29:25.766 --> 00:29:28.702 align:start position:34% line:-2
ルートプレビューを
構成します

00:29:30.070 --> 00:29:31.905 align:start position:30% line:-1
まずはCPTripです

00:29:32.005 --> 00:29:35.943 align:start position:32% line:-2
これはルート表示用の
クラスです

00:29:36.143 --> 00:29:38.712 align:start position:36% line:-1
起点や目的地の他

00:29:38.912 --> 00:29:43.283 align:start position:16% line:-2
ルートを予測する
CPRouteChoiceも含まれます

00:29:44.084 --> 00:29:46.954 align:start position:18% line:-1
CPTravelEstimatesは

00:29:47.054 --> 00:29:49.957 align:start position:27% line:-1
距離と所要時間を算出します

00:29:50.657 --> 00:29:55.095 align:start position:30% line:-2
ルートプレビュー表示の
準備が整ったら

00:29:55.195 --> 00:29:59.900 align:start position:20% line:-2
showTripPreviewsを
呼び出します

00:30:00.634 --> 00:30:02.970 align:start position:36% line:-1
表示内容の更新は

00:30:03.070 --> 00:30:07.074 align:start position:36% line:-2
ユーザがルートを
切り替えた時です

00:30:07.541 --> 00:30:11.245 align:start position:30% line:-2
インスタンスメソッドが
呼び出され

00:30:11.345 --> 00:30:13.213 align:start position:30% line:-1
表示内容が更新されます

00:30:14.148 --> 00:30:16.884 align:start position:27% line:-1
この機会にお伝えしたいのが

00:30:16.984 --> 00:30:20.587 align:start position:29% line:-2
MapTemplateの
コンテンツの表示方法です

00:30:21.255 --> 00:30:25.492 align:start position:32% line:-2
コンテンツをユーザに
確実に見てもらうには

00:30:25.993 --> 00:30:30.898 align:start position:27% line:-2
safeAreaのAPIが
有効ですよね

00:30:31.265 --> 00:30:34.201 align:start position:29% line:-2
MapTemplateで
コンテンツ変更が生じると

00:30:34.301 --> 00:30:39.373 align:start position:16% line:-2
safeAreaInsetsが更新され
最適な領域を教えます

00:30:39.473 --> 00:30:42.176 align:start position:7% line:-2
safeAreaInsetsDidChangeを
実装すれば

00:30:42.276 --> 00:30:46.480 align:start position:30% line:-2
コンテンツを
範囲内に収めてくれます

00:30:47.648 --> 00:30:49.750 align:start position:34% line:-1
次はルート案内です

00:30:50.350 --> 00:30:54.822 align:start position:23% line:-2
CarPlayフレームワークへ
情報を与えると

00:30:54.922 --> 00:30:57.558 align:start position:30% line:-1
案内カードが作られます

00:30:57.658 --> 00:31:03.497 align:start position:29% line:-2
ここで追加される情報は
走行ルートに残りの距離―

00:30:57.658 --> 00:31:03.497 align:start position:29% line:-2
ここで追加される情報は
走行ルートに残りの距離―

00:31:04.198 --> 00:31:09.002 align:start position:27% line:-2
さらに右折 左折
直進などの指示も含まれます

00:31:11.104 --> 00:31:16.777 align:start position:23% line:-2
CarPlayのルート案内では
次のことを覚えてください

00:31:19.246 --> 00:31:21.682 align:start position:11% line:-2
CPMapTemplateDelegateと
MapTemplate

00:31:21.782 --> 00:31:23.450 align:start position:34% line:-1
この２つは必須です

00:31:23.550 --> 00:31:26.286 align:start position:32% line:-2
プレビューのボタンが
押されると

00:31:26.587 --> 00:31:30.991 align:start position:30% line:-2
インスタンスメソッドが
呼び出されます

00:31:31.125 --> 00:31:33.827 align:start position:32% line:-1
これで指令が実行され

00:31:33.927 --> 00:31:37.297 align:start position:30% line:-2
目的地への
ルート案内が始まります

00:31:38.165 --> 00:31:40.934 align:start position:34% line:-2
アプリケーションが
案内を開始すると

00:31:41.034 --> 00:31:44.505 align:start position:30% line:-2
フレームワークへの
データ更新も始まります

00:31:45.172 --> 00:31:49.443 align:start position:9% line:-2
次に必要な
startNavigationSessionは

00:31:49.543 --> 00:31:53.213 align:start position:14% line:-2
CPNavigationSessionの
インスタンスを提供します

00:31:53.313 --> 00:31:56.316 align:start position:32% line:-2
この先のルート案内を
管理するものです

00:31:58.118 --> 00:32:02.656 align:start position:14% line:-2
CPNavigationSessionと
CPManeuverで

00:31:58.118 --> 00:32:02.656 align:start position:14% line:-2
CPNavigationSessionと
CPManeuverで

00:32:02.756 --> 00:32:05.659 align:start position:29% line:-1
自動的に運転指示を案内し

00:32:05.759 --> 00:32:10.430 align:start position:32% line:-2
次の指示があることも
表示します

00:32:11.398 --> 00:32:17.171 align:start position:30% line:-2
継続的に運転操作を
予測し更新しているので

00:32:17.271 --> 00:32:20.741 align:start position:34% line:-2
リアルタイムの
案内が提供できます

00:32:21.208 --> 00:32:25.512 align:start position:30% line:-2
音声案内を行うケースも
多いでしょう

00:32:25.946 --> 00:32:30.651 align:start position:30% line:-2
オーディオセッションの
設定には確認が必要です

00:32:31.084 --> 00:32:36.557 align:start position:29% line:-2
車内では音楽などを
楽しむことが多いですよね

00:32:36.657 --> 00:32:40.494 align:start position:29% line:-2
iOSにカーオーディオと
音源は様々です

00:32:40.928 --> 00:32:45.065 align:start position:30% line:-2
オーディオセッションに
適した変数を使えば

00:32:45.165 --> 00:32:49.203 align:start position:29% line:-2
音源を
気にする必要がありません

00:32:49.303 --> 00:32:51.605 align:start position:30% line:-1
音声は適切に作動します

00:32:51.705 --> 00:32:55.275 align:start position:30% line:-2
オーディオセッションの
設定には

00:32:55.375 --> 00:32:57.978 align:start position:27% line:-2
duckOthersなども
利用できます

00:32:58.078 --> 00:33:02.483 align:start position:32% line:-2
iOS音源との相性が
良くなります

00:32:58.078 --> 00:33:02.483 align:start position:32% line:-2
iOS音源との相性が
良くなります

00:33:03.217 --> 00:33:04.785 align:start position:36% line:-1
次に必要なのは？

00:33:04.885 --> 00:33:07.521 align:start position:34% line:-1
運転は続いています

00:33:07.955 --> 00:33:11.158 align:start position:29% line:-2
運転操作と到着予定時刻を
更新し

00:33:11.258 --> 00:33:14.228 align:start position:32% line:-2
引き続き
ルート案内を行います

00:33:15.762 --> 00:33:17.297 align:start position:34% line:-1
ルートを外れたら？

00:33:17.397 --> 00:33:20.868 align:start position:38% line:-2
新しいルートの
算出が必要です

00:33:20.968 --> 00:33:24.771 align:start position:30% line:-2
その間は
再検索中と表示できます

00:33:25.772 --> 00:33:29.176 align:start position:29% line:-2
道路状況が
変わることもあるでしょう

00:33:29.276 --> 00:33:34.047 align:start position:32% line:-2
その時は地図上に
アラートを表示します

00:33:34.948 --> 00:33:38.786 align:start position:30% line:-2
ナビのおかげで
無事 目的地に到着です

00:33:39.586 --> 00:33:44.224 align:start position:29% line:-2
ここまでは
スクリーン前面での話です

00:33:44.525 --> 00:33:49.596 align:start position:27% line:-2
たいてい スクリーン前面は
地図かオーディオです

00:33:49.696 --> 00:33:51.732 align:start position:27% line:-1
Srirockaのようなね

00:33:52.466 --> 00:33:56.904 align:start position:29% line:-2
バックグラウンド処理中に
情報を表示したい場合

00:33:57.504 --> 00:34:00.707 align:start position:29% line:-1
その時はスクリーン前面に

00:33:57.504 --> 00:34:00.707 align:start position:29% line:-1
その時はスクリーン前面に

00:34:01.008 --> 00:34:03.544 align:start position:30% line:-1
バナー通知を表示します

00:34:03.877 --> 00:34:08.748 align:start position:30% line:-2
アラートだけでなく
ルート案内にも使えます

00:34:09.882 --> 00:34:13.687 align:start position:29% line:-2
MapTemplateの
メソッドを３つ紹介します

00:34:13.987 --> 00:34:17.391 align:start position:0% line:-2
まずは
ShouldShowNotificationForManeuver

00:34:17.491 --> 00:34:21.161 align:start position:32% line:-2
バックグラウンドから
運転指示を出す時

00:34:21.261 --> 00:34:24.031 align:start position:34% line:-2
このメソッドを呼び
Trueを返します

00:34:24.130 --> 00:34:28.502 align:start position:29% line:-2
これで案内が
バナー通知に変換されます

00:34:29.268 --> 00:34:34.107 align:start position:27% line:-2
指示を通知したら
到着予定時刻も更新されます

00:34:34.208 --> 00:34:38.712 align:start position:30% line:-2
到着予定時刻を通知する
メソッドが呼び出され

00:34:38.812 --> 00:34:41.782 align:start position:32% line:-2
バナーのコンテンツが
更新されます

00:34:41.882 --> 00:34:44.217 align:start position:29% line:-1
新たな通知の作成ではなく

00:34:44.318 --> 00:34:47.087 align:start position:34% line:-2
コンテンツが
更新されるだけです

00:34:47.754 --> 00:34:51.992 align:start position:30% line:-2
アラートも
同じように表示可能です

00:34:52.092 --> 00:34:55.795 align:start position:30% line:-2
アラート用のメソッドも
用意しています

00:34:56.362 --> 00:34:59.867 align:start position:32% line:-2
ここで再び
ジョナサンのデモです

00:34:59.967 --> 00:35:05.305 align:start position:29% line:-2
ルートプレビューと
ルート案内をお見せします

00:34:59.967 --> 00:35:05.305 align:start position:29% line:-2
ルートプレビューと
ルート案内をお見せします

00:35:05.406 --> 00:35:06.240 align:start position:41% line:-1
ジョナサン

00:35:06.440 --> 00:35:09.510 align:start position:43% line:-1
(拍手)

00:35:10.778 --> 00:35:11.678 align:start position:41% line:-1
ありがとう

00:35:12.512 --> 00:35:17.317 align:start position:20% line:-2
再びCountryRoadsを例に
ルート案内のデモを行います

00:35:17.417 --> 00:35:19.386 align:start position:36% line:-2
まずはコードから
見ていきます

00:35:20.654 --> 00:35:25.893 align:start position:29% line:-2
目的地が選択されたら
現在地と目的地の位置から

00:35:25.993 --> 00:35:30.597 align:start position:29% line:-2
ナビゲーションエンジンが
ルートを算出します

00:35:31.231 --> 00:35:34.001 align:start position:34% line:-2
デモでは
ルートは１つですが

00:35:34.101 --> 00:35:39.173 align:start position:29% line:-2
ルート候補が
複数となる場合もあります

00:35:39.273 --> 00:35:44.411 align:start position:29% line:-2
そこでルート選択を助ける
追加情報を入れます

00:35:44.745 --> 00:35:48.382 align:start position:12% line:-2
CPTripを作成し
showTripPreviewsを呼び出し

00:35:48.482 --> 00:35:51.585 align:start position:34% line:-2
ルート案内の開始を
知らせます

00:35:51.785 --> 00:35:56.857 align:start position:30% line:-2
そして 到着予定時刻を
更新します

00:35:56.990 --> 00:36:01.328 align:start position:23% line:-2
CarPlayと連動する様子を
見てみます

00:35:56.990 --> 00:36:01.328 align:start position:23% line:-2
CarPlayと連動する様子を
見てみます

00:36:03.697 --> 00:36:07.101 align:start position:30% line:-2
ユーザが
ナビをスタートさせたら

00:36:07.201 --> 00:36:10.571 align:start position:27% line:-1
不要なルート候補を隠します

00:36:11.338 --> 00:36:14.241 align:start position:25% line:-2
次にセッションの開始を
MapTemplateに指示

00:36:14.341 --> 00:36:18.312 align:start position:30% line:-2
ローディング状態に入り
運転操作を算出し

00:36:18.545 --> 00:36:22.950 align:start position:29% line:-2
CPManeuverの
オブジェクトを構成します

00:36:23.050 --> 00:36:27.754 align:start position:30% line:-2
こうして
最初の案内が始まります

00:36:27.854 --> 00:36:29.389 align:start position:38% line:-1
準備ができたら

00:36:29.490 --> 00:36:30.758 align:start position:34% line:-1
ドライブを始めます

00:36:38.499 --> 00:36:43.136 align:start position:27% line:-2
“Favorites”から
“Parks”を検索します

00:36:44.505 --> 00:36:48.775 align:start position:32% line:-2
候補地をタップすると
地図の画面に戻り

00:36:49.076 --> 00:36:51.145 align:start position:39% line:-2
ルート案内が
表示されます

00:36:51.478 --> 00:36:55.048 align:start position:25% line:-1
“Go”ボタンをタップすると

00:36:55.148 --> 00:36:57.684 align:start position:30% line:-2
ナビゲーションモードに
入ります

00:36:57.985 --> 00:37:03.056 align:start position:30% line:-2
ナビゲーションバーの
ボタン表示は更新可能で

00:36:57.985 --> 00:37:03.056 align:start position:30% line:-2
ナビゲーションバーの
ボタン表示は更新可能で

00:37:03.156 --> 00:37:06.193 align:start position:30% line:-2
キャンセルボタンなどを
表示できます

00:37:06.293 --> 00:37:08.228 align:start position:29% line:-1
楽しいドライブのようです

00:37:09.196 --> 00:37:13.634 align:start position:32% line:-2
目的地に到着すると
地図モードに戻ります

00:37:15.669 --> 00:37:17.971 align:start position:32% line:-1
以上でデモは終了です

00:37:18.238 --> 00:37:21.542 align:start position:27% line:-1
本日のおさらいをしましょう

00:37:22.109 --> 00:37:25.446 align:start position:23% line:-1
劇的に進化したCarPlayに

00:37:25.546 --> 00:37:28.916 align:start position:30% line:-2
より良いユーザ体験への
最適化

00:37:29.183 --> 00:37:35.155 align:start position:21% line:-2
アプリケーションのための
最新CarPlayフレームワーク

00:37:35.422 --> 00:37:39.326 align:start position:29% line:-2
Stringやデバイスは
問いません

00:37:39.426 --> 00:37:43.096 align:start position:32% line:-2
ナビ開発者の皆さんに
注力して欲しいのは

00:37:43.197 --> 00:37:46.133 align:start position:29% line:-1
美しい地図を描くことです

00:37:46.266 --> 00:37:47.935 align:start position:38% line:-2
あとは
我々にお任せを

00:37:48.302 --> 00:37:51.205 align:start position:25% line:-2
CPMapTemplateで
地図を描き

00:37:51.305 --> 00:37:54.174 align:start position:14% line:-2
CPNavigationSessionで
ナビを管理

00:37:54.274 --> 00:37:57.411 align:start position:34% line:-2
情報の表示や
ユーザ操作のための

00:37:57.511 --> 00:37:59.379 align:start position:29% line:-1
テンプレートもありました

00:38:00.514 --> 00:38:02.249 align:start position:36% line:-1
ご質問のある方は

00:38:02.349 --> 00:38:07.688 align:start position:27% line:-2
本日午後２時に
ラボ11までお越しください

00:38:07.854 --> 00:38:12.259 align:start position:29% line:-2
詳細はこちらのURLでも
ご確認いただけます

00:38:12.392 --> 00:38:16.163 align:start position:21% line:-2
CarPlayアプリケーションの
構築準備ができましたね

00:38:16.263 --> 00:38:18.999 align:start position:30% line:-1
皆さんに期待しています

00:38:19.099 --> 00:38:20.267 align:start position:41% line:-1
ありがとう

00:38:20.434 --> 00:38:24.204 align:start position:43% line:-1
(拍手)
