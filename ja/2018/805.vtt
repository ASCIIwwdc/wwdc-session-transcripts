WEBVTT

00:00:06.974 --> 00:00:16.650 align:start position:43% line:-1
(音楽)

00:00:17.818 --> 00:00:25.692 align:start position:43% line:-1
(拍手)

00:00:27.261 --> 00:00:28.462 align:start position:41% line:-1
こんにちは

00:00:28.562 --> 00:00:30.964 align:start position:29% line:-2
ARデザインセッションへ
ようこそ

00:00:31.498 --> 00:00:35.335 align:start position:16% line:-2
Human Interfaceチームの
グラント･ポールと申します

00:00:35.469 --> 00:00:38.505 align:start position:27% line:-2
WWDCをお楽しみのことと
存じます

00:00:39.339 --> 00:00:40.941 align:start position:34% line:-1
このセッションでは

00:00:41.041 --> 00:00:45.679 align:start position:27% line:-2
ユーザインターフェイスと
インタラクションを用いた―

00:00:45.779 --> 00:00:49.216 align:start position:23% line:-2
ARアプリケーションとゲームの
設計方法を紹介します

00:00:49.416 --> 00:00:51.185 align:start position:34% line:-1
その後 オマールが

00:00:51.285 --> 00:00:57.758 align:start position:27% line:-2
AR上の3Dモデルを
洗練させる方法を説明します

00:01:01.395 --> 00:01:05.432 align:start position:32% line:-2
まずは基本的なことを
確認します

00:01:05.699 --> 00:01:07.367 align:start position:36% line:-1
AR初心者の方は

00:01:07.467 --> 00:01:12.105 align:start position:20% line:-2
ARとは具体的にはどういうものかと
お思いでしょう

00:01:12.306 --> 00:01:17.144 align:start position:32% line:-2
ARに詳しい方にも
念のためお話しします

00:01:17.978 --> 00:01:22.082 align:start position:30% line:-2
ARとは拡張現実という
意味ですが

00:01:22.482 --> 00:01:25.152 align:start position:27% line:-1
その意味を少し掘り下げます

00:01:26.119 --> 00:01:29.556 align:start position:32% line:-2
まずは現実とは何かを
分析しましょう

00:01:29.957 --> 00:01:31.458 align:start position:39% line:-1
拡張現実の―

00:01:31.558 --> 00:01:35.395 align:start position:30% line:-2
現実とは
実世界のものを扱うこと

00:01:35.562 --> 00:01:39.399 align:start position:30% line:-2
これは 従来デバイスや
インターネット上で―

00:01:39.500 --> 00:01:44.204 align:start position:27% line:-2
私たちが行ってきたこととは
少し違います

00:01:44.338 --> 00:01:47.841 align:start position:34% line:-2
ARは現実の世界で
展開するものです

00:01:47.941 --> 00:01:52.346 align:start position:30% line:-2
皆さんがいる部屋の中や
実際にいる環境―

00:01:52.446 --> 00:01:55.215 align:start position:29% line:-1
または地図上で展開します

00:01:55.916 --> 00:01:58.218 align:start position:36% line:-2
しかし重要な点は
別にあります

00:01:58.752 --> 00:02:01.922 align:start position:34% line:-2
拡張現実は
拡張しているのです

00:01:58.752 --> 00:02:01.922 align:start position:34% line:-2
拡張現実は
拡張しているのです

00:02:02.256 --> 00:02:04.558 align:start position:32% line:-2
これには複数の意味が
あります

00:02:04.658 --> 00:02:09.128 align:start position:32% line:-2
自分の知る世界が
拡張されるという意味

00:02:09.229 --> 00:02:14.401 align:start position:25% line:-2
デバイスが世界をどう見るかを
ユーザに伝えるという意味

00:02:14.568 --> 00:02:20.340 align:start position:29% line:-2
バーチャルなものを世界に
出現させるという意味

00:02:20.807 --> 00:02:25.979 align:start position:21% line:-2
アニ文字など 実在のものに何かを
加えるという意味もあります

00:02:26.079 --> 00:02:29.750 align:start position:29% line:-2
現実にあるものを取り込み
強調し 拡張するのです

00:02:31.018 --> 00:02:36.290 align:start position:34% line:-2
これがARや
拡張現実の意味です

00:02:39.359 --> 00:02:42.529 align:start position:27% line:-1
では前半のテーマに移ります

00:02:42.629 --> 00:02:45.299 align:start position:23% line:-2
内容は ARアプリケーションや
ARゲームの―

00:02:45.399 --> 00:02:49.870 align:start position:23% line:-2
インターフェイスと
インタラクションの設計方法です

00:02:50.470 --> 00:02:51.805 align:start position:32% line:-1
まずお話しするのは―

00:02:51.905 --> 00:02:57.344 align:start position:27% line:-2
ARに人を引き込み
操作を促す方法についてです

00:02:57.511 --> 00:03:03.116 align:start position:25% line:-2
iOS 12内蔵のAR体験が
ユーザを導く方法をお見せし

00:02:57.511 --> 00:03:03.116 align:start position:25% line:-2
iOS 12内蔵のAR体験が
ユーザを導く方法をお見せし

00:03:03.250 --> 00:03:05.485 align:start position:34% line:-2
その原則を
アプリケーションに

00:03:05.586 --> 00:03:08.188 align:start position:36% line:-2
取り入れる方法を
お伝えします

00:03:08.789 --> 00:03:12.860 align:start position:29% line:-2
次はAR上でコンテンツを
表示する方法についてです

00:03:12.960 --> 00:03:16.330 align:start position:34% line:-2
ARKitを使えば
可能性が広がり―

00:03:16.430 --> 00:03:21.368 align:start position:29% line:-2
アプリケーション作成の
コツやヒントが得られます

00:03:22.402 --> 00:03:25.706 align:start position:25% line:-2
最後は現実世界との
インタラクションについてです

00:03:25.806 --> 00:03:30.077 align:start position:29% line:-2
ARアプリケーションと
2Dアプリケーションでは

00:03:30.177 --> 00:03:34.481 align:start position:21% line:-2
対応するインタラクションの種類が
異なります

00:03:34.948 --> 00:03:37.451 align:start position:29% line:-1
ARでも有効な種類を探り

00:03:37.551 --> 00:03:40.487 align:start position:27% line:-2
新たに必要な
インタラクションを考えます

00:03:41.655 --> 00:03:46.160 align:start position:27% line:-2
まずは
ARの中に入り込む方法です

00:03:46.260 --> 00:03:50.230 align:start position:29% line:-2
誰かがアプリケーションを
ダウンロードし

00:03:50.330 --> 00:03:53.834 align:start position:27% line:-2
AR体験を始めようとする時
まず必要なのは

00:03:54.034 --> 00:03:59.306 align:start position:29% line:-2
ARKitに現実の世界を
認識させることです

00:03:59.406 --> 00:04:04.912 align:start position:27% line:-2
どのARアプリケーションも
AR体験を始めるには

00:03:59.406 --> 00:04:04.912 align:start position:27% line:-2
どのARアプリケーションも
AR体験を始めるには

00:04:05.078 --> 00:04:08.715 align:start position:30% line:-2
ある程度 現実の世界を
認識する必要があります

00:04:08.815 --> 00:04:13.053 align:start position:29% line:-2
なぜなら 現実世界に
オブジェクトを表示したり

00:04:13.153 --> 00:04:17.524 align:start position:27% line:-2
その情報をユーザに
提供する必要があるからです

00:04:18.091 --> 00:04:21.728 align:start position:30% line:-2
ARKitに現実世界を
認識させるために

00:04:21.827 --> 00:04:25.866 align:start position:25% line:-2
ユーザがデバイスを動かすよう
働きかけます

00:04:26.233 --> 00:04:30.037 align:start position:29% line:-2
この点は
既存のデバイスのような―

00:04:30.137 --> 00:04:33.974 align:start position:29% line:-2
カメラプレビュー機能とは
少し異なります

00:04:34.308 --> 00:04:36.443 align:start position:32% line:-1
例えば写真を撮る時は

00:04:36.543 --> 00:04:40.113 align:start position:30% line:-2
ただデバイスを
被写体に向けるだけです

00:04:40.347 --> 00:04:45.853 align:start position:23% line:-2
ARでは ユーザが様々な位置や
角度から同じ場所を見ながら―

00:04:45.953 --> 00:04:48.021 align:start position:34% line:-1
動くことが必要です

00:04:49.089 --> 00:04:51.992 align:start position:34% line:-1
ここで大切なことは

00:04:52.092 --> 00:04:56.163 align:start position:25% line:-2
ユーザに 何をすべきかと
その必要性を知らせることです

00:04:56.263 --> 00:05:01.802 align:start position:29% line:-2
それには動きの目安となる
固定された基準が必要です

00:04:56.263 --> 00:05:01.802 align:start position:29% line:-2
それには動きの目安となる
固定された基準が必要です

00:05:02.269 --> 00:05:05.038 align:start position:30% line:-1
具体例を見てみましょう

00:05:05.572 --> 00:05:08.175 align:start position:18% line:-2
Euclidean Landsという
ゲームです

00:05:08.275 --> 00:05:12.412 align:start position:23% line:-2
デバイスが部屋の中を動く様子が
映っています

00:05:12.779 --> 00:05:16.850 align:start position:27% line:-2
このゲームの優れている点は
文字がなくても―

00:05:16.950 --> 00:05:19.353 align:start position:36% line:-2
何をすべきか
分かるところです

00:05:19.453 --> 00:05:23.190 align:start position:29% line:-2
デバイスを動かす
必要があると理解できます

00:05:23.690 --> 00:05:27.828 align:start position:23% line:-2
デバイスの向きを変えるだけでは
不十分です

00:05:27.928 --> 00:05:34.201 align:start position:21% line:-2
説明文なしでも 固定基準によって
すべきことを伝えられます

00:05:35.502 --> 00:05:39.506 align:start position:25% line:-2
多くの場合
このプロセスが必要になります

00:05:39.606 --> 00:05:44.444 align:start position:18% line:-2
iOS 12では
ARKitの認識速度が向上しています

00:05:44.545 --> 00:05:48.482 align:start position:25% line:-2
よって多くの場合
必要なのは 動くことだけです

00:05:48.582 --> 00:05:51.451 align:start position:34% line:-2
ARを起動するには
まず動きましょう

00:05:52.653 --> 00:05:57.090 align:start position:30% line:-2
しかし ARには
適さない環境もあります

00:05:57.191 --> 00:06:00.460 align:start position:32% line:-2
暗い部屋や
光の反射がある場合は

00:05:57.191 --> 00:06:00.460 align:start position:32% line:-2
暗い部屋や
光の反射がある場合は

00:06:00.561 --> 00:06:05.833 align:start position:29% line:-2
ARKitが認識するのに
手間取ることがあります

00:06:05.933 --> 00:06:09.536 align:start position:34% line:-2
準備ができるまでに
少し時間がかかり―

00:06:09.636 --> 00:06:11.805 align:start position:27% line:-2
すぐに開始できない可能性も
あります

00:06:12.606 --> 00:06:19.580 align:start position:21% line:-2
そんな時 ユーザはシステムから
デバイスを動かすよう指示されても

00:06:19.713 --> 00:06:21.281 align:start position:34% line:-1
疑問に思うでしょう

00:06:21.949 --> 00:06:23.750 align:start position:32% line:-1
“なぜ動作しない？”

00:06:23.851 --> 00:06:28.822 align:start position:27% line:-2
“ユーザの動きを
認識していないのか？”とね

00:06:29.256 --> 00:06:33.293 align:start position:30% line:-2
そんな時は
ユーザに知らせましょう

00:06:33.393 --> 00:06:37.197 align:start position:29% line:-2
あなたがやっていることは
間違っていない

00:06:37.297 --> 00:06:40.434 align:start position:32% line:-2
それを続けるべきだと
伝えるのです

00:06:41.034 --> 00:06:42.970 align:start position:29% line:-1
では 例を見てみましょう

00:06:46.173 --> 00:06:49.643 align:start position:32% line:-2
これはiOS 12に
内蔵される―

00:06:49.743 --> 00:06:51.945 align:start position:30% line:-2
ARアプリケーションの
ガイドです

00:06:52.079 --> 00:06:56.416 align:start position:29% line:-2
デバイスが固定基準の上を
動いています

00:06:56.517 --> 00:07:00.988 align:start position:27% line:-2
同じ場所にとどまらず
動く必要があると分かります

00:06:56.517 --> 00:07:00.988 align:start position:27% line:-2
同じ場所にとどまらず
動く必要があると分かります

00:07:01.555 --> 00:07:05.425 align:start position:29% line:-1
デバイスを動かし始めると

00:07:05.526 --> 00:07:07.995 align:start position:30% line:-1
面が立方体に変わります

00:07:08.295 --> 00:07:11.865 align:start position:30% line:-2
デバイスを動かすことで
この立方体は回転し

00:07:11.965 --> 00:07:17.938 align:start position:21% line:-2
ユーザの行っている作業は正しいと
伝えることができるのです

00:07:18.605 --> 00:07:22.109 align:start position:25% line:-1
ARKitの認識が完了したら

00:07:22.209 --> 00:07:26.713 align:start position:30% line:-2
立方体は消え
AR体験を開始できます

00:07:29.483 --> 00:07:33.854 align:start position:29% line:-2
このようにiOS 12は
ユーザを誘導します

00:07:33.954 --> 00:07:36.690 align:start position:34% line:-2
皆さんも
この原則にならい―

00:07:36.790 --> 00:07:43.163 align:start position:30% line:-2
デバイスを動かすように
ユーザに伝えましょう

00:07:43.297 --> 00:07:47.801 align:start position:25% line:-2
しかし全く同じスタイルにする
必要はありません

00:07:47.901 --> 00:07:53.440 align:start position:25% line:-2
それぞれのアプリケーションの
スタイルに合わせましょう

00:07:53.540 --> 00:07:59.413 align:start position:27% line:-2
ARが 取って付けたものに
見えないようにしてください

00:07:59.847 --> 00:08:05.986 align:start position:25% line:-2
重要なのは 正しい誘導ですが
違和感は避けるべきです

00:07:59.847 --> 00:08:05.986 align:start position:25% line:-2
重要なのは 正しい誘導ですが
違和感は避けるべきです

00:08:07.955 --> 00:08:11.658 align:start position:29% line:-2
ユーザをARに導くための
最後のポイントは

00:08:11.758 --> 00:08:14.127 align:start position:39% line:-1
バランスです

00:08:14.228 --> 00:08:17.865 align:start position:27% line:-2
指示や
AR開始を促すメッセージは

00:08:17.965 --> 00:08:21.368 align:start position:30% line:-2
効率的に
伝えなければなりません

00:08:21.902 --> 00:08:27.074 align:start position:29% line:-2
使い方を知っている人は
すぐデバイスを動かします

00:08:27.174 --> 00:08:31.879 align:start position:32% line:-2
そういった人には
説明は不要ですから―

00:08:31.979 --> 00:08:34.581 align:start position:27% line:-1
指示を出す必要はありません

00:08:34.681 --> 00:08:36.683 align:start position:23% line:-1
ARKitは処理速度が速いので

00:08:36.783 --> 00:08:38.818 align:start position:34% line:-1
デバイスを動かせば

00:08:38.919 --> 00:08:42.923 align:start position:29% line:-2
ARKitが認識を開始し
すぐに使うことができます

00:08:46.059 --> 00:08:52.633 align:start position:23% line:-2
以上が ユーザを誘導し
AR体験へと促す方法となります

00:08:52.966 --> 00:08:56.570 align:start position:27% line:-2
今度はAR上でコンテンツを
表示する方法です

00:08:56.670 --> 00:08:58.972 align:start position:29% line:-2
あらゆる
ARアプリケーションや―

00:08:59.072 --> 00:09:03.443 align:start position:23% line:-2
ARゲームに適用できる
コンテンツ表示方法についてです

00:08:59.072 --> 00:09:03.443 align:start position:23% line:-2
ARゲームに適用できる
コンテンツ表示方法についてです

00:09:04.378 --> 00:09:09.316 align:start position:20% line:-2
まずはARKitで構築できるものを
ご紹介しましょう

00:09:09.416 --> 00:09:15.455 align:start position:23% line:-2
必ずしも全てのAR体験が
カメラプレビューで見る世界に―

00:09:15.556 --> 00:09:19.693 align:start position:29% line:-2
オブジェクトを出現させる
必要はないのです

00:09:21.461 --> 00:09:27.301 align:start position:29% line:-2
AR体験の全てを２次元で
構築する方法もあります

00:09:27.401 --> 00:09:31.538 align:start position:25% line:-2
カメラプレビューや
3Dグラフィックは使いません

00:09:31.638 --> 00:09:36.743 align:start position:25% line:-2
ARKitが現実世界について
得た情報を―

00:09:37.744 --> 00:09:41.081 align:start position:23% line:-1
2Dで素敵なAR体験にできます

00:09:41.882 --> 00:09:44.218 align:start position:30% line:-1
では例を見てみましょう

00:09:44.751 --> 00:09:46.653 align:start position:25% line:-2
これはRainbrowという
ゲームです

00:09:47.354 --> 00:09:52.826 align:start position:32% line:-2
キャラクターの眉毛を
上下させて遊びます

00:09:54.728 --> 00:10:02.870 align:start position:38% line:-1
(ゲーム音楽)

00:09:54.728 --> 00:10:02.870 align:start position:38% line:-1
(ゲーム音楽)

00:10:14.848 --> 00:10:20.420 align:start position:43% line:-1
(拍手)

00:10:20.554 --> 00:10:23.590 align:start position:34% line:-2
カメラプレビューは
使いませんでした

00:10:23.690 --> 00:10:26.460 align:start position:29% line:-1
3Dのグラフィックもです

00:10:26.560 --> 00:10:32.099 align:start position:32% line:-2
2Dでも十分に楽しい
AR体験ができます

00:10:33.133 --> 00:10:35.335 align:start position:27% line:-1
これは2DのAR体験でした

00:10:35.469 --> 00:10:38.505 align:start position:25% line:-1
この他 ARKitを使えば―

00:10:38.605 --> 00:10:43.477 align:start position:29% line:-2
完全な仮想現実世界と
言えるものも体験できます

00:10:43.677 --> 00:10:47.648 align:start position:30% line:-2
つまり違う場所に
連れて行かれたような―

00:10:47.748 --> 00:10:50.551 align:start position:32% line:-1
感覚が味わえるのです

00:10:50.651 --> 00:10:52.686 align:start position:30% line:-1
その場所を歩き回ったり

00:10:52.786 --> 00:10:56.056 align:start position:36% line:-2
あらゆる方向を
眺めたりできます

00:10:56.190 --> 00:10:57.891 align:start position:32% line:-1
デバイスを通す形で―

00:10:57.991 --> 00:11:02.596 align:start position:32% line:-2
VR体験をすることは
可能なのです

00:10:57.991 --> 00:11:02.596 align:start position:32% line:-2
VR体験をすることは
可能なのです

00:11:03.530 --> 00:11:05.232 align:start position:39% line:-1
この利点は―

00:11:05.332 --> 00:11:07.968 align:start position:30% line:-1
使う場所を選ばないこと

00:11:08.068 --> 00:11:10.103 align:start position:34% line:-2
またヘッドセットも
不要で―

00:11:10.204 --> 00:11:15.542 align:start position:29% line:-2
デバイスさえ持っていれば
どこでも使えます

00:11:16.109 --> 00:11:18.045 align:start position:30% line:-1
実際に現実に浸るよりも

00:11:18.145 --> 00:11:21.482 align:start position:29% line:-2
デバイスを通して見た方が
いい場合もあります

00:11:21.582 --> 00:11:26.320 align:start position:25% line:-2
周辺視野を得られるので
壁にぶつかることがありません

00:11:26.687 --> 00:11:30.958 align:start position:30% line:-2
ARKitがあれば
仮想現実を作れるのです

00:11:31.058 --> 00:11:32.326 align:start position:34% line:-1
一例をご紹介します

00:11:33.360 --> 00:11:37.364 align:start position:20% line:-2
Enter the roomという
VR体験アプリケーションで

00:11:37.464 --> 00:11:40.934 align:start position:34% line:-2
赤十字国際委員会が
開発しました

00:11:41.301 --> 00:11:43.637 align:start position:25% line:-1
アプリケーションを起動すれば

00:11:43.737 --> 00:11:47.241 align:start position:32% line:-2
部屋のあらゆる方向を
見渡すことができます

00:11:47.341 --> 00:11:52.012 align:start position:27% line:-2
オブジェクトを間近で見たり
遠くまで移動したり―

00:11:52.112 --> 00:11:57.684 align:start position:29% line:-2
部屋の外で物音が
しているように聞こえます

00:11:58.085 --> 00:12:01.321 align:start position:29% line:-1
素晴らしい体験ができます

00:11:58.085 --> 00:12:01.321 align:start position:29% line:-1
素晴らしい体験ができます

00:12:01.421 --> 00:12:05.726 align:start position:30% line:-2
ARKitを使えば
仮想現実も作れるのです

00:12:07.261 --> 00:12:11.765 align:start position:29% line:-2
他にもARKitで
構築できるものがあります

00:12:11.999 --> 00:12:18.172 align:start position:23% line:-2
どんなアプリケーション作成にも
生かせるコツがあるでしょう

00:12:18.272 --> 00:12:22.776 align:start position:29% line:-2
ゲームや仕事効率化など
どんな種類でも構いません

00:12:24.144 --> 00:12:26.513 align:start position:32% line:-1
まずお話しするのは―

00:12:26.713 --> 00:12:29.116 align:start position:25% line:-1
ARで文字を表示する方法です

00:12:29.216 --> 00:12:31.485 align:start position:34% line:-1
文字情報は重要です

00:12:32.452 --> 00:12:34.421 align:start position:25% line:-1
どのARアプリケーションにも

00:12:34.521 --> 00:12:37.024 align:start position:32% line:-2
文字を表示する理由が
あります

00:12:37.124 --> 00:12:41.428 align:start position:29% line:-2
例えばゲームなら
レベル名や指示などですね

00:12:41.595 --> 00:12:45.365 align:start position:23% line:-2
その他のアプリケーションでは
オブジェクトの名前を表示したり

00:12:45.465 --> 00:12:49.169 align:start position:29% line:-2
注釈を出したりすることも
あり得るでしょう

00:12:49.536 --> 00:12:53.740 align:start position:29% line:-2
文字を表示させたい理由は
何であれ―

00:12:53.841 --> 00:12:57.678 align:start position:29% line:-2
大切なのは
文字が読みやすいことです

00:12:59.913 --> 00:13:03.016 align:start position:29% line:-1
ARで文字を表示するには

00:12:59.913 --> 00:13:03.016 align:start position:29% line:-1
ARで文字を表示するには

00:13:03.116 --> 00:13:06.086 align:start position:34% line:-2
現実世界に出すのが
簡単です

00:13:06.553 --> 00:13:11.225 align:start position:25% line:-2
名案に思えるかもしれませんが
欠点もあります

00:13:11.425 --> 00:13:12.593 align:start position:39% line:-1
欠点の１つは

00:13:12.693 --> 00:13:15.696 align:start position:27% line:-1
斜めから見た時に起こります

00:13:15.796 --> 00:13:19.299 align:start position:36% line:-2
文字がつぶれて
読みづらいのです

00:13:19.900 --> 00:13:21.268 align:start position:36% line:-1
もう１つの欠点は

00:13:21.368 --> 00:13:25.205 align:start position:30% line:-2
離れた場所から見た時に
起こります

00:13:25.305 --> 00:13:30.410 align:start position:23% line:-2
文字がすごく小さく
遠くからメモ用紙を読む感じです

00:13:31.078 --> 00:13:34.948 align:start position:30% line:-2
タイトルなどの
すでに知っている事柄を

00:13:35.048 --> 00:13:38.852 align:start position:34% line:-2
表示する時に
この方法は有効です

00:13:39.253 --> 00:13:44.024 align:start position:29% line:-2
しかし文字から情報を
受け取る必要がある場合は

00:13:44.191 --> 00:13:46.059 align:start position:29% line:-1
別の方法を試してください

00:13:47.694 --> 00:13:52.499 align:start position:29% line:-2
スクリーン空間に
文字を表示させる方法です

00:13:53.000 --> 00:13:57.404 align:start position:30% line:-2
スクリーン空間を使えば
常に文字は同じ大きさで

00:13:57.504 --> 00:14:00.541 align:start position:29% line:-1
いつでも目の前にあります

00:13:57.504 --> 00:14:00.541 align:start position:29% line:-1
いつでも目の前にあります

00:14:00.741 --> 00:14:03.710 align:start position:29% line:-2
この方法なら
とても読みやすいですし―

00:14:03.810 --> 00:14:07.381 align:start position:34% line:-2
見る角度や距離が
障害にはなりません

00:14:08.215 --> 00:14:11.485 align:start position:30% line:-2
スクリーン空間を
使用する際に大切なのは

00:14:11.585 --> 00:14:14.955 align:start position:32% line:-2
文字を 現実の一部に
見せることです

00:14:15.055 --> 00:14:19.259 align:start position:29% line:-2
ユーザが置いた
オブジェクトなどの位置に

00:14:19.359 --> 00:14:21.795 align:start position:32% line:-2
文字を固定することが
できます

00:14:22.496 --> 00:14:26.200 align:start position:29% line:-2
そうすることで
ARの一部に感じられます

00:14:26.600 --> 00:14:31.839 align:start position:23% line:-2
スクリーン空間の文字は
注釈などをARに表示させるのに

00:14:31.939 --> 00:14:34.341 align:start position:32% line:-1
向いていると言えます

00:14:35.442 --> 00:14:38.479 align:start position:32% line:-1
一例を見てみましょう

00:14:38.579 --> 00:14:41.515 align:start position:29% line:-2
iOS 12に搭載される
Measureです

00:14:42.015 --> 00:14:45.786 align:start position:27% line:-2
スクリーン空間に表示された
目盛りの文字は

00:14:45.886 --> 00:14:50.290 align:start position:32% line:-2
どんな角度から見ても
遠くから見ても

00:14:50.457 --> 00:14:52.793 align:start position:29% line:-1
驚くほどキレイに読めます

00:14:56.797 --> 00:15:00.367 align:start position:30% line:-2
スクリーン空間の文字は
読みやすいのですが

00:14:56.797 --> 00:15:00.367 align:start position:30% line:-2
スクリーン空間の文字は
読みやすいのですが

00:15:00.701 --> 00:15:06.974 align:start position:27% line:-2
AR上に表示する文字の数は
最小限にしてください

00:15:07.508 --> 00:15:10.878 align:start position:25% line:-1
なぜなら 文字を読むために―

00:15:10.978 --> 00:15:14.948 align:start position:30% line:-2
デバイスを傾けなければ
ならないからです

00:15:15.082 --> 00:15:18.085 align:start position:29% line:-2
デバイスを
通常のポジションにすれば

00:15:18.185 --> 00:15:19.953 align:start position:38% line:-1
文字は消えます

00:15:20.687 --> 00:15:24.625 align:start position:25% line:-1
ですから より詳しい情報や―

00:15:24.725 --> 00:15:27.494 align:start position:32% line:-2
オブジェクトの情報を
伝えるのなら

00:15:27.594 --> 00:15:30.497 align:start position:30% line:-1
画面上に表示しましょう

00:15:30.597 --> 00:15:32.766 align:start position:30% line:-2
ユーザが
iOSのデバイス上で―

00:15:32.866 --> 00:15:37.037 align:start position:34% line:-2
読むことで得られる
エクスペリエンスを

00:15:37.404 --> 00:15:41.008 align:start position:32% line:-2
画面上に直接
表示させられるのです

00:15:42.176 --> 00:15:45.179 align:start position:36% line:-2
AR外で詳細を
表示したい場合は

00:15:45.279 --> 00:15:47.080 align:start position:34% line:-1
切り替えが大切です

00:15:47.514 --> 00:15:52.085 align:start position:29% line:-2
切り替えで
見る対象が明確になります

00:15:52.186 --> 00:15:57.658 align:start position:25% line:-2
文字であれオブジェクトであれ
言及される内容や―

00:15:57.758 --> 00:16:00.227 align:start position:29% line:-1
詳細を知ることができます

00:15:57.758 --> 00:16:00.227 align:start position:29% line:-1
詳細を知ることができます

00:16:01.461 --> 00:16:04.965 align:start position:27% line:-2
ではまた
Measureの例を見ます

00:16:05.532 --> 00:16:08.502 align:start position:27% line:-1
測定した部分をタップすると

00:16:08.602 --> 00:16:13.874 align:start position:30% line:-2
ARから測定結果が現れ
画面上に表示されます

00:16:14.274 --> 00:16:16.410 align:start position:32% line:-1
素晴らしい機能ですね

00:16:16.510 --> 00:16:20.747 align:start position:30% line:-2
デバイスや電話を
傾ける必要がありません

00:16:20.948 --> 00:16:24.218 align:start position:34% line:-2
切り替えが
とてもスムーズです

00:16:24.384 --> 00:16:26.386 align:start position:36% line:-1
この画面を見れば

00:16:26.854 --> 00:16:31.592 align:start position:30% line:-2
何を測定した情報なのか
分かります

00:16:31.758 --> 00:16:35.596 align:start position:34% line:-2
一目瞭然なので
混乱せずに済みます

00:16:37.264 --> 00:16:41.235 align:start position:29% line:-2
ARから出たり
ARへ戻ったりすることで

00:16:41.335 --> 00:16:44.905 align:start position:34% line:-2
詳細な情報を
得ることができます

00:16:45.639 --> 00:16:49.610 align:start position:29% line:-2
ARにオブジェクトを
表示させる際にも重要です

00:16:50.077 --> 00:16:54.381 align:start position:27% line:-2
オブジェクトが１つの
バージョンだと感じられます

00:16:54.481 --> 00:16:58.085 align:start position:34% line:-2
アイデンティティが
あるのです

00:16:58.519 --> 00:17:02.156 align:start position:29% line:-2
AR上のオブジェクトには
実物の感があるので

00:16:58.519 --> 00:17:02.156 align:start position:29% line:-2
AR上のオブジェクトには
実物の感があるので

00:17:02.256 --> 00:17:06.960 align:start position:29% line:-2
本当に実在しているように
見えるのです

00:17:07.261 --> 00:17:11.565 align:start position:29% line:-2
現実世界のオブジェクトは
複製することができません

00:17:11.732 --> 00:17:16.502 align:start position:29% line:-2
AR上のオブジェクトにも
同じ原則を適応します

00:17:17.503 --> 00:17:20.874 align:start position:18% line:-2
Quick Look for ARを
見てみます

00:17:21.208 --> 00:17:24.310 align:start position:29% line:-1
固有の存在感がありますね

00:17:24.411 --> 00:17:27.281 align:start position:29% line:-1
ARのタブに切り替えても

00:17:27.381 --> 00:17:30.517 align:start position:34% line:-2
オブジェクトが
その場所に残ります

00:17:30.617 --> 00:17:33.520 align:start position:30% line:-2
消えたり突然現れたりは
しません

00:17:33.687 --> 00:17:37.057 align:start position:38% line:-2
配置する場所を
考えている間も

00:17:37.858 --> 00:17:40.394 align:start position:34% line:-2
オブジェクトは
表示されたままです

00:17:40.494 --> 00:17:44.531 align:start position:32% line:-2
１つしか存在しないと
容易に感じられます

00:17:44.965 --> 00:17:49.403 align:start position:29% line:-2
たとえアプリケーションの
選択画面に戻ったとしても

00:17:50.037 --> 00:17:53.974 align:start position:30% line:-2
先ほどのオブジェクトは
消えることがありません

00:17:54.074 --> 00:17:58.412 align:start position:32% line:-2
アプリケーション内を
行き来してるだけで

00:17:58.512 --> 00:18:03.250 align:start position:25% line:-2
現実世界に移る時に
複製されるわけではないのです

00:17:58.512 --> 00:18:03.250 align:start position:25% line:-2
現実世界に移る時に
複製されるわけではないのです

00:18:05.085 --> 00:18:08.055 align:start position:36% line:-2
ここまでAR上で
コンテンツを―

00:18:08.155 --> 00:18:11.892 align:start position:34% line:-2
表示する方法を
お伝えしてきました

00:18:12.459 --> 00:18:14.495 align:start position:34% line:-1
手短に振り返ります

00:18:14.962 --> 00:18:18.999 align:start position:30% line:-2
まずAR体験には
様々な方法がありました

00:18:19.099 --> 00:18:22.870 align:start position:27% line:-2
カメラプレビューや
3Dグラフィックも使わない

00:18:22.970 --> 00:18:26.039 align:start position:29% line:-1
2DのAR体験もあります

00:18:26.440 --> 00:18:30.978 align:start position:32% line:-2
ARKitを使用して
仮想現実を作ることで

00:18:31.078 --> 00:18:36.383 align:start position:30% line:-2
別の場所に行ったような
没入感を味わえます

00:18:37.117 --> 00:18:41.155 align:start position:30% line:-2
文字はスクリーン空間に
表示すれば

00:18:41.255 --> 00:18:46.493 align:start position:32% line:-2
角度や距離に関わらず
読みやすくなります

00:18:47.094 --> 00:18:50.164 align:start position:30% line:-1
画面に詳細を表示すれば

00:18:50.264 --> 00:18:52.699 align:start position:32% line:-2
デバイスを
傾ける必要がないので

00:18:52.799 --> 00:18:55.502 align:start position:34% line:-1
読みやすくなります

00:18:55.769 --> 00:19:01.241 align:start position:29% line:-2
iOSで情報を読む場合と
同じ知識を応用できます

00:18:55.769 --> 00:19:01.241 align:start position:29% line:-2
iOSで情報を読む場合と
同じ知識を応用できます

00:19:01.975 --> 00:19:06.713 align:start position:34% line:-2
最後は 詳細情報を
表示するため

00:19:06.880 --> 00:19:09.483 align:start position:30% line:-1
ARから出入りしました

00:19:09.583 --> 00:19:12.085 align:start position:29% line:-1
ただし オブジェクトには

00:19:12.186 --> 00:19:15.689 align:start position:30% line:-2
固有の実物である印象を
持たせることが重要です

00:19:19.459 --> 00:19:23.697 align:start position:27% line:-2
これがAR上にコンテンツを
表示させる方法です

00:19:23.797 --> 00:19:29.636 align:start position:29% line:-2
コンテンツのタイプにより
見せ方にはコツがあります

00:19:30.170 --> 00:19:33.440 align:start position:30% line:-2
次はインタラクションに
ついてです

00:19:33.540 --> 00:19:37.344 align:start position:36% line:-2
どんな方法が
あるのでしょうか

00:19:38.278 --> 00:19:40.280 align:start position:30% line:-1
まずは 触れることです

00:19:40.380 --> 00:19:42.549 align:start position:30% line:-1
iOSの完成当時から―

00:19:42.649 --> 00:19:45.018 align:start position:36% line:-2
触れることは
大切な要素でした

00:19:45.119 --> 00:19:47.454 align:start position:34% line:-2
デバイスを
相互作用させる上で

00:19:47.554 --> 00:19:50.757 align:start position:32% line:-2
マルチタッチは
最も重要な要素でした

00:19:51.792 --> 00:19:55.362 align:start position:36% line:-2
手で触れることが
素晴らしいのは

00:19:55.562 --> 00:19:58.165 align:start position:29% line:-1
直接 操作できるからです

00:19:58.699 --> 00:20:03.270 align:start position:30% line:-2
画面に表示されたものを
実物を触るように

00:19:58.699 --> 00:20:03.270 align:start position:30% line:-2
画面に表示されたものを
実物を触るように

00:20:03.370 --> 00:20:05.272 align:start position:32% line:-1
動かすことができます

00:20:05.372 --> 00:20:09.510 align:start position:29% line:-2
スクロールしたり
ズームを変えたりではなく

00:20:09.610 --> 00:20:11.979 align:start position:34% line:-2
コンテンツを
じかに動かせるので

00:20:12.079 --> 00:20:15.249 align:start position:34% line:-2
動かしている感触が
得られます

00:20:16.250 --> 00:20:18.519 align:start position:32% line:-1
これは何より大切です

00:20:18.619 --> 00:20:23.824 align:start position:30% line:-2
ARではリアルな実感が
得られるので―

00:20:24.157 --> 00:20:26.260 align:start position:30% line:-1
現実世界と変わりません

00:20:26.360 --> 00:20:29.329 align:start position:32% line:-1
じかに操作できると―

00:20:29.429 --> 00:20:33.167 align:start position:30% line:-2
直接 相互作用している
感じになります

00:20:34.601 --> 00:20:38.505 align:start position:32% line:-2
じかに操作するための
ジェスチャは

00:20:38.605 --> 00:20:42.543 align:start position:32% line:-2
iOSを操作する中で
すでに学んでいます

00:20:42.743 --> 00:20:47.014 align:start position:27% line:-2
iOSでコンテンツを
使用する時と同じ動きなので

00:20:47.114 --> 00:20:50.784 align:start position:29% line:-2
ずっと前から
使ってきたものと言えます

00:20:52.486 --> 00:20:57.391 align:start position:29% line:-2
では実際にオブジェクトを
動かしてみましょう

00:20:57.491 --> 00:21:01.962 align:start position:29% line:-2
指を手前に引けば
オブジェクトは移動します

00:20:57.491 --> 00:21:01.962 align:start position:29% line:-2
指を手前に引けば
オブジェクトは移動します

00:21:02.062 --> 00:21:05.599 align:start position:32% line:-2
指からオブジェクトが
離れないので

00:21:05.699 --> 00:21:09.236 align:start position:29% line:-2
自分で動かしている実感が
得られます

00:21:11.438 --> 00:21:15.109 align:start position:34% line:-2
次は大きさを
調整してみましょう

00:21:15.209 --> 00:21:19.880 align:start position:34% line:-2
まずは違和感のない
普通の大きさです

00:21:19.980 --> 00:21:23.617 align:start position:29% line:-2
大きくするには
オブジェクトをピンチし―

00:21:23.717 --> 00:21:26.820 align:start position:36% line:-2
小さくするには
逆にピンチします

00:21:27.221 --> 00:21:32.659 align:start position:29% line:-2
拡大と縮小をした時は
変化の度合いを知らせます

00:21:32.759 --> 00:21:34.795 align:start position:36% line:-2
オブジェクトを
４倍に拡大すれば

00:21:34.895 --> 00:21:38.232 align:start position:29% line:-1
変化の幅は大きくなります

00:21:39.099 --> 00:21:43.170 align:start position:30% line:-2
変化の度合いを
知らせる必要があります

00:21:43.670 --> 00:21:46.206 align:start position:30% line:-1
自然な大きさに戻すのを

00:21:46.306 --> 00:21:49.343 align:start position:29% line:-1
簡単にする必要もあります

00:21:49.443 --> 00:21:52.279 align:start position:34% line:-2
物質世界のサイズに
合わせたければ

00:21:52.379 --> 00:21:57.484 align:start position:30% line:-2
元の大きさに
すぐ戻すことも可能です

00:21:59.987 --> 00:22:02.623 align:start position:34% line:-2
またオブジェクトを
回転させるには

00:21:59.987 --> 00:22:02.623 align:start position:34% line:-2
またオブジェクトを
回転させるには

00:22:02.723 --> 00:22:06.560 align:start position:32% line:-2
２本の指を画面に乗せ
ツイストさせます

00:22:06.960 --> 00:22:10.531 align:start position:29% line:-2
このような
２本の指のジェスチャでは

00:22:10.631 --> 00:22:14.001 align:start position:34% line:-2
タップターゲットも
考慮しましょう

00:22:14.101 --> 00:22:17.738 align:start position:30% line:-2
デバイスと連動して
オブジェクトも動くので

00:22:17.838 --> 00:22:21.575 align:start position:29% line:-2
遠くに行くとターゲットが
小さくなります

00:22:21.675 --> 00:22:24.611 align:start position:34% line:-2
タップターゲットは
大きくすれば―

00:22:24.845 --> 00:22:27.915 align:start position:30% line:-2
オブジェクトに触るのが
簡単になります

00:22:28.015 --> 00:22:32.619 align:start position:34% line:-2
その際は必ず
２本の指の真ん中で

00:22:32.719 --> 00:22:34.822 align:start position:34% line:-1
動かすようにします

00:22:34.922 --> 00:22:37.591 align:start position:27% line:-1
タップターゲットが大きいと

00:22:37.691 --> 00:22:40.294 align:start position:36% line:-2
２本指が入らない
可能性もあります

00:22:41.895 --> 00:22:44.932 align:start position:27% line:-1
ARには実物の感があるので

00:22:45.032 --> 00:22:48.068 align:start position:30% line:-2
じかに操作できる機能は
欠かせません

00:22:48.368 --> 00:22:52.473 align:start position:30% line:-2
欠点があるとすれば
間違って 違うものを―

00:22:52.573 --> 00:22:55.542 align:start position:30% line:-1
動かしてしまうことです

00:22:55.642 --> 00:23:01.315 align:start position:27% line:-2
画面上のオブジェクトは
場所を変えるたびに動くので

00:22:55.642 --> 00:23:01.315 align:start position:27% line:-2
画面上のオブジェクトは
場所を変えるたびに動くので

00:23:01.415 --> 00:23:04.084 align:start position:29% line:-1
安定させることが大切です

00:23:04.284 --> 00:23:08.055 align:start position:34% line:-2
安定させるのは
困難かもしれません

00:23:08.856 --> 00:23:12.993 align:start position:29% line:-2
タッチしてオブジェクトを
動かす機能が

00:23:13.093 --> 00:23:16.663 align:start position:34% line:-2
ARに不十分である
一番の理由は

00:23:16.763 --> 00:23:19.132 align:start position:38% line:-2
それが２次元の
操作だからです

00:23:19.500 --> 00:23:23.070 align:start position:36% line:-2
タッチする画面は
２次元なので

00:23:23.170 --> 00:23:26.573 align:start position:32% line:-2
マルチタッチは
iOSに搭載された―

00:23:26.673 --> 00:23:29.476 align:start position:30% line:-2
2Dアプリケーションと
言えます

00:23:29.576 --> 00:23:33.747 align:start position:30% line:-2
しかしARコンテンツは
現実世界に配置します

00:23:34.047 --> 00:23:38.852 align:start position:32% line:-2
つまり３次元の動きが
必要になります

00:23:38.952 --> 00:23:41.355 align:start position:38% line:-2
ここが３次元の
世界だからです

00:23:42.789 --> 00:23:45.526 align:start position:30% line:-1
その問題を解決するには

00:23:45.626 --> 00:23:48.629 align:start position:29% line:-1
デバイスを動かしましょう

00:23:48.729 --> 00:23:53.433 align:start position:36% line:-2
デバイスを上下や
左右に動かしたり

00:23:53.534 --> 00:23:56.303 align:start position:34% line:-2
前後に動かしたりも
できます

00:23:56.403 --> 00:24:01.108 align:start position:30% line:-2
歩けば さらに遠くまで
動かすことができます

00:23:56.403 --> 00:24:01.108 align:start position:30% line:-2
歩けば さらに遠くまで
動かすことができます

00:24:01.442 --> 00:24:05.779 align:start position:32% line:-2
デバイスを３次元に
動かすことができれば

00:24:05.879 --> 00:24:10.250 align:start position:23% line:-2
ARに最高のインタラクションが
生まれるでしょう

00:24:10.651 --> 00:24:12.920 align:start position:32% line:-1
タッチすることよりも

00:24:13.020 --> 00:24:16.757 align:start position:34% line:-2
デバイスを３次元に
動かす方が大事です

00:24:17.057 --> 00:24:22.196 align:start position:27% line:-2
デフォルトで実装されるのが
自然と言えましょう

00:24:22.329 --> 00:24:24.264 align:start position:30% line:-2
AR上のオブジェクトを
見る時も

00:24:24.364 --> 00:24:29.336 align:start position:30% line:-2
角度を変えるために
デバイスを動かしますね

00:24:29.536 --> 00:24:33.073 align:start position:27% line:-1
だから不自然さがありません

00:24:34.408 --> 00:24:37.244 align:start position:29% line:-1
デバイスを動かすと言えば

00:24:37.344 --> 00:24:41.181 align:start position:32% line:-2
マルチタッチで
様々なことができます

00:24:41.281 --> 00:24:46.787 align:start position:29% line:-2
2Dのアプリケーションで
新しい情報を見たければ

00:24:46.887 --> 00:24:49.189 align:start position:30% line:-1
画面をスクロールします

00:24:49.690 --> 00:24:54.628 align:start position:30% line:-2
しかしARは3Dなので
勝手が違います

00:24:54.728 --> 00:24:57.898 align:start position:27% line:-1
違うコンテンツが見たければ

00:24:57.998 --> 00:25:02.870 align:start position:32% line:-2
デバイスを動かし
違う角度から眺めます

00:24:57.998 --> 00:25:02.870 align:start position:32% line:-2
デバイスを動かし
違う角度から眺めます

00:25:02.970 --> 00:25:05.839 align:start position:29% line:-1
もっと見たいと思ったら―

00:25:05.939 --> 00:25:08.609 align:start position:29% line:-1
３次元の方法で解決します

00:25:09.276 --> 00:25:13.881 align:start position:29% line:-2
2Dのアプリケーションで
拡大する時は

00:25:13.981 --> 00:25:16.150 align:start position:32% line:-1
ピンチでズームします

00:25:16.450 --> 00:25:21.688 align:start position:27% line:-2
縮小する場合は
ピンチでズームアウトします

00:25:22.322 --> 00:25:25.025 align:start position:32% line:-1
ARで拡大したければ

00:25:25.125 --> 00:25:28.762 align:start position:38% line:-2
見ているものに
近づきましょう

00:25:29.196 --> 00:25:33.567 align:start position:27% line:-2
一度に複数のオブジェクトを
確認したくなったら―

00:25:33.901 --> 00:25:38.238 align:start position:32% line:-2
後ろに下がれば
広範囲を眺められます

00:25:39.973 --> 00:25:42.276 align:start position:30% line:-1
デバイスを動かすことで

00:25:42.376 --> 00:25:45.779 align:start position:29% line:-2
2Dのアプリケーションの
ピンチに代わる―

00:25:47.147 --> 00:25:49.016 align:start position:34% line:-1
操作ができるのです

00:25:50.517 --> 00:25:53.053 align:start position:30% line:-1
デバイスを動かすことは

00:25:53.153 --> 00:25:55.689 align:start position:30% line:-2
マルチタッチの代わりに
なります

00:25:55.956 --> 00:25:57.224 align:start position:39% line:-1
動かす要素を

00:25:57.324 --> 00:26:01.662 align:start position:30% line:-2
アプリケーション開発に
組み込みましょう

00:25:57.324 --> 00:26:01.662 align:start position:30% line:-2
アプリケーション開発に
組み込みましょう

00:26:01.862 --> 00:26:04.231 align:start position:32% line:-1
しっくりくるはずです

00:26:04.331 --> 00:26:08.836 align:start position:30% line:-2
違うものを眺めるのにも
デバイスを使いましょう

00:26:08.936 --> 00:26:11.171 align:start position:32% line:-1
具体例をお見せします

00:26:11.605 --> 00:26:14.675 align:start position:29% line:-2
SwiftShotという
ゲームです

00:26:14.775 --> 00:26:17.411 align:start position:34% line:-2
すでに試した方も
いるかもしれません

00:26:17.711 --> 00:26:23.350 align:start position:29% line:-2
このゲームで弾を撃つには
ぱちんこに近づきます

00:26:23.450 --> 00:26:26.153 align:start position:27% line:-1
リストから選ぶ必要はなく―

00:26:26.286 --> 00:26:30.324 align:start position:36% line:-2
画面上で取らずに
近づくだけです

00:26:30.791 --> 00:26:34.728 align:start position:29% line:-2
弾を撃つ時は
デバイスを後ろに引きます

00:26:34.962 --> 00:26:39.132 align:start position:32% line:-2
３次元の要素を使って
弾を撃つので

00:26:39.233 --> 00:26:44.171 align:start position:27% line:-2
動かす時や後ろに引く時の
３次元での正確さがあります

00:26:44.271 --> 00:26:47.674 align:start position:30% line:-2
タッチする以上のことが
できます

00:26:47.775 --> 00:26:50.377 align:start position:30% line:-1
デバイスを動かすことは

00:26:50.477 --> 00:26:56.183 align:start position:27% line:-2
違和感がないだけでなく
より正確な結果を導きました

00:26:57.951 --> 00:27:03.257 align:start position:30% line:-2
時にタッチすることと
デバイスを動かすことを

00:26:57.951 --> 00:27:03.257 align:start position:30% line:-2
時にタッチすることと
デバイスを動かすことを

00:27:03.357 --> 00:27:07.995 align:start position:32% line:-2
組み合わせて究極の
相互作用が完成します

00:27:08.695 --> 00:27:10.464 align:start position:32% line:-1
その一例を見てみます

00:27:10.564 --> 00:27:15.435 align:start position:23% line:-2
じかに触れる操作と デバイスを
動かす操作を合わせてみます

00:27:16.570 --> 00:27:22.242 align:start position:18% line:-2
Quick Look for ARで
この組み合わせを

00:27:23.477 --> 00:27:25.746 align:start position:30% line:-1
検証することができます

00:27:26.046 --> 00:27:31.752 align:start position:25% line:-2
オブジェクトを移動するには
新たな場所までドラッグします

00:27:31.852 --> 00:27:34.454 align:start position:30% line:-1
タッチして動かすのです

00:27:34.555 --> 00:27:38.792 align:start position:27% line:-2
持ち上げる時もタッチし
デバイスの向きを変えてから

00:27:38.892 --> 00:27:40.794 align:start position:32% line:-1
新たな場所に置きます

00:27:40.894 --> 00:27:47.334 align:start position:27% line:-2
３次元の操作を駆使して
移動させることができました

00:27:47.434 --> 00:27:51.205 align:start position:32% line:-2
画面に見えない場所に
移動させます

00:27:51.305 --> 00:27:53.340 align:start position:34% line:-1
向きを変えるのです

00:27:53.440 --> 00:27:56.310 align:start position:34% line:-2
物理的な
つながりがあるので

00:27:56.410 --> 00:28:01.748 align:start position:23% line:-2
じかにオブジェクトを
持ち上げている感覚が得られます

00:27:56.410 --> 00:28:01.748 align:start position:23% line:-2
じかにオブジェクトを
持ち上げている感覚が得られます

00:28:01.849 --> 00:28:06.887 align:start position:27% line:-2
皆さんのアプリケーションで
オブジェクトを動かす時は

00:28:06.987 --> 00:28:11.291 align:start position:34% line:-2
じかに操作して
持ち上げる動作と―

00:28:11.391 --> 00:28:14.928 align:start position:30% line:-2
デバイスを動かして
探す動作を含めましょう

00:28:17.931 --> 00:28:24.171 align:start position:23% line:-2
この２つの操作は
タッチを含める１つの方法ですが

00:28:24.271 --> 00:28:29.076 align:start position:29% line:-2
次は間接的に
コントロールする方法です

00:28:29.710 --> 00:28:33.680 align:start position:30% line:-2
そもそもコントロールは
画面上の平面なので

00:28:33.781 --> 00:28:36.683 align:start position:36% line:-2
ARを現実世界に
配置しません

00:28:36.783 --> 00:28:41.688 align:start position:27% line:-2
画面上での位置が一定なので
場所が分かります

00:28:41.788 --> 00:28:44.291 align:start position:29% line:-1
だから邪魔にもなりません

00:28:44.391 --> 00:28:48.095 align:start position:23% line:-2
画面上の
コントロールの場所が分かったら

00:28:48.195 --> 00:28:50.964 align:start position:25% line:-1
その上に指を置けばいいのです

00:28:51.064 --> 00:28:54.701 align:start position:34% line:-2
その間 他のことに
集中できます

00:28:55.569 --> 00:28:57.571 align:start position:30% line:-1
その例を見てみましょう

00:28:57.671 --> 00:28:59.740 align:start position:25% line:-2
Zombie Gunship
Revenant AR です

00:28:59.840 --> 00:29:03.277 align:start position:32% line:-2
狙いを定め
たくさんいるゾンビを

00:28:59.840 --> 00:29:03.277 align:start position:32% line:-2
狙いを定め
たくさんいるゾンビを

00:29:03.377 --> 00:29:05.946 align:start position:27% line:-1
上空から撃ち殺すゲームです

00:29:06.046 --> 00:29:10.818 align:start position:27% line:-2
銃を撃たなきゃならない時に
指の置き場所なんて

00:29:10.918 --> 00:29:12.886 align:start position:34% line:-1
構っていられません

00:29:12.986 --> 00:29:16.623 align:start position:29% line:-2
代わりに発射ボタンの上に
指を置き―

00:29:16.723 --> 00:29:21.195 align:start position:29% line:-2
デバイスをあらゆる方向に
動かしましょう

00:29:21.295 --> 00:29:24.565 align:start position:36% line:-2
そしてゾンビに
照準を合わせます

00:29:26.533 --> 00:29:28.101 align:start position:29% line:-1
間接的なコントロール法に

00:29:28.202 --> 00:29:32.039 align:start position:30% line:-2
デバイスを動かす要素を
合わせました

00:29:32.406 --> 00:29:36.577 align:start position:27% line:-2
操作は片手で済むという点で
優れています

00:29:36.910 --> 00:29:41.815 align:start position:34% line:-2
ARを動かす時は
常に片手を使います

00:29:41.915 --> 00:29:44.785 align:start position:32% line:-2
片手も使わない場合は
ありません

00:29:44.885 --> 00:29:47.588 align:start position:34% line:-2
片手を使った
AR体験を作るなら

00:29:47.688 --> 00:29:52.292 align:start position:30% line:-2
押しやすい場所に
ボタンを設置しましょう

00:29:53.861 --> 00:29:56.463 align:start position:25% line:-1
Measureがその一例です

00:29:56.563 --> 00:29:58.265 align:start position:36% line:-1
プラスボタンと―

00:29:58.365 --> 00:30:01.201 align:start position:36% line:-2
画面の下部にある
追加ボタンで

00:29:58.365 --> 00:30:01.201 align:start position:36% line:-2
画面の下部にある
追加ボタンで

00:30:01.301 --> 00:30:02.870 align:start position:32% line:-1
ポイントを増やします

00:30:03.170 --> 00:30:05.772 align:start position:36% line:-2
押しやすい場所に
ありますよね

00:30:05.873 --> 00:30:10.444 align:start position:32% line:-2
正確な測定をするため
十字線の移動に―

00:30:10.544 --> 00:30:12.813 align:start position:34% line:-1
片手を使っていても

00:30:12.913 --> 00:30:15.616 align:start position:38% line:-2
プラスボタンに
指を置き続けて

00:30:15.716 --> 00:30:19.253 align:start position:34% line:-2
測定するポイントを
追加できます

00:30:19.486 --> 00:30:23.290 align:start position:29% line:-2
間接的なコントロール法を
使えば―

00:30:23.390 --> 00:30:28.028 align:start position:29% line:-2
片手で簡単にAR体験を
利用できるようになります

00:30:31.398 --> 00:30:34.868 align:start position:29% line:-2
これがARの
インタラクションなのです

00:30:34.968 --> 00:30:36.670 align:start position:36% line:-1
じかに操作すれば

00:30:36.770 --> 00:30:40.407 align:start position:34% line:-2
物理的な相互作用の
感覚が得られます

00:30:40.507 --> 00:30:44.044 align:start position:30% line:-2
デバイスを動かす要素は
ARには重要です

00:30:44.144 --> 00:30:48.482 align:start position:30% line:-2
間接的なコントロールは
内容に集中できるよう―

00:30:48.582 --> 00:30:52.719 align:start position:34% line:-2
押しやすい場所に
ボタンを置きました

00:30:53.320 --> 00:30:55.556 align:start position:32% line:-1
説明は以上になります

00:30:55.656 --> 00:31:00.494 align:start position:27% line:-2
ユーザを正しく誘導し
正しい操作がなされていると

00:30:55.656 --> 00:31:00.494 align:start position:27% line:-2
ユーザを正しく誘導し
正しい操作がなされていると

00:31:00.594 --> 00:31:02.563 align:start position:30% line:-1
直接的に知らせましょう

00:31:02.663 --> 00:31:06.333 align:start position:34% line:-2
2Dや仮想空間に
ARを表示しました

00:31:06.433 --> 00:31:09.503 align:start position:27% line:-1
文字を読みやすくするコツや

00:31:09.603 --> 00:31:13.640 align:start position:29% line:-2
ARに独自の存在感が
あることもお話ししました

00:31:14.241 --> 00:31:17.277 align:start position:29% line:-1
デバイスを動かしていると

00:31:17.377 --> 00:31:21.148 align:start position:27% line:-2
相互作用の感覚が
得られるともお伝えしました

00:31:22.015 --> 00:31:23.217 align:start position:38% line:-1
次はオマールが

00:31:23.317 --> 00:31:27.621 align:start position:27% line:-2
美しい3Dモデルの作り方を
お話しします

00:31:27.721 --> 00:31:28.589 align:start position:41% line:-1
ありがとう

00:31:28.722 --> 00:31:34.595 align:start position:43% line:-1
(拍手)

00:31:36.363 --> 00:31:38.165 align:start position:41% line:-1
ありがとう

00:31:40.567 --> 00:31:41.602 align:start position:32% line:-1
ありがとう　グラント

00:31:45.038 --> 00:31:46.173 align:start position:41% line:-1
こんにちは

00:31:46.273 --> 00:31:50.310 align:start position:25% line:-2
ARコンテンツを開発する上で
役に立つ方法を―

00:31:50.410 --> 00:31:55.182 align:start position:29% line:-2
ご紹介できて
すごくワクワクしています

00:31:55.282 --> 00:31:59.520 align:start position:34% line:-2
今日は様々な情報を
お伝えする予定です

00:31:59.686 --> 00:32:03.957 align:start position:30% line:-2
エンジニアやデザイナー
アーティストであれ

00:31:59.686 --> 00:32:03.957 align:start position:30% line:-2
エンジニアやデザイナー
アーティストであれ

00:32:04.057 --> 00:32:08.729 align:start position:34% line:-2
これからお話しする
戦略や定義を使えば

00:32:08.829 --> 00:32:15.135 align:start position:29% line:-2
人々を満足させる最高の
ARコンテンツを作れます

00:32:16.403 --> 00:32:22.643 align:start position:25% line:-2
まずはAR体験を開発する上で
欠かせない概念についてです

00:32:23.644 --> 00:32:25.512 align:start position:29% line:-1
ARは素晴らしいものです

00:32:25.612 --> 00:32:28.248 align:start position:25% line:-1
イメージした あらゆるものを

00:32:28.348 --> 00:32:31.385 align:start position:30% line:-1
現実世界に配置できます

00:32:31.518 --> 00:32:36.356 align:start position:29% line:-2
AR体験には多くの期待が
寄せられています

00:32:37.524 --> 00:32:38.792 align:start position:38% line:-1
AR体験には―

00:32:38.892 --> 00:32:42.062 align:start position:27% line:-2
スムーズで安定した
レンダリングが求められます

00:32:42.229 --> 00:32:48.101 align:start position:27% line:-2
コンテンツに興味を引かれ
ディテールを確認したくなり

00:32:48.268 --> 00:32:53.040 align:start position:27% line:-2
画面を拡大すると
フリーズすることがあります

00:32:53.407 --> 00:32:56.043 align:start position:34% line:-1
最適化が不十分だと

00:32:56.143 --> 00:32:58.645 align:start position:36% line:-2
パフォーマンスが
劇的に下がります

00:32:59.780 --> 00:33:03.484 align:start position:32% line:-2
高いパフォーマンスを
常に保ち―

00:32:59.780 --> 00:33:03.484 align:start position:32% line:-2
高いパフォーマンスを
常に保ち―

00:33:03.584 --> 00:33:06.887 align:start position:38% line:-2
人々の集中力を
持続させるには

00:33:07.087 --> 00:33:10.824 align:start position:34% line:-2
毎秒60フレームを
目指しましょう

00:33:11.091 --> 00:33:16.196 align:start position:27% line:-2
一貫して このフレーム数を
保つことが大切です

00:33:16.296 --> 00:33:20.934 align:start position:30% line:-2
様々なストレステストを
行ってください

00:33:21.034 --> 00:33:23.170 align:start position:34% line:-1
拡大や縮小をしても

00:33:23.270 --> 00:33:26.306 align:start position:29% line:-2
パフォーマンスが
落ちないようにするのです

00:33:27.941 --> 00:33:31.812 align:start position:29% line:-2
いずれバッテリーの寿命が
伸びるでしょう

00:33:32.045 --> 00:33:35.115 align:start position:27% line:-1
でも今はバッテリーの消耗が

00:33:35.215 --> 00:33:38.652 align:start position:34% line:-2
最小限になるように
設計してください

00:33:38.986 --> 00:33:42.723 align:start position:29% line:-2
ユーザに
非難されたくないですよね

00:33:42.823 --> 00:33:44.324 align:start position:34% line:-1
負荷を少なくすれば

00:33:44.424 --> 00:33:47.728 align:start position:29% line:-2
またAR体験をしたい人が
増えるでしょう

00:33:48.829 --> 00:33:52.566 align:start position:32% line:-2
私はバッテリー残量が
少なくなると

00:33:52.666 --> 00:33:55.169 align:start position:32% line:-2
パニック発作を
起こしそうになります

00:33:55.269 --> 00:33:57.838 align:start position:32% line:-2
AR体験のせいで
バッテリーのカオスが

00:33:57.938 --> 00:34:00.774 align:start position:27% line:-1
広がらないようにしましょう

00:33:57.938 --> 00:34:00.774 align:start position:27% line:-1
広がらないようにしましょう

00:34:00.908 --> 00:34:01.975 align:start position:38% line:-1
大切なことです

00:34:02.075 --> 00:34:05.646 align:start position:30% line:-2
バッテリーを救えるのは
皆さんだけなのです

00:34:07.448 --> 00:34:10.884 align:start position:32% line:-2
ARにはイメージした
あらゆるものを

00:34:10.984 --> 00:34:13.085 align:start position:27% line:-1
現実世界に送る力があります

00:34:13.520 --> 00:34:15.856 align:start position:27% line:-1
人々が期待していると知れば

00:34:15.956 --> 00:34:18.125 align:start position:27% line:-1
皆さんはベストを尽くすはず

00:34:18.225 --> 00:34:22.062 align:start position:36% line:-2
ディテールには
こだわりましょう

00:34:22.161 --> 00:34:24.164 align:start position:32% line:-1
ストーリーも大切です

00:34:24.264 --> 00:34:27.034 align:start position:29% line:-1
ちょっとしたディテールが

00:34:27.134 --> 00:34:29.803 align:start position:32% line:-1
人々を驚かせるのです

00:34:31.103 --> 00:34:35.375 align:start position:29% line:-2
水族館の気分を味わえる
コンテンツを作成しました

00:34:35.542 --> 00:34:40.280 align:start position:30% line:-2
抽象的な形をしている
このマシュマロの塊が―

00:34:40.380 --> 00:34:43.016 align:start position:36% line:-2
魚だと信じる人は
いないでしょう

00:34:43.516 --> 00:34:44.918 align:start position:32% line:-1
いい面をあげるなら―

00:34:45.018 --> 00:34:49.456 align:start position:29% line:-2
この魚だったら
パフォーマンスは上々です

00:34:49.590 --> 00:34:51.958 align:start position:36% line:-1
やり直してみます

00:34:52.760 --> 00:34:55.128 align:start position:30% line:-1
だいぶマシになりました

00:34:55.262 --> 00:34:57.831 align:start position:32% line:-1
今にも死にそうですが

00:34:58.031 --> 00:35:00.434 align:start position:29% line:-1
ディテールが優れています

00:34:58.031 --> 00:35:00.434 align:start position:29% line:-1
ディテールが優れています

00:35:00.534 --> 00:35:02.069 align:start position:32% line:-1
これをARにした場合

00:35:02.169 --> 00:35:05.572 align:start position:32% line:-2
人々が細かい部分まで
見たくなるように―

00:35:05.672 --> 00:35:08.809 align:start position:30% line:-1
仕向ける必要があります

00:35:09.309 --> 00:35:14.181 align:start position:29% line:-2
水族館に泳がせる魚は
これぐらい詳細に描きます

00:35:14.281 --> 00:35:16.850 align:start position:32% line:-2
まあ 今は
浮いているだけですが

00:35:18.018 --> 00:35:22.790 align:start position:25% line:-2
最後に ユーザは様々な環境で
アプリケーションを使います

00:35:22.890 --> 00:35:28.462 align:start position:27% line:-2
ARが現実世界で
悪目立ちしないようにします

00:35:28.562 --> 00:35:33.167 align:start position:29% line:-2
周囲と明るさが
一致しない恐れもあります

00:35:33.901 --> 00:35:37.104 align:start position:27% line:-1
明るすぎる色や暗すぎる色は

00:35:37.204 --> 00:35:39.673 align:start position:34% line:-1
使用を避けましょう

00:35:39.773 --> 00:35:45.579 align:start position:25% line:-2
表示する予定のオブジェクトは
どの角度から見ても

00:35:45.679 --> 00:35:48.549 align:start position:27% line:-1
光が当たるように設定します

00:35:48.949 --> 00:35:52.319 align:start position:29% line:-2
コンテンツは昼夜を問わず
使いたいですよね

00:35:52.419 --> 00:35:56.490 align:start position:25% line:-2
秘密をバラすと
ARKitの機能を修正します

00:35:56.590 --> 00:36:01.762 align:start position:30% line:-2
現実世界とARの境目が
あいまいになるので

00:35:56.590 --> 00:36:01.762 align:start position:30% line:-2
現実世界とARの境目が
あいまいになるので

00:36:01.862 --> 00:36:05.032 align:start position:25% line:-1
AR体験が楽しくなるはずです

00:36:06.400 --> 00:36:11.205 align:start position:30% line:-2
進捗状況を評価する際に
便利なツールがあります

00:36:11.305 --> 00:36:14.842 align:start position:27% line:-2
最近発表された
iOS 12に搭載される―

00:36:14.942 --> 00:36:16.343 align:start position:25% line:-1
AR Quicklookです

00:36:16.477 --> 00:36:21.481 align:start position:23% line:-2
iCloudにアセットを保存し
ファイルAppで表示させます

00:36:21.582 --> 00:36:24.918 align:start position:34% line:-2
すぐにARを
映し出せるわけです

00:36:26.820 --> 00:36:30.958 align:start position:30% line:-2
皆さんの自信作を
ウェブサイトに載せれば

00:36:31.058 --> 00:36:35.329 align:start position:30% line:-2
友人がSafariで
確認することも可能です

00:36:35.662 --> 00:36:37.464 align:start position:38% line:-1
画期的ですよね

00:36:37.598 --> 00:36:40.200 align:start position:34% line:-2
デイブとデビッドの
セッションで

00:36:40.300 --> 00:36:44.872 align:start position:27% line:-2
AR Quicklookの
使い方を学べば―

00:36:44.972 --> 00:36:49.209 align:start position:30% line:-2
アプリケーション開発を
変えられるでしょう

00:36:50.410 --> 00:36:55.516 align:start position:29% line:-2
AR体験への期待について
考察してきましたが

00:36:55.616 --> 00:36:59.019 align:start position:30% line:-2
次はアプリケーションの
種類についてです

00:36:59.286 --> 00:37:02.723 align:start position:36% line:-2
3Dコンテンツを
作り始める前に

00:36:59.286 --> 00:37:02.723 align:start position:36% line:-2
3Dコンテンツを
作り始める前に

00:37:02.823 --> 00:37:05.292 align:start position:32% line:-1
よく検討してください

00:37:05.759 --> 00:37:09.963 align:start position:30% line:-2
作りたいものが分かれば
最適化する方法を―

00:37:10.063 --> 00:37:12.499 align:start position:34% line:-1
絞り込めるでしょう

00:37:13.534 --> 00:37:17.538 align:start position:34% line:-2
机に向かっていると
突然ひらめいて

00:37:17.638 --> 00:37:21.942 align:start position:27% line:-2
最高のAR体験のアイデアが
浮かんだとします

00:37:22.276 --> 00:37:26.179 align:start position:34% line:-2
次は落ち着いて
自問してみましょう

00:37:26.480 --> 00:37:30.083 align:start position:36% line:-2
レンダリングする
オブジェクトは―

00:37:30.184 --> 00:37:33.921 align:start position:36% line:-2
たくさんにするか
それとも１つ？

00:37:34.521 --> 00:37:36.123 align:start position:34% line:-1
ディテールは必要？

00:37:36.223 --> 00:37:40.294 align:start position:29% line:-2
グラフィックは
どんなスタイルにするか？

00:37:41.295 --> 00:37:45.332 align:start position:32% line:-2
グラントが話していた
相互作用のレベルは

00:37:45.432 --> 00:37:47.301 align:start position:32% line:-1
どの程度必要なのか？

00:37:47.734 --> 00:37:52.005 align:start position:34% line:-2
これらの問いに
明確な答えがあれば

00:37:52.105 --> 00:37:55.609 align:start position:32% line:-2
レンダリング容量の
つぎ込み先が見えます

00:37:57.044 --> 00:38:01.849 align:start position:18% line:-2
例えば IKEA Placeのような
アプリケーションを想定します

00:37:57.044 --> 00:38:01.849 align:start position:18% line:-2
例えば IKEA Placeのような
アプリケーションを想定します

00:38:01.949 --> 00:38:06.019 align:start position:34% line:-2
様々な家具を
自宅や中庭に置き―

00:38:06.119 --> 00:38:09.490 align:start position:32% line:-2
プレビューできる
アプリケーションです

00:38:09.723 --> 00:38:13.627 align:start position:32% line:-2
ショーの主役は
その様々な家具なので

00:38:13.727 --> 00:38:18.465 align:start position:29% line:-2
細部に工夫を凝らし
本物に近いオブジェクトを

00:38:18.565 --> 00:38:19.733 align:start position:39% line:-1
作りましょう

00:38:20.567 --> 00:38:25.072 align:start position:23% line:-2
このようにレンダリングの対象が
１種類であれば

00:38:25.172 --> 00:38:28.909 align:start position:27% line:-1
少し時間をかけて作成します

00:38:29.042 --> 00:38:32.379 align:start position:32% line:-2
オブジェクトの質が
売上に関わるからです

00:38:34.314 --> 00:38:40.154 align:start position:23% line:-2
一方で 子供が家中に広げた
小さなプラスチックのブロックを

00:38:40.254 --> 00:38:43.724 align:start position:34% line:-2
もう踏みたくないと
思ったとします

00:38:43.824 --> 00:38:46.026 align:start position:34% line:-1
怒らずに済むように

00:38:46.126 --> 00:38:51.531 align:start position:18% line:-2
無限のブロックで遊べる
Playground風のARにします

00:38:51.632 --> 00:38:54.835 align:start position:36% line:-2
痛い思いは
しなくて済みます

00:38:54.935 --> 00:38:59.707 align:start position:25% line:-2
レンダリングや相互作用させる
オブジェクトが多い場合は

00:39:00.073 --> 00:39:05.646 align:start position:25% line:-2
モデルは ポリゴンやカラーを
減らしてシンプルにします

00:39:05.746 --> 00:39:09.683 align:start position:27% line:-2
そうすればパフォーマンスが
安定します

00:39:11.919 --> 00:39:16.590 align:start position:27% line:-2
自問した後は
ARキャンバスを用意します

00:39:16.757 --> 00:39:20.360 align:start position:34% line:-2
画家がキャンバスを
用意するように

00:39:20.460 --> 00:39:25.065 align:start position:32% line:-2
まずはプロジェクトの
始め方をお伝えします

00:39:25.165 --> 00:39:27.701 align:start position:29% line:-1
成功は間違いないでしょう

00:39:29.770 --> 00:39:34.107 align:start position:21% line:-2
まずはARコンテンツの置き場所を
決めましょう

00:39:34.308 --> 00:39:35.843 align:start position:32% line:-1
SceneKitには

00:39:35.943 --> 00:39:39.947 align:start position:32% line:-2
画面の一番下に
統計パネルがあります

00:39:40.047 --> 00:39:42.316 align:start position:29% line:-1
１秒あたりのフレーム数や

00:39:42.416 --> 00:39:46.353 align:start position:30% line:-2
画面上のポリゴンの数を
確認できます

00:39:46.453 --> 00:39:51.058 align:start position:27% line:-2
アプリケーションを
開発する上で役立つ機能です

00:39:52.326 --> 00:39:54.428 align:start position:30% line:-1
初期画面は決まりました

00:39:54.528 --> 00:39:59.933 align:start position:29% line:-2
どんな具体例を使うべきか
考えていました

00:40:00.300 --> 00:40:03.537 align:start position:32% line:-2
私はアウトドア派では
ありませんが

00:40:03.637 --> 00:40:05.939 align:start position:34% line:-2
カリフォルニアには
似た人が大勢います

00:40:06.073 --> 00:40:07.941 align:start position:34% line:-1
自然と触れ合うため

00:40:08.042 --> 00:40:11.478 align:start position:34% line:-2
キャンプに行こうと
思いましたが

00:40:11.578 --> 00:40:12.980 align:start position:34% line:-1
実現しませんでした

00:40:13.080 --> 00:40:16.383 align:start position:27% line:-2
代わりにアプリケーションを
作りました

00:40:17.417 --> 00:40:20.854 align:start position:27% line:-1
名前はCampfiARです

00:40:20.954 --> 00:40:22.489 align:start position:34% line:-1
完璧な名前ですよね

00:40:23.624 --> 00:40:26.460 align:start position:32% line:-2
細部にこだわった
オブジェクトを使って

00:40:26.560 --> 00:40:30.030 align:start position:32% line:-2
虫や新鮮な空気抜きで
アウトドアの―

00:40:30.130 --> 00:40:31.899 align:start position:34% line:-1
雰囲気を楽しみます

00:40:34.334 --> 00:40:38.939 align:start position:27% line:-2
グラフィックはフォルム化し
遊び心を持たせました

00:40:39.540 --> 00:40:43.344 align:start position:27% line:-2
物理ベースの
マテリアル属性を使うことで

00:40:43.444 --> 00:40:45.712 align:start position:34% line:-2
独自のディテールを
取り入れます

00:40:45.879 --> 00:40:51.719 align:start position:27% line:-2
レンダリングするために
大量のポリゴンを使用すると

00:40:51.819 --> 00:40:56.590 align:start position:32% line:-2
ユーザが火を何時間も
眺められなくなります

00:40:56.823 --> 00:41:02.262 align:start position:25% line:-2
そうならないためにも
ARシーンを最適化しましょう

00:40:56.823 --> 00:41:02.262 align:start position:25% line:-2
そうならないためにも
ARシーンを最適化しましょう

00:41:03.464 --> 00:41:08.969 align:start position:25% line:-2
3Dオブジェクトの基本である
メッシュについてです

00:41:09.069 --> 00:41:11.572 align:start position:30% line:-1
従来の開発手順を踏めば

00:41:11.672 --> 00:41:16.477 align:start position:27% line:-2
細部にこだわったモデルを
低いポリカウントを維持して

00:41:16.577 --> 00:41:18.479 align:start position:34% line:-1
作ることができます

00:41:18.979 --> 00:41:20.214 align:start position:41% line:-1
ちなみに―

00:41:20.314 --> 00:41:22.783 align:start position:34% line:-2
“ポリカウント”は
ポリゴンの数です

00:41:22.883 --> 00:41:25.953 align:start position:34% line:-2
ポリゴンは通常
三角形をしています

00:41:26.954 --> 00:41:29.957 align:start position:27% line:-1
まず簡単なメッシュを使って

00:41:30.057 --> 00:41:33.126 align:start position:30% line:-2
ARシーンの基本構造を
描いてみます

00:41:33.293 --> 00:41:36.864 align:start position:30% line:-2
ホワイトボックス技術を
駆使し―

00:41:36.964 --> 00:41:39.667 align:start position:29% line:-1
相互作用の動きを確認して

00:41:39.767 --> 00:41:43.971 align:start position:30% line:-2
オブジェクトの大きさを
決めていきます

00:41:44.605 --> 00:41:46.974 align:start position:29% line:-2
見事な
キャンプファイアですよね

00:41:47.074 --> 00:41:50.477 align:start position:36% line:-2
作業は切り上げて
出荷します

00:41:50.577 --> 00:41:53.480 align:start position:34% line:-2
では私はパーティの
二次会へ…

00:41:53.580 --> 00:41:57.017 align:start position:34% line:-2
キャンプファイアに
見えない？

00:41:57.518 --> 00:41:59.453 align:start position:34% line:-1
あれ？ そうですか

00:42:00.020 --> 00:42:05.092 align:start position:29% line:-2
失礼しました
メッシュの構築に戻ります

00:42:05.325 --> 00:42:08.295 align:start position:30% line:-1
まずはメッシュの概要や

00:42:08.395 --> 00:42:11.165 align:start position:32% line:-2
含まれる情報について
説明します

00:42:11.431 --> 00:42:16.937 align:start position:32% line:-2
メッシュとは立体的な
三角形の集合体で

00:42:17.037 --> 00:42:20.541 align:start position:27% line:-1
その表面上に加工を施します

00:42:20.641 --> 00:42:25.345 align:start position:30% line:-2
これら三角形には
頂点と呼ばれる角があり

00:42:25.446 --> 00:42:27.848 align:start position:29% line:-1
様々な情報を含んでいます

00:42:27.948 --> 00:42:32.186 align:start position:32% line:-2
空間の位置や
テクスチャのUV座標

00:42:32.286 --> 00:42:36.390 align:start position:30% line:-2
そして後ほど説明する
法線と呼ばれる情報です

00:42:37.524 --> 00:42:40.594 align:start position:27% line:-1
急いで出荷して失敗したので

00:42:40.694 --> 00:42:45.466 align:start position:29% line:-2
今度は最高に豪華な
キャンプファイアにします

00:42:45.599 --> 00:42:49.536 align:start position:32% line:-2
キャンプの出来栄えを
確認しましょう

00:42:49.770 --> 00:42:54.708 align:start position:29% line:-2
魚のうろこや枝の模様まで
見えますよね

00:42:55.208 --> 00:42:57.945 align:start position:30% line:-2
しかしパフォーマンスは
最悪です

00:42:58.045 --> 00:43:02.516 align:start position:27% line:-2
ポリゴン数は100万近くに
膨れ上がりました

00:42:58.045 --> 00:43:02.516 align:start position:27% line:-2
ポリゴン数は100万近くに
膨れ上がりました

00:43:02.783 --> 00:43:05.185 align:start position:30% line:-1
すでに困った状況ですし

00:43:05.285 --> 00:43:08.522 align:start position:32% line:-2
トラブル回避のために
修正します

00:43:08.622 --> 00:43:12.025 align:start position:32% line:-2
バッテリーへの負荷も
心配ですし

00:43:12.125 --> 00:43:15.896 align:start position:29% line:-2
ARシーンが反応するかも
気になります

00:43:15.996 --> 00:43:19.667 align:start position:36% line:-2
ではポリゴン数を
減らすには？

00:43:21.235 --> 00:43:23.504 align:start position:27% line:-1
多くの3D作成のソフトには

00:43:23.604 --> 00:43:27.741 align:start position:29% line:-2
モデルを簡略化する機能が
搭載されています

00:43:27.841 --> 00:43:33.380 align:start position:27% line:-2
これは高密度の魚と
ポリゴン数を減らした魚です

00:43:33.881 --> 00:43:37.618 align:start position:30% line:-2
ズームしてみると
細部の違いが分かります

00:43:37.718 --> 00:43:39.386 align:start position:32% line:-1
でも安心してください

00:43:39.486 --> 00:43:43.524 align:start position:30% line:-2
後ほどマテリアル属性で
細部を復活させます

00:43:43.791 --> 00:43:45.559 align:start position:36% line:-1
ここで重要なのは

00:43:45.659 --> 00:43:49.997 align:start position:32% line:-2
最小限のポリゴン数で
土台を作ることです

00:43:50.230 --> 00:43:55.469 align:start position:29% line:-2
では密度の低いメッシュで
作業を進めましょう

00:43:56.670 --> 00:43:59.973 align:start position:36% line:-2
前より見た目が
悪くなりましたが

00:44:00.073 --> 00:44:02.476 align:start position:30% line:-1
この成果を見てください

00:44:02.576 --> 00:44:07.581 align:start position:34% line:-2
大幅にポリゴン数を
減らしたおかげで―

00:44:07.681 --> 00:44:13.220 align:start position:29% line:-2
3Dオブジェクトを
追加することができました

00:44:13.687 --> 00:44:18.092 align:start position:29% line:-2
前出のメッシュでは
毎秒30フレームでしたが

00:44:18.192 --> 00:44:20.327 align:start position:32% line:-1
今は60フレームです

00:44:20.494 --> 00:44:23.897 align:start position:34% line:-2
100万近くあった
ポリゴン数も

00:44:23.997 --> 00:44:26.500 align:start position:30% line:-1
約9000になりました

00:44:26.800 --> 00:44:28.702 align:start position:39% line:-1
見事ですよね

00:44:28.802 --> 00:44:32.673 align:start position:36% line:-2
望み通りの仕様に
近づいています

00:44:32.773 --> 00:44:37.411 align:start position:27% line:-2
バッテリー消耗が少ない
安定した土台が完成しました

00:44:38.879 --> 00:44:41.548 align:start position:29% line:-1
モデルを最適化できたので

00:44:41.648 --> 00:44:44.818 align:start position:36% line:-2
今度は細部を
復活させましょう

00:44:44.918 --> 00:44:48.722 align:start position:27% line:-2
マテリアル属性や
テクニックを駆使することで

00:44:48.822 --> 00:44:50.691 align:start position:29% line:-1
パフォーマンスを落とさず

00:44:50.791 --> 00:44:54.094 align:start position:32% line:-2
見栄えのいいモデルを
作れます

00:44:55.863 --> 00:45:00.300 align:start position:29% line:-2
物理ベースレンダリングに
関する問題は

00:44:55.863 --> 00:45:00.300 align:start position:29% line:-2
物理ベースレンダリングに
関する問題は

00:45:00.534 --> 00:45:02.703 align:start position:34% line:-1
複雑なので話せば―

00:45:02.803 --> 00:45:06.406 align:start position:34% line:-2
このセッションが
終わってしまいます

00:45:06.507 --> 00:45:08.175 align:start position:39% line:-1
要約すると―

00:45:08.275 --> 00:45:13.514 align:start position:27% line:-2
様々なマテリアル属性を
メッシュに適用する手法です

00:45:13.614 --> 00:45:19.353 align:start position:29% line:-2
ARシーン内の光に
リアルに反応させられます

00:45:19.453 --> 00:45:23.891 align:start position:23% line:-2
以後の説明は この
シェーディング技術に準拠します

00:45:24.491 --> 00:45:28.929 align:start position:25% line:-2
詳しくはWWDC 2016の
セッションをご参照ください

00:45:29.029 --> 00:45:35.135 align:start position:23% line:-2
この技術をSceneKitに
応用する話を聞くことができます

00:45:36.470 --> 00:45:39.606 align:start position:38% line:-2
まずは使うのは
アルベドです

00:45:39.707 --> 00:45:43.243 align:start position:27% line:-2
ベースカラーや
ディフューズとも呼ばれます

00:45:44.478 --> 00:45:46.580 align:start position:23% line:-1
CampfiARに戻りましょう

00:45:46.947 --> 00:45:51.285 align:start position:30% line:-2
灰色の部分があるせいで
退屈な感じですが

00:45:51.385 --> 00:45:54.721 align:start position:27% line:-1
アルベドを使えば改善します

00:45:54.822 --> 00:45:58.325 align:start position:32% line:-2
元々のオブジェクトに
比べれば

00:45:58.425 --> 00:46:00.928 align:start position:32% line:-1
細部が失われています

00:45:58.425 --> 00:46:00.928 align:start position:32% line:-1
細部が失われています

00:46:01.028 --> 00:46:03.697 align:start position:29% line:-1
オブジェクトを拡大すると

00:46:03.797 --> 00:46:05.799 align:start position:34% line:-2
表面がフラットだと
気がつきます

00:46:05.899 --> 00:46:07.734 align:start position:29% line:-1
これは後で修正するとして

00:46:07.834 --> 00:46:10.637 align:start position:27% line:-1
まずはアルベドを適用します

00:46:12.172 --> 00:46:17.244 align:start position:29% line:-2
アルベドはオブジェクトの
基本となるメッシュで

00:46:17.444 --> 00:46:20.247 align:start position:34% line:-2
表面にテクスチャを
加えるために

00:46:20.347 --> 00:46:22.950 align:start position:32% line:-1
よく使われる属性です

00:46:23.283 --> 00:46:25.085 align:start position:36% line:-1
メッシュの頂点は

00:46:25.185 --> 00:46:28.088 align:start position:36% line:-2
様々な情報を
含んでいましたね

00:46:29.089 --> 00:46:31.158 align:start position:34% line:-1
これはUV座標です

00:46:31.258 --> 00:46:36.030 align:start position:27% line:-2
テクスチャを貼り付ける際に
役立ちます

00:46:36.497 --> 00:46:38.899 align:start position:32% line:-1
テクスチャを加えたら

00:46:38.999 --> 00:46:43.036 align:start position:29% line:-2
この魚における
アルベドの設定は完了です

00:46:43.871 --> 00:46:46.573 align:start position:32% line:-2
今は魚にテクスチャを
加えましたが

00:46:46.673 --> 00:46:51.612 align:start position:27% line:-2
アプリケーションは
不特定の場所で使われるので

00:46:51.712 --> 00:46:55.649 align:start position:30% line:-2
様々な場面に合うように
工夫しましょう

00:46:56.050 --> 00:46:59.553 align:start position:30% line:-2
明るすぎたり
暗すぎたりしないよう―

00:46:59.653 --> 00:47:01.755 align:start position:36% line:-1
気をつけましょう

00:46:59.653 --> 00:47:01.755 align:start position:36% line:-1
気をつけましょう

00:47:01.855 --> 00:47:05.926 align:start position:32% line:-2
様々な状況で
機能させたいですよね

00:47:06.026 --> 00:47:09.563 align:start position:32% line:-2
魚に皮が付きましたが
まだ不完全です

00:47:09.663 --> 00:47:12.032 align:start position:27% line:-1
他のオブジェクトも同様です

00:47:12.132 --> 00:47:15.736 align:start position:36% line:-2
さらに細部を
復活させましょう

00:47:16.236 --> 00:47:18.705 align:start position:32% line:-1
今度使うのは法線です

00:47:19.640 --> 00:47:21.708 align:start position:29% line:-1
CampfiARですが―

00:47:21.809 --> 00:47:25.612 align:start position:30% line:-2
最適化で失われた細部を
復活させましょう

00:47:26.113 --> 00:47:29.817 align:start position:32% line:-2
それには法線マップを
使います

00:47:29.917 --> 00:47:34.288 align:start position:32% line:-2
オブジェクトの部分が
青くなっていますね

00:47:34.588 --> 00:47:38.959 align:start position:32% line:-2
このマップがあれば
ジオメトリを加えずに

00:47:39.059 --> 00:47:41.862 align:start position:36% line:-2
表面の装飾を
復活させられます

00:47:41.962 --> 00:47:46.000 align:start position:32% line:-2
法線マップのおかげで
魚のうろこが復活し

00:47:46.100 --> 00:47:49.803 align:start position:38% line:-2
枝の表面にも
表情が出ました

00:47:49.903 --> 00:47:53.941 align:start position:30% line:-2
統計パネルを見てみると
ポリゴンの数は

00:47:54.041 --> 00:47:56.143 align:start position:36% line:-1
変化していません

00:47:56.477 --> 00:47:58.145 align:start position:36% line:-1
魔法みたいですね

00:47:59.079 --> 00:48:01.849 align:start position:27% line:-1
では法線マップの作り方は？

00:47:59.079 --> 00:48:01.849 align:start position:27% line:-1
では法線マップの作り方は？

00:48:02.082 --> 00:48:06.487 align:start position:30% line:-2
１本の枝を使って
仕組みを見てみましょう

00:48:06.587 --> 00:48:11.158 align:start position:32% line:-2
高密度のメッシュから
法線マップを生成し

00:48:11.258 --> 00:48:15.362 align:start position:30% line:-2
低密度のメッシュに
転写することができます

00:48:15.462 --> 00:48:19.366 align:start position:27% line:-2
これは高密度のメッシュから
生成された―

00:48:19.466 --> 00:48:21.468 align:start position:34% line:-1
枝の法線マップです

00:48:22.035 --> 00:48:23.704 align:start position:36% line:-1
これを適用すると

00:48:23.804 --> 00:48:27.941 align:start position:29% line:-2
細かな装飾が復活したのが
分かります

00:48:28.042 --> 00:48:32.045 align:start position:30% line:-2
高パフォーマンスですが
低ポリゴンのままです

00:48:33.414 --> 00:48:36.016 align:start position:36% line:-2
法線マップは
見た目が変ですね

00:48:36.116 --> 00:48:41.655 align:start position:30% line:-2
この色はベクトル情報を
可視化表現したものです

00:48:41.755 --> 00:48:44.992 align:start position:36% line:-2
光の反射の仕方を
変えるために―

00:48:45.092 --> 00:48:49.496 align:start position:27% line:-2
法線をどれだけ引き離すかを
決めています

00:48:49.596 --> 00:48:51.765 align:start position:29% line:-1
この効果のカギと言えます

00:48:52.633 --> 00:48:56.603 align:start position:34% line:-2
少し複雑なので
さらに掘り下げます

00:48:56.703 --> 00:48:59.773 align:start position:27% line:-1
法線は重要な要素だからです

00:48:59.873 --> 00:49:01.775 align:start position:34% line:-1
少し時間を割いて―

00:48:59.873 --> 00:49:01.775 align:start position:34% line:-1
少し時間を割いて―

00:49:01.875 --> 00:49:05.245 align:start position:34% line:-2
法線の素晴らしさを
お伝えします

00:49:06.080 --> 00:49:09.683 align:start position:38% line:-2
法線ベクトルを
操作することは

00:49:09.783 --> 00:49:14.822 align:start position:30% line:-2
細部を復活させるために
重要な作業の１つです

00:49:14.955 --> 00:49:19.426 align:start position:29% line:-2
法線ベクトルには
例外もあるのでしょうか？

00:49:19.593 --> 00:49:23.597 align:start position:32% line:-2
三角法を覚えていれば
ないと分かりますね

00:49:23.697 --> 00:49:29.203 align:start position:23% line:-2
法線ベクトルはメッシュの表面の
垂直方向に進みます

00:49:29.303 --> 00:49:31.171 align:start position:30% line:-1
なぜ法線は必要なのか？

00:49:32.339 --> 00:49:37.311 align:start position:27% line:-2
オブジェクトを見るには
3Dエンジンに光を当てます

00:49:37.711 --> 00:49:39.880 align:start position:30% line:-2
法線ベクトルのおかげで
3Dエンジンが

00:49:39.980 --> 00:49:43.384 align:start position:36% line:-2
光の反射度合いを
測定できるのです

00:49:43.484 --> 00:49:45.786 align:start position:38% line:-2
現実の光と
動きは似ていて

00:49:45.886 --> 00:49:49.757 align:start position:29% line:-2
リアリティを持たせるには
欠かせない要素です

00:49:50.858 --> 00:49:54.728 align:start position:36% line:-2
法線を修正すると
3Dエンジンに

00:49:54.828 --> 00:49:57.965 align:start position:36% line:-2
表面がより詳細に
できていると

00:49:58.065 --> 00:50:00.601 align:start position:29% line:-1
錯覚させることができます

00:49:58.065 --> 00:50:00.601 align:start position:29% line:-1
錯覚させることができます

00:50:01.168 --> 00:50:03.871 align:start position:36% line:-2
これは一見
球体に見えますが

00:50:03.971 --> 00:50:05.672 align:start position:36% line:-1
実は平らな丸です

00:50:05.973 --> 00:50:09.009 align:start position:36% line:-2
つまりメッシュの
各面からの法線は

00:50:09.109 --> 00:50:13.080 align:start position:32% line:-2
2Dで見てのとおり
同じ方向に進むのです

00:50:13.514 --> 00:50:16.383 align:start position:32% line:-1
光が表面に反応した時

00:50:16.483 --> 00:50:20.587 align:start position:30% line:-2
各面に均等に
反射していることから―

00:50:20.688 --> 00:50:23.757 align:start position:36% line:-2
ポリゴンの違いを
認識できます

00:50:24.858 --> 00:50:26.760 align:start position:34% line:-1
今度は同じモデルに

00:50:26.860 --> 00:50:30.164 align:start position:25% line:-2
スムーズシェーディングなどを
施しました

00:50:30.264 --> 00:50:32.833 align:start position:25% line:-1
法線が 表面の位置によって―

00:50:32.933 --> 00:50:35.536 align:start position:29% line:-1
少しずつ変化していますね

00:50:35.702 --> 00:50:39.940 align:start position:27% line:-2
3Dエンジンが
モデルに反射する光を計算し

00:50:40.040 --> 00:50:44.278 align:start position:27% line:-2
法線の変化を
滑らかで曲線的な表面だと―

00:50:44.378 --> 00:50:45.779 align:start position:38% line:-1
認識したのです

00:50:46.647 --> 00:50:51.151 align:start position:30% line:-2
この２つのポリゴン数は
全く同じです

00:50:51.251 --> 00:50:53.287 align:start position:29% line:-1
しかし法線を修正したので

00:50:53.387 --> 00:50:56.790 align:start position:36% line:-2
ジオメトリを
変化させなくても

00:50:56.890 --> 00:51:01.161 align:start position:32% line:-2
表面の滑らかさや
細部を表現できました

00:50:56.890 --> 00:51:01.161 align:start position:32% line:-2
表面の滑らかさや
細部を表現できました

00:51:02.296 --> 00:51:05.132 align:start position:32% line:-2
法線について
お話ししてきましたが

00:51:05.232 --> 00:51:08.902 align:start position:34% line:-2
次はARシーンに
ツヤを出しましょう

00:51:10.470 --> 00:51:13.474 align:start position:32% line:-2
CampfiARは
洗練されてきましたが

00:51:13.574 --> 00:51:17.244 align:start position:27% line:-1
それでもまだ少し不格好です

00:51:17.344 --> 00:51:22.683 align:start position:30% line:-2
ケトルや魚を輝かせ
光を反射させたいですね

00:51:23.217 --> 00:51:27.254 align:start position:32% line:-2
これはメタルマップを
適用した結果です

00:51:27.421 --> 00:51:30.657 align:start position:36% line:-2
メタルマップは
反射させる部分を

00:51:30.758 --> 00:51:33.560 align:start position:30% line:-1
決定するために使います

00:51:33.827 --> 00:51:37.631 align:start position:30% line:-2
この属性を反映させると
指定した場所に

00:51:37.731 --> 00:51:39.900 align:start position:36% line:-1
ツヤが出ています

00:51:40.000 --> 00:51:42.936 align:start position:32% line:-2
ケトルや魚のうろこが
光っています

00:51:44.905 --> 00:51:46.807 align:start position:30% line:-1
ケトルに注目しましょう

00:51:47.074 --> 00:51:49.276 align:start position:32% line:-1
まずアルベドを適用し

00:51:49.376 --> 00:51:53.180 align:start position:29% line:-2
次にメタルマップを使って
メタル感を出します

00:51:53.747 --> 00:51:55.682 align:start position:29% line:-1
メタルマップを適用すると

00:51:55.782 --> 00:51:59.620 align:start position:32% line:-2
反射の効果を出す面が
指定されます

00:51:59.720 --> 00:52:02.189 align:start position:27% line:-1
マップで白色だった部分です

00:51:59.720 --> 00:52:02.189 align:start position:27% line:-1
マップで白色だった部分です

00:52:02.323 --> 00:52:07.361 align:start position:27% line:-2
オブジェクトが
金属製でなくても構いません

00:52:07.461 --> 00:52:13.333 align:start position:25% line:-2
3Dエンジンに反射させる面を
指定するだけですから

00:52:14.668 --> 00:52:18.939 align:start position:34% line:-2
このケトルのように
金属混じりの表面は

00:52:19.039 --> 00:52:22.476 align:start position:34% line:-2
メタル感のマップを
使うのが一番です

00:52:22.976 --> 00:52:24.578 align:start position:29% line:-1
グレースケールマップにて

00:52:24.678 --> 00:52:28.882 align:start position:30% line:-2
金属性の表面は黒
非金属性の表面は白で―

00:52:28.982 --> 00:52:30.551 align:start position:34% line:-1
度合いが示されます

00:52:30.918 --> 00:52:34.221 align:start position:34% line:-2
これにより
１つの素材を使って

00:52:34.321 --> 00:52:38.559 align:start position:23% line:-2
オブジェクト上の
反射が異なる表面を表現できます

00:52:38.892 --> 00:52:42.162 align:start position:36% line:-2
このケトルは
光りすぎですよね

00:52:42.262 --> 00:52:45.666 align:start position:38% line:-2
こんな見た目は
望んでいません

00:52:45.766 --> 00:52:49.803 align:start position:34% line:-2
そんな時は反射率に
幅を持たせましょう

00:52:49.903 --> 00:52:54.174 align:start position:30% line:-2
全ての表面が滑らかとは
限りませんからね

00:52:54.274 --> 00:52:59.046 align:start position:29% line:-2
それに表面には小さな傷が
あるかもしれません

00:53:00.414 --> 00:53:03.283 align:start position:27% line:-1
次は粗さの属性を設定します

00:53:03.951 --> 00:53:05.886 align:start position:25% line:-1
CampfiARに戻りますが

00:53:05.986 --> 00:53:09.089 align:start position:36% line:-2
反射している面が
滑らかすぎます

00:53:09.189 --> 00:53:11.491 align:start position:29% line:-1
粗さのマップを重ねました

00:53:11.592 --> 00:53:16.463 align:start position:29% line:-2
ケトルと魚の反射の仕方が
変化しています

00:53:16.797 --> 00:53:20.601 align:start position:32% line:-2
魚たちに粗さの属性を
加えたことで

00:53:20.701 --> 00:53:23.370 align:start position:34% line:-1
反射が和らぎました

00:53:23.804 --> 00:53:29.209 align:start position:29% line:-2
粗さとメタルの属性は
一緒に使うといいでしょう

00:53:29.343 --> 00:53:32.546 align:start position:34% line:-2
粗さの属性を
さらに掘り下げます

00:53:34.081 --> 00:53:37.584 align:start position:36% line:-2
表面に細かな傷を
付けることで

00:53:37.684 --> 00:53:41.622 align:start position:29% line:-2
光の反射を
変化させることができます

00:53:41.755 --> 00:53:44.425 align:start position:36% line:-2
粗さの設定を
スムーズにすると

00:53:44.525 --> 00:53:47.728 align:start position:29% line:-1
鏡のように光が反射します

00:53:47.961 --> 00:53:52.132 align:start position:30% line:-2
粗さの程度を上げると
光の反射角が広がります

00:53:52.232 --> 00:53:55.903 align:start position:27% line:-1
このケトルの粗さの設定値を

00:53:56.003 --> 00:53:59.173 align:start position:27% line:-1
ゼロから最大値まで試します

00:54:01.074 --> 00:54:05.979 align:start position:29% line:-2
シュミレーションするには
画期的な方法です

00:54:06.080 --> 00:54:09.783 align:start position:36% line:-2
粗さの設定値を
変えていくことで

00:54:09.883 --> 00:54:13.554 align:start position:27% line:-2
全く反射がないポイントまで
ぼかせます

00:54:14.755 --> 00:54:17.491 align:start position:27% line:-1
メタル加工を施したケトルに

00:54:17.591 --> 00:54:21.695 align:start position:32% line:-2
一定の粗さの値を
適用するのに代わり―

00:54:21.795 --> 00:54:23.797 align:start position:32% line:-1
マップを適用しました

00:54:23.997 --> 00:54:28.435 align:start position:30% line:-2
これにより
光を分散させる表面で―

00:54:28.535 --> 00:54:31.238 align:start position:25% line:-1
その頻度や度合いを指定します

00:54:31.538 --> 00:54:33.807 align:start position:29% line:-1
粗さのマップを適用すると

00:54:33.907 --> 00:54:39.379 align:start position:30% line:-2
ケトルのツヤが最終的に
減ったのが分かります

00:54:40.013 --> 00:54:44.818 align:start position:32% line:-2
メタルと粗さの属性を
合わせることで

00:54:44.918 --> 00:54:47.921 align:start position:34% line:-2
素晴らしい反射面に
なりました

00:54:48.388 --> 00:54:51.892 align:start position:32% line:-2
背景が映り込む加減を
調整すると

00:54:51.992 --> 00:54:55.963 align:start position:32% line:-2
もっとリアルな感じを
演出できます

00:54:56.230 --> 00:54:58.365 align:start position:32% line:-1
粗さのマップを使えば

00:54:58.465 --> 00:55:03.437 align:start position:29% line:-2
表面に細かな傷を付け
細部に変更を加えられます

00:54:58.465 --> 00:55:03.437 align:start position:29% line:-2
表面に細かな傷を付け
細部に変更を加えられます

00:55:03.971 --> 00:55:07.941 align:start position:29% line:-2
さらにご紹介したい属性が
２つあります

00:55:08.042 --> 00:55:09.710 align:start position:34% line:-2
モデルを
洗練させるためには

00:55:09.810 --> 00:55:13.747 align:start position:29% line:-2
パフォーマンスと美しさの
バランスが大切です

00:55:15.015 --> 00:55:19.720 align:start position:25% line:-2
アンビエントオクルージョンは
自分の影を作り出す属性です

00:55:19.953 --> 00:55:24.324 align:start position:30% line:-2
これにより深みを
持たせることができます

00:55:25.259 --> 00:55:31.131 align:start position:27% line:-2
法線マップは失われた細部を
復活させるのに便利な一方で

00:55:31.231 --> 00:55:35.168 align:start position:25% line:-2
アンビエントオクルージョンは
その細部を決定づけます

00:55:35.269 --> 00:55:38.739 align:start position:25% line:-2
アンビエントオクルージョンの
マップです

00:55:38.839 --> 00:55:43.110 align:start position:29% line:-2
繊細な効果なので
見えにくいかもしれません

00:55:43.310 --> 00:55:48.482 align:start position:25% line:-2
丸太の表面とケトルの底の方に
影ができています

00:55:48.782 --> 00:55:52.586 align:start position:36% line:-2
とても影の変化が
分かりにくいので

00:55:52.686 --> 00:55:54.855 align:start position:32% line:-1
丸太を拡大してみます

00:55:56.990 --> 00:56:00.661 align:start position:27% line:-1
これは丸太の法線マップです

00:55:56.990 --> 00:56:00.661 align:start position:27% line:-1
これは丸太の法線マップです

00:56:00.761 --> 00:56:05.666 align:start position:27% line:-2
これでも十分だと思いますが
さらに手を加えます

00:56:06.266 --> 00:56:07.901 align:start position:25% line:-1
アンビエントオクルージョンで

00:56:08.001 --> 00:56:12.740 align:start position:29% line:-2
下の丸太と切り株の周りに
自らの影が

00:56:12.840 --> 00:56:15.409 align:start position:34% line:-1
映し出されています

00:56:15.776 --> 00:56:19.246 align:start position:30% line:-1
この効果を適用すると―

00:56:19.346 --> 00:56:22.783 align:start position:34% line:-2
過剰に動的な光源に
頼ることなく

00:56:22.883 --> 00:56:26.520 align:start position:30% line:-2
影が焼き付けられたのが
分かります

00:56:28.255 --> 00:56:33.126 align:start position:25% line:-2
アンビエントオクルージョンを
ぜひ使ってください

00:56:33.293 --> 00:56:35.028 align:start position:23% line:-1
CampfiARにも使いました

00:56:35.128 --> 00:56:39.099 align:start position:34% line:-2
カメラベースの
後処理効果などで―

00:56:39.199 --> 00:56:41.869 align:start position:29% line:-1
類似したものもありますが

00:56:41.969 --> 00:56:45.639 align:start position:32% line:-2
レンダリングの障害に
なりかねません

00:56:47.174 --> 00:56:48.976 align:start position:34% line:-1
最後になりましたが

00:56:49.710 --> 00:56:52.146 align:start position:38% line:-2
透明度の多用は
控えてください

00:56:52.246 --> 00:56:56.116 align:start position:34% line:-2
どうしても透明度を
使う場合は

00:56:56.216 --> 00:56:59.720 align:start position:30% line:-2
透明と不透明が混在する
表面とは分けてください

00:57:00.888 --> 00:57:03.290 align:start position:29% line:-1
ARに透明度を多用すると

00:57:03.390 --> 00:57:08.295 align:start position:27% line:-2
パフォーマンスが低下すると
言われています

00:57:08.395 --> 00:57:13.434 align:start position:25% line:-2
とりわけ透明な表面が
前後に重なる場合は要注意です

00:57:13.634 --> 00:57:17.804 align:start position:29% line:-2
いわゆるオーバードローは
避けましょう

00:57:19.406 --> 00:57:22.843 align:start position:29% line:-2
皆さんがまだ
飽きてないことを願います

00:57:22.943 --> 00:57:24.945 align:start position:32% line:-1
今までお話ししたのは

00:57:25.045 --> 00:57:30.083 align:start position:27% line:-2
3Dエンジンに光を
反応させる方法についてです

00:57:30.184 --> 00:57:34.988 align:start position:27% line:-2
今度はARを現実世界に
馴染ませる方法を説明します

00:57:35.923 --> 00:57:41.361 align:start position:27% line:-2
ARKitの機能の１つに
光を補正するものがあります

00:57:43.530 --> 00:57:45.699 align:start position:20% line:-1
LightEstimationです

00:57:45.933 --> 00:57:49.136 align:start position:34% line:-2
ではケトルで効果を
確認しましょう

00:57:49.236 --> 00:57:52.272 align:start position:36% line:-2
環境光の強さが
変化していますね

00:57:52.373 --> 00:57:55.709 align:start position:30% line:-2
ARシーンでも環境光を
補正します

00:57:56.376 --> 00:57:59.613 align:start position:29% line:-1
ARKitが映像を分析し

00:57:59.713 --> 00:58:03.584 align:start position:34% line:-2
現実世界の明るさを
推定してくれます

00:57:59.713 --> 00:58:03.584 align:start position:34% line:-2
現実世界の明るさを
推定してくれます

00:58:03.684 --> 00:58:05.686 align:start position:32% line:-1
魔法のような機能です

00:58:05.786 --> 00:58:10.457 align:start position:30% line:-2
現実世界に馴染む光量を
教えてくれるのです

00:58:12.359 --> 00:58:16.230 align:start position:34% line:-2
光の魔法使いの次は
影についてです

00:58:16.797 --> 00:58:19.967 align:start position:30% line:-2
ARで影を表現するのは
非常に大変です

00:58:20.167 --> 00:58:23.237 align:start position:30% line:-2
様々な場面に馴染む影が
必要です

00:58:23.337 --> 00:58:26.874 align:start position:29% line:-2
アプリケーションは
色々な場所で使用されます

00:58:26.974 --> 00:58:30.377 align:start position:36% line:-2
現実にある影と
異なっていれば―

00:58:30.477 --> 00:58:32.546 align:start position:32% line:-1
違和感が残るはずです

00:58:33.947 --> 00:58:37.918 align:start position:34% line:-2
まずは不自然な影を
作り出すために

00:58:38.018 --> 00:58:41.722 align:start position:36% line:-2
斜め上の角度から
光を当てました

00:58:42.122 --> 00:58:45.259 align:start position:29% line:-1
リアル感を出せる影ですが

00:58:45.359 --> 00:58:49.429 align:start position:36% line:-2
今は周囲の環境に
馴染んでいません

00:58:49.530 --> 00:58:52.766 align:start position:38% line:-2
物理の法則を
無視しています

00:58:54.067 --> 00:58:57.504 align:start position:32% line:-2
代わりに魚の上部から
光を当て

00:58:57.604 --> 00:59:03.877 align:start position:27% line:-2
もう少し繊細な影になるよう
光の強さを調整します

00:58:57.604 --> 00:59:03.877 align:start position:27% line:-2
もう少し繊細な影になるよう
光の強さを調整します

00:59:04.144 --> 00:59:09.016 align:start position:30% line:-2
こうすれば様々な場面で
影を演出できます

00:59:09.983 --> 00:59:13.520 align:start position:34% line:-2
ARシーンで
光を当てる以外にも

00:59:13.620 --> 00:59:15.823 align:start position:30% line:-1
影を作る方法があります

00:59:15.923 --> 00:59:19.059 align:start position:30% line:-2
でもコンテンツを
たくさん表示させるなら

00:59:19.159 --> 00:59:21.428 align:start position:36% line:-2
パフォーマンスに
影響が出ます

00:59:21.628 --> 00:59:25.099 align:start position:38% line:-2
時間をかけて
良質な影を作り

00:59:25.199 --> 00:59:29.670 align:start position:29% line:-2
様々な場面に
馴染むようにしてください

00:59:30.871 --> 00:59:32.840 align:start position:34% line:-1
環境マップですが―

00:59:32.973 --> 00:59:36.410 align:start position:32% line:-2
人々を驚かせたいなら
使いましょう

00:59:36.510 --> 00:59:40.314 align:start position:29% line:-2
オブジェクトを
反射させる場合に有効です

00:59:40.748 --> 00:59:44.685 align:start position:32% line:-2
ARとは思えないほど
リアルに仕上がります

00:59:44.818 --> 00:59:47.588 align:start position:25% line:-1
それを簡単に実現するために―

00:59:47.688 --> 00:59:52.926 align:start position:12% line:-2
iOS 12とARKit 2.0の新機能の
使い方を紹介します

00:59:53.026 --> 00:59:56.497 align:start position:34% line:-2
自動で環境マップを
生成してくれます

00:59:57.865 --> 00:59:59.333 align:start position:32% line:-1
ケトルを見てください

00:59:59.433 --> 01:00:03.470 align:start position:30% line:-2
従来のマップでは
少し赤みを帯びています

00:59:59.433 --> 01:00:03.470 align:start position:30% line:-2
従来のマップでは
少し赤みを帯びています

01:00:04.304 --> 01:00:06.907 align:start position:32% line:-1
新機能を有効にすると

01:00:07.007 --> 01:00:12.446 align:start position:29% line:-2
ケトルに地面や周囲の色が
反射しています

01:00:12.546 --> 01:00:16.884 align:start position:32% line:-2
ケトルを置いた草の
緑色すら映っています

01:00:17.084 --> 01:00:22.022 align:start position:32% line:-2
同化させるのに役立つ
素晴らしい機能です

01:00:22.122 --> 01:00:27.161 align:start position:29% line:-2
粗さの加工を慎重に行えば
よりリアルになります

01:00:28.762 --> 01:00:33.200 align:start position:30% line:-2
なぜ新機能が
画期的なのでしょうか？

01:00:33.367 --> 01:00:35.002 align:start position:36% line:-1
通常 マップは―

01:00:35.102 --> 01:00:40.474 align:start position:29% line:-2
金属面に周囲の色を
反射させるために使います

01:00:41.008 --> 01:00:44.545 align:start position:30% line:-2
立方体型の環境マップを
ご覧ください

01:00:45.179 --> 01:00:47.748 align:start position:29% line:-1
これまでのARKitでは

01:00:47.848 --> 01:00:51.819 align:start position:34% line:-2
様々な場所に
馴染むイメージを―

01:00:51.919 --> 01:00:54.488 align:start position:30% line:-2
皆さんが用意する必要が
ありました

01:00:54.588 --> 01:00:58.092 align:start position:21% line:-1
しかしARKit 2.0があれば

01:00:58.192 --> 01:01:01.195 align:start position:34% line:-2
馴染むか悩む必要は
ありません

01:00:58.192 --> 01:01:01.195 align:start position:34% line:-2
馴染むか悩む必要は
ありません

01:01:02.996 --> 01:01:07.367 align:start position:20% line:-2
ARKit 2.0の新機能について
知りたければ

01:01:07.468 --> 01:01:11.405 align:start position:11% line:-2
What's New in ARKit 2を
チェックしてください

01:01:12.473 --> 01:01:18.145 align:start position:29% line:-2
ではCampfiARに
全ての効果を加えましょう

01:01:19.379 --> 01:01:24.885 align:start position:25% line:-2
アニメーション系エフェクトと
今日お話しした技術の力で

01:01:24.985 --> 01:01:27.421 align:start position:23% line:-1
CampfiARは完成しました

01:01:27.588 --> 01:01:31.959 align:start position:29% line:-2
今後 外出したくなったら
その気持ちを抑えて―

01:01:32.059 --> 01:01:37.931 align:start position:18% line:-2
安全な屋内で CampfiARによる
アウトドア気分を楽しみます

01:01:38.031 --> 01:01:40.234 align:start position:30% line:-1
虫刺されとはお別れです

01:01:42.069 --> 01:01:44.137 align:start position:32% line:-1
様々な話をしましたが

01:01:44.238 --> 01:01:47.708 align:start position:34% line:-2
覚えておいてほしい
大切な点を

01:01:47.841 --> 01:01:49.376 align:start position:38% line:-1
おさらいします

01:01:49.710 --> 01:01:53.614 align:start position:27% line:-2
アプリケーションは
様々な場所で使用されるので

01:01:53.714 --> 01:01:58.152 align:start position:29% line:-2
どの環境にも馴染むように
作りましょう

01:01:58.585 --> 01:02:03.557 align:start position:29% line:-2
AR体験の種類を決めたら
レンダリング容量に従い

01:01:58.585 --> 01:02:03.557 align:start position:29% line:-2
AR体験の種類を決めたら
レンダリング容量に従い

01:02:03.891 --> 01:02:08.228 align:start position:27% line:-2
バッテリー消費を減らし
パフォーマンスを保つために

01:02:08.328 --> 01:02:10.097 align:start position:34% line:-1
最適化してください

01:02:10.464 --> 01:02:13.267 align:start position:30% line:-2
様々なマテリアル属性を
使用しましょう

01:02:13.367 --> 01:02:17.971 align:start position:25% line:-2
ARKitに搭載された機能も
駆使すれば―

01:02:18.072 --> 01:02:20.340 align:start position:32% line:-2
コンテンツの見た目が
改善します

01:02:21.508 --> 01:02:27.114 align:start position:27% line:-2
参考のために使用した属性を
一覧にまとめました

01:02:27.881 --> 01:02:30.484 align:start position:20% line:-2
追加情報はデベロッパWebサイトを
ご覧ください

01:02:30.918 --> 01:02:31.852 align:start position:41% line:-1
ありがとう

01:02:31.952 --> 01:02:36.056 align:start position:43% line:-1
(拍手)
