WEBVTT

00:00:07.140 --> 00:00:16.717 align:start position:43% line:-1
（音楽）

00:00:18.252 --> 00:00:23.690 align:start position:21% line:-2
本日のセッションでは
Quick Lookを説明します

00:00:24.124 --> 00:00:30.330 align:start position:27% line:-2
私 ラファエルとマキシムが
ガイド役を務めます

00:00:33.100 --> 00:00:37.271 align:start position:25% line:-2
まず Quick Lookの
概要から始め―

00:00:37.838 --> 00:00:43.744 align:start position:0% line:-2
Quick Look Preview Controllerの
アプリケーションへの導入方法

00:00:44.444 --> 00:00:48.749 align:start position:11% line:-2
更に Quick Look Previewの
カスタム化と

00:00:49.816 --> 00:00:53.453 align:start position:27% line:-2
カスタムサムネールについて
説明します

00:00:55.522 --> 00:00:58.125 align:start position:29% line:-1
では概要から始めましょう

00:01:00.460 --> 00:01:06.400 align:start position:20% line:-2
Quick Lookで ファイルが
簡単にプレビューできます

00:01:07.000 --> 00:01:13.874 align:start position:27% line:-2
マルチコア機能を提供する
iOSフレームワークにより

00:01:14.975 --> 00:01:19.947 align:start position:27% line:-2
様々な形式のファイルを
プレビュー表示できるのです

00:01:21.215 --> 00:01:26.019 align:start position:27% line:-2
プレビューのカスタマイズも
可能なうえに

00:01:27.321 --> 00:01:32.659 align:start position:29% line:-2
カスタムファイルの
サムネールも作成できます

00:01:35.863 --> 00:01:40.100 align:start position:27% line:-2
様々なアプリケーションにも
対応可能です

00:01:41.301 --> 00:01:46.473 align:start position:32% line:-2
たとえばクラウド上の
ファイルの内容

00:01:51.011 --> 00:01:54.781 align:start position:32% line:-2
またはメールやメモに
添付されたファイル

00:02:01.288 --> 00:02:05.926 align:start position:29% line:-2
メッセージで送った
写真や動画も このとおり

00:02:11.765 --> 00:02:13.567 align:start position:36% line:-1
本セッションは―

00:02:13.667 --> 00:02:17.804 align:start position:29% line:-2
共通機能を実装せず
アプリケーションによる―

00:02:17.905 --> 00:02:24.011 align:start position:27% line:-2
簡単なファイルの表示方法を
知りたい方にお薦めです

00:02:25.045 --> 00:02:30.117 align:start position:27% line:-2
iOSでサポートしていない
カスタムファイル形式も

00:02:30.217 --> 00:02:35.956 align:start position:29% line:-2
サムネイルやプレビューが
正しく表示されるのか？

00:02:36.056 --> 00:02:38.592 align:start position:29% line:-1
このあと この点も含め―

00:02:39.826 --> 00:02:46.967 align:start position:27% line:-2
iOSが初めての方にも
分かりやすく ご説明します

00:02:49.336 --> 00:02:54.508 align:start position:30% line:-2
ところで 昨年の講演は
ご覧になりましたか？

00:02:54.608 --> 00:02:57.611 align:start position:5% line:-2
“Building Great Document-
based Apps in iOS”では

00:02:57.711 --> 00:03:01.448 align:start position:12% line:-2
UIDocumentBrowserView
Controllerを紹介しました

00:02:57.711 --> 00:03:01.448 align:start position:12% line:-2
UIDocumentBrowserView
Controllerを紹介しました

00:03:01.548 --> 00:03:06.486 align:start position:23% line:-2
Quick Lookについても
取り上げています

00:03:07.821 --> 00:03:11.525 align:start position:32% line:-2
今年は文書ブラウザの
セッションもあり

00:03:11.625 --> 00:03:17.064 align:start position:27% line:-2
iOS上でのファイル操作に
興味がある方にお薦めです

00:03:21.201 --> 00:03:23.770 align:start position:21% line:-1
Quick Lookの登場は古く

00:03:23.871 --> 00:03:26.840 align:start position:23% line:-1
iOS 4 SDKと同時期です

00:03:28.041 --> 00:03:31.745 align:start position:14% line:-2
主要なクラスは
QLPreviewControllerで

00:03:31.912 --> 00:03:34.781 align:start position:34% line:-2
文書のプレビューを
制御します

00:03:36.250 --> 00:03:39.620 align:start position:30% line:-2
データソースや
デリゲートのパターンは

00:03:39.786 --> 00:03:42.956 align:start position:23% line:-1
UIKitでも おなじみですね

00:03:44.691 --> 00:03:50.531 align:start position:29% line:-2
そのAPIで
滑らかなズームも可能です

00:03:54.601 --> 00:03:56.436 align:start position:21% line:-1
Quick Lookの意義とは？

00:03:56.603 --> 00:04:02.676 align:start position:27% line:-2
ファイルやメールで同様の
ユースケースを経験済みなら

00:03:56.603 --> 00:04:02.676 align:start position:27% line:-2
ファイルやメールで同様の
ユースケースを経験済みなら

00:04:03.010 --> 00:04:05.145 align:start position:32% line:-1
お分かりだと思います

00:04:05.979 --> 00:04:08.849 align:start position:30% line:-1
非常に便利なツールです

00:04:10.250 --> 00:04:12.886 align:start position:34% line:-2
一般的な
ファイル形式に準じ

00:04:13.420 --> 00:04:19.892 align:start position:25% line:-2
iOS純正アプリケーションと
同様の使い心地を提供

00:04:21.628 --> 00:04:25.165 align:start position:30% line:-2
どのデバイスでも
高パフォーマンスを見せ

00:04:25.265 --> 00:04:28.535 align:start position:27% line:-2
アニメーションや人の動きも
滑らかです

00:04:30.070 --> 00:04:35.242 align:start position:30% line:-2
発信元が不確かな場合も
心配は要りません

00:04:35.342 --> 00:04:40.080 align:start position:27% line:-2
Quick Lookが
アプリケーションを守ります

00:04:44.151 --> 00:04:46.720 align:start position:29% line:-1
対応するファイル様式です

00:04:47.321 --> 00:04:50.324 align:start position:34% line:-2
汎用性の高いことが
分かります

00:04:50.424 --> 00:04:54.761 align:start position:30% line:-2
画像 音声 ビデオなど
メディアファイルや―

00:04:54.862 --> 00:05:00.033 align:start position:25% line:-2
PDFやOffice文書にも
対応します

00:04:54.862 --> 00:05:00.033 align:start position:25% line:-2
PDFやOffice文書にも
対応します

00:05:00.634 --> 00:05:05.606 align:start position:32% line:-2
ZIPアーカイブ内の
ファイルでも

00:05:05.706 --> 00:05:09.977 align:start position:36% line:-2
プレビューや
シェアができます

00:05:11.445 --> 00:05:15.482 align:start position:32% line:-2
カスタムファイルにも
対応しています

00:05:16.083 --> 00:05:21.455 align:start position:29% line:-2
この新しい機能拡張は
昨年 発表したばかりです

00:05:21.889 --> 00:05:24.625 align:start position:12% line:-1
Preview Extensionを使えば

00:05:24.725 --> 00:05:29.296 align:start position:29% line:-2
カスタムファイルの
プレビューも作成できます

00:05:29.496 --> 00:05:32.432 align:start position:29% line:-1
詳細は のちほど話します

00:05:33.467 --> 00:05:35.536 align:start position:25% line:-1
今年発表するiOS 12には

00:05:35.636 --> 00:05:40.307 align:start position:29% line:-2
AR用の新フォーマット
USDZが追加されました

00:05:40.407 --> 00:05:42.743 align:start position:32% line:-1
わずか数行のコードで

00:05:42.843 --> 00:05:47.648 align:start position:29% line:-2
アプリケーションでの
AR体験が可能となります

00:05:48.682 --> 00:05:51.285 align:start position:29% line:-2
次は
ユーザーエクスペリエンス

00:05:51.518 --> 00:05:53.820 align:start position:21% line:-1
Quick Lookはモバイルで

00:05:53.921 --> 00:05:59.226 align:start position:32% line:-2
ファイル形式ごとに
最適な表示を行います

00:06:00.427 --> 00:06:06.266 align:start position:32% line:-2
プレビュー中の画像を
拡大縮小でき―

00:06:07.000 --> 00:06:10.871 align:start position:34% line:-2
下にスワイプすれば
終了できます

00:06:11.939 --> 00:06:17.678 align:start position:29% line:-2
サイドバーのサムネールで
PDFの閲覧も簡単

00:06:18.278 --> 00:06:23.417 align:start position:27% line:-2
スプレッドシートでは
ページの切り替えも可能です

00:06:24.351 --> 00:06:29.623 align:start position:29% line:-2
スクラバー機能でメディア
ファイル内を移動できます

00:06:29.723 --> 00:06:31.091 align:start position:36% line:-1
すごいでしょう？

00:06:32.526 --> 00:06:38.599 align:start position:29% line:-2
おなじみのジェスチャーで
簡単に操作できます

00:06:43.303 --> 00:06:46.507 align:start position:36% line:-2
一般的な使い方を
挙げてみます

00:06:47.174 --> 00:06:51.578 align:start position:38% line:-2
たとえば写真を
拡大させたり

00:06:52.246 --> 00:06:57.084 align:start position:29% line:-2
フリックして写真を
次々と見ることができます

00:06:57.784 --> 00:07:03.957 align:start position:27% line:-2
下位のフレームワークを
使わずに音声や動画を再生し

00:06:57.784 --> 00:07:03.957 align:start position:27% line:-2
下位のフレームワークを
使わずに音声や動画を再生し

00:07:05.792 --> 00:07:12.065 align:start position:27% line:-2
ユーザ同意書のPDFも
スクロールやズームできます

00:07:12.833 --> 00:07:14.468 align:start position:38% line:-1
活用しましょう

00:07:16.837 --> 00:07:20.841 align:start position:30% line:-2
しかし 備わっていない
機能もあります

00:07:21.875 --> 00:07:26.246 align:start position:32% line:-2
プレビュー専門で
編集機能がありません

00:07:26.680 --> 00:07:28.815 align:start position:39% line:-1
画像の編集や

00:07:28.916 --> 00:07:33.320 align:start position:27% line:-2
PDF文書の管理や
動画のトリミングが必要なら

00:07:33.453 --> 00:07:35.689 align:start position:29% line:-1
別の方法をお試しください

00:07:38.792 --> 00:07:42.963 align:start position:30% line:-2
また 動画の高度な
再生方法が必要であれば

00:07:43.230 --> 00:07:48.302 align:start position:29% line:-2
AVPlayerの使用を
推奨します

00:07:49.069 --> 00:07:55.442 align:start position:25% line:-2
Quick Lookは画像を
フルスクリーン表示するため

00:07:55.576 --> 00:08:00.714 align:start position:32% line:-2
他のビューと合わせて
レイアウトできません

00:07:55.576 --> 00:08:00.714 align:start position:32% line:-2
他のビューと合わせて
レイアウトできません

00:08:00.814 --> 00:08:06.453 align:start position:14% line:-2
UIImageView AVPlayer
WKWebViewなどを使いましょう

00:08:08.755 --> 00:08:14.194 align:start position:30% line:-2
更にビュー階層は
カスタマイズできません

00:08:14.461 --> 00:08:19.366 align:start position:27% line:-2
プレビューの上位に
ビューは追加できないのです

00:08:19.666 --> 00:08:21.435 align:start position:41% line:-1
適応外です

00:08:26.106 --> 00:08:32.679 align:start position:29% line:-2
それでは次に APIの
使い方をご説明しましょう

00:08:37.217 --> 00:08:39.486 align:start position:34% line:-1
文書を表示するには

00:08:39.620 --> 00:08:43.756 align:start position:14% line:-2
QLPreviewControllerの
インスタンスを作成します

00:08:43.890 --> 00:08:46.560 align:start position:20% line:-2
UIViewControllerと
基本は同じです

00:08:48.028 --> 00:08:52.466 align:start position:34% line:-2
次にプレビューする
文書を指定するため

00:08:52.599 --> 00:08:55.169 align:start position:29% line:-1
データソースを指定します

00:08:55.669 --> 00:09:00.908 align:start position:27% line:-2
データソースはプロトコルに
準拠したオブジェクトです

00:08:55.669 --> 00:09:00.908 align:start position:27% line:-2
データソースはプロトコルに
準拠したオブジェクトです

00:09:01.141 --> 00:09:03.410 align:start position:39% line:-1
追って確認を

00:09:05.479 --> 00:09:10.250 align:start position:18% line:-2
最後にViewControllerを
表示します

00:09:14.655 --> 00:09:17.825 align:start position:30% line:-1
このように表示されます

00:09:18.325 --> 00:09:23.330 align:start position:16% line:-2
QLPreviewController
プロトコルに準拠するのに

00:09:23.964 --> 00:09:26.633 align:start position:32% line:-1
必要な手順は２つです

00:09:26.767 --> 00:09:32.372 align:start position:30% line:-2
まず プレビューしたい
項目の個数を返します

00:09:32.906 --> 00:09:39.346 align:start position:27% line:-2
項目が２つ以上ある場合
スワイプ機能なども使えます

00:09:41.081 --> 00:09:45.552 align:start position:34% line:-2
次に 先ほど返した
項目の個数に応じて

00:09:45.686 --> 00:09:48.689 align:start position:25% line:-2
QLPreviewItemが
求められます

00:09:50.691 --> 00:09:52.993 align:start position:23% line:-1
QLPreviewItemは―

00:09:53.393 --> 00:09:57.164 align:start position:36% line:-2
文書を抽象化する
プロトコルです

00:09:57.431 --> 00:10:03.737 align:start position:34% line:-2
文書の保存先の
URLを指定します

00:09:57.431 --> 00:10:03.737 align:start position:34% line:-2
文書の保存先の
URLを指定します

00:10:04.138 --> 00:10:09.009 align:start position:30% line:-2
ナビゲーションバーの
タイトルも指定できます

00:10:10.577 --> 00:10:16.116 align:start position:9% line:-2
文書を表すクラスは QLPreviewItem
プロトコルに準拠すべきです

00:10:16.517 --> 00:10:22.289 align:start position:25% line:-2
NSURLはこのプロトコルに
既に準拠しています

00:10:22.556 --> 00:10:27.427 align:start position:29% line:-2
タイトルのカスタマイズが
必要なければ

00:10:27.528 --> 00:10:31.398 align:start position:29% line:-2
NSURLインスタンスを
返すだけで使えます

00:10:33.300 --> 00:10:35.335 align:start position:34% line:-1
例を見てみましょう

00:10:36.370 --> 00:10:40.007 align:start position:23% line:-2
この例では
ViewControllerが

00:10:40.107 --> 00:10:43.544 align:start position:14% line:-2
QLPreviewControllerの
データソースです

00:10:44.478 --> 00:10:48.582 align:start position:27% line:-2
“extension”内の
データソースに準拠します

00:10:48.715 --> 00:10:51.919 align:start position:38% line:-2
実行する手順は
２つだけです

00:10:53.253 --> 00:10:57.758 align:start position:27% line:-2
URLの配列をモデルとして
使用します

00:10:57.925 --> 00:11:04.565 align:start position:20% line:-2
contorollerメソッド中の
URLの個数を返します

00:10:57.925 --> 00:11:04.565 align:start position:20% line:-2
contorollerメソッド中の
URLの個数を返します

00:11:05.299 --> 00:11:09.336 align:start position:30% line:-2
そして インデックスで
参照されている―

00:11:09.469 --> 00:11:14.308 align:start position:30% line:-1
個々のURLも返します

00:11:18.745 --> 00:11:23.684 align:start position:29% line:-2
これでプレビューする
ファイルの設定は完了です

00:11:23.817 --> 00:11:26.753 align:start position:23% line:-2
ViewControllerを
表示させます

00:11:27.354 --> 00:11:29.189 align:start position:38% line:-1
その方法は２つ

00:11:29.523 --> 00:11:34.261 align:start position:30% line:-2
現在のコンテキスト上に
モーダル表示をするか―

00:11:34.695 --> 00:11:39.099 align:start position:9% line:-2
UINavigationControllerに
プッシュします

00:11:39.700 --> 00:11:44.905 align:start position:29% line:-2
状況に応じて適した方法を
選択してください

00:11:45.272 --> 00:11:50.110 align:start position:23% line:-2
presentを呼び出すことで
モーダル表示できます

00:11:51.912 --> 00:11:55.315 align:start position:36% line:-2
結果はこのように
表示されます

00:11:57.117 --> 00:12:02.723 align:start position:9% line:-2
UINavigationControllerに
プッシュする場合は

00:11:57.117 --> 00:12:02.723 align:start position:9% line:-2
UINavigationControllerに
プッシュする場合は

00:12:02.823 --> 00:12:05.025 align:start position:16% line:-2
pushViewControllerを
使います

00:12:08.395 --> 00:12:09.897 align:start position:34% line:-1
このようになります

00:12:15.569 --> 00:12:20.274 align:start position:30% line:-2
このクラスのメソッドを
いくつか お見せします

00:12:20.974 --> 00:12:26.380 align:start position:29% line:-2
まず プレビューできる
文書であるか知りたい時は

00:12:26.647 --> 00:12:29.516 align:start position:18% line:-2
canPreviewItemクラスを
使用します

00:12:30.350 --> 00:12:35.756 align:start position:29% line:-2
文書がサポートされている
ファイル形式か

00:12:35.856 --> 00:12:39.993 align:start position:29% line:-2
プレビュー機能に対応なら
trueが返されます

00:12:42.129 --> 00:12:44.665 align:start position:38% line:-2
データソースは
説明済みです

00:12:46.800 --> 00:12:52.005 align:start position:25% line:-2
reloadDataで文書の
リストを再び読み込みます

00:12:52.239 --> 00:12:56.944 align:start position:18% line:-2
PreviewControllerの
表示中に変更があれば

00:12:57.110 --> 00:12:59.713 align:start position:29% line:-1
このメソッドを実行します

00:13:01.748 --> 00:13:07.521 align:start position:27% line:-2
プレビューしている文書の
インデックスを取得する時は

00:13:07.921 --> 00:13:11.725 align:start position:32% line:-2
スワイプ機能のことを
思い出してください

00:13:11.925 --> 00:13:14.828 align:start position:9% line:-2
currentPreviewItemIndex
変数を使います

00:13:15.596 --> 00:13:18.098 align:start position:32% line:-2
ゲッターとセッターの
両方として使います

00:13:18.465 --> 00:13:23.070 align:start position:21% line:-2
Quick Lookで表示したい
項目の値を―

00:13:23.670 --> 00:13:25.606 align:start position:29% line:-1
インデックスに指定します

00:13:28.342 --> 00:13:32.746 align:start position:27% line:-2
最後に デリゲートについて
説明します

00:13:33.146 --> 00:13:36.850 align:start position:38% line:-2
プロトコルを
見てみましょう

00:13:40.921 --> 00:13:47.060 align:start position:29% line:-2
Quick Lookの
詳細な動作が制御できます

00:13:47.728 --> 00:13:50.931 align:start position:34% line:-2
表示イベントにも
反応可能になります

00:13:51.298 --> 00:13:56.003 align:start position:29% line:-2
ちなみにデリゲート機能は
オプションです

00:13:56.236 --> 00:14:00.974 align:start position:27% line:-2
必要がなければ
そのままにしておきましょう

00:13:56.236 --> 00:14:00.974 align:start position:27% line:-2
必要がなければ
そのままにしておきましょう

00:14:02.676 --> 00:14:05.946 align:start position:32% line:-2
プロトコルは
メソッドの集合体です

00:14:06.313 --> 00:14:11.985 align:start position:21% line:-2
この２つのメソッドは
Quick Lookの終了直前と

00:14:12.519 --> 00:14:15.122 align:start position:32% line:-1
終了直後に反応します

00:14:17.991 --> 00:14:23.564 align:start position:18% line:-2
ViewControllerの更新に
使うことができます

00:14:27.167 --> 00:14:32.206 align:start position:18% line:-2
PreviewControllerは
項目メソッドのURLを開き

00:14:32.406 --> 00:14:37.578 align:start position:30% line:-2
文章に含まれるリンクの
フォローを防ぎます

00:14:38.145 --> 00:14:42.749 align:start position:25% line:-2
これにより ユーザが
URLや電話番号をタップして

00:14:42.850 --> 00:14:47.154 align:start position:32% line:-2
アプリケーションから
離れることも防げます

00:14:49.523 --> 00:14:54.728 align:start position:2% line:-2
QLPreviewControllerDelegate
プロトコルでは

00:14:54.828 --> 00:15:01.034 align:start position:30% line:-2
表示と非表示のズームを
滑らかに見せられます

00:14:54.828 --> 00:15:01.034 align:start position:30% line:-2
表示と非表示のズームを
滑らかに見せられます

00:15:01.735 --> 00:15:06.306 align:start position:30% line:-2
メソッドを使って
タップしたサムネールが

00:15:06.507 --> 00:15:10.511 align:start position:32% line:-2
拡大表示されるように
設定できます

00:15:13.046 --> 00:15:18.719 align:start position:30% line:-2
メールに添付された
写真をタップするだけで

00:15:20.053 --> 00:15:22.523 align:start position:29% line:-1
フルスクリーン表示します

00:15:25.425 --> 00:15:31.164 align:start position:29% line:-2
画像のクロスフェードも
非常に簡単に設定できます

00:15:32.299 --> 00:15:35.903 align:start position:30% line:-2
これらの方法で
デリゲートを実装すると

00:15:36.103 --> 00:15:40.507 align:start position:30% line:-2
拡大縮小に必要な情報を
要求されます

00:15:41.041 --> 00:15:46.713 align:start position:27% line:-2
基本的に表示や非表示の時の
アニメーションの―

00:15:46.880 --> 00:15:49.650 align:start position:34% line:-1
矩形領域の情報です

00:15:51.151 --> 00:15:56.356 align:start position:29% line:-2
この際 サムネールの
フレームと画像を与えるか

00:15:58.125 --> 00:16:01.195 align:start position:30% line:-2
または
より好ましい方法として

00:15:58.125 --> 00:16:01.195 align:start position:30% line:-2
または
より好ましい方法として

00:16:01.461 --> 00:16:06.366 align:start position:29% line:-2
サムネールをビューとして
返すことができます

00:16:06.900 --> 00:16:13.173 align:start position:27% line:-2
この方法なら座標を
気にする必要がなく簡単です

00:16:17.144 --> 00:16:18.846 align:start position:34% line:-1
このようになります

00:16:20.013 --> 00:16:24.318 align:start position:29% line:-2
フルスクリーンへの移行を
ご覧ください

00:16:26.119 --> 00:16:31.425 align:start position:30% line:-2
それではこれから
デモをお見せしましょう

00:16:33.160 --> 00:16:37.164 align:start position:34% line:-2
これはiOSの
プロジェクトですが

00:16:37.264 --> 00:16:42.369 align:start position:29% line:-2
口で説明するより 実際に
デモを見てみましょう

00:16:50.477 --> 00:16:54.348 align:start position:14% line:-2
Wildlife Explorerという
アプリケーションです

00:16:54.748 --> 00:16:59.920 align:start position:29% line:-2
グリッド表示された写真は
それぞれが

00:17:00.020 --> 00:17:03.490 align:start position:29% line:-1
内容を示すサムネールです

00:17:04.258 --> 00:17:09.695 align:start position:27% line:-2
例えばゾウの写真はタップで
フルスクリーン表示され

00:17:10.564 --> 00:17:16.136 align:start position:25% line:-2
キリンの写真の場合は
PDFの説明文が表示されます

00:17:17.204 --> 00:17:20.741 align:start position:34% line:-2
今は タップが
働かない状態なので

00:17:21.208 --> 00:17:24.278 align:start position:30% line:-1
これから修正しましょう

00:17:28.348 --> 00:17:31.685 align:start position:30% line:-2
このアプリケーションの
構造はシンプルです

00:17:32.586 --> 00:17:36.723 align:start position:5% line:-2
CollectionViewControllerを
使ってグリッド表示します

00:17:38.892 --> 00:17:45.532 align:start position:27% line:-2
初期化にあたり
アプリケーションに含める―

00:17:45.632 --> 00:17:48.101 align:start position:32% line:-2
文書のURLリストを
取得します

00:17:51.205 --> 00:17:55.609 align:start position:16% line:-2
DocumentDataSourceを
このリストで初期化します

00:17:56.643 --> 00:17:59.546 align:start position:4% line:-2
UICollectionViewDataSource
プロトコルでは

00:17:59.646 --> 00:18:04.451 align:start position:30% line:-2
このオブジェクトが
モデルとして機能します

00:17:59.646 --> 00:18:04.451 align:start position:30% line:-2
このオブジェクトが
モデルとして機能します

00:18:12.192 --> 00:18:15.963 align:start position:38% line:-2
ここで文書の
個数を返します

00:18:16.063 --> 00:18:19.032 align:start position:27% line:-1
文書ごとにセルを作成します

00:18:19.132 --> 00:18:22.469 align:start position:32% line:-2
セルの画像が
サムネールとなります

00:18:24.204 --> 00:18:27.541 align:start position:34% line:-2
アプリケーションの
核心部分です

00:18:28.308 --> 00:18:30.844 align:start position:29% line:-1
それでは セルのタップで

00:18:31.245 --> 00:18:35.349 align:start position:20% line:-2
Quick Lookに正しい文書を
表示させる方法です

00:18:36.250 --> 00:18:41.722 align:start position:27% line:-2
呼び出すメソッドについては
既に説明したとおりです

00:18:46.793 --> 00:18:52.466 align:start position:14% line:-2
QLPreviewControllerを
新たに作り 設定します

00:19:03.410 --> 00:19:07.881 align:start position:32% line:-2
これにデータソースを
設定してから

00:19:07.981 --> 00:19:13.954 align:start position:30% line:-2
プレビューが正しく
表示されるか確認します

00:19:14.054 --> 00:19:17.057 align:start position:7% line:-2
CurrentPreviewItemIndexを
使います

00:19:20.094 --> 00:19:24.464 align:start position:30% line:-2
新しいコードに
エラーが表示されました

00:19:24.598 --> 00:19:29.736 align:start position:14% line:-2
QLPreviewControllerが
定義されていないため

00:19:29.837 --> 00:19:34.107 align:start position:25% line:-2
まず Quick Lookの
インポートが必要です

00:19:43.817 --> 00:19:48.789 align:start position:30% line:-2
今度は データソースで
エラーが表示されました

00:19:49.156 --> 00:19:52.893 align:start position:30% line:-1
設定したデータソースを

00:19:52.993 --> 00:19:59.366 align:start position:16% line:-2
QLPreviewController
プロトコルに準拠させます

00:20:00.634 --> 00:20:05.305 align:start position:16% line:-2
DocumentDataSourceの
実装に切り替えます

00:20:10.210 --> 00:20:16.683 align:start position:29% line:-2
このオブジェクトには
まだURLしかありません

00:20:17.317 --> 00:20:21.021 align:start position:9% line:-2
QLPreviewControllerData
Sourceプロトコルを

00:20:21.121 --> 00:20:24.291 align:start position:32% line:-2
実装するプロトコルの
リストに加えます

00:20:32.766 --> 00:20:35.469 align:start position:34% line:-2
次は 不足の
メソッドの実装です

00:20:44.611 --> 00:20:48.081 align:start position:23% line:-2
CollectionViewと
同じような方法で

00:20:48.182 --> 00:20:51.685 align:start position:16% line:-2
DocumentDataSourceを
使います

00:20:52.586 --> 00:20:54.588 align:start position:14% line:-2
numberOfPreviewItems
メソッドで

00:20:54.688 --> 00:20:59.693 align:start position:25% line:-2
フォルダー内のURLの個数を
返します

00:21:01.895 --> 00:21:05.799 align:start position:20% line:-2
個々のQLPreviewItemを
要求されるので

00:21:05.899 --> 00:21:09.469 align:start position:29% line:-2
インデックスで参照される
正しいURLを返します

00:21:12.539 --> 00:21:18.846 align:start position:11% line:-2
これで PreviewControllerが
実行できるので

00:21:19.479 --> 00:21:24.751 align:start position:12% line:-2
didTapCollectionCellで
メソッドの呼び出しを追加

00:21:33.460 --> 00:21:35.662 align:start position:36% line:-1
結果を見ましょう

00:21:45.906 --> 00:21:49.743 align:start position:36% line:-2
グリッド表示した
写真をタップして

00:21:49.843 --> 00:21:54.014 align:start position:25% line:-2
正しい文書を
フルスクリーン表示するか確認

00:21:55.382 --> 00:22:00.454 align:start position:27% line:-2
写真だけでなくPDF文書も
普段のジェスチャで

00:21:55.382 --> 00:22:00.454 align:start position:27% line:-2
写真だけでなくPDF文書も
普段のジェスチャで

00:22:00.554 --> 00:22:03.190 align:start position:27% line:-1
フルスクリーン表示できます

00:22:04.157 --> 00:22:08.128 align:start position:36% line:-2
２本の指で画面を
拡大縮小したり

00:22:08.629 --> 00:22:11.965 align:start position:36% line:-2
テキストの選択や
コピーもできます

00:22:14.101 --> 00:22:19.706 align:start position:27% line:-2
終了後 ピンチすれば
元のグリッド表示に戻ります

00:22:23.043 --> 00:22:27.448 align:start position:36% line:-2
ここではモーダル
表示していますが

00:22:27.981 --> 00:22:32.419 align:start position:30% line:-2
プッシュスタイルで
表示することもできます

00:22:33.420 --> 00:22:37.524 align:start position:23% line:-2
その場合はnavigation
Controllerで

00:22:37.624 --> 00:22:41.662 align:start position:18% line:-2
PreviewControllerを
プッシュして表示させます

00:22:52.105 --> 00:22:53.273 align:start position:41% line:-1
見てみます

00:23:05.085 --> 00:23:08.388 align:start position:29% line:-1
画像の動きが変わりました

00:23:08.489 --> 00:23:11.758 align:start position:30% line:-2
モーダル表示同様に
うまく表示されています

00:23:16.797 --> 00:23:18.365 align:start position:41% line:-1
順調ですね

00:23:18.465 --> 00:23:22.870 align:start position:30% line:-2
最後は
デリゲートについてです

00:23:22.970 --> 00:23:27.774 align:start position:25% line:-2
タップしたサムネールが
滑らかなアニメでズームします

00:23:28.776 --> 00:23:34.581 align:start position:29% line:-2
まず モーダル表示に戻し
ズームを可能にします

00:23:39.052 --> 00:23:44.858 align:start position:18% line:-2
PreviewControllerに
デリゲートとしてselfを設定

00:23:53.567 --> 00:23:58.205 align:start position:0% line:-2
QLPreviewControllerDelegateに
selfを準拠させるため

00:23:58.305 --> 00:24:00.674 align:start position:32% line:-2
プロトコルのリストに
加えます

00:23:58.305 --> 00:24:00.674 align:start position:32% line:-2
プロトコルのリストに
加えます

00:24:12.219 --> 00:24:19.459 align:start position:25% line:-2
そしてアニメに どのビューを
ソースとして使うか指定する―

00:24:19.560 --> 00:24:23.197 align:start position:36% line:-2
メソッドを
最後に実装します

00:24:34.341 --> 00:24:39.680 align:start position:29% line:-2
直前にタップされたセルの
imageViewを―

00:24:39.780 --> 00:24:43.150 align:start position:23% line:-1
Quick Lookに返します

00:24:44.184 --> 00:24:48.121 align:start position:29% line:-2
ズームアニメーションを
有効にする方法は以上です

00:24:48.355 --> 00:24:54.261 align:start position:27% line:-2
表示または閉じる際に
このメソッドを呼び出します

00:25:02.970 --> 00:25:08.876 align:start position:27% line:-2
タップしたサムネールの
画像の動きにご注目ください

00:25:09.776 --> 00:25:13.247 align:start position:30% line:-1
プレビューを閉じる時も

00:25:13.547 --> 00:25:16.550 align:start position:38% line:-2
画像が美しく
切り替わります

00:25:22.289 --> 00:25:26.593 align:start position:36% line:-2
デモは終わりです
スライドに戻って

00:25:26.860 --> 00:25:29.329 align:start position:29% line:-1
次はマキシムが説明します

00:25:29.429 --> 00:25:33.534 align:start position:29% line:-2
プレビューとサムネールの
機能拡張です

00:25:34.768 --> 00:25:35.569 align:start position:30% line:-1
ありがとう ラファエル

00:25:36.236 --> 00:25:41.842 align:start position:25% line:-2
Quick Lookは簡単に
プレビュー機能を追加できます

00:25:42.609 --> 00:25:46.079 align:start position:32% line:-2
更に 独自の
ファイル形式に対して

00:25:46.180 --> 00:25:52.085 align:start position:29% line:-2
プレビュー機能を追加する
拡張方法について話します

00:25:54.087 --> 00:25:57.958 align:start position:23% line:-2
初期設定されている
ファイル形式のリストがあります

00:25:59.560 --> 00:26:02.162 align:start position:29% line:-1
しかし iOS 11以降

00:25:59.560 --> 00:26:02.162 align:start position:29% line:-1
しかし iOS 11以降

00:26:02.262 --> 00:26:07.201 align:start position:34% line:-2
このリストの拡張が
可能になりました

00:26:07.601 --> 00:26:09.803 align:start position:27% line:-1
つまり独自のファイル形式に

00:26:09.903 --> 00:26:12.639 align:start position:36% line:-2
プレビューを
追加できるのです

00:26:14.241 --> 00:26:17.110 align:start position:29% line:-1
ぜひ カスタムファイルを

00:26:17.211 --> 00:26:22.349 align:start position:25% line:-2
Quick Lookを使って
プレビューさせましょう

00:26:23.984 --> 00:26:28.956 align:start position:29% line:-2
共有されるファイルに
この機能拡張が役立ちます

00:26:29.590 --> 00:26:33.594 align:start position:34% line:-2
特にメールなどで
ファイルを受信し―

00:26:33.694 --> 00:26:38.665 align:start position:30% line:-2
内容を簡単に確認したい
場合などです

00:26:39.600 --> 00:26:43.904 align:start position:14% line:-2
QLPreviewControllerを
使用していれば

00:26:44.004 --> 00:26:50.744 align:start position:25% line:-2
未対応だったファイルも
この機能拡張で見られるのです

00:26:53.013 --> 00:26:57.317 align:start position:27% line:-2
プレビュー機能拡張を使った
アプリケーションの一例です

00:26:58.085 --> 00:27:02.022 align:start position:23% line:-2
これはAppleのウェブサイト
からダウンロードでき

00:26:58.085 --> 00:27:02.022 align:start position:23% line:-2
これはAppleのウェブサイト
からダウンロードでき

00:27:02.122 --> 00:27:06.360 align:start position:27% line:-2
カスタマイズして
パーティクルを操作できます

00:27:07.227 --> 00:27:10.931 align:start position:25% line:-2
ユーザと このパーティクルを
共有するため―

00:27:11.198 --> 00:27:15.602 align:start position:27% line:-2
パーティクルファイル
フォーマットを作成しました

00:27:16.570 --> 00:27:18.906 align:start position:32% line:-1
それぞれのファイルは

00:27:19.072 --> 00:27:23.277 align:start position:30% line:-2
パーティクルシステムを
表しています

00:27:24.444 --> 00:27:29.416 align:start position:30% line:-2
パーティクルファイルを
友人と共有したとします

00:27:30.117 --> 00:27:33.921 align:start position:27% line:-2
メッセージやメール添付上で
プレビューすると

00:27:34.021 --> 00:27:38.859 align:start position:27% line:-2
期待とは異なり
画面には何も表示されません

00:27:40.427 --> 00:27:44.464 align:start position:27% line:-2
しかしプレビュー機能拡張を
実装すると

00:27:44.565 --> 00:27:50.904 align:start position:27% line:-2
３次元の美しいパーティクル
システムが表示されます

00:27:53.707 --> 00:27:58.946 align:start position:27% line:-2
では プレビュー機能拡張の
作成方法を説明します

00:28:00.314 --> 00:28:03.550 align:start position:30% line:-2
まず アプリケーション
プロジェクトに

00:28:03.650 --> 00:28:06.053 align:start position:27% line:-1
新規ターゲットを追加します

00:28:06.854 --> 00:28:11.558 align:start position:12% line:-2
ここでQuick Look Preview
Extensionを選択します

00:28:13.961 --> 00:28:18.532 align:start position:30% line:-2
すると複数のファイルが
作成されます

00:28:19.233 --> 00:28:22.903 align:start position:9% line:-2
このPreviewViewController
クラスに

00:28:23.337 --> 00:28:27.107 align:start position:36% line:-2
コードを追加する
必要があります

00:28:28.075 --> 00:28:32.546 align:start position:30% line:-2
エントリポイントを持つ
Storyboardや

00:28:33.881 --> 00:28:37.451 align:start position:23% line:-2
最初に編集する
Info.plistがあります

00:28:37.551 --> 00:28:39.686 align:start position:32% line:-1
では見ていきましょう

00:28:42.890 --> 00:28:49.229 align:start position:7% line:-2
最も注目すべき機能は
QLSupportedContentTypesで

00:28:49.763 --> 00:28:52.766 align:start position:30% line:-2
画面上で
選択されているものです

00:28:53.767 --> 00:28:58.705 align:start position:30% line:-2
これはプレビューされる
ファイル形式の一覧です

00:28:59.373 --> 00:29:04.511 align:start position:21% line:-2
ただし プレビューされるのは
エクスポートされたUTIだけです

00:28:59.373 --> 00:29:04.511 align:start position:21% line:-2
ただし プレビューされるのは
エクスポートされたUTIだけです

00:29:05.445 --> 00:29:11.818 align:start position:25% line:-2
ファイル形式が初期設定されて
なければ リストが参照され

00:29:12.152 --> 00:29:16.590 align:start position:30% line:-2
プレビュー処理する
機能拡張が選択されます

00:29:16.890 --> 00:29:20.294 align:start position:27% line:-2
対象とすべきファイル形式を
漏れなく記入しましょう

00:29:21.061 --> 00:29:24.565 align:start position:27% line:-1
では作成方法を見ていきます

00:29:27.734 --> 00:29:32.740 align:start position:27% line:-2
新規ファイル形式が宣言され
エクスポートされています

00:29:32.906 --> 00:29:35.409 align:start position:41% line:-1
識別子は―

00:29:35.509 --> 00:29:40.380 align:start position:0% line:-2
com.example.apple-samplecode.
Particles.Particlesです

00:29:41.315 --> 00:29:44.918 align:start position:29% line:-2
パーティクルの
プレビュー処理を行うため

00:29:45.052 --> 00:29:49.857 align:start position:20% line:-2
この識別子をInfo.plistに
追加します

00:29:50.791 --> 00:29:53.260 align:start position:30% line:-1
UTIにご興味があれば

00:29:53.360 --> 00:29:57.364 align:start position:16% line:-2
今年のDocument Manager
セッションをご覧ください

00:30:00.400 --> 00:30:04.571 align:start position:29% line:-2
新規のプレビューの作成が
必要な場合

00:30:04.771 --> 00:30:08.342 align:start position:12% line:-2
PreviewViewController
インスタンスが生成されます

00:30:08.442 --> 00:30:12.513 align:start position:7% line:-2
preparePreviewOfFileの入力は
URLとcompletionHandler

00:30:15.349 --> 00:30:22.089 align:start position:29% line:-2
このメソッドはファイルの
プレビュー処理に必須です

00:30:23.524 --> 00:30:28.662 align:start position:21% line:-2
Quick Lookはプレビュー
準備中の表示を出します

00:30:29.563 --> 00:30:33.000 align:start position:36% line:-2
プレビュー内容の
ロードを完了後

00:30:33.233 --> 00:30:37.571 align:start position:18% line:-2
completionHandlerを
呼び出せば作業完了です

00:30:39.006 --> 00:30:41.408 align:start position:27% line:-2
プレビュー機能拡張の解説は
以上です

00:30:42.009 --> 00:30:43.544 align:start position:34% line:-1
では 次に進みます

00:30:44.044 --> 00:30:49.283 align:start position:29% line:-2
プレビューと同じように
サムネールも作成できます

00:30:50.184 --> 00:30:52.619 align:start position:27% line:-2
サムネール機能拡張について
説明します

00:30:55.055 --> 00:31:00.094 align:start position:29% line:-2
サムネールとはファイルの
データを縮小した画像です

00:30:55.055 --> 00:31:00.094 align:start position:29% line:-2
サムネールとはファイルの
データを縮小した画像です

00:31:01.195 --> 00:31:03.831 align:start position:38% line:-2
OSに関わらず
実装されており

00:31:03.931 --> 00:31:10.204 align:start position:27% line:-2
ユーザはファイルを開かずに
内容を確認できます

00:31:11.438 --> 00:31:16.477 align:start position:29% line:-2
このように
iOSで活用されています

00:31:17.644 --> 00:31:20.781 align:start position:32% line:-2
iOSがサムネールを
作成するのは

00:31:20.881 --> 00:31:24.651 align:start position:27% line:-2
画像 ビデオ PDF
テキスト USDZなどです

00:31:26.220 --> 00:31:30.290 align:start position:29% line:-2
左にブランクのアイコンが
あります

00:31:31.225 --> 00:31:34.194 align:start position:30% line:-2
これは
パーティクルファイルで

00:31:34.294 --> 00:31:38.966 align:start position:27% line:-2
iOSではサムネール設定が
されていません

00:31:39.833 --> 00:31:42.870 align:start position:30% line:-1
しかし ご安心ください

00:31:43.170 --> 00:31:48.776 align:start position:27% line:-2
サムネール機能拡張の
作成方法をご説明いたします

00:31:49.343 --> 00:31:53.380 align:start position:29% line:-2
機能拡張によって
パーティクルファイルの―

00:31:53.480 --> 00:31:56.550 align:start position:32% line:-2
きれいなサムネールが
表示されます

00:32:01.288 --> 00:32:05.092 align:start position:25% line:-2
これらサムネールが
表示されるのは Filesや

00:32:05.192 --> 00:32:09.429 align:start position:11% line:-2
UIDocumentBrowswerView
ControllerベースのAppです

00:32:10.898 --> 00:32:15.469 align:start position:18% line:-2
Quick Lookのリストビューで
プレビュー中のファイルを

00:32:15.569 --> 00:32:17.938 align:start position:29% line:-1
タップしても確認できます

00:32:18.972 --> 00:32:23.310 align:start position:27% line:-2
共有するカスタムファイルに
対しても

00:32:23.577 --> 00:32:26.980 align:start position:30% line:-1
機能拡張を適用できます

00:32:27.448 --> 00:32:29.249 align:start position:30% line:-1
では 見ていきましょう

00:32:31.885 --> 00:32:35.823 align:start position:27% line:-1
プレビュー機能拡張と同様に

00:32:37.224 --> 00:32:39.359 align:start position:36% line:-2
アプリケーション
プロジェクトに

00:32:39.459 --> 00:32:41.495 align:start position:30% line:-1
ターゲットを追加します

00:32:41.595 --> 00:32:43.797 align:start position:11% line:-2
そしてThumbnail Extension
を選択

00:32:46.333 --> 00:32:48.936 align:start position:30% line:-1
ファイルが作成されます

00:32:49.169 --> 00:32:52.372 align:start position:20% line:-2
ThumbnailProvider
クラスには

00:32:53.340 --> 00:32:57.511 align:start position:30% line:-2
サムネールの処理を行う
コードを追加します

00:32:58.545 --> 00:33:02.082 align:start position:21% line:-2
Info.plistはプレビュー
機能拡張と同じで

00:32:58.545 --> 00:33:02.082 align:start position:21% line:-2
Info.plistはプレビュー
機能拡張と同じで

00:33:02.349 --> 00:33:06.186 align:start position:32% line:-1
最初に編集を行います

00:33:09.556 --> 00:33:12.359 align:start position:21% line:-1
またこのInfo.plistにも

00:33:12.793 --> 00:33:17.865 align:start position:7% line:-2
QLSupportedContentTypesが
存在します

00:33:17.965 --> 00:33:21.902 align:start position:34% line:-2
コンテンツタイプを
設定します

00:33:24.104 --> 00:33:28.675 align:start position:7% line:-2
この
QLSupportedContentTypesへ

00:33:28.776 --> 00:33:32.913 align:start position:30% line:-2
必ずコンテンツタイプを
追加しましょう

00:33:34.047 --> 00:33:40.154 align:start position:9% line:-2
その後 QLThumbnailProvider
サブクラスを実装できます

00:33:41.088 --> 00:33:43.757 align:start position:29% line:-1
サムネールを表示するには

00:33:44.658 --> 00:33:50.330 align:start position:9% line:-2
CoreGraphicsかUIKitを使用して
サムネールを作成するか

00:33:51.999 --> 00:33:54.601 align:start position:27% line:-2
または ファイルのURLを
返します

00:33:57.704 --> 00:34:01.975 align:start position:27% line:-2
このサブクラスのリクエスト
ハンドラを使うため

00:33:57.704 --> 00:34:01.975 align:start position:27% line:-2
このサブクラスのリクエスト
ハンドラを使うため

00:34:02.075 --> 00:34:04.611 align:start position:20% line:-2
provideThumbnailを
オーバーライドします

00:34:05.546 --> 00:34:09.382 align:start position:25% line:-2
ＷＷＤＣ 2017では
これを重点的に取り上げました

00:34:09.483 --> 00:34:16.924 align:start position:0% line:-2
セッション名は“Building Great
Document-based Apps in iOS 11”

00:34:17.123 --> 00:34:20.460 align:start position:29% line:-2
カスタムファイルの
サムネール作成については

00:34:20.793 --> 00:34:22.728 align:start position:32% line:-1
そちらもご覧ください

00:34:23.931 --> 00:34:27.801 align:start position:7% line:-2
簡単に言うと
QLFileThumbnailRequestの―

00:34:27.900 --> 00:34:30.571 align:start position:30% line:-1
パラメータを使用します

00:34:31.839 --> 00:34:37.643 align:start position:23% line:-2
ファイルのURLやサムネールの
最小最大サイズなどです

00:34:39.646 --> 00:34:41.315 align:start position:32% line:-1
サムネールの処理には

00:34:41.415 --> 00:34:45.652 align:start position:21% line:-2
QLThumbnailReply
オブジェクトの生成が必要です

00:34:45.918 --> 00:34:50.190 align:start position:32% line:-2
このオブジェクトは
完了ハンドラを通じて

00:34:50.924 --> 00:34:55.062 align:start position:27% line:-2
Quick Lookに渡す
必要があります

00:34:57.798 --> 00:35:00.734 align:start position:30% line:-1
デモをお見せしましょう

00:34:57.798 --> 00:35:00.734 align:start position:30% line:-1
デモをお見せしましょう

00:35:02.202 --> 00:35:05.205 align:start position:29% line:-2
まずはパーティクル
アプリケーションのみの―

00:35:05.305 --> 00:35:08.976 align:start position:25% line:-1
機能拡張されていない状態です

00:35:09.743 --> 00:35:15.516 align:start position:27% line:-2
ファイルがないので
＋ボタンを押して作成します

00:35:17.117 --> 00:35:19.987 align:start position:29% line:-1
パーティクルエディタです

00:35:20.420 --> 00:35:25.826 align:start position:29% line:-2
では 少し色を変えて
ファイルを保存しましょう

00:35:27.461 --> 00:35:33.467 align:start position:29% line:-2
先ほど作成したファイルの
中身は表示されていません

00:35:34.067 --> 00:35:38.105 align:start position:27% line:-2
では サムネール機能拡張を
追加していきます

00:35:38.572 --> 00:35:41.008 align:start position:30% line:-1
ファイルを保存してから

00:35:41.108 --> 00:35:44.578 align:start position:30% line:-2
Quick Lookで
プレビューします

00:35:47.114 --> 00:35:50.450 align:start position:36% line:-2
ではファイルを
表示させてみます

00:35:52.352 --> 00:35:54.588 align:start position:34% line:-1
画面はブランクです

00:35:54.688 --> 00:35:57.024 align:start position:32% line:-1
変更していきましょう

00:35:57.658 --> 00:36:01.962 align:start position:25% line:-2
プレビューとサムネールの
機能拡張をそれぞれ実装します

00:35:57.658 --> 00:36:01.962 align:start position:25% line:-2
プレビューとサムネールの
機能拡張をそれぞれ実装します

00:36:02.863 --> 00:36:07.234 align:start position:27% line:-1
既存のプロジェクトを使って

00:36:08.001 --> 00:36:12.005 align:start position:27% line:-1
２つの機能拡張を追加します

00:36:12.840 --> 00:36:17.511 align:start position:25% line:-2
プレビューとサムネール機能を
利用するために

00:36:17.611 --> 00:36:22.549 align:start position:25% line:-2
Info.plistの設定を
行います

00:36:23.717 --> 00:36:26.820 align:start position:27% line:-2
パーティクルAppは
エクスポートされたUTIで

00:36:26.920 --> 00:36:30.290 align:start position:30% line:-2
ファイルフォーマットを
定義しているため

00:36:30.958 --> 00:36:35.396 align:start position:27% line:-2
それを使うように機能拡張を
設定する必要があります

00:36:37.464 --> 00:36:42.336 align:start position:29% line:-2
プレビュー機能拡張の
Info.plistには

00:36:42.603 --> 00:36:46.240 align:start position:30% line:-2
ファイル形式のUTIの
識別子が含まれています

00:36:47.641 --> 00:36:51.845 align:start position:32% line:-2
サムネール機能拡張も
同様です

00:36:52.746 --> 00:36:56.583 align:start position:36% line:-2
あとはこれらを
実装するだけです

00:36:56.783 --> 00:36:58.585 align:start position:27% line:-1
まずプレビュー機能拡張です

00:37:00.688 --> 00:37:07.494 align:start position:7% line:-2
URL completionHandlerで
preparePreviewOfFileの実装を

00:37:08.162 --> 00:37:12.499 align:start position:16% line:-2
このパーティクルは
View Controllerクラスが

00:37:12.599 --> 00:37:14.902 align:start position:30% line:-1
すでに設定されています

00:37:15.569 --> 00:37:18.572 align:start position:34% line:-2
このコントローラを
再利用します

00:37:19.439 --> 00:37:24.278 align:start position:29% line:-2
ここで ロード処理を行う
ヘルパーメソッドを作成し

00:37:24.378 --> 00:37:26.613 align:start position:30% line:-1
ビュー階層に追加します

00:37:28.815 --> 00:37:35.222 align:start position:5% line:-2
ご覧のとおり
particleViewControllerを生成

00:37:35.422 --> 00:37:37.925 align:start position:25% line:-2
受け取ったdocumentに
渡します

00:37:38.025 --> 00:37:42.963 align:start position:27% line:-2
よって このメソッドが
パーティクルを描画できます

00:37:44.131 --> 00:37:45.799 align:start position:30% line:-1
ただし このメソッドを

00:37:45.899 --> 00:37:49.169 align:start position:11% line:-2
preparePreviewOfFileから
呼び出す必要があります

00:37:51.371 --> 00:37:56.376 align:start position:25% line:-2
まずサブクラスである
documentを作成します

00:37:57.111 --> 00:38:02.449 align:start position:27% line:-2
それを開いたら
ヘルパーメソッドを呼び出し

00:37:57.111 --> 00:38:02.449 align:start position:27% line:-2
それを開いたら
ヘルパーメソッドを呼び出し

00:38:02.549 --> 00:38:04.952 align:start position:9% line:-2
particleViewControllerを
置換します

00:38:06.253 --> 00:38:10.991 align:start position:27% line:-1
最後に 完了ハンドラを閉じ

00:38:11.091 --> 00:38:14.194 align:start position:21% line:-2
Quick Lookに準備完了の
通知をします

00:38:15.963 --> 00:38:18.232 align:start position:27% line:-2
これでプレビュー機能拡張は
完了です

00:38:18.365 --> 00:38:20.400 align:start position:27% line:-1
次にサムネール機能拡張です

00:38:22.669 --> 00:38:27.741 align:start position:14% line:-1
provideThumbnailを実装し

00:38:28.809 --> 00:38:34.314 align:start position:21% line:-2
サムネール表示に必要な
プロパティをrequestに設定

00:38:35.883 --> 00:38:41.021 align:start position:27% line:-2
ここではfile URLを
最大サイズで設定します

00:38:41.955 --> 00:38:45.492 align:start position:30% line:-2
スケールや最小サイズも
ありますが

00:38:45.592 --> 00:38:48.629 align:start position:34% line:-1
今回は使用しません

00:38:49.730 --> 00:38:54.802 align:start position:20% line:-2
それからdrawingBlockを
作成します

00:38:57.104 --> 00:39:01.675 align:start position:27% line:-2
ここではヘルパーメソッドを
呼び出し

00:38:57.104 --> 00:39:01.675 align:start position:27% line:-2
ここではヘルパーメソッドを
呼び出し

00:39:02.075 --> 00:39:05.212 align:start position:30% line:-2
サムネールの描画処理を
行います

00:39:05.312 --> 00:39:08.448 align:start position:32% line:-2
では このメソッドを
実装します

00:39:09.016 --> 00:39:12.186 align:start position:27% line:-2
drawingBlockは
ブーリアンを返します

00:39:12.486 --> 00:39:15.856 align:start position:30% line:-2
サムネール描画のために
呼び出された際―

00:39:15.956 --> 00:39:18.892 align:start position:29% line:-1
正しく描けたかを示します

00:39:19.459 --> 00:39:22.696 align:start position:30% line:-2
次は パーティクル
サムネールを作成します

00:39:24.598 --> 00:39:28.835 align:start position:32% line:-2
サムネールを描くには
ファイルのURLと―

00:39:29.203 --> 00:39:31.705 align:start position:30% line:-1
作成場所のサイズを入力

00:39:32.139 --> 00:39:35.943 align:start position:27% line:-1
今回は最大サイズで作ります

00:39:36.043 --> 00:39:38.946 align:start position:36% line:-2
どんなサイズでも
生成可能です

00:39:40.147 --> 00:39:44.017 align:start position:23% line:-2
まずは ファイルに
対応するdocumentを作成

00:39:44.184 --> 00:39:45.752 align:start position:36% line:-1
開けるか試します

00:39:46.186 --> 00:39:50.791 align:start position:29% line:-2
開けない場合 生成失敗を
示すfalseを返します

00:39:51.525 --> 00:39:56.497 align:start position:5% line:-2
ファイルを開き
particleViewControllerを作成

00:39:56.597 --> 00:39:58.966 align:start position:34% line:-2
ファイルを
レンダリングします

00:39:59.466 --> 00:40:04.037 align:start position:2% line:-2
particleViewControllerのスナップ
ショットでサムネールを描きます

00:39:59.466 --> 00:40:04.037 align:start position:2% line:-2
particleViewControllerのスナップ
ショットでサムネールを描きます

00:40:05.472 --> 00:40:10.410 align:start position:21% line:-2
documentを閉じて
生成完了を示すtrueを返します

00:40:11.745 --> 00:40:17.317 align:start position:14% line:-2
次は QLThumbnailReplyを
作成します

00:40:18.819 --> 00:40:25.792 align:start position:14% line:-2
ここではmaximumSizeと
drawingBlockをもとに作ります

00:40:27.494 --> 00:40:31.899 align:start position:25% line:-2
replyオブジェクトは
NSURLのパラメータと共に

00:40:31.999 --> 00:40:33.767 align:start position:30% line:-1
完了ハンドラ経由で提供

00:40:33.867 --> 00:40:39.106 align:start position:30% line:-2
描画時に
エラーが発生した場合―

00:40:39.940 --> 00:40:45.078 align:start position:9% line:-2
ThumbnailBlockのsuccessに
状態が示されます

00:40:45.178 --> 00:40:47.414 align:start position:27% line:-1
画像は あとで捨てられます

00:40:48.248 --> 00:40:51.785 align:start position:36% line:-2
さっそくコードを
使ってみましょう

00:40:52.386 --> 00:40:57.357 align:start position:27% line:-2
炎のファイルがサムネールで
表示されています

00:40:57.458 --> 00:40:59.893 align:start position:32% line:-1
格段によくなりました

00:41:00.394 --> 00:41:03.797 align:start position:32% line:-2
プレビュー機能拡張を
確認しましょう

00:41:04.932 --> 00:41:11.471 align:start position:23% line:-2
メモ上のQuick Lookは
前回のプレビュー時のままです

00:41:11.638 --> 00:41:14.241 align:start position:30% line:-2
Quick Lookを
再起動します

00:41:16.110 --> 00:41:19.046 align:start position:34% line:-2
見事なプレビューが
出ています

00:41:19.146 --> 00:41:24.151 align:start position:29% line:-2
iOSで通用する
ファイル形式ができました

00:41:25.085 --> 00:41:26.887 align:start position:38% line:-1
デモは以上です

00:41:26.987 --> 00:41:29.890 align:start position:27% line:-1
今日のおさらいをしましょう

00:41:29.990 --> 00:41:33.394 align:start position:30% line:-1
最初にお見せしたのは―

00:41:33.494 --> 00:41:36.697 align:start position:25% line:-2
アプリケーションに
プレビュー機能を追加する方法

00:41:36.797 --> 00:41:39.500 align:start position:14% line:-2
QLPreviewControllerを
使います

00:41:40.534 --> 00:41:44.838 align:start position:16% line:-2
次に Quick Lookの機能拡張を
紹介しました

00:41:45.239 --> 00:41:48.842 align:start position:27% line:-2
プレビュー機能拡張によって
カスタムファイルも―

00:41:48.942 --> 00:41:51.678 align:start position:34% line:-1
プレビュー可能です

00:41:52.412 --> 00:41:55.816 align:start position:32% line:-2
サムネール機能拡張は
必要に応じ―

00:41:55.916 --> 00:41:58.719 align:start position:29% line:-2
独自のファイルに
サムネールを付けられます

00:41:59.019 --> 00:42:04.391 align:start position:25% line:-2
これで皆さんのファイル形式も
ファーストクラスに

00:41:59.019 --> 00:42:04.391 align:start position:25% line:-2
これで皆さんのファイル形式も
ファーストクラスに

00:42:06.326 --> 00:42:09.062 align:start position:29% line:-1
このセッションは以上です

00:42:09.196 --> 00:42:13.667 align:start position:25% line:-2
詳しくはAppleのサイトを
ご覧ください

00:42:13.934 --> 00:42:15.436 align:start position:36% line:-1
ご視聴ありがとう
