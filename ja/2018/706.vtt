WEBVTT

00:00:07.174 --> 00:00:16.750 align:start position:43% line:-1
（音楽）

00:00:21.755 --> 00:00:28.962 align:start position:43% line:-1
（拍手）

00:00:29.663 --> 00:00:34.668 align:start position:29% line:-2
ヘルスチームの
ジェイソン･モーリーです

00:00:35.335 --> 00:00:37.070 align:start position:34% line:-1
同僚のペイトンと―

00:00:37.304 --> 00:00:43.243 align:start position:23% line:-2
iOS 12に搭載した新機能を
これからご紹介します

00:00:44.111 --> 00:00:46.813 align:start position:30% line:-1
HealthKitです

00:00:49.016 --> 00:00:51.852 align:start position:21% line:-1
今年の初め iOS 11.3で―

00:00:51.952 --> 00:00:54.555 align:start position:29% line:-1
ヘルスケアを紹介しました

00:00:55.322 --> 00:00:58.192 align:start position:30% line:-1
ユーザは医療機関から―

00:00:58.292 --> 00:01:03.630 align:start position:27% line:-2
ヘルスケアデータを安全かつ
速やかに入手し保管できます

00:00:58.292 --> 00:01:03.630 align:start position:27% line:-2
ヘルスケアデータを安全かつ
速やかに入手し保管できます

00:01:04.798 --> 00:01:10.470 align:start position:29% line:-2
複数の医療機関から
データを集めて提供します

00:01:10.637 --> 00:01:14.708 align:start position:34% line:-2
検査値や基準値など
重要なデータを―

00:01:14.875 --> 00:01:17.878 align:start position:29% line:-1
ユーザは検索できるのです

00:01:18.045 --> 00:01:21.481 align:start position:36% line:-2
自分の体について
深く理解できます

00:01:24.051 --> 00:01:29.456 align:start position:25% line:-2
500を超えるアメリカ国内の
病院や診療所と―

00:01:29.590 --> 00:01:33.327 align:start position:30% line:-2
50を超える医療機関と
提携しています

00:01:33.460 --> 00:01:36.129 align:start position:32% line:-1
そして今も追加中です

00:01:39.099 --> 00:01:43.036 align:start position:30% line:-2
HL７協会の標準規格が
あったからこそー

00:01:43.337 --> 00:01:45.539 align:start position:32% line:-1
これが実現したのです

00:01:46.673 --> 00:01:51.612 align:start position:29% line:-2
医療情報の
相互運用のためのリソース

00:01:52.212 --> 00:01:55.015 align:start position:23% line:-1
つまりFHIRとSMARTです

00:01:57.551 --> 00:02:00.053 align:start position:30% line:-1
全ての始まりは健康です

00:01:57.551 --> 00:02:00.053 align:start position:30% line:-1
全ての始まりは健康です

00:02:00.954 --> 00:02:04.825 align:start position:29% line:-1
医療機関と安全に接続し―

00:02:05.559 --> 00:02:10.964 align:start position:25% line:-2
デバイスにヘルスケアデータを
直接ダウンロードします

00:02:13.066 --> 00:02:15.903 align:start position:20% line:-1
そしてHealthKitに保存し―

00:02:17.137 --> 00:02:20.340 align:start position:23% line:-1
複数の機関のデータを集計します

00:02:22.176 --> 00:02:24.444 align:start position:34% line:-1
iOS 12では―

00:02:24.545 --> 00:02:30.250 align:start position:27% line:-2
そのデータを利用できるよう
APIを提供します

00:02:35.489 --> 00:02:40.527 align:start position:16% line:-2
この機能をサポートする
新たなsampleTypeを紹介します

00:02:41.461 --> 00:02:46.266 align:start position:25% line:-2
次にアプリケーションを承認し
クエリを行う方法

00:02:48.001 --> 00:02:52.806 align:start position:21% line:-1
そしてFHIRで何が可能になるか

00:02:54.575 --> 00:02:57.177 align:start position:29% line:-1
最後に個人情報に関する―

00:02:57.277 --> 00:03:02.449 align:start position:27% line:-2
プライバシーの保護について
考えてみたいと思います

00:02:57.277 --> 00:03:02.449 align:start position:27% line:-2
プライバシーの保護について
考えてみたいと思います

00:03:05.085 --> 00:03:06.453 align:start position:36% line:-1
では始めましょう

00:03:08.455 --> 00:03:11.525 align:start position:16% line:-1
HealthKitの使用経験があれば―

00:03:11.625 --> 00:03:14.461 align:start position:14% line:-1
HKSampleTypeをご存じでしょう

00:03:15.195 --> 00:03:17.497 align:start position:34% line:-2
同じ種類のデータを
グループ化します

00:03:17.998 --> 00:03:20.667 align:start position:20% line:-1
例えばQuantityTypeは―

00:03:20.868 --> 00:03:24.838 align:start position:21% line:-1
数値が主となるデータグループです

00:03:25.072 --> 00:03:27.808 align:start position:27% line:-1
例えば歩数や心拍数などです

00:03:28.642 --> 00:03:32.613 align:start position:21% line:-2
一方 CategoryTypeは
計測データです

00:03:32.880 --> 00:03:36.783 align:start position:29% line:-2
睡眠時間や深さなどを測る
睡眠分析や

00:03:37.217 --> 00:03:39.987 align:start position:38% line:-2
月経痛の程度が
これ当たります

00:03:41.922 --> 00:03:46.493 align:start position:21% line:-2
今回新しく紹介する
HKClinicalTypeは―

00:03:46.627 --> 00:03:49.263 align:start position:25% line:-1
ヘルスケアレコードの分類です

00:03:49.463 --> 00:03:53.767 align:start position:29% line:-2
体調や薬物治療を
ヘルスケアで確認できます

00:03:56.803 --> 00:04:02.943 align:start position:11% line:-2
データタイプは
type identifierで区別されます

00:03:56.803 --> 00:04:02.943 align:start position:11% line:-2
データタイプは
type identifierで区別されます

00:04:03.944 --> 00:04:08.482 align:start position:4% line:-1
HKClinicalTypeIdentifierは―

00:04:08.749 --> 00:04:12.686 align:start position:27% line:-2
一致するクリニカルタイプを
特定します

00:04:14.555 --> 00:04:18.759 align:start position:27% line:-2
ここに挙げたように
アレルギーや持病があります

00:04:18.926 --> 00:04:22.129 align:start position:23% line:-1
妊娠のように期間が限られるもの

00:04:22.229 --> 00:04:25.399 align:start position:23% line:-1
２型糖尿病のような治療中のもの

00:04:26.800 --> 00:04:28.435 align:start position:43% line:-1
予防注射

00:04:29.770 --> 00:04:34.808 align:start position:23% line:-1
毎年の健康診断での血糖値の結果

00:04:36.376 --> 00:04:37.744 align:start position:43% line:-1
薬物治療

00:04:39.313 --> 00:04:43.083 align:start position:32% line:-1
診断手順や外科手術歴

00:04:43.984 --> 00:04:45.385 align:start position:38% line:-1
バイタルサイン

00:04:45.886 --> 00:04:48.121 align:start position:32% line:-1
つまり血圧や体重です

00:04:50.791 --> 00:04:54.294 align:start position:9% line:-2
sampleTypeや
sampleType identifierと―

00:04:54.495 --> 00:04:58.031 align:start position:14% line:-1
HKSampleのサブクラスを紹介します

00:04:58.665 --> 00:05:00.400 align:start position:18% line:-1
HKClinicalRecordです

00:04:58.665 --> 00:05:00.400 align:start position:18% line:-1
HKClinicalRecordです

00:05:01.368 --> 00:05:05.239 align:start position:23% line:-2
HealthKitのサンプルに
不慣れなら―

00:05:05.506 --> 00:05:10.811 align:start position:27% line:-2
それを補える講演や
詳細な資料を準備しています

00:05:13.413 --> 00:05:17.784 align:start position:20% line:-2
HKClincalRecordには
重要なプロパティがあります

00:05:19.386 --> 00:05:20.721 align:start position:32% line:-1
クリニカルタイプです

00:05:21.054 --> 00:05:27.160 align:start position:29% line:-2
これは与えられた記録を
定義するのに役立つのです

00:05:27.528 --> 00:05:29.196 align:start position:38% line:-1
知りたいのは―

00:05:29.596 --> 00:05:32.299 align:start position:29% line:-1
例えば予防注射の記録です

00:05:34.902 --> 00:05:36.537 align:start position:34% line:-1
提供する表示名は―

00:05:36.637 --> 00:05:41.875 align:start position:30% line:-2
ユーザに記録を示す時に
使う文字列です

00:05:42.209 --> 00:05:44.878 align:start position:30% line:-1
FHIRで選択されます

00:05:44.978 --> 00:05:50.484 align:start position:25% line:-2
ユーザに分かりやすい表示名を
選びます

00:05:52.686 --> 00:05:55.122 align:start position:38% line:-1
検査結果では―

00:05:55.522 --> 00:05:59.793 align:start position:30% line:-2
その代わりとなる表現が
たくさんあります

00:06:00.527 --> 00:06:04.031 align:start position:30% line:-2
LOINCでの
コーディングを含みます

00:06:04.131 --> 00:06:07.901 align:start position:30% line:-2
これは医療情報のための
標準基準で―

00:06:08.001 --> 00:06:11.071 align:start position:30% line:-1
FHIRに要求されます

00:06:13.307 --> 00:06:17.678 align:start position:25% line:-2
LOINCでのコーディングと
lookup関数で―

00:06:17.778 --> 00:06:22.549 align:start position:34% line:-2
表示名として掲げる
正準名を提供します

00:06:25.752 --> 00:06:29.389 align:start position:25% line:-2
そしてFHIRへのアクセスを
許可します

00:06:29.490 --> 00:06:33.260 align:start position:20% line:-2
HKClinicalRecordは
とても有用です

00:06:33.360 --> 00:06:37.297 align:start position:30% line:-2
ですから この話は後で
もう一度します

00:06:41.335 --> 00:06:47.774 align:start position:25% line:-2
ヘルスケアデータの出どころや
元情報の全てがとても重要です

00:06:48.609 --> 00:06:51.778 align:start position:29% line:-1
情報源を知りたいでしょう

00:06:53.080 --> 00:06:57.417 align:start position:23% line:-2
HKSourceで
設計したHealthKitは―

00:06:57.518 --> 00:07:00.654 align:start position:23% line:-1
HKSampleで使用可能です

00:06:57.518 --> 00:07:00.654 align:start position:23% line:-1
HKSampleで使用可能です

00:07:02.389 --> 00:07:08.729 align:start position:30% line:-2
共有している医療機関の
名前を設定します

00:07:09.596 --> 00:07:15.068 align:start position:32% line:-2
そして複数のユーザに
デバイスを介して―

00:07:15.169 --> 00:07:19.139 align:start position:29% line:-1
バンドルIDを提供します

00:07:22.876 --> 00:07:25.612 align:start position:18% line:-1
以上が新しいsampleTypeです

00:07:25.712 --> 00:07:29.917 align:start position:30% line:-2
次はアプリケーションの
承認方法です

00:07:37.224 --> 00:07:42.563 align:start position:30% line:-2
ご覧のとおり医療記録の
情報量はかなり豊富です

00:07:43.163 --> 00:07:48.101 align:start position:29% line:-2
ユーザへ優れた提案をする
いい機会です

00:07:48.202 --> 00:07:52.506 align:start position:29% line:-2
ヘルスケアデータを十分に
活用する機会を与えます

00:07:54.408 --> 00:08:00.347 align:start position:29% line:-2
しかし ご承知のとおり
これは個人情報を含みます

00:07:54.408 --> 00:08:00.347 align:start position:29% line:-2
しかし ご承知のとおり
これは個人情報を含みます

00:08:01.348 --> 00:08:06.186 align:start position:27% line:-1
例えば服用中の薬の情報や―

00:08:06.353 --> 00:08:09.423 align:start position:30% line:-1
日々の健康状態などです

00:08:10.557 --> 00:08:16.063 align:start position:25% line:-2
親しい友人や家族でもあっても
共有を控える情報です

00:08:16.897 --> 00:08:22.135 align:start position:34% line:-2
情報を医療機関と
相互利用するので―

00:08:22.603 --> 00:08:26.139 align:start position:34% line:-2
新たな診断が
つくかもしれません

00:08:27.140 --> 00:08:32.111 align:start position:30% line:-2
アクセスやデータ管理を
容易にするため―

00:08:32.279 --> 00:08:37.384 align:start position:30% line:-2
ヘルスケアレコードの
承認フローを紹介します

00:08:38.150 --> 00:08:40.554 align:start position:34% line:-2
アプリケーションが
承認を求めると―

00:08:40.854 --> 00:08:45.759 align:start position:30% line:-2
クリニカルタイプ特有の
許可シートを提供します

00:08:47.161 --> 00:08:51.932 align:start position:32% line:-2
情報の共有と
その機密性について―

00:08:52.032 --> 00:08:54.134 align:start position:34% line:-1
ユーザに通知します

00:08:55.903 --> 00:08:58.772 align:start position:27% line:-1
これは新たな承認フローです

00:08:58.939 --> 00:09:01.174 align:start position:36% line:-1
いつ依頼しても―

00:08:58.939 --> 00:09:01.174 align:start position:36% line:-1
いつ依頼しても―

00:09:01.441 --> 00:09:05.045 align:start position:30% line:-1
そのタイミングを計り―

00:09:05.145 --> 00:09:10.484 align:start position:27% line:-2
理解できるよう
十分な内容を伝えてください

00:09:13.120 --> 00:09:19.092 align:start position:30% line:-2
その後 ユーザは
希望したカテゴリから―

00:09:19.293 --> 00:09:22.196 align:start position:30% line:-2
共有するデータタイプを
選択できます

00:09:23.430 --> 00:09:26.567 align:start position:16% line:-1
新しいpurpose stringや―

00:09:26.767 --> 00:09:31.104 align:start position:30% line:-2
プライバシーポリシーを
提供します

00:09:31.572 --> 00:09:34.908 align:start position:23% line:-1
ユーザに説明する絶好の機会です

00:09:35.008 --> 00:09:38.979 align:start position:32% line:-2
データにアクセスして
何をしたいのか

00:09:39.079 --> 00:09:41.582 align:start position:34% line:-1
データをどう守るか

00:09:43.584 --> 00:09:48.822 align:start position:27% line:-2
自分の依頼が必要性と
つり合っているか確認します

00:09:49.223 --> 00:09:52.659 align:start position:25% line:-1
主要機能に関連性がなければ―

00:09:52.759 --> 00:09:57.364 align:start position:23% line:-1
ユーザは驚き 心配するはずです

00:09:57.965 --> 00:10:05.205 align:start position:27% line:-2
最終的にユーザが医療機関と
情報交換するにあたって―

00:09:57.965 --> 00:10:05.205 align:start position:27% line:-2
最終的にユーザが医療機関と
情報交換するにあたって―

00:10:05.906 --> 00:10:11.078 align:start position:29% line:-2
新しいデータの管理方法を
紹介します

00:10:11.778 --> 00:10:17.017 align:start position:27% line:-2
新しいデータの共有前に
毎回 デフォルトで尋ねます

00:10:18.385 --> 00:10:22.055 align:start position:25% line:-1
新しいデータを利用する時は―

00:10:22.222 --> 00:10:24.658 align:start position:23% line:-1
常に許可シートの提示が必要です

00:10:25.058 --> 00:10:31.231 align:start position:30% line:-2
クエリを実行する場合は
事前の承認が必要です

00:10:35.269 --> 00:10:39.506 align:start position:32% line:-2
では承認申請の方法を
案内します

00:10:40.841 --> 00:10:45.345 align:start position:23% line:-2
HealthKitの経験者には
おなじみのフローです

00:10:45.812 --> 00:10:48.048 align:start position:25% line:-1
まずプロジェクトを設定します

00:10:50.317 --> 00:10:53.453 align:start position:29% line:-1
その後 承認依頼を行い―

00:10:54.354 --> 00:10:56.323 align:start position:34% line:-1
クエリを実行します

00:10:58.859 --> 00:11:04.565 align:start position:30% line:-2
プロジェクト設定のため
ヘルスケアレコードの―

00:10:58.859 --> 00:11:04.565 align:start position:30% line:-2
プロジェクト設定のため
ヘルスケアレコードの―

00:11:05.999 --> 00:11:08.168 align:start position:25% line:-1
Xcodeへの追加が必要です

00:11:11.171 --> 00:11:15.275 align:start position:16% line:-2
それからHealth Records
Usage Descriptionを―

00:11:15.375 --> 00:11:18.078 align:start position:21% line:-1
Info.plistに追加します

00:11:20.514 --> 00:11:23.750 align:start position:29% line:-1
データを利用する理由を―

00:11:23.851 --> 00:11:27.221 align:start position:25% line:-1
ユーザに説明するいい機会です

00:11:30.557 --> 00:11:33.527 align:start position:29% line:-1
この後 承認を依頼します

00:11:34.695 --> 00:11:38.031 align:start position:23% line:-2
ここで
アクセスするタイプを定義します

00:11:38.232 --> 00:11:39.633 align:start position:46% line:-1
症状

00:11:39.933 --> 00:11:41.835 align:start position:43% line:-1
予防注射

00:11:42.302 --> 00:11:43.837 align:start position:43% line:-1
薬物治療

00:11:46.874 --> 00:11:50.944 align:start position:23% line:-2
そしてHealthStoreで
承認を依頼します

00:11:52.012 --> 00:11:54.181 align:start position:32% line:-1
エラーに対処した後は

00:11:55.749 --> 00:11:57.918 align:start position:36% line:-1
クエリの実行です

00:11:59.086 --> 00:12:02.789 align:start position:29% line:-2
ユーザの
プライバシー保護のため―

00:11:59.086 --> 00:12:02.789 align:start position:29% line:-2
ユーザの
プライバシー保護のため―

00:12:02.956 --> 00:12:09.329 align:start position:29% line:-2
彼らが許可または拒否する
カテゴリを明かしません

00:12:13.634 --> 00:12:14.768 align:start position:34% line:-1
次にクエリについて

00:12:14.868 --> 00:12:18.138 align:start position:20% line:-2
HKClinicalRecordは
HKSampleなので―

00:12:18.238 --> 00:12:23.443 align:start position:27% line:-2
既存のサンプルクエリ基盤を
利用できます

00:12:23.977 --> 00:12:29.449 align:start position:11% line:-2
AnchoredObjectQueryなどが
機能して―

00:12:29.683 --> 00:12:32.786 align:start position:30% line:-2
ユーザが連続呼び出しを
許可すると―

00:12:32.986 --> 00:12:35.389 align:start position:25% line:-1
バックグラウンドで作業します

00:12:38.425 --> 00:12:41.862 align:start position:27% line:-2
クエリを実行したいタイプを
定義します

00:12:43.664 --> 00:12:45.666 align:start position:29% line:-1
これはサンプルクエリです

00:12:46.600 --> 00:12:49.336 align:start position:18% line:-1
HealthStoreで実行できます

00:12:53.006 --> 00:12:55.442 align:start position:30% line:-1
基本的な承認フローです

00:12:56.276 --> 00:13:01.682 align:start position:23% line:-2
ヘルスケアレコード特有の
追加のメカニズムを導入しました

00:12:56.276 --> 00:13:01.682 align:start position:23% line:-2
ヘルスケアレコード特有の
追加のメカニズムを導入しました

00:13:03.617 --> 00:13:07.721 align:start position:11% line:-2
Get Request Status for
Authorizationは―

00:13:07.821 --> 00:13:12.659 align:start position:27% line:-2
許可シートを提示する場合に
定義するAPIです

00:13:14.661 --> 00:13:17.531 align:start position:38% line:-1
これによって―

00:13:18.198 --> 00:13:22.202 align:start position:30% line:-2
承認シートの確認が
ユーザに必要か決定し―

00:13:22.302 --> 00:13:28.275 align:start position:29% line:-2
コンテキスト提供のため
承認の前にUIを示します

00:13:31.678 --> 00:13:36.416 align:start position:20% line:-2
そのためにHealthStoreで
このAPIを呼び出し―

00:13:37.317 --> 00:13:38.819 align:start position:34% line:-1
エラーを処理します

00:13:40.587 --> 00:13:43.857 align:start position:25% line:-1
依頼ステータスの要求により―

00:13:44.091 --> 00:13:48.795 align:start position:29% line:-2
承認依頼の前に
UIを示すことができます

00:13:52.399 --> 00:13:56.837 align:start position:23% line:-1
アクセスを希望するデータには―

00:13:56.937 --> 00:13:59.840 align:start position:21% line:-1
複数のタイプがあるかもしれません

00:14:00.073 --> 00:14:03.110 align:start position:23% line:-1
リサーチアプリケーションなら―

00:14:03.844 --> 00:14:09.383 align:start position:29% line:-2
結果が偏らないよう
総合的なタイプが必要です

00:14:11.084 --> 00:14:17.524 align:start position:20% line:-2
Info.plistの新たなキーで
タイプを特定できます

00:14:18.258 --> 00:14:23.130 align:start position:29% line:-2
このタイプへのアクセスを
許可しなければ―

00:14:23.630 --> 00:14:26.934 align:start position:34% line:-2
新しい要求タイプの
エラーに戻ります

00:14:27.067 --> 00:14:30.237 align:start position:30% line:-1
そして対応方法を決定し

00:14:30.471 --> 00:14:35.108 align:start position:29% line:-2
このデータがなければ
続けられないと説明します

00:14:38.712 --> 00:14:44.852 align:start position:18% line:-2
Info.plistに閲覧権限キーを
加えたら実行できます

00:14:45.853 --> 00:14:51.024 align:start position:25% line:-2
アレルギー 症状 予防注射を
特定しています

00:14:53.293 --> 00:14:57.397 align:start position:32% line:-2
そして新たなエラーを
処理します

00:15:00.667 --> 00:15:06.306 align:start position:29% line:-2
これを賢く使い
アプリケーション機能を―

00:15:06.406 --> 00:15:09.476 align:start position:32% line:-1
限定しないでください

00:15:09.877 --> 00:15:14.548 align:start position:25% line:-2
共有するデータ量にかかわらず
多くのユーザに―

00:15:14.748 --> 00:15:17.751 align:start position:27% line:-1
恩恵を受けさせたいはずです

00:15:21.855 --> 00:15:24.324 align:start position:32% line:-1
これが承認フローです

00:15:24.625 --> 00:15:27.427 align:start position:30% line:-1
注目したい点があります

00:15:28.395 --> 00:15:32.232 align:start position:25% line:-1
データにアクセスしたいなら―

00:15:32.332 --> 00:15:35.269 align:start position:25% line:-1
まず毎回 承認依頼が必要です

00:15:35.636 --> 00:15:42.176 align:start position:23% line:-2
新しいデータが入ると
ユーザは承認シートを確認します

00:15:42.810 --> 00:15:46.113 align:start position:27% line:-2
ですので
許可シートを提示しましょう

00:15:48.081 --> 00:15:52.519 align:start position:36% line:-2
必要なデータだけ
要求してください

00:15:54.221 --> 00:15:58.458 align:start position:27% line:-2
最後に新しいAPIの利用を
検討してください

00:15:58.692 --> 00:16:04.064 align:start position:27% line:-2
コンテキストを提供し
承認のタイミングを計れます

00:15:58.692 --> 00:16:04.064 align:start position:27% line:-2
コンテキストを提供し
承認のタイミングを計れます

00:16:07.467 --> 00:16:10.604 align:start position:30% line:-1
では同僚のペイトンが―

00:16:10.704 --> 00:16:13.273 align:start position:25% line:-1
アプリケーションを紹介します

00:16:13.474 --> 00:16:14.174 align:start position:41% line:-1
ありがとう

00:16:14.308 --> 00:16:15.442 align:start position:43% line:-1
（拍手）

00:16:16.243 --> 00:16:17.244 align:start position:41% line:-1
ありがとう

00:16:17.678 --> 00:16:21.181 align:start position:32% line:-2
これは登山者向けの
アプリケーションです

00:16:21.615 --> 00:16:24.718 align:start position:25% line:-1
HealthKitを使って―

00:16:24.818 --> 00:16:28.522 align:start position:27% line:-2
ウォーキングやハイキングを
管理します

00:16:28.889 --> 00:16:31.992 align:start position:27% line:-1
広範囲に及ぶ市場調査の結果

00:16:32.092 --> 00:16:35.963 align:start position:27% line:-2
登山者は山へ旅行する者だと
判断しました

00:16:36.063 --> 00:16:40.334 align:start position:29% line:-2
旅行者は予防接種の状況を
知るべきです

00:16:40.434 --> 00:16:43.136 align:start position:29% line:-1
よって 推移特性により―

00:16:43.370 --> 00:16:46.773 align:start position:29% line:-2
登山者は予防接種の状況を
知るべきです

00:16:47.241 --> 00:16:52.946 align:start position:27% line:-2
そのため 予防接種の
ダッシュボードを制作中です

00:16:53.247 --> 00:16:55.582 align:start position:36% line:-1
タップしてみます

00:16:56.950 --> 00:16:59.820 align:start position:29% line:-1
これがダッシュボードです

00:16:59.920 --> 00:17:03.824 align:start position:32% line:-2
ワクチンの接種状況が
表示されます

00:16:59.920 --> 00:17:03.824 align:start position:32% line:-2
ワクチンの接種状況が
表示されます

00:17:03.991 --> 00:17:08.161 align:start position:16% line:-2
表示名で使うのは
HKClinicalRecordsです

00:17:08.628 --> 00:17:12.098 align:start position:27% line:-2
ヘルスケアレコードの権限を
追加しました

00:17:12.199 --> 00:17:17.871 align:start position:18% line:-2
Purpose Stringを作って
データの使用目的を示します

00:17:18.505 --> 00:17:21.340 align:start position:27% line:-1
ダッシュボードを実行します

00:17:21.775 --> 00:17:25.612 align:start position:0% line:-2
ImmunizationsViewControllerで
タブが動きます

00:17:25.945 --> 00:17:29.416 align:start position:34% line:-2
アプリケーションを
使う時は常に―

00:17:29.516 --> 00:17:33.754 align:start position:25% line:-1
承認依頼を出すことが基本です

00:17:34.054 --> 00:17:37.824 align:start position:16% line:-2
その点 viewWillAppearは
優れています

00:17:39.092 --> 00:17:43.464 align:start position:32% line:-2
接種記録のサンプルに
興味があることを―

00:17:43.931 --> 00:17:46.533 align:start position:30% line:-1
ここで最初に明記します

00:17:46.967 --> 00:17:48.035 align:start position:45% line:-1
次に―

00:17:49.870 --> 00:17:52.706 align:start position:12% line:-2
requestAuthorizationを
呼び出します

00:17:53.340 --> 00:17:58.312 align:start position:29% line:-2
成功したかどうかの確認や
エラー処理をします

00:17:59.379 --> 00:18:01.949 align:start position:30% line:-1
最終的に承認されたら―

00:17:59.379 --> 00:18:01.949 align:start position:30% line:-1
最終的に承認されたら―

00:18:02.049 --> 00:18:05.619 align:start position:34% line:-2
接種メソッドに
クエリを実行します

00:18:06.820 --> 00:18:10.691 align:start position:23% line:-1
ここでサンプルクエリを作ります

00:18:11.024 --> 00:18:14.561 align:start position:23% line:-1
サンプルリターンを繰り返して―

00:18:14.661 --> 00:18:18.432 align:start position:25% line:-1
私のデータソースへパスします

00:18:21.468 --> 00:18:23.937 align:start position:29% line:-1
これがサンプルクエリです

00:18:24.037 --> 00:18:26.974 align:start position:25% line:-1
接種記録のサンプルを使います

00:18:28.141 --> 00:18:32.146 align:start position:25% line:-2
ユーザの全ての記録が要るので
属性はなし

00:18:32.479 --> 00:18:34.915 align:start position:39% line:-1
同じ理由で―

00:18:35.082 --> 00:18:38.185 align:start position:36% line:-1
制限もかけません

00:18:38.986 --> 00:18:42.956 align:start position:34% line:-2
順番は問わないので
ソートはしません

00:18:43.457 --> 00:18:46.126 align:start position:38% line:-1
結果を確認し―

00:18:46.226 --> 00:18:49.830 align:start position:29% line:-1
エラーがあれば処理します

00:18:50.797 --> 00:18:53.867 align:start position:29% line:-1
次にサンプルを繰り返し―

00:18:54.334 --> 00:18:58.038 align:start position:29% line:-2
表示名で
データソースにパスします

00:19:00.440 --> 00:19:02.476 align:start position:30% line:-1
データソースの名前で―

00:19:02.910 --> 00:19:04.678 align:start position:30% line:-1
メインキューに飛びます

00:19:04.978 --> 00:19:08.882 align:start position:20% line:-2
そしてReload UIメソッドを
呼び出します

00:19:10.083 --> 00:19:14.555 align:start position:27% line:-2
HealthStoreで
サンプルクエリを実行します

00:19:15.089 --> 00:19:17.824 align:start position:36% line:-2
これで全部なので
やってみましょう

00:19:21.028 --> 00:19:25.299 align:start position:27% line:-2
トレーニングログが表示され
予防接種のタブをタップ

00:19:25.399 --> 00:19:28.168 align:start position:29% line:-1
承認シートが提示されます

00:19:28.268 --> 00:19:30.737 align:start position:32% line:-1
データの使用方法を―

00:19:31.138 --> 00:19:34.274 align:start position:30% line:-1
ユーザに説明しています

00:19:34.908 --> 00:19:36.276 align:start position:39% line:-1
続けてタップ

00:19:37.110 --> 00:19:42.182 align:start position:32% line:-2
好みに従いカテゴリの
許可か拒否を選べます

00:19:42.950 --> 00:19:46.620 align:start position:12% line:-2
この画面にはPurpose Stringと
プライバシーポリシーへの

00:19:46.720 --> 00:19:49.323 align:start position:29% line:-1
リンクも記載されています

00:19:49.857 --> 00:19:52.726 align:start position:25% line:-1
“全てを選択”ボタンはなく―

00:19:52.826 --> 00:19:56.563 align:start position:29% line:-2
カテゴリを一つ一つ
選択しなければなりません

00:19:57.231 --> 00:19:59.366 align:start position:36% line:-1
ではデモとして―

00:19:59.466 --> 00:20:03.170 align:start position:29% line:-1
予防接種記録を共有します

00:19:59.466 --> 00:20:03.170 align:start position:29% line:-1
予防接種記録を共有します

00:20:03.270 --> 00:20:07.508 align:start position:16% line:-2
Ask Before Sharingを
デフォルトで残し―

00:20:07.708 --> 00:20:09.076 align:start position:36% line:-1
“完了”をタップ

00:20:10.244 --> 00:20:14.248 align:start position:25% line:-2
ユーザの全ての予防接種記録が
表示されます

00:20:14.681 --> 00:20:15.249 align:start position:43% line:-1
そして…

00:20:15.349 --> 00:20:20.921 align:start position:43% line:-1
（拍手）

00:20:21.021 --> 00:20:27.794 align:start position:25% line:-2
FHIRのおかげでより多くの
医療記録を引き出せます

00:20:27.895 --> 00:20:30.164 align:start position:30% line:-1
ジェイソンに代わります

00:20:31.532 --> 00:20:32.466 align:start position:41% line:-1
ありがとう

00:20:32.799 --> 00:20:33.700 align:start position:45% line:-1
さて―

00:20:34.201 --> 00:20:40.007 align:start position:32% line:-2
アプリケーションでの
承認依頼の方法や―

00:20:40.574 --> 00:20:45.279 align:start position:12% line:-2
HKClinicalRecordの表示名の
利用方法が分かりました

00:20:45.379 --> 00:20:49.383 align:start position:34% line:-2
ユーザが知る方法で
情報提供が可能です

00:20:53.620 --> 00:21:00.227 align:start position:23% line:-2
ではFHIRで何ができるのかを
お伝えしましょう

00:20:53.620 --> 00:21:00.227 align:start position:23% line:-2
ではFHIRで何ができるのかを
お伝えしましょう

00:21:02.596 --> 00:21:07.801 align:start position:27% line:-2
ユーザは一生のうちで
複数の医療機関と関わります

00:21:08.068 --> 00:21:12.773 align:start position:29% line:-2
ですが医療記録システムが
異なることも多く―

00:21:13.340 --> 00:21:17.211 align:start position:34% line:-2
必ずしも同じ手順で
データを表せません

00:21:17.644 --> 00:21:20.881 align:start position:29% line:-1
相互運用が難しい原因です

00:21:23.517 --> 00:21:29.556 align:start position:14% line:-2
そこでArgonaut Projectが
開始されます

00:21:30.023 --> 00:21:34.361 align:start position:16% line:-1
JSONやOAuth 2.0を通じて―

00:21:34.461 --> 00:21:40.300 align:start position:30% line:-2
FHIRを
使用できるようにします

00:21:40.667 --> 00:21:46.273 align:start position:27% line:-2
医療機関との安定した接続と
一般的な形式での―

00:21:46.373 --> 00:21:49.710 align:start position:27% line:-1
ダウンロードを可能にします

00:21:49.810 --> 00:21:53.413 align:start position:23% line:-1
そして複数の機関と関連づけます

00:21:55.983 --> 00:22:00.854 align:start position:29% line:-2
FHIRはアレルギーから
処方箋までカバーする―

00:21:55.983 --> 00:22:00.854 align:start position:29% line:-2
FHIRはアレルギーから
処方箋までカバーする―

00:22:00.954 --> 00:22:05.926 align:start position:34% line:-2
ヘルスケアデータの
巨大な母集団です

00:22:06.393 --> 00:22:12.499 align:start position:29% line:-2
これをリソースと呼ばれる
データに構造化します

00:22:13.033 --> 00:22:17.271 align:start position:30% line:-2
リソースには
それぞれタイプがあり―

00:22:17.371 --> 00:22:19.506 align:start position:23% line:-1
全ヘルスケアデータに該当します

00:22:21.742 --> 00:22:23.977 align:start position:30% line:-1
選んだ８つのタイプは―

00:22:24.077 --> 00:22:28.849 align:start position:20% line:-2
Argonaut Projectで
定義されています

00:22:29.283 --> 00:22:34.254 align:start position:27% line:-2
これを７つの
クリニカルタイプに分けます

00:22:35.089 --> 00:22:38.325 align:start position:25% line:-1
カテゴリに基づき“診察”を―

00:22:38.525 --> 00:22:42.729 align:start position:27% line:-2
検査結果とバイタルサインに
振り分けます

00:22:43.263 --> 00:22:49.303 align:start position:30% line:-2
複数の薬物リソースを
“薬物治療”に入れます

00:22:52.039 --> 00:22:56.210 align:start position:27% line:-2
つまりFHIRはJSONで
データを表現し―

00:22:56.343 --> 00:23:00.981 align:start position:29% line:-2
全てのFHIRリソースで
キープロパティがあります

00:22:56.343 --> 00:23:00.981 align:start position:29% line:-2
全てのFHIRリソースで
キープロパティがあります

00:23:01.748 --> 00:23:03.951 align:start position:34% line:-1
リソースタイプは―

00:23:04.184 --> 00:23:06.386 align:start position:36% line:-1
“診察”で見ます

00:23:07.387 --> 00:23:12.726 align:start position:27% line:-2
そして検査結果や
バイタルサインを知らせます

00:23:15.195 --> 00:23:19.633 align:start position:30% line:-2
全てのリソースタイプに
IDがあります

00:23:20.968 --> 00:23:23.804 align:start position:27% line:-1
リソースを特定できますが―

00:23:23.904 --> 00:23:28.675 align:start position:34% line:-2
該当する医療機関の
ドメイン内のみで―

00:23:28.776 --> 00:23:30.911 align:start position:29% line:-1
固有な点にご注意ください

00:23:35.415 --> 00:23:39.753 align:start position:21% line:-1
FHIRの基盤はコーディングです

00:23:41.021 --> 00:23:45.492 align:start position:29% line:-2
外部の
コーディングシステムで―

00:23:45.959 --> 00:23:49.096 align:start position:27% line:-1
IDやコードを参照できます

00:23:49.496 --> 00:23:53.400 align:start position:20% line:-1
FHIR特有のシステムは多数あり―

00:23:53.567 --> 00:23:59.273 align:start position:29% line:-2
医療記録内の
ある項目について調べたり

00:23:59.373 --> 00:24:05.312 align:start position:23% line:-2
特定の項目について 複数の
医療機関を横断的に検索できます

00:23:59.373 --> 00:24:05.312 align:start position:23% line:-2
特定の項目について 複数の
医療機関を横断的に検索できます

00:24:07.948 --> 00:24:11.084 align:start position:27% line:-1
カテゴリのコーディングです

00:24:11.218 --> 00:24:14.087 align:start position:30% line:-1
検査結果だと分かります

00:24:16.323 --> 00:24:20.861 align:start position:23% line:-1
計測中の場合のコードもあります

00:24:22.596 --> 00:24:27.634 align:start position:25% line:-2
これはLOINCで定義される
血糖です

00:24:27.734 --> 00:24:31.004 align:start position:27% line:-1
データベースで検索すると―

00:24:31.138 --> 00:24:34.007 align:start position:30% line:-1
別名や詳細が分かります

00:24:36.910 --> 00:24:41.281 align:start position:34% line:-2
もちろん診察なので
数値もあります

00:24:41.381 --> 00:24:43.851 align:start position:29% line:-1
これは60mg/dlです

00:24:44.051 --> 00:24:46.253 align:start position:29% line:-1
単位もコーディングされ―

00:24:46.353 --> 00:24:50.457 align:start position:27% line:-1
状況を総合的に理解できます

00:24:54.361 --> 00:24:58.465 align:start position:25% line:-2
FHIRリソースには
多くの追加データも存在します

00:24:58.665 --> 00:25:03.971 align:start position:12% line:-2
Argonaut Projectの説明書も
ご一読ください

00:24:58.665 --> 00:25:03.971 align:start position:12% line:-2
Argonaut Projectの説明書も
ご一読ください

00:25:04.071 --> 00:25:06.707 align:start position:27% line:-1
最後に詳細をお知らせします

00:25:08.909 --> 00:25:13.180 align:start position:23% line:-2
HKFHIRResourceで
FHIRを設計します

00:25:13.914 --> 00:25:19.953 align:start position:27% line:-2
完全な生データにアクセスし
キープロパティを提供します

00:25:21.688 --> 00:25:25.125 align:start position:25% line:-2
リソースタイプやIDといった
共通要素を―

00:25:25.993 --> 00:25:27.528 align:start position:39% line:-1
表に出します

00:25:30.264 --> 00:25:35.536 align:start position:29% line:-2
SwiftやJSONで
データにアクセス可能です

00:25:35.969 --> 00:25:41.041 align:start position:25% line:-2
私のCodableの構造体と
診察を定義しています

00:25:41.775 --> 00:25:45.345 align:start position:30% line:-2
前に見た値を
引き出すために使います

00:25:46.947 --> 00:25:51.351 align:start position:21% line:-2
APIを通じてFHIRリソースを
共有するだけで―

00:25:51.452 --> 00:25:55.289 align:start position:27% line:-1
適切にデータを構築できます

00:25:58.192 --> 00:26:02.930 align:start position:14% line:-2
HKClinicalRecordの作業を
楽にするのは―

00:25:58.192 --> 00:26:02.930 align:start position:14% line:-2
HKClinicalRecordの作業を
楽にするのは―

00:26:03.163 --> 00:26:08.268 align:start position:27% line:-2
データをリソースタイプ別に
検索する述語関数です

00:26:08.368 --> 00:26:13.407 align:start position:25% line:-2
処方箋かFHIRの薬剤情報を
調べます

00:26:15.542 --> 00:26:19.079 align:start position:29% line:-1
リソースタイプやIDで―

00:26:19.179 --> 00:26:23.283 align:start position:34% line:-2
記録を特定できる
述語関数もあります

00:26:23.684 --> 00:26:28.755 align:start position:30% line:-2
FHIRリソース同士で
参照できるのは便利です

00:26:29.022 --> 00:26:33.460 align:start position:30% line:-2
例えば薬剤で
治療の状況を参照します

00:26:37.097 --> 00:26:41.668 align:start position:30% line:-2
ではFHIRを使う際に
必要な点を考えます

00:26:42.703 --> 00:26:47.107 align:start position:32% line:-2
まずFHIRには
独自の日付があります

00:26:47.441 --> 00:26:51.612 align:start position:27% line:-1
処方箋には処方日があります

00:26:51.712 --> 00:26:54.781 align:start position:36% line:-2
症状には発症日や
症状が消えた日―

00:26:54.882 --> 00:26:58.952 align:start position:32% line:-2
最初に処方箋が
出された日もあります

00:26:59.887 --> 00:27:02.990 align:start position:34% line:-2
リソースタイプ別に
直接アクセスして―

00:26:59.887 --> 00:27:02.990 align:start position:34% line:-2
リソースタイプ別に
直接アクセスして―

00:27:03.090 --> 00:27:06.226 align:start position:29% line:-1
FHIRを使ってください

00:27:06.727 --> 00:27:10.864 align:start position:20% line:-2
HKSampleのスーパークラスの
開始日と終了日は―

00:27:10.964 --> 00:27:15.102 align:start position:29% line:-2
リソースの最初の追加日が
設定されます

00:27:18.138 --> 00:27:21.241 align:start position:32% line:-2
ヘルスケアレコードの
特定の際には―

00:27:21.341 --> 00:27:24.611 align:start position:23% line:-1
リソースタイプやIDを使います

00:27:24.711 --> 00:27:28.949 align:start position:27% line:-1
更新は医療機関が行うので―

00:27:29.049 --> 00:27:32.186 align:start position:27% line:-1
生涯にわたって確認できます

00:27:34.888 --> 00:27:38.492 align:start position:25% line:-1
最後にFHIRとJSONは―

00:27:38.592 --> 00:27:42.596 align:start position:32% line:-2
数値の精度の上で
完全に一致はしません

00:27:43.263 --> 00:27:48.502 align:start position:29% line:-2
FHIRは小数位で桁数に
重要性を見いだしますが―

00:27:48.602 --> 00:27:52.973 align:start position:20% line:-1
SwiftやJSONでは失われます

00:27:53.607 --> 00:27:59.112 align:start position:29% line:-2
基本的にこの情報を
アクセス可能にするなら―

00:27:59.713 --> 00:28:03.917 align:start position:30% line:-2
SwiftやJSONは
不適切かもしれません

00:27:59.713 --> 00:28:03.917 align:start position:30% line:-2
SwiftやJSONは
不適切かもしれません

00:28:04.952 --> 00:28:07.888 align:start position:27% line:-1
では新しいAPIについて―

00:28:07.988 --> 00:28:11.391 align:start position:27% line:-1
ペイトンに語ってもらいます

00:28:12.726 --> 00:28:18.098 align:start position:43% line:-1
（拍手）

00:28:19.066 --> 00:28:20.067 align:start position:41% line:-1
ありがとう

00:28:20.601 --> 00:28:23.537 align:start position:25% line:-1
予防接種のダッシュボードです

00:28:23.737 --> 00:28:26.940 align:start position:16% line:-1
HealthKitで接種記録を取ります

00:28:27.040 --> 00:28:32.079 align:start position:29% line:-2
この段階でユーザが
内容を伝えるのは困難です

00:28:33.680 --> 00:28:37.618 align:start position:21% line:-1
それをチェックリストで解決します

00:28:37.851 --> 00:28:42.089 align:start position:23% line:-2
ユーザは要約を
分かりやすい言葉で閲覧できます

00:28:43.090 --> 00:28:46.693 align:start position:25% line:-1
混合ワクチンが免疫を作って―

00:28:46.793 --> 00:28:51.432 align:start position:32% line:-2
病気を予防することを
知る必要があります

00:28:53.000 --> 00:28:57.905 align:start position:29% line:-2
病気やワクチンの名称は
医療機関によって違います

00:28:58.238 --> 00:29:01.241 align:start position:27% line:-2
そこでFHIRの相互運用が
作動します

00:28:58.238 --> 00:29:01.241 align:start position:27% line:-2
そこでFHIRの相互運用が
作動します

00:29:01.842 --> 00:29:05.946 align:start position:20% line:-1
FHIRは定義済みのコードを使い―

00:29:06.046 --> 00:29:08.115 align:start position:36% line:-1
物事を特定します

00:29:09.449 --> 00:29:12.519 align:start position:29% line:-1
FHIRの説明書を見て―

00:29:12.619 --> 00:29:17.191 align:start position:29% line:-2
水ぼうそうワクチンで
特定するアルゴリズムです

00:29:18.926 --> 00:29:22.129 align:start position:21% line:-1
まずJSONで接種記録を取ります

00:29:23.297 --> 00:29:28.869 align:start position:25% line:-2
それをデシリアライズし
CVXでコードを引き出します

00:29:29.303 --> 00:29:32.439 align:start position:29% line:-2
CVXは予防接種のための
一般的なコーディングで

00:29:32.539 --> 00:29:35.943 align:start position:34% line:-2
領域が異なる薬剤は
別システムです

00:29:37.177 --> 00:29:41.615 align:start position:32% line:-2
水ぼうそうを予防する
ワクチンのリストと―

00:29:41.715 --> 00:29:45.786 align:start position:25% line:-1
CVXコードを比較してみます

00:29:45.886 --> 00:29:50.724 align:start position:25% line:-2
一致すると 水ぼうそうの横が
チェックされます

00:29:52.226 --> 00:29:54.695 align:start position:25% line:-1
JSONの接種記録について―

00:29:58.031 --> 00:30:02.169 align:start position:30% line:-2
構造はリソースタイプで
始まります

00:29:58.031 --> 00:30:02.169 align:start position:30% line:-2
構造はリソースタイプで
始まります

00:30:04.471 --> 00:30:06.473 align:start position:34% line:-1
ワクチンコードです

00:30:07.341 --> 00:30:10.410 align:start position:27% line:-1
中にコード配列が含まれます

00:30:11.445 --> 00:30:12.880 align:start position:38% line:-1
多数あるので―

00:30:13.514 --> 00:30:17.851 align:start position:27% line:-2
検索して
CVXを探す必要があります

00:30:18.185 --> 00:30:21.155 align:start position:27% line:-1
画面の例ではNDCなので―

00:30:21.688 --> 00:30:24.424 align:start position:25% line:-1
CVXが見つかるまで探します

00:30:25.058 --> 00:30:27.795 align:start position:32% line:-1
手元のコードを見ます

00:30:28.262 --> 00:30:31.465 align:start position:23% line:-1
MMRVワクチンだと分かります

00:30:33.600 --> 00:30:36.437 align:start position:25% line:-1
JSONの接種記録の構造です

00:30:37.037 --> 00:30:38.672 align:start position:34% line:-1
実際にやってみます

00:30:40.140 --> 00:30:43.243 align:start position:16% line:-1
ViewControllerに戻ります

00:30:43.777 --> 00:30:47.815 align:start position:23% line:-1
事前にいくつか処理をしています

00:30:48.515 --> 00:30:53.153 align:start position:25% line:-2
showChecklistの
プロパティで例示します

00:30:54.454 --> 00:30:58.292 align:start position:34% line:-2
チェックリストに
データを追加します

00:30:59.193 --> 00:31:02.196 align:start position:30% line:-2
ワクチンのメソッドへの
クエリです

00:30:59.193 --> 00:31:02.196 align:start position:30% line:-2
ワクチンのメソッドへの
クエリです

00:31:02.729 --> 00:31:07.134 align:start position:18% line:-2
matchCodedVaccineを
呼び出し―

00:31:07.568 --> 00:31:11.338 align:start position:23% line:-2
サンプルが
FHIRのリソースならパスです

00:31:11.972 --> 00:31:13.474 align:start position:39% line:-1
やってみます

00:31:16.343 --> 00:31:19.780 align:start position:11% line:-1
画面はmatchCodedVaccineです

00:31:19.880 --> 00:31:23.784 align:start position:29% line:-2
FHIRリソースデータを
デシリアライズし―

00:31:24.351 --> 00:31:27.821 align:start position:34% line:-2
ワクチンコードで
CVXを検索します

00:31:27.921 --> 00:31:32.726 align:start position:27% line:-2
そして異なる疾患のリストと
比較します

00:31:33.861 --> 00:31:37.965 align:start position:29% line:-2
デシリアライズする方法は
自由に選べます

00:31:38.098 --> 00:31:40.767 align:start position:14% line:-1
今日はSwift Codableにします

00:31:41.001 --> 00:31:45.572 align:start position:27% line:-2
興味のあるキーを求めて
Codableを定義します

00:31:48.141 --> 00:31:49.209 align:start position:41% line:-1
できました

00:31:49.510 --> 00:31:52.546 align:start position:30% line:-1
ワクチンコードがあり―

00:31:53.247 --> 00:31:56.417 align:start position:36% line:-2
それはコード列を
持っています

00:31:56.917 --> 00:32:00.988 align:start position:29% line:-2
ワクチンのコーディングは
システムとコードです

00:31:56.917 --> 00:32:00.988 align:start position:29% line:-2
ワクチンのコーディングは
システムとコードです

00:32:02.623 --> 00:32:06.627 align:start position:27% line:-1
JSONデコーダの例示です

00:32:07.294 --> 00:32:11.999 align:start position:29% line:-2
これでFHIRリソースの
データをデコードします

00:32:13.767 --> 00:32:17.504 align:start position:27% line:-1
コーディングを繰り返して―

00:32:18.472 --> 00:32:21.542 align:start position:25% line:-1
システムはCVXか確認します

00:32:24.078 --> 00:32:28.382 align:start position:29% line:-2
コードをパスして
データソースに記録します

00:32:28.782 --> 00:32:34.054 align:start position:27% line:-2
全てのメソッドで
疾患別のコードと比較します

00:32:34.154 --> 00:32:38.892 align:start position:23% line:-1
一致したら その疾患のUIで―

00:32:39.359 --> 00:32:41.628 align:start position:38% line:-1
記録を残します

00:32:43.030 --> 00:32:47.334 align:start position:27% line:-2
ワクチンのチェックリストを
作ってみます

00:32:48.235 --> 00:32:49.803 align:start position:32% line:-1
トレーニングログです

00:32:50.037 --> 00:32:52.539 align:start position:30% line:-1
ワクチンのタブをタップ

00:32:53.440 --> 00:32:57.110 align:start position:27% line:-2
ワクチンの
チェックリストができました

00:32:57.211 --> 00:33:01.982 align:start position:43% line:-1
（拍手）

00:32:57.211 --> 00:33:01.982 align:start position:43% line:-1
（拍手）

00:33:03.116 --> 00:33:05.853 align:start position:29% line:-1
FHIRの問題解決例です

00:33:06.386 --> 00:33:12.659 align:start position:27% line:-2
ユーザ同意について
ジェイソンからお話しします

00:33:13.260 --> 00:33:14.294 align:start position:41% line:-1
ジェイソン

00:33:15.262 --> 00:33:19.500 align:start position:43% line:-1
（拍手）

00:33:19.766 --> 00:33:20.634 align:start position:41% line:-1
ありがとう

00:33:20.801 --> 00:33:21.935 align:start position:38% line:-1
ペイトンから―

00:33:23.036 --> 00:33:27.908 align:start position:30% line:-2
FHIRデータの
呼び出し方の紹介でした

00:33:28.075 --> 00:33:33.013 align:start position:27% line:-2
ヘルスケアレコードについて
重要な情報を提供する―

00:33:33.113 --> 00:33:37.151 align:start position:27% line:-2
コーディングの活用の話題も
ありました

00:33:39.920 --> 00:33:46.827 align:start position:21% line:-2
ユーザのプライバシー保護について
少し考えてみたいと思います

00:33:47.494 --> 00:33:50.998 align:start position:32% line:-2
これらのデータは
とてもデリケートです

00:33:51.698 --> 00:33:55.068 align:start position:23% line:-1
徹底的にプライバシーを保護し―

00:33:55.235 --> 00:34:01.308 align:start position:27% line:-2
直接医療機関へ
接続できるようにしています

00:33:55.235 --> 00:34:01.308 align:start position:27% line:-2
直接医療機関へ
接続できるようにしています

00:34:01.875 --> 00:34:06.146 align:start position:34% line:-2
情報はデバイスに
ダウンロードでき―

00:34:06.480 --> 00:34:09.248 align:start position:32% line:-2
HealthKitで
安全に保管されます

00:34:09.817 --> 00:34:12.753 align:start position:29% line:-1
データへのアクセスには―

00:34:12.853 --> 00:34:14.955 align:start position:30% line:-1
管理ツールも提供します

00:34:16.389 --> 00:34:18.659 align:start position:32% line:-1
ユーザが求めるのは―

00:34:18.759 --> 00:34:22.996 align:start position:23% line:-1
個人データの慎重な取り扱いです

00:34:25.331 --> 00:34:30.603 align:start position:29% line:-2
どんな選択をしても
個人に直接影響を与えます

00:34:31.405 --> 00:34:33.974 align:start position:36% line:-1
プラスの影響です

00:34:34.074 --> 00:34:37.777 align:start position:20% line:-1
そのために このAPIを選びました

00:34:38.378 --> 00:34:40.647 align:start position:25% line:-1
ですが悪影響も否定できません

00:34:41.014 --> 00:34:44.551 align:start position:27% line:-1
データが扱えなくなったり―

00:34:44.751 --> 00:34:48.489 align:start position:32% line:-2
同意なく
共有されたりしたら―

00:34:49.255 --> 00:34:54.460 align:start position:32% line:-2
誠意を見せて
信頼関係を構築します

00:34:54.928 --> 00:34:58.732 align:start position:34% line:-2
データに関する
ポリシーを提示し―

00:34:59.500 --> 00:35:01.769 align:start position:32% line:-1
対応を知らせるのです

00:34:59.500 --> 00:35:01.769 align:start position:32% line:-1
対応を知らせるのです

00:35:02.669 --> 00:35:08.108 align:start position:27% line:-2
これはアプリケーションを
作った時点で始まっています

00:35:08.208 --> 00:35:10.711 align:start position:25% line:-1
そしてデータを取り扱う限り―

00:35:10.811 --> 00:35:14.748 align:start position:23% line:-1
それは どの段階でも続くのです

00:35:16.149 --> 00:35:20.053 align:start position:27% line:-1
例えばデータ管理の詳細を―

00:35:20.254 --> 00:35:23.223 align:start position:25% line:-1
ユーザに伝えることは大事です

00:35:23.557 --> 00:35:26.760 align:start position:23% line:-1
リテンションポリシーの公表や―

00:35:26.860 --> 00:35:32.833 align:start position:27% line:-2
データを削除できる
ツールの提供も行うべきです

00:35:35.636 --> 00:35:38.939 align:start position:29% line:-2
最終的には
ユースケースに比例した―

00:35:39.339 --> 00:35:42.042 align:start position:29% line:-1
データを依頼するべきです

00:35:42.376 --> 00:35:45.412 align:start position:23% line:-1
必要以上のデータを求めないこと

00:35:48.382 --> 00:35:51.251 align:start position:32% line:-2
木曜の午後４時からの
セッション―

00:35:51.351 --> 00:35:55.155 align:start position:14% line:-2
Better Apps Through
Better Privacyもお薦めです

00:35:55.255 --> 00:35:58.458 align:start position:25% line:-1
エコシステムにも触れていて―

00:35:58.559 --> 00:36:00.561 align:start position:30% line:-1
いい気づきを得られます

00:35:58.559 --> 00:36:00.561 align:start position:30% line:-1
いい気づきを得られます

00:36:01.228 --> 00:36:06.033 align:start position:30% line:-2
新しいサンプルタイプを
見てきました

00:36:06.500 --> 00:36:11.438 align:start position:2% line:-2
entitlementやprivacy stringの
配列や―

00:36:11.538 --> 00:36:15.008 align:start position:27% line:-1
承認依頼などを理解しました

00:36:17.177 --> 00:36:23.217 align:start position:27% line:-2
FHIRをもっと知りたいと
思ってくれたらうれしいです

00:36:24.785 --> 00:36:29.656 align:start position:30% line:-2
ユーザのプライバシーを
守る方法も伝えました

00:36:35.629 --> 00:36:41.435 align:start position:27% line:-2
皆さんのアプリケーションに
驚き続けたいです

00:36:41.568 --> 00:36:45.839 align:start position:32% line:-2
ユーザに大きな権限を
与えるものです

00:36:47.341 --> 00:36:52.012 align:start position:16% line:-1
これはHealthKitとの長い旅です

00:36:52.112 --> 00:36:57.151 align:start position:9% line:-2
ResearchKitやCareKitとの旅は
まだ続きます

00:36:57.818 --> 00:37:01.488 align:start position:4% line:-1
Health RecordsやHealthKitと―

00:36:57.818 --> 00:37:01.488 align:start position:4% line:-1
Health RecordsやHealthKitと―

00:37:01.922 --> 00:37:06.326 align:start position:29% line:-2
皆さんとの旅が続くことに
気持ちが弾みます

00:37:06.960 --> 00:37:10.330 align:start position:34% line:-2
今後の展開が
楽しみでなりません

00:37:13.801 --> 00:37:19.106 align:start position:27% line:-2
お話しした資料は
画面のURLで入手できます

00:37:19.573 --> 00:37:24.545 align:start position:27% line:-2
この後すぐ
健康に関するラボを行います

00:37:24.645 --> 00:37:28.148 align:start position:27% line:-1
新しいAPIを始めましょう

00:37:28.782 --> 00:37:33.487 align:start position:27% line:-2
明日の朝 同僚のニハリカと
カリームが―

00:37:33.587 --> 00:37:36.390 align:start position:21% line:-1
新たなワークアウトをご紹介します

00:37:36.823 --> 00:37:40.828 align:start position:30% line:-2
また明日の夜は
懇親会を予定しています

00:37:40.928 --> 00:37:45.466 align:start position:34% line:-2
お互いを知る
いい機会ですので―

00:37:45.599 --> 00:37:47.868 align:start position:32% line:-1
ぜひ ご参加ください

00:37:49.803 --> 00:37:53.340 align:start position:34% line:-2
他のセッションも
どうぞ お楽しみを

00:37:53.440 --> 00:37:57.111 align:start position:43% line:-1
（拍手）
