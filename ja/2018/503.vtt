WEBVTT

00:00:07.040 --> 00:00:16.550 align:start position:43% line:-1
（音楽）

00:00:17.251 --> 00:00:19.853 align:start position:43% line:-1
（拍手）

00:00:20.487 --> 00:00:21.688 align:start position:43% line:-1
ようこそ

00:00:23.390 --> 00:00:27.794 align:start position:25% line:-2
Core Imageチームの
エマニュエルです

00:00:28.462 --> 00:00:32.766 align:start position:30% line:-2
深度データを使った
エフェクトの話をします

00:00:34.935 --> 00:00:36.170 align:start position:43% line:-1
始めます

00:00:36.870 --> 00:00:42.543 align:start position:27% line:-2
iOS 11から顔の画像に
深度データが加わりました

00:00:43.410 --> 00:00:48.515 align:start position:23% line:-2
昨年のWWDCで このデータを
応用した例を紹介しました

00:00:48.615 --> 00:00:52.386 align:start position:36% line:-2
被写界深度で
遠近感を出したり

00:00:52.486 --> 00:00:55.522 align:start position:30% line:-2
前景と背景を
別々に変化させた例です

00:00:56.523 --> 00:01:00.794 align:start position:27% line:-2
今年は新しい魅力的な技術を
紹介します

00:00:56.523 --> 00:01:00.794 align:start position:27% line:-2
今年は新しい魅力的な技術を
紹介します

00:01:01.595 --> 00:01:03.363 align:start position:21% line:-1
Portrait Matteです

00:01:05.833 --> 00:01:08.402 align:start position:29% line:-1
このセッションの前半では

00:01:08.502 --> 00:01:12.172 align:start position:34% line:-2
顔画像に施す
エフェクトについて

00:01:12.873 --> 00:01:16.743 align:start position:27% line:-2
後半では
動画加工について説明します

00:01:16.844 --> 00:01:20.180 align:start position:20% line:-1
TrueDepthカメラの応用です

00:01:22.916 --> 00:01:26.019 align:start position:7% line:-2
まず Portrait Segmentation
APIからです

00:01:27.054 --> 00:01:29.423 align:start position:16% line:-1
Portrait Matteとは何か？

00:01:29.523 --> 00:01:32.826 align:start position:29% line:-1
これは前景と背景を分割し

00:01:32.926 --> 00:01:36.196 align:start position:29% line:-2
マスクを使って効果を出す
手法です

00:01:36.296 --> 00:01:40.868 align:start position:27% line:-2
前景は白（1.0）
背景は黒（0.0）で表され

00:01:40.968 --> 00:01:43.804 align:start position:34% line:-2
境界近くは
グレイに近い色です

00:01:46.440 --> 00:01:50.377 align:start position:36% line:-2
優れた細部描写も
実現しました

00:01:50.477 --> 00:01:55.816 align:start position:29% line:-2
髪のカールの輪郭まで
はっきり表現されています

00:01:58.085 --> 00:02:00.954 align:start position:18% line:-1
Portrait Matteを使うと

00:01:58.085 --> 00:02:00.954 align:start position:18% line:-1
Portrait Matteを使うと

00:02:01.054 --> 00:02:06.994 align:start position:27% line:-2
背景を暗くして 前景を
浮き立たせることもできます

00:02:07.394 --> 00:02:11.431 align:start position:30% line:-2
これで魅力的な
アプリケーションを作り

00:02:11.532 --> 00:02:14.301 align:start position:34% line:-2
ユーザを
引き付けてください

00:02:16.737 --> 00:02:21.808 align:start position:23% line:-2
Portrait Matteは
iOS 12に搭載されます

00:02:24.077 --> 00:02:27.848 align:start position:30% line:-2
前面と背面の
両方のカメラで利用でき

00:02:29.983 --> 00:02:36.023 align:start position:29% line:-2
人物の顔画像が写っている
場合にのみ使えます

00:02:37.124 --> 00:02:40.460 align:start position:30% line:-2
ガンマではなく
リニアエンコードのため

00:02:40.561 --> 00:02:43.764 align:start position:34% line:-2
グレイスケールの
バッファがあります

00:02:45.532 --> 00:02:49.770 align:start position:36% line:-2
必ず使えるという
保証はないため

00:02:49.870 --> 00:02:54.575 align:start position:32% line:-2
まず深度データの
テストをしてください

00:02:56.143 --> 00:02:59.613 align:start position:36% line:-2
APIでデータを
ロードしてみます

00:03:00.414 --> 00:03:05.686 align:start position:5% line:-2
Image I/OはPortrait Matteに
適したAPIです

00:03:06.153 --> 00:03:10.490 align:start position:18% line:-2
CGImageSourceCopyを
呼び出すと

00:03:10.591 --> 00:03:14.294 align:start position:4% line:-2
kCGImageAuxiliaryDataType
PortraitEffectsMatteキーが出ます

00:03:15.062 --> 00:03:18.565 align:start position:27% line:-2
これで情報を３つ含む
ディクショナリが返されます

00:03:19.132 --> 00:03:21.702 align:start position:23% line:-1
画像データCFDataRefと

00:03:23.103 --> 00:03:26.673 align:start position:29% line:-2
バッファのあるメタデータ
CFDictionary

00:03:27.040 --> 00:03:31.478 align:start position:27% line:-2
もう１つはキャプチャを含む
メタデータです

00:03:33.180 --> 00:03:38.485 align:start position:20% line:-2
AVFoundationは
Image I/OのあるAPIです

00:03:38.852 --> 00:03:41.655 align:start position:12% line:-1
画像をCGImageSouceCopyから

00:03:41.755 --> 00:03:44.758 align:start position:9% line:-2
AVPortraitEffectsMatteに
フィードし

00:03:47.928 --> 00:03:53.934 align:start position:23% line:-2
ピクセルのフォーマットタイプと
CVピクセルバッファを得たら

00:03:54.034 --> 00:03:58.972 align:start position:32% line:-2
このバッファを使って
加工が行えます

00:04:00.941 --> 00:04:05.345 align:start position:27% line:-2
AVFoundationは
キャプチャタイムも含みます

00:04:05.445 --> 00:04:08.382 align:start position:27% line:-2
AVFoundationの
セットアップ時には

00:04:08.482 --> 00:04:12.452 align:start position:2% line:-2
CaptureInput CaputrueDevice
CaptureSessionを入れます

00:04:13.453 --> 00:04:18.058 align:start position:30% line:-2
まず環境確認のため
以下のコードを使います

00:04:18.158 --> 00:04:22.095 align:start position:0% line:-1
isDepthDataDeliverySupportedと

00:04:22.196 --> 00:04:24.965 align:start position:11% line:-2
isPortraitEffectsMatte
DeliverySupportedです

00:04:25.065 --> 00:04:29.336 align:start position:12% line:-2
DepthとPortrait Matteの
２つが必要な理由は

00:04:29.436 --> 00:04:32.472 align:start position:12% line:-1
Portrait Matteを利用するには

00:04:32.573 --> 00:04:37.477 align:start position:27% line:-2
深度データも引き渡す必要が
あるからです

00:04:38.011 --> 00:04:43.717 align:start position:4% line:-2
利用するためには
AVCapturePhotoSettingsを修正し

00:04:43.817 --> 00:04:49.256 align:start position:23% line:-2
Portrait Matteと
深度データを引き渡します

00:04:50.724 --> 00:04:56.196 align:start position:0% line:-2
キャプチャタイムは
didFinishProcessingPhoto callback

00:04:56.997 --> 00:04:58.365 align:start position:41% line:-1
簡単ですね

00:05:00.033 --> 00:05:05.005 align:start position:2% line:-2
Core ImageではPortrait Matteを
保存できます

00:05:05.405 --> 00:05:11.345 align:start position:0% line:-2
auxiliaryPortrait EffectsMatteで
URLのコンテンツに引き渡され

00:05:11.445 --> 00:05:14.982 align:start position:9% line:-2
CIImageがPortrait Matteに
反映されます

00:05:18.519 --> 00:05:24.191 align:start position:23% line:-2
Portrait Matteが
直接ファイルに保存され

00:05:24.291 --> 00:05:29.196 align:start position:4% line:-2
portraitEffectsMatteImageと
いうオプションができます

00:05:29.296 --> 00:05:32.199 align:start position:12% line:-2
CIImageに
Portrait Matteが加わるのです

00:05:32.566 --> 00:05:34.968 align:start position:0% line:-2
writeHEIFRepresntationOfImageを
使い

00:05:35.068 --> 00:05:36.970 align:start position:29% line:-1
ディスクに保存もできます

00:05:37.070 --> 00:05:42.075 align:start position:30% line:-2
３つのイメージに対する
注意点があります

00:05:42.176 --> 00:05:48.115 align:start position:20% line:-2
RGBとDepthとMatteには
解像度の違いがあるのです

00:05:49.082 --> 00:05:54.988 align:start position:18% line:-2
リアカメラでMatteはRGBの半分
Depthはそれ以下です

00:05:55.355 --> 00:05:58.859 align:start position:34% line:-2
リアカメラの画像を
比べてみましょう

00:05:59.660 --> 00:06:03.664 align:start position:34% line:-2
アプリケーションで
低解像度処理し

00:05:59.660 --> 00:06:03.664 align:start position:34% line:-2
アプリケーションで
低解像度処理し

00:06:03.764 --> 00:06:09.069 align:start position:23% line:-2
RGBをDepthとMatte
まで縮小するか

00:06:09.303 --> 00:06:12.739 align:start position:23% line:-2
反対にDepthとMatteを
RGBに合わせます

00:06:14.107 --> 00:06:18.145 align:start position:4% line:-1
Portrait Segmentation APIの

00:06:18.245 --> 00:06:21.748 align:start position:36% line:-2
すばらしいデモを
お見せしよう

00:06:23.584 --> 00:06:28.155 align:start position:20% line:-2
ブラウザベースの
Jupiter Notebookで

00:06:28.255 --> 00:06:31.191 align:start position:30% line:-1
Pythonを使います

00:06:33.193 --> 00:06:36.396 align:start position:25% line:-1
Pythonバインディングを

00:06:36.496 --> 00:06:40.000 align:start position:16% line:-2
Core Imageに使うセッションも
別にあります

00:06:44.571 --> 00:06:49.810 align:start position:20% line:-2
まずDepthとMatteの画像を
ロードします

00:06:49.910 --> 00:06:51.912 align:start position:34% line:-1
この画像を使います

00:06:54.114 --> 00:06:59.052 align:start position:16% line:-2
まずDepthとMatteのイメージを
お見せします

00:06:59.152 --> 00:07:02.723 align:start position:18% line:-1
左がDepthで 右がMatteです

00:06:59.152 --> 00:07:02.723 align:start position:18% line:-1
左がDepthで 右がMatteです

00:07:02.823 --> 00:07:05.125 align:start position:30% line:-1
細部までよく見えますね

00:07:05.225 --> 00:07:09.029 align:start position:30% line:-2
あとで
ズームしてお見せします

00:07:09.129 --> 00:07:12.699 align:start position:36% line:-2
より精度の高さが
分かるはずです

00:07:14.768 --> 00:07:16.970 align:start position:32% line:-1
次に大きさを変えます

00:07:17.271 --> 00:07:21.041 align:start position:34% line:-2
RGBデータは
サイズが大きいため

00:07:21.842 --> 00:07:27.748 align:start position:16% line:-2
Depthのサイズを変え RGBを右に
Depthを左に並べます

00:07:28.048 --> 00:07:31.018 align:start position:21% line:-1
Depthデータから説明しますが

00:07:31.118 --> 00:07:35.222 align:start position:12% line:-1
Portrait Matteの方が簡単です

00:07:36.323 --> 00:07:40.794 align:start position:30% line:-2
Depthと比較して
効果を実感してください

00:07:40.894 --> 00:07:45.632 align:start position:23% line:-2
Depthではグレイレベル値の
ヒストグラムを計算します

00:07:45.899 --> 00:07:49.002 align:start position:32% line:-2
ヒストグラムで
しきい値を測ることで

00:07:49.102 --> 00:07:53.774 align:start position:27% line:-2
それ以下か以上になった時に
ゼロか１かが分かります

00:07:54.174 --> 00:07:58.679 align:start position:27% line:-2
モフォロジーで
クロージング処理をしたあと

00:07:58.779 --> 00:08:03.350 align:start position:27% line:-2
マスクをぼかし
柔らかい表現にしていきます

00:07:58.779 --> 00:08:03.350 align:start position:27% line:-2
マスクをぼかし
柔らかい表現にしていきます

00:08:03.650 --> 00:08:05.752 align:start position:34% line:-1
では やってみます

00:08:06.386 --> 00:08:11.658 align:start position:25% line:-2
Core Imageを使って
作業を行います

00:08:12.459 --> 00:08:17.297 align:start position:32% line:-2
最初にマスクの割合を
変えてみます

00:08:17.865 --> 00:08:20.968 align:start position:32% line:-2
割合を高めると
前景が切り取られます

00:08:21.068 --> 00:08:24.872 align:start position:27% line:-1
これくらいが適当でしょうか

00:08:25.072 --> 00:08:30.744 align:start position:30% line:-2
前景に消えている部分が
あるのが分かりますね

00:08:30.844 --> 00:08:33.380 align:start position:29% line:-1
被写体の一部を削除する―

00:08:33.547 --> 00:08:36.683 align:start position:27% line:-2
モフォロジークロージングを
しています

00:08:36.783 --> 00:08:38.818 align:start position:32% line:-1
このようになりました

00:08:38.919 --> 00:08:42.556 align:start position:32% line:-2
消しすぎると
何も見えなくなります

00:08:43.023 --> 00:08:44.491 align:start position:36% line:-1
このくらいにして

00:08:44.791 --> 00:08:49.029 align:start position:32% line:-2
今度は マスクの上に
ぼかしを入れます

00:08:49.129 --> 00:08:51.565 align:start position:27% line:-1
RGBを合成してみましょう

00:08:51.865 --> 00:08:56.770 align:start position:30% line:-2
マスクの働きは
これだけではありません

00:08:58.005 --> 00:09:01.141 align:start position:36% line:-2
しきい値の
パラメータを選び

00:08:58.005 --> 00:09:01.141 align:start position:36% line:-2
しきい値の
パラメータを選び

00:09:01.241 --> 00:09:03.810 align:start position:32% line:-1
これを前景に使います

00:09:07.080 --> 00:09:10.317 align:start position:32% line:-2
次は前景だけに
エフェクトを施します

00:09:10.417 --> 00:09:15.823 align:start position:16% line:-2
Core Imageのグレイスケールで
コントラストを付けます

00:09:16.056 --> 00:09:18.158 align:start position:36% line:-1
露出を調整して―

00:09:18.859 --> 00:09:23.497 align:start position:29% line:-2
彩度を減らし
コントラストを強くします

00:09:23.797 --> 00:09:27.201 align:start position:27% line:-1
これは前景を使った効果です

00:09:27.301 --> 00:09:32.806 align:start position:36% line:-2
次に深度データの
マスクを使い

00:09:32.906 --> 00:09:35.709 align:start position:30% line:-1
前景を背景と合成します

00:09:36.243 --> 00:09:40.614 align:start position:29% line:-2
最初の画像より暗い背景に
してみましょう

00:09:42.649 --> 00:09:46.720 align:start position:5% line:-2
Core ImageのblendWithMaskで
合成させます

00:09:48.655 --> 00:09:51.191 align:start position:38% line:-1
これが結果です

00:09:52.392 --> 00:09:53.293 align:start position:41% line:-1
いいですね

00:09:55.028 --> 00:09:55.963 align:start position:41% line:-1
ありがとう

00:09:56.096 --> 00:09:58.999 align:start position:43% line:-1
（拍手）

00:09:59.099 --> 00:10:03.704 align:start position:30% line:-2
今は切り抜き部分の
パラメータを変えました

00:09:59.099 --> 00:10:03.704 align:start position:30% line:-2
今は切り抜き部分の
パラメータを変えました

00:10:03.804 --> 00:10:06.106 align:start position:34% line:-2
柔らかいイメージに
するためです

00:10:06.206 --> 00:10:11.512 align:start position:23% line:-2
Portrait Matteは
もっと簡単です

00:10:11.612 --> 00:10:13.747 align:start position:32% line:-1
こちらを見てください

00:10:14.715 --> 00:10:16.450 align:start position:34% line:-1
違う画像を使います

00:10:18.118 --> 00:10:23.857 align:start position:23% line:-2
DepthとMatteの情報が
入っています

00:10:24.858 --> 00:10:29.563 align:start position:34% line:-2
非常に優れた
前景のマスクですよ

00:10:29.663 --> 00:10:33.066 align:start position:29% line:-1
髪の一部を見てみましょう

00:10:35.235 --> 00:10:37.404 align:start position:32% line:-1
細部まできれいですね

00:10:37.504 --> 00:10:43.477 align:start position:30% line:-2
右のDepthデータは
Matteより粗いです

00:10:44.811 --> 00:10:47.381 align:start position:27% line:-1
結果の違いを見てみましょう

00:10:47.481 --> 00:10:51.051 align:start position:30% line:-2
同じことをMatteを
使って行います

00:10:51.718 --> 00:10:55.789 align:start position:34% line:-2
先ほどと似た前景を
使っていますが

00:10:55.889 --> 00:11:00.727 align:start position:30% line:-2
前景の彩度を少し下げ
自然な感じに仕上げます

00:10:55.889 --> 00:11:00.727 align:start position:30% line:-2
前景の彩度を少し下げ
自然な感じに仕上げます

00:11:03.297 --> 00:11:07.768 align:start position:30% line:-2
Core Imageで
背景にぼかしを入れ

00:11:07.868 --> 00:11:10.637 align:start position:32% line:-1
露出を抑え暗くします

00:11:10.737 --> 00:11:14.842 align:start position:30% line:-2
かなりぼやけていますが
何となく見えます

00:11:16.009 --> 00:11:20.981 align:start position:23% line:-2
マスクにCI blendを使い
合成させると

00:11:21.181 --> 00:11:22.583 align:start position:34% line:-1
右のようになります

00:11:23.016 --> 00:11:24.351 align:start position:39% line:-1
美しいですね

00:11:24.852 --> 00:11:27.754 align:start position:43% line:-1
（拍手）

00:11:27.855 --> 00:11:28.789 align:start position:41% line:-1
ありがとう

00:11:29.323 --> 00:11:34.228 align:start position:25% line:-2
次はBig Headのデモを
お見せします

00:11:34.995 --> 00:11:40.234 align:start position:21% line:-2
Portrait Matteでは
背景に対して

00:11:40.334 --> 00:11:42.369 align:start position:27% line:-1
被写体サイズを変えられます

00:11:42.569 --> 00:11:45.272 align:start position:30% line:-1
では やってみましょう

00:11:46.640 --> 00:11:51.612 align:start position:23% line:-2
左に人物画像
右にMatteデータがあります

00:11:52.880 --> 00:11:58.819 align:start position:29% line:-2
これから被写体のサイズを
変えてみますよ

00:11:59.119 --> 00:12:02.689 align:start position:32% line:-2
大きくなったり
小さくなったりします

00:11:59.119 --> 00:12:02.689 align:start position:32% line:-2
大きくなったり
小さくなったりします

00:12:03.056 --> 00:12:08.061 align:start position:32% line:-2
もう少し被写体を
強調したいと思ったら

00:12:08.161 --> 00:12:11.698 align:start position:27% line:-1
他にも面白いことができます

00:12:11.798 --> 00:12:15.235 align:start position:29% line:-1
まず被写体のサイズを決め

00:12:15.569 --> 00:12:21.141 align:start position:29% line:-2
深度データを変えることで
背景をぼかします

00:12:21.375 --> 00:12:24.478 align:start position:32% line:-2
それにより
被写体が引き立ちます

00:12:26.413 --> 00:12:29.883 align:start position:34% line:-1
次も簡単にできます

00:12:29.983 --> 00:12:34.788 align:start position:20% line:-2
同じように
Portrait Matteを使い

00:12:34.888 --> 00:12:37.157 align:start position:30% line:-1
前景と背景をぼかします

00:12:38.392 --> 00:12:43.564 align:start position:30% line:-2
次に画像のサイズを変え
被写体を大きくしたら

00:12:43.764 --> 00:12:48.001 align:start position:30% line:-2
焦点が当たるように
コントラストを付けます

00:12:48.635 --> 00:12:50.571 align:start position:36% line:-1
非常に簡単ですね

00:12:51.138 --> 00:12:55.475 align:start position:43% line:-1
（拍手）

00:12:55.576 --> 00:13:00.447 align:start position:23% line:-1
次はMarchingのデモです

00:12:55.576 --> 00:13:00.447 align:start position:23% line:-1
次はMarchingのデモです

00:13:00.547 --> 00:13:05.185 align:start position:29% line:-2
説明より見てもらった方が
よさそうです

00:13:09.723 --> 00:13:12.059 align:start position:38% line:-1
楽しいですよね

00:13:12.192 --> 00:13:16.063 align:start position:32% line:-2
いくつでも
増やすことができます

00:13:16.263 --> 00:13:20.868 align:start position:27% line:-1
どこまでも続けられるのです

00:13:21.802 --> 00:13:23.370 align:start position:38% line:-1
面白いですよね

00:13:25.038 --> 00:13:26.139 align:start position:39% line:-1
どうでしょう

00:13:28.742 --> 00:13:32.880 align:start position:32% line:-2
デモを楽しんで
いただけたでしょうか

00:13:33.814 --> 00:13:39.586 align:start position:23% line:-2
午後にはCore Imageで
Pythonを使うセッション

00:13:39.686 --> 00:13:42.489 align:start position:4% line:-2
Core Image Performance
Prototyping in Pythonもあります

00:13:44.825 --> 00:13:47.995 align:start position:30% line:-2
次はビデオエンジニアの
ロンによる

00:13:48.095 --> 00:13:51.532 align:start position:21% line:-2
TrueDepthカメラを使った
映像です

00:13:51.632 --> 00:13:52.733 align:start position:41% line:-1
さようなら

00:13:52.833 --> 00:13:57.805 align:start position:43% line:-1
（拍手）

00:13:59.106 --> 00:14:00.474 align:start position:41% line:-1
交替しよう

00:13:59.106 --> 00:14:00.474 align:start position:41% line:-1
交替しよう

00:14:01.008 --> 00:14:04.044 align:start position:34% line:-2
映像でできることは
何でしょう？

00:14:04.745 --> 00:14:08.382 align:start position:34% line:-2
ビデオエンジニアの
ロンです

00:14:10.517 --> 00:14:13.220 align:start position:27% line:-2
TrueDepthカメラを
使った―

00:14:13.320 --> 00:14:16.857 align:start position:30% line:-2
リアルタイム映像効果の
説明をします

00:14:17.124 --> 00:14:20.060 align:start position:29% line:-2
例えば 背景映像を変える
アプリケーション

00:14:22.930 --> 00:14:28.802 align:start position:21% line:-2
我々はTrueDepthカメラを
探究しています

00:14:29.069 --> 00:14:32.439 align:start position:36% line:-2
特徴や手法を探る
挑戦の日々です

00:14:34.208 --> 00:14:37.945 align:start position:34% line:-2
ポイントクラウドを
使うことで

00:14:38.045 --> 00:14:40.948 align:start position:30% line:-2
深度データを
より豊かに利用できます

00:14:41.448 --> 00:14:44.351 align:start position:29% line:-2
アプリケーションの名前は
Backdropです

00:14:44.451 --> 00:14:47.321 align:start position:32% line:-1
順を追って説明します

00:14:47.988 --> 00:14:49.790 align:start position:38% line:-1
まず 確認です

00:14:50.290 --> 00:14:54.695 align:start position:27% line:-2
TrueDepthカメラの
各フレームは深度マップです

00:14:54.795 --> 00:14:58.999 align:start position:30% line:-2
各ピクセルに
深度情報が入っています

00:14:59.099 --> 00:15:01.969 align:start position:27% line:-1
距離情報を持っているのです

00:14:59.099 --> 00:15:01.969 align:start position:27% line:-1
距離情報を持っているのです

00:15:04.471 --> 00:15:06.940 align:start position:30% line:-1
それは色彩で表されます

00:15:07.040 --> 00:15:12.679 align:start position:27% line:-2
近くのピクセルは赤
最も遠くのピクセルは青です

00:15:12.779 --> 00:15:15.349 align:start position:30% line:-1
その間はスペクトルです

00:15:15.449 --> 00:15:18.385 align:start position:36% line:-1
これが深度マップ

00:15:20.320 --> 00:15:24.057 align:start position:34% line:-2
黒いピクセルは
深度マップの穴です

00:15:24.158 --> 00:15:28.128 align:start position:34% line:-2
穴の部分の
深度は分かりません

00:15:28.695 --> 00:15:32.399 align:start position:34% line:-2
今日紹介する
アプリケーションは

00:15:32.499 --> 00:15:37.004 align:start position:14% line:-1
TrueDepth Streamerです

00:15:38.572 --> 00:15:44.077 align:start position:18% line:-2
映像とTrueDepthストリームを
スライドできます

00:15:46.713 --> 00:15:50.951 align:start position:27% line:-2
TrueDepthカメラの
色彩は動きと連動し

00:15:51.385 --> 00:15:56.223 align:start position:30% line:-2
まったくの暗闇で
映像が真っ黒であっても

00:15:56.590 --> 00:15:59.359 align:start position:34% line:-1
カメラは作動します

00:16:01.962 --> 00:16:05.232 align:start position:36% line:-2
私が見えたり
消えたりしますよ

00:16:05.332 --> 00:16:09.236 align:start position:43% line:-1
（拍手）

00:16:09.970 --> 00:16:14.441 align:start position:32% line:-2
アプリケーションに
これを組み込むには？

00:16:14.842 --> 00:16:19.780 align:start position:21% line:-2
まずは内蔵の
TrueDepthカメラを見つけ

00:16:21.148 --> 00:16:24.751 align:start position:29% line:-1
キャプチャ入力を初期化し

00:16:26.220 --> 00:16:29.189 align:start position:32% line:-1
深度データを加えます

00:16:30.023 --> 00:16:35.662 align:start position:18% line:-2
これでTrueDepthストリームが
使えます

00:16:37.531 --> 00:16:42.669 align:start position:27% line:-2
ストリームには　ばらつきと
深度データがあります

00:16:42.936 --> 00:16:45.772 align:start position:34% line:-2
横の広がりと深度は
相反するものです

00:16:45.873 --> 00:16:47.708 align:start position:32% line:-1
どちらを選ぶべきか？

00:16:48.542 --> 00:16:52.179 align:start position:36% line:-2
横の広がりの方が
機械学習などでは

00:16:52.279 --> 00:16:54.848 align:start position:34% line:-1
よい結果を出します

00:16:55.048 --> 00:16:59.319 align:start position:32% line:-2
しかし深度データは
現実世界では重要です

00:16:59.920 --> 00:17:02.122 align:start position:39% line:-1
深度を使うと

00:16:59.920 --> 00:17:02.122 align:start position:39% line:-1
深度を使うと

00:17:03.223 --> 00:17:07.060 align:start position:32% line:-2
深度のエラーは
深度の２乗で進みます

00:17:07.161 --> 00:17:12.598 align:start position:23% line:-2
１メートル先の物体の精度は
２メートル先の物体より４倍高い

00:17:16.103 --> 00:17:21.407 align:start position:27% line:-2
映像と深度は必ずしも
合っている必要はないのです

00:17:21.942 --> 00:17:26.713 align:start position:20% line:-2
TrueDepthカメラの解像度は
640X480ドット

00:17:26.813 --> 00:17:32.653 align:start position:25% line:-2
ビデオ設定だとアスペクト比は
４対３になります

00:17:33.086 --> 00:17:36.790 align:start position:25% line:-1
アスペクト比16対９を選べば

00:17:36.890 --> 00:17:40.761 align:start position:32% line:-2
深度マップの解像度は
640X360ドット

00:17:40.861 --> 00:17:46.567 align:start position:23% line:-2
どちらでも深度マップは
RGBの全視野をカバーできます

00:17:48.268 --> 00:17:53.707 align:start position:29% line:-2
映像では大量のデータを
迅速に処理する必要があり

00:17:53.807 --> 00:17:57.077 align:start position:27% line:-1
システムに負荷がかかります

00:17:58.111 --> 00:18:02.015 align:start position:23% line:-2
アプリケーションがかける負荷を
テストでき―

00:17:58.111 --> 00:18:02.015 align:start position:23% line:-2
アプリケーションがかける負荷を
テストでき―

00:18:02.115 --> 00:18:07.287 align:start position:25% line:-2
レベルは微少から重大 さらに
シャットダウンまであります

00:18:07.421 --> 00:18:09.923 align:start position:30% line:-1
責任を持って行わないと

00:18:10.023 --> 00:18:13.260 align:start position:36% line:-2
シャットダウンを
招きかねません

00:18:13.360 --> 00:18:17.664 align:start position:32% line:-2
キャプチャデバイスが
停止してしまいます

00:18:20.000 --> 00:18:23.604 align:start position:27% line:-2
グレードを下げて
負荷を減らす方法もあります

00:18:23.737 --> 00:18:29.009 align:start position:25% line:-2
負荷が高すぎる時は
レートを15fpsにできます

00:18:29.142 --> 00:18:33.380 align:start position:34% line:-2
負荷がそれほどでも
ない場合には

00:18:33.480 --> 00:18:37.951 align:start position:7% line:-2
30fps 24fps 20fps 15fpsと
負荷レベルに応じて

00:18:38.051 --> 00:18:40.754 align:start position:32% line:-1
段階的に変更できます

00:18:43.690 --> 00:18:46.693 align:start position:32% line:-2
深度マップの
データの穴の問題は？

00:18:47.528 --> 00:18:51.932 align:start position:32% line:-2
フィルタがかけられた
ストリームを得たら

00:18:52.032 --> 00:18:56.737 align:start position:16% line:-2
isFilteringEnabledの
デフォルトはtrueです

00:18:57.171 --> 00:19:01.542 align:start position:27% line:-2
フィルタされた深度マップを
自由に使え

00:18:57.171 --> 00:19:01.542 align:start position:27% line:-2
フィルタされた深度マップを
自由に使え

00:19:01.642 --> 00:19:04.878 align:start position:34% line:-2
穴をRGBの画像が
埋めてくれます

00:19:05.379 --> 00:19:09.249 align:start position:25% line:-2
特に写真や
セグメンテーションに有効です

00:19:09.349 --> 00:19:13.654 align:start position:30% line:-2
ピクセルをクエリすると
深度値を得るからです

00:19:15.322 --> 00:19:19.860 align:start position:16% line:-2
TrueDepth Streamerで
フィルタを変えると

00:19:19.960 --> 00:19:23.030 align:start position:36% line:-2
よりスムーズに
穴が埋められます

00:19:25.232 --> 00:19:29.970 align:start position:30% line:-2
効果的ですが
使えない場合もあります

00:19:30.070 --> 00:19:35.275 align:start position:34% line:-2
ポイントクラウドや
現実的な測定なら

00:19:35.375 --> 00:19:40.080 align:start position:25% line:-2
ハイファイのローデータの方が
使えます

00:19:40.681 --> 00:19:45.119 align:start position:29% line:-2
穴の部分の
ピクセルはゼロになります

00:19:45.219 --> 00:19:49.122 align:start position:32% line:-2
カメラから
ゼロメートルではなく

00:19:49.223 --> 00:19:52.092 align:start position:30% line:-1
情報が何もない状態です

00:19:53.527 --> 00:19:56.997 align:start position:30% line:-2
ダウンサンプルなどには
不適切です

00:19:57.097 --> 00:20:01.502 align:start position:30% line:-2
本当の値とゼロが
混ざってしまうからです

00:19:57.097 --> 00:20:01.502 align:start position:30% line:-2
本当の値とゼロが
混ざってしまうからです

00:20:03.604 --> 00:20:05.339 align:start position:38% line:-1
穴の存在とは？

00:20:07.541 --> 00:20:13.046 align:start position:21% line:-2
TrueDepthカメラは
５メートル以内の物を感知しますが

00:20:13.480 --> 00:20:15.482 align:start position:34% line:-1
物の素材は様々です

00:20:15.582 --> 00:20:19.853 align:start position:27% line:-2
反射性が低く
光を吸収する素材もあります

00:20:21.622 --> 00:20:27.294 align:start position:27% line:-2
非常に反射性の低い
素材の場合は こうなります

00:20:27.394 --> 00:20:32.132 align:start position:32% line:-2
深度マップに切り替え
カメラから離れると―

00:20:33.567 --> 00:20:37.571 align:start position:34% line:-2
遠くにある物でも
色が付いていますが

00:20:37.671 --> 00:20:43.377 align:start position:30% line:-2
ある素材は光を吸収し
穴を作ってしまうのです

00:20:43.877 --> 00:20:49.683 align:start position:27% line:-2
フィルタストリームにすると
穴はなくなります

00:20:51.685 --> 00:20:55.289 align:start position:30% line:-2
また 原因は光の反射量
だけではなく

00:20:55.389 --> 00:20:58.425 align:start position:29% line:-1
反射する方角にもよります

00:20:58.992 --> 00:21:02.496 align:start position:36% line:-2
はっきりと明るく
見える素材でも

00:20:58.992 --> 00:21:02.496 align:start position:36% line:-2
はっきりと明るく
見える素材でも

00:21:02.596 --> 00:21:05.165 align:start position:29% line:-1
反射方向では穴が開きます

00:21:06.767 --> 00:21:10.204 align:start position:29% line:-2
映像の中のディスプレイを
見てください

00:21:10.604 --> 00:21:13.740 align:start position:27% line:-1
画面に何かが反射しています

00:21:14.474 --> 00:21:20.447 align:start position:27% line:-2
深度マップにすると
ディスプレイは穴だらけです

00:21:21.448 --> 00:21:27.421 align:start position:30% line:-2
フィルタストリームでも
この程度です

00:21:30.591 --> 00:21:33.827 align:start position:30% line:-1
屋外での撮影も難題です

00:21:34.194 --> 00:21:40.167 align:start position:29% line:-2
背景は非常に遠くまで続き
深度を測り切れず

00:21:40.434 --> 00:21:44.838 align:start position:30% line:-2
太陽はアクティブ照明に
なってしまいます

00:21:46.306 --> 00:21:50.510 align:start position:29% line:-2
デモのために
天気のよい日に外で撮影し

00:21:50.611 --> 00:21:52.846 align:start position:34% line:-1
太陽光を浴びました

00:21:53.113 --> 00:21:57.651 align:start position:30% line:-2
深度マップでは
背景に深度がありません

00:21:57.751 --> 00:22:02.789 align:start position:30% line:-2
穴も多く この場合は
髪の毛に集中しています

00:21:57.751 --> 00:22:02.789 align:start position:30% line:-2
穴も多く この場合は
髪の毛に集中しています

00:22:03.323 --> 00:22:08.195 align:start position:30% line:-2
それでも 深度データは
非常に役に立つものです

00:22:10.330 --> 00:22:13.934 align:start position:29% line:-1
最後に穴についてもう１つ

00:22:14.034 --> 00:22:16.803 align:start position:20% line:-1
TrueDepthカメラを使う場合

00:22:16.904 --> 00:22:20.674 align:start position:27% line:-2
光の投影により
物体が後ろになることがあり

00:22:20.774 --> 00:22:24.745 align:start position:29% line:-2
プロジェクターとカメラの
視差で影ができるのです

00:22:25.846 --> 00:22:28.982 align:start position:34% line:-2
このコップの右側を
見てください

00:22:30.384 --> 00:22:35.556 align:start position:30% line:-2
深度マップではないのに
穴がありますね

00:22:36.957 --> 00:22:41.995 align:start position:25% line:-2
このストリーマでは
2Dから3Dへの変換が可能で

00:22:42.095 --> 00:22:44.131 align:start position:34% line:-2
ポイントクラウドで
見られます

00:22:44.231 --> 00:22:49.303 align:start position:29% line:-2
ポイントクラウドでは
遠近感を変えることができ

00:22:50.737 --> 00:22:53.941 align:start position:38% line:-2
それにより穴が
大きくなります

00:22:56.376 --> 00:23:00.480 align:start position:34% line:-2
コップの中味の量は
分かりますか？

00:22:56.376 --> 00:23:00.480 align:start position:34% line:-2
コップの中味の量は
分かりますか？

00:23:01.415 --> 00:23:04.351 align:start position:36% line:-1
分かりませんよね

00:23:05.185 --> 00:23:10.057 align:start position:20% line:-2
多機能なTrueDepthカメラは
バーチャルで視点を変えられても

00:23:10.290 --> 00:23:12.859 align:start position:30% line:-1
新情報は加えられません

00:23:12.960 --> 00:23:16.463 align:start position:30% line:-2
コップに当たる
光は曲げられないのです

00:23:17.998 --> 00:23:19.266 align:start position:36% line:-1
デモをしましょう

00:23:21.301 --> 00:23:25.305 align:start position:43% line:-1
（拍手）

00:23:31.278 --> 00:23:35.415 align:start position:32% line:-2
まず映像の
この角を見てください

00:23:35.516 --> 00:23:38.919 align:start position:30% line:-1
カメラに額を近づけます

00:23:39.019 --> 00:23:41.588 align:start position:29% line:-1
深度データが確認できます

00:23:41.688 --> 00:23:45.592 align:start position:30% line:-2
iPhoneを動かすと
変わりますね

00:23:45.692 --> 00:23:48.262 align:start position:38% line:-1
こうする理由は

00:23:48.362 --> 00:23:51.932 align:start position:23% line:-2
TrueDepthカメラからも
見られ

00:23:52.032 --> 00:23:55.769 align:start position:32% line:-2
映像でも見えることを
見せるためです

00:23:57.137 --> 00:24:00.174 align:start position:23% line:-1
このライブ映像は30fpsです

00:23:57.137 --> 00:24:00.174 align:start position:23% line:-1
このライブ映像は30fpsです

00:24:00.274 --> 00:24:04.745 align:start position:27% line:-2
フィルタストリームにすると
穴は消えます

00:24:06.079 --> 00:24:10.417 align:start position:29% line:-2
ポインドクラウドで見ると
視点を自由に―

00:24:11.752 --> 00:24:13.821 align:start position:32% line:-1
変えることができます

00:24:14.121 --> 00:24:16.957 align:start position:27% line:-1
画面をまっすぐに見ていても

00:24:17.224 --> 00:24:20.260 align:start position:27% line:-1
上から見られているようです

00:24:21.195 --> 00:24:24.731 align:start position:25% line:-1
ポイントクラウドと呼ぶ理由は

00:24:24.832 --> 00:24:28.469 align:start position:36% line:-2
3Dでポイントが
見られるからです

00:24:29.636 --> 00:24:34.308 align:start position:25% line:-2
WWDCで皆さんに会えるのは
夢だったので

00:24:34.408 --> 00:24:36.777 align:start position:32% line:-1
普通の視野に戻します

00:24:38.245 --> 00:24:43.884 align:start position:43% line:-1
（拍手）

00:24:44.651 --> 00:24:47.187 align:start position:30% line:-2
以上が
ポイントクラウドでした

00:24:48.222 --> 00:24:51.592 align:start position:32% line:-2
我々は深度マップから
始めました

00:24:51.692 --> 00:24:57.464 align:start position:27% line:-2
深度マップの2D画像は
ピクセル座標のUVで表され

00:24:58.365 --> 00:25:03.771 align:start position:29% line:-2
それを新たにXYZという
座標系に変えたいのです

00:24:58.365 --> 00:25:03.771 align:start position:29% line:-2
それを新たにXYZという
座標系に変えたいのです

00:25:04.204 --> 00:25:09.943 align:start position:29% line:-2
深度マップのZはあるので
あとはXとYです

00:25:10.043 --> 00:25:15.315 align:start position:25% line:-2
そのためには
内部パラメータ行列が必要です

00:25:15.415 --> 00:25:18.719 align:start position:36% line:-2
焦点と主点情報を
得るためです

00:25:19.219 --> 00:25:23.690 align:start position:29% line:-2
Xが欲しい場合
ピクセル座標のUから始め

00:25:23.791 --> 00:25:29.029 align:start position:29% line:-2
主点を抽出し　深度を掛け
焦点距離で割ります

00:25:29.129 --> 00:25:32.299 align:start position:36% line:-2
他の次元でも
同じことをします

00:25:33.100 --> 00:25:36.737 align:start position:30% line:-1
内部パラメータ行列には

00:25:36.837 --> 00:25:39.573 align:start position:27% line:-2
キャリブレーションデータが
必要です

00:25:41.108 --> 00:25:47.314 align:start position:23% line:-2
TrueDepthストリームの
全フレームで行われます

00:25:47.414 --> 00:25:51.018 align:start position:36% line:-2
映像ストリームと
深度ストリームは

00:25:51.118 --> 00:25:54.788 align:start position:36% line:-2
２つのカメラから
来ているからです

00:25:55.556 --> 00:26:00.627 align:start position:27% line:-2
深度マップは
ポイントクラウドに変換でき

00:25:55.556 --> 00:26:00.627 align:start position:27% line:-2
深度マップは
ポイントクラウドに変換でき

00:26:00.727 --> 00:26:05.332 align:start position:34% line:-2
そこにRGB画像を
再投影させるのです

00:26:05.866 --> 00:26:10.971 align:start position:29% line:-2
深度ストリームはすでに
映像ストリームにあるため

00:26:11.071 --> 00:26:14.107 align:start position:34% line:-2
RGBDデータに
なるということです

00:26:14.274 --> 00:26:15.375 align:start position:43% line:-1
（口笛）

00:26:15.475 --> 00:26:17.377 align:start position:32% line:-1
ありがとうございます

00:26:17.478 --> 00:26:18.912 align:start position:38% line:-1
すごいですよね

00:26:19.913 --> 00:26:24.051 align:start position:32% line:-2
これはMetalの
シェーダで行われます

00:26:24.151 --> 00:26:28.889 align:start position:30% line:-2
ダウンロードすれば
２ヵ所に焦点が合います

00:26:30.424 --> 00:26:33.293 align:start position:34% line:-2
頂点シェーダで
頂点の集合を制御し

00:26:33.393 --> 00:26:38.499 align:start position:30% line:-2
深度マップを使って
3D座標に変換してから

00:26:39.032 --> 00:26:44.071 align:start position:32% line:-2
ビュー行列で位置を
変えることもできます

00:26:47.141 --> 00:26:51.044 align:start position:30% line:-2
フラグメントシェーダは
頂点シェーダを得て

00:26:51.345 --> 00:26:55.716 align:start position:29% line:-2
実際の値なのか
深度マップの穴かを判断し

00:26:55.816 --> 00:26:59.553 align:start position:32% line:-2
穴の場合は
深度は分からないため

00:26:59.653 --> 00:27:04.324 align:start position:34% line:-2
3Dには変換できず
その部分を除きます

00:26:59.653 --> 00:27:04.324 align:start position:34% line:-2
3Dには変換できず
その部分を除きます

00:27:05.058 --> 00:27:08.462 align:start position:29% line:-2
実際の値なら
RGBテクスチャを参照し

00:27:08.829 --> 00:27:12.032 align:start position:27% line:-1
その部分や点に色を加えます

00:27:14.701 --> 00:27:20.407 align:start position:29% line:-2
技術的な話が続きましたが
様々な分野の方々のために

00:27:21.375 --> 00:27:23.610 align:start position:25% line:-1
アプリケーションを紹介します

00:27:23.710 --> 00:27:25.946 align:start position:32% line:-1
背景を変えるものです

00:27:26.613 --> 00:27:27.915 align:start position:39% line:-1
お見せします

00:27:37.958 --> 00:27:39.193 align:start position:39% line:-1
始めましょう

00:27:40.994 --> 00:27:43.730 align:start position:32% line:-1
私はヨセミテにいます

00:27:43.831 --> 00:27:47.968 align:start position:30% line:-2
スワイプして
抽象的な背景を選べます

00:27:49.536 --> 00:27:52.740 align:start position:30% line:-2
アリゾナ州の
アンテロープキャニオン

00:27:52.840 --> 00:27:56.610 align:start position:30% line:-2
前回は行くのに
15時間かかりましたが

00:27:56.710 --> 00:27:58.378 align:start position:32% line:-1
今回はガソリン代節約

00:27:59.346 --> 00:28:03.650 align:start position:32% line:-2
これを使えば
宇宙にも飛び出せます

00:27:59.346 --> 00:28:03.650 align:start position:32% line:-2
これを使えば
宇宙にも飛び出せます

00:28:03.750 --> 00:28:06.386 align:start position:29% line:-1
ここでは技術的な話はなし

00:28:10.958 --> 00:28:15.329 align:start position:43% line:-1
（拍手）

00:28:15.529 --> 00:28:17.197 align:start position:41% line:-1
作り方は？

00:28:19.066 --> 00:28:22.903 align:start position:30% line:-2
映像アプリケーションを
扱う時は

00:28:23.237 --> 00:28:26.573 align:start position:29% line:-1
フレームベースで考えます

00:28:26.807 --> 00:28:29.643 align:start position:34% line:-1
まずは顔を認識させ

00:28:30.677 --> 00:28:33.781 align:start position:34% line:-2
深度マップから
新しいマスクを作り

00:28:33.881 --> 00:28:37.584 align:start position:27% line:-1
RGBに結果を反映させます

00:28:37.684 --> 00:28:43.223 align:start position:25% line:-2
前景マスクをアップスケールし
背景を少し暗くし

00:28:43.323 --> 00:28:45.859 align:start position:36% line:-1
両者を合成します

00:28:46.460 --> 00:28:50.998 align:start position:32% line:-2
その際 面倒なことを
省略できます

00:28:52.132 --> 00:28:57.304 align:start position:23% line:-2
背景をロードする際
RGBのサイズ合わせは一度だけ

00:28:57.404 --> 00:29:00.807 align:start position:36% line:-2
フレームごとには
必要ありません

00:28:57.404 --> 00:29:00.807 align:start position:36% line:-2
フレームごとには
必要ありません

00:29:01.041 --> 00:29:05.145 align:start position:30% line:-2
それで
大きな成果が得られます

00:29:06.113 --> 00:29:08.215 align:start position:29% line:-1
深度データにいきましょう

00:29:08.315 --> 00:29:12.085 align:start position:29% line:-1
まず顔の中央を見極めます

00:29:12.186 --> 00:29:17.791 align:start position:23% line:-2
iOSには顔のメタデータを得る
様々な方法があります

00:29:18.025 --> 00:29:21.795 align:start position:14% line:-2
Core Image detector
Vision Frameworkなどです

00:29:21.895 --> 00:29:25.833 align:start position:30% line:-2
しかし
顔の中心が知りたい場合

00:29:25.933 --> 00:29:29.336 align:start position:20% line:-2
AVMetadataObjectの
faceを使います

00:29:30.304 --> 00:29:34.842 align:start position:29% line:-2
これでRGB画像の中央は
分かりますが

00:29:34.942 --> 00:29:39.446 align:start position:34% line:-2
深度マップの中央も
知る必要があります

00:29:41.515 --> 00:29:45.719 align:start position:29% line:-1
顔の深度の値が判明したら

00:29:45.819 --> 00:29:51.058 align:start position:21% line:-2
しきい値を顔の深度＋25センチに
設定し

00:29:51.158 --> 00:29:55.963 align:start position:36% line:-2
マスクの前景を１
背景を０とします

00:29:56.430 --> 00:30:00.801 align:start position:29% line:-2
これでも十分ですが
バイナリマスクも使えます

00:29:56.430 --> 00:30:00.801 align:start position:29% line:-2
これでも十分ですが
バイナリマスクも使えます

00:30:00.901 --> 00:30:05.038 align:start position:34% line:-2
背景と前景の境が
鮮明になりましたが

00:30:05.839 --> 00:30:08.308 align:start position:29% line:-1
まだチラチラして見えます

00:30:09.276 --> 00:30:11.378 align:start position:34% line:-1
少し処理しましょう

00:30:11.712 --> 00:30:15.916 align:start position:32% line:-2
まず背景と前景の境を
スムーズにするため

00:30:16.016 --> 00:30:18.285 align:start position:27% line:-1
ブラーガウスでぼかしました

00:30:18.519 --> 00:30:23.524 align:start position:30% line:-2
ブラーガウスの範囲が
移行の度合いを決めます

00:30:23.624 --> 00:30:27.294 align:start position:32% line:-1
違う効果も試せますよ

00:30:29.296 --> 00:30:32.766 align:start position:29% line:-1
次はガンマ調節を行います

00:30:33.300 --> 00:30:37.137 align:start position:29% line:-2
背景と前景を
自然に移行させるためです

00:30:37.237 --> 00:30:43.477 align:start position:29% line:-2
ガンマ値を１以上にすると
前景のマスクが狭くなり

00:30:44.044 --> 00:30:49.783 align:start position:29% line:-2
１より小さくすると
前景のマスクが大きくなり

00:30:50.050 --> 00:30:51.552 align:start position:38% line:-1
オーラも出ます

00:30:52.219 --> 00:30:57.458 align:start position:29% line:-2
２つのパラメータの合成で
違う効果を得られます

00:30:58.225 --> 00:31:02.563 align:start position:32% line:-2
ぼかしの範囲と
ガンマ値を高くすると

00:30:58.225 --> 00:31:02.563 align:start position:32% line:-2
ぼかしの範囲と
ガンマ値を高くすると

00:31:02.663 --> 00:31:05.666 align:start position:29% line:-1
移行部分が透明になります

00:31:05.766 --> 00:31:09.069 align:start position:25% line:-1
宇宙でのホログラムのようです

00:31:09.436 --> 00:31:11.839 align:start position:34% line:-1
海中にも見えますね

00:31:12.372 --> 00:31:15.342 align:start position:30% line:-1
値を変えると違う効果も

00:31:15.442 --> 00:31:20.247 align:start position:27% line:-2
ぼかしを強くし
ガンマ値を非常に低くすると

00:31:20.347 --> 00:31:23.150 align:start position:34% line:-1
頭に後光が射します

00:31:23.250 --> 00:31:25.919 align:start position:29% line:-1
色々と試してみてください

00:31:27.387 --> 00:31:28.989 align:start position:34% line:-1
どう実装しますか？

00:31:31.225 --> 00:31:33.760 align:start position:23% line:-1
Core Imageは単純です

00:31:33.861 --> 00:31:36.597 align:start position:36% line:-2
３つのフィルタを
順につなげ

00:31:36.697 --> 00:31:41.802 align:start position:32% line:-2
ブラーガラスでぼかし
ガンマ値を調整します

00:31:42.469 --> 00:31:45.539 align:start position:32% line:-2
そしてRGBを
アップスケールします

00:31:46.507 --> 00:31:51.011 align:start position:29% line:-2
ベストプラクティスのため
注意点があります

00:31:51.945 --> 00:31:57.084 align:start position:27% line:-2
ブラーガウスのような
畳み込み操作をする際には―

00:31:57.184 --> 00:32:01.288 align:start position:14% line:-2
まず clampedToExtentから
始めてください

00:31:57.184 --> 00:32:01.288 align:start position:14% line:-2
まず clampedToExtentから
始めてください

00:32:01.722 --> 00:32:04.558 align:start position:27% line:-1
ピクセルを広げていくことで

00:32:05.159 --> 00:32:09.730 align:start position:34% line:-2
次第に境界の部分を
正しく処理できます

00:32:10.964 --> 00:32:14.902 align:start position:30% line:-2
さらにフィルタで
アップスケールする前に

00:32:15.002 --> 00:32:18.605 align:start position:32% line:-2
初期状態に戻すことを
お勧めします

00:32:18.705 --> 00:32:21.909 align:start position:32% line:-2
その映像が
何より大切だからです

00:32:23.777 --> 00:32:27.347 align:start position:32% line:-2
その後 Matteを
前景に取り込むと

00:32:27.448 --> 00:32:31.518 align:start position:34% line:-2
背景や前景に様々な
効果を与えられます

00:32:31.618 --> 00:32:33.921 align:start position:36% line:-1
前半で紹介した―

00:32:35.122 --> 00:32:36.523 align:start position:30% line:-1
Backdropでは―

00:32:37.758 --> 00:32:43.730 align:start position:23% line:-2
RGBとロードした背景を
Core Imageで出せます

00:32:43.831 --> 00:32:47.234 align:start position:27% line:-2
TrueDepthカメラの
Matteを使って

00:32:47.334 --> 00:32:50.704 align:start position:34% line:-2
背景に様々な効果が
与えられます

00:32:54.141 --> 00:32:57.544 align:start position:27% line:-1
TrueDepthカメラは

00:32:57.911 --> 00:33:03.317 align:start position:25% line:-2
30fpsで深度マップ
640X480の結果を得られ

00:32:57.911 --> 00:33:03.317 align:start position:25% line:-2
30fpsで深度マップ
640X480の結果を得られ

00:33:03.417 --> 00:33:06.520 align:start position:36% line:-2
映像ストリームに
登録されています

00:33:07.221 --> 00:33:12.326 align:start position:27% line:-2
ポイントクラウドを作ったり
背景を変えたり

00:33:14.328 --> 00:33:18.832 align:start position:29% line:-2
深度フィルタで
様々な映像効果も出せます

00:33:21.235 --> 00:33:26.740 align:start position:18% line:-2
Jupiter Notebookの
TrueDepthStreamerと

00:33:27.708 --> 00:33:29.109 align:start position:29% line:-2
Backdropを
ダウンロードしてください

00:33:29.276 --> 00:33:32.846 align:start position:29% line:-2
新たな
すばらしい映像製作のため

00:33:32.946 --> 00:33:38.185 align:start position:27% line:-2
皆さんに刺激を
与えられたとしたら幸いです

00:33:39.586 --> 00:33:44.024 align:start position:27% line:-2
AVCaptureラボにも
遊びにきてください

00:33:44.124 --> 00:33:45.959 align:start position:43% line:-1
（拍手）
