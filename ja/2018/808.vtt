WEBVTT

00:00:07.107 --> 00:00:16.183 align:start position:43% line:-1
(音楽)

00:00:17.050 --> 00:00:20.654 align:start position:43% line:-1
(拍手)

00:00:20.921 --> 00:00:21.788 align:start position:41% line:-1
ありがとう

00:00:22.923 --> 00:00:23.824 align:start position:41% line:-1
こんにちは

00:00:24.358 --> 00:00:26.560 align:start position:30% line:-1
ARに興味がある方は？

00:00:27.528 --> 00:00:28.996 align:start position:39% line:-1
分かりました

00:00:29.429 --> 00:00:32.266 align:start position:25% line:-2
すでにARアプリケーションを
持っている方は？

00:00:34.234 --> 00:00:35.502 align:start position:38% line:-1
少し減りました

00:00:36.103 --> 00:00:38.605 align:start position:27% line:-1
手強い印象がありますからね

00:00:38.772 --> 00:00:42.876 align:start position:34% line:-2
今日は 僕たちの
技術をお見せします

00:00:42.976 --> 00:00:45.646 align:start position:29% line:-1
２つの点で役立つでしょう

00:00:45.979 --> 00:00:49.716 align:start position:29% line:-2
まず ARが
より身近なものになります

00:00:50.350 --> 00:00:54.488 align:start position:32% line:-2
さらに 時間とお金を
節約できます

00:00:54.588 --> 00:00:59.092 align:start position:25% line:-2
コードを書く前に
正しい設計か確認するからです

00:01:00.460 --> 00:01:01.628 align:start position:38% line:-1
では 始めます

00:01:03.530 --> 00:01:07.234 align:start position:36% line:-2
WWDCの講演を
見たことがあれば

00:01:07.334 --> 00:01:12.039 align:start position:27% line:-2
Toast Modernは
ご存じでしょう

00:01:12.673 --> 00:01:16.443 align:start position:32% line:-2
トーストを評価する
アプリケーションです

00:01:16.743 --> 00:01:17.845 align:start position:41% line:-1
素晴らしい

00:01:19.012 --> 00:01:21.815 align:start position:32% line:-1
従来の機能にARを―

00:01:22.449 --> 00:01:25.252 align:start position:29% line:-1
追加することになりました

00:01:26.987 --> 00:01:32.626 align:start position:29% line:-2
ベイエリアで トーストの
人気は拡大中ですね

00:01:33.093 --> 00:01:33.961 align:start position:43% line:-1
今日で―

00:01:35.162 --> 00:01:37.130 align:start position:30% line:-1
人気はもっと拡大します

00:01:37.798 --> 00:01:39.099 align:start position:36% line:-1
ご紹介しましょう

00:01:40.000 --> 00:01:41.301 align:start position:34% line:-1
ToastARです

00:01:41.435 --> 00:01:46.740 align:start position:29% line:-2
AR搭載の トースト評価
アプリケーションです

00:01:46.840 --> 00:01:49.276 align:start position:36% line:-1
どうもありがとう

00:01:51.445 --> 00:01:54.147 align:start position:30% line:-2
コンピュータビジョンと
ARで

00:01:54.281 --> 00:01:59.353 align:start position:29% line:-2
トーストの評価や
買える場所を確認できます

00:02:00.420 --> 00:02:01.755 align:start position:38% line:-1
革命的でしょう

00:02:02.055 --> 00:02:07.728 align:start position:27% line:-2
デベロッパはAppleに
最高の機能を期待しますから

00:02:07.828 --> 00:02:10.931 align:start position:32% line:-2
トーストにも
最高の味を期待します

00:02:11.865 --> 00:02:15.736 align:start position:30% line:-2
では ToastARの
試作品の作り方とは？

00:02:16.170 --> 00:02:19.039 align:start position:25% line:-1
Swiftを使ったと思うかも

00:02:20.541 --> 00:02:23.043 align:start position:29% line:-1
ARKitかもしれません

00:02:24.978 --> 00:02:28.048 align:start position:30% line:-2
または
Unityでしょうか？

00:02:28.448 --> 00:02:32.886 align:start position:29% line:-2
これらは確実な方法ですが
他の手段もあります

00:02:34.087 --> 00:02:38.959 align:start position:25% line:-2
ローテクなプロトタイピングで
設計の問題を

00:02:39.059 --> 00:02:42.196 align:start position:30% line:-2
事前に解決できることも
あるのです

00:02:42.729 --> 00:02:47.434 align:start position:30% line:-2
そこで今日は カメラを
使った方法を紹介します

00:02:49.903 --> 00:02:51.939 align:start position:30% line:-1
周りの空間も使いますよ

00:02:53.140 --> 00:02:55.976 align:start position:36% line:-2
ARの試作品の
作り方の紹介です

00:02:56.443 --> 00:02:59.379 align:start position:34% line:-2
まず ２つの用語を
覚えてください

00:03:01.348 --> 00:03:03.317 align:start position:30% line:-1
１つ目は ワールド空間

00:03:03.417 --> 00:03:07.421 align:start position:34% line:-2
自分や 端末の
周りの空間にある―

00:03:07.521 --> 00:03:10.090 align:start position:27% line:-1
設計の要素のことを指します

00:03:11.625 --> 00:03:13.727 align:start position:29% line:-1
２つ目は スクリーン空間

00:03:13.927 --> 00:03:17.297 align:start position:29% line:-1
画面に映る要素のことです

00:03:19.099 --> 00:03:23.704 align:start position:27% line:-2
では ToastARの
初期の設計を見てみましょう

00:03:26.340 --> 00:03:29.510 align:start position:36% line:-2
この設計では
ワールド空間に―

00:03:29.610 --> 00:03:33.313 align:start position:30% line:-2
評価が書かれた
ラベルを表示しています

00:03:34.815 --> 00:03:38.485 align:start position:30% line:-2
簡単そうでも
すぐコーディングせずに

00:03:38.585 --> 00:03:40.921 align:start position:27% line:-1
時間とお金を節約しましょう

00:03:41.021 --> 00:03:45.792 align:start position:27% line:-2
コードを書く前に
正しい設計か確認するのです

00:03:46.293 --> 00:03:49.763 align:start position:36% line:-2
ARで大切なのは
周りの空間です

00:03:50.163 --> 00:03:55.335 align:start position:29% line:-2
静止画像や動画では
テストはうまくいきません

00:03:56.136 --> 00:04:00.407 align:start position:32% line:-2
物理的な方法なら
高度な技術を使わずに

00:03:56.136 --> 00:04:00.407 align:start position:32% line:-2
物理的な方法なら
高度な技術を使わずに

00:04:00.507 --> 00:04:02.910 align:start position:30% line:-1
簡単にテストができます

00:04:03.510 --> 00:04:05.212 align:start position:34% line:-1
何から始めたのか？

00:04:07.614 --> 00:04:11.652 align:start position:30% line:-2
ラベルを印刷して
つまようじに貼りました

00:04:11.818 --> 00:04:15.222 align:start position:30% line:-1
分かります　変ですよね

00:04:15.322 --> 00:04:19.726 align:start position:32% line:-2
ですが この方法には
３つの利点があります

00:04:20.394 --> 00:04:23.797 align:start position:34% line:-2
まず 実際の状況で
テストできます

00:04:23.897 --> 00:04:26.400 align:start position:29% line:-1
周りの空間が大切でしたね

00:04:27.201 --> 00:04:33.407 align:start position:29% line:-2
次に コーディングの前に
設計の問題を解決できます

00:04:34.775 --> 00:04:39.580 align:start position:29% line:-2
最後に ToastARを
より良いものにするための

00:04:39.680 --> 00:04:41.715 align:start position:34% line:-1
気付きを得られます

00:04:43.383 --> 00:04:45.452 align:start position:34% line:-1
印刷はどうするか？

00:04:46.153 --> 00:04:49.556 align:start position:36% line:-2
描いて切り取れば
いいだけです

00:04:53.393 --> 00:04:58.065 align:start position:25% line:-2
ラベルを つまようじに付けて
トーストに刺します

00:04:58.832 --> 00:05:03.770 align:start position:29% line:-2
それから カメラを使って
設計をテストします

00:04:58.832 --> 00:05:03.770 align:start position:29% line:-2
それから カメラを使って
設計をテストします

00:05:05.939 --> 00:05:08.442 align:start position:36% line:-1
革命的でしょう？

00:05:08.609 --> 00:05:12.079 align:start position:43% line:-1
(拍手)

00:05:12.179 --> 00:05:14.681 align:start position:30% line:-1
試してすぐに ラベルが

00:05:14.781 --> 00:05:17.885 align:start position:29% line:-1
読みづらいと気付きました

00:05:18.819 --> 00:05:20.954 align:start position:36% line:-1
角度が問題でした

00:05:21.154 --> 00:05:24.258 align:start position:34% line:-2
常にカメラの
正面にあるべきかも

00:05:24.424 --> 00:05:25.792 align:start position:36% line:-1
試してみましょう

00:05:27.961 --> 00:05:33.133 align:start position:29% line:-2
同僚と 洗練された道具に
助けてもらいました

00:05:33.600 --> 00:05:35.802 align:start position:29% line:-1
ただの透明な定規ですが…

00:05:36.637 --> 00:05:37.337 align:start position:41% line:-1
素晴らしい

00:05:38.405 --> 00:05:40.941 align:start position:38% line:-2
カメラの正面に
ラベルがあると

00:05:41.041 --> 00:05:44.077 align:start position:36% line:-2
読みやすいことが
分かりました

00:05:45.179 --> 00:05:47.748 align:start position:30% line:-1
この動きを参照する場合

00:05:47.848 --> 00:05:53.187 align:start position:23% line:-2
クラスを使えば簡単に
SceneKitに実装できます

00:05:53.720 --> 00:05:57.724 align:start position:32% line:-2
まだコードを書かずに
テストを続けて―

00:05:57.891 --> 00:06:00.260 align:start position:27% line:-1
正しい設計か確認しましょう

00:05:57.891 --> 00:06:00.260 align:start position:27% line:-1
正しい設計か確認しましょう

00:06:00.627 --> 00:06:04.264 align:start position:30% line:-2
ラベルとカメラの距離が
遠い場合は？

00:06:04.364 --> 00:06:06.533 align:start position:32% line:-1
簡単に確認できますね

00:06:07.401 --> 00:06:10.571 align:start position:36% line:-2
このテストでも
カメラを使います

00:06:11.038 --> 00:06:15.242 align:start position:29% line:-2
距離が遠いと
ラベルは読みづらいですね

00:06:15.342 --> 00:06:17.644 align:start position:30% line:-1
近いほうが良さそうです

00:06:19.479 --> 00:06:21.481 align:start position:32% line:-1
では どう作るのか？

00:06:23.150 --> 00:06:27.921 align:start position:27% line:-2
スクリーン空間の問題なので
Keynoteを使います

00:06:28.689 --> 00:06:31.558 align:start position:27% line:-1
まず トーストの動画を撮影

00:06:34.828 --> 00:06:36.396 align:start position:34% line:-1
ゆっくり動かします

00:06:37.130 --> 00:06:41.768 align:start position:29% line:-2
トーストが映ったら
そこで少し止まりましょう

00:06:44.438 --> 00:06:47.307 align:start position:23% line:-1
次は Keynoteの出番です

00:06:49.543 --> 00:06:54.548 align:start position:29% line:-2
ラベルを 表示する端末の
サイズに合わせます

00:06:57.284 --> 00:07:00.587 align:start position:21% line:-1
動画をKeynoteで表示します

00:06:57.284 --> 00:07:00.587 align:start position:21% line:-1
動画をKeynoteで表示します

00:07:04.191 --> 00:07:06.527 align:start position:30% line:-1
次に ラベルを付けます

00:07:09.029 --> 00:07:14.134 align:start position:30% line:-2
動作を加えて 適切な
表示時間を設定したら―

00:07:14.768 --> 00:07:16.937 align:start position:30% line:-1
希望の位置に移動します

00:07:20.174 --> 00:07:22.709 align:start position:30% line:-1
ビルドの順番は重要です

00:07:22.809 --> 00:07:26.847 align:start position:32% line:-2
動画とラベルの動きは
必ず同時に始めますが

00:07:26.947 --> 00:07:32.686 align:start position:29% line:-2
トーストが映ってから
ラベルを表示させましょう

00:07:35.122 --> 00:07:39.293 align:start position:32% line:-2
最後に 実際の状況で
テストをします

00:07:43.030 --> 00:07:47.601 align:start position:30% line:-2
Keynoteで作った
ラベルのテストです

00:07:50.270 --> 00:07:50.938 align:start position:41% line:-1
素晴らしい

00:07:51.471 --> 00:07:54.007 align:start position:34% line:-2
テキストも
ぴったり入りました

00:07:54.441 --> 00:07:59.646 align:start position:29% line:-2
これで ラベルの範囲を
拡大しやすくなるでしょう

00:08:01.682 --> 00:08:06.019 align:start position:29% line:-2
複数のトーストが
映る場合はどうでしょう？

00:08:07.321 --> 00:08:09.957 align:start position:32% line:-1
同様に 試してみます

00:08:14.161 --> 00:08:17.698 align:start position:30% line:-2
問題は
どのトーストの情報を―

00:08:18.298 --> 00:08:21.368 align:start position:36% line:-2
表示しているか
分からない点です

00:08:22.503 --> 00:08:26.073 align:start position:34% line:-2
目印があると
良いかもしれません

00:08:26.473 --> 00:08:29.543 align:start position:34% line:-2
そうすれば
判断できますからね

00:08:29.643 --> 00:08:31.879 align:start position:30% line:-1
すぐに試してみましょう

00:08:34.515 --> 00:08:39.686 align:start position:27% line:-2
今回も 同僚と
頼もしい定規の力を借ります

00:08:39.785 --> 00:08:42.890 align:start position:36% line:-2
印刷したラベルを
定規に付けました

00:08:43.190 --> 00:08:45.225 align:start position:36% line:-1
カメラを使います

00:08:46.293 --> 00:08:50.097 align:start position:27% line:-2
目印があると
どちらの情報か分かりますね

00:08:52.599 --> 00:08:53.934 align:start position:38% line:-1
まとめましょう

00:08:55.302 --> 00:09:00.374 align:start position:29% line:-2
これで 試作品の
おおまかなデモができます

00:08:55.302 --> 00:09:00.374 align:start position:29% line:-2
これで 試作品の
おおまかなデモができます

00:09:00.707 --> 00:09:03.076 align:start position:32% line:-1
設計が正しいことが―

00:09:03.577 --> 00:09:04.978 align:start position:39% line:-1
分かりました

00:09:05.812 --> 00:09:09.483 align:start position:30% line:-2
試作品の内容を
コードに反映しましょう

00:09:11.785 --> 00:09:16.990 align:start position:32% line:-2
たった数時間で
問題に対処できました

00:09:18.325 --> 00:09:22.996 align:start position:30% line:-2
ワールド空間のラベルは
角度や距離があると

00:09:23.096 --> 00:09:26.066 align:start position:36% line:-2
読みづらいことが
理解できました

00:09:26.600 --> 00:09:27.935 align:start position:34% line:-1
もう１つ学びました

00:09:28.502 --> 00:09:33.273 align:start position:29% line:-2
ラベルの対象を判断できる
目印が必要なことです

00:09:39.046 --> 00:09:43.450 align:start position:27% line:-2
物理的な方法で
AR体験をテストできました

00:09:44.618 --> 00:09:48.489 align:start position:30% line:-2
ワールド空間の
テストではカメラを使用

00:09:49.289 --> 00:09:52.759 align:start position:27% line:-1
Keynoteも使いました

00:09:53.694 --> 00:09:55.329 align:start position:39% line:-1
役立ったか？

00:09:56.497 --> 00:10:00.133 align:start position:34% line:-2
まず 時間とお金の
節約になりました

00:09:56.497 --> 00:10:00.133 align:start position:34% line:-2
まず 時間とお金の
節約になりました

00:10:00.267 --> 00:10:04.071 align:start position:34% line:-2
コーディング前に
確認できたからです

00:10:08.909 --> 00:10:11.411 align:start position:29% line:-1
新しいアイデアも得ました

00:10:11.512 --> 00:10:14.148 align:start position:30% line:-2
ToastARの向上に
役立ちました

00:10:14.248 --> 00:10:17.050 align:start position:29% line:-1
とても素晴らしいことです

00:10:18.452 --> 00:10:24.091 align:start position:29% line:-2
ARのアプリケーションを
次に作り始める時に―

00:10:25.025 --> 00:10:27.661 align:start position:29% line:-1
お役に立てばうれしいです

00:10:28.395 --> 00:10:29.496 align:start position:41% line:-1
ありがとう

00:10:29.796 --> 00:10:31.365 align:start position:43% line:-1
(拍手)
