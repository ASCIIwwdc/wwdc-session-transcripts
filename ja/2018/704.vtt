WEBVTT

00:00:07.107 --> 00:00:16.082 align:start position:43% line:-1
(音楽)

00:00:21.288 --> 00:00:22.589 align:start position:41% line:-1
こんにちは

00:00:22.689 --> 00:00:27.160 align:start position:43% line:-1
(拍手)

00:00:27.261 --> 00:00:30.163 align:start position:27% line:-2
“App内課金のベスト
プラクティスと新機能”です

00:00:30.264 --> 00:00:33.834 align:start position:20% line:-2
App Store技術マネージャー
デイナ･デュボイスです

00:00:34.368 --> 00:00:39.673 align:start position:20% line:-2
App内課金はApp Storeに
欠かせません

00:00:39.773 --> 00:00:42.276 align:start position:27% line:-1
動画配信 新聞や雑誌など―

00:00:42.376 --> 00:00:45.913 align:start position:34% line:-2
定期購読モデルの
サービスがあります

00:00:46.013 --> 00:00:48.482 align:start position:30% line:-1
消耗型のサービスでは―

00:00:48.582 --> 00:00:52.586 align:start position:34% line:-2
ゲーム内通貨などが
何度も購入できます

00:00:52.686 --> 00:00:57.824 align:start position:25% line:-2
一度 購入すればいい
非消耗型のサービスもあります

00:00:58.158 --> 00:01:01.628 align:start position:32% line:-2
いずれにしろ
快適なユーザ体験が―

00:00:58.158 --> 00:01:01.628 align:start position:32% line:-2
いずれにしろ
快適なユーザ体験が―

00:01:02.262 --> 00:01:04.397 align:start position:36% line:-1
何よりも重要です

00:01:05.364 --> 00:01:10.070 align:start position:23% line:-2
そのためのベストプラクティスを
紹介します

00:01:10.170 --> 00:01:15.609 align:start position:27% line:-2
我々の側で加えた
機能改善にも触れる予定です

00:01:18.512 --> 00:01:21.348 align:start position:32% line:-2
最初に
同僚のロスを呼んで―

00:01:21.448 --> 00:01:24.985 align:start position:34% line:-2
お試し価格を
説明してもらいます

00:01:25.085 --> 00:01:29.323 align:start position:29% line:-2
新規顧客を
呼び込める新しい機能です

00:01:29.823 --> 00:01:33.293 align:start position:29% line:-2
次に私が“トライアル”を
説明します

00:01:34.361 --> 00:01:38.232 align:start position:30% line:-2
“評価とレビュー”では
レビューを得る方法を―

00:01:38.332 --> 00:01:40.200 align:start position:36% line:-1
ご説明しましょう

00:01:41.101 --> 00:01:45.973 align:start position:23% line:-2
次にSandbox環境における
App内課金のテスト方法を

00:01:46.073 --> 00:01:48.275 align:start position:36% line:-1
説明する予定です

00:01:49.009 --> 00:01:51.111 align:start position:34% line:-1
そして再びロスが―

00:01:51.211 --> 00:01:55.315 align:start position:21% line:-2
“トランザクション処理の
ベストプラクティス”を説明します

00:01:56.517 --> 00:02:00.621 align:start position:27% line:-2
最後に“レシート”の概要を
私が説明します

00:01:56.517 --> 00:02:00.621 align:start position:27% line:-2
最後に“レシート”の概要を
私が説明します

00:02:01.622 --> 00:02:04.758 align:start position:27% line:-1
それではロスを呼びましょう

00:02:04.858 --> 00:02:06.960 align:start position:43% line:-1
(拍手)

00:02:07.060 --> 00:02:07.961 align:start position:45% line:-1
どうも

00:02:09.663 --> 00:02:12.866 align:start position:21% line:-2
iOS 11.2と
macOS 10.13.2から―

00:02:12.966 --> 00:02:16.537 align:start position:36% line:-2
お試し価格機能を
導入しました

00:02:17.070 --> 00:02:20.474 align:start position:32% line:-2
１回限りの割引価格を
作成できます

00:02:21.408 --> 00:02:23.810 align:start position:14% line:-1
App Store Connectでは―

00:02:24.811 --> 00:02:28.682 align:start position:30% line:-2
１回限りのお試し価格を
設定できます

00:02:29.183 --> 00:02:32.085 align:start position:34% line:-2
ユーザが定期購読を
購入すると―

00:02:32.953 --> 00:02:35.689 align:start position:27% line:-1
割引価格が自動適用されます

00:02:36.456 --> 00:02:40.661 align:start position:29% line:-2
定期購読グループに基づき
１回だけです

00:02:40.761 --> 00:02:42.329 align:start position:39% line:-1
詳細は後ほど

00:02:44.031 --> 00:02:48.235 align:start position:2% line:-2
Introductory Pricing APIと共に
新型とプロパティを追加

00:02:49.369 --> 00:02:52.406 align:start position:18% line:-2
App Store Connectで
設定したデータを使えば―

00:02:53.207 --> 00:02:58.011 align:start position:30% line:-2
ユーザに定期購読の
使用条件を表示できます

00:02:58.645 --> 00:03:02.482 align:start position:34% line:-2
適用対象のユーザも
判別できます

00:02:58.645 --> 00:03:02.482 align:start position:34% line:-2
適用対象のユーザも
判別できます

00:03:04.117 --> 00:03:04.952 align:start position:43% line:-1
例えば―

00:03:05.919 --> 00:03:07.387 align:start position:39% line:-1
お試し価格は

00:03:07.487 --> 00:03:10.791 align:start position:30% line:-2
App Storeで
このように表示されます

00:03:11.692 --> 00:03:16.063 align:start position:32% line:-2
自然なレイアウトで
条件の内容も明確です

00:03:16.396 --> 00:03:20.634 align:start position:29% line:-2
初年度は19.99ドル
以降は年間39.99ドル

00:03:21.835 --> 00:03:25.472 align:start position:30% line:-2
App内課金を
促進する有効な手段です

00:03:25.572 --> 00:03:28.208 align:start position:36% line:-2
インストール前に
値段が分かります

00:03:29.877 --> 00:03:34.848 align:start position:32% line:-2
ではお試し価格の
設定方法を説明します

00:03:37.784 --> 00:03:40.754 align:start position:32% line:-2
SKProductの
新規プロパティは―

00:03:40.854 --> 00:03:43.790 align:start position:16% line:-1
introductoryPriceです

00:03:44.458 --> 00:03:47.027 align:start position:14% line:-2
新規クラス
SKProductDiscountには―

00:03:47.594 --> 00:03:50.831 align:start position:32% line:-2
設定した情報がすべて
含まれます

00:03:51.665 --> 00:03:56.336 align:start position:30% line:-2
お試し価格は定期購読の
必須項目ではないので―

00:03:56.436 --> 00:03:58.272 align:start position:32% line:-1
任意のプロパティです

00:03:59.373 --> 00:04:01.241 align:start position:14% line:-1
SKProductDiscountには―

00:03:59.373 --> 00:04:01.241 align:start position:14% line:-1
SKProductDiscountには―

00:04:03.911 --> 00:04:08.582 align:start position:29% line:-2
お試し価格の
設定データが反映されます

00:04:09.516 --> 00:04:11.818 align:start position:30% line:-1
価格と価格ロケールは―

00:04:11.919 --> 00:04:15.756 align:start position:21% line:-2
SKProductのプロパティと
同じです

00:04:17.925 --> 00:04:23.430 align:start position:0% line:-2
定期購読期間は
SKProductSubscriptionPeriodで

00:04:24.064 --> 00:04:28.302 align:start position:29% line:-2
請求と更新期間のデータが
反映されます

00:04:29.469 --> 00:04:31.605 align:start position:29% line:-1
２つのプロパティがあり―

00:04:32.139 --> 00:04:36.176 align:start position:27% line:-2
１つ目は単位で
年月日週を表すenumです

00:04:37.477 --> 00:04:40.514 align:start position:29% line:-1
２つ目は単位数になります

00:04:41.682 --> 00:04:45.252 align:start position:32% line:-2
単位が月で
単位数が２の場合は―

00:04:45.419 --> 00:04:48.155 align:start position:32% line:-1
２カ月ごとの更新です

00:04:50.424 --> 00:04:54.027 align:start position:18% line:-2
SKProductDiscountの
numberOfPeriodsには―

00:04:54.928 --> 00:04:58.966 align:start position:30% line:-2
お試し価格の
有効期間が反映されます

00:04:59.633 --> 00:05:03.470 align:start position:32% line:-2
お試し価格が２カ月で
期間が３の場合―

00:04:59.633 --> 00:05:03.470 align:start position:32% line:-2
お試し価格が２カ月で
期間が３の場合―

00:05:03.570 --> 00:05:06.540 align:start position:29% line:-1
有効期間は合計半年間です

00:05:10.043 --> 00:05:14.681 align:start position:18% line:-2
SKProductDiscountの
支払モードプロパティは―

00:05:15.249 --> 00:05:18.051 align:start position:27% line:-1
３つの値を持つenumです

00:05:19.119 --> 00:05:20.787 align:start position:25% line:-1
１つ目はpayAsYouGo

00:05:21.655 --> 00:05:25.926 align:start position:30% line:-2
ユーザは更新期間ごとに
料金を払います

00:05:27.294 --> 00:05:29.363 align:start position:32% line:-1
ベースの定期購読と―

00:05:29.463 --> 00:05:33.066 align:start position:34% line:-2
更新期間を
同じにしてください

00:05:33.200 --> 00:05:36.270 align:start position:36% line:-2
１カ月間の
定期購読の場合―

00:05:36.370 --> 00:05:39.373 align:start position:34% line:-2
お試し価格は
２週間にできません

00:05:40.874 --> 00:05:43.877 align:start position:36% line:-2
この種類を使うと
ユーザに―

00:05:43.977 --> 00:05:47.347 align:start position:36% line:-2
長めの導入期間を
提供できます

00:05:48.315 --> 00:05:50.918 align:start position:30% line:-1
例えば定期購読料金が―

00:05:51.018 --> 00:05:55.222 align:start position:30% line:-2
３カ月間で
9.99ドルだとします

00:05:55.823 --> 00:06:00.861 align:start position:27% line:-2
1.99ドルで２回更新する
半年間の設定が可能です

00:05:55.823 --> 00:06:00.861 align:start position:27% line:-2
1.99ドルで２回更新する
半年間の設定が可能です

00:06:02.262 --> 00:06:04.398 align:start position:34% line:-1
請求期間はこうです

00:06:04.832 --> 00:06:07.935 align:start position:27% line:-2
ユーザは
お試し価格1.99ドルで―

00:06:08.035 --> 00:06:11.338 align:start position:32% line:-2
３カ月間の定期購読を
購入します

00:06:11.738 --> 00:06:15.909 align:start position:29% line:-2
その後に再度
1.99ドルで更新します

00:06:17.344 --> 00:06:21.081 align:start position:27% line:-2
次は３カ月で9.99ドルの
通常価格で更新

00:06:23.650 --> 00:06:26.053 align:start position:25% line:-1
StoreKitのデータです

00:06:26.787 --> 00:06:29.423 align:start position:32% line:-1
単位は月で単位数は３

00:06:29.857 --> 00:06:32.759 align:start position:27% line:-1
つまり３カ月ごとの更新です

00:06:33.360 --> 00:06:36.864 align:start position:18% line:-2
numberOfPeriodsが２で
半年間

00:06:38.198 --> 00:06:42.669 align:start position:20% line:-2
支払いモードがpayAsYouGo
価格は1.99です

00:06:45.906 --> 00:06:48.275 align:start position:25% line:-1
２つ目はpayUpFront

00:06:49.710 --> 00:06:54.648 align:start position:32% line:-2
お試し期間の間は
支払いは１回のみです

00:06:55.782 --> 00:06:59.019 align:start position:34% line:-2
更新期間に縛られず
設定できます

00:06:59.119 --> 00:07:02.122 align:start position:36% line:-2
定期購読の更新が
１年ごとでも―

00:06:59.119 --> 00:07:02.122 align:start position:36% line:-2
定期購読の更新が
１年ごとでも―

00:07:02.756 --> 00:07:04.925 align:start position:32% line:-1
１カ月に設定できます

00:07:07.060 --> 00:07:11.431 align:start position:27% line:-2
先ほどの例は
３カ月ごとの自動更新ですが

00:07:12.633 --> 00:07:16.170 align:start position:29% line:-2
今回は半年間の
payUpFrontです

00:07:18.038 --> 00:07:22.709 align:start position:29% line:-2
価格は3.99ドルで
前の例とほぼ同じですが―

00:07:22.809 --> 00:07:26.313 align:start position:30% line:-2
前払いで
半年の購読期間を得ます

00:07:27.514 --> 00:07:32.886 align:start position:27% line:-2
その後の更新は３カ月ごとで
9.99ドルの通常価格です

00:07:35.789 --> 00:07:38.091 align:start position:25% line:-1
StoreKitのデータです

00:07:38.358 --> 00:07:42.362 align:start position:12% line:-2
subscriptionPeriodは月で
単位数は６

00:07:42.596 --> 00:07:46.500 align:start position:16% line:-2
payUpFrontなので
numberOfPeriodsは１です

00:07:51.205 --> 00:07:53.340 align:start position:23% line:-1
３つ目はfreeTrialです

00:07:54.308 --> 00:07:59.513 align:start position:29% line:-2
無料でお試し期間を
得られる支払いモードです

00:08:00.414 --> 00:08:04.251 align:start position:32% line:-2
３日間から１年間まで
設定できます

00:08:08.055 --> 00:08:08.956 align:start position:46% line:-1
失礼

00:08:10.624 --> 00:08:13.627 align:start position:21% line:-2
iOS 12と
macOS 10.13.2では―

00:08:14.761 --> 00:08:17.965 align:start position:16% line:-2
subscriptionPeriodを
追加しました

00:08:18.866 --> 00:08:24.538 align:start position:27% line:-2
すべての自動更新可能な
定期購読にアクセスできます

00:08:26.540 --> 00:08:29.176 align:start position:25% line:-2
またiOS 12と
macOS 10.14では―

00:08:29.476 --> 00:08:32.546 align:start position:0% line:-2
subscriptionGroupIdentifierを
追加しました

00:08:34.414 --> 00:08:40.154 align:start position:27% line:-2
お試し価格の適用資格は
定期購読グループが基準です

00:08:41.121 --> 00:08:45.159 align:start position:30% line:-2
お試し価格は
グループごとに１回です

00:08:46.159 --> 00:08:49.930 align:start position:34% line:-2
定期購読グループは
同じコンテンツを―

00:08:50.030 --> 00:08:52.366 align:start position:27% line:-1
異なる更新期間で提供します

00:08:52.466 --> 00:08:57.137 align:start position:27% line:-2
多くのアプリケーションには
年間と月間オプションがあり

00:08:57.237 --> 00:08:59.540 align:start position:29% line:-1
年間だと少し安くなります

00:09:00.440 --> 00:09:04.144 align:start position:34% line:-2
お試し価格を月間と
年間で受けても―

00:09:04.244 --> 00:09:06.480 align:start position:32% line:-1
コンテンツは同じです

00:09:09.683 --> 00:09:13.720 align:start position:32% line:-2
お試し価格は購入時に
自動適用されるため―

00:09:13.820 --> 00:09:18.225 align:start position:30% line:-2
ユーザの適用資格判定が
重要になります

00:09:19.059 --> 00:09:20.961 align:start position:34% line:-1
適用資格の詳細は―

00:09:21.728 --> 00:09:25.566 align:start position:34% line:-2
この後 ３時からの
セッションへどうぞ

00:09:27.434 --> 00:09:32.306 align:start position:29% line:-2
これらの新規APIで
設定にアクセスできるので

00:09:32.606 --> 00:09:37.044 align:start position:27% line:-2
サーバーコードを更新せずに
変更を反映できます

00:09:38.712 --> 00:09:42.449 align:start position:34% line:-2
デイナを呼び
補足を頼みましょう

00:09:44.084 --> 00:09:47.421 align:start position:43% line:-1
(拍手)

00:09:47.521 --> 00:09:48.622 align:start position:41% line:-1
ありがとう

00:09:49.590 --> 00:09:54.361 align:start position:27% line:-2
定期購読ビジネスモデルでは
お試し価格は－－

00:09:54.828 --> 00:09:56.797 align:start position:34% line:-1
顧客獲得に有効です

00:09:57.598 --> 00:10:03.370 align:start position:27% line:-2
では定期購読に向いていない
アプリケーションの場合は？

00:09:57.598 --> 00:10:03.370 align:start position:27% line:-2
では定期購読に向いていない
アプリケーションの場合は？

00:10:03.904 --> 00:10:06.206 align:start position:34% line:-2
今日から
非定期購読型でも―

00:10:06.807 --> 00:10:11.378 align:start position:30% line:-2
無料トライアルを
提供することができます

00:10:12.045 --> 00:10:15.816 align:start position:30% line:-2
購入せずに
試すことができるのです

00:10:17.384 --> 00:10:18.886 align:start position:39% line:-1
その方法は？

00:10:19.720 --> 00:10:23.323 align:start position:11% line:-1
App StoreでpayUpFrontを―

00:10:24.358 --> 00:10:26.426 align:start position:36% line:-1
無料に設定します

00:10:26.927 --> 00:10:30.464 align:start position:25% line:-2
次に非消耗型のApp内課金を
追加してロック解除

00:10:30.564 --> 00:10:33.967 align:start position:29% line:-2
つまりアプリケーションが
9.99ドルなら―

00:10:34.067 --> 00:10:37.538 align:start position:29% line:-2
同額の非消耗型の
App内課金を作成します

00:10:38.472 --> 00:10:42.176 align:start position:34% line:-2
トライアルの開始は
ユーザが決めます

00:10:42.276 --> 00:10:45.445 align:start position:27% line:-2
このため２つ目の
非消耗型のApp内課金を―

00:10:45.779 --> 00:10:49.249 align:start position:23% line:-2
“price tier 0”で
作成してください

00:10:49.349 --> 00:10:51.552 align:start position:36% line:-1
これをユーザが―

00:10:52.019 --> 00:10:55.322 align:start position:27% line:-1
トライアル期間に使用します

00:10:56.490 --> 00:10:59.993 align:start position:29% line:-2
無料の非消耗型サービスの
命名規則では―

00:11:00.093 --> 00:11:03.897 align:start position:30% line:-2
無料期間の詳細を
明示する必要があります

00:11:03.997 --> 00:11:06.767 align:start position:21% line:-2
この例では
“14-day Trial”です

00:11:08.101 --> 00:11:12.339 align:start position:29% line:-2
ユーザには
無料トライアルの開始前に

00:11:13.106 --> 00:11:16.176 align:start position:27% line:-1
UIで期間を表示しましょう

00:11:17.177 --> 00:11:21.949 align:start position:29% line:-2
トライアル終了時の
ロック解除料金も示します

00:11:22.349 --> 00:11:26.687 align:start position:27% line:-2
トライアル期間の終了時に
完全ロック解除しない場合―

00:11:26.787 --> 00:11:31.225 align:start position:30% line:-2
失われる機能と
コンテンツも明示します

00:11:31.325 --> 00:11:33.594 align:start position:32% line:-1
必ず事前に知らせます

00:11:33.994 --> 00:11:36.096 align:start position:34% line:-1
概要は以上ですが―

00:11:36.196 --> 00:11:40.601 align:start position:27% line:-2
実装方法は
レシートの項目で説明します

00:11:41.935 --> 00:11:43.136 align:start position:41% line:-1
それでは―

00:11:44.204 --> 00:11:48.075 align:start position:30% line:-2
評価とレビューの説明に
移ります

00:11:48.909 --> 00:11:51.311 align:start position:32% line:-2
App内課金の有無に
関わらず―

00:11:51.411 --> 00:11:55.716 align:start position:29% line:-2
ユーザのフィードバックは
気になります

00:11:55.816 --> 00:12:00.154 align:start position:16% line:-2
App StoreとStoreKitを
活用しましょう

00:11:55.816 --> 00:12:00.154 align:start position:16% line:-2
App StoreとStoreKitを
活用しましょう

00:12:01.321 --> 00:12:06.360 align:start position:7% line:-2
SKStoreReviewControllerを
iOS 10.3で導入しました

00:12:06.460 --> 00:12:09.496 align:start position:30% line:-2
このパワフルなAPIを
使えば―

00:12:09.696 --> 00:12:14.268 align:start position:27% line:-2
簡単なプロンプトが表示され
評価を選べます

00:12:14.368 --> 00:12:17.838 align:start position:36% line:-2
レビューの入力も
簡単になります

00:12:18.572 --> 00:12:22.509 align:start position:34% line:-2
ただしパワーには
制約がつきものです

00:12:22.976 --> 00:12:27.748 align:start position:21% line:-2
まず このプロンプトは
アプリケーションとデバイスごとに

00:12:27.848 --> 00:12:31.652 align:start position:30% line:-2
また年間の
表示回数が制限されます

00:12:32.820 --> 00:12:37.191 align:start position:25% line:-2
次にユーザは
App Storeの設定で―

00:12:37.291 --> 00:12:40.327 align:start position:36% line:-2
プロンプトを
非表示にできます

00:12:41.295 --> 00:12:43.931 align:start position:29% line:-1
この２点に注意しましょう

00:12:44.464 --> 00:12:48.035 align:start position:32% line:-2
そのうえで
いつ表示するべきか―

00:12:48.135 --> 00:12:51.538 align:start position:36% line:-2
いくつかの戦略を
考えていきます

00:12:52.306 --> 00:12:55.509 align:start position:27% line:-1
まず大事なのは遮らないこと

00:12:56.176 --> 00:13:00.914 align:start position:30% line:-2
ユーザがレベルの最後で
ボスと戦闘中なら―

00:12:56.176 --> 00:13:00.914 align:start position:30% line:-2
ユーザがレベルの最後で
ボスと戦闘中なら―

00:13:01.014 --> 00:13:05.519 align:start position:30% line:-2
終わるのを待って
レビューを頼みましょう

00:13:07.020 --> 00:13:08.755 align:start position:38% line:-1
またユーザが―

00:13:08.856 --> 00:13:13.560 align:start position:30% line:-2
アプリケーションに慣れ
好感を得るまで待ちます

00:13:13.660 --> 00:13:16.964 align:start position:34% line:-2
ポジティブな体験も
待ちましょう

00:13:17.064 --> 00:13:21.802 align:start position:29% line:-2
ボスと戦い終わり
注文した食料が届くまで―

00:13:21.902 --> 00:13:24.004 align:start position:32% line:-1
待つ方がいいでしょう

00:13:25.172 --> 00:13:30.010 align:start position:27% line:-2
プロンプトの表示回数は
アプリケーション デバイス

00:13:30.110 --> 00:13:35.182 align:start position:29% line:-2
年間で制限されますが
評価自体は制限されません

00:13:35.716 --> 00:13:40.988 align:start position:7% line:-2
SKStoreReviewControllerを
３回呼び出すと―

00:13:41.088 --> 00:13:45.359 align:start position:29% line:-2
“後で”をクリックしても
３回表示されます

00:13:45.459 --> 00:13:48.795 align:start position:32% line:-2
評価の表示回数制限は
任意です

00:13:49.396 --> 00:13:51.064 align:start position:34% line:-1
コードを表示します

00:13:51.798 --> 00:13:53.467 align:start position:36% line:-1
前述したように―

00:13:54.201 --> 00:13:58.272 align:start position:11% line:-2
StoreReviewControllerは
各自の判断でどうぞ

00:13:58.372 --> 00:14:02.776 align:start position:34% line:-2
ユーザのプレイを
邪魔していないか―

00:13:58.372 --> 00:14:02.776 align:start position:34% line:-2
ユーザのプレイを
邪魔していないか―

00:14:03.076 --> 00:14:05.445 align:start position:36% line:-1
確認してください

00:14:05.646 --> 00:14:11.018 align:start position:29% line:-2
最近 ポジティブな体験を
したかどうかも確認します

00:14:11.118 --> 00:14:13.053 align:start position:34% line:-1
すべて確認したら―

00:14:13.153 --> 00:14:17.658 align:start position:7% line:-2
SKStoreReviewController.
requestReviewを呼び出します

00:14:17.758 --> 00:14:22.729 align:start position:32% line:-2
入出力もありません
シンプルなAPIです

00:14:23.697 --> 00:14:27.801 align:start position:34% line:-2
デベロッパから
大反響がありました

00:14:28.068 --> 00:14:29.670 align:start position:38% line:-1
紹介しましょう

00:14:30.103 --> 00:14:32.206 align:start position:29% line:-1
Zappos社の感想です

00:14:32.306 --> 00:14:37.611 align:start position:7% line:-2
SKStoreReviewControllerで
レビューが10倍に増え―

00:14:37.711 --> 00:14:42.482 align:start position:32% line:-2
顧客満足度について
確信が持てたそうです

00:14:42.783 --> 00:14:45.652 align:start position:20% line:-2
Frosty Pop社は
Kingpin Bowlingや―

00:14:45.752 --> 00:14:49.056 align:start position:23% line:-2
Ninja Attackなどの
ゲームで有名です

00:14:49.156 --> 00:14:53.427 align:start position:23% line:-2
App Storeでの認知度が
上がり―

00:14:53.660 --> 00:14:55.863 align:start position:27% line:-1
サンプルサイズが大きくなり

00:14:55.963 --> 00:15:00.300 align:start position:30% line:-2
おかげで熱心なユーザが
増えたと言います

00:14:55.963 --> 00:15:00.300 align:start position:30% line:-2
おかげで熱心なユーザが
増えたと言います

00:15:01.869 --> 00:15:06.206 align:start position:27% line:-2
ですから自社製プロンプトを
使うより―

00:15:06.306 --> 00:15:10.244 align:start position:7% line:-2
SKStoreReviewControllerに
移行しましょう

00:15:11.011 --> 00:15:13.547 align:start position:32% line:-1
大きな差が生まれます

00:15:16.450 --> 00:15:21.588 align:start position:20% line:-2
昨日 発表したとおり
App Storeが一新されました

00:15:21.688 --> 00:15:25.826 align:start position:32% line:-2
皆さんの意欲も
新たに湧くと思います

00:15:25.926 --> 00:15:28.228 align:start position:32% line:-1
そこで我々は新しく―

00:15:28.328 --> 00:15:32.966 align:start position:27% line:-2
レビュー記入用のAPIを
Mojaveから導入します

00:15:33.400 --> 00:15:36.904 align:start position:43% line:-1
(拍手)

00:15:37.004 --> 00:15:40.674 align:start position:30% line:-2
レビューを
記入してもらう方法は―

00:15:40.874 --> 00:15:43.010 align:start position:32% line:-1
いくつか説明しました

00:15:44.178 --> 00:15:48.782 align:start position:25% line:-2
App Storeにリンクを
張るのも手です

00:15:49.183 --> 00:15:53.754 align:start position:29% line:-2
iOS 10.3に続いて
Macにも今年導入します

00:15:54.721 --> 00:16:00.093 align:start position:29% line:-2
製品ページにリンクすると
レビューシートが表示され

00:15:54.721 --> 00:16:00.093 align:start position:29% line:-2
製品ページにリンクすると
レビューシートが表示され

00:16:00.194 --> 00:16:02.362 align:start position:30% line:-1
レビューを書き込めます

00:16:02.629 --> 00:16:06.700 align:start position:7% line:-2
SKStoreReviewControllerの
代替手段で

00:16:06.800 --> 00:16:11.538 align:start position:27% line:-2
ユーザに操作を
求める現行UIより簡単です

00:16:11.872 --> 00:16:17.177 align:start position:27% line:-2
例えばアプリケーション内の
設定ページのボタンで―

00:16:17.277 --> 00:16:19.479 align:start position:30% line:-1
レビューを依頼できます

00:16:19.646 --> 00:16:23.517 align:start position:30% line:-2
製品ページへのリンクを
使いましょう

00:16:24.017 --> 00:16:27.454 align:start position:27% line:-1
方法はきわめてシンプルです

00:16:28.155 --> 00:16:32.693 align:start position:7% line:-2
製品ページURLの末尾に
“action=write-review”を加え

00:16:32.793 --> 00:16:36.196 align:start position:27% line:-1
レビューシートを表示します

00:16:36.330 --> 00:16:41.502 align:start position:25% line:-2
各自の製品URLの取得方法が
分からない場合は―

00:16:41.735 --> 00:16:46.140 align:start position:2% line:-2
linkmaker.itunes.apple.comへ
どうぞ

00:16:46.406 --> 00:16:49.610 align:start position:34% line:-2
ユーザレビューへの
対応方法など―

00:16:49.710 --> 00:16:53.447 align:start position:32% line:-2
評価とレビュー情報を
参照できます

00:16:55.949 --> 00:17:00.287 align:start position:21% line:-2
次にSandboxの詳細について
説明します

00:16:55.949 --> 00:17:00.287 align:start position:21% line:-2
次にSandboxの詳細について
説明します

00:17:00.888 --> 00:17:03.323 align:start position:25% line:-1
ここで言うSandboxは―

00:17:03.624 --> 00:17:09.061 align:start position:25% line:-2
アプリケーションの
Sandboxとは異なります

00:17:09.162 --> 00:17:12.665 align:start position:32% line:-2
そのSandboxは
OSの一部であり―

00:17:12.766 --> 00:17:14.968 align:start position:32% line:-1
アクセスを制限します

00:17:15.068 --> 00:17:19.839 align:start position:23% line:-2
ここで説明するSandboxは
環境のことです

00:17:19.940 --> 00:17:24.811 align:start position:25% line:-2
サーバ側のApp Store
商用エンジンのコピーで―

00:17:24.912 --> 00:17:27.214 align:start position:29% line:-1
App内課金テスト用です

00:17:28.682 --> 00:17:32.152 align:start position:34% line:-2
StoreKitは
署名に基づいて―

00:17:32.252 --> 00:17:34.421 align:start position:23% line:-1
Sandbox環境に変わります

00:17:34.755 --> 00:17:40.227 align:start position:25% line:-2
例えばXcodeでの作業中に
証明書でサインインすると

00:17:40.527 --> 00:17:45.165 align:start position:25% line:-2
StoreKitは要求を
Sandbox環境に送ります

00:17:46.466 --> 00:17:51.705 align:start position:23% line:-2
ユーザがApp Storeから
Appをダウンロードすると

00:17:51.839 --> 00:17:55.843 align:start position:27% line:-2
StoreKitは
通常の本番環境に移行します

00:17:56.844 --> 00:18:00.214 align:start position:25% line:-1
Sandbox環境の特徴は？

00:17:56.844 --> 00:18:00.214 align:start position:25% line:-1
Sandbox環境の特徴は？

00:18:01.014 --> 00:18:05.385 align:start position:32% line:-2
まずテスト環境なので
課金が発生しません

00:18:05.686 --> 00:18:09.423 align:start position:36% line:-2
テストでの課金は
無意味ですから

00:18:10.124 --> 00:18:12.226 align:start position:36% line:-1
２つ目の特徴です

00:18:12.326 --> 00:18:16.463 align:start position:16% line:-2
デベロッパは
App Store Connectで―

00:18:16.630 --> 00:18:20.834 align:start position:29% line:-2
Sandbox環境用の
専用アカウントを作ります

00:18:20.934 --> 00:18:24.004 align:start position:27% line:-2
App内課金アカウントとは
別です

00:18:25.239 --> 00:18:28.675 align:start position:29% line:-2
また完全に別の
バックエンド環境なので―

00:18:28.776 --> 00:18:34.581 align:start position:27% line:-2
URLはレシート検証時とは
完全に別のURLになります

00:18:34.681 --> 00:18:36.850 align:start position:34% line:-1
ここは重要な点です

00:18:36.950 --> 00:18:41.722 align:start position:32% line:-2
開発テストレシートを
QAサーバに送り―

00:18:41.822 --> 00:18:46.727 align:start position:12% line:-2
verifyReceiptエンドポイントに
渡す場合です

00:18:47.261 --> 00:18:49.396 align:start position:36% line:-1
後ほど説明します

00:18:50.397 --> 00:18:53.433 align:start position:30% line:-2
StoreKitには
テストモードもあります

00:18:53.534 --> 00:18:57.604 align:start position:7% line:-2
例えば
SKReceiptRefreshRequestで

00:18:57.704 --> 00:19:01.442 align:start position:30% line:-2
期限切れレシートを
取得する引数を使えます

00:18:57.704 --> 00:19:01.442 align:start position:30% line:-2
期限切れレシートを
取得する引数を使えます

00:19:01.542 --> 00:19:07.181 align:start position:29% line:-2
つまり期限切れレシートの
テストができるのです

00:19:08.382 --> 00:19:12.152 align:start position:27% line:-2
また子供が親に
App内課金を頼んだ場合―

00:19:12.252 --> 00:19:16.223 align:start position:32% line:-2
何が起きるかも
シミュレートできます

00:19:16.657 --> 00:19:19.326 align:start position:0% line:-1
simulatesAskToBuyInSandboxです

00:19:20.961 --> 00:19:26.200 align:start position:27% line:-2
一番大きな違いは
App内定期購読の処理です

00:19:26.300 --> 00:19:29.570 align:start position:27% line:-1
自動更新までを追跡できます

00:19:29.736 --> 00:19:32.339 align:start position:30% line:-1
年間定期購読の場合は―

00:19:32.539 --> 00:19:37.911 align:start position:27% line:-2
１年間待って更新を
テストするわけにいきません

00:19:38.979 --> 00:19:40.881 align:start position:32% line:-1
一般的な目安として―

00:19:40.981 --> 00:19:45.452 align:start position:25% line:-2
１年間は
Sandboxでは１時間です

00:19:46.153 --> 00:19:50.490 align:start position:30% line:-2
１カ月間の定期購読なら
５分間になります

00:19:51.925 --> 00:19:56.497 align:start position:29% line:-2
自動更新の数は５つまでに
制限されます

00:19:56.597 --> 00:20:00.367 align:start position:30% line:-2
つまり最初に
定期購読を購入すると―

00:19:56.597 --> 00:20:00.367 align:start position:30% line:-2
つまり最初に
定期購読を購入すると―

00:20:00.467 --> 00:20:06.006 align:start position:29% line:-2
５つの自動更新が自動的に
始まって終わります

00:20:06.106 --> 00:20:07.641 align:start position:36% line:-1
これはユーザが―

00:20:07.741 --> 00:20:12.746 align:start position:27% line:-2
定期購読を無効にした場合の
シミュレーションです

00:20:12.846 --> 00:20:17.684 align:start position:32% line:-2
つまりユーザの意思で
やめる場合のことです

00:20:20.220 --> 00:20:25.092 align:start position:16% line:-2
この状況を設定するには
App Store Connectで―

00:20:25.259 --> 00:20:26.793 align:start position:34% line:-1
ユーザを作成します

00:20:28.095 --> 00:20:30.497 align:start position:32% line:-1
製品も作成しましょう

00:20:30.597 --> 00:20:34.501 align:start position:32% line:-2
これらの情報を
サーバに置いてから―

00:20:35.402 --> 00:20:38.672 align:start position:25% line:-2
XcodeでAppを構築して
署名します

00:20:39.106 --> 00:20:42.042 align:start position:27% line:-2
アプリケーションを起動して
製品を探し―

00:20:42.242 --> 00:20:45.913 align:start position:27% line:-2
Sandboxアカウントで
サインインします

00:20:47.881 --> 00:20:50.884 align:start position:27% line:-1
ここで疑問を覚えるでしょう

00:20:52.085 --> 00:20:57.991 align:start position:23% line:-2
“本番アプリケーションや
Storeにサインイン済みだ”

00:20:58.158 --> 00:21:01.061 align:start position:25% line:-2
“先に
サインアウトすべきでは？”と

00:20:58.158 --> 00:21:01.061 align:start position:25% line:-2
“先に
サインアウトすべきでは？”と

00:21:01.795 --> 00:21:04.832 align:start position:21% line:-1
iOS 12からは必要ありません

00:21:05.265 --> 00:21:11.472 align:start position:43% line:-1
(拍手)

00:21:11.572 --> 00:21:13.974 align:start position:27% line:-1
本番用とSandboxで―

00:21:14.074 --> 00:21:17.611 align:start position:32% line:-2
アカウントを
画面下部で分けました

00:21:17.711 --> 00:21:22.382 align:start position:32% line:-2
証明書で使う環境を
区別するのと同様です

00:21:22.483 --> 00:21:27.955 align:start position:27% line:-2
Sandboxアカウントを
開発モードで使用して―

00:21:28.655 --> 00:21:30.424 align:start position:39% line:-1
管理できます

00:21:30.858 --> 00:21:33.994 align:start position:34% line:-2
iOS 12からは
個別デバイスで―

00:21:34.428 --> 00:21:37.965 align:start position:27% line:-2
アプリケーションのテストに
差が出ます

00:21:39.967 --> 00:21:42.469 align:start position:29% line:-1
では ロスを再び呼んで―

00:21:42.569 --> 00:21:47.107 align:start position:25% line:-2
トランザクション処理の
ベストプラクティスを聞きます

00:21:47.207 --> 00:21:47.941 align:start position:46% line:-1
ロス

00:21:48.609 --> 00:21:52.646 align:start position:43% line:-1
(拍手)

00:21:55.549 --> 00:21:59.953 align:start position:30% line:-2
例を挙げながら
最適な方法を説明します

00:22:01.054 --> 00:22:05.325 align:start position:32% line:-2
まずトランザクション
オブザーバを―

00:22:05.425 --> 00:22:07.728 align:start position:30% line:-1
なるべく早く追加します

00:22:09.696 --> 00:22:15.469 align:start position:29% line:-2
トランザクション開始まで
追加されていない場合が―

00:22:15.569 --> 00:22:17.471 align:start position:36% line:-1
かなり見られます

00:22:18.138 --> 00:22:20.274 align:start position:32% line:-1
お勧めの追加時期は―

00:22:20.374 --> 00:22:24.177 align:start position:0% line:-2
AppDelegateのdidFinishLaunching
WithOptionsメソッド中です

00:22:25.913 --> 00:22:31.018 align:start position:27% line:-2
ユーザがアプリケーションで
行う変更は重要であり―

00:22:31.118 --> 00:22:36.056 align:start position:23% line:-2
StoreKitはオブザーバで
変更を処理するからです

00:22:36.423 --> 00:22:41.094 align:start position:30% line:-2
適切な処理はユーザと
ビジネス双方に有益です

00:22:42.829 --> 00:22:45.566 align:start position:34% line:-2
トランザクションの
中断例を挙げます

00:22:46.433 --> 00:22:51.405 align:start position:27% line:-2
例えばトランザクション中に
ユーザが離れた場合―

00:22:52.473 --> 00:22:55.876 align:start position:32% line:-2
アプリケーションは
システムが終了します

00:22:56.343 --> 00:23:01.949 align:start position:21% line:-2
トランザクションオブザーバなしで
再開時の処理続行が判断できません

00:22:56.343 --> 00:23:01.949 align:start position:21% line:-2
トランザクションオブザーバなしで
再開時の処理続行が判断できません

00:23:02.416 --> 00:23:06.720 align:start position:29% line:-2
またユーザが新たな購入を
行うと―

00:23:07.588 --> 00:23:11.792 align:start position:29% line:-2
プロンプトが２つ表示され
混乱します

00:23:12.159 --> 00:23:13.260 align:start position:38% line:-1
よくありません

00:23:15.095 --> 00:23:19.766 align:start position:30% line:-2
またユーザは請求情報の
入力中に離れることも

00:23:19.900 --> 00:23:25.139 align:start position:23% line:-2
スムーズに処理を再開したいなら
早期追加すべきです

00:23:27.174 --> 00:23:30.043 align:start position:30% line:-1
最後の例は異常終了です

00:23:30.244 --> 00:23:33.213 align:start position:29% line:-2
この場合も
スムーズな再開が理想です

00:23:36.016 --> 00:23:40.120 align:start position:32% line:-2
早期追加すべき理由は
他にもあります

00:23:41.021 --> 00:23:44.258 align:start position:27% line:-2
アプリケーション外の
トランザクションがあります

00:23:45.225 --> 00:23:48.295 align:start position:21% line:-2
トランザクションオブザーバ経由の
定期購読更新です

00:23:49.096 --> 00:23:53.967 align:start position:27% line:-2
自動更新が成功すると
トランザクションを受けます

00:23:54.968 --> 00:23:56.270 align:start position:38% line:-1
早く受け取り―

00:23:56.370 --> 00:24:01.108 align:start position:30% line:-2
ユーザの支払い時に
中断しないようにします

00:23:56.370 --> 00:24:01.108 align:start position:30% line:-2
ユーザの支払い時に
中断しないようにします

00:24:03.110 --> 00:24:04.945 align:start position:34% line:-1
App内課金では―

00:24:05.045 --> 00:24:09.216 align:start position:21% line:-2
トランザクションはクリックで
アプリケーションに引き渡されます

00:24:09.449 --> 00:24:11.885 align:start position:29% line:-1
スムーズな移行が必要です

00:24:13.587 --> 00:24:18.859 align:start position:21% line:-2
最後にプロモコードはStoreで
処理されて送られます

00:24:23.263 --> 00:24:26.833 align:start position:18% line:-2
finishTransactionを
いつ呼び出すか？

00:24:27.935 --> 00:24:33.173 align:start position:27% line:-2
トランザクションの成功後
コンテンツをダウンロードし

00:24:33.273 --> 00:24:36.777 align:start position:34% line:-2
ユーザに提供した後
呼び出します

00:24:36.877 --> 00:24:39.713 align:start position:30% line:-1
または処理の失敗時です

00:24:41.014 --> 00:24:42.282 align:start position:38% line:-1
では ここで―

00:24:42.916 --> 00:24:47.054 align:start position:32% line:-2
各ステータスと
処理方法を説明します

00:24:48.088 --> 00:24:49.423 align:start position:27% line:-1
purchasingでは―

00:24:49.857 --> 00:24:54.628 align:start position:29% line:-2
特に処理は必要なく
ステータス変更を待ちます

00:24:56.430 --> 00:24:59.466 align:start position:20% line:-1
purchasedは完了を示します

00:25:00.000 --> 00:25:03.971 align:start position:7% line:-2
コンテンツを提供し
finishTransactionを呼び出します

00:25:06.140 --> 00:25:09.676 align:start position:32% line:-2
failedは
処理の失敗を示します

00:25:10.010 --> 00:25:15.282 align:start position:27% line:-2
エラーを検証して
UI更新やレコード分析など

00:25:15.582 --> 00:25:17.518 align:start position:34% line:-1
必要な作業をします

00:25:18.185 --> 00:25:19.786 align:start position:38% line:-1
ユーザによる―

00:25:20.587 --> 00:25:24.291 align:start position:30% line:-2
キャンセルでも
failedになります

00:25:24.458 --> 00:25:29.897 align:start position:27% line:-2
キャンセルの場合は
UIの表示は必要ありません

00:25:29.997 --> 00:25:32.766 align:start position:29% line:-1
ユーザへの表示は不要です

00:25:35.836 --> 00:25:38.639 align:start position:23% line:-1
restoredステータスは―

00:25:39.072 --> 00:25:44.344 align:start position:29% line:-2
処理の完了なのでユーザに
コンテンツを提供します

00:25:44.545 --> 00:25:46.246 align:start position:18% line:-2
finishTransactionを
呼び出します

00:25:48.649 --> 00:25:52.653 align:start position:23% line:-2
deferredは
purchasingと同様です

00:25:52.986 --> 00:25:56.690 align:start position:30% line:-2
外部アクションの待機を
示します

00:25:57.424 --> 00:25:59.960 align:start position:25% line:-1
Ask to Buy機能は―

00:26:00.427 --> 00:26:03.130 align:start position:30% line:-1
ペアレント承認機能です

00:26:03.230 --> 00:26:06.433 align:start position:30% line:-2
親が手動で
承認か拒否を選択します

00:26:07.501 --> 00:26:09.736 align:start position:29% line:-1
ユーザの任意設定なので―

00:26:10.137 --> 00:26:14.341 align:start position:32% line:-2
App内課金での
適切な処置が重要です

00:26:17.678 --> 00:26:19.046 align:start position:32% line:-1
トランザクションが―

00:26:20.114 --> 00:26:22.716 align:start position:27% line:-2
Ask to Buyで
deferredだとします

00:26:23.250 --> 00:26:28.155 align:start position:27% line:-2
ユーザには親に通知済みだと
表示されます

00:26:29.490 --> 00:26:30.624 align:start position:38% line:-1
承認されると―

00:26:31.625 --> 00:26:35.629 align:start position:18% line:-2
トランザクションオブザーバに
返され purchasedになります

00:26:35.996 --> 00:26:40.868 align:start position:27% line:-2
承認の通知 コンテンツ提供
呼び出しを行います

00:26:43.036 --> 00:26:46.773 align:start position:30% line:-2
拒否された場合は
failedになります

00:26:47.007 --> 00:26:51.545 align:start position:30% line:-2
ユーザに拒否を通知して
呼び出します

00:26:52.179 --> 00:26:57.651 align:start position:29% line:-2
ただし24時間以内に
アクションが取られないと

00:26:57.751 --> 00:27:01.455 align:start position:34% line:-2
トランザクションは
静かに失敗します

00:26:57.751 --> 00:27:01.455 align:start position:34% line:-2
トランザクションは
静かに失敗します

00:27:02.022 --> 00:27:05.325 align:start position:23% line:-2
トランザクションオブザーバには
何も返されません

00:27:05.592 --> 00:27:06.660 align:start position:41% line:-1
そのうえ―

00:27:07.161 --> 00:27:12.432 align:start position:18% line:-2
24時間以内のAsk to Buyは
単一の要求に統合されます

00:27:13.400 --> 00:27:18.939 align:start position:27% line:-2
ですからdeferredの
トランザクションは待たずに

00:27:19.039 --> 00:27:23.477 align:start position:29% line:-2
アプリケーションの使用を
続行させてください

00:27:24.645 --> 00:27:26.914 align:start position:34% line:-1
もう１つ注意点です

00:27:27.014 --> 00:27:30.450 align:start position:23% line:-2
SKDownload経由
Appleホストコンテンツでは

00:27:30.818 --> 00:27:35.722 align:start position:27% line:-2
呼び出し前にダウンロードを
完了させてください

00:27:36.857 --> 00:27:39.193 align:start position:18% line:-2
finishTransactionを
呼び出すと―

00:27:39.293 --> 00:27:43.797 align:start position:29% line:-2
SKDownloadは
キャンセルされるからです

00:27:44.231 --> 00:27:49.169 align:start position:18% line:-2
間違えた場合はrestore
Transactionを呼び出します

00:27:49.269 --> 00:27:54.208 align:start position:29% line:-2
ダウンロードが失敗しても
呼び出さず再試行して―

00:27:54.308 --> 00:27:58.679 align:start position:32% line:-2
コンテンツをユーザに
提供してください

00:28:00.981 --> 00:28:03.517 align:start position:11% line:-1
Receipt Verificationも―

00:28:04.451 --> 00:28:08.188 align:start position:18% line:-2
finishTransactionの
呼び出し前です

00:28:08.755 --> 00:28:11.792 align:start position:30% line:-2
消耗型の
App内課金には注意を

00:28:11.892 --> 00:28:16.230 align:start position:30% line:-2
未完了の場合だけ
レシートに表示されます

00:28:16.697 --> 00:28:21.235 align:start position:32% line:-2
呼び出すと表示されず
検証できなくなります

00:28:21.702 --> 00:28:24.171 align:start position:14% line:-2
Receipt Verification
使用時には―

00:28:24.271 --> 00:28:29.910 align:start position:29% line:-2
ユーザが支払った処理だと
確認してから呼び出します

00:28:31.912 --> 00:28:35.048 align:start position:32% line:-2
次はデイナが
レシートを説明します

00:28:36.250 --> 00:28:38.752 align:start position:43% line:-1
(拍手)

00:28:39.753 --> 00:28:40.988 align:start position:36% line:-1
ありがとう　ロス

00:28:43.824 --> 00:28:45.159 align:start position:38% line:-1
レシートとは―

00:28:45.993 --> 00:28:49.162 align:start position:30% line:-1
App内課金の記録です

00:28:49.263 --> 00:28:54.368 align:start position:29% line:-2
商品を買った時の
紙のレシートと似ています

00:28:56.403 --> 00:29:00.641 align:start position:23% line:-2
App Storeから取得する
ファイルのことで―

00:28:56.403 --> 00:29:00.641 align:start position:23% line:-2
App Storeから取得する
ファイルのことで―

00:29:00.741 --> 00:29:06.380 align:start position:23% line:-2
StoreKitでは作成されず
アプリケーションで読めます

00:29:07.648 --> 00:29:11.885 align:start position:27% line:-2
App Storeの署名で
本物と分かります

00:29:12.986 --> 00:29:16.890 align:start position:29% line:-2
各自のアプリケーションと
デバイス専用です

00:29:17.291 --> 00:29:20.627 align:start position:29% line:-2
レシートとは
実行対象のデバイス上で―

00:29:20.727 --> 00:29:24.698 align:start position:27% line:-2
アプリケーションが有効かを
確認する方法です

00:29:26.500 --> 00:29:29.536 align:start position:29% line:-1
検証方法は二通りあります

00:29:29.636 --> 00:29:32.539 align:start position:27% line:-1
１つはデバイスでの検証です

00:29:32.639 --> 00:29:36.743 align:start position:29% line:-2
デバイス上で暗号を使って
検証を行い―

00:29:36.844 --> 00:29:40.514 align:start position:34% line:-2
コンテンツを
ロック解除できます

00:29:40.614 --> 00:29:44.484 align:start position:34% line:-2
もう１つは
サーバでの検証です

00:29:44.585 --> 00:29:50.090 align:start position:27% line:-2
信頼できるサーバに
レシートを送って管理します

00:29:51.625 --> 00:29:56.163 align:start position:20% line:-2
itunes.apple.com/
verifyreceiptに―

00:29:56.263 --> 00:30:01.435 align:start position:23% line:-2
レシートを送ると
App Storeが検証します

00:29:56.263 --> 00:30:01.435 align:start position:23% line:-2
レシートを送ると
App Storeが検証します

00:30:01.535 --> 00:30:05.038 align:start position:29% line:-2
バックエンドのサービスに
便利です

00:30:05.906 --> 00:30:11.011 align:start position:29% line:-2
デバイス検証の説明も
あるので概要にとどめます

00:30:11.111 --> 00:30:16.250 align:start position:18% line:-2
詳しくは“Engineering
Subscriptions”でどうぞ

00:30:16.350 --> 00:30:20.354 align:start position:34% line:-2
ここホール１で
３時から始まります

00:30:22.222 --> 00:30:26.226 align:start position:34% line:-2
サーバ検証について
１点だけ述べます

00:30:27.227 --> 00:30:33.333 align:start position:23% line:-2
レシートをデバイスからサーバに
送るのは正しい処置です

00:30:34.268 --> 00:30:37.571 align:start position:34% line:-2
ただしデバイスから
レシートを―

00:30:37.671 --> 00:30:40.240 align:start position:32% line:-1
直接送信しないように

00:30:40.874 --> 00:30:45.779 align:start position:30% line:-2
ユーザのデバイスは
制御されていないのです

00:30:45.879 --> 00:30:48.148 align:start position:23% line:-1
App Storeの接続もです

00:30:48.248 --> 00:30:51.852 align:start position:30% line:-2
アプリケーションからは
接続しないでください

00:30:51.952 --> 00:30:54.822 align:start position:36% line:-2
必ず中間サーバに
送信してください

00:30:57.724 --> 00:30:59.893 align:start position:32% line:-1
レシートの構造とは？

00:31:00.861 --> 00:31:04.498 align:start position:34% line:-2
購入情報と証明書
署名で構成されます

00:31:04.631 --> 00:31:07.935 align:start position:25% line:-1
このためのAPIを提供します

00:31:08.502 --> 00:31:10.437 align:start position:27% line:-1
レシートは単一ファイルです

00:31:12.139 --> 00:31:14.842 align:start position:32% line:-2
オープンソース標準を
使用します

00:31:15.109 --> 00:31:17.811 align:start position:29% line:-1
PKCS暗号コンテナと―

00:31:18.078 --> 00:31:21.415 align:start position:30% line:-2
ASN.1で
メタデータを格納します

00:31:21.515 --> 00:31:26.553 align:start position:29% line:-2
これらは資料も豊富な
オープンファイル形式です

00:31:27.755 --> 00:31:32.125 align:start position:32% line:-2
検証と読み込み用
オプションも豊富です

00:31:32.326 --> 00:31:34.194 align:start position:27% line:-1
OpenSSLやasn1c

00:31:34.294 --> 00:31:38.031 align:start position:32% line:-2
独自に作成することも
可能です

00:31:38.532 --> 00:31:41.135 align:start position:29% line:-1
レシートを読み込むには―

00:31:41.235 --> 00:31:44.404 align:start position:4% line:-2
bundle.appStoreReceiptURLを
呼び出します

00:31:44.505 --> 00:31:49.843 align:start position:25% line:-2
返されるURLはファイルへの
パスにすぎません

00:31:50.210 --> 00:31:54.448 align:start position:25% line:-2
内容を読み込み
BLOBをメモリに格納します

00:31:54.548 --> 00:31:56.750 align:start position:32% line:-1
サーバ検証の場合は―

00:31:56.850 --> 00:32:00.954 align:start position:30% line:-2
サーバに送ります
またはデバイス処理です

00:31:56.850 --> 00:32:00.954 align:start position:30% line:-2
サーバに送ります
またはデバイス処理です

00:32:01.889 --> 00:32:07.027 align:start position:23% line:-2
OpenSSLで処理する場合の
アドバイスです

00:32:07.127 --> 00:32:10.030 align:start position:29% line:-1
動的ライブラリではなく―

00:32:10.430 --> 00:32:14.468 align:start position:36% line:-2
静的ライブラリを
使う方が安全です

00:32:15.636 --> 00:32:19.039 align:start position:20% line:-2
Apple Root CA証明書を
使用する場合―

00:32:19.139 --> 00:32:24.511 align:start position:27% line:-2
オンラインで取得できますし
文書も多数あります

00:32:24.611 --> 00:32:27.247 align:start position:29% line:-1
ただし期限切れにご注意を

00:32:30.450 --> 00:32:33.987 align:start position:34% line:-2
ソリューションは
数多くありますが―

00:32:34.288 --> 00:32:37.691 align:start position:36% line:-2
そのリスクも
認識してください

00:32:37.791 --> 00:32:41.428 align:start position:29% line:-2
実装するソリューションの
リスクを―

00:32:41.528 --> 00:32:43.831 align:start position:30% line:-1
理解する必要があります

00:32:44.331 --> 00:32:49.736 align:start position:29% line:-2
使用中のソリューションに
脆弱性が発見された場合―

00:32:50.137 --> 00:32:52.840 align:start position:27% line:-1
アプリケーションも危険です

00:32:54.007 --> 00:32:58.679 align:start position:27% line:-2
注意して選び
各自の収入源を守りましょう

00:33:02.115 --> 00:33:06.720 align:start position:34% line:-2
レシートには署名と
証明書があります

00:33:07.020 --> 00:33:08.655 align:start position:29% line:-1
ベストプラクティスとして

00:33:09.490 --> 00:33:15.362 align:start position:29% line:-2
証明書の有効期限は
現在時刻で確認しないこと

00:33:15.729 --> 00:33:19.867 align:start position:29% line:-2
ユーザがデバイスの時刻を
変更することが―

00:33:20.667 --> 00:33:22.002 align:start position:38% line:-1
可能だからです

00:33:24.004 --> 00:33:25.973 align:start position:34% line:-1
そしてレシートは―

00:33:26.073 --> 00:33:30.277 align:start position:32% line:-2
証明書が期限切れでも
無効とは限りません

00:33:30.711 --> 00:33:34.948 align:start position:29% line:-2
トランザクションの日付と
比較してください

00:33:35.048 --> 00:33:37.117 align:start position:30% line:-1
全トランザクションが―

00:33:37.217 --> 00:33:41.422 align:start position:34% line:-2
有効期限前なら
有効なレシートです

00:33:44.124 --> 00:33:47.828 align:start position:32% line:-2
ではレシートの詳細に
移りましょう

00:33:48.495 --> 00:33:52.666 align:start position:29% line:-2
購入情報には
タイプと属性が含まれます

00:33:53.133 --> 00:33:55.769 align:start position:27% line:-1
この例にもバンドルIDと―

00:33:56.437 --> 00:33:58.705 align:start position:32% line:-1
関連する値があります

00:34:01.375 --> 00:34:04.945 align:start position:29% line:-2
アプリケーションの
レシートを確認する場合―

00:34:05.045 --> 00:34:07.314 align:start position:29% line:-1
バンドルIDを確認します

00:34:07.781 --> 00:34:12.252 align:start position:25% line:-2
タイプ３はアプリケーションの
バージョンを示します

00:34:14.121 --> 00:34:17.524 align:start position:30% line:-2
ハードコーティング値を
使い―

00:34:17.623 --> 00:34:20.594 align:start position:27% line:-2
Info.plistのみを
参照しないように

00:34:20.694 --> 00:34:23.496 align:start position:21% line:-1
Info.plistを変更して―

00:34:23.597 --> 00:34:26.800 align:start position:38% line:-2
なりすますのが
簡単だからです

00:34:27.734 --> 00:34:32.505 align:start position:29% line:-2
レシートのバンドルIDと
バージョンを確認したら―

00:34:32.973 --> 00:34:36.109 align:start position:34% line:-2
デバイスで有効かを
確認します

00:34:36.208 --> 00:34:38.879 align:start position:29% line:-1
属性５を使用してください

00:34:39.213 --> 00:34:43.717 align:start position:30% line:-2
属性５はカップル値の
SHA-1ハッシュです

00:34:44.518 --> 00:34:49.623 align:start position:27% line:-2
バンドルID デバイスID
アプリケーションの―

00:34:49.723 --> 00:34:53.360 align:start position:30% line:-2
実行ハードウェアと
オペーク値が含まれます

00:34:53.460 --> 00:34:59.099 align:start position:27% line:-2
暗号的で経時変化しますが
タイプ４として格納されます

00:34:59.433 --> 00:35:04.171 align:start position:23% line:-2
これら３つの値で
SHA-1ハッシュを生成します

00:34:59.433 --> 00:35:04.171 align:start position:23% line:-2
これら３つの値で
SHA-1ハッシュを生成します

00:35:04.738 --> 00:35:10.377 align:start position:29% line:-2
レシートの値とハッシュを
比較して一致していれば―

00:35:10.477 --> 00:35:14.548 align:start position:30% line:-2
該当デバイスで
生成されたレシートです

00:35:17.351 --> 00:35:19.953 align:start position:30% line:-1
レシートが無効な場合―

00:35:21.255 --> 00:35:23.657 align:start position:29% line:-1
または存在しない場合は？

00:35:24.825 --> 00:35:29.763 align:start position:27% line:-2
StoreKitのAPIで
新規レシートを要求します

00:35:30.130 --> 00:35:33.200 align:start position:34% line:-2
商用バックエンドが
介在するので―

00:35:33.300 --> 00:35:37.771 align:start position:30% line:-2
この操作には
ネットワークが必要です

00:35:38.572 --> 00:35:44.144 align:start position:25% line:-2
本物のユーザからの
レシートだと確認するためには

00:35:44.244 --> 00:35:46.113 align:start position:32% line:-1
サインインが必要です

00:35:48.348 --> 00:35:50.918 align:start position:38% line:-2
レシート更新が
終わったら―

00:35:51.018 --> 00:35:54.421 align:start position:29% line:-2
検証が
ループしないようにします

00:35:54.521 --> 00:35:59.860 align:start position:30% line:-2
更新されたレシートが
無効ならエラーにします

00:36:00.494 --> 00:36:02.196 align:start position:36% line:-1
コードはこうです

00:36:02.729 --> 00:36:05.899 align:start position:7% line:-2
SKReceiptRefreshRequestを
呼び出し―

00:36:05.999 --> 00:36:11.071 align:start position:20% line:-2
購入キューをdelegateにして
startを呼び出します

00:36:11.171 --> 00:36:15.175 align:start position:29% line:-2
レシートの更新が終われば
通知されます

00:36:17.244 --> 00:36:22.516 align:start position:20% line:-2
macOSではexit(173)を
呼び出せます

00:36:22.616 --> 00:36:26.420 align:start position:25% line:-2
このコードがOSと
StoreKitでレシートを

00:36:26.520 --> 00:36:28.822 align:start position:32% line:-1
リフレッシュさせます

00:36:29.223 --> 00:36:32.526 align:start position:34% line:-2
アプリケーションは
再起動されます

00:36:34.761 --> 00:36:37.097 align:start position:30% line:-1
先ほども触れましたが―

00:36:37.197 --> 00:36:42.236 align:start position:29% line:-2
非定期購読型でも
無料トライアルを使えます

00:36:42.336 --> 00:36:46.106 align:start position:32% line:-2
その際 レシートで
トライアル期間中か―

00:36:46.807 --> 00:36:50.244 align:start position:27% line:-2
完全ロック解除を購入したか
確認できます

00:36:52.012 --> 00:36:56.417 align:start position:29% line:-2
レシート内のタイプ17で
確認してください

00:36:56.517 --> 00:37:02.156 align:start position:25% line:-2
定期購読のApp内課金情報が
すべて含まれています

00:36:56.517 --> 00:37:02.156 align:start position:25% line:-2
定期購読のApp内課金情報が
すべて含まれています

00:37:03.190 --> 00:37:08.162 align:start position:29% line:-2
タイプ17内には
２種類のデータがあります

00:37:10.430 --> 00:37:15.636 align:start position:27% line:-2
タイプ1702は製品IDで
非消耗型のApp内課金と

00:37:15.736 --> 00:37:17.905 align:start position:32% line:-1
関連付けられています

00:37:18.438 --> 00:37:20.741 align:start position:34% line:-1
ここを確認すれば―

00:37:20.841 --> 00:37:24.645 align:start position:30% line:-2
無料トライアルの開始が
分かります

00:37:24.745 --> 00:37:27.915 align:start position:32% line:-2
アプリケーションの
完全ロック解除もです

00:37:29.283 --> 00:37:33.086 align:start position:30% line:-2
タイプ1704では
消耗型のApp内課金の

00:37:33.187 --> 00:37:35.589 align:start position:34% line:-1
購入日が分かります

00:37:38.325 --> 00:37:40.561 align:start position:30% line:-1
アルゴリズムはこうです

00:37:40.661 --> 00:37:46.066 align:start position:27% line:-2
タイプ17のApp内課金を
すべて反復処理します

00:37:46.967 --> 00:37:51.104 align:start position:27% line:-2
完全ロック解除の製品IDが
あれば―

00:37:51.205 --> 00:37:54.675 align:start position:27% line:-1
その時点で作業は終わりです

00:37:54.775 --> 00:37:59.880 align:start position:21% line:-2
完全ロック解除を購入したユーザに
アクセスを与えます

00:38:01.215 --> 00:38:03.617 align:start position:32% line:-1
もう１つのケースです

00:38:03.717 --> 00:38:08.989 align:start position:27% line:-2
無料トライアルの製品IDが
ある場合は―

00:38:09.089 --> 00:38:12.726 align:start position:30% line:-2
関連付けられた購入日を
確認します

00:38:13.594 --> 00:38:15.362 align:start position:34% line:-1
ここからが複雑です

00:38:15.963 --> 00:38:19.366 align:start position:36% line:-2
デバイスの時刻は
信頼できません

00:38:19.466 --> 00:38:23.437 align:start position:32% line:-2
バックエンドサーバを
各自で用意して―

00:38:23.537 --> 00:38:26.874 align:start position:32% line:-2
無料期間中かどうかを
確認します

00:38:27.641 --> 00:38:29.977 align:start position:20% line:-1
DeviceCheck APIは―

00:38:30.077 --> 00:38:33.580 align:start position:34% line:-2
役に立つので
使用をお勧めします

00:38:33.680 --> 00:38:38.018 align:start position:30% line:-2
以前に無料トライアルを
完了済みか分かります

00:38:39.687 --> 00:38:45.292 align:start position:27% line:-2
最後にまだ無料トライアルを
実装していない場合は―

00:38:45.392 --> 00:38:50.097 align:start position:29% line:-2
これを機会に
始めることをお勧めします

00:38:50.197 --> 00:38:55.135 align:start position:30% line:-2
その際は無料期間と
完全ロック解除の料金―

00:38:55.235 --> 00:38:59.073 align:start position:30% line:-2
購入しない場合に
失われる内容を示します

00:39:01.642 --> 00:39:05.546 align:start position:29% line:-2
すでにアプリケーションを
販売中の方もいれば―

00:39:05.646 --> 00:39:09.249 align:start position:34% line:-2
無料トライアルを
検討中の方もいます

00:39:10.050 --> 00:39:13.754 align:start position:32% line:-2
レシートが
役立つ場面があります

00:39:14.555 --> 00:39:18.926 align:start position:34% line:-2
定期購読モデルや
無料トライアルに―

00:39:19.026 --> 00:39:23.364 align:start position:30% line:-2
前払いから移行する場合
タイプ19を使います

00:39:23.697 --> 00:39:29.203 align:start position:30% line:-2
最初に購入された時の
バージョンが分かります

00:39:29.937 --> 00:39:34.174 align:start position:27% line:-2
アプリケーションを削除して
再ダウンロードしても―

00:39:34.274 --> 00:39:37.611 align:start position:30% line:-2
初回購入時の
バージョンが示されます

00:39:39.446 --> 00:39:42.683 align:start position:34% line:-2
最初に前払いを
選んだユーザには―

00:39:42.783 --> 00:39:45.986 align:start position:36% line:-2
該当する機能を
提供してください

00:39:46.153 --> 00:39:49.490 align:start position:36% line:-2
定期購読モデルに
移行しても―

00:39:49.590 --> 00:39:52.226 align:start position:30% line:-1
購入条件は変わりません

00:39:52.326 --> 00:39:56.163 align:start position:32% line:-2
最初に購入した内容を
提供します

00:39:58.065 --> 00:40:00.901 align:start position:32% line:-2
レシート内の
タイプ19を使うと―

00:39:58.065 --> 00:40:00.901 align:start position:32% line:-2
レシート内の
タイプ19を使うと―

00:40:01.001 --> 00:40:03.837 align:start position:27% line:-1
購入バージョンが分かります

00:40:05.772 --> 00:40:07.207 align:start position:39% line:-1
おさらいです

00:40:07.307 --> 00:40:08.942 align:start position:38% line:-1
お試し価格は―

00:40:09.042 --> 00:40:13.714 align:start position:29% line:-2
アプリケーションで
顧客を開拓できる手段です

00:40:13.814 --> 00:40:16.350 align:start position:34% line:-1
App内課金では―

00:40:17.017 --> 00:40:20.254 align:start position:32% line:-2
App Storeで
内容を提示します

00:40:20.954 --> 00:40:26.860 align:start position:25% line:-2
非定期購読サービスの
無料トライアルも説明しました

00:40:27.794 --> 00:40:30.831 align:start position:7% line:-1
SKStoreReviewControllerと

00:40:31.231 --> 00:40:36.036 align:start position:27% line:-2
デベロッパの反応についても
ご紹介しました

00:40:37.104 --> 00:40:41.341 align:start position:23% line:-1
Sandbox環境についても―

00:40:41.441 --> 00:40:45.045 align:start position:29% line:-2
本番アカウントとの違いを
説明しました

00:40:45.679 --> 00:40:50.851 align:start position:30% line:-2
トランザクション処理を
ロスが説明しました

00:40:50.951 --> 00:40:56.390 align:start position:11% line:-2
finishTransaction呼び出しの
タイミングもお話ししました

00:40:56.623 --> 00:41:02.396 align:start position:25% line:-2
最後にApp内課金レシートの
デバイス検証と―

00:40:56.623 --> 00:41:02.396 align:start position:25% line:-2
最後にApp内課金レシートの
デバイス検証と―

00:41:02.496 --> 00:41:06.467 align:start position:29% line:-2
無料トライアルへの移行を
説明しました

00:41:08.135 --> 00:41:12.072 align:start position:18% line:-2
詳細は“Engineering
Subscriptions”へどうぞ

00:41:12.172 --> 00:41:14.475 align:start position:34% line:-1
ぜひご参加ください

00:41:14.575 --> 00:41:19.580 align:start position:29% line:-2
ラボも本日午後４時と
木曜日午前９時にあります

00:41:19.680 --> 00:41:22.616 align:start position:30% line:-1
質問にも答える予定です

00:41:22.716 --> 00:41:24.084 align:start position:36% line:-1
どうもありがとう

00:41:24.184 --> 00:41:28.021 align:start position:43% line:-1
(拍手)
