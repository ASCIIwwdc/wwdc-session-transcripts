WEBVTT

00:00:07.040 --> 00:00:15.582 align:start position:43% line:-1
(音楽)

00:00:17.885 --> 00:00:22.656 align:start position:0% line:-2
AutoFill Credential Provider
Extensionの実装方法を説明します

00:00:23.724 --> 00:00:29.730 align:start position:20% line:-2
まずパスワードの自動入力と
iOS 12での改善点を説明します

00:00:30.163 --> 00:00:35.402 align:start position:21% line:-2
次にiOSの新APIを使用して
パスワード管理Appと自動入力が

00:00:35.502 --> 00:00:37.804 align:start position:34% line:-2
どう統合できるかを
お話しします

00:00:38.672 --> 00:00:43.510 align:start position:25% line:-2
新APIを使用する際の
ベストプラクティスについても

00:00:45.712 --> 00:00:48.382 align:start position:29% line:-2
まずは
パスワードの自動入力です

00:00:50.851 --> 00:00:54.354 align:start position:29% line:-2
iOS 11では
２点 改善されていました

00:00:54.688 --> 00:00:58.492 align:start position:21% line:-2
関連性の高いクレデンシャルが
QuickTypeバーに表示され

00:00:58.592 --> 00:01:00.594 align:start position:27% line:-1
ワンタップでアクセス可能に

00:00:58.592 --> 00:01:00.594 align:start position:27% line:-1
ワンタップでアクセス可能に

00:01:00.694 --> 00:01:04.298 align:start position:25% line:-2
２つ目が
パスワード自動入力の導入です

00:01:04.431 --> 00:01:07.868 align:start position:21% line:-2
これでshiny Appと同様に
ウェブやアプリケーションで

00:01:07.968 --> 00:01:12.406 align:start position:25% line:-2
iCloudキーチェーンから
クレデンシャルを楽に使えます

00:01:14.174 --> 00:01:16.710 align:start position:20% line:-1
iOS 12やtvOS 12では―

00:01:16.810 --> 00:01:19.580 align:start position:30% line:-2
デバイスで
クレデンシャルを選べば

00:01:19.680 --> 00:01:22.749 align:start position:30% line:-2
Apple TVで
自動入力機能を使えます

00:01:23.317 --> 00:01:25.586 align:start position:30% line:-2
キーチェーンユーザには
朗報ですが

00:01:25.686 --> 00:01:29.590 align:start position:34% line:-2
他の管理Appを
使うユーザもいます

00:01:30.858 --> 00:01:34.461 align:start position:27% line:-2
彼らも楽にクレデンシャルに
アクセスできるよう―

00:01:34.561 --> 00:01:40.567 align:start position:21% line:-2
iOS 12では他の管理Appも
同じ自動入力に加えられます

00:01:41.902 --> 00:01:45.739 align:start position:36% line:-2
自動入力設定用の
新しいUIがあり

00:01:45.839 --> 00:01:49.877 align:start position:25% line:-2
クレデンシャルを
提供するAppを選択できます

00:01:49.977 --> 00:01:52.846 align:start position:25% line:-2
iCloudキーチェーンとの
併用も可能です

00:01:54.515 --> 00:01:56.216 align:start position:21% line:-1
QuickTypeバーを使えば―

00:01:56.817 --> 00:02:00.654 align:start position:21% line:-2
パスワード管理Appに保存された
クレデンシャルを呼び出せます

00:01:56.817 --> 00:02:00.654 align:start position:21% line:-2
パスワード管理Appに保存された
クレデンシャルを呼び出せます

00:02:00.754 --> 00:02:05.259 align:start position:18% line:-2
その管理Appにバンドルされた
ExtensionがUIを提供します

00:02:05.359 --> 00:02:08.895 align:start position:16% line:-2
クレデンシャルが選択されると
このExtensionが自動入力に返し

00:02:09.696 --> 00:02:12.299 align:start position:30% line:-2
ユーザ名とパスワードが
入力されます

00:02:13.800 --> 00:02:17.070 align:start position:29% line:-2
QuickTypeバーも
同様に機能します

00:02:17.171 --> 00:02:20.374 align:start position:27% line:-2
自動入力で最適な
クレデンシャルが呼び出され

00:02:20.474 --> 00:02:22.809 align:start position:36% line:-2
ワンタップで
アクセスできます

00:02:24.211 --> 00:02:28.849 align:start position:21% line:-2
クレデンシャルを入力する前に
オプションで表示される専用UIで

00:02:28.949 --> 00:02:30.717 align:start position:32% line:-1
ユーザ認証もできます

00:02:33.320 --> 00:02:37.724 align:start position:23% line:-2
パスワード管理Appのユーザは
より楽にログインでき

00:02:37.824 --> 00:02:41.094 align:start position:30% line:-2
クレデンシャルの煩雑な
コピーは不要になります

00:02:41.795 --> 00:02:44.665 align:start position:29% line:-2
他のアプリケーションでも
自動入力できます

00:02:44.765 --> 00:02:47.334 align:start position:32% line:-2
キーチェーンでの
自動入力が可能なら―

00:02:47.434 --> 00:02:50.704 align:start position:30% line:-2
パスワード管理Appと
スムーズに併用できます

00:02:53.140 --> 00:02:58.412 align:start position:21% line:-2
では パスワード管理Appに
これらの機能を実装してみましょう

00:02:58.512 --> 00:03:00.614 align:start position:34% line:-1
ステップは４つです

00:02:58.512 --> 00:03:00.614 align:start position:34% line:-1
ステップは４つです

00:03:02.549 --> 00:03:06.987 align:start position:29% line:-2
まず新しいAPIを使って
プロジェクトを構成します

00:03:07.087 --> 00:03:09.056 align:start position:34% line:-1
Appには機能を―

00:03:09.156 --> 00:03:11.358 align:start position:29% line:-2
プロジェクトには
Extensionを追加

00:03:11.458 --> 00:03:16.363 align:start position:14% line:-2
自動入力はこのExtensionを使って
Appに問い合わせます

00:03:17.931 --> 00:03:22.436 align:start position:12% line:-2
次にQuickTypeバーから
Extensionを開くと ユーザに対して

00:03:22.536 --> 00:03:25.038 align:start position:30% line:-2
選べるクレデンシャルが
表示されます

00:03:26.907 --> 00:03:30.844 align:start position:25% line:-2
自動入力を使用してバーに
クレデンシャルを表示する場合

00:03:30.944 --> 00:03:34.915 align:start position:27% line:-2
表示したいクレデンシャルを
システムに指示し―

00:03:35.015 --> 00:03:37.050 align:start position:32% line:-2
Extensionに
別のAPIを実装して

00:03:37.150 --> 00:03:39.720 align:start position:30% line:-2
クレデンシャルを
選ぶユーザに応答します

00:03:40.754 --> 00:03:45.792 align:start position:20% line:-2
最後に設定でパスワード管理Appを
有効にする場合は―

00:03:45.893 --> 00:03:48.862 align:start position:23% line:-2
ExtensionのUIを
表示可能にするAPIを使います

00:03:48.962 --> 00:03:51.131 align:start position:36% line:-2
各ステップを
詳しく見ましょう

00:03:53.233 --> 00:03:56.236 align:start position:34% line:-2
まずプロジェクトを
変更します

00:03:56.336 --> 00:04:01.108 align:start position:16% line:-2
AutoFill Credential
Providerを有効にします

00:03:56.336 --> 00:04:01.108 align:start position:16% line:-2
AutoFill Credential
Providerを有効にします

00:04:01.208 --> 00:04:03.277 align:start position:27% line:-1
すると必要な資格が追加され

00:04:03.377 --> 00:04:06.547 align:start position:32% line:-2
新しい認証サービスに
リンクします

00:04:06.647 --> 00:04:09.950 align:start position:27% line:-2
これでパスワード自動入力の
APIが提供されます

00:04:12.419 --> 00:04:17.457 align:start position:0% line:-2
次にAutoFill Credential Provider
Extensionをプロジェクトに追加

00:04:17.558 --> 00:04:20.459 align:start position:27% line:-2
Xcode 10には
テンプレートが備わってます

00:04:22.529 --> 00:04:25.065 align:start position:18% line:-2
これにより
ViewControllerクラスと

00:04:25.165 --> 00:04:28.969 align:start position:7% line:-2
ASCredentialProviderView
Controllerのサブクラスを作成

00:04:29.069 --> 00:04:31.171 align:start position:23% line:-2
自動入力にExtensionの
起動が必要な場合

00:04:31.271 --> 00:04:34.608 align:start position:21% line:-2
このクラスのインスタンスが
作成されて メソッドが呼び出され

00:04:34.708 --> 00:04:36.743 align:start position:27% line:-1
サブクラスは上書きされます

00:04:37.978 --> 00:04:40.447 align:start position:32% line:-2
プロジェクトの構成が
終わったら

00:04:40.547 --> 00:04:45.819 align:start position:18% line:-2
QuickTypeバーから呼び出せる
クレデンシャルリストを実装します

00:04:45.919 --> 00:04:47.454 align:start position:32% line:-1
その方法を説明します

00:04:49.156 --> 00:04:53.894 align:start position:18% line:-2
サインインでQuickTypeバーに
クレデンシャルを呼び出せます

00:04:54.862 --> 00:04:59.633 align:start position:16% line:-2
この時 自動入力でExtensionに
ユーザのログイン場所が知らされ

00:04:59.733 --> 00:05:02.469 align:start position:25% line:-2
最も関連性の高い
クレデンシャルが提案されます

00:04:59.733 --> 00:05:02.469 align:start position:25% line:-2
最も関連性の高い
クレデンシャルが提案されます

00:05:04.037 --> 00:05:08.609 align:start position:7% line:-2
自動入力でASCredentialService
Identifierが準備され

00:05:08.709 --> 00:05:11.778 align:start position:27% line:-2
ユーザが使用するサービスを
表示します

00:05:11.879 --> 00:05:14.314 align:start position:27% line:-2
自動入力で最適なサービスが
判断されると―

00:05:14.414 --> 00:05:18.519 align:start position:18% line:-2
Extensionがサービス識別子を
受け取ります

00:05:20.020 --> 00:05:20.821 align:start position:36% line:-1
サービス識別子は

00:05:20.921 --> 00:05:24.158 align:start position:25% line:-2
アプリケーションの
関連するドメインに基づきます

00:05:24.258 --> 00:05:26.326 align:start position:18% line:-1
ユニバーサルリンクHandoffや―

00:05:26.426 --> 00:05:28.362 align:start position:29% line:-1
共有ウェブ証明書を使えば

00:05:28.462 --> 00:05:30.464 align:start position:32% line:-1
ドメインが関連します

00:05:30.931 --> 00:05:35.569 align:start position:7% line:-2
例えば shiny Appは
shiny.example.comと関連づけられ

00:05:35.669 --> 00:05:41.675 align:start position:21% line:-2
このドメインのサービス識別子が
Extensionに提供されます

00:05:42.743 --> 00:05:48.448 align:start position:18% line:-2
Safariではユーザがログイン中の
URLに基づいた識別子になります

00:05:51.318 --> 00:05:54.454 align:start position:23% line:-2
自動入力で識別子が
Extensionに送られる際

00:05:54.555 --> 00:05:59.493 align:start position:11% line:-2
識別子用のクレデンシャルを
View Controllerに呼び出します

00:06:00.194 --> 00:06:04.765 align:start position:14% line:-2
ここでExtensionはUIを設定して
ユーザのクレデンシャルを表示し

00:06:04.865 --> 00:06:09.436 align:start position:21% line:-2
提供されたサービス識別子を使って
関連性の高いものを優先します

00:06:09.870 --> 00:06:12.005 align:start position:29% line:-1
この後の展開は２通りです

00:06:13.874 --> 00:06:16.076 align:start position:20% line:-1
Extensionを閉じる場合は―

00:06:16.176 --> 00:06:22.182 align:start position:7% line:-2
cancelRequest(withErrorを
呼び出します

00:06:23.050 --> 00:06:25.486 align:start position:20% line:-1
するとExtensionが閉じます

00:06:29.189 --> 00:06:32.292 align:start position:29% line:-2
ユーザがクレデンシャルを
選ぶ場合は―

00:06:32.392 --> 00:06:37.097 align:start position:4% line:-2
選択に基づいてExtensionが
ASPasswordCredentialを作成します

00:06:37.197 --> 00:06:40.234 align:start position:18% line:-2
そしてExtension上で選択した
クレデンシャルメソッドを使用して

00:06:40.334 --> 00:06:43.604 align:start position:21% line:-2
リクエストを呼び出し自動入力用に
クレデンシャルを渡します

00:06:44.471 --> 00:06:46.139 align:start position:29% line:-1
自動入力ではそれを使用し

00:06:46.240 --> 00:06:48.876 align:start position:25% line:-2
ユーザ名とパスワードを
アプリケーションに入力します

00:06:51.845 --> 00:06:56.383 align:start position:25% line:-2
この機能を生かすための
ペストプラクティスをいくつか

00:06:56.884 --> 00:07:00.854 align:start position:27% line:-2
まず UIにリクエストの
取り消しボタンを含めること

00:06:56.884 --> 00:07:00.854 align:start position:27% line:-2
まず UIにリクエストの
取り消しボタンを含めること

00:07:01.321 --> 00:07:03.957 align:start position:34% line:-2
サインイン中に
気が変わったとか―

00:07:04.057 --> 00:07:06.160 align:start position:30% line:-2
クレデンシャルがないと
気づいた時

00:07:06.260 --> 00:07:10.430 align:start position:14% line:-2
ボタンを押せばクレデンシャルを
選ばずにExtensionを閉じられます

00:07:12.799 --> 00:07:16.904 align:start position:25% line:-2
クレデンシャルリストのUIは
サービスと一致してなくても

00:07:17.004 --> 00:07:19.673 align:start position:29% line:-2
すべて表示しておく必要が
あります

00:07:19.773 --> 00:07:23.677 align:start position:21% line:-2
違うドメインからクレデンシャルを
選ぶ場合もあります

00:07:24.211 --> 00:07:27.581 align:start position:23% line:-2
ユーザが全クレデンシャルに
アクセスできるようにしておくと

00:07:27.681 --> 00:07:30.250 align:start position:32% line:-2
Extensionは
いつでも役立ちます

00:07:32.085 --> 00:07:35.522 align:start position:23% line:-2
ユーザ認証は
完全にExtension依存で

00:07:35.622 --> 00:07:39.827 align:start position:21% line:-2
認証の際はクレデンシャルリストを
表示して行います

00:07:42.696 --> 00:07:45.299 align:start position:25% line:-2
リストをExtensionに
実装しておけば―

00:07:45.399 --> 00:07:48.969 align:start position:29% line:-2
どこでサインインしても
クレデンシャルを使えます

00:07:50.304 --> 00:07:52.072 align:start position:34% line:-1
次は自動入力を使い

00:07:52.172 --> 00:07:56.210 align:start position:27% line:-2
QuickTypeバーに
クレデンシャルを表示します

00:07:57.344 --> 00:08:01.849 align:start position:29% line:-2
まずは処理の概要を説明し
コードとシステム―

00:07:57.344 --> 00:08:01.849 align:start position:29% line:-2
まずは処理の概要を説明し
コードとシステム―

00:08:01.949 --> 00:08:04.885 align:start position:30% line:-2
サインインするAppの
役割をお話しします

00:08:07.588 --> 00:08:10.991 align:start position:23% line:-2
まず QuickTypeバーに
どれを表示するかを―

00:08:11.091 --> 00:08:14.328 align:start position:30% line:-2
前もって自動入力機能に
通知しておきます

00:08:15.062 --> 00:08:18.131 align:start position:21% line:-2
するとクレデンシャルの
アイデンティティリストが入ります

00:08:18.232 --> 00:08:21.168 align:start position:30% line:-2
アイデンティティとは
クレデンシャルの情報で

00:08:21.268 --> 00:08:25.072 align:start position:27% line:-2
パスワード以外の
ユーザ名やサービス内容です

00:08:26.974 --> 00:08:30.344 align:start position:27% line:-2
ユーザがアプリケーションに
サインインすると

00:08:30.444 --> 00:08:33.647 align:start position:25% line:-2
自動入力機能はユーザ名や
パスワードの入力を促されます

00:08:34.847 --> 00:08:38.751 align:start position:27% line:-2
すると自動入力機能は適切な
クレデンシャルを検索します

00:08:38.852 --> 00:08:42.655 align:start position:25% line:-2
アプリケーションが渡してある
クレデンシャルから探すので

00:08:42.756 --> 00:08:45.292 align:start position:20% line:-2
Extensionを起動する必要は
ありません

00:08:45.859 --> 00:08:48.695 align:start position:29% line:-2
一致するクレデンシャルが
見つかると

00:08:48.795 --> 00:08:51.131 align:start position:29% line:-2
QuickTypeバーに
表示されます

00:08:51.798 --> 00:08:54.268 align:start position:30% line:-2
この提案は
非公開に行われるので―

00:08:54.368 --> 00:08:56.103 align:start position:21% line:-1
ユーザが保存したクレデンシャルを

00:08:56.203 --> 00:08:58.906 align:start position:34% line:-2
アプリケーションは
まだ判別できません

00:09:01.508 --> 00:09:04.044 align:start position:25% line:-1
ユーザが提案の１つを選ぶと―

00:09:04.144 --> 00:09:08.682 align:start position:16% line:-2
クレデンシャルを取得するよう
自動入力機能がExtensionを起動

00:09:10.384 --> 00:09:13.687 align:start position:23% line:-2
ユーザの選んだクレデンシャルが
Extensionに伝えられ

00:09:15.255 --> 00:09:20.561 align:start position:23% line:-2
パスワードのデータベースから
Extensionが検索します

00:09:21.228 --> 00:09:26.133 align:start position:14% line:-2
パスワードを返す前にExtensionは
専用UIを表示することもあります

00:09:26.600 --> 00:09:30.804 align:start position:23% line:-2
パスワード管理Appがユーザに
パスワード入力を促す際や

00:09:30.904 --> 00:09:34.408 align:start position:30% line:-2
別の認証方法を
提示する際に役立ちます

00:09:36.810 --> 00:09:38.579 align:start position:29% line:-1
パスワードが返されると―

00:09:38.679 --> 00:09:44.184 align:start position:7% line:-2
ASPasswordCredentialを介して
自動入力機能に渡されます

00:09:45.919 --> 00:09:48.288 align:start position:23% line:-1
専用UIが表示されない場合は―

00:09:48.388 --> 00:09:51.692 align:start position:25% line:-2
自動入力機能がユーザに対して
認証を行います

00:09:52.025 --> 00:09:54.428 align:start position:30% line:-2
デバイスと
ユーザの好みに応じて―

00:09:54.528 --> 00:09:59.066 align:start position:21% line:-2
Face IDやTouch ID
パスコードが使われます

00:10:01.535 --> 00:10:03.504 align:start position:34% line:-1
認証が成功すると―

00:10:03.604 --> 00:10:07.374 align:start position:29% line:-2
自動入力機能でユーザ名と
パスワードが入力されます

00:10:07.474 --> 00:10:08.642 align:start position:34% line:-1
手順が煩雑なので―

00:10:08.742 --> 00:10:12.613 align:start position:30% line:-2
デベロッパに必要な点を
まとめます

00:10:14.815 --> 00:10:20.320 align:start position:23% line:-2
自動入力機能にクレデンシャルの
アイデンティティを渡します

00:10:20.821 --> 00:10:25.192 align:start position:21% line:-2
Extensionがパスワードを
返すようサポートします

00:10:25.292 --> 00:10:30.030 align:start position:30% line:-2
ユーザが要求したら
ユーザ認証用のUIを―

00:10:30.130 --> 00:10:31.999 align:start position:20% line:-1
Extension内で表示させます

00:10:32.432 --> 00:10:34.535 align:start position:30% line:-1
このステップは任意です

00:10:34.635 --> 00:10:36.803 align:start position:36% line:-2
認証用のUIが
表示されない場合

00:10:36.904 --> 00:10:40.240 align:start position:30% line:-2
自動入力機能で
適切な認証が行われます

00:10:43.110 --> 00:10:48.248 align:start position:0% line:-2
ASPasswordCredentialIdentityは
アイデンティティを表すクラスです

00:10:48.348 --> 00:10:50.584 align:start position:30% line:-2
このクラスに入っている
情報を検討して―

00:10:50.684 --> 00:10:53.921 align:start position:29% line:-2
自動入力機能はその情報を
渡す先を判断します

00:10:54.555 --> 00:10:56.323 align:start position:27% line:-1
例えば サービス識別子は―

00:10:56.423 --> 00:10:58.725 align:start position:30% line:-2
どのアプリケーションや
ウェブサイトに

00:10:58.826 --> 00:11:00.594 align:start position:25% line:-1
情報を渡すかを指示しています

00:10:58.826 --> 00:11:00.594 align:start position:25% line:-1
情報を渡すかを指示しています

00:11:01.662 --> 00:11:03.597 align:start position:27% line:-1
クレデンシャルのユーザ名や

00:11:05.065 --> 00:11:06.967 align:start position:34% line:-1
レコード識別子は―

00:11:07.067 --> 00:11:08.769 align:start position:29% line:-1
データベースにある記録と

00:11:08.869 --> 00:11:11.205 align:start position:23% line:-1
アイデンティティを関連づけます

00:11:12.406 --> 00:11:13.974 align:start position:29% line:-1
次にランクパラメータです

00:11:14.241 --> 00:11:18.679 align:start position:14% line:-2
QuickTypeバーに表示できないほど
クレデンシャルがある場合は

00:11:18.779 --> 00:11:23.550 align:start position:21% line:-2
ランクパラメータを使用して
クレデンシャルの優先度を決めます

00:11:24.351 --> 00:11:29.857 align:start position:23% line:-2
ランク値の高いクレデンシャルは
低いものに先立ちます

00:11:32.726 --> 00:11:36.363 align:start position:23% line:-2
クレデンシャルアイデンティティ
ストアにこれらは保存されます

00:11:36.463 --> 00:11:38.499 align:start position:27% line:-1
このストアはデータベースで

00:11:38.599 --> 00:11:42.703 align:start position:5% line:-2
ASCredentialIdentityStore
クラスを使って変更できます

00:11:43.337 --> 00:11:45.405 align:start position:34% line:-1
自動入力機能では―

00:11:45.505 --> 00:11:48.208 align:start position:36% line:-2
このストアから
情報を取得します

00:11:50.310 --> 00:11:54.548 align:start position:25% line:-2
ストア内ではオープンデータが
完全に保護されていて

00:11:54.648 --> 00:11:57.651 align:start position:32% line:-2
ロックされた状態では
操作できません

00:11:58.151 --> 00:12:02.523 align:start position:29% line:-2
クラウドやバックアップと
リンクもしていないので

00:11:58.151 --> 00:12:02.523 align:start position:29% line:-2
クラウドやバックアップと
リンクもしていないので

00:12:02.623 --> 00:12:05.259 align:start position:34% line:-2
情報が漏れることは
ありません

00:12:07.661 --> 00:12:10.264 align:start position:30% line:-2
各アプリケーションには
ストアがあり

00:12:10.364 --> 00:12:13.233 align:start position:14% line:-2
アプリケーションとExtensionのみ
内容を変更できます

00:12:14.034 --> 00:12:16.136 align:start position:34% line:-2
自動入力機能のみが
ストアを読み取れて

00:12:16.236 --> 00:12:19.706 align:start position:25% line:-2
ユーザに提案する
クレデンシャルを決定できます

00:12:22.309 --> 00:12:27.781 align:start position:21% line:-2
Extensionが有効な時しか
ストアは変えられません

00:12:28.415 --> 00:12:31.952 align:start position:23% line:-2
Extensionが無効の時は
更新もできません

00:12:32.052 --> 00:12:36.123 align:start position:25% line:-2
Extensionの無効化や
アプリケーションの削除で

00:12:36.223 --> 00:12:37.457 align:start position:32% line:-1
ストアも削除されます

00:12:40.127 --> 00:12:42.329 align:start position:30% line:-2
ストアを更新する必要が
あるのは―

00:12:42.429 --> 00:12:45.532 align:start position:30% line:-2
クレデンシャルに関する
新情報が入った時です

00:12:46.200 --> 00:12:51.338 align:start position:25% line:-2
オンラインサービスを使って
クレデンシャルを格納した場合

00:12:52.139 --> 00:12:53.574 align:start position:27% line:-1
ユーザがサインインすると―

00:12:53.674 --> 00:12:56.543 align:start position:27% line:-2
アプリケーションは
クレデンシャルを取得します

00:12:56.643 --> 00:13:00.380 align:start position:29% line:-2
この時 ストア内の
クレデンシャルが更新され

00:12:56.643 --> 00:13:00.380 align:start position:29% line:-2
この時 ストア内の
クレデンシャルが更新され

00:13:00.480 --> 00:13:03.817 align:start position:18% line:-2
新規のクレデンシャルは
QuickTypeバーに提案されます

00:13:06.186 --> 00:13:10.023 align:start position:27% line:-2
ユーザがクレデンシャルの
追加や削除 変更を行うと―

00:13:10.123 --> 00:13:12.626 align:start position:34% line:-2
アプリケーションが
ストアを更新します

00:13:12.726 --> 00:13:17.264 align:start position:21% line:-2
そのため 正しいクレデンシャルの
内容が反映されます

00:13:18.765 --> 00:13:19.933 align:start position:38% line:-1
更新の理由は―

00:13:20.033 --> 00:13:22.669 align:start position:32% line:-2
ユーザがAppに
変更を加えたためとか

00:13:22.769 --> 00:13:26.006 align:start position:27% line:-2
他のデバイスが
オンラインで加えた変更に―

00:13:26.106 --> 00:13:27.975 align:start position:32% line:-1
同期したためなどです

00:13:29.943 --> 00:13:34.281 align:start position:23% line:-2
ユーザがデバイス上で
オンラインサービスから外れると

00:13:34.381 --> 00:13:37.351 align:start position:25% line:-2
アプリケーションはストアから
クレデンシャルを削除し

00:13:37.451 --> 00:13:41.188 align:start position:25% line:-2
それらクレデンシャルの提案が
なくなります

00:13:44.258 --> 00:13:47.628 align:start position:5% line:-2
ASCredentialIdentityStore
クラスを使うと

00:13:47.728 --> 00:13:50.164 align:start position:32% line:-1
ストアと連携できます

00:13:51.565 --> 00:13:54.268 align:start position:20% line:-2
replaceCredential
Identities(withや

00:13:54.368 --> 00:13:57.070 align:start position:0% line:-1
removeAllCredentialIdentitiesで

00:13:57.604 --> 00:14:02.543 align:start position:29% line:-2
クレデンシャルの置換や
削除が可能になっています

00:13:57.604 --> 00:14:02.543 align:start position:29% line:-2
クレデンシャルの置換や
削除が可能になっています

00:14:04.745 --> 00:14:06.747 align:start position:27% line:-1
個別に変更を加える場合は―

00:14:06.847 --> 00:14:10.884 align:start position:2% line:-2
saveCredentialIdentitiesや
removeCredentialIdentitiesで

00:14:10.984 --> 00:14:14.388 align:start position:27% line:-2
クレデンシャルの追加や更新
削除ができます

00:14:14.488 --> 00:14:17.491 align:start position:29% line:-2
ストアを完全に
置換する必要はありません

00:14:20.360 --> 00:14:22.930 align:start position:34% line:-2
当システムで
留意してほしいのは

00:14:23.030 --> 00:14:27.935 align:start position:25% line:-2
予測不可能なタイミングで
ストアが削除される可能性です

00:14:28.035 --> 00:14:29.603 align:start position:36% line:-1
例を挙げましょう

00:14:30.671 --> 00:14:33.040 align:start position:18% line:-1
Extensionを無効にしてから―

00:14:33.140 --> 00:14:36.944 align:start position:27% line:-2
有効に戻すと
ストアの中身が消去されます

00:14:37.211 --> 00:14:40.614 align:start position:23% line:-2
アプリケーションが
クレデンシャルを提供していても

00:14:40.714 --> 00:14:45.385 align:start position:27% line:-2
ユーザに対してパスワードを
提供できずにいると―

00:14:45.486 --> 00:14:51.024 align:start position:23% line:-2
ユーザが古い情報を見ることを
防ぐため ストアは削除されます

00:14:53.560 --> 00:14:58.499 align:start position:20% line:-2
Extensionを使うデバイスを
バックアップから復旧すると―

00:14:58.599 --> 00:15:03.237 align:start position:27% line:-2
ストアはバックアップされて
いないので 中身が消えます

00:14:58.599 --> 00:15:03.237 align:start position:27% line:-2
ストアはバックアップされて
いないので 中身が消えます

00:15:03.704 --> 00:15:05.873 align:start position:25% line:-1
これらのケースは対処可能で―

00:15:06.473 --> 00:15:09.476 align:start position:4% line:-2
ASCredentialIdentityStoreが
問題を検出します

00:15:09.576 --> 00:15:12.880 align:start position:32% line:-2
更新が必要なら
適切に行えるでしょう

00:15:15.682 --> 00:15:21.054 align:start position:20% line:-2
アイデンティティストアに関し
getStateで問い合わせると―

00:15:21.154 --> 00:15:24.858 align:start position:0% line:-2
ASCredentialIdentityStoreState
オブジェクトが戻されます

00:15:26.093 --> 00:15:30.430 align:start position:20% line:-2
Extensionが有効かどうかが
まず分かるでしょう

00:15:30.731 --> 00:15:34.101 align:start position:32% line:-2
ストアを更新する前に
必ず確認してください

00:15:34.201 --> 00:15:39.239 align:start position:25% line:-2
無効ならクレデンシャルの
保存や削除をしても無意味です

00:15:42.342 --> 00:15:45.846 align:start position:2% line:-2
supportsIncrementalUpdatesが
他にもあり―

00:15:45.946 --> 00:15:50.584 align:start position:21% line:-2
これを使えば最後の更新以降
ストアに変更がないか確認できます

00:15:51.485 --> 00:15:54.621 align:start position:23% line:-2
以前にストアで
クレデンシャルを保存していれば

00:15:54.721 --> 00:15:56.323 align:start position:32% line:-1
trueが返されます

00:15:56.423 --> 00:15:59.660 align:start position:2% line:-2
saveCredentialIdentitiesか
removeCredentialIdentitiesを

00:15:59.760 --> 00:16:02.129 align:start position:30% line:-1
使うべきだと分かります

00:15:59.760 --> 00:16:02.129 align:start position:30% line:-1
使うべきだと分かります

00:16:03.263 --> 00:16:06.166 align:start position:32% line:-2
もしストアに
書き込みがなければ―

00:16:06.266 --> 00:16:09.469 align:start position:27% line:-2
アプリケーションが一度
無効化されたということです

00:16:10.003 --> 00:16:12.639 align:start position:2% line:-2
supportsIncrementalUpdatesが
falseを返します

00:16:12.739 --> 00:16:17.010 align:start position:14% line:-2
replaceCredential
Identities(withを使用して

00:16:17.110 --> 00:16:20.547 align:start position:27% line:-2
クレデンシャルの全リストを
書き込みましょう

00:16:22.249 --> 00:16:25.552 align:start position:21% line:-2
アプリケーションがストアの中身を
一度 保存したら

00:16:25.652 --> 00:16:29.389 align:start position:16% line:-2
自動入力機能がQuickTypeバーに
クレデンシャル情報を提案します

00:16:29.823 --> 00:16:33.227 align:start position:27% line:-1
このような提案がされたら―

00:16:33.327 --> 00:16:36.263 align:start position:34% line:-2
パスワードの提供が
必要になります

00:16:38.031 --> 00:16:42.336 align:start position:21% line:-2
この場合 UIが表示されなくても
Extensionが起動され

00:16:42.436 --> 00:16:44.538 align:start position:29% line:-1
パスワードを求められます

00:16:45.205 --> 00:16:50.377 align:start position:4% line:-2
まずprovideCredentialWithout
UserInteraction(forメソッドが

00:16:50.477 --> 00:16:52.412 align:start position:21% line:-2
View Controllerで
呼び出され

00:16:52.513 --> 00:16:57.084 align:start position:0% line:-2
ASPasswordCredentialIdentityが
クレデンシャルの入力を示します

00:16:58.352 --> 00:17:02.489 align:start position:34% line:-2
この場合は関連する
パスワードを調べて

00:16:58.352 --> 00:17:02.489 align:start position:34% line:-2
この場合は関連する
パスワードを調べて

00:17:02.589 --> 00:17:07.327 align:start position:9% line:-2
completeRequest(with
SelectedCredentialで返します

00:17:09.762 --> 00:17:12.965 align:start position:29% line:-2
Extensionに
UIの表示を求められたら

00:17:13.099 --> 00:17:14.535 align:start position:34% line:-1
要求を取り消します

00:17:14.635 --> 00:17:17.604 align:start position:14% line:-2
ドメイン
ASExtensionErrorにある―

00:17:17.704 --> 00:17:20.540 align:start position:9% line:-2
userInteractionRequired
エラーコードを使います

00:17:22.342 --> 00:17:28.147 align:start position:2% line:-2
次にprepareInterfaceToProvide
Credential(forメソッドを使い

00:17:28.248 --> 00:17:29.716 align:start position:36% line:-1
UIを表示します

00:17:30.317 --> 00:17:35.122 align:start position:16% line:-2
そしてExtensionでUIを設定し
パスワードを提出します

00:17:35.889 --> 00:17:38.325 align:start position:34% line:-2
パスワードが
使用可能になったら

00:17:38.425 --> 00:17:41.995 align:start position:5% line:-2
completeRequest(with
SelectedCredentialメソッドを使い

00:17:42.095 --> 00:17:44.164 align:start position:29% line:-1
クレデンシャルを戻します

00:17:44.698 --> 00:17:47.734 align:start position:32% line:-2
Extensionに
UIが表示されると―

00:17:47.834 --> 00:17:52.105 align:start position:21% line:-2
クレデンシャルを入力するまで
自動入力機能では認証を行いません

00:17:52.206 --> 00:17:55.976 align:start position:18% line:-2
認証のタイプは
Extensionに応じて変わります

00:17:59.179 --> 00:18:02.249 align:start position:36% line:-2
この機能の実装で
最も重要なのは

00:17:59.179 --> 00:18:02.249 align:start position:36% line:-2
この機能の実装で
最も重要なのは

00:18:02.349 --> 00:18:06.487 align:start position:25% line:-2
UIを介さない最初の要求には
すぐ答えることです

00:18:06.587 --> 00:18:08.455 align:start position:32% line:-1
その結果は問いません

00:18:09.556 --> 00:18:11.658 align:start position:30% line:-1
UIが表示されない場合

00:18:11.758 --> 00:18:15.529 align:start position:18% line:-2
Extensionが動作しているかが
分かりにくいのです

00:18:15.963 --> 00:18:18.232 align:start position:32% line:-2
ユーザにパスワードを
返さずにいると―

00:18:18.332 --> 00:18:21.235 align:start position:27% line:-1
システムやアプリケーション

00:18:21.335 --> 00:18:24.271 align:start position:27% line:-2
サービスが
稼働していないと思われます

00:18:24.605 --> 00:18:26.907 align:start position:27% line:-1
ユーザは不満に思うでしょう

00:18:28.208 --> 00:18:29.543 align:start position:34% line:-1
だから大事なのです

00:18:29.643 --> 00:18:33.413 align:start position:34% line:-2
数秒 経っても
パスワードが返らず

00:18:33.514 --> 00:18:36.950 align:start position:34% line:-2
UIの表示の要求や
エラーが出たら―

00:18:37.050 --> 00:18:40.254 align:start position:32% line:-2
自動入力機能で
要求が取り消されます

00:18:41.822 --> 00:18:46.693 align:start position:23% line:-2
ただし デバッグビルドや
シミュレータ実行時でなければ―

00:18:46.793 --> 00:18:50.464 align:start position:32% line:-2
Extensionを
デバッグできます

00:18:54.434 --> 00:18:58.305 align:start position:23% line:-2
QuickTypeバーで
クレデンシャルを表示する際は―

00:18:58.405 --> 00:19:01.408 align:start position:27% line:-2
ストアを更新しておくことが
重要です

00:18:58.405 --> 00:19:01.408 align:start position:27% line:-2
ストアを更新しておくことが
重要です

00:19:01.508 --> 00:19:04.144 align:start position:29% line:-2
既知のクレデンシャルとの
同期も忘れずに

00:19:04.711 --> 00:19:07.448 align:start position:27% line:-2
ストアとアプリケーションで
同期が取れないと―

00:19:07.548 --> 00:19:10.717 align:start position:23% line:-2
QuickTypeバーに
クレデンシャルが表示されません

00:19:11.051 --> 00:19:15.656 align:start position:23% line:-2
あるいはアプリケーションから
削除後もバーに表示され続けます

00:19:16.590 --> 00:19:21.762 align:start position:4% line:-2
ASCredentialIdentityStoreの
増分更新APIをご利用ください

00:19:21.862 --> 00:19:26.600 align:start position:25% line:-2
クレデンシャルが変わるたびに
リスト全体を置換していると―

00:19:26.700 --> 00:19:30.270 align:start position:27% line:-2
アップデートに
負担が かかってしまいます

00:19:30.971 --> 00:19:34.708 align:start position:29% line:-2
新規のクレデンシャルの
増分のみを保存するとか―

00:19:34.808 --> 00:19:37.978 align:start position:32% line:-2
削除した分は
取り除くべきでしょう

00:19:38.078 --> 00:19:40.447 align:start position:27% line:-2
ストア全体を書き換えるより
マシです

00:19:42.583 --> 00:19:45.119 align:start position:23% line:-1
Extensionを呼び出す際

00:19:45.219 --> 00:19:47.554 align:start position:30% line:-2
別のアプリケーションが
使用中の場合も

00:19:47.754 --> 00:19:50.290 align:start position:29% line:-1
UIの使用は最小限に抑え

00:19:50.390 --> 00:19:53.961 align:start position:25% line:-2
パスワードの使用に
必要なもののみ含めてください

00:19:56.663 --> 00:19:59.666 align:start position:29% line:-2
パスワードデータベースの
ロードが高負荷なら―

00:19:59.766 --> 00:20:05.005 align:start position:27% line:-2
メソッドの設定のやり直しや
解除は避けましょう

00:19:59.766 --> 00:20:05.005 align:start position:27% line:-2
メソッドの設定のやり直しや
解除は避けましょう

00:20:05.405 --> 00:20:07.841 align:start position:23% line:-2
ユーザが
Extensionを使用して―

00:20:07.941 --> 00:20:11.912 align:start position:29% line:-2
複数のサービスに入る場合
再利用するかもしれません

00:20:12.679 --> 00:20:17.217 align:start position:32% line:-2
１度の呼び出しで
終えられる仕事なら―

00:20:17.317 --> 00:20:20.654 align:start position:25% line:-2
Extensionの再利用は
可能です

00:20:23.490 --> 00:20:27.561 align:start position:21% line:-2
QuickTypeバーでの
クレデンシャルの表示を話しました

00:20:29.329 --> 00:20:33.500 align:start position:20% line:-2
ご使用のExtensionで役立つ
APIをもう１つ 紹介します

00:20:34.134 --> 00:20:37.171 align:start position:18% line:-2
パスワード自動入力で
Extensionを有効化するなら―

00:20:37.271 --> 00:20:41.341 align:start position:27% line:-2
ユーザを満足させるために
しておくべき設定があります

00:20:41.708 --> 00:20:45.012 align:start position:25% line:-2
QuickTypeバーで
クレデンシャルを表示する前に

00:20:45.112 --> 00:20:49.550 align:start position:23% line:-2
自動入力機能にクレデンシャルを
渡しておくべきです

00:20:49.983 --> 00:20:52.920 align:start position:27% line:-2
この時 他の設定を
表示させるのも役に立ちます

00:20:53.020 --> 00:20:57.357 align:start position:29% line:-2
パスワードを取り戻すため
オンラインサービスに―

00:20:57.458 --> 00:20:58.859 align:start position:30% line:-1
サインインするなどです

00:21:00.561 --> 00:21:04.231 align:start position:9% line:-2
AuthenticationServicesは
このためのAPIを提供します

00:21:04.431 --> 00:21:09.236 align:start position:25% line:-2
Extensionを起動して
UIを表示すれば―

00:21:09.336 --> 00:21:11.305 align:start position:29% line:-1
ユーザ自身で設定できます

00:21:13.307 --> 00:21:17.945 align:start position:0% line:-2
作業の最適化には
Information Property Listを開き

00:21:18.045 --> 00:21:21.148 align:start position:21% line:-2
NSExtension属性の下に
新規のキーを追加します

00:21:21.748 --> 00:21:25.819 align:start position:0% line:-2
ASCredentialProviderExtension
ShowsConfigurationUIの―

00:21:25.919 --> 00:21:27.921 align:start position:32% line:-1
ブール値は“YES”

00:21:28.322 --> 00:21:31.992 align:start position:20% line:-2
Extensionが有効化されたら
このようにして起動します

00:21:34.094 --> 00:21:39.766 align:start position:4% line:-2
prepareInterfaceFor
ExtensionConfigurationを実装し

00:21:39.867 --> 00:21:43.437 align:start position:21% line:-2
Extensionを有効化したら
適切なUIを設定します

00:21:45.839 --> 00:21:50.510 align:start position:4% line:-2
completeExtension
ConfigurationRequestを呼び出せば

00:21:50.611 --> 00:21:54.181 align:start position:29% line:-1
UIは閉じられるでしょう

00:21:55.516 --> 00:21:57.651 align:start position:25% line:-2
この時点で
Extensionは有効です

00:21:57.751 --> 00:22:01.989 align:start position:14% line:-2
自動入力機能にクレデンシャルが
渡されてQuickTypeバーに表示され

00:21:57.751 --> 00:22:01.989 align:start position:14% line:-2
自動入力機能にクレデンシャルが
渡されてQuickTypeバーに表示され

00:22:02.089 --> 00:22:05.159 align:start position:29% line:-2
選択されると
パスワードの供給とともに

00:22:05.259 --> 00:22:07.995 align:start position:25% line:-2
ユーザには全クレデンシャルが
表示されます

00:22:08.195 --> 00:22:10.731 align:start position:27% line:-2
これで自動入力機能の統合は
終わりです

00:22:10.831 --> 00:22:15.802 align:start position:27% line:-2
ユーザはいつでも必要な時に
この機能を使用できます

00:22:18.472 --> 00:22:23.010 align:start position:21% line:-2
Extensionの開発における
ペストプラクティスを

00:22:25.746 --> 00:22:27.147 align:start position:34% line:-1
先に述べたように―

00:22:27.247 --> 00:22:32.352 align:start position:14% line:-2
View Controllerを使用して
UIの多様な機能を表示します

00:22:32.786 --> 00:22:35.422 align:start position:18% line:-1
メインのControllerの他に―

00:22:35.522 --> 00:22:37.791 align:start position:20% line:-2
サブのControllerの使用を
お勧めします

00:22:38.592 --> 00:22:43.297 align:start position:20% line:-2
例えば クレデンシャルリストを
１つのControllerで表示し

00:22:43.397 --> 00:22:46.900 align:start position:18% line:-2
ユーザ認証を
別のControllerで行うのです

00:22:47.935 --> 00:22:51.271 align:start position:25% line:-2
サブのControllerは
メインでも表示できるし

00:22:51.605 --> 00:22:54.675 align:start position:27% line:-1
ビューの埋め込みも可能です

00:22:55.542 --> 00:22:58.412 align:start position:23% line:-2
使用中のControllerで
インターフェイスを準備するなら

00:22:58.512 --> 00:23:01.248 align:start position:30% line:-2
アニメーションの使用は
控えてください

00:22:58.512 --> 00:23:01.248 align:start position:30% line:-2
アニメーションの使用は
控えてください

00:23:01.348 --> 00:23:05.085 align:start position:23% line:-2
メインのControllerで
すでに使用してるからです

00:23:08.021 --> 00:23:12.025 align:start position:18% line:-2
通常 Extensionは動作が軽く
すぐ終了できますが―

00:23:12.125 --> 00:23:15.395 align:start position:9% line:-2
AutoFill Credential
Provider Extensionも同様です

00:23:15.929 --> 00:23:18.932 align:start position:20% line:-2
Extensionで特定のタスクを
行っている時は―

00:23:19.032 --> 00:23:23.904 align:start position:21% line:-2
必要でない限り 他の作業や
他のユーザの使用は避けてください

00:23:25.272 --> 00:23:30.377 align:start position:20% line:-2
Extensionは予期せぬ理由で
終了することがあります

00:23:30.744 --> 00:23:34.515 align:start position:14% line:-2
AutoFill Credential
Provider Extensionも―

00:23:34.615 --> 00:23:37.451 align:start position:25% line:-2
アプリケーションの切り替えで
終了したりします

00:23:38.819 --> 00:23:41.722 align:start position:21% line:-2
また メインのアプリケーションと
サインボックスは別でも―

00:23:41.822 --> 00:23:45.092 align:start position:32% line:-2
クレデンシャルなどの
データは共有します

00:23:45.592 --> 00:23:50.531 align:start position:14% line:-2
App Groupsや共有キーチェーンで
共有を行ってください

00:23:51.231 --> 00:23:53.767 align:start position:18% line:-1
Extensionの開発に関しては―

00:23:53.867 --> 00:23:56.336 align:start position:27% line:-2
Extensionの作成の
説明ビデオや―

00:23:56.437 --> 00:24:00.741 align:start position:23% line:-2
WWDC 2014のOS Xの
セッションをご覧ください

00:23:56.437 --> 00:24:00.741 align:start position:23% line:-2
WWDC 2014のOS Xの
セッションをご覧ください

00:24:03.277 --> 00:24:07.381 align:start position:23% line:-2
最後に クレデンシャルの入力を
テストする際のデバッグは―

00:24:07.481 --> 00:24:09.583 align:start position:23% line:-1
Safariを使用してください

00:24:10.584 --> 00:24:13.453 align:start position:21% line:-2
まずExtensionスキームを
起動して

00:24:13.554 --> 00:24:15.856 align:start position:32% line:-2
ターゲットを選択し
“実行”を選択します

00:24:17.724 --> 00:24:21.862 align:start position:21% line:-2
ホストのアプリケーションの選択を
Xcodeから求められます

00:24:22.062 --> 00:24:24.965 align:start position:30% line:-2
Safariを選択して
“実行”を選択します

00:24:26.633 --> 00:24:29.837 align:start position:27% line:-2
Safariが開いて
サインインページに入ったら

00:24:29.937 --> 00:24:31.972 align:start position:21% line:-1
Extensionをテストします

00:24:32.372 --> 00:24:36.076 align:start position:20% line:-2
クレデンシャルリストを開くか
QuickTypeバーから開くと―

00:24:36.443 --> 00:24:40.013 align:start position:25% line:-2
Extensionが起動して
Xcodeがデバッガを起動し

00:24:40.114 --> 00:24:42.216 align:start position:32% line:-1
デバッグが始まります

00:24:44.751 --> 00:24:47.321 align:start position:25% line:-1
他の方法でデバッグする時は―

00:24:47.421 --> 00:24:50.724 align:start position:4% line:-2
“Debug>Attach to Process”を
使用して―

00:24:50.824 --> 00:24:52.693 align:start position:32% line:-1
デバッガを起動します

00:24:53.360 --> 00:24:57.998 align:start position:20% line:-2
手動で設定を開いて
設定UIをテストすることもできるし

00:24:58.098 --> 00:25:01.969 align:start position:27% line:-2
ログイン画面を開いて
その場でデバッグもできます

00:24:58.098 --> 00:25:01.969 align:start position:27% line:-2
ログイン画面を開いて
その場でデバッグもできます

00:25:05.505 --> 00:25:10.410 align:start position:16% line:-2
iOS 12ではパスワード管理Appに
自動入力機能が統合されました

00:25:11.044 --> 00:25:14.748 align:start position:32% line:-2
新しい認証サービスの
APIを使用すれば―

00:25:14.848 --> 00:25:18.452 align:start position:25% line:-2
Extensionで
クレデンシャルを表示できます

00:25:18.852 --> 00:25:20.921 align:start position:23% line:-1
QuickTypeバーで表示し

00:25:21.021 --> 00:25:25.192 align:start position:21% line:-2
ユーザは設定から
Extensionを設定できます

00:25:27.594 --> 00:25:31.432 align:start position:9% line:-2
詳しくはApple Developerページの
セッションで

00:25:31.965 --> 00:25:35.602 align:start position:29% line:-2
iOS 12での
パスワード管理の詳細は―

00:25:35.702 --> 00:25:39.673 align:start position:0% line:-2
“Automatic Strong Passwords and
Security Code AutoFill”です

00:25:40.174 --> 00:25:44.478 align:start position:27% line:-2
パスワードの自動入力機能の
詳細については―

00:25:44.678 --> 00:25:50.150 align:start position:2% line:-2
2017年の“Introducing Password
AutoFill for Apps”です
