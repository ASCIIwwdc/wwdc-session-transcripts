WEBVTT

00:00:07.074 --> 00:00:15.849 align:start position:43% line:-1
(音楽)

00:00:20.954 --> 00:00:25.993 align:start position:43% line:-1
(拍手)

00:00:26.093 --> 00:00:27.961 align:start position:34% line:-1
おはようございます

00:00:28.695 --> 00:00:30.531 align:start position:38% line:-1
私はスカイラー

00:00:30.631 --> 00:00:34.234 align:start position:23% line:-2
iOSアクセシビリティチームの
一員です

00:00:34.334 --> 00:00:38.906 align:start position:21% line:-2
Mac アクセシビリティチームの
バビヤもいます

00:00:39.006 --> 00:00:42.576 align:start position:25% line:-2
極上のアクセシビリティ体験を
実現する―

00:00:42.676 --> 00:00:46.680 align:start position:32% line:-2
アプリケーションの
開発について話します

00:00:47.981 --> 00:00:50.884 align:start position:25% line:-1
一般的にアクセシビリティとは

00:00:50.984 --> 00:00:54.855 align:start position:29% line:-2
技術を誰でも
使えるようにすることです

00:00:55.789 --> 00:01:02.162 align:start position:21% line:-2
Appleではアクセシビリティを
４つの領域に分けて考えます

00:00:55.789 --> 00:01:02.162 align:start position:21% line:-2
Appleではアクセシビリティを
４つの領域に分けて考えます

00:01:02.262 --> 00:01:08.902 align:start position:29% line:-2
学習と読み書き
身体機能 視覚 聴覚です

00:01:09.636 --> 00:01:14.308 align:start position:27% line:-2
アクセシビリティへの配慮は
OSにも多数あります

00:01:14.541 --> 00:01:19.780 align:start position:29% line:-2
でも アプリケーションが
支援技術に対応してこそ―

00:01:19.880 --> 00:01:23.717 align:start position:27% line:-2
障がい者の方々に選ばれる
プラットフォームになります

00:01:24.318 --> 00:01:28.889 align:start position:27% line:-2
皆さんの秀逸なコンテンツを
アクセシブルにして

00:01:28.989 --> 00:01:32.626 align:start position:30% line:-2
誰もがつながれる社会を
作りましょう

00:01:32.726 --> 00:01:36.697 align:start position:29% line:-2
そして世界の人々の生活を
向上させるのです

00:01:37.865 --> 00:01:43.303 align:start position:29% line:-2
今日の私たちの話では
基本的な内容は飛ばします

00:01:43.537 --> 00:01:46.673 align:start position:30% line:-2
アクセシビリティの話が
初めての人や

00:01:46.773 --> 00:01:50.010 align:start position:27% line:-2
APIを見たことがない人は
いますか？

00:01:50.110 --> 00:01:54.982 align:start position:21% line:-2
その場合 2017年のWWDCも
ご確認ください

00:01:55.082 --> 00:01:58.185 align:start position:32% line:-2
私たちの話は
初心者にも有益ですが

00:01:58.285 --> 00:02:01.054 align:start position:34% line:-2
話の流れが
早く感じるでしょう

00:01:58.285 --> 00:02:01.054 align:start position:34% line:-2
話の流れが
早く感じるでしょう

00:02:01.288 --> 00:02:04.758 align:start position:30% line:-1
応用の話が主だからです

00:02:05.392 --> 00:02:08.562 align:start position:36% line:-2
まず この言葉に
着目してください

00:02:09.429 --> 00:02:10.430 align:start position:39% line:-1
“使用可能”

00:02:10.997 --> 00:02:12.399 align:start position:38% line:-1
大事なことです

00:02:12.499 --> 00:02:17.237 align:start position:29% line:-2
支援技術が全コンテンツを
認識していることは

00:02:17.337 --> 00:02:19.206 align:start position:36% line:-1
重要な第一歩です

00:02:19.573 --> 00:02:24.578 align:start position:25% line:-2
そうは言っても
ただ使えるだけでは不十分です

00:02:24.678 --> 00:02:28.749 align:start position:29% line:-2
理想は使用可能な
アプリケーションではなく

00:02:29.183 --> 00:02:31.785 align:start position:27% line:-1
極上のアプリケーションです

00:02:32.019 --> 00:02:35.722 align:start position:36% line:-2
私たちはユーザを
喜ばせたいのです

00:02:36.089 --> 00:02:40.427 align:start position:34% line:-2
それを具体的に
どう実現するのかを

00:02:40.527 --> 00:02:42.829 align:start position:34% line:-1
これから説明します

00:02:42.930 --> 00:02:47.234 align:start position:25% line:-2
皆さんの開発のヒントになれば
幸いです

00:02:48.635 --> 00:02:52.906 align:start position:23% line:-1
アクセシビリティの評価や検討は

00:02:53.006 --> 00:02:56.910 align:start position:34% line:-2
主に２つの見地から
行ってください

00:02:57.110 --> 00:03:00.180 align:start position:25% line:-1
１つ目はビジュアルデザインで

00:02:57.110 --> 00:03:00.180 align:start position:25% line:-1
１つ目はビジュアルデザインで

00:03:00.280 --> 00:03:04.251 align:start position:21% line:-2
２つ目は
アクセシビリティユーザの体験です

00:03:05.185 --> 00:03:07.321 align:start position:27% line:-1
まずビジュアルデザインです

00:03:09.957 --> 00:03:14.528 align:start position:25% line:-2
第１に 透過とぼかしについて
考えてみます

00:03:15.429 --> 00:03:19.466 align:start position:29% line:-2
iOSでは透過とぼかしを
よく使います

00:03:19.933 --> 00:03:23.804 align:start position:32% line:-2
鮮やかで独特な感覚を
生むからです

00:03:24.404 --> 00:03:31.011 align:start position:27% line:-2
しかし 低視力の人などには
文字が読みにくくなるため

00:03:31.111 --> 00:03:33.714 align:start position:32% line:-2
目を酷使する原因にも
なります

00:03:33.814 --> 00:03:37.751 align:start position:32% line:-2
そこで この効果を
低減させる設定を実現

00:03:37.851 --> 00:03:41.488 align:start position:34% line:-2
画面を このように
大きく変えられます

00:03:41.989 --> 00:03:44.191 align:start position:32% line:-1
背景が暗くなるのです

00:03:44.291 --> 00:03:49.796 align:start position:30% line:-2
最低限の情報を出しつつ
視覚的なノイズを排除

00:03:49.897 --> 00:03:55.002 align:start position:29% line:-2
にじんで見えていた背景は
無地になりました

00:03:55.702 --> 00:03:57.237 align:start position:34% line:-1
フォルダも同様です

00:03:58.372 --> 00:03:59.940 align:start position:32% line:-1
Spotlightも

00:04:00.841 --> 00:04:05.879 align:start position:25% line:-2
この例では ユーザの壁紙から
色を取ったのが分かります

00:04:05.979 --> 00:04:11.318 align:start position:29% line:-2
よって 無地であっても
パーソナライズできていて

00:04:11.418 --> 00:04:15.956 align:start position:27% line:-2
コントラストと読みやすさが
向上しました

00:04:17.324 --> 00:04:20.961 align:start position:23% line:-2
皆さんも
各自のアプリケーションのUIで

00:04:21.060 --> 00:04:25.999 align:start position:23% line:-2
透明度を下げる設定を生かせるか
試してください

00:04:26.233 --> 00:04:31.138 align:start position:0% line:-2
iOSでは UIAccessibilityで
isReduceTransparencyEnabledとし

00:04:31.405 --> 00:04:33.273 align:start position:14% line:-1
macOSでは NSWorkspaceで

00:04:33.373 --> 00:04:37.110 align:start position:4% line:-2
accessibilityDisplayShould
ReduceTransparencyとします

00:04:38.645 --> 00:04:40.881 align:start position:30% line:-1
第２にコントラストです

00:04:42.015 --> 00:04:47.855 align:start position:21% line:-2
コンテンツと背景のコントラストは
見やすさに影響します

00:04:48.222 --> 00:04:52.793 align:start position:32% line:-2
色が似ていると
識別しづらくなります

00:04:53.560 --> 00:04:58.398 align:start position:27% line:-2
小さくなると
読みにくくなる色もあります

00:04:58.699 --> 00:05:02.903 align:start position:32% line:-2
字が小さいと
にじんで見えるのです

00:04:58.699 --> 00:05:02.903 align:start position:32% line:-2
字が小さいと
にじんで見えるのです

00:05:04.371 --> 00:05:08.342 align:start position:30% line:-2
色の組み合わせの
コントラスト比を計算し

00:05:08.442 --> 00:05:11.245 align:start position:29% line:-1
読めるか確認してください

00:05:11.345 --> 00:05:15.549 align:start position:5% line:-2
Web Content Accessibility
Guidelinesに従って

00:05:15.649 --> 00:05:21.188 align:start position:23% line:-2
皆さんも 最低限の
4.5：１以上を目指すべきです

00:05:22.623 --> 00:05:26.560 align:start position:27% line:-2
最もコントラストが高いのは
白と黒で

00:05:26.727 --> 00:05:28.762 align:start position:36% line:-1
比は21：１です

00:05:28.862 --> 00:05:31.765 align:start position:34% line:-2
どの文字サイズにも
適しています

00:05:32.099 --> 00:05:34.034 align:start position:36% line:-1
グレーの文字は―

00:05:34.968 --> 00:05:40.007 align:start position:30% line:-2
大きければ読めますが
小さいと見えにくいです

00:05:40.107 --> 00:05:42.876 align:start position:30% line:-1
文字の形が分かりません

00:05:42.976 --> 00:05:47.614 align:start position:21% line:-2
これがコントラスト比4.5：１で
最低限です

00:05:48.081 --> 00:05:50.317 align:start position:32% line:-1
さらに別のグレーです

00:05:51.285 --> 00:05:55.155 align:start position:30% line:-2
この大画面では
読めるかもしれませんが

00:05:55.255 --> 00:06:00.894 align:start position:21% line:-2
小さなデバイスでは
フォントが大きくても判読不能です

00:05:55.255 --> 00:06:00.894 align:start position:21% line:-2
小さなデバイスでは
フォントが大きくても判読不能です

00:06:00.994 --> 00:06:05.098 align:start position:27% line:-2
コントラスト比2.9：１は
低すぎます

00:06:08.335 --> 00:06:12.706 align:start position:0% line:-2
XcodeのAccessibility Inspector
内蔵ツールを使えば

00:06:12.806 --> 00:06:16.076 align:start position:27% line:-1
コントラスト比が分かります

00:06:16.176 --> 00:06:21.281 align:start position:27% line:-2
及第点になる色のペアや
文字サイズが分かるツールで

00:06:21.381 --> 00:06:24.785 align:start position:29% line:-2
先に述べたガイドラインに
従うものです

00:06:25.419 --> 00:06:32.092 align:start position:20% line:-2
ただし これで推奨されている
4.5：１という数値を超えていても

00:06:32.226 --> 00:06:38.599 align:start position:25% line:-2
低視力の人にとっては
まだ読みにくいかもしれません

00:06:39.199 --> 00:06:43.203 align:start position:30% line:-2
そこで コントラストを
上げる設定を作りました

00:06:43.437 --> 00:06:47.541 align:start position:11% line:-2
以前のiOSで Darken Colorsと
呼んでいた機能です

00:06:47.841 --> 00:06:51.912 align:start position:0% line:-2
isDarkerSystemColorsEnabledと
入れてください

00:06:52.012 --> 00:06:56.049 align:start position:18% line:-2
標準のUIKitコントロールで
tintColorをオンに設定しても

00:06:56.150 --> 00:06:58.218 align:start position:36% line:-1
それで機能します

00:06:59.052 --> 00:07:03.657 align:start position:2% line:-2
macOSではaccessibilityDisplay
ShouldIncreaseContrastとします

00:06:59.052 --> 00:07:03.657 align:start position:2% line:-2
macOSではaccessibilityDisplay
ShouldIncreaseContrastとします

00:07:05.392 --> 00:07:07.027 align:start position:36% line:-1
第３にサイズです

00:07:08.529 --> 00:07:15.669 align:start position:25% line:-2
コンテンツのサイズを変えても
読みやすさは劇的に向上します

00:07:15.769 --> 00:07:18.805 align:start position:27% line:-1
低視力者には非常に有益です

00:07:18.906 --> 00:07:21.041 align:start position:34% line:-1
カレンダーの例です

00:07:21.141 --> 00:07:24.344 align:start position:29% line:-1
左はデフォルトのサイズで

00:07:24.444 --> 00:07:29.416 align:start position:32% line:-2
右はテキストサイズを
大きくしたものです

00:07:29.516 --> 00:07:33.153 align:start position:34% line:-2
低視力の人に
この２つを見せたら

00:07:33.253 --> 00:07:38.959 align:start position:21% line:-2
右の画面なら
文字が読める可能性が高いでしょう

00:07:40.227 --> 00:07:44.398 align:start position:29% line:-2
iOSでは ユーザが
テキストサイズを指定でき

00:07:44.498 --> 00:07:48.235 align:start position:34% line:-2
デフォルトは
７段階の真ん中です

00:07:48.669 --> 00:07:53.540 align:start position:29% line:-2
アクセシビリティ設定では
さらに５段階 増やせます

00:07:54.875 --> 00:07:59.146 align:start position:23% line:-2
Dynamic Typeの話は
このくらいにしましょう

00:07:59.246 --> 00:08:03.350 align:start position:14% line:-2
アプリケーションで
Dynamic Typeを活用する方法は

00:07:59.246 --> 00:08:03.350 align:start position:14% line:-2
アプリケーションで
Dynamic Typeを活用する方法は

00:08:03.450 --> 00:08:07.554 align:start position:32% line:-2
どうぞご自身で
チェックしてください

00:08:09.189 --> 00:08:12.626 align:start position:36% line:-2
テキストサイズを
変えるのが嫌でも

00:08:12.726 --> 00:08:17.698 align:start position:25% line:-2
やはりデフォルトでは
読みにくいフォントがあります

00:08:17.798 --> 00:08:20.934 align:start position:25% line:-1
その場合 文字を太くできます

00:08:21.034 --> 00:08:23.804 align:start position:34% line:-2
これでグリフの線も
濃くなります

00:08:24.938 --> 00:08:29.009 align:start position:29% line:-2
標準のUIコントロールと
システムフォントなら

00:08:29.109 --> 00:08:33.313 align:start position:29% line:-2
iOSの太文字設定が
おそらくそのまま使えます

00:08:33.480 --> 00:08:37.451 align:start position:34% line:-2
カスタムフォントを
使っている場合や

00:08:37.551 --> 00:08:43.023 align:start position:23% line:-2
境界線を太くするといったことが
したい場合は―

00:08:43.123 --> 00:08:46.793 align:start position:36% line:-2
必要に応じて
変更してください

00:08:48.962 --> 00:08:50.497 align:start position:38% line:-1
第４に動きです

00:08:50.964 --> 00:08:55.669 align:start position:30% line:-2
アニメーションは楽しく
画面が活気づきますし

00:08:55.769 --> 00:09:02.442 align:start position:21% line:-2
ユーザインタラクションと
そのアクションの効果を増やします

00:08:55.769 --> 00:09:02.442 align:start position:21% line:-2
ユーザインタラクションと
そのアクションの効果を増やします

00:09:02.876 --> 00:09:08.749 align:start position:27% line:-2
ただ 内耳の症状などで
平衡感覚に問題がある人には

00:09:08.849 --> 00:09:11.585 align:start position:29% line:-1
アニメーションは厄介です

00:09:11.852 --> 00:09:16.323 align:start position:34% line:-2
めまいや吐き気の
原因となるからです

00:09:17.457 --> 00:09:21.628 align:start position:32% line:-2
これから具体的な例を
お見せします

00:09:21.728 --> 00:09:24.898 align:start position:27% line:-1
動きの知覚に問題のある人は

00:09:24.998 --> 00:09:30.170 align:start position:25% line:-2
しばらく 画面を
直視しないようにお願いします

00:09:31.405 --> 00:09:33.807 align:start position:30% line:-1
最初は拡大とズームです

00:09:33.907 --> 00:09:40.547 align:start position:21% line:-2
左が アプリケーションを開く時の
デフォルトの動きです

00:09:41.715 --> 00:09:46.119 align:start position:32% line:-2
例えば時計を開くと
アイコンが拡大します

00:09:46.220 --> 00:09:52.793 align:start position:23% line:-2
右は 視差効果を減らした場合で
クロスフェードで切り替わります

00:09:54.728 --> 00:09:57.231 align:start position:32% line:-1
次は回転と渦巻きです

00:09:57.497 --> 00:10:02.269 align:start position:21% line:-2
メッセージで
フルスクリーンエフェクトを使うと

00:09:57.497 --> 00:10:02.269 align:start position:21% line:-2
メッセージで
フルスクリーンエフェクトを使うと

00:10:02.569 --> 00:10:07.341 align:start position:34% line:-2
吹き出しが回転し
大きさも変わります

00:10:07.441 --> 00:10:10.544 align:start position:30% line:-1
これが問題になることも

00:10:11.144 --> 00:10:16.717 align:start position:21% line:-2
視差効果を減らすと
自動再生ではなくプロンプトが出て

00:10:16.817 --> 00:10:22.623 align:start position:25% line:-2
エフェクトを再生するか
ユーザが選べるようになります

00:10:24.291 --> 00:10:26.793 align:start position:30% line:-1
次はプレーンシフトです

00:10:26.894 --> 00:10:32.399 align:start position:23% line:-2
Safariで すべてのタブを
見るボタンを押すと

00:10:32.766 --> 00:10:37.137 align:start position:30% line:-2
カードが傾き
3D空間が演出されます

00:10:37.771 --> 00:10:42.142 align:start position:32% line:-2
右では 動きが少なく
クロスフェードです

00:10:42.242 --> 00:10:44.211 align:start position:30% line:-1
カードが一度 点滅し―

00:10:44.311 --> 00:10:50.050 align:start position:25% line:-2
最後に見ていたページがどれか
分かる仕組みです

00:10:54.221 --> 00:10:58.058 align:start position:36% line:-2
多方向や多速度も
問題になり得ます

00:10:58.292 --> 00:11:01.795 align:start position:34% line:-2
例えばメッセージの
吹き出しです

00:10:58.292 --> 00:11:01.795 align:start position:34% line:-2
例えばメッセージの
吹き出しです

00:11:01.895 --> 00:11:05.933 align:start position:32% line:-2
実物は この動画より
もっと派手な動きです

00:11:06.500 --> 00:11:09.403 align:start position:29% line:-1
スクロールすると跳ねます

00:11:09.503 --> 00:11:13.373 align:start position:32% line:-2
吹き出しが拡大縮小し
隙間も変動します

00:11:14.107 --> 00:11:20.047 align:start position:29% line:-2
視差効果を減らしておくと
この動きもなくなります

00:11:23.083 --> 00:11:25.519 align:start position:27% line:-1
最後に 周辺視野の動きです

00:11:25.919 --> 00:11:28.322 align:start position:25% line:-1
天気アプリケーションの背景は

00:11:28.422 --> 00:11:32.426 align:start position:30% line:-2
アニメーションで
現在の天気を表現します

00:11:32.526 --> 00:11:38.832 align:start position:25% line:-2
左の背景では 雲が流れ
わずかな日射しも見えています

00:11:38.932 --> 00:11:43.804 align:start position:25% line:-2
ところが 下部の予報を見る時
これが視野に入るので

00:11:43.904 --> 00:11:49.843 align:start position:25% line:-2
車の中で読書をした時と同様に
酔う可能性があります

00:11:49.943 --> 00:11:54.748 align:start position:29% line:-2
焦点より上の水平な動きに
脳が反応するからです

00:11:54.882 --> 00:11:58.652 align:start position:34% line:-2
視差効果を減らせば
背景は静止します

00:12:00.220 --> 00:12:03.323 align:start position:36% line:-2
アニメーションを
減らすべきかは

00:12:03.423 --> 00:12:08.495 align:start position:27% line:-2
各OSで設定を確認し
適切な変更を行ってください

00:12:08.996 --> 00:12:11.798 align:start position:0% line:-1
iOSでは isReducedMotionEnabled

00:12:11.899 --> 00:12:15.969 align:start position:2% line:-2
macOSではaccessibilityDisplay
ShouldReduceMotionです

00:12:16.436 --> 00:12:22.476 align:start position:27% line:-2
ただ動きを排除するだけでは
不十分なことが多いです

00:12:22.576 --> 00:12:25.846 align:start position:27% line:-1
体験を貧弱にするのではなく

00:12:25.946 --> 00:12:30.651 align:start position:29% line:-2
実用的で 同等に楽しい
別の効果を加えるべきです

00:12:32.419 --> 00:12:36.690 align:start position:27% line:-2
第５に UIを複雑にしない
配慮が必要です

00:12:37.024 --> 00:12:39.626 align:start position:34% line:-2
アプリケーションの
重要性が増し

00:12:39.726 --> 00:12:44.898 align:start position:27% line:-2
シンプルで使いやすい技術が
求められています

00:12:45.165 --> 00:12:49.303 align:start position:30% line:-2
人間に負担を
かけないことが大事です

00:12:50.470 --> 00:12:54.741 align:start position:29% line:-2
米国だけでも
発達障がい児は６人に１人

00:12:54.842 --> 00:13:00.247 align:start position:27% line:-2
発語を含む言語の障がいから
自閉症まで様々です

00:12:54.842 --> 00:13:00.247 align:start position:27% line:-2
発語を含む言語の障がいから
自閉症まで様々です

00:13:00.647 --> 00:13:04.251 align:start position:32% line:-2
認知障がいや慢性病を
持つ人にとって

00:13:04.351 --> 00:13:09.122 align:start position:29% line:-2
アプリケーションの使用は
体力を要します

00:13:09.223 --> 00:13:14.194 align:start position:27% line:-2
シンプルに使える
アプリケーションが必要です

00:13:15.529 --> 00:13:22.135 align:start position:21% line:-2
似た構造を持ち 論理的で
画面操作が楽でなければなりません

00:13:23.103 --> 00:13:29.309 align:start position:27% line:-2
一般的なタスクを障壁なく
完了できるようにすべきです

00:13:30.277 --> 00:13:33.447 align:start position:23% line:-1
そして 動作の一貫性も必要です

00:13:33.547 --> 00:13:37.351 align:start position:30% line:-2
学びを応用できる環境に
するのです

00:13:37.584 --> 00:13:42.990 align:start position:29% line:-2
標準のUIKitを使えば
ユーザが慣れますし

00:13:43.090 --> 00:13:46.560 align:start position:29% line:-2
iOSの設計言語としても
機能します

00:13:46.660 --> 00:13:48.395 align:start position:34% line:-1
カスタム設計でも―

00:13:48.495 --> 00:13:54.168 align:start position:25% line:-2
UIKitと統一していれば
ユーザは直感的に操作できます

00:13:55.235 --> 00:13:58.772 align:start position:29% line:-2
これがユーザの使用体験に
直結します

00:13:58.872 --> 00:14:03.644 align:start position:20% line:-2
VoiceOverなどの利用者にも
大事なことです

00:13:58.872 --> 00:14:03.644 align:start position:20% line:-2
VoiceOverなどの利用者にも
大事なことです

00:14:04.378 --> 00:14:09.817 align:start position:23% line:-2
では アクセシビリティユーザの
体験を向上させるには？

00:14:11.218 --> 00:14:17.057 align:start position:25% line:-2
支援技術を使ったユーザ体験は
通常画面のそれとは異なります

00:14:17.758 --> 00:14:22.229 align:start position:27% line:-2
例えば スワイプや
複数指でのタップの多用です

00:14:25.332 --> 00:14:29.503 align:start position:29% line:-2
操作方法を設定できる
スイッチコントロールにも

00:14:29.770 --> 00:14:34.274 align:start position:21% line:-2
VoiceOverにも
標準的な動作が組み込まれています

00:14:35.242 --> 00:14:38.879 align:start position:29% line:-2
では 極上のユーザ体験を
生み出すには？

00:14:39.446 --> 00:14:44.318 align:start position:29% line:-2
“使用可能”では不十分で
いい体験が欲しいのです

00:14:45.719 --> 00:14:50.691 align:start position:30% line:-2
体験自体は異なっても
支援技術を使うユーザも

00:14:50.791 --> 00:14:56.263 align:start position:25% line:-2
いい体験をすべきだというのが
私たちの設計理念です

00:14:56.563 --> 00:14:59.733 align:start position:36% line:-2
画面操作が簡単で
挙動が予測でき

00:14:59.833 --> 00:15:03.403 align:start position:32% line:-2
優先順位が合理的で
一貫していることです

00:14:59.833 --> 00:15:03.403 align:start position:32% line:-2
優先順位が合理的で
一貫していることです

00:15:03.971 --> 00:15:09.076 align:start position:29% line:-2
別の要素がコンテキストを
伝えているなら

00:15:09.176 --> 00:15:12.579 align:start position:29% line:-1
それも伝えられるべきです

00:15:13.280 --> 00:15:15.482 align:start position:30% line:-1
では ここでバビヤが―

00:15:15.582 --> 00:15:19.219 align:start position:29% line:-2
アクセシビリティの査定を
実演します

00:15:19.486 --> 00:15:20.187 align:start position:45% line:-1
どうぞ

00:15:20.454 --> 00:15:25.292 align:start position:43% line:-1
(拍手)

00:15:25.392 --> 00:15:30.197 align:start position:27% line:-2
私はバビヤ
ソフトウェアエンジニアです

00:15:30.297 --> 00:15:34.535 align:start position:30% line:-2
アクセシビリティ体験の
向上について

00:15:34.635 --> 00:15:37.805 align:start position:27% line:-2
試作アプリケーションを使い
説明します

00:15:38.005 --> 00:15:40.474 align:start position:16% line:-1
名前はExceptional Dogs

00:15:40.574 --> 00:15:43.877 align:start position:36% line:-2
保護犬の譲渡を
容易にするために

00:15:43.977 --> 00:15:47.915 align:start position:34% line:-2
ユーザが候補の犬を
閲覧するものです

00:15:48.015 --> 00:15:49.283 align:start position:38% line:-1
見てみましょう

00:15:56.590 --> 00:15:58.292 align:start position:41% line:-1
こちらです

00:15:58.692 --> 00:16:04.965 align:start position:25% line:-2
トップのUIはカルーセルで
ここに様々な犬の写真が出ます

00:15:58.692 --> 00:16:04.965 align:start position:25% line:-2
トップのUIはカルーセルで
ここに様々な犬の写真が出ます

00:16:05.699 --> 00:16:10.103 align:start position:32% line:-2
左下のボタンを押せば
お気に入りに登録でき

00:16:10.370 --> 00:16:16.310 align:start position:21% line:-2
右下のボタンを押せば モーダルで
ギャラリーが表示されます

00:16:18.178 --> 00:16:21.081 align:start position:34% line:-2
ギャラリーボタンは
オプションで

00:16:21.181 --> 00:16:26.420 align:start position:27% line:-2
次のレイラのように
写真が複数ない時は消えます

00:16:27.287 --> 00:16:32.693 align:start position:23% line:-2
カルーセルの下は
犬の名前や品種などのデータです

00:16:33.126 --> 00:16:36.964 align:start position:27% line:-2
カルーセルをスワイプすると
更新されます

00:16:38.532 --> 00:16:42.135 align:start position:29% line:-2
一番下は
その犬がいる保護施設名で

00:16:42.236 --> 00:16:46.140 align:start position:34% line:-2
マップを開いたり
電話したりできます

00:16:49.910 --> 00:16:53.146 align:start position:27% line:-1
視覚的には かなり複雑です

00:16:53.247 --> 00:16:58.685 align:start position:27% line:-2
でも私とスカイラーは
アクセシビリティを意識して

00:16:58.785 --> 00:17:02.322 align:start position:21% line:-2
VoiceOverでの読み上げを
可能にしました

00:16:58.785 --> 00:17:02.322 align:start position:21% line:-2
VoiceOverでの読み上げを
可能にしました

00:17:02.756 --> 00:17:04.724 align:start position:25% line:-1
では VoiceOverで―

00:17:04.825 --> 00:17:09.997 align:start position:25% line:-2
低視力者が この複雑な画面を
どう把握するか確認します

00:17:14.701 --> 00:17:16.002 align:start position:25% line:-1
<i>“VoiceOver オン”</i>

00:17:16.103 --> 00:17:18.571 align:start position:9% line:-1
<i>“Exceptional Dogs　ピンキー”</i>

00:17:19.006 --> 00:17:23.242 align:start position:29% line:-2
画像を認識し
犬の名前を読み上げました

00:17:23.676 --> 00:17:26.613 align:start position:27% line:-1
スワイプで写真をスクロール

00:17:27.181 --> 00:17:30.350 align:start position:25% line:-1
<i>“レイラ ブロ プディング”</i>

00:17:30.751 --> 00:17:33.253 align:start position:27% line:-1
<i>“お気に入りボタン オフ”</i>

00:17:33.687 --> 00:17:35.556 align:start position:32% line:-1
<i>“プディング ブロ”</i>

00:17:35.956 --> 00:17:38.926 align:start position:38% line:-2
犬の名前を全部
読み上げたあと

00:17:39.026 --> 00:17:43.363 align:start position:27% line:-2
ようやくお気に入りボタンに
言及しました

00:17:43.530 --> 00:17:48.035 align:start position:30% line:-2
指をボタンの上に置けば
読み上げますが…

00:17:48.302 --> 00:17:50.804 align:start position:27% line:-1
<i>“お気に入りボタン オフ”</i>

00:17:50.904 --> 00:17:55.042 align:start position:27% line:-2
VoiceOverユーザは
典型的には―

00:17:55.142 --> 00:17:58.579 align:start position:32% line:-2
スワイプで
次の要素を見つけます

00:17:58.679 --> 00:18:05.385 align:start position:23% line:-2
現状 スワイプでは最後まで
画像上のボタンが見つかりません

00:17:58.679 --> 00:18:05.385 align:start position:23% line:-2
現状 スワイプでは最後まで
画像上のボタンが見つかりません

00:18:05.619 --> 00:18:07.688 align:start position:32% line:-1
体験としては貧弱です

00:18:07.788 --> 00:18:13.260 align:start position:21% line:-2
犬を全部 見るまで
ボタンにアクセスできないからです

00:18:14.228 --> 00:18:17.965 align:start position:30% line:-2
今は強制的に
ギャラリーを起動します

00:18:18.265 --> 00:18:19.366 align:start position:32% line:-1
<i>“ギャラリーを見る”</i>

00:18:19.466 --> 00:18:20.567 align:start position:32% line:-1
<i>“ギャラリーを見る”</i>

00:18:20.667 --> 00:18:23.170 align:start position:30% line:-1
<i>“ブロの写真１　画像”</i>

00:18:23.504 --> 00:18:25.038 align:start position:30% line:-1
ギャラリーをスクロール

00:18:25.139 --> 00:18:26.673 align:start position:36% line:-1
<i>“ブロの写真２”</i>

00:18:26.773 --> 00:18:28.542 align:start position:36% line:-1
<i>“ブロの写真３”</i>

00:18:28.642 --> 00:18:29.977 align:start position:39% line:-1
<i>“ピンキー”</i>

00:18:30.611 --> 00:18:31.512 align:start position:41% line:-1
<i>“レイラ”</i>

00:18:32.513 --> 00:18:35.849 align:start position:30% line:-2
ギャラリーを
スクロールできましたが

00:18:35.949 --> 00:18:39.853 align:start position:25% line:-2
フォーカスが
バックグラウンドに行きました

00:18:40.053 --> 00:18:44.625 align:start position:32% line:-2
必要なコンテンツには
たどり着けますが

00:18:44.725 --> 00:18:46.527 align:start position:30% line:-1
極上体験とは言えません

00:18:46.627 --> 00:18:51.498 align:start position:21% line:-2
フォーカスがモーダルから外れると
混乱します

00:18:52.099 --> 00:18:55.035 align:start position:34% line:-2
ダブルタップで
モーダルを閉じます

00:18:55.769 --> 00:18:56.803 align:start position:41% line:-1
<i>“閉じる”</i>

00:18:56.904 --> 00:18:57.905 align:start position:41% line:-1
<i>“閉じる”</i>

00:18:58.005 --> 00:18:58.839 align:start position:41% line:-1
<i>“レイラ”</i>

00:18:59.706 --> 00:19:01.808 align:start position:27% line:-1
データ部分をスワイプします

00:18:59.706 --> 00:19:01.808 align:start position:27% line:-1
データ部分をスワイプします

00:19:02.676 --> 00:19:05.078 align:start position:38% line:-1
<i>“名前 品種”</i>

00:19:05.612 --> 00:19:08.148 align:start position:29% line:-1
<i>“レイラ ラブラドール”</i>

00:19:08.882 --> 00:19:12.920 align:start position:30% line:-2
“名前”と聞いた直後が
犬の名前ではなく

00:19:13.020 --> 00:19:14.521 align:start position:38% line:-1
“品種”でした

00:19:15.122 --> 00:19:18.192 align:start position:32% line:-2
視覚的には
いいレイアウトですが

00:19:18.292 --> 00:19:23.063 align:start position:27% line:-2
VoiceOverが
読み上げにくい構造なのです

00:19:23.163 --> 00:19:27.901 align:start position:30% line:-2
よって 聞き手の認知に
負担がかかります

00:19:29.269 --> 00:19:32.806 align:start position:30% line:-2
保護施設名から
ボタンへスワイプします

00:19:33.574 --> 00:19:35.576 align:start position:30% line:-1
<i>“スカイラー保護施設”</i>

00:19:36.310 --> 00:19:38.779 align:start position:23% line:-1
<i>“マップで場所を表示　ボタン”</i>

00:19:38.879 --> 00:19:40.647 align:start position:36% line:-1
<i>“発信　ボタン”</i>

00:19:40.747 --> 00:19:46.620 align:start position:25% line:-2
ボタンを押すことは可能ですが
コンテキストが欠けています

00:19:46.753 --> 00:19:50.858 align:start position:30% line:-2
“発信”と聞くだけでは
何のことか分かりません

00:19:50.958 --> 00:19:55.696 align:start position:23% line:-2
ボタンが施設名の横にあることが
明白でないからです

00:19:57.498 --> 00:19:58.932 align:start position:25% line:-1
<i>“VoiceOver オフ”</i>

00:20:01.068 --> 00:20:06.707 align:start position:25% line:-2
今のような問題があっても
アプリケーションは使えますが

00:20:06.807 --> 00:20:10.210 align:start position:29% line:-1
ユーザに負担がかかります

00:20:10.844 --> 00:20:15.149 align:start position:34% line:-2
目標は極上の体験を
創り出すことです

00:20:15.482 --> 00:20:17.551 align:start position:29% line:-1
改めて スカイラーから―

00:20:17.651 --> 00:20:22.589 align:start position:20% line:-2
Exceptional Dogsを
極上にする方法を説明します

00:20:23.624 --> 00:20:28.495 align:start position:43% line:-1
(拍手)

00:20:28.595 --> 00:20:30.898 align:start position:27% line:-1
いくつか問題が発覚したので

00:20:31.098 --> 00:20:35.402 align:start position:29% line:-2
アクセシビリティAPIを
確認しましょう

00:20:36.637 --> 00:20:39.673 align:start position:29% line:-1
まずカルーセルの問題です

00:20:39.940 --> 00:20:45.846 align:start position:25% line:-2
画像上のボタン２つに
最後まで言及しませんでしたね

00:20:46.280 --> 00:20:50.918 align:start position:30% line:-2
個別データの読み上げも
後回しでした

00:20:51.852 --> 00:20:55.189 align:start position:32% line:-2
データとアクションに
早く到達するため―

00:20:56.223 --> 00:20:59.493 align:start position:7% line:-2
使うのは
UIAccessibilityElementです

00:20:59.593 --> 00:21:02.863 align:start position:34% line:-2
これで新しい要素を
作るのです

00:20:59.593 --> 00:21:02.863 align:start position:34% line:-2
これで新しい要素を
作るのです

00:21:03.163 --> 00:21:07.367 align:start position:9% line:-2
UIAccessibilityElementは
カスタム要素を作るクラスで

00:21:07.468 --> 00:21:13.373 align:start position:29% line:-2
大抵は アクセス不能な
UI上のパーツに使います

00:21:13.841 --> 00:21:19.379 align:start position:21% line:-2
でも 今回のように
カスタム体験を作る時にも使えます

00:21:20.114 --> 00:21:23.517 align:start position:5% line:-2
ビューのaccessibilityElements
プロパティから

00:21:23.617 --> 00:21:25.986 align:start position:32% line:-2
任意のカスタム要素を
返します

00:21:26.086 --> 00:21:30.023 align:start position:27% line:-2
すると その特定のビューの
子要素と

00:21:30.124 --> 00:21:34.862 align:start position:30% line:-2
それを読み上げる順序が
支援技術に伝わります

00:21:36.563 --> 00:21:41.135 align:start position:27% line:-2
これで スワイプで
各犬のコンテンツに進めます

00:21:41.435 --> 00:21:44.171 align:start position:38% line:-2
では 別の犬を
閲覧するには？

00:21:45.239 --> 00:21:49.276 align:start position:30% line:-2
インクリメントと
デクリメントを使います

00:21:49.476 --> 00:21:52.346 align:start position:30% line:-2
カスタム要素に
可変のTraitを加え

00:21:52.446 --> 00:21:56.750 align:start position:21% line:-2
要素が コールバックに応答すると
支援技術に理解させます

00:21:56.850 --> 00:22:01.088 align:start position:20% line:-2
これで VoiceOver起動中は
上下のスワイプで

00:21:56.850 --> 00:22:01.088 align:start position:20% line:-2
これで VoiceOver起動中は
上下のスワイプで

00:22:01.188 --> 00:22:04.258 align:start position:21% line:-1
ビューが前後にスクロールされます

00:22:06.360 --> 00:22:09.396 align:start position:34% line:-2
次に情報のラベルを
見ましょう

00:22:09.530 --> 00:22:11.999 align:start position:29% line:-1
先ほどは順序がバラバラで

00:22:12.099 --> 00:22:15.969 align:start position:27% line:-2
値とラベルのコンテキストが
欠けていました

00:22:16.670 --> 00:22:19.206 align:start position:30% line:-1
コンテキストは重要です

00:22:19.306 --> 00:22:22.809 align:start position:34% line:-2
譲渡済みか知ろうと
ラベルに触れたのに

00:22:22.910 --> 00:22:27.314 align:start position:27% line:-2
“イエス”とだけ返されたら
途方に暮れるでしょう

00:22:27.414 --> 00:22:30.050 align:start position:36% line:-2
何を肯定したのか
分かりません

00:22:30.751 --> 00:22:33.220 align:start position:32% line:-1
画面操作も問題でした

00:22:33.320 --> 00:22:37.991 align:start position:20% line:-2
情報を得るため
14ものラベルをスワイプしましたね

00:22:38.091 --> 00:22:43.397 align:start position:23% line:-2
組み合わせれば
操作が半分になり 早くなります

00:22:44.364 --> 00:22:47.935 align:start position:32% line:-2
ラベルをグループ化し
１要素にすれば

00:22:48.035 --> 00:22:51.071 align:start position:34% line:-2
ラベルと値の関係が
理解できます

00:22:51.238 --> 00:22:54.541 align:start position:7% line:-2
ここでも使うのは
UIAccessibilityElementです

00:22:54.641 --> 00:22:56.977 align:start position:25% line:-1
ラベル１組に対して要素を作り

00:22:57.077 --> 00:23:00.681 align:start position:5% line:-2
ビューのaccessibilityElements
プロパティから返すのです

00:22:57.077 --> 00:23:00.681 align:start position:5% line:-2
ビューのaccessibilityElements
プロパティから返すのです

00:23:02.416 --> 00:23:05.018 align:start position:30% line:-1
また 先ほどのデモでは

00:23:05.119 --> 00:23:08.755 align:start position:29% line:-2
施設のビューが
３要素に分かれていました

00:23:08.856 --> 00:23:12.125 align:start position:32% line:-2
施設名 マップボタン
発信ボタンです

00:23:13.560 --> 00:23:16.897 align:start position:25% line:-2
ボタンにも
コンテキストが欠けていました

00:23:17.097 --> 00:23:22.469 align:start position:29% line:-2
施設名より先に触ると
何のボタンか分かりません

00:23:23.504 --> 00:23:27.141 align:start position:32% line:-2
３つが分離していると
要素の数が増え

00:23:27.241 --> 00:23:30.444 align:start position:36% line:-2
情報を探すのに
時間がかかります

00:23:30.544 --> 00:23:34.948 align:start position:30% line:-2
だから１要素にまとめ
操作を簡略化するのです

00:23:36.116 --> 00:23:39.019 align:start position:29% line:-1
優先順位も考慮すべきです

00:23:39.119 --> 00:23:42.689 align:start position:30% line:-2
最も必要な情報は
その犬がいる施設名です

00:23:42.789 --> 00:23:48.028 align:start position:23% line:-2
よってそれを最初に伝え
場所の特定と発信はあとにします

00:23:48.962 --> 00:23:53.000 align:start position:0% line:-2
これを実現するAPIは
accessibilityCustomActionsです

00:23:53.200 --> 00:23:57.271 align:start position:30% line:-2
これなら要素に
アクションを加えられて

00:23:57.371 --> 00:24:00.240 align:start position:36% line:-2
ユーザは順に
情報に当たれます

00:23:57.371 --> 00:24:00.240 align:start position:36% line:-2
ユーザは順に
情報に当たれます

00:24:00.741 --> 00:24:04.278 align:start position:23% line:-2
特定のビューに
カスタムアクション配列を返せて

00:24:04.745 --> 00:24:07.448 align:start position:27% line:-1
アクションに名前もつきます

00:24:07.548 --> 00:24:12.019 align:start position:21% line:-2
ユーザが聞けば
アクションの内容が分かる名前です

00:24:12.119 --> 00:24:16.256 align:start position:30% line:-2
ターゲットとセレクタも
関連づけられます

00:24:17.958 --> 00:24:22.930 align:start position:25% line:-2
これで施設ビューの
アクセシビリティが向上します

00:24:24.364 --> 00:24:26.166 align:start position:32% line:-1
あとはギャラリーです

00:24:26.467 --> 00:24:31.538 align:start position:25% line:-2
先ほどはバックグラウンドでの
スワイプが可能でした

00:24:31.705 --> 00:24:35.709 align:start position:30% line:-2
モーダルビューに見えて
違ったわけです

00:24:35.809 --> 00:24:40.247 align:start position:21% line:-2
View Controllerで
モーダルにするのではなく

00:24:40.347 --> 00:24:44.117 align:start position:29% line:-2
階層のトップに
加えていただけだからです

00:24:44.384 --> 00:24:48.489 align:start position:30% line:-2
バックグラウンドの
コンテンツが見えるため

00:24:48.589 --> 00:24:50.891 align:start position:21% line:-1
VoiceOverが除外しません

00:24:51.892 --> 00:24:56.864 align:start position:23% line:-2
VoiceOverが 認識した
全ギャラリーを読み上げれば

00:24:56.964 --> 00:25:01.034 align:start position:25% line:-2
ユーザはコンテキストを見失い
混乱します

00:24:56.964 --> 00:25:01.034 align:start position:25% line:-2
ユーザはコンテキストを見失い
混乱します

00:25:02.102 --> 00:25:06.940 align:start position:0% line:-2
そこでaccessibilityViewIsModalと
オーバーライドして

00:25:07.040 --> 00:25:11.912 align:start position:25% line:-2
今 アクセスできる要素は
ビュー内だけだと認識させます

00:25:13.180 --> 00:25:16.550 align:start position:32% line:-2
オンスクリーン要素が
変わった時に

00:25:16.650 --> 00:25:20.821 align:start position:34% line:-2
再フォーカスを
促す通知も必要です

00:25:21.655 --> 00:25:24.525 align:start position:18% line:-2
これにはScreen Changeの
通知が使えます

00:25:26.193 --> 00:25:31.798 align:start position:21% line:-2
ここからはバビヤが
今 紹介したAPIの実装をします

00:25:32.332 --> 00:25:33.033 align:start position:43% line:-1
よろしく

00:25:34.501 --> 00:25:38.539 align:start position:43% line:-1
(拍手)

00:25:38.639 --> 00:25:39.640 align:start position:41% line:-1
ありがとう

00:25:39.740 --> 00:25:44.077 align:start position:30% line:-2
アクセシビリティ体験を
極上にしましょう

00:25:44.177 --> 00:25:45.579 align:start position:32% line:-1
Xcodeを開きます

00:25:53.120 --> 00:25:56.623 align:start position:27% line:-1
まずトップのカルーセルです

00:25:56.723 --> 00:25:59.560 align:start position:0% line:-1
DogCarouselContainerViewクラスに

00:25:59.660 --> 00:26:04.398 align:start position:27% line:-2
犬のコレクションビューと
２つのボタンが入っています

00:25:59.660 --> 00:26:04.398 align:start position:27% line:-2
犬のコレクションビューと
２つのボタンが入っています

00:26:04.598 --> 00:26:08.135 align:start position:30% line:-2
ここにインクリメントと
デクリメントを実装し

00:26:08.235 --> 00:26:11.405 align:start position:25% line:-2
上下スワイプでのスクロールを
可能にします

00:26:11.638 --> 00:26:14.541 align:start position:32% line:-2
そこで ここに
プロパティを作ります

00:26:14.641 --> 00:26:16.810 align:start position:0% line:-1
CarouselAccessibilityElementです

00:26:17.144 --> 00:26:21.048 align:start position:7% line:-2
これはカスタムの
UIAccessibilityElementです

00:26:22.382 --> 00:26:24.885 align:start position:34% line:-1
では実装しましょう

00:26:29.056 --> 00:26:31.758 align:start position:9% line:-2
UIAccessibilityElementの
サブクラスになります

00:26:31.859 --> 00:26:36.597 align:start position:25% line:-2
現在のオブジェクトを特定する
プロパティも作ります

00:26:39.266 --> 00:26:41.368 align:start position:34% line:-1
イニシャライザと―

00:26:43.036 --> 00:26:46.507 align:start position:27% line:-1
ラベルや値も記述しましょう

00:26:48.976 --> 00:26:50.844 align:start position:20% line:-1
ラベルは“Dog Picker”で

00:26:51.211 --> 00:26:55.582 align:start position:23% line:-2
値は犬の名前と
“お気に入り”のステータスです

00:26:58.285 --> 00:27:01.221 align:start position:30% line:-2
次にインクリメントと
デクリメントの機能です

00:26:58.285 --> 00:27:01.221 align:start position:30% line:-2
次にインクリメントと
デクリメントの機能です

00:27:01.321 --> 00:27:05.559 align:start position:9% line:-2
まず accessibilityTraitsを
オーバーライド

00:27:09.129 --> 00:27:11.498 align:start position:29% line:-1
先に インクリメントで―

00:27:15.002 --> 00:27:21.008 align:start position:29% line:-2
コレクションビューを
先に送る機能を実装します

00:27:27.881 --> 00:27:31.251 align:start position:36% line:-2
一番上の機能名を
見てください

00:27:31.351 --> 00:27:36.089 align:start position:29% line:-2
スクロールで送るか戻すか
ブーリアンで決めます

00:27:36.490 --> 00:27:38.091 align:start position:34% line:-1
細かく見ていきます

00:27:38.759 --> 00:27:44.498 align:start position:5% line:-2
containerViewとcurrentDogと
リスト全体を参照

00:27:45.265 --> 00:27:48.836 align:start position:14% line:-2
fowardsで currentDogの
インデックスが

00:27:48.936 --> 00:27:52.206 align:start position:27% line:-1
境界を超えないか確認します

00:27:52.940 --> 00:27:56.743 align:start position:30% line:-2
超えないなら
１つ先のインデックスへ

00:27:57.244 --> 00:28:03.016 align:start position:25% line:-2
戻る時は インデックスが
マイナスにならないか確かめて

00:27:57.244 --> 00:28:03.016 align:start position:25% line:-2
戻る時は インデックスが
マイナスにならないか確かめて

00:28:03.817 --> 00:28:07.054 align:start position:30% line:-2
コレクションビューを
１インデックス戻します

00:28:08.255 --> 00:28:11.191 align:start position:32% line:-2
ではインクリメントの
実装です

00:28:16.130 --> 00:28:18.866 align:start position:25% line:-1
前へのスクロールはtrueに

00:28:19.833 --> 00:28:22.870 align:start position:38% line:-2
デクリメントも
同様にできます

00:28:25.339 --> 00:28:29.343 align:start position:30% line:-2
違いは 戻るため
falseにする点です

00:28:29.710 --> 00:28:31.945 align:start position:27% line:-1
カルーセルの設定は以上です

00:28:32.312 --> 00:28:34.281 align:start position:18% line:-1
containerViewに戻ります

00:28:38.352 --> 00:28:41.588 align:start position:0% line:-2
CarouselAccessibilityElementを
開示するため

00:28:41.688 --> 00:28:44.858 align:start position:11% line:-2
accessibilityElementsを
オーバーライドします

00:28:50.130 --> 00:28:53.033 align:start position:25% line:-2
この機能で
currentDogを参照し

00:28:53.133 --> 00:28:56.336 align:start position:36% line:-2
要素を作る前に
有効か確認します

00:28:57.671 --> 00:29:00.874 align:start position:0% line:-2
CarouselAccessibilityElementの
インスタンスを生成します

00:28:57.671 --> 00:29:00.874 align:start position:0% line:-2
CarouselAccessibilityElementの
インスタンスを生成します

00:29:06.313 --> 00:29:10.918 align:start position:25% line:-2
もしこれが既存なら先に参照し
なければ―

00:29:11.018 --> 00:29:13.687 align:start position:29% line:-1
インスタンスを生成します

00:29:15.089 --> 00:29:19.193 align:start position:16% line:-2
アクセシビリティフレームを
dogCollectionViewにし

00:29:19.293 --> 00:29:21.328 align:start position:36% line:-1
ここに参照を保存

00:29:21.762 --> 00:29:24.865 align:start position:27% line:-1
最後に要素の配列を返します

00:29:25.532 --> 00:29:30.304 align:start position:30% line:-2
その前に 要素を少し
配列に加えたく思います

00:29:35.142 --> 00:29:38.412 align:start position:27% line:-2
currentDogに
写真が複数あるか確認します

00:29:38.512 --> 00:29:41.682 align:start position:0% line:-2
CarouselAccessibilityElementと
２つのボタンで

00:29:41.782 --> 00:29:43.984 align:start position:29% line:-1
配列を構成したいからです

00:29:44.084 --> 00:29:48.622 align:start position:27% line:-2
写真が１枚なら
ギャラリーボタンは省きます

00:29:51.658 --> 00:29:57.164 align:start position:23% line:-2
containerViewで
当該のプロパティが更新されれば

00:29:57.264 --> 00:30:01.235 align:start position:0% line:-2
CarouselAccessibilityElementで
currentDogプロパティも更新します

00:29:57.264 --> 00:30:01.235 align:start position:0% line:-2
CarouselAccessibilityElementで
currentDogプロパティも更新します

00:30:05.973 --> 00:30:07.040 align:start position:39% line:-1
あと少しです

00:30:07.274 --> 00:30:10.043 align:start position:27% line:-1
カルーセルをスワイプした時

00:30:10.544 --> 00:30:14.214 align:start position:30% line:-2
犬の情報も
連動して変わりましたね

00:30:14.448 --> 00:30:17.851 align:start position:20% line:-1
だからVoiceOverの起動中も

00:30:17.951 --> 00:30:22.589 align:start position:16% line:-2
画像が更新されたら
VoiceOverに理解させるべきです

00:30:22.956 --> 00:30:26.927 align:start position:25% line:-2
そこで スクロール時に
レイアウト変更通知を出します

00:30:28.562 --> 00:30:33.634 align:start position:7% line:-2
そこでView Controllerに行き
scrollViewDidScroll機能の中で

00:30:33.734 --> 00:30:37.805 align:start position:25% line:-2
最後にこのように
レイアウト変更通知を書きます

00:30:40.474 --> 00:30:42.509 align:start position:16% line:-1
containerViewはこれで万全

00:30:43.944 --> 00:30:48.582 align:start position:21% line:-2
アクセシビリティ要素を
使ったり作ったりするのがカギです

00:30:48.715 --> 00:30:53.420 align:start position:30% line:-2
データ部分の問題にも
同じ発想を応用できます

00:30:53.720 --> 00:30:58.659 align:start position:23% line:-2
情報が分断され
コンテキストが欠けていましたね

00:30:58.759 --> 00:31:00.794 align:start position:27% line:-1
そこで カルーセルと同様に

00:30:58.759 --> 00:31:00.794 align:start position:27% line:-1
そこで カルーセルと同様に

00:31:00.894 --> 00:31:05.132 align:start position:34% line:-2
データ部分の情報も
グループ化します

00:31:08.168 --> 00:31:11.638 align:start position:20% line:-2
データはDogStatsViewに
入っています

00:31:14.908 --> 00:31:18.645 align:start position:7% line:-2
まずaccessibilityElementsを
オーバーライド

00:31:25.119 --> 00:31:30.691 align:start position:25% line:-2
作った要素をキャッシュすれば
何度も再計算せずに済みます

00:31:30.791 --> 00:31:34.461 align:start position:5% line:-2
そこでプライベートプロパティ
accessibilityElementsを作成

00:31:34.561 --> 00:31:37.264 align:start position:27% line:-1
これがキャッシュになります

00:31:38.398 --> 00:31:39.833 align:start position:38% line:-1
そして機能です

00:31:42.903 --> 00:31:47.708 align:start position:30% line:-2
キャッシュを確認し
空なら要素を追加します

00:31:48.709 --> 00:31:50.944 align:start position:21% line:-1
全titleLabelsを反復し

00:31:51.044 --> 00:31:55.549 align:start position:27% line:-2
“品種”といった
タイトルラベルを参照します

00:31:56.049 --> 00:31:59.953 align:start position:32% line:-2
“ラブラドール”など
該当する値も参照

00:32:01.522 --> 00:32:04.591 align:start position:29% line:-1
タイトルと値を参照したら

00:32:04.691 --> 00:32:09.696 align:start position:27% line:-2
アクセシビリティ要素を作り
両者をつなぎます

00:32:21.241 --> 00:32:26.747 align:start position:27% line:-2
ここに要素を作り
ラベルとフレームを設定して

00:32:26.847 --> 00:32:31.452 align:start position:30% line:-2
該当するタイトルと値を
組み合わせます

00:32:33.387 --> 00:32:36.123 align:start position:32% line:-1
この要素を配列に追加

00:32:37.491 --> 00:32:41.228 align:start position:30% line:-2
タイトルと値の全ペアを
ループしたら

00:32:41.328 --> 00:32:45.833 align:start position:21% line:-2
キャッシュをこの配列と等しくして
要素を返します

00:32:47.367 --> 00:32:49.937 align:start position:36% line:-2
犬オブジェクトが
更新されたら

00:32:50.037 --> 00:32:55.609 align:start position:25% line:-2
都度キャッシュをリセットし
新しい犬の要素も計算させます

00:32:56.577 --> 00:32:59.713 align:start position:20% line:-1
そのため ここはnilに設定します

00:33:02.616 --> 00:33:04.451 align:start position:20% line:-1
DogStatsViewは以上です

00:33:05.252 --> 00:33:09.790 align:start position:25% line:-2
次に 発信とマップのボタンに
コンテキストを加えます

00:33:11.391 --> 00:33:13.460 align:start position:14% line:-1
施設情報はShelterInfoView

00:33:14.561 --> 00:33:19.266 align:start position:27% line:-2
施設名 マップボタン
発信ボタンを参照しています

00:33:20.868 --> 00:33:26.039 align:start position:23% line:-2
両ボタンは
カスタムアクションにしたいので

00:33:26.140 --> 00:33:30.577 align:start position:27% line:-2
アクセシビリティ要素として
ビューを開示します

00:33:34.548 --> 00:33:38.051 align:start position:32% line:-2
施設名なので
記述式ラベルにします

00:33:42.589 --> 00:33:45.759 align:start position:2% line:-2
accessibilityCustomActionsを
オーバーライド

00:33:50.297 --> 00:33:53.267 align:start position:32% line:-2
カスタムアクションは
２つ作ります

00:33:53.367 --> 00:33:55.903 align:start position:11% line:-1
mapActionとcallActionです

00:33:56.370 --> 00:34:00.107 align:start position:30% line:-2
“マップで場所を表示”
“発信”と発声されます

00:33:56.370 --> 00:34:00.107 align:start position:30% line:-2
“マップで場所を表示”
“発信”と発声されます

00:34:00.207 --> 00:34:02.443 align:start position:27% line:-1
ストリングはローカライズを

00:34:04.178 --> 00:34:08.815 align:start position:25% line:-2
各アクションが機能を呼び出し
ボタンがアクティブになります

00:34:09.116 --> 00:34:12.886 align:start position:9% line:-2
mapActionなら
activateMapButtonが呼び出され

00:34:12.985 --> 00:34:14.321 align:start position:27% line:-1
マップボタンがアクティブに

00:34:15.522 --> 00:34:19.458 align:start position:27% line:-1
機能はこちらで定義しました

00:34:21.161 --> 00:34:24.665 align:start position:32% line:-2
メソッドが成功すれば
trueを返します

00:34:25.666 --> 00:34:27.034 align:start position:30% line:-1
以上が施設のビューで―

00:34:28.402 --> 00:34:32.438 align:start position:30% line:-2
最後にモーダルビューも
改善しましょう

00:34:33.974 --> 00:34:36.476 align:start position:18% line:-1
DogModalViewで定義します

00:34:36.810 --> 00:34:40.681 align:start position:16% line:-2
VoiceOverにモーダルビューだと
認識させるため

00:34:40.781 --> 00:34:43.317 align:start position:5% line:-2
accessibilityViewIsModalと
オーバーライド

00:34:47.920 --> 00:34:49.089 align:start position:39% line:-1
あと少しです

00:34:50.090 --> 00:34:52.926 align:start position:34% line:-2
ギャラリーボタンを
押した時には

00:34:53.327 --> 00:34:56.996 align:start position:29% line:-2
レイアウト変更を
アプリケーションに伝え―

00:34:57.097 --> 00:35:00.000 align:start position:32% line:-2
VoiceOverの
フォーカスを保ちます

00:35:00.334 --> 00:35:05.239 align:start position:23% line:-2
そこで ギャラリーボタン押下で
画面変更を通知します

00:35:06.673 --> 00:35:08.642 align:start position:14% line:-1
View Controllerに入ります

00:35:10.844 --> 00:35:13.280 align:start position:34% line:-2
ギャラリーボタンを
押した時の機能で

00:35:14.014 --> 00:35:18.852 align:start position:25% line:-2
モーダルビューで動きがあれば
変更通知を入れます

00:35:21.488 --> 00:35:22.890 align:start position:39% line:-1
これだけです

00:35:24.324 --> 00:35:27.327 align:start position:34% line:-2
アクセシビリティを
更新したので

00:35:27.427 --> 00:35:30.831 align:start position:34% line:-2
体験が改善されたか
確認しましょう

00:35:35.369 --> 00:35:36.937 align:start position:21% line:-1
VoiceOverをオンにします

00:35:38.272 --> 00:35:39.373 align:start position:25% line:-1
<i>“VoiceOver オン”</i>

00:35:39.473 --> 00:35:40.741 align:start position:18% line:-1
<i>“Exceptional Dogs”</i>

00:35:40.841 --> 00:35:42.609 align:start position:30% line:-1
<i>“犬を選択　ピンキー”</i>

00:35:42.709 --> 00:35:43.877 align:start position:39% line:-1
<i>“調整可能”</i>

00:35:44.845 --> 00:35:48.348 align:start position:25% line:-2
<i>“１本指で上下にスワイプして</i>
<i>値を調整”</i>

00:35:48.515 --> 00:35:52.152 align:start position:30% line:-2
上下スワイプが可能だと
言いましたね

00:35:52.452 --> 00:35:54.788 align:start position:27% line:-1
カルーセルを動かしましょう

00:35:55.088 --> 00:35:55.956 align:start position:41% line:-1
<i>“レイラ”</i>

00:35:56.356 --> 00:35:58.992 align:start position:34% line:-1
下にスワイプします

00:35:59.293 --> 00:36:00.294 align:start position:39% line:-1
<i>“ピンキー”</i>

00:35:59.293 --> 00:36:00.294 align:start position:39% line:-1
<i>“ピンキー”</i>

00:36:00.761 --> 00:36:05.065 align:start position:30% line:-2
左から右にスワイプして
ボタンを見つけます

00:36:05.165 --> 00:36:07.267 align:start position:27% line:-1
<i>“お気に入りボタン オフ”</i>

00:36:07.367 --> 00:36:09.436 align:start position:25% line:-1
<i>“ギャラリーを見る ボタン”</i>

00:36:10.070 --> 00:36:13.240 align:start position:34% line:-2
これですべての犬に
アクセスでき

00:36:13.340 --> 00:36:17.211 align:start position:34% line:-2
２つのボタンも
すぐ見つかりました

00:36:17.811 --> 00:36:22.950 align:start position:29% line:-2
左から右にスワイプすれば
データ部分に飛べます

00:36:23.684 --> 00:36:25.419 align:start position:34% line:-1
<i>“名前 ピンキー”</i>

00:36:25.686 --> 00:36:30.457 align:start position:29% line:-2
カルーセル閲覧を中断でき
体験が改善しました

00:36:31.058 --> 00:36:34.661 align:start position:34% line:-2
データ部分の操作を
続けましょう

00:36:34.761 --> 00:36:37.264 align:start position:29% line:-1
左から右にスワイプします

00:36:37.598 --> 00:36:39.333 align:start position:34% line:-1
<i>“品種 ミックス”</i>

00:36:39.433 --> 00:36:42.202 align:start position:34% line:-1
<i>“年齢 7.0歳”</i>

00:36:42.936 --> 00:36:47.274 align:start position:32% line:-2
情報がグループ化され
コンテキストができ

00:36:47.374 --> 00:36:52.045 align:start position:25% line:-2
全ラベルを開かなくてよくなり
操作が早くなりました

00:36:52.913 --> 00:36:55.749 align:start position:29% line:-1
施設名の上に指を置きます

00:36:56.250 --> 00:36:58.218 align:start position:30% line:-1
<i>“スカイラー保護施設”</i>

00:36:59.186 --> 00:37:00.688 align:start position:34% line:-1
<i>“アクション可能”</i>

00:36:59.186 --> 00:37:00.688 align:start position:34% line:-1
<i>“アクション可能”</i>

00:37:01.188 --> 00:37:05.259 align:start position:23% line:-2
アクションがあるとのことなので
上にスワイプ

00:37:05.526 --> 00:37:07.361 align:start position:30% line:-1
<i>“マップで場所を表示”</i>

00:37:07.828 --> 00:37:08.729 align:start position:43% line:-1
<i>“発信”</i>

00:37:09.096 --> 00:37:14.868 align:start position:21% line:-2
施設名に関連のある
アクションであることが明白になり

00:37:14.968 --> 00:37:16.803 align:start position:29% line:-1
コンテキストができました

00:37:17.471 --> 00:37:21.308 align:start position:29% line:-2
最後にギャラリーボタンを
ダブルタップ

00:37:21.608 --> 00:37:23.677 align:start position:25% line:-1
<i>“ギャラリーを見る ボタン”</i>

00:37:25.078 --> 00:37:27.081 align:start position:27% line:-1
<i>“ピンキーの写真１　画像”</i>

00:37:27.181 --> 00:37:29.449 align:start position:34% line:-1
左から右にスワイプ

00:37:29.550 --> 00:37:31.185 align:start position:34% line:-1
<i>“写真２ 写真３”</i>

00:37:31.285 --> 00:37:33.821 align:start position:27% line:-1
<i>“閉じる 閉じる 閉じる”</i>

00:37:33.921 --> 00:37:34.688 align:start position:41% line:-1
<i>“ボタン”</i>

00:37:34.788 --> 00:37:39.059 align:start position:25% line:-2
フォーカスは
モーダルビューから外れません

00:37:40.227 --> 00:37:41.695 align:start position:25% line:-1
<i>“VoiceOver オフ”</i>

00:37:45.132 --> 00:37:50.604 align:start position:43% line:-1
(拍手)

00:37:50.704 --> 00:37:56.777 align:start position:25% line:-2
これでアクセシビリティ体験が
使用可能から極上になりました

00:37:56.877 --> 00:38:02.449 align:start position:27% line:-2
実際の操作感を確認しながら
開発を行ったことで

00:37:56.877 --> 00:38:02.449 align:start position:27% line:-2
実際の操作感を確認しながら
開発を行ったことで

00:38:02.549 --> 00:38:06.453 align:start position:32% line:-2
ユーザの負担を
劇的に軽減させました

00:38:06.753 --> 00:38:13.093 align:start position:23% line:-2
ユーザはデベロッパの努力を喜び
アプリケーションを楽しめます

00:38:13.193 --> 00:38:14.928 align:start position:32% line:-1
締めはスカイラーから

00:38:16.563 --> 00:38:20.200 align:start position:43% line:-1
(拍手)

00:38:20.300 --> 00:38:21.501 align:start position:41% line:-1
ありがとう

00:38:22.736 --> 00:38:24.838 align:start position:34% line:-1
今のバビヤのデモで

00:38:24.938 --> 00:38:29.309 align:start position:34% line:-2
微調整が生む変化が
分かったと思います

00:38:29.843 --> 00:38:33.847 align:start position:32% line:-2
インターフェイスを
カスタムにしなくても

00:38:33.947 --> 00:38:39.486 align:start position:23% line:-2
単純な修正で
アクセシビリティを向上できます

00:38:39.953 --> 00:38:43.757 align:start position:30% line:-2
アプリケーションを
アクセシブルにする際は

00:38:44.157 --> 00:38:46.293 align:start position:30% line:-1
表面的な考え方を捨て―

00:38:46.393 --> 00:38:51.999 align:start position:25% line:-2
支援技術を使うユーザにとって
何が大事か考えるのです

00:38:53.167 --> 00:38:56.303 align:start position:34% line:-2
まとめとして
冒頭の話に戻ります

00:38:56.603 --> 00:39:00.174 align:start position:34% line:-2
使えることは
大きな第一歩ですが

00:38:56.603 --> 00:39:00.174 align:start position:34% line:-2
使えることは
大きな第一歩ですが

00:39:00.474 --> 00:39:02.476 align:start position:34% line:-1
上を目指しましょう

00:39:03.210 --> 00:39:05.979 align:start position:36% line:-2
各ユーザの
ニーズに応える―

00:39:06.079 --> 00:39:10.450 align:start position:34% line:-2
極上の楽しい体験を
提供できるはずです

00:39:11.618 --> 00:39:15.889 align:start position:21% line:-2
アプリケーションを
極上にする方法はいくつもあります

00:39:16.723 --> 00:39:20.294 align:start position:30% line:-2
アクセシブルな設計には
利点があります

00:39:20.394 --> 00:39:25.098 align:start position:32% line:-2
色のコントラスト比を
推奨値以上にしたり

00:39:25.198 --> 00:39:31.338 align:start position:23% line:-2
レイアウトを変えられたりすれば
全ユーザが恩恵を受けます

00:39:31.672 --> 00:39:36.543 align:start position:21% line:-2
ユーザの設定に合わせて
デフォルト設計を拡張してください

00:39:38.045 --> 00:39:42.616 align:start position:29% line:-2
支援技術を使った
アクセシビリティ体験には

00:39:42.716 --> 00:39:46.320 align:start position:34% line:-2
目的意識と
優先順位が大事です

00:39:46.420 --> 00:39:50.824 align:start position:30% line:-2
簡単で直感的な操作と
コンテキストを忘れずに

00:39:52.359 --> 00:39:58.499 align:start position:25% line:-2
このセッションの詳細と
デモをしたアプリケーションは

00:39:58.599 --> 00:40:01.235 align:start position:30% line:-1
画面のURLにあります

00:39:58.599 --> 00:40:01.235 align:start position:30% line:-1
画面のURLにあります

00:40:01.401 --> 00:40:03.437 align:start position:36% line:-1
また 私たちは―

00:40:03.537 --> 00:40:07.574 align:start position:29% line:-2
アクセシビリティに関する
ラボも行います

00:40:07.674 --> 00:40:13.013 align:start position:27% line:-2
ご自分のアプリケーションを
アクセシブルにする方法など

00:40:13.113 --> 00:40:15.115 align:start position:29% line:-1
具体的な質問にも答えます

00:40:15.215 --> 00:40:17.718 align:start position:30% line:-1
そちらもご参加ください

00:40:18.218 --> 00:40:20.921 align:start position:30% line:-1
では 楽しいWWDCを

00:40:21.021 --> 00:40:23.156 align:start position:43% line:-1
(拍手)
