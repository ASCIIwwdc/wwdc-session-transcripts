WEBVTT

00:00:07.040 --> 00:00:15.582 align:start position:43% line:-1
(音楽)

00:00:21.088 --> 00:00:24.958 align:start position:43% line:-1
(拍手)

00:00:25.058 --> 00:00:28.395 align:start position:34% line:-1
皆さん　こんにちは

00:00:29.463 --> 00:00:30.898 align:start position:45% line:-1
どうも

00:00:30.998 --> 00:00:33.200 align:start position:34% line:-1
楽しんでいますか？

00:00:33.300 --> 00:00:36.436 align:start position:27% line:-1
次々と新発表が飛び出すので

00:00:36.537 --> 00:00:38.972 align:start position:34% line:-1
ワクワクしますよね

00:00:39.072 --> 00:00:41.208 align:start position:32% line:-1
私はシュローカ･キニ

00:00:41.308 --> 00:00:44.811 align:start position:9% line:-2
Developer Publicationsで
働いています

00:00:45.212 --> 00:00:50.284 align:start position:30% line:-2
つまり私はコード以外に
文章も書けるんです

00:00:50.551 --> 00:00:52.319 align:start position:41% line:-1
(笑い声)

00:00:52.419 --> 00:00:57.157 align:start position:27% line:-2
デベロッパの助けとなる
ドキュメントを作っています

00:00:57.357 --> 00:01:01.795 align:start position:14% line:-2
今日はSafariとWebKitについて
お話しします

00:00:57.357 --> 00:01:01.795 align:start position:14% line:-2
今日はSafariとWebKitについて
お話しします

00:01:01.895 --> 00:01:06.133 align:start position:27% line:-2
最新のSafariで
最新技術を使いたいという―

00:01:06.233 --> 00:01:09.570 align:start position:32% line:-2
Webデベロッパは
よく聞いてくださいね

00:01:09.770 --> 00:01:14.474 align:start position:29% line:-2
Webビューや機能拡張を
使用する方にも―

00:01:14.575 --> 00:01:16.210 align:start position:38% line:-1
耳よりな話です

00:01:16.310 --> 00:01:19.713 align:start position:21% line:-1
他分野の方も ぜひ聞いてください

00:01:19.813 --> 00:01:25.118 align:start position:27% line:-2
新機能で より快適な
ブラウジングを楽しめますよ

00:01:26.119 --> 00:01:29.489 align:start position:29% line:-1
前回の発表から さらに―

00:01:29.590 --> 00:01:31.692 align:start position:32% line:-1
大きく向上しています

00:01:31.792 --> 00:01:36.763 align:start position:27% line:-2
今回は最新技術による安全で
高機能なアプリケーションを

00:01:36.864 --> 00:01:40.200 align:start position:29% line:-1
いくつかご紹介しましょう

00:01:40.300 --> 00:01:42.236 align:start position:36% line:-1
多くが無料ですよ

00:01:42.336 --> 00:01:47.040 align:start position:21% line:-2
ではセキュリティに関する発表から
始めましょう

00:01:49.376 --> 00:01:51.812 align:start position:30% line:-1
WKWebViewです

00:01:52.346 --> 00:01:56.083 align:start position:29% line:-2
“WKWebViewなら
2014年からある”と―

00:01:56.183 --> 00:01:58.552 align:start position:36% line:-1
思われたでしょう

00:01:58.652 --> 00:02:00.921 align:start position:30% line:-1
ですが改めて紹介します

00:01:58.652 --> 00:02:00.921 align:start position:30% line:-1
ですが改めて紹介します

00:02:01.021 --> 00:02:04.925 align:start position:32% line:-2
UIWebViewは
非推奨になるからです

00:02:05.025 --> 00:02:09.530 align:start position:43% line:-1
(拍手)

00:02:09.630 --> 00:02:13.800 align:start position:29% line:-2
Webコンテンツの
ネイティブ環境での表示が

00:02:13.901 --> 00:02:18.805 align:start position:23% line:-2
難しい時などに
WKWebViewがお勧めです

00:02:18.906 --> 00:02:23.277 align:start position:21% line:-2
UIWebViewを知っていれば
切り替えも簡単ですし

00:02:23.377 --> 00:02:28.415 align:start position:29% line:-2
macOSでもiOSでも
開発時間が減らせます

00:02:28.515 --> 00:02:32.019 align:start position:29% line:-2
WKWebViewは
どちらでも使えるからです

00:02:32.119 --> 00:02:35.756 align:start position:30% line:-2
UIWebViewや
Webビューとは違い―

00:02:35.856 --> 00:02:39.193 align:start position:23% line:-1
両方でコードを共有できるのです

00:02:39.793 --> 00:02:44.464 align:start position:27% line:-2
さらにWKWebViewは
独立しているため―

00:02:44.565 --> 00:02:50.571 align:start position:23% line:-2
Web処理に問題があっても
アプリケーションに影響しません

00:02:50.671 --> 00:02:56.210 align:start position:25% line:-2
重いWebコンテンツで
処理が遅れることもないのです

00:02:56.310 --> 00:02:59.413 align:start position:16% line:-1
たとえWKWebViewが故障しても―

00:02:59.580 --> 00:03:02.916 align:start position:34% line:-2
アプリケーションに
被害は及びません

00:02:59.580 --> 00:03:02.916 align:start position:34% line:-2
アプリケーションに
被害は及びません

00:03:03.016 --> 00:03:09.156 align:start position:23% line:-2
WKWebViewは高い安全と
性能を提供します

00:03:09.256 --> 00:03:15.229 align:start position:20% line:-2
たとえ面倒でもWKWebViewに
替える価値があるのです

00:03:16.897 --> 00:03:19.967 align:start position:25% line:-1
次は機能拡張に関する発表です

00:03:20.067 --> 00:03:22.402 align:start position:30% line:-1
Safariの機能は―

00:03:22.803 --> 00:03:26.206 align:start position:25% line:-1
この数年で大きく進化しました

00:03:26.306 --> 00:03:31.378 align:start position:14% line:-2
Safari Extensionの歴史を
振り返ってみましょう

00:03:32.012 --> 00:03:36.817 align:start position:25% line:-2
アプリケーションの拡張という
概念がない2010年に―

00:03:36.917 --> 00:03:39.953 align:start position:4% line:-1
Legacy Safari Extensionを発表

00:03:40.053 --> 00:03:45.058 align:start position:5% line:-2
Safari Extension Builderで
.safariextzファイルを作り

00:03:45.158 --> 00:03:47.961 align:start position:0% line:-1
Safari Extensions Gallery経由で

00:03:48.061 --> 00:03:51.598 align:start position:27% line:-1
拡張機能を公開していました

00:03:51.865 --> 00:03:58.138 align:start position:20% line:-2
Legacy Extensionは
閲覧データにアクセスできたため

00:03:58.372 --> 00:04:02.009 align:start position:23% line:-1
詐欺などで悪用されてしまいます

00:03:58.372 --> 00:04:02.009 align:start position:23% line:-1
詐欺などで悪用されてしまいます

00:04:02.109 --> 00:04:07.514 align:start position:29% line:-2
これらから守るのに
手を打つ必要がありました

00:04:07.614 --> 00:04:11.552 align:start position:32% line:-2
そして2014年が
新たな節目となります

00:04:11.652 --> 00:04:16.156 align:start position:27% line:-2
macOSとiOS向けの
アプリケーション拡張を発表

00:04:16.255 --> 00:04:18.458 align:start position:23% line:-1
App Extensionは―

00:04:18.559 --> 00:04:22.129 align:start position:29% line:-2
Safariではなく
アプリケーション拡張です

00:04:22.229 --> 00:04:27.201 align:start position:30% line:-2
しかし これが
大きな変化を生みました

00:04:27.434 --> 00:04:32.139 align:start position:30% line:-2
他のアプリケーションに
機能が拡張できる上に―

00:04:32.239 --> 00:04:35.042 align:start position:25% line:-1
Xcodeで作成できるのです

00:04:35.142 --> 00:04:37.177 align:start position:36% line:-1
そこで私たちは―

00:04:37.277 --> 00:04:42.850 align:start position:23% line:-2
この優れた概念をSafariに
適用しようと考えます

00:04:42.950 --> 00:04:46.286 align:start position:25% line:-1
当時はアドブロッカーが人気で

00:04:46.386 --> 00:04:50.824 align:start position:7% line:-1
2015年にContent Blockerを導入

00:04:50.924 --> 00:04:54.361 align:start position:25% line:-2
Xcodeで作成できる
App Extensionで

00:04:54.461 --> 00:04:56.864 align:start position:25% line:-1
macOSとiOSで使えます

00:04:56.964 --> 00:04:59.500 align:start position:29% line:-1
特別な構造で高速化を実現

00:04:59.600 --> 00:05:05.038 align:start position:5% line:-2
Legacy Safari Extensionより
速くブロックします

00:04:59.600 --> 00:05:05.038 align:start position:5% line:-2
Legacy Safari Extensionより
速くブロックします

00:05:05.339 --> 00:05:08.575 align:start position:23% line:-1
閲覧速度に影響することはないし

00:05:08.675 --> 00:05:12.880 align:start position:25% line:-2
閲覧履歴にアクセスしないので
安全です

00:05:13.180 --> 00:05:17.317 align:start position:16% line:-1
App Extensionの利点は多く

00:05:17.417 --> 00:05:21.989 align:start position:14% line:-2
すべてSafari Extensionに
取り入れようと考えました

00:05:22.089 --> 00:05:24.625 align:start position:27% line:-1
そうすれば双方を生かせます

00:05:24.791 --> 00:05:27.961 align:start position:23% line:-1
Safariの機能拡張に加え―

00:05:28.061 --> 00:05:31.665 align:start position:25% line:-1
アプリケーションも拡張します

00:05:31.765 --> 00:05:33.367 align:start position:34% line:-1
そして2016年―

00:05:33.467 --> 00:05:37.237 align:start position:21% line:-2
macOSにSafari
App Extensionが登場

00:05:37.337 --> 00:05:40.507 align:start position:27% line:-2
Xcodeで作成できる
Safariの拡張機能です

00:05:40.607 --> 00:05:46.613 align:start position:23% line:-2
App Storeで無料または
有料で出品できるので―

00:05:46.713 --> 00:05:49.650 align:start position:27% line:-1
請求処理の心配も要りません

00:05:50.250 --> 00:05:53.854 align:start position:25% line:-2
2010年のLegacy
Extensionと比べて―

00:05:53.954 --> 00:05:57.257 align:start position:12% line:-2
Safari App Extensionは
とても便利です

00:05:57.357 --> 00:06:01.528 align:start position:7% line:-2
Legacy Safari Extensionを
お持ちなら―

00:05:57.357 --> 00:06:01.528 align:start position:7% line:-2
Legacy Safari Extensionを
お持ちなら―

00:06:01.628 --> 00:06:03.630 align:start position:30% line:-1
ぜひ切り替えてください

00:06:03.730 --> 00:06:07.634 align:start position:21% line:-2
アドブロッカーも
Content Blockerへ

00:06:07.835 --> 00:06:09.570 align:start position:41% line:-1
それでは―

00:06:09.670 --> 00:06:14.241 align:start position:7% line:-2
Legacy Safari Extensionの
悪用対策は？

00:06:15.142 --> 00:06:20.447 align:start position:18% line:-2
Safari 12から
Legacy Extensionは―

00:06:20.547 --> 00:06:24.184 align:start position:16% line:-1
Gallery外ではサポートされません

00:06:24.551 --> 00:06:30.224 align:start position:21% line:-2
Galleryで提供されるものは
まだ使えます

00:06:30.958 --> 00:06:35.095 align:start position:16% line:-2
非推奨の canload APIを使う
拡張は例外で

00:06:35.195 --> 00:06:37.231 align:start position:27% line:-1
デフォルトで無効となります

00:06:37.331 --> 00:06:42.236 align:start position:29% line:-2
Galleryへの提出は
2018年末まで可能です

00:06:42.336 --> 00:06:45.906 align:start position:21% line:-1
しかし翌年には さらに新しくなり

00:06:46.006 --> 00:06:50.277 align:start position:20% line:-2
いずれはSafari App
Extensionに完全移行します

00:06:50.377 --> 00:06:54.815 align:start position:27% line:-2
この２つの機能拡張モデルの
開発方法は―

00:06:54.915 --> 00:06:57.851 align:start position:27% line:-1
ドキュメントをご覧ください

00:06:57.951 --> 00:07:00.821 align:start position:9% line:-2
Developer Publicationsが
掲載しています

00:06:57.951 --> 00:07:00.821 align:start position:9% line:-2
Developer Publicationsが
掲載しています

00:07:01.788 --> 00:07:04.458 align:start position:43% line:-1
(拍手)

00:07:07.794 --> 00:07:10.764 align:start position:29% line:-1
ここまでWebビューと―

00:07:10.864 --> 00:07:14.067 align:start position:21% line:-1
機能拡張について発表を行いました

00:07:14.168 --> 00:07:18.105 align:start position:30% line:-2
以降は主にWeb開発に
関わる説明です

00:07:18.205 --> 00:07:20.807 align:start position:25% line:-2
まずはSubresource
Integrityです

00:07:21.542 --> 00:07:26.914 align:start position:27% line:-2
デベロッパがコンテンツを
HTTPSで提供した場合―

00:07:27.014 --> 00:07:32.686 align:start position:23% line:-2
第三者サーバからのコンテンツが
含まれる可能性があります

00:07:32.786 --> 00:07:35.389 align:start position:30% line:-1
例えばCDNサーバです

00:07:35.489 --> 00:07:39.593 align:start position:29% line:-2
双方がHTTPS通信なら
安全かも知れません

00:07:39.693 --> 00:07:42.896 align:start position:27% line:-1
データの機密性や整合性を―

00:07:42.996 --> 00:07:45.632 align:start position:34% line:-1
確保できるからです

00:07:45.732 --> 00:07:50.838 align:start position:25% line:-2
しかし第三者が感染していたら
どうなるでしょう？

00:07:50.938 --> 00:07:52.072 align:start position:38% line:-1
あり得る話です

00:07:52.172 --> 00:07:55.909 align:start position:21% line:-1
この場合 感染したサーバに対して

00:07:56.009 --> 00:07:59.313 align:start position:21% line:-1
HTTPSは安全を確保できません

00:07:59.413 --> 00:08:02.749 align:start position:29% line:-2
そのため
改ざんされたスクリプトが

00:07:59.413 --> 00:08:02.749 align:start position:29% line:-2
そのため
改ざんされたスクリプトが

00:08:02.850 --> 00:08:05.686 align:start position:29% line:-1
提供される危険があります

00:08:06.019 --> 00:08:11.225 align:start position:11% line:-2
Subresource Integrityは
これを防ぎます

00:08:11.325 --> 00:08:14.027 align:start position:32% line:-1
方法はハッシュ化です

00:08:14.127 --> 00:08:18.499 align:start position:20% line:-2
まずはScriptやLink要素に
Integrity属性を付与

00:08:18.699 --> 00:08:22.803 align:start position:27% line:-2
値はハッシュ関数を適用して
生成します

00:08:23.270 --> 00:08:26.874 align:start position:32% line:-2
読み込み時に
別のハッシュ値を計算

00:08:26.974 --> 00:08:31.612 align:start position:27% line:-2
２つが一致しなければ
スクリプトは実行されません

00:08:31.712 --> 00:08:36.216 align:start position:29% line:-2
こうして改ざんファイルの
読み込みを防ぎます

00:08:36.316 --> 00:08:39.720 align:start position:25% line:-1
ハッシュ値が一致しない限り―

00:08:40.020 --> 00:08:42.054 align:start position:34% line:-1
実行されないのです

00:08:42.322 --> 00:08:48.662 align:start position:23% line:-2
機能を失わないよう
フォールバックを追加しておけば

00:08:48.762 --> 00:08:52.399 align:start position:27% line:-1
リソースを再ロードできます

00:08:54.368 --> 00:08:58.972 align:start position:27% line:-2
これで悪意あるファイルから
ユーザを守れます

00:08:59.072 --> 00:09:03.076 align:start position:29% line:-2
そしてITPはユーザの
プライバシーを保護します

00:08:59.072 --> 00:09:03.076 align:start position:29% line:-2
そしてITPはユーザの
プライバシーを保護します

00:09:03.177 --> 00:09:06.680 align:start position:12% line:-2
正式名はIntelligent
Tracking Preventionです

00:09:06.880 --> 00:09:09.983 align:start position:32% line:-2
ユーザ追跡を減らす
Safariの機能で

00:09:10.083 --> 00:09:14.288 align:start position:25% line:-2
Cookieやサイトデータを
制限するものです

00:09:14.388 --> 00:09:18.192 align:start position:30% line:-2
Cookieの保存には
２つ条件があります

00:09:18.292 --> 00:09:22.429 align:start position:27% line:-2
外部サイトがCookieを
利用できるのは―

00:09:22.529 --> 00:09:25.799 align:start position:23% line:-1
ユーザのサイト訪問から24時間

00:09:25.899 --> 00:09:30.671 align:start position:27% line:-2
そして最初の24時間を含め
30日間のみ―

00:09:30.771 --> 00:09:34.775 align:start position:23% line:-2
Cookieは独立ストレージに
保存されます

00:09:34.875 --> 00:09:38.512 align:start position:21% line:-1
ですが今回 制限を厳しくしました

00:09:38.779 --> 00:09:44.451 align:start position:21% line:-2
24時間のCookie利用期間は
撤廃されます

00:09:45.219 --> 00:09:49.423 align:start position:29% line:-2
しかし独立ストレージには
保存されます

00:09:49.623 --> 00:09:53.794 align:start position:32% line:-2
デベロッパにとって
外部埋め込み機能は―

00:09:53.894 --> 00:09:57.364 align:start position:25% line:-1
ワークフローに重要なものです

00:09:57.464 --> 00:10:01.068 align:start position:27% line:-1
では どうするかと言うと―

00:09:57.464 --> 00:10:01.068 align:start position:27% line:-1
では どうするかと言うと―

00:10:01.535 --> 00:10:04.972 align:start position:9% line:-1
Storage Access APIを使います

00:10:06.507 --> 00:10:09.676 align:start position:32% line:-1
外部埋め込み機能が―

00:10:09.776 --> 00:10:17.217 align:start position:18% line:-2
当事者Cookieにアクセスするには
許可が必要です

00:10:17.317 --> 00:10:21.221 align:start position:30% line:-2
許可がない場合
プロンプトが表示され―

00:10:21.321 --> 00:10:26.894 align:start position:23% line:-2
Cookieへのアクセス可否を
ユーザに問い合わせます

00:10:27.427 --> 00:10:31.498 align:start position:23% line:-1
アクセスの判断を委ねることで―

00:10:31.598 --> 00:10:36.670 align:start position:27% line:-2
ユーザがCookieを
管理できるようになるのです

00:10:36.770 --> 00:10:42.042 align:start position:23% line:-2
これでプライバシーを守りながら
ブラウジングできます

00:10:44.011 --> 00:10:47.915 align:start position:18% line:-2
次はAutomatic Strong
Passwordsです

00:10:48.015 --> 00:10:51.818 align:start position:32% line:-2
他のセッションでも
ご覧になりましたよね

00:10:51.919 --> 00:10:54.288 align:start position:32% line:-1
この機能は最高ですよ

00:10:54.388 --> 00:10:57.524 align:start position:29% line:-1
アカウントを登録するのに

00:10:57.624 --> 00:11:00.828 align:start position:30% line:-2
常に強力なパスワードを
設定できます

00:10:57.624 --> 00:11:00.828 align:start position:30% line:-2
常に強力なパスワードを
設定できます

00:11:00.928 --> 00:11:02.796 align:start position:38% line:-1
これは便利です

00:11:02.896 --> 00:11:06.233 align:start position:29% line:-1
パスワード管理については

00:11:06.333 --> 00:11:08.402 align:start position:36% line:-1
私も実は苦手です

00:11:08.502 --> 00:11:13.707 align:start position:27% line:-2
それほど強固ではなく
他で使ってる場合もあります

00:11:14.141 --> 00:11:17.110 align:start position:25% line:-1
この機能に手間はかかりません

00:11:17.211 --> 00:11:21.315 align:start position:23% line:-2
ログイン画面に行けば
ヒューリスティックが決定します

00:11:21.415 --> 00:11:26.019 align:start position:32% line:-2
ですが機能させるには
入力フィールドに―

00:11:26.119 --> 00:11:30.157 align:start position:23% line:-2
autocomplete属性を
追加してください

00:11:31.258 --> 00:11:35.229 align:start position:23% line:-1
パスワードは長さが20文字で―

00:11:35.362 --> 00:11:40.100 align:start position:32% line:-2
大文字 小文字 数字
ハイフンを含みます

00:11:40.200 --> 00:11:45.639 align:start position:25% line:-2
この機能を どのサービスにも
適合させるには―

00:11:45.739 --> 00:11:49.943 align:start position:27% line:-1
パスワードに条件が必要です

00:11:50.043 --> 00:11:57.050 align:start position:11% line:-2
そこでpasswordrules属性を使用し
パスワード要件を追加します

00:11:57.151 --> 00:12:00.187 align:start position:16% line:-2
デベロッパWebサイトに
ValidationToolがあります

00:11:57.151 --> 00:12:00.187 align:start position:16% line:-2
デベロッパWebサイトに
ValidationToolがあります

00:12:00.287 --> 00:12:03.891 align:start position:23% line:-1
これで互換性テストができますし

00:12:03.991 --> 00:12:07.394 align:start position:29% line:-2
独自のパスワードルールが
開発できます

00:12:08.595 --> 00:12:13.267 align:start position:9% line:-2
Security Code AutoFillも
先日 紹介しましたね

00:12:13.367 --> 00:12:18.005 align:start position:29% line:-2
多くの人が無料で得られる
便利な機能です

00:12:18.105 --> 00:12:20.874 align:start position:32% line:-1
面倒だと思うんですよ

00:12:20.974 --> 00:12:23.577 align:start position:34% line:-2
アプリケーションと
メールを行き来して

00:12:23.677 --> 00:12:27.214 align:start position:34% line:-2
認証コードを覚えて
入力するなんて

00:12:27.314 --> 00:12:29.249 align:start position:32% line:-1
でもSafariが―

00:12:29.349 --> 00:12:33.153 align:start position:27% line:-2
認証コードを
入力候補に出してくれたら？

00:12:33.253 --> 00:12:36.123 align:start position:36% line:-1
とても楽ですよね

00:12:36.390 --> 00:12:41.195 align:start position:27% line:-2
これもヒューリスティックを
使うので無料です

00:12:41.295 --> 00:12:46.233 align:start position:30% line:-2
しっかり機能させ
入力候補を出すためには

00:12:46.633 --> 00:12:52.039 align:start position:16% line:-2
autocomplete属性に
one-time-codeと設定します

00:12:52.139 --> 00:12:54.641 align:start position:25% line:-1
詳細についてはオンラインで―

00:12:54.741 --> 00:12:59.012 align:start position:9% line:-2
Security Code AutoFillの
セッションをご覧ください

00:13:00.914 --> 00:13:02.349 align:start position:30% line:-1
以上がセキュリティです

00:13:02.449 --> 00:13:04.384 align:start position:25% line:-1
WKWebViewに切り替え

00:13:04.484 --> 00:13:07.387 align:start position:9% line:-2
Content Blockerと
Safari App Extensionに移行

00:13:07.487 --> 00:13:13.360 align:start position:12% line:-2
改ざんファイルを提供しない
Subresource Integrity

00:13:13.460 --> 00:13:17.431 align:start position:9% line:-2
ITPはStorage Access APIで
プライバシーを確保

00:13:18.098 --> 00:13:22.836 align:start position:2% line:-2
Automatic Strong Passwordsと
Security Code AutoFillは

00:13:22.936 --> 00:13:25.672 align:start position:32% line:-1
安全で便利な機能です

00:13:27.274 --> 00:13:29.109 align:start position:30% line:-1
ここまで大丈夫ですか？

00:13:30.644 --> 00:13:34.014 align:start position:27% line:-2
次はパフォーマンスに関する
機能です

00:13:34.114 --> 00:13:36.617 align:start position:18% line:-1
まずはFont Collection

00:13:36.717 --> 00:13:39.620 align:start position:30% line:-1
冒頭でも言いましたが―

00:13:39.720 --> 00:13:42.523 align:start position:27% line:-1
私の名前はシュローカ･キニ

00:13:42.623 --> 00:13:44.758 align:start position:29% line:-1
英語の名前ではありません

00:13:46.460 --> 00:13:51.732 align:start position:27% line:-2
デーヴァナーガリー文字では
こうなります

00:13:51.832 --> 00:13:56.603 align:start position:32% line:-2
フォントは様々ですが
文字はすべて同じです

00:13:56.703 --> 00:14:01.441 align:start position:20% line:-2
今年はWOFF2とTrueType
コレクションをサポート

00:13:56.703 --> 00:14:01.441 align:start position:20% line:-2
今年はWOFF2とTrueType
コレクションをサポート

00:14:01.542 --> 00:14:05.078 align:start position:30% line:-2
同類フォントを
１コレクションにすれば

00:14:05.179 --> 00:14:08.482 align:start position:29% line:-2
複製テーブルを
文字コード表から省けます

00:14:08.582 --> 00:14:11.652 align:start position:27% line:-2
例えばビルトインフォントの
PingFangは―

00:14:11.752 --> 00:14:16.657 align:start position:25% line:-2
コレクションを使えば
ファイルを84％縮小できます

00:14:16.757 --> 00:14:20.594 align:start position:27% line:-2
なぜなら
同じ文字セットのフォントは

00:14:20.694 --> 00:14:24.531 align:start position:23% line:-1
テーブルを共有しているからです

00:14:26.300 --> 00:14:30.904 align:start position:20% line:-2
次の機能Font-Displayは
変更が不要です

00:14:31.004 --> 00:14:34.942 align:start position:29% line:-2
Webコンテンツで
カスタムフォントを使用し

00:14:35.042 --> 00:14:38.111 align:start position:29% line:-1
表示されなかったとします

00:14:38.278 --> 00:14:43.717 align:start position:27% line:-2
すると フォントの表示まで
プレースホルダを使い―

00:14:43.817 --> 00:14:48.889 align:start position:27% line:-2
画面上のコンテンツの位置が
保たれます

00:14:49.823 --> 00:14:54.895 align:start position:29% line:-2
しかし この設定をやめて
自分で調整したい場合は

00:14:54.995 --> 00:14:59.600 align:start position:14% line:-2
Font-Displayディスクリプタを
使用します

00:14:59.700 --> 00:15:03.136 align:start position:36% line:-2
別の値を使って
他のフォントや―

00:14:59.700 --> 00:15:03.136 align:start position:36% line:-2
別の値を使って
他のフォントや―

00:15:03.237 --> 00:15:07.007 align:start position:30% line:-2
キャッシュのフォントを
指定したりできます

00:15:09.510 --> 00:15:15.148 align:start position:25% line:-2
動画のパフォーマンス向上には
ビデオを使います

00:15:15.249 --> 00:15:20.487 align:start position:30% line:-2
私は この爆発の壁紙が
気に入っています

00:15:20.587 --> 00:15:24.358 align:start position:25% line:-1
カッコいいのですが静止画です

00:15:25.259 --> 00:15:28.295 align:start position:23% line:-1
本当は“バーン！”と出てほしい

00:15:28.395 --> 00:15:31.465 align:start position:25% line:-1
動きのあるGIFなら完璧です

00:15:31.798 --> 00:15:35.802 align:start position:30% line:-2
しかし読み込みが遅く
バッテリーを消費します

00:15:35.903 --> 00:15:40.274 align:start position:29% line:-2
それにビデオより
パフォーマンスが落ちます

00:15:42.075 --> 00:15:46.146 align:start position:25% line:-2
Safariにおいてmp4は
img要素でサポート

00:15:46.246 --> 00:15:50.651 align:start position:23% line:-2
再生にはビルトインの
ハードウェアデコードを使います

00:15:50.784 --> 00:15:54.655 align:start position:30% line:-2
読み込みは速く
バッテリーの消費も削減

00:15:54.755 --> 00:15:59.960 align:start position:27% line:-2
CSSの背景プロパティでも
mp4を使えます

00:16:00.461 --> 00:16:04.231 align:start position:25% line:-1
この技術は簡単に導入できます

00:16:04.398 --> 00:16:08.535 align:start position:30% line:-2
古いブラウザに非対応の
バージョンにもです

00:16:08.635 --> 00:16:11.438 align:start position:20% line:-1
古いブラウザはmp4に対応しません

00:16:11.538 --> 00:16:14.808 align:start position:34% line:-2
しかし便利なことに
既存の技術で―

00:16:14.908 --> 00:16:20.914 align:start position:21% line:-2
フォールバック画像を表示するよう
指定できるのです

00:16:22.249 --> 00:16:27.087 align:start position:29% line:-2
続いてイベントリスナーに
移りましょう

00:16:27.187 --> 00:16:28.422 align:start position:39% line:-1
いいですか？

00:16:28.622 --> 00:16:34.061 align:start position:25% line:-2
優れたデフォルト機能と
カスタマイズ性を持っています

00:16:34.461 --> 00:16:37.464 align:start position:27% line:-1
タッチスクリーンの操作は―

00:16:37.564 --> 00:16:39.299 align:start position:34% line:-1
スクロールをします

00:16:39.399 --> 00:16:43.337 align:start position:25% line:-1
その度にタッチイベントが発生

00:16:43.704 --> 00:16:48.208 align:start position:30% line:-2
これによりスクロールが
妨害されてしまいます

00:16:48.442 --> 00:16:50.677 align:start position:36% line:-1
例をご覧ください

00:16:51.745 --> 00:16:56.483 align:start position:34% line:-2
左の方が右よりも
妨害されていますね

00:16:56.583 --> 00:16:58.185 align:start position:36% line:-1
ほぼ停止してます

00:16:58.418 --> 00:17:02.422 align:start position:25% line:-1
では右は何が違うのでしょうか

00:16:58.418 --> 00:17:02.422 align:start position:25% line:-1
では右は何が違うのでしょうか

00:17:02.689 --> 00:17:04.858 align:start position:7% line:-1
Passive Event Listenerです

00:17:04.958 --> 00:17:09.863 align:start position:16% line:-2
これは documentやwindow
bodyの要素で有効になります

00:17:09.963 --> 00:17:15.135 align:start position:30% line:-2
そしてタッチイベントが
ブラウザに指示します

00:17:15.234 --> 00:17:19.573 align:start position:29% line:-2
“妨害を受けず
スクロールを続行せよ”と

00:17:19.673 --> 00:17:24.044 align:start position:16% line:-1
追加要素をPassiveにしたい場合は

00:17:24.144 --> 00:17:28.549 align:start position:27% line:-2
Passiveプロパティを
Trueに指定します

00:17:28.715 --> 00:17:32.152 align:start position:27% line:-1
このフラグの指示によって―

00:17:32.252 --> 00:17:36.723 align:start position:23% line:-2
ブラウザはイベント処理の完了を
待ちません

00:17:36.823 --> 00:17:40.794 align:start position:30% line:-2
これで滑らかに
スクロールできるのです

00:17:42.729 --> 00:17:47.501 align:start position:9% line:-2
次はAsync Image Decodingの
非同期呼び出しです

00:17:47.668 --> 00:17:50.370 align:start position:21% line:-1
通常 画像のデコードは同期的です

00:17:50.470 --> 00:17:52.272 align:start position:27% line:-1
メインスレッドをブロックし

00:17:52.372 --> 00:17:55.809 align:start position:29% line:-2
すべての画像を読み込んで
表示します

00:17:56.109 --> 00:17:59.680 align:start position:29% line:-2
これではユーザとの対話も
遮断されます

00:17:59.780 --> 00:18:04.885 align:start position:27% line:-2
しかし非同期デコードなら
スレッドを並行処理するので

00:17:59.780 --> 00:18:04.885 align:start position:27% line:-2
しかし非同期デコードなら
スレッドを並行処理するので

00:18:04.985 --> 00:18:07.955 align:start position:29% line:-1
対話はブロックされません

00:18:08.188 --> 00:18:14.795 align:start position:21% line:-2
非同期呼び出しは
デフォルトで１ページ目から機能し

00:18:15.028 --> 00:18:18.065 align:start position:29% line:-2
大抵のWebコンテンツを
カバーします

00:18:18.899 --> 00:18:21.435 align:start position:32% line:-2
しかし特殊なケースも
あり得ます

00:18:21.535 --> 00:18:27.474 align:start position:20% line:-2
Webページにタイルマップがあれば
読み込みにズレが生じます

00:18:27.574 --> 00:18:33.413 align:start position:25% line:-2
画像が多ければタイルの表示が
遅れるかも知れません

00:18:34.248 --> 00:18:38.185 align:start position:29% line:-2
そしてアプリケーションの
スライドショー

00:18:38.285 --> 00:18:40.921 align:start position:21% line:-1
スライドをフェードインさせるのに

00:18:41.021 --> 00:18:45.425 align:start position:27% line:-2
同期デコードでは
間に合わないかも知れません

00:18:46.994 --> 00:18:49.863 align:start position:30% line:-1
それで 突然切り替わる

00:18:50.764 --> 00:18:55.903 align:start position:27% line:-2
でも非同期デコードなら
きれいにフェードインします

00:18:56.770 --> 00:19:01.241 align:start position:30% line:-2
こうしたケースでは
２つの対処法があります

00:18:56.770 --> 00:19:01.241 align:start position:30% line:-2
こうしたケースでは
２つの対処法があります

00:19:01.341 --> 00:19:06.547 align:start position:23% line:-2
１つはimg要素に
decoding属性を追加する

00:19:06.647 --> 00:19:09.583 align:start position:12% line:-1
もう１つはJavaScript APIの―

00:19:09.683 --> 00:19:14.154 align:start position:9% line:-2
HTMLImageElement.decode
メソッドを使います

00:19:14.254 --> 00:19:17.624 align:start position:25% line:-1
これがpromiseを返し―

00:19:17.724 --> 00:19:21.228 align:start position:27% line:-2
DOMへの追加タイミングを
知らせます

00:19:22.496 --> 00:19:25.399 align:start position:25% line:-1
そして非同期呼び出しの継続は

00:19:25.499 --> 00:19:28.035 align:start position:18% line:-1
Beacon APIをサポートします

00:19:28.168 --> 00:19:34.274 align:start position:25% line:-2
通常はunloadイベントに
データを送ろうとした場合―

00:19:34.374 --> 00:19:37.611 align:start position:23% line:-1
非同期リクエストは無視されます

00:19:37.711 --> 00:19:42.349 align:start position:29% line:-2
そのため読み込みの遅い
同期リクエストを使います

00:19:42.683 --> 00:19:45.419 align:start position:16% line:-1
でも今はBeacon APIがあります

00:19:45.519 --> 00:19:51.225 align:start position:25% line:-2
Safariが起動していれば
データをサーバに送るだけです

00:19:51.325 --> 00:19:54.061 align:start position:34% line:-1
間違いなく届きます

00:19:56.063 --> 00:20:01.368 align:start position:27% line:-2
たくさん話しましたが
実際に機能を見たいですよね

00:19:56.063 --> 00:20:01.368 align:start position:27% line:-2
たくさん話しましたが
実際に機能を見たいですよね

00:20:01.468 --> 00:20:05.272 align:start position:32% line:-2
これよりジェーソンに
実演してもらいます

00:20:05.372 --> 00:20:06.306 align:start position:43% line:-1
よろしく

00:20:06.406 --> 00:20:11.278 align:start position:43% line:-1
(拍手)

00:20:11.378 --> 00:20:12.179 align:start position:45% line:-1
どうも

00:20:12.279 --> 00:20:16.049 align:start position:23% line:-2
デベロッパの
ジェーソン･サンドマイヤーです

00:20:16.316 --> 00:20:21.255 align:start position:29% line:-2
僕は工芸が好きで休日に
バードハウスを作ってます

00:20:21.355 --> 00:20:26.026 align:start position:29% line:-2
最近 作品を紹介するのに
ブログを始めました

00:20:26.126 --> 00:20:31.765 align:start position:29% line:-2
自分でフォントや色も選び
仕上がりに満足しています

00:20:32.065 --> 00:20:34.334 align:start position:30% line:-1
このデザインもですが―

00:20:34.434 --> 00:20:39.807 align:start position:23% line:-2
ユーザに優れた機能を提供できて
誇らしく思います

00:20:39.907 --> 00:20:45.245 align:start position:14% line:-1
WebKitとSafariの新たな機能を

00:20:45.345 --> 00:20:48.215 align:start position:29% line:-1
ブログにも活用してみます

00:20:48.582 --> 00:20:50.918 align:start position:36% line:-1
とても簡単ですよ

00:20:51.952 --> 00:20:55.022 align:start position:14% line:-1
MacBook Proでサイトを開きます

00:20:56.924 --> 00:20:58.358 align:start position:36% line:-1
そして…　おっと

00:20:58.458 --> 00:21:00.561 align:start position:32% line:-1
ちょっと 何したの？

00:20:58.458 --> 00:21:00.561 align:start position:32% line:-1
ちょっと 何したの？

00:21:02.563 --> 00:21:05.866 align:start position:25% line:-1
上品なブログじゃなくなったな

00:21:07.401 --> 00:21:09.336 align:start position:32% line:-1
正しいURLなのに…

00:21:10.904 --> 00:21:13.006 align:start position:34% line:-1
原因はきっとこうだ

00:21:14.241 --> 00:21:17.077 align:start position:30% line:-1
このサイトを始めた時―

00:21:17.578 --> 00:21:22.716 align:start position:30% line:-2
友人にブロゴスフィアは
危険だと言われました

00:21:24.751 --> 00:21:27.588 align:start position:32% line:-1
これは破壊工作ですよ

00:21:27.688 --> 00:21:31.825 align:start position:32% line:-2
スタイルシートを
誰かに替えられました

00:21:31.925 --> 00:21:34.761 align:start position:27% line:-1
でもバックアップがあります

00:21:34.862 --> 00:21:39.333 align:start position:25% line:-2
さらにSubresource
Integrityの機能で

00:21:39.433 --> 00:21:41.535 align:start position:30% line:-1
今後の安全を確保します

00:21:46.273 --> 00:21:52.312 align:start position:18% line:-2
まずは新しいintegrity属性を
linkタグに追加

00:21:52.412 --> 00:21:54.648 align:start position:27% line:-1
スクリプトにも使えますが―

00:21:54.748 --> 00:21:59.286 align:start position:32% line:-2
まだ変更を加えるので
追加は後にします

00:22:00.721 --> 00:22:05.959 align:start position:29% line:-2
この属性の値は
ハッシュアルゴリズムで―

00:22:06.059 --> 00:22:11.598 align:start position:23% line:-2
表示するファイルの
チェックサムを生成したものです

00:22:12.699 --> 00:22:16.270 align:start position:23% line:-2
すでにSHA-256ハッシュを
用意してます

00:22:16.770 --> 00:22:18.806 align:start position:39% line:-1
次がハイフン

00:22:19.206 --> 00:22:23.243 align:start position:20% line:-1
そしてハッシュ値を表すBase64

00:22:24.011 --> 00:22:25.546 align:start position:36% line:-1
これを保存します

00:22:25.679 --> 00:22:28.782 align:start position:30% line:-1
そしてページをリロード

00:22:29.683 --> 00:22:31.652 align:start position:32% line:-1
スタイルがありません

00:22:31.752 --> 00:22:36.390 align:start position:21% line:-2
ファイルとHTMLのハッシュ値が
一致しないので―

00:22:36.490 --> 00:22:39.493 align:start position:23% line:-1
Safariがブロックしました

00:22:42.229 --> 00:22:44.198 align:start position:34% line:-1
CDNに接続します

00:22:44.731 --> 00:22:47.534 align:start position:23% line:-1
デスクトップのバックアップです

00:22:48.168 --> 00:22:51.839 align:start position:21% line:-1
バックアップをCDNへドラッグし

00:22:52.272 --> 00:22:54.374 align:start position:30% line:-1
ファイルを置き換えます

00:22:55.209 --> 00:22:58.979 align:start position:23% line:-1
そしてリロードすれば元通りです

00:22:59.880 --> 00:23:02.483 align:start position:43% line:-1
(拍手)

00:22:59.880 --> 00:23:02.483 align:start position:43% line:-1
(拍手)

00:23:02.583 --> 00:23:03.650 align:start position:45% line:-1
どうも

00:23:04.117 --> 00:23:07.821 align:start position:5% line:-1
Subresource Integrityがあれば

00:23:07.921 --> 00:23:11.391 align:start position:25% line:-1
こうしてサイトを保護できます

00:23:12.759 --> 00:23:16.897 align:start position:30% line:-2
続いてパフォーマンスを
見てみましょう

00:23:17.998 --> 00:23:22.536 align:start position:27% line:-2
サイトの どのリンクが
クリックされたかが分かれば

00:23:22.636 --> 00:23:25.505 align:start position:32% line:-1
デザインに生かせます

00:23:29.209 --> 00:23:34.114 align:start position:29% line:-2
そこでクリックのデータを
確認できるよう―

00:23:34.214 --> 00:23:37.251 align:start position:27% line:-1
ハンドラを設定しておきます

00:23:40.921 --> 00:23:44.625 align:start position:30% line:-2
しかし他のページに飛ぶ
リンクを押すと

00:23:44.725 --> 00:23:49.530 align:start position:21% line:-1
遅れが生じることに気が付きました

00:23:49.963 --> 00:23:51.698 align:start position:36% line:-1
リンクをクリック

00:23:53.000 --> 00:23:56.136 align:start position:25% line:-1
開くのに１秒ほどかかりました

00:23:57.971 --> 00:24:02.509 align:start position:32% line:-2
これは ハンドラの
同期リクエストにより

00:23:57.971 --> 00:24:02.509 align:start position:32% line:-2
これは ハンドラの
同期リクエストにより

00:24:02.609 --> 00:24:06.146 align:start position:18% line:-1
Safariがブロックされるからです

00:24:06.346 --> 00:24:10.384 align:start position:29% line:-2
同期リクエストは
ブラウザがリクエストを―

00:24:10.484 --> 00:24:12.719 align:start position:30% line:-1
中止しないようにします

00:24:13.520 --> 00:24:17.157 align:start position:21% line:-1
しかしサーバの反応は遅くなります

00:24:17.257 --> 00:24:22.129 align:start position:27% line:-2
僕はデータがサーバに届けば
反応は気にしません

00:24:22.396 --> 00:24:26.300 align:start position:23% line:-2
そんな時は
Beacon APIが最適です

00:24:28.469 --> 00:24:33.006 align:start position:25% line:-2
まずはBeacon APIが
ブラウザで使えるかをチェック

00:24:33.106 --> 00:24:36.910 align:start position:14% line:-1
sendBeaconメソッドを確認します

00:24:37.344 --> 00:24:40.814 align:start position:34% line:-2
使えなければ
元の方法で続けます

00:24:41.448 --> 00:24:43.617 align:start position:38% line:-1
そこで使えます

00:24:46.720 --> 00:24:49.156 align:start position:29% line:-1
エンドポイントを渡します

00:24:49.923 --> 00:24:51.358 align:start position:38% line:-1
dataもです

00:24:53.527 --> 00:24:56.430 align:start position:36% line:-1
保存してサイトへ

00:24:56.864 --> 00:24:58.799 align:start position:38% line:-1
リロードします

00:24:59.299 --> 00:25:02.202 align:start position:30% line:-1
これで すぐに飛びます

00:24:59.299 --> 00:25:02.202 align:start position:30% line:-1
これで すぐに飛びます

00:25:02.302 --> 00:25:03.637 align:start position:36% line:-1
リンクをクリック

00:25:04.505 --> 00:25:05.539 align:start position:41% line:-1
開きました

00:25:05.906 --> 00:25:09.209 align:start position:18% line:-1
XMLHttpRequestと比べて

00:25:09.309 --> 00:25:11.979 align:start position:27% line:-1
コードが短く安定しています

00:25:12.079 --> 00:25:15.916 align:start position:30% line:-2
これで よりスムーズに
サイトが見られます

00:25:17.351 --> 00:25:18.652 align:start position:43% line:-1
(拍手)

00:25:18.752 --> 00:25:19.920 align:start position:45% line:-1
どうも

00:25:21.822 --> 00:25:26.493 align:start position:20% line:-1
次はiPadの問題を見てみましょう

00:25:33.000 --> 00:25:38.472 align:start position:27% line:-2
サイトはクロスフェードの
スライドショーにしています

00:25:39.973 --> 00:25:43.043 align:start position:25% line:-1
右矢印をタップすると進みます

00:25:44.545 --> 00:25:47.047 align:start position:34% line:-1
気付いたでしょうか

00:25:47.147 --> 00:25:50.284 align:start position:27% line:-1
画像が一瞬 白くなりました

00:25:50.450 --> 00:25:52.352 align:start position:36% line:-1
もう少し進めます

00:25:56.290 --> 00:25:59.193 align:start position:27% line:-1
コードを確認してみましょう

00:25:59.293 --> 00:26:01.295 align:start position:34% line:-1
改善できるはずです

00:25:59.293 --> 00:26:01.295 align:start position:34% line:-1
改善できるはずです

00:26:05.933 --> 00:26:08.235 align:start position:25% line:-1
これがスライドショーのクラス

00:26:08.602 --> 00:26:11.672 align:start position:12% line:-1
setCurrentSlideに注目します

00:26:11.772 --> 00:26:16.910 align:start position:27% line:-2
これがボタンのクリック時に
呼び出されるメソッドです

00:26:18.979 --> 00:26:22.516 align:start position:21% line:-1
各スライドは すぐに映らないので

00:26:22.616 --> 00:26:27.788 align:start position:29% line:-2
クリックすると
次の画像だけ読み込みます

00:26:31.391 --> 00:26:33.527 align:start position:36% line:-1
ここでの問題は―

00:26:33.627 --> 00:26:36.997 align:start position:21% line:-1
移行だけが すぐ行われることです

00:26:37.598 --> 00:26:39.800 align:start position:36% line:-1
画像を待ちません

00:26:39.900 --> 00:26:45.239 align:start position:27% line:-2
画像がロードできても
表示にはデコードが必要です

00:26:46.106 --> 00:26:50.344 align:start position:30% line:-2
そこで画像のロードと
デコードを待つように―

00:26:50.444 --> 00:26:52.913 align:start position:32% line:-1
調整したいと思います

00:26:53.080 --> 00:26:57.985 align:start position:23% line:-2
HTMLのimg要素に
新たなdecodeメソッドを―

00:26:58.819 --> 00:27:01.622 align:start position:32% line:-1
加えれば改善できます

00:26:58.819 --> 00:27:01.622 align:start position:32% line:-1
加えれば改善できます

00:27:02.389 --> 00:27:06.126 align:start position:25% line:-1
img要素のリファレンスです

00:27:08.996 --> 00:27:12.366 align:start position:30% line:-2
decodeメソッドが
画像を非同期でデコード

00:27:12.466 --> 00:27:18.005 align:start position:29% line:-2
処理が完了した時点で
promiseを返します

00:27:19.573 --> 00:27:24.344 align:start position:18% line:-2
そしてコールバックとして
transition関数を渡しました

00:27:26.346 --> 00:27:28.382 align:start position:34% line:-1
iPadに戻ります

00:27:33.587 --> 00:27:36.523 align:start position:30% line:-1
リロードでページを更新

00:27:37.024 --> 00:27:39.259 align:start position:29% line:-1
これでスムーズに進みます

00:27:41.295 --> 00:27:44.031 align:start position:32% line:-1
画像が白くなりません

00:27:45.566 --> 00:27:50.437 align:start position:43% line:-1
(拍手)

00:27:51.004 --> 00:27:52.806 align:start position:36% line:-1
Macに替えます

00:27:55.042 --> 00:27:57.544 align:start position:27% line:-1
サイトの最後のページには―

00:27:57.644 --> 00:28:01.882 align:start position:27% line:-2
鳥のアニメーションGIFを
載せています

00:27:57.644 --> 00:28:01.882 align:start position:27% line:-2
鳥のアニメーションGIFを
載せています

00:28:03.684 --> 00:28:07.054 align:start position:25% line:-1
これは かなり大きな容量です

00:28:07.821 --> 00:28:12.392 align:start position:34% line:-2
このGIFは
７MB強ありますが

00:28:12.493 --> 00:28:14.895 align:start position:30% line:-1
画質は良くはありません

00:28:14.995 --> 00:28:19.032 align:start position:21% line:-2
でもH.264でエンコードされた
mp4があるので

00:28:19.132 --> 00:28:21.902 align:start position:25% line:-1
これを直接 サイトに使います

00:28:22.536 --> 00:28:26.340 align:start position:25% line:-1
HTMLに戻り画像を探します

00:28:26.673 --> 00:28:27.708 align:start position:41% line:-1
ありました

00:28:28.609 --> 00:28:32.746 align:start position:34% line:-2
ファイルの拡張子を
mp4に変えます

00:28:33.547 --> 00:28:34.615 align:start position:43% line:-1
リロード

00:28:34.715 --> 00:28:35.682 align:start position:43% line:-1
これで―

00:28:36.717 --> 00:28:39.586 align:start position:29% line:-1
高質の動画に変わりました

00:28:39.686 --> 00:28:41.688 align:start position:30% line:-1
容量は約１MBですが―

00:28:41.788 --> 00:28:45.225 align:start position:34% line:-2
GIFより尺が少し
長くなっています

00:28:48.061 --> 00:28:50.130 align:start position:27% line:-1
src属性でも使えるので―

00:28:50.230 --> 00:28:54.835 align:start position:30% line:-2
フォールバック画像を
ブラウザに提供できます

00:29:00.274 --> 00:29:05.345 align:start position:29% line:-2
以上が新たな機能のうちの
４つになります

00:29:06.447 --> 00:29:10.651 align:start position:32% line:-2
これらを活用すれば
ユーザも喜ぶでしょう

00:29:10.751 --> 00:29:16.056 align:start position:29% line:-2
ではシュローカに新機能の
紹介を続けてもらいます

00:29:16.156 --> 00:29:21.862 align:start position:43% line:-1
(拍手)

00:29:25.065 --> 00:29:26.433 align:start position:41% line:-1
ありがとう

00:29:26.533 --> 00:29:31.672 align:start position:29% line:-2
ブロゴスフィアの非情さを
初めて知りました

00:29:33.240 --> 00:29:34.942 align:start position:39% line:-1
気を付けてね

00:29:37.344 --> 00:29:39.479 align:start position:34% line:-1
おさらいしましょう

00:29:39.580 --> 00:29:44.184 align:start position:30% line:-2
フォントコレクションで
ファイルサイズを縮小

00:29:44.284 --> 00:29:49.857 align:start position:23% line:-2
Font-Displayは
カスタムフォントを調整できます

00:29:49.957 --> 00:29:54.228 align:start position:27% line:-2
img要素でビデオを使えば
パフォーマンスが向上

00:29:54.328 --> 00:29:56.897 align:start position:9% line:-2
Passive Event Listenerで
スクロールが円滑に

00:29:56.997 --> 00:30:01.668 align:start position:4% line:-2
Beacon APIやImage Decodingで
非同期呼び出しを使えば

00:29:56.997 --> 00:30:01.668 align:start position:4% line:-2
Beacon APIやImage Decodingで
非同期呼び出しを使えば

00:30:01.768 --> 00:30:04.538 align:start position:23% line:-1
メインスレッドの遅れを防げます

00:30:06.006 --> 00:30:08.208 align:start position:34% line:-1
最後のトピックは―

00:30:08.308 --> 00:30:12.913 align:start position:23% line:-1
ユーザ体験を向上する新機能です

00:30:13.013 --> 00:30:15.749 align:start position:25% line:-1
まずはドラッグ＆ドロップです

00:30:16.517 --> 00:30:21.088 align:start position:27% line:-2
ドラッグ＆ドロップは
APIのアップデートで向上

00:30:21.188 --> 00:30:26.260 align:start position:32% line:-2
ディレクトリ単位で
アップロード可能です

00:30:26.360 --> 00:30:29.363 align:start position:32% line:-1
圧縮も必要ありません

00:30:29.730 --> 00:30:32.800 align:start position:18% line:-1
さらにHTML テキスト URLの―

00:30:32.900 --> 00:30:38.071 align:start position:27% line:-2
MIMEタイプの読み書きを
サポートします

00:30:38.605 --> 00:30:43.310 align:start position:7% line:-2
iOSにおいては
Data Transfer APIもアップデート

00:30:43.410 --> 00:30:48.782 align:start position:29% line:-2
ドラッグ＆ドロップ動作を
カスタマイズできます

00:30:49.116 --> 00:30:54.354 align:start position:25% line:-2
例えば ショッピングカートに
商品をドラッグしたい場合は

00:30:54.454 --> 00:30:57.424 align:start position:34% line:-1
動作をカスタマイズ

00:30:57.524 --> 00:30:59.593 align:start position:29% line:-1
img要素をドラッグし―

00:30:59.693 --> 00:31:04.398 align:start position:30% line:-2
要素名と金額を
カートにドロップします

00:30:59.693 --> 00:31:04.398 align:start position:30% line:-2
要素名と金額を
カートにドロップします

00:31:04.565 --> 00:31:07.935 align:start position:30% line:-2
このように
カスタマイズすることで

00:31:08.035 --> 00:31:11.872 align:start position:25% line:-1
より豊かな操作ができるのです

00:31:13.106 --> 00:31:16.043 align:start position:32% line:-1
APIの話に移ります

00:31:16.143 --> 00:31:19.379 align:start position:14% line:-2
Payment Request APIと
Apple Payです

00:31:19.479 --> 00:31:22.716 align:start position:27% line:-2
Apple Payは単なる
支払い方法ではなく

00:31:22.816 --> 00:31:25.953 align:start position:32% line:-2
電子決済を
考え直させるものです

00:31:26.053 --> 00:31:30.257 align:start position:29% line:-2
支払いの際に
カード情報が渡らないので

00:31:30.357 --> 00:31:33.160 align:start position:27% line:-1
より安全に支払いができます

00:31:33.393 --> 00:31:38.966 align:start position:29% line:-2
標準APIでのサポートを
望む声が多く上がったので

00:31:39.066 --> 00:31:43.003 align:start position:32% line:-2
力を合わせて取り組み
実現しました

00:31:43.103 --> 00:31:48.041 align:start position:14% line:-2
Apple PayはW3C標準のAPIで
利用可能です

00:31:49.610 --> 00:31:53.981 align:start position:43% line:-1
(拍手)

00:31:54.248 --> 00:31:57.551 align:start position:25% line:-1
これでオプションが増えました

00:31:57.651 --> 00:32:01.722 align:start position:18% line:-1
しかしApple Payを使うには―

00:31:57.651 --> 00:32:01.722 align:start position:18% line:-1
しかしApple Payを使うには―

00:32:01.822 --> 00:32:03.624 align:start position:38% line:-1
変更が必要です

00:32:03.724 --> 00:32:06.860 align:start position:21% line:-1
例えば 既存の決算フローでははく

00:32:06.960 --> 00:32:11.532 align:start position:18% line:-2
インターフェースに
Apple Payボタンを追加します

00:32:11.765 --> 00:32:17.604 align:start position:9% line:-2
現在 Payment Request APIで
使える機能は数点です

00:32:17.704 --> 00:32:23.043 align:start position:23% line:-2
きめ細かなエラー処理と
提携カードと音声表記の処理です

00:32:23.143 --> 00:32:26.480 align:start position:16% line:-2
これらはApple Pay JSだけで
使えます

00:32:26.580 --> 00:32:30.350 align:start position:30% line:-2
Apple Payで
この機能が必要であれば

00:32:30.450 --> 00:32:31.752 align:start position:16% line:-1
Apple Pay JSを使いましょう

00:32:33.620 --> 00:32:37.524 align:start position:14% line:-2
もう１つ対応したAPIは
Service Worker APIです

00:32:40.727 --> 00:32:43.964 align:start position:32% line:-2
ユーザのネット接続に
問題がある場合…

00:32:44.198 --> 00:32:48.035 align:start position:29% line:-2
不安定だったり
接続しなかったりする時―

00:32:48.135 --> 00:32:52.740 align:start position:21% line:-2
Service Workerなら
体裁よく処理できます

00:32:52.840 --> 00:32:55.909 align:start position:23% line:-2
Service Workerは
固有のオリジンで登録

00:32:56.009 --> 00:32:59.680 align:start position:23% line:-1
オフラインでキャッシュが使えて

00:32:59.780 --> 00:33:02.816 align:start position:29% line:-2
スクリプトのリクエストも
傍受します

00:32:59.780 --> 00:33:02.816 align:start position:29% line:-2
スクリプトのリクエストも
傍受します

00:33:02.916 --> 00:33:07.788 align:start position:27% line:-2
すべてのページが
同じインスタンスを持つので

00:33:07.888 --> 00:33:11.058 align:start position:27% line:-1
複数のタブを同時に開けます

00:33:11.158 --> 00:33:16.130 align:start position:29% line:-2
リクエストもすべて
同じスクリプトで傍受され

00:33:16.230 --> 00:33:19.800 align:start position:21% line:-1
不変のリソースを維持できるのです

00:33:19.900 --> 00:33:22.870 align:start position:23% line:-2
Service Workerで
Webページが安定します

00:33:22.970 --> 00:33:27.841 align:start position:7% line:-2
Webアプリケーションでも
SFSafariViewControllerでも

00:33:27.941 --> 00:33:31.912 align:start position:32% line:-2
不安定な接続環境にも
対応できるのです

00:33:33.380 --> 00:33:37.751 align:start position:21% line:-2
次はiPad向けの
Fullscreen APIです

00:33:38.452 --> 00:33:44.091 align:start position:18% line:-2
Safari内の要素をカスタマイズし
フルスクリーン調整ができます

00:33:44.725 --> 00:33:50.197 align:start position:25% line:-2
その要素をクリックすれば
フルスクリーンにできるのです

00:33:51.031 --> 00:33:56.170 align:start position:43% line:-1
(拍手)

00:33:56.537 --> 00:34:00.674 align:start position:30% line:-2
動画では自動判別し
キャンセルボタンを表示

00:33:56.537 --> 00:34:00.674 align:start position:30% line:-2
動画では自動判別し
キャンセルボタンを表示

00:34:00.774 --> 00:34:05.979 align:start position:27% line:-2
コンテンツが再生していれば
ボタンが消えます

00:34:07.748 --> 00:34:12.152 align:start position:30% line:-2
キャンセルボタンによる
コンテンツの遮断は―

00:34:12.252 --> 00:34:17.491 align:start position:5% line:-2
CSSの環境変数
fullscreen-inset-topで防げます

00:34:17.958 --> 00:34:22.362 align:start position:16% line:-2
さらにfullscreen-auto-
hide-delayを使って

00:34:22.462 --> 00:34:26.967 align:start position:27% line:-2
ボタンと同時にコンテンツを
隠すこともできます

00:34:29.203 --> 00:34:34.007 align:start position:29% line:-2
残り２項目となりましたが
まずはARです

00:34:34.107 --> 00:34:37.511 align:start position:23% line:-1
ARの話は何度も聞いてますよね

00:34:37.610 --> 00:34:41.481 align:start position:23% line:-1
ARモデルをUIに追加すれば―

00:34:41.681 --> 00:34:45.786 align:start position:18% line:-2
サイトでAR Quick Lookが
利用できます

00:34:45.886 --> 00:34:47.353 align:start position:34% line:-1
コードも長くなく―

00:34:47.454 --> 00:34:50.724 align:start position:30% line:-2
アンカータグを書き
ARにrel属性を指定

00:34:51.125 --> 00:34:56.228 align:start position:21% line:-2
USDZにhrefリンクを指定し
フォーマットをARモデルへ

00:34:56.330 --> 00:35:01.468 align:start position:21% line:-2
モデルの画像を含んだ
imgかpicture要素を追加

00:34:56.330 --> 00:35:01.468 align:start position:21% line:-2
モデルの画像を含んだ
imgかpicture要素を追加

00:35:01.568 --> 00:35:04.605 align:start position:29% line:-1
すると画像はこうなります

00:35:04.705 --> 00:35:08.042 align:start position:32% line:-2
画像の上部に
アイコンが表示され―

00:35:08.142 --> 00:35:12.613 align:start position:29% line:-2
クリックでARが
利用できることを示します

00:35:12.713 --> 00:35:17.251 align:start position:32% line:-2
これでWebサイトに
深みを加えられます

00:35:18.785 --> 00:35:22.756 align:start position:23% line:-1
詳細はセッションをご覧ください

00:35:22.856 --> 00:35:26.493 align:start position:0% line:-2
「Integrating Apps and Content
with AR Quick Look」です

00:35:28.028 --> 00:35:30.197 align:start position:29% line:-1
最後はwatchOSです

00:35:30.597 --> 00:35:33.667 align:start position:23% line:-1
WebサイトはMacBook―

00:35:34.501 --> 00:35:36.336 align:start position:38% line:-1
そしてiPad

00:35:36.670 --> 00:35:41.108 align:start position:27% line:-2
ポケットサイズ画面の
iPhoneでも見られます

00:35:41.208 --> 00:35:44.711 align:start position:25% line:-1
今度は さらに小さな画面です

00:35:45.979 --> 00:35:49.917 align:start position:20% line:-1
watchOSでサイトが見られます

00:35:50.517 --> 00:35:54.121 align:start position:43% line:-1
(拍手)

00:35:54.221 --> 00:35:56.657 align:start position:34% line:-1
私はもう大歓迎です

00:35:56.757 --> 00:36:00.627 align:start position:32% line:-2
母からレシピが
送られてくるんですが

00:35:56.757 --> 00:36:00.627 align:start position:32% line:-2
母からレシピが
送られてくるんですが

00:36:00.728 --> 00:36:04.031 align:start position:34% line:-2
Eメールを見ながら
料理はできません

00:36:04.131 --> 00:36:09.403 align:start position:29% line:-2
でも今後は腕の上の画面で
レシピが見られるんです

00:36:10.037 --> 00:36:12.639 align:start position:30% line:-1
レスポンシブデザインで

00:36:12.740 --> 00:36:16.643 align:start position:29% line:-2
watchOSの画面でも
よく見えます

00:36:16.743 --> 00:36:20.180 align:start position:29% line:-2
Webサイトの
さらなる最適化も可能です

00:36:20.280 --> 00:36:25.419 align:start position:12% line:-2
WWDCの動画「Designing Web
Content for watchOS」を

00:36:25.519 --> 00:36:28.222 align:start position:32% line:-1
ご覧になってください

00:36:29.790 --> 00:36:33.093 align:start position:23% line:-1
先ほどのジェーソンのブログも―

00:36:33.193 --> 00:36:37.731 align:start position:25% line:-2
これらの機能で
さらに質を上げられるはずです

00:36:37.831 --> 00:36:41.635 align:start position:21% line:-1
彼を呼んで実演してもらいましょう

00:36:41.735 --> 00:36:42.736 align:start position:43% line:-1
よろしく

00:36:42.836 --> 00:36:46.406 align:start position:43% line:-1
(拍手)

00:36:46.507 --> 00:36:47.608 align:start position:45% line:-1
どうも

00:36:47.908 --> 00:36:53.514 align:start position:27% line:-2
僕は読者が工芸を始めやすい
ブログを目指しています

00:36:55.449 --> 00:36:57.484 align:start position:32% line:-1
iPadに替えますね

00:37:01.755 --> 00:37:06.326 align:start position:30% line:-2
そこで作業に必要な物の
リストを載せました

00:37:06.760 --> 00:37:09.697 align:start position:29% line:-1
さらに便利さを追求して―

00:37:10.230 --> 00:37:15.135 align:start position:29% line:-2
ショッピングリスト機能を
加えようと思いました

00:37:15.235 --> 00:37:18.705 align:start position:21% line:-1
読者はブログから買い物ができるし

00:37:18.805 --> 00:37:22.142 align:start position:32% line:-1
僕も小遣いが稼げます

00:37:23.310 --> 00:37:26.880 align:start position:29% line:-2
ドラッグ＆ドロップ機能を
加えれば―

00:37:26.980 --> 00:37:30.918 align:start position:27% line:-2
品物をショッピングリストに
移せます

00:37:43.730 --> 00:37:46.567 align:start position:27% line:-1
iPadでも問題ありません

00:37:47.868 --> 00:37:51.104 align:start position:27% line:-1
ではコードを見てみましょう

00:37:56.844 --> 00:37:59.413 align:start position:27% line:-1
それほど手間はかかりません

00:37:59.613 --> 00:38:03.951 align:start position:11% line:-1
Data Transfer APIを使って―

00:37:59.613 --> 00:38:03.951 align:start position:11% line:-1
Data Transfer APIを使って―

00:38:04.084 --> 00:38:09.423 align:start position:20% line:-2
各品にdragstartイベントを
加えます

00:38:11.091 --> 00:38:14.628 align:start position:32% line:-2
そしてリストである
ドロップゾーンには―

00:38:14.728 --> 00:38:16.730 align:start position:30% line:-1
dropイベントを追加

00:38:16.830 --> 00:38:19.533 align:start position:25% line:-1
これが保存されたテキストを―

00:38:20.067 --> 00:38:25.606 align:start position:11% line:-2
Data Transfer APIから取得し
shopping-list要素に加えます

00:38:29.109 --> 00:38:32.446 align:start position:29% line:-2
さらに要素を
ドロップしたいエリアに―

00:38:32.546 --> 00:38:36.250 align:start position:23% line:-1
dragoverイベントを追加

00:38:36.350 --> 00:38:42.956 align:start position:23% line:-2
これでデフォルトイベントを防ぎ
指定のドロップを可能にします

00:38:43.891 --> 00:38:47.628 align:start position:21% line:-1
これだけでショッピングUIが完成

00:38:47.728 --> 00:38:51.298 align:start position:34% line:-2
MacやiPadで
しっかり機能します

00:38:53.567 --> 00:38:59.273 align:start position:23% line:-2
ショッピングリストができたので
あとは購入方法です

00:39:01.542 --> 00:39:06.613 align:start position:14% line:-2
Payment Request APIで
Apple Payを提供します

00:39:09.016 --> 00:39:12.219 align:start position:30% line:-2
HTMLとCSSで
サイトに加えましたが―

00:39:12.319 --> 00:39:16.757 align:start position:27% line:-2
Apple Payボタンは
デフォルトで隠しています

00:39:16.857 --> 00:39:18.892 align:start position:32% line:-1
ユーザのデバイスが―

00:39:18.992 --> 00:39:23.564 align:start position:18% line:-2
Apple Payに対応する場合のみ
表示します

00:39:24.298 --> 00:39:25.799 align:start position:39% line:-1
その確認は―

00:39:27.134 --> 00:39:31.038 align:start position:9% line:-2
ApplePaySession.canMake
Paymentsメソッドを使用

00:39:32.072 --> 00:39:34.908 align:start position:25% line:-1
対応可ならボタンを表示します

00:39:38.579 --> 00:39:40.948 align:start position:30% line:-1
ボタンにイベントを追加

00:39:43.050 --> 00:39:47.387 align:start position:18% line:-2
関数内にPaymentRequest
インスタンスを生成し

00:39:47.488 --> 00:39:49.590 align:start position:36% line:-1
処理を開始します

00:39:54.628 --> 00:39:59.266 align:start position:16% line:-2
PaymentRequestがダメなら
Apple Pay JSです

00:40:02.469 --> 00:40:05.372 align:start position:29% line:-1
これがコンストラクタです

00:40:06.173 --> 00:40:08.308 align:start position:30% line:-1
引数は３つ入れられます

00:40:09.910 --> 00:40:13.480 align:start position:29% line:-2
まず 支払い方法の
データオブジェクトを追加

00:40:16.850 --> 00:40:20.354 align:start position:20% line:-1
これにApply Payの識別子や

00:40:20.454 --> 00:40:23.390 align:start position:27% line:-1
オプションが含まれています

00:40:26.627 --> 00:40:30.197 align:start position:25% line:-1
その下は支払いに関する詳細で

00:40:30.297 --> 00:40:33.167 align:start position:25% line:-1
ここで細かな処理を指定します

00:40:33.267 --> 00:40:37.271 align:start position:23% line:-1
サイト名や総額や商品名などです

00:40:39.273 --> 00:40:44.244 align:start position:32% line:-2
僕はリストの各品を
５ドルに設定しました

00:40:47.948 --> 00:40:50.517 align:start position:29% line:-1
最後はオプション引数に―

00:40:50.617 --> 00:40:55.689 align:start position:29% line:-2
処理を完了するのに必要な
ユーザ情報を記述します

00:40:57.491 --> 00:41:02.663 align:start position:30% line:-2
iPadに戻して
商品をリストに入れます

00:40:57.491 --> 00:41:02.663 align:start position:30% line:-2
iPadに戻して
商品をリストに入れます

00:41:11.071 --> 00:41:13.207 align:start position:32% line:-1
全情報を渡したので―

00:41:13.307 --> 00:41:18.178 align:start position:27% line:-2
シートを表示するのに
別のメソッドを呼び出します

00:41:19.513 --> 00:41:24.284 align:start position:29% line:-2
これがshowメソッドで
promiseを返します

00:41:24.385 --> 00:41:27.821 align:start position:20% line:-2
Face IDやTouch IDで
ユーザが処理を―

00:41:27.921 --> 00:41:30.591 align:start position:36% line:-1
認証した時にです

00:41:30.791 --> 00:41:33.994 align:start position:29% line:-1
ここで決済処理を行います

00:41:35.863 --> 00:41:40.667 align:start position:30% line:-2
そして 処理が成功
または失敗したかの値で

00:41:40.768 --> 00:41:43.303 align:start position:23% line:-1
completeを呼び出します

00:41:45.105 --> 00:41:46.840 align:start position:38% line:-1
iPadを確認

00:41:50.444 --> 00:41:51.511 align:start position:41% line:-1
できました

00:41:51.645 --> 00:41:56.283 align:start position:43% line:-1
(拍手)

00:41:56.383 --> 00:42:02.122 align:start position:23% line:-2
さらに決済セッションの取得など
数ステップあります

00:41:56.383 --> 00:42:02.122 align:start position:23% line:-2
さらに決済セッションの取得など
数ステップあります

00:42:02.222 --> 00:42:03.991 align:start position:36% line:-1
詳細については―

00:42:04.091 --> 00:42:10.197 align:start position:9% line:-2
Apple Developer Webサイトの
セッションをご覧ください

00:42:11.365 --> 00:42:12.866 align:start position:36% line:-1
僕のブログには―

00:42:13.600 --> 00:42:16.637 align:start position:23% line:-1
何かが欠けていると気付きました

00:42:18.172 --> 00:42:19.873 align:start position:39% line:-1
完成作品です

00:42:20.774 --> 00:42:24.878 align:start position:23% line:-1
そこで画像を加えようと思います

00:42:25.512 --> 00:42:28.248 align:start position:32% line:-1
でも静止画ではなく―

00:42:28.348 --> 00:42:32.753 align:start position:30% line:-2
実際の環境にある作品を
見られるようにしたい

00:42:32.953 --> 00:42:35.589 align:start position:18% line:-2
iOS 12の
新しいAR Quick Lookなら

00:42:35.689 --> 00:42:37.958 align:start position:30% line:-1
数コードで実現できます

00:42:42.596 --> 00:42:44.465 align:start position:34% line:-1
HTMLを開きます

00:42:44.932 --> 00:42:46.934 align:start position:36% line:-1
ここなら最適です

00:42:47.468 --> 00:42:49.937 align:start position:32% line:-1
早速 画像を追加し―

00:42:50.037 --> 00:42:54.842 align:start position:29% line:-2
バードハウスのモデル
USDZファイルにリンク

00:42:55.042 --> 00:42:57.544 align:start position:27% line:-1
ARのrel属性と共にです

00:43:00.514 --> 00:43:02.482 align:start position:34% line:-1
iPadに戻ると―

00:43:02.950 --> 00:43:06.220 align:start position:23% line:-1
いい感じの完成品が載っています

00:43:06.320 --> 00:43:11.125 align:start position:16% line:-2
AR Quick Lookのアイコンを
タップすると―

00:43:13.460 --> 00:43:19.867 align:start position:25% line:-2
モデルを動かしたり
実際の環境に置いたりできます

00:43:19.967 --> 00:43:22.803 align:start position:29% line:-1
これなら感覚がつかめます

00:43:23.537 --> 00:43:30.110 align:start position:43% line:-1
(拍手)

00:43:30.210 --> 00:43:33.313 align:start position:29% line:-1
とても簡単にできるので―

00:43:34.548 --> 00:43:37.217 align:start position:25% line:-1
セッションを見てみてください

00:43:37.317 --> 00:43:40.053 align:start position:27% line:-1
あとはシュローカに任せます

00:43:40.154 --> 00:43:41.121 align:start position:45% line:-1
どうも

00:43:41.321 --> 00:43:46.260 align:start position:43% line:-1
(拍手)

00:43:47.594 --> 00:43:49.730 align:start position:30% line:-1
ありがとう　ジェーソン

00:43:49.830 --> 00:43:52.466 align:start position:29% line:-1
いい感じのモデルでしたね

00:43:52.566 --> 00:43:58.539 align:start position:27% line:-2
あれを見てバードハウスを
作ってみようかと思いました

00:43:58.772 --> 00:44:00.841 align:start position:34% line:-1
実行するかは別です

00:43:58.772 --> 00:44:00.841 align:start position:34% line:-1
実行するかは別です

00:44:01.842 --> 00:44:04.645 align:start position:30% line:-2
おさらいです
ドラッグ＆ドロップと―

00:44:04.745 --> 00:44:08.682 align:start position:27% line:-2
iPadのフルスクリーンの
カスタマイズ

00:44:08.782 --> 00:44:11.819 align:start position:14% line:-2
Payment Request APIで
Apple Payをサポート

00:44:11.919 --> 00:44:15.289 align:start position:16% line:-2
Service Worker APIで
オフライン作業

00:44:15.722 --> 00:44:19.093 align:start position:32% line:-2
ARモデルでサイトに
深みを与えられ―

00:44:19.193 --> 00:44:22.930 align:start position:23% line:-2
それをApple Watchで
見られます

00:44:23.964 --> 00:44:28.302 align:start position:29% line:-2
これまでに機能の参照先を
お伝えしました

00:44:28.402 --> 00:44:31.505 align:start position:30% line:-1
ですが質問のある方は―

00:44:31.605 --> 00:44:35.075 align:start position:27% line:-1
ラボに寄っていってください

00:44:35.175 --> 00:44:37.411 align:start position:29% line:-1
セッションのリンクから―

00:44:37.511 --> 00:44:42.182 align:start position:23% line:-2
今回のドキュメントと
関連セッションをご確認ください

00:44:42.482 --> 00:44:47.521 align:start position:32% line:-2
Webに関する機能は
豊富にあります

00:44:47.621 --> 00:44:50.924 align:start position:29% line:-1
Appleは絶え間なく―

00:44:51.024 --> 00:44:55.963 align:start position:25% line:-2
SafariとWebKitの
サポート向上を行っています

00:44:56.063 --> 00:45:00.734 align:start position:25% line:-2
これによりWebやネイティブ
拡張のデベロッパが

00:44:56.063 --> 00:45:00.734 align:start position:25% line:-2
これによりWebやネイティブ
拡張のデベロッパが

00:45:00.834 --> 00:45:05.572 align:start position:34% line:-2
最高のユーザ体験を
提供できるのです

00:45:06.473 --> 00:45:10.510 align:start position:23% line:-1
セッションへの参加を感謝します

00:45:10.611 --> 00:45:15.015 align:start position:30% line:-2
このあともWWDCを
楽しんでいってください

00:45:15.115 --> 00:45:19.553 align:start position:43% line:-1
(拍手)
