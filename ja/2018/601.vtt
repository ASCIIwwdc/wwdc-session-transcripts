WEBVTT

00:00:07.207 --> 00:00:15.516 align:start position:43% line:-1
(音楽)

00:00:21.455 --> 00:00:26.026 align:start position:43% line:-1
(拍手)

00:00:26.727 --> 00:00:32.466 align:start position:14% line:-2
ReplayKitによるライブスクリーン
ブロードキャストのセッションです

00:00:32.900 --> 00:00:35.903 align:start position:30% line:-1
私はアレキサンダーです

00:00:36.003 --> 00:00:41.375 align:start position:21% line:-2
ReplayKitのコンセプトと
新機能についてお話しします

00:00:42.543 --> 00:00:45.245 align:start position:34% line:-1
早速 始めましょう

00:00:47.347 --> 00:00:51.885 align:start position:16% line:-2
ReplayKitはアプリケーションの
画面や音声の―

00:00:51.985 --> 00:00:54.755 align:start position:25% line:-2
リアルタイムなキャプチャを
可能にするフレームワークです

00:00:55.055 --> 00:01:00.160 align:start position:29% line:-2
また編集･共有可能な
映像ファイル化もできます

00:00:55.055 --> 00:01:00.160 align:start position:29% line:-2
また編集･共有可能な
映像ファイル化もできます

00:01:01.595 --> 00:01:04.598 align:start position:29% line:-2
ライブブロードキャストも
サポートします

00:01:05.799 --> 00:01:09.002 align:start position:32% line:-2
ゲームなどの
アプリケーションに―

00:01:09.536 --> 00:01:13.407 align:start position:27% line:-2
ブロードキャストサービスで
音声や映像を―

00:01:13.507 --> 00:01:17.344 align:start position:27% line:-2
ストリーミングするツールを
提供します

00:01:18.712 --> 00:01:21.415 align:start position:30% line:-2
ブロードキャスト
アプリケーションでは―

00:01:21.515 --> 00:01:27.688 align:start position:18% line:-2
他のAppやiOSからキャプチャした
コンテンツを受け取り

00:01:27.788 --> 00:01:32.926 align:start position:25% line:-2
エンコードとサーバへの
直接ストリーミングができます

00:01:36.597 --> 00:01:41.235 align:start position:25% line:-2
ハイクオリティかつ
短い待ち時間での提供が可能で

00:01:41.502 --> 00:01:44.471 align:start position:29% line:-1
オーバーヘッドも少量です

00:01:44.872 --> 00:01:47.474 align:start position:29% line:-2
ユーザの
プライバシーを守るため―

00:01:47.574 --> 00:01:52.613 align:start position:27% line:-2
収録やブロードキャストには
承認が必要となり

00:01:52.713 --> 00:01:57.684 align:start position:27% line:-2
キャプチャする際は
インジケータが表示されます

00:02:02.289 --> 00:02:07.327 align:start position:20% line:-2
今回のテーマはReplayKitの
ブロードキャスト機能です

00:02:07.594 --> 00:02:12.065 align:start position:27% line:-2
App内ブロードキャストの
概要から始めます

00:02:12.399 --> 00:02:13.934 align:start position:25% line:-1
次にiOSのブロードキャスト

00:02:14.535 --> 00:02:19.406 align:start position:9% line:-2
そして新しいAPIである
System Broadcast Picker

00:02:20.774 --> 00:02:26.380 align:start position:21% line:-2
このAPIはアプリケーションから
直接ブロードキャストを開始します

00:02:28.615 --> 00:02:33.687 align:start position:7% line:-2
その後
Broadcast Extensionの実装や―

00:02:33.787 --> 00:02:37.257 align:start position:32% line:-2
新しいAPIへの
適用について話します

00:02:39.326 --> 00:02:45.399 align:start position:25% line:-2
さらにキャプチャした
コンテンツの保護の話もします

00:02:48.602 --> 00:02:51.505 align:start position:27% line:-2
それでは
ブロードキャストの概要です

00:02:54.174 --> 00:02:59.980 align:start position:20% line:-2
ReplayKitでは画面や音声の
ブロードキャストが可能です

00:03:00.113 --> 00:03:02.316 align:start position:25% line:-1
サードパーティのサービスを―

00:03:03.183 --> 00:03:05.953 align:start position:32% line:-2
iOSやデバイスから
直接検索します

00:03:06.053 --> 00:03:09.256 align:start position:29% line:-2
iOSでは
マイクやカメラを使った―

00:03:10.023 --> 00:03:14.695 align:start position:21% line:-2
オーディオやビデオコメンタリーの
提供が可能です

00:03:15.162 --> 00:03:20.367 align:start position:30% line:-2
コンテンツやサーバへの
アクセスも安全です

00:03:23.570 --> 00:03:26.440 align:start position:12% line:-2
例えば MobcrushやYouTubeで
ゲームをストリーミング

00:03:26.907 --> 00:03:29.309 align:start position:29% line:-1
WebExで画面をシェア

00:03:29.877 --> 00:03:32.379 align:start position:25% line:-2
TeamViewerを使って
カスタマーサポート

00:03:32.846 --> 00:03:36.016 align:start position:21% line:-2
描画Appを
Facebookでストリーミング

00:03:36.450 --> 00:03:39.253 align:start position:20% line:-1
どれもReplayKitで可能です

00:03:42.122 --> 00:03:44.958 align:start position:23% line:-1
元来 ライブブロードキャストは

00:03:45.158 --> 00:03:49.763 align:start position:29% line:-2
アプリケーションで
開始や停止をしていました

00:03:50.864 --> 00:03:54.535 align:start position:25% line:-2
ReplayKitのAPIと
直接 通信していたのです

00:03:54.801 --> 00:03:58.972 align:start position:11% line:-2
ReplayKit自体が
Broadcast Extensionを持ち

00:03:59.139 --> 00:04:03.477 align:start position:30% line:-2
アプリケーションから
映像と音声を受信して―

00:03:59.139 --> 00:04:03.477 align:start position:30% line:-2
アプリケーションから
映像と音声を受信して―

00:04:04.111 --> 00:04:07.748 align:start position:20% line:-2
Extensionがエンコードして
サーバに流していました

00:04:08.015 --> 00:04:11.018 align:start position:20% line:-1
それがApp内ブロードキャストです

00:04:13.954 --> 00:04:17.658 align:start position:23% line:-2
新しいReplayKit 2で
変わったのは―

00:04:17.925 --> 00:04:21.995 align:start position:27% line:-2
システム全体が
ブロードキャストされること

00:04:22.763 --> 00:04:24.364 align:start position:38% line:-1
ユーザはまず―

00:04:24.464 --> 00:04:28.502 align:start position:27% line:-2
コントロールセンターから
ブロードキャストを始めます

00:04:28.702 --> 00:04:31.572 align:start position:25% line:-1
開始や停止もここで実行します

00:04:33.307 --> 00:04:37.845 align:start position:30% line:-2
それがシステム全体での
ブロードキャストです

00:04:38.345 --> 00:04:43.016 align:start position:18% line:-2
音声や映像がExtension経由で
サーバにアップされます

00:04:43.417 --> 00:04:46.520 align:start position:30% line:-1
以上が大まかな違いです

00:04:48.322 --> 00:04:52.359 align:start position:23% line:-2
少しApp内ブロードキャストの
説明をします

00:04:53.393 --> 00:04:58.232 align:start position:25% line:-2
App内ブロードキャストでは
アプリケーションやゲームが

00:04:58.699 --> 00:05:01.101 align:start position:30% line:-2
キャプチャされる
コンテンツを提供します

00:04:58.699 --> 00:05:01.101 align:start position:30% line:-2
キャプチャされる
コンテンツを提供します

00:05:03.604 --> 00:05:08.976 align:start position:18% line:-2
開始や停止にはゲームが
ReplayKitのAPIを使います

00:05:10.043 --> 00:05:13.480 align:start position:27% line:-2
そしてブロードキャスト用の
コントローラとなり

00:05:13.580 --> 00:05:16.984 align:start position:34% line:-2
ユーザがサービスを
選択するのです

00:05:18.352 --> 00:05:19.753 align:start position:38% line:-1
それに沿って―

00:05:21.054 --> 00:05:25.392 align:start position:25% line:-2
ブロードキャスト
アプリケーションは機能します

00:05:25.859 --> 00:05:29.463 align:start position:20% line:-1
ReplayKitがゲームに代わり

00:05:29.796 --> 00:05:31.899 align:start position:34% line:-2
ユーザをサービスに
サインインさせ

00:05:31.999 --> 00:05:36.870 align:start position:25% line:-2
ブロードキャストコンテンツを
サーバにアップさせます

00:05:37.504 --> 00:05:40.974 align:start position:21% line:-2
それがReplayKitを使った
ブロードキャストでした

00:05:41.475 --> 00:05:46.547 align:start position:25% line:-2
Appでのブロードキャストの
開始や停止について―

00:05:46.647 --> 00:05:48.682 align:start position:29% line:-1
さらに情報が必要な場合は

00:05:48.782 --> 00:05:54.254 align:start position:5% line:-2
“Go Live with ReplayKit”の
セッションをご覧ください

00:05:55.823 --> 00:05:57.191 align:start position:36% line:-1
２年前のものです

00:05:59.092 --> 00:06:04.131 align:start position:20% line:-2
今日のセッションはiOSシステムの
ブロードキャストについて

00:05:59.092 --> 00:06:04.131 align:start position:20% line:-2
今日のセッションはiOSシステムの
ブロードキャストについて

00:06:04.431 --> 00:06:09.903 align:start position:25% line:-2
画面上のすべての映像と音声の
ブロードキャストです

00:06:10.470 --> 00:06:12.973 align:start position:27% line:-1
アプリケーション内ではなく

00:06:13.073 --> 00:06:17.344 align:start position:29% line:-2
例えばAppの休止中でも
開始と停止ができます

00:06:19.112 --> 00:06:22.950 align:start position:29% line:-2
コントロールセンターから
実行ができ

00:06:23.050 --> 00:06:28.722 align:start position:29% line:-2
ホーム画面からAppへの
移動時にも継続されます

00:06:29.189 --> 00:06:31.291 align:start position:25% line:-2
AppからAppへの移動時も
同じです

00:06:32.359 --> 00:06:35.796 align:start position:21% line:-1
どれもiOS 11から実装済みで

00:06:35.896 --> 00:06:39.099 align:start position:27% line:-2
これは去年リリースした
ReplayKit 2です

00:06:41.168 --> 00:06:43.403 align:start position:32% line:-1
このゲームの画面を―

00:06:43.770 --> 00:06:47.975 align:start position:29% line:-2
ブロードキャストしたいと
考えたとします

00:06:49.309 --> 00:06:54.515 align:start position:29% line:-2
コントロールセンターから
画面収録ボタンを押します

00:06:55.282 --> 00:07:00.487 align:start position:30% line:-2
すると収録のための
ピッカが立ち上がります

00:06:55.282 --> 00:07:00.487 align:start position:30% line:-2
すると収録のための
ピッカが立ち上がります

00:07:00.621 --> 00:07:04.958 align:start position:34% line:-2
そしてプロバイダを
選んでタップすると

00:07:05.058 --> 00:07:07.060 align:start position:30% line:-1
ストリームが始まります

00:07:08.762 --> 00:07:11.265 align:start position:36% line:-1
ゲームに戻ると―

00:07:12.165 --> 00:07:14.268 align:start position:32% line:-1
もうストリーム中です

00:07:14.568 --> 00:07:18.639 align:start position:25% line:-2
スクリーンからキャプチャした
メディアサンプルを受け取り

00:07:18.739 --> 00:07:21.441 align:start position:23% line:-1
ストリームをアップロードします

00:07:21.575 --> 00:07:27.948 align:start position:27% line:-2
ウェブブラウザ上の視聴者や
ストリーミング利用者が―

00:07:29.149 --> 00:07:32.853 align:start position:25% line:-2
世界中から
ブロードキャストを視聴します

00:07:36.290 --> 00:07:40.227 align:start position:30% line:-2
これがiOSシステムの
ブロードキャストです

00:07:40.327 --> 00:07:44.665 align:start position:30% line:-2
このブロードキャストで
興味深いことは

00:07:44.765 --> 00:07:49.703 align:start position:29% line:-2
App間の移動に関係なく
継続することです

00:07:50.037 --> 00:07:53.106 align:start position:23% line:-1
私のホーム画面から始めてみます

00:07:53.207 --> 00:07:56.376 align:start position:21% line:-1
この画面をブロードキャストします

00:07:57.644 --> 00:08:03.283 align:start position:27% line:-2
別のAppを開いてみても
ブロードキャストは続きます

00:07:57.644 --> 00:08:03.283 align:start position:27% line:-2
別のAppを開いてみても
ブロードキャストは続きます

00:08:03.650 --> 00:08:05.619 align:start position:34% line:-1
これが重要なのです

00:08:05.719 --> 00:08:08.722 align:start position:32% line:-2
ブロードキャストが
システム全体で行われ

00:08:08.822 --> 00:08:12.492 align:start position:23% line:-2
終了の際は
コントロールセンターに戻ります

00:08:13.193 --> 00:08:17.731 align:start position:30% line:-2
ステータスバー経由でも
コントロール可能です

00:08:19.466 --> 00:08:23.470 align:start position:30% line:-2
ランドスケープモードで
実行した場合も

00:08:23.570 --> 00:08:26.206 align:start position:30% line:-1
サポートは変わりません

00:08:28.075 --> 00:08:33.447 align:start position:30% line:-2
ポートレートモードと
往復することもできます

00:08:38.184 --> 00:08:42.289 align:start position:36% line:-2
以上が昨年までに
実装した機能です

00:08:42.556 --> 00:08:47.094 align:start position:27% line:-2
その後のフィードバックと
適用はすばらしいものでした

00:08:47.194 --> 00:08:52.466 align:start position:23% line:-2
今回のブロードキャストAPIは
様々なカテゴリで利用できます

00:08:53.200 --> 00:08:56.937 align:start position:25% line:-2
コミュニケーションや
ストリーミングやヘルプデスク

00:08:57.037 --> 00:08:59.173 align:start position:29% line:-1
教育やソーシャルなどです

00:09:01.508 --> 00:09:04.778 align:start position:27% line:-1
多かったフィードバックは―

00:09:05.312 --> 00:09:09.550 align:start position:25% line:-2
ブロードキャストのUIが
見つけにくいということでした

00:09:10.651 --> 00:09:15.155 align:start position:25% line:-2
我々が望んだのは簡単に
編集できるようにすることです

00:09:15.989 --> 00:09:19.893 align:start position:30% line:-2
目標はiOSシステムの
ブロードキャストを

00:09:19.993 --> 00:09:21.828 align:start position:29% line:-1
Appへ組み込むことです

00:09:22.029 --> 00:09:25.566 align:start position:2% line:-2
そこでSystem Broadcast Pickerを
紹介します

00:09:28.869 --> 00:09:30.971 align:start position:39% line:-1
図に戻ります

00:09:33.006 --> 00:09:34.474 align:start position:38% line:-1
追加したのは―

00:09:35.175 --> 00:09:39.913 align:start position:30% line:-2
ある意味 ２つの方式の
ハイブリッドです

00:09:42.516 --> 00:09:46.854 align:start position:29% line:-2
アプリケーションの能力を
向上させました

00:09:46.954 --> 00:09:50.057 align:start position:20% line:-2
iOSシステムのブロードキャストの
起点にしたのです

00:09:50.691 --> 00:09:54.728 align:start position:30% line:-2
コントロールセンターと
同じことができます

00:09:55.596 --> 00:10:01.301 align:start position:27% line:-2
ブロードキャストを開始し
App間の移動が可能であり

00:09:55.596 --> 00:10:01.301 align:start position:27% line:-2
ブロードキャストを開始し
App間の移動が可能であり

00:10:02.035 --> 00:10:04.738 align:start position:27% line:-1
ホーム画面へも移動できます

00:10:05.072 --> 00:10:08.475 align:start position:29% line:-2
アプリケーションから
ブロードキャストを開始し

00:10:08.775 --> 00:10:13.180 align:start position:29% line:-2
コントロールセンターで
停止することもできますし

00:10:13.280 --> 00:10:19.052 align:start position:21% line:-2
逆にコントロールセンターで開始し
アプリケーションで停止も可能です

00:10:22.356 --> 00:10:25.192 align:start position:14% line:-1
Broadcast Pickerによって

00:10:25.492 --> 00:10:31.498 align:start position:25% line:-2
アプリケーションから離れずに
ブロードキャストが可能です

00:10:31.598 --> 00:10:35.636 align:start position:29% line:-2
使うのは我々が
提供した単純なボタンのみ

00:10:35.736 --> 00:10:39.606 align:start position:32% line:-2
これがiOS 12で
可能になる新機能です

00:10:41.575 --> 00:10:43.544 align:start position:38% line:-1
例を見ましょう

00:10:44.545 --> 00:10:47.247 align:start position:20% line:-1
サンプルAppの“Fox 2”です

00:10:47.381 --> 00:10:50.117 align:start position:25% line:-1
上部のボタンが新しいものです

00:10:51.852 --> 00:10:54.721 align:start position:11% line:-2
このBroadcast Pickerボタンを
押すと

00:10:54.822 --> 00:10:59.593 align:start position:30% line:-2
コントロールセンターと
同じUIが―

00:10:59.693 --> 00:11:01.428 align:start position:39% line:-1
表示されます

00:10:59.693 --> 00:11:01.428 align:start position:39% line:-1
表示されます

00:11:02.629 --> 00:11:07.167 align:start position:30% line:-2
そこでプロバイダを選び
ブロードキャストを開始

00:11:08.502 --> 00:11:12.506 align:start position:27% line:-2
その時点でAppに戻っても
ブロードキャストは続き

00:11:13.073 --> 00:11:17.911 align:start position:30% line:-2
世界の人がストリームを
視聴することができます

00:11:20.647 --> 00:11:22.616 align:start position:34% line:-1
コードを説明します

00:11:23.750 --> 00:11:28.989 align:start position:2% line:-2
RPSystemBroadcastPickerView
という新しいクラスがあります

00:11:29.089 --> 00:11:31.825 align:start position:29% line:-1
UIビューのサブクラスで

00:11:31.925 --> 00:11:36.263 align:start position:7% line:-1
Interface Builderで追加できます

00:11:36.363 --> 00:11:39.900 align:start position:23% line:-1
カスタムクラス付きのビューです

00:11:40.934 --> 00:11:42.970 align:start position:32% line:-1
プログラムも可能です

00:11:43.103 --> 00:11:48.775 align:start position:0% line:-2
RPSystemBroadcastPickerViewの
インスタンスで実行し

00:11:48.876 --> 00:11:51.245 align:start position:25% line:-1
ビューの階層に加えるだけです

00:11:53.480 --> 00:11:58.385 align:start position:11% line:-2
これがBroadcast Pickerを使う
より簡単な方法です

00:11:59.753 --> 00:12:05.125 align:start position:23% line:-2
皆さんの多くはブロードキャスト
サービスのデベロッパですね

00:11:59.753 --> 00:12:05.125 align:start position:23% line:-2
皆さんの多くはブロードキャスト
サービスのデベロッパですね

00:12:05.926 --> 00:12:10.664 align:start position:25% line:-2
これでユーザはAppから直接
ブロードキャストでき

00:12:10.764 --> 00:12:15.335 align:start position:29% line:-2
チュートリアルを
用意する必要もありません

00:12:15.435 --> 00:12:17.905 align:start position:27% line:-1
画面収録を可能にする方法や

00:12:18.005 --> 00:12:21.108 align:start position:27% line:-1
サービスを探す方法などです

00:12:21.875 --> 00:12:26.213 align:start position:12% line:-2
しかし皆さんのサービスのみの
Broadcast Extensionを―

00:12:26.313 --> 00:12:29.783 align:start position:23% line:-1
表示したいと思うかもしれません

00:12:31.151 --> 00:12:36.957 align:start position:23% line:-2
ReplayKitのAPIでは
それが可能です

00:12:38.192 --> 00:12:42.429 align:start position:32% line:-2
それはビューの
プロパティの問題です

00:12:43.397 --> 00:12:48.769 align:start position:12% line:-2
Broadcast Extensionから
バンドルIDを取得して

00:12:48.902 --> 00:12:53.707 align:start position:12% line:-2
preferredExtensionという
ビューに割り当てます

00:12:56.276 --> 00:12:59.613 align:start position:27% line:-1
これがコードのサンプルです

00:13:00.848 --> 00:13:04.751 align:start position:30% line:-2
ビューの修正後に
プロパティを設定します

00:13:04.852 --> 00:13:08.188 align:start position:30% line:-1
先程との唯一の違いは―

00:13:08.288 --> 00:13:13.560 align:start position:9% line:-2
com.your-app.broadcast.
extensionへの変更です

00:13:13.660 --> 00:13:15.696 align:start position:18% line:-1
ExtensionのバンドルIDです

00:13:17.998 --> 00:13:19.333 align:start position:38% line:-1
図を見ましょう

00:13:20.267 --> 00:13:26.206 align:start position:23% line:-2
Appに組み込む
ピッカビューについて説明します

00:13:26.406 --> 00:13:32.012 align:start position:20% line:-2
Broadcast Pickerを
呼び出すショートカットで

00:13:32.112 --> 00:13:35.883 align:start position:30% line:-2
コントロールセンターと
同じUIです

00:13:36.750 --> 00:13:40.053 align:start position:34% line:-2
このピッカ自体は
システムのもので―

00:13:40.154 --> 00:13:45.292 align:start position:21% line:-2
アプリケーションは
ブロードキャストの状態を管理せず

00:13:45.425 --> 00:13:51.031 align:start position:30% line:-2
プログラムで
開始も停止もできません

00:13:54.635 --> 00:13:59.306 align:start position:20% line:-2
iOSシステムのブロードキャストを
追加するためにすべきことです

00:13:59.473 --> 00:14:02.376 align:start position:34% line:-2
新しいAPIは
とてもシンプルです

00:13:59.473 --> 00:14:02.376 align:start position:34% line:-2
新しいAPIは
とてもシンプルです

00:14:02.476 --> 00:14:06.446 align:start position:34% line:-2
このセッション中に
使ってみてください

00:14:08.081 --> 00:14:12.886 align:start position:11% line:-2
次にBroadcast Extensionの
開発プロセスを説明します

00:14:13.420 --> 00:14:17.391 align:start position:14% line:-2
Broadcast Extensionの
実装方法です

00:14:17.491 --> 00:14:23.864 align:start position:20% line:-2
Extensionとピッカの両方を
提供している場合の説明です

00:14:25.933 --> 00:14:27.367 align:start position:34% line:-1
再び図を表示します

00:14:27.467 --> 00:14:30.804 align:start position:14% line:-2
Broadcast Extensionに
移りますが

00:14:30.904 --> 00:14:34.741 align:start position:29% line:-2
その道のりを説明したいと
思います

00:14:39.746 --> 00:14:45.118 align:start position:14% line:-2
ブロードキャストアプリケーション
およびExtensionから始めましょう

00:14:45.219 --> 00:14:51.258 align:start position:25% line:-2
システムブロードキャスト中に
何が必要かを確認します

00:14:53.193 --> 00:14:58.432 align:start position:16% line:-2
まずアプリケーションと共に
Extensionをインストールします

00:14:58.632 --> 00:15:03.270 align:start position:9% line:-2
Facebookなら そのExtensionも
一緒にインストールします

00:14:58.632 --> 00:15:03.270 align:start position:9% line:-2
Facebookなら そのExtensionも
一緒にインストールします

00:15:04.204 --> 00:15:09.510 align:start position:14% line:-2
Broadcast Extensionと
アプリケーションは

00:15:09.910 --> 00:15:13.447 align:start position:29% line:-2
別のバイナリで
独自のプロセスで動きます

00:15:13.814 --> 00:15:19.052 align:start position:30% line:-2
プロセスはユーザが
直接呼び出すことになり

00:15:19.153 --> 00:15:21.088 align:start position:38% line:-1
独立しています

00:15:21.989 --> 00:15:27.895 align:start position:29% line:-2
通常はアプリケーションで
サインインさせますが

00:15:28.662 --> 00:15:34.034 align:start position:12% line:-2
Broadcast Picker APIを
採用するAppの場合は―

00:15:34.134 --> 00:15:36.937 align:start position:27% line:-2
例えばFacebookでの
ブロードキャストの前に

00:15:37.037 --> 00:15:41.508 align:start position:27% line:-2
メッセージを
タイプさせることができます

00:15:44.444 --> 00:15:46.380 align:start position:12% line:-1
Broadcast Extensionでは

00:15:47.314 --> 00:15:53.687 align:start position:27% line:-2
ブロードキャストに必要な
機能はすべてそろっています

00:15:55.656 --> 00:16:00.694 align:start position:18% line:-2
Extensionが扱うのは
ReplayKitが編集したサンプル

00:15:55.656 --> 00:16:00.694 align:start position:18% line:-2
Extensionが扱うのは
ReplayKitが編集したサンプル

00:16:00.861 --> 00:16:05.032 align:start position:30% line:-2
アプリケーションからの
音声サンプル

00:16:05.132 --> 00:16:08.569 align:start position:29% line:-2
画面の映像や
マイクからの音声などです

00:16:08.669 --> 00:16:14.408 align:start position:23% line:-2
それらをエンコードして
各サービスへアップロードします

00:16:17.344 --> 00:16:21.048 align:start position:30% line:-2
新たなブロードキャスト
サービスの開発のために

00:16:21.148 --> 00:16:23.851 align:start position:23% line:-2
我々はXcodeテンプレートを
提供します

00:16:24.885 --> 00:16:30.424 align:start position:21% line:-2
それを使ってExtensionを
追加すれば準備は完了です

00:16:30.891 --> 00:16:33.594 align:start position:30% line:-1
コードを見てみましょう

00:16:35.562 --> 00:16:39.833 align:start position:21% line:-2
Xcodeテンプレートで
Extensionを作成する場合

00:16:39.933 --> 00:16:42.269 align:start position:11% line:-1
SampleHandlerクラスを取得します

00:16:43.770 --> 00:16:48.876 align:start position:25% line:-2
ここでブロードキャスト中の
イベント用コードを追加します

00:16:50.043 --> 00:16:54.848 align:start position:29% line:-2
また音声と映像を処理する
この関数を使います

00:16:58.218 --> 00:17:01.922 align:start position:29% line:-2
これがブロードキャストの
ライフサイクルです

00:16:58.218 --> 00:17:01.922 align:start position:29% line:-2
これがブロードキャストの
ライフサイクルです

00:17:03.323 --> 00:17:06.926 align:start position:32% line:-2
各ステータスは
セットアップ 初期化

00:17:07.027 --> 00:17:10.497 align:start position:38% line:-2
開始 処理中
そして停止です

00:17:13.000 --> 00:17:17.104 align:start position:32% line:-2
左にある緑色の四角の
状態にある時は―

00:17:17.538 --> 00:17:20.574 align:start position:32% line:-2
Extensionは
実行されていません

00:17:20.674 --> 00:17:26.046 align:start position:25% line:-2
この時点でアプリケーションは
ログイン資格情報を得て

00:17:26.313 --> 00:17:31.351 align:start position:21% line:-2
共有キーチェーンを使い
Extensionにシェアします

00:17:31.852 --> 00:17:37.124 align:start position:18% line:-2
先程言ったように Facebookの
投稿用にタイプさせ

00:17:38.725 --> 00:17:42.129 align:start position:27% line:-2
それをExtensionに
渡すことができます

00:17:43.864 --> 00:17:46.600 align:start position:34% line:-2
ブロードキャストを
開始する時は―

00:17:46.700 --> 00:17:51.338 align:start position:12% line:-2
コントロールセンターかAppから
Broadcast Pickerを使います

00:17:52.506 --> 00:17:55.976 align:start position:18% line:-2
その後 ReplayKitが
Extensionプロセスを開始して

00:17:56.076 --> 00:17:59.112 align:start position:20% line:-2
SampleHandlerクラスの
インスタンスを作ります

00:17:59.880 --> 00:18:02.216 align:start position:34% line:-1
その時点においては

00:17:59.880 --> 00:18:02.216 align:start position:34% line:-1
その時点においては

00:18:02.316 --> 00:18:06.153 align:start position:11% line:-2
SampleHandlerのイニシャライザを
オーバーライドでき

00:18:06.687 --> 00:18:12.025 align:start position:29% line:-2
メディアサンプルには
直結しない処理が可能です

00:18:12.693 --> 00:18:15.028 align:start position:38% line:-1
だから例えば―

00:18:15.629 --> 00:18:21.268 align:start position:25% line:-2
ログイン資格情報を取得し
サーバとの接続を確立できます

00:18:23.871 --> 00:18:28.609 align:start position:9% line:-2
プロセスが始まり SampleHandlerの
インスタンスがありますが

00:18:30.777 --> 00:18:32.713 align:start position:30% line:-1
Extensionは―

00:18:32.813 --> 00:18:37.351 align:start position:21% line:-2
ReplayKitが音声や映像を
提供し始めることを通知されます

00:18:37.451 --> 00:18:39.953 align:start position:18% line:-2
使用する関数は
broadcastStartedです

00:18:40.754 --> 00:18:45.893 align:start position:29% line:-2
ここでメディアエンジンを
作成することができます

00:18:45.993 --> 00:18:51.198 align:start position:30% line:-2
あるいは サンプルを
リアルタイムで受信し―

00:18:51.298 --> 00:18:53.767 align:start position:30% line:-2
エンコードと
アップロードする準備も

00:18:56.370 --> 00:18:58.605 align:start position:23% line:-1
ブロードキャストが始まったら―

00:19:00.207 --> 00:19:03.710 align:start position:27% line:-2
ReplayKitが音声と
映像サンプルを提供し

00:19:04.044 --> 00:19:08.282 align:start position:21% line:-2
Extensionがエンコードと
皆さんが使用する―

00:19:08.382 --> 00:19:11.118 align:start position:32% line:-2
それぞれのサービスに
アップロードします

00:19:12.886 --> 00:19:16.156 align:start position:25% line:-2
ReplayKitが提供する
サンプルは３種類です

00:19:18.258 --> 00:19:20.828 align:start position:27% line:-1
画面からキャプチャした映像

00:19:21.228 --> 00:19:23.964 align:start position:30% line:-1
アプリケーションの音声

00:19:24.064 --> 00:19:28.068 align:start position:30% line:-2
そしてマイクから
キャプチャした音声です

00:19:28.302 --> 00:19:32.873 align:start position:23% line:-2
それらをExtensionが
エンコードしアップロードします

00:19:35.509 --> 00:19:40.047 align:start position:18% line:-2
Extensionに送られるすべてを
処理している関数が―

00:19:40.581 --> 00:19:42.749 align:start position:12% line:-1
processSampleBufferです

00:19:42.983 --> 00:19:49.022 align:start position:12% line:-2
これは CMSampleBufferという
単一関数を受け取ります

00:19:49.723 --> 00:19:53.460 align:start position:27% line:-2
必要なのはメディアの
エンコードとアップロードで

00:19:53.594 --> 00:19:58.932 align:start position:14% line:-2
ここでは Video Toolboxでの
エンコード方法を示します

00:19:59.733 --> 00:20:02.903 align:start position:12% line:-1
Video Toolboxをお薦めするのは

00:19:59.733 --> 00:20:02.903 align:start position:12% line:-1
Video Toolboxをお薦めするのは

00:20:03.003 --> 00:20:07.074 align:start position:29% line:-2
ハードウェアでの高速化が
可能だからです

00:20:07.875 --> 00:20:10.711 align:start position:27% line:-1
これはとても重要なことです

00:20:10.811 --> 00:20:15.649 align:start position:30% line:-2
Extensionは
メモリが小さいためです

00:20:19.186 --> 00:20:24.992 align:start position:25% line:-2
映像をエンコードし
サーバにストリーミングすると

00:20:25.659 --> 00:20:30.264 align:start position:27% line:-2
世界中の人が
映像をライブで視聴できます

00:20:31.532 --> 00:20:33.801 align:start position:25% line:-1
ただし検索方法が分かりません

00:20:34.968 --> 00:20:39.406 align:start position:25% line:-2
例えば“アングリーバード”の
ファンがいます

00:20:39.573 --> 00:20:42.743 align:start position:32% line:-2
ウェブサイトか
App内のどこかで―

00:20:42.843 --> 00:20:46.447 align:start position:27% line:-2
ゲームのブロードキャストを
見つけてもらいます

00:20:47.981 --> 00:20:50.851 align:start position:30% line:-1
これを実現するためには

00:20:50.984 --> 00:20:56.623 align:start position:27% line:-2
ストリームにゲームの情報を
追加する必要があります

00:20:58.258 --> 00:21:01.695 align:start position:25% line:-2
ReplayKitが提供する
API関数が―

00:20:58.258 --> 00:21:01.695 align:start position:25% line:-2
ReplayKitが提供する
API関数が―

00:21:01.795 --> 00:21:04.698 align:start position:11% line:-2
broadcastAnnotatedWith
ApplicationInfoです

00:21:04.798 --> 00:21:10.504 align:start position:30% line:-2
誰かがゲームを始めると
その情報が送信されます

00:21:10.938 --> 00:21:14.741 align:start position:14% line:-2
ReplayKitがExtensionに
開始を通知するのです

00:21:14.842 --> 00:21:18.378 align:start position:27% line:-2
そして詳細を
ディクショナリに提供します

00:21:21.014 --> 00:21:25.752 align:start position:25% line:-2
例としてReplayKitが
定義したキーがあります

00:21:25.853 --> 00:21:29.690 align:start position:9% line:-2
RPApplicationInfoBundle
IdentifierKeyです

00:21:29.790 --> 00:21:34.828 align:start position:29% line:-2
そしてバンドルIDを
メタデータとして渡します

00:21:40.334 --> 00:21:43.437 align:start position:27% line:-2
ユーザがブロードキャストを
停止する時は―

00:21:44.271 --> 00:21:47.708 align:start position:11% line:-2
ReplayKitは
broadcastFinishedを使います

00:21:47.808 --> 00:21:50.644 align:start position:27% line:-2
セッションが終了したことを
通知して

00:21:50.744 --> 00:21:54.548 align:start position:23% line:-2
SampleHandlerへの
サンプルの提供も終了します

00:21:55.983 --> 00:22:00.854 align:start position:23% line:-2
この関数で動画のアップロードを
終了することもあるでしょう

00:21:55.983 --> 00:22:00.854 align:start position:23% line:-2
この関数で動画のアップロードを
終了することもあるでしょう

00:22:00.954 --> 00:22:06.293 align:start position:29% line:-2
メディアエンジンなど
リリースしたいものもです

00:22:10.564 --> 00:22:15.435 align:start position:29% line:-2
以上がブロードキャストの
ライフサイクルです

00:22:15.669 --> 00:22:18.972 align:start position:27% line:-1
あと１つ重要な点があります

00:22:20.407 --> 00:22:21.475 align:start position:36% line:-1
前述しましたが―

00:22:23.377 --> 00:22:28.615 align:start position:23% line:-2
セットアップはすべて
アプリケーション内で行われます

00:22:29.383 --> 00:22:33.520 align:start position:27% line:-2
Appを用いて
ログイン資格情報を取得して

00:22:33.720 --> 00:22:36.857 align:start position:27% line:-2
ブロードキャストのための
名前を得ることができました

00:22:38.125 --> 00:22:42.262 align:start position:25% line:-1
その状態が左側の緑の四角です

00:22:43.030 --> 00:22:48.001 align:start position:34% line:-2
ブロードキャストが
開始されると

00:22:48.101 --> 00:22:51.338 align:start position:27% line:-2
Extensionの不備が
あるかもしれません

00:22:51.438 --> 00:22:56.810 align:start position:29% line:-2
例えばログイン処理で
エラーを起こしたりします

00:22:56.910 --> 00:23:00.414 align:start position:23% line:-1
その場合の対処法を教えましょう

00:22:56.910 --> 00:23:00.414 align:start position:23% line:-1
その場合の対処法を教えましょう

00:23:02.382 --> 00:23:07.054 align:start position:21% line:-2
ReplayKitがAPI経由で
ユーザに通知し

00:23:07.721 --> 00:23:13.093 align:start position:25% line:-2
問題解決に必要な
特定のアクションを提供します

00:23:14.862 --> 00:23:19.666 align:start position:27% line:-2
そしてExtensionが
API関数を呼び出して

00:23:19.766 --> 00:23:25.639 align:start position:16% line:-2
ReplayKitがセッションを終了し
警告します

00:23:27.107 --> 00:23:31.145 align:start position:20% line:-2
例えば エラーの理由が
Extensionから提供されます

00:23:31.245 --> 00:23:37.050 align:start position:25% line:-2
この例ではMobcrushの
ログインエラーの表示です

00:23:39.686 --> 00:23:43.524 align:start position:25% line:-2
ユーザがアプリケーションへの
移動を選択すると―

00:23:44.057 --> 00:23:46.894 align:start position:21% line:-1
ReplayKitがAppを起動

00:23:46.994 --> 00:23:52.866 align:start position:21% line:-2
あとは問題を処理して
ログインのためのUIを表示します

00:23:52.966 --> 00:23:55.602 align:start position:29% line:-2
これでブロードキャストが
実行されます

00:23:57.571 --> 00:24:01.408 align:start position:20% line:-2
broadcastStartedを
使ったコードの例です

00:23:57.571 --> 00:24:01.408 align:start position:20% line:-2
broadcastStartedを
使ったコードの例です

00:24:01.508 --> 00:24:06.079 align:start position:30% line:-2
ログインしていない時の
対処方法ですが

00:24:06.346 --> 00:24:10.117 align:start position:7% line:-2
finishBroadcastWithError
という関数があります

00:24:10.984 --> 00:24:13.520 align:start position:34% line:-1
ここで必要なのは―

00:24:14.154 --> 00:24:18.158 align:start position:27% line:-2
ユーザ情報辞書に
エラーの理由を渡すことです

00:24:18.258 --> 00:24:23.564 align:start position:16% line:-2
ReplayKitは この文字列を使い
セッション停止後に表示させます

00:24:29.603 --> 00:24:30.571 align:start position:41% line:-1
それでは…

00:24:32.873 --> 00:24:35.843 align:start position:23% line:-2
以上がBroadcast
Extensionについてです

00:24:36.643 --> 00:24:40.114 align:start position:34% line:-2
ご覧のように
プロセスは簡潔です

00:24:41.548 --> 00:24:44.117 align:start position:34% line:-2
アプリケーションが
セットアップして―

00:24:44.585 --> 00:24:47.254 align:start position:20% line:-1
Extensionに情報を伝えます

00:24:50.724 --> 00:24:56.363 align:start position:25% line:-2
セッション開始後は
メディアサンプルをエンコード

00:24:57.097 --> 00:25:00.167 align:start position:27% line:-2
画面上のアプリケーションの
情報を使用して

00:24:57.097 --> 00:25:00.167 align:start position:27% line:-2
画面上のアプリケーションの
情報を使用して

00:25:00.267 --> 00:25:03.504 align:start position:34% line:-2
ブロードキャストを
検索してもらえます

00:25:05.305 --> 00:25:08.809 align:start position:29% line:-1
もう１点だけお話しします

00:25:10.477 --> 00:25:13.781 align:start position:34% line:-2
アプリケーションの
コンテンツ保護です

00:25:15.115 --> 00:25:19.686 align:start position:27% line:-2
ブロードキャストなどで
キャプチャしたくないものを

00:25:20.287 --> 00:25:23.490 align:start position:25% line:-1
含んでしまう可能性があります

00:25:24.291 --> 00:25:28.562 align:start position:34% line:-2
映像と音声の両方に
当てはまることです

00:25:30.030 --> 00:25:34.668 align:start position:27% line:-2
キャプチャされていることを
通知するAPIがあります

00:25:34.768 --> 00:25:38.138 align:start position:25% line:-2
UIKitフレームワークから
提供されるもので

00:25:38.739 --> 00:25:43.143 align:start position:21% line:-2
Capturedと呼ばれる
UIScreenのプロパティです

00:25:43.911 --> 00:25:49.583 align:start position:27% line:-2
この値に変化があった時には
通知を受け取れます

00:25:49.683 --> 00:25:55.923 align:start position:27% line:-2
収録が始まると音声を止めて
映像を非表示にします

00:25:57.090 --> 00:26:02.796 align:start position:16% line:-2
また特殊な例として AirPlayでの
画面ミラーリングがあります

00:25:57.090 --> 00:26:02.796 align:start position:16% line:-2
また特殊な例として AirPlayでの
画面ミラーリングがあります

00:26:03.831 --> 00:26:10.771 align:start position:29% line:-2
通知ハンドラの例を使用し
説明したいと思います

00:26:11.472 --> 00:26:15.776 align:start position:30% line:-2
基本的にミラーリングは
画面が複数あり

00:26:15.876 --> 00:26:20.080 align:start position:20% line:-2
この“screens”という配列に
複数の要素が存在

00:26:20.180 --> 00:26:26.086 align:start position:16% line:-2
ミラーリング中にisCapturedが
“yes”を返しても

00:26:26.787 --> 00:26:30.691 align:start position:29% line:-2
再生続行のため
さらなるチェックをします

00:26:34.294 --> 00:26:38.432 align:start position:25% line:-2
以上がライブスクリーン
ブロードキャストの仕組みです

00:26:38.532 --> 00:26:39.600 align:start position:39% line:-1
要約すると―

00:26:40.667 --> 00:26:44.505 align:start position:25% line:-2
ReplayKitが提供する
高レベルなAPIでは

00:26:44.605 --> 00:26:49.009 align:start position:20% line:-2
単体のAppまたは画面上のすべてを
ブロードキャストできます

00:26:50.110 --> 00:26:53.847 align:start position:30% line:-2
iOS 12では
アプリケーションから―

00:26:53.947 --> 00:26:58.819 align:start position:29% line:-2
直接実行するための
APIや手段を提供します

00:27:00.020 --> 00:27:04.057 align:start position:12% line:-2
実際にプログラムが必要なのは
Broadcast Extensionです

00:27:04.157 --> 00:27:07.294 align:start position:29% line:-2
それで映像のエンコードも
実行します

00:27:09.162 --> 00:27:13.600 align:start position:27% line:-2
Appのコンテンツの保護の
話もしました

00:27:17.671 --> 00:27:20.807 align:start position:23% line:-2
より詳細な情報は
デベロッパWebサイトへどうぞ

00:27:21.108 --> 00:27:27.214 align:start position:20% line:-2
本日15時にラボで
ReplayKitの実習があります

00:27:27.314 --> 00:27:30.284 align:start position:38% line:-2
質問がある方は
お越しください

00:27:30.384 --> 00:27:31.818 align:start position:36% line:-1
お待ちしています

00:27:33.887 --> 00:27:36.857 align:start position:30% line:-2
本日は
ありがとうございました

00:27:36.957 --> 00:27:42.463 align:start position:23% line:-2
ブロードキャストの新しい方法を
提供できてうれしいです

00:27:42.563 --> 00:27:46.400 align:start position:29% line:-1
採用いただければ光栄です

00:27:46.600 --> 00:27:52.272 align:start position:23% line:-2
Xcodeテンプレートを使って
ぜひ作成してみてください

00:27:52.372 --> 00:27:57.945 align:start position:20% line:-2
Broadcast Pickerの
Appへの追加もお願いします

00:27:58.312 --> 00:28:03.550 align:start position:23% line:-2
iOSからのブロードキャストを
実現してください

00:27:58.312 --> 00:28:03.550 align:start position:23% line:-2
iOSからのブロードキャストを
実現してください

00:28:03.784 --> 00:28:06.253 align:start position:43% line:-1
(拍手)
