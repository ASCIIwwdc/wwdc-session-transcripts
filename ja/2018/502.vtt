WEBVTT

00:00:07.140 --> 00:00:16.350 align:start position:43% line:-1
(音楽)

00:00:20.487 --> 00:00:23.524 align:start position:27% line:-1
どうも　おはようございます

00:00:23.857 --> 00:00:27.194 align:start position:43% line:-1
(拍手)

00:00:27.427 --> 00:00:30.831 align:start position:14% line:-2
HTTP Live Streamingの
セッションです

00:00:31.398 --> 00:00:32.933 align:start position:25% line:-1
私はエミール･アンドリエスク

00:00:33.400 --> 00:00:37.538 align:start position:23% line:-2
HLSのパフォーマンスの測定と
最適化について話します

00:00:38.472 --> 00:00:40.707 align:start position:30% line:-1
まず なぜそれが大事で

00:00:40.807 --> 00:00:44.878 align:start position:27% line:-2
アプリケーションに
不可欠なのかを考えましょう

00:00:47.247 --> 00:00:51.351 align:start position:30% line:-2
土曜の夜 ソファーで
くつろいでいるとします

00:00:51.852 --> 00:00:55.522 align:start position:36% line:-2
レビューを読んで
見たい動画を選び

00:00:55.789 --> 00:00:59.459 align:start position:32% line:-2
ポップコーンを用意し
再生ボタンをタップ

00:00:59.560 --> 00:01:01.728 align:start position:34% line:-1
ところが これです

00:00:59.560 --> 00:01:01.728 align:start position:34% line:-1
ところが これです

00:01:03.263 --> 00:01:06.733 align:start position:30% line:-1
謎の映像が延々と続いて

00:01:06.834 --> 00:01:09.336 align:start position:36% line:-2
“これは何だ”と
頭を抱えます

00:01:10.470 --> 00:01:13.473 align:start position:38% line:-2
ご存じですね
再生エラーです

00:01:16.310 --> 00:01:20.414 align:start position:27% line:-2
顧客がHLSに期待するのは
何でしょう

00:01:20.981 --> 00:01:25.452 align:start position:32% line:-2
それは高解像度画像や
ハイファイ音声

00:01:25.719 --> 00:01:28.889 align:start position:29% line:-1
機器のスムーズな動作です

00:01:29.389 --> 00:01:31.792 align:start position:34% line:-2
ストリーミングの
アプリケーションは

00:01:31.892 --> 00:01:33.961 align:start position:34% line:-2
常にネットワークに
左右されます

00:01:34.061 --> 00:01:35.929 align:start position:29% line:-1
いかに問題を解決すべきか

00:01:36.630 --> 00:01:39.766 align:start position:34% line:-2
HLSはそのために
設計されました

00:01:39.867 --> 00:01:42.336 align:start position:34% line:-2
予測不能な
ネットワーク環境で

00:01:42.436 --> 00:01:47.007 align:start position:29% line:-2
ベストなストリーミングを
提供します

00:01:47.107 --> 00:01:49.743 align:start position:25% line:-1
だが それだけではありません

00:01:50.077 --> 00:01:54.348 align:start position:27% line:-2
HLSはダイナミックな
エコシステムに発展しました

00:01:54.481 --> 00:01:57.985 align:start position:25% line:-2
iframe再生などの新たな
オーサリング機能をサポート

00:01:58.085 --> 00:02:00.921 align:start position:25% line:-2
新しいメディアフォーマットや
コーデックもです

00:01:58.085 --> 00:02:00.921 align:start position:25% line:-2
新しいメディアフォーマットや
コーデックもです

00:02:01.855 --> 00:02:04.191 align:start position:36% line:-1
さらに絶え間なく

00:02:04.291 --> 00:02:09.196 align:start position:25% line:-2
iOSやtvOS
macOSのAPIなどを追加

00:02:09.295 --> 00:02:11.899 align:start position:38% line:-1
再生を調整して

00:02:11.999 --> 00:02:15.702 align:start position:25% line:-2
豊かなユーザー
エクスペリエンスを提供します

00:02:16.770 --> 00:02:19.339 align:start position:25% line:-2
配信パターンや
トランスポート･プロトコルも

00:02:19.439 --> 00:02:20.841 align:start position:38% line:-1
進化しています

00:02:20.941 --> 00:02:24.745 align:start position:29% line:-2
サーバのパフォーマンスも
重要です

00:02:24.845 --> 00:02:27.414 align:start position:36% line:-2
モバイル機器か
自宅の機器かなど

00:02:27.514 --> 00:02:30.817 align:start position:30% line:-2
コンテンツの動作環境も
関係します

00:02:34.154 --> 00:02:37.057 align:start position:27% line:-1
いろいろな選択肢がある中で

00:02:37.157 --> 00:02:41.428 align:start position:25% line:-2
いかに最高のユーザー
エクスペリエンスを提供するか

00:02:42.095 --> 00:02:46.166 align:start position:25% line:-2
第一歩はユーザー
エクスペリエンスの数値化です

00:02:46.266 --> 00:02:51.238 align:start position:25% line:-2
コンテンツやアプリケーション
配信に加える変更に関係します

00:02:52.072 --> 00:02:55.676 align:start position:29% line:-1
計測が欠かせない部分です

00:02:55.776 --> 00:02:59.213 align:start position:27% line:-2
最適な設定を推測するのでは
ありません

00:03:00.147 --> 00:03:01.615 align:start position:34% line:-1
このセッションでは

00:03:02.082 --> 00:03:07.254 align:start position:29% line:-2
まずストリーミングの質を
議論する共通言語を定め

00:03:07.454 --> 00:03:12.926 align:start position:32% line:-2
次にパフォーマンスの
客観的な計測法を議論

00:03:13.660 --> 00:03:19.166 align:start position:27% line:-2
続いてストリーミングの質を
損なう問題の発見と解決に

00:03:19.266 --> 00:03:21.134 align:start position:39% line:-1
手を貸します

00:03:22.336 --> 00:03:25.772 align:start position:25% line:-2
最後はマスタープレイリストの
最適化です

00:03:25.873 --> 00:03:30.677 align:start position:27% line:-2
ストリーミングの質に関する
大半の問題の原因は

00:03:30.777 --> 00:03:34.548 align:start position:30% line:-2
マスタープレイリストの
オーサリングにあります

00:03:35.315 --> 00:03:40.420 align:start position:25% line:-2
詳細を議論する前に
HLSの再生をおさらいします

00:03:41.121 --> 00:03:44.358 align:start position:27% line:-2
まずマスタープレイリストの
ダウンロードです

00:03:45.826 --> 00:03:50.163 align:start position:20% line:-2
プレイリストが入手できると
AVPlayerがコンテンツを認知

00:03:50.264 --> 00:03:54.001 align:start position:25% line:-2
ビットレートは１メガビットか
２メガビットです

00:03:54.101 --> 00:03:56.203 align:start position:21% line:-1
AVPlayerがどちらかを選び

00:03:56.303 --> 00:04:01.375 align:start position:27% line:-2
メディアプレイリストを
キーなどと共にダウンロード

00:03:56.303 --> 00:04:01.375 align:start position:27% line:-2
メディアプレイリストを
キーなどと共にダウンロード

00:04:01.475 --> 00:04:03.710 align:start position:27% line:-1
セグメントもダウンロードし

00:04:03.877 --> 00:04:06.780 align:start position:30% line:-2
バッファを再生に十分な
レベルに満たします

00:04:08.115 --> 00:04:09.483 align:start position:41% line:-1
そうなれば

00:04:09.583 --> 00:04:13.687 align:start position:27% line:-2
AVPlayerItemが
再生可能の予測を伝えます

00:04:14.221 --> 00:04:17.991 align:start position:32% line:-2
プロパティ値は
trueに設定します

00:04:18.257 --> 00:04:21.295 align:start position:27% line:-2
AVPlayerのレートを
１にセットし

00:04:21.394 --> 00:04:24.765 align:start position:27% line:-1
オートプレイの機能を使うと

00:04:24.898 --> 00:04:28.168 align:start position:30% line:-1
直ちに再生が始まります

00:04:28.368 --> 00:04:31.371 align:start position:34% line:-2
この時間間隔を
起動時間と呼びます

00:04:31.672 --> 00:04:35.509 align:start position:36% line:-2
ここからは
実際の経過時間と

00:04:35.809 --> 00:04:39.213 align:start position:21% line:-2
AVPlayerItemの時間が
同時に進みます

00:04:39.346 --> 00:04:40.681 align:start position:41% line:-1
条件は１つ

00:04:40.781 --> 00:04:44.518 align:start position:21% line:-2
AVPlayerの消費スピードと
同等またはそれ以上で

00:04:44.618 --> 00:04:47.988 align:start position:32% line:-2
コンテンツが到着する
必要があります

00:04:48.488 --> 00:04:53.560 align:start position:20% line:-2
そうでない場合 AVPlayerは
１メガビットに落ちます

00:04:53.660 --> 00:04:57.598 align:start position:32% line:-2
それでも実際の時間に
ついていけなければ

00:04:57.698 --> 00:05:00.067 align:start position:32% line:-1
バッファが枯渇します

00:04:57.698 --> 00:05:00.067 align:start position:32% line:-1
バッファが枯渇します

00:05:00.167 --> 00:05:03.337 align:start position:27% line:-2
AVPlayerは
再生を止めるしかありません

00:05:03.437 --> 00:05:05.239 align:start position:30% line:-1
これが“ストール”です

00:05:05.739 --> 00:05:09.843 align:start position:25% line:-2
データが再び流れ始めるまで
AVPlayerは動きません

00:05:09.943 --> 00:05:12.579 align:start position:36% line:-2
十分なレベルに
バッファが回復し

00:05:12.679 --> 00:05:16.583 align:start position:20% line:-2
AVPlayerItemが前向きな
予測を出すまで待ちます

00:05:17.150 --> 00:05:19.887 align:start position:29% line:-1
その後は再生が再開します

00:05:20.521 --> 00:05:25.292 align:start position:27% line:-2
ユーザーエクスペリエンスの
数値化について話しましょう

00:05:26.193 --> 00:05:30.430 align:start position:27% line:-2
そのために重要業績評価指標
KPIを定義します

00:05:31.064 --> 00:05:35.636 align:start position:30% line:-2
HLSを表すのに最適な
５つの指標を選びました

00:05:36.870 --> 00:05:42.776 align:start position:30% line:-2
ユーザが再生の開始を
待つ時間はどれくらいか

00:05:42.876 --> 00:05:47.247 align:start position:29% line:-2
１秒か５秒か
あるいは30秒でしょうか

00:05:47.381 --> 00:05:50.450 align:start position:27% line:-2
ユーザーエクスペリエンスの
重要な視点です

00:05:51.652 --> 00:05:56.890 align:start position:29% line:-2
再生のストールは
ユーザにとって致命的です

00:05:56.990 --> 00:05:59.860 align:start position:30% line:-1
発生の頻度も問題ですが

00:05:59.960 --> 00:06:04.298 align:start position:34% line:-2
回復にかかる時間は
それ以上に問題です

00:05:59.960 --> 00:06:04.298 align:start position:34% line:-2
回復にかかる時間は
それ以上に問題です

00:06:05.032 --> 00:06:09.570 align:start position:30% line:-2
ストールが再発するかも
しれない状況では

00:06:09.670 --> 00:06:12.906 align:start position:32% line:-2
最低のビットレートで
提供するのが一番です

00:06:13.006 --> 00:06:17.744 align:start position:29% line:-2
しかしストールを起こさず
最高の画質と音質で

00:06:17.845 --> 00:06:19.446 align:start position:41% line:-1
提供したい

00:06:19.546 --> 00:06:24.751 align:start position:27% line:-2
ストールのリスクと
メディアの質のてんびんです

00:06:25.419 --> 00:06:29.957 align:start position:27% line:-2
メディアの全体的な質を測る
別の指標が必要です

00:06:30.757 --> 00:06:33.961 align:start position:27% line:-1
最後の指標が再生エラーです

00:06:34.061 --> 00:06:36.563 align:start position:30% line:-1
ストールより致命的です

00:06:37.698 --> 00:06:40.434 align:start position:29% line:-1
いかにエラーを追跡するか

00:06:41.101 --> 00:06:43.036 align:start position:32% line:-1
まず起動時間の話から

00:06:43.570 --> 00:06:48.442 align:start position:30% line:-2
起動時間の算出に使える
APIは複数あります

00:06:48.542 --> 00:06:52.613 align:start position:23% line:-2
AVPlayerのステータスを
readyToPlayにしても

00:06:52.713 --> 00:06:55.482 align:start position:32% line:-2
再生が始まるかどうか
分かりません

00:06:56.383 --> 00:07:01.321 align:start position:25% line:-2
オートプレイを使っていて
事前にレートを設定していれば

00:06:56.383 --> 00:07:01.321 align:start position:25% line:-2
オートプレイを使っていて
事前にレートを設定していれば

00:07:01.455 --> 00:07:05.292 align:start position:16% line:-2
AVPlayerItemのステータスを
readyToPlayに設定するか

00:07:05.392 --> 00:07:09.329 align:start position:5% line:-2
isPlaybackLikelyToKeepUpを
trueに設定できます

00:07:09.429 --> 00:07:11.298 align:start position:32% line:-2
これらのプロパティは
監視可能です

00:07:12.065 --> 00:07:15.435 align:start position:30% line:-2
これなら再生が始まると
分かります

00:07:15.569 --> 00:07:19.606 align:start position:34% line:-2
しかし開始までには
一瞬の間があります

00:07:19.706 --> 00:07:25.379 align:start position:12% line:-2
そこでAVPlayerの
timeControlStatusを使うか

00:07:25.479 --> 00:07:27.581 align:start position:11% line:-2
AVPlayerItemのtimebaseを
追跡します

00:07:27.681 --> 00:07:30.117 align:start position:38% line:-2
通知によって
それが可能です

00:07:32.085 --> 00:07:35.389 align:start position:25% line:-2
ストールの回避に
ヒューリスティックを用いても

00:07:35.489 --> 00:07:38.192 align:start position:27% line:-1
避けられないこともあります

00:07:38.725 --> 00:07:40.727 align:start position:0% line:-2
AVPlayerItemPlaybackStalledの
通知で

00:07:40.828 --> 00:07:44.731 align:start position:36% line:-2
ストールの発生を
監視できます

00:07:44.998 --> 00:07:48.135 align:start position:32% line:-1
発生頻度を測るのです

00:07:48.602 --> 00:07:55.542 align:start position:27% line:-2
異なる持続時間のストールを
比較したり集計したりしたい

00:07:55.642 --> 00:07:57.978 align:start position:30% line:-1
そのために標準化します

00:07:58.212 --> 00:08:03.884 align:start position:30% line:-2
総視聴時間を監視し
ストールの割合を計算し

00:07:58.212 --> 00:08:03.884 align:start position:30% line:-2
総視聴時間を監視し
ストールの割合を計算し

00:08:03.984 --> 00:08:09.556 align:start position:30% line:-2
１時間ごとのストールを
割り出します

00:08:11.859 --> 00:08:17.364 align:start position:27% line:-2
ユーザは１秒のストールより
30秒のストールを嫌います

00:08:17.497 --> 00:08:21.835 align:start position:27% line:-2
だからリバッファや
ストールの時間に配慮します

00:08:22.169 --> 00:08:24.004 align:start position:34% line:-1
ストールの通知から

00:08:24.104 --> 00:08:29.209 align:start position:7% line:-2
AVPlayerItemのtimebaseが１に
戻るまでの間隔を計ります

00:08:29.309 --> 00:08:32.412 align:start position:25% line:-2
そこからストールの持続時間を
計算できます

00:08:32.846 --> 00:08:38.784 align:start position:29% line:-2
総持続時間はセッションの
視聴時間で標準化できます

00:08:38.885 --> 00:08:42.990 align:start position:30% line:-2
セッションの視聴時間を
いかに計算するか

00:08:43.190 --> 00:08:46.994 align:start position:30% line:-2
アクセスログを使います
実演しましょう

00:08:47.995 --> 00:08:50.063 align:start position:36% line:-1
これがコードです

00:08:50.164 --> 00:08:54.301 align:start position:29% line:-2
playerItemの
アクセスログを参照します

00:08:55.002 --> 00:08:58.505 align:start position:36% line:-2
アクセスログ中の
イベントを反復し

00:08:58.605 --> 00:09:02.276 align:start position:30% line:-2
各イベントの視聴時間を
合計します

00:08:58.605 --> 00:09:02.276 align:start position:30% line:-2
各イベントの視聴時間を
合計します

00:09:02.376 --> 00:09:05.646 align:start position:29% line:-2
これでセッションの
総視聴時間が算出されます

00:09:05.879 --> 00:09:10.350 align:start position:29% line:-2
アクセスログのイベントは
何を意味するのか

00:09:10.684 --> 00:09:14.788 align:start position:27% line:-2
AVPlayerItemの
アクセスログは

00:09:15.289 --> 00:09:18.892 align:start position:34% line:-2
セッションの履歴を
提供します

00:09:19.326 --> 00:09:22.996 align:start position:29% line:-2
もともとはNULLですが
再生が始まると

00:09:23.130 --> 00:09:26.900 align:start position:14% line:-2
NewAccessLogEntry通知を
受け取ります

00:09:27.000 --> 00:09:29.570 align:start position:27% line:-2
その時点で
アクセスログができています

00:09:29.770 --> 00:09:34.374 align:start position:29% line:-2
アクセスログのイベントに
含まれる情報は

00:09:34.608 --> 00:09:39.179 align:start position:27% line:-1
現在のURLやビットレート

00:09:39.346 --> 00:09:42.916 align:start position:30% line:-2
視聴時間や
ストールの回数などです

00:09:43.217 --> 00:09:49.790 align:start position:27% line:-2
これらの初期値は慣例により
負かNULLに設定されます

00:09:50.023 --> 00:09:51.658 align:start position:38% line:-1
再生が始まると

00:09:51.758 --> 00:09:56.697 align:start position:27% line:-2
計測データと実際のURLに
更新されます

00:09:56.964 --> 00:10:01.401 align:start position:36% line:-2
新しいイベントを
加える場合は２つ

00:09:56.964 --> 00:10:01.401 align:start position:36% line:-2
新しいイベントを
加える場合は２つ

00:10:01.535 --> 00:10:05.873 align:start position:32% line:-2
バリアントの更新時か
再生シーク時です

00:10:06.106 --> 00:10:10.043 align:start position:27% line:-2
古いイベントが
イミュータブルになってから

00:10:10.310 --> 00:10:11.945 align:start position:29% line:-1
新しいイベントを加えます

00:10:12.045 --> 00:10:17.484 align:start position:27% line:-2
再生が始まるとこれらの値は
絶えず更新されます

00:10:17.584 --> 00:10:20.554 align:start position:32% line:-1
最後のイベントの値は

00:10:21.588 --> 00:10:23.524 align:start position:38% line:-1
監視できません

00:10:25.292 --> 00:10:31.265 align:start position:29% line:-2
メディアの質も重要です
いかに計算するのでしょう

00:10:33.534 --> 00:10:37.371 align:start position:34% line:-2
ユーザに最高の質が
提供されているかは

00:10:37.471 --> 00:10:40.174 align:start position:27% line:-1
動画のビットレートを見ます

00:10:40.541 --> 00:10:45.946 align:start position:27% line:-2
起動時間やストールの時間は
関係ないので

00:10:46.180 --> 00:10:48.182 align:start position:32% line:-1
再生状態だけを見ます

00:10:48.282 --> 00:10:50.551 align:start position:34% line:-1
画面上のこの例では

00:10:50.651 --> 00:10:54.421 align:start position:27% line:-1
２メガビットの再生のほうが

00:10:54.655 --> 00:10:56.757 align:start position:32% line:-1
１メガビットより長い

00:10:56.924 --> 00:10:59.226 align:start position:34% line:-2
各ビットレートを
時間加重することで

00:10:59.326 --> 00:11:04.865 align:start position:29% line:-2
セッション間で比較できる
画質の値を得られます

00:10:59.326 --> 00:11:04.865 align:start position:29% line:-2
セッション間で比較できる
画質の値を得られます

00:11:05.933 --> 00:11:09.369 align:start position:34% line:-2
これが時間加重指標
ビットレートです

00:11:09.469 --> 00:11:14.308 align:start position:27% line:-2
それを計算するのは
総持続時間と同様に簡単です

00:11:14.975 --> 00:11:19.279 align:start position:25% line:-2
再びPlayerItemsの
アクセスログを参照し

00:11:19.379 --> 00:11:21.582 align:start position:27% line:-1
ログのイベントを反復します

00:11:21.682 --> 00:11:27.387 align:start position:23% line:-2
先に算出した総視聴時間に対する
各イベントの時間加重を計算

00:11:27.855 --> 00:11:31.258 align:start position:27% line:-2
最後に加重ビットレート値に
合算します

00:11:31.358 --> 00:11:35.829 align:start position:23% line:-2
プロパティが初期化されていない
可能性があるので

00:11:35.929 --> 00:11:38.832 align:start position:38% line:-2
コードを適切に
チェックします

00:11:41.235 --> 00:11:45.672 align:start position:29% line:-2
他に追跡すべきイベントは
再生の失敗です

00:11:45.772 --> 00:11:48.942 align:start position:27% line:-2
AVPlayerItemの
ステータスを見ます

00:11:49.476 --> 00:11:54.948 align:start position:25% line:-2
値がfalseに変われば
回復不可能なエラーを示します

00:11:55.449 --> 00:11:58.685 align:start position:29% line:-2
この観察結果を
KPIに変換する方法は？

00:11:59.553 --> 00:12:02.756 align:start position:30% line:-1
その１つの方法としては

00:11:59.553 --> 00:12:02.756 align:start position:30% line:-1
その１つの方法としては

00:12:02.856 --> 00:12:06.593 align:start position:32% line:-2
失敗したセッションの
割合を調べることです

00:12:06.693 --> 00:12:08.595 align:start position:34% line:-2
他にも方法が
あるかもしれません

00:12:08.695 --> 00:12:14.134 align:start position:25% line:-2
ストリームのすべてのエラーが
致命的ではありません

00:12:14.334 --> 00:12:16.336 align:start position:32% line:-2
メディアの質に
影響するものもあれば

00:12:16.436 --> 00:12:19.439 align:start position:29% line:-2
ユーザが
気づかないものもあります

00:12:19.573 --> 00:12:25.646 align:start position:23% line:-2
それでもエラーが出れば
ストリームの問題が通知されます

00:12:25.779 --> 00:12:30.684 align:start position:27% line:-2
ストリームに何があったかを
探るための手段が

00:12:31.051 --> 00:12:34.788 align:start position:14% line:-1
AVPlayerItemのエラーログです

00:12:35.422 --> 00:12:36.924 align:start position:16% line:-1
AVPlayerItemのエラーログは

00:12:37.024 --> 00:12:40.894 align:start position:34% line:-2
ユーザに影響のある
障害を知らせます

00:12:42.196 --> 00:12:45.866 align:start position:27% line:-2
アクセスログと似ていますが
イベントが

00:12:46.166 --> 00:12:49.002 align:start position:32% line:-2
アクセス状態ではなく
エラーを示します

00:12:50.037 --> 00:12:55.142 align:start position:29% line:-2
配信やネットワークの問題
オーサリングのエラーなど

00:12:55.309 --> 00:12:57.644 align:start position:36% line:-2
さまざまな分野を
カバーします

00:12:57.878 --> 00:13:01.515 align:start position:34% line:-2
メディアファイルに
反応がなかったなど

00:12:57.878 --> 00:13:01.515 align:start position:34% line:-2
メディアファイルに
反応がなかったなど

00:13:01.615 --> 00:13:05.252 align:start position:27% line:-1
ストールの原因が分かります

00:13:07.187 --> 00:13:11.158 align:start position:27% line:-2
セッションごとに追跡できる
起動時間の話をしました

00:13:11.592 --> 00:13:15.696 align:start position:29% line:-2
アプリケーションの
起動時間を見直しましょう

00:13:16.196 --> 00:13:19.833 align:start position:34% line:-2
ストールの頻度や
時間の話もしました

00:13:20.634 --> 00:13:23.170 align:start position:27% line:-1
時間加重指標ビットレートは

00:13:23.270 --> 00:13:27.441 align:start position:34% line:-2
メディアの質を示す
有効な指標です

00:13:27.574 --> 00:13:32.846 align:start position:27% line:-2
失敗したセッションの割合を
最低限に抑えたいものです

00:13:36.884 --> 00:13:41.622 align:start position:23% line:-2
すべてのKPIがセッション間で
比較できるわけではありません

00:13:42.189 --> 00:13:45.459 align:start position:18% line:-1
たとえば AVFoundationは

00:13:45.559 --> 00:13:48.662 align:start position:27% line:-2
AVPlayerの画面上の
レイヤーサイズを使って

00:13:48.795 --> 00:13:51.431 align:start position:23% line:-1
HLSのバリアントを評価します

00:13:51.532 --> 00:13:54.535 align:start position:25% line:-1
10のATPコンテンツがあり

00:13:54.635 --> 00:13:57.771 align:start position:32% line:-2
200画素で
提供されないとしても

00:13:57.871 --> 00:14:01.575 align:start position:32% line:-2
ユーザが低画質と
感じるとは限りません

00:13:57.871 --> 00:14:01.575 align:start position:32% line:-2
ユーザが低画質と
感じるとは限りません

00:14:02.910 --> 00:14:08.916 align:start position:25% line:-2
ストリーミングのメトリックと
コンテキストの情報を集めます

00:14:09.349 --> 00:14:12.519 align:start position:23% line:-2
それを基に アプリケーションに
適した分類に

00:14:12.619 --> 00:14:15.222 align:start position:34% line:-2
再生のセッションを
分割します

00:14:16.223 --> 00:14:18.225 align:start position:34% line:-1
コードのサンプルは

00:14:18.425 --> 00:14:23.363 align:start position:9% line:-2
Apple Developer Webサイトに
HLSのカタログとしてあります

00:14:24.164 --> 00:14:27.167 align:start position:34% line:-2
ここからは
ジェンヘン･リーが

00:14:27.267 --> 00:14:30.838 align:start position:29% line:-2
HLSのパフォーマンスを
向上させる方法を話します

00:14:30.938 --> 00:14:34.842 align:start position:43% line:-1
(拍手)

00:14:35.042 --> 00:14:36.210 align:start position:41% line:-1
ありがとう

00:14:42.616 --> 00:14:45.152 align:start position:27% line:-1
こんにちは　ジェンヘンです

00:14:47.921 --> 00:14:52.926 align:start position:29% line:-2
ユーザが最も懸念する
KPIについて話しました

00:14:53.093 --> 00:14:57.831 align:start position:27% line:-2
ここからはAPIを改善する
方法について話します

00:14:58.098 --> 00:15:00.567 align:start position:30% line:-1
掘り下げる点は３つです

00:14:58.098 --> 00:15:00.567 align:start position:30% line:-1
掘り下げる点は３つです

00:15:00.834 --> 00:15:04.204 align:start position:27% line:-1
いかに起動時間を短縮するか

00:15:04.972 --> 00:15:08.809 align:start position:30% line:-2
いかにストールを調べて
回避するか

00:15:09.009 --> 00:15:13.247 align:start position:32% line:-2
いかにエラーを調べて
回避するか

00:15:13.347 --> 00:15:14.414 align:start position:39% line:-1
では始めます

00:15:15.549 --> 00:15:18.652 align:start position:36% line:-2
何が再生の開始を
遅らせるのか

00:15:18.886 --> 00:15:23.724 align:start position:29% line:-2
これは再生を押してから
動画が再生されるまでの―

00:15:23.824 --> 00:15:25.859 align:start position:34% line:-1
ユーザ操作の例です

00:15:26.894 --> 00:15:29.329 align:start position:34% line:-2
アプリケーションが
アセットを作り

00:15:29.429 --> 00:15:31.732 align:start position:32% line:-1
アセットの検査を開始

00:15:31.999 --> 00:15:37.371 align:start position:25% line:-2
持続時間とアセットの
メディアオプションを探ります

00:15:37.971 --> 00:15:43.544 align:start position:27% line:-2
コンテンツサーバと
デバイスの間を何度か往復し

00:15:43.677 --> 00:15:47.981 align:start position:30% line:-2
マスタープレイリストを
ダウンロードします

00:15:48.515 --> 00:15:53.887 align:start position:7% line:-2
その後 アプリケーションは
AVPlayerとAVPlayerItemを作り

00:15:54.454 --> 00:15:55.923 align:start position:27% line:-1
バッファリングが始まります

00:15:56.823 --> 00:16:01.995 align:start position:25% line:-2
バッファリングはしばしば中断
コンテンツは暗号化されます

00:15:56.823 --> 00:16:01.995 align:start position:25% line:-2
バッファリングはしばしば中断
コンテンツは暗号化されます

00:16:02.429 --> 00:16:07.000 align:start position:30% line:-2
デバイスとキーサーバの
間を何往復かして

00:16:07.100 --> 00:16:09.102 align:start position:29% line:-1
復号キーをフェッチします

00:16:09.403 --> 00:16:11.205 align:start position:30% line:-1
キーがフェッチされると

00:16:12.706 --> 00:16:14.608 align:start position:27% line:-1
バッファリングが再開します

00:16:14.942 --> 00:16:17.878 align:start position:34% line:-2
また中断されるかも
しれません

00:16:18.145 --> 00:16:21.682 align:start position:34% line:-2
アプリケーションが
機能を提供し

00:16:21.782 --> 00:16:24.651 align:start position:32% line:-2
前回視聴した時点から
再開します

00:16:25.419 --> 00:16:27.588 align:start position:34% line:-2
アプリケーションは
ユーザに代わって

00:16:27.688 --> 00:16:31.458 align:start position:30% line:-2
AVPlayerの
シーク時間を設定します

00:16:31.925 --> 00:16:35.629 align:start position:30% line:-2
AVPlayerは
既存のバッファを捨てて

00:16:35.729 --> 00:16:40.267 align:start position:32% line:-2
セグメント100から
ダウンロードします

00:16:41.602 --> 00:16:43.770 align:start position:29% line:-1
それでも中断はあり得ます

00:16:43.871 --> 00:16:47.074 align:start position:32% line:-1
ユーザは好みの言語を

00:16:47.174 --> 00:16:49.543 align:start position:30% line:-1
アプリケーションに設定

00:16:50.010 --> 00:16:52.513 align:start position:38% line:-2
このユーザは
スペイン語です

00:16:53.046 --> 00:16:57.017 align:start position:34% line:-2
アプリケーションは
メディアを選びます

00:16:57.885 --> 00:17:00.454 align:start position:25% line:-1
既存のバッファは捨てられます

00:16:57.885 --> 00:17:00.454 align:start position:25% line:-1
既存のバッファは捨てられます

00:17:01.088 --> 00:17:05.592 align:start position:21% line:-2
AVPlayerは異なる言語から
ダウンロードします

00:17:06.226 --> 00:17:09.229 align:start position:18% line:-1
数秒後にはAVPlayerItemが

00:17:09.829 --> 00:17:12.900 align:start position:2% line:-1
isPlaybackLikelyToKeepUpを通知

00:17:13.099 --> 00:17:15.002 align:start position:34% line:-1
レートを設定します

00:17:15.169 --> 00:17:17.938 align:start position:36% line:-1
再生が再開します

00:17:18.238 --> 00:17:21.108 align:start position:36% line:-2
この間 ユーザは
待っています

00:17:22.041 --> 00:17:23.710 align:start position:39% line:-1
ご覧のように

00:17:24.344 --> 00:17:29.082 align:start position:27% line:-2
起動には 複数の操作が絡み
時間が必要です

00:17:29.182 --> 00:17:35.089 align:start position:27% line:-2
デバイスとコンテンツサーバ
キーサーバの間の往復

00:17:35.189 --> 00:17:39.593 align:start position:27% line:-2
アプリケーションと
AVPlayerの間の往復

00:17:39.993 --> 00:17:43.630 align:start position:34% line:-2
この２つは大抵
異なるプロセスです

00:17:44.464 --> 00:17:48.602 align:start position:30% line:-2
起動時間と時間コストを
いかに計るか

00:17:49.369 --> 00:17:54.942 align:start position:20% line:-2
API呼び出しとAVPlayerや
AVPlayerItemの―

00:17:55.042 --> 00:17:58.979 align:start position:29% line:-2
ステータス変化通知の間の
時間を計ります

00:18:00.714 --> 00:18:05.752 align:start position:12% line:-2
AVPlayerItemはアクセスログにも
起動時間を書き出します

00:18:06.019 --> 00:18:10.390 align:start position:21% line:-2
この時間は
AVPlayerItemで計られ

00:18:10.657 --> 00:18:13.660 align:start position:27% line:-2
バッファリングの時間のみを
表します

00:18:14.361 --> 00:18:16.864 align:start position:32% line:-2
メディアの
ダウンロード開始から

00:18:16.964 --> 00:18:20.701 align:start position:4% line:-2
最初の
isPlaybackLikelyToKeepUpまで

00:18:21.568 --> 00:18:27.141 align:start position:30% line:-2
ユーザは動画が数秒で
始まることを期待します

00:18:27.241 --> 00:18:29.142 align:start position:29% line:-1
それを実現する方法とは？

00:18:30.510 --> 00:18:31.845 align:start position:38% line:-1
１つの選択肢は

00:18:32.679 --> 00:18:36.183 align:start position:30% line:-2
操作の一部を
別の段階に移すことです

00:18:36.717 --> 00:18:40.087 align:start position:27% line:-1
ユーザが再生を押す前にです

00:18:40.521 --> 00:18:43.857 align:start position:25% line:-1
例えばAVAssetの作成と

00:18:44.358 --> 00:18:46.593 align:start position:34% line:-1
検査は移動できます

00:18:48.395 --> 00:18:50.831 align:start position:29% line:-1
キーのフェッチも同様です

00:18:51.565 --> 00:18:55.335 align:start position:29% line:-2
これでユーザが
動画の再生を始めた時の―

00:18:56.370 --> 00:18:58.806 align:start position:32% line:-1
待機時間を減らせます

00:18:59.106 --> 00:19:02.142 align:start position:29% line:-1
これらの操作の移動先は？

00:18:59.106 --> 00:19:02.142 align:start position:29% line:-1
これらの操作の移動先は？

00:19:04.545 --> 00:19:09.449 align:start position:29% line:-2
ユーザが動画のカタログや
動画情報を見ている間に

00:19:09.650 --> 00:19:13.654 align:start position:20% line:-1
AVAssetを作成し 検査します

00:19:13.987 --> 00:19:16.490 align:start position:38% line:-2
ユーザが動画を
再生する前です

00:19:17.758 --> 00:19:21.828 align:start position:14% line:-2
AVContentKeySessionを
導入しましたが

00:19:22.196 --> 00:19:27.167 align:start position:25% line:-2
このAPIはメディアロードを
キーフェッチから分離します

00:19:27.468 --> 00:19:31.738 align:start position:34% line:-2
アプリケーションに
キー管理の制御と

00:19:31.839 --> 00:19:35.876 align:start position:29% line:-2
キーフェッチを
最適化する方法を与えます

00:19:35.976 --> 00:19:40.981 align:start position:23% line:-2
複数のキーリクエストを一括して
キーサーバに戻したりします

00:19:41.415 --> 00:19:44.852 align:start position:29% line:-2
AVContentの
キーセッションを採用して

00:19:44.985 --> 00:19:48.088 align:start position:27% line:-1
技術的作業に数時間かければ

00:19:48.455 --> 00:19:52.025 align:start position:32% line:-2
ユーザは起動の早さに
気がつきます

00:19:53.660 --> 00:19:59.600 align:start position:18% line:-2
AVAssetの作成とキーフェッチを
起動時間から取り除きました

00:19:59.800 --> 00:20:05.072 align:start position:23% line:-2
次はAVPlayerItemの
バッファリング時間と

00:19:59.800 --> 00:20:05.072 align:start position:23% line:-2
次はAVPlayerItemの
バッファリング時間と

00:20:05.539 --> 00:20:10.510 align:start position:21% line:-2
アプリケーションと
AVPlayer間の通信時間です

00:20:11.178 --> 00:20:12.379 align:start position:39% line:-1
多くの場合―

00:20:13.080 --> 00:20:17.117 align:start position:25% line:-2
アプリケーションは
バッファリングを避けられます

00:20:17.551 --> 00:20:20.621 align:start position:29% line:-2
シークや
メディア選択によってです

00:20:20.721 --> 00:20:24.892 align:start position:29% line:-2
AVPlayerと
アプリケーションの間の―

00:20:25.125 --> 00:20:28.428 align:start position:29% line:-1
往復時間の短縮も可能です

00:20:29.029 --> 00:20:31.899 align:start position:36% line:-2
起動時間は
更に短くなります

00:20:32.900 --> 00:20:34.368 align:start position:39% line:-1
ご覧ください

00:20:36.103 --> 00:20:38.372 align:start position:18% line:-1
AVPlayerItemを作成します

00:20:39.840 --> 00:20:44.244 align:start position:29% line:-2
ユーザが再生したい時点が
分かれば

00:20:44.912 --> 00:20:47.281 align:start position:27% line:-2
AVPlayerItemで
時間を設定できます

00:20:47.681 --> 00:20:53.220 align:start position:29% line:-2
ダウンロードする言語など
メディア選択が分かれば

00:20:53.487 --> 00:20:59.159 align:start position:16% line:-2
AVPlayerItemを設定する前に
それらも設定できます

00:20:59.626 --> 00:21:01.562 align:start position:27% line:-1
AVPlayerも同じです

00:20:59.626 --> 00:21:01.562 align:start position:27% line:-1
AVPlayerも同じです

00:21:01.795 --> 00:21:04.164 align:start position:32% line:-1
ユーザが再生を押すと

00:21:04.865 --> 00:21:11.638 align:start position:29% line:-2
ダウンロードが始まる前に
レートを設定

00:21:11.939 --> 00:21:18.378 align:start position:29% line:-2
準備が整ったら
再生が自動的に始まります

00:21:18.846 --> 00:21:20.080 align:start position:41% line:-1
まとめです

00:21:20.914 --> 00:21:23.817 align:start position:30% line:-2
バッファリングの前に
AVPlayerを設定

00:21:24.351 --> 00:21:27.921 align:start position:21% line:-1
AVPlayerのレートの設定を

00:21:28.188 --> 00:21:32.326 align:start position:20% line:-2
AVPlayerItemの設定前に
行います

00:21:33.093 --> 00:21:34.862 align:start position:29% line:-1
多くのアプリケーションが

00:21:35.462 --> 00:21:40.634 align:start position:27% line:-2
ユーザが複数の動画を
選べる機能を提供しています

00:21:40.734 --> 00:21:45.606 align:start position:29% line:-2
シリーズ番組を見るなど
次から次へと再生できます

00:21:46.607 --> 00:21:52.346 align:start position:23% line:-2
動画ごとにAVPlayerと
AVPlayerItemを実装

00:21:52.713 --> 00:21:57.417 align:start position:25% line:-2
新しい動画には起動時
バッファリング時間が必要です

00:21:57.551 --> 00:22:01.989 align:start position:29% line:-2
このバッファリング時間を
短縮するのが

00:21:57.551 --> 00:22:01.989 align:start position:29% line:-2
このバッファリング時間を
短縮するのが

00:22:02.089 --> 00:22:04.157 align:start position:23% line:-1
AVQueuePlayerです

00:22:05.826 --> 00:22:10.731 align:start position:21% line:-2
複数のAVPlayerItemを
作って再生キューに入れます

00:22:12.199 --> 00:22:15.536 align:start position:29% line:-2
AVPlayerが
現在のアイテムを再生中に

00:22:16.970 --> 00:22:20.240 align:start position:30% line:-2
メディアの
ダウンロードが終わると

00:22:21.508 --> 00:22:26.413 align:start position:27% line:-2
AVPlayerは再生中に
次のダウンロードを開始

00:22:27.147 --> 00:22:31.685 align:start position:36% line:-2
現在のイベントが
終わるとすぐに

00:22:31.885 --> 00:22:35.189 align:start position:23% line:-2
次のAVPlayerItemが
再生を始めます

00:22:37.157 --> 00:22:41.028 align:start position:20% line:-2
AVQueuePlayerを使って
複数のアイテムを再生し

00:22:41.261 --> 00:22:45.032 align:start position:20% line:-2
２つ目のAVPlayerItemを
事前にキューに追加します

00:22:47.167 --> 00:22:50.571 align:start position:30% line:-2
残っているのが
バッファリング時間です

00:22:51.271 --> 00:22:55.175 align:start position:23% line:-2
ネットワークの
バッファリング時間を決めるのは

00:22:55.542 --> 00:22:56.810 align:start position:38% line:-1
４つの要因です

00:22:58.111 --> 00:22:59.680 align:start position:36% line:-1
バリアントの選択

00:23:00.981 --> 00:23:02.916 align:start position:29% line:-1
コンテンツのビットレート

00:23:03.550 --> 00:23:07.254 align:start position:34% line:-2
プレイリストの
ターゲット持続時間

00:23:07.488 --> 00:23:09.556 align:start position:27% line:-1
そして ネットワーク帯域幅

00:23:11.525 --> 00:23:14.928 align:start position:29% line:-2
バッファリング時間の例を
見ましょう

00:23:16.130 --> 00:23:19.166 align:start position:29% line:-2
シンプルな
マスタープレイリストです

00:23:19.266 --> 00:23:24.738 align:start position:29% line:-2
ATP動画を５mbpsに
設定しています

00:23:25.272 --> 00:23:29.276 align:start position:32% line:-2
ネットワーク帯域幅が
６mbpsなら

00:23:29.643 --> 00:23:32.079 align:start position:27% line:-1
ターゲット持続時間は10秒

00:23:32.713 --> 00:23:37.551 align:start position:16% line:-2
大抵 AVPlayerItemは１つの
セグメントをバッファリングします

00:23:37.851 --> 00:23:41.755 align:start position:5% line:-2
isPlaybackLikelyToKeepUpを
通知する前です

00:23:42.523 --> 00:23:47.027 align:start position:27% line:-1
同じマスタープレイリストで

00:23:47.995 --> 00:23:50.030 align:start position:29% line:-1
ほぼ同じネットワーク状況

00:23:50.898 --> 00:23:54.568 align:start position:32% line:-2
しかしユーザは
起動が遅いと感じます

00:23:55.802 --> 00:23:59.673 align:start position:32% line:-2
ネットワーク帯域幅は
変化します

00:23:59.840 --> 00:24:02.543 align:start position:34% line:-2
コンテンツの
ビットレートもです

00:23:59.840 --> 00:24:02.543 align:start position:34% line:-2
コンテンツの
ビットレートもです

00:24:02.643 --> 00:24:08.282 align:start position:27% line:-2
ダウンロードに時間がかかり
起動が遅くなります

00:24:08.882 --> 00:24:10.984 align:start position:32% line:-1
これを解消するために

00:24:11.084 --> 00:24:15.622 align:start position:30% line:-2
ビットレートの低い
バリアントを提供します

00:24:17.124 --> 00:24:21.828 align:start position:18% line:-2
AVPlayerは低いほうに切り替え
起動を早められます

00:24:24.231 --> 00:24:26.934 align:start position:34% line:-1
他に情報がなければ

00:24:27.401 --> 00:24:31.038 align:start position:25% line:-2
最初に現れるバリアントが
起動時のバリアントになります

00:24:32.372 --> 00:24:35.642 align:start position:30% line:-2
この例では
２つの同じバリアントで

00:24:36.076 --> 00:24:40.280 align:start position:34% line:-2
低いビットレートが
先に現れます

00:24:40.547 --> 00:24:44.551 align:start position:29% line:-2
AVPlayerの起動は
早くなります

00:24:46.053 --> 00:24:50.424 align:start position:32% line:-2
ネットワーク帯域幅が
再生に十分なら

00:24:50.524 --> 00:24:52.993 align:start position:29% line:-1
切り替えも素早くできます

00:24:53.827 --> 00:24:55.095 align:start position:41% line:-1
まとめます

00:24:57.297 --> 00:25:01.969 align:start position:29% line:-2
賢いバリアントの選択で
バッファリング時間を短縮

00:24:57.297 --> 00:25:01.969 align:start position:29% line:-2
賢いバリアントの選択で
バッファリング時間を短縮

00:25:02.803 --> 00:25:06.974 align:start position:30% line:-2
ビットレートが低ければ
時間は短くなりますが

00:25:07.074 --> 00:25:10.177 align:start position:29% line:-1
映像の画質が悪くなります

00:25:11.345 --> 00:25:14.448 align:start position:34% line:-2
マルチメディア
フォーマットの場合

00:25:14.548 --> 00:25:17.551 align:start position:21% line:-1
HDRやSDRのような映像形式や

00:25:17.651 --> 00:25:21.155 align:start position:29% line:-2
ステレオやマルチチャネル
オーディオですが

00:25:22.556 --> 00:25:27.528 align:start position:29% line:-2
各メディアフォーマットの
最初のバリアントの―

00:25:28.328 --> 00:25:31.131 align:start position:34% line:-2
ビットレートを
同等レベルにします

00:25:31.231 --> 00:25:33.767 align:start position:34% line:-2
そうすれば
どんな視聴環境でも

00:25:33.901 --> 00:25:37.371 align:start position:32% line:-2
同じような使い心地を
得られます

00:25:38.672 --> 00:25:42.342 align:start position:32% line:-2
大事なのは起動時間を
短縮することです

00:25:42.576 --> 00:25:44.144 align:start position:36% line:-1
これで起動は完了

00:25:45.379 --> 00:25:47.848 align:start position:30% line:-1
次の問題はストールです

00:25:48.348 --> 00:25:51.852 align:start position:32% line:-2
ネットワーク帯域幅が
狭ければ

00:25:51.952 --> 00:25:55.522 align:start position:29% line:-1
ストールは避けられません

00:25:55.989 --> 00:26:00.360 align:start position:27% line:-1
ここからはストールを調査し

00:25:55.989 --> 00:26:00.360 align:start position:27% line:-1
ここからはストールを調査し

00:26:00.694 --> 00:26:03.730 align:start position:32% line:-2
回避する方法について
話します

00:26:06.200 --> 00:26:08.902 align:start position:29% line:-1
ストールを調査するために

00:26:09.169 --> 00:26:14.308 align:start position:30% line:-2
アプリケーションは
常時 通知に注意します

00:26:16.176 --> 00:26:20.848 align:start position:27% line:-2
AVPlayerItemの
ステータスにも注意します

00:26:20.981 --> 00:26:24.785 align:start position:7% line:-2
isPlaybackLikelyToKeepUp
などです

00:26:26.320 --> 00:26:32.159 align:start position:16% line:-2
AVPlayerItemはエラーログと
アクセスログも提供します

00:26:32.426 --> 00:26:35.762 align:start position:34% line:-2
アプリケーションは
ストールが起きると

00:26:35.863 --> 00:26:39.032 align:start position:29% line:-1
これらのログを検証します

00:26:40.868 --> 00:26:44.004 align:start position:32% line:-2
２つのストールの例を
ご覧ください

00:26:44.605 --> 00:26:49.142 align:start position:29% line:-2
アプリケーションが
ストールの通知を受けます

00:26:50.644 --> 00:26:54.248 align:start position:29% line:-1
エラーログも受け取ります

00:26:54.982 --> 00:27:00.954 align:start position:30% line:-2
エラーコメントで詳細に
何が起きたか分かります

00:26:54.982 --> 00:27:00.954 align:start position:30% line:-2
エラーコメントで詳細に
何が起きたか分かります

00:27:01.355 --> 00:27:05.425 align:start position:32% line:-2
メディアファイルが
15秒間 未受信です

00:27:06.293 --> 00:27:09.830 align:start position:34% line:-2
アプリケーションは
アクセスログを調べ

00:27:10.597 --> 00:27:14.935 align:start position:32% line:-2
何を再生していたかを
突き止めます

00:27:15.702 --> 00:27:19.206 align:start position:34% line:-2
ログは詳細な情報を
提供します

00:27:19.573 --> 00:27:22.176 align:start position:36% line:-1
コンテンツは何か

00:27:22.443 --> 00:27:23.877 align:start position:41% line:-1
URIは？

00:27:24.311 --> 00:27:27.181 align:start position:20% line:-2
indicatedBitrateは
コンテンツのビットレートで

00:27:27.281 --> 00:27:30.117 align:start position:27% line:-1
この場合は36mbpsです

00:27:30.217 --> 00:27:32.119 align:start position:29% line:-1
４Kのコンテンツでしょう

00:27:32.486 --> 00:27:36.823 align:start position:21% line:-2
observedBitrateは
ネットワーク帯域幅です

00:27:36.924 --> 00:27:39.860 align:start position:25% line:-1
この場合は2.8mbpsです

00:27:39.960 --> 00:27:41.695 align:start position:32% line:-1
ネットワーク帯域幅が

00:27:42.229 --> 00:27:46.733 align:start position:27% line:-2
コンテンツのビットレートに
追いついていません

00:27:48.635 --> 00:27:51.271 align:start position:29% line:-1
変化するネットワークには

00:27:51.939 --> 00:27:55.008 align:start position:29% line:-2
ビットレートをフルセット
用意する必要があります

00:27:55.109 --> 00:27:59.546 align:start position:30% line:-2
ネットワーク環境が
よくないユーザもいれば

00:27:59.913 --> 00:28:05.152 align:start position:32% line:-2
携帯端末で動画を見る
ユーザもいます

00:27:59.913 --> 00:28:05.152 align:start position:32% line:-2
携帯端末で動画を見る
ユーザもいます

00:28:05.586 --> 00:28:09.890 align:start position:36% line:-2
マルチメディア
フォーマットなら

00:28:10.457 --> 00:28:14.228 align:start position:25% line:-2
コーデックの組み合わせごとに
階層が必要です

00:28:16.497 --> 00:28:21.335 align:start position:25% line:-2
ネットワークの状況だけが
ストールの原因ではありません

00:28:22.169 --> 00:28:23.637 align:start position:34% line:-1
これを見てください

00:28:24.404 --> 00:28:28.575 align:start position:30% line:-2
ストールのエラーログは
別の原因を示しています

00:28:29.776 --> 00:28:35.048 align:start position:27% line:-2
プレイリストファイルが２回
続けて同じだったようです

00:28:35.883 --> 00:28:38.519 align:start position:32% line:-1
アクセスログを見ると

00:28:39.520 --> 00:28:41.321 align:start position:23% line:-1
AVPlayerはライブ再生中

00:28:42.189 --> 00:28:46.994 align:start position:32% line:-2
ビットレートは低めで
コンテンツは400K

00:28:47.761 --> 00:28:51.465 align:start position:32% line:-2
ネットワーク帯域幅は
3.7mbpsです

00:28:51.798 --> 00:28:55.068 align:start position:34% line:-2
コンテンツの配信に
問題がありそうです

00:28:56.837 --> 00:29:00.507 align:start position:30% line:-2
配信が原因のストールを
回避するために

00:28:56.837 --> 00:29:00.507 align:start position:30% line:-2
配信が原因のストールを
回避するために

00:29:01.175 --> 00:29:03.177 align:start position:27% line:-1
コンテンツサーバやCDNは

00:29:04.044 --> 00:29:08.448 align:start position:27% line:-2
遅延なくメディアファイルや
セグメントやキーを配信

00:29:09.082 --> 00:29:13.353 align:start position:23% line:-2
ターゲット持続時間ごとに
ライブプレイリストを更新します

00:29:13.487 --> 00:29:18.559 align:start position:27% line:-2
最新のプレイリストを
配信するようCDNを構築し

00:29:18.659 --> 00:29:20.861 align:start position:27% line:-1
古いプレイリストを避けます

00:29:22.362 --> 00:29:26.200 align:start position:29% line:-2
シーケンス番号の不連続を
同期させること

00:29:27.801 --> 00:29:33.173 align:start position:23% line:-2
HTTPステータスコードを使い
サーバ側の問題を示すこと

00:29:35.642 --> 00:29:38.278 align:start position:32% line:-1
エラーはどうでしょう

00:29:39.112 --> 00:29:42.850 align:start position:36% line:-2
どうやって
エラーを調べるか

00:29:43.784 --> 00:29:45.419 align:start position:38% line:-1
方法はあります

00:29:45.786 --> 00:29:51.325 align:start position:16% line:-2
AVPlayerItemのエラーログと
アクセスログ

00:29:52.025 --> 00:29:54.261 align:start position:27% line:-1
エラープロパティもあります

00:29:54.361 --> 00:29:57.931 align:start position:27% line:-2
アプリケーションが監視する
AVPlayerや

00:29:58.031 --> 00:30:00.033 align:start position:21% line:-1
AVPlayerItemからです

00:29:58.031 --> 00:30:00.033 align:start position:21% line:-1
AVPlayerItemからです

00:30:02.169 --> 00:30:05.305 align:start position:36% line:-2
メディア検証の
ツールもあります

00:30:05.405 --> 00:30:08.942 align:start position:29% line:-2
これでコンテンツの問題を
検知できます

00:30:09.376 --> 00:30:11.311 align:start position:29% line:-1
１つずつ見ていきましょう

00:30:13.046 --> 00:30:17.818 align:start position:11% line:-2
AVPlayerItemErrorLogから
説明します

00:30:19.019 --> 00:30:22.222 align:start position:29% line:-2
このタイプのエラーログが
示すのは

00:30:22.322 --> 00:30:25.492 align:start position:27% line:-2
コンテンツのフォーマットか
ネットワークの問題です

00:30:25.592 --> 00:30:28.495 align:start position:32% line:-2
常に致命的なわけでは
ありません

00:30:30.030 --> 00:30:34.902 align:start position:27% line:-2
エラーが示されても 再生に
支障がないこともあります

00:30:36.403 --> 00:30:40.474 align:start position:29% line:-2
アプリケーションは
エラーコメントを確認して

00:30:40.574 --> 00:30:43.610 align:start position:36% line:-2
このような詳細を
突き止めます

00:30:44.178 --> 00:30:48.715 align:start position:30% line:-2
メディアファイルが
15秒間 未受信でした

00:30:49.349 --> 00:30:53.287 align:start position:32% line:-2
これによればユーザは
ストールを体験したか

00:30:53.420 --> 00:30:55.355 align:start position:30% line:-1
または これからします

00:30:57.124 --> 00:31:01.628 align:start position:29% line:-2
次はHTTPのエラーです
ファイルが見つかりません

00:30:57.124 --> 00:31:01.628 align:start position:29% line:-2
次はHTTPのエラーです
ファイルが見つかりません

00:31:01.728 --> 00:31:04.798 align:start position:34% line:-2
コンテンツの配信に
問題があります

00:31:05.265 --> 00:31:09.436 align:start position:27% line:-2
音声か映像 あるいは両方が
途切れます

00:31:13.006 --> 00:31:16.343 align:start position:30% line:-2
セグメントが指定された
帯域幅を超えました

00:31:16.443 --> 00:31:19.980 align:start position:34% line:-2
ストールのリスクを
示しています

00:31:20.114 --> 00:31:25.319 align:start position:29% line:-2
しかしエラーが示されても
再生は完璧なことも

00:31:25.586 --> 00:31:29.056 align:start position:27% line:-1
セグメントのビットレートが

00:31:29.156 --> 00:31:32.826 align:start position:23% line:-2
マスタープレイリストの
それより高いことを示しています

00:31:33.961 --> 00:31:37.998 align:start position:27% line:-2
最後は暗号化フォーマットの
エラーです

00:31:38.098 --> 00:31:39.700 align:start position:30% line:-1
サポートされていません

00:31:39.900 --> 00:31:44.071 align:start position:27% line:-1
再生時の障害かもしれません

00:31:44.671 --> 00:31:47.207 align:start position:32% line:-2
紹介していないものも
ありますが

00:31:47.307 --> 00:31:51.245 align:start position:34% line:-2
エラーメッセージは
非常に役に立ちます

00:31:51.545 --> 00:31:55.449 align:start position:12% line:-2
AVPlayerや
AVPlayerItemのエラー発生時です

00:31:55.682 --> 00:31:56.850 align:start position:38% line:-1
見てみましょう

00:31:59.253 --> 00:32:03.757 align:start position:16% line:-2
アプリケーションは
AVPlayerItemのステータスと

00:31:59.253 --> 00:32:03.757 align:start position:16% line:-2
アプリケーションは
AVPlayerItemのステータスと

00:32:03.991 --> 00:32:08.362 align:start position:25% line:-2
AVPlayerItemの
エラープロパティを監視します

00:32:09.263 --> 00:32:11.165 align:start position:34% line:-1
致命的なエラーです

00:32:11.865 --> 00:32:15.836 align:start position:32% line:-2
エラーが示された時は
再生が停止しています

00:32:16.470 --> 00:32:19.907 align:start position:27% line:-1
いかにして原因を見つけるか

00:32:20.107 --> 00:32:22.209 align:start position:39% line:-1
例を挙げます

00:32:22.676 --> 00:32:26.813 align:start position:11% line:-2
アプリケーションは
AVPlayerItemのステータスを監視し

00:32:27.147 --> 00:32:29.650 align:start position:29% line:-2
ステータスが
failedに変わったら

00:32:30.284 --> 00:32:35.089 align:start position:18% line:-2
アプリケーションは
AVPlayerのエラープロパティや

00:32:35.355 --> 00:32:39.393 align:start position:16% line:-2
AVPlayerItemのエラーログも
確認します

00:32:41.295 --> 00:32:46.800 align:start position:27% line:-2
AVPlayerItemの
エラープロパティです

00:32:47.034 --> 00:32:49.303 align:start position:30% line:-1
有益な情報を提供します

00:32:50.070 --> 00:32:53.207 align:start position:7% line:-2
AVFoundationErrorDomainの
エラーコード

00:32:53.740 --> 00:32:56.243 align:start position:36% line:-1
ヒントもあります

00:32:56.343 --> 00:33:00.781 align:start position:27% line:-2
AVPlayerItemの
エラーログをチェック

00:32:56.343 --> 00:33:00.781 align:start position:27% line:-2
AVPlayerItemの
エラーログをチェック

00:33:01.415 --> 00:33:07.955 align:start position:27% line:-2
そこから より詳細な情報を
得ることができます

00:33:08.388 --> 00:33:11.391 align:start position:29% line:-1
いつどのデータで起きた―

00:33:11.859 --> 00:33:14.761 align:start position:30% line:-1
どんなタイプのエラーか

00:33:14.928 --> 00:33:18.298 align:start position:30% line:-2
サポートされていない
暗号化フォーマットです

00:33:18.899 --> 00:33:20.801 align:start position:43% line:-1
それから

00:33:21.435 --> 00:33:26.673 align:start position:25% line:-2
エラーが起きた時の
ネットワークインターフェイス

00:33:28.742 --> 00:33:31.979 align:start position:25% line:-1
次はHDCP関連のエラーです

00:33:32.713 --> 00:33:37.251 align:start position:32% line:-2
HDCP保護が必要な
コンテンツの場合

00:33:37.651 --> 00:33:43.156 align:start position:25% line:-2
アプリケーションはこのような
長いプロパティ名を持ちます

00:33:43.624 --> 00:33:48.161 align:start position:0% line:-2
isOutputObscuredDueTo
InsufficientExternalProtection

00:33:49.062 --> 00:33:52.966 align:start position:32% line:-2
このプロパティの値が
trueに変わると

00:33:54.034 --> 00:33:58.138 align:start position:27% line:-2
現在のアイテムが外部保護を
必要としています

00:33:58.572 --> 00:34:01.975 align:start position:30% line:-2
デバイスが保護レベルを
満たしていません

00:33:58.572 --> 00:34:01.975 align:start position:30% line:-2
デバイスが保護レベルを
満たしていません

00:34:02.176 --> 00:34:08.014 align:start position:27% line:-2
ユーザは動画に
問題があることを認識します

00:34:09.449 --> 00:34:11.451 align:start position:34% line:-1
これを避けるために

00:34:12.585 --> 00:34:17.224 align:start position:25% line:-2
マスタープレイリストは
少なくとも１つのバリアントで

00:34:17.791 --> 00:34:21.728 align:start position:27% line:-2
HDCPにフォールバックを
要求しないこと

00:34:22.529 --> 00:34:28.168 align:start position:27% line:-2
すべてのユーザが
HDCP環境とは限りません

00:34:28.869 --> 00:34:33.407 align:start position:29% line:-2
アプリケーションのUIは
プロパティの変更を反映し

00:34:33.507 --> 00:34:35.342 align:start position:34% line:-1
ユーザに知らせます

00:34:36.677 --> 00:34:40.781 align:start position:29% line:-2
再生問題の原因の多くが
コンテンツのオーサリング

00:34:41.047 --> 00:34:43.951 align:start position:34% line:-1
音声や映像のズレや

00:34:44.051 --> 00:34:47.054 align:start position:29% line:-1
グリッチが生じる問題です

00:34:47.920 --> 00:34:51.992 align:start position:27% line:-1
エラーの調査や対処に加えて

00:34:52.592 --> 00:34:57.764 align:start position:34% line:-2
メディアストリーム
検証ツールを

00:34:58.065 --> 00:35:01.368 align:start position:29% line:-2
デベロッパWebサイトで
入手できます

00:34:58.065 --> 00:35:01.368 align:start position:29% line:-2
デベロッパWebサイトで
入手できます

00:35:01.835 --> 00:35:04.171 align:start position:32% line:-1
私の話はここまでです

00:35:04.505 --> 00:35:08.275 align:start position:36% line:-2
同僚のエリック･
ヴァーシェンが―

00:35:10.344 --> 00:35:14.481 align:start position:25% line:-2
マスタープレイリストの
オーサリングについて話します

00:35:14.681 --> 00:35:19.720 align:start position:43% line:-1
(拍手)

00:35:24.658 --> 00:35:25.959 align:start position:41% line:-1
ありがとう

00:35:26.159 --> 00:35:30.097 align:start position:25% line:-2
私はエリック
HLSツールのエンジニアです

00:35:30.531 --> 00:35:36.136 align:start position:27% line:-2
パフォーマンスの計測と
問題の解決を話してきました

00:35:36.603 --> 00:35:41.708 align:start position:30% line:-2
エラーのない再生を
可能にするカギの１つは

00:35:41.809 --> 00:35:45.913 align:start position:30% line:-2
マスタープレイリストの
適切なオーサリングです

00:35:46.113 --> 00:35:50.617 align:start position:30% line:-2
マスタープレイリストは
再生前も再生中も

00:35:50.718 --> 00:35:53.387 align:start position:29% line:-1
正しい決断を促すものです

00:35:53.620 --> 00:35:55.289 align:start position:38% line:-1
だから重要です

00:35:56.690 --> 00:35:59.426 align:start position:36% line:-2
これが私の助言…
というのは冗談で

00:35:59.893 --> 00:36:03.664 align:start position:32% line:-2
このロジャーの言葉を
最後に解説します

00:35:59.893 --> 00:36:03.664 align:start position:32% line:-2
このロジャーの言葉を
最後に解説します

00:36:04.231 --> 00:36:09.036 align:start position:27% line:-2
可能な全エンコーディングを
できるだけ詳細に

00:36:09.136 --> 00:36:11.872 align:start position:30% line:-2
マスタープレイリストに
記載してください

00:36:12.406 --> 00:36:14.475 align:start position:30% line:-1
ストリームの選択とは？

00:36:16.209 --> 00:36:19.479 align:start position:29% line:-2
適切なストリームの選択は
非常に重要です

00:36:20.180 --> 00:36:24.918 align:start position:30% line:-2
マスタープレイリストが
機能していても

00:36:25.018 --> 00:36:26.887 align:start position:34% line:-1
適切とは限りません

00:36:27.321 --> 00:36:30.657 align:start position:34% line:-2
こんなのを
見たことがあります

00:36:30.924 --> 00:36:34.194 align:start position:30% line:-2
間違いではありませんが
役に立ちません

00:36:35.095 --> 00:36:38.098 align:start position:34% line:-2
これはバリアントが
増えています

00:36:38.699 --> 00:36:41.568 align:start position:36% line:-2
多少はマシですが
まだまだです

00:36:41.668 --> 00:36:46.373 align:start position:25% line:-2
コーデックが不明です
HDRなのか60fpsなのか

00:36:46.840 --> 00:36:50.144 align:start position:30% line:-1
あらゆる情報が必要です

00:36:50.510 --> 00:36:53.547 align:start position:32% line:-1
平均帯域幅が分かれば

00:36:53.647 --> 00:36:57.818 align:start position:30% line:-2
どのバリアントにするか
よりよい決断ができます

00:36:58.318 --> 00:37:01.521 align:start position:27% line:-1
ストリームについていけるか

00:36:58.318 --> 00:37:01.521 align:start position:27% line:-1
ストリームについていけるか

00:37:02.522 --> 00:37:07.061 align:start position:30% line:-2
コーデックで
再生できないものを排除

00:37:07.327 --> 00:37:11.198 align:start position:25% line:-2
解像度は選ぶべきバリアントを
教えてくれます

00:37:11.932 --> 00:37:17.571 align:start position:25% line:-2
メディアプレイリストや
セグメントを見るのは最後です

00:37:17.704 --> 00:37:21.441 align:start position:30% line:-2
マスタープレイリストで
先に説明すべきです

00:37:23.010 --> 00:37:26.547 align:start position:25% line:-2
シンプルな
マスタープレイリストの例です

00:37:26.647 --> 00:37:29.950 align:start position:29% line:-2
AVPlayerが
帯域幅の変化に適応したり

00:37:30.050 --> 00:37:33.187 align:start position:29% line:-2
適切なバリアントの選択を
可能にします

00:37:34.421 --> 00:37:39.960 align:start position:29% line:-2
ユーザには見えませんが
ストリームを向上させます

00:37:41.228 --> 00:37:43.230 align:start position:32% line:-1
よくある問題の１つが

00:37:43.330 --> 00:37:47.367 align:start position:36% line:-2
早送りで画像が
見えなくなること

00:37:47.468 --> 00:37:49.737 align:start position:36% line:-1
サムネールもです

00:37:51.071 --> 00:37:52.940 align:start position:20% line:-1
Apple TVのスクラバー･バー

00:37:53.440 --> 00:37:58.011 align:start position:27% line:-2
コンテンツの長さや
現在の再生位置が分かります

00:37:58.645 --> 00:38:04.084 align:start position:20% line:-2
サムネール画像には
iframeプレイリストが必要です

00:37:58.645 --> 00:38:04.084 align:start position:20% line:-2
サムネール画像には
iframeプレイリストが必要です

00:38:04.251 --> 00:38:07.688 align:start position:27% line:-2
iframeプレイリストが
なければ

00:38:07.788 --> 00:38:13.560 align:start position:20% line:-2
iPadやiPhone上の早送りや
巻き戻しで映像が出ません

00:38:14.461 --> 00:38:19.733 align:start position:23% line:-2
iframeプレイリストの前に
通常の動画の話をしましょう

00:38:20.400 --> 00:38:24.805 align:start position:21% line:-2
通常のHLSの動画のセグメントを
視覚化したものです

00:38:24.905 --> 00:38:29.543 align:start position:21% line:-2
各セグメントには複数のフレームの
コンテンツと持続時間

00:38:29.643 --> 00:38:31.445 align:start position:30% line:-1
平均ビットレートがあり

00:38:31.545 --> 00:38:34.648 align:start position:30% line:-2
ビットレートは
セグメントで変わります

00:38:36.350 --> 00:38:38.986 align:start position:36% line:-1
圧縮技術によって

00:38:39.119 --> 00:38:42.956 align:start position:27% line:-2
動画のフレームは
他と関連付けて復号されます

00:38:43.524 --> 00:38:46.427 align:start position:29% line:-1
しかしiframeの場合

00:38:46.593 --> 00:38:48.962 align:start position:36% line:-2
フレームは単独で
復号できます

00:38:49.062 --> 00:38:52.532 align:start position:27% line:-2
これら基本フレームによって
他も復号可能となります

00:38:52.833 --> 00:38:57.804 align:start position:18% line:-2
１つのセグメントに
１つ以上のiframeが存在し得ます

00:38:58.072 --> 00:39:03.911 align:start position:25% line:-2
iframeは規則的な間隔で
現れる必要はありません

00:38:58.072 --> 00:39:03.911 align:start position:25% line:-2
iframeは規則的な間隔で
現れる必要はありません

00:39:05.579 --> 00:39:10.284 align:start position:21% line:-2
iframeプレイリストは
iframeコンテンツを指し示し

00:39:10.384 --> 00:39:13.253 align:start position:30% line:-2
iframeデータしか
ダウンロードされません

00:39:13.754 --> 00:39:15.756 align:start position:29% line:-1
iframeの持続時間は

00:39:15.856 --> 00:39:19.993 align:start position:23% line:-2
そのiframeから
次のiframeまでの時間です

00:39:20.360 --> 00:39:25.799 align:start position:27% line:-2
このiframeは通常の
コンテンツから抽出しました

00:39:26.233 --> 00:39:29.469 align:start position:21% line:-2
高密度iframeプレイリストも
作れます

00:39:30.437 --> 00:39:33.674 align:start position:27% line:-1
通常のコンテンツ用ではなく

00:39:33.807 --> 00:39:36.910 align:start position:20% line:-1
iframeを均等配置するためです

00:39:37.377 --> 00:39:42.916 align:start position:30% line:-2
これなら早送りの時にも
スムーズに流れます

00:39:44.318 --> 00:39:48.088 align:start position:20% line:-2
iframeプレイリストを追加した
マスタープレイリストです

00:39:49.223 --> 00:39:52.292 align:start position:27% line:-1
iframeプレイリストも

00:39:52.392 --> 00:39:56.597 align:start position:30% line:-2
通常のプレイリストと
同じタグを使っています

00:39:56.763 --> 00:40:01.835 align:start position:27% line:-2
違いはフレームレート属性を
サポートしていないことです

00:39:56.763 --> 00:40:01.835 align:start position:27% line:-2
違いはフレームレート属性を
サポートしていないことです

00:40:01.935 --> 00:40:04.271 align:start position:30% line:-1
意味を成さないからです

00:40:04.838 --> 00:40:08.875 align:start position:30% line:-2
テストするために
直接試すことができます

00:40:09.243 --> 00:40:14.014 align:start position:20% line:-2
iframeプレイリストのURIを
Safariに貼り付けます

00:40:14.448 --> 00:40:16.083 align:start position:36% line:-1
１倍速で再生され

00:40:16.183 --> 00:40:22.322 align:start position:21% line:-2
徐々に変わりながら順番に
iframeが表示されるはずです

00:40:23.624 --> 00:40:26.527 align:start position:32% line:-1
ビットレートの違いも

00:40:26.927 --> 00:40:32.499 align:start position:25% line:-2
iframeのビットレートは
通常より低いのが常です

00:40:34.101 --> 00:40:36.470 align:start position:32% line:-1
ビットレートと言えば

00:40:36.570 --> 00:40:41.775 align:start position:25% line:-2
HLSでピークビットレートを
計算する方法を定義しました

00:40:42.376 --> 00:40:43.744 align:start position:36% line:-1
その方法でないと

00:40:43.844 --> 00:40:49.616 align:start position:27% line:-2
セグメントが帯域幅を超えた
というエラーになります

00:40:51.251 --> 00:40:55.122 align:start position:32% line:-2
動画から離れて
音声の話をしましょう

00:40:55.322 --> 00:40:58.659 align:start position:36% line:-2
いかに複数言語を
サポートするか

00:40:59.226 --> 00:41:01.094 align:start position:27% line:-1
これがインターフェイスです

00:40:59.226 --> 00:41:01.094 align:start position:27% line:-1
これがインターフェイスです

00:41:01.195 --> 00:41:05.265 align:start position:34% line:-2
言語のリストがあり
そこから選びます

00:41:07.201 --> 00:41:08.869 align:start position:32% line:-1
プレイリストの例です

00:41:08.969 --> 00:41:12.406 align:start position:32% line:-1
それぞれの音声属性を

00:41:12.706 --> 00:41:18.412 align:start position:27% line:-2
それぞれの動画バリアントに
追加しています

00:41:18.579 --> 00:41:22.916 align:start position:29% line:-2
グループIDとともに
メディアタグも足しました

00:41:23.083 --> 00:41:26.487 align:start position:27% line:-1
グループIDはシンプルに―

00:41:27.321 --> 00:41:32.826 align:start position:25% line:-2
オーディオレンディションと
動画バリアントを関連付けます

00:41:33.760 --> 00:41:38.365 align:start position:21% line:-2
２つのオーディオレンディションの
違いを見てください

00:41:38.799 --> 00:41:43.670 align:start position:21% line:-2
メディアについても
できるだけ詳しく記述してください

00:41:45.005 --> 00:41:47.941 align:start position:27% line:-1
問題になりがちな属性が２つ

00:41:48.042 --> 00:41:51.111 align:start position:29% line:-1
デフォルトと自動選択です

00:41:52.212 --> 00:41:54.681 align:start position:34% line:-2
自動選択は
次のことを示します

00:41:55.349 --> 00:41:58.619 align:start position:32% line:-2
AVPlayerの
メディア選択コードで

00:41:58.719 --> 00:42:03.791 align:start position:29% line:-2
ユーザからの入力なしに
レンディションを選べます

00:41:58.719 --> 00:42:03.791 align:start position:29% line:-2
ユーザからの入力なしに
レンディションを選べます

00:42:04.191 --> 00:42:07.694 align:start position:27% line:-1
大抵は自動選択を設定します

00:42:08.428 --> 00:42:13.767 align:start position:27% line:-2
設定しなければユーザが
自ら選ばなければなりません

00:42:15.669 --> 00:42:20.941 align:start position:23% line:-2
デフォルトはユーザに
好みの言語がない時に選ばれます

00:42:22.075 --> 00:42:25.746 align:start position:30% line:-1
一般的に動画の原語です

00:42:25.946 --> 00:42:30.617 align:start position:30% line:-2
自動選択でデフォルトも
選択可能とします

00:42:31.118 --> 00:42:35.122 align:start position:25% line:-2
デフォルト動画バリアントとは
無関係のデフォルトです

00:42:35.222 --> 00:42:38.725 align:start position:34% line:-2
レンディション内の
デフォルトです

00:42:40.394 --> 00:42:42.996 align:start position:32% line:-2
複数の言語があるのは
いいですが

00:42:43.096 --> 00:42:46.833 align:start position:25% line:-2
5.1chのマルチチャンネル
オーディオを再生したい

00:42:48.335 --> 00:42:53.307 align:start position:25% line:-2
マルチチャンネルオーディオに
未対応のデバイスもあります

00:42:53.407 --> 00:42:58.312 align:start position:32% line:-2
ステレオオプションも
ユーザに提供します

00:42:59.113 --> 00:43:01.749 align:start position:30% line:-1
マトリクスを埋めるべく

00:42:59.113 --> 00:43:01.749 align:start position:30% line:-1
マトリクスを埋めるべく

00:43:02.115 --> 00:43:05.986 align:start position:30% line:-2
すべてのフォーマットで
あらゆる言語に対応

00:43:07.921 --> 00:43:09.223 align:start position:45% line:-1
しかし

00:43:09.823 --> 00:43:15.396 align:start position:25% line:-2
マルチチャンネルオーディオの
フランス語はない

00:43:16.296 --> 00:43:20.534 align:start position:32% line:-2
その場合は代わりに
ステレオコンテンツを

00:43:20.634 --> 00:43:22.703 align:start position:34% line:-1
グループに入れます

00:43:23.737 --> 00:43:27.207 align:start position:27% line:-2
マトリクスのすべての項目を
埋める必要があります

00:43:28.075 --> 00:43:33.146 align:start position:30% line:-2
もう１つプレイリストの
例を見てください

00:43:34.281 --> 00:43:38.218 align:start position:25% line:-1
グループIDが変わっています

00:43:38.318 --> 00:43:42.156 align:start position:27% line:-2
グループIDは
オーディオレンディションと

00:43:42.256 --> 00:43:45.058 align:start position:34% line:-2
動画バリアントを
関連付けるものです

00:43:46.360 --> 00:43:49.363 align:start position:34% line:-2
マルチチャンネルの
グループです

00:43:49.763 --> 00:43:55.269 align:start position:29% line:-2
フランス語はステレオに
してあるのが分かりますね

00:43:55.469 --> 00:44:00.507 align:start position:32% line:-2
コーデックタグが
このグループにある―

00:43:55.469 --> 00:44:00.507 align:start position:32% line:-2
コーデックタグが
このグループにある―

00:44:00.607 --> 00:44:06.447 align:start position:30% line:-2
すべてのコーデックを
示すようにしてください

00:44:08.048 --> 00:44:11.752 align:start position:36% line:-2
動画バリアントを
複製しました

00:44:12.252 --> 00:44:13.954 align:start position:34% line:-1
エントリが２つです

00:44:14.054 --> 00:44:18.292 align:start position:30% line:-2
指し示す音声グループが
違います

00:44:18.392 --> 00:44:21.895 align:start position:30% line:-2
のちほどのスライドでも
同様の複製があります

00:44:23.397 --> 00:44:28.168 align:start position:29% line:-2
複数の音声ビットレートが
ある場合

00:44:28.602 --> 00:44:31.471 align:start position:34% line:-2
高ビットレート音声
だけでなく

00:44:31.572 --> 00:44:36.543 align:start position:32% line:-2
低ビットレートでも
提供するべきでしょう

00:44:36.844 --> 00:44:41.381 align:start position:34% line:-2
レンディションは
先ほどと似ています

00:44:41.515 --> 00:44:46.153 align:start position:30% line:-2
すべてのビットレートに
言語をあてはめます

00:44:47.154 --> 00:44:50.257 align:start position:30% line:-2
どちらも同じ
AACフォーマットです

00:44:50.624 --> 00:44:56.563 align:start position:23% line:-2
別のフォーマットを追加するなら
列を拡張するだけです

00:44:56.997 --> 00:45:02.402 align:start position:30% line:-2
これまで便宜上
言語と呼んできましたが

00:44:56.997 --> 00:45:02.402 align:start position:30% line:-2
これまで便宜上
言語と呼んできましたが

00:45:02.736 --> 00:45:06.907 align:start position:30% line:-2
実際には
NAME属性のことです

00:45:08.275 --> 00:45:13.881 align:start position:25% line:-2
音声グループ名が記された
動画バリアントを見てください

00:45:14.248 --> 00:45:19.052 align:start position:23% line:-2
低ビットレートの動画は
低ビットレートの音声と関連付け

00:45:19.153 --> 00:45:23.323 align:start position:30% line:-2
高ビットレートの動画は
高ビットレートの音声と

00:45:23.924 --> 00:45:26.427 align:start position:29% line:-1
常に このように分けます

00:45:26.994 --> 00:45:32.966 align:start position:21% line:-2
全部の動画バリアントを
低ビットレートの音声と関連付けて

00:45:33.066 --> 00:45:36.336 align:start position:25% line:-2
更に高ビットレートの音声とも
関連付けないように

00:45:36.470 --> 00:45:39.606 align:start position:30% line:-2
そうしてしまうと
高ビットレートの動画が

00:45:39.707 --> 00:45:42.910 align:start position:21% line:-2
高ビットレートと低ビットレートの
音声の間で揺れ動きます

00:45:44.945 --> 00:45:49.516 align:start position:34% line:-2
AC3コンテンツを
追加しました

00:45:49.983 --> 00:45:54.955 align:start position:27% line:-2
ここでも動画バリアントの
エントリを複製していますが

00:45:55.055 --> 00:45:57.458 align:start position:30% line:-2
同じ動画プレイリストを
指しています

00:45:58.025 --> 00:46:02.563 align:start position:23% line:-2
動画バリアントのビットレートが
変わっています

00:45:58.025 --> 00:46:02.563 align:start position:23% line:-2
動画バリアントのビットレートが
変わっています

00:46:02.696 --> 00:46:04.898 align:start position:36% line:-1
なぜなら動画は…

00:46:05.499 --> 00:46:07.834 align:start position:36% line:-2
動画バリアントの
ビットレートは

00:46:07.935 --> 00:46:12.105 align:start position:30% line:-2
動画とレンディションの
ビットレートの合計です

00:46:14.074 --> 00:46:17.511 align:start position:34% line:-1
動画に戻りましょう

00:46:18.212 --> 00:46:19.613 align:start position:30% line:-1
複数のフォーマットです

00:46:19.713 --> 00:46:25.686 align:start position:25% line:-2
HEVCは同じビットレートで
高画質ですし

00:46:25.786 --> 00:46:29.356 align:start position:25% line:-2
ドルビービジョンの
HDRコンテンツも再生したい

00:46:31.024 --> 00:46:33.827 align:start position:29% line:-1
再びマトリクスを埋めます

00:46:33.927 --> 00:46:37.131 align:start position:30% line:-2
どの動画フォーマットを
選んでも

00:46:37.431 --> 00:46:40.367 align:start position:32% line:-2
合理的なバリアントの
集合にしたい

00:46:40.467 --> 00:46:44.037 align:start position:32% line:-2
この並びは
品質に基づく階層です

00:46:44.405 --> 00:46:49.476 align:start position:27% line:-2
それぞれのフォーマットの
各層をバリアントで埋めます

00:46:52.146 --> 00:46:58.385 align:start position:25% line:-2
古いフォーマットの高位の層を
埋める必要はありません

00:46:58.485 --> 00:47:00.120 align:start position:36% line:-1
スキップできます

00:46:58.485 --> 00:47:00.120 align:start position:36% line:-1
スキップできます

00:47:00.254 --> 00:47:05.325 align:start position:27% line:-2
ドルビービジョンに
未対応のデバイスがあります

00:47:05.459 --> 00:47:10.564 align:start position:30% line:-2
フォールバックとして
H.264を提供します

00:47:11.365 --> 00:47:16.370 align:start position:30% line:-2
列ごとにビットレートを
段階的に上げていきます

00:47:17.971 --> 00:47:21.175 align:start position:34% line:-2
１枚のスライドでは
収まりません

00:47:21.275 --> 00:47:22.943 align:start position:38% line:-1
３枚に分けます

00:47:23.210 --> 00:47:26.080 align:start position:25% line:-1
これはH.264のバリアント

00:47:27.414 --> 00:47:29.850 align:start position:25% line:-1
このスライドはHEVCですね

00:47:29.950 --> 00:47:34.855 align:start position:27% line:-2
それぞれが異なる動画
プレイリストを指しています

00:47:35.522 --> 00:47:37.324 align:start position:27% line:-1
これはドルビービジョンです

00:47:37.424 --> 00:47:40.928 align:start position:30% line:-1
音声グループは同じです

00:47:41.228 --> 00:47:44.598 align:start position:29% line:-2
複数の音声フォーマットを
扱う場合

00:47:44.798 --> 00:47:49.436 align:start position:27% line:-2
それぞれに動画バリアントを
複製します

00:47:49.903 --> 00:47:53.440 align:start position:30% line:-2
動画プレイリストの数は
増えません

00:47:53.540 --> 00:47:56.810 align:start position:29% line:-2
プレイリストのエントリが
増えるだけです

00:47:58.011 --> 00:48:00.180 align:start position:39% line:-1
あと一歩です

00:47:58.011 --> 00:48:00.180 align:start position:39% line:-1
あと一歩です

00:48:00.748 --> 00:48:03.550 align:start position:29% line:-2
最後に字幕と
クローズドキャプションを

00:48:04.385 --> 00:48:06.787 align:start position:32% line:-1
どうやるのでしょうか

00:48:07.354 --> 00:48:08.388 align:start position:39% line:-1
バリアントで

00:48:08.489 --> 00:48:13.894 align:start position:23% line:-2
字幕とクローズドキャプションの
グループを示します

00:48:13.994 --> 00:48:17.464 align:start position:36% line:-2
動画バリアントに
属性を追加して

00:48:18.398 --> 00:48:20.534 align:start position:27% line:-1
レンディションを記述します

00:48:20.734 --> 00:48:23.437 align:start position:29% line:-2
クローズドキャプションの
レンディションには

00:48:23.537 --> 00:48:25.606 align:start position:30% line:-1
URI属性がありません

00:48:26.340 --> 00:48:30.377 align:start position:29% line:-2
クローズドキャプションの
データは

00:48:30.477 --> 00:48:34.481 align:start position:29% line:-2
動画コンテンツ内にあると
システムは理解します

00:48:36.550 --> 00:48:42.323 align:start position:25% line:-2
ロジャーの“すべてを与えろ”
とはこういうことです

00:48:43.557 --> 00:48:46.427 align:start position:29% line:-1
今日の話をまとめましょう

00:48:46.560 --> 00:48:49.463 align:start position:29% line:-2
エミールは
パフォーマンスの測定の話

00:48:49.563 --> 00:48:52.433 align:start position:30% line:-2
算出方法と意味について
話しました

00:48:52.599 --> 00:48:56.503 align:start position:36% line:-2
ジェンヘンは
起動時間の短縮と

00:48:56.770 --> 00:49:01.208 align:start position:34% line:-2
ストールやエラーの
解決法を話しました

00:48:56.770 --> 00:49:01.208 align:start position:34% line:-2
ストールやエラーの
解決法を話しました

00:49:01.308 --> 00:49:03.710 align:start position:27% line:-2
私は
マスタープレイリストの話を

00:49:04.077 --> 00:49:09.416 align:start position:30% line:-2
HLS検証ツールは
マスタープレイリストや

00:49:09.516 --> 00:49:12.319 align:start position:30% line:-2
メディアプレイリストの
問題を突き止めます

00:49:12.453 --> 00:49:14.655 align:start position:34% line:-1
使う価値はあります

00:49:16.123 --> 00:49:21.528 align:start position:18% line:-2
更に詳しい情報は
デベロッパWebサイトをご覧ください

00:49:21.895 --> 00:49:24.932 align:start position:30% line:-2
以上です
ありがとうございました

00:49:25.065 --> 00:49:28.135 align:start position:43% line:-1
(拍手)
