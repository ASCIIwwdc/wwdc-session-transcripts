WEBVTT

00:00:07.107 --> 00:00:15.949 align:start position:43% line:-1
(音楽)

00:00:23.524 --> 00:00:30.564 align:start position:43% line:-1
(拍手)

00:00:30.664 --> 00:00:34.768 align:start position:2% line:-2
“Create Your Own Swift
Playgrounds Subscription”です

00:00:34.868 --> 00:00:36.803 align:start position:29% line:-1
昨夜はBashを満喫し―

00:00:36.904 --> 00:00:41.341 align:start position:12% line:-2
Swift Playgroundsについて
学ぶ準備はできていますね

00:00:41.441 --> 00:00:42.409 align:start position:39% line:-1
私はグレース

00:00:42.509 --> 00:00:43.577 align:start position:38% line:-1
私はホリーです

00:00:43.677 --> 00:00:45.579 align:start position:18% line:-2
Swift Playgroundsの
エンジニアです

00:00:45.679 --> 00:00:48.448 align:start position:14% line:-2
Xcode Source Editorの
エンジニアです

00:00:49.850 --> 00:00:51.485 align:start position:16% line:-1
Swift Playgroundsは―

00:00:51.618 --> 00:00:55.255 align:start position:16% line:-2
Swiftプログラミング言語で
コーディングできるiPad用Appです

00:00:55.522 --> 00:01:00.727 align:start position:16% line:-2
自作のPlayground Bookを
購読してもらい シェアできます

00:00:55.522 --> 00:01:00.727 align:start position:16% line:-2
自作のPlayground Bookを
購読してもらい シェアできます

00:01:00.861 --> 00:01:05.632 align:start position:16% line:-2
今日はプレイグラウンドや
Playground Bookを作成し

00:01:05.732 --> 00:01:10.237 align:start position:29% line:-2
オンラインでコンテンツを
管理する方法も説明します

00:01:11.171 --> 00:01:14.174 align:start position:23% line:-1
セッションは全部で４パートです

00:01:14.608 --> 00:01:17.444 align:start position:16% line:-2
まず Playground Bookの
フォーマットについて

00:01:17.544 --> 00:01:21.248 align:start position:25% line:-2
次に Xcode 9.3用の
テンプレートについて

00:01:21.481 --> 00:01:24.284 align:start position:11% line:-2
さらに Swift Playgroundsの
購読フォーマット

00:01:24.384 --> 00:01:27.487 align:start position:21% line:-1
そしてオンラインでの管理方法です

00:01:27.855 --> 00:01:31.358 align:start position:32% line:-2
私は一旦 退場します
また後で

00:01:33.393 --> 00:01:36.663 align:start position:16% line:-2
グレースと私は
Core Image APIに関する―

00:01:36.763 --> 00:01:40.334 align:start position:12% line:-1
Playground Bookを作りました

00:01:40.434 --> 00:01:47.641 align:start position:9% line:-2
今日は CIFilterに関する
Playground Bookを作っていきます

00:01:47.741 --> 00:01:52.379 align:start position:27% line:-2
後ろに私がブックの中で
楽しんでいるのが見えますね

00:01:52.479 --> 00:01:57.017 align:start position:11% line:-2
Distortion Filtersについて
説明している章です

00:01:58.552 --> 00:02:01.788 align:start position:20% line:-2
Playground Bookでは
特定のトピックの―

00:01:58.552 --> 00:02:01.788 align:start position:20% line:-2
Playground Bookでは
特定のトピックの―

00:02:01.889 --> 00:02:04.958 align:start position:32% line:-2
インタラクティブな
ガイドを作成できます

00:02:05.058 --> 00:02:09.029 align:start position:23% line:-1
学習者を複数の章に沿って導き―

00:02:09.128 --> 00:02:12.199 align:start position:25% line:-1
さらにページに細分化できます

00:02:12.499 --> 00:02:16.436 align:start position:21% line:-2
各ページにはソースエディタがあり
左側に表示されます

00:02:16.570 --> 00:02:21.041 align:start position:23% line:-2
さらにオプションで
常にライブビューを実装できます

00:02:21.141 --> 00:02:23.310 align:start position:34% line:-1
この右側の部分です

00:02:23.410 --> 00:02:29.082 align:start position:21% line:-2
ライブビューはソースエディタの
結果を視覚化するために使われます

00:02:30.517 --> 00:02:35.956 align:start position:25% line:-2
単一ファイルに集約するために
形式はパッケージベースです

00:02:36.089 --> 00:02:40.627 align:start position:16% line:-2
１つのPlayground Bookが
階層化されたファイルなのです

00:02:41.595 --> 00:02:44.264 align:start position:29% line:-2
ファイルには各章の
サブディレクトリが含まれ

00:02:44.631 --> 00:02:49.269 align:start position:32% line:-2
各ページのフォルダは
章にネストされます

00:02:50.170 --> 00:02:54.141 align:start position:25% line:-2
その中に ソースエディタでの
コードの実行や―

00:02:54.241 --> 00:02:58.812 align:start position:27% line:-2
ライブビュー表示のために
必要なリソースが含まれます

00:03:02.416 --> 00:03:06.486 align:start position:23% line:-2
また 各階層には
プロパティリストファイルがあり

00:03:06.587 --> 00:03:08.922 align:start position:12% line:-1
Playground Bookを構成したり

00:03:09.022 --> 00:03:13.360 align:start position:27% line:-2
目次を作成したりするための
メタデータが入っています

00:03:14.528 --> 00:03:19.099 align:start position:27% line:-2
最後に 学習者に表示される
コンテンツに加えて―

00:03:19.299 --> 00:03:23.971 align:start position:23% line:-2
補助ソースと呼ばれる
Swiftファイルが含まれます

00:03:24.738 --> 00:03:28.008 align:start position:21% line:-2
これらは“Sources”という
フォルダに格納されます

00:03:28.308 --> 00:03:31.678 align:start position:23% line:-2
補助ソースはSwiftコードの
追加を可能にします

00:03:31.778 --> 00:03:36.750 align:start position:12% line:-2
Playground Bookで使用可能な
クラスやヘルパ関数です

00:03:38.285 --> 00:03:42.022 align:start position:27% line:-2
補助ソースファイルを使用し
様々なタスクを実行できます

00:03:42.122 --> 00:03:44.024 align:start position:36% line:-1
ソースを使って―

00:03:44.124 --> 00:03:48.996 align:start position:27% line:-2
各ページに記述するコードを
大幅に簡略化できます

00:03:50.330 --> 00:03:52.833 align:start position:30% line:-1
補助ソースを使用した―

00:03:52.933 --> 00:03:55.569 align:start position:29% line:-2
ライブビューとの
やり取りを見てみましょう

00:03:58.172 --> 00:04:00.174 align:start position:0% line:-2
PlaygroundLiveViewMessageHandler
から―

00:03:58.172 --> 00:04:00.174 align:start position:0% line:-2
PlaygroundLiveViewMessageHandler
から―

00:04:00.274 --> 00:04:04.778 align:start position:23% line:-2
メソッドを呼び出し
ライブビューに値を送信できます

00:04:04.878 --> 00:04:07.581 align:start position:18% line:-2
Playground Support
フレームワークで宣言されます

00:04:09.116 --> 00:04:12.586 align:start position:18% line:-2
PlaygroundValueとして
メッセージが送信されます

00:04:12.819 --> 00:04:17.257 align:start position:11% line:-2
PlaygroundValuesはENUMで
フレームワークで宣言されます

00:04:18.992 --> 00:04:22.095 align:start position:9% line:-2
オブジェクトをPlaygroundValueに
変換するため―

00:04:22.196 --> 00:04:25.032 align:start position:9% line:-2
“LiveViewSupport.swift”
というファイルに―

00:04:25.132 --> 00:04:27.734 align:start position:2% line:-2
PlaygroundValueConvertibleを
記述しました

00:04:27.835 --> 00:04:33.173 align:start position:11% line:-2
ファイルは各Playground Bookの
Sourcesフォルダに入れます

00:04:33.473 --> 00:04:38.946 align:start position:27% line:-2
例えば CIFilterを
ライブビューに送りたい時は

00:04:39.046 --> 00:04:42.516 align:start position:2% line:-2
PlaygroundValueConvertibleに
準拠するよう型を拡張し

00:04:42.616 --> 00:04:45.819 align:start position:11% line:-2
asPlaygroundValueメソッドを
実装します

00:04:45.919 --> 00:04:49.723 align:start position:11% line:-2
元のオブジェクトを
PlaygroundValueに変換できます

00:04:51.158 --> 00:04:53.927 align:start position:21% line:-2
さらにヘルパ関数である
sendValueも記述しました

00:04:54.027 --> 00:05:00.467 align:start position:11% line:-2
現在のページのライブビューを
PlaygroundValueとして送ります

00:04:54.027 --> 00:05:00.467 align:start position:11% line:-2
現在のページのライブビューを
PlaygroundValueとして送ります

00:05:00.868 --> 00:05:02.135 align:start position:38% line:-1
そして最後に―

00:05:02.603 --> 00:05:07.274 align:start position:21% line:-2
ライブビューに
送信したいオブジェクトがある時は

00:05:07.374 --> 00:05:09.476 align:start position:20% line:-1
単にsendValueを呼び出して

00:05:09.576 --> 00:05:15.883 align:start position:7% line:-2
“pagescontents.swift”にある
隠しコードの引数として送ります

00:05:16.049 --> 00:05:20.087 align:start position:32% line:-2
補助ソースファイルに
記述したコードは

00:05:20.187 --> 00:05:26.527 align:start position:23% line:-2
ライブビューに必要だった値から
大幅に簡略化できました

00:05:28.695 --> 00:05:32.666 align:start position:5% line:-2
Playground Bookパッケージの
詳細は developer.apple.comの―

00:05:32.766 --> 00:05:36.570 align:start position:7% line:-2
“Playground Book
Format Reference”をご覧ください

00:05:38.906 --> 00:05:44.811 align:start position:9% line:-2
それでは Swift Playgroundsの
テンプレートを見てみましょう

00:05:47.080 --> 00:05:50.717 align:start position:20% line:-2
このテンプレートは
Xcodeプロジェクトの出発点です

00:05:50.818 --> 00:05:55.189 align:start position:9% line:-2
Playground Bookの作成やデバッグ
プロデュースを手助けし

00:05:55.689 --> 00:06:00.427 align:start position:18% line:-2
Appのように ライブビューに対する
コードを見ていけます

00:05:55.689 --> 00:06:00.427 align:start position:18% line:-2
Appのように ライブビューに対する
コードを見ていけます

00:06:00.527 --> 00:06:06.934 align:start position:21% line:-2
それによりバグをより簡単に発見し
効率的に開発が進められます

00:06:07.034 --> 00:06:10.170 align:start position:20% line:-2
これが CIFilterの
Playground Bookの―

00:06:10.270 --> 00:06:13.340 align:start position:23% line:-1
ライブビューに対するコードです

00:06:15.342 --> 00:06:20.480 align:start position:5% line:-2
テンプレートのダウンロードは
developer.apple.comより可能です

00:06:22.916 --> 00:06:24.718 align:start position:23% line:-1
このXcodeプロジェクトは―

00:06:24.818 --> 00:06:28.255 align:start position:11% line:-2
今年リリースの
Swift Playgrounds 2.1と

00:06:28.355 --> 00:06:30.090 align:start position:20% line:-1
Xcode 9.3に対応しています

00:06:31.225 --> 00:06:35.362 align:start position:14% line:-2
Swift 4.1コンパイラで構築された
フレームワークが含まれています

00:06:35.462 --> 00:06:38.899 align:start position:9% line:-2
お見せしているのは
Swift Playgrounds 2.1です

00:06:38.999 --> 00:06:43.036 align:start position:18% line:-2
したがって Xcodeのバージョンも
Swift 4.1を―

00:06:43.136 --> 00:06:45.138 align:start position:30% line:-1
使用することが重要です

00:06:47.341 --> 00:06:49.576 align:start position:34% line:-1
テンプレートには―

00:06:49.676 --> 00:06:53.814 align:start position:9% line:-2
３種類のターゲットがあり
Playground Bookの作成を助けます

00:06:54.014 --> 00:06:56.316 align:start position:18% line:-1
１つ目がPlaygroundBook

00:06:56.416 --> 00:06:58.485 align:start position:21% line:-1
２つ目がBook Sources

00:06:58.652 --> 00:07:01.388 align:start position:12% line:-1
３つ目がLiveViewTestAppです

00:06:58.652 --> 00:07:01.388 align:start position:12% line:-1
３つ目がLiveViewTestAppです

00:07:02.990 --> 00:07:06.493 align:start position:11% line:-2
PlaygroundBookターゲットでは
Playground Bookが作成されます

00:07:06.593 --> 00:07:10.998 align:start position:16% line:-2
Xcodeのプロジェクトナビゲータで
Productsグループが確認できます

00:07:11.398 --> 00:07:15.402 align:start position:11% line:-2
すべてのファイルは Xcodeの
PlaygroundBookのグループにあり

00:07:15.502 --> 00:07:21.308 align:start position:12% line:-2
Playground Bookにまず必要な
１章と１ページが含まれます

00:07:22.276 --> 00:07:26.079 align:start position:23% line:-2
テンプレートには
常時ライブビューを可能にする―

00:07:26.180 --> 00:07:31.485 align:start position:23% line:-2
ブックレベルの２つの
補助ソースファイルも含まれます

00:07:32.586 --> 00:07:35.189 align:start position:16% line:-2
次に
Book Sourcesターゲットは―

00:07:35.289 --> 00:07:37.558 align:start position:32% line:-2
すべての補助ソースを
コンパイルします

00:07:37.658 --> 00:07:40.194 align:start position:34% line:-2
このターゲットの
ファイルはすべて―

00:07:40.294 --> 00:07:45.232 align:start position:14% line:-2
PlaygroundBookグループ内の
Sourcesグループで見られます

00:07:46.133 --> 00:07:48.001 align:start position:23% line:-1
ソースをコンパイルすることで―

00:07:48.101 --> 00:07:52.239 align:start position:21% line:-2
ブックレベルのソースを
エディタで展開できるようにします

00:07:52.506 --> 00:07:55.876 align:start position:20% line:-1
他のXcodeプロジェクトと同じく

00:07:55.976 --> 00:08:00.380 align:start position:18% line:-2
コード補完やQuick Helpなど
すべての機能が使えます

00:07:55.976 --> 00:08:00.380 align:start position:18% line:-2
コード補完やQuick Helpなど
すべての機能が使えます

00:08:00.814 --> 00:08:04.151 align:start position:14% line:-2
そして LiveViewTestAppが
このターゲットを使い―

00:08:04.251 --> 00:08:06.053 align:start position:29% line:-1
ライブビューを表示します

00:08:06.153 --> 00:08:08.488 align:start position:27% line:-1
ここでデバッグを行うには―

00:08:08.589 --> 00:08:12.960 align:start position:29% line:-2
ブックレベルのソースでの
実装が必要です

00:08:14.361 --> 00:08:17.331 align:start position:16% line:-2
最後に LiveViewTestApp
ターゲットです

00:08:17.564 --> 00:08:19.500 align:start position:27% line:-1
このターゲットのファイルは

00:08:19.600 --> 00:08:22.436 align:start position:12% line:-2
XcodeのLiveViewTestApp
グループにあります

00:08:23.537 --> 00:08:27.608 align:start position:9% line:-2
Playground Bookのライブビューを
表示するAppを作成します

00:08:27.708 --> 00:08:31.011 align:start position:11% line:-2
Swift Playgroundsで見るのと
同等です

00:08:31.311 --> 00:08:32.913 align:start position:36% line:-1
前述したとおり―

00:08:33.113 --> 00:08:37.650 align:start position:27% line:-2
実装するのはブックレベルの
補助リソース内です

00:08:38.552 --> 00:08:41.955 align:start position:12% line:-2
LiveViewTestAppを使用すると
デバッグが―

00:08:42.054 --> 00:08:44.825 align:start position:23% line:-2
フルスクリーンや
サイド･バイ･サイドで可能です

00:08:44.925 --> 00:08:48.228 align:start position:18% line:-2
Swift Playgroundsに
エクスポートする必要はありません

00:08:49.062 --> 00:08:53.500 align:start position:16% line:-2
LiveViewTestAppは
iPadとiOSシミュレータで動きます

00:08:55.469 --> 00:08:59.406 align:start position:25% line:-2
テンプレートには ３つの
補助フレームワークがあります

00:09:00.040 --> 00:09:05.112 align:start position:5% line:-2
最初の２つが PlaygroundSupportと
PlaygroundBluetoothです

00:09:05.312 --> 00:09:07.214 align:start position:21% line:-1
これらをプロジェクトに追加すれば

00:09:07.314 --> 00:09:13.787 align:start position:23% line:-2
フレームワークのAPIを
最大限に活用することができます

00:09:14.855 --> 00:09:18.392 align:start position:25% line:-2
３つ目のフレームワークは
LiveViewHostです

00:09:18.492 --> 00:09:22.663 align:start position:21% line:-2
LiveViewTestAppで
表示用に使用します

00:09:25.899 --> 00:09:32.272 align:start position:21% line:-2
ライブビューの実装には すべての
補助ソースコードが必要です

00:09:32.472 --> 00:09:34.007 align:start position:34% line:-1
テンプレートには―

00:09:34.107 --> 00:09:38.979 align:start position:4% line:-2
“LiveViewController.swift”
というファイルが含まれています

00:09:39.513 --> 00:09:44.017 align:start position:21% line:-2
またライブビューのインスタンスを
ロードするヘルパ関数が―

00:09:44.117 --> 00:09:46.920 align:start position:4% line:-2
“LiveViewSupport.swift”という
ファイルにあります

00:09:47.287 --> 00:09:50.858 align:start position:23% line:-1
他にも必要なファイルを追加でき

00:09:50.958 --> 00:09:55.162 align:start position:12% line:-2
どのPlaygroundsフレームワークも
使用可能です

00:09:57.197 --> 00:10:02.202 align:start position:23% line:-2
テンプレートにはUIを構築する
Storyboardもあります

00:09:57.197 --> 00:10:02.202 align:start position:23% line:-2
テンプレートにはUIを構築する
Storyboardもあります

00:10:02.870 --> 00:10:07.608 align:start position:16% line:-2
Playground Bookに必要な
他のリソースも追加可能です

00:10:08.642 --> 00:10:13.113 align:start position:12% line:-2
そしてtest appの
live view testを設定するには

00:10:13.213 --> 00:10:16.717 align:start position:14% line:-2
“AppDelegate.swift”に
メソッドを実装します

00:10:16.817 --> 00:10:20.621 align:start position:12% line:-1
特にsetUpLiveViewメソッドです

00:10:21.088 --> 00:10:22.022 align:start position:36% line:-1
デフォルトでは―

00:10:22.122 --> 00:10:26.226 align:start position:16% line:-2
LiveViewControllerの
インスタンスをロードします

00:10:26.326 --> 00:10:29.563 align:start position:5% line:-2
LiveViewSupport.swiftの説明で
述べたヘルパメソッドで

00:10:29.663 --> 00:10:31.698 align:start position:9% line:-1
“instantiateLiveView”です

00:10:33.500 --> 00:10:36.303 align:start position:25% line:-1
ここでグレースを呼びましょう

00:10:36.403 --> 00:10:41.174 align:start position:11% line:-2
テンプレートで作成した
Playground Bookを見ていきます

00:10:41.508 --> 00:10:47.781 align:start position:43% line:-1
(拍手)

00:10:50.150 --> 00:10:52.853 align:start position:23% line:-2
これが
私のXcodeプロジェクトです

00:10:52.953 --> 00:10:55.422 align:start position:34% line:-1
先ほどお見せした―

00:10:55.522 --> 00:10:57.691 align:start position:20% line:-2
CIFilterに関する
Playground Bookです

00:10:57.825 --> 00:11:02.262 align:start position:12% line:-2
このPlayground Bookの目的は
学習者がCore Imageフィルタを―

00:10:57.825 --> 00:11:02.262 align:start position:12% line:-2
このPlayground Bookの目的は
学習者がCore Imageフィルタを―

00:11:02.362 --> 00:11:07.234 align:start position:23% line:-2
作成して操作し ライブビューで
起動できるようにすること

00:11:07.334 --> 00:11:11.271 align:start position:25% line:-2
また それをライブカメラで
確認できるようにすることです

00:11:12.306 --> 00:11:16.143 align:start position:4% line:-2
“LiveViewController.swift”
フォルダを見ます

00:11:16.710 --> 00:11:20.714 align:start position:25% line:-2
テンプレートにある
メソッドの１つを実装しました

00:11:20.914 --> 00:11:26.987 align:start position:23% line:-2
カメラへの出力表示をするために
必要なコードを追加しました

00:11:27.855 --> 00:11:33.927 align:start position:12% line:-2
出力の際にはCore Imageフィルタを
適用したいので

00:11:34.027 --> 00:11:37.431 align:start position:30% line:-2
ブックレベルのソースに
ファイルを追加しました

00:11:37.531 --> 00:11:42.936 align:start position:11% line:-2
ライブカメラ出力時に
FilterRendererを実装したのです

00:11:43.370 --> 00:11:47.341 align:start position:12% line:-2
LiveViewTestAppターゲットを
選択すると

00:11:47.641 --> 00:11:50.110 align:start position:32% line:-1
コードが実行されます

00:11:50.210 --> 00:11:52.813 align:start position:29% line:-1
ライブビューを見ましょう

00:11:53.347 --> 00:11:57.818 align:start position:29% line:-2
サイド･バイ･サイドで
表示するよう設定しました

00:11:58.986 --> 00:12:01.955 align:start position:32% line:-1
このような見え方です

00:11:58.986 --> 00:12:01.955 align:start position:32% line:-1
このような見え方です

00:12:02.122 --> 00:12:03.156 align:start position:36% line:-1
ソースコードが―

00:12:03.257 --> 00:12:07.161 align:start position:18% line:-2
Swift Playgroundsで
横に表示されます

00:12:07.261 --> 00:12:13.400 align:start position:23% line:-2
シミュレート用に左側に
いくつかのボタンを追加しました

00:12:13.500 --> 00:12:15.569 align:start position:23% line:-1
test app用のコードです

00:12:15.669 --> 00:12:18.405 align:start position:30% line:-1
グレースがタップすると

00:12:18.572 --> 00:12:21.909 align:start position:29% line:-1
フィルタが適用されました

00:12:22.009 --> 00:12:23.410 align:start position:41% line:-1
すばらしい

00:12:23.510 --> 00:12:28.815 align:start position:18% line:-2
今度は“CIPointillize”
フィルタを試してみましょう

00:12:28.916 --> 00:12:30.450 align:start position:38% line:-1
タップすると…

00:12:32.186 --> 00:12:34.388 align:start position:32% line:-1
同じように見えますが

00:12:34.488 --> 00:12:38.892 align:start position:27% line:-2
先ほどのピンクのフィルタが
縁に残っています

00:12:38.992 --> 00:12:44.231 align:start position:21% line:-2
Pointillizeフィルタの
サイズが小さかったのです

00:12:44.331 --> 00:12:50.037 align:start position:11% line:-2
FilterRendererにバグがあるので
Xcodeに戻りましょう

00:12:50.337 --> 00:12:51.905 align:start position:27% line:-1
renderという関数です

00:12:52.005 --> 00:12:56.009 align:start position:18% line:-2
Open Quickly機能を使って
呼び出します

00:12:57.077 --> 00:13:01.415 align:start position:21% line:-2
さらにメソッドがリターンする前に
ブレークポイントを設定

00:12:57.077 --> 00:13:01.415 align:start position:21% line:-2
さらにメソッドがリターンする前に
ブレークポイントを設定

00:13:01.515 --> 00:13:06.286 align:start position:21% line:-2
ライブカメラ出力時のフレームには
フィルタが適用されており

00:13:06.386 --> 00:13:10.424 align:start position:30% line:-2
このブレークポイントが
適用されるはずです

00:13:10.958 --> 00:13:13.126 align:start position:27% line:-1
ブレークポイントに来ました

00:13:13.227 --> 00:13:17.431 align:start position:25% line:-2
デバッグコンソールを使用して
変数を調べられます

00:13:17.531 --> 00:13:22.035 align:start position:27% line:-2
今 見たいのはソース画像の
サイズです

00:13:24.738 --> 00:13:29.443 align:start position:29% line:-2
フィルタ適用後の画像との
違いを確認します

00:13:31.879 --> 00:13:37.718 align:start position:27% line:-2
適用後のほうが元の画像より
大きいことが分かります

00:13:37.885 --> 00:13:41.421 align:start position:27% line:-2
59行目で
フィルタ適用後のサイズで―

00:13:41.522 --> 00:13:43.857 align:start position:30% line:-1
レンダリングしています

00:13:43.957 --> 00:13:47.928 align:start position:23% line:-2
ソース画像のサイズにしたいので
修正します

00:13:48.595 --> 00:13:51.031 align:start position:27% line:-2
ブレークポイントを無効にし
再実行

00:13:53.300 --> 00:13:55.235 align:start position:27% line:-1
iPadに戻ってみましょう

00:13:58.739 --> 00:14:01.241 align:start position:32% line:-1
先ほどと同じ手順です

00:13:58.739 --> 00:14:01.241 align:start position:32% line:-1
先ほどと同じ手順です

00:14:01.341 --> 00:14:05.879 align:start position:16% line:-2
“CIColorMatrix”の後に
“CIPointillize”をタップ

00:14:06.313 --> 00:14:09.783 align:start position:14% line:-2
Pointillizeフィルタのサイズが
正しくなりました

00:14:09.883 --> 00:14:13.854 align:start position:29% line:-2
元のライブカメラ出力時と
同じサイズです

00:14:13.954 --> 00:14:16.190 align:start position:29% line:-1
正しいコードになったので

00:14:16.290 --> 00:14:19.026 align:start position:21% line:-2
Playground Bookを
パッケージ化します

00:14:19.126 --> 00:14:22.830 align:start position:11% line:-2
Swift Playgroundsにコピーし
実際の見え方を確認します

00:14:22.930 --> 00:14:24.965 align:start position:29% line:-1
そしてXcodeに戻り―

00:14:25.065 --> 00:14:28.001 align:start position:12% line:-1
PlaygroundBookスキームを選択

00:14:28.602 --> 00:14:29.970 align:start position:29% line:-1
“Build”を押せば―

00:14:30.070 --> 00:14:34.675 align:start position:12% line:-2
Build Productsグループの下に
置かれます

00:14:34.775 --> 00:14:37.344 align:start position:20% line:-1
AirDropやiCloudを使い

00:14:37.444 --> 00:14:40.547 align:start position:18% line:-2
Swift Playgroundsに
コピーできますが

00:14:40.647 --> 00:14:42.549 align:start position:32% line:-1
事前にコピー済みです

00:14:42.649 --> 00:14:47.221 align:start position:11% line:-2
iPadに戻って
Swift Playgroundsを開きます

00:14:48.155 --> 00:14:51.492 align:start position:11% line:-2
Test Out CIFilter!の
Playground Bookができています

00:14:51.592 --> 00:14:54.695 align:start position:25% line:-1
ライブビューを見てみましょう

00:14:55.929 --> 00:15:00.167 align:start position:27% line:-2
ソースエディタには
CIFilterがあります

00:14:55.929 --> 00:15:00.167 align:start position:27% line:-2
ソースエディタには
CIFilterがあります

00:15:00.267 --> 00:15:02.870 align:start position:27% line:-1
入力値の一部を操作しました

00:15:02.970 --> 00:15:08.175 align:start position:14% line:-2
“Run My Code”をタップすると
カメラの出力が確認できます

00:15:12.146 --> 00:15:15.015 align:start position:25% line:-1
この色が本当に気に入ってるの

00:15:15.115 --> 00:15:18.018 align:start position:29% line:-1
私たちはどう見えるかな？

00:15:18.118 --> 00:15:18.919 align:start position:41% line:-1
どうって？

00:15:19.019 --> 00:15:21.154 align:start position:32% line:-1
エンジニアみたいよね

00:15:21.255 --> 00:15:21.855 align:start position:41% line:-1
もちろん！

00:15:21.955 --> 00:15:22.789 align:start position:41% line:-1
(笑い声)

00:15:22.890 --> 00:15:27.661 align:start position:34% line:-1
(拍手)(笑い声)

00:15:27.761 --> 00:15:31.231 align:start position:18% line:-2
Swift Playgroundsの
テンプレートを使った―

00:15:31.331 --> 00:15:34.434 align:start position:29% line:-2
コードの記述とデバッグを
ご覧いただきました

00:15:34.535 --> 00:15:39.206 align:start position:27% line:-2
新しいワークフローが
皆さんの役に立ちますように

00:15:39.339 --> 00:15:44.344 align:start position:14% line:-2
ではSwift Playgroundsの
購読に移りましょう

00:15:44.945 --> 00:15:48.982 align:start position:43% line:-1
(拍手)

00:15:49.082 --> 00:15:51.518 align:start position:34% line:-1
ありがとう　ホリー

00:15:52.252 --> 00:15:57.491 align:start position:18% line:-2
Swift Playgroundsの
テンプレートについて学んだので

00:15:57.591 --> 00:16:01.228 align:start position:30% line:-2
作成したドキュメントの
購読に移りましょう

00:15:57.591 --> 00:16:01.228 align:start position:30% line:-2
作成したドキュメントの
購読に移りましょう

00:16:02.996 --> 00:16:05.365 align:start position:34% line:-1
その前に購読とは？

00:16:05.532 --> 00:16:09.570 align:start position:27% line:-2
Podcastや
雑誌の定期購読と同じですね

00:16:09.670 --> 00:16:14.274 align:start position:23% line:-2
新しいコンテンツが公開されると
購読者が認識します

00:16:14.608 --> 00:16:18.011 align:start position:23% line:-2
Appleのコンテンツと一緒に
表示されます

00:16:18.212 --> 00:16:20.681 align:start position:23% line:-1
新しいドキュメントを発行すると

00:16:20.781 --> 00:16:25.385 align:start position:11% line:-2
Swift Playgroundsが読み取り
新規ドキュメントとして表示します

00:16:27.321 --> 00:16:31.191 align:start position:30% line:-2
ユーザはウェブサイトで
購読することができます

00:16:35.162 --> 00:16:40.000 align:start position:29% line:-2
購読されたドキュメントは
オンラインに置かれます

00:16:40.400 --> 00:16:44.037 align:start position:27% line:-2
コンテンツの発行には
JSONファイルを使います

00:16:44.138 --> 00:16:46.707 align:start position:18% line:-2
Swift Playgroundsが
ダウンロードするのに―

00:16:46.974 --> 00:16:48.475 align:start position:30% line:-1
必要なデータを含みます

00:16:50.444 --> 00:16:56.583 align:start position:18% line:-2
JSONはデータの保存と交換のための
テキストベースのフォーマットです

00:16:57.017 --> 00:17:00.120 align:start position:18% line:-2
目的は
JSONオブジェクトのコンシューマに

00:16:57.017 --> 00:17:00.120 align:start position:18% line:-2
目的は
JSONオブジェクトのコンシューマに

00:17:00.220 --> 00:17:03.156 align:start position:23% line:-1
キーに対する値を伝えることです

00:17:03.290 --> 00:17:06.393 align:start position:29% line:-2
例として ドキュメントの
キータイトルを―

00:17:06.727 --> 00:17:10.297 align:start position:5% line:-1
“WWDC Photo Filters”としました

00:17:12.733 --> 00:17:15.301 align:start position:20% line:-2
Playgroundフィード形式は
２つに分かれます

00:17:15.402 --> 00:17:19.506 align:start position:23% line:-2
１つは購読されるドキュメントの
説明となる部分

00:17:19.772 --> 00:17:24.611 align:start position:27% line:-2
もう１つは各ドキュメントの
内容に関する部分です

00:17:25.945 --> 00:17:30.450 align:start position:30% line:-2
使用するフィード形式を
見ていきましょう

00:17:33.053 --> 00:17:34.988 align:start position:27% line:-1
最初のキーは“title”

00:17:35.189 --> 00:17:38.559 align:start position:23% line:-1
値は文字列でなければなりません

00:17:38.826 --> 00:17:42.663 align:start position:30% line:-2
JSONにあるとおり
タイトルが表示されます

00:17:42.763 --> 00:17:45.833 align:start position:18% line:-2
Swift Playgroundsの
購読の欄です

00:17:47.868 --> 00:17:51.038 align:start position:23% line:-2
次のキーは 皆さんの名前
“publisherName”

00:17:51.538 --> 00:17:56.510 align:start position:25% line:-2
この値も文字列で
パブリッシャーの名前として―

00:17:56.777 --> 00:18:00.781 align:start position:29% line:-2
各ドキュメントの
詳細ビューに表示されます

00:17:56.777 --> 00:18:00.781 align:start position:29% line:-2
各ドキュメントの
詳細ビューに表示されます

00:18:03.550 --> 00:18:05.485 align:start position:18% line:-1
次は“feedIdentifier”

00:18:05.719 --> 00:18:10.057 align:start position:12% line:-2
これはドメインの
Reverse DNSである必要があります

00:18:10.190 --> 00:18:15.996 align:start position:14% line:-2
Reverse DNSとはウェブサイトが
逆方向になることを意味します

00:18:16.096 --> 00:18:20.367 align:start position:7% line:-2
例えば フィードが
“developer.apple.com”の場合

00:18:20.467 --> 00:18:23.971 align:start position:14% line:-2
フィード識別子は
“.apple.developer”です

00:18:26.340 --> 00:18:28.408 align:start position:25% line:-1
次は“contactURL”

00:18:28.509 --> 00:18:31.678 align:start position:27% line:-2
フィードの問題報告のために
使用されます

00:18:34.448 --> 00:18:36.583 align:start position:18% line:-1
続いて“formatVersion”

00:18:36.817 --> 00:18:40.888 align:start position:30% line:-2
フィードが準拠している
形式のバージョンです

00:18:41.255 --> 00:18:44.958 align:start position:32% line:-2
今回のフィード形式は
バージョン1.0で

00:18:45.159 --> 00:18:49.463 align:start position:29% line:-2
ドキュメントに組み込む
フィード形式を更新すると

00:18:49.563 --> 00:18:55.402 align:start position:20% line:-2
feed.jsonファイルに変更を
加えることができます

00:18:55.736 --> 00:18:59.039 align:start position:23% line:-1
文字列なので引用符が必要ですね

00:19:01.041 --> 00:19:03.277 align:start position:21% line:-1
最後は“documents”キー

00:19:03.377 --> 00:19:07.481 align:start position:21% line:-1
ここが第２セクションの始まりです

00:19:07.648 --> 00:19:13.654 align:start position:14% line:-2
ここの値はオブジェクトの配列で
Playground Bookを表します

00:19:13.854 --> 00:19:16.690 align:start position:34% line:-2
次はオブジェクトの
フォーマットです

00:19:18.192 --> 00:19:22.062 align:start position:29% line:-2
“documents”は
オブジェクトの配列で―

00:19:22.696 --> 00:19:25.432 align:start position:30% line:-2
値のペアで
ドキュメントを表します

00:19:26.033 --> 00:19:30.204 align:start position:32% line:-2
ドキュメントの表示に
必要なものを入れます

00:19:32.339 --> 00:19:34.908 align:start position:7% line:-2
“title”と
“overviewSubtitle”は文字列です

00:19:35.042 --> 00:19:38.412 align:start position:21% line:-2
各ドキュメントの
タイトルとサブタイトルになります

00:19:38.579 --> 00:19:41.582 align:start position:38% line:-1
購読の欄内と―

00:19:41.682 --> 00:19:45.052 align:start position:25% line:-2
各ドキュメントの
詳細ビュー内にも表示されます

00:19:48.455 --> 00:19:50.357 align:start position:20% line:-2
“detailSubtitle”は
オプションで―

00:19:50.457 --> 00:19:55.596 align:start position:29% line:-2
別のサブタイトルを
詳細ビューに表示できます

00:19:56.063 --> 00:19:58.866 align:start position:27% line:-1
必要がない場合は省略します

00:20:01.902 --> 00:20:05.606 align:start position:23% line:-2
“description”は
ドキュメントの目的を説明します

00:20:05.706 --> 00:20:08.976 align:start position:7% line:-2
表示場所は Swift Playgroundsの
詳細ビューです

00:20:11.278 --> 00:20:15.048 align:start position:14% line:-2
“contentIdentifier”も
Reverse DNS識別子です

00:20:15.182 --> 00:20:21.155 align:start position:16% line:-2
Manifest.plistファイルと
一致する必要があります

00:20:21.722 --> 00:20:25.359 align:start position:12% line:-2
ドキュメントの
“feedIdentifier”で始めます

00:20:25.626 --> 00:20:29.897 align:start position:0% line:-2
今回の例では
“io.github.WWDCPhotoFilters”

00:20:30.931 --> 00:20:34.968 align:start position:16% line:-2
feed.jsonファイルと同じ場所で
コンテンツの管理が必要です

00:20:35.068 --> 00:20:41.475 align:start position:20% line:-2
またはZip圧縮したドキュメントの
セキュアハッシュが必要です

00:20:41.608 --> 00:20:44.745 align:start position:32% line:-2
フィード形式の詳細は
別のセッションで

00:20:47.247 --> 00:20:49.082 align:start position:23% line:-1
コンテンツの識別子がありますね

00:20:50.751 --> 00:20:54.221 align:start position:18% line:-2
“contentVersion”では
バージョン管理ができます

00:20:54.354 --> 00:20:56.723 align:start position:32% line:-2
ドキュメントを
更新する際に必要です

00:20:56.823 --> 00:21:00.661 align:start position:25% line:-2
マニフェストのバージョンと
一致していなければなりません

00:20:56.823 --> 00:21:00.661 align:start position:25% line:-2
マニフェストのバージョンと
一致していなければなりません

00:21:02.863 --> 00:21:04.464 align:start position:30% line:-1
次に“url”ですが―

00:21:04.731 --> 00:21:10.137 align:start position:23% line:-2
ダウンロード時に
必要になるので とても大切です

00:21:10.337 --> 00:21:13.607 align:start position:23% line:-2
Zip圧縮されたドキュメントの
リンクになります

00:21:16.877 --> 00:21:20.848 align:start position:7% line:-2
“additionalInformation”は
追加のメタデータを格納できます

00:21:20.981 --> 00:21:23.050 align:start position:27% line:-1
好きな内容を入れてください

00:21:23.250 --> 00:21:28.655 align:start position:30% line:-2
キーと値のペアを持つ
オブジェクトの配列です

00:21:28.856 --> 00:21:32.859 align:start position:18% line:-2
この例では名前が"Made for"
値が“WWDC18”

00:21:32.960 --> 00:21:36.029 align:start position:18% line:-2
Swift Playgroundsの
詳細ビューに表示されます

00:21:39.233 --> 00:21:43.270 align:start position:12% line:-2
“publishedDate”と
“lastUpdatedDate”も必要で

00:21:43.737 --> 00:21:47.374 align:start position:14% line:-1
ISO 8601形式である必要があります

00:21:47.474 --> 00:21:50.644 align:start position:30% line:-1
コンテンツの発行日と―

00:21:50.744 --> 00:21:53.747 align:start position:29% line:-1
最終更新日が反映されます

00:21:56.517 --> 00:22:00.854 align:start position:25% line:-2
最後に
画像用の３つのキーがあります

00:21:56.517 --> 00:22:00.854 align:start position:25% line:-2
最後に
画像用の３つのキーがあります

00:22:01.288 --> 00:22:04.992 align:start position:9% line:-2
“thumbnailURL”は
Swift Playgrounds内の画像用で

00:22:05.893 --> 00:22:09.029 align:start position:29% line:-2
ドキュメントの
詳細ビューにも使われます

00:22:10.797 --> 00:22:15.335 align:start position:16% line:-2
“previewImageURLs”は
詳細ビューの画像用で

00:22:15.435 --> 00:22:19.640 align:start position:30% line:-2
プレイグラウンドの
補足情報を表示できます

00:22:20.774 --> 00:22:25.479 align:start position:11% line:-2
そして旧バージョンではバナー用の
“bannerImageURL”がありました

00:22:25.579 --> 00:22:31.251 align:start position:21% line:-2
サポートする場合は
こちらの画像も含む必要があります

00:22:33.821 --> 00:22:39.026 align:start position:21% line:-2
さて フィード形式を設定したので
発行に移りましょう

00:22:39.960 --> 00:22:43.297 align:start position:21% line:-1
これらのファイルを発行するには？

00:22:43.497 --> 00:22:48.669 align:start position:21% line:-2
feed.jsonファイルと
ウェブ上のドキュメントが必要です

00:22:49.169 --> 00:22:51.305 align:start position:30% line:-1
ウェブホストも必要です

00:22:53.373 --> 00:22:56.310 align:start position:27% line:-2
発行すると
ウェブホストが要求されます

00:22:56.510 --> 00:23:02.516 align:start position:14% line:-2
GitHubやSquarespaceなど
様々な手段がありますが

00:22:56.510 --> 00:23:02.516 align:start position:14% line:-2
GitHubやSquarespaceなど
様々な手段がありますが

00:23:02.616 --> 00:23:06.386 align:start position:16% line:-1
今日はGitHubページの例を使います

00:23:08.055 --> 00:23:12.125 align:start position:25% line:-2
GitHubはウェブサイトを
作成するためのツールです

00:23:12.226 --> 00:23:15.062 align:start position:27% line:-2
GitHubリポジトリから
直接ホストされています

00:23:15.195 --> 00:23:17.331 align:start position:20% line:-1
Gitを使いコンテンツを管理します

00:23:18.065 --> 00:23:21.969 align:start position:30% line:-2
必要な いくつかの
手順について説明します

00:23:23.737 --> 00:23:25.806 align:start position:20% line:-1
まず GitHubアカウントの取得

00:23:26.607 --> 00:23:28.742 align:start position:23% line:-1
GitHubのサイトでできます

00:23:30.377 --> 00:23:34.748 align:start position:12% line:-2
次に“ユーザ名.github.io”という
リポジトリの作成

00:23:34.848 --> 00:23:37.417 align:start position:29% line:-1
この形式は変えられません

00:23:37.518 --> 00:23:40.787 align:start position:30% line:-2
このリポジトリに
コンテンツを保存します

00:23:43.023 --> 00:23:45.559 align:start position:23% line:-1
リポジトリをMacに複製したら

00:23:45.659 --> 00:23:50.464 align:start position:16% line:-2
index.htmlファイルが作成でき
ホームページとして保存します

00:23:50.564 --> 00:23:53.600 align:start position:12% line:-2
ここでは
“Hello WWDC!”とだけ表示します

00:23:55.502 --> 00:24:00.741 align:start position:23% line:-2
Xcodeのソース管理の詳細は
別のセッションをご参照ください

00:23:55.502 --> 00:24:00.741 align:start position:23% line:-2
Xcodeのソース管理の詳細は
別のセッションをご参照ください

00:24:04.044 --> 00:24:07.581 align:start position:25% line:-2
作成したファイルが
リポジトリにあることを確認し

00:24:07.681 --> 00:24:13.320 align:start position:16% line:-2
“ユーザ名.github.io”という
ウェブサイトにアクセスします

00:24:13.821 --> 00:24:19.359 align:start position:27% line:-2
さらにファイルやフォルダを
リポジトリに追加していき

00:24:19.760 --> 00:24:23.297 align:start position:16% line:-1
GitHubのウェブサイトを更新します

00:24:25.799 --> 00:24:29.536 align:start position:12% line:-2
現時点でフォルダには
index.htmlファイルしかありません

00:24:29.636 --> 00:24:31.939 align:start position:23% line:-1
これがウェブサイトの入り口です

00:24:32.039 --> 00:24:36.376 align:start position:27% line:-2
購読してもらうには
ファイルがあと数個必要です

00:24:37.211 --> 00:24:38.512 align:start position:39% line:-1
私たちには―

00:24:38.645 --> 00:24:41.515 align:start position:9% line:-2
“WWDC Photo Filters”という
ドキュメントがあります

00:24:41.615 --> 00:24:46.053 align:start position:18% line:-2
Core Imageを使ったクールな
写真フィルタのコンテンツです

00:24:46.153 --> 00:24:50.524 align:start position:23% line:-2
例として
そのリポジトリを見てみましょう

00:24:53.260 --> 00:24:56.930 align:start position:23% line:-2
最初に必要なのは
feed.jsonファイルです

00:24:57.030 --> 00:25:01.768 align:start position:21% line:-2
index.htmlファイルと
同階層のリポジトリに格納しました

00:24:57.030 --> 00:25:01.768 align:start position:21% line:-2
index.htmlファイルと
同階層のリポジトリに格納しました

00:25:03.704 --> 00:25:06.473 align:start position:27% line:-1
次にドキュメントの保存です

00:25:07.141 --> 00:25:11.578 align:start position:25% line:-2
発行した各プレイグラウンドは
フォルダに保存されています

00:25:11.912 --> 00:25:14.147 align:start position:34% line:-2
各コンテンツ用に
フォルダがあります

00:25:14.248 --> 00:25:18.752 align:start position:16% line:-2
“ImageTransitions”や
“IntrotoCI”などです

00:25:19.219 --> 00:25:21.455 align:start position:27% line:-1
つまり 最上位にあるのは―

00:25:21.555 --> 00:25:25.259 align:start position:23% line:-2
index.htmlファイルと
feed.jsonファイル

00:25:25.359 --> 00:25:27.394 align:start position:29% line:-2
そして 各ドキュメントの
フォルダです

00:25:29.463 --> 00:25:33.267 align:start position:30% line:-2
フォルダの１つを開くと
中身は４つ

00:25:33.400 --> 00:25:35.302 align:start position:18% line:-2
Zip圧縮された
playgroundbookファイル

00:25:35.402 --> 00:25:36.737 align:start position:36% line:-1
そして３つの画像

00:25:36.837 --> 00:25:41.675 align:start position:23% line:-2
それぞれ バナー用
プレビュー用 サムネイル用です

00:25:42.476 --> 00:25:45.812 align:start position:14% line:-2
圧縮されたPlaygound Bookを
ユーザがダウンロードします

00:25:47.948 --> 00:25:51.852 align:start position:16% line:-2
それでは feed.jsonファイルを
見てみましょう

00:25:52.419 --> 00:25:57.591 align:start position:16% line:-2
最上位のフィード識別子は
ウェブサイトのReverse DNSで

00:25:57.691 --> 00:26:01.028 align:start position:0% line:-1
“io.github.WWDCPhotoFilters”

00:25:57.691 --> 00:26:01.028 align:start position:0% line:-1
“io.github.WWDCPhotoFilters”

00:26:04.932 --> 00:26:09.870 align:start position:29% line:-2
４つのドキュメントには
それぞれの要素があります

00:26:12.539 --> 00:26:14.274 align:start position:36% line:-1
１つ目を見ると―

00:26:14.374 --> 00:26:17.277 align:start position:32% line:-2
コンテンツ識別子が
フィード識別子と一致

00:26:17.377 --> 00:26:19.246 align:start position:27% line:-1
タイトルが追加されています

00:26:22.549 --> 00:26:25.419 align:start position:23% line:-1
ドキュメントのURLがあります

00:26:25.519 --> 00:26:30.657 align:start position:0% line:-2
“/IntrotoCI
/IntrotoCI.playgroundbook.zip”

00:26:30.757 --> 00:26:36.063 align:start position:25% line:-2
ダウンロード用のリンクなので
間違えてはいけません

00:26:38.832 --> 00:26:41.735 align:start position:21% line:-1
画像のURLは相対パスにできます

00:26:41.835 --> 00:26:46.874 align:start position:12% line:-2
それには feed.jsonファイルの下に
フォルダを置く必要があります

00:26:46.974 --> 00:26:51.044 align:start position:2% line:-2
ここでは
“IntrotoCI/thumbnail.png”です

00:26:51.311 --> 00:26:54.815 align:start position:25% line:-2
各ドキュメントも
同じ形式にするといいでしょう

00:26:57.117 --> 00:27:00.320 align:start position:30% line:-2
オンラインで公開すれば
誰でも購読可能です

00:26:57.117 --> 00:27:00.320 align:start position:30% line:-2
オンラインで公開すれば
誰でも購読可能です

00:27:00.787 --> 00:27:05.626 align:start position:12% line:-2
URLを直接入力して feed.jsonに
アクセスすることも

00:27:05.726 --> 00:27:11.565 align:start position:2% line:-2
ユニバーサルリンクを使って
Safari内からSwift Playgroundsに

00:27:11.665 --> 00:27:13.367 align:start position:21% line:-1
リダイレクトで行くこともできます

00:27:14.668 --> 00:27:17.905 align:start position:32% line:-2
そのために必要なのが
フィードのURLと―

00:27:18.005 --> 00:27:21.108 align:start position:29% line:-2
ユニバーサルリンク
プレフィックスの結合です

00:27:22.843 --> 00:27:26.613 align:start position:18% line:-2
ここにindex.htmlファイルの
リンクのコードがあります

00:27:26.713 --> 00:27:29.316 align:start position:23% line:-2
ユニバーサルリンク
プレフィックスと結合させました

00:27:29.750 --> 00:27:34.488 align:start position:7% line:-2
“https://
developer.apple.com/ul/”

00:27:34.588 --> 00:27:38.225 align:start position:29% line:-1
私たちの購読用URLです

00:27:39.893 --> 00:27:42.529 align:start position:27% line:-2
そのリンクをアンカー要素へ
埋め込めます

00:27:42.629 --> 00:27:48.535 align:start position:7% line:-2
href属性で ユーザを簡単に
Swift Playgroundsへ導けるのです

00:27:50.270 --> 00:27:55.175 align:start position:21% line:-2
次にドキュメントを追加する手順の
デモを行います

00:27:56.310 --> 00:28:01.615 align:start position:43% line:-1
(拍手)

00:27:56.310 --> 00:28:01.615 align:start position:43% line:-1
(拍手)

00:28:02.416 --> 00:28:06.787 align:start position:9% line:-2
私たちは写真フィルタリングの
Playground Bookを発行しています

00:28:07.020 --> 00:28:11.358 align:start position:4% line:-2
私が新しく完成させたのは
“Content Aware Resizing”です

00:28:12.326 --> 00:28:18.165 align:start position:21% line:-2
コンテンツの重要な部分を損なわず
サイズ変更する方法です

00:28:18.265 --> 00:28:22.069 align:start position:32% line:-2
モニュメントバレーの
美しい写真があります

00:28:22.536 --> 00:28:26.039 align:start position:23% line:-2
トリミングし
幅を少し小さくしたいと思います

00:28:26.140 --> 00:28:29.243 align:start position:32% line:-2
でもスケールダウンは
避けたいところです

00:28:29.343 --> 00:28:32.713 align:start position:27% line:-1
美しい夕暮れを残すためです

00:28:33.480 --> 00:28:35.082 align:start position:38% line:-1
この方法では―

00:28:36.150 --> 00:28:40.187 align:start position:27% line:-2
写真内のすべてのピクセルを
比較し―

00:28:40.287 --> 00:28:42.523 align:start position:30% line:-2
重要度の低い垂直な線を
探します

00:28:42.623 --> 00:28:46.827 align:start position:27% line:-2
１列ずつ削除すれば
幅は小さくなっていきますが

00:28:46.927 --> 00:28:52.733 align:start position:27% line:-2
重要なのは 岩山や夕暮れが
そのまま残るということです

00:28:54.935 --> 00:29:00.374 align:start position:2% line:-2
“Content Aware Resizing”という
Playground Bookが―

00:28:54.935 --> 00:29:00.374 align:start position:2% line:-2
“Content Aware Resizing”という
Playground Bookが―

00:29:00.707 --> 00:29:03.677 align:start position:11% line:-2
“ContentAwareResizing”
フォルダに保存されています

00:29:05.078 --> 00:29:07.147 align:start position:34% line:-1
これでほぼ完了です

00:29:07.247 --> 00:29:09.883 align:start position:23% line:-1
あとはこれをZip圧縮するだけ

00:29:09.983 --> 00:29:11.952 align:start position:32% line:-1
そしてファイルを選択

00:29:12.052 --> 00:29:14.955 align:start position:0% line:-2
“CompressContentAwareResizing.
playgroundbook”です

00:29:15.055 --> 00:29:20.260 align:start position:23% line:-2
圧縮できたので
元のファイルはゴミ箱に移します

00:29:21.728 --> 00:29:24.364 align:start position:30% line:-1
そして２つの画像も移動

00:29:24.464 --> 00:29:28.869 align:start position:21% line:-2
フィード形式で必要な
サムネイル用とバナー用の画像です

00:29:28.969 --> 00:29:33.607 align:start position:11% line:-2
デスクトップに Thumbnail.pngと
BannerImage.pngという―

00:29:33.707 --> 00:29:35.008 align:start position:38% line:-1
２枚があります

00:29:35.709 --> 00:29:37.978 align:start position:34% line:-1
この２枚を入れます

00:29:38.345 --> 00:29:41.415 align:start position:21% line:-1
自分のフォルダ内にドラッグします

00:29:42.716 --> 00:29:47.221 align:start position:12% line:-2
“WWDC Photo Filters”の
リポジトリ内を見ると―

00:29:47.321 --> 00:29:49.923 align:start position:29% line:-1
３つのフォルダがあります

00:29:50.023 --> 00:29:53.160 align:start position:9% line:-2
それぞれに画像
Zip圧縮されたPlayground Book

00:29:53.260 --> 00:29:55.062 align:start position:27% line:-1
サムネイル用画像があります

00:29:55.162 --> 00:29:59.733 align:start position:27% line:-2
いいですね　私のフォルダに
必要なものがそろいました

00:30:00.033 --> 00:30:02.636 align:start position:29% line:-1
発行の準備ができています

00:30:03.604 --> 00:30:08.175 align:start position:25% line:-2
リポジトリに
ワークスペースを作成したので

00:30:08.275 --> 00:30:13.480 align:start position:27% line:-2
このフォルダをドラッグして
リポジトリに入れます

00:30:13.580 --> 00:30:16.850 align:start position:4% line:-2
“Content Aware Resizing”用の
別フォルダもあります

00:30:17.551 --> 00:30:21.021 align:start position:32% line:-2
問題がないか
ダブルチェックします

00:30:21.822 --> 00:30:25.959 align:start position:18% line:-2
最後のステップは
feed.jsonファイルの更新です

00:30:27.161 --> 00:30:32.800 align:start position:12% line:-2
documentsの配列には
“Image Transitions”と―

00:30:32.900 --> 00:30:34.701 align:start position:9% line:-1
“Intro to Core Image”と―

00:30:34.802 --> 00:30:37.171 align:start position:11% line:-2
“Test Out CIFilters!”の
オブジェクトがあります

00:30:37.304 --> 00:30:40.507 align:start position:5% line:-2
“Content Aware Resizing”を
追加します

00:30:41.808 --> 00:30:44.578 align:start position:34% line:-2
幸い スニペットを
作ってあります

00:30:44.678 --> 00:30:46.713 align:start position:41% line:-1
こちらです

00:30:47.815 --> 00:30:50.551 align:start position:27% line:-2
このネイルで
タイプするのは大変なので…

00:30:50.651 --> 00:30:53.754 align:start position:34% line:-2
あとはタイトルを
タイプするだけです

00:30:53.854 --> 00:30:59.827 align:start position:5% line:-2
“Content Aware Resizing”と
名付けます

00:31:01.128 --> 00:31:03.163 align:start position:16% line:-1
“detailSubtitle”は省略

00:31:03.263 --> 00:31:05.299 align:start position:14% line:-1
“overviewSubtitle”は―

00:31:05.399 --> 00:31:07.901 align:start position:2% line:-2
“Swiftで
Content Aware Resizingを試そう”

00:31:08.001 --> 00:31:09.603 align:start position:34% line:-1
内容説明もあります

00:31:09.703 --> 00:31:11.104 align:start position:32% line:-1
コンテンツ識別子は―

00:31:11.205 --> 00:31:16.743 align:start position:2% line:-2
“io.github.WWDCPhotoFilters
.contentAwareResizing”

00:31:16.844 --> 00:31:20.447 align:start position:30% line:-2
最初の発行なので
バージョンは1.0です

00:31:20.781 --> 00:31:24.885 align:start position:21% line:-2
URLはウェブサイトにマップされ
フォルダ名は―

00:31:24.985 --> 00:31:26.553 align:start position:11% line:-1
“ContentAwareResizing”

00:31:26.653 --> 00:31:30.490 align:start position:9% line:-2
“/ContentAwareResizing.
playgroundbook.zip”

00:31:31.558 --> 00:31:35.362 align:start position:21% line:-2
“publishedDate”は
今日の９時40分

00:31:35.462 --> 00:31:40.167 align:start position:18% line:-2
“lastUpdatedDate”も
同じ値ですね

00:31:41.034 --> 00:31:44.905 align:start position:9% line:-2
“thumbnailURL”と
“bannerImageURL”も入っています

00:31:45.005 --> 00:31:48.342 align:start position:7% line:-2
“additionalInformation”で
言語設定を英語に

00:31:48.442 --> 00:31:52.546 align:start position:16% line:-2
“previewImageURLs”は
今のところ空白です

00:31:53.647 --> 00:31:56.450 align:start position:32% line:-1
問題はなさそうですね

00:31:56.550 --> 00:32:01.422 align:start position:9% line:-2
Xcode Source Controlへ行き
実行します

00:31:56.550 --> 00:32:01.422 align:start position:9% line:-2
Xcode Source Controlへ行き
実行します

00:32:02.256 --> 00:32:04.258 align:start position:29% line:-1
選択されたファイルは４つ

00:32:04.358 --> 00:32:08.228 align:start position:21% line:-2
３つのファイルを追加し
feed.jsonを変更しました

00:32:08.729 --> 00:32:10.430 align:start position:41% line:-1
実行して―

00:32:10.864 --> 00:32:13.667 align:start position:30% line:-2
“デモブックを追加”と
入力します

00:32:15.602 --> 00:32:17.337 align:start position:16% line:-1
“Push to remote”を選択

00:32:18.739 --> 00:32:20.073 align:start position:38% line:-1
あとは祈るだけ

00:32:23.610 --> 00:32:25.579 align:start position:36% line:-1
ホリーを呼びます

00:32:25.679 --> 00:32:27.414 align:start position:36% line:-1
うまくいきました

00:32:28.348 --> 00:32:33.287 align:start position:43% line:-1
（拍手）

00:32:33.387 --> 00:32:36.723 align:start position:23% line:-1
早速ホリーに購読してもらいます

00:32:38.358 --> 00:32:42.863 align:start position:25% line:-2
ウェブサイトには
すてきな購読ボタンがあります

00:32:42.963 --> 00:32:44.464 align:start position:38% line:-1
タップすると―

00:32:45.199 --> 00:32:47.434 align:start position:14% line:-1
Swift Playgroundsに移動

00:32:48.569 --> 00:32:50.104 align:start position:38% line:-1
購読しましょう

00:32:54.141 --> 00:32:55.676 align:start position:27% line:-1
QuickTimeを再起動

00:33:05.586 --> 00:33:07.087 align:start position:39% line:-1
映りましたね

00:33:12.860 --> 00:33:14.695 align:start position:34% line:-1
すばらしい作品です

00:33:15.829 --> 00:33:19.399 align:start position:30% line:-2
ダウンロードすることも
できます

00:33:19.500 --> 00:33:23.370 align:start position:0% line:-2
URLは
“wwdcphotofilters.github.io”

00:33:23.837 --> 00:33:26.874 align:start position:16% line:-2
４つのPlayground Bookを
すべてダウンロードできます

00:33:26.974 --> 00:33:28.509 align:start position:12% line:-1
“Intro to Core Image”

00:33:28.609 --> 00:33:33.113 align:start position:16% line:-2
Transitionフィルタを使用した
“Image Transitions”

00:33:33.213 --> 00:33:36.884 align:start position:23% line:-2
そしてCore Image内で
フィルタを組み合わせたもの

00:33:36.984 --> 00:33:38.485 align:start position:34% line:-1
重ねるのも可能です

00:33:38.919 --> 00:33:42.022 align:start position:4% line:-2
最後に
“Content Aware Resizing”です

00:33:42.122 --> 00:33:43.524 align:start position:43% line:-1
（喝采）

00:33:43.624 --> 00:33:44.258 align:start position:41% line:-1
ありがとう

00:33:44.358 --> 00:33:45.692 align:start position:43% line:-1
（拍手）

00:33:45.792 --> 00:33:48.128 align:start position:38% line:-1
確認しましょう

00:33:48.328 --> 00:33:49.763 align:start position:39% line:-1
少しお待ちを

00:33:53.600 --> 00:33:55.502 align:start position:25% line:-1
サイトにアップされていますね

00:33:55.602 --> 00:34:00.407 align:start position:43% line:-1
（拍手）

00:33:55.602 --> 00:34:00.407 align:start position:43% line:-1
（拍手）

00:34:00.507 --> 00:34:03.143 align:start position:5% line:-2
“Content Aware Resizing”を
ダウンロードして―

00:34:05.179 --> 00:34:06.447 align:start position:43% line:-1
開きます

00:34:08.815 --> 00:34:09.983 align:start position:41% line:-1
できました

00:34:10.317 --> 00:34:14.588 align:start position:29% line:-2
右側のライブビューには
モニュメントバレーの写真

00:34:14.688 --> 00:34:18.926 align:start position:30% line:-2
コードを実行して
どうなるかを見ましょう

00:34:24.797 --> 00:34:30.270 align:start position:23% line:-2
このアルゴリズムは
画像内の垂直な線をすべて見て―

00:34:30.370 --> 00:34:35.976 align:start position:27% line:-2
変化の少ないものを
１列ずつ除去していくのです

00:34:36.076 --> 00:34:40.013 align:start position:30% line:-2
少しカットされましたが
きれいな画像です

00:34:41.915 --> 00:34:48.155 align:start position:43% line:-1
（拍手）

00:34:49.889 --> 00:34:51.391 align:start position:38% line:-1
本日は以上です

00:34:51.491 --> 00:34:56.630 align:start position:25% line:-2
より詳しく知りたい方は
私たちのラボまで来てください

00:34:56.730 --> 00:34:59.900 align:start position:25% line:-1
セッションについての詳細は―

00:35:00.000 --> 00:35:04.004 align:start position:14% line:-2
developer.apple.comで
確認できます

00:35:05.038 --> 00:35:06.540 align:start position:30% line:-1
ありがとうございました

00:35:06.640 --> 00:35:10.144 align:start position:21% line:-1
皆さんの作品を楽しみにしています

00:35:10.244 --> 00:35:10.911 align:start position:30% line:-1
ありがとうございました

00:35:11.345 --> 00:35:19.286 align:start position:43% line:-1
(拍手)
