WEBVTT

00:00:06.974 --> 00:00:15.215 align:start position:43% line:-1
(音楽)

00:00:18.352 --> 00:00:24.491 align:start position:43% line:-1
(拍手)

00:00:25.058 --> 00:00:26.093 align:start position:43% line:-1
ようこそ

00:00:26.360 --> 00:00:29.630 align:start position:27% line:-2
Siriのショートカットの
Voice設定について

00:00:29.997 --> 00:00:34.001 align:start position:30% line:-2
私 アミットと
同僚の彩花が説明します

00:00:34.101 --> 00:00:38.138 align:start position:30% line:-2
この機能をご紹介できて
とても光栄です

00:00:39.006 --> 00:00:41.341 align:start position:30% line:-1
ショートカットを使うと

00:00:41.441 --> 00:00:47.147 align:start position:23% line:-2
アプリケーションの中で
重要なものをすぐに呼び出せます

00:00:47.648 --> 00:00:49.783 align:start position:29% line:-1
しかも ショートカットを

00:00:50.217 --> 00:00:54.121 align:start position:27% line:-2
Siriに追加できるように
なりました

00:00:54.588 --> 00:00:57.591 align:start position:27% line:-1
つまり 声で操作ができます

00:00:58.325 --> 00:01:02.196 align:start position:27% line:-2
ユーザが声で
ショートカットを利用する際

00:00:58.325 --> 00:01:02.196 align:start position:27% line:-2
ユーザが声で
ショートカットを利用する際

00:01:02.296 --> 00:01:05.165 align:start position:27% line:-1
重要なのは快適に使えること

00:01:05.432 --> 00:01:07.501 align:start position:29% line:-1
そこが今日のポイントです

00:01:07.868 --> 00:01:09.269 align:start position:34% line:-1
では 始めましょう

00:01:10.304 --> 00:01:15.576 align:start position:21% line:-2
まず Siriにショートカットを
追加する方法を紹介します

00:01:15.676 --> 00:01:19.880 align:start position:32% line:-2
設定は とても簡単で
すぐ利用できます

00:01:20.714 --> 00:01:23.951 align:start position:34% line:-2
次にカスタム応答の
Siriの発言を

00:01:24.051 --> 00:01:27.654 align:start position:30% line:-2
ユーザに提供する方法を
解説します

00:01:28.355 --> 00:01:32.392 align:start position:27% line:-2
次に 彩花が
UIを快適に利用するための

00:01:32.492 --> 00:01:36.797 align:start position:32% line:-2
ベストプラクティスを
いくつか紹介します

00:01:37.364 --> 00:01:40.667 align:start position:27% line:-2
最後に アプリケーションに
ショートカットを

00:01:40.767 --> 00:01:44.271 align:start position:27% line:-1
設定する方法をご紹介します

00:01:47.474 --> 00:01:54.281 align:start position:29% line:-2
では カスタム応答などの
詳細な設定を解説する前に

00:01:54.815 --> 00:02:00.554 align:start position:27% line:-2
Siriでショートカットを
設定してみましょう

00:01:54.815 --> 00:02:00.554 align:start position:27% line:-2
Siriでショートカットを
設定してみましょう

00:02:02.923 --> 00:02:07.361 align:start position:29% line:-2
使うのはスープを注文する
アプリケーションで

00:02:07.628 --> 00:02:09.463 align:start position:25% line:-1
Soup Chefといいます

00:02:10.464 --> 00:02:14.868 align:start position:27% line:-2
当社のあらゆる
ショートカットAPIに対応

00:02:15.302 --> 00:02:17.971 align:start position:30% line:-1
ユーザが注文するたびに

00:02:18.138 --> 00:02:23.777 align:start position:12% line:-2
Soup ChefはカスタムIntentを
Siriに伝えます

00:02:24.945 --> 00:02:27.581 align:start position:32% line:-2
昨日 トマトスープを
注文したら

00:02:27.848 --> 00:02:29.383 align:start position:32% line:-1
すごく気に入りました

00:02:30.017 --> 00:02:33.320 align:start position:32% line:-2
もう一度
注文したいと思った時

00:02:33.854 --> 00:02:37.124 align:start position:30% line:-2
Siriで注文できたら
いいですよね

00:02:37.491 --> 00:02:38.859 align:start position:36% line:-1
実はできるんです

00:02:40.627 --> 00:02:45.566 align:start position:27% line:-2
Siriの設定画面に行くと
既存のIntentが

00:02:45.666 --> 00:02:49.336 align:start position:21% line:-1
ショートカット候補になっています

00:02:49.803 --> 00:02:51.405 align:start position:36% line:-1
タップしましょう

00:02:52.272 --> 00:02:54.174 align:start position:36% line:-1
この画面が出たら

00:02:54.274 --> 00:02:58.512 align:start position:32% line:-2
ショートカット実行の
言葉を登録します

00:02:59.012 --> 00:03:03.884 align:start position:27% line:-2
画面上にはショートカットで
何をするかが

00:02:59.012 --> 00:03:03.884 align:start position:27% line:-2
画面上にはショートカットで
何をするかが

00:03:03.984 --> 00:03:06.053 align:start position:32% line:-1
詳細に示されています

00:03:06.486 --> 00:03:09.122 align:start position:30% line:-1
この設定も解説しますが

00:03:09.423 --> 00:03:13.393 align:start position:30% line:-2
まずはショートカットの
言葉を決めましょう

00:03:13.560 --> 00:03:18.232 align:start position:32% line:-2
短く 覚えやすくて
何度も言える言葉です

00:03:18.866 --> 00:03:22.402 align:start position:30% line:-2
すぐには
思いつかない人のために

00:03:22.636 --> 00:03:27.074 align:start position:30% line:-2
“スープタイム”という
候補が出ています

00:03:27.407 --> 00:03:29.676 align:start position:36% line:-1
これにしましょう

00:03:30.744 --> 00:03:32.913 align:start position:34% line:-1
それでは録音します

00:03:34.214 --> 00:03:37.951 align:start position:30% line:-2
Siriでの
ショートカット登録です

00:03:38.151 --> 00:03:39.653 align:start position:36% line:-1
では やりますよ

00:03:40.387 --> 00:03:43.757 align:start position:29% line:-2
Siriに
“スープタイム”と言うと

00:03:44.324 --> 00:03:47.227 align:start position:20% line:-1
Intentを実行するか聞かれます

00:03:47.961 --> 00:03:50.764 align:start position:25% line:-1
“はい”と言うと注文されます

00:03:50.898 --> 00:03:52.799 align:start position:38% line:-1
すごく簡単です

00:03:53.934 --> 00:03:58.405 align:start position:29% line:-2
ユーザは よく使うものに
ショートカットを設定し

00:03:58.572 --> 00:04:01.842 align:start position:23% line:-1
どこからでも使うことができます

00:03:58.572 --> 00:04:01.842 align:start position:23% line:-1
どこからでも使うことができます

00:04:02.009 --> 00:04:05.913 align:start position:12% line:-1
iOS端末でも Apple Watchでも

00:04:06.046 --> 00:04:11.251 align:start position:27% line:-2
HomePodでも
CarPlayでも使えます

00:04:12.019 --> 00:04:17.925 align:start position:21% line:-2
ですから最高のエクスペリエンスを
用意しなくてはいけません

00:04:19.091 --> 00:04:23.530 align:start position:30% line:-2
そこで利用すべきものが
カスタム応答です

00:04:24.665 --> 00:04:30.470 align:start position:23% line:-2
ショートカットを使うことで
Siriとの対話を提供できます

00:04:30.637 --> 00:04:34.107 align:start position:32% line:-2
しかも 声と共に
適切かつ重要な情報を

00:04:34.208 --> 00:04:37.344 align:start position:27% line:-1
提供することができるのです

00:04:38.478 --> 00:04:43.083 align:start position:25% line:-2
カスタム応答には
テンプレート文字列を使うので

00:04:43.183 --> 00:04:45.886 align:start position:11% line:-2
Intent Definitionファイルが
使えます

00:04:47.688 --> 00:04:51.792 align:start position:34% line:-2
応答の種類によって
ショートカットは

00:04:51.992 --> 00:04:54.328 align:start position:32% line:-1
４種類に分類できます

00:04:55.095 --> 00:04:59.666 align:start position:25% line:-1
１つは確認のカスタム応答です

00:05:01.001 --> 00:05:04.137 align:start position:25% line:-2
ユーザが
ショートカットを実行する前に

00:05:04.404 --> 00:05:07.941 align:start position:23% line:-1
ここで重要な情報を提示できます

00:05:09.576 --> 00:05:12.346 align:start position:30% line:-1
次は実行完了の通知です

00:05:12.713 --> 00:05:18.552 align:start position:23% line:-2
ショートカットの実行後に
補足情報を伝えることができます

00:05:18.652 --> 00:05:24.057 align:start position:30% line:-2
まず ショートカットが
正しく実行されたことを

00:05:24.158 --> 00:05:28.262 align:start position:25% line:-1
Siriがユーザに知らせます

00:05:28.362 --> 00:05:32.799 align:start position:29% line:-2
続いてアプリケーションに
関連する情報が出ます

00:05:34.535 --> 00:05:38.505 align:start position:23% line:-1
３つめは情報提供のための応答で

00:05:38.605 --> 00:05:41.175 align:start position:30% line:-1
これが非常に画期的です

00:05:42.276 --> 00:05:47.915 align:start position:25% line:-2
情報提供の応答は
乗り換え案内や天気予報などを

00:05:48.015 --> 00:05:52.920 align:start position:34% line:-2
声を介してユーザに
伝える仕組みです

00:05:53.253 --> 00:05:58.926 align:start position:25% line:-2
Siriがアプリケーションの
可能性を広げたのです

00:06:00.727 --> 00:06:05.032 align:start position:25% line:-2
最後に うまく機能しない時の
話もしましょう

00:06:05.365 --> 00:06:10.337 align:start position:27% line:-2
カスタムエラー応答では
“失敗した”と言う代わりに

00:06:10.437 --> 00:06:13.240 align:start position:25% line:-1
原因の説明も可能になりました

00:06:13.907 --> 00:06:20.480 align:start position:25% line:-2
まず 実行できなかったことを
Siriがユーザに伝えます

00:06:20.647 --> 00:06:22.649 align:start position:32% line:-1
そして ユーザに対し

00:06:22.850 --> 00:06:28.422 align:start position:27% line:-2
次にすべき操作を
示唆することができるのです

00:06:31.024 --> 00:06:35.095 align:start position:32% line:-2
カスタム応答について
理解できましたね

00:06:36.530 --> 00:06:40.734 align:start position:21% line:-1
では 実際の導入方法を説明します

00:06:42.769 --> 00:06:47.808 align:start position:23% line:-2
カスタム応答は
Intentと一緒に機能します

00:06:48.308 --> 00:06:51.378 align:start position:21% line:-1
まずはショートカットを使う状況を

00:06:51.478 --> 00:06:55.082 align:start position:29% line:-2
Intentで
定義しなくてはいけません

00:06:56.116 --> 00:07:00.187 align:start position:20% line:-2
今回は“OrderSoup”という
Intentを作りました

00:06:56.116 --> 00:07:00.187 align:start position:20% line:-2
今回は“OrderSoup”という
Intentを作りました

00:07:00.287 --> 00:07:03.257 align:start position:29% line:-1
スープを注文するものです

00:07:06.059 --> 00:07:10.130 align:start position:18% line:-1
ここで Intentの種類を選びます

00:07:10.430 --> 00:07:15.002 align:start position:30% line:-2
種類によって
Siriの発言の仕方や

00:07:15.135 --> 00:07:18.605 align:start position:21% line:-1
注文ボタンの表示が変わってきます

00:07:18.872 --> 00:07:23.544 align:start position:23% line:-2
ですから状況にふさわしいものを
選びましょう

00:07:24.878 --> 00:07:27.814 align:start position:18% line:-1
カスタムIntentの定義が済んだら

00:07:28.182 --> 00:07:30.484 align:start position:36% line:-1
次は応答タブです

00:07:30.884 --> 00:07:36.857 align:start position:23% line:-2
ここには すでに完了とエラーの
応答コードがあります

00:07:37.024 --> 00:07:43.330 align:start position:23% line:-2
これは一般的な応答で
ただ状況を伝えるためのものです

00:07:43.730 --> 00:07:47.134 align:start position:27% line:-1
我々がユーザに伝えたいのは

00:07:47.234 --> 00:07:52.072 align:start position:30% line:-2
いつ スープを店舗で
受け取れるかの情報です

00:07:52.639 --> 00:07:56.477 align:start position:30% line:-2
そのカスタム完了通知を
定義しましょう

00:07:56.944 --> 00:08:01.415 align:start position:27% line:-1
そのための手順を説明します

00:07:56.944 --> 00:08:01.415 align:start position:27% line:-1
そのための手順を説明します

00:08:02.382 --> 00:08:06.119 align:start position:34% line:-2
ランタイムで情報を
提供するために

00:08:06.220 --> 00:08:10.324 align:start position:23% line:-2
テンプレートの応答プロパティを
宣言します

00:08:11.225 --> 00:08:13.727 align:start position:34% line:-1
プロパティの画面で

00:08:14.328 --> 00:08:17.764 align:start position:16% line:-2
waitTimeとsoupプロパティを
追加します

00:08:19.466 --> 00:08:24.338 align:start position:27% line:-2
あとはカスタム応答のための
テンプレートを

00:08:24.972 --> 00:08:26.773 align:start position:36% line:-1
定義するだけです

00:08:26.907 --> 00:08:30.077 align:start position:20% line:-1
これはSiriが読み上げるものです

00:08:31.145 --> 00:08:35.115 align:start position:11% line:-2
Intent Definitionファイルの
テンプレート画面で

00:08:35.682 --> 00:08:38.585 align:start position:29% line:-1
完了のテンプレートを追加

00:08:39.720 --> 00:08:41.121 align:start position:38% line:-1
ここでもう１つ

00:08:41.288 --> 00:08:44.825 align:start position:25% line:-1
最近 スープが売り切れるので

00:08:45.025 --> 00:08:51.231 align:start position:23% line:-2
ただエラー表示をするよりも
“完売”と表示したいところです

00:08:51.732 --> 00:08:56.570 align:start position:23% line:-2
なので スープが売り切れたのを
伝えるための

00:08:56.670 --> 00:09:00.240 align:start position:20% line:-2
failureOutOfStock
というコードを追加しました

00:08:56.670 --> 00:09:00.240 align:start position:20% line:-2
failureOutOfStock
というコードを追加しました

00:09:02.810 --> 00:09:06.413 align:start position:21% line:-1
これでIntent応答が定義でき

00:09:06.613 --> 00:09:13.053 align:start position:21% line:-2
それにより Xcodeが
応答のサブクラスを自動生成します

00:09:13.287 --> 00:09:17.558 align:start position:23% line:-2
定義した全プロパティと
テンプレートのコンストラクタが

00:09:17.658 --> 00:09:19.560 align:start position:36% line:-1
これに含まれます

00:09:19.726 --> 00:09:23.831 align:start position:29% line:-2
構築に必要なプロパティは
これだけです

00:09:27.467 --> 00:09:32.873 align:start position:23% line:-2
そして この応答を
Intentハンドラで使います

00:09:34.641 --> 00:09:38.846 align:start position:20% line:-1
Intentのハンドルは２ステップ

00:09:39.079 --> 00:09:41.181 align:start position:38% line:-1
確認と実行です

00:09:42.115 --> 00:09:43.617 align:start position:32% line:-1
このIntentを―

00:09:44.084 --> 00:09:48.555 align:start position:32% line:-2
実行できる状態か
確認する質問が出ます

00:09:49.289 --> 00:09:55.162 align:start position:23% line:-2
まずは ユーザが選んだスープが
メニューにあるか確認

00:09:56.063 --> 00:10:00.167 align:start position:30% line:-2
メニューにあれば
注文可能と判定されます

00:09:56.063 --> 00:10:00.167 align:start position:30% line:-2
メニューにあれば
注文可能と判定されます

00:10:00.834 --> 00:10:06.940 align:start position:25% line:-2
この段階で 実際に注文可能か
スープの在庫も確認します

00:10:07.241 --> 00:10:08.675 align:start position:36% line:-1
やってみましょう

00:10:09.476 --> 00:10:12.312 align:start position:30% line:-1
まず メニューを参照し

00:10:13.280 --> 00:10:15.349 align:start position:36% line:-1
在庫を確認します

00:10:15.649 --> 00:10:18.986 align:start position:23% line:-2
売り切れの場合は
completionハンドラを

00:10:19.086 --> 00:10:22.823 align:start position:18% line:-2
failureOutOfStockで
呼び出します

00:10:24.391 --> 00:10:27.794 align:start position:23% line:-1
問題がなければ次に進みましょう

00:10:28.328 --> 00:10:34.234 align:start position:25% line:-2
これを機にカスタム確認応答も
加えたいところですね

00:10:34.468 --> 00:10:37.471 align:start position:27% line:-1
それも追ってサポートします

00:10:38.438 --> 00:10:40.641 align:start position:29% line:-1
さて 確認が終わりました

00:10:41.775 --> 00:10:44.077 align:start position:25% line:-1
次はIntentをハンドルし

00:10:44.311 --> 00:10:47.247 align:start position:27% line:-1
スープの注文を入れましょう

00:10:47.581 --> 00:10:53.020 align:start position:23% line:-2
Intent上の全情報を使って
注文を作成し

00:10:54.054 --> 00:10:56.857 align:start position:18% line:-1
orderManagerで注文します

00:10:57.157 --> 00:11:03.397 align:start position:23% line:-2
注文が完了したら 応答コードで
システムに通知します

00:10:57.157 --> 00:11:03.397 align:start position:23% line:-2
注文が完了したら 応答コードで
システムに通知します

00:11:04.164 --> 00:11:08.836 align:start position:29% line:-2
実はここで カスタム応答
テンプレートを使って

00:11:08.936 --> 00:11:11.738 align:start position:30% line:-2
ユーザに
待ち時間も伝えられます

00:11:12.439 --> 00:11:13.941 align:start position:36% line:-1
やってみましょう

00:11:15.475 --> 00:11:17.744 align:start position:23% line:-1
その際 カスタムIntentに

00:11:17.845 --> 00:11:22.516 align:start position:32% line:-2
非常に有益な応答を
２つ追加しておきます

00:11:24.084 --> 00:11:25.385 align:start position:38% line:-1
見てみましょう

00:11:26.887 --> 00:11:31.425 align:start position:27% line:-2
以前は 注文完了の通知しか
できませんでした

00:11:32.125 --> 00:11:35.462 align:start position:30% line:-2
しかし 今は
あと10分で スープが

00:11:35.562 --> 00:11:40.367 align:start position:23% line:-2
ピックアップできるという情報も
伝えられるのです

00:11:41.969 --> 00:11:46.874 align:start position:34% line:-2
エラーが出た場合は
さらに役に立ちます

00:11:47.474 --> 00:11:50.210 align:start position:29% line:-1
エラー通知だけだったのが

00:11:50.677 --> 00:11:55.115 align:start position:32% line:-2
今では在庫切れだと
伝えることができます

00:11:55.215 --> 00:11:58.085 align:start position:23% line:-1
ユーザは 別の商品を注文するか

00:11:58.352 --> 00:12:02.589 align:start position:30% line:-2
時間を置いて注文するか
決められます

00:11:58.352 --> 00:12:02.589 align:start position:30% line:-2
時間を置いて注文するか
決められます

00:12:06.159 --> 00:12:11.098 align:start position:25% line:-2
これで カスタム応答の機能が
分かりましたね

00:12:12.332 --> 00:12:13.834 align:start position:34% line:-1
でも続きがあります

00:12:14.067 --> 00:12:18.605 align:start position:29% line:-2
スープのエンジニアとして
必死で努力し

00:12:18.705 --> 00:12:22.009 align:start position:29% line:-2
極上のエクスペリエンスを
提供します

00:12:22.509 --> 00:12:26.947 align:start position:43% line:-1
(拍手)

00:12:28.582 --> 00:12:33.587 align:start position:27% line:-2
このようなショートカットを
どこからでも使えたら

00:12:33.687 --> 00:12:35.989 align:start position:34% line:-1
非常に便利ですよね

00:12:36.390 --> 00:12:40.394 align:start position:12% line:-2
Intents UI Extensionで
できるんです

00:12:41.361 --> 00:12:45.532 align:start position:12% line:-2
Intents UI Extensionで
ショートカットに

00:12:45.632 --> 00:12:48.469 align:start position:29% line:-1
カスタムUIを提供します

00:12:48.569 --> 00:12:51.939 align:start position:30% line:-2
それがロック画面や検索
Siriなど

00:12:52.039 --> 00:12:54.975 align:start position:27% line:-1
あらゆる場所で表示されます

00:12:55.876 --> 00:13:00.581 align:start position:12% line:-2
Intents UI Extensionの
詳しい解説は

00:12:55.876 --> 00:13:00.581 align:start position:12% line:-2
Intents UI Extensionの
詳しい解説は

00:13:00.814 --> 00:13:05.319 align:start position:5% line:-2
“What's New in SiriKit?”を
ご覧ください

00:13:06.920 --> 00:13:11.391 align:start position:12% line:-2
では Soup Chefで
Intents UI Extensionを

00:13:11.492 --> 00:13:12.926 align:start position:38% line:-1
見てみましょう

00:13:13.560 --> 00:13:16.263 align:start position:32% line:-1
これが最初の画面です

00:13:16.763 --> 00:13:19.600 align:start position:20% line:-2
カスタムIntents
UI Extensionを使うと

00:13:19.800 --> 00:13:23.270 align:start position:32% line:-2
ユーザに注文の詳細を
表示できます

00:13:23.470 --> 00:13:26.640 align:start position:34% line:-1
実際に注文する前に

00:13:26.740 --> 00:13:31.144 align:start position:25% line:-2
2.95ドルと確認できるのは
非常に便利です

00:13:32.146 --> 00:13:35.649 align:start position:27% line:-2
通知は“注文完了”だけでは
ありません

00:13:36.583 --> 00:13:38.485 align:start position:38% line:-1
領収書を表示し

00:13:38.585 --> 00:13:43.423 align:start position:29% line:-2
あと10分で用意できると
知らせることができます

00:13:45.626 --> 00:13:46.627 align:start position:41% line:-1
いいですね

00:13:47.060 --> 00:13:52.366 align:start position:25% line:-2
カスタムUIとカスタム応答に
補足を加えるのは

00:13:52.466 --> 00:13:53.967 align:start position:39% line:-1
簡単なのです

00:13:54.468 --> 00:13:58.005 align:start position:27% line:-2
Soup Chefの事例を
お見せしましょう

00:14:13.787 --> 00:14:17.491 align:start position:27% line:-2
これがSoup Chefの
アプリケーションです

00:14:18.992 --> 00:14:21.361 align:start position:11% line:-2
Intent Definitionファイルを
見ると

00:14:21.461 --> 00:14:25.566 align:start position:23% line:-2
スープ注文の
Intentが定義されています

00:14:25.899 --> 00:14:29.469 align:start position:23% line:-1
カテゴリーは“Order”です

00:14:30.838 --> 00:14:34.708 align:start position:30% line:-2
今度は 関連付けられた
応答を見てください

00:14:35.075 --> 00:14:38.278 align:start position:25% line:-1
プロパティとテンプレートです

00:14:38.512 --> 00:14:44.351 align:start position:21% line:-2
ここに完了のカスタムメッセージを
追加してみましょう

00:14:44.718 --> 00:14:47.287 align:start position:23% line:-1
まずは待ち時間のプロパティです

00:14:47.521 --> 00:14:49.122 align:start position:34% line:-1
プラスをクリックし

00:14:49.890 --> 00:14:52.593 align:start position:27% line:-1
“waitTime”と入力

00:14:52.693 --> 00:14:54.394 align:start position:27% line:-1
種類はStringのままで

00:14:54.495 --> 00:14:59.466 align:start position:34% line:-2
あとで適切なものに
フォーマットします

00:15:00.801 --> 00:15:05.906 align:start position:29% line:-2
注文内容を確認するための
プロパティも追加します

00:15:06.273 --> 00:15:09.076 align:start position:27% line:-1
スープはカスタム扱いなので

00:15:09.343 --> 00:15:11.879 align:start position:30% line:-1
“Custom”を選択

00:15:14.214 --> 00:15:16.583 align:start position:34% line:-1
次は応答コードです

00:15:16.917 --> 00:15:19.520 align:start position:27% line:-1
エラーと注文完了があります

00:15:20.521 --> 00:15:25.325 align:start position:29% line:-2
ここでは待ち時間の応答を
定義します

00:15:25.659 --> 00:15:26.860 align:start position:41% line:-1
始めますよ

00:15:27.861 --> 00:15:35.269 align:start position:20% line:-2
“スープは あとwaitTimeで
ご用意できます”

00:15:37.104 --> 00:15:40.541 align:start position:23% line:-1
完売のエラーコードも追加します

00:15:40.941 --> 00:15:45.779 align:start position:27% line:-2
この場合は プラスを押して
別の応答コードを入力

00:15:46.013 --> 00:15:50.784 align:start position:16% line:-1
“failureOutOfStock”

00:15:52.286 --> 00:15:56.990 align:start position:32% line:-2
注文完了のチェックは
外しておきます

00:15:57.524 --> 00:16:01.061 align:start position:30% line:-2
そして ここで
テンプレートの定義です

00:15:57.524 --> 00:16:01.061 align:start position:30% line:-2
そして ここで
テンプレートの定義です

00:16:01.562 --> 00:16:07.067 align:start position:32% line:-2
“申し訳ありません
スープは品切れです”

00:16:09.403 --> 00:16:13.140 align:start position:23% line:-1
これでカスタム応答ができました

00:16:13.240 --> 00:16:16.310 align:start position:27% line:-2
次はIntentハンドラの
ファイルです

00:16:24.751 --> 00:16:25.652 align:start position:46% line:-1
よし

00:16:27.321 --> 00:16:28.388 align:start position:43% line:-1
これです

00:16:28.889 --> 00:16:32.860 align:start position:23% line:-2
ご覧のとおり
確認と実行のメソッドがあります

00:16:32.960 --> 00:16:34.361 align:start position:38% line:-1
まずは確認です

00:16:34.862 --> 00:16:38.365 align:start position:23% line:-1
ユーザが何を注文したのか見極め

00:16:38.632 --> 00:16:43.103 align:start position:29% line:-2
それがメニューにあるかを
チェックします

00:16:43.203 --> 00:16:46.240 align:start position:20% line:-1
あれば“ready”の応答コードへ

00:16:46.974 --> 00:16:53.113 align:start position:23% line:-2
ここで大事なのは スープが
注文可能かチェックすることです

00:16:53.313 --> 00:16:57.885 align:start position:30% line:-2
まずはメニューの参照を
ここに入れましょう

00:16:59.219 --> 00:17:01.722 align:start position:30% line:-1
そして 在庫のチェック

00:16:59.219 --> 00:17:01.722 align:start position:30% line:-1
そして 在庫のチェック

00:17:06.593 --> 00:17:12.465 align:start position:9% line:-2
完売なら failureOutOfStockで
completionハンドラを呼び出します

00:17:18.204 --> 00:17:21.608 align:start position:21% line:-2
そして
注文されたオブジェクトをここに…

00:17:25.279 --> 00:17:29.750 align:start position:30% line:-2
これでエラー用の応答が
完成しました

00:17:29.917 --> 00:17:31.451 align:start position:39% line:-1
次は実行です

00:17:32.219 --> 00:17:35.956 align:start position:30% line:-2
実行とは
つまりスープの注文です

00:17:36.223 --> 00:17:39.993 align:start position:20% line:-1
まずIntentから注文を作ります

00:17:41.028 --> 00:17:43.997 align:start position:16% line:-1
そしてorderManagerで注文し

00:17:44.164 --> 00:17:49.036 align:start position:32% line:-2
最後に 注文の完了を
システムに知らせます

00:17:49.436 --> 00:17:54.341 align:start position:25% line:-2
しかし ここで待ち時間なども
伝えられるので

00:17:54.508 --> 00:17:58.312 align:start position:27% line:-2
新たなカスタム応答コードも
入力しましょう

00:18:03.484 --> 00:18:07.754 align:start position:18% line:-2
この応答テンプレートには
soupとwaitTimeの文字列を

00:18:08.388 --> 00:18:11.992 align:start position:25% line:-1
Intentから持ってきます

00:18:18.999 --> 00:18:22.102 align:start position:27% line:-2
待ち時間は
Orderから持ってきます

00:18:24.771 --> 00:18:26.306 align:start position:41% line:-1
これで終了

00:18:27.241 --> 00:18:32.412 align:start position:27% line:-2
カスタム応答のサポートを
Intentに追加するのは

00:18:33.013 --> 00:18:34.448 align:start position:39% line:-1
簡単なのです

00:18:35.682 --> 00:18:40.387 align:start position:27% line:-2
まずは状況に合わせて
カスタムIntentを定義

00:18:40.721 --> 00:18:46.260 align:start position:25% line:-2
そして Siriに言わせたい
応答を定義します

00:18:46.360 --> 00:18:49.630 align:start position:30% line:-2
最後にそれを
Intentハンドラへ

00:18:50.230 --> 00:18:53.200 align:start position:21% line:-1
さて 先ほどスープを注文したので

00:18:53.300 --> 00:18:55.502 align:start position:30% line:-1
そろそろ取りに行きます

00:18:55.836 --> 00:18:59.606 align:start position:36% line:-2
同僚の野中彩花に
交代しますね

00:18:59.740 --> 00:19:03.577 align:start position:32% line:-2
ここからは彼女が
音声とUIについての

00:18:59.740 --> 00:19:03.577 align:start position:32% line:-2
ここからは彼女が
音声とUIについての

00:19:03.677 --> 00:19:07.448 align:start position:32% line:-2
ベストプラクティスを
ご紹介します

00:19:07.548 --> 00:19:09.283 align:start position:32% line:-1
では 彩花の登場です

00:19:09.416 --> 00:19:14.421 align:start position:43% line:-1
(拍手)

00:19:14.688 --> 00:19:15.856 align:start position:41% line:-1
ありがとう

00:19:15.956 --> 00:19:19.026 align:start position:43% line:-1
(拍手)

00:19:19.927 --> 00:19:20.994 align:start position:41% line:-1
こんにちは

00:19:21.495 --> 00:19:25.999 align:start position:23% line:-2
ご覧いただいたとおり
ショートカットの設定は簡単です

00:19:26.166 --> 00:19:29.336 align:start position:25% line:-1
ショートカットが提供されると

00:19:29.436 --> 00:19:33.240 align:start position:34% line:-2
すぐに使える状態で
表示されます

00:19:33.707 --> 00:19:36.777 align:start position:30% line:-2
ここからは
いくつか新しいAPIと

00:19:36.877 --> 00:19:40.447 align:start position:32% line:-2
ベストプラクティスを
ご紹介します

00:19:40.547 --> 00:19:44.451 align:start position:30% line:-2
ご存知のとおり
ユーザは細かいことから

00:19:44.551 --> 00:19:47.221 align:start position:29% line:-1
大きな配慮に気づきますね

00:19:48.088 --> 00:19:49.556 align:start position:32% line:-1
最初のセッションでは

00:19:49.656 --> 00:19:54.061 align:start position:27% line:-2
ショートカットの
提供方法を２つ紹介しました

00:19:54.328 --> 00:19:56.663 align:start position:14% line:-1
１つは NSUserActivityです

00:19:57.164 --> 00:20:00.434 align:start position:27% line:-2
基本的な統合なら
userActivityで

00:19:57.164 --> 00:20:00.434 align:start position:27% line:-2
基本的な統合なら
userActivityで

00:20:00.534 --> 00:20:04.872 align:start position:27% line:-2
ユーザに特定のコンテンツを
提示できます

00:20:05.305 --> 00:20:07.574 align:start position:29% line:-1
２つめはIntentです

00:20:07.741 --> 00:20:10.444 align:start position:23% line:-1
バックグラウンドで何かを動かし

00:20:10.544 --> 00:20:14.348 align:start position:20% line:-1
同時にSiriを使うことができます

00:20:14.448 --> 00:20:18.719 align:start position:23% line:-2
これによりユーザとのやり取りを
省けます

00:20:19.653 --> 00:20:25.125 align:start position:23% line:-2
そして どちらにも
複数のパラメータを設定できます

00:20:25.626 --> 00:20:27.828 align:start position:34% line:-1
１つめは見出しです

00:20:28.462 --> 00:20:30.464 align:start position:14% line:-1
“Order clam chowder”

00:20:30.631 --> 00:20:33.801 align:start position:30% line:-1
補足文と画像も入れます

00:20:33.901 --> 00:20:38.338 align:start position:30% line:-2
そして最後に
推奨呼び出しフレーズも

00:20:39.206 --> 00:20:42.209 align:start position:27% line:-1
最適な例を見ていきましょう

00:20:42.309 --> 00:20:45.312 align:start position:29% line:-1
まずは見出しと補足文です

00:20:46.413 --> 00:20:51.652 align:start position:23% line:-2
ここで２つ ハイレベルなことを
考慮します

00:20:52.119 --> 00:20:56.457 align:start position:30% line:-2
まず見出しで実行内容が
分かることです

00:20:56.657 --> 00:21:02.496 align:start position:25% line:-2
ショートカットの実行や追加は
内容の把握が重要です

00:20:56.657 --> 00:21:02.496 align:start position:25% line:-2
ショートカットの実行や追加は
内容の把握が重要です

00:21:03.297 --> 00:21:07.601 align:start position:30% line:-2
補足文もつけられますが
これは任意です

00:21:08.268 --> 00:21:10.938 align:start position:25% line:-1
では 詳細を見ていきましょう

00:21:12.206 --> 00:21:14.975 align:start position:27% line:-1
まず 最初の文字は大文字に

00:21:15.075 --> 00:21:20.981 align:start position:25% line:-2
他のアプリケーションや
ショートカットと統一させます

00:21:22.249 --> 00:21:25.152 align:start position:32% line:-1
そして 見出しは短く

00:21:25.252 --> 00:21:29.356 align:start position:30% line:-2
画面に表示できることは
限られているので

00:21:29.590 --> 00:21:34.228 align:start position:25% line:-2
言語的に冠詞などを省けるなら
省きます

00:21:35.562 --> 00:21:38.665 align:start position:27% line:-1
不可欠な情報も必ず入れます

00:21:38.766 --> 00:21:43.904 align:start position:29% line:-2
友人への支払いを実行する
ショートカットなら

00:21:44.004 --> 00:21:49.843 align:start position:25% line:-2
送金する金額を
見出しに含めることが重要です

00:21:51.745 --> 00:21:55.215 align:start position:20% line:-1
Intentの場合は動詞を入れます

00:21:55.315 --> 00:21:59.953 align:start position:32% line:-2
例えば英語なら
動詞を冒頭に置きます

00:22:01.321 --> 00:22:04.658 align:start position:25% line:-1
もちろん 世界に発信するには

00:22:04.758 --> 00:22:08.128 align:start position:34% line:-2
ローカライズも
忘れてはいけません

00:22:09.363 --> 00:22:12.366 align:start position:30% line:-2
次は 避けるべきことを
紹介します

00:22:12.566 --> 00:22:15.869 align:start position:23% line:-1
まず アプリケーションの名前は

00:22:16.270 --> 00:22:22.009 align:start position:23% line:-2
自動的に表示されるので
見出しに含める必要はありません

00:22:23.477 --> 00:22:27.381 align:start position:29% line:-2
そして 見出しと補足文の
重複を避け

00:22:27.481 --> 00:22:31.285 align:start position:23% line:-1
本当に必要な情報を入れましょう

00:22:33.120 --> 00:22:39.259 align:start position:29% line:-2
言葉などの引用以外では
引用符を使うのを控えます

00:22:39.393 --> 00:22:41.762 align:start position:34% line:-2
メッセージを送る
ショートカットなら

00:22:41.862 --> 00:22:45.332 align:start position:23% line:-1
内容を引用符に入れて構いません

00:22:47.167 --> 00:22:49.603 align:start position:29% line:-1
では 例を見てみましょう

00:22:51.705 --> 00:22:54.575 align:start position:23% line:-2
Chefから
“‘クラムチャウダー'を１つ”

00:22:54.708 --> 00:22:57.010 align:start position:27% line:-2
“スープを買うには
Soup Chefが一番”

00:22:57.778 --> 00:23:03.083 align:start position:29% line:-2
これが悪い例であることは
もう お分かりですよね

00:22:57.778 --> 00:23:03.083 align:start position:29% line:-2
これが悪い例であることは
もう お分かりですよね

00:23:03.383 --> 00:23:04.618 align:start position:38% line:-1
改善しましょう

00:23:05.285 --> 00:23:08.722 align:start position:18% line:-1
まず“Soup Chefから”を削除

00:23:08.822 --> 00:23:12.459 align:start position:30% line:-2
すでにUIで
表示されているからです

00:23:13.927 --> 00:23:16.363 align:start position:21% line:-2
“‘クラムチャウダー'を１つ”が
残りました

00:23:16.864 --> 00:23:20.901 align:start position:30% line:-2
でも これだけでは
実行内容が分かりません

00:23:21.001 --> 00:23:24.771 align:start position:30% line:-2
スープを注文するのか
閲覧だけなのか不明です

00:23:24.938 --> 00:23:27.074 align:start position:32% line:-1
動詞を追加しましょう

00:23:27.307 --> 00:23:30.978 align:start position:21% line:-1
省スペースのため 冠詞も外します

00:23:34.481 --> 00:23:36.917 align:start position:18% line:-2
“‘クラムチャウダー’を注文する”と
なりました

00:23:37.551 --> 00:23:39.553 align:start position:34% line:-1
でも この表現では

00:23:39.653 --> 00:23:44.224 align:start position:23% line:-2
“クラムチャウダー”っぽいもの
という感じです

00:23:44.324 --> 00:23:48.295 align:start position:27% line:-2
これでは
おいしそうに見えませんよね

00:23:49.696 --> 00:23:54.401 align:start position:27% line:-2
でも これは引用符を外せば
解決します

00:23:55.469 --> 00:23:57.070 align:start position:18% line:-2
“‘クラムチャウダー’を注文する”に
なりました

00:23:57.171 --> 00:23:59.840 align:start position:34% line:-1
見出しは上出来です

00:24:00.140 --> 00:24:01.842 align:start position:41% line:-1
次は補足文

00:24:02.276 --> 00:24:05.045 align:start position:27% line:-2
“スープを買うにはSoup
Chefが一番”とあります

00:24:05.379 --> 00:24:08.048 align:start position:30% line:-1
これでは宣伝文句ですね

00:24:08.148 --> 00:24:10.584 align:start position:29% line:-1
すでに知っている情報です

00:24:10.684 --> 00:24:14.621 align:start position:30% line:-2
ショートカット用の
有益な情報もありません

00:24:15.022 --> 00:24:17.758 align:start position:29% line:-1
すでに不合格な状態ですが

00:24:17.891 --> 00:24:21.662 align:start position:21% line:-1
さらに致命的と言える点があります

00:24:21.762 --> 00:24:25.465 align:start position:32% line:-2
最近 配達サービスも
始まったのですが

00:24:25.566 --> 00:24:27.901 align:start position:25% line:-1
これでは配達先が分かりません

00:24:28.001 --> 00:24:31.505 align:start position:30% line:-2
自宅なのか
オフィスなのか不明です

00:24:31.605 --> 00:24:34.608 align:start position:25% line:-1
なので配達先を追加しましょう

00:24:35.609 --> 00:24:39.313 align:start position:9% line:-2
“クラムチャウダーを 1 Apple Park
Wayまで注文する”です

00:24:39.413 --> 00:24:42.983 align:start position:29% line:-2
これで具体的な実行内容が
分かりますね

00:24:43.217 --> 00:24:44.251 align:start position:39% line:-1
バッチリです

00:24:45.719 --> 00:24:48.655 align:start position:38% line:-2
設定画面では
こんな感じです

00:24:50.023 --> 00:24:53.360 align:start position:34% line:-2
悪くないけれど
さらに改善できます

00:24:53.894 --> 00:24:59.199 align:start position:21% line:-2
今はクラムチャウダーも
トマトスープもアイコンが同じです

00:24:59.299 --> 00:25:03.403 align:start position:27% line:-2
できれば それぞれに合った
スープの画像を

00:24:59.299 --> 00:25:03.403 align:start position:27% line:-2
できれば それぞれに合った
スープの画像を

00:25:03.504 --> 00:25:06.140 align:start position:29% line:-1
表示したいところですよね

00:25:06.306 --> 00:25:07.775 align:start position:38% line:-1
こんな感じです

00:25:08.742 --> 00:25:10.944 align:start position:34% line:-1
使えるAPIは２つ

00:25:11.078 --> 00:25:14.348 align:start position:25% line:-2
userActivity用と
Intent用です

00:25:15.816 --> 00:25:20.888 align:start position:30% line:-2
ユーザが スープの
注文履歴を見たとします

00:25:20.988 --> 00:25:23.690 align:start position:36% line:-2
我々は それを
ショートカットに

00:25:23.791 --> 00:25:25.893 align:start position:29% line:-1
結びつけることができます

00:25:26.593 --> 00:25:31.031 align:start position:16% line:-2
まず CSSearchableItem
AttributeSetを作成

00:25:31.131 --> 00:25:35.669 align:start position:36% line:-2
これは補足文の
提供と同じですが

00:25:35.769 --> 00:25:37.838 align:start position:30% line:-1
ここでは画像を使います

00:25:37.938 --> 00:25:40.674 align:start position:25% line:-1
クラムチャウダーの画像を作成

00:25:40.874 --> 00:25:45.879 align:start position:21% line:-2
PNGデータをサムネイルとして
attributesに設定します

00:25:46.113 --> 00:25:50.884 align:start position:21% line:-2
次に そのattributesを
userActivityに設定

00:25:50.984 --> 00:25:56.590 align:start position:16% line:-2
最後に viewControllerで
userActivityを提供します

00:25:58.258 --> 00:26:00.828 align:start position:29% line:-2
Intentで
どう動くか見てみましょう

00:25:58.258 --> 00:26:00.828 align:start position:29% line:-2
Intentで
どう動くか見てみましょう

00:26:01.495 --> 00:26:04.331 align:start position:25% line:-1
Intentには複数の画像を

00:26:04.565 --> 00:26:07.568 align:start position:23% line:-1
各パラメータごとに設定できます

00:26:08.001 --> 00:26:12.339 align:start position:27% line:-2
チャウダーのパラメータには
スープの画像

00:26:12.639 --> 00:26:15.976 align:start position:18% line:-2
deliveryLocationには
オフィスの画像を入れます

00:26:16.076 --> 00:26:20.414 align:start position:12% line:-2
そして INInteractionを作って
提供します

00:26:21.482 --> 00:26:26.687 align:start position:30% line:-2
複数のパラメータを持つ
ショートカットの場合

00:26:26.787 --> 00:26:31.592 align:start position:30% line:-2
どの画像が使われるのか
気になりますよね

00:26:32.693 --> 00:26:35.662 align:start position:11% line:-2
Intent Definitionファイルの
出番です

00:26:36.864 --> 00:26:39.333 align:start position:23% line:-1
特にパラメータのセクションです

00:26:39.666 --> 00:26:42.636 align:start position:23% line:-1
ここでは 具体性の低いものから

00:26:42.736 --> 00:26:47.407 align:start position:30% line:-2
最も具体的なものという
順番に並べます

00:26:47.508 --> 00:26:51.745 align:start position:29% line:-2
私の場合 スープの画像を
より重視するので

00:26:51.845 --> 00:26:55.082 align:start position:11% line:-2
soupをdeliveryLocationの
下に配置します

00:26:56.083 --> 00:26:59.419 align:start position:29% line:-2
すると ショートカットは
こうなりました

00:27:00.087 --> 00:27:04.224 align:start position:25% line:-2
最初の２つは
スープと配達先が含まれていて

00:27:04.324 --> 00:27:07.494 align:start position:29% line:-1
スープの画像が出ています

00:27:07.594 --> 00:27:11.698 align:start position:29% line:-2
３つめは
配達先だけが含まれていて

00:27:11.798 --> 00:27:14.835 align:start position:29% line:-1
配達先の画像が出ています

00:27:15.602 --> 00:27:20.641 align:start position:25% line:-2
これで完璧なので タップして
Siriに追加しましょう

00:27:21.408 --> 00:27:24.378 align:start position:29% line:-1
ユーザも この機能を喜び

00:27:24.478 --> 00:27:28.549 align:start position:27% line:-2
皆 ショートカットの設定に
夢中です

00:27:28.816 --> 00:27:33.153 align:start position:34% line:-2
でも 戸惑いの声も
聞こえ始めました

00:27:34.454 --> 00:27:37.691 align:start position:36% line:-2
何を録音すべきか
分からないのです

00:27:38.025 --> 00:27:42.863 align:start position:25% line:-2
ショートカットのフレーズには
創造的なヒントが役立ちます

00:27:43.297 --> 00:27:46.900 align:start position:29% line:-2
そこで スープが大好きな
デベロッパたちが

00:27:47.000 --> 00:27:51.205 align:start position:34% line:-2
注文用のフレーズを
考え出しました

00:27:51.371 --> 00:27:55.008 align:start position:29% line:-2
“トメイトゥ トマト”や
“チャウダータイム”です

00:27:55.509 --> 00:27:59.813 align:start position:30% line:-2
それらを こんなふうに
ユーザに提案します

00:27:59.913 --> 00:28:02.649 align:start position:20% line:-1
“チャウダータイム”はどうですか？

00:27:59.913 --> 00:28:02.649 align:start position:20% line:-1
“チャウダータイム”はどうですか？

00:28:03.250 --> 00:28:06.120 align:start position:25% line:-1
もちろん APIがありますよ

00:28:06.720 --> 00:28:10.858 align:start position:32% line:-2
前の例に追加するのは
１行だけです

00:28:11.191 --> 00:28:14.461 align:start position:4% line:-2
suggestedInvocationPhraseの
プロパティに

00:28:14.561 --> 00:28:16.697 align:start position:27% line:-1
“チャウダータイム”と設定

00:28:17.064 --> 00:28:19.199 align:start position:30% line:-1
Intentも同じです

00:28:19.733 --> 00:28:23.203 align:start position:4% line:-2
こちらも
suggestedInvocationPhraseを

00:28:23.303 --> 00:28:25.439 align:start position:25% line:-1
“チャウダータイム”にします

00:28:25.939 --> 00:28:28.509 align:start position:29% line:-1
シンプルなAPIですよね

00:28:28.609 --> 00:28:32.012 align:start position:30% line:-2
実際 どんなフレーズが
いいでしょう？

00:28:34.181 --> 00:28:36.783 align:start position:30% line:-1
必ず意識してほしいのは

00:28:36.884 --> 00:28:40.888 align:start position:30% line:-2
短くて覚えやすいという
ポイントです

00:28:41.221 --> 00:28:46.593 align:start position:21% line:-2
ユーザは注文のたびに
このフレーズを言うことになるので

00:28:46.693 --> 00:28:49.396 align:start position:32% line:-1
２～３単語が理想です

00:28:51.365 --> 00:28:56.203 align:start position:30% line:-2
“ヘイ Siri”を
含めないことも重要です

00:28:56.336 --> 00:29:01.141 align:start position:16% line:-2
“ヘイ Siri チャウダータイム”と
設定してしまったら

00:28:56.336 --> 00:29:01.141 align:start position:16% line:-2
“ヘイ Siri チャウダータイム”と
設定してしまったら

00:29:01.241 --> 00:29:05.479 align:start position:18% line:-2
実行する時は
“ヘイ Siri チャウダータイム”

00:29:05.579 --> 00:29:07.214 align:start position:38% line:-1
これは面倒です

00:29:09.750 --> 00:29:12.052 align:start position:34% line:-1
例を見てみましょう

00:29:13.620 --> 00:29:15.756 align:start position:23% line:-1
１つめは “ヘイ Siri,”

00:29:15.856 --> 00:29:18.091 align:start position:25% line:-1
“注文をお願い　ありがとう”

00:29:19.026 --> 00:29:23.297 align:start position:30% line:-2
丁寧ですが
いい事例ではありません

00:29:23.697 --> 00:29:26.266 align:start position:20% line:-1
まず“ヘイ Siri,”が問題です

00:29:26.366 --> 00:29:31.505 align:start position:27% line:-2
それに 毎回これを言うのは
ちょっと長すぎます

00:29:31.605 --> 00:29:32.773 align:start position:41% line:-1
却下します

00:29:33.207 --> 00:29:34.708 align:start position:34% line:-1
次はどうでしょう？

00:29:34.842 --> 00:29:38.345 align:start position:29% line:-2
“クラムチャウダーを１つ
オフィスまで注文する”

00:29:38.512 --> 00:29:41.748 align:start position:32% line:-2
よさそうに見えますが
これもダメ

00:29:41.849 --> 00:29:45.352 align:start position:34% line:-2
まだ長すぎて
覚えるのが大変です

00:29:45.452 --> 00:29:48.422 align:start position:29% line:-1
注文のたびに 思い出して

00:29:48.522 --> 00:29:51.758 align:start position:25% line:-1
これを言うのは イヤですよね

00:29:53.327 --> 00:29:54.661 align:start position:32% line:-1
これはどうでしょう？

00:29:54.862 --> 00:29:56.997 align:start position:29% line:-1
“チャウダータイム”だけ

00:29:57.097 --> 00:30:01.768 align:start position:21% line:-2
短くて覚えやすく
“ヘイ Siri,”もありません

00:29:57.097 --> 00:30:01.768 align:start position:21% line:-2
短くて覚えやすく
“ヘイ Siri,”もありません

00:30:01.869 --> 00:30:05.105 align:start position:36% line:-2
これならバッチリ
合格です

00:30:05.839 --> 00:30:07.975 align:start position:29% line:-1
でも まだ考慮する点が…

00:30:08.208 --> 00:30:13.781 align:start position:25% line:-2
世界中のユーザに 快適な
エクスペリエンスを届けるには

00:30:13.881 --> 00:30:15.415 align:start position:30% line:-1
ローカライズが必須です

00:30:15.516 --> 00:30:19.953 align:start position:30% line:-2
例えば 私は
英語と日本語を話すので

00:30:20.120 --> 00:30:22.823 align:start position:32% line:-1
日本語なら 例えば―

00:30:23.457 --> 00:30:28.395 align:start position:18% line:-2
“Chowder time”ではなく
“チャウダー食べたい”ですかね

00:30:30.430 --> 00:30:32.599 align:start position:30% line:-1
ローカライズをする場合

00:30:32.800 --> 00:30:37.171 align:start position:29% line:-2
いくつか意識しておくべき
ことがあります

00:30:37.371 --> 00:30:39.773 align:start position:27% line:-1
コードをローカライズする際

00:30:39.873 --> 00:30:43.877 align:start position:11% line:-2
Intent Definitionファイルも
ローカライズしましょう

00:30:43.977 --> 00:30:46.780 align:start position:29% line:-1
文字列がたくさんあります

00:30:47.347 --> 00:30:49.817 align:start position:27% line:-1
複数形にも気をつけましょう

00:30:49.917 --> 00:30:53.720 align:start position:30% line:-2
英語環境だけでも
ローカライズが必要です

00:30:53.854 --> 00:30:57.324 align:start position:5% line:-1
“Order one clam chowder”を

00:30:57.424 --> 00:31:00.694 align:start position:2% line:-2
“Order three clam chowders”
にするといったことです

00:30:57.424 --> 00:31:00.694 align:start position:2% line:-2
“Order three clam chowders”
にするといったことです

00:31:00.894 --> 00:31:05.899 align:start position:25% line:-2
詳細はローカライゼーションの
セッションとラボでご確認を

00:31:06.066 --> 00:31:08.502 align:start position:27% line:-1
必要な情報がすべてあります

00:31:09.303 --> 00:31:11.972 align:start position:32% line:-1
では 英語に戻ります

00:31:14.074 --> 00:31:17.578 align:start position:27% line:-2
設定画面を見ると
ベストプラクティスどおりの

00:31:17.678 --> 00:31:21.115 align:start position:29% line:-2
ステキなショートカットが
並んでいます

00:31:21.215 --> 00:31:24.751 align:start position:30% line:-2
ここに出ているのは
ユーザのルーティーンや

00:31:24.852 --> 00:31:28.522 align:start position:25% line:-1
最近の行動に基づいたものです

00:31:29.123 --> 00:31:33.894 align:start position:25% line:-2
デベロッパも ここに
ショートカットを提案できます

00:31:34.027 --> 00:31:40.400 align:start position:27% line:-2
ユーザがやっていないことを
提案できるので便利です

00:31:40.701 --> 00:31:46.173 align:start position:25% line:-2
例えば 使われていない
音楽のプレイリストがあったら

00:31:46.273 --> 00:31:49.343 align:start position:32% line:-2
そのショートカットを
提案できます

00:31:49.576 --> 00:31:55.115 align:start position:25% line:-2
そのプレイリストが将来的に
使われる可能性があるからです

00:31:56.216 --> 00:32:02.189 align:start position:25% line:-2
本日のスープを注文する
ショートカットもよさそうです

00:31:56.216 --> 00:32:02.189 align:start position:25% line:-2
本日のスープを注文する
ショートカットもよさそうです

00:32:02.289 --> 00:32:05.092 align:start position:23% line:-1
これまで注文したことがなくても

00:32:05.192 --> 00:32:08.295 align:start position:29% line:-1
ユーザは気に入りそうです

00:32:08.395 --> 00:32:11.298 align:start position:25% line:-1
おいしくて特別価格ですからね

00:32:11.532 --> 00:32:14.768 align:start position:25% line:-1
APIで手順を確認しましょう

00:32:15.903 --> 00:32:18.071 align:start position:32% line:-1
Intentを使って

00:32:18.238 --> 00:32:20.407 align:start position:23% line:-1
INShortcutを作ります

00:32:20.507 --> 00:32:24.078 align:start position:23% line:-2
userActivityでも
INShortcutを作れます

00:32:24.278 --> 00:32:28.782 align:start position:11% line:-2
それを提案リストに入れ
INVoiceShortcutCenterへ

00:32:28.882 --> 00:32:31.518 align:start position:9% line:-2
setShortcutSuggestionsで
メソッドを設定

00:32:32.119 --> 00:32:38.225 align:start position:23% line:-2
これで 私の提案も
一緒に表示されるようになります

00:32:38.659 --> 00:32:42.996 align:start position:25% line:-2
ショートカット
アプリケーションにも表示され

00:32:43.096 --> 00:32:46.266 align:start position:29% line:-2
カスタムショートカットが
作れます

00:32:49.503 --> 00:32:55.709 align:start position:27% line:-2
極上のエクスペリエンスに
ここまで力を入れてきたので

00:32:55.809 --> 00:33:00.347 align:start position:27% line:-2
Siriのショートカットを
使ってもらいたいですよね

00:32:55.809 --> 00:33:00.347 align:start position:27% line:-2
Siriのショートカットを
使ってもらいたいですよね

00:33:00.447 --> 00:33:04.218 align:start position:30% line:-2
アプリケーション内で
ショートカットを出せば

00:33:04.318 --> 00:33:08.121 align:start position:29% line:-2
ユーザは すぐに
ショートカットを作れます

00:33:09.089 --> 00:33:12.125 align:start position:27% line:-1
例えば スープを注文したら

00:33:12.626 --> 00:33:16.563 align:start position:30% line:-2
そのショートカットを
Siriに追加できます

00:33:18.298 --> 00:33:20.534 align:start position:21% line:-1
“Siriに追加”をタップすると

00:33:20.968 --> 00:33:23.604 align:start position:25% line:-1
システムUIが表示されます

00:33:23.704 --> 00:33:27.808 align:start position:30% line:-2
これを使えば
Siriに追加できます

00:33:28.876 --> 00:33:31.111 align:start position:23% line:-1
この時のAPIを見てみましょう

00:33:32.212 --> 00:33:36.783 align:start position:16% line:-2
ここでも userActivityから
INShortcutを作成

00:33:37.017 --> 00:33:42.422 align:start position:7% line:-2
そして INUIAddVoiceShortcut
ViewControllerを作り

00:33:42.723 --> 00:33:45.125 align:start position:29% line:-1
デリゲートを設定して表示

00:33:45.592 --> 00:33:47.261 align:start position:30% line:-1
Intentも同じです

00:33:47.427 --> 00:33:52.833 align:start position:21% line:-2
userActivityではなく
Intentを使い

00:33:53.033 --> 00:33:57.070 align:start position:20% line:-2
viewControllerを作り
デリゲートを設定して表示

00:33:57.604 --> 00:34:03.143 align:start position:30% line:-2
こうすると ユーザには
この画面が表示されます

00:33:57.604 --> 00:34:03.143 align:start position:30% line:-2
こうすると ユーザには
この画面が表示されます

00:34:03.977 --> 00:34:09.616 align:start position:27% line:-2
既存のショートカットの
削除や編集も可能にできます

00:34:13.253 --> 00:34:17.190 align:start position:29% line:-2
当社の他のユーザが作った
ショートカットを

00:34:17.291 --> 00:34:19.693 align:start position:23% line:-1
取得するためのAPIもあります

00:34:19.793 --> 00:34:24.697 align:start position:32% line:-2
例えば 他のユーザが
どのスープについて

00:34:24.797 --> 00:34:30.204 align:start position:25% line:-2
ショートカットを作ったのかを
知ることができるのです

00:34:30.404 --> 00:34:34.274 align:start position:32% line:-2
クラムチャウダーには
“チャウダータイム”

00:34:34.375 --> 00:34:36.877 align:start position:30% line:-2
トマトスープには
“トメイトゥ トマト”

00:34:37.643 --> 00:34:38.512 align:start position:39% line:-1
バッチリです

00:34:39.646 --> 00:34:44.184 align:start position:30% line:-2
最後に今日学んだことを
振り返りましょう

00:34:44.918 --> 00:34:51.091 align:start position:21% line:-2
まず 音声案内での
カスタム応答の大切さを学びました

00:34:51.358 --> 00:34:53.960 align:start position:30% line:-1
設定方法も簡単でしたね

00:34:55.728 --> 00:34:59.733 align:start position:18% line:-2
カスタムIntents UIによって
エクスペリエンスを

00:34:59.833 --> 00:35:04.371 align:start position:20% line:-2
Siriや検索 ロック画面などにも
持ち込めます

00:34:59.833 --> 00:35:04.371 align:start position:20% line:-2
Siriや検索 ロック画面などにも
持ち込めます

00:35:06.306 --> 00:35:08.375 align:start position:32% line:-1
細かい配慮も大事です

00:35:08.475 --> 00:35:11.411 align:start position:23% line:-1
ショートカットに画像を加えたり

00:35:11.511 --> 00:35:15.716 align:start position:25% line:-2
引用符を外して
印象を変えたりというものです

00:35:15.816 --> 00:35:19.386 align:start position:25% line:-1
また ローカライズも重要です

00:35:20.988 --> 00:35:26.493 align:start position:27% line:-2
最後に 各種APIを使い
ユーザが ショートカットを

00:35:26.593 --> 00:35:31.732 align:start position:29% line:-2
最適なタイミングで
作成できるようにしました

00:35:33.233 --> 00:35:37.538 align:start position:5% line:-2
この内容はdeveloper.apple.comに
すべて載っています

00:35:37.638 --> 00:35:42.576 align:start position:25% line:-2
また ショートカット･ラボも
１週間 開催します

00:35:42.743 --> 00:35:45.512 align:start position:18% line:-2
このあとは Watchのセッションも
あります

00:35:45.612 --> 00:35:49.883 align:start position:23% line:-2
WatchやSiriの文字盤の
ショートカットの解説で

00:35:49.983 --> 00:35:54.054 align:start position:20% line:-2
Watch Appなしで使う方法も
説明します

00:35:54.154 --> 00:35:56.089 align:start position:32% line:-1
マストウォッチですね

00:35:59.827 --> 00:36:04.064 align:start position:43% line:-1
(拍手)

00:35:59.827 --> 00:36:04.064 align:start position:43% line:-1
(拍手)

00:36:06.166 --> 00:36:11.104 align:start position:29% line:-2
極上のエクスペリエンスの
作り方は分かりましたね

00:36:11.205 --> 00:36:13.774 align:start position:25% line:-1
皆さんが何を作るか楽しみです

00:36:13.941 --> 00:36:17.377 align:start position:34% line:-2
引き続きWWDCを
お楽しみください

00:36:17.478 --> 00:36:22.182 align:start position:43% line:-1
(拍手)
