WEBVTT

00:00:07.074 --> 00:00:13.080 align:start position:43% line:-1
(音楽)

00:00:17.985 --> 00:00:20.754 align:start position:32% line:-2
今回はiOSで
ドラッグ＆ドロップを

00:00:20.854 --> 00:00:24.758 align:start position:29% line:-2
アクセシブルにする方法を
お話しします

00:00:24.858 --> 00:00:25.926 align:start position:39% line:-1
始めましょう

00:00:27.895 --> 00:00:30.330 align:start position:34% line:-1
まずアジェンダです

00:00:30.597 --> 00:00:34.735 align:start position:32% line:-2
ドラッグ＆ドロップの
基本を復習してから―

00:00:35.669 --> 00:00:40.007 align:start position:29% line:-2
アクセシブルにするための
APIの概念を説明します

00:00:40.574 --> 00:00:42.142 align:start position:36% line:-1
事例も紹介します

00:00:42.242 --> 00:00:46.180 align:start position:29% line:-2
基本的な
ドラッグ＆ドロップの例と

00:00:46.346 --> 00:00:49.650 align:start position:29% line:-2
ドロップが複数回の場合を
見てみます

00:00:50.918 --> 00:00:52.853 align:start position:32% line:-1
ドラッグ＆ドロップは

00:00:52.953 --> 00:00:56.156 align:start position:34% line:-2
iOS 11から
追加された機能です

00:00:56.256 --> 00:00:59.493 align:start position:29% line:-2
同一アプリケーション内に
限定されず―

00:00:59.593 --> 00:01:03.697 align:start position:34% line:-2
手軽なデータ移行を
実現します

00:00:59.593 --> 00:01:03.697 align:start position:34% line:-2
手軽なデータ移行を
実現します

00:01:04.598 --> 00:01:07.568 align:start position:32% line:-2
ドラッグ＆ドロップの
インタラクションは

00:01:07.668 --> 00:01:10.204 align:start position:32% line:-2
アプリケーションの
ビューがホストします

00:01:10.571 --> 00:01:15.042 align:start position:18% line:-2
ドラッグを開始するには
UIDragInteractionを

00:01:15.809 --> 00:01:19.112 align:start position:21% line:-2
ドロップするにはUIDrop
Interactionを使います

00:01:19.546 --> 00:01:21.315 align:start position:30% line:-1
聞きなじみのない方は―

00:01:21.415 --> 00:01:26.954 align:start position:0% line:-2
過去のセッション WWDC 2017の
“Introducing Drag and Drop”を

00:01:27.054 --> 00:01:28.655 align:start position:36% line:-1
先にご覧ください

00:01:30.924 --> 00:01:33.026 align:start position:29% line:-2
アクセシビリティについて
お話しします

00:01:33.126 --> 00:01:36.797 align:start position:32% line:-2
やはり
支援技術のユーザにも

00:01:36.897 --> 00:01:40.467 align:start position:30% line:-2
ドラッグ＆ドロップを
体験してほしいものです

00:01:41.702 --> 00:01:46.807 align:start position:29% line:-2
そのためには いくつか
解決すべき問題があります

00:01:47.274 --> 00:01:51.545 align:start position:21% line:-2
アクセシビリティ要素は
インタラクションをホストしません

00:01:51.645 --> 00:01:57.050 align:start position:29% line:-2
例えば サブビューが
ホストする場合があります

00:01:57.451 --> 00:01:59.686 align:start position:32% line:-2
また それら要素が
インタラクションを―

00:01:59.786 --> 00:02:02.990 align:start position:32% line:-2
ホストするビューから
下った場合です

00:01:59.786 --> 00:02:02.990 align:start position:32% line:-2
ホストするビューから
下った場合です

00:02:03.790 --> 00:02:06.860 align:start position:20% line:-2
アクセシビリティ用の
ドラッグ＆ドロップAPIの出番です

00:02:06.960 --> 00:02:10.764 align:start position:32% line:-2
ロジカルな
ドラッグ＆ドロップが

00:02:10.864 --> 00:02:14.001 align:start position:34% line:-2
支援技術で
使用可能になります

00:02:14.401 --> 00:02:16.170 align:start position:30% line:-1
APIを見てみましょう

00:02:17.604 --> 00:02:19.573 align:start position:34% line:-1
非正規プロトコルで

00:02:19.673 --> 00:02:23.544 align:start position:34% line:-2
２つのプロパティを
定義しています

00:02:23.777 --> 00:02:27.781 align:start position:27% line:-2
Drag Sourcesと
Drop Pointsです

00:02:28.482 --> 00:02:32.819 align:start position:27% line:-2
Drag Sourcesは
ドラッグの開始位置を

00:02:32.920 --> 00:02:37.524 align:start position:29% line:-2
Drop Pointsは
ドロップ位置を指します

00:02:37.891 --> 00:02:42.462 align:start position:32% line:-2
プロパティにデータを
提供すればいいのです

00:02:44.064 --> 00:02:47.267 align:start position:30% line:-2
アクセシビリティ向けの
カスタム動作と

00:02:47.367 --> 00:02:50.704 align:start position:32% line:-2
同じ操作を
ユーザは体験できます

00:02:51.171 --> 00:02:52.539 align:start position:34% line:-1
APIのコードです

00:02:55.809 --> 00:03:00.447 align:start position:27% line:-2
多くのドラッグ＆ドロップは
自動で検出され―

00:02:55.809 --> 00:03:00.447 align:start position:27% line:-2
多くのドラッグ＆ドロップは
自動で検出され―

00:03:01.648 --> 00:03:05.452 align:start position:27% line:-2
その際には
デフォルト名が付与されます

00:03:05.853 --> 00:03:09.089 align:start position:32% line:-2
でも それは
要素のサブツリー内の

00:03:09.189 --> 00:03:10.991 align:start position:27% line:-1
インタラクションに限ります

00:03:12.025 --> 00:03:13.827 align:start position:9% line:-2
UIAccessibilityDragging
プロトコルで―

00:03:13.927 --> 00:03:17.497 align:start position:29% line:-2
ビュー階層に関わらず
必要なインタラクションを

00:03:17.598 --> 00:03:20.334 align:start position:29% line:-1
すべて拾うことができます

00:03:20.901 --> 00:03:23.837 align:start position:29% line:-1
名前も自由に付けられます

00:03:24.705 --> 00:03:27.040 align:start position:30% line:-1
支援技術ユーザのために

00:03:27.140 --> 00:03:31.812 align:start position:30% line:-2
このプロトコルの導入を
ぜひ検討すべきです

00:03:33.714 --> 00:03:36.550 align:start position:27% line:-1
この非正規プロトコルを使い

00:03:36.650 --> 00:03:39.686 align:start position:34% line:-2
ドラッグを
実行してみましょう

00:03:41.054 --> 00:03:42.990 align:start position:34% line:-1
棒グラフを作ります

00:03:43.090 --> 00:03:47.661 align:start position:25% line:-2
CALayerオブジェクトを
設定し グラフを描きました

00:03:48.495 --> 00:03:53.834 align:start position:29% line:-2
棒のドラッグに合わせ
データも動くようにします

00:03:55.769 --> 00:03:57.471 align:start position:36% line:-1
こんなグラフです

00:03:57.571 --> 00:04:00.974 align:start position:23% line:-2
棒はどれも
CALayerオブジェクトです

00:03:57.571 --> 00:04:00.974 align:start position:23% line:-2
棒はどれも
CALayerオブジェクトです

00:04:02.276 --> 00:04:05.612 align:start position:29% line:-2
いかにドラッグを
実装できるのでしょうか？

00:04:07.347 --> 00:04:08.982 align:start position:36% line:-1
コードの一例です

00:04:10.317 --> 00:04:13.987 align:start position:27% line:-2
レイヤはインタラクションを
管理できません

00:04:14.087 --> 00:04:17.491 align:start position:29% line:-2
だから グラフそのものに
実装させています

00:04:17.591 --> 00:04:20.560 align:start position:30% line:-2
そしてこの
コールバックの中では―

00:04:21.827 --> 00:04:24.398 align:start position:29% line:-1
タッチされたグラフごとに

00:04:24.731 --> 00:04:28.368 align:start position:27% line:-1
異なるデータを戻しています

00:04:29.069 --> 00:04:31.572 align:start position:27% line:-2
１つの
ドラッグインタラクションで

00:04:31.672 --> 00:04:34.942 align:start position:32% line:-2
複数の論理ドラッグに
対応します

00:04:35.108 --> 00:04:39.213 align:start position:27% line:-2
ベースの
ドラッグ＆ドロップAPIが

00:04:39.313 --> 00:04:41.448 align:start position:30% line:-1
いかに強力か分かります

00:04:43.250 --> 00:04:45.252 align:start position:34% line:-1
ここからが本題です

00:04:45.886 --> 00:04:48.555 align:start position:30% line:-2
グラフを
アクセシブルにするには

00:04:49.156 --> 00:04:53.260 align:start position:30% line:-2
アクセシビリティ要素に
各棒を指定します

00:04:53.760 --> 00:04:54.928 align:start position:34% line:-1
このような感じです

00:04:55.596 --> 00:04:58.365 align:start position:27% line:-1
コンテンツに関するデータを

00:04:58.465 --> 00:05:02.703 align:start position:29% line:-2
アクセシビリティの
ランタイムに送っています

00:04:58.465 --> 00:05:02.703 align:start position:29% line:-2
アクセシビリティの
ランタイムに送っています

00:05:02.870 --> 00:05:07.074 align:start position:30% line:-2
これで支援技術の体験が
変わるのです

00:05:07.674 --> 00:05:10.544 align:start position:34% line:-2
ドラッグに関しても
同様に行います

00:05:10.644 --> 00:05:13.046 align:start position:9% line:-2
UIAccessibilityDragging
について

00:05:13.146 --> 00:05:16.016 align:start position:32% line:-1
もう少し学びましょう

00:05:18.018 --> 00:05:21.688 align:start position:9% line:-2
UIAccessibilityLocation
Descriptorとは？

00:05:23.557 --> 00:05:29.329 align:start position:29% line:-2
インタラクションの位置を
表すデータで―

00:05:30.430 --> 00:05:34.168 align:start position:34% line:-2
点をビューの中で
名付けて特定します

00:05:34.768 --> 00:05:37.871 align:start position:29% line:-1
先ほどの棒グラフで言えば

00:05:38.605 --> 00:05:43.510 align:start position:29% line:-2
位置ディスクリプタは
ご覧のようになるでしょう

00:05:43.610 --> 00:05:45.846 align:start position:18% line:-2
名前は
“Drag Bar Data”とされ

00:05:46.079 --> 00:05:48.382 align:start position:27% line:-2
ビューは
棒グラフそのものとなります

00:05:48.482 --> 00:05:51.251 align:start position:27% line:-1
点は棒の中の１点を指します

00:05:54.154 --> 00:05:57.157 align:start position:27% line:-2
このデータをどう処理するか
見てみましょう

00:05:57.958 --> 00:06:00.961 align:start position:34% line:-2
２つのプロパティに
アサインします

00:05:57.958 --> 00:06:00.961 align:start position:34% line:-2
２つのプロパティに
アサインします

00:06:02.296 --> 00:06:05.399 align:start position:11% line:-2
accessibility
DragSourceDescriptorsと

00:06:05.499 --> 00:06:08.001 align:start position:11% line:-2
accessibility
DropPointDescriptorsです

00:06:09.469 --> 00:06:15.042 align:start position:32% line:-2
要素と関連づけられた
ドラッグの起点と

00:06:15.142 --> 00:06:20.714 align:start position:32% line:-2
要素と関連づけられた
ドロップ点を示します

00:06:21.181 --> 00:06:23.817 align:start position:29% line:-1
この２つを指定することで

00:06:23.917 --> 00:06:27.621 align:start position:27% line:-2
ドラッグ＆ドロップの対象を
伝えます

00:06:28.956 --> 00:06:34.595 align:start position:29% line:-2
ただし ディスクリプタの
参照先には注意が必要です

00:06:34.695 --> 00:06:40.367 align:start position:27% line:-2
実際にインタラクションを
含んでいるビューそのものを

00:06:40.467 --> 00:06:42.436 align:start position:38% line:-1
必ず指定します

00:06:45.005 --> 00:06:49.810 align:start position:27% line:-2
ドラッグ１つなら
必要なコードはこれだけです

00:06:49.977 --> 00:06:52.045 align:start position:34% line:-2
ビューの中の１点を
指定し―

00:06:52.145 --> 00:06:56.016 align:start position:27% line:-2
ドラッグのディスクリプタを
まずは定義します

00:06:56.283 --> 00:07:00.087 align:start position:27% line:-2
そしてこのように
ディスクリプタを含む配列に

00:06:56.283 --> 00:07:00.087 align:start position:27% line:-2
そしてこのように
ディスクリプタを含む配列に

00:07:00.187 --> 00:07:02.256 align:start position:30% line:-1
プロパティを指定します

00:07:04.525 --> 00:07:08.629 align:start position:34% line:-2
棒グラフのコードに
戻りましょう

00:07:08.829 --> 00:07:11.565 align:start position:30% line:-2
各要素を
ドラッグさせる方法は？

00:07:14.268 --> 00:07:19.540 align:start position:30% line:-2
ビューの座標空間内で
要素が表す１点を算出し

00:07:19.973 --> 00:07:22.976 align:start position:30% line:-2
適切なディスクリプタを
作成します

00:07:23.076 --> 00:07:27.481 align:start position:29% line:-2
最後に要素のプロパティを
指定します

00:07:30.384 --> 00:07:32.352 align:start position:30% line:-1
別の例を見てみましょう

00:07:32.619 --> 00:07:35.722 align:start position:30% line:-2
要素は１つで
ドロップが複数の例です

00:07:36.590 --> 00:07:39.960 align:start position:34% line:-2
連絡先カードなどが
考えられます

00:07:40.227 --> 00:07:41.995 align:start position:32% line:-1
カードが小さいので―

00:07:43.063 --> 00:07:47.701 align:start position:36% line:-2
１つの要素として
認識させます

00:07:47.801 --> 00:07:53.073 align:start position:30% line:-2
しかしカードには
複数の受け皿があります

00:07:54.441 --> 00:07:56.743 align:start position:32% line:-1
このように 顔写真と

00:07:56.844 --> 00:08:01.014 align:start position:27% line:-2
任意のファイルを
ドロップできるスぺースです

00:07:56.844 --> 00:08:01.014 align:start position:27% line:-2
任意のファイルを
ドロップできるスぺースです

00:08:02.883 --> 00:08:07.955 align:start position:4% line:-2
以上 UIAccessibilityDragging
非正規プロトコルの使用法です

00:08:10.290 --> 00:08:14.394 align:start position:30% line:-2
ビューのゲッターは
オーバーライド可能です

00:08:15.996 --> 00:08:18.465 align:start position:29% line:-1
受け皿の中間点を算出し―

00:08:18.932 --> 00:08:22.436 align:start position:32% line:-2
位置ディスクリプタを
２つ戻すのです

00:08:24.538 --> 00:08:25.439 align:start position:41% line:-1
要約します

00:08:25.539 --> 00:08:31.378 align:start position:30% line:-2
アクセシビリティ要素に
関連づけられた処理を―

00:08:32.379 --> 00:08:38.385 align:start position:29% line:-2
確実に支援技術に
認識させることが大切です

00:08:38.852 --> 00:08:42.256 align:start position:9% line:-2
accessibilityDragSource
Descriptorsのプロパティで

00:08:42.356 --> 00:08:45.192 align:start position:27% line:-1
ドラッグ処理を認識させます

00:08:45.292 --> 00:08:47.961 align:start position:11% line:-2
accessibilityDropPoint
Descriptorsのプロパティで

00:08:48.061 --> 00:08:50.364 align:start position:27% line:-1
ドロップ処理を認識させます

00:08:50.464 --> 00:08:51.598 align:start position:34% line:-1
２つのプロパティは

00:08:51.698 --> 00:08:55.135 align:start position:9% line:-2
UIAccessibilityLocation
Descriptorのオブジェクトです

00:08:55.235 --> 00:08:56.970 align:start position:32% line:-1
アプリケーション内の

00:08:57.070 --> 00:09:01.375 align:start position:29% line:-2
ドラッグ＆ドロップ処理の
位置と起動方法を示します

00:08:57.070 --> 00:09:01.375 align:start position:29% line:-2
ドラッグ＆ドロップ処理の
位置と起動方法を示します

00:09:02.876 --> 00:09:05.279 align:start position:27% line:-1
詳細はウェブをご覧ください

00:09:06.146 --> 00:09:07.114 align:start position:30% line:-1
ありがとうございました
