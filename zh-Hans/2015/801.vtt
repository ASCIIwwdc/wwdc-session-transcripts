WEBVTT

00:00:19.486 --> 00:00:24.491 align:middle
面向未来硬件的设计

00:00:25.058 --> 00:00:25.893 align:middle
大家好

00:00:27.528 --> 00:00:30.430 align:middle
欢迎参加
“面向未来硬件的设计”讲座

00:00:31.565 --> 00:00:32.966 align:middle
我是杰弗里·特拉·伯恩斯坦

00:00:33.333 --> 00:00:36.103 align:middle
今天的主讲人还有马特乌斯·格伦
和 比尔·林德梅尔

00:00:37.905 --> 00:00:39.306 align:middle
哪些人应该参加今天的讲座呢？

00:00:39.840 --> 00:00:44.244 align:middle
也许你正在开发一种设备

00:00:44.311 --> 00:00:45.913 align:middle
这种设备连接到某个APP

00:00:46.847 --> 00:00:52.686 align:middle
比如这个设备是一个洗碗机

00:00:52.886 --> 00:00:54.721 align:middle
你希望通过APP来控制它

00:00:55.856 --> 00:00:58.058 align:middle
或者是一种无人机
你希望用APP进行控制

00:00:59.159 --> 00:01:03.130 align:middle
或者是高尔夫俱乐部设备
将你的练球信息传送到APP

00:00:59.159 --> 00:01:03.130 align:middle
或者是高尔夫俱乐部设备
将你的练球信息传送到APP

00:01:04.263 --> 00:01:07.134 align:middle
或者你有一个设备
想要为它开发一个APP

00:01:08.135 --> 00:01:10.938 align:middle
也许是一款游戏
你想要为它开发用户控制器

00:01:12.172 --> 00:01:13.540 align:middle
或者你想开发消息发送APP

00:01:14.241 --> 00:01:16.977 align:middle
或开发一个配合约会APP使用的装置
总之各种各样五花八门

00:01:19.079 --> 00:01:21.815 align:middle
你想要为你目前
还未拥有的设备开发APP

00:01:21.949 --> 00:01:25.185 align:middle
例如Apple Watch
或者我们刚发布的新产品

00:01:25.419 --> 00:01:26.987 align:middle
本讲座也会对你有帮助

00:01:28.956 --> 00:01:29.790 align:middle
我们是谁？

00:01:30.657 --> 00:01:33.060 align:middle
我们是一个投资者 设计师
和原型设备开发者团队

00:01:33.594 --> 00:01:35.495 align:middle
我们的工作涵盖所有的Apple产品

00:01:36.029 --> 00:01:38.599 align:middle
我们研究新界面技术对于我们产品

00:01:38.665 --> 00:01:40.701 align:middle
操作系统和应用的意义

00:01:41.535 --> 00:01:44.304 align:middle
我们推出了一些令人兴奋的功能，
例如多点触控和手势控制

00:01:44.671 --> 00:01:46.273 align:middle
触控板和触觉反馈

00:01:48.542 --> 00:01:53.080 align:middle
在WWDC 2014大会上
我们举办了名为“原型开发”的讲座

00:01:53.614 --> 00:01:54.915 align:middle
你们有人参加过这个讲座吗？

00:01:56.617 --> 00:01:57.451 align:middle
谢谢 好极了

00:01:57.651 --> 00:01:58.619 align:middle
感谢你们的参加

00:01:59.086 --> 00:02:00.320 align:middle
你们有人看过网上视频吗?

00:01:59.086 --> 00:02:00.320 align:middle
你们有人看过网上视频吗?

00:02:02.823 --> 00:02:03.891 align:middle
人数不多 好的

00:02:05.826 --> 00:02:08.061 align:middle
本讲座并不需要
那个讲座上介绍的知识

00:02:08.127 --> 00:02:09.729 align:middle
但是我还是建议你们看一下那个讲座

00:02:10.062 --> 00:02:12.332 align:middle
我简单介绍一下今天的内容

00:02:13.667 --> 00:02:15.202 align:middle
我们推出了

00:02:15.402 --> 00:02:17.804 align:middle
一款革命性的新应用
名为Toast Modern

00:02:18.605 --> 00:02:23.043 align:middle
你可以用它来查找旧金山
街道上的美味吐司面包店

00:02:24.511 --> 00:02:28.649 align:middle
拍摄你正在品尝的吐司面包的照片
并与亲朋友好分享

00:02:30.083 --> 00:02:32.753 align:middle
我们使用这个APP来解释
为什么要进行原型开发

00:02:33.053 --> 00:02:34.388 align:middle
主要有两个原因

00:02:34.721 --> 00:02:37.090 align:middle
首先是对验证想法

00:02:37.157 --> 00:02:39.159 align:middle
以节省产品开发所需要的时间和金钱

00:02:39.459 --> 00:02:44.031 align:middle
第二是获得新的想法
从而让你的产品变得更好

00:02:45.432 --> 00:02:47.167 align:middle
以前我们讨论过如何进行原型开发

00:02:48.769 --> 00:02:53.207 align:middle
其过程是制作一个虚拟APP，
介绍给用户取听他们的意见

00:02:53.407 --> 00:02:57.110 align:middle
然后反复进行改进直到产品完美无缺

00:02:59.346 --> 00:03:02.583 align:middle
你们知道互联网上的反馈信息很有价值

00:02:59.346 --> 00:03:02.583 align:middle
你们知道互联网上的反馈信息很有价值

00:03:02.749 --> 00:03:05.586 align:middle
人们可能会说“这个操作方法
看上去不错我可能会试一下”

00:03:07.855 --> 00:03:10.290 align:middle
“WWDC 开发者大会上的
原型开发讲座视频很不错”

00:03:10.357 --> 00:03:11.358 align:middle
“来一盘吐司面包”

00:03:12.292 --> 00:03:15.362 align:middle
“需要记住：第一开发虚拟APP
第二：我忘了...”

00:03:17.297 --> 00:03:18.532 align:middle
“我为感到骄傲”我的妈妈

00:03:21.635 --> 00:03:24.538 align:middle
今天的讲座不容错过

00:03:25.372 --> 00:03:29.309 align:middle
我们将推出全新的革命性的
Toast Modern产品

00:03:29.610 --> 00:03:32.946 align:middle
它建立在Toast Modern的
成功基础之上

00:03:33.981 --> 00:03:36.917 align:middle
我们还会介绍Apple和合作伙伴

00:03:37.584 --> 00:03:40.087 align:middle
进行iWatch原型开发背后的小故事

00:03:41.455 --> 00:03:44.091 align:middle
我们将会创建一个设备
和连接到这个设备的APP

00:03:44.858 --> 00:03:49.096 align:middle
我们将会介绍一些
硬件和软件原型开发策略

00:03:50.664 --> 00:03:53.834 align:middle
今天我将向你们展示
Toast Modern产品

00:03:53.901 --> 00:03:55.402 align:middle
你们想看到它吗？

00:04:00.207 --> 00:04:01.041 align:middle
好极了

00:04:02.476 --> 00:04:05.679 align:middle
这是一个

00:04:07.748 --> 00:04:10.083 align:middle
革命性的连网

00:04:11.318 --> 00:04:18.257 align:middle
社交大数据互联网APP

00:05:24.958 --> 00:05:25.792 align:middle
谢谢

00:05:26.426 --> 00:05:27.261 align:middle
非常感谢

00:05:33.767 --> 00:05:37.271 align:middle
我们将它称为
Toastal Service

00:05:40.040 --> 00:05:43.877 align:middle
这是世界首个社交面包机

00:05:46.213 --> 00:05:48.515 align:middle
让你能够发送Toast消息

00:05:49.016 --> 00:05:50.817 align:middle
给你的亲朋友好友

00:05:51.885 --> 00:05:56.023 align:middle
它有三种颜色：银色

00:05:56.857 --> 00:05:59.693 align:middle
太空灰和18K金色

00:06:08.035 --> 00:06:09.169 align:middle
我们不仅有iPhone

00:06:09.369 --> 00:06:10.337 align:middle
还有Toaster

00:06:11.205 --> 00:06:13.340 align:middle
它们都具有强大的功能

00:06:13.707 --> 00:06:15.809 align:middle
iPhone拥有美观的界面

00:06:16.743 --> 00:06:18.011 align:middle
它连接到互联网

00:06:19.179 --> 00:06:20.280 align:middle
而且始终陪伴在你身边

00:06:20.747 --> 00:06:23.650 align:middle
我们的吐司面包机将面包变成吐司面包

00:06:24.818 --> 00:06:27.120 align:middle
我们想要组合它们的功能

00:06:28.388 --> 00:06:30.791 align:middle
我们想要模糊硬件和软件之间的界线

00:06:30.858 --> 00:06:32.492 align:middle
创造完美的混合体

00:06:33.093 --> 00:06:35.963 align:middle
我想到有一个产品已经做到这一点

00:06:37.798 --> 00:06:39.099 align:middle
那就是Apple Watch

00:06:41.268 --> 00:06:44.238 align:middle
你们可能会认为
在Apple设计师构想出

00:06:44.771 --> 00:06:50.878 align:middle
完整的Apple Watch
设计方案然后进行生产再交付给你们

00:06:52.412 --> 00:06:56.049 align:middle
而实际上我们的做法是在其他设备上

00:06:56.116 --> 00:06:59.286 align:middle
模拟Watch让我们
能够试验界面功能

00:06:59.920 --> 00:07:03.724 align:middle
这是成熟的Apple watch
它与现在的成品基本相同

00:06:59.920 --> 00:07:03.724 align:middle
这是成熟的Apple watch
它与现在的成品基本相同

00:07:04.424 --> 00:07:07.961 align:middle
它的初始设计是一个矩形
我们使用这个界面

00:07:08.328 --> 00:07:12.299 align:middle
来试验我们想要添加到Watch的
各种功能以确保完美的用户体验

00:07:12.366 --> 00:07:13.567 align:middle
我们可能添加

00:07:14.434 --> 00:07:17.137 align:middle
一个数字表冠并显示在屏幕上

00:07:17.204 --> 00:07:19.940 align:middle
进行滚动操作以理解它的工作方式

00:07:20.374 --> 00:07:21.808 align:middle
并试验各种按钮功能

00:07:22.809 --> 00:07:26.880 align:middle
这是一个很好的方法
让我们能够更好地理解Watch界面

00:07:26.980 --> 00:07:28.549 align:middle
和测试它的功能

00:07:28.982 --> 00:07:34.655 align:middle
但是你不能把iPhone
绑在你的手腕上走出户外尝试使用它。

00:07:35.022 --> 00:07:39.193 align:middle
我们的一些APP开发合作伙伴
在开发Watch APP时

00:07:39.259 --> 00:07:42.863 align:middle
Watch还没有正式推出
但是他们想出一些好办法

00:07:43.864 --> 00:07:46.600 align:middle
比如这个French
Transit APP

00:07:47.000 --> 00:07:48.702 align:middle
他们制造自己的
Apple Watch

00:07:49.136 --> 00:07:50.971 align:middle
看上去很简陋但是很有用

00:07:51.572 --> 00:07:55.342 align:middle
他们绘制了一些不同的屏幕图片

00:07:56.410 --> 00:07:59.112 align:middle
然后在Watch内滑动这些图片
这很重要

00:07:59.413 --> 00:08:00.714 align:middle
这是一个火车时刻表APP

00:07:59.413 --> 00:08:00.714 align:middle
这是一个火车时刻表APP

00:08:01.081 --> 00:08:04.818 align:middle
我需要知道它是否能够显示我已经
赶不上的车次

00:08:05.118 --> 00:08:06.854 align:middle
我可以赶得上的车次

00:08:07.054 --> 00:08:08.455 align:middle
他们需要在实际环境中进行测试

00:08:09.489 --> 00:08:11.725 align:middle
German新闻报纸Bild
打印了一张

00:08:11.792 --> 00:08:15.662 align:middle
Apple Watch图片在其下方
滑动显示不同的内容

00:08:16.363 --> 00:08:18.832 align:middle
他们需要进行测试

00:08:19.099 --> 00:08:22.202 align:middle
确保他们的文章
在Apple Watch容易识读

00:08:24.938 --> 00:08:28.141 align:middle
关于硬件和软件原型开发
我们有一些经验和教训

00:08:29.510 --> 00:08:31.712 align:middle
我们知道我们可以在屏幕上模拟硬件

00:08:31.879 --> 00:08:33.380 align:middle
就像Apple
Watch那样

00:08:35.148 --> 00:08:36.750 align:middle
我们可以使用图片来模拟软件

00:08:36.817 --> 00:08:39.152 align:middle
去年我们曾经使用
Toast Modern进行过讲解

00:08:39.919 --> 00:08:43.724 align:middle
我们需要在应用环境中
以合适尺寸在适当位置进行测试

00:08:43.991 --> 00:08:46.927 align:middle
就像我们刚才看到的
纸质Watch原型那样

00:08:49.329 --> 00:08:51.298 align:middle
这是我们去年的原型开发流程

00:08:51.365 --> 00:08:54.501 align:middle
开发虚拟设备展示给消费者
听取他们的意见

00:08:55.669 --> 00:08:58.572 align:middle
今年我们将开发虚拟硬件和软件

00:08:59.373 --> 00:09:03.243 align:middle
在此之前我们需要
问我们自己三个重要的问题

00:08:59.373 --> 00:09:03.243 align:middle
在此之前我们需要
问我们自己三个重要的问题

00:09:04.411 --> 00:09:05.712 align:middle
哪些内容需要变得更真实？

00:09:07.147 --> 00:09:08.248 align:middle
哪些项目可以进行模拟？

00:09:08.315 --> 00:09:11.518 align:middle
除了那些必须真实的项目之外
其他所有一切都可以模拟

00:09:12.719 --> 00:09:14.254 align:middle
最后一个问题设备将在哪里使用？

00:09:14.955 --> 00:09:16.890 align:middle
然后我们将进行开发
并且展示我们的成果

00:09:19.560 --> 00:09:20.627 align:middle
我们应该展示给谁呢？

00:09:21.228 --> 00:09:22.529 align:middle
你的APP用户

00:09:22.829 --> 00:09:24.598 align:middle
如果你的办公室同事不是你的用户

00:09:24.831 --> 00:09:25.799 align:middle
你应该去找目标用户

00:09:26.867 --> 00:09:29.970 align:middle
去哪里找？
去人们可能使用它的地方找

00:09:30.103 --> 00:09:31.305 align:middle
你需要走出去

00:09:31.939 --> 00:09:37.177 align:middle
请记住不要与你的潜在用户
进行争议辩解或忽略其意见

00:09:37.544 --> 00:09:40.480 align:middle
你需要了解他们对你的原型产品的印象

00:09:42.082 --> 00:09:45.152 align:middle
将原型产品展示给潜在用户之后
我们获知他们的反馈意见

00:09:46.954 --> 00:09:49.089 align:middle
然后我们问自己三个问题：

00:09:49.590 --> 00:09:50.824 align:middle
第一 哪些功能正常运行？

00:09:51.458 --> 00:09:53.060 align:middle
第二 哪些功能不能运行？

00:09:53.360 --> 00:09:56.730 align:middle
第三 我们可以获得哪些其他想法？

00:09:58.265 --> 00:10:00.567 align:middle
今天我们需要重复这个流程三次

00:09:58.265 --> 00:10:00.567 align:middle
今天我们需要重复这个流程三次

00:10:00.934 --> 00:10:02.369 align:middle
我想向你们介绍一些不同的技术

00:10:02.903 --> 00:10:05.072 align:middle
我们首先从图片和动画开始

00:10:05.672 --> 00:10:08.175 align:middle
然后我们将使用其背后的技术

00:10:09.176 --> 00:10:13.447 align:middle
之后我们将创建一个
轻量级交互式联网原型

00:10:15.048 --> 00:10:17.751 align:middle
我想要简单回顾一下
Toastal Service

00:10:18.752 --> 00:10:21.121 align:middle
这是世界首个具有
社交功能的吐司面包机

00:10:22.222 --> 00:10:24.591 align:middle
你可以接收吐司面包消息
我们称之为Toastie

00:10:26.326 --> 00:10:27.494 align:middle
也可以发送吐司面包消息

00:10:28.128 --> 00:10:30.697 align:middle
让我们来体验这个神奇的面包机

00:10:31.398 --> 00:10:33.934 align:middle
在开始之前我想请马特乌斯上台

00:10:39.940 --> 00:10:40.774 align:middle
谢谢杰夫

00:10:42.276 --> 00:10:44.912 align:middle
很好 我们应该怎样开始呢？

00:10:46.480 --> 00:10:50.050 align:middle
首先让我们来看我们的硬件和APP

00:10:50.651 --> 00:10:53.020 align:middle
我们需要问自己一些问题
杰夫前面讲过这些问题

00:10:53.620 --> 00:10:56.890 align:middle
首先哪些内容应该变得更真实？

00:10:59.326 --> 00:11:04.331 align:middle
让我们首先来看接收消息和烤面包功能

00:10:59.326 --> 00:11:04.331 align:middle
让我们首先来看接收消息和烤面包功能

00:11:04.665 --> 00:11:09.837 align:middle
在硬件上让我们来想办法
提示已经接收到Toastie

00:11:10.771 --> 00:11:14.041 align:middle
在APP上我们考虑使用
新Toastie通知

00:11:14.541 --> 00:11:17.678 align:middle
思考APP可以显示哪些类型的信息

00:11:19.346 --> 00:11:21.548 align:middle
下一个问题是
我们可以模拟哪些项目？

00:11:22.482 --> 00:11:26.086 align:middle
这时我们应该开动脑筋

00:11:26.153 --> 00:11:28.121 align:middle
我们并不打算建造一台吐司面包机

00:11:28.188 --> 00:11:30.657 align:middle
我们要做的事情并不是
把面包变成吐司面包

00:11:31.358 --> 00:11:33.460 align:middle
我们要做的是在设备上放几张图片

00:11:33.527 --> 00:11:35.028 align:middle
然后模拟硬件工作方法

00:11:36.296 --> 00:11:41.602 align:middle
在APP上我们使用
图片来表示所有的内容

00:11:41.768 --> 00:11:43.904 align:middle
我们并不想要实现真实的交互功能

00:11:43.971 --> 00:11:46.106 align:middle
而且不会编写任何代码

00:11:48.442 --> 00:11:50.911 align:middle
第三个问题 产品将在哪里使用？

00:11:52.045 --> 00:11:54.681 align:middle
吐司面包机的使用位置是厨房

00:11:54.915 --> 00:11:58.418 align:middle
APP则可以在家里的
任何位置使用 这是肯定的

00:12:01.054 --> 00:12:03.357 align:middle
让我们来看我们的Toaster

00:12:05.425 --> 00:12:09.563 align:middle
我们说过我们想要通过
在屏幕上显示图片来模拟硬件

00:12:09.730 --> 00:12:13.500 align:middle
这听上去很像杰夫刚才所说的

00:12:13.600 --> 00:12:16.537 align:middle
在iPhone上
模拟Apple Watch

00:12:17.804 --> 00:12:21.708 align:middle
幸运的是Apple还生产一种与
Toaster的形状相似的产品它就是iPad

00:12:22.743 --> 00:12:24.511 align:middle
在这里我们可以使用它

00:12:26.013 --> 00:12:29.116 align:middle
为了画出我们的Toaster
我准备使用keynote

00:12:30.017 --> 00:12:34.421 align:middle
你们可以使用自己熟悉的软件

00:12:34.922 --> 00:12:37.991 align:middle
我将会使用keynote
你可以使用自己喜欢的软件

00:12:40.160 --> 00:12:42.262 align:middle
我将会尽可能简单化

00:12:43.330 --> 00:12:47.868 align:middle
Toaster实际上是一个盒子
有几个支脚一个控制杆

00:12:48.936 --> 00:12:50.871 align:middle
也许我们应该将它称为数字操控杆

00:12:52.506 --> 00:12:55.042 align:middle
还有一个插槽你可以插入一块面包

00:12:56.176 --> 00:12:58.045 align:middle
我们还说过我们想要指示

00:12:58.512 --> 00:13:00.814 align:middle
收到的新Toastie

00:12:58.512 --> 00:13:00.814 align:middle
收到的新Toastie

00:13:00.881 --> 00:13:03.417 align:middle
我们在这里设置一个
LED灯它可以变亮

00:13:05.586 --> 00:13:09.489 align:middle
在Keynote我将添加
几片面包给这个Toaster

00:13:10.557 --> 00:13:12.359 align:middle
这是正在制作
吐司面包的Toaster

00:13:12.659 --> 00:13:15.062 align:middle
最终将会有一个Toastie弹出来

00:13:15.128 --> 00:13:16.263 align:middle
让我们看看上面写着什么

00:13:17.130 --> 00:13:18.298 align:middle
我们可以取出它

00:13:18.599 --> 00:13:21.201 align:middle
我们可以在iPad
的Keynote中打开它

00:13:22.169 --> 00:13:23.370 align:middle
这样一个Toaster就完成了

00:13:25.572 --> 00:13:27.241 align:middle
对于app我们想要做相似的事情

00:13:27.307 --> 00:13:31.411 align:middle
我们进入主屏幕
这是iPhone主屏幕上的屏幕截图

00:13:31.478 --> 00:13:33.113 align:middle
我们将APP图标放在上面

00:13:34.581 --> 00:13:37.351 align:middle
我们将截取一张屏幕截图

00:13:37.684 --> 00:13:41.488 align:middle
作为APP背景图它是可以自定义的

00:13:42.756 --> 00:13:43.590 align:middle
就是这么简单

00:13:45.225 --> 00:13:48.529 align:middle
对于我们的APP我们想要使用
一张Toast Modern截图

00:13:48.629 --> 00:13:50.631 align:middle
这个APP是我们去年推出的

00:13:51.465 --> 00:13:55.569 align:middle
你可以看到 在左上角
有一个方便的打开位置

00:13:55.669 --> 00:14:00.107 align:middle
十分适合放置我们的
Toaster收件箱链接

00:13:55.669 --> 00:14:00.107 align:middle
十分适合放置我们的
Toaster收件箱链接

00:14:00.440 --> 00:14:04.645 align:middle
在这里我将会放上Toaster图标
和一个通知小图标

00:14:07.414 --> 00:14:13.120 align:middle
在Toaster 收件箱中
我将使用面包片作为占位标记

00:14:13.187 --> 00:14:15.856 align:middle
因为我们不想隐藏
Toastie上显示的内容

00:14:15.923 --> 00:14:17.925 align:middle
我不想打消

00:14:17.991 --> 00:14:21.562 align:middle
你在等待你的吐司面包片时
的热切期待心情和惊喜时刻

00:14:22.496 --> 00:14:25.832 align:middle
我们还会显示
这个Toastie的发送者

00:14:26.333 --> 00:14:29.803 align:middle
我们会放置一张图片
在这里显示发送者的姓名

00:14:30.671 --> 00:14:33.373 align:middle
还会添加发送日期和时间

00:14:34.608 --> 00:14:36.143 align:middle
我想我们还应该能够

00:14:36.210 --> 00:14:39.179 align:middle
设置面包的烤制时间

00:14:39.246 --> 00:14:40.314 align:middle
这些效果会更好

00:14:41.381 --> 00:14:43.250 align:middle
对此我们只需要在这里
使用一个滑动条

00:14:46.587 --> 00:14:52.059 align:middle
现在让我们在iPhone上
打开它看看它

00:14:52.125 --> 00:14:53.527 align:middle
在实际设备上的效果

00:14:56.063 --> 00:14:57.464 align:middle
这看上去像是一个真实的APP

00:14:57.564 --> 00:14:59.900 align:middle
但实际上是一个完全虚假的app

00:15:01.201 --> 00:15:04.004 align:middle
现在让我们来看它们如何配合工作

00:15:06.673 --> 00:15:08.575 align:middle
你可以看到当我点击屏幕

00:15:08.642 --> 00:15:10.944 align:middle
显示通知打开APP

00:15:11.245 --> 00:15:12.579 align:middle
以进入收件箱

00:15:14.214 --> 00:15:20.120 align:middle
在Toaster你会看到
LED已经在闪烁

00:15:20.988 --> 00:15:22.956 align:middle
然后我可以点击插入一些面包

00:15:23.590 --> 00:15:25.726 align:middle
我再次点击下拉数字操控杆

00:15:26.460 --> 00:15:29.830 align:middle
几秒钟之后
Toastie将会弹出面包片

00:15:30.664 --> 00:15:31.965 align:middle
让我们看看上面显示什么

00:15:32.966 --> 00:15:33.934 align:middle
到此一切正常

00:15:34.968 --> 00:15:37.538 align:middle
我可以立即将它取出来
显示给我的朋友们看

00:15:37.671 --> 00:15:39.806 align:middle
听取他们的意见

00:15:39.940 --> 00:15:41.575 align:middle
从中获得有价值的信息

00:15:43.544 --> 00:15:44.711 align:middle
它们是怎么运作的呢？

00:15:47.014 --> 00:15:51.185 align:middle
LED看起来能够
很好地指示新Toastie

00:15:51.752 --> 00:15:55.289 align:middle
APP上的通知告诉
我们有了新的Toastie

00:15:55.355 --> 00:15:57.257 align:middle
即使我们不在厨房之中

00:15:57.824 --> 00:16:00.060 align:middle
满怀期待地盯着我们吐司面包机

00:15:57.824 --> 00:16:00.060 align:middle
满怀期待地盯着我们吐司面包机

00:16:01.295 --> 00:16:04.898 align:middle
有一个不太完美的事情是
很多人对向我们问起过

00:16:05.032 --> 00:16:07.801 align:middle
如果有多个
Toastie将会怎么样？

00:16:08.535 --> 00:16:11.238 align:middle
确实此如我们的设计
并没有很好地考虑到这一点

00:16:12.673 --> 00:16:15.976 align:middle
那么对于这种情况
我们应该怎么做呢？

00:16:17.010 --> 00:16:21.081 align:middle
也许我们会
升级Toaster上的Led

00:16:21.281 --> 00:16:23.483 align:middle
也许我们的APP会显示
一个Toastie清单

00:16:23.550 --> 00:16:25.052 align:middle
而不是仅显示一个Toastie

00:16:27.120 --> 00:16:28.589 align:middle
让我们再次从最顶层开始

00:16:30.157 --> 00:16:33.393 align:middle
让我们来看我们的硬件和APP

00:16:34.494 --> 00:16:36.396 align:middle
在这个阶段让我们问自己

00:16:36.463 --> 00:16:37.965 align:middle
哪些内容需要变得更加真实？

00:16:39.600 --> 00:16:42.202 align:middle
我们需要硬件能够
处理多个Toastie

00:16:42.269 --> 00:16:43.470 align:middle
并且烤制合适的面包片

00:16:43.670 --> 00:16:46.406 align:middle
在APP上我们希望
能够浏览Toastie

00:16:46.573 --> 00:16:48.041 align:middle
选择我们想要的Toastie

00:16:48.709 --> 00:16:49.977 align:middle
那么我们可以虚拟哪些内容呢？

00:16:50.677 --> 00:16:52.412 align:middle
我们仍然需要虚拟尽可能多的内容

00:16:52.479 --> 00:16:55.415 align:middle
在两个设备之间不会有真实的连接

00:16:55.849 --> 00:16:59.253 align:middle
我们还不触及与实际的面包烤制
相关的任何内容

00:17:01.154 --> 00:17:03.390 align:middle
对于APP的数据发送和接收

00:17:03.490 --> 00:17:07.594 align:middle
我们也需要进行虚拟
我们的UI仍然还是图片和动画

00:17:08.862 --> 00:17:11.330 align:middle
那么用户将在哪里使用产品？
这和前面一样

00:17:11.565 --> 00:17:14.835 align:middle
Toaster在厨房中使用
而APP则可以在任何地方使用

00:17:16.435 --> 00:17:17.838 align:middle
让我们再次来看Toaster

00:17:19.473 --> 00:17:22.108 align:middle
前面我们说过我们想要更改LED

00:17:22.175 --> 00:17:24.877 align:middle
在这里我们可以使用一个
点阵式显示屏

00:17:25.345 --> 00:17:28.348 align:middle
我们可以指示
收到多少个Toastie

00:17:29.449 --> 00:17:33.086 align:middle
我们不会在Toaster的这个位置

00:17:33.153 --> 00:17:36.623 align:middle
使用高分辨率触摸屏
因为这会增大产品生产难度

00:17:36.690 --> 00:17:38.325 align:middle
而且会导致价格上升

00:17:38.625 --> 00:17:41.662 align:middle
我们并不需要重复提供
手机上已经存在的功能

00:17:42.129 --> 00:17:43.497 align:middle
我们将保持简单的硬件设计

00:17:44.097 --> 00:17:46.033 align:middle
并将重点放在手机上的复杂功能

00:17:47.534 --> 00:17:51.839 align:middle
因此我们将更多的
Toastie添加到的收件箱之中

00:17:52.105 --> 00:17:55.742 align:middle
我们可以轻松滑动
选择我们想要烤制的面包片

00:17:56.677 --> 00:17:59.680 align:middle
我们创建一个状态指示已经选择
一个不同的Toastie

00:18:00.948 --> 00:18:04.284 align:middle
我们将增加一个APP显示屏幕

00:18:04.551 --> 00:18:06.053 align:middle
显示Toaster正在进行烤制

00:18:06.186 --> 00:18:07.788 align:middle
在顶部我们添加一个倒计时

00:18:08.088 --> 00:18:12.226 align:middle
显示还需要等待多长时间
就可以吃到美味的吐司面包片

00:18:12.926 --> 00:18:17.798 align:middle
最后 Toastie烤制完毕
重新显示在清单上

00:18:17.931 --> 00:18:20.400 align:middle
我们可以看到APP上的内容

00:18:22.970 --> 00:18:26.139 align:middle
我们有一个iPhone

00:18:27.941 --> 00:18:30.577 align:middle
让iPhone运行Keynote

00:18:30.644 --> 00:18:35.015 align:middle
绘制的虚拟APP iPad运行
keynote绘制的虚拟Toaster

00:18:35.415 --> 00:18:41.522 align:middle
利用它们我们开始播放
更贴近现实的产品运行情况

00:18:42.022 --> 00:18:44.725 align:middle
两个设备上都显示一个通知

00:18:45.559 --> 00:18:46.460 align:middle
我们打开APP

00:18:46.527 --> 00:18:48.929 align:middle
进入收件箱选择
一个不同的Toastie

00:18:49.696 --> 00:18:51.665 align:middle
我们添加一些面包片到Toaster

00:18:52.299 --> 00:18:53.667 align:middle
按下数字操控杆

00:18:53.934 --> 00:18:58.605 align:middle
最后两个设备上都弹出Toastie

00:18:59.473 --> 00:19:00.407 align:middle
看起来很不错

00:18:59.473 --> 00:19:00.407 align:middle
看起来很不错

00:19:01.608 --> 00:19:04.077 align:middle
不幸的是我们发现了一个严重的问题

00:19:04.811 --> 00:19:08.782 align:middle
当我们测试产品时
当我们把它们放在一起

00:19:08.849 --> 00:19:12.419 align:middle
发现并不能通过点击触控功能

00:19:12.486 --> 00:19:15.722 align:middle
让它们协调一致地工作

00:19:16.723 --> 00:19:20.994 align:middle
更现实的情况是
Toaster始终在厨房里

00:19:21.395 --> 00:19:23.597 align:middle
而APP将会随着你到各个不同的位置

00:19:24.298 --> 00:19:26.900 align:middle
这是一种基本的使用情况

00:19:27.201 --> 00:19:28.635 align:middle
你收到通知

00:19:28.902 --> 00:19:31.205 align:middle
走到Toaster跟前进行一些操作

00:19:31.271 --> 00:19:33.307 align:middle
机器开始烤制面包然后你走开

00:19:33.373 --> 00:19:35.242 align:middle
去刷牙或者干别的事情

00:19:36.143 --> 00:19:37.945 align:middle
最后Toastie烤制完成

00:19:38.111 --> 00:19:39.446 align:middle
你回到Toaster那里

00:19:39.580 --> 00:19:41.882 align:middle
如果你不知道这种应用情景

00:19:42.249 --> 00:19:44.985 align:middle
你就不能切合实际地测产品

00:19:46.520 --> 00:19:48.889 align:middle
我们如何让两个原型设备

00:19:49.189 --> 00:19:51.658 align:middle
在一定的距离相互通信呢？

00:19:52.359 --> 00:19:54.127 align:middle
我们应该如何做到这一点

00:19:54.194 --> 00:19:56.096 align:middle
而不需要花费额外的力气呢？

00:19:56.163 --> 00:19:59.666 align:middle
我想继续使用我们
使用keynote绘制的原型设备

00:20:01.068 --> 00:20:04.538 align:middle
我们发现我们的团队
拥有十分便捷的技术

00:20:05.005 --> 00:20:06.039 align:middle
正好适用于这种情况

00:20:06.640 --> 00:20:07.975 align:middle
让我展示给你们看

00:20:11.211 --> 00:20:14.815 align:middle
你可以看到在手机上
这仍然是Keynote绘制的原型设备

00:20:16.216 --> 00:20:19.553 align:middle
但是现在通知确实自己出现了

00:20:20.554 --> 00:20:22.289 align:middle
我们可以点击打开APP

00:20:22.756 --> 00:20:25.893 align:middle
然后选择想要烤制的Toastie

00:20:27.394 --> 00:20:28.428 align:middle
在Toaster上

00:20:30.063 --> 00:20:32.933 align:middle
你可以看到我们仍然可以点击
插入一些面包片

00:20:33.467 --> 00:20:35.969 align:middle
我们来看app当按下
操控杆时会发生什么

00:20:36.703 --> 00:20:39.006 align:middle
APP将会实时进行响应

00:20:40.240 --> 00:20:43.810 align:middle
当Toastie返回到
完成烤制状态时

00:20:45.179 --> 00:20:47.080 align:middle
它同时显示在两个设备上

00:20:49.249 --> 00:20:50.317 align:middle
这看上去很不错

00:20:51.385 --> 00:20:52.686 align:middle
但是我们如何做到这一点呢？

00:20:53.654 --> 00:20:56.857 align:middle
这些还只是设备上的图片

00:20:56.924 --> 00:21:00.160 align:middle
我们还没有编写一行代码

00:20:56.924 --> 00:21:00.160 align:middle
我们还没有编写一行代码

00:21:02.229 --> 00:21:05.165 align:middle
我们有一个秘密武器比代码更酷

00:21:05.232 --> 00:21:08.101 align:middle
更快速 更智能

00:21:15.475 --> 00:21:17.244 align:middle
我们称之为...

00:21:22.349 --> 00:21:24.218 align:middle
我们称之为幕后技术

00:21:24.818 --> 00:21:27.654 align:middle
它实际上是一个人假扮成电脑

00:21:29.089 --> 00:21:31.558 align:middle
在这个例子中
这个人就是我 在沙发后面

00:21:31.725 --> 00:21:37.097 align:middle
使用两个keynote绘制的遥控器
它们连接到iPhone和iPad

00:21:37.831 --> 00:21:41.268 align:middle
远程控制每个设备的状态

00:21:41.535 --> 00:21:44.271 align:middle
并执行原型设备上的点击操作

00:21:44.838 --> 00:21:48.275 align:middle
当你在APP上进行操作时
我可以按一下摇控器

00:21:48.509 --> 00:21:49.810 align:middle
然后Toaster做出反应

00:21:50.344 --> 00:21:53.947 align:middle
这样我们就完美地模拟了
实际的操控体验

00:21:54.014 --> 00:21:56.083 align:middle
而我们并没有做任何事情来实现它

00:21:57.251 --> 00:21:59.453 align:middle
在Apple我们经常开这样的玩笑

00:21:59.520 --> 00:22:00.787 align:middle
我们假装让人们相信

00:21:59.520 --> 00:22:00.787 align:middle
我们假装让人们相信

00:22:00.854 --> 00:22:04.558 align:middle
我们实现了一些非常神奇的技术

00:22:04.958 --> 00:22:07.594 align:middle
就像我们展示原型设备时所做的那样

00:22:07.661 --> 00:22:08.729 align:middle
实际上背后的秘密是

00:22:09.463 --> 00:22:12.499 align:middle
团队的一些人某个角落
控制这些原型设备

00:22:14.301 --> 00:22:17.070 align:middle
我们将这种更贴合实际的构造

00:22:17.371 --> 00:22:19.506 align:middle
展示给我们的朋友们看
并征求他们的意见

00:22:26.513 --> 00:22:27.915 align:middle
我们询问他们哪些功能工作正常

00:22:28.315 --> 00:22:31.418 align:middle
从许多Toastie中选择一个

00:22:31.652 --> 00:22:34.188 align:middle
然后进行烤制这个任务完成得很好

00:22:35.455 --> 00:22:36.857 align:middle
那么哪些功能不能正常运行呢？

00:22:36.924 --> 00:22:40.027 align:middle
虽然我们原型开发
花费了我们很大的力气

00:22:40.661 --> 00:22:43.463 align:middle
但是设备仍然不能真正连接
和快速做出响应

00:22:44.631 --> 00:22:45.732 align:middle
对此我们可以做什么呢？

00:22:46.767 --> 00:22:49.069 align:middle
也许我们可以让Toaster

00:22:49.136 --> 00:22:52.439 align:middle
快速响应APP中的输入反之亦然

00:22:53.574 --> 00:22:56.777 align:middle
为此我们需要一步步地
设置我们的原型开发计划

00:22:56.977 --> 00:22:58.679 align:middle
现在我想请比尔上台

00:22:58.846 --> 00:23:00.047 align:middle
为你们介绍如何做到这一点

00:22:58.846 --> 00:23:00.047 align:middle
为你们介绍如何做到这一点

00:23:04.418 --> 00:23:07.487 align:middle
谢谢马特乌斯 做得不错

00:23:08.055 --> 00:23:09.389 align:middle
大家好 我是比尔

00:23:10.357 --> 00:23:13.126 align:middle
我花费了几天的时间

00:23:13.193 --> 00:23:16.363 align:middle
来试验这个绝秘Apple硬件
它确实很不错

00:23:18.599 --> 00:23:20.734 align:middle
现在我想向你们介绍我们的流程

00:23:20.801 --> 00:23:22.603 align:middle
为你们提供一点经验

00:23:23.070 --> 00:23:27.741 align:middle
让你们更好地设计自己的绝秘硬件
或你们还没有问世的产品

00:23:34.982 --> 00:23:37.284 align:middle
在进行几次迭代之后
我们对马特乌斯为我们

00:23:37.351 --> 00:23:39.686 align:middle
开发的设计已经比较满意

00:23:41.455 --> 00:23:43.457 align:middle
但是对于这些
Keynote绘制的原型设备

00:23:43.524 --> 00:23:44.925 align:middle
它们的功能还很有限

00:23:45.225 --> 00:23:48.028 align:middle
我们可以切换各种状态进行模拟

00:23:48.896 --> 00:23:50.564 align:middle
但是还没有实现真正的交互功能

00:23:51.231 --> 00:23:53.200 align:middle
例如数字操控杆

00:23:53.700 --> 00:23:56.270 align:middle
我们不能上下扳动它而这是很重要的

00:24:03.043 --> 00:24:06.947 align:middle
因此我们回到前面的三个问题

00:24:07.481 --> 00:24:10.717 align:middle
并决定如何增强这些
原型设备的真实功能

00:24:11.084 --> 00:24:15.822 align:middle
实现可交互性和连通让它们变得更好

00:24:18.458 --> 00:24:19.793 align:middle
哪些项目需要变得更真实在？

00:24:20.861 --> 00:24:24.031 align:middle
在硬件方面我们想要安装
一个数字操控杆

00:24:25.299 --> 00:24:29.203 align:middle
我们将想要
将Toaster的状态关联到APP

00:24:30.671 --> 00:24:35.976 align:middle
在APP方面我们想要
允许朋友查看收件箱中的Toastie

00:24:36.944 --> 00:24:39.446 align:middle
选择Toastie进行烤制

00:24:42.049 --> 00:24:43.183 align:middle
我们希望虚拟这些功能

00:24:43.250 --> 00:24:44.451 align:middle
我们如何继续进行虚拟呢?

00:24:45.953 --> 00:24:48.856 align:middle
请不要担心服务器 烤箱界面

00:24:49.256 --> 00:24:50.691 align:middle
以及面包变成吐司面包的过程

00:24:52.159 --> 00:24:56.129 align:middle
在APP侧我们应该保持
消除队列的完全封闭状态

00:24:56.430 --> 00:24:58.498 align:middle
而且也不需改变Toastie状态

00:24:58.966 --> 00:25:01.201 align:middle
我们将在设备上用图片来表示它们

00:24:58.966 --> 00:25:01.201 align:middle
我们将在设备上用图片来表示它们

00:25:01.268 --> 00:25:03.604 align:middle
我们不会在设备之间

00:25:04.471 --> 00:25:06.039 align:middle
无线传输和发送消息

00:25:08.909 --> 00:25:10.677 align:middle
我们将在哪里使用这些设备呢？

00:25:11.478 --> 00:25:14.414 align:middle
我们将会在厨房使用Toaster

00:25:15.582 --> 00:25:18.418 align:middle
APP可以在任何位置使用
当你想吃东西时可能会使用它

00:25:19.086 --> 00:25:21.522 align:middle
也许在你起床后
第一件事就是打开这个APP

00:25:24.258 --> 00:25:27.694 align:middle
我们应该问我们自己
将下来最需要做的事情是什么？

00:25:31.498 --> 00:25:34.201 align:middle
马特乌斯说过他想要
连接Toaster和APP

00:25:34.768 --> 00:25:36.570 align:middle
我们开始捣鼓一台
真实的Toaster

00:25:37.171 --> 00:25:39.406 align:middle
为它装上微型控制器

00:25:39.473 --> 00:25:43.110 align:middle
也许会装上无线收发器
和LED指示灯

00:25:43.177 --> 00:25:45.179 align:middle
让显示界面变得好看一些

00:25:46.079 --> 00:25:47.114 align:middle
也许这个办法行得通

00:25:48.382 --> 00:25:51.652 align:middle
但是我们并不会付出太多的精力
来实现这个设计

00:25:51.718 --> 00:25:54.221 align:middle
因为这已经非常接近最终的真实设备

00:25:57.191 --> 00:25:59.893 align:middle
也许现在应该3D打印
一个Toaster模型

00:26:00.527 --> 00:26:03.830 align:middle
使用激光切割机
开始定制Toastie

00:26:06.266 --> 00:26:08.402 align:middle
说实话我们总是喜欢

00:26:08.502 --> 00:26:10.370 align:middle
找借口使用3D打印机和激光切割机

00:26:16.243 --> 00:26:17.878 align:middle
做这个幻灯片是有意思的事情

00:26:18.245 --> 00:26:22.516 align:middle
但是 这看上去 有一点本末倒置

00:26:23.550 --> 00:26:27.988 align:middle
那么是否可以使用一个
虚拟现实Toaster？

00:26:41.668 --> 00:26:44.238 align:middle
这看起来很不错 趣味十足

00:26:44.304 --> 00:26:47.841 align:middle
但是Toaster虚拟控制技术
还是五年以后的事情我们必须放弃它

00:26:49.576 --> 00:26:53.480 align:middle
事实上这三个例子都有相同之处

00:26:53.947 --> 00:26:56.750 align:middle
它们会让我们分心
而偏离我们的当前任务

00:26:57.084 --> 00:26:58.719 align:middle
即设计良好的用户体验

00:27:01.588 --> 00:27:04.324 align:middle
到这里我们需要开始进行工程设计

00:27:05.192 --> 00:27:07.895 align:middle
我们的工程设计任务是
改进我们的设计

00:27:07.961 --> 00:27:10.130 align:middle
让我们进行更深入的研究

00:27:11.331 --> 00:27:13.500 align:middle
这样当我们实际这样的设备时

00:27:13.634 --> 00:27:15.302 align:middle
我们就知道我们的做法是正确的

00:27:17.237 --> 00:27:18.805 align:middle
现在请大家思考

00:27:19.740 --> 00:27:22.910 align:middle
从原型设备的功能来看
一台Toaster应该是什么样的？

00:27:24.111 --> 00:27:26.880 align:middle
它不是一个面包加热设备

00:27:28.382 --> 00:27:29.750 align:middle
而是一个联网状态机

00:27:30.450 --> 00:27:33.153 align:middle
我的意思是它是一个
具有特定属性的物理对象

00:27:33.487 --> 00:27:36.056 align:middle
这些属性包括操控杆位置

00:27:36.123 --> 00:27:38.759 align:middle
是否有面包片 是否正在烤制信息等

00:27:39.293 --> 00:27:41.929 align:middle
我们需要知道这些属性

00:27:42.129 --> 00:27:43.130 align:middle
如何响应用户的输入

00:27:44.131 --> 00:27:47.601 align:middle
我们可以轻松地使用软件进行建模

00:27:51.004 --> 00:27:53.907 align:middle
我们将使用的keynote
绘制的原型设备

00:27:54.641 --> 00:27:55.742 align:middle
和Toaster APP

00:27:56.510 --> 00:27:57.911 align:middle
我们将在Swift中实现它们

00:27:59.580 --> 00:28:01.415 align:middle
我说在Swift实现

00:27:59.580 --> 00:28:01.415 align:middle
我说在Swift实现

00:28:01.715 --> 00:28:05.452 align:middle
并不是说编写一个完全可以运行
功能丰富的Swift APP

00:28:06.687 --> 00:28:09.756 align:middle
目前我们仍然使用屏幕截图
表示这些原型设备

00:28:10.123 --> 00:28:12.392 align:middle
并使用动画表示用户触摸操作

00:28:13.093 --> 00:28:16.029 align:middle
但是我们需要编写一些代码

00:28:16.096 --> 00:28:18.432 align:middle
实现一些比较复杂的功能

00:28:19.833 --> 00:28:21.435 align:middle
当然不一定必须使用Swift

00:28:21.568 --> 00:28:23.804 align:middle
也可以使用你喜欢的编程语言

00:28:24.071 --> 00:28:26.573 align:middle
你也可以使用具有更多交互功能的工具

00:28:27.040 --> 00:28:30.544 align:middle
但是在Apple
我们将会使用Swift

00:28:33.113 --> 00:28:36.583 align:middle
让我们来定义想要实现的功能

00:28:37.017 --> 00:28:38.785 align:middle
这是一个
Toast-a-Toastie流程

00:28:40.487 --> 00:28:44.658 align:middle
第一步要做的是
从收件箱中取出一个Toastie

00:28:45.826 --> 00:28:49.162 align:middle
然后我们将
Toastie发送给Toaster

00:28:51.231 --> 00:28:54.701 align:middle
第三我们想要烤制
选定的Toastie

00:28:56.303 --> 00:28:59.206 align:middle
最后我们需要指示
Toastie烤制完成

00:29:01.575 --> 00:29:05.112 align:middle
这是我们的新交互式app原型

00:29:05.879 --> 00:29:09.383 align:middle
我们已经完成的事情是
将此流程转换为UI滚动视图

00:29:09.449 --> 00:29:12.920 align:middle
让我们的朋友能够轻松
翻页浏览各条消息

00:29:14.922 --> 00:29:16.857 align:middle
在底部有一个UI滑条

00:29:17.157 --> 00:29:19.893 align:middle
可以利用它选择吐司面包片的颜色

00:29:20.761 --> 00:29:23.730 align:middle
我们还会每个吐司面包片
添加一个手势识别器

00:29:23.797 --> 00:29:26.834 align:middle
让我们能够将
将它拉入虚拟Toaster

00:29:27.201 --> 00:29:28.702 align:middle
并模拟这个过程

00:29:30.470 --> 00:29:31.738 align:middle
让我们来实际效果

00:29:34.541 --> 00:29:35.576 align:middle
我们启动收件箱

00:29:36.577 --> 00:29:40.113 align:middle
你可以看到当我们扫动时
选择的Toastie数量增加

00:29:41.915 --> 00:29:44.117 align:middle
我们可以调整烤面包片颜色深度

00:29:48.288 --> 00:29:49.489 align:middle
然后我将要面包片

00:29:49.556 --> 00:29:53.493 align:middle
拉入虚拟Toaster
将Toasting设置为true

00:29:54.228 --> 00:29:56.964 align:middle
启动一个动画
显示烤制完成的Toastie

00:30:05.906 --> 00:30:07.741 align:middle
很好 我们转到Toaster

00:30:09.009 --> 00:30:11.512 align:middle
我们将为数字操控杆
添加一个手势识别器

00:30:12.513 --> 00:30:14.882 align:middle
当你开始向下拉动时它就开始烤制

00:30:14.948 --> 00:30:17.150 align:middle
将Toasting设置为true
启动计时器

00:30:17.985 --> 00:30:20.254 align:middle
我们还在底部增另一个分段控件

00:30:20.354 --> 00:30:22.623 align:middle
让我们能够轻松选择需要烤制的消息

00:30:22.689 --> 00:30:24.157 align:middle
而不需要连接到APP

00:30:24.658 --> 00:30:27.461 align:middle
最后动画将显示烤制完成的面包片

00:30:27.828 --> 00:30:28.762 align:middle
让我们来看一看

00:30:31.064 --> 00:30:33.066 align:middle
我们选择Toast将载入一个面包片

00:30:33.367 --> 00:30:36.370 align:middle
当你把操控杆拉到1位置时

00:30:37.304 --> 00:30:40.440 align:middle
你可以看这个动画

00:30:41.108 --> 00:30:43.877 align:middle
显示在LED屏幕上

00:30:44.811 --> 00:30:46.013 align:middle
然后显示烤制完成的面包片

00:30:49.249 --> 00:30:51.185 align:middle
这是一个重要的阶段

00:30:52.085 --> 00:30:53.987 align:middle
这种软件建模技术非常有用

00:30:54.188 --> 00:30:57.891 align:middle
我们经常在工作中使用它

00:30:58.825 --> 00:31:01.562 align:middle
你可以设想制作一个联网壁炉

00:30:58.825 --> 00:31:01.562 align:middle
你可以设想制作一个联网壁炉

00:31:01.795 --> 00:31:03.463 align:middle
然后使用HomeKit集成它

00:31:04.765 --> 00:31:08.035 align:middle
你可以使用你的投影仪或大屏幕电视机

00:31:08.468 --> 00:31:10.938 align:middle
设置壁炉的使用位置

00:31:11.071 --> 00:31:14.408 align:middle
然后模拟需要使用的控制功能

00:31:15.843 --> 00:31:18.445 align:middle
也许你在为Apple Watch
开发地铁时表APP

00:31:18.512 --> 00:31:20.113 align:middle
但是你还没有APPle Watch

00:31:20.514 --> 00:31:24.651 align:middle
你可以在iPod显示界面上进行虚拟
将iPod带到地铁站

00:31:24.785 --> 00:31:26.153 align:middle
在实际环境中使它

00:31:28.755 --> 00:31:30.457 align:middle
也许你在开发下一代无人机

00:31:31.325 --> 00:31:33.861 align:middle
你可以在iPhone上
模拟硬件控制器

00:31:34.094 --> 00:31:35.629 align:middle
将它捆绑到纸质原型设备上

00:31:35.929 --> 00:31:39.132 align:middle
当你移动设备时可以传输回陀螺仪

00:31:39.199 --> 00:31:42.469 align:middle
和加速仪数据如同在真实硬件上一样

00:31:46.206 --> 00:31:49.309 align:middle
现在我们已经拥有交互式APP
和交互式Toaster

00:31:49.710 --> 00:31:52.212 align:middle
现在我们需要发送数据

00:31:52.379 --> 00:31:58.886 align:middle
从APP中拾取Toastie
将Toaster的物理状态发送至APP

00:32:00.954 --> 00:32:02.389 align:middle
那么最好的实现方法是什么？

00:32:03.056 --> 00:32:06.593 align:middle
对你来说最好的方法就是
最简单和最快速的方法

00:32:07.528 --> 00:32:09.863 align:middle
我们不会设计一个新的网络API

00:32:10.497 --> 00:32:13.667 align:middle
我们在以后让其他人来做这个工作
我们也无需担心效率

00:32:14.201 --> 00:32:16.503 align:middle
如果你在浏览器中进行原型测试

00:32:17.004 --> 00:32:18.405 align:middle
你可能会使用Web套接字

00:32:20.240 --> 00:32:22.543 align:middle
如果你已经完成无人机
而且将手机连接到它

00:32:22.609 --> 00:32:24.978 align:middle
你可以使用O.S.C.
传输陀螺仪数据

00:32:26.847 --> 00:32:28.382 align:middle
也许你有一个后台服务器

00:32:28.682 --> 00:32:30.717 align:middle
你可以使用HTTP请求

00:32:32.886 --> 00:32:35.889 align:middle
我知道你们有一些人
以前可能从来没有进行过网络层编程

00:32:36.757 --> 00:32:37.824 align:middle
因此应该创造性地思考

00:32:37.925 --> 00:32:39.927 align:middle
你可以使用合适的服务

00:32:40.661 --> 00:32:43.830 align:middle
来观察两个设备之间
发送和接收的消息

00:32:43.897 --> 00:32:45.032 align:middle
然后据此进行处理

00:32:45.732 --> 00:32:49.736 align:middle
也许你注意到当添加一张新照片
到共享照片流时

00:32:52.973 --> 00:32:57.477 align:middle
因此我们将使用多点端到端连接

00:32:58.078 --> 00:32:59.680 align:middle
我们的网络看起来是这样的

00:33:00.314 --> 00:33:02.649 align:middle
我们有两部iPhone
连接到一个iPad

00:33:02.883 --> 00:33:04.718 align:middle
我们将这个网络
称为Toast Talk

00:33:05.252 --> 00:33:07.654 align:middle
我们使用多点连接

00:33:07.788 --> 00:33:09.423 align:middle
是因为它非常容易设置

00:33:09.923 --> 00:33:11.425 align:middle
它不需要服务器，

00:33:14.161 --> 00:33:16.363 align:middle
而且支持连接任意数量的设备

00:33:16.830 --> 00:33:18.966 align:middle
这是部分代码

00:33:19.032 --> 00:33:20.467 align:middle
我们将使用这种连接方式

00:33:20.934 --> 00:33:22.469 align:middle
因为我们的时间有限

00:33:22.536 --> 00:33:24.304 align:middle
我们想要创建一个会话

00:33:24.805 --> 00:33:28.609 align:middle
我们将这个网络命名为
Toast Talk接收任何

00:33:28.675 --> 00:33:30.811 align:middle
输入数据并转换为字符串

00:33:32.746 --> 00:33:37.017 align:middle
我们选择设备使用简单易用的MC
Browser View Controller类

00:33:39.820 --> 00:33:42.856 align:middle
很容易设置 将名称传入构造函数

00:33:43.423 --> 00:33:45.292 align:middle
和会话之中

00:33:46.393 --> 00:33:49.329 align:middle
可以点击按钮
或在APP启动时显示此名称

00:33:49.796 --> 00:33:51.965 align:middle
在连接之后 就可以忽略它了

00:33:53.867 --> 00:33:55.636 align:middle
我们应该发送和接收哪些消息？

00:33:56.637 --> 00:33:59.773 align:middle
APP原型需要向Toaster
告知Toastie数量

00:34:00.274 --> 00:34:01.775 align:middle
和烤面包片颜色深度

00:34:03.644 --> 00:34:05.779 align:middle
当烤制开始和结束时

00:34:06.013 --> 00:34:08.549 align:middle
Toaster需要
发送操控杆位置信息

00:34:11.585 --> 00:34:13.253 align:middle
只需要很少的代码就可以了

00:34:13.786 --> 00:34:17.391 align:middle
只需要将字符串转换为数据
并发送给会话

00:34:18.625 --> 00:34:21.328 align:middle
这个例子显示
如何发送操控杆位置信息

00:34:21.762 --> 00:34:24.864 align:middle
我们需要表明已经收到消息
即操控杆位置

00:34:24.998 --> 00:34:27.601 align:middle
添加参数名称并传递参数值

00:34:28.467 --> 00:34:31.371 align:middle
这是一个随意格式但是快速而简单

00:34:32.306 --> 00:34:34.641 align:middle
我们通过这个参数传递接收消息

00:34:35.342 --> 00:34:37.511 align:middle
然后转换消息名称

00:34:37.844 --> 00:34:40.447 align:middle
将数据传输给相应的函数

00:34:42.149 --> 00:34:46.553 align:middle
这让我们能够在Toaster
和APP之间实现可靠的通信

00:34:47.353 --> 00:34:49.857 align:middle
你可以看到当上下拉动数字操控杆时

00:34:50.424 --> 00:34:51.491 align:middle
也会反映在APP上

00:34:54.293 --> 00:34:56.096 align:middle
看上去很不错
我们实现了这个流程

00:34:56.530 --> 00:34:58.465 align:middle
我们拥有交互式
APP和Toaster

00:34:59.633 --> 00:35:00.467 align:middle
一切都很顺利

00:34:59.633 --> 00:35:00.467 align:middle
一切都很顺利

00:35:00.868 --> 00:35:03.937 align:middle
我们将它提供给朋友让他们试用

00:35:04.404 --> 00:35:05.239 align:middle
并听取他们的意见

00:35:28.328 --> 00:35:32.132 align:middle
好 Toastal
Service已经完成了

00:35:34.067 --> 00:35:36.937 align:middle
请开始体验吧 我们并没有进行
大量的工程设计工作

00:35:38.405 --> 00:35:39.773 align:middle
让我们来看看反馈意见

00:35:40.641 --> 00:35:43.911 align:middle
哪些功能运行正常？
显然我们可以选择收件箱中的消息

00:35:44.111 --> 00:35:45.412 align:middle
将它们发送至Toaster

00:35:45.479 --> 00:35:47.514 align:middle
这是一项基本功能

00:35:48.882 --> 00:35:49.750 align:middle
哪些功能不正常？

00:35:50.584 --> 00:35:52.452 align:middle
朋友们告诉我们有一点奇怪的是

00:35:52.519 --> 00:35:54.354 align:middle
当你在颜色滑动条上选择颜色时

00:35:54.421 --> 00:35:57.558 align:middle
Toaster并不能显示反馈信息

00:35:58.192 --> 00:36:00.861 align:middle
也许在下一轮原型测试迭代中

00:35:58.192 --> 00:36:00.861 align:middle
也许在下一轮原型测试迭代中

00:36:01.328 --> 00:36:04.798 align:middle
我们可以调整LED显示颜色

00:36:04.865 --> 00:36:08.068 align:middle
以反映接收到的数据

00:36:08.435 --> 00:36:11.638 align:middle
并且记住颜色

00:36:12.272 --> 00:36:15.609 align:middle
最后我想请杰夫上台

00:36:15.676 --> 00:36:17.911 align:middle
让他为我们进行总结 谢谢

00:36:21.615 --> 00:36:22.449 align:middle
谢谢比尔

00:36:24.051 --> 00:36:26.887 align:middle
感谢你们参加今天的讲座

00:36:28.488 --> 00:36:30.157 align:middle
让我来简单进行回顾

00:36:30.791 --> 00:36:33.060 align:middle
我们使用图片和动画设计原型设备

00:36:33.460 --> 00:36:36.663 align:middle
让我们很快能够看到
Toaster的各种输入和输出

00:36:37.164 --> 00:36:39.099 align:middle
我们介绍了背后的技术

00:36:39.900 --> 00:36:42.336 align:middle
了解APP和设备如何配合工作

00:36:43.170 --> 00:36:46.473 align:middle
然后我们创建了一个
简单的交互式联网原型

00:36:47.174 --> 00:36:49.743 align:middle
让我们可以尝试
完整的端到端使用体验

00:36:51.111 --> 00:36:53.413 align:middle
在这个过程中我们了解
Toaster的运行模式

00:36:54.515 --> 00:36:56.383 align:middle
我们不需要为Toaster
设置烤制颜色深度

00:36:56.450 --> 00:36:58.185 align:middle
虽然这是大多数Toaster都具有的

00:36:59.052 --> 00:37:01.255 align:middle
我们需要在Toaster上
设置一个数字显示屏

00:36:59.052 --> 00:37:01.255 align:middle
我们需要在Toaster上
设置一个数字显示屏

00:37:01.989 --> 00:37:04.958 align:middle
我们需要一个数字操控杆感应器
以便将消息发回至APP

00:37:05.592 --> 00:37:08.795 align:middle
我们很快就弄清楚了这些事情

00:37:10.330 --> 00:37:11.899 align:middle
我们节省了大量时间和金钱

00:37:12.132 --> 00:37:15.402 align:middle
设想一下，如果我们
要制造一台真正的Toaster，

00:37:16.570 --> 00:37:18.839 align:middle
在这个过程中我们可以
获得很多不错的想法

00:37:19.806 --> 00:37:21.241 align:middle
所有这些都提醒我

00:37:21.608 --> 00:37:23.744 align:middle
进行原型开发的原因有两个：

00:37:24.478 --> 00:37:26.780 align:middle
首先是验证想法以节省开发APP功能

00:37:26.847 --> 00:37:29.016 align:middle
所需要的时间和金钱

00:37:30.250 --> 00:37:33.654 align:middle
其次是获得新的想法
让产品使用体验更加完美

00:37:34.254 --> 00:37:35.289 align:middle
我们如何做到呢？

00:37:35.489 --> 00:37:36.456 align:middle
我们虚拟了一些功能

00:37:36.890 --> 00:37:39.393 align:middle
让用户使用这些功能并听取他们的意见

00:37:41.562 --> 00:37:44.498 align:middle
我们反复执行这个流程直到产品完善

00:37:46.533 --> 00:37:48.902 align:middle
你们应该执行这样的流程

00:37:49.770 --> 00:37:51.572 align:middle
如果你开发一个
需要连接到APP的设备

00:37:51.972 --> 00:37:53.907 align:middle
在屏幕上虚拟它的功能

00:37:54.641 --> 00:37:55.542 align:middle
并在实际环境中试用

00:37:56.043 --> 00:37:59.613 align:middle
对于你的App应该使用图片
进行虚拟并在环境中测试

00:38:00.113 --> 00:38:03.650 align:middle
对于二者之间的连接

00:38:04.585 --> 00:38:07.120 align:middle
应该使用所述的幕后技术
或进行简单的模拟

00:38:08.889 --> 00:38:11.191 align:middle
你可以创建一个简单网络原型

00:38:12.092 --> 00:38:13.727 align:middle
如果你还没有可用的设备

00:38:14.561 --> 00:38:18.765 align:middle
尤其是我们还未发布的
新产品你无需等待

00:38:19.233 --> 00:38:21.235 align:middle
你可以在屏幕上虚拟在实际环境中测试

00:38:22.903 --> 00:38:24.471 align:middle
这是一些相关的信息

00:38:25.339 --> 00:38:26.673 align:middle
你可以参加一些相关讲座

00:38:27.574 --> 00:38:31.345 align:middle
一个重要的讲座是明天举行的
“使用动画进行设计”讲座

00:38:31.812 --> 00:38:34.781 align:middle
我的同事将在3:30举行这个讲座
也是在这个房间

00:38:35.215 --> 00:38:36.717 align:middle
此讲座将会对你们有所帮助

00:38:36.950 --> 00:38:37.985 align:middle
谢谢大家
