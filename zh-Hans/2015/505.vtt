WEBVTT

00:00:19.586 --> 00:00:25.559 align:middle
使用Safari
交付并调试响应式网页设计

00:00:29.196 --> 00:00:30.030 align:middle
早上好

00:00:32.633 --> 00:00:37.471 align:middle
欢迎来参加使用Safari
交付并调试响应式网页设计

00:00:38.038 --> 00:00:39.373 align:middle
我是约诺·威尔斯

00:00:41.008 --> 00:00:45.546 align:middle
是Apple的Safari
和WebKit团队的工程师

00:00:46.280 --> 00:00:48.782 align:middle
我今天很兴奋来做这场讲座

00:00:49.483 --> 00:00:52.286 align:middle
能开发Development
Tools这是Safari

00:00:52.386 --> 00:00:56.657 align:middle
网页浏览器的一部分
让我有了很多特权

00:00:57.758 --> 00:01:00.994 align:middle
我感觉有特权
是因为我热爱网页

00:00:57.758 --> 00:01:00.994 align:middle
我感觉有特权
是因为我热爱网页

00:01:01.061 --> 00:01:02.095 align:middle
相信大家也是如此

00:01:02.262 --> 00:01:04.230 align:middle
我觉得Safari是强大的浏览器

00:01:05.632 --> 00:01:06.800 align:middle
是个的确不错的平台

00:01:07.801 --> 00:01:10.571 align:middle
配得上世界级的
Development Tools

00:01:10.637 --> 00:01:11.471 align:middle
大家同意吗？

00:01:12.105 --> 00:01:13.073 align:middle
特别是因为

00:01:13.407 --> 00:01:15.709 align:middle
我们
不仅是在网页浏览器上

00:01:15.809 --> 00:01:19.246 align:middle
制作内容 我们还在
app上制作内容

00:01:19.580 --> 00:01:21.715 align:middle
使用网页视图
我们希望内容

00:01:21.849 --> 00:01:23.951 align:middle
运行出色 看起来也出色

00:01:25.319 --> 00:01:28.255 align:middle
今天上午 当然我们
会谈谈Web Inspector

00:01:28.322 --> 00:01:31.158 align:middle
这个工具大家可能

00:01:31.225 --> 00:01:32.893 align:middle
以前用过
希望是这样

00:01:33.126 --> 00:01:33.994 align:middle
我们还要介绍

00:01:34.061 --> 00:01:37.464 align:middle
一款全新的工具Responsive
Design Mode

00:01:39.233 --> 00:01:43.770 align:middle
有着这两款工具
我们将会十分快速

00:01:45.839 --> 00:01:49.376 align:middle
并非常智能地提升
网站质量

00:01:49.610 --> 00:01:52.980 align:middle
就此获得极好的
响应式设计

00:01:53.881 --> 00:01:55.749 align:middle
先来介绍
Web Inspector

00:01:56.984 --> 00:01:58.685 align:middle
当然 这就是
Web Inspector

00:01:58.886 --> 00:02:01.021 align:middle
去年 大家就是
用的这个

00:01:58.886 --> 00:02:01.021 align:middle
去年 大家就是
用的这个

00:02:01.889 --> 00:02:04.591 align:middle
我们现在推出
许多新功能

00:02:04.892 --> 00:02:07.094 align:middle
去年 我们在
界面方面

00:02:07.361 --> 00:02:09.630 align:middle
从大家这里
也获得许多反馈

00:02:10.062 --> 00:02:13.033 align:middle
其中很多内容
我们都认真对待

00:02:13.100 --> 00:02:15.402 align:middle
进行了相关调整
于是有了Web Inspector

00:02:15.469 --> 00:02:17.671 align:middle
在推出Safari的同时
也一并推出

00:02:19.640 --> 00:02:21.208 align:middle
这是它

00:02:24.144 --> 00:02:25.445 align:middle
估计部分听众
鼓掌是因为

00:02:25.512 --> 00:02:28.248 align:middle
这是你们看见了
专用元素选项卡

00:02:30.751 --> 00:02:33.253 align:middle
选项卡是基于界面你希望在Web
Inspector有的

00:02:33.320 --> 00:02:36.490 align:middle
所有工具都在这里
资源 时间线

00:02:37.758 --> 00:02:40.894 align:middle
调试器 存储选项卡
控制台选项卡

00:02:40.961 --> 00:02:43.797 align:middle
但是有了选项卡 你当然可以
把那些你觉得

00:02:44.431 --> 00:02:45.532 align:middle
碍事的内容
清除出去

00:02:45.599 --> 00:02:48.702 align:middle
如果这些工具你并不常用
那就可以把它们清除掉

00:02:49.036 --> 00:02:51.038 align:middle
你可以认得出
在这里的部分

00:02:51.572 --> 00:02:54.241 align:middle
如果希望把它们找回来
可以在右手边

00:02:54.308 --> 00:02:57.110 align:middle
点击加号按钮 打开
希望打开的内容

00:02:57.611 --> 00:03:00.113 align:middle
我们提供按照
自己的愿望

00:02:57.611 --> 00:03:00.113 align:middle
我们提供按照
自己的愿望

00:03:00.180 --> 00:03:03.917 align:middle
按照工作的内容自定义
Web Inspector的能力

00:03:04.318 --> 00:03:06.720 align:middle
我们对这的界面
进行了改进

00:03:07.421 --> 00:03:09.990 align:middle
我们来谈谈
用Web Inspector

00:03:10.057 --> 00:03:12.993 align:middle
可以做些什么新鲜的事情
以及它可以怎样帮到我们

00:03:13.060 --> 00:03:16.230 align:middle
首先是它可以
极大提高内容

00:03:16.530 --> 00:03:17.397 align:middle
的性能

00:03:17.464 --> 00:03:18.665 align:middle
它帮我们
实现出色的表现

00:03:19.433 --> 00:03:21.735 align:middle
它几乎会很大程度上
帮你实现出色表现

00:03:21.802 --> 00:03:22.803 align:middle
然后再看具体该怎么做

00:03:23.904 --> 00:03:26.173 align:middle
说到出色表现时
是指什么呢？

00:03:27.074 --> 00:03:29.576 align:middle
大部分都一定知道
黄金标准是

00:03:29.743 --> 00:03:33.280 align:middle
每秒60帧 因为
屏幕是按照60赫兹刷新

00:03:33.347 --> 00:03:35.115 align:middle
也就是每秒60次

00:03:35.916 --> 00:03:39.820 align:middle
这就意味着
如果我们在对任何给定的渲染

00:03:40.287 --> 00:03:42.856 align:middle
帧数试着渲染
流畅动画效果

00:03:42.923 --> 00:03:46.226 align:middle
在事件循环的时候
我们需要确保

00:03:46.293 --> 00:03:48.529 align:middle
所有的脚本
计时器 布局和

00:03:48.595 --> 00:03:52.699 align:middle
渲染可以在
16.67毫秒之间发生

00:03:53.300 --> 00:03:57.871 align:middle
如果我们要做投入
动画效果磕磕绊绊

00:03:57.938 --> 00:03:59.473 align:middle
这不是我们
想要的结果

00:04:00.174 --> 00:04:05.345 align:middle
我们怎样才能获得
更好的信息

00:04:05.412 --> 00:04:08.815 align:middle
帮我们调试
内容的表现？

00:04:09.550 --> 00:04:10.384 align:middle
我们有个办法

00:04:11.552 --> 00:04:13.520 align:middle
如果来看
这个内容

00:04:13.587 --> 00:04:15.088 align:middle
每次作图时

00:04:15.822 --> 00:04:17.457 align:middle
屏幕上就会
闪亮一下？

00:04:20.260 --> 00:04:22.095 align:middle
我们加入了
Paint Flashing

00:04:22.162 --> 00:04:24.598 align:middle
在右上角的
元素选项卡中

00:04:25.199 --> 00:04:26.266 align:middle
你会看到这个画笔

00:04:27.234 --> 00:04:28.669 align:middle
点击 就会打开

00:04:28.735 --> 00:04:30.003 align:middle
这时 画笔是蓝色的

00:04:31.405 --> 00:04:32.873 align:middle
每次在页面绘画时

00:04:32.940 --> 00:04:37.144 align:middle
则会变为红色
周围还有透明的红框

00:04:37.945 --> 00:04:39.680 align:middle
你可以在自己的内容上
做这样的尝试

00:04:39.746 --> 00:04:41.815 align:middle
就像是圣诞树
一样点亮 非常神奇！

00:04:42.482 --> 00:04:44.551 align:middle
有点像西蒙游戏
如果你们和孩子

00:04:44.618 --> 00:04:46.920 align:middle
玩过的话 就像孩子一样

00:04:48.856 --> 00:04:50.457 align:middle
这会让你感觉

00:04:50.691 --> 00:04:52.192 align:middle
也许是绘画
太过频繁

00:04:52.392 --> 00:04:53.961 align:middle
在页面上
发生了这么多事情

00:04:54.995 --> 00:04:56.897 align:middle
但是在屏幕后面
发生了些什么？

00:04:57.865 --> 00:04:59.466 align:middle
为了帮你
获得更多信息

00:04:59.700 --> 00:05:02.336 align:middle
获得每秒
60帧的表现

00:04:59.700 --> 00:05:02.336 align:middle
获得每秒
60帧的表现

00:05:02.703 --> 00:05:03.871 align:middle
我们加入了不错的新工具

00:05:03.937 --> 00:05:05.873 align:middle
Rendering Frames
Time Line

00:05:07.007 --> 00:05:08.976 align:middle
如果进入时间线
选项卡

00:05:10.077 --> 00:05:12.913 align:middle
可以点击这里
Rendering Frames

00:05:12.980 --> 00:05:14.414 align:middle
这就是界面
大家会看到

00:05:14.748 --> 00:05:17.684 align:middle
可以记录一下
使用这些站点时

00:05:17.751 --> 00:05:19.453 align:middle
我们开始绘制
这些条

00:05:19.520 --> 00:05:22.289 align:middle
每个条都代表
一个渲染的帧

00:05:22.589 --> 00:05:25.025 align:middle
根据每一帧
发生的情况

00:05:25.092 --> 00:05:26.460 align:middle
要把它们分为
不同的颜色

00:05:26.860 --> 00:05:30.430 align:middle
紫色代表脚本 事件
计时器等 红色代表

00:05:30.497 --> 00:05:34.101 align:middle
布局和渲染 灰色代表
幕后引擎工作

00:05:34.368 --> 00:05:35.502 align:middle
就是引擎所做的事情

00:05:37.771 --> 00:05:39.039 align:middle
目标是要将这些条

00:05:39.106 --> 00:05:42.576 align:middle
位于中间线
的下方

00:05:43.510 --> 00:05:44.978 align:middle
每条线60帧

00:05:45.312 --> 00:05:47.381 align:middle
如果这些条
会高出这些

00:05:47.714 --> 00:05:50.450 align:middle
则意味着可能
无法获得

00:05:50.517 --> 00:05:52.219 align:middle
每秒60帧
的表现

00:05:52.452 --> 00:05:54.555 align:middle
我们这就来处理

00:05:55.022 --> 00:05:57.457 align:middle
你可以选择
选择一个区域的条

00:05:57.524 --> 00:06:00.227 align:middle
就和在其他时间线上一样
我们会给大家看看

00:05:57.524 --> 00:06:00.227 align:middle
就和在其他时间线上一样
我们会给大家看看

00:06:00.294 --> 00:06:01.295 align:middle
这方面很多不错的信息

00:06:01.361 --> 00:06:03.564 align:middle
首先 我们会给你看看
这里的图表

00:06:03.630 --> 00:06:06.200 align:middle
这是发生在这一
特殊区域中的

00:06:06.266 --> 00:06:07.734 align:middle
不同活动
的汇总

00:06:10.270 --> 00:06:11.872 align:middle
我们要会对
每一帧进行细分

00:06:12.105 --> 00:06:13.674 align:middle
可以打开每个
渲染的帧

00:06:13.740 --> 00:06:15.142 align:middle
来看到底在
发生什么

00:06:17.044 --> 00:06:18.912 align:middle
对于事件
计时器和渲染

00:06:19.112 --> 00:06:22.316 align:middle
样式和代码内的有效性
我们当然可以

00:06:22.382 --> 00:06:24.852 align:middle
点击源代码的
相关代码行

00:06:24.918 --> 00:06:26.119 align:middle
这样可以看看在发生什么

00:06:26.920 --> 00:06:29.623 align:middle
我们还会显示
计时信息表

00:06:30.390 --> 00:06:32.292 align:middle
我最喜欢的一件事
我已经用了一些

00:06:32.359 --> 00:06:35.395 align:middle
为接触Rendering
Frame的总用时来分来

00:06:35.462 --> 00:06:38.298 align:middle
这对我一直都
很有用 然后打开

00:06:38.365 --> 00:06:40.834 align:middle
顶端的一个
因为它最可能是

00:06:41.101 --> 00:06:44.071 align:middle
顶端最
有问题的帧

00:06:44.137 --> 00:06:46.340 align:middle
接着我就会知道
是什么影响了表现

00:06:47.174 --> 00:06:52.012 align:middle
工具会告知你
关于内容的不错故事

00:06:52.179 --> 00:06:54.948 align:middle
即使你认为
表现不错 你也会

00:06:55.015 --> 00:06:57.384 align:middle
希望接上这个
来看看在站点

00:06:57.451 --> 00:07:00.187 align:middle
会不会实现
更好的表现

00:06:57.451 --> 00:07:00.187 align:middle
会不会实现
更好的表现

00:07:00.854 --> 00:07:03.257 align:middle
它告知你
一个不错的故事 可以无需

00:07:03.423 --> 00:07:05.726 align:middle
思考就去做
我们希望开发的

00:07:05.792 --> 00:07:06.627 align:middle
工具能如此表现

00:07:06.960 --> 00:07:09.263 align:middle
把信息放在面前
然后说这里

00:07:09.696 --> 00:07:11.765 align:middle
就在这儿 这样你就
不需要费劲就可实现

00:07:14.935 --> 00:07:17.437 align:middle
我们一直注意的
一件事是 你一直在

00:07:17.504 --> 00:07:20.374 align:middle
Web Inspector内部
不同的工具间转来转去

00:07:21.642 --> 00:07:24.178 align:middle
我们觉得如果能集中
在一个工具上会好得多

00:07:24.912 --> 00:07:27.181 align:middle
更常见的事是
如果可以在一个工具中完成

00:07:27.648 --> 00:07:28.682 align:middle
则可能会节省时间

00:07:29.550 --> 00:07:31.051 align:middle
我们用不同方式实现这点

00:07:31.185 --> 00:07:34.321 align:middle
其一是针对错误和警告

00:07:34.388 --> 00:07:37.124 align:middle
我们不仅是在
控制台显示

00:07:37.191 --> 00:07:38.625 align:middle
还在其他的
几个地方显示

00:07:38.859 --> 00:07:40.327 align:middle
这样可以更快地
看到它们

00:07:40.861 --> 00:07:42.763 align:middle
例如在左侧的
调试器侧边栏

00:07:43.664 --> 00:07:46.166 align:middle
存在错误警告的
任何信息 我们会

00:07:46.233 --> 00:07:48.836 align:middle
在下面显示 它们会显示
你可以直接跳转过去

00:07:50.470 --> 00:07:54.474 align:middle
在你的站点中的
所有JavaScript代码中

00:07:54.541 --> 00:07:55.742 align:middle
我们会相应显示错误和警告

00:07:56.677 --> 00:07:57.711 align:middle
你会看到这些信息

00:07:57.778 --> 00:08:00.547 align:middle
如果只是浏览
所有内容都会显示 这就好的很多

00:07:57.778 --> 00:08:00.547 align:middle
如果只是浏览
所有内容都会显示 这就好的很多

00:08:01.048 --> 00:08:04.017 align:middle
我们还改进了
它们在控制台的外观

00:08:04.351 --> 00:08:06.086 align:middle
错误和警示
都被标出

00:08:06.153 --> 00:08:08.422 align:middle
颜色很容易
被识别

00:08:09.489 --> 00:08:10.390 align:middle
现在看起来好多了

00:08:10.457 --> 00:08:12.025 align:middle
我们把字体
也改好了 非常棒

00:08:15.963 --> 00:08:16.997 align:middle
我们还有个办法

00:08:18.465 --> 00:08:20.434 align:middle
想用Do
Without Thinking

00:08:20.501 --> 00:08:21.902 align:middle
我们想把重要信息
就放在你前面

00:08:21.969 --> 00:08:24.872 align:middle
当然JavaScript
是个动态类型语言

00:08:25.405 --> 00:08:27.908 align:middle
这意味着引擎本身
为你赋予了类型

00:08:27.975 --> 00:08:29.176 align:middle
你自己无需动手

00:08:29.409 --> 00:08:31.812 align:middle
在本例中 是在幕后
完成的

00:08:32.111 --> 00:08:34.914 align:middle
好我们有字符串 有整数
有对象

00:08:36.416 --> 00:08:39.653 align:middle
如果你们还在用
部分代码

00:08:39.720 --> 00:08:41.188 align:middle
这里有函数
设计用来添加

00:08:41.255 --> 00:08:42.356 align:middle
两个数字

00:08:43.155 --> 00:08:44.825 align:middle
这可能会
出现错误

00:08:45.058 --> 00:08:48.896 align:middle
我们偶然间传递了
字符串 这会导致

00:08:48.962 --> 00:08:51.398 align:middle
部分意外结果
称之为功能异常

00:08:52.165 --> 00:08:55.435 align:middle
在尝试调试的时候
还会出现这样的问题

00:08:55.502 --> 00:08:56.837 align:middle
可以使用代码
也许是更为

00:08:57.104 --> 00:08:58.305 align:middle
复杂的情况

00:08:58.372 --> 00:08:59.673 align:middle
也许很难
发现错误

00:08:59.873 --> 00:09:01.842 align:middle
但是如果
你看到这样的内容

00:08:59.873 --> 00:09:01.842 align:middle
但是如果
你看到这样的内容

00:09:02.075 --> 00:09:05.345 align:middle
可以看出代码
在运行

00:09:05.579 --> 00:09:07.381 align:middle
我们显示的是
被赋予不同

00:09:08.081 --> 00:09:09.883 align:middle
变量的类型

00:09:10.384 --> 00:09:11.818 align:middle
作为参数传递

00:09:12.119 --> 00:09:13.453 align:middle
或从函数返回

00:09:15.989 --> 00:09:17.357 align:middle
我们生成的就是
这样的东西

00:09:17.925 --> 00:09:19.826 align:middle
我们称之为Type
Profiling Tool

00:09:19.893 --> 00:09:21.261 align:middle
如果来看
右上角

00:09:21.361 --> 00:09:25.632 align:middle
当你看任何JavaScript源代
码时 会看到这里的T按钮

00:09:26.166 --> 00:09:28.035 align:middle
如果点击
这个点向前

00:09:28.101 --> 00:09:30.337 align:middle
当代码运行时
代码的样子就会

00:09:30.537 --> 00:09:33.807 align:middle
变成这样

00:09:39.379 --> 00:09:41.215 align:middle
我喜欢这个工具！
太酷了！

00:09:41.281 --> 00:09:43.717 align:middle
我在Web Inspector中
很多用到它

00:09:44.718 --> 00:09:48.222 align:middle
我们会尽量给大家
显示类型信息

00:09:48.422 --> 00:09:51.358 align:middle
因为变量
是要赋值

00:09:51.525 --> 00:09:54.161 align:middle
你会注意到
部分代码变灰

00:09:54.394 --> 00:09:56.363 align:middle
因为我们在跟踪
哪些代码被覆盖

00:09:56.964 --> 00:09:58.031 align:middle
并未接触的
代码将

00:09:58.098 --> 00:09:59.266 align:middle
变成灰显

00:09:59.499 --> 00:10:01.869 align:middle
那么这会作为一个
不错的代码覆盖工具

00:09:59.499 --> 00:10:01.869 align:middle
那么这会作为一个
不错的代码覆盖工具

00:10:03.770 --> 00:10:04.771 align:middle
好它可以让你
发现函数

00:10:04.838 --> 00:10:06.139 align:middle
是否没有运行

00:10:06.406 --> 00:10:09.510 align:middle
或者其他条件
没有满足 这类事情

00:10:11.512 --> 00:10:14.114 align:middle
你也会注意到
我们会显示来自函数的返回值

00:10:14.348 --> 00:10:16.216 align:middle
本例中 我有个函数
它可以返回

00:10:16.283 --> 00:10:19.219 align:middle
DeveloperPerson
是我编写的一个类

00:10:19.286 --> 00:10:21.822 align:middle
你会注意到
我们会给你显示对象的名称

00:10:22.256 --> 00:10:25.292 align:middle
如果你
有构造器函数 就像这个

00:10:25.359 --> 00:10:27.828 align:middle
如果你在使用这种
用原型的经典模式

00:10:28.262 --> 00:10:32.699 align:middle
而且你在用这种方法构造对象
我们会给你显示

00:10:32.766 --> 00:10:33.867 align:middle
构造器函数的名称

00:10:34.067 --> 00:10:35.402 align:middle
当然我们也会
做同样的事情

00:10:35.469 --> 00:10:38.372 align:middle
如果你在用这一版本中
刚推出的ES6类

00:10:38.639 --> 00:10:42.409 align:middle
我们会显示
类的名称

00:10:43.110 --> 00:10:47.814 align:middle
显然 参数可以
在应用的

00:10:47.881 --> 00:10:49.550 align:middle
整个生命期
传递多种值

00:10:49.816 --> 00:10:51.919 align:middle
如果有多种类型
会怎样？

00:10:52.619 --> 00:10:54.254 align:middle
对于对象而言
我们这么处理

00:10:55.923 --> 00:10:57.791 align:middle
比如 我有个函数
叫做登记

00:10:58.625 --> 00:11:01.361 align:middle
好我们会登记
某个参加大会

00:10:58.625 --> 00:11:01.361 align:middle
好我们会登记
某个参加大会

00:11:01.428 --> 00:11:02.763 align:middle
或类似活动的
人员

00:11:03.830 --> 00:11:06.934 align:middle
比如我调用了一次传递了新的
DeveloperPerson

00:11:07.534 --> 00:11:09.937 align:middle
我们将会展示这就是
DeveloperPerson

00:11:10.003 --> 00:11:12.606 align:middle
如果我们传递另一个对象
比如ManagerPerson

00:11:12.673 --> 00:11:13.507 align:middle
会给大家显示

00:11:13.574 --> 00:11:15.475 align:middle
比如同时传递到Developer
Person

00:11:15.542 --> 00:11:16.777 align:middle
和ManagerPerson

00:11:17.477 --> 00:11:20.347 align:middle
那么它们就有了
共同的祖先 人

00:11:20.514 --> 00:11:21.849 align:middle
就是我们会给
大家展示的内容

00:11:22.683 --> 00:11:24.017 align:middle
如果我们传递
不属于

00:11:24.084 --> 00:11:25.452 align:middle
继承链的内容

00:11:25.886 --> 00:11:27.588 align:middle
比如说外星人

00:11:29.089 --> 00:11:30.123 align:middle
我们会
为你显示对象

00:11:30.190 --> 00:11:33.894 align:middle
当然是因为每个内容
都是源自对象 对吗？

00:11:35.896 --> 00:11:37.931 align:middle
现在 这里是我们
可能会给你显示所有不同类型

00:11:39.399 --> 00:11:43.103 align:middle
如果有多个类型
字符串 数字会

00:11:43.170 --> 00:11:45.172 align:middle
赋予一个值
这就是会在

00:11:45.239 --> 00:11:46.874 align:middle
代码中出现的情况
会给大家看很多

00:11:47.941 --> 00:11:51.144 align:middle
这里有个异常情况
这里有个简单类型

00:11:51.211 --> 00:11:54.581 align:middle
比如双精度 有时是
双精度 有时是零值

00:11:54.648 --> 00:11:57.317 align:middle
或未定义
我们只是在顶部

00:11:57.384 --> 00:11:59.219 align:middle
加了问号
表示有时是双精度

00:11:59.553 --> 00:12:01.488 align:middle
或有时是零值

00:11:59.553 --> 00:12:01.488 align:middle
或有时是零值

00:12:04.224 --> 00:12:06.326 align:middle
这是个非常好的功能
我只是想再多说几点

00:12:06.527 --> 00:12:09.062 align:middle
这是来自Web
Inspector的代码真的非常好

00:12:09.129 --> 00:12:12.132 align:middle
可以从全局来看
应用中正在

00:12:12.199 --> 00:12:13.100 align:middle
发生什么

00:12:13.367 --> 00:12:16.837 align:middle
你可以快速
发现不感兴趣的行为

00:12:17.004 --> 00:12:18.305 align:middle
好这里是
对象安排

00:12:18.505 --> 00:12:21.675 align:middle
同样 你可以看覆盖

00:12:21.742 --> 00:12:23.677 align:middle
可以看到
变灰的区域

00:12:24.845 --> 00:12:27.281 align:middle
这对于用Web Inspector
开发是相当有用

00:12:27.347 --> 00:12:28.415 align:middle
我觉得
大家也会很快

00:12:28.482 --> 00:12:29.683 align:middle
发现这是
非常有用的

00:12:29.750 --> 00:12:31.051 align:middle
这就是类型分析工具

00:12:38.859 --> 00:12:39.693 align:middle
好

00:12:41.662 --> 00:12:43.330 align:middle
我们对控制台
做了改进

00:12:44.364 --> 00:12:46.133 align:middle
与之相似
我们希望

00:12:46.200 --> 00:12:48.602 align:middle
直接把有用的
信息放在你前面

00:12:48.735 --> 00:12:50.671 align:middle
而无需你亲自
再做太多处理

00:12:52.072 --> 00:12:54.675 align:middle
这里是我们在
控制台启动的部分对象

00:12:54.875 --> 00:12:56.310 align:middle
大家会注意到
这么几点

00:12:56.844 --> 00:12:58.011 align:middle
首先是
我们创建了...

00:12:58.345 --> 00:12:59.513 align:middle
我们提供了对象预览

00:12:59.580 --> 00:13:01.748 align:middle
这样大家可以
有很棒的对象预览

00:12:59.580 --> 00:13:01.748 align:middle
这样大家可以
有很棒的对象预览

00:13:02.082 --> 00:13:06.820 align:middle
你可能会更快地
看到对象内的信息

00:13:07.654 --> 00:13:08.789 align:middle
你还会看到
其他问题

00:13:08.856 --> 00:13:10.757 align:middle
每次有内容
输出到控制台

00:13:11.225 --> 00:13:13.927 align:middle
我们将会为你
存储为变量

00:13:14.428 --> 00:13:16.763 align:middle
开始是$1
然后是$2

00:13:17.030 --> 00:13:18.832 align:middle
接着是$3
等等

00:13:19.700 --> 00:13:23.303 align:middle
你可以通过将之
放入控制台

00:13:23.370 --> 00:13:25.939 align:middle
再次引用它们

00:13:26.306 --> 00:13:28.408 align:middle
非常好 我们从你们那里获得的反馈

00:13:28.709 --> 00:13:29.710 align:middle
因为这些以前是

00:13:29.776 --> 00:13:33.380 align:middle
用来代表在元素面板中
最新选中的元素

00:13:33.780 --> 00:13:36.416 align:middle
反馈是大家都
只是在用其中之一

00:13:36.483 --> 00:13:38.919 align:middle
$0 所以
不必担心

00:13:38.986 --> 00:13:42.122 align:middle
这里仍然是
当前所选元素 还在那里

00:13:42.389 --> 00:13:44.258 align:middle
还是按照大家
期望在发挥作用

00:13:44.324 --> 00:13:47.394 align:middle
不过是用$1开始
这些是最近登记的变量

00:13:47.995 --> 00:13:51.064 align:middle
如果在调试器中
暂停一下

00:13:51.131 --> 00:13:54.101 align:middle
这些都非常有用
在范围中还有个值

00:13:54.168 --> 00:13:57.070 align:middle
需要记住 你不必
再进入源代码

00:13:57.471 --> 00:14:00.040 align:middle
并生成变量
只是为了调试

00:13:57.471 --> 00:14:00.040 align:middle
并生成变量
只是为了调试

00:14:00.107 --> 00:14:01.642 align:middle
然后保存
接着运行app

00:14:01.708 --> 00:14:02.976 align:middle
最后删掉 或忘在脑后

00:14:03.043 --> 00:14:04.344 align:middle
大家不必
再做这些事情

00:14:04.611 --> 00:14:05.712 align:middle
我们会替你打理

00:14:07.047 --> 00:14:09.349 align:middle
当你打开这些
对象之一

00:14:09.850 --> 00:14:12.119 align:middle
就会看到这个 怎么样

00:14:12.252 --> 00:14:13.187 align:middle
这会好得很多

00:14:13.520 --> 00:14:15.622 align:middle
首先 我们
改进了外观

00:14:15.789 --> 00:14:18.325 align:middle
用不同颜色
区分对象中的

00:14:18.392 --> 00:14:21.395 align:middle
不同信息
类型

00:14:21.461 --> 00:14:24.198 align:middle
对象中的每个内容
都有自己的预览

00:14:24.364 --> 00:14:26.266 align:middle
你会注意到
这是个数组 兄弟元素

00:14:26.667 --> 00:14:28.335 align:middle
这个有着特殊的
预览类型

00:14:28.402 --> 00:14:32.139 align:middle
我们为部分内容
生成特殊预览 Map 集合

00:14:32.206 --> 00:14:35.242 align:middle
弱集合 若映射 承诺

00:14:36.543 --> 00:14:39.346 align:middle
好我们显示数组内
的对象类型

00:14:39.546 --> 00:14:41.315 align:middle
数组的大小
在右边

00:14:41.849 --> 00:14:44.685 align:middle
当你打开它时 我们会显示
其中每个对象的索引

00:14:44.751 --> 00:14:46.353 align:middle
当然 每一个
都有预览

00:14:46.954 --> 00:14:49.690 align:middle
我想让你们注意到
我们已经让检测原型链

00:14:49.790 --> 00:14:52.659 align:middle
变得很容易
这样我们可以为

00:14:52.726 --> 00:14:55.462 align:middle
开发人员和个人
打开原型

00:14:55.529 --> 00:14:57.030 align:middle
可能会看到
像这样的内容

00:14:58.365 --> 00:14:59.633 align:middle
我非常喜欢

00:15:00.601 --> 00:15:03.904 align:middle
这会让我基本上可以
从构建对象的类中

00:15:04.004 --> 00:15:06.473 align:middle
获得对象的
API视图

00:15:07.407 --> 00:15:09.576 align:middle
来看这个

00:15:09.643 --> 00:15:11.678 align:middle
我可以很快找到并确认

00:15:12.079 --> 00:15:14.648 align:middle
我有可以改名的函数
可以查名字

00:15:14.715 --> 00:15:15.849 align:middle
和姓氏

00:15:16.483 --> 00:15:20.053 align:middle
我有自定义设置器
名为firstName

00:15:20.387 --> 00:15:24.491 align:middle
我还有自定义生成器
名为fullName

00:15:25.058 --> 00:15:27.427 align:middle
我介绍这些是因为
旁边有个眼球

00:15:27.494 --> 00:15:28.629 align:middle
我可以点击眼球

00:15:28.695 --> 00:15:31.598 align:middle
它就可以运行
自定义生成器

00:15:32.633 --> 00:15:36.570 align:middle
有些情况下
这几乎比文档都要好

00:15:37.004 --> 00:15:39.640 align:middle
对于原生API探查
也相当不错

00:15:39.706 --> 00:15:40.941 align:middle
有些人
可能在想

00:15:41.208 --> 00:15:44.311 align:middle
我记不住本地
存储是怎么工作的 没问题

00:15:44.511 --> 00:15:45.746 align:middle
放入控制台即可

00:15:45.812 --> 00:15:46.980 align:middle
我可以看到所有的函数

00:15:47.181 --> 00:15:48.949 align:middle
看似好多了
真的非常好

00:15:49.349 --> 00:15:50.784 align:middle
对于对象探测而言
非常好

00:15:50.851 --> 00:15:53.820 align:middle
如果你们还在研究
第三方API 这就棒极了

00:15:53.987 --> 00:15:55.656 align:middle
它不仅是在
控制台

00:15:55.856 --> 00:15:58.358 align:middle
我们不论在哪里显示对象视图
例如 如果你在

00:15:58.425 --> 00:16:01.828 align:middle
调试器停留
你会在右侧范围内看到

00:15:58.425 --> 00:16:01.828 align:middle
调试器停留
你会在右侧范围内看到

00:16:01.895 --> 00:16:03.964 align:middle
变量视图
或在你鼠标滑过的地方

00:16:04.364 --> 00:16:07.901 align:middle
在源视图的一个变量
我给大家看看

00:16:08.135 --> 00:16:11.104 align:middle
在所有这些位置
都是同样漂亮的对象视图

00:16:12.072 --> 00:16:15.342 align:middle
根据这里的类型信息
整齐安排

00:16:15.742 --> 00:16:18.846 align:middle
可以很快地
找到信息

00:16:19.012 --> 00:16:20.981 align:middle
所有这些的
真正目的就是如此

00:16:21.048 --> 00:16:26.353 align:middle
现在有请我的朋友和同事
安迪·艾斯特斯

00:16:26.420 --> 00:16:29.122 align:middle
上台来 他在忙着做一个站点
他很高兴

00:16:29.523 --> 00:16:31.525 align:middle
能给大家做介绍
也许部分工具

00:16:31.592 --> 00:16:32.693 align:middle
也会让他
觉得有帮助

00:16:32.759 --> 00:16:33.627 align:middle
安迪

00:16:38.031 --> 00:16:40.534 align:middle
谢谢 约诺
感谢大家

00:16:40.601 --> 00:16:41.535 align:middle
今天上午来参加讲座

00:16:41.602 --> 00:16:42.769 align:middle
很高兴能来这里

00:16:42.836 --> 00:16:44.972 align:middle
为大家介绍
Web Inspector的新工具

00:16:45.706 --> 00:16:48.609 align:middle
首先 必须承认
早上起晚了 因为昨晚

00:16:48.675 --> 00:16:51.111 align:middle
一直在忙这个站点
我想让它效果更好些

00:16:51.512 --> 00:16:55.516 align:middle
本来应该显示
我拍摄的一组照片

00:16:55.816 --> 00:16:57.951 align:middle
我已经介绍过
有程序错误 如果大家不介意

00:16:58.018 --> 00:17:00.554 align:middle
我希望看看 能否找到
我引入的这个程序错误

00:16:58.018 --> 00:17:00.554 align:middle
我希望看看 能否找到
我引入的这个程序错误

00:17:00.621 --> 00:17:02.523 align:middle
并快速修复
我现在就来

00:17:02.589 --> 00:17:05.726 align:middle
进入Web Inspector
另外 如果你以前从未打开过检测器

00:17:05.925 --> 00:17:06.993 align:middle
可以从开发菜单打开

00:17:07.060 --> 00:17:08.829 align:middle
在Safari没有
开发菜单

00:17:08.896 --> 00:17:10.897 align:middle
则很容易启动
只要进入Safari的

00:17:10.964 --> 00:17:12.031 align:middle
喜好设定

00:17:12.633 --> 00:17:14.601 align:middle
在高级选项卡中
可以看到这个选项

00:17:14.667 --> 00:17:17.404 align:middle
在小条中显示开发菜单
我已经做过检查

00:17:17.503 --> 00:17:18.739 align:middle
我们直接到这里

00:17:19.205 --> 00:17:21.642 align:middle
我会说Develop
显示Web Inspector

00:17:22.276 --> 00:17:25.112 align:middle
则会在底部打开
然后我会看到

00:17:25.179 --> 00:17:27.281 align:middle
在控制台上
有错误

00:17:27.347 --> 00:17:30.350 align:middle
我可以点击它
看似未定义 不是对象

00:17:30.751 --> 00:17:33.520 align:middle
转到调试器
在侧边栏甚至都有错误

00:17:33.587 --> 00:17:34.988 align:middle
可以点击它

00:17:35.055 --> 00:17:37.491 align:middle
这样就直接
到了代码行

00:17:37.925 --> 00:17:39.126 align:middle
我们来看一下

00:17:39.226 --> 00:17:42.162 align:middle
在代码行的某处
我看到未定义的值

00:17:42.229 --> 00:17:43.130 align:middle
这可不是我想要的

00:17:43.363 --> 00:17:45.265 align:middle
通常我要做的是
设置断点

00:17:45.332 --> 00:17:48.335 align:middle
也许花些时间调试
但是我没时间这么做

00:17:48.402 --> 00:17:50.003 align:middle
相反我觉得
要启动类型

00:17:50.070 --> 00:17:51.905 align:middle
分析 来看是否
可以告知我

00:17:51.972 --> 00:17:54.474 align:middle
问题
在哪里

00:17:54.541 --> 00:17:57.277 align:middle
我会点击这个T
启动类型分析

00:17:57.344 --> 00:17:58.512 align:middle
我还会重新
下载站点

00:18:08.822 --> 00:18:10.290 align:middle
很好 这就是我的错误

00:18:11.191 --> 00:18:12.593 align:middle
现在源代码
已经做了注解

00:18:12.659 --> 00:18:13.594 align:middle
有了这些有用的小丸

00:18:13.660 --> 00:18:15.562 align:middle
可以告知所有
变量的类型

00:18:15.629 --> 00:18:17.397 align:middle
来看能否快速
解决这些

00:18:17.798 --> 00:18:21.401 align:middle
我有相册
是个数组

00:18:22.369 --> 00:18:24.471 align:middle
当前相册
是个成像器

00:18:24.571 --> 00:18:27.774 align:middle
结果不应该是
未定义

00:18:27.841 --> 00:18:30.444 align:middle
但是我在这里
将相册做了初始化

00:18:30.511 --> 00:18:32.412 align:middle
我注意到一件事
四个循环的主体

00:18:32.479 --> 00:18:33.714 align:middle
内容变灰了

00:18:33.780 --> 00:18:36.316 align:middle
这意味着代码
并未覆盖

00:18:36.383 --> 00:18:39.253 align:middle
看似相册数据
并未定义

00:18:39.586 --> 00:18:40.821 align:middle
也有点意外

00:18:40.888 --> 00:18:43.323 align:middle
我应该传递一个
有效的相册数据过来

00:18:43.891 --> 00:18:47.761 align:middle
相册数据本身是来自
这个变量this options

00:18:48.228 --> 00:18:49.997 align:middle
我们先来看
是在哪里设置的

00:18:50.130 --> 00:18:51.431 align:middle
我是在导航相册

00:18:51.498 --> 00:18:53.100 align:middle
控制器的构造器中
完成的

00:18:53.700 --> 00:18:55.769 align:middle
看似是将有效对象
传递至构造器

00:18:55.836 --> 00:18:58.405 align:middle
我看到这里有
对象丸

00:18:58.472 --> 00:19:02.309 align:middle
我不是传递零值
或其他的类型

00:18:58.472 --> 00:19:02.309 align:middle
我不是传递零值
或其他的类型

00:19:02.476 --> 00:19:05.312 align:middle
我们来看在哪里
构造导航相册控制器

00:19:05.379 --> 00:19:07.414 align:middle
来看是否告知了
错误是什么

00:19:07.915 --> 00:19:10.617 align:middle
我会复制这个

00:19:10.751 --> 00:19:13.120 align:middle
会使用Web Inspectors
的全局搜索 通过

00:19:13.387 --> 00:19:15.122 align:middle
command-shift-F

00:19:15.189 --> 00:19:17.424 align:middle
来实现 这样会搜索站点的所有资源

00:19:19.326 --> 00:19:20.360 align:middle
我只有一个位置

00:19:20.427 --> 00:19:22.763 align:middle
具备导航
相册控制器

00:19:23.130 --> 00:19:25.532 align:middle
就在这里
我立刻发现了错误所在

00:19:25.599 --> 00:19:28.101 align:middle
我本想作为属性
传递具备相册数据的对象

00:19:28.168 --> 00:19:30.737 align:middle
结果我直接传递了
相册数据

00:19:30.804 --> 00:19:31.772 align:middle
可以很快地修复

00:19:32.306 --> 00:19:35.375 align:middle
可以使用便捷的
ES6快捷方式句法

00:19:35.442 --> 00:19:36.910 align:middle
声明一个新对象
它同时具备作为

00:19:36.977 --> 00:19:39.413 align:middle
相册数据的
属性名称

00:19:39.479 --> 00:19:42.249 align:middle
它的值也是
相册数据值

00:19:43.550 --> 00:19:44.852 align:middle
我做了修改

00:19:44.918 --> 00:19:46.453 align:middle
当我在Web Inspector

00:19:46.520 --> 00:19:49.556 align:middle
编辑本地文件时
可以直接保存这些改变

00:19:49.723 --> 00:19:52.960 align:middle
Web Inspector会弹出
确保我是否真要覆盖本地文件

00:19:53.460 --> 00:19:54.695 align:middle
当然 本例中是这样

00:19:55.162 --> 00:19:57.531 align:middle
一旦这样处理过一次文件
它永远不会再次询问

00:19:57.598 --> 00:19:58.532 align:middle
就会直接保存

00:19:59.032 --> 00:20:00.701 align:middle
让我们重新下载
来看是否发挥作用

00:19:59.032 --> 00:20:00.701 align:middle
让我们重新下载
来看是否发挥作用

00:20:01.768 --> 00:20:03.704 align:middle
好了 现在
就可以看到我拍的

00:20:03.770 --> 00:20:05.172 align:middle
漂亮照片

00:20:05.239 --> 00:20:06.740 align:middle
看上去真不错

00:20:07.508 --> 00:20:10.978 align:middle
大家可以看到
这些相册 排布开来

00:20:11.044 --> 00:20:13.146 align:middle
这样会占据
显示器的全宽

00:20:13.213 --> 00:20:16.016 align:middle
可以在在上面做悬停
来看相册名称

00:20:16.083 --> 00:20:19.019 align:middle
我还有这个中间的标识
可以在上面做悬停

00:20:19.086 --> 00:20:21.388 align:middle
查看在旁边
显示的菜单

00:20:21.455 --> 00:20:23.824 align:middle
你会注意到偶尔
相册会在照片中间旋转

00:20:24.057 --> 00:20:25.626 align:middle
我还有不错的
溶解效果

00:20:25.692 --> 00:20:26.527 align:middle
可以逐个尝试

00:20:26.627 --> 00:20:30.664 align:middle
我希望确保
过渡尽可能

00:20:30.731 --> 00:20:34.468 align:middle
流畅有效
希望约诺告诉我的

00:20:34.535 --> 00:20:36.403 align:middle
这些工具会
帮我实现这些

00:20:37.371 --> 00:20:38.472 align:middle
首先我想做的是
想打开

00:20:38.539 --> 00:20:39.373 align:middle
绘图闪烁效果

00:20:40.107 --> 00:20:41.241 align:middle
我将前往
元素选项卡

00:20:41.642 --> 00:20:44.344 align:middle
画笔选项卡在这里
我会选中

00:20:45.913 --> 00:20:47.915 align:middle
大家会看见
红色矩形

00:20:47.981 --> 00:20:50.050 align:middle
图像正在
逐个过渡

00:20:50.184 --> 00:20:52.186 align:middle
首先我注意到
在过渡期间

00:20:52.252 --> 00:20:54.421 align:middle
我看到了
实体红色矩形

00:20:55.289 --> 00:20:57.691 align:middle
表示我可能
绘制了过渡的

00:20:57.758 --> 00:20:58.825 align:middle
每一个帧

00:20:59.459 --> 00:21:01.862 align:middle
现在我想 这么做
是否会造价太高？

00:20:59.459 --> 00:21:01.862 align:middle
现在我想 这么做
是否会造价太高？

00:21:02.629 --> 00:21:03.864 align:middle
我想用的是
让帧数时间线

00:21:03.931 --> 00:21:05.666 align:middle
告知我

00:21:05.732 --> 00:21:08.735 align:middle
是否做了
太多工作

00:21:08.802 --> 00:21:10.804 align:middle
也许为60帧

00:21:10.871 --> 00:21:12.639 align:middle
每秒的动画
投入太多

00:21:12.706 --> 00:21:14.274 align:middle
我可以打开
时间线选项卡

00:21:15.609 --> 00:21:18.412 align:middle
我可以看到
我重新加载时

00:21:18.478 --> 00:21:21.248 align:middle
它自动记录了时间线
我不希望再这样做

00:21:21.582 --> 00:21:23.884 align:middle
对大部分而言
这看上去真不错

00:21:23.951 --> 00:21:26.753 align:middle
看似我待了
60帧每秒

00:21:26.820 --> 00:21:29.323 align:middle
但是有些帧
超出了预算

00:21:29.389 --> 00:21:30.324 align:middle
就像是这里的

00:21:30.490 --> 00:21:33.060 align:middle
我可以点击并拖拽
选定这个的子集

00:21:33.594 --> 00:21:36.563 align:middle
然后大家会看到
它过滤了记录选项卡

00:21:36.663 --> 00:21:37.898 align:middle
只包括了子集在内

00:21:38.198 --> 00:21:42.269 align:middle
我可以扩展部分内容
来看已完成的内容

00:21:42.336 --> 00:21:44.137 align:middle
样式和有效性
重新计算

00:21:45.439 --> 00:21:46.740 align:middle
时间重新实施之类

00:21:49.376 --> 00:21:50.911 align:middle
有一点很有趣

00:21:51.612 --> 00:21:53.780 align:middle
它会告诉我
动画帧根据

00:21:53.847 --> 00:21:56.783 align:middle
请求动画帧来实施
甚至告知我

00:21:56.850 --> 00:21:58.752 align:middle
我已经将样式
设为无效

00:21:58.819 --> 00:22:00.988 align:middle
这会让我直接转至
导致样式无效的

00:21:58.819 --> 00:22:00.988 align:middle
这会让我直接转至
导致样式无效的

00:22:01.054 --> 00:22:02.189 align:middle
代码行

00:22:02.289 --> 00:22:03.957 align:middle
就在这里

00:22:04.358 --> 00:22:09.263 align:middle
实际上 起作用的动画效果
是我在用请求动画帧

00:22:09.329 --> 00:22:12.966 align:middle
运行的帧
时长为1秒

00:22:13.033 --> 00:22:16.270 align:middle
我甚至停顿了一下
检查这些值

00:22:16.703 --> 00:22:18.138 align:middle
以时长一秒
来运行

00:22:18.205 --> 00:22:20.974 align:middle
在时长
1秒当中

00:22:21.041 --> 00:22:22.476 align:middle
我把不透明值
设为从0到1

00:22:23.510 --> 00:22:25.312 align:middle
看似 至少在
部分情况下

00:22:25.379 --> 00:22:28.015 align:middle
这一动画
在每秒60帧的

00:22:28.081 --> 00:22:29.950 align:middle
预算中
造价太高

00:22:30.317 --> 00:22:32.252 align:middle
我已经计划
从这里过渡到

00:22:32.319 --> 00:22:33.387 align:middle
CSS过渡效果

00:22:33.453 --> 00:22:34.688 align:middle
我觉得这样
会更为有效

00:22:35.022 --> 00:22:38.425 align:middle
我们这么做
来看这样会不会更好些

00:22:38.492 --> 00:22:39.560 align:middle
我选中了这个

00:22:40.027 --> 00:22:45.065 align:middle
我仍然想设置
图像的当前类

00:22:45.132 --> 00:22:46.033 align:middle
晚些时候我会介绍

00:22:46.099 --> 00:22:47.701 align:middle
我想对其余的部分
进行注释

00:22:48.168 --> 00:22:50.470 align:middle
可以保存本地资源

00:22:50.537 --> 00:22:51.505 align:middle
我会确认

00:22:52.673 --> 00:22:54.641 align:middle
我们进入元素选项卡
可以使用选择器

00:22:55.876 --> 00:22:58.612 align:middle
来选择这些相册之一
我会选择这个

00:22:59.413 --> 00:23:02.049 align:middle
在下面 我们可以看到
有三个图像

00:22:59.413 --> 00:23:02.049 align:middle
在下面 我们可以看到
有三个图像

00:23:02.115 --> 00:23:03.483 align:middle
彼此堆在
另一个的顶部

00:23:03.784 --> 00:23:05.886 align:middle
带着当前类的那个
就在这里

00:23:05.953 --> 00:23:08.589 align:middle
是现在显示的
那个

00:23:09.389 --> 00:23:13.126 align:middle
在侧边条 我可以看到
当前类的样式属性

00:23:13.193 --> 00:23:15.295 align:middle
现在 是Z索引3

00:23:16.730 --> 00:23:18.632 align:middle
我们再加些
更多属性

00:23:18.699 --> 00:23:20.734 align:middle
这个 我想
让不透明效果加上动画

00:23:20.801 --> 00:23:22.870 align:middle
或者设置不透明
接着我想

00:23:22.936 --> 00:23:26.073 align:middle
通过线性动画曲线
在1秒钟用过渡

00:23:26.607 --> 00:23:29.343 align:middle
为不透明
加上动画

00:23:30.811 --> 00:23:31.812 align:middle
我想做出这些改变

00:23:32.279 --> 00:23:33.480 align:middle
再次保存

00:23:35.782 --> 00:23:39.119 align:middle
重新加载页面

00:23:44.858 --> 00:23:45.826 align:middle
非常棒马上你会看到

00:23:47.060 --> 00:23:49.229 align:middle
几乎没有
闪烁发生

00:23:49.463 --> 00:23:51.431 align:middle
在首尾部分
偶尔有闪烁

00:23:51.732 --> 00:23:53.700 align:middle
但是在其他时间内
并没有闪烁

00:23:53.767 --> 00:23:56.537 align:middle
这表明我已经
从在请求动画帧代码

00:23:56.603 --> 00:23:59.973 align:middle
让引擎完成软件编译
改为编译

00:24:00.040 --> 00:24:03.777 align:middle
不透明和硬件
这样做会快很多

00:24:03.844 --> 00:24:05.812 align:middle
体验也会
更为流畅

00:24:06.280 --> 00:24:08.982 align:middle
这样看似很好
但我发现一个问题

00:24:09.049 --> 00:24:12.252 align:middle
我看到一个帧有动画
而其他帧没有

00:24:12.486 --> 00:24:15.355 align:middle
看似我引入了
某些程序错误

00:24:15.422 --> 00:24:17.958 align:middle
我们来看能否
找出问题在哪里

00:24:18.025 --> 00:24:21.762 align:middle
我碰巧知道
在代码中...

00:24:22.663 --> 00:24:25.933 align:middle
下张图
在这里

00:24:26.266 --> 00:24:27.901 align:middle
显示下张图返回
一个承诺...

00:24:28.702 --> 00:24:33.407 align:middle
我来重新加载
这样可以启动断点

00:24:33.574 --> 00:24:36.109 align:middle
显示下张图将
返回一个承诺

00:24:36.176 --> 00:24:39.179 align:middle
承诺解决时
我会为下一个动画

00:24:39.413 --> 00:24:40.480 align:middle
启动超时

00:24:40.781 --> 00:24:44.918 align:middle
我甚至可在这里
为承诺做日志 显示下张图

00:24:45.085 --> 00:24:48.222 align:middle
它会告诉我
是未决状态

00:24:48.388 --> 00:24:49.923 align:middle
未决也许不会
太意外

00:24:49.990 --> 00:24:51.058 align:middle
因为我暂停了
调试器

00:24:51.124 --> 00:24:53.327 align:middle
我可能没有运行
最终会解决承诺的代码

00:24:53.393 --> 00:24:55.829 align:middle
所有这里
重新开始

00:24:57.231 --> 00:24:59.533 align:middle
这会每两秒钟
启动动画

00:24:59.600 --> 00:25:01.268 align:middle
那么如果所有内容
都正常 这个承诺

00:24:59.600 --> 00:25:01.268 align:middle
那么如果所有内容
都正常 这个承诺

00:25:01.335 --> 00:25:02.336 align:middle
应该就会
解决

00:25:02.569 --> 00:25:04.037 align:middle
即便我不再
暂停这个函数

00:25:04.104 --> 00:25:05.973 align:middle
我仍会让承诺
影响$1

00:25:06.039 --> 00:25:07.808 align:middle
因此可以再次检查

00:25:08.175 --> 00:25:09.443 align:middle
我看到
它仍然是未决状态

00:25:09.610 --> 00:25:12.379 align:middle
我想自己知道
错误在哪里了

00:25:12.779 --> 00:25:15.949 align:middle
我将返回
动画帧

00:25:16.450 --> 00:25:19.119 align:middle
我可以看到
在请求动画帧的结尾处

00:25:19.186 --> 00:25:20.521 align:middle
我解决了承诺

00:25:20.787 --> 00:25:23.323 align:middle
这最后的动画帧
但是我不会用

00:25:23.390 --> 00:25:24.491 align:middle
CSS过渡效果来处理

00:25:24.558 --> 00:25:25.659 align:middle
我可以很快修复这个问题

00:25:26.226 --> 00:25:32.366 align:middle
我将使用过渡结束
监听器来解决

00:25:33.300 --> 00:25:36.403 align:middle
我保存改变
重新加载

00:25:40.174 --> 00:25:42.075 align:middle
当然再次
达到断点

00:25:42.142 --> 00:25:46.580 align:middle
我再次加载

00:25:46.747 --> 00:25:50.150 align:middle
非常棒现在我们看到流畅的
硬件加速过渡

00:25:50.617 --> 00:25:53.554 align:middle
每个内容
看似都不错

00:25:54.121 --> 00:25:57.024 align:middle
我们可以看出
该如何使用这些强大的功能

00:25:57.090 --> 00:25:59.726 align:middle
如类型分析
绘图闪烁

00:25:59.793 --> 00:26:02.162 align:middle
Rendering Frames
时间线 改进控制台

00:25:59.793 --> 00:26:02.162 align:middle
Rendering Frames
时间线 改进控制台

00:26:02.229 --> 00:26:05.532 align:middle
改进调试
快速发现问题 并解决

00:26:05.999 --> 00:26:07.534 align:middle
谢谢大家 再次有请约诺

00:26:14.041 --> 00:26:15.075 align:middle
谢谢 安迪

00:26:18.812 --> 00:26:21.381 align:middle
大家会发现
这个工具非常有用的

00:26:23.083 --> 00:26:25.686 align:middle
你可以在Web Inspector
使用这个新功能

00:26:25.752 --> 00:26:28.522 align:middle
让站点更快
使用绘图闪烁工具

00:26:29.223 --> 00:26:31.625 align:middle
使用渲染帧
时间线 并在iOS尝试

00:26:31.692 --> 00:26:33.961 align:middle
当然会起作用
如果连上了网页视图

00:26:34.061 --> 00:26:36.864 align:middle
iOS上的Safari
就应该试一试

00:26:37.197 --> 00:26:40.501 align:middle
这些设备上
性能真的很关键

00:26:41.969 --> 00:26:43.103 align:middle
让代码效果更好

00:26:43.403 --> 00:26:47.074 align:middle
使用类型分析器
获得更多不错的信息

00:26:47.140 --> 00:26:49.610 align:middle
运用控制台
用上原生API

00:26:50.777 --> 00:26:53.747 align:middle
运用这些更高效
更快速的工作

00:26:55.916 --> 00:26:58.151 align:middle
这就是我们为Web
Inspector引入的新内容

00:26:59.152 --> 00:27:00.954 align:middle
我们来继续
介绍个新工具

00:26:59.152 --> 00:27:00.954 align:middle
我们来继续
介绍个新工具

00:27:01.755 --> 00:27:03.390 align:middle
叫做Responsive
Design Mode

00:27:03.457 --> 00:27:05.792 align:middle
这在Safari 9
中是新内容

00:27:05.959 --> 00:27:09.363 align:middle
我们稍后就会给
大家演示

00:27:09.530 --> 00:27:12.299 align:middle
首先 我会聊聊
响应式设计

00:27:12.366 --> 00:27:14.234 align:middle
以及为何此刻
它非常重要

00:27:14.301 --> 00:27:17.571 align:middle
相信大部分人都知道
响应式设计是什么

00:27:18.105 --> 00:27:22.943 align:middle
它可以确保在
任何屏幕尺寸中

00:27:23.010 --> 00:27:26.346 align:middle
内容可以自动匹配
并提供绝妙体验

00:27:26.947 --> 00:27:29.049 align:middle
特别重要的是
要准确完成

00:27:29.850 --> 00:27:33.787 align:middle
至此为止 有人
也许会说

00:27:33.854 --> 00:27:34.855 align:middle
我可以嗅探

00:27:35.722 --> 00:27:38.358 align:middle
用户代理字符串

00:27:38.425 --> 00:27:39.826 align:middle
我可以找出用的是什么设备

00:27:40.027 --> 00:27:42.196 align:middle
我知道是在app内
运行网页视图

00:27:42.262 --> 00:27:44.164 align:middle
我知道针对的
设备是什么

00:27:44.464 --> 00:27:48.035 align:middle
所以我不需要按照它的既定方式
完成响应式设计

00:27:49.670 --> 00:27:51.872 align:middle
我们让此事
因多任务处理

00:27:52.673 --> 00:27:55.976 align:middle
而更具难度

00:27:56.043 --> 00:27:58.879 align:middle
现在网页视图也许可以

00:27:58.946 --> 00:28:01.815 align:middle
重新调整大小
但你不清楚该定多宽

00:27:58.946 --> 00:28:01.815 align:middle
重新调整大小
但你不清楚该定多宽

00:28:01.882 --> 00:28:07.955 align:middle
它们会不重新加载内容
就重新调整大小

00:28:08.789 --> 00:28:12.159 align:middle
好 我们要锁定
设备了

00:28:12.392 --> 00:28:14.995 align:middle
我们希望确保可使用这类功能
如 @supports

00:28:15.262 --> 00:28:17.731 align:middle
媒体查询 源集

00:28:17.931 --> 00:28:22.803 align:middle
满足用户不同像素
分辨率图像

00:28:22.870 --> 00:28:25.305 align:middle
我们希望确保
内容会适应

00:28:25.372 --> 00:28:26.640 align:middle
任何屏幕

00:28:26.807 --> 00:28:29.176 align:middle
要帮你完成这些
而不必前往

00:28:29.243 --> 00:28:32.045 align:middle
并打开iOS模拟器
摆弄一番 我们引入了

00:28:32.112 --> 00:28:35.315 align:middle
新的工具 可以帮你
测试布局

00:28:35.382 --> 00:28:38.619 align:middle
并确保它们
具有妥善的响应性

00:28:38.685 --> 00:28:40.888 align:middle
还可以提供
在各种大小的设备上

00:28:40.954 --> 00:28:42.189 align:middle
测试它们的方法

00:28:42.356 --> 00:28:44.157 align:middle
这就是Responsive
Design Mode

00:28:44.224 --> 00:28:45.759 align:middle
可以在开发菜单上

00:28:46.793 --> 00:28:47.728 align:middle
找到它 当开启时

00:28:47.794 --> 00:28:50.697 align:middle
内容会缩小至
这个视图

00:28:51.498 --> 00:28:53.534 align:middle
这就是Responsive
Design Mode

00:28:53.600 --> 00:28:55.536 align:middle
它有若干有趣的功能
首先就是

00:28:55.736 --> 00:28:58.906 align:middle
边上有控制柄
可以调整内容

00:28:59.173 --> 00:29:01.041 align:middle
想大就大
想小就小

00:28:59.173 --> 00:29:01.041 align:middle
想大就大
想小就小

00:29:01.108 --> 00:29:05.612 align:middle
可以自动扩展
假设 如果想要

00:29:05.812 --> 00:29:07.147 align:middle
在超大的70英寸显示屏

00:29:07.314 --> 00:29:11.485 align:middle
模拟内容
也可以做到

00:29:12.586 --> 00:29:15.088 align:middle
我们用预设

00:29:16.723 --> 00:29:18.592 align:middle
为所有设备搭建导航

00:29:18.659 --> 00:29:21.895 align:middle
这样可以自动
在不同屏幕上设置

00:29:21.962 --> 00:29:24.765 align:middle
还可以在多任务
配置中搭建

00:29:24.831 --> 00:29:28.602 align:middle
大家马上
就会看到

00:29:28.669 --> 00:29:31.872 align:middle
对于iPads 在这里
可以点击 会显示给你

00:29:31.939 --> 00:29:33.774 align:middle
它可以自动
根据配置

00:29:33.941 --> 00:29:37.277 align:middle
重新调整内容大小
我们还会让你

00:29:37.344 --> 00:29:40.514 align:middle
进行测试 确保
覆盖了1倍 2倍和3倍的图像

00:29:42.115 --> 00:29:44.051 align:middle
此外 我们还
提供了工具

00:29:44.117 --> 00:29:46.854 align:middle
来设置用户代理字符串
因为你可能会需要

00:29:46.920 --> 00:29:49.656 align:middle
支持版本非常旧的浏览器
遗留浏览器

00:29:49.857 --> 00:29:52.993 align:middle
并确保你可以从
使用用户代理字符串

00:29:53.193 --> 00:29:56.597 align:middle
改为锁定概念运行的
不同屏幕上

00:29:57.130 --> 00:29:58.365 align:middle
好具有前瞻性的思维

00:29:58.498 --> 00:30:00.801 align:middle
这个工具可以帮你
确保 在用户代理字符串发生改变时

00:29:58.498 --> 00:30:00.801 align:middle
这个工具可以帮你
确保 在用户代理字符串发生改变时

00:30:00.868 --> 00:30:03.003 align:middle
你无需破坏任何内容

00:30:03.070 --> 00:30:05.472 align:middle
并可确保
这些都已经妥善解决

00:30:06.240 --> 00:30:08.642 align:middle
现在来看这个工具
怎样使用 怎样更有用

00:30:08.709 --> 00:30:11.111 align:middle
有请安迪
回到台上来

00:30:11.278 --> 00:30:13.313 align:middle
进一步
介绍他的站点

00:30:13.380 --> 00:30:14.214 align:middle
安迪

00:30:18.318 --> 00:30:19.152 align:middle
再次谢谢
约诺

00:30:20.020 --> 00:30:22.422 align:middle
我们直接进入Responsive
Design Mode

00:30:26.527 --> 00:30:27.694 align:middle
好了

00:30:27.761 --> 00:30:31.131 align:middle
我现在预设了
iPad mini 3的情况

00:30:31.198 --> 00:30:34.034 align:middle
我们来研究
桌面的大小

00:30:34.101 --> 00:30:36.203 align:middle
很棒的一点是
我可以将分辨率定到

00:30:36.603 --> 00:30:38.405 align:middle
比我的监视器
更大的数值

00:30:38.705 --> 00:30:43.377 align:middle
然后大家会看到
宽度为2536像素

00:30:43.443 --> 00:30:45.045 align:middle
这比监视器
要大多了

00:30:45.112 --> 00:30:48.849 align:middle
因此非常有用
但我已知道站点在

00:30:49.016 --> 00:30:50.951 align:middle
桌面Viewport大小效果很好

00:30:51.251 --> 00:30:53.587 align:middle
我希望确保在iOS设备
iPhone和iPad上

00:30:53.654 --> 00:30:56.890 align:middle
一切也都正常
可以点击这里

00:30:56.957 --> 00:30:57.891 align:middle
快速走一遍

00:30:57.958 --> 00:31:00.093 align:middle
在横屏模式中
存在iPad错误

00:30:57.958 --> 00:31:00.093 align:middle
在横屏模式中
存在iPad错误

00:31:00.594 --> 00:31:03.030 align:middle
这里是部分
多任务处理模式

00:31:03.197 --> 00:31:07.734 align:middle
如果我继续
它会旋转到竖屏

00:31:07.801 --> 00:31:09.002 align:middle
可以看到多任务处理模式

00:31:09.369 --> 00:31:10.971 align:middle
我开始注意到
在部分

00:31:11.038 --> 00:31:13.841 align:middle
设置中
我的站点...

00:31:13.907 --> 00:31:16.443 align:middle
Viewport太窄
不能用

00:31:16.743 --> 00:31:18.779 align:middle
例如 如果滚动菜单
我看不到

00:31:18.846 --> 00:31:20.914 align:middle
太多照片
文本也被剪切

00:31:20.981 --> 00:31:22.883 align:middle
这的确
不太好

00:31:22.950 --> 00:31:25.185 align:middle
我们来看能否
有所改变...

00:31:25.252 --> 00:31:28.722 align:middle
让站点对Viewports类型
更具响应性

00:31:28.789 --> 00:31:30.591 align:middle
我会再次打开
Web Inspector

00:31:30.657 --> 00:31:31.925 align:middle
这个工具
最棒的一点是

00:31:31.992 --> 00:31:33.660 align:middle
可以将检测器
连接到

00:31:34.094 --> 00:31:35.162 align:middle
Responsive
Design Mode

00:31:35.229 --> 00:31:36.163 align:middle
我们把它放在边上

00:31:36.597 --> 00:31:38.398 align:middle
这样我可以有
更大的屏幕空间

00:31:39.266 --> 00:31:40.567 align:middle
关闭绘图
闪烁

00:31:41.235 --> 00:31:45.005 align:middle
此刻这有些烦人

00:31:45.072 --> 00:31:46.406 align:middle
我们快速做几处修改

00:31:46.473 --> 00:31:48.442 align:middle
首先 把中间的
标识去掉

00:31:48.509 --> 00:31:51.078 align:middle
因为菜单
没有太多空间

00:31:51.144 --> 00:31:52.579 align:middle
我觉得
没必要显示

00:31:52.646 --> 00:31:56.049 align:middle
我还悬停显示了相册名称
我们把这个

00:31:57.251 --> 00:31:58.685 align:middle
设置为无级显示

00:31:59.853 --> 00:32:00.988 align:middle
关于这些图像

00:31:59.853 --> 00:32:00.988 align:middle
关于这些图像

00:32:01.054 --> 00:32:03.123 align:middle
我的屏幕空间有限
可以希望它们

00:32:03.190 --> 00:32:05.826 align:middle
能占据整个Viewport

00:32:05.893 --> 00:32:07.294 align:middle
现在 我确定

00:32:07.361 --> 00:32:10.330 align:middle
它们现在占到
50%的Viewport宽度和高度

00:32:10.397 --> 00:32:12.132 align:middle
我们调高到100

00:32:14.201 --> 00:32:15.836 align:middle
非常棒

00:32:16.570 --> 00:32:19.473 align:middle
现在每屏
是一个相册非常棒

00:32:20.107 --> 00:32:22.342 align:middle
你们会注意按到
桌面上悬停效果

00:32:22.409 --> 00:32:24.778 align:middle
非常好 但是在iOS
设备上 不会有悬停

00:32:25.078 --> 00:32:26.713 align:middle
我也没有菜单
如果文本

00:32:26.780 --> 00:32:28.182 align:middle
总能出现
就太好了

00:32:28.916 --> 00:32:30.484 align:middle
我们来看一下

00:32:32.186 --> 00:32:35.022 align:middle
我会在这里打开
悬停伪类

00:32:35.088 --> 00:32:36.657 align:middle
大家看 显示了

00:32:36.957 --> 00:32:38.358 align:middle
悬停中有
几项内容

00:32:38.425 --> 00:32:41.929 align:middle
首先是
UI为容量1

00:32:42.095 --> 00:32:43.564 align:middle
我们要确定
一直会是这样

00:32:44.665 --> 00:32:47.067 align:middle
其次 你会注意到
覆盖为

00:32:47.134 --> 00:32:49.436 align:middle
不透明度0

00:32:49.803 --> 00:32:52.406 align:middle
我们把这里
始终定为不透明度0

00:32:52.472 --> 00:32:58.412 align:middle
标签这里
一直都是我想要的样子

00:32:59.179 --> 00:33:01.481 align:middle
我还要做一处改变
昨天我参加了

00:32:59.179 --> 00:33:01.481 align:middle
我还要做一处改变
昨天我参加了

00:33:01.548 --> 00:33:03.784 align:middle
《WebKit的最新内容》讲座
学到一个新功能

00:33:03.851 --> 00:33:05.552 align:middle
叫做Scroll
Snap Point

00:33:05.619 --> 00:33:07.888 align:middle
如果我在相册滚动
若能把界限恰好

00:33:07.955 --> 00:33:11.992 align:middle
定在每个相册
那最好不过

00:33:12.226 --> 00:33:14.394 align:middle
我要快速地
加入这点 前往正文标签

00:33:14.995 --> 00:33:20.934 align:middle
我要实现WebKit滚动
界限类型 设为强制

00:33:21.201 --> 00:33:24.371 align:middle
然后我会完成WebKit
滚动界限点

00:33:24.438 --> 00:33:27.774 align:middle
在宽度方向中
我在每个Viewport中做了重复

00:33:29.510 --> 00:33:30.644 align:middle
我们来看一下

00:33:31.879 --> 00:33:33.480 align:middle
不错漂亮
界限设置

00:33:33.547 --> 00:33:35.516 align:middle
在滚动的位置
我就想这样

00:33:36.016 --> 00:33:38.118 align:middle
还有一些改变
我决定要做

00:33:38.185 --> 00:33:40.888 align:middle
我实际上把这些
制作到添加在此的

00:33:41.421 --> 00:33:42.322 align:middle
媒体查询中

00:33:42.789 --> 00:33:44.591 align:middle
我会取消注释

00:33:45.893 --> 00:33:47.961 align:middle
做保存 再重新加载到站点

00:33:48.662 --> 00:33:50.631 align:middle
大家可以看到我加了
小段文本滚动 以便在

00:33:50.697 --> 00:33:51.832 align:middle
底部看到更多内容 很好

00:33:51.965 --> 00:33:54.434 align:middle
我把图标移到右上方
没有出现菜单

00:33:54.501 --> 00:33:56.303 align:middle
现在这些设置

00:33:56.370 --> 00:33:58.739 align:middle
在Viewport上
看似不错

00:33:58.805 --> 00:34:01.241 align:middle
我们要确保
在其他Viewports也没问题

00:33:58.805 --> 00:34:01.241 align:middle
我们要确保
在其他Viewports也没问题

00:34:01.308 --> 00:34:03.911 align:middle
如果宽度更大
我还是原先的设计

00:34:04.278 --> 00:34:05.746 align:middle
那么我会试试
更小的尺寸

00:34:05.812 --> 00:34:09.283 align:middle
我来看较窄的Viewport
响应式设计

00:34:09.349 --> 00:34:10.184 align:middle
非常好

00:34:10.250 --> 00:34:13.219 align:middle
将工具与Web Inspector
相连接 很容易使用

00:34:13.286 --> 00:34:15.389 align:middle
来看内容
在不同尺寸的

00:34:15.455 --> 00:34:16.790 align:middle
Viewport中效果如何

00:34:16.857 --> 00:34:19.659 align:middle
让快速改变
影响设计

00:34:20.027 --> 00:34:21.328 align:middle
谢谢大家 再次有请约诺

00:34:29.937 --> 00:34:30.804 align:middle
好

00:34:32.371 --> 00:34:35.175 align:middle
安迪 谢谢
给我们介绍

00:34:35.542 --> 00:34:37.444 align:middle
这就是Responsive
Design Mode

00:34:39.713 --> 00:34:43.617 align:middle
如果你还没有在
应用内容或

00:34:43.684 --> 00:34:45.552 align:middle
网页内容上
使用响应式设计

00:34:45.619 --> 00:34:46.786 align:middle
现在就可以开始了

00:34:47.221 --> 00:34:50.389 align:middle
这是个不错的想法
因为 再说一遍

00:34:50.489 --> 00:34:52.659 align:middle
不知哪里跑出来的多任务
处理这类事情

00:34:52.726 --> 00:34:54.393 align:middle
会令你把内容
搞糟

00:34:54.460 --> 00:34:56.063 align:middle
你肯定不希望出现这种情况

00:34:56.129 --> 00:34:57.431 align:middle
我们已经添加了Responsive
Design Mode

00:34:57.497 --> 00:35:01.635 align:middle
重点在于布局 图像分辨率
可以集中

00:34:57.497 --> 00:35:01.635 align:middle
重点在于布局 图像分辨率
可以集中

00:35:01.702 --> 00:35:05.372 align:middle
在Safari在
Development Tool中

00:35:05.606 --> 00:35:09.409 align:middle
这样就不必离开
或转向模拟器或

00:35:09.476 --> 00:35:11.512 align:middle
真实设备插件
来测试布局

00:35:11.945 --> 00:35:14.081 align:middle
我们有着
所有的设备预设

00:35:14.147 --> 00:35:16.083 align:middle
如大家所见 可以设置
自己的预设

00:35:16.517 --> 00:35:18.418 align:middle
在WebInspector中没问题

00:35:18.485 --> 00:35:20.053 align:middle
这样可以像正常情况那样进行调试

00:35:20.554 --> 00:35:22.155 align:middle
这就是Safari 9的最新内容

00:35:23.457 --> 00:35:24.458 align:middle
这个工具非常酷

00:35:24.591 --> 00:35:28.395 align:middle
试试吧

00:35:30.797 --> 00:35:35.469 align:middle
有了Web Inspector
可以有强大的工具

00:35:35.536 --> 00:35:39.573 align:middle
来调整设计
使其更顺畅 效果棒极了

00:35:39.673 --> 00:35:41.909 align:middle
确保没有错误发生
确保可以在不同

00:35:42.176 --> 00:35:44.978 align:middle
屏幕大小
均可使用

00:35:46.580 --> 00:35:52.152 align:middle
当大家离开这里时
首先要搞到OS X

00:35:52.252 --> 00:35:54.321 align:middle
El Capitan
搞到开发人员版本

00:35:54.621 --> 00:35:55.722 align:middle
如果你还没有

00:35:55.789 --> 00:35:57.558 align:middle
那就打开Safari的
开发菜单

00:36:00.327 --> 00:36:01.728 align:middle
Customize
Web Inspector

00:36:01.795 --> 00:36:03.197 align:middle
加入你的喜爱设置 在界面上试试

00:36:03.263 --> 00:36:04.765 align:middle
因为我觉得
大家会真的喜欢上它的

00:36:04.831 --> 00:36:06.667 align:middle
非常简洁 所有内容
都很容易找到

00:36:07.134 --> 00:36:08.735 align:middle
试试绘图闪烁

00:36:08.802 --> 00:36:10.137 align:middle
和渲染
帧时间线

00:36:10.604 --> 00:36:12.773 align:middle
即便你觉得
自己的网页内容

00:36:12.873 --> 00:36:15.676 align:middle
在所有网页内容历史中
有着最好的表现

00:36:16.510 --> 00:36:18.478 align:middle
它会告知
你的站点的一些内容

00:36:18.679 --> 00:36:21.782 align:middle
怎样在WebKit上运行
怎样在Safari上使用

00:36:22.349 --> 00:36:25.552 align:middle
你也许会发现
自己并不了解的东西

00:36:26.553 --> 00:36:28.989 align:middle
好 第二点 我首次用了
绘图闪烁功能

00:36:29.056 --> 00:36:30.457 align:middle
例如我有个站点

00:36:30.524 --> 00:36:32.326 align:middle
结果发现背景上的
有些绘图不需要

00:36:32.392 --> 00:36:33.360 align:middle
因为会影响

00:36:33.427 --> 00:36:35.729 align:middle
其他部分的
动画效果

00:36:35.796 --> 00:36:36.897 align:middle
我可以消除这个问题

00:36:37.130 --> 00:36:38.699 align:middle
立刻就可以
非常棒

00:36:39.366 --> 00:36:41.101 align:middle
使用类型信息
分析器

00:36:42.302 --> 00:36:44.304 align:middle
好通过这个工具

00:36:44.371 --> 00:36:46.507 align:middle
它会处理
所有代码

00:36:46.573 --> 00:36:48.842 align:middle
就像是你曾经玩过的
亮光板

00:36:49.176 --> 00:36:51.178 align:middle
非常神奇
它会给你很好的信息

00:36:51.445 --> 00:36:54.448 align:middle
试试吧
使用对象视图在控制台进行运用

00:36:54.648 --> 00:36:56.550 align:middle
试试Responsive
Design Mode

00:36:58.652 --> 00:37:02.756 align:middle
有这些工具的帮助
你的内容一定会出彩

00:36:58.652 --> 00:37:02.756 align:middle
有这些工具的帮助
你的内容一定会出彩

00:37:03.657 --> 00:37:07.995 align:middle
现在重要的是
我们能从大家这里获得反馈

00:37:08.228 --> 00:37:11.698 align:middle
我们非常希望获得
这些新工具的反馈

00:37:11.765 --> 00:37:15.135 align:middle
为此 大家可以将问题

00:37:15.502 --> 00:37:18.505 align:middle
和想法发给乔恩·戴维斯

00:37:18.572 --> 00:37:20.073 align:middle
我们的网页开发顾问
可以通过电邮

00:37:20.140 --> 00:37:22.943 align:middle
atweb-evangelist
@apple.com联系

00:37:23.043 --> 00:37:26.680 align:middle
我们还有
Safari开发

00:37:26.747 --> 00:37:29.816 align:middle
Safari
开发人员

00:37:29.883 --> 00:37:31.685 align:middle
资源库
等相关信息资源

00:37:32.486 --> 00:37:33.320 align:middle
在第二个链接

00:37:34.321 --> 00:37:35.956 align:middle
有个文件叫做

00:37:36.190 --> 00:37:38.258 align:middle
Safari 9最新内容

00:37:38.692 --> 00:37:41.461 align:middle
想了解这些功能的更多详情

00:37:41.528 --> 00:37:44.498 align:middle
还有平台本身的更多新功能

00:37:44.932 --> 00:37:46.600 align:middle
你一定需要
看看这个文件的

00:37:47.668 --> 00:37:49.069 align:middle
希望大家会喜欢大会的其余内容

00:37:49.136 --> 00:37:51.104 align:middle
非常感谢大家上午来参加讲座
