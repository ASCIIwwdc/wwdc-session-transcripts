WEBVTT

00:00:20.420 --> 00:00:23.524 align:middle
Safari可扩展性的
最新内容

00:00:23.590 --> 00:00:24.424 align:middle
<br/>
大家好

00:00:24.791 --> 00:00:25.893 align:middle
我是布莱恩·温斯坦

00:00:25.993 --> 00:00:29.463 align:middle
是Safari和WebKit的
工程师我来这里和大家

00:00:29.630 --> 00:00:32.064 align:middle
聊聊《Safari可扩展性的
最新内容》

00:00:33.400 --> 00:00:37.004 align:middle
今天 我们会介绍
扩展Safari的几种新方法

00:00:37.604 --> 00:00:40.774 align:middle
你可以为iOS和OS X
编写内容拦截器

00:00:42.209 --> 00:00:44.912 align:middle
Safari Extensions
Gallery也有改变

00:00:45.846 --> 00:00:48.282 align:middle
还有新的app扩展
类型 可以将你的

00:00:48.348 --> 00:00:51.552 align:middle
内容直接加在Safari的
Shared Links中

00:00:53.220 --> 00:00:55.889 align:middle
我们这就开始
直入正题 谈谈

00:00:55.956 --> 00:00:56.990 align:middle
内容拦截器

00:01:00.160 --> 00:01:01.862 align:middle
我们先来看
一个大问题：

00:01:02.162 --> 00:01:03.630 align:middle
内容拦截器是什么？

00:01:04.197 --> 00:01:08.635 align:middle
内容拦截器确定了
页面上的内容子集或

00:01:08.702 --> 00:01:12.039 align:middle
资源不会显示
或者都不会加载

00:01:12.573 --> 00:01:15.108 align:middle
我相信大家都可以
设想自己在浏览Web时

00:01:15.175 --> 00:01:16.109 align:middle
有意拦截的内容

00:01:17.477 --> 00:01:20.447 align:middle
可以通过两种重要方法
使用内容拦截器

00:01:20.514 --> 00:01:21.381 align:middle
来拦截内容

00:01:21.915 --> 00:01:25.319 align:middle
可以在页面隐藏元素
或一并拦截

00:01:25.385 --> 00:01:26.520 align:middle
加载资源

00:01:27.421 --> 00:01:29.223 align:middle
一段时间以来 你可以
在OS X上使用Safari扩展

00:01:29.389 --> 00:01:32.626 align:middle
来实现这个功能
但是如今 我们让

00:01:32.693 --> 00:01:34.561 align:middle
iOS也有了这个功能

00:01:35.062 --> 00:01:38.532 align:middle
App会提前告知Safari
它们想要拦截的内容

00:01:38.599 --> 00:01:41.935 align:middle
而不是在实际加载过程中
Safari咨询

00:01:42.002 --> 00:01:44.938 align:middle
app是否
进行拦截

00:01:45.372 --> 00:01:48.108 align:middle
这种新模式
快速而高效

00:01:48.375 --> 00:01:50.377 align:middle
因为Safari不需要
在加载时

00:01:50.577 --> 00:01:52.212 align:middle
咨询app

00:01:52.579 --> 00:01:56.149 align:middle
内容拦截器
被编译成字节代码

00:01:56.316 --> 00:01:58.285 align:middle
这样可以高效地
进行评估

00:01:58.852 --> 00:02:02.489 align:middle
除此之外 新模式
可以很好地保护用户隐私

00:01:58.852 --> 00:02:02.489 align:middle
除此之外 新模式
可以很好地保护用户隐私

00:02:02.756 --> 00:02:05.993 align:middle
因为内容拦截器
不会浏览

00:02:06.093 --> 00:02:07.361 align:middle
用户在做什么

00:02:08.762 --> 00:02:12.065 align:middle
要创建内容拦截器
你需要在

00:02:12.132 --> 00:02:16.537 align:middle
iOS上生成app扩展
这会返回一个列表

00:02:16.603 --> 00:02:18.605 align:middle
包括你想
拦截的内容

00:02:18.672 --> 00:02:21.942 align:middle
规则列表的
JSON字符串

00:02:23.310 --> 00:02:27.181 align:middle
这里是我常去的网站
作者会介绍

00:02:27.247 --> 00:02:29.116 align:middle
他打球的不同
球场 还有

00:02:29.349 --> 00:02:30.984 align:middle
一些漂亮的
图片

00:02:31.552 --> 00:02:34.588 align:middle
但是网站有些
内容很是烦人

00:02:35.088 --> 00:02:36.757 align:middle
我希望编写
内容拦截器

00:02:37.057 --> 00:02:38.759 align:middle
来拦截那些
让我烦心的内容

00:02:39.259 --> 00:02:41.662 align:middle
最显眼的恼人之处
是左侧的

00:02:41.728 --> 00:02:43.297 align:middle
点击诱饵链接

00:02:44.831 --> 00:02:47.835 align:middle
在我滚动页面时
它们甚至都不离左右

00:02:48.168 --> 00:02:50.504 align:middle
我们来编写规则
隐藏这一元素

00:02:53.340 --> 00:02:56.610 align:middle
首先来看 我们
应该隐藏哪个元素

00:02:56.944 --> 00:03:00.380 align:middle
来看网络检测器
我们看div存在ID泄露问题

00:02:56.944 --> 00:03:00.380 align:middle
来看网络检测器
我们看div存在ID泄露问题

00:03:00.447 --> 00:03:03.283 align:middle
在网络检测器中
选中时

00:03:04.117 --> 00:03:10.123 align:middle
我们实际上在
设备上做了覆盖

00:03:10.190 --> 00:03:12.860 align:middle
显示这是需要
隐藏的正确元素

00:03:13.360 --> 00:03:15.896 align:middle
那么我们现在
知道该隐藏的元素

00:03:16.230 --> 00:03:17.664 align:middle
我们来编写规则完成此事

00:03:19.333 --> 00:03:23.270 align:middle
每项规则 每项内容
拦截规则都是

00:03:23.537 --> 00:03:26.440 align:middle
包含动作和触发器
字典的JSON对象

00:03:26.573 --> 00:03:30.711 align:middle
这个动作告知Safari
该做什么

00:03:31.111 --> 00:03:32.746 align:middle
触发器告知Safari

00:03:32.813 --> 00:03:35.148 align:middle
何时要采取
相应的行动

00:03:35.816 --> 00:03:39.019 align:middle
我们先来看看
隐藏这个元素的

00:03:39.219 --> 00:03:41.221 align:middle
动作字典
是要隐藏这个元素

00:03:41.688 --> 00:03:45.826 align:middle
我们的动作
就是将类型CSS不显示

00:03:46.126 --> 00:03:48.795 align:middle
也就是说我们
在页面元素应用

00:03:48.996 --> 00:03:50.531 align:middle
不显示样式

00:03:50.898 --> 00:03:54.234 align:middle
当动作类型为
CSS不显示时

00:03:54.468 --> 00:03:57.471 align:middle
在动作字典中
会用到选择器

00:03:57.871 --> 00:04:00.073 align:middle
所有的选择器
都得到Safari支持

00:03:57.871 --> 00:04:00.073 align:middle
所有的选择器
都得到Safari支持

00:04:00.140 --> 00:04:02.709 align:middle
WebKit是得到
内容拦截器支持

00:04:03.110 --> 00:04:05.045 align:middle
在本例中 我们想

00:04:05.112 --> 00:04:07.748 align:middle
用ID Link来拦截
内容

00:04:08.882 --> 00:04:11.985 align:middle
现在我们来定义
何时想要采取这个行为

00:04:12.319 --> 00:04:14.521 align:middle
会用到触发器
字典来实现

00:04:16.023 --> 00:04:19.692 align:middle
因为Links是相当泛型
的选择器 可以用于

00:04:19.760 --> 00:04:22.095 align:middle
其他页面的真实内容

00:04:22.162 --> 00:04:24.364 align:middle
我只想让这个规则

00:04:24.565 --> 00:04:28.268 align:middle
在用户位于bigbearsgolf
blog.com页面时应用

00:04:28.936 --> 00:04:31.572 align:middle
如果我想让规则
在用户位于

00:04:31.638 --> 00:04:34.675 align:middle
bigbearsgolfblog.
com以外的任何站点运用

00:04:35.142 --> 00:04:37.611 align:middle
我会只将如果域值秘钥

00:04:37.678 --> 00:04:38.912 align:middle
替换为除非域值

00:04:38.979 --> 00:04:40.414 align:middle
并保持相同值

00:04:41.281 --> 00:04:44.651 align:middle
我希望在加载任何资源时
都应用这一动作

00:04:44.852 --> 00:04:48.388 align:middle
同样只要我在bigbears
golfblog.com

00:04:48.689 --> 00:04:52.826 align:middle
我就会设置作为
正则表达式的URL过滤器

00:04:52.893 --> 00:04:55.696 align:middle
在下载的
每个URL资源上运行

00:04:55.963 --> 00:04:57.397 align:middle
以便匹配所有的URL

00:04:57.664 --> 00:04:58.632 align:middle
在稍后的例子中

00:04:58.699 --> 00:05:01.001 align:middle
我们会再说说
URL过滤器

00:04:58.699 --> 00:05:01.001 align:middle
我们会再说说
URL过滤器

00:05:01.802 --> 00:05:04.304 align:middle
我们来看这个规则
放在一起是什么样子

00:05:05.372 --> 00:05:08.108 align:middle
我们有动作类型
CSS不显示

00:05:08.342 --> 00:05:09.977 align:middle
也就是说我们
在隐藏元素

00:05:11.044 --> 00:05:14.047 align:middle
选择器用于描述
我们隐藏的元素

00:05:15.649 --> 00:05:16.850 align:middle
接着在触发器里

00:05:17.050 --> 00:05:20.287 align:middle
我们说明想要
这个样式运用到哪个域名

00:05:21.855 --> 00:05:24.825 align:middle
在加载时 我们希望将
它用在哪些资源

00:05:27.060 --> 00:05:28.862 align:middle
在运用内容
拦截器时

00:05:29.162 --> 00:05:30.430 align:middle
网页是这样的

00:05:31.899 --> 00:05:34.201 align:middle
链接列表
不复存在 我可以

00:05:34.268 --> 00:05:35.602 align:middle
集中在感兴趣的
内容上来

00:05:39.473 --> 00:05:40.307 align:middle
但是

00:05:40.374 --> 00:05:41.642 align:middle
当我看着
Web检测器时

00:05:41.909 --> 00:05:44.011 align:middle
发现页面上
还有一处烦人的内容

00:05:44.912 --> 00:05:47.314 align:middle
如果你来看
页面的资源

00:05:47.714 --> 00:05:50.417 align:middle
就可以看到
从example.com

00:05:50.484 --> 00:05:52.920 align:middle
加载的脚本名为Tracking
script.JS

00:05:53.387 --> 00:05:55.289 align:middle
这个脚本实际上

00:05:55.355 --> 00:05:57.424 align:middle
在跟踪我访问的不同页面

00:05:57.491 --> 00:05:59.193 align:middle
这样可以从我的浏览
历史中

00:05:59.259 --> 00:06:00.561 align:middle
可以搭建出我的配置

00:05:59.259 --> 00:06:00.561 align:middle
可以搭建出我的配置

00:06:00.961 --> 00:06:03.130 align:middle
当我在看控制台时

00:06:03.197 --> 00:06:04.531 align:middle
它会帮助警告我

00:06:04.598 --> 00:06:05.599 align:middle
称我被跟踪了

00:06:06.600 --> 00:06:07.801 align:middle
感谢 Tracking脚本

00:06:09.236 --> 00:06:12.372 align:middle
我会在加载时
一起拦截这个脚本

00:06:15.676 --> 00:06:18.478 align:middle
我们先来定义
这个规则的动作

00:06:22.349 --> 00:06:24.585 align:middle
动作类型为拦截

00:06:24.651 --> 00:06:25.986 align:middle
是指我们会拦截

00:06:26.053 --> 00:06:28.989 align:middle
匹配相应触发器的
任何资源加载

00:06:29.289 --> 00:06:30.724 align:middle
我们来看
这个触发器

00:06:31.959 --> 00:06:34.628 align:middle
触发器会定义
动作何时应启动

00:06:34.962 --> 00:06:37.631 align:middle
但是在本例中
我们已经定义过URL过滤器

00:06:37.965 --> 00:06:40.033 align:middle
资源类型
和加载类型

00:06:40.567 --> 00:06:43.871 align:middle
当三项内容 URL过滤器
资源类型和加载类型

00:06:44.071 --> 00:06:47.040 align:middle
全部匹配 触发器
就会启动

00:06:47.875 --> 00:06:50.210 align:middle
我们先来介绍
URL过滤器

00:06:51.078 --> 00:06:52.546 align:middle
这是个正则表达式

00:06:52.613 --> 00:06:54.248 align:middle
在所被要求的每个URL上

00:06:54.314 --> 00:06:55.349 align:middle
都会运行

00:06:55.883 --> 00:06:58.452 align:middle
在这种情况下
它会与任何包括

00:06:58.719 --> 00:07:01.688 align:middle
字符串Tracking
的下划线脚本相匹配

00:06:58.719 --> 00:07:01.688 align:middle
字符串Tracking
的下划线脚本相匹配

00:07:02.022 --> 00:07:03.724 align:middle
这将匹配

00:07:03.790 --> 00:07:06.627 align:middle
example.com
Trackingscript.js

00:07:07.995 --> 00:07:10.030 align:middle
触发器的其余组件

00:07:10.097 --> 00:07:13.400 align:middle
会提升触发器的
针对性

00:07:13.700 --> 00:07:16.069 align:middle
我们并不需要
拦截的内容矫枉过正

00:07:17.371 --> 00:07:20.140 align:middle
首先我们要的是
确定一组

00:07:20.207 --> 00:07:22.075 align:middle
资源类型
来匹配

00:07:22.543 --> 00:07:26.013 align:middle
在本例中 我们只想
拦截加载脚本

00:07:26.413 --> 00:07:29.750 align:middle
所以把脚本作为
我们希望匹配的资源类型

00:07:30.717 --> 00:07:34.087 align:middle
最后 我们规定了
第三方的加载类型

00:07:34.588 --> 00:07:36.823 align:middle
加载类型可能为
两个值

00:07:37.224 --> 00:07:39.426 align:middle
是第一方
和第三方

00:07:39.927 --> 00:07:42.396 align:middle
当加载是来自
相同的方案 域名和端口时

00:07:42.462 --> 00:07:43.697 align:middle
则被视作是第一方

00:07:44.097 --> 00:07:47.634 align:middle
作为页面的
主要资源

00:07:48.068 --> 00:07:50.604 align:middle
在我们的例子中
我们只希望拦截

00:07:50.671 --> 00:07:53.307 align:middle
第三方加载的
跟踪脚本

00:07:53.640 --> 00:07:56.443 align:middle
也就是说如果
用户是在example.com

00:07:56.743 --> 00:07:58.579 align:middle
脚本仍然会
成功加载

00:08:00.013 --> 00:08:02.316 align:middle
我们来看规则
放在一起是什么效果

00:08:03.550 --> 00:08:06.720 align:middle
当我们配合这个内容
拦截规则重新加载页面时

00:08:07.221 --> 00:08:08.355 align:middle
大家可以看到

00:08:08.422 --> 00:08:10.457 align:middle
我们根本没有加载

00:08:11.391 --> 00:08:12.426 align:middle
我们根本没有加载

00:08:12.492 --> 00:08:14.361 align:middle
Tracking
script.js

00:08:14.828 --> 00:08:17.064 align:middle
控制台没有给出警告

00:08:17.331 --> 00:08:18.332 align:middle
称我们被跟踪

00:08:19.433 --> 00:08:20.267 align:middle
非常棒！

00:08:26.039 --> 00:08:26.874 align:middle
因此

00:08:26.940 --> 00:08:29.743 align:middle
你的内容拦截器
会成为这些规则

00:08:29.810 --> 00:08:30.711 align:middle
的JSON数组

00:08:31.078 --> 00:08:33.447 align:middle
现在 你已经描述了
想要拦截的内容

00:08:33.881 --> 00:08:36.450 align:middle
下一步就是
在iOS设备上获取

00:08:36.582 --> 00:08:37.851 align:middle
内容拦截器

00:08:38.385 --> 00:08:41.855 align:middle
我刚才说过 iOS上的
内容拦截器是

00:08:41.922 --> 00:08:42.923 align:middle
从app扩展中加载

00:08:43.222 --> 00:08:45.259 align:middle
很简单
你可以自己做一个

00:08:45.492 --> 00:08:48.495 align:middle
开始时 你只需要
在项目中添加新目标

00:08:48.929 --> 00:08:51.865 align:middle
从iOS应用扩展列表中
选择内容

00:08:51.932 --> 00:08:53.767 align:middle
拦截器扩展

00:08:54.234 --> 00:08:57.004 align:middle
当设置在启动了你的
内容拦截器

00:08:57.070 --> 00:08:59.339 align:middle
app扩展就会被
实例化

00:08:59.840 --> 00:09:01.842 align:middle
与其他的app
扩展类似

00:08:59.840 --> 00:09:01.842 align:middle
与其他的app
扩展类似

00:09:01.909 --> 00:09:03.110 align:middle
它是默认关闭状态

00:09:04.144 --> 00:09:07.080 align:middle
Safari会把你的规则
编入字节代码

00:09:07.147 --> 00:09:08.382 align:middle
这样每次启动

00:09:08.448 --> 00:09:11.552 align:middle
Safari时 就会加载
并快速评估

00:09:12.119 --> 00:09:14.454 align:middle
一旦你生成了
app扩展

00:09:14.621 --> 00:09:17.991 align:middle
就会有动作请求
处理器

00:09:18.225 --> 00:09:19.560 align:middle
像这样

00:09:20.327 --> 00:09:24.498 align:middle
app扩展所做的就是
在app扩展实例化时

00:09:24.565 --> 00:09:27.367 align:middle
将拦截器

00:09:27.467 --> 00:09:29.503 align:middle
list.JSON的内容
返回Safari

00:09:29.870 --> 00:09:32.840 align:middle
拦截器list.JSON
自动进入

00:09:33.240 --> 00:09:35.542 align:middle
你的扩展目标
编写自己的内容拦截器

00:09:35.609 --> 00:09:37.277 align:middle
你所需要
做的就是

00:09:37.344 --> 00:09:38.812 align:middle
填写这个JSON文件

00:09:39.980 --> 00:09:40.814 align:middle
此外

00:09:42.015 --> 00:09:44.117 align:middle
内容拦截器自动
用于Safari

00:09:44.184 --> 00:09:45.252 align:middle
或任何使用

00:09:45.319 --> 00:09:47.788 align:middle
Safari View
Controller的app

00:09:47.855 --> 00:09:50.524 align:middle
如果你有显示
Web内容的app

00:09:50.824 --> 00:09:52.459 align:middle
则应该查看本周早些时候

00:09:52.526 --> 00:09:55.229 align:middle
介绍Safari View
Controller的讲座内容

00:09:56.597 --> 00:09:57.664 align:middle
但是

00:09:57.731 --> 00:09:59.933 align:middle
对部分app而言
静态拦截表

00:10:00.000 --> 00:10:01.034 align:middle
还不够

00:10:01.368 --> 00:10:03.103 align:middle
你可能想
提供内容拦截器的

00:10:03.170 --> 00:10:04.605 align:middle
自定义内容

00:10:04.671 --> 00:10:06.440 align:middle
或是让用户从

00:10:06.507 --> 00:10:08.275 align:middle
诸多不同
拦截表中选择

00:10:08.609 --> 00:10:12.279 align:middle
或是让用户选择
他们不想运用的具体站点

00:10:12.813 --> 00:10:13.947 align:middle
为此

00:10:14.014 --> 00:10:15.816 align:middle
和其他
app扩展一样

00:10:16.083 --> 00:10:19.152 align:middle
我们建议你把管理
设置放入app

00:10:20.020 --> 00:10:22.923 align:middle
当用户采取的动作
会改变

00:10:22.990 --> 00:10:24.057 align:middle
拦截表的内容时

00:10:24.324 --> 00:10:26.159 align:middle
你只需要告知

00:10:26.393 --> 00:10:28.295 align:middle
Safari重新
实例化app扩展

00:10:28.428 --> 00:10:30.931 align:middle
这将导致内容
拦截器被重新编译

00:10:31.798 --> 00:10:32.633 align:middle
为此

00:10:32.900 --> 00:10:34.301 align:middle
我们
在Safari服务框架中

00:10:34.368 --> 00:10:36.436 align:middle
的新款API

00:10:36.770 --> 00:10:38.505 align:middle
名为SF内容拦截器

00:10:38.572 --> 00:10:41.608 align:middle
管理器重新加载
带有标识符的内容拦截器

00:10:42.142 --> 00:10:44.945 align:middle
你只需要传递
内容拦截器的

00:10:45.012 --> 00:10:46.113 align:middle
束标识符

00:10:46.446 --> 00:10:49.516 align:middle
这将导致Safari
重新运行app

00:10:49.683 --> 00:10:51.418 align:middle
扩展并升级
解析内容

00:10:51.485 --> 00:10:53.053 align:middle
拦截器生成的
字节代码

00:10:54.121 --> 00:10:57.257 align:middle
这不过是内容拦截器
可实现的部分功能

00:10:57.357 --> 00:10:59.760 align:middle
可见开始制作自己的
内容拦截器是多么简单

00:11:00.160 --> 00:11:02.829 align:middle
我想有请
阿莱克斯·克里斯滕森来做演示

00:11:03.197 --> 00:11:04.031 align:middle
阿莱克斯?

00:11:10.737 --> 00:11:11.572 align:middle
<br/>
谢谢 布莱恩

00:11:13.307 --> 00:11:16.009 align:middle
我是阿莱克斯·克里斯滕森
来自Safari和WebKit

00:11:16.076 --> 00:11:18.512 align:middle
我将给大家展示
如何在iOS制作内容拦截器

00:11:19.313 --> 00:11:21.481 align:middle
我们会通过两种
方式 拦截内容

00:11:22.115 --> 00:11:23.951 align:middle
我们将在Web页面
隐藏部分元素

00:11:24.017 --> 00:11:25.118 align:middle
我们还会
拦截部分加载

00:11:26.987 --> 00:11:27.955 align:middle
现在

00:11:28.622 --> 00:11:31.024 align:middle
我不了解大家会怎样
但是我自己是时常在

00:11:31.091 --> 00:11:32.526 align:middle
Web冲浪

00:11:32.593 --> 00:11:35.229 align:middle
感觉的确
可以通过删除

00:11:35.295 --> 00:11:37.164 align:middle
部分网页内容的扩展

00:11:37.231 --> 00:11:39.499 align:middle
来提升
用户体验

00:11:40.334 --> 00:11:42.803 align:middle
大家看看
我收藏的Web页面

00:11:42.870 --> 00:11:44.338 align:middle
大家就会明白
我是在说什么

00:11:50.143 --> 00:11:51.311 align:middle
就这样

00:11:51.478 --> 00:11:56.683 align:middle
哦！我就喜欢
这样的Web页面

00:11:56.750 --> 00:12:01.021 align:middle
我可以了解
可爱小狗图片的世界上

00:11:56.750 --> 00:12:01.021 align:middle
我可以了解
可爱小狗图片的世界上

00:12:01.088 --> 00:12:02.389 align:middle
在发生什么

00:12:02.956 --> 00:12:09.496 align:middle
这些内容 我每天
至少会查看一个

00:12:09.563 --> 00:12:12.199 align:middle
宝贵的屏幕空间非常有限

00:12:13.901 --> 00:12:17.938 align:middle
这里的评论有些
烦人 而且还占用了

00:12:18.005 --> 00:12:20.574 align:middle
宝贵的屏幕空间
我本想留着

00:12:20.641 --> 00:12:21.909 align:middle
放可爱的小狗照片的

00:12:22.843 --> 00:12:24.745 align:middle
我们进入Web检测器

00:12:24.811 --> 00:12:26.680 align:middle
来看这个问题
该怎么解决

00:12:28.115 --> 00:12:32.452 align:middle
在Mac上打开Safari

00:12:32.553 --> 00:12:35.689 align:middle
如果进入开发菜单
模拟器

00:12:36.323 --> 00:12:37.758 align:middle
可爱的小狗和cats.com

00:12:37.824 --> 00:12:39.326 align:middle
大家可以看见

00:12:39.393 --> 00:12:41.361 align:middle
我们要检查这个
iOS模拟器实例

00:12:42.596 --> 00:12:45.399 align:middle
如果我们按住鼠标
可以看到

00:12:45.465 --> 00:12:47.734 align:middle
这就是我想
隐藏的div

00:12:50.103 --> 00:12:52.239 align:middle
这是个类评论

00:12:53.440 --> 00:12:56.443 align:middle
如果我们研究Web页面的结构
就会看出

00:12:56.510 --> 00:12:59.046 align:middle
我想隐藏的
其他div

00:12:59.112 --> 00:13:00.781 align:middle
也都有
类评论

00:12:59.112 --> 00:13:00.781 align:middle
也都有
类评论

00:13:00.914 --> 00:13:04.251 align:middle
编写选择器
div.comments非常简单

00:13:04.718 --> 00:13:08.088 align:middle
可以发现 页面上我想隐藏的
所有元素

00:13:08.155 --> 00:13:14.161 align:middle
都使用了CSS
不显示样式

00:13:14.228 --> 00:13:17.364 align:middle
我们来制定规则
在iOS内容拦截器中完成这个任务

00:13:24.538 --> 00:13:29.977 align:middle
打开Xcode
生成新项目iOS

00:13:31.278 --> 00:13:32.980 align:middle
单视图应用

00:13:33.814 --> 00:13:36.850 align:middle
我的app希望大家能有
比"我的app"更好的名称

00:13:39.286 --> 00:13:40.854 align:middle
在桌面上
生成它

00:13:42.489 --> 00:13:43.323 align:middle
好

00:13:43.390 --> 00:13:45.559 align:middle
从这里我们进入文档

00:13:46.026 --> 00:13:47.094 align:middle
新建

00:13:47.160 --> 00:13:47.995 align:middle
目标

00:13:50.464 --> 00:13:52.766 align:middle
在iOS下

00:13:53.433 --> 00:13:54.902 align:middle
应用扩展

00:13:55.302 --> 00:13:57.404 align:middle
这里有
内容拦截扩展模板

00:13:57.471 --> 00:13:58.906 align:middle
就是布莱恩
刚说过的那个

00:14:04.545 --> 00:14:05.712 align:middle
我的内容拦截器

00:14:07.047 --> 00:14:09.950 align:middle
我们不要激活
这个方案 因为我们

00:14:10.017 --> 00:14:12.252 align:middle
要在iOS模拟器上
运行app

00:14:13.120 --> 00:14:14.821 align:middle
加入新的目标

00:14:15.255 --> 00:14:16.356 align:middle
变成这个样子：

00:14:16.423 --> 00:14:18.025 align:middle
mycontentblocker

00:14:19.126 --> 00:14:20.360 align:middle
在其中

00:14:21.228 --> 00:14:23.063 align:middle
生成了
拦截器list.JSON

00:14:23.597 --> 00:14:25.098 align:middle
我们准备把规则
放在这里

00:14:27.434 --> 00:14:28.502 align:middle
现在

00:14:31.905 --> 00:14:33.240 align:middle
我有应用于

00:14:35.509 --> 00:14:40.080 align:middle
选择器
div.comments的规则

00:14:40.981 --> 00:14:44.818 align:middle
并把样式CSS不显示
应用于选择器匹配的

00:14:44.885 --> 00:14:48.655 align:middle
页面所有
元素中

00:14:54.127 --> 00:14:56.163 align:middle
我们现在把这个
应用到所有地方

00:14:57.331 --> 00:14:59.366 align:middle
用点星号正则表达式

00:15:00.801 --> 00:15:01.668 align:middle
代表所有地方

00:15:03.704 --> 00:15:05.305 align:middle
在模拟器中运行

00:15:06.139 --> 00:15:06.974 align:middle
这就是我的app

00:15:09.076 --> 00:15:10.410 align:middle
好的

00:15:10.577 --> 00:15:11.745 align:middle
如果我们进入设置

00:15:14.014 --> 00:15:14.982 align:middle
Safari

00:15:18.352 --> 00:15:19.319 align:middle
内容拦截器

00:15:20.521 --> 00:15:22.122 align:middle
这是我的app的
内容拦截器

00:15:22.990 --> 00:15:24.057 align:middle
我们把它打开

00:15:25.392 --> 00:15:27.561 align:middle
重新加载页面 看看它会做什么

00:15:36.236 --> 00:15:37.504 align:middle
所有评论都不见了

00:15:38.238 --> 00:15:39.673 align:middle
我可以把屏幕空间

00:15:39.740 --> 00:15:42.843 align:middle
放可爱的小狗照片
我来这个站点就是这个目的

00:15:42.910 --> 00:15:47.014 align:middle
如果仔细看
你可能会发现

00:15:47.814 --> 00:15:49.850 align:middle
有一幅图 不是
可爱的小狗照片

00:15:51.251 --> 00:15:55.355 align:middle
我其实是个爱狗人士
而不是爱猫人士

00:15:58.559 --> 00:16:02.396 align:middle
我不想看到
这些猫咪的照片

00:15:58.559 --> 00:16:02.396 align:middle
我不想看到
这些猫咪的照片

00:16:04.298 --> 00:16:06.900 align:middle
(Laughter)我不想等到
这些猫咪照片都加载下来

00:16:06.967 --> 00:16:08.235 align:middle
也不想把带宽
用在下载

00:16:08.802 --> 00:16:11.305 align:middle
我根本
不想要的

00:16:11.371 --> 00:16:15.375 align:middle
猫咪上面
我们把这些加载完全拦截掉

00:16:21.949 --> 00:16:24.451 align:middle
回到Web检测器
和资源选项卡

00:16:25.953 --> 00:16:28.589 align:middle
大家可以看到
这个页面上的资源

00:16:31.425 --> 00:16:34.228 align:middle
有些名称我可以通过
编写正则表达式识别出来

00:16:34.695 --> 00:16:37.331 align:middle
如果包括斜杠

00:16:38.665 --> 00:16:39.800 align:middle
猫咪
那可能就是猫咪照片

00:16:42.202 --> 00:16:43.470 align:middle
我们拦截这些加载

00:16:47.641 --> 00:16:49.810 align:middle
这里我还有个规则

00:16:51.912 --> 00:16:53.547 align:middle
动作类型拦截

00:16:54.281 --> 00:16:59.586 align:middle
如果匹配正则表达式

00:16:59.653 --> 00:17:01.655 align:middle
斜杠猫咪 我们就拦截它

00:16:59.653 --> 00:17:01.655 align:middle
斜杠猫咪 我们就拦截它

00:17:01.989 --> 00:17:03.957 align:middle
我觉得这
有点太过泛型

00:17:04.023 --> 00:17:06.292 align:middle
我估计这样可能
会拦截掉一些

00:17:06.359 --> 00:17:09.262 align:middle
我不想拦截的页面
比如任何位置的URL

00:17:09.329 --> 00:17:11.431 align:middle
要是有这样的斜杠类型
就会被拦截

00:17:11.498 --> 00:17:12.965 align:middle
但是这可能会导致问题

00:17:13.534 --> 00:17:14.401 align:middle
我们先这么用在

00:17:14.468 --> 00:17:17.471 align:middle
cutepuppiesand
cats.com之中我相当肯定

00:17:17.538 --> 00:17:19.339 align:middle
网站上若有斜杠
猫咪的URL 可能就是

00:17:19.406 --> 00:17:21.875 align:middle
我想要拦截的
猫咪照片

00:17:23.609 --> 00:17:26.480 align:middle
好的 我们来运行一下
看看会怎样

00:17:33.887 --> 00:17:35.822 align:middle
我们回到设置中
做转换

00:17:35.889 --> 00:17:37.424 align:middle
并重新编译
内容拦截器

00:17:37.824 --> 00:17:40.661 align:middle
你还可以使用API
从app内部完成这个任务

00:17:44.164 --> 00:17:45.532 align:middle
返回Safari

00:17:46.266 --> 00:17:47.100 align:middle
重新加载
页面

00:17:47.868 --> 00:17:48.735 align:middle
就这样

00:17:48.802 --> 00:17:50.304 align:middle
猫咪照片不见了

00:17:50.704 --> 00:17:52.239 align:middle
但有些内容出现了问题

00:17:52.339 --> 00:17:55.475 align:middle
小狗照片太大了

00:17:55.742 --> 00:17:57.110 align:middle
没有背景颜色

00:17:57.444 --> 00:17:59.146 align:middle
看似CSS
也不见了

00:17:59.713 --> 00:18:03.584 align:middle
<br/>
我们肯定不想这样

00:17:59.713 --> 00:18:03.584 align:middle
<br/>
我们肯定不想这样

00:18:03.650 --> 00:18:05.552 align:middle
我们回到设置中
Web检测器

00:18:05.619 --> 00:18:06.453 align:middle
看看是怎么回事

00:18:07.254 --> 00:18:10.057 align:middle
这里

00:18:10.123 --> 00:18:11.124 align:middle
大家会看到

00:18:11.658 --> 00:18:13.560 align:middle
CSS在URL中

00:18:14.361 --> 00:18:17.564 align:middle
还是以 /cat开头

00:18:17.631 --> 00:18:18.899 align:middle
是猫咪和dogs.css

00:18:18.966 --> 00:18:21.602 align:middle
我们无意中
把它拦截了

00:18:22.269 --> 00:18:24.938 align:middle
有两种办法

00:18:25.005 --> 00:18:26.874 align:middle
来解决问题

00:18:27.007 --> 00:18:29.676 align:middle
我们还有一个规则

00:18:29.743 --> 00:18:31.578 align:middle
只适用于图像或...

00:18:33.547 --> 00:18:36.149 align:middle
可以有些创意

00:18:36.216 --> 00:18:39.520 align:middle
但我会这么做

00:18:40.587 --> 00:18:42.356 align:middle
如果匹配了
猫咪和小狗

00:18:42.890 --> 00:18:45.192 align:middle
我们想忽略掉
拦截的规则

00:18:51.498 --> 00:18:52.366 align:middle
就这样

00:18:52.766 --> 00:18:55.435 align:middle
其中有猫咪和小狗
就忽略之前的规则

00:18:55.836 --> 00:18:58.872 align:middle
这会拦截猫咪图片
这是我想要的样子

00:18:58.939 --> 00:19:02.676 align:middle
但是会让猫咪和
dog.css通过

00:18:58.939 --> 00:19:02.676 align:middle
但是会让猫咪和
dog.css通过

00:19:06.580 --> 00:19:07.981 align:middle
好的 我们再来运行一下

00:19:16.723 --> 00:19:19.927 align:middle
切换 重编译
内容拦截器

00:19:23.697 --> 00:19:25.032 align:middle
并重新加载页面

00:19:26.767 --> 00:19:27.601 align:middle
就这样

00:19:32.139 --> 00:19:35.008 align:middle
我希望内容拦截器的
用户像这样

00:19:35.342 --> 00:19:36.577 align:middle
来查看网页

00:19:37.044 --> 00:19:38.779 align:middle
直接就是
小狗照片

00:19:39.079 --> 00:19:40.414 align:middle
好

00:19:41.748 --> 00:19:45.953 align:middle
今天 我们拦截了部分猫咪照片
隐藏了一些评论

00:19:46.620 --> 00:19:49.423 align:middle
谁知道明天
你想拦截什么内容呢？

00:19:49.489 --> 00:19:50.624 align:middle
随你啦

00:19:50.691 --> 00:19:52.926 align:middle
试着在iOS上
制作内容拦截器吧

00:19:53.193 --> 00:19:54.027 align:middle
布莱恩 上来吧

00:20:01.869 --> 00:20:02.903 align:middle
<br/>
谢谢 阿莱克斯

00:20:03.070 --> 00:20:04.471 align:middle
刚才是对怎样

00:20:04.538 --> 00:20:06.540 align:middle
在iOS生成
制作内容拦截器进行综述

00:20:06.940 --> 00:20:08.876 align:middle
其中只是介绍了
可实现的部分功能

00:20:11.311 --> 00:20:14.548 align:middle
因为我们觉得
拦截列表模型是

00:20:14.615 --> 00:20:16.149 align:middle
拦截Web内容的最好方法

00:20:16.216 --> 00:20:17.417 align:middle
我们已经把

00:20:17.484 --> 00:20:21.121 align:middle
相同的模型通过传统的Safari
扩展API带回Mac

00:20:21.655 --> 00:20:24.591 align:middle
几年前 大家就可以
使用Safari

00:20:24.791 --> 00:20:27.060 align:middle
拦截内容
但是当前的拦截模型

00:20:27.127 --> 00:20:30.464 align:middle
可以反向影响
用户浏览的

00:20:30.631 --> 00:20:31.832 align:middle
效果

00:20:33.333 --> 00:20:36.103 align:middle
有了这款新的拦截
列表模型 因为Safari

00:20:36.170 --> 00:20:38.872 align:middle
在任何加载发生之前
就知道了拦截列表

00:20:39.173 --> 00:20:40.374 align:middle
速度就会快很多

00:20:40.641 --> 00:20:43.644 align:middle
因为我们已经优化了
这些拦截列表

00:20:43.710 --> 00:20:45.078 align:middle
生成的编译字节代码

00:20:45.279 --> 00:20:46.980 align:middle
也会大幅提高
内存效率

00:20:47.948 --> 00:20:51.285 align:middle
如果有人使用...
编写扩展

00:20:51.351 --> 00:20:54.354 align:middle
如果有人过去
编写过内容拦截扩展

00:20:54.955 --> 00:20:56.590 align:middle
他们会了解
可加载方法

00:20:57.191 --> 00:20:59.459 align:middle
所以我们在
反对可加载方法

00:20:59.793 --> 00:21:03.096 align:middle
如果Safari扩展
规定了拦截列表

00:20:59.793 --> 00:21:03.096 align:middle
如果Safari扩展
规定了拦截列表

00:21:03.397 --> 00:21:06.567 align:middle
调用可加载会变成
扩展中的停止操作

00:21:06.633 --> 00:21:11.505 align:middle
在Safari扩展中
增加内容拦截器

00:21:11.572 --> 00:21:14.041 align:middle
你只需要在Safari的
扩展构建器中

00:21:14.374 --> 00:21:17.144 align:middle
设置内容拦截器文档

00:21:17.477 --> 00:21:22.182 align:middle
这可以是你的iOS app
所用的完全相同的JSON文档

00:21:23.550 --> 00:21:25.953 align:middle
但是 如果你想
为用户提供

00:21:26.019 --> 00:21:28.956 align:middle
拦截内容的
自定义选项

00:21:29.256 --> 00:21:32.192 align:middle
同样要让他们从
不同的拦截列表中选择

00:21:32.459 --> 00:21:35.295 align:middle
或者当用户在具体页面时
让拦截列表

00:21:35.362 --> 00:21:38.265 align:middle
不能适用我们已添加了
JavaScript API

00:21:38.565 --> 00:21:41.502 align:middle
来动态配置
你的内容拦截器

00:21:42.336 --> 00:21:46.106 align:middle
你可以从扩展的
全局页面调用

00:21:46.173 --> 00:21:48.675 align:middle
Safari.extension.
set内容拦截器

00:21:48.742 --> 00:21:51.378 align:middle
并传递至
内容拦截器

00:21:51.879 --> 00:21:53.580 align:middle
内容拦截器

00:21:53.647 --> 00:21:55.182 align:middle
可以是对象

00:21:55.516 --> 00:21:56.683 align:middle
或JSON字符串

00:21:56.884 --> 00:21:57.985 align:middle
API二者都接受

00:22:00.721 --> 00:22:02.389 align:middle
刚才是对iOS和OS X

00:22:02.456 --> 00:22:05.259 align:middle
的内容拦截器
进行综述

00:22:06.159 --> 00:22:08.829 align:middle
当我们谈论
传统的Safari扩展时

00:22:09.429 --> 00:22:10.297 align:middle
我们对

00:22:10.364 --> 00:22:12.633 align:middle
Safari Extensions
Gallery有所改变

00:22:18.071 --> 00:22:20.440 align:middle
若有谁不熟悉
Safari Extensions

00:22:20.507 --> 00:22:23.310 align:middle
Gallery 它其实是
用户发现Safari

00:22:23.377 --> 00:22:25.979 align:middle
扩展的
最佳位置

00:22:26.346 --> 00:22:28.982 align:middle
可以直接从
Safari的菜单

00:22:29.283 --> 00:22:31.485 align:middle
并从Safari的
扩展偏好直接访问

00:22:31.985 --> 00:22:33.487 align:middle
只有在这里

00:22:33.554 --> 00:22:37.391 align:middle
用户点击一下
即可安装扩展

00:22:38.625 --> 00:22:41.195 align:middle
如果你对制作
Safari扩展很是认真

00:22:41.361 --> 00:22:42.829 align:middle
你现在就已经在这个库里了

00:22:43.096 --> 00:22:45.966 align:middle
我之前说过 这里是
用户发现并

00:22:46.166 --> 00:22:48.235 align:middle
安装扩展
最便捷的位置

00:22:48.902 --> 00:22:51.538 align:middle
为了用户的
安全起见

00:22:51.772 --> 00:22:53.473 align:middle
很快库里的所有

00:22:53.540 --> 00:22:57.177 align:middle
扩展都会由Apple
签署并主持

00:22:57.411 --> 00:22:59.713 align:middle
利用这一点
你只需向

00:22:59.780 --> 00:23:02.583 align:middle
库中重新
提交扩展即可

00:22:59.780 --> 00:23:02.583 align:middle
库中重新
提交扩展即可

00:23:03.584 --> 00:23:05.986 align:middle
还有一点
非常棒的是

00:23:06.053 --> 00:23:09.089 align:middle
一旦你已经向库
提交过一个版本

00:23:09.423 --> 00:23:12.693 align:middle
如果提交更新的话
用户会自动

00:23:12.759 --> 00:23:14.428 align:middle
免费获得扩展的更新版本

00:23:14.862 --> 00:23:17.264 align:middle
你不必再编写
更新清单

00:23:18.232 --> 00:23:20.767 align:middle
但是如果你的版本
在库中没有

00:23:21.301 --> 00:23:25.172 align:middle
当你想让用户
更新库中的

00:23:25.239 --> 00:23:28.442 align:middle
最新版本时
你需要在更新

00:23:28.509 --> 00:23:31.845 align:middle
清单中添加新的旗标
说明

00:23:31.912 --> 00:23:33.914 align:middle
Safari应更新
扩展到

00:23:34.081 --> 00:23:35.382 align:middle
库中的版本

00:23:35.782 --> 00:23:37.117 align:middle
很快

00:23:37.351 --> 00:23:39.953 align:middle
自动更新
将仅适用于

00:23:40.020 --> 00:23:42.923 align:middle
Extensions
Gallery中的扩展

00:23:44.725 --> 00:23:46.760 align:middle
这些是Safari
ExtensionsGallery

00:23:46.827 --> 00:23:47.661 align:middle
所做的改变

00:23:47.794 --> 00:23:50.264 align:middle
我来介绍本次讲座的
最后一项内容

00:23:50.531 --> 00:23:52.132 align:middle
Shared
Links app扩展

00:23:55.469 --> 00:23:57.704 align:middle
Shared Links是一项
Safari功能

00:23:57.771 --> 00:23:59.072 align:middle
就在书签和

00:23:59.139 --> 00:24:00.941 align:middle
阅读列表旁

00:23:59.139 --> 00:24:00.941 align:middle
阅读列表旁

00:24:01.208 --> 00:24:02.910 align:middle
其中包括你感兴趣的

00:24:03.343 --> 00:24:05.279 align:middle
不同来源的
链接流

00:24:05.979 --> 00:24:08.949 align:middle
推特 领英
微博账户的链接

00:24:09.016 --> 00:24:10.851 align:middle
都会自动
显示

00:24:11.418 --> 00:24:14.788 align:middle
此外 在iOS 8和Safari
Yosemite版本

00:24:15.122 --> 00:24:17.658 align:middle
我们为用户
增加了收藏网站

00:24:17.724 --> 00:24:21.094 align:middle
RSS订阅功能
使其可以直接

00:24:21.161 --> 00:24:22.829 align:middle
在Shared Links显示

00:24:23.330 --> 00:24:26.233 align:middle
在截屏中 大家可以看到
我的推特账户以及

00:24:26.500 --> 00:24:29.469 align:middle
订阅的部分网站
是分散状态

00:24:30.771 --> 00:24:34.074 align:middle
在iOS 9和Safari的OS
X ElCapitan版本中

00:24:34.441 --> 00:24:36.376 align:middle
我们添加了
新的方法

00:24:36.443 --> 00:24:39.479 align:middle
可以直接在Safari的
Shared Links中获取内容

00:24:39.847 --> 00:24:41.815 align:middle
这些是Shared
Links app扩展

00:24:42.182 --> 00:24:43.917 align:middle
这是新的app扩展类型

00:24:44.218 --> 00:24:47.721 align:middle
对于iOS和OS X
有着同样的API

00:24:48.755 --> 00:24:51.925 align:middle
先从生成新
app扩展开始

00:24:51.992 --> 00:24:53.827 align:middle
就像我们刚
介绍内容拦截器时那样

00:24:54.328 --> 00:24:58.665 align:middle
你生成新的目标
在感兴趣的平台

00:24:58.832 --> 00:25:00.467 align:middle
选择Shared Links
扩展

00:24:58.832 --> 00:25:00.467 align:middle
选择Shared Links
扩展

00:25:01.368 --> 00:25:06.139 align:middle
若要app扩展能
在高层级运行

00:25:06.340 --> 00:25:09.710 align:middle
这需要在正确的
时机调用app扩展

00:25:09.910 --> 00:25:13.080 align:middle
你会返回
NSExtension项的列表

00:25:13.580 --> 00:25:15.716 align:middle
在Shared Links app
扩展的情况下

00:25:16.583 --> 00:25:19.219 align:middle
每个NSExtension
会直接转为

00:25:19.286 --> 00:25:21.355 align:middle
Shared Links项

00:25:21.655 --> 00:25:24.224 align:middle
这里有NSExtension项的
白板 还有我们

00:25:25.292 --> 00:25:27.828 align:middle
准备生成的
Shared Links项

00:25:27.928 --> 00:25:30.631 align:middle
我将向大家介绍
怎样通过代码来完成

00:25:31.098 --> 00:25:34.801 align:middle
先在NSExtension项
定义部分用户信息

00:25:35.269 --> 00:25:37.905 align:middle
我们首先要定义的
是每个NSExtension项的

00:25:37.971 --> 00:25:39.506 align:middle
标识符

00:25:39.940 --> 00:25:41.808 align:middle
app扩展返回的

00:25:41.875 --> 00:25:45.145 align:middle
NSExtension项
不会有重复的标识符

00:25:46.180 --> 00:25:50.350 align:middle
接着来定义URL字符串
当用户选择Safari的

00:25:50.517 --> 00:25:53.687 align:middle
Shared Links项时
这就是加载的内容

00:25:55.189 --> 00:25:59.159 align:middle
然后 我们定义Shared
Links项的出版日期

00:25:59.493 --> 00:26:01.728 align:middle
Safari使用每项的日期

00:25:59.493 --> 00:26:01.728 align:middle
Safari使用每项的日期

00:26:01.995 --> 00:26:04.765 align:middle
在用户的Shared
Links内部

00:26:04.831 --> 00:26:07.734 align:middle
不同来源分散项

00:26:08.535 --> 00:26:09.369 align:middle
最后

00:26:09.436 --> 00:26:11.338 align:middle
你可以定义
显示名称

00:26:11.405 --> 00:26:13.974 align:middle
这会在Shared Links
项的顶部显示

00:26:14.875 --> 00:26:15.742 align:middle
要注意两点

00:26:16.043 --> 00:26:18.645 align:middle
独特的标识符
必须与扩展的

00:26:18.779 --> 00:26:21.682 align:middle
多种实例化
相一致

00:26:22.082 --> 00:26:24.918 align:middle
如果扩展需要
多次调用

00:26:24.985 --> 00:26:27.054 align:middle
并返回相同的
Shared Links项

00:26:27.454 --> 00:26:30.557 align:middle
独特的标识符需要
是时间相同

00:26:31.091 --> 00:26:33.660 align:middle
显示名称可以
完全可选

00:26:34.661 --> 00:26:37.998 align:middle
如果没有设定
Safari将使用

00:26:38.198 --> 00:26:40.033 align:middle
Shared Links
app扩展的显示名称

00:26:41.869 --> 00:26:44.471 align:middle
然后 我们定义
Shared Links项的标题

00:26:44.738 --> 00:26:48.041 align:middle
这就是NSExtension项的
属性标题

00:26:49.843 --> 00:26:53.046 align:middle
然后定义Shared
Links项的说明文字

00:26:53.614 --> 00:26:55.782 align:middle
即NSExtension项的
属性内容

00:26:55.849 --> 00:26:57.184 align:middle
文本

00:26:57.718 --> 00:27:00.487 align:middle
如果内容太多
二者都会

00:26:57.718 --> 00:27:00.487 align:middle
如果内容太多
二者都会

00:27:00.554 --> 00:27:02.189 align:middle
自动省略

00:27:03.724 --> 00:27:05.993 align:middle
这是Shared Links项的
全部文本

00:27:06.293 --> 00:27:07.861 align:middle
我们看到的图像
会怎样呢？

00:27:08.095 --> 00:27:11.298 align:middle
左上角的图标
是NSExtension项

00:27:11.365 --> 00:27:13.834 align:middle
附件数组中的
首次输入

00:27:14.501 --> 00:27:17.938 align:middle
在本例中 我会
使用扩展束中的一个图像

00:27:18.071 --> 00:27:20.374 align:middle
但是你可能会
从这里的Web抓取一个图像

00:27:20.774 --> 00:27:24.611 align:middle
右上角的图标
就是你的app图标

00:27:24.945 --> 00:27:27.581 align:middle
因此如果返回
多个Shared Links项

00:27:28.115 --> 00:27:30.017 align:middle
而且是不同的
显示名称

00:27:30.984 --> 00:27:35.289 align:middle
右上角的图标
将提供app的品牌化

00:27:35.989 --> 00:27:41.428 align:middle
让用户知道这些内容
是来自你的app

00:27:41.495 --> 00:27:45.065 align:middle
一点提示 如果这是
首次使用NSExtension项

00:27:45.465 --> 00:27:47.734 align:middle
那么NSExtension项的
所有属性

00:27:48.035 --> 00:27:50.671 align:middle
属性标题
属性内容文本

00:27:50.838 --> 00:27:54.541 align:middle
和附件 必须在设置
用户信息后完成设置

00:27:55.609 --> 00:27:58.946 align:middle
这就是从Shared Links
内部获取内容的全部所需

00:27:59.446 --> 00:28:01.715 align:middle
我想有请阿莱克斯
回来 介绍另一个演示

00:27:59.446 --> 00:28:01.715 align:middle
我想有请阿莱克斯
回来 介绍另一个演示

00:28:02.316 --> 00:28:03.150 align:middle
阿莱克斯?

00:28:12.693 --> 00:28:13.527 align:middle
好

00:28:14.161 --> 00:28:17.331 align:middle
我有些内容想放在Shared
Links当中

00:28:17.531 --> 00:28:19.266 align:middle
我会制作
Shared Links扩展

00:28:20.400 --> 00:28:21.935 align:middle
先来给大家
看看我说的是什么意思

00:28:27.140 --> 00:28:27.975 align:middle
好

00:28:30.477 --> 00:28:34.181 align:middle
如果打开Safari
大家可以看到在侧边栏

00:28:34.948 --> 00:28:39.887 align:middle
我有一束来自
推特账户订阅的链接

00:28:40.554 --> 00:28:43.991 align:middle
我希望把Shared Links
扩展的用户准备的内容

00:28:44.458 --> 00:28:45.792 align:middle
放在这里

00:28:46.827 --> 00:28:48.695 align:middle
我们来制作
Shared Links扩展

00:28:51.031 --> 00:28:51.932 align:middle
打开Xcode

00:28:53.433 --> 00:28:55.736 align:middle
生成新项目

00:28:55.802 --> 00:28:58.305 align:middle
我们按照OS X来做
但是在iOS上也一样

00:29:06.780 --> 00:29:08.382 align:middle
现在 把它放在桌面

00:29:10.551 --> 00:29:15.923 align:middle
好的现在 从这里进入文档
新建 目标

00:29:17.357 --> 00:29:22.663 align:middle
在OS X应用扩展下
这里有Shared

00:29:22.729 --> 00:29:24.898 align:middle
Links扩展模板
布莱恩刚给大家看过

00:29:27.601 --> 00:29:28.435 align:middle
我们继续

00:29:29.603 --> 00:29:33.607 align:middle
My Shared Links扩展

00:29:35.209 --> 00:29:36.043 align:middle
这个名称不错

00:29:37.010 --> 00:29:40.314 align:middle
激活扩展方案

00:29:40.948 --> 00:29:42.249 align:middle
好 我们激活了
因为想要

00:29:42.316 --> 00:29:44.751 align:middle
在Safari上
运行扩展

00:29:47.754 --> 00:29:50.557 align:middle
现在新的目标

00:29:50.624 --> 00:29:53.794 align:middle
形成了My Shared
Links扩展

00:29:54.795 --> 00:29:57.531 align:middle
它把模板
Swift放在这里

00:30:00.234 --> 00:30:03.403 align:middle
这个Swift
非常简单

00:30:04.304 --> 00:30:09.443 align:middle
它刚生成了NSExtension项
填入了用户信息

00:30:10.511 --> 00:30:13.480 align:middle
提供了属性标题
和部分上下文文本

00:30:14.848 --> 00:30:16.316 align:middle
不好意思 是内容文本

00:30:16.750 --> 00:30:20.587 align:middle
它用一个数组调用了
完全请求返回项

00:30:20.954 --> 00:30:23.290 align:middle
在本例中 就是一项

00:30:25.359 --> 00:30:26.760 align:middle
我们来看看
它在框外做了些什么

00:30:30.197 --> 00:30:31.765 align:middle
用Safari来运行

00:30:36.069 --> 00:30:37.638 align:middle
我们用Xcode
进行调试

00:30:37.804 --> 00:30:39.740 align:middle
工具想知道
目前发生的情况

00:30:46.079 --> 00:30:47.347 align:middle
就这样

00:30:47.414 --> 00:30:52.019 align:middle
这里我们有
来自My Shared Links

00:30:52.085 --> 00:30:56.089 align:middle
扩展的部分内容
如果我点击它

00:30:57.324 --> 00:31:00.761 align:middle
就会被带到
Apple.com 非常棒

00:30:57.324 --> 00:31:00.761 align:middle
就会被带到
Apple.com 非常棒

00:31:00.894 --> 00:31:02.429 align:middle
这就是模板
表示的内容

00:31:03.297 --> 00:31:08.302 align:middle
现在 不过我希望把内容
放在这里

00:31:08.368 --> 00:31:13.941 align:middle
我想把Swift
稍作调整

00:31:18.178 --> 00:31:22.850 align:middle
我带大家看一下
怎么做

00:31:22.916 --> 00:31:23.851 align:middle
非常简单

00:31:24.751 --> 00:31:29.022 align:middle
只要发送NSURL
请求

00:31:29.556 --> 00:31:30.457 align:middle
到我的服务器

00:31:31.391 --> 00:31:32.726 align:middle
HTTPS

00:31:32.793 --> 00:31:35.295 align:middle
一定要用HTTPS

00:31:35.362 --> 00:31:37.564 align:middle
cutepuppiesand
cats.com

00:31:37.631 --> 00:31:38.866 align:middle
斜杠data.JSON

00:31:39.533 --> 00:31:42.603 align:middle
我给大家看看
发送请求后

00:31:42.736 --> 00:31:43.837 align:middle
将会收到的代码

00:31:46.740 --> 00:31:49.109 align:middle
就是带有几个链接的

00:31:49.576 --> 00:31:50.444 align:middle
JSON API

00:31:50.511 --> 00:31:52.012 align:middle
还有我想放入

00:31:52.746 --> 00:31:53.780 align:middle
Shared Links的部分内容

00:31:57.918 --> 00:31:58.752 align:middle
好

00:31:58.819 --> 00:32:00.787 align:middle
这会生成一个请求
获得JSON

00:31:58.819 --> 00:32:00.787 align:middle
这会生成一个请求
获得JSON

00:32:01.655 --> 00:32:03.423 align:middle
它会为解析的

00:32:04.625 --> 00:32:07.995 align:middle
JSON数组的
每个值解析JSON

00:32:08.896 --> 00:32:11.865 align:middle
从中会得到一些
字符串

00:32:12.766 --> 00:32:16.003 align:middle
它会填入
通过部分

00:32:16.069 --> 00:32:19.139 align:middle
内容制成的
NSExtension项

00:32:19.339 --> 00:32:25.345 align:middle
我将URL作为独特的
识别符 因为我知道

00:32:25.612 --> 00:32:27.114 align:middle
对于我的数据而言
它们都是独特的

00:32:27.414 --> 00:32:29.249 align:middle
如果这对你的数据而言
不是这样

00:32:29.716 --> 00:32:32.486 align:middle
那么就想办法为每个
获得独特的值

00:32:33.720 --> 00:32:36.356 align:middle
我有个图标

00:32:38.825 --> 00:32:40.160 align:middle
需要添加

00:32:44.198 --> 00:32:45.032 align:middle
就这样

00:32:45.332 --> 00:32:47.201 align:middle
就是我的小狗图标

00:32:48.402 --> 00:32:49.570 align:middle
我把它的位置放错了

00:32:51.138 --> 00:32:52.639 align:middle
我们把它放在演示中

00:32:55.509 --> 00:32:57.277 align:middle
我需要加上它

00:33:02.416 --> 00:33:03.617 align:middle
加上小狗图标

00:33:05.485 --> 00:33:07.721 align:middle
我还要加

00:33:08.355 --> 00:33:09.623 align:middle
在这个目标上

00:33:10.123 --> 00:33:11.692 align:middle
My Shared Links扩展

00:33:11.758 --> 00:33:13.460 align:middle
那么 My Shared
Links扩展

00:33:13.861 --> 00:33:14.795 align:middle
就可以访问这个图标

00:33:17.364 --> 00:33:18.799 align:middle
我们现在来运行一下

00:33:18.866 --> 00:33:19.833 align:middle
我们来看看会怎样

00:33:24.438 --> 00:33:25.572 align:middle
首先关闭Safari

00:33:29.309 --> 00:33:31.612 align:middle
就这样

00:33:32.112 --> 00:33:33.981 align:middle
我们就来运行这个
看看会怎样

00:33:36.450 --> 00:33:38.886 align:middle
工具需要了解
目前发生的情况

00:33:45.058 --> 00:33:47.861 align:middle
我的内容
还没有显示

00:33:48.028 --> 00:33:49.029 align:middle
我们来看看是什么问题

00:33:50.464 --> 00:33:51.865 align:middle
如果直接看这里

00:33:52.766 --> 00:33:54.034 align:middle
会看到一系列错误

00:33:55.469 --> 00:33:58.805 align:middle
如果打开控制台
来看系统

00:33:58.872 --> 00:34:02.209 align:middle
日志控制台
你会看到

00:33:58.872 --> 00:34:02.209 align:middle
日志控制台
你会看到

00:34:04.077 --> 00:34:05.579 align:middle
一系列沙箱异常

00:34:06.480 --> 00:34:07.581 align:middle
这是因为

00:34:08.248 --> 00:34:09.949 align:middle
我的
扩展是沙箱的

00:34:10.217 --> 00:34:12.219 align:middle
为确保用户安全

00:34:13.053 --> 00:34:15.422 align:middle
这些扩展只能访问
有必要的内容

00:34:15.589 --> 00:34:17.824 align:middle
这一独特的扩展

00:34:17.891 --> 00:34:19.226 align:middle
现在还不能
访问网络

00:34:21.295 --> 00:34:23.063 align:middle
我们试着提出
NSURL请求

00:34:23.130 --> 00:34:24.498 align:middle
我们的确需要

00:34:25.666 --> 00:34:26.567 align:middle
访问这个网络

00:34:26.632 --> 00:34:27.835 align:middle
如果我点击

00:34:28.368 --> 00:34:29.902 align:middle
这里的项目

00:34:31.138 --> 00:34:33.974 align:middle
然后进入功能

00:34:35.409 --> 00:34:36.243 align:middle
这里

00:34:36.777 --> 00:34:38.512 align:middle
我需要
检查对外的连接

00:34:39.213 --> 00:34:40.047 align:middle
以便

00:34:40.313 --> 00:34:42.850 align:middle
这个扩展

00:34:43.650 --> 00:34:44.818 align:middle
可以发送

00:34:45.351 --> 00:34:46.820 align:middle
初始的对外
连接以获取

00:34:46.887 --> 00:34:48.255 align:middle
JSON数据

00:34:53.360 --> 00:34:54.194 align:middle
好

00:34:54.460 --> 00:34:55.329 align:middle
好 我们运行一下

00:35:08.609 --> 00:35:09.510 align:middle
就这样!

00:35:14.815 --> 00:35:16.149 align:middle
就在我们想要的位置

00:35:16.216 --> 00:35:18.285 align:middle
现在有了内容

00:35:18.719 --> 00:35:20.454 align:middle
以及内容的链接

00:35:20.821 --> 00:35:22.756 align:middle
我可以将用户

00:35:22.956 --> 00:35:26.093 align:middle
从Safari
Shared Links带到网站

00:35:27.394 --> 00:35:28.962 align:middle
如果有内容
想要放入

00:35:29.029 --> 00:35:30.731 align:middle
Safari Shared
Links

00:35:31.231 --> 00:35:33.233 align:middle
试着制作Shared
Links扩展

00:35:33.567 --> 00:35:34.968 align:middle
好的 该你了 布莱恩！

00:35:44.978 --> 00:35:45.812 align:middle
<br/>
谢谢 阿莱克斯

00:35:45.879 --> 00:35:47.614 align:middle
跟我们演示了
帮助用户

00:35:47.781 --> 00:35:50.150 align:middle
帮助用户使用Shared
Links app扩展

00:35:50.217 --> 00:35:51.785 align:middle
发现你的内容
是多简单的事情

00:35:52.686 --> 00:35:54.288 align:middle
我们今天
都聊了些什么？

00:35:54.821 --> 00:35:56.323 align:middle
我们介绍了
为iOS编写

00:35:56.390 --> 00:35:58.125 align:middle
内容拦截器
的功能

00:35:58.825 --> 00:36:00.961 align:middle
如果你在Mac上有
内容拦截器

00:35:58.825 --> 00:36:00.961 align:middle
如果你在Mac上有
内容拦截器

00:36:01.328 --> 00:36:03.030 align:middle
你就肯定会
用到这个新款API

00:36:03.096 --> 00:36:05.766 align:middle
它可以为用户
提供更快

00:36:05.966 --> 00:36:08.268 align:middle
内存更高效的
浏览体验

00:36:10.070 --> 00:36:12.573 align:middle
若在Safari
ExtensionsGallery

00:36:12.639 --> 00:36:14.041 align:middle
有扩展
请再次提交

00:36:14.107 --> 00:36:17.411 align:middle
这样你的新版本就可以
得到Apple的签署和主持

00:36:17.878 --> 00:36:19.346 align:middle
如果在这里没有
扩展

00:36:19.580 --> 00:36:21.048 align:middle
现在就是开始的绝好时机

00:36:21.882 --> 00:36:22.716 align:middle
最后

00:36:22.783 --> 00:36:25.319 align:middle
如果你有一组链接
在Shared Links中

00:36:25.986 --> 00:36:27.955 align:middle
可以运用
你现在可以直接

00:36:28.021 --> 00:36:30.657 align:middle
把它们放在Safari
这样用户就可以

00:36:30.724 --> 00:36:31.959 align:middle
找到它们 并返回你的网站

00:36:33.527 --> 00:36:37.064 align:middle
如果有任何问题
可以联系约翰·戴维斯

00:36:37.130 --> 00:36:40.033 align:middle
我们的Web
技术开发顾问

00:36:40.667 --> 00:36:41.735 align:middle
很快

00:36:42.135 --> 00:36:45.005 align:middle
我们还有博客
介绍Safari

00:36:45.072 --> 00:36:48.842 align:middle
内容拦截的所有
功能 是在

00:36:49.176 --> 00:36:51.144 align:middle
WebKit.org博客上

00:36:51.512 --> 00:36:55.415 align:middle
尽可以通过Apple开发人员
论坛和我们联系

00:36:56.617 --> 00:36:59.853 align:middle
有关讲座
如果你有app

00:36:59.920 --> 00:37:01.722 align:middle
其中会显示Web内容

00:36:59.920 --> 00:37:01.722 align:middle
其中会显示Web内容

00:37:01.788 --> 00:37:04.191 align:middle
可以查看《介绍Safari
视图控制器》的部分

00:37:05.425 --> 00:37:07.094 align:middle
正如大家所见
我们用Web检测器

00:37:07.160 --> 00:37:09.563 align:middle
帮助生成内容拦截器

00:37:09.630 --> 00:37:11.431 align:middle
若想了解
Web拦截器的更多详情

00:37:11.698 --> 00:37:14.168 align:middle
可以查看《使用Safari
来交付和

00:37:14.234 --> 00:37:16.136 align:middle
调试响应式Web设计》
讲座

00:37:17.504 --> 00:37:18.605 align:middle
我将...

00:37:18.672 --> 00:37:22.309 align:middle
阿莱克斯和我 在本次讲座后
会直接去媒体实验室A

00:37:22.576 --> 00:37:24.278 align:middle
如果有问题
就来找我们

00:37:25.579 --> 00:37:27.614 align:middle
谢谢！
祝大家周五过得愉快
