WEBVTT

00:00:20.287 --> 00:00:25.492 align:middle
动画设计

00:00:40.440 --> 00:00:41.275 align:middle
大家好

00:00:42.309 --> 00:00:45.412 align:middle
我是朱利安
我带上了队友乔和马雷克

00:00:45.612 --> 00:00:47.581 align:middle
欢迎来到“动画设计”

00:00:48.982 --> 00:00:52.252 align:middle
如果你有一款app或游戏

00:00:53.620 --> 00:00:57.324 align:middle
你很可能遇到过这样的情况
你想跟某人说

00:00:57.624 --> 00:00:59.193 align:middle
一件重大事情

00:00:59.626 --> 00:01:01.929 align:middle
也许是这个列表增添了一个新项目

00:00:59.626 --> 00:01:01.929 align:middle
也许是这个列表增添了一个新项目

00:01:02.429 --> 00:01:04.131 align:middle
你可以这样

00:01:08.468 --> 00:01:10.337 align:middle
或者你想让人们

00:01:10.404 --> 00:01:14.575 align:middle
了解app的两个不同部分
之间是如何相互关联的

00:01:15.142 --> 00:01:16.810 align:middle
你可以这样

00:01:20.681 --> 00:01:24.551 align:middle
又或者你刚为app引进了一个新手势

00:01:24.685 --> 00:01:27.521 align:middle
你希望人们了解手势的操作方法

00:01:28.188 --> 00:01:29.990 align:middle
你可以这样

00:01:31.925 --> 00:01:35.262 align:middle
鉴于今天的演讲题目
你们现在可能会猜想

00:01:35.896 --> 00:01:37.798 align:middle
肯定还有别的办法

00:01:39.066 --> 00:01:42.469 align:middle
今天我们要谈论的是如何运用动画

00:01:42.970 --> 00:01:47.975 align:middle
来引导人们的注意力使人们保持定位

00:01:49.376 --> 00:01:52.779 align:middle
将人们的行为和屏幕上
发生的事情连接起来

00:01:54.948 --> 00:01:56.116 align:middle
但在此之前

00:01:56.316 --> 00:01:57.551 align:middle
让我们先简单介绍一下自己

00:01:59.119 --> 00:02:02.656 align:middle
我们是一支发明家、设计师、
样品师团队

00:01:59.119 --> 00:02:02.656 align:middle
我们是一支发明家、设计师、
样品师团队

00:02:03.790 --> 00:02:08.161 align:middle
我们探索新界面
对Apple产品的意义

00:02:08.395 --> 00:02:11.665 align:middle
包括触控板手势、压力触控
和触觉引擎

00:02:13.967 --> 00:02:20.174 align:middle
但我们并不制作完整的app

00:02:21.408 --> 00:02:25.012 align:middle
我们只做小小的动画实验和交互样品

00:02:25.445 --> 00:02:27.514 align:middle
今天我们将谈一谈其中的含义

00:02:30.217 --> 00:02:34.588 align:middle
那么我们今天将一点点了解动画

00:02:34.655 --> 00:02:38.926 align:middle
是什么 为什么 怎么做通过制作动画

00:02:39.059 --> 00:02:43.997 align:middle
来交流理念再稍微了解一下动画

00:02:44.064 --> 00:02:46.166 align:middle
和交互之间的紧密联系

00:02:51.738 --> 00:02:52.940 align:middle
那么什么是动画？

00:02:53.907 --> 00:02:57.244 align:middle
我们在制作app时
是如何看待动画的？

00:02:59.079 --> 00:03:03.884 align:middle
有时候app呈现一个界面

00:02:59.079 --> 00:03:03.884 align:middle
有时候app呈现一个界面

00:03:05.118 --> 00:03:08.355 align:middle
有时候它呈现另一个界面

00:03:10.624 --> 00:03:13.927 align:middle
由于这两个界面并不会同时出现

00:03:15.429 --> 00:03:17.998 align:middle
因此它们之间必定存在某种转变

00:03:18.232 --> 00:03:19.800 align:middle
哪怕只是瞬间的跳跃

00:03:20.767 --> 00:03:23.937 align:middle
当我们考虑动画时
我们所谈论的正是这种转变

00:03:24.338 --> 00:03:25.873 align:middle
这种随时间的转变

00:03:27.441 --> 00:03:30.310 align:middle
那么由于人类通常无法感知到瞬间转变

00:03:30.377 --> 00:03:32.012 align:middle
除非你很特殊

00:03:33.881 --> 00:03:36.950 align:middle
你可以随着时间缓慢地改变事物

00:03:37.618 --> 00:03:39.653 align:middle
以此传达事物之间的关联

00:03:41.088 --> 00:03:42.422 align:middle
因此动画是随时间的转变

00:03:43.857 --> 00:03:46.994 align:middle
但你要注意当我在谈论这种随时间转变

00:03:48.262 --> 00:03:49.596 align:middle
我已拥有那两个界面了

00:03:49.696 --> 00:03:52.132 align:middle
动画无法解决你的一切设计问题

00:03:52.199 --> 00:03:54.134 align:middle
你仍旧需要自行琢磨

00:03:54.434 --> 00:03:55.969 align:middle
你的app需要哪些界面

00:03:56.036 --> 00:03:57.304 align:middle
界面上应当有哪些东西

00:04:01.275 --> 00:04:04.545 align:middle
但时间转变的方式

00:04:04.611 --> 00:04:07.181 align:middle
能够向人们传达信息

00:04:08.415 --> 00:04:10.817 align:middle
你的app很可能不止有两个界面

00:04:11.418 --> 00:04:13.620 align:middle
其实它可能拥有许多不同界面

00:04:15.022 --> 00:04:18.425 align:middle
你可以在不同类型界面的过渡中使用

00:04:18.492 --> 00:04:22.062 align:middle
不同类型的动画来向人们传达

00:04:22.129 --> 00:04:24.231 align:middle
所有界面之间的关联方式

00:04:26.466 --> 00:04:31.305 align:middle
因此这各种不同的
时间转变都在告诉大家

00:04:31.371 --> 00:04:34.041 align:middle
app各个界面是如何整合在一起的

00:04:34.608 --> 00:04:36.810 align:middle
这是思考动画的一种非常实用的方式

00:04:36.877 --> 00:04:38.612 align:middle
它解决部分问题。

00:04:41.381 --> 00:04:43.217 align:middle
但在考虑时间转变的方式时

00:04:43.884 --> 00:04:46.620 align:middle
还有一点需要注意

00:04:48.856 --> 00:04:51.592 align:middle
让我们回到那列表中增添新项目的例子

00:04:52.459 --> 00:04:54.828 align:middle
你可以这样绘制新项目的动画

00:04:56.830 --> 00:04:59.132 align:middle
假如游戏增添了一个新玩家

00:04:59.199 --> 00:05:02.202 align:middle
这很合适而这十分罕见

00:04:59.199 --> 00:05:02.202 align:middle
这很合适而这十分罕见

00:05:02.269 --> 00:05:03.670 align:middle
你希望稍微庆祝一下

00:05:04.271 --> 00:05:06.373 align:middle
但对于绝大部分app而言

00:05:06.807 --> 00:05:08.642 align:middle
你很可能并不需要
运用到这么高深的动画

00:05:09.409 --> 00:05:12.279 align:middle
你也许更加熟悉这样的动画

00:05:14.214 --> 00:05:16.884 align:middle
关键在于这两种动画都在告诉大家

00:05:16.950 --> 00:05:20.988 align:middle
app增添了新项目
但它们的传达方式不同

00:05:21.889 --> 00:05:24.558 align:middle
它们传达了app的一些特性

00:05:24.958 --> 00:05:27.895 align:middle
这种时间转变的思考方式非常巧妙

00:05:28.328 --> 00:05:29.963 align:middle
它能够告诉你app的感觉如何

00:05:31.832 --> 00:05:35.302 align:middle
尤其当我们开始查看
app里的焦点内容时

00:05:35.369 --> 00:05:40.207 align:middle
这些内容的移动能够强有力地

00:05:40.274 --> 00:05:43.243 align:middle
传达出你的app是什么
以及它的感受如何

00:05:48.715 --> 00:05:50.150 align:middle
那么我们为何要制作动画？

00:05:50.450 --> 00:05:53.387 align:middle
我们何时决定开始看动画？

00:05:55.355 --> 00:05:58.225 align:middle
其中可能有多种不同原因

00:05:58.292 --> 00:06:01.562 align:middle
因此今天我们只讨论三种主要类别

00:05:58.292 --> 00:06:01.562 align:middle
因此今天我们只讨论三种主要类别

00:06:04.031 --> 00:06:06.800 align:middle
第一种是为了引导人们的注意力

00:06:08.001 --> 00:06:09.770 align:middle
帮助他们意识到app里

00:06:09.837 --> 00:06:11.238 align:middle
有东西发生了改变

00:06:14.474 --> 00:06:18.345 align:middle
也许app的场景背后有一些变化

00:06:18.412 --> 00:06:22.349 align:middle
而你希望用户明白
有新事物等待他们的探索

00:06:27.087 --> 00:06:31.391 align:middle
又或者用户执行了某类动作

00:06:32.392 --> 00:06:34.928 align:middle
你也许要按住这些图标
并稍微保持一会儿

00:06:36.029 --> 00:06:40.601 align:middle
该动画传达了用户动作的结果

00:06:40.801 --> 00:06:44.004 align:middle
我通过按压改变了app的状态

00:06:46.340 --> 00:06:48.408 align:middle
因此对于这两个场景而言

00:06:48.475 --> 00:06:49.910 align:middle
引导注意是有用的

00:06:54.581 --> 00:06:59.419 align:middle
制作动画的第二个原因
是为了帮助人们保持定位

00:07:00.354 --> 00:07:02.956 align:middle
帮助他们明白自己
身处app的什么地方

00:07:03.624 --> 00:07:04.458 align:middle
到过什么地方

00:07:06.860 --> 00:07:09.930 align:middle
打个比方当我们点击

00:07:09.997 --> 00:07:13.233 align:middle
邮件的“返回”按钮时
就会出现一则动画

00:07:16.737 --> 00:07:18.906 align:middle
你们看这则动画告诉人们

00:07:18.972 --> 00:07:22.476 align:middle
这些界面差不多是彼此堆叠的

00:07:23.710 --> 00:07:25.879 align:middle
但假如我们放慢速度仔细观察

00:07:25.946 --> 00:07:27.714 align:middle
其中发生的事情就会发现

00:07:27.781 --> 00:07:33.587 align:middle
这则动画的精妙之处
它会在用户的返回途中加强这一事件

00:07:34.755 --> 00:07:36.490 align:middle
那么现在仔细看我按“返回”的按钮

00:07:39.259 --> 00:07:43.130 align:middle
你们看那个按钮的
标签变成了新的节标题

00:07:43.497 --> 00:07:44.565 align:middle
表明我现在的位置

00:07:46.400 --> 00:07:49.236 align:middle
这很微妙但如果你
注意看的话就会发现它

00:07:53.740 --> 00:07:55.475 align:middle
制作动画的第三个原因是

00:07:56.643 --> 00:07:59.012 align:middle
将人们的行为和屏幕上

00:07:59.379 --> 00:08:00.848 align:middle
发生的事情连接起来

00:07:59.379 --> 00:08:00.848 align:middle
发生的事情连接起来

00:08:02.115 --> 00:08:05.586 align:middle
我们希望人们一直保持着
对app的控制感

00:08:08.822 --> 00:08:11.758 align:middle
我们可以举消息中心作为一个例子

00:08:13.694 --> 00:08:17.965 align:middle
当我开始控制它时
我能真正看到眼前发生的事情

00:08:18.465 --> 00:08:21.768 align:middle
看到我的手指在哪里
尽管这个视频看不到我的手指

00:08:25.706 --> 00:08:27.808 align:middle
我们可以稍作分解思考一下

00:08:27.875 --> 00:08:30.310 align:middle
我们如何连接人类行为

00:08:31.945 --> 00:08:34.982 align:middle
我触碰屏幕上方开始进入消息中心

00:08:37.150 --> 00:08:42.188 align:middle
然后随着手指的移动消息中心始终

00:08:42.256 --> 00:08:44.124 align:middle
和我的手指连接着

00:08:44.191 --> 00:08:46.627 align:middle
我可以看到正在发生
以及即将发生的事情

00:08:46.693 --> 00:08:48.929 align:middle
对于接下来要发生的事情
我得到了一条线索

00:08:50.264 --> 00:08:53.367 align:middle
然后如果我向上或者向下滑动

00:08:53.433 --> 00:08:56.370 align:middle
它就会取消或者完成这个手势

00:08:57.371 --> 00:08:59.640 align:middle
而动画也将作出适当的反应

00:09:00.941 --> 00:09:04.478 align:middle
甚至可能还有如何退出这种模式的线索

00:09:06.246 --> 00:09:07.948 align:middle
这会帮助你获得控制感

00:09:08.182 --> 00:09:10.851 align:middle
但同时告诉了你手势本身的操作方法

00:09:16.323 --> 00:09:18.325 align:middle
那么以上就是我们今日
所要讨论的三大原因

00:09:19.526 --> 00:09:21.728 align:middle
但是我们如何测试动画呢？

00:09:24.898 --> 00:09:27.067 align:middle
我们的部分目的在于希望能够弄清楚

00:09:27.367 --> 00:09:29.403 align:middle
应当使用哪些动画

00:09:30.804 --> 00:09:34.274 align:middle
在设计app时我们开始绘制

00:09:34.341 --> 00:09:38.378 align:middle
大量屏幕画面
但这些画面呈现的东西太少

00:09:39.346 --> 00:09:42.549 align:middle
如果界面完全不动那么你便无法真正

00:09:42.950 --> 00:09:47.421 align:middle
理解从一个界面过渡到
另一个界面的方式

00:09:49.623 --> 00:09:52.726 align:middle
那么我们可以做一个真正运行的app

00:09:53.727 --> 00:09:55.462 align:middle
但其实app又呈现了太多东西

00:09:57.431 --> 00:09:59.066 align:middle
做一个完整运行的app

00:09:59.132 --> 00:10:02.369 align:middle
涉及到大量细节工作它们会阻碍我们

00:09:59.132 --> 00:10:02.369 align:middle
涉及到大量细节工作它们会阻碍我们

00:10:02.436 --> 00:10:05.272 align:middle
探索动画的多种不同方式 对吧？

00:10:05.339 --> 00:10:08.308 align:middle
我们希望能够进行多种多样的尝试
找出正确的方法

00:10:11.712 --> 00:10:17.551 align:middle
所以我们的工作正是进行小型动画实验

00:10:18.018 --> 00:10:21.655 align:middle
我们找到一些方法
来测验许多不同的动画

00:10:22.389 --> 00:10:25.726 align:middle
因为这让我们得以尝试内置动画

00:10:25.926 --> 00:10:27.861 align:middle
并将它们和自定义动画作比较

00:10:27.928 --> 00:10:30.564 align:middle
也许我们会有一些绝妙的动画新点子

00:10:30.864 --> 00:10:32.099 align:middle
但我们仍旧应该将它

00:10:32.199 --> 00:10:34.768 align:middle
和标准iOS上的动画作比较以确保

00:10:35.269 --> 00:10:37.104 align:middle
我们的直觉是对的这个点子是绝妙的

00:10:37.204 --> 00:10:38.405 align:middle
两种动画我们都需要看

00:10:41.275 --> 00:10:44.645 align:middle
所以我们认为我们真正在
做的事情是制造样品

00:10:45.445 --> 00:10:46.947 align:middle
尽管不是写代码

00:10:47.047 --> 00:10:49.349 align:middle
但我们差不多是在做小小的实验

00:10:49.416 --> 00:10:51.418 align:middle
我们测试并不真实存在的东西

00:10:52.186 --> 00:10:54.555 align:middle
我们制造这些样品展示给人们看

00:10:55.222 --> 00:10:56.590 align:middle
并听取他们的反馈

00:10:57.791 --> 00:11:00.294 align:middle
这其实有点循环往复

00:10:57.791 --> 00:11:00.294 align:middle
这其实有点循环往复

00:11:00.360 --> 00:11:01.929 align:middle
我们制造东西展示给人们看

00:11:02.229 --> 00:11:03.530 align:middle
听取他们的反馈

00:11:04.198 --> 00:11:06.633 align:middle
我们曾在一些其它研讨会中提到过这点

00:11:08.202 --> 00:11:13.507 align:middle
所以为了用更具体的例子向大家展示

00:11:13.574 --> 00:11:17.144 align:middle
我们是如何测试动画的
今天我们将为一app制作

00:11:17.711 --> 00:11:19.680 align:middle
一个动画样品有些人
可能听过这个app

00:11:20.047 --> 00:11:21.315 align:middle
它叫做“现代吐司”

00:11:24.451 --> 00:11:26.286 align:middle
就算你没听说过“现代吐司”也没关系

00:11:27.054 --> 00:11:29.156 align:middle
它仍旧有其最初功能

00:11:31.725 --> 00:11:36.830 align:middle
那就是帮助人们寻找当地的手工吐司

00:11:37.397 --> 00:11:39.600 align:middle
旧金山最棒的进口食物

00:11:40.934 --> 00:11:42.769 align:middle
然而过去一年“现代吐司”

00:11:42.836 --> 00:11:46.173 align:middle
非常成功我们为它
添加了各式各样的新功能

00:11:47.508 --> 00:11:49.843 align:middle
人们可以和他人分享自己找到的吐司

00:11:51.545 --> 00:11:53.080 align:middle
你可以对吐司进行评价

00:11:54.715 --> 00:11:57.251 align:middle
如果你看了昨天的一个研讨会
那么你大概已经知道

00:11:57.317 --> 00:12:01.121 align:middle
我们已将“现代吐司”和
“吐司服务”连接了起来

00:11:57.317 --> 00:12:01.121 align:middle
我们已将“现代吐司”和
“吐司服务”连接了起来

00:12:02.890 --> 00:12:04.892 align:middle
这是世界上首个社交烤面包机

00:12:06.793 --> 00:12:08.729 align:middle
既然人们自己制作吐司

00:12:09.029 --> 00:12:12.399 align:middle
并发布这些照片
那么我可以看到我的吐司

00:12:12.466 --> 00:12:13.834 align:middle
和这些吐司餐厅

00:12:14.735 --> 00:12:16.370 align:middle
现在我可以看到我朋友的吐司

00:12:17.404 --> 00:12:18.805 align:middle
坦白说我们认为这款app

00:12:18.872 --> 00:12:22.042 align:middle
现在的最大问题就在于
我们被淹没在了吐司的汪洋里

00:12:23.810 --> 00:12:28.415 align:middle
所以我们今天将聚焦一个功能

00:12:28.682 --> 00:12:31.051 align:middle
我们将真正开始进入主题

00:12:31.118 --> 00:12:33.654 align:middle
看我们如何为这一个功能
打造不同的动画方式

00:12:33.854 --> 00:12:35.756 align:middle
如何使该功能
变得非常棒。

00:12:36.723 --> 00:12:40.394 align:middle
我们接下来要做的是在所有吐司中

00:12:40.928 --> 00:12:42.196 align:middle
找到我们的收藏

00:12:43.330 --> 00:12:47.501 align:middle
现在为了实现这点而不用写代码

00:12:48.101 --> 00:12:50.337 align:middle
我想邀请乔到台上来

00:12:56.143 --> 00:12:56.977 align:middle
谢谢你 朱利安

00:12:58.912 --> 00:13:05.686 align:middle
嗨 我是乔 大部分时间
我都待在团队里

00:12:58.912 --> 00:13:05.686 align:middle
嗨 我是乔 大部分时间
我都待在团队里

00:13:05.752 --> 00:13:09.122 align:middle
设计并制作动画而不是写很多代码

00:13:10.090 --> 00:13:13.193 align:middle
那么今天我要谈一谈

00:13:13.627 --> 00:13:15.495 align:middle
“现代吐司”的“收藏”按钮

00:13:17.231 --> 00:13:21.635 align:middle
那么我们将扼要地重述一下几个想法

00:13:21.835 --> 00:13:24.538 align:middle
谈谈动画如何为一个功能带来生命力

00:13:26.006 --> 00:13:27.374 align:middle
接下来我们将看一看

00:13:27.474 --> 00:13:30.010 align:middle
app的动画设计流程

00:13:30.477 --> 00:13:33.347 align:middle
我们将看一看几个适合动画的地方

00:13:33.714 --> 00:13:35.148 align:middle
和几个不适合的地方

00:13:36.183 --> 00:13:40.354 align:middle
动画是一种强有力的...
对不起

00:13:40.721 --> 00:13:41.788 align:middle
这有点尴尬

00:13:42.022 --> 00:13:44.358 align:middle
但我忘记关机了

00:13:44.725 --> 00:13:47.928 align:middle
那么让我...哦 其实没关系

00:13:48.095 --> 00:13:49.897 align:middle
这是一封邮件
来自“现代吐司”的CEO

00:13:51.098 --> 00:13:52.866 align:middle
比尔我们能把这个投到屏幕上吗？

00:13:53.534 --> 00:13:55.369 align:middle
谢谢 好了

00:13:56.570 --> 00:13:57.404 align:middle
那么

00:14:00.507 --> 00:14:01.942 align:middle
他有一些想法

00:14:05.312 --> 00:14:06.947 align:middle
让我们看看他说了什么

00:14:07.714 --> 00:14:10.083 align:middle
我在我的圆顶帐篷里
进行了一些深思冥想

00:14:11.185 --> 00:14:12.719 align:middle
为我们的app想到了

00:14:12.786 --> 00:14:14.855 align:middle
一些革命性的新思路

00:14:16.490 --> 00:14:18.892 align:middle
人们需要知道“收藏”按钮就在那里

00:14:19.159 --> 00:14:20.561 align:middle
好吗？我们能做到的

00:14:21.695 --> 00:14:24.932 align:middle
第二人们需要能够找到

00:14:25.032 --> 00:14:25.933 align:middle
之前收藏过的吐司

00:14:26.066 --> 00:14:27.100 align:middle
好的听上去很有道理

00:14:27.968 --> 00:14:31.471 align:middle
第三“收藏”按钮的使用
应当简单而简洁

00:14:31.839 --> 00:14:33.874 align:middle
人们应当在第一次触碰时便能够使用它

00:14:33.941 --> 00:14:34.975 align:middle
听着很有道理

00:14:35.876 --> 00:14:36.710 align:middle
那么别着急

00:14:36.777 --> 00:14:40.914 align:middle
只要在接下来20分钟里
发点东西给我测试就行

00:14:44.151 --> 00:14:45.519 align:middle
有礼了 好了

00:14:46.320 --> 00:14:48.355 align:middle
那么我们开始了

00:14:48.622 --> 00:14:50.924 align:middle
我们时间不多因此需要立刻行动

00:14:51.258 --> 00:14:54.928 align:middle
我们要在短时间内开始尽量制作不同的

00:14:55.195 --> 00:14:58.632 align:middle
动画点子越多越好 快速地做完

00:14:58.699 --> 00:15:00.901 align:middle
尽可能多的动画并将它们放到设备上

00:14:58.699 --> 00:15:00.901 align:middle
尽可能多的动画并将它们放到设备上

00:15:02.135 --> 00:15:05.038 align:middle
在这种情况下你们当中的那些设计师

00:15:05.105 --> 00:15:08.642 align:middle
可能会使用After Effects
或者Quartz Composer

00:15:09.576 --> 00:15:14.014 align:middle
普通开发商可能会用
Swift、HTML、CSS

00:15:14.715 --> 00:15:17.784 align:middle
这些都是好工具但对于你们中那些

00:15:18.118 --> 00:15:20.687 align:middle
不知道那些工具或无法使用它们

00:15:22.055 --> 00:15:24.324 align:middle
的人而言还有Keynote

00:15:25.158 --> 00:15:27.160 align:middle
而这就是我们今天将要使用的工具

00:15:27.227 --> 00:15:30.097 align:middle
因为它能够快速制作动画并且能够非常

00:15:30.163 --> 00:15:31.965 align:middle
非常迅速地将动画转移到设备上

00:15:33.600 --> 00:15:38.272 align:middle
那么让我们再次看一看CEO的要求

00:15:39.806 --> 00:15:43.944 align:middle
它们很好很方便地对应了
朱利安在他那部分

00:15:44.011 --> 00:15:46.013 align:middle
演讲中所提出的三大原理

00:15:46.680 --> 00:15:50.083 align:middle
那么让我们先关注第一点从它开始

00:15:50.651 --> 00:15:52.586 align:middle
人们需要知道“收藏”按钮就在那里

00:15:54.021 --> 00:15:57.724 align:middle
让我们来看一个用动画将人们的

00:15:58.025 --> 00:16:01.628 align:middle
注意力巧妙地吸引到
app功能上的例子。

00:15:58.025 --> 00:16:01.628 align:middle
注意力巧妙地吸引到
app功能上的例子。

00:16:02.629 --> 00:16:06.700 align:middle
正如我们所看到的
这个工字光标正在缓慢地闪烁

00:16:07.100 --> 00:16:09.036 align:middle
将人们的注意力引到它那里告诉人们

00:16:09.102 --> 00:16:11.605 align:middle
当他们开始打字时文本会被输入到哪里

00:16:12.439 --> 00:16:15.409 align:middle
它非常微妙但实际上人们很容易

00:16:15.475 --> 00:16:17.110 align:middle
在所有文本中辨认出它

00:16:17.644 --> 00:16:20.981 align:middle
我们看到变化
对于眼睛来说非常有吸引力

00:16:22.516 --> 00:16:25.385 align:middle
那么让我们想一想一些其它动画方式

00:16:25.452 --> 00:16:28.155 align:middle
来将注意力吸引到

00:16:28.222 --> 00:16:29.223 align:middle
我们的“收藏”按钮上

00:16:31.425 --> 00:16:34.795 align:middle
你们知道我们的时间不多

00:16:34.862 --> 00:16:39.066 align:middle
而我所做的全部事情
便是截取“现代吐司”的

00:16:39.132 --> 00:16:41.869 align:middle
现有界面
并将它直接粘贴到Keynote

00:16:44.471 --> 00:16:45.806 align:middle
我们接下来要打开图案面板

00:16:46.206 --> 00:16:49.076 align:middle
抓取星星图标然后把它放在

00:16:49.142 --> 00:16:51.011 align:middle
我们列表里的每一列上

00:16:54.381 --> 00:16:55.215 align:middle
好 很棒

00:16:55.616 --> 00:16:57.818 align:middle
现在让我们放大近距离瞧一瞧

00:16:59.186 --> 00:17:01.588 align:middle
想想我们能如何随着时间来改变

00:16:59.186 --> 00:17:01.588 align:middle
想想我们能如何随着时间来改变

00:17:01.655 --> 00:17:03.423 align:middle
这个按钮的部分属性

00:17:05.157 --> 00:17:08.194 align:middle
我们可以改变透明度
来模拟先前在Notes

00:17:08.262 --> 00:17:09.596 align:middle
app上看到的温和闪烁

00:17:10.998 --> 00:17:11.832 align:middle
好 太美了

00:17:12.065 --> 00:17:12.900 align:middle
这相当微妙

00:17:13.567 --> 00:17:14.800 align:middle
来点更显眼的东西如何？

00:17:16.069 --> 00:17:20.174 align:middle
我们可以同时改变旋转颜色和大小

00:17:22.342 --> 00:17:23.577 align:middle
我们可以改变图案

00:17:24.944 --> 00:17:28.015 align:middle
它很快地从一个图案缩小
再放大成另一个图案

00:17:28.782 --> 00:17:33.854 align:middle
我们可以给它一些性格
在那里加点弹跳再加张小脸蛋

00:17:35.489 --> 00:17:37.691 align:middle
我们可以按特定时间间隔
来绘制动画图层

00:17:38.325 --> 00:17:40.160 align:middle
制造出某些模式

00:17:41.461 --> 00:17:47.401 align:middle
那么让我们缩小回去
在整个列表上试一试

00:17:47.534 --> 00:17:49.036 align:middle
看看它夺取注意力的能力怎么样

00:17:52.039 --> 00:17:54.975 align:middle
好 它绝对夺走了我们的注意力

00:17:55.676 --> 00:17:58.712 align:middle
但如果一直这样动下去

00:17:59.313 --> 00:18:01.949 align:middle
它就远远不止夺取注意力这么简单了

00:17:59.313 --> 00:18:01.949 align:middle
它就远远不止夺取注意力这么简单了

00:18:02.015 --> 00:18:03.584 align:middle
实际上它会相当分散注意力

00:18:04.785 --> 00:18:07.754 align:middle
继续这样动下去我们也
无法真正得到任何新东西

00:18:09.089 --> 00:18:11.558 align:middle
所以让我们看一看iOS上用动画来

00:18:11.825 --> 00:18:17.197 align:middle
吸引注意的几个例子
看一看其中的重大意义

00:18:18.665 --> 00:18:21.902 align:middle
当我们收到一封邮件时

00:18:22.769 --> 00:18:24.171 align:middle
便会立刻出现邮件通知

00:18:24.404 --> 00:18:27.641 align:middle
对吗 当我们离开app时
这个温和跳动着的链接

00:18:28.308 --> 00:18:30.811 align:middle
便会出现帮助我们重返app

00:18:32.346 --> 00:18:34.181 align:middle
而通知会转到一些

00:18:34.815 --> 00:18:36.683 align:middle
我们需要知道的十分重要的事情

00:18:38.051 --> 00:18:41.121 align:middle
所以这些动画的共同点在于

00:18:41.555 --> 00:18:44.691 align:middle
它们所出现的时刻是
对用户有重大意义的时刻

00:18:45.592 --> 00:18:47.461 align:middle
它们并非不断地夺取注意

00:18:48.662 --> 00:18:51.198 align:middle
我们希望人们在第一次
使用这个app时

00:18:51.331 --> 00:18:53.200 align:middle
便注意到“收藏”按钮

00:18:54.501 --> 00:18:57.771 align:middle
因此我们可以在人们
开始使用app时

00:18:58.038 --> 00:18:59.072 align:middle
用动画来介绍该功能

00:19:02.976 --> 00:19:05.012 align:middle
实际上我们可以采取多种不同方式

00:19:05.078 --> 00:19:07.347 align:middle
我们可以把按钮移动到这样的位置

00:19:08.582 --> 00:19:10.184 align:middle
这看起来很美好

00:19:10.450 --> 00:19:14.021 align:middle
但实际上它们在
大量时间内主宰了用户行为

00:19:14.087 --> 00:19:15.656 align:middle
如果我只是痴迷吐司

00:19:16.089 --> 00:19:18.992 align:middle
真的很想进入界面开始欣赏或收藏吐司

00:19:19.259 --> 00:19:20.827 align:middle
那么它们便占据了整块屏幕

00:19:21.528 --> 00:19:26.200 align:middle
因此我们希望动画能够
成为焦点 夺取注意力

00:19:26.500 --> 00:19:28.802 align:middle
但不能主宰人们的行为

00:19:29.069 --> 00:19:30.470 align:middle
所以我们只会这样

00:19:31.505 --> 00:19:32.506 align:middle
好了让我们再看一遍

00:19:33.607 --> 00:19:36.577 align:middle
好 我说过我们的时间不多

00:19:36.844 --> 00:19:38.078 align:middle
所以我们要继续了

00:19:39.012 --> 00:19:42.816 align:middle
邮件的第二部分是要求我们确保

00:19:42.883 --> 00:19:47.120 align:middle
人们在收藏完吐司之后
知道他们心爱的吐司在哪里

00:19:48.622 --> 00:19:51.225 align:middle
所以如果人们开始收藏吐司

00:19:51.792 --> 00:19:54.261 align:middle
那么随着列表中加入越来越多的新吐司

00:19:54.328 --> 00:19:56.864 align:middle
他们的收藏将最终被顶到列表的下方

00:19:57.331 --> 00:19:58.866 align:middle
用户很难在将来寻找到它们

00:19:59.933 --> 00:20:02.903 align:middle
我们需要一块地方仅仅用于存放

00:19:59.933 --> 00:20:02.903 align:middle
我们需要一块地方仅仅用于存放

00:20:03.003 --> 00:20:04.404 align:middle
我们所收藏的吐司

00:20:06.173 --> 00:20:08.542 align:middle
所以让我们在界面底部设置两个按钮

00:20:10.344 --> 00:20:12.613 align:middle
其中一个会向我们显示所有的吐司

00:20:13.213 --> 00:20:16.216 align:middle
而另一个按钮则只将
我们收藏的吐司呈现在

00:20:16.483 --> 00:20:17.317 align:middle
另一界面上

00:20:18.552 --> 00:20:22.289 align:middle
那么当我点击“收藏”按钮时
动画将从右边进入

00:20:25.125 --> 00:20:26.793 align:middle
再返回 好 太棒了

00:20:27.594 --> 00:20:29.096 align:middle
现在我们已经从头到尾

00:20:29.162 --> 00:20:31.632 align:middle
经历了为app设计
一个简单结构的流程

00:20:33.333 --> 00:20:35.068 align:middle
现在我们可能觉得我们做得足够了

00:20:35.402 --> 00:20:38.138 align:middle
但其实我们可以再进一步

00:20:39.506 --> 00:20:43.510 align:middle
在用户收藏一款吐司时
让我们用动画来暗示他们

00:20:43.877 --> 00:20:47.147 align:middle
那些收藏的吐司最后
跑到了app的哪里

00:20:48.482 --> 00:20:52.085 align:middle
所以我们需要一个模型
在app里移动吐司

00:20:53.887 --> 00:20:56.890 align:middle
首先让我们看一看在现实世界中

00:20:56.957 --> 00:20:59.793 align:middle
我们会如何移动吐司

00:21:02.796 --> 00:21:06.934 align:middle
那么如果我要将吐司
从一个盘子挪到另一盘子

00:21:07.734 --> 00:21:12.539 align:middle
它并不仅仅是消失后
再重现在另一个盘子上

00:21:14.241 --> 00:21:17.044 align:middle
或是完全消失在视野里

00:21:17.144 --> 00:21:19.012 align:middle
让我根本不知道它跑到哪里去了

00:21:20.681 --> 00:21:24.551 align:middle
相反地当我们移动吐司时
我们能够和它保持联系

00:21:24.852 --> 00:21:26.987 align:middle
追随着它在盘子之间的路径

00:21:28.956 --> 00:21:30.390 align:middle
即便我们看不到它

00:21:32.492 --> 00:21:36.496 align:middle
因此我们可以为app的
不同部分之间创造联系

00:21:37.598 --> 00:21:40.434 align:middle
方法是将吐司沿着这样的路径进行移动

00:21:41.101 --> 00:21:44.171 align:middle
我们可以用多种方式制作这个过渡动画

00:21:45.305 --> 00:21:48.108 align:middle
那么想象一下吐司被烤面包机吞没

00:21:48.408 --> 00:21:52.012 align:middle
再沿着路径吐出来
最终来到这个吐司列表

00:21:56.083 --> 00:21:58.051 align:middle
我想让我们再看一遍

00:21:59.520 --> 00:22:00.354 align:middle
开始。

00:21:59.520 --> 00:22:00.354 align:middle
开始。

00:22:02.756 --> 00:22:06.660 align:middle
或者我们可以让用户自行

00:22:06.727 --> 00:22:10.597 align:middle
定义轨道的形状
让他们追踪吐司至“收藏”区

00:22:12.833 --> 00:22:14.868 align:middle
我们知道收藏夹在右侧

00:22:16.203 --> 00:22:18.305 align:middle
所以吐司可以移动到右边

00:22:18.672 --> 00:22:20.841 align:middle
被囫囵吞掉再被射回去

00:22:23.610 --> 00:22:26.713 align:middle
所以当我们点击星星按钮时它会扩张

00:22:27.114 --> 00:22:31.685 align:middle
吞掉吐司把它拉到右边

00:22:33.153 --> 00:22:34.922 align:middle
或者挪开整个面板

00:22:35.722 --> 00:22:37.624 align:middle
然后当我们不再喜欢那款吐司时

00:22:37.958 --> 00:22:38.892 align:middle
可以把它挪回去

00:22:40.260 --> 00:22:43.197 align:middle
我们已经制作了许多可供选择的方法

00:22:43.463 --> 00:22:45.666 align:middle
这就是我们所做的事情

00:22:45.732 --> 00:22:47.501 align:middle
为我们自己制作样品创造多种方法

00:22:49.469 --> 00:22:52.139 align:middle
那么我们制作了一则动画
将用户的注意力吸引到

00:22:52.306 --> 00:22:56.443 align:middle
我们的新功能上
并且打造了一则动画向用户

00:22:56.543 --> 00:22:57.945 align:middle
暗示我们的app结构

00:22:59.079 --> 00:23:03.116 align:middle
然而CEO希望人们在第一次触碰时

00:22:59.079 --> 00:23:03.116 align:middle
然而CEO希望人们在第一次触碰时

00:23:03.317 --> 00:23:06.086 align:middle
便能够使用这个按钮为了实现这点

00:23:06.520 --> 00:23:09.723 align:middle
我们要想一想动画如何对触碰产生反应

00:23:11.692 --> 00:23:15.095 align:middle
但在此之前我们可以先看一看

00:23:15.162 --> 00:23:18.899 align:middle
动画如何能在你触碰按钮之前

00:23:19.600 --> 00:23:21.168 align:middle
便暗示你如何同一片吐司进行互动

00:23:22.803 --> 00:23:24.204 align:middle
那么在这块锁屏上

00:23:24.571 --> 00:23:26.473 align:middle
我们可以在“滑动解锁”上

00:23:26.540 --> 00:23:28.742 align:middle
看到动态亮光在文字上面移动

00:23:29.843 --> 00:23:31.445 align:middle
这一运动是有含义的

00:23:32.079 --> 00:23:34.081 align:middle
它的移动方向正是你应该滑动的方向

00:23:34.982 --> 00:23:39.286 align:middle
这是一条精妙的线索
鼓励用户以特定方式在上面进行操作

00:23:40.554 --> 00:23:42.723 align:middle
它简练地预示了这场交互

00:23:45.359 --> 00:23:48.629 align:middle
让我们看看我们能不能
制作一则动画暗示用户

00:23:48.695 --> 00:23:50.130 align:middle
他们应该点击这个按钮

00:23:51.298 --> 00:23:52.566 align:middle
所以我们会再次放大

00:23:55.736 --> 00:23:59.406 align:middle
我们可以将按钮挪下来暗示它被按压

00:24:00.674 --> 00:24:04.778 align:middle
或者我们可以制作虚构手指
点击按钮的阴影动画

00:24:06.013 --> 00:24:09.983 align:middle
又或者我们可以使用亮光
来表示深度和移动

00:24:10.551 --> 00:24:13.787 align:middle
让我们赶紧采取这个想法
在整个列表上试一试

00:24:15.822 --> 00:24:19.693 align:middle
所以它其实相当微妙
那么我们可以添加一些颜色

00:24:20.027 --> 00:24:23.030 align:middle
来暗示用户点击按钮时将看到的转变

00:24:24.431 --> 00:24:28.735 align:middle
所以在iOS里你能够以多种不同方式

00:24:28.802 --> 00:24:34.341 align:middle
和按钮及功能进行真正的交互
而交互越是复杂和精细

00:24:34.675 --> 00:24:36.410 align:middle
所需的预示便越多

00:24:36.677 --> 00:24:39.980 align:middle
但我们现在所演示的点击其实非常简单

00:24:40.280 --> 00:24:43.150 align:middle
在这种情况下按钮的呈现

00:24:43.217 --> 00:24:46.119 align:middle
很可能便足以暗示用户可以点击它了

00:24:46.386 --> 00:24:47.788 align:middle
只要将它呈现在app里就好

00:24:48.555 --> 00:24:50.023 align:middle
最简单的方式是最棒的

00:24:50.224 --> 00:24:54.127 align:middle
让我们将首次触碰
屏幕时的动画保存下来

00:24:55.596 --> 00:24:58.031 align:middle
那么在你第一次点击app时
我们希望得到一些反馈

00:24:59.099 --> 00:25:02.436 align:middle
当你触碰屏幕时让我们先把星星放大

00:24:59.099 --> 00:25:02.436 align:middle
当你触碰屏幕时让我们先把星星放大

00:25:03.036 --> 00:25:05.939 align:middle
而在你抬起手指的瞬间让我们想象一下

00:25:06.006 --> 00:25:08.909 align:middle
它在反弹回去之前运行了一小段路

00:25:10.010 --> 00:25:10.844 align:middle
好 太棒了

00:25:11.245 --> 00:25:14.515 align:middle
但我们需要做的是获取这种交互的感觉

00:25:14.715 --> 00:25:17.050 align:middle
为了实现这点我们可以
进入QuickTime

00:25:17.618 --> 00:25:20.754 align:middle
为我们刚刚制作的动画进行抓帧

00:25:21.355 --> 00:25:24.725 align:middle
接下来我所能做的是打开那一段影片

00:25:25.592 --> 00:25:30.631 align:middle
在假装触碰按钮时通过搓擦时间
轴来获取交互的基本感觉

00:25:32.299 --> 00:25:36.503 align:middle
当它放大时我开始
感觉它有点像在靠近我

00:25:37.070 --> 00:25:39.273 align:middle
所以这让我觉得我能够
真的将它拖来拖去

00:25:39.339 --> 00:25:40.340 align:middle
为什么呢？

00:25:42.576 --> 00:25:45.712 align:middle
它有点让我想起这个
邮件app里的某些东西

00:25:47.014 --> 00:25:50.651 align:middle
当我按压住一个名字时
它好像从页面上被提了起来

00:25:51.018 --> 00:25:53.554 align:middle
这就给了我一种可以
真正开始拖着它到处跑的感觉

00:25:55.422 --> 00:25:57.558 align:middle
这其实并非我们在此寻求的东西

00:25:58.859 --> 00:26:00.527 align:middle
所以在我们按住“收藏”按钮时

00:25:58.859 --> 00:26:00.527 align:middle
所以在我们按住“收藏”按钮时

00:26:00.694 --> 00:26:03.797 align:middle
让我们把它变得稍小一点
好像它正在远离你似的

00:26:05.032 --> 00:26:06.300 align:middle
我们还可以把它变暗一点

00:26:08.869 --> 00:26:11.438 align:middle
好 在我们抬起手指之后
它仍旧可以弹起来

00:26:13.574 --> 00:26:15.342 align:middle
那么让我们把这点和之前制作的动画

00:26:15.409 --> 00:26:17.444 align:middle
整合到一起看看效果如何

00:26:18.612 --> 00:26:23.750 align:middle
现在 我们差不多准备好
要开始收藏吐司了

00:26:24.885 --> 00:26:25.786 align:middle
让我们看一看这个

00:26:27.187 --> 00:26:32.259 align:middle
太棒了 我们解决了
CEO列表上的三大条目

00:26:32.726 --> 00:26:38.031 align:middle
但在发回给他之前我们需要
在设备上试一试这些动画的感觉

00:26:39.132 --> 00:26:41.401 align:middle
所以让我们最后
一次进入Keynote

00:26:44.238 --> 00:26:47.241 align:middle
我们将动画设置在这个方向

00:26:47.541 --> 00:26:48.775 align:middle
设备的方向

00:26:49.443 --> 00:26:51.979 align:middle
我们将动画设定为这种格式

00:26:53.247 --> 00:26:56.316 align:middle
然后上传到手机上打开Keynote

00:26:56.416 --> 00:26:59.853 align:middle
打开文件然后就可以
通过互动来点击了

00:27:02.022 --> 00:27:05.792 align:middle
那么接下来我要提取我们刚才制作的

00:27:06.393 --> 00:27:09.162 align:middle
动画和一些资源

00:27:09.963 --> 00:27:12.065 align:middle
还有CEO的那封紧急邮件

00:27:12.699 --> 00:27:14.668 align:middle
一起发给我的同事马雷克

00:27:15.002 --> 00:27:18.972 align:middle
他将开始整合一些代码对一切进行升级

00:27:19.573 --> 00:27:20.407 align:middle
马雷克

00:27:24.845 --> 00:27:25.679 align:middle
非常感谢 乔

00:27:27.381 --> 00:27:30.717 align:middle
嗨 我叫马雷克 在绝大部分时间里

00:27:30.784 --> 00:27:33.687 align:middle
我都在为交互样品添加一点代码工作

00:27:34.054 --> 00:27:37.224 align:middle
但代码量远比你所想象得少

00:27:39.826 --> 00:27:42.462 align:middle
那么乔刚刚给我发送了
这个Keynote文件

00:27:42.996 --> 00:27:46.266 align:middle
他竟然不费一行代码
便成功进展到了这一步

00:27:46.366 --> 00:27:48.402 align:middle
这着实令人吃惊

00:27:49.236 --> 00:27:53.373 align:middle
但你们知道的“现代吐司”的
CEO还等着要成果呢

00:27:53.507 --> 00:27:56.710 align:middle
所以我们真的需要继续了
我们要进行一点编程

00:27:57.110 --> 00:27:58.679 align:middle
制作出一个交互样品

00:28:00.314 --> 00:28:02.950 align:middle
那么制作样品的主要原因

00:28:03.383 --> 00:28:07.020 align:middle
是为了在设备上亲手

00:28:07.521 --> 00:28:10.757 align:middle
感受这些交互动画

00:28:11.592 --> 00:28:14.194 align:middle
只有那时我们才能问自己这些问题：

00:28:15.395 --> 00:28:16.230 align:middle
它有效吗？

00:28:17.531 --> 00:28:20.033 align:middle
动画的无效之处在哪里？

00:28:20.534 --> 00:28:23.170 align:middle
假如它无效的话
那么原因又是什么呢？

00:28:24.771 --> 00:28:30.077 align:middle
因此制造交互样品的
第二个原因便是为了

00:28:30.344 --> 00:28:31.678 align:middle
让他人进行试验

00:28:32.546 --> 00:28:34.581 align:middle
这点的重要性也许甚至超过了第一点

00:28:35.282 --> 00:28:38.452 align:middle
你或许能够很好地评价自己的动画

00:28:39.219 --> 00:28:43.857 align:middle
但最终外人的观点是无可替代的

00:28:44.892 --> 00:28:48.295 align:middle
你自己在这款app上
投放了大量情绪投资

00:28:48.362 --> 00:28:50.330 align:middle
你花费大量时间钻研它

00:28:51.098 --> 00:28:54.501 align:middle
因此你真的需要找到
一个没有投入其中的人

00:28:54.735 --> 00:28:57.404 align:middle
一个不知道这些动画的背后含义的人

00:28:57.838 --> 00:28:58.906 align:middle
看看他们是否能够明白

00:29:00.007 --> 00:29:02.309 align:middle
我想快速回顾一下

00:29:02.376 --> 00:29:06.180 align:middle
朱利安之前展示的这张图表
这个制造东西的循环

00:29:06.613 --> 00:29:09.983 align:middle
展示给他人然后听取他们的反馈

00:29:10.250 --> 00:29:12.586 align:middle
我们应该将学到的东西

00:29:12.653 --> 00:29:15.222 align:middle
放回到这个制作流程中这非常重要

00:29:15.756 --> 00:29:18.325 align:middle
这样一来你才能保持循环
直到做出正确的成果

00:29:20.594 --> 00:29:24.998 align:middle
第三个原因便是为了
非常容易地进行改变

00:29:25.699 --> 00:29:29.136 align:middle
如果你尝试用生产式代码做这类事情

00:29:29.536 --> 00:29:31.638 align:middle
那么最终结果将是编写大量代码

00:29:32.339 --> 00:29:34.041 align:middle
然后当你想做一点小小的改变时

00:29:34.308 --> 00:29:37.344 align:middle
你又必须删除很多代码
然后再写更多代码

00:29:37.945 --> 00:29:41.515 align:middle
所以假如你制造了这些小小的交互样品

00:29:41.915 --> 00:29:45.352 align:middle
那么你最终将为自己
节约大量时间和金钱

00:29:46.620 --> 00:29:49.523 align:middle
那么这些交互样品是什么呢？

00:29:50.324 --> 00:29:52.759 align:middle
从本质上看我们将要制造一款app

00:29:54.328 --> 00:29:57.030 align:middle
但我们会尽可能地简洁

00:29:57.297 --> 00:30:00.267 align:middle
制造出一款完整app的类似产品

00:29:57.297 --> 00:30:00.267 align:middle
制造出一款完整app的类似产品

00:30:00.968 --> 00:30:02.503 align:middle
用来测试我们的动画

00:30:03.637 --> 00:30:05.906 align:middle
我能想到的最简单的实现方式

00:30:06.406 --> 00:30:09.076 align:middle
便是不要采用导航控制器

00:30:09.142 --> 00:30:11.011 align:middle
和所有用户界面控制

00:30:11.278 --> 00:30:12.513 align:middle
而仅仅使用图像

00:30:13.280 --> 00:30:17.618 align:middle
那么我从乔的Keynote
上截取了一些屏幕界面

00:30:18.018 --> 00:30:20.621 align:middle
这是app的一张主屏图片而我们要在

00:30:21.288 --> 00:30:23.457 align:middle
那一栏删除交互动画

00:30:24.291 --> 00:30:27.828 align:middle
我们要在这张图片的
这一栏制作交互动画

00:30:28.428 --> 00:30:31.265 align:middle
然后是收藏夹视图的同一栏

00:30:32.266 --> 00:30:34.501 align:middle
这就是我们代码的样子

00:30:34.835 --> 00:30:35.669 align:middle
它很粗略

00:30:36.436 --> 00:30:38.172 align:middle
我们有三行代码

00:30:38.338 --> 00:30:40.274 align:middle
用于加载我们刚才看到的三张图片

00:30:41.408 --> 00:30:44.711 align:middle
这块代码将那些图片作为子视图添加到

00:30:44.778 --> 00:30:47.714 align:middle
我们的主视图中并将它们置于特定位置

00:30:48.248 --> 00:30:50.817 align:middle
然后这块代码会留意触摸事件

00:30:51.218 --> 00:30:52.319 align:middle
在触摸事件发生时

00:30:52.786 --> 00:30:56.190 align:middle
它会将收藏栏往右边推

00:30:56.723 --> 00:31:00.394 align:middle
然后从后方呈现出收藏夹视图的那一栏

00:30:56.723 --> 00:31:00.394 align:middle
然后从后方呈现出收藏夹视图的那一栏

00:31:01.695 --> 00:31:04.298 align:middle
所以手机上的运行看起来就像这样

00:31:04.464 --> 00:31:08.468 align:middle
我们有运行样品
15行代码 3幅图片

00:31:08.836 --> 00:31:09.670 align:middle
再简单不过了

00:31:10.604 --> 00:31:14.241 align:middle
我们可以立刻进行测试而我们一测试

00:31:14.308 --> 00:31:15.576 align:middle
就发现了不对的地方

00:31:17.144 --> 00:31:20.981 align:middle
那就是当我们刚开始用手指触碰时
什么事也没发生

00:31:21.315 --> 00:31:22.916 align:middle
乔提到过这点

00:31:23.750 --> 00:31:26.553 align:middle
当你用手指触摸
iOS上的绝大多数按钮时

00:31:26.720 --> 00:31:29.423 align:middle
它们会对你作出反应这一点非常重要

00:31:29.489 --> 00:31:34.595 align:middle
因为这是在告诉你这并不只是屏幕上的
一个静态部分而是一个互动部分

00:31:35.162 --> 00:31:38.498 align:middle
为了更深入地挖掘这个问题

00:31:39.266 --> 00:31:44.071 align:middle
分解交互是一个很好的方式

00:31:45.239 --> 00:31:50.611 align:middle
绝大多数交互可以被分解为多个阶段

00:31:51.044 --> 00:31:52.379 align:middle
即开始

00:31:55.015 --> 00:31:55.849 align:middle
转变

00:31:57.951 --> 00:31:58.785 align:middle
完成

00:32:00.320 --> 00:32:04.725 align:middle
而每一个阶段都是一个机会

00:32:05.025 --> 00:32:09.463 align:middle
能够帮助你引导用户一路完成这项互动

00:32:10.731 --> 00:32:12.332 align:middle
现在我们从触碰角度思考这一点

00:32:13.567 --> 00:32:17.671 align:middle
我们有开始阶段可能就是我们的触碰

00:32:18.372 --> 00:32:22.342 align:middle
我们也有转变那就是
沿着屏幕移动你的手指

00:32:22.910 --> 00:32:25.546 align:middle
然后是完成即你抬起手指离开屏幕之时

00:32:26.780 --> 00:32:29.850 align:middle
而在编程中我们视之为触碰的开始

00:32:30.117 --> 00:32:32.152 align:middle
触碰的移动 触碰的结束

00:32:34.121 --> 00:32:35.522 align:middle
现在让我们回到“收藏”按钮

00:32:36.023 --> 00:32:39.793 align:middle
那么随着手指触碰屏幕
我们需要对用户作出反应

00:32:40.294 --> 00:32:42.062 align:middle
或许我们可以仅仅让星星扩大起来

00:32:42.129 --> 00:32:46.166 align:middle
或是像乔所说的让它
做一点更有智慧的事情

00:32:47.501 --> 00:32:49.636 align:middle
现在将你的手指置于按钮上进行移动

00:32:50.070 --> 00:32:52.706 align:middle
当用户的手指离开按钮时

00:32:53.073 --> 00:32:54.975 align:middle
我们或许可以允许它们撤回...

00:32:55.242 --> 00:32:59.046 align:middle
我的意思是收回那个动作
原本打算做的事情

00:32:59.112 --> 00:33:03.016 align:middle
那么对于动画来说
我们或许可以仅仅将动画

00:32:59.112 --> 00:33:03.016 align:middle
那么对于动画来说
我们或许可以仅仅将动画

00:33:03.350 --> 00:33:06.620 align:middle
倒回起点向用户确保
接下来什么事也不会发生

00:33:07.788 --> 00:33:09.890 align:middle
最后是完成阶段

00:33:10.290 --> 00:33:11.692 align:middle
如果他们希望完成这个动作

00:33:13.393 --> 00:33:16.263 align:middle
我们则需要确保对用户
做出反应确保他们知道

00:33:16.330 --> 00:33:17.564 align:middle
他们收藏了那款吐司

00:33:19.333 --> 00:33:22.736 align:middle
在这里我并不会浏览每一行代码

00:33:22.903 --> 00:33:24.404 align:middle
因为它有点长

00:33:24.838 --> 00:33:27.074 align:middle
还有点乱

00:33:27.574 --> 00:33:29.510 align:middle
而且我认为这正是我希望

00:33:29.877 --> 00:33:32.746 align:middle
解释清楚的关键点
即这并不是一项工程练习

00:33:33.680 --> 00:33:36.183 align:middle
我们真的只是希望你们能够自行处理

00:33:36.450 --> 00:33:37.684 align:middle
我给你们我的所有权限

00:33:39.286 --> 00:33:42.756 align:middle
第二能使用图片的时候尽量使用图片

00:33:42.890 --> 00:33:47.160 align:middle
你会诧异于这种仿制
能够为你免除多少工作量

00:33:48.195 --> 00:33:50.697 align:middle
然后是第三点有一个
动画功能套件非常棒

00:33:50.864 --> 00:33:53.100 align:middle
你们很可能已经知道了

00:33:53.433 --> 00:33:57.070 align:middle
那就是用户界面视图课程的
Animation with Duration

00:33:57.571 --> 00:33:59.206 align:middle
那么这是我们的样品

00:33:59.640 --> 00:34:01.909 align:middle
这是一件可以让别人来测试的东西

00:33:59.640 --> 00:34:01.909 align:middle
这是一件可以让别人来测试的东西

00:34:02.709 --> 00:34:04.344 align:middle
让我们在别人身上试一试吧

00:34:05.179 --> 00:34:08.215 align:middle
所以我把它带到了我的隔壁邻居那里

00:34:08.815 --> 00:34:12.052 align:middle
巧的是他是一个超级吐司迷

00:34:12.351 --> 00:34:13.920 align:middle
因此他对测验感到非常兴奋

00:34:14.388 --> 00:34:16.223 align:middle
他带回了一些简洁但

00:34:17.591 --> 00:34:20.127 align:middle
十分具有启迪性的反馈

00:34:20.860 --> 00:34:24.464 align:middle
那就是我真心喜欢它的感觉但毫无疑问

00:34:24.731 --> 00:34:25.766 align:middle
它难道不该是滑动吗？

00:34:26.867 --> 00:34:28.467 align:middle
现在他提到了一个重点

00:34:28.702 --> 00:34:30.571 align:middle
甚至连动画都是向右移动

00:34:30.637 --> 00:34:32.105 align:middle
它看起来就像滑动

00:34:32.773 --> 00:34:34.074 align:middle
这个例子很好地展现了

00:34:34.141 --> 00:34:37.444 align:middle
外人的意见能为我们带来

00:34:37.511 --> 00:34:40.848 align:middle
多么深刻的见解
这些见解在事后看来很明显

00:34:40.914 --> 00:34:45.985 align:middle
但我们之前就是没有想到
因为我们过于沉浸在项目过程中了

00:34:46.987 --> 00:34:51.058 align:middle
那么他或许是在暗指
邮件里的这则美妙动画

00:34:51.358 --> 00:34:53.760 align:middle
即你可以通过滑动将邮件标为未读

00:34:55.295 --> 00:34:56.996 align:middle
所以让我们试一下滑动手势

00:34:57.598 --> 00:35:01.735 align:middle
让我们从开始 转变 完成
的角度进行思考

00:34:57.598 --> 00:35:01.735 align:middle
让我们从开始 转变 完成
的角度进行思考

00:35:03.570 --> 00:35:05.739 align:middle
在开始阶段手指向下触碰屏幕

00:35:06.373 --> 00:35:07.875 align:middle
在手指触碰屏幕的时候

00:35:07.941 --> 00:35:10.110 align:middle
我们需要确定用户想要滑动

00:35:10.544 --> 00:35:12.946 align:middle
还是滚动或仅仅是想点击

00:35:13.647 --> 00:35:15.716 align:middle
而我们的实现方式非常简单

00:35:15.782 --> 00:35:18.418 align:middle
我们只看手指的初始运动

00:35:18.886 --> 00:35:22.222 align:middle
如果它进行了足够远的水平移动

00:35:22.356 --> 00:35:24.324 align:middle
而垂直方向移动不多

00:35:24.758 --> 00:35:25.792 align:middle
我们就知道这是滑动

00:35:26.126 --> 00:35:28.762 align:middle
所以从本质上看我们设置了某种临界值

00:35:29.596 --> 00:35:31.565 align:middle
只有当用户超过了那个临界值

00:35:31.665 --> 00:35:34.701 align:middle
我们才会开始进行这一相连行为

00:35:36.136 --> 00:35:38.105 align:middle
那么现在我们处于转变状态

00:35:38.305 --> 00:35:40.040 align:middle
用户可以移动这一栏

00:35:40.741 --> 00:35:44.411 align:middle
或许我们可以给他们一点提示信息

00:35:44.545 --> 00:35:46.079 align:middle
告诉他们继续滑动下去

00:35:46.346 --> 00:35:47.748 align:middle
他们就会收藏这一栏

00:35:49.883 --> 00:35:52.386 align:middle
那么希望他们能够从直观上明白

00:35:52.452 --> 00:35:53.987 align:middle
他们可以退出这一阶段

00:35:54.054 --> 00:35:56.690 align:middle
只要放手或往回移动即可

00:35:57.324 --> 00:36:00.561 align:middle
那么这就是它在手机上的样子

00:35:57.324 --> 00:36:00.561 align:middle
那么这就是它在手机上的样子

00:36:01.728 --> 00:36:02.930 align:middle
最后是完成阶段

00:36:03.530 --> 00:36:07.267 align:middle
如果用户继续滑动的话
再说一次我们需要确保

00:36:07.334 --> 00:36:09.036 align:middle
他们知道自己收藏了这一栏

00:36:11.004 --> 00:36:12.639 align:middle
那么我们有了样品

00:36:13.240 --> 00:36:14.708 align:middle
我在隔壁邻居身上进行了测试

00:36:14.842 --> 00:36:16.877 align:middle
他似乎非常喜欢它或许一定程度上

00:36:16.944 --> 00:36:19.046 align:middle
是由于这最初是他的主意

00:36:20.080 --> 00:36:22.950 align:middle
我们准备好发给CEO了

00:36:23.483 --> 00:36:24.318 align:middle
看看他有什么想法

00:36:25.953 --> 00:36:27.888 align:middle
他通常会很快回复我们

00:36:30.257 --> 00:36:31.124 align:middle
哦 他来了

00:36:32.993 --> 00:36:33.827 align:middle
嗨 马雷克

00:36:34.027 --> 00:36:36.830 align:middle
三十秒钟之前我决定改变我的生活进行

00:36:36.897 --> 00:36:39.900 align:middle
无谷蛋白的原始人饮食

00:36:40.501 --> 00:36:41.869 align:middle
我已经感觉好点了

00:36:42.102 --> 00:36:45.606 align:middle
今后我将采取可饮用的代餐

00:36:46.473 --> 00:36:49.142 align:middle
我现在甚至不需要离开
站立式办公桌便能进食

00:36:49.810 --> 00:36:52.813 align:middle
我需要在45分钟内得到样品

00:36:53.380 --> 00:36:54.214 align:middle
祝你周末愉快

00:36:54.748 --> 00:36:56.149 align:middle
当然了我会有个愉快周末的

00:36:57.251 --> 00:36:59.620 align:middle
不管怎样那就是交互样品

00:37:00.120 --> 00:37:03.557 align:middle
希望你们现在能明白
在制作完整app之前

00:37:03.624 --> 00:37:06.527 align:middle
先进行动画测试是非常容易的

00:37:06.760 --> 00:37:09.530 align:middle
这样一来你之后才不会遭殃

00:37:10.497 --> 00:37:13.700 align:middle
接下来我要把你们交还给朱利安
为研讨会做一个快速的回顾剖析

00:37:17.671 --> 00:37:18.505 align:middle
谢谢你 马雷克

00:37:19.273 --> 00:37:20.107 align:middle
谢谢马雷克

00:37:22.809 --> 00:37:25.045 align:middle
那么我们今天学到了哪些动画知识呢？

00:37:26.847 --> 00:37:29.983 align:middle
我们得知可以将动画视为一种时间转变

00:37:31.251 --> 00:37:35.622 align:middle
如果我们在制作动画时
陷入困难的话那么我们仍旧

00:37:35.689 --> 00:37:39.860 align:middle
需要回过头去设计屏幕界面
弄清楚每一个界面上应该安置哪些东西

00:37:41.528 --> 00:37:44.264 align:middle
你可以通过两种不同的方式来思考

00:37:44.464 --> 00:37:46.266 align:middle
时间转变的方式

00:37:46.600 --> 00:37:48.869 align:middle
它既实用能够向人们传达

00:37:48.936 --> 00:37:51.438 align:middle
app的所有不同部分之间
是如何整合在一起的

00:37:52.105 --> 00:37:53.040 align:middle
它又巧妙

00:37:53.473 --> 00:37:57.177 align:middle
能够告诉你app的特征以及它的感觉

00:38:00.247 --> 00:38:04.451 align:middle
我们之所以希望制作动画原因有三

00:38:04.518 --> 00:38:06.320 align:middle
我们可以用动画来引导人们的注意力

00:38:07.487 --> 00:38:09.723 align:middle
我们可以用动画来帮助人们保持定位

00:38:11.358 --> 00:38:13.961 align:middle
我们还可以用动画来将人们的行为

00:38:14.027 --> 00:38:15.863 align:middle
和屏幕上发生的事情连接起来

00:38:19.099 --> 00:38:22.903 align:middle
我们简短地提及了这个曾多次描述过的

00:38:23.170 --> 00:38:26.173 align:middle
样品制作流程我们希望制作多种样品

00:38:26.273 --> 00:38:29.009 align:middle
好向人们展示多种东西

00:38:29.309 --> 00:38:30.911 align:middle
从而能够认识到许多东西

00:38:31.678 --> 00:38:32.613 align:middle
我们做得越多

00:38:32.679 --> 00:38:35.549 align:middle
便越能在投入时间和金钱
来制作真正的app之前

00:38:35.749 --> 00:38:37.150 align:middle
了解到更多东西

00:38:39.253 --> 00:38:42.289 align:middle
如果你希望了解更多
样品制作流程的信息

00:38:43.190 --> 00:38:47.895 align:middle
那么去年的WWDC上
有一个研讨会具体介绍了样品制作

00:38:48.795 --> 00:38:50.898 align:middle
另外昨天有一个研讨会
名为“未来硬件”

00:38:50.964 --> 00:38:53.800 align:middle
它把这个样品制作流程应用于

00:38:54.168 --> 00:38:55.936 align:middle
和设备相连的app上

00:38:56.436 --> 00:38:58.639 align:middle
你们应该能在网上
观看这两个研讨会的视频

00:38:59.706 --> 00:39:02.576 align:middle
当然你们还应该
查看所有其它的设计研讨会

00:38:59.706 --> 00:39:02.576 align:middle
当然你们还应该
查看所有其它的设计研讨会

00:39:02.943 --> 00:39:06.146 align:middle
以获取更多有关
如何设计所有这些界面的信息

00:39:09.683 --> 00:39:13.754 align:middle
但最终我们希望给你们留下一个想法

00:39:15.355 --> 00:39:20.894 align:middle
我们希望你们动起手来
运用动画为你们的app

00:39:21.161 --> 00:39:22.329 align:middle
和游戏增添特性

00:39:27.534 --> 00:39:29.036 align:middle
但在这个过程中请深思熟虑

00:39:30.838 --> 00:39:31.905 align:middle
其中的全部要点在于

00:39:31.972 --> 00:39:36.610 align:middle
如果不进行测试我们便无法理解动画

00:39:37.077 --> 00:39:39.580 align:middle
传达出了什么或者它的感觉如何

00:39:40.314 --> 00:39:43.383 align:middle
因此请找寻方法来测试动画
无论那些方法是什么

00:39:43.917 --> 00:39:44.751 align:middle
谢谢大家
