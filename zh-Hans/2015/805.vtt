WEBVTT

00:00:23.857 --> 00:00:27.294 align:middle
《Apple Watch
设计的技巧和陷阱》

00:00:31.298 --> 00:00:32.165 align:middle
大家好

00:00:35.602 --> 00:00:36.703 align:middle
我是迈克·斯特恩

00:00:36.770 --> 00:00:38.839 align:middle
我是Apple用户体验主讲师

00:00:38.906 --> 00:00:40.707 align:middle
今天很高兴和大家在一起

00:00:41.441 --> 00:00:44.511 align:middle
今天的讲座主题是
面向Apple Watch的设计

00:00:44.578 --> 00:00:46.780 align:middle
具体来说
我们将会讨论

00:00:46.847 --> 00:00:48.482 align:middle
一些设计技巧和陷阱

00:00:49.249 --> 00:00:51.251 align:middle
星期三我举行了另外一场

00:00:51.485 --> 00:00:53.187 align:middle
相同主题的讲座

00:00:53.654 --> 00:00:56.089 align:middle
但是内容有点不一样

00:00:56.490 --> 00:00:58.525 align:middle
如果你们没有参加那个讲座

00:00:59.159 --> 00:01:00.027 align:middle
也没有关系

00:00:59.159 --> 00:01:00.027 align:middle
也没有关系

00:01:00.294 --> 00:01:01.328 align:middle
我不会感到难受

00:01:01.929 --> 00:01:04.831 align:middle
但是我希望你们能够
比较容易地理解我所讲的内容

00:01:05.364 --> 00:01:07.901 align:middle
上次的讲座讨论
三个重要的主题

00:01:07.968 --> 00:01:09.403 align:middle
我将简要进行回顾

00:01:10.070 --> 00:01:12.372 align:middle
这三个主题分别是
个性化交流

00:01:12.840 --> 00:01:13.907 align:middle
整体设计

00:01:13.974 --> 00:01:15.709 align:middle
和轻量级交互

00:01:16.677 --> 00:01:19.913 align:middle
个性化交流主要讨论

00:01:20.113 --> 00:01:23.116 align:middle
高效和低效的个人间交流

00:01:23.517 --> 00:01:24.818 align:middle
并且参考它们

00:01:24.885 --> 00:01:27.721 align:middle
来设计我们的Apple Watch
APP信息交流模型

00:01:29.223 --> 00:01:32.459 align:middle
现在新技术让Apple Watch

00:01:32.526 --> 00:01:34.695 align:middle
上的交互操作变得
更加人性化和个性化

00:01:35.162 --> 00:01:36.830 align:middle
因此很重要的一点是

00:01:36.897 --> 00:01:38.732 align:middle
你的Apple Watch
APP设计

00:01:39.032 --> 00:01:42.736 align:middle
应该充分利用这些技术
让用户体验得人性化和个性化

00:01:44.338 --> 00:01:46.707 align:middle
整体设计是指模糊

00:01:46.773 --> 00:01:48.275 align:middle
软件和硬件之间的界线

00:01:48.709 --> 00:01:52.045 align:middle
这可以通过APP界面的
外观设计来实现

00:01:52.112 --> 00:01:54.181 align:middle
你将可以APP界面

00:01:54.248 --> 00:01:55.949 align:middle
与Apple Watch表盘
无缝融合

00:01:56.850 --> 00:01:59.253 align:middle
我们需要使用
Force Touch显示屏的功能

00:01:59.319 --> 00:02:01.688 align:middle
并且正确使用这些功能

00:01:59.319 --> 00:02:01.688 align:middle
并且正确使用这些功能

00:02:03.123 --> 00:02:04.958 align:middle
对于Digital Crown
也是同样如此

00:02:06.593 --> 00:02:08.495 align:middle
现在...要特别说一下

00:02:08.628 --> 00:02:10.597 align:middle
Taptic Engine
触觉反馈技术

00:02:11.532 --> 00:02:14.034 align:middle
你可以使用这些技术
提供更加拟真

00:02:14.101 --> 00:02:16.703 align:middle
完善和细致入微的

00:02:17.104 --> 00:02:18.772 align:middle
APP使用体验

00:02:20.140 --> 00:02:21.441 align:middle
交量级交互是指

00:02:21.875 --> 00:02:23.911 align:middle
设计可以快速查看

00:02:23.977 --> 00:02:25.546 align:middle
和处理的交互操作

00:02:26.180 --> 00:02:27.581 align:middle
我们应该利用

00:02:27.648 --> 00:02:30.417 align:middle
Watch位于用户手腕上
这一独特优势

00:02:32.085 --> 00:02:35.455 align:middle
这三个主题是一些基本的
技术和知识

00:02:35.522 --> 00:02:37.758 align:middle
可以帮助你为
Apple Watch

00:02:38.025 --> 00:02:40.727 align:middle
设计出色的APP
通知和Glance

00:02:41.395 --> 00:02:43.363 align:middle
今天我们所讨论的内容

00:02:43.530 --> 00:02:47.301 align:middle
在某些方面与
这三个主题相关

00:02:48.068 --> 00:02:50.137 align:middle
但是本讲座还是有所不同

00:02:51.371 --> 00:02:53.507 align:middle
在今天的讲座中

00:02:53.574 --> 00:02:55.676 align:middle
我们不会重复以前的话题

00:02:56.076 --> 00:02:59.046 align:middle
我们将会讨论一些非常具体的事情

00:02:59.346 --> 00:03:00.380 align:middle
比如设计要素 控件等

00:02:59.346 --> 00:03:00.380 align:middle
比如设计要素 控件等

00:03:00.447 --> 00:03:01.415 align:middle
帮助你设计具有

00:03:01.782 --> 00:03:04.818 align:middle
吸引力的Apple Watch
APP通知和Glance等

00:03:05.853 --> 00:03:06.954 align:middle
我们还会介绍

00:03:07.020 --> 00:03:09.857 align:middle
许多开发人员在设计Apple
Watch APP时

00:03:10.290 --> 00:03:13.560 align:middle
经常会遇到的10个陷阱

00:03:14.461 --> 00:03:18.932 align:middle
Apple Watch是一个全新的
Apple产品

00:03:19.333 --> 00:03:21.268 align:middle
即使像我这样的人

00:03:21.335 --> 00:03:23.470 align:middle
以前也没有为可穿戴式设备
设计过APP

00:03:23.770 --> 00:03:26.273 align:middle
因此有一些内容可能不容易理解
或者会让人感到陌生

00:03:26.807 --> 00:03:28.876 align:middle
我们会看到
一些普遍性的错误做法

00:03:29.409 --> 00:03:30.944 align:middle
让我们来回顾一下

00:03:31.011 --> 00:03:33.380 align:middle
在以前的开发工作中
遇到的一些问题

00:03:33.981 --> 00:03:35.148 align:middle
你们对此有意见吗？

00:03:35.215 --> 00:03:37.117 align:middle
你们准备好了吗？

00:03:37.784 --> 00:03:38.619 align:middle
是吗

00:03:38.685 --> 00:03:39.553 align:middle
好的

00:03:40.087 --> 00:03:41.355 align:middle
好极了

00:03:41.421 --> 00:03:43.457 align:middle
我早就想要一吐为快了

00:03:43.524 --> 00:03:44.658 align:middle
让我们闲话少说

00:03:44.992 --> 00:03:47.661 align:middle
我们来看第一个常见的陷阱

00:03:47.961 --> 00:03:48.795 align:middle
这是...

00:03:52.566 --> 00:03:53.400 align:middle
这...

00:03:53.600 --> 00:03:55.502 align:middle
可不是良好的用户体验

00:03:56.270 --> 00:03:58.005 align:middle
第一个

00:03:58.305 --> 00:03:59.139 align:middle
常见陷阱

00:03:59.573 --> 00:04:00.741 align:middle
是蜗牛般的APP速度

00:03:59.573 --> 00:04:00.741 align:middle
是蜗牛般的APP速度

00:04:01.775 --> 00:04:04.144 align:middle
Apple Watch的目的
是提供便利性

00:04:04.678 --> 00:04:07.080 align:middle
如果你的APP需要很长的时间
来安装

00:04:07.581 --> 00:04:09.082 align:middle
需要很长的时间来启动

00:04:09.149 --> 00:04:11.084 align:middle
或者需要很长时间载入页面

00:04:11.385 --> 00:04:13.887 align:middle
对用户来说将是很不方便的

00:04:15.155 --> 00:04:16.957 align:middle
APP的UI设计

00:04:17.224 --> 00:04:19.059 align:middle
和图片生成方式

00:04:19.426 --> 00:04:20.527 align:middle
对APP的性能

00:04:20.594 --> 00:04:21.928 align:middle
具有十分重要的影响

00:04:22.930 --> 00:04:24.798 align:middle
你的设计应该确保高性能

00:04:25.799 --> 00:04:28.001 align:middle
因此 举例来说
尽可能的话

00:04:28.569 --> 00:04:30.704 align:middle
你应该使用
渐进式页面载入方法

00:04:31.305 --> 00:04:34.041 align:middle
这意味着在用户进入页面之后

00:04:34.107 --> 00:04:36.944 align:middle
用户不需要等待
整个页面载入完之后

00:04:37.244 --> 00:04:39.179 align:middle
才能看到内容

00:04:39.780 --> 00:04:42.015 align:middle
他们可以先看到一些内容

00:04:42.082 --> 00:04:44.751 align:middle
然后再看到其它载入的内容

00:04:46.119 --> 00:04:47.955 align:middle
让用户等待是不合适的

00:04:48.622 --> 00:04:49.556 align:middle
我们应该避免这一点

00:04:49.623 --> 00:04:52.693 align:middle
当用户点击按钮载入新页面
或者当他们扫动页面时

00:04:53.060 --> 00:04:54.928 align:middle
应该立即能够看到页面内容

00:04:55.229 --> 00:04:56.830 align:middle
这种期待是合理的

00:04:57.898 --> 00:04:59.132 align:middle
让我们来看一个例子

00:04:59.333 --> 00:05:00.534 align:middle
假设我们有一个APP

00:04:59.333 --> 00:05:00.534 align:middle
假设我们有一个APP

00:05:00.901 --> 00:05:04.404 align:middle
它列出附近的
Apple零售店地址

00:05:05.272 --> 00:05:08.408 align:middle
现在 在这个屏幕上
显示所有的零售店

00:05:08.475 --> 00:05:10.477 align:middle
我们看到商店名称和地址

00:05:10.811 --> 00:05:13.280 align:middle
以及它们与我们的
当前位置之间的距离

00:05:14.081 --> 00:05:16.517 align:middle
现在 所有这些信息
都将显示在

00:05:16.750 --> 00:05:19.086 align:middle
零售店详细信息屏幕上

00:05:19.553 --> 00:05:23.323 align:middle
很多数据已经可用
而且本地存储在Watch上

00:05:24.124 --> 00:05:25.626 align:middle
当我们转到详情页面时

00:05:25.759 --> 00:05:27.561 align:middle
立即可以看到大量的内容

00:05:28.395 --> 00:05:31.131 align:middle
其他内容
例如营业时间

00:05:31.198 --> 00:05:32.499 align:middle
或交通路线信息等

00:05:32.866 --> 00:05:34.968 align:middle
它们全部是文本
载入速度很快

00:05:35.769 --> 00:05:37.704 align:middle
现在可能还有一张零售店...

00:05:37.971 --> 00:05:38.972 align:middle
照片

00:05:39.640 --> 00:05:42.109 align:middle
不应该让用户等待

00:05:42.342 --> 00:05:43.977 align:middle
图片在Watch页面...

00:05:44.444 --> 00:05:46.079 align:middle
上显示

00:05:46.847 --> 00:05:48.382 align:middle
更好的做法是让用户

00:05:48.448 --> 00:05:49.750 align:middle
首先进入详情页面

00:05:50.184 --> 00:05:53.720 align:middle
让他们知道等待查看的
内容是什么

00:05:54.555 --> 00:05:55.389 align:middle
我的意思是

00:05:55.489 --> 00:05:57.424 align:middle
可以显示一个图片标签

00:05:57.491 --> 00:05:58.425 align:middle
这个标签

00:05:58.759 --> 00:06:00.727 align:middle
说明将在页面上

00:05:58.759 --> 00:06:00.727 align:middle
说明将在页面上

00:06:00.794 --> 00:06:02.229 align:middle
载入的内容是什么

00:06:02.696 --> 00:06:06.033 align:middle
用户可能根本不想
查看零商店照片

00:06:06.400 --> 00:06:07.668 align:middle
这样 他们可以

00:06:07.968 --> 00:06:10.037 align:middle
查看页面上的其它内容

00:06:10.103 --> 00:06:11.738 align:middle
看到想要的内容之后
就可以离开了

00:06:13.207 --> 00:06:15.309 align:middle
如果你使用这样的进度指示

00:06:15.809 --> 00:06:17.945 align:middle
你需要始终使用占位图片

00:06:18.011 --> 00:06:19.947 align:middle
为将要载入的内容

00:06:20.380 --> 00:06:22.249 align:middle
预留出空间

00:06:22.649 --> 00:06:25.552 align:middle
这样做的原因是
当图片最终载入时

00:06:25.619 --> 00:06:27.821 align:middle
你不希望页面高度发生改变

00:06:28.222 --> 00:06:29.723 align:middle
因为如果你正在查看...

00:06:30.023 --> 00:06:31.191 align:middle
图片下方的内容

00:06:31.258 --> 00:06:32.726 align:middle
这些内容将会从...

00:06:33.026 --> 00:06:34.161 align:middle
视图中消失

00:06:34.494 --> 00:06:35.729 align:middle
它们实际上会转到底部位置

00:06:35.996 --> 00:06:37.397 align:middle
这样会让用户感到困惑

00:06:37.464 --> 00:06:39.099 align:middle
因此你需要保留
这个图片显示区域

00:06:40.567 --> 00:06:42.836 align:middle
如果你使用这项技术
你还需要思考

00:06:42.903 --> 00:06:45.205 align:middle
如何设置页面上的
内容显示顺序

00:06:45.772 --> 00:06:48.442 align:middle
你应该将载入时间更长的内容

00:06:48.509 --> 00:06:50.644 align:middle
放到页面底部位置

00:06:51.745 --> 00:06:55.148 align:middle
当照片不在屏幕上时
将需要更多的时间载入它

00:06:55.482 --> 00:06:59.052 align:middle
然后用户才能滚动看到它

00:06:59.653 --> 00:07:02.055 align:middle
当用户首次进入这个页面时

00:06:59.653 --> 00:07:02.055 align:middle
当用户首次进入这个页面时

00:07:02.122 --> 00:07:04.458 align:middle
用户可能不会意识到
照片此前并不在当前屏幕

00:07:06.493 --> 00:07:08.729 align:middle
第二个提高性能的设计方法是

00:07:08.795 --> 00:07:10.531 align:middle
优化你的图片

00:07:11.164 --> 00:07:13.600 align:middle
最后的办法是压缩图片

00:07:14.535 --> 00:07:15.836 align:middle
在你制作图片时

00:07:16.170 --> 00:07:17.638 align:middle
很重要的一点是

00:07:17.704 --> 00:07:20.641 align:middle
选择合适的压缩类型
和正常的设置

00:07:21.441 --> 00:07:22.910 align:middle
举例来说 对于照片

00:07:22.976 --> 00:07:24.611 align:middle
大多数时候你会使用JPEG

00:07:25.279 --> 00:07:27.347 align:middle
JPEG是一种有损格式

00:07:27.414 --> 00:07:30.517 align:middle
这意味着
你看到的JPEG图片

00:07:30.751 --> 00:07:33.453 align:middle
其视觉质量和图像保真度
有一定的损失

00:07:34.054 --> 00:07:35.956 align:middle
但是在中等压缩率下
并不会有什么影响

00:07:36.023 --> 00:07:39.159 align:middle
这不会严重影响
你看到的图像质量

00:07:40.060 --> 00:07:42.229 align:middle
让我们来压缩这张图片

00:07:42.763 --> 00:07:44.064 align:middle
它给人以膨胀感

00:07:44.331 --> 00:07:45.566 align:middle
看上去是像素图片

00:07:45.766 --> 00:07:47.301 align:middle
让我们来压缩这张图片

00:07:48.335 --> 00:07:50.304 align:middle
在最高质量JPEG设置下

00:07:50.370 --> 00:07:53.140 align:middle
它的大小是125 K

00:07:54.074 --> 00:07:57.811 align:middle
我们降低质量设置
看到文件大小

00:07:57.878 --> 00:07:59.580 align:middle
开始急速下降

00:08:00.047 --> 00:08:02.449 align:middle
在最高压缩率

00:08:02.516 --> 00:08:03.717 align:middle
和最低质量设置下

00:08:04.017 --> 00:08:05.285 align:middle
它的大小仅为25 K左右

00:08:05.352 --> 00:08:08.021 align:middle
大约为最高质量图片的20%

00:08:08.589 --> 00:08:10.490 align:middle
文件大小缩减非常明显

00:08:10.958 --> 00:08:13.060 align:middle
但是看上去惨不忍睹

00:08:13.427 --> 00:08:14.928 align:middle
通常情况下
当你压缩JPEG时

00:08:14.995 --> 00:08:15.996 align:middle
需要使用适中...

00:08:16.263 --> 00:08:17.097 align:middle
的压缩率

00:08:17.764 --> 00:08:19.266 align:middle
我们需要找到

00:08:19.333 --> 00:08:20.968 align:middle
一个图片质量下降临界点

00:08:21.869 --> 00:08:23.237 align:middle
让我们把它们放在...

00:08:23.470 --> 00:08:24.705 align:middle
一起比较

00:08:25.539 --> 00:08:27.007 align:middle
几乎很难看到

00:08:27.074 --> 00:08:29.076 align:middle
图片质量有区别

00:08:29.309 --> 00:08:31.845 align:middle
但是文件大小减少了三分之二

00:08:32.679 --> 00:08:35.682 align:middle
只有在近距离观察时
才会看到

00:08:36.116 --> 00:08:37.583 align:middle
压缩造成的细微差别

00:08:38.318 --> 00:08:40.888 align:middle
但是用户不会
这样认真地观察它们

00:08:40.953 --> 00:08:42.389 align:middle
这不符合我们的习惯

00:08:42.890 --> 00:08:45.893 align:middle
用户的Watch使用高分辨率的
视网膜显示屏

00:08:46.226 --> 00:08:47.461 align:middle
而且会经常移动

00:08:47.661 --> 00:08:51.131 align:middle
因为手表系带在
他们的手腕上

00:08:51.598 --> 00:08:53.767 align:middle
因此很难看到这些细微差别

00:08:54.835 --> 00:08:56.670 align:middle
接下来
让我们来看PNG

00:08:57.638 --> 00:09:00.741 align:middle
现在 PNG几乎已经成为
除照片之外的其他大多数图片

00:08:57.638 --> 00:09:00.741 align:middle
现在 PNG几乎已经成为
除照片之外的其他大多数图片

00:09:00.807 --> 00:09:03.076 align:middle
所使用的格式默认设置下

00:09:03.744 --> 00:09:06.547 align:middle
PNG使用24位颜色

00:09:07.080 --> 00:09:10.784 align:middle
这意味着可以使用数百万种颜色

00:09:10.851 --> 00:09:12.686 align:middle
来绘制图片

00:09:13.520 --> 00:09:15.622 align:middle
但是对于图标等大多数图片来说

00:09:15.689 --> 00:09:18.125 align:middle
这已经远远超过实际需求

00:09:19.259 --> 00:09:21.195 align:middle
当你保存PNG图片时

00:09:21.261 --> 00:09:23.630 align:middle
应该知道你还可以使用

00:09:24.031 --> 00:09:24.898 align:middle
8位颜色设置

00:09:25.899 --> 00:09:28.769 align:middle
这意味着可以
使用256种或

00:09:29.069 --> 00:09:29.903 align:middle
更少的颜色

00:09:30.103 --> 00:09:31.271 align:middle
来绘制你的图片

00:09:31.705 --> 00:09:33.440 align:middle
但是对于这个图片来说
这已经绰绰有余

00:09:33.507 --> 00:09:34.341 align:middle
事实上

00:09:34.408 --> 00:09:36.043 align:middle
只有当颜色数量为200

00:09:36.476 --> 00:09:38.645 align:middle
或更少时
我们才会开始看到

00:09:38.712 --> 00:09:40.881 align:middle
图片中的递色和色调分离

00:09:41.615 --> 00:09:43.150 align:middle
使用8位PNG

00:09:43.283 --> 00:09:44.284 align:middle
可以大幅减小

00:09:44.651 --> 00:09:46.153 align:middle
文件大小

00:09:47.221 --> 00:09:48.488 align:middle
在这里你可以看到

00:09:49.056 --> 00:09:51.358 align:middle
文件大小缩减幅度
非常显著

00:09:51.859 --> 00:09:54.761 align:middle
几乎减小了十倍

00:09:55.562 --> 00:09:59.032 align:middle
图片质量却没有明显的区别

00:10:00.133 --> 00:10:01.902 align:middle
当你的APP使用
大量的图片时

00:10:01.969 --> 00:10:05.038 align:middle
总体文件大小缩减
是十分惊人的

00:10:05.439 --> 00:10:08.242 align:middle
特别是当你使用
图片序列动画时

00:10:08.542 --> 00:10:11.979 align:middle
这可以显著减小你的APP大小

00:10:12.312 --> 00:10:14.815 align:middle
因此你应该认真考虑
使用这项技术

00:10:16.183 --> 00:10:18.318 align:middle
接下来
你需要做的事情是

00:10:18.385 --> 00:10:19.987 align:middle
避免使用不必要的透明图片

00:10:20.320 --> 00:10:22.289 align:middle
透明图片意味着需要
Alpha通道

00:10:22.356 --> 00:10:24.691 align:middle
Alpha通道会增加文件大小

00:10:25.092 --> 00:10:26.994 align:middle
因此应该尽量避免
除非你确实需要使用它

00:10:27.427 --> 00:10:29.596 align:middle
有时候 你确实需要
使用透明图片

00:10:29.963 --> 00:10:31.398 align:middle
例如
这个天气...

00:10:31.632 --> 00:10:32.633 align:middle
Glance图片

00:10:32.933 --> 00:10:35.435 align:middle
这个图片显示在半透明

00:10:35.869 --> 00:10:36.837 align:middle
黑色背景上

00:10:36.904 --> 00:10:39.106 align:middle
使其背后的表盘变得模糊

00:10:39.673 --> 00:10:41.575 align:middle
因此你需要透明设置

00:10:41.642 --> 00:10:43.410 align:middle
以显示彩色信息

00:10:44.178 --> 00:10:46.213 align:middle
但是这个天气APP中的
一个类似的标

00:10:46.480 --> 00:10:48.215 align:middle
并不需要这种透明格式

00:10:48.282 --> 00:10:50.117 align:middle
它始终显在黑色背景上

00:10:50.918 --> 00:10:53.954 align:middle
由于我们无需改变黑色背景

00:10:54.021 --> 00:10:55.822 align:middle
因此不需要alpha通道

00:10:58.792 --> 00:11:00.327 align:middle
最后一项图片...

00:10:58.792 --> 00:11:00.327 align:middle
最后一项图片...

00:11:00.460 --> 00:11:01.728 align:middle
优化技术是

00:11:02.062 --> 00:11:05.666 align:middle
尽量使用实际所需要的图片大小

00:11:06.166 --> 00:11:08.268 align:middle
当你在运行时发送图片时

00:11:08.335 --> 00:11:10.037 align:middle
这一点显得尤为重要

00:11:10.938 --> 00:11:14.174 align:middle
图片和视频的尺寸大小

00:11:14.241 --> 00:11:16.276 align:middle
只需要满足Watch
显示要求...

00:11:16.610 --> 00:11:17.444 align:middle
就可以了

00:11:18.011 --> 00:11:20.614 align:middle
尤其是当图片可能

00:11:20.681 --> 00:11:22.549 align:middle
会超出显示屏边界时

00:11:22.816 --> 00:11:25.419 align:middle
应确保使用合适的图片
和视频尺寸

00:11:26.286 --> 00:11:28.121 align:middle
让我们来回顾一下
高性能设计

00:11:28.488 --> 00:11:30.724 align:middle
意味着需要在页面上
逐步载入内容

00:11:31.058 --> 00:11:32.593 align:middle
这意味着对内容进行排序

00:11:32.659 --> 00:11:34.995 align:middle
让用户不会发现
你在逐步载入内容

00:11:35.262 --> 00:11:36.730 align:middle
另外应该通过压缩

00:11:36.797 --> 00:11:38.498 align:middle
来优化图片 避免使用

00:11:38.699 --> 00:11:39.633 align:middle
透明图片

00:11:39.933 --> 00:11:41.735 align:middle
以及使用正确的图片尺寸

00:11:42.236 --> 00:11:43.504 align:middle
如果想要更多的信息

00:11:43.570 --> 00:11:45.506 align:middle
我建议观看这个讲座视频

00:11:45.939 --> 00:11:48.542 align:middle
这个讲座从工程设计的角度

00:11:48.609 --> 00:11:51.378 align:middle
详细地讨论
一些性能优化技巧和陷阱

00:11:52.446 --> 00:11:55.015 align:middle
现在 我想为你们介绍一个

00:11:55.482 --> 00:11:57.951 align:middle
另外一个很好的APP性能优化技术

00:11:59.786 --> 00:12:02.656 align:middle
这项技术非常有用

00:11:59.786 --> 00:12:02.656 align:middle
这项技术非常有用

00:12:03.056 --> 00:12:03.957 align:middle
其主旨是

00:12:04.558 --> 00:12:06.560 align:middle
避免APP变得过于复杂

00:12:07.261 --> 00:12:08.595 align:middle
这是第二个常见陷阱

00:12:10.364 --> 00:12:11.732 align:middle
前面我说过我不会重复

00:12:11.798 --> 00:12:13.834 align:middle
我的上次讲座的内容

00:12:14.201 --> 00:12:15.369 align:middle
可能并非完全如此

00:12:15.435 --> 00:12:17.204 align:middle
因为我需要重复一下以前的内容

00:12:18.672 --> 00:12:21.074 align:middle
Apple Watch并不是
小型化的iPhone

00:12:21.141 --> 00:12:22.042 align:middle
这一点很重要

00:12:22.342 --> 00:12:23.844 align:middle
因此我再次强调

00:12:24.311 --> 00:12:26.880 align:middle
我们看到很多开发人员
经常陷入这种误区

00:12:27.114 --> 00:12:30.083 align:middle
我们很多人会自然而然地

00:12:30.150 --> 00:12:31.652 align:middle
将想将iPhone APP

00:12:31.985 --> 00:12:33.620 align:middle
移植到Watch

00:12:34.087 --> 00:12:36.190 align:middle
但是结果发现Watch APP

00:12:36.256 --> 00:12:37.758 align:middle
难以使用和浏览

00:12:38.659 --> 00:12:40.594 align:middle
Apple Watch
十分适合...

00:12:41.094 --> 00:12:42.062 align:middle
快速查看

00:12:42.729 --> 00:12:45.632 align:middle
以进行方便
简0单的交互操作

00:12:46.233 --> 00:12:47.201 align:middle
那么

00:12:47.267 --> 00:12:49.069 align:middle
iOS APP上的哪些信息和功能

00:12:49.136 --> 00:12:51.438 align:middle
是用户确实想要而且能够

00:12:51.505 --> 00:12:52.506 align:middle
快速和方便地...

00:12:52.806 --> 00:12:53.841 align:middle
查看和操作的？

00:12:54.975 --> 00:12:57.144 align:middle
应确保仅关注最重要的信息

00:12:57.211 --> 00:12:59.112 align:middle
不要将过多的信息和功能

00:12:59.179 --> 00:13:00.314 align:middle
堆积到你的APP上

00:12:59.179 --> 00:13:00.314 align:middle
堆积到你的APP上

00:13:01.081 --> 00:13:04.818 align:middle
这是提高Apple Watch
可用性的一个很好方法

00:13:05.485 --> 00:13:07.254 align:middle
例如 iPhone上的日历表APP

00:13:07.521 --> 00:13:09.590 align:middle
具有许多Apple Watch

00:13:09.656 --> 00:13:12.025 align:middle
日历表APP
所不具备的功能

00:13:13.360 --> 00:13:14.962 align:middle
Apple Watch日历表APP

00:13:15.128 --> 00:13:16.129 align:middle
不支持搜索

00:13:16.730 --> 00:13:17.898 align:middle
不能添加事件

00:13:18.565 --> 00:13:20.033 align:middle
不能管理你的日程

00:13:20.734 --> 00:13:23.303 align:middle
不能查看未来几天

00:13:24.171 --> 00:13:25.672 align:middle
过去几天的事件

00:13:26.540 --> 00:13:28.342 align:middle
Apple Watch上的
日历表APP

00:13:28.509 --> 00:13:32.412 align:middle
仅包含iPhone APP
全部功能的一部分

00:13:32.479 --> 00:13:34.248 align:middle
但是很符合Watch的...

00:13:34.681 --> 00:13:35.516 align:middle
使用情况

00:13:36.183 --> 00:13:38.318 align:middle
可以检查你的日历表
查看今天有什么活动

00:13:38.919 --> 00:13:40.621 align:middle
接下来几天有干什么安排

00:13:41.121 --> 00:13:42.656 align:middle
可以查看日历表中的

00:13:42.723 --> 00:13:43.991 align:middle
每项活动的具体细息

00:13:44.324 --> 00:13:46.660 align:middle
你可以接收和拒绝邀请
当你赶上不会议

00:13:46.727 --> 00:13:48.428 align:middle
或需要放弃会议时

00:13:48.929 --> 00:13:50.297 align:middle
你可以联系会议组织者

00:13:51.331 --> 00:13:53.834 align:middle
这些都符合Watch的
使用情况

00:13:54.234 --> 00:13:56.537 align:middle
你并不需要
iPhone上的所有功能

00:13:57.504 --> 00:14:00.641 align:middle
Apple Watch APP应该
是iPhone APP的补充

00:13:57.504 --> 00:14:00.641 align:middle
Apple Watch APP应该
是iPhone APP的补充

00:14:01.175 --> 00:14:03.911 align:middle
如同我们刚才
在日程表APP上看到的那些

00:14:03.977 --> 00:14:05.846 align:middle
应该在Apple Watch
上提供

00:14:05.913 --> 00:14:07.814 align:middle
全部iPhone功能
的一小部分功能

00:14:08.215 --> 00:14:10.551 align:middle
或者也可以扩展...

00:14:11.218 --> 00:14:12.386 align:middle
iOS APP的功能

00:14:13.320 --> 00:14:16.256 align:middle
例如
这个Apple Watch版本

00:14:16.423 --> 00:14:17.591 align:middle
的照相机APP

00:14:17.991 --> 00:14:21.595 align:middle
将AppleWatch变成
iPhone摄像头的...

00:14:21.929 --> 00:14:22.763 align:middle
取景器

00:14:23.163 --> 00:14:25.032 align:middle
允许遥控设置你的iPhone

00:14:25.432 --> 00:14:27.601 align:middle
以便在一定距离为你

00:14:27.734 --> 00:14:28.569 align:middle
和你的朋友拍照

00:14:28.635 --> 00:14:31.138 align:middle
确保所有人都位于镜头之中

00:14:31.371 --> 00:14:35.943 align:middle
它功能iOS照相机APP的功能

00:14:36.610 --> 00:14:37.911 align:middle
现在 我想要你们思考

00:14:37.978 --> 00:14:40.781 align:middle
如何使用你的
Apple Watch APP

00:14:41.114 --> 00:14:42.115 align:middle
做同样的事情

00:14:42.182 --> 00:14:44.184 align:middle
如何为你的APP

00:14:44.484 --> 00:14:46.620 align:middle
实现以前无法实现的功能

00:14:49.656 --> 00:14:52.693 align:middle
第三个常见陷阱
是导航过于烦琐

00:14:53.360 --> 00:14:56.029 align:middle
烦琐的导航是效率低下

00:14:56.096 --> 00:14:57.965 align:middle
的使用流程造成的

00:14:58.532 --> 00:14:59.700 align:middle
导致用户难以

00:14:59.766 --> 00:15:02.035 align:middle
找到他们想要找到的东西

00:14:59.766 --> 00:15:02.035 align:middle
找到他们想要找到的东西

00:15:02.936 --> 00:15:05.172 align:middle
不正确的APP结构模型

00:15:05.239 --> 00:15:08.342 align:middle
通常会导致烦琐的导航

00:15:09.510 --> 00:15:10.811 align:middle
Apple Watch...

00:15:10.878 --> 00:15:12.012 align:middle
有两种...

00:15:12.312 --> 00:15:13.614 align:middle
主要...

00:15:14.014 --> 00:15:14.882 align:middle
结构模式

00:15:15.148 --> 00:15:17.284 align:middle
第一种基于页面的模式

00:15:17.918 --> 00:15:20.220 align:middle
我们看到一系列依次排序的页面

00:15:20.454 --> 00:15:23.257 align:middle
你可以扫动切换不同页面

00:15:24.458 --> 00:15:26.460 align:middle
这是天气预报APP使用的模式

00:15:26.727 --> 00:15:28.395 align:middle
你扫动切换不同的城市

00:15:29.796 --> 00:15:32.566 align:middle
另一种结构模式是
层级模式

00:15:33.267 --> 00:15:36.303 align:middle
在层级模式中有一系列的

00:15:36.370 --> 00:15:38.572 align:middle
高层次类别或内容摘要

00:15:38.906 --> 00:15:40.174 align:middle
然后你点击

00:15:40.240 --> 00:15:42.042 align:middle
进入详情页面

00:15:42.109 --> 00:15:43.810 align:middle
或使用更具体的功能

00:15:44.912 --> 00:15:47.314 align:middle
股票APP就是
这种层级APP的例子之一

00:15:47.881 --> 00:15:50.884 align:middle
在顶层有一个股票列表

00:15:51.151 --> 00:15:54.321 align:middle
如果点击其中一支股票
就会弹出一个子视图

00:15:54.588 --> 00:15:57.257 align:middle
显示选定股票的更多具体信息

00:15:58.358 --> 00:16:00.227 align:middle
在watchOS中

00:15:58.358 --> 00:16:00.227 align:middle
在watchOS中

00:16:00.294 --> 00:16:02.996 align:middle
不能混合使用这些模式

00:16:03.997 --> 00:16:06.400 align:middle
因此你不能首先
使用页面模式

00:16:06.466 --> 00:16:10.170 align:middle
然后在更低级别
转换到...层级模式

00:16:10.971 --> 00:16:11.905 align:middle
相反地

00:16:11.972 --> 00:16:14.608 align:middle
你也不能
首先使用层级模式

00:16:14.675 --> 00:16:16.844 align:middle
然后在更低级别
转换到页面模式

00:16:17.811 --> 00:16:20.147 align:middle
其原因在于屏幕尺寸

00:16:22.049 --> 00:16:23.083 align:middle
为了便于理解

00:16:23.350 --> 00:16:24.284 align:middle
让我们来看

00:16:24.685 --> 00:16:26.286 align:middle
层级APP中的
这个子视图

00:16:26.720 --> 00:16:28.522 align:middle
我刚才高亮显示左上角的

00:16:28.989 --> 00:16:30.858 align:middle
返回箭头图标

00:16:31.391 --> 00:16:34.795 align:middle
你点击这个图标
将返回上级视图

00:16:35.462 --> 00:16:37.531 align:middle
但是它是一个很小的图标

00:16:37.598 --> 00:16:39.466 align:middle
它的点击区域

00:16:39.867 --> 00:16:41.401 align:middle
并不十分明确

00:16:41.668 --> 00:16:43.136 align:middle
它比箭头肯定要大一些

00:16:43.203 --> 00:16:44.938 align:middle
但是也大不了多少

00:16:46.006 --> 00:16:47.574 align:middle
为了更简单地

00:16:47.641 --> 00:16:48.976 align:middle
返回上级视图

00:16:49.176 --> 00:16:52.212 align:middle
可以从屏幕左边缘扫动

00:16:53.247 --> 00:16:55.015 align:middle
这将帮助你返回到上级视图

00:16:55.082 --> 00:16:56.617 align:middle
在这里很容易看清楚

00:16:57.484 --> 00:16:58.519 align:middle
现在的问题是

00:16:58.719 --> 00:17:00.053 align:middle
在页面模式APP中

00:16:58.719 --> 00:17:00.053 align:middle
在页面模式APP中

00:17:00.787 --> 00:17:04.191 align:middle
如何使用类似的操作
返回到上一个屏幕

00:17:04.925 --> 00:17:05.959 align:middle
因为Watch

00:17:06.126 --> 00:17:07.928 align:middle
显示屏尺寸很小

00:17:08.228 --> 00:17:10.597 align:middle
因此很难同时支持

00:17:10.664 --> 00:17:12.432 align:middle
这些操作手势

00:17:13.599 --> 00:17:16.737 align:middle
你必须决定哪些模式
最适合你的APP

00:17:17.570 --> 00:17:20.473 align:middle
你选择的结构模式应该

00:17:20.641 --> 00:17:22.910 align:middle
便于用户找到他们想找的东西

00:17:23.242 --> 00:17:25.846 align:middle
而且只需要最少的扫动和点击

00:17:26.713 --> 00:17:28.882 align:middle
一般来说 选择层级还是

00:17:28.949 --> 00:17:30.817 align:middle
页面结构主要取决于

00:17:30.884 --> 00:17:32.653 align:middle
APP显示屏幕数量

00:17:33.220 --> 00:17:34.488 align:middle
想要显示的

00:17:34.555 --> 00:17:35.389 align:middle
信息类型

00:17:36.356 --> 00:17:38.192 align:middle
对于扁平结构的信息

00:17:38.258 --> 00:17:40.727 align:middle
即所有信息部分都是同级别的

00:17:41.228 --> 00:17:43.397 align:middle
这时适合使用页面模式

00:17:43.997 --> 00:17:46.633 align:middle
页面模式不应该
有过多的分页屏幕

00:17:46.700 --> 00:17:49.069 align:middle
因为扫动切换屏幕是

00:17:49.136 --> 00:17:51.471 align:middle
是一个相对较慢的内容浏览方法

00:17:52.372 --> 00:17:54.274 align:middle
天气预报APP符合这些条件

00:17:54.875 --> 00:17:57.845 align:middle
大多数人只想看
少数几个城市的天气

00:17:57.911 --> 00:17:59.413 align:middle
因此不应该含有大量的项目

00:17:59.813 --> 00:18:01.081 align:middle
这些扫动切换

00:17:59.813 --> 00:18:01.081 align:middle
这些扫动切换

00:18:01.148 --> 00:18:02.416 align:middle
不会变得过于烦琐

00:18:03.717 --> 00:18:05.619 align:middle
在天气信息的含义方面

00:18:05.686 --> 00:18:07.354 align:middle
所有城市基本是相同的

00:18:07.421 --> 00:18:09.122 align:middle
因此不需要进行

00:18:09.189 --> 00:18:11.258 align:middle
层级化信息组织和分类

00:18:12.426 --> 00:18:15.729 align:middle
另一方面
层级化APP

00:18:15.796 --> 00:18:18.031 align:middle
更适合大型或复杂的数据结构

00:18:18.832 --> 00:18:21.869 align:middle
许多人使用股票APP
同时查看多支股票

00:18:21.935 --> 00:18:23.670 align:middle
和市场行情

00:18:24.404 --> 00:18:25.906 align:middle
使用概览列表

00:18:25.973 --> 00:18:28.942 align:middle
然后导航到单支股票或市场行情

00:18:29.009 --> 00:18:30.811 align:middle
是很容易完成的操作

00:18:31.211 --> 00:18:32.446 align:middle
只需要滚动屏幕

00:18:32.846 --> 00:18:34.815 align:middle
找到你想要的股票
然后选择它

00:18:37.284 --> 00:18:38.919 align:middle
在这个层级

00:18:38.986 --> 00:18:41.455 align:middle
有大量的信息可供用户查看

00:18:41.922 --> 00:18:44.458 align:middle
用户可以轻松找到
他们所需要的信息

00:18:44.525 --> 00:18:46.860 align:middle
甚至根本不需要导航

00:18:47.528 --> 00:18:48.795 align:middle
这就提高了效率

00:18:52.466 --> 00:18:55.202 align:middle
假设我们将这个APP

00:18:55.269 --> 00:18:57.571 align:middle
设计成为分页APP

00:18:58.138 --> 00:19:01.175 align:middle
用户将需要花费大量的时间

00:18:58.138 --> 00:19:01.175 align:middle
用户将需要花费大量的时间

00:19:01.241 --> 00:19:03.410 align:middle
才能找到...他们想要的信息

00:19:03.477 --> 00:19:05.078 align:middle
因为这里会有数不清的分页内容

00:19:05.779 --> 00:19:08.182 align:middle
如果他们按正确的方向扫动查找
情况会好一点

00:19:08.248 --> 00:19:10.417 align:middle
如果方向出错
他们必须反过来...

00:19:11.051 --> 00:19:12.419 align:middle
重新开始

00:19:13.420 --> 00:19:15.289 align:middle
选择合适的模式非常重要

00:19:16.657 --> 00:19:18.759 align:middle
过度使用模式表单

00:19:18.825 --> 00:19:20.527 align:middle
也会造成烦琐的导航

00:19:22.196 --> 00:19:23.864 align:middle
现在模式表单支持

00:19:24.164 --> 00:19:25.332 align:middle
多视图分页

00:19:26.300 --> 00:19:29.203 align:middle
我看到开发人员
通过使用模式表单

00:19:29.269 --> 00:19:31.572 align:middle
来绕过无法从层级结构

00:19:32.039 --> 00:19:33.907 align:middle
转到分页结构的限制

00:19:34.775 --> 00:19:37.311 align:middle
我强烈反对这种做法

00:19:38.145 --> 00:19:40.347 align:middle
首先 模式表单不显示时间

00:19:40.414 --> 00:19:41.982 align:middle
我认为 大多数时候

00:19:42.049 --> 00:19:42.916 align:middle
用户想...

00:19:43.317 --> 00:19:45.619 align:middle
要在他们的
Apple Watch上看到时间

00:19:46.820 --> 00:19:49.389 align:middle
模式表单的动画

00:19:49.456 --> 00:19:51.091 align:middle
是非连惯性的

00:19:51.592 --> 00:19:54.461 align:middle
它看起来就像是这个
单独的信息窗格

00:19:54.528 --> 00:19:56.163 align:middle
在主界面上滑动

00:19:56.230 --> 00:19:58.198 align:middle
让用户感觉得好像
失去对主APP的控制

00:19:58.732 --> 00:20:00.534 align:middle
它发现一种分离信号

00:19:58.732 --> 00:20:00.534 align:middle
它发现一种分离信号

00:20:01.301 --> 00:20:02.736 align:middle
感觉好象操作发生中断

00:20:03.303 --> 00:20:06.406 align:middle
如果用户的APP导航操作

00:20:06.473 --> 00:20:09.376 align:middle
频繁地触发这些表单模式动画

00:20:09.743 --> 00:20:12.179 align:middle
用户体验将会变得不流畅

00:20:12.246 --> 00:20:15.115 align:middle
让人感觉突兀...和不连贯

00:20:16.583 --> 00:20:18.485 align:middle
为了避免过多使用模式表单

00:20:18.552 --> 00:20:20.487 align:middle
和过于烦琐的导航

00:20:20.554 --> 00:20:23.090 align:middle
不应该设置过多的模式表单

00:20:23.156 --> 00:20:24.191 align:middle
互相滑动切换和

00:20:24.491 --> 00:20:25.626 align:middle
来回跳转

00:20:26.159 --> 00:20:27.895 align:middle
在iOS也同样如此

00:20:28.262 --> 00:20:30.397 align:middle
因为这样会让用户觉得

00:20:30.697 --> 00:20:33.233 align:middle
他们始终处于这种操作模式中
永远都不会结束

00:20:33.734 --> 00:20:36.103 align:middle
他们会很困难或
感觉难以

00:20:36.170 --> 00:20:38.405 align:middle
回到正常的APP操作模式

00:20:39.907 --> 00:20:41.909 align:middle
无论你选择什么结构类型

00:20:41.975 --> 00:20:42.976 align:middle
都应该使用

00:20:43.043 --> 00:20:44.077 align:middle
简单的结构

00:20:44.711 --> 00:20:47.314 align:middle
在层级APP中
不应该设置两个以上的层级

00:20:47.381 --> 00:20:49.249 align:middle
最多不应该有超过两个

00:20:49.650 --> 00:20:51.018 align:middle
最多三个层级

00:20:51.552 --> 00:20:52.719 align:middle
如果超过这个限值

00:20:52.786 --> 00:20:54.221 align:middle
需要将会需要花费更多的时间

00:20:54.288 --> 00:20:55.756 align:middle
来查找他们想要的内容

00:20:56.323 --> 00:20:58.892 align:middle
他们会感觉无法
跳出你的层级结构

00:20:59.760 --> 00:21:02.496 align:middle
对于分页APP
如我前面所说的那样

00:20:59.760 --> 00:21:02.496 align:middle
对于分页APP
如我前面所说的那样

00:21:02.763 --> 00:21:04.531 align:middle
应该避免过多的页面

00:21:04.932 --> 00:21:07.034 align:middle
扫动切换所有这些页面

00:21:07.100 --> 00:21:09.403 align:middle
将需要大量的时间
让人感觉非常烦琐

00:21:10.838 --> 00:21:14.074 align:middle
烦琐的导航会严重降低效率

00:21:14.908 --> 00:21:17.411 align:middle
前面我还讲到一个设计原则

00:21:17.477 --> 00:21:18.712 align:middle
即轻量级交互

00:21:19.079 --> 00:21:22.049 align:middle
轻量级交互的是为了
实现高效率的导航

00:21:22.549 --> 00:21:24.985 align:middle
或者说它的主要目的
是提高效率

00:21:27.888 --> 00:21:28.722 align:middle
我们继续

00:21:29.089 --> 00:21:31.992 align:middle
第四个常见陷阱是标签混乱

00:21:32.860 --> 00:21:37.231 align:middle
这里我指的主要是
页面标题和

00:21:37.297 --> 00:21:40.300 align:middle
模式表单的"Close"按钮
和"Dismiss"按钮

00:21:40.934 --> 00:21:42.269 align:middle
我们先来看页面标题

00:21:43.370 --> 00:21:46.607 align:middle
在这方面 一个常见的情况是
在层级结构APP中

00:21:47.374 --> 00:21:50.110 align:middle
右上角的标题显示"Do Not
Disturb"位于右侧

00:21:50.577 --> 00:21:53.080 align:middle
它实际是一个"返回"按钮
或"返回"按钮标签

00:21:53.146 --> 00:21:54.882 align:middle
而不是当前视图标题

00:21:56.116 --> 00:21:57.384 align:middle
但是实际上不是这么回事

00:21:58.485 --> 00:22:00.454 align:middle
如果我们以这种方式使用标题

00:21:58.485 --> 00:22:00.454 align:middle
如果我们以这种方式使用标题

00:22:00.521 --> 00:22:02.456 align:middle
将会有多个屏幕

00:22:02.523 --> 00:22:04.291 align:middle
在快速Glance上
使用相同的标题

00:22:04.591 --> 00:22:06.894 align:middle
它们将会具有相同的标题

00:22:07.427 --> 00:22:09.162 align:middle
因此应该避免这样做

00:22:09.930 --> 00:22:10.764 align:middle
现在

00:22:10.998 --> 00:22:12.399 align:middle
我理解...

00:22:12.466 --> 00:22:13.534 align:middle
开发者为什么这样做

00:22:13.967 --> 00:22:15.102 align:middle
错误原因...

00:22:15.435 --> 00:22:16.470 align:middle
是一样的

00:22:16.537 --> 00:22:17.638 align:middle
它不是"Back"按钮

00:22:17.704 --> 00:22:18.539 align:middle
因此在这里

00:22:18.839 --> 00:22:20.507 align:middle
不应该使用"Back"

00:22:23.877 --> 00:22:24.978 align:middle
前面我说过

00:22:25.045 --> 00:22:27.447 align:middle
我理解为什么人们将它
视为"Back"按钮

00:22:27.514 --> 00:22:29.816 align:middle
因为它看上去
如同iPhone或iPad

00:22:30.250 --> 00:22:31.885 align:middle
上的"Back"按钮

00:22:32.986 --> 00:22:34.621 align:middle
但是在iPhone或iPad上

00:22:34.688 --> 00:22:38.725 align:middle
有足够的空间同时显示
"Back"按钮和标题

00:22:39.760 --> 00:22:42.062 align:middle
在Apple Watch上
显示屏更小

00:22:42.629 --> 00:22:44.231 align:middle
不能同时显示二者

00:22:44.431 --> 00:22:46.066 align:middle
因为那样将会不美观

00:22:46.934 --> 00:22:48.936 align:middle
因此你必须选择显示其中之一

00:22:49.002 --> 00:22:50.771 align:middle
相比之下 显示标题

00:22:51.104 --> 00:22:53.173 align:middle
比显示“Back”按钮更重要

00:22:53.540 --> 00:22:54.641 align:middle
更重要的是用户应该知道

00:22:54.708 --> 00:22:56.176 align:middle
当前所看的内容是什么

00:22:56.376 --> 00:22:59.313 align:middle
而不是了解上一屏幕
或父级屏幕的内容

00:23:00.948 --> 00:23:03.150 align:middle
在标签方面
另一个...

00:23:03.483 --> 00:23:04.718 align:middle
常见的误区是

00:23:05.319 --> 00:23:07.321 align:middle
模式表单"Close"按钮

00:23:07.855 --> 00:23:09.156 align:middle
或"Dismiss"按钮

00:23:09.723 --> 00:23:11.291 align:middle
这些按钮可以重命名

00:23:11.425 --> 00:23:13.360 align:middle
因为相比于显示"Dismiss"

00:23:13.427 --> 00:23:14.661 align:middle
显示

00:23:15.062 --> 00:23:18.065 align:middle
"Close"或"Done"
或"Cancel"更容易让人接受

00:23:19.633 --> 00:23:22.436 align:middle
但是 无论怎么重命名
都必须明确地让用户知道

00:23:22.503 --> 00:23:23.637 align:middle
这些标签是可操作的

00:23:23.737 --> 00:23:25.339 align:middle
用户需要知道
他们可以

00:23:25.606 --> 00:23:26.640 align:middle
点击这个标签

00:23:26.707 --> 00:23:27.841 align:middle
从而会触发特定的操作

00:23:28.509 --> 00:23:30.110 align:middle
实际上不仅仅是触发操作

00:23:30.177 --> 00:23:31.845 align:middle
这将会关闭模式表单

00:23:31.912 --> 00:23:33.280 align:middle
并返回前一屏幕

00:23:34.615 --> 00:23:36.450 align:middle
这显然不是你想要的

00:23:36.750 --> 00:23:38.252 align:middle
因为你将它用作标题

00:23:38.585 --> 00:23:41.221 align:middle
用户并不知道它们是可操作的

00:23:41.688 --> 00:23:42.823 align:middle
用户将会想办法

00:23:42.890 --> 00:23:44.224 align:middle
关闭这个模式表单

00:23:44.291 --> 00:23:45.459 align:middle
但是会长时间停留

00:23:45.526 --> 00:23:47.494 align:middle
在此...屏幕之中

00:23:48.996 --> 00:23:50.764 align:middle
从很多方面来看

00:23:51.164 --> 00:23:53.267 align:middle
不应该这样做

00:23:53.901 --> 00:23:56.570 align:middle
前面我说过
即将在层级结构APP中

00:23:56.803 --> 00:23:59.540 align:middle
也不应该将标题视为
"Back"按钮

00:24:00.140 --> 00:24:01.675 align:middle
在这里使用左尖括号

00:24:01.742 --> 00:24:03.010 align:middle
并加上Back字样

00:24:03.343 --> 00:24:05.112 align:middle
会让用户感到困惑

00:24:05.179 --> 00:24:07.781 align:middle
首先 模式表单
屏幕底部向上滑动

00:24:07.848 --> 00:24:09.216 align:middle
而不是从右向左滑动

00:24:09.683 --> 00:24:12.653 align:middle
你不能使用左边缘扫动
退出当前屏幕

00:24:12.920 --> 00:24:15.455 align:middle
当用户看到这种情况
他们会看到十分困惑

00:24:18.325 --> 00:24:20.527 align:middle
第五个常见的陷阱是

00:24:21.195 --> 00:24:23.130 align:middle
在Apple Watch上

00:24:23.530 --> 00:24:24.865 align:middle
使用菜单控件

00:24:24.932 --> 00:24:26.867 align:middle
作为主要的APP导航方式

00:24:28.035 --> 00:24:32.506 align:middle
菜单很适合环境相关操作

00:24:32.840 --> 00:24:34.508 align:middle
例如使用
编辑一条新消息的菜单

00:24:35.242 --> 00:24:37.978 align:middle
对于视图模式首选项
例如日历表APP

00:24:38.045 --> 00:24:40.581 align:middle
可以使用菜单切换
日程表显示外观

00:24:42.316 --> 00:24:43.617 align:middle
但是当你使用菜单

00:24:44.117 --> 00:24:45.052 align:middle
进行导航时

00:24:45.118 --> 00:24:47.287 align:middle
将会造成可用性问题

00:24:48.589 --> 00:24:51.291 align:middle
主要问题是
即使用户可以导航

00:24:51.358 --> 00:24:54.127 align:middle
他们也不知道其在
APP结构中所处的位置

00:24:55.162 --> 00:24:57.130 align:middle
例如 在一个层级结构APP中

00:24:57.598 --> 00:25:00.133 align:middle
这个箭头具有很重要的作用

00:24:57.598 --> 00:25:00.133 align:middle
这个箭头具有很重要的作用

00:25:00.968 --> 00:25:02.436 align:middle
这让用户知道

00:25:02.503 --> 00:25:04.705 align:middle
APP的结构是什么样的

00:25:05.005 --> 00:25:07.074 align:middle
它让用户知道
这是一个层级结构APP

00:25:07.741 --> 00:25:09.676 align:middle
更重要的是 它让用户知道

00:25:09.743 --> 00:25:11.144 align:middle
当前位置是一个子视图

00:25:11.378 --> 00:25:12.980 align:middle
因此他们可以返回

00:25:13.046 --> 00:25:15.115 align:middle
以进行APP导航

00:25:15.849 --> 00:25:17.084 align:middle
这一点很重要

00:25:17.551 --> 00:25:19.520 align:middle
用户必须知道这个基本信息

00:25:20.654 --> 00:25:22.856 align:middle
同样地 在页面模式APP中

00:25:23.056 --> 00:25:24.825 align:middle
屏幕底部的这些圆点

00:25:25.259 --> 00:25:26.093 align:middle
告诉用户

00:25:26.326 --> 00:25:28.195 align:middle
这是一种页面模式结构

00:25:28.862 --> 00:25:31.431 align:middle
并告诉他们有多少个页面

00:25:31.498 --> 00:25:33.734 align:middle
以及他们所处的相对页面位置

00:25:34.067 --> 00:25:36.270 align:middle
并且提醒用户
他们可以通过侧向扫动

00:25:36.336 --> 00:25:37.738 align:middle
在这些页面之间导航

00:25:38.338 --> 00:25:39.173 align:middle
信息很丰富

00:25:39.339 --> 00:25:40.440 align:middle
而且操作也很多

00:25:40.507 --> 00:25:43.076 align:middle
它告诉用户如何与APP
进行交互

00:25:44.378 --> 00:25:46.313 align:middle
如果使用菜单作为导航方法

00:25:46.380 --> 00:25:48.916 align:middle
将不会屏幕图标

00:25:49.183 --> 00:25:50.551 align:middle
来提示如何导航

00:25:51.285 --> 00:25:53.287 align:middle
正如前面我说的
你无法看到关于

00:25:53.353 --> 00:25:54.855 align:middle
是否可以导航的提示

00:25:55.189 --> 00:25:57.991 align:middle
这样 你会觉得
你正在查看的屏幕是

00:25:58.058 --> 00:25:59.626 align:middle
唯一的APP屏幕

00:26:01.828 --> 00:26:03.096 align:middle
因此 最好的方法是

00:26:03.764 --> 00:26:06.900 align:middle
在你的APP中始终使用
直观的层级结构或页面结构

00:26:07.434 --> 00:26:09.403 align:middle
而不要尝试使用菜单导航

00:26:10.737 --> 00:26:12.406 align:middle
下面的内容可能有点偏题

00:26:12.706 --> 00:26:14.141 align:middle
但是它与菜单有关

00:26:14.208 --> 00:26:15.843 align:middle
因此我觉得有必要有说一下

00:26:16.376 --> 00:26:17.978 align:middle
这是我额外给你们
讲解的一种陷阱

00:26:18.078 --> 00:26:20.380 align:middle
你们不需要另外付学费给我

00:26:20.981 --> 00:26:22.015 align:middle
但是我不介意收点小费

00:26:24.318 --> 00:26:26.620 align:middle
如前所述 在菜单中

00:26:27.054 --> 00:26:31.191 align:middle
菜单具有非常明显的外观样式

00:26:32.159 --> 00:26:35.696 align:middle
这里可以看到 按钮有
深色的线性图标

00:26:36.129 --> 00:26:40.367 align:middle
它们位于这些浅灰色圆圈上

00:26:40.667 --> 00:26:41.869 align:middle
它们有浅色的标签

00:26:42.236 --> 00:26:44.037 align:middle
其外观特征是十分明显的

00:26:45.005 --> 00:26:48.308 align:middle
如果你将APP UI
设计成这个样子

00:26:48.675 --> 00:26:50.544 align:middle
可能会让用户感到困惑

00:26:51.411 --> 00:26:53.680 align:middle
他们可能会认为
按显示屏时太用力了

00:26:53.747 --> 00:26:56.116 align:middle
因此才会进入这个屏幕
他们想要查找APP菜单

00:26:56.884 --> 00:26:59.386 align:middle
然后他们意识到
他们并不想导航到任何位置

00:26:59.453 --> 00:27:00.988 align:middle
或在这里进行任何操作

00:26:59.453 --> 00:27:00.988 align:middle
或在这里进行任何操作

00:27:01.054 --> 00:27:02.856 align:middle
因此他们尝试点击空白位置
关闭当前屏幕

00:27:03.090 --> 00:27:04.658 align:middle
但是很显然
这不会有任何反应

00:27:04.725 --> 00:27:05.893 align:middle
因为这并不是在菜单之中

00:27:06.159 --> 00:27:08.428 align:middle
这样 用户感觉你的APP卡住了

00:27:09.096 --> 00:27:11.198 align:middle
这对用户来说
不是良好的使用体验

00:27:11.965 --> 00:27:14.034 align:middle
原则上来说
在你的APP中

00:27:14.368 --> 00:27:15.435 align:middle
使用这样的...

00:27:16.370 --> 00:27:18.472 align:middle
大图标作为导航方式

00:27:18.539 --> 00:27:20.541 align:middle
本身并没有错

00:27:21.041 --> 00:27:23.410 align:middle
但是应该将这些图标

00:27:23.544 --> 00:27:26.146 align:middle
与菜单控件区分开来

00:27:26.747 --> 00:27:29.550 align:middle
不应该使用这些深色图标
和浅灰色背景

00:27:29.616 --> 00:27:30.617 align:middle
而应该尝试加入

00:27:30.884 --> 00:27:32.152 align:middle
你的全局彩色颜色

00:27:32.653 --> 00:27:35.956 align:middle
在这里不应该使用深色图标

00:27:36.023 --> 00:27:39.092 align:middle
而应该使用白色
并且为按钮添加边框

00:27:39.526 --> 00:27:41.762 align:middle
或者进行其他一些区分

00:27:42.229 --> 00:27:44.831 align:middle
应尽量将它们与菜单控件的外观

00:27:45.098 --> 00:27:46.433 align:middle
区分开来

00:27:49.970 --> 00:27:52.506 align:middle
关于菜单就讲到这里
我的讲座部分也到此为止

00:27:52.806 --> 00:27:54.808 align:middle
现在我想邀请我的同事

00:27:54.875 --> 00:27:57.177 align:middle
雷切尔·罗斯上台

00:27:57.644 --> 00:27:58.512 align:middle
有请雷切尔

00:28:00.647 --> 00:28:01.481 align:middle
谢谢米克

00:28:02.516 --> 00:28:03.350 align:middle
大家好

00:28:04.017 --> 00:28:07.154 align:middle
我是雷切尔·罗斯
我也是APPLE的

00:28:07.221 --> 00:28:08.789 align:middle
用户体验主讲师

00:28:09.690 --> 00:28:11.725 align:middle
接下来我会讨论
这个清单上的其它项目

00:28:12.593 --> 00:28:15.195 align:middle
在Apple Watch上
很重要的一点是

00:28:15.262 --> 00:28:17.831 align:middle
让用户能够快速确定
哪些是可点击的

00:28:18.365 --> 00:28:19.833 align:middle
哪些是不可点击的

00:28:20.267 --> 00:28:22.736 align:middle
在这个方面
一个常见的问题是

00:28:22.803 --> 00:28:24.738 align:middle
按钮看起来并不像是按钮

00:28:25.672 --> 00:28:28.141 align:middle
Watch具有自己的设计语言

00:28:28.208 --> 00:28:30.644 align:middle
它并不等同于iOS

00:28:32.079 --> 00:28:35.849 align:middle
在iOS上 我们主要通过
屏幕上的颜色或位置

00:28:35.916 --> 00:28:38.652 align:middle
来告诉我们
某个项目是否可以点击

00:28:39.953 --> 00:28:44.424 align:middle
如果控件位于工具栏或导航栏中

00:28:44.725 --> 00:28:46.760 align:middle
并且具有不同的颜色
用户可以知道

00:28:46.827 --> 00:28:49.129 align:middle
它是可操作项目

00:28:49.663 --> 00:28:50.631 align:middle
比如在这里的地图上

00:28:51.098 --> 00:28:52.332 align:middle
我们知道 角落上的

00:28:52.399 --> 00:28:53.400 align:middle
每个项目都是可点击的

00:28:53.467 --> 00:28:56.270 align:middle
因为它们的位置和颜色
告诉我们这一点

00:28:58.205 --> 00:29:01.175 align:middle
现在 在Apple Watch上
大多数控件

00:28:58.205 --> 00:29:01.175 align:middle
现在 在Apple Watch上
大多数控件

00:29:01.241 --> 00:29:04.178 align:middle
都位于这些圆角矩形
或圈圈之内

00:29:04.745 --> 00:29:06.346 align:middle
这是因为显示屏

00:29:06.413 --> 00:29:07.481 align:middle
空间非常有限

00:29:08.081 --> 00:29:10.851 align:middle
没有专门的区域

00:29:11.151 --> 00:29:14.121 align:middle
来放置导航栏或工具栏

00:29:15.522 --> 00:29:19.193 align:middle
状态栏之外的任何内容
都位于视图之中

00:29:19.426 --> 00:29:22.129 align:middle
因此没有专门的位置来放置控件

00:29:23.597 --> 00:29:27.134 align:middle
通过颜色来指示可操作项目

00:29:27.201 --> 00:29:28.902 align:middle
也有一点困难

00:29:29.102 --> 00:29:30.504 align:middle
因为在
Apple Watch上

00:29:30.571 --> 00:29:31.872 align:middle
页面标题是彩色的

00:29:32.339 --> 00:29:34.241 align:middle
我们使用这种方法来强调

00:29:34.308 --> 00:29:36.143 align:middle
上下文相关性和品牌信息

00:29:37.010 --> 00:29:39.880 align:middle
这也有助于增强可用性
因为标题颜色

00:29:40.280 --> 00:29:42.482 align:middle
让你更容易知道你在哪个APP之中
尤其是当你远距离查看时

00:29:42.549 --> 00:29:44.751 align:middle
你可能在等待公汽
需要转移视线看车来了没有

00:29:44.818 --> 00:29:47.020 align:middle
这种颜色标识有助于你
快速识别内容

00:29:48.055 --> 00:29:50.791 align:middle
这里有两个APP
具有非常相似的内容

00:29:50.924 --> 00:29:53.026 align:middle
左边是Yelp APP

00:29:53.460 --> 00:29:55.896 align:middle
右边是Foursquare APP

00:29:56.830 --> 00:29:58.799 align:middle
它们具有相似的内容

00:29:58.999 --> 00:30:01.435 align:middle
但是Yelp使用红色
作为品牌专用颜色

00:29:58.999 --> 00:30:01.435 align:middle
但是Yelp使用红色
作为品牌专用颜色

00:30:01.502 --> 00:30:03.136 align:middle
Foursquare使用粉色

00:30:03.604 --> 00:30:07.574 align:middle
页面标题颜色让你知道
处在哪个APP之中

00:30:09.543 --> 00:30:10.377 align:middle
同样地

00:30:10.444 --> 00:30:11.845 align:middle
屏幕左侧是Timer

00:30:12.779 --> 00:30:15.582 align:middle
右侧是Runtastic
Six Pack

00:30:16.049 --> 00:30:19.720 align:middle
颜色帮助强化这些APP的身份

00:30:21.221 --> 00:30:22.789 align:middle
许多人说
他们不知道

00:30:22.856 --> 00:30:24.258 align:middle
如何设置颜色

00:30:24.658 --> 00:30:26.760 align:middle
那我们可以
使用Global Tint颜色

00:30:29.296 --> 00:30:31.532 align:middle
在iOS 另一个约定成俗的做法是

00:30:31.598 --> 00:30:34.201 align:middle
为可点击项目添加V形符号

00:30:34.635 --> 00:30:36.870 align:middle
例如 我们在设置行文字标签旁边

00:30:37.771 --> 00:30:42.042 align:middle
和App Store中的开发者
姓名旁边添加这样的符号

00:30:44.745 --> 00:30:48.048 align:middle
但是我们在Apple Watch
中使用这些V形符号

00:30:48.682 --> 00:30:50.250 align:middle
将会占用太多的空间

00:30:51.285 --> 00:30:54.054 align:middle
如果语音留言标签再长一些

00:30:54.121 --> 00:30:56.456 align:middle
或者字体再大一些

00:30:56.823 --> 00:30:59.126 align:middle
将会导致文字缠在一起
或者被截断

00:31:00.594 --> 00:31:02.429 align:middle
而且会看上去杂乱不堪

00:31:02.496 --> 00:31:04.665 align:middle
Apple Watch的屏幕

00:31:05.098 --> 00:31:06.466 align:middle
是非常有限

00:31:06.533 --> 00:31:08.602 align:middle
增加V形符号会影响

00:31:08.669 --> 00:31:10.137 align:middle
图标和文字受到的关注度

00:31:10.437 --> 00:31:12.406 align:middle
而图标和文字所传达的
信息是十分重要的

00:31:13.240 --> 00:31:15.409 align:middle
如果使用圆角矩形

00:31:15.709 --> 00:31:18.946 align:middle
不需要添加V形符号
来表示可交互性

00:31:19.379 --> 00:31:21.148 align:middle
它们明显看上去就是可点击的

00:31:22.850 --> 00:31:25.352 align:middle
在Apple Watch 我们的
另一个惯常做法是

00:31:25.419 --> 00:31:26.987 align:middle
将按钮放入圆圈

00:31:27.588 --> 00:31:28.989 align:middle
如果没有圆圈

00:31:30.123 --> 00:31:32.693 align:middle
这些电话图标看上去
将会比较滑稽

00:31:33.026 --> 00:31:36.597 align:middle
它们看上去更像是状态指示符

00:31:36.663 --> 00:31:38.465 align:middle
或装饰性符号

00:31:39.499 --> 00:31:42.503 align:middle
但是增加圆圈之后 就可以
准确无误地表明它们是按钮

00:31:43.070 --> 00:31:45.239 align:middle
由于交互时间很短

00:31:45.305 --> 00:31:46.640 align:middle
而且需要快速做出决定

00:31:46.707 --> 00:31:50.611 align:middle
我们应该能够让用户
快速进行操作

00:31:50.677 --> 00:31:51.845 align:middle
我看到一个电话

00:31:51.912 --> 00:31:53.180 align:middle
是否接听
还是应该挂掉？

00:31:53.680 --> 00:31:55.916 align:middle
这些圆圈能够明显
指示这两种操作选项

00:31:58.218 --> 00:32:00.120 align:middle
但是它与圆角矩形不一样

00:31:58.218 --> 00:32:00.120 align:middle
但是它与圆角矩形不一样

00:32:00.187 --> 00:32:03.190 align:middle
圆形是一种革命性的新概念

00:32:03.257 --> 00:32:05.592 align:middle
这一点与iOS相似

00:32:06.760 --> 00:32:08.896 align:middle
在iPhone上
当按钮看上去不是很明确时

00:32:08.962 --> 00:32:10.764 align:middle
我们使用圆圈

00:32:12.232 --> 00:32:14.034 align:middle
圆角矩形同样如此

00:32:14.101 --> 00:32:16.503 align:middle
你经常会看到
App Store中的分段控件

00:32:17.271 --> 00:32:19.106 align:middle
和"Buy"按钮使用圆角矩形

00:32:19.907 --> 00:32:22.543 align:middle
如果我们不使用圆角矩形

00:32:22.809 --> 00:32:24.745 align:middle
"Buy"按钮可能看上去并不明显

00:32:24.878 --> 00:32:27.080 align:middle
我们一致认为

00:32:27.381 --> 00:32:28.882 align:middle
应该明确地告诉用户

00:32:28.949 --> 00:32:30.684 align:middle
如何在App Store中
购买APP

00:32:33.220 --> 00:32:35.589 align:middle
因此在Apple Watch上
圆角矩形和圆圈

00:32:35.656 --> 00:32:39.293 align:middle
帮助用户明确理解
哪些项目是可以操作的

00:32:39.826 --> 00:32:42.896 align:middle
而且由于这些交互操作非常简短

00:32:42.963 --> 00:32:45.933 align:middle
如米克所说的那样
你只有几秒钟的时间

00:32:45.999 --> 00:32:48.268 align:middle
比如说一个人举起他的手臂
不一会他感觉有点累了

00:32:48.969 --> 00:32:51.138 align:middle
每一秒都很重要

00:32:52.339 --> 00:32:54.908 align:middle
因此 应该将任何
可点击的项目

00:32:55.242 --> 00:32:57.711 align:middle
放入圆角矩形或圆形

00:32:58.478 --> 00:33:00.047 align:middle
同样重要的是

00:32:58.478 --> 00:33:00.047 align:middle
同样重要的是

00:33:00.113 --> 00:33:02.850 align:middle
不要将这些形状
用于不可点击项目

00:33:03.517 --> 00:33:05.185 align:middle
如果这样做 它们看上去可点击

00:33:05.252 --> 00:33:06.753 align:middle
如果不能 将会让用户感到困惑

00:33:08.322 --> 00:33:11.892 align:middle
在iOS中 有时候
我们使用这些着色背景

00:33:11.992 --> 00:33:13.827 align:middle
来分组具有相似性的项目

00:33:14.995 --> 00:33:18.532 align:middle
因此开发人员可能也想在
Apple Watch上这样做

00:33:18.599 --> 00:33:19.833 align:middle
但是如果你这样做

00:33:20.100 --> 00:33:22.035 align:middle
所有这些项目看起来
都是可点击的

00:33:22.836 --> 00:33:25.873 align:middle
如果用户使用你的APP
并认为这些项目是可点击的

00:33:26.273 --> 00:33:28.208 align:middle
他们尝试点击
而没有任何反应

00:33:28.775 --> 00:33:30.978 align:middle
他们会认为APP存在问题

00:33:31.812 --> 00:33:33.447 align:middle
如果你遇到这样的情况

00:33:33.514 --> 00:33:36.683 align:middle
你最好使用分隔线进行分组

00:33:36.750 --> 00:33:38.785 align:middle
如同我们
在股票APP中所做的那样

00:33:39.887 --> 00:33:41.655 align:middle
这些线条表明
哪些项目是相关的

00:33:41.722 --> 00:33:43.156 align:middle
还可以帮助你

00:33:43.223 --> 00:33:44.925 align:middle
查找不同的水平列表

00:33:46.927 --> 00:33:49.062 align:middle
因此 应该确保
按钮看上去像是按钮

00:33:49.596 --> 00:33:52.933 align:middle
确保不可交互内容
看上去就是不可操作的

00:33:55.369 --> 00:33:57.037 align:middle
这样我们就进入下一个主题

00:33:57.104 --> 00:33:58.972 align:middle
即点击区域不足

00:33:59.540 --> 00:34:02.509 align:middle
发现可交互项目仅是一个开始

00:33:59.540 --> 00:34:02.509 align:middle
发现可交互项目仅是一个开始

00:34:02.576 --> 00:34:04.912 align:middle
但是如果用户不能
轻松地点它们

00:34:05.078 --> 00:34:07.214 align:middle
仍然会存在可用性问题

00:34:08.081 --> 00:34:09.315 align:middle
增强触感设计

00:34:09.382 --> 00:34:11.685 align:middle
是Apple Watch的
一个非常重要的内容

00:34:11.952 --> 00:34:14.121 align:middle
当用户在运动过程中
使用你的APP时

00:34:14.188 --> 00:34:15.589 align:middle
尤其需要注意这一点

00:34:17.123 --> 00:34:19.326 align:middle
在Photoshop
或Sketch中

00:34:19.393 --> 00:34:22.161 align:middle
这些项目看起来很容易使用

00:34:22.462 --> 00:34:25.498 align:middle
你坐在舒适安稳的办公室椅子上

00:34:25.565 --> 00:34:27.601 align:middle
桌上有大屏幕显示器

00:34:29.469 --> 00:34:30.603 align:middle
即使你使用鼠标

00:34:30.670 --> 00:34:32.072 align:middle
在模拟器中操作

00:34:33.106 --> 00:34:34.474 align:middle
也非常容易

00:34:34.708 --> 00:34:36.342 align:middle
但是在Watch上

00:34:37.010 --> 00:34:39.379 align:middle
如果这些项目的尺寸不够大

00:34:39.446 --> 00:34:41.114 align:middle
将很难以进行点击

00:34:43.116 --> 00:34:44.685 align:middle
在Watch上
滚动操作很简单

00:34:44.751 --> 00:34:46.186 align:middle
你可以使用数字表冠

00:34:46.253 --> 00:34:47.920 align:middle
手指扫动操作也很简单

00:34:48.088 --> 00:34:50.757 align:middle
因此不要害怕内容
移出当前视图

00:34:51.658 --> 00:34:54.228 align:middle
尤其是当你可以避免裁剪

00:34:54.527 --> 00:34:56.530 align:middle
和更便于点击按钮

00:34:58.398 --> 00:34:59.666 align:middle
在Apple Watch上

00:34:59.733 --> 00:35:03.937 align:middle
对于42mm规格
圆形控件尺寸

00:34:59.733 --> 00:35:03.937 align:middle
对于42mm规格
圆形控件尺寸

00:35:04.705 --> 00:35:06.240 align:middle
应不低于80xy 80像素

00:35:06.440 --> 00:35:09.543 align:middle
对于38mm规格
应不低于75x75像素

00:35:10.310 --> 00:35:12.379 align:middle
但是更大的尺寸不会带来问题

00:35:13.213 --> 00:35:14.848 align:middle
我们来看
Chipotle的设计

00:35:15.315 --> 00:35:16.950 align:middle
主要操作

00:35:17.217 --> 00:35:19.353 align:middle
也就是设计者想要
用户在Watch app上

00:35:19.419 --> 00:35:21.188 align:middle
执行的操作
是订购玉米煎饼

00:35:21.688 --> 00:35:25.325 align:middle
他们这个漂亮而巨大的
按钮来执行此操作

00:35:25.592 --> 00:35:27.094 align:middle
你将可以毫不费力地

00:35:27.160 --> 00:35:28.495 align:middle
点击这个按钮

00:35:30.931 --> 00:35:33.033 align:middle
现在 对于矩形按钮

00:35:33.734 --> 00:35:38.071 align:middle
在42mm Watch上
其高度绝对不应该小于53像素

00:35:38.405 --> 00:35:42.342 align:middle
在38mm Watch上
不应该小于50像素

00:35:42.709 --> 00:35:43.710 align:middle
但是我们看到

00:35:43.777 --> 00:35:45.412 align:middle
几乎所有系统按钮
都大于这个尺寸

00:35:45.612 --> 00:35:47.581 align:middle
高度通常为80像素
或更大

00:35:48.248 --> 00:35:49.683 align:middle
同样是越大越好

00:35:52.219 --> 00:35:56.190 align:middle
应该始终确保
将按钮扩展到画布的完整宽度

00:35:56.456 --> 00:35:58.125 align:middle
即使标签比较简短

00:35:58.358 --> 00:36:01.528 align:middle
因为这个按钮不如
这个按钮容易点击

00:35:58.358 --> 00:36:01.528 align:middle
因为这个按钮不如
这个按钮容易点击

00:36:02.062 --> 00:36:04.831 align:middle
特别是当你想要出门散步时

00:36:07.301 --> 00:36:10.637 align:middle
在某些情况下
需要并排使用两个按钮

00:36:10.938 --> 00:36:12.539 align:middle
也可以这样做

00:36:13.841 --> 00:36:16.810 align:middle
但是必须使用
非常简短的文本标签

00:36:18.512 --> 00:36:22.482 align:middle
并排设置三个带有文字标签
的按钮是不适当的做法

00:36:23.016 --> 00:36:24.518 align:middle
即使文字极其简短

00:36:25.586 --> 00:36:30.390 align:middle
如果你有单独数字
多个字符或图标

00:36:30.691 --> 00:36:33.560 align:middle
虽然可以并排设置三个

00:36:34.161 --> 00:36:37.064 align:middle
但是这样看上去会很拥挤

00:36:37.464 --> 00:36:39.800 align:middle
尤其是在更小尺寸的Watch上

00:36:39.867 --> 00:36:42.736 align:middle
会让用户无法准确地点击

00:36:44.304 --> 00:36:46.039 align:middle
请绝对不要并排超过三个

00:36:46.106 --> 00:36:47.474 align:middle
并排设置三个以上的按钮

00:36:47.674 --> 00:36:50.377 align:middle
可能导致无法使用

00:36:50.611 --> 00:36:52.045 align:middle
会让用户感到十分不便

00:36:54.014 --> 00:36:56.283 align:middle
因此应该设置较大的点击区域

00:36:56.550 --> 00:36:58.552 align:middle
因为你需要让用户

00:36:58.619 --> 00:37:00.487 align:middle
能够轻松地点击按钮

00:36:58.619 --> 00:37:00.487 align:middle
能够轻松地点击按钮

00:37:02.055 --> 00:37:04.057 align:middle
现在星期五下午
我们将会有一些娱乐活动

00:37:05.792 --> 00:37:08.562 align:middle
接下来
我想讨论易读性

00:37:08.929 --> 00:37:11.498 align:middle
如果不容易阅读显示的内容

00:37:11.565 --> 00:37:13.700 align:middle
将很难使用APP

00:37:14.868 --> 00:37:17.437 align:middle
当你查看Photoshop
或Sketch

00:37:17.504 --> 00:37:20.407 align:middle
甚至模拟器中的字体时
可能会错误地认为

00:37:20.741 --> 00:37:22.442 align:middle
字体很容易识读

00:37:23.177 --> 00:37:24.745 align:middle
你坐在桌子前

00:37:24.811 --> 00:37:27.147 align:middle
面前是大屏幕显示器

00:37:27.281 --> 00:37:30.050 align:middle
而且办公室灯光明亮

00:37:30.984 --> 00:37:32.819 align:middle
在这种环境 显示很正常

00:37:33.353 --> 00:37:34.755 align:middle
但是在Watch

00:37:34.888 --> 00:37:36.290 align:middle
显示效果可能是...

00:37:36.690 --> 00:37:37.524 align:middle
这样的

00:37:38.492 --> 00:37:39.526 align:middle
很难看清楚

00:37:40.127 --> 00:37:42.262 align:middle
当你准备上火车时

00:37:42.329 --> 00:37:44.598 align:middle
抬起手腕
不容易立刻看清

00:37:46.767 --> 00:37:49.269 align:middle
更大的字体更容易识讯

00:37:49.837 --> 00:37:51.805 align:middle
你不会只想在Photoshop

00:37:51.872 --> 00:37:53.507 align:middle
或Sketch或模拟器上查看它们

00:37:53.574 --> 00:37:58.011 align:middle
你需要在手腕上查看
这些APP内容

00:37:59.646 --> 00:38:02.916 align:middle
对于最重要的内容
当用户需要这些内容时

00:37:59.646 --> 00:38:02.916 align:middle
对于最重要的内容
当用户需要这些内容时

00:38:03.417 --> 00:38:05.118 align:middle
必须清晰可见

00:38:05.552 --> 00:38:07.421 align:middle
当你出门办事

00:38:07.487 --> 00:38:09.456 align:middle
或者去赶公交车时

00:38:10.390 --> 00:38:12.492 align:middle
或者当你做仰卧起坐时

00:38:14.661 --> 00:38:17.698 align:middle
或者在晴朗天气跑步锻炼时
能否轻松地识读这些信息？

00:38:18.532 --> 00:38:20.067 align:middle
人们希望能够

00:38:20.133 --> 00:38:22.169 align:middle
迅速看到想要的信息

00:38:23.971 --> 00:38:26.807 align:middle
为了提高易读性
我强烈建议

00:38:26.874 --> 00:38:28.809 align:middle
使用SF Compact字体

00:38:28.876 --> 00:38:30.777 align:middle
这是Apple Watch
系统字体

00:38:31.378 --> 00:38:33.547 align:middle
当然也可以使用自定义字体

00:38:33.614 --> 00:38:37.017 align:middle
但是即使大小合适较细字体

00:38:37.084 --> 00:38:39.987 align:middle
也不如San Francisco
字体容易识读

00:38:41.421 --> 00:38:43.957 align:middle
San Francisco
是专门为了

00:38:44.024 --> 00:38:45.559 align:middle
在现有数字显示屏上

00:38:45.626 --> 00:38:47.294 align:middle
实现最高易读性而设计的

00:38:48.061 --> 00:38:51.265 align:middle
我可以介绍很多

00:38:51.331 --> 00:38:53.834 align:middle
关于此字体设计的背后故事

00:38:53.901 --> 00:38:56.436 align:middle
但是你最好还是自己

00:38:56.803 --> 00:38:58.172 align:middle
去听字体设计团队的讲述

00:38:58.238 --> 00:39:00.107 align:middle
如果你没有参加
之前在这里举行的讲座

00:38:58.238 --> 00:39:00.107 align:middle
如果你没有参加
之前在这里举行的讲座

00:39:00.174 --> 00:39:02.609 align:middle
我强烈建议你观看在线视频

00:39:02.676 --> 00:39:05.345 align:middle
这个讲座详细介绍了

00:39:05.412 --> 00:39:07.247 align:middle
此字体开发过程中
一些非常有趣的事情

00:39:08.382 --> 00:39:11.151 align:middle
使用系统字体的最好方法

00:39:11.218 --> 00:39:13.020 align:middle
是使用系统字体样式

00:39:13.220 --> 00:39:15.489 align:middle
这样你可以利用
Dynamic Type的好处

00:39:17.291 --> 00:39:19.660 align:middle
当用户调整他们
喜欢的字体大小时

00:39:19.726 --> 00:39:21.528 align:middle
Dynamic Type
可以比例缩放

00:39:24.598 --> 00:39:27.167 align:middle
如果用户更改他们
喜欢的字体大小

00:39:27.234 --> 00:39:29.870 align:middle
而你的APP不能调节
以符合他们的设置

00:39:30.470 --> 00:39:32.840 align:middle
他们将会感到失望
更糟糕的是

00:39:33.207 --> 00:39:35.309 align:middle
他们可能会根本
无法使用你的APP

00:39:36.443 --> 00:39:38.812 align:middle
实施Dynamic Type很简单

00:39:39.213 --> 00:39:40.614 align:middle
你只需要使用这里的

00:39:40.681 --> 00:39:42.382 align:middle
五个文本样式中的
其中一个样式

00:39:44.751 --> 00:39:47.888 align:middle
然后 对于用户指定的
每个文字设置

00:39:48.322 --> 00:39:50.624 align:middle
系统将会调整多个属性

00:39:50.691 --> 00:39:54.294 align:middle
确保最优的易读性
和版式完整性

00:39:56.263 --> 00:39:57.497 align:middle
我们调整大小

00:40:01.034 --> 00:40:02.836 align:middle
我们还调整前导格式

00:40:03.670 --> 00:40:06.139 align:middle
这是文字行之间的垂直间隙

00:40:08.408 --> 00:40:09.710 align:middle
我们调整跟踪

00:40:10.110 --> 00:40:11.678 align:middle
即字符之间的间隔

00:40:15.816 --> 00:40:17.584 align:middle
如果你使用自定义字体

00:40:17.651 --> 00:40:20.420 align:middle
将必须手动进行
所有这些大小调整

00:40:23.290 --> 00:40:25.993 align:middle
如前所术这 我们有五种样式

00:40:26.059 --> 00:40:27.828 align:middle
<br/>
即Headline、 Body、

00:40:27.895 --> 00:40:30.364 align:middle
Caption1、 Caption2
和 Footnote

00:40:31.164 --> 00:40:33.867 align:middle
这称为Footnote是有原因的

00:40:34.401 --> 00:40:37.037 align:middle
不要因为它看上去较小

00:40:37.104 --> 00:40:39.373 align:middle
而将它用于你的有文字内容

00:40:42.109 --> 00:40:44.678 align:middle
对于任何Watch内容和项目
都是越大越好

00:40:44.745 --> 00:40:46.413 align:middle
尤其是字体

00:40:48.916 --> 00:40:51.952 align:middle
前面迈克讲过 我们尽量

00:40:52.052 --> 00:40:54.488 align:middle
模糊硬件和软件之间的界线

00:40:54.555 --> 00:40:55.989 align:middle
在Apple Watch上

00:40:56.323 --> 00:40:58.892 align:middle
明亮的背景颜色

00:40:58.959 --> 00:41:01.128 align:middle
和
不必要的衬边

00:40:58.959 --> 00:41:01.128 align:middle
和
不必要的衬边

00:41:01.195 --> 00:41:03.297 align:middle
更容易突显出这种界线

00:41:04.998 --> 00:41:07.267 align:middle
这让人突然屏幕很小

00:41:07.334 --> 00:41:09.303 align:middle
而且所有内容都堆积在中间

00:41:10.437 --> 00:41:12.606 align:middle
Apple Watch
的屏幕尺寸很小

00:41:12.673 --> 00:41:16.009 align:middle
你需要为你的内容精打细算
充分利用每个像素

00:41:16.677 --> 00:41:18.212 align:middle
不要将空间浪费给衬边

00:41:19.479 --> 00:41:21.882 align:middle
亮色的背景不可取

00:41:21.949 --> 00:41:24.284 align:middle
因为大多数平台区域是黑色

00:41:24.351 --> 00:41:26.053 align:middle
<br/>
亮色背景给人以冲击感

00:41:26.687 --> 00:41:29.656 align:middle
而且 状态栏的颜色是无法更改的

00:41:29.723 --> 00:41:32.359 align:middle
因此它始终显示为黑色

00:41:32.726 --> 00:41:34.561 align:middle
这样 内容显示区域

00:41:34.628 --> 00:41:36.029 align:middle
就会变得更小

00:41:37.698 --> 00:41:40.367 align:middle
我看到很多人将图片

00:41:40.434 --> 00:41:43.036 align:middle
放在背景之中
让他们的APP变得更加有趣

00:41:43.971 --> 00:41:47.841 align:middle
有时候可以这样做
但更多时候不应该这样做

00:41:48.141 --> 00:41:50.110 align:middle
这会让用户忽略内容

00:41:51.178 --> 00:41:53.714 align:middle
这会增加文件大小
因为你需要更多的图片

00:41:53.780 --> 00:41:57.417 align:middle
从而延长启动时间
就如迈克刚才所说的那样

00:41:58.185 --> 00:42:00.387 align:middle
而且让文字更不容易识读

00:41:58.185 --> 00:42:00.387 align:middle
而且让文字更不容易识读

00:42:01.154 --> 00:42:02.122 align:middle
另外 交互操作时间

00:42:02.189 --> 00:42:04.825 align:middle
是非常短的

00:42:05.259 --> 00:42:06.927 align:middle
你必须尽量消除

00:42:06.994 --> 00:42:08.462 align:middle
防碍交互操作的事情

00:42:09.229 --> 00:42:11.698 align:middle
在Watch上 几秒钟的时间

00:42:11.765 --> 00:42:13.200 align:middle
都是非常宝贵的

00:42:15.035 --> 00:42:18.405 align:middle
虽然在Photosh中
缺少衬边看上去

00:42:18.472 --> 00:42:21.041 align:middle
会非常不舒服

00:42:21.909 --> 00:42:24.478 align:middle
但是在Watch上却很好

00:42:24.545 --> 00:42:26.046 align:middle
这是因为表盘的缘故

00:42:26.613 --> 00:42:28.615 align:middle
表盘就像是衬边

00:42:29.383 --> 00:42:31.385 align:middle
我的意思是
你并不需要加入衬边

00:42:31.585 --> 00:42:34.821 align:middle
你可以将这个屏幕资产

00:42:34.888 --> 00:42:37.858 align:middle
用于内容和控件
从而减少裁剪

00:42:37.925 --> 00:42:39.226 align:middle
和文字重叠

00:42:40.794 --> 00:42:42.329 align:middle
几分钟前我说过

00:42:42.396 --> 00:42:45.299 align:middle
侧对侧按钮更容易点击

00:42:46.867 --> 00:42:48.502 align:middle
如果你的APP使用黑色背景

00:42:48.569 --> 00:42:50.771 align:middle
将会与表盘无缝融为一体

00:42:51.104 --> 00:42:52.606 align:middle
感觉是硬件的组成部分

00:42:54.041 --> 00:42:55.242 align:middle
用户更容易

00:42:55.309 --> 00:42:57.945 align:middle
将注意力放到你的APP上

00:42:59.079 --> 00:43:01.949 align:middle
但是 这并不意味
你的APP变得单调

00:42:59.079 --> 00:43:01.949 align:middle
但是 这并不意味
你的APP变得单调

00:43:02.683 --> 00:43:04.751 align:middle
有很多种方法来传达
品牌宣传信息

00:43:04.818 --> 00:43:06.687 align:middle
和添加个性化项目

00:43:06.753 --> 00:43:08.722 align:middle
而不必依赖于彩色背景

00:43:10.290 --> 00:43:11.859 align:middle
让我们来看一些很不错的例子

00:43:11.925 --> 00:43:15.462 align:middle
Hailo是英国流行的
的士打车APP

00:43:15.963 --> 00:43:18.732 align:middle
在这个APP中 全程可以看到

00:43:18.966 --> 00:43:22.135 align:middle
明亮的黄色和可爱的汽车图标

00:43:24.471 --> 00:43:28.342 align:middle
Citymapper APP
使用黄色来作为品牌颜色

00:43:28.809 --> 00:43:31.445 align:middle
他们使用Citymapper
图标集作为载入图片

00:43:31.512 --> 00:43:34.081 align:middle
但是最重要的是

00:43:34.348 --> 00:43:36.416 align:middle
这些图标传达出

00:43:36.483 --> 00:43:37.518 align:middle
他们为人所知的幽默感

00:43:38.151 --> 00:43:40.754 align:middle
在有些地方
需要为用户提供指示

00:43:40.821 --> 00:43:43.590 align:middle
这里的机场选项
在这方面做得很好

00:43:46.059 --> 00:43:48.095 align:middle
Rules！ 是一个
非常有趣的记忆游戏

00:43:48.161 --> 00:43:50.631 align:middle
他们使用iPhone APP中

00:43:50.697 --> 00:43:53.734 align:middle
贯穿始终的背景材质
并将它转化成为

00:43:53.800 --> 00:43:56.570 align:middle
Apple Watch
上的按钮材质

00:43:57.171 --> 00:44:00.374 align:middle
另外 还使用这些可爱的人物

00:43:57.171 --> 00:44:00.374 align:middle
另外 还使用这些可爱的人物

00:44:00.440 --> 00:44:02.242 align:middle
生动有趣的动画

00:44:02.309 --> 00:44:04.645 align:middle
这样的APP绝对不会感到无聊

00:44:04.711 --> 00:44:06.413 align:middle
也不会与其他APP混淆

00:44:11.285 --> 00:44:14.688 align:middle
当然 你也可以使用

00:44:15.789 --> 00:44:18.592 align:middle
其他可用的方法
让你的APP变得生动有趣

00:44:20.093 --> 00:44:22.429 align:middle
因此 应避免使用
明亮背景作为装饰

00:44:22.930 --> 00:44:24.331 align:middle
而且不应该
将它们嵌入你的内容

00:44:24.498 --> 00:44:26.900 align:middle
应该让表盘来做这些事情

00:44:31.205 --> 00:44:34.474 align:middle
但是 归根结底
如果用户不能立即

00:44:34.541 --> 00:44:37.477 align:middle
找到你的APP
所有这一切都将失去意义

00:44:39.713 --> 00:44:43.350 align:middle
与iOS不同 Apple
Watch图标没有标签

00:44:43.684 --> 00:44:45.452 align:middle
因此十分重要的一点是

00:44:45.519 --> 00:44:48.088 align:middle
用户应该能够
通过图标找到你的APP

00:44:48.956 --> 00:44:51.024 align:middle
毫无疑问 你会注意到

00:44:51.258 --> 00:44:55.128 align:middle
Watch App图标是圆形
而且明显更小

00:44:55.863 --> 00:44:58.532 align:middle
这会带来设计上的挑战

00:45:00.667 --> 00:45:04.972 align:middle
这里的大多数Watch
App图标你应该不会感到陌生

00:45:05.038 --> 00:45:07.374 align:middle
因为你的iPhone上也有
这些APP图标

00:45:09.109 --> 00:45:12.079 align:middle
将你的Apple Watch图标

00:45:12.312 --> 00:45:14.414 align:middle
与iOS图标完全保持一致

00:45:14.481 --> 00:45:16.517 align:middle
可以让用户更快地
在Watch上找到APP

00:45:19.520 --> 00:45:22.589 align:middle
Citymapper
Nike+ Running

00:45:22.689 --> 00:45:26.326 align:middle
和Procreate都是直接将
他们的App图标

00:45:26.393 --> 00:45:28.161 align:middle
直接转换为Apple
Watch图标

00:45:28.228 --> 00:45:30.397 align:middle
因为这些图标的形状非常简单

00:45:30.464 --> 00:45:32.432 align:middle
在圆形格式下也很容易识别

00:45:33.534 --> 00:45:35.702 align:middle
但是有时候
进行这种转换存在困难

00:45:36.303 --> 00:45:38.172 align:middle
为此 我向你们介绍一些技术

00:45:38.238 --> 00:45:42.543 align:middle
帮助你修改App图标

00:45:42.776 --> 00:45:45.179 align:middle
在小圆圈中也容易识别

00:45:46.847 --> 00:45:48.148 align:middle
首先要做的事情是

00:45:48.215 --> 00:45:50.851 align:middle
尽可能简单化

00:45:51.185 --> 00:45:53.887 align:middle
可以移除哪些内容

00:45:53.954 --> 00:45:55.556 align:middle
而不影响APP中的品牌识别？

00:45:57.524 --> 00:45:58.659 align:middle
首先从文字开始

00:45:58.725 --> 00:46:02.462 align:middle
小字号的文字更难以识读

00:45:58.725 --> 00:46:02.462 align:middle
小字号的文字更难以识读

00:46:02.896 --> 00:46:04.798 align:middle
是否可以消除全部文字？

00:46:05.966 --> 00:46:07.067 align:middle
Yelp正是这样做的

00:46:07.901 --> 00:46:10.938 align:middle
他们的醒目图标和标志性红色

00:46:11.004 --> 00:46:12.506 align:middle
足以让APP容易识别

00:46:14.808 --> 00:46:18.812 align:middle
然后 我们开始消除文字
如果不能消除文字

00:46:19.012 --> 00:46:20.013 align:middle
可以考虑使用缩写

00:46:22.316 --> 00:46:24.484 align:middle
如果你的图标含有丰富信息

00:46:24.551 --> 00:46:28.589 align:middle
可以考虑进行简化
因为这会让小尺寸的图标

00:46:28.655 --> 00:46:30.190 align:middle
更容易识读

00:46:31.825 --> 00:46:35.395 align:middle
以愤怒的小鸟为例
我们很多人都认识它

00:46:36.330 --> 00:46:39.533 align:middle
把它按比例缩小
并放入圆圈的做法

00:46:39.600 --> 00:46:41.535 align:middle
在Apple Watch
上并不太合适 .

00:46:41.902 --> 00:46:45.606 align:middle
这些白色的空白区域
看上去很别扭

00:46:45.672 --> 00:46:47.274 align:middle
不应该这样显示

00:46:48.542 --> 00:46:51.645 align:middle
因此 Iconfactory团队
重新绘制这个小鸟图标

00:46:51.712 --> 00:46:53.380 align:middle
以更好地在小圆圈中显示

00:46:53.981 --> 00:46:55.916 align:middle
现在 你看到它正在瞪着你

00:46:56.617 --> 00:46:59.386 align:middle
很多特征已经被减化
或者被移除

00:47:00.354 --> 00:47:02.956 align:middle
鸟嘴上的鼻孔不见了

00:47:03.023 --> 00:47:06.393 align:middle
羽毛和眉毛也变得更简单

00:47:08.629 --> 00:47:11.231 align:middle
在小尺寸下 含有大量细节的

00:47:11.298 --> 00:47:15.035 align:middle
复杂形状更难以看清
应该尽可能进行简化

00:47:17.271 --> 00:47:20.174 align:middle
另外 除非有令人信服务的理由

00:47:20.240 --> 00:47:22.476 align:middle
需要放弃当前的色彩模式

00:47:22.843 --> 00:47:24.745 align:middle
否则应该保留当前的色彩方案

00:47:24.811 --> 00:47:26.380 align:middle
和整体视觉样式

00:47:27.281 --> 00:47:29.783 align:middle
颜色是一个非常重要的
品牌元素

00:47:29.850 --> 00:47:31.952 align:middle
能够非常有效地

00:47:32.019 --> 00:47:34.021 align:middle
帮助用户找到
你的App图标

00:47:36.156 --> 00:47:39.326 align:middle
如果消息突然用红色显示
将会怎么样？

00:47:40.894 --> 00:47:43.730 align:middle
你可能会认为
这是一个不同的APP

00:47:44.231 --> 00:47:46.433 align:middle
或者是beta版本或试用版本

00:47:48.035 --> 00:47:51.305 align:middle
我们来看Fanatee
如何简化他们的

00:47:51.371 --> 00:47:53.340 align:middle
游戏Letter Zap
的APP图标

00:47:54.708 --> 00:47:56.176 align:middle
他们移除了文字

00:47:56.243 --> 00:47:59.246 align:middle
因为小字体文字
在Watch上不易识读

00:47:59.713 --> 00:48:03.050 align:middle
而且他们放大了闪电图标
但是 更重要的是

00:47:59.713 --> 00:48:03.050 align:middle
而且他们放大了闪电图标
但是 更重要的是

00:48:03.116 --> 00:48:05.185 align:middle
他们保留了绿色和金色
色彩设计

00:48:05.252 --> 00:48:07.387 align:middle
从而让APP非常容易识别

00:48:09.323 --> 00:48:13.660 align:middle
即便如此 还是会有人认为
放弃使用很久的文字

00:48:13.727 --> 00:48:16.129 align:middle
或更改使用很久的图标
是一件冒险的事情

00:48:16.463 --> 00:48:19.600 align:middle
但是 只要保留APP图标的
整体颜色和视觉样式

00:48:19.666 --> 00:48:23.170 align:middle
APP还是容易识别的

00:48:25.172 --> 00:48:28.475 align:middle
正如迈克前面所说的那样
你的目标不是在Watch上

00:48:28.542 --> 00:48:31.745 align:middle
提供iPhone APP
的全部功能

00:48:31.812 --> 00:48:35.949 align:middle
因此 有时候使用
完全相同的App图标

00:48:36.016 --> 00:48:37.551 align:middle
可能并不合适

00:48:38.619 --> 00:48:40.087 align:middle
WatchAPP应该

00:48:40.621 --> 00:48:45.692 align:middle
为iPhone提供补充功能
因此 补充性Watch App

00:48:45.759 --> 00:48:47.361 align:middle
图标思想可能更为合适

00:48:49.463 --> 00:48:52.466 align:middle
前面我们讲到过
iPhone照相机APP

00:48:52.533 --> 00:48:55.102 align:middle
提供不计其数的功能

00:48:55.169 --> 00:48:57.404 align:middle
你可以拍摄照片
编辑和分享照片

00:48:58.038 --> 00:49:00.073 align:middle
但是在Watch
APP仅用作一个

00:48:58.038 --> 00:49:00.073 align:middle
但是在Watch
APP仅用作一个

00:49:00.140 --> 00:49:01.675 align:middle
快门按钮遥控器

00:49:03.177 --> 00:49:06.013 align:middle
因此 虽然我们可以直接使用
这个App图标 将它放入圆圈

00:49:06.079 --> 00:49:08.682 align:middle
就此了事 但是
这给人的感觉并不太好

00:49:10.217 --> 00:49:12.986 align:middle
相反 我们应该运用
补充功能思维

00:49:13.954 --> 00:49:17.958 align:middle
这仍然是一个容易识别的相机图标
但是一些材质细节更简单

00:49:18.025 --> 00:49:20.861 align:middle
保留了原有的色彩方案

00:49:21.195 --> 00:49:23.263 align:middle
并且着重强调快门按钮

00:49:23.330 --> 00:49:25.199 align:middle
因为这是APP的功能

00:49:25.599 --> 00:49:27.000 align:middle
即按下快门按钮

00:49:29.369 --> 00:49:31.905 align:middle
另一个典型的例子
是Sky Guide

00:49:33.173 --> 00:49:35.209 align:middle
将图标遮罩放入圆圈

00:49:35.275 --> 00:49:37.444 align:middle
并不是合适的做法
让识别变更困难

00:49:37.511 --> 00:49:40.647 align:middle
这种做法不合适的原因

00:49:40.714 --> 00:49:43.784 align:middle
在于APP的功能

00:49:44.785 --> 00:49:46.887 align:middle
在iPhone上
Sky Guide

00:49:46.954 --> 00:49:49.256 align:middle
告诉你想要观察的一切内容

00:49:49.389 --> 00:49:51.458 align:middle
在星空中 我现在能看到什么？

00:49:52.359 --> 00:49:54.895 align:middle
但是在Watch上
它的功能是提醒你

00:49:54.962 --> 00:49:57.030 align:middle
你所在区域有哪些天文现象

00:49:57.497 --> 00:49:59.466 align:middle
比如国际空间站将会

00:49:59.533 --> 00:50:01.235 align:middle
飞掠你所在的空域

00:49:59.533 --> 00:50:01.235 align:middle
飞掠你所在的空域

00:50:02.836 --> 00:50:05.105 align:middle
因此他们运用前面所说的
补充性App图标概念

00:50:05.172 --> 00:50:08.876 align:middle
这样的图标在圆圈中
看起来很不错

00:50:08.942 --> 00:50:11.111 align:middle
而且暗示天文事件

00:50:12.713 --> 00:50:15.382 align:middle
而且 他们使用相似的色彩设计

00:50:15.449 --> 00:50:18.285 align:middle
和视觉样式
因此相互关系十分清楚

00:50:20.587 --> 00:50:22.656 align:middle
如果你在想方设法
修改你的iOS图标

00:50:22.723 --> 00:50:25.325 align:middle
以运用于Apple Watch
你可以尝试使用这些方法

00:50:26.426 --> 00:50:28.729 align:middle
这些Apple Watch图标

00:50:28.795 --> 00:50:30.631 align:middle
与对应的iOS并不一样

00:50:30.697 --> 00:50:33.967 align:middle
但是相似度是十分明显的

00:50:34.034 --> 00:50:36.670 align:middle
因此 APP很容易找到

00:50:37.671 --> 00:50:42.509 align:middle
前面我多次讲到 Watch图标

00:50:42.576 --> 00:50:45.846 align:middle
和iOS图标不必完全相同

00:50:45.913 --> 00:50:48.048 align:middle
但是需要具有相似性

00:50:50.450 --> 00:50:52.853 align:middle
这样 今天的内容全部讲完了

00:50:53.954 --> 00:50:56.123 align:middle
在你们设计Watch时

00:50:56.190 --> 00:50:58.592 align:middle
我希望
这些技术成为你们的有用工具

00:50:58.659 --> 00:51:01.962 align:middle
从而能够避免一些
常见的可用性陷阱

00:50:58.659 --> 00:51:01.962 align:middle
从而能够避免一些
常见的可用性陷阱

00:51:02.729 --> 00:51:04.565 align:middle
我们已经看到

00:51:04.665 --> 00:51:07.901 align:middle
一些非常不错的Watch APP

00:51:07.968 --> 00:51:10.470 align:middle
我期望你们能够

00:51:10.537 --> 00:51:12.272 align:middle
为watchOS 2
开发优秀的APP

00:51:13.540 --> 00:51:16.143 align:middle
本周我们举行了很多场次的讲座

00:51:16.210 --> 00:51:18.712 align:middle
今天上举行的
“WatchKit技巧与陷阱讲座”

00:51:18.779 --> 00:51:20.914 align:middle
非常有价值

00:51:21.548 --> 00:51:23.951 align:middle
网上有大量的资料

00:51:24.084 --> 00:51:26.220 align:middle
尤其是关于
“设计优质APP页面”

00:51:26.987 --> 00:51:29.790 align:middle
本周真是成果丰富

00:51:29.857 --> 00:51:32.926 align:middle
我希望你们有所收获

00:51:33.360 --> 00:51:35.295 align:middle
后面还有多场讲座

00:51:35.362 --> 00:51:37.431 align:middle
希望你们能够参加

00:51:37.531 --> 00:51:40.534 align:middle
我们明年将会再见
谢谢
