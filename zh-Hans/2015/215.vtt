WEBVTT

00:00:19.586 --> 00:00:24.625 align:middle
故事板中的新改进

00:00:31.565 --> 00:00:32.399 align:middle
早上好

00:00:33.267 --> 00:00:35.235 align:middle
大家周四快乐

00:00:35.736 --> 00:00:39.339 align:middle
恭喜
在这周这个时候的早上九点开会

00:00:40.541 --> 00:00:43.076 align:middle
去年我也坐在你们坐的位置上
我相当清楚是多么艰难

00:00:46.980 --> 00:00:50.384 align:middle
今天我们来说一些进步
我们在故事板中所取得的

00:00:51.151 --> 00:00:54.354 align:middle
只是帮助大家热身为一整天做好准备

00:00:54.788 --> 00:00:56.623 align:middle
我要在这里想问问大家

00:00:57.324 --> 00:00:59.026 align:middle
这里有多少人安装过

00:00:59.426 --> 00:01:00.661 align:middle
使用故事板的应用？

00:00:59.426 --> 00:01:00.661 align:middle
使用故事板的应用？

00:01:02.729 --> 00:01:03.964 align:middle
很多人

00:01:06.366 --> 00:01:08.936 align:middle
这里多少人曾经可能试着使用故事板

00:01:09.002 --> 00:01:10.804 align:middle
或者想着使用故事板

00:01:10.871 --> 00:01:15.142 align:middle
但是团队却决定这不是理想的方式

00:01:15.642 --> 00:01:16.476 align:middle
至少现在不是

00:01:17.511 --> 00:01:18.345 align:middle
好

00:01:20.614 --> 00:01:23.750 align:middle
这里多少人之前从来没有
使用过故事板

00:01:25.719 --> 00:01:27.588 align:middle
哇 你们都是一群老手了

00:01:28.956 --> 00:01:29.790 align:middle
好的

00:01:31.024 --> 00:01:33.961 align:middle
今天我们将集中在三个主要方面

00:01:34.361 --> 00:01:36.897 align:middle
首先我们要谈论我们添加的新特性

00:01:36.964 --> 00:01:39.399 align:middle
来帮助大家组织大家的故事板
让它们便于管理

00:01:40.167 --> 00:01:42.903 align:middle
接着我们会谈谈
自定义标准segueway的方法

00:01:43.003 --> 00:01:45.873 align:middle
Interface Builder为大家提供的方法

00:01:46.507 --> 00:01:50.611 align:middle
最后是
可能会是稍微高端的特性

00:01:50.878 --> 00:01:54.848 align:middle
展开segueway的方法
以及我们怎样取得进步

00:01:54.915 --> 00:01:58.452 align:middle
关于你们在IOS中使用的
自定义container视图

00:02:00.754 --> 00:02:01.622 align:middle
接下来我们开始吧

00:02:03.991 --> 00:02:05.792 align:middle
这里我们有一个很简单的应用演示

00:02:05.859 --> 00:02:07.794 align:middle
就是一个视图集展示一系列

00:02:07.861 --> 00:02:09.963 align:middle
导航控制器内部的图片

00:02:10.497 --> 00:02:14.568 align:middle
如果点击一张就会展示在屏幕上

00:02:15.602 --> 00:02:16.837 align:middle
再轻击一下返回按钮

00:02:16.904 --> 00:02:19.173 align:middle
在左上角就消失了

00:02:23.810 --> 00:02:28.148 align:middle
用户界面的三个部分对应

00:02:28.215 --> 00:02:31.118 align:middle
三个运行期间的视图控制器实例

00:02:32.319 --> 00:02:34.288 align:middle
如果我用图解法表示这个应用

00:02:34.354 --> 00:02:36.490 align:middle
在一张纸上我可能这样做

00:02:36.957 --> 00:02:39.993 align:middle
用盒子代表视图控制器

00:02:40.661 --> 00:02:44.097 align:middle
然后在它们之间连线
来表示他们之间的流动

00:02:44.164 --> 00:02:45.199 align:middle
通过我的应用

00:02:47.067 --> 00:02:49.469 align:middle
这就是故事板捕捉到的信息

00:02:49.536 --> 00:02:51.171 align:middle
让你在运行时刻使用

00:02:53.273 --> 00:02:54.975 align:middle
这里有一些专业的术语

00:02:55.042 --> 00:02:56.376 align:middle
与故事板相关

00:02:56.543 --> 00:02:59.079 align:middle
这些盒子在这里已经变成了圈圈

00:02:59.179 --> 00:03:02.282 align:middle
我们称为情景 它们作为样板

00:02:59.179 --> 00:03:02.282 align:middle
我们称为情景 它们作为样板

00:03:02.349 --> 00:03:04.051 align:middle
对视图控制器而言

00:03:04.117 --> 00:03:05.752 align:middle
其实这就组成了运行时候的用户界面

00:03:07.521 --> 00:03:09.723 align:middle
这些线我们称为segueway

00:03:10.390 --> 00:03:12.826 align:middle
这里还有一些

00:03:13.527 --> 00:03:17.030 align:middle
不同类型的segueway
segueway和导航控制器

00:03:17.097 --> 00:03:18.866 align:middle
以及视图集控制器之间的关系是

00:03:18.932 --> 00:03:21.034 align:middle
一种segueway
叫segueway关系

00:03:21.101 --> 00:03:24.838 align:middle
很明显 集合视图控制器

00:03:25.005 --> 00:03:27.574 align:middle
在navigation
stack的根文件

00:03:27.641 --> 00:03:29.142 align:middle
被导航控制器所控制

00:03:31.044 --> 00:03:33.614 align:middle
另一种segueway是
触发segueway

00:03:33.680 --> 00:03:36.817 align:middle
这个主要当我轻击

00:03:36.884 --> 00:03:38.519 align:middle
集合中某一单元时

00:03:38.585 --> 00:03:41.788 align:middle
展现的图片视图控制器
使用的是语义定义上的

00:03:41.855 --> 00:03:43.457 align:middle
展示视图控制器的方法

00:03:47.261 --> 00:03:49.229 align:middle
实际上 我们把它们放在

00:03:49.296 --> 00:03:53.300 align:middle
故事板文件中时
我们可以给文件进行标识

00:03:54.568 --> 00:03:56.770 align:middle
然后在interface
Builder中设置

00:03:56.837 --> 00:03:59.573 align:middle
在Xcode中
就像程序中我们的主要界面文件一样

00:04:00.174 --> 00:04:01.175 align:middle
接着我们运行应用

00:04:01.842 --> 00:04:03.177 align:middle
发生的第一件事

00:04:03.243 --> 00:04:05.913 align:middle
就是触发在我们故事板最初情景中的

00:04:05.979 --> 00:04:08.682 align:middle
一个导航控制器

00:04:09.716 --> 00:04:12.085 align:middle
我们看到这里有一种确定的关系

00:04:12.152 --> 00:04:13.487 align:middle
在导航控制器上

00:04:16.456 --> 00:04:19.326 align:middle
所以我们在segueway的另一端

00:04:19.927 --> 00:04:22.196 align:middle
触发视图控制器然后我们建立了联系

00:04:22.829 --> 00:04:24.598 align:middle
是通过segueway定义的

00:04:24.865 --> 00:04:26.867 align:middle
在navigation
stack的根文件

00:04:28.402 --> 00:04:31.405 align:middle
接着 用户使用应用

00:04:31.705 --> 00:04:36.376 align:middle
他们轻击某一集视图单元
并执行segueway

00:04:36.443 --> 00:04:38.011 align:middle
在这里我们已经标注过

00:04:38.245 --> 00:04:40.013 align:middle
这就是之前展示的segueway

00:04:41.882 --> 00:04:44.618 align:middle
我们例示视图控制器
在segueway另一端建立起联系

00:04:45.419 --> 00:04:49.756 align:middle
我们展示segueway定义的动作

00:04:50.624 --> 00:04:52.893 align:middle
在设计应用时

00:04:52.960 --> 00:04:55.495 align:middle
和在执行应用时

00:04:55.562 --> 00:04:57.564 align:middle
你的界面变得更加复杂
你的故事板也是如此

00:04:58.165 --> 00:05:00.000 align:middle
最后为了易于控制这些

00:05:00.067 --> 00:05:02.736 align:middle
就像你分解你源代码到多个文件中一样

00:05:03.237 --> 00:05:05.506 align:middle
你可以分解你的故事板到多个文件中

00:05:06.573 --> 00:05:09.510 align:middle
但是我们不能在文件之间
建立segueway

00:05:10.677 --> 00:05:13.547 align:middle
回到代码层面

00:05:13.614 --> 00:05:15.282 align:middle
我们可以示范二级故事板

00:05:16.583 --> 00:05:20.454 align:middle
我们可以在该故事板的情景中

00:05:22.523 --> 00:05:24.658 align:middle
触发视图控制器

00:05:24.725 --> 00:05:27.461 align:middle
或者我们已经看不到情景之间的联系

00:05:28.629 --> 00:05:30.831 align:middle
我们真正想做的是让箭头反过来

00:05:33.033 --> 00:05:34.902 align:middle
这就是在Xcode 7中为大家做的

00:05:34.968 --> 00:05:37.337 align:middle
这个新特性我们称为故事板的引用

00:05:44.178 --> 00:05:47.314 align:middle
所以正如你们所知大家都应该
为托尼鼓掌因为他几乎做了

00:05:47.381 --> 00:05:48.949 align:middle
关于故事版的所有事情

00:05:50.150 --> 00:05:51.785 align:middle
一个故事板

00:05:51.852 --> 00:05:54.821 align:middle
可以与另一情景关联
而且这个情景可以在

00:05:54.888 --> 00:05:57.658 align:middle
同一个故事板中存在
或者另一个故事板中存在

00:05:59.593 --> 00:06:01.862 align:middle
就像任何情景 它可以

00:05:59.593 --> 00:06:01.862 align:middle
就像任何情景 它可以

00:06:02.296 --> 00:06:05.899 align:middle
是任何segueway的最后终点

00:06:07.968 --> 00:06:09.736 align:middle
这就是需要说的所有 所以我愿意

00:06:09.937 --> 00:06:12.706 align:middle
请托尼上来
为大家展示如何使用Xcode

00:06:12.773 --> 00:06:15.843 align:middle
轻松办到在OS X10 11系统
IOS9系统和watchOS

00:06:15.909 --> 00:06:18.979 align:middle
组织你的故事板

00:06:20.581 --> 00:06:21.715 align:middle
谢谢 凯尔

00:06:25.385 --> 00:06:28.488 align:middle
早上好 我是托尼 就职于
Intrface Builder

00:06:29.089 --> 00:06:30.991 align:middle
现在
我将向大家展示我们的新特性

00:06:31.058 --> 00:06:32.426 align:middle
故事板引用

00:06:32.860 --> 00:06:35.095 align:middle
开始之前
先让我们看一下我们开发的应用

00:06:36.630 --> 00:06:38.732 align:middle
这是一款应用可以帮助你组织

00:06:38.832 --> 00:06:40.601 align:middle
和计划自驾游

00:06:41.368 --> 00:06:44.605 align:middle
我为这款应用的UI

00:06:44.671 --> 00:06:47.774 align:middle
使用一个自定义container
视图控制器它可以管理四个标签

00:06:48.542 --> 00:06:52.346 align:middle
每一个标签
使用各自UI导航控制器执行

00:06:52.746 --> 00:06:55.382 align:middle
你可以通过轻击导航栏打开一个标签

00:06:56.950 --> 00:07:00.120 align:middle
这第一个标签是即将来临事件列表

00:06:56.950 --> 00:07:00.120 align:middle
这第一个标签是即将来临事件列表

00:07:01.989 --> 00:07:04.258 align:middle
这个标签是过往事件表

00:07:05.759 --> 00:07:07.661 align:middle
这里我们有一张即将来临的事件

00:07:08.395 --> 00:07:11.598 align:middle
我们在旅途中拍摄的图片
最后是图片集

00:07:12.666 --> 00:07:15.536 align:middle
你可以轻击任何一个图片单元放大图片

00:07:16.069 --> 00:07:17.704 align:middle
你可以轻击这个条框按钮

00:07:17.838 --> 00:07:19.306 align:middle
就可以看到其他操作的菜单

00:07:21.141 --> 00:07:23.677 align:middle
让我们看一下
我的app中的主要故事板

00:07:25.712 --> 00:07:29.716 align:middle
在左上角有我的自定义
container视图控制器

00:07:30.484 --> 00:07:32.920 align:middle
这个container连接

00:07:32.986 --> 00:07:37.224 align:middle
四个使用嵌入式
segueway子导航控制器

00:07:37.791 --> 00:07:39.726 align:middle
这个嵌入式segueway让你

00:07:39.793 --> 00:07:42.229 align:middle
可以在母控制器中嵌入子视图控制器

00:07:44.331 --> 00:07:47.267 align:middle
正如你看到的故事板变得相当大

00:07:47.601 --> 00:07:49.036 align:middle
今天我想做的就是将其分解

00:07:49.102 --> 00:07:50.404 align:middle
成小碎片

00:07:51.905 --> 00:07:56.810 align:middle
如果看一下我的故事板上的按钮
大家可以看到

00:07:56.877 --> 00:08:00.013 align:middle
在图片标签中我有三个视图控制器

00:07:56.877 --> 00:08:00.013 align:middle
在图片标签中我有三个视图控制器

00:08:01.448 --> 00:08:04.184 align:middle
这些视图控制器

00:08:04.251 --> 00:08:05.452 align:middle
独立于故事板中的其它情景

00:08:05.819 --> 00:08:08.388 align:middle
所以这样可以让情景
将它们拖进自己的文件中

00:08:09.423 --> 00:08:12.593 align:middle
为了这么做 我要挑选这些视图控制器

00:08:12.793 --> 00:08:16.063 align:middle
置顶在编辑菜单
然后选择故事板中的重构

00:08:17.497 --> 00:08:20.100 align:middle
我访问故事板中的新文件图片

00:08:21.435 --> 00:08:24.805 align:middle
我做这些的时候
Xcode会产生一个新的故事板文件

00:08:24.905 --> 00:08:27.341 align:middle
将这些视图控制器拖出我的主故事板

00:08:27.407 --> 00:08:28.709 align:middle
放进一个新的文件中

00:08:30.511 --> 00:08:32.279 align:middle
那主故事板中会发生什么

00:08:32.346 --> 00:08:33.679 align:middle
让我们按返回按钮

00:08:34.748 --> 00:08:35.916 align:middle
就在下面

00:08:35.982 --> 00:08:38.385 align:middle
我们之前看到三个视图控制器

00:08:38.452 --> 00:08:39.753 align:middle
现在我们只有一个故事板引用

00:08:40.921 --> 00:08:43.323 align:middle
任何时候你在故事板中重构情景

00:08:43.390 --> 00:08:46.326 align:middle
这些情景都会有segueway

00:08:46.393 --> 00:08:49.930 align:middle
Xcode接受这些segueway
产生一个故事板引用

00:08:49.997 --> 00:08:52.032 align:middle
并且在引用中
重新布置这些segueway

00:08:52.833 --> 00:08:54.835 align:middle
运行过程中
当segueway执行时

00:08:54.902 --> 00:08:57.571 align:middle
在图片故事板之外它将触发

00:08:57.638 --> 00:09:00.374 align:middle
最初的视图控制器作为最终位置

00:08:57.638 --> 00:09:00.374 align:middle
最初的视图控制器作为最终位置

00:09:02.376 --> 00:09:06.146 align:middle
如果双击这个引用

00:09:06.346 --> 00:09:09.516 align:middle
Xcode会带我到故事板
向我展示引用中的视图控制器

00:09:09.716 --> 00:09:11.652 align:middle
这种情况下 这是最初的导航

00:09:11.718 --> 00:09:13.153 align:middle
故事板中最初的视图控制器

00:09:14.521 --> 00:09:15.789 align:middle
这是使用新特性的一种方法

00:09:16.089 --> 00:09:17.925 align:middle
你可以使用一个大的故事板文件

00:09:17.991 --> 00:09:19.760 align:middle
将其重构成小的碎片

00:09:20.694 --> 00:09:23.730 align:middle
使用新特性的另一种方法
是创建segueway

00:09:23.797 --> 00:09:26.266 align:middle
在各自文件中已存在的视图控制器

00:09:27.568 --> 00:09:30.504 align:middle
现在我要创建一个新segueway

00:09:30.571 --> 00:09:32.539 align:middle
并且要让它被journal按钮触发

00:09:33.507 --> 00:09:35.576 align:middle
我想让它带我返回到

00:09:35.642 --> 00:09:37.578 align:middle
主故事板文件的视图控制器

00:09:37.644 --> 00:09:39.980 align:middle
这里是管理UI并
创建一个新的journal入口

00:09:41.248 --> 00:09:45.118 align:middle
所以 我要将图片操作视图控制器

00:09:45.986 --> 00:09:48.088 align:middle
在这里 我要从库中

00:09:48.155 --> 00:09:49.957 align:middle
拖出一个故事板引用放置在旁边

00:09:51.792 --> 00:09:54.461 align:middle
我们看一下故事板引用属性检查器

00:09:57.030 --> 00:09:58.565 align:middle
正如大家看到的有三个域

00:09:59.399 --> 00:10:01.034 align:middle
第一个域是

00:09:59.399 --> 00:10:01.034 align:middle
第一个域是

00:10:01.101 --> 00:10:02.469 align:middle
正在引用的故事板文件名称

00:10:03.303 --> 00:10:06.473 align:middle
如果留空Xcode会使用相同故事板

00:10:06.540 --> 00:10:08.408 align:middle
这个故事板包含引用本身

00:10:08.742 --> 00:10:10.878 align:middle
这种情况下是图片故事板

00:10:11.578 --> 00:10:14.081 align:middle
如果你的故事板很大 那么这很有用

00:10:14.147 --> 00:10:16.183 align:middle
或者在视图控制器
建一个segueway

00:10:16.250 --> 00:10:18.285 align:middle
并连接至另一个试图控制器

00:10:18.986 --> 00:10:21.555 align:middle
着我的举例中 我想引用到主故事板

00:10:21.722 --> 00:10:23.390 align:middle
因此我要从菜单中选择

00:10:25.526 --> 00:10:27.494 align:middle
下一个域是你正在引用着的

00:10:27.561 --> 00:10:28.862 align:middle
视图控制器的标识符

00:10:29.596 --> 00:10:32.466 align:middle
如果留空
Xcode会使用引用的故事板

00:10:32.533 --> 00:10:34.034 align:middle
最初的视图控制器

00:10:34.868 --> 00:10:37.704 align:middle
在我的示例中
我要引用主故事板中

00:10:37.771 --> 00:10:39.473 align:middle
一个特定的控制器而且我已经假定

00:10:39.540 --> 00:10:42.776 align:middle
控制器的标识新入口

00:10:45.846 --> 00:10:47.881 align:middle
最后一个字段是标识符包

00:10:49.249 --> 00:10:50.717 align:middle
你在引用的故事板

00:10:50.784 --> 00:10:52.452 align:middle
可能是处于外部框架

00:10:52.619 --> 00:10:53.453 align:middle
这样的话

00:10:53.620 --> 00:10:55.889 align:middle
需要将框架标识符包放在这里

00:10:56.890 --> 00:10:59.459 align:middle
我要留空 因为我的主故事板

00:10:59.526 --> 00:11:01.762 align:middle
与图片故事板在同一个包里

00:10:59.526 --> 00:11:01.762 align:middle
与图片故事板在同一个包里

00:11:05.532 --> 00:11:09.102 align:middle
再一次 既然我的故事板引用
已经设置好

00:11:09.169 --> 00:11:10.270 align:middle
如果双击它

00:11:10.671 --> 00:11:11.872 align:middle
Xcode就会带我

00:11:12.039 --> 00:11:13.707 align:middle
到我的引用故事板文件

00:11:13.974 --> 00:11:15.642 align:middle
展示正在引用的视图控制器

00:11:16.577 --> 00:11:18.912 align:middle
这种情况中
这就是一个导航控制器

00:11:19.313 --> 00:11:21.515 align:middle
如果我们看一下标识检查器

00:11:21.582 --> 00:11:25.352 align:middle
可以看到我刚刚在引用中
输入同样的标识

00:11:27.521 --> 00:11:30.057 align:middle
这个导航控制器的根视图控制器是

00:11:30.991 --> 00:11:34.394 align:middle
这个表格视图控制器用于管理用户界面
并创建新的入口

00:11:36.029 --> 00:11:37.998 align:middle
回到图片故事板

00:11:38.265 --> 00:11:40.033 align:middle
为引用创建一个segueway

00:11:42.102 --> 00:11:45.539 align:middle
之前我提到我要让journal
按钮可以触发这个segueway

00:11:46.206 --> 00:11:47.541 align:middle
在图片视图控制器中

00:11:48.075 --> 00:11:49.443 align:middle
看不到journal按钮

00:11:50.677 --> 00:11:54.214 align:middle
这是因为菜单
在SceneDoc上的上面这里

00:11:56.016 --> 00:11:59.987 align:middle
SceneDoc让你可以
储存顶层对象和视图控制器

00:12:00.521 --> 00:12:02.155 align:middle
可在SceneDoc中放一个视图

00:12:02.222 --> 00:12:04.458 align:middle
如果你想在运行过程中

00:12:04.525 --> 00:12:05.926 align:middle
那个视图不是视图层的一部分

00:12:06.860 --> 00:12:09.196 align:middle
在Xcode7中
SceneDoc中放一个视图

00:12:09.263 --> 00:12:11.932 align:middle
你选中它
它就会在自己的编辑框中显示

00:12:11.999 --> 00:12:14.034 align:middle
编辑框就在画布中视图控制器的正上方

00:12:21.675 --> 00:12:23.210 align:middle
<br/>
现在 可见journal按钮

00:12:23.277 --> 00:12:24.878 align:middle
让我们创建这个segueway

00:12:25.579 --> 00:12:28.315 align:middle
我要控制拖至我的故事板引用中

00:12:28.815 --> 00:12:30.617 align:middle
我要在显示视图控制器的模态

00:12:30.684 --> 00:12:31.552 align:middle
所以我选择它

00:12:34.188 --> 00:12:35.989 align:middle
好的
看一下活动中的segueway

00:12:42.596 --> 00:12:43.764 align:middle
我要强调的第一件事是

00:12:43.830 --> 00:12:46.667 align:middle
我的图片标签出现了就像之前一样

00:12:46.733 --> 00:12:48.635 align:middle
虽然现在是从独立文件中出现

00:12:49.703 --> 00:12:52.105 align:middle
如果轻击一单元
在journal按钮出现菜单和标签

00:12:52.172 --> 00:12:56.076 align:middle
点击我们执行segueway的按钮

00:12:56.143 --> 00:12:58.078 align:middle
就能够关联到我们的主故事板文件

00:12:58.145 --> 00:13:01.648 align:middle
并且通过标识符显示视图控制器

00:12:58.145 --> 00:13:01.648 align:middle
并且通过标识符显示视图控制器

00:13:01.715 --> 00:13:03.217 align:middle
就像它在同一个故事板中运行一样

00:13:04.318 --> 00:13:06.086 align:middle
这就是我们的新故事板引用特性

00:13:06.153 --> 00:13:07.321 align:middle
希望大家发现他的好处

00:13:08.021 --> 00:13:09.489 align:middle
现在重新把舞台交给凯尔

00:13:17.431 --> 00:13:18.498 align:middle
谢谢 托尼

00:13:19.933 --> 00:13:23.971 align:middle
好的
所以我看到所有人对这个特性都很兴奋

00:13:24.705 --> 00:13:26.740 align:middle
我们很高兴能够今年把它带给大家

00:13:32.079 --> 00:13:33.213 align:middle
我们说一些别的事情

00:13:33.780 --> 00:13:35.816 align:middle
我们说一下如何自定义

00:13:35.883 --> 00:13:37.351 align:middle
Interface
Builder上提供的

00:13:37.417 --> 00:13:38.886 align:middle
标准segueway

00:13:40.754 --> 00:13:43.223 align:middle
看一下我们演示应用的不同方面

00:13:43.290 --> 00:13:46.960 align:middle
我们有一个journal执行时
使用表格视图控制器

00:13:49.062 --> 00:13:51.932 align:middle
如果用户点击了顶部加号按钮

00:13:53.100 --> 00:13:54.668 align:middle
进行模态展示

00:13:54.735 --> 00:13:56.637 align:middle
如托尼之前
用journal按钮展示一样

00:13:58.105 --> 00:14:00.007 align:middle
这就会弹出导航控制器

00:13:58.105 --> 00:14:00.007 align:middle
这就会弹出导航控制器

00:14:00.240 --> 00:14:02.509 align:middle
在其内部是一个表格视图控制器

00:14:05.646 --> 00:14:08.682 align:middle
点击取消按钮导航控制器消失

00:14:08.782 --> 00:14:10.951 align:middle
这就是标准模态展示方式

00:14:11.018 --> 00:14:12.686 align:middle
通过屏幕底部出现

00:14:12.753 --> 00:14:14.821 align:middle
返回到屏幕底部
你可以在iPhone上看到

00:14:17.357 --> 00:14:18.559 align:middle
如果你想要有趣一点呢

00:14:21.595 --> 00:14:24.264 align:middle
用户点击加号按钮
我们展示我们的segueway

00:14:24.731 --> 00:14:26.300 align:middle
我们要闪烁效果

00:14:28.802 --> 00:14:32.940 align:middle
如果我们要接下来是闪烁效果

00:14:33.207 --> 00:14:35.809 align:middle
我们真的很想闪烁退出

00:14:38.545 --> 00:14:39.613 align:middle
你可能很清楚

00:14:39.680 --> 00:14:43.183 align:middle
如果你经常使用故事板

00:14:43.684 --> 00:14:46.286 align:middle
选择segueway时 你会有选项

00:14:46.353 --> 00:14:47.955 align:middle
看一下segueway检查器

00:14:49.156 --> 00:14:51.959 align:middle
有一些标准转换

00:14:52.025 --> 00:14:54.828 align:middle
是iOS中可以加载的模态展示

00:14:55.662 --> 00:14:58.832 align:middle
默认从底端弹出并垂直覆盖

00:14:59.199 --> 00:15:02.035 align:middle
但我们可以选择水平翻转或者淡入淡出

00:14:59.199 --> 00:15:02.035 align:middle
但我们可以选择水平翻转或者淡入淡出

00:15:02.469 --> 00:15:04.238 align:middle
而且可以选择闪烁

00:15:06.340 --> 00:15:09.142 align:middle
使用早期版本的Xcode

00:15:09.209 --> 00:15:12.379 align:middle
在iOS8可做的一件事是
可将其转成自定义segueway

00:15:14.248 --> 00:15:16.149 align:middle
从这点来说

00:15:16.216 --> 00:15:18.452 align:middle
我们需要把UI
故事板Segueway子类化

00:15:18.785 --> 00:15:20.153 align:middle
并自己处理所有的工作

00:15:21.154 --> 00:15:24.958 align:middle
当我们提到真的展示视图控制器时

00:15:25.025 --> 00:15:27.594 align:middle
那也并非真的是个麻烦事

00:15:28.161 --> 00:15:29.696 align:middle
但要是能不用做 当然是更好了

00:15:30.697 --> 00:15:34.434 align:middle
尤其是在我们需要做一堆的工作

00:15:34.501 --> 00:15:35.569 align:middle
来创建动画的时候

00:15:39.173 --> 00:15:42.843 align:middle
在Xcode 7中当你的目标是
iOS 9或OS X 10.11时

00:15:43.243 --> 00:15:45.946 align:middle
你可以选择标准
segueway类型中的任一种

00:15:46.013 --> 00:15:48.582 align:middle
且仍可以
指定一个故事板segueway

00:15:48.649 --> 00:15:49.683 align:middle
进行自定义子类化

00:15:51.185 --> 00:15:55.389 align:middle
你完整自定义segueway一样
也可以针对实施重新执行

00:15:55.822 --> 00:15:59.893 align:middle
这时候将调出管理员模态

00:16:00.060 --> 00:16:01.395 align:middle
并变成默认行为

00:16:02.095 --> 00:16:05.532 align:middle
在管理员调出情况下
你可以执行任何你想要的自定义

00:16:08.068 --> 00:16:10.971 align:middle
在我们的模态演示案例中真正重要的是

00:16:11.672 --> 00:16:15.209 align:middle
我们
保留已建立的segueway对象

00:16:15.275 --> 00:16:17.644 align:middle
当用户触发segueway时会创建

00:16:18.779 --> 00:16:19.880 align:middle
在演示案例显示过程中

00:16:19.947 --> 00:16:21.682 align:middle
你的演示器出现在屏幕上

00:16:22.883 --> 00:16:24.818 align:middle
通常segueway对象很短暂

00:16:25.352 --> 00:16:28.021 align:middle
执行segueway
分配segueway并发送出去

00:16:28.288 --> 00:16:30.624 align:middle
执行  解除分配

00:16:30.958 --> 00:16:35.596 align:middle
并且当视图控制显示在屏幕上

00:16:35.662 --> 00:16:37.998 align:middle
将在iOS上控制
和结束模态展示segueway

00:16:38.065 --> 00:16:39.333 align:middle
只要调出管理员模态

00:16:40.300 --> 00:16:41.768 align:middle
我为什么要费如此费劲解释呢

00:16:43.537 --> 00:16:45.739 align:middle
我们需要知道

00:16:45.806 --> 00:16:47.074 align:middle
你将如何实现自定义闪烁

00:16:47.140 --> 00:16:49.142 align:middle
动画或实现任何自定义模态展示动画

00:16:50.477 --> 00:16:52.212 align:middle
我们的应用很小

00:16:53.747 --> 00:16:56.283 align:middle
用户已点击
这个按钮触发segueway

00:16:57.784 --> 00:17:00.721 align:middle
目标视图控制器已存在

00:16:57.784 --> 00:17:00.721 align:middle
目标视图控制器已存在

00:17:00.787 --> 00:17:02.789 align:middle
是从故事板里调出但还未在屏幕上显示

00:17:03.557 --> 00:17:05.025 align:middle
将发送执行到segueway

00:17:06.292 --> 00:17:07.528 align:middle
首先要做的是

00:17:07.594 --> 00:17:10.897 align:middle
分配一个转换指派

00:17:10.964 --> 00:17:12.332 align:middle
到目标视觉控制器

00:17:14.867 --> 00:17:18.638 align:middle
随后 它将调用管理员
开始普通模态展示

00:17:20.540 --> 00:17:22.009 align:middle
现在 目标视图控制器

00:17:22.476 --> 00:17:24.278 align:middle
在通过管理员实现或执行

00:17:24.344 --> 00:17:26.847 align:middle
获得present
ViewController后

00:17:27.414 --> 00:17:29.449 align:middle
它将与转换指派协商

00:17:29.783 --> 00:17:31.285 align:middle
提交对象

00:17:31.919 --> 00:17:34.054 align:middle
实际上是驱动自定义动画

00:17:35.856 --> 00:17:38.792 align:middle
关于这系列协议 如何工作的更多细节

00:17:38.859 --> 00:17:40.994 align:middle
我建议你使用
WWDC 2013的视图控制器

00:17:41.061 --> 00:17:43.497 align:middle
查看自定义传送

00:17:45.666 --> 00:17:48.168 align:middle
另一方面用户已完成视觉控制器

00:17:48.235 --> 00:17:50.571 align:middle
他们轻敲取消按钮

00:17:52.206 --> 00:17:53.440 align:middle
目标视图控制器

00:17:53.507 --> 00:17:57.277 align:middle
因为退出后 仍有转换指派分配给它

00:17:57.377 --> 00:17:58.745 align:middle
并请求转换指派

00:17:58.812 --> 00:18:01.682 align:middle
提供动画控制器以驱动解除

00:17:58.812 --> 00:18:01.682 align:middle
提供动画控制器以驱动解除

00:18:02.149 --> 00:18:05.385 align:middle
若我们
无法控制我们的segueway

00:18:05.452 --> 00:18:06.687 align:middle
反过来它将控制的转换指派

00:18:07.054 --> 00:18:08.655 align:middle
这些已经全部发布

00:18:08.722 --> 00:18:10.858 align:middle
在iOS 8中或许会出现死机

00:18:10.924 --> 00:18:12.492 align:middle
在iOS 9中会出现屏幕卡顿

00:18:12.559 --> 00:18:14.595 align:middle
所以我们也无法获得漂亮的自定义动画

00:18:16.630 --> 00:18:19.533 align:middle
随后动画控制器收到驱动解除的要求

00:18:19.800 --> 00:18:21.301 align:middle
我们想象的视图消失了

00:18:22.302 --> 00:18:24.238 align:middle
另一个重要的情况是

00:18:24.304 --> 00:18:26.306 align:middle
你处理自适应性的时候

00:18:26.607 --> 00:18:29.476 align:middle
比如说你正在在iPhone上运行

00:18:29.676 --> 00:18:31.979 align:middle
用户旋转设备可能是
一部iPhone 6 Plus

00:18:32.045 --> 00:18:35.215 align:middle
你想展示风景或者人物的不同界面

00:18:35.282 --> 00:18:38.352 align:middle
或在iPad Air 2上运行时

00:18:38.418 --> 00:18:41.255 align:middle
你已经充分利用iOS 9
新多重任务处理特性

00:18:41.321 --> 00:18:45.158 align:middle
用户已经将你的app分成50/50

00:18:45.259 --> 00:18:48.629 align:middle
而你不想 也就是说

00:18:48.695 --> 00:18:50.664 align:middle
关闭一个比较小画面

00:18:51.665 --> 00:18:54.902 align:middle
这个具体事例来自周二的演讲

00:18:54.968 --> 00:18:58.038 align:middle
从iPad 中
iOS 9多重任务处理开始

00:18:58.405 --> 00:19:00.707 align:middle
这解释了为什么 你想做类似这样的事

00:18:58.405 --> 00:19:00.707 align:middle
这解释了为什么 你想做类似这样的事

00:19:00.774 --> 00:19:02.176 align:middle
在这个案例中 这种情况将出现

00:19:03.677 --> 00:19:05.579 align:middle
类似自定义动画

00:19:05.646 --> 00:19:08.549 align:middle
我们需要
用delegate来自定义展示

00:19:10.751 --> 00:19:14.288 align:middle
不论segueway
提出什么模态展示用户都将触发它们

00:19:15.689 --> 00:19:19.026 align:middle
重载执行将对目标视图控制器的

00:19:19.660 --> 00:19:21.862 align:middle
显示控制器

00:19:22.229 --> 00:19:23.297 align:middle
进行自适应指派

00:19:24.364 --> 00:19:25.465 align:middle
这只是指派属性

00:19:25.532 --> 00:19:27.267 align:middle
事实上 协议叫做自适应指派

00:19:28.702 --> 00:19:29.736 align:middle
随后我们调用管理员

00:19:29.803 --> 00:19:31.104 align:middle
以获得标准模态展示

00:19:31.171 --> 00:19:33.440 align:middle
用来结束全屏

00:19:33.507 --> 00:19:35.442 align:middle
而它恰巧适合目前尺寸类

00:19:36.443 --> 00:19:39.379 align:middle
后来 用户做了些什么导致尺寸类变动

00:19:39.446 --> 00:19:41.748 align:middle
比如
旋转他们iPhone 6 Plus

00:19:42.149 --> 00:19:46.320 align:middle
将iPad air 2
视图分成50/50

00:19:48.989 --> 00:19:50.991 align:middle
展示控制器将告知自适应指派

00:19:51.058 --> 00:19:53.660 align:middle
我们正在改变尺寸类

00:19:54.061 --> 00:19:56.096 align:middle
并反过来请求自适应指派

00:19:56.163 --> 00:19:57.831 align:middle
提供新的视图控制器

00:19:58.765 --> 00:20:00.534 align:middle
暂时替换

00:19:58.765 --> 00:20:00.534 align:middle
暂时替换

00:20:00.601 --> 00:20:01.835 align:middle
目前的视图控制器

00:20:03.136 --> 00:20:04.738 align:middle
关于它如何运作的更多信息

00:20:04.805 --> 00:20:06.373 align:middle
去年 我的老板为大家做展示

00:20:06.440 --> 00:20:08.208 align:middle
即关于iOS8视图控制器的巨大改进

00:20:09.476 --> 00:20:11.478 align:middle
去年 不是两年前

00:20:13.714 --> 00:20:15.582 align:middle
今天 关于它是如何运作的

00:20:15.649 --> 00:20:18.185 align:middle
托尼将用Xcode7
为我们展示自定义动画

00:20:24.858 --> 00:20:25.859 align:middle
谢谢你 凯尔

00:20:27.394 --> 00:20:30.330 align:middle
今天 我将为大家展示几种方法

00:20:30.697 --> 00:20:33.267 align:middle
如何使用代码在你的
segueway中增加自定义逻辑

00:20:34.568 --> 00:20:36.570 align:middle
在执行一个segueway时
在写代码之前

00:20:36.637 --> 00:20:39.473 align:middle
若你已经使用故事板将源视图控制器

00:20:39.540 --> 00:20:42.209 align:middle
传到其目的地

00:20:43.243 --> 00:20:45.846 align:middle
你可能不知道
什么时候segueway会触发

00:20:45.946 --> 00:20:48.348 align:middle
或动画如何展示

00:20:49.483 --> 00:20:53.387 align:middle
为了向你展示
我将在这里创建一个segueway

00:20:53.820 --> 00:20:55.355 align:middle
在用户轻敲删除按钮时

00:20:55.656 --> 00:20:58.392 align:middle
若照片和journal入口有关

00:20:58.692 --> 00:21:01.295 align:middle
我将有条件的提出确认通知单

00:20:58.692 --> 00:21:01.295 align:middle
我将有条件的提出确认通知单

00:21:03.330 --> 00:21:07.000 align:middle
第一步

00:21:07.067 --> 00:21:09.403 align:middle
从库中拉出视图控制器

00:21:09.469 --> 00:21:10.571 align:middle
它将用来代表确认通知单

00:21:11.772 --> 00:21:15.709 align:middle
我给这个视图控制器一个自定义类
这点早已增加在项目中

00:21:17.144 --> 00:21:21.515 align:middle
这个类执行加载视图
以从代码中创建自己的视图

00:21:22.015 --> 00:21:25.619 align:middle
这个视图控制器
并不需要 它从库里带出来的视图

00:21:26.486 --> 00:21:28.956 align:middle
我将点击视图 移除它

00:21:30.524 --> 00:21:34.194 align:middle
现在 这个视图控制器
不再获取故事板里的视图

00:21:34.394 --> 00:21:38.999 align:middle
在运行过程中 架构将返回
我的视图控制器实现加载视图

00:21:41.502 --> 00:21:45.005 align:middle
现在我们有了视图控制器确认通知单
接下来 为它创建segueway

00:21:46.073 --> 00:21:48.509 align:middle
我想要
segueway通过代码被触动

00:21:48.575 --> 00:21:50.644 align:middle
而不是通过特别的按钮

00:21:51.144 --> 00:21:53.480 align:middle
与其从视图控制器层次里的

00:21:53.547 --> 00:21:56.149 align:middle
子视图里将其拖出

00:21:56.450 --> 00:21:58.685 align:middle
不如直接从视图控制器里拖出

00:21:59.353 --> 00:22:03.590 align:middle
为做到这个
从我的源视图控制器SceneDoc

00:21:59.353 --> 00:22:03.590 align:middle
为做到这个
从我的源视图控制器SceneDoc

00:22:03.824 --> 00:22:05.259 align:middle
拖出图标到目的地标进行控制

00:22:05.759 --> 00:22:08.295 align:middle
再一次
我想展示一下这个视图控制器

00:22:11.498 --> 00:22:14.701 align:middle
我想通过删除按钮

00:22:15.235 --> 00:22:17.371 align:middle
触动执行segueway的代码

00:22:17.971 --> 00:22:21.175 align:middle
我现在想做的是
从删除按钮中创建一个IB动作

00:22:22.709 --> 00:22:24.545 align:middle
我打开助理编辑器

00:22:24.845 --> 00:22:28.315 align:middle
它将我带到照片视图控制器的实现文件

00:22:29.716 --> 00:22:33.053 align:middle
我将控制从删除按钮拖出到源代码过程

00:22:33.220 --> 00:22:36.557 align:middle
出现一个弹出窗

00:22:36.623 --> 00:22:39.393 align:middle
这样我就可以设置我的连接了

00:22:40.694 --> 00:22:42.362 align:middle
我说过 我想让这个变成一个动作

00:22:42.796 --> 00:22:44.665 align:middle
我将让它删除照片

00:22:49.770 --> 00:22:53.974 align:middle
Xcode生成一个IB动作方法

00:22:54.341 --> 00:22:56.376 align:middle
我将把它粘贴在这里的代码上

00:23:01.515 --> 00:23:06.954 align:middle
好了 在代码中 它将检查
是否有关联的journal入口

00:23:07.621 --> 00:23:11.124 align:middle
若有
它将调用带标识符的segueway

00:23:14.161 --> 00:23:17.297 align:middle
标识符进入这里

00:23:17.364 --> 00:23:19.566 align:middle
我们来看看
刚在故事板中创建的segueway

00:23:21.535 --> 00:23:24.037 align:middle
等一下 我将让那个segueway
带有相同的标识符

00:23:24.471 --> 00:23:27.641 align:middle
首先 我想引用

00:23:27.741 --> 00:23:29.710 align:middle
为segueway
所准备的那个标识符

00:23:30.611 --> 00:23:34.448 align:middle
在这个方法中
我将关联journal入口

00:23:34.515 --> 00:23:37.384 align:middle
传送到目标视图控制器

00:23:37.451 --> 00:23:39.620 align:middle
这将允许确认通知单

00:23:39.686 --> 00:23:41.088 align:middle
显示journal入口的细节

00:23:43.524 --> 00:23:45.325 align:middle
现在来到故事板

00:23:45.392 --> 00:23:48.829 align:middle
选择segueway
然后来到属性检查这里

00:23:50.364 --> 00:23:54.468 align:middle
我将在这里打入同样的标识符确认取消

00:23:56.470 --> 00:23:59.473 align:middle
你会看到 若你之前
使用过segueway属性检查

00:23:59.540 --> 00:24:01.909 align:middle
在标识符下面就会有个新域

00:23:59.540 --> 00:24:01.909 align:middle
在标识符下面就会有个新域

00:24:02.276 --> 00:24:04.745 align:middle
可让你
指定一个自定义segueway类

00:24:05.646 --> 00:24:08.715 align:middle
在Xcode 7
你可为segueway类型的

00:24:08.782 --> 00:24:10.450 align:middle
任何系统创建子类

00:24:10.918 --> 00:24:15.822 align:middle
这个在iOS9和Mac OS
X 10 11中同样适用

00:24:15.889 --> 00:24:18.225 align:middle
我的项目中有一个
我增加的自定义segueway

00:24:18.325 --> 00:24:19.459 align:middle
我将在这里选择它

00:24:20.060 --> 00:24:21.795 align:middle
它叫做缩放动画segueway

00:24:22.863 --> 00:24:25.766 align:middle
我们来看看那个类的实现

00:24:26.433 --> 00:24:27.701 align:middle
我将关闭助理器

00:24:28.368 --> 00:24:29.803 align:middle
使用跳转栏

00:24:29.870 --> 00:24:32.406 align:middle
到达缩放动画segueway

00:24:35.576 --> 00:24:36.877 align:middle
首先 我想指出的是

00:24:36.944 --> 00:24:41.715 align:middle
这个segueway是从
UI故事板Segueway中导出的

00:24:41.782 --> 00:24:44.585 align:middle
并遵循UI视图控制器转换指派协议

00:24:45.452 --> 00:24:47.421 align:middle
这个协议允许你设定对象

00:24:47.688 --> 00:24:51.024 align:middle
对象即是用来控制以及解除

00:24:51.091 --> 00:24:53.060 align:middle
子模态动画展示的方法

00:24:55.629 --> 00:24:57.331 align:middle
首先 加载执行方法

00:24:58.398 --> 00:25:00.767 align:middle
在这个方法中

00:24:58.398 --> 00:25:00.767 align:middle
在这个方法中

00:25:01.001 --> 00:25:03.537 align:middle
我将segueway设置为
目标视图控制器的转换指派

00:25:04.004 --> 00:25:05.138 align:middle
并调用管理员

00:25:05.205 --> 00:25:06.773 align:middle
它将开始模态展示

00:25:08.876 --> 00:25:10.377 align:middle
接下来

00:25:10.444 --> 00:25:12.145 align:middle
我从转换指派协议中重载两种方法

00:25:12.713 --> 00:25:14.948 align:middle
动画控制器的展示控制器

00:25:15.015 --> 00:25:17.618 align:middle
和动画控制器的解除控制器

00:25:19.786 --> 00:25:23.690 align:middle
从每个方法中返回的目标

00:25:23.924 --> 00:25:27.027 align:middle
均遵循UI视图控制前动画传送协议

00:25:28.362 --> 00:25:29.997 align:middle
此协议包含

00:25:30.063 --> 00:25:31.798 align:middle
实际控制动画的方法

00:25:33.600 --> 00:25:37.471 align:middle
在我展示的动画设计下面
有一个非常简单的动画

00:25:37.538 --> 00:25:41.675 align:middle
可从屏幕中心
按比例放大目标视图控制器

00:25:42.843 --> 00:25:44.378 align:middle
来看看运作中的segueway

00:25:48.815 --> 00:25:51.718 align:middle
好了
再一次 我将轻敲单元格显示菜单

00:25:52.553 --> 00:25:54.154 align:middle
当我轻敲删除按钮

00:25:55.956 --> 00:25:59.126 align:middle
带有自定义动画的
自定义segueway开始执行

00:25:59.993 --> 00:26:01.662 align:middle
看到了确认通知单

00:25:59.993 --> 00:26:01.662 align:middle
看到了确认通知单

00:26:02.396 --> 00:26:05.732 align:middle
取消时

00:26:06.133 --> 00:26:09.369 align:middle
通过使用解除动画设计运行动画解除

00:26:10.971 --> 00:26:15.008 align:middle
用不同的方式
对segueway进行自定义

00:26:15.876 --> 00:26:19.680 align:middle
我鼓励你们在UI视图控制器
和UI故事板Segueway上

00:26:19.746 --> 00:26:21.915 align:middle
查看我们其他的segueway

00:26:23.016 --> 00:26:25.319 align:middle
自定义
segueway展示到此圆满结束

00:26:25.385 --> 00:26:28.288 align:middle
现场交给凯尔
让凯尔带我们进入下一部分

00:26:35.863 --> 00:26:36.830 align:middle
谢谢

00:26:39.700 --> 00:26:43.437 align:middle
在故事板方面有所研究
我知道在座的各位都走在技术前沿

00:26:43.804 --> 00:26:46.240 align:middle
有多少人
曾经用过展开segueway

00:26:48.208 --> 00:26:51.245 align:middle
事实上 极少有人曾经使用过故事板

00:26:51.478 --> 00:26:52.579 align:middle
有多少人

00:26:52.646 --> 00:26:55.182 align:middle
曾经在iOS上
实现过自定义集合视图控制器

00:26:56.450 --> 00:26:57.551 align:middle
同样很少

00:26:58.652 --> 00:27:00.020 align:middle
今年 让我很激动的一件事是

00:26:58.652 --> 00:27:00.020 align:middle
今年 让我很激动的一件事是

00:27:00.087 --> 00:27:03.023 align:middle
我们是如何让这两个特性
更好的配合使用

00:27:04.057 --> 00:27:07.060 align:middle
对于不熟悉展开segueway
和它的作用的人来说

00:27:08.128 --> 00:27:11.098 align:middle
可以将它理解成地图

00:27:12.833 --> 00:27:15.235 align:middle
想象一下
我经常去格雷斯大教堂

00:27:15.302 --> 00:27:17.971 align:middle
这座教堂位于诺布山上
是一座非常漂亮的几何形教堂

00:27:18.038 --> 00:27:21.275 align:middle
你可以从这些位置 从市中心看到它

00:27:22.776 --> 00:27:24.144 align:middle
因为它在山顶

00:27:24.211 --> 00:27:26.246 align:middle
可以计算出我们要走一段很长的下坡路

00:27:26.313 --> 00:27:27.214 align:middle
才能到达渡轮码头

00:27:29.816 --> 00:27:33.453 align:middle
在渡轮码头闲逛一伙买到有机甘蓝

00:27:33.520 --> 00:27:37.057 align:middle
和用蓝色瓶子装的咖啡
因为我在内河码头

00:27:37.824 --> 00:27:41.528 align:middle
我可能需要走一段很长的路
才能到达渔人码头

00:27:43.463 --> 00:27:45.032 align:middle
我真的很累了

00:27:46.333 --> 00:27:47.334 align:middle
我想要回家

00:27:48.669 --> 00:27:49.937 align:middle
但我不想做的是

00:27:50.771 --> 00:27:52.573 align:middle
转身原路返回

00:27:52.639 --> 00:27:57.244 align:middle
因为一 我不是住在大教堂里
二 那也不是回到大教堂最短的路

00:27:59.847 --> 00:28:03.217 align:middle
我想做的是  首先确定我想去哪

00:27:59.847 --> 00:28:03.217 align:middle
我想做的是  首先确定我想去哪

00:28:04.651 --> 00:28:07.187 align:middle
第二 找出那个位置

00:28:08.856 --> 00:28:12.693 align:middle
三 做计划并按照路线前往目的地

00:28:13.560 --> 00:28:15.295 align:middle
这就是展开segueway所要做的

00:28:16.330 --> 00:28:19.299 align:middle
它们找出前往特定目的地的路径

00:28:19.833 --> 00:28:21.735 align:middle
但是 并不需要

00:28:21.802 --> 00:28:22.736 align:middle
原路返回

00:28:25.539 --> 00:28:27.007 align:middle
再举个具体例子

00:28:27.074 --> 00:28:28.475 align:middle
讲讲应用的实际使用情况

00:28:29.076 --> 00:28:32.579 align:middle
回到配合标签栏控制器

00:28:32.646 --> 00:28:33.981 align:middle
正在使用中的展示应用

00:28:34.081 --> 00:28:37.351 align:middle
不好意思
我们的自定义标签控制器表视图

00:28:38.085 --> 00:28:39.653 align:middle
和导航控制器都包含它

00:28:41.021 --> 00:28:42.956 align:middle
当用户使用我们的应用时

00:28:43.023 --> 00:28:44.791 align:middle
视图控制器层级发生变化

00:28:46.860 --> 00:28:52.666 align:middle
他们可轻敲图像在导航控制器中
增加东西 那是选项卡的产物

00:28:55.702 --> 00:28:56.870 align:middle
这就是我们所在的位置了

00:28:58.672 --> 00:29:00.340 align:middle
此时 用户说

00:28:58.672 --> 00:29:00.340 align:middle
此时 用户说

00:29:00.407 --> 00:29:02.576 align:middle
我想回到
我刚看到的那个journal表格

00:29:08.448 --> 00:29:10.717 align:middle
当我们要求这么做时

00:29:11.318 --> 00:29:12.920 align:middle
我们将在照片视图控制器里

00:29:13.520 --> 00:29:15.355 align:middle
执行一个segueway

00:29:16.757 --> 00:29:19.693 align:middle
这是一个带返回至Journal
标识符的展开segueway

00:29:22.596 --> 00:29:23.897 align:middle
展开
segueway首先

00:29:23.964 --> 00:29:25.666 align:middle
确定目标

00:29:27.968 --> 00:29:32.439 align:middle
发现目标的方法
确定我们已找到所寻目标的方法

00:29:32.706 --> 00:29:33.874 align:middle
是利用一些代码

00:29:34.608 --> 00:29:38.846 align:middle
这些代码在UI
表格视图控制器的子类中

00:29:39.446 --> 00:29:42.316 align:middle
这也是我用来调用
iAmTheJournal的方法

00:29:43.250 --> 00:29:44.551 align:middle
这个方法不起作用

00:29:44.618 --> 00:29:47.321 align:middle
它是一个ID功能
拿走UI故事板segueway

00:29:47.554 --> 00:29:50.090 align:middle
并单独存在

00:29:50.157 --> 00:29:52.392 align:middle
这样我们可以确定
我们已找到所要的视图控制器

00:29:58.432 --> 00:30:00.701 align:middle
第二步 找目标

00:29:58.432 --> 00:30:00.701 align:middle
第二步 找目标

00:30:03.470 --> 00:30:06.673 align:middle
我们从寻找现有源的根源开始

00:30:07.741 --> 00:30:11.545 align:middle
在iOS 8中
我询问这个视图控制器 不好意思

00:30:13.647 --> 00:30:15.849 align:middle
在iOS 8中
我询问这个视图控制器

00:30:15.916 --> 00:30:18.151 align:middle
根据未展开
segueway动作查看控制器

00:30:18.652 --> 00:30:21.154 align:middle
这个视图控制器将浏览它的子集

00:30:21.221 --> 00:30:23.724 align:middle
试图找到一个视图控制器

00:30:23.891 --> 00:30:28.929 align:middle
能对我们在这里指定的
iAmTheJournal选择器

00:30:29.363 --> 00:30:31.231 align:middle
我们已在检查中

00:30:31.298 --> 00:30:32.999 align:middle
为展开segueway对其进行创建

00:30:35.269 --> 00:30:38.939 align:middle
对于小视图控制器
层级来说这个方法很棒

00:30:39.006 --> 00:30:40.274 align:middle
但它并不适用于

00:30:40.340 --> 00:30:42.242 align:middle
这个应用中的视图控制器层级

00:30:43.510 --> 00:30:46.713 align:middle
在iOS 9中 我们弃用那个方法

00:30:46.914 --> 00:30:48.482 align:middle
并用新方法取而代之

00:30:48.615 --> 00:30:51.585 align:middle
允许子视图控制器
从源中展开而这个方法返回来的

00:30:52.486 --> 00:30:55.556 align:middle
取代单独视图控制器的

00:30:55.622 --> 00:30:59.860 align:middle
它返回了一批子接收器

00:30:59.927 --> 00:31:01.528 align:middle
我们需浏览
这些子接收器以找出目标

00:30:59.927 --> 00:31:01.528 align:middle
我们需浏览
这些子接收器以找出目标

00:31:04.631 --> 00:31:07.434 align:middle
事实上 我们想返回一个子集

00:31:07.501 --> 00:31:12.406 align:middle
我们并不想找
来时路径衍生出的展开目标

00:31:12.573 --> 00:31:14.141 align:middle
我们有其他新方法

00:31:14.241 --> 00:31:16.577 align:middle
包含一个允许子视图控制器重载

00:31:16.844 --> 00:31:20.013 align:middle
segueway源的子视图控制器

00:31:20.080 --> 00:31:21.448 align:middle
用来解决我们从哪来的问题

00:31:23.584 --> 00:31:26.253 align:middle
UI导航控制器上的实现调用

00:31:26.320 --> 00:31:28.388 align:middle
那个方法以解决我们从哪来的问题

00:31:28.622 --> 00:31:31.291 align:middle
也就是说 哦
那个照片视图控制器是源

00:31:31.491 --> 00:31:32.759 align:middle
因此 包含源

00:31:33.961 --> 00:31:37.731 align:middle
返回来的子视图控制器列

00:31:37.798 --> 00:31:39.833 align:middle
忽略了视图控制器 我们得到1的阵列

00:31:41.768 --> 00:31:44.204 align:middle
此时 故事板运行时

00:31:44.271 --> 00:31:46.573 align:middle
递归到阵列  从第一个
且是唯一一个的元素开始

00:31:48.108 --> 00:31:51.678 align:middle
我们询问这个集合
视图控制器最近的这个集合

00:31:52.746 --> 00:31:54.548 align:middle
控制器的子视图控制器已被掩盖

00:31:54.615 --> 00:31:57.384 align:middle
我们应该进一步搜索
以找到展开segueway的目标

00:31:58.385 --> 00:32:00.153 align:middle
它没有任何子视图控制器

00:31:58.385 --> 00:32:00.153 align:middle
它没有任何子视图控制器

00:32:01.088 --> 00:32:03.857 align:middle
我们有递归的基础案例可以进行询问

00:32:04.358 --> 00:32:07.828 align:middle
你是否可以执行
我们在找的展开segueway

00:32:09.062 --> 00:32:14.201 align:middle
它无法执行 我们也没找到目标

00:32:15.269 --> 00:32:17.104 align:middle
我们重新搜索

00:32:17.171 --> 00:32:18.539 align:middle
将视图控制器层级链提高一级

00:32:21.175 --> 00:32:23.644 align:middle
同先前的方法
新方法允许子视图控制器

00:32:23.710 --> 00:32:26.013 align:middle
来自展开 来自源

00:32:28.549 --> 00:32:31.618 align:middle
它的实现 自定义视图控制器

00:32:31.685 --> 00:32:32.986 align:middle
只想返回

00:32:33.053 --> 00:32:34.821 align:middle
垂直向上 通过堆栈

00:32:35.389 --> 00:32:39.526 align:middle
它询问自己哪个子集包含展开源

00:32:41.662 --> 00:32:44.631 align:middle
照片导航控制器包含这个源

00:32:45.732 --> 00:32:47.935 align:middle
所以返回来的阵列
忽略了那个子阵列

00:32:48.769 --> 00:32:50.804 align:middle
又有一个子阵列

00:32:50.871 --> 00:32:54.508 align:middle
这个阵列是从这个方法
和运行前递归中返回的

00:32:56.276 --> 00:32:59.213 align:middle
我们应该浏览哪个子阵列
寻找展开源呢

00:33:00.214 --> 00:33:01.381 align:middle
不好意思 是展开目标

00:33:03.450 --> 00:33:07.921 align:middle
导航控制器没有任何
没有子源

00:33:08.422 --> 00:33:10.924 align:middle
暂时先略过  再一次递归

00:33:12.793 --> 00:33:16.330 align:middle
询问表格视图控制器
我们应该浏览哪个在哪里寻找目标呢

00:33:16.697 --> 00:33:17.731 align:middle
它没有任何子

00:33:18.298 --> 00:33:21.668 align:middle
我们询问它能否执行
展开segueway功能呢

00:33:23.270 --> 00:33:28.442 align:middle
方法是我刚用过的
它的实现并没有任何载体

00:33:29.042 --> 00:33:31.879 align:middle
这是我们的标记
我们找到它了 找到目标了

00:33:39.353 --> 00:33:44.258 align:middle
此刻 在iOS中 我们要求目标根源

00:33:44.992 --> 00:33:46.593 align:middle
返还一个segueway

00:33:46.660 --> 00:33:49.429 align:middle
这样我们就可以知道如何
恢复视图控制器层级

00:33:49.630 --> 00:33:51.131 align:middle
让我们的目标可见

00:33:52.132 --> 00:33:54.701 align:middle
对于更复杂的视图控制器层级

00:33:54.801 --> 00:33:57.771 align:middle
这个问题真的很难回答

00:33:59.406 --> 00:34:00.574 align:middle
我们弃用那个方法

00:33:59.406 --> 00:34:00.574 align:middle
我们弃用那个方法

00:34:01.608 --> 00:34:04.244 align:middle
以一个命名为增加展开的特性加以取代

00:34:06.013 --> 00:34:09.016 align:middle
这个特性让每个从源到目标的

00:34:09.081 --> 00:34:11.585 align:middle
视图控制器参与展开

00:34:12.186 --> 00:34:13.987 align:middle
因此我只需使用局部知识

00:34:15.789 --> 00:34:18.792 align:middle
执行期将使用

00:34:18.958 --> 00:34:20.793 align:middle
你在检查和界面生成器上

00:34:20.860 --> 00:34:23.496 align:middle
指定的任何子集
构建UI故事板segueway目标

00:34:24.665 --> 00:34:25.966 align:middle
它要求它执行

00:34:29.503 --> 00:34:31.938 align:middle
这是第三步  按照路径走

00:34:33.607 --> 00:34:34.908 align:middle
好了 我们已经找到

00:34:34.975 --> 00:34:36.710 align:middle
从源到目标的路径

00:34:39.746 --> 00:34:42.815 align:middle
首先要做的是为segueway

00:34:42.882 --> 00:34:44.384 align:middle
请求路径上的第一个中继段

00:34:44.451 --> 00:34:46.386 align:middle
朝视图控制器展开

00:34:47.154 --> 00:34:48.822 align:middle
我们将请求源的根源

00:34:49.922 --> 00:34:51.725 align:middle
执行任何所需的行动

00:34:51.992 --> 00:34:54.194 align:middle
以让我们进入链接中的第二步

00:34:55.996 --> 00:34:58.532 align:middle
子视图控制器对其根源一无所知

00:34:58.599 --> 00:35:00.901 align:middle
这个方法并没有用

00:34:58.599 --> 00:35:00.901 align:middle
这个方法并没有用

00:35:01.235 --> 00:35:02.936 align:middle
它被告知向根源展开

00:35:03.270 --> 00:35:04.638 align:middle
但这并不是子的责任

00:35:06.306 --> 00:35:08.642 align:middle
接下来 我们来说说
自定义集合视图控制器

00:35:09.610 --> 00:35:13.547 align:middle
我们发出请求 好了
朝journal导航控制器展开

00:35:15.182 --> 00:35:17.251 align:middle
这是自定义标签控制器所需做的

00:35:17.317 --> 00:35:21.088 align:middle
它知道如何重新安排

00:35:21.955 --> 00:35:24.091 align:middle
以便让journal导航控制器可见

00:35:27.494 --> 00:35:31.765 align:middle
下一步 我们要求导航控制器

00:35:31.832 --> 00:35:33.066 align:middle
对表格视图控制器展开

00:35:34.034 --> 00:35:35.936 align:middle
它已经在导航堆栈顶部

00:35:36.003 --> 00:35:37.437 align:middle
所以这里就不需要再做什么了

00:35:38.372 --> 00:35:40.541 align:middle
我们返回用户想去的地方

00:35:42.176 --> 00:35:44.011 align:middle
这就是关于它们内部如何运作的

00:35:45.345 --> 00:35:47.614 align:middle
托尼将为你展示
如何在你的应用中执行

00:35:52.286 --> 00:35:53.153 align:middle
谢谢你 凯尔

00:35:54.188 --> 00:35:57.257 align:middle
在接下的演示中 我将向大家展示

00:35:57.324 --> 00:36:00.294 align:middle
如何用自定义container
视图控制器segueways展开

00:35:57.324 --> 00:36:00.294 align:middle
如何用自定义container
视图控制器segueways展开

00:36:00.360 --> 00:36:02.129 align:middle
你可能还记得在第一个演示中

00:36:02.362 --> 00:36:05.265 align:middle
我们通过Journal
按钮创建了一个segueway

00:36:05.332 --> 00:36:07.601 align:middle
该模态表是
用于创建新的journal入口的

00:36:09.236 --> 00:36:12.973 align:middle
不过 我们还没有为该完成按钮
附加任何功能

00:36:13.640 --> 00:36:16.210 align:middle
我现在需要做的是通过完成按钮

00:36:16.276 --> 00:36:17.678 align:middle
创建一个展开segueway

00:36:17.744 --> 00:36:19.680 align:middle
然后
使用展开segueway去做一些事

00:36:20.180 --> 00:36:22.783 align:middle
首先 我想要谈谈模态表

00:36:23.851 --> 00:36:26.954 align:middle
我想要从导航中

00:36:27.020 --> 00:36:28.055 align:middle
撤销照片视图管理器

00:36:29.122 --> 00:36:32.226 align:middle
我想要把标签转成journal标签

00:36:33.093 --> 00:36:35.128 align:middle
我想要下移导航控制器

00:36:35.195 --> 00:36:36.463 align:middle
回到该表格视图控制器

00:36:36.530 --> 00:36:38.031 align:middle
这里我们会为

00:36:38.365 --> 00:36:40.133 align:middle
journal入口

00:36:40.200 --> 00:36:41.268 align:middle
插入新的表格视图单元

00:36:42.002 --> 00:36:44.638 align:middle
对于一个segueway来说要很多
首先从哪开始呢？

00:36:45.639 --> 00:36:49.476 align:middle
第一步
是创建一个展开segueway

00:36:49.710 --> 00:36:52.679 align:middle
先在想要展开的视图控制器中

00:36:52.946 --> 00:36:54.781 align:middle
定义IB动作方法的特别类型

00:36:55.082 --> 00:36:57.551 align:middle
这种情况下
是journal表格视图控制器

00:36:59.086 --> 00:37:00.687 align:middle
在这里 控制器执行过程中

00:36:59.086 --> 00:37:00.687 align:middle
在这里 控制器执行过程中

00:37:00.754 --> 00:37:03.624 align:middle
你可以看到这里有IB动作方法

00:37:04.491 --> 00:37:06.126 align:middle
而且 是特别的IB动作方式

00:37:06.193 --> 00:37:08.595 align:middle
因为它将
一个UI故事板Segueway

00:37:08.662 --> 00:37:09.763 align:middle
作为其唯一参数

00:37:11.565 --> 00:37:14.668 align:middle
任何时候Xcode看到
一个将UI故事板Segueway

00:37:14.735 --> 00:37:17.771 align:middle
作为其唯一参数
的IB动作方法时候

00:37:17.838 --> 00:37:21.308 align:middle
都会允许你创建展开
segueway用于指向选择器

00:37:23.777 --> 00:37:26.713 align:middle
使用这种方法

00:37:26.780 --> 00:37:30.184 align:middle
我控制了
segueway的资源视图控制器

00:37:30.250 --> 00:37:32.553 align:middle
视图控制器是用于创建
一条新的journal入口

00:37:33.620 --> 00:37:36.023 align:middle
我使用
该视图控制器的journal入口

00:37:36.089 --> 00:37:39.326 align:middle
然后添加到我们的模型中这里刷新表格

00:37:39.593 --> 00:37:41.461 align:middle
然后插入新单元格
然后滚动到单元格位置

00:37:42.896 --> 00:37:45.732 align:middle
现在
我们可以看到我们想要的展开动作

00:37:46.099 --> 00:37:47.401 align:middle
让我们现在回到故事板上

00:37:47.467 --> 00:37:49.570 align:middle
然后创建一个
segueway指向该选择器

00:37:51.705 --> 00:37:54.107 align:middle
这里我们在视图控制器

00:37:54.174 --> 00:37:56.109 align:middle
这里
可以创建一个新journal入口

00:37:56.343 --> 00:37:59.713 align:middle
然后我们将通过完成按钮
创建一个展开segueway

00:38:00.447 --> 00:38:02.816 align:middle
为了这么做 我们将从完成按钮拖动到

00:38:03.383 --> 00:38:05.752 align:middle
SceneDoc的退出占位符

00:38:06.920 --> 00:38:09.790 align:middle
退出占位符可作为占位符

00:38:09.990 --> 00:38:11.758 align:middle
用于Xcode在工作区发现的

00:38:11.825 --> 00:38:13.760 align:middle
所有合法的
展开segueway动作中

00:38:14.361 --> 00:38:17.231 align:middle
根据UI故事板Segueway

00:38:17.431 --> 00:38:19.733 align:middle
通过IB动作方法再次确认

00:38:19.833 --> 00:38:21.201 align:middle
是否是合法的展开动作

00:38:22.102 --> 00:38:25.439 align:middle
这里会发现我们看到的这种方法
所以 我准备进行选择

00:38:27.741 --> 00:38:30.377 align:middle
一般而言 这就是你要做的
当你创建一个展开segueway

00:38:30.577 --> 00:38:33.580 align:middle
你定义展开选择器
然后创建segueway指向它

00:38:34.281 --> 00:38:37.251 align:middle
在我例子中
我想要执行一些自定义逻辑

00:38:38.018 --> 00:38:40.687 align:middle
这样可以允许我的自定义
container视图控制器

00:38:40.754 --> 00:38:42.189 align:middle
在这些标签之间转换

00:38:43.190 --> 00:38:47.227 align:middle
这个逻辑在自定义container
视图控制器文件 我们来看

00:38:51.832 --> 00:38:54.134 align:middle
正如你看到的 在这个视图控制器中

00:38:54.201 --> 00:38:56.870 align:middle
我已经展开
指向视图控制器的segueway

00:38:57.971 --> 00:38:59.673 align:middle
在这种方法中 我做了两件事

00:39:00.841 --> 00:39:03.443 align:middle
首先 我选取当前选择的导航控制器

00:39:03.510 --> 00:39:06.213 align:middle
然后我退出到根视图控制器

00:39:07.514 --> 00:39:10.284 align:middle
然后 我设定选择的导航控制器

00:39:10.617 --> 00:39:13.353 align:middle
作为这个参数的后续视图控制器

00:39:14.688 --> 00:39:17.991 align:middle
控制后续视图前是展开链中的下一步

00:39:18.358 --> 00:39:20.327 align:middle
务须展示
segueway最终目的地

00:39:20.394 --> 00:39:23.030 align:middle
这里是该展开指向的

00:39:23.096 --> 00:39:25.732 align:middle
自定义container的直接下代

00:39:27.801 --> 00:39:31.104 align:middle
这里设置属性观察

00:39:31.171 --> 00:39:33.974 align:middle
准备升级我们自动布局限制

00:39:34.041 --> 00:39:35.809 align:middle
并执行我们之前看到的滑动动画

00:39:37.311 --> 00:39:40.514 align:middle
看到我的自定义
container视图控制器

00:39:40.581 --> 00:39:42.449 align:middle
执行递增展开

00:39:42.916 --> 00:39:44.751 align:middle
然我们看看展开segueway动作

00:39:48.822 --> 00:39:50.891 align:middle
我会选择一个单元 下拉菜单

00:39:51.458 --> 00:39:52.593 align:middle
选择journal按钮

00:39:53.527 --> 00:39:54.928 align:middle
现在 我点击完成按钮

00:39:55.696 --> 00:39:57.898 align:middle
你可以看到我们已经转换了标签

00:39:58.532 --> 00:40:00.167 align:middle
在journal视图控制器这里

00:39:58.532 --> 00:40:00.167 align:middle
在journal视图控制器这里

00:40:00.400 --> 00:40:03.170 align:middle
并插入journal
入口的新表格视图单元

00:40:05.038 --> 00:40:07.674 align:middle
正如
你所看到的展开segueway

00:40:07.741 --> 00:40:09.343 align:middle
在iOS 9系统上
更多的强大功能

00:40:09.409 --> 00:40:11.645 align:middle
和自定义container
视图控制器配合好

00:40:18.652 --> 00:40:21.188 align:middle
这样 关于展开演示结束了

00:40:21.455 --> 00:40:24.124 align:middle
现在
让我们回到凯尔这里看看他的演示

00:40:27.895 --> 00:40:30.831 align:middle
谢谢你 托尼
现在我们可以快速总结一下

00:40:30.898 --> 00:40:32.833 align:middle
用于刚介绍的展开的新API

00:40:33.433 --> 00:40:34.968 align:middle
我们已经放弃

00:40:35.035 --> 00:40:36.737 align:middle
展开segueway的视图控制器

00:40:36.803 --> 00:40:40.374 align:middle
取而代之
我们用许可展开资源的子视图控制器

00:40:40.941 --> 00:40:42.342 align:middle
如果你不再使用旧方法

00:40:42.409 --> 00:40:44.077 align:middle
而且使用新的方法

00:40:44.144 --> 00:40:46.813 align:middle
我们会在
iOS 9系统上保留旧方法

00:40:46.880 --> 00:40:50.017 align:middle
这样如果你的app是在
iOS 8上运行的代码照常执行

00:40:50.150 --> 00:40:51.652 align:middle
也可以在iOS9上运行

00:40:52.619 --> 00:40:56.390 align:middle
segueway定源法调用
新的允许子视图包容控制器

00:40:56.456 --> 00:41:00.694 align:middle
这样可以过滤返回

00:40:56.456 --> 00:41:00.694 align:middle
这样可以过滤返回

00:41:00.761 --> 00:41:02.496 align:middle
子视图控制器阵列

00:41:04.164 --> 00:41:06.667 align:middle
如果需要某些自定义校验

00:41:06.733 --> 00:41:08.836 align:middle
用于执行特定的展开

00:41:08.902 --> 00:41:13.006 align:middle
你可以替换和执行
已有的展开seguew动作方法

00:41:13.373 --> 00:41:15.142 align:middle
但是是预设情况
所能执行的动作是

00:41:15.209 --> 00:41:17.177 align:middle
查看接收器是否对选择器做出反馈

00:41:17.811 --> 00:41:18.879 align:middle
一般而言 这些就足够了

00:41:21.281 --> 00:41:23.483 align:middle
同样的 我们已经放弃

00:41:23.550 --> 00:41:26.486 align:middle
查看视图控制器
方法的展开segueway

00:41:27.020 --> 00:41:29.957 align:middle
并用展开segueway取代

00:41:30.023 --> 00:41:31.592 align:middle
可以在执行递增展开链条中

00:41:32.059 --> 00:41:33.393 align:middle
每个试图控制器上调用

00:41:36.964 --> 00:41:37.798 align:middle
总之

00:41:38.498 --> 00:41:41.201 align:middle
今天我们了解了如何
使用组织故事板引用

00:41:42.669 --> 00:41:45.339 align:middle
我们了解到如何通过
重新分类自定义segueway

00:41:45.772 --> 00:41:47.574 align:middle
即使是我们使用的是标准指令

00:41:48.909 --> 00:41:51.645 align:middle
我们还详细了解了
一下iOS和iOS 9系统

00:41:52.312 --> 00:41:54.748 align:middle
通过形态展示视图控制器

00:41:55.449 --> 00:41:57.284 align:middle
通过展开segueway演示

00:41:57.684 --> 00:42:01.889 align:middle
而且指向segueway目标

00:41:57.684 --> 00:42:01.889 align:middle
而且指向segueway目标

00:42:02.155 --> 00:42:05.392 align:middle
弹出框展示segueway

00:42:05.659 --> 00:42:09.229 align:middle
这样可以对动画
和自适应性执行委派动作

00:42:11.031 --> 00:42:13.066 align:middle
我们了解展开
segueway是如何工作

00:42:13.133 --> 00:42:15.202 align:middle
然我们可以后退到应用流中

00:42:15.903 --> 00:42:18.805 align:middle
而且这样我们可以在自定义
container中更容易使用

00:42:19.439 --> 00:42:22.709 align:middle
以及如何在iOS 9系统上
移除禁用API

00:42:24.611 --> 00:42:26.146 align:middle
如果需要更多故事版的信息

00:42:26.213 --> 00:42:28.415 align:middle
故事版助手
在Xcode 7中可以查看

00:42:28.482 --> 00:42:30.150 align:middle
所以有问题先查看

00:42:30.517 --> 00:42:33.887 align:middle
我们还有一个简单的项目
segueway catalog

00:42:34.721 --> 00:42:36.723 align:middle
可以在开发者网站上下载

00:42:37.124 --> 00:42:39.226 align:middle
segueway这个
名字中间不应该有空格

00:42:39.293 --> 00:42:42.062 align:middle
如果在catalog中搜
segueway会找到其他东西

00:42:44.031 --> 00:42:46.934 align:middle
如果需要技术支持 请查看开发者论坛

00:42:47.000 --> 00:42:48.869 align:middle
上面有很多像你一样的开发者

00:42:48.936 --> 00:42:52.606 align:middle
面对你所遇到的相同的问题
上面都有解答

00:42:52.673 --> 00:42:54.575 align:middle
这里可以帮助你解决问题

00:42:55.242 --> 00:42:57.211 align:middle
你可以联系开发者技术支持部

00:42:57.277 --> 00:42:58.445 align:middle
或者如果你想进行咨询

00:42:58.512 --> 00:43:00.681 align:middle
可以联系我们的专员 卡特· 罗伯特

00:42:58.512 --> 00:43:00.681 align:middle
可以联系我们的专员 卡特· 罗伯特

00:43:01.215 --> 00:43:02.983 align:middle
我们在Bash会议上见
