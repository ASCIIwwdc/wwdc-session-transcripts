WEBVTT

00:00:20.053 --> 00:00:21.321 align:middle
多任务处理要点

00:00:21.388 --> 00:00:23.724 align:middle
针对iPad 和 iOS 9
基于媒体的App

00:00:30.964 --> 00:00:32.533 align:middle
欢迎来到会话 211

00:00:32.598 --> 00:00:33.767 align:middle
多任务处理要点

00:00:33.834 --> 00:00:36.036 align:middle
针对iPad 和 iOS 9
基于媒体的App

00:00:37.070 --> 00:00:39.540 align:middle
我是  斯特凡 哈费内格
我今天会和乔纳森一起谈谈

00:00:39.606 --> 00:00:41.842 align:middle
关于如何采用
Picture in Picture

00:00:41.909 --> 00:00:43.343 align:middle
和如何掌握共享的资源

00:00:45.112 --> 00:00:48.982 align:middle
如果您已经集成或计划
开始在 iPad 和 iOS 9

00:00:49.049 --> 00:00:50.851 align:middle
集成基于媒体的App
这个会您你来对了

00:00:52.553 --> 00:00:54.121 align:middle
这个是三个系列会议
中的第二个

00:00:54.188 --> 00:00:55.856 align:middle
关于今年的 iPad
多任务处理问题

00:00:58.625 --> 00:01:00.494 align:middle
但是现在您应该已经
熟悉所有

00:00:58.625 --> 00:01:00.494 align:middle
但是现在您应该已经
熟悉所有

00:01:00.861 --> 00:01:03.163 align:middle
这周我们介绍过的
iPad的多任务处理处理功能了

00:01:04.164 --> 00:01:05.966 align:middle
我想提醒大家
关于这一概念

00:01:06.033 --> 00:01:09.636 align:middle
是关于主要规则与
辅助App

00:01:10.871 --> 00:01:12.639 align:middle
那个主App是
那个一定会

00:01:13.140 --> 00:01:15.576 align:middle
出现在左边
除非设备的设置是从右到左

00:01:15.642 --> 00:01:16.844 align:middle
这样的话它就是相反的

00:01:18.545 --> 00:01:20.347 align:middle
在第一个会议中我们
向您展示了如何开始

00:01:20.414 --> 00:01:22.549 align:middle
iPad iOS 9 中的
多任务处理

00:01:25.052 --> 00:01:27.221 align:middle
在这次的会议中我们来看看
怎样使用Picture in Picture

00:01:30.924 --> 00:01:33.293 align:middle
当您正在一个App应用程序上
播放视频的时候

00:01:33.360 --> 00:01:35.562 align:middle
在 iOS 8 里
当您正在播放视频的时候

00:01:35.629 --> 00:01:38.165 align:middle
如果您切换成其他APP应用程序
视频会停止播放

00:01:40.334 --> 00:01:42.269 align:middle
但在iOS 9
的Picture in Picture里

00:01:42.336 --> 00:01:43.337 align:middle
视频会自动进行跳转成

00:01:43.403 --> 00:01:45.806 align:middle
一个浮动的动画窗口
并且在视频继续播放的同时

00:01:45.873 --> 00:01:48.242 align:middle
允许在iPad上
使用其他 Apps

00:01:51.044 --> 00:01:53.247 align:middle
这一个会议中我会讲很多关于
Picture in Picture

00:01:53.313 --> 00:01:55.782 align:middle
所以从现在开始我简称
它为 PiP

00:01:59.119 --> 00:02:03.824 align:middle
我们最新的 Ipad、
iPad 2 Air

00:01:59.119 --> 00:02:03.824 align:middle
我们最新的 Ipad、
iPad 2 Air

00:02:03.891 --> 00:02:05.692 align:middle
iPad Air、
迷你 iPad 2 和 3

00:02:06.460 --> 00:02:08.294 align:middle
都支持PiP

00:02:11.331 --> 00:02:12.866 align:middle
现在您可能会想
我的App应用程序应该采用

00:02:12.933 --> 00:02:14.134 align:middle
Picture in Picture 吗？

00:02:17.704 --> 00:02:19.706 align:middle
如果您的App里的
播放的视频

00:02:19.773 --> 00:02:21.942 align:middle
画质好到让人感觉如同身临其境
那么一定要采用

00:02:23.544 --> 00:02:26.180 align:middle
如果您的App只是为了提供
一个基本的比如说

00:02:26.246 --> 00:02:28.882 align:middle
给孩子看着玩的视频
这样可能就就可能不需要采用PiP了

00:02:30.817 --> 00:02:32.419 align:middle
如果您认为您的App受众群体

00:02:32.486 --> 00:02:33.820 align:middle
想在玩其他程序的时候

00:02:33.887 --> 00:02:36.356 align:middle
也还能看着视频

00:02:39.726 --> 00:02:42.729 align:middle
现在让我们看看iOS 8
里视频播放器的App应用程序接口

00:02:44.565 --> 00:02:45.732 align:middle
媒体播放器
框架

00:02:45.799 --> 00:02:47.201 align:middle
从iOS SDK就存在了

00:02:48.836 --> 00:02:50.304 align:middle
去年我们拿出了 AVKit

00:02:50.370 --> 00:02:51.972 align:middle
作为一种新的高级别媒体
框架

00:02:52.039 --> 00:02:53.774 align:middle
用来放置媒体框架的其他部件

00:02:55.409 --> 00:02:57.177 align:middle
AVFoundation 可以为
想要在用户界面

00:02:57.244 --> 00:02:58.779 align:middle
创建自己的视频播放器
的客户所用

00:03:00.480 --> 00:03:03.317 align:middle
Webkit允许网站使用者使用
他们的技术

00:03:05.285 --> 00:03:07.621 align:middle
让我们来稍微谈谈
媒体播放器

00:03:09.656 --> 00:03:12.492 align:middle
在 iOS 9 里我们弃用了
MP 电影播放器控制器

00:03:12.559 --> 00:03:13.961 align:middle
和 MP 电影播放器
视图控制器

00:03:15.863 --> 00:03:18.765 align:middle
在 iOS 98里我们提供
AV播放器视图控制器

00:03:18.832 --> 00:03:20.501 align:middle
作为那两个弃用了的控制器的
替代

00:03:22.503 --> 00:03:25.005 align:middle
去年在控制与掌握
现代媒体一览的会议里我们

00:03:25.072 --> 00:03:27.574 align:middle
反而给大家展示了
采用AVKit是非常容易的

00:03:27.975 --> 00:03:29.843 align:middle
在这次会议我们将着重
谈谈 AVKit、

00:03:29.910 --> 00:03:31.378 align:middle
AVFoundation 和 WebKit

00:03:33.280 --> 00:03:35.382 align:middle
这三个媒体框架都
依赖于 AVPlayerLayer

00:03:35.449 --> 00:03:36.517 align:middle
来显示视频内容

00:03:38.151 --> 00:03:39.753 align:middle
下面我展示一下PiP 是怎样工作的

00:03:41.355 --> 00:03:43.857 align:middle
我们从您App应用程序里的
一个AVPlayerLayer开始

00:03:45.158 --> 00:03:46.593 align:middle
为了使视频可以在
这个App应用程序转换

00:03:46.660 --> 00:03:49.029 align:middle
到后台的时候
也能继续播放

00:03:49.096 --> 00:03:50.797 align:middle
我们需要用另外的技术
重新处理图像帧

00:03:53.901 --> 00:03:55.469 align:middle
为此系统将会
添加一个新图层

00:03:55.536 --> 00:03:57.304 align:middle
来那可以承载您
的视频内容

00:03:59.873 --> 00:04:04.178 align:middle
当PiP 开始时PiP窗口
会在这个图层中被创建

00:03:59.873 --> 00:04:04.178 align:middle
当PiP 开始时PiP窗口
会在这个图层中被创建

00:04:04.344 --> 00:04:06.346 align:middle
然后被放置在
AVPlayerLayer里

00:04:08.215 --> 00:04:10.284 align:middle
现在图像帧
可以被重新排列了

00:04:12.219 --> 00:04:15.022 align:middle
这时会有一个无缝连接的过渡过程
然后视频就能继续播放了

00:04:16.423 --> 00:04:18.225 align:middle
重申一下我们不是
更改App应用程序里的

00:04:18.291 --> 00:04:19.625 align:middle
AVPlayerLayer

00:04:19.692 --> 00:04:21.361 align:middle
我们只是停止提供
图像帧

00:04:23.897 --> 00:04:27.067 align:middle
现在助理可以按照它的要求
定位和更改一下PiP窗口的大小

00:04:28.402 --> 00:04:30.304 align:middle
现在当您的App应用程序
转换到后台之后

00:04:32.005 --> 00:04:33.874 align:middle
视频还是在继续播放

00:04:37.344 --> 00:04:40.280 align:middle
那么我们现代的视频播放器
当中哪一个支持 PiP呢?

00:04:41.682 --> 00:04:43.550 align:middle
我很高兴地告诉大家
所有都支持

00:04:45.652 --> 00:04:48.822 align:middle
在会议的第一部分
我将告诉您如何在您的应用程序里

00:04:48.889 --> 00:04:51.425 align:middle
使用这三个媒体框架
来运用PiP

00:04:52.659 --> 00:04:54.161 align:middle
现在我们先用AVKit 开头

00:04:57.631 --> 00:04:59.633 align:middle
AVKit 用作视频回放的
主要应用程式界面

00:04:59.700 --> 00:05:01.168 align:middle
是AVPlayer视图控制的

00:04:59.700 --> 00:05:01.168 align:middle
是AVPlayer视图控制的

00:05:01.568 --> 00:05:03.570 align:middle
是现代的 AV 控制器下面的一个

00:05:03.637 --> 00:05:05.806 align:middle
用来提供标准和行为控制
的控制器

00:05:07.107 --> 00:05:10.210 align:middle
在 iOS 9 里AV 视图控制器
激活了 Picture in Picture

00:05:10.277 --> 00:05:12.246 align:middle
并且将它的激活按钮
放置在一个更低的地方

00:05:13.881 --> 00:05:16.917 align:middle
当用户点击此按钮
视频就会自动进行动画处理

00:05:16.984 --> 00:05:17.918 align:middle
成PiP窗口

00:05:20.687 --> 00:05:23.090 align:middle
我的同事费利克斯将向您展示
如果您在您的AVPlayer控制器应用程序里

00:05:23.156 --> 00:05:24.892 align:middle
想让PiP激活按钮显示在界面上

00:05:24.992 --> 00:05:26.360 align:middle
所需要做的事

00:05:35.269 --> 00:05:36.103 align:middle
大家好

00:05:36.270 --> 00:05:39.373 align:middle
我很高兴能向您展示新的
有Picture in Picture支持的

00:05:39.439 --> 00:05:40.807 align:middle
AV播放器画面控制器

00:05:41.408 --> 00:05:44.444 align:middle
为此我有一个展示用的
模拟运行应用程序

00:05:44.511 --> 00:05:46.713 align:middle
将会用来展示一个一个用
集合视图控制器控制的

00:05:46.780 --> 00:05:48.782 align:middle
视频合集

00:05:49.750 --> 00:05:51.151 align:middle
我可以点击其中一个视频

00:05:51.285 --> 00:05:53.086 align:middle
来显示有关这个视频的详细信息

00:05:54.254 --> 00:05:56.523 align:middle
我还可以点击那个大大的
播放按钮激活

00:05:57.291 --> 00:06:01.595 align:middle
AVPlayer视图控制器
并且开始全屏视频播放

00:05:57.291 --> 00:06:01.595 align:middle
AVPlayer视图控制器
并且开始全屏视频播放

00:06:01.962 --> 00:06:04.731 align:middle
但是您可以看到
用户界面还没有

00:06:04.798 --> 00:06:07.301 align:middle
在右下角显示 PiP 按钮

00:06:08.268 --> 00:06:11.138 align:middle
下面是两个的简单步骤
可以让PiP按钮显示出来

00:06:11.205 --> 00:06:13.040 align:middle
我用在Xcode演示给你们看

00:06:14.408 --> 00:06:17.277 align:middle
第一步是设置
应用程序的后台模式

00:06:17.744 --> 00:06:20.414 align:middle
为此我切换到
项目设置

00:06:20.480 --> 00:06:23.450 align:middle
选择目标然后去
功能选项卡

00:06:24.484 --> 00:06:27.221 align:middle
我们需要启用

00:06:27.287 --> 00:06:30.691 align:middle
在后台说明下方这里的和音频

00:06:30.757 --> 00:06:33.026 align:middle
播放复选框也需要选上

00:06:34.328 --> 00:06:39.099 align:middle
第二步是设置
应用程序的音频类别

00:06:39.166 --> 00:06:41.368 align:middle
为此我们进到
应用程序代理

00:06:41.435 --> 00:06:43.804 align:middle
并首次导入
AVFoundation

00:06:45.038 --> 00:06:48.308 align:middle
接下来应用程序已经
完成启动此选项的启动

00:06:48.842 --> 00:06:51.278 align:middle
我可以设置音频会议类别：

00:06:53.046 --> 00:06:57.050 align:middle
通过要求 AV 音频会议共享文件

00:06:57.117 --> 00:06:58.752 align:middle
来将类别设置为

00:06:58.819 --> 00:07:01.154 align:middle
AV 音频会议类别回放

00:06:58.819 --> 00:07:01.154 align:middle
AV 音频会议类别回放

00:07:01.889 --> 00:07:04.758 align:middle
这段代码已经设置好了
让我们再次启动模拟程序

00:07:08.762 --> 00:07:10.464 align:middle
我再一次选择视频...

00:07:12.199 --> 00:07:13.967 align:middle
在全屏播放

00:07:14.034 --> 00:07:16.136 align:middle
现在在右下角

00:07:16.203 --> 00:07:17.704 align:middle
PiP 按钮已经显示出来了

00:07:19.273 --> 00:07:20.541 align:middle
当按下按钮

00:07:21.608 --> 00:07:24.311 align:middle
视频就会以Picture in Picture模式
开始播放

00:07:25.112 --> 00:07:28.248 align:middle
PiP 中的用户界面
窗口包含三个按钮

00:07:28.315 --> 00:07:30.450 align:middle
中间的视频播放切换按钮
和另外两个

00:07:30.517 --> 00:07:33.187 align:middle
我将展开讨论的按钮

00:07:34.188 --> 00:07:36.723 align:middle
并且我们注意到在用户界面上

00:07:36.790 --> 00:07:38.325 align:middle
有个播放进度显示条

00:07:39.059 --> 00:07:41.862 align:middle
现在在这个视频播放的时候
我们切换回

00:07:41.929 --> 00:07:45.165 align:middle
那个视频合集比如说可以

00:07:45.432 --> 00:07:47.501 align:middle
看看另外一个视频的详细信息

00:07:48.268 --> 00:07:51.271 align:middle
我或者也可以
按Home键

00:07:53.473 --> 00:07:56.810 align:middle
启动另外一个App应用程序
这些都可以在视频还继续播放

00:07:56.877 --> 00:07:57.778 align:middle
的同时时候进行

00:07:58.045 --> 00:08:00.781 align:middle
在PiP窗口左边的
那个按钮可以让页面

00:07:58.045 --> 00:08:00.781 align:middle
在PiP窗口左边的
那个按钮可以让页面

00:08:00.848 --> 00:08:02.149 align:middle
切换回到主画面播放

00:08:02.783 --> 00:08:05.552 align:middle
当我按这个按钮的时候
那个模拟App应用程序就切换

00:08:05.619 --> 00:08:07.988 align:middle
回到了前面
但是你们刚才看到

00:08:08.055 --> 00:08:09.790 align:middle
PiP窗口仅仅是消失了

00:08:10.157 --> 00:08:13.994 align:middle
那是因为我们的PiP的算法不知道
App是不是准备好

00:08:14.061 --> 00:08:15.195 align:middle
让Video切换回来了

00:08:15.562 --> 00:08:18.632 align:middle
接下来让我展示一下如何用新的
XCode 恢复用户界面

00:08:18.699 --> 00:08:21.535 align:middle
来处理视频回放这件
你们的用户大概会想要做的事

00:08:22.302 --> 00:08:25.005 align:middle
为此我切换回集合视图控制器

00:08:26.139 --> 00:08:29.343 align:middle
这也是iOS 9里新出现的我们加入
了一个给AV播放器视图控制器

00:08:29.409 --> 00:08:30.811 align:middle
的代理处理器

00:08:31.111 --> 00:08:34.347 align:middle
在这段代码里我已经把
集合视图控制器

00:08:34.414 --> 00:08:36.450 align:middle
当成了AV播放器
试图控制器的代理

00:08:37.384 --> 00:08:40.721 align:middle
为了重新安装用户界面
集合视图控制器

00:08:40.787 --> 00:08:44.124 align:middle
需要置入一个简单的信息
一个叫做播放视图控制器的包含

00:08:44.191 --> 00:08:47.261 align:middle
一个非常详细的名称的信息

00:08:47.594 --> 00:08:50.364 align:middle
用Picture in Picture
恢复用户界面

00:08:50.430 --> 00:08:51.532 align:middle
它将会在处理完成时停下

00:08:52.366 --> 00:08:55.302 align:middle
在这段代码中
我把导航控制器设置为

00:08:55.369 --> 00:08:58.739 align:middle
最主要的视图控制器
然后用这个主要视图控制器

00:08:58.805 --> 00:09:01.341 align:middle
来向用户展现由代理提供的

00:08:58.805 --> 00:09:01.341 align:middle
来向用户展现由代理提供的

00:09:01.408 --> 00:09:02.643 align:middle
视图控制器

00:09:03.343 --> 00:09:05.212 align:middle
在这段代码里的另外一个指令是

00:09:05.279 --> 00:09:09.650 align:middle
当播放视图控制器显示在屏幕
上的时候

00:09:09.716 --> 00:09:10.984 align:middle
完成处理器就会被告知

00:09:11.285 --> 00:09:13.320 align:middle
这样处理的话我们的PiP
就会知道

00:09:13.520 --> 00:09:16.390 align:middle
它可以在后台播放动画处理
的视频了

00:09:17.224 --> 00:09:19.026 align:middle
让我们再次运行这个
模拟App应用程序

00:09:22.729 --> 00:09:26.867 align:middle
我再次点击其中一个视频
让它全屏播放

00:09:28.268 --> 00:09:30.404 align:middle
切换到
Picture in Picture模式

00:09:31.805 --> 00:09:33.006 align:middle
然后当我让App

00:09:33.073 --> 00:09:34.908 align:middle
重新进行视频回放的时候

00:09:35.442 --> 00:09:37.177 align:middle
AV播放视图控制器
就显示在画面上了

00:09:37.578 --> 00:09:40.480 align:middle
并且那个视频非常完美地的
重新出现在了屏幕上

00:09:41.648 --> 00:09:43.917 align:middle
另外一个我想给大家展示的
是当我关掉这个

00:09:43.984 --> 00:09:46.520 align:middle
正在播放全屏视频
的App时

00:09:46.587 --> 00:09:47.554 align:middle
会发生什么

00:09:47.621 --> 00:09:51.124 align:middle
打个比方
假如我现在按下了Home键

00:09:52.159 --> 00:09:55.295 align:middle
这样一来
Picture in Picture

00:09:55.429 --> 00:09:57.364 align:middle
就自动激活了
所以那个视频就会继续播放

00:09:58.265 --> 00:10:01.635 align:middle
任何时候用户都可以点击
右边那个关闭按钮

00:09:58.265 --> 00:10:01.635 align:middle
任何时候用户都可以点击
右边那个关闭按钮

00:10:01.702 --> 00:10:03.303 align:middle
来关闭PiP窗口

00:10:03.971 --> 00:10:06.940 align:middle
以上就是有Picture in Picture支持的
AV播放视图控制器

00:10:07.007 --> 00:10:07.841 align:middle
谢谢大家

00:10:09.776 --> 00:10:11.512 align:middle
现在让我们
来回顾一下刚刚大家看到的东西

00:10:12.412 --> 00:10:13.814 align:middle
您只需要做两件事

00:10:15.182 --> 00:10:17.751 align:middle
第一您需要启动相应的背景模式

00:10:18.519 --> 00:10:20.988 align:middle
不然您的App应用程序就不能
在切换到后台的时候

00:10:21.054 --> 00:10:22.256 align:middle
继续播放了

00:10:23.323 --> 00:10:25.292 align:middle
Xcode的能力已经
足够让您你这样做了

00:10:26.093 --> 00:10:28.195 align:middle
音频和画面播放是您接下来
需要启动的功能

00:10:29.329 --> 00:10:32.366 align:middle
并且在未来的iOS 9里
Picture in Picture还可以

00:10:32.432 --> 00:10:33.667 align:middle
更换音频的名字和格式

00:10:35.469 --> 00:10:38.672 align:middle
第二您需要一个有效的AV音频类别

00:10:39.673 --> 00:10:42.543 align:middle
第一次完成这些选项时
是做这件事的一个好时机

00:10:44.511 --> 00:10:46.280 align:middle
您提交
要一个共享音频段落的请求

00:10:47.047 --> 00:10:49.750 align:middle
然后把AV音频段落
按类别回放分类

00:10:51.451 --> 00:10:53.587 align:middle
如果App应用程序支持录音

00:10:53.654 --> 00:10:57.457 align:middle
您也可以选择使用AV音频段落
来播放和录制

00:11:01.395 --> 00:11:06.200 align:middle
如果iOS 8上的视频播放运用程序
支持后台音频

00:11:06.266 --> 00:11:08.135 align:middle
那您已经在同时运行两个程序了

00:11:09.236 --> 00:11:10.871 align:middle
如果您觉得App运用程序
不应该支持Picture in Picture

00:11:10.938 --> 00:11:13.473 align:middle
那么在iOS 9里我们还有
另外一个新的选择

00:11:13.540 --> 00:11:16.109 align:middle
就是在AV播放器视图控制器
里禁用它

00:11:18.679 --> 00:11:20.814 align:middle
注意看当用户点击消息提示时

00:11:20.914 --> 00:11:22.616 align:middle
Picture in Picture
是怎样自动运行的

00:11:23.750 --> 00:11:24.785 align:middle
为什么会这样呢？

00:11:27.321 --> 00:11:30.023 align:middle
当主程序转换到后台程序之后

00:11:30.624 --> 00:11:32.926 align:middle
一个AV播放器视图控制器
就将会被全屏呈现

00:11:33.594 --> 00:11:36.230 align:middle
系统将为用户运行
Picture in Picture

00:11:37.064 --> 00:11:38.732 align:middle
如果视频[听不清]正在播放

00:11:38.799 --> 00:11:40.501 align:middle
那么Picture in Picture
就能启用

00:11:42.936 --> 00:11:44.972 align:middle
请记住即使用户能在通用设置里

00:11:45.038 --> 00:11:47.241 align:middle
关闭这个行为但通常来说

00:11:47.307 --> 00:11:48.809 align:middle
多任务处理会坚持把视频播放覆盖

00:11:52.112 --> 00:11:53.113 align:middle
在菲利克斯刚刚演示的那个模拟程序里

00:11:53.180 --> 00:11:55.849 align:middle
您可以自动解除AV播放视图控制器

00:11:55.916 --> 00:11:57.784 align:middle
然后用户就会开始
使用Picture in Picture

00:11:59.119 --> 00:12:00.821 align:middle
我们不知道这个App运用
程序的结构

00:11:59.119 --> 00:12:00.821 align:middle
我们不知道这个App运用
程序的结构

00:12:00.921 --> 00:12:03.056 align:middle
或者用户会浏览到哪里、
什么时候开启

00:12:03.957 --> 00:12:06.159 align:middle
所以我们需要您的帮助
来存储AV图像控制器

00:12:06.226 --> 00:12:07.861 align:middle
您只需置入这个代理处理器

00:12:09.930 --> 00:12:12.766 align:middle
通过一个很简单的案例中您可以
启动现时视图控制器

00:12:12.833 --> 00:12:15.335 align:middle
来动画处理视频[听不清]

00:12:17.504 --> 00:12:19.273 align:middle
一些运行程序
相对于刚才那个模拟程序

00:12:19.339 --> 00:12:20.774 align:middle
来说结构比较成熟
您可以做其他

00:12:20.841 --> 00:12:22.376 align:middle
一些事

00:12:24.344 --> 00:12:26.813 align:middle
无论如何不要忘记
当您完成存储以后

00:12:26.880 --> 00:12:28.248 align:middle
启用完成处理程序

00:12:29.883 --> 00:12:31.685 align:middle
就是AVKit和
AV播放器视图处理器

00:12:33.620 --> 00:12:35.355 align:middle
接下来让我向大家展示

00:12:35.422 --> 00:12:37.191 align:middle
如何用AVFoundation做
Picture in Picture

00:12:40.127 --> 00:12:42.963 align:middle
作为AVFoundation的客户
您会有一个AV播放层

00:12:43.030 --> 00:12:44.865 align:middle
并且很可能会进行播放控制

00:12:46.233 --> 00:12:48.869 align:middle
我接下来向大家演示该做什么
然后如果在您的运行程序里

00:12:49.703 --> 00:12:51.972 align:middle
从这做到那

00:12:54.341 --> 00:12:57.411 align:middle
在iOS 9 里我们有一个新的
类别叫

00:12:57.511 --> 00:12:58.812 align:middle
AV Picture in Picture
控制器

00:12:59.379 --> 00:13:02.616 align:middle
它允许您置入跟我刚才展示的那个
相同的PiP指示器

00:12:59.379 --> 00:13:02.616 align:middle
它允许您置入跟我刚才展示的那个
相同的PiP指示器

00:13:02.783 --> 00:13:04.618 align:middle
但是用您自己的用户界面

00:13:07.721 --> 00:13:09.790 align:middle
在我创建一个
AV Picture in Picture

00:13:09.857 --> 00:13:12.659 align:middle
控制器的示范之前
您应该先检查一下

00:13:12.726 --> 00:13:14.695 align:middle
当前设备是否支持
Picture in Picture　

00:13:17.164 --> 00:13:18.532 align:middle
您通过提供AV播放层来

00:13:18.599 --> 00:13:20.234 align:middle
创建一个AV Picture
in Picture控制器

00:13:22.102 --> 00:13:24.705 align:middle
把AV Picture in Picture
控制器看做一个

00:13:24.771 --> 00:13:28.041 align:middle
允许用PiP窗口呈现
当前AV播放层内容的的物件

00:13:30.544 --> 00:13:33.013 align:middle
设置一个代理不是必须的
但是你很有可能

00:13:33.080 --> 00:13:33.947 align:middle
您将来会需要它

00:13:36.650 --> 00:13:38.785 align:middle
接下来PiP按钮
就出现在用户界面了

00:13:40.153 --> 00:13:42.222 align:middle
这样用户就可以开始使用
Picture in Picture

00:13:43.657 --> 00:13:44.725 align:middle
只有当设备支持
Picture in Picture的时候

00:13:44.825 --> 00:13:46.927 align:middle
您才需要加那个按钮

00:13:49.296 --> 00:13:50.764 align:middle
也会有当下无法启动

00:13:50.831 --> 00:13:52.733 align:middle
Picture in Picture
的时候

00:13:52.900 --> 00:13:54.501 align:middle
即使设备总体来说是支持
Picture in Picture的

00:13:55.702 --> 00:13:57.604 align:middle
这种时候您需要禁用您的PiP按钮

00:13:59.473 --> 00:14:02.342 align:middle
为此我们在PiP控制器
上有一个属性

00:13:59.473 --> 00:14:02.342 align:middle
为此我们在PiP控制器
上有一个属性

00:14:03.510 --> 00:14:05.145 align:middle
让您可以先观察
然后升级并且启用

00:14:05.212 --> 00:14:06.246 align:middle
您的PiP按钮

00:14:09.249 --> 00:14:11.118 align:middle
您的PiP按钮置入

00:14:11.185 --> 00:14:12.386 align:middle
看起来就像这样

00:14:14.121 --> 00:14:16.290 align:middle
首先您得确认PiP还没有
被激活

00:14:17.691 --> 00:14:19.993 align:middle
然后您就可以在PiP控制器里
启用Picture in Picture

00:14:21.361 --> 00:14:23.197 align:middle
不要在没有用户活动
的时候用这个方法

00:14:25.232 --> 00:14:28.135 align:middle
如果您不恰当地的运用了
这个方法

00:14:28.202 --> 00:14:29.336 align:middle
苹果应用商店组就会拒绝
您你提交的申请

00:14:32.573 --> 00:14:35.209 align:middle
如果在PiP被激活的情况下
运行程序提供了额外的内容

00:14:35.742 --> 00:14:37.311 align:middle
您或许应该在PiP启动之后

00:14:37.377 --> 00:14:38.579 align:middle
关闭视频播放视图控制器

00:14:39.980 --> 00:14:42.549 align:middle
为此我们可以置入刚开始的
那个代理方法

00:14:43.383 --> 00:14:45.419 align:middle
然后在您的控制器上启动
那个之前是关闭了的

00:14:45.586 --> 00:14:46.720 align:middle
视图控制动画处理器

00:14:48.956 --> 00:14:50.624 align:middle
但是当您这么做的时候
请务必确认

00:14:50.691 --> 00:14:52.326 align:middle
您没有释放您的PiP控制器

00:14:53.293 --> 00:14:57.431 align:middle
因为当您你释放它的时候
PiP窗口就会消失了

00:14:58.899 --> 00:15:01.134 align:middle
所以请确保您是按照
如上所示来建构您的App的

00:14:58.899 --> 00:15:01.134 align:middle
所以请确保您是按照
如上所示来建构您的App的

00:15:03.904 --> 00:15:06.707 align:middle
AV Picture in Picture
控制器有一个代理方式

00:15:06.773 --> 00:15:08.609 align:middle
让您存储视图控制器

00:15:10.711 --> 00:15:12.613 align:middle
在简单的环境中您只需要启用

00:15:12.679 --> 00:15:13.947 align:middle
当前视图控制器来处理动画

00:15:15.315 --> 00:15:17.384 align:middle
我再次强调当您完成存储的
时候记得

00:15:17.451 --> 00:15:19.319 align:middle
启动完成处理程序

00:15:20.320 --> 00:15:23.123 align:middle
因为当您启动完成处理程序
的时候它会让

00:15:23.190 --> 00:15:24.157 align:middle
那个用来最初启动PiP控制器的

00:15:24.224 --> 00:15:26.527 align:middle
AV播放层回到了屏幕上

00:15:28.495 --> 00:15:31.965 align:middle
如果现实不是这样的话
我们将不会动画处理视频帧

00:15:36.003 --> 00:15:37.171 align:middle
您的AV播放层

00:15:37.237 --> 00:15:39.239 align:middle
将不会在PiP被激活的时候
在视频帧上显示

00:15:39.873 --> 00:15:42.376 align:middle
所以当运行程序提供一个
类似这个例子的

00:15:42.442 --> 00:15:45.345 align:middle
非模式视频播放体验的时候
您可能就会需要升级用户界面

00:15:47.648 --> 00:15:49.683 align:middle
AV播放视图控制器
是像这样显示

00:15:49.750 --> 00:15:51.652 align:middle
然后隐藏视图控制

00:15:53.187 --> 00:15:54.288 align:middle
这个行为是不硬性要求的

00:15:54.354 --> 00:15:56.223 align:middle
但是为了确保一致性
我们强烈推荐使用它

00:15:58.358 --> 00:16:01.028 align:middle
为了做到这您应该置入
开始时演示的方法

00:15:58.358 --> 00:16:01.028 align:middle
为了做到这您应该置入
开始时演示的方法

00:16:02.596 --> 00:16:03.864 align:middle
方法隐藏您的
播放控制

00:16:04.631 --> 00:16:05.799 align:middle
并且显示您的占位符原图

00:16:07.601 --> 00:16:09.303 align:middle
当PiP停止的时候您就
做相反的动作

00:16:10.270 --> 00:16:12.072 align:middle
您置入那个叫停代理方式

00:16:13.140 --> 00:16:14.708 align:middle
来隐藏您的占位符原图

00:16:15.042 --> 00:16:16.276 align:middle
并且再次显示您的播放控制

00:16:17.311 --> 00:16:18.278 align:middle
这非常简单

00:16:20.848 --> 00:16:23.617 align:middle
最后如果您需要
在运行程序过渡到后台的时候

00:16:23.684 --> 00:16:26.386 align:middle
自动启用PiP您必须确认

00:16:26.453 --> 00:16:29.122 align:middle
AV播放层能覆盖整个
用户界面窗口

00:16:30.624 --> 00:16:33.560 align:middle
如果是这种情况
视频正在播放的时候

00:16:34.094 --> 00:16:35.462 align:middle
PiP可能被启用

00:16:35.529 --> 00:16:36.864 align:middle
那么系统就会自动
为您的用户

00:16:36.930 --> 00:16:38.265 align:middle
开始启用
Picture in Picture

00:16:40.567 --> 00:16:41.902 align:middle
大家将会看到
我们对上面所有的动作进行了解说

00:16:42.035 --> 00:16:44.104 align:middle
我们带来了一个非常棒的样品
大家应该

00:16:44.171 --> 00:16:45.405 align:middle
在这个会议结束后看看

00:16:47.541 --> 00:16:49.176 align:middle
所以你们看到了通过
AVFoundation

00:16:49.243 --> 00:16:50.944 align:middle
来采用Picture in Picture
也是多么简单

00:16:52.246 --> 00:16:53.680 align:middle
最后让我向你们用WebKit

00:16:53.747 --> 00:16:55.082 align:middle
展示
Picture in Picture

00:16:58.485 --> 00:17:01.421 align:middle
WebKit用来对待视频播放的主要
程式界面是WKWeb视图

00:16:58.485 --> 00:17:01.421 align:middle
WebKit用来对待视频播放的主要
程式界面是WKWeb视图

00:17:01.855 --> 00:17:04.892 align:middle
会议的这部分是针对

00:17:05.626 --> 00:17:08.127 align:middle
你们当中
用WebKit

00:17:08.295 --> 00:17:10.097 align:middle
来展示你您们网络科技的人

00:17:12.598 --> 00:17:15.702 align:middle
在iOS 9里 WKWeb视图
支持Picture in Picture

00:17:15.769 --> 00:17:17.671 align:middle
以HTML5视频模式如果
这个运行程序被设置成

00:17:17.738 --> 00:17:19.573 align:middle
与其他应用程式界面
一样的话

00:17:20.941 --> 00:17:23.810 align:middle
如果您的网站内容用的是
iOS的关于回放控制的出产设置

00:17:23.877 --> 00:17:25.145 align:middle
那么PiP肯定能被用上

00:17:27.848 --> 00:17:29.316 align:middle
如果您的网站建造者对

00:17:29.383 --> 00:17:31.818 align:middle
对合并您的控制与PiP按钮有兴趣

00:17:32.152 --> 00:17:34.988 align:middle
您应该看一下段落501
有什么新的东西

00:17:35.055 --> 00:17:37.391 align:middle
在WebKit 和 Safari里
针对网站开发人员

00:17:40.294 --> 00:17:42.629 align:middle
如果您想要支持后台音频视频播放

00:17:42.696 --> 00:17:45.232 align:middle
但是不想允许
Picture in Picture

00:17:45.299 --> 00:17:47.467 align:middle
我们将会有
WKWeb视图表面配置的属性

00:17:47.534 --> 00:17:50.103 align:middle
在未来的iOS 9 里这是允许的

00:17:52.372 --> 00:17:53.373 align:middle
那个就是WebKit

00:17:55.342 --> 00:17:57.544 align:middle
所以现在大家看到在您的
运行程序里的所有三个媒体框架里

00:17:57.611 --> 00:18:00.681 align:middle
启用Picture in Picture
有多直接和容易

00:17:57.611 --> 00:18:00.681 align:middle
启用Picture in Picture
有多直接和容易

00:18:01.682 --> 00:18:03.584 align:middle
我已经等不及看见PiP支持在
你iPad

00:18:03.650 --> 00:18:05.219 align:middle
在您iPad的所有视频播放App里
得到支持了

00:18:09.489 --> 00:18:11.525 align:middle
Picture in Picture
跟后台音频非常像

00:18:12.326 --> 00:18:13.927 align:middle
当运行程序没有在屏幕
上显示的时候

00:18:14.294 --> 00:18:16.163 align:middle
您的用户体验还是特别好

00:18:18.098 --> 00:18:21.168 align:middle
同样的道理也适用于
后台音频和视频播放

00:18:22.769 --> 00:18:26.006 align:middle
打个比方不要做任何
和回放无关

00:18:26.573 --> 00:18:29.042 align:middle
或限制了您的存储空间的作业
当这些作业

00:18:29.109 --> 00:18:30.611 align:middle
在您的后台运行的时候

00:18:32.246 --> 00:18:34.548 align:middle
属性资源共享不仅是
对PiP App非常重要

00:18:34.615 --> 00:18:36.517 align:middle
对整个iPad的所有运行程序
都特别重要

00:18:38.719 --> 00:18:41.555 align:middle
现在让我们欢迎乔纳森
上台来给大家详细的

00:18:41.622 --> 00:18:43.590 align:middle
来给大家详细地讨论一下关于这个主题
你们需要知道的东西

00:18:43.824 --> 00:18:44.758 align:middle
谢谢大家

00:18:47.394 --> 00:18:48.228 align:middle
谢谢你您斯特凡

00:18:49.630 --> 00:18:54.768 align:middle
iPad上的多项目处理允许您同时
在屏幕上运行多个App

00:18:55.836 --> 00:18:59.206 align:middle
但是硬件资源还是被所有

00:18:59.273 --> 00:19:00.374 align:middle
呈现的App共享的

00:18:59.273 --> 00:19:00.374 align:middle
呈现的App共享的

00:19:01.675 --> 00:19:06.246 align:middle
我想和你们大家一起探讨一下
一些关于媒体升级的政策

00:19:06.780 --> 00:19:11.585 align:middle
好让你们更好地在
在你们iPad多项任务运行时

00:19:11.652 --> 00:19:15.656 align:middle
为你们的App管理音频视频和照相机

00:19:18.792 --> 00:19:20.027 align:middle
好消息是

00:19:20.093 --> 00:19:23.163 align:middle
很多这些很好的做法
已经为大家所熟知了

00:19:23.230 --> 00:19:25.499 align:middle
而且它们其中很多是在
所有iOS设备上都适用的

00:19:25.799 --> 00:19:28.936 align:middle
所以让您的App在各个地方
都闪闪发光是比较容易的

00:19:30.070 --> 00:19:32.840 align:middle
现在在我进行对媒体资源
更深的探索之前

00:19:33.307 --> 00:19:35.075 align:middle
我想借用几分钟来讨论一下

00:19:35.142 --> 00:19:37.911 align:middle
您的App在iPad
里可能扮演的角色

00:19:39.947 --> 00:19:42.916 align:middle
在iOS 8
里App是被全屏呈现的

00:19:43.917 --> 00:19:47.855 align:middle
而在新的iOS 9 里
您可以用多任务处理模式

00:19:48.422 --> 00:19:49.957 align:middle
同时在屏幕上运行三个App

00:19:51.091 --> 00:19:55.395 align:middle
这些App可能会争抢其中的一些
共享资源

00:19:55.462 --> 00:19:58.765 align:middle
为了帮助缓解这个问题
系统会把您的App

00:19:58.832 --> 00:20:00.934 align:middle
分成这三个角色其中的一个

00:19:58.832 --> 00:20:00.934 align:middle
分成这三个角色其中的一个

00:20:02.803 --> 00:20:04.972 align:middle
全屏呈现的App被认为是
最主要的运行程序

00:20:06.406 --> 00:20:09.643 align:middle
它们一直都会是主运行程序
而辅运行程序

00:20:09.710 --> 00:20:10.811 align:middle
是呈现为滑过屏幕的

00:20:12.112 --> 00:20:15.616 align:middle
全屏运行的App被更改大小
被分屏显示来适应固定的App

00:20:15.682 --> 00:20:18.952 align:middle
之后也还是主运行系统

00:20:20.420 --> 00:20:22.823 align:middle
而一个Picture in Picture
的运行程序

00:20:22.890 --> 00:20:24.057 align:middle
可以在用户看视频的时候

00:20:24.124 --> 00:20:25.993 align:middle
被放在后台来运行的时候

00:20:26.660 --> 00:20:29.029 align:middle
在这个情况下您的App就会被
看做是后台媒体

00:20:30.497 --> 00:20:34.401 align:middle
对于一些特定的共享资源
来说这样的角色分配

00:20:34.468 --> 00:20:37.404 align:middle
能帮助定义系统
的条款和您App的能力

00:20:38.205 --> 00:20:40.207 align:middle
所以让我们来深入地
看一下其中一些资源

00:20:41.542 --> 00:20:42.809 align:middle
从运行音频开始

00:20:44.778 --> 00:20:46.647 align:middle
iOS上的音频系统是

00:20:46.713 --> 00:20:48.849 align:middle
非常适合多项运行程序的

00:20:49.583 --> 00:20:51.285 align:middle
如果您的App当下在使用音频

00:20:51.518 --> 00:20:54.588 align:middle
您已经把AV音频段落的应用程式界面
调置为在您的App里

00:20:54.655 --> 00:20:57.224 align:middle
显示音频的本质

00:20:59.026 --> 00:21:01.662 align:middle
系统用这个来弄清楚

00:20:59.026 --> 00:21:01.662 align:middle
系统用这个来弄清楚

00:21:01.728 --> 00:21:04.731 align:middle
您App里的音频
和系统里其他App的音频之间

00:21:04.798 --> 00:21:08.202 align:middle
如何混合如何切断如何剪切

00:21:09.736 --> 00:21:12.940 align:middle
好消息是一个调置适当的
AV音频段落

00:21:13.006 --> 00:21:15.542 align:middle
应该可以很好地在iPad里
和其他多项程序一起运行

00:21:17.077 --> 00:21:20.147 align:middle
为此绝对不要

00:21:20.614 --> 00:21:22.883 align:middle
根据您
App在屏幕上呈现的方式

00:21:22.950 --> 00:21:25.452 align:middle
来调置您的音频

00:21:26.286 --> 00:21:28.021 align:middle
以上就是关于音频的事情

00:21:31.992 --> 00:21:33.360 align:middle
说到这我想来复习一下

00:21:33.427 --> 00:21:36.630 align:middle
一些与iPad的多项程序运行相关的

00:21:36.697 --> 00:21:38.165 align:middle
对相关的音频段落

00:21:39.633 --> 00:21:41.435 align:middle
如果您不遵循这些做法

00:21:41.502 --> 00:21:43.770 align:middle
您的App在iOS 8还可能运行

00:21:43.837 --> 00:21:45.405 align:middle
但是在iOS 9里肯定会出问题

00:21:47.608 --> 00:21:50.711 align:middle
首先
您只有在音频被需要

00:21:50.777 --> 00:21:52.246 align:middle
的时候才会激活启动音频

00:21:52.980 --> 00:21:54.314 align:middle
这个尤其会发生特别是
当您的App里的音频

00:21:54.381 --> 00:21:58.452 align:middle
会干扰其它App
例如那些回放类别里的

00:21:58.552 --> 00:22:03.724 align:middle
正在使用音频段落的

00:21:58.552 --> 00:22:03.724 align:middle
正在使用音频段落的

00:22:04.291 --> 00:22:05.959 align:middle
音乐或视频程序的时候
的时候

00:22:10.163 --> 00:22:13.467 align:middle
不要单单是因为您的App启动着
或者放置在前方

00:22:13.534 --> 00:22:17.271 align:middle
就决定启动您的音频

00:22:17.437 --> 00:22:19.273 align:middle
等到用户
与您的音频特征产生互动的时候

00:22:19.339 --> 00:22:21.808 align:middle
再启动您的音频段落

00:22:25.112 --> 00:22:29.416 align:middle
例如说 一个音乐视频程序
应该要等到

00:22:29.483 --> 00:22:31.051 align:middle
用户点击了播放按钮
才会开始播放

00:22:32.986 --> 00:22:36.690 align:middle
接下来
有很大一个App种类

00:22:36.757 --> 00:22:38.058 align:middle
可以不需要打断其它音频

00:22:38.926 --> 00:22:42.362 align:middle
例如如果您有一个游戏
或辅助的音频

00:22:42.429 --> 00:22:45.966 align:middle
比如说音效您应该启用
环境音效类别

00:22:46.733 --> 00:22:49.236 align:middle
这个类别为这类型的音频
包括和其他音频混合的的音频

00:22:49.303 --> 00:22:53.407 align:middle
提供了相应的应对行为

00:22:54.341 --> 00:22:57.477 align:middle
对于 让这些在
iPad上多项目运行的App来说

00:22:57.778 --> 00:23:00.414 align:middle
启动很重要
因为您的App还是会保持在前台

00:22:57.778 --> 00:23:00.414 align:middle
启动很重要
因为您的App还是会保持在前台

00:23:00.480 --> 00:23:03.083 align:middle
当其他的App开开关关的时候

00:23:03.317 --> 00:23:07.554 align:middle
并且您也不希望你的游戏
音频被打断

00:23:07.621 --> 00:23:11.258 align:middle
或让您的用户需要重启您的App

00:23:11.325 --> 00:23:12.593 align:middle
来让音频得以重新播放

00:23:14.928 --> 00:23:18.565 align:middle
最后
有一些App会有辅助音频轨道

00:23:18.632 --> 00:23:20.868 align:middle
这方面的一个例子就是
如果您有一个游戏

00:23:20.934 --> 00:23:23.470 align:middle
当用户玩这个游戏的时候
里面有很强大的游戏音效

00:23:23.537 --> 00:23:24.571 align:middle
同时还有音乐音轨

00:23:26.106 --> 00:23:28.308 align:middle
现在
如果您的用户已经

00:23:28.375 --> 00:23:29.843 align:middle
在用另外一个App听音乐了

00:23:30.077 --> 00:23:32.813 align:middle
您就会想要让这个游戏的音乐音轨静音

00:23:34.147 --> 00:23:36.049 align:middle
这样您的用户就可以
在玩您这款游戏的时候

00:23:36.116 --> 00:23:39.086 align:middle
既能听到您的游戏音效
也能继续听他们的音乐了

00:23:40.954 --> 00:23:44.491 align:middle
我们在iOS 8里提供了一
个很好的方法来实现这个想法

00:23:45.259 --> 00:23:49.963 align:middle
简单的来说只要检查一下AV音频段落
辅助音频应该被静音

00:23:50.230 --> 00:23:54.434 align:middle
只有在开头和结束的时候
才能听到它的开始结束提示音

00:23:56.436 --> 00:23:58.872 align:middle
所以这些就是一些
在iPad上使用音频的

00:23:58.939 --> 00:24:00.807 align:middle
非常重要的做法

00:23:58.939 --> 00:24:00.807 align:middle
非常重要的做法

00:24:00.874 --> 00:24:04.044 align:middle
并且作为一个附加效果
这样做可以保证

00:24:04.111 --> 00:24:05.812 align:middle
在所有iOS设备上的
绝佳的用户体验

00:24:07.381 --> 00:24:08.815 align:middle
如果]您想知道更多

00:24:08.882 --> 00:24:11.051 align:middle
关于调置您的音频段落的内容
去年的“主要音频会议”里有很多

00:24:11.118 --> 00:24:13.187 align:middle
有很多很有用又很棒的小建议

00:24:13.453 --> 00:24:15.656 align:middle
我们详细的项目流程指南里也有

00:24:17.891 --> 00:24:19.760 align:middle
下一个我们要看的是
是视频

00:24:21.528 --> 00:24:24.498 align:middle
首先很多视频是有音频相伴的

00:24:25.098 --> 00:24:29.503 align:middle
所以如果您有一个提供...

00:24:30.604 --> 00:24:32.139 align:middle
电影或电视播放的App

00:24:32.806 --> 00:24:35.375 align:middle
您就将会需要调置您的AV音频段落

00:24:36.009 --> 00:24:37.578 align:middle
在这个例子里
您将会想要

00:24:37.644 --> 00:24:40.247 align:middle
将您的音频段落类别
设置为回放

00:24:42.616 --> 00:24:46.253 align:middle
接下来如果您支持
后台云播放airplay传输

00:24:46.420 --> 00:24:48.121 align:middle
或者增加一个新的PiP支持

00:24:48.589 --> 00:24:51.124 align:middle
或者增加一个新的PiP特征
在您的appApp里

00:24:51.825 --> 00:24:54.161 align:middle
您在后台播放媒体的时候

00:24:54.228 --> 00:24:56.730 align:middle
您这个appApp将会被认为是一个
后台媒体

00:24:59.199 --> 00:25:02.669 align:middle
这意味着您的存储上限
将会非常低

00:24:59.199 --> 00:25:02.669 align:middle
这意味着您的存储上限
将会非常低

00:25:02.870 --> 00:25:07.341 align:middle
所以非常重要的是
请弃用那些不必要的数据

00:25:07.441 --> 00:25:14.448 align:middle
例如视图控制器视图图像
和其他的数据高速缓存

00:25:14.515 --> 00:25:16.817 align:middle
当您的App不呈现在屏幕
上的时候这个是不必要的

00:25:17.384 --> 00:25:19.152 align:middle
您需要主动完成这个事情

00:25:19.453 --> 00:25:22.122 align:middle
不要等到存储警告发出再来做

00:25:24.558 --> 00:25:26.293 align:middle
您也需要限制您自己

00:25:26.360 --> 00:25:30.631 align:middle
只运行必要的作业来完成回放

00:25:31.031 --> 00:25:32.900 align:middle
好更有效地的划分中央处理器CPU

00:25:35.636 --> 00:25:39.072 align:middle
现在很多iOS的视频

00:25:39.373 --> 00:25:42.276 align:middle
都是通过
HTTP现场直播

00:25:42.476 --> 00:25:43.510 align:middle
来提供视频内容

00:25:44.211 --> 00:25:47.481 align:middle
如果您有一个直播的视频App
您将会需要做接下来的两件事

00:25:48.148 --> 00:25:51.952 align:middle
首先
确保您在您的播放中提供多种变量

00:25:52.019 --> 00:25:54.488 align:middle
包括很一般的辨析度

00:25:54.555 --> 00:25:55.956 align:middle
和很低的宽带需求

00:25:57.124 --> 00:26:00.761 align:middle
第二确保您给您所有
的变量用辨识度属性

00:25:57.124 --> 00:26:00.761 align:middle
第二确保您给您所有
的变量用辨识度属性

00:26:00.827 --> 00:26:03.564 align:middle
<br/>
在主列表列打上注释

00:26:04.998 --> 00:26:08.135 align:middle
现在如果您是通过外部
供应商拿到的这个视频

00:26:08.402 --> 00:26:10.838 align:middle
确保您向他们查验过他们
是否为您提供了

00:26:10.904 --> 00:26:13.640 align:middle
所有变量的各式各样的注解

00:26:14.241 --> 00:26:16.310 align:middle
这个很重要
原因有以下三点

00:26:19.847 --> 00:26:23.717 align:middle
在iPad和iOS 9里您的视频
可能不会占用整个屏幕

00:26:24.618 --> 00:26:27.454 align:middle
提供注解的很好的变量
就可以让iOS自己

00:26:27.554 --> 00:26:29.323 align:middle
为当前正在播放的视频

00:26:29.389 --> 00:26:30.891 align:middle
选取适合的大小

00:26:32.559 --> 00:26:35.195 align:middle
而且当它是用Picture in Picture
呈现的时候

00:26:35.262 --> 00:26:37.965 align:middle
一个较低的分辨率
和一个较低的宽带要求

00:26:38.031 --> 00:26:41.368 align:middle
降低了您的内存占用率
并且很大程度上避免了

00:26:41.435 --> 00:26:42.936 align:middle
您的App由于内存压力而被终止

00:26:43.937 --> 00:26:47.107 align:middle
最后
通过这些做法

00:26:47.875 --> 00:26:49.743 align:middle
可以帮助用户

00:26:50.043 --> 00:26:52.246 align:middle
避免不必要的流量消耗

00:26:52.646 --> 00:26:54.414 align:middle
他们会很感激您的

00:26:58.852 --> 00:27:01.788 align:middle
今天我想谈的最后一个话题是相机

00:26:58.852 --> 00:27:01.788 align:middle
今天我想谈的最后一个话题是相机

00:27:04.491 --> 00:27:07.561 align:middle
在iOS 9里相机只能同时
被一个App使用

00:27:08.762 --> 00:27:11.431 align:middle
并且对于一些特定的
相机功能来说

00:27:13.233 --> 00:27:16.937 align:middle
它们只能被当下显示
在屏幕上的App使用

00:27:19.139 --> 00:27:22.576 align:middle
这个意味着相机的可用性
随时可能改变

00:27:22.976 --> 00:27:24.645 align:middle
然后您的App相机使用过程

00:27:24.711 --> 00:27:26.680 align:middle
可能会被打断
因为用户

00:27:26.747 --> 00:27:28.849 align:middle
在多项任务处理的环境下
启用了另外一个App

00:27:31.084 --> 00:27:32.553 align:middle
由于这个原因
考虑一下人们将会

00:27:32.619 --> 00:27:35.422 align:middle
怎样使用您的App和相机功能

00:27:36.156 --> 00:27:37.758 align:middle
是非常重要的

00:27:39.359 --> 00:27:42.362 align:middle
如果您的App是一个以相机
为主的App您会需要

00:27:42.429 --> 00:27:44.698 align:middle
这个App只能被全屏呈现

00:27:45.766 --> 00:27:48.202 align:middle
我们自带的相机App
就是一个很好的例子

00:27:48.936 --> 00:27:51.471 align:middle
如果您的用户所期待的
是这样一个体验

00:27:51.839 --> 00:27:55.776 align:middle
您可以在您的元信息简介里
加入用户界面要求全屏匙

00:27:56.944 --> 00:27:59.680 align:middle
这个可以帮助让用户更快地

00:27:59.746 --> 00:28:01.748 align:middle
进入您App里的相机

00:27:59.746 --> 00:28:01.748 align:middle
进入您App里的相机

00:28:01.982 --> 00:28:04.251 align:middle
然后把整个iPad用作取景器

00:28:06.119 --> 00:28:08.522 align:middle
现在
如果用照相机不是

00:28:08.589 --> 00:28:11.358 align:middle
您这个App的主要功能
您很可能会想要

00:28:11.425 --> 00:28:15.495 align:middle
在iPad上采用多任务处理
增强器

00:28:16.797 --> 00:28:19.132 align:middle
我们的记事本App
就是一个很好的例子

00:28:19.733 --> 00:28:21.568 align:middle
当他们使用这个新的记事本的时候
人们将会很喜欢

00:28:21.635 --> 00:28:24.104 align:middle
因为可以滑动
和进入分屏模式

00:28:24.171 --> 00:28:26.139 align:middle
这一而带来的灵活性

00:28:27.140 --> 00:28:28.275 align:middle
然而
这就意味着

00:28:28.342 --> 00:28:31.712 align:middle
在这个App里有些相机
功能就不能用了

00:28:33.146 --> 00:28:36.683 align:middle
所以让然我们一起来看一下在iPad上
我们的相机和记事本App

00:28:36.750 --> 00:28:38.719 align:middle
是如何驾驭相机可用性的

00:28:39.086 --> 00:28:41.088 align:middle
然后看看您的App如何
做到同样的事

00:28:46.393 --> 00:28:47.895 align:middle
当一个App呈现在屏幕上的时候

00:28:48.161 --> 00:28:53.433 align:middle
用户界面图像选择器可以
让您看到一个预览让你拍照

00:28:53.500 --> 00:28:55.402 align:middle
<br/>
或者是像今天这样拍一段视频

00:28:56.737 --> 00:28:58.705 align:middle
当多个App都呈现在屏幕上的时候

00:28:58.772 --> 00:29:01.575 align:middle
您还是可以看见一个预览
拍张个照片但是

00:28:58.772 --> 00:29:01.575 align:middle
您还是可以看见一个预览
拍张个照片但是

00:29:01.642 --> 00:29:04.111 align:middle
录制视频就不可能了

00:29:05.312 --> 00:29:07.247 align:middle
然后我们深入地的看一下这个情况

00:29:09.816 --> 00:29:11.485 align:middle
这里我们有一个全屏呈现的地图

00:29:11.552 --> 00:29:13.520 align:middle
然后你们的App是滑动呈现的

00:29:14.288 --> 00:29:18.125 align:middle
用户界面图像选择器是在拍照片模式
所以您可以看见预览

00:29:18.392 --> 00:29:21.028 align:middle
然后用户也可以按下快门按钮拍照

00:29:22.262 --> 00:29:24.131 align:middle
当用户划过去到视频模式的时候

00:29:24.198 --> 00:29:27.334 align:middle
他们将会看到一个提示信息说
如果要拍视频的话你的app必须

00:29:27.401 --> 00:29:28.702 align:middle
被全屏呈现

00:29:29.636 --> 00:29:31.405 align:middle
这个对您的App来说意味着什么呢？

00:29:34.541 --> 00:29:38.612 align:middle
首先一个启用了的视频录制器
可能在任何时候被打断

00:29:40.781 --> 00:29:44.218 align:middle
举一个例子就是当您在全屏
模式下录制视频的时候

00:29:44.284 --> 00:29:48.121 align:middle
一个滑动模式的App滑进来

00:29:49.957 --> 00:29:51.959 align:middle
你您的视频录制就将会被打断
你你们必须知道

00:29:53.427 --> 00:29:58.732 align:middle
这种打断是可能会发生在任何
视频录制App上

00:29:58.799 --> 00:30:02.536 align:middle
不管你是否支持多任务处理或
只能全屏呈现这是很重要的

00:29:58.799 --> 00:30:02.536 align:middle
不管你是否支持多任务处理或
只能全屏呈现这是很重要的

00:30:06.340 --> 00:30:11.979 align:middle
接下来用户界面图像选择器
开始的视频录制方式可能会

00:30:12.045 --> 00:30:14.815 align:middle
因为我们当下是在一个不支持它的
多任务处理模式里而失败

00:30:16.083 --> 00:30:18.652 align:middle
如果您一直都没有注意到
这个信息的价值的话

00:30:18.952 --> 00:30:19.987 align:middle
现在是时候去注意了

00:30:22.823 --> 00:30:25.058 align:middle
恩这些就是关于用户界面
图像选择器的一些方面

00:30:25.125 --> 00:30:27.861 align:middle
现在让我们转到
AV视频捕获

00:30:28.195 --> 00:30:31.198 align:middle
然后看看应用程式界面有什么不同

00:30:34.334 --> 00:30:36.036 align:middle
当一个App呈现在屏幕上的时候

00:30:36.103 --> 00:30:38.138 align:middle
您还是有对相机的完全访问权限

00:30:39.173 --> 00:30:42.609 align:middle
然后因为AV视频捕获很灵活
应用程式界面的要求很低

00:30:42.676 --> 00:30:46.013 align:middle
您会有比列在这里的三个
功能更多的功能

00:30:46.680 --> 00:30:49.016 align:middle
而且我们也被一些你们加入到
你们App里的

00:30:49.149 --> 00:30:53.453 align:middle
创意和强大的功能所惊艳

00:30:57.257 --> 00:31:01.862 align:middle
为了确保我们可以向你们
提供你们所需要的必要资源

00:30:57.257 --> 00:31:01.862 align:middle
为了确保我们可以向你们
提供你们所需要的必要资源

00:31:01.929 --> 00:31:05.432 align:middle
以来保证你们App有里最高级的
相机使用体验

00:31:05.499 --> 00:31:10.470 align:middle
一个用相机进行的视频捕获

00:31:10.537 --> 00:31:13.941 align:middle
将只有当App在屏幕上呈现的时候
可以用

00:31:15.209 --> 00:31:18.178 align:middle
这就意味着无论何时滑动
分屏或者

00:31:18.312 --> 00:31:20.314 align:middle
Picture in Picture
功能启用

00:31:20.380 --> 00:31:22.749 align:middle
您的相机使用过程
都将会被打断

00:31:24.251 --> 00:31:28.188 align:middle
您应该搞定这些干扰
并且跟您的用户交流一下

00:31:28.255 --> 00:31:29.890 align:middle
让他们知道现在现下相机暂时不能用

00:31:30.657 --> 00:31:32.492 align:middle
让我们看看如何能做到这一点

00:31:34.628 --> 00:31:36.330 align:middle
第一步是

00:31:36.396 --> 00:31:40.300 align:middle
听听视频捕获被打断的理由

00:31:40.534 --> 00:31:43.036 align:middle
或者我该这么说
一个干扰提示信息

00:31:46.840 --> 00:31:48.709 align:middle
在新的iOS 9里

00:31:48.775 --> 00:31:52.846 align:middle
这个提示信息的使用说明
会讲明一个理由

00:31:54.648 --> 00:31:57.551 align:middle
来告诉大家为什么您的
相机使用会被打断

00:31:58.352 --> 00:32:00.454 align:middle
被打断会有很多原因

00:31:58.352 --> 00:32:00.454 align:middle
被打断会有很多原因

00:32:00.521 --> 00:32:01.788 align:middle
但当它是因为iPad上的
多任务处理的时候

00:32:01.855 --> 00:32:05.425 align:middle
您将会被告知
在多个前台运行App里

00:32:05.492 --> 00:32:07.160 align:middle
视频设备不可用

00:32:08.061 --> 00:32:10.230 align:middle
这将是您的机会
您可以通过禁用快门或录制按钮

00:32:10.297 --> 00:32:14.535 align:middle
来调整你的用户界面
并且检测出

00:32:14.601 --> 00:32:16.503 align:middle
当下相机不可使用

00:32:19.773 --> 00:32:21.675 align:middle
现在我们已经搞定了
干扰打断的问题了

00:32:21.742 --> 00:32:23.377 align:middle
当它们结束的时候我们该干什么呢？

00:32:26.446 --> 00:32:27.848 align:middle
当一个干扰结束的时候

00:32:27.915 --> 00:32:30.717 align:middle
视频捕获将自动重新启动

00:32:30.784 --> 00:32:32.886 align:middle
并不需要手动来重新启动

00:32:34.955 --> 00:32:36.356 align:middle
您可以通过观察干扰结束提示

00:32:36.423 --> 00:32:39.693 align:middle
来而得到这个信息

00:32:41.228 --> 00:32:44.698 align:middle
而且我再次强调这是你通过
重新启用之前禁用了的捕获按钮

00:32:44.765 --> 00:32:47.734 align:middle
来恢复你的相机用户界面
的最好机会

00:32:54.608 --> 00:32:59.112 align:middle
确保您待会儿看一下我们最新的
视频相机代码样品

00:32:59.179 --> 00:33:02.516 align:middle
来作为例子看看是怎样在您的App
里用这些新的干扰理由的

00:32:59.179 --> 00:33:02.516 align:middle
来作为例子看看是怎样在您的App
里用这些新的干扰理由的

00:33:06.553 --> 00:33:07.754 align:middle
最后我总结一下

00:33:07.821 --> 00:33:09.489 align:middle
Picture in Picture

00:33:09.556 --> 00:33:10.724 align:middle
对于视频回放App来说

00:33:10.791 --> 00:33:12.559 align:middle
是一个很厉害的新功能

00:33:13.961 --> 00:33:15.829 align:middle
您可以很容易地通过和我们

00:33:15.896 --> 00:33:18.432 align:middle
现代回放框架一起采用它
并且记得

00:33:18.498 --> 00:33:20.901 align:middle
如果您在使用媒体播放器框架

00:33:20.968 --> 00:33:24.938 align:middle
来进行视频和AVKit之间的转换

00:33:25.005 --> 00:33:27.541 align:middle
采用PiP和其它那些功能是很有用的

00:33:29.009 --> 00:33:31.912 align:middle
并且记得请听从斯特凡刚刚
讲过的那些最优化的步骤

00:33:31.979 --> 00:33:35.215 align:middle
来确保您的App
能有最佳用户体验

00:33:35.883 --> 00:33:38.418 align:middle
举一个例子确保您
恢复您的用户界面

00:33:38.485 --> 00:33:40.954 align:middle
这样视频就能被动画处理
放回到您的App里面了

00:33:44.157 --> 00:33:46.760 align:middle
iIPad上的多任务处理器提供了

00:33:46.827 --> 00:33:49.196 align:middle
强大的功能让我们可以
同时使用多个App

00:33:49.429 --> 00:33:52.833 align:middle
然后这个就考虑到了一个责任
就是我们要互相共享资源

00:33:54.001 --> 00:33:55.736 align:middle
有三件事是您可以做

00:33:55.802 --> 00:33:58.472 align:middle
正确地的调置您的音频

00:33:58.539 --> 00:34:00.541 align:middle
提供能适应的视频流

00:33:58.539 --> 00:34:00.541 align:middle
提供能适应的视频流

00:34:00.908 --> 00:34:03.877 align:middle
然后处理一下新的相机干扰理由

00:34:06.413 --> 00:34:09.616 align:middle
想要知道更多的信息的话
请和我们的传道人员联系

00:34:09.683 --> 00:34:10.984 align:middle
也可以看看我们的论坛

00:34:11.918 --> 00:34:13.453 align:middle
我们还提供一个新的文件

00:34:13.520 --> 00:34:19.293 align:middle
叫“在iPad
上采用多任务处理增强”

00:34:21.862 --> 00:34:24.063 align:middle
现在
共享媒体资源是

00:34:24.130 --> 00:34:27.000 align:middle
资源共享的唯一部分

00:34:27.467 --> 00:34:29.235 align:middle
请记得查看下次举行的

00:34:29.303 --> 00:34:34.041 align:middle
“如何在多任务处理环境里
最优化您的App”会议

00:34:34.942 --> 00:34:36.944 align:middle
这周五也还会有一个

00:34:37.010 --> 00:34:39.646 align:middle
“如何在iOS上传递最高性能”
的谈话

00:34:40.746 --> 00:34:41.614 align:middle
如果您错过了

00:34:41.681 --> 00:34:47.120 align:middle
那么开始的那个会议就会是一个
一个很好的让您开始学习

00:34:47.187 --> 00:34:52.025 align:middle
如果在您的App里采用
很有实用性的用户界面

00:34:53.360 --> 00:34:56.597 align:middle
我代表斯特凡菲利克斯
和我自己

00:34:56.663 --> 00:34:58.699 align:middle
非常高兴今天下午能跟你们
一起在这里聊聊天

00:34:59.399 --> 00:35:01.168 align:middle
感谢大家 祝大家在接下来的
一周很顺利
