WEBVTT

00:00:20.721 --> 00:00:22.890 align:middle
AV Foundation编辑电影

00:00:23.790 --> 00:00:27.427 align:middle
欢迎来到506号讲座我是
蒂姆·门罗 是AVFoundation

00:00:27.494 --> 00:00:30.497 align:middle
工程团队成员今天我和大家谈谈

00:00:30.564 --> 00:00:33.767 align:middle
在AVFoundation
编辑电影的问题

00:00:34.668 --> 00:00:36.603 align:middle
讲述的内容很简单

00:00:37.638 --> 00:00:40.240 align:middle
AVFoundation
为编辑QuickTime

00:00:40.307 --> 00:00:41.975 align:middle
电影文件提供新类

00:00:43.610 --> 00:00:45.946 align:middle
哦 好啦 你可以做得更好
我们来听听掌声

00:00:47.714 --> 00:00:48.549 align:middle
谢谢

00:00:50.717 --> 00:00:53.053 align:middle
我对这样的功能感到兴奋

00:00:53.120 --> 00:00:56.356 align:middle
大家一会儿就会看到这会为我所管理的

00:00:56.423 --> 00:00:59.259 align:middle
个人项目提供工具在过去十年左右

00:01:00.761 --> 00:01:04.230 align:middle
我都在忙着这件事儿在某种程度上

00:01:04.298 --> 00:01:07.768 align:middle
这为我过去大约35年来所做的项目

00:01:07.835 --> 00:01:09.770 align:middle
带来了新的高度

00:01:10.137 --> 00:01:14.441 align:middle
对此我可是投入巨大
希望大家喜欢今天的讲座内容

00:01:15.442 --> 00:01:18.412 align:middle
我们可以编辑QuickTime
电影文件意味着什么

00:01:18.478 --> 00:01:20.414 align:middle
我们可以打开
QuickTime电影文件

00:01:20.948 --> 00:01:24.685 align:middle
对电影和轨道执行基于范围的编辑

00:01:24.751 --> 00:01:27.688 align:middle
可以选择一个部分电影的一个片段

00:01:27.921 --> 00:01:30.123 align:middle
复制到其他影片中

00:01:30.858 --> 00:01:32.359 align:middle
可以增减轨道

00:01:32.826 --> 00:01:35.362 align:middle
可以设置轨道间的联系

00:01:35.429 --> 00:01:38.398 align:middle
比如在另一个章节轨道的
一个轨道上做标记

00:01:40.167 --> 00:01:43.070 align:middle
可以增加或调整
轨道和电影元数据

00:01:44.338 --> 00:01:47.074 align:middle
我们可以创建电影文件

00:01:47.140 --> 00:01:49.543 align:middle
以及所谓URL样本引用电影文件

00:01:52.179 --> 00:01:53.380 align:middle
今天你会怎么做呢？

00:01:53.714 --> 00:01:58.185 align:middle
首先我会
根据AVFoundation中

00:01:59.052 --> 00:02:02.756 align:middle
现有的类来放置这些新类

00:01:59.052 --> 00:02:02.756 align:middle
现有的类来放置这些新类

00:02:03.490 --> 00:02:05.893 align:middle
然后我会做API爬虫文件

00:02:05.959 --> 00:02:07.294 align:middle
其中会介绍并触及

00:02:07.361 --> 00:02:10.197 align:middle
已经加入这些类的新方法的高点

00:02:10.997 --> 00:02:12.666 align:middle
最后我会回过头来返回谈一谈

00:02:12.733 --> 00:02:14.868 align:middle
我提到的这个个人项目

00:02:15.202 --> 00:02:18.472 align:middle
其中清楚显示了这些新功能

00:02:18.739 --> 00:02:22.843 align:middle
可以将我所搜集的大量数据
做出有趣的事情来

00:02:23.944 --> 00:02:28.015 align:middle
我们来谈谈
AVFoundation编辑类

00:02:28.482 --> 00:02:31.518 align:middle
如果已经在编辑环境用过
AVFoundation

00:02:32.052 --> 00:02:38.025 align:middle
就会知道我们将用到两个类操作抽象类

00:02:38.091 --> 00:02:41.762 align:middle
是复合类可以获得
AVCompositions

00:02:42.062 --> 00:02:45.332 align:middle
并在可变水平实现
AVMutableCompositions

00:02:45.799 --> 00:02:47.801 align:middle
现在复合类是很酷的内容

00:02:47.868 --> 00:02:50.170 align:middle
可以做出相当棒的效果

00:02:50.671 --> 00:02:53.173 align:middle
AVMutableComposition
只有一点

00:02:53.507 --> 00:02:54.942 align:middle
不如人意

00:02:55.509 --> 00:02:58.212 align:middle
没有标准文件格式用来

00:02:58.545 --> 00:03:01.315 align:middle
序列化复合类

00:02:58.545 --> 00:03:01.315 align:middle
序列化复合类

00:03:02.649 --> 00:03:07.321 align:middle
这使得很难将你漂亮的
复合类和其他应用进行互换

00:03:08.322 --> 00:03:11.425 align:middle
我们前往
AVMovie和AVMutableMovie时

00:03:11.758 --> 00:03:14.228 align:middle
问题不复存在了因为其中

00:03:14.294 --> 00:03:16.964 align:middle
有QuickTime电影文件格式

00:03:17.197 --> 00:03:20.267 align:middle
我们可以打开 编辑重新编写

00:03:21.702 --> 00:03:24.905 align:middle
在轨道层面 我们有相似的设置

00:03:25.472 --> 00:03:28.642 align:middle
如大家所知 复合类包括复合轨道

00:03:28.942 --> 00:03:29.943 align:middle
并在可变水平

00:03:30.010 --> 00:03:32.513 align:middle
我们有
AVMutableComposition轨道

00:03:32.880 --> 00:03:36.149 align:middle
在El Capitan 我们可以在
轨道层面添加两个新类

00:03:36.450 --> 00:03:39.686 align:middle
AVMovieTrack和
AVMutableMovieTrack

00:03:41.121 --> 00:03:44.291 align:middle
我们的确有五个新类需要你们操心

00:03:44.658 --> 00:03:46.093 align:middle
电影和可变电影电影轨道

00:03:46.994 --> 00:03:48.862 align:middle
可变电影轨道

00:03:49.329 --> 00:03:52.866 align:middle
第五类叫做
AVMediaDataStorage

00:03:53.267 --> 00:03:57.437 align:middle
这是很简单的类全部任务

00:03:57.504 --> 00:04:02.609 align:middle
就是表明写入文件的
新样本数据在哪里该结束

00:03:57.504 --> 00:04:02.609 align:middle
就是表明写入文件的
新样本数据在哪里该结束

00:04:06.146 --> 00:04:09.816 align:middle
AVMovie代表符合
QuickTime电影

00:04:10.184 --> 00:04:13.587 align:middle
文件格式的视频音频文件数据

00:04:14.188 --> 00:04:15.923 align:middle
如果你熟悉QuickTime电影

00:04:15.989 --> 00:04:18.892 align:middle
你会知道存在若干相关文件格式

00:04:19.493 --> 00:04:23.163 align:middle
都是基于QuickTime
电影文件格式转换而来

00:04:23.597 --> 00:04:27.100 align:middle
这些合称为ISO基媒体文件格式

00:04:27.534 --> 00:04:30.470 align:middle
AVMovie和可变电影
可以很好地处理这些

00:04:30.537 --> 00:04:32.539 align:middle
和应对QuickTime
电影文件没有区别

00:04:33.907 --> 00:04:37.511 align:middle
这些文件的主要特点是什么?

00:04:37.578 --> 00:04:42.850 align:middle
在我看来特点是
文件格式在样本数据

00:04:42.916 --> 00:04:49.189 align:middle
和组织样本进入轨道和电影的
数据间执行严格的区分

00:04:51.692 --> 00:04:55.963 align:middle
这里是QuickTime
电影文件的基本示意图

00:04:56.396 --> 00:04:58.799 align:middle
先是文件类型框

00:04:59.132 --> 00:05:03.971 align:middle
这是非常简单的少量数据表明这个文件

00:04:59.132 --> 00:05:03.971 align:middle
这是非常简单的少量数据表明这个文件

00:05:04.037 --> 00:05:06.406 align:middle
符合哪个系列中的文件格式

00:05:07.274 --> 00:05:09.877 align:middle
这里还有个电影框我刚说过

00:05:09.943 --> 00:05:13.580 align:middle
代表所有样本数据的组织信息

00:05:13.981 --> 00:05:15.582 align:middle
是在自身的框中可以找到

00:05:16.316 --> 00:05:20.254 align:middle
大部分的顺序都是任意的

00:05:20.654 --> 00:05:22.723 align:middle
文件类型框必须在最前面

00:05:23.090 --> 00:05:25.526 align:middle
但是其他框可以是任何顺序

00:05:25.592 --> 00:05:28.362 align:middle
那么我们可以把电影框放在文件最后

00:05:28.929 --> 00:05:33.300 align:middle
可以位于两个样本数据框的中间

00:05:33.700 --> 00:05:36.370 align:middle
甚至可以成为未用文件的部分

00:05:36.436 --> 00:05:39.506 align:middle
也许之前曾有过数据但是现在没有了

00:05:41.041 --> 00:05:42.543 align:middle
现在 电影框里是什么呢?

00:05:42.743 --> 00:05:46.346 align:middle
这里有我们今天要考虑的三类信息

00:05:47.447 --> 00:05:49.750 align:middle
首先是全局设置

00:05:50.117 --> 00:05:53.754 align:middle
没有这部分信息就
不会真正有电影的存在

00:05:54.188 --> 00:05:56.490 align:middle
其中包括电影中有多少轨道

00:05:56.857 --> 00:05:58.425 align:middle
电影时长是多少

00:05:58.892 --> 00:06:03.864 align:middle
文件何时生成播放时的最佳速率是什么

00:05:58.892 --> 00:06:03.864 align:middle
文件何时生成播放时的最佳速率是什么

00:06:05.332 --> 00:06:08.802 align:middle
电影框里还有元数据 这属于

00:06:08.869 --> 00:06:14.441 align:middle
可选数据 对媒体播放而言
并非必不可少

00:06:14.942 --> 00:06:16.009 align:middle
但是如果具备也会有用

00:06:16.276 --> 00:06:18.512 align:middle
这有点像是版权声明的内容

00:06:18.946 --> 00:06:21.882 align:middle
表明作者是谁片名是什么

00:06:22.382 --> 00:06:24.685 align:middle
也许还有一些你或其他app写入

00:06:24.751 --> 00:06:27.354 align:middle
电影框中的自定义数据

00:06:28.655 --> 00:06:33.160 align:middle
在电影框中发现的最后一项内容
是轨道框这部分信息

00:06:33.393 --> 00:06:36.230 align:middle
定义了电影中的不同轨道

00:06:37.531 --> 00:06:39.333 align:middle
其中包括轨道类型

00:06:40.100 --> 00:06:44.505 align:middle
指出轨道所需的样本数据

00:06:45.172 --> 00:06:46.874 align:middle
也包括轨道元数据

00:06:46.940 --> 00:06:49.676 align:middle
当然 如果愿意 也可以
在这里编写自定义轨道元数据

00:06:50.511 --> 00:06:53.213 align:middle
还有轨道相关性的相关信息

00:06:53.280 --> 00:06:56.149 align:middle
也就是电影中轨道
和其他轨道之间的关联

00:06:58.051 --> 00:07:01.622 align:middle
这里的主要特点是样本数据位置

00:06:58.051 --> 00:07:01.622 align:middle
这里的主要特点是样本数据位置

00:07:01.688 --> 00:07:04.825 align:middle
因此样本数据本身并不存在于轨道框中

00:07:05.392 --> 00:07:11.331 align:middle
轨道框包括到样本数据的参考信息之类

00:07:16.803 --> 00:07:19.573 align:middle
对样本数据而言轨道可能会

00:07:19.640 --> 00:07:22.042 align:middle
存在于其他文件中

00:07:22.342 --> 00:07:24.811 align:middle
这样你也可以有外部样本参考

00:07:26.146 --> 00:07:30.918 align:middle
还可以是只有外部样本数据的样本参考

00:07:31.518 --> 00:07:34.688 align:middle
在这种情况下小电影框

00:07:34.755 --> 00:07:38.559 align:middle
及其文件类型框
被叫做样本参考电影文件

00:07:39.059 --> 00:07:42.329 align:middle
框中并无真实数据

00:07:42.596 --> 00:07:44.164 align:middle
它只是指向其他位置的数据

00:07:44.698 --> 00:07:48.902 align:middle
现在这成为你与其他媒体文件

00:07:50.103 --> 00:07:52.739 align:middle
一起工作时功能非常强大的工具

00:07:53.841 --> 00:07:58.011 align:middle
为什么？因为我可以编辑少量信息

00:07:58.278 --> 00:08:01.481 align:middle
而不需要触及大量媒体数据

00:07:58.278 --> 00:08:01.481 align:middle
而不需要触及大量媒体数据

00:08:03.150 --> 00:08:06.954 align:middle
但是 可以想象这其中会有一些脆弱性

00:08:08.488 --> 00:08:11.892 align:middle
为什么呢？因为我在参考数据
数据 如果所参考的数据手

00:08:11.959 --> 00:08:16.296 align:middle
碰巧在移动或者是被删掉我就会很糟心

00:08:16.396 --> 00:08:18.498 align:middle
我再也不能播放演示作品了

00:08:19.499 --> 00:08:22.569 align:middle
可以通过两种方式降低这种脆弱性

00:08:22.970 --> 00:08:26.073 align:middle
主要是通过相关URL

00:08:26.139 --> 00:08:30.310 align:middle
当我制作这些样本参考时
我们会些许看到该怎么做

00:08:32.513 --> 00:08:34.780 align:middle
在今天结束的时候大家可能会想

00:08:34.847 --> 00:08:36.650 align:middle
试试自包含电影

00:08:36.717 --> 00:08:40.687 align:middle
如果想给朋友看看
或是在网页上发送发帖

00:08:41.087 --> 00:08:42.322 align:middle
需要这么做的时候

00:08:42.623 --> 00:08:45.025 align:middle
可以通过
AVAssetExportSession

00:08:45.092 --> 00:08:47.060 align:middle
运行自己的可变电影

00:08:47.361 --> 00:08:49.229 align:middle
可以获得极好的自包含文件

00:08:51.231 --> 00:08:54.234 align:middle
好的我们现在来看刚引入的
电影编辑API

00:08:56.603 --> 00:09:00.274 align:middle
在不可变层面
AVMovie是AVAsset

00:08:56.603 --> 00:09:00.274 align:middle
在不可变层面
AVMovie是AVAsset

00:09:00.340 --> 00:09:03.944 align:middle
不可变的子类
我们实际上做了些有趣的事情

00:09:04.178 --> 00:09:06.079 align:middle
我们可以查看电影

00:09:06.380 --> 00:09:08.215 align:middle
可以获得电影头文件

00:09:08.649 --> 00:09:10.817 align:middle
可以在新文件中编写电影头文件

00:09:13.320 --> 00:09:16.190 align:middle
所谓电影头文件我是指文件类型框

00:09:16.256 --> 00:09:19.092 align:middle
和电影框而不是样本数据

00:09:22.262 --> 00:09:24.097 align:middle
怎样初始化AVMovie?

00:09:24.164 --> 00:09:27.734 align:middle
如果初始化过
AVRL 就知道该怎么做了

00:09:27.801 --> 00:09:30.604 align:middle
你提供URL我们返还AVMovie

00:09:31.772 --> 00:09:38.412 align:middle
如果有电影头文件比如说在
粘贴板上则可以进入

00:09:38.779 --> 00:09:41.148 align:middle
并从数据块生成电影

00:09:41.481 --> 00:09:44.585 align:middle
在讲座中我们不会更多探讨这方面问题

00:09:45.052 --> 00:09:48.622 align:middle
但是如果你看样本代码包
AVMovieEditor

00:09:48.922 --> 00:09:51.792 align:middle
则会清楚看到该怎样把内容

00:09:52.025 --> 00:09:53.727 align:middle
从粘贴板提取或放置

00:09:55.729 --> 00:09:59.466 align:middle
这里就是可以轻松
生成样本参考电影文件

00:10:00.033 --> 00:10:04.338 align:middle
我们将把URL作为
AVMovie打开

00:10:04.471 --> 00:10:08.775 align:middle
不好意思我们调用...

00:10:09.610 --> 00:10:14.515 align:middle
我们想生成的文件类型指示

00:10:14.882 --> 00:10:16.083 align:middle
然后是部分选项

00:10:16.617 --> 00:10:21.889 align:middle
在本例中 我们指定的
选项是电影头文件的删节目的地

00:10:22.589 --> 00:10:25.993 align:middle
基本上而言 这是指如果有任何数据

00:10:26.059 --> 00:10:29.129 align:middle
在该URL上它都会被挤走

00:10:29.396 --> 00:10:32.132 align:middle
最后在文件中就只剩电影头文件

00:10:33.433 --> 00:10:36.069 align:middle
还可以是不同的选项

00:10:36.303 --> 00:10:39.006 align:middle
不再挤走文件中已有的任何数据

00:10:39.072 --> 00:10:42.142 align:middle
这就是将电影头文件
添加到目的地选项

00:10:47.481 --> 00:10:49.483 align:middle
我们来继续讲
AVMovie的可变子类

00:10:49.550 --> 00:10:51.552 align:middle
AVMutableMovie

00:10:52.152 --> 00:10:55.422 align:middle
这会提供基于范围的
电影编辑 增减轨道

00:10:55.489 --> 00:10:58.425 align:middle
增加或调整电影

00:10:58.959 --> 00:11:02.563 align:middle
元数据的编辑方法

00:10:58.959 --> 00:11:02.563 align:middle
元数据的编辑方法

00:11:04.431 --> 00:11:06.800 align:middle
怎样初始化
AVMutableMovie?

00:11:06.867 --> 00:11:09.169 align:middle
和初始化AVMovie的
做法基本相同

00:11:09.636 --> 00:11:12.306 align:middle
我们会传递一个URL但是在本例中

00:11:12.372 --> 00:11:14.341 align:middle
我们需要能够
调整可能会出现的任何错误

00:11:15.642 --> 00:11:18.979 align:middle
还可以从零建造
AVMutableMovie

00:11:19.213 --> 00:11:22.850 align:middle
本代码行给我们返回
空的AVMutableMovie文件

00:11:23.217 --> 00:11:27.321 align:middle
我们可以在其中添加轨道
接着在轨道中添加部分数据等等

00:11:29.857 --> 00:11:33.694 align:middle
这些是在AVMutableMovie
可用的片段编辑方法

00:11:33.760 --> 00:11:36.096 align:middle
如果大家用过
AVMutable复合类

00:11:36.163 --> 00:11:39.600 align:middle
这很相似因为实际上

00:11:39.666 --> 00:11:43.370 align:middle
只有一处存在例外

00:11:44.438 --> 00:11:48.909 align:middle
就是插入时间范围方法
会需要额外的参数

00:11:48.976 --> 00:11:53.747 align:middle
表明你是否要复制样本数据

00:11:53.814 --> 00:11:56.917 align:middle
到目标文件或仅仅复制样本参考

00:12:00.087 --> 00:12:06.260 align:middle
如果复制样本数据到目标可变电影

00:12:06.560 --> 00:12:09.429 align:middle
你需要告知它编写样本数据的位置

00:12:09.563 --> 00:12:11.265 align:middle
它不会默认做任何事情

00:12:11.798 --> 00:12:16.170 align:middle
例如 它不会自己将数据编写在
电影框所在的文件中

00:12:16.570 --> 00:12:18.705 align:middle
所以必须明确规定你需要

00:12:19.039 --> 00:12:23.810 align:middle
将写入电影的任何新的样本
数据放置的位置

00:12:24.178 --> 00:12:27.748 align:middle
可以通过规定可变电影的默认

00:12:27.814 --> 00:12:29.917 align:middle
媒体数据存储属性来实现

00:12:30.417 --> 00:12:35.255 align:middle
这就是该
AVMediaDataStorage类出马啦

00:12:35.789 --> 00:12:38.292 align:middle
同样 它此刻只是包裹了URL

00:12:40.894 --> 00:12:44.965 align:middle
有生成和删除轨道的方法要生成轨道

00:12:45.032 --> 00:12:47.067 align:middle
必须要表明所需的轨道类型

00:12:47.134 --> 00:12:50.003 align:middle
要的是视频轨道是音频轨道等等

00:12:50.971 --> 00:12:53.640 align:middle
如果喜欢如果有现有轨道

00:12:53.707 --> 00:12:57.110 align:middle
希望以此复制新轨道我们把它作为

00:12:57.277 --> 00:13:02.182 align:middle
参数传递 从现有轨道 使用它们
采取相关的属性

00:12:57.277 --> 00:13:02.182 align:middle
参数传递 从现有轨道 使用它们
采取相关的属性

00:13:04.818 --> 00:13:07.588 align:middle
这里有个简单的小案例研究

00:13:08.355 --> 00:13:11.158 align:middle
为更新现有电影文件
我们可以从URL打开

00:13:11.225 --> 00:13:14.962 align:middle
使用我们刚才所见的方法做些编辑

00:13:15.829 --> 00:13:18.932 align:middle
然后我们可以使用正确的电影头文件

00:13:19.299 --> 00:13:22.169 align:middle
作为URL方法 将电影
头文件写入相同文件

00:13:22.236 --> 00:13:24.538 align:middle
这就是就地编辑

00:13:25.038 --> 00:13:27.541 align:middle
这里 我们并未移动任何样本数据

00:13:28.208 --> 00:13:30.844 align:middle
我们所做的就是调整电影框

00:13:31.078 --> 00:13:32.646 align:middle
并把它放回相同的文件

00:13:34.248 --> 00:13:36.416 align:middle
我们来谈谈轨道编辑API

00:13:37.951 --> 00:13:41.154 align:middle
这可以允许我们调整
QuickTime电影文件的轨道

00:13:41.622 --> 00:13:44.525 align:middle
我们有基于范围的轨道编辑

00:13:44.591 --> 00:13:46.326 align:middle
正如我们在电影层面所见

00:13:46.927 --> 00:13:52.299 align:middle
我们还可以设置轨道之间的关联性
可以增加或调整轨道元数据

00:13:53.634 --> 00:13:55.869 align:middle
这里是片段编辑方式

00:13:55.936 --> 00:13:58.972 align:middle
它们看似熟悉因为我们刚刚见过

00:14:01.008 --> 00:14:05.946 align:middle
在电影层面唯一的不同在于
我们没有插入资产的时间范围

00:14:06.013 --> 00:14:07.681 align:middle
而是插入了轨道的时间范围

00:14:09.850 --> 00:14:12.920 align:middle
同样 当我们插入
时间范围时 必须规定

00:14:12.986 --> 00:14:14.555 align:middle
你是否想要复制样本数据

00:14:14.821 --> 00:14:16.990 align:middle
还是只想放入样本参考

00:14:17.357 --> 00:14:20.093 align:middle
如果复制样本数据轨道必须要知道

00:14:20.160 --> 00:14:21.929 align:middle
样本数据要去往何处

00:14:22.396 --> 00:14:25.732 align:middle
通过使用在电影层面完全相同的类

00:14:26.033 --> 00:14:30.304 align:middle
设置轨道的媒体数据电影层面所见

00:14:32.472 --> 00:14:33.740 align:middle
这里是另一个案例研究

00:14:34.107 --> 00:14:36.844 align:middle
假设这里有一小段剪辑
我想做静音处理

00:14:36.910 --> 00:14:40.380 align:middle
也许这段剪辑中有部分不合时宜的语言

00:14:40.881 --> 00:14:43.483 align:middle
很简单 只要找到电影

00:14:43.550 --> 00:14:49.790 align:middle
第一个音频轨道定义时间范围即希望

00:14:50.090 --> 00:14:52.960 align:middle
静音的范围 删除时间范围

00:14:53.260 --> 00:14:56.196 align:middle
在相同的点插入空的时间范围

00:14:56.763 --> 00:15:00.067 align:middle
这个代码的净效果就是在原先的不当

00:14:56.763 --> 00:15:00.067 align:middle
这个代码的净效果就是在原先的不当

00:15:00.400 --> 00:15:02.870 align:middle
语言处加入了空片段

00:15:05.339 --> 00:15:07.407 align:middle
处理轨道关联性相当简单

00:15:07.474 --> 00:15:11.378 align:middle
可以增加轨道关联性
或删除轨道关联性

00:15:11.445 --> 00:15:14.248 align:middle
稍后我们来看怎样使用

00:15:16.917 --> 00:15:19.720 align:middle
我说过 当复制样本
数据进入轨道后

00:15:19.786 --> 00:15:22.956 align:middle
我会告知大家 怎样使用相关URL

00:15:23.490 --> 00:15:24.658 align:middle
要这样做

00:15:24.925 --> 00:15:29.029 align:middle
打开每个轨道

00:15:29.096 --> 00:15:34.735 align:middle
我们会设置样本参考基URL属性

00:15:35.302 --> 00:15:39.006 align:middle
到包括电影的电影部分共同父类

00:15:39.072 --> 00:15:43.043 align:middle
包括电影框的文件和包括所有
媒体数据的文件

00:15:46.313 --> 00:15:48.782 align:middle
好 我们来继续...

00:15:50.050 --> 00:15:53.453 align:middle
讲我说过的
个人项目我想称之为

00:15:53.520 --> 00:15:58.492 align:middle
《血字(和灰字)研究》
需要向柯南·道尔爵士致歉

00:15:59.393 --> 00:16:02.296 align:middle
我们回到1980年
我们说的是什么？

00:15:59.393 --> 00:16:02.296 align:middle
我们回到1980年
我们说的是什么？

00:16:02.362 --> 00:16:03.630 align:middle
35年前

00:16:04.331 --> 00:16:07.668 align:middle
当时我还是伯克利海湾区
那边的研究生

00:16:08.468 --> 00:16:10.771 align:middle
需要找个方法释放多余的精力

00:16:10.838 --> 00:16:12.706 align:middle
我出去买了轮滑鞋因为我发现伯克利

00:16:13.974 --> 00:16:17.044 align:middle
是轮滑者的理想场所位置

00:16:17.110 --> 00:16:19.379 align:middle
因为这里有些不错的山地

00:16:20.814 --> 00:16:24.284 align:middle
我非常喜欢我不断去找

00:16:24.351 --> 00:16:28.522 align:middle
更高的山爬上去之后再滑下来

00:16:29.223 --> 00:16:33.994 align:middle
1984年 你们可以看到
我在奥克兰克莱蒙大道的顶端

00:16:34.695 --> 00:16:39.099 align:middle
远处 你可以看到旧金山
是海湾区的这一侧

00:16:39.166 --> 00:16:42.569 align:middle
是爱莫瑞维尔这非常棒

00:16:42.636 --> 00:16:44.771 align:middle
几乎就像从我面前轮滑飞驰而过

00:16:46.006 --> 00:16:48.408 align:middle
我不太清楚举起手是做什么

00:16:48.475 --> 00:16:52.446 align:middle
也许是为了我们要誓死效忠的什么东西

00:16:53.313 --> 00:16:54.648 align:middle
我可没准备豁出命去
很好

00:16:56.783 --> 00:17:01.121 align:middle
为了跟踪我的位置我去买了街道地图

00:16:56.783 --> 00:17:01.121 align:middle
为了跟踪我的位置我去买了街道地图

00:17:01.989 --> 00:17:03.824 align:middle
我把自己设成黄色高亮

00:17:04.358 --> 00:17:07.928 align:middle
我开始在地图上标出自己去过的地方

00:17:08.694 --> 00:17:10.597 align:middle
那里的山地非常好

00:17:11.531 --> 00:17:15.068 align:middle
如果你和我一样这么做会糟糕的很

00:17:15.135 --> 00:17:18.472 align:middle
因为最后会把整幅地图都涂满颜色

00:17:19.906 --> 00:17:22.742 align:middle
然后是2000年 不好意思

00:17:22.809 --> 00:17:26.914 align:middle
大约是1985年我在弄一个项目

00:17:26.980 --> 00:17:29.983 align:middle
我称之为蒂姆的奥克兰疯狂轮滑之旅

00:17:30.551 --> 00:17:34.755 align:middle
或简称轮滑之旅目标很简单

00:17:34.821 --> 00:17:37.791 align:middle
就是在奥克兰的每条街道都轮滑
滑过街道的全长

00:17:38.792 --> 00:17:42.796 align:middle
从1985年一直持续到2005年

00:17:42.863 --> 00:17:45.933 align:middle
所以十年前 我完成了
怎么样？

00:17:47.835 --> 00:17:48.669 align:middle
谢谢

00:17:51.004 --> 00:17:53.874 align:middle
在奥克兰需要滑过
近800英里的公路

00:17:53.941 --> 00:17:55.876 align:middle
才能实现这个目标

00:17:57.010 --> 00:18:01.215 align:middle
2005年完成时 我没有位置数据

00:17:57.010 --> 00:18:01.215 align:middle
2005年完成时 我没有位置数据

00:18:01.281 --> 00:18:03.283 align:middle
我开始时GPS还没有发明出来

00:18:03.650 --> 00:18:05.252 align:middle
当时可能是没有的

00:18:05.686 --> 00:18:08.388 align:middle
实际上我有所有的位置数据

00:18:08.455 --> 00:18:10.791 align:middle
因为如果打开我的地图

00:18:12.626 --> 00:18:16.029 align:middle
你会看到在右侧都是黄色

00:18:16.129 --> 00:18:18.866 align:middle
不全是 但是阿拉米达皮埃蒙特

00:18:19.032 --> 00:18:21.235 align:middle
爱莫利维尔有整整9码的距离

00:18:23.537 --> 00:18:26.874 align:middle
我当时没有视频

00:18:27.808 --> 00:18:29.643 align:middle
如果大家回想那个时候

00:18:29.710 --> 00:18:32.779 align:middle
1985年扛的相机都是大块头

00:18:32.846 --> 00:18:35.616 align:middle
还很娇气外出轮滑的时候
肯定是不希望背着的

00:18:37.484 --> 00:18:39.152 align:middle
所以当我完成的时候
我的确是...

00:18:39.319 --> 00:18:41.388 align:middle
这是个疯狂的项目这点我承认

00:18:42.122 --> 00:18:45.692 align:middle
我绝对没有花心思告诉任何人这件事

00:18:46.193 --> 00:18:49.730 align:middle
可是不巧 估计《旧金山纪事报》
听说了此事

00:18:51.131 --> 00:18:55.435 align:middle
并且写了篇文章报道
就是那种有人情味的故事

00:18:57.337 --> 00:18:59.273 align:middle
奥克兰市参议会得知此事

00:18:59.339 --> 00:19:02.442 align:middle
通过一项决议表彰了此项

00:18:59.339 --> 00:19:02.442 align:middle
通过一项决议表彰了此项

00:19:02.509 --> 00:19:05.846 align:middle
卓绝的壮举...
是他们这么说的 不是我

00:19:07.614 --> 00:19:10.384 align:middle
奥克兰的几个制片人听说此事

00:19:10.784 --> 00:19:15.355 align:middle
花费了几年时间为这个项目
拍摄了漂亮的小纪录片

00:19:15.989 --> 00:19:19.593 align:middle
在一年前在湾区的独立

00:19:19.660 --> 00:19:21.361 align:middle
剧场进行了几轮上映

00:19:21.628 --> 00:19:22.863 align:middle
简直是太疯狂了

00:19:26.266 --> 00:19:30.737 align:middle
在我完成这个项目大约两年后

00:19:31.305 --> 00:19:34.274 align:middle
我开始在东海岸花了些时间

00:19:34.341 --> 00:19:37.477 align:middle
特别是在马萨诸塞州波士顿

00:19:38.011 --> 00:19:40.681 align:middle
更是在剑桥

00:19:40.948 --> 00:19:44.017 align:middle
我想 好吧 就让这事儿
继续上路吧

00:19:44.518 --> 00:19:48.288 align:middle
我花了几年时间
在剑桥和萨默维尔轮滑

00:19:48.689 --> 00:19:51.859 align:middle
最后产生了
波士顿轮滑之旅的想法

00:19:52.459 --> 00:19:56.530 align:middle
同样的想法 在波士顿的每条街道轮滑

00:19:57.631 --> 00:20:00.968 align:middle
大概是从2011年开始的

00:19:57.631 --> 00:20:00.968 align:middle
大概是从2011年开始的

00:20:01.602 --> 00:20:03.237 align:middle
我看了看地图估计需要5年时间

00:20:03.303 --> 00:20:05.239 align:middle
来完成这件事情

00:20:06.373 --> 00:20:08.442 align:middle
前几年的冬天也不大冷

00:20:08.709 --> 00:20:10.210 align:middle
城市大小和奥克兰差不多

00:20:11.078 --> 00:20:14.214 align:middle
在两年半的时间我就完成了

00:20:14.381 --> 00:20:19.219 align:middle
因此在2013年5月
我完成了波士顿轮滑之旅

00:20:20.654 --> 00:20:24.424 align:middle
这次我就有准备了因为在轮滑时

00:20:24.791 --> 00:20:27.227 align:middle
我在头盔上装了运动摄像机

00:20:27.294 --> 00:20:32.032 align:middle
iPhone上还有
GPS app

00:20:32.666 --> 00:20:39.506 align:middle
结果就是我攒了490个
MPEG-4文件拍摄了

00:20:40.240 --> 00:20:42.276 align:middle
200次不同的轮滑

00:20:42.743 --> 00:20:46.413 align:middle
共有1.5万亿字节的数据

00:20:47.447 --> 00:20:50.918 align:middle
我还有GPX文件形式的GPS数据

00:20:50.984 --> 00:20:54.388 align:middle
是那种XML版本的
位置数据 大家稍后会看到

00:20:55.255 --> 00:20:57.891 align:middle
有着大约150兆字节的数据

00:20:59.459 --> 00:21:04.431 align:middle
可想而知影片会是什么样子
我们来看其中一个

00:20:59.459 --> 00:21:04.431 align:middle
可想而知影片会是什么样子
我们来看其中一个

00:21:05.999 --> 00:21:08.502 align:middle
这些是摄像机直接拍摄的视频

00:21:08.569 --> 00:21:10.804 align:middle
我只是做了重新命名这样有了日期

00:21:10.871 --> 00:21:13.841 align:middle
和文件名 会让我更容易查找

00:21:15.309 --> 00:21:17.411 align:middle
我们在QuickTime
播放器中打开

00:21:17.644 --> 00:21:20.447 align:middle
这是第二个是接在第一个的

00:21:20.514 --> 00:21:24.184 align:middle
结尾部分继续
我们来选中第一个视频

00:21:24.651 --> 00:21:26.620 align:middle
我们可以看到阳光明媚

00:21:27.020 --> 00:21:28.956 align:middle
是在11月下旬

00:21:29.356 --> 00:21:30.524 align:middle
当时是工作日

00:21:31.124 --> 00:21:35.128 align:middle
我们来播放
看得出是秋天因为地上有落叶

00:21:35.762 --> 00:21:37.397 align:middle
如果有音频文件也许会听得到

00:21:37.464 --> 00:21:39.800 align:middle
当天的呼呼风声

00:21:41.368 --> 00:21:42.970 align:middle
不过 令人感觉有些奇怪

00:21:43.170 --> 00:21:44.705 align:middle
因为街上没有人

00:21:44.938 --> 00:21:46.273 align:middle
没有一个行人

00:21:46.740 --> 00:21:48.242 align:middle
我们往前快进一点

00:21:49.109 --> 00:21:51.345 align:middle
还是没有行人只是有些车子

00:21:51.879 --> 00:21:53.647 align:middle
我在朗伍德医疗区

00:21:53.914 --> 00:21:56.149 align:middle
这里交通很是拥堵

00:21:56.350 --> 00:21:58.552 align:middle
却没有人 这是商业区

00:21:59.620 --> 00:22:01.121 align:middle
没有人<c.blue> </c>像个鬼城

00:21:59.620 --> 00:22:01.121 align:middle
没有人<c.blue> </c>像个鬼城

00:22:01.321 --> 00:22:02.489 align:middle
出什么事儿了？

00:22:03.423 --> 00:22:05.692 align:middle
我们稍后会解决这个问题

00:22:08.529 --> 00:22:10.631 align:middle
基本上我所获得的
是一以大堆干草

00:22:11.064 --> 00:22:14.468 align:middle
还有一把银针
我制作了500小时的视频

00:22:15.035 --> 00:22:17.938 align:middle
即便99%都没什么用处

00:22:18.238 --> 00:22:21.842 align:middle
那也还能找出5小时有趣的视频

00:22:23.443 --> 00:22:26.146 align:middle
不过 部分问题是我甚至不
知道这些银针是什么样

00:22:26.213 --> 00:22:28.315 align:middle
因为我不知道500小时视频中

00:22:28.549 --> 00:22:30.751 align:middle
哪些比较重要

00:22:32.853 --> 00:22:35.656 align:middle
我知道<c.blue> </c>我喜欢看部分内容

00:22:35.756 --> 00:22:38.392 align:middle
这里用了蒙太奇手法

00:22:48.268 --> 00:22:50.137 align:middle
下雪了 真的吗？好吧

00:22:55.108 --> 00:22:56.510 align:middle
我没看见路面坑洼吗？

00:23:06.053 --> 00:23:08.021 align:middle
这是我最喜欢的一部分
因为大家可以看到

00:23:08.088 --> 00:23:11.959 align:middle
我在往下滑 往前滚动返回 继续滑行

00:23:12.659 --> 00:23:14.194 align:middle
如果不是... 谢谢大家

00:23:18.765 --> 00:23:20.834 align:middle
现在我必须花钱找人帮我挑

00:23:20.901 --> 00:23:25.272 align:middle
看过全部视频的1/50

00:23:26.173 --> 00:23:27.641 align:middle
才挑出这6个剪辑

00:23:27.875 --> 00:23:29.142 align:middle
理论上 这一大堆干草中

00:23:29.510 --> 00:23:33.614 align:middle
会有300个精彩的摔跤镜头

00:23:34.648 --> 00:23:36.717 align:middle
要知道 每个跟头5秒钟的话

00:23:36.783 --> 00:23:39.319 align:middle
我们就会有25分钟这类素材

00:23:39.386 --> 00:23:41.255 align:middle
这的确看起来很有趣

00:23:43.190 --> 00:23:45.459 align:middle
现在我想怎么来用所有这些数据

00:23:45.692 --> 00:23:48.295 align:middle
我有1.5万亿太字节的视频数据

00:23:48.362 --> 00:23:49.630 align:middle
想拿来做点什么

00:23:49.696 --> 00:23:51.098 align:middle
我想找出那些银针

00:23:52.099 --> 00:23:55.903 align:middle
第一步是要把每次滑轮的摄像

00:23:55.969 --> 00:23:57.971 align:middle
不同文件连接到一起

00:23:58.438 --> 00:24:02.176 align:middle
做成样本参考电影文件
这样我可以打开编辑

00:23:58.438 --> 00:24:02.176 align:middle
做成样本参考电影文件
这样我可以打开编辑

00:24:02.242 --> 00:24:05.245 align:middle
而不必担心摄像文件

00:24:06.446 --> 00:24:09.216 align:middle
第二是我想加入索引元数据

00:24:09.516 --> 00:24:12.386 align:middle
作为电影元数据

00:24:12.920 --> 00:24:14.955 align:middle
那么我要进入文件并做标记

00:24:15.222 --> 00:24:18.392 align:middle
好了 我这里开始摔跤
这就是摔跤的结束部分

00:24:18.725 --> 00:24:20.727 align:middle
这里是狗开始追我的地方

00:24:20.794 --> 00:24:23.263 align:middle
这里是它们最后觉得
没办法抓到我的地方

00:24:24.198 --> 00:24:28.302 align:middle
这里是我和执法官员交谈
这些还会继续

00:24:30.437 --> 00:24:32.773 align:middle
我希望对所有素材都进行索引

00:24:32.840 --> 00:24:36.009 align:middle
这样便于搜索 发现
所有的银针 可以调用

00:24:37.544 --> 00:24:41.215 align:middle
我还想加入GPS数据 还有所有的
位置数据 我还什么都没处理

00:24:41.281 --> 00:24:43.183 align:middle
我希望把它加到文件里

00:24:43.250 --> 00:24:45.385 align:middle
这样可以做成定时元数据轨道

00:24:46.887 --> 00:24:52.392 align:middle
关键在于 我做所有这些都不会修改
最初原始的摄像机文件

00:24:52.893 --> 00:24:56.396 align:middle
并可以将需要进行的
数据复制数量最小化

00:24:57.664 --> 00:24:58.932 align:middle
好的<c.blue> </c>具体该怎样做呢？

00:24:59.366 --> 00:25:03.003 align:middle
AVMovie和AVMutableMovie
为我们提供答案

00:24:59.366 --> 00:25:03.003 align:middle
AVMovie和AVMutableMovie
为我们提供答案

00:25:03.937 --> 00:25:07.040 align:middle
第一个问题的解决方案相当简单

00:25:07.474 --> 00:25:09.743 align:middle
我准备用这些摄像机文件

00:25:09.810 --> 00:25:12.746 align:middle
生成样本参考电影文件

00:25:12.813 --> 00:25:14.748 align:middle
它会指向两个原始文件

00:25:15.449 --> 00:25:19.786 align:middle
非常简单就是样本参考
电影文件的标准用法

00:25:21.421 --> 00:25:24.525 align:middle
第二步的解决方案会在电影框中

00:25:24.591 --> 00:25:27.694 align:middle
加入一些额外的自定义元数据

00:25:29.796 --> 00:25:33.200 align:middle
第三步是在新的样本参考电影文件中

00:25:33.467 --> 00:25:37.671 align:middle
加入真实的媒体数据

00:25:38.305 --> 00:25:41.208 align:middle
这些媒体数据 即便叫做定时元数据

00:25:41.275 --> 00:25:44.511 align:middle
也是作为媒体数据或样本数据存储

00:25:44.578 --> 00:25:46.113 align:middle
并会进入文件的新轨道

00:25:47.347 --> 00:25:50.684 align:middle
我准备这么来处理问题

00:25:51.518 --> 00:25:53.520 align:middle
第一步其实非常简单

00:25:53.854 --> 00:25:57.891 align:middle
作为可变电影打开第一个的电影

00:25:58.458 --> 00:26:02.663 align:middle
我们会打开第二个
以及任何后续的电影作为URL资产

00:25:58.458 --> 00:26:02.663 align:middle
我们会打开第二个
以及任何后续的电影作为URL资产

00:26:03.664 --> 00:26:07.467 align:middle
我们会在准备插入的资产中定义范围

00:26:07.534 --> 00:26:10.137 align:middle
这就是整个资产时长

00:26:11.572 --> 00:26:14.675 align:middle
我们会在可变电影的结尾将它插入

00:26:15.142 --> 00:26:19.646 align:middle
可变电影中记住不要复制样本数据

00:26:19.847 --> 00:26:21.815 align:middle
我最后只要样本参考

00:26:22.649 --> 00:26:26.587 align:middle
最后 我们所需要做的
就是在新文件中

00:26:26.653 --> 00:26:31.992 align:middle
编写新的电影头文件生成样本参考

00:26:32.059 --> 00:26:35.696 align:middle
电影文件来指向两个原始
摄像机文件中的数据

00:26:37.764 --> 00:26:39.032 align:middle
我们来看部分演示

00:26:39.433 --> 00:26:41.435 align:middle
看怎样解决第二个和第三个问题

00:26:41.835 --> 00:26:45.005 align:middle
通常 这个幻灯片是阅读演示

00:26:45.072 --> 00:26:47.941 align:middle
但我对好的回文没有免疫力

00:26:50.878 --> 00:26:52.579 align:middle
而且也不愿意浪费

00:26:52.646 --> 00:26:55.182 align:middle
Alvin是基于
AVFoundation

00:26:55.249 --> 00:26:58.285 align:middle
的线性索引器的缩略

00:26:59.353 --> 00:27:03.724 align:middle
就是用来做我说过的索引工作

00:26:59.353 --> 00:27:03.724 align:middle
就是用来做我说过的索引工作

00:27:04.124 --> 00:27:07.528 align:middle
而且可以把位置数据加入文件中

00:27:08.328 --> 00:27:09.963 align:middle
UI大概是这样

00:27:10.464 --> 00:27:14.067 align:middle
我把电影视图放在左边
地图视图放在右边

00:27:14.134 --> 00:27:17.704 align:middle
下面可以看到有些显示区

00:27:17.771 --> 00:27:22.776 align:middle
是我搜集来的轮滑相关信息的显示

00:27:23.911 --> 00:27:27.047 align:middle
我们继续打开电影文件

00:27:27.114 --> 00:27:31.251 align:middle
这是我刚生成的样本参考电影文件

00:27:32.052 --> 00:27:34.555 align:middle
打开 我准备加载GPX文件

00:27:35.522 --> 00:27:38.492 align:middle
我会选择适当的GPS文件

00:27:40.894 --> 00:27:42.162 align:middle
我打开文件时

00:27:42.462 --> 00:27:46.133 align:middle
需要填写部分数据
它会指出这将用多久完成

00:27:46.834 --> 00:27:50.704 align:middle
怎样？好了 我可以扩展地图视图

00:27:50.771 --> 00:27:54.641 align:middle
清楚显示我们在哪里
我出去在布鲁克林四周兜了一圈

00:27:55.475 --> 00:27:57.711 align:middle
这很适合你这里是洛根机场

00:27:58.478 --> 00:27:59.880 align:middle
绝对是波士顿

00:28:00.814 --> 00:28:01.949 align:middle
这里是剑桥

00:28:02.816 --> 00:28:04.718 align:middle
我们仔细看看

00:28:05.052 --> 00:28:09.122 align:middle
哦 我说过要给大家看GPX文件

00:28:09.723 --> 00:28:11.325 align:middle
GPX文件就是这个样子

00:28:11.391 --> 00:28:16.296 align:middle
是XML格式经纬度 海拔 时间标记

00:28:16.697 --> 00:28:18.398 align:middle
就是它了 再没别的

00:28:21.702 --> 00:28:24.171 align:middle
我们来这里运行Web服务

00:28:24.238 --> 00:28:28.408 align:middle
我出去到政府Web
服务器看看当天的天气情况

00:28:28.475 --> 00:28:30.444 align:middle
怎样我发现当天风很大

00:28:30.511 --> 00:28:33.981 align:middle
风速平均每小时17英里
对喜欢用公制的人来说

00:28:34.047 --> 00:28:38.018 align:middle
就是28.439华氏度

00:28:38.085 --> 00:28:40.554 align:middle
还有种有趣说法3.9摄氏度

00:28:41.788 --> 00:28:44.658 align:middle
那天是感恩节所以街上没有人

00:28:44.725 --> 00:28:48.028 align:middle
对了 这说明那天正好过节
还是犹太光明节的第二天

00:28:49.096 --> 00:28:52.633 align:middle
对吧？来看这些Web
Services这就可以让我们

00:28:52.699 --> 00:28:54.668 align:middle
推断出为何街上没人

00:28:56.203 --> 00:28:58.238 align:middle
我跑到另一个Web Service

00:28:58.305 --> 00:29:01.942 align:middle
叫做反向地理编码
我会从Apple服务器

00:28:58.305 --> 00:29:01.942 align:middle
叫做反向地理编码
我会从Apple服务器

00:29:02.276 --> 00:29:04.945 align:middle
发出经纬度它会返还

00:29:05.012 --> 00:29:08.348 align:middle
州 城市 街道的样子

00:29:08.682 --> 00:29:10.350 align:middle
有时甚至还有门牌号

00:29:10.717 --> 00:29:14.154 align:middle
基本上 就会提供
我所经过的街道信息

00:29:14.755 --> 00:29:17.391 align:middle
等一下 所有的街道图钉会落下

00:29:19.226 --> 00:29:24.064 align:middle
然后我们可以选出一个
来看是哪条街道是联邦大道

00:29:25.265 --> 00:29:27.935 align:middle
或是布鲁克林的华盛顿大街

00:29:29.503 --> 00:29:32.439 align:middle
我这里还加了搜索条可以输入

00:29:32.506 --> 00:29:35.876 align:middle
比如联邦大道如果发现就会标亮

00:29:36.476 --> 00:29:38.478 align:middle
如果把数据放入文件

00:29:38.545 --> 00:29:41.982 align:middle
现在就完成了街道名称的可搜索性

00:29:42.049 --> 00:29:46.520 align:middle
我可以进入 找到所有
在某条街道的小剪辑

00:29:48.889 --> 00:29:51.091 align:middle
我们可以隐藏这些需要做的最后一件事

00:29:51.158 --> 00:29:54.394 align:middle
就是用地址数据同步视频

00:29:55.062 --> 00:29:57.231 align:middle
我试过各种自动方法来完成

00:29:57.297 --> 00:30:00.801 align:middle
结果发现最好的办法
只有一种 就是前往

00:29:57.297 --> 00:30:00.801 align:middle
结果发现最好的办法
只有一种 就是前往

00:30:00.868 --> 00:30:05.172 align:middle
我视频中的帧
这里我知道在地图上自己的位置

00:30:05.839 --> 00:30:07.674 align:middle
然后我会来到地图

00:30:09.009 --> 00:30:13.580 align:middle
点击并同步视频和这个位置

00:30:14.414 --> 00:30:17.384 align:middle
现在 当我这么做时如果返回
并开始播放视频

00:30:17.718 --> 00:30:20.721 align:middle
大家会看到图钉会沿着视频移动

00:30:20.988 --> 00:30:22.456 align:middle
看 这就是在同步

00:30:23.690 --> 00:30:25.192 align:middle
我甚至可以前往另一个方向

00:30:25.259 --> 00:30:27.995 align:middle
我去地图上的某个位置可以点击

00:30:28.061 --> 00:30:32.533 align:middle
让视频到这里现在我就在联邦大道了

00:30:32.999 --> 00:30:35.802 align:middle
我知道这里是很有趣的下坡路段

00:30:35.869 --> 00:30:37.771 align:middle
我们可以滑行一秒钟

00:30:38.338 --> 00:30:40.774 align:middle
这就是我们这么做的原因这类下坡没有

00:30:41.175 --> 00:30:45.546 align:middle
汽车经过会有什么状况呢？

00:30:49.216 --> 00:30:50.417 align:middle
好的这就是Alvin

00:30:50.484 --> 00:30:53.487 align:middle
大家可以看出Alvin可以帮我解决
第二和第三个问题

00:30:54.254 --> 00:30:59.459 align:middle
可以添加自定义元数据
到样本参考电影文件

00:31:00.527 --> 00:31:02.196 align:middle
基本是这样的

00:31:02.596 --> 00:31:05.766 align:middle
通过调用... 将现有的元数据

00:31:06.133 --> 00:31:07.668 align:middle
来看元数据属性

00:31:08.435 --> 00:31:10.170 align:middle
我们会生成新的元数据项

00:31:10.537 --> 00:31:12.706 align:middle
我们会相应填入属性

00:31:12.906 --> 00:31:16.109 align:middle
例如 平均风速值是我从政府服务器

00:31:16.176 --> 00:31:19.346 align:middle
获得的当天天气情况数据

00:31:20.147 --> 00:31:22.983 align:middle
我还创建了部分识别器可以以后查找

00:31:23.050 --> 00:31:26.620 align:middle
一旦把这些写入文件加上正确的电影

00:31:26.687 --> 00:31:30.757 align:middle
头文件到URL电影就全部升级了

00:31:32.559 --> 00:31:33.694 align:middle
我们再来看看第三步

00:31:33.827 --> 00:31:37.097 align:middle
是将位置数据作为定时元数据轨道

00:31:37.831 --> 00:31:39.700 align:middle
大家已经知道该怎么做了

00:31:39.933 --> 00:31:41.235 align:middle
如果去年来过

00:31:42.169 --> 00:31:45.205 align:middle
听过《驾驭音频视频
媒体中的元数据》讲座

00:31:45.672 --> 00:31:47.474 align:middle
其中他们介绍过两个内容

00:31:47.541 --> 00:31:51.912 align:middle
首先从捕获会话得到位置数据

00:31:52.546 --> 00:31:55.983 align:middle
以及怎样将正确时间的元数据加入电影

00:31:56.817 --> 00:32:00.654 align:middle
我们可以获得位置数据在GPX文件中

00:31:56.817 --> 00:32:00.654 align:middle
我们可以获得位置数据在GPX文件中

00:32:00.721 --> 00:32:02.990 align:middle
我们并不需要捕获会话内容

00:32:03.724 --> 00:32:06.226 align:middle
我们可以关注在第二个样本

00:32:06.293 --> 00:32:08.729 align:middle
代码包中获得源代码

00:32:09.062 --> 00:32:10.430 align:middle
并把它放入Alvin

00:32:11.965 --> 00:32:13.967 align:middle
现在 我们一旦完成在盘里会得到

00:32:14.168 --> 00:32:18.038 align:middle
带有单个元数据轨道的定时文件

00:32:18.705 --> 00:32:22.676 align:middle
我们所需要做的就是复制轨道到

00:32:23.243 --> 00:32:27.915 align:middle
电影的新轨道中
可以打开通过GPS资产来实现

00:32:29.283 --> 00:32:31.218 align:middle
我们接着会运用

00:32:31.318 --> 00:32:35.556 align:middle
轨道中恰好有的媒体类型在电影文件中

00:32:35.722 --> 00:32:39.626 align:middle
添加新轨道我们会从轨道中复制设置

00:32:40.961 --> 00:32:45.933 align:middle
最后 我们将范围插入新轨道

00:32:45.999 --> 00:32:49.336 align:middle
同样如果在文件中
编写头文件 我们弄好了

00:32:52.706 --> 00:32:55.809 align:middle
现在需要做的最后一件事这是可选内容

00:32:56.210 --> 00:32:59.847 align:middle
就是在定时媒体轨道
和元数据的任何轨道之间

00:33:00.380 --> 00:33:05.118 align:middle
生成轨道关联性在本例中
我们已经选定了视频轨道

00:33:06.220 --> 00:33:09.990 align:middle
如果跳过这一步定时视频轨道

00:33:10.057 --> 00:33:14.661 align:middle
则会整体运用到文件中
关于这些 我们都没问题

00:33:20.534 --> 00:33:23.103 align:middle
如果你们在用
AVMutableMovie

00:33:23.370 --> 00:33:24.872 align:middle
这里还要注意两点

00:33:25.973 --> 00:33:28.876 align:middle
如大家所知 AVMovie
或AVMutableMovie

00:33:29.409 --> 00:33:31.645 align:middle
属于AVAsset因为它是子类

00:33:32.312 --> 00:33:36.250 align:middle
如果可将AVAsset做什么
处理的话可以用在可变电影中

00:33:36.817 --> 00:33:39.953 align:middle
例如 可以用
AVPlayerItem来播放

00:33:40.754 --> 00:33:44.224 align:middle
可以用AVAssetImageGenerator
从中抓取图像

00:33:45.526 --> 00:33:49.396 align:middle
可以用
AVAssetExportSession来输出

00:33:50.497 --> 00:33:53.600 align:middle
如果在可变电影中进行任何这样的操作

00:33:54.134 --> 00:33:56.470 align:middle
我们非常建议你对可变电影

00:33:56.537 --> 00:34:00.340 align:middle
进行拷贝 因为如果你在输出时

00:33:56.537 --> 00:34:00.340 align:middle
进行拷贝 因为如果你在输出时

00:34:00.407 --> 00:34:02.776 align:middle
是在改变电影文件要以防不测

00:34:02.876 --> 00:34:06.213 align:middle
只要进行拷贝在输出即可一切都没问题

00:34:07.948 --> 00:34:13.120 align:middle
第二个最佳实践是如果你在打开

00:34:13.320 --> 00:34:16.790 align:middle
希望插入
AVMutableMovie的资产

00:34:17.824 --> 00:34:22.362 align:middle
则应该设置这个旗标
AV URL资产喜好精确时长

00:34:22.429 --> 00:34:24.331 align:middle
和定时键为真

00:34:25.032 --> 00:34:27.134 align:middle
现在我们并未在大家已经见到的任何

00:34:27.201 --> 00:34:31.538 align:middle
代码片段中这么做因为你
打开QuickTime电影文件时

00:34:31.737 --> 00:34:33.239 align:middle
旗标已经设置为真

00:34:33.639 --> 00:34:36.076 align:middle
但是如果需要打开MP3文件

00:34:36.143 --> 00:34:38.445 align:middle
例如希望将之插入可变电影文件

00:34:38.779 --> 00:34:39.947 align:middle
你需要设置这个旗标

00:34:41.748 --> 00:34:42.683 align:middle
我们来总结一下

00:34:44.051 --> 00:34:48.722 align:middle
我们加入了新类
来支持QuickTime电影文件

00:34:50.123 --> 00:34:51.891 align:middle
我希望如大家所见这让我们的工作流程

00:34:52.559 --> 00:34:55.094 align:middle
会变得非常简单非常不错

00:34:55.262 --> 00:34:59.666 align:middle
我们可以处理参考电影
而不是原始的电影本身

00:35:00.067 --> 00:35:03.770 align:middle
因此 如果在处理大量的数据
这会非常得力

00:35:04.905 --> 00:35:07.574 align:middle
如果想在知道在实践中怎么操作

00:35:07.641 --> 00:35:09.943 align:middle
下载AVMovieEditor
仔细看看

00:35:11.411 --> 00:35:13.680 align:middle
若想了解更多详情就去标准场所

00:35:14.348 --> 00:35:18.285 align:middle
如果这方面存在问题在周四和周五
我们会在实验室

00:35:19.119 --> 00:35:20.220 align:middle
如果想看看

00:35:20.487 --> 00:35:23.924 align:middle
怎样运用复合类
转到2010年的讲座看看

00:35:24.758 --> 00:35:27.194 align:middle
最后 如果大家想详细了解怎样进行

00:35:27.261 --> 00:35:29.963 align:middle
定时元数据轨道生成

00:35:30.531 --> 00:35:33.567 align:middle
可以看看去年的讲座
《在音频视频媒体中驾驭元数据》

00:35:34.568 --> 00:35:35.569 align:middle
非常感谢
