WEBVTT

00:00:20.721 --> 00:00:25.125 align:middle
《Safari View
Controller之简介》

00:00:28.929 --> 00:00:30.163 align:middle
大家下午好

00:00:30.364 --> 00:00:31.198 align:middle
欢迎各位

00:00:31.698 --> 00:00:34.535 align:middle
在我们开始讲座前
我想对大家有一个了解

00:00:34.601 --> 00:00:36.203 align:middle
你们通过举手方式回答

00:00:36.737 --> 00:00:38.672 align:middle
如果你们有苹果公司

00:00:38.739 --> 00:00:41.108 align:middle
App商店正在上架的app
请举手

00:00:42.209 --> 00:00:43.043 align:middle
你们很多人都有

00:00:43.110 --> 00:00:44.945 align:middle
欢迎 你们来对了地方
那就是WWDC

00:00:45.579 --> 00:00:48.949 align:middle
在你们中有多少人刚开始
学习如何写iOS Mac

00:00:49.016 --> 00:00:50.717 align:middle
或苹果手表app？

00:00:51.785 --> 00:00:52.619 align:middle
你们中有一些是

00:00:52.686 --> 00:00:53.720 align:middle
同样也欢迎你们

00:00:54.321 --> 00:00:56.423 align:middle
在你们已经创建或

00:00:56.557 --> 00:00:58.058 align:middle
正考虑创建的所有app中

00:00:58.392 --> 00:01:01.261 align:middle
有多少是专用网络浏览器

00:00:58.392 --> 00:01:01.261 align:middle
有多少是专用网络浏览器

00:01:02.529 --> 00:01:04.230 align:middle
好的 你们有一些

00:01:04.697 --> 00:01:05.599 align:middle
人数不那么多

00:01:07.034 --> 00:01:09.269 align:middle
你们中有多少人在你们的应用中

00:01:09.336 --> 00:01:10.571 align:middle
包含一个小型网络浏览器

00:01:10.838 --> 00:01:12.472 align:middle
每当用户点击时就显示

00:01:12.539 --> 00:01:13.640 align:middle
哦
你们都举手了

00:01:13.807 --> 00:01:16.143 align:middle
好了
我是Ricky Mondello

00:01:16.376 --> 00:01:18.512 align:middle
Safari和WebKit团队的
一名工程师

00:01:19.046 --> 00:01:21.048 align:middle
我接下来半小时的目标是

00:01:21.114 --> 00:01:22.983 align:middle
让你们中间所有
以编写小型网络浏览器

00:01:23.050 --> 00:01:24.551 align:middle
为业务的人破产

00:01:31.225 --> 00:01:33.994 align:middle
我将给你们展示
如何使用Safari

00:01:34.394 --> 00:01:36.563 align:middle
或新的Safari视图控件

00:01:36.897 --> 00:01:38.632 align:middle
使你们有更多时间关注

00:01:38.699 --> 00:01:41.268 align:middle
对你们的app
有特殊意义的部分

00:01:41.635 --> 00:01:43.237 align:middle
并为你们的用户提供

00:01:43.303 --> 00:01:44.905 align:middle
已经喜欢的Safari特性

00:01:45.739 --> 00:01:47.040 align:middle
大家准备好
我们开讲了

00:01:49.576 --> 00:01:52.246 align:middle
这个话题的中心是网络内容

00:01:52.813 --> 00:01:55.749 align:middle
网络内容有很多
分为不同的形态和大小

00:01:56.149 --> 00:01:57.384 align:middle
但在今天的讨论中

00:01:57.451 --> 00:01:59.419 align:middle
我将把它大致归为两类

00:02:00.988 --> 00:02:03.757 align:middle
第一类内容是在你们的app中

00:02:03.824 --> 00:02:07.528 align:middle
用HTML
JavaScript和CSS书写

00:02:08.161 --> 00:02:09.530 align:middle
你们拥有这些内容

00:02:09.763 --> 00:02:12.232 align:middle
或你们将特别介绍这些内容

00:02:13.100 --> 00:02:14.067 align:middle
重要的是

00:02:14.134 --> 00:02:16.904 align:middle
它看起来
并不像传统网络浏览器上的内容

00:02:17.371 --> 00:02:19.573 align:middle
它不是用户浏览网站时
看到的内容

00:02:20.641 --> 00:02:22.042 align:middle
我们看第二种情况

00:02:23.544 --> 00:02:25.612 align:middle
当一个用户点击了
你们app中的一个链接

00:02:25.812 --> 00:02:28.282 align:middle
你们想给他们展示一个
类似Safari的视图

00:02:28.348 --> 00:02:30.317 align:middle
这样他们可以做一些短暂的浏览

00:02:31.919 --> 00:02:35.522 align:middle
这次讲座主要关注
第二种使用情况

00:02:36.023 --> 00:02:39.526 align:middle
我们将看到Safari和
Safari视图控件

00:02:39.760 --> 00:02:42.029 align:middle
如何为你们的应用
增加已经过多年验证的功能

00:02:42.095 --> 00:02:43.130 align:middle
并改进你们的应用

00:02:44.164 --> 00:02:45.265 align:middle
但是在我们开始展示前

00:02:45.532 --> 00:02:47.401 align:middle
我想快速说明另一个使用情况

00:02:47.701 --> 00:02:50.404 align:middle
如果你们正在你们的app中

00:02:50.637 --> 00:02:53.373 align:middle
以一种不像传统网络浏览器的方式
使用网络内容

00:02:53.607 --> 00:02:55.776 align:middle
你们可能正在使用
WKWebView

00:02:56.076 --> 00:02:57.177 align:middle
或UIWebView

00:02:58.078 --> 00:03:00.547 align:middle
但WKWebView是首选工具

00:02:58.078 --> 00:03:00.547 align:middle
但WKWebView是首选工具

00:03:01.048 --> 00:03:01.882 align:middle
它是你们的朋友

00:03:02.883 --> 00:03:06.386 align:middle
它是在iOS 8和
OS X Yosemite中推出的

00:03:06.887 --> 00:03:09.523 align:middle
基本上它只是一个
网络内容周围的矩形

00:03:10.524 --> 00:03:12.125 align:middle
你们把一个页面加载到它里面

00:03:12.593 --> 00:03:14.261 align:middle
你们可以评估JavaScript

00:03:14.328 --> 00:03:15.195 align:middle
并且在当前页面上

00:03:15.262 --> 00:03:17.197 align:middle
得到一个JavaScript
评估结果

00:03:17.731 --> 00:03:20.234 align:middle
你们可以修改导航或
彻底阻止它们

00:03:20.834 --> 00:03:23.103 align:middle
是否增加你们自己的用户界面

00:03:23.704 --> 00:03:24.872 align:middle
后退 前进按钮

00:03:25.239 --> 00:03:26.640 align:middle
交流进展等等

00:03:27.074 --> 00:03:27.908 align:middle
取决于你们自己

00:03:29.510 --> 00:03:32.646 align:middle
在iOS 9和
OS X El Capitan

00:03:32.980 --> 00:03:34.515 align:middle
我们收到了你们的最新反馈

00:03:34.581 --> 00:03:37.684 align:middle
我们已经包含了一些
WKWebView

00:03:37.885 --> 00:03:38.719 align:middle
以前缺少的片段

00:03:40.287 --> 00:03:41.321 align:middle
首要的是

00:03:41.588 --> 00:03:43.957 align:middle
你们现在能够
安全地加载很多FileURL

00:03:50.831 --> 00:03:52.165 align:middle
你们同样可以加载数据

00:03:52.232 --> 00:03:55.369 align:middle
例如你们过去想用这种
方式加载的文本格式HTML字符串

00:03:55.802 --> 00:03:57.070 align:middle
你们不需要起转服务器

00:03:58.839 --> 00:04:02.176 align:middle
你们可以选择设置你们自己的
自定义用户代理字符串

00:03:58.839 --> 00:04:02.176 align:middle
你们可以选择设置你们自己的
自定义用户代理字符串

00:04:07.981 --> 00:04:12.085 align:middle
我们已经增加了一个新的API
用于处理网页储存的数据

00:04:12.419 --> 00:04:14.621 align:middle
如cookies缓存和其它数据

00:04:15.389 --> 00:04:18.492 align:middle
这就是WK网站数据存储
(WKWebsiteDataStore)

00:04:19.793 --> 00:04:22.996 align:middle
在您的网络视图中的
WKWebViewConfiguration中

00:04:23.063 --> 00:04:24.031 align:middle
它具有可读或写属性

00:04:24.898 --> 00:04:26.166 align:middle
使用这个数据存储

00:04:26.466 --> 00:04:28.435 align:middle
你们可以根据类型删除数据

00:04:28.802 --> 00:04:30.204 align:middle
或者你们可以删除...

00:04:30.270 --> 00:04:32.940 align:middle
前一小时添加的所有的数据

00:04:33.106 --> 00:04:33.941 align:middle
这很棒

00:04:35.943 --> 00:04:37.511 align:middle
因为这个属性

00:04:37.611 --> 00:04:40.514 align:middle
你们配置中的存储是可写的

00:04:40.581 --> 00:04:43.450 align:middle
你们可以
用一个非永久性配置替换它

00:04:43.884 --> 00:04:45.719 align:middle
你们也会在实现私密浏览方面

00:04:45.786 --> 00:04:46.620 align:middle
去这么做

00:04:50.023 --> 00:04:52.359 align:middle
对于你们app中你们自己的

00:04:52.492 --> 00:04:55.429 align:middle
自己控制
自定义的网络内容

00:04:55.996 --> 00:04:58.365 align:middle
WKWebView是能胜任的工具

00:04:59.132 --> 00:05:01.935 align:middle
在iOS 9
和OS X El Capitan中

00:04:59.132 --> 00:05:01.935 align:middle
在iOS 9
和OS X El Capitan中

00:05:02.336 --> 00:05:05.072 align:middle
我们给你们提供了
更灵活的选择

00:05:07.341 --> 00:05:08.976 align:middle
如果你们在想：

00:05:10.043 --> 00:05:11.378 align:middle
我不需要
那样灵活的选择

00:05:11.879 --> 00:05:14.381 align:middle
我不想在页面上
评估JavaScript

00:05:14.848 --> 00:05:17.317 align:middle
我不需要修改导航

00:05:17.718 --> 00:05:20.087 align:middle
我不想接通我自己的
后退和前进按钮

00:05:20.654 --> 00:05:22.422 align:middle
那么接下来的讲座
就是为你们准备的

00:05:26.159 --> 00:05:28.529 align:middle
我们会谈论
你们怎样使用Safari

00:05:28.695 --> 00:05:30.264 align:middle
或者Safari视图控件

00:05:30.330 --> 00:05:32.332 align:middle
以便让你们的用户得到
更好的体验

00:05:32.399 --> 00:05:34.701 align:middle
你们写的代码也更少

00:05:35.502 --> 00:05:36.670 align:middle
你们第一个选择是

00:05:36.870 --> 00:05:40.340 align:middle
索性把展示网络内容的责任

00:05:40.407 --> 00:05:41.642 align:middle
交给Safari本身

00:05:42.309 --> 00:05:43.944 align:middle
这是极其容易做到的

00:05:44.311 --> 00:05:47.147 align:middle
只需调用UIApplications
openURL方法

00:05:47.714 --> 00:05:50.884 align:middle
iOS会从你们的app
切换到Safari

00:05:53.053 --> 00:05:54.555 align:middle
iOS 9的一个新特性

00:05:54.821 --> 00:05:56.857 align:middle
你们昨天看到的
是系统预设用途

00:05:56.924 --> 00:05:58.559 align:middle
就是回到上一个app的能力

00:05:58.725 --> 00:06:00.327 align:middle
使这它成为比以往更好的选择

00:05:58.725 --> 00:06:00.327 align:middle
使这它成为比以往更好的选择

00:06:00.694 --> 00:06:02.629 align:middle
它比iOS 8更轻便

00:06:09.169 --> 00:06:12.606 align:middle
把展示网页内容的责任
委派给Safari

00:06:12.773 --> 00:06:15.309 align:middle
确保了
用户在使用网页内容时

00:06:15.375 --> 00:06:16.276 align:middle
得到一级体验

00:06:16.844 --> 00:06:18.312 align:middle
那就是Safari所能做到的

00:06:19.379 --> 00:06:22.282 align:middle
如果你们想保持
你们app目前的体验

00:06:22.749 --> 00:06:25.018 align:middle
用户甚至对您的app难舍难分

00:06:25.452 --> 00:06:27.888 align:middle
你们会对Safari视图控件
感兴趣

00:06:29.189 --> 00:06:30.057 align:middle
让我们我们看一下

00:06:32.593 --> 00:06:35.696 align:middle
这是来自于apple.com网页的
Safari视图控件

00:06:35.796 --> 00:06:37.664 align:middle
网页内容经过了灰色处理

00:06:39.733 --> 00:06:41.401 align:middle
你们可能最先注意到

00:06:41.602 --> 00:06:44.571 align:middle
Safari视图控件
很像Safari

00:06:44.872 --> 00:06:46.507 align:middle
却又刻意有一些不同

00:06:47.641 --> 00:06:49.510 align:middle
Safari视图控件的职责是

00:06:49.643 --> 00:06:52.079 align:middle
让用户能够更轻松更愉悦地

00:06:52.145 --> 00:06:54.414 align:middle
在你们的app中点击链接

00:06:55.249 --> 00:06:56.316 align:middle
浏览网页

00:06:56.717 --> 00:06:58.852 align:middle
以及点击“完成”
并返回你们的app

00:07:00.020 --> 00:07:02.589 align:middle
Safari视图控件
消除了让人分心的东西

00:07:03.123 --> 00:07:04.858 align:middle
你们在上方看到的

00:07:05.058 --> 00:07:06.260 align:middle
那个URL区域是只读的

00:07:06.326 --> 00:07:07.160 align:middle
你们不能更改它

00:07:07.461 --> 00:07:09.229 align:middle
而且只有这一页

00:07:09.496 --> 00:07:11.331 align:middle
没有其他选项卡
来分散用户的注意力

00:07:13.066 --> 00:07:14.334 align:middle
以Safari名义

00:07:14.701 --> 00:07:16.737 align:middle
Safari视图控件带来了

00:07:17.571 --> 00:07:19.907 align:middle
你们的用户
本已喜欢的Safari功能

00:07:20.474 --> 00:07:21.308 align:middle
但现在...

00:07:21.575 --> 00:07:22.676 align:middle
它们在你们的app中

00:07:23.143 --> 00:07:24.077 align:middle
让我们开始

00:07:25.045 --> 00:07:26.046 align:middle
首先最重要的是...

00:07:26.346 --> 00:07:28.549 align:middle
Safari视图控件
与Safari和其它

00:07:28.615 --> 00:07:30.050 align:middle
网站数据分享cookies

00:07:31.084 --> 00:07:34.521 align:middle
这意味着如果你们的某个用户

00:07:34.621 --> 00:07:36.557 align:middle
已经用Safari
登录到一个网站

00:07:36.890 --> 00:07:38.625 align:middle
若他们点击您的app中的
一个链接

00:07:38.692 --> 00:07:40.227 align:middle
这时Safari视图控件出现

00:07:40.327 --> 00:07:41.628 align:middle
他们可能仍然处于登录状态

00:07:42.729 --> 00:07:44.064 align:middle
但如果他们还没有登录

00:07:44.331 --> 00:07:45.532 align:middle
那种情况我们也想到了

00:07:46.767 --> 00:07:50.170 align:middle
因为Safari视图控件
允许你们使用密码自动填充

00:07:50.337 --> 00:07:53.207 align:middle
填充用户所有通过苹果
iCloud Keychain机制

00:07:53.273 --> 00:07:55.175 align:middle
在用户的所有设备上
同步的任何密码

00:07:56.577 --> 00:07:59.513 align:middle
但是在我们继续讲座前
很有必要指出

00:07:59.680 --> 00:08:02.316 align:middle
这对你们的用户是完全安全的

00:07:59.680 --> 00:08:02.316 align:middle
这对你们的用户是完全安全的

00:08:03.217 --> 00:08:04.751 align:middle
安全的原因是

00:08:05.185 --> 00:08:07.888 align:middle
我们为你们的用户
提供访问他们的

00:08:07.955 --> 00:08:11.024 align:middle
证书 用户名
密码的权限

00:08:11.091 --> 00:08:13.794 align:middle
但是没有给宿主app
访问这些数据的权限

00:08:14.928 --> 00:08:18.665 align:middle
实际上 Safari视图控件
与你们的应用程序

00:08:18.732 --> 00:08:19.700 align:middle
运行在不同的进程中

00:08:20.200 --> 00:08:23.136 align:middle
这使你们绝对免受责任的约束

00:08:23.203 --> 00:08:26.073 align:middle
不必考虑这种
重要而敏感的用户数据

00:08:26.773 --> 00:08:27.608 align:middle
责任是我们的

00:08:28.509 --> 00:08:30.077 align:middle
好了
让我们回到特性的话题

00:08:32.813 --> 00:08:34.515 align:middle
如果用户想让货品

00:08:34.581 --> 00:08:36.082 align:middle
发到他们的住所
或他们的工作地址

00:08:36.350 --> 00:08:38.619 align:middle
他们将可以使用接触卡自动填充

00:08:38.684 --> 00:08:41.255 align:middle
像使用Safari一样填写信息

00:08:43.222 --> 00:08:44.958 align:middle
在购物的时候

00:08:45.158 --> 00:08:47.060 align:middle
他们同样能够
填写他们的信用卡

00:08:50.397 --> 00:08:51.598 align:middle
如果你们的某位用户

00:08:51.665 --> 00:08:52.933 align:middle
遇到一篇...

00:08:53.667 --> 00:08:54.768 align:middle
有趣...

00:08:55.202 --> 00:08:56.170 align:middle
引人入胜...

00:08:56.370 --> 00:08:57.404 align:middle
但难以读懂的文章

00:08:58.138 --> 00:09:00.807 align:middle
她将可以使用
Safari读者按钮

00:08:58.138 --> 00:09:00.807 align:middle
她将可以使用
Safari读者按钮

00:09:01.141 --> 00:09:05.245 align:middle
以获得一个相关内容的
简化清晰版本

00:09:05.746 --> 00:09:06.580 align:middle
这太好了

00:09:07.714 --> 00:09:12.186 align:middle
当然Safari和
Safari视图控件中的iOS 9

00:09:12.920 --> 00:09:14.388 align:middle
共有的新特性是阅读器可定制

00:09:14.955 --> 00:09:17.357 align:middle
提供很多可供选择的主题和字体

00:09:17.858 --> 00:09:20.127 align:middle
网络阅读变得前所未有的容易

00:09:20.260 --> 00:09:23.130 align:middle
你们和客户可以
完全按照自己想要的方式阅读

00:09:27.167 --> 00:09:30.103 align:middle
从分享按钮那里
你们会找到自己期待的东西

00:09:31.338 --> 00:09:34.107 align:middle
你们会发现遍布于系统内的

00:09:34.308 --> 00:09:35.409 align:middle
向社交网络分享的选项

00:09:35.843 --> 00:09:38.278 align:middle
你们也将发现
可以添加到个人阅读清单

00:09:39.112 --> 00:09:40.647 align:middle
但是你们能发现的不止这些

00:09:41.415 --> 00:09:43.350 align:middle
因为除了这些功能外
你们的app

00:09:43.617 --> 00:09:46.753 align:middle
也专为Safari视图控件
提供一些功能

00:09:47.855 --> 00:09:50.190 align:middle
如果你们的app
是一个社交网络

00:09:50.357 --> 00:09:52.459 align:middle
你们可以在分享页设专用按钮

00:09:52.726 --> 00:09:55.429 align:middle
以便将当前网页分享到社交网络

00:09:55.996 --> 00:09:56.830 align:middle
真是太酷了

00:09:58.131 --> 00:09:59.967 align:middle
Safari视图控件在定制方面

00:10:00.968 --> 00:10:04.137 align:middle
会尊重你们的app设定的

00:10:04.404 --> 00:10:05.639 align:middle
自定义颜色

00:10:06.607 --> 00:10:08.308 align:middle
本例中幻灯片上的颜色

00:10:08.775 --> 00:10:12.412 align:middle
从Safari默认蓝色变为橙色

00:10:12.980 --> 00:10:14.915 align:middle
它是用户使用
Safari视图控件时

00:10:14.982 --> 00:10:16.917 align:middle
了解使用的
是何种app的给力方法

00:10:19.052 --> 00:10:22.823 align:middle
下一个特性很震撼
它是iOS 9的全新特性

00:10:24.157 --> 00:10:25.559 align:middle
内容屏蔽功能

00:10:27.060 --> 00:10:27.895 align:middle
请继续

00:10:31.965 --> 00:10:33.967 align:middle
内容屏蔽功能的大概思路是

00:10:34.334 --> 00:10:37.804 align:middle
这能够通过拿走一些内容

00:10:38.138 --> 00:10:39.473 align:middle
以改进浏览网页的体验

00:10:40.374 --> 00:10:44.344 align:middle
在iOS 9中
当用户浏览网页时

00:10:44.578 --> 00:10:47.447 align:middle
任何app都可以对
Safari和Safari视图控件

00:10:47.514 --> 00:10:49.183 align:middle
应该屏蔽的网页内容进行描述

00:10:49.816 --> 00:10:51.118 align:middle
让我们看一个示例

00:10:53.854 --> 00:10:54.821 align:middle
这儿有一个

00:10:55.222 --> 00:10:56.657 align:middle
有很酷内容的网页

00:10:57.090 --> 00:10:59.526 align:middle
但是我不喜欢侧边栏内的

00:10:59.593 --> 00:11:02.062 align:middle
所有那些诱惑点击的标题

00:10:59.593 --> 00:11:02.062 align:middle
所有那些诱惑点击的标题

00:11:02.529 --> 00:11:04.598 align:middle
如果你们设置了
合适的内容屏蔽条件

00:11:04.698 --> 00:11:06.333 align:middle
你们将不会相信
接下来发生的事情

00:11:07.968 --> 00:11:09.336 align:middle
你们会的

00:11:10.270 --> 00:11:11.572 align:middle
那些我不喜欢的内容消失了

00:11:16.577 --> 00:11:19.079 align:middle
但那还不是全部
内容屏蔽的功能不止这些

00:11:19.479 --> 00:11:21.381 align:middle
内容屏蔽功能可以做的事情

00:11:21.448 --> 00:11:22.883 align:middle
远不止隐藏网页上的元素

00:11:23.550 --> 00:11:25.719 align:middle
你们可以彻底阻止加载

00:11:26.320 --> 00:11:28.822 align:middle
阻止你们实际并不感兴趣的

00:11:28.889 --> 00:11:31.725 align:middle
来自于第三方域的...
所有影像或脚本

00:11:32.559 --> 00:11:36.496 align:middle
用户在设置中打开的
所有内容屏蔽条件

00:11:36.864 --> 00:11:38.465 align:middle
将同时适用于Safari

00:11:38.732 --> 00:11:40.000 align:middle
和Safari视图控件

00:11:41.168 --> 00:11:42.636 align:middle
这意味着你们

00:11:42.936 --> 00:11:46.039 align:middle
从使用小型网络浏览器切换到使用

00:11:46.306 --> 00:11:47.975 align:middle
Safari视图控件后

00:11:48.442 --> 00:11:51.478 align:middle
你们将不会收到任何关于用户的
广告屏蔽器不起作用的投诉

00:11:52.112 --> 00:11:52.946 align:middle
这太酷了

00:11:54.615 --> 00:11:55.782 align:middle
那真是很多有用的功能

00:11:56.550 --> 00:11:57.851 align:middle
接下来我们讲讲安全

00:11:59.586 --> 00:12:01.922 align:middle
我刚才提到Safari视图控件

00:11:59.586 --> 00:12:01.922 align:middle
我刚才提到Safari视图控件

00:12:01.989 --> 00:12:03.957 align:middle
与你们的app运行在
不同的进程中

00:12:04.324 --> 00:12:06.293 align:middle
这为你们免去了很多责任束缚

00:12:06.360 --> 00:12:08.161 align:middle
不必为重要的用户数据承担责任

00:12:09.396 --> 00:12:11.265 align:middle
但是在浏览网络内容时

00:12:11.932 --> 00:12:14.468 align:middle
有一个能够给用户提供安全的

00:12:14.535 --> 00:12:16.303 align:middle
表达接口同样重要

00:12:17.004 --> 00:12:19.573 align:middle
Safari视图控件能在这方面

00:12:19.640 --> 00:12:21.008 align:middle
做与Safari同样的工作

00:12:22.843 --> 00:12:23.844 align:middle
最重要的...

00:12:24.278 --> 00:12:25.245 align:middle
是安全网页

00:12:25.846 --> 00:12:29.049 align:middle
Safari视图控件
像Safari一样

00:12:29.349 --> 00:12:31.385 align:middle
把SSL的有效性告知用户

00:12:32.486 --> 00:12:34.421 align:middle
假如用户遇到糟糕的一天

00:12:34.488 --> 00:12:35.989 align:middle
他们碰到一个网络仿冒网页

00:12:36.723 --> 00:12:39.193 align:middle
Safari视图控件会

00:12:39.293 --> 00:12:40.627 align:middle
跟Safari一样警告他们

00:12:41.028 --> 00:12:45.799 align:middle
让他们回头

00:12:45.866 --> 00:12:46.867 align:middle
总的来说

00:12:47.100 --> 00:12:51.438 align:middle
Safari视图控件
具有Safari的所有给力特性

00:12:51.638 --> 00:12:53.540 align:middle
它具有你们用户已经喜欢的特性

00:12:54.308 --> 00:12:56.376 align:middle
像密码填充

00:12:56.577 --> 00:12:58.011 align:middle
具有cookies共享功能

00:12:58.178 --> 00:13:00.080 align:middle
用Safari Reader
轻松阅读文章

00:12:58.178 --> 00:13:00.080 align:middle
用Safari Reader
轻松阅读文章

00:13:00.380 --> 00:13:01.648 align:middle
以及iOS 9中的

00:13:01.815 --> 00:13:02.783 align:middle
内容屏蔽功能

00:13:04.284 --> 00:13:06.386 align:middle
它还具有一些小功能

00:13:06.954 --> 00:13:10.057 align:middle
像当进程正在加载一个好看的
进度条时

00:13:10.123 --> 00:13:11.592 align:middle
正确告知进度的功能

00:13:12.626 --> 00:13:14.428 align:middle
以及加载时如果出现错误

00:13:14.494 --> 00:13:16.330 align:middle
显示错误页面信息的功能

00:13:17.264 --> 00:13:20.801 align:middle
你们的小型网络浏览器
能或不能做到所有这些

00:13:21.268 --> 00:13:23.070 align:middle
但使用Safari视图控件
便不需要了

00:13:23.170 --> 00:13:24.037 align:middle
由于增加了...

00:13:24.738 --> 00:13:27.941 align:middle
经多年验证多年的Safari特性

00:13:28.008 --> 00:13:29.309 align:middle
能够做这些

00:13:29.710 --> 00:13:30.677 align:middle
并优化你们的app

00:13:30.744 --> 00:13:32.212 align:middle
为你们的app做很多年的优化

00:13:34.214 --> 00:13:37.684 align:middle
我很高兴的说使用
Safari视图控件确实很容易

00:13:38.919 --> 00:13:40.687 align:middle
让我们看看API

00:13:43.423 --> 00:13:46.126 align:middle
在代码方面
Safari视图控件

00:13:46.193 --> 00:13:48.795 align:middle
被称为
SFSafariViewController

00:13:48.862 --> 00:13:50.664 align:middle
它是Safari服务框架的一部分

00:13:51.598 --> 00:13:52.699 align:middle
你们可能猜到它是

00:13:52.833 --> 00:13:55.235 align:middle
UIViewController
控制器的一个子集

00:13:56.803 --> 00:13:59.373 align:middle
我马上会讲到它有一个
Delegate变量

00:13:59.840 --> 00:14:02.643 align:middle
以及一个初始值(initializer)
它需要一个URL

00:13:59.840 --> 00:14:02.643 align:middle
以及一个初始值(initializer)
它需要一个URL

00:14:02.809 --> 00:14:05.312 align:middle
这是你们的用户点击的网页URL

00:14:05.812 --> 00:14:07.014 align:middle
你们想展示的网页

00:14:08.081 --> 00:14:09.950 align:middle
让我们快速地看一下
delegate

00:14:12.486 --> 00:14:14.454 align:middle
在delegate方面的
第一个方法是

00:14:14.521 --> 00:14:17.157 align:middle
当用户点击分享按钮时
如何把你们自己的自定义活动

00:14:17.491 --> 00:14:18.926 align:middle
提供给分享页

00:14:20.961 --> 00:14:22.229 align:middle
delegate方法二是

00:14:22.462 --> 00:14:25.499 align:middle
在当用户完成浏览
点击做“完成”按钮时被调用的

00:14:26.333 --> 00:14:27.601 align:middle
当为了搁置视图控件时

00:14:27.668 --> 00:14:28.969 align:middle
你们会想执行这个方法

00:14:32.639 --> 00:14:33.841 align:middle
总的来说

00:14:34.174 --> 00:14:35.776 align:middle
这是一个非常简单的API

00:14:36.577 --> 00:14:39.780 align:middle
为展示这个简单的API有多强大

00:14:40.214 --> 00:14:42.716 align:middle
以及它将为你们的app
省去多少行代码

00:14:43.283 --> 00:14:45.485 align:middle
接下来我高兴地请上
我的同事Yongjun

00:14:45.552 --> 00:14:46.987 align:middle
到台上为大家做演示

00:14:47.221 --> 00:14:48.188 align:middle
你好Yongjun

00:14:56.129 --> 00:14:56.964 align:middle
谢谢你瑞奇

00:14:58.398 --> 00:15:00.200 align:middle
大家好
我是Yongjun

00:14:58.398 --> 00:15:00.200 align:middle
大家好
我是Yongjun

00:15:00.367 --> 00:15:02.269 align:middle
我是Safari
和WebKit工程师

00:15:03.837 --> 00:15:04.905 align:middle
欢迎来到这个环节

00:15:05.572 --> 00:15:08.375 align:middle
我不了解你们但今天
我非常想吃些披萨

00:15:09.476 --> 00:15:13.080 align:middle
我在写一个寻找
我附近披萨店的app

00:15:14.281 --> 00:15:15.115 align:middle
这就是它

00:15:15.983 --> 00:15:17.117 align:middle
我称它为“披萨发现者”

00:15:17.584 --> 00:15:19.052 align:middle
我有一个披萨店列表

00:15:20.020 --> 00:15:23.657 align:middle
选择第一个店铺
我得到电话号码

00:15:24.091 --> 00:15:26.727 align:middle
地址和店铺网站的链接

00:15:28.095 --> 00:15:31.265 align:middle
我的任务是使我的app
显示这个网站

00:15:31.598 --> 00:15:33.367 align:middle
使我可以了解店铺的更多信息

00:15:35.369 --> 00:15:38.472 align:middle
像瑞奇提到的
我们有三个选择

00:15:39.072 --> 00:15:40.040 align:middle
第一个选择

00:15:40.240 --> 00:15:44.011 align:middle
用openURL
让Safari为我们打开网站

00:15:45.412 --> 00:15:46.280 align:middle
选择二

00:15:46.547 --> 00:15:47.814 align:middle
是你们建立一个网络视图

00:15:48.482 --> 00:15:50.817 align:middle
建立我们自己的浏览app

00:15:51.051 --> 00:15:52.119 align:middle
选择三

00:15:52.286 --> 00:15:53.687 align:middle
使用Safari视图控件

00:15:54.488 --> 00:15:56.256 align:middle
我先为大家演示选择一

00:15:57.291 --> 00:15:59.026 align:middle
我转到我的Xcode项目

00:16:00.060 --> 00:16:02.896 align:middle
在我的店铺视图控件里
我有个函数

00:16:03.163 --> 00:16:06.500 align:middle
是showStoreWebsite
（展示店铺网站）

00:16:08.936 --> 00:16:13.140 align:middle
我只需要拽一行代码
UIApplication openURL

00:16:13.574 --> 00:16:15.909 align:middle
这会使Safari打开这个URL

00:16:16.810 --> 00:16:17.678 align:middle
让我们测试一下它

00:16:19.813 --> 00:16:20.647 align:middle
运行此app

00:16:22.649 --> 00:16:25.452 align:middle
选中第一家店铺
点击鼠标左键

00:16:26.320 --> 00:16:28.822 align:middle
现在Safari为我打开了
这个网站

00:16:29.489 --> 00:16:31.892 align:middle
可以看到网页上有一个阅读器

00:16:33.293 --> 00:16:35.596 align:middle
如果我试图订披萨

00:16:37.698 --> 00:16:41.101 align:middle
我的用户名密码会自动填入

00:16:41.902 --> 00:16:43.604 align:middle
我以前应该来过这个网站

00:16:43.670 --> 00:16:44.972 align:middle
可能我订过披萨

00:16:47.641 --> 00:16:49.042 align:middle
现在我使用Safari

00:16:49.943 --> 00:16:52.980 align:middle
我希望用户始终黏在我的app上

00:16:53.046 --> 00:16:55.215 align:middle
不希望他们切换到Safari

00:16:55.282 --> 00:16:57.684 align:middle
只为了访问一两个网站

00:16:58.252 --> 00:16:59.887 align:middle
这会使他们分心

00:17:00.454 --> 00:17:02.256 align:middle
而且或许以后也不会
回到我的app了

00:17:03.290 --> 00:17:05.559 align:middle
因此我确实需要
在我的app中有个浏览器

00:17:07.060 --> 00:17:08.328 align:middle
我将尝试选择二

00:17:08.762 --> 00:17:10.364 align:middle
制作自己的浏览器

00:17:11.632 --> 00:17:14.734 align:middle
首先我想回到我的app

00:17:16.970 --> 00:17:20.874 align:middle
众所周知 如果我们在这个
app有一些网页内容

00:17:20.941 --> 00:17:24.944 align:middle
如果网页内容
碰巧是我的UI

00:17:25.378 --> 00:17:26.480 align:middle
或UI的一部分

00:17:27.548 --> 00:17:29.516 align:middle
WKWebView是最胜任的工具

00:17:30.851 --> 00:17:34.288 align:middle
当然 在本例中
我想使用WKWebView加载网页

00:17:34.354 --> 00:17:35.923 align:middle
加载网页

00:17:36.390 --> 00:17:38.725 align:middle
但是我同样想
在这方面使用一些UI

00:17:38.892 --> 00:17:40.961 align:middle
譬如 为展示这个URL

00:17:41.028 --> 00:17:43.330 align:middle
我想在顶端有一个URL栏条

00:17:43.931 --> 00:17:45.532 align:middle
为做后退前进导航

00:17:46.200 --> 00:17:49.203 align:middle
我也想在底部有一个工具条

00:17:50.504 --> 00:17:52.573 align:middle
WKWebView是个
非常丰富的API

00:17:52.639 --> 00:17:54.775 align:middle
它提供多种delegate功能
我可以用它们

00:17:54.842 --> 00:17:57.744 align:middle
侦听页面加载事件或导航事件

00:17:58.278 --> 00:18:00.848 align:middle
我可以使用这个delegate
驱动我的UI

00:17:58.278 --> 00:18:00.848 align:middle
我可以使用这个delegate
驱动我的UI

00:18:01.815 --> 00:18:04.384 align:middle
为给这次演示节约时间

00:18:04.451 --> 00:18:06.119 align:middle
我已经有一个单一浏览器

00:18:06.687 --> 00:18:07.654 align:middle
让我们看一看下它

00:18:08.555 --> 00:18:11.158 align:middle
在Xcode项目中
我切换到另一个标签

00:18:12.459 --> 00:18:17.030 align:middle
把单一浏览器封装成视图控件

00:18:17.831 --> 00:18:20.334 align:middle
在中间我有WKWebView

00:18:21.101 --> 00:18:24.104 align:middle
在顶端我有一个导航栏

00:18:24.171 --> 00:18:26.807 align:middle
我用导航栏的标题显示此URL

00:18:27.641 --> 00:18:30.110 align:middle
在底部我有一个来回按钮

00:18:30.377 --> 00:18:32.145 align:middle
用来做后退和前进导航

00:18:33.247 --> 00:18:34.882 align:middle
这是一个简单类

00:18:34.948 --> 00:18:36.783 align:middle
它大约有80行代码

00:18:37.317 --> 00:18:38.719 align:middle
这花费我大约一小时

00:18:39.453 --> 00:18:40.621 align:middle
我相信我们可以做得更好

00:18:41.221 --> 00:18:43.457 align:middle
但是不管怎样
让我们测试一下这个浏览器

00:18:44.291 --> 00:18:46.093 align:middle
我回到我的...

00:18:46.527 --> 00:18:47.895 align:middle
店铺视图控件

00:18:48.262 --> 00:18:50.063 align:middle
删除刚添加的行

00:18:50.797 --> 00:18:52.633 align:middle
并把一些行拖拽到这里

00:18:53.901 --> 00:18:59.306 align:middle
我将要做的是从storyboard
加载我的视图控件

00:18:59.706 --> 00:19:02.042 align:middle
给它分配一个URL
并让它显示

00:18:59.706 --> 00:19:02.042 align:middle
给它分配一个URL
并让它显示

00:19:02.943 --> 00:19:03.810 align:middle
现在让我们看一下

00:19:07.181 --> 00:19:08.215 align:middle
我运行我的app

00:19:08.615 --> 00:19:09.816 align:middle
选中第一个店铺

00:19:10.150 --> 00:19:11.051 align:middle
并点击链接

00:19:12.553 --> 00:19:13.720 align:middle
这是我的浏览器

00:19:14.121 --> 00:19:15.556 align:middle
它在我的app运行

00:19:17.057 --> 00:19:20.727 align:middle
为了访问此网站
我不必切换到Safari了

00:19:20.794 --> 00:19:21.628 align:middle
这很好

00:19:22.262 --> 00:19:23.997 align:middle
URL栏实际上变成了灰色

00:19:24.064 --> 00:19:25.666 align:middle
因此它不会变得使人分心

00:19:26.867 --> 00:19:29.069 align:middle
但是也请注意
当我拖拽页面时

00:19:29.269 --> 00:19:31.672 align:middle
没有使用Safari UI的动力

00:19:32.806 --> 00:19:34.374 align:middle
并且这个页面没有阅读器

00:19:34.441 --> 00:19:36.276 align:middle
这会因此现在对我来说
阅读比较困难

00:19:37.211 --> 00:19:38.812 align:middle
如果我尝试订购披萨

00:19:40.047 --> 00:19:42.349 align:middle
我的用户名和密码不会自动填充

00:19:42.783 --> 00:19:45.052 align:middle
尤其当我饥饿 不耐烦
没有密码时

00:19:45.319 --> 00:19:48.021 align:middle
订购披萨对我来说更困难

00:19:49.523 --> 00:19:50.557 align:middle
那么...

00:19:50.824 --> 00:19:52.092 align:middle
我真正需要的

00:19:52.659 --> 00:19:55.095 align:middle
是某种简单的

00:19:55.696 --> 00:19:56.964 align:middle
能从我的...

00:19:57.397 --> 00:19:59.566 align:middle
app展示网站的方法

00:19:59.833 --> 00:20:01.001 align:middle
我不想花费时间

00:19:59.833 --> 00:20:01.001 align:middle
我不想花费时间

00:20:01.068 --> 00:20:03.871 align:middle
执行缺失的特性
如进度条功能

00:20:04.371 --> 00:20:06.874 align:middle
即使我想在这方面花时间

00:20:06.940 --> 00:20:08.242 align:middle
但有些特性我永远都不会触及

00:20:08.308 --> 00:20:09.142 align:middle
例如

00:20:10.978 --> 00:20:12.012 align:middle
密码自动填充功能

00:20:12.913 --> 00:20:15.582 align:middle
我将永远地不会得到
这个网站用户的密码

00:20:16.783 --> 00:20:19.786 align:middle
幸运的是 在iOS 9中我们有
一个Safari视图控件

00:20:20.153 --> 00:20:21.221 align:middle
让我们看一下

00:20:23.524 --> 00:20:25.692 align:middle
为使用Safari视图控件

00:20:26.226 --> 00:20:29.496 align:middle
首先我需要导入
Safari服务框架

00:20:30.631 --> 00:20:32.866 align:middle
然后我需要使我的视图控件遵从

00:20:33.166 --> 00:20:35.569 align:middle
SFSafariViewController

00:20:35.636 --> 00:20:36.703 align:middle
Delegate协议

00:20:38.238 --> 00:20:41.642 align:middle
在代码里面 我们回到
showStoreWebsite

00:20:42.442 --> 00:20:45.212 align:middle
我不再需要我的浏览程序
因此我删除它

00:20:46.313 --> 00:20:47.147 align:middle
向这...

00:20:47.581 --> 00:20:48.982 align:middle
拖拽几行代码

00:20:49.650 --> 00:20:51.785 align:middle
现在我将要做的是我把我的...

00:20:52.486 --> 00:20:55.222 align:middle
SafariViewControler
对象实例化

00:20:56.390 --> 00:20:58.192 align:middle
对其委托 显示它

00:20:59.927 --> 00:21:02.963 align:middle
在测试它以前 我还需要执行

00:20:59.927 --> 00:21:02.963 align:middle
在测试它以前 我还需要执行

00:21:03.697 --> 00:21:06.867 align:middle
safariViewControllerDidFinish

00:21:07.301 --> 00:21:09.336 align:middle
这样 当用户
点击“完成”(Done)按钮时

00:21:09.403 --> 00:21:11.038 align:middle
我们可以不再使用视图控件

00:21:12.139 --> 00:21:13.173 align:middle
因为这时我们

00:21:13.740 --> 00:21:16.243 align:middle
不再需要我们的浏览程序了

00:21:16.310 --> 00:21:18.278 align:middle
我们可以把它整个删除到垃圾箱

00:21:19.146 --> 00:21:19.980 align:middle
是的

00:21:20.347 --> 00:21:23.717 align:middle
那么代码少了80行
节约了一小时

00:21:24.484 --> 00:21:25.419 align:middle
让我们再次运行

00:21:29.056 --> 00:21:30.190 align:middle
选择第一个店铺

00:21:31.525 --> 00:21:33.460 align:middle
看
我的app中有Safari了

00:21:34.928 --> 00:21:37.464 align:middle
那么 我找回了阅读器

00:21:38.999 --> 00:21:40.767 align:middle
与Safari相同的动态感

00:21:41.435 --> 00:21:43.370 align:middle
而如果我现在尝试订披萨

00:21:45.138 --> 00:21:47.274 align:middle
我找回了自己的用户名和密码

00:21:48.408 --> 00:21:50.244 align:middle
如您所见 通过使用几行代码

00:21:50.878 --> 00:21:52.679 align:middle
我在自己的app中有了Safari

00:21:53.380 --> 00:21:54.882 align:middle
你们也可以在你们的app做这些

00:21:55.048 --> 00:21:56.617 align:middle
用户对此将会非常兴奋

00:21:56.850 --> 00:21:57.684 align:middle
谢谢你们

00:22:03.423 --> 00:22:04.258 align:middle
交给你 瑞奇

00:22:09.730 --> 00:22:10.731 align:middle
谢谢你 Yongjun

00:22:10.797 --> 00:22:11.632 align:middle
你的演示太棒了

00:22:13.433 --> 00:22:15.068 align:middle
Yongjun刚才向你们展示了

00:22:15.135 --> 00:22:19.573 align:middle
虽然用WKWebView编写
app内的网络浏览器中很简单

00:22:20.207 --> 00:22:22.342 align:middle
但是让所有细节都正确
是有些困难的

00:22:23.510 --> 00:22:26.580 align:middle
他也向你们展示了
通过改变七行代码

00:22:27.014 --> 00:22:28.749 align:middle
他能使用Safari视图控件

00:22:29.316 --> 00:22:30.517 align:middle
让app全然改观

00:22:31.685 --> 00:22:34.087 align:middle
你们看到Safari视图控件具有

00:22:34.154 --> 00:22:36.523 align:middle
譬如密码自动填充功能 阅读器

00:22:36.957 --> 00:22:39.993 align:middle
功能以及你们在使用网页
向下滚动时的动态感

00:22:44.231 --> 00:22:45.799 align:middle
刚才在讲座开始时

00:22:46.233 --> 00:22:49.102 align:middle
我将网页内容归为两类

00:22:49.903 --> 00:22:52.072 align:middle
一类是您的app中自定义的内容

00:22:52.406 --> 00:22:54.508 align:middle
你们将用WKWebView
处理此类内容

00:22:55.209 --> 00:22:58.612 align:middle
一类是当用户在你们的app中
点击链接的时的实际网站

00:22:59.012 --> 00:23:01.915 align:middle
你们会将用Safari或
Safari视图控件处理此类内容

00:22:59.012 --> 00:23:01.915 align:middle
你们会将用Safari或
Safari视图控件处理此类内容

00:23:02.950 --> 00:23:04.651 align:middle
但是对于你们观众中的某些人

00:23:04.918 --> 00:23:07.054 align:middle
网页内容使用还有
第三种使用情况

00:23:07.120 --> 00:23:08.655 align:middle
我简短谈一谈

00:23:10.958 --> 00:23:13.060 align:middle
这就是使用网页内容

00:23:13.327 --> 00:23:14.595 align:middle
做以网页为基础的验证

00:23:15.495 --> 00:23:17.231 align:middle
你们很可能以前都见到过这个

00:23:17.698 --> 00:23:18.899 align:middle
譬如
你们使用一个app

00:23:18.966 --> 00:23:22.703 align:middle
它需要使用一些第三方网站的账户

00:23:23.337 --> 00:23:25.973 align:middle
这个app出现一个网页视图

00:23:26.039 --> 00:23:27.708 align:middle
你们输入你们的用户名和密码

00:23:28.275 --> 00:23:29.109 align:middle
登录

00:23:29.810 --> 00:23:31.578 align:middle
然后你们选择接受或拒绝

00:23:31.645 --> 00:23:35.115 align:middle
App为第三方服务获取资源的请求

00:23:35.983 --> 00:23:37.384 align:middle
你们很可能以前都做过这些个

00:23:37.851 --> 00:23:40.621 align:middle
但是这方面有个流程叫做
OAuth

00:23:40.921 --> 00:23:44.358 align:middle
我会将大体讲讲具体
它是怎样工作的

00:23:47.394 --> 00:23:48.795 align:middle
在这个流程中...

00:23:49.696 --> 00:23:51.265 align:middle
有三个参与者

00:23:53.200 --> 00:23:54.868 align:middle
第一个参与者是一个app

00:23:55.369 --> 00:23:56.570 align:middle
我们假设它是你们的app

00:23:57.905 --> 00:23:59.373 align:middle
第二个参与者是一个用户

00:23:59.907 --> 00:24:01.308 align:middle
我们假设这是你们的一个用户

00:23:59.907 --> 00:24:01.308 align:middle
我们假设这是你们的一个用户

00:24:02.543 --> 00:24:05.112 align:middle
当然还有一个参与者
是你们的app

00:24:05.279 --> 00:24:07.247 align:middle
将验证的第三方网络服务

00:24:08.649 --> 00:24:12.019 align:middle
在用户使用这个app时
这个流程中会发生什么呢？

00:24:12.853 --> 00:24:15.589 align:middle
他们大概会点击
某处的登录按钮

00:24:16.223 --> 00:24:17.991 align:middle
这个app将集中把用户信息打包

00:24:18.058 --> 00:24:18.959 align:middle
并用标记表明

00:24:19.092 --> 00:24:21.628 align:middle
它希望向网站请求什么内容

00:24:23.597 --> 00:24:24.431 align:middle
然后

00:24:24.498 --> 00:24:26.500 align:middle
app会以某种方式显示

00:24:26.567 --> 00:24:28.836 align:middle
一个可供登录的网页

00:24:29.937 --> 00:24:31.572 align:middle
用户需要输入他们的登录凭证

00:24:32.606 --> 00:24:34.908 align:middle
然后登录
接受或拒绝网页的请求

00:24:35.542 --> 00:24:37.177 align:middle
然后用户回到app

00:24:38.178 --> 00:24:40.981 align:middle
这样网站会记住这个标记

00:24:41.281 --> 00:24:44.017 align:middle
并了解它是否被同意使用

00:24:44.885 --> 00:24:47.721 align:middle
将来 当这个app想
连接到这个第三方服务时

00:24:48.455 --> 00:24:49.923 align:middle
它会使用这个标记

00:24:53.026 --> 00:24:55.262 align:middle
这个方案的主要目标

00:24:55.429 --> 00:24:57.464 align:middle
是保护用户的凭证

00:24:57.998 --> 00:24:59.700 align:middle
这样app不用记住它们

00:25:00.234 --> 00:25:01.668 align:middle
App只得到一个标记

00:25:02.669 --> 00:25:06.039 align:middle
这种标记可以在以后用于请求

00:25:06.540 --> 00:25:08.742 align:middle
资源或者用户可以在不更改

00:25:08.809 --> 00:25:10.310 align:middle
他们的密码时撤销这个标记

00:25:10.811 --> 00:25:11.912 align:middle
这对用户来说很给力

00:25:12.980 --> 00:25:14.748 align:middle
如果你们今天正实施此方案
你们大概

00:25:14.982 --> 00:25:18.385 align:middle
使用的是UIWebView
或WKWebView

00:25:19.520 --> 00:25:20.587 align:middle
我很高兴的告诉你们

00:25:20.988 --> 00:25:24.458 align:middle
Safari
视图控件在这方面很给力

00:25:24.525 --> 00:25:26.460 align:middle
它在以网络为基础的验证方面
很棒

00:25:28.629 --> 00:25:31.365 align:middle
它在基于网络的验证方面
很棒的一个原因是

00:25:31.632 --> 00:25:32.799 align:middle
它非常安全

00:25:33.467 --> 00:25:35.669 align:middle
它同Safari自身一样安全

00:25:36.603 --> 00:25:38.172 align:middle
因为它在进程之外运行

00:25:38.572 --> 00:25:41.141 align:middle
苹果公司永远
不会在用户登录时

00:25:41.341 --> 00:25:43.043 align:middle
看到用户的用户名和密码

00:25:43.977 --> 00:25:46.079 align:middle
在保护用户数据方面

00:25:46.647 --> 00:25:48.749 align:middle
一个最好的方法就是

00:25:48.815 --> 00:25:51.018 align:middle
首先就不去访问它

00:25:51.785 --> 00:25:53.687 align:middle
这是我们苹果公司的做法
不管何时 只要可能

00:25:55.022 --> 00:25:57.057 align:middle
这同样是用户欢迎的方法

00:25:58.025 --> 00:25:59.993 align:middle
因为Safari视图控件
访问用户凭证

00:26:00.060 --> 00:26:05.465 align:middle
通过iCloud Keychain
机制在他们的所有设备上同步

00:26:06.066 --> 00:26:07.534 align:middle
登录将变得轻而易举

00:26:08.402 --> 00:26:10.070 align:middle
他们可能不必使用自动填充功能

00:26:10.304 --> 00:26:12.940 align:middle
他们就可能已经
登录了第三方服务

00:26:15.909 --> 00:26:16.743 align:middle
简单的说

00:26:17.144 --> 00:26:21.114 align:middle
用户很想验证第三方网络服务

00:26:21.348 --> 00:26:23.083 align:middle
如果你们将使用
Safari视图控件

00:26:23.317 --> 00:26:24.985 align:middle
而不是你们自己写的东西

00:26:26.220 --> 00:26:28.822 align:middle
我高兴的告诉你们
采用它是极其容易

00:26:29.356 --> 00:26:30.457 align:middle
这需要两步

00:26:33.227 --> 00:26:34.061 align:middle
第一

00:26:34.394 --> 00:26:37.197 align:middle
是你们已经使用...
你们自己的App内置浏览器

00:26:37.598 --> 00:26:41.034 align:middle
只需要提供一个
SFSafariViewController实例

00:26:41.768 --> 00:26:43.504 align:middle
一旦用户完成登录

00:26:44.071 --> 00:26:48.242 align:middle
第三方网络服务
以您提供给它的自定义URL方案

00:26:48.375 --> 00:26:50.377 align:middle
有重定向回到你们的app

00:26:51.111 --> 00:26:53.313 align:middle
你们可以
用你们的AppDelegate的

00:26:53.380 --> 00:26:55.315 align:middle
handleOpenURL方法中
接受它

00:26:55.549 --> 00:26:57.518 align:middle
这时你们可以检查应答 停用

00:26:58.151 --> 00:27:01.021 align:middle
SFSafariViewController实例

00:26:58.151 --> 00:27:01.021 align:middle
SFSafariViewController实例

00:27:01.421 --> 00:27:03.223 align:middle
因为您知道验证已经完成

00:27:04.324 --> 00:27:05.158 align:middle
好了

00:27:05.559 --> 00:27:06.393 align:middle
两步完成

00:27:06.927 --> 00:27:08.962 align:middle
你们已经用一个能够自动

00:27:09.162 --> 00:27:11.265 align:middle
填写用户名和密码的程序

00:27:11.331 --> 00:27:13.333 align:middle
替代了你们的app内置浏览器

00:27:14.001 --> 00:27:15.769 align:middle
用户将会很满意
你们也会有更多

00:27:15.836 --> 00:27:18.839 align:middle
用户登录这个第三方网络服务

00:27:20.374 --> 00:27:21.208 align:middle
好

00:27:22.910 --> 00:27:24.511 align:middle
我们总结今天讲座内容

00:27:26.947 --> 00:27:28.815 align:middle
网页内容无处不在

00:27:29.216 --> 00:27:31.652 align:middle
以各种形式和大小存在

00:27:33.086 --> 00:27:34.788 align:middle
如果您在自己的app中

00:27:35.289 --> 00:27:36.290 align:middle
以自定义方式使用它

00:27:36.356 --> 00:27:38.926 align:middle
如果你们有经验能够进行定制

00:27:40.194 --> 00:27:42.796 align:middle
WKWebView就是胜任的工具

00:27:44.097 --> 00:27:46.533 align:middle
你们或许仍在用较旧的
UIWebView

00:27:47.201 --> 00:27:49.002 align:middle
但是WKWebView更现代

00:27:49.403 --> 00:27:51.638 align:middle
并包含Safari自身使用的
这种新式

00:27:51.839 --> 00:27:53.340 align:middle
JavaScript引擎

00:27:53.740 --> 00:27:54.942 align:middle
它的速度更快

00:27:55.509 --> 00:27:57.077 align:middle
在iOS 9

00:27:57.611 --> 00:27:59.246 align:middle
和OS X El Capitan中

00:27:59.813 --> 00:28:01.548 align:middle
现在也有
更多适合你们的灵活的选择

00:27:59.813 --> 00:28:01.548 align:middle
现在也有
更多适合你们的灵活的选择

00:28:03.517 --> 00:28:06.053 align:middle
若你们想了解多关于
采用WKWebView的更多内容

00:28:06.119 --> 00:28:07.387 align:middle
你们可以观看去年的讲座

00:28:08.355 --> 00:28:10.123 align:middle
《新式WebKit API简介》

00:28:12.159 --> 00:28:13.894 align:middle
如果你们网页内容...

00:28:14.161 --> 00:28:14.995 align:middle
任务不同

00:28:15.863 --> 00:28:20.167 align:middle
如果你们的任务是
当用户点击链接时展示网站

00:28:21.134 --> 00:28:23.604 align:middle
你们的使用情况和需求会完全不同

00:28:24.872 --> 00:28:27.975 align:middle
过去 你们或许已经用
UIWebView或WKWebView

00:28:28.041 --> 00:28:29.910 align:middle
建立自己app内置

00:28:30.444 --> 00:28:32.412 align:middle
网络浏览器 但是那种方法
一直有不利之处

00:28:32.846 --> 00:28:34.548 align:middle
它不曾有Safari所具有的

00:28:34.715 --> 00:28:36.250 align:middle
任何特性或状态

00:28:36.984 --> 00:28:39.453 align:middle
而且更可能的是
在并非出于您的自身错误情况下

00:28:39.920 --> 00:28:41.889 align:middle
你们的app的执行与用户

00:28:41.955 --> 00:28:44.258 align:middle
安装的其它app的执行不同

00:28:44.892 --> 00:28:47.094 align:middle
这有时会导致出现困惑的体验

00:28:48.962 --> 00:28:49.897 align:middle
你们的第一选择

00:28:49.963 --> 00:28:50.964 align:middle
出于情景的考虑

00:28:51.798 --> 00:28:54.701 align:middle
是将展示网页内容的责任委托给

00:28:54.768 --> 00:28:56.069 align:middle
Safari自身完成

00:28:56.670 --> 00:28:58.305 align:middle
系统广大的能力能够

00:28:58.438 --> 00:28:59.439 align:middle
回到上一个app

00:28:59.506 --> 00:29:01.608 align:middle
使这比以前更好

00:28:59.506 --> 00:29:01.608 align:middle
使这比以前更好

00:29:03.110 --> 00:29:05.946 align:middle
如果你们想使你们
现在用户保持体验

00:29:06.380 --> 00:29:08.081 align:middle
使用户不离开你们的app

00:29:08.916 --> 00:29:12.819 align:middle
Safari视图控件会
增添大量特性

00:29:13.287 --> 00:29:15.189 align:middle
并且做长期优化

00:29:16.190 --> 00:29:19.159 align:middle
这样
你们会有更多时间用于

00:29:19.226 --> 00:29:21.595 align:middle
对你们的app特别重要的部分

00:29:21.929 --> 00:29:23.530 align:middle
你们很想把它们做好

00:29:24.097 --> 00:29:26.900 align:middle
对于你们的用户
这意味着有

00:29:27.301 --> 00:29:28.602 align:middle
Safari自动填写功能

00:29:29.002 --> 00:29:30.304 align:middle
9Safari阅读器功能

00:29:30.404 --> 00:29:31.405 align:middle
和内容屏蔽功能

00:29:34.575 --> 00:29:36.009 align:middle
趁你们还很专心听时

00:29:36.410 --> 00:29:38.078 align:middle
我有一个小要求

00:29:39.513 --> 00:29:41.715 align:middle
你们在开放平台上

00:29:41.782 --> 00:29:43.016 align:middle
如果遇到实际情况

00:29:43.350 --> 00:29:45.285 align:middle
与你们设想情况

00:29:46.153 --> 00:29:47.721 align:middle
有很大不同

00:29:48.088 --> 00:29:49.756 align:middle
请向我们发送bug和特性要求

00:29:50.724 --> 00:29:53.560 align:middle
Safari视图控件存在的
一个理由

00:29:53.861 --> 00:29:56.330 align:middle
是你们很多人说你们需要它

00:29:57.464 --> 00:29:58.665 align:middle
现在已经有了

00:29:58.866 --> 00:30:00.267 align:middle
既然你们将在未来几个月使用它

00:29:58.866 --> 00:30:00.267 align:middle
既然你们将在未来几个月使用它

00:30:00.334 --> 00:30:01.168 align:middle
就请告诉我们

00:30:01.401 --> 00:30:03.971 align:middle
我们怎样做能使它对你们更有用

00:30:04.705 --> 00:30:06.573 align:middle
我们非常欢迎你们的反馈

00:30:10.344 --> 00:30:12.479 align:middle
你们能够在常用地点获得
任何关于我们

00:30:12.846 --> 00:30:13.914 align:middle
今天涉及到的信息

00:30:14.448 --> 00:30:16.083 align:middle
或者你们可以点击
约翰·戴维斯和

00:30:16.149 --> 00:30:18.352 align:middle
Safari
WebKit Evangelist

00:30:20.521 --> 00:30:22.956 align:middle
我们有一些相关讲座
你们会对它们感兴趣

00:30:24.091 --> 00:30:25.459 align:middle
举两个例子

00:30:25.993 --> 00:30:27.828 align:middle
在《无缝连接到你们的App》

00:30:28.128 --> 00:30:29.863 align:middle
你们能学习Apple

00:30:29.930 --> 00:30:31.665 align:middle
解决app内部连接的方法

00:30:32.299 --> 00:30:34.635 align:middle
这包括使你们的URL通用

00:30:35.202 --> 00:30:36.470 align:middle
允许它们打开用户

00:30:36.603 --> 00:30:40.107 align:middle
iOS设备上你们设计的app

00:30:40.641 --> 00:30:41.475 align:middle
这太棒了

00:30:42.209 --> 00:30:43.677 align:middle
在Safari扩展

00:30:43.911 --> 00:30:44.811 align:middle
你们会学习怎样

00:30:44.878 --> 00:30:46.813 align:middle
写我刚才提到的内容屏蔽条件

00:30:47.281 --> 00:30:50.417 align:middle
这适用于在
Safari和

00:30:50.918 --> 00:30:52.786 align:middle
Safari视图控件
加载的所有网页

00:30:54.388 --> 00:30:56.456 align:middle
如果你们想得到我
今天所讲内容的帮助

00:30:56.690 --> 00:30:58.992 align:middle
你们可以使用Safari和
WebKit实验室

00:30:59.526 --> 00:31:01.195 align:middle
第一个在Media Lab A

00:30:59.526 --> 00:31:01.195 align:middle
第一个在Media Lab A

00:31:01.261 --> 00:31:03.263 align:middle
时长大约半小时

00:31:04.464 --> 00:31:05.299 align:middle
好

00:31:05.365 --> 00:31:06.500 align:middle
谢大家

00:31:06.567 --> 00:31:08.669 align:middle
祝你们有一个愉快的WWDC之旅
