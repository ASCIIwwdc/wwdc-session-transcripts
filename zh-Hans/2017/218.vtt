WEBVTT

00:00:17.551 --> 00:00:20.454 align:middle line:10%
<c.magenta>（选择合适的Cocoa容器视图）</c>

00:00:21.355 --> 00:00:22.589 align:middle line:90%,end
<c.magenta>大家下午好</c>

00:00:26.093 --> 00:00:28.362 align:middle line:90%,end
<c.magenta>欢迎大家来到</c>
<c.magenta>“选择合适的Cocoa容器视图”</c>

00:00:28.529 --> 00:00:29.730 align:middle line:90%,end
<c.magenta>我是雷利·雷德</c>

00:00:30.163 --> 00:00:31.665 align:middle line:90%,end
<c.magenta>是AppKit团队的工程师</c>

00:00:31.732 --> 00:00:34.201 align:middle line:90%,end
<c.magenta>稍后AppKit团队的另一名工程师</c>
<c.magenta>特洛伊·斯蒂芬斯</c>

00:00:34.268 --> 00:00:35.869 align:middle line:90%,end
<c.magenta>也会上台和大家分享心得</c>

00:00:36.703 --> 00:00:39.740 align:middle line:90%,end
<c.magenta>让我们进入主题</c>
<c.magenta>我们首先来玩一个游戏</c>

00:00:41.742 --> 00:00:43.977 align:middle line:90%,end
<c.magenta>哪个视图看上去与众不同？</c>

00:00:44.511 --> 00:00:47.281 align:middle line:90%,end
<c.magenta>这里有五个不同的视图</c>
<c.magenta>[听不清]</c>

00:00:47.915 --> 00:00:50.784 align:middle line:90%,end
<c.magenta>其中哪一个视图</c>
<c.magenta>与其他视图不一样</c>

00:00:50.851 --> 00:00:53.387 align:middle line:90%,end
<c.magenta>而没有使用</c>
<c.magenta>容器视图的基本样式？</c>

00:00:53.720 --> 00:00:55.322 align:middle line:90%,end
<c.magenta>请仔细看</c>

00:00:55.689 --> 00:00:57.057 align:middle line:90%,end
<c.magenta>这可能有一点困难</c>

00:00:57.457 --> 00:01:00.260 align:middle line:90%,end
<c.magenta>我看到了一些线索</c>
<c.magenta>看到一些内容别具一格</c>

00:00:57.457 --> 00:01:00.260 align:middle line:90%,end
<c.magenta>我看到了一些线索</c>
<c.magenta>看到一些内容别具一格</c>

00:01:00.627 --> 00:01:02.930 align:middle line:90%,end
<c.magenta>你们看出来</c>
<c.magenta>哪一个视图与众不同了吗？</c>

00:01:03.197 --> 00:01:04.096 align:middle line:90%,end
<c.magenta>答案即将揭晓</c>

00:01:05.232 --> 00:01:07.501 align:middle line:90%,end
<c.magenta>正确答案是邮件边栏</c>

00:01:07.868 --> 00:01:09.603 align:middle line:90%,end
<c.magenta>邮件边栏是一个边框视图</c>

00:01:09.903 --> 00:01:11.505 align:middle line:90%,end
<c.magenta>其它四个是表格视图</c>

00:01:12.973 --> 00:01:14.241 align:middle line:90%,end
<c.magenta>让我们再来看一个例子</c>

00:01:15.042 --> 00:01:16.543 align:middle line:90%,end
<c.magenta>在这三个视图中</c>

00:01:16.610 --> 00:01:19.413 align:middle line:90%,end
<c.magenta>哪一个使用不同的</c>
<c.magenta>基本容器视图？</c>

00:01:19.780 --> 00:01:23.617 align:middle line:90%,end
<c.magenta>上一个例子已经告诉我们</c>
<c.magenta>这并不容易分辨出来</c>

00:01:24.751 --> 00:01:26.954 align:middle line:90%,end
<c.magenta>我已经看出来了</c>

00:01:27.354 --> 00:01:28.755 align:middle line:90%,end
<c.magenta>知道哪个视图与众不同吗？</c>

00:01:29.423 --> 00:01:31.692 align:middle line:90%,end
<c.magenta>正确的答案是这个</c>

00:01:31.758 --> 00:01:32.893 align:middle line:90%,end
<c.magenta>这是一个网格视图</c>

00:01:33.594 --> 00:01:35.629 align:middle line:90%,end
<c.magenta>其它两个是集合视图</c>

00:01:38.131 --> 00:01:40.133 align:middle line:90%,end
<c.magenta>我的同事特洛伊将会为大家简要介绍</c>

00:01:40.200 --> 00:01:43.971 align:middle line:90%,end
<c.magenta>AppKit的一些更强大</c>
<c.magenta>而且有趣的容器视图类</c>

00:01:44.238 --> 00:01:47.641 align:middle line:90%,end
<c.magenta>它们是经过精心设计的</c>
<c.magenta>多功能和可重用的组件</c>

00:01:47.708 --> 00:01:51.078 align:middle line:90%,end
<c.magenta>你可以在系统和</c>
<c.magenta>第三方应用中部署它们</c>

00:01:51.445 --> 00:01:52.946 align:middle line:90%,end
<c.magenta>你现在就可以使用它们</c>

00:01:53.013 --> 00:01:55.983 align:middle line:90%,end
<c.magenta>来轻松地构建</c>
<c.magenta>你自己的用户界面</c>

00:01:56.416 --> 00:01:59.453 align:middle line:90%,end
<c.magenta>这些界面包含一些</c>
<c.magenta>常用的组件</c>

00:01:59.520 --> 00:02:01.455 align:middle line:90%,end
<c.magenta>用户已经熟悉它们的用法</c>

00:01:59.520 --> 00:02:01.455 align:middle line:90%,end
<c.magenta>用户已经熟悉它们的用法</c>

00:02:01.522 --> 00:02:03.757 align:middle line:90%,end
<c.magenta>让他们能够方便而且</c>

00:02:03.824 --> 00:02:05.826 align:middle line:90%,end
<c.magenta>高效率地使用你的应用</c>

00:02:06.527 --> 00:02:10.396 align:middle line:90%,end
<c.magenta>特洛伊将会概括介绍他们的</c>
<c.magenta>设计目标、功能和高效率套件</c>

00:02:10.797 --> 00:02:14.468 align:middle line:90%,end
<c.magenta>然后 我将会回到舞台</c>
<c.magenta>介绍一些有趣的真实UI范例</c>

00:02:14.535 --> 00:02:16.470 align:middle line:90%,end
<c.magenta>而且提供一些有用的指导</c>

00:02:16.537 --> 00:02:20.107 align:middle line:90%,end
<c.magenta>帮助你们</c>
<c.magenta>从AppKit扩展库中选择</c>

00:02:20.174 --> 00:02:21.775 align:middle line:90%,end
<c.magenta>最合适的容器视图</c>

00:02:22.409 --> 00:02:24.545 align:middle line:90%,end
<c.magenta>关于这个主题</c>
<c.magenta>我将会邀请特洛伊为大家讲解</c>

00:02:26.880 --> 00:02:27.714 align:middle line:90%,end
<c.magenta>谢谢 雷利</c>

00:02:28.682 --> 00:02:29.516 align:middle line:90%,end
<c.magenta>大家好</c>

00:02:30.450 --> 00:02:33.353 align:middle line:90%,end
<c.magenta>在我们进入主题之前</c>

00:02:34.555 --> 00:02:37.224 align:middle line:90%,end
<c.magenta>我想花一点时间来回顾</c>

00:02:37.291 --> 00:02:40.594 align:middle line:90%,end
<c.magenta>AppKit视图体系的</c>
<c.magenta>一些基本内容</c>

00:02:43.330 --> 00:02:48.135 align:middle line:90%,end
<c.magenta>从最基本的简化几何角度来讲</c>
<c.magenta>视图是什么？</c>

00:02:48.202 --> 00:02:52.372 align:middle line:90%,end
<c.magenta>它是屏幕上的一个矩形</c>
<c.magenta>用于向用户展示你的内容</c>

00:02:52.439 --> 00:02:54.374 align:middle line:90%,end
<c.magenta>让用户能够进行交互</c>

00:02:54.875 --> 00:02:57.044 align:middle line:90%,end
<c.magenta>当你准备展示内容时</c>

00:02:57.110 --> 00:02:59.246 align:middle line:90%,end
<c.magenta>你需要做的一项基本工作是</c>

00:02:59.313 --> 00:03:01.882 align:middle line:90%,end
<c.magenta>确定和应用合适的布局</c>

00:02:59.313 --> 00:03:01.882 align:middle line:90%,end
<c.magenta>确定和应用合适的布局</c>

00:03:01.949 --> 00:03:05.419 align:middle line:90%,end
<c.magenta>你需要确定各个项目的</c>
<c.magenta>大小和位置</c>

00:03:05.485 --> 00:03:08.889 align:middle line:90%,end
<c.magenta>以便于展示给用户</c>
<c.magenta>它们可能是项目 也可能是视图</c>

00:03:09.289 --> 00:03:12.192 align:middle line:90%,end
<c.magenta>AppKit提供一个</c>
<c.magenta>非常强大和通用的</c>

00:03:12.259 --> 00:03:15.495 align:middle line:90%,end
<c.magenta>开放式自动布局系统</c>
<c.magenta>提供你所需要的功能</c>

00:03:15.562 --> 00:03:20.234 align:middle line:90%,end
<c.magenta>用于构建非常复杂和富于变化的</c>
<c.magenta>布局 能够自动适应大小变化</c>

00:03:20.834 --> 00:03:24.404 align:middle line:90%,end
<c.magenta>你可以设置各个组件和约束条件</c>

00:03:24.705 --> 00:03:28.342 align:middle line:90%,end
<c.magenta>但今天演讲的要点之一是提醒你们</c>

00:03:28.408 --> 00:03:30.344 align:middle line:90%,end
<c.magenta>有一些现成的解决方案</c>

00:03:30.410 --> 00:03:33.213 align:middle line:90%,end
<c.magenta>提供给许多常用的用户界面设计模式</c>

00:03:33.280 --> 00:03:35.315 align:middle line:90%,end
<c.magenta>你可以在应用中使用它们</c>

00:03:35.382 --> 00:03:39.286 align:middle line:90%,end
<c.magenta>在AppKit庞大的</c>
<c.magenta>预设视图类库中</c>

00:03:39.353 --> 00:03:41.388 align:middle line:90%,end
<c.magenta>有许多即手可用的组件</c>

00:03:41.855 --> 00:03:44.591 align:middle line:90%,end
<c.magenta>因此 在可能的情况下</c>
<c.magenta>你需要让工作简单化</c>

00:03:44.658 --> 00:03:48.095 align:middle line:90%,end
<c.magenta>你需要重复使用</c>
<c.magenta>我们已经为你设计好的解决方案</c>

00:03:50.464 --> 00:03:52.466 align:middle line:90%,end
<c.magenta>我们今天要介绍的所有视图</c>

00:03:52.533 --> 00:03:54.301 align:middle line:90%,end
<c.magenta>能够展现你的任何内容</c>

00:03:54.368 --> 00:03:57.204 align:middle line:90%,end
<c.magenta>即使你使用标准商用组件</c>

00:03:57.271 --> 00:03:59.673 align:middle line:90%,end
<c.magenta>你的视图看上去不是预设的</c>

00:04:00.007 --> 00:04:04.344 align:middle line:90%,end
<c.magenta>你也具有完全的自由度</c>
<c.magenta>来设计你想要的视图</c>

00:04:04.411 --> 00:04:07.114 align:middle line:90%,end
<c.magenta>你可以在每个视图中</c>
<c.magenta>放入你想要的内容</c>

00:04:08.649 --> 00:04:10.851 align:middle line:90%,end
<c.magenta>让我们先来看一下简单的例子</c>

00:04:11.151 --> 00:04:14.755 align:middle line:90%,end
<c.magenta>这是一些最基本的工作</c>
<c.magenta>这里有一系列的视图</c>

00:04:14.821 --> 00:04:17.357 align:middle line:90%,end
<c.magenta>它们的类型并不重要</c>
<c.magenta>对于布局系统来说</c>

00:04:17.423 --> 00:04:18.425 align:middle line:90%,end
<c.magenta>它们只是一些黑方框</c>

00:04:18.692 --> 00:04:20.726 align:middle line:90%,end
<c.magenta>我们希望以线性方式</c>
<c.magenta>来布局它们</c>

00:04:20.994 --> 00:04:22.663 align:middle line:90%,end
<c.magenta>比如像这样的行</c>

00:04:23.197 --> 00:04:25.065 align:middle line:90%,end
<c.magenta>或者垂直的列</c>

00:04:25.699 --> 00:04:29.303 align:middle line:90%,end
<c.magenta>AppKit提供真正简单</c>
<c.magenta>易用的解决方案</c>

00:04:29.536 --> 00:04:32.973 align:middle line:90%,end
<c.magenta>一个隐形容器视图</c>
<c.magenta>我们称之为NSStackView</c>

00:04:33.941 --> 00:04:38.011 align:middle line:90%,end
<c.magenta>StackView提供非常简单的方法</c>
<c.magenta>使用行或列的方式布局视图</c>

00:04:38.078 --> 00:04:41.715 align:middle line:90%,end
<c.magenta>而不需要自己管理</c>
<c.magenta>布局约束条件</c>

00:04:41.782 --> 00:04:45.786 align:middle line:90%,end
<c.magenta>StackView的特点是</c>
<c.magenta>它提供非常易于使用的API</c>

00:04:45.886 --> 00:04:50.023 align:middle line:90%,end
<c.magenta>你可以设置属性指定对齐和大小</c>

00:04:50.090 --> 00:04:52.726 align:middle line:90%,end
<c.magenta>StackView将会自动管理</c>

00:04:52.793 --> 00:04:54.962 align:middle line:90%,end
<c.magenta>所有必要的布局约束</c>

00:04:55.028 --> 00:04:56.763 align:middle line:90%,end
<c.magenta>这可能特别有用</c>

00:04:56.830 --> 00:04:59.533 align:middle line:90%,end
<c.magenta>如果你想要</c>
<c.magenta>StackView动态变化内容</c>

00:04:59.600 --> 00:05:01.168 align:middle line:90%,end
<c.magenta>你想要添加和移除项目</c>

00:04:59.600 --> 00:05:01.168 align:middle line:90%,end
<c.magenta>你想要添加和移除项目</c>

00:05:01.235 --> 00:05:04.471 align:middle line:90%,end
<c.magenta>而不想要自己</c>
<c.magenta>更新布局约束</c>

00:05:05.172 --> 00:05:08.509 align:middle line:90%,end
<c.magenta>在StackView中可以设置的</c>
<c.magenta>属性包括边框嵌入</c>

00:05:08.575 --> 00:05:12.880 align:middle line:90%,end
<c.magenta>这有一点像设置</c>
<c.magenta>布局视图区域周围的边界</c>

00:05:14.281 --> 00:05:16.416 align:middle line:90%,end
<c.magenta>可以配置视图对齐</c>

00:05:16.483 --> 00:05:19.019 align:middle line:90%,end
<c.magenta>在本例中</c>
<c.magenta>你可能想要在设置界面中</c>

00:05:19.086 --> 00:05:22.322 align:middle line:90%,end
<c.magenta>水平对齐项目、右对齐或左对齐项目</c>

00:05:22.389 --> 00:05:24.825 align:middle line:90%,end
<c.magenta>或者将所有项目设置为相同的宽度</c>

00:05:24.892 --> 00:05:26.226 align:middle line:90%,end
<c.magenta>或者设置间隙</c>

00:05:26.293 --> 00:05:28.695 align:middle line:90%,end
<c.magenta>所有这些都可以</c>
<c.magenta>轻松地使用属性来完成</c>

00:05:28.762 --> 00:05:31.632 align:middle line:90%,end
<c.magenta>而不需要自己管理</c>
<c.magenta>自动布局约束</c>

00:05:32.332 --> 00:05:35.669 align:middle line:90%,end
<c.magenta>你唯一需要考虑的事情是</c>

00:05:36.136 --> 00:05:39.239 align:middle line:90%,end
<c.magenta>确保放入StackView</c>
<c.magenta>的所有项目</c>

00:05:39.306 --> 00:05:40.807 align:middle line:90%,end
<c.magenta>都具有明确定义的高度</c>

00:05:40.874 --> 00:05:45.078 align:middle line:90%,end
<c.magenta>或者 如果它是StackView</c>
<c.magenta>你需要明确定义宽度</c>

00:05:45.312 --> 00:05:47.414 align:middle line:90%,end
<c.magenta>现在 你可以通过</c>

00:05:47.481 --> 00:05:50.250 align:middle line:90%,end
<c.magenta>内容的固有大小来确定这些属性</c>

00:05:50.317 --> 00:05:53.353 align:middle line:90%,end
<c.magenta>这里有一些标签</c>
<c.magenta>而且由于所选字体的原因</c>

00:05:53.420 --> 00:05:54.254 align:middle line:90%,end
<c.magenta>它们有特定的高度</c>

00:05:54.321 --> 00:05:56.723 align:middle line:90%,end
<c.magenta>我们想在上方和下方</c>
<c.magenta>留出一定的空白</c>

00:05:56.790 --> 00:05:58.759 align:middle line:90%,end
<c.magenta>因此 每个项目的总高度</c>

00:05:58.825 --> 00:06:01.195 align:middle line:90%,end
<c.magenta>由标签高度确定</c>

00:05:58.825 --> 00:06:01.195 align:middle line:90%,end
<c.magenta>由标签高度确定</c>

00:06:02.196 --> 00:06:05.699 align:middle line:90%,end
<c.magenta>我们进行设置之后</c>
<c.magenta>其余工作交给StackView就可以了</c>

00:06:05.966 --> 00:06:09.136 align:middle line:90%,end
<c.magenta>项目之间的空隙是可以配置的</c>
<c.magenta>而且不必完全相同</c>

00:06:09.203 --> 00:06:11.338 align:middle line:90%,end
<c.magenta>在这方面 有许多的选项</c>

00:06:11.405 --> 00:06:13.407 align:middle line:90%,end
<c.magenta>这是一个多功能的视图</c>

00:06:14.741 --> 00:06:16.343 align:middle line:90%,end
<c.magenta>StackView还能够</c>

00:06:16.410 --> 00:06:19.012 align:middle line:90%,end
<c.magenta>处理空隙约束</c>

00:06:19.246 --> 00:06:21.915 align:middle line:90%,end
<c.magenta>若需要 可在StackView中</c>
<c.magenta>放入数百个项目</c>

00:06:21.982 --> 00:06:24.952 align:middle line:90%,end
<c.magenta>可以放入滚动视图</c>
<c.magenta>其显示的项目数量</c>

00:06:25.018 --> 00:06:26.286 align:middle line:90%,end
<c.magenta>多于窗口显示的数量</c>

00:06:26.353 --> 00:06:27.921 align:middle line:90%,end
<c.magenta>但是 通常情况下</c>

00:06:27.988 --> 00:06:31.091 align:middle line:90%,end
<c.magenta>你可能会在空间受限区域中</c>
<c.magenta>使用StackView</c>

00:06:32.759 --> 00:06:36.129 align:middle line:90%,end
<c.magenta>StackView提供一个API</c>
<c.magenta>处理所有空间限制</c>

00:06:36.196 --> 00:06:41.268 align:middle line:90%,end
<c.magenta>让你能够轻松地指定</c>
<c.magenta>视图集合如何适应大小调整</c>

00:06:41.535 --> 00:06:42.870 align:middle line:90%,end
<c.magenta>你所要做的是</c>

00:06:42.936 --> 00:06:47.374 align:middle line:90%,end
<c.magenta>将视图的相对优先级</c>
<c.magenta>告知StackView</c>

00:06:47.441 --> 00:06:48.475 align:middle line:90%,end
<c.magenta>因此我们可以这样说</c>

00:06:48.542 --> 00:06:51.578 align:middle line:90%,end
<c.magenta>假设这里的视图2</c>
<c.magenta>具有相对较低的优先级</c>

00:06:52.112 --> 00:06:55.349 align:middle line:90%,end
<c.magenta>因此 当空间受限时</c>
<c.magenta>如果窗口变小</c>

00:06:55.415 --> 00:06:59.419 align:middle line:90%,end
<c.magenta>StackView将自动放弃</c>
<c.magenta>这些低优先级视图</c>

00:06:59.786 --> 00:07:02.389 align:middle line:90%,end
<c.magenta>确保最重要的视图</c>
<c.magenta>仍然显示出来</c>

00:06:59.786 --> 00:07:02.389 align:middle line:90%,end
<c.magenta>确保最重要的视图</c>
<c.magenta>仍然显示出来</c>

00:07:02.456 --> 00:07:06.326 align:middle line:90%,end
<c.magenta>这类似于工具栏和</c>
<c.magenta>触控条中的响应模式</c>

00:07:08.962 --> 00:07:11.598 align:middle line:90%,end
<c.magenta>StackView还支持</c>
<c.magenta>引力区概念</c>

00:07:11.665 --> 00:07:13.000 align:middle line:90%,end
<c.magenta>这有一点像分区</c>

00:07:13.100 --> 00:07:16.470 align:middle line:90%,end
<c.magenta>在垂直StackView中</c>
<c.magenta>有顶部、中间和底部分区</c>

00:07:16.904 --> 00:07:20.874 align:middle line:90%,end
<c.magenta>在StackView中</c>
<c.magenta>有前置、中间和后置分区</c>

00:07:20.941 --> 00:07:23.577 align:middle line:90%,end
<c.magenta>另外请注意</c>
<c.magenta>我们使用的术语是前置和后置</c>

00:07:23.644 --> 00:07:27.548 align:middle line:90%,end
<c.magenta>而不是左侧和右侧</c>

00:07:27.614 --> 00:07:30.217 align:middle line:90%,end
<c.magenta>通过这种方式</c>

00:07:30.284 --> 00:07:34.555 align:middle line:90%,end
<c.magenta>我们能够更轻松地</c>
<c.magenta>处理从右至左的布局</c>

00:07:34.655 --> 00:07:38.192 align:middle line:90%,end
<c.magenta>在从左至右的布局</c>
<c.magenta>前置分区位于左侧</c>

00:07:38.258 --> 00:07:40.494 align:middle line:90%,end
<c.magenta>后置分区位于右侧</c>

00:07:40.561 --> 00:07:45.732 align:middle line:90%,end
<c.magenta>如果应用中的文本</c>
<c.magenta>从右向左显示</c>

00:07:45.799 --> 00:07:48.368 align:middle line:90%,end
<c.magenta>那么前置和后置分区</c>
<c.magenta>将会自动交换</c>

00:07:48.435 --> 00:07:51.872 align:middle line:90%,end
<c.magenta>事实上</c>
<c.magenta>StackView中的所有子视图</c>

00:07:51.939 --> 00:07:53.674 align:middle line:90%,end
<c.magenta>将会以相反的方向布局</c>

00:07:53.907 --> 00:07:57.177 align:middle line:90%,end
<c.magenta>因此 利用正确的思维模式</c>

00:07:57.244 --> 00:07:58.879 align:middle line:90%,end
<c.magenta>StackView让我们的布局</c>

00:07:58.946 --> 00:08:03.483 align:middle line:90%,end
<c.magenta>能够自动适应从右至左布局</c>

00:07:58.946 --> 00:08:03.483 align:middle line:90%,end
<c.magenta>能够自动适应从右至左布局</c>

00:08:04.551 --> 00:08:06.520 align:middle line:90%,end
<c.magenta>StackView还支持组合</c>

00:08:06.854 --> 00:08:10.023 align:middle line:90%,end
<c.magenta>假设这里有一组视图</c>
<c.magenta>我们想要垂直堆叠它们</c>

00:08:10.090 --> 00:08:13.126 align:middle line:90%,end
<c.magenta>它们可能是一些复选框</c>
<c.magenta>可以放入StackView</c>

00:08:13.260 --> 00:08:15.662 align:middle line:90%,end
<c.magenta>也许需要在它们旁边</c>
<c.magenta>放置一个边栏</c>

00:08:16.096 --> 00:08:18.398 align:middle line:90%,end
<c.magenta>我们可以使用另一个StackView</c>
<c.magenta>一个水平StackView</c>

00:08:18.465 --> 00:08:19.766 align:middle line:90%,end
<c.magenta>将视图放入其中</c>

00:08:20.701 --> 00:08:23.504 align:middle line:90%,end
<c.magenta>我们可以底部在放置</c>
<c.magenta>一些按钮 将它们放入StackView</c>

00:08:23.570 --> 00:08:26.707 align:middle line:90%,end
<c.magenta>然后使用第四个StackView</c>
<c.magenta>将它们分成两个组</c>

00:08:26.907 --> 00:08:29.009 align:middle line:10%
<c.magenta>在我们编程时</c>

00:08:29.076 --> 00:08:30.911 align:middle line:10%
<c.magenta>我们喜欢这样做 是吧？</c>

00:08:30.978 --> 00:08:35.282 align:middle line:10%
<c.magenta>用模块化的方法</c>
<c.magenta>利用这些容易理解的组件进行组合</c>

00:08:35.349 --> 00:08:38.352 align:middle line:10%
<c.magenta>让你能够创建复杂的布局</c>

00:08:38.418 --> 00:08:39.852 align:middle line:10%
<c.magenta>而且容易维护</c>

00:08:39.919 --> 00:08:42.890 align:middle line:10%
<c.magenta>仅使用StackView</c>
<c.magenta>就可以做很多的事情</c>

00:08:45.158 --> 00:08:48.195 align:middle line:90%,end
<c.magenta>几年前有一个很不错的演讲</c>
<c.magenta>名为“自动布局会话的谜”</c>

00:08:48.262 --> 00:08:49.696 align:middle line:90%,end
<c.magenta>详细介绍了StackView</c>

00:08:49.763 --> 00:08:52.332 align:middle line:90%,end
<c.magenta>包括如何进行配置</c>
<c.magenta>以获得各种效果 讲解很详细</c>

00:08:52.399 --> 00:08:54.001 align:middle line:90%,end
<c.magenta>我强烈建议你们看一看</c>

00:08:54.067 --> 00:08:57.905 align:middle line:90%,end
<c.magenta>如你们所知</c>
<c.magenta>过去几年的视频演讲</c>

00:08:57.971 --> 00:08:59.540 align:middle line:90%,end
<c.magenta>可以在开发者网站上看到</c>

00:08:59.606 --> 00:09:01.175 align:middle line:90%,end
<c.magenta>在“自动布局”演讲中</c>

00:08:59.606 --> 00:09:01.175 align:middle line:90%,end
<c.magenta>在“自动布局”演讲中</c>

00:09:01.241 --> 00:09:03.577 align:middle line:90%,end
<c.magenta>有一节名为</c>
<c.magenta>“自动布局技巧”</c>

00:09:03.644 --> 00:09:06.013 align:middle line:90%,end
<c.magenta>详细介绍各种方法</c>

00:09:06.079 --> 00:09:07.981 align:middle line:90%,end
<c.magenta>指导你使用和设置StackView</c>

00:09:09.116 --> 00:09:11.752 align:middle line:90%,end
<c.magenta>让我们运用刚才学过的知识</c>
<c.magenta>进行实战演练</c>

00:09:11.818 --> 00:09:13.687 align:middle line:90%,end
<c.magenta>我们实现一种新型布局</c>

00:09:13.754 --> 00:09:18.492 align:middle line:90%,end
<c.magenta>这里是一个UI的外观首选项</c>

00:09:18.959 --> 00:09:22.029 align:middle line:90%,end
<c.magenta>我们看到这里有一些列表</c>

00:09:22.362 --> 00:09:24.364 align:middle line:90%,end
<c.magenta>左侧是一个标签列表</c>

00:09:24.431 --> 00:09:27.267 align:middle line:90%,end
<c.magenta>在右侧 有一个相应的控件列表</c>

00:09:27.801 --> 00:09:31.138 align:middle line:90%,end
<c.magenta>都是向下排列</c>
<c.magenta>在这种情况下 我们自然想到</c>

00:09:31.572 --> 00:09:34.408 align:middle line:90%,end
<c.magenta>可能需要使用多个</c>
<c.magenta>并列StackView</c>

00:09:34.474 --> 00:09:35.509 align:middle line:90%,end
<c.magenta>来解决这个问题</c>

00:09:36.643 --> 00:09:39.580 align:middle line:90%,end
<c.magenta>我们很快发现</c>

00:09:39.646 --> 00:09:42.115 align:middle line:90%,end
<c.magenta>这些StackView</c>
<c.magenta>能够很好地独立工作</c>

00:09:42.182 --> 00:09:44.518 align:middle line:90%,end
<c.magenta>但是它们相互之间</c>
<c.magenta>没有任何交互和联系</c>

00:09:44.585 --> 00:09:47.187 align:middle line:90%,end
<c.magenta>它们能够很好地显示自己的内容</c>

00:09:47.588 --> 00:09:50.724 align:middle line:90%,end
<c.magenta>但是问题在于左侧的标签</c>

00:09:50.791 --> 00:09:54.361 align:middle line:90%,end
<c.magenta>与右侧的控件之间</c>
<c.magenta>不再存在必要的显示对应关系</c>

00:09:54.695 --> 00:09:57.397 align:middle line:90%,end
<c.magenta>这将会造成应用可用性问题</c>

00:09:57.998 --> 00:10:01.902 align:middle line:90%,end
<c.magenta>我们可能使用凑合方法为外观标签</c>

00:09:57.998 --> 00:10:01.902 align:middle line:90%,end
<c.magenta>我们可能使用凑合方法为外观标签</c>

00:10:01.969 --> 00:10:05.405 align:middle line:90%,end
<c.magenta>设置人为增大的高度</c>
<c.magenta>或使用类似的方法</c>

00:10:05.472 --> 00:10:07.374 align:middle line:90%,end
<c.magenta>但是 这是Cocoa技术</c>
<c.magenta>我们并不会拼凑了事</c>

00:10:07.441 --> 00:10:10.143 align:middle line:90%,end
<c.magenta>我们想要一个</c>
<c.magenta>优雅、便于维护的解决方案</c>

00:10:11.211 --> 00:10:14.715 align:middle line:90%,end
<c.magenta>我们希望使用简单、</c>
<c.magenta>可维护的方法完成这些布局</c>

00:10:14.781 --> 00:10:17.284 align:middle line:90%,end
<c.magenta>以便于开发网格视图</c>

00:10:17.718 --> 00:10:18.886 align:middle line:90%,end
<c.magenta>利用网格视图</c>

00:10:20.420 --> 00:10:23.757 align:middle line:90%,end
<c.magenta>你将能够轻松地</c>
<c.magenta>在带坐标的行和列中进行布局</c>

00:10:23.824 --> 00:10:26.627 align:middle line:90%,end
<c.magenta>将在给定的行和列中对齐视图</c>

00:10:26.693 --> 00:10:27.995 align:middle line:90%,end
<c.magenta>非常好用</c>

00:10:28.262 --> 00:10:29.930 align:middle line:90%,end
<c.magenta>NSStackView使用高级API</c>

00:10:29.997 --> 00:10:32.432 align:middle line:90%,end
<c.magenta>完成所有这些工作</c>

00:10:32.499 --> 00:10:36.470 align:middle line:90%,end
<c.magenta>不需要你自己维护自动布局约束</c>

00:10:36.537 --> 00:10:38.238 align:middle line:90%,end
<c.magenta>你可以配置高级属性</c>

00:10:38.305 --> 00:10:41.975 align:middle line:90%,end
<c.magenta>设置行和列的大小</c>
<c.magenta>对齐和间隙</c>

00:10:42.109 --> 00:10:44.077 align:middle line:90%,end
<c.magenta>网格视图会完成其它工作</c>

00:10:47.047 --> 00:10:49.483 align:middle line:90%,end
<c.magenta>与StackView一样</c>
<c.magenta>GridView自动适应</c>

00:10:49.550 --> 00:10:50.584 align:middle line:90%,end
<c.magenta>从右至左的布局</c>

00:10:50.651 --> 00:10:53.654 align:middle line:90%,end
<c.magenta>因此 在这个特定的布局中</c>
<c.magenta>我们希望使用从右至左的样式</c>

00:10:53.720 --> 00:10:55.956 align:middle line:90%,end
<c.magenta>标签和控件将会交换位置</c>

00:10:56.023 --> 00:10:58.625 align:middle line:90%,end
<c.magenta>如果我们在RTL中运行</c>
<c.magenta>就会得到这样的结果</c>

00:11:01.094 --> 00:11:04.331 align:middle line:90%,end
<c.magenta>去年的“自动布局新特性”演讲</c>
<c.magenta>真的非常不错</c>

00:11:04.398 --> 00:11:07.601 align:middle line:90%,end
<c.magenta>它详细地讲解GridView</c>
<c.magenta>及其功能</c>

00:11:07.668 --> 00:11:09.536 align:middle line:90%,end
<c.magenta>我强烈建议你们观看</c>

00:11:10.504 --> 00:11:12.139 align:middle line:90%,end
<c.magenta>目前 仅使用GridView</c>
<c.magenta>和StackView</c>

00:11:12.206 --> 00:11:13.841 align:middle line:90%,end
<c.magenta>我们就可以做很多的事情</c>

00:11:13.907 --> 00:11:16.944 align:middle line:90%,end
<c.magenta>特别是我们需要组合</c>
<c.magenta>和模块化结构时</c>

00:11:17.077 --> 00:11:21.682 align:middle line:90%,end
<c.magenta>它们帮助你轻松地</c>
<c.magenta>布局和展示视图组</c>

00:11:22.382 --> 00:11:25.219 align:middle line:90%,end
<c.magenta>但是 如果我们还需要</c>
<c.magenta>其他的布局 应该怎么做呢？</c>

00:11:26.420 --> 00:11:30.824 align:middle line:90%,end
<c.magenta>如果我们需要其它类型的布局</c>
<c.magenta>比如非线性的布局应该怎么做？</c>

00:11:32.025 --> 00:11:35.562 align:middle line:90%,end
<c.magenta>更重要的是 如果我们需要</c>
<c.magenta>支持用户交互 应该怎么做？</c>

00:11:35.629 --> 00:11:39.066 align:middle line:90%,end
<c.magenta>比如 用户选择项目进行拖放等</c>

00:11:40.367 --> 00:11:44.471 align:middle line:90%,end
<c.magenta>另外我们可能不知道</c>
<c.magenta>运行时需要处理多少个项目</c>

00:11:44.538 --> 00:11:46.240 align:middle line:90%,end
<c.magenta>也许用户的数据很庞大</c>

00:11:46.306 --> 00:11:50.043 align:middle line:90%,end
<c.magenta>可能需要显示成千上万个项目</c>

00:11:50.110 --> 00:11:54.081 align:middle line:90%,end
<c.magenta>这就超出GridView</c>
<c.magenta>和StackView的目标用途</c>

00:11:54.147 --> 00:11:57.117 align:middle line:90%,end
<c.magenta>你可以在这些视图中</c>
<c.magenta>放入许多项目 也可以放入滚动视图</c>

00:11:57.184 --> 00:12:00.888 align:middle line:90%,end
<c.magenta>但是它们不会进行高效率资源利用</c>

00:11:57.184 --> 00:12:00.888 align:middle line:90%,end
<c.magenta>但是它们不会进行高效率资源利用</c>

00:12:01.488 --> 00:12:04.291 align:middle line:90%,end
<c.magenta>而只是分页显示需要显示的内容</c>

00:12:04.358 --> 00:12:06.660 align:middle line:90%,end
<c.magenta>并且努力确保平滑滚动显示</c>

00:12:06.727 --> 00:12:08.428 align:middle line:90%,end
<c.magenta>我们希望更进一步</c>

00:12:08.495 --> 00:12:11.398 align:middle line:90%,end
<c.magenta>我们想要解决这些问题</c>

00:12:12.299 --> 00:12:16.170 align:middle line:90%,end
<c.magenta>我们首先来看一个例子</c>
<c.magenta>这个例子强调可交互性和可扩展性</c>

00:12:17.271 --> 00:12:20.440 align:middle line:90%,end
<c.magenta>如果我们想要创建交互功能</c>
<c.magenta>更强的网格 应该怎么做？</c>

00:12:20.507 --> 00:12:23.810 align:middle line:90%,end
<c.magenta>这个有一个例子</c>
<c.magenta>类似于我们的一个系统应用</c>

00:12:24.144 --> 00:12:25.112 align:middle line:90%,end
<c.magenta>活动监测器</c>

00:12:25.913 --> 00:12:28.549 align:middle line:90%,end
<c.magenta>从外观上看</c>
<c.magenta>它像是一个网格 是吧？</c>

00:12:28.615 --> 00:12:29.950 align:middle line:90%,end
<c.magenta>这里有行和列</c>

00:12:30.184 --> 00:12:33.020 align:middle line:90%,end
<c.magenta>但是这里</c>
<c.magenta>它更像一个列表</c>

00:12:33.220 --> 00:12:37.391 align:middle line:90%,end
<c.magenta>我们看到显示项目向下排列</c>
<c.magenta>每行显示一个进程</c>

00:12:37.691 --> 00:12:39.993 align:middle line:90%,end
<c.magenta>信息分列呈现</c>

00:12:40.060 --> 00:12:42.496 align:middle line:90%,end
<c.magenta>以显示每个进程的不同属性</c>

00:12:43.263 --> 00:12:46.767 align:middle line:90%,end
<c.magenta>用户可能想要选择</c>
<c.magenta>单个项目或多个项目</c>

00:12:48.101 --> 00:12:50.404 align:middle line:90%,end
<c.magenta>由于我们按列显示数据</c>

00:12:50.470 --> 00:12:53.473 align:middle line:90%,end
<c.magenta>因此可以方便地告诉用户</c>
<c.magenta>每列的内容是什么</c>

00:12:53.540 --> 00:12:56.677 align:middle line:90%,end
<c.magenta>我们在顶部设置一个标题视图</c>
<c.magenta>显示每个列的标题</c>

00:12:57.444 --> 00:13:01.215 align:middle line:90%,end
<c.magenta>用户可以点击列标题</c>

00:12:57.444 --> 00:13:01.215 align:middle line:90%,end
<c.magenta>用户可以点击列标题</c>

00:13:01.715 --> 00:13:04.051 align:middle line:90%,end
<c.magenta>让应用自动根据列的属性</c>

00:13:04.117 --> 00:13:06.153 align:middle line:90%,end
<c.magenta>对列表内容进行排序</c>

00:13:06.520 --> 00:13:09.923 align:middle line:90%,end
<c.magenta>用户可以拖放</c>
<c.magenta>经过重新排序的列</c>

00:13:09.990 --> 00:13:12.192 align:middle line:90%,end
<c.magenta>以更简单易懂的方式</c>

00:13:12.259 --> 00:13:14.561 align:middle line:90%,end
<c.magenta>显示各列内容的关系</c>

00:13:14.795 --> 00:13:18.232 align:middle line:90%,end
<c.magenta>所有这些功能都封装在</c>
<c.magenta>AppKit的NSTableView之中</c>

00:13:19.967 --> 00:13:22.870 align:middle line:90%,end
<c.magenta>TableView是一个交互式</c>
<c.magenta>垂直列表视图</c>

00:13:23.237 --> 00:13:25.038 align:middle line:90%,end
<c.magenta>我们将它们视为多列视图</c>

00:13:25.105 --> 00:13:27.341 align:middle line:90%,end
<c.magenta>你可以见到</c>
<c.magenta>许多的多列TableView</c>

00:13:27.774 --> 00:13:28.842 align:middle line:90%,end
<c.magenta>它们也十分适合</c>

00:13:28.909 --> 00:13:30.878 align:middle line:90%,end
<c.magenta>单列列表</c>

00:13:30.944 --> 00:13:33.814 align:middle line:90%,end
<c.magenta>在系统中 你可以</c>
<c.magenta>看到许多这样的例子</c>

00:13:33.881 --> 00:13:35.849 align:middle line:90%,end
<c.magenta>虽然可能难以识别</c>
<c.magenta>这点雷利前面已讲过</c>

00:13:35.916 --> 00:13:38.485 align:middle line:90%,end
<c.magenta>因为其外观是可以自定义的</c>

00:13:39.219 --> 00:13:40.687 align:middle line:90%,end
<c.magenta>这里有一些例子</c>

00:13:40.888 --> 00:13:44.157 align:middle line:10%
<c.magenta>右侧是一个简单的例子</c>
<c.magenta>这里有一个文本标签列表</c>

00:13:44.224 --> 00:13:47.694 align:middle line:10%
<c.magenta>因此你可以使用TableView</c>
<c.magenta>在左侧 这也是一个TableView</c>

00:13:47.761 --> 00:13:51.098 align:middle line:10%
<c.magenta>每个项目显示为</c>
<c.magenta>一幅图片和相应的标签</c>

00:13:51.698 --> 00:13:54.001 align:middle line:10%
<c.magenta>在基于TableView的最新视图中</c>

00:13:54.067 --> 00:13:56.904 align:middle line:10%
<c.magenta>你可以使用任何方式</c>
<c.magenta>呈现你的项目内容</c>

00:13:56.970 --> 00:14:00.641 align:middle line:10%
<c.magenta>你可以使用AppKit标准控件</c>
<c.magenta>构建任何视图子树</c>

00:13:56.970 --> 00:14:00.641 align:middle line:10%
<c.magenta>你可以使用AppKit标准控件</c>
<c.magenta>构建任何视图子树</c>

00:14:00.707 --> 00:14:02.042 align:middle line:10%
<c.magenta>创建自己的定制视图</c>

00:14:02.442 --> 00:14:05.812 align:middle line:10%
<c.magenta>可以使用它</c>
<c.magenta>在你的TableView中显示项目</c>

00:14:05.879 --> 00:14:08.081 align:middle line:10%
<c.magenta>你可以使用很多的创意设计方案</c>

00:14:08.148 --> 00:14:09.816 align:middle line:10%
<c.magenta>来显示项目内容</c>

00:14:11.385 --> 00:14:13.353 align:middle line:90%,end
<c.magenta>TableView支持类型选择</c>

00:14:13.420 --> 00:14:15.522 align:middle line:90%,end
<c.magenta>键盘导航为你处理所有这些事情</c>

00:14:16.723 --> 00:14:18.759 align:middle line:10%
<c.magenta>TableView还提供分组行</c>

00:14:18.825 --> 00:14:21.328 align:middle line:10%
<c.magenta>有时候按照特定的类别</c>
<c.magenta>对项目内容进行分组</c>

00:14:21.395 --> 00:14:22.930 align:middle line:10%
<c.magenta>可以便于用户理解内容</c>

00:14:23.096 --> 00:14:24.398 align:middle line:10%
<c.magenta>这里有一个例子</c>

00:14:25.065 --> 00:14:28.735 align:middle line:10%
<c.magenta>顶部的黄色方框是标题视图的边框</c>
<c.magenta>但是在它们下方</c>

00:14:28.802 --> 00:14:31.371 align:middle line:10%
<c.magenta>其他的黄色方框是分组行的边框</c>

00:14:31.438 --> 00:14:32.873 align:middle line:10%
<c.magenta>看上去像是标题</c>

00:14:32.940 --> 00:14:35.309 align:middle line:10%
<c.magenta>它们可以是你想要的任何设计视图</c>

00:14:35.375 --> 00:14:37.077 align:middle line:10%
<c.magenta>你可以使用它们</c>

00:14:37.144 --> 00:14:38.812 align:middle line:10%
<c.magenta>对项目内容进行分类</c>

00:14:40.647 --> 00:14:43.283 align:middle line:10%
<c.magenta>这是另一个使用分组行的例子</c>

00:14:43.684 --> 00:14:46.854 align:middle line:10%
<c.magenta>你会注意到 本例中的分组行</c>
<c.magenta>具有不同的高度</c>

00:14:46.920 --> 00:14:49.723 align:middle line:10%
<c.magenta>因为我们想要在旁边</c>
<c.magenta>显示更大的图标</c>

00:14:49.790 --> 00:14:52.159 align:middle line:10%
<c.magenta>它们下方的项目行更短</c>

00:14:52.226 --> 00:14:55.128 align:middle line:90%,end
<c.magenta>还可以在TableView 中</c>
<c.magenta>设置可变行高度</c>

00:14:55.896 --> 00:14:57.698 align:middle line:90%,end
<c.magenta>它们支持灵活的布局</c>

00:14:57.764 --> 00:15:01.068 align:middle line:10%
<c.magenta>TableView还支持行操作</c>
<c.magenta>这在iOS操作系统上很常见</c>

00:14:57.764 --> 00:15:01.068 align:middle line:10%
<c.magenta>TableView还支持行操作</c>
<c.magenta>这在iOS操作系统上很常见</c>

00:15:01.134 --> 00:15:04.104 align:middle line:10%
<c.magenta>你可以交换行位置</c>
<c.magenta>显示操作按钮</c>

00:15:04.171 --> 00:15:06.106 align:middle line:10%
<c.magenta>或者立即执行操作</c>

00:15:06.507 --> 00:15:08.575 align:middle line:10%
<c.magenta>TableView还支持变换动画</c>

00:15:08.642 --> 00:15:12.012 align:middle line:10%
<c.magenta>因此 如果你有一个动态更新的模型</c>
<c.magenta>而不需要用户进行任何操作</c>

00:15:12.079 --> 00:15:15.382 align:middle line:10%
<c.magenta>你可以提供视觉提示</c>
<c.magenta>表明项目已经被插入或删除</c>

00:15:15.449 --> 00:15:17.518 align:middle line:90%,end
<c.magenta>用户可以看到模型如何变化</c>

00:15:17.584 --> 00:15:19.553 align:middle line:90%,end
<c.magenta>并且立即反映出来</c>

00:15:21.388 --> 00:15:24.725 align:middle line:90%,end
<c.magenta>更重要的是 TableView</c>
<c.magenta>可以扩展以容纳大量的项目</c>

00:15:24.791 --> 00:15:27.961 align:middle line:90%,end
<c.magenta>对于要显示的内容</c>

00:15:28.028 --> 00:15:30.264 align:middle line:90%,end
<c.magenta>TableView在实例化视图时</c>
<c.magenta>非常谨慎</c>

00:15:30.330 --> 00:15:33.734 align:middle line:90%,end
<c.magenta>它有一小块预取区域</c>
<c.magenta>当用户执行滚动操作时</c>

00:15:33.800 --> 00:15:34.902 align:middle line:90%,end
<c.magenta>可以平滑地滚动显示</c>

00:15:35.669 --> 00:15:38.639 align:middle line:90%,end
<c.magenta>TableView将会回收</c>
<c.magenta>超过滚动显示范围之外的内容</c>

00:15:38.705 --> 00:15:40.707 align:middle line:90%,end
<c.magenta>而不是实例化全新项目</c>

00:15:40.874 --> 00:15:45.479 align:middle line:90%,end
<c.magenta>这些特性让其具备很好的扩展性</c>
<c.magenta>让你能够平滑地滚动显示内容</c>

00:15:45.546 --> 00:15:49.349 align:middle line:90%,end
<c.magenta>和动态地交互操作大量项目</c>

00:15:50.551 --> 00:15:53.754 align:middle line:90%,end
<c.magenta>TableView具有非常</c>
<c.magenta>灵活的内容封装功能</c>

00:15:53.820 --> 00:15:56.557 align:middle line:90%,end
<c.magenta>你可以使用绑定功能</c>
<c.magenta>从而减少代码编写工作量</c>

00:15:56.623 --> 00:15:59.560 align:middle line:90%,end
<c.magenta>也可以使用</c>
<c.magenta>基于索引的行数据源API</c>

00:15:59.626 --> 00:16:00.894 align:middle line:90%,end
<c.magenta>非常灵活</c>

00:15:59.626 --> 00:16:00.894 align:middle line:90%,end
<c.magenta>非常灵活</c>

00:16:00.994 --> 00:16:03.130 align:middle line:90%,end
<c.magenta>总而言之 其用途十分广泛</c>

00:16:03.197 --> 00:16:08.001 align:middle line:90%,end
<c.magenta>便于在macOS上显示</c>
<c.magenta>表格数据和简单列表</c>

00:16:10.237 --> 00:16:13.407 align:middle line:90%,end
<c.magenta>有一个面向Mac计算机的</c>
<c.magenta>编程指南 详细介绍</c>

00:16:13.473 --> 00:16:14.775 align:middle line:90%,end
<c.magenta>如何使用TableView</c>

00:16:14.842 --> 00:16:19.246 align:middle line:90%,end
<c.magenta>去年 有一场现代Cocoa应用</c>
<c.magenta>会话开发的演讲 通过一个例子</c>

00:16:19.313 --> 00:16:23.851 align:middle line:90%,end
<c.magenta>循序渐进地介绍</c>
<c.magenta>开发和配置基于视图的TableView应用</c>

00:16:23.917 --> 00:16:25.085 align:middle line:90%,end
<c.magenta>我强烈建议你们观看</c>

00:16:27.087 --> 00:16:29.523 align:middle line:90%,end
<c.magenta>我们已经讨论网格和列表</c>

00:16:29.590 --> 00:16:32.526 align:middle line:90%,end
<c.magenta>当我们想要处理树状结构的数据</c>

00:16:32.593 --> 00:16:36.196 align:middle line:90%,end
<c.magenta>或者处理文件、文件夹、</c>
<c.magenta>或者其他任何层级树结构数据模型时</c>

00:16:36.263 --> 00:16:39.533 align:middle line:90%,end
<c.magenta>应该怎么办呢？</c>

00:16:40.133 --> 00:16:42.469 align:middle line:90%,end
<c.magenta>这就需要用到NSOutlineView</c>

00:16:42.703 --> 00:16:45.873 align:middle line:10%
<c.magenta>OutlineView具有</c>
<c.magenta>TableView的所有功能</c>

00:16:45.939 --> 00:16:49.042 align:middle line:10%
<c.magenta>因为它是一个TableView</c>

00:16:49.309 --> 00:16:52.179 align:middle line:10%
<c.magenta>NSOutlineView是</c>
<c.magenta>NSTableView的子集</c>

00:16:52.246 --> 00:16:54.915 align:middle line:10%
<c.magenta>因此 TableView的所有功能</c>

00:16:54.982 --> 00:16:56.850 align:middle line:10%
<c.magenta>也适用于OutlineView</c>

00:16:57.050 --> 00:17:00.921 align:middle line:10%
<c.magenta>在上方 OutlineView是</c>
<c.magenta>一个层级数据模型</c>

00:16:57.050 --> 00:17:00.921 align:middle line:10%
<c.magenta>在上方 OutlineView是</c>
<c.magenta>一个层级数据模型</c>

00:17:02.222 --> 00:17:05.125 align:middle line:10%
<c.magenta>它跟踪你所指定的模型对象</c>

00:17:05.192 --> 00:17:07.728 align:middle line:10%
<c.magenta>及其子对象以及子节点等等</c>

00:17:08.328 --> 00:17:11.298 align:middle line:10%
<c.magenta>在用户界面中</c>
<c.magenta>OutlineView的一个优点是</c>

00:17:11.365 --> 00:17:15.969 align:middle line:90%,end
<c.magenta>它并不强制用户一次性浏览</c>
<c.magenta>所显示的整个树结构</c>

00:17:16.136 --> 00:17:19.772 align:middle line:90%,end
<c.magenta>你可以使用程序</c>
<c.magenta>来设置显示哪些特定的内部节点</c>

00:17:19.839 --> 00:17:21.340 align:middle line:90%,end
<c.magenta>或者收起哪些节点</c>

00:17:21.708 --> 00:17:25.012 align:middle line:90%,end
<c.magenta>用户可以进行选择</c>
<c.magenta>只需点击展开三角形按钮</c>

00:17:25.078 --> 00:17:26.646 align:middle line:90%,end
<c.magenta>也可以通过程序</c>

00:17:26.713 --> 00:17:30.617 align:middle line:90%,end
<c.magenta>选择性地显示</c>
<c.magenta>用户想要查看的特定子树</c>

00:17:32.786 --> 00:17:35.489 align:middle line:10%
<c.magenta>OutlineView的另一个优点是</c>

00:17:35.556 --> 00:17:37.024 align:middle line:10%
<c.magenta>允许查看多个分支</c>

00:17:37.090 --> 00:17:40.060 align:middle line:10%
<c.magenta>可以同时显示层级结构的</c>
<c.magenta>多个子树结构</c>

00:17:40.127 --> 00:17:43.330 align:middle line:90%,end
<c.magenta>这十分有用</c>
<c.magenta>比如说在查找程序的列表视图中</c>

00:17:43.397 --> 00:17:44.932 align:middle line:90%,end
<c.magenta>如果你有一个文件夹子树</c>

00:17:44.998 --> 00:17:47.234 align:middle line:90%,end
<c.magenta>你想要删除</c>
<c.magenta>这个文件夹中的文件</c>

00:17:47.601 --> 00:17:49.670 align:middle line:90%,end
<c.magenta>可以很轻松地完成操作</c>

00:17:51.171 --> 00:17:54.341 align:middle line:90%,end
<c.magenta>如我所述 TableView的一切</c>
<c.magenta>都适用于OutlineView</c>

00:17:54.408 --> 00:17:57.044 align:middle line:90%,end
<c.magenta>因此TableView编程指南</c>
<c.magenta>是一个很不错的参考材料</c>

00:17:57.110 --> 00:17:59.780 align:middle line:90%,end
<c.magenta>另外还有一个</c>
<c.magenta>OutlineView编程指南</c>

00:17:59.847 --> 00:18:03.851 align:middle line:90%,end
<c.magenta>总结OutlineView</c>
<c.magenta>和TableView的区别</c>

00:17:59.847 --> 00:18:03.851 align:middle line:90%,end
<c.magenta>总结OutlineView</c>
<c.magenta>和TableView的区别</c>

00:18:06.053 --> 00:18:07.888 align:middle line:90%,end
<c.magenta>我们还提供另一个选择</c>

00:18:07.955 --> 00:18:10.757 align:middle line:90%,end
<c.magenta>如果你拥有基于树形结构的数据</c>
<c.magenta>希望用户能够浏览</c>

00:18:10.824 --> 00:18:13.193 align:middle line:90%,end
<c.magenta>我们可以使用NSBrowser</c>

00:18:13.527 --> 00:18:16.263 align:middle line:10%
<c.magenta>这是一个NSBrowser例子</c>
<c.magenta>它含有两个列</c>

00:18:17.364 --> 00:18:20.968 align:middle line:10%
<c.magenta>左边的列显示项目的根列表</c>

00:18:21.034 --> 00:18:22.069 align:middle line:10%
<c.magenta>右边的列</c>

00:18:22.135 --> 00:18:25.405 align:middle line:10%
<c.magenta>显示左边列表项的子项目</c>

00:18:26.540 --> 00:18:29.576 align:middle line:90%,end
<c.magenta>这个例子类似于</c>
<c.magenta>查找程序的ColumnView</c>

00:18:30.177 --> 00:18:31.445 align:middle line:90%,end
<c.magenta>这里有三个列</c>

00:18:32.079 --> 00:18:33.780 align:middle line:90%,end
<c.magenta>左侧的列中选定一个文件夹</c>

00:18:33.847 --> 00:18:35.415 align:middle line:90%,end
<c.magenta>我们想要显示该文件夹的内容</c>

00:18:35.482 --> 00:18:36.717 align:middle line:90%,end
<c.magenta>并在右侧预览</c>

00:18:37.885 --> 00:18:41.755 align:middle line:90%,end
<c.magenta>NSBrowser是一个</c>
<c.magenta>基于列的展开式UI</c>

00:18:41.822 --> 00:18:44.525 align:middle line:90%,end
<c.magenta>当用户点击选择列中的项目时</c>

00:18:44.591 --> 00:18:46.593 align:middle line:90%,end
<c.magenta>右侧将会显示更多的列</c>

00:18:46.660 --> 00:18:48.495 align:middle line:90%,end
<c.magenta>或者在左侧显示</c>
<c.magenta>如果我们运行RTL</c>

00:18:48.562 --> 00:18:50.631 align:middle line:90%,end
<c.magenta>用户可以展开</c>

00:18:50.697 --> 00:18:52.933 align:middle line:90%,end
<c.magenta>浏览特定的树分支</c>

00:18:54.334 --> 00:18:55.702 align:middle line:90%,end
<c.magenta>用户可以调整列的大小</c>

00:18:55.769 --> 00:18:59.006 align:middle line:90%,end
<c.magenta>因此 用户可以进行配置</c>
<c.magenta>有效地使用水平空间</c>

00:19:00.274 --> 00:19:02.776 align:middle line:90%,end
<c.magenta>它还有一些新功能</c>
<c.magenta>例如可选的自定义标题视图</c>

00:19:02.843 --> 00:19:05.245 align:middle line:90%,end
<c.magenta>可以在列顶部放置任何视图</c>

00:19:06.079 --> 00:19:10.784 align:middle line:90%,end
<c.magenta>如果想要构建</c>
<c.magenta>基于浏览器的主详情界面</c>

00:19:10.851 --> 00:19:14.421 align:middle line:90%,end
<c.magenta>可以为浏览器</c>
<c.magenta>自定义预览视图控制器</c>

00:19:14.488 --> 00:19:17.758 align:middle line:90%,end
<c.magenta>进行配置之后</c>
<c.magenta>当用户展开到叶节点时</c>

00:19:17.991 --> 00:19:20.427 align:middle line:90%,end
<c.magenta>可以在一个视图上</c>
<c.magenta>显示一个列</c>

00:19:20.494 --> 00:19:23.664 align:middle line:90%,end
<c.magenta>从而显示对象属性的详细描述</c>

00:19:23.730 --> 00:19:27.034 align:middle line:90%,end
<c.magenta>这类似于查找程序中的列视图</c>

00:19:30.304 --> 00:19:33.807 align:middle line:90%,end
<c.magenta>Outline View与NSBrowser</c>
<c.magenta>之间的用户界面区别</c>

00:19:33.874 --> 00:19:37.044 align:middle line:90%,end
<c.magenta>用户一次只能查看一个树分支</c>

00:19:37.110 --> 00:19:39.179 align:middle line:90%,end
<c.magenta>在很多情况下 这已经够用了</c>

00:19:39.246 --> 00:19:40.581 align:middle line:90%,end
<c.magenta>而且这能够</c>

00:19:40.647 --> 00:19:42.749 align:middle line:90%,end
<c.magenta>更高效地利用垂直空间</c>

00:19:44.151 --> 00:19:46.286 align:middle line:90%,end
<c.magenta>我们有一个浏览器编程指南</c>

00:19:46.353 --> 00:19:48.555 align:middle line:90%,end
<c.magenta>而且附带一些示例代码</c>

00:19:48.622 --> 00:19:50.057 align:middle line:90%,end
<c.magenta>指导你学习如何使用浏览器</c>

00:19:50.123 --> 00:19:51.558 align:middle line:90%,end
<c.magenta>（自定义布局如何呢？）</c>

00:19:51.625 --> 00:19:53.360 align:middle line:90%,end
<c.magenta>最后让我们来讨论自定义布局</c>

00:19:53.427 --> 00:19:56.396 align:middle line:90%,end
<c.magenta>前面我说过 我们的布局</c>
<c.magenta>不仅局限于网格和列表</c>

00:19:56.964 --> 00:19:58.899 align:middle line:90%,end
<c.magenta>有时还需要使用NSCollectionView</c>

00:19:58.966 --> 00:20:02.202 align:middle line:90%,end
<c.magenta>NSCollectionView是一种</c>
<c.magenta>非常灵活、多用途、可自定义</c>

00:19:58.966 --> 00:20:02.202 align:middle line:90%,end
<c.magenta>NSCollectionView是一种</c>
<c.magenta>非常灵活、多用途、可自定义</c>

00:20:02.269 --> 00:20:03.637 align:middle line:90%,end
<c.magenta>而且可扩展的项目视图</c>

00:20:04.671 --> 00:20:07.407 align:middle line:90%,end
<c.magenta>它支持任意开发者定制布局</c>

00:20:07.474 --> 00:20:11.311 align:middle line:90%,end
<c.magenta>如果想要使用程序设定的</c>
<c.magenta>一系列矩形</c>

00:20:11.378 --> 00:20:13.514 align:middle line:90%,end
<c.magenta>可以插入CollectionView布局</c>

00:20:13.580 --> 00:20:15.782 align:middle line:90%,end
<c.magenta>它会相应地调整</c>
<c.magenta>项目的大小和位置</c>

00:20:17.150 --> 00:20:19.520 align:middle line:90%,end
<c.magenta>另外 它提供一个简单的</c>
<c.magenta>封装布局 称为流</c>

00:20:19.586 --> 00:20:22.389 align:middle line:90%,end
<c.magenta>依次显示尽可能多的项目</c>
<c.magenta>与页面上显示的文本一样</c>

00:20:22.456 --> 00:20:24.491 align:middle line:90%,end
<c.magenta>也可以用列显示项目</c>

00:20:26.026 --> 00:20:30.831 align:middle line:90%,end
<c.magenta>CollectionView也能够</c>
<c.magenta>将项目划分为多个区域</c>

00:20:30.898 --> 00:20:32.633 align:middle line:90%,end
<c.magenta>若你想用这种方式对它们进行分组</c>

00:20:32.699 --> 00:20:35.836 align:middle line:90%,end
<c.magenta>每个区域都可以</c>
<c.magenta>有一个标题视图和一个页脚视图</c>

00:20:35.903 --> 00:20:37.971 align:middle line:90%,end
<c.magenta>你完全可以自定义设计</c>

00:20:38.906 --> 00:20:42.376 align:middle line:90%,end
<c.magenta>另外 它支持用户交互功能</c>
<c.magenta>比如选择项目</c>

00:20:42.442 --> 00:20:45.846 align:middle line:90%,end
<c.magenta>拖放项目</c>
<c.magenta>在CollectionView内重新排序</c>

00:20:45.913 --> 00:20:47.181 align:middle line:90%,end
<c.magenta>拖出拖入等</c>

00:20:48.515 --> 00:20:51.919 align:middle line:90%,end
<c.magenta>与视图方式一样 TableView</c>
<c.magenta>和OutlineView支持任意项目显示</c>

00:20:51.985 --> 00:20:55.389 align:middle line:90%,end
<c.magenta>你可以使用自己的自定义视图</c>
<c.magenta>构建任何视图子树结构</c>

00:20:55.455 --> 00:20:57.624 align:middle line:90%,end
<c.magenta>在本例中 使用的是</c>
<c.magenta>标准AppKit视图</c>

00:20:59.226 --> 00:21:01.628 align:middle line:10%
<c.magenta>与基于视图的TableView</c>
<c.magenta>和OutlineView一样</c>

00:20:59.226 --> 00:21:01.628 align:middle line:10%
<c.magenta>与基于视图的TableView</c>
<c.magenta>和OutlineView一样</c>

00:21:01.695 --> 00:21:05.132 align:middle line:10%
<c.magenta>它非常智能</c>
<c.magenta>仅实例化必要项目</c>

00:21:05.199 --> 00:21:08.268 align:middle line:10%
<c.magenta>并且回收项目使用的资源</c>
<c.magenta>因此我们可以保持高性能</c>

00:21:08.335 --> 00:21:10.504 align:middle line:10%
<c.magenta>即使在处理大量项目时</c>

00:21:11.271 --> 00:21:13.574 align:middle line:10%
<c.magenta>它还可以显示动画</c>
<c.magenta>插入 删除 和移动</c>

00:21:13.640 --> 00:21:17.511 align:middle line:10%
<c.magenta>类似于TableView 和OutlineView</c>
<c.magenta>另外 还可以在布局之间过渡</c>

00:21:19.546 --> 00:21:23.550 align:middle line:90%,end
<c.magenta>两年前 我们有一场演讲</c>
<c.magenta>专门讨论CollectionView</c>

00:21:23.984 --> 00:21:26.587 align:middle line:90%,end
<c.magenta>其内容与UICollectionView</c>
<c.magenta>十分相似</c>

00:21:27.120 --> 00:21:30.624 align:middle line:90%,end
<c.magenta>另外还有CocoaSlideCollection</c>
<c.magenta>示例代码</c>

00:21:30.691 --> 00:21:32.426 align:middle line:90%,end
<c.magenta>我强烈建议你们观看</c>

00:21:32.826 --> 00:21:36.763 align:middle line:90%,end
<c.magenta>我们已经学习六个视图类</c>

00:21:36.830 --> 00:21:40.934 align:middle line:90%,end
<c.magenta>它们来自于AppKit</c>
<c.magenta>的庞大预设类库</c>

00:21:41.001 --> 00:21:44.004 align:middle line:90%,end
<c.magenta>而且我们增加了大量的功能</c>

00:21:44.071 --> 00:21:45.639 align:middle line:90%,end
<c.magenta>每一种视图本身都非常有用</c>

00:21:45.706 --> 00:21:48.842 align:middle line:90%,end
<c.magenta>这些视图还有一些重叠的应用领域</c>

00:21:48.909 --> 00:21:52.446 align:middle line:90%,end
<c.magenta>因此 这些指南可以</c>
<c.magenta>帮助我们在不同的</c>

00:21:52.513 --> 00:21:55.282 align:middle line:90%,end
<c.magenta>用户界面设计中</c>

00:21:55.349 --> 00:21:56.383 align:middle line:90%,end
<c.magenta>使用合适的视图</c>

00:21:56.550 --> 00:21:58.886 align:middle line:90%,end
<c.magenta>为了帮助我们正确使用这些技术</c>
<c.magenta>为我们提供指导</c>

00:21:58.952 --> 00:22:01.688 align:middle line:90%,end
<c.magenta>我的同事雷利·雷德</c>
<c.magenta>将会演示一些用例</c>

00:21:58.952 --> 00:22:01.688 align:middle line:90%,end
<c.magenta>我的同事雷利·雷德</c>
<c.magenta>将会演示一些用例</c>

00:22:01.755 --> 00:22:04.925 align:middle line:90%,end
<c.magenta>帮助大家创建完美的UI</c>

00:22:04.992 --> 00:22:06.426 align:middle line:90%,end
<c.magenta>-谢谢特洛伊</c>
<c.magenta>-谢谢雷利</c>

00:22:13.534 --> 00:22:16.470 align:middle line:90%,end
<c.magenta>现在 大家已经学习</c>

00:22:16.537 --> 00:22:19.873 align:middle line:90%,end
<c.magenta>各种ContainerView样式及功能</c>

00:22:19.940 --> 00:22:22.009 align:middle line:90%,end
<c.magenta>你们可能已知道</c>
<c.magenta>应该如何在你们的应用中</c>

00:22:22.075 --> 00:22:23.143 align:middle line:90%,end
<c.magenta>使用它们</c>

00:22:23.577 --> 00:22:25.946 align:middle line:90%,end
<c.magenta>但是 有些时候难以做出选择</c>

00:22:26.013 --> 00:22:27.381 align:middle line:90%,end
<c.magenta>因此我想后退一步</c>

00:22:28.248 --> 00:22:31.351 align:middle line:90%,end
<c.magenta>总体回顾刚才学习的内容</c>

00:22:31.718 --> 00:22:33.453 align:middle line:90%,end
<c.magenta>从广义角度来看</c>

00:22:33.520 --> 00:22:37.591 align:middle line:90%,end
<c.magenta>我们可以将ContainerView</c>
<c.magenta>分为两个大类别</c>

00:22:37.991 --> 00:22:42.529 align:middle line:90%,end
<c.magenta>也就是StackView和GridView</c>
<c.magenta>我们称之为纯布局容器</c>

00:22:42.896 --> 00:22:45.632 align:middle line:90%,end
<c.magenta>它们所做的事情是为你提供布局</c>

00:22:46.200 --> 00:22:48.168 align:middle line:90%,end
<c.magenta>让你不必自己处理所有布局约束</c>

00:22:48.235 --> 00:22:50.504 align:middle line:90%,end
<c.magenta>从而更轻松地设计</c>
<c.magenta>想要的布局</c>

00:22:50.871 --> 00:22:52.940 align:middle line:90%,end
<c.magenta>它们不进行任何绘图或选择</c>

00:22:53.440 --> 00:22:56.210 align:middle line:90%,end
<c.magenta>利用CollectionView、</c>
<c.magenta>TableView、OutlineView和Browser</c>

00:22:56.276 --> 00:22:59.379 align:middle line:90%,end
<c.magenta>我们获得所需要的</c>
<c.magenta>数据回调ContainerView</c>

00:22:59.713 --> 00:23:02.816 align:middle line:90%,end
<c.magenta>这些视图高效率地添加和删除视图</c>

00:22:59.713 --> 00:23:02.816 align:middle line:90%,end
<c.magenta>这些视图高效率地添加和删除视图</c>

00:23:02.883 --> 00:23:06.920 align:middle line:90%,end
<c.magenta>这取决于你提供的数据源和绑定数据</c>

00:23:08.121 --> 00:23:11.592 align:middle line:90%,end
<c.magenta>如果我们查看CollectionView</c>
<c.magenta>的数据源集合</c>

00:23:11.658 --> 00:23:13.493 align:middle line:90%,end
<c.magenta>我们可以细分显示数据内容</c>

00:23:13.861 --> 00:23:15.229 align:middle line:90%,end
<c.magenta>如果你的数据是表格类型的</c>

00:23:15.295 --> 00:23:17.931 align:middle line:90%,end
<c.magenta>可以使用</c>
<c.magenta>TableView 或OutlineView</c>

00:23:18.599 --> 00:23:20.534 align:middle line:90%,end
<c.magenta>如果数据是树状结构的</c>

00:23:20.601 --> 00:23:23.003 align:middle line:90%,end
<c.magenta>可以使用OutlineView</c>
<c.magenta>而不是NSBrowser</c>

00:23:23.804 --> 00:23:27.641 align:middle line:90%,end
<c.magenta>如果创建网格样式布局</c>
<c.magenta>或者需要自定义布局</c>

00:23:27.708 --> 00:23:30.477 align:middle line:90%,end
<c.magenta>可以使用CollectionView</c>

00:23:31.912 --> 00:23:34.948 align:middle line:90%,end
<c.magenta>为了进行总结</c>
<c.magenta>让我们来看一些应用案例</c>

00:23:35.015 --> 00:23:37.918 align:middle line:90%,end
<c.magenta>和一些实际例子</c>
<c.magenta>我们先来看一个邮件应用</c>

00:23:38.185 --> 00:23:41.555 align:middle line:10%
<c.magenta>具体来说 我想要</c>
<c.magenta>启动一个邮件消息列表</c>

00:23:41.622 --> 00:23:45.692 align:middle line:10%
<c.magenta>然后分析我们如何创建</c>
<c.magenta>这个的设计以及为什么要这样做</c>

00:23:47.194 --> 00:23:51.632 align:middle line:90%,end
<c.magenta>我们首先启动</c>
<c.magenta>CollectionView列表</c>

00:23:52.699 --> 00:23:55.102 align:middle line:90%,end
<c.magenta>让我们思考邮件消息列表</c>

00:23:55.169 --> 00:23:56.904 align:middle line:90%,end
<c.magenta>可能具有的不同类型的属性</c>

00:23:57.304 --> 00:24:01.775 align:middle line:90%,end
<c.magenta>我的邮箱里有数份邮件</c>

00:23:57.304 --> 00:24:01.775 align:middle line:90%,end
<c.magenta>我的邮箱里有数份邮件</c>

00:24:01.975 --> 00:24:04.578 align:middle line:90%,end
<c.magenta>你的邮件客户端需要能够处理</c>

00:24:04.645 --> 00:24:06.246 align:middle line:90%,end
<c.magenta>大量的邮件</c>

00:24:06.880 --> 00:24:08.549 align:middle line:90%,end
<c.magenta>我们需要使用</c>

00:24:08.615 --> 00:24:10.918 align:middle line:90%,end
<c.magenta>一个数据回调存储界面</c>
<c.magenta>ContainerView</c>

00:24:11.251 --> 00:24:15.022 align:middle line:90%,end
<c.magenta>我们应该高效率地使用视图</c>
<c.magenta>和内存并且获得灵敏的滚动响应</c>

00:24:17.191 --> 00:24:21.094 align:middle line:90%,end
<c.magenta>当然 我们还需要选择功能</c>
<c.magenta>以便向用户显示</c>

00:24:21.161 --> 00:24:23.363 align:middle line:90%,end
<c.magenta>他们想要查看的邮件正文</c>

00:24:23.997 --> 00:24:28.101 align:middle line:90%,end
<c.magenta>我们将需要…</c>
<c.magenta>每份邮件都有很多属性…</c>

00:24:28.435 --> 00:24:31.338 align:middle line:90%,end
<c.magenta>比如发件人 主题 日期等等</c>

00:24:32.139 --> 00:24:34.641 align:middle line:90%,end
<c.magenta>如果你查看所有不同的属性</c>

00:24:34.708 --> 00:24:37.211 align:middle line:90%,end
<c.magenta>可能认为需要使用表格视图</c>

00:24:37.611 --> 00:24:40.714 align:middle line:90%,end
<c.magenta>而事实上 数据的组织结构</c>
<c.magenta>更像是树形</c>

00:24:40.781 --> 00:24:42.749 align:middle line:90%,end
<c.magenta>因此我们不需要</c>
<c.magenta>CollectionView或Browser</c>

00:24:43.317 --> 00:24:44.418 align:middle line:90%,end
<c.magenta>但是…</c>

00:24:45.752 --> 00:24:47.087 align:middle line:90%,end
<c.magenta>请再思考一下</c>

00:24:47.754 --> 00:24:51.024 align:middle line:90%,end
<c.magenta>我们可以取出</c>
<c.magenta>属于相同对话类别的所有邮件</c>

00:24:51.091 --> 00:24:53.894 align:middle line:90%,end
<c.magenta>将它们分组在一起</c>
<c.magenta>也许还可以重叠它们</c>

00:24:54.328 --> 00:24:56.997 align:middle line:90%,end
<c.magenta>这时 OutlineView</c>
<c.magenta>就成为理想的选择</c>

00:24:57.231 --> 00:24:59.433 align:middle line:10%
<c.magenta>如果你看看传统的邮件视图</c>

00:24:59.499 --> 00:25:01.468 align:middle line:10%
<c.magenta>如果你开启这个模式</c>
<c.magenta>这就是你所看到的</c>

00:24:59.499 --> 00:25:01.468 align:middle line:10%
<c.magenta>如果你开启这个模式</c>
<c.magenta>这就是你所看到的</c>

00:25:01.535 --> 00:25:02.736 align:middle line:10%
<c.magenta>有一个边框视图</c>

00:25:02.803 --> 00:25:06.139 align:middle line:10%
<c.magenta>邮件正文位于底部面板</c>

00:25:07.541 --> 00:25:11.245 align:middle line:10%
<c.magenta>这很好</c>
<c.magenta>但是这里的空间利用不理想</c>

00:25:11.912 --> 00:25:17.117 align:middle line:10%
<c.magenta>具体来说 我想讨论邮件的正文</c>

00:25:17.751 --> 00:25:20.287 align:middle line:10%
<c.magenta>如果不滚动</c>
<c.magenta>我甚至无法看到完整的邮件内容</c>

00:25:20.354 --> 00:25:22.589 align:middle line:10%
<c.magenta>而这份邮件并不是很长</c>

00:25:23.357 --> 00:25:29.730 align:middle line:10%
<c.magenta>作为用户 我可以更改</c>
<c.magenta>分拆视图 增加更多空间</c>

00:25:29.796 --> 00:25:32.099 align:middle line:10%
<c.magenta>然后 我会减小</c>
<c.magenta>OutlineView和</c>

00:25:32.165 --> 00:25:33.233 align:middle line:10%
<c.magenta>邮件列表中的空间</c>

00:25:33.300 --> 00:25:36.603 align:middle line:10%
<c.magenta>我可以滚动显示更多内容</c>
<c.magenta>以找到我想要查看的邮件</c>

00:25:37.204 --> 00:25:41.108 align:middle line:90%,end
<c.magenta>如果我们调整布局</c>
<c.magenta>可以得到这样的设计</c>

00:25:41.408 --> 00:25:44.044 align:middle line:10%
<c.magenta>我们所做的事情</c>
<c.magenta>是使用一个综合表格单元</c>

00:25:44.111 --> 00:25:48.815 align:middle line:10%
<c.magenta>它是单列表格视图</c>
<c.magenta>每个单元格都是一个综合单元格</c>

00:25:48.882 --> 00:25:51.218 align:middle line:10%
<c.magenta>因此 我们将所有属性</c>
<c.magenta>放入这个单元格</c>

00:25:51.418 --> 00:25:54.655 align:middle line:10%
<c.magenta>这会打开一个右侧窗口</c>

00:25:54.721 --> 00:25:57.424 align:middle line:10%
<c.magenta>我们可以调出完整邮件内容</c>

00:25:57.491 --> 00:26:01.628 align:middle line:10%
<c.magenta>现在 用户可以阅读更多邮件内容</c>
<c.magenta>而且减少滚动</c>

00:25:57.491 --> 00:26:01.628 align:middle line:10%
<c.magenta>现在 用户可以阅读更多邮件内容</c>
<c.magenta>而且减少滚动</c>

00:26:02.162 --> 00:26:04.231 align:middle line:10%
<c.magenta>由于我们使用垂直分拆视图</c>

00:26:05.032 --> 00:26:07.768 align:middle line:10%
<c.magenta>无论用户如何更改分拆视图的大小</c>

00:26:07.835 --> 00:26:11.705 align:middle line:10%
<c.magenta>我始终能够在单列列表中</c>
<c.magenta>看到相同数量的邮件</c>

00:26:12.072 --> 00:26:13.540 align:middle line:90%,end
<c.magenta>因此我不必…</c>

00:26:13.607 --> 00:26:15.475 align:middle line:90%,end
<c.magenta>我不必改变滚动频率</c>

00:26:15.542 --> 00:26:17.244 align:middle line:90%,end
<c.magenta>无论分拆视图如何变化</c>

00:26:18.278 --> 00:26:22.416 align:middle line:90%,end
<c.magenta>让我们进一步研究并分析其利弊</c>

00:26:24.585 --> 00:26:26.253 align:middle line:90%,end
<c.magenta>其中一个缺点是无法进行排序</c>

00:26:26.320 --> 00:26:29.022 align:middle line:10%
<c.magenta>由于没有表格标题</c>
<c.magenta>用户无法进行排序</c>

00:26:29.089 --> 00:26:31.391 align:middle line:10%
<c.magenta>改变排序可能十分有用</c>

00:26:31.558 --> 00:26:34.361 align:middle line:10%
<c.magenta>必须进入邮件添加更多控件</c>

00:26:34.428 --> 00:26:35.896 align:middle line:10%
<c.magenta>用户才能排序</c>

00:26:37.531 --> 00:26:40.067 align:middle line:10%
<c.magenta>用户无法完全控制</c>
<c.magenta>每个属性的大小</c>

00:26:40.601 --> 00:26:43.504 align:middle line:10%
<c.magenta>在使用多个单列时</c>
<c.magenta>列大小可能会发生变化</c>

00:26:43.570 --> 00:26:45.672 align:middle line:10%
<c.magenta>举例来说 可能会增大发件人列宽</c>

00:26:45.739 --> 00:26:47.074 align:middle line:10%
<c.magenta>或者增大主题列宽</c>

00:26:47.140 --> 00:26:48.976 align:middle line:10%
<c.magenta>让它们能够一次阅读更多的主题</c>

00:26:49.776 --> 00:26:54.681 align:middle line:10%
<c.magenta>但是 事实上我们能够</c>
<c.magenta>重点显示最常用的内容</c>

00:26:55.082 --> 00:26:58.018 align:middle line:90%,end
<c.magenta>举例来说 如果我们查看</c>
<c.magenta>其中一个单元格</c>

00:26:58.085 --> 00:27:02.055 align:middle line:90%,end
<c.magenta>我们看到邮件的发件人</c>
<c.magenta>用漂亮的粗体显示</c>

00:26:58.085 --> 00:27:02.055 align:middle line:90%,end
<c.magenta>我们看到邮件的发件人</c>
<c.magenta>用漂亮的粗体显示</c>

00:27:02.923 --> 00:27:05.893 align:middle line:90%,end
<c.magenta>然后在右边 我们看到日期</c>

00:27:06.393 --> 00:27:08.028 align:middle line:90%,end
<c.magenta>我们把这些项目放入StackView</c>

00:27:08.095 --> 00:27:11.765 align:middle line:90%,end
<c.magenta>让StackView自动处理</c>

00:27:11.832 --> 00:27:13.634 align:middle line:90%,end
<c.magenta>这两个相邻视图的布局</c>

00:27:13.700 --> 00:27:17.871 align:middle line:90%,end
<c.magenta>日期需要的空间更大一些</c>
<c.magenta>视具体的日期而定</c>

00:27:18.105 --> 00:27:20.440 align:middle line:90%,end
<c.magenta>它会自动占用发件人的空间</c>

00:27:21.441 --> 00:27:24.077 align:middle line:90%,end
<c.magenta>主题行也是如此</c>

00:27:24.144 --> 00:27:26.547 align:middle line:90%,end
<c.magenta>它显示为漂亮的粗体</c>
<c.magenta>可以使用邮件正文的单行预览</c>

00:27:26.613 --> 00:27:29.416 align:middle line:90%,end
<c.magenta>显示其内容</c>

00:27:29.483 --> 00:27:30.851 align:middle line:90%,end
<c.magenta>其文本颜色更深一些</c>

00:27:30.918 --> 00:27:34.521 align:middle line:90%,end
<c.magenta>这样 我们可以重点显示发件人</c>
<c.magenta>然后重点显示邮件主题</c>

00:27:35.155 --> 00:27:37.124 align:middle line:90%,end
<c.magenta>我们也可以将它们</c>
<c.magenta>放入一个StackView</c>

00:27:37.191 --> 00:27:38.892 align:middle line:90%,end
<c.magenta>合适地显示邮件内容</c>

00:27:39.693 --> 00:27:42.062 align:middle line:90%,end
<c.magenta>然后 这里有一些标记</c>
<c.magenta>和其它一些属性</c>

00:27:42.129 --> 00:27:45.999 align:middle line:90%,end
<c.magenta>我们可以将其余内容</c>
<c.magenta>嵌入一个GridView</c>

00:27:47.367 --> 00:27:50.537 align:middle line:10%
<c.magenta>最终我们的邮件列表</c>
<c.magenta>成为一个TableView</c>

00:27:50.704 --> 00:27:52.606 align:middle line:10%
<c.magenta>它包含一个GridView</c>

00:27:52.673 --> 00:27:54.575 align:middle line:10%
<c.magenta>里面嵌入一个StackView</c>

00:27:57.177 --> 00:27:59.847 align:middle line:90%,end
<c.magenta>接下来看预览</c>
<c.magenta>也是就是边栏</c>

00:28:00.581 --> 00:28:04.585 align:middle line:10%
<c.magenta>在这里 我要显示</c>
<c.magenta>《美国税法》PDF文件</c>

00:28:07.054 --> 00:28:10.290 align:middle line:10%
<c.magenta>我们想要在边栏</c>
<c.magenta>显示每个PDF页面的预览</c>

00:28:10.824 --> 00:28:13.727 align:middle line:90%,end
<c.magenta>我们再次从ContainerView开始</c>

00:28:14.595 --> 00:28:16.597 align:middle line:90%,end
<c.magenta>请思考PDF的属性</c>

00:28:16.797 --> 00:28:18.632 align:middle line:90%,end
<c.magenta>可能会很有很多的页面</c>

00:28:18.899 --> 00:28:23.971 align:middle line:90%,end
<c.magenta>《美国税法》PDF页数</c>
<c.magenta>超过6500页</c>

00:28:24.538 --> 00:28:26.740 align:middle line:90%,end
<c.magenta>当然 需要能够选择其中的页面</c>
<c.magenta>甚至应该能够重新排序</c>

00:28:26.807 --> 00:28:30.277 align:middle line:90%,end
<c.magenta>预览功能允许你重新排序</c>
<c.magenta>PDF页面和另存文件</c>

00:28:31.545 --> 00:28:32.946 align:middle line:90%,end
<c.magenta>我个人特别喜欢</c>

00:28:33.013 --> 00:28:35.849 align:middle line:90%,end
<c.magenta>使用这个功能</c>
<c.magenta>来挑出PDF文件中的空白页</c>

00:28:35.916 --> 00:28:37.017 align:middle line:90%,end
<c.magenta>和另存文件</c>

00:28:38.285 --> 00:28:41.121 align:middle line:90%,end
<c.magenta>但是这意味着</c>
<c.magenta>我们需要支持数据源的视图组件</c>

00:28:41.188 --> 00:28:44.892 align:middle line:90%,end
<c.magenta>我们再次使用StackView 和GridView</c>
<c.magenta>我们将取出内容</c>

00:28:45.459 --> 00:28:47.327 align:middle line:90%,end
<c.magenta>然后我们进一步研究</c>

00:28:47.394 --> 00:28:51.965 align:middle line:90%,end
<c.magenta>由于有一个单列垂直布局</c>
<c.magenta>因此不需要使用浏览器</c>

00:28:54.701 --> 00:28:57.037 align:middle line:90%,end
<c.magenta>另外还需要可折叠的类别</c>

00:28:58.672 --> 00:29:00.240 align:middle line:90%,end
<c.magenta>刚开始时 我显示过一个截屏</c>

00:28:58.672 --> 00:29:00.240 align:middle line:90%,end
<c.magenta>刚开始时 我显示过一个截屏</c>

00:29:00.307 --> 00:29:03.544 align:middle line:90%,end
<c.magenta>PDF文件名旁边</c>
<c.magenta>有一个小提示三角</c>

00:29:03.744 --> 00:29:06.480 align:middle line:90%,end
<c.magenta>预览功能让你能够在一个窗口中</c>

00:29:06.547 --> 00:29:08.282 align:middle line:90%,end
<c.magenta>同时查看多页PDF</c>

00:29:08.348 --> 00:29:10.384 align:middle line:90%,end
<c.magenta>而且可以很方便地</c>

00:29:10.450 --> 00:29:12.819 align:middle line:90%,end
<c.magenta>跳转页面和重新布局</c>

00:29:14.054 --> 00:29:16.056 align:middle line:90%,end
<c.magenta>由于我们需要可折叠的类别</c>

00:29:17.257 --> 00:29:18.292 align:middle line:90%,end
<c.magenta>因此必须排除TableView</c>

00:29:18.358 --> 00:29:20.594 align:middle line:10%
<c.magenta>那么还剩下CollectionView</c>
<c.magenta>或OutlineView可供选择</c>

00:29:21.528 --> 00:29:24.064 align:middle line:10%
<c.magenta>这是一个有趣的选择</c>

00:29:24.131 --> 00:29:25.365 align:middle line:10%
<c.magenta>应该选择哪一个呢？</c>

00:29:25.899 --> 00:29:28.468 align:middle line:10%
<c.magenta>当我们调整边栏大小时</c>
<c.magenta>会发生什么呢？</c>

00:29:28.535 --> 00:29:31.238 align:middle line:10%
<c.magenta>你可以看到页面预览</c>

00:29:31.305 --> 00:29:36.310 align:middle line:10%
<c.magenta>在垂直和水平维度比例变大</c>

00:29:37.144 --> 00:29:39.413 align:middle line:10%
<c.magenta>传统地 如果利用OutlineView</c>
<c.magenta>将需要添加更多的代码</c>

00:29:39.479 --> 00:29:43.884 align:middle line:10%
<c.magenta>因为需要调整行高度</c>

00:29:43.951 --> 00:29:46.987 align:middle line:10%
<c.magenta>当用户移动分拆视图时</c>
<c.magenta>需要处理这些工作</c>

00:29:47.454 --> 00:29:49.323 align:middle line:10%
<c.magenta>但在macOS High Sierra中</c>

00:29:49.389 --> 00:29:52.626 align:middle line:10%
<c.magenta>OutlineView会自动地</c>
<c.magenta>为你处理这些事情</c>

00:29:54.161 --> 00:29:55.562 align:middle line:10%
<c.magenta>让我们来深入了解</c>

00:29:55.629 --> 00:29:58.999 align:middle line:10%
<c.magenta>来看预览界面的另一部分</c>

00:29:59.066 --> 00:30:00.467 align:middle line:10%
<c.magenta>这是联系人表格</c>

00:29:59.066 --> 00:30:00.467 align:middle line:10%
<c.magenta>这是联系人表格</c>

00:30:01.101 --> 00:30:04.104 align:middle line:10%
<c.magenta>联系人表格也显示页面预览</c>

00:30:04.171 --> 00:30:05.472 align:middle line:10%
<c.magenta>和页码</c>

00:30:05.706 --> 00:30:09.643 align:middle line:10%
<c.magenta>它看上去很像是边栏</c>
<c.magenta>但实际上你使用的是GridView</c>

00:30:10.277 --> 00:30:14.014 align:middle line:10%
<c.magenta>这让你能够重复使用你的数据源</c>

00:30:14.081 --> 00:30:17.618 align:middle line:10%
<c.magenta>如果边栏和联系人表格</c>
<c.magenta>都使用CollectionView</c>

00:30:17.818 --> 00:30:19.786 align:middle line:90%,end
<c.magenta>我们可以重复使用我们的数据源代码</c>

00:30:20.320 --> 00:30:21.388 align:middle line:90%,end
<c.magenta>这很不错</c>

00:30:21.455 --> 00:30:24.358 align:middle line:90%,end
<c.magenta>我们只需要更改</c>
<c.magenta>CollectionView的流布局</c>

00:30:24.424 --> 00:30:27.861 align:middle line:90%,end
<c.magenta>事实上 在本例中</c>
<c.magenta>这正是预览所做的工作</c>

00:30:30.898 --> 00:30:33.066 align:middle line:90%,end
<c.magenta>这是互联网账户首选项面板</c>

00:30:33.133 --> 00:30:35.669 align:middle line:90%,end
<c.magenta>在这里我想查看账户类型</c>

00:30:35.736 --> 00:30:39.239 align:middle line:10%
<c.magenta>点击一个账户类型</c>
<c.magenta>将出现一个表格 你可以进入</c>

00:30:39.306 --> 00:30:42.109 align:middle line:10%
<c.magenta>输入详细信息</c>
<c.magenta>可以创建新的账户类型</c>

00:30:43.477 --> 00:30:46.346 align:middle line:90%,end
<c.magenta>我们再次</c>
<c.magenta>从ContainerView列表开始</c>

00:30:47.781 --> 00:30:49.750 align:middle line:90%,end
<c.magenta>这里有一些账户类型</c>

00:30:49.816 --> 00:30:55.422 align:middle line:90%,end
<c.magenta>共有十个类型 我们可以</c>
<c.magenta>放入所有类型 然后小幅滚动</c>

00:30:55.489 --> 00:31:00.327 align:middle line:90%,end
<c.magenta>我们不必考虑动态化的视图变更</c>

00:30:55.489 --> 00:31:00.327 align:middle line:90%,end
<c.magenta>我们不必考虑动态化的视图变更</c>

00:31:00.594 --> 00:31:02.462 align:middle line:90%,end
<c.magenta>这是一个单维度垂直布局</c>

00:31:02.529 --> 00:31:07.868 align:middle line:90%,end
<c.magenta>因此我们只需在</c>
<c.magenta>StackView和TableView中选择</c>

00:31:09.503 --> 00:31:12.005 align:middle line:90%,end
<c.magenta>其实我们无需选择功能</c>
<c.magenta>事实上 每个项目都是一个按钮</c>

00:31:12.072 --> 00:31:13.974 align:middle line:90%,end
<c.magenta>我们不想要提供选择</c>

00:31:14.041 --> 00:31:17.945 align:middle line:90%,end
<c.magenta>而且希望在用户按下按钮之后</c>
<c.magenta>立即显示表格</c>

00:31:19.246 --> 00:31:21.715 align:middle line:90%,end
<c.magenta>这看上去有点像StackView</c>

00:31:22.216 --> 00:31:25.052 align:middle line:90%,end
<c.magenta>根据我列出的要求</c>

00:31:25.118 --> 00:31:28.455 align:middle line:90%,end
<c.magenta>我建议你们使用StackView</c>

00:31:30.757 --> 00:31:33.427 align:middle line:10%
<c.magenta>然后 账户首选项面板</c>
<c.magenta>使用TableView</c>

00:31:34.328 --> 00:31:36.997 align:middle line:90%,end
<c.magenta>部分原因在于历史记录</c>

00:31:38.165 --> 00:31:40.467 align:middle line:10%
<c.magenta>账户首选项面板是</c>
<c.magenta>在我们推出StackView</c>

00:31:40.534 --> 00:31:42.302 align:middle line:10%
<c.magenta>和AppKit之前编写的</c>
<c.magenta>它运行良好</c>

00:31:42.369 --> 00:31:44.471 align:middle line:10%
<c.magenta>你可以将TableView</c>
<c.magenta>设置为不具备选择功能</c>

00:31:44.972 --> 00:31:47.007 align:middle line:10%
<c.magenta>代码已经存在</c>
<c.magenta>而且运行良好</c>

00:31:49.543 --> 00:31:51.912 align:middle line:10%
<c.magenta>但是如果我们深入研究</c>
<c.magenta>如果滚动到底部</c>

00:31:51.979 --> 00:31:53.347 align:middle line:10%
<c.magenta>将看到这个</c>
<c.magenta>“添加其它账户”选项</c>

00:31:53.413 --> 00:31:56.283 align:middle line:10%
<c.magenta>点击它 将会添加</c>
<c.magenta>七个新账户类型</c>

00:31:56.783 --> 00:31:58.418 align:middle line:90%,end
<c.magenta>那么 就有17个项目</c>

00:31:58.485 --> 00:31:59.319 align:middle line:90%,end
<c.magenta>需要滚动查看</c>

00:32:00.287 --> 00:32:02.389 align:middle line:90%,end
<c.magenta>StackView可以轻松地</c>
<c.magenta>处理这些工作</c>

00:32:02.890 --> 00:32:05.926 align:middle line:10%
<c.magenta>但是你必须手动</c>
<c.magenta>添加项目到StackView</c>

00:32:05.993 --> 00:32:07.160 align:middle line:90%,end
<c.magenta>代码并不多</c>

00:32:08.395 --> 00:32:11.632 align:middle line:90%,end
<c.magenta>但是在这里 数据是动态的</c>

00:32:11.698 --> 00:32:14.768 align:middle line:90%,end
<c.magenta>我倾向于使用支持数据源的视图</c>

00:32:14.835 --> 00:32:16.603 align:middle line:90%,end
<c.magenta>可以告诉表格重载数据</c>

00:32:16.670 --> 00:32:19.373 align:middle line:90%,end
<c.magenta>并从数据源提供动态数据</c>

00:32:19.573 --> 00:32:22.242 align:middle line:90%,end
<c.magenta>因此我建议使用TableView</c>

00:32:25.078 --> 00:32:27.247 align:middle line:10%
<c.magenta>这是终端的新远程连接</c>

00:32:28.048 --> 00:32:30.751 align:middle line:10%
<c.magenta>这是一个很不错的</c>
<c.magenta>NSBrowser范例</c>

00:32:31.218 --> 00:32:33.854 align:middle line:10%
<c.magenta>在这里 我要批评整个用户界面</c>

00:32:33.921 --> 00:32:35.822 align:middle line:10%
<c.magenta>请看UI的大小和形状</c>

00:32:35.889 --> 00:32:40.260 align:middle line:10%
<c.magenta>尤其是垂直空间</c>
<c.magenta>与水平空间之间的比例</c>

00:32:41.061 --> 00:32:42.529 align:middle line:10%
<c.magenta>我想 最好的评价方法</c>

00:32:43.497 --> 00:32:47.267 align:middle line:90%,end
<c.magenta>是将现有的界面</c>

00:32:47.334 --> 00:32:49.069 align:middle line:90%,end
<c.magenta>与使用OutlineView之后的界面</c>
<c.magenta>进行比较</c>

00:32:49.937 --> 00:32:53.507 align:middle line:90%,end
<c.magenta>我们立即看到 在右侧</c>

00:32:53.907 --> 00:32:58.245 align:middle line:10%
<c.magenta>有一个较大的空白区域</c>
<c.magenta>这并没有很好地利用空间</c>

00:32:59.680 --> 00:33:03.083 align:middle line:10%
<c.magenta>另外 当用户放弃当前服务商</c>

00:32:59.680 --> 00:33:03.083 align:middle line:10%
<c.magenta>另外 当用户放弃当前服务商</c>

00:33:03.150 --> 00:33:06.653 align:middle line:10%
<c.magenta>查找其他服务器时</c>
<c.magenta>他们会看到很多相似的名称</c>

00:33:06.720 --> 00:33:09.489 align:middle line:10%
<c.magenta>必须进行大量的滚动操作</c>
<c.magenta>才能找到想要的项目</c>

00:33:09.723 --> 00:33:13.260 align:middle line:10%
<c.magenta>最后 这里还有两组+和-号按钮</c>

00:33:13.727 --> 00:33:14.661 align:middle line:90%,end
<c.magenta>它们是干什么用的？</c>

00:33:15.162 --> 00:33:17.598 align:middle line:10%
<c.magenta>很显然 它们用来添加服务器和服务</c>

00:33:17.664 --> 00:33:20.767 align:middle line:10%
<c.magenta>但是 哪个用来添加服务器</c>
<c.magenta>哪个用来添加服务呢？</c>

00:33:22.503 --> 00:33:25.572 align:middle line:90%,end
<c.magenta>利有浏览器</c>
<c.magenta>可以提供合适的交互区域</c>

00:33:27.407 --> 00:33:30.677 align:middle line:10%
<c.magenta>其显示十分明确</c>
<c.magenta>一个列用于选择服务器</c>

00:33:30.744 --> 00:33:32.246 align:middle line:10%
<c.magenta>另一个列用于选择服务</c>

00:33:32.312 --> 00:33:35.716 align:middle line:10%
<c.magenta>不同的+和-号按钮组</c>
<c.magenta>用于不同的列 非常清楚</c>

00:33:39.386 --> 00:33:42.789 align:middle line:10%
<c.magenta>但是有时候 无法一码通吃</c>

00:33:43.023 --> 00:33:45.192 align:middle line:10%
<c.magenta>一个典型的例子是查找程序</c>

00:33:45.626 --> 00:33:47.160 align:middle line:10%
<c.magenta>查找程序具有分区控件</c>

00:33:47.227 --> 00:33:51.431 align:middle line:10%
<c.magenta>可以按列表视图、</c>
<c.magenta>图标视图或列视图</c>

00:33:51.498 --> 00:33:53.000 align:middle line:10%
<c.magenta>浏览和查找文件</c>

00:33:54.568 --> 00:33:56.436 align:middle line:10%
<c.magenta>因此 对于不同的情况和数据类型</c>

00:33:56.503 --> 00:33:58.172 align:middle line:10%
<c.magenta>用户可能会做出不同的选择</c>

00:33:58.238 --> 00:34:00.240 align:middle line:10%
<c.magenta>你可能需要实现多种样式</c>

00:33:58.238 --> 00:34:00.240 align:middle line:10%
<c.magenta>你可能需要实现多种样式</c>

00:34:00.307 --> 00:34:02.276 align:middle line:10%
<c.magenta>你必须考虑到这一点</c>

00:34:02.709 --> 00:34:06.046 align:middle line:90%,end
<c.magenta>另一个例子是</c>
<c.magenta>Image Capture截屏</c>

00:34:06.346 --> 00:34:09.081 align:middle line:90%,end
<c.magenta>这些是我的手机近期拍摄的照片</c>

00:34:09.483 --> 00:34:11.918 align:middle line:10%
<c.magenta>这些照片显示</c>
<c.magenta>在Image Capture图标视图中</c>

00:34:12.186 --> 00:34:14.188 align:middle line:10%
<c.magenta>我可以快速找到我想要的照片</c>

00:34:14.254 --> 00:34:16.389 align:middle line:10%
<c.magenta>将它拖放并复制到桌面</c>

00:34:18.025 --> 00:34:20.761 align:middle line:90%,end
<c.magenta>但是有时候</c>
<c.magenta>查找照片可能比较困难</c>

00:34:20.827 --> 00:34:26.400 align:middle line:90%,end
<c.magenta>特别是当我寻找</c>
<c.magenta>具有与照片相似预览的影片时</c>

00:34:27.568 --> 00:34:29.402 align:middle line:90%,end
<c.magenta>用户首选项的控制范围</c>

00:34:29.469 --> 00:34:30.737 align:middle line:90%,end
<c.magenta>可以到达底部</c>

00:34:31.371 --> 00:34:34.574 align:middle line:90%,end
<c.magenta>这是一个分区控件</c>
<c.magenta>允许用户从图标视图</c>

00:34:34.641 --> 00:34:35.876 align:middle line:10%
<c.magenta>切换到列表视图</c>

00:34:35.976 --> 00:34:39.780 align:middle line:10%
<c.magenta>现在 在列表视图中</c>
<c.magenta>有一个美观的多列视图</c>

00:34:39.847 --> 00:34:41.380 align:middle line:10%
<c.magenta>我可以点击它们的标题</c>

00:34:41.447 --> 00:34:44.885 align:middle line:10%
<c.magenta>按类型重新排序</c>
<c.magenta>查找我想要的影片</c>

00:34:48.455 --> 00:34:50.023 align:middle line:10%
<c.magenta>最后 我想要显示…</c>

00:34:50.424 --> 00:34:53.126 align:middle line:10%
<c.magenta>我想要重新构建</c>
<c.magenta>打印机首选项面板</c>

00:34:54.261 --> 00:34:58.732 align:middle line:10%
<c.magenta>这里有一个NSTableView</c>
<c.magenta>它使用分组行标题</c>

00:34:59.066 --> 00:35:02.135 align:middle line:10%
<c.magenta>支持打印机 传真机</c>
<c.magenta>甚至还支持扫描仪</c>

00:34:59.066 --> 00:35:02.135 align:middle line:10%
<c.magenta>支持打印机 传真机</c>
<c.magenta>甚至还支持扫描仪</c>

00:35:02.903 --> 00:35:07.641 align:middle line:10%
<c.magenta>然后在右侧</c>
<c.magenta>有一个无表格TabView</c>

00:35:08.108 --> 00:35:12.012 align:middle line:10%
<c.magenta>但是在本演讲中</c>
<c.magenta>我们还没有讨论过TabView</c>

00:35:12.079 --> 00:35:15.315 align:middle line:10%
<c.magenta>关于无表格TabView</c>
<c.magenta>我想要介绍一些有趣的功能</c>

00:35:16.316 --> 00:35:20.254 align:middle line:90%,end
<c.magenta>利用无表格TabView</c>
<c.magenta>可以设置不同类型的界面</c>

00:35:21.221 --> 00:35:23.857 align:middle line:90%,end
<c.magenta>比如 为打印机设置</c>
<c.magenta>不同的属性</c>

00:35:23.924 --> 00:35:26.393 align:middle line:90%,end
<c.magenta>详细的属性</c>
<c.magenta>不同于传真机的属性</c>

00:35:26.460 --> 00:35:30.163 align:middle line:90%,end
<c.magenta>我可以在无表格TabView中</c>
<c.magenta>设置这些不同的属性</c>

00:35:30.230 --> 00:35:32.332 align:middle line:90%,end
<c.magenta>然后当用户更改</c>
<c.magenta>TableView中的选择时</c>

00:35:32.399 --> 00:35:34.635 align:middle line:90%,end
<c.magenta>编程选择表格</c>

00:35:34.968 --> 00:35:38.939 align:middle line:90%,end
<c.magenta>然后表格将完成所有后台工作</c>
<c.magenta>载入合适的Zip文件</c>

00:35:39.006 --> 00:35:42.142 align:middle line:90%,end
<c.magenta>自动为我在视图</c>
<c.magenta>层次结构中添加视图</c>

00:35:42.709 --> 00:35:44.611 align:middle line:90%,end
<c.magenta>我们来看详情列表</c>

00:35:44.678 --> 00:35:48.115 align:middle line:10%
<c.magenta>这里有一个StackView集合</c>

00:35:48.182 --> 00:35:51.051 align:middle line:10%
<c.magenta>我们进一步细分</c>
<c.magenta>可以看到这里有一个GridView</c>

00:35:51.118 --> 00:35:52.786 align:middle line:10%
<c.magenta>显示标签的详细属性</c>

00:35:52.853 --> 00:35:54.688 align:middle line:10%
<c.magenta>和打印机的详细属性</c>

00:35:54.755 --> 00:35:56.523 align:middle line:10%
<c.magenta>甚至包括页面大小</c>

00:35:56.623 --> 00:36:00.460 align:middle line:10%
<c.magenta>默认打印机</c>
<c.magenta>及其相关弹出菜单</c>

00:35:56.623 --> 00:36:00.460 align:middle line:10%
<c.magenta>默认打印机</c>
<c.magenta>及其相关弹出菜单</c>

00:36:01.228 --> 00:36:04.998 align:middle line:90%,end
<c.magenta>在所有这些设置完成之后</c>
<c.magenta>当用户切换到阿拉伯语时</c>

00:36:05.065 --> 00:36:08.168 align:middle line:90%,end
<c.magenta>所有视图立即合适地</c>
<c.magenta>变更为从右至左语言显示模式</c>

00:36:08.235 --> 00:36:11.305 align:middle line:10%
<c.magenta>从而让阿拉伯语用户</c>
<c.magenta>获得良好的用户体验</c>

00:36:14.908 --> 00:36:19.012 align:middle line:90%,end
<c.magenta>让我们进行回顾</c>
<c.magenta>AppKit拥有大量现成的视图</c>

00:36:19.079 --> 00:36:20.647 align:middle line:90%,end
<c.magenta>可用于多种用途</c>

00:36:21.748 --> 00:36:23.684 align:middle line:10%
<c.magenta>用户可以使用前面我讲解过的图表</c>

00:36:23.750 --> 00:36:26.053 align:middle line:10%
<c.magenta>使用我介绍过的一些用例</c>

00:36:26.119 --> 00:36:30.023 align:middle line:10%
<c.magenta>细化你的用户界面</c>
<c.magenta>充分利用空间</c>

00:36:30.090 --> 00:36:32.492 align:middle line:10%
<c.magenta>分析哪种类型的ContainerView</c>
<c.magenta>最适合你的需求</c>

00:36:32.559 --> 00:36:34.828 align:middle line:10%
<c.magenta>不要忘了</c>
<c.magenta>还可以组合视图</c>

00:36:35.095 --> 00:36:40.200 align:middle line:10%
<c.magenta>可以在StackView内</c>
<c.magenta>放置GridView 反之亦然</c>

00:36:42.569 --> 00:36:45.038 align:middle line:10%
<c.magenta>前面特洛伊在讲解</c>
<c.magenta>StackView和GridView时说过</c>

00:36:45.105 --> 00:36:48.742 align:middle line:10%
<c.magenta>我们还有一些不错的学习资源</c>

00:36:50.277 --> 00:36:53.347 align:middle line:10%
<c.magenta>TableView、OutlineView</c>
<c.magenta>和Browser也是如此</c>

00:36:55.616 --> 00:36:58.118 align:middle line:10%
<c.magenta>关于CollectionView</c>
<c.magenta>也有一些很好的学习资源</c>

00:36:59.152 --> 00:37:02.155 align:middle line:90%,end
<c.magenta>在开发者网站演讲218视频的</c>
<c.magenta>“更多信息”部分</c>

00:36:59.152 --> 00:37:02.155 align:middle line:90%,end
<c.magenta>在开发者网站演讲218视频的</c>
<c.magenta>“更多信息”部分</c>

00:37:02.222 --> 00:37:06.126 align:middle line:90%,end
<c.magenta>你可以找到这些信息的链接</c>

00:37:08.729 --> 00:37:10.931 align:middle line:90%,end
<c.magenta>一些相关演讲包括“高级触控条”</c>

00:37:10.998 --> 00:37:13.000 align:middle line:90%,end
<c.magenta>将在今天5:10举行</c>

00:37:13.066 --> 00:37:14.635 align:middle line:90%,end
<c.magenta>他们将会讲解</c>

00:37:14.701 --> 00:37:17.971 align:middle line:90%,end
<c.magenta>如何在触控条中使用</c>
<c.magenta>这些ContainerView</c>

00:37:18.138 --> 00:37:20.874 align:middle line:90%,end
<c.magenta>当然 也请观看</c>
<c.magenta>“Cocoa开发小技巧”</c>

00:37:21.008 --> 00:37:23.243 align:middle line:90%,end
<c.magenta>此演讲将会为你提供</c>
<c.magenta>一些有趣的小技巧</c>

00:37:23.977 --> 00:37:27.114 align:middle line:90%,end
<c.magenta>请享受WWDC其余部分 谢谢大家</c>
