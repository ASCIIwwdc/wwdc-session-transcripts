WEBVTT

00:00:17.551 --> 00:00:20.521 align:middle line:0
<c.magenta>（Swift Playground中</c>
<c.magenta>SceneKit的使用）</c>

00:00:23.056 --> 00:00:23.891 align:middle line:-1
<c.magenta>谢谢</c>

00:00:26.159 --> 00:00:27.294 align:middle line:-1
<c.magenta>大家早上好</c>

00:00:27.528 --> 00:00:29.930 align:middle line:-2
<c.magenta>欢迎来到“Swift Playground中</c>
<c.magenta>SceneKit的使用”演讲</c>

00:00:30.497 --> 00:00:31.665 align:middle line:-1
<c.magenta>我是Michael DeWitt</c>

00:00:31.798 --> 00:00:34.401 align:middle line:-1
<c.magenta>今天我很激动地向大家介绍</c>

00:00:34.468 --> 00:00:37.704 align:middle line:-2
<c.magenta>如何利用SceneKit</c>
<c.magenta>制作Learn to Code内容</c>

00:00:38.438 --> 00:00:41.108 align:middle line:-2
<c.magenta>但愿你们都已熟悉</c>
<c.magenta>Swift Playground</c>

00:00:41.275 --> 00:00:42.743 align:middle line:-2
<c.magenta>但让我来给大家展示一个</c>
<c.magenta>Learn to Code</c>

00:00:44.912 --> 00:00:47.781 align:middle line:-2
<c.magenta>这是一个Learn to Code</c>
<c.magenta>内容的示例课程</c>

00:00:47.848 --> 00:00:49.449 align:middle line:-1
<c.magenta>存在于Swift Playground内</c>

00:00:50.150 --> 00:00:53.387 align:middle line:-1
<c.magenta>左侧是课程和用户的代码</c>

00:00:54.021 --> 00:00:54.855 align:middle line:-1
<c.magenta>但对于本场演讲</c>

00:00:54.922 --> 00:00:56.990 align:middle line:-1
<c.magenta>我们实际上要重点关注右侧</c>

00:00:57.090 --> 00:00:58.225 align:middle line:-1
<c.magenta>请注意即时取景</c>

00:00:58.892 --> 00:01:02.362 align:middle line:-2
<c.magenta>我们可以把它放大为全屏显示</c>
<c.magenta>这样看得更清楚</c>

00:00:58.892 --> 00:01:02.362 align:middle line:-2
<c.magenta>我们可以把它放大为全屏显示</c>
<c.magenta>这样看得更清楚</c>

00:01:03.430 --> 00:01:04.498 align:middle line:-1
<c.magenta>这个角色 百特</c>

00:01:04.864 --> 00:01:08.035 align:middle line:-1
<c.magenta>现正快速绕着地图跑并收集宝石</c>

00:01:08.836 --> 00:01:10.904 align:middle line:-1
<c.magenta>不停地上下台阶</c>

00:01:11.505 --> 00:01:13.974 align:middle line:-1
<c.magenta>当百特收集到全部宝石之后</c>

00:01:15.008 --> 00:01:16.677 align:middle line:-1
<c.magenta>我们得到了一个祝贺场景</c>

00:01:17.144 --> 00:01:19.279 align:middle line:-1
<c.magenta>让学习者了解他们实现了很棒的功能</c>

00:01:19.613 --> 00:01:21.415 align:middle line:-1
<c.magenta>并且百特甚至还会跳舞</c>

00:01:22.149 --> 00:01:23.383 align:middle line:-1
<c.magenta>让人们了解这真的很棒</c>

00:01:24.551 --> 00:01:25.986 align:middle line:-1
<c.magenta>这就是我们今天的案例研究</c>

00:01:26.520 --> 00:01:31.391 align:middle line:-2
<c.magenta>我们要通过这个场景来展示</c>
<c.magenta>如何有效地使用SceneKit</c>

00:01:31.792 --> 00:01:34.895 align:middle line:-1
<c.magenta>并把丰富的3D内容带到你的应用中去</c>

00:01:36.396 --> 00:01:41.235 align:middle line:-2
<c.magenta>如果你对3D感兴趣</c>
<c.magenta>但还是个新手</c>

00:01:41.768 --> 00:01:43.036 align:middle line:-1
<c.magenta>那你来得正合适</c>

00:01:43.337 --> 00:01:46.006 align:middle line:-2
<c.magenta>因为我们要从一些</c>
<c.magenta>很不一样的东西开始讲起</c>

00:01:47.808 --> 00:01:50.244 align:middle line:-1
<c.magenta>我们要从简单的2D场景开始讲</c>

00:01:50.811 --> 00:01:55.449 align:middle line:-2
<c.magenta>关于SceneKit最好的优点之一</c>
<c.magenta>就是允许2D程序员</c>

00:01:55.849 --> 00:01:59.186 align:middle line:-1
<c.magenta>把这个场景放在现有时间轴上</c>

00:01:59.453 --> 00:02:03.056 align:middle line:-2
<c.magenta>并通过我们发布到Learn to Code中</c>
<c.magenta>丰富的3D内容实现3D效果</c>

00:01:59.453 --> 00:02:03.056 align:middle line:-2
<c.magenta>并通过我们发布到Learn to Code中</c>
<c.magenta>丰富的3D内容实现3D效果</c>

00:02:04.324 --> 00:02:05.993 align:middle line:-1
<c.magenta>那么这就是我们今天要谈的内容</c>

00:02:06.426 --> 00:02:07.561 align:middle line:-1
<c.magenta>我们一共有40分钟</c>

00:02:07.694 --> 00:02:09.630 align:middle line:-1
<c.magenta>我们可以把它分成三个部分</c>

00:02:10.731 --> 00:02:12.866 align:middle line:-1
<c.magenta>首先我要讲一下原型设计</c>

00:02:13.133 --> 00:02:16.003 align:middle line:-1
<c.magenta>以及如何精化想法确保其真的很棒</c>

00:02:17.304 --> 00:02:19.206 align:middle line:-1
<c.magenta>关于迭代 我想谈谈</c>

00:02:19.273 --> 00:02:21.708 align:middle line:-2
<c.magenta>你何时会从你的供应商处</c>
<c.magenta>获得一些真正的资产</c>

00:02:21.808 --> 00:02:23.944 align:middle line:-1
<c.magenta>如何建立有效的管道</c>

00:02:24.678 --> 00:02:27.314 align:middle line:-1
<c.magenta>然后Lemont将上台讲一下调整</c>

00:02:27.447 --> 00:02:28.982 align:middle line:-1
<c.magenta>并准备好发布场景</c>

00:02:30.584 --> 00:02:32.753 align:middle line:-1
<c.magenta>首先是原型设计</c>

00:02:35.189 --> 00:02:39.459 align:middle line:-2
<c.magenta>这是在我们决定使用</c>
<c.magenta>Learn to Code</c>

00:02:39.526 --> 00:02:41.595 align:middle line:-2
<c.magenta>且我们已准备好</c>
<c.magenta>开始创建东西时出现的</c>

00:02:42.196 --> 00:02:44.831 align:middle line:-2
<c.magenta>那么你之前看到过这个图</c>
<c.magenta>但在这里它是在情境中</c>

00:02:46.667 --> 00:02:49.970 align:middle line:-1
<c.magenta>我们一开始有来自表情集合的宝石</c>

00:02:50.037 --> 00:02:51.572 align:middle line:-1
<c.magenta>和四处散放的资产</c>

00:02:51.772 --> 00:02:54.975 align:middle line:-1
<c.magenta>因为我们只需要拾取并尽可能快地跑</c>

00:02:55.242 --> 00:02:57.778 align:middle line:-1
<c.magenta>以在这个新应用中测试交互模型</c>

00:02:58.345 --> 00:02:59.413 align:middle line:-1
<c.magenta>我们从这里学到了很多</c>

00:02:59.479 --> 00:03:01.048 align:middle line:-1
<c.magenta>资产看起来怎么样并不重要</c>

00:02:59.479 --> 00:03:01.048 align:middle line:-1
<c.magenta>资产看起来怎么样并不重要</c>

00:03:01.849 --> 00:03:05.519 align:middle line:-2
<c.magenta>但通过这个原型设计过程</c>
<c.magenta>我们开始获得一些早期反馈</c>

00:03:06.653 --> 00:03:09.022 align:middle line:-1
<c.magenta>其中有些评论是关于图形的</c>

00:03:09.489 --> 00:03:12.459 align:middle line:-2
<c.magenta>它…请求比如说我们</c>
<c.magenta>是否可以修改宝石颜色</c>

00:03:12.593 --> 00:03:14.661 align:middle line:-1
<c.magenta>我们是否在场景周围添加一个边框</c>

00:03:14.728 --> 00:03:17.831 align:middle line:-2
<c.magenta>或我们是否可以让相机在尽头处</c>
<c.magenta>转动以提供一些视觉趣味</c>

00:03:18.999 --> 00:03:23.504 align:middle line:-1
<c.magenta>这是很好的反馈 它真的非常有迭代性</c>

00:03:23.937 --> 00:03:24.872 align:middle line:-1
<c.magenta>当你进行原型设计时</c>

00:03:24.938 --> 00:03:27.007 align:middle line:-1
<c.magenta>你不应该害怕把它们全部扔掉</c>

00:03:27.641 --> 00:03:30.143 align:middle line:-1
<c.magenta>那么如果我们返回去看情境中的场景</c>

00:03:30.677 --> 00:03:33.046 align:middle line:-1
<c.magenta>你可以看到它在这个页面上很单调</c>

00:03:33.380 --> 00:03:36.149 align:middle line:-1
<c.magenta>视觉效果是我们得到的全部反馈</c>

00:03:36.450 --> 00:03:38.752 align:middle line:-1
<c.magenta>我们只需要重新评估我们的策略</c>

00:03:40.387 --> 00:03:44.725 align:middle line:-2
<c.magenta>因为我们在SpriteKit中做的</c>
<c.magenta>现在我们要开始使用SceneKit</c>

00:03:45.459 --> 00:03:47.594 align:middle line:-2
<c.magenta>对于你们中</c>
<c.magenta>熟悉SpriteKit的人来说</c>

00:03:48.228 --> 00:03:49.930 align:middle line:-1
<c.magenta>你了解它有以下概念：</c>

00:03:50.631 --> 00:03:53.000 align:middle line:-1
<c.magenta>基本上是一个执行更新逻辑的场景</c>

00:03:53.166 --> 00:03:57.738 align:middle line:-2
<c.magenta>一个把对象放在视图中的节点</c>
<c.magenta>还有移动对象的行动</c>

00:03:58.672 --> 00:04:01.742 align:middle line:-2
<c.magenta>现在Apple开发SceneKit</c>
<c.magenta>的好处还包括</c>

00:03:58.672 --> 00:04:01.742 align:middle line:-2
<c.magenta>现在Apple开发SceneKit</c>
<c.magenta>的好处还包括</c>

00:04:02.109 --> 00:04:04.244 align:middle line:-1
<c.magenta>它有许多这样的相同概念</c>

00:04:05.746 --> 00:04:09.383 align:middle line:-2
<c.magenta>这就给了我们足够的信心</c>
<c.magenta>一个简单的切换</c>

00:04:09.550 --> 00:04:11.885 align:middle line:-2
<c.magenta>开始使用SceneKit</c>
<c.magenta>并深入了解它</c>

00:04:12.386 --> 00:04:13.921 align:middle line:-1
<c.magenta>那么跟你们中许多人一样</c>

00:04:14.121 --> 00:04:17.824 align:middle line:-2
<c.magenta>我们看了2015年的</c>
<c.magenta>一场WWDC演讲</c>

00:04:17.891 --> 00:04:19.993 align:middle line:-2
<c.magenta>那是一场很棒的演讲</c>
<c.magenta>是SceneKit团队主讲的</c>

00:04:20.093 --> 00:04:23.096 align:middle line:-2
<c.magenta>内容是关于如何创建简单的场景</c>
<c.magenta>就像你们在这里看到的这个一样</c>

00:04:24.631 --> 00:04:26.266 align:middle line:-1
<c.magenta>但不只是这样</c>

00:04:26.333 --> 00:04:28.669 align:middle line:-1
<c.magenta>我们还要使用示例中的一些资产</c>

00:04:29.303 --> 00:04:30.704 align:middle line:-1
<c.magenta>并重新创建我们的场景</c>

00:04:32.072 --> 00:04:33.273 align:middle line:-1
<c.magenta>所以我们现在来到了这个舞台</c>

00:04:33.407 --> 00:04:36.243 align:middle line:-2
<c.magenta>我们马上就会告诉你们</c>
<c.magenta>这只是一种更好的方式</c>

00:04:36.310 --> 00:04:40.013 align:middle line:-2
<c.magenta>我的意思是它更拟真</c>
<c.magenta>你可以随意拖动相机</c>

00:04:40.113 --> 00:04:41.915 align:middle line:-1
<c.magenta>并且它会帮助你解决等级问题</c>

00:04:43.617 --> 00:04:45.118 align:middle line:-1
<c.magenta>这张幻灯片的重点是</c>

00:04:45.452 --> 00:04:48.488 align:middle line:-1
<c.magenta>即使我们已经明确地提升了视觉质量</c>

00:04:49.456 --> 00:04:50.524 align:middle line:-1
<c.magenta>当你设计原型时</c>

00:04:50.591 --> 00:04:52.826 align:middle line:-2
<c.magenta>你仍希望使视觉保真度</c>
<c.magenta>保持一个低水平</c>

00:04:52.993 --> 00:04:56.096 align:middle line:-2
<c.magenta>那么当我们添加新游戏结构时</c>
<c.magenta>比如这些门户</c>

00:04:57.064 --> 00:04:58.665 align:middle line:-1
<c.magenta>我们采用了SceneKit基元实现</c>

00:04:59.132 --> 00:05:00.467 align:middle line:-1
<c.magenta>因为我们不想提得太高</c>

00:04:59.132 --> 00:05:00.467 align:middle line:-1
<c.magenta>因为我们不想提得太高</c>

00:05:00.534 --> 00:05:03.036 align:middle line:-1
<c.magenta>以确保场景看起来绝对很棒</c>

00:05:03.170 --> 00:05:04.738 align:middle line:-1
<c.magenta>我们首先要确保这是一个好主意</c>

00:05:05.906 --> 00:05:09.510 align:middle line:-2
<c.magenta>所以我把这个丢到</c>
<c.magenta>Business Tool 101图表上</c>

00:05:10.744 --> 00:05:13.080 align:middle line:-1
<c.magenta>你基本可以看到项目的整个时间轴</c>

00:05:13.981 --> 00:05:16.617 align:middle line:0
<c.magenta>你想把其中一大块分配给原型设计</c>

00:05:17.150 --> 00:05:20.821 align:middle line:0
<c.magenta>因为这是你可以做出最多修改的部分</c>

00:05:20.921 --> 00:05:22.356 align:middle line:0
<c.magenta>而做出修改需要付出的努力并不多</c>

00:05:23.490 --> 00:05:25.559 align:middle line:0
<c.magenta>尤其当你正在做3D时</c>

00:05:26.126 --> 00:05:27.594 align:middle line:0
<c.magenta>当你开始获取真实的资产时</c>

00:05:27.661 --> 00:05:29.530 align:middle line:0
<c.magenta>这是我们下一个部分要讲到的内容</c>

00:05:30.097 --> 00:05:31.698 align:middle line:0
<c.magenta>要进行修改需要付出的努力不断增加</c>

00:05:32.432 --> 00:05:34.268 align:middle line:0
<c.magenta>所以当你设计原型时请留意这一点</c>

00:05:35.569 --> 00:05:38.138 align:middle line:-1
<c.magenta>那么总的来说 其实你想</c>

00:05:38.205 --> 00:05:40.440 align:middle line:-1
<c.magenta>当你在设计原型时 测试你的交互模型</c>

00:05:40.507 --> 00:05:41.642 align:middle line:-1
<c.magenta>这并不是与资产相关</c>

00:05:42.142 --> 00:05:44.344 align:middle line:-1
<c.magenta>你想阐明你接收的反馈</c>

00:05:44.745 --> 00:05:46.547 align:middle line:-1
<c.magenta>但并不想做出越来越多的修改</c>

00:05:46.680 --> 00:05:48.315 align:middle line:-1
<c.magenta>想要确保这个想法是有效的</c>

00:05:49.082 --> 00:05:51.885 align:middle line:-1
<c.magenta>最后利用从这部分获得的洞察力</c>

00:05:51.985 --> 00:05:52.886 align:middle line:-1
<c.magenta>去写代码</c>

00:05:53.220 --> 00:05:56.890 align:middle line:-2
<c.magenta>我觉得我们做的最棒的决策是</c>
<c.magenta>开始新建项目</c>

00:05:56.957 --> 00:06:01.228 align:middle line:-2
<c.magenta>当我们朝着这点努力时</c>
<c.magenta>这就将我们带入了迭代</c>

00:05:56.957 --> 00:06:01.228 align:middle line:-2
<c.magenta>当我们朝着这点努力时</c>
<c.magenta>这就将我们带入了迭代</c>

00:06:04.231 --> 00:06:07.367 align:middle line:-2
<c.magenta>现在我们已经有了想法</c>
<c.magenta>我们准备好获得一些真正的艺术了</c>

00:06:07.534 --> 00:06:11.305 align:middle line:-2
<c.magenta>我们开始与设计师一起工作</c>
<c.magenta>我们得到了这个早期的2D样稿</c>

00:06:13.540 --> 00:06:16.143 align:middle line:-2
<c.magenta>你可以看到</c>
<c.magenta>它现在与百特的世界很相似</c>

00:06:16.410 --> 00:06:17.477 align:middle line:-1
<c.magenta>看起来要好点</c>

00:06:17.945 --> 00:06:20.848 align:middle line:-1
<c.magenta>我想把这个世界分成四部分</c>

00:06:21.682 --> 00:06:24.151 align:middle line:-1
<c.magenta>我要讲的第一件事就是它是如何建造的</c>

00:06:24.818 --> 00:06:26.720 align:middle line:-1
<c.magenta>以及有效建造的一些策略</c>

00:06:27.487 --> 00:06:33.460 align:middle line:-2
<c.magenta>接下来我们要看看如何在你的应用中</c>
<c.magenta>完成复杂的动画</c>

00:06:33.794 --> 00:06:35.963 align:middle line:-1
<c.magenta>通过查看我们如何实现让百特上下台阶</c>

00:06:37.464 --> 00:06:40.067 align:middle line:-1
<c.magenta>我们还要了解如何用水</c>

00:06:40.133 --> 00:06:41.401 align:middle line:-1
<c.magenta>和其它场景元素添加视觉趣味</c>

00:06:42.603 --> 00:06:45.472 align:middle line:-1
<c.magenta>然后我们就重点讲视觉部分</c>

00:06:45.873 --> 00:06:47.941 align:middle line:-1
<c.magenta>但是还有整个用户方面</c>

00:06:48.075 --> 00:06:51.245 align:middle line:-2
<c.magenta>实际上不能从3D场景的图形中</c>
<c.magenta>获得什么好处</c>

00:06:51.411 --> 00:06:54.214 align:middle line:-1
<c.magenta>所以我们要花点儿时间讲讲可达性支持</c>

00:06:54.281 --> 00:06:55.582 align:middle line:-1
<c.magenta>尤其是VoiceOver</c>

00:06:56.683 --> 00:07:00.521 align:middle line:-1
<c.magenta>好了 首先是给这个世界建模</c>

00:06:56.683 --> 00:07:00.521 align:middle line:-1
<c.magenta>好了 首先是给这个世界建模</c>

00:07:01.455 --> 00:07:04.892 align:middle line:-2
<c.magenta>那么你可以通过模具看到</c>
<c.magenta>我们是通过这些组块创建世界的</c>

00:07:05.025 --> 00:07:06.260 align:middle line:-1
<c.magenta>我们有单项资产</c>

00:07:06.660 --> 00:07:07.995 align:middle line:-1
<c.magenta>这样做是有原因的</c>

00:07:09.363 --> 00:07:12.065 align:middle line:-1
<c.magenta>我们不仅需要在资产设计上迭代</c>

00:07:12.132 --> 00:07:13.734 align:middle line:-1
<c.magenta>还需要在课程设计上迭代</c>

00:07:14.234 --> 00:07:16.870 align:middle line:-1
<c.magenta>所以我们把像这样的简单拼图拼在一起</c>

00:07:17.571 --> 00:07:20.507 align:middle line:-1
<c.magenta>确保学习者能顺利学习大纲</c>

00:07:21.909 --> 00:07:25.579 align:middle line:-2
<c.magenta>但不是把这些单一的组块</c>
<c.magenta>放在场景编辑器中</c>

00:07:25.679 --> 00:07:29.183 align:middle line:-1
<c.magenta>那会非常乏味 而是写一些代码来实现</c>

00:07:29.550 --> 00:07:31.919 align:middle line:-1
<c.magenta>很像使用Learn to Code 2的学习者们</c>

00:07:31.985 --> 00:07:33.287 align:middle line:-1
<c.magenta>当他们创建自己的世界时</c>

00:07:34.087 --> 00:07:36.823 align:middle line:-2
<c.magenta>我们写了一些代码来生成这个</c>
<c.magenta>它看起来是这样的</c>

00:07:38.025 --> 00:07:41.662 align:middle line:-2
<c.magenta>要创建那个世界</c>
<c.magenta>你首先要给它一个尺寸 5乘5</c>

00:07:42.262 --> 00:07:46.466 align:middle line:-2
<c.magenta>你把元素放进去 比如演员</c>
<c.magenta>或你在之前的场景中见到过的百特</c>

00:07:47.067 --> 00:07:48.535 align:middle line:-1
<c.magenta>然后你可以添加附加元素</c>

00:07:48.602 --> 00:07:51.572 align:middle line:0
<c.magenta>比如宝石或你在中心看到过的水</c>

00:07:52.873 --> 00:07:55.342 align:middle line:0
<c.magenta>但我展示这段代码的原因不是因为</c>

00:07:55.409 --> 00:07:57.578 align:middle line:0
<c.magenta>“哇哦 我们写了一个API</c>
<c.magenta>创建了一个世界” 这很酷</c>

00:07:57.911 --> 00:08:01.748 align:middle line:0
<c.magenta>而其实是因为这与图形是完全分离的</c>

00:07:57.911 --> 00:08:01.748 align:middle line:0
<c.magenta>而其实是因为这与图形是完全分离的</c>

00:08:02.015 --> 00:08:05.285 align:middle line:-2
<c.magenta>对吧？这段代码在2D中</c>
<c.magenta>和在3D中一样有效</c>

00:08:06.453 --> 00:08:09.089 align:middle line:0
<c.magenta>让我实际给你展示一下这是什么意思</c>

00:08:09.156 --> 00:08:10.424 align:middle line:0
<c.magenta>这里有一个短视频</c>

00:08:15.796 --> 00:08:17.865 align:middle line:-1
<c.magenta>这里有百特 正在这个世界中移动</c>

00:08:18.065 --> 00:08:19.766 align:middle line:-1
<c.magenta>我们要添加一些节点</c>

00:08:20.000 --> 00:08:22.035 align:middle line:-1
<c.magenta>你在场景中看到的红色和绿色节点</c>

00:08:22.169 --> 00:08:25.539 align:middle line:-2
<c.magenta>其实代表了我们重建</c>
<c.magenta>游戏设置所使用的数据</c>

00:08:29.776 --> 00:08:32.546 align:middle line:-1
<c.magenta>实际上我们所需要的就是那个数据</c>

00:08:33.145 --> 00:08:36.116 align:middle line:-1
<c.magenta>我们把场景的图形</c>

00:08:36.216 --> 00:08:38.552 align:middle line:-1
<c.magenta>和用于重建游戏设置的数据分离了</c>

00:08:39.553 --> 00:08:40.854 align:middle line:-1
<c.magenta>这样做有几个很大的好处</c>

00:08:40.921 --> 00:08:43.524 align:middle line:-1
<c.magenta>我想让你在给3D世界建模时考虑一下</c>

00:08:45.092 --> 00:08:46.760 align:middle line:-1
<c.magenta>将数据与图形分离</c>

00:08:47.294 --> 00:08:49.863 align:middle line:-1
<c.magenta>首先它允许你简单地置换出资产</c>

00:08:50.264 --> 00:08:51.965 align:middle line:-1
<c.magenta>请记住 我们仍在这个材料上进行迭代</c>

00:08:52.032 --> 00:08:54.801 align:middle line:-1
<c.magenta>无论如何我们将获得这个组块的新版本</c>

00:08:55.002 --> 00:08:56.803 align:middle line:-1
<c.magenta>并且我们不想重建这些地图</c>

00:08:57.004 --> 00:08:58.639 align:middle line:-1
<c.magenta>所以我们就动态地生成了地图</c>

00:08:59.940 --> 00:09:02.843 align:middle line:-2
<c.magenta>它还允许你获取那个数据</c>
<c.magenta>并将其发送到别处</c>

00:08:59.940 --> 00:09:02.843 align:middle line:-2
<c.magenta>它还允许你获取那个数据</c>
<c.magenta>并将其发送到别处</c>

00:09:03.010 --> 00:09:04.645 align:middle line:-1
<c.magenta>也许你需要将其通过网络发送出去</c>

00:09:04.878 --> 00:09:07.281 align:middle line:-1
<c.magenta>或在处理过程中发送一些游戏设置逻辑</c>

00:09:07.347 --> 00:09:08.882 align:middle line:-1
<c.magenta>比如我们在某些游戏场地中所做的那样</c>

00:09:09.883 --> 00:09:11.285 align:middle line:-1
<c.magenta>一段时间之后</c>

00:09:11.351 --> 00:09:13.887 align:middle line:-1
<c.magenta>它还将允许你优化几何体</c>

00:09:14.521 --> 00:09:16.590 align:middle line:-1
<c.magenta>Lemont将会具体介绍</c>

00:09:16.790 --> 00:09:18.659 align:middle line:-1
<c.magenta>但有一点很关键 就是你并不依赖于</c>

00:09:18.725 --> 00:09:21.228 align:middle line:-1
<c.magenta>实际的节点和场景才能实现</c>

00:09:22.496 --> 00:09:23.463 align:middle line:-1
<c.magenta>我有一个警告</c>

00:09:24.831 --> 00:09:27.835 align:middle line:-2
<c.magenta>你需要一些调试工具</c>
<c.magenta>使这个运行起来更棒</c>

00:09:27.935 --> 00:09:29.203 align:middle line:-1
<c.magenta>我们在很早之前就发现了</c>

00:09:29.670 --> 00:09:31.438 align:middle line:-1
<c.magenta>你不再只是查看世界了</c>

00:09:31.505 --> 00:09:33.674 align:middle line:-1
<c.magenta>而是查看如何重建游戏设置</c>

00:09:34.107 --> 00:09:36.710 align:middle line:-2
<c.magenta>所以我们创建了一个</c>
<c.magenta>非常简单的Mac应用</c>

00:09:37.678 --> 00:09:40.881 align:middle line:-2
<c.magenta>这个应用可以加载</c>
<c.magenta>我们所拥有的全部等级</c>

00:09:41.315 --> 00:09:44.651 align:middle line:-1
<c.magenta>更重要的是它有专门的场景知识</c>

00:09:45.552 --> 00:09:47.821 align:middle line:-1
<c.magenta>那么既然这样 这个工具就是</c>

00:09:47.888 --> 00:09:50.757 align:middle line:-2
<c.magenta>允许我们展示你之前</c>
<c.magenta>看到过的那些调试节点的工具</c>

00:09:51.525 --> 00:09:55.028 align:middle line:-2
<c.magenta>它还可以在我们的游戏中</c>
<c.magenta>运行难以达到的情况</c>

00:09:55.229 --> 00:09:58.699 align:middle line:-2
<c.magenta>比如当你达到祝贺序列时</c>
<c.magenta>围绕世界旋转</c>

00:09:58.932 --> 00:10:00.601 align:middle line:-1
<c.magenta>我们想确保能在每一幅地图上使用</c>

00:09:58.932 --> 00:10:00.601 align:middle line:-1
<c.magenta>我们想确保能在每一幅地图上使用</c>

00:10:00.934 --> 00:10:03.437 align:middle line:-1
<c.magenta>但我们不想一直测试每一幅地图</c>

00:10:04.004 --> 00:10:05.005 align:middle line:-1
<c.magenta>只是为了看到一个结果</c>

00:10:06.473 --> 00:10:07.441 align:middle line:-1
<c.magenta>那么这就是我们的第一部分</c>

00:10:07.808 --> 00:10:09.176 align:middle line:-1
<c.magenta>就是我们如何把世界拼在一起</c>

00:10:09.343 --> 00:10:12.112 align:middle line:-1
<c.magenta>我们分离了数据和图形 并使用了工具</c>

00:10:13.680 --> 00:10:15.816 align:middle line:-1
<c.magenta>现在讲动画</c>

00:10:16.683 --> 00:10:18.585 align:middle line:-1
<c.magenta>如果我们近距离地看一下台阶</c>

00:10:20.921 --> 00:10:23.857 align:middle line:-2
<c.magenta>你可以看到这其实是一个</c>
<c.magenta>相当复杂的几何体</c>

00:10:24.057 --> 00:10:26.026 align:middle line:-1
<c.magenta>对吧？不仅有独立的台阶</c>

00:10:26.293 --> 00:10:28.295 align:middle line:-1
<c.magenta>台阶上还有一些花样</c>

00:10:28.562 --> 00:10:29.763 align:middle line:-1
<c.magenta>所以我们想做到超级精确</c>

00:10:29.830 --> 00:10:32.566 align:middle line:-2
<c.magenta>关于我们角色的脚</c>
<c.magenta>落在每个台阶上的位置</c>

00:10:33.634 --> 00:10:35.335 align:middle line:-1
<c.magenta>我们考虑了一些不同的策略</c>

00:10:35.736 --> 00:10:39.173 align:middle line:-2
<c.magenta>对于3D场景来说</c>
<c.magenta>最常用的一个东西就是</c>

00:10:39.406 --> 00:10:42.943 align:middle line:-2
<c.magenta>用斜坡替换台阶</c>
<c.magenta>因为斜坡的实现很简单</c>

00:10:43.310 --> 00:10:46.180 align:middle line:-1
<c.magenta>你有一个角色 你向前移动那个角色</c>

00:10:46.413 --> 00:10:48.215 align:middle line:-1
<c.magenta>你算出他们需要移动多远</c>

00:10:48.415 --> 00:10:50.584 align:middle line:-1
<c.magenta>然后你只需要把他们从点A转移到点B</c>

00:10:50.651 --> 00:10:51.919 align:middle line:-1
<c.magenta>当运行行走动作循环时</c>

00:10:53.353 --> 00:10:55.189 align:middle line:-1
<c.magenta>对于台阶 并不是那么好做</c>

00:10:55.656 --> 00:10:58.192 align:middle line:-1
<c.magenta>这是百特尝试上台阶</c>

00:10:58.825 --> 00:11:00.093 align:middle line:-1
<c.magenta>如果你离近点儿看</c>

00:10:58.825 --> 00:11:00.093 align:middle line:-1
<c.magenta>如果你离近点儿看</c>

00:11:00.661 --> 00:11:03.931 align:middle line:0
<c.magenta>百特甚至没有接触到第一个台阶</c>
<c.magenta>他已经漂浮在半空中了</c>

00:11:04.998 --> 00:11:06.633 align:middle line:0
<c.magenta>所以我们要把这个效果做得更好</c>

00:11:10.304 --> 00:11:14.441 align:middle line:-2
<c.magenta>我们要考虑的第二件事就是</c>
<c.magenta>使用SceneKit中的内嵌类型</c>

00:11:14.508 --> 00:11:16.577 align:middle line:-2
<c.magenta>它其实是SceneKit</c>
<c.magenta>约束系统的一部分</c>

00:11:16.643 --> 00:11:18.178 align:middle line:-1
<c.magenta>用于执行逆向运动</c>

00:11:18.812 --> 00:11:21.348 align:middle line:-1
<c.magenta>现在逆向运动允许你得到超级精确度</c>

00:11:21.548 --> 00:11:23.817 align:middle line:-1
<c.magenta>关于你想让角色的脚落在哪个位置</c>

00:11:24.117 --> 00:11:27.454 align:middle line:-2
<c.magenta>那么我们要指定我们希望角色</c>
<c.magenta>上下的每一个台阶</c>

00:11:28.555 --> 00:11:31.658 align:middle line:-2
<c.magenta>但它却伴随着牺牲了角色的一些个性</c>
<c.magenta>对吧？</c>

00:11:31.725 --> 00:11:34.328 align:middle line:-1
<c.magenta>我们不能控制眼睛的运动</c>

00:11:34.394 --> 00:11:36.730 align:middle line:-2
<c.magenta>或上半身的运动</c>
<c.magenta>不像我们想象中的那么具体</c>

00:11:37.164 --> 00:11:38.599 align:middle line:-1
<c.magenta>我们其实还有第三种选择</c>

00:11:39.032 --> 00:11:42.069 align:middle line:-1
<c.magenta>就是把位移合并到动画中去</c>

00:11:42.569 --> 00:11:44.071 align:middle line:-1
<c.magenta>因为这是我们所采用的策略</c>

00:11:44.137 --> 00:11:46.206 align:middle line:-1
<c.magenta>让我们再详细地具体看一下</c>

00:11:47.841 --> 00:11:50.811 align:middle line:0
<c.magenta>通常对绝大部分游戏来说都有节点</c>

00:11:50.944 --> 00:11:53.780 align:middle line:0
<c.magenta>代表一个位置 还有几何体</c>

00:11:53.947 --> 00:11:56.049 align:middle line:0
<c.magenta>就是你在场景中实际能看到的东西</c>

00:11:57.117 --> 00:11:59.953 align:middle line:0
<c.magenta>现在这两样东西同时移动也是很常见的</c>

00:12:00.354 --> 00:12:02.856 align:middle line:0
<c.magenta>所以你需要转换节点和几何体</c>

00:12:02.956 --> 00:12:04.191 align:middle line:0
<c.magenta>同时执行行走循环</c>

00:12:04.258 --> 00:12:06.159 align:middle line:0
<c.magenta>它会让角色从点A移动到点B</c>

00:12:07.127 --> 00:12:08.795 align:middle line:0
<c.magenta>但对于台阶</c>
<c.magenta>我们做了一点不一样的处理</c>

00:12:10.464 --> 00:12:13.834 align:middle line:0
<c.magenta>我们不干涉节点 并应用了一个动画</c>

00:12:13.901 --> 00:12:15.869 align:middle line:0
<c.magenta>这个动画中其实含有位移</c>

00:12:16.069 --> 00:12:19.206 align:middle line:0
<c.magenta>那么这就会把几何体从节点中移出来</c>

00:12:19.873 --> 00:12:22.242 align:middle line:0
<c.magenta>然后当动画完成后</c>

00:12:22.543 --> 00:12:25.879 align:middle line:0
<c.magenta>我们同步节点的位置并移除动画</c>

00:12:27.214 --> 00:12:30.450 align:middle line:0
<c.magenta>我们是通过SceneKit中一个</c>
<c.magenta>叫作SCNTransaction的类型实现的</c>

00:12:31.985 --> 00:12:35.656 align:middle line:-2
<c.magenta>SCNTransaction允许你确保</c>
<c.magenta>在一帧中进行更新</c>

00:12:36.123 --> 00:12:37.224 align:middle line:0
<c.magenta>让我们具体看一下</c>

00:12:38.525 --> 00:12:41.595 align:middle line:-1
<c.magenta>你用开始和提交调用设置</c>

00:12:42.229 --> 00:12:44.531 align:middle line:-2
<c.magenta>在我们的示例中</c>
<c.magenta>我们想要的动画时长为零</c>

00:12:44.598 --> 00:12:46.700 align:middle line:-1
<c.magenta>因为我们需要它在同一帧中发生</c>

00:12:48.202 --> 00:12:52.573 align:middle line:-1
<c.magenta>我们把角色移动到新位置并移除动画</c>

00:12:52.973 --> 00:12:55.943 align:middle line:-1
<c.magenta>让百特准备好下一轮的动画</c>

00:12:56.810 --> 00:12:57.911 align:middle line:-1
<c.magenta>让我们看看实际效果</c>

00:12:59.246 --> 00:13:00.380 align:middle line:-1
<c.magenta>先舒展一下身体</c>

00:12:59.246 --> 00:13:00.380 align:middle line:-1
<c.magenta>先舒展一下身体</c>

00:13:01.615 --> 00:13:02.749 align:middle line:-1
<c.magenta>走上台阶…</c>

00:13:03.984 --> 00:13:06.453 align:middle line:-2
<c.magenta>你现在可以看到</c>
<c.magenta>因为我们允许这个动画师</c>

00:13:06.520 --> 00:13:09.056 align:middle line:-1
<c.magenta>自由地把位移放到动画中</c>

00:13:09.156 --> 00:13:11.692 align:middle line:-1
<c.magenta>针对百特的移动 我们变得非常精确了</c>

00:13:12.159 --> 00:13:15.762 align:middle line:-1
<c.magenta>当它上下台阶时 百特的头也会转动</c>

00:13:16.230 --> 00:13:17.731 align:middle line:-1
<c.magenta>这是一个较好的解决方案</c>

00:13:17.798 --> 00:13:21.201 align:middle line:-2
<c.magenta>你需要针对你场景中的复杂动画</c>
<c.magenta>考虑一下</c>

00:13:23.604 --> 00:13:25.305 align:middle line:-1
<c.magenta>第三点</c>

00:13:26.406 --> 00:13:28.408 align:middle line:-1
<c.magenta>让我们看看如何处理场景元素</c>

00:13:28.575 --> 00:13:30.110 align:middle line:-1
<c.magenta>因为它并不全与角色相关</c>

00:13:30.277 --> 00:13:32.279 align:middle line:-1
<c.magenta>你还要确保这个世界感觉鲜活</c>

00:13:33.547 --> 00:13:35.082 align:middle line:-1
<c.magenta>那么让我们近距离看一下水</c>

00:13:36.583 --> 00:13:40.988 align:middle line:-2
<c.magenta>现在你见过我们之前曾用过</c>
<c.magenta>像这样的地图 是吧？</c>

00:13:41.121 --> 00:13:44.358 align:middle line:-1
<c.magenta>相当基础 刚好能重建这个游戏</c>

00:13:45.325 --> 00:13:47.694 align:middle line:-1
<c.magenta>但我们想实现像这样的地图</c>

00:13:49.429 --> 00:13:53.166 align:middle line:-1
<c.magenta>我们的实现方式是将原始地图保存</c>

00:13:53.267 --> 00:13:56.837 align:middle line:-1
<c.magenta>为SCN文件 以便添加这些附加元素</c>

00:13:57.271 --> 00:14:00.174 align:middle line:-2
<c.magenta>对吧？那么我们不写代码</c>
<c.magenta>来放置每一个场景元素了</c>

00:13:57.271 --> 00:14:00.174 align:middle line:-2
<c.magenta>对吧？那么我们不写代码</c>
<c.magenta>来放置每一个场景元素了</c>

00:14:00.274 --> 00:14:03.043 align:middle line:-2
<c.magenta>我们现在可以在场景编辑器中实现了</c>
<c.magenta>因为那样更有意义</c>

00:14:03.944 --> 00:14:05.913 align:middle line:-2
<c.magenta>若我们在SceneKit</c>
<c.magenta>场景编辑器中看一下</c>

00:14:07.080 --> 00:14:10.984 align:middle line:-2
<c.magenta>它看起来很棒</c>
<c.magenta>但现在我们投入了很多时间和精力</c>

00:14:11.051 --> 00:14:12.586 align:middle line:-1
<c.magenta>给每一个单独的地图</c>

00:14:12.886 --> 00:14:15.856 align:middle line:-2
<c.magenta>你可以看到这是通过</c>
<c.magenta>左边的节点层级实现的</c>

00:14:17.524 --> 00:14:21.295 align:middle line:-2
<c.magenta>那么问题是你仍然希望</c>
<c.magenta>保持一定数量的灵活性</c>

00:14:21.361 --> 00:14:23.163 align:middle line:-1
<c.magenta>确保设计师不会在下一周过来说</c>

00:14:23.230 --> 00:14:25.065 align:middle line:-1
<c.magenta>“我做了个新瀑布 看起来更好”</c>

00:14:25.232 --> 00:14:27.134 align:middle line:-1
<c.magenta>那你不需要修改81幅地图</c>

00:14:27.868 --> 00:14:30.704 align:middle line:-1
<c.magenta>实现方式是如果我们近距离看瀑布</c>

00:14:31.672 --> 00:14:33.607 align:middle line:-1
<c.magenta>它使用了一个叫作引用节点的技术</c>

00:14:34.141 --> 00:14:36.844 align:middle line:-1
<c.magenta>那么这些是我们场景中的水节点</c>

00:14:37.144 --> 00:14:40.013 align:middle line:-1
<c.magenta>而箭头表示它们被引用到</c>

00:14:40.080 --> 00:14:41.582 align:middle line:-1
<c.magenta>一个单一的SCN文件</c>

00:14:41.782 --> 00:14:45.252 align:middle line:-2
<c.magenta>那么你只需要更新那一个文件</c>
<c.magenta>它就会传导到全部地图中</c>

00:14:47.454 --> 00:14:49.356 align:middle line:-1
<c.magenta>现在这并不是与水相关的全部问题</c>

00:14:50.090 --> 00:14:51.758 align:middle line:-1
<c.magenta>若我们再仔细看看那个SCN文件</c>

00:14:53.093 --> 00:14:55.596 align:middle line:-2
<c.magenta>像水这样的元素必须得动起来</c>
<c.magenta>看着才会有意思</c>

00:14:55.662 --> 00:14:57.097 align:middle line:-1
<c.magenta>对吧？设计师在这里做得不错</c>

00:14:57.164 --> 00:15:00.000 align:middle line:-1
<c.magenta>纹理看起来超棒 但它不真实</c>

00:15:01.335 --> 00:15:03.370 align:middle line:-1
<c.magenta>那么为了实现水的移动</c>

00:15:03.437 --> 00:15:05.973 align:middle line:-2
<c.magenta>我们要使用一个技术</c>
<c.magenta>一个几何体修改器</c>

00:15:06.039 --> 00:15:09.142 align:middle line:-1
<c.magenta>其实是写一个着色器 你可以通过</c>

00:15:09.243 --> 00:15:11.545 align:middle line:-1
<c.magenta>右下方的按钮获取</c>

00:15:12.479 --> 00:15:14.581 align:middle line:-1
<c.magenta>我把它放大一点 不然很难看到</c>

00:15:15.415 --> 00:15:17.985 align:middle line:-2
<c.magenta>那会打开一个托盘</c>
<c.magenta>是Xcode 9中的新功能</c>

00:15:18.619 --> 00:15:21.989 align:middle line:0
<c.magenta>你可以修改或指定</c>
<c.magenta>你的几何体修改器</c>

00:15:22.256 --> 00:15:25.993 align:middle line:0
<c.magenta>构建由SceneKit提供给你的</c>
<c.magenta>这个SCN着色器几何体类型</c>

00:15:26.627 --> 00:15:27.728 align:middle line:0
<c.magenta>那么这要实现的是</c>

00:15:27.794 --> 00:15:29.963 align:middle line:0
<c.magenta>围绕瀑布移动纹理</c>

00:15:30.497 --> 00:15:31.732 align:middle line:0
<c.magenta>但它添加了一个很棒的效果</c>

00:15:32.399 --> 00:15:33.433 align:middle line:0
<c.magenta>让我们看一下效果</c>

00:15:38.872 --> 00:15:39.706 align:middle line:-1
<c.magenta>开始吧</c>

00:15:40.007 --> 00:15:41.942 align:middle line:-1
<c.magenta>那么现在水实际上是在流动的</c>

00:15:42.075 --> 00:15:43.610 align:middle line:-1
<c.magenta>你可以看到纹理的移动</c>

00:15:43.677 --> 00:15:44.978 align:middle line:-1
<c.magenta>且它添加了这个很棒的效果</c>

00:15:45.445 --> 00:15:48.916 align:middle line:-2
<c.magenta>我们将采用同样的技术</c>
<c.magenta>处理场景中摇摆的葡萄藤</c>

00:15:48.982 --> 00:15:51.251 align:middle line:-1
<c.magenta>以及被微风吹动的小草</c>

00:15:51.518 --> 00:15:53.720 align:middle line:-1
<c.magenta>那么这给你的场景添加了许多生气</c>

00:15:54.121 --> 00:15:56.089 align:middle line:-1
<c.magenta>这是一个很棒的技术 你可以尝试一下</c>

00:15:57.424 --> 00:15:58.258 align:middle line:-1
<c.magenta>这是第三点</c>

00:15:59.092 --> 00:16:00.994 align:middle line:-1
<c.magenta>我们真的很关注视觉效果</c>

00:15:59.092 --> 00:16:00.994 align:middle line:-1
<c.magenta>我们真的很关注视觉效果</c>

00:16:01.929 --> 00:16:04.498 align:middle line:-2
<c.magenta>我们采取了若干步骤</c>
<c.magenta>来解决如何让效果更棒的问题</c>

00:16:04.831 --> 00:16:06.967 align:middle line:-2
<c.magenta>但还有另外一整个方面</c>
<c.magenta>也是你要考虑到的</c>

00:16:07.434 --> 00:16:10.637 align:middle line:-2
<c.magenta>这就是对于有视力障碍的用户来说</c>
<c.magenta>场景看起来是什么样的</c>

00:16:12.372 --> 00:16:15.776 align:middle line:-2
<c.magenta>那么当你尝试在VoiceOver中</c>
<c.magenta>设计一个很棒的体验时</c>

00:16:16.510 --> 00:16:19.313 align:middle line:-2
<c.magenta>很明显 你希望更多地关注元素</c>
<c.magenta>而不是视觉效果</c>

00:16:19.813 --> 00:16:21.949 align:middle line:-1
<c.magenta>但我不会描述我们所做的一切</c>

00:16:22.015 --> 00:16:24.151 align:middle line:-1
<c.magenta>我首先希望你先听一下这个体验</c>

00:16:29.256 --> 00:16:30.324 align:middle line:-1
<c.magenta><i>打开VoiceOver</i></c>

00:16:30.557 --> 00:16:31.458 align:middle line:-1
<c.magenta><i>横屏</i></c>

00:16:32.326 --> 00:16:34.761 align:middle line:-1
<c.magenta><i>这个世界是五栏乘五行</i></c>

00:16:35.929 --> 00:16:39.800 align:middle line:-1
<c.magenta><i>栏0 行0 百特的高度为0 面朝北</i></c>

00:16:40.334 --> 00:16:42.236 align:middle line:-1
<c.magenta><i>轻触两次切换角色</i></c>

00:16:42.369 --> 00:16:45.472 align:middle line:-1
<c.magenta><i>栏0 行1 宝石高度为0</i></c>

00:16:52.045 --> 00:16:55.148 align:middle line:-1
<c.magenta>那么…我们采取了一系列的操作</c>

00:16:55.215 --> 00:16:56.984 align:middle line:-2
<c.magenta>以在Learn to Code中</c>
<c.magenta>支持VoiceOver</c>

00:16:57.951 --> 00:16:59.453 align:middle line:-1
<c.magenta>但我希望你注意到的第一件事是</c>

00:16:59.953 --> 00:17:03.290 align:middle line:-2
<c.magenta>我们其实关注的是一个</c>
<c.magenta>很棒的非视觉体验</c>

00:16:59.953 --> 00:17:03.290 align:middle line:-2
<c.magenta>我们其实关注的是一个</c>
<c.magenta>很棒的非视觉体验</c>

00:17:03.457 --> 00:17:06.226 align:middle line:-1
<c.magenta>通过添加音乐 通过添加角色声音</c>

00:17:06.425 --> 00:17:10.063 align:middle line:-1
<c.magenta>你让这个场景听起来很丰富</c>

00:17:11.898 --> 00:17:15.169 align:middle line:-2
<c.magenta>我们还向VoiceOver中</c>
<c.magenta>添加了其它东西</c>

00:17:15.301 --> 00:17:17.503 align:middle line:-1
<c.magenta>要深入研究这些技巧</c>

00:17:17.671 --> 00:17:19.473 align:middle line:-1
<c.magenta>请参看今年的一场很不错的演讲</c>

00:17:19.573 --> 00:17:21.875 align:middle line:0
<c.magenta>关于使媒体和游戏可理解</c>

00:17:23.210 --> 00:17:24.877 align:middle line:0
<c.magenta>对我们来说非常重要的一点</c>

00:17:25.212 --> 00:17:28.281 align:middle line:0
<c.magenta>其实是使用VoiceOver</c>
<c.magenta>描述重要的地理位置</c>

00:17:28.949 --> 00:17:31.552 align:middle line:-1
<c.magenta>我想具体介绍这个的原因是</c>

00:17:31.685 --> 00:17:33.587 align:middle line:-1
<c.magenta>因为它惊人简单</c>

00:17:34.421 --> 00:17:36.190 align:middle line:-1
<c.magenta>那么跟你的UIKit应用一样</c>

00:17:36.924 --> 00:17:38.892 align:middle line:-1
<c.magenta>我们覆盖一个可访问性元素</c>

00:17:39.960 --> 00:17:42.262 align:middle line:-1
<c.magenta>我们可以提供一个自定义标签</c>

00:17:43.030 --> 00:17:45.399 align:middle line:-1
<c.magenta>在本例中 我们提供了一个标签</c>

00:17:45.699 --> 00:17:48.235 align:middle line:-1
<c.magenta>用于更新世界的当前内容</c>

00:17:49.536 --> 00:17:53.273 align:middle line:-2
<c.magenta>所以这是你已经在UIKit中</c>
<c.magenta>熟练运用的同样技巧</c>

00:17:53.507 --> 00:17:54.675 align:middle line:-1
<c.magenta>就是那么简单</c>

00:17:54.741 --> 00:17:56.310 align:middle line:-1
<c.magenta>你创建其中一个元素</c>

00:17:57.444 --> 00:17:59.279 align:middle line:-1
<c.magenta>你指定它的帧</c>

00:17:59.746 --> 00:18:03.150 align:middle line:-2
<c.magenta>我们使用SceneKit中的projectPoint</c>
<c.magenta>从3D到2D</c>

00:17:59.746 --> 00:18:03.150 align:middle line:-2
<c.magenta>我们使用SceneKit中的projectPoint</c>
<c.magenta>从3D到2D</c>

00:18:03.750 --> 00:18:05.285 align:middle line:-1
<c.magenta>并将那个元素添加到视图中</c>

00:18:06.553 --> 00:18:10.157 align:middle line:-2
<c.magenta>那么我的观点是</c>
<c.magenta>即便3D看起来很难获取</c>

00:18:10.691 --> 00:18:11.725 align:middle line:-1
<c.magenta>它其实很简单</c>

00:18:11.792 --> 00:18:13.460 align:middle line:-1
<c.magenta>它就是你已经熟悉的技巧</c>

00:18:14.094 --> 00:18:16.697 align:middle line:-1
<c.magenta>那么有三个主要原因</c>

00:18:17.531 --> 00:18:18.932 align:middle line:-1
<c.magenta>第一 这对于你的用户来说很棒</c>

00:18:19.433 --> 00:18:21.602 align:middle line:-1
<c.magenta>最值得的其中一方面很可能</c>

00:18:21.768 --> 00:18:23.537 align:middle line:-1
<c.magenta>我认为是做这个项目</c>

00:18:24.705 --> 00:18:26.807 align:middle line:-1
<c.magenta>抱歉 我认为是最值得的其中一个方面</c>

00:18:27.474 --> 00:18:29.376 align:middle line:-1
<c.magenta>第二是实现就是那么简单</c>

00:18:30.244 --> 00:18:33.380 align:middle line:-2
<c.magenta>有来自UIKit开发中的一些</c>
<c.magenta>你很熟悉的东西</c>

00:18:33.914 --> 00:18:35.983 align:middle line:-1
<c.magenta>第三 就像没有理由</c>

00:18:36.183 --> 00:18:38.986 align:middle line:-2
<c.magenta>不让你的应用</c>
<c.magenta>在UIKit中可获取一样</c>

00:18:39.119 --> 00:18:41.555 align:middle line:-1
<c.magenta>也应该没有理由不在3D中这样做</c>

00:18:42.856 --> 00:18:45.392 align:middle line:-1
<c.magenta>那么如果你想看完整代码</c>

00:18:45.726 --> 00:18:48.262 align:middle line:-2
<c.magenta>你可以参看</c>
<c.magenta>Learn to Code资源</c>

00:18:48.629 --> 00:18:52.099 align:middle line:-2
<c.magenta>通过在Playground书中</c>
<c.magenta>深入研究辅助资源</c>

00:18:52.165 --> 00:18:55.836 align:middle line:0
<c.magenta>并且这个文件其实也存在于</c>
<c.magenta>Accessibilityextensions.swift中</c>

00:18:57.571 --> 00:18:59.106 align:middle line:0
<c.magenta>那么这就是迭代</c>

00:18:59.973 --> 00:19:03.777 align:middle line:-2
<c.magenta>我们谈了你应该如何将数据</c>
<c.magenta>与你场景的图形分离开来</c>

00:18:59.973 --> 00:19:03.777 align:middle line:-2
<c.magenta>我们谈了你应该如何将数据</c>
<c.magenta>与你场景的图形分离开来</c>

00:19:04.211 --> 00:19:06.046 align:middle line:-1
<c.magenta>对吧？我们将其用于给世界建模</c>

00:19:06.113 --> 00:19:07.948 align:middle line:-1
<c.magenta>还有如何实现台阶动画</c>

00:19:09.950 --> 00:19:12.119 align:middle line:-1
<c.magenta>你甚至应该在这个阶段就重视灵活性</c>

00:19:12.186 --> 00:19:14.555 align:middle line:-2
<c.magenta>那么当你把全部时间和精力</c>
<c.magenta>都花在这上面</c>

00:19:14.688 --> 00:19:17.057 align:middle line:-1
<c.magenta>确保你正在做像使用引用节点这样的事</c>

00:19:17.191 --> 00:19:19.092 align:middle line:-1
<c.magenta>以便你仍然有一些灵活性</c>

00:19:20.394 --> 00:19:23.864 align:middle line:-1
<c.magenta>那么最后 确保你提早审核可达性支持</c>

00:19:24.064 --> 00:19:26.233 align:middle line:-1
<c.magenta>它不是那种最后可以扩充的东西</c>

00:19:26.333 --> 00:19:29.136 align:middle line:-1
<c.magenta>如果你有计划它会惊人简单</c>

00:19:30.704 --> 00:19:34.208 align:middle line:-2
<c.magenta>现在让我们谈谈</c>
<c.magenta>如何获取这些设计时间资产</c>

00:19:34.374 --> 00:19:37.010 align:middle line:-2
<c.magenta>以及如何调整它们</c>
<c.magenta>使其拥有超级良好的性能</c>

00:19:37.144 --> 00:19:38.812 align:middle line:-1
<c.magenta>我要邀请Lemont上台</c>

00:19:41.615 --> 00:19:43.250 align:middle line:-1
<c.magenta>谢谢Michael 很棒</c>

00:19:45.485 --> 00:19:47.221 align:middle line:-1
<c.magenta>大家好 我是Lemont</c>

00:19:47.287 --> 00:19:49.489 align:middle line:-2
<c.magenta>我是Swift Playground</c>
<c.magenta>内容团队的工程师</c>

00:19:50.424 --> 00:19:51.959 align:middle line:-1
<c.magenta>今天我要跟大家谈谈</c>

00:19:52.025 --> 00:19:54.361 align:middle line:-1
<c.magenta>如何改进SceneKit应用的性能</c>

00:19:54.928 --> 00:19:57.464 align:middle line:-1
<c.magenta>关于帧频率和用户体验</c>

00:19:58.398 --> 00:20:00.000 align:middle line:-1
<c.magenta>（调整）</c>

00:20:00.067 --> 00:20:03.270 align:middle line:-2
<c.magenta>当我们首次开始开发</c>
<c.magenta>Learn to Code时</c>

00:20:04.104 --> 00:20:05.339 align:middle line:-1
<c.magenta>对我们来说最要紧的是</c>

00:20:05.405 --> 00:20:07.508 align:middle line:-1
<c.magenta>拥有一个非常丰富和细致的世界</c>

00:20:08.108 --> 00:20:10.377 align:middle line:-2
<c.magenta>正如你在这里所看到的</c>
<c.magenta>这就是我们所拥有的</c>

00:20:11.011 --> 00:20:12.746 align:middle line:-1
<c.magenta>瀑布看起来很逼真</c>

00:20:13.080 --> 00:20:17.184 align:middle line:-1
<c.magenta>台阶后的阴影看起来很棒</c>

00:20:17.251 --> 00:20:19.353 align:middle line:-1
<c.magenta>颜色也很丰富和生动</c>

00:20:19.520 --> 00:20:22.155 align:middle line:-1
<c.magenta>在瀑布中甚至还隐藏有漂亮的雕像</c>

00:20:23.557 --> 00:20:26.760 align:middle line:-2
<c.magenta>但正如你所了解的</c>
<c.magenta>一个看起来漂亮的应用</c>

00:20:27.594 --> 00:20:31.865 align:middle line:-1
<c.magenta>并不是拥有了不起用户体验的唯一方面</c>

00:20:31.999 --> 00:20:33.066 align:middle line:-1
<c.magenta>还有性能</c>

00:20:34.134 --> 00:20:35.369 align:middle line:-1
<c.magenta>那实际是什么意思呢？</c>

00:20:36.670 --> 00:20:39.306 align:middle line:-2
<c.magenta>要获得一个不错的体验</c>
<c.magenta>我们实际上得有</c>

00:20:39.373 --> 00:20:41.041 align:middle line:-1
<c.magenta>一个响应性很好的帧频率</c>

00:20:41.208 --> 00:20:43.043 align:middle line:-1
<c.magenta>你的用户正在与你的应用进行交互</c>

00:20:43.110 --> 00:20:44.745 align:middle line:-1
<c.magenta>他们正在缩放 他们正在做手势</c>

00:20:45.012 --> 00:20:47.047 align:middle line:-2
<c.magenta>他们正在向场景中添加对象</c>
<c.magenta>移除对象</c>

00:20:47.314 --> 00:20:49.183 align:middle line:-1
<c.magenta>你希望这个过程要很快 并且很流畅</c>

00:20:50.884 --> 00:20:52.653 align:middle line:-1
<c.magenta>那么我要给你展示我们是如何</c>

00:20:52.719 --> 00:20:54.821 align:middle line:-2
<c.magenta>在Learn to Code中</c>
<c.magenta>提升我们应用的性能</c>

00:20:57.925 --> 00:21:01.195 align:middle line:-2
<c.magenta>让我们看一个</c>
<c.magenta>拥有更复杂的几何学的场景</c>

00:20:57.925 --> 00:21:01.195 align:middle line:-2
<c.magenta>让我们看一个</c>
<c.magenta>拥有更复杂的几何学的场景</c>

00:21:01.428 --> 00:21:03.130 align:middle line:-1
<c.magenta>我提到复杂的几何学</c>

00:21:03.463 --> 00:21:09.837 align:middle line:-2
<c.magenta>我的意思是这个场景由成千上万个</c>
<c.magenta>独立的几何体零件组成</c>

00:21:11.171 --> 00:21:14.942 align:middle line:-2
<c.magenta>现在每一个零件</c>
<c.magenta>都分别要由GPU进行渲染</c>

00:21:16.343 --> 00:21:17.878 align:middle line:-1
<c.magenta>那么让我们来看看</c>

00:21:17.945 --> 00:21:19.813 align:middle line:-1
<c.magenta>我们应用的性能怎么样</c>

00:21:20.647 --> 00:21:24.351 align:middle line:-2
<c.magenta>SceneKit有一个很有用的工具</c>
<c.magenta>叫作调试统计视图</c>

00:21:26.053 --> 00:21:28.088 align:middle line:-1
<c.magenta>我想把它放大看一下</c>

00:21:29.656 --> 00:21:32.926 align:middle line:-2
<c.magenta>现在你可以在你的应用中启用这个功能</c>
<c.magenta>只需要把</c>

00:21:32.993 --> 00:21:36.296 align:middle line:-2
<c.magenta>你视图中的showStatistics属性</c>
<c.magenta>设为真即可</c>

00:21:38.632 --> 00:21:40.634 align:middle line:-1
<c.magenta>如果我们看一下这些更有意思的数字</c>

00:21:40.701 --> 00:21:43.103 align:middle line:-1
<c.magenta>…调试视图</c>

00:21:43.604 --> 00:21:46.707 align:middle line:-2
<c.magenta>你会注意到我们有一个很低的帧频率</c>
<c.magenta>每秒29帧</c>

00:21:47.341 --> 00:21:48.442 align:middle line:-1
<c.magenta>这可不好</c>

00:21:49.009 --> 00:21:51.812 align:middle line:-1
<c.magenta>我们实际上想要达到每秒至少60帧</c>

00:21:52.312 --> 00:21:55.115 align:middle line:-1
<c.magenta>这可以允许我们获得流畅的交互</c>

00:21:55.182 --> 00:21:57.317 align:middle line:-1
<c.magenta>当用户缩放或做手势的时候</c>

00:21:59.686 --> 00:22:01.588 align:middle line:-1
<c.magenta>到底是什么导致了这么低的帧频率呢？</c>

00:21:59.686 --> 00:22:01.588 align:middle line:-1
<c.magenta>到底是什么导致了这么低的帧频率呢？</c>

00:22:02.256 --> 00:22:03.490 align:middle line:-1
<c.magenta>让我们具体来看一下</c>

00:22:04.424 --> 00:22:05.659 align:middle line:-1
<c.magenta>每一帧都在做什么？</c>

00:22:06.960 --> 00:22:08.795 align:middle line:-1
<c.magenta>这里的这个数字是跟渲染有关的</c>

00:22:09.196 --> 00:22:13.667 align:middle line:-2
<c.magenta>是我们用来渲染</c>
<c.magenta>一个完整帧所需的时间</c>

00:22:15.169 --> 00:22:17.304 align:middle line:-1
<c.magenta>看起来我们需要20.4毫秒</c>

00:22:18.438 --> 00:22:19.506 align:middle line:-1
<c.magenta>太慢了</c>

00:22:19.940 --> 00:22:22.509 align:middle line:-2
<c.magenta>如果你算一下</c>
<c.magenta>如果你想达到每秒60帧</c>

00:22:22.576 --> 00:22:24.578 align:middle line:-1
<c.magenta>你必须得在16毫秒以下完成</c>

00:22:25.913 --> 00:22:28.248 align:middle line:-1
<c.magenta>我们花了20毫秒 都在干什么呢？</c>

00:22:29.449 --> 00:22:31.952 align:middle line:-2
<c.magenta>要帮助了解这个问题</c>
<c.magenta>我们可以看一下</c>

00:22:32.019 --> 00:22:32.986 align:middle line:-1
<c.magenta>绘制调用的数字</c>

00:22:33.053 --> 00:22:35.088 align:middle line:-2
<c.magenta>正如你所看到的</c>
<c.magenta>用这个方框突出显示了</c>

00:22:37.090 --> 00:22:38.792 align:middle line:-1
<c.magenta>现在 什么是绘制调用？</c>

00:22:39.927 --> 00:22:41.128 align:middle line:-1
<c.magenta>快速回顾一下</c>

00:22:41.728 --> 00:22:43.397 align:middle line:-1
<c.magenta>当你想在场景中绘制对象时</c>

00:22:43.463 --> 00:22:46.366 align:middle line:-2
<c.magenta>CPU必须得告诉GPU说</c>
<c.magenta>“嘿 绘制这个网格”</c>

00:22:47.234 --> 00:22:49.736 align:middle line:-1
<c.magenta>CPU绘制这个网格或几何体对象</c>

00:22:50.237 --> 00:22:51.271 align:middle line:-1
<c.magenta>那么这就是绘制调用</c>

00:22:52.239 --> 00:22:54.408 align:middle line:-1
<c.magenta>看起来我们一共有877个绘制调用</c>

00:22:55.375 --> 00:22:56.710 align:middle line:-1
<c.magenta>有相当多的绘制调用</c>

00:22:56.877 --> 00:22:58.979 align:middle line:-1
<c.magenta>那么我们可以做什么</c>

00:22:59.046 --> 00:23:00.881 align:middle line:-1
<c.magenta>以实际提升我们应用的性能呢？</c>

00:22:59.046 --> 00:23:00.881 align:middle line:-1
<c.magenta>以实际提升我们应用的性能呢？</c>

00:23:02.316 --> 00:23:04.251 align:middle line:-1
<c.magenta>我要跟你分享一个小技巧</c>

00:23:05.519 --> 00:23:09.223 align:middle line:-2
<c.magenta>那么在我们接下来的演讲中有一个主题</c>
<c.magenta>就是如何减少绘制调用的数量</c>

00:23:12.492 --> 00:23:15.896 align:middle line:-1
<c.magenta>我要跟大家谈三个明显的时期：</c>

00:23:18.031 --> 00:23:21.034 align:middle line:-1
<c.magenta>组成场景的网格几何体</c>

00:23:22.202 --> 00:23:24.905 align:middle line:-2
<c.magenta>给我们的场景</c>
<c.magenta>提供了一个漂亮外观的材料</c>

00:23:26.039 --> 00:23:28.242 align:middle line:-1
<c.magenta>以及让我们场景鲜活的光照</c>

00:23:30.944 --> 00:23:34.848 align:middle line:-1
<c.magenta>让我们看一个之前展示过的例子</c>

00:23:36.016 --> 00:23:39.786 align:middle line:-1
<c.magenta>现在这个场景有许多单一的零件</c>

00:23:40.153 --> 00:23:43.056 align:middle line:-1
<c.magenta>我想只看其中一种 小草</c>

00:23:45.392 --> 00:23:47.761 align:middle line:-1
<c.magenta>现在 如果你近距离地看</c>

00:23:48.962 --> 00:23:50.664 align:middle line:-1
<c.magenta>你们数学很好吧 你可以数一下</c>

00:23:50.797 --> 00:23:53.267 align:middle line:-1
<c.magenta>这个屏幕中大概有30个单一的方格</c>

00:23:54.234 --> 00:23:56.036 align:middle line:-1
<c.magenta>每个方格都有自己的网格</c>

00:23:56.870 --> 00:24:01.775 align:middle line:-2
<c.magenta>那么CPU必须告诉GPU</c>
<c.magenta>逐个渲染这些东西</c>

00:23:56.870 --> 00:24:01.775 align:middle line:-2
<c.magenta>那么CPU必须告诉GPU</c>
<c.magenta>逐个渲染这些东西</c>

00:24:01.942 --> 00:24:03.410 align:middle line:-1
<c.magenta>我们就有了30个绘制调用</c>

00:24:04.144 --> 00:24:05.212 align:middle line:-1
<c.magenta>现在这是一个小场景</c>

00:24:05.279 --> 00:24:08.482 align:middle line:-2
<c.magenta>想象一下 如果你想拥有一个很大</c>
<c.magenta>很广阔的世界</c>

00:24:08.549 --> 00:24:09.816 align:middle line:-1
<c.magenta>有成千上万个这样的方格</c>

00:24:10.150 --> 00:24:11.718 align:middle line:-1
<c.magenta>我们就会有成千上万个绘制调用</c>

00:24:11.919 --> 00:24:13.654 align:middle line:-1
<c.magenta>想象一下我们的帧频率会怎么样</c>

00:24:17.424 --> 00:24:21.061 align:middle line:-2
<c.magenta>你可能会注意到一点</c>
<c.magenta>这些小草方格可能不需要移动</c>

00:24:22.162 --> 00:24:27.367 align:middle line:-2
<c.magenta>那么如果它们不移动</c>
<c.magenta>我们为什么要绘制这么多呢？</c>

00:24:27.668 --> 00:24:30.070 align:middle line:-1
<c.magenta>我们是否也许可以绘制一个大的网格？</c>

00:24:32.439 --> 00:24:33.273 align:middle line:-1
<c.magenta>这是可以的</c>

00:24:35.542 --> 00:24:37.344 align:middle line:-1
<c.magenta>有一条规则我想要你记住</c>

00:24:37.978 --> 00:24:42.316 align:middle line:-2
<c.magenta>就是当你与GPU通讯时</c>
<c.magenta>每个网格有一个绘制调用</c>

00:24:42.749 --> 00:24:44.985 align:middle line:-2
<c.magenta>如果你有一千个网格</c>
<c.magenta>那么就有一千个绘制调用</c>

00:24:46.053 --> 00:24:48.055 align:middle line:-1
<c.magenta>那么如果我们看看我们的小草方格</c>

00:24:48.355 --> 00:24:50.257 align:middle line:-1
<c.magenta>实际上我们想无论如何把它们结合起来</c>

00:24:50.924 --> 00:24:52.426 align:middle line:-1
<c.magenta>听起来像是个很合理的技巧</c>

00:24:53.160 --> 00:24:54.361 align:middle line:-1
<c.magenta>我要给你们展示如何实现</c>

00:24:57.631 --> 00:25:00.667 align:middle line:-1
<c.magenta>假如我们在场景中有两个几何体对象</c>

00:24:57.631 --> 00:25:00.667 align:middle line:-1
<c.magenta>假如我们在场景中有两个几何体对象</c>

00:25:01.201 --> 00:25:03.403 align:middle line:-1
<c.magenta>左边有一个小草方格</c>

00:25:04.238 --> 00:25:06.173 align:middle line:-1
<c.magenta>右边有另一个小草方格</c>

00:25:07.841 --> 00:25:10.077 align:middle line:-2
<c.magenta>它们都引用了同一种材料</c>
<c.magenta>它们的样子也一样</c>

00:25:10.143 --> 00:25:11.378 align:middle line:-1
<c.magenta>它们只是移动了位置</c>

00:25:11.712 --> 00:25:13.914 align:middle line:-2
<c.magenta>并且它们在3D空间中</c>
<c.magenta>有不同的地理位置</c>

00:25:14.848 --> 00:25:18.285 align:middle line:-2
<c.magenta>当你把这个发送给GPU时</c>
<c.magenta>你将会得到两个绘制调用</c>

00:25:22.856 --> 00:25:25.959 align:middle line:-2
<c.magenta>如果我们通过一个叫作扁平的过程</c>
<c.magenta>把这两个合并在一起</c>

00:25:26.793 --> 00:25:30.264 align:middle line:-2
<c.magenta>我们所做的其实就像是在说</c>
<c.magenta>让我们把网格A的全部点取出来</c>

00:25:30.597 --> 00:25:35.469 align:middle line:-2
<c.magenta>并把它们结合到网格B的点中</c>
<c.magenta>形成一个超级哥斯拉网格</c>

00:25:37.437 --> 00:25:40.073 align:middle line:-1
<c.magenta>它的漂亮之处在于</c>

00:25:40.307 --> 00:25:42.776 align:middle line:-1
<c.magenta>全部这些点都引用了那一种材料</c>

00:25:43.110 --> 00:25:44.711 align:middle line:-1
<c.magenta>当CPU与GPU通讯时</c>

00:25:44.778 --> 00:25:47.080 align:middle line:-2
<c.magenta>它要做的就只是说</c>
<c.magenta>“嘿 绘制这一个东西”</c>

00:25:48.415 --> 00:25:53.287 align:middle line:-2
<c.magenta>完成了 现在这听来微不足道</c>
<c.magenta>非常简单易用</c>

00:25:54.788 --> 00:25:56.256 align:middle line:0
<c.magenta>你可以在你的应用中使用它</c>

00:25:56.924 --> 00:26:01.195 align:middle line:0
<c.magenta>通过SCNNode上的一个</c>
<c.magenta>叫作flattenedClone的方法</c>

00:25:56.924 --> 00:26:01.195 align:middle line:0
<c.magenta>通过SCNNode上的一个</c>
<c.magenta>叫作flattenedClone的方法</c>

00:26:01.929 --> 00:26:04.898 align:middle line:0
<c.magenta>你想做的就是确保有父节点</c>

00:26:05.866 --> 00:26:07.835 align:middle line:0
<c.magenta>包含你想要扁平化的节点</c>

00:26:08.936 --> 00:26:12.072 align:middle line:-1
<c.magenta>并且返回的是一个新的扁平化网格</c>

00:26:12.139 --> 00:26:15.209 align:middle line:-2
<c.magenta>你可以在你的场景中</c>
<c.magenta>合成和替换其它节点</c>

00:26:17.010 --> 00:26:20.180 align:middle line:-2
<c.magenta>现在这个简单的技巧</c>
<c.magenta>在整个Learn to Code中都能使用</c>

00:26:21.215 --> 00:26:23.650 align:middle line:-2
<c.magenta>所以如果我们以我之前</c>
<c.magenta>展示给你们的示例为例</c>

00:26:24.251 --> 00:26:26.153 align:middle line:-1
<c.magenta>我可以具体到每一个部分</c>

00:26:26.220 --> 00:26:28.488 align:middle line:-1
<c.magenta>关于哪些能运行这个扁平化逻辑</c>

00:26:29.356 --> 00:26:32.659 align:middle line:-2
<c.magenta>我要用红色突出显示</c>
<c.magenta>扁平化到一起的区域</c>

00:26:32.960 --> 00:26:35.329 align:middle line:-2
<c.magenta>你在这里可以看到</c>
<c.magenta>我们的水现在…小草方格…</c>

00:26:35.896 --> 00:26:39.166 align:middle line:-1
<c.magenta>…较少的…绘制调用</c>

00:26:39.900 --> 00:26:42.402 align:middle line:-1
<c.magenta>每一个红色部分相当于一个绘制调用</c>

00:26:42.469 --> 00:26:44.137 align:middle line:-1
<c.magenta>而不是单一的绘制调用</c>

00:26:45.873 --> 00:26:49.309 align:middle line:-2
<c.magenta>那么我们可以很大程度上减少</c>
<c.magenta>场景中绘制调用的次数</c>

00:26:51.011 --> 00:26:53.380 align:middle line:-1
<c.magenta>我们从550次绘制调用降到了</c>

00:26:53.780 --> 00:26:55.048 align:middle line:-1
<c.magenta>不到16次</c>

00:26:55.916 --> 00:26:56.884 align:middle line:-1
<c.magenta>降了很多</c>

00:26:59.319 --> 00:27:00.153 align:middle line:-1
<c.magenta>谢谢</c>

00:26:59.319 --> 00:27:00.153 align:middle line:-1
<c.magenta>谢谢</c>

00:27:01.855 --> 00:27:05.158 align:middle line:-1
<c.magenta>现在你得在这里用一点儿灵活性</c>

00:27:05.259 --> 00:27:08.228 align:middle line:-2
<c.magenta>因为你不想全部这些乱七八糟的</c>
<c.magenta>你知道的</c>

00:27:08.295 --> 00:27:09.696 align:middle line:-1
<c.magenta>扁平化全部这些东西</c>

00:27:10.531 --> 00:27:13.534 align:middle line:-1
<c.magenta>原因正如Michael之前给你们展示的</c>

00:27:14.535 --> 00:27:18.138 align:middle line:-2
<c.magenta>他让水看起来非常逼真</c>
<c.magenta>通过添加那个简单的着色器修改器</c>

00:27:18.205 --> 00:27:19.973 align:middle line:-1
<c.magenta>为我们提供了这种非常棒的效果</c>

00:27:21.175 --> 00:27:25.479 align:middle line:-1
<c.magenta>那么如果我们要扁平化所有一切</c>

00:27:26.046 --> 00:27:27.681 align:middle line:-1
<c.magenta>整个世界大概会一点一点地消失</c>

00:27:27.881 --> 00:27:28.815 align:middle line:-1
<c.magenta>这并不是我们想要的</c>

00:27:29.850 --> 00:27:34.788 align:middle line:-2
<c.magenta>那么我们可以有选择性地</c>
<c.magenta>选择要扁平化的东西</c>

00:27:35.088 --> 00:27:36.957 align:middle line:-1
<c.magenta>那么我们把整个瀑布扁平化</c>

00:27:37.691 --> 00:27:39.993 align:middle line:-1
<c.magenta>在你的世界中或你创建的游戏中</c>

00:27:40.761 --> 00:27:44.198 align:middle line:-1
<c.magenta>你可能选择让一个对象消失或移动</c>

00:27:44.264 --> 00:27:46.900 align:middle line:-1
<c.magenta>或缩放或旋转或无论怎样修改它</c>

00:27:47.534 --> 00:27:50.404 align:middle line:-1
<c.magenta>那么我认为要选择的东西</c>

00:27:51.405 --> 00:27:53.106 align:middle line:-1
<c.magenta>应该基于你想如何使用你的几何体</c>

00:27:53.173 --> 00:27:56.577 align:middle line:-1
<c.magenta>如果它有一些动态行为 你可能想与</c>

00:27:56.643 --> 00:27:59.213 align:middle line:-2
<c.magenta>其它拥有同一种移动方式的东西</c>
<c.magenta>一起执行扁平化</c>

00:28:04.251 --> 00:28:08.088 align:middle line:-1
<c.magenta>那么我要给你一些关于扁平化的小技巧</c>

00:28:08.689 --> 00:28:11.358 align:middle line:-2
<c.magenta>其中一个是你想存储你的节点</c>
<c.magenta>以在同一个组中进行扁平化</c>

00:28:11.425 --> 00:28:13.827 align:middle line:-1
<c.magenta>父组 父节点</c>

00:28:14.127 --> 00:28:16.597 align:middle line:-1
<c.magenta>并不一定是同一种几何体类型</c>

00:28:16.763 --> 00:28:18.198 align:middle line:-1
<c.magenta>我们在这里用的是小草方格 但是…</c>

00:28:18.265 --> 00:28:20.501 align:middle line:-1
<c.magenta>比如你正在给客厅建模</c>

00:28:20.567 --> 00:28:23.136 align:middle line:-1
<c.magenta>有一张沙发 一把椅子和一张桌子</c>

00:28:23.203 --> 00:28:24.671 align:middle line:-1
<c.magenta>它们相对静止</c>

00:28:25.372 --> 00:28:26.406 align:middle line:-1
<c.magenta>它们都可以</c>

00:28:26.473 --> 00:28:29.910 align:middle line:-2
<c.magenta>放到一个节点组中</c>
<c.magenta>并由这个组自己执行扁平化</c>

00:28:30.310 --> 00:28:31.678 align:middle line:-1
<c.magenta>在这里你想积极一点</c>

00:28:31.745 --> 00:28:34.414 align:middle line:-1
<c.magenta>任何东西相对于别的东西都不会移动</c>

00:28:35.482 --> 00:28:39.553 align:middle line:-2
<c.magenta>扁平化它</c>
<c.magenta>你将显著减少你的绘制调用数量</c>

00:28:41.522 --> 00:28:43.090 align:middle line:-1
<c.magenta>现在这里有一个警告</c>

00:28:44.491 --> 00:28:47.928 align:middle line:-2
<c.magenta>Learn to Code</c>
<c.magenta>的世界是静止的</c>

00:28:47.995 --> 00:28:51.298 align:middle line:-2
<c.magenta>它是一个很小的世界</c>
<c.magenta>只能在屏幕上可见</c>

00:28:51.765 --> 00:28:53.800 align:middle line:-1
<c.magenta>但对于你的世界 可能会非常广阔</c>

00:28:53.867 --> 00:28:55.736 align:middle line:-1
<c.magenta>你可以进入某一栋大楼或你…</c>

00:28:56.737 --> 00:28:59.006 align:middle line:-2
<c.magenta>…在一个大规模的地形上</c>
<c.magenta>或你有好几个层级</c>

00:28:59.773 --> 00:29:03.076 align:middle line:-1
<c.magenta>那么你想要做的是…你不想做的是</c>

00:28:59.773 --> 00:29:03.076 align:middle line:-1
<c.magenta>那么你想要做的是…你不想做的是</c>

00:29:03.210 --> 00:29:05.846 align:middle line:-2
<c.magenta>把全部东西都乱七八糟地堆在一起</c>
<c.magenta>因为即将发生的是</c>

00:29:06.346 --> 00:29:08.415 align:middle line:-1
<c.magenta>如果你有整个世界的地图集</c>

00:29:08.849 --> 00:29:10.951 align:middle line:-1
<c.magenta>而场景中只能看到其中一部分</c>

00:29:11.018 --> 00:29:13.520 align:middle line:-2
<c.magenta>在任何时候</c>
<c.magenta>你都要付出一些性能方面的代价</c>

00:29:13.620 --> 00:29:16.723 align:middle line:-1
<c.magenta>即渲染全部这些点和全部网格</c>

00:29:17.124 --> 00:29:18.058 align:middle line:-1
<c.magenta>这并不是你想要的</c>

00:29:19.459 --> 00:29:20.694 align:middle line:-1
<c.magenta>这里有一个小技巧</c>

00:29:20.961 --> 00:29:23.530 align:middle line:-2
<c.magenta>就是简单地把你的世界</c>
<c.magenta>细分为不连续的组块</c>

00:29:24.598 --> 00:29:27.267 align:middle line:-1
<c.magenta>然后在每一个组块上运行这个过程</c>

00:29:27.634 --> 00:29:30.904 align:middle line:-2
<c.magenta>当你从一个组块移动到另一个组块时</c>
<c.magenta>当相机从一个组块移动到另一个组块时</c>

00:29:31.371 --> 00:29:33.073 align:middle line:-1
<c.magenta>你实际上获得了扁平化的优点</c>

00:29:33.140 --> 00:29:37.678 align:middle line:-2
<c.magenta>而不需要付出</c>
<c.magenta>马上在场景中渲染一切的代价</c>

00:29:39.713 --> 00:29:41.682 align:middle line:-1
<c.magenta>接下来我要谈谈材料</c>

00:29:42.549 --> 00:29:46.520 align:middle line:-2
<c.magenta>现在材料对你的绘制调用数量</c>
<c.magenta>甚至影响更大</c>

00:29:48.121 --> 00:29:49.189 align:middle line:-1
<c.magenta>我会告诉你原因的</c>

00:29:50.924 --> 00:29:53.360 align:middle line:-1
<c.magenta>这个帧也是来自我之前展示的那个电影</c>

00:29:53.827 --> 00:29:58.632 align:middle line:-1
<c.magenta>就是我们展示扁平化的场景</c>

00:29:58.699 --> 00:30:02.069 align:middle line:-1
<c.magenta>这个世界的顶部几乎是在一个网格中</c>

00:29:58.699 --> 00:30:02.069 align:middle line:-1
<c.magenta>这个世界的顶部几乎是在一个网格中</c>

00:30:03.203 --> 00:30:04.338 align:middle line:-1
<c.magenta>所以这是一个绘制调用</c>

00:30:05.239 --> 00:30:09.343 align:middle line:-1
<c.magenta>但机警的你们可能会注意到</c>

00:30:10.077 --> 00:30:14.748 align:middle line:-2
<c.magenta>这里有多种材料</c>
<c.magenta>比如显然这些巨石阵</c>

00:30:14.815 --> 00:30:16.750 align:middle line:-1
<c.magenta>和台阶所用的材料不同</c>

00:30:17.184 --> 00:30:19.786 align:middle line:-1
<c.magenta>当然不是石头自身</c>

00:30:20.521 --> 00:30:21.455 align:middle line:-1
<c.magenta>那么这是怎么回事？</c>

00:30:23.357 --> 00:30:24.925 align:middle line:-1
<c.magenta>让我们谈谈减少材料</c>

00:30:25.292 --> 00:30:28.295 align:middle line:-1
<c.magenta>因为我们要降低到一个绘制调用</c>

00:30:30.063 --> 00:30:33.066 align:middle line:-1
<c.magenta>那么我们在屏幕上有两个几何体对象</c>

00:30:34.168 --> 00:30:36.336 align:middle line:-1
<c.magenta>一个在左边 一个在右边</c>

00:30:37.304 --> 00:30:39.473 align:middle line:-1
<c.magenta>一个用的是沙子纹理</c>

00:30:40.274 --> 00:30:43.277 align:middle line:-2
<c.magenta>一个用的是这种看起来</c>
<c.magenta>有沙子/小草的纹理</c>

00:30:44.611 --> 00:30:47.314 align:middle line:-2
<c.magenta>如果我们运行</c>
<c.magenta>我之前展示给你的逻辑 扁平化</c>

00:30:48.081 --> 00:30:52.052 align:middle line:-2
<c.magenta>我们实际上会把那个结合起来</c>
<c.magenta>哥斯拉网格</c>

00:30:52.519 --> 00:30:55.289 align:middle line:-1
<c.magenta>但我们仍然引用的是两种材料</c>

00:30:55.355 --> 00:30:58.258 align:middle line:-1
<c.magenta>那么当CPU与GPU通讯时 它会说</c>

00:30:58.325 --> 00:31:01.762 align:middle line:-2
<c.magenta>“嘿 获取这个网格</c>
<c.magenta>在上边绘制一些沙子材料”</c>

00:30:58.325 --> 00:31:01.762 align:middle line:-2
<c.magenta>“嘿 获取这个网格</c>
<c.magenta>在上边绘制一些沙子材料”</c>

00:31:02.329 --> 00:31:03.297 align:middle line:-1
<c.magenta>很棒 好的</c>

00:31:03.363 --> 00:31:05.465 align:middle line:-2
<c.magenta>现在再次获取这个网格</c>
<c.magenta>在上边绘制一部分</c>

00:31:05.532 --> 00:31:07.067 align:middle line:-1
<c.magenta>小草材料</c>

00:31:07.134 --> 00:31:08.402 align:middle line:-1
<c.magenta>你仍然有两个绘制调用</c>

00:31:09.469 --> 00:31:13.040 align:middle line:-1
<c.magenta>你是有机会减少绘制调用的次数的</c>

00:31:15.742 --> 00:31:17.811 align:middle line:-1
<c.magenta>你可能听说过纹理拼合</c>

00:31:18.645 --> 00:31:20.581 align:middle line:-1
<c.magenta>但也许你并不理解这到底是什么</c>

00:31:20.848 --> 00:31:22.015 align:middle line:-1
<c.magenta>这是一个非常简单的过程</c>

00:31:23.217 --> 00:31:25.586 align:middle line:-1
<c.magenta>你的设计师以及3D工具</c>

00:31:27.054 --> 00:31:31.458 align:middle line:-1
<c.magenta>把你的材料合并到一个纹理贴图集中</c>

00:31:33.293 --> 00:31:35.963 align:middle line:-1
<c.magenta>它们会在底层更新你的几何体</c>

00:31:36.029 --> 00:31:38.398 align:middle line:-1
<c.magenta>以便它指向纹理内正确的位元</c>

00:31:39.166 --> 00:31:41.969 align:middle line:-1
<c.magenta>但最终结果是你有一个绘制调用</c>

00:31:44.471 --> 00:31:45.372 align:middle line:-1
<c.magenta>现在能实现…</c>

00:31:47.307 --> 00:31:51.378 align:middle line:-1
<c.magenta>…即便你有…几个对象或上千个对象</c>

00:31:52.479 --> 00:31:54.748 align:middle line:-2
<c.magenta>在Learn to Code中</c>
<c.magenta>我将给你展示其中一个贴图集</c>

00:31:54.815 --> 00:31:56.350 align:middle line:-1
<c.magenta>是我刚展示给你的那个世界的贴图集</c>

00:31:56.950 --> 00:31:58.118 align:middle line:-1
<c.magenta>贴图集就是这个样子的</c>

00:32:00.487 --> 00:32:02.623 align:middle line:-1
<c.magenta>我们有70多种材料</c>

00:32:03.023 --> 00:32:05.325 align:middle line:-1
<c.magenta>我们可以浓缩成一个</c>

00:32:07.127 --> 00:32:08.161 align:middle line:-1
<c.magenta>这是一种很大的节约</c>

00:32:10.163 --> 00:32:12.699 align:middle line:-1
<c.magenta>这里有另一个优点你可能没有注意到</c>

00:32:14.401 --> 00:32:17.271 align:middle line:-2
<c.magenta>当你向场景中添加一种材料时</c>
<c.magenta>当你的场景加载时</c>

00:32:17.838 --> 00:32:22.509 align:middle line:-1
<c.magenta>在场景底层生成了一个着色器</c>

00:32:23.377 --> 00:32:24.978 align:middle line:-1
<c.magenta>你不能启动你的场景</c>

00:32:25.045 --> 00:32:26.880 align:middle line:-1
<c.magenta>除非着色器已完成编译</c>

00:32:26.947 --> 00:32:29.483 align:middle line:-2
<c.magenta>如果你有70种材料</c>
<c.magenta>你就有70个着色器</c>

00:32:29.716 --> 00:32:31.985 align:middle line:-1
<c.magenta>你有上百个对象</c>

00:32:32.386 --> 00:32:35.622 align:middle line:-2
<c.magenta>上百种材料</c>
<c.magenta>现在冷不防想到你的加载时间…</c>

00:32:35.689 --> 00:32:37.424 align:middle line:-1
<c.magenta>你被卡住了 等着场景加载</c>

00:32:38.425 --> 00:32:42.296 align:middle line:-2
<c.magenta>通过将它合并为</c>
<c.magenta>一种材料或较少的材料</c>

00:32:42.529 --> 00:32:44.898 align:middle line:-1
<c.magenta>你减少了需要编译的着色器的数量</c>

00:32:45.165 --> 00:32:46.366 align:middle line:-1
<c.magenta>推进了你的启动时间</c>

00:32:47.734 --> 00:32:51.705 align:middle line:-2
<c.magenta>更不要提较少的I/O了</c>
<c.magenta>在读写硬盘方面</c>

00:32:55.542 --> 00:32:57.244 align:middle line:-1
<c.magenta>那么接下来我想谈谈光照</c>

00:32:58.312 --> 00:33:00.080 align:middle line:-1
<c.magenta>现在光照很有意思 因为…</c>

00:32:58.312 --> 00:33:00.080 align:middle line:-1
<c.magenta>现在光照很有意思 因为…</c>

00:33:01.415 --> 00:33:06.220 align:middle line:-2
<c.magenta>光照允许你给你的世界增加丰富</c>
<c.magenta>逼真的细节</c>

00:33:07.020 --> 00:33:09.456 align:middle line:-2
<c.magenta>你想象一个这样的场景</c>
<c.magenta>看起来是静态的 有点了无生趣</c>

00:33:09.790 --> 00:33:12.426 align:middle line:-1
<c.magenta>你添加光照 现在看起来有点意思了</c>

00:33:13.227 --> 00:33:17.898 align:middle line:-2
<c.magenta>那么让我们的设计师在场景中</c>
<c.magenta>添加一些光照</c>

00:33:17.965 --> 00:33:19.333 align:middle line:-1
<c.magenta>然后给我们提供了这个视觉效果</c>

00:33:20.934 --> 00:33:23.470 align:middle line:-2
<c.magenta>我们添加了聚光灯</c>
<c.magenta>因此当角色在世界中走来走去时</c>

00:33:23.537 --> 00:33:28.308 align:middle line:-2
<c.magenta>当他们沿着瀑布或草地</c>
<c.magenta>移动时会投射影子</c>

00:33:28.542 --> 00:33:29.376 align:middle line:-1
<c.magenta>这是个不错的效果</c>

00:33:30.844 --> 00:33:34.014 align:middle line:-2
<c.magenta>我们添加了全方位光照</c>
<c.magenta>分散在整个场景中</c>

00:33:34.882 --> 00:33:36.316 align:middle line:-1
<c.magenta>增加了一点视觉效果</c>

00:33:36.416 --> 00:33:39.486 align:middle line:-1
<c.magenta>那么你可以看到前景中的台阶</c>

00:33:39.553 --> 00:33:41.889 align:middle line:-1
<c.magenta>比后景中的台阶要更高亮</c>

00:33:44.758 --> 00:33:46.426 align:middle line:-1
<c.magenta>最后 我们添加了环境光</c>

00:33:47.094 --> 00:33:50.464 align:middle line:-1
<c.magenta>以确保场景中的一切东西都是可见的</c>

00:33:50.531 --> 00:33:53.033 align:middle line:-1
<c.magenta>否则你将拥有非常暗的区域</c>

00:33:53.400 --> 00:33:54.935 align:middle line:-1
<c.magenta>是光照不能照亮的区域</c>

00:33:56.503 --> 00:33:57.638 align:middle line:-1
<c.magenta>你可以看到这种很棒的效果</c>

00:33:57.704 --> 00:33:59.706 align:middle line:-1
<c.magenta>如果你看一下水的阴影的话</c>

00:34:00.507 --> 00:34:01.341 align:middle line:-1
<c.magenta>非常整洁</c>

00:34:02.676 --> 00:34:04.878 align:middle line:-1
<c.magenta>现在这里有一点性能消耗</c>

00:34:04.945 --> 00:34:06.113 align:middle line:-1
<c.magenta>光照可不是免费的</c>

00:34:07.281 --> 00:34:08.815 align:middle line:-1
<c.magenta>记得我告诉过你的绘制调用吧</c>

00:34:09.349 --> 00:34:11.217 align:middle line:-2
<c.magenta>绘制调用的个数越多</c>
<c.magenta>你得到的性能就越少</c>

00:34:11.485 --> 00:34:12.418 align:middle line:-1
<c.magenta>你的应用呢？</c>

00:34:12.985 --> 00:34:17.224 align:middle line:-1
<c.magenta>无论何时当光照点亮网格时</c>

00:34:19.059 --> 00:34:20.460 align:middle line:-1
<c.magenta>都会生成一个额外绘制调用</c>

00:34:21.195 --> 00:34:22.795 align:middle line:-1
<c.magenta>你的场景中有五个光照</c>

00:34:23.429 --> 00:34:25.699 align:middle line:-1
<c.magenta>你就增加了五个绘制调用</c>

00:34:27.801 --> 00:34:29.803 align:middle line:-1
<c.magenta>有一种方式可以避免这种情况</c>

00:34:31.205 --> 00:34:32.639 align:middle line:-1
<c.magenta>叫作光照图</c>

00:34:34.074 --> 00:34:38.045 align:middle line:-2
<c.magenta>现在的情况是你的设计师</c>
<c.magenta>和他们的3D工具</c>

00:34:38.145 --> 00:34:43.050 align:middle line:-1
<c.magenta>将运行一个过程 计算广告所在位置</c>

00:34:43.116 --> 00:34:45.518 align:middle line:-2
<c.magenta>他们可以很大方地把光照</c>
<c.magenta>放在他们想要放的地方</c>

00:34:45.585 --> 00:34:46.786 align:middle line:-1
<c.magenta>点亮所有东西</c>

00:34:47.187 --> 00:34:48.822 align:middle line:-1
<c.magenta>那实际上会预计算</c>

00:34:49.121 --> 00:34:51.859 align:middle line:-1
<c.magenta>你场景中的广告强度</c>

00:34:52.125 --> 00:34:53.694 align:middle line:-1
<c.magenta>并把它存储在一种材料中</c>

00:34:53.893 --> 00:34:56.230 align:middle line:-1
<c.magenta>而不像我们之前展示给你们的纹理一样</c>

00:34:57.397 --> 00:34:59.867 align:middle line:-1
<c.magenta>这里的漂亮之处在于</c>

00:35:00.834 --> 00:35:04.271 align:middle line:-1
<c.magenta>这个过程不是CPU或GPU加强的</c>

00:35:04.438 --> 00:35:05.672 align:middle line:-1
<c.magenta>事实上它是免费的</c>

00:35:05.739 --> 00:35:07.407 align:middle line:-1
<c.magenta>让我们再花点时间谈谈它</c>

00:35:07.474 --> 00:35:11.111 align:middle line:-2
<c.magenta>而不是讲实际会占用多少CPU</c>
<c.magenta>来应用这个</c>

00:35:12.546 --> 00:35:15.249 align:middle line:-2
<c.magenta>那么只要我们想</c>
<c.magenta>我们可以把光照数量降低到零</c>

00:35:16.183 --> 00:35:17.017 align:middle line:-1
<c.magenta>现在我们不这样做</c>

00:35:17.851 --> 00:35:19.386 align:middle line:-1
<c.magenta>我们留了一个聚光灯</c>

00:35:20.020 --> 00:35:23.357 align:middle line:-2
<c.magenta>因为我们区分开了</c>
<c.magenta>不是每帧都会改变的光照</c>

00:35:23.423 --> 00:35:24.791 align:middle line:-1
<c.magenta>我们为什么还要再次渲染这些光照呢</c>

00:35:24.858 --> 00:35:26.627 align:middle line:-2
<c.magenta>我们在上一帧中就进行了渲染</c>
<c.magenta>但什么也没变</c>

00:35:27.794 --> 00:35:29.530 align:middle line:-1
<c.magenta>但聚光灯会改变</c>

00:35:29.930 --> 00:35:30.931 align:middle line:-1
<c.magenta>随着你旋转这个世界</c>

00:35:30.998 --> 00:35:34.101 align:middle line:-1
<c.magenta>聚光灯也会以不同的方式照亮对象</c>

00:35:35.002 --> 00:35:37.104 align:middle line:-2
<c.magenta>当你让自己的角色</c>
<c.magenta>在这个世界走来走去时</c>

00:35:37.504 --> 00:35:41.008 align:middle line:-2
<c.magenta>它的影子会以不同方式</c>
<c.magenta>投射在这个世界</c>

00:35:41.808 --> 00:35:42.643 align:middle line:-1
<c.magenta>所以我们保留了聚光灯</c>

00:35:43.143 --> 00:35:47.414 align:middle line:-1
<c.magenta>但我们确保指定把它应用在哪里</c>

00:35:49.383 --> 00:35:51.985 align:middle line:-1
<c.magenta>角色或场景的某个部分</c>

00:35:53.754 --> 00:35:57.991 align:middle line:-2
<c.magenta>好消息是它可以与我之前</c>
<c.magenta>展示给你们的扁平化一起处理</c>

00:35:58.058 --> 00:36:01.428 align:middle line:-1
<c.magenta>因为很明显 光照就像一个</c>

00:35:58.058 --> 00:36:01.428 align:middle line:-1
<c.magenta>因为很明显 光照就像一个</c>

00:36:01.495 --> 00:36:02.529 align:middle line:-1
<c.magenta>绘制调用的倍增器</c>

00:36:02.829 --> 00:36:03.664 align:middle line:-1
<c.magenta>你猜怎么样</c>

00:36:04.298 --> 00:36:05.432 align:middle line:-1
<c.magenta>我们减少了第一项</c>

00:36:05.499 --> 00:36:10.304 align:middle line:-1
<c.magenta>我们减少了需要点亮的网格数量</c>

00:36:11.805 --> 00:36:13.640 align:middle line:-1
<c.magenta>如果我们真的想在那儿放一个光照</c>

00:36:13.707 --> 00:36:15.976 align:middle line:-1
<c.magenta>效果也不会比我们刚启动时差</c>

00:36:17.211 --> 00:36:19.813 align:middle line:-1
<c.magenta>那么在进行这些修改后</c>

00:36:20.948 --> 00:36:22.916 align:middle line:-2
<c.magenta>让我们看一下我们的性能</c>
<c.magenta>看看我们现在怎么样</c>

00:36:25.385 --> 00:36:26.253 align:middle line:0
<c.magenta>让我们放大</c>

00:36:26.320 --> 00:36:28.222 align:middle line:0
<c.magenta>实际上我想花点时间欣赏一下</c>

00:36:28.689 --> 00:36:30.591 align:middle line:0
<c.magenta>光照图的效果 太棒了</c>

00:36:31.725 --> 00:36:33.360 align:middle line:0
<c.magenta>如果你看一下第一个台阶的后面</c>

00:36:33.427 --> 00:36:36.096 align:middle line:0
<c.magenta>你会看到那个小的阴影以及裂缝</c>
<c.magenta>还有…</c>

00:36:36.430 --> 00:36:38.599 align:middle line:0
<c.magenta>…甚至在瀑布后面也稍微有点暗</c>

00:36:39.433 --> 00:36:42.736 align:middle line:0
<c.magenta>岩石周围和巨石阵中的弯曲区域</c>

00:36:42.803 --> 00:36:43.904 align:middle line:0
<c.magenta>看起来真的很棒</c>

00:36:44.271 --> 00:36:46.173 align:middle line:0
<c.magenta>你知道吗 你并没有付出任何代价</c>

00:36:46.240 --> 00:36:48.909 align:middle line:0
<c.magenta>这都是通过使用材料离线实现的</c>

00:36:49.309 --> 00:36:52.045 align:middle line:0
<c.magenta>我们的设计师</c>
<c.magenta>因为光照和3D工具而疯狂</c>

00:36:53.146 --> 00:36:54.915 align:middle line:0
<c.magenta>现在我放大性能图</c>

00:36:57.184 --> 00:36:58.452 align:middle line:-1
<c.magenta>哇哦 我们现在达到每秒60帧了</c>

00:36:58.519 --> 00:37:01.188 align:middle line:-2
<c.magenta>我们的用户不会关闭我们的应用</c>
<c.magenta>而去做其它事了</c>

00:36:58.519 --> 00:37:01.188 align:middle line:-2
<c.magenta>我们的用户不会关闭我们的应用</c>
<c.magenta>而去做其它事了</c>

00:37:04.591 --> 00:37:05.759 align:middle line:-1
<c.magenta>让我们看看我们的渲染时间</c>

00:37:07.261 --> 00:37:08.795 align:middle line:-1
<c.magenta>是2.3毫秒</c>

00:37:09.429 --> 00:37:11.331 align:middle line:-1
<c.magenta>现在非常了不起 原因有很多</c>

00:37:12.032 --> 00:37:13.400 align:middle line:-1
<c.magenta>第一 记得我们说过</c>

00:37:13.467 --> 00:37:15.836 align:middle line:-1
<c.magenta>你必须得低于16毫秒…</c>

00:37:16.436 --> 00:37:18.505 align:middle line:-1
<c.magenta>…才能…</c>

00:37:20.574 --> 00:37:22.976 align:middle line:-1
<c.magenta>…实现每秒渲染60帧吗？</c>

00:37:23.877 --> 00:37:25.646 align:middle line:-1
<c.magenta>刚发布的那个新iPad</c>

00:37:26.446 --> 00:37:29.816 align:middle line:-1
<c.magenta>如果你想利用120赫兹技术刷新率</c>

00:37:30.684 --> 00:37:32.019 align:middle line:-1
<c.magenta>你得把那个数字降到7以下</c>

00:37:32.419 --> 00:37:33.520 align:middle line:-1
<c.magenta>我们是2以下 所以我们很不错</c>

00:37:34.288 --> 00:37:35.122 align:middle line:-1
<c.magenta>启动它</c>

00:37:37.457 --> 00:37:41.228 align:middle line:-1
<c.magenta>那么让我们谈谈净空高度</c>

00:37:42.296 --> 00:37:44.131 align:middle line:-1
<c.magenta>漂亮之处是这个数字很低</c>

00:37:44.431 --> 00:37:46.567 align:middle line:-1
<c.magenta>如果你想给你的场景中添加更多的对象</c>

00:37:46.633 --> 00:37:48.602 align:middle line:-1
<c.magenta>也许你想添加更多的游戏设置逻辑</c>

00:37:48.669 --> 00:37:52.806 align:middle line:-2
<c.magenta>通过GameplayKit</c>
<c.magenta>或你想联网</c>

00:37:52.873 --> 00:37:55.676 align:middle line:-1
<c.magenta>或者你只想丰富你的场景</c>

00:37:56.176 --> 00:37:57.778 align:middle line:-1
<c.magenta>告诉你的设计师“嘿 启动它</c>

00:37:57.845 --> 00:38:00.848 align:middle line:-2
<c.magenta>让我们在场景中添加更多对象</c>
<c.magenta>让它变得更精致”</c>

00:37:57.845 --> 00:38:00.848 align:middle line:-2
<c.magenta>让我们在场景中添加更多对象</c>
<c.magenta>让它变得更精致”</c>

00:38:01.582 --> 00:38:04.751 align:middle line:-1
<c.magenta>或者你只想节约电量 你可以那样做</c>

00:38:06.687 --> 00:38:08.288 align:middle line:-1
<c.magenta>最后让我们看看那个绘制调用的数量</c>

00:38:09.590 --> 00:38:13.794 align:middle line:-2
<c.magenta>哇哦 73 你还记得吧</c>
<c.magenta>刚才的数字超过了700</c>

00:38:14.161 --> 00:38:19.066 align:middle line:-1
<c.magenta>我们现在使用的绘制调用数量</c>

00:38:19.132 --> 00:38:20.400 align:middle line:-1
<c.magenta>比刚才的十分之一还要少</c>

00:38:20.934 --> 00:38:24.271 align:middle line:-2
<c.magenta>我们正在小口品尝</c>
<c.magenta>而不是像刚才那样狂吃</c>

00:38:24.838 --> 00:38:25.672 align:middle line:-1
<c.magenta>非常棒</c>

00:38:26.173 --> 00:38:27.674 align:middle line:-1
<c.magenta>我们的应用很流畅</c>

00:38:28.208 --> 00:38:30.344 align:middle line:-1
<c.magenta>当我们再提到净空高度时</c>

00:38:30.878 --> 00:38:31.778 align:middle line:-1
<c.magenta>你就要记得</c>

00:38:32.379 --> 00:38:34.681 align:middle line:-2
<c.magenta>你要在你的应用中</c>
<c.magenta>实现其它事而不只是渲染</c>

00:38:34.848 --> 00:38:38.819 align:middle line:-2
<c.magenta>在我们的例子中</c>
<c.magenta>我们在左侧运行了Swift编译器</c>

00:38:39.419 --> 00:38:43.924 align:middle line:-1
<c.magenta>用户可以编辑代码并点击菜单项</c>

00:38:43.991 --> 00:38:44.825 align:middle line:-1
<c.magenta>以及类似的操作</c>

00:38:45.993 --> 00:38:46.927 align:middle line:-1
<c.magenta>在你的应用中</c>

00:38:46.994 --> 00:38:48.829 align:middle line:-1
<c.magenta>也许用户正在做比如缩放</c>

00:38:48.896 --> 00:38:50.731 align:middle line:-1
<c.magenta>缩放或做一些选择 或…</c>

00:38:52.666 --> 00:38:55.169 align:middle line:-2
<c.magenta>你知道的</c>
<c.magenta>任何会占用更多处理时间的事情</c>

00:38:55.235 --> 00:38:56.837 align:middle line:-1
<c.magenta>按照你应用中的逻辑</c>

00:38:58.172 --> 00:38:59.006 align:middle line:-1
<c.magenta>很棒</c>

00:39:00.908 --> 00:39:02.075 align:middle line:-1
<c.magenta>那么回顾一下</c>

00:39:03.443 --> 00:39:05.078 align:middle line:-1
<c.magenta>我们讲了扁平化几何体</c>

00:39:05.145 --> 00:39:08.515 align:middle line:-1
<c.magenta>如何简便地实现性能优化</c>

00:39:08.582 --> 00:39:10.284 align:middle line:-1
<c.magenta>关于减少你的绘制调用数量</c>

00:39:11.718 --> 00:39:13.754 align:middle line:-1
<c.magenta>我们讲了使用纹理贴图集</c>

00:39:13.820 --> 00:39:15.722 align:middle line:-1
<c.magenta>就是你让你的设计师做的东西</c>

00:39:15.789 --> 00:39:16.957 align:middle line:-1
<c.magenta>你只需要利用即可</c>

00:39:17.024 --> 00:39:19.560 align:middle line:-1
<c.magenta>那将会减少你所使用的材料</c>

00:39:19.893 --> 00:39:21.862 align:middle line:-1
<c.magenta>从而影响加载时间</c>

00:39:21.962 --> 00:39:23.864 align:middle line:-1
<c.magenta>让你的应用启动更快</c>

00:39:24.765 --> 00:39:29.303 align:middle line:-1
<c.magenta>还会影响磁盘I/O 使加载对象减少</c>

00:39:30.270 --> 00:39:34.274 align:middle line:-1
<c.magenta>最后 它可以和几何体扁平化一起处理</c>

00:39:34.541 --> 00:39:37.010 align:middle line:-1
<c.magenta>确保尽可能少地绘制调用数量</c>

00:39:38.712 --> 00:39:41.481 align:middle line:-1
<c.magenta>最后使用光照图</c>

00:39:42.015 --> 00:39:44.585 align:middle line:-1
<c.magenta>给你的场景添加丰富的可视化细节</c>

00:39:45.919 --> 00:39:49.890 align:middle line:-1
<c.magenta>而不需要占用太多的GPU</c>

00:39:50.023 --> 00:39:50.958 align:middle line:-1
<c.magenta>让你的设计师疯狂起来吧</c>

00:39:53.393 --> 00:39:55.128 align:middle line:-1
<c.magenta>我们还有一些相关的演讲</c>

00:39:56.029 --> 00:39:57.731 align:middle line:-1
<c.magenta>谢谢 祝你们度过一个美好的WWDC</c>
