WEBVTT

00:00:20.316 --> 00:00:21.676 A:middle
&gt;&gt; 早上好

00:00:22.516 --> 00:00:25.166 A:middle
[掌声]

00:00:25.666 --> 00:00:27.306 A:middle
欢迎来到 tvOS 的新性能板块

00:00:27.886 --> 00:00:29.356 A:middle
我是 Hans  tvOS 团队的

00:00:29.356 --> 00:00:30.156 A:middle
一名工程师

00:00:30.796 --> 00:00:32.316 A:middle
今天早上  我将和我的同事

00:00:32.316 --> 00:00:33.766 A:middle
Marshall 一起

00:00:33.766 --> 00:00:34.436 A:middle
和大家介绍一下

00:00:34.436 --> 00:00:35.986 A:middle
tvOS 的优化和

00:00:35.986 --> 00:00:36.316 A:middle
新的 API

00:00:36.316 --> 00:00:38.476 A:middle
我们的演讲将分为两部分

00:00:38.476 --> 00:00:41.786 A:middle
首先我们将介绍 SDK 整体的

00:00:41.786 --> 00:00:42.986 A:middle
更新

00:00:42.986 --> 00:00:44.666 A:middle
我们先会介绍系统层面的

00:00:44.666 --> 00:00:46.306 A:middle
改善

00:00:46.306 --> 00:00:47.746 A:middle
接着我们将讲述一些

00:00:47.746 --> 00:00:48.176 A:middle
个别的小工具

00:00:48.896 --> 00:00:50.656 A:middle
之后 Marshall 会和你们介绍

00:00:50.656 --> 00:00:52.256 A:middle
一些关于视图控制器方面的

00:00:52.256 --> 00:00:53.486 A:middle
最新的 API

00:00:54.526 --> 00:00:55.386 A:middle
我们的内容很多

00:00:55.386 --> 00:00:56.696 A:middle
所以现在演讲开始

00:00:58.076 --> 00:01:00.256 A:middle
首先要讲的是 ODR

00:00:58.076 --> 00:01:00.256 A:middle
首先要讲的是 ODR

00:01:00.256 --> 00:01:00.876 A:middle
也就是按需资源

00:01:01.076 --> 00:01:03.406 A:middle
你们中的某些人对这个词可能比较陌生

00:01:03.406 --> 00:01:04.666 A:middle
ODR 使你们的 app 在 App 商店中

00:01:04.666 --> 00:01:05.966 A:middle
保存自己的资源

00:01:05.966 --> 00:01:07.166 A:middle
而不是被包含在

00:01:07.166 --> 00:01:07.496 A:middle
App Bundle 中

00:01:08.266 --> 00:01:09.686 A:middle
之后你的 app 可以在需要的时候

00:01:09.686 --> 00:01:10.776 A:middle
下载这些资源

00:01:11.746 --> 00:01:13.506 A:middle
它们可以使你的 app 下载速度更快

00:01:13.506 --> 00:01:16.336 A:middle
安装快捷

00:01:16.336 --> 00:01:17.306 A:middle
同时为用户

00:01:17.306 --> 00:01:18.346 A:middle
提供高质量的

00:01:18.346 --> 00:01:18.866 A:middle
内容

00:01:19.276 --> 00:01:20.876 A:middle
而这些操作

00:01:20.876 --> 00:01:22.356 A:middle
在任何时候

00:01:22.356 --> 00:01:24.676 A:middle
都不会占用用户设备的

00:01:25.996 --> 00:01:26.106 A:middle
本地存储

00:01:26.456 --> 00:01:28.186 A:middle
去年 App bundle 的

00:01:28.186 --> 00:01:30.986 A:middle
最大容量为

00:01:30.986 --> 00:01:31.556 A:middle
200MB

00:01:32.486 --> 00:01:33.766 A:middle
这会使你的 app 变得很简洁

00:01:33.766 --> 00:01:35.396 A:middle
最终 你的用户

00:01:35.396 --> 00:01:36.726 A:middle
也可以更快速地

00:01:36.726 --> 00:01:38.116 A:middle
使用你的 app

00:01:39.456 --> 00:01:40.666 A:middle
但是自那之后

00:01:40.666 --> 00:01:42.776 A:middle
也有很多人请求我们

00:01:42.776 --> 00:01:43.276 A:middle
提升这个最大值

00:01:43.976 --> 00:01:46.396 A:middle
所以在 tvOS 10.2 中  我们将最大值

00:01:46.396 --> 00:01:48.576 A:middle
提升了 20 多倍至

00:01:48.576 --> 00:01:49.146 A:middle
4G

00:01:49.806 --> 00:01:52.256 A:middle
所以  如果你有一个项目

00:01:52.256 --> 00:01:53.446 A:middle
是根据我们过去的最大值所制作的

00:01:53.446 --> 00:01:55.666 A:middle
而你又想在 App bundle 中

00:01:55.666 --> 00:01:56.816 A:middle
增加一些新的

00:01:56.816 --> 00:01:57.986 A:middle
资源

00:01:57.986 --> 00:01:59.516 A:middle
那我们新的最大值

00:01:59.516 --> 00:02:00.526 A:middle
将为这一切提供可能

00:01:59.516 --> 00:02:00.526 A:middle
将为这一切提供可能

00:02:01.656 --> 00:02:03.946 A:middle
首先 前往 Asset Catalog

00:02:05.226 --> 00:02:06.316 A:middle
选择你想要

00:02:06.316 --> 00:02:07.556 A:middle
移回至 App bundle 中的

00:02:07.556 --> 00:02:07.866 A:middle
资源

00:02:08.866 --> 00:02:10.406 A:middle
在属性面板的底部

00:02:10.406 --> 00:02:12.146 A:middle
删除

00:02:12.146 --> 00:02:12.636 A:middle
标签

00:02:13.676 --> 00:02:15.216 A:middle
现在  这些资源被捆绑了

00:02:15.846 --> 00:02:17.266 A:middle
所以运行时间内

00:02:17.266 --> 00:02:18.896 A:middle
你不需要先发出

00:02:18.896 --> 00:02:20.086 A:middle
捆绑资源需求

00:02:20.086 --> 00:02:21.346 A:middle
就可以直接使用这些资源

00:02:22.216 --> 00:02:24.036 A:middle
当然了  这个最大值的增长

00:02:24.036 --> 00:02:25.546 A:middle
并不会占用

00:02:25.996 --> 00:02:27.336 A:middle
你剩余的

00:02:27.336 --> 00:02:29.576 A:middle
资产包限额

00:02:29.926 --> 00:02:30.966 A:middle
它们将会保持在

00:02:30.966 --> 00:02:31.596 A:middle
20GB

00:02:31.756 --> 00:02:33.546 A:middle
所以  现在你的 App bundle

00:02:33.546 --> 00:02:35.456 A:middle
和内容的总量

00:02:35.456 --> 00:02:36.936 A:middle
将最多可以达到 24GB

00:02:36.936 --> 00:02:39.226 A:middle
而这个容量可以包含很多内容

00:02:39.886 --> 00:02:41.276 A:middle
我们相信这会使

00:02:41.586 --> 00:02:43.106 A:middle
你们 app 的用户体验

00:02:43.106 --> 00:02:44.176 A:middle
比以前更丰富

00:02:45.246 --> 00:02:47.396 A:middle
这就是 tvOS 中的 ODR

00:02:48.986 --> 00:02:50.956 A:middle
接下来  我要说一件振奋人心的事情

00:02:50.956 --> 00:02:53.726 A:middle
那就是 tvOS 11 将

00:02:53.726 --> 00:02:54.766 A:middle
完全支持 RTL

00:02:54.766 --> 00:02:55.566 A:middle
也就是从右至左的语言

00:02:57.086 --> 00:02:58.886 A:middle
所以  如果你的 app 在英语里是这个样子

00:02:58.886 --> 00:03:00.966 A:middle
那么在阿拉伯语中将是这个样子

00:02:58.886 --> 00:03:00.966 A:middle
那么在阿拉伯语中将是这个样子

00:03:00.966 --> 00:03:04.036 A:middle
在希伯来语中则是

00:03:04.036 --> 00:03:04.416 A:middle
这个样子

00:03:05.056 --> 00:03:07.016 A:middle
换句话说  你的文本

00:03:07.016 --> 00:03:09.946 A:middle
将从右至左排列

00:03:09.946 --> 00:03:11.726 A:middle
而你大部分的用户界面

00:03:11.726 --> 00:03:12.686 A:middle
将会自动反向

00:03:13.596 --> 00:03:15.626 A:middle
如果你在 iOS 或者 macOS 中

00:03:15.626 --> 00:03:18.016 A:middle
已经习惯了 RTL

00:03:18.016 --> 00:03:19.516 A:middle
那么你应该会很高兴

00:03:19.516 --> 00:03:21.256 A:middle
在 tvOS 中也有相同的

00:03:21.256 --> 00:03:21.786 A:middle
功能

00:03:22.386 --> 00:03:24.426 A:middle
不过如果你并不适应这个 我们也有

00:03:24.426 --> 00:03:25.196 A:middle
相应的推荐

00:03:26.356 --> 00:03:28.246 A:middle
首先是使用有基础的

00:03:28.246 --> 00:03:29.196 A:middle
国际化

00:03:30.416 --> 00:03:31.956 A:middle
基础国际化

00:03:32.296 --> 00:03:33.636 A:middle
将文本本地化与

00:03:33.636 --> 00:03:35.366 A:middle
UI 布局相分离

00:03:35.366 --> 00:03:36.376 A:middle
当你致力于 UI 时

00:03:36.796 --> 00:03:38.416 A:middle
本地化专家可以

00:03:38.416 --> 00:03:39.906 A:middle
继续翻译字符串

00:03:39.906 --> 00:03:41.676 A:middle
而不必担心

00:03:41.676 --> 00:03:42.116 A:middle
影响布局

00:03:42.116 --> 00:03:45.006 A:middle
所有通过基础国际化创作的

00:03:45.266 --> 00:03:47.256 A:middle
新项目都会在默认情况下

00:03:47.256 --> 00:03:48.256 A:middle
打开

00:03:48.676 --> 00:03:49.736 A:middle
所以如果你正在开始一个新项目

00:03:50.146 --> 00:03:51.086 A:middle
你已经可以使用这个功能了

00:03:51.406 --> 00:03:53.506 A:middle
不过如果你已经有一个

00:03:53.506 --> 00:03:54.606 A:middle
还没有采用这个功能的项目

00:03:54.606 --> 00:03:56.246 A:middle
你可以前往 Project Info

00:03:56.246 --> 00:03:57.916 A:middle
查看

00:03:57.916 --> 00:03:59.286 A:middle
Use Base Internationalization 的复选框

00:03:59.286 --> 00:04:02.086 A:middle
来使用该功能

00:03:59.286 --> 00:04:02.086 A:middle
来使用该功能

00:04:03.016 --> 00:04:04.926 A:middle
接下来  就是使用自动布局

00:04:05.536 --> 00:04:07.136 A:middle
尤其是在创作约束时的

00:04:07.136 --> 00:04:09.616 A:middle
前段或后端属性

00:04:09.616 --> 00:04:11.046 A:middle
而不是

00:04:11.046 --> 00:04:11.526 A:middle
左或右

00:04:11.866 --> 00:04:13.926 A:middle
当系统布局 UI 时

00:04:13.926 --> 00:04:16.046 A:middle
它可以根据

00:04:16.046 --> 00:04:17.505 A:middle
目前的语言方向

00:04:17.505 --> 00:04:18.866 A:middle
来推测

00:04:18.866 --> 00:04:19.676 A:middle
是向左还向右

00:04:20.206 --> 00:04:24.166 A:middle
最终在开发中

00:04:24.166 --> 00:04:25.406 A:middle
不断测试布局

00:04:26.296 --> 00:04:27.346 A:middle
为了实现这个功能

00:04:27.696 --> 00:04:28.786 A:middle
在 Scheme Settings 中

00:04:28.786 --> 00:04:29.986 A:middle
有一个选项

00:04:29.986 --> 00:04:31.416 A:middle
你可以暂时设置

00:04:31.416 --> 00:04:31.886 A:middle
运用的语言

00:04:33.236 --> 00:04:34.326 A:middle
如果你将其设置为阿拉伯语

00:04:35.226 --> 00:04:37.666 A:middle
希伯来语  甚至是从右至左的

00:04:37.666 --> 00:04:39.036 A:middle
虚构的语言

00:04:39.036 --> 00:04:40.216 A:middle
它都可以在不改变源语言的情况下

00:04:40.216 --> 00:04:41.376 A:middle
改变方向

00:04:42.766 --> 00:04:44.666 A:middle
RTL 支持对于 tvOS 来说

00:04:44.666 --> 00:04:46.636 A:middle
是今年新的技术

00:04:46.636 --> 00:04:48.826 A:middle
但是在 iOS 和 macOS 中

00:04:48.826 --> 00:04:49.546 A:middle
却已经运用了好几年

00:04:50.376 --> 00:04:51.616 A:middle
前几年的大会

00:04:51.616 --> 00:04:52.866 A:middle
对于 tvOS 对其的运用

00:04:52.866 --> 00:04:54.466 A:middle
提供了很好的指导作用

00:04:54.466 --> 00:04:54.776 A:middle
和实践经验

00:04:55.336 --> 00:04:56.416 A:middle
所以  我们强烈推荐你们来

00:04:56.416 --> 00:04:56.966 A:middle
试一试

00:04:57.416 --> 00:05:00.536 A:middle
当然了  RTL 支持是

00:04:57.416 --> 00:05:00.536 A:middle
当然了  RTL 支持是

00:05:00.536 --> 00:05:01.766 A:middle
建立在 TVML 中的

00:05:01.766 --> 00:05:03.036 A:middle
如果你在 app 中

00:05:03.036 --> 00:05:04.386 A:middle
使用 TVML 样板

00:05:04.386 --> 00:05:05.516 A:middle
你将免费获得所有的

00:05:05.516 --> 00:05:05.766 A:middle
性能

00:05:06.316 --> 00:05:11.376 A:middle
这就是 tvOS 中的 RTL 支持

00:05:11.466 --> 00:05:13.106 A:middle
接下来  我们来讲讲 Safe Area

00:05:14.636 --> 00:05:17.076 A:middle
很多电视在一些形状或形式中

00:05:17.076 --> 00:05:18.566 A:middle
会使用 Over scan

00:05:18.566 --> 00:05:20.256 A:middle
在这种情况下

00:05:20.256 --> 00:05:21.316 A:middle
用户不能看到所有的

00:05:21.316 --> 00:05:21.726 A:middle
像素

00:05:22.926 --> 00:05:24.316 A:middle
在过去

00:05:24.316 --> 00:05:25.606 A:middle
前面会建议你插入

00:05:25.606 --> 00:05:28.926 A:middle
视图内容

00:05:29.046 --> 00:05:30.166 A:middle
来进行手动的补偿

00:05:31.276 --> 00:05:33.386 A:middle
而协助你完成这个的 API

00:05:33.786 --> 00:05:34.436 A:middle
则是 UI scroll View

00:05:34.536 --> 00:05:36.176 A:middle
Over scan Compensation Insets

00:05:36.856 --> 00:05:37.866 A:middle
这些将为你提供

00:05:37.866 --> 00:05:39.836 A:middle
可以插入

00:05:39.836 --> 00:05:40.756 A:middle
你的视图或者

00:05:40.756 --> 00:05:42.846 A:middle
视图控制器配置码的数值

00:05:44.496 --> 00:05:46.946 A:middle
tvOS 11 会引入一个

00:05:46.946 --> 00:05:49.786 A:middle
更稳固的框架

00:05:49.786 --> 00:05:51.336 A:middle
来保证你的内容能够在更少的

00:05:51.336 --> 00:05:53.126 A:middle
工作量的情况下  还在安全以内

00:05:54.116 --> 00:05:56.086 A:middle
比如说

00:05:56.086 --> 00:05:57.356 A:middle
有些性能已经

00:05:57.356 --> 00:05:57.516 A:middle
自动为你更新

00:05:58.006 --> 00:06:00.976 A:middle
你视图的 safe Area Insets

00:05:58.006 --> 00:06:00.976 A:middle
你视图的 safe Area Insets

00:06:00.976 --> 00:06:02.936 A:middle
在视图层级中移动的过程里

00:06:02.936 --> 00:06:03.776 A:middle
自动更新了

00:06:04.886 --> 00:06:09.126 A:middle
而随着 Safe Area Inset 的变化

00:06:09.736 --> 00:06:11.316 A:middle
你视图中的 safe Layout Guide

00:06:11.316 --> 00:06:12.116 A:middle
也自动更新了

00:06:13.396 --> 00:06:15.306 A:middle
但是你还是可以

00:06:15.306 --> 00:06:18.236 A:middle
通过使用 UI View Controller 的

00:06:18.236 --> 00:06:18.816 A:middle
Additional Safe Area Insets

00:06:18.816 --> 00:06:20.376 A:middle
进行自定义操作

00:06:21.106 --> 00:06:22.866 A:middle
在计算 View Controller 的视图时

00:06:23.006 --> 00:06:24.816 A:middle
你在这里列举的数值

00:06:24.816 --> 00:06:26.256 A:middle
也将被

00:06:26.256 --> 00:06:27.016 A:middle
计算在内

00:06:28.956 --> 00:06:31.076 A:middle
现在如果你将自己的 app

00:06:31.076 --> 00:06:33.116 A:middle
链接到 tvOS11 中

00:06:33.116 --> 00:06:34.486 A:middle
你的 app 将受新性能支配

00:06:34.576 --> 00:06:36.556 A:middle
我们建议大家抓住机会

00:06:36.556 --> 00:06:39.216 A:middle
检查自己的 app

00:06:39.216 --> 00:06:41.106 A:middle
并根据这些新的 API

00:06:41.106 --> 00:06:42.326 A:middle
进行布局的调整

00:06:42.326 --> 00:06:45.246 A:middle
昨天有一个会议主题是

00:06:45.736 --> 00:06:47.596 A:middle
为 iOS 11 更新你的 app

00:06:47.936 --> 00:06:49.376 A:middle
那个会议对这个话题

00:06:49.376 --> 00:06:49.706 A:middle
进行了深入的分析

00:06:49.706 --> 00:06:52.286 A:middle
所以我建议各位

00:06:53.966 --> 00:06:54.046 A:middle
可以去看一看

00:06:54.286 --> 00:06:56.416 A:middle
不过如果你已经有一个

00:06:56.416 --> 00:06:57.446 A:middle
可以自动补偿 Overscan 的

00:06:57.446 --> 00:06:59.106 A:middle
视图或者视图控制器

00:06:59.106 --> 00:07:01.366 A:middle
而它们在这方面的运行又很良好

00:06:59.106 --> 00:07:01.366 A:middle
而它们在这方面的运行又很良好

00:07:01.366 --> 00:07:02.666 A:middle
如果你还在

00:07:02.666 --> 00:07:05.256 A:middle
犹豫  你可以

00:07:05.256 --> 00:07:06.646 A:middle
在视图或视图控制器基础中

00:07:06.646 --> 00:07:08.256 A:middle
运用这些新性能

00:07:09.556 --> 00:07:13.036 A:middle
要达到这一功效

00:07:13.036 --> 00:07:14.536 A:middle
只需要在视图中

00:07:14.536 --> 00:07:18.356 A:middle
输入 Insets Layout Margins from Safe Area

00:07:18.356 --> 00:07:19.816 A:middle
在视图控制器中输入

00:07:19.816 --> 00:07:20.726 A:middle
view respects system minimum layout margins

00:07:21.326 --> 00:07:24.336 A:middle
根据我们的经验

00:07:24.336 --> 00:07:25.816 A:middle
一般来说

00:07:25.816 --> 00:07:27.846 A:middle
滚动视图需要

00:07:27.846 --> 00:07:28.476 A:middle
多加注意

00:07:29.256 --> 00:07:31.696 A:middle
对于滚动视图

00:07:32.146 --> 00:07:33.306 A:middle
我们有

00:07:33.306 --> 00:07:33.786 A:middle
Content Inset Adjustment Behavior

00:07:34.966 --> 00:07:36.596 A:middle
通过把这个设置为 “Never”

00:07:36.596 --> 00:07:38.096 A:middle
你可以有效地

00:07:38.096 --> 00:07:39.146 A:middle
将你的滚动视图

00:07:39.146 --> 00:07:39.586 A:middle
取消新性能

00:07:40.206 --> 00:07:42.246 A:middle
这就是 Safe Area

00:07:44.296 --> 00:07:47.236 A:middle
接下来我们来讲讲

00:07:47.266 --> 00:07:49.846 A:middle
如何在后台更新你的 app 数据

00:07:49.846 --> 00:07:51.526 A:middle
去年

00:07:51.526 --> 00:07:52.896 A:middle
我们为 tvOS 采用了

00:07:52.896 --> 00:07:55.716 A:middle
用户通知框架

00:07:55.716 --> 00:07:57.026 A:middle
你可以发送远程或推送通知你的 app

00:07:57.026 --> 00:07:58.946 A:middle
但是有一个值得注意的

00:07:58.946 --> 00:07:59.476 A:middle
方面

00:08:00.456 --> 00:08:01.436 A:middle
如果你的 app 没有运行

00:08:01.436 --> 00:08:02.676 A:middle
而系统又收到了多条通知

00:08:02.676 --> 00:08:04.896 A:middle
那么只有当用户

00:08:04.896 --> 00:08:06.606 A:middle
明确地启动了你的 app 时

00:08:06.606 --> 00:08:08.736 A:middle
系统才会发送

00:08:08.736 --> 00:08:09.656 A:middle
最新的一条通知

00:08:10.876 --> 00:08:11.936 A:middle
我们对这点进行了改善

00:08:12.866 --> 00:08:15.776 A:middle
在 tvOS 11 中

00:08:15.776 --> 00:08:17.766 A:middle
如果系统收到了一个通知

00:08:17.766 --> 00:08:19.436 A:middle
系统将在后台唤醒你的 app

00:08:19.436 --> 00:08:21.496 A:middle
并传送这个通知

00:08:22.566 --> 00:08:23.786 A:middle
这就是进行

00:08:23.786 --> 00:08:25.776 A:middle
无声通知的

00:08:25.776 --> 00:08:26.426 A:middle
一种有效的方法

00:08:27.026 --> 00:08:30.046 A:middle
无声通知指的是

00:08:30.046 --> 00:08:32.336 A:middle
一个能在后台将 app 唤醒

00:08:32.336 --> 00:08:33.956 A:middle
并且可以为用户

00:08:33.956 --> 00:08:35.306 A:middle
透明地做一些任务的

00:08:35.306 --> 00:08:35.775 A:middle
通知

00:08:36.246 --> 00:08:37.376 A:middle
这就是“无声”的

00:08:37.376 --> 00:08:37.816 A:middle
来源

00:08:39.265 --> 00:08:40.246 A:middle
通过使用无声通知

00:08:40.246 --> 00:08:42.596 A:middle
你可以定期

00:08:42.596 --> 00:08:43.866 A:middle
下载新内容

00:08:43.866 --> 00:08:46.006 A:middle
更新 app 数据

00:08:46.006 --> 00:08:48.086 A:middle
或者在 app 进入前台时

00:08:48.086 --> 00:08:49.336 A:middle
设置成

00:08:49.336 --> 00:08:50.406 A:middle
可提醒用户

00:08:51.556 --> 00:08:53.266 A:middle
因此，如果要将你的 app

00:08:53.266 --> 00:08:54.636 A:middle
设置成无声通知

00:08:55.046 --> 00:08:57.566 A:middle
首先要添加

00:08:57.566 --> 00:08:58.276 A:middle
远程通知后台模式

00:08:59.576 --> 00:09:01.276 A:middle
然后将你的 app

00:08:59.576 --> 00:09:01.276 A:middle
然后将你的 app

00:09:01.276 --> 00:09:02.866 A:middle
设置为 delegate

00:09:02.866 --> 00:09:03.506 A:middle
user notification center delegate

00:09:05.616 --> 00:09:07.156 A:middle
同时 register 为

00:09:07.156 --> 00:09:07.856 A:middle
接受远程通知

00:09:10.966 --> 00:09:11.936 A:middle
中心接收

00:09:11.936 --> 00:09:14.216 A:middle
completion handler 任务 完成工作

00:09:14.886 --> 00:09:17.496 A:middle
这些通知是无声的

00:09:17.816 --> 00:09:20.846 A:middle
第二个在后台更新 app 数据的

00:09:20.846 --> 00:09:22.396 A:middle
方法就是

00:09:22.396 --> 00:09:23.776 A:middle
通过一个叫 Background Fetch 的

00:09:23.896 --> 00:09:24.686 A:middle
算法

00:09:26.196 --> 00:09:28.736 A:middle
比如说

00:09:28.736 --> 00:09:30.756 A:middle
你的 app 需要定期检查

00:09:30.756 --> 00:09:33.386 A:middle
新内容  它就可以

00:09:33.386 --> 00:09:34.146 A:middle
注册 Background Fetch

00:09:35.016 --> 00:09:36.756 A:middle
之后系统如果认为

00:09:36.756 --> 00:09:38.316 A:middle
有个适合你的机会出现了

00:09:39.556 --> 00:09:40.726 A:middle
就会在后台将 app 唤醒

00:09:41.846 --> 00:09:43.486 A:middle
你的 app 就会发起一个

00:09:43.486 --> 00:09:44.836 A:middle
提取操作并完成相应指令

00:09:45.296 --> 00:09:48.136 A:middle
要将你的 app 设置

00:09:48.136 --> 00:09:50.716 A:middle
Background Fetch 首先需要

00:09:50.716 --> 00:09:51.816 A:middle
添加  Background Fetch 后台模式

00:09:51.816 --> 00:09:54.406 A:middle
其次  在 app 授权中

00:09:54.406 --> 00:09:55.856 A:middle
注册

00:09:55.856 --> 00:09:56.646 A:middle
Background Fetch

00:09:57.206 --> 00:10:00.426 A:middle
最后  在应用设置中

00:09:57.206 --> 00:10:00.426 A:middle
最后  在应用设置中

00:10:00.426 --> 00:10:01.646 A:middle
输入 “perform Fetch with Completion

00:10:01.646 --> 00:10:03.866 A:middle
Handler” 的指令  开始执行任务

00:10:03.866 --> 00:10:05.096 A:middle
之后别忘了

00:10:05.096 --> 00:10:06.016 A:middle
在获取结果的时候

00:10:06.016 --> 00:10:06.566 A:middle
输入 Completion Handler

00:10:07.816 --> 00:10:09.196 A:middle
这就是 Background Fetch

00:10:10.136 --> 00:10:12.166 A:middle
正如你所见

00:10:12.166 --> 00:10:13.426 A:middle
tvOS 11 在更新 app 数据方面

00:10:13.426 --> 00:10:14.736 A:middle
提供了两种新的方法

00:10:15.856 --> 00:10:17.866 A:middle
一般来说  你都可以准确地知道

00:10:17.866 --> 00:10:19.336 A:middle
什么时候有适用于你的 app 的新数据

00:10:19.596 --> 00:10:21.626 A:middle
这就是所谓的

00:10:21.626 --> 00:10:22.206 A:middle
无声通知

00:10:23.596 --> 00:10:25.136 A:middle
另一方面

00:10:25.136 --> 00:10:26.846 A:middle
系统也会了解

00:10:26.846 --> 00:10:28.166 A:middle
更新你的 app 的

00:10:28.166 --> 00:10:28.686 A:middle
最佳时机

00:10:28.686 --> 00:10:30.896 A:middle
这是因为它不仅

00:10:30.896 --> 00:10:32.086 A:middle
会观察自身资源的

00:10:32.086 --> 00:10:34.136 A:middle
可用性

00:10:34.136 --> 00:10:35.936 A:middle
还会考虑用户行为

00:10:35.936 --> 00:10:38.086 A:middle
比如用户使用最频繁的

00:10:38.086 --> 00:10:39.116 A:middle
是什么 app

00:10:40.446 --> 00:10:41.756 A:middle
所以  要想好好利用这个功能

00:10:42.666 --> 00:10:43.976 A:middle
注册 Background Fetch

00:10:45.396 --> 00:10:46.956 A:middle
我们希望各位能好好利用

00:10:46.956 --> 00:10:48.346 A:middle
这些新方法

00:10:48.346 --> 00:10:50.296 A:middle
让你们的 app 即便在进入前台之前

00:10:50.296 --> 00:10:51.616 A:middle
也可保持最新状态

00:10:52.066 --> 00:10:54.976 A:middle
这就是后台更新

00:10:56.516 --> 00:10:59.376 A:middle
[ 掌声 ]

00:10:59.876 --> 00:11:01.716 A:middle
接下来  我要介绍“滚动”

00:10:59.876 --> 00:11:01.716 A:middle
接下来  我要介绍“滚动”

00:11:02.956 --> 00:11:04.356 A:middle
如果一个滚动视图

00:11:04.356 --> 00:11:05.966 A:middle
拥有大量内容

00:11:05.966 --> 00:11:07.446 A:middle
那么要想将其全部翻阅完

00:11:07.446 --> 00:11:08.986 A:middle
并找到你想要的东西

00:11:08.986 --> 00:11:10.376 A:middle
其实是非常繁杂的

00:11:11.326 --> 00:11:14.016 A:middle
因此  在 tvOS 10.2 中

00:11:14.016 --> 00:11:15.456 A:middle
我们引用了“加速滚动”功能

00:11:15.456 --> 00:11:16.906 A:middle
该功能可以帮助用户更有效率地滚动屏幕

00:11:17.536 --> 00:11:21.796 A:middle
要想进入加速滚动模式

00:11:21.796 --> 00:11:24.196 A:middle
只需要在触摸板上

00:11:24.196 --> 00:11:25.546 A:middle
进行相同方向的

00:11:25.546 --> 00:11:27.846 A:middle
几次大幅滑动

00:11:31.056 --> 00:11:33.496 A:middle
另外  用户可以

00:11:33.496 --> 00:11:34.696 A:middle
在触摸板的最右端

00:11:34.696 --> 00:11:36.366 A:middle
进行滑动  以此来浏览

00:11:36.366 --> 00:11:37.026 A:middle
整个目录

00:11:37.586 --> 00:11:40.746 A:middle
对于开发者来说有个好消息就是

00:11:40.746 --> 00:11:42.126 A:middle
我们不需要

00:11:42.126 --> 00:11:43.386 A:middle
任何附加的工作

00:11:43.386 --> 00:11:44.496 A:middle
就可以获得这个新性能

00:11:44.946 --> 00:11:47.386 A:middle
实际上  包括表格视图

00:11:47.386 --> 00:11:49.376 A:middle
集合视图在内的

00:11:49.376 --> 00:11:51.476 A:middle
每一个滚动视图里都安装了这个功能

00:11:51.936 --> 00:11:55.016 A:middle
这个功能会一直开着

00:11:55.016 --> 00:11:56.346 A:middle
你无法将其关闭

00:11:57.086 --> 00:11:58.116 A:middle
不过你可以做一些工作

00:11:58.116 --> 00:11:59.576 A:middle
让你的滚动视图

00:11:59.576 --> 00:12:01.046 A:middle
在你的设计内

00:11:59.576 --> 00:12:01.046 A:middle
在你的设计内

00:12:01.046 --> 00:12:01.806 A:middle
运行良好

00:12:04.256 --> 00:12:07.066 A:middle
默认情况下

00:12:07.066 --> 00:12:08.686 A:middle
当你进入加速滚动模式时

00:12:08.946 --> 00:12:10.236 A:middle
就会出现指标栏

00:12:10.766 --> 00:12:12.196 A:middle
但是你可以通过

00:12:12.666 --> 00:12:14.296 A:middle
将 Index Display Mode 改为 Hidden

00:12:14.296 --> 00:12:18.136 A:middle
来隐藏它

00:12:18.136 --> 00:12:19.566 A:middle
另外  默认的

00:12:19.566 --> 00:12:21.026 A:middle
滚动指示器

00:12:21.026 --> 00:12:22.496 A:middle
运行地也很好

00:12:22.496 --> 00:12:24.606 A:middle
因为它自调整视图控制器 不管是明亮

00:12:24.746 --> 00:12:26.036 A:middle
还是深色的用户界面风格

00:12:26.036 --> 00:12:29.776 A:middle
如果你的设计

00:12:29.776 --> 00:12:31.186 A:middle
要求拥有一个明确的风格

00:12:31.186 --> 00:12:32.696 A:middle
你可以将其改为

00:12:32.696 --> 00:12:35.626 A:middle
黑色/白色

00:12:36.936 --> 00:12:39.356 A:middle
另外  你可以

00:12:39.356 --> 00:12:40.776 A:middle
使用两种

00:12:40.776 --> 00:12:42.266 A:middle
数据来定制

00:12:42.306 --> 00:12:42.716 A:middle
自己表格视图的索引标题

00:12:43.436 --> 00:12:45.126 A:middle
首先  要获得索引名称的

00:12:45.126 --> 00:12:48.886 A:middle
阵列  并为规定的索引名称

00:12:48.886 --> 00:12:51.436 A:middle
获得索引

00:12:51.566 --> 00:12:53.086 A:middle
与此相似的  对集合视图来说

00:12:54.296 --> 00:12:55.636 A:middle
你可以获得索引名称的阵列

00:12:55.636 --> 00:12:57.846 A:middle
并在指定的索引名称中

00:12:58.046 --> 00:12:58.996 A:middle
获得索引路径

00:12:59.606 --> 00:13:02.096 A:middle
这就是滚动视图的

00:12:59.606 --> 00:13:02.096 A:middle
这就是滚动视图的

00:13:02.096 --> 00:13:02.416 A:middle
功能更新

00:13:02.796 --> 00:13:06.546 A:middle
接下来  我将介绍一个新的按钮类型

00:13:07.026 --> 00:13:08.056 A:middle
UI Button Type Plain

00:13:08.846 --> 00:13:10.236 A:middle
不过在开始之前

00:13:10.236 --> 00:13:11.216 A:middle
我们先看一看系统按钮

00:13:12.516 --> 00:13:14.536 A:middle
如果按钮是清晰的

00:13:14.786 --> 00:13:16.606 A:middle
UI Button Type System 会提供

00:13:16.606 --> 00:13:18.546 A:middle
交互式的聚焦效果

00:13:18.686 --> 00:13:19.956 A:middle
如果按钮不清晰  背景则模糊

00:13:20.646 --> 00:13:22.836 A:middle
当背景模糊时

00:13:22.996 --> 00:13:24.616 A:middle
它将会提供按钮的可视线索

00:13:24.616 --> 00:13:26.516 A:middle
同时也将增加标题的

00:13:26.516 --> 00:13:26.936 A:middle
可识别性

00:13:28.456 --> 00:13:29.896 A:middle
这是 tvOS 中

00:13:29.896 --> 00:13:31.866 A:middle
使用最广泛的控件之一

00:13:31.866 --> 00:13:33.466 A:middle
也许这也是为什么我们

00:13:33.466 --> 00:13:34.576 A:middle
经常听到很多人提过想要

00:13:34.576 --> 00:13:35.576 A:middle
对其进行自定义修改

00:13:35.576 --> 00:13:37.796 A:middle
比如说

00:13:37.796 --> 00:13:38.396 A:middle
增加背景色

00:13:39.466 --> 00:13:41.516 A:middle
所以在 tvOS 11 中 我们将

00:13:41.516 --> 00:13:42.246 A:middle
制作一个新的按钮类型

00:13:42.556 --> 00:13:43.586 A:middle
UI Button Type Plain

00:13:44.166 --> 00:13:47.666 A:middle
一个简单类型的按钮

00:13:47.666 --> 00:13:49.036 A:middle
拥有系统按钮拥有的

00:13:49.036 --> 00:13:51.116 A:middle
除了背景模糊之外的

00:13:51.116 --> 00:13:52.876 A:middle
所有交互性聚焦效果

00:13:52.876 --> 00:13:54.466 A:middle
这使其可以全定制

00:13:55.026 --> 00:13:57.866 A:middle
使用简单类型的按钮

00:13:57.866 --> 00:13:58.666 A:middle
很容易

00:13:59.196 --> 00:14:02.986 A:middle
首先  用 UI Button Type Plain

00:13:59.196 --> 00:14:02.986 A:middle
首先  用 UI Button Type Plain

00:14:02.986 --> 00:14:05.266 A:middle
创造按钮

00:14:05.266 --> 00:14:06.486 A:middle
接着对其进行定制

00:14:07.296 --> 00:14:09.466 A:middle
这就是简单类型的

00:14:10.716 --> 00:14:10.906 A:middle
按钮

00:14:11.316 --> 00:14:11.876 A:middle
谢谢

00:14:12.516 --> 00:14:14.546 A:middle
[ 掌声 ]

00:14:15.046 --> 00:14:16.826 A:middle
第一部分要讲的最后一个优化

00:14:16.826 --> 00:14:18.796 A:middle
是关于

00:14:19.006 --> 00:14:19.826 A:middle
UI Image View 的

00:14:21.656 --> 00:14:24.256 A:middle
在 tvOS 中

00:14:24.256 --> 00:14:25.156 A:middle
交互性聚焦特效是项重要的

00:14:25.156 --> 00:14:25.606 A:middle
技术

00:14:26.246 --> 00:14:28.206 A:middle
这会让你的用户感受到

00:14:28.206 --> 00:14:28.886 A:middle
他们与屏幕相连

00:14:28.886 --> 00:14:30.706 A:middle
同时也能告诉他们

00:14:30.706 --> 00:14:32.126 A:middle
自己的焦点在哪里

00:14:32.676 --> 00:14:34.766 A:middle
很多时候  我们会使用

00:14:34.766 --> 00:14:36.156 A:middle
漂浮或者分层图像来将效果

00:14:36.156 --> 00:14:36.516 A:middle
最大化

00:14:38.216 --> 00:14:39.666 A:middle
在我们初次引进这个功能时

00:14:40.186 --> 00:14:41.696 A:middle
你们很多人都询问

00:14:41.696 --> 00:14:43.726 A:middle
要如何进一步将其自定义化

00:14:43.726 --> 00:14:45.426 A:middle
通过在运行时增加你们自己的内容

00:14:45.426 --> 00:14:46.976 A:middle
这样它们就可以

00:14:46.976 --> 00:14:47.826 A:middle
采用聚焦特效

00:14:49.216 --> 00:14:51.236 A:middle
在 tvOS 11中

00:14:51.236 --> 00:14:52.436 A:middle
我们引进了一个简单安全的方法

00:14:52.436 --> 00:14:53.586 A:middle
那就是 Image Overlay

00:14:55.216 --> 00:14:57.196 A:middle
Image Overlay 使用了一个名为

00:14:57.196 --> 00:14:58.866 A:middle
Overlay Content View 的新性能

00:14:59.686 --> 00:15:00.956 A:middle
这个性能在概念上与

00:14:59.686 --> 00:15:00.956 A:middle
这个性能在概念上与

00:15:00.956 --> 00:15:02.706 A:middle
图表视图或集合视图中的

00:15:02.706 --> 00:15:04.076 A:middle
内容视图比较相似

00:15:04.076 --> 00:15:05.516 A:middle
在这里你将把你的内容作为

00:15:05.516 --> 00:15:06.576 A:middle
子视图进行添加

00:15:07.136 --> 00:15:10.586 A:middle
在默认条件下  叠加内容视图将把

00:15:10.586 --> 00:15:12.116 A:middle
子视图添加到

00:15:12.116 --> 00:15:15.026 A:middle
image views 的 bounds 中

00:15:15.026 --> 00:15:16.446 A:middle
不过你可以将其推翻 并通过

00:15:16.446 --> 00:15:17.966 A:middle
把 overlay content view 中的

00:15:17.966 --> 00:15:19.706 A:middle
clips to bounds 这一条目设置为 “false”

00:15:19.706 --> 00:15:20.796 A:middle
来将其拖出

00:15:22.836 --> 00:15:24.136 A:middle
另外一个 UI Image View 的优化

00:15:24.136 --> 00:15:25.846 A:middle
就是 Alpha Channel

00:15:25.846 --> 00:15:26.186 A:middle
Support

00:15:27.436 --> 00:15:30.936 A:middle
大家都知道  分层图像

00:15:30.936 --> 00:15:32.356 A:middle
需要拥有不透明的

00:15:32.356 --> 00:15:32.896 A:middle
背景

00:15:34.196 --> 00:15:36.266 A:middle
即便是悬浮的—平面的单层图像

00:15:36.266 --> 00:15:37.816 A:middle
为了拥有悬浮效果

00:15:37.816 --> 00:15:39.796 A:middle
也需要拥有

00:15:39.796 --> 00:15:40.976 A:middle
不透明的背景

00:15:41.566 --> 00:15:45.036 A:middle
在 tvOS 11中  情况就

00:15:45.036 --> 00:15:45.506 A:middle
不一样了

00:15:46.336 --> 00:15:48.206 A:middle
你们现在将拥有

00:15:48.206 --> 00:15:50.096 A:middle
不透明的 alpha-channel

00:15:50.096 --> 00:15:51.366 A:middle
也许你们当中有些人

00:15:52.226 --> 00:15:53.586 A:middle
想要非矩形阴影

00:15:54.296 --> 00:15:55.216 A:middle
口说无凭

00:15:55.216 --> 00:15:56.966 A:middle
我想让我的同事 Paul

00:15:56.966 --> 00:15:58.146 A:middle
通过一个 demo 来向大家

00:15:58.146 --> 00:15:58.436 A:middle
展示

00:15:58.776 --> 00:15:59.256 A:middle
Paul

00:16:00.516 --> 00:16:03.836 A:middle
[掌声]

00:16:04.336 --> 00:16:07.756 A:middle
&gt;&gt; 好的  我会通过一个 demo

00:16:09.006 --> 00:16:11.886 A:middle
来展示一下 tvOS 11中

00:16:11.886 --> 00:16:13.656 A:middle
UI Image View 的新特点

00:16:14.356 --> 00:16:15.716 A:middle
我一直都致力于研究这个简单的

00:16:15.716 --> 00:16:16.976 A:middle
视频播放 app

00:16:16.976 --> 00:16:18.196 A:middle
我很喜欢这些

00:16:18.196 --> 00:16:18.696 A:middle
新功能

00:16:19.396 --> 00:16:21.086 A:middle
我想做的第一件事就是

00:16:21.086 --> 00:16:22.496 A:middle
在海报上增加一个图标

00:16:22.496 --> 00:16:23.476 A:middle
让其变得更加明显

00:16:23.476 --> 00:16:24.926 A:middle
这样当你选择一个海报时

00:16:24.926 --> 00:16:25.636 A:middle
视频就会开始播放

00:16:26.216 --> 00:16:26.936 A:middle
我还想在我已经开始

00:16:26.936 --> 00:16:29.106 A:middle
观看的视频的海报上

00:16:29.106 --> 00:16:29.956 A:middle
增加一个

00:16:29.956 --> 00:16:30.296 A:middle
进度栏

00:16:30.296 --> 00:16:31.976 A:middle
这样  我就可以快速地

00:16:32.086 --> 00:16:33.446 A:middle
知道我看到了哪个位置

00:16:33.546 --> 00:16:35.416 A:middle
所以  为了实现这个 UI

00:16:35.416 --> 00:16:37.346 A:middle
我要为海报的图像视图

00:16:37.346 --> 00:16:39.766 A:middle
增加一些视图

00:16:41.036 --> 00:16:43.256 A:middle
诚如各位所见

00:16:43.256 --> 00:16:44.536 A:middle
UI 出现了  但是

00:16:44.536 --> 00:16:45.946 A:middle
它与后面移动的图像好像

00:16:45.946 --> 00:16:46.816 A:middle
是相互分离的

00:16:47.496 --> 00:16:49.506 A:middle
我希望让 UI

00:16:49.506 --> 00:16:52.236 A:middle
可以和图像一起移动

00:16:52.466 --> 00:16:54.106 A:middle
幸运的是  在 tvOS 11中

00:16:54.106 --> 00:16:54.886 A:middle
这很简单

00:16:55.846 --> 00:16:57.456 A:middle
我可以直接把这些视图加入

00:16:57.456 --> 00:16:58.856 A:middle
image view 中的 overlay content view 里

00:16:58.856 --> 00:16:59.806 A:middle
而不用加入

00:16:59.866 --> 00:17:00.756 A:middle
我的 image view 中

00:16:59.866 --> 00:17:00.756 A:middle
我的 image view 中

00:17:01.376 --> 00:17:03.556 A:middle
我们来看看最终的

00:17:04.236 --> 00:17:04.356 A:middle
效果

00:17:06.336 --> 00:17:07.616 A:middle
这就是我想要的

00:17:07.616 --> 00:17:08.306 A:middle
效果

00:17:09.516 --> 00:17:13.925 A:middle
[ 掌声 ]

00:17:14.425 --> 00:17:16.246 A:middle
UI 可以和图像一起移动

00:17:16.246 --> 00:17:17.656 A:middle
就好比它已经成为分层图像中的

00:17:17.656 --> 00:17:18.945 A:middle
一层了

00:17:19.756 --> 00:17:21.286 A:middle
接下来

00:17:21.286 --> 00:17:22.606 A:middle
我要为这些海报

00:17:22.606 --> 00:17:24.396 A:middle
增加一些小玩意

00:17:24.396 --> 00:17:25.796 A:middle
这样我就可以为用户

00:17:25.796 --> 00:17:26.826 A:middle
标记一些新的或者有趣的

00:17:26.826 --> 00:17:27.185 A:middle
视频

00:17:27.996 --> 00:17:29.086 A:middle
我将为这个 app

00:17:29.086 --> 00:17:30.136 A:middle
增加一个触摸按钮

00:17:30.136 --> 00:17:31.306 A:middle
这样我就能控制这些标记的开关

00:17:31.306 --> 00:17:33.576 A:middle
以此让 UI 根据我的

00:17:33.576 --> 00:17:35.346 A:middle
想法来运行

00:17:36.396 --> 00:17:38.066 A:middle
要制作触摸按钮

00:17:38.066 --> 00:17:40.016 A:middle
我首先要设置一个类型是自定义的

00:17:40.146 --> 00:17:41.836 A:middle
按钮  这样我就不必像

00:17:41.836 --> 00:17:42.786 A:middle
你们一般设置按钮时那样

00:17:42.786 --> 00:17:43.886 A:middle
配备一个系统浏览器

00:17:44.726 --> 00:17:45.596 A:middle
之后我将把按钮的 image view

00:17:45.596 --> 00:17:48.176 A:middle
设置为

00:17:48.176 --> 00:17:49.996 A:middle
“当原型聚焦时  调整图像”

00:17:49.996 --> 00:17:50.976 A:middle
完成这些操作后

00:17:50.976 --> 00:17:52.196 A:middle
当按钮对准时  就会产生

00:17:52.196 --> 00:17:53.026 A:middle
良好的漂浮效果

00:17:53.556 --> 00:17:54.556 A:middle
我将会为按钮

00:17:54.556 --> 00:17:55.796 A:middle
和实际的图标

00:17:55.796 --> 00:17:57.976 A:middle
使用相同的

00:17:57.976 --> 00:17:58.476 A:middle
图像

00:17:58.836 --> 00:18:00.916 A:middle
图标拥有

00:17:58.836 --> 00:18:00.916 A:middle
图标拥有

00:18:00.916 --> 00:18:02.016 A:middle
循环式阿尔法通道

00:18:02.726 --> 00:18:05.216 A:middle
在 tvOS 11 中

00:18:05.216 --> 00:18:06.576 A:middle
阴影的悬浮效果以及

00:18:06.576 --> 00:18:07.726 A:middle
聚光灯会让一切

00:18:08.306 --> 00:18:09.046 A:middle
都按照你预期的想法

00:18:09.046 --> 00:18:09.416 A:middle
运行

00:18:09.416 --> 00:18:11.496 A:middle
当我轻触按钮时

00:18:12.086 --> 00:18:13.656 A:middle
我将为那些海报的

00:18:13.656 --> 00:18:14.816 A:middle
overlay content view 增添

00:18:14.816 --> 00:18:15.286 A:middle
图标

00:18:15.696 --> 00:18:16.496 A:middle
我们来看看效果

00:18:17.116 --> 00:18:19.006 A:middle
我们会发现这里有一个

00:18:19.006 --> 00:18:19.736 A:middle
问题

00:18:19.736 --> 00:18:20.696 A:middle
图标在左上角

00:18:20.696 --> 00:18:22.386 A:middle
但是它却夹在

00:18:22.386 --> 00:18:24.156 A:middle
图像视图中变换的图像

00:18:24.286 --> 00:18:24.956 A:middle
里面

00:18:25.646 --> 00:18:26.726 A:middle
一般来说

00:18:26.726 --> 00:18:27.846 A:middle.
这就是大家想要的分层效果

00:18:28.276 --> 00:18:29.366 A:middle
但是这却不是

00:18:29.366 --> 00:18:29.656 A:middle
我想要的

00:18:30.306 --> 00:18:31.296 A:middle
幸运的是  我听了 Hans 的演讲

00:18:31.336 --> 00:18:32.636 A:middle
他让我知道了

00:18:32.636 --> 00:18:33.356 A:middle
如何将其修复

00:18:34.356 --> 00:18:35.436 A:middle
我只需要在 overlay content view 中

00:18:35.436 --> 00:18:36.976 A:middle
将 clips To Bounds 设置成 false

00:18:36.976 --> 00:18:37.636 A:middle
即可

00:18:37.636 --> 00:18:40.286 A:middle
我们再试一次

00:18:42.536 --> 00:18:44.146 A:middle
我把图标打开

00:18:44.146 --> 00:18:45.526 A:middle
这就是我想要的

00:18:45.526 --> 00:18:45.826 A:middle
效果

00:18:46.306 --> 00:18:47.356 A:middle
现在图标的拖拽方式

00:18:47.356 --> 00:18:48.046 A:middle
就是我想要的

00:18:48.416 --> 00:18:49.556 A:middle
它们将与剩下的 UI

00:18:49.556 --> 00:18:50.816 A:middle
和图像

00:18:50.816 --> 00:18:50.976 A:middle
一起移动

00:18:51.516 --> 00:18:56.586 A:middle
[ 掌声 ]

00:18:57.086 --> 00:18:58.486 A:middle
这就是关于 tvOS 11 中

00:18:58.486 --> 00:18:59.636 A:middle
UI Image View 的新功能的

00:18:59.636 --> 00:19:01.616 A:middle
简单介绍

00:18:59.636 --> 00:19:01.616 A:middle
简单介绍

00:19:01.786 --> 00:19:03.036 A:middle
把时间再次交给 Hans

00:19:04.031 --> 00:19:06.031 A:middle
[ 掌声 ]

00:19:06.046 --> 00:19:06.496 A:middle
&gt;&gt;  谢谢 Paul

00:19:07.586 --> 00:19:08.736 A:middle
很棒的展示

00:19:09.256 --> 00:19:10.926 A:middle
这就是 UI Image View 的

00:19:10.926 --> 00:19:11.596 A:middle
优化

00:19:13.066 --> 00:19:16.466 A:middle
我们已经讲了 tvOS 中的

00:19:16.536 --> 00:19:17.606 A:middle
七个优化

00:19:17.606 --> 00:19:19.466 A:middle
但是还有很多 iOS 中的优化

00:19:19.466 --> 00:19:21.286 A:middle
现在也可以应用在

00:19:21.286 --> 00:19:22.666 A:middle
tvOS 中

00:19:23.516 --> 00:19:25.546 A:middle
其中有一个

00:19:25.546 --> 00:19:26.966 A:middle
特别值得我们的关注

00:19:27.086 --> 00:19:28.726 A:middle
为此  我邀请了媒体框架团队的

00:19:28.726 --> 00:19:30.046 A:middle
Dan 来为我们

00:19:30.046 --> 00:19:32.096 A:middle
介绍这个功能

00:19:33.516 --> 00:19:36.736 A:middle
[掌声]

00:19:37.236 --> 00:19:38.646 A:middle
&gt;&gt;  谢谢 Hans

00:19:39.696 --> 00:19:43.426 A:middle
好了  我将花几分钟的时间

00:19:43.426 --> 00:19:45.016 A:middle
来讲一讲 tvOS 11 中

00:19:45.106 --> 00:19:50.216 A:middle
AVKit 的新功能

00:19:50.216 --> 00:19:52.696 A:middle
AVkit 为 tvOS 上所有的 app

00:19:52.696 --> 00:19:55.236 A:middle
提供标准的

00:19:55.566 --> 00:19:58.386 A:middle
交互视频回放

00:19:58.916 --> 00:20:00.746 A:middle
包括删除  跳过

00:19:58.916 --> 00:20:00.746 A:middle
包括删除  跳过

00:20:01.486 --> 00:20:04.116 A:middle
浏览  以及

00:20:04.116 --> 00:20:05.006 A:middle
插页广告  内容建议等

00:20:05.206 --> 00:20:06.456 A:middle
先进的

00:20:06.456 --> 00:20:07.166 A:middle
功能

00:20:08.396 --> 00:20:09.556 A:middle
我们去年讨论了

00:20:09.556 --> 00:20:10.916 A:middle
一些基本的东西  如果

00:20:10.916 --> 00:20:12.406 A:middle
你们想要了解一下

00:20:12.406 --> 00:20:15.236 A:middle
可以观看去年 “关于 tvOS 中的 AVKit” 这个

00:20:15.236 --> 00:20:15.396 A:middle
场次

00:20:16.386 --> 00:20:17.616 A:middle
我们这里

00:20:17.966 --> 00:20:21.866 A:middle
提供标准视频回放

00:20:21.906 --> 00:20:23.196 A:middle
也就是观看清除数据的

00:20:23.196 --> 00:20:24.156 A:middle
AVP layer View Controller

00:20:24.796 --> 00:20:29.416 A:middle
还有一些包括

00:20:29.686 --> 00:20:31.056 A:middle
我们去年介绍的定制内容推荐等

00:20:31.056 --> 00:20:32.236 A:middle
高级功能

00:20:32.726 --> 00:20:35.796 A:middle
现在  让我们来介绍一下 tvOS 11 的

00:20:35.976 --> 00:20:36.986 A:middle
新功能

00:20:37.666 --> 00:20:40.826 A:middle
如果你想播放

00:20:40.826 --> 00:20:42.996 A:middle
如图表  提示或者其他

00:20:42.996 --> 00:20:45.326 A:middle
在你视频之上  但是却在

00:20:45.326 --> 00:20:46.436 A:middle
播放控制器之下的

00:20:46.436 --> 00:20:48.876 A:middle
静态图片  你可以使用

00:20:48.876 --> 00:20:50.326 A:middle
分层视图

00:20:50.746 --> 00:20:54.596 A:middle
在 tvOS 11 中  我们引进了

00:20:54.596 --> 00:20:57.376 A:middle
一个全新的布局指南

00:20:57.376 --> 00:21:00.556 A:middle
Unobscure Content Guide

00:20:57.376 --> 00:21:00.556 A:middle
Unobscure Content Guide

00:21:00.556 --> 00:21:01.776 A:middle
这个指南会告诉你静态内容

00:21:01.776 --> 00:21:04.426 A:middle
在你的屏幕上所占的比重

00:21:04.426 --> 00:21:06.986 A:middle
而不必覆盖播放控制面板

00:21:06.986 --> 00:21:08.486 A:middle
或提示

00:21:10.726 --> 00:21:12.856 A:middle
这就是 Unobscure Content Guide

00:21:12.856 --> 00:21:14.326 A:middle
所在的外置

00:21:14.326 --> 00:21:15.996 A:middle
我们可以看到

00:21:15.996 --> 00:21:17.136 A:middle
下滑展示更多信息的提示

00:21:17.136 --> 00:21:18.466 A:middle
在这个之上

00:21:18.466 --> 00:21:20.056 A:middle
而指南的底部

00:21:20.056 --> 00:21:21.886 A:middle
正对着

00:21:21.886 --> 00:21:23.046 A:middle
传输栏

00:21:23.816 --> 00:21:25.846 A:middle
但是我们也会注意到

00:21:25.846 --> 00:21:27.726 A:middle
清除缩略图

00:21:27.726 --> 00:21:29.906 A:middle
并不包含在

00:21:29.906 --> 00:21:30.346 A:middle
禁区内

00:21:31.156 --> 00:21:34.226 A:middle
如果你的内容在

00:21:34.226 --> 00:21:35.266 A:middle
分层视图中

00:21:35.266 --> 00:21:36.906 A:middle
它将会出现在

00:21:36.906 --> 00:21:37.206 A:middle
清除缩略图下

00:21:37.206 --> 00:21:42.726 A:middle
接下来  让我们介绍一下

00:21:42.726 --> 00:21:43.516 A:middle
传输栏

00:21:44.756 --> 00:21:46.536 A:middle
当传输栏可见时

00:21:46.536 --> 00:21:48.316 A:middle
你们可能想要展示一些内容

00:21:48.316 --> 00:21:49.876 A:middle
或图标

00:21:52.616 --> 00:21:54.016 A:middle
或者当播放控制可见时

00:21:54.016 --> 00:21:55.216 A:middle
你可能希望隐藏

00:21:55.216 --> 00:21:56.536 A:middle
包括频道图标

00:21:56.536 --> 00:21:57.836 A:middle
在内的

00:21:57.836 --> 00:21:58.386 A:middle
一些东西

00:21:58.536 --> 00:22:01.556 A:middle
通过 Transport Bar Animation Coordinator

00:21:58.536 --> 00:22:01.556 A:middle
通过 Transport Bar Animation Coordinator

00:22:01.556 --> 00:22:02.776 A:middle
你可以同时实现

00:22:02.776 --> 00:22:03.336 A:middle
这两个功能

00:22:03.556 --> 00:22:05.156 A:middle
你只需要采用

00:22:05.716 --> 00:22:06.596 A:middle
Delegate 方法

00:22:06.626 --> 00:22:07.776 A:middle
将 Player View Controller 写成

00:22:07.776 --> 00:22:09.096 A:middle
“协调完成

00:22:09.096 --> 00:22:10.536 A:middle
传输栏的可见性”

00:22:11.606 --> 00:22:13.286 A:middle
加入你的动画

00:22:13.666 --> 00:22:18.886 A:middle
在这个例子中

00:22:18.886 --> 00:22:20.156 A:middle
我们可以通过传输栏

00:22:20.156 --> 00:22:21.596 A:middle
来对我们的图标图像视图

00:22:21.926 --> 00:22:23.876 A:middle
进行隐藏或展示

00:22:25.776 --> 00:22:27.756 A:middle
现在  你不必局限

00:22:27.756 --> 00:22:28.286 A:middle
于此

00:22:28.286 --> 00:22:29.246 A:middle
你可以撤销可见性

00:22:29.246 --> 00:22:30.516 A:middle
把展示改为

00:22:30.516 --> 00:22:31.246 A:middle
隐藏

00:22:31.716 --> 00:22:33.316 A:middle
你还可以增加动画

00:22:33.316 --> 00:22:35.846 A:middle
比如让你的视图

00:22:35.846 --> 00:22:37.126 A:middle
从一边滑过来

00:22:37.326 --> 00:22:38.996 A:middle
或者任何其他你想要的动画

00:22:40.026 --> 00:22:42.106 A:middle
接下来  我们将介绍

00:22:42.106 --> 00:22:43.616 A:middle
三个新的委托方法

00:22:44.146 --> 00:22:47.296 A:middle
来更好地

00:22:47.296 --> 00:22:48.266 A:middle
控制撤销

00:22:49.136 --> 00:22:51.646 A:middle
这里输入播放器视图控制器

00:22:51.646 --> 00:22:54.976 A:middle
应该撤销这个指令之后  就会开始

00:22:54.976 --> 00:22:57.426 A:middle
撤销转换

00:22:57.496 --> 00:22:59.766 A:middle
最后终止撤销转换

00:23:01.076 --> 00:23:03.376 A:middle
在很多情况下 Player View

00:23:03.376 --> 00:23:04.776 A:middle
Controller 在展示或撤销时

00:23:04.776 --> 00:23:06.346 A:middle
会自动

00:23:06.346 --> 00:23:08.016 A:middle
进行转换

00:23:08.156 --> 00:23:10.746 A:middle
如果你只是简单的展示或撤销

00:23:10.746 --> 00:23:12.786 A:middle
它将淡入和淡出

00:23:13.246 --> 00:23:15.536 A:middle
如果你把这个视图

00:23:15.536 --> 00:23:17.486 A:middle
作为缩略图放在你自己的视图中

00:23:17.486 --> 00:23:19.766 A:middle
它就会自动缩小

00:23:19.766 --> 00:23:21.286 A:middle
在撤销时

00:23:21.286 --> 00:23:22.806 A:middle
又自动变回来

00:23:23.726 --> 00:23:25.666 A:middle
然而在一些情况下

00:23:25.666 --> 00:23:26.886 A:middle
可能有一些自定义展示

00:23:26.886 --> 00:23:29.966 A:middle
AVKit 不能为其

00:23:29.966 --> 00:23:31.186 A:middle
提供合理的转换

00:23:31.186 --> 00:23:32.946 A:middle
这时候你可能就需要

00:23:32.946 --> 00:23:34.056 A:middle
自己动手了

00:23:34.056 --> 00:23:35.576 A:middle
你操作的方法是

00:23:35.576 --> 00:23:37.136 A:middle
通过运行

00:23:37.136 --> 00:23:40.076 A:middle
Should Dismiss 指令

00:23:40.076 --> 00:23:41.886 A:middle
使你的转换生效

00:23:41.886 --> 00:23:45.686 A:middle
接着返回为 False

00:23:45.686 --> 00:23:47.536 A:middle
来指示 AVKit

00:23:47.536 --> 00:23:49.466 A:middle
不用提供标准的转换

00:23:51.196 --> 00:23:53.186 A:middle
如果 AVKit 已经提供了转换

00:23:53.186 --> 00:23:55.146 A:middle
就会调用

00:23:55.146 --> 00:23:57.526 A:middle
Will Begin Dismissal 和

00:23:57.526 --> 00:23:58.686 A:middle
Did End Dismissal 转换

00:23:58.686 --> 00:23:59.166 A:middle
这两个方法

00:23:59.566 --> 00:24:01.266 A:middle
所以在动画的开端

00:23:59.566 --> 00:24:01.266 A:middle
所以在动画的开端

00:24:01.266 --> 00:24:02.366 A:middle
和结尾

00:24:02.366 --> 00:24:03.356 A:middle
你可以执行

00:24:03.356 --> 00:24:04.786 A:middle
任何你想要的操作

00:24:05.406 --> 00:24:07.446 A:middle
比如说控制

00:24:07.446 --> 00:24:08.116 A:middle
回放速度

00:24:09.056 --> 00:24:11.956 A:middle
当视频回放时

00:24:11.956 --> 00:24:13.696 A:middle
用户可以通过下滑

00:24:13.696 --> 00:24:14.466 A:middle
看到信息视图

00:24:15.436 --> 00:24:16.796 A:middle
标准的信息视图会提供

00:24:16.796 --> 00:24:20.016 A:middle
包括元数据

00:24:20.016 --> 00:24:22.166 A:middle
导航标 字幕控制

00:24:22.166 --> 00:24:24.426 A:middle
以及音频选择等信息

00:24:24.426 --> 00:24:26.216 A:middle
你们现在所看到的

00:24:26.216 --> 00:24:26.946 A:middle
有趣的东西

00:24:27.966 --> 00:24:30.296 A:middle
你们很多人现在可能

00:24:30.296 --> 00:24:32.176 A:middle
想要在这里加入你们自己的操纵模块

00:24:32.176 --> 00:24:33.466 A:middle
所以 我很高兴地告诉大家

00:24:33.466 --> 00:24:35.426 A:middle
我们现在可以

00:24:35.426 --> 00:24:36.206 A:middle
自定义信息视图

00:24:36.466 --> 00:24:38.036 A:middle
在 tvOS 11 中

00:24:38.036 --> 00:24:39.256 A:middle
你可以像这个例子中所呈现的一样

00:24:39.256 --> 00:24:39.976 A:middle
提供一个自定义信息视图

00:24:40.516 --> 00:24:44.806 A:middle
[ 掌声 ]

00:24:45.306 --> 00:24:47.206 A:middle
你们所需要的

00:24:47.206 --> 00:24:48.826 A:middle
只是创造你们自己的 UI View Controller

00:24:49.536 --> 00:24:50.606 A:middle
你需要决定它的

00:24:50.606 --> 00:24:50.896 A:middle
内容

00:24:52.366 --> 00:24:53.516 A:middle
为你的 Player View Controller

00:24:53.516 --> 00:24:54.656 A:middle
设置自定义的 Info View Controller

00:24:54.656 --> 00:24:56.946 A:middle
性能

00:24:57.706 --> 00:24:58.786 A:middle
就这么简单

00:24:58.786 --> 00:25:01.306 A:middle
你们需要将风格

00:24:58.786 --> 00:25:01.306 A:middle
你们需要将风格

00:25:01.306 --> 00:25:02.686 A:middle
与其他的信息视图

00:25:02.846 --> 00:25:04.166 A:middle
统一

00:25:04.166 --> 00:25:07.216 A:middle
这样用户才不会感到违和

00:25:07.216 --> 00:25:07.886 A:middle
或者困惑

00:25:07.886 --> 00:25:08.916 A:middle
对于这一点  我们有几个

00:25:08.916 --> 00:25:09.536 A:middle
建议

00:25:10.806 --> 00:25:13.426 A:middle
首先  使用标准的字体

00:25:13.426 --> 00:25:14.096 A:middle
风格

00:25:14.726 --> 00:25:17.246 A:middle
第二  保持你的视图背景

00:25:17.246 --> 00:25:19.306 A:middle
为透明色

00:25:19.306 --> 00:25:20.276 A:middle
这样效果的视图就能

00:25:20.276 --> 00:25:20.616 A:middle
显示出来

00:25:21.846 --> 00:25:23.016 A:middle
你可以指示

00:25:23.016 --> 00:25:24.676 A:middle
你信息视图的预期高度

00:25:24.676 --> 00:25:26.166 A:middle
而最好的方法就是使用

00:25:26.166 --> 00:25:26.676 A:middle
自动布局

00:25:26.676 --> 00:25:27.966 A:middle
不过如果你喜欢的话

00:25:27.966 --> 00:25:29.606 A:middle
也可以在视图控制器上

00:25:29.606 --> 00:25:31.546 A:middle
使用内容尺寸优先选项

00:25:33.506 --> 00:25:34.696 A:middle
除了这些之外

00:25:34.696 --> 00:25:37.196 A:middle
你的内容也不能

00:25:37.436 --> 00:25:39.106 A:middle
超过屏幕高度的一半

00:25:39.106 --> 00:25:41.286 A:middle
因为你并不需要

00:25:41.286 --> 00:25:42.276 A:middle
使用整个屏幕

00:25:43.106 --> 00:25:44.746 A:middle
你还可以使用任何

00:25:44.746 --> 00:25:46.446 A:middle
你想要的控件

00:25:46.446 --> 00:25:47.986 A:middle
不过我们建议你不要使用

00:25:47.986 --> 00:25:49.166 A:middle
诸如文本框

00:25:49.166 --> 00:25:50.466 A:middle
还有按钮

00:25:50.596 --> 00:25:53.056 A:middle
这些具有违和感的东西

00:25:53.056 --> 00:25:54.566 A:middle
最好使用集合或者图表视图

00:25:56.106 --> 00:25:58.016 A:middle
好了  最后我想来讲一下

00:25:58.016 --> 00:25:59.766 A:middle
直播流媒体

00:26:00.456 --> 00:26:04.966 A:middle
在 tvOS 11 中  我们增加了

00:26:04.966 --> 00:26:07.296 A:middle
四个新的元数据标识符

00:26:07.296 --> 00:26:09.626 A:middle
你可以在你的直播

00:26:09.706 --> 00:26:11.306 A:middle
或事件流中指定

00:26:11.306 --> 00:26:12.686 A:middle
开始和结束的时间

00:26:14.896 --> 00:26:19.576 A:middle
举个例子

00:26:19.576 --> 00:26:20.926 A:middle
有个节目你想要

00:26:20.926 --> 00:26:23.166 A:middle
使用确切的结束日期

00:26:23.326 --> 00:26:25.096 A:middle
和传统的播放流媒体一样

00:26:25.096 --> 00:26:26.366 A:middle
你可能需要把

00:26:26.366 --> 00:26:27.876 A:middle
直播流媒体按照

00:26:27.876 --> 00:26:29.886 A:middle
30分钟或者60分钟的容量

00:26:29.886 --> 00:26:31.736 A:middle
分成好几部分

00:26:32.616 --> 00:26:34.166 A:middle
在那种情况下

00:26:34.166 --> 00:26:35.686 A:middle
你就可以使用明确的开始和结束

00:26:35.686 --> 00:26:37.886 A:middle
时间来指明

00:26:37.886 --> 00:26:39.146 A:middle
你现在正在收看的节目

00:26:39.146 --> 00:26:39.606 A:middle
属于哪个部分

00:26:39.606 --> 00:26:43.526 A:middle
那么近似结束时间

00:26:43.526 --> 00:26:43.806 A:middle
又是怎么样的呢

00:26:43.896 --> 00:26:45.586 A:middle
最简单的例子就是

00:26:45.586 --> 00:26:46.876 A:middle
比如说有一个

00:26:46.876 --> 00:26:49.906 A:middle
体育比赛

00:26:49.906 --> 00:26:51.276 A:middle
你知道它可能会进行三个小时

00:26:51.276 --> 00:26:52.636 A:middle
但是你实在不知道

00:26:52.636 --> 00:26:54.526 A:middle
它实际会

00:26:54.526 --> 00:26:56.346 A:middle
进行多久

00:26:56.346 --> 00:26:57.096 A:middle
它可能结束地早

00:26:57.096 --> 00:26:57.816 A:middle
可能结束地晚

00:26:57.816 --> 00:26:59.916 A:middle
在这种情况下  你就可以使用

00:26:59.916 --> 00:27:00.896 A:middle
近似结束时间

00:26:59.916 --> 00:27:00.896 A:middle
近似结束时间

00:27:00.896 --> 00:27:03.416 A:middle
在这些情况中

00:27:03.416 --> 00:27:05.336 A:middle
时标的变化都会显示

00:27:05.336 --> 00:27:05.906 A:middle
这些时间

00:27:06.216 --> 00:27:08.076 A:middle
它要么显示更多时间

00:27:08.076 --> 00:27:08.936 A:middle
要么显示更少时间

00:27:10.146 --> 00:27:12.276 A:middle
当你提供具体数值时

00:27:12.346 --> 00:27:13.286 A:middle
在传输栏上会展示

00:27:13.286 --> 00:27:14.936 A:middle
一个时钟的时间

00:27:15.206 --> 00:27:16.876 A:middle
而近似数值则不会显示

00:27:16.876 --> 00:27:17.846 A:middle
所以这样就

00:27:17.846 --> 00:27:19.416 A:middle
不会误导用户

00:27:19.416 --> 00:27:20.976 A:middle
节目会正好在结束时间

00:27:20.976 --> 00:27:22.926 A:middle
结束

00:27:23.766 --> 00:27:25.006 A:middle
这也会帮助用户

00:27:25.006 --> 00:27:26.256 A:middle
了解他们观看节目的

00:27:26.256 --> 00:27:26.626 A:middle
进度

00:27:26.626 --> 00:27:27.846 A:middle
他们错过了多少

00:27:27.846 --> 00:27:31.096 A:middle
节目还会持续

00:27:31.876 --> 00:27:33.736 A:middle
多长时间

00:27:34.406 --> 00:27:38.576 A:middle
形象一点来说

00:27:38.576 --> 00:27:41.426 A:middle
在你有直播流的

00:27:41.426 --> 00:27:42.726 A:middle
情况下

00:27:42.726 --> 00:27:44.656 A:middle
你没有指定开始和结束时间

00:27:44.656 --> 00:27:45.726 A:middle
那么一切都是

00:27:45.726 --> 00:27:47.286 A:middle
默认或遗留状态

00:27:47.426 --> 00:27:50.676 A:middle
这与我们在

00:27:50.676 --> 00:27:52.036 A:middle
tvOS 10 中有点不太一样

00:27:52.036 --> 00:27:53.356 A:middle
因为在过去

00:27:53.356 --> 00:27:55.286 A:middle
我们会显示开始和结束

00:27:55.386 --> 00:27:56.096 A:middle
时间

00:27:56.706 --> 00:27:57.696 A:middle
我们不再这样做了

00:27:57.696 --> 00:27:58.686 A:middle
因为它们都是近似值

00:27:59.646 --> 00:28:00.866 A:middle
但是你可以有一个 30 分钟的

00:27:59.646 --> 00:28:00.866 A:middle
但是你可以有一个 30 分钟的

00:28:00.866 --> 00:28:01.326 A:middle
窗口

00:28:01.516 --> 00:28:03.396 A:middle
在这个例子中

00:28:03.396 --> 00:28:05.896 A:middle
它会从 11 点播放到 11:30

00:28:05.896 --> 00:28:08.246 A:middle
所以 11:28 这个标记接近结束时间

00:28:09.536 --> 00:28:11.316 A:middle
如果你的节目是从 11 点

00:28:11.316 --> 00:28:12.646 A:middle
播放到 11 点半

00:28:12.646 --> 00:28:14.066 A:middle
那么一切正常  但是如果不是呢

00:28:14.066 --> 00:28:14.986 A:middle
如果你正在

00:28:14.986 --> 00:28:16.656 A:middle
观看一个三小时的

00:28:16.656 --> 00:28:17.326 A:middle
棒球赛或者其他好看的节目呢

00:28:18.086 --> 00:28:20.346 A:middle
好了  现在有一个

00:28:20.346 --> 00:28:22.236 A:middle
拥有确切开始和结束时间的例子

00:28:22.236 --> 00:28:23.706 A:middle
在这个例子中  节目从 10 点播放到 13 点

00:28:23.706 --> 00:28:25.926 A:middle
你可以看到 11:28 大致在

00:28:25.926 --> 00:28:28.376 A:middle
中间位置

00:28:28.376 --> 00:28:29.526 A:middle
而比例也相应进行了调整

00:28:30.086 --> 00:28:31.556 A:middle
当然了  我们可以

00:28:31.556 --> 00:28:33.426 A:middle
设置一个近似的结束日期

00:28:33.426 --> 00:28:35.106 A:middle
这样结束的时间就会

00:28:35.106 --> 00:28:35.546 A:middle
消失不见

00:28:36.016 --> 00:28:40.466 A:middle
不过它的比例还是一样的

00:28:40.656 --> 00:28:42.106 A:middle
现在我们来简单看看

00:28:42.106 --> 00:28:43.046 A:middle
它的代码

00:28:43.146 --> 00:28:44.376 A:middle
如果你看了去年的会议

00:28:44.376 --> 00:28:47.706 A:middle
那么这个新的元数据项目

00:28:47.706 --> 00:28:48.606 A:middle
助手功能可能对你来说

00:28:48.606 --> 00:28:49.096 A:middle
比较熟悉

00:28:50.106 --> 00:28:50.896 A:middle
我们要做的就是

00:28:50.896 --> 00:28:52.686 A:middle
创造我们的开始时间

00:28:53.416 --> 00:28:54.816 A:middle
我们将为之创造一个

00:28:54.816 --> 00:28:56.466 A:middle
元数据项目

00:28:57.036 --> 00:28:58.596 A:middle
对于结束时间也需要

00:28:58.596 --> 00:28:59.636 A:middle
重复此操作

00:29:00.476 --> 00:29:02.936 A:middle
最终  我们将为

00:29:02.936 --> 00:29:04.826 A:middle
我们的播放器项目

00:29:04.826 --> 00:29:06.696 A:middle
增加两个元数据项目

00:29:06.696 --> 00:29:07.626 A:middle
以此获得外部元数据性能

00:29:08.226 --> 00:29:12.276 A:middle
好了  现在我们来看一个

00:29:12.596 --> 00:29:13.296 A:middle
简单的展示

00:29:13.986 --> 00:29:15.366 A:middle
我现在只能展示少数几个

00:29:15.366 --> 00:29:15.646 A:middle
东西

00:29:16.816 --> 00:29:21.746 A:middle
首先  这是我们的

00:29:21.746 --> 00:29:22.446 A:middle
Unobscured Content Guide

00:29:24.326 --> 00:29:28.146 A:middle
如果我们让它淡出

00:29:28.146 --> 00:29:29.586 A:middle
它会这样消失

00:29:29.586 --> 00:29:30.526 A:middle
因为我正在使用传输栏

00:29:30.526 --> 00:29:30.976 A:middle
动画协调器

00:29:31.996 --> 00:29:32.976 A:middle
所以  它消失得非常快

00:29:33.836 --> 00:29:36.976 A:middle
我感觉我应该向自己

00:29:36.976 --> 00:29:37.566 A:middle
挥挥手

00:29:40.256 --> 00:29:42.446 A:middle
这些就是自定义的信息

00:29:42.446 --> 00:29:42.736 A:middle
视图

00:29:43.436 --> 00:29:47.756 A:middle
这些是我们之前看过的

00:29:47.756 --> 00:29:49.716 A:middle
我们可以来回转换

00:29:49.776 --> 00:29:51.576 A:middle
选中“确切时间”

00:29:52.366 --> 00:29:52.946 A:middle
好了

00:29:57.516 --> 00:29:59.846 A:middle
[ 掌声 ]

00:30:00.346 --> 00:30:01.286 A:middle
好消息是这个会议

00:30:01.286 --> 00:30:02.516 A:middle
并不会持续

00:30:02.516 --> 00:30:03.136 A:middle
三个小时

00:30:03.766 --> 00:30:07.146 A:middle
我这样设置是因为

00:30:07.146 --> 00:30:09.536 A:middle
如果我设置了真实的结束时间

00:30:09.536 --> 00:30:10.566 A:middle
现在的时间和结束时间会太接近

00:30:10.566 --> 00:30:12.636 A:middle
这样的话

00:30:12.636 --> 00:30:13.606 A:middle
事件时间将被隐藏

00:30:13.606 --> 00:30:14.756 A:middle
因为它们会相互

00:30:14.756 --> 00:30:15.186 A:middle
重叠

00:30:15.186 --> 00:30:17.636 A:middle
再来看一下我们的

00:30:17.636 --> 00:30:17.846 A:middle
代码

00:30:17.846 --> 00:30:19.256 A:middle
人们在家里

00:30:19.256 --> 00:30:20.056 A:middle
看到你刚刚突然的出现

00:30:20.056 --> 00:30:21.226 A:middle
都会感到困惑

00:30:21.226 --> 00:30:22.916 A:middle
因为音轨

00:30:22.916 --> 00:30:26.026 A:middle
似乎有点脱离视频

00:30:26.176 --> 00:30:28.846 A:middle
好了  这就是我们的展示

00:30:29.236 --> 00:30:31.236 A:middle
[ 掌声 ]

00:30:31.456 --> 00:30:36.476 A:middle
回到我们的幻灯片

00:30:36.896 --> 00:30:37.696 A:middle
我们介绍了

00:30:37.696 --> 00:30:38.586 A:middle
AVKit 中的

00:30:38.586 --> 00:30:39.936 A:middle
几个新性能

00:30:39.936 --> 00:30:40.816 A:middle
但是还有很多

00:30:40.816 --> 00:30:43.426 A:middle
我没有讲到  不过我讲的

00:30:43.426 --> 00:30:44.396 A:middle
都是其中最重要的

00:30:45.186 --> 00:30:47.236 A:middle
想要了解更多在 tvOS 中

00:30:47.236 --> 00:30:49.546 A:middle
使用 AVKit 的信息  可以观看

00:30:49.546 --> 00:30:50.056 A:middle
去年的会议

00:30:50.726 --> 00:30:52.536 A:middle
同时还可以在这场会议结束后的 11 点

00:30:52.536 --> 00:30:54.436 A:middle
到1点前

00:30:54.436 --> 00:30:57.206 A:middle
在 tech lab F 中

00:30:57.206 --> 00:30:57.856 A:middle
加入 AVKit lab

00:30:58.576 --> 00:30:59.726 A:middle
并告诉我们你的问题

00:31:00.586 --> 00:31:02.046 A:middle
现在  我想有请

00:31:02.046 --> 00:31:03.596 A:middle
Marshall 上台

00:31:03.596 --> 00:31:04.336 A:middle
来介绍 View Controller 的

00:31:04.336 --> 00:31:04.946 A:middle
优化

00:31:06.516 --> 00:31:10.126 A:middle
[ 掌声 ]

00:31:10.626 --> 00:31:12.736 A:middle
&gt;&gt;  谢谢 Dan

00:31:13.166 --> 00:31:14.546 A:middle
我是 Marshall  今天

00:31:14.546 --> 00:31:15.826 A:middle
我将介绍

00:31:15.826 --> 00:31:17.256 A:middle
tvOS 11中 view controller 的

00:31:17.256 --> 00:31:17.566 A:middle
优化

00:31:17.566 --> 00:31:18.366 A:middle
我们直接开始吧

00:31:18.616 --> 00:31:20.696 A:middle
首先  我们来看一看

00:31:20.696 --> 00:31:22.176 A:middle
模态演示

00:31:22.406 --> 00:31:24.206 A:middle
如果你曾经使用过 UI Alert Controller

00:31:24.206 --> 00:31:25.696 A:middle
或者曾将你的 Apple TV 设成睡眠状态

00:31:25.696 --> 00:31:27.566 A:middle
你可能会对这个转换

00:31:27.566 --> 00:31:28.776 A:middle
比较熟悉

00:31:28.776 --> 00:31:30.246 A:middle
我们会逐渐将内容模糊

00:31:30.596 --> 00:31:31.526 A:middle
并在 View Controller 中

00:31:31.526 --> 00:31:32.006 A:middle
使用动画

00:31:32.446 --> 00:31:35.026 A:middle
在 tvOS 11 中

00:31:35.026 --> 00:31:36.056 A:middle
你可以在自己的应用中

00:31:36.056 --> 00:31:37.816 A:middle
使用这个名为

00:31:37.816 --> 00:31:39.346 A:middle
Blur Over Full Screen 的

00:31:39.346 --> 00:31:40.756 A:middle
模态演示风格

00:31:42.086 --> 00:31:43.356 A:middle
它将把展示的视图控制器中的

00:31:43.356 --> 00:31:44.626 A:middle
内容逐渐变模糊

00:31:44.626 --> 00:31:46.796 A:middle
这个所使用的

00:31:46.796 --> 00:31:48.186 A:middle
是和 UI Alert Controller 中一样的

00:31:48.186 --> 00:31:49.496 A:middle
动画和定时器

00:31:50.696 --> 00:31:51.906 A:middle
设置这个也很简单

00:31:52.696 --> 00:31:54.096 A:middle
将模块演示风格

00:31:54.096 --> 00:31:55.826 A:middle
设置为全屏模糊

00:31:55.826 --> 00:31:56.546 A:middle
将你的视图控制器

00:31:56.546 --> 00:31:57.736 A:middle
设置的和平常

00:31:57.736 --> 00:31:57.966 A:middle
一样

00:31:58.546 --> 00:32:02.486 A:middle
接下来  我们要讨论一些优化

00:31:58.546 --> 00:32:02.486 A:middle
接下来  我们要讨论一些优化

00:32:02.486 --> 00:32:03.986 A:middle
那就是 UI Split

00:32:03.986 --> 00:32:04.636 A:middle
View Controller

00:32:05.146 --> 00:32:06.636 A:middle
如果你曾经在应用中

00:32:06.636 --> 00:32:08.076 A:middle
使用过分屏视图控制器

00:32:08.076 --> 00:32:11.706 A:middle
那你应该知道

00:32:11.706 --> 00:32:12.986 A:middle
主控制器在左边

00:32:12.986 --> 00:32:13.956 A:middle
详细控制器

00:32:13.956 --> 00:32:14.756 A:middle
则在右边

00:32:15.696 --> 00:32:17.176 A:middle
在 tvOS 11 中

00:32:17.176 --> 00:32:18.256 A:middle
我们有一个新的性能

00:32:18.256 --> 00:32:19.126 A:middle
可以让你改变

00:32:19.126 --> 00:32:19.546 A:middle
这个布局

00:32:19.886 --> 00:32:22.806 A:middle
为了支撑这个功能

00:32:22.806 --> 00:32:24.666 A:middle
我们有一个拥有

00:32:24.666 --> 00:32:26.076 A:middle
Leading 和 trailing 两个数值的

00:32:26.076 --> 00:32:27.886 A:middle
UI Split View Controller

00:32:27.886 --> 00:32:28.396 A:middle
Primary Edge 的新枚举

00:32:29.216 --> 00:32:30.856 A:middle
还有一个你可以设置 primary edge 的

00:32:30.856 --> 00:32:32.186 A:middle
性能

00:32:32.956 --> 00:32:34.136 A:middle
这些名词现在很重要

00:32:34.176 --> 00:32:35.516 A:middle
因为我们刚刚也听到了

00:32:35.516 --> 00:32:37.346 A:middle
tvOS 现在支持 RTL 语言了

00:32:37.826 --> 00:32:38.966 A:middle
所以  在这种情况下

00:32:38.966 --> 00:32:40.336 A:middle
如果你使用了从左至右的语言

00:32:40.336 --> 00:32:41.146 A:middle
并且使用 leading

00:32:41.146 --> 00:32:42.336 A:middle
那么主控制器就会在左边

00:32:42.606 --> 00:32:44.106 A:middle
而如果使用 trailing

00:32:44.106 --> 00:32:44.926 A:middle
主控制器则会在右边

00:32:45.686 --> 00:32:47.706 A:middle
不过在 RTL 语言中

00:32:47.706 --> 00:32:48.996 A:middle
这一切就反过来了

00:32:48.996 --> 00:32:49.906 A:middle
主控制器会在右边

00:32:49.906 --> 00:32:57.576 A:middle
对 trailing 来说

00:32:57.716 --> 00:32:57.836 A:middle
则是左边

00:32:57.836 --> 00:32:59.326 A:middle
去年 我们宣布将使用

00:32:59.326 --> 00:33:01.736 A:middle
一个功能让

00:32:59.326 --> 00:33:01.736 A:middle
一个功能让

00:33:01.736 --> 00:33:02.676 A:middle
用户可以把系统外观

00:33:02.676 --> 00:33:03.616 A:middle
调暗

00:33:03.756 --> 00:33:05.676 A:middle
这样如果用户的 Apple TV

00:33:05.676 --> 00:33:07.526 A:middle
是在影音室内

00:33:07.526 --> 00:33:09.186 A:middle
或者用户想在晚上使用它

00:33:09.186 --> 00:33:09.786 A:middle
那他们将有更好的体验

00:33:10.336 --> 00:33:11.516 A:middle
今年开始

00:33:11.516 --> 00:33:13.436 A:middle
我们有另一个名为自动化的

00:33:13.436 --> 00:33:13.936 A:middle
模式

00:33:14.206 --> 00:33:15.866 A:middle
它的功能就是

00:33:15.866 --> 00:33:17.346 A:middle
根据它所处的位置

00:33:17.346 --> 00:33:20.356 A:middle
将用户的系统外观

00:33:20.356 --> 00:33:22.016 A:middle
在晚上时自动调暗

00:33:22.016 --> 00:33:23.366 A:middle
在白天时则自动

00:33:23.366 --> 00:33:23.906 A:middle
调亮

00:33:24.746 --> 00:33:25.776 A:middle
为了提供最优质的用户体验

00:33:25.776 --> 00:33:27.226 A:middle
保证 app 能调节明暗

00:33:27.226 --> 00:33:28.176 A:middle
比以往来说要更

00:33:28.176 --> 00:33:29.686 A:middle
重要

00:33:30.516 --> 00:33:31.546 A:middle
为了支撑该功能

00:33:31.546 --> 00:33:32.746 A:middle
我们增加了一些新的 API

00:33:33.166 --> 00:33:34.296 A:middle
首先  我们来看一下

00:33:34.296 --> 00:33:34.776 A:middle
Top Shelf

00:33:36.836 --> 00:33:38.846 A:middle
如果你曾经提供过 Top shelf extension

00:33:38.846 --> 00:33:39.796 A:middle
那你应该知道

00:33:39.796 --> 00:33:42.036 A:middle
你可以通过提供图片网址

00:33:42.226 --> 00:33:43.726 A:middle
把图片放在 top shelf 上

00:33:44.666 --> 00:33:46.546 A:middle
我们现在有新的 API

00:33:46.656 --> 00:33:48.436 A:middle
可以提供一个暗图

00:33:48.436 --> 00:33:49.436 A:middle
系统会根据系统外观

00:33:49.436 --> 00:33:50.716 A:middle
自动选择

00:33:50.716 --> 00:33:51.696 A:middle
合适的素材

00:33:51.696 --> 00:33:52.536 A:middle
来展示

00:33:53.816 --> 00:33:55.116 A:middle
如果你曾经浏览过这些

00:33:55.116 --> 00:33:56.506 A:middle
你会有一个 TV 内容条目

00:33:56.506 --> 00:33:58.316 A:middle
然后是设置图像

00:33:58.316 --> 00:33:59.016 A:middle
URL

00:33:59.766 --> 00:34:02.356 A:middle
在 tvOS 11 中 你可以

00:33:59.766 --> 00:34:02.356 A:middle
在 tvOS 11 中 你可以

00:34:02.356 --> 00:34:05.056 A:middle
将 Set Image URL 设为 for traits

00:34:05.056 --> 00:34:06.436 A:middle
并分别提供一个 light trait 和

00:34:06.436 --> 00:34:07.536 A:middle
dark trait 来创作

00:34:07.536 --> 00:34:08.056 A:middle
图片素材

00:34:08.616 --> 00:34:09.746 A:middle
如果你想使用相同的图片

00:34:09.746 --> 00:34:11.536 A:middle
你可以在这些方法调用中

00:34:11.536 --> 00:34:12.826 A:middle
提供相同的

00:34:12.826 --> 00:34:13.926 A:middle
图像地址

00:34:16.516 --> 00:34:17.746 A:middle
最后 我们将介绍

00:34:17.746 --> 00:34:18.985 A:middle
如何使你的 app 外观

00:34:18.985 --> 00:34:20.096 A:middle
融合到

00:34:20.096 --> 00:34:20.585 A:middle
内容中

00:34:21.436 --> 00:34:22.866 A:middle
我们的 app 就做到了这一点

00:34:22.866 --> 00:34:25.235 A:middle
比如说在我们的电影中 如果

00:34:25.235 --> 00:34:26.956 A:middle
有一个电影插图是亮色的

00:34:26.956 --> 00:34:28.716 A:middle
我们就会展示合适的控件

00:34:28.716 --> 00:34:30.126 A:middle
如果插图是暗色的

00:34:30.126 --> 00:34:31.926 A:middle
我们也会展示看上去最合适的控件

00:34:32.706 --> 00:34:33.476 A:middle
为了让开发者

00:34:33.476 --> 00:34:35.235 A:middle
更简单地实现这个性能

00:34:35.235 --> 00:34:36.896 A:middle
我们在 UI View Controller 中

00:34:36.896 --> 00:34:38.056 A:middle
有一个名为 Preferred

00:34:38.056 --> 00:34:38.956 A:middle
User Interface Style 的新性能

00:34:39.356 --> 00:34:40.536 A:middle
如果你们曾经使用

00:34:40.536 --> 00:34:42.176 A:middle
preferred status bar style

00:34:42.176 --> 00:34:43.456 A:middle
这个对你们来说可能比较眼熟

00:34:44.096 --> 00:34:45.795 A:middle
它的作用是

00:34:45.795 --> 00:34:47.166 A:middle
在视图控制器上

00:34:47.166 --> 00:34:48.466 A:middle
指定特定的 UI User Interface Style

00:34:49.076 --> 00:34:50.146 A:middle
它会通过更新

00:34:50.146 --> 00:34:51.686 A:middle
特征集合和系统墙纸

00:34:51.686 --> 00:34:53.466 A:middle
来自定义

00:34:53.466 --> 00:34:54.346 A:middle
外观

00:34:54.996 --> 00:34:56.196 A:middle
我们来看看最终的

00:34:56.196 --> 00:34:56.616 A:middle
效果

00:34:57.276 --> 00:34:59.106 A:middle
我有一个 Tab—R 控制器

00:34:59.106 --> 00:35:00.266 A:middle
这里第一个视图控制器

00:34:59.106 --> 00:35:00.266 A:middle
这里第一个视图控制器

00:35:00.266 --> 00:35:01.926 A:middle
指定的是偏好

00:35:01.926 --> 00:35:03.406 A:middle
亮色风格

00:35:03.556 --> 00:35:05.266 A:middle
第二个则指定的

00:35:05.266 --> 00:35:06.216 A:middle
是偏好暗色风格

00:35:06.586 --> 00:35:07.996 A:middle
当我们转换标签时

00:35:07.996 --> 00:35:08.876 A:middle
可以看到

00:35:08.876 --> 00:35:09.906 A:middle
应用的特征集合

00:35:09.906 --> 00:35:11.636 A:middle
和系统墙纸

00:35:11.636 --> 00:35:12.166 A:middle
都自动更新了

00:35:14.076 --> 00:35:15.656 A:middle
所以  我们有三个新的 API 方法

00:35:15.656 --> 00:35:16.836 A:middle
可以让各位把其应用在

00:35:16.836 --> 00:35:17.586 A:middle
自己的 app 中

00:35:17.946 --> 00:35:19.736 A:middle
首先  在你们的视图控制器中

00:35:19.736 --> 00:35:21.446 A:middle
改写一个名为

00:35:21.446 --> 00:35:22.426 A:middle
优先用户界面风格

00:35:22.526 --> 00:35:23.436 A:middle
的

00:35:23.436 --> 00:35:23.916 A:middle
只读性能

00:35:24.216 --> 00:35:25.746 A:middle
在这里  你可以将用户

00:35:25.746 --> 00:35:28.066 A:middle
界面风格设为浅黑色

00:35:28.206 --> 00:35:29.586 A:middle
或者未定义

00:35:29.586 --> 00:35:30.766 A:middle
也就是遵循系统风格

00:35:31.566 --> 00:35:33.056 A:middle
对于大多数人来说

00:35:33.056 --> 00:35:34.736 A:middle
这也许就能满足他们的

00:35:34.736 --> 00:35:35.066 A:middle
需要

00:35:35.526 --> 00:35:36.966 A:middle
不过如果你使用的是

00:35:36.966 --> 00:35:38.316 A:middle
自定义视图控制器

00:35:38.316 --> 00:35:39.306 A:middle
并使用了包含子视图控制器

00:35:39.586 --> 00:35:40.606 A:middle
这里有两个方法

00:35:40.606 --> 00:35:41.556 A:middle
你可以使用

00:35:41.616 --> 00:35:43.406 A:middle
第一个就是用以用户界面风格设置

00:35:43.406 --> 00:35:44.546 A:middle
的子视图控制器

00:35:44.546 --> 00:35:45.896 A:middle
你可以将这个决定委托给

00:35:45.896 --> 00:35:46.626 A:middle
review controller

00:35:47.006 --> 00:35:48.516 A:middle
在选项栏控制器中

00:35:48.516 --> 00:35:50.456 A:middle
目前选择的

00:35:50.456 --> 00:35:51.806 A:middle
选项栏视图控制器

00:35:51.806 --> 00:35:52.566 A:middle
或者目前选择的视图控制器

00:35:52.566 --> 00:35:54.136 A:middle
会在这里回归

00:35:55.156 --> 00:35:56.476 A:middle
然后 当发生变化时

00:35:56.476 --> 00:35:58.126 A:middle
你需要调用 Set

00:35:58.126 --> 00:35:59.766 A:middle
需要用户界面外观

00:35:59.766 --> 00:36:00.166 A:middle
升级

00:35:59.766 --> 00:36:00.166 A:middle
升级

00:36:00.526 --> 00:36:01.736 A:middle
这会告知系统

00:36:01.736 --> 00:36:03.026 A:middle
有变化发生

00:36:03.026 --> 00:36:04.326 A:middle
我们会重新找到

00:36:04.326 --> 00:36:05.376 A:middle
你应用的偏好风格

00:36:05.376 --> 00:36:05.976 A:middle
是什么

00:36:09.296 --> 00:36:11.086 A:middle
这就是我们今天要讲的

00:36:11.086 --> 00:36:12.336 A:middle
视图控制器的优化

00:36:12.906 --> 00:36:14.456 A:middle
我们可以最后来看看

00:36:14.456 --> 00:36:14.876 A:middle
今天所讲的内容

00:36:15.416 --> 00:36:17.106 A:middle
首先  我们认识到

00:36:17.106 --> 00:36:18.486 A:middle
ODR bundle 的最大值

00:36:18.486 --> 00:36:19.896 A:middle
从 200MB 上升到

00:36:19.896 --> 00:36:21.266 A:middle
4GB 从而让你在

00:36:21.266 --> 00:36:22.526 A:middle
安装应用时

00:36:22.526 --> 00:36:23.866 A:middle
可以包含更多的内容

00:36:24.816 --> 00:36:26.696 A:middle
我们了解到 tvOS

00:36:26.696 --> 00:36:28.346 A:middle
现在支持 RTL 语言

00:36:28.346 --> 00:36:29.586 A:middle
所以请记得使用

00:36:29.586 --> 00:36:31.896 A:middle
我们为那些语言设计的

00:36:31.896 --> 00:36:32.396 A:middle
测试你们布局的工具

00:36:32.966 --> 00:36:35.406 A:middle
我们还了解了一些新方法

00:36:35.406 --> 00:36:36.536 A:middle
可以在用户使用

00:36:36.536 --> 00:36:37.866 A:middle
你们的应用时

00:36:37.866 --> 00:36:39.226 A:middle
在后台运作

00:36:39.226 --> 00:36:39.766 A:middle
让内容时刻

00:36:39.766 --> 00:36:40.386 A:middle
保持更新

00:36:41.916 --> 00:36:43.486 A:middle
我们还讨论了包括

00:36:43.486 --> 00:36:44.576 A:middle
定制信息视图在内的

00:36:44.576 --> 00:36:45.796 A:middle
新的 AVKit 优化

00:36:47.336 --> 00:36:49.046 A:middle
我们同时还看到了

00:36:49.046 --> 00:36:50.566 A:middle
Image View 上新的 API

00:36:50.566 --> 00:36:52.686 A:middle
可以让你的内容对用户来说

00:36:52.686 --> 00:36:53.016 A:middle
更有交互性

00:36:54.896 --> 00:36:56.446 A:middle
最后  我们还讨论了

00:36:56.446 --> 00:36:58.286 A:middle
如何使用你偏好的

00:36:58.286 --> 00:36:59.506 A:middle
用户界面风格

00:36:59.506 --> 00:37:00.986 A:middle
将你的内容和应用外观

00:36:59.506 --> 00:37:00.986 A:middle
将你的内容和应用外观

00:37:00.986 --> 00:37:01.676 A:middle
适用到你的内容中去

00:37:02.236 --> 00:37:04.186 A:middle
如果你想要了解

00:37:04.186 --> 00:37:05.846 A:middle
更多资讯

00:37:05.846 --> 00:37:06.546 A:middle
请登录

00:37:06.546 --> 00:37:08.036 A:middle
developer.apple.com

00:37:08.996 --> 00:37:10.276 A:middle
如果你想要了解关于这些话题的

00:37:10.276 --> 00:37:11.246 A:middle
更详细的内容

00:37:11.246 --> 00:37:12.426 A:middle
我们还有很多包括

00:37:12.426 --> 00:37:13.796 A:middle
今年的一些视频的

00:37:13.796 --> 00:37:13.986 A:middle
相关场次

00:37:14.936 --> 00:37:16.066 A:middle
感谢你们的聆听

00:37:16.066 --> 00:37:16.716 A:middle
希望你们能在

00:37:16.716 --> 00:37:16.976 A:middle
接下来的会议度过愉快的时光

00:37:17.508 --> 00:37:19.508 A:middle
[ 掌声 ]
