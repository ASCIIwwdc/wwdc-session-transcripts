WEBVTT

00:00:23.516 --> 00:00:25.926 A:middle
[ 掌声 ]

00:00:26.426 --> 00:00:27.236 A:middle
&gt;&gt;欢迎各位

00:00:27.566 --> 00:00:28.896 A:middle
大家下午好

00:00:29.396 --> 00:00:31.066 A:middle
我是 Sirisha  来自 SiriKit

00:00:31.066 --> 00:00:31.726 A:middle
工程技术团队

00:00:32.095 --> 00:00:33.516 A:middle
今天我要和我的同事兼好友

00:00:33.516 --> 00:00:36.046 A:middle
Tin 一起聊聊我们今年

00:00:36.046 --> 00:00:37.176 A:middle
将给 SiriKit 增添

00:00:37.176 --> 00:00:39.626 A:middle
哪些酷炫的新功能

00:00:41.106 --> 00:00:42.746 A:middle
我们去年推出了 SiriKit

00:00:42.746 --> 00:00:44.636 A:middle
它以一种全新方式

00:00:44.636 --> 00:00:46.456 A:middle
让每个人都能使用自己的语音来

00:00:46.456 --> 00:00:47.876 A:middle
吩咐 App 做事情

00:00:48.886 --> 00:00:50.686 A:middle
这项发布的主要目的

00:00:50.686 --> 00:00:51.966 A:middle
是为了确保大家能够

00:00:51.966 --> 00:00:54.516 A:middle
把自己的服务和内容

00:00:54.516 --> 00:00:56.126 A:middle
与我们的 SiriKit 相结合

00:00:56.126 --> 00:00:58.536 A:middle
这样一来 用户就能用 Siri

00:00:58.826 --> 00:01:00.776 A:middle
跟自己的 App 对话了

00:00:58.826 --> 00:01:00.776 A:middle
跟自己的 App 对话了

00:01:01.436 --> 00:01:05.116 A:middle
为了实现这个目标 我们

00:01:05.116 --> 00:01:07.406 A:middle
已经开放了许多应用域

00:01:07.716 --> 00:01:10.196 A:middle
比如训练、发消息、乘车预订等等

00:01:10.196 --> 00:01:12.126 A:middle
以上列举的只是其中一部分

00:01:12.806 --> 00:01:14.876 A:middle
每个应用域都包含一个或多个

00:01:14.876 --> 00:01:15.406 A:middle
Intent

00:01:15.936 --> 00:01:18.386 A:middle
而这些 Intent 分别对应某个具体任务

00:01:18.986 --> 00:01:21.416 A:middle
例如  通过发送信息的应用域

00:01:21.896 --> 00:01:23.676 A:middle
用户可以发送

00:01:23.676 --> 00:01:25.836 A:middle
或搜索一则信息

00:01:26.316 --> 00:01:28.266 A:middle
使用乘车预订，每个人

00:01:28.266 --> 00:01:29.806 A:middle
都能在自己喜欢的 App 里

00:01:29.806 --> 00:01:30.656 A:middle
预订出行

00:01:31.206 --> 00:01:34.236 A:middle
或者是通过付款应用

00:01:34.476 --> 00:01:35.076 A:middle
付款结账

00:01:36.516 --> 00:01:38.746 A:middle
因为有了这些 Intent  我们

00:01:38.746 --> 00:01:40.676 A:middle
使得大家能够挑选

00:01:40.676 --> 00:01:42.596 A:middle
自己想要订阅 同时也

00:01:42.596 --> 00:01:44.706 A:middle
最适合你的各项 App 功能

00:01:44.706 --> 00:01:45.906 A:middle
的Intent

00:01:47.836 --> 00:01:51.896 A:middle
我们在发布 Watch 3.2 的时候

00:01:51.986 --> 00:01:53.866 A:middle
就已经开始在 WatchOS 平台上

00:01:53.866 --> 00:01:54.976 A:middle
支持 SiriKit 运行

00:01:55.526 --> 00:01:57.896 A:middle
通过编写 Watch Extension

00:01:57.896 --> 00:01:59.976 A:middle
你可以在 Watch 上

00:01:59.976 --> 00:02:01.616 A:middle
充分利用 SiriKit Intent

00:01:59.976 --> 00:02:01.616 A:middle
充分利用 SiriKit Intent

00:02:01.686 --> 00:02:02.996 A:middle
框架的所有优点

00:02:03.556 --> 00:02:07.056 A:middle
我们正在不断努力

00:02:07.056 --> 00:02:09.826 A:middle
给大家带来便捷流畅的体验

00:02:09.826 --> 00:02:12.516 A:middle
所以我们现在增加了

00:02:12.516 --> 00:02:13.196 A:middle
对模拟器的支持

00:02:13.946 --> 00:02:17.716 A:middle
启动 iOS10.3 和 watchOS3.2

00:02:17.746 --> 00:02:20.836 A:middle
你就能够在编写 SiriKit Extension 时

00:02:20.836 --> 00:02:22.326 A:middle
进行调试和

00:02:22.326 --> 00:02:22.966 A:middle
检测

00:02:24.356 --> 00:02:26.456 A:middle
今年对我们来说意义非凡

00:02:27.096 --> 00:02:29.256 A:middle
用户的广泛认同和绝妙反馈

00:02:29.256 --> 00:02:30.806 A:middle
让这一切成为现实

00:02:31.446 --> 00:02:32.796 A:middle
我们不妨大致看一看

00:02:32.956 --> 00:02:33.876 A:middle
今年我们将给大家带来

00:02:33.876 --> 00:02:34.876 A:middle
哪些酷炫的东西

00:02:36.076 --> 00:02:39.646 A:middle
我们开发了许多新的应用域

00:02:39.646 --> 00:02:40.386 A:middle
和更丰富的 Intent

00:02:41.446 --> 00:02:43.936 A:middle
全新的 API（应用程序编程接口）让你拥有更多权限

00:02:43.936 --> 00:02:46.156 A:middle
在 Siri 里

00:02:46.156 --> 00:02:49.006 A:middle
实现体验定制化

00:02:49.006 --> 00:02:49.626 A:middle
并且察看自己的 App 视图

00:02:50.936 --> 00:02:52.696 A:middle
我们还大力改进了

00:02:52.696 --> 00:02:54.746 A:middle
各个系统和 API 以便有效地

00:02:54.746 --> 00:02:56.436 A:middle
提升用户体验

00:02:57.996 --> 00:02:59.776 A:middle
那么 我们不妨先从

00:02:59.776 --> 00:03:00.656 A:middle
应用域谈起

00:02:59.776 --> 00:03:00.656 A:middle
应用域谈起

00:03:01.726 --> 00:03:03.566 A:middle
我们已经把一些新的 Intent 添加到

00:03:03.566 --> 00:03:04.746 A:middle
付款应用域

00:03:05.216 --> 00:03:08.396 A:middle
我们还增强了对列表和

00:03:08.396 --> 00:03:10.626 A:middle
备忘录使用功能的支持

00:03:11.576 --> 00:03:14.086 A:middle
如果你的 App 使用可视化代码

00:03:14.436 --> 00:03:15.876 A:middle
那么你可以着手考虑整合

00:03:15.876 --> 00:03:17.986 A:middle
今年秋天开始投入使用的 Sirikit 功能了

00:03:19.736 --> 00:03:22.546 A:middle
付款应用域是从 iOS10 就开始

00:03:22.546 --> 00:03:22.896 A:middle
采用了

00:03:23.286 --> 00:03:25.356 A:middle
我们当初在做这款发布时 添加了

00:03:25.356 --> 00:03:27.646 A:middle
支持付款和

00:03:27.646 --> 00:03:28.466 A:middle
收款的功能

00:03:28.466 --> 00:03:33.156 A:middle
我们在发布 10.3 版本时  又添加了

00:03:33.156 --> 00:03:34.276 A:middle
查看账单的功能

00:03:34.826 --> 00:03:36.476 A:middle
用户能够查询账单

00:03:36.476 --> 00:03:37.986 A:middle
并进行支付

00:03:39.036 --> 00:03:40.876 A:middle
今年我们将进一步扩大支持内容

00:03:40.976 --> 00:03:43.276 A:middle
我们这次增添了对账户管理

00:03:43.276 --> 00:03:44.716 A:middle
的支持

00:03:45.476 --> 00:03:47.026 A:middle
用户目前将能够

00:03:47.886 --> 00:03:49.466 A:middle
把钱从一个账户转移到

00:03:49.466 --> 00:03:52.336 A:middle
另一个账户  或是查询

00:03:52.336 --> 00:03:53.406 A:middle
账户信息

00:03:54.366 --> 00:03:55.576 A:middle
我们现在来看看这些内容

00:03:56.406 --> 00:03:57.636 A:middle
首先我想谈谈

00:03:57.636 --> 00:03:58.626 A:middle
转账的 Intent

00:03:58.626 --> 00:04:01.966 A:middle
请看大屏幕  Siri 的

00:03:58.626 --> 00:04:01.966 A:middle
请看大屏幕  Siri 的

00:04:01.966 --> 00:04:04.476 A:middle
功能确实非常强大

00:04:04.476 --> 00:04:06.166 A:middle
它可以理解这么长的请求

00:04:06.776 --> 00:04:08.116 A:middle
现在我就给大家

00:04:08.116 --> 00:04:09.526 A:middle
逐行演示这些内容

00:04:10.256 --> 00:04:12.166 A:middle
明天转账 10 美元

00:04:12.226 --> 00:04:18.046 A:middle
就有 10 美元被映射为转账金额

00:04:19.166 --> 00:04:22.166 A:middle
而明天 就被对应转换为

00:04:22.166 --> 00:04:22.906 A:middle
具体执行日期

00:04:24.166 --> 00:04:26.026 A:middle
搞定 这些交易特征

00:04:26.026 --> 00:04:27.856 A:middle
很简单 而且映射准确

00:04:28.686 --> 00:04:30.006 A:middle
那么账户查询是什么情况呢？

00:04:31.016 --> 00:04:32.526 A:middle
账户的命名方式

00:04:32.526 --> 00:04:32.796 A:middle
多种多样

00:04:33.256 --> 00:04:35.336 A:middle
有时候我会用机构名称

00:04:35.336 --> 00:04:36.616 A:middle
来命名账户

00:04:37.206 --> 00:04:39.086 A:middle
或者 就像我在这里使用的

00:04:39.086 --> 00:04:40.426 A:middle
账户类型：活期账户

00:04:40.896 --> 00:04:42.166 A:middle
存款和信用卡

00:04:43.006 --> 00:04:45.036 A:middle
Siri 能弄清楚所有账户的

00:04:45.136 --> 00:04:47.826 A:middle
时间段，并且能确保

00:04:47.826 --> 00:04:49.906 A:middle
查询准确  然后把结果传到

00:04:49.906 --> 00:04:51.646 A:middle
你的 App

00:04:51.646 --> 00:04:53.976 A:middle
干得漂亮

00:04:54.176 --> 00:04:55.556 A:middle
这个 Rainbow Savings 又是什么？

00:04:56.036 --> 00:04:58.386 A:middle
这是我在自己的一个 App 里

00:04:58.666 --> 00:05:00.696 A:middle
注册账户时使用过

00:04:58.666 --> 00:05:00.696 A:middle
注册账户时使用过

00:05:00.696 --> 00:05:01.926 A:middle
的名字

00:05:02.466 --> 00:05:03.906 A:middle
现在我想确认一下

00:05:03.906 --> 00:05:05.756 A:middle
Siri 还能准确识别

00:05:05.756 --> 00:05:06.556 A:middle
我的账户别称

00:05:07.066 --> 00:05:08.446 A:middle
这是怎样实现的呢？

00:05:08.976 --> 00:05:10.216 A:middle
如果你使用我们的

00:05:10.506 --> 00:05:13.056 A:middle
IN Vocabulary API 来注册

00:05:13.056 --> 00:05:15.446 A:middle
用户详细资料 我们就能

00:05:15.446 --> 00:05:18.776 A:middle
了解到用户的具体

00:05:19.036 --> 00:05:19.836 A:middle
信息

00:05:21.706 --> 00:05:22.826 A:middle
你可以在这个链接中

00:05:22.826 --> 00:05:26.066 A:middle
获取有关 IN Vocabulary API

00:05:26.896 --> 00:05:28.916 A:middle
的更多信息

00:05:28.976 --> 00:05:30.746 A:middle
好 我们再来谈谈查询环节

00:05:31.086 --> 00:05:33.336 A:middle
我们第二个 Intent 是查询

00:05:33.336 --> 00:05:35.956 A:middle
账户的 Intent 它可以

00:05:36.026 --> 00:05:38.816 A:middle
如果用户恰好要求列出所有的

00:05:38.816 --> 00:05:41.176 A:middle
账户  它就能列出所有的

00:05:41.176 --> 00:05:42.366 A:middle
账户类型

00:05:42.986 --> 00:05:45.326 A:middle
信息量恰好足够

00:05:45.326 --> 00:05:46.366 A:middle
用来区分

00:05:46.366 --> 00:05:47.646 A:middle
每个账户  外加它们的

00:05:47.646 --> 00:05:48.266 A:middle
余额

00:05:48.836 --> 00:05:50.516 A:middle
如果用户想了解

00:05:50.516 --> 00:05:52.386 A:middle
每个账户的更多详情

00:05:52.386 --> 00:05:53.686 A:middle
只需点开其中任意一项

00:05:53.686 --> 00:05:55.636 A:middle
来详细了解

00:05:56.446 --> 00:05:58.746 A:middle
账户查询 Intent 不仅

00:05:58.746 --> 00:06:00.756 A:middle
显示所有账户 而且

00:05:58.746 --> 00:06:00.756 A:middle
显示所有账户 而且

00:06:00.756 --> 00:06:02.836 A:middle
还可以用来查看

00:06:02.836 --> 00:06:04.326 A:middle
具体的账户信息

00:06:04.866 --> 00:06:05.856 A:middle
就像这样

00:06:06.076 --> 00:06:08.536 A:middle
我的 Rainbow Checking 账户里

00:06:08.536 --> 00:06:09.746 A:middle
余额还有多少？

00:06:10.586 --> 00:06:12.706 A:middle
我现在具体询问的是我

00:06:12.706 --> 00:06:14.706 A:middle
某个账户里的余额

00:06:15.256 --> 00:06:17.746 A:middle
Siri 完全理解这一点

00:06:17.746 --> 00:06:20.196 A:middle
所以它马上给用户提供了

00:06:20.196 --> 00:06:21.256 A:middle
所需要的信息

00:06:21.756 --> 00:06:24.116 A:middle
我们不仅支持查询常规余额

00:06:24.116 --> 00:06:26.456 A:middle
我们还另外添加了

00:06:26.456 --> 00:06:27.776 A:middle
其他几种余额类型

00:06:28.106 --> 00:06:29.976 A:middle
比如说 如果你的 App 支持

00:06:30.036 --> 00:06:32.356 A:middle
飞行里程累积 或者是

00:06:32.456 --> 00:06:32.866 A:middle
奖励值

00:06:33.476 --> 00:06:36.006 A:middle
Siri 同样也能识别

00:06:36.006 --> 00:06:36.296 A:middle
它们

00:06:36.826 --> 00:06:38.656 A:middle
我的飞行里程已经积累多少到我的

00:06:38.656 --> 00:06:39.456 A:middle
Sparkle 卡里了呢？

00:06:39.916 --> 00:06:41.706 A:middle
Siri 理解了 于是就把

00:06:41.706 --> 00:06:42.686 A:middle
里程数发送到你的 App

00:06:43.156 --> 00:06:45.056 A:middle
就这样 给用户提供了

00:06:45.056 --> 00:06:46.146 A:middle
所需要的信息

00:06:46.716 --> 00:06:51.976 A:middle
所以，INTransferMoneyIntent 可以

00:06:51.976 --> 00:06:54.896 A:middle
用来把钱从一个账户

00:06:55.316 --> 00:06:58.166 A:middle
转到另一账户

00:06:58.166 --> 00:07:00.606 A:middle
INSearchForAccountsIntent 可以

00:06:58.166 --> 00:07:00.606 A:middle
INSearchForAccountsIntent 可以

00:07:00.606 --> 00:07:03.566 A:middle
用来查看余额  可以列出

00:07:03.566 --> 00:07:05.566 A:middle
所有账户  或者查看任何

00:07:05.566 --> 00:07:07.226 A:middle
账户的具体信息

00:07:07.716 --> 00:07:09.496 A:middle
这就是我们今年关于付款的

00:07:09.496 --> 00:07:10.066 A:middle
全部内容

00:07:10.186 --> 00:07:15.906 A:middle
根据分析 我们发现

00:07:15.906 --> 00:07:18.386 A:middle
管理列表和备忘录是

00:07:18.386 --> 00:07:20.246 A:middle
非常受 Siri 用户欢迎的

00:07:20.246 --> 00:07:22.126 A:middle
实例之一

00:07:22.496 --> 00:07:24.796 A:middle
所以 今年我们准备

00:07:24.796 --> 00:07:27.266 A:middle
加大力度  来支持

00:07:27.526 --> 00:07:29.346 A:middle
列表和备忘录功能

00:07:29.406 --> 00:07:31.296 A:middle
我们已经添加了所有的 API 用来

00:07:31.296 --> 00:07:34.176 A:middle
确保用户能够创建

00:07:34.686 --> 00:07:37.396 A:middle
编辑和管理他们的列表

00:07:37.556 --> 00:07:39.356 A:middle
备忘录和提醒

00:07:40.396 --> 00:07:42.816 A:middle
不仅如此  用户还能在他们的

00:07:42.816 --> 00:07:44.556 A:middle
列表和备忘录中

00:07:44.556 --> 00:07:46.086 A:middle
进行搜索

00:07:46.456 --> 00:07:49.936 A:middle
我们来看一下

00:07:50.366 --> 00:07:52.266 A:middle
这是一个创建列表的

00:07:52.266 --> 00:07:52.676 A:middle
示例

00:07:53.216 --> 00:07:56.206 A:middle
我可以让 Siri 创建一个列表

00:07:56.586 --> 00:07:58.826 A:middle
首先要给它提供一个标题

00:07:58.826 --> 00:07:59.336 A:middle
和内容

00:07:59.726 --> 00:08:01.876 A:middle
Siri 的强大功能足以

00:07:59.726 --> 00:08:01.876 A:middle
Siri 的强大功能足以

00:08:01.876 --> 00:08:03.106 A:middle
把它们加以区分

00:08:03.446 --> 00:08:05.396 A:middle
并且理解清楚  再传递出

00:08:05.396 --> 00:08:06.986 A:middle
正确的信息  它填写好

00:08:06.986 --> 00:08:09.276 A:middle
Intent 再提供给你

00:08:09.276 --> 00:08:10.466 A:middle
用来创建视图

00:08:11.006 --> 00:08:15.606 A:middle
这是我最喜欢的

00:08:15.606 --> 00:08:17.546 A:middle
Intent 之一：标记任务已完成

00:08:17.596 --> 00:08:18.426 A:middle
是一种乐趣

00:08:19.326 --> 00:08:21.416 A:middle
SetTaskAttributeIntent 可以

00:08:21.416 --> 00:08:22.836 A:middle
这样使用

00:08:23.026 --> 00:08:25.256 A:middle
它有一个任务类型  包括

00:08:25.256 --> 00:08:27.176 A:middle
完成和未完成

00:08:27.176 --> 00:08:29.336 A:middle
它在 Siri 和

00:08:29.336 --> 00:08:31.646 A:middle
和 App 之间传递信息 从而

00:08:31.646 --> 00:08:34.015 A:middle
确保我们的行动

00:08:34.176 --> 00:08:34.726 A:middle
正确无误

00:08:35.296 --> 00:08:39.186 A:middle
我们添加了全新的 Intent（动机）来

00:08:39.186 --> 00:08:40.376 A:middle
支持提醒功能

00:08:41.046 --> 00:08:42.655 A:middle
我们可以用许多方式来创建

00:08:42.655 --> 00:08:42.926 A:middle
提醒事项

00:08:43.416 --> 00:08:45.396 A:middle
Siri 支持两种类型的

00:08:45.446 --> 00:08:48.556 A:middle
提醒事项：空间类型和时间类型

00:08:49.176 --> 00:08:50.956 A:middle
我们先来说说空间类型

00:08:50.956 --> 00:08:53.866 A:middle
这里有个例子：在 UnicornNote 里

00:08:53.866 --> 00:08:55.656 A:middle
提醒我在

00:08:55.656 --> 00:08:56.556 A:middle
下午 5 点收工

00:08:56.556 --> 00:08:59.176 A:middle
我现在再让 Siri 提醒我

00:08:59.176 --> 00:09:00.676 A:middle
一到办公室就打印幻灯片

00:08:59.176 --> 00:09:00.676 A:middle
一到办公室就打印幻灯片

00:09:00.676 --> 00:09:03.826 A:middle
我正在--我要

00:09:04.166 --> 00:09:05.676 A:middle
确保 Siri 能明白

00:09:05.676 --> 00:09:07.296 A:middle
这个词的地理定位

00:09:07.546 --> 00:09:09.056 A:middle
然后再把信息传递给你

00:09:09.056 --> 00:09:11.266 A:middle
这样你就能给这个地理定位

00:09:11.266 --> 00:09:13.526 A:middle
创建一个正确的提醒事项

00:09:14.076 --> 00:09:17.786 A:middle
下一个例子 提醒我

00:09:17.786 --> 00:09:21.456 A:middle
下午 5 点收工  这样是

00:09:21.456 --> 00:09:24.426 A:middle
为了确保日期触发器

00:09:24.426 --> 00:09:25.156 A:middle
能够创建成功

00:09:25.156 --> 00:09:27.566 A:middle
通过这两个例子

00:09:27.566 --> 00:09:29.596 A:middle
你会发现 Siri 很强大

00:09:29.596 --> 00:09:31.616 A:middle
它完全能理解我所说的

00:09:31.696 --> 00:09:33.496 A:middle
“下午5点收工”

00:09:33.806 --> 00:09:36.146 A:middle
然后就创建一份日期提醒事项

00:09:36.146 --> 00:09:38.056 A:middle
而不是创建一份

00:09:38.056 --> 00:09:38.806 A:middle
地点事项的提醒下班这件事

00:09:39.256 --> 00:09:42.076 A:middle
在前面那个例子里  Siri

00:09:42.076 --> 00:09:44.036 A:middle
创建了一个地点触发器

00:09:44.036 --> 00:09:45.626 A:middle
因为我说了“一到办公室”

00:09:46.226 --> 00:09:48.336 A:middle
Siri 十分擅长对你使用的这些语句

00:09:48.336 --> 00:09:50.236 A:middle
进行语法分析

00:09:50.236 --> 00:09:52.286 A:middle
Siri 能够理解它们  并用来创建

00:09:52.286 --> 00:09:54.646 A:middle
正确的 Intent 然后再传送

00:09:55.176 --> 00:09:55.256 A:middle
给你

00:09:57.356 --> 00:10:00.856 A:middle
因此  CreateTaskIntent 可以用来

00:09:57.356 --> 00:10:00.856 A:middle
因此  CreateTaskIntent 可以用来

00:10:01.236 --> 00:10:03.266 A:middle
创建任务和列表

00:10:04.706 --> 00:10:07.406 A:middle
AddTasksIntent 可以创建提醒事项

00:10:07.676 --> 00:10:09.476 A:middle
并在已有的提醒事项中添加

00:10:09.476 --> 00:10:09.776 A:middle
新任务

00:10:11.606 --> 00:10:14.516 A:middle
SetTaskAttributeIntent 是用来创建

00:10:14.516 --> 00:10:17.646 A:middle
任务 或标明任务已完成

00:10:17.646 --> 00:10:18.976 A:middle
或是把它更新到提醒事项里

00:10:22.716 --> 00:10:24.016 A:middle
我们现在来说说备忘录

00:10:25.006 --> 00:10:26.496 A:middle
备忘录的创建可以有许多

00:10:26.496 --> 00:10:26.876 A:middle
方式

00:10:27.266 --> 00:10:29.186 A:middle
我可以通过标题来创建

00:10:29.526 --> 00:10:31.816 A:middle
也可以通过内容  甚至是在

00:10:31.816 --> 00:10:32.366 A:middle
文件夹里创建

00:10:32.776 --> 00:10:34.376 A:middle
Siri 支持所有这些

00:10:34.376 --> 00:10:34.926 A:middle
选项

00:10:35.326 --> 00:10:37.166 A:middle
所以当我让 Siri 创建一份

00:10:37.166 --> 00:10:39.976 A:middle
备忘录时 只给了特定标题

00:10:39.976 --> 00:10:41.216 A:middle
它就只创建一个空白备忘录

00:10:42.056 --> 00:10:45.846 A:middle
我可以让 Siri 在特定的

00:10:45.846 --> 00:10:47.656 A:middle
文件夹下面 根据内容

00:10:47.796 --> 00:10:49.256 A:middle
创建一个备忘录

00:10:49.936 --> 00:10:52.076 A:middle
Siri 对用户的整体意图进行

00:10:52.076 --> 00:10:54.896 A:middle
语法分析  然后把

00:10:54.926 --> 00:10:57.106 A:middle
贴切的标题、群组名

00:10:57.186 --> 00:10:59.296 A:middle
和内容映射到 Intent

00:10:59.336 --> 00:11:01.116 A:middle
然后再把它传送给你

00:10:59.336 --> 00:11:01.116 A:middle
然后再把它传送给你

00:11:01.116 --> 00:11:02.926 A:middle
以便创建合适的备忘录

00:11:06.296 --> 00:11:07.816 A:middle
至于在现有的备忘录里进行添加

00:11:08.376 --> 00:11:10.036 A:middle
Siri 也同样可以做到

00:11:11.226 --> 00:11:13.566 A:middle
看这里  Siri 将目标备忘录

00:11:13.566 --> 00:11:14.696 A:middle
理解为 WWDC

00:11:14.696 --> 00:11:17.666 A:middle
然后就是实际内容

00:11:17.946 --> 00:11:19.746 A:middle
接着再把信息传送给你

00:11:20.006 --> 00:11:23.246 A:middle
让你创建备忘录

00:11:23.976 --> 00:11:24.916 A:middle
我们再来看看

00:11:24.916 --> 00:11:25.436 A:middle
各种 Intent

00:11:26.196 --> 00:11:28.516 A:middle
CreateNoteIntent 是用来创建

00:11:28.516 --> 00:11:28.996 A:middle
全新的备忘录

00:11:30.376 --> 00:11:33.056 A:middle
AppendToNoteIntent 是往已经存在的

00:11:33.056 --> 00:11:33.916 A:middle
备忘录里添加内容

00:11:34.626 --> 00:11:38.486 A:middle
在列表和备忘录里，另一个重要的

00:11:38.486 --> 00:11:40.346 A:middle
Intent 就是 Search

00:11:41.666 --> 00:11:43.646 A:middle
如果有人让你展示一下

00:11:43.646 --> 00:11:46.086 A:middle
所有的信息  Siri

00:11:46.086 --> 00:11:48.376 A:middle
会理解指令  然后将这个

00:11:48.376 --> 00:11:49.996 A:middle
Intent 发送到你的 App

00:11:50.096 --> 00:11:52.676 A:middle
Siri 还把所有经过 App 传送给我们的

00:11:52.676 --> 00:11:55.156 A:middle
备忘录 列表和提醒事项

00:11:55.156 --> 00:11:56.326 A:middle
列出清单

00:11:57.466 --> 00:11:59.486 A:middle
我们的显示效果 就像你要求我们

00:11:59.486 --> 00:12:00.106 A:middle
做出来的一样

00:11:59.486 --> 00:12:00.106 A:middle
做出来的一样

00:12:00.356 --> 00:12:02.816 A:middle
或者  你还可以选择说

00:12:02.886 --> 00:12:04.746 A:middle
把它按照日期分类

00:12:04.746 --> 00:12:06.866 A:middle
这样 Siri 就会照办

00:12:06.866 --> 00:12:08.796 A:middle
把所有项目按日期分类

00:12:09.126 --> 00:12:10.836 A:middle
然后再展示给用户

00:12:10.946 --> 00:12:14.026 A:middle
用户不仅可以展示所有项目

00:12:14.316 --> 00:12:17.106 A:middle
还可以只用某个具体类型

00:12:17.106 --> 00:12:21.106 A:middle
进行查询  比如只展示

00:12:21.146 --> 00:12:23.536 A:middle
备忘录 或者只展示列表

00:12:24.026 --> 00:12:26.066 A:middle
或者是展示我昨天创建的

00:12:26.066 --> 00:12:26.616 A:middle
备忘录

00:12:27.406 --> 00:12:29.456 A:middle
甚至只展示我已经完成的任务

00:12:30.076 --> 00:12:32.836 A:middle
我们使用这种 Intent

00:12:32.836 --> 00:12:33.866 A:middle
可以支持很多类型

00:12:34.456 --> 00:12:37.016 A:middle
这个 Intent 本身叫做

00:12:37.136 --> 00:12:39.566 A:middle
SearchForNotebookItemIntent

00:12:40.646 --> 00:12:42.926 A:middle
它支持所有这些类型

00:12:43.756 --> 00:12:46.386 A:middle
因此用户可以看一看 如果使用

00:12:46.386 --> 00:12:47.646 A:middle
其中的一种  Siri 会不会

00:12:47.646 --> 00:12:49.926 A:middle
完全理解，然后

00:12:49.986 --> 00:12:51.126 A:middle
完成任务

00:12:51.646 --> 00:12:55.026 A:middle
以上就是我们所有关于

00:12:55.026 --> 00:12:58.806 A:middle
备忘录和列表的新 API

00:12:59.296 --> 00:13:02.046 A:middle
现在的各种可视码  比如二维码

00:12:59.296 --> 00:13:02.046 A:middle
现在的各种可视码  比如二维码

00:13:02.046 --> 00:13:04.326 A:middle
条形码  近来已经

00:13:04.326 --> 00:13:04.906 A:middle
非常流行

00:13:05.376 --> 00:13:07.466 A:middle
目前它们在 App 里有各种

00:13:07.466 --> 00:13:09.066 A:middle
使用方法

00:13:09.166 --> 00:13:12.906 A:middle
比如说  它们可以用来打开网页

00:13:12.906 --> 00:13:14.866 A:middle
而不再需要输入一堆

00:13:14.966 --> 00:13:17.266 A:middle
无聊的网址  特别是当这些网址使用的

00:13:17.266 --> 00:13:18.466 A:middle
还是外语的时候

00:13:19.296 --> 00:13:21.076 A:middle
展示一下二维码  就可以打开

00:13:21.076 --> 00:13:21.726 A:middle
一个网页

00:13:22.396 --> 00:13:24.846 A:middle
或者用它们付款

00:13:24.846 --> 00:13:26.836 A:middle
或者发起收款 只要出示

00:13:26.836 --> 00:13:27.246 A:middle
代码就可以了

00:13:27.866 --> 00:13:29.456 A:middle
在加油站付费或者

00:13:29.456 --> 00:13:30.406 A:middle
给朋友转账都可以

00:13:30.836 --> 00:13:32.986 A:middle
现在各种 App 都使用条形码

00:13:32.986 --> 00:13:34.146 A:middle
来执行具体任务

00:13:34.936 --> 00:13:38.116 A:middle
我们不仅考虑到条形码或

00:13:38.116 --> 00:13:38.576 A:middle
二维码

00:13:38.946 --> 00:13:40.646 A:middle
我们在用于联络交往的 App 里还使用

00:13:40.706 --> 00:13:43.566 A:middle
作为联系方式的代码

00:13:43.566 --> 00:13:45.676 A:middle
把它们和联系方式相关联  这样就不用

00:13:45.676 --> 00:13:47.946 A:middle
翻看查找某个人  然后

00:13:47.946 --> 00:13:48.576 A:middle
再联系了

00:13:48.866 --> 00:13:50.746 A:middle
只要出示联系码

00:13:51.306 --> 00:13:52.976 A:middle
我们能够轻松获得联系

00:13:53.576 --> 00:13:56.466 A:middle
从 iOS11 开始  Siri 就可以

00:13:56.466 --> 00:13:58.356 A:middle
支持各种可视码了

00:13:59.186 --> 00:14:01.166 A:middle
用户现在只要说一声

00:13:59.186 --> 00:14:01.166 A:middle
用户现在只要说一声

00:14:01.656 --> 00:14:03.726 A:middle
“出示我的 UnicornChat 码”就可以

00:14:03.996 --> 00:14:06.266 A:middle
也就是说  Siri 能理解

00:14:06.266 --> 00:14:07.416 A:middle
这是一种可视码 Intent

00:14:07.416 --> 00:14:09.106 A:middle
它随后就把信息

00:14:09.106 --> 00:14:11.036 A:middle
发送给你的 App

00:14:11.326 --> 00:14:12.746 A:middle
只要是用代码能办到的  因为我们

00:14:12.746 --> 00:14:14.006 A:middle
支持不同类型的

00:14:14.116 --> 00:14:16.516 A:middle
代码  这要看 App 能为我们

00:14:16.576 --> 00:14:18.246 A:middle
提供什么了  我们都会给客户

00:14:18.246 --> 00:14:18.756 A:middle
回馈分享

00:14:18.866 --> 00:14:21.986 A:middle
可以用来实现这个功能的

00:14:22.056 --> 00:14:23.696 A:middle
Intent 就是

00:14:24.076 --> 00:14:26.226 A:middle
INGetVisualCodeIntent

00:14:26.916 --> 00:14:28.936 A:middle
它有一种属性类型

00:14:29.296 --> 00:14:31.926 A:middle
即 visualCodeType  这个类型可以支持的是

00:14:32.186 --> 00:14:34.076 A:middle
它可以是一个联系人

00:14:34.076 --> 00:14:36.586 A:middle
或付款请求  或者是转账付款

00:14:37.516 --> 00:14:39.846 A:middle
通过注册这个 Intent

00:14:40.146 --> 00:14:42.746 A:middle
用户就能够让 Siri

00:14:42.746 --> 00:14:44.346 A:middle
在自己喜欢的 App 里显示这些类型里

00:14:44.346 --> 00:14:46.246 A:middle
的任何一种

00:14:47.756 --> 00:14:47.856 A:middle
可视码

00:14:48.266 --> 00:14:49.826 A:middle
现在  有请我的同事

00:14:49.826 --> 00:14:52.886 A:middle
兼好友 Tin 上台  让他给大家实际展示

00:14:52.886 --> 00:14:53.486 A:middle
这个操作过程

00:14:55.516 --> 00:14:58.936 A:middle
[掌声]

00:14:59.436 --> 00:15:00.286 A:middle
&gt;&gt; 谢谢你 Sirisha

00:14:59.436 --> 00:15:00.286 A:middle
&gt;&gt; 谢谢你 Sirisha

00:15:01.186 --> 00:15:01.776 A:middle
大家好

00:15:01.906 --> 00:15:02.686 A:middle
我的名字是 Tin

00:15:02.686 --> 00:15:04.106 A:middle
我是 Siri 客户团队的

00:15:04.106 --> 00:15:04.736 A:middle
工程师

00:15:05.556 --> 00:15:07.546 A:middle
在去年的 WWDC  我们

00:15:07.946 --> 00:15:09.076 A:middle
向大家介绍了一款 App

00:15:09.226 --> 00:15:10.076 A:middle
它名叫 UnicornChat

00:15:10.156 --> 00:15:10.906 A:middle
它非常棒

00:15:11.296 --> 00:15:13.196 A:middle
现在就让我们的 Unicorn 好友 比如

00:15:13.196 --> 00:15:15.036 A:middle
今天在场的 Celestra  用它发送信息给

00:15:15.036 --> 00:15:15.976 A:middle
Sparkle Sparkly

00:15:16.436 --> 00:15:17.046 A:middle
确实非常棒

00:15:17.626 --> 00:15:18.796 A:middle
今年我们想增加

00:15:18.796 --> 00:15:20.436 A:middle
全新的可视码 Intent

00:15:20.436 --> 00:15:21.446 A:middle
来支持这款 App

00:15:21.496 --> 00:15:22.846 A:middle
它极其简单

00:15:23.516 --> 00:15:24.906 A:middle
所以我们要做的第一件事是

00:15:25.086 --> 00:15:25.926 A:middle
确保能够

00:15:25.926 --> 00:15:27.806 A:middle
修改我们的 info.plist.

00:15:28.956 --> 00:15:30.816 A:middle
如果你的 App 还没有安装

00:15:30.816 --> 00:15:32.996 A:middle
SiriKit  那么你要做的就是

00:15:32.996 --> 00:15:34.106 A:middle
在 App 里创建一个

00:15:34.106 --> 00:15:35.946 A:middle
IntentsExtensionTarget 到

00:15:35.946 --> 00:15:37.366 A:middle
在你的项目里 然后就会生成

00:15:37.366 --> 00:15:39.266 A:middle
可编辑的 info.plist

00:15:39.976 --> 00:15:42.016 A:middle
只要有了 info.plist  你就能继续

00:15:42.016 --> 00:15:43.516 A:middle
在 Intent 支持键下面

00:15:43.516 --> 00:15:45.926 A:middle
添加新的 visualCodeIntent

00:15:47.716 --> 00:15:49.926 A:middle
下一个需要

00:15:49.926 --> 00:15:51.366 A:middle
重点注意的  是你的

00:15:51.366 --> 00:15:51.896 A:middle
主要类

00:15:52.396 --> 00:15:53.896 A:middle
主要类指的是

00:15:54.096 --> 00:15:55.666 A:middle
Siri 将调用你的 App

00:15:55.666 --> 00:15:57.136 A:middle
并让你动手处理你的

00:15:57.136 --> 00:15:57.556 A:middle
Intent

00:15:57.846 --> 00:15:58.726 A:middle
我们就从这里开始

00:15:58.726 --> 00:16:00.456 A:middle
修改我们的应用

00:15:58.726 --> 00:16:00.456 A:middle
修改我们的应用

00:16:01.716 --> 00:16:04.706 A:middle
我还会修改

00:16:04.856 --> 00:16:07.086 A:middle
Intent Extension 方案

00:16:07.126 --> 00:16:08.976 A:middle
并填完这份 Siri Intent 的

00:16:08.976 --> 00:16:09.376 A:middle
现场查询

00:16:09.506 --> 00:16:11.386 A:middle
我可以预先用文本填写

00:16:11.546 --> 00:16:13.126 A:middle
以便展示我的 UnicornChat 码

00:16:13.686 --> 00:16:15.316 A:middle
这样一来 我每次

00:16:15.316 --> 00:16:16.896 A:middle
创建和运行时  Siri 都会

00:16:16.896 --> 00:16:18.086 A:middle
预先填写这份文本

00:16:18.086 --> 00:16:19.076 A:middle
我不用每一次都向它

00:16:19.076 --> 00:16:19.926 A:middle
下达口令

00:16:20.016 --> 00:16:21.356 A:middle
这样就能加快调试和

00:16:21.356 --> 00:16:22.786 A:middle
开发的速度

00:16:23.696 --> 00:16:24.326 A:middle
我们现在一起来编码

00:16:24.946 --> 00:16:25.346 A:middle
谢谢

00:16:26.081 --> 00:16:28.081 A:middle
[ 掌声 ]

00:16:28.146 --> 00:16:30.976 A:middle
我们来看一下演示内容

00:16:36.786 --> 00:16:39.026 A:middle
大家看  我现在展示的主要类

00:16:39.026 --> 00:16:40.616 A:middle
属于我在 UnicornChat 里使用的

00:16:40.676 --> 00:16:41.596 A:middle
Intent 扩展

00:16:41.656 --> 00:16:42.926 A:middle
我们已经在调用

00:16:42.926 --> 00:16:43.886 A:middle
SendMessageIntent

00:16:44.336 --> 00:16:45.736 A:middle
那么我们现在继续处理

00:16:45.736 --> 00:16:47.246 A:middle
这个 VisualCodeIntent

00:16:51.176 --> 00:16:52.886 A:middle
非常简单

00:16:53.576 --> 00:16:55.136 A:middle
如果你正在你的应用里

00:16:55.136 --> 00:16:56.696 A:middle
处理多个 Intent

00:16:57.066 --> 00:16:58.426 A:middle
那么  把它们分割成

00:16:58.426 --> 00:17:00.076 A:middle
多个类别  是个好主意

00:16:58.426 --> 00:17:00.076 A:middle
多个类别  是个好主意

00:17:00.646 --> 00:17:01.986 A:middle
这样可以区分你的逻辑

00:17:01.986 --> 00:17:03.526 A:middle
可以更方便地进行测试和

00:17:03.526 --> 00:17:03.916 A:middle
调试

00:17:03.916 --> 00:17:05.886 A:middle
好  我们现在进入

00:17:05.886 --> 00:17:07.496 A:middle
VisualCodeIntentHandler 类

00:17:13.306 --> 00:17:14.866 A:middle
提醒一下 你需要做好

00:17:15.195 --> 00:17:16.215 A:middle
三件事

00:17:16.215 --> 00:17:18.705 A:middle
来处理一项 SiriKit 的 Intent

00:17:19.435 --> 00:17:20.665 A:middle
首先要做的是

00:17:20.665 --> 00:17:21.955 A:middle
解析你的 Intent

00:17:22.486 --> 00:17:23.425 A:middle
通过解析 你可以

00:17:23.425 --> 00:17:25.886 A:middle
有机会自定义 Siri 的

00:17:25.886 --> 00:17:27.076 A:middle
属性  以及它处理

00:17:27.116 --> 00:17:28.246 A:middle
Intent 属性的方式

00:17:29.256 --> 00:17:30.896 A:middle
第二件事  是确认

00:17:31.546 --> 00:17:33.276 A:middle
确认过后 你就有办法

00:17:33.276 --> 00:17:35.616 A:middle
向 Siri 发出准备信号  就是说

00:17:35.616 --> 00:17:36.356 A:middle
你已经准备要处理

00:17:36.356 --> 00:17:37.566 A:middle
这个 Intent 同时进行

00:17:37.566 --> 00:17:38.246 A:middle
验证

00:17:39.226 --> 00:17:40.656 A:middle
最后 你可以继续操作

00:17:40.656 --> 00:17:41.636 A:middle
并处理你的 Intent

00:17:42.086 --> 00:17:44.016 A:middle
至于这个 VisualCodeIntent  我们将

00:17:44.016 --> 00:17:45.566 A:middle
返回一张图片 并让 Siri

00:17:45.566 --> 00:17:46.376 A:middle
把它展示出来

00:17:47.126 --> 00:17:48.186 A:middle
那么我们就来

00:17:48.186 --> 00:17:48.556 A:middle
试一下吧

00:17:52.396 --> 00:17:55.346 A:middle
我要让这个 Intent 的类符合

00:17:55.346 --> 00:17:56.906 A:middle
INGetVisualCodeIntent 的

00:17:56.906 --> 00:17:57.706 A:middle
处理协议

00:17:58.006 --> 00:18:00.266 A:middle
现在  编译器提示我

00:17:58.006 --> 00:18:00.266 A:middle
现在  编译器提示我

00:18:00.266 --> 00:18:01.846 A:middle
需要执行某些

00:18:01.846 --> 00:18:02.306 A:middle
规定方法

00:18:02.946 --> 00:18:05.226 A:middle
继续  这样操作

00:18:07.396 --> 00:18:09.326 A:middle
那么作为要求的唯一规定方法就是

00:18:09.326 --> 00:18:10.166 A:middle
Handle 方法

00:18:10.166 --> 00:18:12.146 A:middle
但是我们强烈建议大家

00:18:12.146 --> 00:18:13.596 A:middle
完整执行解析和

00:18:13.596 --> 00:18:14.156 A:middle
确认这两个步骤

00:18:14.156 --> 00:18:15.426 A:middle
这样可以让你

00:18:15.426 --> 00:18:17.116 A:middle
最大限度地控制和自定义

00:18:17.216 --> 00:18:18.846 A:middle
你在 Siri 里的

00:18:18.846 --> 00:18:19.266 A:middle
用户行为

00:18:23.146 --> 00:18:23.986 A:middle
我现在暂时

00:18:23.986 --> 00:18:24.546 A:middle
跳过这个环节

00:18:24.546 --> 00:18:26.236 A:middle
让我们首先来执行解析

00:18:26.236 --> 00:18:26.676 A:middle
这个步骤

00:18:30.616 --> 00:18:32.806 A:middle
再说一遍 解析是让你能够

00:18:32.806 --> 00:18:34.656 A:middle
自定义你的行为 让它对应

00:18:34.656 --> 00:18:36.196 A:middle
这个 Intent 在 Siri 里的属性

00:18:36.646 --> 00:18:38.076 A:middle
关于 VisualCodeIntent

00:18:38.186 --> 00:18:39.576 A:middle
它只有一个属性

00:18:39.656 --> 00:18:40.886 A:middle
那就是 VisualCodeType

00:18:41.556 --> 00:18:42.866 A:middle
Sirisha 刚才提到过  它可以

00:18:42.866 --> 00:18:44.946 A:middle
是联系码  收款码

00:18:44.946 --> 00:18:47.446 A:middle
或者是付款码

00:18:48.266 --> 00:18:49.586 A:middle
现在来执行一下我们的

00:18:49.586 --> 00:18:51.000 A:middle
自定义逻辑

00:19:01.826 --> 00:19:03.706 A:middle
这时候  如果用户需要一个

00:19:03.746 --> 00:19:05.486 A:middle
联系码  我们就会告诉 Siri

00:19:05.486 --> 00:19:06.346 A:middle
我们准备把它有效处理为一个

00:19:06.346 --> 00:19:08.176 A:middle
联系码的

00:19:08.176 --> 00:19:08.466 A:middle
类型

00:19:09.416 --> 00:19:10.856 A:middle
如果用户没有明确表示

00:19:10.856 --> 00:19:12.366 A:middle
他们想要哪种类型的代码

00:19:12.906 --> 00:19:14.906 A:middle
比如  他们用 UnicornChat 说的只是

00:19:14.906 --> 00:19:16.826 A:middle
“展示我的代码”  Siri 就会

00:19:16.826 --> 00:19:19.196 A:middle
把这种类型填充为“未知”

00:19:19.566 --> 00:19:20.856 A:middle
我们这时可以对这种行为进行

00:19:20.856 --> 00:19:22.796 A:middle
自定义  并且告诉 Siri

00:19:22.796 --> 00:19:24.206 A:middle
我们要把它处理为

00:19:24.206 --> 00:19:24.656 A:middle
联系码类型

00:19:25.936 --> 00:19:27.556 A:middle
我们不准备在这个演示版 App 里支持

00:19:27.556 --> 00:19:29.246 A:middle
付款和收款

00:19:29.696 --> 00:19:30.816 A:middle
所以我们就要告诉 Siri

00:19:30.816 --> 00:19:31.596 A:middle
不支持这种操作

00:19:31.856 --> 00:19:33.816 A:middle
这样做以后 如果用户

00:19:33.816 --> 00:19:35.556 A:middle
请求付款码  Siri

00:19:35.556 --> 00:19:36.866 A:middle
就会非常机智地使用它

00:19:36.866 --> 00:19:38.586 A:middle
支持的所有语言

00:19:38.706 --> 00:19:39.566 A:middle
跟用户会话

00:19:39.856 --> 00:19:41.006 A:middle
我们一行代码都不用

00:19:41.006 --> 00:19:41.326 A:middle
写出来

00:19:41.326 --> 00:19:42.996 A:middle
这就是 SiriKit 的强大之处

00:19:45.016 --> 00:19:46.206 A:middle
现在我们已经解析了

00:19:46.206 --> 00:19:46.706 A:middle
各种属性

00:19:47.266 --> 00:19:49.166 A:middle
接下来 就是进行确认

00:19:54.036 --> 00:19:56.036 A:middle
再次声明 确认就是

00:19:56.036 --> 00:19:57.586 A:middle
我们给 Siri 发出准备完毕的信号

00:19:57.726 --> 00:19:59.066 A:middle
使用这个环节可以很好地

00:19:59.066 --> 00:19:59.736 A:middle
进行验证

00:20:00.816 --> 00:20:02.436 A:middle
接下来  我们首先要确认

00:20:02.636 --> 00:20:04.896 A:middle
我们这位 Unicorn 用户已经拥有一个

00:20:04.896 --> 00:20:06.246 A:middle
有效而活跃的账号 然后我们再展示

00:20:06.246 --> 00:20:07.186 A:middle
这个联系码

00:20:07.806 --> 00:20:09.376 A:middle
如果他们有这样的账号  我们就会继续

00:20:09.376 --> 00:20:11.606 A:middle
把“准备完毕”的反馈码回复

00:20:11.606 --> 00:20:12.006 A:middle
给 Siri

00:20:12.006 --> 00:20:14.466 A:middle
但是用户如果没有一个有效帐号

00:20:14.466 --> 00:20:15.636 A:middle
情况又会怎样？

00:20:16.316 --> 00:20:17.846 A:middle
好，只要启动我们的 App

00:20:17.846 --> 00:20:19.596 A:middle
就行  这样或许就能

00:20:19.636 --> 00:20:20.896 A:middle
让他们进行登录 或者是

00:20:20.896 --> 00:20:21.936 A:middle
重新激活自己的账号

00:20:21.936 --> 00:20:23.526 A:middle
我们可以通过

00:20:23.526 --> 00:20:24.706 A:middle
自定义用户操作来实现这一点

00:20:29.106 --> 00:20:30.326 A:middle
所以我们要用一个自定义用户信息词典

00:20:30.326 --> 00:20:31.876 A:middle
来创建一项自定义用户的操作行为

00:20:31.876 --> 00:20:33.166 A:middle
我们的失误 将会在其中

00:20:33.166 --> 00:20:33.806 A:middle
标注清楚

00:20:33.806 --> 00:20:35.356 A:middle
我们现在换个题目来谈谈 Siri 的

00:20:35.576 --> 00:20:37.346 A:middle
failureRequiringAppLaunch  并且

00:20:37.346 --> 00:20:38.386 A:middle
把用户的操作传递出去

00:20:39.046 --> 00:20:41.666 A:middle
好 如果用户请求代码

00:20:41.666 --> 00:20:42.936 A:middle
但他们既没有注册  也

00:20:42.936 --> 00:20:45.086 A:middle
没有激活账号 Siri

00:20:45.086 --> 00:20:47.036 A:middle
会显示错误  并给用户

00:20:47.036 --> 00:20:48.546 A:middle
一次机会  来启动

00:20:48.546 --> 00:20:49.196 A:middle
App

00:20:49.196 --> 00:20:50.986 A:middle
如果他们启动了这个 App

00:20:51.366 --> 00:20:53.036 A:middle
用户操作就会被传输给

00:20:53.036 --> 00:20:53.346 A:middle
App

00:20:53.386 --> 00:20:54.726 A:middle
然后你就可以提取

00:20:54.726 --> 00:20:56.286 A:middle
这个信息  并要求他们

00:20:56.286 --> 00:20:56.496 A:middle
注册

00:20:56.746 --> 00:20:57.896 A:middle
以确保他们可以连接到

00:20:57.896 --> 00:20:59.006 A:middle
自己的 Unicorn 好友

00:20:59.686 --> 00:21:02.926 A:middle
这样我们就完成了确认环节

00:20:59.686 --> 00:21:02.926 A:middle
这样我们就完成了确认环节

00:21:03.336 --> 00:21:10.226 A:middle
接下来 让我们来处理这一项

00:21:10.426 --> 00:21:12.236 A:middle
Handle 非常简单明确

00:21:12.406 --> 00:21:13.246 A:middle
我们只要在响应时

00:21:13.246 --> 00:21:15.246 A:middle
把完成代码返回给 Siri

00:21:15.246 --> 00:21:15.926 A:middle
就可以了

00:21:15.926 --> 00:21:17.146 A:middle
我们将把这次响应中的

00:21:17.216 --> 00:21:18.776 A:middle
可视码映像的属性

00:21:19.026 --> 00:21:20.626 A:middle
设定为我们的联系码映像

00:21:21.486 --> 00:21:22.526 A:middle
这看起来很不错

00:21:23.166 --> 00:21:24.966 A:middle
现在我们先创建 再运行一下试试

00:21:35.366 --> 00:21:36.866 A:middle
它已经预先填充了我的请求

00:21:39.596 --> 00:21:40.396 A:middle
这样就完成了

00:21:40.666 --> 00:21:41.886 A:middle
一个全新的可视化代码

00:21:42.016 --> 00:21:43.426 A:middle
看起来很棒

00:21:44.516 --> 00:21:46.676 A:middle
[ 掌声 ]

00:21:47.176 --> 00:21:48.336 A:middle
那么我们现在切换回

00:21:48.336 --> 00:21:50.626 A:middle
幻灯片 再简要复述一下

00:22:06.046 --> 00:22:07.476 A:middle
为了支持这些 Intent  你只要

00:22:07.476 --> 00:22:08.886 A:middle
记住修改一下

00:22:08.886 --> 00:22:10.356 A:middle
你的 info.plist 文件

00:22:10.746 --> 00:22:12.226 A:middle
但是  如果你没有

00:22:12.226 --> 00:22:13.696 A:middle
info.plist 文件  你只需要

00:22:13.696 --> 00:22:15.256 A:middle
在 App 里创建一个新的

00:22:15.256 --> 00:22:16.616 A:middle
Intent Extension（意图扩展）目标设定为

00:22:16.616 --> 00:22:17.136 A:middle
你的 App 之后就能对它进行编辑

00:22:17.826 --> 00:22:19.876 A:middle
接下来 一定要修改

00:22:19.876 --> 00:22:21.606 A:middle
你的主要类  接着再处理

00:22:21.606 --> 00:22:22.046 A:middle
这个 Intent

00:22:22.866 --> 00:22:25.686 A:middle
最后对你的 Intent 进行

00:22:25.686 --> 00:22:26.456 A:middle
解析  确认和处理

00:22:27.016 --> 00:22:27.726 A:middle
超级简单

00:22:27.726 --> 00:22:29.126 A:middle
好了

00:22:30.046 --> 00:22:32.346 A:middle
现在 我稍微转换一下话题

00:22:32.346 --> 00:22:33.426 A:middle
我们来聊一聊

00:22:33.816 --> 00:22:35.986 A:middle
怎样在 Siri 里自定义你的 UI

00:22:37.386 --> 00:22:39.896 A:middle
提醒一下 Siri 里有两种类型的

00:22:39.896 --> 00:22:40.916 A:middle
Extension

00:22:41.626 --> 00:22:43.096 A:middle
第一种类型是 Intent Extension

00:22:43.096 --> 00:22:44.636 A:middle
就是你们刚才看到的那个

00:22:44.946 --> 00:22:46.026 A:middle
它是你在解析

00:22:46.266 --> 00:22:47.926 A:middle
确认和处理时使用 用来处理你的

00:22:47.926 --> 00:22:48.576 A:middle
事务逻辑

00:22:49.326 --> 00:22:50.186 A:middle
这是必需的

00:22:50.926 --> 00:22:52.826 A:middle
第二种类型是 Intent UI

00:22:52.826 --> 00:22:54.506 A:middle
extension  你可以用它

00:22:54.506 --> 00:22:55.506 A:middle
配制你的视图

00:22:55.666 --> 00:22:56.656 A:middle
我们接下来要讨论的

00:22:56.656 --> 00:23:00.646 A:middle
就是这个

00:22:56.656 --> 00:23:00.646 A:middle
就是这个

00:23:00.816 --> 00:23:02.606 A:middle
那么  在 iOS10 里  你可以

00:23:02.606 --> 00:23:04.046 A:middle
自定义一部分视图

00:23:04.516 --> 00:23:06.116 A:middle
这是一个 RequestWriteIntent

00:23:07.446 --> 00:23:09.786 A:middle
你可以自定义

00:23:09.836 --> 00:23:11.196 A:middle
视图的部分内容 比如说

00:23:11.236 --> 00:23:12.966 A:middle
把这个地图换成你的

00:23:12.966 --> 00:23:13.756 A:middle
自定义视图

00:23:13.896 --> 00:23:15.476 A:middle
我们真的喜欢 Unicorn 的这些特点

00:23:16.956 --> 00:23:18.456 A:middle
这个很棒

00:23:18.856 --> 00:23:20.196 A:middle
它能够让你添加显示更多的

00:23:20.196 --> 00:23:22.746 A:middle
信息  根据你的个人风格

00:23:23.026 --> 00:23:24.846 A:middle
但我们还注意到  有时也存在

00:23:24.846 --> 00:23:25.446 A:middle
一些情况

00:23:25.706 --> 00:23:26.996 A:middle
比如信息重复问题

00:23:27.236 --> 00:23:29.096 A:middle
就像这里的乘车地点  和下车

00:23:29.096 --> 00:23:30.606 A:middle
地点  它们就重复了

00:23:31.236 --> 00:23:32.156 A:middle
车费也是同样的情况

00:23:32.686 --> 00:23:34.086 A:middle
这是因为你先前没有

00:23:34.086 --> 00:23:36.016 A:middle
完全掌握 Siri 里所有的

00:23:36.016 --> 00:23:37.046 A:middle
视图元素

00:23:37.946 --> 00:23:39.476 A:middle
不过在今年的iOS 11里  我们

00:23:39.566 --> 00:23:40.716 A:middle
将会让你实现

00:23:40.716 --> 00:23:41.216 A:middle
完全掌控

00:23:41.346 --> 00:23:42.986 A:middle
为了做到这一点  我准备

00:23:42.986 --> 00:23:43.846 A:middle
向大家稍微解释一下

00:23:43.846 --> 00:23:45.956 A:middle
Siri 是怎样绘制

00:23:45.956 --> 00:23:46.396 A:middle
视图的

00:23:46.916 --> 00:23:50.966 A:middle
Siri 视图的呈现方式

00:23:50.966 --> 00:23:53.116 A:middle
是以 UI 元素的栈结构系列来完成

00:23:53.676 --> 00:23:55.736 A:middle
系列里的每一个元素都由

00:23:55.996 --> 00:23:57.116 A:middle
命名为参数的数据来提供支持

00:23:57.356 --> 00:23:58.986 A:middle
举个例子  支持这份地图的

00:23:58.986 --> 00:24:00.646 A:middle
是一个乘车地点参数

00:23:58.986 --> 00:24:00.646 A:middle
是一个乘车地点参数

00:24:00.646 --> 00:24:02.486 A:middle
其他的视图

00:24:02.576 --> 00:24:03.596 A:middle
也与此类似

00:24:04.136 --> 00:24:05.886 A:middle
乘车方式选项名称  下车

00:24:05.886 --> 00:24:07.516 A:middle
地点等等

00:24:08.916 --> 00:24:10.126 A:middle
再举一个例子

00:24:11.906 --> 00:24:13.916 A:middle
现在 Sparkle Sparkly 正准备

00:24:13.916 --> 00:24:15.226 A:middle
开着一款很气派的 Unicorn 汽车

00:24:15.226 --> 00:24:15.756 A:middle
来接我们

00:24:15.846 --> 00:24:17.986 A:middle
那么代表他的  代表这个视图的

00:24:17.986 --> 00:24:19.096 A:middle
就是这样的两个

00:24:19.096 --> 00:24:21.056 A:middle
参数  一个是搭载司机的参数

00:24:21.056 --> 00:24:22.066 A:middle
一个是搭载车辆的参数

00:24:22.606 --> 00:24:24.526 A:middle
所以 有些视图可以通过

00:24:24.526 --> 00:24:26.026 A:middle
多个参数或多组参数

00:24:26.026 --> 00:24:26.696 A:middle
来代表

00:24:27.256 --> 00:24:32.506 A:middle
我们在 iOS11 里 把它作为一个新的

00:24:32.506 --> 00:24:34.326 A:middle
分类来公布  并称为 INParameter

00:24:34.656 --> 00:24:36.326 A:middle
这个分类代表了

00:24:36.326 --> 00:24:36.846 A:middle
这种数据

00:24:37.906 --> 00:24:39.426 A:middle
那么 这里是乘车地点的

00:24:39.516 --> 00:24:40.116 A:middle
INParameter

00:24:41.916 --> 00:24:43.196 A:middle
它是通过一个

00:24:43.196 --> 00:24:44.036 A:middle
参数分类而构成

00:24:44.376 --> 00:24:45.006 A:middle
这个例子里用的是

00:24:45.006 --> 00:24:45.916 A:middle
RequestRideIntent

00:24:47.066 --> 00:24:48.716 A:middle
然后是作为属性的

00:24:48.716 --> 00:24:50.766 A:middle
关键路径  在这个分类里面导向

00:24:50.766 --> 00:24:52.726 A:middle
某个属性的位置

00:24:52.726 --> 00:24:55.616 A:middle
所以参数代表着

00:24:55.616 --> 00:24:57.036 A:middle
一种获取值的方式

00:24:57.036 --> 00:24:59.146 A:middle
同时我们希望能够

00:24:59.146 --> 00:25:00.276 A:middle
获得真值

00:24:59.146 --> 00:25:00.276 A:middle
获得真值

00:25:00.976 --> 00:25:02.926 A:middle
因此在 INInteraction 这方面

00:25:02.926 --> 00:25:04.126 A:middle
还有一个新方法 叫做

00:25:04.486 --> 00:25:05.416 A:middle
参数值

00:25:06.486 --> 00:25:08.546 A:middle
当你将参数传递到

00:25:08.546 --> 00:25:10.646 A:middle
交互过程中  就将获得

00:25:10.646 --> 00:25:11.516 A:middle
真值

00:25:11.596 --> 00:25:13.516 A:middle
至于乘车地点  它就会成为

00:25:13.516 --> 00:25:15.756 A:middle
一个 CL 位置标记对象

00:25:17.306 --> 00:25:18.536 A:middle
不同的参数将拥有

00:25:18.536 --> 00:25:20.136 A:middle
不同的参数值类型

00:25:20.476 --> 00:25:21.536 A:middle
比如  价格区间参数

00:25:21.536 --> 00:25:22.386 A:middle
就会对应于

00:25:22.566 --> 00:25:25.026 A:middle
INPriceRange 类型

00:25:27.126 --> 00:25:29.346 A:middle
因此 根据这样的参数

00:25:29.346 --> 00:25:30.606 A:middle
概念 我们就可以让你

00:25:30.606 --> 00:25:32.496 A:middle
的掌控范围从单一视图

00:25:32.496 --> 00:25:35.656 A:middle
扩展到所有的视图

00:25:35.956 --> 00:25:38.076 A:middle
把它们自定义为不同参数

00:25:38.076 --> 00:25:39.436 A:middle
我们现在就可以做到这一点了

00:25:40.026 --> 00:25:43.876 A:middle
这是 Intent UI Extension 的

00:25:43.876 --> 00:25:45.266 A:middle
主要分类

00:25:45.686 --> 00:25:47.206 A:middle
它符合

00:25:47.206 --> 00:25:48.706 A:middle
INUIHostedViewControlling 协议

00:25:48.866 --> 00:25:49.986 A:middle
这跟前面的情况相同

00:25:51.056 --> 00:25:52.556 A:middle
我们的新方法叫作

00:25:52.606 --> 00:25:54.236 A:middle
configureViewFor 参数

00:25:54.726 --> 00:25:56.106 A:middle
这样的话  你就需要给一系列

00:25:56.106 --> 00:25:58.586 A:middle
参数来配制

00:25:58.736 --> 00:25:59.366 A:middle
你的自定义视图

00:26:00.666 --> 00:26:02.336 A:middle
你会获得一个交互

00:26:02.336 --> 00:26:02.756 A:middle
对象

00:26:03.776 --> 00:26:05.086 A:middle
让你来解析这些

00:26:05.086 --> 00:26:05.946 A:middle
参数值

00:26:06.466 --> 00:26:09.336 A:middle
你还会获得一个语境

00:26:09.516 --> 00:26:10.676 A:middle
它会告诉你

00:26:10.676 --> 00:26:11.916 A:middle
你是在地图应用

00:26:11.946 --> 00:26:12.666 A:middle
还是在 Siri 里进行绘制

00:26:13.246 --> 00:26:15.686 A:middle
这样到了最后 你会

00:26:15.686 --> 00:26:16.886 A:middle
获得一个完成块

00:26:17.426 --> 00:26:18.626 A:middle
你可以调用它

00:26:18.866 --> 00:26:19.696 A:middle
它含有三个参数

00:26:20.906 --> 00:26:22.316 A:middle
首先是布尔数据类型

00:26:22.766 --> 00:26:24.516 A:middle
你在这时要

00:26:24.516 --> 00:26:24.736 A:middle
返回 True 或 False

00:26:25.076 --> 00:26:26.956 A:middle
True 表示你想给

00:26:26.956 --> 00:26:28.656 A:middle
这组参数绘制

00:26:28.656 --> 00:26:29.206 A:middle
自定义视图

00:26:29.606 --> 00:26:31.556 A:middle
False 表示你想让 Siri

00:26:31.556 --> 00:26:32.776 A:middle
绘制默认视图

00:26:33.956 --> 00:26:36.156 A:middle
第二组参数就是

00:26:36.156 --> 00:26:37.256 A:middle
当你选择返回 True 时

00:26:37.256 --> 00:26:38.436 A:middle
所要处理的参数

00:26:39.486 --> 00:26:41.316 A:middle
最后 你给 Siri 返回你的视图尺寸

00:26:41.316 --> 00:26:42.796 A:middle
让它进行绘制

00:26:44.216 --> 00:26:45.206 A:middle
下面 我将通过一个具体的例子

00:26:45.206 --> 00:26:48.516 A:middle
来给大家展示  我们是如何

00:26:48.516 --> 00:26:50.116 A:middle
运用参数来自定义

00:26:50.116 --> 00:26:52.076 A:middle
乘车交互过程的

00:26:52.226 --> 00:26:54.016 A:middle
我们要制造更多的 Unicorn

00:26:56.226 --> 00:26:58.736 A:middle
如图 最上方的是 Siri

00:26:59.376 --> 00:27:00.686 A:middle
最下方是你的那些 Intent

00:26:59.376 --> 00:27:00.686 A:middle
最下方是你的那些 Intent

00:27:00.686 --> 00:27:01.456 A:middle
UIExtension

00:27:02.516 --> 00:27:03.656 A:middle
首先 你要通过一组空参数

00:27:03.986 --> 00:27:05.506 A:middle
来获得调用

00:27:06.296 --> 00:27:07.366 A:middle
这样你就有机会

00:27:07.366 --> 00:27:08.786 A:middle
获得额外信息

00:27:09.076 --> 00:27:11.226 A:middle
来处理我们先前所说的参数

00:27:12.606 --> 00:27:15.986 A:middle
那么  我们这个例子里的情况

00:27:15.986 --> 00:27:17.396 A:middle
是要返回 False

00:27:17.396 --> 00:27:19.286 A:middle
这就意味着我们想让 Siri

00:27:19.286 --> 00:27:20.566 A:middle
为这个参数而绘制

00:27:20.816 --> 00:27:21.276 A:middle
默认视图

00:27:21.716 --> 00:27:22.936 A:middle
而一组空参数的

00:27:22.936 --> 00:27:24.326 A:middle
默认视图

00:27:24.326 --> 00:27:25.126 A:middle
实际上为空白视图

00:27:25.646 --> 00:27:28.186 A:middle
它用代码表现时  外观就是

00:27:28.186 --> 00:27:28.486 A:middle
这样

00:27:36.416 --> 00:27:38.346 A:middle
现在 Siri 需要继续调用

00:27:38.346 --> 00:27:39.946 A:middle
configureView 直到它解析完

00:27:39.946 --> 00:27:41.976 A:middle
所有应用于此次交互的

00:27:41.976 --> 00:27:42.566 A:middle
参数

00:27:43.016 --> 00:27:44.726 A:middle
下一个视图 或者说 下一组

00:27:44.726 --> 00:27:45.856 A:middle
参数  就是乘车

00:27:45.856 --> 00:27:46.416 A:middle
地点

00:27:46.416 --> 00:27:47.656 A:middle
所以它需要你

00:27:47.656 --> 00:27:48.766 A:middle
给这个环节

00:27:48.816 --> 00:27:49.226 A:middle
配置你自己的视图

00:27:49.836 --> 00:27:51.246 A:middle
这一次 我们要返回的是

00:27:51.386 --> 00:27:51.716 A:middle
True

00:27:51.866 --> 00:27:53.976 A:middle
我们准备告诉 Siri 我们

00:27:53.976 --> 00:27:54.856 A:middle
要处理那个乘车

00:27:54.856 --> 00:27:55.406 A:middle
地点

00:27:55.546 --> 00:27:57.226 A:middle
接下来就是我们自定义视图的

00:27:57.226 --> 00:27:57.496 A:middle
尺寸

00:27:58.146 --> 00:28:00.356 A:middle
当我们这样操作时 Siri 会

00:27:58.146 --> 00:28:00.356 A:middle
当我们这样操作时 Siri 会

00:28:00.356 --> 00:28:02.396 A:middle
把默认视图替换为

00:28:02.396 --> 00:28:03.206 A:middle
我们的自定义视图

00:28:03.896 --> 00:28:06.096 A:middle
而且 它会彻底移除自己原先

00:28:06.096 --> 00:28:07.316 A:middle
准备绘制的默认视图的

00:28:07.316 --> 00:28:07.966 A:middle
系统进程

00:28:09.236 --> 00:28:10.856 A:middle
最后 它将遵照

00:28:10.856 --> 00:28:12.256 A:middle
我们要求设置的尺寸

00:28:12.836 --> 00:28:15.576 A:middle
这就是使用代码操作的

00:28:15.576 --> 00:28:15.796 A:middle
情况

00:28:17.706 --> 00:28:18.686 A:middle
接下来 我们将继续定义我们的

00:28:18.776 --> 00:28:19.916 A:middle
乘车地点参数

00:28:20.516 --> 00:28:24.576 A:middle
当我们根据要求  配置

00:28:24.576 --> 00:28:25.646 A:middle
乘车地点时

00:28:25.646 --> 00:28:26.426 A:middle
就会对视图进行配置

00:28:26.866 --> 00:28:28.686 A:middle
把 True 返回给 Siri  告诉它  我们

00:28:28.686 --> 00:28:29.186 A:middle
正在处理

00:28:29.186 --> 00:28:32.486 A:middle
最后 我们将把 False 的

00:28:32.486 --> 00:28:34.306 A:middle
完成转移到某个 else block 代码块

00:28:38.476 --> 00:28:40.256 A:middle
这样 Siri 将会继续

00:28:40.256 --> 00:28:41.856 A:middle
调用 configureView  直到它

00:28:41.856 --> 00:28:42.886 A:middle
把所有参数解析完毕

00:28:43.316 --> 00:28:44.806 A:middle
接下来是搭乘选项的

00:28:44.806 --> 00:28:45.076 A:middle
名称

00:28:45.676 --> 00:28:47.406 A:middle
你不仅可以向 Siri 返回 False

00:28:47.506 --> 00:28:49.426 A:middle
让它绘制默认视图

00:28:49.426 --> 00:28:51.086 A:middle
或者每次设置一个参数

00:28:51.086 --> 00:28:52.656 A:middle
其实 你还可以告诉

00:28:52.656 --> 00:28:54.106 A:middle
Siri  你想要一次设置

00:28:54.516 --> 00:28:55.766 A:middle
多个参数

00:28:55.816 --> 00:28:56.746 A:middle
或者所有剩余的

00:28:56.746 --> 00:28:57.246 A:middle
参数

00:28:57.896 --> 00:28:59.366 A:middle
那么现在 我们准备告诉 Siri

00:28:59.406 --> 00:29:00.256 A:middle
我们打算处理搭乘选项的

00:28:59.406 --> 00:29:00.256 A:middle
我们打算处理搭乘选项的

00:29:00.256 --> 00:29:01.846 A:middle
名称  然后处理

00:29:01.846 --> 00:29:02.666 A:middle
视图里剩下的所有

00:29:02.666 --> 00:29:02.956 A:middle
参数

00:29:03.866 --> 00:29:05.556 A:middle
Siri 将把所有这些

00:29:05.556 --> 00:29:07.556 A:middle
参数都设置成我们的自定义视图

00:29:08.216 --> 00:29:10.046 A:middle
而且 Siri 不会再要求我们

00:29:10.046 --> 00:29:11.306 A:middle
进一步配置视图

00:29:11.306 --> 00:29:12.956 A:middle
因为我们已经告诉它

00:29:12.956 --> 00:29:16.906 A:middle
我们要处理这些参数

00:29:17.456 --> 00:29:18.416 A:middle
这是以代码形式显示的

00:29:18.416 --> 00:29:18.676 A:middle
操作情况

00:29:19.636 --> 00:29:21.116 A:middle
我们配置自己的参数

00:29:22.006 --> 00:29:24.026 A:middle
这一部分在前面已经评论过了

00:29:25.736 --> 00:29:27.106 A:middle
乘车地点的设置

00:29:27.106 --> 00:29:27.486 A:middle
如前所述

00:29:29.236 --> 00:29:31.436 A:middle
现在 我们要处理搭乘选项的名称

00:29:31.436 --> 00:29:33.326 A:middle
以及剩下的所有

00:29:33.326 --> 00:29:33.946 A:middle
参数

00:29:34.526 --> 00:29:38.486 A:middle
然后我们实现完成  Flase

00:29:39.626 --> 00:29:42.036 A:middle
我们从这个视图出发

00:29:42.036 --> 00:29:44.296 A:middle
它可以使用重复方法来

00:29:44.576 --> 00:29:47.626 A:middle
控制所有视图以及

00:29:47.626 --> 00:29:48.676 A:middle
应用于这些视图的所有

00:29:48.676 --> 00:29:49.116 A:middle
参数

00:29:50.586 --> 00:29:52.066 A:middle
我们不仅可以完成这种类型的

00:29:52.066 --> 00:29:54.286 A:middle
布局  我们还可以做出任何想要的

00:29:54.286 --> 00:29:55.346 A:middle
自定义布局

00:29:55.856 --> 00:29:57.616 A:middle
我们可以绘制一部分自定义视图

00:29:57.696 --> 00:29:59.166 A:middle
可以让 Siri 绘制其余的视图

00:29:59.166 --> 00:30:01.286 A:middle
你可以绘制所有的自定义视图

00:29:59.166 --> 00:30:01.286 A:middle
你可以绘制所有的自定义视图

00:30:01.406 --> 00:30:02.386 A:middle
创建一个自定义标题

00:30:02.686 --> 00:30:03.866 A:middle
可见 它超级强大

00:30:05.066 --> 00:30:06.416 A:middle
那么 让我们来看看它在

00:30:06.766 --> 00:30:07.906 A:middle
Xcode 里的现场操作情况

00:30:08.476 --> 00:30:10.836 A:middle
对我们的 Unicorn 乘车 App 进行自定义

00:30:11.486 --> 00:30:13.906 A:middle
我们打算选用粉色主题

00:30:14.116 --> 00:30:16.026 A:middle
独角兽(Unicorn)喜爱粉色

00:30:16.746 --> 00:30:18.736 A:middle
我们准备处理两个

00:30:18.736 --> 00:30:19.126 A:middle
视图

00:30:19.256 --> 00:30:20.496 A:middle
我们要处理车费和

00:30:20.496 --> 00:30:21.786 A:middle
特价的参数

00:30:21.906 --> 00:30:22.596 A:middle
放在视图顶端

00:30:23.046 --> 00:30:24.436 A:middle
然后是乘车地点、下车地点

00:30:24.436 --> 00:30:25.976 A:middle
搭乘选项名称

00:30:26.046 --> 00:30:26.676 A:middle
放在视图底部

00:30:27.206 --> 00:30:30.736 A:middle
我将再次使用 Siri 的

00:30:30.736 --> 00:30:32.616 A:middle
Intent 查询功能来

00:30:32.616 --> 00:30:34.086 A:middle
预先填写一项请求

00:30:34.086 --> 00:30:38.396 A:middle
让我们再看一遍

00:30:38.396 --> 00:30:38.626 A:middle
演示

00:30:48.416 --> 00:30:51.146 A:middle
现在打开我在

00:30:51.146 --> 00:30:52.156 A:middle
Intents UI extension 的

00:30:52.156 --> 00:30:52.716 A:middle
主要分类

00:30:53.266 --> 00:30:54.216 A:middle
它遵循的是

00:30:54.256 --> 00:30:55.826 A:middle
INUIHostedViewControlling

00:30:55.826 --> 00:30:56.336 A:middle
协议

00:30:56.336 --> 00:30:58.956 A:middle
我们继续来执行

00:30:58.956 --> 00:31:00.966 A:middle
新的 configureView 方法

00:30:58.956 --> 00:31:00.966 A:middle
新的 configureView 方法

00:31:03.056 --> 00:31:05.276 A:middle
先开始第一遍 我会

00:31:05.276 --> 00:31:06.786 A:middle
在每个单独步骤都会返回

00:31:06.786 --> 00:31:07.096 A:middle
False

00:31:07.276 --> 00:31:08.466 A:middle
那么 Siri 就会

00:31:08.466 --> 00:31:09.966 A:middle
为所有参数绘制

00:31:09.966 --> 00:31:10.496 A:middle
默认视图

00:31:10.956 --> 00:31:12.476 A:middle
我们也可以在调试时

00:31:12.476 --> 00:31:14.156 A:middle
将断点放置在这里

00:31:14.656 --> 00:31:15.746 A:middle
看看哪几组参数

00:31:15.746 --> 00:31:16.786 A:middle
是我们要调用的  还有它们是

00:31:16.786 --> 00:31:17.876 A:middle
按照什么顺序

00:31:17.876 --> 00:31:18.226 A:middle
进行交互的

00:31:19.316 --> 00:31:20.866 A:middle
我们来构建运行一下

00:31:40.096 --> 00:31:40.716 A:middle
好

00:31:41.166 --> 00:31:42.716 A:middle
我们要的默认视图有了

00:31:42.716 --> 00:31:44.546 A:middle
因为我们已经告诉 Siri

00:31:44.546 --> 00:31:45.326 A:middle
对所有参数都设置 False

00:31:46.126 --> 00:31:47.946 A:middle
这可不太符合 Unicorn 的风格 那么

00:31:47.946 --> 00:31:49.376 A:middle
我们就来动动手 让它变得

00:31:49.946 --> 00:31:50.606 A:middle
更粉嫩一些

00:31:51.096 --> 00:31:52.246 A:middle
我们来调整一下车费和

00:31:52.246 --> 00:31:53.546 A:middle
特价的参数

00:31:54.126 --> 00:31:57.366 A:middle
所以 先回到控制器界面

00:31:58.816 --> 00:32:02.376 A:middle
我们要界定

00:31:58.816 --> 00:32:02.376 A:middle
我们要界定

00:32:02.376 --> 00:32:03.666 A:middle
需要处理的参数 包括车费和

00:32:03.666 --> 00:32:04.036 A:middle
特价参数

00:32:16.136 --> 00:32:16.916 A:middle
我们将处理这些参数

00:32:17.006 --> 00:32:18.376 A:middle
然后从交互对象的

00:32:18.376 --> 00:32:19.936 A:middle
第一个要求

00:32:19.936 --> 00:32:22.896 A:middle
也就是当 Siri 要求我们

00:32:22.896 --> 00:32:24.136 A:middle
配置一个空白的参数集时

00:32:24.136 --> 00:32:26.076 A:middle
为这些参数提取出

00:32:27.436 --> 00:32:27.706 A:middle
真值

00:32:35.136 --> 00:32:36.476 A:middle
下一步 我们将使用这些参数值

00:32:36.476 --> 00:32:38.456 A:middle
继续用它来

00:32:38.456 --> 00:32:39.966 A:middle
配置我们的 Unicorn 乘车视图

00:32:40.506 --> 00:32:41.916 A:middle
然后再告诉 Siri  我们要为

00:32:41.916 --> 00:32:43.176 A:middle
这些参数来处理

00:32:43.176 --> 00:32:44.756 A:middle
自定义视图  并规定它的

00:32:44.756 --> 00:32:45.216 A:middle
尺寸

00:32:48.206 --> 00:32:50.636 A:middle
我们继续 把这个移动到某个

00:32:50.636 --> 00:32:51.196 A:middle
else-block 代码块

00:32:51.666 --> 00:32:56.166 A:middle
让我们根据这个来构建视图

00:33:12.316 --> 00:33:13.966 A:middle
现在看起来好多了

00:33:14.056 --> 00:33:15.616 A:middle
我们要的粉色视图有了

00:33:15.786 --> 00:33:16.906 A:middle
它可以处理车费和

00:33:16.906 --> 00:33:17.376 A:middle
特价

00:33:17.796 --> 00:33:19.266 A:middle
由于我们把 False 返给了

00:33:19.266 --> 00:33:20.306 A:middle
其余这些参数

00:33:20.566 --> 00:33:22.146 A:middle
所以 Siri 正在绘制默认视图

00:33:22.326 --> 00:33:24.106 A:middle
包括乘车地点、下车地点

00:33:24.106 --> 00:33:25.596 A:middle
还有搭乘选项名称

00:33:26.026 --> 00:33:27.496 A:middle
所以 为了充分完成自定义视图

00:33:27.766 --> 00:33:28.636 A:middle
我们就要继续处理

00:33:28.636 --> 00:33:29.616 A:middle
其余的参数

00:33:39.476 --> 00:33:41.316 A:middle
现在我们只是在定义

00:33:41.316 --> 00:33:43.146 A:middle
剩下的一些参数

00:33:43.196 --> 00:33:44.696 A:middle
就像先前一样

00:33:51.566 --> 00:33:52.746 A:middle
我们将再一次配置

00:33:52.746 --> 00:33:53.156 A:middle
视图

00:33:53.466 --> 00:33:54.546 A:middle
当 Siri 询问乘车地点时

00:33:54.546 --> 00:33:56.466 A:middle
采取可运用于交互的 parameterValue 方法

00:33:56.466 --> 00:33:58.266 A:middle
就可以提取出

00:33:58.266 --> 00:33:59.396 A:middle
真值

00:34:08.686 --> 00:34:09.985 A:middle
我们最后将使用这些真值

00:34:10.266 --> 00:34:11.746 A:middle
给最后这一批参数

00:34:11.746 --> 00:34:12.795 A:middle
再次配置 Unicorn 的乘车视图

00:34:12.795 --> 00:34:14.326 A:middle
并且告诉 Siri

00:34:14.326 --> 00:34:15.936 A:middle
我们要用自定义的尺寸对它们

00:34:15.936 --> 00:34:16.315 A:middle
进行处理

00:34:17.275 --> 00:34:18.096 A:middle
这看起来很不错

00:34:18.716 --> 00:34:20.396 A:middle
那我们现在就来构建和运行

00:34:21.406 --> 00:34:21.476 A:middle
一下看看

00:34:35.496 --> 00:34:37.456 A:middle
现在我们就得到了非常具有

00:34:37.616 --> 00:34:39.985 A:middle
Unicorn 风格的自定义乘车视图

00:34:40.996 --> 00:34:41.815 A:middle
看起来真棒

00:34:43.516 --> 00:34:48.666 A:middle
[掌声]

00:34:49.166 --> 00:34:50.335 A:middle
让我们再回到幻灯片

00:34:51.196 --> 00:34:55.246 A:middle
我简单复述一下  当你在给参数

00:34:55.246 --> 00:34:57.696 A:middle
配置视图时  要知道

00:34:57.696 --> 00:34:59.036 A:middle
你会被再三要求

00:34:59.036 --> 00:35:01.306 A:middle
对自己的视图进行配置

00:34:59.036 --> 00:35:01.306 A:middle
对自己的视图进行配置

00:35:01.686 --> 00:35:02.766 A:middle
首先 你会被要求提供

00:35:03.046 --> 00:35:04.316 A:middle
一个空白的参数集

00:35:04.656 --> 00:35:06.456 A:middle
那么还是这样 你可以提取

00:35:06.456 --> 00:35:08.346 A:middle
附加信息  你自己定义

00:35:08.346 --> 00:35:08.686 A:middle
标题

00:35:08.816 --> 00:35:09.566 A:middle
或许你甚至现在

00:35:09.566 --> 00:35:10.666 A:middle
就可以预先处理参数

00:35:12.216 --> 00:35:13.966 A:middle
你会被依次要求提供

00:35:13.966 --> 00:35:15.476 A:middle
一组参数

00:35:15.476 --> 00:35:16.146 A:middle
给某个特定的交互

00:35:16.686 --> 00:35:17.966 A:middle
你将在随后出现的

00:35:17.966 --> 00:35:19.346 A:middle
归档更新内容里

00:35:19.346 --> 00:35:20.536 A:middle
依次找到这一组

00:35:20.536 --> 00:35:21.876 A:middle
参数

00:35:23.216 --> 00:35:25.056 A:middle
最后 你只需继续

00:35:25.056 --> 00:35:26.756 A:middle
处理你的参数 把尺寸

00:35:26.756 --> 00:35:28.166 A:middle
返回给 Siri  再绘制

00:35:28.166 --> 00:35:28.506 A:middle
你的视图

00:35:29.676 --> 00:35:34.186 A:middle
下一步我们将

00:35:34.186 --> 00:35:34.876 A:middle
添加一个参数

00:35:34.876 --> 00:35:36.776 A:middle
到 configureView 方法

00:35:36.776 --> 00:35:37.816 A:middle
这个参数叫 Interactive Behavior

00:35:38.606 --> 00:35:40.216 A:middle
所以某些视图

00:35:40.216 --> 00:35:41.646 A:middle
和参数本身就关联着

00:35:41.646 --> 00:35:42.516 A:middle
交互性

00:35:42.566 --> 00:35:44.396 A:middle
我们以地图为例

00:35:44.396 --> 00:35:46.026 A:middle
你轻点它 就会出现另一种视图

00:35:46.296 --> 00:35:47.346 A:middle
就像是下一个视图

00:35:48.066 --> 00:35:49.496 A:middle
某些视图可能会启动

00:35:49.496 --> 00:35:49.746 A:middle
你的 App

00:35:50.326 --> 00:35:51.546 A:middle
所以 Interactive Behavior 参数

00:35:51.546 --> 00:35:52.966 A:middle
可以给你一些提示

00:35:53.086 --> 00:35:55.066 A:middle
提示这些参数

00:35:55.066 --> 00:35:56.136 A:middle
可以使用哪一种

00:35:56.176 --> 00:35:56.686 A:middle
交互类型

00:35:56.846 --> 00:35:58.016 A:middle
你还可以用它

00:35:58.256 --> 00:35:59.846 A:middle
来自定义你的视图

00:36:00.366 --> 00:36:02.776 A:middle
另外还有一种方法

00:36:02.776 --> 00:36:04.666 A:middle
叫做界面参数描述

00:36:04.666 --> 00:36:06.166 A:middle
它和你的

00:36:06.166 --> 00:36:07.906 A:middle
Intents UI extension 语境有关

00:36:08.236 --> 00:36:09.176 A:middle
你可以在

00:36:09.176 --> 00:36:11.056 A:middle
调试过程中用它来

00:36:11.406 --> 00:36:12.766 A:middle
打印输出某个特定交互中的

00:36:12.766 --> 00:36:15.626 A:middle
参数顺序以及这个

00:36:16.416 --> 00:36:16.746 A:middle
参数集

00:36:16.746 --> 00:36:18.726 A:middle
看 这就是全新的

00:36:19.216 --> 00:36:20.246 A:middle
INInteraction API

00:36:20.766 --> 00:36:21.706 A:middle
它超级强大

00:36:21.706 --> 00:36:23.126 A:middle
我们迫不及待地想看到

00:36:23.126 --> 00:36:24.136 A:middle
大家准备用它构建出怎样的惊喜

00:36:24.526 --> 00:36:25.576 A:middle
我要把讲台交还给 Sirisha

00:36:25.576 --> 00:36:26.746 A:middle
让她来展示一些

00:36:26.746 --> 00:36:27.636 A:middle
新增的优化功能

00:36:28.016 --> 00:36:28.346 A:middle
谢谢大家

00:36:29.516 --> 00:36:33.676 A:middle
[掌声]

00:36:34.176 --> 00:36:34.896 A:middle
&gt;&gt;谢谢你，Tin

00:36:35.886 --> 00:36:37.636 A:middle
除了添加更多的应用域

00:36:38.076 --> 00:36:39.696 A:middle
和强大的参数

00:36:39.696 --> 00:36:41.296 A:middle
就像刚才 Tin 介绍的那样

00:36:41.296 --> 00:36:43.286 A:middle
我们还投入了大量时间

00:36:43.286 --> 00:36:44.426 A:middle
来增强我们的系统和 API

00:36:44.426 --> 00:36:47.256 A:middle
我不打算把这些成果全部展示一遍

00:36:47.326 --> 00:36:48.816 A:middle
但是我想谈谈

00:36:48.896 --> 00:36:49.706 A:middle
其中的两样

00:36:50.586 --> 00:36:52.576 A:middle
首先 我要谈谈

00:36:52.576 --> 00:36:54.176 A:middle
后台体能训练 App Intent 处理

00:36:54.476 --> 00:36:57.406 A:middle
这是一项新能力

00:36:57.406 --> 00:36:57.976 A:middle
它可以在后台启动健身的 App

00:36:59.336 --> 00:37:01.796 A:middle
另一个就是 App 替换名称

00:36:59.336 --> 00:37:01.796 A:middle
另一个就是 App 替换名称

00:37:02.176 --> 00:37:03.506 A:middle
我们很快就会讲到这项新功能

00:37:05.106 --> 00:37:06.846 A:middle
健身广受欢迎的

00:37:06.846 --> 00:37:07.406 A:middle
Intent

00:37:08.096 --> 00:37:09.866 A:middle
用户们喜欢用 Siri 来

00:37:09.866 --> 00:37:11.086 A:middle
掌握健身活动

00:37:11.556 --> 00:37:12.526 A:middle
它操作非常简单

00:37:13.036 --> 00:37:15.446 A:middle
当前的执行情况是

00:37:15.446 --> 00:37:17.276 A:middle
当用户向某个健身 App 发出

00:37:17.276 --> 00:37:18.916 A:middle
请求指令时 Siri 会调用

00:37:18.916 --> 00:37:19.656 A:middle
Extension

00:37:20.186 --> 00:37:22.286 A:middle
接下来 Extension 又会把请求

00:37:22.286 --> 00:37:23.836 A:middle
传递给 App

00:37:23.836 --> 00:37:26.046 A:middle
如果设备已经锁定

00:37:26.046 --> 00:37:27.836 A:middle
Siri 会在启动 App 之前

00:37:27.836 --> 00:37:29.896 A:middle
请求用户许可

00:37:30.966 --> 00:37:32.676 A:middle
今年 我们在这方面做了些改变

00:37:33.366 --> 00:37:35.076 A:middle
我们想要确保

00:37:35.076 --> 00:37:37.146 A:middle
App 在前台启动之前

00:37:37.146 --> 00:37:38.936 A:middle
后台就已经

00:37:39.096 --> 00:37:40.066 A:middle
启动了 App 而不是等到

00:37:40.066 --> 00:37:40.696 A:middle
在前台显示过后

00:37:41.206 --> 00:37:43.336 A:middle
所以 用户现在只要对

00:37:43.336 --> 00:37:45.236 A:middle
Siri 说话 App 就能成功启动

00:37:45.846 --> 00:37:47.266 A:middle
这是为使用 iOS11 的

00:37:47.266 --> 00:37:49.146 A:middle
健身 Intent 所准备的

00:37:49.896 --> 00:37:50.786 A:middle
现在我们来看看代码

00:37:51.916 --> 00:37:52.696 A:middle
这是目前的

00:37:52.696 --> 00:37:53.616 A:middle
执行情况

00:37:53.946 --> 00:37:55.826 A:middle
启动健身 Intent 的

00:37:55.826 --> 00:37:57.366 A:middle
一个响应码样例

00:37:57.976 --> 00:38:00.226 A:middle
Extension 通常会返回

00:37:57.976 --> 00:38:00.226 A:middle
Extension 通常会返回

00:38:00.296 --> 00:38:03.156 A:middle
继续 App 当 Siri

00:38:03.156 --> 00:38:05.266 A:middle
调用 UI 应用授权里的

00:38:05.266 --> 00:38:06.886 A:middle
应用方法时

00:38:08.086 --> 00:38:10.126 A:middle
Extension 会让 NS userActivity 通过

00:38:10.496 --> 00:38:12.266 A:middle
并提示启动 App

00:38:13.686 --> 00:38:15.516 A:middle
我们已经新增了两个代码

00:38:15.516 --> 00:38:17.026 A:middle
以改变当前的流程

00:38:18.176 --> 00:38:22.076 A:middle
我们添加了一个新的 Intent

00:38:22.076 --> 00:38:24.896 A:middle
响应码 Handle an App

00:38:24.896 --> 00:38:27.126 A:middle
因此 你可以选择返回

00:38:27.226 --> 00:38:29.276 A:middle
Handle an App 响应码

00:38:29.276 --> 00:38:31.286 A:middle
来确认我们调用了

00:38:31.286 --> 00:38:32.376 A:middle
新的应用方法

00:38:33.736 --> 00:38:35.116 A:middle
我们在 UI 应用授权上

00:38:35.116 --> 00:38:36.776 A:middle
新增了一个

00:38:36.776 --> 00:38:37.246 A:middle
应用方法

00:38:37.556 --> 00:38:41.376 A:middle
这需要采用 IN Intent 和

00:38:41.446 --> 00:38:42.586 A:middle
Completion Handler

00:38:43.596 --> 00:38:45.576 A:middle
所以 当你以 Intent 反应码的形式

00:38:45.886 --> 00:38:47.276 A:middle
传递 Handle an App

00:38:47.576 --> 00:38:48.626 A:middle
并执行新的

00:38:48.626 --> 00:38:50.836 A:middle
应用方法时 我们将调用

00:38:50.836 --> 00:38:52.236 A:middle
新的应用方法

00:38:52.536 --> 00:38:54.406 A:middle
在后台提示

00:38:54.406 --> 00:38:55.066 A:middle
启动 App

00:38:55.666 --> 00:38:57.046 A:middle
当用户只想启动或暂停健身

00:38:57.046 --> 00:38:59.826 A:middle
甚至是通过 AirPods 来操作时

00:38:59.826 --> 00:39:01.876 A:middle
它也非常有用

00:38:59.826 --> 00:39:01.876 A:middle
它也非常有用

00:39:02.026 --> 00:39:03.316 A:middle
他们甚至都不必触碰

00:39:03.346 --> 00:39:03.916 A:middle
设备

00:39:07.046 --> 00:39:07.866 A:middle
我们来快速地看一下

00:39:07.866 --> 00:39:08.206 A:middle
这个流程

00:39:08.206 --> 00:39:09.026 A:middle
看起来如何？

00:39:09.806 --> 00:39:11.836 A:middle
用户想要开始一项体能训练

00:39:12.576 --> 00:39:14.796 A:middle
我们启动 Extension  调用

00:39:14.796 --> 00:39:15.676 A:middle
处理方法

00:39:16.266 --> 00:39:19.286 A:middle
Extension 就会返回

00:39:19.286 --> 00:39:21.346 A:middle
新的 Intent 响应码  即 Handle

00:39:21.346 --> 00:39:23.116 A:middle
an App

00:39:23.316 --> 00:39:25.006 A:middle
接着 Siri 以新的应用方法

00:39:25.006 --> 00:39:27.296 A:middle
调用这个应用程序

00:39:27.436 --> 00:39:30.266 A:middle
传递 IN Intent

00:39:30.266 --> 00:39:31.826 A:middle
以及 Completion Handler

00:39:31.976 --> 00:39:33.416 A:middle
这个完成代码块

00:39:33.416 --> 00:39:35.316 A:middle
嵌入了 Intent 响应

00:39:35.406 --> 00:39:35.656 A:middle
代码

00:39:36.436 --> 00:39:38.586 A:middle
于是 应用程序将在

00:39:38.586 --> 00:39:40.586 A:middle
后台启动 并且

00:39:40.806 --> 00:39:42.656 A:middle
将成功操作的信息反馈给 Siri

00:39:42.966 --> 00:39:44.196 A:middle
告知活动

00:39:44.296 --> 00:39:44.766 A:middle
已完成

00:39:45.406 --> 00:39:47.466 A:middle
我们认为这将会让用户

00:39:47.466 --> 00:39:49.516 A:middle
在控制自己的体能训练计划时

00:39:49.516 --> 00:39:51.546 A:middle
操作体验更加便捷

00:39:51.546 --> 00:39:52.166 A:middle
流畅

00:39:52.366 --> 00:39:53.766 A:middle
对于这一点 我们感到很兴奋

00:39:54.896 --> 00:39:57.296 A:middle
今天我要谈论的

00:39:57.296 --> 00:40:00.566 A:middle
第二个优化功能是

00:39:57.296 --> 00:40:00.566 A:middle
第二个优化功能是

00:40:00.896 --> 00:40:04.186 A:middle
App 的别名

00:40:04.806 --> 00:40:07.996 A:middle
通常情况下 用户确实会用

00:40:07.996 --> 00:40:09.616 A:middle
各种各样的名字来

00:40:10.076 --> 00:40:11.266 A:middle
指代一个 App

00:40:12.056 --> 00:40:13.696 A:middle
比如 UnicornPay 会被

00:40:13.696 --> 00:40:14.726 A:middle
简称为 Unicorn

00:40:15.256 --> 00:40:17.336 A:middle
UnicornPay 或 CornPay

00:40:17.856 --> 00:40:19.816 A:middle
我们想确保能够

00:40:19.816 --> 00:40:21.596 A:middle
理解用户使用的

00:40:21.596 --> 00:40:24.686 A:middle
所有 App 名称变体

00:40:25.366 --> 00:40:28.606 A:middle
以便准确对应地启用 App

00:40:28.816 --> 00:40:31.056 A:middle
因此 为了实现这一目标 我们

00:40:31.056 --> 00:40:32.446 A:middle
将一个新字段

00:40:32.866 --> 00:40:34.526 A:middle
AlternativeAppName

00:40:34.526 --> 00:40:34.876 A:middle
引入 .plist

00:40:35.386 --> 00:40:38.246 A:middle
当你注册 .plist 时

00:40:38.246 --> 00:40:39.826 A:middle
你可以填写

00:40:40.086 --> 00:40:41.916 A:middle
所有你认为

00:40:41.916 --> 00:40:43.756 A:middle
用户可能用来称呼

00:40:43.756 --> 00:40:45.196 A:middle
这个 App 的名称

00:40:45.196 --> 00:40:46.146 A:middle
有一个字段叫做

00:40:46.146 --> 00:40:47.756 A:middle
AlternativeAppNames 里面填写了

00:40:47.756 --> 00:40:49.336 A:middle
各个实际的名称 同时你也可以

00:40:49.336 --> 00:40:51.276 A:middle
填写发音提示

00:40:51.276 --> 00:40:52.796 A:middle
如果你觉得有

00:40:52.796 --> 00:40:53.396 A:middle
必要的话

00:40:53.396 --> 00:40:56.016 A:middle
这将帮助 Siri 理解

00:40:56.086 --> 00:40:57.446 A:middle
所有 App 名称的变体

00:40:57.446 --> 00:40:59.966 A:middle
从而确保唤起

00:41:00.226 --> 00:41:02.276 A:middle
并调用这位用户

00:41:02.276 --> 00:41:03.216 A:middle
期待运行的 App

00:41:06.556 --> 00:41:09.896 A:middle
到目前为止 我们已经介绍了新的

00:41:09.896 --> 00:41:13.086 A:middle
域、列表、备忘录和

00:41:13.086 --> 00:41:13.836 A:middle
可视码

00:41:14.976 --> 00:41:17.246 A:middle
以及付款域里的

00:41:17.246 --> 00:41:19.096 A:middle
新 Intent 用来支持账户管理

00:41:20.616 --> 00:41:23.486 A:middle
全新的 API 可以让你

00:41:23.486 --> 00:41:25.536 A:middle
在自定义设置视图时获得更多掌控

00:41:26.066 --> 00:41:27.926 A:middle
我的同事 Tin 刚才已经介绍过

00:41:27.926 --> 00:41:28.276 A:middle
这一点

00:41:29.546 --> 00:41:31.686 A:middle
最后 我们的一些优化功能

00:41:32.186 --> 00:41:34.126 A:middle
例如  在后台开启健身 App

00:41:34.126 --> 00:41:36.426 A:middle
以及让大家能够向我们

00:41:36.426 --> 00:41:38.606 A:middle
提供你认为用户

00:41:38.606 --> 00:41:40.096 A:middle
有可能使用的

00:41:40.406 --> 00:41:42.396 A:middle
所有 App 别名

00:41:44.636 --> 00:41:46.406 A:middle
请大家访问我们的网站

00:41:46.406 --> 00:41:48.446 A:middle
developer.apple.com 以便

00:41:48.446 --> 00:41:50.996 A:middle
获得这次 214 会议的

00:41:51.026 --> 00:41:51.866 A:middle
更多信息

00:41:52.936 --> 00:41:55.156 A:middle
接下来我们将进行另一场会议

00:41:55.156 --> 00:41:56.696 A:middle
“打造强大的 SiriKit 体验”

00:41:56.696 --> 00:41:59.106 A:middle
我们的专家将

00:41:59.106 --> 00:42:00.686 A:middle
向大家介绍  在编写

00:41:59.106 --> 00:42:00.686 A:middle
向大家介绍  在编写

00:42:00.846 --> 00:42:03.376 A:middle
Siri Extension 时

00:42:03.376 --> 00:42:05.096 A:middle
可能用到的方法和技术

00:42:05.096 --> 00:42:06.086 A:middle
并提供各种有益提示

00:42:07.756 --> 00:42:09.526 A:middle
感谢大家参加

00:42:09.566 --> 00:42:10.016 A:middle
今天的会议

00:42:10.236 --> 00:42:12.056 A:middle
我们非常期待能看到

00:42:12.056 --> 00:42:13.086 A:middle
大家使用我们全新的 API

00:42:13.086 --> 00:42:14.786 A:middle
并带来各种全新事物

00:42:15.356 --> 00:42:15.736 A:middle
谢谢大家

00:42:16.516 --> 00:42:24.690 A:middle
[掌声]
