WEBVTT

00:00:18.218 --> 00:00:19.753 align:middle line:0
<c.magenta>（使用HEIF和HEVC）</c>

00:00:20.087 --> 00:00:23.257 align:middle line:-2
<c.magenta>大家早上好</c>
<c.magenta>欢迎参加WWDC周五的演讲</c>

00:00:24.057 --> 00:00:24.925 align:middle line:-1
<c.magenta>谢谢大家</c>

00:00:26.360 --> 00:00:27.594 align:middle line:-1
<c.magenta>我是Erik Turnquist</c>

00:00:27.761 --> 00:00:31.231 align:middle line:-2
<c.magenta>今天我和Brad将跟大家</c>
<c.magenta>讲讲HEIF和HEVC的使用</c>

00:00:32.533 --> 00:00:34.601 align:middle line:-1
<c.magenta>首先 什么是HEVC？</c>

00:00:35.102 --> 00:00:37.838 align:middle line:-1
<c.magenta>HEVC的全称是高效率视频编码</c>

00:00:38.138 --> 00:00:42.109 align:middle line:-2
<c.magenta>它是符合行业标准的</c>
<c.magenta>下一代视频编码技术</c>

00:00:42.476 --> 00:00:44.611 align:middle line:-1
<c.magenta>它是H.264的继任者</c>

00:00:46.213 --> 00:00:49.249 align:middle line:-2
<c.magenta>现在还有一个更重要的问题</c>
<c.magenta>就是为什么？</c>

00:00:49.316 --> 00:00:52.286 align:middle line:-2
<c.magenta>Apple为什么如此努力地</c>
<c.magenta>提交一个新编解码器？</c>

00:00:52.619 --> 00:00:55.589 align:middle line:-1
<c.magenta>在过去的十几年中H.264非常棒</c>

00:00:56.456 --> 00:00:59.459 align:middle line:-2
<c.magenta>现在我们反复思考这个问题</c>
<c.magenta>我们真的很想启动一些新功能</c>

00:00:59.526 --> 00:01:02.829 align:middle line:-1
<c.magenta>很遗憾H.264已达到其功能的上限</c>

00:00:59.526 --> 00:01:02.829 align:middle line:-1
<c.magenta>很遗憾H.264已达到其功能的上限</c>

00:01:03.664 --> 00:01:06.900 align:middle line:-2
<c.magenta>我们想启用新功能</c>
<c.magenta>比如4K以及更大的帧尺寸</c>

00:01:07.234 --> 00:01:11.104 align:middle line:-2
<c.magenta>高位深如10-位元</c>
<c.magenta>以及更宽的色彩空间如Rec.2020</c>

00:01:11.672 --> 00:01:15.275 align:middle line:-2
<c.magenta>现在我们想全部实现 但要降低位速率</c>
<c.magenta>而不会增加位速率</c>

00:01:15.542 --> 00:01:16.643 align:middle line:-1
<c.magenta>那么如何实现呢？</c>

00:01:17.611 --> 00:01:19.112 align:middle line:-1
<c.magenta>嗯 我们用HEVC实现</c>

00:01:19.680 --> 00:01:22.683 align:middle line:-2
<c.magenta>那么现在 比我们现在实际</c>
<c.magenta>看到的位速率低多少呢？</c>

00:01:23.350 --> 00:01:24.818 align:middle line:-1
<c.magenta>嗯 对于一般性编码内容</c>

00:01:24.885 --> 00:01:28.088 align:middle line:-2
<c.magenta>我们看到比H.264的位速率</c>
<c.magenta>降低了多达40%</c>

00:01:28.255 --> 00:01:29.790 align:middle line:-1
<c.magenta>那么这非常了不起</c>

00:01:30.224 --> 00:01:31.358 align:middle line:-1
<c.magenta>对于摄像头捕捉</c>

00:01:31.425 --> 00:01:36.730 align:middle line:-2
<c.magenta>我们看到的压缩</c>
<c.magenta>与H.264和JPEG相比好2倍</c>

00:01:37.397 --> 00:01:38.999 align:middle line:-1
<c.magenta>那么这是另一件很了不起的事</c>

00:01:39.766 --> 00:01:42.069 align:middle line:-1
<c.magenta>而且我们今天实现了全部这些变更</c>

00:01:42.603 --> 00:01:45.072 align:middle line:-2
<c.magenta>如果你已经安装了iOS</c>
<c.magenta>iOS 11种子</c>

00:01:45.138 --> 00:01:49.176 align:middle line:-2
<c.magenta>我们已默认启动了HEVC电影</c>
<c.magenta>和HEIF图片捕捉</c>

00:01:49.243 --> 00:01:50.711 align:middle line:-1
<c.magenta>那意味着你们中的许多人已捕捉到了</c>

00:01:50.777 --> 00:01:53.714 align:middle line:-2
<c.magenta>HEIF图片或HEVC电影</c>
<c.magenta>而你们自己甚至都不知道</c>

00:01:54.047 --> 00:01:55.782 align:middle line:-1
<c.magenta>在我们平台上就这么管用了</c>

00:01:56.884 --> 00:01:58.752 align:middle line:-1
<c.magenta>让我们来看看我们今天要讲的内容</c>

00:01:58.819 --> 00:02:00.921 align:middle line:-1
<c.magenta>我要讲HEVC电影相关的内容</c>

00:01:58.819 --> 00:02:00.921 align:middle line:-1
<c.magenta>我要讲HEVC电影相关的内容</c>

00:02:00.988 --> 00:02:03.423 align:middle line:-1
<c.magenta>而Brad将谈谈HEIF图片相关内容</c>

00:02:03.490 --> 00:02:05.559 align:middle line:-1
<c.magenta>我们要讲获取这些内容</c>

00:02:06.026 --> 00:02:08.362 align:middle line:-1
<c.magenta>播放并显示它 捕捉它</c>

00:02:08.695 --> 00:02:12.299 align:middle line:-2
<c.magenta>并创建HEIF和HEVC电影</c>
<c.magenta>然后导出并转码</c>

00:02:13.267 --> 00:02:14.801 align:middle line:-1
<c.magenta>首先 让我们先讲讲权限</c>

00:02:16.470 --> 00:02:18.338 align:middle line:-1
<c.magenta>你们中有那么多人使用PhotoKit</c>

00:02:18.505 --> 00:02:20.941 align:middle line:-1
<c.magenta>PhotoKit将给播放提交HEVC资产</c>

00:02:21.642 --> 00:02:23.710 align:middle line:-2
<c.magenta>所以如果你使用</c>
<c.magenta>requestPlayerItem</c>

00:02:23.777 --> 00:02:24.978 align:middle line:-1
<c.magenta>或requestLivePhoto</c>

00:02:25.345 --> 00:02:27.581 align:middle line:-1
<c.magenta>它们将提交或它们将为你提供自动播放</c>

00:02:27.648 --> 00:02:31.185 align:middle line:-2
<c.magenta>而无需采用新的…</c>
<c.magenta>任何新的API 就这样管用了</c>

00:02:34.121 --> 00:02:36.723 align:middle line:-1
<c.magenta>PhotoKit还可以给你提交HEVC资产</c>

00:02:36.790 --> 00:02:38.825 align:middle line:-2
<c.magenta>所以如果你称它为</c>
<c.magenta>requestExportSession</c>

00:02:38.892 --> 00:02:42.162 align:middle line:-1
<c.magenta>它将转码到你当前正在使用的预设</c>

00:02:42.696 --> 00:02:44.298 align:middle line:-1
<c.magenta>所以如果你使用其中一个尺寸预设</c>

00:02:44.364 --> 00:02:47.534 align:middle line:-2
<c.magenta>是过去经常给你提供H.264的</c>
<c.magenta>那么它仍会那么做</c>

00:02:47.601 --> 00:02:50.070 align:middle line:-2
<c.magenta>但我会讲一下</c>
<c.magenta>我们为HEVC增加的新预设</c>

00:02:50.604 --> 00:02:53.040 align:middle line:-2
<c.magenta>如果你调用requestAVAsset</c>
<c.magenta>它将给你提供</c>

00:02:53.106 --> 00:02:56.844 align:middle line:-2
<c.magenta>HEVC媒体文件的权限</c>
<c.magenta>这将在其内部有一个HEVC视频轨道</c>

00:02:58.979 --> 00:03:02.216 align:middle line:-2
<c.magenta>现在如果你要备份应用</c>
<c.magenta>你想获取原始位元</c>

00:02:58.979 --> 00:03:02.216 align:middle line:-2
<c.magenta>现在如果你要备份应用</c>
<c.magenta>你想获取原始位元</c>

00:03:02.282 --> 00:03:04.318 align:middle line:-1
<c.magenta>那么你很可能给它命名为requestData</c>

00:03:04.384 --> 00:03:07.821 align:middle line:-2
<c.magenta>那么我想提醒大家注意的是</c>
<c.magenta>这将包含HEVC视频轨道</c>

00:03:07.888 --> 00:03:11.358 align:middle line:-2
<c.magenta>在你接收的电影文件内</c>
<c.magenta>所以你需要能处理这个问题</c>

00:03:12.492 --> 00:03:15.863 align:middle line:-2
<c.magenta>现在你有了这个内容</c>
<c.magenta>让我们谈谈播放和显示</c>

00:03:17.464 --> 00:03:20.467 align:middle line:-1
<c.magenta>我们的现代化媒体框架支持HEVC播放</c>

00:03:20.534 --> 00:03:23.537 align:middle line:-2
<c.magenta>比如AVKit、AVFoundation</c>
<c.magenta>和VideoToolbox</c>

00:03:23.937 --> 00:03:25.873 align:middle line:-1
<c.magenta>我们支持HTTP实时流媒体</c>

00:03:26.240 --> 00:03:29.776 align:middle line:-2
<c.magenta>边下边播以及本地文件播放</c>
<c.magenta>或本地文件回放</c>

00:03:30.511 --> 00:03:33.747 align:middle line:-2
<c.magenta>并且我们支持MPEG-4</c>
<c.magenta>和QuickTime文件格式作为源</c>

00:03:33.814 --> 00:03:36.917 align:middle line:-2
<c.magenta>并且在这里不需要选择加入任何API</c>
<c.magenta>就那么管用了</c>

00:03:38.652 --> 00:03:40.954 align:middle line:-1
<c.magenta>我们支持在macOS和iOS上的解码</c>

00:03:41.421 --> 00:03:44.291 align:middle line:-1
<c.magenta>现在让我们看看哪里支持硬件解码</c>

00:03:44.658 --> 00:03:47.060 align:middle line:-2
<c.magenta>那么我们在A9芯片上</c>
<c.magenta>有8位元和10位元解码器</c>

00:03:47.294 --> 00:03:48.795 align:middle line:-1
<c.magenta>这是iPhone 6s</c>

00:03:49.229 --> 00:03:52.633 align:middle line:-2
<c.magenta>并且我们在第6代因特尔内核上</c>
<c.magenta>有8位元硬件解码</c>

00:03:52.699 --> 00:03:55.569 align:middle line:-2
<c.magenta>这是Skylake</c>
<c.magenta>这是带触摸条的MacBook Pro</c>

00:03:55.636 --> 00:03:56.970 align:middle line:-1
<c.magenta>我们还有10位元解码</c>

00:03:57.037 --> 00:03:59.373 align:middle line:-1
<c.magenta>在第7代因特尔内核处理器上</c>

00:03:59.640 --> 00:04:02.843 align:middle line:-2
<c.magenta>这是Kaby Lake</c>
<c.magenta>这是全新的带触摸条的MacBook Pro</c>

00:03:59.640 --> 00:04:02.843 align:middle line:-2
<c.magenta>这是Kaby Lake</c>
<c.magenta>这是全新的带触摸条的MacBook Pro</c>

00:04:02.910 --> 00:04:07.414 align:middle line:-2
<c.magenta>我们在macOS和iOS上还有</c>
<c.magenta>8位元和10位元软件解码备用解码器</c>

00:04:08.448 --> 00:04:09.950 align:middle line:-1
<c.magenta>所以现在让我们来看一些代码</c>

00:04:10.017 --> 00:04:11.919 align:middle line:-1
<c.magenta>让我们将其转换到HEVC播放</c>

00:04:12.386 --> 00:04:14.354 align:middle line:-1
<c.magenta>在此我们正播放“我的了不起的电影”</c>

00:04:14.421 --> 00:04:16.990 align:middle line:-2
<c.magenta>做一个URL 然后一个播放器</c>
<c.magenta>然后播放它</c>

00:04:17.423 --> 00:04:21.428 align:middle line:-2
<c.magenta>那么这就是H.264版本</c>
<c.magenta>现在这里是HEVC版本</c>

00:04:22.229 --> 00:04:25.299 align:middle line:-2
<c.magenta>没有任何改变</c>
<c.magenta>那么要播放HEVC电影文件</c>

00:04:25.499 --> 00:04:27.201 align:middle line:-1
<c.magenta>你不需要修改任何代码</c>

00:04:27.267 --> 00:04:29.536 align:middle line:-1
<c.magenta>我们想让你考虑一些东西</c>

00:04:30.671 --> 00:04:32.739 align:middle line:-1
<c.magenta>那么第一是关于解码功能</c>

00:04:33.006 --> 00:04:34.208 align:middle line:-1
<c.magenta>如果你提出这个问题</c>

00:04:34.274 --> 00:04:37.377 align:middle line:-1
<c.magenta>系统上有解码器能处理这个内容吗</c>

00:04:37.444 --> 00:04:38.579 align:middle line:-1
<c.magenta>你可以用这个API</c>

00:04:39.112 --> 00:04:42.950 align:middle line:-2
<c.magenta>这个可用于非即时操作</c>
<c.magenta>比如共享或图像生成</c>

00:04:43.016 --> 00:04:45.185 align:middle line:-1
<c.magenta>并且它受硬件支持的限制</c>

00:04:45.252 --> 00:04:48.322 align:middle line:-2
<c.magenta>所以并不是全部硬件解码器</c>
<c.magenta>支持每种帧尺寸</c>

00:04:49.656 --> 00:04:52.860 align:middle line:-2
<c.magenta>现在还有一个更重要的问题</c>
<c.magenta>就是关于播放功能</c>

00:04:53.093 --> 00:04:56.430 align:middle line:-2
<c.magenta>如果你询问如何为客户</c>
<c.magenta>打造最好的播放体验</c>

00:04:56.496 --> 00:04:57.764 align:middle line:-1
<c.magenta>你可以使用这个API</c>

00:04:57.831 --> 00:05:00.367 align:middle line:-2
<c.magenta>且你们中很多人</c>
<c.magenta>很可能已经开始使用这个API了</c>

00:04:57.831 --> 00:05:00.367 align:middle line:-2
<c.magenta>且你们中很多人</c>
<c.magenta>很可能已经开始使用这个API了</c>

00:05:01.001 --> 00:05:03.437 align:middle line:-1
<c.magenta>并不是所有内容都能实时播放</c>

00:05:03.737 --> 00:05:06.373 align:middle line:-1
<c.magenta>并且针对不同的设备有不同的功能</c>

00:05:06.440 --> 00:05:10.177 align:middle line:-2
<c.magenta>所以如果你想为用户</c>
<c.magenta>提供最好的一站式播放体验</c>

00:05:10.244 --> 00:05:14.181 align:middle line:-2
<c.magenta>无论是1x或2x播放</c>
<c.magenta>后退、拖动或快进</c>

00:05:14.481 --> 00:05:15.749 align:middle line:-1
<c.magenta>你可以使用这个API</c>

00:05:17.818 --> 00:05:20.320 align:middle line:-1
<c.magenta>现在让我们接着讲硬件解码功能</c>

00:05:20.387 --> 00:05:23.190 align:middle line:-1
<c.magenta>如果你想在播放过程中省电</c>

00:05:23.257 --> 00:05:26.426 align:middle line:-1
<c.magenta>你想在支持硬件解码的系统上播放</c>

00:05:26.960 --> 00:05:29.530 align:middle line:-1
<c.magenta>这也会给你最好的解码性能</c>

00:05:29.863 --> 00:05:32.399 align:middle line:-2
<c.magenta>所以我们有一个新的VideoToolbox API</c>
<c.magenta>你可以查询</c>

00:05:32.799 --> 00:05:35.435 align:middle line:-1
<c.magenta>这个编解码器是否支持硬件解码？</c>

00:05:35.502 --> 00:05:36.803 align:middle line:-1
<c.magenta>在这里我要展示的是HEVC</c>

00:05:36.870 --> 00:05:39.006 align:middle line:-2
<c.magenta>但你仍然可以</c>
<c.magenta>在其它编解码器中使用</c>

00:05:40.741 --> 00:05:44.511 align:middle line:-2
<c.magenta>现在对于播放有最后一个问题</c>
<c.magenta>我应该用哪种编解码器来播放？</c>

00:05:45.112 --> 00:05:48.849 align:middle line:-1
<c.magenta>我要选择H.264或HEVC？</c>

00:05:49.550 --> 00:05:52.953 align:middle line:-1
<c.magenta>嗯 如果你担心提交最兼容的内容</c>

00:05:53.020 --> 00:05:55.789 align:middle line:-1
<c.magenta>或想提交一个能在各处适用的资产</c>

00:05:56.623 --> 00:05:58.125 align:middle line:-1
<c.magenta>请选择H.264</c>

00:05:58.559 --> 00:06:01.161 align:middle line:-2
<c.magenta>我们的平台已经</c>
<c.magenta>支持这种格式长达10多年了</c>

00:05:58.559 --> 00:06:01.161 align:middle line:-2
<c.magenta>我们的平台已经</c>
<c.magenta>支持这种格式长达10多年了</c>

00:06:01.228 --> 00:06:04.965 align:middle line:-1
<c.magenta>在第三方生态系统中被广泛采用</c>

00:06:05.666 --> 00:06:08.135 align:middle line:-1
<c.magenta>然而如果你想获得最小的文件尺寸</c>

00:06:08.202 --> 00:06:10.938 align:middle line:-2
<c.magenta>和最新、最强的编码技术</c>
<c.magenta>如10位元</c>

00:06:11.004 --> 00:06:12.172 align:middle line:-1
<c.magenta>请选择HEVC</c>

00:06:12.472 --> 00:06:15.008 align:middle line:-1
<c.magenta>你需要决定哪个适用于你的应用</c>

00:06:16.543 --> 00:06:18.512 align:middle line:-1
<c.magenta>接着让我们来看捕捉</c>

00:06:19.813 --> 00:06:24.484 align:middle line:-2
<c.magenta>那么捕捉HEVC支持AVFoundation</c>
<c.magenta>并且我们支持MPEG-4</c>

00:06:24.551 --> 00:06:26.820 align:middle line:-1
<c.magenta>以及QuickTime文件格式作为目的文件</c>

00:06:28.655 --> 00:06:33.527 align:middle line:-2
<c.magenta>我们在A10芯片上支持HEVC捕捉</c>
<c.magenta>那么也就是iPhone 7</c>

00:06:33.961 --> 00:06:35.696 align:middle line:-1
<c.magenta>现在让我们来看一下…</c>

00:06:35.896 --> 00:06:38.832 align:middle line:-1
<c.magenta>你们中许多人都已经很熟悉的捕捉图表</c>

00:06:39.566 --> 00:06:41.502 align:middle line:-1
<c.magenta>（捕捉HEVC电影）</c>

00:06:41.568 --> 00:06:45.272 align:middle line:-2
<c.magenta>一开始是一个AVCaptureSession</c>
<c.magenta>需要从某个地方获取数据</c>

00:06:47.975 --> 00:06:50.644 align:middle line:-2
<c.magenta>你创建一个AVCaptureDevice</c>
<c.magenta>并将其添加为输入</c>

00:06:51.778 --> 00:06:53.146 align:middle line:-1
<c.magenta>然后数据需要进入某处</c>

00:06:53.213 --> 00:06:56.116 align:middle line:-2
<c.magenta>在本例中 你使用电影文件</c>
<c.magenta>来压缩和写输出文件</c>

00:06:57.518 --> 00:07:00.020 align:middle line:-1
<c.magenta>这些都与AVCaptureConnection相关联</c>

00:06:57.518 --> 00:07:00.020 align:middle line:-1
<c.magenta>这些都与AVCaptureConnection相关联</c>

00:07:00.687 --> 00:07:04.024 align:middle line:-2
<c.magenta>并且这将创建你的电影文件</c>
<c.magenta>那么让我们把这个转化为代码</c>

00:07:04.925 --> 00:07:06.894 align:middle line:-2
<c.magenta>你们中的许多人很可能</c>
<c.magenta>在你们的应用中采纳了这个</c>

00:07:06.960 --> 00:07:09.830 align:middle line:-2
<c.magenta>首先创建一个AVCaptureConnect</c>
<c.magenta>或AVCaptureSession</c>

00:07:10.130 --> 00:07:12.399 align:middle line:-1
<c.magenta>在这里我们做了一个4k捕捉会话</c>

00:07:13.901 --> 00:07:16.570 align:middle line:-2
<c.magenta>然后你创建AVCaptureDevice</c>
<c.magenta>并将其添加为输入</c>

00:07:18.739 --> 00:07:20.073 align:middle line:-1
<c.magenta>创建你的MovieFileOutput</c>

00:07:20.140 --> 00:07:23.210 align:middle line:-2
<c.magenta>并且这会实现写压缩文件</c>
<c.magenta>并将其添加为输出</c>

00:07:24.211 --> 00:07:27.414 align:middle line:0
<c.magenta>然后startRunning和startRecording</c>
<c.magenta>然后我们就进行捕捉</c>

00:07:27.481 --> 00:07:28.949 align:middle line:0
<c.magenta>那么我们要如何选择使用HEVC呢？</c>

00:07:30.817 --> 00:07:32.586 align:middle line:-1
<c.magenta>嗯 在iOS 10中 我们添加了API</c>

00:07:32.786 --> 00:07:35.422 align:middle line:-1
<c.magenta>在捕捉过程中检测可用视频编解码器</c>

00:07:35.689 --> 00:07:38.926 align:middle line:-2
<c.magenta>在iOS 11中有一个新功能</c>
<c.magenta>可检测是否包含HEVC</c>

00:07:39.593 --> 00:07:42.162 align:middle line:-1
<c.magenta>在所支持的设备上 它将返回真</c>

00:07:42.229 --> 00:07:46.333 align:middle line:-1
<c.magenta>并且你可以继续并在输出设置中使用</c>

00:07:47.534 --> 00:07:49.469 align:middle line:-2
<c.magenta>且如果设备部支持它</c>
<c.magenta>你可以继续并退到</c>

00:07:49.536 --> 00:07:51.205 align:middle line:-1
<c.magenta>其它编解码器 如H.264</c>

00:07:51.872 --> 00:07:53.740 align:middle line:-1
<c.magenta>现在我想在这里提示一个重点</c>

00:07:53.807 --> 00:07:56.109 align:middle line:-2
<c.magenta>那个顺序是否</c>
<c.magenta>与availableVideoCodecTypes有关</c>

00:07:56.176 --> 00:07:58.478 align:middle line:-2
<c.magenta>并且为此我们将HEVC</c>
<c.magenta>作为了第一选项</c>

00:07:58.912 --> 00:08:02.783 align:middle line:-2
<c.magenta>那么意思是如果你什么也不做</c>
<c.magenta>你将捕捉HEVC内容</c>

00:07:58.912 --> 00:08:02.783 align:middle line:-2
<c.magenta>那么意思是如果你什么也不做</c>
<c.magenta>你将捕捉HEVC内容</c>

00:08:03.183 --> 00:08:05.786 align:middle line:-2
<c.magenta>我们真的希望能让你熟悉</c>
<c.magenta>对这种内容的处理</c>

00:08:06.753 --> 00:08:08.422 align:middle line:-1
<c.magenta>现在让我们来看Live Photos</c>

00:08:09.656 --> 00:08:13.594 align:middle line:-2
<c.magenta>那么我们在这里有同样的捕捉图表</c>
<c.magenta>但我们要使用AVCapturePhotoOutput</c>

00:08:13.827 --> 00:08:16.230 align:middle line:-2
<c.magenta>那会拍出</c>
<c.magenta>我们喜欢和欣赏的Live Photos</c>

00:08:16.563 --> 00:08:19.333 align:middle line:-2
<c.magenta>那么首先让我们</c>
<c.magenta>看一些Live Photo的新改进</c>

00:08:19.399 --> 00:08:20.667 align:middle line:-1
<c.magenta>我们去年完成的</c>

00:08:21.702 --> 00:08:23.403 align:middle line:-1
<c.magenta>我们现在支持视频稳定性</c>

00:08:23.470 --> 00:08:25.639 align:middle line:-2
<c.magenta>所以在Live Photo播放过程中</c>
<c.magenta>不再有摇晃的情况</c>

00:08:26.006 --> 00:08:29.243 align:middle line:-2
<c.magenta>在捕捉Live Photo的过程中</c>
<c.magenta>也不再暂停音乐播放了</c>

00:08:29.543 --> 00:08:33.046 align:middle line:-2
<c.magenta>并且我们支持更流畅的Live Photo</c>
<c.magenta>最高可达每秒30帧</c>

00:08:34.248 --> 00:08:37.017 align:middle line:-2
<c.magenta>那么让我们通过Live Photo</c>
<c.magenta>看一下HEVC的捕捉</c>

00:08:38.217 --> 00:08:40.087 align:middle line:-1
<c.magenta>那么在iOS 11中有新API</c>

00:08:40.153 --> 00:08:42.823 align:middle line:-2
<c.magenta>你可以创建</c>
<c.magenta>availableLivePhotoVideo CodecTypes</c>

00:08:43.890 --> 00:08:48.228 align:middle line:-2
<c.magenta>看它是否包含HEVC</c>
<c.magenta>在所支持的设备上它将返回真</c>

00:08:49.730 --> 00:08:51.064 align:middle line:-1
<c.magenta>然后如果它支持 继续并使用它</c>

00:08:51.131 --> 00:08:54.168 align:middle line:-2
<c.magenta>如果不支持 你可以退回到另一个</c>
<c.magenta>现有的编解码器 如H.264</c>

00:08:54.935 --> 00:08:58.038 align:middle line:-1
<c.magenta>我还想提示一点 这里有同样的顾虑</c>

00:08:58.105 --> 00:09:00.374 align:middle line:-2
<c.magenta>即那个顺序</c>
<c.magenta>与availableVideoCodecTypes有关</c>

00:08:58.105 --> 00:09:00.374 align:middle line:-2
<c.magenta>即那个顺序</c>
<c.magenta>与availableVideoCodecTypes有关</c>

00:09:00.440 --> 00:09:02.910 align:middle line:-1
<c.magenta>为此我们将HEVC作为第一选项</c>

00:09:03.677 --> 00:09:07.481 align:middle line:-2
<c.magenta>如果你什么也不做</c>
<c.magenta>你将捕捉HEVC Live Photo</c>

00:09:08.315 --> 00:09:09.783 align:middle line:-1
<c.magenta>你可能在这里感知到了一种模式</c>

00:09:09.850 --> 00:09:12.653 align:middle line:-2
<c.magenta>我们真的很想</c>
<c.magenta>让你熟悉对这种内容的处理</c>

00:09:14.855 --> 00:09:17.491 align:middle line:0
<c.magenta>现在让我们来看定制性最强的捕捉图表</c>

00:09:17.891 --> 00:09:21.428 align:middle line:0
<c.magenta>有AVCaptureVideoDataOutput</c>
<c.magenta>和AVAssetWriter</c>

00:09:21.995 --> 00:09:24.932 align:middle line:0
<c.magenta>如果你想在某种程度上</c>
<c.magenta>修改样本缓冲 请使用这个</c>

00:09:24.998 --> 00:09:27.634 align:middle line:0
<c.magenta>也许你可能会实施</c>
<c.magenta>一些很酷的筛选操作</c>

00:09:29.169 --> 00:09:32.406 align:middle line:0
<c.magenta>通过为HEVC配置AssetWriter</c>
<c.magenta>你有两个选项</c>

00:09:32.940 --> 00:09:35.375 align:middle line:0
<c.magenta>那么你可以配置自定义输出设置</c>

00:09:35.442 --> 00:09:37.344 align:middle line:0
<c.magenta>明确指定HEVC</c>

00:09:37.678 --> 00:09:40.380 align:middle line:0
<c.magenta>或视频数据输出会给你推荐那些设置</c>

00:09:40.447 --> 00:09:42.082 align:middle line:0
<c.magenta>我们推荐这个API</c>

00:09:42.749 --> 00:09:43.984 align:middle line:0
<c.magenta>iOS 7添加了</c>

00:09:44.051 --> 00:09:46.153 align:middle line:0
<c.magenta>recommendedVideoSettings</c>
<c.magenta>ForAssetWriter</c>

00:09:46.220 --> 00:09:48.121 align:middle line:0
<c.magenta>现在这个总是推荐H.264</c>

00:09:48.322 --> 00:09:50.657 align:middle line:0
<c.magenta>所以如果你要坚持使用H.264</c>
<c.magenta>也没问题</c>

00:09:50.858 --> 00:09:53.994 align:middle line:0
<c.magenta>然而在iOS 11中</c>
<c.magenta>我们添加了新API 你们可以</c>

00:09:54.061 --> 00:09:55.462 align:middle line:0
<c.magenta>传入编解码器类型</c>

00:09:55.529 --> 00:09:59.266 align:middle line:0
<c.magenta>我们将在所支持的设备上针对</c>
<c.magenta>该编解码器类型给你提供推荐设置</c>

00:10:00.200 --> 00:10:03.270 align:middle line:-1
<c.magenta>接着让我们来看导出和转码相关的内容</c>

00:10:07.274 --> 00:10:11.345 align:middle line:-2
<c.magenta>那么你可以通过AVFoundation</c>
<c.magenta>和VideoToolbox转码为HEVC</c>

00:10:11.712 --> 00:10:15.315 align:middle line:-2
<c.magenta>并且我们支持MPEG-4和QuickTime</c>
<c.magenta>文件格式作为目的文件</c>

00:10:15.716 --> 00:10:17.618 align:middle line:-1
<c.magenta>在这里需要选择加入API</c>

00:10:20.320 --> 00:10:22.422 align:middle line:-1
<c.magenta>在macOS和iOS上我们支持HEVC编码</c>

00:10:22.489 --> 00:10:25.759 align:middle line:-2
<c.magenta>现在让我们来看一下</c>
<c.magenta>哪些支持HEVC硬件编码</c>

00:10:27.327 --> 00:10:30.264 align:middle line:-2
<c.magenta>那么我们在A10融合芯片中</c>
<c.magenta>有一个8-位元硬件编码器</c>

00:10:30.330 --> 00:10:31.565 align:middle line:-1
<c.magenta>这是iPhone 7</c>

00:10:32.032 --> 00:10:34.168 align:middle line:-2
<c.magenta>我们在macOS上</c>
<c.magenta>支持8-位元硬件编码</c>

00:10:34.234 --> 00:10:36.537 align:middle line:-1
<c.magenta>在第6代因特尔处理器上</c>

00:10:36.837 --> 00:10:40.174 align:middle line:-2
<c.magenta>这是Skylake系列</c>
<c.magenta>这是带触摸条的MacBook Pro</c>

00:10:40.541 --> 00:10:44.178 align:middle line:-2
<c.magenta>在macOS上 我们有一个特别的</c>
<c.magenta>10-位元非即时时间</c>

00:10:44.244 --> 00:10:46.346 align:middle line:-1
<c.magenta>高质量软件编码器 你可以使用</c>

00:10:46.413 --> 00:10:48.115 align:middle line:-1
<c.magenta>我们稍后再讲一下这个</c>

00:10:49.082 --> 00:10:51.985 align:middle line:-1
<c.magenta>现在让我们先看最高层级的导出API</c>

00:10:52.786 --> 00:10:55.255 align:middle line:-1
<c.magenta>即通过AVAssetExportSession转码</c>

00:10:56.323 --> 00:10:57.991 align:middle line:-1
<c.magenta>那么通过这个 你可以提供一个资产</c>

00:10:58.058 --> 00:11:00.360 align:middle line:-2
<c.magenta>然后你选择一个预设</c>
<c.magenta>我们将会替你完成全部操作</c>

00:10:58.058 --> 00:11:00.360 align:middle line:-2
<c.magenta>然后你选择一个预设</c>
<c.magenta>我们将会替你完成全部操作</c>

00:11:00.427 --> 00:11:03.497 align:middle line:-1
<c.magenta>包括压缩并且生产一个输出电影</c>

00:11:05.499 --> 00:11:08.068 align:middle line:-2
<c.magenta>那么对于现有预设来说</c>
<c.magenta>行为并没有任何变更</c>

00:11:08.135 --> 00:11:10.604 align:middle line:-2
<c.magenta>如果你正在使用</c>
<c.magenta>现有的基于尺寸的预设</c>

00:11:10.671 --> 00:11:14.041 align:middle line:-2
<c.magenta>它通常是提供H.264的</c>
<c.magenta>它仍然会这样做</c>

00:11:14.474 --> 00:11:16.009 align:middle line:-1
<c.magenta>我们已经在这里添加了新预设</c>

00:11:16.510 --> 00:11:20.714 align:middle line:-2
<c.magenta>那些将会从H.264</c>
<c.magenta>或任何其它编解码器转为HEVC</c>

00:11:21.148 --> 00:11:23.116 align:middle line:-1
<c.magenta>并且这些将生成更小尺寸的AVAssets</c>

00:11:23.350 --> 00:11:26.286 align:middle line:-1
<c.magenta>有时候最高可达40% 质量不变</c>

00:11:27.788 --> 00:11:31.592 align:middle line:-2
<c.magenta>现在让我们把级别降低一级</c>
<c.magenta>看通过AVAssetWriter进行压缩的堆栈</c>

00:11:33.827 --> 00:11:37.264 align:middle line:-2
<c.magenta>那么AVAssetWriter</c>
<c.magenta>你要么自己生成样本缓冲</c>

00:11:37.331 --> 00:11:39.533 align:middle line:-1
<c.magenta>要么从另一个API中得到样本缓冲</c>

00:11:39.600 --> 00:11:41.668 align:middle line:-2
<c.magenta>比如VideoDataOutput</c>
<c.magenta>或AVAssetWriter</c>

00:11:41.869 --> 00:11:44.972 align:middle line:-1
<c.magenta>并且AVAssetWriter用于压缩和写文件</c>

00:11:46.039 --> 00:11:49.510 align:middle line:-2
<c.magenta>正如我之前所说过的</c>
<c.magenta>对于AVAssetWriter有两个选项</c>

00:11:49.576 --> 00:11:52.179 align:middle line:-1
<c.magenta>你可以明确设置自定义输出设置</c>

00:11:52.246 --> 00:11:55.315 align:middle line:-1
<c.magenta>在本例中我们明确使用HEVC</c>

00:11:55.382 --> 00:11:57.818 align:middle line:-1
<c.magenta>你还可以指定你的位速率和尺寸</c>

00:11:57.885 --> 00:12:00.921 align:middle line:-2
<c.magenta>或你可以使用我们的便利设置</c>
<c.magenta>在捕捉过程中</c>

00:11:57.885 --> 00:12:00.921 align:middle line:-2
<c.magenta>或你可以使用我们的便利设置</c>
<c.magenta>在捕捉过程中</c>

00:12:00.988 --> 00:12:02.189 align:middle line:-1
<c.magenta>你可以使用VideoDataOutput</c>

00:12:02.256 --> 00:12:05.058 align:middle line:-2
<c.magenta>对于一般性编码 你可以使用</c>
<c.magenta>AVOutputSettingsAssistant</c>

00:12:05.125 --> 00:12:06.727 align:middle line:-1
<c.magenta>我们在这里添加了两个新预设</c>

00:12:06.793 --> 00:12:09.930 align:middle line:-2
<c.magenta>在所支持的设备上</c>
<c.magenta>将返回HEVC输出设置</c>

00:12:11.064 --> 00:12:14.401 align:middle line:-2
<c.magenta>现在如果你正在创建</c>
<c.magenta>你自己的自定义输出设置</c>

00:12:14.468 --> 00:12:15.802 align:middle line:-1
<c.magenta>可能会很棘手</c>

00:12:15.869 --> 00:12:18.272 align:middle line:-2
<c.magenta>那么并不是所有的编码器</c>
<c.magenta>都支持全部的输出设置</c>

00:12:19.006 --> 00:12:21.742 align:middle line:0
<c.magenta>我们在iOS 11和macOS High Sierra中</c>
<c.magenta>修复了这个问题</c>

00:12:21.808 --> 00:12:23.610 align:middle line:0
<c.magenta>所以现在你可以向编码器</c>
<c.magenta>查询所支持的属性</c>

00:12:23.677 --> 00:12:25.312 align:middle line:0
<c.magenta>用于输出设置</c>

00:12:26.079 --> 00:12:28.148 align:middle line:0
<c.magenta>为此你要在这里传入HEVC</c>

00:12:28.215 --> 00:12:31.618 align:middle line:0
<c.magenta>它将返回编码器ID</c>
<c.magenta>以及一份所支持属性的列表</c>

00:12:32.152 --> 00:12:35.656 align:middle line:0
<c.magenta>编码器ID是那个编码器的唯一标识符</c>

00:12:36.356 --> 00:12:39.660 align:middle line:0
<c.magenta>然后就能在输出设置中</c>
<c.magenta>指定属性和编码器ID</c>

00:12:39.726 --> 00:12:42.896 align:middle line:0
<c.magenta>你就可以确保它可以用于压缩</c>

00:12:43.397 --> 00:12:46.066 align:middle line:0
<c.magenta>现在让我们来看最低层级的压缩界面</c>

00:12:46.466 --> 00:12:49.203 align:middle line:-2
<c.magenta>这是通过</c>
<c.magenta>VTCompressionSession压缩的样本</c>

00:12:49.670 --> 00:12:50.871 align:middle line:-1
<c.magenta>正如AssetWriter一样</c>

00:12:50.938 --> 00:12:52.573 align:middle line:-1
<c.magenta>你可能会自己生成样本</c>

00:12:52.639 --> 00:12:55.175 align:middle line:0
<c.magenta>或从另一个API中获取</c>

00:12:55.242 --> 00:12:59.580 align:middle line:0
<c.magenta>VTCompressionsSession压缩它们</c>
<c.magenta>并生产已压缩的媒体数据</c>

00:13:01.682 --> 00:13:05.786 align:middle line:0
<c.magenta>那么要通过HEVC编码器</c>
<c.magenta>创建一个压缩会话非常简单</c>

00:13:05.853 --> 00:13:09.456 align:middle line:0
<c.magenta>在本例中 我们创建了一个</c>
<c.magenta>压缩成了H.264</c>

00:13:09.723 --> 00:13:11.758 align:middle line:0
<c.magenta>让我们把它转为HEVC</c>

00:13:12.659 --> 00:13:14.761 align:middle line:0
<c.magenta>好了 现在我们正在用HEVC压缩</c>

00:13:14.828 --> 00:13:16.930 align:middle line:0
<c.magenta>通过VideoToolbox 所以这非常简单</c>

00:13:17.664 --> 00:13:20.334 align:middle line:0
<c.magenta>现在让我们看一些</c>
<c.magenta>macOS上的注意事项</c>

00:13:21.668 --> 00:13:23.737 align:middle line:-1
<c.magenta>对于macOS上的最佳编码性能</c>

00:13:23.804 --> 00:13:25.439 align:middle line:-1
<c.magenta>你想选择加入到硬件中的</c>

00:13:25.506 --> 00:13:29.343 align:middle line:-2
<c.magenta>这将使用硬件 当可用时</c>
<c.magenta>如果不可用 就退回使用软件</c>

00:13:29.776 --> 00:13:30.878 align:middle line:-1
<c.magenta>要实现这个目的</c>

00:13:31.845 --> 00:13:35.048 align:middle line:-2
<c.magenta>设置EnableHardwareAccelerated</c>
<c.magenta>VideoEncoder属性…</c>

00:13:35.115 --> 00:13:37.551 align:middle line:-1
<c.magenta>在encoderSpecification中属性设为真</c>

00:13:38.819 --> 00:13:41.154 align:middle line:-2
<c.magenta>然后将其传入</c>
<c.magenta>VTCompressionSessionCreate中</c>

00:13:43.790 --> 00:13:47.361 align:middle line:-2
<c.magenta>现在如果你正在做即时编码</c>
<c.magenta>你总会需要硬件</c>

00:13:47.427 --> 00:13:49.196 align:middle line:-1
<c.magenta>并且永远不会退回去使用软件</c>

00:13:49.530 --> 00:13:52.199 align:middle line:-1
<c.magenta>为此你要把encoderSpecification</c>

00:13:52.266 --> 00:13:54.801 align:middle line:-2
<c.magenta>RequireHardwareAccelarated</c>
<c.magenta>VideoEncoder设为真</c>

00:13:56.303 --> 00:13:58.305 align:middle line:-1
<c.magenta>然后把它传入encoderSpecification中</c>

00:13:58.372 --> 00:14:01.375 align:middle line:-2
<c.magenta>在支持硬件的系统上</c>
<c.magenta>这将会成功</c>

00:13:58.372 --> 00:14:01.375 align:middle line:-2
<c.magenta>在支持硬件的系统上</c>
<c.magenta>这将会成功</c>

00:14:01.441 --> 00:14:04.845 align:middle line:-2
<c.magenta>但系统上的硬件如果只支持软件编码</c>
<c.magenta>将会导致失败</c>

00:14:05.913 --> 00:14:09.049 align:middle line:-2
<c.magenta>好了 现在让我们继续看一些</c>
<c.magenta>高级编码相关的话题</c>

00:14:09.116 --> 00:14:10.450 align:middle line:-1
<c.magenta>第一个是位深</c>

00:14:11.185 --> 00:14:13.854 align:middle line:-2
<c.magenta>那么如果你从曾在用户界面中</c>
<c.magenta>看到过一个漂亮的渐变</c>

00:14:13.921 --> 00:14:17.357 align:middle line:-2
<c.magenta>或者漂亮的日出或日落</c>
<c.magenta>你会注意到它在现实生活中看起来</c>

00:14:17.558 --> 00:14:20.661 align:middle line:-1
<c.magenta>与电影中并不是完全一样的</c>

00:14:21.261 --> 00:14:23.130 align:middle line:-1
<c.magenta>所以你可能会看到这些色彩限制效果</c>

00:14:23.197 --> 00:14:25.966 align:middle line:-1
<c.magenta>在你电影的视频版中</c>

00:14:26.533 --> 00:14:28.769 align:middle line:-2
<c.magenta>这是因为通过8-位元</c>
<c.magenta>我们没有足够的精确度</c>

00:14:28.836 --> 00:14:31.471 align:middle line:-1
<c.magenta>来呈现色彩之间微妙的不同点</c>

00:14:31.538 --> 00:14:33.774 align:middle line:-1
<c.magenta>现在好消息是10-位元可以实现了</c>

00:14:33.841 --> 00:14:36.076 align:middle line:-1
<c.magenta>所以你会获得这些非常漂亮的渐变</c>

00:14:36.777 --> 00:14:40.180 align:middle line:-2
<c.magenta>现在通过我们的macOS软件编码器</c>
<c.magenta>我们实际上可以支持10-位元编码</c>

00:14:40.914 --> 00:14:43.183 align:middle line:-1
<c.magenta>那么首先查看是否支持该属性</c>

00:14:43.250 --> 00:14:47.521 align:middle line:-2
<c.magenta>如果支持 继续并使用我们的</c>
<c.magenta>HEVC Main10为软件编码器</c>

00:14:48.488 --> 00:14:50.791 align:middle line:-2
<c.magenta>并且我们想确保你的整个管道</c>
<c.magenta>都是10-位元</c>

00:14:50.858 --> 00:14:54.228 align:middle line:-2
<c.magenta>我们不想让你从8-位元变为10-位元</c>
<c.magenta>然后再变为8-位元</c>

00:14:54.294 --> 00:14:55.596 align:middle line:-1
<c.magenta>因为那会降低精确度</c>

00:14:55.662 --> 00:14:57.764 align:middle line:-2
<c.magenta>所以我们添加了</c>
<c.magenta>新CoreVideo像素缓冲格式</c>

00:14:57.831 --> 00:14:59.700 align:middle line:-1
<c.magenta>以确保你可以保持在10-位元中</c>

00:14:59.867 --> 00:15:00.834 align:middle line:-1
<c.magenta>这里列出了一个</c>

00:14:59.867 --> 00:15:00.834 align:middle line:-1
<c.magenta>这里列出了一个</c>

00:15:01.268 --> 00:15:03.504 align:middle line:-2
<c.magenta>那么现在 你第一次可以</c>
<c.magenta>以10-位元进行渲染</c>

00:15:03.570 --> 00:15:05.839 align:middle line:-2
<c.magenta>以10-位元进行编码</c>
<c.magenta>以10-位元进行解码</c>

00:15:06.006 --> 00:15:07.941 align:middle line:-1
<c.magenta>而且在iOS和macOS上有史以来首次</c>

00:15:08.008 --> 00:15:11.378 align:middle line:-2
<c.magenta>我们的显示屏管道也支持10-位元</c>
<c.magenta>所以我们把它应用到了极致</c>

00:15:15.916 --> 00:15:17.584 align:middle line:-1
<c.magenta>现在让我们看看第二个高级话题</c>

00:15:17.651 --> 00:15:19.286 align:middle line:-1
<c.magenta>即阶梯式编码</c>

00:15:19.987 --> 00:15:21.588 align:middle line:-1
<c.magenta>要了解这个信息</c>

00:15:21.655 --> 00:15:24.291 align:middle line:-1
<c.magenta>我们需要稍微看一下视频编码101</c>

00:15:25.125 --> 00:15:27.327 align:middle line:-1
<c.magenta>视频压缩有三个主要的帧类型</c>

00:15:27.394 --> 00:15:28.795 align:middle line:-1
<c.magenta>第一个是I Frame</c>

00:15:29.229 --> 00:15:30.864 align:middle line:-1
<c.magenta>你可以把I Frame看做是一个图片文件</c>

00:15:30.931 --> 00:15:32.966 align:middle line:-1
<c.magenta>可以被独立解码</c>

00:15:34.001 --> 00:15:35.469 align:middle line:-1
<c.magenta>然后有P Frame</c>

00:15:35.536 --> 00:15:37.604 align:middle line:-1
<c.magenta>P Frame指的是之前的帧</c>

00:15:37.771 --> 00:15:39.273 align:middle line:-1
<c.magenta>所以可把它们看作是一个单差</c>

00:15:39.339 --> 00:15:41.942 align:middle line:-2
<c.magenta>并且它们只包含</c>
<c.magenta>不存在于之前帧中的信息</c>

00:15:42.442 --> 00:15:44.278 align:middle line:-1
<c.magenta>现在还有它们的堂弟B Frame</c>

00:15:44.745 --> 00:15:46.980 align:middle line:-1
<c.magenta>B Frame指的是之前和将来的帧</c>

00:15:47.047 --> 00:15:49.383 align:middle line:-1
<c.magenta>它们就像一个奇特的多方向差</c>

00:15:49.449 --> 00:15:51.685 align:middle line:-1
<c.magenta>所以它们只包含不存在于</c>

00:15:51.752 --> 00:15:53.353 align:middle line:-1
<c.magenta>引用它们的帧中的信息</c>

00:15:53.520 --> 00:15:57.257 align:middle line:-2
<c.magenta>现在假装我们有一个解码器</c>
<c.magenta>每秒只能处理30帧</c>

00:15:57.324 --> 00:16:00.060 align:middle line:-1
<c.magenta>假如我们有一个每秒240帧的内容</c>

00:15:57.324 --> 00:16:00.060 align:middle line:-1
<c.magenta>假如我们有一个每秒240帧的内容</c>

00:16:00.561 --> 00:16:02.296 align:middle line:-1
<c.magenta>嗯 那意味着我们需要失掉一些帧</c>

00:16:02.362 --> 00:16:04.698 align:middle line:-1
<c.magenta>在我们解码之前 因为它跟不上</c>

00:16:04.765 --> 00:16:06.066 align:middle line:-1
<c.magenta>我们何时可以掉帧呢？</c>

00:16:07.000 --> 00:16:09.870 align:middle line:0
<c.magenta>我们可以当另一帧</c>
<c.magenta>不依赖于这一帧时掉帧</c>

00:16:10.137 --> 00:16:12.105 align:middle line:0
<c.magenta>那么在本例中</c>
<c.magenta>我们失掉最后一个P Frame</c>

00:16:12.172 --> 00:16:15.475 align:middle line:0
<c.magenta>因为它指的是另一帧</c>
<c.magenta>而没有帧指向它</c>

00:16:15.876 --> 00:16:17.511 align:middle line:0
<c.magenta>那么让我们继续并失掉它</c>

00:16:17.578 --> 00:16:18.946 align:middle line:0
<c.magenta>我们也可以失掉B Frame</c>

00:16:19.012 --> 00:16:22.049 align:middle line:0
<c.magenta>因为它指的是其它帧</c>
<c.magenta>而没有帧指向它</c>

00:16:22.583 --> 00:16:24.084 align:middle line:0
<c.magenta>那么让我们继续并失掉它</c>

00:16:24.451 --> 00:16:28.522 align:middle line:0
<c.magenta>现在让我们看一个实际的例子</c>
<c.magenta>一个每秒编码240帧的内容</c>

00:16:29.823 --> 00:16:31.358 align:middle line:-1
<c.magenta>那么这是一个典型的编码机制</c>

00:16:31.425 --> 00:16:34.394 align:middle line:-1
<c.magenta>用于当通过低端设备创建可兼容内容时</c>

00:16:35.262 --> 00:16:37.931 align:middle line:-2
<c.magenta>那么比如说</c>
<c.magenta>当编码每秒240帧的内容时</c>

00:16:37.998 --> 00:16:41.068 align:middle line:-1
<c.magenta>每八帧就可以失掉七帧 留下一帧</c>

00:16:41.401 --> 00:16:43.971 align:middle line:-2
<c.magenta>这就在播放时</c>
<c.magenta>给我们提供了许多灵活性</c>

00:16:44.037 --> 00:16:47.875 align:middle line:-2
<c.magenta>在支持每秒120帧解码的设备上</c>
<c.magenta>我们可以处理那个</c>

00:16:47.941 --> 00:16:50.811 align:middle line:-2
<c.magenta>在只支持每秒30帧的设备上</c>
<c.magenta>我们也可以播放</c>

00:16:51.678 --> 00:16:53.680 align:middle line:-1
<c.magenta>现在让我们添加我们的帧引用</c>

00:16:53.747 --> 00:16:56.083 align:middle line:-2
<c.magenta>因为这些帧是可失掉的</c>
<c.magenta>它们不能互相指向</c>

00:16:56.149 --> 00:16:58.452 align:middle line:-1
<c.magenta>并且它们全部指向不可失掉的帧</c>

00:16:58.752 --> 00:17:00.387 align:middle line:-1
<c.magenta>现在你们中有压缩经验的人</c>

00:16:58.752 --> 00:17:00.387 align:middle line:-1
<c.magenta>现在你们中有压缩经验的人</c>

00:17:00.454 --> 00:17:02.256 align:middle line:-1
<c.magenta>应该已经发现了一个问题</c>

00:17:02.689 --> 00:17:06.292 align:middle line:-2
<c.magenta>那个压缩很别扭是否</c>
<c.magenta>因为我们不能指向临近的帧？</c>

00:17:06.359 --> 00:17:08.228 align:middle line:-1
<c.magenta>那么它们全部指向不可失掉的帧</c>

00:17:08.295 --> 00:17:09.262 align:middle line:-1
<c.magenta>可能发生了很多变更</c>

00:17:09.329 --> 00:17:11.832 align:middle line:-1
<c.magenta>在不可失掉的帧和可失掉的帧之间</c>

00:17:12.465 --> 00:17:14.568 align:middle line:-2
<c.magenta>好了 那么这是我们</c>
<c.magenta>要修复的第一个问题</c>

00:17:14.635 --> 00:17:17.671 align:middle line:-2
<c.magenta>现在让我们逐步来看</c>
<c.magenta>解码将至每秒30帧</c>

00:17:18.005 --> 00:17:20.941 align:middle line:-2
<c.magenta>那么首先</c>
<c.magenta>假如我们不能处理每秒240帧</c>

00:17:21.608 --> 00:17:23.143 align:middle line:-1
<c.magenta>让我们继续并失掉一些帧</c>

00:17:23.210 --> 00:17:25.512 align:middle line:-1
<c.magenta>那么在这里 我们要降到每秒240帧</c>

00:17:25.579 --> 00:17:29.550 align:middle line:-2
<c.magenta>假如我们仍然跟不上</c>
<c.magenta>我们需要降到每秒60帧</c>

00:17:29.616 --> 00:17:31.985 align:middle line:-2
<c.magenta>假如我们的解码器</c>
<c.magenta>每秒只能处理30帧</c>

00:17:32.052 --> 00:17:34.288 align:middle line:-1
<c.magenta>我们甚至每秒都不能处理60帧</c>

00:17:34.621 --> 00:17:36.657 align:middle line:-1
<c.magenta>那么我们继续并失掉这个最后的帧</c>

00:17:37.424 --> 00:17:40.194 align:middle line:-1
<c.magenta>现在 我真的要猜猜要失掉哪些帧</c>

00:17:40.260 --> 00:17:43.564 align:middle line:-2
<c.magenta>那么完全没有任何指示</c>
<c.magenta>关于我是否应该每两帧就失掉一帧</c>

00:17:43.630 --> 00:17:45.966 align:middle line:-1
<c.magenta>要么是前一帧 要么是后一帧</c>

00:17:46.366 --> 00:17:47.801 align:middle line:-1
<c.magenta>所以让我们也来修复一下这个问题</c>

00:17:49.169 --> 00:17:52.005 align:middle line:-2
<c.magenta>我们可以通过一个叫作</c>
<c.magenta>临时等级的概念来修复</c>

00:17:52.072 --> 00:17:55.843 align:middle line:-2
<c.magenta>这允许我们管理帧</c>
<c.magenta>关于要先失掉哪些帧</c>

00:17:56.210 --> 00:17:58.445 align:middle line:-1
<c.magenta>让我们继续并重新编码我们的内容</c>

00:18:00.848 --> 00:18:03.450 align:middle line:-1
<c.magenta>你已经看到了 这种方式更有条理</c>

00:18:03.517 --> 00:18:05.686 align:middle line:-1
<c.magenta>首先 我们把临时等级降到三</c>

00:18:05.752 --> 00:18:08.222 align:middle line:-1
<c.magenta>然后二 然后一 其中不需要任何猜测</c>

00:18:08.288 --> 00:18:09.389 align:middle line:-1
<c.magenta>所以这个很有帮助</c>

00:18:09.656 --> 00:18:11.658 align:middle line:-1
<c.magenta>现在让我们进行帧引用</c>

00:18:12.593 --> 00:18:14.661 align:middle line:-2
<c.magenta>你已经可以看到</c>
<c.magenta>这里有一个很大的不同点</c>

00:18:14.728 --> 00:18:16.997 align:middle line:-1
<c.magenta>引用帧是否更紧密了</c>

00:18:17.064 --> 00:18:20.634 align:middle line:-1
<c.magenta>它们经常指向它们的上一帧或下一帧</c>

00:18:20.701 --> 00:18:22.269 align:middle line:-1
<c.magenta>所以这真的改善了压缩</c>

00:18:22.936 --> 00:18:25.305 align:middle line:-2
<c.magenta>现在让我们逐步看一下</c>
<c.magenta>假如我们有同样的解码器</c>

00:18:25.372 --> 00:18:28.809 align:middle line:-2
<c.magenta>每秒只能处理30帧</c>
<c.magenta>我们需要失掉一些帧</c>

00:18:29.076 --> 00:18:32.379 align:middle line:-2
<c.magenta>嗯 其中不需要任何猜测</c>
<c.magenta>我们将临时等级降为三</c>

00:18:33.213 --> 00:18:34.982 align:middle line:-1
<c.magenta>现在我们降到了每秒120帧</c>

00:18:35.582 --> 00:18:39.086 align:middle line:-2
<c.magenta>让我们降到等级一</c>
<c.magenta>现在我们每秒60帧</c>

00:18:40.087 --> 00:18:43.323 align:middle line:-2
<c.magenta>现在等级是我们的解码器</c>
<c.magenta>实际上可以处理的等级</c>

00:18:43.390 --> 00:18:46.260 align:middle line:-1
<c.magenta>所以这就不需要猜到底要失掉哪些帧</c>

00:18:47.594 --> 00:18:48.996 align:middle line:-1
<c.magenta>让我们回顾所学到的内容</c>

00:18:49.062 --> 00:18:52.966 align:middle line:-2
<c.magenta>那么通过HEVC阶梯式编码</c>
<c.magenta>我们改进了临时可扩展性</c>

00:18:53.333 --> 00:18:55.769 align:middle line:-1
<c.magenta>有更明显的掉帧模式</c>

00:18:55.836 --> 00:18:58.272 align:middle line:-1
<c.magenta>并且它移除了需要失掉哪些帧的猜测</c>

00:18:58.772 --> 00:19:01.074 align:middle line:-1
<c.magenta>我们还改进了动作补偿</c>

00:18:58.772 --> 00:19:01.074 align:middle line:-1
<c.magenta>我们还改进了动作补偿</c>

00:19:01.408 --> 00:19:03.544 align:middle line:-1
<c.magenta>引用帧之间的距离更近了</c>

00:19:03.610 --> 00:19:07.281 align:middle line:-2
<c.magenta>所以我们可以更多地使用</c>
<c.magenta>其它帧的一部分 它还改善了压缩</c>

00:19:07.347 --> 00:19:09.082 align:middle line:-1
<c.magenta>我们还使用了文件注释</c>

00:19:09.149 --> 00:19:11.118 align:middle line:-1
<c.magenta>如果你们喜欢读说明书</c>

00:19:11.185 --> 00:19:14.154 align:middle line:-1
<c.magenta>请参看MPEG-4 第15部分的8.4章节</c>

00:19:14.621 --> 00:19:18.659 align:middle line:-2
<c.magenta>基本上 我们使用的是样本群</c>
<c.magenta>所以没有位元流解析为否 抱歉</c>

00:19:18.725 --> 00:19:21.728 align:middle line:-2
<c.magenta>我们用的是样本群</c>
<c.magenta>所以不必要通过解析位元流</c>

00:19:21.795 --> 00:19:24.231 align:middle line:-1
<c.magenta>来获取这个信息 所以这真的很有帮助</c>

00:19:24.798 --> 00:19:26.633 align:middle line:-1
<c.magenta>好的 我们要如何选择加入这个？</c>

00:19:27.267 --> 00:19:28.368 align:middle line:0
<c.magenta>你想选择加入这个</c>

00:19:28.435 --> 00:19:30.838 align:middle line:0
<c.magenta>如果你想创建兼容的高帧率内容</c>

00:19:30.904 --> 00:19:33.073 align:middle line:0
<c.magenta>你应该设置两个属性</c>

00:19:33.140 --> 00:19:35.642 align:middle line:0
<c.magenta>你要设置基础层和拍摄帧率</c>

00:19:36.143 --> 00:19:38.846 align:middle line:0
<c.magenta>首先查看你所使用的编码器是否支持</c>

00:19:38.912 --> 00:19:42.749 align:middle line:0
<c.magenta>然后设置BaseLayerFrameRate</c>
<c.magenta>这是临时等级0帧率</c>

00:19:42.983 --> 00:19:45.485 align:middle line:0
<c.magenta>在我们之前的例子中</c>
<c.magenta>这个是每秒30帧</c>

00:19:45.552 --> 00:19:47.221 align:middle line:0
<c.magenta>然后设置ExpectedFrameRate</c>

00:19:47.287 --> 00:19:50.290 align:middle line:0
<c.magenta>在我们之前的例子中</c>
<c.magenta>这个是每秒240帧</c>

00:19:50.858 --> 00:19:54.261 align:middle line:0
<c.magenta>必须解码基础层</c>
<c.magenta>并且我们可以解码或降到其它等级</c>

00:19:54.928 --> 00:19:57.564 align:middle line:0
<c.magenta>那么现在</c>
<c.magenta>你们都是阶梯式编码方面的专家了</c>

00:19:57.798 --> 00:20:00.367 align:middle line:0
<c.magenta>让我们把舞台交给Brad</c>
<c.magenta>让他讲讲与图片有关的内容</c>

00:19:57.798 --> 00:20:00.367 align:middle line:0
<c.magenta>让我们把舞台交给Brad</c>
<c.magenta>让他讲讲与图片有关的内容</c>

00:20:00.767 --> 00:20:01.635 align:middle line:-1
<c.magenta>谢谢大家</c>

00:20:07.207 --> 00:20:08.041 align:middle line:-1
<c.magenta>谢谢Erik</c>

00:20:08.108 --> 00:20:10.277 align:middle line:-2
<c.magenta>我是Brad Ford</c>
<c.magenta>我来自摄像软件团队</c>

00:20:10.644 --> 00:20:14.982 align:middle line:-2
<c.magenta>我要跟大家谈谈以HE开始的另一个</c>
<c.magenta>四个首字母缩写的词</c>

00:20:17.050 --> 00:20:19.386 align:middle line:-1
<c.magenta>这是接下来的演讲的大纲</c>

00:20:19.720 --> 00:20:21.989 align:middle line:-1
<c.magenta>首先我们要看高等级的HEIF</c>

00:20:22.856 --> 00:20:24.825 align:middle line:-1
<c.magenta>我们会从最低的等级开始</c>

00:20:24.892 --> 00:20:27.928 align:middle line:-1
<c.magenta>我们会讲到用HEIF读写文件</c>

00:20:28.462 --> 00:20:30.197 align:middle line:-1
<c.magenta>然后我们向上进入堆栈的顶层</c>

00:20:30.264 --> 00:20:34.134 align:middle line:-2
<c.magenta>谈谈如何使用一般性用例</c>
<c.magenta>和HEIF的常见情境</c>

00:20:34.701 --> 00:20:37.371 align:middle line:-2
<c.magenta>最后我们要谈一个</c>
<c.magenta>对我来说最亲爱、最亲密的话题</c>

00:20:37.437 --> 00:20:38.539 align:middle line:-1
<c.magenta>就是捕捉HEIF</c>

00:20:39.540 --> 00:20:41.041 align:middle line:-1
<c.magenta>首先 什么是HEIF？</c>

00:20:42.709 --> 00:20:46.580 align:middle line:-1
<c.magenta>HEIF是高频率图档格式</c>

00:20:46.947 --> 00:20:49.216 align:middle line:-1
<c.magenta>第二个F被隐藏起来了</c>

00:20:49.449 --> 00:20:50.784 align:middle line:-1
<c.magenta>你不用叫它HEIF…</c>

00:20:50.984 --> 00:20:51.818 align:middle line:-1
<c.magenta>…F</c>

00:20:52.052 --> 00:20:53.253 align:middle line:-1
<c.magenta>如果你这样做的话</c>

00:20:53.320 --> 00:20:55.122 align:middle line:-1
<c.magenta>你只会在你最亲密的朋友们面前丢脸</c>

00:20:55.722 --> 00:20:59.560 align:middle line:-2
<c.magenta>它是一种静止图像</c>
<c.magenta>和图像序列的现代容器格式</c>

00:21:00.127 --> 00:21:03.063 align:middle line:-1
<c.magenta>它是MPEG-H Part 12规格中的一种</c>

00:21:03.130 --> 00:21:06.867 align:middle line:-2
<c.magenta>为了满足你们的好奇心</c>
<c.magenta>它是在2013年被提议的</c>

00:21:07.201 --> 00:21:11.538 align:middle line:-2
<c.magenta>然后在2015年夏季获得批准</c>
<c.magenta>整整用了一年半</c>

00:21:12.339 --> 00:21:14.975 align:middle line:-1
<c.magenta>如果你们中有人了解标准机构</c>

00:21:15.209 --> 00:21:18.178 align:middle line:-2
<c.magenta>他们的一年半就跟我们</c>
<c.magenta>现实生活中的两天一样</c>

00:21:18.245 --> 00:21:19.947 align:middle line:-2
<c.magenta>所以你知道</c>
<c.magenta>它一定是了不起的规格</c>

00:21:21.315 --> 00:21:23.584 align:middle line:0
<c.magenta>我相信你们一定对技术细节最感兴趣</c>

00:21:23.650 --> 00:21:26.687 align:middle line:0
<c.magenta>这也是你们今天来这里的原因</c>
<c.magenta>那就是它的读法</c>

00:21:27.721 --> 00:21:28.555 align:middle line:0
<c.magenta>那么…</c>

00:21:32.593 --> 00:21:36.296 align:middle line:0
<c.magenta>我用了科学方法</c>
<c.magenta>我把我们楼层的全部工程师聚到一起</c>

00:21:36.630 --> 00:21:39.099 align:middle line:0
<c.magenta>各派系之间的投票差别很大</c>

00:21:39.499 --> 00:21:45.772 align:middle line:0
<c.magenta>德国人读“hife” 法国人读“eff”</c>
<c.magenta>俄罗斯人读“heef”</c>

00:21:45.839 --> 00:21:48.408 align:middle line:0
<c.magenta>而“heef”成为了最终的获胜者</c>

00:21:48.842 --> 00:21:53.080 align:middle line:-2
<c.magenta>这个“heef”</c>
<c.magenta>我几乎不能相信文件能有多大或多小</c>

00:21:53.981 --> 00:21:56.683 align:middle line:-1
<c.magenta>现在我的芬兰同事迅速指出</c>

00:21:56.750 --> 00:21:59.720 align:middle line:-2
<c.magenta>诺基亚研究人员</c>
<c.magenta>就是那些提出规格的人</c>

00:21:59.786 --> 00:22:04.591 align:middle line:-2
<c.magenta>所以芬兰读音应该获胜</c>
<c.magenta>那应该是1%的“hafe”</c>

00:21:59.786 --> 00:22:04.591 align:middle line:-2
<c.magenta>所以芬兰读音应该获胜</c>
<c.magenta>那应该是1%的“hafe”</c>

00:22:07.494 --> 00:22:09.830 align:middle line:-2
<c.magenta>嗯 对于我和我们楼层的工程师来说</c>
<c.magenta>我们要称它“heef”</c>

00:22:10.497 --> 00:22:12.566 align:middle line:-1
<c.magenta>它可以使用HEVC内部编码</c>

00:22:12.633 --> 00:22:16.537 align:middle line:-2
<c.magenta>不出所料地压缩比有20年</c>
<c.magenta>悠久历史的JPEG更棒的图片</c>

00:22:17.304 --> 00:22:19.373 align:middle line:-1
<c.magenta>事实上要比它小两倍</c>

00:22:19.740 --> 00:22:23.310 align:middle line:-2
<c.magenta>这个平均值 平均小两倍</c>
<c.magenta>而不是最多小两倍</c>

00:22:23.911 --> 00:22:27.214 align:middle line:-1
<c.magenta>我们在大数据图像集上使用定性分析</c>

00:22:27.281 --> 00:22:32.119 align:middle line:-2
<c.magenta>以实现这个数字</c>
<c.magenta>确保视觉质量与JPEG相同</c>

00:22:33.754 --> 00:22:37.524 align:middle line:-1
<c.magenta>它支持切断图像并压缩为单独的一格</c>

00:22:38.058 --> 00:22:42.129 align:middle line:-1
<c.magenta>这允许更高效地分段解压大图像</c>

00:22:43.797 --> 00:22:47.034 align:middle line:-1
<c.magenta>HEIF还特别支持辅助图像</c>

00:22:47.301 --> 00:22:50.170 align:middle line:-1
<c.magenta>比如阿尔法、视差或深度映射</c>

00:22:51.572 --> 00:22:53.273 align:middle line:-1
<c.magenta>这是一个深度映射的可视化灰度图</c>

00:22:53.340 --> 00:22:55.709 align:middle line:-1
<c.magenta>是嵌在这个HEIF文件中的深度映射</c>

00:22:56.844 --> 00:23:00.314 align:middle line:-2
<c.magenta>拥有深度信息就为你们</c>
<c.magenta>打开了图像编辑的世界</c>

00:22:56.844 --> 00:23:00.314 align:middle line:-2
<c.magenta>拥有深度信息就为你们</c>
<c.magenta>打开了图像编辑的世界</c>

00:23:00.614 --> 00:23:03.450 align:middle line:-1
<c.magenta>比如给背景和前景应用不同的效果</c>

00:23:03.750 --> 00:23:04.585 align:middle line:-1
<c.magenta>就像这样</c>

00:23:05.719 --> 00:23:08.655 align:middle line:-2
<c.magenta>在这里 我给背景应用了</c>
<c.magenta>黑色和白色筛选器</c>

00:23:08.989 --> 00:23:10.591 align:middle line:-1
<c.magenta>以及到前景的淡入筛选器</c>

00:23:10.657 --> 00:23:13.060 align:middle line:-2
<c.magenta>那么请注意</c>
<c.magenta>小女孩的紧身衣仍然是粉色的</c>

00:23:13.126 --> 00:23:15.028 align:middle line:-1
<c.magenta>而后面的一切都是黑色的</c>

00:23:15.963 --> 00:23:17.297 align:middle line:-1
<c.magenta>了解了深度的层次</c>

00:23:17.364 --> 00:23:21.268 align:middle line:-2
<c.magenta>我甚至可以移动筛选器的转换点</c>
<c.magenta>就像这个</c>

00:23:21.502 --> 00:23:22.769 align:middle line:-1
<c.magenta>密切注视她手里的花</c>

00:23:24.137 --> 00:23:25.939 align:middle line:-1
<c.magenta>现在只有她的手和花有颜色</c>

00:23:26.006 --> 00:23:27.541 align:middle line:-1
<c.magenta>而其它都是黑白的</c>

00:23:28.809 --> 00:23:31.111 align:middle line:-1
<c.magenta>你甚至可以控制前景和后景的光照</c>

00:23:31.178 --> 00:23:33.480 align:middle line:-1
<c.magenta>分别曝光 就像这样</c>

00:23:34.915 --> 00:23:37.818 align:middle line:-2
<c.magenta>现在 她看起来你把她P进了</c>
<c.magenta>她自己的照片里</c>

00:23:38.552 --> 00:23:40.487 align:middle line:-2
<c.magenta>我的意思并不是你应该这样做</c>
<c.magenta>而是你可以这样做</c>

00:23:41.822 --> 00:23:46.126 align:middle line:-2
<c.magenta>这是一场关于深度的两个</c>
<c.magenta>半场演讲的开篇</c>

00:23:46.193 --> 00:23:48.161 align:middle line:-1
<c.magenta>即507和508演讲</c>

00:23:48.228 --> 00:23:50.063 align:middle line:-1
<c.magenta>我希望你们抽时间看一下这两个视频</c>

00:23:51.298 --> 00:23:55.302 align:middle line:-1
<c.magenta>提到元数据 HEIF的兼容性很好</c>

00:23:55.369 --> 00:23:59.840 align:middle line:-1
<c.magenta>它特别支持产业标准Exif和xmp</c>

00:24:01.508 --> 00:24:03.410 align:middle line:-1
<c.magenta>HEIF并不只是用于单一图像</c>

00:24:03.477 --> 00:24:06.446 align:middle line:-1
<c.magenta>它还支持图像序列</c>

00:24:06.513 --> 00:24:10.584 align:middle line:-1
<c.magenta>比如连拍、支架、焦点堆栈</c>

00:24:11.251 --> 00:24:15.489 align:middle line:-2
<c.magenta>它还用在多媒体上</c>
<c.magenta>比如音频和视频轨道</c>

00:24:17.291 --> 00:24:18.358 align:middle line:-1
<c.magenta>让我们做个演示吧 好吗？</c>

00:24:19.626 --> 00:24:23.564 align:middle line:-2
<c.magenta>好的 这是一个作品展示</c>
<c.magenta>是在Apple自己的Photos应用中</c>

00:24:30.571 --> 00:24:34.775 align:middle line:-2
<c.magenta>好的 我要从全景开始</c>
<c.magenta>这是一个很漂亮的全景</c>

00:24:35.209 --> 00:24:37.778 align:middle line:-1
<c.magenta>这个来自约塞米蒂国家公园的土伦草甸</c>

00:24:38.445 --> 00:24:41.748 align:middle line:-2
<c.magenta>看起来很不错</c>
<c.magenta>这就是你希望从全景中看到的那种</c>

00:24:41.815 --> 00:24:43.584 align:middle line:-1
<c.magenta>直到你开始放大</c>

00:24:44.284 --> 00:24:45.118 align:middle line:-1
<c.magenta>那么让我们放大吧</c>

00:24:46.753 --> 00:24:47.588 align:middle line:-1
<c.magenta>稍微放大点儿</c>

00:24:48.322 --> 00:24:50.390 align:middle line:-1
<c.magenta>看起来不错 让我们再放大点儿</c>

00:24:51.191 --> 00:24:52.693 align:middle line:-1
<c.magenta>然后再放大点儿</c>

00:24:53.760 --> 00:24:55.262 align:middle line:-1
<c.magenta>然后再放大点儿</c>

00:24:56.230 --> 00:24:57.464 align:middle line:-1
<c.magenta>一直放大</c>

00:24:58.131 --> 00:25:01.768 align:middle line:-2
<c.magenta>一直放大 我的天啊</c>
<c.magenta>我可以看到速度限制是多少</c>

00:24:58.131 --> 00:25:01.768 align:middle line:-2
<c.magenta>一直放大 我的天啊</c>
<c.magenta>我可以看到速度限制是多少</c>

00:25:03.403 --> 00:25:04.271 align:middle line:-1
<c.magenta>哇哦</c>

00:25:09.409 --> 00:25:11.411 align:middle line:-1
<c.magenta>那里有车 有移动厕所</c>

00:25:13.380 --> 00:25:15.816 align:middle line:-1
<c.magenta>我甚至可以去看一眼背景中的山峰</c>

00:25:18.685 --> 00:25:20.888 align:middle line:-2
<c.magenta>它是如何随着我的动作</c>
<c.magenta>变得这么清晰的呢？</c>

00:25:21.455 --> 00:25:25.359 align:middle line:-1
<c.magenta>这实际上是一个29亿像素的全景图</c>

00:25:25.826 --> 00:25:29.863 align:middle line:-1
<c.magenta>大约是91,000像素乘32,000像素</c>

00:25:30.464 --> 00:25:33.567 align:middle line:-1
<c.magenta>它的RGB TIFF文件大大超过了2GB</c>

00:25:33.634 --> 00:25:37.971 align:middle line:-2
<c.magenta>并且我向你们保证 它足以让任何</c>
<c.magenta>Mac屈服 而HEIF文件</c>

00:25:38.038 --> 00:25:40.674 align:middle line:-1
<c.magenta>是160MB</c>

00:25:41.041 --> 00:25:47.381 align:middle line:-2
<c.magenta>这在JPEG来说是根本不可能的</c>
<c.magenta>因为JPEG最高是64k乘64k像素</c>

00:25:47.981 --> 00:25:49.383 align:middle line:-1
<c.magenta>HEIF没有超过最高值</c>

00:25:49.883 --> 00:25:55.589 align:middle line:-1
<c.magenta>它支持任意大文件 并随时检查内存</c>

00:25:55.656 --> 00:25:58.025 align:middle line:-1
<c.magenta>高效地加载和卸载片段</c>

00:25:58.358 --> 00:26:00.627 align:middle line:-1
<c.magenta>那么当我面前摆着这个庞大的数据时</c>

00:25:58.358 --> 00:26:00.627 align:middle line:-1
<c.magenta>那么当我面前摆着这个庞大的数据时</c>

00:26:00.928 --> 00:26:04.998 align:middle line:-2
<c.magenta>在Photos应用中</c>
<c.magenta>我再也不用占用70MB以上的内存了</c>

00:26:05.332 --> 00:26:08.068 align:middle line:-1
<c.magenta>那么它还具有响应性 我可以缩放</c>

00:26:08.135 --> 00:26:10.637 align:middle line:-2
<c.magenta>我可以缩放一整天</c>
<c.magenta>但我想我们很可能得回到幻灯片中去</c>

00:26:19.213 --> 00:26:23.851 align:middle line:-2
<c.magenta>在iOS 11和macOS 10.13</c>
<c.magenta>所支持的全部硬件上</c>

00:26:23.917 --> 00:26:28.055 align:middle line:-2
<c.magenta>我们可以读取和解码HEIF的</c>
<c.magenta>三种不同风格</c>

00:26:28.121 --> 00:26:29.723 align:middle line:-1
<c.magenta>你在这里看到的三种扩展</c>

00:26:29.790 --> 00:26:32.759 align:middle line:-1
<c.magenta>是与如何在文件中编码主图像相关的</c>

00:26:34.461 --> 00:26:40.400 align:middle line:-1
<c.magenta>指向包含通过HEVC压缩的主图像的</c>

00:26:40.467 --> 00:26:43.470 align:middle line:-2
<c.magenta>HEIF文件的public.heic的HEIC</c>
<c.magenta>.HEIC和UTI</c>

00:26:44.171 --> 00:26:50.077 align:middle line:-2
<c.magenta>第二个风格是AVCI</c>
<c.magenta>通过H.264压缩主图像</c>

00:26:50.677 --> 00:26:54.081 align:middle line:-1
<c.magenta>然后其它保留.HEIF扩展</c>

00:26:54.147 --> 00:26:57.317 align:middle line:-2
<c.magenta>可以是JPEG 也可以是</c>
<c.magenta>所支持的任意编解码器</c>

00:26:59.186 --> 00:27:02.789 align:middle line:-2
<c.magenta>对于编码和写入</c>
<c.magenta>我们只支持一种形式的HEIF</c>

00:26:59.186 --> 00:27:02.789 align:middle line:-2
<c.magenta>对于编码和写入</c>
<c.magenta>我们只支持一种形式的HEIF</c>

00:27:02.856 --> 00:27:06.994 align:middle line:-2
<c.magenta>即HEIC格式</c>
<c.magenta>换句话说就是你使用HEVC的那些</c>

00:27:07.361 --> 00:27:10.531 align:middle line:-1
<c.magenta>我们猜如果你很好地采用了新文件容器</c>

00:27:10.797 --> 00:27:12.165 align:middle line:-1
<c.magenta>你可能也会采用</c>

00:27:12.232 --> 00:27:13.800 align:middle line:-1
<c.magenta>最棒的压缩标准</c>

00:27:14.101 --> 00:27:18.639 align:middle line:-2
<c.magenta>当前仅拥有A10融合芯片的</c>
<c.magenta>iOS 11设备支持</c>

00:27:19.907 --> 00:27:22.609 align:middle line:-1
<c.magenta>好的 让我们从低等级看一下HEIF</c>

00:27:23.877 --> 00:27:28.615 align:middle line:-2
<c.magenta>我们平台上读写文件的最低等级</c>
<c.magenta>界面是ImageIO</c>

00:27:29.116 --> 00:27:33.253 align:middle line:-1
<c.magenta>它封装读取 从文件或内存数据源</c>

00:27:33.320 --> 00:27:35.689 align:middle line:0
<c.magenta>使用一个叫作CGImageSource的对象</c>

00:27:36.590 --> 00:27:39.893 align:middle line:0
<c.magenta>它还支持写入文件或写入不可变数据</c>

00:27:40.060 --> 00:27:42.229 align:middle line:0
<c.magenta>使用CGImageDestination</c>

00:27:42.896 --> 00:27:45.232 align:middle line:0
<c.magenta>这些对象已经存在很长时间了</c>

00:27:45.299 --> 00:27:46.333 align:middle line:-1
<c.magenta>你们很可能用过它们</c>

00:27:47.234 --> 00:27:51.438 align:middle line:-2
<c.magenta>要在磁盘上打开一个JPEG图像文件</c>
<c.magenta>这是用ImageIO打开图像文件的方式</c>

00:27:51.505 --> 00:27:52.906 align:middle line:-1
<c.magenta>首先创建URL</c>

00:27:53.640 --> 00:27:57.811 align:middle line:-2
<c.magenta>然后调用CGImageSourceCreateWithURL</c>
<c.magenta>来创建你的源</c>

00:27:58.278 --> 00:28:00.147 align:middle line:-1
<c.magenta>最后是一个选项库</c>

00:27:58.278 --> 00:28:00.147 align:middle line:-1
<c.magenta>最后是一个选项库</c>

00:28:00.214 --> 00:28:02.783 align:middle line:-1
<c.magenta>你可以选择性地传递输入的UTI</c>

00:28:03.217 --> 00:28:05.485 align:middle line:-2
<c.magenta>当你在磁盘上打开文件时</c>
<c.magenta>是不需要这个的</c>

00:28:05.652 --> 00:28:09.456 align:middle line:-1
<c.magenta>因为可以从文件路径扩展中引用UTI</c>

00:28:10.290 --> 00:28:13.994 align:middle line:-2
<c.magenta>一旦得到CGImageSource</c>
<c.magenta>你可以做一系列的事</c>

00:28:14.528 --> 00:28:18.198 align:middle line:-1
<c.magenta>比如在任何索引上复制属性</c>

00:28:18.265 --> 00:28:20.934 align:middle line:-1
<c.magenta>将会从中取出元数据 比如Exif</c>

00:28:21.668 --> 00:28:25.205 align:middle line:-2
<c.magenta>你还可以从文件中的任何图像中</c>
<c.magenta>创建CGImage</c>

00:28:25.372 --> 00:28:28.308 align:middle line:-2
<c.magenta>对于JPEG</c>
<c.magenta>一般来说文件中只能有一个图像</c>

00:28:28.909 --> 00:28:32.779 align:middle line:-2
<c.magenta>CGImage当然像是一个承诺</c>
<c.magenta>一个渲染承诺</c>

00:28:33.113 --> 00:28:37.484 align:middle line:-2
<c.magenta>必要时可以使用CGImage</c>
<c.magenta>不紧不慢地解码JPEG数据</c>

00:28:37.684 --> 00:28:40.988 align:middle line:-1
<c.magenta>比如当你把它渲染到CG位图情境中时</c>

00:28:41.688 --> 00:28:45.826 align:middle line:-1
<c.magenta>你还可以通过许多选项获得一个缩略图</c>

00:28:46.293 --> 00:28:48.495 align:middle line:-1
<c.magenta>比如你想要得到的最大尺寸</c>

00:28:48.695 --> 00:28:50.697 align:middle line:-1
<c.magenta>如果文件中没有可用的要如何处理</c>

00:28:51.231 --> 00:28:53.800 align:middle line:-2
<c.magenta>以及何时调用CGImageSourceCreate</c>
<c.magenta>ThumbnailAtIndex</c>

00:28:53.867 --> 00:28:56.136 align:middle line:-1
<c.magenta>它会立即执行解码</c>

00:28:57.905 --> 00:29:01.375 align:middle line:-1
<c.magenta>现在这是打开.HEIC文件的模拟代码</c>

00:28:57.905 --> 00:29:01.375 align:middle line:-1
<c.magenta>现在这是打开.HEIC文件的模拟代码</c>

00:29:02.509 --> 00:29:03.944 align:middle line:-1
<c.magenta>有人能指出其中的不同点吗？</c>

00:29:05.212 --> 00:29:06.313 align:middle line:-1
<c.magenta>在这里我把它变简单了</c>

00:29:09.149 --> 00:29:09.983 align:middle line:-1
<c.magenta>就这样</c>

00:29:10.484 --> 00:29:13.654 align:middle line:-2
<c.magenta>它是个注释并且它是个文件路径</c>
<c.magenta>就是这样</c>

00:29:14.154 --> 00:29:16.190 align:middle line:-1
<c.magenta>换句话说 CGImageSource就这么管用了</c>

00:29:16.356 --> 00:29:19.960 align:middle line:-2
<c.magenta>你没有看到的一个不同点是</c>
<c.magenta>如何解码HEVC</c>

00:29:20.694 --> 00:29:24.631 align:middle line:-2
<c.magenta>在最近的iOS设备和Mac上</c>
<c.magenta>是硬件解码</c>

00:29:25.032 --> 00:29:28.936 align:middle line:-2
<c.magenta>而较老的设备上是通过软件解码的</c>
<c.magenta>所以速度会较慢</c>

00:29:30.470 --> 00:29:33.407 align:middle line:-2
<c.magenta>关于我们刚才在演示中看到的</c>
<c.magenta>分格支持有一个提示</c>

00:29:34.007 --> 00:29:37.945 align:middle line:-2
<c.magenta>CGImageSource可以提供</c>
<c.magenta>关于图像的属性库</c>

00:29:38.011 --> 00:29:42.482 align:middle line:-2
<c.magenta>通过调用</c>
<c.magenta>CGImageSourceCopyPropertiesAtIndex</c>

00:29:42.549 --> 00:29:48.255 align:middle line:-2
<c.magenta>并且属性库是元数据的代名词</c>
<c.magenta>Exif、Apple Maker Note等等</c>

00:29:48.956 --> 00:29:51.859 align:middle line:-2
<c.magenta>还有一个子库</c>
<c.magenta>叫作TIFF subdictionary</c>

00:29:52.192 --> 00:29:54.828 align:middle line:-1
<c.magenta>你可以从中找到被编码的格子的尺寸</c>

00:29:54.895 --> 00:29:56.797 align:middle line:-1
<c.magenta>比如格子长度和格子宽度</c>

00:29:57.231 --> 00:30:00.834 align:middle line:-1
<c.magenta>默认是编码为512乘512像素</c>

00:29:57.231 --> 00:30:00.834 align:middle line:-1
<c.magenta>默认是编码为512乘512像素</c>

00:30:03.003 --> 00:30:06.273 align:middle line:-2
<c.magenta>正如我们所看到的</c>
<c.magenta>CGImageSource为你提供CG图像</c>

00:30:06.673 --> 00:30:10.010 align:middle line:-2
<c.magenta>并且CGImage有个很漂亮的方法</c>
<c.magenta>叫作cropping(to:)</c>

00:30:10.344 --> 00:30:11.945 align:middle line:-1
<c.magenta>利用了分格</c>

00:30:12.546 --> 00:30:14.515 align:middle line:-1
<c.magenta>这个调用会创建一个新CGImage</c>

00:30:14.581 --> 00:30:17.551 align:middle line:-1
<c.magenta>只包含另一个图像的一小部分</c>

00:30:18.285 --> 00:30:21.522 align:middle line:-2
<c.magenta>这不是个新API</c>
<c.magenta>但它用起来与HEIF相当协调</c>

00:30:21.889 --> 00:30:23.991 align:middle line:-1
<c.magenta>在HEIF中分格是被单独编码的</c>

00:30:24.558 --> 00:30:28.328 align:middle line:-1
<c.magenta>你不必担心潜在的分格编码尺寸</c>

00:30:28.395 --> 00:30:31.632 align:middle line:-1
<c.magenta>你只需要请求分区说你想显示或渲染</c>

00:30:32.366 --> 00:30:35.602 align:middle line:-2
<c.magenta>并了解在底层</c>
<c.magenta>你将会获得全部tile-y好处</c>

00:30:35.669 --> 00:30:39.706 align:middle line:-1
<c.magenta>它只解码对那个分区有必要的分格</c>

00:30:41.208 --> 00:30:45.679 align:middle line:-2
<c.magenta>现在让我们谈谈写</c>
<c.magenta>这是如何用ImageIO写JPEG</c>

00:30:46.480 --> 00:30:48.949 align:middle line:-1
<c.magenta>你 在创建CGImageDestination之后</c>

00:30:49.016 --> 00:30:51.418 align:middle line:-2
<c.magenta>调用CGImageDestination</c>
<c.magenta>CreateWithURL</c>

00:30:54.555 --> 00:30:58.125 align:middle line:-2
<c.magenta>我应该指出一点</c>
<c.magenta>你需要制定UTI是什么</c>

00:30:58.926 --> 00:31:00.761 align:middle line:-1
<c.magenta>在这里我用的是AVFileType.jpg</c>

00:30:58.926 --> 00:31:00.761 align:middle line:-1
<c.magenta>在这里我用的是AVFileType.jpg</c>

00:31:00.827 --> 00:31:04.331 align:middle line:-1
<c.magenta>与UT类型public.jpg一样</c>

00:31:05.699 --> 00:31:07.701 align:middle line:-1
<c.magenta>我很关心结果</c>

00:31:08.268 --> 00:31:11.572 align:middle line:-1
<c.magenta>我用了保护 让目的文件为无</c>

00:31:12.139 --> 00:31:15.576 align:middle line:-2
<c.magenta>现在 对于当前JPEG</c>
<c.magenta>它是无的唯一原因</c>

00:31:15.642 --> 00:31:19.079 align:middle line:-1
<c.magenta>是如果你请求写入一个沙盒外部的文件</c>

00:31:19.146 --> 00:31:22.282 align:middle line:-2
<c.magenta>但为了防御</c>
<c.magenta>你应该以这种方式来写代码</c>

00:31:23.116 --> 00:31:25.752 align:middle line:-1
<c.magenta>接下来 添加你的CG图像</c>

00:31:25.819 --> 00:31:29.089 align:middle line:-2
<c.magenta>一次添加一个 可以伴随元数据</c>
<c.magenta>如果你喜欢的话</c>

00:31:29.523 --> 00:31:32.960 align:middle line:-2
<c.magenta>然后当你完成后</c>
<c.magenta>调用CGImageDestinationFinalize</c>

00:31:33.360 --> 00:31:36.563 align:middle line:-2
<c.magenta>这将关闭用于编辑的容器</c>
<c.magenta>然后将其写入磁盘</c>

00:31:37.965 --> 00:31:41.702 align:middle line:-2
<c.magenta>现在 让我们看一些HEIC的写法</c>
<c.magenta>再一次 只有很小的不同点</c>

00:31:44.004 --> 00:31:47.174 align:middle line:-1
<c.magenta>只是文件路径扩展、UTI、注释不同</c>

00:31:47.741 --> 00:31:50.377 align:middle line:-2
<c.magenta>在JPEG和HEIF之间</c>
<c.magenta>有一个很重要的不同点</c>

00:31:50.444 --> 00:31:54.348 align:middle line:-1
<c.magenta>即创建CGImageDestination将会失败</c>

00:31:54.615 --> 00:31:57.584 align:middle line:-1
<c.magenta>在没有HEVC硬件编码器的设备上</c>

00:31:58.118 --> 00:32:00.287 align:middle line:-1
<c.magenta>如果失败 目的即为无</c>

00:31:58.118 --> 00:32:00.287 align:middle line:-1
<c.magenta>如果失败 目的即为无</c>

00:32:00.687 --> 00:32:03.323 align:middle line:-2
<c.magenta>那么我在上一张幻灯片上</c>
<c.magenta>写的防御性良好的代码</c>

00:32:03.690 --> 00:32:06.693 align:middle line:-1
<c.magenta>在HEVC中更加重要</c>

00:32:06.860 --> 00:32:09.696 align:middle line:-1
<c.magenta>现在有一个目的为无的新理由</c>

00:32:10.597 --> 00:32:13.767 align:middle line:-2
<c.magenta>请一定要确保你检查这个</c>
<c.magenta>这是那个也是唯一一个</c>

00:32:13.834 --> 00:32:17.371 align:middle line:-2
<c.magenta>了解你当前平台</c>
<c.magenta>是否支持写入HEIC的方式</c>

00:32:19.106 --> 00:32:20.874 align:middle line:-1
<c.magenta>还有不值一提的是那个ImageIO</c>

00:32:20.941 --> 00:32:23.577 align:middle line:-1
<c.magenta>已经添加了读写深度映射的功能</c>

00:32:23.644 --> 00:32:25.078 align:middle line:-1
<c.magenta>正如我之前讲过的</c>

00:32:25.445 --> 00:32:28.782 align:middle line:-2
<c.magenta>我们已经为HEIC实现了那个</c>
<c.magenta>并且我们操纵JPEG</c>

00:32:28.849 --> 00:32:32.019 align:middle line:-2
<c.magenta>以奇怪的魔法方式</c>
<c.magenta>我们很可能不应该讲这个</c>

00:32:32.419 --> 00:32:34.755 align:middle line:-1
<c.magenta>我不会再深入地讲了</c>

00:32:34.821 --> 00:32:38.625 align:middle line:-2
<c.magenta>因为它在一个</c>
<c.magenta>专门的507和508演讲上讲到了</c>

00:32:38.859 --> 00:32:39.860 align:middle line:-1
<c.magenta>是关于深度的</c>

00:32:39.927 --> 00:32:42.062 align:middle line:-1
<c.magenta>我希望你们能看一下那些演讲的视频</c>

00:32:42.129 --> 00:32:46.366 align:middle line:-2
<c.magenta>因为它们讲的是</c>
<c.magenta>HEIF中的辅助图像格式</c>

00:32:48.168 --> 00:32:50.103 align:middle line:-1
<c.magenta>好的 是时候继续下一个主要话题了</c>

00:32:50.170 --> 00:32:52.172 align:middle line:-1
<c.magenta>即高等级获取HEIF</c>

00:32:52.973 --> 00:32:58.345 align:middle line:-2
<c.magenta>但在此之前 我感觉WWDC</c>
<c.magenta>应该是一种文化体验</c>

00:32:58.412 --> 00:33:01.081 align:middle line:-2
<c.magenta>具有文化意义上的价值</c>
<c.magenta>而不只是一种教育性大会</c>

00:32:58.412 --> 00:33:01.081 align:middle line:-2
<c.magenta>具有文化意义上的价值</c>
<c.magenta>而不只是一种教育性大会</c>

00:33:01.148 --> 00:33:03.250 align:middle line:-1
<c.magenta>这就是我想让你们休息片刻的原因</c>

00:33:03.317 --> 00:33:04.918 align:middle line:-1
<c.magenta>通过一些压缩相关的诗</c>

00:33:06.220 --> 00:33:07.054 align:middle line:-1
<c.magenta>好的</c>

00:33:07.421 --> 00:33:08.255 align:middle line:-1
<c.magenta>等着瞧吧</c>

00:33:09.389 --> 00:33:13.460 align:middle line:-1
<c.magenta>JPEG这么大 但HEIF很简洁</c>

00:33:15.062 --> 00:33:15.896 align:middle line:-1
<c.magenta>谢谢</c>

00:33:18.065 --> 00:33:20.100 align:middle line:-1
<c.magenta>看到这个压缩相关的诗句了吧 很短</c>

00:33:21.401 --> 00:33:23.136 align:middle line:-1
<c.magenta>你喜欢吗？你想听更多吗？</c>

00:33:24.104 --> 00:33:26.707 align:middle line:-2
<c.magenta>好的 让我们再来一个</c>
<c.magenta>这是一个压缩俳句</c>

00:33:29.209 --> 00:33:30.911 align:middle line:-1
<c.magenta>HEVC</c>

00:33:32.246 --> 00:33:33.747 align:middle line:-1
<c.magenta>的音节</c>

00:33:34.815 --> 00:33:37.251 align:middle line:-1
<c.magenta>比JPEG进程多一倍</c>

00:33:38.151 --> 00:33:39.953 align:middle line:-1
<c.magenta>谢谢大家 好了 让我们继续吧</c>

00:33:41.755 --> 00:33:43.290 align:middle line:-1
<c.magenta>我确定他们稍后会编辑并发布它</c>

00:33:44.224 --> 00:33:46.159 align:middle line:-1
<c.magenta>好的 我们要谈谈HEIF和PhotoKit</c>

00:33:46.860 --> 00:33:48.562 align:middle line:-1
<c.magenta>PhotoKit其实是两个框架</c>

00:33:48.629 --> 00:33:51.798 align:middle line:-2
<c.magenta>分别是Photos框架和PhotosUI</c>
<c.magenta>等级很高</c>

00:33:51.865 --> 00:33:53.166 align:middle line:-1
<c.magenta>甚至在UIKit之上</c>

00:33:54.968 --> 00:33:59.106 align:middle line:-2
<c.magenta>当应用调整时</c>
<c.magenta>你在PhotoKit中使用HEIF的方式</c>

00:33:59.306 --> 00:34:00.874 align:middle line:-1
<c.magenta>我们只是简略地谈一下</c>

00:33:59.306 --> 00:34:00.874 align:middle line:-1
<c.magenta>我们只是简略地谈一下</c>

00:34:01.074 --> 00:34:03.010 align:middle line:-2
<c.magenta>并且我们会谈如何在三种</c>
<c.magenta>不同的情境中应用调整</c>

00:34:03.076 --> 00:34:06.213 align:middle line:-1
<c.magenta>图片、视频和动态图片</c>

00:34:06.547 --> 00:34:10.516 align:middle line:-2
<c.magenta>然后我们会谈你与PHPhotoLibrary</c>
<c.magenta>一起使用的常见流程</c>

00:34:11.784 --> 00:34:13.320 align:middle line:-2
<c.magenta>让我们简略地概括一下</c>
<c.magenta>其中所包含的步骤</c>

00:34:13.387 --> 00:34:17.357 align:middle line:-2
<c.magenta>通过PhotoLibrary把编辑或调整</c>
<c.magenta>应用到资产中的步骤</c>

00:34:18.225 --> 00:34:20.928 align:middle line:-2
<c.magenta>你请求PHPhotoLibrary</c>
<c.magenta>performChanges</c>

00:34:20.994 --> 00:34:25.032 align:middle line:-2
<c.magenta>在那个变更请求中</c>
<c.magenta>你以你想编辑的PHAsset为开始</c>

00:34:25.498 --> 00:34:26.600 align:middle line:-1
<c.magenta>比如照片</c>

00:34:27.367 --> 00:34:30.637 align:middle line:-1
<c.magenta>并且在资产上请求内容编辑输入</c>

00:34:30.704 --> 00:34:33.373 align:middle line:-1
<c.magenta>以获取PHContentEditingInput</c>

00:34:34.474 --> 00:34:38.045 align:middle line:-2
<c.magenta>这就是为你提供与你的资产</c>
<c.magenta>相关联的全部媒体权限的东西</c>

00:34:38.110 --> 00:34:43.550 align:middle line:-2
<c.magenta>比如UIImage、URL、AVAsset</c>
<c.magenta>或Live Photo</c>

00:34:44.418 --> 00:34:47.054 align:middle line:-2
<c.magenta>接下来你要创建一个</c>
<c.magenta>PHContentEditingOutput</c>

00:34:47.788 --> 00:34:49.956 align:middle line:-1
<c.magenta>通过与内容编辑输入一起调用</c>

00:34:50.724 --> 00:34:53.393 align:middle line:-1
<c.magenta>编辑输出会告诉你</c>

00:34:53.460 --> 00:34:58.599 align:middle line:0
<c.magenta>要把全部已渲染的文件放在磁盘上</c>
<c.magenta>哪个位置 通过提供renderContentURL</c>

00:34:59.066 --> 00:35:00.467 align:middle line:0
<c.magenta>然后实施你的编辑</c>

00:34:59.066 --> 00:35:00.467 align:middle line:0
<c.magenta>然后实施你的编辑</c>

00:35:00.734 --> 00:35:04.471 align:middle line:0
<c.magenta>在编辑输入中为你提供的那个媒体上</c>

00:35:04.771 --> 00:35:06.974 align:middle line:0
<c.magenta>然后你将它们写入指定位置</c>

00:35:07.574 --> 00:35:11.879 align:middle line:0
<c.magenta>最后 PHPhotoLibrary验证你的修改</c>

00:35:12.145 --> 00:35:14.581 align:middle line:0
<c.magenta>并将它们作为一个整体接受或拒绝修改</c>

00:35:16.917 --> 00:35:20.320 align:middle line:-1
<c.magenta>那么renderedOutputImages的规则没变</c>

00:35:20.387 --> 00:35:23.023 align:middle line:-1
<c.magenta>但你可能没有意识到它们已经生效了</c>

00:35:23.524 --> 00:35:28.228 align:middle line:-2
<c.magenta>在iOS 10中 你的输出图像</c>
<c.magenta>必须被渲染为JPEG</c>

00:35:28.729 --> 00:35:30.731 align:middle line:-1
<c.magenta>Exif定向为1</c>

00:35:30.898 --> 00:35:33.333 align:middle line:-1
<c.magenta>也就是如果需要实现任何旋转</c>

00:35:33.400 --> 00:35:37.037 align:middle line:-2
<c.magenta>它会合并到</c>
<c.magenta>outputRendered文件中的图像中</c>

00:35:37.504 --> 00:35:38.772 align:middle line:-1
<c.magenta>你可能忽视了这个细节</c>

00:35:38.839 --> 00:35:43.277 align:middle line:-2
<c.magenta>因为很可能你要编辑的99%的内容</c>
<c.magenta>都以JPEG格式提供</c>

00:35:43.343 --> 00:35:45.546 align:middle line:-1
<c.magenta>然后你只需要将其输出位同一个格式</c>

00:35:45.913 --> 00:35:49.516 align:middle line:-2
<c.magenta>但现在 你看到输入内容的扩散</c>
<c.magenta>也就是HEIC</c>

00:35:49.716 --> 00:35:50.817 align:middle line:-1
<c.magenta>所以你应该注意</c>

00:35:50.884 --> 00:35:54.454 align:middle line:-2
<c.magenta>你必须仍然将全部输出内容</c>
<c.magenta>渲染为JPEG</c>

00:35:54.821 --> 00:35:56.490 align:middle line:-1
<c.magenta>Exif定向为1</c>

00:35:58.258 --> 00:35:59.293 align:middle line:-1
<c.magenta>这是代码</c>

00:35:59.893 --> 00:36:03.263 align:middle line:-2
<c.magenta>首先做一个CIImage</c>
<c.magenta>这是其中一种实现方式</c>

00:35:59.893 --> 00:36:03.263 align:middle line:-2
<c.magenta>首先做一个CIImage</c>
<c.magenta>这是其中一种实现方式</c>

00:36:03.697 --> 00:36:07.668 align:middle line:-2
<c.magenta>你可以从内容编辑输入文件URL中</c>
<c.magenta>做一个CIImage</c>

00:36:08.468 --> 00:36:10.003 align:middle line:-1
<c.magenta>然后应用编辑</c>

00:36:10.204 --> 00:36:15.876 align:middle line:-2
<c.magenta>在这里 关于定向</c>
<c.magenta>我要既应用筛选 又应用合并</c>

00:36:16.677 --> 00:36:20.781 align:middle line:-2
<c.magenta>然后 当我完成后</c>
<c.magenta>我要调用ciContext的掌上兵器库</c>

00:36:20.848 --> 00:36:22.482 align:middle line:-1
<c.magenta>写JPEGRepresentation</c>

00:36:23.283 --> 00:36:25.919 align:middle line:-1
<c.magenta>如果你之前曾用过这个样板代码</c>

00:36:25.986 --> 00:36:29.323 align:middle line:-2
<c.magenta>它仍然能在这里继续使用</c>
<c.magenta>因为它输出JPEG</c>

00:36:29.389 --> 00:36:31.191 align:middle line:-1
<c.magenta>无论输入是什么</c>

00:36:32.926 --> 00:36:36.129 align:middle line:-1
<c.magenta>我们第二个引用调整用例与食品有关</c>

00:36:36.196 --> 00:36:39.166 align:middle line:-1
<c.magenta>规则也与iOS 10相同</c>

00:36:39.399 --> 00:36:42.369 align:middle line:-1
<c.magenta>即无论输入电影内容的格式是什么</c>

00:36:42.703 --> 00:36:47.140 align:middle line:-2
<c.magenta>你都必须生产用H.264压缩的电影</c>
<c.magenta>作为输出</c>

00:36:48.075 --> 00:36:50.110 align:middle line:-1
<c.magenta>是的 即便源电影是HEVC</c>

00:36:50.177 --> 00:36:53.747 align:middle line:-1
<c.magenta>你仍需要将其渲染为H.264作为输出</c>

00:36:57.651 --> 00:37:00.988 align:middle line:-2
<c.magenta>这是一些编辑像这样的</c>
<c.magenta>视频内容的样板代码</c>

00:36:57.651 --> 00:37:00.988 align:middle line:-2
<c.magenta>这是一些编辑像这样的</c>
<c.magenta>视频内容的样板代码</c>

00:37:01.221 --> 00:37:05.325 align:middle line:-2
<c.magenta>首先你从PHContentEditingInput中</c>
<c.magenta>获取AVAsset</c>

00:37:06.360 --> 00:37:09.296 align:middle line:-2
<c.magenta>然后你可以创建一个</c>
<c.magenta>AVVideoComposition</c>

00:37:09.363 --> 00:37:11.798 align:middle line:-2
<c.magenta>在AVVideoComposition中</c>
<c.magenta>你每次提交一帧</c>

00:37:12.933 --> 00:37:14.801 align:middle line:-1
<c.magenta>并且你可以获得CIImages</c>

00:37:14.868 --> 00:37:18.338 align:middle line:-1
<c.magenta>然后请求一个对象 名字是一长串</c>

00:37:18.405 --> 00:37:21.909 align:middle line:-2
<c.magenta>AVAsynchronous</c>
<c.magenta>CoreImageFilteringRequest</c>

00:37:22.509 --> 00:37:25.979 align:middle line:-2
<c.magenta>你得到了CIImage</c>
<c.magenta>然后你生产了CIImage</c>

00:37:26.480 --> 00:37:29.349 align:middle line:-2
<c.magenta>当你渲染完成后</c>
<c.magenta>要调用request.finish</c>

00:37:29.983 --> 00:37:30.984 align:middle line:-1
<c.magenta>然后作为最后一个步骤</c>

00:37:31.285 --> 00:37:35.155 align:middle line:0
<c.magenta>你要把你的AVAsset导出到</c>
<c.magenta>磁盘上的文件</c>

00:37:35.222 --> 00:37:38.325 align:middle line:0
<c.magenta>其URL为PHContentEditingOutput</c>
<c.magenta>告诉你的那个URL</c>

00:37:38.926 --> 00:37:39.993 align:middle line:0
<c.magenta>现在这是最重要的部分</c>

00:37:40.494 --> 00:37:44.698 align:middle line:0
<c.magenta>要使用的预设是</c>
<c.magenta>AVAssetExportPresetHighestQuality</c>

00:37:44.898 --> 00:37:49.503 align:middle line:0
<c.magenta>或任意现有的预设 正如Erik所说的</c>
<c.magenta>仍压缩为H.264</c>

00:37:50.204 --> 00:37:53.874 align:middle line:0
<c.magenta>请不要使用名字类似的新预设</c>
<c.magenta>它们的名字中包括HEVC</c>

00:37:54.107 --> 00:37:56.710 align:middle line:0
<c.magenta>因为你会变更请求 从而以报错而告终</c>

00:37:58.745 --> 00:38:00.781 align:middle line:-1
<c.magenta>最后 通过Live Photo</c>

00:37:58.745 --> 00:38:00.781 align:middle line:-1
<c.magenta>最后 通过Live Photo</c>

00:38:00.848 --> 00:38:04.651 align:middle line:-1
<c.magenta>Live Photo的视频内容应用调整</c>

00:38:05.786 --> 00:38:07.588 align:middle line:-1
<c.magenta>我要讲的是</c>

00:38:07.654 --> 00:38:09.423 align:middle line:-1
<c.magenta>画面的移动方面</c>

00:38:09.489 --> 00:38:12.492 align:middle line:-1
<c.magenta>当你在Live Photo之间滑来滑去时</c>

00:38:12.559 --> 00:38:16.763 align:middle line:-2
<c.magenta>或当你压感触控图片时</c>
<c.magenta>或在图片之间滑动时</c>

00:38:17.331 --> 00:38:18.832 align:middle line:-1
<c.magenta>这是最简单的用例</c>

00:38:18.899 --> 00:38:22.269 align:middle line:-2
<c.magenta>因为你永远不会直接处理</c>
<c.magenta>输入或输出文件</c>

00:38:22.669 --> 00:38:25.639 align:middle line:-1
<c.magenta>你传递了CIImages 并且生成CIImages</c>

00:38:26.039 --> 00:38:27.741 align:middle line:-1
<c.magenta>然后就以你的名义完成了编码</c>

00:38:29.009 --> 00:38:30.844 align:middle line:-1
<c.magenta>这里有很多很棒的代码可以看</c>

00:38:30.911 --> 00:38:32.579 align:middle line:-1
<c.magenta>但我不会在这上面花太多时间</c>

00:38:32.646 --> 00:38:35.382 align:middle line:-1
<c.magenta>稍后你可以暂停一下视频 再仔细看</c>

00:38:35.883 --> 00:38:37.050 align:middle line:-1
<c.magenta>其中最重要的一点是</c>

00:38:37.117 --> 00:38:40.721 align:middle line:-1
<c.magenta>你在Live Photo电影中筛选完每一帧后</c>

00:38:41.054 --> 00:38:44.157 align:middle line:-2
<c.magenta>你可以让Live Photo内容</c>
<c.magenta>把你的Live Photo保存</c>

00:38:44.224 --> 00:38:46.159 align:middle line:-1
<c.magenta>到一个指定URL 就是这样</c>

00:38:46.960 --> 00:38:50.564 align:middle line:-1
<c.magenta>Live Photo将使用H.264被保存下来</c>

00:38:51.098 --> 00:38:53.800 align:middle line:-1
<c.magenta>就像静态图片那样被编码为JPEG</c>

00:38:55.669 --> 00:38:58.772 align:middle line:-2
<c.magenta>好的 让我们继续看</c>
<c.magenta>PhotoKit的常见流程</c>

00:38:59.506 --> 00:39:02.209 align:middle line:-1
<c.magenta>当从图库中显示内容时</c>

00:38:59.506 --> 00:39:02.209 align:middle line:-1
<c.magenta>当从图库中显示内容时</c>

00:39:02.476 --> 00:39:06.013 align:middle line:-2
<c.magenta>你使用一个叫作</c>
<c.magenta>PHImageManager的对象</c>

00:39:06.647 --> 00:39:09.149 align:middle line:-1
<c.magenta>这个为你提供了三个的其中一个</c>

00:39:09.883 --> 00:39:12.219 align:middle line:-2
<c.magenta>如果是图像的话你可以得到</c>
<c.magenta>一个UIImage</c>

00:39:12.286 --> 00:39:14.321 align:middle line:-2
<c.magenta>如果是视频的话可以得到</c>
<c.magenta>一个PlayerItem</c>

00:39:14.655 --> 00:39:17.691 align:middle line:-2
<c.magenta>或如果是Live Photo内容的话</c>
<c.magenta>得到一个PHLivePhoto</c>

00:39:18.192 --> 00:39:19.927 align:middle line:-1
<c.magenta>在这里你不需要进行任何修改</c>

00:39:20.127 --> 00:39:23.063 align:middle line:-1
<c.magenta>因为这些都是高等级的提取</c>

00:39:23.130 --> 00:39:25.299 align:middle line:-1
<c.magenta>你不用关心源来自哪里</c>

00:39:25.365 --> 00:39:28.368 align:middle line:-2
<c.magenta>你要做的就是显示它们</c>
<c.magenta>不需要修改任何代码</c>

00:39:30.437 --> 00:39:34.241 align:middle line:-1
<c.magenta>接下来是备份 当PhotoKit用于备份时</c>

00:39:34.675 --> 00:39:37.177 align:middle line:-1
<c.magenta>你很可能想获取原始资产</c>

00:39:37.244 --> 00:39:39.479 align:middle line:-1
<c.magenta>比如HEIC文件和QuickTime电影</c>

00:39:39.813 --> 00:39:42.616 align:middle line:-2
<c.magenta>并且你通过</c>
<c.magenta>PHAssetResourceManager实现</c>

00:39:43.016 --> 00:39:45.085 align:middle line:-1
<c.magenta>它为以原生格式提供给你</c>

00:39:45.419 --> 00:39:47.087 align:middle line:-1
<c.magenta>这里唯一需要注意的是</c>

00:39:47.688 --> 00:39:50.157 align:middle line:-1
<c.magenta>你可能会获得与之前不同的文件类型</c>

00:39:50.224 --> 00:39:51.725 align:middle line:-1
<c.magenta>所以要准备好接受这一点</c>

00:39:53.627 --> 00:39:55.762 align:middle line:-1
<c.magenta>第三个也是最复杂的情况是共享</c>

00:39:56.730 --> 00:39:57.731 align:middle line:-1
<c.magenta>在这里</c>

00:39:57.798 --> 00:39:59.900 align:middle line:-1
<c.magenta>你即将离开Apple漂亮的围墙花园</c>

00:40:00.334 --> 00:40:02.769 align:middle line:-1
<c.magenta>你不得不思考你自己的兼容性需求</c>

00:40:03.170 --> 00:40:04.838 align:middle line:-1
<c.magenta>原生资产可以吗？</c>

00:40:05.172 --> 00:40:07.708 align:middle line:-2
<c.magenta>你可能会帮你客户一个忙</c>
<c.magenta>或你可能帮倒忙</c>

00:40:07.774 --> 00:40:11.845 align:middle line:-2
<c.magenta>通过为他们提供HEIC内容</c>
<c.magenta>取决于他们是否准备好接受它</c>

00:40:11.912 --> 00:40:16.550 align:middle line:-2
<c.magenta>那么在这里你必须权衡</c>
<c.magenta>兼容性与HEIC所提供的功能</c>

00:40:17.618 --> 00:40:20.287 align:middle line:0
<c.magenta>如果你选择兼容性高于功能</c>

00:40:20.354 --> 00:40:23.257 align:middle line:0
<c.magenta>你可以确保格式兼容性</c>

00:40:23.323 --> 00:40:25.325 align:middle line:0
<c.magenta>通过明确指定输出格式</c>

00:40:25.692 --> 00:40:28.262 align:middle line:0
<c.magenta>对于图片 你只需要检查UTType</c>

00:40:28.729 --> 00:40:32.299 align:middle line:0
<c.magenta>看是否遵从JPEG</c>

00:40:32.366 --> 00:40:34.334 align:middle line:0
<c.magenta>如果不遵从 就明确地转换它</c>

00:40:34.768 --> 00:40:38.438 align:middle line:0
<c.magenta>对于视频 你总能强制性兼容</c>
<c.magenta>通过请求</c>

00:40:38.505 --> 00:40:40.274 align:middle line:0
<c.magenta>用预设导出会话</c>

00:40:40.340 --> 00:40:45.045 align:middle line:0
<c.magenta>你知道那将提交H.264</c>
<c.magenta>比如PresetHighestQuality</c>

00:40:47.181 --> 00:40:50.217 align:middle line:-2
<c.magenta>好了 进入我们今天的最后一个话题</c>
<c.magenta>捕捉HEIF</c>

00:40:50.617 --> 00:40:52.853 align:middle line:-1
<c.magenta>最后这是一个我知道要讲什么的话题</c>

00:40:53.887 --> 00:40:56.723 align:middle line:-2
<c.magenta>让我们看第二个压缩相关的俳句</c>
<c.magenta>我可以吗？</c>

00:40:57.291 --> 00:40:59.326 align:middle line:-1
<c.magenta>我觉得很有意思 开始吧</c>

00:41:00.127 --> 00:41:02.196 align:middle line:-1
<c.magenta>HEIF 一个容器</c>

00:41:03.230 --> 00:41:08.268 align:middle line:-1
<c.magenta>比HEVC的压缩效果好四倍</c>

00:41:09.970 --> 00:41:14.107 align:middle line:-2
<c.magenta>思考一下 好的</c>
<c.magenta>为什么我们要浪费时间谈HEVC呢</c>

00:41:14.174 --> 00:41:16.643 align:middle line:-2
<c.magenta>它应该是一个号的编解码器 对吧？</c>
<c.magenta>我们为什么不叫它“hevick”</c>

00:41:18.512 --> 00:41:20.814 align:middle line:-1
<c.magenta>好的 那么Erik提到</c>

00:41:21.014 --> 00:41:26.753 align:middle line:-2
<c.magenta>AVCapturePhotoOutput添加了对通过</c>
<c.magenta>HEVC编码的Live Photo电影的支持</c>

00:41:27.421 --> 00:41:29.156 align:middle line:-1
<c.magenta>这个类是去年引入的</c>

00:41:29.223 --> 00:41:31.825 align:middle line:-2
<c.magenta>作为AVCapture</c>
<c.magenta>StillImageOutput的后续</c>

00:41:32.159 --> 00:41:34.962 align:middle line:-1
<c.magenta>它擅长处理复杂的静态图像捕捉请求</c>

00:41:35.028 --> 00:41:37.998 align:middle line:-1
<c.magenta>当你需要随时间提交多个资产的时候</c>

00:41:38.832 --> 00:41:42.669 align:middle line:-2
<c.magenta>它目前是我们平台上</c>
<c.magenta>捕捉Live Photo的唯一方式</c>

00:41:43.403 --> 00:41:47.841 align:middle line:-1
<c.magenta>Bayer RAW图像 Apple P3宽彩色图像</c>

00:41:48.208 --> 00:41:50.878 align:middle line:-1
<c.magenta>在iOS 11中 这是我们平台上</c>

00:41:50.944 --> 00:41:53.881 align:middle line:-1
<c.magenta>捕捉HEIF内容的唯一界面</c>

00:41:54.381 --> 00:41:56.116 align:middle line:-1
<c.magenta>（HEIF捕捉支持）</c>

00:41:56.183 --> 00:42:01.054 align:middle line:-1
<c.magenta>A10芯片设备上支持HEIF捕捉</c>

00:41:56.183 --> 00:42:01.054 align:middle line:-1
<c.magenta>A10芯片设备上支持HEIF捕捉</c>

00:42:01.121 --> 00:42:05.592 align:middle line:-2
<c.magenta>也就是iPhone 7 Plus、iPhone 7</c>
<c.magenta>以及最新发布的iPad Pros</c>

00:42:07.828 --> 00:42:09.696 align:middle line:-2
<c.magenta>我们会做一个简短的刷新器</c>
<c.magenta>关于如何请求</c>

00:42:09.763 --> 00:42:12.165 align:middle line:-1
<c.magenta>和接收图像 通过图片输出</c>

00:42:12.766 --> 00:42:16.970 align:middle line:-2
<c.magenta>首先 你要填写一个</c>
<c.magenta>叫作AVCapturePhotoSettings的对象</c>

00:42:17.037 --> 00:42:18.739 align:middle line:-1
<c.magenta>这个类似于请求对象</c>

00:42:18.972 --> 00:42:22.376 align:middle line:-2
<c.magenta>就是指定你想在图片捕捉中</c>
<c.magenta>实施哪些功能的对象</c>

00:42:22.743 --> 00:42:24.344 align:middle line:-1
<c.magenta>就是橘色框里的内容</c>

00:42:25.078 --> 00:42:27.447 align:middle line:-1
<c.magenta>在这里我表明我想要自动闪光</c>

00:42:27.514 --> 00:42:31.185 align:middle line:-2
<c.magenta>意思是仅适用闪光灯进行图片输出</c>
<c.magenta>如果必要的话</c>

00:42:31.251 --> 00:42:33.654 align:middle line:-1
<c.magenta>仅当灯光太暗时使用</c>

00:42:34.321 --> 00:42:38.225 align:middle line:-2
<c.magenta>我还请求预览尺寸的图像</c>
<c.magenta>伴随完整尺寸的图像</c>

00:42:38.425 --> 00:42:40.794 align:middle line:-1
<c.magenta>以便我可以在屏幕上放一个快速预览</c>

00:42:41.361 --> 00:42:43.931 align:middle line:-1
<c.magenta>我不知道最终的纵横比是多少</c>

00:42:43.997 --> 00:42:48.035 align:middle line:-1
<c.magenta>所以我只请求为1440乘1440</c>

00:42:48.869 --> 00:42:52.873 align:middle line:-2
<c.magenta>然后通过我给照片输出提供的</c>
<c.magenta>用于开始或剔除</c>

00:42:53.373 --> 00:42:57.845 align:middle line:-1
<c.magenta>捕捉请求的委托传递这个设置对象</c>

00:43:00.881 --> 00:43:03.784 align:middle line:0
<c.magenta>现在顶部的箭头显示何时提出请求</c>

00:43:04.218 --> 00:43:08.288 align:middle line:0
<c.magenta>现在我要追踪这个包裹递送</c>

00:43:08.455 --> 00:43:12.759 align:middle line:0
<c.magenta>PhotoOutput把我的委托调回来了</c>
<c.magenta>每次调用一个方法</c>

00:43:13.360 --> 00:43:16.196 align:middle line:0
<c.magenta>在我提出请求后 PhotoOutput很快</c>

00:43:16.263 --> 00:43:17.531 align:middle line:0
<c.magenta>就进行了第一个委托回调</c>

00:43:17.598 --> 00:43:21.468 align:middle line:0
<c.magenta>即willBeginCapture</c>
<c.magenta>ForResolvedSettings</c>

00:43:21.535 --> 00:43:25.873 align:middle line:0
<c.magenta>它传给你这个蓝色框里的内容</c>
<c.magenta>即ResolvedPhotoSettings</c>

00:43:26.373 --> 00:43:29.309 align:middle line:0
<c.magenta>这就像一封礼貌的邮件 比如说</c>

00:43:29.376 --> 00:43:32.880 align:middle line:0
<c.magenta>“我们收到了你的订单”</c>
<c.magenta>“这是我们将发送给你的内容”</c>

00:43:33.580 --> 00:43:38.252 align:middle line:0
<c.magenta>这个ResolvedPhotoSetting会清除</c>

00:43:38.452 --> 00:43:40.787 align:middle line:0
<c.magenta>你一开始在设置中设的不明确的内容</c>

00:43:41.154 --> 00:43:44.925 align:middle line:0
<c.magenta>在本例中 我们现在可以看到</c>
<c.magenta>闪光灯不是自动 它是真或假</c>

00:43:45.292 --> 00:43:48.428 align:middle line:0
<c.magenta>那么如果它是真 我们都知道就会闪光</c>

00:43:48.829 --> 00:43:53.200 align:middle line:0
<c.magenta>同时我们现在也知道</c>
<c.magenta>最终的预览图像分辨率是多少</c>

00:43:55.569 --> 00:43:58.572 align:middle line:0
<c.magenta>最终在我们得到</c>
<c.magenta>willBeginCaptureFor之后</c>

00:43:58.639 --> 00:44:00.741 align:middle line:0
<c.magenta>我们 我们收到的第二个回调是</c>

00:43:58.639 --> 00:44:00.741 align:middle line:0
<c.magenta>我们 我们收到的第二个回调是</c>

00:44:00.807 --> 00:44:03.310 align:middle line:0
<c.magenta>willCapturePhoto</c>
<c.magenta>ForResolvedSettings</c>

00:44:03.777 --> 00:44:07.581 align:middle line:0
<c.magenta>这是与快门声音同时提交的</c>

00:44:09.082 --> 00:44:10.484 align:middle line:0
<c.magenta>然后此后不久</c>

00:44:10.551 --> 00:44:13.387 align:middle line:0
<c.magenta>就执行了didCapturePhoto</c>
<c.magenta>ForResolvedSettings</c>

00:44:13.654 --> 00:44:16.490 align:middle line:0
<c.magenta>就在图像被完全曝光和读出来后</c>

00:44:17.824 --> 00:44:20.661 align:middle line:0
<c.magenta>然后一般会传递一些时间</c>
<c.magenta>当处理一张图像</c>

00:44:20.928 --> 00:44:24.665 align:middle line:0
<c.magenta>或几张图像时</c>
<c.magenta>应用你所请求的全部功能</c>

00:44:25.365 --> 00:44:27.067 align:middle line:0
<c.magenta>当图片准备好后 你会收到</c>

00:44:27.134 --> 00:44:30.337 align:middle line:0
<c.magenta>didFinishProcessingPhoto</c>
<c.magenta>样本缓冲回调</c>

00:44:30.804 --> 00:44:33.640 align:middle line:0
<c.magenta>并向你提交图片</c>

00:44:33.907 --> 00:44:36.810 align:middle line:0
<c.magenta>在这里我得到了主图像以及预览图像</c>

00:44:37.010 --> 00:44:38.912 align:middle line:0
<c.magenta>它们是在同一个回调中同时提交的</c>

00:44:40.347 --> 00:44:42.916 align:middle line:0
<c.magenta>最后你总是会得到</c>

00:44:43.083 --> 00:44:46.920 align:middle line:0
<c.magenta>didFinishCaptureFor</c>
<c.magenta>ResolvedSettings回调</c>

00:44:47.321 --> 00:44:49.489 align:middle line:0
<c.magenta>这是最后要提交的</c>

00:44:49.656 --> 00:44:53.861 align:middle line:0
<c.magenta>就好像PhotoOutput在说</c>
<c.magenta>我们完成本次交易了</c>

00:44:54.027 --> 00:44:57.364 align:middle line:0
<c.magenta>很高兴与你一起合作</c>
<c.magenta>你现在可以清除你的委托了</c>

00:45:00.868 --> 00:45:03.837 align:middle line:-1
<c.magenta>这个编程模型是非常灵活的</c>

00:45:03.904 --> 00:45:07.908 align:middle line:-2
<c.magenta>我们有一些很成功的例子</c>
<c.magenta>因为我们按需要</c>

00:45:07.975 --> 00:45:09.676 align:middle line:-1
<c.magenta>给委托添加新方法</c>

00:45:09.743 --> 00:45:11.011 align:middle line:-1
<c.magenta>当我们添加新功能时</c>

00:45:11.745 --> 00:45:14.348 align:middle line:-1
<c.magenta>比如我们添加了RAW图像支持</c>

00:45:14.882 --> 00:45:16.116 align:middle line:0
<c.magenta>这是那个的回调</c>

00:45:16.917 --> 00:45:18.552 align:middle line:0
<c.magenta>我们添加了Live Photo的支持</c>

00:45:18.952 --> 00:45:21.655 align:middle line:0
<c.magenta>这是那个的单独回调</c>
<c.magenta>目的是获得电影</c>

00:45:22.322 --> 00:45:24.858 align:middle line:0
<c.magenta>那么看起来HEIF也会简便地添加</c>

00:45:24.925 --> 00:45:27.094 align:middle line:0
<c.magenta>到这个非常灵活的编程范例中</c>

00:45:27.561 --> 00:45:29.062 align:middle line:0
<c.magenta>很遗憾 并不是</c>

00:45:30.697 --> 00:45:33.934 align:middle line:-1
<c.magenta>CoreMedia SampleBuffer中的不相容性</c>

00:45:34.301 --> 00:45:35.903 align:middle line:-1
<c.magenta>现在是并且一直是</c>

00:45:35.969 --> 00:45:38.705 align:middle line:-1
<c.magenta>AVFoundation领域的一个难题</c>

00:45:39.239 --> 00:45:43.010 align:middle line:-2
<c.magenta>我们从iOS 4起就开始</c>
<c.magenta>将它用于提交静态图像</c>

00:45:44.444 --> 00:45:47.481 align:middle line:-2
<c.magenta>它是一个很小的媒体数据容器</c>
<c.magenta>比如视频样本、</c>

00:45:47.548 --> 00:45:50.050 align:middle line:-1
<c.magenta>音频样本、文本、闭合字幕</c>

00:45:51.652 --> 00:45:55.255 align:middle line:-2
<c.magenta>另一方面 HEIF是一种文件格式</c>
<c.magenta>不是媒体格式</c>

00:45:55.489 --> 00:45:56.990 align:middle line:-1
<c.magenta>它可以处理很多种媒体类型</c>

00:45:58.158 --> 00:46:03.096 align:middle line:-2
<c.magenta>同时 CMSampleBuffers可以 当然了</c>
<c.magenta>携带HEVC压缩视频</c>

00:45:58.158 --> 00:46:03.096 align:middle line:-2
<c.magenta>同时 CMSampleBuffers可以 当然了</c>
<c.magenta>携带HEVC压缩视频</c>

00:46:03.697 --> 00:46:07.534 align:middle line:-1
<c.magenta>但那个HEVC压缩视频跟</c>

00:46:07.601 --> 00:46:09.536 align:middle line:-1
<c.magenta>HEIF集装箱化的HEVC不一样</c>

00:46:09.903 --> 00:46:14.875 align:middle line:-2
<c.magenta>请记住 HEIF喜欢把元素</c>
<c.magenta>切成单独的分格以便快速解码</c>

00:46:15.242 --> 00:46:18.779 align:middle line:-1
<c.magenta>你不能存储那种HEVC压缩</c>

00:46:18.846 --> 00:46:22.616 align:middle line:-2
<c.magenta>在QuickTime电影的帧中</c>
<c.magenta>那会使解码器混淆</c>

00:46:23.350 --> 00:46:24.885 align:middle line:-1
<c.magenta>在这点上 你可能会问自己</c>

00:46:25.152 --> 00:46:27.387 align:middle line:-1
<c.magenta>如果我们有这种根本意义上的紧张</c>

00:46:27.454 --> 00:46:30.090 align:middle line:-1
<c.magenta>在文件容器和媒体容器之间</c>

00:46:30.290 --> 00:46:33.760 align:middle line:-2
<c.magenta>我们为什么这么多年</c>
<c.magenta>都在使用CMSampleBuffer的</c>

00:46:33.927 --> 00:46:36.597 align:middle line:-1
<c.magenta>图片输出和静态图片输出？</c>

00:46:37.264 --> 00:46:39.366 align:middle line:-1
<c.magenta>嗯 答案是JPEG</c>

00:46:40.501 --> 00:46:43.837 align:middle line:-2
<c.magenta>我们用这个来逃避问题</c>
<c.magenta>因为碰巧JPEG</c>

00:46:44.338 --> 00:46:47.508 align:middle line:-1
<c.magenta>图片编解码器 与JFIF 文件格式</c>

00:46:47.674 --> 00:46:49.910 align:middle line:-1
<c.magenta>实际上是不能区分开的</c>

00:46:50.210 --> 00:46:51.745 align:middle line:-1
<c.magenta>这两个都是图片</c>

00:46:52.379 --> 00:46:54.848 align:middle line:-2
<c.magenta>在另一个容器中</c>
<c.magenta>比如QuickTime电影</c>

00:46:56.550 --> 00:47:00.120 align:middle line:-2
<c.magenta>那么我们那个困境的答案是</c>
<c.magenta>提出一个新的特制</c>

00:46:56.550 --> 00:47:00.120 align:middle line:-2
<c.magenta>那么我们那个困境的答案是</c>
<c.magenta>提出一个新的特制</c>

00:47:00.420 --> 00:47:04.725 align:middle line:-2
<c.magenta>内存包装器 用于图像结果</c>
<c.magenta>我们管它叫AVCapturePhoto</c>

00:47:05.325 --> 00:47:07.794 align:middle line:-1
<c.magenta>这是对CMSampleBuffer的插入式替换</c>

00:47:09.229 --> 00:47:13.133 align:middle line:-2
<c.magenta>事实上比CMSampleBuffer快</c>
<c.magenta>因为我们能优化</c>

00:47:13.200 --> 00:47:16.570 align:middle line:-2
<c.magenta>它的提交</c>
<c.magenta>通过媒体服务器中的进程范围</c>

00:47:16.737 --> 00:47:19.473 align:middle line:-1
<c.magenta>所以你能得到比iOS 10中更好的性能</c>

00:47:20.741 --> 00:47:24.778 align:middle line:-2
<c.magenta>它是100%不可变</c>
<c.magenta>与CMSampleBuffer不同</c>

00:47:24.845 --> 00:47:28.081 align:middle line:-1
<c.magenta>所以它在代码模型之间共享也会更容易</c>

00:47:29.216 --> 00:47:31.752 align:middle line:-1
<c.magenta>它还得到了集装箱化数据的支持</c>

00:47:31.818 --> 00:47:33.420 align:middle line:-1
<c.magenta>我稍后再谈这个</c>

00:47:34.588 --> 00:47:36.423 align:middle line:-1
<c.magenta>让我们谈谈它的贡献</c>

00:47:36.890 --> 00:47:39.960 align:middle line:-2
<c.magenta>它有与图片相关的关键信息的权限</c>
<c.magenta>比如</c>

00:47:40.194 --> 00:47:42.162 align:middle line:-1
<c.magenta>何时被捕捉</c>

00:47:42.229 --> 00:47:45.465 align:middle line:-1
<c.magenta>是否为RAW、Bayer RAW图片</c>

00:47:46.066 --> 00:47:49.903 align:middle line:-2
<c.magenta>对于未压缩或RAW图片来说</c>
<c.magenta>你能获取像素缓冲数据</c>

00:47:50.737 --> 00:47:54.842 align:middle line:-2
<c.magenta>同时边频带信息也跟随</c>
<c.magenta>AVCapturePhoto一起 比如</c>

00:47:55.175 --> 00:47:58.745 align:middle line:-2
<c.magenta>你能请求的第二个</c>
<c.magenta>较小尺寸的预览图像</c>

00:47:59.279 --> 00:48:03.717 align:middle line:-2
<c.magenta>你现在还可以请求</c>
<c.magenta>第三个更小尺寸的图像</c>

00:47:59.279 --> 00:48:03.717 align:middle line:-2
<c.magenta>你现在还可以请求</c>
<c.magenta>第三个更小尺寸的图像</c>

00:48:03.984 --> 00:48:06.887 align:middle line:-1
<c.magenta>并将其作为缩略图嵌入容器中</c>

00:48:08.722 --> 00:48:11.058 align:middle line:-1
<c.magenta>ImageIO属性样式元数据库</c>

00:48:11.124 --> 00:48:15.329 align:middle line:-2
<c.magenta>是它可以包含Exif</c>
<c.magenta>或其它你所期待的元数据</c>

00:48:16.163 --> 00:48:21.335 align:middle line:-2
<c.magenta>通过iPhone 7 Plus的双摄像头</c>
<c.magenta>你可以请求提交深度数据映像</c>

00:48:21.401 --> 00:48:23.971 align:middle line:-1
<c.magenta>通过AVCapturePhoto 结果也一样</c>

00:48:25.472 --> 00:48:28.942 align:middle line:-2
<c.magenta>AVCapturePhoto还提供</c>
<c.magenta>一系列的便利访问器</c>

00:48:29.009 --> 00:48:32.212 align:middle line:-1
<c.magenta>比如引用resolvedSettings对象</c>

00:48:32.279 --> 00:48:34.114 align:middle line:-1
<c.magenta>我们曾在之前的幻灯片中看到过</c>

00:48:34.548 --> 00:48:38.752 align:middle line:-2
<c.magenta>此外 它还可以让你简便地获取</c>
<c.magenta>关于照片的记账信息</c>

00:48:39.119 --> 00:48:43.290 align:middle line:-1
<c.magenta>比如 如果你提出RAW加HEIC的请求</c>

00:48:43.490 --> 00:48:45.158 align:middle line:-1
<c.magenta>你应该会得到两张照片</c>

00:48:45.492 --> 00:48:49.496 align:middle line:-2
<c.magenta>那么照片计数访问器将会告诉你</c>
<c.magenta>这是第一张还是第二张照片？</c>

00:48:50.697 --> 00:48:53.066 align:middle line:-1
<c.magenta>如果这个照片是同等捕捉的一部分</c>

00:48:53.133 --> 00:48:57.371 align:middle line:-1
<c.magenta>比如自动曝光三或四个不同的EV值</c>

00:48:57.905 --> 00:49:01.608 align:middle line:-1
<c.magenta>它会告诉你哪个设置会导致这种结果</c>

00:48:57.905 --> 00:49:01.608 align:middle line:-1
<c.magenta>它会告诉你哪个设置会导致这种结果</c>

00:49:01.675 --> 00:49:04.311 align:middle line:-1
<c.magenta>以及它的序列号</c>

00:49:04.378 --> 00:49:07.080 align:middle line:-1
<c.magenta>以及镜头稳定性是否良好</c>

00:49:09.116 --> 00:49:12.719 align:middle line:-2
<c.magenta>AVCapturePhoto</c>
<c.magenta>还支持不同格式的转换</c>

00:49:12.786 --> 00:49:16.523 align:middle line:-1
<c.magenta>所以它很友好 并能移动到</c>

00:49:16.590 --> 00:49:18.425 align:middle line:-1
<c.magenta>你用来处理图片的其它框架上</c>

00:49:18.892 --> 00:49:22.896 align:middle line:-2
<c.magenta>首先也是最重要的</c>
<c.magenta>它支持数据表示法的转换</c>

00:49:22.963 --> 00:49:24.531 align:middle line:-1
<c.magenta>如果你指向写入文件</c>

00:49:24.865 --> 00:49:28.168 align:middle line:-2
<c.magenta>并且它还可以生成一个CGImage</c>
<c.magenta>无论是全尺寸预览</c>

00:49:28.902 --> 00:49:29.837 align:middle line:-1
<c.magenta>或是…</c>

00:49:29.903 --> 00:49:32.172 align:middle line:-1
<c.magenta>抱歉 全尺寸图片或预览图片</c>

00:49:33.974 --> 00:49:36.710 align:middle line:-1
<c.magenta>现在选择加入以获得AVCapturePhoto</c>

00:49:36.777 --> 00:49:39.646 align:middle line:-2
<c.magenta>而不是CMSampleBuffer的机制是</c>
<c.magenta>你需要实施</c>

00:49:39.713 --> 00:49:43.984 align:middle line:-2
<c.magenta>一个新代理方法</c>
<c.magenta>在你的AVCapture PhotoCapture委托中</c>

00:49:44.051 --> 00:49:47.888 align:middle line:-2
<c.magenta>就是这里的这个 很简单</c>
<c.magenta>只有三个参数</c>

00:49:48.121 --> 00:49:51.825 align:middle line:-2
<c.magenta>它提供AVCapturePhoto</c>
<c.magenta>和一个可选的报错</c>

00:49:52.459 --> 00:49:56.029 align:middle line:-2
<c.magenta>现在 无论是否有报错</c>
<c.magenta>你总是能得到AVCapturePhoto</c>

00:49:56.296 --> 00:49:58.699 align:middle line:-1
<c.magenta>并获得与之相关的尽可能多的信息</c>

00:49:58.765 --> 00:50:00.968 align:middle line:-1
<c.magenta>即使没有支持像素数据</c>

00:49:58.765 --> 00:50:00.968 align:middle line:-1
<c.magenta>即使没有支持像素数据</c>

00:50:03.170 --> 00:50:07.674 align:middle line:-2
<c.magenta>接下来的两个很长的</c>
<c.magenta>代理方法被弃用了</c>

00:50:07.975 --> 00:50:10.511 align:middle line:-1
<c.magenta>以引导你使用新的、更好的方法</c>

00:50:11.044 --> 00:50:15.482 align:middle line:-1
<c.magenta>为获得RAW或未压缩或压缩图片</c>

00:50:15.549 --> 00:50:19.820 align:middle line:-2
<c.magenta>我们经常会执行独立回调</c>
<c.magenta>didFinishProcessingPhoto</c>

00:50:19.987 --> 00:50:21.722 align:middle line:-1
<c.magenta>将为你提供一个CMSampleBuffer</c>

00:50:21.788 --> 00:50:25.492 align:middle line:-2
<c.magenta>或didFinishProcessingRawPhoto</c>
<c.magenta>将为你提供一个SampleBuffer</c>

00:50:26.260 --> 00:50:29.096 align:middle line:-2
<c.magenta>你不需要这样</c>
<c.magenta>你再也不需要使用这些了</c>

00:50:29.162 --> 00:50:33.467 align:middle line:-2
<c.magenta>你只需要使用那一个新的就可以了</c>
<c.magenta>将这两者包含在内了</c>

00:50:35.335 --> 00:50:38.939 align:middle line:-2
<c.magenta>好的 在iOS 10中</c>
<c.magenta>我们支持以下格式</c>

00:50:39.540 --> 00:50:41.842 align:middle line:-1
<c.magenta>对于压缩 你可以得到的就是JPEG</c>

00:50:42.209 --> 00:50:46.513 align:middle line:-2
<c.magenta>对于未压缩格式</c>
<c.magenta>你可以选择得到420或BGRA</c>

00:50:46.713 --> 00:50:48.715 align:middle line:-1
<c.magenta>当然了 我们支持Bayer RAW</c>

00:50:49.416 --> 00:50:53.987 align:middle line:0
<c.magenta>现在在iOS 11中</c>
<c.magenta>除了添加HEVC支持</c>

00:50:54.254 --> 00:50:56.256 align:middle line:0
<c.magenta>我们还添加了一个新规格</c>

00:50:56.757 --> 00:51:00.394 align:middle line:0
<c.magenta>你所请求的每一个图片格式</c>

00:50:56.757 --> 00:51:00.394 align:middle line:0
<c.magenta>你所请求的每一个图片格式</c>

00:51:00.460 --> 00:51:04.064 align:middle line:0
<c.magenta>也由一个文件容器格式所支持</c>

00:51:04.131 --> 00:51:09.102 align:middle line:0
<c.magenta>换句话说 含蓄地 你所捕捉的每一张</c>
<c.magenta>图像都被集装箱化了</c>

00:51:09.770 --> 00:51:13.907 align:middle line:0
<c.magenta>对于HEVC 隐含的容器是HEIC</c>

00:51:14.308 --> 00:51:18.045 align:middle line:0
<c.magenta>对于JPEG是JFIF</c>
<c.magenta>对于未压缩格式是TIFF</c>

00:51:18.512 --> 00:51:21.248 align:middle line:0
<c.magenta>对于RAW格式 跟以前一样是DNG</c>

00:51:21.782 --> 00:51:24.751 align:middle line:0
<c.magenta>现在为什么文件集装箱化是一件好事？</c>

00:51:25.452 --> 00:51:28.822 align:middle line:0
<c.magenta>答案是性能</c>
<c.magenta>让我们通过一个案例解释一下</c>

00:51:29.656 --> 00:51:32.759 align:middle line:-2
<c.magenta>那么这是你获得JPEG</c>
<c.magenta>并将其写入磁盘的老方法</c>

00:51:33.794 --> 00:51:36.263 align:middle line:-2
<c.magenta>PhotoOutput</c>
<c.magenta>会给你提交一个SampleBuffer</c>

00:51:36.430 --> 00:51:39.032 align:middle line:-1
<c.magenta>一个全尺寸图像和一个预览图像</c>

00:51:40.067 --> 00:51:42.569 align:middle line:-1
<c.magenta>且它会附加一些元数据 比如Exif</c>

00:51:42.970 --> 00:51:45.105 align:middle line:-1
<c.magenta>如果你想以任何方式改变那个</c>

00:51:45.172 --> 00:51:48.175 align:middle line:-1
<c.magenta>你需要等待 直到它提交回调</c>

00:51:48.342 --> 00:51:50.577 align:middle line:-1
<c.magenta>然后你会获得包含Exif的附件</c>

00:51:50.744 --> 00:51:54.248 align:middle line:-2
<c.magenta>篡改它并重新将其添加到</c>
<c.magenta>SampleBuffer</c>

00:51:54.781 --> 00:51:58.652 align:middle line:-2
<c.magenta>然后当把它写入磁盘时</c>
<c.magenta>你要调用PhotoOutput的</c>

00:51:59.119 --> 00:52:03.590 align:middle line:0
<c.magenta>JPEGDataPhotoRepresentation</c>
<c.magenta>并将其传入两种缓冲</c>

00:51:59.119 --> 00:52:03.590 align:middle line:0
<c.magenta>JPEGDataPhotoRepresentation</c>
<c.magenta>并将其传入两种缓冲</c>

00:52:04.324 --> 00:52:07.261 align:middle line:0
<c.magenta>结果是一个JPEG数据</c>
<c.magenta>已准备写入磁盘</c>

00:52:07.861 --> 00:52:11.632 align:middle line:0
<c.magenta>那么在代码中 它看起来很简单</c>
<c.magenta>很多都是在底层发生的</c>

00:52:12.032 --> 00:52:15.702 align:middle line:0
<c.magenta>因为我们合并了预览图像</c>
<c.magenta>和嵌入的缩略图</c>

00:52:15.903 --> 00:52:20.407 align:middle line:0
<c.magenta>我们必须从屏幕尺寸大小的图片</c>
<c.magenta>缩减为小尺寸图片</c>

00:52:20.874 --> 00:52:24.778 align:middle line:0
<c.magenta>压缩到JPEG</c>
<c.magenta>合并全部的Exif变更</c>

00:52:24.845 --> 00:52:30.784 align:middle line:0
<c.magenta>并重写全尺寸图像</c>
<c.magenta>那么要执行大量的缩减和压缩</c>

00:52:31.084 --> 00:52:33.754 align:middle line:0
<c.magenta>只因为你想包含一个缩略图</c>

00:52:33.954 --> 00:52:36.990 align:middle line:0
<c.magenta>和你的图像一起</c>
<c.magenta>并稍微修改一下元数据</c>

00:52:37.324 --> 00:52:38.559 align:middle line:0
<c.magenta>一点也没效率</c>

00:52:39.760 --> 00:52:41.929 align:middle line:-2
<c.magenta>现在通过新方式</c>
<c.magenta>AVCapturePhoto</c>

00:52:42.329 --> 00:52:46.133 align:middle line:-1
<c.magenta>让你提前指定在容器中想要得到什么</c>

00:52:47.067 --> 00:52:51.071 align:middle line:-2
<c.magenta>如果它第一次有足够的信息</c>
<c.magenta>来准备文件容器</c>

00:52:51.338 --> 00:52:53.874 align:middle line:-2
<c.magenta>那么就会在你获得</c>
<c.magenta>第一次回调之前完成</c>

00:52:55.075 --> 00:52:57.444 align:middle line:-1
<c.magenta>你的实现方式是填写一些附加功能</c>

00:52:57.511 --> 00:52:59.179 align:middle line:-1
<c.magenta>在AVCapturePhotoSettings中</c>

00:52:59.580 --> 00:53:02.516 align:middle line:-2
<c.magenta>这次你可以提前指定</c>
<c.magenta>你想要的编解码器</c>

00:52:59.580 --> 00:53:02.516 align:middle line:-2
<c.magenta>这次你可以提前指定</c>
<c.magenta>你想要的编解码器</c>

00:53:02.583 --> 00:53:04.551 align:middle line:-1
<c.magenta>以及文件类型（可选）</c>

00:53:05.485 --> 00:53:09.156 align:middle line:-1
<c.magenta>你指定要添加的元数据 如GPS位置</c>

00:53:09.223 --> 00:53:12.426 align:middle line:-1
<c.magenta>你现在甚至可以在发起请求之前实现了</c>

00:53:12.860 --> 00:53:15.128 align:middle line:-2
<c.magenta>你还可以告诉它</c>
<c.magenta>“我想要一个嵌入式缩略图</c>

00:53:15.195 --> 00:53:19.633 align:middle line:-1
<c.magenta>并且我希望它采用这些规格 ”</c>

00:53:21.034 --> 00:53:24.404 align:middle line:-2
<c.magenta>然后你就把你的请求提交给</c>
<c.magenta>AVCapturePhotoOutput 最终</c>

00:53:24.705 --> 00:53:29.643 align:middle line:-2
<c.magenta>它会给你的委托提供一个</c>
<c.magenta>AVCapturePhoto作为结果</c>

00:53:30.177 --> 00:53:34.248 align:middle line:-2
<c.magenta>这个AVCapturePhoto由已经存在于</c>
<c.magenta>HEIC容器中的东西支持</c>

00:53:34.781 --> 00:53:36.884 align:middle line:-1
<c.magenta>它已经在分格中被压缩了</c>

00:53:37.451 --> 00:53:40.988 align:middle line:-2
<c.magenta>它已经嵌入了那个</c>
<c.magenta>你请求它嵌入的缩略图</c>

00:53:41.054 --> 00:53:43.991 align:middle line:-1
<c.magenta>它已经把元数据放在了正确的位置</c>

00:53:44.825 --> 00:53:47.828 align:middle line:-2
<c.magenta>所以你要把它写入</c>
<c.magenta>磁盘的最后一个调用</c>

00:53:48.595 --> 00:53:51.031 align:middle line:-1
<c.magenta>photo.fileDataRepresentation</c>

00:53:51.431 --> 00:53:53.600 align:middle line:-1
<c.magenta>比之前例子中的那个简单多了</c>

00:53:54.168 --> 00:53:59.306 align:middle line:-2
<c.magenta>它要做的就是一个简单的字节复制</c>
<c.magenta>复制后备存储器的NSData</c>

00:53:59.806 --> 00:54:03.010 align:middle line:-1
<c.magenta>没有额外的压缩或缩减或其它操作</c>

00:53:59.806 --> 00:54:03.010 align:middle line:-1
<c.magenta>没有额外的压缩或缩减或其它操作</c>

00:54:03.076 --> 00:54:04.778 align:middle line:-1
<c.magenta>它都提前做好了</c>

00:54:05.112 --> 00:54:08.415 align:middle line:-2
<c.magenta>这样更加高效</c>
<c.magenta>尤其是当我们处理HEIF时</c>

00:54:08.749 --> 00:54:11.084 align:middle line:-1
<c.magenta>有必要获得全部性能</c>

00:54:11.151 --> 00:54:14.254 align:middle line:-2
<c.magenta>就是我之前谈到过的</c>
<c.magenta>很棒的分格格式的性能</c>

00:54:15.722 --> 00:54:19.660 align:middle line:-2
<c.magenta>现在让我们切换到一些</c>
<c.magenta>与HEVC和HEIF相关的性能注意事项</c>

00:54:20.360 --> 00:54:24.998 align:middle line:-2
<c.magenta>第一个是要用静态捕捉</c>
<c.magenta>所拍摄的照片做什么</c>

00:54:26.366 --> 00:54:30.637 align:middle line:-2
<c.magenta>当你在拍摄电影时拍摄HEIC照片时</c>
<c.magenta>你应该意识到</c>

00:54:30.904 --> 00:54:33.273 align:middle line:-1
<c.magenta>与压缩视频用的是同一个硬件模块</c>

00:54:33.340 --> 00:54:37.244 align:middle line:-1
<c.magenta>这就是执行H.264或HEVC压缩的硬件</c>

00:54:37.878 --> 00:54:43.116 align:middle line:-2
<c.magenta>如果你想编码HEIC文件</c>
<c.magenta>它也得负责执行</c>

00:54:43.350 --> 00:54:45.619 align:middle line:-1
<c.magenta>当HEVC为压缩格式时</c>

00:54:46.420 --> 00:54:49.423 align:middle line:-1
<c.magenta>硬件模块可能非常繁忙</c>

00:54:49.489 --> 00:54:54.294 align:middle line:-2
<c.magenta>如果你正在捕捉高带域的视频</c>
<c.magenta>比如4k 30或1080p 60</c>

00:54:55.362 --> 00:54:59.666 align:middle line:-2
<c.magenta>视频有即时截止时间</c>
<c.magenta>所以它比静态图像的优先级高</c>

00:55:00.000 --> 00:55:03.136 align:middle line:-2
<c.magenta>意思是可能会等很长时间</c>
<c.magenta>才能得到静态结果</c>

00:55:03.770 --> 00:55:08.542 align:middle line:-1
<c.magenta>并且也意味着它们比原本要大20%</c>

00:55:08.842 --> 00:55:11.478 align:middle line:-1
<c.magenta>因为编码器忙于使用全部功能</c>

00:55:11.545 --> 00:55:14.381 align:middle line:-2
<c.magenta>如果它不需要赶那个</c>
<c.magenta>即时的截止时间的话</c>

00:55:14.448 --> 00:55:16.216 align:middle line:-1
<c.magenta>每秒30帧或60帧</c>

00:55:16.950 --> 00:55:19.620 align:middle line:-2
<c.magenta>那么我们的建议是</c>
<c.magenta>如果你正在捕捉视频</c>

00:55:19.887 --> 00:55:24.424 align:middle line:-2
<c.magenta>同时也捕捉静态图像</c>
<c.magenta>你应该使用JPEG以让照片</c>

00:55:24.591 --> 00:55:29.663 align:middle line:-2
<c.magenta>离开HEVC编码器</c>
<c.magenta>让编码器对视频尽可能地可用</c>

00:55:32.299 --> 00:55:35.802 align:middle line:-1
<c.magenta>另一个考虑是HEVC和HEIF连发</c>

00:55:36.069 --> 00:55:39.039 align:middle line:-2
<c.magenta>这是你用力压住按钮的位置</c>
<c.magenta>并尝试获得</c>

00:55:40.407 --> 00:55:45.345 align:middle line:-2
<c.magenta>一个恒定的帧速率 也许每秒10帧</c>
<c.magenta>对于图像捕捉来说</c>

00:55:46.246 --> 00:55:49.416 align:middle line:-2
<c.magenta>HEVC编码 很明显</c>
<c.magenta>它所做的比JPEG要更多</c>

00:55:49.716 --> 00:55:53.887 align:middle line:-2
<c.magenta>它要提交一个比JPEG大小</c>
<c.magenta>要小一半多的文件</c>

00:55:54.288 --> 00:55:56.657 align:middle line:-1
<c.magenta>因此 HEVC编码需要的时间也更长</c>

00:55:57.324 --> 00:56:02.129 align:middle line:-2
<c.magenta>现在我们已经基准了</c>
<c.magenta>HEVC HEIF</c>

00:55:57.324 --> 00:56:02.129 align:middle line:-2
<c.magenta>现在我们已经基准了</c>
<c.magenta>HEVC HEIF</c>

00:56:02.663 --> 00:56:09.169 align:middle line:-2
<c.magenta>可以达到连拍的最小请求10 fps</c>
<c.magenta>我们感到很棒</c>

00:56:09.469 --> 00:56:12.306 align:middle line:-1
<c.magenta>但如果你需要捕捉比那更高的帧速率</c>

00:56:12.472 --> 00:56:15.509 align:middle line:-1
<c.magenta>我们的建议是返回JPEG来进行连拍</c>

00:56:17.845 --> 00:56:21.014 align:middle line:-2
<c.magenta>我们今天了解了很多压缩相关的信息</c>
<c.magenta>我觉得我是玩忽职守</c>

00:56:21.081 --> 00:56:27.487 align:middle line:-2
<c.magenta>如果我不在WWDC与你们分享我的想法</c>
<c.magenta>这毕竟是一场压缩演讲</c>

00:56:27.988 --> 00:56:31.058 align:middle line:-1
<c.magenta>那么我不能把这个就这样挂在那儿</c>

00:56:31.825 --> 00:56:33.794 align:middle line:-1
<c.magenta>全球开发者大会</c>

00:56:34.628 --> 00:56:35.662 align:middle line:-1
<c.magenta>九个音节</c>

00:56:36.797 --> 00:56:40.634 align:middle line:-1
<c.magenta>W-W-D-C 八个音节</c>

00:56:41.068 --> 00:56:43.971 align:middle line:-1
<c.magenta>这就像是有史以来最糟糕的压缩格式</c>

00:56:44.037 --> 00:56:48.709 align:middle line:-1
<c.magenta>它失真了 它像是.1对1压缩比</c>

00:56:48.775 --> 00:56:50.577 align:middle line:-1
<c.magenta>甚至比无失真的JPEG更糟糕</c>

00:56:51.011 --> 00:56:53.247 align:middle line:-1
<c.magenta>那么作为一个服务给我</c>

00:56:53.614 --> 00:56:55.282 align:middle line:-1
<c.magenta>在大会余下的时间里</c>

00:56:55.349 --> 00:57:00.921 align:middle line:-2
<c.magenta>请只参加那些Dub-Dub的大会</c>
<c.magenta>或者我们也可以接受Wuh-Duck</c>

00:56:55.349 --> 00:57:00.921 align:middle line:-2
<c.magenta>请只参加那些Dub-Dub的大会</c>
<c.magenta>或者我们也可以接受Wuh-Duck</c>

00:57:03.557 --> 00:57:05.592 align:middle line:0
<c.magenta>好的 让我们总结一下</c>
<c.magenta>我们今天学到的内容</c>

00:57:06.793 --> 00:57:11.798 align:middle line:0
<c.magenta>HEVC电影的一般性内容</c>
<c.magenta>比H.264要小达40%</c>

00:57:11.865 --> 00:57:15.569 align:middle line:0
<c.magenta>对于在iOS上捕捉的内容也小2倍</c>

00:57:16.170 --> 00:57:20.874 align:middle line:0
<c.magenta>同时 iOS 11和High Sierra</c>
<c.magenta>均支持HEVC播放</c>

00:57:21.041 --> 00:57:23.577 align:middle line:0
<c.magenta>有时是软件 有时是硬件</c>

00:57:24.178 --> 00:57:27.447 align:middle line:0
<c.magenta>并且创建HEVC内容</c>
<c.magenta>你需要选择加入</c>

00:57:27.514 --> 00:57:30.384 align:middle line:0
<c.magenta>新的捕捉API或新的导出API</c>

00:57:30.884 --> 00:57:35.756 align:middle line:0
<c.magenta>此外 我们了解了HEIC文件</c>
<c.magenta>它们比JPEG文件小一倍</c>

00:57:36.256 --> 00:57:40.761 align:middle line:0
<c.magenta>并且iOS 11和macOS上</c>
<c.magenta>均支持那种解码</c>

00:57:41.128 --> 00:57:46.500 align:middle line:0
<c.magenta>捕捉仅支持iOS并且配有A10芯片</c>

00:57:46.667 --> 00:57:49.536 align:middle line:0
<c.magenta>你可以通过</c>
<c.magenta>新的AVCapturePhoto界面实现</c>

00:57:50.671 --> 00:57:54.675 align:middle line:-2
<c.magenta>要获取更多信息</c>
<c.magenta>这是今天演讲的URL</c>

00:57:56.276 --> 00:57:59.246 align:middle line:-2
<c.magenta>我还想提供一些</c>
<c.magenta>与本场演讲相关的姐妹演讲</c>

00:57:59.479 --> 00:58:02.649 align:middle line:-1
<c.magenta>列表中的第一个 高效率图档格式</c>

00:57:59.479 --> 00:58:02.649 align:middle line:-1
<c.magenta>列表中的第一个 高效率图档格式</c>

00:58:02.716 --> 00:58:04.451 align:middle line:-1
<c.magenta>是直奔视频而去的</c>

00:58:04.952 --> 00:58:10.057 align:middle line:-2
<c.magenta>这场演讲是真的深入研究</c>
<c.magenta>HEIF文件中的位元的</c>

00:58:10.424 --> 00:58:14.328 align:middle line:-2
<c.magenta>这是一场很棒很棒的演讲</c>
<c.magenta>你绝对应该听一下</c>

00:58:14.628 --> 00:58:16.196 align:middle line:-1
<c.magenta>演讲人是戴维德 所以你可以</c>

00:58:16.263 --> 00:58:18.465 align:middle line:-1
<c.magenta>同时感受一下很棒的意大利口音</c>

00:58:19.466 --> 00:58:23.036 align:middle line:-2
<c.magenta>还有 HEIF和HEVC简介</c>
<c.magenta>是在周二</c>

00:58:23.237 --> 00:58:27.407 align:middle line:-2
<c.magenta>提供了一个关于我们今天</c>
<c.magenta>所讲内容的较高层级的介绍</c>

00:58:27.708 --> 00:58:31.178 align:middle line:-1
<c.magenta>最后是深度演讲 我引用了很多次</c>

00:58:31.245 --> 00:58:33.814 align:middle line:-1
<c.magenta>它们有许多针对我们在HEIF中</c>

00:58:33.881 --> 00:58:36.783 align:middle line:-1
<c.magenta>存储深度的辅助图像格式的补充</c>

00:58:38.318 --> 00:58:40.153 align:middle line:-2
<c.magenta>谢谢大家 祝你们在接下来的</c>
<c.magenta>大会中度过美好时光</c>
