WEBVTT

00:00:27.516 --> 00:00:33.196 A:middle
[掌声]

00:00:33.696 --> 00:00:35.746 A:middle
&gt;&gt;  早上好

00:00:35.746 --> 00:00:37.316 A:middle
欢迎来听

00:00:37.376 --> 00:00:38.326 A:middle
有关应用软件和演化网络安全标准的介绍

00:00:38.846 --> 00:00:41.086 A:middle
我是 Bailey Basile

00:00:41.086 --> 00:00:42.636 A:middle
苹果公司的

00:00:42.636 --> 00:00:43.086 A:middle
安全传输工程师

00:00:43.856 --> 00:00:45.406 A:middle
今天  我的同事 Chris 和我

00:00:45.406 --> 00:00:46.966 A:middle
将会向你介绍网络安全标准的变化

00:00:46.966 --> 00:00:48.876 A:middle
以及这些变化给你

00:00:48.916 --> 00:00:51.106 A:middle
和你的应用软件

00:00:51.106 --> 00:00:52.616 A:middle
所带来的影响

00:00:53.766 --> 00:00:55.896 A:middle
相信所有用户

00:00:55.896 --> 00:00:57.936 A:middle
都像我们一样

00:00:57.936 --> 00:00:59.256 A:middle
关心隐私和安全问题

00:00:59.256 --> 00:01:01.446 A:middle
这也是为什么

00:00:59.256 --> 00:01:01.446 A:middle
这也是为什么

00:01:01.446 --> 00:01:04.226 A:middle
当你看到像 Beast  Crime 和 Drown 一样的攻击时

00:01:04.306 --> 00:01:06.656 A:middle
你会担忧

00:01:06.656 --> 00:01:09.856 A:middle
你的 App 是否受到了影响

00:01:10.336 --> 00:01:13.346 A:middle
不幸的是

00:01:13.476 --> 00:01:15.856 A:middle
所有协议都有使用期限

00:01:15.856 --> 00:01:18.166 A:middle
这些协议在公众中使用

00:01:18.166 --> 00:01:19.086 A:middle
随着时间的推移  它们会受到越来越多的攻击

00:01:20.136 --> 00:01:23.356 A:middle
更糟的是

00:01:23.356 --> 00:01:26.906 A:middle
标准所依赖的算法

00:01:26.906 --> 00:01:29.346 A:middle
都有自身的保质期

00:01:29.836 --> 00:01:32.126 A:middle
这意味着它们会过时

00:01:32.206 --> 00:01:34.886 A:middle
随着电脑的速度越来越快

00:01:34.886 --> 00:01:36.726 A:middle
这些算法在面对诸如冲突

00:01:36.726 --> 00:01:38.926 A:middle
因式分解和暴力这些攻击时

00:01:39.346 --> 00:01:41.696 A:middle
更加的脆弱

00:01:43.086 --> 00:01:44.856 A:middle
这些听起来很可怕的攻击

00:01:44.896 --> 00:01:47.286 A:middle
像是 Flame Breach

00:01:47.616 --> 00:01:49.586 A:middle
和 Poodle

00:01:49.586 --> 00:01:51.136 A:middle
也许 Poodle 听起来

00:01:51.136 --> 00:01:51.686 A:middle
并没有那么可怕

00:01:52.796 --> 00:01:54.316 A:middle
当你听到这些可怕的攻击

00:01:54.316 --> 00:01:56.856 A:middle
你就会开始想你能做些什么

00:01:56.856 --> 00:01:59.336 A:middle
来避免你的 App

00:01:59.336 --> 00:02:01.066 A:middle
在下一个严重攻击发生时

00:01:59.336 --> 00:02:01.066 A:middle
在下一个严重攻击发生时

00:02:01.406 --> 00:02:03.146 A:middle
受到影响

00:02:03.816 --> 00:02:05.376 A:middle
这也是为什么

00:02:05.376 --> 00:02:06.736 A:middle
今天我要讲一些

00:02:06.736 --> 00:02:09.466 A:middle
你可以执行的方法

00:02:09.496 --> 00:02:11.926 A:middle
来保证你的 App

00:02:11.926 --> 00:02:12.716 A:middle
不受影响

00:02:13.166 --> 00:02:14.986 A:middle
我也会讲到一些

00:02:14.986 --> 00:02:18.896 A:middle
关于苹果

00:02:18.896 --> 00:02:20.956 A:middle
是如何通过把不安全的选项移除我们的运行平台

00:02:20.956 --> 00:02:21.916 A:middle
来帮助你的

00:02:23.176 --> 00:02:24.416 A:middle
Chris 会向你介绍

00:02:24.466 --> 00:02:26.356 A:middle
App 传输安全的更新

00:02:26.396 --> 00:02:28.156 A:middle
这是一个机制

00:02:28.156 --> 00:02:30.736 A:middle
你可以用在你的 App 中

00:02:30.736 --> 00:02:32.286 A:middle
来保证

00:02:32.286 --> 00:02:33.856 A:middle
最优运行

00:02:35.236 --> 00:02:36.916 A:middle
最后

00:02:36.916 --> 00:02:39.466 A:middle
Chris 将会向你介绍

00:02:39.466 --> 00:02:42.386 A:middle
传输层安全

00:02:42.386 --> 00:02:44.416 A:middle
和该协议的重大革新

00:02:45.436 --> 00:02:46.966 A:middle
现在

00:02:47.006 --> 00:02:48.046 A:middle
就让我们开始吧

00:02:48.886 --> 00:02:50.876 A:middle
我会从高层开始

00:02:51.576 --> 00:02:53.256 A:middle
首先

00:02:53.256 --> 00:02:56.386 A:middle
你需要记住

00:02:56.386 --> 00:02:58.476 A:middle
你不能设置

00:02:58.476 --> 00:03:00.376 A:middle
和忘记你 App 的安全性

00:02:58.476 --> 00:03:00.376 A:middle
和忘记你 App 的安全性

00:03:00.376 --> 00:03:03.186 A:middle
因为我说过所有的协议都有寿命

00:03:03.236 --> 00:03:05.576 A:middle
这些标准都有内置的保质期

00:03:06.486 --> 00:03:08.246 A:middle
你必须定期进行检查

00:03:08.246 --> 00:03:10.886 A:middle
并确认你的 App

00:03:10.886 --> 00:03:12.386 A:middle
是最新的

00:03:12.806 --> 00:03:14.926 A:middle
想知道需要改变什么

00:03:14.926 --> 00:03:16.516 A:middle
你必须紧跟标准机构

00:03:16.556 --> 00:03:19.226 A:middle
学术研究

00:03:19.226 --> 00:03:21.506 A:middle
和行业最佳实践

00:03:22.256 --> 00:03:24.706 A:middle
但好消息是

00:03:24.706 --> 00:03:26.996 A:middle
你已经这样做了

00:03:26.996 --> 00:03:28.776 A:middle
因为你今天

00:03:28.866 --> 00:03:29.366 A:middle
坐在这里

00:03:30.616 --> 00:03:34.076 A:middle
如果你是开发人员

00:03:34.076 --> 00:03:35.916 A:middle
或者是库开发者

00:03:35.916 --> 00:03:38.416 A:middle
你可能在使用你 App 中的

00:03:38.416 --> 00:03:39.466 A:middle
第三方库

00:03:39.466 --> 00:03:41.276 A:middle
这对你的应用程序是非常危险的

00:03:41.776 --> 00:03:42.986 A:middle
特别是

00:03:42.986 --> 00:03:44.226 A:middle
如果你在整合第三方库时

00:03:44.226 --> 00:03:46.136 A:middle
你必须确保第三方库

00:03:46.226 --> 00:03:47.246 A:middle
保持最新

00:03:47.696 --> 00:03:49.376 A:middle
你三年前集成的库

00:03:49.486 --> 00:03:52.156 A:middle
已经过时了

00:03:52.156 --> 00:03:54.576 A:middle
而且

00:03:54.646 --> 00:03:55.406 A:middle
可能被削弱了安全性

00:03:55.636 --> 00:03:57.446 A:middle
这意味着你的用户

00:03:57.446 --> 00:03:59.166 A:middle
没有得到你想让他们得到的

00:03:59.166 --> 00:03:59.766 A:middle
安全性

00:04:01.456 --> 00:04:04.096 A:middle
如果你在使用我们的 API

00:04:04.096 --> 00:04:05.026 A:middle
我们将竭诚为您服务

00:04:05.386 --> 00:04:07.396 A:middle
首先

00:04:07.396 --> 00:04:10.146 A:middle
我们删除了很多我们的 API 里不安全的选项

00:04:10.416 --> 00:04:12.406 A:middle
来让你不受影响

00:04:13.756 --> 00:04:15.586 A:middle
我们也提供了 App 传输安全

00:04:15.846 --> 00:04:18.255 A:middle
即 ATS

00:04:18.255 --> 00:04:19.736 A:middle
来使你能够在你的 App 中

00:04:19.736 --> 00:04:21.755 A:middle
执行最佳实践

00:04:21.755 --> 00:04:23.986 A:middle
只要你避免

00:04:23.986 --> 00:04:26.246 A:middle
ATS 异常

00:04:27.986 --> 00:04:29.436 A:middle
最后

00:04:29.686 --> 00:04:32.236 A:middle
在这些攻击发生之前

00:04:32.236 --> 00:04:34.446 A:middle
你必须提醒你的客户

00:04:34.476 --> 00:04:37.306 A:middle
投资者和经理人

00:04:37.646 --> 00:04:39.246 A:middle
为你的 App 提供维护费

00:04:39.296 --> 00:04:42.126 A:middle
用来对 App 进行更新是十分值得的

00:04:42.126 --> 00:04:44.376 A:middle
因为这样一来

00:04:44.376 --> 00:04:46.526 A:middle
当下一次攻击发生时

00:04:46.526 --> 00:04:48.716 A:middle
你不会因为被指责成一个表现欠佳的 App 被扰乱

00:04:48.716 --> 00:04:51.536 A:middle
而疯狂补救

00:04:52.166 --> 00:04:56.516 A:middle
浪费自身的时间

00:04:56.626 --> 00:04:59.086 A:middle
力气和金钱

00:04:59.246 --> 00:05:01.196 A:middle
所以

00:04:59.246 --> 00:05:01.196 A:middle
所以

00:05:01.196 --> 00:05:02.376 A:middle
让我们回头看看

00:05:02.376 --> 00:05:03.076 A:middle
我之前提到的那些攻击

00:05:04.046 --> 00:05:05.246 A:middle
我想详细介绍一些最佳的做法

00:05:05.286 --> 00:05:07.126 A:middle
你可以用来

00:05:07.126 --> 00:05:08.806 A:middle
避免这些攻击

00:05:09.346 --> 00:05:11.036 A:middle
具体来说

00:05:11.036 --> 00:05:13.506 A:middle
在加密领域中

00:05:13.506 --> 00:05:17.776 A:middle
有加密杂凑  公钥  协议

00:05:18.446 --> 00:05:19.846 A:middle
和撤销几种方法

00:05:19.846 --> 00:05:23.326 A:middle
所以

00:05:23.326 --> 00:05:24.546 A:middle
让我们开始介绍一下加密

00:05:25.376 --> 00:05:27.236 A:middle
加密

00:05:27.236 --> 00:05:29.786 A:middle
大家都知道

00:05:29.786 --> 00:05:31.996 A:middle
是一种可以用来防止攻击者

00:05:31.996 --> 00:05:33.756 A:middle
读取你的用户数据的机制

00:05:34.876 --> 00:05:36.556 A:middle
但不幸的是

00:05:36.556 --> 00:05:38.246 A:middle
一些我们长久以来

00:05:38.246 --> 00:05:40.036 A:middle
一直使用的加密算法

00:05:40.396 --> 00:05:42.536 A:middle
在面对攻击时是十分脆弱的

00:05:42.536 --> 00:05:46.226 A:middle
因为攻击者可以轻易的

00:05:46.226 --> 00:05:48.136 A:middle
恢复关键数据

00:05:48.166 --> 00:05:48.766 A:middle
甚至原文

00:05:49.126 --> 00:05:51.096 A:middle
比如

00:05:51.176 --> 00:05:53.986 A:middle
RC 4 是非常容易被攻击的

00:05:53.986 --> 00:05:55.896 A:middle
因为密钥

00:05:55.896 --> 00:05:57.646 A:middle
可以在三天内被恢复出来

00:05:58.636 --> 00:06:00.906 A:middle
此外

00:05:58.636 --> 00:06:00.906 A:middle
此外

00:06:00.906 --> 00:06:04.856 A:middle
Triple-DES 和 AES 的 CBC 模式

00:06:04.856 --> 00:06:06.816 A:middle
都是容易受到像 Beast

00:06:07.186 --> 00:06:11.036 A:middle
和 Lucky 13 这样的攻击

00:06:11.516 --> 00:06:13.106 A:middle
这意味着你的算法

00:06:13.206 --> 00:06:15.086 A:middle
并没有向你的用户提供

00:06:15.086 --> 00:06:18.646 A:middle
预期中那么高的安全性

00:06:19.366 --> 00:06:22.696 A:middle
将来

00:06:22.696 --> 00:06:25.336 A:middle
我们打算删除我们平台下 TLS 中的

00:06:25.396 --> 00:06:26.856 A:middle
RC 4 和 Triple-DES

00:06:27.236 --> 00:06:29.916 A:middle
所以现在是时候升级了

00:06:31.336 --> 00:06:32.926 A:middle
同时

00:06:32.996 --> 00:06:34.526 A:middle
你应该使用认证加密算法

00:06:34.526 --> 00:06:37.206 A:middle
如 AES-GCM

00:06:37.206 --> 00:06:39.726 A:middle
或 ChaCha20 / Poly1305

00:06:40.686 --> 00:06:42.026 A:middle
这些算法将确保

00:06:42.026 --> 00:06:45.426 A:middle
你不仅有最好的加密

00:06:45.426 --> 00:06:47.516 A:middle
并且可以检测到数据

00:06:47.516 --> 00:06:48.196 A:middle
是否被修改

00:06:49.306 --> 00:06:50.726 A:middle
说到修改数据

00:06:51.126 --> 00:06:52.156 A:middle
我们来讨论一下

00:06:52.156 --> 00:06:53.826 A:middle
加密杂凑

00:06:54.026 --> 00:06:56.516 A:middle
众所周知

00:06:56.516 --> 00:06:58.446 A:middle
加密杂凑是一种

00:06:58.446 --> 00:07:01.136 A:middle
让你可以监测到数据

00:06:58.446 --> 00:07:01.136 A:middle
让你可以监测到数据

00:07:01.136 --> 00:07:03.556 A:middle
是否被修改的机制

00:07:04.016 --> 00:07:05.716 A:middle
但不幸的是

00:07:05.716 --> 00:07:07.536 A:middle
一些我们一直在使用的

00:07:07.586 --> 00:07:09.896 A:middle
加密杂凑

00:07:09.896 --> 00:07:11.086 A:middle
容易受到所谓的

00:07:11.086 --> 00:07:11.856 A:middle
碰撞攻击

00:07:12.536 --> 00:07:14.126 A:middle
碰撞攻击

00:07:14.126 --> 00:07:15.866 A:middle
是两个不同的输入

00:07:15.866 --> 00:07:17.546 A:middle
产生完全相同的输出

00:07:17.846 --> 00:07:21.046 A:middle
所以

00:07:21.616 --> 00:07:23.606 A:middle
你不知道什么时候

00:07:23.896 --> 00:07:25.396 A:middle
攻击者修改了数据

00:07:25.476 --> 00:07:25.986 A:middle
因为得到的哈希值会是相同的

00:07:26.436 --> 00:07:29.716 A:middle
特别是 MD-5

00:07:29.716 --> 00:07:32.026 A:middle
和 SHA-1

00:07:32.026 --> 00:07:32.636 A:middle
都已经证实了碰撞攻击

00:07:34.296 --> 00:07:37.096 A:middle
事实上

00:07:37.096 --> 00:07:39.296 A:middle
MD-5 的碰撞

00:07:39.296 --> 00:07:41.896 A:middle
是用于火焰恶意软件绕过平台安全

00:07:41.946 --> 00:07:43.756 A:middle
来获得

00:07:43.756 --> 00:07:44.826 A:middle
访问用户系统的权限

00:07:45.536 --> 00:07:48.506 A:middle
前几年

00:07:48.586 --> 00:07:50.096 A:middle
我们删除了我们平台上的

00:07:50.156 --> 00:07:52.166 A:middle
所有 MD-5 证书

00:07:53.736 --> 00:07:56.616 A:middle
SHA-1

00:07:56.886 --> 00:07:57.036 A:middle
刚刚受到了一次攻击

00:07:57.036 --> 00:07:58.726 A:middle
这次攻击

00:07:59.166 --> 00:08:01.656 A:middle
是在今年早些时候发生的

00:07:59.166 --> 00:08:01.656 A:middle
是在今年早些时候发生的

00:08:01.656 --> 00:08:03.396 A:middle
所以这是一个最新的信息

00:08:03.856 --> 00:08:06.806 A:middle
知道 SHA-1 的攻击即将来临

00:08:06.926 --> 00:08:08.516 A:middle
我们删除了

00:08:08.596 --> 00:08:10.756 A:middle
使用 WebKit 和 Safari 建立连接时

00:08:10.756 --> 00:08:13.446 A:middle
所有对于 TLS 服务器

00:08:13.896 --> 00:08:16.936 A:middle
签署的

00:08:17.066 --> 00:08:18.126 A:middle
SHA-1 证书

00:08:19.026 --> 00:08:20.376 A:middle
我们已经看到

00:08:20.376 --> 00:08:23.346 A:middle
SHA-1 证书中

00:08:23.346 --> 00:08:25.696 A:middle
磁盘使用的改进

00:08:25.776 --> 00:08:26.856 A:middle
今天我宣布

00:08:26.856 --> 00:08:29.516 A:middle
我们要清除

00:08:29.716 --> 00:08:32.015 A:middle
所有 SHA-1 证书中的

00:08:32.056 --> 00:08:32.716 A:middle
TLS 连接

00:08:33.306 --> 00:08:35.066 A:middle
我会再更多地介绍

00:08:35.066 --> 00:08:36.616 A:middle
这将如何影响你

00:08:36.616 --> 00:08:38.296 A:middle
和你的 App

00:08:39.316 --> 00:08:41.216 A:middle
此外

00:08:41.216 --> 00:08:44.296 A:middle
为了获得最好的安全性

00:08:44.296 --> 00:08:46.746 A:middle
并避免这些碰撞攻击

00:08:47.106 --> 00:08:48.766 A:middle
你应该使用任何一种 SHA-2 系列的

00:08:50.156 --> 00:08:50.316 A:middle
哈希算法

00:08:50.606 --> 00:08:51.836 A:middle
接下来

00:08:52.046 --> 00:08:52.786 A:middle
我想谈谈公钥

00:08:53.366 --> 00:08:55.746 A:middle
像大家熟知的一样

00:08:55.746 --> 00:08:58.346 A:middle
公钥是一种

00:08:58.346 --> 00:09:00.746 A:middle
提供身份的

00:08:58.346 --> 00:09:00.746 A:middle
提供身份的

00:09:00.746 --> 00:09:01.186 A:middle
机制

00:09:01.486 --> 00:09:03.906 A:middle
因此

00:09:03.906 --> 00:09:05.676 A:middle
别人可以验证

00:09:05.676 --> 00:09:07.526 A:middle
你签署的东西是你签的

00:09:07.586 --> 00:09:08.206 A:middle
而不是其他人签的

00:09:08.936 --> 00:09:11.256 A:middle
并可以用来

00:09:11.256 --> 00:09:14.026 A:middle
给你发送只有你可以用你的私钥解密的

00:09:14.026 --> 00:09:15.906 A:middle
加密数据

00:09:16.956 --> 00:09:19.646 A:middle
但不幸的是

00:09:19.846 --> 00:09:22.236 A:middle
RSA 密钥大小小于 1024 位

00:09:22.236 --> 00:09:25.856 A:middle
所以对于因式分解类的攻击来说

00:09:25.916 --> 00:09:26.166 A:middle
是非常脆弱的

00:09:27.226 --> 00:09:30.566 A:middle
特别是

00:09:30.566 --> 00:09:33.966 A:middle
一个 768 位的 RSA 密钥

00:09:34.476 --> 00:09:36.806 A:middle
在 2009 年就被因式分解了

00:09:36.866 --> 00:09:39.436 A:middle
这就是为什么我们在 2016 年春季的时候

00:09:39.536 --> 00:09:42.866 A:middle
就移除了

00:09:42.866 --> 00:09:44.956 A:middle
所有使用小于 1024 位 RSA 的证书

00:09:46.216 --> 00:09:49.916 A:middle
但现实是

00:09:49.916 --> 00:09:52.856 A:middle
哪怕 1024 位的 RSA 密钥

00:09:52.856 --> 00:09:53.226 A:middle
都不是足够完美的

00:09:53.566 --> 00:09:55.796 A:middle
并且我们认为马上

00:09:55.796 --> 00:09:58.866 A:middle
就会有一次针对 1024 位 RSA 密钥的攻击

00:09:59.216 --> 00:10:02.556 A:middle
所以这意味着

00:09:59.216 --> 00:10:02.556 A:middle
所以这意味着

00:10:02.556 --> 00:10:04.136 A:middle
我们将会移除

00:10:04.136 --> 00:10:06.836 A:middle
所有

00:10:06.906 --> 00:10:09.346 A:middle
TLS 服务器连接中的

00:10:09.756 --> 00:10:11.976 A:middle
小于 2048 位密钥尺寸的

00:10:11.976 --> 00:10:12.546 A:middle
证书

00:10:13.496 --> 00:10:15.406 A:middle
为了避免这些清除

00:10:15.866 --> 00:10:18.586 A:middle
并确保你有最好的安全保障

00:10:18.726 --> 00:10:20.596 A:middle
你应该

00:10:20.656 --> 00:10:22.986 A:middle
使用密钥大小大于

00:10:23.036 --> 00:10:26.526 A:middle
或等于 2048 位的RSA密钥

00:10:26.526 --> 00:10:27.966 A:middle
或任何我们平台信任的

00:10:27.966 --> 00:10:29.916 A:middle
椭圆曲线

00:10:30.576 --> 00:10:33.396 A:middle
接下来

00:10:33.396 --> 00:10:34.916 A:middle
我想花一些时间谈论协议

00:10:36.136 --> 00:10:38.696 A:middle
众所周知

00:10:38.696 --> 00:10:40.956 A:middle
协议是

00:10:40.956 --> 00:10:42.436 A:middle
与服务器交流时使用的机制

00:10:42.796 --> 00:10:44.196 A:middle
它们是能共同操作的

00:10:44.196 --> 00:10:45.346 A:middle
这意味着

00:10:45.346 --> 00:10:47.336 A:middle
你不必担心

00:10:47.336 --> 00:10:49.306 A:middle
你所交流的服务器

00:10:49.696 --> 00:10:51.086 A:middle
是否支持

00:10:51.086 --> 00:10:51.666 A:middle
你使用的协议

00:10:52.656 --> 00:10:53.956 A:middle
不幸的是

00:10:54.026 --> 00:10:58.026 A:middle
其中一些协议

00:10:58.136 --> 00:10:59.886 A:middle
比较薄弱或不提供安全性

00:10:59.886 --> 00:11:02.716 A:middle
如果你使用 http

00:10:59.886 --> 00:11:02.716 A:middle
如果你使用 http

00:11:02.716 --> 00:11:04.326 A:middle
那么

00:11:04.326 --> 00:11:05.936 A:middle
你所有的用户数据都会被透明地传输

00:11:06.366 --> 00:11:08.106 A:middle
这意味着

00:11:08.106 --> 00:11:09.996 A:middle
任何人都可以知道这些数据

00:11:11.286 --> 00:11:13.796 A:middle
但是

00:11:14.156 --> 00:11:16.356 A:middle
一些较旧的 TLS 版本

00:11:16.836 --> 00:11:20.986 A:middle
如 SSL Version 3 TLS 1.0 和 TLS 1.1

00:11:20.986 --> 00:11:23.086 A:middle
也是容易受到众多攻击的

00:11:24.216 --> 00:11:26.426 A:middle
所以

00:11:26.426 --> 00:11:28.746 A:middle
当你配置你的服务器时

00:11:28.746 --> 00:11:29.346 A:middle
应该避免这些

00:11:30.006 --> 00:11:32.656 A:middle
在 2015 年秋天

00:11:32.656 --> 00:11:36.136 A:middle
我们删除了 SSLVersion 3

00:11:36.136 --> 00:11:37.786 A:middle
所以

00:11:38.006 --> 00:11:39.386 A:middle
你暂时是受到保护的

00:11:40.306 --> 00:11:42.176 A:middle
并且

00:11:42.516 --> 00:11:47.146 A:middle
你应该使用

00:11:47.766 --> 00:11:50.246 A:middle
HTTPS 和 TLS 1.2

00:11:50.846 --> 00:11:53.266 A:middle
TLS 1.2

00:11:53.626 --> 00:11:56.636 A:middle
是目前可用于 TLS 安全的

00:11:56.886 --> 00:11:57.496 A:middle
最好的标准

00:11:58.146 --> 00:11:59.376 A:middle
但我很高兴地宣布

00:11:59.376 --> 00:12:00.876 A:middle
今天

00:11:59.376 --> 00:12:00.876 A:middle
今天

00:12:00.876 --> 00:12:03.166 A:middle
我们正在增加

00:12:03.346 --> 00:12:04.706 A:middle
对于 TLS 1.3 草案规范的支持

00:12:05.586 --> 00:12:07.376 A:middle
Chris 一会将会更多地

00:12:07.406 --> 00:12:08.696 A:middle
谈论这方面的信息

00:12:10.126 --> 00:12:11.936 A:middle
最后

00:12:12.186 --> 00:12:13.076 A:middle
我想谈谈撤销

00:12:13.686 --> 00:12:15.646 A:middle
撤销

00:12:15.646 --> 00:12:18.546 A:middle
是一种客户用来

00:12:18.546 --> 00:12:19.916 A:middle
验证证书

00:12:19.916 --> 00:12:21.326 A:middle
并确定

00:12:21.326 --> 00:12:23.946 A:middle
当证书处理不当

00:12:23.946 --> 00:12:26.996 A:middle
或过期时

00:12:27.476 --> 00:12:28.296 A:middle
该证书是否应该被信任的机制

00:12:28.896 --> 00:12:31.036 A:middle
当然

00:12:31.036 --> 00:12:32.636 A:middle
最糟糕的是

00:12:32.636 --> 00:12:36.746 A:middle
你可以不检查就撤销

00:12:36.876 --> 00:12:39.466 A:middle
不幸的是

00:12:39.466 --> 00:12:41.896 A:middle
目前

00:12:42.026 --> 00:12:44.176 A:middle
我们的平台默认情况下不检查撤销

00:12:44.406 --> 00:12:44.896 A:middle
我之后会解释这是为什么

00:12:45.606 --> 00:12:48.196 A:middle
也就是说

00:12:48.196 --> 00:12:50.266 A:middle
除非你正在使用 OCSP Stapling

00:12:50.796 --> 00:12:53.136 A:middle
OCSP 是

00:12:53.226 --> 00:12:54.996 A:middle
在线证书状态协议

00:12:55.526 --> 00:12:57.606 A:middle
如果

00:12:57.606 --> 00:13:00.776 A:middle
你的服务器正在使用 OCSP Stapling

00:12:57.606 --> 00:13:00.776 A:middle
你的服务器正在使用 OCSP Stapling

00:13:00.886 --> 00:13:02.116 A:middle
你的证书就会

00:13:02.116 --> 00:13:02.866 A:middle
总是被检查撤销

00:13:03.706 --> 00:13:05.646 A:middle
所以

00:13:05.646 --> 00:13:09.326 A:middle
让我们深入了解一下 OCSP 和

00:13:10.036 --> 00:13:13.596 A:middle
OCSP Stapling 工作机制 首先

00:13:13.776 --> 00:13:15.906 A:middle
像往常一样

00:13:16.126 --> 00:13:17.816 A:middle
服务器从可信的

00:13:17.876 --> 00:13:18.966 A:middle
被称为证书颁发机构的第三方请求证书

00:13:19.756 --> 00:13:22.206 A:middle
然后

00:13:22.206 --> 00:13:24.306 A:middle
服务器使用这个证书

00:13:24.366 --> 00:13:26.676 A:middle
来让连接到它的客户端识别自己

00:13:27.376 --> 00:13:29.486 A:middle
客户端

00:13:29.486 --> 00:13:32.406 A:middle
为了验证那个身份

00:13:32.716 --> 00:13:34.796 A:middle
从证书颁发机构

00:13:34.796 --> 00:13:36.696 A:middle
请求

00:13:36.766 --> 00:13:38.136 A:middle
关于该证书状态的信息

00:13:38.806 --> 00:13:39.976 A:middle
认证机构

00:13:39.976 --> 00:13:41.876 A:middle
回复一条

00:13:42.026 --> 00:13:44.676 A:middle
已认证的消息

00:13:44.676 --> 00:13:45.996 A:middle
来表明

00:13:45.996 --> 00:13:47.626 A:middle
客户端所查找的证书的状态

00:13:47.806 --> 00:13:49.096 A:middle
客户端

00:13:49.096 --> 00:13:50.916 A:middle
确定该回应后

00:13:51.206 --> 00:13:53.366 A:middle
使用返回的证书状态

00:13:53.366 --> 00:13:55.356 A:middle
来判断是否

00:13:55.446 --> 00:13:55.836 A:middle
要继续连接服务器

00:13:56.806 --> 00:13:59.516 A:middle
但不幸的是

00:13:59.516 --> 00:14:00.076 A:middle
OCSP 有一些缺点

00:13:59.516 --> 00:14:00.076 A:middle
OCSP 有一些缺点

00:14:00.926 --> 00:14:02.636 A:middle
从之前的介绍

00:14:02.896 --> 00:14:04.736 A:middle
你可以看出

00:14:04.736 --> 00:14:06.846 A:middle
对于每一个

00:14:07.196 --> 00:14:08.896 A:middle
对服务器的连接

00:14:08.896 --> 00:14:09.446 A:middle
它都需要一个额外的网络连接

00:14:10.726 --> 00:14:12.806 A:middle
这意味着

00:14:12.806 --> 00:14:15.346 A:middle
你的 App 内部连接会很慢

00:14:15.346 --> 00:14:17.696 A:middle
这是我们不想看到的

00:14:18.146 --> 00:14:20.726 A:middle
此外

00:14:20.876 --> 00:14:21.836 A:middle
OCSP 是完全透明的执行的

00:14:22.306 --> 00:14:23.616 A:middle
这意味着

00:14:24.026 --> 00:14:25.166 A:middle
所有的传输

00:14:25.206 --> 00:14:27.016 A:middle
都表明了用户想要查询哪一个证书

00:14:27.046 --> 00:14:29.306 A:middle
这对于任何人

00:14:29.456 --> 00:14:30.216 A:middle
都是透明的

00:14:30.706 --> 00:14:33.076 A:middle
OCSP

00:14:33.076 --> 00:14:35.366 A:middle
之所以透明化的原因是

00:14:36.026 --> 00:14:37.816 A:middle
你需要它

00:14:37.816 --> 00:14:40.136 A:middle
来建立安全的连接

00:14:40.296 --> 00:14:41.746 A:middle
所以

00:14:41.806 --> 00:14:44.486 A:middle
如果你需要建立一个安全连接

00:14:44.656 --> 00:14:46.046 A:middle
来实现 OCSP

00:14:46.046 --> 00:14:46.646 A:middle
你将会陷入一个死循环

00:14:47.266 --> 00:14:49.786 A:middle
这就是为什么

00:14:49.786 --> 00:14:51.386 A:middle
OCSP 是对用户隐私的

00:14:51.426 --> 00:14:52.156 A:middle
巨大牺牲

00:14:52.636 --> 00:14:54.146 A:middle
因为

00:14:54.146 --> 00:14:54.716 A:middle
所有的信息都是透明化的

00:14:55.316 --> 00:14:57.546 A:middle
任何正在监听的人

00:14:57.626 --> 00:14:59.296 A:middle
都可以找出

00:14:59.406 --> 00:15:00.786 A:middle
客户端在试图连接哪一个服务器

00:14:59.406 --> 00:15:00.786 A:middle
客户端在试图连接哪一个服务器

00:15:01.476 --> 00:15:03.416 A:middle
此外

00:15:03.476 --> 00:15:06.006 A:middle
该第三方证书颁发机构

00:15:06.006 --> 00:15:08.506 A:middle
可以汇总

00:15:08.506 --> 00:15:10.286 A:middle
关于哪个客户端试图连接哪个服务器

00:15:10.286 --> 00:15:13.366 A:middle
向哪个 IP 地址传输等这些信息

00:15:13.366 --> 00:15:15.516 A:middle
并将这些信息售卖给别人

00:15:15.516 --> 00:15:18.566 A:middle
这是非常糟糕的

00:15:18.676 --> 00:15:20.916 A:middle
这两个缺点的原因

00:15:20.916 --> 00:15:24.436 A:middle
是

00:15:24.436 --> 00:15:25.256 A:middle
我们没有默认启用 OCSP

00:15:25.926 --> 00:15:28.156 A:middle
如果你想在你的 App 中

00:15:28.156 --> 00:15:30.566 A:middle
启用 OCSP

00:15:30.566 --> 00:15:33.786 A:middle
你将不得不集成额外的 API

00:15:34.436 --> 00:15:36.996 A:middle
所以

00:15:37.176 --> 00:15:39.126 A:middle
接下来我想谈谈 OCSP Stapling

00:15:39.126 --> 00:15:42.666 A:middle
这是一个 OCSP 的

00:15:42.956 --> 00:15:44.646 A:middle
巨大改进

00:15:44.646 --> 00:15:46.356 A:middle
并且是协议的一个重大革新

00:15:46.356 --> 00:15:48.326 A:middle
因为它删掉了 OCSP 的很多缺点

00:15:49.146 --> 00:15:51.116 A:middle
像以前一样

00:15:51.116 --> 00:15:52.976 A:middle
服务器从证书颁发机构

00:15:52.976 --> 00:15:53.546 A:middle
得到一个证书

00:15:54.336 --> 00:15:56.646 A:middle
但

00:15:56.646 --> 00:15:58.536 A:middle
在发送证书给客户端之前

00:15:58.696 --> 00:16:01.156 A:middle
服务器

00:15:58.696 --> 00:16:01.156 A:middle
服务器

00:16:01.156 --> 00:16:04.256 A:middle
请求从证书颁发机构的

00:16:04.256 --> 00:16:04.826 A:middle
OCSP 回复

00:16:05.126 --> 00:16:06.336 A:middle
当传回已认证的回复后

00:16:06.336 --> 00:16:08.956 A:middle
服务器

00:16:08.956 --> 00:16:11.216 A:middle
会对该回复进行验证

00:16:11.216 --> 00:16:13.306 A:middle
然后再将该回复

00:16:13.306 --> 00:16:13.846 A:middle
与证书一起传回给客户端

00:16:14.646 --> 00:16:16.756 A:middle
客户端

00:16:16.786 --> 00:16:18.426 A:middle
便能同时

00:16:18.426 --> 00:16:19.486 A:middle
验证证书

00:16:19.636 --> 00:16:20.746 A:middle
和撤销状态

00:16:21.346 --> 00:16:23.326 A:middle
所以

00:16:23.326 --> 00:16:25.096 A:middle
这是一个巨大的改进

00:16:25.096 --> 00:16:26.506 A:middle
在性能方面

00:16:26.506 --> 00:16:27.636 A:middle
你不必再在你的客户端上

00:16:27.636 --> 00:16:28.076 A:middle
建立额外的网络连接

00:16:28.726 --> 00:16:31.236 A:middle
在隐私方面

00:16:31.236 --> 00:16:32.806 A:middle
客户端

00:16:32.806 --> 00:16:35.216 A:middle
不必连接到第三方

00:16:35.216 --> 00:16:37.166 A:middle
来查找撤销状态

00:16:38.546 --> 00:16:41.346 A:middle
但是

00:16:41.346 --> 00:16:41.876 A:middle
即使是 OCSP Stapling 也有一些缺点

00:16:42.826 --> 00:16:44.946 A:middle
我们注意到

00:16:44.946 --> 00:16:46.956 A:middle
尽管鼓励大家

00:16:46.956 --> 00:16:48.556 A:middle
在自己的服务器上采用该机制

00:16:48.556 --> 00:16:50.226 A:middle
这个采用的过程都很缓慢

00:16:51.246 --> 00:16:54.006 A:middle
我们知道

00:16:54.006 --> 00:16:56.696 A:middle
在一些开源服务器中

00:16:56.896 --> 00:16:59.176 A:middle
启用 OCSP

00:16:59.176 --> 00:16:59.606 A:middle
会有一些缺点

00:17:00.216 --> 00:17:02.076 A:middle
但是

00:17:02.076 --> 00:17:05.146 A:middle
我们还是鼓励你

00:17:05.146 --> 00:17:07.806 A:middle
去解决这些问题

00:17:07.806 --> 00:17:10.955 A:middle
并且采用 OCSP

00:17:10.955 --> 00:17:12.796 A:middle
来提高你 App 的安全性和速度

00:17:13.076 --> 00:17:15.856 A:middle
但是

00:17:15.856 --> 00:17:17.766 A:middle
OCSP 最糟糕的事情是

00:17:17.766 --> 00:17:20.516 A:middle
它实际上

00:17:20.576 --> 00:17:21.116 A:middle
并没有保护用户免受恶意服务器的攻击

00:17:21.766 --> 00:17:23.665 A:middle
特别是

00:17:23.665 --> 00:17:26.195 A:middle
恶意服务器

00:17:26.195 --> 00:17:28.616 A:middle
只需要省略 OCSP 响应

00:17:28.616 --> 00:17:31.276 A:middle
客户端

00:17:31.276 --> 00:17:33.016 A:middle
就永远都不会知道恶意服务器的证书

00:17:33.016 --> 00:17:33.786 A:middle
已经被撤销

00:17:35.106 --> 00:17:36.446 A:middle
今天

00:17:36.446 --> 00:17:39.066 A:middle
我很高兴的向大家宣布

00:17:39.066 --> 00:17:41.946 A:middle
我们正在加强

00:17:41.946 --> 00:17:43.266 A:middle
我们所有平台的

00:17:43.926 --> 00:17:46.256 A:middle
撤销机制

00:17:46.746 --> 00:17:49.126 A:middle
首先

00:17:49.286 --> 00:17:51.176 A:middle
我们从证书透明度日志

00:17:51.176 --> 00:17:51.646 A:middle
收集信息

00:17:52.146 --> 00:17:54.246 A:middle
证书透明度日志

00:17:54.356 --> 00:17:58.256 A:middle
包含

00:17:58.336 --> 00:18:00.376 A:middle
一个证书的

00:17:58.336 --> 00:18:00.376 A:middle
一个证书的

00:18:00.456 --> 00:18:01.136 A:middle
加密证明

00:18:01.756 --> 00:18:04.166 A:middle
你可以通过

00:18:04.536 --> 00:18:06.856 A:middle
看去年的“安全新特性”

00:18:06.856 --> 00:18:08.336 A:middle
来得到更多

00:18:08.336 --> 00:18:10.626 A:middle
关于证书透明度的信息

00:18:10.926 --> 00:18:13.066 A:middle
以及它是怎样工作的

00:18:13.146 --> 00:18:13.666 A:middle
你要如何使用它来提高你 App 的安全性

00:18:15.016 --> 00:18:16.696 A:middle
我们使用

00:18:16.746 --> 00:18:18.966 A:middle
从证书透明度日志上

00:18:19.046 --> 00:18:21.056 A:middle
得到的信息

00:18:21.056 --> 00:18:22.646 A:middle
来找到所有

00:18:22.646 --> 00:18:23.516 A:middle
我们平台所信任的证书

00:18:23.866 --> 00:18:25.406 A:middle
如果

00:18:25.626 --> 00:18:28.086 A:middle
你想帮助我们

00:18:28.086 --> 00:18:29.806 A:middle
搜集有关你的 App

00:18:29.806 --> 00:18:32.246 A:middle
和服务器的证书信息

00:18:32.646 --> 00:18:34.286 A:middle
你需要验证你的证书是否

00:18:34.286 --> 00:18:35.936 A:middle
已经记录在了证书透明度日志中

00:18:36.566 --> 00:18:39.176 A:middle
许多 CA 将为你做这件事

00:18:39.176 --> 00:18:41.886 A:middle
所以你只需要检查

00:18:42.776 --> 00:18:45.406 A:middle
有了这些信息

00:18:45.406 --> 00:18:47.206 A:middle
我们就能知道

00:18:47.206 --> 00:18:50.126 A:middle
所有被我们平台所信任的

00:18:50.466 --> 00:18:52.056 A:middle
证书颁发机构

00:18:52.216 --> 00:18:54.336 A:middle
并且

00:18:54.336 --> 00:18:57.076 A:middle
通过这些信息

00:18:57.076 --> 00:18:58.736 A:middle
我们可以从证书颁发机构

00:18:58.736 --> 00:18:59.866 A:middle
请求所有的撤销信息

00:19:01.176 --> 00:19:03.316 A:middle
然后

00:19:03.316 --> 00:19:04.756 A:middle
我们收集所有这些撤销信息

00:19:05.556 --> 00:19:07.566 A:middle
我们把这些撤销信息

00:19:07.566 --> 00:19:09.796 A:middle
都聚集在一起

00:19:09.796 --> 00:19:11.746 A:middle
我们的所有客户端

00:19:11.746 --> 00:19:12.136 A:middle
都可以使用这些信息

00:19:13.726 --> 00:19:15.516 A:middle
那些客户

00:19:15.516 --> 00:19:18.466 A:middle
定期登记

00:19:18.466 --> 00:19:20.466 A:middle
来获取撤销信息

00:19:21.626 --> 00:19:24.916 A:middle
并且

00:19:25.016 --> 00:19:27.386 A:middle
当他们在检查

00:19:27.746 --> 00:19:30.046 A:middle
他们所用的服务器证书时

00:19:30.046 --> 00:19:31.206 A:middle
使用这些最新的撤销信息

00:19:32.466 --> 00:19:36.176 A:middle
如果客户端点击

00:19:36.246 --> 00:19:38.346 A:middle
一个在撤销列表中的证书

00:19:38.346 --> 00:19:40.436 A:middle
客户端就会运行 OCSP

00:19:40.766 --> 00:19:43.586 A:middle
除非

00:19:43.846 --> 00:19:45.866 A:middle
你的 App 在使用 OCSP Stapling

00:19:47.116 --> 00:19:49.586 A:middle
客户端

00:19:49.586 --> 00:19:51.206 A:middle
使用这种方法来

00:19:51.206 --> 00:19:51.726 A:middle
验证证书真的已经被撤销

00:19:51.726 --> 00:19:54.436 A:middle
所以

00:19:54.436 --> 00:19:56.336 A:middle
我们说

00:19:56.406 --> 00:19:58.246 A:middle
对于当年我们平台的撤销状态

00:19:58.246 --> 00:19:58.986 A:middle
这是一个巨大的进步

00:20:00.046 --> 00:20:02.346 A:middle
在隐私妥协领域

00:20:02.606 --> 00:20:04.496 A:middle
也有一个重大的改进

00:20:05.336 --> 00:20:06.896 A:middle
我们所提供的

00:20:06.896 --> 00:20:08.296 A:middle
撤销信息

00:20:08.296 --> 00:20:09.996 A:middle
对于我们所有的客户端

00:20:10.156 --> 00:20:11.756 A:middle
和所有的平台都是相同的

00:20:12.216 --> 00:20:15.106 A:middle
所以

00:20:15.106 --> 00:20:16.906 A:middle
我们永远不会知道是哪个客户端

00:20:17.736 --> 00:20:20.016 A:middle
连接到了哪个服务器 此外

00:20:20.016 --> 00:20:23.636 A:middle
只有在那个列表中的证书

00:20:23.636 --> 00:20:26.156 A:middle
才需要额外的 OCSP 连接

00:20:27.566 --> 00:20:30.946 A:middle
所以

00:20:30.946 --> 00:20:33.436 A:middle
如果你的服务器

00:20:33.536 --> 00:20:35.796 A:middle
没有用 OCSP Stapling

00:20:35.976 --> 00:20:38.076 A:middle
只有小部分证书

00:20:38.076 --> 00:20:38.826 A:middle
将面临额外隐私妥协的危险

00:20:40.186 --> 00:20:43.556 A:middle
另一个巨大的优势

00:20:43.596 --> 00:20:47.376 A:middle
是

00:20:47.516 --> 00:20:48.216 A:middle
信息是自动更新的

00:20:49.166 --> 00:20:50.316 A:middle
这意味着

00:20:50.596 --> 00:20:52.946 A:middle
当客户端

00:20:52.946 --> 00:20:55.026 A:middle
在建立连接时

00:20:55.026 --> 00:20:56.906 A:middle
他们总能获得

00:20:56.906 --> 00:20:59.476 A:middle
最新的撤销信息

00:20:59.476 --> 00:21:01.156 A:middle
并且这一切都是免费的

00:20:59.476 --> 00:21:01.156 A:middle
并且这一切都是免费的

00:21:01.486 --> 00:21:03.196 A:middle
你不需要

00:21:03.196 --> 00:21:05.176 A:middle
建立一个单独的 API

00:21:05.176 --> 00:21:07.906 A:middle
来获得这种最高的安全性

00:21:08.026 --> 00:21:08.806 A:middle
和更快的连接速度

00:21:09.976 --> 00:21:12.426 A:middle
在之前的二十分钟

00:21:12.426 --> 00:21:14.036 A:middle
我已经讲了大部分的内容

00:21:14.036 --> 00:21:16.346 A:middle
接下来

00:21:16.346 --> 00:21:16.726 A:middle
我想对这些内容进行一下回顾

00:21:17.386 --> 00:21:19.636 A:middle
首先

00:21:19.916 --> 00:21:21.766 A:middle
我们讨论了加密

00:21:21.766 --> 00:21:24.856 A:middle
和在你的服务器或 App 中使用

00:21:24.946 --> 00:21:25.956 A:middle
认证的加密密码

00:21:27.106 --> 00:21:29.836 A:middle
我们讨论了哈希算法

00:21:29.836 --> 00:21:33.236 A:middle
以及如何避免碰撞攻击

00:21:33.426 --> 00:21:35.936 A:middle
我们谈论了公钥

00:21:35.936 --> 00:21:38.336 A:middle
和使用强大的

00:21:38.336 --> 00:21:40.966 A:middle
不受因式分解影响的

00:21:41.056 --> 00:21:42.176 A:middle
公钥

00:21:43.256 --> 00:21:45.246 A:middle
我们还谈及了协议

00:21:45.246 --> 00:21:47.826 A:middle
以及使用最新的协议

00:21:47.826 --> 00:21:51.966 A:middle
如 TLS 1.2 和 HTTPS

00:21:51.966 --> 00:21:53.266 A:middle
来保护你的 App

00:21:53.646 --> 00:21:55.316 A:middle
最后

00:21:55.316 --> 00:21:57.916 A:middle
我们谈了一下撤销

00:21:57.916 --> 00:22:00.276 A:middle
及如何通过

00:21:57.916 --> 00:22:00.276 A:middle
及如何通过

00:22:00.486 --> 00:22:03.186 A:middle
在服务器上使用撤销

00:22:03.186 --> 00:22:04.736 A:middle
来提高你的 App 的安全性

00:22:04.736 --> 00:22:06.506 A:middle
及我们研究出的

00:22:06.506 --> 00:22:08.596 A:middle
可以帮助到你的

00:22:08.596 --> 00:22:09.246 A:middle
全新的撤销机制

00:22:10.806 --> 00:22:12.586 A:middle
现在

00:22:12.586 --> 00:22:14.956 A:middle
我要讲一下

00:22:15.026 --> 00:22:16.616 A:middle
我之前所提到的

00:22:16.696 --> 00:22:17.226 A:middle
移除一些不安全选项

00:22:18.206 --> 00:22:20.286 A:middle
我们先来回忆一下刚才提到的

00:22:20.366 --> 00:22:22.006 A:middle
移除的内容都是什么

00:22:23.416 --> 00:22:25.396 A:middle
首先

00:22:25.396 --> 00:22:28.676 A:middle
我提到说

00:22:28.786 --> 00:22:30.906 A:middle
我们会在所有我们的平台中

00:22:30.906 --> 00:22:32.786 A:middle
移除所有对 TLS 服务器连接的

00:22:32.846 --> 00:22:34.986 A:middle
SHA-1 的证书

00:22:35.906 --> 00:22:37.816 A:middle
我还说过

00:22:37.816 --> 00:22:39.356 A:middle
我们将会移除所有

00:22:39.396 --> 00:22:41.976 A:middle
使用密钥尺寸小于 2048 位 RSA 的证书

00:22:42.136 --> 00:22:46.446 A:middle
包括

00:22:46.446 --> 00:22:48.266 A:middle
对服务器的所有

00:22:48.266 --> 00:22:48.736 A:middle
TLS 连接

00:22:50.206 --> 00:22:52.086 A:middle
如果

00:22:52.206 --> 00:22:55.976 A:middle
你用来连接到服务器的 TLS

00:22:55.976 --> 00:22:58.256 A:middle
包含

00:22:58.256 --> 00:23:01.106 A:middle
以上所提到的安全性较低的证书

00:22:58.256 --> 00:23:01.106 A:middle
以上所提到的安全性较低的证书

00:23:01.286 --> 00:23:04.166 A:middle
你的 App 会无法在

00:23:04.586 --> 00:23:07.366 A:middle
macOS High Sierra iOS 11 watchOS 4

00:23:07.586 --> 00:23:08.996 A:middle
和 Apple tvOS 11上 建立连接

00:23:09.836 --> 00:23:13.516 A:middle
让我们接下来讨论一下

00:23:13.516 --> 00:23:16.496 A:middle
基于我刚才的讲解

00:23:16.496 --> 00:23:18.196 A:middle
哪些证书是在信任移除中

00:23:18.626 --> 00:23:19.926 A:middle
没有受到影响的

00:23:20.866 --> 00:23:23.876 A:middle
首先

00:23:23.876 --> 00:23:24.556 A:middle
根证书并没有受到影响

00:23:25.606 --> 00:23:27.466 A:middle
因为

00:23:27.516 --> 00:23:29.936 A:middle
根证书不受到

00:23:29.976 --> 00:23:31.376 A:middle
我们所担忧的

00:23:31.376 --> 00:23:34.076 A:middle
SHA-1 中的碰撞攻击的影响

00:23:35.196 --> 00:23:38.526 A:middle
并且

00:23:38.526 --> 00:23:40.116 A:middle
在 2015 年秋季

00:23:40.116 --> 00:23:43.026 A:middle
我们就已经移除了

00:23:43.496 --> 00:23:45.996 A:middle
所有使用的密钥尺寸小于 2048 位的根证书

00:23:46.226 --> 00:23:47.666 A:middle
所以

00:23:47.786 --> 00:23:48.616 A:middle
你目前是受到保护的

00:23:50.096 --> 00:23:51.906 A:middle
这些信任

00:23:51.906 --> 00:23:53.826 A:middle
也并没有影响到

00:23:53.826 --> 00:23:55.966 A:middle
移除移动设备管理中的

00:23:55.966 --> 00:23:57.816 A:middle
企业分布式证书

00:23:58.496 --> 00:24:00.486 A:middle
它也没有影响到

00:23:58.496 --> 00:24:00.486 A:middle
它也没有影响到

00:24:00.486 --> 00:24:02.626 A:middle
邮件 Safari 和钥匙串访问中的

00:24:02.626 --> 00:24:05.596 A:middle
用户安装证书

00:24:06.766 --> 00:24:08.336 A:middle
最后

00:24:08.716 --> 00:24:11.096 A:middle
它也不影响在 TLS 中

00:24:11.336 --> 00:24:13.516 A:middle
使用相互认证的

00:24:13.616 --> 00:24:13.986 A:middle
客户端证书

00:24:15.196 --> 00:24:16.776 A:middle
这并不是说

00:24:16.846 --> 00:24:19.076 A:middle
我们不担心对于证书的攻击

00:24:19.156 --> 00:24:21.236 A:middle
事实上，我们非常担忧

00:24:21.916 --> 00:24:24.156 A:middle
但是我们知道

00:24:24.826 --> 00:24:26.886 A:middle
企业和用户

00:24:26.956 --> 00:24:29.676 A:middle
需要花费一些时间

00:24:29.976 --> 00:24:31.956 A:middle
来更新他们的证书

00:24:31.956 --> 00:24:33.496 A:middle
以及更新他们的基础设施以便使用最新的算法

00:24:33.916 --> 00:24:35.346 A:middle
所以

00:24:35.346 --> 00:24:36.596 A:middle
我们为他们预留了一些时间

00:24:37.446 --> 00:24:39.936 A:middle
所以

00:24:39.936 --> 00:24:41.086 A:middle
我们将会晚一些

00:24:41.086 --> 00:24:42.376 A:middle
再移除那些证书

00:24:42.706 --> 00:24:44.896 A:middle
所以

00:24:44.896 --> 00:24:46.516 A:middle
现在是时候开始更新的工作了

00:24:47.936 --> 00:24:49.506 A:middle
你也许会好奇说

00:24:49.506 --> 00:24:51.036 A:middle
移除的证书到底看起来是什么样子的

00:24:51.466 --> 00:24:52.646 A:middle
因为如果它们会影响到你的App

00:24:52.896 --> 00:24:53.746 A:middle
你是应该做一些了解的

00:24:54.526 --> 00:24:56.596 A:middle
如果你使用 Safari

00:24:56.596 --> 00:24:57.726 A:middle
你会看到一个像这样的

00:24:57.726 --> 00:24:59.106 A:middle
错误对话框

00:24:59.726 --> 00:25:01.776 A:middle
如果

00:24:59.726 --> 00:25:01.776 A:middle
如果

00:25:01.836 --> 00:25:04.056 A:middle
我们深入看一下证书窗格

00:25:04.056 --> 00:25:06.136 A:middle
我们就会发现

00:25:06.176 --> 00:25:08.416 A:middle
对于这些移除的证书

00:25:08.506 --> 00:25:08.916 A:middle
都会有一个具体的错误信息

00:25:08.916 --> 00:25:11.616 A:middle
这样

00:25:11.666 --> 00:25:13.136 A:middle
你就会知道

00:25:13.136 --> 00:25:13.766 A:middle
你是否连接到了一个这样的证书

00:25:15.076 --> 00:25:16.536 A:middle
你们中的很多人

00:25:16.646 --> 00:25:18.206 A:middle
都是 App 开发人员

00:25:18.206 --> 00:25:19.346 A:middle
所以

00:25:19.346 --> 00:25:20.086 A:middle
你们会更加关心你将会在日志中看到些什么

00:25:20.086 --> 00:25:21.706 A:middle
因为你可能永远不会通过 Safari

00:25:21.706 --> 00:25:23.806 A:middle
来连接到这个服务器

00:25:24.466 --> 00:25:25.796 A:middle
如果你正在查看日志

00:25:26.046 --> 00:25:28.036 A:middle
你会在你的 URL 会话

00:25:28.166 --> 00:25:33.086 A:middle
或者 URL 连接中

00:25:33.086 --> 00:25:34.836 A:middle
看到无效搜索

00:25:34.916 --> 00:25:35.506 A:middle
或者 -9807 SSL 错误信息

00:25:37.336 --> 00:25:39.836 A:middle
你只能通过一个方法

00:25:39.836 --> 00:25:41.636 A:middle
来修复这个问题

00:25:41.636 --> 00:25:43.996 A:middle
就是让你的服务器管理员

00:25:43.996 --> 00:25:46.456 A:middle
升级他们的服务器

00:25:46.456 --> 00:25:48.056 A:middle
以使用

00:25:48.126 --> 00:25:48.986 A:middle
新的证书

00:25:50.186 --> 00:25:52.346 A:middle
好消息是

00:25:52.406 --> 00:25:54.016 A:middle
所有我们平台

00:25:54.086 --> 00:25:57.146 A:middle
所信任的证书颁发机构

00:25:57.146 --> 00:25:58.556 A:middle
都不受到

00:25:58.796 --> 00:26:01.446 A:middle
这些证书移除的影响

00:25:58.796 --> 00:26:01.446 A:middle
这些证书移除的影响

00:26:01.446 --> 00:26:03.196 A:middle
并且

00:26:03.196 --> 00:26:04.776 A:middle
你可以从这个连接上

00:26:04.776 --> 00:26:08.926 A:middle
找到所有我们平台所信任的

00:26:09.026 --> 00:26:09.146 A:middle
根证书列表

00:26:09.236 --> 00:26:11.156 A:middle
我们现在的讲解

00:26:11.156 --> 00:26:13.986 A:middle
又更多地覆盖了一些内容

00:26:13.986 --> 00:26:15.796 A:middle
现在当我回到我的办公室

00:26:15.796 --> 00:26:18.656 A:middle
至少我会开始想我应该做些什么

00:26:18.656 --> 00:26:21.626 A:middle
我应该怎样才能保证

00:26:21.626 --> 00:26:23.056 A:middle
我有最好的安全措施

00:26:23.526 --> 00:26:24.756 A:middle
所以

00:26:24.756 --> 00:26:26.916 A:middle
你需要做的第一件事

00:26:26.916 --> 00:26:29.026 A:middle
就是依据那些我所提到的

00:26:29.176 --> 00:26:30.766 A:middle
最好的安全措施

00:26:30.766 --> 00:26:32.386 A:middle
来检查你的执行 库和服务器

00:26:33.066 --> 00:26:34.646 A:middle
我们甚至有一些

00:26:34.706 --> 00:26:36.976 A:middle
很方便的图表

00:26:36.976 --> 00:26:39.096 A:middle
你可以使用它们来确保你使用了

00:26:39.926 --> 00:26:42.006 A:middle
最好的算法 如果

00:26:42.006 --> 00:26:43.656 A:middle
你是一个服务器开发人员

00:26:43.656 --> 00:26:46.416 A:middle
你需要做一些工作

00:26:46.496 --> 00:26:48.236 A:middle
来确保你为你所有的客户端

00:26:48.386 --> 00:26:49.296 A:middle
提供了最好的安全性

00:26:51.216 --> 00:26:52.366 A:middle
你需要浏览

00:26:52.366 --> 00:26:55.336 A:middle
并替换

00:26:55.406 --> 00:26:58.376 A:middle
所有 SHA-1

00:26:58.376 --> 00:27:00.626 A:middle
或者薄弱的 RSA 密钥证书

00:26:58.376 --> 00:27:00.626 A:middle
或者薄弱的 RSA 密钥证书

00:27:00.756 --> 00:27:01.786 A:middle
来保证你的客户不会在我们的平台运行失败

00:27:02.506 --> 00:27:04.546 A:middle
此外

00:27:04.546 --> 00:27:06.816 A:middle
你应该将你的服务器升级至 TLS 1.2

00:27:06.816 --> 00:27:09.946 A:middle
并且

00:27:10.156 --> 00:27:11.936 A:middle
使用我之前所提到的

00:27:12.026 --> 00:27:13.286 A:middle
任何一种权威的加密密码

00:27:14.756 --> 00:27:16.986 A:middle
你应该

00:27:16.986 --> 00:27:19.506 A:middle
让用户来决定这些密码的顺序

00:27:19.506 --> 00:27:22.326 A:middle
因为

00:27:22.326 --> 00:27:25.346 A:middle
对于同等安全性的密码

00:27:25.346 --> 00:27:27.806 A:middle
用户倾向于

00:27:27.806 --> 00:27:30.356 A:middle
使用那些

00:27:30.456 --> 00:27:32.106 A:middle
更好更快的密码

00:27:33.596 --> 00:27:34.716 A:middle
同时

00:27:34.876 --> 00:27:37.866 A:middle
你还需要启用 OCSP Stapling

00:27:37.866 --> 00:27:40.166 A:middle
以确认

00:27:40.166 --> 00:27:42.556 A:middle
你所有的客户端

00:27:42.556 --> 00:27:44.436 A:middle
都实时得到

00:27:44.796 --> 00:27:46.756 A:middle
最新的撤销信息

00:27:46.756 --> 00:27:48.866 A:middle
并且保证你的客户

00:27:48.936 --> 00:27:49.656 A:middle
不需要建立额外的隐私妥协网络连接

00:27:51.036 --> 00:27:52.886 A:middle
最后

00:27:53.246 --> 00:27:54.836 A:middle
为了帮助我们建立

00:27:54.836 --> 00:27:56.746 A:middle
我们新的撤销机制

00:27:56.746 --> 00:27:58.726 A:middle
我们需要你检查你的证书

00:27:58.726 --> 00:28:00.496 A:middle
是否已经记录在了

00:27:58.726 --> 00:28:00.496 A:middle
是否已经记录在了

00:28:00.496 --> 00:28:00.836 A:middle
证书透明度日志中

00:28:02.166 --> 00:28:04.246 A:middle
你们中的很多人

00:28:04.416 --> 00:28:05.096 A:middle
是 App 开发人员

00:28:05.986 --> 00:28:07.616 A:middle
你们来说好消息是

00:28:07.616 --> 00:28:09.926 A:middle
你们只需要做一个工作

00:28:10.816 --> 00:28:13.016 A:middle
我们平台易于

00:28:13.016 --> 00:28:15.556 A:middle
让你们采用最佳实践

00:28:15.556 --> 00:28:18.616 A:middle
并且你们要做的

00:28:18.906 --> 00:28:19.796 A:middle
只是避免使用例外的 ATS

00:28:19.976 --> 00:28:22.026 A:middle
如果

00:28:22.026 --> 00:28:22.626 A:middle
你正在使用一个例外的 ATS

00:28:22.626 --> 00:28:25.856 A:middle
你的连接

00:28:25.856 --> 00:28:28.606 A:middle
就不能达到我们平台

00:28:28.656 --> 00:28:30.536 A:middle
所想要实现的安全级别

00:28:31.306 --> 00:28:34.716 A:middle
所以

00:28:34.716 --> 00:28:36.236 A:middle
现在 Chris 将会向你介绍更多的

00:28:36.236 --> 00:28:37.996 A:middle
一些关于 App 传输安全的内容

00:28:37.996 --> 00:28:39.436 A:middle
并且

00:28:39.436 --> 00:28:40.676 A:middle
向你介绍当前的最新动态

00:28:41.106 --> 00:28:41.326 A:middle
Chris

00:28:42.516 --> 00:28:48.696 A:middle
[掌声]

00:28:49.196 --> 00:28:49.826 A:middle
&gt;&gt;  谢谢 Bailey

00:28:49.826 --> 00:28:51.906 A:middle
现在

00:28:51.996 --> 00:28:54.206 A:middle
我想更深入地

00:28:54.206 --> 00:28:55.666 A:middle
探讨一下

00:28:56.876 --> 00:28:57.136 A:middle
ATS

00:28:57.136 --> 00:28:57.956 A:middle
ATS 其实就是

00:28:57.956 --> 00:28:59.126 A:middle
我们在 iOS 9 中

00:28:59.126 --> 00:29:01.106 A:middle
所添加的一个功能

00:28:59.126 --> 00:29:01.106 A:middle
所添加的一个功能

00:29:01.596 --> 00:29:02.966 A:middle
旨在

00:29:02.966 --> 00:29:04.346 A:middle
提高用户数据的

00:29:04.346 --> 00:29:05.126 A:middle
安全性和隐私性

00:29:05.796 --> 00:29:09.106 A:middle
ATS 确保大部分

00:29:09.106 --> 00:29:10.466 A:middle
通过网络发送的

00:29:10.466 --> 00:29:11.806 A:middle
应用数据

00:29:11.806 --> 00:29:12.826 A:middle
都被默认加密和保护

00:29:14.716 --> 00:29:16.266 A:middle
这意味着

00:29:16.266 --> 00:29:18.656 A:middle
我们从不安全的 HTTP

00:29:18.946 --> 00:29:19.816 A:middle
转变成了 HTTPS

00:29:19.816 --> 00:29:22.166 A:middle
这也意味着一些事情

00:29:22.936 --> 00:29:25.076 A:middle
首先

00:29:25.076 --> 00:29:26.506 A:middle
意味着要使用最新标准版本的 TLS

00:29:26.746 --> 00:29:27.636 A:middle
即 版本 1.2

00:29:28.176 --> 00:29:29.556 A:middle
这些

00:29:29.556 --> 00:29:31.256 A:middle
都在这几年间

00:29:31.256 --> 00:29:32.846 A:middle
进行了不断地更新和维护

00:29:32.846 --> 00:29:34.136 A:middle
因为我们考虑了之前 Bailey 所提及的那些攻击

00:29:35.046 --> 00:29:36.256 A:middle
这也意味着

00:29:36.256 --> 00:29:36.886 A:middle
使用更强力的加密

00:29:37.646 --> 00:29:39.306 A:middle
这意味着

00:29:39.306 --> 00:29:41.096 A:middle
使用块加密

00:29:41.096 --> 00:29:41.926 A:middle
像SHA-2种类中的 AES 算法和哈希函数

00:29:43.236 --> 00:29:44.696 A:middle
更重要的是

00:29:44.696 --> 00:29:46.186 A:middle
它也意味着

00:29:46.186 --> 00:29:47.366 A:middle
使用密钥交换算法来提供保密性

00:29:47.366 --> 00:29:49.226 A:middle
在当今社会

00:29:49.226 --> 00:29:50.566 A:middle
你的应用数据

00:29:50.566 --> 00:29:54.156 A:middle
在网络上传输时

00:29:54.156 --> 00:29:56.486 A:middle
可以保持安全

00:29:56.486 --> 00:29:58.386 A:middle
甚至

00:29:58.386 --> 00:29:59.926 A:middle
在服务器长时间有效的私钥受到威胁的时候

00:29:59.926 --> 00:30:01.136 A:middle
应用数据也能保持安全

00:29:59.926 --> 00:30:01.136 A:middle
应用数据也能保持安全

00:30:01.136 --> 00:30:02.376 A:middle
这变得越来越重要

00:30:03.706 --> 00:30:05.566 A:middle
现如今

00:30:05.566 --> 00:30:07.276 A:middle
我们生活的世界中

00:30:07.466 --> 00:30:09.266 A:middle
不是所有的传输层服务器都是相同的

00:30:09.266 --> 00:30:10.806 A:middle
也不是所有的传输层服务器

00:30:10.806 --> 00:30:11.586 A:middle
都是相同的版本和配置

00:30:12.296 --> 00:30:14.416 A:middle
举例来说

00:30:14.416 --> 00:30:15.646 A:middle
你可能需要连接一个

00:30:15.646 --> 00:30:17.136 A:middle
根本不支持 HTTPS 的服务器

00:30:18.026 --> 00:30:18.976 A:middle
这时候你该怎么办

00:30:20.026 --> 00:30:21.136 A:middle
这

00:30:21.136 --> 00:30:21.366 A:middle
就是一个例外

00:30:22.256 --> 00:30:24.696 A:middle
这种例外的情况

00:30:24.696 --> 00:30:26.916 A:middle
在特定领域

00:30:26.916 --> 00:30:29.496 A:middle
或者全球领域

00:30:29.496 --> 00:30:30.546 A:middle
允许你的 App 退出 ATS

00:30:32.026 --> 00:30:33.916 A:middle
例外情况

00:30:33.916 --> 00:30:35.926 A:middle
可以在服务器

00:30:35.926 --> 00:30:37.716 A:middle
向更新的 TLS 配置更新时

00:30:37.716 --> 00:30:39.456 A:middle
暂时性的

00:30:39.456 --> 00:30:40.426 A:middle
帮你保持功能

00:30:41.996 --> 00:30:43.816 A:middle
去年

00:30:43.816 --> 00:30:45.486 A:middle
我们提出针对 App store 的例外情况

00:30:45.486 --> 00:30:47.446 A:middle
需要提供理由这一方案

00:30:48.586 --> 00:30:50.706 A:middle
自那开始

00:30:50.706 --> 00:30:51.946 A:middle
我们发现

00:30:51.946 --> 00:30:53.686 A:middle
我们当前所有可用的例外情况

00:30:53.846 --> 00:30:54.976 A:middle
并没有完全解决你们所有的情况

00:30:55.656 --> 00:30:58.326 A:middle
但是

00:30:58.326 --> 00:31:01.216 A:middle
因为全球化的 ATS 使用

00:30:58.326 --> 00:31:01.216 A:middle
因为全球化的 ATS 使用

00:31:01.216 --> 00:31:03.056 A:middle
一直是我们的目标

00:31:03.056 --> 00:31:03.866 A:middle
我们一直在花时间

00:31:03.866 --> 00:31:05.846 A:middle
更新我们所有的例外情况

00:31:05.846 --> 00:31:07.206 A:middle
以便可以满足所有的情况

00:31:07.576 --> 00:31:08.766 A:middle
所以

00:31:08.766 --> 00:31:10.596 A:middle
现在我想谈论一些

00:31:10.596 --> 00:31:11.076 A:middle
我们最近刚刚添加的例外情况

00:31:11.866 --> 00:31:13.536 A:middle
具体来说

00:31:13.536 --> 00:31:14.746 A:middle
我们已经不再

00:31:14.746 --> 00:31:15.196 A:middle
仅仅接受 WebKit 的内容

00:31:16.016 --> 00:31:17.116 A:middle
现在

00:31:17.116 --> 00:31:18.916 A:middle
有一些例外情况

00:31:18.916 --> 00:31:20.176 A:middle
可以确保说你在通过 AVFoundation

00:31:20.176 --> 00:31:21.406 A:middle
来进行数据流传输时

00:31:21.406 --> 00:31:23.176 A:middle
你可以

00:31:23.176 --> 00:31:24.516 A:middle
对于这些特定的数据

00:31:24.516 --> 00:31:24.856 A:middle
不使用 ATS

00:31:25.856 --> 00:31:26.956 A:middle
我们也有一些例外情况

00:31:26.956 --> 00:31:29.456 A:middle
来支持任意的

00:31:29.456 --> 00:31:31.876 A:middle
WebView 请求

00:31:32.036 --> 00:31:33.706 A:middle
不使用 ATS

00:31:33.706 --> 00:31:34.546 A:middle
或者让本地网络连接不使用 ATS

00:31:35.406 --> 00:31:36.546 A:middle
这里所说的

00:31:36.546 --> 00:31:37.936 A:middle
本地网络连接

00:31:37.936 --> 00:31:39.986 A:middle
只是一个到原始 IP 地址的连接

00:31:39.986 --> 00:31:41.286 A:middle
或者到一个拥有不受限域名的服务器的连接

00:31:42.516 --> 00:31:44.986 A:middle
我还想做一点说明

00:31:44.986 --> 00:31:46.396 A:middle
尽管说

00:31:46.396 --> 00:31:47.426 A:middle
不使用 ATS

00:31:47.426 --> 00:31:50.096 A:middle
对于你数据的安全性和隐私性来说不是必须的

00:31:50.096 --> 00:31:51.426 A:middle
因为

00:31:51.426 --> 00:31:52.676 A:middle
你还会在传输你的数据前进行加密

00:31:52.676 --> 00:31:53.046 A:middle
但是

00:31:53.476 --> 00:31:54.696 A:middle
我们仍然觉得

00:31:54.696 --> 00:31:56.896 A:middle
使用 TLS 来保护你的数据传输

00:31:56.896 --> 00:31:58.316 A:middle
是最为正确

00:31:58.316 --> 00:31:58.766 A:middle
和合适的

00:31:58.936 --> 00:32:00.936 A:middle
就像

00:31:58.936 --> 00:32:00.936 A:middle
就像

00:32:01.046 --> 00:32:02.166 A:middle
Bailey 之前提到的一样

00:32:02.706 --> 00:32:04.366 A:middle
你需要在你的能力范围内

00:32:04.406 --> 00:32:06.236 A:middle
尽可能地

00:32:06.236 --> 00:32:08.026 A:middle
减小甚至消除

00:32:08.026 --> 00:32:09.496 A:middle
所有的例外情况

00:32:10.266 --> 00:32:12.016 A:middle
我还想介绍一下

00:32:12.016 --> 00:32:13.546 A:middle
我们最近

00:32:13.546 --> 00:32:14.406 A:middle
为了支持证书透明度

00:32:14.406 --> 00:32:15.136 A:middle
所添加的密钥

00:32:16.306 --> 00:32:18.126 A:middle
如果

00:32:18.126 --> 00:32:20.756 A:middle
你想要让一个特定的服务器

00:32:20.756 --> 00:32:22.256 A:middle
加入证书透明度

00:32:22.256 --> 00:32:24.236 A:middle
来帮助你保护你的 App

00:32:24.236 --> 00:32:27.956 A:middle
和用户的 App

00:32:27.956 --> 00:32:29.396 A:middle
免受证书攻击

00:32:29.396 --> 00:32:31.446 A:middle
你可以指定一个特定的域

00:32:31.736 --> 00:32:32.696 A:middle
不管你是否想要该服务器

00:32:32.696 --> 00:32:35.766 A:middle
加入证书透明度

00:32:36.156 --> 00:32:38.776 A:middle
当下  我们仍然致力于 ATS

00:32:39.706 --> 00:32:41.146 A:middle
在过去几年

00:32:41.146 --> 00:32:43.086 A:middle
我们不断升级

00:32:43.366 --> 00:32:44.436 A:middle
我们可以为开发者所提供的服务

00:32:44.436 --> 00:32:45.606 A:middle
以此保证

00:32:45.606 --> 00:32:46.666 A:middle
这些服务都支持 ATS

00:32:47.506 --> 00:32:48.866 A:middle
所有你现在在这里看到的服务

00:32:49.056 --> 00:32:50.966 A:middle
都是支持 ATS 的

00:32:50.966 --> 00:32:51.936 A:middle
这意味着

00:32:51.936 --> 00:32:53.696 A:middle
你的 App

00:32:53.696 --> 00:32:54.366 A:middle
不会遇到例外情况

00:32:55.266 --> 00:32:56.606 A:middle
我们的最终目标是

00:32:56.606 --> 00:32:58.576 A:middle
你得到最佳的

00:32:58.576 --> 00:32:59.436 A:middle
网络安全

00:33:00.866 --> 00:33:01.996 A:middle
在过去的几年中

00:33:01.996 --> 00:33:04.686 A:middle
我们一直监测

00:33:04.736 --> 00:33:06.926 A:middle
App Store

00:33:07.556 --> 00:33:08.386 A:middle
来追踪 ATS 使用的进展

00:33:08.546 --> 00:33:10.696 A:middle
我们看到

00:33:11.616 --> 00:33:13.186 A:middle
越来越多的人

00:33:13.186 --> 00:33:14.476 A:middle
使用 ATS

00:33:14.916 --> 00:33:15.796 A:middle
我们也看到有更多的例外情况出现

00:33:15.796 --> 00:33:16.746 A:middle
这也意味着我们要做的工作还有很多

00:33:17.536 --> 00:33:18.836 A:middle
如果你是一个 App 开发人员

00:33:19.256 --> 00:33:21.036 A:middle
请继续保持警觉

00:33:21.036 --> 00:33:23.306 A:middle
并且尽可能减小

00:33:23.306 --> 00:33:24.026 A:middle
甚至消除你对于例外情况的依赖

00:33:24.566 --> 00:33:26.246 A:middle
如果你是一个服务器运行人员

00:33:26.246 --> 00:33:29.146 A:middle
或者服务器的拥有者

00:33:29.146 --> 00:33:30.366 A:middle
请继续更新你的服务器配置

00:33:30.366 --> 00:33:32.726 A:middle
以支持 1.2 版本

00:33:32.726 --> 00:33:35.216 A:middle
甚至更新版本的 TLS

00:33:35.436 --> 00:33:39.486 A:middle
既然提及 TLS

00:33:39.486 --> 00:33:40.996 A:middle
我想向你们进行一个简短的

00:33:40.996 --> 00:33:42.226 A:middle
有关这种安全协议未来发展方向的

00:33:42.256 --> 00:33:43.156 A:middle
介绍

00:33:44.236 --> 00:33:45.306 A:middle
TLS 如今

00:33:45.626 --> 00:33:47.256 A:middle
已经成为了

00:33:47.256 --> 00:33:48.106 A:middle
互联网的重要组成部分

00:33:48.576 --> 00:33:49.996 A:middle
当下

00:33:50.036 --> 00:33:52.616 A:middle
越来越多的数据传输

00:33:52.616 --> 00:33:53.226 A:middle
因为 TLS 而受到了保护

00:33:54.866 --> 00:33:57.226 A:middle
然而

00:33:57.226 --> 00:33:58.066 A:middle
并不是所有的传输都受到了同等的保护

00:33:59.026 --> 00:34:00.186 A:middle
这个协议

00:33:59.026 --> 00:34:00.186 A:middle
这个协议

00:34:00.186 --> 00:34:01.926 A:middle
已经存在了很多很多年

00:34:01.926 --> 00:34:02.576 A:middle
并且

00:34:02.576 --> 00:34:03.726 A:middle
对于服务器来说

00:34:03.726 --> 00:34:05.166 A:middle
有很多不同的实现和配置

00:34:05.166 --> 00:34:06.746 A:middle
支持很多不同的

00:34:06.746 --> 00:34:08.275 A:middle
TLS 版本

00:34:09.636 --> 00:34:11.126 A:middle
此协议

00:34:11.126 --> 00:34:12.616 A:middle
也在不断地被修缮

00:34:12.616 --> 00:34:13.835 A:middle
为了应对之前 Bailey 所提到的

00:34:13.835 --> 00:34:15.045 A:middle
那些攻击

00:34:15.045 --> 00:34:17.166 A:middle
或完善

00:34:17.166 --> 00:34:18.176 A:middle
协议中的

00:34:18.176 --> 00:34:18.646 A:middle
一些不足

00:34:19.775 --> 00:34:21.116 A:middle
最近几年

00:34:21.116 --> 00:34:22.056 A:middle
互联网协会认为

00:34:22.056 --> 00:34:22.996 A:middle
有必要

00:34:22.996 --> 00:34:24.216 A:middle
开始这个协议

00:34:24.216 --> 00:34:25.096 A:middle
下一个版本的工作

00:34:25.565 --> 00:34:26.436 A:middle
即 TLS 1.3

00:34:27.886 --> 00:34:30.815 A:middle
本着为大家提供最优质服务的原则

00:34:30.815 --> 00:34:32.676 A:middle
我们正在密切关注这项工作的开展

00:34:32.676 --> 00:34:33.976 A:middle
以保证

00:34:33.976 --> 00:34:35.755 A:middle
我们随时准备好采用这种新的版本

00:34:36.016 --> 00:34:37.916 A:middle
并且在当它成为一个新的标准时

00:34:37.916 --> 00:34:40.275 A:middle
可以及时帮助大家更新这种标准

00:34:40.396 --> 00:34:42.476 A:middle
从设计方面来看

00:34:42.476 --> 00:34:43.126 A:middle
TLS 1.3 是真正的最优选择

00:34:44.156 --> 00:34:45.485 A:middle
遵从

00:34:45.485 --> 00:34:46.576 A:middle
ATS 配置的

00:34:46.576 --> 00:34:47.876 A:middle
大部分的功能

00:34:47.876 --> 00:34:49.936 A:middle
都是核心标准的

00:34:49.936 --> 00:34:50.826 A:middle
一部分

00:34:52.016 --> 00:34:54.136 A:middle
这意味着

00:34:54.136 --> 00:34:55.755 A:middle
旧密码  密码套件  哈希函数

00:34:55.755 --> 00:34:56.906 A:middle
以及密钥交换算法

00:34:56.906 --> 00:34:58.316 A:middle
都是不被允许的

00:34:58.606 --> 00:34:59.806 A:middle
不是说你不能使用它们

00:35:00.016 --> 00:35:01.246 A:middle
只是说

00:35:01.246 --> 00:35:01.426 A:middle
他们在这里使用不合适

00:35:02.496 --> 00:35:03.846 A:middle
这意味着

00:35:03.886 --> 00:35:04.996 A:middle
规格更加的简单

00:35:05.786 --> 00:35:06.726 A:middle
意味着更容易实现

00:35:06.726 --> 00:35:08.996 A:middle
更容易理解

00:35:08.996 --> 00:35:10.856 A:middle
并且

00:35:11.116 --> 00:35:11.956 A:middle
更容易测试

00:35:12.126 --> 00:35:13.736 A:middle
这也让我们更加相信

00:35:13.736 --> 00:35:15.036 A:middle
这个版本的实现

00:35:15.036 --> 00:35:17.096 A:middle
可以让 TLS 库

00:35:17.096 --> 00:35:19.926 A:middle
更少的

00:35:19.926 --> 00:35:21.256 A:middle
甚至免于之前的

00:35:21.996 --> 00:35:23.836 A:middle
一些问题

00:35:23.986 --> 00:35:25.626 A:middle
这种简单性

00:35:26.346 --> 00:35:27.596 A:middle
还能带来的一大优势是

00:35:27.596 --> 00:35:28.246 A:middle
它可以提高网络效率

00:35:29.096 --> 00:35:30.126 A:middle
让我来向大家讲解

00:35:30.956 --> 00:35:31.786 A:middle
这具体是什么意思

00:35:31.936 --> 00:35:32.836 A:middle
让我们回顾一下

00:35:32.836 --> 00:35:35.976 A:middle
通过 TLS 1.2 和 TLS 1.3握手

00:35:35.976 --> 00:35:37.116 A:middle
来跟服务器

00:35:37.116 --> 00:35:37.526 A:middle
建立连接

00:35:38.136 --> 00:35:41.796 A:middle
我们从 TCP 连接开始

00:35:42.216 --> 00:35:43.406 A:middle
TCP 连接

00:35:43.406 --> 00:35:44.176 A:middle
需要客户端与服务器之间

00:35:44.176 --> 00:35:44.506 A:middle
完成一个往返过程

00:35:45.876 --> 00:35:47.026 A:middle
下一步

00:35:47.026 --> 00:35:48.906 A:middle
你建立你的 TLS 握手

00:35:48.906 --> 00:35:50.106 A:middle
客户端和服务器

00:35:50.106 --> 00:35:51.666 A:middle
可以借此交换问好信息

00:35:51.666 --> 00:35:54.476 A:middle
或者之后连接所需要的

00:35:54.476 --> 00:35:55.546 A:middle
初步配置信息

00:35:56.246 --> 00:35:58.806 A:middle
在 TLS 1.3 中

00:35:58.806 --> 00:36:00.756 A:middle
除了之前所说之外

00:35:58.806 --> 00:36:00.756 A:middle
除了之前所说之外

00:36:00.896 --> 00:36:03.256 A:middle
它还会处理这一阶段中

00:36:03.256 --> 00:36:05.476 A:middle
用于之后加密的材料

00:36:05.996 --> 00:36:07.066 A:middle
这意味着

00:36:07.066 --> 00:36:08.586 A:middle
在下一次传输时

00:36:08.586 --> 00:36:09.726 A:middle
客户端可以传输应用数据

00:36:10.916 --> 00:36:13.536 A:middle
而在 1.2 中

00:36:13.536 --> 00:36:14.466 A:middle
客户端和服务器

00:36:14.466 --> 00:36:16.316 A:middle
是在第二次传输中处理加密材料的

00:36:16.316 --> 00:36:18.896 A:middle
这意味着

00:36:18.896 --> 00:36:20.566 A:middle
1.2 比 1.3 多需要一些时间

00:36:20.566 --> 00:36:21.166 A:middle
来开始数据传输

00:36:22.456 --> 00:36:23.476 A:middle
也许这听起来没什么

00:36:23.476 --> 00:36:24.806 A:middle
但是

00:36:24.806 --> 00:36:25.596 A:middle
让我从你的视角来看待一下这个问题

00:36:26.546 --> 00:36:27.786 A:middle
我们从各种各样的设备和网络中

00:36:27.786 --> 00:36:30.356 A:middle
搜集数据

00:36:30.356 --> 00:36:32.976 A:middle
如运营商，蜂窝网络

00:36:33.126 --> 00:36:34.416 A:middle
和无线网络

00:36:34.466 --> 00:36:36.866 A:middle
我们的数据表明

00:36:36.866 --> 00:36:38.426 A:middle
至少百分之十的蜂窝网络连接

00:36:38.426 --> 00:36:41.566 A:middle
或者说

00:36:41.566 --> 00:36:42.846 A:middle
至少蜂窝网络中

00:36:42.846 --> 00:36:44.236 A:middle
百分之十的 TLS 连接

00:36:44.236 --> 00:36:45.636 A:middle
都至少需要 800 毫秒

00:36:45.636 --> 00:36:46.236 A:middle
来建立

00:36:46.806 --> 00:36:49.206 A:middle
无线网络中

00:36:49.206 --> 00:36:50.966 A:middle
百分之十的 TLS 连接

00:36:50.966 --> 00:36:51.946 A:middle
需要 500 毫秒来建立

00:36:53.026 --> 00:36:55.566 A:middle
TLS 1.3

00:36:55.566 --> 00:36:57.676 A:middle
将会缩减三分之一的时间

00:36:57.676 --> 00:37:00.906 A:middle
这意味着移动领域的一个巨大的成功

00:36:57.676 --> 00:37:00.906 A:middle
这意味着移动领域的一个巨大的成功

00:37:01.516 --> 00:37:05.036 A:middle
现在

00:37:05.036 --> 00:37:05.966 A:middle
TLS 1.3 还只是一个正在发展中的项目

00:37:06.026 --> 00:37:08.156 A:middle
这也是为什么 ATS

00:37:08.156 --> 00:37:10.036 A:middle
主要致力于让你们使用 1.2

00:37:10.036 --> 00:37:12.046 A:middle
以确保

00:37:12.046 --> 00:37:13.956 A:middle
你们使用最合适的

00:37:13.956 --> 00:37:14.536 A:middle
最新的协议标准

00:37:15.556 --> 00:37:17.806 A:middle
但是

00:37:17.806 --> 00:37:19.656 A:middle
如果你想要对于 TLS 1.3

00:37:19.656 --> 00:37:20.636 A:middle
进行测试

00:37:20.636 --> 00:37:22.396 A:middle
并使你自己对这个协议有所准备

00:37:22.446 --> 00:37:24.706 A:middle
那么我很高兴地告诉大家

00:37:24.706 --> 00:37:25.376 A:middle
我们允许大家进行这种操作

00:37:26.336 --> 00:37:27.926 A:middle
这在我们任何系统中

00:37:27.926 --> 00:37:28.656 A:middle
都不是默认设置

00:37:29.296 --> 00:37:31.036 A:middle
但是

00:37:31.036 --> 00:37:33.576 A:middle
如果你想要进行这种尝试

00:37:33.576 --> 00:37:35.176 A:middle
你可以在 iOS 上安装协议子集

00:37:35.176 --> 00:37:39.596 A:middle
或者

00:37:39.596 --> 00:37:41.226 A:middle
用简单地写入默认设置

00:37:41.226 --> 00:37:42.866 A:middle
来使 TLS 1.3

00:37:43.566 --> 00:37:43.666 A:middle
在 macOS 系统中可用

00:37:44.286 --> 00:37:46.736 A:middle
当明年

00:37:46.736 --> 00:37:47.916 A:middle
这个协议趋于标准化的时候

00:37:47.916 --> 00:37:49.716 A:middle
你可以通过这些方法

00:37:49.716 --> 00:37:51.056 A:middle
来让你的 App

00:37:51.056 --> 00:37:51.586 A:middle
和网络提前做好准备

00:37:52.116 --> 00:37:54.396 A:middle
与此同时

00:37:54.396 --> 00:37:56.516 A:middle
我们花费了大量的时间和精力

00:37:56.516 --> 00:37:58.056 A:middle
跟第三方

00:37:58.056 --> 00:37:59.286 A:middle
和我们的企业伙伴一起工作

00:37:59.286 --> 00:38:01.916 A:middle
致力于

00:37:59.286 --> 00:38:01.916 A:middle
致力于

00:38:01.916 --> 00:38:02.876 A:middle
确保他们的 App

00:38:02.876 --> 00:38:04.746 A:middle
和网络

00:38:05.736 --> 00:38:05.856 A:middle
都为这个协议做好准备

00:38:07.296 --> 00:38:08.416 A:middle
现在

00:38:08.416 --> 00:38:09.716 A:middle
我想整体总结一下

00:38:09.716 --> 00:38:11.326 A:middle
今天我和 Bailey

00:38:11.826 --> 00:38:13.356 A:middle
一起讲到的内容

00:38:13.546 --> 00:38:15.556 A:middle
我们最基本的目标之一是

00:38:15.556 --> 00:38:17.296 A:middle
帮助你来保证你用户的数据

00:38:17.296 --> 00:38:18.446 A:middle
都是安全隐秘的

00:38:19.376 --> 00:38:20.696 A:middle
我们通过给你最好的

00:38:20.696 --> 00:38:21.676 A:middle
实践工具和技术

00:38:21.676 --> 00:38:23.116 A:middle
来帮助你

00:38:23.226 --> 00:38:23.716 A:middle
实现这一目标

00:38:24.986 --> 00:38:26.326 A:middle
然而

00:38:26.326 --> 00:38:27.016 A:middle
你仍需自己完成一些工作

00:38:27.646 --> 00:38:29.256 A:middle
这意味着

00:38:29.256 --> 00:38:30.816 A:middle
要尽可能地

00:38:30.816 --> 00:38:31.496 A:middle
避免过时的算法

00:38:31.696 --> 00:38:33.666 A:middle
这同时也意味着

00:38:33.666 --> 00:38:34.686 A:middle
要不断更新

00:38:34.686 --> 00:38:35.546 A:middle
TLS 的配置

00:38:36.866 --> 00:38:37.726 A:middle
如果

00:38:37.726 --> 00:38:39.916 A:middle
你是一个服务器拥有者

00:38:39.916 --> 00:38:42.096 A:middle
或者服务器运行人员

00:38:42.096 --> 00:38:44.406 A:middle
意味着你要将版本升级到 1.2

00:38:44.406 --> 00:38:45.016 A:middle
来确保ATS下的每一个 App 都是可用的

00:38:46.226 --> 00:38:47.356 A:middle
如果你是一个 App 开发人员

00:38:47.356 --> 00:38:49.526 A:middle
这意味着

00:38:49.526 --> 00:38:51.066 A:middle
要尽可能少的使用例外情况

00:38:52.666 --> 00:38:53.566 A:middle
如果

00:38:53.566 --> 00:38:55.366 A:middle
你敢于尝试新鲜事物

00:38:55.366 --> 00:38:57.976 A:middle
不防尝试一下 TLS 1.3

00:38:57.976 --> 00:38:59.956 A:middle
来使你的 App 和网络

00:38:59.956 --> 00:39:00.996 A:middle
对下一个版本的协议

00:38:59.956 --> 00:39:00.996 A:middle
对下一个版本的协议

00:39:00.996 --> 00:39:01.536 A:middle
做好准备

00:39:02.116 --> 00:39:05.736 A:middle
如果

00:39:05.736 --> 00:39:07.886 A:middle
针对我和 Bailey 所讨论到的问题

00:39:07.886 --> 00:39:09.306 A:middle
你想获得更多的信息

00:39:09.306 --> 00:39:10.326 A:middle
你可以访问上面的链接

00:39:11.866 --> 00:39:13.646 A:middle
之后

00:39:13.646 --> 00:39:15.026 A:middle
我们将会有一个

00:39:15.026 --> 00:39:16.286 A:middle
关于

00:39:16.286 --> 00:39:17.546 A:middle
隐私与 App 的讲解

00:39:17.546 --> 00:39:18.466 A:middle
非常推荐大家听一下

00:39:19.236 --> 00:39:20.586 A:middle
明天

00:39:20.586 --> 00:39:22.216 A:middle
我们也会有一些

00:39:22.216 --> 00:39:23.386 A:middle
有关计算机网络发展的介绍

00:39:23.656 --> 00:39:25.396 A:middle
对于

00:39:25.396 --> 00:39:27.416 A:middle
对 TLS 有兴趣的人来说

00:39:27.416 --> 00:39:28.176 A:middle
会非常有趣

00:39:28.176 --> 00:39:29.906 A:middle
这就是我今天要讲的全部了

00:39:30.486 --> 00:39:31.266 A:middle
谢谢大家的时间

00:39:31.266 --> 00:39:32.896 A:middle
和出席

00:39:32.896 --> 00:39:33.536 A:middle
也希望大家能喜欢之后的会议内容
