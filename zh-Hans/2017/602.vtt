WEBVTT

00:00:17.851 --> 00:00:18.685 align:middle line:0
<c.magenta>下午好</c>

00:00:18.752 --> 00:00:24.124 align:middle line:0
<c.magenta>（iOS ARKit增强现实简介）</c>

00:00:24.258 --> 00:00:26.894 align:middle line:-1
<c.magenta>欢迎参加我们的ARKit简介演讲</c>

00:00:27.060 --> 00:00:29.630 align:middle line:-2
<c.magenta>我是Mike</c>
<c.magenta>我是ARKit团队中的一名工程师</c>

00:00:29.696 --> 00:00:33.767 align:middle line:-2
<c.magenta>今天我很高兴要跟大家讲讲</c>
<c.magenta>概念以及代码</c>

00:00:33.834 --> 00:00:38.105 align:middle line:-2
<c.magenta>你可以用来创建</c>
<c.magenta>你自己的iOS增强现实体验</c>

00:00:40.407 --> 00:00:41.241 align:middle line:-1
<c.magenta>谢谢</c>

00:00:41.308 --> 00:00:44.511 align:middle line:-2
<c.magenta>我知道你们中有很多人</c>
<c.magenta>很想了解增强现实</c>

00:00:44.578 --> 00:00:47.147 align:middle line:-2
<c.magenta>让我来告诉你使用ARKit</c>
<c.magenta>是一件多么简单的事</c>

00:00:48.415 --> 00:00:51.585 align:middle line:-1
<c.magenta>但首先什么是增强现实？</c>

00:00:52.019 --> 00:00:53.987 align:middle line:-1
<c.magenta>增强现实是创建错觉</c>

00:00:54.054 --> 00:00:57.024 align:middle line:-1
<c.magenta>虚拟对象被放在物理世界中</c>

00:00:57.257 --> 00:00:59.193 align:middle line:-1
<c.magenta>它使用你iPhone或iPad</c>

00:00:59.259 --> 00:01:02.963 align:middle line:-2
<c.magenta>作为进入虚拟世界的镜头</c>
<c.magenta>根据你的摄像头所能看到的内容</c>

00:00:59.259 --> 00:01:02.963 align:middle line:-2
<c.magenta>作为进入虚拟世界的镜头</c>
<c.magenta>根据你的摄像头所能看到的内容</c>

00:01:03.697 --> 00:01:05.265 align:middle line:-1
<c.magenta>让我们来看一些示例</c>

00:01:05.832 --> 00:01:08.869 align:middle line:-2
<c.magenta>我们提前给了一群开发人员</c>
<c.magenta>使用ARKit的权限</c>

00:01:09.203 --> 00:01:10.370 align:middle line:-1
<c.magenta>这是他们所创建出来的</c>

00:01:10.437 --> 00:01:13.941 align:middle line:-2
<c.magenta>你可能在不久的将来看到这些东西</c>
<c.magenta>让我们来先睹为快吧</c>

00:01:17.544 --> 00:01:20.848 align:middle line:-2
<c.magenta>这里面是一个公司</c>
<c.magenta>正在沉浸在讲故事的氛围中</c>

00:01:20.914 --> 00:01:23.684 align:middle line:-1
<c.magenta>他们正在使用AR讲金发姑娘的故事</c>

00:01:26.186 --> 00:01:29.022 align:middle line:-2
<c.magenta>把一间卧室</c>
<c.magenta>转换成了一本虚拟的故事书</c>

00:01:29.089 --> 00:01:32.125 align:middle line:-2
<c.magenta>他们允许你通过朗诵文本</c>
<c.magenta>推动故事发展</c>

00:01:32.192 --> 00:01:36.296 align:middle line:-2
<c.magenta>但更重要的是 他们允许你</c>
<c.magenta>从任意角度来探索场景</c>

00:01:39.633 --> 00:01:43.937 align:middle line:-2
<c.magenta>这种等级的交互性真的会帮助你</c>
<c.magenta>把虚拟场景变成现实</c>

00:01:48.208 --> 00:01:52.546 align:middle line:-2
<c.magenta>接下来宜家家居通过ARKit</c>
<c.magenta>重新设计你的客厅</c>

00:01:58.519 --> 00:02:02.122 align:middle line:-1
<c.magenta>通过把虚拟内容放在物理对象中实现</c>

00:01:58.519 --> 00:02:02.122 align:middle line:-1
<c.magenta>通过把虚拟内容放在物理对象中实现</c>

00:02:02.189 --> 00:02:04.892 align:middle line:-2
<c.magenta>你打开了一个</c>
<c.magenta>通往你用户的无限可能性</c>

00:02:08.127 --> 00:02:10.130 align:middle line:-1
<c.magenta>最后是游戏</c>

00:02:10.264 --> 00:02:14.034 align:middle line:-2
<c.magenta>Pokemon Go</c>
<c.magenta>一款你可能已经听过的应用</c>

00:02:14.434 --> 00:02:17.905 align:middle line:-2
<c.magenta>通过ARKit将捕捉Pokemon</c>
<c.magenta>带入了一个新层级</c>

00:02:18.839 --> 00:02:22.609 align:middle line:-2
<c.magenta>通过把你的虚拟物品</c>
<c.magenta>锚定在现实世界中</c>

00:02:22.676 --> 00:02:25.145 align:middle line:-1
<c.magenta>你真的可以获得沉浸感更强的体验</c>

00:02:25.212 --> 00:02:26.480 align:middle line:-1
<c.magenta>比之前的都要强</c>

00:02:27.714 --> 00:02:29.950 align:middle line:-1
<c.magenta>但它并没有止步于此 有许多方式</c>

00:02:30.017 --> 00:02:33.687 align:middle line:-1
<c.magenta>使用增强现实来提升你的用户体验</c>

00:02:34.221 --> 00:02:35.689 align:middle line:-1
<c.magenta>让我们看看要如何实现吧</c>

00:02:39.026 --> 00:02:43.197 align:middle line:-2
<c.magenta>关于创建增强现实</c>
<c.magenta>需要储备大量的专业知识</c>

00:02:43.463 --> 00:02:47.267 align:middle line:-2
<c.magenta>从计算机视觉到传感器融合</c>
<c.magenta>再到与硬件通讯</c>

00:02:47.334 --> 00:02:50.070 align:middle line:-1
<c.magenta>都是为了获取相机标定和相机内参</c>

00:02:50.437 --> 00:02:52.339 align:middle line:-1
<c.magenta>我们想把这些变得简单一些</c>

00:02:52.840 --> 00:02:55.709 align:middle line:-1
<c.magenta>那么今天我们要介绍ARKit</c>

00:03:02.583 --> 00:03:04.651 align:middle line:-1
<c.magenta>ARKit是一款移动设备AR平台</c>

00:03:04.718 --> 00:03:07.588 align:middle line:-1
<c.magenta>用于在iOS上开发增强现实应用</c>

00:03:08.055 --> 00:03:10.824 align:middle line:-2
<c.magenta>它是一个高等级的API</c>
<c.magenta>有一个简单的界面</c>

00:03:10.891 --> 00:03:12.526 align:middle line:-1
<c.magenta>提供一系列强大的功能</c>

00:03:12.893 --> 00:03:14.695 align:middle line:-1
<c.magenta>但更重要的是它可以</c>

00:03:14.761 --> 00:03:18.165 align:middle line:-1
<c.magenta>支持现有的数以亿计的iOS设备</c>

00:03:18.498 --> 00:03:20.701 align:middle line:-1
<c.magenta>要获得ARKit的全部功能</c>

00:03:20.767 --> 00:03:22.803 align:middle line:-1
<c.magenta>你需要获得一个A9及以上的芯片</c>

00:03:22.970 --> 00:03:27.007 align:middle line:-2
<c.magenta>这包括了绝大部分iOS 11设备</c>
<c.magenta>其中包括iPhone 6S</c>

00:03:28.108 --> 00:03:31.645 align:middle line:-2
<c.magenta>现在 让我们谈谈功能</c>
<c.magenta>那么 ARKit提供什么呢？</c>

00:03:32.145 --> 00:03:35.048 align:middle line:-1
<c.magenta>ARKit可以分解为三个不同的层</c>

00:03:35.115 --> 00:03:37.284 align:middle line:-1
<c.magenta>第一个层是追踪</c>

00:03:38.752 --> 00:03:41.221 align:middle line:-1
<c.magenta>追踪是ARKit的核心功能</c>

00:03:41.488 --> 00:03:44.424 align:middle line:-1
<c.magenta>它可以实时追踪你的设备</c>

00:03:44.758 --> 00:03:47.160 align:middle line:-1
<c.magenta>通过追踪 你可以</c>

00:03:47.227 --> 00:03:50.731 align:middle line:-1
<c.magenta>获得设备在物理环境中的相对位置</c>

00:03:51.331 --> 00:03:55.068 align:middle line:-2
<c.magenta>我们通过相机图像</c>
<c.magenta>使用虚拟惯性里程计</c>

00:03:55.135 --> 00:03:58.906 align:middle line:-2
<c.magenta>并通过来自你设备的动作数据</c>
<c.magenta>获取精确视图</c>

00:03:58.972 --> 00:04:02.176 align:middle line:-2
<c.magenta>关于你的设备在哪个位置</c>
<c.magenta>以及它的方向</c>

00:03:58.972 --> 00:04:02.176 align:middle line:-2
<c.magenta>关于你的设备在哪个位置</c>
<c.magenta>以及它的方向</c>

00:04:02.910 --> 00:04:06.180 align:middle line:-1
<c.magenta>但同时更重要的是不需要外部设置</c>

00:04:06.246 --> 00:04:08.415 align:middle line:-2
<c.magenta>不需要关于你所处环境的</c>
<c.magenta>已存在的知识</c>

00:04:08.482 --> 00:04:12.352 align:middle line:-2
<c.magenta>也不需要你设备上</c>
<c.magenta>目前没有的额外传感器</c>

00:04:13.353 --> 00:04:16.857 align:middle line:-2
<c.magenta>接下来根据追踪进行创建</c>
<c.magenta>我们提供场景理解</c>

00:04:19.392 --> 00:04:23.797 align:middle line:-1
<c.magenta>场景理解是决定</c>

00:04:23.864 --> 00:04:25.899 align:middle line:-1
<c.magenta>你设备周围的环境特性或属性的能力</c>

00:04:26.166 --> 00:04:28.235 align:middle line:-1
<c.magenta>它提供类似平面探测这样的功能</c>

00:04:28.468 --> 00:04:30.938 align:middle line:-1
<c.magenta>平面探测是决定物理环境中的表面</c>

00:04:31.004 --> 00:04:32.873 align:middle line:-1
<c.magenta>或平面的能力</c>

00:04:33.207 --> 00:04:35.976 align:middle line:-1
<c.magenta>比如说一楼或许是一张桌子</c>

00:04:37.044 --> 00:04:40.647 align:middle line:-2
<c.magenta>要摆放你的虚拟对象</c>
<c.magenta>我们提供碰撞测试功能</c>

00:04:40.714 --> 00:04:44.084 align:middle line:-2
<c.magenta>S是通过现实世界拓扑</c>
<c.magenta>获取一个交叉点</c>

00:04:44.151 --> 00:04:47.087 align:middle line:-2
<c.magenta>以便你可以在现实世界中</c>
<c.magenta>放置你的虚拟对象</c>

00:04:47.654 --> 00:04:51.358 align:middle line:-1
<c.magenta>最后场景理解还提供光估计</c>

00:04:51.625 --> 00:04:57.297 align:middle line:-2
<c.magenta>那么光估计用于渲染</c>
<c.magenta>你的虚拟几何体或实现正确打光</c>

00:04:57.364 --> 00:04:59.233 align:middle line:-1
<c.magenta>以匹配物理世界的实际环境</c>

00:04:59.900 --> 00:05:04.037 align:middle line:-2
<c.magenta>通过这些功能</c>
<c.magenta>我们可以无缝地整合虚拟内容</c>

00:04:59.900 --> 00:05:04.037 align:middle line:-2
<c.magenta>通过这些功能</c>
<c.magenta>我们可以无缝地整合虚拟内容</c>

00:05:04.104 --> 00:05:06.039 align:middle line:-1
<c.magenta>到你的物理环境中</c>

00:05:06.573 --> 00:05:09.409 align:middle line:-1
<c.magenta>那么ARKit的最后一个层是渲染</c>

00:05:11.578 --> 00:05:14.548 align:middle line:-2
<c.magenta>对于渲染</c>
<c.magenta>你可以轻松地整合到任何渲染器中</c>

00:05:14.615 --> 00:05:18.151 align:middle line:-2
<c.magenta>我们提供源源不断的相机图像、</c>
<c.magenta>追踪信息</c>

00:05:18.218 --> 00:05:21.889 align:middle line:-2
<c.magenta>以及场景理解</c>
<c.magenta>你可以放到任意渲染器中</c>

00:05:23.156 --> 00:05:27.528 align:middle line:-2
<c.magenta>如果你们用的是SceneKit或SpriteKit</c>
<c.magenta>我们提供自定义AR视图</c>

00:05:27.594 --> 00:05:29.696 align:middle line:-1
<c.magenta>可以为你们实施绝大部分渲染</c>

00:05:29.763 --> 00:05:31.365 align:middle line:-1
<c.magenta>所以起步是很简单的</c>

00:05:32.432 --> 00:05:33.934 align:middle line:-1
<c.magenta>如果你们用的是自定义渲染器</c>

00:05:34.001 --> 00:05:36.069 align:middle line:-1
<c.magenta>我们提供Xcode金属模板</c>

00:05:36.637 --> 00:05:40.407 align:middle line:-2
<c.magenta>可以帮助你把ARKit</c>
<c.magenta>整合到你的自定义渲染器中</c>

00:05:41.575 --> 00:05:42.676 align:middle line:-1
<c.magenta>还有一点</c>

00:05:43.310 --> 00:05:47.347 align:middle line:-2
<c.magenta>统一性和虚幻</c>
<c.magenta>支持了ARKit中的全部功能</c>

00:05:53.921 --> 00:05:54.988 align:middle line:-1
<c.magenta>那么你们大家准备好了吗？</c>

00:05:56.056 --> 00:06:00.194 align:middle line:-2
<c.magenta>让我们开始吧</c>
<c.magenta>我要如何在我的应用中使用ARKit？</c>

00:05:56.056 --> 00:06:00.194 align:middle line:-2
<c.magenta>让我们开始吧</c>
<c.magenta>我要如何在我的应用中使用ARKit？</c>

00:06:01.328 --> 00:06:04.731 align:middle line:-1
<c.magenta>ARKit是一个框架 可以处理全部进程</c>

00:06:04.798 --> 00:06:07.067 align:middle line:-1
<c.magenta>用于创建一种增强现实体验</c>

00:06:07.634 --> 00:06:12.306 align:middle line:-2
<c.magenta>通过我所选择的渲染器</c>
<c.magenta>我可以很方便地用ARKit来实现进程</c>

00:06:12.539 --> 00:06:16.076 align:middle line:-2
<c.magenta>它会提供我要渲染</c>
<c.magenta>增强现实场景的一切功能</c>

00:06:17.044 --> 00:06:20.581 align:middle line:-1
<c.magenta>除了进程 ARKit还可以捕获</c>

00:06:20.647 --> 00:06:23.283 align:middle line:-1
<c.magenta>以便实现增强现实</c>

00:06:23.584 --> 00:06:28.388 align:middle line:-2
<c.magenta>那么在底层通过</c>
<c.magenta>AVFoundation和Core Motion</c>

00:06:28.455 --> 00:06:32.226 align:middle line:-2
<c.magenta>从你的设备中捕捉图像并获取运动数据</c>
<c.magenta>以便进行追踪</c>

00:06:32.292 --> 00:06:34.595 align:middle line:-1
<c.magenta>并为你的渲染器提供相机图像</c>

00:06:35.262 --> 00:06:36.930 align:middle line:-1
<c.magenta>那么现在 要如何使用ARKit呢？</c>

00:06:37.631 --> 00:06:39.833 align:middle line:-1
<c.magenta>ARKit是一个基于会话的API</c>

00:06:39.900 --> 00:06:41.535 align:middle line:-1
<c.magenta>你需要了解的第一件事</c>

00:06:41.602 --> 00:06:43.337 align:middle line:-1
<c.magenta>是简单地创建一个ARSession</c>

00:06:44.104 --> 00:06:47.574 align:middle line:-1
<c.magenta>ARSession是一个对象 控制着</c>

00:06:47.641 --> 00:06:50.010 align:middle line:-1
<c.magenta>用于创建增强现实应用的全部进程</c>

00:06:50.611 --> 00:06:54.014 align:middle line:-1
<c.magenta>但首先我需要决定实现哪种追踪</c>

00:06:54.081 --> 00:06:55.516 align:middle line:-1
<c.magenta>在我的增强现实应用中</c>

00:06:55.582 --> 00:06:59.386 align:middle line:-2
<c.magenta>那么要确定这个问题</c>
<c.magenta>我们要创建一个AR会话配置</c>

00:07:01.188 --> 00:07:03.257 align:middle line:-1
<c.magenta>AR会话配置及其子类</c>

00:07:03.323 --> 00:07:06.026 align:middle line:-1
<c.magenta>决定你想在你的会话上实现哪种追踪</c>

00:07:06.827 --> 00:07:08.795 align:middle line:-1
<c.magenta>通过启用和禁用属性</c>

00:07:08.862 --> 00:07:10.797 align:middle line:-1
<c.magenta>你可以获得不同的场景理解</c>

00:07:10.864 --> 00:07:13.100 align:middle line:-1
<c.magenta>并用你的ARSession来实现不同的进程</c>

00:07:14.034 --> 00:07:18.405 align:middle line:-2
<c.magenta>要运行我的会话</c>
<c.magenta>我只需要在ARSession上调用Run方法</c>

00:07:18.472 --> 00:07:20.607 align:middle line:-1
<c.magenta>就能提供我想要运行的配置</c>

00:07:22.409 --> 00:07:24.745 align:middle line:-1
<c.magenta>然后就立即开启进程</c>

00:07:25.212 --> 00:07:27.181 align:middle line:-1
<c.magenta>我们还要在底层设置捕捉</c>

00:07:27.247 --> 00:07:30.350 align:middle line:-2
<c.magenta>那么在底层</c>
<c.magenta>你将看到有一个AV捕捉会话</c>

00:07:30.417 --> 00:07:33.253 align:middle line:-2
<c.magenta>和一个CM运动管理器</c>
<c.magenta>已经为你创建好了</c>

00:07:33.987 --> 00:07:35.556 align:middle line:-1
<c.magenta>我们通过这两个来获取图像数据</c>

00:07:35.622 --> 00:07:38.158 align:middle line:-1
<c.magenta>以及运动数据用于追踪</c>

00:07:38.225 --> 00:07:41.795 align:middle line:-2
<c.magenta>一旦进程完成</c>
<c.magenta>ARSession将输出ARFrame</c>

00:07:42.496 --> 00:07:45.032 align:middle line:-1
<c.magenta>那么ARFrame是一种适时快照</c>

00:07:45.098 --> 00:07:46.834 align:middle line:-1
<c.magenta>包括关于你会话的全部状态、</c>

00:07:46.900 --> 00:07:50.103 align:middle line:-1
<c.magenta>要渲染你的增强现实场景所需要的一切</c>

00:07:51.004 --> 00:07:54.708 align:middle line:-2
<c.magenta>要获取ARFrame</c>
<c.magenta>你只需要从ARSession中</c>

00:07:54.775 --> 00:07:57.110 align:middle line:-1
<c.magenta>调用或拉动当前的帧属性</c>

00:07:57.511 --> 00:07:59.079 align:middle line:-1
<c.magenta>或者你可以将你自己设为委托</c>

00:07:59.146 --> 00:08:02.149 align:middle line:-2
<c.magenta>以接收更新</c>
<c.magenta>当有新的ARFrame可用时</c>

00:07:59.146 --> 00:08:02.149 align:middle line:-2
<c.magenta>以接收更新</c>
<c.magenta>当有新的ARFrame可用时</c>

00:08:03.350 --> 00:08:06.186 align:middle line:-2
<c.magenta>那么让我们具体看一下</c>
<c.magenta>ARSessionConfiguration</c>

00:08:09.790 --> 00:08:11.158 align:middle line:-1
<c.magenta>ARSession配置决定了</c>

00:08:11.225 --> 00:08:13.427 align:middle line:-1
<c.magenta>你想在你的会话上运行哪种追踪</c>

00:08:13.961 --> 00:08:17.064 align:middle line:-1
<c.magenta>所以它提供不同的配置类</c>

00:08:17.564 --> 00:08:19.900 align:middle line:-1
<c.magenta>基类是ARSessionConfiguration</c>

00:08:19.967 --> 00:08:22.035 align:middle line:-1
<c.magenta>提供自由追踪的三个角度</c>

00:08:22.102 --> 00:08:24.238 align:middle line:-1
<c.magenta>即你设备的定向</c>

00:08:25.272 --> 00:08:26.473 align:middle line:-1
<c.magenta>它的子类</c>

00:08:26.540 --> 00:08:28.475 align:middle line:-2
<c.magenta>ARWorldTrackingSession</c>
<c.magenta>Configuration</c>

00:08:28.542 --> 00:08:30.744 align:middle line:-1
<c.magenta>提供自由追踪的六个角度</c>

00:08:30.811 --> 00:08:33.679 align:middle line:-2
<c.magenta>那么这使用了我们的核心功能</c>
<c.magenta>世界追踪</c>

00:08:33.746 --> 00:08:36.082 align:middle line:-1
<c.magenta>为了获得不仅仅是你设备的方向</c>

00:08:36.149 --> 00:08:38.885 align:middle line:-1
<c.magenta>也为了获得你设备的相对位置</c>

00:08:39.385 --> 00:08:41.855 align:middle line:-1
<c.magenta>然后我们还要获取关于场景的信息</c>

00:08:41.922 --> 00:08:45.726 align:middle line:-1
<c.magenta>那么我们提供场景理解 如特征点以及</c>

00:08:45.792 --> 00:08:48.495 align:middle line:-1
<c.magenta>你现实世界中的物理位置</c>

00:08:49.363 --> 00:08:51.231 align:middle line:-1
<c.magenta>要启用和禁用功能</c>

00:08:51.298 --> 00:08:54.434 align:middle line:-2
<c.magenta>你只需要在你的会话配置类中</c>
<c.magenta>设置属性即可</c>

00:08:58.438 --> 00:09:01.508 align:middle line:-1
<c.magenta>会话配置还提供可用性</c>

00:08:58.438 --> 00:09:01.508 align:middle line:-1
<c.magenta>会话配置还提供可用性</c>

00:09:02.242 --> 00:09:05.312 align:middle line:0
<c.magenta>所以如果你想查看你的设备</c>
<c.magenta>是否支持世界追踪</c>

00:09:05.379 --> 00:09:07.548 align:middle line:0
<c.magenta>你只需要调用类属性</c>

00:09:07.614 --> 00:09:10.551 align:middle line:0
<c.magenta>isSupported 在ARWorldTracking</c>
<c.magenta>SessionConfiguration上</c>

00:09:11.185 --> 00:09:14.121 align:middle line:0
<c.magenta>然后你就可以</c>
<c.magenta>使用你的世界追踪会话配置</c>

00:09:14.188 --> 00:09:15.923 align:middle line:0
<c.magenta>或退回到基类</c>

00:09:15.989 --> 00:09:18.592 align:middle line:0
<c.magenta>退回基类将只能提供</c>
<c.magenta>自由追踪的三个角度</c>

00:09:18.659 --> 00:09:21.094 align:middle line:-1
<c.magenta>这里有一个重要的点 因为基类</c>

00:09:21.161 --> 00:09:22.896 align:middle line:-1
<c.magenta>没有任何场景理解功能</c>

00:09:22.963 --> 00:09:26.133 align:middle line:-2
<c.magenta>如碰撞测试</c>
<c.magenta>那么在这台设备上也不可用</c>

00:09:26.233 --> 00:09:29.469 align:middle line:-1
<c.magenta>那么我们还提供UI所需的设备功能</c>

00:09:29.536 --> 00:09:31.839 align:middle line:-2
<c.magenta>你可以在你的应用中进行设置</c>
<c.magenta>以便你的应用仅能</c>

00:09:31.905 --> 00:09:34.641 align:middle line:-2
<c.magenta>在App Store中</c>
<c.magenta>支持世界追踪的设备上出现</c>

00:09:35.976 --> 00:09:37.611 align:middle line:-1
<c.magenta>接下来让我们看看ARSession</c>

00:09:39.813 --> 00:09:43.317 align:middle line:-1
<c.magenta>ARSession是管理</c>

00:09:43.383 --> 00:09:45.152 align:middle line:-1
<c.magenta>用于增强现实应用中全部进程的类</c>

00:09:46.820 --> 00:09:49.156 align:middle line:-1
<c.magenta>除了通过配置调用Run</c>

00:09:49.223 --> 00:09:50.591 align:middle line:-1
<c.magenta>你还可以调用Pause</c>

00:09:51.425 --> 00:09:55.295 align:middle line:-2
<c.magenta>Pause允许你暂时停止</c>
<c.magenta>发生在你会话上的全部进程</c>

00:09:55.362 --> 00:09:59.199 align:middle line:-2
<c.magenta>所以如果你的视图不再可见</c>
<c.magenta>你可能想停止进程</c>

00:09:59.266 --> 00:10:03.203 align:middle line:-2
<c.magenta>以停止使用CPU</c>
<c.magenta>在暂停时将不会发生任何追踪</c>

00:09:59.266 --> 00:10:03.203 align:middle line:-2
<c.magenta>以停止使用CPU</c>
<c.magenta>在暂停时将不会发生任何追踪</c>

00:10:03.670 --> 00:10:06.473 align:middle line:-1
<c.magenta>要在暂停后恢复追踪</c>

00:10:06.540 --> 00:10:08.075 align:middle line:-1
<c.magenta>你只需要再次调用Run即可</c>

00:10:08.141 --> 00:10:10.344 align:middle line:0
<c.magenta>通过你会话上所存储的配置</c>

00:10:11.378 --> 00:10:13.714 align:middle line:-1
<c.magenta>最后你可以多次调用Run</c>

00:10:13.780 --> 00:10:16.350 align:middle line:0
<c.magenta>以在不同的配置中转换</c>

00:10:16.617 --> 00:10:20.521 align:middle line:0
<c.magenta>那么比如说我想启用平面探测</c>
<c.magenta>我可以把我的配置修改为</c>

00:10:20.587 --> 00:10:23.657 align:middle line:0
<c.magenta>启用平面探测</c>
<c.magenta>并在我的会话中再次调用Run</c>

00:10:23.724 --> 00:10:26.727 align:middle line:0
<c.magenta>我的会话将自动进行无缝转换</c>

00:10:26.793 --> 00:10:30.664 align:middle line:0
<c.magenta>在不同的配置之间</c>
<c.magenta>而不会失掉任何相机图像</c>

00:10:33.166 --> 00:10:36.436 align:middle line:-2
<c.magenta>那么通过Run命令</c>
<c.magenta>我们还提供追踪的重设</c>

00:10:36.503 --> 00:10:39.973 align:middle line:-2
<c.magenta>那么这是你在Run命令中</c>
<c.magenta>所能提供的Run选项</c>

00:10:40.040 --> 00:10:41.441 align:middle line:-1
<c.magenta>以便重设追踪</c>

00:10:41.508 --> 00:10:43.877 align:middle line:-2
<c.magenta>它会重新初始化</c>
<c.magenta>正在进行中的全部追踪</c>

00:10:43.944 --> 00:10:46.980 align:middle line:-1
<c.magenta>你的相机位置将再次从000出发</c>

00:10:47.047 --> 00:10:49.616 align:middle line:-2
<c.magenta>所以这对于你的应用很有用</c>
<c.magenta>如果你想把它重设</c>

00:10:49.683 --> 00:10:50.884 align:middle line:-1
<c.magenta>到某个起点的话</c>

00:10:53.287 --> 00:10:55.722 align:middle line:-1
<c.magenta>我如何利用ARSession进程？</c>

00:10:56.290 --> 00:10:59.526 align:middle line:-2
<c.magenta>将你自己设为委托</c>
<c.magenta>可获得可用的会话更新</c>

00:11:00.794 --> 00:11:03.463 align:middle line:-1
<c.magenta>那么为了获得所处理的最后一帧</c>

00:11:03.530 --> 00:11:05.699 align:middle line:-1
<c.magenta>我需要实施didUpdate Frame会话</c>

00:11:06.600 --> 00:11:08.569 align:middle line:-1
<c.magenta>这将给我提供最新的一帧</c>

00:11:08.635 --> 00:11:12.573 align:middle line:0
<c.magenta>对于报错处理 你还可以实施</c>
<c.magenta>诸如DidFailWithError这样的会话</c>

00:11:12.639 --> 00:11:14.408 align:middle line:0
<c.magenta>那么这是严重错误时的情况</c>

00:11:14.474 --> 00:11:17.544 align:middle line:0
<c.magenta>也许你正在一台</c>
<c.magenta>不支持世界追踪的设备上运行</c>

00:11:17.611 --> 00:11:20.414 align:middle line:0
<c.magenta>你将得到一个这样的报错</c>
<c.magenta>并且你的会话将被暂停</c>

00:11:21.281 --> 00:11:24.384 align:middle line:-1
<c.magenta>ARSession进程的另一个作用是</c>

00:11:24.451 --> 00:11:26.186 align:middle line:-1
<c.magenta>拉动当前帧属性</c>

00:11:27.921 --> 00:11:30.190 align:middle line:-1
<c.magenta>那么现在ARFrame包含什么？</c>

00:11:30.824 --> 00:11:35.395 align:middle line:-2
<c.magenta>每个ARFrame包含你用于</c>
<c.magenta>渲染增强现实场景的一切东西</c>

00:11:36.296 --> 00:11:38.532 align:middle line:-1
<c.magenta>它提供的第一个东西是相机图像</c>

00:11:38.866 --> 00:11:42.469 align:middle line:-1
<c.magenta>那么这是你用来渲染场景背景的东西</c>

00:11:43.604 --> 00:11:45.973 align:middle line:-1
<c.magenta>接下来它提供追踪信息</c>

00:11:46.039 --> 00:11:50.544 align:middle line:-2
<c.magenta>或我设备的方向以及位置</c>
<c.magenta>甚至是追踪状态</c>

00:11:51.245 --> 00:11:53.614 align:middle line:-1
<c.magenta>最后它提供场景理解</c>

00:11:54.214 --> 00:11:57.317 align:middle line:-1
<c.magenta>那么关于场景的信息 比如特征点、</c>

00:11:57.384 --> 00:12:01.655 align:middle line:-2
<c.magenta>在空间中的物理位置</c>
<c.magenta>以及光估计或光预估</c>

00:11:57.384 --> 00:12:01.655 align:middle line:-2
<c.magenta>在空间中的物理位置</c>
<c.magenta>以及光估计或光预估</c>

00:12:02.823 --> 00:12:08.262 align:middle line:-2
<c.magenta>那么在空间中的物理位置</c>
<c.magenta>ARKit的呈现方式是</c>

00:12:08.795 --> 00:12:11.732 align:middle line:-1
<c.magenta>通过ARFrame或ARAnchor 抱歉</c>

00:12:12.165 --> 00:12:15.536 align:middle line:-2
<c.magenta>ARAnchor是一个相对位置</c>
<c.magenta>或现实世界的位置</c>

00:12:15.602 --> 00:12:17.938 align:middle line:-1
<c.magenta>和在空间中的方向</c>

00:12:20.207 --> 00:12:23.110 align:middle line:-2
<c.magenta>你可以从你的场景中</c>
<c.magenta>添加或移除ARAnchor</c>

00:12:23.177 --> 00:12:25.279 align:middle line:-1
<c.magenta>它们用于基本呈现</c>

00:12:25.345 --> 00:12:29.516 align:middle line:-1
<c.magenta>锚定到你物理环境中的虚拟内容</c>

00:12:29.816 --> 00:12:31.318 align:middle line:-1
<c.magenta>如果你想添加一个自定义锚点</c>

00:12:31.385 --> 00:12:33.020 align:middle line:-2
<c.magenta>你可以通过</c>
<c.magenta>将其添加到你的会话中实现</c>

00:12:33.086 --> 00:12:35.489 align:middle line:-2
<c.magenta>它将一直留在你的会话中</c>
<c.magenta>直到会话结束</c>

00:12:36.023 --> 00:12:39.293 align:middle line:-2
<c.magenta>但还有额外的一点 如果你正在运行</c>
<c.magenta>诸如平面探测之类的功能</c>

00:12:39.359 --> 00:12:42.029 align:middle line:-1
<c.magenta>ARAnchor将被自动添加到你的会话中</c>

00:12:42.396 --> 00:12:43.997 align:middle line:-1
<c.magenta>那么为了响应这个</c>

00:12:44.331 --> 00:12:47.968 align:middle line:-2
<c.magenta>你可以在当前的ARFrame中</c>
<c.magenta>为他们提供一个完整列表</c>

00:12:48.168 --> 00:12:51.271 align:middle line:-2
<c.magenta>将包含你的会话</c>
<c.magenta>当前正在追踪的全部锚点</c>

00:12:51.338 --> 00:12:56.310 align:middle line:-2
<c.magenta>或者你可以响应委托方法</c>
<c.magenta>比如添加、更新和移除</c>

00:12:56.376 --> 00:12:58.412 align:middle line:-1
<c.magenta>如果锚点被成功添加</c>

00:12:58.478 --> 00:13:00.747 align:middle line:-1
<c.magenta>更新或从会话中移除 将会通知你</c>

00:12:58.478 --> 00:13:00.747 align:middle line:-1
<c.magenta>更新或从会话中移除 将会通知你</c>

00:13:02.616 --> 00:13:04.585 align:middle line:-1
<c.magenta>那就推断出四个主要类</c>

00:13:04.651 --> 00:13:07.387 align:middle line:-1
<c.magenta>是你用来创建增强现实体验的</c>

00:13:08.956 --> 00:13:11.225 align:middle line:-1
<c.magenta>现在让我们特别谈谈追踪</c>

00:13:13.627 --> 00:13:18.365 align:middle line:-2
<c.magenta>那么追踪是决定</c>
<c.magenta>在空间中的实时物理位置的功能</c>

00:13:19.800 --> 00:13:20.667 align:middle line:-1
<c.magenta>这并不简单</c>

00:13:20.868 --> 00:13:23.437 align:middle line:-1
<c.magenta>但是它至关重要 它可以让增强现实</c>

00:13:23.770 --> 00:13:25.806 align:middle line:-1
<c.magenta>发现你设备的位置</c>

00:13:25.873 --> 00:13:29.209 align:middle line:-2
<c.magenta>那么并不是任意位置</c>
<c.magenta>而是你设备的位置和方向</c>

00:13:29.276 --> 00:13:30.978 align:middle line:-1
<c.magenta>以便准确地渲染内容</c>

00:13:31.044 --> 00:13:32.479 align:middle line:-1
<c.magenta>那么让我们来看个例子</c>

00:13:33.247 --> 00:13:35.015 align:middle line:-1
<c.magenta>在这里我放了一把虚拟的椅子</c>

00:13:35.449 --> 00:13:37.818 align:middle line:-1
<c.magenta>和一张桌子在物理环境中</c>

00:13:38.185 --> 00:13:43.423 align:middle line:-2
<c.magenta>你会注意到如果我左右平移它</c>
<c.magenta>或重定向到我的设备</c>

00:13:43.490 --> 00:13:45.192 align:middle line:-1
<c.magenta>它们会在空间中保持固定</c>

00:13:45.325 --> 00:13:49.463 align:middle line:-2
<c.magenta>但更重要的是 当我在场景中溜达时</c>
<c.magenta>它们仍然会保持固定</c>

00:13:50.063 --> 00:13:51.665 align:middle line:-1
<c.magenta>那么这是因为我们用了</c>

00:13:51.732 --> 00:13:54.768 align:middle line:-1
<c.magenta>我们不断地更新投影转换</c>

00:13:54.835 --> 00:13:58.438 align:middle line:-2
<c.magenta>或不断地更新我们用于</c>
<c.magenta>渲染这个虚拟内容的投影矩阵</c>

00:13:58.505 --> 00:14:01.241 align:middle line:-2
<c.magenta>以便从任意视角看起来它的位置</c>
<c.magenta>都是正确的</c>

00:13:58.505 --> 00:14:01.241 align:middle line:-2
<c.magenta>以便从任意视角看起来它的位置</c>
<c.magenta>都是正确的</c>

00:14:03.210 --> 00:14:04.511 align:middle line:-1
<c.magenta>现在我们要如何实现呢？</c>

00:14:05.712 --> 00:14:07.714 align:middle line:-1
<c.magenta>ARKit提供世界追踪</c>

00:14:08.015 --> 00:14:10.817 align:middle line:-1
<c.magenta>我们的这个技术使用了视觉惯性里程计</c>

00:14:10.884 --> 00:14:13.420 align:middle line:-2
<c.magenta>它是你的相机图像</c>
<c.magenta>它是你设备的移动</c>

00:14:13.921 --> 00:14:15.722 align:middle line:-1
<c.magenta>并且它给你提供你设备的旋转</c>

00:14:15.789 --> 00:14:19.359 align:middle line:-1
<c.magenta>和位置或相对位置</c>

00:14:21.094 --> 00:14:24.264 align:middle line:-1
<c.magenta>但更重要的是 它提供现实世界的比例</c>

00:14:24.631 --> 00:14:27.568 align:middle line:-1
<c.magenta>你的全部虚拟内容实际上要</c>

00:14:27.634 --> 00:14:29.870 align:middle line:-1
<c.magenta>在物理场景中按比例进行渲染</c>

00:14:31.438 --> 00:14:33.841 align:middle line:-1
<c.magenta>它还意味着你设备的移动</c>

00:14:33.907 --> 00:14:37.411 align:middle line:-2
<c.magenta>与以米为测量单位测定的</c>
<c.magenta>所移动的物理距离相互关联</c>

00:14:40.781 --> 00:14:42.749 align:middle line:-1
<c.magenta>追踪提供的全部位置</c>

00:14:42.816 --> 00:14:45.485 align:middle line:-2
<c.magenta>都是相对于</c>
<c.magenta>你会话的起始位置而言的</c>

00:14:47.221 --> 00:14:49.523 align:middle line:-1
<c.magenta>那么对于世界追踪还有另一个功能</c>

00:14:50.123 --> 00:14:51.925 align:middle line:-1
<c.magenta>我们提供3D特征点</c>

00:14:52.492 --> 00:14:55.529 align:middle line:-2
<c.magenta>那么这里有一个</c>
<c.magenta>关于世界追踪的呈现</c>

00:14:55.596 --> 00:14:58.866 align:middle line:0
<c.magenta>它通过探测特征进行的</c>
<c.magenta>也就是信息的唯一片段</c>

00:14:58.932 --> 00:14:59.833 align:middle line:0
<c.magenta>在相机图像中</c>

00:15:00.601 --> 00:15:04.304 align:middle line:0
<c.magenta>你可以看到</c>
<c.magenta>轴线代表我设备的位置和方向</c>

00:15:04.371 --> 00:15:06.473 align:middle line:0
<c.magenta>它随着我在现实世界中的</c>
<c.magenta>移动而创建路径</c>

00:15:06.540 --> 00:15:08.275 align:middle line:0
<c.magenta>但你还可以看到这上边的这些点</c>

00:15:08.342 --> 00:15:11.845 align:middle line:0
<c.magenta>这些代表3D特征点</c>
<c.magenta>是我在我的场景中探测到的</c>

00:15:11.912 --> 00:15:15.682 align:middle line:0
<c.magenta>我可以通过在场景中移动</c>
<c.magenta>让它们组成三角形</c>

00:15:15.749 --> 00:15:18.585 align:middle line:0
<c.magenta>然后通过利用这些点 匹配这些特征</c>

00:15:18.652 --> 00:15:22.856 align:middle line:0
<c.magenta>你会看到当我匹配一个我之前见到过的</c>
<c.magenta>现有特征时我会画一条线</c>

00:15:23.290 --> 00:15:26.026 align:middle line:0
<c.magenta>通过全部这些信息和我们的运动数据</c>

00:15:26.093 --> 00:15:31.665 align:middle line:0
<c.magenta>我们就可以精确地提供</c>
<c.magenta>设备方向和位置</c>

00:15:32.766 --> 00:15:37.004 align:middle line:-2
<c.magenta>那么看起来可能很难 让我们看看代码</c>
<c.magenta>看我们是如何运行世界追踪的</c>

00:15:38.438 --> 00:15:41.074 align:middle line:-2
<c.magenta>你需要做的第一件事</c>
<c.magenta>就是创建一个ARSession</c>

00:15:41.141 --> 00:15:43.677 align:middle line:-1
<c.magenta>因为它会管理</c>

00:15:43.744 --> 00:15:45.679 align:middle line:-2
<c.magenta>即将在世界追踪过程中</c>
<c.magenta>所发生的全部进程</c>

00:15:45.979 --> 00:15:49.116 align:middle line:-1
<c.magenta>接下来你要把自己设为会话的委托</c>

00:15:49.183 --> 00:15:52.085 align:middle line:-1
<c.magenta>以便当出现新帧时可以接收更新</c>

00:15:53.120 --> 00:15:54.988 align:middle line:-1
<c.magenta>通过创建世界追踪会话配置</c>

00:15:55.055 --> 00:15:56.523 align:middle line:-1
<c.magenta>你其实是在说“我想使用世界追踪</c>

00:15:56.590 --> 00:15:58.825 align:middle line:-1
<c.magenta>我想让我的会话运行这个进程 ”</c>

00:15:59.293 --> 00:16:02.563 align:middle line:-1
<c.magenta>然后通过调用Run 将立即启动进程</c>

00:15:59.293 --> 00:16:02.563 align:middle line:-1
<c.magenta>然后通过调用Run 将立即启动进程</c>

00:16:02.629 --> 00:16:03.864 align:middle line:-1
<c.magenta>开始捕捉</c>

00:16:04.298 --> 00:16:09.036 align:middle line:-2
<c.magenta>那么在底层 我们的会话</c>
<c.magenta>创建一个AVCaptureSession 抱歉</c>

00:16:09.102 --> 00:16:14.074 align:middle line:0
<c.magenta>还有CMMotionManager</c>
<c.magenta>以便获取图像和运动数据</c>

00:16:14.441 --> 00:16:16.677 align:middle line:0
<c.magenta>我们通过图像探测场景中的特征</c>

00:16:17.144 --> 00:16:18.946 align:middle line:0
<c.magenta>我们高频率地使用运动数据</c>

00:16:19.012 --> 00:16:22.149 align:middle line:0
<c.magenta>以随着时间对它进行整合</c>
<c.magenta>获取你设备的移动信息</c>

00:16:23.083 --> 00:16:26.153 align:middle line:0
<c.magenta>将这些结合起来使用</c>
<c.magenta>我们就能使用传感器融合</c>

00:16:26.220 --> 00:16:30.624 align:middle line:0
<c.magenta>以提供精确的姿态</c>
<c.magenta>那么这些会在ARFrame中返回</c>

00:16:32.192 --> 00:16:35.829 align:middle line:-2
<c.magenta>每个ARFrame</c>
<c.magenta>都会包含一个ARCamera</c>

00:16:38.165 --> 00:16:41.034 align:middle line:-2
<c.magenta>那么ARCamera</c>
<c.magenta>是代表虚拟相机的对象</c>

00:16:41.101 --> 00:16:42.769 align:middle line:-1
<c.magenta>或者你可以把它当虚拟相机使用</c>

00:16:42.836 --> 00:16:45.606 align:middle line:-1
<c.magenta>它会呈现你设备的方向以及位置</c>

00:16:45.873 --> 00:16:47.207 align:middle line:-1
<c.magenta>所以它提供一种转换</c>

00:16:47.774 --> 00:16:50.944 align:middle line:-1
<c.magenta>转换是一个矩阵或SIMD浮点4x4</c>

00:16:51.011 --> 00:16:55.015 align:middle line:-2
<c.magenta>提供你物理设备的方向</c>
<c.magenta>或旋转以及转化</c>

00:16:55.082 --> 00:16:58.085 align:middle line:-1
<c.magenta>从会话的起点</c>

00:16:59.019 --> 00:17:01.421 align:middle line:-1
<c.magenta>除此之外 我们还提供一个追踪状态</c>

00:16:59.019 --> 00:17:01.421 align:middle line:-1
<c.magenta>除此之外 我们还提供一个追踪状态</c>

00:17:01.488 --> 00:17:03.924 align:middle line:-1
<c.magenta>让你了解如何使用转换</c>

00:17:04.790 --> 00:17:07.426 align:middle line:-1
<c.magenta>最后 我们提供相机内参</c>

00:17:07.928 --> 00:17:11.431 align:middle line:-2
<c.magenta>那么相机内参非常重要</c>
<c.magenta>我们在每一帧中都能获得相机内参</c>

00:17:11.498 --> 00:17:14.535 align:middle line:-1
<c.magenta>因为它匹配你设备上的物理相机</c>

00:17:14.734 --> 00:17:18.005 align:middle line:-1
<c.magenta>这种信息 比如焦距和主点</c>

00:17:18.070 --> 00:17:19.473 align:middle line:-1
<c.magenta>用于寻找一个投影矩阵</c>

00:17:20.073 --> 00:17:23.609 align:middle line:-2
<c.magenta>投影矩阵也是ARCamera上的一个</c>
<c.magenta>便利的方法</c>

00:17:23.676 --> 00:17:26.646 align:middle line:-2
<c.magenta>那么你可以用这个</c>
<c.magenta>来方便地渲染你的虚拟几何体</c>

00:17:28.615 --> 00:17:31.385 align:middle line:-1
<c.magenta>就是这样 这就是ARKit提供的追踪</c>

00:17:31.451 --> 00:17:33.820 align:middle line:-1
<c.magenta>让我们继续 看一个使用世界追踪</c>

00:17:33.887 --> 00:17:35.956 align:middle line:-1
<c.magenta>创建你的第一个ARKit应用的演示</c>

00:17:42.629 --> 00:17:45.666 align:middle line:-2
<c.magenta>那么当你打开新版Xcode 9时</c>
<c.magenta>你注意到的第一件事</c>

00:17:45.732 --> 00:17:49.603 align:middle line:-2
<c.magenta>就是有一个新模板</c>
<c.magenta>可用于创建增强现实应用</c>

00:17:49.670 --> 00:17:51.171 align:middle line:-1
<c.magenta>那么让我们选择它</c>

00:17:51.705 --> 00:17:54.341 align:middle line:-2
<c.magenta>我要创建一个增强现实应用</c>
<c.magenta>点击下一步</c>

00:17:54.675 --> 00:17:57.878 align:middle line:-1
<c.magenta>在给对象命名之后 比如MyARApp</c>

00:17:58.378 --> 00:17:59.980 align:middle line:-1
<c.magenta>我可以选择语言</c>

00:18:00.314 --> 00:18:03.417 align:middle line:-1
<c.magenta>在这里我可以选择Swift和ObjectiveC</c>

00:18:04.084 --> 00:18:05.719 align:middle line:-1
<c.magenta>以及内容技术</c>

00:18:05.786 --> 00:18:08.388 align:middle line:-1
<c.magenta>那么内容技术用来</c>

00:18:08.455 --> 00:18:10.657 align:middle line:-1
<c.magenta>渲染你的增强现实场景</c>

00:18:10.858 --> 00:18:14.595 align:middle line:-2
<c.magenta>这里的选项有SceneKit、</c>
<c.magenta>SpriteKit以及Metal</c>

00:18:15.128 --> 00:18:17.197 align:middle line:-1
<c.magenta>比如说我要使用SceneKit</c>

00:18:19.233 --> 00:18:21.134 align:middle line:-2
<c.magenta>点击下一步</c>
<c.magenta>并创建我的工作空间之后</c>

00:18:21.201 --> 00:18:22.569 align:middle line:0
<c.magenta>看起来是这样的</c>

00:18:23.203 --> 00:18:25.639 align:middle line:0
<c.magenta>在这里我有一个</c>
<c.magenta>创建好的视图控制器</c>

00:18:25.706 --> 00:18:27.741 align:middle line:0
<c.magenta>你会看到它有一个ARSCNView</c>

00:18:28.008 --> 00:18:32.980 align:middle line:0
<c.magenta>那么这个ARSCNView是一个</c>
<c.magenta>自定义AR子类 替我实施全部渲染</c>

00:18:33.046 --> 00:18:34.515 align:middle line:0
<c.magenta>或替我实施绝大部分渲染</c>

00:18:35.082 --> 00:18:37.351 align:middle line:0
<c.magenta>那么它会处理虚拟相机的更新</c>

00:18:37.417 --> 00:18:40.053 align:middle line:0
<c.magenta>基于返回给它的ARFrame</c>

00:18:40.287 --> 00:18:44.525 align:middle line:0
<c.magenta>作为ARSCNView或sceneView的一个</c>
<c.magenta>属性 它有一个会话</c>

00:18:45.292 --> 00:18:48.529 align:middle line:0
<c.magenta>那么你可以看到我的sceneView</c>
<c.magenta>我设置了一个场景</c>

00:18:48.595 --> 00:18:51.198 align:middle line:0
<c.magenta>它将会成为一艘船 沿着Z轴</c>

00:18:51.265 --> 00:18:53.834 align:middle line:0
<c.magenta>在世界原点稍前一点儿的地方进行转换</c>

00:18:54.101 --> 00:18:57.771 align:middle line:0
<c.magenta>然后最重要的部分是我正在访问会话…</c>

00:18:59.306 --> 00:19:01.241 align:middle line:0
<c.magenta>我正在访问会话并调用Run</c>

00:18:59.306 --> 00:19:01.241 align:middle line:0
<c.magenta>我正在访问会话并调用Run</c>

00:19:01.308 --> 00:19:03.410 align:middle line:-1
<c.magenta>通过一个世界追踪会话配置</c>

00:19:03.810 --> 00:19:05.279 align:middle line:-1
<c.magenta>那么 这将运行世界追踪</c>

00:19:05.345 --> 00:19:08.949 align:middle line:-2
<c.magenta>并且视图将自动处理</c>
<c.magenta>我的虚拟相机的更新</c>

00:19:09.683 --> 00:19:11.318 align:middle line:-1
<c.magenta>那么让我们来试试看</c>

00:19:11.385 --> 00:19:15.522 align:middle line:0
<c.magenta>也许我应该把标准船型</c>
<c.magenta>改为使用arship</c>

00:19:17.257 --> 00:19:19.626 align:middle line:-1
<c.magenta>那么让我们在设备上运行一下</c>

00:19:25.332 --> 00:19:27.501 align:middle line:-1
<c.magenta>在安装后 你注意到的第一件事</c>

00:19:27.568 --> 00:19:29.436 align:middle line:-1
<c.magenta>就是它会请求相机许可</c>

00:19:29.503 --> 00:19:31.138 align:middle line:-1
<c.magenta>这是使用追踪</c>

00:19:31.205 --> 00:19:33.340 align:middle line:-1
<c.magenta>以及渲染你场景的背景的请求</c>

00:19:33.774 --> 00:19:35.676 align:middle line:-2
<c.magenta>接下来你将看到</c>
<c.magenta>我得到了一个相机种子</c>

00:19:35.742 --> 00:19:37.744 align:middle line:-1
<c.magenta>在我正前方有一艘太空船</c>

00:19:37.878 --> 00:19:42.216 align:middle line:-2
<c.magenta>你会看到当我改变设备的方向时</c>
<c.magenta>它在空间中仍保持固定</c>

00:19:42.649 --> 00:19:45.485 align:middle line:-2
<c.magenta>但更重要的是</c>
<c.magenta>当我朝着太空船走过来走过去时</c>

00:19:46.353 --> 00:19:49.323 align:middle line:-2
<c.magenta>你会看到它实际上是</c>
<c.magenta>被锚定在了物理世界中</c>

00:19:50.390 --> 00:19:52.392 align:middle line:-1
<c.magenta>那么这是用了我设备的方向</c>

00:19:52.459 --> 00:19:55.762 align:middle line:-1
<c.magenta>以及相对位置来更新虚拟相机</c>

00:19:57.264 --> 00:19:58.432 align:middle line:-1
<c.magenta>和对太空船的视角</c>

00:19:59.566 --> 00:20:01.168 align:middle line:-1
<c.magenta>那么让我们…谢谢</c>

00:19:59.566 --> 00:20:01.168 align:middle line:-1
<c.magenta>那么让我们…谢谢</c>

00:20:07.407 --> 00:20:09.042 align:middle line:-2
<c.magenta>如果这对于你</c>
<c.magenta>还不是那么有意思</c>

00:20:09.109 --> 00:20:12.346 align:middle line:-2
<c.magenta>也许我们可以添加一些东西到场景中</c>
<c.magenta>每当我们轻触屏幕时</c>

00:20:12.479 --> 00:20:15.315 align:middle line:-2
<c.magenta>让我们来试试</c>
<c.magenta>让我们试着在这个例子中添加一些东西</c>

00:20:17.451 --> 00:20:21.188 align:middle line:-2
<c.magenta>正如我所说的 每次我轻触屏幕时</c>
<c.magenta>都要在场景中添加几何体</c>

00:20:21.688 --> 00:20:23.390 align:middle line:-1
<c.magenta>我要做的第一件事</c>

00:20:24.024 --> 00:20:25.959 align:middle line:0
<c.magenta>就是添加一个轻触手势识别器</c>

00:20:27.494 --> 00:20:32.199 align:middle line:0
<c.magenta>那么将它添加到我的场景视图中后</c>
<c.magenta>每次我调用处理轻触方法时</c>

00:20:32.266 --> 00:20:35.202 align:middle line:0
<c.magenta>或每次我轻触屏幕时</c>
<c.magenta>都将调用处理轻触方法</c>

00:20:36.069 --> 00:20:37.437 align:middle line:0
<c.magenta>那么让我们实施一下</c>

00:20:39.540 --> 00:20:42.943 align:middle line:0
<c.magenta>那么如果我想创建一些几何体</c>
<c.magenta>比如说 我想创建一架飞机</c>

00:20:43.010 --> 00:20:44.478 align:middle line:0
<c.magenta>或飞机图像</c>

00:20:46.880 --> 00:20:50.350 align:middle line:0
<c.magenta>那么我要做的第一件事就是</c>
<c.magenta>用宽和高创建一个SCNPlane</c>

00:20:50.417 --> 00:20:53.720 align:middle line:0
<c.magenta>然后是最棘手的部分 我要设置内容</c>

00:20:53.787 --> 00:20:57.524 align:middle line:0
<c.magenta>或材料作为视图的快照</c>

00:20:59.026 --> 00:21:00.827 align:middle line:0
<c.magenta>那么你认为这会是什么呢？</c>

00:20:59.026 --> 00:21:00.827 align:middle line:0
<c.magenta>那么你认为这会是什么呢？</c>

00:21:00.928 --> 00:21:03.564 align:middle line:0
<c.magenta>嗯 这其实是拍快照或视图的渲染</c>

00:21:03.630 --> 00:21:06.266 align:middle line:0
<c.magenta>包括背景相机图像</c>

00:21:06.333 --> 00:21:09.536 align:middle line:0
<c.magenta>以及我们放在背景前方的虚拟几何体</c>

00:21:10.137 --> 00:21:12.139 align:middle line:-1
<c.magenta>我要把光照模型设为常量</c>

00:21:12.206 --> 00:21:14.408 align:middle line:-1
<c.magenta>从而使ARKit提供的光估计</c>

00:21:14.474 --> 00:21:16.343 align:middle line:-1
<c.magenta>不会应用于这个相机图像中</c>

00:21:16.410 --> 00:21:18.846 align:middle line:-1
<c.magenta>因为它已经已经要跟环境匹配了</c>

00:21:20.147 --> 00:21:22.015 align:middle line:-1
<c.magenta>接下来我要把这个添加到场景中</c>

00:21:22.082 --> 00:21:24.718 align:middle line:-1
<c.magenta>我需要创建一个飞机节点</c>

00:21:28.455 --> 00:21:31.592 align:middle line:0
<c.magenta>在创建一个</c>
<c.magenta>封装此几何体的SCNode之后</c>

00:21:31.658 --> 00:21:32.793 align:middle line:0
<c.magenta>我把它添加到场景中</c>

00:21:33.293 --> 00:21:35.462 align:middle line:0
<c.magenta>已经在这里了 每次我轻触屏幕时</c>

00:21:35.529 --> 00:21:37.197 align:middle line:0
<c.magenta>它会在我的场景中</c>
<c.magenta>添加飞机图像</c>

00:21:37.264 --> 00:21:40.067 align:middle line:0
<c.magenta>但问题是它将总是会在000</c>

00:21:40.501 --> 00:21:42.236 align:middle line:0
<c.magenta>该如何让这个变得更有意思呢？</c>

00:21:42.569 --> 00:21:44.571 align:middle line:0
<c.magenta>嗯 我们已经给自己提供了</c>

00:21:44.638 --> 00:21:47.007 align:middle line:0
<c.magenta>一个当前帧 包含一个AR相机</c>

00:21:47.774 --> 00:21:50.878 align:middle line:0
<c.magenta>我很可能使用相机的转换</c>

00:21:50.944 --> 00:21:53.146 align:middle line:-1
<c.magenta>来更新飞机节点的转换</c>

00:21:53.213 --> 00:21:57.684 align:middle line:-2
<c.magenta>从而使飞机节点处于我的相机</c>
<c.magenta>当前在空间中所处的位置</c>

00:21:58.452 --> 00:22:00.854 align:middle line:0
<c.magenta>那么我首先要获取当前帧</c>

00:21:58.452 --> 00:22:00.854 align:middle line:0
<c.magenta>那么我首先要获取当前帧</c>

00:22:00.921 --> 00:22:02.222 align:middle line:0
<c.magenta>从我的SceneView会话中</c>

00:22:04.124 --> 00:22:06.660 align:middle line:0
<c.magenta>接下来我要更新飞机节点的转换</c>

00:22:08.595 --> 00:22:10.597 align:middle line:-1
<c.magenta>以使用我的相机的转换</c>

00:22:15.235 --> 00:22:16.703 align:middle line:0
<c.magenta>在这里你将注意到我要做的第一件事是</c>

00:22:16.770 --> 00:22:18.805 align:middle line:0
<c.magenta>创建转化矩阵</c>

00:22:19.006 --> 00:22:20.474 align:middle line:0
<c.magenta>因为我不想把飞机图像</c>

00:22:20.541 --> 00:22:22.843 align:middle line:0
<c.magenta>放在相机所处的位置</c>
<c.magenta>那样会阻碍我的视线</c>

00:22:22.910 --> 00:22:24.545 align:middle line:0
<c.magenta>我想把它放在相机前方</c>

00:22:24.745 --> 00:22:28.415 align:middle line:0
<c.magenta>那么为此 我要将负Z轴用作转化</c>

00:22:29.283 --> 00:22:32.986 align:middle line:0
<c.magenta>你还可以看到 为了获得同样的比例</c>
<c.magenta>一切都是以米为测量单位的</c>

00:22:33.053 --> 00:22:37.191 align:middle line:0
<c.magenta>那么我要使用.1代表相机前10厘米</c>

00:22:37.891 --> 00:22:40.827 align:middle line:0
<c.magenta>通过多个位置和多个相机转换</c>

00:22:40.894 --> 00:22:44.698 align:middle line:0
<c.magenta>并将其应用到我的飞机节点中</c>
<c.magenta>将会形成一个飞机图像</c>

00:22:44.765 --> 00:22:47.034 align:middle line:-1
<c.magenta>位于相机前10厘米处</c>

00:22:47.835 --> 00:22:50.003 align:middle line:-1
<c.magenta>让我们尝试一下 看是什么样子</c>

00:22:58.745 --> 00:23:02.516 align:middle line:-2
<c.magenta>那么你再一次看到做了这里</c>
<c.magenta>正在运行相机场景</c>

00:22:58.745 --> 00:23:02.516 align:middle line:-2
<c.magenta>那么你再一次看到做了这里</c>
<c.magenta>正在运行相机场景</c>

00:23:02.583 --> 00:23:04.484 align:middle line:-1
<c.magenta>飞船也浮在空中</c>

00:23:06.453 --> 00:23:10.090 align:middle line:-2
<c.magenta>现在 如果我轻触屏幕</c>
<c.magenta>也许这里 这里和这里</c>

00:23:10.157 --> 00:23:13.026 align:middle line:-1
<c.magenta>你会看到它会在空间中我轻触的地方</c>

00:23:13.093 --> 00:23:14.161 align:middle line:-1
<c.magenta>留下一个快照或图像</c>

00:23:22.302 --> 00:23:25.639 align:middle line:-2
<c.magenta>这只是显示了你通过ARKit</c>
<c.magenta>所获得的其中一个可能性</c>

00:23:25.873 --> 00:23:28.475 align:middle line:-1
<c.magenta>它真的实现了一个很酷的体验</c>

00:23:30.644 --> 00:23:32.346 align:middle line:-1
<c.magenta>谢谢 这就是ARKit的使用</c>

00:23:32.412 --> 00:23:37.718 align:middle line:-2
<c.magenta>（演示</c>
<c.magenta>创建你的第一个ARKit应用）</c>

00:23:41.922 --> 00:23:44.491 align:middle line:-2
<c.magenta>那么现在你已经看到了</c>
<c.magenta>使用ARKit追踪的演示</c>

00:23:44.558 --> 00:23:47.728 align:middle line:-2
<c.magenta>让我们谈谈从追踪结果中</c>
<c.magenta>获得最好的品质</c>

00:23:49.029 --> 00:23:52.733 align:middle line:-2
<c.magenta>要注意的第一件事是追踪</c>
<c.magenta>依赖于不间断的传感器数据</c>

00:23:52.799 --> 00:23:55.269 align:middle line:-1
<c.magenta>意思就是如果不再提供相机图像</c>

00:23:55.335 --> 00:23:57.704 align:middle line:-1
<c.magenta>给你的会话 追踪将会停止</c>

00:23:57.771 --> 00:23:59.006 align:middle line:-1
<c.magenta>我们就不能追踪了</c>

00:24:00.574 --> 00:24:03.377 align:middle line:-2
<c.magenta>接下来追踪在结构良好的环境中</c>
<c.magenta>用起来效果最好</c>

00:24:04.044 --> 00:24:07.014 align:middle line:-1
<c.magenta>意思是我们需要足够的视觉复杂性</c>

00:24:07.080 --> 00:24:08.916 align:middle line:-1
<c.magenta>从你的相机图像中寻找特性</c>

00:24:09.249 --> 00:24:11.752 align:middle line:-2
<c.magenta>那么如果我面对着一面白墙</c>
<c.magenta>或房间内的灯光太暗</c>

00:24:11.818 --> 00:24:15.956 align:middle line:-1
<c.magenta>我就不能找到特征 并且追踪会受限制</c>

00:24:17.624 --> 00:24:20.027 align:middle line:-1
<c.magenta>接下来追踪在静态场景中用起来也很好</c>

00:24:20.360 --> 00:24:24.164 align:middle line:-2
<c.magenta>如果我相机捕捉到的大部分东西</c>
<c.magenta>都在移动 可是数据将不会响应</c>

00:24:24.231 --> 00:24:29.136 align:middle line:-2
<c.magenta>移动数据 可能导致漂移</c>
<c.magenta>这也是一个受限的追踪状态</c>

00:24:29.903 --> 00:24:34.508 align:middle line:-2
<c.magenta>要处理这些情况</c>
<c.magenta>ARCamera提供了一个追踪状态属性</c>

00:24:36.043 --> 00:24:41.548 align:middle line:-2
<c.magenta>追踪状态有三个值：</c>
<c.magenta>不可用、正常和受限</c>

00:24:42.149 --> 00:24:45.719 align:middle line:-2
<c.magenta>当你首次启动会话时</c>
<c.magenta>它开始显示为不可用</c>

00:24:45.786 --> 00:24:47.421 align:middle line:-1
<c.magenta>意思就是你相机的转换</c>

00:24:47.487 --> 00:24:50.457 align:middle line:-1
<c.magenta>还没有被填充 单位矩阵也没有准备好</c>

00:24:51.792 --> 00:24:54.695 align:middle line:-1
<c.magenta>很快 一旦我们找到第一个追踪姿态</c>

00:24:54.761 --> 00:24:57.698 align:middle line:-1
<c.magenta>状态将从不可用改为正常</c>

00:24:58.198 --> 00:25:00.968 align:middle line:-1
<c.magenta>这表示你现在可以使用相机的转换了</c>

00:24:58.198 --> 00:25:00.968 align:middle line:-1
<c.magenta>这表示你现在可以使用相机的转换了</c>

00:25:02.870 --> 00:25:05.973 align:middle line:-2
<c.magenta>如果在这之后的某一个时间点</c>
<c.magenta>追踪受到限制</c>

00:25:06.039 --> 00:25:09.009 align:middle line:-1
<c.magenta>追踪状态将会从正常改为受限</c>

00:25:09.409 --> 00:25:10.911 align:middle line:-1
<c.magenta>同时会提供一个原因</c>

00:25:11.078 --> 00:25:13.514 align:middle line:-2
<c.magenta>那么本例中的原因是</c>
<c.magenta>我正面对着一面白墙</c>

00:25:13.580 --> 00:25:16.250 align:middle line:-1
<c.magenta>或者没有充足的光照 是特征不足</c>

00:25:17.551 --> 00:25:19.987 align:middle line:-2
<c.magenta>当发生此种情况时</c>
<c.magenta>通知你的用户是很有帮助的</c>

00:25:20.053 --> 00:25:21.989 align:middle line:0
<c.magenta>那么 要实现这个功能 我们提供了</c>

00:25:22.422 --> 00:25:24.558 align:middle line:0
<c.magenta>一个你可以实施的会话委托方法：</c>

00:25:24.725 --> 00:25:26.426 align:middle line:0
<c.magenta>cameraDidChangeTrackingState</c>

00:25:26.960 --> 00:25:29.329 align:middle line:0
<c.magenta>当发生这种情况时</c>
<c.magenta>你可以获取追踪状态</c>

00:25:29.396 --> 00:25:31.565 align:middle line:0
<c.magenta>看是否受限 以及受限原因</c>

00:25:32.499 --> 00:25:34.001 align:middle line:0
<c.magenta>根据这个信息来通知你的用户</c>

00:25:34.067 --> 00:25:37.838 align:middle line:0
<c.magenta>因为他们是唯一能修改追踪情形的人</c>

00:25:37.905 --> 00:25:41.008 align:middle line:0
<c.magenta>通过开灯或不面对着白墙</c>

00:25:43.143 --> 00:25:47.114 align:middle line:0
<c.magenta>另一部分是如果传感器数据不可用</c>

00:25:47.881 --> 00:25:50.717 align:middle line:0
<c.magenta>那么对于这种情况</c>
<c.magenta>我们通过会话间断来处理</c>

00:25:51.451 --> 00:25:54.121 align:middle line:-1
<c.magenta>那么如果你的相机输入不可用 由于…</c>

00:25:54.188 --> 00:25:56.356 align:middle line:-1
<c.magenta>主要原因是你的应用处于后台</c>

00:25:56.423 --> 00:25:59.226 align:middle line:-1
<c.magenta>或也许你正在iPad上实施多项任务</c>

00:25:59.293 --> 00:26:01.795 align:middle line:-1
<c.magenta>相机图像也不会提供给你的会话</c>

00:25:59.293 --> 00:26:01.795 align:middle line:-1
<c.magenta>相机图像也不会提供给你的会话</c>

00:26:02.196 --> 00:26:04.831 align:middle line:-1
<c.magenta>在这种情况下 追踪变得不可用</c>

00:26:04.898 --> 00:26:07.601 align:middle line:-1
<c.magenta>或停止 并且你的会话将被中断</c>

00:26:07.668 --> 00:26:10.270 align:middle line:-1
<c.magenta>要处理这个问题 我们提供了委托方法</c>

00:26:10.771 --> 00:26:11.839 align:middle line:0
<c.magenta>让它变得非常简单</c>

00:26:12.673 --> 00:26:16.476 align:middle line:0
<c.magenta>在这里你可以呈现一个覆盖</c>
<c.magenta>或也许模糊屏幕</c>

00:26:16.543 --> 00:26:19.880 align:middle line:0
<c.magenta>向用户表明你的体验当前已被暂停</c>

00:26:19.947 --> 00:26:21.448 align:middle line:0
<c.magenta>追踪已停止</c>

00:26:22.015 --> 00:26:25.219 align:middle line:-1
<c.magenta>在中断过程中 有一个重点需要注意</c>

00:26:25.285 --> 00:26:27.754 align:middle line:-1
<c.magenta>因为没有任何追踪</c>

00:26:27.821 --> 00:26:30.490 align:middle line:-1
<c.magenta>你设备的相对位置也不可用</c>

00:26:30.691 --> 00:26:34.194 align:middle line:-2
<c.magenta>所以如果你在场景中</c>
<c.magenta>有锚点或物理位置</c>

00:26:34.261 --> 00:26:37.798 align:middle line:-2
<c.magenta>它们可能不再对齐</c>
<c.magenta>如果在这个中断过程中有移动的话</c>

00:26:38.699 --> 00:26:41.602 align:middle line:-2
<c.magenta>为此你可能想根据情况</c>
<c.magenta>重新启动你的体验</c>

00:26:41.668 --> 00:26:43.470 align:middle line:-1
<c.magenta>当你从中断中返回来时</c>

00:26:44.872 --> 00:26:47.508 align:middle line:-1
<c.magenta>那么这就是追踪</c>

00:26:48.342 --> 00:26:51.778 align:middle line:-2
<c.magenta>让我们把舞台交给Stefan</c>
<c.magenta>让他讲讲场景理解 谢谢大家</c>

00:26:57.818 --> 00:26:58.719 align:middle line:-1
<c.magenta>谢谢Mike</c>

00:26:59.720 --> 00:27:00.988 align:middle line:-1
<c.magenta>大家下午好</c>

00:26:59.720 --> 00:27:00.988 align:middle line:-1
<c.magenta>大家下午好</c>

00:27:01.321 --> 00:27:04.658 align:middle line:-2
<c.magenta>我叫Stefan Misslinger</c>
<c.magenta>我是ARKit团队中的一名工程师</c>

00:27:04.725 --> 00:27:07.361 align:middle line:-1
<c.magenta>接下来我要讲讲场景理解</c>

00:27:07.728 --> 00:27:11.365 align:middle line:-2
<c.magenta>那么场景理解的目标是</c>
<c.magenta>寻找更多与环境相关的信息</c>

00:27:11.431 --> 00:27:14.568 align:middle line:-1
<c.magenta>以便在这个环境中放置虚拟对象</c>

00:27:15.102 --> 00:27:19.072 align:middle line:-1
<c.magenta>这种信息包括比如环境3D拓扑</c>

00:27:19.139 --> 00:27:24.778 align:middle line:-1
<c.magenta>以及光照条件 以便逼真地摆放对象</c>

00:27:25.979 --> 00:27:28.482 align:middle line:-1
<c.magenta>让我们看一下这个桌子作为示例</c>

00:27:29.183 --> 00:27:32.586 align:middle line:-2
<c.magenta>如果你想在这个桌子上放置一个对象</c>
<c.magenta>一个虚拟对象</c>

00:27:32.653 --> 00:27:34.121 align:middle line:-1
<c.magenta>我们需要了解的第一件事</c>

00:27:34.188 --> 00:27:37.191 align:middle line:-2
<c.magenta>就是那儿有一个表面</c>
<c.magenta>可以让我们放置东西</c>

00:27:37.524 --> 00:27:40.227 align:middle line:-1
<c.magenta>这是通过平面探测实现的</c>

00:27:41.628 --> 00:27:44.531 align:middle line:-1
<c.magenta>第二 我们需要计算3D坐标</c>

00:27:44.598 --> 00:27:47.134 align:middle line:-2
<c.magenta>我们要在这个坐标上</c>
<c.magenta>放置我们的虚拟对象</c>

00:27:47.734 --> 00:27:50.437 align:middle line:-1
<c.magenta>要找到坐标 我们得使用碰撞测试</c>

00:27:51.004 --> 00:27:54.474 align:middle line:-2
<c.magenta>这包括从我们的设备上发送一条射线</c>
<c.magenta>并将其与现实世界交叉</c>

00:27:54.541 --> 00:27:56.977 align:middle line:-1
<c.magenta>以便找到这个坐标</c>

00:27:58.645 --> 00:28:03.650 align:middle line:-2
<c.magenta>第三 要把这个对象</c>
<c.magenta>逼真地摆放到现实世界</c>

00:27:58.645 --> 00:28:03.650 align:middle line:-2
<c.magenta>第三 要把这个对象</c>
<c.magenta>逼真地摆放到现实世界</c>

00:28:03.717 --> 00:28:07.955 align:middle line:-2
<c.magenta>我们需要光预计</c>
<c.magenta>以匹配环境中的光照情况</c>

00:28:08.889 --> 00:28:11.391 align:middle line:-1
<c.magenta>让我们分别来看一下这三点</c>

00:28:11.458 --> 00:28:12.926 align:middle line:-1
<c.magenta>让我们从平面探测开始</c>

00:28:14.394 --> 00:28:16.997 align:middle line:-1
<c.magenta>那么平面探测为你提供水平面</c>

00:28:17.064 --> 00:28:18.832 align:middle line:-1
<c.magenta>就重力而言</c>

00:28:19.533 --> 00:28:21.702 align:middle line:-1
<c.magenta>这种位面包括地平面</c>

00:28:21.768 --> 00:28:25.272 align:middle line:-1
<c.magenta>以及任意平行平面 如桌子</c>

00:28:26.607 --> 00:28:30.777 align:middle line:-2
<c.magenta>ARKit通过在多帧之上</c>
<c.magenta>聚合信息来实现</c>

00:28:30.844 --> 00:28:32.112 align:middle line:-1
<c.magenta>所以它在后台运行</c>

00:28:32.679 --> 00:28:35.449 align:middle line:-1
<c.magenta>当用户在场景中移动设备时</c>

00:28:35.516 --> 00:28:37.518 align:middle line:-1
<c.magenta>它就了解了关于这个位面的更多信息</c>

00:28:39.086 --> 00:28:43.991 align:middle line:-2
<c.magenta>这也允许我们取回</c>
<c.magenta>关于这个位面的一致性数据</c>

00:28:44.057 --> 00:28:49.329 align:middle line:-2
<c.magenta>意思是我们正在把一个矩形</c>
<c.magenta>试着放到这个位面被检测的部分</c>

00:28:49.396 --> 00:28:51.331 align:middle line:-1
<c.magenta>并让它与主范围对齐</c>

00:28:51.598 --> 00:28:53.066 align:middle line:-1
<c.magenta>这就给你提供了</c>

00:28:53.133 --> 00:28:56.737 align:middle line:-1
<c.magenta>某个物理位面的主要定位</c>

00:28:58.405 --> 00:29:01.575 align:middle line:-2
<c.magenta>此外如果在同一个物理水平面上</c>
<c.magenta>检测多个虚拟位面</c>

00:28:58.405 --> 00:29:01.575 align:middle line:-2
<c.magenta>此外如果在同一个物理水平面上</c>
<c.magenta>检测多个虚拟位面</c>

00:29:01.642 --> 00:29:05.445 align:middle line:-1
<c.magenta>ARKit将合并在一起处理</c>

00:29:06.580 --> 00:29:12.152 align:middle line:-2
<c.magenta>然后合并后的位面</c>
<c.magenta>将增大到两个位面的范围</c>

00:29:12.219 --> 00:29:14.788 align:middle line:-1
<c.magenta>因为较新的位面将从会话中被移除</c>

00:29:16.190 --> 00:29:18.258 align:middle line:-1
<c.magenta>让我们看一下在代码中是如何使用的</c>

00:29:20.194 --> 00:29:24.665 align:middle line:-2
<c.magenta>你要做的第一件事就是创建一个</c>
<c.magenta>ARWorldTracking会话配置</c>

00:29:25.666 --> 00:29:27.935 align:middle line:-1
<c.magenta>平面探测是一个属性 你可以</c>

00:29:28.001 --> 00:29:30.304 align:middle line:-1
<c.magenta>在ARWorldTracking会话配置中设置</c>

00:29:30.571 --> 00:29:32.272 align:middle line:-1
<c.magenta>那么要启动平面探测</c>

00:29:32.339 --> 00:29:35.709 align:middle line:-2
<c.magenta>你只需要将平面探测属性</c>
<c.magenta>设为水平即可</c>

00:29:36.810 --> 00:29:39.146 align:middle line:-1
<c.magenta>之后把配置传回</c>

00:29:39.213 --> 00:29:42.015 align:middle line:-1
<c.magenta>ARSession 通过调用Run方法</c>

00:29:42.082 --> 00:29:45.118 align:middle line:-1
<c.magenta>它将会在你的环境中开始探测平面</c>

00:29:47.421 --> 00:29:50.224 align:middle line:-1
<c.magenta>如果你要关闭平面探测</c>

00:29:50.290 --> 00:29:53.927 align:middle line:-1
<c.magenta>我们只需要将平面探测属性设为无</c>

00:29:54.161 --> 00:29:57.297 align:middle line:-2
<c.magenta>然后在ARSession上</c>
<c.magenta>再次调用Run方法</c>

00:29:58.065 --> 00:30:01.335 align:middle line:-1
<c.magenta>之前探测到的平面将保留在会话中</c>

00:29:58.065 --> 00:30:01.335 align:middle line:-1
<c.magenta>之前探测到的平面将保留在会话中</c>

00:30:02.102 --> 00:30:06.473 align:middle line:-2
<c.magenta>意思是它们仍会</c>
<c.magenta>出现在我们的ARFrame锚点中</c>

00:30:08.242 --> 00:30:11.445 align:middle line:-1
<c.magenta>那么无论何时探测到一个新平面</c>

00:30:11.512 --> 00:30:14.248 align:middle line:-2
<c.magenta>它们都将</c>
<c.magenta>作为ARPlaneAnchor显示给你</c>

00:30:15.015 --> 00:30:18.118 align:middle line:-1
<c.magenta>ARPlaneAnchor是ARAnchor的子类</c>

00:30:18.185 --> 00:30:21.488 align:middle line:-1
<c.magenta>意思是它呈现现实世界位置和方向</c>

00:30:23.457 --> 00:30:25.893 align:middle line:-1
<c.magenta>无论何时检测到一个新锚点</c>

00:30:25.959 --> 00:30:29.429 align:middle line:-2
<c.magenta>你都将收到一个</c>
<c.magenta>委托调用会话didAdd锚点</c>

00:30:30.030 --> 00:30:33.100 align:middle line:-1
<c.magenta>你可以用那个来 比如形象化你的平面</c>

00:30:34.034 --> 00:30:38.739 align:middle line:-1
<c.magenta>平面的范围将作为范围呈现给你</c>

00:30:38.972 --> 00:30:42.609 align:middle line:-1
<c.magenta>是相对于中心属性而言的</c>

00:30:44.778 --> 00:30:47.381 align:middle line:-1
<c.magenta>那么随着用户在场景中移动设备</c>

00:30:47.447 --> 00:30:50.584 align:middle line:-2
<c.magenta>我们将更多地了解这个平面</c>
<c.magenta>并且更新它的范围</c>

00:30:52.052 --> 00:30:56.623 align:middle line:0
<c.magenta>当更新范围时</c>
<c.magenta>你会收到一个委托会话didUpdate帧</c>

00:30:56.690 --> 00:30:58.158 align:middle line:0
<c.magenta>didUpdate锚点</c>

00:30:58.759 --> 00:31:01.562 align:middle line:0
<c.magenta>你可以用于更新你的视觉展现</c>

00:30:58.759 --> 00:31:01.562 align:middle line:0
<c.magenta>你可以用于更新你的视觉展现</c>

00:31:02.529 --> 00:31:06.233 align:middle line:0
<c.magenta>请注意中心属性实际是如何移动的</c>
<c.magenta>因为平面</c>

00:31:06.300 --> 00:31:08.502 align:middle line:0
<c.magenta>更多的是在一个方向上增长</c>

00:31:11.305 --> 00:31:14.441 align:middle line:-1
<c.magenta>无论何时锚点被从会话中移除时</c>

00:31:14.508 --> 00:31:17.477 align:middle line:0
<c.magenta>你都将收到一个委托调用会话</c>
<c.magenta>didRemove锚点</c>

00:31:18.579 --> 00:31:22.115 align:middle line:0
<c.magenta>如果把多个平面合并在一起</c>

00:31:22.182 --> 00:31:24.117 align:middle line:0
<c.magenta>并移除其中一个作为结果时</c>
<c.magenta>会出现这种情况</c>

00:31:24.618 --> 00:31:29.223 align:middle line:0
<c.magenta>在那种情况下 你会收到一个</c>
<c.magenta>委托调用会话didRemove锚点</c>

00:31:29.289 --> 00:31:31.725 align:middle line:0
<c.magenta>你可以根据情况更新你的视觉展现</c>

00:31:33.961 --> 00:31:37.397 align:middle line:-2
<c.magenta>那么现在我们有了一个</c>
<c.magenta>关于环境中哪里有平面的概念了</c>

00:31:37.464 --> 00:31:40.300 align:middle line:-2
<c.magenta>让我们看看如何</c>
<c.magenta>在平面上实际地放置东西</c>

00:31:40.934 --> 00:31:43.103 align:middle line:-1
<c.magenta>为此我们提供碰撞测试</c>

00:31:44.638 --> 00:31:47.040 align:middle line:-1
<c.magenta>那么碰撞测试包括向现实世界发送</c>

00:31:47.107 --> 00:31:49.843 align:middle line:-1
<c.magenta>或交叉来自你设备的一条射线</c>

00:31:49.910 --> 00:31:53.180 align:middle line:-1
<c.magenta>并寻找交叉点</c>

00:31:55.616 --> 00:31:58.385 align:middle line:-1
<c.magenta>ARKit会使用全部可用的场景信息</c>

00:31:58.452 --> 00:32:02.456 align:middle line:-1
<c.magenta>包括所探测到的平面以及</c>

00:31:58.452 --> 00:32:02.456 align:middle line:-1
<c.magenta>包括所探测到的平面以及</c>

00:32:02.523 --> 00:32:06.193 align:middle line:-2
<c.magenta>ARWorldTracking 所使用的3D特征点</c>
<c.magenta>以算出它的位置</c>

00:32:08.862 --> 00:32:11.832 align:middle line:-1
<c.magenta>然后ARKit交叉我们的射线</c>

00:32:11.899 --> 00:32:16.336 align:middle line:-1
<c.magenta>通过全部可用信息</c>

00:32:16.403 --> 00:32:21.975 align:middle line:-2
<c.magenta>并将全部交叉点返回为一个</c>
<c.magenta>按距离排序的数组</c>

00:32:22.242 --> 00:32:25.946 align:middle line:-2
<c.magenta>这个数组中的第一条</c>
<c.magenta>将是距离摄像机最近的交叉点</c>

00:32:28.348 --> 00:32:32.619 align:middle line:-1
<c.magenta>并且有不同的方式可以实施这个交叉点</c>

00:32:32.986 --> 00:32:37.057 align:middle line:-2
<c.magenta>你可以通过提供碰撞测试类型</c>
<c.magenta>来定义这个方式</c>

00:32:38.559 --> 00:32:41.328 align:middle line:-2
<c.magenta>有四种方式可以实现</c>
<c.magenta>让我们来看看</c>

00:32:43.530 --> 00:32:46.633 align:middle line:-2
<c.magenta>如果你正在运行平面探测</c>
<c.magenta>并且ARKit已经</c>

00:32:46.700 --> 00:32:50.270 align:middle line:-2
<c.magenta>在我们的环境中探测到了一个平面</c>
<c.magenta>我们就可以利用它</c>

00:32:51.805 --> 00:32:56.143 align:middle line:-2
<c.magenta>在这里你可以选择</c>
<c.magenta>使用平面的范围或忽略它</c>

00:32:56.944 --> 00:33:01.215 align:middle line:-1
<c.magenta>如果你希望你的用户可以</c>

00:32:56.944 --> 00:33:01.215 align:middle line:-1
<c.magenta>如果你希望你的用户可以</c>

00:33:01.281 --> 00:33:04.551 align:middle line:-1
<c.magenta>在平面上移动对象</c>

00:33:04.618 --> 00:33:09.289 align:middle line:-2
<c.magenta>你可以考虑使用范围 意思是</c>
<c.magenta>如果射线在它的范围内交叉了</c>

00:33:09.356 --> 00:33:12.526 align:middle line:-1
<c.magenta>它就会提供给你一个交叉点</c>

00:33:12.926 --> 00:33:16.830 align:middle line:-2
<c.magenta>如果涉嫌碰到了它的外部</c>
<c.magenta>它将不会返回给你一个交叉点</c>

00:33:19.099 --> 00:33:22.669 align:middle line:-1
<c.magenta>情况有 比如移动家具</c>

00:33:22.736 --> 00:33:26.306 align:middle line:-1
<c.magenta>或当你只探测到了水平面的一小部分时</c>

00:33:26.373 --> 00:33:29.543 align:middle line:-2
<c.magenta>我们可以选择忽略</c>
<c.magenta>这个范围并将现有平面</c>

00:33:29.610 --> 00:33:30.911 align:middle line:-1
<c.magenta>作为一个无限平面</c>

00:33:31.912 --> 00:33:34.481 align:middle line:-2
<c.magenta>在那种情况下</c>
<c.magenta>你总是会收到一个交叉点</c>

00:33:35.916 --> 00:33:38.619 align:middle line:-1
<c.magenta>你可以只使用现实世界中的一小片</c>

00:33:38.685 --> 00:33:43.490 align:middle line:-1
<c.magenta>但让你的用户沿着这个平面移动对象</c>

00:33:45.592 --> 00:33:50.531 align:middle line:-2
<c.magenta>如果你没有运行平面探测</c>
<c.magenta>或我们还没有探测到任何平面</c>

00:33:50.597 --> 00:33:53.767 align:middle line:-1
<c.magenta>我们也可以根据当前可用的3D特征点</c>

00:33:53.834 --> 00:33:54.968 align:middle line:-1
<c.magenta>预估一个平面</c>

00:33:56.270 --> 00:34:00.340 align:middle line:-2
<c.magenta>在那种情况下</c>
<c.magenta>ARKit将在我们的环境中寻找共面的点</c>

00:33:56.270 --> 00:34:00.340 align:middle line:-2
<c.magenta>在那种情况下</c>
<c.magenta>ARKit将在我们的环境中寻找共面的点</c>

00:34:00.407 --> 00:34:02.209 align:middle line:-1
<c.magenta>并在那儿放置一个适合的平面</c>

00:34:02.743 --> 00:34:05.946 align:middle line:-1
<c.magenta>之后它将给你返回这个平面的交叉点</c>

00:34:08.748 --> 00:34:11.784 align:middle line:-1
<c.magenta>如果你想在一个很小的表面放置东西</c>

00:34:11.851 --> 00:34:15.922 align:middle line:-2
<c.magenta>而那并不能形成一个平面的话</c>
<c.magenta>或你在一个非常不规则的环境中</c>

00:34:15.989 --> 00:34:19.226 align:middle line:-1
<c.magenta>你还可以选择直接与特征点交叉</c>

00:34:21.094 --> 00:34:24.598 align:middle line:-1
<c.magenta>意思是我们会随着射线找到交叉点</c>

00:34:24.665 --> 00:34:26.733 align:middle line:-1
<c.magenta>是距离现有的特征点最近的交叉点</c>

00:34:26.800 --> 00:34:29.069 align:middle line:-1
<c.magenta>并返回这个交叉点作为结果</c>

00:34:30.469 --> 00:34:32.539 align:middle line:-1
<c.magenta>让我们在代码中看看是如何实现的</c>

00:34:34.641 --> 00:34:38.178 align:middle line:-2
<c.magenta>那么我们要做的第一件事</c>
<c.magenta>就是定义我们的射线</c>

00:34:38.712 --> 00:34:41.748 align:middle line:-1
<c.magenta>它在我们的设备上进行交叉</c>

00:34:43.483 --> 00:34:45.185 align:middle line:-1
<c.magenta>你把射线提供为一个CG点</c>

00:34:45.252 --> 00:34:48.355 align:middle line:-1
<c.magenta>呈现方式是标准化的图像空间坐标</c>

00:34:48.422 --> 00:34:53.527 align:middle line:-2
<c.magenta>意思是我们的图像左上角是0 0</c>
<c.magenta>而右下角是1 1</c>

00:34:55.062 --> 00:34:57.297 align:middle line:-1
<c.magenta>那么如果我们想发送一条射线</c>

00:34:57.364 --> 00:35:00.334 align:middle line:-1
<c.magenta>或寻找一个交叉点 在屏幕的中心位置</c>

00:34:57.364 --> 00:35:00.334 align:middle line:-1
<c.magenta>或寻找一个交叉点 在屏幕的中心位置</c>

00:35:00.400 --> 00:35:05.239 align:middle line:-2
<c.magenta>我们要把CG点的x和y坐标</c>
<c.magenta>都定义为0.5</c>

00:35:06.473 --> 00:35:10.143 align:middle line:-2
<c.magenta>如果你用的是SceneKit或SpriteKit</c>
<c.magenta>我们提供一种自定义覆盖</c>

00:35:10.210 --> 00:35:16.083 align:middle line:-2
<c.magenta>你只需要传递</c>
<c.magenta>一个CG点的几个坐标即可</c>

00:35:16.149 --> 00:35:19.686 align:middle line:-2
<c.magenta>那么你可以优先于触摸手势</c>
<c.magenta>先使用UI轻触的结果</c>

00:35:19.753 --> 00:35:23.757 align:middle line:-1
<c.magenta>作为输入来定义这条射线</c>

00:35:25.626 --> 00:35:28.729 align:middle line:-2
<c.magenta>那么让我们把这个点</c>
<c.magenta>传给碰撞测试方法</c>

00:35:28.795 --> 00:35:31.732 align:middle line:-1
<c.magenta>并定义我们要使用的碰撞测试类型</c>

00:35:31.798 --> 00:35:35.269 align:middle line:-2
<c.magenta>在这种情况下我们要使用现有平面</c>
<c.magenta>意思是它将</c>

00:35:35.335 --> 00:35:38.705 align:middle line:-2
<c.magenta>于ARKit已经探测到的任意平面</c>
<c.magenta>进行交叉</c>

00:35:38.772 --> 00:35:41.074 align:middle line:-1
<c.magenta>也会与预估水平平面进行交叉</c>

00:35:41.141 --> 00:35:46.446 align:middle line:-2
<c.magenta>那么这个可以作为备用方案</c>
<c.magenta>如果尚未探测到任何平面的话</c>

00:35:48.081 --> 00:35:53.987 align:middle line:-1
<c.magenta>之后ARKit将会返回结果数组</c>

00:35:54.054 --> 00:35:55.989 align:middle line:-1
<c.magenta>你可以获取第一条结果</c>

00:35:56.056 --> 00:35:59.459 align:middle line:-1
<c.magenta>将会是距离你的相机最近的交叉点</c>

00:36:02.129 --> 00:36:05.933 align:middle line:-1
<c.magenta>交叉点包含在我们碰撞测试</c>

00:36:05.999 --> 00:36:07.534 align:middle line:-1
<c.magenta>结果的worldTransform属性中</c>

00:36:07.601 --> 00:36:10.671 align:middle line:-2
<c.magenta>并且我们可以根据这个结果</c>
<c.magenta>创建一个新的ARAnchor</c>

00:36:10.737 --> 00:36:14.575 align:middle line:-2
<c.magenta>并将其传回给会话</c>
<c.magenta>因为我们想与它保持联系</c>

00:36:16.410 --> 00:36:17.845 align:middle line:-1
<c.magenta>那么如果我们把这段代码</c>

00:36:17.911 --> 00:36:23.183 align:middle line:-2
<c.magenta>应用到这里的场景中</c>
<c.magenta>我们把手机指向桌子</c>

00:36:23.250 --> 00:36:28.622 align:middle line:-2
<c.magenta>它将会返回在屏幕中央</c>
<c.magenta>给我们返回与这张桌子的交叉点</c>

00:36:28.689 --> 00:36:32.125 align:middle line:-1
<c.magenta>我们可以在这个位置摆放一个虚拟茶杯</c>

00:36:34.094 --> 00:36:37.598 align:middle line:-2
<c.magenta>默认情况是你的渲染引擎</c>
<c.magenta>将假设你的背景图片</c>

00:36:37.664 --> 00:36:42.803 align:middle line:-2
<c.magenta>光照情况很完美 所以你增加的</c>
<c.magenta>虚拟对象看起来应该真的就属于那儿</c>

00:36:43.237 --> 00:36:45.539 align:middle line:-1
<c.magenta>然而 如果你处于一个较暗的环境中</c>

00:36:46.740 --> 00:36:50.277 align:middle line:-2
<c.magenta>然后你的相机图像也较暗</c>
<c.magenta>意思是你添加的虚拟对象</c>

00:36:50.344 --> 00:36:52.946 align:middle line:-1
<c.magenta>看起来格格不入 它看起来很亮</c>

00:36:54.214 --> 00:36:58.352 align:middle line:-1
<c.magenta>要修复这个问题 我们需要调整</c>

00:36:58.418 --> 00:37:00.521 align:middle line:-1
<c.magenta>虚拟对象的相对亮度</c>

00:36:58.418 --> 00:37:00.521 align:middle line:-1
<c.magenta>虚拟对象的相对亮度</c>

00:37:02.089 --> 00:37:04.825 align:middle line:-1
<c.magenta>为此 我们提供光估计</c>

00:37:07.361 --> 00:37:10.531 align:middle line:-1
<c.magenta>那么光估计是在你的相机图像上应用的</c>

00:37:10.931 --> 00:37:12.666 align:middle line:-1
<c.magenta>它通过它的曝光信息</c>

00:37:12.733 --> 00:37:15.636 align:middle line:-1
<c.magenta>来决定它的相对亮度</c>

00:37:16.737 --> 00:37:20.007 align:middle line:-1
<c.magenta>光照良好的图像 默认是1000流明</c>

00:37:20.073 --> 00:37:23.143 align:middle line:-2
<c.magenta>对于较亮的环境</c>
<c.magenta>你将得到一个更高的值</c>

00:37:23.210 --> 00:37:25.712 align:middle line:-2
<c.magenta>对于较暗的环境</c>
<c.magenta>你将得到一个较低的值</c>

00:37:26.647 --> 00:37:30.417 align:middle line:-1
<c.magenta>你还可以直接把这个值分配给SEN光</c>

00:37:30.484 --> 00:37:32.920 align:middle line:-1
<c.magenta>作为其外界强度属性</c>

00:37:32.986 --> 00:37:35.422 align:middle line:-1
<c.magenta>因此如果你使用的是物理光</c>

00:37:35.489 --> 00:37:37.724 align:middle line:-1
<c.magenta>它将自动利用这个</c>

00:37:39.493 --> 00:37:41.895 align:middle line:-1
<c.magenta>光预计是默认启动的</c>

00:37:41.962 --> 00:37:44.064 align:middle line:-1
<c.magenta>你可以通过设置</c>

00:37:44.131 --> 00:37:47.701 align:middle line:-2
<c.magenta>isLightEstimationEnabled</c>
<c.magenta>属性配置光估计</c>

00:37:47.768 --> 00:37:49.570 align:middle line:-1
<c.magenta>在ARSession配置中</c>

00:37:50.437 --> 00:37:52.406 align:middle line:-1
<c.magenta>光估计的结果</c>

00:37:52.706 --> 00:37:55.142 align:middle line:-1
<c.magenta>以光估计属性提供给你</c>

00:37:55.209 --> 00:37:59.379 align:middle line:-2
<c.magenta>这个属性在ARFrame中</c>
<c.magenta>作为其外界强度值</c>

00:38:01.682 --> 00:38:03.817 align:middle line:-1
<c.magenta>那么让我们看一个演示</c>

00:38:03.884 --> 00:38:06.653 align:middle line:-2
<c.magenta>看看我们是如何</c>
<c.magenta>通过ARKit使用场景理解的</c>

00:38:17.431 --> 00:38:19.566 align:middle line:-1
<c.magenta>我要给大家展示的应用</c>

00:38:19.633 --> 00:38:22.002 align:middle line:-1
<c.magenta>是ARKit示例应用</c>

00:38:22.069 --> 00:38:26.006 align:middle line:-2
<c.magenta>意思是你可以从我们的</c>
<c.magenta>开发者网站上下载它</c>

00:38:27.074 --> 00:38:30.043 align:middle line:-1
<c.magenta>它展示的是在我们的环境中放置对象</c>

00:38:30.377 --> 00:38:33.814 align:middle line:-1
<c.magenta>为此它使用了场景理解</c>

00:38:33.881 --> 00:38:36.383 align:middle line:-1
<c.magenta>那么让我们打开它</c>

00:38:37.951 --> 00:38:41.221 align:middle line:-1
<c.magenta>如果我移动它 你在我前方看到的</c>

00:38:41.722 --> 00:38:44.625 align:middle line:-1
<c.magenta>是我们的焦距方框</c>

00:38:44.992 --> 00:38:49.263 align:middle line:-1
<c.magenta>这是通过在我们的屏幕中央做碰撞测试</c>

00:38:50.030 --> 00:38:53.200 align:middle line:-1
<c.magenta>并寻找在其交叉点上放置对象实现的</c>

00:38:53.734 --> 00:38:56.136 align:middle line:-1
<c.magenta>那么如果我们沿着桌子移动它</c>

00:38:56.203 --> 00:38:58.805 align:middle line:-1
<c.magenta>你可以看到它基本上是沿着桌子滑动</c>

00:39:00.340 --> 00:39:03.544 align:middle line:-1
<c.magenta>它还使用了平行平面探测</c>

00:39:03.610 --> 00:39:06.380 align:middle line:-2
<c.magenta>我们可以将它可视化</c>
<c.magenta>来看看发生了什么</c>

00:39:06.680 --> 00:39:08.916 align:middle line:-1
<c.magenta>让我们打开我们的调试菜单</c>

00:39:09.550 --> 00:39:12.853 align:middle line:-2
<c.magenta>并激活这里的第二个选项</c>
<c.magenta>即调试视觉展现</c>

00:39:13.720 --> 00:39:14.555 align:middle line:-1
<c.magenta>让我们关闭它</c>

00:39:15.389 --> 00:39:17.925 align:middle line:-1
<c.magenta>你可以从这里看到它所检测到的平面</c>

00:39:20.127 --> 00:39:22.963 align:middle line:-2
<c.magenta>为了让你更好地理解它</c>
<c.magenta>让我们重新启动它</c>

00:39:26.133 --> 00:39:27.801 align:middle line:-1
<c.magenta>看看它是如何发现新平面的</c>

00:39:27.868 --> 00:39:31.271 align:middle line:-2
<c.magenta>那么如果我移动它</c>
<c.magenta>你会看到它探测到了一个新平面</c>

00:39:32.105 --> 00:39:34.308 align:middle line:-2
<c.magenta>让我们迅速把它指向</c>
<c.magenta>这张桌子的另一个部分</c>

00:39:34.374 --> 00:39:36.243 align:middle line:-1
<c.magenta>它找到了另一个平面</c>

00:39:36.677 --> 00:39:40.214 align:middle line:-1
<c.magenta>如果我沿着这张桌子移动</c>

00:39:40.714 --> 00:39:42.783 align:middle line:-1
<c.magenta>它最终会把这两个平面合并到一起</c>

00:39:42.850 --> 00:39:45.652 align:middle line:-1
<c.magenta>并且算出只有一个平面</c>

00:39:54.361 --> 00:39:56.830 align:middle line:-2
<c.magenta>那么接下来</c>
<c.magenta>让我们放置一些实际的对象</c>

00:39:59.533 --> 00:40:02.636 align:middle line:-1
<c.magenta>我女儿让我给这场演讲带一些花儿来</c>

00:39:59.533 --> 00:40:02.636 align:middle line:-1
<c.magenta>我女儿让我给这场演讲带一些花儿来</c>

00:40:02.703 --> 00:40:04.538 align:middle line:-1
<c.magenta>而我不想让她失望</c>

00:40:05.038 --> 00:40:09.943 align:middle line:-2
<c.magenta>那么让我们做得更浪漫一点儿吧</c>
<c.magenta>放一个漂亮的花瓶</c>

00:40:10.978 --> 00:40:15.983 align:middle line:-2
<c.magenta>在那种情况下 我们再一次把它</c>
<c.magenta>与我们的屏幕中心进行碰撞测试</c>

00:40:16.049 --> 00:40:18.752 align:middle line:-1
<c.magenta>并找到交叉点来放置对象</c>

00:40:21.588 --> 00:40:25.259 align:middle line:-1
<c.magenta>这里有一点很重要 就是这个花瓶</c>

00:40:25.325 --> 00:40:28.829 align:middle line:-2
<c.magenta>会以现实世界的比例显示</c>
<c.magenta>有两个东西造成了这种可能性</c>

00:40:29.429 --> 00:40:35.335 align:middle line:-2
<c.magenta>其中一个是WorldTracking</c>
<c.magenta>给我们提供比例姿态</c>

00:40:36.036 --> 00:40:37.337 align:middle line:-1
<c.magenta>第二个是</c>

00:40:37.404 --> 00:40:41.909 align:middle line:-2
<c.magenta>3D模型其实是以现实世界的坐标</c>
<c.magenta>来做的3D模型</c>

00:40:41.975 --> 00:40:44.444 align:middle line:-2
<c.magenta>那么这真的很重要</c>
<c.magenta>如果你正在为增强现实创建内容</c>

00:40:44.511 --> 00:40:47.714 align:middle line:-1
<c.magenta>你要考虑</c>

00:40:47.781 --> 00:40:53.220 align:middle line:-2
<c.magenta>这个花瓶看起来不应该</c>
<c.magenta>跟楼一样高或也不能太小</c>

00:40:55.022 --> 00:40:59.226 align:middle line:-2
<c.magenta>那么让我们继续放一个</c>
<c.magenta>交互性更强的对象</c>

00:40:59.660 --> 00:41:01.361 align:middle line:-1
<c.magenta>就是我的变色龙朋友</c>

00:40:59.660 --> 00:41:01.361 align:middle line:-1
<c.magenta>就是我的变色龙朋友</c>

00:41:04.364 --> 00:41:07.367 align:middle line:-1
<c.magenta>有一点很好…谢谢</c>

00:41:07.801 --> 00:41:11.705 align:middle line:-2
<c.magenta>有一点很好</c>
<c.magenta>就是你总会了解用户的位置</c>

00:41:11.772 --> 00:41:15.375 align:middle line:-1
<c.magenta>当你运行WorldTracking时</c>

00:41:15.676 --> 00:41:20.747 align:middle line:-2
<c.magenta>因此你可以让虚拟内容</c>
<c.magenta>与用户在现实世界中进行交互</c>

00:41:29.590 --> 00:41:30.924 align:middle line:-1
<c.magenta>所以如果我移动到这儿</c>

00:41:32.759 --> 00:41:37.231 align:middle line:-2
<c.magenta>它最终会转向我这边</c>
<c.magenta>如果它不害怕的话 是的 就这样</c>

00:41:44.037 --> 00:41:47.307 align:middle line:-2
<c.magenta>如果我离得再近点儿 他甚至可能会</c>
<c.magenta>以不同的方式与我进行交互</c>

00:41:47.608 --> 00:41:50.611 align:middle line:-1
<c.magenta>让我么来看看 它有点儿…哦！会这样</c>

00:41:53.847 --> 00:41:56.984 align:middle line:-2
<c.magenta>变色龙还能做一件事</c>
<c.magenta>就是改变它们的皮肤颜色</c>

00:41:57.150 --> 00:42:01.788 align:middle line:-1
<c.magenta>如果我轻触他 他就会调节颜色</c>

00:41:57.150 --> 00:42:01.788 align:middle line:-1
<c.magenta>如果我轻触他 他就会调节颜色</c>

00:42:03.891 --> 00:42:06.193 align:middle line:-1
<c.magenta>那么我们把它变成绿色吧</c>

00:42:07.961 --> 00:42:12.833 align:middle line:-2
<c.magenta>我们在这里有一个很棒的功能</c>
<c.magenta>就是我可以沿着桌子移动他</c>

00:42:13.700 --> 00:42:18.906 align:middle line:-2
<c.magenta>并且他会使自己适应桌子的背景颜色</c>
<c.magenta>以便很好地隐藏它自己</c>

00:42:28.982 --> 00:42:31.451 align:middle line:-1
<c.magenta>那么这就是我们的示例应用</c>

00:42:31.518 --> 00:42:33.687 align:middle line:-1
<c.magenta>你可以从网站上下载</c>

00:42:34.221 --> 00:42:39.993 align:middle line:-1
<c.magenta>并加入你自己的内容然后试试效果</c>

00:42:40.327 --> 00:42:44.298 align:middle line:-2
<c.magenta>那么接下来</c>
<c.magenta>我们要看看用ARKit进行渲染</c>

00:42:47.734 --> 00:42:50.571 align:middle line:-1
<c.magenta>渲染把追踪和场景理解</c>

00:42:50.637 --> 00:42:52.105 align:middle line:-1
<c.magenta>与你的内容结合在一起</c>

00:42:52.940 --> 00:42:54.908 align:middle line:-1
<c.magenta>为了用ARKit进行渲染</c>

00:42:54.975 --> 00:42:58.712 align:middle line:-2
<c.magenta>你需要处理我们在ARFrame中</c>
<c.magenta>给你提供的全部信息</c>

00:43:00.113 --> 00:43:02.783 align:middle line:-1
<c.magenta>如果你们用的是SceneKit和SpriteKit</c>

00:43:02.850 --> 00:43:05.285 align:middle line:-1
<c.magenta>我们还有已经创建好的自定义视图</c>

00:43:05.352 --> 00:43:08.021 align:middle line:-1
<c.magenta>可以为你渲染ARFrame</c>

00:43:09.323 --> 00:43:13.260 align:middle line:-2
<c.magenta>如果你用的是metal</c>
<c.magenta>并且希望创建你自己的渲染引擎</c>

00:43:13.327 --> 00:43:16.897 align:middle line:-1
<c.magenta>或把ARKit整合到你现有的渲染引擎中</c>

00:43:16.964 --> 00:43:20.834 align:middle line:-2
<c.magenta>我们提供一个模板</c>
<c.magenta>可以告诉你如何实现</c>

00:43:20.901 --> 00:43:23.036 align:middle line:-1
<c.magenta>并提供一个很好的起点</c>

00:43:24.004 --> 00:43:27.241 align:middle line:0
<c.magenta>让我们分别来看一下 从SceneKit开始</c>

00:43:28.609 --> 00:43:33.480 align:middle line:0
<c.magenta>对于SceneKit 我们提供一个ARSCNView</c>
<c.magenta>是SCNView的子类</c>

00:43:34.381 --> 00:43:38.151 align:middle line:0
<c.magenta>它包含ARSession 用于更新其渲染</c>

00:43:39.052 --> 00:43:41.855 align:middle line:0
<c.magenta>所以这个包含在后台绘制相机图像</c>

00:43:42.623 --> 00:43:45.392 align:middle line:0
<c.magenta>考虑设备的旋转</c>

00:43:45.459 --> 00:43:47.294 align:middle line:0
<c.magenta>以及任何的[不清楚]变更</c>

00:43:49.263 --> 00:43:53.467 align:middle line:0
<c.magenta>接下来它根据我们在ARCamera中</c>

00:43:53.534 --> 00:43:55.736 align:middle line:0
<c.magenta>所提供的追踪转换更新SCNCamera</c>

00:43:56.670 --> 00:44:01.074 align:middle line:0
<c.magenta>你的场景保持交互</c>
<c.magenta>并且ARKit会控制SCNCamera</c>

00:43:56.670 --> 00:44:01.074 align:middle line:0
<c.magenta>你的场景保持交互</c>
<c.magenta>并且ARKit会控制SCNCamera</c>

00:44:01.141 --> 00:44:02.643 align:middle line:0
<c.magenta>通过在场景中移动它</c>

00:44:02.709 --> 00:44:05.712 align:middle line:-1
<c.magenta>按照你在现实世界移动你设备的方式</c>

00:44:07.281 --> 00:44:08.815 align:middle line:0
<c.magenta>如果你使用光估计</c>

00:44:08.882 --> 00:44:13.620 align:middle line:0
<c.magenta>我们会自动在你的场景中</c>
<c.magenta>放置一个SCN光探针</c>

00:44:13.687 --> 00:44:18.892 align:middle line:0
<c.magenta>那么如果你使用启用了物理光的对象</c>

00:44:18.959 --> 00:44:21.895 align:middle line:0
<c.magenta>你已经可以利用或自动利用</c>

00:44:21.962 --> 00:44:23.263 align:middle line:0
<c.magenta>光估计了</c>

00:44:25.866 --> 00:44:32.406 align:middle line:0
<c.magenta>ARCNView要做的另一件事就是</c>
<c.magenta>把SCNNotes映射到ARAnchors</c>

00:44:32.472 --> 00:44:36.310 align:middle line:0
<c.magenta>所以你其实不需要</c>
<c.magenta>直接与ARAnchors交界</c>

00:44:36.376 --> 00:44:38.679 align:middle line:0
<c.magenta>但却可以继续使用SCNNotes</c>

00:44:39.613 --> 00:44:42.916 align:middle line:0
<c.magenta>意思是无论何时</c>
<c.magenta>向会话中添加新ARAnchor时</c>

00:44:42.983 --> 00:44:45.652 align:middle line:0
<c.magenta>ARSCNView将为你创建一个节点</c>

00:44:45.953 --> 00:44:48.755 align:middle line:-1
<c.magenta>我们每次更新ARAnchor时</c>

00:44:48.822 --> 00:44:52.659 align:middle line:-2
<c.magenta>比如它的转换</c>
<c.magenta>我们会自动更新节点转换</c>

00:44:54.895 --> 00:44:58.165 align:middle line:-1
<c.magenta>并且这是通过ARSCNView委托处理的</c>

00:45:00.400 --> 00:45:04.037 align:middle line:-1
<c.magenta>所以每次我们向会话中添加新锚点</c>

00:45:05.272 --> 00:45:08.709 align:middle line:-1
<c.magenta>ARSCNView将为你创建一个新SCNNode</c>

00:45:09.209 --> 00:45:14.114 align:middle line:-2
<c.magenta>如果你想提供你自己的节点</c>
<c.magenta>你可以实施渲染器nodeFor锚点</c>

00:45:14.181 --> 00:45:16.283 align:middle line:-1
<c.magenta>并返回给你的自定义节点</c>

00:45:16.783 --> 00:45:21.889 align:middle line:-1
<c.magenta>之后SCNNode将被添加到场景图中</c>

00:45:21.955 --> 00:45:26.727 align:middle line:0
<c.magenta>并且你会收到锚点的另一个</c>
<c.magenta>委托调用渲染器didAdd节点</c>

00:45:28.328 --> 00:45:32.199 align:middle line:0
<c.magenta>无论何时当更新节点时也同样适用</c>

00:45:32.266 --> 00:45:33.367 align:middle line:-1
<c.magenta>那么在那种情况下</c>

00:45:36.270 --> 00:45:41.041 align:middle line:-2
<c.magenta>DSCNNodes转换将会自动</c>
<c.magenta>被更新为ARAnchors转换</c>

00:45:41.108 --> 00:45:44.678 align:middle line:-1
<c.magenta>并且你将收到两个回调</c>

00:45:44.745 --> 00:45:47.648 align:middle line:-1
<c.magenta>在更新其转换之前收到一个</c>

00:45:47.714 --> 00:45:50.317 align:middle line:0
<c.magenta>在更新转换之后收到一个</c>

00:45:52.586 --> 00:45:55.656 align:middle line:-1
<c.magenta>无论何时ARAnchor被从会话中移除时</c>

00:45:56.657 --> 00:45:59.092 align:middle line:-1
<c.magenta>我们都会自动移除相应的SCNNode</c>

00:45:59.159 --> 00:46:02.429 align:middle line:-2
<c.magenta>从场景图中</c>
<c.magenta>并给你提供锚点回调渲染器</c>

00:45:59.159 --> 00:46:02.429 align:middle line:-2
<c.magenta>从场景图中</c>
<c.magenta>并给你提供锚点回调渲染器</c>

00:46:02.496 --> 00:46:04.164 align:middle line:-1
<c.magenta>didRemove节点</c>

00:46:06.166 --> 00:46:10.437 align:middle line:-2
<c.magenta>那么这是SceneKit</c>
<c.magenta>接下来让我们看看SpriteKit</c>

00:46:13.040 --> 00:46:17.544 align:middle line:-2
<c.magenta>对于SpriteKit 我们提供一个ARSKview</c>
<c.magenta>是SKView的子类</c>

00:46:18.378 --> 00:46:23.016 align:middle line:-1
<c.magenta>它包含ARSession 用于更新其渲染</c>

00:46:23.083 --> 00:46:25.819 align:middle line:-1
<c.magenta>这包含在后台绘制相机图像</c>

00:46:26.854 --> 00:46:30.324 align:middle line:-2
<c.magenta>在这种情况下</c>
<c.magenta>把SKNodes映射到ARAnchors</c>

00:46:30.624 --> 00:46:34.027 align:middle line:-2
<c.magenta>所以它提供一套与SceneKit</c>
<c.magenta>非常类似的委托方法</c>

00:46:34.094 --> 00:46:35.095 align:middle line:-1
<c.magenta>它可以使用</c>

00:46:36.063 --> 00:46:39.633 align:middle line:-2
<c.magenta>其中一个主要的不同点是</c>
<c.magenta>SpriteKit是一个2D渲染引擎</c>

00:46:39.700 --> 00:46:43.937 align:middle line:-1
<c.magenta>意思是我们不能更新移动中的相机</c>

00:46:44.271 --> 00:46:49.843 align:middle line:-2
<c.magenta>那么ARKit的作用是</c>
<c.magenta>把我们ARAnchor的位置投影到</c>

00:46:49.910 --> 00:46:52.679 align:middle line:-1
<c.magenta>SpriteKit视图中</c>

00:46:53.046 --> 00:46:55.682 align:middle line:-2
<c.magenta>然后将Sprite看作</c>
<c.magenta>这些位置上的广告牌进行渲染</c>

00:46:55.749 --> 00:46:58.652 align:middle line:-1
<c.magenta>在所投影的位置</c>

00:46:58.719 --> 00:47:01.922 align:middle line:-2
<c.magenta>这意味着Sprite</c>
<c.magenta>将总是面对着相机</c>

00:46:58.719 --> 00:47:01.922 align:middle line:-2
<c.magenta>这意味着Sprite</c>
<c.magenta>将总是面对着相机</c>

00:47:04.024 --> 00:47:08.028 align:middle line:-2
<c.magenta>如果你想了解更多信息</c>
<c.magenta>有一场来自SpriteKit团队的演讲</c>

00:47:08.529 --> 00:47:10.831 align:middle line:-1
<c.magenta>“在SpriteKit中超越2D”</c>

00:47:10.898 --> 00:47:14.468 align:middle line:-1
<c.magenta>主要讲如何整合ARKit和SpriteKit</c>

00:47:17.638 --> 00:47:20.974 align:middle line:-1
<c.magenta>接下来让我们看看ARKit自定义渲染</c>

00:47:21.041 --> 00:47:21.942 align:middle line:-1
<c.magenta>使用Metal</c>

00:47:23.443 --> 00:47:27.948 align:middle line:-2
<c.magenta>要通过ARKit进行渲染</c>
<c.magenta>你需要做四件事</c>

00:47:28.582 --> 00:47:31.084 align:middle line:-1
<c.magenta>第一件是在后台绘制相机图像</c>

00:47:32.352 --> 00:47:36.256 align:middle line:-2
<c.magenta>你通常会创建一个纹理</c>
<c.magenta>然后在后台进行绘制</c>

00:47:37.457 --> 00:47:41.728 align:middle line:-2
<c.magenta>接下来是根据我们的ARCamera</c>
<c.magenta>更新虚拟相机</c>

00:47:42.296 --> 00:47:46.466 align:middle line:-1
<c.magenta>这包括设置视图矩阵以及投影矩阵</c>

00:47:48.602 --> 00:47:52.639 align:middle line:-1
<c.magenta>第三件是更新光照情况或</c>

00:47:52.706 --> 00:47:55.075 align:middle line:-1
<c.magenta>你场景中的光照 按照我们的光估计</c>

00:47:55.976 --> 00:48:01.381 align:middle line:-1
<c.magenta>最后如果你按照场景理解放置了几何体</c>

00:47:55.976 --> 00:48:01.381 align:middle line:-1
<c.magenta>最后如果你按照场景理解放置了几何体</c>

00:48:01.448 --> 00:48:07.020 align:middle line:-2
<c.magenta>那么你要使用ARAnchors</c>
<c.magenta>来正确地设置转换</c>

00:48:08.121 --> 00:48:10.858 align:middle line:-2
<c.magenta>全部这些信息都包含在</c>
<c.magenta>ARFrame中</c>

00:48:11.158 --> 00:48:13.727 align:middle line:-2
<c.magenta>你有两种方式来获取</c>
<c.magenta>这个ARFrame</c>

00:48:15.362 --> 00:48:19.032 align:middle line:-2
<c.magenta>一种是在ARSession上</c>
<c.magenta>查询当前帧属性</c>

00:48:20.000 --> 00:48:22.369 align:middle line:-1
<c.magenta>那么如果你有自己的渲染循环</c>

00:48:22.436 --> 00:48:26.607 align:middle line:-2
<c.magenta>你要使用或你可以使用</c>
<c.magenta>这种方式来获取当前帧</c>

00:48:27.307 --> 00:48:32.012 align:middle line:-2
<c.magenta>然后你还应该在ARFrame上</c>
<c.magenta>利用时间戳属性</c>

00:48:32.079 --> 00:48:35.148 align:middle line:-1
<c.magenta>以避免多次渲染同一帧</c>

00:48:36.650 --> 00:48:39.486 align:middle line:0
<c.magenta>另一种方式是使用我们的会话委托</c>

00:48:39.953 --> 00:48:42.589 align:middle line:0
<c.magenta>它会给你提供会话didUpdate帧</c>

00:48:42.656 --> 00:48:44.791 align:middle line:0
<c.magenta>每当计算新帧时</c>

00:48:46.026 --> 00:48:50.230 align:middle line:0
<c.magenta>在那种情况下</c>
<c.magenta>你只需要利用它来更新你的渲染</c>

00:48:50.998 --> 00:48:53.467 align:middle line:0
<c.magenta>默认情况是</c>
<c.magenta>这会在主[不清楚]中被调用</c>

00:48:53.534 --> 00:48:55.502 align:middle line:0
<c.magenta>但你还可以提供你自己的调度队列</c>

00:48:55.569 --> 00:48:59.940 align:middle line:0
<c.magenta>我们将用于调用这个方法</c>

00:49:00.741 --> 00:49:05.045 align:middle line:0
<c.magenta>那么让我们看一下更新渲染包含什么</c>

00:49:07.281 --> 00:49:10.284 align:middle line:-1
<c.magenta>那么第一件事就是在后台绘制相机图像</c>

00:49:10.551 --> 00:49:14.054 align:middle line:-2
<c.magenta>你可以在ARFrame上</c>
<c.magenta>获取所捕捉的图像属性</c>

00:49:14.121 --> 00:49:15.689 align:middle line:-1
<c.magenta>即CV像素缓冲器</c>

00:49:16.790 --> 00:49:20.360 align:middle line:-2
<c.magenta>你可以根据这个像素缓冲器</c>
<c.magenta>生成一个金属纹理</c>

00:49:20.427 --> 00:49:23.096 align:middle line:-1
<c.magenta>然后在后台的quad中进行绘制</c>

00:49:24.464 --> 00:49:29.303 align:middle line:-2
<c.magenta>请注意这是一个像素缓冲器</c>
<c.magenta>是通过AV Foundation发布给我们的</c>

00:49:29.369 --> 00:49:34.141 align:middle line:-1
<c.magenta>所以你不应该长时间等待太多帧</c>

00:49:34.208 --> 00:49:36.443 align:middle line:-1
<c.magenta>否则你将停止接收更新</c>

00:49:38.745 --> 00:49:43.116 align:middle line:-2
<c.magenta>第二件事是根据我们的ARCamera</c>
<c.magenta>更新虚拟相机</c>

00:49:43.884 --> 00:49:46.053 align:middle line:-1
<c.magenta>为此我们必须决定视图矩阵</c>

00:49:46.119 --> 00:49:47.921 align:middle line:-1
<c.magenta>以及防护矩阵</c>

00:49:49.056 --> 00:49:52.826 align:middle line:-1
<c.magenta>视图矩阵是相机转换的对立面</c>

00:49:53.961 --> 00:49:56.230 align:middle line:-1
<c.magenta>为了生成投影矩阵</c>

00:49:56.296 --> 00:49:59.433 align:middle line:-2
<c.magenta>我们会在ARCamera上</c>
<c.magenta>向你提供便利方法</c>

00:49:59.499 --> 00:50:01.568 align:middle line:-1
<c.magenta>向你提供投影矩阵</c>

00:49:59.499 --> 00:50:01.568 align:middle line:-1
<c.magenta>向你提供投影矩阵</c>

00:50:03.837 --> 00:50:05.973 align:middle line:-1
<c.magenta>第三部是更新光照</c>

00:50:07.674 --> 00:50:10.344 align:middle line:-1
<c.magenta>为此只需要获取光估计属性</c>

00:50:10.410 --> 00:50:15.649 align:middle line:-2
<c.magenta>并使用其外界强度</c>
<c.magenta>以更新你的光照模型</c>

00:50:17.084 --> 00:50:21.221 align:middle line:0
<c.magenta>最后应该是迭代锚点</c>
<c.magenta>及其3D地理位置</c>

00:50:21.288 --> 00:50:23.957 align:middle line:0
<c.magenta>以更新几何体的转换</c>

00:50:24.191 --> 00:50:27.494 align:middle line:0
<c.magenta>那么你手动添加到会话中的任意锚点</c>

00:50:27.561 --> 00:50:29.663 align:middle line:0
<c.magenta>或已经探测出来的任意锚点</c>

00:50:29.730 --> 00:50:34.668 align:middle line:0
<c.magenta>或向平面探测中添加的任意锚点</c>
<c.magenta>都将成为这些帧锚点的一部分</c>

00:50:37.471 --> 00:50:42.476 align:middle line:-2
<c.magenta>然后需要注意一些事情</c>
<c.magenta>当根据相机图像进行渲染时</c>

00:50:42.976 --> 00:50:44.645 align:middle line:-1
<c.magenta>我们想看看这些</c>

00:50:45.479 --> 00:50:51.151 align:middle line:-2
<c.magenta>那么其中一件事是所捕捉的图像</c>
<c.magenta>被包含在ARFrame中</c>

00:50:51.218 --> 00:50:52.953 align:middle line:-1
<c.magenta>总是会在同一个方向中被提供</c>

00:50:53.787 --> 00:50:58.425 align:middle line:0
<c.magenta>然而 如果你旋转你的物理设备</c>
<c.magenta>它可能不会</c>

00:50:58.492 --> 00:51:00.594 align:middle line:0
<c.magenta>与你的用户界面方向对齐</c>

00:50:58.492 --> 00:51:00.594 align:middle line:0
<c.magenta>与你的用户界面方向对齐</c>

00:51:00.661 --> 00:51:04.598 align:middle line:0
<c.magenta>并且需要应用转换 以正确地进行渲染</c>

00:51:06.567 --> 00:51:09.870 align:middle line:0
<c.magenta>另一件事就是相机图像的纵横比可能不</c>

00:51:09.937 --> 00:51:12.372 align:middle line:0
<c.magenta>必要与你的设备对齐</c>

00:51:12.973 --> 00:51:15.242 align:middle line:0
<c.magenta>意思是我们要考虑到这个</c>

00:51:15.309 --> 00:51:19.646 align:middle line:0
<c.magenta>以在屏幕中合适地渲染相机图像</c>

00:51:21.081 --> 00:51:23.517 align:middle line:0
<c.magenta>要修复这个或为了让这个变得更简单</c>

00:51:23.584 --> 00:51:25.552 align:middle line:-1
<c.magenta>我们给你提供了辅助方法</c>

00:51:26.720 --> 00:51:31.959 align:middle line:-2
<c.magenta>那么在ARFrame上有一个方法</c>
<c.magenta>是显示转换</c>

00:51:32.659 --> 00:51:36.463 align:middle line:-1
<c.magenta>显示转换会将帧空间转换为视图空间</c>

00:51:36.730 --> 00:51:40.434 align:middle line:-2
<c.magenta>并且你只需要把它提供给</c>
<c.magenta>你的视见区尺寸</c>

00:51:40.501 --> 00:51:44.938 align:middle line:-2
<c.magenta>以及你的界面方向</c>
<c.magenta>然后你就会获得一个相应的转换</c>

00:51:45.472 --> 00:51:48.375 align:middle line:-2
<c.magenta>在我们的Metal示例中</c>
<c.magenta>我们用了与这种转换相反的功能</c>

00:51:48.442 --> 00:51:51.845 align:middle line:-1
<c.magenta>来调节相机背景的纹理坐标</c>

00:51:53.514 --> 00:51:57.784 align:middle line:0
<c.magenta>与之相配的是投影矩阵方差</c>

00:51:57.851 --> 00:52:00.254 align:middle line:0
<c.magenta>考虑用户界面方向</c>

00:51:57.851 --> 00:52:00.254 align:middle line:0
<c.magenta>考虑用户界面方向</c>

00:52:00.320 --> 00:52:01.889 align:middle line:0
<c.magenta>以及视见区尺寸</c>

00:52:02.356 --> 00:52:05.058 align:middle line:-2
<c.magenta>那么你要传递这些</c>
<c.magenta>和剪裁平面极限范围</c>

00:52:05.125 --> 00:52:09.830 align:middle line:-2
<c.magenta>并且你可以使用这个投影矩阵</c>
<c.magenta>来正确地绘制我们的…</c>

00:52:10.264 --> 00:52:13.100 align:middle line:-1
<c.magenta>在相机图像顶部绘制你的虚拟内容</c>

00:52:15.869 --> 00:52:17.104 align:middle line:-1
<c.magenta>那么这就是ARKit</c>

00:52:18.939 --> 00:52:22.409 align:middle line:-2
<c.magenta>总结一下</c>
<c.magenta>ARKit是一个高层级API</c>

00:52:22.809 --> 00:52:26.380 align:middle line:-1
<c.magenta>用于在iOS上创建增强现实应用</c>

00:52:27.948 --> 00:52:29.883 align:middle line:-1
<c.magenta>我们提供了世界追踪</c>

00:52:29.950 --> 00:52:34.321 align:middle line:-2
<c.magenta>它会给你提供你设备</c>
<c.magenta>相对于起点的相对位置</c>

00:52:35.756 --> 00:52:38.292 align:middle line:-1
<c.magenta>为了把对象放置到现实世界中</c>

00:52:38.358 --> 00:52:40.260 align:middle line:-1
<c.magenta>我们提供了场景理解</c>

00:52:41.295 --> 00:52:43.697 align:middle line:-1
<c.magenta>场景理解给你提供了平面探测</c>

00:52:43.764 --> 00:52:46.533 align:middle line:-1
<c.magenta>以及碰撞测试现实世界的能力</c>

00:52:46.600 --> 00:52:48.302 align:middle line:-1
<c.magenta>以便找到3D坐标</c>

00:52:48.368 --> 00:52:49.603 align:middle line:-1
<c.magenta>并在那里放置对象</c>

00:52:50.671 --> 00:52:54.274 align:middle line:-1
<c.magenta>为了改善我们增强内容的现实性</c>

00:52:54.341 --> 00:52:57.744 align:middle line:-1
<c.magenta>我们还根据相机图像提供了光估计</c>

00:52:59.446 --> 00:53:02.850 align:middle line:-2
<c.magenta>我们提供了自定义整合到</c>
<c.magenta>SceneKit和SpriteKit中</c>

00:52:59.446 --> 00:53:02.850 align:middle line:-2
<c.magenta>我们提供了自定义整合到</c>
<c.magenta>SceneKit和SpriteKit中</c>

00:53:02.916 --> 00:53:06.186 align:middle line:-1
<c.magenta>以及一个Metal模板 如果你想</c>

00:53:06.687 --> 00:53:09.256 align:middle line:-2
<c.magenta>把ARKit整合到你自己的</c>
<c.magenta>渲染引擎中的话</c>

00:53:11.458 --> 00:53:14.728 align:middle line:-2
<c.magenta>你可以在我们的网站上找到</c>
<c.magenta>关于我们演讲的更多信息</c>

00:53:15.963 --> 00:53:19.933 align:middle line:-2
<c.magenta>并且有一些</c>
<c.magenta>来自SceneKit团队的相关演讲</c>

00:53:20.000 --> 00:53:25.272 align:middle line:-2
<c.magenta>他们也会讲如何</c>
<c.magenta>通过ARKit和SceneKit使用动态阴影</c>

00:53:25.706 --> 00:53:28.609 align:middle line:-2
<c.magenta>还有一场来自SpriteKit团队的演讲</c>
<c.magenta>他们主要</c>

00:53:28.675 --> 00:53:32.813 align:middle line:-1
<c.magenta>讲通过SpriteKit使用ARKit</c>

00:53:33.180 --> 00:53:36.517 align:middle line:-2
<c.magenta>那么我们非常激动地</c>
<c.magenta>把这些交到你们的手中</c>

00:53:36.583 --> 00:53:38.919 align:middle line:-1
<c.magenta>并且我们很期待看到</c>

00:53:38.986 --> 00:53:41.522 align:middle line:-1
<c.magenta>你们即将用它创建出来的第一批应用</c>

00:53:41.588 --> 00:53:43.624 align:middle line:-1
<c.magenta>请从我们的网站上下载示例代码</c>

00:53:43.690 --> 00:53:45.826 align:middle line:-1
<c.magenta>和示例应用</c>

00:53:45.893 --> 00:53:49.463 align:middle line:-1
<c.magenta>把你的内容加进去 看看效果如何</c>

00:53:49.530 --> 00:53:51.565 align:middle line:-1
<c.magenta>祝玩得高兴</c>

00:53:52.733 --> 00:53:53.567 align:middle line:-1
<c.magenta>谢谢</c>
