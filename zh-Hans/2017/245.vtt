WEBVTT

00:00:24.516 --> 00:00:27.846 A:middle
[掌声]

00:00:28.346 --> 00:00:30.126 A:middle
&gt;&gt; 大家好欢迎你们

00:00:30.126 --> 00:00:31.566 A:middle
来到 Building Apps with Dynamic

00:00:31.566 --> 00:00:31.696 A:middle
Type（使用动态字体构建 app）

00:00:32.426 --> 00:00:34.096 A:middle
我叫 Clare

00:00:34.096 --> 00:00:35.436 A:middle
和我的同事 Nandini

00:00:35.436 --> 00:00:36.576 A:middle
很高兴能够与你们分享

00:00:36.576 --> 00:00:37.976 A:middle
如何能让你的 app

00:00:38.026 --> 00:00:40.466 A:middle
在任何字体大小下都看起来很好

00:00:42.176 --> 00:00:43.876 A:middle
今天我们先谈谈

00:00:43.876 --> 00:00:45.706 A:middle
什么是 Dynamic Type 以及为什么

00:00:45.706 --> 00:00:46.446 A:middle
提出这个功能

00:00:46.446 --> 00:00:48.526 A:middle
接着我们将会看到

00:00:48.646 --> 00:00:50.046 A:middle
在 iOS 11 中 Dynamic Type 有什么新的进步

00:00:51.096 --> 00:00:52.136 A:middle
再之后我们会看到一些

00:00:52.136 --> 00:00:53.866 A:middle
参考指导和你们可用使用的 API

00:00:53.866 --> 00:00:55.856 A:middle
用到你自己的 app 中最后

00:00:55.856 --> 00:00:57.306 A:middle
我们会展示所有这些

00:00:57.386 --> 00:00:58.906 A:middle
在一个示例 app 中是怎么做的

00:01:01.416 --> 00:01:04.446 A:middle
首先什么是 Dynamic Type

00:01:06.676 --> 00:01:08.606 A:middle
Dynamic Type 是一个

00:01:08.606 --> 00:01:10.686 A:middle
允许用户在屏幕上自定义

00:01:10.686 --> 00:01:13.796 A:middle
字体大小的功能

00:01:13.936 --> 00:01:15.286 A:middle
比如有些用户可能

00:01:15.286 --> 00:01:17.626 A:middle
喜欢更小的字体

00:01:17.626 --> 00:01:18.796 A:middle
这样他们可以在屏幕上看到更多内容

00:01:22.166 --> 00:01:23.666 A:middle
有些人可能会喜欢更大的字体

00:01:23.666 --> 00:01:24.596 A:middle
因为它会

00:01:24.596 --> 00:01:26.086 A:middle
读起来更舒服

00:01:26.776 --> 00:01:28.926 A:middle
但是 Dynamic Type 不仅仅限于

00:01:29.016 --> 00:01:30.396 A:middle
用户的偏好

00:01:33.236 --> 00:01:34.946 A:middle
很多用户可能感受过

00:01:34.946 --> 00:01:36.846 A:middle
眼睛干涩当他们在

00:01:36.846 --> 00:01:37.876 A:middle
默认字号下阅读很长时间之后

00:01:42.446 --> 00:01:43.716 A:middle
有些人可能只是

00:01:43.716 --> 00:01:45.756 A:middle
由于年纪增长而视力下降

00:01:49.076 --> 00:01:51.026 A:middle
而有的人可能是

00:01:51.026 --> 00:01:52.396 A:middle
视力情况很差导致

00:01:52.396 --> 00:01:53.776 A:middle
他们几乎无法阅读

00:01:54.276 --> 00:01:55.256 A:middle
默认字号的文字

00:01:56.456 --> 00:01:58.166 A:middle
对于这些用户 Dynamic Type

00:01:58.166 --> 00:01:59.856 A:middle
就不仅仅是一种偏好

00:01:59.856 --> 00:02:02.256 A:middle
而是一种实际需求通过

00:01:59.856 --> 00:02:02.256 A:middle
而是一种实际需求通过

00:02:02.256 --> 00:02:03.936 A:middle
让你的 app 支持 Dynamic Type

00:02:03.936 --> 00:02:05.646 A:middle
你可以允许这些用户使用

00:02:05.646 --> 00:02:06.436 A:middle
你的 app 并且获得很好的

00:02:06.436 --> 00:02:06.976 A:middle
用户体验

00:02:12.046 --> 00:02:13.416 A:middle
Dynamic Type 的设置

00:02:13.466 --> 00:02:15.106 A:middle
在“设置”下的

00:02:15.106 --> 00:02:15.996 A:middle
“显示和亮度”中

00:02:16.736 --> 00:02:17.896 A:middle
它最开始有

00:02:17.896 --> 00:02:18.976 A:middle
其中不同的字体大小你可以

00:02:18.976 --> 00:02:20.616 A:middle
从中选择默认字体

00:02:20.616 --> 00:02:21.236 A:middle
在中间

00:02:24.116 --> 00:02:25.306 A:middle
你可以到你的

00:02:25.306 --> 00:02:26.986 A:middle
“辅助功能”设置中

00:02:26.986 --> 00:02:29.816 A:middle
使用五个更大字体

00:02:31.066 --> 00:02:32.596 A:middle
这些字体是为

00:02:32.756 --> 00:02:34.556 A:middle
视力不好的用户设计的

00:02:35.196 --> 00:02:37.306 A:middle
这些字体从

00:02:37.306 --> 00:02:40.796 A:middle
比默认稍微大点到特别大都有

00:02:42.636 --> 00:02:43.746 A:middle
现在看到这个你可能会

00:02:43.746 --> 00:02:45.686 A:middle
想你到底是不是

00:02:45.686 --> 00:02:47.236 A:middle
需要字体变的这么大

00:02:47.236 --> 00:02:48.906 A:middle
我们来看一个例子

00:02:48.906 --> 00:02:49.906 A:middle
看看它为什么是有用的

00:02:54.316 --> 00:02:56.376 A:middle
这是一个手机 app

00:02:56.376 --> 00:02:58.186 A:middle
左边我们是把它

00:02:58.186 --> 00:03:00.076 A:middle
放大成最大字号不包括

00:02:58.186 --> 00:03:00.076 A:middle
放大成最大字号不包括

00:03:00.076 --> 00:03:01.166 A:middle
“辅助功能”设置里的大小

00:03:01.876 --> 00:03:03.726 A:middle
在右边的我们把它设置成了

00:03:03.726 --> 00:03:05.406 A:middle
更大的字体

00:03:06.186 --> 00:03:06.946 A:middle
现在我们从

00:03:06.946 --> 00:03:07.806 A:middle
视力差的人的视角来看

00:03:12.046 --> 00:03:13.216 A:middle
视力差的人看事物

00:03:13.216 --> 00:03:14.286 A:middle
比我们看事物的距离要近一些

00:03:15.466 --> 00:03:16.426 A:middle
请看到左边的版本

00:03:16.426 --> 00:03:18.646 A:middle
已经完全无法阅读了

00:03:19.476 --> 00:03:20.786 A:middle
但是右边的版本

00:03:20.786 --> 00:03:22.126 A:middle
还是可以看清楚的尽管

00:03:22.126 --> 00:03:22.716 A:middle
是字迹模糊的.

00:03:24.066 --> 00:03:25.706 A:middle
所以字体大小可以很大程度的

00:03:25.706 --> 00:03:27.426 A:middle
对你的 app 的可读性造成影响

00:03:27.426 --> 00:03:28.726 A:middle
这就是为什么

00:03:28.726 --> 00:03:29.626 A:middle
你的 app 需要

00:03:29.626 --> 00:03:31.086 A:middle
支持所有的

00:03:31.086 --> 00:03:31.976 A:middle
Dynamic Type 字体

00:03:38.216 --> 00:03:39.546 A:middle
这就是 Dynamic Type

00:03:39.546 --> 00:03:40.766 A:middle
现在我们来看一看

00:03:40.766 --> 00:03:42.326 A:middle
在 iOS 11 中 Dynamic Type 有什么新的进步

00:03:43.286 --> 00:03:44.596 A:middle
最大的改变是

00:03:44.596 --> 00:03:46.336 A:middle
Dynamic Type 已经被

00:03:46.336 --> 00:03:48.266 A:middle
广泛的提高了并应用于

00:03:48.266 --> 00:03:50.106 A:middle
所有的 iOS 设备

00:03:51.016 --> 00:03:52.566 A:middle
当我们开始开发 iOS

00:03:52.566 --> 00:03:56.776 A:middle
11时我们有三个目标

00:03:56.876 --> 00:03:58.716 A:middle
第一字体必须足够大

00:03:58.716 --> 00:04:00.846 A:middle
让用户能够阅读

00:03:58.716 --> 00:04:00.846 A:middle
让用户能够阅读

00:04:00.846 --> 00:04:02.096 A:middle
换句话说文字必须和

00:04:02.096 --> 00:04:03.526 A:middle
Dynamic Type 大小一致

00:04:03.946 --> 00:04:07.926 A:middle
第二文字必须可辨认度很高

00:04:08.846 --> 00:04:09.976 A:middle
它不可以有不必要的截断

00:04:09.976 --> 00:04:11.706 A:middle
也不可以

00:04:11.706 --> 00:04:12.976 A:middle
发生重叠或被剪切

00:04:15.276 --> 00:04:17.766 A:middle
第三我们希望得到一个 app 的 UI

00:04:17.766 --> 00:04:19.486 A:middle
在任何字体大小下都看起来美观

00:04:20.706 --> 00:04:23.416 A:middle
如果想了解更多关于

00:04:23.416 --> 00:04:25.436 A:middle
新一代 iOS11 的 Dynamic Type

00:04:25.436 --> 00:04:26.986 A:middle
背后的设计理念

00:04:27.046 --> 00:04:28.166 A:middle
请查看昨天的 Design for

00:04:28.166 --> 00:04:28.976 A:middle
Everyone 演讲

00:04:33.416 --> 00:04:34.906 A:middle
现在我们来看一些例子

00:04:34.906 --> 00:04:36.076 A:middle
看看我们改变了什么

00:04:36.526 --> 00:04:37.266 A:middle
这是设置 app

00:04:37.846 --> 00:04:38.856 A:middle
请注意它是如何

00:04:38.856 --> 00:04:40.326 A:middle
完美适应各种字体大小的

00:04:43.566 --> 00:04:45.106 A:middle
这是另一个例子“日历”

00:04:46.146 --> 00:04:47.546 A:middle
请看所有的文字是

00:04:47.546 --> 00:04:49.576 A:middle
随着 Dynamic Type 缩放的

00:04:49.576 --> 00:04:51.786 A:middle
有些文字比如事件时间

00:04:52.406 --> 00:04:53.386 A:middle
使用了不同的构图

00:04:53.386 --> 00:04:53.976 A:middle
来适应更大的字体

00:04:59.046 --> 00:05:00.356 A:middle
有些情况下

00:04:59.046 --> 00:05:00.356 A:middle
有些情况下

00:05:00.356 --> 00:05:01.626 A:middle
我们不需要与 Dynamic Type 一致

00:05:01.976 --> 00:05:04.346 A:middle
比如在选项卡栏中如果我们

00:05:04.346 --> 00:05:06.076 A:middle
把这里的字体放大

00:05:06.076 --> 00:05:07.386 A:middle
选项卡栏会占用

00:05:07.386 --> 00:05:08.596 A:middle
主要内容太多的空间

00:05:09.346 --> 00:05:12.226 A:middle
但是现在在 in iOS 11 中如果你

00:05:12.226 --> 00:05:13.646 A:middle
选择了

00:05:14.016 --> 00:05:16.106 A:middle
Dynamic Type 设置中五个大字体之一

00:05:16.446 --> 00:05:18.516 A:middle
你可以长按其中的

00:05:18.516 --> 00:05:19.496 A:middle
一个按钮

00:05:20.086 --> 00:05:21.476 A:middle
比如语音信箱选项

00:05:22.026 --> 00:05:24.146 A:middle
我们会有一个更大的

00:05:24.146 --> 00:05:24.826 A:middle
图标显示在屏幕中间

00:05:31.126 --> 00:05:32.276 A:middle
这是对 iOS11 中改变的内容的

00:05:32.276 --> 00:05:33.256 A:middle
一些举例

00:05:33.866 --> 00:05:34.866 A:middle
现在我们来看一些

00:05:34.866 --> 00:05:36.266 A:middle
API 的使用说明你们可以

00:05:36.266 --> 00:05:39.036 A:middle
用到自己的 app 中

00:05:39.216 --> 00:05:40.586 A:middle
我会从四个方面来谈

00:05:41.866 --> 00:05:43.336 A:middle
首先我们先来看如何

00:05:43.336 --> 00:05:44.656 A:middle
将你的字体大小与

00:05:44.656 --> 00:05:45.226 A:middle
Dynamic Type 缩放一致

00:05:46.596 --> 00:05:48.356 A:middle
第二我们来看你如何

00:05:48.356 --> 00:05:50.226 A:middle
把更大字体放入

00:05:50.226 --> 00:05:50.776 A:middle
你的 app 的界面中

00:05:52.436 --> 00:05:53.746 A:middle
第三我们会看一个

00:05:53.746 --> 00:05:55.456 A:middle
表示图的具体的常见的例子

00:05:57.296 --> 00:05:58.726 A:middle
最后我们将会看到

00:05:58.726 --> 00:06:00.676 A:middle
图像如何和

00:05:58.726 --> 00:06:00.676 A:middle
图像如何和

00:06:00.676 --> 00:06:00.976 A:middle
Dynamic Type 完美共处

00:06:06.386 --> 00:06:08.616 A:middle
那么首先我们先将字体

00:06:08.616 --> 00:06:10.166 A:middle
缩放到 Dynamic Type

00:06:10.916 --> 00:06:12.666 A:middle
最简单的方法就是

00:06:12.666 --> 00:06:14.256 A:middle
使用 iOS 内置的文本样式

00:06:16.316 --> 00:06:17.646 A:middle
这是一个我们全部的文本

00:06:17.646 --> 00:06:19.896 A:middle
样式的清单还有它们

00:06:19.896 --> 00:06:21.776 A:middle
在默认设置下的字体大小

00:06:22.746 --> 00:06:24.346 A:middle
如果你的用户选择了

00:06:24.346 --> 00:06:26.216 A:middle
另一个字体大小这些字体的

00:06:26.216 --> 00:06:26.856 A:middle
大小也会改变

00:06:31.196 --> 00:06:32.456 A:middle
对于已经

00:06:32.456 --> 00:06:33.796 A:middle
在你的 app 中使用了文本样式的人

00:06:33.796 --> 00:06:36.626 A:middle
首先谢谢你们

00:06:36.626 --> 00:06:38.126 A:middle
其次在 iOS 11 中有一个

00:06:38.126 --> 00:06:39.456 A:middle
重要的改变你们需要

00:06:39.456 --> 00:06:39.986 A:middle
加以注意

00:06:41.026 --> 00:06:43.476 A:middle
在 iOS 11 之前所有的文本

00:06:43.476 --> 00:06:45.166 A:middle
样式都适用七种

00:06:45.166 --> 00:06:46.246 A:middle
标准大小

00:06:46.866 --> 00:06:49.336 A:middle
然而只有正文内容的样式

00:06:49.636 --> 00:06:50.796 A:middle
会适用五种

00:06:50.926 --> 00:06:52.296 A:middle
辅助功能中的大小

00:06:52.836 --> 00:06:56.506 A:middle
在 iOS 11 中所有的文本样式

00:06:56.506 --> 00:06:58.506 A:middle
都适用所有的12中文字大小

00:06:59.036 --> 00:07:00.116 A:middle
因此如果你在使用我们的文本样式

00:06:59.036 --> 00:07:00.116 A:middle
因此如果你在使用我们的文本样式

00:07:00.186 --> 00:07:01.246 A:middle
你将可以免费获得

00:07:01.246 --> 00:07:01.966 A:middle
所有12种字体的支持

00:07:07.046 --> 00:07:09.066 A:middle
如果想在 Interface

00:07:09.116 --> 00:07:10.566 A:middle
Builder 里使用文本样式进入 Attribute

00:07:10.756 --> 00:07:13.756 A:middle
Inspector 然后在你的视图中选择更改字体

00:07:15.256 --> 00:07:16.236 A:middle
默认情况下这会是

00:07:16.236 --> 00:07:18.286 A:middle
系统中的17号字

00:07:18.666 --> 00:07:19.706 A:middle
意思是它不会根据

00:07:19.706 --> 00:07:20.806 A:middle
Dynamic Type 而更改

00:07:21.466 --> 00:07:22.946 A:middle
但你如果点击那个“T”按钮

00:07:23.186 --> 00:07:24.106 A:middle
你就可以选择一个文本样式

00:07:24.236 --> 00:07:25.436 A:middle
这些样式会进行缩放

00:07:30.056 --> 00:07:31.986 A:middle
另外在 iOS 11 中你可以

00:07:31.986 --> 00:07:33.656 A:middle
勾选 Automatically Adjust

00:07:33.656 --> 00:07:34.536 A:middle
Font 选项

00:07:35.186 --> 00:07:36.396 A:middle
这意味着如果用户

00:07:36.396 --> 00:07:38.226 A:middle
更改了他们的字体大小

00:07:38.226 --> 00:07:39.766 A:middle
而你的 app 正在运行时

00:07:39.766 --> 00:07:41.146 A:middle
你的界面会自动更新它的字体

00:07:41.146 --> 00:07:42.476 A:middle
让它变成新的字体大小

00:07:42.476 --> 00:07:43.456 A:middle
所以我们强烈建议你

00:07:43.456 --> 00:07:43.976 A:middle
在你的所有界面都勾选这个选项

00:07:49.376 --> 00:07:51.296 A:middle
在代码中使用文本样式也很方便

00:07:52.236 --> 00:07:52.756 A:middle
你可以使用

00:07:52.756 --> 00:07:54.696 A:middle
preferredFont(forTextStyle) API

00:07:55.356 --> 00:07:56.906 A:middle
为文本样式获取一个字体

00:07:56.906 --> 00:07:59.296 A:middle
然后你可以使用

00:07:59.296 --> 00:08:00.886 A:middle
adjustsFontForContentSize

00:07:59.296 --> 00:08:00.886 A:middle
adjustsFontForContentSize

00:08:00.926 --> 00:08:02.986 A:middle
Category 属性来确保

00:08:02.986 --> 00:08:03.986 A:middle
你的界面会更新字体

00:08:03.986 --> 00:08:04.956 A:middle
当文字大小发生改变时

00:08:11.126 --> 00:08:12.496 A:middle
但是如果你不能使用文本样式时怎么办？

00:08:13.756 --> 00:08:15.476 A:middle
也许你的设计

00:08:15.476 --> 00:08:16.616 A:middle
要求使用自定义字体

00:08:17.766 --> 00:08:19.676 A:middle
好消息是在 iOS 11 中

00:08:20.026 --> 00:08:21.796 A:middle
你可以很轻易的获得那些

00:08:21.796 --> 00:08:23.136 A:middle
跟 Dynamic Type 可以完美适应的字体

00:08:26.236 --> 00:08:27.676 A:middle
比如说你有一些代码

00:08:27.786 --> 00:08:29.026 A:middle
把字体属性赋值给了

00:08:29.026 --> 00:08:30.426 A:middle
一个标签用来自定义

00:08:30.426 --> 00:08:30.976 A:middle
你所选择的字体

00:08:34.285 --> 00:08:36.166 A:middle
在 iOS 11 中你可以使用

00:08:36.166 --> 00:08:39.106 A:middle
全新的 UIFontMetrics 类来缩放

00:08:39.106 --> 00:08:40.395 A:middle
那个字体使它可以

00:08:40.466 --> 00:08:42.316 A:middle
变大或变小取决于

00:08:42.316 --> 00:08:42.976 A:middle
用户的字体大小

00:08:43.515 --> 00:08:45.726 A:middle
[掌声]

00:08:46.226 --> 00:08:46.806 A:middle
谢谢

00:08:47.516 --> 00:08:50.046 A:middle
[掌声]

00:08:50.546 --> 00:08:51.766 A:middle
在这个例子中我们使用了

00:08:51.766 --> 00:08:53.346 A:middle
默认的字体规格

00:08:53.346 --> 00:08:54.826 A:middle
也就是说我们使用了

00:08:54.826 --> 00:08:56.346 A:middle
正文文字样式的字体规格

00:08:56.776 --> 00:08:58.626 A:middle
这就意味着正文文字

00:08:58.836 --> 00:09:00.596 A:middle
对于某个用户来说可能放大了百分之五十

00:08:58.836 --> 00:09:00.596 A:middle
对于某个用户来说可能放大了百分之五十

00:09:00.596 --> 00:09:02.436 A:middle
而你的字体同时

00:09:02.436 --> 00:09:03.916 A:middle
也会放大百分之五十

00:09:04.506 --> 00:09:07.256 A:middle
如果想效果更好你可以选择

00:09:07.256 --> 00:09:08.756 A:middle
一种特定的文字样式

00:09:08.756 --> 00:09:09.896 A:middle
让你的字体与之一致

00:09:10.616 --> 00:09:11.766 A:middle
那么举个例子如果你有一种

00:09:11.766 --> 00:09:13.286 A:middle
字体你用它作为

00:09:13.336 --> 00:09:14.906 A:middle
你的 app 的标题文字的样式你可能

00:09:14.906 --> 00:09:16.466 A:middle
会选择使用

00:09:16.466 --> 00:09:17.696 A:middle
我们缩放 title1 的方式来处理它

00:09:23.196 --> 00:09:25.176 A:middle
关于网页界面的最后一点说明

00:09:25.386 --> 00:09:26.906 A:middle
你们很多人可能都有网页界面

00:09:26.906 --> 00:09:27.896 A:middle
在你的 iOS app 中展示

00:09:29.096 --> 00:09:30.586 A:middle
你应该使它们也适应

00:09:30.586 --> 00:09:31.506 A:middle
Dynamic Type

00:09:32.156 --> 00:09:33.776 A:middle
要做到这一点你可以使用

00:09:33.776 --> 00:09:36.286 A:middle
-apple-system-body 字体

00:09:36.286 --> 00:09:37.786 A:middle
它会让你获得正文样式字体

00:09:37.866 --> 00:09:39.636 A:middle
能适应用户的

00:09:39.636 --> 00:09:41.056 A:middle
动态排版

00:09:42.156 --> 00:09:44.186 A:middle
请注意这只可以

00:09:44.186 --> 00:09:45.896 A:middle
在苹果设备上使用

00:09:45.896 --> 00:09:46.806 A:middle
如果你想在

00:09:46.856 --> 00:09:47.866 A:middle
别的平台上使用同样的网页

00:09:47.866 --> 00:09:49.716 A:middle
你要确保你已经

00:09:49.746 --> 00:09:51.566 A:middle
正确设置了备用字体

00:09:52.776 --> 00:09:55.076 A:middle
然后对于你的其他样式

00:09:55.076 --> 00:09:56.626 A:middle
你可以定义它们的字体大小

00:09:56.626 --> 00:09:57.716 A:middle
通过相对单元调整然后

00:09:57.746 --> 00:09:58.536 A:middle
这样它们就会相应地缩放了

00:10:04.516 --> 00:10:06.096 A:middle
这就是你怎样

00:10:06.096 --> 00:10:07.486 A:middle
为 Dynamic Type 缩放字体的方法

00:10:07.996 --> 00:10:09.246 A:middle
现在我们来看一看你如何才能

00:10:09.246 --> 00:10:10.476 A:middle
在你的 app 界面中容纳更大的字体

00:10:15.216 --> 00:10:16.316 A:middle
比如说我们现在有一些

00:10:16.646 --> 00:10:18.586 A:middle
默认大小的文字

00:10:18.586 --> 00:10:19.736 A:middle
你可以把这些白色的边框

00:10:19.736 --> 00:10:20.766 A:middle
想像成在屏幕上的可用区域

00:10:23.356 --> 00:10:25.086 A:middle
那么第一步我们首先缩放字体

00:10:29.166 --> 00:10:29.846 A:middle
我们遇到了一个问题

00:10:30.256 --> 00:10:31.286 A:middle
现在文字超出了屏幕范围

00:10:31.286 --> 00:10:33.406 A:middle
而你的用户将无法

00:10:33.406 --> 00:10:35.346 A:middle
看到白色边框外的任何内容

00:10:36.636 --> 00:10:38.556 A:middle
为了让文字不超出

00:10:38.556 --> 00:10:39.396 A:middle
屏幕我们可以增加一个

00:10:39.396 --> 00:10:39.976 A:middle
尾部约束条件

00:10:44.236 --> 00:10:45.916 A:middle
但现在我们还是遇到了问题

00:10:45.916 --> 00:10:46.886 A:middle
因为文字被截断了

00:10:47.676 --> 00:10:48.966 A:middle
结果是

00:10:48.966 --> 00:10:50.366 A:middle
你的用户将不能看到

00:10:50.366 --> 00:10:50.646 A:middle
所有的文字

00:10:52.296 --> 00:10:53.676 A:middle
要真正解决这个问题我们

00:10:55.146 --> 00:10:57.236 A:middle
把文字自动分行这样就可以

00:10:57.306 --> 00:10:58.696 A:middle
让文字要变多大就变多大

00:10:58.696 --> 00:10:59.506 A:middle
而且可以全部显示出来

00:11:05.126 --> 00:11:06.316 A:middle
要在 Interface

00:11:06.316 --> 00:11:07.606 A:middle
Builder 实现文字自动换行你可以使用

00:11:07.606 --> 00:11:09.416 A:middle
Attribute Inspector 然后

00:11:09.506 --> 00:11:10.816 A:middle
在你的标签中调整 Lines 属性

00:11:12.076 --> 00:11:13.306 A:middle
默认情况下它被设置为

00:11:13.306 --> 00:11:15.236 A:middle
一行但你如果把它设为 0

00:11:15.236 --> 00:11:16.716 A:middle
它就允许你的文字

00:11:16.716 --> 00:11:18.196 A:middle
自动换成内容

00:11:18.196 --> 00:11:19.436 A:middle
所需要的行数

00:11:22.116 --> 00:11:23.346 A:middle
你也可以用代码做

00:11:23.346 --> 00:11:24.286 A:middle
通过将 Lines 属性的

00:11:24.286 --> 00:11:24.946 A:middle
数目设为 0

00:11:31.266 --> 00:11:32.586 A:middle
好的我们来看另一个

00:11:32.586 --> 00:11:33.966 A:middle
经常发生的情况

00:11:34.576 --> 00:11:37.036 A:middle
当你在写你的 app 时

00:11:37.036 --> 00:11:37.886 A:middle
你会想到

00:11:37.886 --> 00:11:40.496 A:middle
默认字体大小

00:11:40.496 --> 00:11:42.126 A:middle
你可能很想把间距设为一个恒定值

00:11:43.326 --> 00:11:44.366 A:middle
所以你可能会得到

00:11:44.416 --> 00:11:46.606 A:middle
这样的两个标签它们的基线

00:11:46.606 --> 00:11:48.886 A:middle
之间的距离是恒定的 40

00:11:49.806 --> 00:11:52.526 A:middle
这在默认字体下看着不错

00:11:53.406 --> 00:11:55.646 A:middle
但是一旦你开始

00:11:55.646 --> 00:11:56.856 A:middle
适用 Dynamic Type

00:11:56.856 --> 00:11:58.116 A:middle
你就可能会遇到这样的问题

00:11:58.116 --> 00:11:59.156 A:middle
文字会发生重合

00:12:00.876 --> 00:12:03.766 A:middle
我们真正需要的是一种

00:12:03.766 --> 00:12:04.736 A:middle
动态的间距

00:12:04.736 --> 00:12:05.976 A:middle
可以应对各种字体

00:12:11.086 --> 00:12:13.376 A:middle
在 iOS 11 中你可以通过

00:12:13.636 --> 00:12:15.076 A:middle
新的 Auto Layout System

00:12:15.076 --> 00:12:15.976 A:middle
Spacing Constraints 来完成

00:12:17.066 --> 00:12:18.586 A:middle
你可以在两个基线之间

00:12:18.586 --> 00:12:20.566 A:middle
定义间距而 Auto

00:12:20.566 --> 00:12:21.876 A:middle
Layout 会自动找出

00:12:21.876 --> 00:12:23.616 A:middle
最适合的间距 out

00:12:24.026 --> 00:12:25.036 A:middle
依据你的用户所用的字体

00:12:26.976 --> 00:12:28.816 A:middle
现在如果你试试这个

00:12:28.816 --> 00:12:30.486 A:middle
你决定你想要一个稍微

00:12:30.486 --> 00:12:32.256 A:middle
大一点或者小一点的间距

00:12:32.426 --> 00:12:34.146 A:middle
你也可以得到只需要调整

00:12:34.146 --> 00:12:36.706 A:middle
Multiplier 属性然后它会

00:12:36.706 --> 00:12:37.686 A:middle
让你获得你所需要的

00:12:37.766 --> 00:12:39.046 A:middle
确切结果

00:12:40.876 --> 00:12:42.546 A:middle
你也可以

00:12:42.546 --> 00:12:44.356 A:middle
把 Auto Layout Constraints 用在

00:12:44.356 --> 00:12:45.626 A:middle
Interface Builder 中

00:12:45.626 --> 00:12:47.096 A:middle
关于此的更多信息请 information on that please

00:12:47.096 --> 00:12:48.226 A:middle
查看今天早上的 the Auto Layout

00:12:48.226 --> 00:12:49.066 A:middle
Techniques and Interface Builder

00:12:49.066 --> 00:12:49.976 A:middle
讨论

00:12:56.156 --> 00:12:58.316 A:middle
现在我知道

00:12:58.316 --> 00:12:59.966 A:middle
在你们当中有些人的

00:12:59.966 --> 00:13:00.826 A:middle
app 的界面是

00:12:59.966 --> 00:13:00.826 A:middle
app 的界面是

00:13:00.886 --> 00:13:02.546 A:middle
八九年前写的

00:13:02.546 --> 00:13:03.806 A:middle
没有使用 Auto Layout

00:13:05.536 --> 00:13:06.686 A:middle
不用担心我们帮你解决

00:13:07.846 --> 00:13:09.046 A:middle
比如说你有

00:13:09.046 --> 00:13:10.976 A:middle
一些界面的代码设置了一个

00:13:10.976 --> 00:13:11.696 A:middle
恒定值并添加到一个 y origin

00:13:16.346 --> 00:13:17.476 A:middle
使用我们之前看到的 UIFontMetrics

00:13:17.476 --> 00:13:19.556 A:middle
类我们可以

00:13:19.556 --> 00:13:21.556 A:middle
缩放这个40 点的值或

00:13:21.556 --> 00:13:24.616 A:middle
任何 CGFloat 的值这样

00:13:24.616 --> 00:13:25.886 A:middle
它就会变小或变大

00:13:25.976 --> 00:13:26.846 A:middle
取决于用户的字体大小

00:13:33.256 --> 00:13:34.516 A:middle
现在我们来看最后一个

00:13:34.666 --> 00:13:35.356 A:middle
常见情况

00:13:36.366 --> 00:13:38.356 A:middle
现在两个标签

00:13:38.356 --> 00:13:40.196 A:middle
并排着且都是

00:13:40.196 --> 00:13:40.696 A:middle
默认字体大小

00:13:41.476 --> 00:13:42.916 A:middle
你可以把那个

00:13:42.916 --> 00:13:44.406 A:middle
黄色边框想象成

00:13:44.406 --> 00:13:45.336 A:middle
屏幕上的可用区域

00:13:46.616 --> 00:13:48.226 A:middle
现在我们缩放字体大小

00:13:51.526 --> 00:13:52.746 A:middle
正如你所看到的那样

00:13:52.746 --> 00:13:53.756 A:middle
屏幕上没有足够的空间了

00:13:53.756 --> 00:13:56.906 A:middle
那么回到

00:13:56.906 --> 00:13:58.006 A:middle
我们之前看到的我们可以

00:13:58.076 --> 00:13:58.966 A:middle
试图让文字换行

00:14:04.046 --> 00:14:04.736 A:middle
我们会得到一个这样的情况

00:14:06.326 --> 00:14:07.756 A:middle
那么我想要暂停一下

00:14:07.756 --> 00:14:09.626 A:middle
然后回顾一下

00:14:09.626 --> 00:14:10.486 A:middle
我们在开始时提到的

00:14:10.486 --> 00:14:11.216 A:middle
三个目标

00:14:12.346 --> 00:14:13.846 A:middle
首先所有文字都必须足够大到

00:14:13.846 --> 00:14:14.926 A:middle
可以阅读

00:14:15.546 --> 00:14:16.316 A:middle
我们已经解决了这个问题

00:14:17.586 --> 00:14:19.846 A:middle
第二所有的文字必须可读性很高

00:14:20.926 --> 00:14:21.836 A:middle
这也达到了

00:14:22.256 --> 00:14:24.986 A:middle
没有丢失什么文字

00:14:25.116 --> 00:14:27.286 A:middle
第三 app 的界面必须

00:14:27.336 --> 00:14:29.236 A:middle
在任何字体大小下都看着美观

00:14:30.456 --> 00:14:31.556 A:middle
在这一点我们还没有

00:14:31.556 --> 00:14:32.506 A:middle
达到目标

00:14:32.506 --> 00:14:34.366 A:middle
正如你所看到的那样在右手边

00:14:34.396 --> 00:14:36.456 A:middle
字母 d 被和

00:14:36.456 --> 00:14:37.596 A:middle
单词的其他部分孤立开来

00:14:37.596 --> 00:14:38.626 A:middle
这样看起来不对

00:14:38.786 --> 00:14:42.476 A:middle
对于这种情况

00:14:42.476 --> 00:14:44.026 A:middle
我们建议对于较大的字体

00:14:44.066 --> 00:14:47.016 A:middle
可以更改你的界面

00:14:47.016 --> 00:14:49.056 A:middle
使用垂直叠加的方式

00:14:49.056 --> 00:14:50.396 A:middle
这样每个标签都可以变得

00:14:50.396 --> 00:14:51.676 A:middle
跟屏幕宽度一致

00:14:54.536 --> 00:14:56.306 A:middle
现在这个技术不仅仅可以

00:14:56.306 --> 00:14:57.936 A:middle
用在文字上也可以用在

00:14:57.936 --> 00:14:59.346 A:middle
任何可能占用文字空间的事物

00:15:00.656 --> 00:15:02.106 A:middle
比如说这是一个 Siri

00:15:02.106 --> 00:15:04.176 A:middle
Help 的屏幕你可以看到

00:15:04.246 --> 00:15:06.296 A:middle
在左边在默认的字体大小下

00:15:06.296 --> 00:15:08.326 A:middle
有一个标志

00:15:08.326 --> 00:15:10.346 A:middle
在水平方向占掉了一栏

00:15:11.966 --> 00:15:13.336 A:middle
这就是为什么在更大字体下

00:15:13.336 --> 00:15:14.936 A:middle
我们就把这个标志移动到

00:15:14.936 --> 00:15:16.606 A:middle
文字的上方这样就允许了

00:15:16.606 --> 00:15:17.706 A:middle
文字变得占满

00:15:17.706 --> 00:15:17.976 A:middle
整个屏幕宽度

00:15:23.056 --> 00:15:24.786 A:middle
要想设计一个这样的备用界面

00:15:24.786 --> 00:15:26.086 A:middle
取决于用户的字体大小

00:15:26.306 --> 00:15:27.316 A:middle
你需要知道怎样得到这个界面

00:15:28.506 --> 00:15:31.126 A:middle
你可以通过访问

00:15:31.226 --> 00:15:34.046 A:middle
preferredConstantSizeCategory

00:15:34.046 --> 00:15:36.166 A:middle
属性在你的界面的

00:15:36.166 --> 00:15:38.866 A:middle
traitCollection 上或是

00:15:38.866 --> 00:15:39.966 A:middle
UIApplication 对象上完成这一点

00:15:42.596 --> 00:15:44.356 A:middle
默认字体大小会

00:15:44.356 --> 00:15:46.246 A:middle
返回 large 标准大小

00:15:46.246 --> 00:15:48.876 A:middle
会从 extra small 变成

00:15:48.916 --> 00:15:50.406 A:middle
extra extra extra large

00:15:53.256 --> 00:15:55.606 A:middle
辅助功能中的大小

00:15:55.606 --> 00:15:57.076 A:middle
会加上前缀 Accessibility 来避免

00:15:57.076 --> 00:15:57.976 A:middle
要一直加 extra

00:16:03.356 --> 00:16:05.126 A:middle
现在在 iOS 11 中我们添加了

00:16:05.126 --> 00:16:06.376 A:middle
新的功能你可以用来

00:16:06.376 --> 00:16:07.676 A:middle
询问用户的

00:16:07.676 --> 00:16:08.256 A:middle
字体大小

00:16:09.786 --> 00:16:10.976 A:middle
举个例子你可以查看

00:16:10.976 --> 00:16:12.136 A:middle
用户是否正在使用

00:16:12.136 --> 00:16:13.626 A:middle
辅助功能中的字体大小

00:16:13.716 --> 00:16:15.116 A:middle
如果是的话你可以

00:16:15.116 --> 00:16:16.326 A:middle
提供一个备用界面比如垂直堆叠界面

00:16:19.286 --> 00:16:20.506 A:middle
或者你可以使用任何你想用的临界值

00:16:21.526 --> 00:16:22.746 A:middle
我们现在支持在

00:16:22.746 --> 00:16:24.196 A:middle
操作中进行比较这样你就可以

00:16:24.196 --> 00:16:25.636 A:middle
确认用户的字体大小

00:16:25.636 --> 00:16:26.706 A:middle
是否大于某个临界值

00:16:33.276 --> 00:16:35.436 A:middle
这就是一些

00:16:35.436 --> 00:16:36.616 A:middle
将你的视图适应于

00:16:36.616 --> 00:16:38.316 A:middle
Dynamic Type 的基本参考

00:16:38.966 --> 00:16:40.816 A:middle
现在我们来看一个桌面视图的

00:16:40.816 --> 00:16:44.616 A:middle
具体例子

00:16:44.616 --> 00:16:45.946 A:middle
之前我们看到了

00:16:45.946 --> 00:16:47.516 A:middle
设置 app 是如何完美适应

00:16:47.516 --> 00:16:48.606 A:middle
Dynamic Type 字体的

00:16:49.096 --> 00:16:50.246 A:middle
好消息是如果你使用

00:16:50.246 --> 00:16:51.456 A:middle
一个标准的桌面视图样式

00:16:51.456 --> 00:16:53.016 A:middle
你可以免费获得

00:16:53.016 --> 00:16:53.866 A:middle
这样的界面

00:16:54.556 --> 00:16:56.166 A:middle
那样你的字体就会变大

00:16:56.166 --> 00:16:57.526 A:middle
或缩小取决于 Dynamic

00:16:57.526 --> 00:16:59.316 A:middle
Type 的设置对于较大的字体

00:16:59.316 --> 00:17:01.436 A:middle
文字就会自动换行确保

00:16:59.316 --> 00:17:01.436 A:middle
文字就会自动换行确保

00:17:01.436 --> 00:17:04.705 A:middle
全部文字都可见

00:17:04.705 --> 00:17:06.066 A:middle
另外对于有详细的文字标签的

00:17:06.066 --> 00:17:07.486 A:middle
桌面视图

00:17:08.435 --> 00:17:09.656 A:middle
它们会自动的变成

00:17:09.656 --> 00:17:11.306 A:middle
垂直堆叠视图

00:17:11.306 --> 00:17:12.746 A:middle
在大字体的情况下

00:17:15.266 --> 00:17:16.415 A:middle
那么标准的桌面视图将会

00:17:16.415 --> 00:17:17.596 A:middle
将它们的界面适应于 Dynamic

00:17:17.685 --> 00:17:21.175 A:middle
Type 单元高度取决于

00:17:21.175 --> 00:17:21.906 A:middle
它们的内容

00:17:22.695 --> 00:17:24.006 A:middle
这在大字体情况下

00:17:24.006 --> 00:17:25.556 A:middle
文字的自动换行

00:17:25.556 --> 00:17:27.636 A:middle
尤其重要因为一个单元

00:17:27.636 --> 00:17:29.116 A:middle
如果有较多文字的话可能需要

00:17:29.166 --> 00:17:31.066 A:middle
比一个有较少内容的单元的高度高一些

00:17:32.316 --> 00:17:34.026 A:middle
那么我们如何在桌面视图中实现

00:17:34.026 --> 00:17:34.976 A:middle
可变的单元高度呢

00:17:38.096 --> 00:17:39.056 A:middle
我们可以通过

00:17:39.056 --> 00:17:40.346 A:middle
一种叫做 self-sizing 的技术实现

00:17:42.006 --> 00:17:43.346 A:middle
当打开 self-sizing 时

00:17:43.346 --> 00:17:44.996 A:middle
桌面视图会让每个单元

00:17:44.996 --> 00:17:47.126 A:middle
提供它的大小

00:17:47.176 --> 00:17:48.806 A:middle
而每个单元可以依据自己的

00:17:48.806 --> 00:17:50.346 A:middle
内容多少而进行计算

00:17:51.236 --> 00:17:53.196 A:middle
然后桌面视图监控端

00:17:53.196 --> 00:17:54.426 A:middle
就只需要给予

00:17:54.426 --> 00:17:55.736 A:middle
桌面视图一个有哪些单元

00:17:55.736 --> 00:17:56.836 A:middle
没有出现在屏幕上的估算

00:18:03.076 --> 00:18:05.356 A:middle
在 iOS 11 中 self-sizing 是默认打开的

00:18:07.236 --> 00:18:09.226 A:middle
然而如果你使用固定的

00:18:09.226 --> 00:18:11.496 A:middle
行高度或者如果你使用

00:18:11.496 --> 00:18:12.936 A:middle
Interface Builder 你可能需要去

00:18:12.936 --> 00:18:14.206 A:middle
打开 self-sizing

00:18:14.796 --> 00:18:17.846 A:middle
你只需要把你的

00:18:17.846 --> 00:18:19.476 A:middle
桌面视图的行高度设置成 Automatic

00:18:19.516 --> 00:18:21.516 A:middle
Dimension 然后把

00:18:21.516 --> 00:18:23.166 A:middle
Estimated Row Height 设置成一个 to a

00:18:23.166 --> 00:18:24.626 A:middle
给予你的桌面视图的合理估测值

00:18:27.016 --> 00:18:28.516 A:middle
如果你的每部分有页眉和

00:18:28.516 --> 00:18:30.326 A:middle
页脚你可以进行相同的操作

00:18:30.326 --> 00:18:31.556 A:middle
只要使用名字

00:18:31.556 --> 00:18:32.976 A:middle
很相似的属性就可以

00:18:38.346 --> 00:18:39.826 A:middle
这就是关于标准桌面视图

00:18:39.826 --> 00:18:40.486 A:middle
单元的内容

00:18:41.136 --> 00:18:42.616 A:middle
如果你使用自定义单元

00:18:42.616 --> 00:18:44.526 A:middle
和 Auto Layout 很容易

00:18:44.526 --> 00:18:45.696 A:middle
就可以使它们与

00:18:45.696 --> 00:18:46.366 A:middle
self-sizing 一起工作

00:18:46.926 --> 00:18:49.436 A:middle
你所要做的就只是

00:18:49.476 --> 00:18:50.776 A:middle
设置好你的限制条件

00:18:50.776 --> 00:18:53.226 A:middle
使它们来定义单元的大小

00:18:53.226 --> 00:18:54.906 A:middle
然后 Auto Layout 就会帮你找到

00:18:54.906 --> 00:18:55.686 A:middle
合适的大小

00:18:57.066 --> 00:18:57.996 A:middle
那么让我们看看

00:18:58.026 --> 00:18:59.366 A:middle
如何才能为这个自定义的单元

00:18:59.366 --> 00:19:01.126 A:middle
设置限制

00:18:59.366 --> 00:19:01.126 A:middle
设置限制

00:19:01.126 --> 00:19:02.766 A:middle
这其中我们有两个标签一个在另一个

00:19:02.766 --> 00:19:02.966 A:middle
的上面

00:19:05.356 --> 00:19:06.906 A:middle
我们肯定是想要为

00:19:06.906 --> 00:19:08.046 A:middle
这两个标签设置前后两个限制

00:19:09.416 --> 00:19:12.026 A:middle
并且我们要确保

00:19:12.026 --> 00:19:13.116 A:middle
这两个标签是垂直分开的

00:19:13.116 --> 00:19:15.086 A:middle
中间有合适的间隔

00:19:16.786 --> 00:19:18.186 A:middle
你可以再次使用新的

00:19:18.186 --> 00:19:19.306 A:middle
System Spacing Constraints

00:19:19.306 --> 00:19:20.836 A:middle
来获得一个在任何字体下

00:19:20.836 --> 00:19:21.896 A:middle
都可用的值

00:19:21.956 --> 00:19:23.976 A:middle
那么这样做就可以了吗

00:19:27.186 --> 00:19:27.696 A:middle
并不是

00:19:27.696 --> 00:19:29.296 A:middle
我们还需要增加

00:19:29.296 --> 00:19:31.006 A:middle
相对于单元的顶部和底部

00:19:31.006 --> 00:19:32.926 A:middle
的限制并使它

00:19:32.926 --> 00:19:34.086 A:middle
完成我们所需要的

00:19:34.086 --> 00:19:35.516 A:middle
定义单元大小的

00:19:35.516 --> 00:19:35.886 A:middle
一组限制条件

00:19:37.436 --> 00:19:38.796 A:middle
你可以再一次使用这里的 System

00:19:38.796 --> 00:19:40.216 A:middle
Spacing Constraints here 来获取

00:19:40.216 --> 00:19:41.036 A:middle
在各个字体大小下

00:19:41.036 --> 00:19:41.946 A:middle
都看起来美观的值

00:19:47.576 --> 00:19:49.236 A:middle
如果你对你的单元使用 Manual

00:19:49.236 --> 00:19:50.606 A:middle
Layout 你还可以

00:19:50.606 --> 00:19:51.766 A:middle
使用 self-sizing

00:19:52.626 --> 00:19:55.356 A:middle
你需要重写你的单元

00:19:55.356 --> 00:19:57.386 A:middle
sizeThatFits 功能

00:19:57.386 --> 00:20:01.556 A:middle
然后你可以使用

00:19:57.386 --> 00:20:01.556 A:middle
然后你可以使用

00:20:01.556 --> 00:20:03.866 A:middle
contentView 的宽度来

00:20:03.866 --> 00:20:04.726 A:middle
找到你的子视图可用的宽度

00:20:13.176 --> 00:20:14.676 A:middle
现在让我们开始我们的

00:20:14.676 --> 00:20:15.856 A:middle
最后一个话题图像

00:20:17.356 --> 00:20:18.926 A:middle
为什么图像会出现在

00:20:18.926 --> 00:20:19.936 A:middle
一个关于 Dynamic Type 的演讲中呢

00:20:21.116 --> 00:20:22.226 A:middle
毕竟它们不是文字

00:20:22.866 --> 00:20:25.456 A:middle
但是图像是

00:20:25.456 --> 00:20:26.946 A:middle
你的 app 的 UI 中不可或缺的一部分

00:20:26.946 --> 00:20:28.896 A:middle
有时候它们所承载的意义并不能在

00:20:28.896 --> 00:20:30.266 A:middle
其他地方传达

00:20:31.106 --> 00:20:32.416 A:middle
所以与为什么

00:20:32.416 --> 00:20:34.036 A:middle
你的文字对你的用户而言

00:20:34.036 --> 00:20:35.916 A:middle
可读性高很重要一样

00:20:35.916 --> 00:20:37.436 A:middle
你的图像的可分辨性

00:20:37.436 --> 00:20:38.276 A:middle
也非常重要

00:20:39.596 --> 00:20:40.636 A:middle
我们来看一个例子

00:20:43.136 --> 00:20:44.776 A:middle
这是电话 app 中的最近通话界面

00:20:46.576 --> 00:20:48.896 A:middle
请注意在有些记录的前面

00:20:48.896 --> 00:20:51.126 A:middle
有一个电话的图像

00:20:51.236 --> 00:20:52.846 A:middle
还有一个向外的箭头

00:20:54.476 --> 00:20:56.356 A:middle
这个图像表示的是

00:20:56.356 --> 00:20:58.856 A:middle
这通电话是你打出的而不是

00:20:59.946 --> 00:21:01.126 A:middle
一个别人打进的电话

00:20:59.946 --> 00:21:01.126 A:middle
一个别人打进的电话

00:21:01.126 --> 00:21:02.636 A:middle
现在让我们调大字号

00:21:05.486 --> 00:21:06.386 A:middle
对于你们中好奇的人

00:21:06.386 --> 00:21:08.136 A:middle
这个图像已经被移动

00:21:08.136 --> 00:21:10.526 A:middle
到了这里请注意

00:21:10.526 --> 00:21:12.166 A:middle
与文字相比它非常小

00:21:12.166 --> 00:21:14.766 A:middle
如果你想要你的文字变成这么大

00:21:14.806 --> 00:21:16.826 A:middle
以至于你可以阅读那么你

00:21:16.826 --> 00:21:18.126 A:middle
或许无法再看到这个图像

00:21:19.396 --> 00:21:22.056 A:middle
所以我们真正要做的是

00:21:22.616 --> 00:21:24.316 A:middle
把图像缩放

00:21:24.316 --> 00:21:25.746 A:middle
到跟文字相同倍数

00:21:26.376 --> 00:21:27.526 A:middle
而这就正是我们在

00:21:27.576 --> 00:21:29.696 A:middle
iOS 11 中所做的更好的是

00:21:29.696 --> 00:21:31.226 A:middle
我们让你在自己的 app 中进行这种操作

00:21:31.226 --> 00:21:31.756 A:middle
变得简单

00:21:34.276 --> 00:21:35.896 A:middle
要使你的图像

00:21:36.016 --> 00:21:37.986 A:middle
为 Dynamic Type 缩放你需要

00:21:37.986 --> 00:21:39.626 A:middle
首先确保

00:21:39.626 --> 00:21:40.886 A:middle
你的图像在 1x 大的时候是 PDF 格式

00:21:43.416 --> 00:21:44.846 A:middle
这无论如何都是一个好主意

00:21:44.846 --> 00:21:46.146 A:middle
因为它允许你在

00:21:46.146 --> 00:21:48.826 A:middle
2x 和 3x 分辨率的设备上使用

00:21:48.826 --> 00:21:49.896 A:middle
同一个图像

00:21:50.376 --> 00:21:52.216 A:middle
事实上你的 app 可能已经

00:21:52.216 --> 00:21:53.756 A:middle
在这么做了

00:21:53.756 --> 00:21:55.026 A:middle
所以只要确保你的格式是 PDF 的

00:21:55.936 --> 00:21:58.946 A:middle
下一步到 Asset Catalog 中

00:21:59.666 --> 00:22:01.526 A:middle
勾选这个新的选项即

00:21:59.666 --> 00:22:01.526 A:middle
勾选这个新的选项即

00:22:01.526 --> 00:22:02.556 A:middle
Preserving Vector Data

00:22:03.316 --> 00:22:05.696 A:middle
如果你没有勾选它

00:22:06.086 --> 00:22:07.126 A:middle
那么在 Asset Catalog 被

00:22:07.126 --> 00:22:09.516 A:middle
编辑时它将

00:22:09.516 --> 00:22:10.396 A:middle
栅格化所有 PDF 的数据

00:22:11.656 --> 00:22:12.856 A:middle
但如果你勾选了这个选项

00:22:12.856 --> 00:22:14.636 A:middle
原始 PDF 就可以得到保存

00:22:14.676 --> 00:22:17.316 A:middle
这样做很酷的一点就是

00:22:17.316 --> 00:22:18.896 A:middle
此时如果你使用这个图像

00:22:18.896 --> 00:22:20.456 A:middle
并把它放入任何大小的图像视图

00:22:20.456 --> 00:22:22.576 A:middle
这个图像就会

00:22:22.576 --> 00:22:23.826 A:middle
用 PDF 平滑延展

00:22:23.826 --> 00:22:23.976 A:middle
延展中

00:22:24.516 --> 00:22:32.576 A:middle
[掌声]

00:22:33.076 --> 00:22:34.436 A:middle
现在最后一步是

00:22:34.436 --> 00:22:35.996 A:middle
确保你的界面为

00:22:35.996 --> 00:22:36.596 A:middle
Dynamic Type 更改了大小

00:22:37.166 --> 00:22:38.796 A:middle
在 Interface Builder 中

00:22:39.426 --> 00:22:41.846 A:middle
你可用选择任何图像视图或者

00:22:41.846 --> 00:22:44.226 A:middle
按钮并且你可以选择

00:22:44.226 --> 00:22:46.056 A:middle
Adjusts Image Size 属性

00:22:47.756 --> 00:22:49.076 A:middle
这意味着你的图像按钮

00:22:49.076 --> 00:22:51.356 A:middle
将会为

00:22:51.356 --> 00:22:52.806 A:middle
五个最大的 Dynamic Type 字体进行缩放

00:22:56.116 --> 00:22:57.276 A:middle
你也可以用代码完成

00:22:57.276 --> 00:22:59.616 A:middle
对 AccessibilityContentSizeCategory 属性

00:22:59.866 --> 00:22:59.986 A:middle
使用 Adjusts Image Size

00:22:59.986 --> 00:23:01.646 A:middle
功能

00:22:59.986 --> 00:23:01.646 A:middle
功能

00:23:08.236 --> 00:23:09.786 A:middle
还有一个地方

00:23:09.786 --> 00:23:11.586 A:middle
图像缩放会派上用场

00:23:12.046 --> 00:23:14.246 A:middle
就是当用户长按

00:23:14.246 --> 00:23:16.186 A:middle
标签栏按钮时

00:23:16.606 --> 00:23:18.366 A:middle
之前我们看到你可用

00:23:18.366 --> 00:23:19.746 A:middle
长按“语音信箱”按钮

00:23:19.896 --> 00:23:21.136 A:middle
看到一个更大的图像出现在

00:23:21.136 --> 00:23:21.876 A:middle
屏幕的中间

00:23:22.426 --> 00:23:23.936 A:middle
请注意文字和图片

00:23:23.936 --> 00:23:25.146 A:middle
都进行了缩放

00:23:25.146 --> 00:23:26.406 A:middle
我们需要确保

00:23:26.406 --> 00:23:27.526 A:middle
图像看起来尽可能的好

00:23:32.536 --> 00:23:34.746 A:middle
如果你的标签栏按钮使用了 PDF

00:23:34.796 --> 00:23:36.666 A:middle
图像那么你需要做的就是

00:23:36.666 --> 00:23:37.946 A:middle
勾选 Preserve Vector Data

00:23:37.946 --> 00:23:39.656 A:middle
选项

00:23:40.156 --> 00:23:42.216 A:middle
这将允许 UIKit 把它

00:23:42.216 --> 00:23:42.976 A:middle
顺利地的放大

00:23:45.276 --> 00:23:46.066 A:middle
如果你没有使用 PDF 格式

00:23:46.066 --> 00:23:48.236 A:middle
你就需要提供一个更大的版本

00:23:48.236 --> 00:23:49.226 A:middle
让它在用户

00:23:49.226 --> 00:23:50.856 A:middle
长按图像时显示

00:23:52.196 --> 00:23:55.596 A:middle
要在 Interface Builder 操作

00:23:55.826 --> 00:23:56.896 A:middle
你可以找到 Attributes

00:23:56.896 --> 00:23:58.726 A:middle
Inspector 然后把你的标签栏的 and set the

00:23:58.726 --> 00:24:00.206 A:middle
Accessibility 属性

00:23:58.726 --> 00:24:00.206 A:middle
Accessibility 属性

00:24:00.206 --> 00:24:01.976 A:middle
设置成更大的版本

00:24:05.046 --> 00:24:06.466 A:middle
或者在代码中你可以把

00:24:06.466 --> 00:24:08.006 A:middle
largeContentSizeImage

00:24:08.006 --> 00:24:08.976 A:middle
属性设置成那个更大版本

00:24:14.536 --> 00:24:16.246 A:middle
我们已经谈到了一些

00:24:16.246 --> 00:24:17.616 A:middle
建议和窍门

00:24:17.936 --> 00:24:19.116 A:middle
让你的 app 能适应 Dynamic Type

00:24:19.916 --> 00:24:20.886 A:middle
现在我想有请

00:24:20.886 --> 00:24:22.466 A:middle
Nandini 到台上来在一个

00:24:22.466 --> 00:24:22.976 A:middle
示范 app 中展示

00:24:23.516 --> 00:24:30.586 A:middle
[掌声]

00:24:31.086 --> 00:24:31.746 A:middle
&gt;&gt; 大家好

00:24:32.456 --> 00:24:33.346 A:middle
我是 Nandini

00:24:33.346 --> 00:24:34.696 A:middle
我是苹果辅助功能团队的

00:24:34.696 --> 00:24:36.126 A:middle
一名软件工程师

00:24:37.376 --> 00:24:39.366 A:middle
今天我会用一个示范 app

00:24:39.466 --> 00:24:41.176 A:middle
展示如何在

00:24:41.446 --> 00:24:43.066 A:middle
短时间内用 Dynamic Type 字体

00:24:43.066 --> 00:24:43.386 A:middle
修正你的 app

00:24:43.386 --> 00:24:46.366 A:middle
首先我先用

00:24:46.366 --> 00:24:48.016 A:middle
默认字体大小打开 app

00:24:48.096 --> 00:24:51.056 A:middle
稍后我会用最大号的

00:24:51.056 --> 00:24:52.286 A:middle
Dynamic Type 字体打开

00:24:52.286 --> 00:24:54.926 A:middle
然后解决其中的问题

00:24:55.226 --> 00:24:56.206 A:middle
让我们来打开 app

00:24:56.206 --> 00:24:56.626 A:middle
我们已经清理过了

00:24:56.626 --> 00:24:58.676 A:middle
它叫 Cute Battle Pets

00:24:58.676 --> 00:25:00.256 A:middle
在这个 app 中你可以选择

00:24:58.676 --> 00:25:00.256 A:middle
在这个 app 中你可以选择

00:25:00.256 --> 00:25:01.546 A:middle
两只宠物来对战

00:25:02.396 --> 00:25:06.116 A:middle
让我来打开 app

00:25:06.116 --> 00:25:08.346 A:middle
在这个部分 Opponents 你可以看到

00:25:08.346 --> 00:25:10.096 A:middle
一些宠物你可用从中选择

00:25:10.096 --> 00:25:12.396 A:middle
进行对战在下一个

00:25:12.396 --> 00:25:14.716 A:middle
部分 Achievements 你可以看到

00:25:14.716 --> 00:25:16.666 A:middle
一些这些宠物获得的奖章

00:25:18.986 --> 00:25:20.476 A:middle
在我们使用

00:25:20.476 --> 00:25:22.466 A:middle
Dynamic Type 的最大号字体来审核

00:25:22.526 --> 00:25:23.866 A:middle
我们的 app 之前如果我们切换回刚刚的

00:25:23.866 --> 00:25:26.726 A:middle
Opponents 按钮你可以用

00:25:26.726 --> 00:25:28.386 A:middle
一个在 Xcode 中非常好用的工具

00:25:28.386 --> 00:25:30.196 A:middle
来测试你的 app 在不同字体下的效果

00:25:30.196 --> 00:25:32.096 A:middle
这个工具叫做

00:25:32.096 --> 00:25:33.406 A:middle
Accessibility Inspector

00:25:33.956 --> 00:25:36.646 A:middle
这个工具非常好用

00:25:37.016 --> 00:25:38.556 A:middle
因为你可以

00:25:38.556 --> 00:25:39.456 A:middle
在更改你的设备的设置之前

00:25:39.456 --> 00:25:40.056 A:middle
测试你的 app

00:25:41.356 --> 00:25:43.636 A:middle
你可以通过在菜单栏进入

00:25:43.636 --> 00:25:45.976 A:middle
Xcode 打开这个工具

00:25:45.976 --> 00:25:47.386 A:middle
选择 Open Developer Tool 然后

00:25:47.446 --> 00:25:48.576 A:middle
点击 Accessibility Inspector

00:25:55.206 --> 00:25:56.896 A:middle
这个工具可以被用于

00:25:57.006 --> 00:25:59.326 A:middle
在所有的 macOS 和 iOS 手机中测试你的 app

00:25:59.556 --> 00:26:01.006 A:middle
包括模拟机

00:25:59.556 --> 00:26:01.006 A:middle
包括模拟机

00:26:01.516 --> 00:26:05.836 A:middle
因为我们的 app 现在在

00:26:05.836 --> 00:26:07.226 A:middle
iPhone 模拟机上运行我从

00:26:07.226 --> 00:26:09.286 A:middle
下拉菜单中选择 Simulator

00:26:09.886 --> 00:26:11.156 A:middle
我在 Accessibility Inspector 点击设置键

00:26:12.676 --> 00:26:15.376 A:middle
在这里你可以看到一个字体大小的滑块

00:26:16.576 --> 00:26:17.856 A:middle
现在的字体是

00:26:17.856 --> 00:26:18.726 A:middle
默认的字体大小

00:26:19.456 --> 00:26:20.766 A:middle
我要把滑块

00:26:20.826 --> 00:26:22.276 A:middle
移到最右边

00:26:23.006 --> 00:26:24.106 A:middle
就是最大的

00:26:24.106 --> 00:26:26.846 A:middle
Dynamic Type 字体

00:26:27.006 --> 00:26:29.276 A:middle
让我们现在回到我们的 app

00:26:29.366 --> 00:26:32.716 A:middle
来看看这个改变带来的效果

00:26:32.956 --> 00:26:34.516 A:middle
这些标签的字体大小

00:26:34.516 --> 00:26:35.396 A:middle
还没有改变

00:26:35.396 --> 00:26:37.576 A:middle
知道为什么会这样吗

00:26:38.076 --> 00:26:39.346 A:middle
有两个原因

00:26:39.926 --> 00:26:42.416 A:middle
这些标签还没有被设置为

00:26:42.416 --> 00:26:44.956 A:middle
自动调整以适应

00:26:44.956 --> 00:26:46.706 A:middle
用户的 ContentSizeCategory

00:26:47.046 --> 00:26:49.456 A:middle
并且 petName 和 petDescription

00:26:49.456 --> 00:26:50.876 A:middle
标签使用的是自定义字体

00:26:52.456 --> 00:26:53.986 A:middle
我们现在启动一个项目来

00:26:53.986 --> 00:26:54.486 A:middle
解决这些问题

00:26:55.256 --> 00:26:57.286 A:middle
我现在把 Accessibility

00:26:57.286 --> 00:26:58.196 A:middle
Inspector 最小化

00:26:58.196 --> 00:27:03.206 A:middle
打开 BattleCell 压缩文件

00:26:58.196 --> 00:27:03.206 A:middle
打开 BattleCell 压缩文件

00:27:03.426 --> 00:27:05.366 A:middle
使用跳转栏

00:27:05.366 --> 00:27:06.346 A:middle
跳转到 Set Up 标签和

00:27:06.346 --> 00:27:07.336 A:middle
Buttons 功能

00:27:08.686 --> 00:27:12.976 A:middle
对于 petName petDescription

00:27:12.976 --> 00:27:15.216 A:middle
和 battleButton's titleLabel 标签

00:27:15.876 --> 00:27:17.526 A:middle
把这个字体在

00:27:17.726 --> 00:27:19.446 A:middle
ContentSizeCategory 的属性

00:27:19.446 --> 00:27:19.976 A:middle
设置为 True

00:27:27.246 --> 00:27:29.616 A:middle
由于 petName 和 petDescription

00:27:29.616 --> 00:27:32.766 A:middle
使用的是自定义字体

00:27:32.766 --> 00:27:35.076 A:middle
我们可以使用 UIFont 设置为 API 来扫描

00:27:35.146 --> 00:27:36.246 A:middle
字体以获得字体规格

00:27:37.036 --> 00:27:37.986 A:middle
对于 petName 我把 Textstyle

00:27:38.126 --> 00:27:38.976 A:middle
设为 headline

00:27:43.276 --> 00:27:45.316 A:middle
对于 petDescription 我把 Textstype

00:27:45.316 --> 00:27:46.576 A:middle
设为 subheadline

00:27:50.376 --> 00:27:51.246 A:middle
我们来重新运行一下 app

00:27:51.246 --> 00:27:51.936 A:middle
看看这些更改带来的变化

00:28:01.516 --> 00:28:03.636 A:middle
现在当这些标签都被

00:28:03.636 --> 00:28:04.886 A:middle
调整以适应用户的

00:28:04.886 --> 00:28:07.276 A:middle
ContentSizeCategory 后我们可以看到

00:28:07.276 --> 00:28:08.736 A:middle
这些标签没有足够的

00:28:08.736 --> 00:28:09.846 A:middle
横向空间

00:28:09.846 --> 00:28:12.236 A:middle
菜单在左边而

00:28:12.316 --> 00:28:14.106 A:middle
按钮在右边的情况下

00:28:14.396 --> 00:28:15.686 A:middle
这些标签并没有足够的

00:28:15.686 --> 00:28:17.576 A:middle
横向空间进行放大

00:28:17.576 --> 00:28:20.516 A:middle
并且要么被截断了

00:28:20.516 --> 00:28:21.226 A:middle
要么被分成很多行

00:28:22.076 --> 00:28:25.776 A:middle
我们可以通过一个

00:28:25.826 --> 00:28:27.796 A:middle
使用更大字体的备用界面结构

00:28:27.796 --> 00:28:28.746 A:middle
来解决这个问题

00:28:30.206 --> 00:28:32.136 A:middle
我们可以通过把

00:28:32.136 --> 00:28:34.036 A:middle
图片移动到文字上方而

00:28:34.036 --> 00:28:35.866 A:middle
按钮移动到文字下方来实现

00:28:36.556 --> 00:28:38.376 A:middle
这样就可以保证标签更少的发生

00:28:38.376 --> 00:28:40.136 A:middle
换行和截断的情况

00:28:40.136 --> 00:28:41.766 A:middle
我们现在到项目中解决这个问题

00:28:47.076 --> 00:28:48.966 A:middle
首先为了更大字体要添加这个

00:28:48.966 --> 00:28:50.246 A:middle
adoptLayoutConstraints 之前

00:28:50.246 --> 00:28:52.356 A:middle
我需要先

00:28:52.356 --> 00:28:53.946 A:middle
为它添加一个私有变量

00:28:58.116 --> 00:28:59.756 A:middle
下一步选择

00:28:59.756 --> 00:29:01.576 A:middle
setupLayoutConstraints 功能

00:28:59.756 --> 00:29:01.576 A:middle
setupLayoutConstraints 功能

00:29:01.576 --> 00:29:04.916 A:middle
现在你可以看到

00:29:04.916 --> 00:29:06.426 A:middle
你已经有了一些对于默认字体大小的

00:29:06.426 --> 00:29:07.596 A:middle
界面限制

00:29:08.626 --> 00:29:10.066 A:middle
现在我要设置一些

00:29:10.146 --> 00:29:11.446 A:middle
对于较大的

00:29:11.446 --> 00:29:11.976 A:middle
Type 的字体大小的限制

00:29:18.046 --> 00:29:19.736 A:middle
这些被加到这里的限制

00:29:19.736 --> 00:29:20.896 A:middle
会和示范 app 的代码

00:29:20.896 --> 00:29:22.386 A:middle
一起出现在

00:29:22.386 --> 00:29:23.176 A:middle
这个会议的网站上

00:29:23.666 --> 00:29:25.366 A:middle
会议结束以后你可以到网站上查看

00:29:25.366 --> 00:29:27.216 A:middle
但我会简单地

00:29:27.216 --> 00:29:28.726 A:middle
介绍一下它们是做什么的

00:29:29.406 --> 00:29:32.636 A:middle
这些限制可以确保

00:29:32.636 --> 00:29:34.436 A:middle
图像标签和按钮

00:29:34.436 --> 00:29:35.596 A:middle
是垂直堆叠的

00:29:35.946 --> 00:29:37.816 A:middle
也可以把它们放入

00:29:37.816 --> 00:29:40.396 A:middle
单元高度中

00:29:40.586 --> 00:29:42.106 A:middle
好了我们看到

00:29:42.106 --> 00:29:43.616 A:middle
developerLayoutConstraints 功能

00:29:45.026 --> 00:29:46.356 A:middle
在这里我们看到

00:29:46.356 --> 00:29:48.046 A:middle
有一个开发者限制没有被启用

00:29:49.386 --> 00:29:50.106 A:middle
我们需要更大的字体对吧

00:29:50.246 --> 00:29:50.976 A:middle
让我们来解决它

00:29:57.046 --> 00:29:59.176 A:middle
这样根据用户的

00:29:59.216 --> 00:30:00.676 A:middle
preferredContentSizeCategory

00:29:59.216 --> 00:30:00.676 A:middle
preferredContentSizeCategory

00:30:00.916 --> 00:30:01.976 A:middle
这些代码添加了五个最大的

00:30:01.976 --> 00:30:03.606 A:middle
Dynamic Type 字体

00:30:03.776 --> 00:30:05.746 A:middle
使用 app 你应该可以

00:30:05.746 --> 00:30:06.876 A:middle
看到它的限制和

00:30:06.876 --> 00:30:08.526 A:middle
activateLargeTextConstraints.

00:30:09.246 --> 00:30:10.496 A:middle
否则就采取相反操作

00:30:11.286 --> 00:30:14.956 A:middle
为了保证这些界面

00:30:14.956 --> 00:30:17.066 A:middle
限制能够

00:30:17.066 --> 00:30:18.056 A:middle
根据 trait collection 的变化而

00:30:18.056 --> 00:30:20.906 A:middle
变化

00:30:20.906 --> 00:30:22.166 A:middle
如果 trait collection 发生变化我们就使用这个功能

00:30:27.076 --> 00:30:27.746 A:middle
如果用户的

00:30:27.746 --> 00:30:29.966 A:middle
preferredContentSizeCategory

00:30:29.966 --> 00:30:31.256 A:middle
从最大的五个

00:30:31.256 --> 00:30:33.156 A:middle
Dynamic Type 字体更换为

00:30:33.156 --> 00:30:34.586 A:middle
较小的 Dynamic Type 字体

00:30:34.796 --> 00:30:37.016 A:middle
或者反过来这些界面限制

00:30:37.016 --> 00:30:37.976 A:middle
就会被更新

00:30:40.536 --> 00:30:41.226 A:middle
我们来重新运行一下 app 来看看

00:30:41.226 --> 00:30:41.956 A:middle
这些改变的效果

00:30:51.266 --> 00:30:53.346 A:middle
很好在把内容垂直堆叠以后

00:30:53.346 --> 00:30:55.396 A:middle
标签就没有那么多

00:30:55.396 --> 00:30:57.256 A:middle
被分行的情况

00:30:57.256 --> 00:30:58.006 A:middle
并且没有被截断的情况

00:30:58.566 --> 00:31:00.056 A:middle
我们进行下一步

00:30:58.566 --> 00:31:00.056 A:middle
我们进行下一步

00:31:00.056 --> 00:31:00.926 A:middle
Achievements 部分

00:31:03.356 --> 00:31:04.806 A:middle
当我们在默认字体情况下

00:31:04.806 --> 00:31:06.526 A:middle
运行这个 app 时你会

00:31:06.526 --> 00:31:08.086 A:middle
注意到这些单元

00:31:08.086 --> 00:31:10.226 A:middle
有很多行文字

00:31:10.316 --> 00:31:12.166 A:middle
但是现在只有一行文字

00:31:12.166 --> 00:31:13.056 A:middle
可以在屏幕上可见

00:31:14.366 --> 00:31:15.646 A:middle
我们到 Achievements View

00:31:15.646 --> 00:31:17.336 A:middle
Controller 看看

00:31:17.336 --> 00:31:17.976 A:middle
为什么会这样

00:31:20.176 --> 00:31:22.266 A:middle
之所以会发生这样的情况是因为

00:31:22.266 --> 00:31:23.826 A:middle
桌面视图的行高度被设置成了

00:31:23.826 --> 00:31:25.036 A:middle
一个恒定的值 100

00:31:25.036 --> 00:31:27.426 A:middle
这导致了这些单元

00:31:27.516 --> 00:31:29.256 A:middle
根本没有单元大小

00:31:30.096 --> 00:31:31.766 A:middle
为了解决这个问题让这些单元

00:31:31.766 --> 00:31:34.156 A:middle
具有大小我们需要把

00:31:34.156 --> 00:31:35.976 A:middle
桌面视图的行高度设置为使用

00:31:35.976 --> 00:31:37.756 A:middle
UITableViewAutomaticDimension

00:31:37.756 --> 00:31:39.686 A:middle
并把 TableView's

00:31:39.686 --> 00:31:42.206 A:middle
estimatedRowHeight 设为一个恒定值

00:31:42.206 --> 00:31:43.976 A:middle
我会选择 100

00:31:49.116 --> 00:31:49.916 A:middle
我们再重新运行一下 app

00:31:58.136 --> 00:31:59.846 A:middle
选择 Achievements 部分

00:31:59.846 --> 00:32:03.936 A:middle
现在我们看到

00:31:59.846 --> 00:32:03.936 A:middle
现在我们看到

00:32:03.936 --> 00:32:05.426 A:middle
在每个单元里我们都有了更多行文字

00:32:05.476 --> 00:32:07.736 A:middle
这些单元的大小都

00:32:07.826 --> 00:32:09.696 A:middle
设置为适应内容的多少但是

00:32:09.986 --> 00:32:11.036 A:middle
让我们来看看文字前面的图标

00:32:11.036 --> 00:32:16.046 A:middle
与文字不同这些图标并没有

00:32:16.046 --> 00:32:17.106 A:middle
随着用户的 ContentSizeCategory

00:32:17.106 --> 00:32:18.186 A:middle
而变大

00:32:18.926 --> 00:32:21.126 A:middle
要解决这个问题我们打开

00:32:21.126 --> 00:32:21.806 A:middle
Achievements 文件

00:32:27.256 --> 00:32:29.376 A:middle
设置标签和图像视图功能

00:32:30.746 --> 00:32:32.866 A:middle
对于 badgeImageView 我把

00:32:32.866 --> 00:32:34.966 A:middle
accessibilityContentSize Category

00:32:34.966 --> 00:32:36.106 A:middle
的属性 adjustsImageSize

00:32:36.146 --> 00:32:37.936 A:middle
设置为 True

00:32:38.826 --> 00:32:40.636 A:middle
这能保证图像

00:32:40.636 --> 00:32:42.096 A:middle
会随着五个最大的

00:32:42.096 --> 00:32:42.976 A:middle
Dynamic Type 字体而缩放

00:32:47.056 --> 00:32:48.016 A:middle
我们再一次运行一下 app

00:32:48.016 --> 00:32:48.946 A:middle
来看看变化的效果

00:32:56.516 --> 00:33:00.016 A:middle
打开 Achievements 选项

00:32:56.516 --> 00:33:00.016 A:middle
打开 Achievements 选项

00:33:00.216 --> 00:33:02.896 A:middle
很好现在文字和

00:33:02.896 --> 00:33:04.806 A:middle
图像都是最大的 Dynamic

00:33:04.806 --> 00:33:08.156 A:middle
Type 字号但是让我们看到

00:33:08.156 --> 00:33:09.346 A:middle
这些单元中的图像

00:33:15.236 --> 00:33:17.156 A:middle
我们也来看一看

00:33:17.156 --> 00:33:19.236 A:middle
只有在长按标签栏图标才会弹出的

00:33:19.236 --> 00:33:20.426 A:middle
大字体

00:33:29.376 --> 00:33:31.256 A:middle
这样看起来这些

00:33:31.256 --> 00:33:33.306 A:middle
单元中的图像和标签栏的

00:33:33.306 --> 00:33:35.386 A:middle
图标不够顺滑

00:33:35.856 --> 00:33:37.556 A:middle
为了解决问题我们需要到

00:33:37.556 --> 00:33:39.396 A:middle
Assets Catalog 选择我们的

00:33:40.596 --> 00:33:43.996 A:middle
图像都是 PDF 图像然后到

00:33:44.546 --> 00:33:49.636 A:middle
Attributes Inspector 并

00:33:49.636 --> 00:33:53.596 A:middle
点击 Preserve Vector

00:33:53.596 --> 00:33:54.946 A:middle
Data 选项

00:34:00.356 --> 00:34:02.256 A:middle
这样做之后

00:34:02.256 --> 00:34:03.926 A:middle
PDF 向量数据就被保存了

00:34:03.926 --> 00:34:05.806 A:middle
图像就会在

00:34:05.846 --> 00:34:07.376 A:middle
不同的 Dynamic Type 字体中

00:34:07.376 --> 00:34:07.926 A:middle
都平滑呈现

00:34:09.446 --> 00:34:10.396 A:middle
我们来重新运行一下 app

00:34:10.396 --> 00:34:10.936 A:middle
看看效果

00:34:21.126 --> 00:34:22.576 A:middle
打开 Achievements 选项

00:34:23.335 --> 00:34:24.795 A:middle
为了进一步确认让我放大一下

00:34:31.166 --> 00:34:33.996 A:middle
现在我们看到这些图像都

00:34:33.996 --> 00:34:36.846 A:middle
平滑呈现了对吧

00:34:39.386 --> 00:34:41.766 A:middle
最后使用 Accessibility

00:34:41.766 --> 00:34:43.286 A:middle
Inspector 我要做一个

00:34:43.286 --> 00:34:44.916 A:middle
快速的测试

00:34:45.246 --> 00:34:46.926 A:middle
测试这个 app 和不同 Dynamic Type

00:34:46.926 --> 00:34:47.466 A:middle
字体

00:34:47.896 --> 00:34:49.356 A:middle
让我先最小化 Xcode

00:34:49.356 --> 00:34:50.126 A:middle
让我打开

00:34:50.755 --> 00:34:51.976 A:middle
Accessibility Inspector

00:34:56.166 --> 00:34:57.666 A:middle
打开第一个选项

00:34:57.666 --> 00:34:58.236 A:middle
Opponents

00:34:59.006 --> 00:35:01.786 A:middle
把字体大小的滑块

00:34:59.006 --> 00:35:01.786 A:middle
把字体大小的滑块

00:35:01.836 --> 00:35:03.086 A:middle
滑到默认字体大小

00:35:04.186 --> 00:35:05.496 A:middle
现在我要一个一个的

00:35:05.536 --> 00:35:07.386 A:middle
增大字体然后你会

00:35:07.386 --> 00:35:09.966 A:middle
看到这些单元中的标签

00:35:09.966 --> 00:35:11.436 A:middle
会根据

00:35:11.436 --> 00:35:12.696 A:middle
用户 ContentSizeCategory 而变大

00:35:12.696 --> 00:35:13.976 A:middle
当我把滑块移动到最大的五个

00:35:14.056 --> 00:35:16.246 A:middle
Dynamic Type 字体时

00:35:17.046 --> 00:35:18.766 A:middle
这些单元的界面发生了改变

00:35:19.726 --> 00:35:22.306 A:middle
这些标签有了更多的

00:35:22.306 --> 00:35:24.496 A:middle
横向空间这些单元也改变大小

00:35:24.496 --> 00:35:25.436 A:middle
来适应内容的多少

00:35:28.196 --> 00:35:30.436 A:middle
下一步我们打开 Achievements 来

00:35:30.436 --> 00:35:31.466 A:middle
进行同样的测试

00:35:34.436 --> 00:35:37.246 A:middle
我要重新切换到默认字体大小

00:35:39.216 --> 00:35:40.496 A:middle
然后一个一个的增大字体

00:35:42.736 --> 00:35:44.666 A:middle
现在你可以看到

00:35:44.666 --> 00:35:45.686 A:middle
标签已经自动换行

00:35:46.346 --> 00:35:48.186 A:middle
这些单元也自动改变大小来适应内容

00:35:48.756 --> 00:35:51.186 A:middle
同时图像也

00:35:51.256 --> 00:35:52.966 A:middle
按照最大的五个 Dynamic Type 字体进行缩放

00:35:55.256 --> 00:35:56.226 A:middle
这样你就达到了目的

00:35:56.226 --> 00:35:58.376 A:middle
我们的 app 在

00:35:58.376 --> 00:36:00.386 A:middle
各种 Dynamic Type 字体下都看起来不错

00:35:58.376 --> 00:36:00.386 A:middle
各种 Dynamic Type 字体下都看起来不错

00:36:00.676 --> 00:36:03.606 A:middle
所以使用 iOS 11 提供的新的 API

00:36:03.606 --> 00:36:05.076 A:middle
你也可以让自己的 app

00:36:05.136 --> 00:36:06.366 A:middle
适应所有的 Dynamic

00:36:06.366 --> 00:36:07.046 A:middle
Type 字体大小

00:36:07.946 --> 00:36:09.546 A:middle
现在请 Clare 回来

00:36:09.546 --> 00:36:10.306 A:middle
做一个总结

00:36:10.756 --> 00:36:10.946 A:middle
谢谢

00:36:11.516 --> 00:36:17.606 A:middle
[掌声]

00:36:18.106 --> 00:36:19.366 A:middle
&gt;&gt; 谢谢 Nandini

00:36:19.916 --> 00:36:21.666 A:middle
所有的示范代码

00:36:21.666 --> 00:36:23.186 A:middle
都可以在

00:36:23.186 --> 00:36:26.436 A:middle
会议的网站找到

00:36:26.436 --> 00:36:27.366 A:middle
但是我们的版本

00:36:27.366 --> 00:36:28.676 A:middle
实际上被扩展了包括了

00:36:28.676 --> 00:36:29.686 A:middle
更多的例子

00:36:29.686 --> 00:36:31.706 A:middle
所以你可以看到我们如何

00:36:31.706 --> 00:36:32.766 A:middle
处理 Interface Builder 的

00:36:32.986 --> 00:36:34.396 A:middle
你可以找到我们是如何

00:36:34.396 --> 00:36:36.196 A:middle
让文字环绕图片的

00:36:36.556 --> 00:36:38.056 A:middle
你可以看到我们

00:36:38.056 --> 00:36:39.376 A:middle
只在大字体必要时

00:36:39.376 --> 00:36:41.296 A:middle
允许滚动等等

00:36:42.276 --> 00:36:43.566 A:middle
把它当成一个菜谱用来帮助你

00:36:43.666 --> 00:36:44.816 A:middle
处理你在自己的 app 中

00:36:44.816 --> 00:36:45.466 A:middle
可能遇到的问题

00:36:45.966 --> 00:36:47.376 A:middle
我们强烈建议你

00:36:47.376 --> 00:36:47.976 A:middle
在会议结束后查看

00:36:52.566 --> 00:36:53.506 A:middle
总结一下我们今天讨论的内容

00:36:53.506 --> 00:36:55.556 A:middle
使用新的 API 会使

00:36:55.556 --> 00:36:57.836 A:middle
在 iOS 11 中支持 Dynamic Type 变得很简单

00:36:59.136 --> 00:37:00.526 A:middle
如果你的 app 不支持

00:36:59.136 --> 00:37:00.526 A:middle
如果你的 app 不支持

00:37:00.526 --> 00:37:02.376 A:middle
Dynamic Type 现在是让它

00:37:02.376 --> 00:37:04.196 A:middle
支持的好时候

00:37:04.196 --> 00:37:06.456 A:middle
你应该这么做因为支持

00:37:06.456 --> 00:37:08.046 A:middle
Dynamic Type 是对你的用户有好处的

00:37:09.596 --> 00:37:10.716 A:middle
它对喜欢

00:37:10.716 --> 00:37:12.616 A:middle
更小的字体的用户有好处因为它

00:37:12.616 --> 00:37:13.726 A:middle
允许他们可以在屏幕上看到更多内容

00:37:15.086 --> 00:37:15.996 A:middle
也对喜欢

00:37:15.996 --> 00:37:17.576 A:middle
更大字体的用户有好处因为它

00:37:17.576 --> 00:37:19.886 A:middle
阅读起来更舒适

00:37:19.886 --> 00:37:21.826 A:middle
并且它对

00:37:21.826 --> 00:37:23.846 A:middle
需要更大字体以使他们能够阅读的用户

00:37:23.846 --> 00:37:26.286 A:middle
更加是福利性的

00:37:26.546 --> 00:37:29.226 A:middle
当更多的 app 可以给

00:37:29.226 --> 00:37:30.766 A:middle
残疾人使用时比如

00:37:30.766 --> 00:37:33.116 A:middle
视力低下的人它真的

00:37:33.256 --> 00:37:35.006 A:middle
为这些人提供了一个更公平的环境

00:37:36.456 --> 00:37:37.836 A:middle
所以在你的 app 中支持 Dynamic

00:37:37.886 --> 00:37:39.306 A:middle
Type 你也正在把

00:37:39.306 --> 00:37:40.256 A:middle
这个世界变得更好

00:37:41.696 --> 00:37:43.356 A:middle
所以我们真的希望你能够

00:37:43.356 --> 00:37:45.126 A:middle
了解你今天所看到的一切

00:37:45.476 --> 00:37:47.376 A:middle
回去开发一些

00:37:47.376 --> 00:37:48.976 A:middle
适用 Dynamic Type 的 app 然后

00:37:49.036 --> 00:37:50.606 A:middle
包含更多的用户这样

00:37:50.606 --> 00:37:51.606 A:middle
更多的用户才可以从

00:37:51.606 --> 00:37:51.976 A:middle
你的杰出工作中获益

00:37:56.286 --> 00:37:58.406 A:middle
如果想了解更多信息

00:37:58.406 --> 00:37:59.386 A:middle
包括今天我们展示的案例

00:37:59.866 --> 00:38:00.746 A:middle
请查看我们的网站

00:37:59.866 --> 00:38:00.746 A:middle
请查看我们的网站

00:38:04.396 --> 00:38:05.476 A:middle
现在这次会议已经

00:38:05.476 --> 00:38:06.916 A:middle
有几场讨论

00:38:06.916 --> 00:38:08.146 A:middle
跟我们刚才谈的内容有关

00:38:08.806 --> 00:38:10.076 A:middle
正如我们之前提到的那样

00:38:10.076 --> 00:38:11.426 A:middle
昨天的 Design for Everyone 会议

00:38:11.426 --> 00:38:13.086 A:middle
讨论了 iOS 11 的 Dynamic Type 进步背后

00:38:13.086 --> 00:38:14.646 A:middle
的设计理念

00:38:16.536 --> 00:38:18.056 A:middle
也有两场关于

00:38:18.056 --> 00:38:19.556 A:middle
辅助功能的会议 What's New in

00:38:19.556 --> 00:38:21.406 A:middle
Accessibility 和 Media and

00:38:21.406 --> 00:38:22.406 A:middle
Gaming Accessibility

00:38:22.406 --> 00:38:24.546 A:middle
这两场会议都讨论了

00:38:24.546 --> 00:38:26.126 A:middle
你可以如何扩大你的用户基础和

00:38:26.126 --> 00:38:27.196 A:middle
包含更多用户

00:38:28.296 --> 00:38:30.296 A:middle
最后正如我们之前提到的

00:38:30.296 --> 00:38:31.926 A:middle
想了解更多关于

00:38:31.926 --> 00:38:33.486 A:middle
System Spacing Constraints 在

00:38:33.486 --> 00:38:35.116 A:middle
Interface Builder 中的内容请查看

00:38:35.116 --> 00:38:36.226 A:middle
Auto Layout Techniques in

00:38:36.226 --> 00:38:37.226 A:middle
Interface Builder 会议

00:38:37.756 --> 00:38:38.706 A:middle
谢谢你们来到这里

00:38:38.706 --> 00:38:39.416 A:middle
我希望你们能够享受接下来的会议

00:38:40.516 --> 00:38:46.940 A:middle
[掌声]
