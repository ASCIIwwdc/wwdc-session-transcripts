WEBVTT

00:00:07.516 --> 00:00:16.500 A:middle
[人群声]

00:00:23.041 --> 00:00:25.041 A:middle
[掌声]

00:00:25.066 --> 00:00:26.466 A:middle
&gt;&gt; 早上好 欢迎大家来

00:00:27.616 --> 00:00:28.856 A:middle
我的名字叫 Jean-Gabriel

00:00:28.946 --> 00:00:29.846 A:middle
希望大家这周

00:00:29.846 --> 00:00:30.446 A:middle
过的很愉快

00:00:30.726 --> 00:00:31.756 A:middle
我们在这里要谈一谈

00:00:31.756 --> 00:00:33.426 A:middle
File Provider 一项

00:00:33.426 --> 00:00:34.826 A:middle
新文件 App  背后的

00:00:35.676 --> 00:00:35.746 A:middle
技术

00:00:37.116 --> 00:00:38.636 A:middle
我们将会看到什么是

00:00:38.636 --> 00:00:41.046 A:middle
File Provider 以及 iOS 11 中

00:00:41.046 --> 00:00:43.756 A:middle
有哪些新的 API 可以让你

00:00:44.176 --> 00:00:45.986 A:middle
将文件从云端枚举至

00:00:45.986 --> 00:00:48.026 A:middle
设备上

00:00:48.026 --> 00:00:49.496 A:middle
在设备上修改文件并上传至云端

00:00:49.926 --> 00:00:50.986 A:middle
也可以自定义你的 File Provider

00:00:50.986 --> 00:00:52.706 A:middle
以便展示你的

00:00:52.706 --> 00:00:53.866 A:middle
不突出的特性

00:00:56.206 --> 00:00:57.416 A:middle
File Provider 在 iOS 8 时

00:00:57.416 --> 00:00:59.836 A:middle
就出现了 就其本质而言

00:00:59.886 --> 00:01:02.646 A:middle
它们为各种应用程序

00:00:59.886 --> 00:01:02.646 A:middle
它们为各种应用程序

00:01:02.646 --> 00:01:03.296 A:middle
实体化文件

00:01:03.296 --> 00:01:04.306 A:middle
所以 各应用程序可以

00:01:04.306 --> 00:01:06.846 A:middle
在 File Provider 的帮助下

00:01:06.846 --> 00:01:08.256 A:middle
保持对文件的偏好设定

00:01:08.256 --> 00:01:09.646 A:middle
当它们需要这些文件时 File Provider

00:01:09.646 --> 00:01:11.086 A:middle
就可以提供文件完成这项使命

00:01:12.406 --> 00:01:14.286 A:middle
不过 我们今天要讲的是

00:01:14.286 --> 00:01:16.406 A:middle
新的 API

00:01:16.406 --> 00:01:18.136 A:middle
用来将文稿从云端枚举至设备

00:01:18.136 --> 00:01:18.976 A:middle
的 API

00:01:19.626 --> 00:01:22.556 A:middle
因此这次演讲的听众应该是

00:01:22.556 --> 00:01:24.216 A:middle
拥有服务器

00:01:24.216 --> 00:01:26.486 A:middle
并且服务器上有用户文稿

00:01:26.486 --> 00:01:27.776 A:middle
并且想要将

00:01:27.776 --> 00:01:29.486 A:middle
这些文稿移送至 iPad 和

00:01:29.486 --> 00:01:29.856 A:middle
iPhone 上的人

00:01:32.316 --> 00:01:34.886 A:middle
我们来看一看文件 App

00:01:35.436 --> 00:01:37.886 A:middle
文件 App  是

00:01:37.886 --> 00:01:40.126 A:middle
一个对新系统 UI 的瘦包装器

00:01:40.126 --> 00:01:41.296 A:middle
它被称作文稿浏览器

00:01:41.296 --> 00:01:42.856 A:middle
在系统中

00:01:42.856 --> 00:01:43.336 A:middle
被普遍使用

00:01:44.266 --> 00:01:45.926 A:middle
这里是用户查询

00:01:45.926 --> 00:01:48.296 A:middle
组织 分享

00:01:48.366 --> 00:01:49.376 A:middle
打开文稿的地方

00:01:52.776 --> 00:01:54.896 A:middle
File Provider 就位于“位置”

00:01:54.896 --> 00:01:55.906 A:middle
的下方

00:01:56.366 --> 00:01:57.746 A:middle
这里有你的云存储

00:01:57.746 --> 00:02:01.126 A:middle
的入口点 而 iCloud Drive

00:01:57.746 --> 00:02:01.126 A:middle
的入口点 而 iCloud Drive

00:02:01.126 --> 00:02:02.436 A:middle
就是其中之一

00:02:03.716 --> 00:02:04.186 A:middle
这很棒

00:02:04.396 --> 00:02:05.956 A:middle
这意味着我们今天要涉及的

00:02:05.956 --> 00:02:07.446 A:middle
API 都是

00:02:07.916 --> 00:02:09.356 A:middle
经过 iCloud Drive 执行的

00:02:09.425 --> 00:02:10.826 A:middle
已经通过了测试

00:02:10.826 --> 00:02:11.886 A:middle
你可以从中获得参考

00:02:11.886 --> 00:02:13.246 A:middle
如果你想知道

00:02:13.246 --> 00:02:15.846 A:middle
比如给你的的文件重命名为

00:02:15.846 --> 00:02:17.106 A:middle
相同文件夹下另一文件

00:02:17.106 --> 00:02:18.106 A:middle
的名字时会发生什么

00:02:18.106 --> 00:02:19.196 A:middle
你可以直接

00:02:19.196 --> 00:02:20.466 A:middle
在 iCloud Drive 上试验

00:02:20.466 --> 00:02:21.246 A:middle
看看会出现怎样的情况

00:02:22.566 --> 00:02:24.736 A:middle
这也意味你的文稿

00:02:24.736 --> 00:02:26.296 A:middle
储存在类似 iCloud Drive

00:02:26.296 --> 00:02:27.706 A:middle
的 File Provider 上时

00:02:27.706 --> 00:02:29.186 A:middle
是 OS 上的

00:02:29.186 --> 00:02:29.546 A:middle
“一等公民”

00:02:29.896 --> 00:02:31.206 A:middle
它们随处可得

00:02:31.206 --> 00:02:32.686 A:middle
同 iCloud Drive 文稿一样

00:02:32.686 --> 00:02:33.706 A:middle
突出

00:02:34.016 --> 00:02:35.466 A:middle
实际上 在这张屏幕快照中

00:02:35.466 --> 00:02:36.466 A:middle
iCloud Drive 位于顶端

00:02:36.466 --> 00:02:38.056 A:middle
不过用户可以重新配置

00:02:38.056 --> 00:02:39.546 A:middle
在 File Provider上

00:02:39.666 --> 00:02:41.186 A:middle
只留下他们真正想要的

00:02:42.616 --> 00:02:44.356 A:middle
这就是关于

00:02:44.356 --> 00:02:45.856 A:middle
File Provider 我顺便

00:02:46.526 --> 00:02:47.356 A:middle
想提及的一点

00:02:47.616 --> 00:02:49.106 A:middle
“我的 iPad”是唯一的

00:02:49.106 --> 00:02:50.246 A:middle
提供本地文件的

00:02:50.246 --> 00:02:51.436 A:middle
是唯一

00:02:51.436 --> 00:02:52.796 A:middle
不显示储存在云中的文件

00:02:52.796 --> 00:02:54.846 A:middle
的文件提供器

00:02:54.846 --> 00:02:57.316 A:middle
它让 App 向其他应用程序

00:02:57.946 --> 00:02:59.626 A:middle
显示其文稿

00:02:59.626 --> 00:03:01.406 A:middle
和本地储存的文稿

00:02:59.626 --> 00:03:01.406 A:middle
和本地储存的文稿

00:03:04.656 --> 00:03:06.146 A:middle
让我们看看

00:03:06.146 --> 00:03:07.676 A:middle
在这个平台上文稿浏览器所处的位置

00:03:08.556 --> 00:03:09.886 A:middle
它就位于基于文稿的应用程序

00:03:09.886 --> 00:03:11.156 A:middle
下方

00:03:11.526 --> 00:03:12.926 A:middle
就是我们刚刚看到的那些文件 App

00:03:13.736 --> 00:03:15.276 A:middle
比如全部的 iWork App

00:03:15.276 --> 00:03:17.416 A:middle
它们也是新的系统 UI 上

00:03:17.416 --> 00:03:19.026 A:middle
的一部分

00:03:19.026 --> 00:03:20.786 A:middle
所有 iOS 11 上的第三方

00:03:20.786 --> 00:03:22.156 A:middle
文件 App

00:03:22.706 --> 00:03:25.196 A:middle
在文稿浏览器 UI

00:03:25.196 --> 00:03:27.016 A:middle
的另一边就是

00:03:27.016 --> 00:03:28.476 A:middle
File Provider

00:03:28.476 --> 00:03:30.066 A:middle
File Provider 将给系统 UI 提供文件

00:03:30.066 --> 00:03:31.626 A:middle
而基于文稿的应用程序

00:03:31.626 --> 00:03:33.146 A:middle
则可以挑选

00:03:34.186 --> 00:03:35.716 A:middle
从某个 File Provider 中

00:03:35.716 --> 00:03:36.926 A:middle
打开其中的一个文稿

00:03:36.926 --> 00:03:39.506 A:middle
修改或者创建

00:03:40.846 --> 00:03:41.296 A:middle
新的文稿

00:03:41.506 --> 00:03:43.006 A:middle
之所以

00:03:43.006 --> 00:03:44.376 A:middle
基于文稿的应用程序现在需要

00:03:44.586 --> 00:03:46.456 A:middle
进行适配 就是因为只有

00:03:46.696 --> 00:03:49.006 A:middle
这唯一一个 API 能够访问

00:03:49.006 --> 00:03:50.916 A:middle
所有用户储存其文稿

00:03:50.916 --> 00:03:51.586 A:middle
的地方

00:03:52.216 --> 00:03:53.886 A:middle
替换目前

00:03:53.886 --> 00:03:55.136 A:middle
必须适配多个 SDK

00:03:55.136 --> 00:03:55.376 A:middle
的情况

00:03:56.766 --> 00:03:58.326 A:middle
File Provider 需要适配

00:03:58.326 --> 00:03:59.996 A:middle
是因为它的隐私模式

00:03:59.996 --> 00:04:01.246 A:middle
这个非常棒

00:03:59.996 --> 00:04:01.246 A:middle
这个非常棒

00:04:01.246 --> 00:04:03.596 A:middle
这样基于文稿的应用程序

00:04:03.706 --> 00:04:05.246 A:middle
一次打开的一个文稿

00:04:06.486 --> 00:04:08.906 A:middle
完全是用户配置的访问

00:04:09.226 --> 00:04:11.286 A:middle
系统 UI 是在进程外的

00:04:11.586 --> 00:04:12.726 A:middle
基于文稿的应用程序

00:04:12.726 --> 00:04:14.926 A:middle
无法得知其选定的文件

00:04:14.926 --> 00:04:16.046 A:middle
旁的其它文件是什么

00:04:16.046 --> 00:04:18.136 A:middle
甚至在用户选定文稿前

00:04:18.136 --> 00:04:19.875 A:middle
都不知道

00:04:19.875 --> 00:04:21.226 A:middle
安装了哪些 File Provider

00:04:23.596 --> 00:04:25.666 A:middle
这里有两个关键的 API

00:04:26.326 --> 00:04:27.266 A:middle
UIDocumentBrowser

00:04:27.266 --> 00:04:29.626 A:middle
和 ViewController

00:04:29.626 --> 00:04:30.806 A:middle
二者都是基于文稿应用程序

00:04:30.806 --> 00:04:31.526 A:middle
的 SDK 还有

00:04:31.526 --> 00:04:33.156 A:middle
NSFileProviderExtension

00:04:36.116 --> 00:04:37.166 A:middle
我们今天不讲

00:04:37.166 --> 00:04:37.976 A:middle
UIDocumentBrowser

00:04:37.976 --> 00:04:38.666 A:middle
和 ViewController

00:04:38.906 --> 00:04:40.176 A:middle
这两个在昨天会议中已经讲过了

00:04:40.546 --> 00:04:42.416 A:middle
如果你错过了关于

00:04:42.416 --> 00:04:43.966 A:middle
构建基于文稿应用程序

00:04:43.966 --> 00:04:45.466 A:middle
的讲座的话

00:04:45.466 --> 00:04:46.106 A:middle
我建议你去看看视频

00:04:46.106 --> 00:04:47.776 A:middle
我们今天要讲的是

00:04:47.776 --> 00:04:48.486 A:middle
另一端

00:04:48.536 --> 00:04:49.806 A:middle
也就是 NSFileProviderExtension

00:04:52.656 --> 00:04:54.886 A:middle
我们再看一下

00:04:54.886 --> 00:04:55.016 A:middle
文件 App

00:04:55.716 --> 00:04:57.486 A:middle
用户访问

00:04:57.486 --> 00:05:00.806 A:middle
并同文稿进行互动有

00:04:57.486 --> 00:05:00.806 A:middle
并同文稿进行互动有

00:05:00.806 --> 00:05:02.486 A:middle
两个主要的方法 对应着

00:05:02.486 --> 00:05:03.686 A:middle
应用程序上的两个标签

00:05:04.036 --> 00:05:05.476 A:middle
第一个标签是“浏览”标签

00:05:06.156 --> 00:05:07.736 A:middle
在这里 用户

00:05:07.736 --> 00:05:11.046 A:middle
可以在你的云端搜索内容

00:05:11.046 --> 00:05:12.326 A:middle
并将其下载至设备上

00:05:13.076 --> 00:05:14.906 A:middle
在这个模式下 你的 File Provider 扩展

00:05:14.906 --> 00:05:17.136 A:middle
如同管道一般

00:05:17.136 --> 00:05:18.866 A:middle
连接着系统 UI 和你的服务器

00:05:18.866 --> 00:05:20.236 A:middle
事实上也不期望它

00:05:20.236 --> 00:05:23.186 A:middle
在离线的环境下工作

00:05:23.366 --> 00:05:25.546 A:middle
一旦用户在“浏览”标签

00:05:25.546 --> 00:05:26.946 A:middle
选择过文稿后

00:05:26.946 --> 00:05:28.096 A:middle
这些被选择的文稿也就会出现在

00:05:28.096 --> 00:05:28.806 A:middle
“最近”标签中

00:05:28.806 --> 00:05:31.416 A:middle
“最近”标签是另一种

00:05:31.416 --> 00:05:33.826 A:middle
模式 它是一个文稿的扁平列表

00:05:33.826 --> 00:05:34.896 A:middle
列表中的文稿都

00:05:34.896 --> 00:05:38.286 A:middle
同原文稿的来源相同

00:05:38.316 --> 00:05:39.666 A:middle
和用户极具相关性

00:05:39.666 --> 00:05:40.886 A:middle
这里就是用户

00:05:40.886 --> 00:05:42.186 A:middle
可以查找他想要打开的文件

00:05:42.186 --> 00:05:42.496 A:middle
的地方

00:05:42.496 --> 00:05:43.446 A:middle
当然了 文件一定会

00:05:43.446 --> 00:05:43.796 A:middle
出现在那里

00:05:47.816 --> 00:05:50.666 A:middle
所以 我们提到两个栏标“浏览”和“最近”

00:05:50.666 --> 00:05:52.026 A:middle
所以“浏览”标签是用来

00:05:52.026 --> 00:05:53.716 A:middle
给 File Provider 提供新内容的

00:05:53.896 --> 00:05:55.996 A:middle
提供至线上文件夹中

00:05:55.996 --> 00:05:57.486 A:middle
然后选取文稿

00:05:57.946 --> 00:06:00.016 A:middle
而“最近”标签则是用来显示

00:05:57.946 --> 00:06:00.016 A:middle
而“最近”标签则是用来显示

00:06:00.016 --> 00:06:01.276 A:middle
工作集的

00:06:01.276 --> 00:06:02.256 A:middle
我们现在就来谈谈

00:06:02.256 --> 00:06:02.706 A:middle
工作集

00:06:03.416 --> 00:06:05.256 A:middle
它不是基于文件夹的

00:06:05.256 --> 00:06:07.056 A:middle
而且横跨多个 File Provider

00:06:07.786 --> 00:06:10.066 A:middle
在一个工作集中

00:06:10.676 --> 00:06:12.416 A:middle
有这些文稿

00:06:12.546 --> 00:06:14.106 A:middle
最近打开的文稿

00:06:14.106 --> 00:06:16.846 A:middle
最近使用过的文稿 收藏过的 加过标签的文稿

00:06:16.846 --> 00:06:20.326 A:middle
和文件夹 通过或者由用户

00:06:20.326 --> 00:06:22.106 A:middle
分享过的文稿

00:06:22.386 --> 00:06:23.866 A:middle
先前下载到设备上

00:06:23.866 --> 00:06:25.206 A:middle
可以离线获取的

00:06:25.206 --> 00:06:26.226 A:middle
文稿

00:06:26.756 --> 00:06:30.036 A:middle
以及近期删除的文稿

00:06:30.036 --> 00:06:32.326 A:middle
为了在不同的 File Provider 之间

00:06:32.326 --> 00:06:33.646 A:middle
确保用户体验能够保持一致

00:06:33.646 --> 00:06:35.686 A:middle
我们要求你

00:06:35.686 --> 00:06:36.696 A:middle
把这些文件都放在工作集中

00:06:37.156 --> 00:06:38.336 A:middle
当然 各位对于特定领域

00:06:38.336 --> 00:06:38.716 A:middle
的了解更多

00:06:38.716 --> 00:06:39.756 A:middle
知道哪些是与用户

00:06:39.756 --> 00:06:40.026 A:middle
相关的

00:06:40.026 --> 00:06:41.976 A:middle
如果需要的话

00:06:41.976 --> 00:06:44.216 A:middle
各位可以选择在工作集中

00:06:44.216 --> 00:06:44.526 A:middle
加入更多

00:06:45.016 --> 00:06:48.656 A:middle
不过 要给大家提个醒：我们其实

00:06:48.656 --> 00:06:50.646 A:middle
会对设备上的工作集

00:06:50.646 --> 00:06:51.126 A:middle
进行 Smart Caching （智能快取）

00:06:51.126 --> 00:06:52.296 A:middle
所以 一旦某些东西加进了

00:06:52.296 --> 00:06:53.416 A:middle
工作集中 你就必须

00:06:53.416 --> 00:06:53.916 A:middle
保证其同步

00:06:54.956 --> 00:06:58.016 A:middle
我之后也会再谈到这点

00:06:58.016 --> 00:07:00.106 A:middle
在“最近”标签的

00:06:58.016 --> 00:07:00.106 A:middle
在“最近”标签的

00:07:00.106 --> 00:07:02.446 A:middle
文稿浏览器中 各位可以找到

00:07:02.446 --> 00:07:03.256 A:middle
工作集

00:07:03.346 --> 00:07:04.696 A:middle
每个 File Provider 都有可能

00:07:04.696 --> 00:07:05.976 A:middle
向工作集中

00:07:05.976 --> 00:07:06.896 A:middle
提供不同的文稿

00:07:08.246 --> 00:07:10.916 A:middle
我们就不在这里

00:07:10.916 --> 00:07:11.266 A:middle
演示了

00:07:11.786 --> 00:07:13.296 A:middle
在我们合并文稿列表时

00:07:13.296 --> 00:07:15.826 A:middle
因为文稿都来自于

00:07:15.826 --> 00:07:16.886 A:middle
不同的 File Provider 扩展

00:07:16.886 --> 00:07:18.426 A:middle
所以当在 UI 上显示的时候

00:07:18.426 --> 00:07:19.326 A:middle
就会出现奇怪的动画模拟效果

00:07:19.326 --> 00:07:21.246 A:middle
绘制上的小错误

00:07:21.246 --> 00:07:22.426 A:middle
所以 我们不这么做

00:07:22.426 --> 00:07:24.286 A:middle
我们要做的是

00:07:24.286 --> 00:07:26.436 A:middle
枚举一个工作集的索引

00:07:26.436 --> 00:07:28.326 A:middle
在 UI 出现时

00:07:28.326 --> 00:07:29.266 A:middle
这一工作集的索引被保存在系统中

00:07:29.336 --> 00:07:30.216 A:middle
而你的

00:07:30.216 --> 00:07:32.026 A:middle
File Provider 扩展

00:07:32.376 --> 00:07:32.756 A:middle
甚至都没有被启用

00:07:33.836 --> 00:07:34.846 A:middle
我们要谈谈 这一索引

00:07:34.846 --> 00:07:35.716 A:middle
是如何构建的

00:07:36.976 --> 00:07:39.326 A:middle
索引是本地的

00:07:39.326 --> 00:07:39.986 A:middle
位于设备上的

00:07:40.156 --> 00:07:42.056 A:middle
它是由来自不同 File Provider 的

00:07:42.056 --> 00:07:43.276 A:middle
工作集

00:07:43.276 --> 00:07:44.186 A:middle
汇聚而成的

00:07:44.556 --> 00:07:45.866 A:middle
因为索引是本地的

00:07:45.866 --> 00:07:47.116 A:middle
这就意味着它

00:07:47.216 --> 00:07:47.726 A:middle
支持离线使用

00:07:47.726 --> 00:07:49.376 A:middle
这就意味着 在离线时

00:07:49.376 --> 00:07:50.806 A:middle
如果我启动 UI 文稿浏览器

00:07:50.806 --> 00:07:52.086 A:middle
我就能够看到

00:07:52.086 --> 00:07:52.556 A:middle
我的近期文稿

00:07:52.906 --> 00:07:53.696 A:middle
当然 这不是说所有的文稿在所有时间里都

00:07:53.696 --> 00:07:54.916 A:middle
在本地设备上

00:07:54.916 --> 00:07:56.506 A:middle
能够离线访问

00:07:56.876 --> 00:07:57.716 A:middle
但这意味着构建起的 UI

00:07:57.886 --> 00:08:01.316 A:middle
的很多文稿已经缓存

00:07:57.886 --> 00:08:01.316 A:middle
的很多文稿已经缓存

00:08:01.316 --> 00:08:01.826 A:middle
到了设备上

00:08:02.176 --> 00:08:06.506 A:middle
因为索引处于本地

00:08:06.506 --> 00:08:09.536 A:middle
并可以离线访问

00:08:09.536 --> 00:08:10.106 A:middle
所以它也出现在 Spotlight 中

00:08:10.106 --> 00:08:11.866 A:middle
在系统索引的帮助下

00:08:12.626 --> 00:08:14.296 A:middle
工作集会出现在 Spotlight 中

00:08:14.356 --> 00:08:16.266 A:middle
而用户就可以在 Spotlight 中选取

00:08:16.266 --> 00:08:18.086 A:middle
一个文稿 而此时你的

00:08:18.086 --> 00:08:19.686 A:middle
File Provider 扩展

00:08:20.266 --> 00:08:22.526 A:middle
也就会被唤醒

00:08:22.736 --> 00:08:25.106 A:middle
接下来我们看看

00:08:25.326 --> 00:08:27.266 A:middle
如何向工作集索引提供文稿

00:08:27.266 --> 00:08:28.276 A:middle
这个过程在后台进行

00:08:28.276 --> 00:08:29.696 A:middle
发生在文稿浏览器

00:08:29.696 --> 00:08:30.726 A:middle
运行之前

00:08:32.126 --> 00:08:33.416 A:middle
你要做的第一件事

00:08:33.486 --> 00:08:35.836 A:middle
就是必须将你的工作集

00:08:35.836 --> 00:08:38.186 A:middle
从服务器上同步至

00:08:38.186 --> 00:08:39.025 A:middle
设备上

00:08:39.346 --> 00:08:40.596 A:middle
仔细看那些

00:08:40.596 --> 00:08:41.626 A:middle
File Provider 扩展框

00:08:42.436 --> 00:08:45.046 A:middle
我们要求你

00:08:45.046 --> 00:08:47.856 A:middle
为在设备上的工作集中的所有文件

00:08:47.856 --> 00:08:49.176 A:middle
保存一个

00:08:49.176 --> 00:08:49.636 A:middle
包含元数据的数据库

00:08:49.636 --> 00:08:51.276 A:middle
实际上 两个方向都应该同步

00:08:51.276 --> 00:08:53.026 A:middle
因为本地

00:08:53.136 --> 00:08:54.066 A:middle
和远程都会有变更出现

00:08:54.676 --> 00:08:56.676 A:middle
第二步 系统将会

00:08:56.676 --> 00:08:59.306 A:middle
从你的 File Provider 中

00:08:59.306 --> 00:09:00.866 A:middle
对工作集进行枚举

00:08:59.306 --> 00:09:00.866 A:middle
对工作集进行枚举

00:09:00.866 --> 00:09:02.116 A:middle
以此

00:09:02.116 --> 00:09:04.536 A:middle
来生成索引

00:09:06.006 --> 00:09:07.306 A:middle
这些都发生在后台

00:09:07.306 --> 00:09:09.086 A:middle
稍后 当 UI 出现时

00:09:09.086 --> 00:09:11.166 A:middle
系统将会枚举你的

00:09:11.166 --> 00:09:12.646 A:middle
工作集索引 在文稿浏览器中显示“最近”

00:09:12.646 --> 00:09:13.816 A:middle
而不会

00:09:13.816 --> 00:09:16.036 A:middle
唤醒你的

00:09:16.036 --> 00:09:17.346 A:middle
File Provider 扩展

00:09:17.346 --> 00:09:20.046 A:middle
好吧 我们要求

00:09:20.046 --> 00:09:20.966 A:middle
各位做的事情还不少

00:09:20.966 --> 00:09:22.446 A:middle
我们要求大家进行同步

00:09:22.446 --> 00:09:23.906 A:middle
将部分文稿

00:09:23.906 --> 00:09:24.516 A:middle
进行同步

00:09:25.626 --> 00:09:26.886 A:middle
如果你不进行部分同步的话

00:09:26.986 --> 00:09:28.176 A:middle
可能就要

00:09:29.016 --> 00:09:31.036 A:middle
将用户的所有文稿

00:09:31.036 --> 00:09:32.056 A:middle
都同步到设备上

00:09:32.376 --> 00:09:34.216 A:middle
你可能就会遇到

00:09:34.216 --> 00:09:36.116 A:middle
规模化问题

00:09:36.696 --> 00:09:37.406 A:middle
所以一定要考虑清楚再进行操作

00:09:39.956 --> 00:09:42.416 A:middle
目前为止

00:09:42.416 --> 00:09:45.406 A:middle
我们讲了两种浏览文稿

00:09:45.406 --> 00:09:46.366 A:middle
的方法

00:09:46.366 --> 00:09:48.256 A:middle
“最近”标签可以

00:09:48.256 --> 00:09:49.866 A:middle
显示工作集

00:09:49.866 --> 00:09:50.906 A:middle
它在后台同步至设备上

00:09:50.906 --> 00:09:53.026 A:middle
还有“浏览”标签

00:09:53.026 --> 00:09:55.166 A:middle
它是基于

00:09:55.166 --> 00:09:57.156 A:middle
对文件夹的线上枚举

00:09:57.666 --> 00:09:59.206 A:middle
接下来 我要请 Pierre

00:09:59.206 --> 00:10:00.776 A:middle
来给大家展示

00:09:59.206 --> 00:10:00.776 A:middle
来给大家展示

00:10:00.776 --> 00:10:01.886 A:middle
如何创建一个 File Provider 扩展

00:10:02.796 --> 00:10:04.256 A:middle
谢谢 Pierre

00:10:04.256 --> 00:10:05.576 A:middle
&gt;&gt; 谢谢 Jean-Gabriel

00:10:06.386 --> 00:10:09.076 A:middle
我们来看看如何

00:10:09.076 --> 00:10:10.756 A:middle
创建一个 File Provider 扩展

00:10:10.756 --> 00:10:12.966 A:middle
首先 我们要看看如何

00:10:12.966 --> 00:10:14.966 A:middle
先创建一个项目 然后是如何

00:10:14.966 --> 00:10:16.136 A:middle
提供一个单一条目 如何

00:10:16.496 --> 00:10:18.866 A:middle
枚举一系列的条目

00:10:18.866 --> 00:10:19.876 A:middle
然后

00:10:19.946 --> 00:10:22.016 A:middle
我会和大家一起

00:10:22.016 --> 00:10:26.006 A:middle
看看如何修改这些条目

00:10:26.006 --> 00:10:28.576 A:middle
提供自定义操作

00:10:28.576 --> 00:10:29.846 A:middle
以及一项十分强大的功能

00:10:29.846 --> 00:10:31.906 A:middle
就是向第三方应用程序

00:10:31.906 --> 00:10:33.616 A:middle
提供服务

00:10:33.616 --> 00:10:34.446 A:middle
这意味着什么呢

00:10:34.446 --> 00:10:35.876 A:middle
这意味着你的 File Provider 扩展

00:10:35.876 --> 00:10:37.626 A:middle
能够提供其自有的 API

00:10:37.626 --> 00:10:39.916 A:middle
也就是你自己的 API

00:10:39.916 --> 00:10:40.706 A:middle
给其它的第三方 App

00:10:41.696 --> 00:10:42.756 A:middle
这个功能棒极了

00:10:42.756 --> 00:10:44.296 A:middle
大家现在都该留下听我讲

00:10:44.296 --> 00:10:47.626 A:middle
或者回去后

00:10:48.656 --> 00:10:48.786 A:middle
在网上看看这个视频

00:10:49.896 --> 00:10:50.926 A:middle
从头创建一个

00:10:50.926 --> 00:10:52.186 A:middle
File Provider 扩展

00:10:52.186 --> 00:10:53.256 A:middle
十分简单

00:10:53.256 --> 00:10:55.196 A:middle
这是一个 Xcode 模板

00:10:55.656 --> 00:10:56.946 A:middle
File Provider Extension

00:10:56.946 --> 00:10:57.596 A:middle
只要点击一下它

00:10:57.596 --> 00:10:58.426 A:middle
一下就完成了

00:10:59.046 --> 00:11:00.366 A:middle
然后我们开始真正的工作

00:10:59.046 --> 00:11:00.366 A:middle
然后我们开始真正的工作

00:11:00.496 --> 00:11:01.466 A:middle
你需要将 NSFileProviderExtension

00:11:01.466 --> 00:11:03.016 A:middle
加入子类别

00:11:03.996 --> 00:11:06.146 A:middle
如果你已经有了一个

00:11:06.146 --> 00:11:07.896 A:middle
File Provider 扩展

00:11:07.896 --> 00:11:10.306 A:middle
在这种情况下

00:11:10.306 --> 00:11:12.746 A:middle
你应该将支持的枚举 Key

00:11:12.746 --> 00:11:13.586 A:middle
加入到你的 info.plist

00:11:13.966 --> 00:11:15.816 A:middle
这就相当于你告知系统

00:11:15.816 --> 00:11:17.676 A:middle
你想要用这个文件扩展

00:11:17.676 --> 00:11:19.736 A:middle
并且使用新的 UI

00:11:19.856 --> 00:11:21.976 A:middle
来打开文稿

00:11:23.056 --> 00:11:26.626 A:middle
这就是你应该

00:11:26.626 --> 00:11:28.296 A:middle
创建的 File Provider 扩展子类别

00:11:28.556 --> 00:11:30.326 A:middle
的主要部分

00:11:31.056 --> 00:11:32.586 A:middle
你的 File Provider 扩展子类别

00:11:32.586 --> 00:11:34.196 A:middle
将会发送

00:11:34.196 --> 00:11:35.856 A:middle
条目元数据

00:11:35.856 --> 00:11:37.636 A:middle
需要你执行

00:11:37.636 --> 00:11:39.226 A:middle
NSFileProvider 协议和

00:11:39.226 --> 00:11:42.806 A:middle
NSFileProviderItem

00:11:42.806 --> 00:11:43.296 A:middle
协议

00:11:44.116 --> 00:11:46.656 A:middle
那些条目将会通过

00:11:46.656 --> 00:11:50.056 A:middle
你提供的字符串被识别

00:11:50.056 --> 00:11:51.726 A:middle
然后通过文件网址

00:11:51.726 --> 00:11:53.306 A:middle
实体化在磁盘上

00:11:54.376 --> 00:11:58.716 A:middle
你的 File Provider 的

00:11:58.756 --> 00:12:01.286 A:middle
文件夹内容是通过执行

00:11:58.756 --> 00:12:01.286 A:middle
文件夹内容是通过执行

00:12:01.286 --> 00:12:02.936 A:middle
NSFileProviderEnumerator

00:12:02.936 --> 00:12:04.556 A:middle
来显示的

00:12:05.006 --> 00:12:07.176 A:middle
这个听起来很复杂

00:12:07.176 --> 00:12:07.666 A:middle
其实不然

00:12:08.296 --> 00:12:10.936 A:middle
在我们细致讲解之前

00:12:10.936 --> 00:12:12.116 A:middle
我们先看一下手头需要完成的

00:12:12.176 --> 00:12:14.096 A:middle
任务的大框架

00:12:14.096 --> 00:12:16.606 A:middle
在我们创建这些后

00:12:16.636 --> 00:12:18.526 A:middle
看一下

00:12:18.526 --> 00:12:20.046 A:middle
File Provider 扩展的结构

00:12:20.246 --> 00:12:21.476 A:middle
将会是如何的

00:12:22.046 --> 00:12:23.346 A:middle
第一项任务 我们需要为

00:12:23.346 --> 00:12:24.726 A:middle
一个特定的条目标识符

00:12:24.726 --> 00:12:25.666 A:middle
提供元数据

00:12:26.756 --> 00:12:28.966 A:middle
如果你有数据库的话

00:12:28.966 --> 00:12:30.516 A:middle
这个操作就很简单

00:12:30.516 --> 00:12:32.156 A:middle
所以 有一个数据库能帮你很多

00:12:32.296 --> 00:12:35.926 A:middle
然后 你需要将网址映射到

00:12:35.926 --> 00:12:36.876 A:middle
条目表标识符

00:12:36.876 --> 00:12:39.746 A:middle
这可能是

00:12:39.746 --> 00:12:40.486 A:middle
你的数据库中的一个分号

00:12:40.756 --> 00:12:43.186 A:middle
最后 你需要负责

00:12:43.186 --> 00:12:46.046 A:middle
管理磁盘储存

00:12:46.156 --> 00:12:48.186 A:middle
不论文稿对应的数据是

00:12:48.186 --> 00:12:50.106 A:middle
本地的还是线上的

00:12:50.836 --> 00:12:52.786 A:middle
这个是 File Provider 扩展

00:12:52.786 --> 00:12:53.816 A:middle
的第二部分

00:12:54.686 --> 00:12:57.076 A:middle
在磁盘储存中

00:12:57.076 --> 00:12:58.266 A:middle
当然 文件可能在这里

00:12:58.266 --> 00:13:01.396 A:middle
也可能不在

00:12:58.266 --> 00:13:01.396 A:middle
也可能不在

00:13:02.306 --> 00:13:04.186 A:middle
好的 我们已经看过基本的结构了

00:13:04.266 --> 00:13:06.296 A:middle
接下来看看如何

00:13:06.296 --> 00:13:06.786 A:middle
提供一个条目

00:13:06.876 --> 00:13:08.466 A:middle
提供一个条目

00:13:08.466 --> 00:13:08.866 A:middle
是什么意思呢

00:13:09.736 --> 00:13:11.216 A:middle
首先 你需要提供一个

00:13:11.216 --> 00:13:11.516 A:middle
文件网址

00:13:11.866 --> 00:13:15.016 A:middle
然后为你的条目提供

00:13:15.876 --> 00:13:17.306 A:middle
文件内容 元数据和缩略图

00:13:17.766 --> 00:13:19.236 A:middle
这就是你需要做的

00:13:20.016 --> 00:13:22.116 A:middle
你可能会问

00:13:22.116 --> 00:13:23.396 A:middle
我该怎么样提供一个文件网址呢

00:13:24.486 --> 00:13:26.856 A:middle
File Provider 可以直接操控

00:13:27.116 --> 00:13:29.246 A:middle
File Provider 条目

00:13:29.246 --> 00:13:31.006 A:middle
和 File Provider 条目标识符

00:13:31.006 --> 00:13:32.146 A:middle
但是不能直接操控文件网址

00:13:32.986 --> 00:13:35.986 A:middle
但是 基于文稿的 App

00:13:35.986 --> 00:13:40.386 A:middle
需要文件网址 所以我们需要

00:13:40.386 --> 00:13:43.076 A:middle
在二者间建立连接

00:13:43.616 --> 00:13:45.856 A:middle
我们举个例子

00:13:45.856 --> 00:13:47.156 A:middle
当用户在文件 App  中轻按一个文件时

00:13:47.156 --> 00:13:49.336 A:middle
文件 App  此时

00:13:49.566 --> 00:13:50.746 A:middle
只能访问

00:13:50.746 --> 00:13:51.916 A:middle
你的条目标识符

00:13:52.396 --> 00:13:53.416 A:middle
所以

00:13:53.416 --> 00:13:55.676 A:middle
在调用基于文稿的 App 前

00:13:55.676 --> 00:13:57.116 A:middle
首先需要

00:13:57.116 --> 00:13:58.216 A:middle
调用你的

00:13:58.216 --> 00:13:59.006 A:middle
File Provider 扩展分类别

00:14:00.196 --> 00:14:02.156 A:middle
带有标识符的 urlForItem

00:14:02.156 --> 00:14:04.336 A:middle
会被调用

00:14:04.336 --> 00:14:06.016 A:middle
然后你需要在你的数据库中查找

00:14:06.016 --> 00:14:08.076 A:middle
找到特定条目标识符

00:14:08.076 --> 00:14:09.306 A:middle
的网址

00:14:09.306 --> 00:14:11.146 A:middle
然后你将会

00:14:11.146 --> 00:14:12.736 A:middle
返回到

00:14:12.736 --> 00:14:12.926 A:middle
基于文稿的 App 中去

00:14:13.616 --> 00:14:15.176 A:middle
我不太确定系统会不会

00:14:15.176 --> 00:14:16.316 A:middle
帮你完成这项操作

00:14:16.316 --> 00:14:18.336 A:middle
不过你可以告知系统

00:14:18.336 --> 00:14:19.826 A:middle
基于文稿的 App 需要哪些条目

00:14:19.826 --> 00:14:20.046 A:middle
然后这一步就完成了

00:14:20.936 --> 00:14:22.236 A:middle
此时

00:14:22.236 --> 00:14:23.606 A:middle
基于文稿的 App 通过网址

00:14:23.606 --> 00:14:24.466 A:middle
打开一个文件

00:14:24.466 --> 00:14:25.856 A:middle
我之前讲过了

00:14:25.856 --> 00:14:27.496 A:middle
数据库网址和

00:14:27.496 --> 00:14:29.936 A:middle
条目标识符映射

00:14:29.936 --> 00:14:30.406 A:middle
相关的东西

00:14:30.406 --> 00:14:31.766 A:middle
我建议你

00:14:32.016 --> 00:14:33.616 A:middle
在文件网址中

00:14:33.616 --> 00:14:35.406 A:middle
添加条目标识符

00:14:36.436 --> 00:14:37.966 A:middle
这样的话就会提供很多便利

00:14:37.966 --> 00:14:40.636 A:middle
你可以不用进行数据库查找

00:14:40.636 --> 00:14:44.816 A:middle
也可以在重命名文件中

00:14:44.816 --> 00:14:45.586 A:middle
跟踪条目

00:14:45.586 --> 00:14:47.056 A:middle
另外 你也最好

00:14:47.056 --> 00:14:49.396 A:middle
在磁盘储存中

00:14:49.396 --> 00:14:50.086 A:middle
保存一个扁平列表

00:14:50.246 --> 00:14:51.326 A:middle
这样你就不需要复制

00:14:51.326 --> 00:14:53.146 A:middle
文件夹的层次结构

00:14:53.146 --> 00:14:54.446 A:middle
这个还是很复杂的

00:14:54.446 --> 00:14:55.926 A:middle
所以你最好还是保存一个扁平列表

00:14:56.286 --> 00:14:57.686 A:middle
可能你会问 Pierre

00:14:57.686 --> 00:14:59.336 A:middle
我们现在有了文件网址

00:14:59.336 --> 00:15:00.456 A:middle
那文件内容怎么办呢

00:14:59.336 --> 00:15:00.456 A:middle
那文件内容怎么办呢

00:15:00.456 --> 00:15:02.066 A:middle
因为我们之前不知道

00:15:02.066 --> 00:15:02.956 A:middle
它们到现在这个阶段还没出现呢

00:15:03.656 --> 00:15:05.496 A:middle
当然

00:15:05.496 --> 00:15:05.976 A:middle
我们这就来看这一点

00:15:05.976 --> 00:15:07.846 A:middle
当基于文稿的应用程序

00:15:07.846 --> 00:15:09.116 A:middle
打开你的文件时

00:15:09.586 --> 00:15:11.976 A:middle
它是通过网址

00:15:11.976 --> 00:15:13.996 A:middle
来打开文件的

00:15:15.266 --> 00:15:18.386 A:middle
但是 它不是直接进行的

00:15:18.456 --> 00:15:19.416 A:middle
它会使用

00:15:19.486 --> 00:15:23.106 A:middle
NSFileCoordinator 然后使用文件协调请求

00:15:23.106 --> 00:15:24.486 A:middle
来读取

00:15:24.936 --> 00:15:27.086 A:middle
这是 App 可以免费

00:15:27.086 --> 00:15:29.766 A:middle
使用的 UI 文稿

00:15:29.766 --> 00:15:31.336 A:middle
然后 你的 File Provider 扩展

00:15:31.336 --> 00:15:32.406 A:middle
就会被调用

00:15:33.716 --> 00:15:34.756 A:middle
明确的说

00:15:34.756 --> 00:15:37.396 A:middle
在你的子类别中

00:15:37.396 --> 00:15:39.306 A:middle
带有 completionHandler 的网址的

00:15:39.306 --> 00:15:40.116 A:middle
startProvidingItem 将会被调用

00:15:41.056 --> 00:15:41.736 A:middle
然后 你查看

00:15:41.736 --> 00:15:43.596 A:middle
你自己的磁盘储存

00:15:43.596 --> 00:15:44.946 A:middle
发现条目

00:15:44.946 --> 00:15:45.236 A:middle
并不在那里

00:15:46.116 --> 00:15:48.456 A:middle
然后你去服务器那里

00:15:48.456 --> 00:15:50.636 A:middle
最有可能是使用 NSURLSession

00:15:50.636 --> 00:15:51.406 A:middle
把文件下载下来

00:15:52.016 --> 00:15:53.816 A:middle
下载完成

00:15:55.086 --> 00:15:58.546 A:middle
文件就移动到

00:15:58.736 --> 00:15:59.336 A:middle
你的磁盘储存中了

00:16:00.526 --> 00:16:01.606 A:middle
现在 你可以调用

00:16:01.606 --> 00:16:03.876 A:middle
completionHandler 它帮你

00:16:03.876 --> 00:16:05.276 A:middle
为基于文稿的 App 提供

00:16:05.626 --> 00:16:07.016 A:middle
NSFileCoodination

00:16:07.296 --> 00:16:09.256 A:middle
然后

00:16:09.256 --> 00:16:09.576 A:middle
就可以打开文件了

00:16:10.566 --> 00:16:12.556 A:middle
如果你下一次又有需要时

00:16:12.556 --> 00:16:13.826 A:middle
会发生什么呢

00:16:14.146 --> 00:16:15.726 A:middle
因为这次的时候

00:16:15.726 --> 00:16:16.136 A:middle
文件就已经在那里了

00:16:17.206 --> 00:16:20.456 A:middle
不过 还是需要

00:16:20.456 --> 00:16:22.586 A:middle
发送一个

00:16:22.886 --> 00:16:23.396 A:middle
文件协调读取请求

00:16:23.736 --> 00:16:25.396 A:middle
到目前为止

00:16:25.396 --> 00:16:25.956 A:middle
一切都很顺利

00:16:26.286 --> 00:16:27.566 A:middle
你的

00:16:27.566 --> 00:16:28.756 A:middle
File Provider 扩展子类别

00:16:28.756 --> 00:16:29.056 A:middle
将再次被调用

00:16:29.056 --> 00:16:30.716 A:middle
这个功能很强大

00:16:30.716 --> 00:16:32.966 A:middle
你就可以跟踪文件的使用

00:16:33.706 --> 00:16:35.176 A:middle
但是这次 文件已经在这里了

00:16:35.176 --> 00:16:36.186 A:middle
你需要怎么做呢

00:16:36.256 --> 00:16:36.896 A:middle
你只要

00:16:36.896 --> 00:16:38.286 A:middle
使用 completionHandler

00:16:38.286 --> 00:16:38.536 A:middle
就可以了

00:16:38.726 --> 00:16:40.896 A:middle
这个很强大

00:16:40.896 --> 00:16:42.556 A:middle
不过同时 这意味着你的

00:16:42.556 --> 00:16:44.026 A:middle
File Provider 扩展

00:16:44.106 --> 00:16:46.856 A:middle
有可能减慢文件的加载速度

00:16:47.096 --> 00:16:49.606 A:middle
所以 如果你的文件已经在本地

00:16:50.286 --> 00:16:52.586 A:middle
你要应用程序 startProvidingItem

00:16:52.586 --> 00:16:53.826 A:middle
你的速度最好够快

00:16:53.826 --> 00:16:56.466 A:middle
接着 NSFileCoordination

00:16:56.466 --> 00:16:58.766 A:middle
被授权 这点你们刚才已经

00:16:58.766 --> 00:16:59.176 A:middle
看过了

00:16:59.176 --> 00:17:00.286 A:middle
现在文件就被打开了

00:16:59.176 --> 00:17:00.286 A:middle
现在文件就被打开了

00:17:02.076 --> 00:17:02.816 A:middle
第二部分

00:17:03.126 --> 00:17:06.496 A:middle
在文件 App 中 文件的元数据

00:17:06.496 --> 00:17:07.715 A:middle
是十分重要的

00:17:07.715 --> 00:17:10.526 A:middle
其运作方法是这样的：

00:17:10.526 --> 00:17:12.836 A:middle
对于文件所展示的每一个条目

00:17:12.836 --> 00:17:14.756 A:middle
你的 File Provider 都会

00:17:14.756 --> 00:17:16.955 A:middle
被调用

00:17:16.955 --> 00:17:18.445 A:middle
更精确的说 这次要用的方法

00:17:18.445 --> 00:17:20.685 A:middle
叫做 itemIdentifier

00:17:21.215 --> 00:17:22.016 A:middle
它可以

00:17:22.016 --> 00:17:23.165 A:middle
传回一个 NSFileProviderItem

00:17:23.246 --> 00:17:25.415 A:middle
这个条目

00:17:25.415 --> 00:17:26.455 A:middle
应该从你的数据库中获取

00:17:26.455 --> 00:17:30.116 A:middle
在数据库中

00:17:31.216 --> 00:17:32.916 A:middle
你获得 NSFileProviderItem

00:17:33.146 --> 00:17:35.426 A:middle
然后你将其传回

00:17:36.836 --> 00:17:39.706 A:middle
这个听起来很简单

00:17:39.706 --> 00:17:41.156 A:middle
不过我还没有讲到细节部分

00:17:41.156 --> 00:17:42.536 A:middle
到底什么是

00:17:42.536 --> 00:17:43.416 A:middle
NSFileProviderItem 呢

00:17:43.416 --> 00:17:45.846 A:middle
其实就像我刚才说过的

00:17:45.846 --> 00:17:46.666 A:middle
它就是个协议

00:17:46.666 --> 00:17:49.146 A:middle
像大多数协议一样

00:17:50.066 --> 00:17:52.276 A:middle
它有必填属性和

00:17:52.396 --> 00:17:53.266 A:middle
可选属性

00:17:53.266 --> 00:17:54.706 A:middle
我们先详细讲一下

00:17:54.706 --> 00:17:56.536 A:middle
必填属性

00:17:56.536 --> 00:17:58.746 A:middle
这是你的对象适配

00:17:58.746 --> 00:18:00.376 A:middle
NSFileProviderItem

00:17:58.746 --> 00:18:00.376 A:middle
NSFileProviderItem

00:18:00.376 --> 00:18:00.756 A:middle
必须要应用到的

00:18:01.266 --> 00:18:03.366 A:middle
第一个属性一般是

00:18:03.366 --> 00:18:04.726 A:middle
itemIdentifier

00:18:04.806 --> 00:18:05.946 A:middle
一个简单的字符串

00:18:06.726 --> 00:18:07.666 A:middle
然后是

00:18:07.666 --> 00:18:09.476 A:middle
typeIdentifier 这是一个 UTI

00:18:09.476 --> 00:18:11.596 A:middle
表明文件是

00:18:11.596 --> 00:18:15.016 A:middle
一个 PDF 文件 一个图像或是一个文件夹

00:18:15.016 --> 00:18:19.106 A:middle
最后一项要点

00:18:19.106 --> 00:18:20.926 A:middle
是 Filename

00:18:20.926 --> 00:18:22.256 A:middle
它在 UI 中很重要

00:18:22.256 --> 00:18:27.186 A:middle
现在我们已经讲完

00:18:27.186 --> 00:18:28.586 A:middle
必要属性

00:18:28.586 --> 00:18:30.236 A:middle
这些都是你需要使用的

00:18:30.236 --> 00:18:31.496 A:middle
我们可以继续讲可选属性

00:18:31.496 --> 00:18:33.456 A:middle
我们强烈

00:18:33.456 --> 00:18:36.096 A:middle
建议大家也要应用

00:18:36.216 --> 00:18:39.676 A:middle
比如

00:18:39.676 --> 00:18:43.886 A:middle
在这张屏幕快照上

00:18:43.886 --> 00:18:46.906 A:middle
在文件名的下面

00:18:46.906 --> 00:18:48.926 A:middle
清楚的显示了其分享的状态

00:18:49.326 --> 00:18:51.296 A:middle
如果你设置了 isShared 属性的话

00:18:51.296 --> 00:18:53.056 A:middle
这一分享状态

00:18:53.056 --> 00:18:53.606 A:middle
就会显示出来

00:18:53.956 --> 00:18:56.036 A:middle
和分享状态一起的

00:18:56.036 --> 00:18:56.916 A:middle
你也可以使用 ownerNameComponents

00:18:56.916 --> 00:18:58.826 A:middle
来更加

00:18:58.826 --> 00:18:59.416 A:middle
明确地显示

00:19:00.076 --> 00:19:01.106 A:middle
现在 你们就能在我的

00:19:01.106 --> 00:19:02.316 A:middle
幻灯片上看到

00:19:02.316 --> 00:19:05.376 A:middle
“由 Amaury 分享”,

00:19:05.566 --> 00:19:05.633 A:middle
知道这个信息还是很棒的

00:19:05.633 --> 00:19:06.826 A:middle
此外 你还可以添加其它的状态

00:19:06.826 --> 00:19:08.526 A:middle
比如 isDownloaded

00:19:08.526 --> 00:19:10.946 A:middle
这样就会出现一个小的向下的箭头

00:19:11.266 --> 00:19:13.386 A:middle
还有 isUploading 和 uploadError

00:19:13.386 --> 00:19:14.066 A:middle
uploadError 很有意思

00:19:14.066 --> 00:19:16.106 A:middle
如果你的用户实际上

00:19:16.106 --> 00:19:16.856 A:middle
无法上传文件

00:19:16.856 --> 00:19:19.086 A:middle
你可能不会

00:19:19.086 --> 00:19:20.496 A:middle
定位

00:19:20.496 --> 00:19:20.686 A:middle
这个错误

00:19:21.196 --> 00:19:22.906 A:middle
我们已经看到了

00:19:22.906 --> 00:19:24.006 A:middle
很多额外的属性

00:19:24.076 --> 00:19:25.346 A:middle
遗憾的是

00:19:25.396 --> 00:19:27.036 A:middle
我们没有时间去浏览全部的属性

00:19:27.466 --> 00:19:29.316 A:middle
我们继续讲下去

00:19:29.316 --> 00:19:30.886 A:middle
不过我建议大家读一下我们的文稿

00:19:30.886 --> 00:19:32.126 A:middle
里面有关于这个主题

00:19:32.126 --> 00:19:34.146 A:middle
的详尽解释

00:19:34.146 --> 00:19:35.396 A:middle
以及我们的头文件

00:19:35.726 --> 00:19:37.216 A:middle
我们已经谈过

00:19:37.216 --> 00:19:38.776 A:middle
元数据

00:19:38.776 --> 00:19:40.106 A:middle
不过其中还有一点是我们没有讲到的

00:19:40.106 --> 00:19:41.246 A:middle
还是很重要的一点

00:19:41.246 --> 00:19:43.036 A:middle
它使用的是一个不同的

00:19:43.036 --> 00:19:43.536 A:middle
传输途径

00:19:43.816 --> 00:19:44.746 A:middle
它就是缩略图

00:19:45.626 --> 00:19:46.866 A:middle
当文件 App 显示

00:19:46.866 --> 00:19:48.436 A:middle
你的文件时 尤其是

00:19:48.436 --> 00:19:49.796 A:middle
那些本地文件 在这种情况下

00:19:49.796 --> 00:19:51.026 A:middle
我们不可能

00:19:51.026 --> 00:19:52.906 A:middle
为文件生成一个缩略图

00:19:52.906 --> 00:19:55.126 A:middle
需要进行的操作就是

00:19:55.126 --> 00:19:56.636 A:middle
让 File Provider 扩展

00:19:56.636 --> 00:19:58.156 A:middle
抓取一系列文件

00:19:58.156 --> 00:20:00.076 A:middle
的缩略图

00:19:58.156 --> 00:20:00.076 A:middle
的缩略图

00:20:00.756 --> 00:20:02.846 A:middle
这样 你就可以去服务器中

00:20:02.846 --> 00:20:04.346 A:middle
请求下载

00:20:04.526 --> 00:20:05.846 A:middle
和文件相关的

00:20:05.846 --> 00:20:06.366 A:middle
缩略图

00:20:07.516 --> 00:20:09.006 A:middle
当下载完成后

00:20:09.006 --> 00:20:10.476 A:middle
你就可以传回缩略图数据

00:20:10.526 --> 00:20:13.746 A:middle
这样

00:20:14.026 --> 00:20:17.216 A:middle
就可以显示缩略图了

00:20:18.196 --> 00:20:19.896 A:middle
接下来 我要详细讲讲

00:20:19.896 --> 00:20:21.606 A:middle
抓取缩略图的原理

00:20:21.606 --> 00:20:22.846 A:middle
这个功能相对于

00:20:22.846 --> 00:20:24.146 A:middle
其它的功能而言

00:20:24.146 --> 00:20:24.486 A:middle
更复杂一些

00:20:25.706 --> 00:20:27.996 A:middle
首先 屏幕上显示的是

00:20:27.996 --> 00:20:29.376 A:middle
File Provider 扩展

00:20:29.376 --> 00:20:29.936 A:middle
子类别

00:20:30.626 --> 00:20:32.986 A:middle
这个 File Provider 扩展

00:20:32.986 --> 00:20:34.066 A:middle
子类别叫做

00:20:34.066 --> 00:20:35.436 A:middle
MyFileProviderExtension

00:20:35.436 --> 00:20:36.876 A:middle
然后 如果你要

00:20:36.876 --> 00:20:37.986 A:middle
覆盖 fetchThumbnail 功能

00:20:38.576 --> 00:20:39.896 A:middle
需要一系列的

00:20:39.896 --> 00:20:40.786 A:middle
条目标识符

00:20:40.786 --> 00:20:41.376 A:middle
为什么是一系列呢

00:20:41.506 --> 00:20:42.696 A:middle
因为出于性能的考虑

00:20:42.696 --> 00:20:45.076 A:middle
我们想要批量的处理

00:20:45.076 --> 00:20:46.616 A:middle
这样就不需要为了每个缩略图

00:20:46.616 --> 00:20:47.406 A:middle
去访问服务器了

00:20:48.606 --> 00:20:50.326 A:middle
然后是 requestedSize

00:20:50.616 --> 00:20:52.396 A:middle
perThumbnailCompletionHandler

00:20:52.396 --> 00:20:53.446 A:middle
和一个整体的

00:20:53.446 --> 00:20:54.376 A:middle
completionHandler

00:20:54.376 --> 00:20:57.056 A:middle
你要做的第一件事

00:20:57.056 --> 00:20:58.876 A:middle
其实是要创建一个

00:20:58.876 --> 00:20:59.206 A:middle
Progress 对象

00:20:59.426 --> 00:21:01.226 A:middle
创建这个并不

00:20:59.426 --> 00:21:01.226 A:middle
创建这个并不

00:21:01.226 --> 00:21:03.146 A:middle
完全是出于报告的考虑

00:21:03.146 --> 00:21:05.196 A:middle
而是在当

00:21:05.356 --> 00:21:07.726 A:middle
缩略图请求被取消时

00:21:07.726 --> 00:21:08.726 A:middle
比如当用户不再使用文件 App 的时候

00:21:08.726 --> 00:21:10.556 A:middle
你就能够了解到这一情况

00:21:10.556 --> 00:21:11.726 A:middle
然后就可以

00:21:11.726 --> 00:21:12.726 A:middle
或者说就必须要

00:21:12.726 --> 00:21:13.956 A:middle
取消掉

00:21:13.956 --> 00:21:14.836 A:middle
你的缩略图请求

00:21:17.176 --> 00:21:18.426 A:middle
现在 想象你使用下载任务

00:21:18.426 --> 00:21:20.236 A:middle
从服务器上

00:21:20.596 --> 00:21:22.216 A:middle
下载了文件

00:21:23.196 --> 00:21:24.976 A:middle
对于每一个缩略图

00:21:24.976 --> 00:21:26.076 A:middle
你都有已经下载到的文件 UI

00:21:26.076 --> 00:21:27.466 A:middle
然后你对其进行映射操作

00:21:27.966 --> 00:21:29.216 A:middle
在这里一定不要

00:21:29.216 --> 00:21:29.956 A:middle
分配内存

00:21:29.956 --> 00:21:31.666 A:middle
所以 我建议使用

00:21:31.666 --> 00:21:32.846 A:middle
alwaysMapped  选项

00:21:33.876 --> 00:21:35.466 A:middle
最后 你调用

00:21:35.466 --> 00:21:36.846 A:middle
perThumbnailCompletionHandler

00:21:37.376 --> 00:21:39.476 A:middle
其实这个不是最后一步

00:21:39.476 --> 00:21:40.846 A:middle
真正的最后一步是这个

00:21:41.176 --> 00:21:42.766 A:middle
你调用整体的

00:21:42.766 --> 00:21:43.556 A:middle
completionHandler

00:21:43.556 --> 00:21:46.286 A:middle
要记住一件事 不论是在

00:21:46.286 --> 00:21:48.086 A:middle
成功 失败 还是取消的情况下

00:21:48.086 --> 00:21:50.656 A:middle
你都需要调用它

00:21:51.176 --> 00:21:53.446 A:middle
现在你就可以回传

00:21:53.446 --> 00:21:54.486 A:middle
progress 对象 然后系统

00:21:54.486 --> 00:21:56.366 A:middle
就能够取消你的

00:21:56.366 --> 00:21:57.166 A:middle
缩略图请求了

00:21:58.346 --> 00:21:59.026 A:middle
干得不错

00:21:59.026 --> 00:22:00.456 A:middle
现在我们已经知道了

00:21:59.026 --> 00:22:00.456 A:middle
现在我们已经知道了

00:22:00.456 --> 00:22:00.866 A:middle
如何提供一个条目

00:22:00.866 --> 00:22:02.106 A:middle
接下来 我们继续讲下一个话题

00:22:02.106 --> 00:22:04.906 A:middle
就是如何枚举

00:22:04.906 --> 00:22:05.236 A:middle
条目

00:22:06.086 --> 00:22:08.476 A:middle
枚举条目

00:22:08.476 --> 00:22:10.396 A:middle
就是向我屏幕快照上的文件 App

00:22:10.396 --> 00:22:12.676 A:middle
提供数据

00:22:12.676 --> 00:22:14.226 A:middle
就像我这张屏幕快照上

00:22:14.416 --> 00:22:14.826 A:middle
显示的

00:22:14.906 --> 00:22:17.926 A:middle
接下来我们要看看如何

00:22:17.926 --> 00:22:19.856 A:middle
给条目标页数 同步变更

00:22:20.536 --> 00:22:22.026 A:middle
进行推送通知

00:22:22.026 --> 00:22:23.116 A:middle
还有标志变更

00:22:24.096 --> 00:22:26.896 A:middle
枚举条目是

00:22:26.896 --> 00:22:27.116 A:middle
这样进行的

00:22:27.646 --> 00:22:29.736 A:middle
文件 App 启动

00:22:29.736 --> 00:22:31.076 A:middle
请求一页的条目

00:22:32.066 --> 00:22:33.136 A:middle
你的 File Provider 扩展

00:22:33.136 --> 00:22:34.196 A:middle
传回第一页

00:22:36.366 --> 00:22:37.626 A:middle
然后就结束了

00:22:37.626 --> 00:22:38.516 A:middle
屏幕上还有些空间

00:22:38.516 --> 00:22:39.946 A:middle
就继续

00:22:39.946 --> 00:22:40.876 A:middle
再请求一页

00:22:41.486 --> 00:22:44.186 A:middle
就这样反复运作

00:22:44.186 --> 00:22:44.866 A:middle
直到完成所有的

00:22:45.896 --> 00:22:47.326 A:middle
你可能会问

00:22:47.326 --> 00:22:48.576 A:middle
我们为什么要标页数呢

00:22:49.076 --> 00:22:50.676 A:middle
这些到底是为了干什么呢

00:22:51.306 --> 00:22:52.986 A:middle
你需要了解

00:22:52.986 --> 00:22:54.736 A:middle
你的扩展只被授予你的应用程序

00:22:54.736 --> 00:22:57.126 A:middle
被授予内存中的

00:22:57.316 --> 00:22:57.916 A:middle
一小部分

00:22:58.246 --> 00:23:02.586 A:middle
如果你的应用程序被授予的内存是这里显示的蓝色部分

00:22:58.246 --> 00:23:02.586 A:middle
如果你的应用程序被授予的内存是这里显示的蓝色部分

00:23:03.026 --> 00:23:04.176 A:middle
你的扩展只是这小小的灰色部分

00:23:04.656 --> 00:23:06.026 A:middle
你甚至在屏幕上都看不到它

00:23:06.746 --> 00:23:08.966 A:middle
你需要注意

00:23:08.966 --> 00:23:11.906 A:middle
在这个限制下

00:23:11.906 --> 00:23:13.226 A:middle
如果你分配的内存

00:23:13.226 --> 00:23:15.336 A:middle
超过你拥有的

00:23:15.396 --> 00:23:16.656 A:middle
你的扩展将会被终止

00:23:16.656 --> 00:23:18.156 A:middle
所以 我们强烈建议你

00:23:18.156 --> 00:23:19.826 A:middle
这就是为什么要进行标页数

00:23:19.826 --> 00:23:22.596 A:middle
的原因 就是要防止

00:23:22.596 --> 00:23:23.816 A:middle
你的内存分配达到峰值

00:23:24.646 --> 00:23:27.196 A:middle
我接下来想要讲几个

00:23:27.196 --> 00:23:29.376 A:middle
小贴士 我们觉得很有用

00:23:29.376 --> 00:23:30.686 A:middle
也希望你们

00:23:30.686 --> 00:23:31.136 A:middle
也能从中受益

00:23:31.906 --> 00:23:33.976 A:middle
不要使用 URLSessionDataTask

00:23:34.086 --> 00:23:35.746 A:middle
最好用 URLSessionDownloadTask 和

00:23:35.746 --> 00:23:36.756 A:middle
URLSessionUploadTask

00:23:36.756 --> 00:23:38.566 A:middle
因为它们可以操控文件

00:23:38.566 --> 00:23:40.106 A:middle
所以它们就不需要内存分配了

00:23:41.266 --> 00:23:42.866 A:middle
使用 DispatchQueue

00:23:42.866 --> 00:23:44.806 A:middle
autoreleaseFrequency 为 always

00:23:44.996 --> 00:23:46.846 A:middle
不然的话 你的内存将达峰值

00:23:46.846 --> 00:23:49.056 A:middle
因为有太多的内存分配到了

00:23:49.056 --> 00:23:50.036 A:middle
你的自动释放池中

00:23:51.116 --> 00:23:52.876 A:middle
最后

00:23:52.876 --> 00:23:55.246 A:middle
如果有循环的话

00:23:55.246 --> 00:23:56.906 A:middle
记住要使用

00:23:57.016 --> 00:23:57.666 A:middle
« while () @autoreleasepool {} »

00:23:59.046 --> 00:24:01.006 A:middle
我们没有时间

00:23:59.046 --> 00:24:01.006 A:middle
我们没有时间

00:24:01.046 --> 00:24:02.586 A:middle
去讲更多的细节了

00:24:03.086 --> 00:24:05.236 A:middle
所以 大家可以

00:24:05.236 --> 00:24:07.686 A:middle
之后来看看这一部分的内容

00:24:07.686 --> 00:24:08.996 A:middle
网上也有不少

00:24:08.996 --> 00:24:10.076 A:middle
大家可以稍后查看

00:24:10.716 --> 00:24:12.616 A:middle
我们返回到枚举条目

00:24:12.616 --> 00:24:12.986 A:middle
这一部分

00:24:13.216 --> 00:24:15.106 A:middle
在你的文件 App 上

00:24:15.106 --> 00:24:15.726 A:middle
你已经打开了一个文件夹

00:24:16.396 --> 00:24:18.606 A:middle
这将会调用你的

00:24:18.606 --> 00:24:20.856 A:middle
File Provider 扩展子类别

00:24:20.856 --> 00:24:22.356 A:middle
然后要求你为一个特定的条目标识符

00:24:22.356 --> 00:24:24.566 A:middle
提供一个枚举器

00:24:25.216 --> 00:24:27.626 A:middle
然后

00:24:27.626 --> 00:24:28.966 A:middle
你将定位你的 NSFileProvider

00:24:28.966 --> 00:24:30.876 A:middle
枚举器 然后传回给我们

00:24:31.656 --> 00:24:32.956 A:middle
文件 App 将会储存这个

00:24:32.956 --> 00:24:33.456 A:middle
枚举器

00:24:33.456 --> 00:24:35.176 A:middle
下一步 就是

00:24:35.176 --> 00:24:38.096 A:middle
要求你提供

00:24:38.096 --> 00:24:39.726 A:middle
条目的 initialPage

00:24:43.806 --> 00:24:45.586 A:middle
这次在你的枚举器上

00:24:45.586 --> 00:24:47.366 A:middle
你收到一个回调函数

00:24:47.366 --> 00:24:48.796 A:middle
叫做 enumerateItems

00:24:48.796 --> 00:24:50.316 A:middle
(for observer: ,startingAt page:)

00:24:51.096 --> 00:24:54.336 A:middle
你找到

00:24:54.336 --> 00:24:56.426 A:middle
第一页上的条目

00:24:56.646 --> 00:24:57.486 A:middle
你将其传回

00:24:58.196 --> 00:24:58.996 A:middle
然后 枚举的操作

00:24:58.996 --> 00:24:59.826 A:middle
就完成了

00:24:59.826 --> 00:25:01.596 A:middle
这里是我的第二页

00:24:59.826 --> 00:25:01.596 A:middle
这里是我的第二页

00:25:03.696 --> 00:25:04.286 A:middle
不错

00:25:04.346 --> 00:25:05.516 A:middle
我们已经枚举了一页

00:25:05.606 --> 00:25:06.946 A:middle
如果文件有

00:25:06.946 --> 00:25:08.086 A:middle
更多的条目的话

00:25:08.086 --> 00:25:09.866 A:middle
这样的流程会继续进行

00:25:09.866 --> 00:25:11.716 A:middle
它会要求你通过同样的机制

00:25:11.716 --> 00:25:12.546 A:middle
提供更多页

00:25:13.566 --> 00:25:16.326 A:middle
我们来回顾一下

00:25:16.326 --> 00:25:17.336 A:middle
刚刚讲过的不同的方法

00:25:17.586 --> 00:25:19.736 A:middle
第一个方法

00:25:19.736 --> 00:25:20.596 A:middle
在你的 NSFileProviderExtension

00:25:20.596 --> 00:25:21.896 A:middle
的子类别中

00:25:21.896 --> 00:25:23.066 A:middle
叫做

00:25:23.066 --> 00:25:24.816 A:middle
enumerator forContainer itemIdentifier

00:25:24.886 --> 00:25:26.946 A:middle
然后它返回一个符合

00:25:26.946 --> 00:25:28.466 A:middle
NSFileProviderEnumerator 的对象

00:25:28.466 --> 00:25:30.976 A:middle
itemIdentifier 可以是以下的某一个

00:25:31.046 --> 00:25:33.506 A:middle
工作集 如果是枚举“最近”的话

00:25:33.506 --> 00:25:35.106 A:middle
刚才 Jean-Gabriel 已经

00:25:35.106 --> 00:25:37.026 A:middle
讲过了

00:25:37.026 --> 00:25:37.666 A:middle
或者是 rootContainer

00:25:39.076 --> 00:25:41.566 A:middle
最后 它也可能是你的文件夹中

00:25:41.566 --> 00:25:42.986 A:middle
任何你之前回传过的

00:25:43.096 --> 00:25:45.346 A:middle
条目标识符

00:25:45.346 --> 00:25:46.576 A:middle
另外一个

00:25:46.916 --> 00:25:47.916 A:middle
功能是在

00:25:47.916 --> 00:25:49.546 A:middle
NSFileProviderEnumerator 上

00:25:49.956 --> 00:25:51.776 A:middle
就是 enumerateItems for

00:25:51.776 --> 00:25:53.166 A:middle
Observer 直接按照 page 枚举

00:25:54.336 --> 00:25:57.246 A:middle
Observer 是一个系统对象

00:25:57.246 --> 00:26:00.386 A:middle
我们刚刚看到了

00:25:57.246 --> 00:26:00.386 A:middle
我们刚刚看到了

00:26:00.386 --> 00:26:03.086 A:middle
是一个显示 接收你的条目和下一页的

00:26:03.276 --> 00:26:04.256 A:middle
系统对象

00:26:04.896 --> 00:26:07.456 A:middle
而 page 是一个简单的 Blob 数据

00:26:08.396 --> 00:26:10.286 A:middle
它有其类型 不过还是

00:26:10.286 --> 00:26:13.166 A:middle
一个简单的 Blob 数据

00:26:13.166 --> 00:26:15.406 A:middle
你可以自由

00:26:15.406 --> 00:26:17.156 A:middle
决定其中所包含的

00:26:17.156 --> 00:26:19.336 A:middle
只要不超过 500

00:26:19.336 --> 00:26:19.696 A:middle
字节就可以

00:26:19.916 --> 00:26:21.496 A:middle
一般放在里面的

00:26:21.496 --> 00:26:23.496 A:middle
就是页的索引 1 2 3 4 5

00:26:23.496 --> 00:26:25.366 A:middle
或者

00:26:25.566 --> 00:26:27.916 A:middle
是其它类似的

00:26:28.936 --> 00:26:30.476 A:middle
对于第一页来说

00:26:30.476 --> 00:26:32.396 A:middle
它可以是按照日期或者名字排列

00:26:32.396 --> 00:26:33.986 A:middle
的任何首页

00:26:33.986 --> 00:26:37.006 A:middle
取决于 UI

00:26:38.856 --> 00:26:39.166 A:middle
的展示

00:26:39.166 --> 00:26:40.956 A:middle
我们返回到

00:26:40.956 --> 00:26:43.126 A:middle
你们刚才看过的这张幻灯片

00:26:43.866 --> 00:26:46.116 A:middle
我们刚刚加的

00:26:46.116 --> 00:26:47.266 A:middle
至关重要的一点

00:26:47.266 --> 00:26:49.116 A:middle
就是枚举文件夹和

00:26:49.116 --> 00:26:49.766 A:middle
工作集

00:26:50.566 --> 00:26:51.616 A:middle
我们有两种

00:26:51.616 --> 00:26:54.416 A:middle
枚举器

00:26:54.416 --> 00:26:55.296 A:middle
正如你在屏幕上看到的

00:26:55.756 --> 00:26:58.436 A:middle
我现在想要退回来讲一下

00:26:58.436 --> 00:26:59.446 A:middle
其实是要重点说明一下

00:26:59.446 --> 00:27:01.676 A:middle
这两类的区别所在

00:26:59.446 --> 00:27:01.676 A:middle
这两类的区别所在

00:27:02.426 --> 00:27:04.296 A:middle
对于文件夹枚举器

00:27:04.296 --> 00:27:06.316 A:middle
一般都是直接

00:27:06.316 --> 00:27:07.626 A:middle
枚举云端数据

00:27:08.146 --> 00:27:09.646 A:middle
就像这样

00:27:09.926 --> 00:27:12.556 A:middle
如果想要的话

00:27:12.556 --> 00:27:12.896 A:middle
你可以进行缓存

00:27:12.896 --> 00:27:13.596 A:middle
这个取决于你

00:27:13.596 --> 00:27:14.206 A:middle
你自己决定

00:27:14.586 --> 00:27:16.686 A:middle
但是 工作集枚举器

00:27:17.236 --> 00:27:19.666 A:middle
就很不一样了

00:27:20.006 --> 00:27:21.866 A:middle
你需要枚举

00:27:21.866 --> 00:27:24.046 A:middle
本地工作集的拷贝

00:27:24.796 --> 00:27:26.466 A:middle
而不是云端数据

00:27:27.646 --> 00:27:28.606 A:middle
只是你的工作集

00:27:29.806 --> 00:27:31.896 A:middle
主要原因 是因为

00:27:31.896 --> 00:27:33.966 A:middle
你的工作集必须

00:27:33.966 --> 00:27:34.636 A:middle
能够离线运行

00:27:34.636 --> 00:27:36.216 A:middle
这个条目就是工作集

00:27:36.216 --> 00:27:37.276 A:middle
而工作集必须能够

00:27:37.276 --> 00:27:38.376 A:middle
离线访问也能够

00:27:38.376 --> 00:27:38.766 A:middle
离线运行

00:27:39.036 --> 00:27:42.826 A:middle
我想要再

00:27:42.866 --> 00:27:44.136 A:middle
重复一下 因为有些点

00:27:44.136 --> 00:27:47.366 A:middle
可能并不是显而易见的

00:27:47.936 --> 00:27:50.656 A:middle
我再重复一下

00:27:51.216 --> 00:27:53.716 A:middle
工作集枚举器 一定不能

00:27:53.796 --> 00:27:54.516 A:middle
读取云数据

00:27:54.876 --> 00:27:56.636 A:middle
而文件夹枚举器是可以的

00:27:57.656 --> 00:27:58.786 A:middle
然后工作集枚举器一定需要

00:27:58.826 --> 00:28:00.536 A:middle
读取数据库

00:27:58.826 --> 00:28:00.536 A:middle
读取数据库

00:28:00.536 --> 00:28:01.906 A:middle
对于文件夹枚举器如果你想要

00:28:01.906 --> 00:28:02.486 A:middle
缓存它们的话也可以

00:28:02.486 --> 00:28:02.946 A:middle
就是这样

00:28:03.456 --> 00:28:07.446 A:middle
我希望大家听明白了

00:28:07.446 --> 00:28:08.816 A:middle
我们接着讲下一个话题

00:28:08.816 --> 00:28:10.386 A:middle
同步变更

00:28:10.516 --> 00:28:12.626 A:middle
在你的云服务器上

00:28:12.626 --> 00:28:14.086 A:middle
你估计也需要进行

00:28:14.086 --> 00:28:15.536 A:middle
同步变更 但是你需要

00:28:15.536 --> 00:28:16.886 A:middle
给你的条目

00:28:16.886 --> 00:28:17.286 A:middle
分配版本编号

00:28:17.286 --> 00:28:20.086 A:middle
这些是在我云服务器上的

00:28:20.086 --> 00:28:20.926 A:middle
版本编号

00:28:22.256 --> 00:28:24.366 A:middle
最大的已知版本编号

00:28:24.366 --> 00:28:27.276 A:middle
我们叫做同步锚

00:28:27.276 --> 00:28:30.056 A:middle
这里最大的是 14

00:28:30.186 --> 00:28:32.446 A:middle
在有变更出现时

00:28:32.446 --> 00:28:33.456 A:middle
你需要增加版本编号

00:28:33.886 --> 00:28:36.106 A:middle
比如 现在是 15

00:28:36.656 --> 00:28:39.726 A:middle
此时的同步锚

00:28:39.726 --> 00:28:41.136 A:middle
我进行的有些快了 不过也可以

00:28:41.576 --> 00:28:44.146 A:middle
我增加了一个新文件

00:28:44.336 --> 00:28:45.436 A:middle
其版本编号是

00:28:45.436 --> 00:28:46.006 A:middle
16

00:28:46.006 --> 00:28:47.256 A:middle
这次 我们将

00:28:47.256 --> 00:28:48.586 A:middle
同步锚增加至 16

00:28:48.586 --> 00:28:49.906 A:middle
记住 第一开始 它是 13（口误 应为 14）

00:28:49.906 --> 00:28:51.116 A:middle
然后我进行了操作

00:28:51.116 --> 00:28:52.766 A:middle
现在你能看到结果了

00:28:53.666 --> 00:28:57.766 A:middle
现在 如果你

00:28:57.766 --> 00:28:58.706 A:middle
回到在你的 File Provider 扩展

00:28:58.706 --> 00:29:02.116 A:middle
枚举器的文件 App 中去

00:28:58.706 --> 00:29:02.116 A:middle
枚举器的文件 App 中去

00:29:02.116 --> 00:29:04.686 A:middle
会发生什么呢

00:29:04.756 --> 00:29:05.656 A:middle
我之前向你们撒了谎

00:29:06.196 --> 00:29:07.686 A:middle
在枚举之前

00:29:07.686 --> 00:29:09.646 A:middle
我们需要要求你的

00:29:09.646 --> 00:29:11.096 A:middle
枚举器 提供其当前的

00:29:11.096 --> 00:29:11.936 A:middle
同步锚

00:29:11.936 --> 00:29:15.256 A:middle
这是在枚举

00:29:15.256 --> 00:29:15.816 A:middle
页之前的操作

00:29:17.026 --> 00:29:18.606 A:middle
这样 你先得到

00:29:18.726 --> 00:29:19.446 A:middle
你的同步锚

00:29:19.446 --> 00:29:21.836 A:middle
然后你将其传回到文件 App

00:29:21.836 --> 00:29:23.556 A:middle
然后文件 App 就会

00:29:24.146 --> 00:29:26.176 A:middle
将其储存

00:29:26.176 --> 00:29:28.796 A:middle
之后 我们就能够像刚才一样

00:29:28.796 --> 00:29:31.096 A:middle
抓取页

00:29:31.096 --> 00:29:31.766 A:middle
就可以同步了

00:29:37.366 --> 00:29:38.616 A:middle
当一个新文件添加到你的服务器时

00:29:38.616 --> 00:29:42.186 A:middle
你添加一个新文件

00:29:42.186 --> 00:29:44.806 A:middle
就是这个绿色的 你增加同步锚

00:29:44.806 --> 00:29:49.396 A:middle
它变成了 14

00:29:49.396 --> 00:29:50.296 A:middle
然后你发出一个推送

00:29:51.056 --> 00:29:54.266 A:middle
文件 App 收到推送

00:29:54.486 --> 00:29:55.876 A:middle
你的同步锚就被调用起来

00:29:56.316 --> 00:29:57.426 A:middle
添加了这个新功能

00:29:57.806 --> 00:29:58.826 A:middle
enumerateChanges

00:29:58.826 --> 00:30:00.356 A:middle
所以 之前是 enumerateItem

00:29:58.826 --> 00:30:00.356 A:middle
所以 之前是 enumerateItem

00:30:00.876 --> 00:30:02.366 A:middle
现在是 enumerateChanges

00:30:02.626 --> 00:30:04.806 A:middle
然后 它会传递

00:30:04.806 --> 00:30:06.726 A:middle
你之前的同步锚

00:30:06.726 --> 00:30:09.026 A:middle
现在这里是当前的

00:30:09.026 --> 00:30:10.816 A:middle
版本 版本编号 13

00:30:10.816 --> 00:30:11.956 A:middle
它会传递给你 13

00:30:13.126 --> 00:30:14.506 A:middle
当你的枚举器收到

00:30:14.506 --> 00:30:17.916 A:middle
回调函数后 它会抓取

00:30:17.916 --> 00:30:20.916 A:middle
新条目 就在这 14

00:30:20.916 --> 00:30:22.566 A:middle
版本编号变更为 14 的条目

00:30:23.286 --> 00:30:24.726 A:middle
然后它将其送回到 observer

00:30:24.726 --> 00:30:25.926 A:middle
然后它调用

00:30:26.106 --> 00:30:28.836 A:middle
finishEnumerating 到

00:30:28.836 --> 00:30:30.016 A:middle
这里的新版本

00:30:30.246 --> 00:30:31.596 A:middle
这里是 14

00:30:32.366 --> 00:30:33.256 A:middle
没有更多的变更了

00:30:33.256 --> 00:30:34.526 A:middle
你就可以直接用

00:30:34.526 --> 00:30:38.266 A:middle
notComing false

00:30:38.446 --> 00:30:39.916 A:middle
我们现在就可以显示

00:30:39.916 --> 00:30:40.946 A:middle
更新了

00:30:42.036 --> 00:30:43.266 A:middle
哦 我们忘了一件事

00:30:43.266 --> 00:30:47.526 A:middle
文件 App 将会

00:30:48.536 --> 00:30:50.676 A:middle
更新为新的同步锚

00:30:50.896 --> 00:30:52.436 A:middle
我快速讲讲

00:30:52.436 --> 00:30:55.386 A:middle
推送通知 这个很有趣

00:30:55.386 --> 00:30:57.136 A:middle
因为这次

00:30:57.196 --> 00:30:58.446 A:middle
推送通知

00:30:58.446 --> 00:30:59.826 A:middle
不会到你的 File Provider 扩展

00:30:59.826 --> 00:31:00.496 A:middle
那里去

00:30:59.826 --> 00:31:00.496 A:middle
那里去

00:31:01.456 --> 00:31:04.166 A:middle
它实际上是去

00:31:04.166 --> 00:31:04.956 A:middle
File Provider 后台程序

00:31:05.866 --> 00:31:09.316 A:middle
当收到你的推送时

00:31:09.316 --> 00:31:10.386 A:middle
File Provider 后台程序将

00:31:10.386 --> 00:31:11.266 A:middle
启动

00:31:11.266 --> 00:31:14.286 A:middle
你的枚举器上的

00:31:14.286 --> 00:31:16.336 A:middle
enumerateChanges 代码

00:31:16.336 --> 00:31:18.146 A:middle
然后你就可以传回条目

00:31:18.146 --> 00:31:18.946 A:middle
另外有关推送我需要

00:31:18.946 --> 00:31:20.296 A:middle
讲解的一点就是

00:31:20.296 --> 00:31:21.746 A:middle
我会尽量简单点说

00:31:22.226 --> 00:31:24.526 A:middle
你的 PKPushType 必须是

00:31:24.526 --> 00:31:25.796 A:middle
一个 PKPushType 的 File Provider

00:31:25.796 --> 00:31:27.916 A:middle
分组名必须是你的

00:31:27.916 --> 00:31:31.136 A:middle
数据包标识符再加上一个后缀

00:31:31.616 --> 00:31:32.976 A:middle
pushkit.FileProvider

00:31:33.406 --> 00:31:35.506 A:middle
你的有效载荷一定要

00:31:35.506 --> 00:31:36.936 A:middle
包括一个容器标识符

00:31:36.936 --> 00:31:38.576 A:middle
指向有可能的枚举器

00:31:38.576 --> 00:31:39.056 A:middle
其中之一

00:31:39.996 --> 00:31:42.256 A:middle
有关更多推送提醒的问题

00:31:42.256 --> 00:31:43.736 A:middle
请查看去年的

00:31:43.736 --> 00:31:45.226 A:middle
Introduction to Notification

00:31:45.496 --> 00:31:46.266 A:middle
（推送入门讲座）

00:31:46.726 --> 00:31:48.346 A:middle
我们已经讲过了推送

00:31:48.346 --> 00:31:49.946 A:middle
不过你有可能会问

00:31:49.946 --> 00:31:51.196 A:middle
如果我有些想要通知系统的变更

00:31:51.196 --> 00:31:52.826 A:middle
但是我没有

00:31:52.826 --> 00:31:53.726 A:middle
相应的一个推送该怎么办

00:31:54.816 --> 00:31:57.176 A:middle
在这种情况下

00:31:57.286 --> 00:31:59.106 A:middle
你需要编码 File Provider 后台程序

00:31:59.106 --> 00:31:59.916 A:middle
说明

00:31:59.916 --> 00:32:00.326 A:middle
变更的存在

00:31:59.916 --> 00:32:00.326 A:middle
变更的存在

00:32:00.406 --> 00:32:01.716 A:middle
我们这里有个函数

00:32:01.716 --> 00:32:02.746 A:middle
就是

00:32:03.286 --> 00:32:05.546 A:middle
NSFileProvider signalChanges

00:32:05.906 --> 00:32:06.456 A:middle
forContainer

00:32:07.536 --> 00:32:09.336 A:middle
当接收到代码后

00:32:09.336 --> 00:32:10.656 A:middle
File Provider 后台程序就能够

00:32:10.656 --> 00:32:12.416 A:middle
枚举变更 作用和

00:32:12.456 --> 00:32:13.556 A:middle
推送相同

00:32:13.876 --> 00:32:15.046 A:middle
让我讲回到

00:32:15.046 --> 00:32:15.526 A:middle
这个方法

00:32:16.476 --> 00:32:19.106 A:middle
sinalchanges 方法

00:32:19.106 --> 00:32:20.866 A:middle
你该在什么时候调用呢

00:32:20.976 --> 00:32:22.436 A:middle
首先 你可以

00:32:22.436 --> 00:32:23.786 A:middle
为初始的一组文件

00:32:23.786 --> 00:32:24.196 A:middle
调用它

00:32:24.196 --> 00:32:25.826 A:middle
想象你刚刚安装了你的

00:32:26.106 --> 00:32:27.476 A:middle
应用程序 然后在 File Provider 扩展

00:32:27.476 --> 00:32:28.566 A:middle
里面有一些文件

00:32:28.566 --> 00:32:30.276 A:middle
你想要告知系统

00:32:30.276 --> 00:32:31.326 A:middle
这些文件的存在

00:32:32.456 --> 00:32:34.156 A:middle
然后就是帐户变更的情况

00:32:34.156 --> 00:32:35.066 A:middle
比如

00:32:35.066 --> 00:32:36.676 A:middle
用户登出 然后登入一个

00:32:36.676 --> 00:32:37.936 A:middle
新的帐户 你就需要

00:32:37.936 --> 00:32:39.176 A:middle
在帐户变更后

00:32:39.176 --> 00:32:40.636 A:middle
告知系统重新加载

00:32:41.116 --> 00:32:42.846 A:middle
此时一般没有

00:32:42.846 --> 00:32:43.296 A:middle
推送可用

00:32:43.676 --> 00:32:44.936 A:middle
更普遍的是 你可以对所有

00:32:44.936 --> 00:32:46.316 A:middle
没有对应推送的变更使用这个方法

00:32:46.316 --> 00:32:48.326 A:middle
包括在本地上

00:32:48.326 --> 00:32:49.146 A:middle
做出的变更

00:32:49.536 --> 00:32:51.326 A:middle
我再讲回一点

00:32:51.326 --> 00:32:53.756 A:middle
之前我们看到

00:32:54.546 --> 00:32:56.676 A:middle
你的 File Provider 需要

00:32:56.676 --> 00:32:58.556 A:middle
应用程序提供

00:32:58.556 --> 00:32:59.406 A:middle
文件网址

00:32:59.406 --> 00:33:01.606 A:middle
如果此时 文件不是

00:32:59.406 --> 00:33:01.606 A:middle
如果此时 文件不是

00:33:01.656 --> 00:33:03.726 A:middle
在本地的话 你就需要

00:33:03.726 --> 00:33:05.446 A:middle
告知系统 这个文件

00:33:05.446 --> 00:33:06.306 A:middle
不是正在下载

00:33:06.876 --> 00:33:11.516 A:middle
如果文件在本地的话

00:33:11.516 --> 00:33:13.676 A:middle
你就应该在工作集中

00:33:13.676 --> 00:33:15.026 A:middle
进行 signalChanges 如果条目是

00:33:15.026 --> 00:33:16.816 A:middle
在工作集中的话

00:33:18.206 --> 00:33:19.306 A:middle
同样的 如果你有一个

00:33:19.306 --> 00:33:20.576 A:middle
正在为母应用程序运行的枚举器

00:33:20.576 --> 00:33:22.346 A:middle
你需要在

00:33:22.346 --> 00:33:23.506 A:middle
parentItemIdentifier 上调用

00:33:23.506 --> 00:33:24.766 A:middle
signalChanges

00:33:25.286 --> 00:33:27.416 A:middle
所以 在后台 singalChanges

00:33:27.416 --> 00:33:28.786 A:middle
可以从你的应用程序或者

00:33:29.086 --> 00:33:30.326 A:middle
从 File Provider 扩展

00:33:30.326 --> 00:33:31.206 A:middle
进行调用

00:33:31.206 --> 00:33:31.696 A:middle
十分方便

00:33:33.136 --> 00:33:35.536 A:middle
甚至对于系统引发的变更

00:33:35.536 --> 00:33:37.216 A:middle
你也必须要调用 signalChanges

00:33:37.296 --> 00:33:39.036 A:middle
这就像我

00:33:39.036 --> 00:33:39.756 A:middle
之前描述的一样

00:33:39.756 --> 00:33:41.216 A:middle
你可以说系统能够

00:33:41.216 --> 00:33:43.246 A:middle
推测出文件已经发生变更

00:33:43.246 --> 00:33:44.206 A:middle
但是不行 我们不能这么做

00:33:44.256 --> 00:33:46.226 A:middle
我们需要你明白地告诉我们

00:33:46.226 --> 00:33:47.486 A:middle
你已经知道了这一变更

00:33:48.696 --> 00:33:51.016 A:middle
但是不用担心

00:33:51.016 --> 00:33:53.006 A:middle
signalChanges 是特别

00:33:53.006 --> 00:33:53.236 A:middle
易得的

00:33:53.936 --> 00:33:55.436 A:middle
我们已经讲完了

00:33:55.566 --> 00:33:57.456 A:middle
屏幕上这三个话题

00:33:57.456 --> 00:33:58.786 A:middle
创建项目 提供一个条目

00:33:58.786 --> 00:34:00.096 A:middle
枚举条目

00:33:58.786 --> 00:34:00.096 A:middle
枚举条目

00:34:00.096 --> 00:34:02.186 A:middle
接下来 Johannes 会

00:34:02.606 --> 00:34:03.816 A:middle
上台来给大家

00:34:03.816 --> 00:34:04.686 A:middle
讲解剩下的话题

00:34:05.516 --> 00:34:11.176 A:middle
[掌声]

00:34:11.676 --> 00:34:12.226 A:middle
&gt;&gt; 谢谢你 Pierre

00:34:13.186 --> 00:34:15.976 A:middle
那么我们已经见到如何将文件

00:34:15.976 --> 00:34:18.826 A:middle
获取至文件 App

00:34:18.826 --> 00:34:19.755 A:middle
或者文件浏览器上

00:34:20.606 --> 00:34:23.005 A:middle
当然 这只是你们

00:34:23.005 --> 00:34:24.346 A:middle
所感兴趣的一部分

00:34:24.346 --> 00:34:25.516 A:middle
或者你们用户感兴趣操作

00:34:25.516 --> 00:34:26.366 A:middle
的一部分

00:34:26.946 --> 00:34:28.436 A:middle
另一个同样重要的部分是

00:34:28.806 --> 00:34:30.606 A:middle
你们的用户可以

00:34:30.606 --> 00:34:31.656 A:middle
变更文件

00:34:32.426 --> 00:34:35.646 A:middle
而且要变更文件有很多种办法

00:34:35.646 --> 00:34:37.396 A:middle
你既可以在

00:34:37.396 --> 00:34:39.396 A:middle
文件 App 中实现

00:34:39.396 --> 00:34:41.226 A:middle
也可以使用

00:34:41.226 --> 00:34:42.156 A:middle
其他技术办法

00:34:42.795 --> 00:34:44.626 A:middle
那么以在文件 App 为例

00:34:44.626 --> 00:34:46.596 A:middle
模拟用户

00:34:46.596 --> 00:34:48.536 A:middle
激活菜单控制栏

00:34:48.886 --> 00:34:50.366 A:middle
在菜单控制栏里

00:34:50.366 --> 00:34:52.466 A:middle
为用户提供了

00:34:52.466 --> 00:34:54.896 A:middle
多种变更文件

00:34:54.896 --> 00:34:56.255 A:middle
的操作动作

00:34:56.476 --> 00:34:57.576 A:middle
以其中一个动作

00:34:57.576 --> 00:35:00.396 A:middle
举例来说

00:34:57.576 --> 00:35:00.396 A:middle
举例来说

00:35:00.396 --> 00:35:02.776 A:middle
是这里的信息条目

00:35:02.776 --> 00:35:04.216 A:middle
非常简单地激活了信息面板

00:35:04.616 --> 00:35:05.576 A:middle
这个信息面板中所显示的

00:35:05.576 --> 00:35:07.686 A:middle
信息是你已经

00:35:07.686 --> 00:35:08.366 A:middle
提供过的

00:35:08.736 --> 00:35:11.646 A:middle
这个条目的操作是

00:35:11.646 --> 00:35:12.766 A:middle
你已经执行过的

00:35:13.686 --> 00:35:15.646 A:middle
而其他条目 比如

00:35:15.646 --> 00:35:18.926 A:middle
这里的分享动作 是由我们大家都了解的

00:35:18.926 --> 00:35:21.536 A:middle
老朋友

00:35:21.536 --> 00:35:22.156 A:middle
UIActivityViewController

00:35:22.156 --> 00:35:23.556 A:middle
来支持的

00:35:23.556 --> 00:35:25.426 A:middle
而且 你当然可以

00:35:25.426 --> 00:35:27.636 A:middle
使用 activity plug-in 进行

00:35:27.996 --> 00:35:30.026 A:middle
简单地增加其他动作

00:35:30.026 --> 00:35:31.426 A:middle
这也是另一种在条目上

00:35:31.426 --> 00:35:32.686 A:middle
显示动作的方法

00:35:33.356 --> 00:35:35.036 A:middle
另外 还有一些其他的潜在条目

00:35:35.506 --> 00:35:37.216 A:middle
在目前现有的

00:35:37.216 --> 00:35:39.886 A:middle
UI 系统中

00:35:40.236 --> 00:35:40.786 A:middle
没有支持

00:35:41.376 --> 00:35:43.276 A:middle
比如说 重命名条目

00:35:43.816 --> 00:35:45.476 A:middle
重命名条目在文件 App 中激活了

00:35:45.476 --> 00:35:48.196 A:middle
一个漂亮的 UI 界面 但是我们

00:35:48.196 --> 00:35:50.826 A:middle
目前还没有发布

00:35:51.806 --> 00:35:53.026 A:middle
一个关于重命名的

00:35:53.026 --> 00:35:53.446 A:middle
完整内容

00:35:53.646 --> 00:35:55.436 A:middle
这个内容 就是这部分议程中

00:35:55.496 --> 00:35:56.666 A:middle
将要说明的

00:35:57.016 --> 00:35:59.046 A:middle
为了支持重命名或其他类似的功能

00:35:59.046 --> 00:36:01.806 A:middle
我们发布了多种条目

00:35:59.046 --> 00:36:01.806 A:middle
我们发布了多种条目

00:36:01.806 --> 00:36:03.656 A:middle
这些条目包括

00:36:03.656 --> 00:36:05.556 A:middle
移动文件

00:36:06.046 --> 00:36:07.666 A:middle
创建文件 举个例子

00:36:07.666 --> 00:36:08.826 A:middle
比如你 或用户们

00:36:08.826 --> 00:36:10.426 A:middle
点击文件浏览控制页面上的

00:36:10.426 --> 00:36:11.366 A:middle
“+”小按钮

00:36:11.366 --> 00:36:13.636 A:middle
又比如用户将文件

00:36:13.636 --> 00:36:15.306 A:middle
拖动至文件 App

00:36:15.306 --> 00:36:17.426 A:middle
或者是其他应用程序的

00:36:17.426 --> 00:36:18.546 A:middle
文件浏览页面

00:36:18.756 --> 00:36:20.026 A:middle
最后但同样重要的是 变更文件

00:36:20.026 --> 00:36:21.076 A:middle
的属性

00:36:21.076 --> 00:36:22.396 A:middle
因此如果用户进行

00:36:22.396 --> 00:36:25.106 A:middle
标签操作 或者查看了文件

00:36:25.106 --> 00:36:26.936 A:middle
之后想要变更文件的

00:36:26.936 --> 00:36:28.476 A:middle
上一次使用日期

00:36:30.006 --> 00:36:32.476 A:middle
这些

00:36:32.516 --> 00:36:34.916 A:middle
用户动作

00:36:34.966 --> 00:36:35.916 A:middle
都是被支持的

00:36:36.966 --> 00:36:38.576 A:middle
而你的扩展

00:36:38.576 --> 00:36:39.306 A:middle
就是实现这些功能

00:36:40.346 --> 00:36:41.776 A:middle
好吧 这些确实

00:36:41.776 --> 00:36:43.166 A:middle
很抽象 那么我们就看一看

00:36:43.166 --> 00:36:45.816 A:middle
其中的功能之一 以及你

00:36:45.816 --> 00:36:46.556 A:middle
如何将其实现

00:36:46.786 --> 00:36:48.606 A:middle
好的 来看我们举的这个例子

00:36:48.606 --> 00:36:49.816 A:middle
我们将要使用

00:36:49.816 --> 00:36:50.596 A:middle
导入文稿功能

00:36:51.216 --> 00:36:52.926 A:middle
然而所有的功能

00:36:52.926 --> 00:36:54.816 A:middle
在实现的时候 所使用的方法

00:36:54.816 --> 00:36:55.626 A:middle
都是相似的

00:36:55.936 --> 00:36:57.476 A:middle
标签操作功能很好用

00:36:57.476 --> 00:36:59.546 A:middle
因为它是使用在新文件上的

00:36:59.546 --> 00:37:02.316 A:middle
但是这些大多数的功能

00:36:59.546 --> 00:37:02.316 A:middle
但是这些大多数的功能

00:37:02.316 --> 00:37:04.306 A:middle
都是差不多的

00:37:04.786 --> 00:37:05.746 A:middle
它们在特性上只有

00:37:05.746 --> 00:37:06.856 A:middle
很少的不同 并且当然在

00:37:06.856 --> 00:37:08.036 A:middle
语义上也略有不同

00:37:08.486 --> 00:37:09.836 A:middle
但是我在这部分

00:37:09.836 --> 00:37:11.036 A:middle
要讲的内容

00:37:11.036 --> 00:37:12.836 A:middle
是对几乎所有的功能都

00:37:12.836 --> 00:37:13.436 A:middle
适用的

00:37:14.136 --> 00:37:16.126 A:middle
导入文稿功能是这样

00:37:17.346 --> 00:37:17.996 A:middle
工作的

00:37:18.606 --> 00:37:20.076 A:middle
系统给你一个现有的文件的 URL

00:37:20.076 --> 00:37:22.836 A:middle
那么这是一个磁盘上的文件

00:37:22.836 --> 00:37:26.396 A:middle
系统给你的这个文件

00:37:26.396 --> 00:37:27.806 A:middle
可以是任何地址的

00:37:27.806 --> 00:37:29.226 A:middle
可能是在临时文件夹里

00:37:29.226 --> 00:37:31.446 A:middle
或者也有可能是随便一个应用程序里

00:37:31.826 --> 00:37:34.006 A:middle
比如说

00:37:34.006 --> 00:37:35.496 A:middle
执行了一个创建动作

00:37:35.496 --> 00:37:38.966 A:middle
保存了模板不管是什么情况

00:37:38.966 --> 00:37:40.666 A:middle
这个文件是给你

00:37:40.666 --> 00:37:41.386 A:middle
使用的

00:37:41.796 --> 00:37:44.046 A:middle
你可以将这个文件

00:37:44.046 --> 00:37:46.166 A:middle
移动至你的 File Provider 存储空间里

00:37:46.496 --> 00:37:48.286 A:middle
那么这个文件就在你的

00:37:48.286 --> 00:37:49.216 A:middle
控制之内了

00:37:49.216 --> 00:37:50.266 A:middle
因为它在你的 container 中

00:37:50.816 --> 00:37:53.056 A:middle
这时 你需要

00:37:53.056 --> 00:37:54.846 A:middle
安排后台上传

00:37:54.846 --> 00:37:56.186 A:middle
这样你的 container 中的文件

00:37:56.186 --> 00:37:58.306 A:middle
才可以上传到

00:37:58.306 --> 00:37:59.396 A:middle
你的云端

00:37:59.396 --> 00:38:02.156 A:middle
最后但同样重要的是 你要调用

00:37:59.396 --> 00:38:02.156 A:middle
最后但同样重要的是 你要调用

00:38:02.156 --> 00:38:03.016 A:middle
完成处理器

00:38:03.746 --> 00:38:06.686 A:middle
这非常重要

00:38:06.686 --> 00:38:08.806 A:middle
而且也是这个流程中非常重要的

00:38:08.806 --> 00:38:09.176 A:middle
部分

00:38:09.736 --> 00:38:11.366 A:middle
我们刚刚安排了一个

00:38:11.366 --> 00:38:13.666 A:middle
后台上传业务 但是我们没有等到

00:38:13.666 --> 00:38:14.996 A:middle
后台上传完成后

00:38:14.996 --> 00:38:16.136 A:middle
再调用

00:38:16.136 --> 00:38:16.516 A:middle
完成处理器

00:38:17.446 --> 00:38:18.966 A:middle
那么文件实际上正在

00:38:18.966 --> 00:38:20.186 A:middle
后台上传中

00:38:20.946 --> 00:38:22.406 A:middle
意味着用户不需要

00:38:22.406 --> 00:38:24.626 A:middle
一定得等到

00:38:24.626 --> 00:38:27.186 A:middle
文件真正上传完成后

00:38:27.386 --> 00:38:29.026 A:middle
再调用系统

00:38:29.026 --> 00:38:29.376 A:middle
“嘿我上传完成啦”

00:38:29.446 --> 00:38:30.676 A:middle
对于用户来讲 我已经把文件

00:38:30.676 --> 00:38:31.096 A:middle
在我控制之下了

00:38:31.096 --> 00:38:32.116 A:middle
我已经安排了后台上传了

00:38:32.116 --> 00:38:33.486 A:middle
这份文件将在某个时间

00:38:33.486 --> 00:38:34.176 A:middle
上传到云端

00:38:35.096 --> 00:38:36.696 A:middle
那么用户就不必等着

00:38:36.696 --> 00:38:38.096 A:middle
文件上传完成

00:38:38.096 --> 00:38:39.276 A:middle
有时候文件可能有

00:38:39.276 --> 00:38:39.916 A:middle
几百兆

00:38:40.266 --> 00:38:42.556 A:middle
这就是

00:38:42.556 --> 00:38:43.526 A:middle
一般的流程

00:38:43.526 --> 00:38:44.846 A:middle
我们来看一看

00:38:44.846 --> 00:38:46.776 A:middle
这个流程中的数据流

00:38:46.776 --> 00:38:47.016 A:middle
是怎样的

00:38:47.386 --> 00:38:50.236 A:middle
就像我说的 这个执行动作的

00:38:50.416 --> 00:38:52.506 A:middle
发起初始是

00:38:52.536 --> 00:38:54.186 A:middle
用户创建

00:38:54.186 --> 00:38:55.996 A:middle
或者粘贴 或者拖动一个文件

00:38:56.476 --> 00:38:58.606 A:middle
到你的 File Provider 中的

00:38:59.186 --> 00:38:59.956 A:middle
container

00:39:00.626 --> 00:39:03.026 A:middle
这时导入文稿针对

00:39:03.026 --> 00:39:05.106 A:middle
你的 File Provider 的

00:39:05.106 --> 00:39:06.616 A:middle
扩展子类别被

00:39:06.656 --> 00:39:07.266 A:middle
调用

00:39:07.266 --> 00:39:09.096 A:middle
你创建了一个数据库入口

00:39:09.096 --> 00:39:10.136 A:middle
你确认文件正在被

00:39:10.136 --> 00:39:10.976 A:middle
上传

00:39:11.916 --> 00:39:13.116 A:middle
所以你安排了上传动作

00:39:13.446 --> 00:39:14.276 A:middle
现在 我们完成了 对不对

00:39:14.526 --> 00:39:15.046 A:middle
我们可以调用

00:39:15.046 --> 00:39:15.806 A:middle
完成处理器

00:39:15.946 --> 00:39:17.886 A:middle
但正如皮埃尔提到的

00:39:17.886 --> 00:39:19.786 A:middle
系统不会自动

00:39:19.786 --> 00:39:22.136 A:middle
推断 文件已经被

00:39:22.396 --> 00:39:23.296 A:middle
变更了

00:39:24.046 --> 00:39:25.876 A:middle
所以这里重要的一点是

00:39:25.876 --> 00:39:27.896 A:middle
你在这一步要给我们发出信号

00:39:28.946 --> 00:39:30.686 A:middle
告诉我们 嘿 这个 container

00:39:30.686 --> 00:39:32.186 A:middle
发生改变了

00:39:32.586 --> 00:39:33.876 A:middle
我们需要重新枚举

00:39:33.876 --> 00:39:34.346 A:middle
这个 container

00:39:35.016 --> 00:39:36.146 A:middle
这很重要 是为了保证

00:39:36.146 --> 00:39:37.556 A:middle
用户获得即刻的反馈

00:39:37.996 --> 00:39:39.356 A:middle
所以下一步就是

00:39:39.356 --> 00:39:40.866 A:middle
你来告诉我们

00:39:40.866 --> 00:39:41.466 A:middle
这里发生变化了

00:39:41.466 --> 00:39:43.656 A:middle
那么在这一步 我们就简单

00:39:43.656 --> 00:39:44.256 A:middle
做一个记录

00:39:44.306 --> 00:39:46.456 A:middle
我们记下 OK 这个 container

00:39:46.456 --> 00:39:48.406 A:middle
并记在心里 用户有可能

00:39:48.406 --> 00:39:49.366 A:middle
正在查看这个

00:39:49.366 --> 00:39:50.146 A:middle
container 对不对

00:39:50.446 --> 00:39:51.516 A:middle
他们刚刚点击了那里的

00:39:51.516 --> 00:39:52.266 A:middle
“+”小按钮

00:39:52.926 --> 00:39:54.256 A:middle
当然了 他们正在查看 container

00:39:54.256 --> 00:39:55.176 A:middle
并点击了“+”按钮

00:39:55.176 --> 00:39:57.666 A:middle
那么他们想要看

00:39:57.666 --> 00:39:58.326 A:middle
这些变更

00:39:58.716 --> 00:40:00.516 A:middle
所以你会告诉系统

00:39:58.716 --> 00:40:00.516 A:middle
所以你会告诉系统

00:40:00.516 --> 00:40:01.156 A:middle
变更正在执行中

00:40:01.466 --> 00:40:03.826 A:middle
现在你告诉系统

00:40:03.826 --> 00:40:04.616 A:middle
调用完成处理器

00:40:04.776 --> 00:40:06.016 A:middle
我们已经完成了这个执行动作

00:40:06.866 --> 00:40:07.996 A:middle
系统已经打开

00:40:08.106 --> 00:40:09.626 A:middle
这时 系统可以

00:40:09.626 --> 00:40:11.826 A:middle
启动并调用 回溯

00:40:11.826 --> 00:40:13.056 A:middle
并枚举所做的变更

00:40:13.406 --> 00:40:15.846 A:middle
你告诉我们 嘿 我们刚刚

00:40:15.846 --> 00:40:17.636 A:middle
增加了这个条目 现在有可能

00:40:17.636 --> 00:40:18.576 A:middle
正在上传

00:40:19.466 --> 00:40:21.696 A:middle
你将变更过的条目 作为变更集合的一部分

00:40:21.696 --> 00:40:23.916 A:middle
回传给我们

00:40:25.046 --> 00:40:27.456 A:middle
我们就可以升级 UI

00:40:27.456 --> 00:40:29.436 A:middle
并在条目的角落显示一点点

00:40:29.436 --> 00:40:30.376 A:middle
上传中发生的错误

00:40:30.826 --> 00:40:32.606 A:middle
因此用户可以获得即时反馈

00:40:32.606 --> 00:40:34.246 A:middle
在你的云端上 他们的信息

00:40:34.246 --> 00:40:37.146 A:middle
是安全的

00:40:37.286 --> 00:40:38.746 A:middle
那么让我再重申一下

00:40:38.776 --> 00:40:40.016 A:middle
执行动作是应

00:40:40.016 --> 00:40:42.276 A:middle
立刻完成的

00:40:42.276 --> 00:40:43.986 A:middle
那么因此你需要延迟需要长期运行的

00:40:44.056 --> 00:40:46.916 A:middle
任务 比如使用 NSURLSession

00:40:46.916 --> 00:40:48.996 A:middle
上传到后台

00:40:49.106 --> 00:40:50.306 A:middle
那么现在 这个条目正在被上传中

00:40:50.306 --> 00:40:51.756 A:middle
这很好

00:40:52.406 --> 00:40:53.416 A:middle
但是 在一些情况下

00:40:53.416 --> 00:40:54.646 A:middle
当上传即将完成的时候

00:40:54.646 --> 00:40:56.006 A:middle
我们想要告诉用户

00:40:56.006 --> 00:40:57.066 A:middle
文件的最新

00:40:57.066 --> 00:40:57.456 A:middle
状态

00:40:57.986 --> 00:40:58.836 A:middle
让我们进入到这个部分

00:40:59.626 --> 00:41:01.256 A:middle
这一部分工作的方法是

00:40:59.626 --> 00:41:01.256 A:middle
这一部分工作的方法是

00:41:01.256 --> 00:41:02.916 A:middle
NSURLSession 在某种时刻下会注意到

00:41:02.916 --> 00:41:04.666 A:middle
嘿 这个上传

00:41:04.666 --> 00:41:05.156 A:middle
成功了

00:41:05.156 --> 00:41:06.656 A:middle
很好 这个项目已经在云端了

00:41:06.996 --> 00:41:09.126 A:middle
而 NSURLSession

00:41:09.126 --> 00:41:10.456 A:middle
告诉你这些的方法

00:41:10.496 --> 00:41:11.906 A:middle
被称为

00:41:12.026 --> 00:41:14.176 A:middle
回调 在你母应用程序上的

00:41:14.176 --> 00:41:16.156 A:middle
一个 NSURLSession

00:41:16.156 --> 00:41:17.096 A:middle
后台回调

00:41:17.676 --> 00:41:19.506 A:middle
这时 你的母应用程序可以

00:41:19.506 --> 00:41:20.886 A:middle
去上传

00:41:20.886 --> 00:41:21.786 A:middle
数据库入口

00:41:21.866 --> 00:41:23.496 A:middle
它会在你的数据库里

00:41:23.496 --> 00:41:25.156 A:middle
设置标记 提示这个文件已经

00:41:25.156 --> 00:41:25.606 A:middle
上传

00:41:25.606 --> 00:41:26.966 A:middle
它已经不再

00:41:26.966 --> 00:41:27.226 A:middle
位于磁盘上

00:41:27.226 --> 00:41:29.316 A:middle
上传已经成功

00:41:29.706 --> 00:41:31.716 A:middle
我们不必再次执行上传

00:41:31.716 --> 00:41:32.196 A:middle
动作

00:41:33.016 --> 00:41:34.446 A:middle
并且我们应该通知用户

00:41:34.446 --> 00:41:35.716 A:middle
上传已经完成

00:41:36.476 --> 00:41:38.376 A:middle
正如 Pierre 提到的

00:41:38.376 --> 00:41:39.756 A:middle
这个用信号提示变更的方法既可以被

00:41:39.756 --> 00:41:41.226 A:middle
你的扩展调用

00:41:41.226 --> 00:41:42.926 A:middle
也可以被母应用程序调用 并且我们为你

00:41:42.926 --> 00:41:43.606 A:middle
解释了原因

00:41:44.046 --> 00:41:45.766 A:middle
这时 你告诉我们 这个 container 里面

00:41:45.766 --> 00:41:47.346 A:middle
发生了变更

00:41:47.896 --> 00:41:51.466 A:middle
那么 与先前同样的流程

00:41:51.466 --> 00:41:52.286 A:middle
开始启动

00:41:52.946 --> 00:41:54.276 A:middle
系统通知变更正在进行

00:41:54.276 --> 00:41:56.756 A:middle
并重新枚举你的

00:41:56.856 --> 00:42:01.406 A:middle
工作集 而且这时

00:41:56.856 --> 00:42:01.406 A:middle
工作集 而且这时

00:42:01.936 --> 00:42:03.326 A:middle
你可以从你的 File Provider 扩展

00:42:03.486 --> 00:42:04.566 A:middle
获取到这个条目已经被完整地上传

00:42:04.566 --> 00:42:07.156 A:middle
使用的是

00:42:07.156 --> 00:42:08.866 A:middle
NSFileProviderItem 协议中的密钥

00:42:09.076 --> 00:42:11.396 A:middle
并将这个信息

00:42:11.396 --> 00:42:13.566 A:middle
回传

00:42:14.456 --> 00:42:17.266 A:middle
有时候 上传文件会失败

00:42:18.316 --> 00:42:19.666 A:middle
比如 你的服务器会告诉我们

00:42:19.756 --> 00:42:22.566 A:middle
这个用户超出了云端存储

00:42:22.566 --> 00:42:22.956 A:middle
限额

00:42:24.376 --> 00:42:26.246 A:middle
这种情况下 基本上与先前同样的

00:42:26.246 --> 00:42:27.706 A:middle
流程开始启动

00:42:28.066 --> 00:42:30.606 A:middle
NSURLSession D 要告诉

00:42:30.606 --> 00:42:32.406 A:middle
你的母应用程序

00:42:32.986 --> 00:42:34.346 A:middle
嘿 这个上传失败了

00:42:34.586 --> 00:42:35.366 A:middle
真麻烦

00:42:35.366 --> 00:42:36.556 A:middle
你总得去解决

00:42:36.556 --> 00:42:37.186 A:middle
这个问题

00:42:37.776 --> 00:42:39.196 A:middle
那么又一次 我们打开数据库

00:42:39.196 --> 00:42:39.716 A:middle
入口

00:42:39.716 --> 00:42:40.926 A:middle
我们通知系统

00:42:42.106 --> 00:42:43.276 A:middle
系统标记变更正在

00:42:43.276 --> 00:42:43.956 A:middle
进行中

00:42:44.526 --> 00:42:45.856 A:middle
系统重新枚举

00:42:46.296 --> 00:42:48.356 A:middle
我们可以回传更新的

00:42:48.356 --> 00:42:48.766 A:middle
条目

00:42:49.386 --> 00:42:50.796 A:middle
现在 这个更新的条目应该

00:42:50.796 --> 00:42:53.916 A:middle
反映出目前其正处于

00:42:53.916 --> 00:42:55.696 A:middle
错误状态的事实

00:42:55.696 --> 00:42:57.476 A:middle
所以一个更新的错误 上传了的错误

00:42:57.476 --> 00:42:59.836 A:middle
会反映出目前真正在发生的

00:42:59.836 --> 00:43:00.716 A:middle
内容

00:42:59.836 --> 00:43:00.716 A:middle
内容

00:43:00.716 --> 00:43:02.056 A:middle
那么 我们来更进一步

00:43:02.056 --> 00:43:02.876 A:middle
更详细一点

00:43:02.876 --> 00:43:05.966 A:middle
正如我说的 你通过上传的条目特性

00:43:05.966 --> 00:43:07.796 A:middle
中的错误特性

00:43:07.796 --> 00:43:10.066 A:middle
来标记其处于

00:43:10.066 --> 00:43:11.246 A:middle
错误状态

00:43:12.306 --> 00:43:13.696 A:middle
你发出重新枚举的信号

00:43:13.696 --> 00:43:15.176 A:middle
用户就可以看到

00:43:15.176 --> 00:43:16.406 A:middle
这个条目处于错误状态

00:43:17.256 --> 00:43:18.786 A:middle
然后 你如何处理这个

00:43:19.266 --> 00:43:21.286 A:middle
错误状态

00:43:21.286 --> 00:43:23.116 A:middle
取决于你正在查看的

00:43:23.186 --> 00:43:24.966 A:middle
错误类型

00:43:25.456 --> 00:43:27.526 A:middle
有一些 并不是所有的错误

00:43:27.526 --> 00:43:28.216 A:middle
都是同一种类型

00:43:29.016 --> 00:43:30.316 A:middle
有一种可能是

00:43:30.316 --> 00:43:31.076 A:middle
你遇见了一种

00:43:31.076 --> 00:43:32.016 A:middle
间歇性的错误

00:43:32.016 --> 00:43:34.276 A:middle
比如 我也不清楚 用户可能

00:43:34.376 --> 00:43:35.516 A:middle
在森林里野营了

00:43:35.516 --> 00:43:37.436 A:middle
两个星期 然后

00:43:37.436 --> 00:43:38.926 A:middle
NSURLSession D 已经放弃了

00:43:38.926 --> 00:43:41.576 A:middle
因为没有 WiFi

00:43:41.576 --> 00:43:42.846 A:middle
没有网络链接

00:43:43.286 --> 00:43:44.826 A:middle
在这种情况下 最简单的

00:43:44.826 --> 00:43:46.146 A:middle
办法就是告诉用户

00:43:46.146 --> 00:43:47.976 A:middle
嘿 你的数据没有上传成功

00:43:48.076 --> 00:43:49.066 A:middle
但我们正在处理

00:43:49.136 --> 00:43:51.306 A:middle
我们重新排列了你的

00:43:51.306 --> 00:43:52.416 A:middle
NSURLSession 任务

00:43:53.236 --> 00:43:55.026 A:middle
我们仍然会将这个条目标记为

00:43:55.026 --> 00:43:56.426 A:middle
错误状态 因为它没有

00:43:56.426 --> 00:43:58.906 A:middle
上传到云端 但我们仍会

00:43:58.906 --> 00:43:59.766 A:middle
继续尝试

00:44:00.236 --> 00:44:01.206 A:middle
用户没有什么必须要做

00:44:01.206 --> 00:44:01.846 A:middle
的事情

00:44:02.416 --> 00:44:03.486 A:middle
在错误描述里 你或许可以

00:44:03.486 --> 00:44:04.856 A:middle
告诉用户 嘿

00:44:05.356 --> 00:44:07.016 A:middle
你可以上网或类似的什么事

00:44:07.016 --> 00:44:09.066 A:middle
但能做的也就是

00:44:09.066 --> 00:44:10.526 A:middle
这么多了

00:44:10.736 --> 00:44:12.116 A:middle
还有一种可能是

00:44:12.636 --> 00:44:13.356 A:middle
你遇到了持续性的错误

00:44:13.356 --> 00:44:15.126 A:middle
而且还是

00:44:15.126 --> 00:44:15.586 A:middle
不同的

00:44:16.276 --> 00:44:17.786 A:middle
在持续性错误状态的情况下

00:44:17.786 --> 00:44:19.016 A:middle
比如说

00:44:19.016 --> 00:44:20.836 A:middle
用户的云端存储配额用尽 你需要

00:44:20.836 --> 00:44:23.376 A:middle
告诉用户 嘿 你的存储配额

00:44:23.466 --> 00:44:24.306 A:middle
用光了

00:44:24.306 --> 00:44:26.046 A:middle
你得去买点我们网页上的

00:44:26.046 --> 00:44:27.346 A:middle
存储空间

00:44:27.636 --> 00:44:29.116 A:middle
在那种情况下 基本上

00:44:29.116 --> 00:44:30.766 A:middle
你要给我们的是 一个

00:44:30.766 --> 00:44:32.686 A:middle
伴随着建议恢复选项的错误提示

00:44:34.036 --> 00:44:35.666 A:middle
最后但也是重要的一个可能

00:44:35.666 --> 00:44:36.496 A:middle
就是遇到坚定错误

00:44:36.496 --> 00:44:38.146 A:middle
而且这些

00:44:38.146 --> 00:44:39.026 A:middle
比较特别

00:44:39.256 --> 00:44:41.576 A:middle
用户必须要对你的应用程序

00:44:41.816 --> 00:44:43.606 A:middle
做一些特定的设置

00:44:44.126 --> 00:44:45.476 A:middle
比如说 重新鉴定

00:44:46.666 --> 00:44:48.576 A:middle
这或许是

00:44:48.896 --> 00:44:50.226 A:middle
这种情况下唯一可以进行的

00:44:50.226 --> 00:44:50.616 A:middle
操作

00:44:51.276 --> 00:44:54.786 A:middle
对于这种可能的情况

00:44:54.786 --> 00:44:56.336 A:middle
系统会调用一个

00:44:56.336 --> 00:44:56.866 A:middle
顾客操作

00:44:57.586 --> 00:44:58.686 A:middle
什么是顾客操作

00:44:59.306 --> 00:45:00.696 A:middle
简单讲 那是我们的

00:44:59.306 --> 00:45:00.696 A:middle
简单讲 那是我们的

00:45:00.696 --> 00:45:03.116 A:middle
下一个部分我们来看一看

00:45:03.116 --> 00:45:05.176 A:middle
回到这个菜单视图

00:45:05.176 --> 00:45:06.746 A:middle
控制器 这里的这个菜单

00:45:06.746 --> 00:45:06.966 A:middle
控制器

00:45:07.286 --> 00:45:09.086 A:middle
我们已经看过了这些系统提供的

00:45:09.086 --> 00:45:11.366 A:middle
操作 它们只所以能够运行

00:45:11.366 --> 00:45:12.696 A:middle
就是因为当用户点击它们时

00:45:12.696 --> 00:45:15.286 A:middle
就会有一个内部由你的 Provider

00:45:15.286 --> 00:45:17.036 A:middle
支持的指令

00:45:17.036 --> 00:45:17.986 A:middle
来支持它们的运行

00:45:18.536 --> 00:45:20.706 A:middle
不过 我们也给大家提供机会

00:45:20.706 --> 00:45:22.696 A:middle
来定制它 也就是

00:45:22.696 --> 00:45:25.856 A:middle
在这种情况下

00:45:25.856 --> 00:45:27.496 A:middle
引入一个顾客操作

00:45:28.016 --> 00:45:31.806 A:middle
这就是一个操作 在幻灯片上

00:45:31.806 --> 00:45:32.976 A:middle
它的名字就是 Custom

00:45:32.976 --> 00:45:34.926 A:middle
不过你可以把它改成任何

00:45:34.926 --> 00:45:36.156 A:middle
你想要的名字

00:45:36.966 --> 00:45:38.276 A:middle
它是这样运行的

00:45:39.226 --> 00:45:41.316 A:middle
你公开一个操作 一个 UI

00:45:41.316 --> 00:45:43.626 A:middle
操作 它是适配你的

00:45:43.626 --> 00:45:44.906 A:middle
File Provider 扩展范围的

00:45:46.806 --> 00:45:48.326 A:middle
你为这个操作提供一个

00:45:48.666 --> 00:45:51.006 A:middle
界面 一个由一种新 UI 扩展

00:45:51.006 --> 00:45:53.866 A:middle
支持的界面

00:45:55.296 --> 00:45:57.886 A:middle
这是另一个在系统上运行的

00:45:57.886 --> 00:46:00.186 A:middle
独立的进程

00:45:57.886 --> 00:46:00.186 A:middle
独立的进程

00:46:00.636 --> 00:46:02.796 A:middle
它是由 FPUIActionExtension

00:46:02.916 --> 00:46:04.086 A:middle
ViewController

00:46:04.086 --> 00:46:04.666 A:middle
支持的

00:46:05.246 --> 00:46:07.206 A:middle
那么 我们怎么做到这点呢

00:46:07.836 --> 00:46:10.236 A:middle
首先 我们在我们的扩展中的

00:46:10.236 --> 00:46:12.196 A:middle
info.plist 上

00:46:12.286 --> 00:46:13.886 A:middle
列举出操作可能的数量

00:46:13.886 --> 00:46:15.326 A:middle
这点是很容易的

00:46:15.596 --> 00:46:17.396 A:middle
我们有一个操作的名字

00:46:17.396 --> 00:46:18.856 A:middle
有一个标识符

00:46:18.856 --> 00:46:19.816 A:middle
还有一个激活准则

00:46:19.846 --> 00:46:21.996 A:middle
这个激活准则就是要搞清楚

00:46:21.996 --> 00:46:23.626 A:middle
哪些操作是适用于

00:46:23.626 --> 00:46:25.316 A:middle
哪些条目的

00:46:26.256 --> 00:46:27.966 A:middle
在幻灯片上的这个例子

00:46:27.966 --> 00:46:29.506 A:middle
我们只是简单使用了一个真谓词

00:46:29.506 --> 00:46:30.806 A:middle
这意味着这个操作

00:46:30.806 --> 00:46:34.186 A:middle
你的 Provider 的每一个条目

00:46:34.186 --> 00:46:35.416 A:middle
相对于这个特定的操作

00:46:35.416 --> 00:46:36.326 A:middle
都是合格的

00:46:36.936 --> 00:46:38.846 A:middle
但是你可以自由地

00:46:38.846 --> 00:46:39.156 A:middle
对其改动

00:46:39.156 --> 00:46:42.966 A:middle
你可以在你的条目上展示

00:46:43.066 --> 00:46:44.826 A:middle
不同的 Key 然后用其来在

00:46:44.826 --> 00:46:46.006 A:middle
你的激活准则中

00:46:46.006 --> 00:46:46.306 A:middle
进行匹配

00:46:46.816 --> 00:46:47.976 A:middle
这是如何运作的呢

00:46:48.506 --> 00:46:50.636 A:middle
用户在文件 App 或者

00:46:50.636 --> 00:46:52.976 A:middle
文稿浏览器中

00:46:52.976 --> 00:46:53.976 A:middle
长按一个条目

00:46:54.556 --> 00:46:56.326 A:middle
此时 我们去查阅其

00:46:56.326 --> 00:46:58.426 A:middle
索引 而不是你的扩展

00:46:58.676 --> 00:47:00.356 A:middle
我们甚至都不会调用它

00:46:58.676 --> 00:47:00.356 A:middle
我们甚至都不会调用它

00:47:00.356 --> 00:47:02.866 A:middle
我们去查询你之前

00:47:02.866 --> 00:47:04.226 A:middle
转回给我们条目的

00:47:04.226 --> 00:47:04.526 A:middle
索引

00:47:04.526 --> 00:47:09.116 A:middle
我们查看其属性

00:47:09.116 --> 00:47:10.566 A:middle
然后用谓词

00:47:10.566 --> 00:47:11.246 A:middle
和属性进行匹配

00:47:11.496 --> 00:47:12.616 A:middle
此时 我们知道

00:47:12.616 --> 00:47:14.176 A:middle
这个谓词将返回的是 是

00:47:14.176 --> 00:47:16.676 A:middle
或是否 如果返回的是 是

00:47:16.676 --> 00:47:18.066 A:middle
我们就可以直接显示操作

00:47:18.916 --> 00:47:21.536 A:middle
现在 用户看到了这个操作

00:47:21.536 --> 00:47:23.396 A:middle
很有可能

00:47:24.146 --> 00:47:24.213 A:middle
他们会点击它

00:47:24.486 --> 00:47:26.266 A:middle
用户点击这个操作

00:47:26.266 --> 00:47:27.076 A:middle
现在发生什么呢

00:47:27.416 --> 00:47:29.286 A:middle
我们调用你的 UI 扩展

00:47:29.286 --> 00:47:31.476 A:middle
你的 UI 扩展被

00:47:31.476 --> 00:47:33.036 A:middle
调用后进行 prepareForaction

00:47:33.036 --> 00:47:34.466 A:middle
运作

00:47:34.946 --> 00:47:36.546 A:middle
在这一步

00:47:36.546 --> 00:47:40.126 A:middle
我们其实就是提供带有 actionIdentifier 的

00:47:40.456 --> 00:47:41.776 A:middle
一套条目 它实际是用户选择的

00:47:41.776 --> 00:47:43.746 A:middle
然后你就可以

00:47:43.746 --> 00:47:46.056 A:middle
对这一操作

00:47:46.836 --> 00:47:49.876 A:middle
显示你现有的 UI

00:47:50.046 --> 00:47:51.176 A:middle
然后从这个方法返回

00:47:51.176 --> 00:47:52.466 A:middle
我们给你展示视图控制器

00:47:52.466 --> 00:47:54.746 A:middle
它很漂亮的在

00:47:54.746 --> 00:47:54.946 A:middle
文件 App 中向上滑动

00:47:54.946 --> 00:47:56.586 A:middle
这就行了

00:47:56.586 --> 00:47:58.466 A:middle
此时 你知道你进行操作

00:47:58.466 --> 00:47:59.626 A:middle
作用到的条目

00:47:59.626 --> 00:48:00.246 A:middle
都是哪些

00:47:59.626 --> 00:48:00.246 A:middle
都是哪些

00:48:00.246 --> 00:48:01.986 A:middle
比如 你可以

00:48:01.986 --> 00:48:03.826 A:middle
做一切有必要的行为来

00:48:03.826 --> 00:48:04.376 A:middle
运行这些操作

00:48:04.376 --> 00:48:05.386 A:middle
而且 这些操作也是完全定制的

00:48:05.386 --> 00:48:07.546 A:middle
当然 具体上

00:48:07.546 --> 00:48:09.036 A:middle
会发生什么

00:48:09.036 --> 00:48:09.636 A:middle
都取决于你的行为

00:48:10.486 --> 00:48:12.046 A:middle
在这个阶段 用户

00:48:12.046 --> 00:48:12.996 A:middle
应该已经完成了这个操作

00:48:13.756 --> 00:48:14.896 A:middle
你可能会执行一个完成

00:48:14.896 --> 00:48:15.236 A:middle
按钮

00:48:15.236 --> 00:48:16.986 A:middle
也许就这样

00:48:16.986 --> 00:48:18.436 A:middle
这个操作完成后是一个自然的终止

00:48:18.796 --> 00:48:20.586 A:middle
不过无论如何 你都要在扩展

00:48:20.586 --> 00:48:22.096 A:middle
的环境中 调用 completeRequest

00:48:22.096 --> 00:48:24.096 A:middle
然后系统将

00:48:24.096 --> 00:48:25.856 A:middle
不再接受你的 UI

00:48:26.036 --> 00:48:27.746 A:middle
这仅仅是顾客操作

00:48:27.746 --> 00:48:30.026 A:middle
我之前许诺要讲解的

00:48:30.026 --> 00:48:31.426 A:middle
验证操作

00:48:31.426 --> 00:48:32.516 A:middle
是一个特殊情况 请看这个

00:48:33.376 --> 00:48:34.536 A:middle
验证操作

00:48:34.536 --> 00:48:36.776 A:middle
通过顾客 UI 操作一模一样的方法

00:48:36.776 --> 00:48:38.576 A:middle
被调用

00:48:39.296 --> 00:48:40.256 A:middle
但是它们是在一个

00:48:40.256 --> 00:48:41.446 A:middle
特殊情况下被调用的

00:48:41.446 --> 00:48:42.786 A:middle
这就是当你返回给我们一个

00:48:42.786 --> 00:48:43.596 A:middle
验证错误的情况

00:48:44.126 --> 00:48:45.336 A:middle
如果你转回给我们一个

00:48:45.336 --> 00:48:46.926 A:middle
验证错误

00:48:46.926 --> 00:48:48.276 A:middle
我们将会调用

00:48:48.276 --> 00:48:49.796 A:middle
prepareForAuthentication

00:48:50.206 --> 00:48:51.886 A:middle
就在你的 FPUI 扩展

00:48:52.296 --> 00:48:53.706 A:middle
ActionExtensionViewController 上调用

00:48:54.416 --> 00:48:55.656 A:middle
从这儿开始

00:48:55.656 --> 00:48:57.186 A:middle
一切就按照相同的方法运行了

00:48:57.756 --> 00:48:59.176 A:middle
你可以调用

00:48:59.176 --> 00:49:00.676 A:middle
你可以为验证

00:48:59.176 --> 00:49:00.676 A:middle
你可以为验证

00:49:00.676 --> 00:49:01.596 A:middle
展示任何必需的 UI

00:49:01.826 --> 00:49:03.106 A:middle
在一些情况下 用户

00:49:03.106 --> 00:49:03.916 A:middle
已经经过认证了

00:49:03.916 --> 00:49:05.506 A:middle
你就可以使用取消方法

00:49:05.626 --> 00:49:07.126 A:middle
视图控制器就会停止处理

00:49:07.126 --> 00:49:08.366 A:middle
你现在就经过认证了

00:49:08.366 --> 00:49:09.646 A:middle
然后我们就重新操作即可

00:49:10.536 --> 00:49:11.736 A:middle
这些操作

00:49:11.736 --> 00:49:15.916 A:middle
确实很棒 不过尽管说了

00:49:15.916 --> 00:49:17.686 A:middle
这么多 它们只出现在

00:49:17.686 --> 00:49:20.756 A:middle
文稿浏览器的视图控制器

00:49:20.756 --> 00:49:22.016 A:middle
或者是

00:49:22.016 --> 00:49:22.536 A:middle
文件 App 里

00:49:22.876 --> 00:49:24.106 A:middle
这很棒

00:49:24.656 --> 00:49:26.526 A:middle
这个方法很棒 能够使你

00:49:26.526 --> 00:49:28.036 A:middle
给你的用户展示一些东西

00:49:28.716 --> 00:49:30.336 A:middle
但是有时候

00:49:30.336 --> 00:49:31.496 A:middle
你可能有更多需求 对于这点

00:49:31.496 --> 00:49:32.656 A:middle
我们就提出了服务这个概念

00:49:33.876 --> 00:49:35.106 A:middle
什么是服务

00:49:35.586 --> 00:49:37.556 A:middle
正如我说过的 对于顾客操作

00:49:37.556 --> 00:49:38.576 A:middle
有很多值得注意的地方

00:49:39.536 --> 00:49:41.716 A:middle
但是有些时候

00:49:41.986 --> 00:49:43.996 A:middle
一些特定的文件

00:49:43.996 --> 00:49:44.466 A:middle
需要编程访问

00:49:45.016 --> 00:49:45.816 A:middle
比如说你正在

00:49:45.816 --> 00:49:47.556 A:middle
发布一个 SDK

00:49:47.916 --> 00:49:50.586 A:middle
这就是你能够

00:49:50.586 --> 00:49:52.306 A:middle
展示你的 SDK 正在展示

00:49:52.306 --> 00:49:53.726 A:middle
的功能

00:49:53.726 --> 00:49:54.766 A:middle
的所在

00:49:56.216 --> 00:49:58.596 A:middle
服务可以帮你直接

00:49:58.596 --> 00:50:00.416 A:middle
在一个条目上展示功能

00:49:58.596 --> 00:50:00.416 A:middle
在一个条目上展示功能

00:50:00.416 --> 00:50:02.196 A:middle
我们来看一下

00:50:02.196 --> 00:50:03.776 A:middle
它是如何运作的

00:50:03.966 --> 00:50:05.136 A:middle
首先 你需要定义

00:50:05.136 --> 00:50:05.866 A:middle
你的服务是什么

00:50:06.336 --> 00:50:08.736 A:middle
从最基本上讲

00:50:08.736 --> 00:50:11.186 A:middle
一个服务就是一个名字

00:50:11.226 --> 00:50:12.516 A:middle
这个名字是你赋予这个服务的标识符

00:50:12.516 --> 00:50:15.746 A:middle
再加上一个 Objective-C

00:50:15.746 --> 00:50:16.496 A:middle
协议

00:50:16.606 --> 00:50:18.276 A:middle
基本上任何老的

00:50:18.276 --> 00:50:19.346 A:middle
Objective-C 协议都可以

00:50:19.956 --> 00:50:21.306 A:middle
我们很快就会

00:50:21.306 --> 00:50:22.786 A:middle
讲一讲要格外注意的地方

00:50:22.996 --> 00:50:25.546 A:middle
这个协议必须是

00:50:25.546 --> 00:50:27.576 A:middle
你和使用它的开发人员

00:50:27.576 --> 00:50:28.056 A:middle
都知晓的

00:50:28.056 --> 00:50:30.286 A:middle
所以 你们二者需要决定

00:50:30.286 --> 00:50:31.836 A:middle
使用哪个协议

00:50:32.376 --> 00:50:33.746 A:middle
这是因为

00:50:33.746 --> 00:50:35.736 A:middle
使用它的开发人员将会

00:50:35.736 --> 00:50:37.146 A:middle
对你展示的对象

00:50:37.146 --> 00:50:38.916 A:middle
进行有效的

00:50:38.916 --> 00:50:39.596 A:middle
方法调用

00:50:40.116 --> 00:50:41.236 A:middle
如果签名不匹配的话

00:50:41.236 --> 00:50:43.026 A:middle
就没有办法运行

00:50:43.026 --> 00:50:44.556 A:middle
结果只会出现

00:50:44.946 --> 00:50:45.036 A:middle
错误

00:50:45.906 --> 00:50:47.596 A:middle
当我说它们会进行

00:50:47.596 --> 00:50:49.076 A:middle
方法调用时

00:50:49.076 --> 00:50:51.236 A:middle
我的意思是它们将会通过 NSXPC

00:50:51.236 --> 00:50:52.876 A:middle
来进行运作

00:50:52.936 --> 00:50:55.136 A:middle
这是一项针对进程间通讯

00:50:55.136 --> 00:50:56.306 A:middle
的伟大技术

00:50:56.856 --> 00:50:59.056 A:middle
这也就是意味着平常的

00:50:59.056 --> 00:51:00.206 A:middle
XPC 规则也适用

00:50:59.056 --> 00:51:00.206 A:middle
XPC 规则也适用

00:51:01.056 --> 00:51:03.316 A:middle
所以 所有通过

00:51:03.316 --> 00:51:04.446 A:middle
这个协议的参数都

00:51:04.446 --> 00:51:05.586 A:middle
必须能够被安全编码

00:51:05.876 --> 00:51:07.236 A:middle
当然 所有的类别

00:51:07.236 --> 00:51:09.086 A:middle
也必须能够在你的扩展

00:51:09.086 --> 00:51:11.916 A:middle
和进行方法调用的 App

00:51:11.946 --> 00:51:12.636 A:middle
上找的到

00:51:13.226 --> 00:51:14.926 A:middle
你不能直接从这个协议

00:51:15.216 --> 00:51:17.346 A:middle
回传任何对象

00:51:17.996 --> 00:51:20.236 A:middle
如果你不得不回传

00:51:20.306 --> 00:51:21.556 A:middle
一些东西的话

00:51:21.556 --> 00:51:22.996 A:middle
你必须通过 Completion block

00:51:22.996 --> 00:51:23.266 A:middle
来进行

00:51:23.866 --> 00:51:25.666 A:middle
关于这个的规则

00:51:25.666 --> 00:51:28.576 A:middle
是很有趣的

00:51:28.606 --> 00:51:30.406 A:middle
在 2012 年有一次讲座

00:51:30.866 --> 00:51:32.206 A:middle
很细致地进行了讲解

00:51:32.206 --> 00:51:33.906 A:middle
比我今天在这里

00:51:33.906 --> 00:51:34.536 A:middle
能够大家讲的细致的多

00:51:35.786 --> 00:51:37.546 A:middle
我建议大家

00:51:37.546 --> 00:51:38.306 A:middle
去看看那一次的讲座

00:51:39.336 --> 00:51:40.576 A:middle
好的 我们接下来快速看一下

00:51:40.786 --> 00:51:41.996 A:middle
这里会发生的数据流

00:51:41.996 --> 00:51:44.036 A:middle
因为这点

00:51:44.176 --> 00:51:45.596 A:middle
还是值得大家一看的

00:51:46.076 --> 00:51:47.326 A:middle
你的第三方应用程序

00:51:47.976 --> 00:51:50.226 A:middle
启动并且

00:51:50.226 --> 00:51:54.416 A:middle
查询一个网址 有什么服务

00:51:54.846 --> 00:51:56.686 A:middle
能够显示在这个网址上呢

00:51:56.686 --> 00:51:57.956 A:middle
此时 你的扩展受到调用

00:51:57.956 --> 00:52:01.566 A:middle
来进行答复

00:51:57.956 --> 00:52:01.566 A:middle
来进行答复

00:52:01.676 --> 00:52:02.916 A:middle
嘿 这个条目上有

00:52:02.916 --> 00:52:04.536 A:middle
哪些支持的服务呢

00:52:05.636 --> 00:52:07.956 A:middle
它将会回传一批服务的来源

00:52:07.956 --> 00:52:09.336 A:middle
一个服务的来源并不是

00:52:09.336 --> 00:52:10.326 A:middle
服务本身

00:52:10.866 --> 00:52:13.326 A:middle
它是一个能够有效

00:52:13.326 --> 00:52:14.826 A:middle
创建服务的对象

00:52:14.826 --> 00:52:16.586 A:middle
可以创建一个 XPC 端点侦听器

00:52:17.046 --> 00:52:19.606 A:middle
我们将这些服务

00:52:19.766 --> 00:52:21.676 A:middle
回传给应用程序

00:52:22.136 --> 00:52:23.426 A:middle
所以在服务对象上

00:52:23.426 --> 00:52:24.826 A:middle
应用程序可以

00:52:25.136 --> 00:52:26.316 A:middle
创建一个代理对象

00:52:26.666 --> 00:52:27.916 A:middle
我们来看一下

00:52:27.916 --> 00:52:28.546 A:middle
这是怎么样运行的

00:52:29.196 --> 00:52:31.146 A:middle
第三方应用程序

00:52:31.146 --> 00:52:32.726 A:middle
在查找完可用的服务

00:52:32.726 --> 00:52:34.216 A:middle
之后 开始使用

00:52:34.216 --> 00:52:34.706 A:middle
其中的一个服务

00:52:34.706 --> 00:52:36.046 A:middle
当然 可能不只是一个服务

00:52:36.046 --> 00:52:37.186 A:middle
而是任意数量的 对吧

00:52:37.776 --> 00:52:39.156 A:middle
它先查看一下这些服务

00:52:39.536 --> 00:52:42.076 A:middle
的标识符决定

00:52:42.076 --> 00:52:43.796 A:middle
想要使用哪一个

00:52:43.796 --> 00:52:44.676 A:middle
然后创建一个 Messenger

00:52:45.536 --> 00:52:47.696 A:middle
此时 我们让

00:52:47.696 --> 00:52:50.126 A:middle
你在服务来源上的扩展

00:52:50.126 --> 00:52:51.726 A:middle
建立一个

00:52:51.726 --> 00:52:52.326 A:middle
端点侦听器

00:52:53.076 --> 00:52:54.976 A:middle
然后它回传了这个

00:52:54.976 --> 00:52:56.276 A:middle
ListenerEndpoint

00:52:56.656 --> 00:52:58.436 A:middle
是一个已有的 NSXPC 类别 尽管

00:52:58.436 --> 00:52:59.876 A:middle
目前它只能在

00:52:59.876 --> 00:53:00.426 A:middle
macOS 上显示

00:52:59.876 --> 00:53:00.426 A:middle
macOS 上显示

00:53:00.866 --> 00:53:02.136 A:middle
我们现在也将其移植到 iOS 上

00:53:02.576 --> 00:53:03.906 A:middle
此时 第三方应用程序

00:53:03.906 --> 00:53:05.456 A:middle
能够在 Messenger 上获得

00:53:05.456 --> 00:53:07.186 A:middle
远程代理

00:53:07.186 --> 00:53:09.266 A:middle
然后调用你的侦听器

00:53:09.266 --> 00:53:10.816 A:middle
委托进行

00:53:10.816 --> 00:53:13.776 A:middle
shouldAcceptConnection 回调

00:53:14.816 --> 00:53:16.396 A:middle
此时 你可以调用

00:53:16.396 --> 00:53:18.306 A:middle
可以配置这个连接

00:53:19.246 --> 00:53:21.996 A:middle
然后将其回传至

00:53:22.276 --> 00:53:22.896 A:middle
系统

00:53:23.616 --> 00:53:25.236 A:middle
在这个情况下

00:53:25.236 --> 00:53:27.626 A:middle
比如你提供一个代理对象

00:53:27.626 --> 00:53:28.926 A:middle
正在被我们的扩展

00:53:28.926 --> 00:53:29.526 A:middle
导出

00:53:30.006 --> 00:53:33.366 A:middle
然后从这里开始

00:53:33.366 --> 00:53:35.386 A:middle
我们就可以在第三方应用程序的

00:53:35.736 --> 00:53:37.856 A:middle
远程代理对象上

00:53:37.856 --> 00:53:39.206 A:middle
调用协议中的

00:53:39.206 --> 00:53:40.206 A:middle
任何方法

00:53:40.686 --> 00:53:42.156 A:middle
所有的这些调用都将

00:53:42.156 --> 00:53:45.236 A:middle
被解读成我们的扩展

00:53:45.236 --> 00:53:45.806 A:middle
中的调用

00:53:47.216 --> 00:53:49.706 A:middle
这是一个很强大的机制

00:53:50.896 --> 00:53:53.106 A:middle
能够帮助你

00:53:54.336 --> 00:53:58.916 A:middle
在你的扩展上显示

00:53:58.916 --> 00:54:01.366 A:middle
任何老的 SDK 操作

00:53:58.916 --> 00:54:01.366 A:middle
任何老的 SDK 操作

00:54:01.886 --> 00:54:04.276 A:middle
当然了 说句离题的话

00:54:04.276 --> 00:54:05.486 A:middle
我们并不期望大家都使用这个

00:54:05.486 --> 00:54:06.876 A:middle
如果你的初版没有使用

00:54:06.876 --> 00:54:08.956 A:middle
这个机制

00:54:08.956 --> 00:54:09.916 A:middle
也是完全没有问题的

00:54:10.246 --> 00:54:11.836 A:middle
这是一个很高阶的话题

00:54:12.316 --> 00:54:15.636 A:middle
只要你能够

00:54:15.636 --> 00:54:18.006 A:middle
使用枚举

00:54:18.006 --> 00:54:19.786 A:middle
和平常的 File Provider  操作

00:54:20.106 --> 00:54:21.876 A:middle
我们就已经快欣喜若狂了

00:54:22.996 --> 00:54:23.626 A:middle
好的

00:54:24.076 --> 00:54:25.116 A:middle
我们来总结一下

00:54:25.116 --> 00:54:25.466 A:middle
今天讲的内容

00:54:26.336 --> 00:54:27.586 A:middle
我们知道了什么是一个

00:54:27.586 --> 00:54:28.996 A:middle
File Provider

00:54:28.996 --> 00:54:30.926 A:middle
知道了如何用 File Provider 支持

00:54:31.476 --> 00:54:32.986 A:middle
文件 App 中的枚举

00:54:33.036 --> 00:54:36.846 A:middle
以及如何使用它在

00:54:36.846 --> 00:54:37.986 A:middle
文稿浏览器中显示文件

00:54:39.206 --> 00:54:40.326 A:middle
我们讲过了

00:54:40.326 --> 00:54:43.606 A:middle
如何利用枚举

00:54:43.966 --> 00:54:46.096 A:middle
来展示这二者

00:54:46.096 --> 00:54:47.236 A:middle
如何枚举工作集

00:54:47.236 --> 00:54:48.196 A:middle
如何枚举

00:54:48.196 --> 00:54:49.846 A:middle
工作集发生的变更

00:54:49.846 --> 00:54:51.046 A:middle
以及如何将这些变更推送到

00:54:51.046 --> 00:54:51.656 A:middle
工作集

00:54:52.496 --> 00:54:54.576 A:middle
最后 我们也谈了

00:54:54.576 --> 00:54:57.436 A:middle
如何使用操作来

00:54:57.596 --> 00:54:59.896 A:middle
修改你的结构层次

00:54:59.896 --> 00:55:01.646 A:middle
然后更进一步

00:54:59.896 --> 00:55:01.646 A:middle
然后更进一步

00:55:01.646 --> 00:55:03.726 A:middle
定制这些操作

00:55:03.726 --> 00:55:06.286 A:middle
甚至使用完全

00:55:06.286 --> 00:55:07.436 A:middle
根据你的 Provider 定制的

00:55:07.436 --> 00:55:09.416 A:middle
服务然后将其

00:55:09.416 --> 00:55:10.166 A:middle
展示给第三方应用程序

00:55:11.056 --> 00:55:13.116 A:middle
如果各位需要更多的信息 我们在

00:55:13.116 --> 00:55:16.076 A:middle
developer.apple.com 有讲解

00:55:17.196 --> 00:55:18.966 A:middle
我们还有一系列的会议

00:55:18.966 --> 00:55:20.916 A:middle
比我们能够在今天

00:55:20.916 --> 00:55:22.226 A:middle
给大家讲的使用

00:55:22.226 --> 00:55:25.006 A:middle
各种技术的信息

00:55:25.006 --> 00:55:25.356 A:middle
要细致的多

00:55:26.456 --> 00:55:27.856 A:middle
好了 我祝愿

00:55:27.856 --> 00:55:29.016 A:middle
大家与会愉快

00:55:29.246 --> 00:55:29.946 A:middle
十分感谢大家

00:55:31.016 --> 00:55:33.000 A:middle
[掌声]
