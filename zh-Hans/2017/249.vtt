WEBVTT

00:00:17.900 --> 00:00:21.000 align:middle line:10%
<c.magenta>大家好 我叫斯图尔特·蒙特高里</c>
<c.magenta>在本次演讲中</c>

00:00:21.067 --> 00:00:24.600 align:middle line:10%
<c.magenta>我们会讨论在iOS11</c>
<c.magenta>如何在应用程序里使用全新的API</c>

00:00:24.667 --> 00:00:27.700 align:middle line:10%
<c.magenta>来过滤不需要的SMS和MMS信息</c>

00:00:27.767 --> 00:00:30.333 align:middle line:10%
<c.magenta>并帮助用户避免不断增加的打扰</c>

00:00:31.767 --> 00:00:33.467 align:middle line:90%,end
<c.magenta>在开始之前 来看一下</c>

00:00:33.533 --> 00:00:38.167 align:middle line:90%,end
<c.magenta>iOS 10.3接收到不需要的</c>
<c.magenta>SMS信息时会发生什么</c>

00:00:40.833 --> 00:00:44.533 align:middle line:90%,end
<c.magenta>这里收到一条非常明显的</c>
<c.magenta>不需要的 垃圾SMS</c>

00:00:45.167 --> 00:00:48.933 align:middle line:90%,end
<c.magenta>像这样的信息对用户来说很烦人</c>
<c.magenta>因为它们会发出声音或震动</c>

00:00:49.000 --> 00:00:52.133 align:middle line:90%,end
<c.magenta>就像普通的信息一样</c>
<c.magenta>并分心你正在做的任何事情</c>

00:00:55.467 --> 00:00:58.100 align:middle line:90%,end
<c.magenta>如果打开信息应用 它就位于顶部</c>

00:00:58.167 --> 00:01:01.000 align:middle line:90%,end
<c.magenta>和真正的信息混合在一起</c>
<c.magenta>让列表越变越乱</c>

00:00:58.167 --> 00:01:01.000 align:middle line:90%,end
<c.magenta>和真正的信息混合在一起</c>
<c.magenta>让列表越变越乱</c>

00:01:01.833 --> 00:01:04.766 align:middle line:90%,end
<c.magenta>不幸的是 一些iPhone用户</c>
<c.magenta>收到很多这种信息</c>

00:01:04.833 --> 00:01:07.067 align:middle line:90%,end
<c.magenta>希望有一种方法可以过滤掉它们</c>

00:01:07.667 --> 00:01:12.267 align:middle line:90%,end
<c.magenta>iOS 11推出了全新API</c>
<c.magenta>可以让你的应用程序分析</c>

00:01:12.333 --> 00:01:16.433 align:middle line:90%,end
<c.magenta>来自未知发件人的</c>
<c.magenta>SMS或MMS的发件人和内容</c>

00:01:16.500 --> 00:01:18.967 align:middle line:90%,end
<c.magenta>并且尝试过滤那些未经申请的信息</c>

00:01:19.367 --> 00:01:20.667 align:middle line:90%,end
<c.magenta>让我来向大家展示其工作原理</c>

00:01:22.833 --> 00:01:26.967 align:middle line:90%,end
<c.magenta>在运行iOS 11的iPhone上</c>
<c.magenta>启动全新的信息应用</c>

00:01:27.700 --> 00:01:30.567 align:middle line:90%,end
<c.magenta>由于我已经安装了一个</c>
<c.magenta>信息过滤应用程序扩展</c>

00:01:30.633 --> 00:01:35.200 align:middle line:90%,end
<c.magenta>并且在设置中启用</c>
<c.magenta>我看到第二个选项卡 名为SMS垃圾</c>

00:01:35.767 --> 00:01:38.033 align:middle line:90%,end
<c.magenta>如果收到应用程序认为是垃圾的信息</c>

00:01:38.100 --> 00:01:39.867 align:middle line:90%,end
<c.magenta>将会显示在该选项卡下</c>

00:01:41.367 --> 00:01:43.867 align:middle line:90%,end
<c.magenta>啊 有一个新信息</c>
<c.magenta>来看一下是什么</c>

00:01:46.033 --> 00:01:47.867 align:middle line:90%,end
<c.magenta>这和之前信息一样</c>

00:01:47.933 --> 00:01:51.500 align:middle line:90%,end
<c.magenta>但现在它不再出现在</c>
<c.magenta>已知联系人的常规列表里</c>

00:01:51.567 --> 00:01:54.133 align:middle line:90%,end
<c.magenta>并且不会发出声音或通知让我分心</c>

00:01:55.933 --> 00:01:59.233 align:middle line:10%
<c.magenta>如果点开它阅读</c>
<c.magenta>可以看到底部的标签</c>

00:01:59.300 --> 00:02:02.033 align:middle line:10%
<c.magenta>它被一个名为“Filter It”的</c>
<c.magenta>应用程序标为垃圾</c>

00:01:59.300 --> 00:02:02.033 align:middle line:10%
<c.magenta>它被一个名为“Filter It”的</c>
<c.magenta>应用程序标为垃圾</c>

00:02:05.100 --> 00:02:08.433 align:middle line:90%,end
<c.magenta>我们决定添加该功能有几个理由</c>

00:02:09.600 --> 00:02:10.600 align:middle line:90%,end
<c.magenta>不需要的信息</c>

00:02:10.667 --> 00:02:14.433 align:middle line:90%,end
<c.magenta>即用户收到的任何未经申请的</c>
<c.magenta>或垃圾类信息</c>

00:02:14.500 --> 00:02:17.433 align:middle line:90%,end
<c.magenta>近年来已经越来越成为用户的困扰</c>

00:02:18.267 --> 00:02:20.567 align:middle line:90%,end
<c.magenta>但除了困扰 更值得担心的是</c>

00:02:20.633 --> 00:02:23.100 align:middle line:90%,end
<c.magenta>这些信息往往带有诈骗目的</c>

00:02:23.167 --> 00:02:25.067 align:middle line:90%,end
<c.magenta>并含有可能会损害用户的链接</c>

00:02:25.700 --> 00:02:28.333 align:middle line:90%,end
<c.magenta>因此 当然我们要阻止这些消息的发送</c>

00:02:28.400 --> 00:02:29.567 align:middle line:90%,end
<c.magenta>只要有可能</c>

00:02:30.700 --> 00:02:33.267 align:middle line:90%,end
<c.magenta>有一个重要区别 在iMessage</c>

00:02:33.333 --> 00:02:35.300 align:middle line:90%,end
<c.magenta>SMS和MMS信息之间</c>

00:02:36.033 --> 00:02:39.567 align:middle line:90%,end
<c.magenta>对于iMessage 我们在设备上</c>
<c.magenta>提供报告为垃圾邮件的功能</c>

00:02:39.633 --> 00:02:42.000 align:middle line:90%,end
<c.magenta>因为这些信息是端对端加密的</c>

00:02:42.067 --> 00:02:44.033 align:middle line:90%,end
<c.magenta>并通过iMessage网络发送</c>

00:02:44.433 --> 00:02:47.867 align:middle line:90%,end
<c.magenta>但我们对SMS或MMS无法这样做</c>

00:02:47.933 --> 00:02:51.600 align:middle line:90%,end
<c.magenta>因为它们直接通过</c>
<c.magenta>无线运营商发送到用户设备</c>

00:02:51.967 --> 00:02:54.400 align:middle line:90%,end
<c.magenta>因此过滤这些信息必须在本地进行</c>

00:02:54.467 --> 00:02:58.300 align:middle line:90%,end
<c.magenta>而不是在集中式的服务器上</c>
<c.magenta>因此这些API都在本地</c>

00:02:59.433 --> 00:03:02.267 align:middle line:90%,end
<c.magenta>最后 我们听说你们中很多人都是</c>

00:02:59.433 --> 00:03:02.267 align:middle line:90%,end
<c.magenta>最后 我们听说你们中很多人都是</c>

00:03:02.333 --> 00:03:05.567 align:middle line:90%,end
<c.magenta>分析并检测不需要信息的专家</c>

00:03:05.633 --> 00:03:08.467 align:middle line:90%,end
<c.magenta>我们十分激动能够邀请一些应用程序</c>
<c.magenta>帮我们完成这个任务</c>

00:03:10.900 --> 00:03:14.167 align:middle line:90%,end
<c.magenta>在本次演讲的剩余时间里</c>
<c.magenta>我将详细介绍几个方面</c>

00:03:15.300 --> 00:03:18.900 align:middle line:90%,end
<c.magenta>首先 我会详细介绍</c>
<c.magenta>我们称之为信息过滤扩展</c>

00:03:18.967 --> 00:03:20.100 align:middle line:90%,end
<c.magenta>以及它们的工作原理</c>

00:03:21.700 --> 00:03:25.067 align:middle line:90%,end
<c.magenta>接下来 我会讲一些</c>
<c.magenta>关于隐私的重要考虑</c>

00:03:25.133 --> 00:03:27.700 align:middle line:90%,end
<c.magenta>因为这些扩展都有一些特殊的规则</c>

00:03:28.633 --> 00:03:32.167 align:middle line:90%,end
<c.magenta>然后 我会讲讲扩展</c>
<c.magenta>如何使用网络支持服务进行检查</c>

00:03:32.233 --> 00:03:33.967 align:middle line:90%,end
<c.magenta>对某些应用来说应该有用</c>

00:03:35.000 --> 00:03:37.333 align:middle line:90%,end
<c.magenta>我会做几个演示</c>

00:03:37.400 --> 00:03:39.667 align:middle line:90%,end
<c.magenta>在Xcode里创建扩展的过程里</c>

00:03:39.733 --> 00:03:40.833 align:middle line:90%,end
<c.magenta>现在开始</c>

00:03:41.833 --> 00:03:43.400 align:middle line:90%,end
<c.magenta>（信息过滤器扩展）</c>

00:03:43.467 --> 00:03:47.000 align:middle line:90%,end
<c.magenta>实现目标的方法</c>
<c.magenta>我们称之为信息过滤扩展</c>

00:03:47.067 --> 00:03:48.767 align:middle line:90%,end
<c.magenta>让我们来深入了解一下</c>

00:03:50.167 --> 00:03:52.933 align:middle line:90%,end
<c.magenta>顾名思义</c>
<c.magenta>这是个新的应用程序扩展类型</c>

00:03:53.000 --> 00:03:54.233 align:middle line:90%,end
<c.magenta>可以包含在你的应用里</c>

00:03:55.567 --> 00:04:00.033 align:middle line:90%,end
<c.magenta>它的API位于iOS 11全新的框架中</c>
<c.magenta>名为Identity Lookup</c>

00:03:55.567 --> 00:04:00.033 align:middle line:90%,end
<c.magenta>它的API位于iOS 11全新的框架中</c>
<c.magenta>名为Identity Lookup</c>

00:04:00.800 --> 00:04:04.033 align:middle line:90%,end
<c.magenta>如果用户安装了一个应用程序</c>
<c.magenta>带有其中一个扩展</c>

00:04:04.100 --> 00:04:07.933 align:middle line:90%,end
<c.magenta>开始使用时</c>
<c.magenta>必须先在信息设置里启用</c>

00:04:09.167 --> 00:04:11.600 align:middle line:90%,end
<c.magenta>一次只能启用一个扩展</c>

00:04:11.667 --> 00:04:14.867 align:middle line:90%,end
<c.magenta>若用户想要禁用该功能</c>
<c.magenta>可以选择“无”</c>

00:04:15.800 --> 00:04:18.267 align:middle line:90%,end
<c.magenta>如果被启用 该扩展被调用</c>

00:04:18.333 --> 00:04:22.333 align:middle line:90%,end
<c.magenta>在每次从未知发件人</c>
<c.magenta>收到SMS或MMS信息时</c>

00:04:23.000 --> 00:04:24.633 align:middle line:90%,end
<c.magenta>还可以使用其他一些标准</c>

00:04:24.700 --> 00:04:26.967 align:middle line:90%,end
<c.magenta>来决定何时把信息发给扩展</c>

00:04:27.033 --> 00:04:28.433 align:middle line:90%,end
<c.magenta>马上就要来讲解这一点</c>

00:04:28.500 --> 00:04:31.133 align:middle line:10%
<c.magenta>首先来看一张显示整体流程的图</c>

00:04:31.867 --> 00:04:35.433 align:middle line:10%
<c.magenta>当手机收到信息时</c>
<c.magenta>首先会在信息应用里</c>

00:04:35.967 --> 00:04:38.233 align:middle line:10%
<c.magenta>如果是SMS或MMS信息</c>

00:04:38.300 --> 00:04:41.533 align:middle line:10%
<c.magenta>并且发件人不在收件人的联系人名单里</c>

00:04:41.600 --> 00:04:44.867 align:middle line:10%
<c.magenta>用户在设置里选择的扩展将会启动</c>

00:04:44.933 --> 00:04:47.200 align:middle line:10%
<c.magenta>并且会被传递发件人和正文信息</c>

00:04:47.267 --> 00:04:51.000 align:middle line:10%
<c.magenta>通过一个对象名为</c>
<c.magenta>ILMessageFilterQueryRequest</c>

00:04:51.067 --> 00:04:53.300 align:middle line:10%
<c.magenta>它也是Identity Lookup框架的一部分</c>

00:04:54.433 --> 00:04:57.533 align:middle line:10%
<c.magenta>当扩展收到后 将开始检查信息</c>

00:04:57.600 --> 00:05:00.700 align:middle line:10%
<c.magenta>查看信息发件人或正文 或两者</c>

00:04:57.600 --> 00:05:00.700 align:middle line:10%
<c.magenta>查看信息发件人或正文 或两者</c>

00:05:00.767 --> 00:05:04.267 align:middle line:10%
<c.magenta>还可能检查不良电话号码列表</c>

00:05:04.333 --> 00:05:07.467 align:middle line:10%
<c.magenta>也可能检查正文中</c>
<c.magenta>是否有可疑的网页链接</c>

00:05:07.533 --> 00:05:08.967 align:middle line:10%
<c.magenta>任何适当的检查均可</c>

00:05:09.167 --> 00:05:11.767 align:middle line:10%
<c.magenta>最后扩展必须产生一个回应</c>

00:05:11.833 --> 00:05:15.633 align:middle line:10%
<c.magenta>使用一个对象名为</c>
<c.magenta>ILMessageFilterQueryResponse</c>

00:05:15.700 --> 00:05:18.667 align:middle line:10%
<c.magenta>描述是否允许或过滤掉该信息</c>

00:05:18.733 --> 00:05:20.700 align:middle line:10%
<c.magenta>并将回应发还给信息应用</c>

00:05:21.667 --> 00:05:23.300 align:middle line:10%
<c.magenta>信息应用收到回应后</c>

00:05:23.367 --> 00:05:25.567 align:middle line:10%
<c.magenta>要么正常提醒用户</c>

00:05:25.633 --> 00:05:29.333 align:middle line:10%
<c.magenta>要么禁止通知</c>
<c.magenta>将该信息线程移动到垃圾选项卡</c>

00:05:32.167 --> 00:05:33.000 align:middle line:90%,end
<c.magenta>（隐私考虑）</c>

00:05:33.067 --> 00:05:35.100 align:middle line:90%,end
<c.magenta>这就是扩展工作原理概述</c>

00:05:35.167 --> 00:05:38.233 align:middle line:90%,end
<c.magenta>在继续之前</c>
<c.magenta>我想讲一个非常重要的主题</c>

00:05:38.300 --> 00:05:39.433 align:middle line:90%,end
<c.magenta>就是用户隐私</c>

00:05:40.767 --> 00:05:43.633 align:middle line:90%,end
<c.magenta>关于如何维护Apple客户期待的</c>
<c.magenta>强大的隐私级别</c>

00:05:43.700 --> 00:05:45.367 align:middle line:90%,end
<c.magenta>我们花了很多心思</c>

00:05:45.433 --> 00:05:47.067 align:middle line:90%,end
<c.magenta>也允许客户启用该类扩展</c>

00:05:47.133 --> 00:05:49.133 align:middle line:90%,end
<c.magenta>如果他们想要面对</c>

00:05:49.200 --> 00:05:50.633 align:middle line:90%,end
<c.magenta>不需要的信息这一持续性问题</c>

00:05:50.933 --> 00:05:53.833 align:middle line:90%,end
<c.magenta>扩展必须符合一些特殊规则</c>

00:05:53.900 --> 00:05:55.400 align:middle line:90%,end
<c.magenta>在使用这些API时</c>

00:05:56.867 --> 00:05:59.400 align:middle line:90%,end
<c.magenta>第一条规则是 信息收件人的电话</c>

00:05:59.467 --> 00:06:01.333 align:middle line:90%,end
<c.magenta>绝不能发送至扩展</c>

00:05:59.467 --> 00:06:01.333 align:middle line:90%,end
<c.magenta>绝不能发送至扩展</c>

00:06:01.800 --> 00:06:04.633 align:middle line:90%,end
<c.magenta>只有发件人的电话号码或邮件地址可以</c>

00:06:04.700 --> 00:06:06.067 align:middle line:90%,end
<c.magenta>因为需要这样做</c>

00:06:06.133 --> 00:06:08.467 align:middle line:90%,end
<c.magenta>来决定是否过滤一条信息</c>

00:06:09.400 --> 00:06:11.867 align:middle line:90%,end
<c.magenta>另一条关键规则是信息过滤扩展</c>

00:06:11.933 --> 00:06:15.433 align:middle line:90%,end
<c.magenta>绝不能在容器外导出信息内容</c>

00:06:15.500 --> 00:06:18.967 align:middle line:90%,end
<c.magenta>因此这些扩展还有额外的限制</c>

00:06:19.567 --> 00:06:22.400 align:middle line:90%,end
<c.magenta>它们不能写入</c>
<c.magenta>和所包含应用共享的文件</c>

00:06:22.600 --> 00:06:24.700 align:middle line:90%,end
<c.magenta>也不能执行网络操作</c>

00:06:25.467 --> 00:06:26.500 align:middle line:90%,end
<c.magenta>这么规定的原因是</c>

00:06:26.567 --> 00:06:28.933 align:middle line:90%,end
<c.magenta>尽管一些信息是不需要的垃圾</c>

00:06:29.233 --> 00:06:30.367 align:middle line:90%,end
<c.magenta>另一些可能是合法的</c>

00:06:30.433 --> 00:06:33.700 align:middle line:90%,end
<c.magenta>只是发件人还不在收件人的联系人里</c>

00:06:33.900 --> 00:06:36.633 align:middle line:90%,end
<c.magenta>因此所有信息都要保密 这是必须的</c>

00:06:36.700 --> 00:06:40.200 align:middle line:90%,end
<c.magenta>并且绝不能以任何方式</c>
<c.magenta>导出会暴露收件人的信息</c>

00:06:40.267 --> 00:06:42.367 align:middle line:90%,end
<c.magenta>除了信息本身包含的以外</c>

00:06:43.800 --> 00:06:46.167 align:middle line:90%,end
<c.magenta>尽管它们自己无法执行网络操作</c>

00:06:46.233 --> 00:06:47.833 align:middle line:90%,end
<c.magenta>这些扩展可以</c>

00:06:47.900 --> 00:06:50.500 align:middle line:90%,end
<c.magenta>间接向服务器推迟请求</c>

00:06:50.700 --> 00:06:53.067 align:middle line:90%,end
<c.magenta>当扩展请求推迟时</c>

00:06:53.133 --> 00:06:56.967 align:middle line:90%,end
<c.magenta>iOS会以扩展的名义</c>
<c.magenta>用一种安全的方法发出网络请求</c>

00:06:57.367 --> 00:06:58.900 align:middle line:90%,end
<c.magenta>之后我们会来看一个例子</c>

00:06:59.933 --> 00:07:01.200 align:middle line:90%,end
<c.magenta>需要记住的重点事项</c>

00:06:59.933 --> 00:07:01.200 align:middle line:90%,end
<c.magenta>需要记住的重点事项</c>

00:07:01.267 --> 00:07:03.733 align:middle line:90%,end
<c.magenta>是扩展绝不能在容器外</c>

00:07:03.800 --> 00:07:06.733 align:middle line:90%,end
<c.magenta>导出信息 这样才能维护用户隐私</c>

00:07:09.667 --> 00:07:12.733 align:middle line:90%,end
<c.magenta>信息应用有一些具体的标准</c>

00:07:12.800 --> 00:07:16.200 align:middle line:90%,end
<c.magenta>来决定是否给扩展发送信息</c>

00:07:17.033 --> 00:07:20.667 align:middle line:90%,end
<c.magenta>首先该功能只针对SMS和MMS信息</c>

00:07:20.733 --> 00:07:22.333 align:middle line:90%,end
<c.magenta>iMesssage除外</c>

00:07:22.767 --> 00:07:26.933 align:middle line:90%,end
<c.magenta>如前所述 不需要的iMessage</c>
<c.magenta>使用不同的机制来处理</c>

00:07:27.000 --> 00:07:29.567 align:middle line:90%,end
<c.magenta>所以扩展标准只适用于SMS和MMS</c>

00:07:30.900 --> 00:07:33.500 align:middle line:90%,end
<c.magenta>我反复提到 只有未知发件人</c>

00:07:33.567 --> 00:07:35.833 align:middle line:90%,end
<c.magenta>或不在收件人联系人名单里的</c>

00:07:35.900 --> 00:07:38.433 align:middle line:90%,end
<c.magenta>才真正发送给扩展进行分析</c>

00:07:39.033 --> 00:07:43.433 align:middle line:90%,end
<c.magenta>如果发件人在联系人名单里</c>
<c.magenta>我们认为收件人认识发件人</c>

00:07:44.000 --> 00:07:46.000 align:middle line:90%,end
<c.magenta>并想要从发件人处收到信息</c>

00:07:46.200 --> 00:07:49.600 align:middle line:90%,end
<c.magenta>也就是说如果一条信息</c>
<c.magenta>曾经错误地被归为垃圾</c>

00:07:49.667 --> 00:07:52.300 align:middle line:90%,end
<c.magenta>那么用户可以把该发件人</c>
<c.magenta>加入到联系人名单</c>

00:07:52.367 --> 00:07:54.267 align:middle line:90%,end
<c.magenta>以保证未来不会被过滤掉</c>

00:07:55.333 --> 00:07:59.567 align:middle line:90%,end
<c.magenta>如果用户正在</c>
<c.magenta>和不是联系人的人交换信息</c>

00:07:59.633 --> 00:08:02.267 align:middle line:90%,end
<c.magenta>并且多次回复了该线程</c>

00:07:59.633 --> 00:08:02.267 align:middle line:90%,end
<c.magenta>并且多次回复了该线程</c>

00:08:02.333 --> 00:08:05.200 align:middle line:90%,end
<c.magenta>我们会停止发送任何该线程的后续消息</c>

00:08:05.267 --> 00:08:06.267 align:middle line:90%,end
<c.magenta>至扩展当中</c>

00:08:06.900 --> 00:08:09.800 align:middle line:90%,end
<c.magenta>或者 如果用户多次回复</c>

00:08:09.867 --> 00:08:11.600 align:middle line:90%,end
<c.magenta>已经被标为垃圾的线程</c>

00:08:11.667 --> 00:08:14.200 align:middle line:90%,end
<c.magenta>该线程将会恢复至非垃圾选项卡</c>

00:08:15.000 --> 00:08:18.333 align:middle line:90%,end
<c.magenta>多次回复将会被解读为</c>
<c.magenta>来自收件人的信号</c>

00:08:18.400 --> 00:08:21.233 align:middle line:90%,end
<c.magenta>即他们确实想要和发件人进行交流</c>

00:08:22.133 --> 00:08:25.467 align:middle line:90%,end
<c.magenta>因此 所有这些标准不直接影响API</c>

00:08:25.533 --> 00:08:28.200 align:middle line:90%,end
<c.magenta>但是作为扩展开发者的你们</c>

00:08:28.267 --> 00:08:31.167 align:middle line:90%,end
<c.magenta>在测试应用时应该注意这一点</c>

00:08:34.732 --> 00:08:36.567 align:middle line:90%,end
<c.magenta>现在 我想在Xcode里做一个演示</c>

00:08:36.633 --> 00:08:38.933 align:middle line:90%,end
<c.magenta>关于如何创建信息过滤扩展</c>

00:08:40.633 --> 00:08:43.067 align:middle line:90%,end
<c.magenta>我编写了一个应用程序</c>
<c.magenta>名为Filter It</c>

00:08:43.133 --> 00:08:45.267 align:middle line:90%,end
<c.magenta>我想添加一个信息过滤扩展</c>

00:08:47.000 --> 00:08:49.667 align:middle line:90%,end
<c.magenta>首先需要做的是 添加一个新目标</c>

00:08:52.500 --> 00:08:55.467 align:middle line:90%,end
<c.magenta>选择iOS信息过滤模板</c>

00:08:56.267 --> 00:08:57.400 align:middle line:90%,end
<c.magenta>给它一个名字</c>

00:09:02.900 --> 00:09:05.067 align:middle line:90%,end
<c.magenta>一个新文件已经加入到项目</c>

00:09:05.133 --> 00:09:08.333 align:middle line:90%,end
<c.magenta>该文件名为Message</c>
<c.magenta>FilterExtension.swift</c>

00:09:08.400 --> 00:09:09.633 align:middle line:90%,end
<c.magenta>来看一下该文件</c>

00:09:20.000 --> 00:09:24.333 align:middle line:90%,end
<c.magenta>首先看到一个方法</c>
<c.magenta>名为handle_queryRequest context</c>

00:09:24.400 --> 00:09:25.933 align:middle line:90%,end
<c.magenta>该方法呼叫扩展</c>

00:09:26.000 --> 00:09:29.033 align:middle line:90%,end
<c.magenta>因此它可以检查传入的信息</c>
<c.magenta>以及返回的回应</c>

00:09:29.100 --> 00:09:30.667 align:middle line:90%,end
<c.magenta>使用completion处理程序</c>

00:09:33.167 --> 00:09:36.600 align:middle line:90%,end
<c.magenta>模板现有的结构是先尝试离线检查</c>

00:09:36.667 --> 00:09:40.267 align:middle line:90%,end
<c.magenta>使用这个方法名为offlineAction</c>
<c.magenta>(for:queryRequest)</c>

00:09:41.900 --> 00:09:46.033 align:middle line:90%,end
<c.magenta>它将返回一个操作 即允许 过滤或无</c>

00:09:48.267 --> 00:09:49.867 align:middle line:90%,end
<c.magenta>在该演示里 我们需要做的是</c>

00:09:49.933 --> 00:09:52.567 align:middle line:90%,end
<c.magenta>自定义该offlineAction</c>
<c.magenta>帮助方法</c>

00:09:52.833 --> 00:09:54.600 align:middle line:90%,end
<c.magenta>来看一下它当前的功能</c>

00:09:57.833 --> 00:09:59.833 align:middle line:90%,end
<c.magenta>现在它总是返回无</c>

00:10:00.033 --> 00:10:02.000 align:middle line:90%,end
<c.magenta>我将会把它替换为一些简单的逻辑</c>

00:10:02.067 --> 00:10:05.167 align:middle line:90%,end
<c.magenta>改为如果信息包含“垃圾”一词</c>
<c.magenta>则总是过滤</c>

00:10:09.433 --> 00:10:12.333 align:middle line:90%,end
<c.magenta>在真正的扩展里</c>
<c.magenta>可以把这一步设得更复杂</c>

00:10:12.400 --> 00:10:13.633 align:middle line:90%,end
<c.magenta>但目前这样已经可以了</c>

00:10:14.467 --> 00:10:16.967 align:middle line:90%,end
<c.magenta>这就是如何创建一个简单的 离线的</c>

00:10:17.033 --> 00:10:18.433 align:middle line:90%,end
<c.magenta>信息过滤扩展</c>

00:10:20.067 --> 00:10:22.000 align:middle line:90%,end
<c.magenta>（网络推迟）</c>

00:10:22.067 --> 00:10:24.067 align:middle line:90%,end
<c.magenta>尽管一些应用可以离线做大部分</c>

00:10:24.133 --> 00:10:25.933 align:middle line:90%,end
<c.magenta>或者所有的检查</c>

00:10:26.233 --> 00:10:28.833 align:middle line:90%,end
<c.magenta>另一些应用可能认为</c>
<c.magenta>利用网络服务器检查</c>

00:10:28.900 --> 00:10:30.500 align:middle line:90%,end
<c.magenta>是否需要过滤信息更为有用</c>

00:10:30.733 --> 00:10:33.133 align:middle line:90%,end
<c.magenta>接下来 我想讲讲网络推迟</c>

00:10:34.867 --> 00:10:37.000 align:middle line:90%,end
<c.magenta>展示网络推迟工作原理的最好方法</c>

00:10:37.067 --> 00:10:38.367 align:middle line:90%,end
<c.magenta>就是用另一张图</c>

00:10:39.533 --> 00:10:43.267 align:middle line:90%,end
<c.magenta>如前所述 当消息被接收</c>
<c.magenta>会首先在信息应用里</c>

00:10:43.333 --> 00:10:45.233 align:middle line:90%,end
<c.magenta>然后被发送至选中的扩展</c>

00:10:45.933 --> 00:10:48.633 align:middle line:90%,end
<c.magenta>但这次扩展选择推迟该请求</c>

00:10:48.700 --> 00:10:49.800 align:middle line:90%,end
<c.magenta>至网络服务器</c>

00:10:49.867 --> 00:10:52.633 align:middle line:90%,end
<c.magenta>该服务器的URL信息</c>
<c.magenta>在info.plist中指定</c>

00:10:53.300 --> 00:10:55.200 align:middle line:90%,end
<c.magenta>它告诉信息应用推迟</c>

00:10:55.267 --> 00:10:59.100 align:middle line:90%,end
<c.magenta>然后信息应用对该服务器URL</c>
<c.magenta>发出JSON请求</c>

00:11:00.067 --> 00:11:02.233 align:middle line:90%,end
<c.magenta>然后服务器检查</c>

00:11:02.300 --> 00:11:06.200 align:middle line:90%,end
<c.magenta>JSON请求中的信息内容</c>
<c.magenta>并可以以任何格式进行回应</c>

00:11:06.533 --> 00:11:09.267 align:middle line:10%
<c.magenta>该回应会马上传回给扩展</c>

00:11:09.967 --> 00:11:12.933 align:middle line:10%
<c.magenta>这里 扩展从服务器读取响应</c>

00:11:13.000 --> 00:11:17.600 align:middle line:10%
<c.magenta>并最终返回一个</c>
<c.magenta>ILMessageFilterQueryResponse</c>

00:11:22.100 --> 00:11:23.967 align:middle line:90%,end
<c.magenta>请注意有一些限制</c>

00:11:24.033 --> 00:11:25.667 align:middle line:90%,end
<c.magenta>在使用网络推迟时</c>

00:11:26.233 --> 00:11:28.433 align:middle line:90%,end
<c.magenta>首先 推迟的网络请求</c>

00:11:28.500 --> 00:11:31.100 align:middle line:90%,end
<c.magenta>不包含任何个人身份信息</c>

00:11:31.167 --> 00:11:32.900 align:middle line:90%,end
<c.magenta>关于信息收件人</c>

00:11:35.200 --> 00:11:40.167 align:middle line:90%,end
<c.magenta>网络URL被静态硬编码至</c>
<c.magenta>扩展的info.plist文件</c>

00:11:40.233 --> 00:11:44.333 align:middle line:90%,end
<c.magenta>键名为ILMessageFilterExtension</c>
<c.magenta>NetworkURL</c>

00:11:44.667 --> 00:11:48.500 align:middle line:90%,end
<c.magenta>因此不同的请求或不同的用户</c>
<c.magenta>该URL都不会改变</c>

00:11:52.900 --> 00:11:57.400 align:middle line:90%,end
<c.magenta>所有URL都必须是安全的Https</c>
<c.magenta>服务器必须被配置为</c>

00:11:57.467 --> 00:12:00.200 align:middle line:90%,end
<c.magenta>不需要任何应用程序传输安全技术</c>

00:11:57.467 --> 00:12:00.200 align:middle line:90%,end
<c.magenta>不需要任何应用程序传输安全技术</c>

00:12:00.267 --> 00:12:03.767 align:middle line:90%,end
<c.magenta>即ATS覆盖 因为无法配置它们</c>

00:12:05.567 --> 00:12:08.833 align:middle line:10%
<c.magenta>该功能还需要应用和服务器</c>

00:12:08.900 --> 00:12:13.500 align:middle line:10%
<c.magenta>都使用关联的域</c>
<c.magenta>或Apple App Site Association功能</c>

00:12:13.567 --> 00:12:15.133 align:middle line:10%
<c.magenta>也许你们对此已经很熟悉</c>

00:12:15.200 --> 00:12:17.167 align:middle line:10%
<c.magenta>如果曾经采用过别的iOS功能</c>

00:12:17.233 --> 00:12:19.633 align:middle line:10%
<c.magenta>比如 App Links</c>
<c.magenta>或者Shared Web Credentials</c>

00:12:20.833 --> 00:12:22.733 align:middle line:90%,end
<c.magenta>更多信息请观看演讲</c>

00:12:22.800 --> 00:12:26.800 align:middle line:90%,end
<c.magenta>2015年WWDC上的</c>
<c.magenta>“无缝连接你的应用程序”</c>

00:12:28.167 --> 00:12:29.967 align:middle line:90%,end
<c.magenta>最后要注意的限制是</c>

00:12:30.033 --> 00:12:32.500 align:middle line:90%,end
<c.magenta>任何网络服务器</c>
<c.magenta>想要设置的Cookie</c>

00:12:32.567 --> 00:12:34.833 align:middle line:90%,end
<c.magenta>出于维护隐私 都会被忽略</c>

00:12:38.100 --> 00:12:41.700 align:middle line:90%,end
<c.magenta>向网络服务发送的请求</c>
<c.magenta>都是格式化的JSON</c>

00:12:41.767 --> 00:12:46.333 align:middle line:90%,end
<c.magenta>并包括ILMessageFilterQueryRequest</c>
<c.magenta>对象里的相同信息</c>

00:12:46.400 --> 00:12:50.767 align:middle line:90%,end
<c.magenta>包括信息发件人</c>
<c.magenta>即一个电话号码或邮件地址</c>

00:12:50.833 --> 00:12:52.033 align:middle line:90%,end
<c.magenta>以及信息正文</c>

00:12:53.267 --> 00:12:55.800 align:middle line:90%,end
<c.magenta>请求还包括应用程序的版本</c>

00:12:55.867 --> 00:12:59.300 align:middle line:90%,end
<c.magenta>即应用程序的info.plist文件中的</c>
<c.magenta>CFBundleVersion键值</c>

00:13:00.233 --> 00:13:03.033 align:middle line:90%,end
<c.magenta>这一点可能有用</c>
<c.magenta>如果应用程序已经发布了</c>

00:13:03.100 --> 00:13:05.833 align:middle line:90%,end
<c.magenta>几个具有不同功能的版本</c>

00:13:05.900 --> 00:13:07.267 align:middle line:90%,end
<c.magenta>并且需要格式化回应</c>

00:13:07.333 --> 00:13:10.467 align:middle line:90%,end
<c.magenta>以确保某个特定版本的</c>
<c.magenta>应用程序可以理解</c>

00:13:11.567 --> 00:13:14.633 align:middle line:90%,end
<c.magenta>还包括了JSON请求格式本身的版本</c>

00:13:14.700 --> 00:13:16.000 align:middle line:90%,end
<c.magenta>也就是当前版本</c>

00:13:17.267 --> 00:13:18.800 align:middle line:90%,end
<c.magenta>和请求格式不同</c>

00:13:19.167 --> 00:13:22.267 align:middle line:90%,end
<c.magenta>回应格式完全取决于你的应用程序</c>

00:13:22.333 --> 00:13:24.567 align:middle line:90%,end
<c.magenta>并不一定非要JSON格式</c>

00:13:25.033 --> 00:13:27.833 align:middle line:90%,end
<c.magenta>回应正文传回扩展进行解析</c>

00:13:27.900 --> 00:13:30.100 align:middle line:90%,end
<c.magenta>因此对其格式没有要求</c>

00:13:32.900 --> 00:13:35.433 align:middle line:90%,end
<c.magenta>快速看一下JSON请求格式</c>

00:13:35.500 --> 00:13:38.033 align:middle line:90%,end
<c.magenta>可以看到 它包含所有之前提到的信息</c>

00:13:43.867 --> 00:13:45.467 align:middle line:90%,end
<c.magenta>回到Filter It应用</c>

00:13:45.533 --> 00:13:48.567 align:middle line:90%,end
<c.magenta>为扩展添加网络推迟功能</c>

00:13:52.167 --> 00:13:53.167 align:middle line:90%,end
<c.magenta>再看一下</c>

00:13:53.233 --> 00:13:55.833 align:middle line:90%,end
<c.magenta>之前的handle _query Request方法</c>

00:13:56.200 --> 00:13:59.367 align:middle line:90%,end
<c.magenta>可以看到 在离线检查结束后</c>

00:13:59.433 --> 00:14:01.600 align:middle line:90%,end
<c.magenta>如果返回的操作是“无”</c>

00:13:59.433 --> 00:14:01.600 align:middle line:90%,end
<c.magenta>如果返回的操作是“无”</c>

00:14:01.667 --> 00:14:04.367 align:middle line:90%,end
<c.magenta>即处于Switch语句的这种情况</c>

00:14:04.433 --> 00:14:06.033 align:middle line:90%,end
<c.magenta>我们假设该查询请求</c>

00:14:06.100 --> 00:14:09.033 align:middle line:90%,end
<c.magenta>无法只用离线检查进行处理</c>

00:14:09.100 --> 00:14:12.100 align:middle line:90%,end
<c.magenta>需要咨询网络服务器得到解答</c>

00:14:18.633 --> 00:14:23.233 align:middle line:90%,end
<c.magenta>为此 代码调用</c>
<c.magenta>deferQueryRequestToNetwork方法</c>

00:14:23.300 --> 00:14:24.500 align:middle line:90%,end
<c.magenta>在扩展上下文</c>

00:14:25.400 --> 00:14:29.133 align:middle line:90%,end
<c.magenta>这将导致以扩展名义做出网络请求</c>

00:14:29.200 --> 00:14:32.633 align:middle line:90%,end
<c.magenta>请求完成后 将异步调用该完成块</c>

00:14:33.633 --> 00:14:36.933 align:middle line:90%,end
<c.magenta>在该完成块内部 如果网络有一个回应</c>

00:14:37.000 --> 00:14:39.967 align:middle line:90%,end
<c.magenta>并且没有错误</c>
<c.magenta>可以使用另一个帮助方法</c>

00:14:40.033 --> 00:14:44.167 align:middle line:90%,end
<c.magenta>名为action(for: networkResponse)</c>
<c.magenta>将其转换为一个操作</c>

00:14:44.433 --> 00:14:46.700 align:middle line:90%,end
<c.magenta>来看看该方法及其功能</c>

00:14:50.700 --> 00:14:53.167 align:middle line:90%,end
<c.magenta>和离线检查帮助方法一样</c>

00:14:53.233 --> 00:14:55.433 align:middle line:90%,end
<c.magenta>该方法也默认返回“无”</c>

00:14:55.500 --> 00:14:58.567 align:middle line:90%,end
<c.magenta>来对它进行自定义 解析服务器回应</c>

00:14:59.667 --> 00:15:03.267 align:middle line:90%,end
<c.magenta>假设服务器返回JSON</c>
<c.magenta>尽管不是必须</c>

00:14:59.667 --> 00:15:03.267 align:middle line:90%,end
<c.magenta>假设服务器返回JSON</c>
<c.magenta>尽管不是必须</c>

00:15:03.333 --> 00:15:06.600 align:middle line:90%,end
<c.magenta>我将使用Swift 4中</c>
<c.magenta>新的Foundation Decoding API</c>

00:15:06.667 --> 00:15:07.967 align:middle line:90%,end
<c.magenta>来解码回应</c>

00:15:09.300 --> 00:15:11.967 align:middle line:90%,end
<c.magenta>我会把之前写好的代码粘贴过来</c>

00:15:12.033 --> 00:15:13.733 align:middle line:90%,end
<c.magenta>简单讲一下</c>

00:15:19.433 --> 00:15:21.033 align:middle line:90%,end
<c.magenta>首先定义了一个结构</c>

00:15:21.100 --> 00:15:24.167 align:middle line:90%,end
<c.magenta>描述服务器返回的JSON格式</c>

00:15:25.433 --> 00:15:27.967 align:middle line:90%,end
<c.magenta>然后创建了一个JSON解码器实例</c>

00:15:29.267 --> 00:15:31.800 align:middle line:90%,end
<c.magenta>用于解码网络数据</c>

00:15:31.867 --> 00:15:33.433 align:middle line:90%,end
<c.magenta>作为结构实例</c>

00:15:34.867 --> 00:15:37.767 align:middle line:90%,end
<c.magenta>最后返回解码完成的操作</c>

00:15:37.833 --> 00:15:39.033 align:middle line:90%,end
<c.magenta>并保存在结构里</c>

00:15:42.633 --> 00:15:45.133 align:middle line:90%,end
<c.magenta>如果有任何错误 会在下面处理</c>

00:15:47.867 --> 00:15:50.300 align:middle line:90%,end
<c.magenta>并返回默认回应“无”</c>

00:15:53.967 --> 00:15:56.700 align:middle line:90%,end
<c.magenta>就这样 我们成功添加了网络推迟支持</c>

00:15:56.767 --> 00:15:58.833 align:middle line:90%,end
<c.magenta>在信息过滤应用扩展里</c>

00:15:59.100 --> 00:16:03.600 align:middle line:90%,end
<c.magenta>现在对于传入的信息</c>
<c.magenta>该扩展既支持离线也支持网络检查</c>

00:15:59.100 --> 00:16:03.600 align:middle line:90%,end
<c.magenta>现在对于传入的信息</c>
<c.magenta>该扩展既支持离线也支持网络检查</c>

00:16:07.133 --> 00:16:10.167 align:middle line:90%,end
<c.magenta>这就是应用程序</c>
<c.magenta>如何帮助过滤不需要的信息</c>

00:16:10.233 --> 00:16:14.767 align:middle line:90%,end
<c.magenta>使用新的信息过滤扩展</c>
<c.magenta>以及iOS 11的Identity Lookup框架</c>

00:16:15.700 --> 00:16:18.500 align:middle line:90%,end
<c.magenta>我们希望在用户隐私</c>

00:16:18.567 --> 00:16:21.000 align:middle line:90%,end
<c.magenta>和解决用户该迫切需求之间</c>
<c.magenta>取得一个平衡</c>

00:16:21.367 --> 00:16:24.633 align:middle line:90%,end
<c.magenta>结果是推出了应用程序</c>
<c.magenta>可以使用的强大API</c>

00:16:24.700 --> 00:16:27.667 align:middle line:90%,end
<c.magenta>但其中有一些特殊规则需要注意</c>

00:16:28.567 --> 00:16:30.900 align:middle line:90%,end
<c.magenta>请下载最新的STK</c>

00:16:30.967 --> 00:16:33.033 align:middle line:90%,end
<c.magenta>看看最新的Identity Lookup框架</c>

00:16:33.100 --> 00:16:35.533 align:middle line:90%,end
<c.magenta>今天就试着写一个信息过滤扩展吧</c>

00:16:38.500 --> 00:16:41.100 align:middle line:90%,end
<c.magenta>更多信息请查看演讲页面的链接</c>

00:16:41.167 --> 00:16:43.200 align:middle line:90%,end
<c.magenta>在WWDC官网上</c>

00:16:45.767 --> 00:16:49.033 align:middle line:90%,end
<c.magenta>今年的大会 确实还有一些相关演讲</c>

00:16:49.733 --> 00:16:52.767 align:middle line:90%,end
<c.magenta>关于平台上隐私实践的更多信息</c>

00:16:52.833 --> 00:16:54.967 align:middle line:90%,end
<c.magenta>请观看“隐私和应用程序”演讲</c>

00:16:55.033 --> 00:16:58.567 align:middle line:90%,end
<c.magenta>将于周二11:20在行政大厅举办</c>

00:16:59.600 --> 00:17:03.867 align:middle line:90%,end
<c.magenta>关于演示中Foundation</c>
<c.magenta>和Coding API的更多信息</c>

00:16:59.600 --> 00:17:03.867 align:middle line:90%,end
<c.magenta>关于演示中Foundation</c>
<c.magenta>和Coding API的更多信息</c>

00:17:03.933 --> 00:17:07.200 align:middle line:90%,end
<c.magenta>请观看周三11点</c>
<c.magenta>在2号大厅举行</c>

00:17:07.267 --> 00:17:09.400 align:middle line:90%,end
<c.magenta>的“Foundation新特性”演讲</c>

00:17:10.333 --> 00:17:16.233 align:middle line:90%,end
<c.magenta>2015年WWDC有一个很棒的演讲</c>
<c.magenta>名为“无缝连接你的应用程序”</c>

00:17:16.300 --> 00:17:18.367 align:middle line:90%,end
<c.magenta>详细讲解了相关联的域功能</c>

00:17:18.433 --> 00:17:21.767 align:middle line:90%,end
<c.magenta>是使用网络推迟时</c>
<c.magenta>信息过滤扩展所需要的</c>

00:17:22.067 --> 00:17:23.633 align:middle line:90%,end
<c.magenta>请在档案中查看该演讲</c>

00:17:23.700 --> 00:17:27.200 align:middle line:90%,end
<c.magenta>关于如何在应用程序</c>
<c.magenta>和服务器上实现的详细信息</c>

00:17:27.567 --> 00:17:28.767 align:middle line:90%,end
<c.magenta>非常感谢观看</c>
