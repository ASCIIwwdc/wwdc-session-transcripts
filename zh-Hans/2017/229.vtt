WEBVTT

00:00:18.085 --> 00:00:21.522 align:middle line:10%
<c.magenta>（创建了不起的基于文档的应用）</c>

00:00:24.424 --> 00:00:25.526 align:middle line:90%,end
<c.magenta>大家好</c>

00:00:26.560 --> 00:00:28.862 align:middle line:90%,end
<c.magenta>希望大家度过一个美好的WWDC</c>

00:00:29.563 --> 00:00:31.899 align:middle line:90%,end
<c.magenta>欢迎来到“创建了不起的</c>
<c.magenta>基于文档的应用”演讲</c>

00:00:34.101 --> 00:00:37.471 align:middle line:90%,end
<c.magenta>今天我们要谈谈文件应用的新功能</c>

00:00:37.905 --> 00:00:39.740 align:middle line:90%,end
<c.magenta>以及如何将其整合到你们的应用中</c>

00:00:40.541 --> 00:00:42.376 align:middle line:90%,end
<c.magenta>首先 让我们先谈谈文件应用</c>

00:00:43.877 --> 00:00:45.812 align:middle line:90%,end
<c.magenta>这款应用最大的功能之一</c>

00:00:46.246 --> 00:00:48.882 align:middle line:90%,end
<c.magenta>就是它将全部云供应商</c>
<c.magenta>集合到了一个地方</c>

00:00:49.316 --> 00:00:51.952 align:middle line:90%,end
<c.magenta>这是通过新的共享文件</c>
<c.magenta>扩展实现的</c>

00:00:52.452 --> 00:00:55.489 align:middle line:90%,end
<c.magenta>使用此共享文件扩展的全部云供应商</c>

00:00:55.556 --> 00:00:59.626 align:middle line:90%,end
<c.magenta>都将会出现在我的iPad</c>
<c.magenta>侧边栏的iCloud驱动旁边</c>

00:01:00.727 --> 00:01:02.930 align:middle line:90%,end
<c.magenta>如果你想了解更多关于此扩展的信息</c>

00:01:03.697 --> 00:01:06.200 align:middle line:90%,end
<c.magenta>我们邀请你观看</c>
<c.magenta>“文件共享增强功能”演讲</c>

00:01:06.266 --> 00:01:07.434 align:middle line:90%,end
<c.magenta>时间是明天上午11点整</c>

00:01:09.870 --> 00:01:12.806 align:middle line:90%,end
<c.magenta>系统中默认有两种文件共享</c>

00:01:13.273 --> 00:01:15.375 align:middle line:90%,end
<c.magenta>第一种是iCloud驱动供应商</c>

00:01:15.742 --> 00:01:19.213 align:middle line:90%,end
<c.magenta>它显示用户iCloud驱动</c>
<c.magenta>文件夹内的全部文件</c>

00:01:19.279 --> 00:01:21.548 align:middle line:90%,end
<c.magenta>以及系统全部应用的</c>

00:01:21.748 --> 00:01:23.584 align:middle line:90%,end
<c.magenta>云容器中的全部文件</c>

00:01:25.853 --> 00:01:28.155 align:middle line:90%,end
<c.magenta>第二种共享是在我的iPad上共享</c>

00:01:28.856 --> 00:01:31.892 align:middle line:90%,end
<c.magenta>它允许用户利用他们设备的存储</c>

00:01:32.759 --> 00:01:33.894 align:middle line:90%,end
<c.magenta>它会显示应用容器内</c>

00:01:33.961 --> 00:01:36.330 align:middle line:90%,end
<c.magenta>文档文件夹中的内容</c>

00:01:37.164 --> 00:01:40.534 align:middle line:90%,end
<c.magenta>如果你希望你的应用成为这种</c>
<c.magenta>本地存储共享的一部分</c>

00:01:41.134 --> 00:01:43.070 align:middle line:90%,end
<c.magenta>你的应用必须得是一款</c>
<c.magenta>基于文档的应用</c>

00:01:43.604 --> 00:01:47.274 align:middle line:90%,end
<c.magenta>或支持文件共享</c>
<c.magenta>并能在适当的位置打开文档</c>

00:01:48.575 --> 00:01:51.712 align:middle line:90%,end
<c.magenta>正如我之前所说的</c>
<c.magenta>我们会在内部显示文档</c>

00:01:51.778 --> 00:01:53.614 align:middle line:90%,end
<c.magenta>文档文件夹中的文件</c>

00:01:53.680 --> 00:01:56.650 align:middle line:90%,end
<c.magenta>所以请保持</c>
<c.magenta>这个文件夹中的内容干净整洁</c>

00:01:57.117 --> 00:01:59.853 align:middle line:90%,end
<c.magenta>你应该只包含那些</c>
<c.magenta>对于用户来说很重要的文件</c>

00:02:00.521 --> 00:02:01.955 align:middle line:90%,end
<c.magenta>同时你得谨记</c>

00:02:02.222 --> 00:02:04.892 align:middle line:90%,end
<c.magenta>这些文件不会被同步到多台设备中</c>

00:02:04.958 --> 00:02:07.261 align:middle line:90%,end
<c.magenta>而是仍然是iCloud备份的</c>
<c.magenta>一部分</c>

00:02:09.729 --> 00:02:12.299 align:middle line:90%,end
<c.magenta>现在我想谈谈新的最近列表视图</c>

00:02:13.200 --> 00:02:14.968 align:middle line:90%,end
<c.magenta>这个视图会显示近期打开、导入</c>

00:02:15.035 --> 00:02:17.938 align:middle line:90%,end
<c.magenta>和修改过的全部文档</c>

00:02:18.672 --> 00:02:21.742 align:middle line:90%,end
<c.magenta>同时它可以按标签显示全部文档</c>

00:02:22.342 --> 00:02:24.878 align:middle line:90%,end
<c.magenta>以及与他人共享的全部文档</c>

00:02:27.948 --> 00:02:30.050 align:middle line:90%,end
<c.magenta>标签是管理文件的一个不错的方式</c>

00:02:30.384 --> 00:02:32.920 align:middle line:90%,end
<c.magenta>在iOS 11中</c>
<c.magenta>有一个新的标签UI</c>

00:02:32.986 --> 00:02:36.390 align:middle line:90%,end
<c.magenta>可以允许用户创建</c>
<c.magenta>新的标签并进行管理</c>

00:02:37.391 --> 00:02:39.593 align:middle line:90%,end
<c.magenta>用户可以将标签同步到多台设备上</c>

00:02:40.327 --> 00:02:43.297 align:middle line:90%,end
<c.magenta>并且标签会被同步到你的全部设备上</c>

00:02:45.465 --> 00:02:46.400 align:middle line:90%,end
<c.magenta>最后一点</c>

00:02:46.667 --> 00:02:49.903 align:middle line:90%,end
<c.magenta>我要谈的文件应用的最后一个功能</c>

00:02:50.070 --> 00:02:51.238 align:middle line:90%,end
<c.magenta>就是最近列表弹出框</c>

00:02:51.805 --> 00:02:54.074 align:middle line:90%,end
<c.magenta>用户可以呈现这种弹出框</c>

00:02:54.374 --> 00:02:56.610 align:middle line:90%,end
<c.magenta>当在文件应用中实施长按时</c>

00:02:57.678 --> 00:03:00.180 align:middle line:90%,end
<c.magenta>这个弹出框会显示全部最近的文档</c>

00:02:57.678 --> 00:03:00.180 align:middle line:90%,end
<c.magenta>这个弹出框会显示全部最近的文档</c>

00:03:00.447 --> 00:03:03.150 align:middle line:90%,end
<c.magenta>并且用户通过一次轻触就能打开</c>
<c.magenta>全部文档</c>

00:03:03.917 --> 00:03:05.452 align:middle line:90%,end
<c.magenta>它还允许用户</c>

00:03:05.786 --> 00:03:07.921 align:middle line:90%,end
<c.magenta>将文档导入到任何应用中</c>

00:03:08.121 --> 00:03:09.857 align:middle line:90%,end
<c.magenta>通过新添加的拖拽手势</c>

00:03:12.993 --> 00:03:16.663 align:middle line:90%,end
<c.magenta>现在你一定想在你的应用中</c>
<c.magenta>包含全部这些很棒的功能</c>

00:03:16.897 --> 00:03:18.365 align:middle line:90%,end
<c.magenta>（你的应用怎么样？）</c>

00:03:18.432 --> 00:03:19.466 align:middle line:90%,end
<c.magenta>（开发者的请求）</c>

00:03:19.533 --> 00:03:21.335 align:middle line:90%,end
<c.magenta>通过上次发布</c>

00:03:21.502 --> 00:03:23.604 align:middle line:90%,end
<c.magenta>我们收到了你们提出的很多请求</c>

00:03:24.371 --> 00:03:27.407 align:middle line:90%,end
<c.magenta>你们想要文件浏览统一的UI</c>

00:03:28.408 --> 00:03:32.513 align:middle line:90%,end
<c.magenta>你们希望你们的应用可以从系统中的</c>
<c.magenta>其他应用中打开任意文件</c>

00:03:34.915 --> 00:03:36.617 align:middle line:90%,end
<c.magenta>你们不想写太多的代码</c>

00:03:36.850 --> 00:03:40.420 align:middle line:90%,end
<c.magenta>来采用已经</c>
<c.magenta>是系统一部分的云供应商</c>

00:03:41.588 --> 00:03:44.625 align:middle line:90%,end
<c.magenta>并且你们想深度整合那些…</c>

00:03:45.192 --> 00:03:47.995 align:middle line:90%,end
<c.magenta>在整个系统中整合自定义内容类型</c>

00:03:48.996 --> 00:03:51.899 align:middle line:90%,end
<c.magenta>嗯 今天我们要来看一些新的API</c>

00:03:52.933 --> 00:03:56.670 align:middle line:90%,end
<c.magenta>我稍后再谈我们对这些</c>
<c.magenta>请求的处理进度</c>

00:03:58.205 --> 00:04:02.142 align:middle line:90%,end
<c.magenta>首先我想谈谈新的文档浏览器API</c>

00:03:58.205 --> 00:04:02.142 align:middle line:90%,end
<c.magenta>首先我想谈谈新的文档浏览器API</c>

00:04:05.479 --> 00:04:06.313 align:middle line:90%,end
<c.magenta>今天…</c>

00:04:06.380 --> 00:04:09.716 align:middle line:90%,end
<c.magenta>今年有一个新类</c>
<c.magenta>即UI文档浏览器视图控制器</c>

00:04:09.917 --> 00:04:13.153 align:middle line:90%,end
<c.magenta>我知道这很拗口</c>
<c.magenta>所以从现在起我把它叫作浏览器VC</c>

00:04:14.821 --> 00:04:17.156 align:middle line:90%,end
<c.magenta>跟这个配套的还有一个</c>
<c.magenta>新的XCode模板</c>

00:04:17.224 --> 00:04:20.994 align:middle line:90%,end
<c.magenta>可以让你从零开始</c>
<c.magenta>创建一个基于文档的新应用</c>

00:04:22.129 --> 00:04:23.197 align:middle line:90%,end
<c.magenta>此外</c>

00:04:23.263 --> 00:04:26.633 align:middle line:90%,end
<c.magenta>UI文档选择器会获得</c>
<c.magenta>浏览器VC的一些功能</c>

00:04:29.036 --> 00:04:31.805 align:middle line:90%,end
<c.magenta>那么现在让我们先谈谈浏览器VC</c>

00:04:32.339 --> 00:04:36.443 align:middle line:90%,end
<c.magenta>视图控制器会向应用提供</c>
<c.magenta>与文件…应用相同的功能</c>

00:04:36.743 --> 00:04:40.581 align:middle line:90%,end
<c.magenta>事实上文件应用只是这个浏览器VC</c>
<c.magenta>之上的一个很薄的层</c>

00:04:43.350 --> 00:04:46.420 align:middle line:90%,end
<c.magenta>通过这个视图控制器</c>
<c.magenta>你就不用再写</c>

00:04:46.486 --> 00:04:49.289 align:middle line:90%,end
<c.magenta>更多的代码来整合任意支持</c>

00:04:49.656 --> 00:04:51.024 align:middle line:90%,end
<c.magenta>文件共享的云存储供应商了</c>

00:04:53.961 --> 00:04:56.163 align:middle line:90%,end
<c.magenta>同时它会支持外观自定义</c>

00:04:56.396 --> 00:04:57.831 align:middle line:90%,end
<c.magenta>让它看起来跟你的应用相匹配</c>

00:04:59.266 --> 00:05:01.235 align:middle line:90%,end
<c.magenta>通过这个视图控制器</c>

00:04:59.266 --> 00:05:01.235 align:middle line:90%,end
<c.magenta>通过这个视图控制器</c>

00:05:01.301 --> 00:05:05.172 align:middle line:90%,end
<c.magenta>你的应用可以获得我们之前</c>
<c.magenta>看到过的最近列表弹出框</c>

00:05:08.141 --> 00:05:10.677 align:middle line:90%,end
<c.magenta>在这个浏览器VC中</c>
<c.magenta>Spotlight扮演了一个关键角色</c>

00:05:11.478 --> 00:05:12.913 align:middle line:90%,end
<c.magenta>通过这个视图控制器</c>

00:05:13.447 --> 00:05:17.184 align:middle line:10%
<c.magenta>你文档中的全部元数据</c>
<c.magenta>将在Spotlight中被自动索引</c>

00:05:17.251 --> 00:05:19.219 align:middle line:10%
<c.magenta>如果你需要进一步整合</c>

00:05:19.286 --> 00:05:22.689 align:middle line:10%
<c.magenta>你必须注册你自己的CSSearchableItem</c>

00:05:23.323 --> 00:05:25.993 align:middle line:10%
<c.magenta>当前系统中有两个CSSearchableItem</c>

00:05:26.326 --> 00:05:27.895 align:middle line:10%
<c.magenta>要复制它们</c>

00:05:28.128 --> 00:05:32.332 align:middle line:10%
<c.magenta>浏览器VC必须使用这个</c>
<c.magenta>CSSearchableItem的contentURL</c>

00:05:32.666 --> 00:05:34.201 align:middle line:10%
<c.magenta>所以你的设置必须适当</c>

00:05:34.434 --> 00:05:36.637 align:middle line:10%
<c.magenta>如果你想了解更多关于</c>
<c.magenta>Core Spotlight的相关信息</c>

00:05:36.703 --> 00:05:38.839 align:middle line:10%
<c.magenta>今天下午4:10有一场演讲</c>

00:05:43.443 --> 00:05:46.079 align:middle line:90%,end
<c.magenta>在Apple公司</c>
<c.magenta>我们非常注重用户的隐私权</c>

00:05:46.580 --> 00:05:49.449 align:middle line:90%,end
<c.magenta>为此 我们在创建浏览器VC时</c>

00:05:49.950 --> 00:05:52.920 align:middle line:90%,end
<c.magenta>从始至终都考虑到了隐私权</c>

00:05:53.754 --> 00:05:55.522 align:middle line:90%,end
<c.magenta>当用户安装你的应用后</c>

00:05:55.589 --> 00:05:57.791 align:middle line:90%,end
<c.magenta>你只能看到应用容器内的</c>

00:05:57.858 --> 00:05:59.059 align:middle line:90%,end
<c.magenta>全部文档</c>

00:06:00.494 --> 00:06:02.963 align:middle line:90%,end
<c.magenta>你可以导入和创建新文档</c>

00:06:03.197 --> 00:06:07.067 align:middle line:90%,end
<c.magenta>但只能在默认的安全位置</c>
<c.magenta>你不能挑挑拣拣</c>

00:06:08.435 --> 00:06:13.240 align:middle line:90%,end
<c.magenta>那么如何在系统其它地方</c>
<c.magenta>获取文件呢？</c>

00:06:13.874 --> 00:06:15.909 align:middle line:90%,end
<c.magenta>嗯 你可以通过用户交互实现</c>

00:06:16.577 --> 00:06:18.879 align:middle line:90%,end
<c.magenta>浏览器VC在不同的进程中运行</c>

00:06:19.246 --> 00:06:21.215 align:middle line:90%,end
<c.magenta>一旦用户轻触某个文档</c>

00:06:21.849 --> 00:06:25.519 align:middle line:90%,end
<c.magenta>浏览器VC将会把该文档的访问权</c>
<c.magenta>转交给你的应用</c>

00:06:27.588 --> 00:06:30.924 align:middle line:90%,end
<c.magenta>现在让我们看一眼UI文档</c>
<c.magenta>选择器视图控制器</c>

00:06:30.991 --> 00:06:34.661 align:middle line:90%,end
<c.magenta>正如我刚才所说的</c>
<c.magenta>我们会获得浏览器VC的某些功能</c>

00:06:35.195 --> 00:06:37.564 align:middle line:90%,end
<c.magenta>比如浏览器视图和最近列表视图</c>

00:06:38.932 --> 00:06:41.201 align:middle line:90%,end
<c.magenta>同时 它将支持同时打开和导入</c>

00:06:41.268 --> 00:06:43.003 align:middle line:90%,end
<c.magenta>多个文档</c>

00:06:43.403 --> 00:06:44.671 align:middle line:90%,end
<c.magenta>如果你想支持它</c>

00:06:44.738 --> 00:06:47.341 align:middle line:90%,end
<c.magenta>你需要将</c>
<c.magenta>allowsMultipleSelection设为真</c>

00:06:48.008 --> 00:06:52.012 align:middle line:90%,end
<c.magenta>为了支持多个文档</c>
<c.magenta>我们不支持带有</c>

00:06:52.679 --> 00:06:55.082 align:middle line:90%,end
<c.magenta>PickDocumentAtURL委托方法的</c>
<c.magenta>文档…选择器</c>

00:06:55.449 --> 00:06:59.052 align:middle line:90%,end
<c.magenta>而是倾向于同时支持</c>
<c.magenta>多个URL的委托方法</c>

00:07:01.154 --> 00:07:01.989 align:middle line:90%,end
<c.magenta>同时今年</c>

00:07:02.055 --> 00:07:04.691 align:middle line:90%,end
<c.magenta>我们不支持UI文档菜单视图控制器</c>

00:07:04.758 --> 00:07:07.227 align:middle line:90%,end
<c.magenta>而支持UI文档浏览器视图控制器</c>

00:07:09.796 --> 00:07:10.631 align:middle line:90%,end
<c.magenta>现在</c>

00:07:11.164 --> 00:07:13.400 align:middle line:90%,end
<c.magenta>我们了解了浏览器API的大概内容</c>

00:07:13.800 --> 00:07:15.536 align:middle line:90%,end
<c.magenta>让我们来看看如何</c>
<c.magenta>在你的应用中使用</c>

00:07:15.702 --> 00:07:18.405 align:middle line:90%,end
<c.magenta>这个UI文档浏览器视图控制器</c>

00:07:19.773 --> 00:07:20.874 align:middle line:90%,end
<c.magenta>那么首先来看最重要的</c>

00:07:21.475 --> 00:07:23.443 align:middle line:90%,end
<c.magenta>你需要配置Info.plist</c>

00:07:24.011 --> 00:07:28.115 align:middle line:90%,end
<c.magenta>在这里 你需要将UI支持文档</c>
<c.magenta>浏览器的键值设为是</c>

00:07:28.882 --> 00:07:30.050 align:middle line:90%,end
<c.magenta>这将告诉系统</c>

00:07:30.117 --> 00:07:33.053 align:middle line:90%,end
<c.magenta>你的应用是一个基于</c>
<c.magenta>UI文档浏览器的应用</c>

00:07:34.254 --> 00:07:35.989 align:middle line:90%,end
<c.magenta>然后你需要声明</c>

00:07:36.056 --> 00:07:38.392 align:middle line:90%,end
<c.magenta>你的应用所支持的内容类型</c>

00:07:38.792 --> 00:07:40.994 align:middle line:90%,end
<c.magenta>这很重要 因为浏览器VC</c>

00:07:41.195 --> 00:07:42.696 align:middle line:90%,end
<c.magenta>将通过这个内容类型</c>

00:07:42.863 --> 00:07:45.732 align:middle line:90%,end
<c.magenta>来了解要在你的应用中</c>
<c.magenta>显示哪些文件</c>

00:07:47.734 --> 00:07:51.071 align:middle line:90%,end
<c.magenta>你必须要了解的一点是</c>
<c.magenta>UI文档浏览器视图控制器</c>

00:07:51.138 --> 00:07:53.540 align:middle line:90%,end
<c.magenta>必须是你应用中的根视图控制器</c>

00:07:53.874 --> 00:07:55.108 align:middle line:90%,end
<c.magenta>否则就不起作用</c>

00:07:57.277 --> 00:07:58.245 align:middle line:10%
<c.magenta>正如我之前所说的</c>

00:07:58.312 --> 00:08:00.681 align:middle line:10%
<c.magenta>浏览器VC支持外观自定义</c>

00:07:58.312 --> 00:08:00.681 align:middle line:10%
<c.magenta>浏览器VC支持外观自定义</c>

00:08:01.248 --> 00:08:02.916 align:middle line:10%
<c.magenta>默认是这个样子</c>

00:08:03.116 --> 00:08:05.285 align:middle line:10%
<c.magenta>白色背景和蓝色浅色调</c>

00:08:06.119 --> 00:08:07.387 align:middle line:90%,end
<c.magenta>它有两个属性</c>

00:08:07.554 --> 00:08:10.057 align:middle line:90%,end
<c.magenta>你可以用来进一步自定义</c>

00:08:10.457 --> 00:08:13.126 align:middle line:90%,end
<c.magenta>浏览器界面样式有三种模式：</c>

00:08:13.393 --> 00:08:16.196 align:middle line:90%,end
<c.magenta>暗色、白色和亮色以及浅色调</c>

00:08:17.064 --> 00:08:20.133 align:middle line:90%,end
<c.magenta>如果你使用暗色样式</c>
<c.magenta>和橘色浅色调</c>

00:08:20.200 --> 00:08:21.635 align:middle line:90%,end
<c.magenta>你的应用看起来就是这样的：</c>

00:08:24.438 --> 00:08:26.840 align:middle line:90%,end
<c.magenta>那么现在</c>
<c.magenta>我们配置了浏览器VC</c>

00:08:27.207 --> 00:08:30.477 align:middle line:90%,end
<c.magenta>你的应用要支持的第一个东西</c>
<c.magenta>是支持文档的打开</c>

00:08:31.678 --> 00:08:33.480 align:middle line:90%,end
<c.magenta>那么让我们看看要如何实现</c>

00:08:34.448 --> 00:08:35.315 align:middle line:90%,end
<c.magenta>首先</c>

00:08:35.381 --> 00:08:37.451 align:middle line:90%,end
<c.magenta>用户要轻触其中一个文档</c>

00:08:38.619 --> 00:08:39.986 align:middle line:90%,end
<c.magenta>在这里 浏览器VC</c>

00:08:40.320 --> 00:08:42.956 align:middle line:90%,end
<c.magenta>将获取并下载文档信息</c>

00:08:43.023 --> 00:08:44.525 align:middle line:90%,end
<c.magenta>一旦文档准备好了</c>

00:08:45.192 --> 00:08:47.661 align:middle line:90%,end
<c.magenta>它将会把访问权交给你的应用</c>

00:08:48.195 --> 00:08:50.030 align:middle line:90%,end
<c.magenta>并调用didPickDelegate方法</c>

00:08:50.631 --> 00:08:53.800 align:middle line:90%,end
<c.magenta>在这里 你只需要加载并显示文档</c>

00:08:56.103 --> 00:08:58.205 align:middle line:90%,end
<c.magenta>当打开文档时 浏览器VC</c>

00:08:58.372 --> 00:09:01.642 align:middle line:90%,end
<c.magenta>会向你的应用提供该URL的</c>
<c.magenta>持久访问权</c>

00:08:58.372 --> 00:09:01.642 align:middle line:90%,end
<c.magenta>会向你的应用提供该URL的</c>
<c.magenta>持久访问权</c>

00:09:02.976 --> 00:09:06.880 align:middle line:90%,end
<c.magenta>现在把它存起来 要想还原它的话</c>
<c.magenta>只存URL是远远不够的</c>

00:09:06.947 --> 00:09:10.217 align:middle line:90%,end
<c.magenta>你需要存储与此URL</c>
<c.magenta>相关联的书签数据</c>

00:09:10.617 --> 00:09:15.088 align:middle line:90%,end
<c.magenta>因为这是追踪URL使用权的信息</c>

00:09:17.157 --> 00:09:19.459 align:middle line:90%,end
<c.magenta>文档打开的代码是这样的</c>

00:09:19.526 --> 00:09:20.794 align:middle line:90%,end
<c.magenta>你只需要实施</c>

00:09:20.861 --> 00:09:23.063 align:middle line:90%,end
<c.magenta>documentBrowser、</c>
<c.magenta>didPickDocumentURL</c>

00:09:23.931 --> 00:09:26.266 align:middle line:90%,end
<c.magenta>并显示视图控制器即可</c>

00:09:28.569 --> 00:09:29.970 align:middle line:90%,end
<c.magenta>跟UI文档选择器类似</c>

00:09:30.037 --> 00:09:33.273 align:middle line:90%,end
<c.magenta>浏览器VC支持同时打开多个文档</c>

00:09:33.841 --> 00:09:35.709 align:middle line:90%,end
<c.magenta>如果你希望你的应用支持这个功能</c>

00:09:35.776 --> 00:09:38.512 align:middle line:90%,end
<c.magenta>你需要</c>
<c.magenta>将allowsPickingMultipleItems设为真</c>

00:09:41.615 --> 00:09:44.852 align:middle line:90%,end
<c.magenta>现在你的应用可以打开</c>
<c.magenta>系统中的任意文件了</c>

00:09:45.485 --> 00:09:48.088 align:middle line:90%,end
<c.magenta>下一步是能创建新文档</c>

00:09:48.422 --> 00:09:51.091 align:middle line:90%,end
<c.magenta>你可以在两个地方创建新文档</c>

00:09:51.592 --> 00:09:53.260 align:middle line:90%,end
<c.magenta>第一个地方是最近列表视图</c>

00:09:53.527 --> 00:09:57.097 align:middle line:90%,end
<c.magenta>如果用户轻触这里的创建按钮</c>
<c.magenta>将会创建一个新文档</c>

00:09:57.164 --> 00:10:00.501 align:middle line:90%,end
<c.magenta>在你应用的默认安全位置</c>

00:09:57.164 --> 00:10:00.501 align:middle line:90%,end
<c.magenta>在你应用的默认安全位置</c>

00:10:01.335 --> 00:10:03.637 align:middle line:90%,end
<c.magenta>如果用户在浏览视图中</c>
<c.magenta>轻触创建按钮</c>

00:10:03.704 --> 00:10:05.138 align:middle line:90%,end
<c.magenta>将会创建一个新文档</c>

00:10:05.205 --> 00:10:07.307 align:middle line:90%,end
<c.magenta>在浏览视图的当前位置</c>

00:10:08.141 --> 00:10:10.010 align:middle line:90%,end
<c.magenta>现在让我们看看流程</c>

00:10:10.244 --> 00:10:12.679 align:middle line:90%,end
<c.magenta>一旦用户轻触其中一个创建按钮</c>

00:10:14.181 --> 00:10:16.216 align:middle line:90%,end
<c.magenta>你的应用将会收到</c>
<c.magenta>一个导入处理器</c>

00:10:16.283 --> 00:10:19.887 align:middle line:90%,end
<c.magenta>现在 如果你已经有了源URL</c>
<c.magenta>你可以调用导入处理器</c>

00:10:20.487 --> 00:10:21.355 align:middle line:90%,end
<c.magenta>如果你没有</c>

00:10:21.622 --> 00:10:23.824 align:middle line:90%,end
<c.magenta>如果你的应用需要</c>
<c.magenta>显示模板选择器</c>

00:10:23.891 --> 00:10:26.493 align:middle line:90%,end
<c.magenta>以便了解要选择哪个源URL</c>

00:10:27.127 --> 00:10:28.028 align:middle line:90%,end
<c.magenta>现在正是时候</c>

00:10:28.328 --> 00:10:31.532 align:middle line:90%,end
<c.magenta>你呈现一个模板选择器</c>
<c.magenta>并调用导入处理器</c>

00:10:31.598 --> 00:10:35.169 align:middle line:90%,end
<c.magenta>导入处理器将会把那个文件</c>
<c.magenta>移动到共享文件中</c>

00:10:35.602 --> 00:10:37.437 align:middle line:90%,end
<c.magenta>一旦文件处于共享文件中</c>

00:10:37.905 --> 00:10:40.474 align:middle line:90%,end
<c.magenta>它将通过一个Succeed委托方法</c>
<c.magenta>把你的应用调回来</c>

00:10:41.308 --> 00:10:42.876 align:middle line:90%,end
<c.magenta>在这里 对于文档打开来说</c>

00:10:43.177 --> 00:10:45.412 align:middle line:10%
<c.magenta>你只需要加载并呈现文档</c>

00:10:47.214 --> 00:10:50.484 align:middle line:90%,end
<c.magenta>现在导入操作可能由于多种原因</c>
<c.magenta>导致失败</c>

00:10:50.817 --> 00:10:51.818 align:middle line:90%,end
<c.magenta>如果你失败了</c>

00:10:52.085 --> 00:10:54.988 align:middle line:90%,end
<c.magenta>你需要处理报错</c>
<c.magenta>并向用户呈现一些UI</c>

00:10:55.789 --> 00:10:58.892 align:middle line:90%,end
<c.magenta>现在让我们来看看如何用代码实现</c>

00:10:59.459 --> 00:11:00.761 align:middle line:90%,end
<c.magenta>首先你需要实施</c>

00:10:59.459 --> 00:11:00.761 align:middle line:90%,end
<c.magenta>首先你需要实施</c>

00:11:00.827 --> 00:11:03.230 align:middle line:90%,end
<c.magenta>documentBrowser</c>
<c.magenta>didRequestDocumentCreation</c>

00:11:03.964 --> 00:11:05.332 align:middle line:90%,end
<c.magenta>在这里 正如我之前所说的</c>

00:11:05.399 --> 00:11:07.668 align:middle line:90%,end
<c.magenta>你可以随意呈现一个模板选择器</c>

00:11:08.001 --> 00:11:10.437 align:middle line:90%,end
<c.magenta>在本例中 所呈现的模板选择器</c>

00:11:10.704 --> 00:11:16.009 align:middle line:90%,end
<c.magenta>将通过用户为该模板所选择的URL</c>
<c.magenta>将我们调回来</c>

00:11:16.376 --> 00:11:19.413 align:middle line:90%,end
<c.magenta>并会告诉我们</c>
<c.magenta>用户是否取消了文档创建</c>

00:11:20.881 --> 00:11:25.118 align:middle line:90%,end
<c.magenta>一旦我们获得URL 我们只需通过</c>
<c.magenta>一个模型调用导入处理器</c>

00:11:25.385 --> 00:11:27.855 align:middle line:90%,end
<c.magenta>有两种不同模式：复制和移动</c>

00:11:28.655 --> 00:11:30.757 align:middle line:90%,end
<c.magenta>如果用户取消了文档创建</c>

00:11:30.824 --> 00:11:34.962 align:middle line:90%,end
<c.magenta>我们仍需要调用导入处理器</c>
<c.magenta>但URL为无 模式为空</c>

00:11:35.562 --> 00:11:36.430 align:middle line:90%,end
<c.magenta>这非常重要</c>

00:11:36.797 --> 00:11:40.501 align:middle line:90%,end
<c.magenta>这将会告诉浏览器VC</c>
<c.magenta>创建操作已经结束</c>

00:11:43.670 --> 00:11:45.405 align:middle line:90%,end
<c.magenta>一旦文档被完全导入</c>

00:11:45.472 --> 00:11:48.275 align:middle line:90%,end
<c.magenta>将会调用documentBrowser</c>
<c.magenta>didImportDocumentAtsourceURL</c>

00:11:48.542 --> 00:11:50.310 align:middle line:90%,end
<c.magenta>toDestinationURL</c>

00:11:50.644 --> 00:11:54.515 align:middle line:90%,end
<c.magenta>在这里 你只需要加载</c>
<c.magenta>并呈现文档的UI</c>

00:11:55.048 --> 00:11:57.584 align:middle line:90%,end
<c.magenta>正如我所说过的</c>
<c.magenta>导入操作可能会失败</c>

00:11:57.985 --> 00:11:59.119 align:middle line:90%,end
<c.magenta>如果失败了</c>

00:11:59.686 --> 00:12:03.423 align:middle line:10%
<c.magenta>将调用DocumentBrowser</c>
<c.magenta>failedToImportDocumentURL</c>

00:11:59.686 --> 00:12:03.423 align:middle line:10%
<c.magenta>将调用DocumentBrowser</c>
<c.magenta>failedToImportDocumentURL</c>

00:12:03.724 --> 00:12:06.727 align:middle line:10%
<c.magenta>在这里 你需要处理报错</c>
<c.magenta>并给用户呈现一些UI</c>

00:12:09.162 --> 00:12:13.634 align:middle line:90%,end
<c.magenta>现在我们正在同时处理由不同进程</c>

00:12:14.001 --> 00:12:16.970 align:middle line:90%,end
<c.magenta>不同应用和不同设备操作的文档</c>

00:12:18.338 --> 00:12:22.543 align:middle line:90%,end
<c.magenta>为此 使用NS文件协调</c>
<c.magenta>和NS文件呈现器非常重要</c>

00:12:22.609 --> 00:12:26.413 align:middle line:10%
<c.magenta>以避免这些进程之间的一些风险状况</c>

00:12:27.548 --> 00:12:31.285 align:middle line:10%
<c.magenta>现在因为文档是在应用容器外部</c>

00:12:31.718 --> 00:12:34.121 align:middle line:10%
<c.magenta>浏览器VC使用的是</c>
<c.magenta>安全范围内的URL</c>

00:12:34.555 --> 00:12:37.491 align:middle line:10%
<c.magenta>这就意味着你需要</c>
<c.magenta>开始和停止使用该URL</c>

00:12:37.958 --> 00:12:41.161 align:middle line:10%
<c.magenta>以便有权读写URL</c>

00:12:42.129 --> 00:12:44.198 align:middle line:10%
<c.magenta>我们强烈推荐你们使用UI文档</c>

00:12:44.698 --> 00:12:45.532 align:middle line:10%
<c.magenta>通过UI文档</c>

00:12:45.999 --> 00:12:48.302 align:middle line:10%
<c.magenta>你可以获得文件协调、文件呈现器</c>

00:12:48.502 --> 00:12:50.637 align:middle line:10%
<c.magenta>和安全范围内的URL支持</c>
<c.magenta>都是免费的</c>

00:12:51.004 --> 00:12:52.940 align:middle line:10%
<c.magenta>还有其它功能 比如自动保存</c>

00:12:54.107 --> 00:12:56.210 align:middle line:10%
<c.magenta>如果你想了解</c>
<c.magenta>关于UI文档的更多信息</c>

00:12:56.577 --> 00:12:59.313 align:middle line:10%
<c.magenta>请观看WWDC 2015的</c>

00:12:59.379 --> 00:13:01.415 align:middle line:10%
<c.magenta>“创建基于文档的应用”演讲</c>

00:12:59.379 --> 00:13:01.415 align:middle line:10%
<c.magenta>“创建基于文档的应用”演讲</c>

00:13:02.583 --> 00:13:05.018 align:middle line:90%,end
<c.magenta>现在让我们欢迎我的同事拉斐尔上台</c>

00:13:05.085 --> 00:13:06.653 align:middle line:90%,end
<c.magenta>为大家演示如何在你的应用中使用</c>

00:13:06.720 --> 00:13:09.156 align:middle line:90%,end
<c.magenta>UI文档浏览器视图控制器</c>

00:13:09.623 --> 00:13:10.457 align:middle line:90%,end
<c.magenta>拉斐尔</c>

00:13:13.627 --> 00:13:14.461 align:middle line:90%,end
<c.magenta>谢谢 保</c>

00:13:15.262 --> 00:13:16.430 align:middle line:90%,end
<c.magenta>大家早上好</c>

00:13:17.231 --> 00:13:18.665 align:middle line:90%,end
<c.magenta>那么现在你们已经了解了</c>

00:13:18.732 --> 00:13:21.468 align:middle line:90%,end
<c.magenta>新的UI文档浏览器视图</c>
<c.magenta>控制器的API了</c>

00:13:21.535 --> 00:13:24.638 align:middle line:90%,end
<c.magenta>我要给大家做一个简短的演示</c>

00:13:24.705 --> 00:13:27.474 align:middle line:90%,end
<c.magenta>在iOS 11中创建一款基于</c>
<c.magenta>文档的了不起的应用是如何简单</c>

00:13:29.409 --> 00:13:31.812 align:middle line:90%,end
<c.magenta>我们要创建一个很简单的粒子编辑器</c>

00:13:31.879 --> 00:13:35.215 align:middle line:90%,end
<c.magenta>左侧是粒子系统 右侧是检验</c>

00:13:35.282 --> 00:13:38.118 align:middle line:90%,end
<c.magenta>允许你自定义粒子系统的一些属性</c>

00:13:38.952 --> 00:13:41.922 align:middle line:90%,end
<c.magenta>现在每个粒子系统都属于一个文档</c>

00:13:41.989 --> 00:13:44.892 align:middle line:90%,end
<c.magenta>因此使用UI文档浏览器视图控制器</c>

00:13:44.958 --> 00:13:46.927 align:middle line:90%,end
<c.magenta>是我们这款应用的完美选择</c>

00:13:47.694 --> 00:13:49.530 align:middle line:90%,end
<c.magenta>那么现在让我们切换到XCode</c>

00:13:59.473 --> 00:14:02.943 align:middle line:90%,end
<c.magenta>Xcode 11为基于文档的应用</c>
<c.magenta>准备了新模板</c>

00:13:59.473 --> 00:14:02.943 align:middle line:90%,end
<c.magenta>Xcode 11为基于文档的应用</c>
<c.magenta>准备了新模板</c>

00:14:03.243 --> 00:14:04.144 align:middle line:90%,end
<c.magenta>让我们来试试</c>

00:14:09.483 --> 00:14:12.519 align:middle line:90%,end
<c.magenta>让我们把它命名为粒子</c>
<c.magenta>然后创建新应用</c>

00:14:15.122 --> 00:14:16.223 align:middle line:90%,end
<c.magenta>现在一旦实例化</c>

00:14:16.290 --> 00:14:18.392 align:middle line:90%,end
<c.magenta>这个模板上就拥有了你从零开始创建</c>

00:14:18.458 --> 00:14:21.028 align:middle line:90%,end
<c.magenta>基于文档的应用的一切东西</c>

00:14:21.662 --> 00:14:23.997 align:middle line:90%,end
<c.magenta>首先 我们目标的Info.plist</c>

00:14:24.064 --> 00:14:26.700 align:middle line:90%,end
<c.magenta>已经按保之前提到的方式进行了设置</c>

00:14:26.767 --> 00:14:27.701 align:middle line:90%,end
<c.magenta>键也对</c>

00:14:28.168 --> 00:14:31.605 align:middle line:90%,end
<c.magenta>接下来 我们有一个</c>
<c.magenta>DocumentBrowserViewController子类</c>

00:14:31.905 --> 00:14:35.876 align:middle line:90%,end
<c.magenta>拥有稍后进行自定义的全部代码</c>

00:14:37.244 --> 00:14:39.546 align:middle line:90%,end
<c.magenta>它还有一个ViewController子类</c>

00:14:39.613 --> 00:14:41.048 align:middle line:90%,end
<c.magenta>文档视图控制器</c>

00:14:41.114 --> 00:14:44.184 align:middle line:90%,end
<c.magenta>将会控制文件内容的呈现</c>

00:14:46.486 --> 00:14:49.089 align:middle line:90%,end
<c.magenta>下一步 正如保刚才提到过的</c>

00:14:49.156 --> 00:14:51.291 align:middle line:90%,end
<c.magenta>我们有UIDocuments的子类</c>

00:14:51.358 --> 00:14:54.228 align:middle line:90%,end
<c.magenta>在运行时 作为文档的模型</c>

00:14:55.495 --> 00:14:58.165 align:middle line:90%,end
<c.magenta>最后这点也很重要</c>
<c.magenta>设置storyBoard</c>

00:14:58.232 --> 00:15:02.369 align:middle line:90%,end
<c.magenta>将文档浏览器视图控制器</c>
<c.magenta>作为已设置好的根视图控制器</c>

00:14:58.232 --> 00:15:02.369 align:middle line:90%,end
<c.magenta>将文档浏览器视图控制器</c>
<c.magenta>作为已设置好的根视图控制器</c>

00:15:02.903 --> 00:15:05.806 align:middle line:90%,end
<c.magenta>并且文档视图控制器已准备好实例化</c>

00:15:05.873 --> 00:15:08.575 align:middle line:90%,end
<c.magenta>当我们创建新文件或打开现有文件时</c>

00:15:09.443 --> 00:15:11.078 align:middle line:90%,end
<c.magenta>让我们看一眼我们得到了什么</c>

00:15:11.144 --> 00:15:13.780 align:middle line:90%,end
<c.magenta>通过在模拟器中启动这个模板</c>

00:15:24.658 --> 00:15:27.194 align:middle line:90%,end
<c.magenta>现在 一旦开始</c>
<c.magenta>我们会看到新的最近列表视图</c>

00:15:27.261 --> 00:15:30.597 align:middle line:90%,end
<c.magenta>有你之前可能创建的最近的文档</c>

00:15:31.031 --> 00:15:34.535 align:middle line:90%,end
<c.magenta>当然 我们并没有创建过任何文件</c>
<c.magenta>所以让我们切回到浏览视图</c>

00:15:37.204 --> 00:15:41.341 align:middle line:90%,end
<c.magenta>我们看到侧边栏左侧是云存储供应商</c>

00:15:41.408 --> 00:15:43.577 align:middle line:90%,end
<c.magenta>就在新增加的我的iPad上的存储旁边</c>

00:15:44.211 --> 00:15:47.281 align:middle line:90%,end
<c.magenta>我们还看到偏好和我们的标签</c>

00:15:47.748 --> 00:15:50.551 align:middle line:90%,end
<c.magenta>被同步到了你的全部设备上</c>

00:15:51.285 --> 00:15:54.087 align:middle line:90%,end
<c.magenta>在屏幕中央 我们可以看到一个</c>
<c.magenta>大的创建文档按钮</c>

00:15:54.154 --> 00:15:56.490 align:middle line:90%,end
<c.magenta>允许你创建新文档</c>

00:15:56.557 --> 00:15:57.424 align:middle line:90%,end
<c.magenta>那么让我们点击它</c>

00:15:58.759 --> 00:16:01.361 align:middle line:90%,end
<c.magenta>嗯 什么也没发生 这在预料之中</c>

00:15:58.759 --> 00:16:01.361 align:middle line:90%,end
<c.magenta>嗯 什么也没发生 这在预料之中</c>

00:16:01.428 --> 00:16:04.765 align:middle line:90%,end
<c.magenta>这是因为我们还没有通知</c>
<c.magenta>UIDocumentBrowserViewController</c>

00:16:04.831 --> 00:16:07.668 align:middle line:90%,end
<c.magenta>在应用中创建新文件的意思</c>

00:16:08.068 --> 00:16:09.169 align:middle line:90%,end
<c.magenta>那么让我们来修复一下</c>

00:16:10.637 --> 00:16:14.341 align:middle line:90%,end
<c.magenta>因此 我们要切回UIDocument</c>
<c.magenta>BrowserViewController子类</c>

00:16:15.242 --> 00:16:16.710 align:middle line:90%,end
<c.magenta>正如保之前所提到过的</c>

00:16:16.777 --> 00:16:20.514 align:middle line:90%,end
<c.magenta>当用户轻触创建文档按钮时</c>
<c.magenta>我们将回调</c>

00:16:20.581 --> 00:16:23.483 align:middle line:90%,end
<c.magenta>DocumentBrowser</c>
<c.magenta>ViewControllerDelegate函数</c>

00:16:24.218 --> 00:16:26.787 align:middle line:90%,end
<c.magenta>didRequestDocumentCreation</c>
<c.magenta>WithHandler</c>

00:16:27.821 --> 00:16:32.159 align:middle line:90%,end
<c.magenta>现在我们要做的是将新创建</c>

00:16:32.226 --> 00:16:35.495 align:middle line:90%,end
<c.magenta>文件的URL传给</c>
<c.magenta>DocumentBrowserViewController</c>

00:16:36.830 --> 00:16:41.935 align:middle line:90%,end
<c.magenta>现在 在我们的例子中 让我向目标中</c>
<c.magenta>添加一个新的粒子文件</c>

00:16:43.871 --> 00:16:47.541 align:middle line:90%,end
<c.magenta>确保将其添加到我们的目标中并结束</c>

00:16:51.345 --> 00:16:56.517 align:middle line:90%,end
<c.magenta>现在当运行时 我们只需要开始</c>
<c.magenta>并获取此添加文档的URL</c>

00:16:56.717 --> 00:16:58.452 align:middle line:90%,end
<c.magenta>通过我们的NS mainBundle</c>

00:16:59.253 --> 00:17:00.654 align:middle line:90%,end
<c.magenta>一旦我们获取URL</c>

00:16:59.253 --> 00:17:00.654 align:middle line:90%,end
<c.magenta>一旦我们获取URL</c>

00:17:00.721 --> 00:17:04.691 align:middle line:10%
<c.magenta>就把它传给我们从委托函数中</c>
<c.magenta>获得的importHandler</c>

00:17:05.192 --> 00:17:07.961 align:middle line:10%
<c.magenta>然后复制URL</c>

00:17:09.796 --> 00:17:12.833 align:middle line:90%,end
<c.magenta>现在UIDocument</c>
<c.magenta>BrowserViewController将获得这个URL</c>

00:17:12.900 --> 00:17:15.736 align:middle line:90%,end
<c.magenta>并在后台替你执行所有的艰巨任务</c>

00:17:16.036 --> 00:17:19.306 align:middle line:90%,end
<c.magenta>比如将文件移动到合适的位置</c>
<c.magenta>和处理URL</c>

00:17:20.339 --> 00:17:22.643 align:middle line:90%,end
<c.magenta>一旦完成 它将会提供一个回调</c>

00:17:22.709 --> 00:17:26.747 align:middle line:90%,end
<c.magenta>didImportDocumentAt sourceURL</c>

00:17:27.614 --> 00:17:29.917 align:middle line:90%,end
<c.magenta>或failedToImportDocumentAtURL</c>

00:17:30.651 --> 00:17:33.353 align:middle line:90%,end
<c.magenta>现在如果我们没有成功导入</c>
<c.magenta>新创建的文件</c>

00:17:33.654 --> 00:17:35.389 align:middle line:90%,end
<c.magenta>因为我们想成为一名好的开发人员</c>

00:17:35.455 --> 00:17:38.091 align:middle line:90%,end
<c.magenta>我们应该继续并实施恰当的报错处理</c>

00:17:38.158 --> 00:17:40.661 align:middle line:90%,end
<c.magenta>比如把报错呈现给用户</c>

00:17:41.695 --> 00:17:43.964 align:middle line:90%,end
<c.magenta>然而如果我们成功了 我们可以继续</c>

00:17:44.031 --> 00:17:46.300 align:middle line:90%,end
<c.magenta>并呈现我们刚才所创建的文档</c>

00:17:49.036 --> 00:17:52.072 align:middle line:10%
<c.magenta>现在假如用户选择了一个现有文件</c>

00:17:52.139 --> 00:17:53.173 align:middle line:10%
<c.magenta>在那种情况下</c>

00:17:53.240 --> 00:17:57.244 align:middle line:10%
<c.magenta>我们要回调</c>
<c.magenta>didPickDocumentURLs函数</c>

00:17:58.378 --> 00:17:59.947 align:middle line:90%,end
<c.magenta>同样 我们只需要继续</c>

00:18:00.214 --> 00:18:03.450 align:middle line:90%,end
<c.magenta>比如说我们得到的第一个文档URL</c>

00:18:04.084 --> 00:18:04.918 align:middle line:90%,end
<c.magenta>然后呈现它</c>

00:18:05.986 --> 00:18:07.788 align:middle line:90%,end
<c.magenta>现在 在应用中呈现文档</c>

00:18:08.322 --> 00:18:11.725 align:middle line:90%,end
<c.magenta>意味着将其中一个</c>
<c.magenta>DocumentViewControllers实例化</c>

00:18:12.526 --> 00:18:17.598 align:middle line:90%,end
<c.magenta>产生一个我们想要打开的</c>
<c.magenta>用文档URL初始化的文档</c>

00:18:18.265 --> 00:18:21.435 align:middle line:90%,end
<c.magenta>然后我们只需要继续并呈现</c>
<c.magenta>documentViewController</c>

00:18:21.902 --> 00:18:23.871 align:middle line:90%,end
<c.magenta>现在让我们再看看模拟器</c>

00:18:31.879 --> 00:18:33.013 align:middle line:90%,end
<c.magenta>应用再次启动了</c>

00:18:33.080 --> 00:18:36.517 align:middle line:90%,end
<c.magenta>我们在浏览视图中</c>
<c.magenta>并且我们可以轻触创建文档按钮</c>

00:18:36.917 --> 00:18:38.886 align:middle line:90%,end
<c.magenta>然后就出现了</c>
<c.magenta>DocumentViewController</c>

00:18:38.952 --> 00:18:41.355 align:middle line:90%,end
<c.magenta>其中包含我们刚创建的</c>
<c.magenta>文件的详细信息</c>

00:18:42.022 --> 00:18:45.092 align:middle line:90%,end
<c.magenta>完成后 我们可以再次关闭</c>
<c.magenta>DocumentViewController</c>

00:18:45.259 --> 00:18:48.829 align:middle line:90%,end
<c.magenta>返回到rootViewController</c>
<c.magenta>或DocumentBrowserViewController</c>

00:18:51.098 --> 00:18:54.168 align:middle line:90%,end
<c.magenta>现在让我们切换到一个更高级的版本</c>

00:18:54.234 --> 00:18:57.070 align:middle line:90%,end
<c.magenta>已经编好了全部代码</c>

00:18:57.137 --> 00:19:00.741 align:middle line:90%,end
<c.magenta>左侧有粒子系统渲染器</c>
<c.magenta>右侧有编辑器</c>

00:18:57.137 --> 00:19:00.741 align:middle line:90%,end
<c.magenta>左侧有粒子系统渲染器</c>
<c.magenta>右侧有编辑器</c>

00:19:01.041 --> 00:19:02.009 align:middle line:90%,end
<c.magenta>这样我们就可以重点关注</c>

00:19:02.075 --> 00:19:04.912 align:middle line:90%,end
<c.magenta>DocumentBrowserViewController</c>
<c.magenta>相关的代码</c>

00:19:11.451 --> 00:19:13.954 align:middle line:90%,end
<c.magenta>在此之前</c>
<c.magenta>我要移除我们刚创建的应用</c>

00:19:14.021 --> 00:19:16.690 align:middle line:90%,end
<c.magenta>避免其它冲突</c>

00:19:25.365 --> 00:19:28.202 align:middle line:90%,end
<c.magenta>现在这仍然是一样的</c>
<c.magenta>仍然是同一个项目</c>

00:19:28.268 --> 00:19:32.472 align:middle line:90%,end
<c.magenta>它基于我们一开始实例化的模板</c>

00:19:33.040 --> 00:19:35.075 align:middle line:90%,end
<c.magenta>让我介绍一下我们给粒子应用</c>

00:19:35.142 --> 00:19:38.111 align:middle line:90%,end
<c.magenta>Info.plist做的一些附件</c>

00:19:38.779 --> 00:19:44.117 align:middle line:90%,end
<c.magenta>首先 SupportDocumentBrowser</c>
<c.magenta>的键值仍为是</c>

00:19:44.318 --> 00:19:46.019 align:middle line:90%,end
<c.magenta>就像保刚才解释过的一样</c>

00:19:47.120 --> 00:19:50.357 align:middle line:90%,end
<c.magenta>但更多的是 在已导出的UTI部分</c>

00:19:50.858 --> 00:19:54.428 align:middle line:90%,end
<c.magenta>我们正在为粒子文件</c>
<c.magenta>创建一个新的UTI类型</c>

00:19:55.696 --> 00:19:57.831 align:middle line:90%,end
<c.magenta>我们要赋予它一个</c>
<c.magenta>DescriptionParticles</c>

00:19:58.365 --> 00:19:59.967 align:middle line:90%,end
<c.magenta>我们给它一个Identifier</c>

00:20:00.300 --> 00:20:04.872 align:middle line:10%
<c.magenta>并让它遵守UTI类型的公共数据</c>
<c.magenta>和公共内容</c>

00:20:06.173 --> 00:20:10.077 align:middle line:10%
<c.magenta>那意味着我们的粒子文件</c>
<c.magenta>是一连串的数据</c>

00:20:10.143 --> 00:20:12.946 align:middle line:90%,end
<c.magenta>并且拥有文档文件的语义</c>

00:20:14.481 --> 00:20:17.184 align:middle line:90%,end
<c.magenta>现在</c>
<c.magenta>在Additional exported UTI属性中</c>

00:20:18.051 --> 00:20:20.654 align:middle line:10%
<c.magenta>我们定义了我们的文件应该有…</c>

00:20:21.054 --> 00:20:24.024 align:middle line:10%
<c.magenta>哇哦！抱歉</c>

00:20:26.860 --> 00:20:29.096 align:middle line:10%
<c.magenta>…应该有粒子扩展</c>

00:20:29.162 --> 00:20:33.367 align:middle line:10%
<c.magenta>意思是系统中任何有</c>
<c.magenta>.particles扩展名的文件</c>

00:20:33.800 --> 00:20:37.271 align:middle line:10%
<c.magenta>都将被识别为</c>
<c.magenta>新创建的UTI类型的文件</c>

00:20:39.139 --> 00:20:40.941 align:middle line:90%,end
<c.magenta>那么现在已经做好了UTI类型</c>

00:20:41.008 --> 00:20:44.311 align:middle line:10%
<c.magenta>我们可以继续 告诉应用说我们</c>
<c.magenta>实际上已经能支持了</c>

00:20:44.678 --> 00:20:48.715 align:middle line:10%
<c.magenta>那么在文档类型中 我们需要再次</c>
<c.magenta>提到我们的粒子文件格式</c>

00:20:49.082 --> 00:20:52.019 align:middle line:10%
<c.magenta>我们识别了标识符</c>

00:20:52.319 --> 00:20:54.788 align:middle line:10%
<c.magenta>在附加文档类型属性中</c>

00:20:55.322 --> 00:21:01.328 align:middle line:10%
<c.magenta>我们定义CFBundleTypeRole为编辑器</c>
<c.magenta>而LSHandlerRank为所有者</c>

00:20:55.322 --> 00:21:01.328 align:middle line:10%
<c.magenta>我们定义CFBundleTypeRole为编辑器</c>
<c.magenta>而LSHandlerRank为所有者</c>

00:21:01.929 --> 00:21:04.865 align:middle line:10%
<c.magenta>如果你想了解更多信息</c>
<c.magenta>请参看此文档</c>

00:21:07.134 --> 00:21:09.369 align:middle line:10%
<c.magenta>那么现在已经设置好了UTI类型</c>

00:21:09.970 --> 00:21:13.040 align:middle line:10%
<c.magenta>意思是DocumentBrowserView</c>
<c.magenta>Controller将确保</c>

00:21:13.106 --> 00:21:16.877 align:middle line:90%,end
<c.magenta>只允许用户选择新文件类型的文档</c>

00:21:17.711 --> 00:21:21.682 align:middle line:90%,end
<c.magenta>它还能确保当你在DocumentBrowser</c>
<c.magenta>ViewController中搜索时</c>

00:21:21.982 --> 00:21:25.219 align:middle line:90%,end
<c.magenta>你只能看到匹配</c>
<c.magenta>此UI类型的搜索结果</c>

00:21:26.386 --> 00:21:27.588 align:middle line:90%,end
<c.magenta>最后这点也很重要</c>

00:21:27.654 --> 00:21:30.424 align:middle line:90%,end
<c.magenta>在任何UI文档交互控制</c>

00:21:30.490 --> 00:21:33.060 align:middle line:90%,end
<c.magenta>和不同的粒子文件应用中</c>

00:21:33.227 --> 00:21:35.796 align:middle line:90%,end
<c.magenta>你会看到在我们的应用中</c>
<c.magenta>打开文件的操作</c>

00:21:38.098 --> 00:21:40.467 align:middle line:90%,end
<c.magenta>那么现在让我们看看实际的文档</c>

00:21:40.534 --> 00:21:42.569 align:middle line:90%,end
<c.magenta>切换到UIDocument子类</c>

00:21:43.370 --> 00:21:45.239 align:middle line:90%,end
<c.magenta>现在UI文档很强大</c>

00:21:45.305 --> 00:21:47.608 align:middle line:90%,end
<c.magenta>我们强烈鼓励大家使用它</c>

00:21:47.908 --> 00:21:50.711 align:middle line:90%,end
<c.magenta>正如保刚才所说的</c>
<c.magenta>它拥有许多很棒的功能</c>

00:21:50.777 --> 00:21:52.112 align:middle line:90%,end
<c.magenta>比如自动保存</c>

00:21:52.179 --> 00:21:56.617 align:middle line:90%,end
<c.magenta>文件协调、NS文件呈现</c>
<c.magenta>版本控制等等…</c>

00:21:57.251 --> 00:22:00.687 align:middle line:90%,end
<c.magenta>因此 UIDocument和</c>
<c.magenta>UIDocumentBrowserViewController</c>

00:21:57.251 --> 00:22:00.687 align:middle line:90%,end
<c.magenta>因此 UIDocument和</c>
<c.magenta>UIDocumentBrowserViewController</c>

00:22:00.754 --> 00:22:02.389 align:middle line:90%,end
<c.magenta>从字面上看实际上是互生的</c>

00:22:02.589 --> 00:22:04.558 align:middle line:90%,end
<c.magenta>那么让我们看看我们正在做什么</c>

00:22:06.760 --> 00:22:10.564 align:middle line:90%,end
<c.magenta>现在文档显示出文档正处于运行中</c>

00:22:10.631 --> 00:22:13.967 align:middle line:90%,end
<c.magenta>那么很明显</c>
<c.magenta>因为我们正在谈粒子系统</c>

00:22:14.201 --> 00:22:17.070 align:middle line:90%,end
<c.magenta>它应该有一个</c>
<c.magenta>对SCNParticleSystem的引用</c>

00:22:19.706 --> 00:22:21.308 align:middle line:90%,end
<c.magenta>接下来我们要</c>

00:22:21.375 --> 00:22:24.311 align:middle line:90%,end
<c.magenta>保存和加载文件</c>

00:22:24.678 --> 00:22:28.515 align:middle line:90%,end
<c.magenta>因此 我们需要为类型覆盖函数内容</c>

00:22:29.316 --> 00:22:30.751 align:middle line:90%,end
<c.magenta>并加载内容</c>

00:22:31.652 --> 00:22:33.420 align:middle line:90%,end
<c.magenta>现在我们实际上所需要做的就是</c>

00:22:33.487 --> 00:22:37.024 align:middle line:90%,end
<c.magenta>把现有的粒子系统归档或不归档</c>

00:22:37.558 --> 00:22:39.893 align:middle line:90%,end
<c.magenta>这能起作用是因为</c>
<c.magenta>我们的SCNParticleSystem</c>

00:22:39.960 --> 00:22:41.795 align:middle line:90%,end
<c.magenta>已经遵守NS编码了</c>

00:22:42.429 --> 00:22:44.031 align:middle line:90%,end
<c.magenta>所以我们实际上不需要做很多</c>

00:22:44.097 --> 00:22:46.600 align:middle line:90%,end
<c.magenta>我们使用KeyedArchiver归档数据</c>

00:22:47.201 --> 00:22:51.839 align:middle line:10%
<c.magenta>或使用NS KeyedUnarchiver</c>
<c.magenta>取出现有数据</c>

00:22:53.841 --> 00:22:55.943 align:middle line:10%
<c.magenta>这就是你需要对文档做的全部操作</c>

00:22:56.009 --> 00:22:58.312 align:middle line:10%
<c.magenta>让我们看看DocumentViewController</c>

00:22:59.046 --> 00:23:03.383 align:middle line:90%,end
<c.magenta>这是控制呈现文档内容的</c>

00:22:59.046 --> 00:23:03.383 align:middle line:90%,end
<c.magenta>这是控制呈现文档内容的</c>

00:23:03.851 --> 00:23:06.653 align:middle line:90%,end
<c.magenta>那么很明显 在我们呈现</c>
<c.magenta>DocumentViewController之前</c>

00:23:06.720 --> 00:23:09.223 align:middle line:90%,end
<c.magenta>我们应该把它传给文档的引用</c>

00:23:14.094 --> 00:23:17.331 align:middle line:90%,end
<c.magenta>在本例中 设置文档函数是不同步的</c>

00:23:17.397 --> 00:23:21.068 align:middle line:90%,end
<c.magenta>这是因为加载文档应该是不同步的</c>

00:23:21.134 --> 00:23:22.803 align:middle line:90%,end
<c.magenta>因为包含文件I/O</c>

00:23:23.170 --> 00:23:26.406 align:middle line:90%,end
<c.magenta>我们要从磁盘中读取</c>
<c.magenta>你不应该在主线程上读取</c>

00:23:26.773 --> 00:23:29.176 align:middle line:90%,end
<c.magenta>那么让我们看看该如何实施</c>

00:23:32.212 --> 00:23:34.681 align:middle line:90%,end
<c.magenta>首先我们要保持对文档的引用</c>

00:23:35.482 --> 00:23:37.818 align:middle line:90%,end
<c.magenta>然后我们继续并加载ViewController</c>

00:23:38.118 --> 00:23:41.121 align:middle line:90%,end
<c.magenta>然后我们在文档上调用Open函数</c>

00:23:41.722 --> 00:23:43.924 align:middle line:90%,end
<c.magenta>现在应该完成了后台的全部工作</c>

00:23:43.991 --> 00:23:46.126 align:middle line:90%,end
<c.magenta>一旦回来 它将会给我们一个回调</c>

00:23:48.462 --> 00:23:51.398 align:middle line:90%,end
<c.magenta>现在如果在文档加载过程中</c>
<c.magenta>出现任何错误</c>

00:23:51.665 --> 00:23:53.634 align:middle line:90%,end
<c.magenta>我们就会调用handleError</c>

00:23:53.700 --> 00:23:56.737 align:middle line:90%,end
<c.magenta>在UIDocument子类中</c>
<c.magenta>允许用户交互</c>

00:23:57.137 --> 00:24:00.841 align:middle line:90%,end
<c.magenta>因为我们想成为一名了不起的开发人员</c>
<c.magenta>我们必须得实施这个函数</c>

00:23:57.137 --> 00:24:00.841 align:middle line:90%,end
<c.magenta>因为我们想成为一名了不起的开发人员</c>
<c.magenta>我们必须得实施这个函数</c>

00:24:01.341 --> 00:24:04.211 align:middle line:90%,end
<c.magenta>如果成功了</c>
<c.magenta>我们可以继续并获取文档</c>

00:24:04.278 --> 00:24:07.948 align:middle line:10%
<c.magenta>并把它传给particleViewController</c>
<c.magenta>和editorViewController</c>

00:24:08.916 --> 00:24:11.952 align:middle line:10%
<c.magenta>现在DocumentViewController实际上</c>
<c.magenta>只是一个容器视图控制器</c>

00:24:12.019 --> 00:24:14.855 align:middle line:10%
<c.magenta>左侧是一个粒子系统</c>
<c.magenta>右侧是编辑器</c>

00:24:15.923 --> 00:24:18.792 align:middle line:10%
<c.magenta>现在无论是什么情况</c>
<c.magenta>我们都必须调用completionHandler</c>

00:24:19.393 --> 00:24:21.929 align:middle line:10%
<c.magenta>用于表明我们已经</c>
<c.magenta>完成了对文档的设置</c>

00:24:24.131 --> 00:24:25.599 align:middle line:10%
<c.magenta>这就是关于文档的打开</c>

00:24:25.666 --> 00:24:29.469 align:middle line:10%
<c.magenta>但是当然了 我们还想在某一时刻</c>
<c.magenta>遣散DocumentViewController</c>

00:24:32.005 --> 00:24:32.840 align:middle line:10%
<c.magenta>同样</c>

00:24:32.906 --> 00:24:34.541 align:middle line:10%
<c.magenta>这次我们不调用Open函数了</c>

00:24:34.608 --> 00:24:37.177 align:middle line:10%
<c.magenta>很明显我们要调用Close函数</c>

00:24:38.045 --> 00:24:41.782 align:middle line:10%
<c.magenta>这又是不同步的 因为我们正在</c>
<c.magenta>保存文档 如果需要的话</c>

00:24:42.950 --> 00:24:46.386 align:middle line:10%
<c.magenta>在completionHandler中 我们只需要</c>
<c.magenta>遣散DocumentViewController</c>

00:24:47.387 --> 00:24:50.123 align:middle line:10%
<c.magenta>DocumentViewController</c>
<c.magenta>几乎已经完成使命了</c>

00:24:50.190 --> 00:24:53.861 align:middle line:10%
<c.magenta>因此我们可以继续并再看一眼</c>
<c.magenta>DocumentBrowserViewController</c>

00:24:54.795 --> 00:24:58.232 align:middle line:10%
<c.magenta>这是控制呈现文档视图控制器的</c>

00:24:58.298 --> 00:25:01.802 align:middle line:90%,end
<c.magenta>无论是创建新文件或是打开现有文件</c>

00:24:58.298 --> 00:25:01.802 align:middle line:90%,end
<c.magenta>无论是创建新文件或是打开现有文件</c>

00:25:03.470 --> 00:25:04.838 align:middle line:90%,end
<c.magenta>让我们再看一眼</c>

00:25:06.874 --> 00:25:08.308 align:middle line:90%,end
<c.magenta>那么当我们创建新文件时</c>

00:25:08.375 --> 00:25:11.311 align:middle line:90%,end
<c.magenta>我们得到一个对didRequestDocument</c>
<c.magenta>CreationWithHandler的回调</c>

00:25:11.812 --> 00:25:14.047 align:middle line:90%,end
<c.magenta>我们从NS mainBundle中获取了URL</c>

00:25:14.448 --> 00:25:17.551 align:middle line:90%,end
<c.magenta>并通过importHandler</c>
<c.magenta>和复制操作将其传回</c>

00:25:18.585 --> 00:25:21.922 align:middle line:90%,end
<c.magenta>我们将得到一个对</c>
<c.magenta>didImportDocumentAtURL</c>

00:25:21.989 --> 00:25:23.724 align:middle line:90%,end
<c.magenta>或failedToImportDocumentAtURL</c>
<c.magenta>的回调</c>

00:25:25.325 --> 00:25:27.794 align:middle line:10%
<c.magenta>如果成功 我们将继续并呈现文档</c>

00:25:27.861 --> 00:25:31.932 align:middle line:10%
<c.magenta>就跟我们之前打开一个现有文件一样</c>

00:25:33.600 --> 00:25:35.002 align:middle line:10%
<c.magenta>现在当我们想呈现一个文档时</c>

00:25:35.068 --> 00:25:38.238 align:middle line:10%
<c.magenta>我们从storyBoard</c>
<c.magenta>把DocumentViewController实例化</c>

00:25:38.305 --> 00:25:42.142 align:middle line:10%
<c.magenta>并通过我们刚完成的带有对新创建的</c>
<c.magenta>文档实例</c>

00:25:42.309 --> 00:25:46.146 align:middle line:10%
<c.magenta>引用的函数setDocument传递文档</c>

00:25:47.080 --> 00:25:50.717 align:middle line:10%
<c.magenta>完成后 我们只需要继续并呈现</c>
<c.magenta>DocumentViewController</c>

00:25:50.984 --> 00:25:53.020 align:middle line:10%
<c.magenta>让我们在模拟器中看一下</c>

00:26:05.365 --> 00:26:06.533 align:middle line:90%,end
<c.magenta>（最近列表）</c>

00:26:06.600 --> 00:26:10.237 align:middle line:90%,end
<c.magenta>切回浏览视图并点击创建文档按钮</c>

00:26:10.904 --> 00:26:12.105 align:middle line:90%,end
<c.magenta>创建了一个新文件</c>

00:26:12.506 --> 00:26:17.377 align:middle line:90%,end
<c.magenta>好了 一个漂亮的粒子应用</c>
<c.magenta>右侧有检验器</c>

00:26:17.978 --> 00:26:22.216 align:middle line:90%,end
<c.magenta>我们可以稍微修改一下值</c>
<c.magenta>尺寸和颜色</c>

00:26:23.116 --> 00:26:24.218 align:middle line:90%,end
<c.magenta>完成后</c>

00:26:24.284 --> 00:26:27.221 align:middle line:90%,end
<c.magenta>我们只需要通过按完成按钮</c>
<c.magenta>再次关闭文档</c>

00:26:29.523 --> 00:26:33.560 align:middle line:90%,end
<c.magenta>太棒了 那么创建文档和打开文档</c>
<c.magenta>立竿见影</c>

00:26:33.961 --> 00:26:35.996 align:middle line:90%,end
<c.magenta>但还有一点我并不是特别喜欢</c>

00:26:36.063 --> 00:26:40.567 align:middle line:90%,end
<c.magenta>就是DocumentBrowserViewController</c>
<c.magenta>是白色的</c>

00:26:40.834 --> 00:26:44.037 align:middle line:90%,end
<c.magenta>而ParticleViewController</c>
<c.magenta>却是很暗的颜色</c>

00:26:44.371 --> 00:26:45.472 align:middle line:90%,end
<c.magenta>那么让我们来修改一下</c>

00:26:46.173 --> 00:26:47.341 align:middle line:90%,end
<c.magenta>正如保刚才所提到的</c>

00:26:47.407 --> 00:26:50.811 align:middle line:90%,end
<c.magenta>有三种浏览器用户界面样式</c>
<c.magenta>供你选择</c>

00:26:50.878 --> 00:26:53.881 align:middle line:90%,end
<c.magenta>首先 暗色、亮色和白色</c>

00:26:54.348 --> 00:26:58.151 align:middle line:90%,end
<c.magenta>很明显暗色看起来很符合我们的情境</c>

00:26:59.620 --> 00:27:03.023 align:middle line:90%,end
<c.magenta>因此让我们切回到</c>
<c.magenta>DocumentBrowserViewController子类</c>

00:26:59.620 --> 00:27:03.023 align:middle line:90%,end
<c.magenta>因此让我们切回到</c>
<c.magenta>DocumentBrowserViewController子类</c>

00:27:04.124 --> 00:27:07.060 align:middle line:90%,end
<c.magenta>现在子类的viewDidLoad方法</c>

00:27:07.127 --> 00:27:09.730 align:middle line:90%,end
<c.magenta>是配置文档浏览器的最佳时刻</c>

00:27:10.964 --> 00:27:13.133 align:middle line:90%,end
<c.magenta>在这种情况下 我们要做的是</c>

00:27:15.068 --> 00:27:17.337 align:middle line:90%,end
<c.magenta>将browserUserInterfaceStyle</c>
<c.magenta>设置为暗色</c>

00:27:18.172 --> 00:27:21.074 align:middle line:90%,end
<c.magenta>还可以修改</c>
<c.magenta>DocumentBrowserViewController</c>

00:27:21.141 --> 00:27:23.477 align:middle line:90%,end
<c.magenta>视图的tintColor</c>

00:27:23.644 --> 00:27:26.613 align:middle line:90%,end
<c.magenta>在本例中 使用橙黄色</c>

00:27:26.680 --> 00:27:29.116 align:middle line:90%,end
<c.magenta>应该会很符合我们激情四溢的粒子</c>

00:27:29.783 --> 00:27:30.617 align:middle line:90%,end
<c.magenta>让我们看一眼</c>

00:27:39.326 --> 00:27:40.160 align:middle line:90%,end
<c.magenta>好了</c>

00:27:40.360 --> 00:27:42.863 align:middle line:90%,end
<c.magenta>这是同一个</c>
<c.magenta>DocumentBrowserViewController</c>

00:27:42.930 --> 00:27:44.264 align:middle line:90%,end
<c.magenta>只是色调较暗</c>

00:27:44.331 --> 00:27:46.934 align:middle line:90%,end
<c.magenta>这比刚才那个看起来好多了</c>

00:27:47.000 --> 00:27:50.137 align:middle line:90%,end
<c.magenta>当我们打开</c>
<c.magenta>DocumentViewController时</c>

00:27:50.871 --> 00:27:54.074 align:middle line:90%,end
<c.magenta>现在即使是控制UI也更新了外观</c>

00:27:55.008 --> 00:27:56.410 align:middle line:90%,end
<c.magenta>让我们创建一个新文件夹</c>

00:27:59.279 --> 00:28:00.414 align:middle line:90%,end
<c.magenta>把它命名为火焰</c>

00:27:59.279 --> 00:28:00.414 align:middle line:90%,end
<c.magenta>把它命名为火焰</c>

00:28:04.818 --> 00:28:05.986 align:middle line:90%,end
<c.magenta>然后打开一个新文档</c>

00:28:07.521 --> 00:28:09.289 align:middle line:90%,end
<c.magenta>现在两个视图控制器之间的过渡</c>

00:28:09.356 --> 00:28:11.792 align:middle line:90%,end
<c.magenta>变得更流畅了 看起来也更棒了</c>

00:28:12.860 --> 00:28:15.796 align:middle line:90%,end
<c.magenta>那么这就是第一个演示</c>
<c.magenta>要告诉大家的全部内容</c>

00:28:16.730 --> 00:28:19.666 align:middle line:90%,end
<c.magenta>为了获得一个我们目前</c>
<c.magenta>所学习的内容的概览</c>

00:28:19.733 --> 00:28:21.468 align:middle line:90%,end
<c.magenta>让我们把舞台交回给保</c>

00:28:34.848 --> 00:28:37.684 align:middle line:90%,end
<c.magenta>让我们看一下我们在演示中</c>
<c.magenta>所看到的内容</c>

00:28:38.952 --> 00:28:42.356 align:middle line:90%,end
<c.magenta>首先我们看到了</c>
<c.magenta>如何从Xcode模板中</c>

00:28:42.422 --> 00:28:43.724 align:middle line:90%,end
<c.magenta>创建基于文档的新应用</c>

00:28:44.291 --> 00:28:48.028 align:middle line:90%,end
<c.magenta>然后我们看到了如何创建新文档</c>
<c.magenta>以及如何打开文档</c>

00:28:48.996 --> 00:28:53.100 align:middle line:90%,end
<c.magenta>最后我们看到了如何自定义</c>
<c.magenta>浏览器VC的外观</c>

00:28:53.367 --> 00:28:55.469 align:middle line:90%,end
<c.magenta>使其看起来与应用的其它部分相匹配</c>

00:28:57.371 --> 00:29:00.507 align:middle line:90%,end
<c.magenta>现在我们了解了</c>
<c.magenta>浏览器VC的基本功能</c>

00:28:57.371 --> 00:29:00.507 align:middle line:90%,end
<c.magenta>现在我们了解了</c>
<c.magenta>浏览器VC的基本功能</c>

00:29:00.908 --> 00:29:03.610 align:middle line:90%,end
<c.magenta>让我们看看如何利用它获得更多功能</c>

00:29:03.677 --> 00:29:06.613 align:middle line:90%,end
<c.magenta>并为用户提供一种了不起的体验</c>

00:29:07.948 --> 00:29:11.351 align:middle line:90%,end
<c.magenta>在这部分中 我会谈到三个话题：</c>

00:29:11.652 --> 00:29:15.956 align:middle line:90%,end
<c.magenta>open-in-place、如何在浏览器VC中</c>
<c.magenta>提供自定义动作</c>

00:29:16.023 --> 00:29:18.692 align:middle line:90%,end
<c.magenta>以及如何创建很棒的打开体验</c>

00:29:20.661 --> 00:29:22.696 align:middle line:90%,end
<c.magenta>那么首先让我们谈谈open-in-place</c>

00:29:23.263 --> 00:29:26.066 align:middle line:90%,end
<c.magenta>open-in-place是与iOS 9</c>
<c.magenta>一起发布的一个很棒的功能</c>

00:29:26.834 --> 00:29:30.404 align:middle line:90%,end
<c.magenta>它允许应用共享文件而无需复制</c>

00:29:32.306 --> 00:29:33.440 align:middle line:90%,end
<c.magenta>同时正因为如此</c>

00:29:33.507 --> 00:29:36.443 align:middle line:90%,end
<c.magenta>当你访问这些文档时需要谨慎</c>

00:29:36.510 --> 00:29:39.213 align:middle line:90%,end
<c.magenta>因为其它应用可能已经访问过它们了</c>

00:29:40.681 --> 00:29:43.183 align:middle line:90%,end
<c.magenta>现在浏览器VC也使用这个功能</c>

00:29:43.250 --> 00:29:46.086 align:middle line:90%,end
<c.magenta>用于从最近列表弹出框中打开文件</c>

00:29:46.720 --> 00:29:49.489 align:middle line:90%,end
<c.magenta>那么如果你在你的应用中</c>
<c.magenta>使用浏览器VC</c>

00:29:49.556 --> 00:29:51.959 align:middle line:90%,end
<c.magenta>你真的需要利用一下</c>
<c.magenta>open-in-place功能</c>

00:29:52.359 --> 00:29:54.895 align:middle line:90%,end
<c.magenta>如果你是从Xcode模板中开始的</c>
<c.magenta>那非常简单</c>

00:29:54.962 --> 00:29:56.263 align:middle line:90%,end
<c.magenta>你什么也不需要做</c>

00:29:56.330 --> 00:29:59.666 align:middle line:90%,end
<c.magenta>如果不是 那么你需要实施</c>
<c.magenta>支持open-in-place</c>

00:30:00.033 --> 00:30:01.535 align:middle line:90%,end
<c.magenta>让我们看一下代码</c>

00:30:01.902 --> 00:30:02.736 align:middle line:90%,end
<c.magenta>首先我们需要</c>

00:30:02.803 --> 00:30:05.873 align:middle line:90%,end
<c.magenta>实施ApplicationOpenInputURL</c>
<c.magenta>委托方法</c>

00:30:06.740 --> 00:30:10.377 align:middle line:90%,end
<c.magenta>在这里 第一件事就是查看</c>
<c.magenta>输入URL是否为文件URL</c>

00:30:10.777 --> 00:30:14.815 align:middle line:90%,end
<c.magenta>如果是 我们可以从浏览器VC中调用</c>
<c.magenta>revealDocument方法</c>

00:30:15.249 --> 00:30:18.085 align:middle line:90%,end
<c.magenta>这个方法将会在</c>
<c.magenta>最近列表视图中展示文档</c>

00:30:18.151 --> 00:30:19.953 align:middle line:90%,end
<c.magenta>并且如果准备好了会进行回调</c>

00:30:20.988 --> 00:30:24.758 align:middle line:90%,end
<c.magenta>现在我们可以加载并呈现文档了</c>
<c.magenta>就像我们在打开和创建文档时一样</c>

00:30:25.092 --> 00:30:28.362 align:middle line:90%,end
<c.magenta>如果失败了 我们就需要处理报错</c>
<c.magenta>并向用户呈现一些UI</c>

00:30:30.631 --> 00:30:34.735 align:middle line:90%,end
<c.magenta>现在让我们看看如何向浏览器VC中</c>
<c.magenta>添加自定义动作</c>

00:30:35.602 --> 00:30:37.938 align:middle line:90%,end
<c.magenta>有三种方式添加自定义动作</c>

00:30:38.105 --> 00:30:40.474 align:middle line:90%,end
<c.magenta>第一种是UI文档浏览器动作</c>

00:30:40.941 --> 00:30:42.009 align:middle line:90%,end
<c.magenta>你可以添加动作</c>

00:30:42.075 --> 00:30:43.677 align:middle line:90%,end
<c.magenta>当用户长按</c>

00:30:43.744 --> 00:30:46.780 align:middle line:90%,end
<c.magenta>文档时和当用户进入选择模式时</c>

00:30:48.081 --> 00:30:49.249 align:middle line:90%,end
<c.magenta>要创建动作</c>

00:30:49.316 --> 00:30:51.685 align:middle line:90%,end
<c.magenta>你需要在处理器中提供</c>

00:30:51.919 --> 00:30:55.455 align:middle line:90%,end
<c.magenta>localizedTitle和有效性</c>

00:30:55.822 --> 00:30:58.659 align:middle line:90%,end
<c.magenta>有效性有两个值：菜单和导航栏</c>

00:30:59.092 --> 00:31:02.729 align:middle line:90%,end
<c.magenta>菜单会使动作呈现 当用户长按时</c>

00:30:59.092 --> 00:31:02.729 align:middle line:90%,end
<c.magenta>菜单会使动作呈现 当用户长按时</c>

00:31:03.163 --> 00:31:05.499 align:middle line:90%,end
<c.magenta>而导航栏会使动作呈现</c>

00:31:05.566 --> 00:31:07.634 align:middle line:90%,end
<c.magenta>当用户进入选择模式时</c>

00:31:08.635 --> 00:31:10.671 align:middle line:90%,end
<c.magenta>处理器会提供用户想要为该动作</c>

00:31:10.871 --> 00:31:13.440 align:middle line:90%,end
<c.magenta>使用的URL数组</c>

00:31:14.341 --> 00:31:18.078 align:middle line:90%,end
<c.magenta>现在与打开URL不同</c>
<c.magenta>这是你获取这些URL的唯一方法</c>

00:31:18.145 --> 00:31:21.682 align:middle line:90%,end
<c.magenta>除非你的应用被毙掉</c>

00:31:22.649 --> 00:31:25.919 align:middle line:90%,end
<c.magenta>现在我们有了动作</c>
<c.magenta>你需要设置所支持的内容类型</c>

00:31:25.986 --> 00:31:30.190 align:middle line:90%,end
<c.magenta>浏览器VC会使用内容类型来了解</c>
<c.magenta>何时显示你的动作</c>

00:31:30.924 --> 00:31:33.527 align:middle line:90%,end
<c.magenta>然后你需要设置支持多项</c>

00:31:33.927 --> 00:31:37.130 align:middle line:90%,end
<c.magenta>来表明你是否可以同时支持多个项</c>

00:31:37.531 --> 00:31:40.234 align:middle line:90%,end
<c.magenta>并且你只需要将你</c>
<c.magenta>刚创建的自定义行动</c>

00:31:40.300 --> 00:31:42.669 align:middle line:90%,end
<c.magenta>设置到浏览器VC的</c>
<c.magenta>自定义动作数组中即可</c>

00:31:44.471 --> 00:31:47.674 align:middle line:90%,end
<c.magenta>第二种动作类型是UI栏按钮项</c>

00:31:48.342 --> 00:31:51.812 align:middle line:90%,end
<c.magenta>你可以在最近列表VC的导航栏中</c>
<c.magenta>添加这些动作</c>

00:31:52.312 --> 00:31:55.415 align:middle line:90%,end
<c.magenta>并浏览…抱歉</c>
<c.magenta>最近列表视图和浏览器视图</c>

00:31:55.616 --> 00:31:59.119 align:middle line:90%,end
<c.magenta>并且你可以将它们添加到</c>
<c.magenta>导航栏的后面或侧面</c>

00:32:02.289 --> 00:32:04.558 align:middle line:90%,end
<c.magenta>第三种动作类型是</c>

00:32:04.625 --> 00:32:07.060 align:middle line:90%,end
<c.magenta>UI活动视图控制器</c>

00:32:08.128 --> 00:32:10.531 align:middle line:90%,end
<c.magenta>浏览器VC会显示这个视图控制器</c>

00:32:10.597 --> 00:32:13.166 align:middle line:90%,end
<c.magenta>当用户实施共享动作时</c>

00:32:14.635 --> 00:32:18.105 align:middle line:90%,end
<c.magenta>浏览器VC会让你控制</c>
<c.magenta>这个动作视图控制器</c>

00:32:18.172 --> 00:32:19.406 align:middle line:90%,end
<c.magenta>在呈现它之前</c>

00:32:19.740 --> 00:32:22.109 align:middle line:90%,end
<c.magenta>同时它会让你添加自定义行动</c>

00:32:22.176 --> 00:32:24.478 align:middle line:90%,end
<c.magenta>当它正在创建这个</c>
<c.magenta>UI活动视图控制器时</c>

00:32:25.379 --> 00:32:26.680 align:middle line:90%,end
<c.magenta>那么让我们来看一下代码</c>

00:32:27.481 --> 00:32:30.117 align:middle line:90%,end
<c.magenta>如果你想添加附加的动作 你需要</c>

00:32:30.184 --> 00:32:34.288 align:middle line:90%,end
<c.magenta>向documentURL委托方法实施</c>
<c.magenta>文档浏览器应用活动</c>

00:32:35.355 --> 00:32:38.325 align:middle line:90%,end
<c.magenta>如果你想获取这个活动视图控制器</c>

00:32:38.859 --> 00:32:43.830 align:middle line:90%,end
<c.magenta>你需要实施DocumentBrowser</c>
<c.magenta>willPresentactivityViewController</c>

00:32:45.465 --> 00:32:47.134 align:middle line:90%,end
<c.magenta>这就是关于动作的全部内容</c>

00:32:47.901 --> 00:32:50.470 align:middle line:90%,end
<c.magenta>现在因为你们已经了解了文件应用</c>

00:32:50.637 --> 00:32:52.573 align:middle line:90%,end
<c.magenta>有一个很棒的打开过渡</c>

00:32:52.739 --> 00:32:54.842 align:middle line:90%,end
<c.magenta>是从缩略图到全屏</c>

00:32:56.109 --> 00:32:58.579 align:middle line:90%,end
<c.magenta>文件应用之所以能实现这个功能</c>

00:32:58.779 --> 00:33:01.515 align:middle line:90%,end
<c.magenta>归功于新的UIDocumentBrowser</c>
<c.magenta>TransitionController</c>

00:32:58.779 --> 00:33:01.515 align:middle line:90%,end
<c.magenta>归功于新的UIDocumentBrowser</c>
<c.magenta>TransitionController</c>

00:33:03.150 --> 00:33:07.120 align:middle line:90%,end
<c.magenta>这个类可以让你设置显示加载进度</c>

00:33:07.354 --> 00:33:11.291 align:middle line:90%,end
<c.magenta>当你加载文档时 在缩略图顶部</c>

00:33:11.592 --> 00:33:15.162 align:middle line:90%,end
<c.magenta>并且它还让你使用缩放过渡动画</c>

00:33:15.362 --> 00:33:19.967 align:middle line:90%,end
<c.magenta>当你呈现文档视图控制器时</c>

00:33:20.834 --> 00:33:22.669 align:middle line:90%,end
<c.magenta>那么现在让我们看一下工作流程</c>

00:33:23.370 --> 00:33:27.641 align:middle line:90%,end
<c.magenta>首先你需要获取</c>
<c.magenta>用户刚刚选择的URL</c>

00:33:28.509 --> 00:33:31.144 align:middle line:90%,end
<c.magenta>在这里 你要开始加载文档内容</c>

00:33:31.512 --> 00:33:34.848 align:middle line:90%,end
<c.magenta>加载时你需要更新过渡控制器</c>

00:33:36.316 --> 00:33:39.887 align:middle line:90%,end
<c.magenta>一旦文档加载完全</c>
<c.magenta>你只需要呈现文档</c>

00:33:40.287 --> 00:33:44.758 align:middle line:90%,end
<c.magenta>并使用过渡控制器来驱动</c>
<c.magenta>呈现时的动画即可</c>

00:33:46.460 --> 00:33:48.929 align:middle line:90%,end
<c.magenta>那么现在让我们看看是如何实现的</c>

00:33:49.496 --> 00:33:53.300 align:middle line:90%,end
<c.magenta>首先一旦你获得用户所选择的URL</c>

00:33:54.268 --> 00:33:55.869 align:middle line:90%,end
<c.magenta>你需要创建进度对象</c>

00:33:55.936 --> 00:33:58.205 align:middle line:90%,end
<c.magenta>那会追踪文档的加载</c>

00:33:59.039 --> 00:34:01.341 align:middle line:90%,end
<c.magenta>在这里 你还要创建过渡控制器</c>

00:33:59.039 --> 00:34:01.341 align:middle line:90%,end
<c.magenta>在这里 你还要创建过渡控制器</c>

00:34:01.942 --> 00:34:05.312 align:middle line:90%,end
<c.magenta>那会追踪加载并驱动动画</c>

00:34:05.546 --> 00:34:07.147 align:middle line:90%,end
<c.magenta>从缩略图到全屏</c>

00:34:07.414 --> 00:34:10.617 align:middle line:90%,end
<c.magenta>现在你只需要将进度</c>
<c.magenta>设置到过渡控制器上</c>

00:34:11.552 --> 00:34:13.286 align:middle line:90%,end
<c.magenta>在这里 我们已经准备加载文档了</c>

00:34:13.719 --> 00:34:15.522 align:middle line:90%,end
<c.magenta>在本例中 loadDocument方法</c>

00:34:15.688 --> 00:34:19.193 align:middle line:90%,end
<c.magenta>会加载文档同时会升级</c>
<c.magenta>我们之前创建的进度</c>

00:34:19.560 --> 00:34:22.862 align:middle line:90%,end
<c.magenta>当文档加载完全后</c>
<c.magenta>它会回调我们</c>

00:34:23.263 --> 00:34:25.666 align:middle line:90%,end
<c.magenta>在这里 我们只需要呈现</c>
<c.magenta>文档视图控制器</c>

00:34:26.400 --> 00:34:29.136 align:middle line:90%,end
<c.magenta>现在如果我们停在这里</c>
<c.magenta>我们会从UIKit中获得动画效果</c>

00:34:29.402 --> 00:34:30.904 align:middle line:90%,end
<c.magenta>是从底部开始的一个滑动</c>

00:34:31.405 --> 00:34:33.706 align:middle line:90%,end
<c.magenta>但我们想要这个更好的缩放过渡</c>

00:34:34.174 --> 00:34:36.877 align:middle line:90%,end
<c.magenta>为此 我们需要实施所呈现的</c>

00:34:36.944 --> 00:34:38.411 align:middle line:90%,end
<c.magenta>视图控制器的过渡委托</c>

00:34:39.612 --> 00:34:41.315 align:middle line:90%,end
<c.magenta>过渡委托需要实施</c>

00:34:41.380 --> 00:34:44.051 align:middle line:90%,end
<c.magenta>UI视图控制器过渡委托协议</c>

00:34:44.751 --> 00:34:47.454 align:middle line:90%,end
<c.magenta>在此协议中</c>
<c.magenta>你需要实施两个主方法：</c>

00:34:47.754 --> 00:34:50.190 align:middle line:90%,end
<c.magenta>为所呈现的视图控制器</c>
<c.magenta>实施动画控制器</c>

00:34:50.257 --> 00:34:52.893 align:middle line:90%,end
<c.magenta>以及为所遣散的视图控制器</c>
<c.magenta>实施动画控制器</c>

00:34:53.193 --> 00:34:54.862 align:middle line:90%,end
<c.magenta>在这里 你只需要返回</c>

00:34:54.928 --> 00:34:57.331 align:middle line:90%,end
<c.magenta>我们之前所创建的过渡控制器</c>

00:34:58.532 --> 00:35:01.735 align:middle line:90%,end
<c.magenta>现在让我们把舞台交还给拉斐尔</c>
<c.magenta>让他给大家展示如何实施</c>

00:34:58.532 --> 00:35:01.735 align:middle line:90%,end
<c.magenta>现在让我们把舞台交还给拉斐尔</c>
<c.magenta>让他给大家展示如何实施</c>

00:35:01.802 --> 00:35:02.903 align:middle line:90%,end
<c.magenta>这些高级功能</c>

00:35:03.203 --> 00:35:04.037 align:middle line:90%,end
<c.magenta>拉斐尔</c>

00:35:06.874 --> 00:35:07.708 align:middle line:90%,end
<c.magenta>谢谢 保</c>

00:35:08.742 --> 00:35:11.778 align:middle line:90%,end
<c.magenta>那么在第二个演示中</c>
<c.magenta>我想给大家展示三点</c>

00:35:12.112 --> 00:35:16.416 align:middle line:90%,end
<c.magenta>第一是open-in-place</c>
<c.magenta>以及如何简便地</c>

00:35:16.850 --> 00:35:20.220 align:middle line:90%,end
<c.magenta>在你的文档浏览器视图控制器</c>
<c.magenta>应用中采用它</c>

00:35:20.888 --> 00:35:23.257 align:middle line:90%,end
<c.magenta>接下来我们要看看自定义动作</c>

00:35:23.724 --> 00:35:26.927 align:middle line:90%,end
<c.magenta>我们会添加一个在长按菜单中</c>
<c.magenta>显示的新动作</c>

00:35:26.994 --> 00:35:28.629 align:middle line:90%,end
<c.magenta>当你按住一个文档时</c>

00:35:29.062 --> 00:35:31.098 align:middle line:90%,end
<c.magenta>最后这点也很重要</c>
<c.magenta>我们要实施</c>

00:35:31.164 --> 00:35:34.601 align:middle line:90%,end
<c.magenta>一个自定义视图控制器过渡</c>
<c.magenta>来改善用户体验</c>

00:35:34.668 --> 00:35:37.404 align:middle line:90%,end
<c.magenta>当我们打开现有文件或创建新文件时</c>

00:35:37.471 --> 00:35:38.305 align:middle line:90%,end
<c.magenta>那么让我们</c>

00:35:38.372 --> 00:35:40.140 align:middle line:90%,end
<c.magenta>跳回我们的项目中</c>

00:35:48.749 --> 00:35:50.284 align:middle line:90%,end
<c.magenta>现在让我们谈谈open-in-place</c>

00:35:52.219 --> 00:35:56.323 align:middle line:90%,end
<c.magenta>open-in-place是和iOS 9一起</c>
<c.magenta>引入的一个了不起的功能</c>

00:35:56.390 --> 00:35:57.658 align:middle line:90%,end
<c.magenta>它可以让你直接操作</c>

00:35:57.724 --> 00:36:00.260 align:middle line:90%,end
<c.magenta>用户所选择的文件而不是其副本</c>

00:35:57.724 --> 00:36:00.260 align:middle line:90%,end
<c.magenta>用户所选择的文件而不是其副本</c>

00:36:01.361 --> 00:36:03.564 align:middle line:90%,end
<c.magenta>现在采用open-in-place非常简单</c>

00:36:03.630 --> 00:36:06.767 align:middle line:90%,end
<c.magenta>而且事实上 如果你用的是</c>
<c.magenta>基于文档的应用模板</c>

00:36:07.034 --> 00:36:08.735 align:middle line:90%,end
<c.magenta>你简直什么也不需要做</c>

00:36:09.636 --> 00:36:14.241 align:middle line:90%,end
<c.magenta>它的流程是当用户在你的应用外部</c>
<c.magenta>轻触文档时</c>

00:36:14.775 --> 00:36:17.044 align:middle line:90%,end
<c.magenta>iOS会调用你应用的委托函数</c>

00:36:17.544 --> 00:36:20.814 align:middle line:90%,end
<c.magenta>并打开URL及其选项</c>
<c.magenta>让我们具体看一下</c>

00:36:26.486 --> 00:36:30.157 align:middle line:90%,end
<c.magenta>在这个函数中</c>
<c.magenta>我们首先要做的是确保</c>

00:36:30.224 --> 00:36:33.260 align:middle line:90%,end
<c.magenta>我们从IOS中获取的URL</c>
<c.magenta>确实是一个文件URL</c>

00:36:33.560 --> 00:36:35.963 align:middle line:90%,end
<c.magenta>如果不是 我们很可能要返回</c>

00:36:36.029 --> 00:36:37.898 align:middle line:90%,end
<c.magenta>因为我们并不是处于</c>
<c.magenta>我们所期待的情境中</c>

00:36:38.732 --> 00:36:42.870 align:middle line:90%,end
<c.magenta>一旦通过测试 我们会得到文档</c>
<c.magenta>浏览器视图控制器</c>

00:36:43.070 --> 00:36:45.539 align:middle line:90%,end
<c.magenta>也就是应用的根视图控制器</c>

00:36:45.939 --> 00:36:49.743 align:middle line:90%,end
<c.magenta>并且我们会将URL</c>
<c.magenta>传给revealDocument函数</c>

00:36:51.445 --> 00:36:53.647 align:middle line:90%,end
<c.magenta>现在文档浏览器视图控制器会再次</c>

00:36:53.714 --> 00:36:56.316 align:middle line:90%,end
<c.magenta>替你在后台实现全部艰巨的任务</c>

00:36:56.750 --> 00:37:01.121 align:middle line:90%,end
<c.magenta>它会处理URL 如果需要就移除URL</c>
<c.magenta>完成后</c>

00:36:56.750 --> 00:37:01.121 align:middle line:90%,end
<c.magenta>它会处理URL 如果需要就移除URL</c>
<c.magenta>完成后</c>

00:37:01.655 --> 00:37:04.525 align:middle line:90%,end
<c.magenta>我们会得到一个回调</c>
<c.magenta>以及completionHandler</c>

00:37:05.192 --> 00:37:08.262 align:middle line:90%,end
<c.magenta>现在再一次 如果我们得到报错</c>
<c.magenta>因为我们想成为一名好的开发人员</c>

00:37:08.629 --> 00:37:10.697 align:middle line:90%,end
<c.magenta>我们需要适当地处理报错</c>

00:37:10.764 --> 00:37:13.400 align:middle line:90%,end
<c.magenta>比如向用户显示警告视图</c>

00:37:14.668 --> 00:37:19.373 align:middle line:10%
<c.magenta>如果一切都没问题</c>
<c.magenta>我们只需要继续并呈现文档</c>

00:37:19.606 --> 00:37:21.942 align:middle line:10%
<c.magenta>为那个新的显示文档URL</c>

00:37:23.177 --> 00:37:24.378 align:middle line:10%
<c.magenta>这几乎是你全部</c>

00:37:24.444 --> 00:37:26.180 align:middle line:90%,end
<c.magenta>需要做的来支持open-in-place</c>

00:37:26.246 --> 00:37:28.015 align:middle line:90%,end
<c.magenta>在你的基于文档的应用中</c>

00:37:29.917 --> 00:37:32.085 align:middle line:90%,end
<c.magenta>现在让我们看一下自定义动作</c>

00:37:33.220 --> 00:37:35.822 align:middle line:90%,end
<c.magenta>那么我们的粒子系统很漂亮 是吧？</c>

00:37:35.889 --> 00:37:38.225 align:middle line:90%,end
<c.magenta>我们可能想与朋友们共享</c>

00:37:38.825 --> 00:37:42.462 align:middle line:90%,end
<c.magenta>那么我要添加一个新动作</c>
<c.magenta>当你长按文档时执行</c>

00:37:42.529 --> 00:37:46.967 align:middle line:90%,end
<c.magenta>将这个粒子系统导出为GIF文件</c>
<c.magenta>或GIF文件</c>

00:37:48.001 --> 00:37:51.004 align:middle line:90%,end
<c.magenta>现在让我们再看一下</c>
<c.magenta>文档浏览器视图控制器</c>

00:37:52.239 --> 00:37:56.009 align:middle line:90%,end
<c.magenta>viewDidLoad方法是配置</c>
<c.magenta>这些动作的最佳时刻</c>

00:38:03.584 --> 00:38:07.154 align:middle line:90%,end
<c.magenta>因此我要实例化一个</c>
<c.magenta>新的UI文档浏览器行动</c>

00:38:07.788 --> 00:38:12.426 align:middle line:90%,end
<c.magenta>我赋予它一个标识符 是整个应用内的</c>
<c.magenta>唯一标识符 一个localizedTitle</c>

00:38:12.960 --> 00:38:15.529 align:middle line:90%,end
<c.magenta>并且将有效性设定为仅菜单</c>

00:38:15.996 --> 00:38:18.899 align:middle line:90%,end
<c.magenta>那么这将会确保这个动作只能</c>

00:38:19.166 --> 00:38:22.970 align:middle line:90%,end
<c.magenta>当你在文档浏览器视图控制器</c>
<c.magenta>网格内长按时执行</c>

00:38:24.838 --> 00:38:28.242 align:middle line:90%,end
<c.magenta>我们还赋予它一个处理器 就是那个</c>

00:38:28.308 --> 00:38:30.244 align:middle line:90%,end
<c.magenta>无论何时用户轻触动作时执行的那个</c>

00:38:30.711 --> 00:38:35.482 align:middle line:90%,end
<c.magenta>在本例中 我们继续并在控制台上</c>
<c.magenta>记录信息</c>

00:38:36.984 --> 00:38:41.221 align:middle line:10%
<c.magenta>接下来 我们将所支持的</c>
<c.magenta>行动内容类型定义为</c>

00:38:41.288 --> 00:38:45.759 align:middle line:10%
<c.magenta>“com.example.particles”</c>
<c.magenta>仅为我们之前定义的UTI类型</c>

00:38:46.326 --> 00:38:50.898 align:middle line:10%
<c.magenta>那么就可以确保只有我们的文件</c>
<c.magenta>可以在菜单中获得这个行动</c>

00:38:51.999 --> 00:38:54.368 align:middle line:10%
<c.magenta>最后这点也很重要</c>
<c.magenta>我们所需要做的就是…</c>

00:38:55.068 --> 00:38:58.338 align:middle line:10%
<c.magenta>定义文档浏览器视图</c>
<c.magenta>控制器的自定义行动</c>

00:38:58.405 --> 00:39:01.241 align:middle line:10%
<c.magenta>使其数组中包含这个新创建的动作</c>

00:38:58.405 --> 00:39:01.241 align:middle line:10%
<c.magenta>使其数组中包含这个新创建的动作</c>

00:39:02.342 --> 00:39:03.944 align:middle line:10%
<c.magenta>让我们在模拟器中试一下</c>

00:39:11.118 --> 00:39:14.154 align:middle line:90%,end
<c.magenta>现在 在我们的现有文件中长按</c>

00:39:14.655 --> 00:39:17.658 align:middle line:90%,end
<c.magenta>我们看到这里显示了一个新动作</c>
<c.magenta>导出为GIF</c>

00:39:18.859 --> 00:39:21.094 align:middle line:90%,end
<c.magenta>一旦轻触那个</c>
<c.magenta>我们会看到在控制台中</c>

00:39:21.361 --> 00:39:24.064 align:middle line:90%,end
<c.magenta>执行了该动作的处理程序</c>

00:39:25.766 --> 00:39:26.800 align:middle line:90%,end
<c.magenta>非常简单</c>

00:39:27.401 --> 00:39:30.671 align:middle line:90%,end
<c.magenta>现在让我们看我要展示给你们的</c>

00:39:30.737 --> 00:39:34.041 align:middle line:90%,end
<c.magenta>第三个很酷的东西</c>
<c.magenta>就是自定义视图控制器过渡</c>

00:39:34.942 --> 00:39:37.444 align:middle line:90%,end
<c.magenta>目前当我们呈现文档视图控制器时</c>

00:39:37.511 --> 00:39:41.315 align:middle line:90%,end
<c.magenta>我们会得到一个</c>
<c.magenta>由UIKit提供的上滑动画</c>

00:39:41.815 --> 00:39:45.586 align:middle line:90%,end
<c.magenta>这已经很酷了</c>
<c.magenta>但这并不是我们真正想要的方式</c>

00:39:45.919 --> 00:39:48.322 align:middle line:90%,end
<c.magenta>相反 它应该是这样的</c>

00:39:48.722 --> 00:39:50.757 align:middle line:90%,end
<c.magenta>用户轻触文档缩略图</c>

00:39:50.958 --> 00:39:53.594 align:middle line:90%,end
<c.magenta>缩略图放大进入粒子系统</c>

00:39:53.660 --> 00:39:55.996 align:middle line:90%,end
<c.magenta>位于文档视图控制器的左侧</c>

00:39:56.563 --> 00:39:58.832 align:middle line:90%,end
<c.magenta>让我们看一下该如何实现</c>

00:40:02.202 --> 00:40:05.506 align:middle line:90%,end
<c.magenta>因此 让我们切回</c>
<c.magenta>我们之前创建的呈现…</c>

00:40:06.807 --> 00:40:09.109 align:middle line:90%,end
<c.magenta>文档函数</c>

00:40:09.943 --> 00:40:12.779 align:middle line:90%,end
<c.magenta>现在 自定义视图控制器过渡的</c>
<c.magenta>工作方式是</c>

00:40:13.080 --> 00:40:15.616 align:middle line:90%,end
<c.magenta>你将自己注册为要呈现的</c>

00:40:15.682 --> 00:40:18.252 align:middle line:90%,end
<c.magenta>视图控制器过渡委托</c>

00:40:19.052 --> 00:40:23.924 align:middle line:90%,end
<c.magenta>在呈现之前 UIKit会调用我们</c>
<c.magenta>并请求过渡控制器</c>

00:40:24.658 --> 00:40:26.527 align:middle line:90%,end
<c.magenta>我们就返回过渡控制器</c>

00:40:26.727 --> 00:40:29.596 align:middle line:90%,end
<c.magenta>然后那个对象就会控制驱动动画</c>

00:40:29.663 --> 00:40:32.065 align:middle line:90%,end
<c.magenta>将视图控制器A改为视图控制器B</c>

00:40:32.966 --> 00:40:36.637 align:middle line:90%,end
<c.magenta>在本例中 视图控制器A就是</c>
<c.magenta>文档浏览器视图控制器</c>

00:40:37.070 --> 00:40:39.406 align:middle line:90%,end
<c.magenta>视图控制器B就是文档视图控制器</c>

00:40:40.607 --> 00:40:43.710 align:middle line:90%,end
<c.magenta>保刚才提到过</c>
<c.magenta>文档浏览器视图控制器</c>

00:40:43.777 --> 00:40:46.613 align:middle line:90%,end
<c.magenta>已经提供了这个过渡控制器</c>

00:40:47.014 --> 00:40:48.715 align:middle line:90%,end
<c.magenta>我们只需要保持引用</c>

00:40:48.982 --> 00:40:51.885 align:middle line:90%,end
<c.magenta>并将其回传给</c>
<c.magenta>UIKit要调用的函数即可</c>

00:40:57.291 --> 00:41:00.894 align:middle line:90%,end
<c.magenta>那么首先我们将自己注册为</c>

00:40:57.291 --> 00:41:00.894 align:middle line:90%,end
<c.magenta>那么首先我们将自己注册为</c>

00:41:00.961 --> 00:41:03.897 align:middle line:90%,end
<c.magenta>要呈现的文档视图</c>
<c.magenta>控制器的过渡委托</c>

00:41:07.134 --> 00:41:10.404 align:middle line:10%
<c.magenta>接下来我们要获取新的过渡控制器</c>

00:41:10.470 --> 00:41:14.041 align:middle line:90%,end
<c.magenta>通过给文档URL调用过渡控制器</c>

00:41:14.208 --> 00:41:16.310 align:middle line:90%,end
<c.magenta>在我们的UI文档浏览器</c>
<c.magenta>视图控制器上</c>

00:41:17.277 --> 00:41:20.814 align:middle line:90%,end
<c.magenta>现在这个对象并不需要很多配置</c>

00:41:21.048 --> 00:41:23.417 align:middle line:90%,end
<c.magenta>它真正需要的唯一一个东西</c>
<c.magenta>就是目标视图</c>

00:41:24.184 --> 00:41:26.720 align:middle line:90%,end
<c.magenta>目标视图是我们要实现动画的那一个</c>

00:41:26.787 --> 00:41:29.590 align:middle line:90%,end
<c.magenta>在本例中就是左侧的粒子系统</c>

00:41:32.125 --> 00:41:34.228 align:middle line:90%,end
<c.magenta>我们保持对刚通过变量</c>

00:41:34.294 --> 00:41:37.097 align:middle line:90%,end
<c.magenta>获取的过渡控制器的引用</c>

00:41:39.233 --> 00:41:42.102 align:middle line:90%,end
<c.magenta>现在我们需要做的最后一件事</c>
<c.magenta>就是实施</c>

00:41:42.469 --> 00:41:45.239 align:middle line:90%,end
<c.magenta>UI视图控制器过渡委托协议</c>

00:41:53.647 --> 00:41:55.582 align:middle line:90%,end
<c.magenta>因此 我们需要实施两个函数：</c>

00:41:55.649 --> 00:41:58.285 align:middle line:90%,end
<c.magenta>为presentedViewController</c>
<c.magenta>实施animationController</c>

00:41:58.752 --> 00:42:01.188 align:middle line:90%,end
<c.magenta>同时 因为我们想支持关闭文档</c>

00:41:58.752 --> 00:42:01.188 align:middle line:90%,end
<c.magenta>同时 因为我们想支持关闭文档</c>

00:42:01.355 --> 00:42:03.824 align:middle line:90%,end
<c.magenta>为dismissedViewController</c>
<c.magenta>实施animationController</c>

00:42:04.658 --> 00:42:07.861 align:middle line:90%,end
<c.magenta>在两个函数中</c>
<c.magenta>我们所要做的就是返回我们</c>

00:42:07.928 --> 00:42:09.096 align:middle line:90%,end
<c.magenta>刚获取的过渡控制器</c>

00:42:10.030 --> 00:42:11.465 align:middle line:90%,end
<c.magenta>让我们在模拟器中试一下</c>

00:42:23.043 --> 00:42:24.044 align:middle line:90%,end
<c.magenta>很漂亮 不是吗？</c>

00:42:24.111 --> 00:42:27.748 align:middle line:90%,end
<c.magenta>我们有一个从缩略图</c>
<c.magenta>到粒子系统的很好的过渡</c>

00:42:28.448 --> 00:42:30.717 align:middle line:90%,end
<c.magenta>当我们完成文件修改后</c>

00:42:30.918 --> 00:42:35.189 align:middle line:90%,end
<c.magenta>我们轻触完成按钮来结束文件</c>
<c.magenta>然后就漂亮地过渡回</c>

00:42:35.255 --> 00:42:37.257 align:middle line:90%,end
<c.magenta>UI文档浏览器视图控制器</c>

00:42:39.026 --> 00:42:41.028 align:middle line:90%,end
<c.magenta>那么这就是第二个演示的全部内容</c>

00:42:41.094 --> 00:42:43.330 align:middle line:90%,end
<c.magenta>让我们看一下我们目前所学到的内容</c>

00:42:47.868 --> 00:42:50.337 align:middle line:90%,end
<c.magenta>首先我们看了如何简便地</c>

00:42:50.404 --> 00:42:52.873 align:middle line:90%,end
<c.magenta>在你的应用中支持open-in-place</c>

00:42:53.173 --> 00:42:56.944 align:middle line:90%,end
<c.magenta>实际上UI文档浏览器视图控制器</c>
<c.magenta>会替你完成全部艰巨的任务</c>

00:42:58.512 --> 00:43:01.748 align:middle line:90%,end
<c.magenta>接下来我们实施了一个自定义行动</c>

00:42:58.512 --> 00:43:01.748 align:middle line:90%,end
<c.magenta>接下来我们实施了一个自定义行动</c>

00:43:01.949 --> 00:43:05.586 align:middle line:90%,end
<c.magenta>仅当你在文档浏览器视图控制器中</c>
<c.magenta>长按一个文档时执行</c>

00:43:07.421 --> 00:43:11.258 align:middle line:90%,end
<c.magenta>最后这点也很重要</c>
<c.magenta>我们极大地改善了用户体验</c>

00:43:11.325 --> 00:43:14.194 align:middle line:90%,end
<c.magenta>当打开和关闭文档时</c>

00:43:14.261 --> 00:43:15.863 align:middle line:90%,end
<c.magenta>通过实施自定义视图控制器过渡</c>

00:43:15.929 --> 00:43:18.465 align:middle line:90%,end
<c.magenta>使用UI文档浏览器过渡控制器</c>

00:43:19.900 --> 00:43:21.935 align:middle line:90%,end
<c.magenta>这就是第二个演示的全部内容</c>

00:43:22.302 --> 00:43:25.072 align:middle line:90%,end
<c.magenta>要了解关于快速预览相关的新功能</c>

00:43:25.138 --> 00:43:28.141 align:middle line:90%,end
<c.magenta>让我们把舞台交给</c>
<c.magenta>我的同事兼朋友马克西姆</c>

00:43:28.942 --> 00:43:29.843 align:middle line:90%,end
<c.magenta>马克西姆</c>

00:43:31.912 --> 00:43:32.946 align:middle line:90%,end
<c.magenta>谢谢 拉斐尔</c>

00:43:34.181 --> 00:43:35.449 align:middle line:90%,end
<c.magenta>大家下午好</c>

00:43:39.953 --> 00:43:43.156 align:middle line:90%,end
<c.magenta>我相信你们一定都见过文件应用中</c>
<c.magenta>很棒的缩略图功能吧</c>

00:43:43.857 --> 00:43:46.927 align:middle line:90%,end
<c.magenta>而且我相信你一定希望</c>
<c.magenta>你自己的缩略图</c>

00:43:46.994 --> 00:43:49.496 align:middle line:90%,end
<c.magenta>可以在任何基于</c>
<c.magenta>文档浏览器的应用中显示出来</c>

00:43:50.364 --> 00:43:51.465 align:middle line:90%,end
<c.magenta>现在你将会看到</c>

00:43:51.532 --> 00:43:54.201 align:middle line:90%,end
<c.magenta>这是如何变为可能的</c>
<c.magenta>全都归功于新的缩略图扩展</c>

00:43:56.069 --> 00:43:58.539 align:middle line:90%,end
<c.magenta>当前 如果我们是在本场演讲中</c>

00:43:58.605 --> 00:44:00.274 align:middle line:90%,end
<c.magenta>所创建的粒子应用的粉丝</c>

00:43:58.605 --> 00:44:00.274 align:middle line:90%,end
<c.magenta>所创建的粒子应用的粉丝</c>

00:44:00.908 --> 00:44:02.743 align:middle line:90%,end
<c.magenta>我们所能使用的都是通用图标</c>

00:44:04.011 --> 00:44:07.080 align:middle line:90%,end
<c.magenta>我们可以极大地改善用户体验</c>
<c.magenta>通过显示</c>

00:44:07.648 --> 00:44:11.818 align:middle line:90%,end
<c.magenta>能暗示用户文件内容的</c>
<c.magenta>代表性缩略图</c>

00:44:13.487 --> 00:44:15.155 align:middle line:90%,end
<c.magenta>那么如何提供已经被下载的</c>

00:44:15.322 --> 00:44:18.725 align:middle line:90%,end
<c.magenta>以及设备上可用的文件的缩略图呢？</c>

00:44:21.895 --> 00:44:25.199 align:middle line:90%,end
<c.magenta>这个功能在iOS 11之前就已经</c>
<c.magenta>通过UI文档实现了</c>

00:44:26.900 --> 00:44:29.937 align:middle line:90%,end
<c.magenta>你要做的就是创建UI文档的子类</c>

00:44:30.204 --> 00:44:32.206 align:middle line:90%,end
<c.magenta>并从子类中返回缩略图</c>

00:44:33.807 --> 00:44:36.476 align:middle line:90%,end
<c.magenta>这仅能用于通过你的应用创建的文件</c>

00:44:37.144 --> 00:44:40.314 align:middle line:90%,end
<c.magenta>并且它的性能很好</c>
<c.magenta>因为当iOS请求</c>

00:44:40.647 --> 00:44:44.084 align:middle line:90%,end
<c.magenta>缩略图的子类时</c>
<c.magenta>文件已经被加载出来了</c>

00:44:44.885 --> 00:44:46.553 align:middle line:90%,end
<c.magenta>让我们快速看一下代码</c>

00:44:47.354 --> 00:44:48.255 align:middle line:90%,end
<c.magenta>我们需要做的是…</c>

00:44:49.122 --> 00:44:52.626 align:middle line:90%,end
<c.magenta>…实施fileAttributesToWritetoURL</c>

00:44:52.693 --> 00:44:56.630 align:middle line:90%,end
<c.magenta>在你的UI文档子类中</c>
<c.magenta>为saveOperation方法</c>

00:44:56.697 --> 00:45:00.601 align:middle line:90%,end
<c.magenta>并从这个函数中返回一个缩略图字典</c>

00:44:56.697 --> 00:45:00.601 align:middle line:90%,end
<c.magenta>并从这个函数中返回一个缩略图字典</c>

00:45:03.237 --> 00:45:07.841 align:middle line:90%,end
<c.magenta>这很棒</c>
<c.magenta>但这只能用于通过应用创建的文件</c>

00:45:08.342 --> 00:45:10.844 align:middle line:90%,end
<c.magenta>那么你要如何为你的应用和其他应用</c>

00:45:10.911 --> 00:45:13.413 align:middle line:90%,end
<c.magenta>所创建的文件提供缩略图呢？</c>

00:45:15.315 --> 00:45:19.520 align:middle line:90%,end
<c.magenta>为此 我们要给大家提供一个</c>
<c.magenta>新的缩略图扩展 适用于整个系统</c>

00:45:19.820 --> 00:45:24.157 align:middle line:90%,end
<c.magenta>这意味着这个扩展…</c>

00:45:24.424 --> 00:45:30.564 align:middle line:90%,end
<c.magenta>意味着任何通过你的扩展</c>
<c.magenta>创建的缩略图都会显示</c>

00:45:30.631 --> 00:45:34.635 align:middle line:90%,end
<c.magenta>在可显示你的扩展</c>
<c.magenta>所能提供缩略图的文件的</c>

00:45:34.701 --> 00:45:36.970 align:middle line:90%,end
<c.magenta>任何基于文档浏览器的应用中显示</c>

00:45:38.539 --> 00:45:40.574 align:middle line:90%,end
<c.magenta>这个扩展可应用于全部云供应商</c>

00:45:41.708 --> 00:45:43.377 align:middle line:90%,end
<c.magenta>并且是快速预览框架的一部分</c>

00:45:45.212 --> 00:45:46.513 align:middle line:90%,end
<c.magenta>让我们看看是如何使用的</c>

00:45:46.947 --> 00:45:50.984 align:middle line:90%,end
<c.magenta>首先你的基于文档浏览器的应用</c>
<c.magenta>正在显示…</c>

00:45:51.051 --> 00:45:52.553 align:middle line:90%,end
<c.magenta>假如说基于文档浏览器的应用</c>

00:45:52.619 --> 00:45:54.488 align:middle line:90%,end
<c.magenta>正在显示一组文件</c>

00:45:55.055 --> 00:45:57.024 align:middle line:90%,end
<c.magenta>如果我们想显示这些文件的缩略图</c>

00:45:57.090 --> 00:46:00.894 align:middle line:90%,end
<c.magenta>并拥有一个良好的用户体验</c>
<c.magenta>那么就是快速预览缩略图</c>

00:45:57.090 --> 00:46:00.894 align:middle line:90%,end
<c.magenta>并拥有一个良好的用户体验</c>
<c.magenta>那么就是快速预览缩略图</c>

00:46:01.962 --> 00:46:05.065 align:middle line:90%,end
<c.magenta>快速预览 我们注意到其中某些文件</c>

00:46:05.132 --> 00:46:07.734 align:middle line:90%,end
<c.magenta>你的扩展可以提供缩略图</c>

00:46:07.801 --> 00:46:10.704 align:middle line:90%,end
<c.magenta>那么它就会将请求转给你的扩展</c>

00:46:12.539 --> 00:46:14.541 align:middle line:90%,end
<c.magenta>你的扩展将会生成缩略图</c>

00:46:15.742 --> 00:46:17.411 align:middle line:90%,end
<c.magenta>并将它们返回到快速预览</c>

00:46:17.911 --> 00:46:20.414 align:middle line:10%
<c.magenta>最终将其返回到</c>

00:46:20.480 --> 00:46:22.049 align:middle line:90%,end
<c.magenta>请求缩略图的应用中</c>

00:46:22.516 --> 00:46:24.184 align:middle line:90%,end
<c.magenta>然后进行显示</c>

00:46:25.586 --> 00:46:27.087 align:middle line:90%,end
<c.magenta>让我们看看该如何实现</c>

00:46:29.223 --> 00:46:30.891 align:middle line:90%,end
<c.magenta>实际上非常简单</c>

00:46:30.958 --> 00:46:33.560 align:middle line:90%,end
<c.magenta>因为我们在Xcode中</c>
<c.magenta>添加了一个新模板</c>

00:46:33.627 --> 00:46:36.630 align:middle line:90%,end
<c.magenta>包含示例代码以及Info.plist</c>

00:46:38.098 --> 00:46:39.900 align:middle line:90%,end
<c.magenta>在创建你的扩展之后</c>

00:46:40.367 --> 00:46:42.870 align:middle line:90%,end
<c.magenta>你需要前往Info.plist文件并编辑它</c>

00:46:43.437 --> 00:46:45.038 align:middle line:90%,end
<c.magenta>因此你要做的第一件事就是</c>

00:46:45.105 --> 00:46:48.075 align:middle line:90%,end
<c.magenta>添加你能提供缩略图的全部UTI</c>

00:46:48.141 --> 00:46:50.344 align:middle line:90%,end
<c.magenta>到QLSupportedContentTypes数组</c>

00:46:51.044 --> 00:46:54.982 align:middle line:90%,end
<c.magenta>请注意 你只能为你所拥有的UTI</c>
<c.magenta>提供和导出缩略图</c>

00:46:55.682 --> 00:46:59.319 align:middle line:90%,end
<c.magenta>并且iOS会检查UTI质量</c>
<c.magenta>而不是UTI一致性</c>

00:46:59.386 --> 00:47:04.758 align:middle line:90%,end
<c.magenta>因此 我们要确保列出</c>
<c.magenta>plist值内的全部UTI</c>

00:46:59.386 --> 00:47:04.758 align:middle line:90%,end
<c.magenta>因此 我们要确保列出</c>
<c.magenta>plist值内的全部UTI</c>

00:47:06.293 --> 00:47:08.829 align:middle line:90%,end
<c.magenta>现在要如何给文件提供缩略图呢？</c>

00:47:09.029 --> 00:47:09.897 align:middle line:90%,end
<c.magenta>有两种方式</c>

00:47:10.564 --> 00:47:14.168 align:middle line:90%,end
<c.magenta>你可以拖动缩略图</c>
<c.magenta>或返回图片文件URL</c>

00:47:14.701 --> 00:47:16.870 align:middle line:90%,end
<c.magenta>最强大的方法当然是第一个了</c>

00:47:16.937 --> 00:47:19.339 align:middle line:90%,end
<c.magenta>拖动缩略图</c>
<c.magenta>因为它是最灵活的一个方式</c>

00:47:19.840 --> 00:47:21.041 align:middle line:90%,end
<c.magenta>让我们看看是如何使用的</c>

00:47:23.911 --> 00:47:27.047 align:middle line:90%,end
<c.magenta>那么在这个扩展中</c>
<c.magenta>你需要实施的任何方法</c>

00:47:27.114 --> 00:47:31.351 align:middle line:90%,end
<c.magenta>都会收到QLFileThumbnailRequest</c>
<c.magenta>类的一个参数</c>

00:47:31.418 --> 00:47:33.520 align:middle line:90%,end
<c.magenta>包含三个属性</c>

00:47:34.388 --> 00:47:37.658 align:middle line:90%,end
<c.magenta>文件URL 就是我们</c>
<c.magenta>要发送文件的文件URL</c>

00:47:38.058 --> 00:47:42.462 align:middle line:90%,end
<c.magenta>所请求的缩略图的最大尺寸</c>
<c.magenta>以及比例</c>

00:47:44.665 --> 00:47:48.035 align:middle line:90%,end
<c.magenta>我们要做的就是</c>
<c.magenta>返回一个QLThumbnailReply对象</c>

00:47:48.101 --> 00:47:51.338 align:middle line:90%,end
<c.magenta>包含绘板和contextSize</c>

00:47:51.605 --> 00:47:53.907 align:middle line:90%,end
<c.magenta>让我们看看为何需要返回contextSize</c>

00:47:56.076 --> 00:47:58.412 align:middle line:10%
<c.magenta>请求的最大尺寸参数</c>

00:47:59.079 --> 00:48:02.382 align:middle line:10%
<c.magenta>表明了你可以绘制缩略图的</c>

00:47:59.079 --> 00:48:02.382 align:middle line:10%
<c.magenta>表明了你可以绘制缩略图的</c>

00:48:02.449 --> 00:48:03.984 align:middle line:10%
<c.magenta>CGContext的最大尺寸</c>

00:48:05.219 --> 00:48:09.623 align:middle line:10%
<c.magenta>现在假如我们想把这个图片</c>
<c.magenta>拖到我们的环境中</c>

00:48:09.690 --> 00:48:13.827 align:middle line:10%
<c.magenta>你可以看到 当处于全尺寸中时</c>
<c.magenta>它比环境的最大尺寸还要大</c>

00:48:13.894 --> 00:48:17.531 align:middle line:10%
<c.magenta>所以我们需要缩小一点儿</c>

00:48:18.098 --> 00:48:22.135 align:middle line:10%
<c.magenta>确保它能放到CGContext里面</c>

00:48:22.402 --> 00:48:26.640 align:middle line:10%
<c.magenta>但如果我们把这个图片</c>
<c.magenta>加载到左侧的环境中</c>

00:48:26.974 --> 00:48:31.445 align:middle line:10%
<c.magenta>我们就需要返回一个带有</c>
<c.magenta>未使用过的透明像素的缩略图</c>

00:48:31.512 --> 00:48:33.947 align:middle line:90%,end
<c.magenta>意思是一个浮动缩略图</c>
<c.magenta>这并不是我们想要的</c>

00:48:34.781 --> 00:48:38.619 align:middle line:90%,end
<c.magenta>所以我们得决定要绘制</c>

00:48:38.685 --> 00:48:41.221 align:middle line:90%,end
<c.magenta>和传给QLThumbnailReply的</c>
<c.magenta>正确环境尺寸</c>

00:48:42.055 --> 00:48:46.693 align:middle line:10%
<c.magenta>得益于此 我们的绘板会收到</c>
<c.magenta>与所请求的尺寸</c>

00:48:47.828 --> 00:48:51.298 align:middle line:10%
<c.magenta>contextSize正确匹配的CGContext</c>

00:48:51.899 --> 00:48:55.002 align:middle line:10%
<c.magenta>并且我们可以</c>
<c.magenta>按我们所想绘制缩略图</c>

00:48:57.070 --> 00:48:59.206 align:middle line:90%,end
<c.magenta>现在如果你不想绘制缩略图</c>

00:48:59.273 --> 00:49:03.477 align:middle line:90%,end
<c.magenta>而是倾向于返回一个图片文件URL</c>

00:48:59.273 --> 00:49:03.477 align:middle line:90%,end
<c.magenta>而是倾向于返回一个图片文件URL</c>

00:49:04.044 --> 00:49:05.245 align:middle line:90%,end
<c.magenta>也非常简单</c>

00:49:07.047 --> 00:49:09.349 align:middle line:90%,end
<c.magenta>你会收到同一个</c>
<c.magenta>QLFileThumbnailRequest</c>

00:49:09.983 --> 00:49:12.252 align:middle line:90%,end
<c.magenta>并且你所需要返回的就是一个</c>

00:49:12.319 --> 00:49:14.121 align:middle line:90%,end
<c.magenta>包含图片文件URL的</c>
<c.magenta>QLThumbnailReply</c>

00:49:14.288 --> 00:49:15.389 align:middle line:90%,end
<c.magenta>在这种情况下</c>

00:49:15.455 --> 00:49:18.258 align:middle line:90%,end
<c.magenta>快速预览将会自己决定</c>

00:49:18.325 --> 00:49:20.827 align:middle line:90%,end
<c.magenta>缩小或放大缩略图</c>

00:49:20.894 --> 00:49:23.063 align:middle line:90%,end
<c.magenta>它会保持文件的长宽比</c>

00:49:23.330 --> 00:49:25.165 align:middle line:90%,end
<c.magenta>从而使缩略图看起来效果不错</c>

00:49:27.701 --> 00:49:30.070 align:middle line:90%,end
<c.magenta>现在让我们看一下这部分的代码</c>

00:49:31.071 --> 00:49:34.007 align:middle line:90%,end
<c.magenta>你需要实施的唯一一个方法叫作</c>

00:49:34.074 --> 00:49:37.144 align:middle line:90%,end
<c.magenta>provideThumbnailForRequestHandler</c>

00:49:40.881 --> 00:49:43.650 align:middle line:90%,end
<c.magenta>在这个例子中</c>
<c.magenta>我们要做的第一件事就是提取</c>

00:49:43.717 --> 00:49:46.920 align:middle line:90%,end
<c.magenta>QLFileThumbnailRequest的全部参数</c>

00:49:47.387 --> 00:49:51.758 align:middle line:90%,end
<c.magenta>意思是文件URL、最大尺寸和比例</c>

00:49:52.726 --> 00:49:56.930 align:middle line:90%,end
<c.magenta>除了这些参数</c>
<c.magenta>我们还要决定环境尺寸</c>

00:49:56.997 --> 00:50:00.367 align:middle line:90%,end
<c.magenta>我们绘制缩略图的环境 就像我们</c>
<c.magenta>在刚才的例子中看到过的一样</c>

00:49:56.997 --> 00:50:00.367 align:middle line:90%,end
<c.magenta>我们绘制缩略图的环境 就像我们</c>
<c.magenta>在刚才的例子中看到过的一样</c>

00:50:03.270 --> 00:50:08.275 align:middle line:10%
<c.magenta>之后正如我们所说过的</c>
<c.magenta>我们需要提供一个绘板</c>

00:50:09.109 --> 00:50:11.979 align:middle line:10%
<c.magenta>那么在这里 我们创建一个绘板</c>
<c.magenta>并在绘板内</c>

00:50:12.045 --> 00:50:13.881 align:middle line:10%
<c.magenta>绘制缩略图</c>

00:50:14.248 --> 00:50:17.584 align:middle line:10%
<c.magenta>因此 绘板需要返回一个成功值来向</c>

00:50:17.651 --> 00:50:21.755 align:middle line:10%
<c.magenta>快速预览表明 无论是或否</c>
<c.magenta>它实际上可以提供缩略图</c>

00:50:23.223 --> 00:50:24.858 align:middle line:10%
<c.magenta>最后我们创建QLThumbnailReply</c>

00:50:24.925 --> 00:50:28.128 align:middle line:10%
<c.magenta>在contextSize和绘板之外</c>

00:50:28.195 --> 00:50:31.331 align:middle line:10%
<c.magenta>并且用我们的回复以及</c>

00:50:31.398 --> 00:50:34.835 align:middle line:10%
<c.magenta>一个NSR参数</c>
<c.magenta>调用completionHandler</c>

00:50:35.369 --> 00:50:37.871 align:middle line:10%
<c.magenta>在这里 我们传递无 因为我们总是</c>
<c.magenta>希望提供一个缩略图</c>

00:50:37.938 --> 00:50:42.042 align:middle line:10%
<c.magenta>但如果由于某些原因你不想总是</c>
<c.magenta>返回全部请求的缩略图</c>

00:50:42.109 --> 00:50:45.245 align:middle line:10%
<c.magenta>你可以提供一个NS报错</c>

00:50:45.679 --> 00:50:49.316 align:middle line:10%
<c.magenta>来快速表明你不希望为此请求</c>
<c.magenta>提供缩略图</c>

00:50:51.652 --> 00:50:53.921 align:middle line:10%
<c.magenta>如果你想返回一个图片文件URL</c>

00:50:53.987 --> 00:50:58.325 align:middle line:10%
<c.magenta>而不是绘制一个缩略图文件请求</c>

00:50:58.725 --> 00:51:01.929 align:middle line:90%,end
<c.magenta>你可以实施同样的方法</c>
<c.magenta>但需要调用的是completionHandler</c>

00:50:58.725 --> 00:51:01.929 align:middle line:90%,end
<c.magenta>你可以实施同样的方法</c>
<c.magenta>但需要调用的是completionHandler</c>

00:51:01.995 --> 00:51:05.132 align:middle line:90%,end
<c.magenta>用一个包含图片文件URL的</c>
<c.magenta>QLThumbnailReply</c>

00:51:05.666 --> 00:51:09.503 align:middle line:90%,end
<c.magenta>在这个简单的例子中 我们只返回了</c>
<c.magenta>来自我们主供应商的图片</c>

00:51:13.106 --> 00:51:14.741 align:middle line:90%,end
<c.magenta>在创建扩展后</c>

00:51:14.808 --> 00:51:18.078 align:middle line:90%,end
<c.magenta>你当然希望能看到漂亮的新缩略图了</c>

00:51:18.912 --> 00:51:23.483 align:middle line:90%,end
<c.magenta>你可以在任何显示你文件的基于文档</c>
<c.magenta>浏览器的应用中进行查看</c>

00:51:23.884 --> 00:51:26.320 align:middle line:90%,end
<c.magenta>那么在这里 我们可以从截图中看到</c>

00:51:26.720 --> 00:51:31.158 align:middle line:90%,end
<c.magenta>缩略图来自扩展…</c>

00:51:31.225 --> 00:51:33.694 align:middle line:90%,end
<c.magenta>粒子应用的扩展</c>

00:51:34.461 --> 00:51:38.298 align:middle line:90%,end
<c.magenta>但我们处于文件应用的最近列表内部</c>
<c.magenta>但我们仍能看到它们</c>

00:51:42.135 --> 00:51:46.206 align:middle line:90%,end
<c.magenta>你现在了解如何创建很棒的</c>
<c.magenta>基于文档的应用了吧</c>

00:51:46.273 --> 00:51:49.209 align:middle line:90%,end
<c.magenta>通过UI文档浏览器视图控制器</c>

00:51:49.276 --> 00:51:50.677 align:middle line:90%,end
<c.magenta>和缩略图扩展</c>

00:51:51.178 --> 00:51:53.947 align:middle line:90%,end
<c.magenta>那么要如何进一步改善用户体验呢？</c>

00:51:54.915 --> 00:52:00.020 align:middle line:90%,end
<c.magenta>如果你导出自定义UTI</c>
<c.magenta>你很可能希望能提供预览</c>

00:51:54.915 --> 00:52:00.020 align:middle line:90%,end
<c.magenta>如果你导出自定义UTI</c>
<c.magenta>你很可能希望能提供预览</c>

00:52:00.087 --> 00:52:04.057 align:middle line:90%,end
<c.magenta>iOS可以在任何应用中显示</c>

00:52:05.459 --> 00:52:07.628 align:middle line:90%,end
<c.magenta>我们现在看这个是如何实现的</c>

00:52:07.694 --> 00:52:09.596 align:middle line:90%,end
<c.magenta>通过新的快速浏览预览扩展</c>

00:52:12.633 --> 00:52:17.905 align:middle line:90%,end
<c.magenta>默认情况下</c>
<c.magenta>快速预览仅支持有限的文件类型</c>

00:52:18.539 --> 00:52:23.210 align:middle line:90%,end
<c.magenta>意思是默认情况下快速预览不会</c>
<c.magenta>预览你的自定义文件类型</c>

00:52:24.111 --> 00:52:28.949 align:middle line:90%,end
<c.magenta>但我有个好消息</c>
<c.magenta>因为从iOS 11开始</c>

00:52:30.284 --> 00:52:32.386 align:middle line:90%,end
<c.magenta>你将可以向快速预览提供预览</c>

00:52:32.953 --> 00:52:36.223 align:middle line:90%,end
<c.magenta>并扩展快速预览的功能</c>

00:52:36.857 --> 00:52:38.792 align:middle line:90%,end
<c.magenta>因为我们将向第三方开放快速预览</c>

00:52:40.894 --> 00:52:45.832 align:middle line:90%,end
<c.magenta>我们要把快速预览开放给第三方</c>
<c.magenta>所以当你预览扩展时</c>

00:52:46.433 --> 00:52:47.734 align:middle line:90%,end
<c.magenta>将是系统范围内的</c>

00:52:47.801 --> 00:52:51.138 align:middle line:90%,end
<c.magenta>意思是任何使用快速预览的应用</c>

00:52:51.205 --> 00:52:53.240 align:middle line:90%,end
<c.magenta>都将能显示你的预览</c>

00:52:53.440 --> 00:52:57.511 align:middle line:90%,end
<c.magenta>并且你还可以决定提供由你的应用</c>

00:52:57.578 --> 00:52:58.812 align:middle line:90%,end
<c.magenta>进行索引的Spotlight项预览</c>

00:52:59.246 --> 00:53:03.483 align:middle line:90%,end
<c.magenta>这些预览将会可见</c>
<c.magenta>当你在支持[听不清]的iPhone上</c>

00:52:59.246 --> 00:53:03.483 align:middle line:90%,end
<c.magenta>这些预览将会可见</c>
<c.magenta>当你在支持[听不清]的iPhone上</c>

00:53:03.550 --> 00:53:05.485 align:middle line:90%,end
<c.magenta>瞥一眼Spotlight结果时</c>

00:53:06.987 --> 00:53:11.158 align:middle line:90%,end
<c.magenta>你的预览在快速预览中</c>
<c.magenta>将会享受一等待遇</c>

00:53:11.758 --> 00:53:14.161 align:middle line:90%,end
<c.magenta>它们将得益于完整的快速预览体验</c>

00:53:14.494 --> 00:53:17.264 align:middle line:90%,end
<c.magenta>并作为QL预览控制器的一部分</c>
<c.magenta>进行预览</c>

00:53:17.331 --> 00:53:19.399 align:middle line:90%,end
<c.magenta>就像在预览中创建的其它结果一样</c>

00:53:20.501 --> 00:53:22.636 align:middle line:90%,end
<c.magenta>快速预览将会获取显示加载指示器</c>

00:53:22.703 --> 00:53:25.339 align:middle line:90%,end
<c.magenta>当等待你的扩展返回预览时</c>

00:53:25.772 --> 00:53:26.773 align:middle line:90%,end
<c.magenta>让我们看一下流程</c>

00:53:27.374 --> 00:53:33.514 align:middle line:90%,end
<c.magenta>首先快速预览注意到</c>
<c.magenta>它不能自己预览文件</c>

00:53:33.580 --> 00:53:35.415 align:middle line:90%,end
<c.magenta>但它会请求扩展预览</c>

00:53:35.949 --> 00:53:38.619 align:middle line:90%,end
<c.magenta>你的扩展将会花一点时间生成预览</c>

00:53:39.786 --> 00:53:42.022 align:middle line:90%,end
<c.magenta>同时快速预览显示一个加载指示器</c>

00:53:42.389 --> 00:53:43.991 align:middle line:90%,end
<c.magenta>你不需要处理这个</c>

00:53:44.825 --> 00:53:48.328 align:middle line:90%,end
<c.magenta>当你的扩展准备显示预览时</c>

00:53:48.395 --> 00:53:50.631 align:middle line:90%,end
<c.magenta>你需要在代码中</c>
<c.magenta>调用completionHandler</c>

00:53:50.697 --> 00:53:54.968 align:middle line:90%,end
<c.magenta>以便通知快速预览可以显示预览了</c>

00:53:56.570 --> 00:53:59.740 align:middle line:90%,end
<c.magenta>跟缩略图扩展相似</c>
<c.magenta>你可以很简单地上手</c>

00:53:59.907 --> 00:54:02.176 align:middle line:90%,end
<c.magenta>因为我们为你准备了一个新模板</c>

00:53:59.907 --> 00:54:02.176 align:middle line:90%,end
<c.magenta>因为我们为你准备了一个新模板</c>

00:54:02.242 --> 00:54:05.812 align:middle line:90%,end
<c.magenta>包含一些示例代码、一个storybook</c>
<c.magenta>还有一个Info.plist</c>

00:54:08.215 --> 00:54:11.084 align:middle line:90%,end
<c.magenta>创建扩展之后 你想把它放在</c>

00:54:11.151 --> 00:54:15.622 align:middle line:90%,end
<c.magenta>这个Info.plist中并编辑它</c>
<c.magenta>添加你能支持的全部UTI…</c>

00:54:16.023 --> 00:54:20.027 align:middle line:90%,end
<c.magenta>抱歉 向QLSupportedContentTypes</c>
<c.magenta>数组中添加你所支持的全部UTI</c>

00:54:20.994 --> 00:54:24.298 align:middle line:90%,end
<c.magenta>与缩略图扩展不同</c>
<c.magenta>缩略图扩展只能</c>

00:54:24.364 --> 00:54:26.800 align:middle line:90%,end
<c.magenta>提供你自己拥有的</c>
<c.magenta>预览的图片并在此导入</c>

00:54:28.101 --> 00:54:31.538 align:middle line:90%,end
<c.magenta>iOS会检查UTI质量</c>
<c.magenta>而不是UTI一致性</c>

00:54:32.706 --> 00:54:35.609 align:middle line:90%,end
<c.magenta>如果你想为由你的应用</c>

00:54:35.943 --> 00:54:38.412 align:middle line:90%,end
<c.magenta>表明的Spotlight项提供预览</c>

00:54:38.478 --> 00:54:42.649 align:middle line:90%,end
<c.magenta>你需要把QLSupportsSearchableItems</c>
<c.magenta>的键值设为是</c>

00:54:44.184 --> 00:54:48.055 align:middle line:90%,end
<c.magenta>现在让我们快速看一下代码</c>

00:54:48.255 --> 00:54:49.990 align:middle line:90%,end
<c.magenta>如果你想为文件提供预览</c>

00:54:51.225 --> 00:54:54.027 align:middle line:90%,end
<c.magenta>你需要实施preparePreviewOfFile</c>

00:54:54.194 --> 00:54:56.430 align:middle line:90%,end
<c.magenta>在URL completionHandler方法中</c>

00:54:57.431 --> 00:55:01.335 align:middle line:90%,end
<c.magenta>而你所需要做的就是</c>
<c.magenta>加载文件并调用completionHandler</c>

00:54:57.431 --> 00:55:01.335 align:middle line:90%,end
<c.magenta>而你所需要做的就是</c>
<c.magenta>加载文件并调用completionHandler</c>

00:55:01.401 --> 00:55:03.971 align:middle line:90%,end
<c.magenta>从而使快速预览显示你的预览</c>

00:55:04.905 --> 00:55:07.007 align:middle line:90%,end
<c.magenta>你可以异步调用completionHandler</c>

00:55:07.074 --> 00:55:09.109 align:middle line:90%,end
<c.magenta>这正适合本例中的情况</c>

00:55:11.078 --> 00:55:14.581 align:middle line:90%,end
<c.magenta>如果你想提供Spotlight预览</c>
<c.magenta>你需要实施</c>

00:55:14.648 --> 00:55:18.619 align:middle line:90%,end
<c.magenta>preparePreviewOfSearchableItems</c>
<c.magenta>identifier queryString</c>

00:55:18.685 --> 00:55:20.153 align:middle line:90%,end
<c.magenta>completionHandler方法</c>

00:55:20.487 --> 00:55:23.123 align:middle line:90%,end
<c.magenta>queryString参数可以用于</c>

00:55:23.190 --> 00:55:25.626 align:middle line:90%,end
<c.magenta>突出显示预览中的任意部分</c>

00:55:25.792 --> 00:55:29.263 align:middle line:90%,end
<c.magenta>这是用户在Spotlight中</c>
<c.magenta>输入的queryString</c>

00:55:29.329 --> 00:55:33.834 align:middle line:90%,end
<c.magenta>在与你的应用索引的项交互之前</c>

00:55:35.235 --> 00:55:39.606 align:middle line:90%,end
<c.magenta>跟文件示例中一样</c>

00:55:39.806 --> 00:55:42.075 align:middle line:90%,end
<c.magenta>你所要做的就是准备好你的控制器</c>

00:55:42.142 --> 00:55:43.577 align:middle line:90%,end
<c.magenta>并调用completionHandler</c>

00:55:46.280 --> 00:55:49.449 align:middle line:90%,end
<c.magenta>你可以在使用快速预览的</c>
<c.magenta>任意应用中测试你的预览</c>

00:55:49.516 --> 00:55:52.519 align:middle line:90%,end
<c.magenta>比如邮箱或信息</c>

00:55:52.986 --> 00:55:55.322 align:middle line:90%,end
<c.magenta>或在Spotlight中</c>
<c.magenta>如果你支持Spotlight预览的话</c>

00:55:55.389 --> 00:55:57.257 align:middle line:90%,end
<c.magenta>这正是本例中的情况</c>

00:55:57.524 --> 00:56:00.794 align:middle line:90%,end
<c.magenta>在这里 我们窥视了一下</c>
<c.magenta>粒子应用提供的结果</c>

00:55:57.524 --> 00:56:00.794 align:middle line:90%,end
<c.magenta>在这里 我们窥视了一下</c>
<c.magenta>粒子应用提供的结果</c>

00:56:05.599 --> 00:56:09.303 align:middle line:90%,end
<c.magenta>我希望用一些性能建议</c>
<c.magenta>来结束本场演讲</c>

00:56:09.870 --> 00:56:13.006 align:middle line:90%,end
<c.magenta>当处理扩展时 你要一直确保快速</c>

00:56:13.073 --> 00:56:14.775 align:middle line:90%,end
<c.magenta>那么在本例中 这是非常重要的</c>

00:56:15.576 --> 00:56:17.344 align:middle line:90%,end
<c.magenta>你必须迅速绘制缩略图</c>

00:56:17.411 --> 00:56:19.046 align:middle line:90%,end
<c.magenta>考虑一下…</c>

00:56:20.180 --> 00:56:26.153 align:middle line:90%,end
<c.magenta>考虑一下 比如说用户</c>
<c.magenta>使用了文档浏览器</c>

00:56:26.220 --> 00:56:28.956 align:middle line:90%,end
<c.magenta>你希望能尽可能快地显示</c>
<c.magenta>你的缩略图</c>

00:56:29.022 --> 00:56:30.357 align:middle line:90%,end
<c.magenta>从而获得一个良好的用户体验</c>

00:56:31.024 --> 00:56:33.961 align:middle line:90%,end
<c.magenta>对于快速浏览预览 你还要确保</c>

00:56:34.394 --> 00:56:38.098 align:middle line:90%,end
<c.magenta>迅速加载预览</c>
<c.magenta>因为快速预览必须得快</c>

00:56:39.700 --> 00:56:42.803 align:middle line:90%,end
<c.magenta>同时请注意</c>
<c.magenta>你不应该实施任何后台任务</c>

00:56:42.870 --> 00:56:44.638 align:middle line:90%,end
<c.magenta>在调用completionHandler之后</c>

00:56:46.406 --> 00:56:49.176 align:middle line:90%,end
<c.magenta>请谨记 因为扩展内容非常有限</c>

00:56:50.377 --> 00:56:54.248 align:middle line:90%,end
<c.magenta>因此请避免连接两个大型库</c>
<c.magenta>并检查遗漏</c>

00:56:55.649 --> 00:56:58.519 align:middle line:90%,end
<c.magenta>现在让我们迅速回顾一下</c>
<c.magenta>我们今天所谈到的东西</c>

00:56:59.786 --> 00:57:03.824 align:middle line:90%,end
<c.magenta>首先我们谈了一些文档浏览器API</c>

00:56:59.786 --> 00:57:03.824 align:middle line:90%,end
<c.magenta>首先我们谈了一些文档浏览器API</c>

00:57:04.291 --> 00:57:05.359 align:middle line:90%,end
<c.magenta>API</c>

00:57:05.692 --> 00:57:08.095 align:middle line:90%,end
<c.magenta>我们主要讲了UI文档</c>
<c.magenta>浏览器视图控制器</c>

00:57:08.161 --> 00:57:09.463 align:middle line:90%,end
<c.magenta>以及如何利用它</c>

00:57:10.497 --> 00:57:13.400 align:middle line:90%,end
<c.magenta>来创建一个了不起的基于文档的应用</c>

00:57:13.967 --> 00:57:16.503 align:middle line:90%,end
<c.magenta>你了解了它的基本功能和高级功能</c>

00:57:17.471 --> 00:57:22.776 align:middle line:90%,end
<c.magenta>然后我们看了如何在iOS 11中</c>
<c.magenta>自定义享受一等待遇的文件标签</c>

00:57:22.843 --> 00:57:27.314 align:middle line:90%,end
<c.magenta>这都归功于新的缩略图</c>
<c.magenta>和快速浏览预览扩展</c>

00:57:28.615 --> 00:57:33.320 align:middle line:90%,end
<c.magenta>现在让我们再看一下在过去的两年中</c>
<c.magenta>我们所收到你们的请求</c>

00:57:33.587 --> 00:57:36.456 align:middle line:90%,end
<c.magenta>看我们是如何处理它们的</c>

00:57:37.090 --> 00:57:38.825 align:middle line:90%,end
<c.magenta>那么这就是我们今天谈到的全部内容</c>

00:57:40.694 --> 00:57:42.362 align:middle line:90%,end
<c.magenta>UI文档浏览器视图控制器</c>

00:57:42.696 --> 00:57:45.032 align:middle line:90%,end
<c.magenta>给你提供了一个</c>
<c.magenta>统一的UI用于文件浏览</c>

00:57:46.900 --> 00:57:49.102 align:middle line:90%,end
<c.magenta>新的本地存储和iCloud共享</c>

00:57:49.169 --> 00:57:53.240 align:middle line:90%,end
<c.magenta>提供了一个以安全方式</c>
<c.magenta>从其他应用中获取文件的方式</c>

00:57:55.843 --> 00:57:58.912 align:middle line:90%,end
<c.magenta>新的文件共享扩展</c>
<c.magenta>允许你流畅地获取</c>

00:57:58.979 --> 00:58:00.480 align:middle line:90%,end
<c.magenta>其它云共享</c>

00:57:58.979 --> 00:58:00.480 align:middle line:90%,end
<c.magenta>其它云共享</c>

00:58:01.815 --> 00:58:05.452 align:middle line:90%,end
<c.magenta>现在iOS可以深度整合</c>
<c.magenta>自定义文件类型</c>

00:58:08.222 --> 00:58:11.425 align:middle line:90%,end
<c.magenta>照例 如果你希望获得关于</c>
<c.magenta>本场演讲的更多信息</c>

00:58:11.491 --> 00:58:14.127 align:middle line:90%,end
<c.magenta>请访问Apple的官网</c>

00:58:15.462 --> 00:58:17.831 align:middle line:90%,end
<c.magenta>我们邀请你观看如下这些相关演讲：</c>

00:58:17.898 --> 00:58:23.504 align:middle line:90%,end
<c.magenta>本周稍早些的“拖放”演讲</c>
<c.magenta>和即将到来的</c>

00:58:23.704 --> 00:58:26.006 align:middle line:90%,end
<c.magenta>iOS和macOS中</c>
<c.magenta>“Core Spotlight新特性”</c>

00:58:26.073 --> 00:58:28.041 align:middle line:90%,end
<c.magenta>以及“文件共享增强功能”演讲</c>

00:58:28.642 --> 00:58:34.515 align:middle line:90%,end
<c.magenta>你还可以参考2017年发布的</c>
<c.magenta>“创建基于文档的应用”</c>

00:58:35.682 --> 00:58:38.919 align:middle line:90%,end
<c.magenta>感谢大家的参与 再一次希望大家</c>
<c.magenta>度过一个美好的WWDC</c>

00:58:39.319 --> 00:58:40.254 align:middle line:90%,end
<c.magenta>再见</c>
