WEBVTT

00:00:06.516 --> 00:00:16.500 A:middle
[ 掌声 ]

00:00:25.796 --> 00:00:27.616 A:middle
&gt;&gt; 欢迎大家

00:00:27.616 --> 00:00:29.046 A:middle
感谢你们参加本次会议

00:00:29.996 --> 00:00:31.276 A:middle
我叫 Athar Shah

00:00:31.276 --> 00:00:33.016 A:middle
是 Apple Core Media 软件团队的

00:00:33.016 --> 00:00:34.356 A:middle
一名经理

00:00:34.356 --> 00:00:36.336 A:middle
今天 Apple

00:00:36.336 --> 00:00:37.756 A:middle
很高兴与你们

00:00:37.756 --> 00:00:39.456 A:middle
谈谈两项

00:00:39.456 --> 00:00:40.216 A:middle
全新的媒体技术

00:00:41.226 --> 00:00:42.386 A:middle
具体而言 我们将讨论一个全新的

00:00:42.386 --> 00:00:44.816 A:middle
针对视频和图像压缩的

00:00:44.816 --> 00:00:46.266 A:middle
编解码器 叫做 HEVC

00:00:46.826 --> 00:00:50.076 A:middle
和一个我们即将采用的

00:00:50.076 --> 00:00:51.646 A:middle
图像文件格式

00:00:52.186 --> 00:00:52.866 A:middle
叫做 HEIF

00:00:54.206 --> 00:00:55.276 A:middle
但在我们了解

00:00:55.276 --> 00:00:57.566 A:middle
更多细节之前

00:00:57.806 --> 00:00:59.666 A:middle
如果你已经下载了开发者预览版

00:00:59.696 --> 00:01:01.566 A:middle
的最新构建版本

00:00:59.696 --> 00:01:01.566 A:middle
的最新构建版本

00:01:01.606 --> 00:01:03.956 A:middle
那么在一些特定的 iOS 设备上

00:01:03.956 --> 00:01:06.226 A:middle
你已经获得并使用了

00:01:06.226 --> 00:01:08.056 A:middle
这些新的技术和文件格式

00:01:08.836 --> 00:01:10.356 A:middle
如果你足够细心

00:01:10.356 --> 00:01:13.036 A:middle
你就会发现

00:01:13.036 --> 00:01:15.036 A:middle
这些文件比之前

00:01:15.036 --> 00:01:15.916 A:middle
小了很多

00:01:16.026 --> 00:01:17.596 A:middle
在接下来的介绍中

00:01:17.596 --> 00:01:18.886 A:middle
Gavin 会与你们讨论

00:01:18.886 --> 00:01:22.406 A:middle
我们平台的一些细节

00:01:22.406 --> 00:01:23.916 A:middle
以及我们是如何

00:01:23.916 --> 00:01:25.636 A:middle
在硬件和软件中

00:01:25.636 --> 00:01:26.196 A:middle
支持这些技术的

00:01:29.756 --> 00:01:32.106 A:middle
我们首先会讨论

00:01:32.976 --> 00:01:34.516 A:middle
目前媒体技术的概况

00:01:34.576 --> 00:01:36.406 A:middle
和我们需要改变的原因

00:01:36.896 --> 00:01:38.956 A:middle
然后我们会讨论

00:01:38.956 --> 00:01:41.716 A:middle
HEVC 和 HEIF 分别是什么

00:01:41.716 --> 00:01:43.036 A:middle
以及为什么 Apple 决定采用它们

00:01:43.476 --> 00:01:45.676 A:middle
最后，我们会简单介绍一下

00:01:45.676 --> 00:01:48.506 A:middle
我们是如何在 Apple 生态系统中

00:01:48.506 --> 00:01:49.696 A:middle
应用这些技术的

00:01:49.696 --> 00:01:52.216 A:middle
并且指导你

00:01:52.396 --> 00:01:54.006 A:middle
如何在你的 App 中

00:01:54.006 --> 00:01:55.286 A:middle
针对你的使用情况

00:01:55.366 --> 00:01:57.176 A:middle
充分利用

00:01:57.176 --> 00:01:57.556 A:middle
这些技术

00:02:01.236 --> 00:02:03.356 A:middle
我们首先来谈谈目前媒体的格局

00:02:04.046 --> 00:02:06.546 A:middle
我们的世界正在变得

00:02:06.546 --> 00:02:07.396 A:middle
越来越可视化

00:02:07.846 --> 00:02:10.406 A:middle
顾客和制作商

00:02:10.586 --> 00:02:12.836 A:middle
都在生成越来越多的视频

00:02:13.336 --> 00:02:15.116 A:middle
和多媒体内容

00:02:15.996 --> 00:02:17.966 A:middle
不仅如此 现在的多媒体内容

00:02:18.026 --> 00:02:20.176 A:middle
正在以各种全新的形式呈现

00:02:20.176 --> 00:02:23.926 A:middle
如高分辨率 4K 视频  HDR 视频

00:02:24.246 --> 00:02:26.346 A:middle
或广色域视频

00:02:26.346 --> 00:02:26.936 A:middle
等等

00:02:28.336 --> 00:02:29.686 A:middle
媒体的性质也

00:02:29.686 --> 00:02:32.966 A:middle
正在改变 比如

00:02:32.966 --> 00:02:34.096 A:middle
我们最爱的 Live Photo

00:02:34.096 --> 00:02:35.396 A:middle
还有很多

00:02:35.396 --> 00:02:36.806 A:middle
别的形式如

00:02:36.806 --> 00:02:38.436 A:middle
短视频等等

00:02:39.436 --> 00:02:41.156 A:middle
带宽依旧处于

00:02:41.156 --> 00:02:41.786 A:middle
非常重要的地位

00:02:42.046 --> 00:02:43.836 A:middle
在一些特定的应用程序

00:02:43.876 --> 00:02:45.726 A:middle
和使用情景中

00:02:45.726 --> 00:02:48.146 A:middle
如 OTT 视频交付和无线网络

00:02:49.016 --> 00:02:50.556 A:middle
对带宽的要求

00:02:50.556 --> 00:02:51.106 A:middle
非常高

00:02:51.106 --> 00:02:53.016 A:middle
降低带宽要求

00:02:53.016 --> 00:02:54.086 A:middle
会显著地

00:02:54.086 --> 00:02:55.236 A:middle
改善这些

00:02:55.236 --> 00:02:55.726 A:middle
使用情景

00:02:57.166 --> 00:03:00.236 A:middle
我们已经使用 H.264 和 JPEG

00:02:57.166 --> 00:03:00.236 A:middle
我们已经使用 H.264 和 JPEG

00:03:00.236 --> 00:03:01.506 A:middle
有一段时间了

00:03:01.916 --> 00:03:03.406 A:middle
这些编解码器

00:03:03.506 --> 00:03:06.246 A:middle
在迅速演变的格局中

00:03:06.246 --> 00:03:07.376 A:middle
面对着这些新的挑战

00:03:07.376 --> 00:03:08.086 A:middle
能做的事情很有限

00:03:08.596 --> 00:03:11.156 A:middle
这推动了 HEVC 的诞生

00:03:12.006 --> 00:03:13.016 A:middle
我们一直在寻找一个

00:03:13.016 --> 00:03:15.146 A:middle
可以在照片 图像

00:03:15.146 --> 00:03:18.076 A:middle
和视频中通用的

00:03:18.076 --> 00:03:19.396 A:middle
新一代编解码器

00:03:19.966 --> 00:03:20.926 A:middle
我们也一直在寻找

00:03:20.926 --> 00:03:22.056 A:middle
某种能带来

00:03:22.056 --> 00:03:24.476 A:middle
显著收益的

00:03:24.476 --> 00:03:27.826 A:middle
技术

00:03:27.986 --> 00:03:30.896 A:middle
经过评估后

00:03:31.016 --> 00:03:32.986 A:middle
我们选择了 HEVC

00:03:32.986 --> 00:03:36.956 A:middle
HEVC 是 High Efficiency Video Coding（高效视频编码）

00:03:36.956 --> 00:03:37.756 A:middle
的缩写

00:03:38.376 --> 00:03:39.626 A:middle
这是一种使用最先进技术的

00:03:40.326 --> 00:03:41.846 A:middle
行业标准

00:03:41.846 --> 00:03:43.986 A:middle
在 2013 年被批准和采用

00:03:45.056 --> 00:03:48.046 A:middle
ISO（国际标准化组织）将它批准为 MPEG-H 的第二部分

00:03:48.046 --> 00:03:52.556 A:middle
ITU（国际电信联盟）将它批准为 H.265

00:03:53.676 --> 00:03:55.026 A:middle
我们将会用 HEVC

00:03:55.276 --> 00:03:57.266 A:middle
来称呼和指代它

00:03:57.336 --> 00:04:00.296 A:middle
Apple 将把它作为

00:03:57.336 --> 00:04:00.296 A:middle
Apple 将把它作为

00:04:00.296 --> 00:04:02.406 A:middle
新一代的编解码器

00:04:03.736 --> 00:04:05.146 A:middle
我们接下来将会用几分钟

00:04:05.146 --> 00:04:07.496 A:middle
来谈谈是什么让 HEVC

00:04:07.496 --> 00:04:09.356 A:middle
成为了一个这么棒的编解码器

00:04:09.506 --> 00:04:13.376 A:middle
HEVC 和 H.264 很相似

00:04:13.376 --> 00:04:14.886 A:middle
它们都是

00:04:15.116 --> 00:04:18.536 A:middle
分块处理

00:04:18.536 --> 00:04:19.146 A:middle
视频和帧的

00:04:19.976 --> 00:04:22.976 A:middle
它使用了时间和空间

00:04:22.976 --> 00:04:24.826 A:middle
压缩技术来获得

00:04:24.826 --> 00:04:26.006 A:middle
压缩效益

00:04:26.266 --> 00:04:29.596 A:middle
H.264 的概念是基于宏块的

00:04:29.596 --> 00:04:32.696 A:middle
也就是说在编解码器中

00:04:32.696 --> 00:04:34.576 A:middle
进行处理时

00:04:34.576 --> 00:04:36.046 A:middle
使用了大小为 16 x 16 的块

00:04:36.746 --> 00:04:40.396 A:middle
HEVC 引入了 CTU

00:04:40.396 --> 00:04:41.486 A:middle
也就是编码树单元的概念

00:04:41.926 --> 00:04:43.736 A:middle
这些单元的大小

00:04:44.396 --> 00:04:48.116 A:middle
可以从 4 x 4

00:04:48.116 --> 00:04:48.756 A:middle
一直到到 64 x 64

00:04:49.716 --> 00:04:51.646 A:middle
当你使用

00:04:51.766 --> 00:04:54.996 A:middle
更大的单元时

00:04:55.056 --> 00:04:56.346 A:middle
你就会获得更好的压缩效益

00:04:57.446 --> 00:04:59.936 A:middle
当你处理

00:04:59.936 --> 00:05:00.956 A:middle
高分辨率视频和图像时

00:04:59.936 --> 00:05:00.956 A:middle
高分辨率视频和图像时

00:05:00.956 --> 00:05:03.826 A:middle
尤其如此

00:05:03.826 --> 00:05:05.196 A:middle
你真的可以

00:05:05.846 --> 00:05:05.966 A:middle
充分利用这个性质

00:05:07.116 --> 00:05:10.636 A:middle
H.264 使用了 4 x 4 和

00:05:10.636 --> 00:05:13.736 A:middle
8 x 8 DCT  也就是离散余弦变换

00:05:13.736 --> 00:05:18.476 A:middle
但 HEVC 不仅使用了

00:05:18.476 --> 00:05:19.806 A:middle
离散余弦变换

00:05:19.806 --> 00:05:21.486 A:middle
还使用了 DST

00:05:21.486 --> 00:05:23.066 A:middle
也就是离散正弦变换

00:05:23.576 --> 00:05:25.076 A:middle
同样 由于编码块

00:05:25.076 --> 00:05:27.276 A:middle
会针对变换块调整大小

00:05:27.276 --> 00:05:30.226 A:middle
大小也会提高到

00:05:30.226 --> 00:05:30.736 A:middle
32 x 32

00:05:32.436 --> 00:05:34.096 A:middle
为了获得更好的

00:05:34.096 --> 00:05:36.696 A:middle
空间压缩效果  HEVC 引入了

00:05:36.696 --> 00:05:38.256 A:middle
额外的定向模式

00:05:38.256 --> 00:05:41.456 A:middle
H.264 有最多 9 个

00:05:41.456 --> 00:05:43.346 A:middle
相比之下 HEVC 提高到了 35 个

00:05:45.456 --> 00:05:48.316 A:middle
实现高度压缩

00:05:48.506 --> 00:05:49.866 A:middle
的关键在于

00:05:49.866 --> 00:05:51.526 A:middle
运动估计

00:05:51.526 --> 00:05:53.126 A:middle
或运动补偿

00:05:53.866 --> 00:05:56.616 A:middle
这就是你要找的

00:05:56.616 --> 00:05:58.756 A:middle
你想要根据前面的图像

00:05:58.756 --> 00:06:01.136 A:middle
来预测当先的图像

00:05:58.756 --> 00:06:01.136 A:middle
来预测当先的图像

00:06:01.136 --> 00:06:02.896 A:middle
在这之中

00:06:02.956 --> 00:06:03.926 A:middle
有一个块

00:06:03.926 --> 00:06:05.086 A:middle
你知道你能通过它

00:06:05.086 --> 00:06:05.426 A:middle
做些什么吗

00:06:05.786 --> 00:06:07.756 A:middle
这个块与上个图像的块

00:06:07.756 --> 00:06:09.376 A:middle
是一样的 只是移动了

00:06:09.376 --> 00:06:10.576 A:middle
特定数量的像素

00:06:11.566 --> 00:06:14.906 A:middle
有时你并不能

00:06:14.906 --> 00:06:15.836 A:middle
刚好匹配到像素的边界

00:06:15.836 --> 00:06:17.046 A:middle
比如 一些内容

00:06:17.046 --> 00:06:18.236 A:middle
可以移动 5 个像素

00:06:18.236 --> 00:06:18.996 A:middle
但是也可以移动

00:06:19.036 --> 00:06:20.436 A:middle
5.5 个像素或者

00:06:20.436 --> 00:06:21.906 A:middle
5.25 个像素

00:06:22.976 --> 00:06:23.986 A:middle
当你需要在半个像素

00:06:23.986 --> 00:06:26.266 A:middle
或者四分之一个像素的边界

00:06:26.266 --> 00:06:28.206 A:middle
进行运动估计时

00:06:28.206 --> 00:06:29.356 A:middle
你需要能够

00:06:29.356 --> 00:06:30.686 A:middle
精确地生成这些像素

00:06:30.686 --> 00:06:32.216 A:middle
因为它们

00:06:32.216 --> 00:06:32.566 A:middle
不存在

00:06:32.566 --> 00:06:33.586 A:middle
因为只有边界上

00:06:33.586 --> 00:06:34.206 A:middle
才有像素

00:06:34.756 --> 00:06:37.616 A:middle
所以 如你所见  HEVC 拥有

00:06:37.616 --> 00:06:40.306 A:middle
更好的滤波能力

00:06:40.306 --> 00:06:42.756 A:middle
这可以用来

00:06:42.756 --> 00:06:44.806 A:middle
更精确地生成

00:06:44.806 --> 00:06:46.226 A:middle
亚像素和四分之一像素

00:06:46.496 --> 00:06:47.646 A:middle
这带来了更好的

00:06:47.646 --> 00:06:49.566 A:middle
运动估计和运动补偿

00:06:49.566 --> 00:06:51.646 A:middle
从而带来更好的压缩效果

00:06:52.806 --> 00:06:54.456 A:middle
最后 如果你熟悉

00:06:54.816 --> 00:06:56.796 A:middle
基于块的编解码器

00:06:56.796 --> 00:06:59.656 A:middle
我们说过 H.264 使用宏块

00:07:00.046 --> 00:07:01.576 A:middle
有时你确实可以

00:07:01.576 --> 00:07:04.486 A:middle
在编码视频中看到

00:07:04.486 --> 00:07:06.646 A:middle
块边缘的缺陷

00:07:06.646 --> 00:07:07.456 A:middle
我们称之为

00:07:07.456 --> 00:07:07.966 A:middle
块效应

00:07:07.966 --> 00:07:12.136 A:middle
H.264 先前引入了一个环路滤波器

00:07:12.576 --> 00:07:14.986 A:middle
叫做去块滤波器

00:07:15.316 --> 00:07:16.666 A:middle
它可以帮我们大幅减弱

00:07:16.666 --> 00:07:17.606 A:middle
块效应

00:07:18.036 --> 00:07:19.676 A:middle
HEVC 是在这个滤波器的基础上改善的

00:07:19.736 --> 00:07:21.916 A:middle
但它更进一步

00:07:21.976 --> 00:07:23.546 A:middle
引入了一个额外的步骤

00:07:23.576 --> 00:07:25.746 A:middle
在这个步骤中

00:07:25.796 --> 00:07:27.636 A:middle
我们会运行一个样本自适应偏移量滤波器

00:07:27.886 --> 00:07:28.866 A:middle
它会给我们带来

00:07:28.866 --> 00:07:29.376 A:middle
更好的处理结果

00:07:29.936 --> 00:07:30.856 A:middle
现在我们已经说了

00:07:30.856 --> 00:07:32.926 A:middle
一些在 HEVC 中能给我们

00:07:32.926 --> 00:07:35.446 A:middle
带来更好压缩效果的重点技术

00:07:35.446 --> 00:07:36.246 A:middle
其实还有更多

00:07:37.056 --> 00:07:38.496 A:middle
说了这么多

00:07:38.496 --> 00:07:39.846 A:middle
我们究竟能有

00:07:39.846 --> 00:07:40.176 A:middle
多少提升呢

00:07:40.446 --> 00:07:42.606 A:middle
这就是我们

00:07:42.606 --> 00:07:44.136 A:middle
为什么这么兴奋地向你们介绍

00:07:44.136 --> 00:07:45.386 A:middle
这个 Apple 的下一代编解码器的原因

00:07:46.186 --> 00:07:47.576 A:middle
在普遍的视频内容上

00:07:47.576 --> 00:07:49.666 A:middle
我们能看到

00:07:49.666 --> 00:07:51.836 A:middle
相较 H.264 最多 40% 的

00:07:51.836 --> 00:07:53.816 A:middle
压缩效果提升

00:07:54.506 --> 00:07:55.966 A:middle
所以你可以生成

00:07:55.966 --> 00:07:57.446 A:middle
与之前同等质量的视频

00:07:57.446 --> 00:07:59.276 A:middle
但可以减少

00:07:59.276 --> 00:08:00.396 A:middle
40% 的带宽

00:07:59.276 --> 00:08:00.396 A:middle
40% 的带宽

00:08:00.876 --> 00:08:01.966 A:middle
或者你可以保持

00:08:01.966 --> 00:08:03.306 A:middle
相同的带宽

00:08:03.306 --> 00:08:05.256 A:middle
并显著提升视频质量

00:08:05.716 --> 00:08:07.056 A:middle
我们已经进行了很多的

00:08:07.056 --> 00:08:08.976 A:middle
主观性和客观性测试

00:08:09.336 --> 00:08:10.646 A:middle
以微调视频

00:08:10.646 --> 00:08:11.796 A:middle
来实现这些收益

00:08:12.906 --> 00:08:14.616 A:middle
在一些使用情景中

00:08:14.616 --> 00:08:15.806 A:middle
我们甚至看到了更高的收益

00:08:16.436 --> 00:08:18.186 A:middle
我们优化了

00:08:18.186 --> 00:08:19.936 A:middle
端对端流水线

00:08:20.066 --> 00:08:20.866 A:middle
改善了 iOS 的相机捕捉

00:08:21.306 --> 00:08:22.886 A:middle
在这个使用情景中

00:08:22.886 --> 00:08:25.276 A:middle
我们能看到相较 H.264

00:08:25.276 --> 00:08:26.736 A:middle
2 倍的提升

00:08:27.496 --> 00:08:28.736 A:middle
这意味着你现在

00:08:28.736 --> 00:08:30.386 A:middle
能够存储

00:08:30.386 --> 00:08:32.926 A:middle
相较之前 H.264

00:08:32.926 --> 00:08:34.135 A:middle
两倍多的电影

00:08:36.676 --> 00:08:38.466 A:middle
我们现在来谈谈

00:08:38.556 --> 00:08:40.336 A:middle
我们支持的

00:08:40.336 --> 00:08:40.916 A:middle
细节

00:08:41.576 --> 00:08:45.556 A:middle
像 H.264 一样

00:08:45.556 --> 00:08:46.666 A:middle
HEVC 也有 Profile 的概念

00:08:47.396 --> 00:08:49.476 A:middle
在 HEVC 中 我们支持

00:08:49.476 --> 00:08:52.336 A:middle
Main Profile

00:08:52.336 --> 00:08:54.266 A:middle
Main Still Picture Profile

00:08:54.266 --> 00:08:55.636 A:middle
以及 Main 10 Profile

00:08:56.226 --> 00:08:58.566 A:middle
有了 Main 10 Profile

00:08:58.566 --> 00:09:00.716 A:middle
我们就可以

00:08:58.566 --> 00:09:00.716 A:middle
我们就可以

00:09:00.716 --> 00:09:02.976 A:middle
让视频的编码和解码

00:09:03.026 --> 00:09:03.626 A:middle
达到 10bit 精度

00:09:04.246 --> 00:09:05.176 A:middle
这意味着

00:09:05.176 --> 00:09:06.966 A:middle
你可以在我们

00:09:06.966 --> 00:09:08.876 A:middle
端对端的流水线上

00:09:08.876 --> 00:09:10.656 A:middle
显示更多的

00:09:11.026 --> 00:09:12.746 A:middle
灰度值和颜色

00:09:13.216 --> 00:09:18.836 A:middle
在 HEVC 中 我们要求

00:09:18.836 --> 00:09:22.126 A:middle
使用 hvc1 编解码类型用于播放

00:09:23.046 --> 00:09:24.576 A:middle
这意味着参数集合

00:09:24.576 --> 00:09:26.096 A:middle
需要存储在

00:09:26.096 --> 00:09:28.486 A:middle
解码配置记录中

00:09:28.486 --> 00:09:29.956 A:middle
而不是存储在样本

00:09:29.956 --> 00:09:31.516 A:middle
或是负载本身中

00:09:32.046 --> 00:09:33.426 A:middle
所以请确保

00:09:33.426 --> 00:09:35.936 A:middle
你在创建 HEVC 素材时

00:09:35.936 --> 00:09:38.776 A:middle
使用 hvc1 编解码类型

00:09:38.776 --> 00:09:40.426 A:middle
以使其能够在 Apple

00:09:40.426 --> 00:09:41.056 A:middle
生态系统中播放

00:09:44.796 --> 00:09:47.426 A:middle
最后 非常幸运

00:09:47.426 --> 00:09:48.996 A:middle
HEVC 本身就适配

00:09:48.996 --> 00:09:51.236 A:middle
现有的文件格式

00:09:51.236 --> 00:09:53.266 A:middle
我们可以充分利用这一点

00:09:53.676 --> 00:09:55.206 A:middle
它能够很好地

00:09:55.206 --> 00:09:57.116 A:middle
适配 QuickTime 电影文件格式

00:09:57.116 --> 00:09:59.586 A:middle
以及 ISO MPEG-4

00:09:59.636 --> 00:10:00.066 A:middle
文件格式

00:09:59.636 --> 00:10:00.066 A:middle
文件格式

00:10:02.776 --> 00:10:05.086 A:middle
所以 我们选择了一个

00:10:05.086 --> 00:10:06.536 A:middle
无论是业界

00:10:06.536 --> 00:10:08.416 A:middle
还是 Apple 生态系统

00:10:08.416 --> 00:10:09.066 A:middle
都支持的技术

00:10:09.966 --> 00:10:10.946 A:middle
这里说的支持

00:10:10.946 --> 00:10:11.826 A:middle
包含硬件和软件两个方面

00:10:12.306 --> 00:10:13.086 A:middle
在稍后的介绍中

00:10:13.086 --> 00:10:14.786 A:middle
Gavin 会详细讲解

00:10:14.786 --> 00:10:18.186 A:middle
HEVC 在哪些方面

00:10:18.186 --> 00:10:18.886 A:middle
以及通过什么方式受到支持

00:10:21.936 --> 00:10:24.096 A:middle
HEVC 适用于

00:10:24.096 --> 00:10:25.616 A:middle
我们刚刚所说的文件格式

00:10:25.616 --> 00:10:27.036 A:middle
也就是 QuickTime 电影文件格式

00:10:27.036 --> 00:10:28.766 A:middle
以及 ISO MPEG-4

00:10:28.766 --> 00:10:30.046 A:middle
文件格式

00:10:30.766 --> 00:10:32.656 A:middle
总而言之 它是一个

00:10:33.086 --> 00:10:35.686 A:middle
无论对于电影还是静止图像

00:10:35.686 --> 00:10:37.926 A:middle
都很理想的编解码器

00:10:37.926 --> 00:10:40.896 A:middle
可以用来代替 H.264 和 JPEG

00:10:41.496 --> 00:10:43.216 A:middle
我已经提到过

00:10:43.216 --> 00:10:45.126 A:middle
HEVC 可以使用现有的电影

00:10:45.126 --> 00:10:45.736 A:middle
文件格式

00:10:46.216 --> 00:10:48.466 A:middle
但对于照片和图像

00:10:48.466 --> 00:10:49.836 A:middle
我们不能

00:10:49.836 --> 00:10:50.376 A:middle
使用它

00:10:50.786 --> 00:10:52.866 A:middle
所以我们需要寻找

00:10:52.896 --> 00:10:54.246 A:middle
另一个文件格式

00:10:54.246 --> 00:10:56.416 A:middle
来让我们使用

00:10:56.496 --> 00:10:58.746 A:middle
HEVC 作为编解码器

00:10:59.066 --> 00:11:01.276 A:middle
这时候就需要 HEIF 了

00:10:59.066 --> 00:11:01.276 A:middle
这时候就需要 HEIF 了

00:11:02.776 --> 00:11:05.096 A:middle
在详细了解 HEIF 之前

00:11:05.226 --> 00:11:06.496 A:middle
我们先讨论一下

00:11:06.496 --> 00:11:08.466 A:middle
要采用一个新的

00:11:08.576 --> 00:11:11.496 A:middle
图像文件格式

00:11:11.496 --> 00:11:13.406 A:middle
须满足的要求

00:11:14.606 --> 00:11:15.616 A:middle
我们想要支持

00:11:15.616 --> 00:11:17.236 A:middle
以 HEVC 作为首选项的

00:11:17.236 --> 00:11:19.206 A:middle
最先进的

00:11:19.206 --> 00:11:20.576 A:middle
压缩技术

00:11:21.866 --> 00:11:24.086 A:middle
我们尤其想要支持

00:11:24.086 --> 00:11:25.806 A:middle
Alpha 和景深通道

00:11:25.856 --> 00:11:27.396 A:middle
作为我们的首要素材类型

00:11:28.436 --> 00:11:30.756 A:middle
我们需要支持动态图像

00:11:31.136 --> 00:11:33.976 A:middle
如动态 GIF/JIF

00:11:33.976 --> 00:11:34.926 A:middle
或 Live Photo

00:11:35.296 --> 00:11:38.766 A:middle
除了支持静态图像

00:11:38.766 --> 00:11:41.096 A:middle
我们还想要

00:11:41.096 --> 00:11:43.356 A:middle
对图像序列的支持

00:11:43.356 --> 00:11:44.856 A:middle
来压缩并展现

00:11:44.856 --> 00:11:46.886 A:middle
你在连拍中

00:11:47.036 --> 00:11:48.476 A:middle
所使用的

00:11:48.476 --> 00:11:49.986 A:middle
文件格式

00:11:51.286 --> 00:11:52.926 A:middle
最后 随着

00:11:52.926 --> 00:11:55.026 A:middle
图像的尺寸

00:11:55.026 --> 00:11:57.376 A:middle
越来越大

00:11:57.376 --> 00:11:59.106 A:middle
能够高效地以

00:11:59.496 --> 00:12:00.606 A:middle
低延迟和合理的过程

00:11:59.496 --> 00:12:00.606 A:middle
低延迟和合理的过程

00:12:00.606 --> 00:12:02.026 A:middle
来处理这些图像

00:12:02.506 --> 00:12:03.386 A:middle
是非常重要的

00:12:03.616 --> 00:12:04.756 A:middle
当你在获得一张

00:12:04.756 --> 00:12:06.566 A:middle
巨大的图像时

00:12:06.866 --> 00:12:08.986 A:middle
你想要立即

00:12:08.986 --> 00:12:09.966 A:middle
下载并开始预览

00:12:10.306 --> 00:12:11.666 A:middle
如果你只对一张大型图像中的

00:12:11.706 --> 00:12:13.366 A:middle
某一小块特定的区域感兴趣时

00:12:13.366 --> 00:12:15.726 A:middle
你想要能够

00:12:15.726 --> 00:12:18.006 A:middle
只解码并处理

00:12:18.046 --> 00:12:19.676 A:middle
相关的 Tile

00:12:20.196 --> 00:12:21.006 A:middle
所以我们在寻找

00:12:21.006 --> 00:12:22.376 A:middle
一种能够让我们

00:12:22.376 --> 00:12:25.676 A:middle
利用这种流水线

00:12:26.436 --> 00:12:27.296 A:middle
的技术

00:12:27.596 --> 00:12:29.246 A:middle
为了满足这些要求

00:12:29.246 --> 00:12:30.826 A:middle
我们考虑了几个选项

00:12:31.106 --> 00:12:32.346 A:middle
最终选择了 HEIF

00:12:33.456 --> 00:12:35.086 A:middle
HEIF 是

00:12:35.126 --> 00:12:36.056 A:middle
High Efficiency Image File Format（高效图像文件格式）的缩写

00:12:36.986 --> 00:12:39.906 A:middle
与 HEVC 类似

00:12:39.906 --> 00:12:41.626 A:middle
它也是一个行业标准

00:12:41.626 --> 00:12:44.476 A:middle
在 2015 年被 ISO 批准

00:12:45.056 --> 00:12:48.406 A:middle
它是基于我们熟悉的

00:12:48.406 --> 00:12:49.956 A:middle
ISO BMFF 的

00:12:50.696 --> 00:12:53.716 A:middle
它的功能非常强大

00:12:54.836 --> 00:12:56.786 A:middle
同时支持单个图像

00:12:56.786 --> 00:12:58.286 A:middle
和图像序列

00:12:59.436 --> 00:13:01.446 A:middle
除此之外还有

00:12:59.436 --> 00:13:01.446 A:middle
除此之外还有

00:13:01.446 --> 00:13:02.836 A:middle
很多这个文件格式

00:13:02.836 --> 00:13:04.196 A:middle
支持的使用情景

00:13:04.726 --> 00:13:05.756 A:middle
允许我们在将来

00:13:05.756 --> 00:13:06.656 A:middle
进行拓展

00:13:07.216 --> 00:13:12.316 A:middle
通常它使用

00:13:12.316 --> 00:13:13.106 A:middle
HEVC 进行压缩

00:13:13.156 --> 00:13:14.426 A:middle
你也可以选择

00:13:14.426 --> 00:13:15.746 A:middle
使用其他的编码器

00:13:16.046 --> 00:13:17.606 A:middle
但在 Apple

00:13:17.606 --> 00:13:20.066 A:middle
当我们生成 HEIF 素材的时候

00:13:20.066 --> 00:13:23.566 A:middle
仅会使用

00:13:24.476 --> 00:13:24.706 A:middle
HEVC 编码器

00:13:24.796 --> 00:13:26.236 A:middle
我们为什么为图像做这么多呢

00:13:27.506 --> 00:13:29.216 A:middle
我们已经看到了新的文件格式

00:13:29.216 --> 00:13:30.076 A:middle
为电影和视频带来的好处了

00:13:30.596 --> 00:13:32.366 A:middle
对于图像

00:13:32.366 --> 00:13:33.746 A:middle
我们也能看到

00:13:33.746 --> 00:13:34.236 A:middle
相较 JPEG 而言的 巨大好处

00:13:34.656 --> 00:13:37.706 A:middle
使用 HEVC 与 HEIF

00:13:38.496 --> 00:13:40.456 A:middle
你可以拍摄和存储

00:13:40.546 --> 00:13:43.456 A:middle
的图像数量

00:13:43.456 --> 00:13:45.496 A:middle
将是之前使用 JPEG 时的两倍

00:13:47.696 --> 00:13:49.296 A:middle
我们来讨论一下

00:13:49.386 --> 00:13:51.986 A:middle
我们支持的

00:13:51.986 --> 00:13:52.896 A:middle
HEIF 的各种格式

00:13:53.486 --> 00:13:56.346 A:middle
我刚刚提到过

00:13:56.346 --> 00:13:58.076 A:middle
从编码或素材创建的角度来看

00:13:58.546 --> 00:14:00.496 A:middle
我们将会使用

00:13:58.546 --> 00:14:00.496 A:middle
我们将会使用

00:14:00.496 --> 00:14:02.706 A:middle
HEVC 编码器

00:14:02.706 --> 00:14:05.346 A:middle
这意味着我们将会生成

00:14:05.346 --> 00:14:06.416 A:middle
.heic 文件扩展名

00:14:06.416 --> 00:14:09.246 A:middle
这是我们从素材创建的角度来看

00:14:09.296 --> 00:14:10.736 A:middle
正在做的事情

00:14:10.736 --> 00:14:12.836 A:middle
我们将能够

00:14:12.836 --> 00:14:13.906 A:middle
创建和回放这些文件

00:14:14.556 --> 00:14:16.586 A:middle
在回放方面

00:14:16.586 --> 00:14:19.816 A:middle
我们也将会支持解码

00:14:19.986 --> 00:14:23.846 A:middle
H.264 HEIF 图像以及

00:14:24.196 --> 00:14:25.356 A:middle
其他我们系统支持的

00:14:25.356 --> 00:14:26.846 A:middle
编解码器

00:14:27.206 --> 00:14:29.106 A:middle
我们也能够解码

00:14:29.106 --> 00:14:31.246 A:middle
和播放这些 HEIF 文件

00:14:35.976 --> 00:14:38.056 A:middle
我们的同事 Davide

00:14:38.136 --> 00:14:38.976 A:middle
制作了一个很棒的视频

00:14:38.976 --> 00:14:41.276 A:middle
这个视频将会

00:14:41.276 --> 00:14:43.896 A:middle
提供更多关于

00:14:43.896 --> 00:14:44.426 A:middle
HEIF 文件格式的信息

00:14:44.426 --> 00:14:45.456 A:middle
我认为他将会

00:14:45.456 --> 00:14:47.366 A:middle
在今天晚些时候

00:14:47.366 --> 00:14:47.886 A:middle
或者明天发布这个视频

00:14:48.266 --> 00:14:49.976 A:middle
如果你想了解

00:14:49.976 --> 00:14:52.026 A:middle
更多关于 HEIF 文件格式的信息

00:14:52.426 --> 00:14:55.526 A:middle
各种 Atom 类型

00:14:55.526 --> 00:14:57.056 A:middle
以及如何解析并处理文件

00:14:57.056 --> 00:14:58.986 A:middle
请一定要看看这个视频

00:15:00.636 --> 00:15:02.026 A:middle
我们已经讨论了这些新的技术

00:15:02.026 --> 00:15:03.496 A:middle
了解了它们是什么

00:15:03.566 --> 00:15:05.776 A:middle
以及我们为什么决定在 Apple 采用它们

00:15:05.776 --> 00:15:08.016 A:middle
接下来我们会

00:15:08.016 --> 00:15:09.936 A:middle
向你们介绍一下

00:15:09.936 --> 00:15:11.546 A:middle
我们是如何在

00:15:11.546 --> 00:15:13.636 A:middle
Apple 生态系统中使用它们的

00:15:13.686 --> 00:15:15.856 A:middle
并为你门提供一些指导

00:15:15.856 --> 00:15:16.696 A:middle
让你们了解通过这些优秀的技术

00:15:16.696 --> 00:15:18.286 A:middle
能在 App 中做些什么

00:15:18.286 --> 00:15:18.886 A:middle
并介绍一些使用情景

00:15:19.866 --> 00:15:21.426 A:middle
为了向你们介绍这些内容

00:15:21.426 --> 00:15:23.106 A:middle
我想把时间

00:15:23.106 --> 00:15:23.806 A:middle
交给 Gavin Thomson

00:15:24.516 --> 00:15:30.486 A:middle
[掌声]

00:15:30.986 --> 00:15:31.376 A:middle
&gt;&gt; 谢谢你 Athar

00:15:31.866 --> 00:15:33.386 A:middle
我叫 Gavin Thomson

00:15:33.386 --> 00:15:34.676 A:middle
我是 Apple

00:15:34.756 --> 00:15:36.096 A:middle
相机和照片部门的

00:15:36.096 --> 00:15:37.386 A:middle
一名工程经理

00:15:39.656 --> 00:15:46.146 A:middle
我们刚刚了解了

00:15:46.366 --> 00:15:47.726 A:middle
很多 HEIF 和 HEVC

00:15:47.726 --> 00:15:48.956 A:middle
很棒的优点

00:15:48.956 --> 00:15:50.446 A:middle
但这些在生态系统中

00:15:50.446 --> 00:15:51.196 A:middle
有什么含义呢

00:15:51.866 --> 00:15:53.796 A:middle
在过去的一年里

00:15:53.796 --> 00:15:55.836 A:middle
我们在 Apple 一直

00:15:55.836 --> 00:15:57.146 A:middle
致力于让 HEIF 和 HEVC

00:15:57.146 --> 00:15:57.866 A:middle
适配 Apple 的生态系统

00:15:58.256 --> 00:16:01.036 A:middle
我今天想和大家分享

00:15:58.256 --> 00:16:01.036 A:middle
我今天想和大家分享

00:16:01.106 --> 00:16:02.336 A:middle
和讨论这个适配过程

00:16:02.336 --> 00:16:03.536 A:middle
以及为了帮助这个转变

00:16:03.536 --> 00:16:04.966 A:middle
我们做出的变化

00:16:05.996 --> 00:16:07.146 A:middle
我们的目标是

00:16:07.146 --> 00:16:08.396 A:middle
让这些

00:16:08.396 --> 00:16:10.056 A:middle
新格式的介绍

00:16:10.096 --> 00:16:10.516 A:middle
尽可能简洁明了

00:16:11.146 --> 00:16:13.146 A:middle
我想要讨论

00:16:13.146 --> 00:16:14.326 A:middle
三个主题

00:16:15.526 --> 00:16:17.866 A:middle
首先是创建

00:16:17.866 --> 00:16:19.256 A:middle
我们如何以及在什么情况下

00:16:19.256 --> 00:16:20.266 A:middle
可以创建 HEIF 图像和 HEVC 电影内容

00:16:21.696 --> 00:16:24.396 A:middle
然后是访问

00:16:24.396 --> 00:16:26.526 A:middle
我们如何以及在什么情况下

00:16:26.526 --> 00:16:27.036 A:middle
可以访问 HEIF 图像和 HEVC 电影内容

00:16:27.796 --> 00:16:30.406 A:middle
最后是转移

00:16:30.406 --> 00:16:31.386 A:middle
当你想在拍摄或支持的设备上

00:16:31.386 --> 00:16:33.106 A:middle
移动 HEIF 或 HEVC 内容时

00:16:33.106 --> 00:16:34.816 A:middle
你需要考虑

00:16:34.816 --> 00:16:35.976 A:middle
什么策略

00:16:42.046 --> 00:16:43.436 A:middle
首先我想从

00:16:43.436 --> 00:16:44.006 A:middle
访问开始说起

00:16:44.246 --> 00:16:45.956 A:middle
我们已经讨论了

00:16:45.956 --> 00:16:47.576 A:middle
针对图像的 HEIF 格式的

00:16:47.576 --> 00:16:48.206 A:middle
可拓展性

00:16:48.686 --> 00:16:49.176 A:middle
Apple 生成的

00:16:49.176 --> 00:16:50.536 A:middle
HEIF 图像

00:16:50.536 --> 00:16:51.716 A:middle
有哪些特征呢

00:16:53.456 --> 00:16:55.786 A:middle
我们已经了解这种文件格式是一种

00:16:55.786 --> 00:16:57.346 A:middle
ISO 基础媒体文件格式

00:16:58.046 --> 00:16:59.356 A:middle
你们中如果有曾经

00:16:59.356 --> 00:17:01.496 A:middle
查看过 MP4 或 QuickTime 电影文件内部的人

00:16:59.356 --> 00:17:01.496 A:middle
查看过 MP4 或 QuickTime 电影文件内部的人

00:17:01.496 --> 00:17:03.286 A:middle
将会对 HEIF 的

00:17:03.286 --> 00:17:04.195 A:middle
内部架构非常熟悉

00:17:04.195 --> 00:17:05.496 A:middle
因为它们是基于

00:17:05.496 --> 00:17:06.336 A:middle
同一个标准的

00:17:06.906 --> 00:17:08.236 A:middle
我想在这里重申

00:17:08.536 --> 00:17:10.246 A:middle
HEIF 是一种容器格式

00:17:11.036 --> 00:17:12.205 A:middle
这与 QuickTime 电影文件格式

00:17:12.205 --> 00:17:13.425 A:middle
不是非常相似

00:17:14.106 --> 00:17:15.465 A:middle
它相较于 JPEG 文件格式

00:17:15.465 --> 00:17:17.856 A:middle
也有更多的选择

00:17:17.915 --> 00:17:18.646 A:middle
并具有更高的灵活性

00:17:20.816 --> 00:17:23.056 A:middle
目前 我们的图像负载

00:17:23.056 --> 00:17:24.675 A:middle
是用 HEVC 编码的

00:17:25.376 --> 00:17:26.346 A:middle
我们已经了解

00:17:26.346 --> 00:17:27.806 A:middle
它提供了相较 JPEG

00:17:27.806 --> 00:17:29.426 A:middle
很棒的压缩效果提升

00:17:29.426 --> 00:17:29.956 A:middle
最高可达 2 倍

00:17:32.276 --> 00:17:34.446 A:middle
同时 我们将图像负载

00:17:34.446 --> 00:17:37.286 A:middle
分成 512 x 512 Tile 进行编码

00:17:37.286 --> 00:17:38.576 A:middle
与其他的优势相比

00:17:38.576 --> 00:17:40.106 A:middle
这对于高分辨率内容的

00:17:40.226 --> 00:17:41.946 A:middle
增量加载

00:17:41.946 --> 00:17:45.646 A:middle
将提供很棒的灵活性

00:17:46.256 --> 00:17:48.436 A:middle
我们将使用

00:17:48.436 --> 00:17:50.596 A:middle
320 x 240 大小的嵌入式缩略图

00:17:50.666 --> 00:17:52.446 A:middle
相较我们目前使用的

00:17:52.446 --> 00:17:54.436 A:middle
160 x 120 大小的 JPEG 嵌入式缩略图

00:17:54.436 --> 00:17:57.406 A:middle
分辨率提升至 4 倍

00:17:57.406 --> 00:17:57.966 A:middle
但大小仅为 2 倍

00:17:58.446 --> 00:17:59.266 A:middle
我们是怎么做到的呢

00:17:59.266 --> 00:18:00.666 A:middle
这是由于

00:17:59.266 --> 00:18:00.666 A:middle
这是由于

00:18:00.846 --> 00:18:04.066 A:middle
缩略图也是使用 HEVC 编码的

00:18:04.776 --> 00:18:07.356 A:middle
我们依旧支持

00:18:07.356 --> 00:18:09.766 A:middle
EXIF 元数据负载

00:18:09.826 --> 00:18:10.976 A:middle
它与我们在 JPEG 格式中

00:18:10.976 --> 00:18:11.916 A:middle
的负载相适配

00:18:15.506 --> 00:18:17.996 A:middle
使用 HEVC 编码的

00:18:17.996 --> 00:18:19.336 A:middle
HEIF 图像将会

00:18:19.336 --> 00:18:21.486 A:middle
在文件系统中

00:18:21.816 --> 00:18:24.596 A:middle
以 .heic 扩展名标识

00:18:25.136 --> 00:18:26.636 A:middle
一些人可能知道

00:18:26.636 --> 00:18:29.296 A:middle
这与 DCF 8.3 文件命名惯例

00:18:29.666 --> 00:18:30.766 A:middle
相违背

00:18:31.296 --> 00:18:32.496 A:middle
如果你在文件名解析器中

00:18:32.526 --> 00:18:34.026 A:middle
有任何的预设值

00:18:34.026 --> 00:18:34.926 A:middle
比如扩展名为 3 个字符

00:18:34.926 --> 00:18:36.596 A:middle
你需要知道现在我们的

00:18:36.596 --> 00:18:38.426 A:middle
默认静态捕获格式

00:18:38.426 --> 00:18:39.486 A:middle
含有 4 个字符

00:18:43.676 --> 00:18:44.986 A:middle
那么我们在哪些地方

00:18:44.986 --> 00:18:45.566 A:middle
支持 HEIF 解码呢

00:18:45.896 --> 00:18:48.016 A:middle
HEIF 在我们

00:18:48.016 --> 00:18:50.106 A:middle
所有支持的平台上可用

00:18:50.106 --> 00:18:51.816 A:middle
如安装了 macOS 10.3

00:18:51.816 --> 00:18:54.656 A:middle
或 iOS 11 的平台

00:18:55.166 --> 00:18:55.946 A:middle
但其实还有更多的

00:18:55.946 --> 00:18:58.676 A:middle
硬件软件支持

00:18:58.756 --> 00:19:01.026 A:middle
对于 iOS

00:18:58.756 --> 00:19:01.026 A:middle
对于 iOS

00:19:01.026 --> 00:19:02.876 A:middle
我们在 A9 芯片及以上的配置上

00:19:02.876 --> 00:19:03.156 A:middle
提供硬件解码

00:19:03.726 --> 00:19:04.836 A:middle
举个例子 也就是

00:19:04.836 --> 00:19:06.876 A:middle
iPhone 6s 或 iPad Pro

00:19:08.116 --> 00:19:09.656 A:middle
对于 macOS

00:19:09.656 --> 00:19:10.616 A:middle
我们在第六代 Intel Core

00:19:10.616 --> 00:19:12.376 A:middle
也就是 Skylake 家族

00:19:12.376 --> 00:19:13.746 A:middle
以上的处理器

00:19:13.746 --> 00:19:14.456 A:middle
提供硬件支持

00:19:15.186 --> 00:19:17.836 A:middle
比如含有

00:19:17.836 --> 00:19:18.696 A:middle
Multi-Touch Bar 的新 Macbook Pro

00:19:18.696 --> 00:19:21.396 A:middle
但是我们在

00:19:21.396 --> 00:19:22.896 A:middle
所有支持的 iOS 和 macOS 设备上

00:19:22.896 --> 00:19:25.196 A:middle
都提供软件解码支持

00:19:28.236 --> 00:19:30.026 A:middle
那么我们在哪些地方

00:19:30.026 --> 00:19:30.546 A:middle
支持 HEIF 图像呢

00:19:32.136 --> 00:19:34.446 A:middle
ImageIO 是 Apple 最低等级的

00:19:35.036 --> 00:19:35.896 A:middle
图像框架

00:19:36.066 --> 00:19:37.826 A:middle
它支持 HEIF 作为解码源

00:19:37.826 --> 00:19:40.146 A:middle
增量加载

00:19:40.176 --> 00:19:41.726 A:middle
元数据

00:19:41.726 --> 00:19:42.376 A:middle
和缩略图提取

00:19:42.806 --> 00:19:44.156 A:middle
这与使用其他相同 API 的

00:19:44.156 --> 00:19:46.396 A:middle
受支持的文件格式

00:19:46.396 --> 00:19:49.886 A:middle
是一致的

00:19:50.226 --> 00:19:51.926 A:middle
Core Image

00:19:51.926 --> 00:19:53.256 A:middle
也支持 HEIF

00:19:53.256 --> 00:19:54.006 A:middle
作为实时图像处理源

00:19:56.256 --> 00:19:57.666 A:middle
允许访问照片库素材

00:19:57.666 --> 00:19:59.186 A:middle
的 PhotoKit API

00:19:59.186 --> 00:20:00.576 A:middle
同样支持

00:19:59.186 --> 00:20:00.576 A:middle
同样支持

00:20:00.576 --> 00:20:02.256 A:middle
直接读取 HEIF

00:20:02.256 --> 00:20:03.906 A:middle
我会在

00:20:03.906 --> 00:20:05.006 A:middle
接下来的幻灯片中

00:20:05.006 --> 00:20:05.546 A:middle
详细讨论这个框架

00:20:08.336 --> 00:20:10.206 A:middle
Apple 的许多

00:20:10.206 --> 00:20:11.686 A:middle
基于媒体的应用程序也会

00:20:11.686 --> 00:20:12.506 A:middle
自然适配 HEIF

00:20:12.626 --> 00:20:14.536 A:middle
比如照片

00:20:14.596 --> 00:20:16.576 A:middle
预览 快速预览

00:20:16.576 --> 00:20:17.436 A:middle
除此之外还有很多

00:20:19.806 --> 00:20:21.246 A:middle
好的 我们来看看我们的

00:20:21.246 --> 00:20:22.496 A:middle
电影格式并讨论一下

00:20:22.496 --> 00:20:24.626 A:middle
Apple 拍摄的

00:20:24.716 --> 00:20:25.346 A:middle
HEVC 电影

00:20:27.796 --> 00:20:28.906 A:middle
比起我们最新支持的图像格式

00:20:28.906 --> 00:20:30.816 A:middle
电影格式的变化

00:20:30.816 --> 00:20:31.536 A:middle
并没有那么大

00:20:32.076 --> 00:20:33.526 A:middle
目前我们仍在使用

00:20:33.526 --> 00:20:36.446 A:middle
QuickTime 文件格式

00:20:36.486 --> 00:20:38.336 A:middle
但其实视频帧是用 HEVC 编码的

00:20:38.826 --> 00:20:40.116 A:middle
我们已经了解到

00:20:40.446 --> 00:20:41.796 A:middle
Apple 拍摄的视频

00:20:41.836 --> 00:20:42.946 A:middle
将会获得相较 H.264

00:20:42.946 --> 00:20:44.686 A:middle
2 倍的压缩效果

00:20:44.686 --> 00:20:46.346 A:middle
此外 我想重申

00:20:46.346 --> 00:20:48.126 A:middle
我们的图像和视频格式

00:20:48.306 --> 00:20:50.096 A:middle
都将会使用

00:20:50.096 --> 00:20:50.966 A:middle
HEVC 进行编码

00:20:55.996 --> 00:20:58.846 A:middle
我们也支持

00:20:58.846 --> 00:20:59.826 A:middle
8bit 和 10bit 编码

00:21:00.226 --> 00:21:01.626 A:middle
对于你们之中非常在意

00:21:01.626 --> 00:21:03.156 A:middle
图像质量或者深色技术的人

00:21:03.156 --> 00:21:05.376 A:middle
我们在 macOS 上将会有

00:21:05.426 --> 00:21:06.996 A:middle
非实时的 10bit 软件编码器

00:21:06.996 --> 00:21:08.606 A:middle
以满足你们的需求

00:21:11.786 --> 00:21:13.076 A:middle
你们将会很高兴知道

00:21:13.176 --> 00:21:14.166 A:middle
在这个新的格式中

00:21:14.166 --> 00:21:15.776 A:middle
我们保留了 .mov

00:21:15.776 --> 00:21:17.476 A:middle
这个 3 字符的扩展名

00:21:17.476 --> 00:21:18.576 A:middle
所以你们不需要为这个媒体格式

00:21:18.856 --> 00:21:20.896 A:middle
更新任何

00:21:23.656 --> 00:21:24.056 A:middle
文件名解析器

00:21:24.636 --> 00:21:27.066 A:middle
好的 那么我们在哪里

00:21:27.316 --> 00:21:29.636 A:middle
为 HEVC 电影提供解码支持呢

00:21:29.926 --> 00:21:31.496 A:middle
我们有 8bit 和 10bit 解码

00:21:31.646 --> 00:21:33.606 A:middle
它们在我们所有支持的平台上可用

00:21:33.606 --> 00:21:34.896 A:middle
如安装了 macOS 10.3

00:21:34.896 --> 00:21:37.286 A:middle
或 iOS 11 的平台

00:21:37.286 --> 00:21:38.996 A:middle
但其实还有更多的

00:21:38.996 --> 00:21:41.366 A:middle
硬件软件支持

00:21:41.366 --> 00:21:43.606 A:middle
对于 iOS

00:21:43.606 --> 00:21:45.086 A:middle
我们在 A9 芯片及以上的配置上

00:21:45.086 --> 00:21:46.546 A:middle
提供 8bit 和 10bit 硬件解码

00:21:47.396 --> 00:21:49.516 A:middle
这里依然可以用

00:21:49.516 --> 00:21:50.326 A:middle
iPhone 6s 作为例子

00:21:51.286 --> 00:21:52.816 A:middle
对于 macOS

00:21:52.816 --> 00:21:53.936 A:middle
我们在第六代 Intel Core

00:21:53.936 --> 00:21:55.376 A:middle
也就是 Skylake 家族

00:21:55.376 --> 00:21:56.916 A:middle
以上的处理器上

00:21:56.916 --> 00:21:58.066 A:middle
提供 8bit 硬件解码

00:21:58.486 --> 00:22:00.346 A:middle
我们在第七代 Intel Core

00:21:58.486 --> 00:22:00.346 A:middle
我们在第七代 Intel Core

00:22:00.346 --> 00:22:01.696 A:middle
也就是 Kaby Lake

00:22:01.736 --> 00:22:03.326 A:middle
家族处理器上

00:22:03.326 --> 00:22:05.046 A:middle
提供 10bit

00:22:05.046 --> 00:22:06.276 A:middle
硬件解码支持

00:22:06.966 --> 00:22:09.176 A:middle
我们在所有

00:22:09.176 --> 00:22:10.946 A:middle
受支持的 macOS 和 iOS 平台上

00:22:10.946 --> 00:22:13.756 A:middle
提供 8bit 和 10bit

00:22:13.796 --> 00:22:14.306 A:middle
软件解码

00:22:18.296 --> 00:22:20.236 A:middle
好的 那我们都在哪里

00:22:20.236 --> 00:22:21.076 A:middle
支持 HEVC 电影呢

00:22:24.066 --> 00:22:25.946 A:middle
AVFoundation 是管理电影的

00:22:25.946 --> 00:22:27.666 A:middle
主要框架

00:22:27.886 --> 00:22:29.416 A:middle
对于 HEVC 内容

00:22:29.416 --> 00:22:30.996 A:middle
它支持播放

00:22:30.996 --> 00:22:31.576 A:middle
创建和编辑工作流

00:22:32.086 --> 00:22:35.366 A:middle
PhotoKit 会提供

00:22:35.366 --> 00:22:38.066 A:middle
原始的 HEVC 电影

00:22:38.186 --> 00:22:40.386 A:middle
WebKit 也可以播放

00:22:40.386 --> 00:22:43.976 A:middle
HEVC 电影 但是只能在

00:22:43.976 --> 00:22:45.576 A:middle
拥有硬件加速的设备上

00:22:45.576 --> 00:22:47.746 A:middle
和所有 macOS 台式电脑上

00:22:48.456 --> 00:22:50.426 A:middle
我们也支持以鼓励

00:22:50.546 --> 00:22:52.706 A:middle
使用 HEVC

00:22:52.706 --> 00:22:53.816 A:middle
作为 HLS 流媒体

00:22:54.766 --> 00:22:55.796 A:middle
这为提高

00:22:55.796 --> 00:22:58.536 A:middle
网络吞吐量

00:22:59.076 --> 00:22:59.696 A:middle
提供了一个很棒的机会

00:23:00.506 --> 00:23:01.706 A:middle
此外 下一场会议

00:23:01.706 --> 00:23:03.026 A:middle
将会讨论

00:23:03.026 --> 00:23:05.046 A:middle
更多关于此项创新

00:23:05.046 --> 00:23:06.026 A:middle
的细节

00:23:08.336 --> 00:23:10.426 A:middle
我们有很多

00:23:10.426 --> 00:23:11.656 A:middle
Apple 应用程序

00:23:11.656 --> 00:23:13.546 A:middle
自然适配 HEVC 电影

00:23:13.546 --> 00:23:14.736 A:middle
比如 QuickTime 播放器 快速预览

00:23:14.736 --> 00:23:17.096 A:middle
照片以及 FaceTime

00:23:17.256 --> 00:23:19.096 A:middle
这是一个很棒的

00:23:19.156 --> 00:23:21.046 A:middle
提高网络吞吐量的

00:23:21.046 --> 00:23:21.556 A:middle
HEVC 用例

00:23:22.336 --> 00:23:25.646 A:middle
总而言之  针对 HEVC

00:23:25.736 --> 00:23:28.536 A:middle
我们为我们所有的设备 提供了解码支持

00:23:28.996 --> 00:23:30.036 A:middle
那么播放呢？

00:23:30.596 --> 00:23:32.176 A:middle
可以解码和

00:23:32.176 --> 00:23:33.736 A:middle
可以播放之间有很重要的区别

00:23:33.736 --> 00:23:35.446 A:middle
在 HEVC 中

00:23:35.556 --> 00:23:37.486 A:middle
尤其如此

00:23:38.176 --> 00:23:40.306 A:middle
这是我们中很多人

00:23:40.306 --> 00:23:41.016 A:middle
都不熟悉的一个地方

00:23:41.166 --> 00:23:42.456 A:middle
对于默认的拍摄格式

00:23:42.456 --> 00:23:43.996 A:middle
我们并非在所有

00:23:43.996 --> 00:23:46.116 A:middle
受支持设备上

00:23:46.116 --> 00:23:46.856 A:middle
都有硬件加速

00:23:47.646 --> 00:23:48.826 A:middle
这是一个我们长时间以来

00:23:48.826 --> 00:23:50.436 A:middle
都不需要处理的问题

00:23:50.436 --> 00:23:53.736 A:middle
因为 H.264 硬件解码

00:23:53.736 --> 00:23:57.506 A:middle
在目前非常普遍

00:23:57.556 --> 00:23:58.946 A:middle
我们所有的电影格式

00:23:58.946 --> 00:24:01.026 A:middle
都可以解码

00:23:58.946 --> 00:24:01.026 A:middle
都可以解码

00:24:01.026 --> 00:24:02.466 A:middle
但是在一些软件系统上

00:24:02.466 --> 00:24:03.346 A:middle
会有一些格式的解码

00:24:03.346 --> 00:24:04.636 A:middle
速度远不能达到实时

00:24:04.636 --> 00:24:06.106 A:middle
且仅支持导出

00:24:06.106 --> 00:24:07.276 A:middle
或者转码工作流

00:24:07.276 --> 00:24:08.716 A:middle
那么你如何判断

00:24:08.716 --> 00:24:11.176 A:middle
在一个给定设备上

00:24:11.866 --> 00:24:13.396 A:middle
某个格式

00:24:13.396 --> 00:24:13.896 A:middle
适合播放呢

00:24:15.576 --> 00:24:18.026 A:middle
在 AVFoundation 的 API 中

00:24:18.026 --> 00:24:19.646 A:middle
有一个概念叫做

00:24:19.736 --> 00:24:20.466 A:middle
isPlayable

00:24:21.246 --> 00:24:22.346 A:middle
这指示着

00:24:22.346 --> 00:24:24.106 A:middle
一个设备的视频等级

00:24:24.326 --> 00:24:26.136 A:middle
是否支持播放某个电影

00:24:26.946 --> 00:24:28.336 A:middle
如果它为真

00:24:28.336 --> 00:24:29.936 A:middle
你将会体验到

00:24:29.936 --> 00:24:31.426 A:middle
流畅的视频播放

00:24:31.536 --> 00:24:33.146 A:middle
而不会遇到任何

00:24:33.146 --> 00:24:34.466 A:middle
显著的卡顿

00:24:36.856 --> 00:24:39.416 A:middle
例如 尽管 Apple 拍摄的

00:24:39.416 --> 00:24:41.236 A:middle
4K30 在所有

00:24:41.236 --> 00:24:42.296 A:middle
受支持的系统中

00:24:42.296 --> 00:24:44.166 A:middle
都可以解码

00:24:44.166 --> 00:24:45.296 A:middle
但是在我们的

00:24:45.296 --> 00:24:46.746 A:middle
某些旧设备上却不能播放

00:24:46.746 --> 00:24:47.606 A:middle
比如 iPhone 5s

00:24:47.666 --> 00:24:49.226 A:middle
这就需要我们的

00:24:49.226 --> 00:24:49.906 A:middle
开发人员了

00:24:49.906 --> 00:24:51.306 A:middle
在这个点上

00:24:51.306 --> 00:24:52.726 A:middle
时刻观察这些

00:24:53.036 --> 00:24:54.656 A:middle
可播放状态

00:24:55.086 --> 00:24:56.876 A:middle
来保证最佳的用户体验

00:24:56.876 --> 00:24:58.246 A:middle
十分重要

00:25:01.936 --> 00:25:04.276 A:middle
好的 对于很多开发人员来说

00:25:04.276 --> 00:25:05.686 A:middle
他们与原始 HEIF

00:25:05.686 --> 00:25:07.366 A:middle
和 HEVC 内容的

00:25:07.366 --> 00:25:09.376 A:middle
第一次互动是通过公开的

00:25:10.196 --> 00:25:10.346 A:middle
照片 API

00:25:11.576 --> 00:25:13.466 A:middle
PhotoKit 是一个在 iOS 上

00:25:13.466 --> 00:25:14.956 A:middle
广泛使用的照片 API

00:25:15.666 --> 00:25:16.726 A:middle
在此次大会上

00:25:16.726 --> 00:25:17.756 A:middle
会宣布一些关于

00:25:17.756 --> 00:25:19.896 A:middle
它在 macOS 上的可用性

00:25:19.896 --> 00:25:21.866 A:middle
请在明天参加

00:25:21.866 --> 00:25:22.866 A:middle
关于照片新特性的会议

00:25:22.866 --> 00:25:24.826 A:middle
以了解更多细节

00:25:24.826 --> 00:25:26.796 A:middle
它会支持原始 HEIF 和 HEVC

00:25:27.496 --> 00:25:28.546 A:middle
电影内容

00:25:28.886 --> 00:25:30.226 A:middle
过时的

00:25:30.276 --> 00:25:31.966 A:middle
AssetLibrary 框架

00:25:31.966 --> 00:25:33.836 A:middle
在开发社区

00:25:33.836 --> 00:25:34.226 A:middle
仍然非常流行

00:25:34.226 --> 00:25:36.946 A:middle
它也会支持 HEIF 和

00:25:37.866 --> 00:25:39.536 A:middle
HEVC 内容

00:25:40.116 --> 00:25:41.586 A:middle
在 macOS 上

00:25:41.586 --> 00:25:42.626 A:middle
我们还有 Media Library API

00:25:43.286 --> 00:25:45.406 A:middle
对于这个 API

00:25:45.406 --> 00:25:46.616 A:middle
它将只会支持

00:25:46.616 --> 00:25:48.556 A:middle
转码的 HEIF 和 HEVC

00:25:48.556 --> 00:25:51.366 A:middle
因为 JPEG 和 H.264

00:25:51.366 --> 00:25:52.406 A:middle
有相同的分辨率

00:25:55.796 --> 00:25:56.886 A:middle
由于使用 PhotoKit 在

00:25:56.886 --> 00:25:58.386 A:middle
Apple 平台上

00:25:58.386 --> 00:25:59.766 A:middle
访问媒体十分流行

00:25:59.766 --> 00:26:01.116 A:middle
我想要强调一些类

00:25:59.766 --> 00:26:01.116 A:middle
我想要强调一些类

00:26:01.496 --> 00:26:02.606 A:middle
通过它们你可以

00:26:02.606 --> 00:26:04.276 A:middle
访问 HEIF 和 HEVC 内容

00:26:05.916 --> 00:26:07.986 A:middle
当请求图像时

00:26:07.986 --> 00:26:09.066 A:middle
你可以使用 PHImageManager

00:26:09.766 --> 00:26:11.136 A:middle
通过这个类

00:26:11.136 --> 00:26:13.136 A:middle
你可以请求原始 HEIF 图像

00:26:14.056 --> 00:26:15.216 A:middle
此外 当请求视频
00:26:15.216 --> 00:26:17.166 A:middle
对象的时候

00:26:17.166 --> 00:26:19.506 A:middle
你也可以使用 PHImageManager

00:26:19.506 --> 00:26:20.396 A:middle
来请求原始的 HEVC 电影

00:26:22.176 --> 00:26:25.676 A:middle
对于管理资源

00:26:25.676 --> 00:26:28.126 A:middle
我们有 PHAssetResourceManager

00:26:28.126 --> 00:26:29.696 A:middle
它可以让你管理

00:26:29.696 --> 00:26:31.006 A:middle
照片库中所有

00:26:31.006 --> 00:26:31.496 A:middle
零散的资源

00:26:31.776 --> 00:26:33.296 A:middle
这些资源可以是

00:26:33.296 --> 00:26:34.246 A:middle
HEIF 和 HEVC 内容

00:26:37.416 --> 00:26:39.026 A:middle
对于编辑工作流

00:26:39.026 --> 00:26:41.066 A:middle
我们有 PHContentEditingInput

00:26:41.066 --> 00:26:43.226 A:middle
它会支持 HEIF 图像

00:26:43.276 --> 00:26:45.466 A:middle
或 HEVC 电影作为

00:26:45.466 --> 00:26:46.146 A:middle
编辑阶段的输入

00:26:46.726 --> 00:26:50.716 A:middle
我想要着重强调

00:26:50.716 --> 00:26:51.966 A:middle
如果你已经在

00:26:51.966 --> 00:26:53.386 A:middle
使用 Apple 框架

00:26:53.416 --> 00:26:55.326 A:middle
来管理媒体

00:26:55.326 --> 00:26:57.256 A:middle
那么转变到 HEIF 或 HEVC

00:26:57.256 --> 00:26:58.266 A:middle
将会非常容易

00:26:58.656 --> 00:26:59.956 A:middle
另一个方面 如果你有自己的

00:26:59.956 --> 00:27:01.596 A:middle
图像或视频堆栈

00:26:59.956 --> 00:27:01.596 A:middle
图像或视频堆栈

00:27:01.596 --> 00:27:03.686 A:middle
你可能需要重新访问

00:27:03.686 --> 00:27:05.426 A:middle
那些集成内容并

00:27:05.426 --> 00:27:06.626 A:middle
考虑采用一个合适的

00:27:06.626 --> 00:27:08.356 A:middle
Apple 框架

00:27:08.986 --> 00:27:11.466 A:middle
可选的框架有

00:27:11.466 --> 00:27:14.376 A:middle
针对图像的 ImageIO

00:27:15.786 --> 00:27:18.206 A:middle
针对视频的 AVFoundation

00:27:18.366 --> 00:27:19.386 A:middle
针对视频帧或者

00:27:20.396 --> 00:27:22.366 A:middle
图像处理的 Core Image

00:27:24.236 --> 00:27:26.556 A:middle
针对展示 我们有 UIKit

00:27:26.556 --> 00:27:27.746 A:middle
针对访问

00:27:27.746 --> 00:27:28.236 A:middle
在照片库中的资源 我们有 PhotoKit

00:27:29.086 --> 00:27:30.776 A:middle
通过这些框架

00:27:30.776 --> 00:27:32.466 A:middle
来使用 HEIF 和 HEVC

00:27:32.466 --> 00:27:33.176 A:middle
将会非常容易

00:27:35.546 --> 00:27:36.896 A:middle
我想向大家推荐

00:27:36.896 --> 00:27:38.166 A:middle
另一个将会在

00:27:38.246 --> 00:27:40.236 A:middle
周五上午 11:00 举行的会议

00:27:40.236 --> 00:27:41.116 A:middle
叫做 使用 HEIF 和 HEVC

00:27:41.206 --> 00:27:42.996 A:middle
届时将会有很多关于

00:27:42.996 --> 00:27:45.226 A:middle
如何在这些框架下使用 HEIF 和 HEVC

00:27:45.326 --> 00:27:46.996 A:middle
的示例代码

00:27:47.606 --> 00:27:49.166 A:middle
我强烈推荐

00:27:50.446 --> 00:27:52.546 A:middle
好的 以上就是关于访问的内容

00:27:52.796 --> 00:27:54.256 A:middle
我们继续来看创建

00:27:55.406 --> 00:27:57.646 A:middle
那么 我们如何创建

00:27:57.646 --> 00:27:59.546 A:middle
HEIF 图像和

00:27:59.546 --> 00:28:00.076 A:middle
HEVC 电影内容呢

00:27:59.546 --> 00:28:00.076 A:middle
HEVC 电影内容呢

00:28:01.356 --> 00:28:03.236 A:middle
如你所见 我们目前

00:28:03.236 --> 00:28:05.586 A:middle
在 iOS 上仅在最低配置为

00:28:05.586 --> 00:28:08.096 A:middle
A10 Fusion 芯片的硬件上

00:28:08.096 --> 00:28:09.556 A:middle
提供 HEIF 编码支持

00:28:09.556 --> 00:28:11.316 A:middle
这样的硬件包括

00:28:11.316 --> 00:28:13.026 A:middle
iPhone 7 和

00:28:13.026 --> 00:28:13.956 A:middle
iPhone 7 Plus

00:28:14.516 --> 00:28:15.816 A:middle
这里要注意的是

00:28:15.816 --> 00:28:17.256 A:middle
macOS 并不支持

00:28:17.256 --> 00:28:21.036 A:middle
HEIF 编码

00:28:21.636 --> 00:28:23.856 A:middle
我们如何创建 HEIF 图像呢

00:28:24.766 --> 00:28:26.726 A:middle
ImageIO 支持 HEIF

00:28:26.726 --> 00:28:27.476 A:middle
作为输出

00:28:28.046 --> 00:28:28.816 A:middle
你可以考虑

00:28:28.816 --> 00:28:31.456 A:middle
将你的 JPEG 资源

00:28:31.456 --> 00:28:33.546 A:middle
转码为 HEIF 以获得更好的

00:28:33.666 --> 00:28:34.726 A:middle
存储能力或者网络收益

00:28:35.206 --> 00:28:38.596 A:middle
此外 AVFoundation 捕获 API

00:28:38.596 --> 00:28:40.616 A:middle
将会支持直接

00:28:40.616 --> 00:28:43.906 A:middle
从相机拍摄 HEIF

00:28:44.846 --> 00:28:47.516 A:middle
如 Athar 刚刚所说

00:28:47.516 --> 00:28:48.786 A:middle
所有 Apple 相机模式将会默认

00:28:48.786 --> 00:28:50.146 A:middle
生成 HEIF 格式

00:28:50.146 --> 00:28:51.026 A:middle
连拍模式除外

00:28:51.346 --> 00:28:52.306 A:middle
如果你已经

00:28:52.366 --> 00:28:53.746 A:middle
在受支持的硬件上

00:28:53.746 --> 00:28:55.136 A:middle
下载了开发者预览版

00:28:55.136 --> 00:28:57.576 A:middle
那么当你在照相时

00:28:57.576 --> 00:28:58.306 A:middle
将会获取 HEIF 格式的照片

00:28:59.746 --> 00:29:01.576 A:middle
值得再次强调的是

00:28:59.746 --> 00:29:01.576 A:middle
值得再次强调的是

00:29:01.776 --> 00:29:03.506 A:middle
只有 HEIC 这个 HEIF 变体

00:29:03.506 --> 00:29:05.126 A:middle
在 Apple 框架的代码中

00:29:05.126 --> 00:29:06.146 A:middle
受到支持

00:29:06.586 --> 00:29:08.116 A:middle
对于 .hvc 的 HEIF 编码图像

00:29:08.206 --> 00:29:09.436 A:middle
也是如此

00:29:09.986 --> 00:29:14.206 A:middle
我们来看看电影创建

00:29:14.486 --> 00:29:16.316 A:middle
这里是一个展示

00:29:16.556 --> 00:29:18.116 A:middle
我们在哪些地方

00:29:18.116 --> 00:29:18.586 A:middle
支持 HEVC 编码的表格

00:29:19.466 --> 00:29:21.276 A:middle
在 iOS 中 我们在

00:29:21.276 --> 00:29:22.876 A:middle
最低配置为 A10 Fusion 芯片上

00:29:22.876 --> 00:29:24.626 A:middle
提供了 8bit 编码支持

00:29:24.626 --> 00:29:26.296 A:middle
比如 iPhone 7

00:29:27.076 --> 00:29:29.316 A:middle
在 macOS 中 我们在

00:29:29.316 --> 00:29:30.816 A:middle
六代 Intel Core 处理器

00:29:30.816 --> 00:29:32.146 A:middle
或 Skylake 家族处理器上

00:29:32.146 --> 00:29:33.786 A:middle
提供了 8bit 硬件编码

00:29:34.706 --> 00:29:36.776 A:middle
另外 在 macOS 中

00:29:36.776 --> 00:29:39.086 A:middle
我们提供了 10bit 软件编码支持

00:29:39.916 --> 00:29:42.226 A:middle
我们如何创建 HEVC 电影呢

00:29:43.756 --> 00:29:45.686 A:middle
AVFoundation 是一个

00:29:45.686 --> 00:29:46.816 A:middle
电影创建框架

00:29:47.286 --> 00:29:49.016 A:middle
HEVC 电影可以在

00:29:49.016 --> 00:29:50.596 A:middle
AVFoundation 的导出阶段

00:29:50.596 --> 00:29:51.036 A:middle
创建

00:29:51.566 --> 00:29:55.536 A:middle
你可以将 H.264 导出为

00:29:55.536 --> 00:29:56.676 A:middle
HEVC 以获得更好的存储能力

00:29:56.676 --> 00:29:57.866 A:middle
或者网络优化

00:29:58.496 --> 00:30:01.666 A:middle
你也可以直接通过

00:29:58.496 --> 00:30:01.666 A:middle
你也可以直接通过

00:30:01.666 --> 00:30:03.056 A:middle
AVFoundation 的捕获阶段

00:30:03.056 --> 00:30:06.776 A:middle
使用相机来直接拍摄 HEIF 电影

00:30:07.066 --> 00:30:08.746 A:middle
所有当前的

00:30:08.746 --> 00:30:10.766 A:middle
相机录制模式都会默认生成

00:30:10.766 --> 00:30:12.456 A:middle
HEVC 编码的电影

00:30:12.456 --> 00:30:13.996 A:middle
所以 如果你已经

00:30:13.996 --> 00:30:15.846 A:middle
安装了开发者预览版

00:30:15.846 --> 00:30:18.456 A:middle
在你拍摄电影时

00:30:18.456 --> 00:30:22.856 A:middle
它们其实已经是 HEVC 电影了

00:30:23.336 --> 00:30:24.246 A:middle
以上是创建

00:30:24.926 --> 00:30:26.486 A:middle
接下来我们来讨论一下转移

00:30:27.536 --> 00:30:29.256 A:middle
在我们想要在创建设备

00:30:29.256 --> 00:30:30.186 A:middle
或其他受支持设备上

00:30:30.186 --> 00:30:31.846 A:middle
转移 HEIF 图像

00:30:31.846 --> 00:30:35.636 A:middle
或 HEVC 电影时

00:30:35.636 --> 00:30:36.996 A:middle
我们需要考虑什么问题呢

00:30:39.556 --> 00:30:41.366 A:middle
在受支持设备上

00:30:41.366 --> 00:30:43.136 A:middle
转移 HEIF 或 HEVC 时

00:30:43.136 --> 00:30:44.456 A:middle
你没有与 JPEG 或 H.264 上

00:30:44.456 --> 00:30:46.656 A:middle
相同的生态系统

00:30:46.656 --> 00:30:47.196 A:middle
以提供代码支持

00:30:47.806 --> 00:30:48.616 A:middle
你可能想要

00:30:48.616 --> 00:30:49.426 A:middle
考虑转码

00:30:50.776 --> 00:30:52.336 A:middle
这里是一些你可能

00:30:52.336 --> 00:30:53.096 A:middle
想要考虑的方法

00:30:53.626 --> 00:30:55.346 A:middle
首先也是最简单的方法是

00:30:55.346 --> 00:30:56.916 A:middle
总是转码

00:30:58.056 --> 00:30:59.806 A:middle
另一个选项可以是

00:30:59.806 --> 00:31:02.036 A:middle
支持适用性互验

00:30:59.806 --> 00:31:02.036 A:middle
支持适用性互验

00:31:02.566 --> 00:31:05.766 A:middle
我们首先来看看

00:31:05.766 --> 00:31:07.226 A:middle
转码的

00:31:07.226 --> 00:31:08.476 A:middle
工作流示例

00:31:10.816 --> 00:31:12.466 A:middle
在这个例子中 你有一个自己的

00:31:12.466 --> 00:31:13.806 A:middle
社交网络客户端

00:31:13.926 --> 00:31:15.806 A:middle
允许用户在时间线上

00:31:15.806 --> 00:31:17.966 A:middle
添加 HEIF 或 HEVC 内容

00:31:19.336 --> 00:31:21.076 A:middle
由于这个结构

00:31:21.076 --> 00:31:22.266 A:middle
想要评估所有

00:31:22.266 --> 00:31:24.106 A:middle
接收设备的适用性

00:31:24.106 --> 00:31:25.786 A:middle
是不可能的

00:31:25.786 --> 00:31:27.266 A:middle
而且服务器可能

00:31:27.266 --> 00:31:27.716 A:middle
没有能力进行转码

00:31:29.016 --> 00:31:31.306 A:middle
所以我们只能选择

00:31:31.306 --> 00:31:32.016 A:middle
转码

00:31:32.566 --> 00:31:37.326 A:middle
在这种情况下

00:31:37.526 --> 00:31:38.986 A:middle
受支持和不受支持的设备

00:31:38.986 --> 00:31:40.366 A:middle
都会接收到

00:31:40.366 --> 00:31:42.226 A:middle
转码后的文件

00:31:42.226 --> 00:31:47.426 A:middle
比如 JPEG 或 H.264

00:31:47.426 --> 00:31:48.856 A:middle
另一个我们可能会

00:31:48.856 --> 00:31:49.666 A:middle
考虑的方法是

00:31:49.666 --> 00:31:51.106 A:middle
适用性互验

00:31:52.046 --> 00:31:53.496 A:middle
我们来看看这种

00:31:53.546 --> 00:31:54.386 A:middle
工作流的示例

00:31:55.776 --> 00:31:56.866 A:middle
你可能有一个应用

00:31:57.426 --> 00:31:58.696 A:middle
采用了 Apple 的

00:31:58.696 --> 00:32:00.366 A:middle
多点连接

00:31:58.696 --> 00:32:00.366 A:middle
多点连接

00:32:00.366 --> 00:32:00.796 A:middle
API

00:32:01.696 --> 00:32:03.246 A:middle
如果你正在与一个

00:32:03.246 --> 00:32:04.986 A:middle
受支持设备进行媒体交换

00:32:04.986 --> 00:32:06.476 A:middle
你不希望总是出现由

00:32:06.476 --> 00:32:07.966 A:middle
发送转码后的

00:32:07.966 --> 00:32:09.526 A:middle
JPEG 或 H.264

00:32:09.526 --> 00:32:11.826 A:middle
导致的转码成本和高网络延迟

00:32:12.356 --> 00:32:15.086 A:middle
你可以在初始的

00:32:15.086 --> 00:32:16.496 A:middle
握手中引入

00:32:16.496 --> 00:32:17.436 A:middle
可用性互验

00:32:19.716 --> 00:32:21.736 A:middle
发送设备将会

00:32:21.736 --> 00:32:23.336 A:middle
评估接收设备

00:32:23.336 --> 00:32:24.976 A:middle
的适用性

00:32:24.976 --> 00:32:26.276 A:middle
并决定是否转码

00:32:27.046 --> 00:32:29.196 A:middle
我们希望 随着时间的推移

00:32:29.196 --> 00:32:30.576 A:middle
支持这些格式的情况越来越多

00:32:30.746 --> 00:32:34.776 A:middle
我们需要转码的次数

00:32:34.776 --> 00:32:36.566 A:middle
越来越少

00:32:37.426 --> 00:32:38.916 A:middle
这个策略对于

00:32:38.916 --> 00:32:40.646 A:middle
P2P 和客户端／服务器结构

00:32:40.646 --> 00:32:42.026 A:middle
都非常适用

00:32:44.676 --> 00:32:46.566 A:middle
那么 Apple 是如何处理

00:32:46.566 --> 00:32:47.606 A:middle
这么多相似的工作流的呢

00:32:47.996 --> 00:32:51.616 A:middle
这里是一些例子

00:32:51.876 --> 00:32:53.406 A:middle
比如邮件

00:32:53.486 --> 00:32:54.796 A:middle
评估所有

00:32:54.796 --> 00:32:56.306 A:middle
接收客户端的适用性

00:32:56.306 --> 00:32:57.286 A:middle
不太现实

00:32:57.286 --> 00:32:58.536 A:middle
我们也并没有支持转码的服务器

00:32:58.536 --> 00:33:00.646 A:middle
所以在把 HEIF 或 HEVC

00:32:58.536 --> 00:33:00.646 A:middle
所以在把 HEIF 或 HEVC

00:33:00.646 --> 00:33:03.746 A:middle
作为邮件附件发送时

00:33:03.816 --> 00:33:06.026 A:middle
我们总是转码

00:33:06.576 --> 00:33:08.956 A:middle
对于那些有

00:33:08.956 --> 00:33:11.066 A:middle
分享扩展的开发人员

00:33:11.066 --> 00:33:14.016 A:middle
我们也将会在发送 HEIF 或 HEVC 之前

00:33:14.016 --> 00:33:16.556 A:middle
进行转码

00:33:16.686 --> 00:33:18.646 A:middle
不管怎样

00:33:18.716 --> 00:33:20.576 A:middle
这简化了当前的集成

00:33:22.796 --> 00:33:24.566 A:middle
我们也针对

00:33:24.566 --> 00:33:25.686 A:middle
一定数量的工作流

00:33:25.686 --> 00:33:26.696 A:middle
采用了适用性互验

00:33:26.996 --> 00:33:29.466 A:middle
比如 P2P

00:33:29.466 --> 00:33:29.896 A:middle
和 AirDrop

00:33:30.596 --> 00:33:33.166 A:middle
有了这些集成

00:33:33.166 --> 00:33:34.996 A:middle
我们总会评估

00:33:34.996 --> 00:33:37.306 A:middle
接收端的适用性

00:33:37.406 --> 00:33:39.546 A:middle
并决定是否转码

00:33:42.976 --> 00:33:44.816 A:middle
最后

00:33:44.816 --> 00:33:46.736 A:middle
有一些 HEIF 和

00:33:46.786 --> 00:33:48.136 A:middle
HEVC 的重点

00:33:48.806 --> 00:33:48.966 A:middle
我想要强调一下

00:33:50.256 --> 00:33:52.616 A:middle
HEVC 是 Apple 的

00:33:52.616 --> 00:33:54.306 A:middle
下一代编解码器

00:33:54.576 --> 00:33:56.776 A:middle
我们将会在编码

00:33:56.776 --> 00:33:58.506 A:middle
图像和视频中使用它

00:33:58.506 --> 00:33:59.606 A:middle
它将会为 Apple 拍摄的内容

00:33:59.606 --> 00:34:00.856 A:middle
提供多达两倍的

00:33:59.606 --> 00:34:00.856 A:middle
提供多达两倍的

00:34:00.856 --> 00:34:01.376 A:middle
压缩效果提升

00:34:01.896 --> 00:34:05.796 A:middle
我们将会采用 HEIF

00:34:05.796 --> 00:34:06.556 A:middle
作为我们的图像文件格式

00:34:07.766 --> 00:34:09.295 A:middle
这个图像容器将会

00:34:09.295 --> 00:34:10.916 A:middle
为我们提供一个灵活的

00:34:10.916 --> 00:34:14.255 A:middle
在将来很好使用的格式

00:34:14.826 --> 00:34:16.696 A:middle
如果你正在 Apple 生态系统中

00:34:16.696 --> 00:34:18.726 A:middle
使用 Apple 框架

00:34:18.726 --> 00:34:20.966 A:middle
那么转变到 HEIF 和 HEVC

00:34:20.966 --> 00:34:22.295 A:middle
将会非常容易

00:34:22.956 --> 00:34:23.856 A:middle
但如果你需要

00:34:23.856 --> 00:34:25.016 A:middle
在我们的生态系统外

00:34:25.016 --> 00:34:26.666 A:middle
移动内容

00:34:27.136 --> 00:34:28.806 A:middle
你需要考虑转码选项

00:34:28.806 --> 00:34:30.646 A:middle
来为我们的用户提供

00:34:30.985 --> 00:34:34.976 A:middle
最佳的向后兼容性

00:34:35.096 --> 00:34:36.886 A:middle
最后 我们非常希望

00:34:36.886 --> 00:34:39.835 A:middle
开发人员们可以接纳

00:34:39.835 --> 00:34:42.016 A:middle
HEIF 和 HEVC

00:34:42.076 --> 00:34:43.966 A:middle
作为创建和访问工作流

00:34:43.966 --> 00:34:45.565 A:middle
因为我们相信

00:34:45.565 --> 00:34:47.275 A:middle
这将不仅为开发人员 更为我们的顾客

00:34:47.275 --> 00:34:48.106 A:middle
提供很大的益处

00:34:48.755 --> 00:34:50.656 A:middle
要想了解更多

00:34:50.656 --> 00:34:51.826 A:middle
关于这次会议的细节

00:34:51.826 --> 00:34:58.376 A:middle
你可以访问如下网站

00:34:58.376 --> 00:35:00.756 A:middle
但我们仍有一系列别的会议

00:34:58.376 --> 00:35:00.756 A:middle
但我们仍有一系列别的会议

00:35:00.756 --> 00:35:01.166 A:middle
和研究室

00:35:01.306 --> 00:35:02.856 A:middle
我们可以了解更多

00:35:02.926 --> 00:35:03.216 A:middle
关于 HEIF 和 HEVC 的内容

00:35:03.586 --> 00:35:04.576 A:middle
我想推荐几个会议

00:35:05.396 --> 00:35:06.586 A:middle
接下来的会议将会

00:35:06.586 --> 00:35:09.006 A:middle
讨论在 HTTP 在线流媒体播放中的进步

00:35:11.936 --> 00:35:13.826 A:middle
在周五上午 11:00

00:35:13.826 --> 00:35:15.206 A:middle
我们还有

00:35:15.206 --> 00:35:15.746 A:middle
使用 HEIF 和 HEVC 的会议

00:35:17.326 --> 00:35:19.486 A:middle
我们有一个很棒的视频

00:35:19.486 --> 00:35:21.206 A:middle
你可以通过它来了解

00:35:21.646 --> 00:35:22.406 A:middle
更多关于 HEIF 图像格式的信息

00:35:23.366 --> 00:35:25.476 A:middle
谢谢你们今天参加会议

00:35:25.476 --> 00:35:26.676 A:middle
我们希望在这周

00:35:26.676 --> 00:35:28.226 A:middle
剩下的时间中

00:35:28.226 --> 00:35:29.156 A:middle
在研究室和会议中

00:35:29.156 --> 00:35:29.476 A:middle
回答你们的问题

00:35:29.736 --> 00:35:30.076 A:middle
谢谢大家
