WEBVTT

00:00:17.467 --> 00:00:20.467 align:middle line:10%
<c.magenta>欢迎参加tvOS上的Now Playing</c>
<c.magenta>和远程命令演讲</c>

00:00:20.667 --> 00:00:23.933 align:middle line:10%
<c.magenta>我是tvOS的工程师Justin Voss</c>
<c.magenta>在本场演讲中我们将</c>

00:00:24.000 --> 00:00:27.567 align:middle line:10%
<c.magenta>谈谈如何给观众提供</c>
<c.magenta>出色的元数据和播放体验</c>

00:00:28.900 --> 00:00:31.667 align:middle line:90%,end
<c.magenta>首先是提供</c>
<c.magenta>Now Playing信息</c>

00:00:31.933 --> 00:00:34.300 align:middle line:90%,end
<c.magenta>关于内容的正确和完整的元数据</c>

00:00:34.367 --> 00:00:36.267 align:middle line:90%,end
<c.magenta>可以帮助观众了解</c>
<c.magenta>他们正在观看的内容</c>

00:00:36.333 --> 00:00:40.500 align:middle line:90%,end
<c.magenta>通过tvOS和iOS上的各种界面</c>

00:00:41.967 --> 00:00:44.800 align:middle line:90%,end
<c.magenta>你的元数据显示在不同的地方</c>

00:00:45.133 --> 00:00:45.967 align:middle line:90%,end
<c.magenta>对于视频内容</c>

00:00:46.033 --> 00:00:48.733 align:middle line:90%,end
<c.magenta>AVPlayerViewController</c>

00:00:48.800 --> 00:00:50.500 align:middle line:90%,end
<c.magenta>沿屏幕顶部显示元数据</c>

00:00:51.167 --> 00:00:54.333 align:middle line:90%,end
<c.magenta>对于视频和音频内容</c>
<c.magenta>iOS版TV Remote应用</c>

00:00:54.400 --> 00:00:57.267 align:middle line:90%,end
<c.magenta>会显示元数据和播放控件</c>

00:00:57.333 --> 00:00:58.500 align:middle line:90%,end
<c.magenta>对于音频内容</c>

00:00:58.567 --> 00:01:01.633 align:middle line:90%,end
<c.magenta>元数据显示在屏幕的角标中</c>

00:00:58.567 --> 00:01:01.633 align:middle line:90%,end
<c.magenta>元数据显示在屏幕的角标中</c>

00:01:01.700 --> 00:01:04.167 align:middle line:90%,end
<c.magenta>并且作为全屏 当用户设备闲置时</c>

00:01:05.000 --> 00:01:07.300 align:middle line:90%,end
<c.magenta>让我们看一些截图来更好地理解它们</c>

00:01:07.433 --> 00:01:08.800 align:middle line:90%,end
<c.magenta>在这里你可以说</c>

00:01:08.867 --> 00:01:11.967 align:middle line:90%,end
<c.magenta>我们正在观看</c>
<c.magenta>WWDC去年的一场演讲</c>

00:01:12.167 --> 00:01:14.667 align:middle line:90%,end
<c.magenta>因为屏幕上的元数据</c>
<c.magenta>清晰地表达了这个信息</c>

00:01:15.000 --> 00:01:17.933 align:middle line:90%,end
<c.magenta>这是一个使用内嵌</c>
<c.magenta>AVPlayerViewController来显示</c>

00:01:18.000 --> 00:01:19.067 align:middle line:90%,end
<c.magenta>视频内容的示例</c>

00:01:20.333 --> 00:01:21.533 align:middle line:90%,end
<c.magenta>这是同一场演讲</c>

00:01:21.600 --> 00:01:24.067 align:middle line:90%,end
<c.magenta>但显示在iOS版的</c>
<c.magenta>TV Remote应用中</c>

00:01:24.167 --> 00:01:27.667 align:middle line:90%,end
<c.magenta>你还可以看到播放控件 我们稍后再讲</c>

00:01:27.767 --> 00:01:28.600 align:middle line:90%,end
<c.magenta>对于音频内容</c>

00:01:28.667 --> 00:01:30.200 align:middle line:90%,end
<c.magenta>当信息发生变更时</c>

00:01:30.267 --> 00:01:32.100 align:middle line:90%,end
<c.magenta>听众会在屏幕上看到一则通知</c>

00:01:32.167 --> 00:01:33.667 align:middle line:90%,end
<c.magenta>其中包含更新了的元数据</c>

00:01:34.000 --> 00:01:36.300 align:middle line:90%,end
<c.magenta>在这里你可以看到</c>

00:01:36.367 --> 00:01:39.867 align:middle line:90%,end
<c.magenta>如果我们正在听那场演讲的音频版</c>
<c.magenta>会是什么样子</c>

00:01:40.367 --> 00:01:42.433 align:middle line:90%,end
<c.magenta>如果用户放下遥控器</c>

00:01:42.500 --> 00:01:45.033 align:middle line:90%,end
<c.magenta>tvOS将自动</c>

00:01:45.100 --> 00:01:46.633 align:middle line:90%,end
<c.magenta>以全屏视图播放元数据</c>

00:01:46.700 --> 00:01:48.267 align:middle line:90%,end
<c.magenta>那会凸显整个艺术图像</c>

00:01:49.167 --> 00:01:50.400 align:middle line:90%,end
<c.magenta>我希望我说服了你们</c>

00:01:50.467 --> 00:01:53.600 align:middle line:90%,end
<c.magenta>提供全部信息</c>
<c.magenta>是值得你们花那么多时间的</c>

00:01:54.167 --> 00:01:56.333 align:middle line:90%,end
<c.magenta>让我们看看有几种实现方式</c>

00:01:56.567 --> 00:01:57.567 align:middle line:90%,end
<c.magenta>你有几种选择</c>

00:01:57.633 --> 00:01:59.700 align:middle line:90%,end
<c.magenta>那么它取决于你在应用中所使用的技术</c>

00:02:01.800 --> 00:02:06.433 align:middle line:10%
<c.magenta>使用TVML的可以通过</c>
<c.magenta>MediaItem JavaScript对象添加元数据</c>

00:02:06.933 --> 00:02:09.600 align:middle line:10%
<c.magenta>它针对Now Playing</c>
<c.magenta>信息有一些属性</c>

00:02:09.667 --> 00:02:12.233 align:middle line:10%
<c.magenta>包括标题、副标题和描述</c>

00:02:12.733 --> 00:02:14.967 align:middle line:10%
<c.magenta>你可以提供艺术图片的URL</c>

00:02:15.267 --> 00:02:17.433 align:middle line:10%
<c.magenta>和关于内容评级的信息</c>

00:02:17.500 --> 00:02:21.467 align:middle line:10%
<c.magenta>比如PG-13或R</c>
<c.magenta>无论内容是否明确</c>

00:02:22.700 --> 00:02:24.467 align:middle line:10%
<c.magenta>在这个代码示例中 你可以看到我</c>

00:02:24.533 --> 00:02:27.667 align:middle line:10%
<c.magenta>正在创建一个MediaItem对象</c>
<c.magenta>包含一个视频的URL</c>

00:02:28.100 --> 00:02:30.433 align:middle line:10%
<c.magenta>并且在这个对象上配置标题和描述</c>

00:02:30.567 --> 00:02:32.633 align:middle line:10%
<c.magenta>并提供了一个艺术图像的URL</c>

00:02:32.767 --> 00:02:34.967 align:middle line:90%,end
<c.magenta>如果你使用AVKit来播放你的内容</c>

00:02:35.167 --> 00:02:37.533 align:middle line:90%,end
<c.magenta>你应该使用AV元数据项类</c>

00:02:37.600 --> 00:02:39.133 align:middle line:90%,end
<c.magenta>来提供Now Playing信息</c>

00:02:40.067 --> 00:02:41.967 align:middle line:90%,end
<c.magenta>对于你想要提供的每一项元数据</c>

00:02:42.033 --> 00:02:44.167 align:middle line:90%,end
<c.magenta>比如标题或艺术图像等等</c>

00:02:44.500 --> 00:02:48.833 align:middle line:90%,end
<c.magenta>你可以创建一个AV可变元数据项</c>
<c.magenta>并给它配置一些属性</c>

00:02:48.967 --> 00:02:52.967 align:middle line:90%,end
<c.magenta>你要提供一个标识符</c>
<c.magenta>告诉AVKit这代表哪些元数据</c>

00:02:53.033 --> 00:02:56.167 align:middle line:90%,end
<c.magenta>所以我们可以区分对象代表的是标题</c>

00:02:56.233 --> 00:02:57.867 align:middle line:90%,end
<c.magenta>还是描述</c>

00:02:58.100 --> 00:03:02.567 align:middle line:90%,end
<c.magenta>你要提供元数据的值</c>
<c.magenta>可以是字符串或原始数据字节</c>

00:02:58.100 --> 00:03:02.567 align:middle line:90%,end
<c.magenta>你要提供元数据的值</c>
<c.magenta>可以是字符串或原始数据字节</c>

00:03:02.867 --> 00:03:04.367 align:middle line:90%,end
<c.magenta>你应该设置extendedLanguageTag</c>

00:03:04.467 --> 00:03:07.167 align:middle line:90%,end
<c.magenta>来指定元数据用于哪种语言</c>

00:03:07.467 --> 00:03:09.167 align:middle line:90%,end
<c.magenta>除非你有理由</c>

00:03:09.233 --> 00:03:12.367 align:middle line:90%,end
<c.magenta>否则我们强烈建议你使用“und”值</c>

00:03:12.433 --> 00:03:13.767 align:middle line:90%,end
<c.magenta>它代表未定义</c>

00:03:14.367 --> 00:03:17.733 align:middle line:90%,end
<c.magenta>只有当用户的区域设置</c>

00:03:17.800 --> 00:03:20.733 align:middle line:90%,end
<c.magenta>与元数据的区域设置相匹配时</c>
<c.magenta>属性才能可见</c>

00:03:20.900 --> 00:03:21.833 align:middle line:90%,end
<c.magenta>那么比如说</c>

00:03:21.900 --> 00:03:24.167 align:middle line:90%,end
<c.magenta>如果你有一部美国拍的电影</c>

00:03:24.300 --> 00:03:26.800 align:middle line:90%,end
<c.magenta>你提供它的标题时可能尝试</c>
<c.magenta>将语言标签设置为英语</c>

00:03:26.867 --> 00:03:29.933 align:middle line:90%,end
<c.magenta>因为它本来就是英语的</c>

00:03:30.233 --> 00:03:31.067 align:middle line:90%,end
<c.magenta>但如果你那么做了</c>

00:03:31.133 --> 00:03:33.667 align:middle line:90%,end
<c.magenta>德国的观众就看不到任何标题</c>

00:03:33.733 --> 00:03:36.733 align:middle line:90%,end
<c.magenta>因为元数据语言与他们的语言不匹配</c>

00:03:36.833 --> 00:03:40.100 align:middle line:90%,end
<c.magenta>但如果你使用了标签und</c>
<c.magenta>则每个人都能看到元数据</c>

00:03:40.167 --> 00:03:41.933 align:middle line:90%,end
<c.magenta>无论语言设置是什么</c>

00:03:43.267 --> 00:03:45.300 align:middle line:90%,end
<c.magenta>有时你需要给我们一点暗示</c>

00:03:45.367 --> 00:03:47.867 align:middle line:90%,end
<c.magenta>关于如何阐述你所提供的值</c>

00:03:48.167 --> 00:03:50.033 align:middle line:90%,end
<c.magenta>如果你提供了一个艺术图片</c>

00:03:50.100 --> 00:03:52.433 align:middle line:90%,end
<c.magenta>你就给我们提供图片的原生字节作为值</c>

00:03:52.500 --> 00:03:56.067 align:middle line:90%,end
<c.magenta>然后使用dataType来告诉我们</c>
<c.magenta>它是JPEG或PNG格式</c>

00:03:57.167 --> 00:03:59.967 align:middle line:90%,end
<c.magenta>请参看代码示例来了解具体信息</c>

00:04:02.300 --> 00:04:05.000 align:middle line:90%,end
<c.magenta>你看一下代码 我创建了一个</c>
<c.magenta>AV playerItem</c>

00:04:05.067 --> 00:04:07.133 align:middle line:90%,end
<c.magenta>并赋予了它一个标题和描述</c>

00:04:07.600 --> 00:04:11.233 align:middle line:90%,end
<c.magenta>在第一个代码块中 我创建了一个</c>
<c.magenta>AVMutableMetadataItem</c>

00:04:11.300 --> 00:04:12.467 align:middle line:90%,end
<c.magenta>来代表标题</c>

00:04:13.700 --> 00:04:18.833 align:middle line:90%,end
<c.magenta>首先我把标识符设为</c>
<c.magenta>AVMetadataCommon IdentifierTitle</c>

00:04:19.166 --> 00:04:22.067 align:middle line:90%,end
<c.magenta>那样AVKit就知道这个项是标题</c>

00:04:24.167 --> 00:04:26.233 align:middle line:90%,end
<c.magenta>然后我把真实值设为一个字符串</c>

00:04:26.667 --> 00:04:29.200 align:middle line:90%,end
<c.magenta>AV元数据项API要求值</c>

00:04:29.267 --> 00:04:32.967 align:middle line:90%,end
<c.magenta>为NS对象类型 所以要把切换字符串</c>
<c.magenta>转换为NSString</c>

00:04:35.533 --> 00:04:38.600 align:middle line:90%,end
<c.magenta>最后我把extendedLanguageTag</c>
<c.magenta>设为und</c>

00:04:38.667 --> 00:04:41.567 align:middle line:90%,end
<c.magenta>因为演讲的标题应该是全世界都一样</c>

00:04:42.767 --> 00:04:45.200 align:middle line:90%,end
<c.magenta>在第二个代码块中 我做了同样的工作</c>

00:04:45.267 --> 00:04:46.733 align:middle line:90%,end
<c.magenta>来分配描述</c>

00:04:47.033 --> 00:04:50.667 align:middle line:90%,end
<c.magenta>除了提供一个不同的值以外</c>
<c.magenta>你可以在这行看到</c>

00:04:50.767 --> 00:04:54.400 align:middle line:90%,end
<c.magenta>我把标识符设为AVMetadata</c>
<c.magenta>CommonIdentifierDescription</c>

00:04:54.467 --> 00:04:57.533 align:middle line:90%,end
<c.magenta>所以AVKit就知道如何诠释这个项</c>

00:04:58.667 --> 00:04:59.867 align:middle line:90%,end
<c.magenta>在最后一行</c>

00:04:59.967 --> 00:05:02.267 align:middle line:90%,end
<c.magenta>我把元数据项的一个数组分配</c>

00:04:59.967 --> 00:05:02.267 align:middle line:90%,end
<c.magenta>我把元数据项的一个数组分配</c>

00:05:02.333 --> 00:05:05.367 align:middle line:90%,end
<c.magenta>给AV playerItem的</c>
<c.magenta>附加元数据属性</c>

00:05:07.667 --> 00:05:09.700 align:middle line:90%,end
<c.magenta>如果你想把发布日期</c>

00:05:09.767 --> 00:05:10.700 align:middle line:90%,end
<c.magenta>作为元数据项提供</c>

00:05:10.833 --> 00:05:14.667 align:middle line:90%,end
<c.magenta>你可以把发布日期的格式</c>
<c.magenta>调整为指定格式的字符串</c>

00:05:15.067 --> 00:05:17.067 align:middle line:90%,end
<c.magenta>代码示例显示了如何实现</c>

00:05:18.167 --> 00:05:21.067 align:middle line:90%,end
<c.magenta>在这里 我创建了日期</c>
<c.magenta>对象为任意日期</c>

00:05:21.867 --> 00:05:25.767 align:middle line:90%,end
<c.magenta>我创建了一个日期格式器</c>
<c.magenta>并提供了指定日期格式的字符串</c>

00:05:25.833 --> 00:05:26.933 align:middle line:90%,end
<c.magenta>就是这行</c>

00:05:28.300 --> 00:05:29.633 align:middle line:90%,end
<c.magenta>要创建元数据项</c>

00:05:29.700 --> 00:05:34.067 align:middle line:90%,end
<c.magenta>我使用了标识符AVMetadata</c>
<c.magenta>CommonIdentifierCreationDate</c>

00:05:34.867 --> 00:05:36.567 align:middle line:90%,end
<c.magenta>然后我使用了日期格式器</c>

00:05:36.667 --> 00:05:39.100 align:middle line:90%,end
<c.magenta>来把日期对象转换为格式化的字符串</c>

00:05:39.167 --> 00:05:41.133 align:middle line:90%,end
<c.magenta>并把字符串转为NSString</c>

00:05:41.867 --> 00:05:43.333 align:middle line:90%,end
<c.magenta>在AVPlayerViewController中</c>

00:05:43.633 --> 00:05:45.767 align:middle line:90%,end
<c.magenta>观众可以看到视频的发布年份</c>

00:05:45.833 --> 00:05:47.833 align:middle line:90%,end
<c.magenta>随着其他Now Playing信息</c>

00:05:49.767 --> 00:05:52.600 align:middle line:90%,end
<c.magenta>这是一个如何给内容</c>

00:05:52.667 --> 00:05:53.667 align:middle line:90%,end
<c.magenta>提供图片元数据的示例</c>

00:05:54.267 --> 00:05:58.733 align:middle line:90%,end
<c.magenta>你可以看到我要做的第一件事就是</c>
<c.magenta>获取作为数据对象的图片</c>

00:05:58.800 --> 00:06:01.733 align:middle line:90%,end
<c.magenta>我通过从我的应用捆绑包中的</c>
<c.magenta>JPEG中加载图像实现</c>

00:05:58.800 --> 00:06:01.733 align:middle line:90%,end
<c.magenta>我通过从我的应用捆绑包中的</c>
<c.magenta>JPEG中加载图像实现</c>

00:06:01.800 --> 00:06:03.867 align:middle line:90%,end
<c.magenta>但你可以从任意源中获取</c>

00:06:05.200 --> 00:06:06.567 align:middle line:90%,end
<c.magenta>要创建元数据项</c>

00:06:06.667 --> 00:06:08.733 align:middle line:90%,end
<c.magenta>首先我需要指定我的标识符</c>

00:06:09.233 --> 00:06:13.267 align:middle line:90%,end
<c.magenta>在本例中应该是</c>
<c.magenta>AVMetadataCommonIdentifierArtwork</c>

00:06:14.333 --> 00:06:16.567 align:middle line:90%,end
<c.magenta>接下来我要提供艺术图像数据自身</c>

00:06:16.633 --> 00:06:19.367 align:middle line:90%,end
<c.magenta>并将Swift数据对象</c>
<c.magenta>转换为NSData</c>

00:06:20.867 --> 00:06:25.033 align:middle line:90%,end
<c.magenta>要表明是哪种格式的图像</c>
<c.magenta>我需要设置dataType属性</c>

00:06:25.167 --> 00:06:26.833 align:middle line:90%,end
<c.magenta>因为我知道这张图像是一个JPEG</c>

00:06:26.900 --> 00:06:29.533 align:middle line:90%,end
<c.magenta>我就提供了一个常数值来表明</c>

00:06:31.533 --> 00:06:33.233 align:middle line:90%,end
<c.magenta>为了给你提供一个可视化参考</c>

00:06:33.300 --> 00:06:35.300 align:middle line:90%,end
<c.magenta>关于项会显示在屏幕上哪个位置</c>

00:06:35.367 --> 00:06:37.600 align:middle line:90%,end
<c.magenta>请看AVPlayerViewController的截图</c>

00:06:37.667 --> 00:06:38.967 align:middle line:90%,end
<c.magenta>还配有一些注释</c>

00:06:39.567 --> 00:06:42.833 align:middle line:90%,end
<c.magenta>颜色编码显示每个元数据标识符</c>
<c.magenta>显示在哪儿</c>

00:06:43.200 --> 00:06:45.567 align:middle line:90%,end
<c.magenta>艺术图像显示在这里</c>

00:06:46.867 --> 00:06:52.733 align:middle line:90%,end
<c.magenta>然后有标题、创建日期和描述</c>

00:06:54.833 --> 00:06:57.467 align:middle line:90%,end
<c.magenta>这是TV Remote应用的截图</c>

00:06:57.967 --> 00:07:01.267 align:middle line:90%,end
<c.magenta>你可以看到Remote应用</c>
<c.magenta>显示的元数据</c>

00:06:57.967 --> 00:07:01.267 align:middle line:90%,end
<c.magenta>你可以看到Remote应用</c>
<c.magenta>显示的元数据</c>

00:07:01.333 --> 00:07:02.867 align:middle line:90%,end
<c.magenta>与AVPlayerViewController不一样</c>

00:07:03.667 --> 00:07:06.367 align:middle line:90%,end
<c.magenta>它显示了同样的艺术图像和标题</c>

00:07:07.467 --> 00:07:12.833 align:middle line:90%,end
<c.magenta>但没有显示描述</c>
<c.magenta>而是显示了艺术家和专辑名称</c>

00:07:14.200 --> 00:07:16.667 align:middle line:90%,end
<c.magenta>你可以看到要使用的AV基础标识符</c>

00:07:19.800 --> 00:07:21.233 align:middle line:90%,end
<c.magenta>好的 这就是AVKit的相关信息</c>

00:07:21.600 --> 00:07:24.000 align:middle line:90%,end
<c.magenta>如果你使用其它技术来显示视频</c>

00:07:24.067 --> 00:07:27.233 align:middle line:90%,end
<c.magenta>比如Video Toolbox</c>
<c.magenta>或仅播放音频内容</c>

00:07:27.400 --> 00:07:29.867 align:middle line:90%,end
<c.magenta>你需要另一种方式来提供信息</c>

00:07:30.267 --> 00:07:34.167 align:middle line:90%,end
<c.magenta>在那些情况下 你可以使用</c>
<c.magenta>MPNowPlayingInfoCenter</c>

00:07:35.033 --> 00:07:37.300 align:middle line:90%,end
<c.magenta>它是一个单例对象 有一个字典属性</c>

00:07:37.367 --> 00:07:39.233 align:middle line:90%,end
<c.magenta>你可以写入你自己的元数据</c>

00:07:39.533 --> 00:07:42.733 align:middle line:90%,end
<c.magenta>有一个标题键、专辑名称键、</c>
<c.magenta>艺术图像键…</c>

00:07:43.667 --> 00:07:46.267 align:middle line:90%,end
<c.magenta>除了你所期待的元数据之外</c>

00:07:46.400 --> 00:07:49.967 align:middle line:90%,end
<c.magenta>你还可以明确指定内容是视频还是音频</c>

00:07:50.400 --> 00:07:53.200 align:middle line:90%,end
<c.magenta>你可以提供关于持续时长</c>

00:07:53.267 --> 00:07:55.267 align:middle line:90%,end
<c.magenta>和用户的播放位置的信息</c>

00:07:56.467 --> 00:07:58.567 align:middle line:90%,end
<c.magenta>你的设定将不会作为原始字节提供</c>

00:07:58.633 --> 00:08:01.067 align:middle line:90%,end
<c.magenta>而是作为MPMediaItemArtwork对象</c>

00:07:58.633 --> 00:08:01.067 align:middle line:90%,end
<c.magenta>而是作为MPMediaItemArtwork对象</c>

00:08:01.133 --> 00:08:03.033 align:middle line:90%,end
<c.magenta>我们稍后再谈这个</c>

00:08:04.567 --> 00:08:07.467 align:middle line:90%,end
<c.magenta>你有责任更新这个字典</c>

00:08:07.533 --> 00:08:09.267 align:middle line:90%,end
<c.magenta>如果播放状态发生改变</c>

00:08:09.700 --> 00:08:12.300 align:middle line:90%,end
<c.magenta>你不需要每秒或每分钟都更新它</c>

00:08:12.400 --> 00:08:14.667 align:middle line:90%,end
<c.magenta>而是应该当发生某些事件时更新它</c>

00:08:14.967 --> 00:08:18.367 align:middle line:90%,end
<c.magenta>我们建议你当播放项改变时更新它</c>

00:08:18.900 --> 00:08:21.200 align:middle line:90%,end
<c.magenta>如果关于播放项的元数据发生改变</c>

00:08:21.267 --> 00:08:23.133 align:middle line:90%,end
<c.magenta>比如标题或艺术家姓名</c>

00:08:23.933 --> 00:08:25.933 align:middle line:90%,end
<c.magenta>如果用户试图寻找一个新位置</c>

00:08:26.000 --> 00:08:30.167 align:middle line:90%,end
<c.magenta>或如果播放速率发生改变</c>
<c.magenta>最后如果播放开始或停止</c>

00:08:31.467 --> 00:08:32.832 align:middle line:90%,end
<c.magenta>让我们看一些代码</c>

00:08:33.832 --> 00:08:35.167 align:middle line:90%,end
<c.magenta>在第一个代码块中</c>

00:08:35.267 --> 00:08:37.967 align:middle line:90%,end
<c.magenta>我创建了代表我的艺术图像的对象</c>

00:08:38.500 --> 00:08:41.133 align:middle line:90%,end
<c.magenta>这个MPMediaItemArtwork类</c>

00:08:41.366 --> 00:08:43.900 align:middle line:90%,end
<c.magenta>在代码块中提供了图像尺寸</c>

00:08:43.967 --> 00:08:47.067 align:middle line:90%,end
<c.magenta>我们稍后会调用指定图像尺寸</c>

00:08:48.033 --> 00:08:50.633 align:middle line:90%,end
<c.magenta>这个MPMediaItemArtwork类</c>

00:08:50.700 --> 00:08:53.200 align:middle line:90%,end
<c.magenta>在代码块中提供了图像尺寸</c>

00:08:53.267 --> 00:08:56.367 align:middle line:90%,end
<c.magenta>我们稍后会调用指定图像尺寸</c>

00:08:56.767 --> 00:09:00.467 align:middle line:90%,end
<c.magenta>这个代码块返回一个UIImage对象</c>
<c.magenta>非常符合这个尺寸</c>

00:08:56.767 --> 00:09:00.467 align:middle line:90%,end
<c.magenta>这个代码块返回一个UIImage对象</c>
<c.magenta>非常符合这个尺寸</c>

00:09:00.533 --> 00:09:01.867 align:middle line:90%,end
<c.magenta>然后传递给代码块</c>

00:09:02.100 --> 00:09:05.900 align:middle line:90%,end
<c.magenta>你的应用可能已经下载了</c>
<c.magenta>同一个图像的不同尺寸</c>

00:09:06.200 --> 00:09:08.933 align:middle line:90%,end
<c.magenta>比如说小图像、中图像和大图像</c>

00:09:09.267 --> 00:09:11.900 align:middle line:90%,end
<c.magenta>当我们调用这个代码块时</c>
<c.magenta>获取我们所提供的尺寸</c>

00:09:11.967 --> 00:09:15.067 align:middle line:90%,end
<c.magenta>并返回最符合所要求尺寸的图像</c>

00:09:15.967 --> 00:09:17.867 align:middle line:90%,end
<c.magenta>我们不鼓励你们执行</c>

00:09:17.933 --> 00:09:19.833 align:middle line:90%,end
<c.magenta>消耗很大的图像尺寸调整操作</c>

00:09:19.900 --> 00:09:21.633 align:middle line:90%,end
<c.magenta>只需要返回你所拥有的图像即可</c>

00:09:23.567 --> 00:09:24.667 align:middle line:90%,end
<c.magenta>在第二个代码块中</c>

00:09:24.733 --> 00:09:26.633 align:middle line:90%,end
<c.magenta>我给MPNowPlayingInfoCenter</c>

00:09:26.700 --> 00:09:28.667 align:middle line:90%,end
<c.magenta>提供了我的全部元数据</c>

00:09:29.233 --> 00:09:31.300 align:middle line:10%
<c.magenta>这只是一个常见的Swift词典</c>

00:09:31.367 --> 00:09:33.333 align:middle line:10%
<c.magenta>拥有由框架提供的键</c>

00:09:33.400 --> 00:09:36.167 align:middle line:10%
<c.magenta>并且我提供我的值为</c>
<c.magenta>常规Swift类型</c>

00:09:36.767 --> 00:09:39.467 align:middle line:10%
<c.magenta>有两个属性我想特别提一下</c>

00:09:39.833 --> 00:09:42.367 align:middle line:10%
<c.magenta>分别是ElapsedPlaybackTime</c>
<c.magenta>和PlaybackDuration</c>

00:09:42.933 --> 00:09:44.767 align:middle line:10%
<c.magenta>你应该提供这两个键</c>

00:09:44.833 --> 00:09:46.933 align:middle line:10%
<c.magenta>因此tvOS知道内容有多长</c>

00:09:47.000 --> 00:09:49.667 align:middle line:10%
<c.magenta>以及用户当前在哪儿</c>

00:09:50.000 --> 00:09:53.067 align:middle line:10%
<c.magenta>随着各种事件的发生</c>
<c.magenta>要更新ElapsedPlaybackTime</c>

00:09:53.133 --> 00:09:54.733 align:middle line:10%
<c.magenta>以匹配用户所在位置</c>

00:09:55.600 --> 00:09:58.700 align:middle line:90%,end
<c.magenta>在tvOS上 这个API没有</c>
<c.magenta>AVPlayerViewController</c>

00:09:58.767 --> 00:10:00.200 align:middle line:90%,end
<c.magenta>但我可以给你展示元数据</c>

00:09:58.767 --> 00:10:00.200 align:middle line:90%,end
<c.magenta>但我可以给你展示元数据</c>

00:10:00.267 --> 00:10:02.267 align:middle line:90%,end
<c.magenta>在TV Remote应用中</c>
<c.magenta>看起来是什么样子</c>

00:10:02.733 --> 00:10:04.533 align:middle line:90%,end
<c.magenta>你可以在屏幕上看到每一个属性</c>

00:10:05.200 --> 00:10:07.867 align:middle line:90%,end
<c.magenta>相较于AVKit版它们看起来很熟悉</c>

00:10:08.767 --> 00:10:11.767 align:middle line:90%,end
<c.magenta>请注意在这个版本中</c>
<c.magenta>你可以控制拖动条</c>

00:10:12.533 --> 00:10:16.967 align:middle line:90%,end
<c.magenta>你的应用要提供ElapsedPlaybackTime</c>
<c.magenta>和持续时长</c>

00:10:17.200 --> 00:10:18.733 align:middle line:90%,end
<c.magenta>从而保证其显示正确</c>

00:10:21.933 --> 00:10:23.200 align:middle line:90%,end
<c.magenta>让我们换个话题</c>

00:10:23.267 --> 00:10:26.833 align:middle line:90%,end
<c.magenta>谈谈你的应用如何处理外部播放命令</c>

00:10:26.933 --> 00:10:28.467 align:middle line:90%,end
<c.magenta>应用有自己的控件</c>

00:10:28.533 --> 00:10:31.167 align:middle line:90%,end
<c.magenta>用户可以在播放时与其交互</c>

00:10:31.233 --> 00:10:33.000 align:middle line:90%,end
<c.magenta>但用户可能想控制你的应用</c>

00:10:33.067 --> 00:10:35.033 align:middle line:90%,end
<c.magenta>从iOS上的</c>
<c.magenta>TV Remote应用中</c>

00:10:35.400 --> 00:10:38.767 align:middle line:90%,end
<c.magenta>或者如果他们正在听tvOS上的应用</c>
<c.magenta>中的背景音频</c>

00:10:38.833 --> 00:10:42.000 align:middle line:90%,end
<c.magenta>可能会按下Siri遥控上的播放暂停</c>
<c.magenta>按钮暂停应用</c>

00:10:42.067 --> 00:10:43.567 align:middle line:90%,end
<c.magenta>当它处于后台时</c>

00:10:43.867 --> 00:10:45.600 align:middle line:90%,end
<c.magenta>要支持这些交互</c>

00:10:45.667 --> 00:10:48.567 align:middle line:90%,end
<c.magenta>一定要确保你的应用可以处理远程命令</c>

00:10:49.733 --> 00:10:53.067 align:middle line:10%
<c.magenta>你可以通过一个叫作</c>
<c.magenta>MPRemoteCommandCenter的API实现</c>

00:10:53.567 --> 00:10:56.967 align:middle line:10%
<c.magenta>你可以通过一个叫作</c>
<c.magenta>MPRemoteCommandCenter的API实现</c>

00:10:57.300 --> 00:10:58.533 align:middle line:10%
<c.magenta>它是一个单例对象</c>

00:10:58.633 --> 00:11:00.900 align:middle line:10%
<c.magenta>你应用可以支持的</c>

00:10:58.633 --> 00:11:00.900 align:middle line:10%
<c.magenta>你应用可以支持的</c>

00:11:00.967 --> 00:11:02.733 align:middle line:10%
<c.magenta>每个命令都有一个属性</c>

00:11:03.933 --> 00:11:05.567 align:middle line:10%
<c.magenta>对于你想要支持的每个命令</c>

00:11:05.667 --> 00:11:08.933 align:middle line:10%
<c.magenta>你可以注册一对</c>
<c.magenta>目标行动或回调代码块</c>

00:11:09.000 --> 00:11:11.167 align:middle line:10%
<c.magenta>当执行命令时调用</c>

00:11:12.000 --> 00:11:15.867 align:middle line:10%
<c.magenta>如果你提供了目标行动或代码块</c>
<c.magenta>那么应该支持命令</c>

00:11:16.133 --> 00:11:17.800 align:middle line:10%
<c.magenta>如果你想提供一个命令处理器</c>

00:11:17.867 --> 00:11:20.467 align:middle line:10%
<c.magenta>但需要表示它不可用</c>

00:11:20.533 --> 00:11:22.067 align:middle line:10%
<c.magenta>你可以把它标记为禁用</c>

00:11:23.100 --> 00:11:25.800 align:middle line:10%
<c.magenta>那个方法或代码块</c>
<c.magenta>必须返回一个enum值</c>

00:11:25.867 --> 00:11:29.267 align:middle line:10%
<c.magenta>以表明你的应用是否成功执行了命令</c>

00:11:29.667 --> 00:11:31.967 align:middle line:10%
<c.magenta>这里所说的成功的定义是广义定义</c>

00:11:32.067 --> 00:11:34.700 align:middle line:10%
<c.magenta>如果用户播放在播放列表中的</c>
<c.magenta>最后一首曲子</c>

00:11:34.767 --> 00:11:36.667 align:middle line:10%
<c.magenta>并请求跳过下一首曲子</c>

00:11:36.733 --> 00:11:39.167 align:middle line:10%
<c.magenta>你的应用可以选择结束播放</c>

00:11:39.267 --> 00:11:42.033 align:middle line:10%
<c.magenta>这就被认为是成功处理了命令</c>

00:11:42.100 --> 00:11:44.533 align:middle line:10%
<c.magenta>所以你应该返回成功值</c>

00:11:47.033 --> 00:11:49.033 align:middle line:90%,end
<c.magenta>有些命令比如播放和暂停非常简单</c>

00:11:49.300 --> 00:11:51.267 align:middle line:90%,end
<c.magenta>如果暂停命令处理器被调用</c>

00:11:51.333 --> 00:11:53.333 align:middle line:90%,end
<c.magenta>你的应用应该如何做是很明确的</c>

00:11:53.633 --> 00:11:57.367 align:middle line:90%,end
<c.magenta>其它命令更灵活</c>
<c.magenta>接受来自你应用的参数</c>

00:11:57.433 --> 00:12:00.233 align:middle line:90%,end
<c.magenta>并可以给你的处理器返回一个参数</c>

00:11:57.433 --> 00:12:00.233 align:middle line:90%,end
<c.magenta>并可以给你的处理器返回一个参数</c>

00:12:00.933 --> 00:12:03.500 align:middle line:90%,end
<c.magenta>比如MPSkipIntervalCommand用于</c>

00:12:03.567 --> 00:12:06.867 align:middle line:90%,end
<c.magenta>允许用户向前进或向后退几秒钟</c>

00:12:07.367 --> 00:12:08.600 align:middle line:90%,end
<c.magenta>应用可以有</c>

00:12:08.667 --> 00:12:11.067 align:middle line:90%,end
<c.magenta>允许用户跳过多少秒的偏好设置</c>

00:12:11.367 --> 00:12:14.133 align:middle line:90%,end
<c.magenta>跳过命令对象可以让你配置偏好</c>

00:12:15.000 --> 00:12:17.033 align:middle line:90%,end
<c.magenta>当用户执行这个命令时</c>

00:12:17.100 --> 00:12:19.833 align:middle line:90%,end
<c.magenta>将会调用带有对象参数的处理器</c>

00:12:20.533 --> 00:12:23.267 align:middle line:90%,end
<c.magenta>对象是类型</c>
<c.magenta>MPSkipIntervalCommandEvent</c>

00:12:23.333 --> 00:12:25.500 align:middle line:90%,end
<c.magenta>并且有一个间隔属性 告诉应用</c>

00:12:25.567 --> 00:12:27.133 align:middle line:90%,end
<c.magenta>跳过多少秒</c>

00:12:27.267 --> 00:12:31.367 align:middle line:90%,end
<c.magenta>这可以与之前提供的跳过偏好不一样</c>

00:12:32.467 --> 00:12:33.767 align:middle line:90%,end
<c.magenta>请看一个例子</c>

00:12:33.967 --> 00:12:36.667 align:middle line:90%,end
<c.magenta>请看应用如何实施命令</c>

00:12:37.833 --> 00:12:40.100 align:middle line:90%,end
<c.magenta>你可以看到在第一行我希望</c>

00:12:40.167 --> 00:12:42.600 align:middle line:90%,end
<c.magenta>用户向后跳的间隔是10秒</c>

00:12:42.667 --> 00:12:45.567 align:middle line:90%,end
<c.magenta>所以我在SkipBackwardCommand</c>
<c.magenta>对象上</c>

00:12:45.633 --> 00:12:47.867 align:middle line:90%,end
<c.magenta>分配了偏好间隔属性</c>

00:12:49.667 --> 00:12:51.400 align:middle line:90%,end
<c.magenta>然后我要提供我的处理器代码块</c>

00:12:51.900 --> 00:12:56.433 align:middle line:90%,end
<c.magenta>从技术角度来说 每个命令处理器都将</c>
<c.magenta>通用类型MPRemoteCommandEvent</c>

00:12:56.500 --> 00:12:57.633 align:middle line:90%,end
<c.magenta>作为参数接收</c>

00:12:57.800 --> 00:13:00.933 align:middle line:90%,end
<c.magenta>但我需要把它转换为</c>
<c.magenta>MPSkipIntervalCommandEvent</c>

00:12:57.800 --> 00:13:00.933 align:middle line:90%,end
<c.magenta>但我需要把它转换为</c>
<c.magenta>MPSkipIntervalCommandEvent</c>

00:13:01.000 --> 00:13:03.067 align:middle line:90%,end
<c.magenta>以便获取它的间隔属性</c>

00:13:05.267 --> 00:13:07.167 align:middle line:90%,end
<c.magenta>然后我会执行命令</c>

00:13:07.333 --> 00:13:10.033 align:middle line:90%,end
<c.magenta>在这里我正在通过一个</c>
<c.magenta>AVPlayer播放我的内容</c>

00:13:10.300 --> 00:13:13.400 align:middle line:90%,end
<c.magenta>因为AVPlayer使用</c>
<c.magenta>CMTime结构表达时间</c>

00:13:13.467 --> 00:13:16.333 align:middle line:90%,end
<c.magenta>这也是我需要计算</c>
<c.magenta>我的播放位置的方式</c>

00:13:17.233 --> 00:13:19.767 align:middle line:90%,end
<c.magenta>你可以看到我获取了</c>
<c.magenta>播放器的当前位置</c>

00:13:19.933 --> 00:13:23.267 align:middle line:90%,end
<c.magenta>然后创建了一个新CMTime结构</c>
<c.magenta>带有跳过间隔</c>

00:13:23.933 --> 00:13:26.667 align:middle line:90%,end
<c.magenta>我从当前时间中减去了间隔</c>

00:13:27.933 --> 00:13:29.733 align:middle line:90%,end
<c.magenta>我要求播放器寻找那个时间点</c>

00:13:29.800 --> 00:13:31.967 align:middle line:90%,end
<c.magenta>并从处理器中返回成功</c>

00:13:33.067 --> 00:13:35.433 align:middle line:90%,end
<c.magenta>当播放器完成寻找那个时间点</c>

00:13:35.500 --> 00:13:37.033 align:middle line:90%,end
<c.magenta>将调用我的结束处理器</c>

00:13:37.100 --> 00:13:39.033 align:middle line:90%,end
<c.magenta>那是我要更新</c>
<c.magenta>Now Playing信息的地方</c>

00:13:39.733 --> 00:13:42.833 align:middle line:90%,end
<c.magenta>如果我们修改播放状态</c>
<c.magenta>比如寻找新时间点</c>

00:13:42.900 --> 00:13:46.767 align:middle line:90%,end
<c.magenta>我们需要发布新信息以更新已播放时间</c>

00:13:47.300 --> 00:13:49.533 align:middle line:90%,end
<c.magenta>我调用了一个叫作</c>
<c.magenta>updateNowPlaying的函数</c>

00:13:49.600 --> 00:13:51.500 align:middle line:90%,end
<c.magenta>我会在下一张幻灯片中给你展示</c>

00:13:53.267 --> 00:13:55.733 align:middle line:90%,end
<c.magenta>你可以看到我是如何更新</c>
<c.magenta>Now Playing信息的</c>

00:13:55.800 --> 00:13:59.200 align:middle line:90%,end
<c.magenta>与演讲最开始所展示的例子</c>
<c.magenta>一模一样</c>

00:13:59.267 --> 00:14:01.367 align:middle line:90%,end
<c.magenta>但我希望指出一个细节</c>

00:13:59.267 --> 00:14:01.367 align:middle line:90%,end
<c.magenta>但我希望指出一个细节</c>

00:14:01.967 --> 00:14:05.533 align:middle line:90%,end
<c.magenta>你可以看到我使用了</c>
<c.magenta>AVPlayer的当前时间属性</c>

00:14:05.600 --> 00:14:09.567 align:middle line:90%,end
<c.magenta>来给已经过去的已播放时间属性</c>
<c.magenta>提供一个精确的值</c>

00:14:10.067 --> 00:14:13.333 align:middle line:90%,end
<c.magenta>在这种情况下</c>
<c.magenta>因为AVPlayer要返回一个CMTime</c>

00:14:13.400 --> 00:14:16.333 align:middle line:90%,end
<c.magenta>但MPNowPlayingInfoCenter</c>
<c.magenta>要求的是一个浮点型的值</c>

00:14:16.400 --> 00:14:18.233 align:middle line:90%,end
<c.magenta>这是已播放的秒数</c>

00:14:18.333 --> 00:14:20.933 align:middle line:90%,end
<c.magenta>我需要使用CMTimeGetSeconds函数</c>

00:14:21.067 --> 00:14:22.167 align:middle line:90%,end
<c.magenta>来转换值</c>

00:14:22.833 --> 00:14:25.467 align:middle line:90%,end
<c.magenta>这就是关于用远程命令</c>
<c.magenta>和Now Playing信息</c>

00:14:25.533 --> 00:14:27.667 align:middle line:90%,end
<c.magenta>为用户提供出色体验的全部内容</c>

00:14:28.433 --> 00:14:30.633 align:middle line:90%,end
<c.magenta>你可以访问这里显示的这个URL</c>

00:14:30.700 --> 00:14:33.367 align:middle line:90%,end
<c.magenta>查看相关文档和相关演讲</c>

00:14:33.467 --> 00:14:34.467 align:middle line:90%,end
<c.magenta>谢谢观看</c>
