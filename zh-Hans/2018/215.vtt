WEBVTT

00:00:17.150 --> 00:00:23.790 align:middle line:0
（ClassKit简介
演讲215）

00:00:31.365 --> 00:00:32.432 align:middle line:-1
大家早上好

00:00:33.367 --> 00:00:35.002 align:middle line:-1
我叫Pavel

00:00:35.068 --> 00:00:38.906 align:middle line:-2
Marin与我今天和大家
谈谈ClassKit

00:00:40.841 --> 00:00:43.343 align:middle line:-1
我们的演讲分为三部分

00:00:43.410 --> 00:00:47.014 align:middle line:-2
在第一部分中
我们将对ClassKit进行概述

00:00:47.748 --> 00:00:50.117 align:middle line:-2
我们将向你展示数据
如何在系统中流动

00:00:50.751 --> 00:00:52.252 align:middle line:-1
演讲的第二部分

00:00:52.319 --> 00:00:54.555 align:middle line:-1
我们将列出系统中所有的类

00:00:54.621 --> 00:00:57.457 align:middle line:-1
以及介绍每个类的一些有趣特性

00:00:58.225 --> 00:00:59.059 align:middle line:-1
最后

00:00:59.126 --> 00:01:02.663 align:middle line:-2
Marin将向我们展示如何在现有
app中使用ClassKit

00:00:59.126 --> 00:01:02.663 align:middle line:-2
Marin将向我们展示如何在现有
app中使用ClassKit

00:01:02.729 --> 00:01:03.931 align:middle line:-1
（使用ClassKit）

00:01:03.997 --> 00:01:05.966 align:middle line:-1
让我们从概述开始

00:01:06.033 --> 00:01:08.335 align:middle line:-1
（总体概述）

00:01:09.102 --> 00:01:11.972 align:middle line:-2
ClassKit
是一个基于教育的框架

00:01:12.039 --> 00:01:15.342 align:middle line:-1
这意味着它被设计于学校环境中使用

00:01:17.177 --> 00:01:22.049 align:middle line:-1
它允许你在app中定义可布置的内容

00:01:22.115 --> 00:01:25.319 align:middle line:-2
以便教师可以将其作为家庭作业
布置给学生

00:01:26.787 --> 00:01:30.657 align:middle line:-1
它可以汇报

00:01:30.724 --> 00:01:32.759 align:middle line:-1
这些由老师布置的内容的进度

00:01:34.394 --> 00:01:36.330 align:middle line:-2
而且这是在考虑到
隐私的情况下完成的

00:01:36.830 --> 00:01:40.534 align:middle line:-1
我的意思是你可以在你的app中

00:01:40.601 --> 00:01:43.036 align:middle line:-1
报告任何所布置内容的进度

00:01:43.604 --> 00:01:46.540 align:middle line:-1
但老师只会看到那些

00:01:46.607 --> 00:01:48.709 align:middle line:-1
他们明确布置给学生的任务的进度

00:01:50.644 --> 00:01:53.814 align:middle line:-1
你为何应采用ClassKit呢？

00:01:53.881 --> 00:01:58.952 align:middle line:-2
首先 这将能够提供更好的学生体验
以及更优的教师工作流程

00:01:59.920 --> 00:02:01.922 align:middle line:-1
因为他们将能够确切地知道

00:01:59.920 --> 00:02:01.922 align:middle line:-1
因为他们将能够确切地知道

00:02:01.989 --> 00:02:04.725 align:middle line:-2
你的app中有哪些可布置的内容
并将其布置给学生

00:02:06.093 --> 00:02:08.095 align:middle line:-1
它能让教师了解在app中

00:02:08.895 --> 00:02:11.598 align:middle line:-1
每个学生的表现如何

00:02:12.132 --> 00:02:15.169 align:middle line:-1
这使个性化学习成为可能

00:02:15.936 --> 00:02:18.939 align:middle line:-2
如果老师能够知道
学生在你的app中的表现

00:02:19.006 --> 00:02:23.177 align:middle line:-2
他们将能够更好地调整
以后的家庭作业

00:02:23.844 --> 00:02:26.980 align:middle line:-1
最后 它也给你一个竞争优势

00:02:27.047 --> 00:02:28.749 align:middle line:-1
这是因为如果教师…

00:02:29.783 --> 00:02:32.619 align:middle line:-1
当这类信息反馈给他们时

00:02:32.686 --> 00:02:37.024 align:middle line:-1
他们很可能会提倡在学校内广泛使用

00:02:37.090 --> 00:02:39.726 align:middle line:-1
你的app

00:02:40.928 --> 00:02:42.162 align:middle line:-1
说到学校

00:02:42.229 --> 00:02:45.933 align:middle line:-2
有一个叫Apple School
Manager的相关技术

00:02:46.400 --> 00:02:48.969 align:middle line:-1
学校管理员和IT部门

00:02:49.036 --> 00:02:53.574 align:middle line:-1
使用它为该组织中的每个人

00:02:53.974 --> 00:02:55.309 align:middle line:-1
创建托管Apple ID

00:02:55.375 --> 00:02:58.645 align:middle line:-2
每个老师都会得到一个
托管Apple ID

00:02:58.712 --> 00:03:01.181 align:middle line:-2
所有学生也将得到
托管的Apple ID

00:02:58.712 --> 00:03:01.181 align:middle line:-2
所有学生也将得到
托管的Apple ID

00:03:02.015 --> 00:03:04.885 align:middle line:-2
管理员也可以使用它
在学校内创建课程

00:03:04.952 --> 00:03:11.124 align:middle line:-1
例如 在数学课上我们有一位老师

00:03:11.191 --> 00:03:13.560 align:middle line:-1
他自己有一个托管Apple ID

00:03:13.627 --> 00:03:17.064 align:middle line:-2
而学生也有各自的
托管Apple ID

00:03:18.365 --> 00:03:22.169 align:middle line:-2
这也是学校管理
所有内容和设备的地方

00:03:23.370 --> 00:03:26.240 align:middle line:-1
正如我们提到的竞争优势一样

00:03:26.306 --> 00:03:31.311 align:middle line:-1
这是学校在ClassKit功能中

00:03:31.845 --> 00:03:33.847 align:middle line:-1
启用学生进度报告的地方

00:03:36.917 --> 00:03:40.988 align:middle line:-2
此外 这也是学校批量购买
app的地方

00:03:41.588 --> 00:03:46.193 align:middle line:-2
任何启用了
ClassKit支持的app

00:03:46.260 --> 00:03:49.630 align:middle line:-2
都将在其名字旁边有一个
“Works with Schoolwork”选中标记

00:03:51.331 --> 00:03:55.502 align:middle line:-2
Schoolwork是一个
即将推出的新教育app

00:03:56.270 --> 00:04:00.073 align:middle line:-2
学生使用此app查看
分发给他们的讲义

00:03:56.270 --> 00:04:00.073 align:middle line:-2
学生使用此app查看
分发给他们的讲义

00:04:00.807 --> 00:04:05.279 align:middle line:-1
教师用它来布置家庭作业

00:04:05.345 --> 00:04:08.148 align:middle line:-1
我们在系统中称之为讲义

00:04:09.116 --> 00:04:11.251 align:middle line:-1
讲义只是一组任务

00:04:11.318 --> 00:04:15.656 align:middle line:-2
例如 一段内容可能是
讲义中的一项任务

00:04:18.725 --> 00:04:23.597 align:middle line:-2
这也是教师查看学生
在某一份讲义中的表现

00:04:23.664 --> 00:04:27.501 align:middle line:-1
进度报告的地方

00:04:28.735 --> 00:04:32.272 align:middle line:-2
让我们来看看一个讲义的
生命周期是什么样的

00:04:32.339 --> 00:04:33.507 align:middle line:-1
（讲义的生命周期）

00:04:33.574 --> 00:04:37.211 align:middle line:-1
但在我们制作讲义之前

00:04:38.145 --> 00:04:41.248 align:middle line:-1
你的app需要能够声明

00:04:41.315 --> 00:04:43.283 align:middle line:-1
哪些内容是可布置的

00:04:46.353 --> 00:04:50.090 align:middle line:-2
在我们的框架中 这是通过使用
交叉代码CLS上下文来实现的

00:04:50.791 --> 00:04:53.894 align:middle line:-1
CLS上下文能够允许你

00:04:53.961 --> 00:04:56.430 align:middle line:-1
将你的内容表示为树结构

00:04:57.297 --> 00:05:00.434 align:middle line:-1
你的app中已经预定义了

00:04:57.297 --> 00:05:00.434 align:middle line:-1
你的app中已经预定义了

00:05:01.902 --> 00:05:04.238 align:middle line:-1
一个主app上下文

00:05:05.138 --> 00:05:09.877 align:middle line:-1
这充当上下文树中的根上下文

00:05:10.744 --> 00:05:13.847 align:middle line:-1
而你所有的内容都只是

00:05:13.914 --> 00:05:15.115 align:middle line:-1
主app上下文的后代

00:05:16.450 --> 00:05:17.284 align:middle line:-1
所以…

00:05:18.852 --> 00:05:20.621 align:middle line:-1
我们请求你尽早…

00:05:22.089 --> 00:05:23.857 align:middle line:-1
定义你的内容

00:05:23.924 --> 00:05:25.792 align:middle line:-1
因为你越早定义你的内容

00:05:25.859 --> 00:05:29.096 align:middle line:-2
Schoolwork中的教师
越早可以使用它

00:05:29.162 --> 00:05:31.098 align:middle line:-1
并将其布置给学生

00:05:33.000 --> 00:05:35.135 align:middle line:-1
假设你已经创建了你的上下文树

00:05:35.702 --> 00:05:38.005 align:middle line:-2
一位教师将能够打开
Schoolwork

00:05:38.505 --> 00:05:41.441 align:middle line:-2
然后点击“Create
New Handout”按钮

00:05:42.609 --> 00:05:44.611 align:middle line:-1
这将创建一个新的讲义实例

00:05:44.678 --> 00:05:47.614 align:middle line:-1
然后他们会将讲义

00:05:47.681 --> 00:05:49.850 align:middle line:-1
指向你app内的某个特定内容

00:05:50.551 --> 00:05:54.555 align:middle line:-2
一旦他们完成这个步骤
就可以把这份讲义分发给学生

00:05:55.489 --> 00:05:57.224 align:middle line:-1
一旦学生收到这份讲义

00:05:57.291 --> 00:06:00.994 align:middle line:-2
他们会点击讲义
这会打开你的app

00:05:57.291 --> 00:06:00.994 align:middle line:-2
他们会点击讲义
这会打开你的app

00:06:01.728 --> 00:06:05.432 align:middle line:-1
这时你的app将会创建必要的上下文

00:06:06.533 --> 00:06:09.670 align:middle line:-1
为了更好的学生体验

00:06:09.736 --> 00:06:13.373 align:middle line:-1
你最好将学生导航到相应的内容

00:06:15.309 --> 00:06:18.478 align:middle line:-2
Marin一会儿将会告诉我们
这是如何在代码中实现的

00:06:19.112 --> 00:06:21.682 align:middle line:-1
现在假设

00:06:21.748 --> 00:06:24.151 align:middle line:-1
学生开始做这份家庭作业

00:06:24.751 --> 00:06:27.421 align:middle line:-1
你的app开始向学生报告进度

00:06:28.055 --> 00:06:31.024 align:middle line:-1
所有这些进度将被发送到教师的设备

00:06:31.091 --> 00:06:35.429 align:middle line:-2
并捆绑在我们称之为
进度报告或活动报告中

00:06:36.363 --> 00:06:39.066 align:middle line:-1
当这些完成以后

00:06:39.132 --> 00:06:42.469 align:middle line:-1
教师可以从分发的讲义中获得该报告

00:06:46.373 --> 00:06:50.844 align:middle line:-2
这整个流程包括
你有一个教师托管ID

00:06:51.378 --> 00:06:52.880 align:middle line:-1
一个学生托管ID

00:06:53.514 --> 00:06:56.116 align:middle line:-1
也可能有一些设备

00:06:56.183 --> 00:07:00.587 align:middle line:-2
甚至只是一台你可以登录登出的设备
以便你可以进行测试

00:06:56.183 --> 00:07:00.587 align:middle line:-2
甚至只是一台你可以登录登出的设备
以便你可以进行测试

00:07:01.788 --> 00:07:05.359 align:middle line:-2
但尽管如此
我们实际上还可以做得比这更好

00:07:05.893 --> 00:07:08.896 align:middle line:-2
我们创建了一个我们称之为
开发者模式的东西

00:07:09.630 --> 00:07:15.269 align:middle line:-2
开发者模式的作用是
能够让你充当老师

00:07:16.069 --> 00:07:19.740 align:middle line:-1
以便你可以创建讲义

00:07:19.806 --> 00:07:20.908 align:middle line:-1
分发给学生

00:07:21.408 --> 00:07:23.510 align:middle line:-1
并查看这些学生的进度报告

00:07:23.944 --> 00:07:26.280 align:middle line:-1
它也可以让你充当学生

00:07:26.346 --> 00:07:27.781 align:middle line:-1
使用这些讲义

00:07:27.848 --> 00:07:30.851 align:middle line:-1
并且你的app可以将进度报告给教师

00:07:33.253 --> 00:07:35.722 align:middle line:-1
还有一种重置开发数据的方法

00:07:35.789 --> 00:07:40.794 align:middle line:-1
说实话我个人经常需要使用这个按钮

00:07:42.596 --> 00:07:45.132 align:middle line:-2
有了这些作为前提
我们来看看框架中有哪些类

00:07:45.199 --> 00:07:46.066 align:middle line:-1
（框架类）

00:07:46.133 --> 00:07:48.669 align:middle line:-2
在最顶端
我们有一个Data Store

00:07:50.470 --> 00:07:54.274 align:middle line:-1
它用于在我们的app中管理上下文树

00:07:57.678 --> 00:08:01.248 align:middle line:-2
这也是主app上下文作为属性
暴露出来的地方

00:07:57.678 --> 00:08:01.248 align:middle line:-2
这也是主app上下文作为属性
暴露出来的地方

00:08:02.015 --> 00:08:06.887 align:middle line:-2
Data Store跟踪系统中的
所有的修改对象

00:08:07.988 --> 00:08:09.890 align:middle line:-1
所以如果你想保存这些对象

00:08:09.957 --> 00:08:15.462 align:middle line:-2
你可以调用
CLSDataStore.save(completion:)

00:08:18.632 --> 00:08:19.566 align:middle line:-1
我还想提一下

00:08:19.633 --> 00:08:22.469 align:middle line:-1
一个Data Store共享实例

00:08:22.536 --> 00:08:24.037 align:middle line:-1
你可以与之交互

00:08:25.339 --> 00:08:29.243 align:middle line:-1
接下来我们讨论一下上下文

00:08:30.944 --> 00:08:35.182 align:middle line:-1
我们看到上下文是一个树层次结构

00:08:35.849 --> 00:08:39.285 align:middle line:-1
Marin稍后会讨论上下文的细节

00:08:39.352 --> 00:08:43.222 align:middle line:-2
如何使用它们
并提及一些关于它们的有趣属性

00:08:43.524 --> 00:08:46.793 align:middle line:-1
但我想专注于上下文身份

00:08:48.328 --> 00:08:52.733 align:middle line:-2
ClassKit中上下文的身份
包含两样东西

00:08:53.500 --> 00:08:55.569 align:middle line:-1
第一个是identifier属性

00:08:56.904 --> 00:08:58.839 align:middle line:-1
identifier属性允许你

00:08:58.906 --> 00:09:02.843 align:middle line:-1
在兄弟节点中唯一识别上下文

00:08:58.906 --> 00:09:02.843 align:middle line:-1
在兄弟节点中唯一识别上下文

00:09:04.444 --> 00:09:05.612 align:middle line:-1
我的意思是

00:09:05.679 --> 00:09:08.615 align:middle line:-2
你可以拥有具有相同
identifier的上下文

00:09:08.682 --> 00:09:10.684 align:middle line:-2
或具有相同identifier
的多个上下文

00:09:11.251 --> 00:09:14.555 align:middle line:-2
只要他们没有相同的父节点
那就没问题

00:09:15.889 --> 00:09:19.927 align:middle line:-2
另一个东西我们称之为
上下文标识符路径

00:09:21.228 --> 00:09:23.564 align:middle line:-1
上下文标识符路径是我们实际用来

00:09:23.630 --> 00:09:26.567 align:middle line:-1
在上下文树中唯一的识别

00:09:27.234 --> 00:09:28.368 align:middle line:-1
特定上下文的东西

00:09:29.102 --> 00:09:31.238 align:middle line:-1
上下文标识符路径是什么呢？

00:09:31.305 --> 00:09:33.640 align:middle line:-2
其实它只是一个
上下文标识符的数组

00:09:34.441 --> 00:09:38.612 align:middle line:-2
我们使用它的方式是
从根开始遍历上下文树

00:09:38.679 --> 00:09:41.715 align:middle line:-2
沿着这条路径
直到我们到达一个节点

00:09:42.349 --> 00:09:43.717 align:middle line:-1
即路径中的最后一个节点

00:09:45.552 --> 00:09:47.855 align:middle line:-1
我们来看看这在实践中看起来如何

00:09:50.123 --> 00:09:54.428 align:middle line:-2
在这个例子中 我们有一个指向
某本书中某一章的

00:09:54.494 --> 00:09:56.129 align:middle line:-2
“section-1”上下文的
上下文路径

00:09:56.797 --> 00:09:58.832 align:middle line:-1
右边是我们的上下文树

00:09:59.266 --> 00:10:02.369 align:middle line:-2
要查找“section-1”
我们将首先访问“App”上下文

00:09:59.266 --> 00:10:02.369 align:middle line:-2
要查找“section-1”
我们将首先访问“App”上下文

00:10:03.136 --> 00:10:04.872 align:middle line:-1
然后我们访问“Book”上下文

00:10:04.938 --> 00:10:06.773 align:middle line:-2
然后找到“Book”上下文的
孩子中

00:10:06.840 --> 00:10:08.408 align:middle line:-2
标识符为“chapter-2”的
上下文

00:10:08.909 --> 00:10:11.712 align:middle line:-2
我们将访问这个节点 然后以同样的
方式访问“section-1”

00:10:12.579 --> 00:10:15.315 align:middle line:-2
由于“section-1”
是我们路径上的最后一个节点

00:10:15.382 --> 00:10:18.285 align:middle line:-1
这个节点就是该路径所代表的节点

00:10:20.454 --> 00:10:23.891 align:middle line:-2
我们有几种方法来查找
系统中的上下文

00:10:24.791 --> 00:10:27.961 align:middle line:-2
一种是使用绝对上下文路径
为此你可以调用

00:10:28.028 --> 00:10:32.633 align:middle line:-2
CLSDataStore的 contexts
(matchingIdentifierPath)方法

00:10:34.101 --> 00:10:39.473 align:middle line:-1
此方法将会返回路径中的所有上下文

00:10:39.840 --> 00:10:43.477 align:middle line:-2
所以在这个例子中
它应该是一个包含“App”上下文

00:10:43.544 --> 00:10:46.747 align:middle line:-2
“Book”上下文、“chapter-2”上下文
以及“section-1”上下文的数组

00:10:48.015 --> 00:10:51.018 align:middle line:-2
如果由于某种原因 “section-1”中的
“chapter-2”丢失了

00:10:51.485 --> 00:10:53.620 align:middle line:-1
那么完成块中的数组

00:10:53.687 --> 00:10:56.790 align:middle line:-2
将继续包含“App”上下文
和“Book”上下文

00:10:57.958 --> 00:11:02.262 align:middle line:-2
这使你有机会为遗失的上下文
创建完全不同的内容

00:10:57.958 --> 00:11:02.262 align:middle line:-2
这使你有机会为遗失的上下文
创建完全不同的内容

00:11:03.530 --> 00:11:06.066 align:middle line:-2
还有一种使用相对路径
查找上下文的方法

00:11:07.134 --> 00:11:09.536 align:middle line:-1
如果你已经持有对某个上下文的引用

00:11:09.603 --> 00:11:11.338 align:middle line:-2
但你想找到其后代
这时它就很有用

00:11:12.039 --> 00:11:13.974 align:middle line:-1
实现它的方法是

00:11:14.041 --> 00:11:16.743 align:middle line:-2
CLSContext的 descendent
(matchingIdentifierPath)函数

00:11:17.477 --> 00:11:18.545 align:middle line:-1
这里的区别在于

00:11:18.612 --> 00:11:20.781 align:middle line:-2
你要么获取到该上下文
要么获取到null

00:11:20.848 --> 00:11:22.649 align:middle line:-1
如果它不匹配任何路径

00:11:24.551 --> 00:11:27.354 align:middle line:-1
还有一种查找上下文的方式

00:11:27.421 --> 00:11:32.893 align:middle line:-2
这是通过CLSDataStore的 contexts
(matching:predicate)方法实现的

00:11:33.293 --> 00:11:34.628 align:middle line:-1
在幻灯片的例子中

00:11:34.695 --> 00:11:38.265 align:middle line:-2
你可以看到如何找到
某个上下文的所有孩子

00:11:39.299 --> 00:11:42.736 align:middle line:-2
此外 还有一个
DataStoreDelegate

00:11:43.604 --> 00:11:48.342 align:middle line:-1
它与我们刚才看到的路径查找方法

00:11:48.408 --> 00:11:49.409 align:middle line:-1
一同使用

00:11:52.446 --> 00:11:55.849 align:middle line:-1
屏幕上是委托声明

00:11:59.486 --> 00:12:00.921 align:middle line:-1
这当你的上下文是

00:11:59.486 --> 00:12:00.921 align:middle line:-1
这当你的上下文是

00:12:00.988 --> 00:12:04.191 align:middle line:-2
按需下载的时候通常很有用
这种情况下你的所有上下文都不可用

00:12:04.258 --> 00:12:08.295 align:middle line:-1
因此你想按需创建这些上下文

00:12:08.362 --> 00:12:12.733 align:middle line:-2
它的工作原理是
当我们开始查询路径中的上下文时

00:12:13.033 --> 00:12:17.938 align:middle line:-1
如果你没有在该路径上找到上下文

00:12:18.005 --> 00:12:22.042 align:middle line:-1
我们将在你定义的委托上调用

00:12:22.109 --> 00:12:24.011 align:middle line:-1
createContext(forIdentifier)方法

00:12:24.411 --> 00:12:26.413 align:middle line:-1
这给你一个创建所遗失上下文的机会

00:12:27.414 --> 00:12:30.117 align:middle line:-2
当你创建好了上下文
我们将把这个上下文

00:12:30.184 --> 00:12:32.853 align:middle line:-1
添加到树中的正确位置

00:12:35.722 --> 00:12:39.526 align:middle line:-2
正如我所提到的
这对具有动态内容的app非常有用

00:12:40.060 --> 00:12:42.362 align:middle line:-1
让我们来看看实践中这是如何运作的

00:12:43.330 --> 00:12:45.799 align:middle line:-1
我们还使用相同的标识符路径

00:12:45.866 --> 00:12:49.770 align:middle line:-2
但这次 我们的树并不完整
而且我们有一个委托对象

00:12:49.837 --> 00:12:51.171 align:middle line:-1
（委托实战）

00:12:51.238 --> 00:12:54.374 align:middle line:-1
我们首先访问“App”上下文

00:12:55.309 --> 00:12:57.144 align:middle line:-1
然后我们将访问“Book”上下文

00:12:57.744 --> 00:13:01.381 align:middle line:-2
接着我们将尝试访问
“chapter-2”上下文

00:12:57.744 --> 00:13:01.381 align:middle line:-2
接着我们将尝试访问
“chapter-2”上下文

00:13:02.382 --> 00:13:03.483 align:middle line:-1
但它并不存在

00:13:03.750 --> 00:13:06.053 align:middle line:-1
因此我们要求委托创建它

00:13:06.687 --> 00:13:08.055 align:middle line:-1
如果委托创建了它

00:13:08.589 --> 00:13:10.791 align:middle line:-1
我们会将它添加到树上的正确位置

00:13:11.225 --> 00:13:12.693 align:middle line:-1
我们可以访问这个上下文了

00:13:13.527 --> 00:13:17.397 align:middle line:-2
我们将为“section-1”
做同样的事情

00:13:18.332 --> 00:13:20.734 align:middle line:-2
由于“section-1”
是路径上最后一节点

00:13:20.801 --> 00:13:23.303 align:middle line:-1
这意味着它就是这条路径所指的对象

00:13:26.173 --> 00:13:28.842 align:middle line:-1
接下来我们谈谈活动对象

00:13:29.476 --> 00:13:32.646 align:middle line:-1
活动对象实际上是用来

00:13:32.880 --> 00:13:35.782 align:middle line:-1
向教师报告进度的对象

00:13:36.283 --> 00:13:39.419 align:middle line:-1
事实上他们应被理解为“活动报告”

00:13:42.289 --> 00:13:46.193 align:middle line:-1
活动对象始终与上下文相关联

00:13:46.527 --> 00:13:48.829 align:middle line:-1
你可以自己分配一个

00:13:49.363 --> 00:13:53.734 align:middle line:-2
你可以通过调用 CLSContext.
createNewActivity()方法

00:13:53.800 --> 00:13:55.736 align:middle line:-1
来创建一个新的活动对象

00:13:56.303 --> 00:13:58.305 align:middle line:-2
这将返回一个与方法的接收者
相关联的

00:13:58.372 --> 00:14:00.507 align:middle line:-1
新的活动对象

00:13:58.372 --> 00:14:00.507 align:middle line:-1
新的活动对象

00:14:02.876 --> 00:14:03.810 align:middle line:-1
如果你想查看

00:14:03.877 --> 00:14:07.848 align:middle line:-2
当前是否有一个活动
与你的上下文相关联

00:14:07.915 --> 00:14:11.051 align:middle line:-2
你可以通过查询CLSContext的
currentActivity属性

00:14:11.118 --> 00:14:12.452 align:middle line:-1
来完成此操作

00:14:14.855 --> 00:14:17.791 align:middle line:-2
我想提醒一下
每当你协同创建一个新活动时

00:14:18.192 --> 00:14:21.395 align:middle line:-1
这与重新启动该活动是一回事

00:14:22.162 --> 00:14:26.433 align:middle line:-2
这意味着教师将收到
一份新的进度报告

00:14:30.270 --> 00:14:32.840 align:middle line:-1
我们来看看如何将进度添加到活动中

00:14:32.906 --> 00:14:35.576 align:middle line:-2
一种方法是直接设置
progress属性

00:14:36.376 --> 00:14:41.081 align:middle line:-2
这行代码是要添加一个进度范围
从开始到结束

00:14:42.516 --> 00:14:45.419 align:middle line:-1
另外直接设置progress属性

00:14:46.153 --> 00:14:49.223 align:middle line:-2
与将进度范围的开始设为0
具有相同效果

00:14:51.491 --> 00:14:53.961 align:middle line:-2
我还想提一下
添加互相重叠的进度范围

00:14:54.027 --> 00:14:56.964 align:middle line:-1
甚至将同一个进度范围添加多次

00:14:57.030 --> 00:14:59.366 align:middle line:-1
都是完全没有问题的

00:15:00.100 --> 00:15:02.936 align:middle line:-1
我们会在幕后处理好所有细节

00:15:03.470 --> 00:15:06.940 align:middle line:-1
以确保最终向教师提交正确的报告

00:15:08.575 --> 00:15:12.112 align:middle line:-1
我们还需要讨论另外一个对象

00:15:12.179 --> 00:15:13.914 align:middle line:-1
那就是活动项目

00:15:14.815 --> 00:15:17.017 align:middle line:-1
什么是活动项目

00:15:18.585 --> 00:15:21.922 align:middle line:-1
它是你希望作为你的报告的一部分

00:15:21.989 --> 00:15:23.290 align:middle line:-1
展示给教师的数量

00:15:25.259 --> 00:15:28.462 align:middle line:-1
每个活动可以有一个主要活动项目

00:15:28.762 --> 00:15:31.365 align:middle line:-1
这将是除了进度以外

00:15:31.431 --> 00:15:33.567 align:middle line:-1
你想展示给教师的

00:15:34.101 --> 00:15:35.302 align:middle line:-1
主要信息

00:15:36.637 --> 00:15:39.640 align:middle line:-2
例如 这对于展示测验的
最终分数很有用

00:15:41.308 --> 00:15:44.311 align:middle line:-1
你还可以拥有多个其他活动项目

00:15:45.145 --> 00:15:49.082 align:middle line:-2
你可以使用它添加额外的信息
并展示给教师

00:15:49.149 --> 00:15:52.653 align:middle line:-1
比如 给学生提供了多少提示

00:15:52.719 --> 00:15:55.155 align:middle line:-1
每个问题的答案 等等

00:15:57.524 --> 00:16:02.362 align:middle line:-2
活动分项和抽象类
在我们的系统中

00:15:57.524 --> 00:16:02.362 align:middle line:-2
活动分项和抽象类
在我们的系统中

00:16:02.429 --> 00:16:04.665 align:middle line:-1
我们已经定义了三个子类

00:16:05.966 --> 00:16:07.901 align:middle line:-2
其中之一是
CLSQuantityItem

00:16:07.968 --> 00:16:10.971 align:middle line:-1
这对于简单的标量 如提示

00:16:11.471 --> 00:16:13.407 align:middle line:-1
经验点和类似的事情非常有用

00:16:13.473 --> 00:16:14.408 align:middle line:-1
（CLSActivityItem）

00:16:14.474 --> 00:16:15.909 align:middle line:-1
我们还有一个ScoreItem

00:16:15.976 --> 00:16:19.012 align:middle line:-2
这对于表示"Y分之X"之类的
数值很有用

00:16:19.880 --> 00:16:23.984 align:middle line:-2
例如 对于测验的最终分数
这可能很有用

00:16:24.751 --> 00:16:27.054 align:middle line:-1
我们也有一个BinaryItem

00:16:27.988 --> 00:16:32.993 align:middle line:-2
这个是用来回答
“是或否”一类的问题

00:16:34.661 --> 00:16:38.665 align:middle line:-2
我们来看看如何将主活动项目
添加到活动中

00:16:38.732 --> 00:16:41.535 align:middle line:-1
你首先需要创建一个活动项目

00:16:42.002 --> 00:16:43.403 align:middle line:-1
在幻灯片中

00:16:43.470 --> 00:16:46.807 align:middle line:-2
我们向你展示了如何创建名为
“Total Score”的ScoreItem

00:16:47.374 --> 00:16:50.410 align:middle line:-2
然后将其作为主活动项目
与一个活动进行关联

00:16:50.477 --> 00:16:51.979 align:middle line:-1
你需要设置

00:16:52.513 --> 00:16:55.682 align:middle line:-2
一个活动的
primaryActivityItem属性

00:16:58.151 --> 00:17:02.289 align:middle line:-2
要添加其他活动项目
你将再次创建一个新的活动项目

00:16:58.151 --> 00:17:02.289 align:middle line:-2
要添加其他活动项目
你将再次创建一个新的活动项目

00:17:02.723 --> 00:17:05.726 align:middle line:-2
在幻灯片中 我们展示了
如何创建QuantityItem

00:17:06.093 --> 00:17:09.296 align:middle line:-2
其类型为“hints”
然后是它的数量

00:17:10.329 --> 00:17:11.964 align:middle line:-1
为了将它与一项活动联系起来

00:17:12.031 --> 00:17:16.170 align:middle line:-2
你需要调用CLSActivity的
addAdditionalActivityItem方法

00:17:16.236 --> 00:17:19.173 align:middle line:-1
将你刚刚创建的项目作为参数传给它

00:17:19.239 --> 00:17:23.042 align:middle line:-1
此时 该活动项目将与活动相关联

00:17:24.077 --> 00:17:28.080 align:middle line:-1
在处理活动项目时有一些最佳实践

00:17:29.249 --> 00:17:32.953 align:middle line:-1
其中之一是始终为主活动项目

00:17:33.020 --> 00:17:34.488 align:middle line:-1
设置相同的子类

00:17:35.656 --> 00:17:36.823 align:middle line:-1
我的意思是

00:17:37.090 --> 00:17:40.727 align:middle line:-2
想象一下 教师给两个学生
分配相同的上下文

00:17:41.528 --> 00:17:43.564 align:middle line:-1
你知道 在学生A的设备上

00:17:43.630 --> 00:17:47.034 align:middle line:-2
你将主活动项目设置为
ScoreItem

00:17:47.968 --> 00:17:49.203 align:middle line:-1
在学生B的设备上

00:17:49.269 --> 00:17:52.306 align:middle line:-2
你将主活动项目设置为
BinaryItem

00:17:53.040 --> 00:17:55.108 align:middle line:-2
如果你这样做
我们实际上无法产生

00:17:55.175 --> 00:18:00.914 align:middle line:-2
一个汇总报告给老师
因为没有明确的启发式方法

00:17:55.175 --> 00:18:00.914 align:middle line:-2
一个汇总报告给老师
因为没有明确的启发式方法

00:18:00.981 --> 00:18:04.084 align:middle line:-2
将ScoreItem转换为
BinaryItem 反之亦然

00:18:04.718 --> 00:18:07.087 align:middle line:-1
正因为如此 最好始终使用

00:18:07.688 --> 00:18:10.624 align:middle line:-1
活动项目的相同子类作为主活动项目

00:18:11.792 --> 00:18:15.696 align:middle line:-1
另外 请为你的活动项目提供清晰

00:18:15.762 --> 00:18:16.930 align:middle line:-1
简单但描述性强的标题

00:18:17.331 --> 00:18:20.167 align:middle line:-1
这是因为你在活动项目上设置的标题

00:18:20.234 --> 00:18:22.503 align:middle line:-1
将在其报告中显示给教师

00:18:24.338 --> 00:18:27.608 align:middle line:-1
并请好好利用附加活动项目

00:18:27.674 --> 00:18:31.178 align:middle line:-1
它们是提供额外信息的好方法

00:18:31.245 --> 00:18:33.647 align:middle line:-1
教师实际上需要这些信息来真正了解

00:18:33.714 --> 00:18:36.283 align:middle line:-1
学生在你的app中的表现

00:18:37.718 --> 00:18:39.820 align:middle line:-1
因此 我想邀请Marin上台

00:18:39.887 --> 00:18:42.322 align:middle line:-2
她将在实践中向我们展示
所有这些如何运作

00:18:50.797 --> 00:18:51.632 align:middle line:-1
（使用ClassKit）

00:18:51.698 --> 00:18:52.599 align:middle line:-1
大家好

00:18:53.200 --> 00:18:56.570 align:middle line:-2
我的名字是Marin
我是ClassKit团队的工程师

00:18:57.204 --> 00:18:59.406 align:middle line:-1
我想告诉你

00:18:59.473 --> 00:19:02.509 align:middle line:-2
如何将ClassKitapp到
现有的app中

00:18:59.473 --> 00:19:02.509 align:middle line:-2
如何将ClassKitapp到
现有的app中

00:19:03.310 --> 00:19:06.980 align:middle line:-2
为了做到这一点 Pavel
和我预先构建了一个演示app

00:19:07.948 --> 00:19:09.750 align:middle line:-1
该演示app叫Quizzler

00:19:10.184 --> 00:19:12.853 align:middle line:-1
这是一个简单的数学测验app

00:19:13.487 --> 00:19:14.988 align:middle line:-1
你看到的第一个屏幕

00:19:15.355 --> 00:19:18.892 align:middle line:-1
要求你选择你想要测试的数学类型

00:19:19.560 --> 00:19:21.595 align:middle line:-1
让我们继续并选择加法测验

00:19:22.930 --> 00:19:25.632 align:middle line:-2
选择好之后
我们就会进入另一个界面

00:19:25.999 --> 00:19:28.735 align:middle line:-1
问我们是否想查看

00:19:28.802 --> 00:19:30.404 align:middle line:-1
所有用户的高分记分牌

00:19:31.004 --> 00:19:33.373 align:middle line:-1
或者我们只是想直接开始测验

00:19:34.041 --> 00:19:35.742 align:middle line:-1
让我们直接点击开始测验

00:19:37.211 --> 00:19:40.280 align:middle line:-1
然后 我们会看到每一个问题

00:19:41.014 --> 00:19:44.651 align:middle line:-2
我们只要回答这些问题
最后我们会得到一个总分

00:19:45.719 --> 00:19:48.589 align:middle line:-2
现在我们了解了这个
演示app的功能

00:19:49.122 --> 00:19:52.292 align:middle line:-2
让我们来谈谈
使用ClassKit的步骤

00:19:53.660 --> 00:19:57.998 align:middle line:-2
首先我们将讨论
什么类型的上下文数据

00:19:58.065 --> 00:20:00.067 align:middle line:-1
对我们的演示app有意义

00:19:58.065 --> 00:20:00.067 align:middle line:-1
对我们的演示app有意义

00:20:00.968 --> 00:20:02.135 align:middle line:-1
讨论完这些之后

00:20:02.669 --> 00:20:06.540 align:middle line:-2
我们还会讨论什么类型的
由学生产生的活动数据

00:20:06.607 --> 00:20:07.641 align:middle line:-1
也可能有意义

00:20:08.909 --> 00:20:10.944 align:middle line:-1
我们将确保我们支持深度链接

00:20:11.512 --> 00:20:12.946 align:middle line:-1
现有两种方法可做到这一点

00:20:13.714 --> 00:20:15.983 align:middle line:-1
第一种方法是使用全局链接

00:20:16.850 --> 00:20:20.988 align:middle line:-2
如果你已经在app中
采用了全局链接

00:20:21.054 --> 00:20:24.258 align:middle line:-1
你可以简单地设置

00:20:24.324 --> 00:20:25.993 align:middle line:-2
CLSContext中的
全局链接属性

00:20:27.661 --> 00:20:31.164 align:middle line:-1
而我们的演示app不支全局链接

00:20:31.231 --> 00:20:33.000 align:middle line:-1
所以我会向你展示第二种方法

00:20:33.433 --> 00:20:37.271 align:middle line:-2
即使用NS User Activities
Continue Restoration Handler

00:20:38.572 --> 00:20:41.475 align:middle line:-1
然后我们将确保使用开发者模式

00:20:41.909 --> 00:20:45.279 align:middle line:-2
在Schoolwork app上
进行我们的测试

00:20:46.547 --> 00:20:49.483 align:middle line:-2
现在我们来谈谈什么类型的
上下文结构

00:20:49.550 --> 00:20:50.884 align:middle line:-1
可能对这个app有意义

00:20:51.652 --> 00:20:54.188 align:middle line:-1
作为第一步 我们可能会做一个

00:20:54.588 --> 00:20:58.592 align:middle line:-2
我们的用户界面与上下文树的
一对一映射

00:20:59.159 --> 00:21:01.828 align:middle line:-1
如果我们这样做

00:20:59.159 --> 00:21:01.828 align:middle line:-1
如果我们这样做

00:21:01.895 --> 00:21:03.130 align:middle line:-1
最终会得到这样一个结构

00:21:03.931 --> 00:21:07.000 align:middle line:-1
其中最顶层是我们的主app上下文

00:21:07.067 --> 00:21:08.702 align:middle line:-1
即我们的Quizzler app

00:21:09.236 --> 00:21:14.007 align:middle line:-2
在它的下面是“Addition”上下文
和“Multiplication”上下文

00:21:14.641 --> 00:21:16.410 align:middle line:-1
在它们各自的下面

00:21:16.677 --> 00:21:21.014 align:middle line:-2
还有“Scoreboard”上下文
以及真正的“Quiz”上下文

00:21:22.049 --> 00:21:27.754 align:middle line:-2
Pavel告诉我们
上下文是我们app的一部分

00:21:27.821 --> 00:21:30.490 align:middle line:-1
教师将它们布置给学生

00:21:31.258 --> 00:21:32.559 align:middle line:-1
现在我们牢记这一点

00:21:32.626 --> 00:21:35.028 align:middle line:-2
我们先来谈谈
“Scoreboard”上下文

00:21:36.129 --> 00:21:39.967 align:middle line:-2
“Scoreboard”上下文
是什么？

00:21:40.467 --> 00:21:42.236 align:middle line:-1
这是所有用户的最高分

00:21:42.936 --> 00:21:47.441 align:middle line:-2
一位老师给他的学生分发这些
真的有意义吗？

00:21:49.076 --> 00:21:49.977 align:middle line:-1
好像并没有

00:21:50.043 --> 00:21:52.179 align:middle line:-1
所以我们将删除它

00:21:53.046 --> 00:21:55.716 align:middle line:-1
现在 剩下的结构看起来像这样

00:21:56.650 --> 00:21:59.586 align:middle line:-2
接下来让我们看看
“Addition”上下文

00:22:00.354 --> 00:22:03.423 align:middle line:-2
我们app中的“Addition”
上下文是什么？

00:22:04.157 --> 00:22:06.593 align:middle line:-1
难道它不就只是加法测验吗？

00:22:07.427 --> 00:22:09.796 align:middle line:-2
这实际上就是一件事
而不是两件

00:22:10.330 --> 00:22:12.666 align:middle line:-1
所以这些应该被合并为一个

00:22:13.033 --> 00:22:14.301 align:middle line:-1
所以我们继续这样做

00:22:14.368 --> 00:22:17.538 align:middle line:-1
对于“Multiplication”上下文也是如此

00:22:18.705 --> 00:22:21.308 align:middle line:-1
现在我们剩下的结构看起来像这样

00:22:22.309 --> 00:22:24.311 align:middle line:-1
Pavel和我讨论了一下

00:22:24.578 --> 00:22:28.782 align:middle line:-2
我们决定在将来可能会
添加一个减法测验

00:22:29.550 --> 00:22:31.385 align:middle line:-1
以及一个除法测验

00:22:31.718 --> 00:22:35.455 align:middle line:-2
如果我们决定这样做 我们可以
很方便地将它们添加为兄弟节点

00:22:36.156 --> 00:22:37.858 align:middle line:-1
现在 当你们都在想

00:22:37.925 --> 00:22:40.794 align:middle line:-1
哪种结构对你的app有意义

00:22:41.094 --> 00:22:43.397 align:middle line:-1
不要只考虑你当前的功能集

00:22:43.630 --> 00:22:46.200 align:middle line:-1
同时也要考虑你将来可能做什么

00:22:46.266 --> 00:22:49.269 align:middle line:-2
并确保你的结构将随着
你的需求变化轻松扩展

00:22:50.871 --> 00:22:53.307 align:middle line:-1
现在让我们来谈谈上下文本身

00:22:53.941 --> 00:22:56.743 align:middle line:-1
我们希望确保我们有明确的标题

00:22:57.211 --> 00:23:01.215 align:middle line:-1
那是因为标题是一个重要信息

00:22:57.211 --> 00:23:01.215 align:middle line:-1
那是因为标题是一个重要信息

00:23:01.281 --> 00:23:06.486 align:middle line:-2
学生和老师都必须通过这个信息
了解这个上下文代表什么

00:23:06.553 --> 00:23:07.654 align:middle line:-1
（CLSContext）

00:23:07.721 --> 00:23:11.491 align:middle line:-1
我们也希望尽早定义我们的上下文

00:23:12.192 --> 00:23:14.995 align:middle line:-2
对于我们的演示app
我们使用的是静态内容

00:23:15.295 --> 00:23:19.333 align:middle line:-2
因此一旦app启动
我们就知道要编写哪些上下文

00:23:19.733 --> 00:23:21.335 align:middle line:-2
所以这就是我们定义
我们的上下文的时候

00:23:22.970 --> 00:23:26.273 align:middle line:-1
我们可能也想要始终向教师

00:23:26.340 --> 00:23:29.510 align:middle line:-1
以特定顺序展示我们的上下文

00:23:30.277 --> 00:23:33.914 align:middle line:-2
对于我们的演示app
意味着“Addition”上下文

00:23:33.981 --> 00:23:38.652 align:middle line:-2
应该始终显示在
“Multiplication”上下文之上

00:23:39.052 --> 00:23:43.023 align:middle line:-2
为了做到这一点
我们将利用CLSContext中

00:23:43.090 --> 00:23:44.625 align:middle line:-1
displayOrder属性

00:23:46.193 --> 00:23:47.327 align:middle line:-1
现在我们已经确定了

00:23:47.394 --> 00:23:49.563 align:middle line:-1
我们要写什么类型的上下文数据

00:23:49.630 --> 00:23:52.065 align:middle line:-1
让我们来谈谈由学生生成的活动

00:23:53.534 --> 00:23:56.370 align:middle line:-2
在这里 我有一个
Schoolwork app的截图

00:23:56.737 --> 00:24:00.941 align:middle line:-1
这是一些活动数据可能的样子

00:23:56.737 --> 00:24:00.941 align:middle line:-1
这是一些活动数据可能的样子

00:24:01.975 --> 00:24:04.778 align:middle line:-2
对于我们的测验
我认为记录学生进行这项测验

00:24:04.845 --> 00:24:08.949 align:middle line:-1
所花费的总时间绝对有意义

00:24:09.616 --> 00:24:11.518 align:middle line:-1
为了做到这一点 我们可以调用

00:24:11.585 --> 00:24:15.856 align:middle line:-2
CLSActivity的
start()和stop()方法

00:24:17.257 --> 00:24:20.961 align:middle line:-1
现在 如果能够显示学生得到的总分

00:24:21.028 --> 00:24:22.229 align:middle line:-1
可能也很不错

00:24:23.130 --> 00:24:24.598 align:middle line:-1
如果我们仔细想想

00:24:24.665 --> 00:24:29.636 align:middle line:-1
总分可能是这整个测验中

00:24:29.703 --> 00:24:31.004 align:middle line:-1
最重要的信息

00:24:31.538 --> 00:24:33.106 align:middle line:-1
因此我们可能想使用

00:24:33.173 --> 00:24:35.576 align:middle line:-2
Schoolwork UI突出显示它
就像我们在这里做的一样

00:24:36.143 --> 00:24:40.848 align:middle line:-2
为了做到这一点 我们可以创建
一个CLSScoreItem

00:24:41.148 --> 00:24:44.184 align:middle line:-1
然后我们将其设置为主活动项目

00:24:44.518 --> 00:24:47.487 align:middle line:-2
这样 它就会在
Schoolwork UI中突显

00:24:48.789 --> 00:24:51.358 align:middle line:-1
现在 如果能显示每个问题

00:24:51.425 --> 00:24:54.595 align:middle line:-1
是否回答正确可能也很好

00:24:55.629 --> 00:25:00.767 align:middle line:-2
要做到这一点 我们可以创建
CLSBinaryItem

00:24:55.629 --> 00:25:00.767 align:middle line:-2
要做到这一点 我们可以创建
CLSBinaryItem

00:25:01.702 --> 00:25:03.303 align:middle line:-1
并将其中每一个

00:25:03.370 --> 00:25:06.440 align:middle line:-1
都添加为活动的附加活动项目

00:25:07.608 --> 00:25:08.809 align:middle line:-1
现在我们已经确定了

00:25:08.876 --> 00:25:11.144 align:middle line:-2
要写什么类型的
ClassKit代码

00:25:11.712 --> 00:25:14.648 align:middle line:-1
让我们看看这实际上看起来如何

00:25:15.115 --> 00:25:16.750 align:middle line:-1
（演示）

00:25:20.454 --> 00:25:24.291 align:middle line:-2
现在屏幕上是我的显示器镜像
我打开了Xcode

00:25:24.925 --> 00:25:29.296 align:middle line:-2
我首先要做的是
选择我的项目的目标

00:25:30.163 --> 00:25:33.467 align:middle line:-2
然后我将选择
Capabilities窗格

00:25:33.534 --> 00:25:36.537 align:middle line:-2
在这里找到
ClassKit API

00:25:37.538 --> 00:25:40.374 align:middle line:-1
然后 我们要确保将这个选项打开

00:25:40.674 --> 00:25:43.443 align:middle line:-2
现在我们就准备好开始
写一些ClassKit代码了

00:25:44.378 --> 00:25:46.880 align:middle line:-1
首先我们要写我们的上下文

00:25:47.214 --> 00:25:50.250 align:middle line:-2
我们说过可以在app
启动后立即这样做

00:25:50.717 --> 00:25:53.387 align:middle line:-2
现在让我们打开
AppDelegate

00:25:54.087 --> 00:25:57.424 align:middle line:-1
我们在这里创建一个函数

00:25:57.491 --> 00:25:59.860 align:middle line:-1
它将为我们发布我们的上下文

00:26:02.129 --> 00:26:04.932 align:middle line:-1
这是我们的发布上下文函数

00:26:05.232 --> 00:26:07.401 align:middle line:-1
而我们现在要做的是

00:26:07.467 --> 00:26:09.570 align:middle line:-2
实例化一个
CLSContext实例

00:26:10.304 --> 00:26:13.106 align:middle line:-1
传递该上下文的类型

00:26:14.374 --> 00:26:19.379 align:middle line:-2
给它一个唯一的标识符
然后是一个清晰简洁的标题

00:26:20.113 --> 00:26:22.282 align:middle line:-2
确保设置了
displayOrder属性

00:26:22.349 --> 00:26:26.954 align:middle line:-2
因为我们希望加法测验
显示在乘法测验之上

00:26:27.821 --> 00:26:30.591 align:middle line:-2
然后 我们将为乘法测验
做同样的事情

00:26:30.824 --> 00:26:34.127 align:middle line:-2
实例化一个上下文
并确保设置显示顺序

00:26:34.962 --> 00:26:38.899 align:middle line:-1
接着 我们创建一个

00:26:38.966 --> 00:26:40.534 align:middle line:-1
必须要创建的上下文字典

00:26:41.835 --> 00:26:43.971 align:middle line:-1
然后我们要获取我们希望

00:26:44.037 --> 00:26:45.806 align:middle line:-1
将这些添加到其中的父上下文

00:26:46.240 --> 00:26:49.810 align:middle line:-2
由于我们的上下文结构比较简单
我们知道我们的父上下文

00:26:50.043 --> 00:26:52.813 align:middle line:-1
永远是主app上下文

00:26:53.780 --> 00:26:57.951 align:middle line:-2
现在让我们运行一个查询来查看
这些上下文是否已经存在

00:26:58.519 --> 00:27:00.187 align:middle line:-2
所以我们需要创建
一个predicate

00:26:58.519 --> 00:27:00.187 align:middle line:-2
所以我们需要创建
一个predicate

00:27:00.888 --> 00:27:02.289 align:middle line:-1
寻找所有父节点是

00:27:02.356 --> 00:27:05.025 align:middle line:-1
我们刚刚定义的父节点的上下文

00:27:05.826 --> 00:27:10.264 align:middle line:-2
然后 我们将向CLSDataStore的
共享实例发出该查询

00:27:11.198 --> 00:27:16.703 align:middle line:-2
以找出所有与我们刚定义的
predicate相匹配的上下文

00:27:17.704 --> 00:27:20.174 align:middle line:-1
这将返回一个上下文数组

00:27:21.141 --> 00:27:23.677 align:middle line:-1
我们只要遍历所有

00:27:23.744 --> 00:27:25.579 align:middle line:-1
我们知道其存在的上下文

00:27:26.680 --> 00:27:29.683 align:middle line:-1
然后 对于已经存在的每个上下文

00:27:30.050 --> 00:27:32.486 align:middle line:-1
我们将从需要创建的

00:27:32.553 --> 00:27:33.887 align:middle line:-1
上下文字典中删除它

00:27:35.656 --> 00:27:38.392 align:middle line:-2
接着我们将遍历剩余的
尚不存在的上下文

00:27:38.458 --> 00:27:42.062 align:middle line:-1
并且对于这些上下文中的每一个

00:27:42.696 --> 00:27:46.900 align:middle line:-2
我们将它作为一个子上下文
添加到我们的父上下文中

00:27:48.001 --> 00:27:50.070 align:middle line:-1
然后我们调用save函数保存更改

00:27:51.004 --> 00:27:53.507 align:middle line:-1
现在我们需要做的就是在app启动时

00:27:53.574 --> 00:27:54.808 align:middle line:-1
调用这个函数

00:27:57.945 --> 00:27:59.847 align:middle line:-1
让我们运行此代码

00:27:59.913 --> 00:28:02.149 align:middle line:-2
以测试我们的上下文
是否真的被创建了

00:27:59.913 --> 00:28:02.149 align:middle line:-2
以测试我们的上下文
是否真的被创建了

00:28:03.183 --> 00:28:06.119 align:middle line:-2
我这有一个设备
我将其投影到屏幕上

00:28:06.987 --> 00:28:07.955 align:middle line:-1
完美

00:28:08.021 --> 00:28:09.489 align:middle line:-2
我们的Quizzler app
已启动

00:28:10.057 --> 00:28:12.059 align:middle line:-1
但一切看起来都一样

00:28:12.860 --> 00:28:16.263 align:middle line:-2
我们如何知道这些上下文
已经被创建了呢？

00:28:16.830 --> 00:28:19.833 align:middle line:-2
这就是我们使用到开发者模式
和Schoolwork的地方

00:28:20.133 --> 00:28:21.468 align:middle line:-1
我现在点击主页按钮

00:28:22.102 --> 00:28:23.670 align:middle line:-1
并打开设置

00:28:24.738 --> 00:28:25.806 align:middle line:-1
现在我向下滚动

00:28:25.873 --> 00:28:27.574 align:middle line:-1
我需要寻找开发人员设置

00:28:28.609 --> 00:28:33.046 align:middle line:-2
当我选择开发人员设置时 我将看到
一些ClassKit API

00:28:33.881 --> 00:28:35.782 align:middle line:-2
如果我选择
ClassKit API

00:28:35.849 --> 00:28:39.419 align:middle line:-2
我们可以看到
我们可以切换并扮演老师的角色

00:28:39.920 --> 00:28:41.855 align:middle line:-1
我要确保我选择了它

00:28:42.356 --> 00:28:46.226 align:middle line:-2
现在 我们可以点击主页按钮
打开Schoolwork app

00:28:48.428 --> 00:28:51.865 align:middle line:-2
当Schoolwork app启动时
我首先会看到欢迎屏幕

00:28:52.232 --> 00:28:53.834 align:middle line:-1
我将关掉它

00:28:53.901 --> 00:28:56.103 align:middle line:-1
如果我们看右上角

00:28:56.170 --> 00:28:57.771 align:middle line:-1
我可以看到那有一个加号按钮

00:28:58.405 --> 00:29:00.574 align:middle line:-2
这时我就知道
我是以老师的身份登录的

00:28:58.405 --> 00:29:00.574 align:middle line:-2
这时我就知道
我是以老师的身份登录的

00:29:01.175 --> 00:29:05.245 align:middle line:-2
如果我点击那个加号按钮
我将打开“创建新讲义”视图

00:29:05.946 --> 00:29:07.481 align:middle line:-1
我可以添加一个活动

00:29:08.415 --> 00:29:12.352 align:middle line:-2
然后点击“Apps” 可以看到
Quizzler app显示在这里

00:29:12.819 --> 00:29:16.557 align:middle line:-2
如果我选择它 真棒
我们的上下文就在那里

00:29:16.924 --> 00:29:20.527 align:middle line:-2
所以现在我们已经能够验证
我们的上下文实际上已经创建

00:29:21.094 --> 00:29:23.497 align:middle line:-1
我还想指出加法测验

00:29:23.564 --> 00:29:25.899 align:middle line:-1
在乘法测验之上显示

00:29:26.533 --> 00:29:30.437 align:middle line:-2
我们现在也能够验证
我们的显示顺序已经设置正确

00:29:31.038 --> 00:29:32.940 align:middle line:-1
现在让我们选择加法测验

00:29:33.407 --> 00:29:36.210 align:middle line:-1
这将会为这份讲义添加该上下文

00:29:36.577 --> 00:29:39.646 align:middle line:-2
现在让我们将这份讲义
发送给我们的班级

00:29:40.647 --> 00:29:43.917 align:middle line:-2
我要点击收件人字段
选择我的班级

00:29:45.118 --> 00:29:47.521 align:middle line:-1
让我们给这个讲义添加一个标题

00:29:49.356 --> 00:29:51.124 align:middle line:-1
现在我继续点击“Post”按钮

00:29:51.525 --> 00:29:54.595 align:middle line:-2
它所做的是将这份讲义
发送给我的班级

00:29:54.928 --> 00:29:58.298 align:middle line:-1
并为这份讲义中的上下文授权

00:29:58.365 --> 00:30:01.668 align:middle line:-2
现在该上下文可以开始
记录进度数据了

00:29:58.365 --> 00:30:01.668 align:middle line:-2
现在该上下文可以开始
记录进度数据了

00:30:02.703 --> 00:30:05.105 align:middle line:-2
我们可以看到
我的讲义成功发布

00:30:05.172 --> 00:30:06.340 align:middle line:-1
我可以点击它

00:30:06.974 --> 00:30:08.809 align:middle line:-1
在这里我们看到了我添加的上下文

00:30:08.876 --> 00:30:13.313 align:middle line:-2
并且我的漂亮图标
就在上下文名称旁边

00:30:14.014 --> 00:30:16.917 align:middle line:-1
如果我点击图标 它应该直接将我

00:30:16.984 --> 00:30:18.719 align:middle line:-1
导航到加法数学测验

00:30:19.019 --> 00:30:20.320 align:middle line:-1
我们点击它

00:30:21.455 --> 00:30:26.293 align:middle line:-2
Schoolwork启动了app
但这不是加法数学测验

00:30:27.094 --> 00:30:29.830 align:middle line:-2
哦 对了 这是对的
我们忘了添加深度链接

00:30:29.897 --> 00:30:31.932 align:middle line:-1
让我们回到Xcode并添加它

00:30:33.000 --> 00:30:34.801 align:middle line:-1
打开AppDelegate

00:30:34.868 --> 00:30:38.005 align:middle line:-2
让我们加入Continue
Restoration Handler

00:30:40.107 --> 00:30:44.478 align:middle line:-2
在这里 Continue Restoration
Handler将处理一些用户活动

00:30:45.345 --> 00:30:47.548 align:middle line:-1
我们需要使用该用户活动

00:30:47.614 --> 00:30:49.850 align:middle line:-2
并获取它的
contextIdentifierPath

00:30:51.151 --> 00:30:52.953 align:middle line:-1
一旦我们有了上下文路径

00:30:53.420 --> 00:30:56.557 align:middle line:-1
我们将实例化我们自己的

00:30:56.623 --> 00:30:58.892 align:middle line:-1
关联到该上下文的内部测验模型

00:30:59.927 --> 00:31:01.295 align:middle line:-1
然后我们要确定

00:30:59.927 --> 00:31:01.295 align:middle line:-1
然后我们要确定

00:31:01.361 --> 00:31:03.931 align:middle line:-1
我们调用的是同一个发布上下文函数

00:31:04.464 --> 00:31:07.401 align:middle line:-1
如果该上下文还没有被创建

00:31:07.467 --> 00:31:09.069 align:middle line:-1
我们需要确保创建它们

00:31:09.736 --> 00:31:13.774 align:middle line:-2
这里将返回一个可选错误
我们需要确保能够处理任何错误

00:31:15.108 --> 00:31:17.811 align:middle line:-1
然后 我们将与主线程进行同步

00:31:18.545 --> 00:31:21.782 align:middle line:-1
实例化我们的Storyboard

00:31:21.849 --> 00:31:24.351 align:middle line:-1
并且实例化此测验的视图控制器

00:31:25.285 --> 00:31:28.088 align:middle line:-2
然后我们将在视图控制器上
设置我们的测验

00:31:28.488 --> 00:31:30.123 align:middle line:-1
并压入适当的视图

00:31:30.757 --> 00:31:33.861 align:middle line:-1
现在 让我们运行此代码

00:31:33.927 --> 00:31:36.296 align:middle line:-1
并测试我们的深度链接是否正常工作

00:31:37.197 --> 00:31:39.132 align:middle line:-1
现在切换回我的设备

00:31:39.399 --> 00:31:42.302 align:middle line:-2
然后导航回
Schoolwork app

00:31:44.505 --> 00:31:47.007 align:middle line:-1
在这里 我们再次点击图标

00:31:48.208 --> 00:31:51.812 align:middle line:-1
真棒 它直接启动了加法数学测验

00:31:52.279 --> 00:31:56.216 align:middle line:-2
现在我们准备开始编写
用户生成的活动数据

00:31:56.750 --> 00:32:00.254 align:middle line:-2
让我们回到Xcode
并找到当测验第一次启动时

00:31:56.750 --> 00:32:00.254 align:middle line:-2
让我们回到Xcode
并找到当测验第一次启动时

00:32:00.320 --> 00:32:02.923 align:middle line:-1
被调用的那部分代码

00:32:04.525 --> 00:32:09.563 align:middle line:-1
这里 我们想要为我们的测验

00:32:09.630 --> 00:32:13.600 align:middle line:-1
启动计时器

00:32:14.067 --> 00:32:16.370 align:middle line:-2
我们要做的是
向CLSDataStore实例

00:32:16.436 --> 00:32:19.173 align:middle line:-1
发起一个查询

00:32:20.007 --> 00:32:22.843 align:middle line:-1
然后我们要在主app上下文中查询

00:32:23.343 --> 00:32:27.247 align:middle line:-1
所有与标识符路径相匹配的后代

00:32:27.714 --> 00:32:29.583 align:middle line:-1
这些标识符路径与此测验相关联

00:32:30.584 --> 00:32:32.819 align:middle line:-1
这将返回一个可选上下文

00:32:33.787 --> 00:32:35.255 align:middle line:-1
我们使用该上下文

00:32:35.956 --> 00:32:37.958 align:middle line:-2
确保调用它的
becomeActive方法

00:32:38.659 --> 00:32:42.796 align:middle line:-2
然后我们将实例化
一个新的CLS活动实例

00:32:43.230 --> 00:32:47.267 align:middle line:-1
这是因为当这部分代码运行时

00:32:47.601 --> 00:32:50.504 align:middle line:-2
我们就知道学生正对该测验
进行一次新的尝试

00:32:51.071 --> 00:32:53.507 align:middle line:-1
接着我们要缓存该活动

00:32:53.574 --> 00:32:55.375 align:middle line:-1
以及我们定义的属性

00:32:56.910 --> 00:33:00.080 align:middle line:-2
然后我们调用活动的start方法
来启动我们的计时器

00:32:56.910 --> 00:33:00.080 align:middle line:-2
然后我们调用活动的start方法
来启动我们的计时器

00:33:00.948 --> 00:33:03.617 align:middle line:-1
我们还说过我们想报告

00:33:03.684 --> 00:33:05.152 align:middle line:-1
每个问题的回答是否正确

00:33:05.719 --> 00:33:08.488 align:middle line:-1
所以我要找到当学生选择答案时

00:33:08.555 --> 00:33:10.390 align:middle line:-1
所调用的代码

00:33:11.792 --> 00:33:14.361 align:middle line:-1
在这里我们要做的是

00:33:14.728 --> 00:33:17.598 align:middle line:-1
获取当前运行的活动

00:33:17.664 --> 00:33:18.799 align:middle line:-1
这正是我们刚刚创建的

00:33:19.333 --> 00:33:24.004 align:middle line:-2
接着 我们将实例化一个
CLSBinaryItem

00:33:24.571 --> 00:33:29.576 align:middle line:-2
给它一个唯一的标识符
以及一个清晰明确的标题

00:33:30.377 --> 00:33:33.614 align:middle line:-2
然后记得传入
此binaryItem的类型

00:33:34.915 --> 00:33:37.851 align:middle line:-1
现在我们要设置

00:33:37.918 --> 00:33:41.889 align:middle line:-1
学生的回答是否正确的值

00:33:42.956 --> 00:33:45.259 align:middle line:-1
然后我们要在当前运行活动中

00:33:45.325 --> 00:33:50.097 align:middle line:-2
将这个binaryItem
作为附加活动项添加进去

00:33:51.198 --> 00:33:53.400 align:middle line:-1
我们最不想做的是

00:33:53.467 --> 00:33:56.036 align:middle line:-1
停止计时器并设置总分

00:33:56.637 --> 00:33:58.405 align:middle line:-1
我们找到当学生停止答题时

00:33:58.472 --> 00:34:02.109 align:middle line:-1
所调用的那部分代码

00:33:58.472 --> 00:34:02.109 align:middle line:-1
所调用的那部分代码

00:34:03.110 --> 00:34:06.780 align:middle line:-1
这里我们获得同样的当前运行活动

00:34:07.447 --> 00:34:11.351 align:middle line:-2
接着 我们将创建一个
CLSScoreItem

00:34:11.851 --> 00:34:16.924 align:middle line:-2
传递一个唯一的标识符、标题
我们还要传入

00:34:16.989 --> 00:34:22.129 align:middle line:-1
可能的最高分数中学生所得到的分数

00:34:23.063 --> 00:34:25.264 align:middle line:-1
然后 我们将该分数项

00:34:25.331 --> 00:34:28.467 align:middle line:-1
作为主活动项添加到我们的活动中

00:34:28.969 --> 00:34:30.571 align:middle line:-1
注意每次我这样做时

00:34:30.637 --> 00:34:35.309 align:middle line:-2
我总是设置CLS活动项目的
相同子类

00:34:35.542 --> 00:34:38.178 align:middle line:-1
它总是一个ScoreItem

00:34:39.213 --> 00:34:42.315 align:middle line:-2
然后我们调用stop方法
来停止我们的计时器

00:34:42.649 --> 00:34:45.018 align:middle line:-2
并调用save
以保存我们所有的更改

00:34:45.918 --> 00:34:48.155 align:middle line:-1
现在让我们重新运行此代码

00:34:48.222 --> 00:34:52.025 align:middle line:-2
以测试我们的学生生成的活动数据
是否已被设置

00:34:52.860 --> 00:34:54.494 align:middle line:-1
我切换回我的设备

00:34:54.862 --> 00:34:57.998 align:middle line:-1
现在我们要切换并充当学生的角色

00:34:58.332 --> 00:35:01.768 align:middle line:-1
我将返回到开发人员设置界面

00:34:58.332 --> 00:35:01.768 align:middle line:-1
我将返回到开发人员设置界面

00:35:02.569 --> 00:35:04.004 align:middle line:-1
设置在这里

00:35:04.071 --> 00:35:05.305 align:middle line:-1
我们点击“Student”

00:35:05.372 --> 00:35:08.108 align:middle line:-1
现在我转而扮演学生的角色

00:35:08.775 --> 00:35:11.245 align:middle line:-2
现在我们打开
Schoolwork app

00:35:12.446 --> 00:35:14.781 align:middle line:-1
这时候右上角

00:35:14.848 --> 00:35:16.683 align:middle line:-1
不再有一个加号按钮

00:35:16.884 --> 00:35:19.052 align:middle line:-1
我就知道我是以学生身份登录的

00:35:19.553 --> 00:35:22.389 align:middle line:-2
我们可以看到
我这里有老师分发给我的讲义

00:35:22.990 --> 00:35:27.327 align:middle line:-2
如果我点击它
我们可以看到我需要完成的上下文

00:35:27.394 --> 00:35:28.929 align:middle line:-1
我可以点击图标

00:35:29.329 --> 00:35:31.198 align:middle line:-1
它直接将我导航到测验界面

00:35:32.099 --> 00:35:34.301 align:middle line:-2
现在我看到一条提醒
它向我展示我的进度数据

00:35:34.368 --> 00:35:37.504 align:middle line:-2
将以我的名义进行记录
并发送给老师

00:35:37.938 --> 00:35:39.106 align:middle line:-1
我来关掉它

00:35:40.007 --> 00:35:43.343 align:middle line:-1
然后回答我们所有的问题

00:35:45.379 --> 00:35:46.914 align:middle line:-1
最后得到总分

00:35:47.381 --> 00:35:48.815 align:middle line:-1
可以看到 我得了100%

00:35:49.383 --> 00:35:51.351 align:middle line:-2
我们回到
Schoolwork app

00:35:52.019 --> 00:35:54.621 align:middle line:-1
在这里我们可以看到活动数据

00:35:54.688 --> 00:35:56.957 align:middle line:-1
我们可以看到时间和总分

00:35:57.558 --> 00:35:59.560 align:middle line:-1
注意总分在用户界面的主要部分

00:35:59.626 --> 00:36:00.961 align:middle line:-1
突出显示

00:35:59.626 --> 00:36:00.961 align:middle line:-1
突出显示

00:36:01.028 --> 00:36:04.665 align:middle line:-2
现在我们能够验证
我们的活动项目设置正确

00:36:04.731 --> 00:36:08.101 align:middle line:-2
我也可以点击单元格
这会显示一个弹出框

00:36:08.168 --> 00:36:10.070 align:middle line:-1
上面有我写的所有活动数据

00:36:10.470 --> 00:36:13.173 align:middle line:-1
我可以看到浅灰色的总得分

00:36:13.240 --> 00:36:15.676 align:middle line:-1
还有我设定的总分的标题

00:36:16.677 --> 00:36:19.146 align:middle line:-1
在底部 我们可以看到所用时间

00:36:19.213 --> 00:36:20.914 align:middle line:-1
然后是每个问题的回答结果

00:36:21.181 --> 00:36:24.218 align:middle line:-2
我们还可以看到我为每个问题
设置的标题

00:36:24.284 --> 00:36:26.220 align:middle line:-1
它们也是浅灰色的

00:36:27.087 --> 00:36:29.056 align:middle line:-1
现在我们已经能够验证

00:36:29.122 --> 00:36:31.692 align:middle line:-1
我们的活动数据已经被记录下来了

00:36:32.659 --> 00:36:36.430 align:middle line:-1
现在我想重新将Pavel请上台

00:36:36.496 --> 00:36:39.132 align:middle line:-2
以继续他的演讲
并总结我们看到的这些东西

00:36:48.408 --> 00:36:49.510 align:middle line:-1
谢谢Marin

00:36:50.444 --> 00:36:54.114 align:middle line:-2
我想提一下关于ClassKit的
一些最佳实践

00:36:55.983 --> 00:36:58.752 align:middle line:-1
首先 尽早声明你的上下文

00:36:58.819 --> 00:37:01.021 align:middle line:-1
以便教师可以进行分发

00:36:58.819 --> 00:37:01.021 align:middle line:-1
以便教师可以进行分发

00:37:01.555 --> 00:37:04.591 align:middle line:-2
并且Marin向我们
展示了你的app中

00:37:04.658 --> 00:37:06.460 align:middle line:-1
不是所有东西都非得是一个上下文

00:37:07.728 --> 00:37:11.198 align:middle line:-2
如果这样做有意义 就请使用
CLS Data Store Delegate

00:37:11.932 --> 00:37:15.636 align:middle line:-1
另外 请好好利用附加活动项目

00:37:16.103 --> 00:37:19.473 align:middle line:-1
它们的确是提供额外信息的好方法

00:37:19.540 --> 00:37:23.977 align:middle line:-2
而教师可能需要这些信息来了解
学生在你的app中的表现

00:37:25.345 --> 00:37:28.482 align:middle line:-2
还有一些关于教育app的
一般性最佳实践

00:37:28.949 --> 00:37:31.285 align:middle line:-2
其中之一是
删除StoreKit依赖

00:37:32.085 --> 00:37:33.887 align:middle line:-1
这是因为在学校环境中

00:37:33.954 --> 00:37:35.756 align:middle line:-1
使用app内清除并不是个好主意

00:37:36.456 --> 00:37:38.892 align:middle line:-1
这个库是用来支持可清除存储的

00:37:40.294 --> 00:37:41.662 align:middle line:-1
总的来说 这是一个好主意

00:37:41.728 --> 00:37:44.097 align:middle line:-1
但在学校环境中非常重要的是

00:37:44.164 --> 00:37:49.403 align:middle line:-2
在那里共享iPod是很常见的
而空间在这种情况下很重要

00:37:50.170 --> 00:37:53.740 align:middle line:-2
最后 通过托管app配置
实现设置访问

00:37:54.374 --> 00:37:59.112 align:middle line:-2
这样做可以使学校管理员
在配置设备时更轻松

00:38:00.747 --> 00:38:03.116 align:middle line:-2
你可以在
developer.apple.com/education

00:38:03.183 --> 00:38:04.451 align:middle line:-1
找到

00:38:04.518 --> 00:38:08.055 align:middle line:-2
关于所有这些内容的链接
和正在进行的细节

00:38:09.223 --> 00:38:12.826 align:middle line:-2
愿大家在剩余的WWDC中
度过愉快时光

00:38:13.227 --> 00:38:14.394 align:middle line:-1
谢谢大家的参与
