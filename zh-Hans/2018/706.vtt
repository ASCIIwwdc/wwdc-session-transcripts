WEBVTT

00:00:07.516 --> 00:00:20.516 A:middle
[ 音乐 ]

00:00:21.516 --> 00:00:29.186 A:middle
[ 掌声 ]

00:00:29.686 --> 00:00:31.336 A:middle
&gt;&gt; 下午好 我叫 Jason Morley

00:00:31.336 --> 00:00:32.986 A:middle
是 Apple Health 团队的

00:00:32.986 --> 00:00:34.406 A:middle
一名软件工程师

00:00:34.696 --> 00:00:36.306 A:middle
这是我的同事 Peyton

00:00:36.306 --> 00:00:38.176 A:middle
我想花些时间

00:00:38.176 --> 00:00:39.576 A:middle
来向你们介绍

00:00:39.576 --> 00:00:41.606 A:middle
我们今年在 iOS 12 里加入的

00:00:41.736 --> 00:00:44.686 A:middle
一项激动人心的新功能

00:00:44.686 --> 00:00:46.546 A:middle
利用 HealthKit 获得健康记录

00:00:46.976 --> 00:00:52.136 A:middle
在今年的早些时候

00:00:52.136 --> 00:00:54.106 A:middle
我们在 iOS 11.3 上介绍了 健康记录和健康

00:00:55.376 --> 00:00:56.586 A:middle
用户可以与他们的

00:00:56.586 --> 00:00:58.426 A:middle
医疗机构建立连接

00:00:58.426 --> 00:01:00.186 A:middle
并且安全地下载他们的健康记录

00:00:58.426 --> 00:01:00.186 A:middle
并且安全地下载他们的健康记录

00:01:00.186 --> 00:01:03.496 A:middle
以便于快速访问和保管

00:01:04.726 --> 00:01:07.006 A:middle
我们从多个医疗机构那里

00:01:07.006 --> 00:01:08.756 A:middle
收集数据并且

00:01:08.756 --> 00:01:10.246 A:middle
呈现一个允许用户搜索和

00:01:10.666 --> 00:01:12.676 A:middle
显示像实验值和参考范围这种

00:01:12.676 --> 00:01:15.186 A:middle
真的能够帮助用户

00:01:15.316 --> 00:01:17.486 A:middle
去更好地了解

00:01:18.056 --> 00:01:19.226 A:middle
他们健康数据的重要细节

00:01:19.226 --> 00:01:22.000 A:middle
的时间轴

00:01:25.046 --> 00:01:25.986 A:middle
截止至今 我们已经为

00:01:26.026 --> 00:01:28.616 A:middle
超过 500 家美国医院和诊所

00:01:28.616 --> 00:01:31.466 A:middle
提供了支持 共覆盖 50 多个医疗机构

00:01:31.646 --> 00:01:33.796 A:middle
并且我们还在不断地

00:01:33.796 --> 00:01:38.926 A:middle
继续增加更多

00:01:39.116 --> 00:01:40.096 A:middle
当然了

00:01:40.096 --> 00:01:41.786 A:middle
如果没有

00:01:41.786 --> 00:01:43.896 A:middle
Health Level Seven 组织

00:01:43.896 --> 00:01:46.846 A:middle
的杰出劳动

00:01:46.846 --> 00:01:48.156 A:middle
和他们的快速医疗的交互操作能力

00:01:48.156 --> 00:01:50.046 A:middle
或 FHIR 和智能健康 IT 项目

00:01:50.366 --> 00:01:53.766 A:middle
的帮助的话

00:01:53.766 --> 00:01:54.306 A:middle
这将是不可能实现的

00:01:57.016 --> 00:01:59.226 A:middle
对我们来说

00:01:59.296 --> 00:02:02.156 A:middle
这一切都是从健康出发

00:01:59.296 --> 00:02:02.156 A:middle
这一切都是从健康出发

00:02:02.156 --> 00:02:03.586 A:middle
我们和医疗机构建立了一个

00:02:03.586 --> 00:02:07.176 A:middle
安全的连接

00:02:07.176 --> 00:02:09.496 A:middle
并从 FHIR 直接将用户的健康记录

00:02:09.496 --> 00:02:10.675 A:middle
下载到他们的 iOS 装置上

00:02:12.496 --> 00:02:14.816 A:middle
从这里我们将它安全地

00:02:14.816 --> 00:02:18.266 A:middle
储存在 HealthKit 上

00:02:18.296 --> 00:02:20.076 A:middle
并跨越多个机构汇总数据

00:02:21.876 --> 00:02:24.986 A:middle
从现如今的 iOS 12 开始

00:02:24.986 --> 00:02:26.986 A:middle
我们提供允许你访问这个数据的 API

00:02:26.986 --> 00:02:28.916 A:middle
并且让你能够

00:02:28.916 --> 00:02:30.000 A:middle
在你的 App 中使用它

00:02:36.046 --> 00:02:36.846 A:middle
首先 我来介绍一下

00:02:36.846 --> 00:02:38.536 A:middle
我们新加的用来支持这个功能的

00:02:38.536 --> 00:02:39.956 A:middle
新的样本类型

00:02:41.476 --> 00:02:42.916 A:middle
然后 我们便能够看到

00:02:42.916 --> 00:02:44.766 A:middle
你是如何授权自己的 App 并且

00:02:44.766 --> 00:02:48.000 A:middle
查询数据的

00:02:48.056 --> 00:02:49.556 A:middle
然后 我将简短介绍一下 FHIR

00:02:49.556 --> 00:02:51.286 A:middle
并且向你们展示

00:02:51.286 --> 00:02:52.876 A:middle
一下它有多少种可能性

00:02:54.276 --> 00:02:56.706 A:middle
最后 我们可以花些时间

00:02:56.706 --> 00:02:58.336 A:middle
来思考一下

00:02:58.336 --> 00:03:00.606 A:middle
在这个敏感的领域

00:02:58.336 --> 00:03:00.606 A:middle
在这个敏感的领域

00:03:00.876 --> 00:03:04.976 A:middle
你该如何保护你的用户隐私

00:03:05.116 --> 00:03:06.116 A:middle
好了让我们进入正题

00:03:08.156 --> 00:03:10.086 A:middle
如果你之前使用过 HealthKit 的话

00:03:10.196 --> 00:03:14.246 A:middle
你可能会对 HKSampleType 和它的子类很熟悉

00:03:15.216 --> 00:03:16.696 A:middle
它们是像分组一样的数据

00:03:16.696 --> 00:03:20.336 A:middle
例如 QuantityType 这种

00:03:20.856 --> 00:03:22.846 A:middle
由一个单一数值代表

00:03:22.846 --> 00:03:25.286 A:middle
的分组数据

00:03:25.286 --> 00:03:27.396 A:middle
像步数和心率

00:03:28.656 --> 00:03:30.416 A:middle
然而 CategoryType 分组数据

00:03:30.416 --> 00:03:32.336 A:middle
是以枚举来判断其特征的

00:03:32.926 --> 00:03:34.736 A:middle
像睡眠分析这种

00:03:34.846 --> 00:03:37.936 A:middle
我只是躺在床上 还是睡着了

00:03:37.936 --> 00:03:39.636 A:middle
我的月经流量如何等

00:03:40.316 --> 00:03:43.506 A:middle
并且 为了支持健康记录

00:03:43.506 --> 00:03:46.256 A:middle
我们引入能够将

00:03:46.646 --> 00:03:48.026 A:middle
你在 Health 中看到的

00:03:48.196 --> 00:03:50.146 A:middle
像状态和药方这种

00:03:50.146 --> 00:03:52.286 A:middle
健康记录分类的

00:03:52.366 --> 00:03:52.976 A:middle
HKClinicalType

00:03:57.046 --> 00:03:58.116 A:middle
在每个样本类型中

00:03:58.196 --> 00:04:00.076 A:middle
不同的数据类型

00:03:58.196 --> 00:04:00.076 A:middle
不同的数据类型

00:04:00.116 --> 00:04:02.576 A:middle
由一个类型识别码来进行区分

00:04:03.966 --> 00:04:05.886 A:middle
HKClinicalType 识别码

00:04:06.246 --> 00:04:08.246 A:middle
通过相应的

00:04:08.766 --> 00:04:12.806 A:middle
健康记录和健康的类别来识别

00:04:13.436 --> 00:04:13.796 A:middle
相应的临床类型

00:04:14.456 --> 00:04:18.805 A:middle
我们会有过敏等一些

00:04:18.956 --> 00:04:20.236 A:middle
可能仅仅是短期才会出现的状况

00:04:20.236 --> 00:04:22.446 A:middle
例如怀孕

00:04:22.446 --> 00:04:24.346 A:middle
或者是一些经常性的状况

00:04:24.346 --> 00:04:28.606 A:middle
比如第二类型糖尿病 免疫接种 实验结果

00:04:29.496 --> 00:04:32.086 A:middle
这些可能是为了

00:04:32.116 --> 00:04:33.476 A:middle
我每年的身体检查

00:04:33.516 --> 00:04:34.246 A:middle
而进行的血糖测量

00:04:35.856 --> 00:04:40.216 A:middle
药物 流程

00:04:40.216 --> 00:04:42.586 A:middle
诊断过程或是手术

00:04:43.866 --> 00:04:46.216 A:middle
生命体征中像这种

00:04:46.216 --> 00:04:50.336 A:middle
血压或体重的测量

00:04:50.796 --> 00:04:52.856 A:middle
除了这些样本类型和

00:04:52.856 --> 00:04:54.656 A:middle
样本类型标识符以外

00:04:54.656 --> 00:04:56.936 A:middle
我们还引入一个叫做 HKClinicalRecord 的

00:04:56.936 --> 00:04:59.926 A:middle
新的 HK 样本子类

00:05:01.416 --> 00:05:02.746 A:middle
如果你对于

00:05:02.746 --> 00:05:04.206 A:middle
在 HealthKit 中操作这些样本

00:05:04.206 --> 00:05:06.376 A:middle
并不熟悉

00:05:06.376 --> 00:05:08.006 A:middle
我们可以深入探讨这个话题

00:05:08.166 --> 00:05:10.236 A:middle
并且我将在最后介绍

00:05:10.236 --> 00:05:11.026 A:middle
一些关于它的细节

00:05:12.656 --> 00:05:14.636 A:middle
如果你打算使用 HKClinicalRecord 的话

00:05:14.636 --> 00:05:16.066 A:middle
那么 这里有一些

00:05:16.066 --> 00:05:17.426 A:middle
你需要了解的关键属性

00:05:18.016 --> 00:05:21.476 A:middle
关于临床类型

00:05:21.476 --> 00:05:23.466 A:middle
我们之前也探讨过

00:05:23.466 --> 00:05:25.996 A:middle
它允许你去确定

00:05:26.196 --> 00:05:26.726 A:middle
一个记录的类型

00:05:27.536 --> 00:05:29.936 A:middle
健康记录

00:05:29.936 --> 00:05:31.936 A:middle
就像免疫接种一样

00:05:32.426 --> 00:05:36.866 A:middle
我们提供了一个名字

00:05:36.866 --> 00:05:38.566 A:middle
它是一个我们在 Health 中

00:05:38.566 --> 00:05:40.496 A:middle
用来向用户展示健康记录的

00:05:40.496 --> 00:05:41.446 A:middle
一个字符串

00:05:42.226 --> 00:05:43.976 A:middle
我们从 FHIR 资源中把它选择出来

00:05:43.976 --> 00:05:45.466 A:middle
并且你能够将

00:05:45.466 --> 00:05:47.006 A:middle
你的 App 之前的经历

00:05:47.006 --> 00:05:48.876 A:middle
与用户所熟悉的东西

00:05:48.876 --> 00:05:50.086 A:middle
绑定在一起

00:05:52.696 --> 00:05:54.616 A:middle
你可以从这个实验结果中看到

00:05:55.576 --> 00:05:56.556 A:middle
有许多可选择的

00:05:56.556 --> 00:05:58.776 A:middle
表示方法和名称

00:05:58.776 --> 00:06:02.296 A:middle
包括 LOINC 编码系统里的

00:05:58.776 --> 00:06:02.296 A:middle
包括 LOINC 编码系统里的

00:06:02.296 --> 00:06:03.826 A:middle
一个编码

00:06:04.096 --> 00:06:05.476 A:middle
这是一个医疗信息界的

00:06:05.476 --> 00:06:06.816 A:middle
行业标准化参考

00:06:06.816 --> 00:06:09.086 A:middle
并且它是 FHIR

00:06:09.086 --> 00:06:10.806 A:middle
进行观测所需要的

00:06:11.376 --> 00:06:14.336 A:middle
从这里你可以看到

00:06:14.336 --> 00:06:16.366 A:middle
我们已经采用 LOINC 编码并且

00:06:16.366 --> 00:06:18.396 A:middle
执行了一个查找去

00:06:18.396 --> 00:06:20.126 A:middle
提供一个我们将为你们

00:06:20.126 --> 00:06:21.976 A:middle
呈现的一个规范名称

00:06:26.046 --> 00:06:27.426 A:middle
最终 我们提供完整的

00:06:27.426 --> 00:06:29.646 A:middle
FHIR 资源的访问端口

00:06:29.646 --> 00:06:30.946 A:middle
但是从 HKClinicalRecord 中

00:06:30.946 --> 00:06:32.106 A:middle
你还可以得到很多益处

00:06:32.106 --> 00:06:33.756 A:middle
所以我现在

00:06:33.756 --> 00:06:35.626 A:middle
先把它放在一边

00:06:35.626 --> 00:06:36.736 A:middle
稍后我们再回来讨论

00:06:41.356 --> 00:06:42.696 A:middle
像所有的健康数据一样

00:06:43.046 --> 00:06:45.236 A:middle
数据的来源

00:06:45.236 --> 00:06:47.396 A:middle
是非常重要的

00:06:48.626 --> 00:06:50.086 A:middle
你想要知道这个健康数据

00:06:50.086 --> 00:06:51.406 A:middle
是从哪里来的

00:06:51.896 --> 00:06:54.106 A:middle
并且和 HealthKit 的其他部分一样

00:06:54.106 --> 00:06:56.326 A:middle
我们使用 HKSample 的超类 HKSource

00:06:56.326 --> 00:07:00.366 A:middle
来对其进行建模

00:06:56.326 --> 00:07:00.366 A:middle
来对其进行建模

00:07:02.436 --> 00:07:04.876 A:middle
我们将名称设置为

00:07:04.876 --> 00:07:06.446 A:middle
医疗机构

00:07:06.606 --> 00:07:08.146 A:middle
跟我们分享的名称

00:07:09.466 --> 00:07:10.546 A:middle
并且我们提供了一个

00:07:10.546 --> 00:07:12.416 A:middle
包标识符 它是一个能够

00:07:12.416 --> 00:07:14.096 A:middle
使该医疗机构实现

00:07:14.096 --> 00:07:16.416 A:middle
跨多个用户和多个设备登录的

00:07:16.416 --> 00:07:17.976 A:middle
稳定的标识符

00:07:23.046 --> 00:07:24.626 A:middle
所以现在

00:07:24.626 --> 00:07:25.136 A:middle
我们已经看到了这个新的样本类型

00:07:25.806 --> 00:07:27.146 A:middle
让我们来看看 你如何授权 App

00:07:27.146 --> 00:07:28.976 A:middle
并查找数据的吧

00:07:37.246 --> 00:07:39.066 A:middle
可以看到 这里有个装有丰富的

00:07:39.106 --> 00:07:41.666 A:middle
医疗记录的庞大信息库

00:07:41.666 --> 00:07:44.556 A:middle
并且我们认为

00:07:44.556 --> 00:07:45.766 A:middle
这对你来说

00:07:45.766 --> 00:07:47.376 A:middle
是一个能够为你的用户提供

00:07:47.376 --> 00:07:49.656 A:middle
关于他们的健康数据的

00:07:49.686 --> 00:07:51.666 A:middle
绝佳体验的

00:07:51.666 --> 00:07:52.026 A:middle
千载难逢的机会

00:07:52.586 --> 00:07:56.686 A:middle
但是当然了

00:07:56.776 --> 00:07:58.576 A:middle
健康记录也含有

00:07:58.576 --> 00:08:00.136 A:middle
令人难以置信的敏感信息

00:07:58.576 --> 00:08:00.136 A:middle
令人难以置信的敏感信息

00:08:00.606 --> 00:08:02.806 A:middle
用户的健康记录或许会

00:08:02.806 --> 00:08:05.116 A:middle
包含着他们正在服用的

00:08:05.116 --> 00:08:06.446 A:middle
药物的详细信息

00:08:06.446 --> 00:08:07.706 A:middle
或者是他们每天的基本生活

00:08:07.706 --> 00:08:09.206 A:middle
伴随着的一些状况

00:08:10.576 --> 00:08:12.196 A:middle
这可能是他们

00:08:12.196 --> 00:08:13.866 A:middle
不愿意与他们亲近的朋友或家人

00:08:13.866 --> 00:08:15.536 A:middle
所分享的信息

00:08:16.406 --> 00:08:18.936 A:middle
并且伴随着用户和医疗机构

00:08:18.936 --> 00:08:20.496 A:middle
之间的交流 这种情况

00:08:20.496 --> 00:08:22.756 A:middle
会随着时间的推移而发生变化

00:08:22.756 --> 00:08:25.246 A:middle
他们或许会得到

00:08:25.246 --> 00:08:25.776 A:middle
关于这个状况的新的诊断

00:08:27.196 --> 00:08:28.566 A:middle
所以 为了能够更好地帮助我们的用户

00:08:28.566 --> 00:08:31.276 A:middle
去理解和管理这些数据的

00:08:31.276 --> 00:08:33.166 A:middle
访问 我们引入了

00:08:33.166 --> 00:08:36.936 A:middle
一个具体针对健康记录的授权流程

00:08:38.135 --> 00:08:39.566 A:middle
当你的 App 申请授权时

00:08:39.566 --> 00:08:41.846 A:middle
我们会提供一个

00:08:41.846 --> 00:08:45.446 A:middle
新的针对特定临床类型的许可表

00:08:46.836 --> 00:08:49.516 A:middle
首先 我们告知用户

00:08:49.516 --> 00:08:51.346 A:middle
在 App 上分享数据意味着什么

00:08:51.346 --> 00:08:53.666 A:middle
并且告知用户

00:08:54.346 --> 00:08:55.766 A:middle
它有多么敏感

00:08:55.966 --> 00:08:57.446 A:middle
因为我们要使用这个新的授权流程

00:08:57.446 --> 00:08:59.576 A:middle
所以无论何时 只要你申请授权

00:08:59.576 --> 00:09:01.946 A:middle
你需要保证

00:08:59.576 --> 00:09:01.946 A:middle
你需要保证

00:09:01.946 --> 00:09:03.316 A:middle
你的授权申请时间足够

00:09:03.316 --> 00:09:05.446 A:middle
以确保你的用户能够

00:09:05.446 --> 00:09:06.716 A:middle
充分地理解

00:09:06.776 --> 00:09:09.966 A:middle
这个新的流程的内容

00:09:12.516 --> 00:09:15.446 A:middle
在这之后

00:09:15.446 --> 00:09:17.146 A:middle
我们允许用户

00:09:17.146 --> 00:09:18.466 A:middle
从你已经提出请求的类别中

00:09:18.466 --> 00:09:20.976 A:middle
选择他们想要和你的 App

00:09:20.976 --> 00:09:21.806 A:middle
实现共享的数据类型

00:09:23.136 --> 00:09:25.776 A:middle
我们还提出了一个

00:09:25.776 --> 00:09:28.146 A:middle
新的目标字符串

00:09:28.146 --> 00:09:30.326 A:middle
和在 App 解释说明部分中的

00:09:30.326 --> 00:09:30.916 A:middle
你的 App 的隐私政策

00:09:31.526 --> 00:09:33.176 A:middle
这是一个去向用户解释

00:09:33.176 --> 00:09:35.796 A:middle
你为什么需要去访问数据

00:09:35.796 --> 00:09:37.886 A:middle
你将用它来做什么

00:09:37.886 --> 00:09:39.756 A:middle
和你将如何保护他们的数据的

00:09:39.756 --> 00:09:42.946 A:middle
千载难逢的好机会

00:09:43.566 --> 00:09:45.196 A:middle
你一定要确保

00:09:45.196 --> 00:09:46.606 A:middle
你的要求和你的需要

00:09:46.646 --> 00:09:48.526 A:middle
是成比例的

00:09:49.266 --> 00:09:50.316 A:middle
用户真的会

00:09:50.316 --> 00:09:53.146 A:middle
很惊讶并且担心是否

00:09:53.146 --> 00:09:55.216 A:middle
他们在这里所看到的数据类型

00:09:55.216 --> 00:09:56.956 A:middle
并不属于你的 App 的主要功能

00:09:57.566 --> 00:10:00.386 A:middle
并且最终会因为

00:09:57.566 --> 00:10:00.386 A:middle
并且最终会因为

00:10:00.386 --> 00:10:02.366 A:middle
用户和他们的医疗机构的互动

00:10:02.366 --> 00:10:03.856 A:middle
而造成数据会随着时间发生变化

00:10:03.856 --> 00:10:06.966 A:middle
我们正在引入一个

00:10:06.966 --> 00:10:09.526 A:middle
新的方法来控制与你的 App

00:10:09.526 --> 00:10:11.296 A:middle
共享新数据的方式

00:10:11.796 --> 00:10:13.886 A:middle
我们默认会去询问

00:10:13.886 --> 00:10:16.646 A:middle
之前每一次共享的每一个数据

00:10:18.056 --> 00:10:19.546 A:middle
这意味着每当新的数据可用时

00:10:19.546 --> 00:10:21.796 A:middle
我们可能需要

00:10:22.266 --> 00:10:24.346 A:middle
提交新的许可表

00:10:25.076 --> 00:10:27.266 A:middle
所以每当你需要查询数据的时候

00:10:27.266 --> 00:10:29.016 A:middle
你都应该去

00:10:29.016 --> 00:10:30.846 A:middle
申请相应的权限

00:10:35.286 --> 00:10:37.456 A:middle
好 那么我该怎样开始

00:10:37.456 --> 00:10:39.046 A:middle
并且请求权限呢

00:10:40.536 --> 00:10:42.106 A:middle
这个流程看上去

00:10:42.106 --> 00:10:43.406 A:middle
会让那些之前用过 HealthKit 的人

00:10:43.406 --> 00:10:44.836 A:middle
觉得很熟悉

00:10:45.756 --> 00:10:49.906 A:middle
首先 我需要配置这个项目

00:10:50.316 --> 00:10:53.036 A:middle
在进行授权请求后

00:10:54.356 --> 00:10:55.976 A:middle
最后查询数据

00:10:56.586 --> 00:11:00.766 A:middle
为了配置你的项目

00:10:56.586 --> 00:11:00.766 A:middle
为了配置你的项目

00:11:00.766 --> 00:11:02.626 A:middle
你需要在启动 HealthKit 以后

00:11:02.626 --> 00:11:04.896 A:middle
在 Xcode 中

00:11:05.696 --> 00:11:06.976 A:middle
添加一个新的

00:11:11.186 --> 00:11:13.746 A:middle
健康记录功能

00:11:13.746 --> 00:11:15.326 A:middle
然后你在你的 Info.plist 中

00:11:15.396 --> 00:11:16.586 A:middle
添加一个新的

00:11:16.586 --> 00:11:17.546 A:middle
健康记录用法说明字符串

00:11:20.216 --> 00:11:22.426 A:middle
再次说明 这是你的好机会

00:11:22.426 --> 00:11:24.426 A:middle
去向用户解释

00:11:24.426 --> 00:11:26.036 A:middle
你为什么需要得到数据

00:11:26.036 --> 00:11:27.226 A:middle
和你将利用它来做什么

00:11:30.276 --> 00:11:31.836 A:middle
完成上述步骤后

00:11:31.836 --> 00:11:33.096 A:middle
你可以请求权限了

00:11:34.416 --> 00:11:36.986 A:middle
我在这里定义

00:11:36.986 --> 00:11:39.036 A:middle
我希望访问的类型 状态

00:11:40.226 --> 00:11:42.976 A:middle
免疫接种和药物治疗

00:11:47.086 --> 00:11:48.606 A:middle
然后你就可以

00:11:48.606 --> 00:11:50.206 A:middle
在健康中心中

00:11:50.206 --> 00:11:50.676 A:middle
调用授权请求

00:11:52.026 --> 00:11:53.806 A:middle
请确保已经处理了所有错误

00:11:54.456 --> 00:11:57.066 A:middle
在这之后

00:11:57.066 --> 00:11:57.496 A:middle
你便能够进行查找了

00:11:58.366 --> 00:12:00.496 A:middle
你应该知道

00:11:58.366 --> 00:12:00.496 A:middle
你应该知道

00:12:00.496 --> 00:12:02.526 A:middle
为了维护用户的隐私

00:12:02.976 --> 00:12:05.066 A:middle
我们不会向你透露

00:12:05.176 --> 00:12:07.046 A:middle
哪个分类是用户已准许访问的

00:12:07.046 --> 00:12:08.976 A:middle
或是已拒绝访问的

00:12:14.046 --> 00:12:14.676 A:middle
现在 让我们来说查询

00:12:14.896 --> 00:12:17.306 A:middle
因为 HKClinicalRecord 是一个

00:12:17.306 --> 00:12:19.306 A:middle
在 HealthKit 中

00:12:19.306 --> 00:12:21.296 A:middle
你可以很好地利用

00:12:21.296 --> 00:12:22.506 A:middle
所有的现有样本查询基础设施的

00:12:22.506 --> 00:12:23.036 A:middle
HKSample

00:12:24.006 --> 00:12:25.406 A:middle
SampleQuery

00:12:25.826 --> 00:12:27.266 A:middle
AnchoredObjectQuery 和

00:12:27.266 --> 00:12:29.936 A:middle
ObserverQuery 都将正常工作

00:12:29.936 --> 00:12:31.366 A:middle
并且如果你的用户已经准许

00:12:31.366 --> 00:12:33.476 A:middle
后台连续访问

00:12:33.476 --> 00:12:37.706 A:middle
delivery 也将正常工作

00:12:38.396 --> 00:12:40.296 A:middle
再次说明 你定义了

00:12:40.296 --> 00:12:41.496 A:middle
你希望查找的类型

00:12:42.256 --> 00:12:45.006 A:middle
我们在这里正在创建一个查找示例

00:12:45.006 --> 00:12:48.836 A:middle
并且你可以在健康中心执行它

00:12:53.076 --> 00:12:54.006 A:middle
以上就是最基本的

00:12:54.006 --> 00:12:55.146 A:middle
授权流程

00:12:55.606 --> 00:12:57.446 A:middle
但我们已经介绍过了

00:12:57.446 --> 00:12:59.216 A:middle
一些针对于健康记录的

00:12:59.216 --> 00:13:00.856 A:middle
特定的额外机制

00:12:59.216 --> 00:13:00.856 A:middle
特定的额外机制

00:13:01.516 --> 00:13:05.996 A:middle
对于授权 我们有一个

00:13:06.036 --> 00:13:08.016 A:middle
新的 API 获取请求

00:13:08.016 --> 00:13:09.696 A:middle
它允许你去确定

00:13:09.696 --> 00:13:11.486 A:middle
我们是否去向用户

00:13:11.616 --> 00:13:12.306 A:middle
展示许可表

00:13:14.356 --> 00:13:17.246 A:middle
这给了你一个机会去

00:13:18.186 --> 00:13:19.926 A:middle
确定你的用户是否

00:13:19.926 --> 00:13:21.566 A:middle
需要去看这个许可表

00:13:21.566 --> 00:13:23.676 A:middle
并且选择性地展示一个 UI

00:13:23.676 --> 00:13:26.116 A:middle
以便在授权前给他们提供

00:13:26.116 --> 00:13:27.866 A:middle
更多的信息

00:13:31.136 --> 00:13:33.636 A:middle
为了做到这一点 你可以去健康中心

00:13:33.676 --> 00:13:35.356 A:middle
访问授权请求状态

00:13:35.356 --> 00:13:38.436 A:middle
处理错误

00:13:39.036 --> 00:13:42.576 A:middle
并且如果请求状态是

00:13:42.576 --> 00:13:44.396 A:middle
可以请求的话 你可以

00:13:44.396 --> 00:13:47.016 A:middle
选择在请求权限之前

00:13:47.106 --> 00:13:47.976 A:middle
去展示 UI

00:13:52.416 --> 00:13:54.456 A:middle
现在 可能也会有一些

00:13:54.456 --> 00:13:56.006 A:middle
你的 App 所需要访问的

00:13:56.006 --> 00:13:58.526 A:middle
数据类型 来保证安全

00:13:58.576 --> 00:14:01.366 A:middle
又或者你如果有一个需要

00:13:58.576 --> 00:14:01.366 A:middle
又或者你如果有一个需要

00:14:01.366 --> 00:14:04.266 A:middle
获得全面的一系列类型的

00:14:04.266 --> 00:14:06.926 A:middle
研究型 App 来

00:14:06.926 --> 00:14:09.056 A:middle
避免有误差的结果

00:14:10.816 --> 00:14:13.636 A:middle
我们在 Info.plist 中

00:14:13.636 --> 00:14:15.426 A:middle
有一个新的允许你去指定这些类型

00:14:15.426 --> 00:14:17.276 A:middle
所必需的键

00:14:18.136 --> 00:14:20.216 A:middle
并且如果用户没有准许给这些类型授权

00:14:20.216 --> 00:14:22.186 A:middle
可它们仍然在的话

00:14:22.366 --> 00:14:24.666 A:middle
我们将返回一个

00:14:24.666 --> 00:14:26.656 A:middle
新的所需类型错误

00:14:27.086 --> 00:14:28.656 A:middle
这能够让你确定

00:14:28.656 --> 00:14:31.136 A:middle
如何去表现

00:14:31.136 --> 00:14:32.376 A:middle
去选择性地去向用户解释

00:14:32.376 --> 00:14:33.966 A:middle
如果你没有这个数据的话

00:14:33.966 --> 00:14:34.636 A:middle
你就不能够继续

00:14:39.066 --> 00:14:40.406 A:middle
你可以通过在你的 Info.plist 中

00:14:40.406 --> 00:14:42.086 A:middle
添加新的所需的

00:14:42.086 --> 00:14:43.496 A:middle
阅读权限密钥

00:14:43.496 --> 00:14:44.536 A:middle
来实现它

00:14:45.866 --> 00:14:47.426 A:middle
在这里我说我需要

00:14:47.426 --> 00:14:49.606 A:middle
过敏 当前状态

00:14:49.606 --> 00:14:50.726 A:middle
和免疫接种的信息

00:14:51.316 --> 00:14:54.436 A:middle
然后你在

00:14:54.436 --> 00:14:56.606 A:middle
授权请求中

00:14:56.606 --> 00:14:56.926 A:middle
处理新的错误

00:15:01.056 --> 00:15:02.056 A:middle
你要确保能够明智地使用它

00:15:02.116 --> 00:15:05.006 A:middle
并且尽量不去限制

00:15:05.006 --> 00:15:08.826 A:middle
基于你可访问数据的

00:15:08.826 --> 00:15:09.086 A:middle
App 的功能

00:15:09.866 --> 00:15:11.466 A:middle
你真的想要确定

00:15:11.466 --> 00:15:13.196 A:middle
无论你的用户想要

00:15:13.196 --> 00:15:14.406 A:middle
分享多少数据

00:15:14.786 --> 00:15:16.326 A:middle
都有尽可能多的用户

00:15:16.326 --> 00:15:16.976 A:middle
能够从你的 App 中受益

00:15:22.046 --> 00:15:23.546 A:middle
所以这是一个完整的授权流量

00:15:23.546 --> 00:15:25.536 A:middle
并且这里有一些

00:15:25.536 --> 00:15:27.116 A:middle
我希望去关注的点

00:15:28.406 --> 00:15:30.966 A:middle
首先 你应该确保无论何时

00:15:30.966 --> 00:15:32.746 A:middle
每一次你想要访问数据

00:15:32.746 --> 00:15:34.316 A:middle
你都需要去请求权限

00:15:34.316 --> 00:15:37.296 A:middle
尤其是现在

00:15:37.296 --> 00:15:39.456 A:middle
因为用户可能希望每次有新数据进入时

00:15:39.526 --> 00:15:41.386 A:middle
都查看这个许可表

00:15:41.386 --> 00:15:44.106 A:middle
因此我们可能 要在每次你需要查找的时候

00:15:44.106 --> 00:15:45.756 A:middle
去呈现这个许可表

00:15:48.106 --> 00:15:49.346 A:middle
你还应该确保

00:15:49.346 --> 00:15:51.356 A:middle
这个请求只会访问

00:15:51.356 --> 00:15:52.166 A:middle
你需要的数据

00:15:52.726 --> 00:15:56.266 A:middle
并且最后 你应该

00:15:56.266 --> 00:15:58.356 A:middle
通过充分利用新的 API

00:15:58.736 --> 00:15:59.906 A:middle
来为用户提供更好的使用环境

00:15:59.906 --> 00:16:02.066 A:middle
也为你自己

00:15:59.906 --> 00:16:02.066 A:middle
也为你自己

00:16:02.066 --> 00:16:03.456 A:middle
提供充足的时间来验证请求

00:16:08.056 --> 00:16:08.976 A:middle
我想要把

00:16:08.976 --> 00:16:10.756 A:middle
下面的内容交给我的同事 Peyton

00:16:11.026 --> 00:16:12.396 A:middle
让大家来看一下 他能够用我说的这些新改进

00:16:12.396 --> 00:16:14.026 A:middle
在他的 App 里做些什么 谢谢

00:16:16.266 --> 00:16:16.866 A:middle
&gt;&gt; 谢谢你 Jason

00:16:17.696 --> 00:16:18.846 A:middle
我正在忙于一个

00:16:18.846 --> 00:16:20.166 A:middle
为登山者们的下一次登山

00:16:20.166 --> 00:16:20.906 A:middle
进行训练的 App

00:16:21.656 --> 00:16:24.036 A:middle
我已经得到一个

00:16:24.036 --> 00:16:26.436 A:middle
包括我的所有用户走路 徒步旅行和

00:16:26.436 --> 00:16:27.686 A:middle
爬楼梯训练的

00:16:27.686 --> 00:16:28.226 A:middle
HealthKit 动力视图

00:16:28.916 --> 00:16:31.116 A:middle
现在 经过广泛的市场调查

00:16:31.116 --> 00:16:33.266 A:middle
我已经确定了

00:16:33.266 --> 00:16:35.156 A:middle
那些去登山的登山者们

00:16:35.156 --> 00:16:37.786 A:middle
是去山上旅行

00:16:38.356 --> 00:16:40.106 A:middle
而旅行者应该知道他们的疫苗接种状态

00:16:40.486 --> 00:16:42.096 A:middle
因此 通过未来发展的

00:16:42.096 --> 00:16:43.746 A:middle
传递特性

00:16:43.746 --> 00:16:45.236 A:middle
登山者们应该知道

00:16:45.236 --> 00:16:46.466 A:middle
他们的疫苗接种状态

00:16:46.886 --> 00:16:48.646 A:middle
所以 我将帮助我的用户们

00:16:49.156 --> 00:16:50.646 A:middle
我已经开始进行一项新的实验

00:16:50.646 --> 00:16:52.646 A:middle
一个免疫仪表板

00:16:53.306 --> 00:16:54.936 A:middle
所以 请允许我

00:16:54.936 --> 00:16:55.146 A:middle
点击一下这个

00:16:55.696 --> 00:16:58.526 A:middle
这是我的免疫仪表板

00:16:58.526 --> 00:17:00.346 A:middle
首先我将

00:16:58.526 --> 00:17:00.346 A:middle
首先我将

00:17:00.346 --> 00:17:02.216 A:middle
为我的用户展示

00:17:02.216 --> 00:17:04.286 A:middle
他们目前的疫苗接种

00:17:04.286 --> 00:17:05.915 A:middle
并且我将用这个

00:17:05.915 --> 00:17:07.836 A:middle
HKClinicalRecords 来显示名称属性

00:17:08.646 --> 00:17:09.986 A:middle
我已经在我的项目中

00:17:09.986 --> 00:17:11.866 A:middle
添加了健康记录功能

00:17:12.156 --> 00:17:14.516 A:middle
并且我已经创建了一个目标字符串

00:17:14.516 --> 00:17:16.195 A:middle
来告诉我的用户们我要如何

00:17:16.195 --> 00:17:17.596 A:middle
使用他们的免疫接种记录

00:17:18.516 --> 00:17:20.836 A:middle
现在是时候来展示我的仪表板了

00:17:21.816 --> 00:17:22.695 A:middle
所以现在 我正在

00:17:22.695 --> 00:17:24.195 A:middle
ImmunizationsViewController 中

00:17:24.296 --> 00:17:25.256 A:middle
使用这个面板

00:17:25.976 --> 00:17:27.856 A:middle
在 HealthKit 中

00:17:28.006 --> 00:17:29.806 A:middle
每次你的用户进入要用到 HealthKit 的 App

00:17:29.806 --> 00:17:31.486 A:middle
的部分时都要请求权限

00:17:31.486 --> 00:17:33.496 A:middle
是非常好的一个做法

00:17:34.086 --> 00:17:36.526 A:middle
所以对于这个 App 来说

00:17:36.676 --> 00:17:37.456 A:middle
ViewWillAppear 是个很棒的地方

00:17:38.836 --> 00:17:43.156 A:middle
在这里 首先我需要说明

00:17:43.956 --> 00:17:44.776 A:middle
我对于免疫记录样本

00:17:44.776 --> 00:17:46.256 A:middle
很感兴趣

00:17:46.886 --> 00:17:50.816 A:middle
接下来 调用我的

00:17:50.816 --> 00:17:52.306 A:middle
健康中心的 requestAuthorization 方法

00:17:53.356 --> 00:17:54.786 A:middle
在回调中 我将检查是否成功

00:17:54.786 --> 00:17:56.906 A:middle
并且恰当地

00:17:56.906 --> 00:17:57.846 A:middle
去处理错误

00:17:59.196 --> 00:18:01.476 A:middle
最终 一旦我未经授权

00:17:59.196 --> 00:18:01.476 A:middle
最终 一旦我未经授权

00:18:02.086 --> 00:18:03.376 A:middle
我将去调用这个

00:18:03.376 --> 00:18:04.726 A:middle
我即将执行的

00:18:04.726 --> 00:18:06.576 A:middle
查询免疫的方法

00:18:06.806 --> 00:18:08.466 A:middle
在这个免疫接种查询中

00:18:08.716 --> 00:18:09.946 A:middle
我将创建一个示例

00:18:09.946 --> 00:18:12.046 A:middle
我将去遍历所有的返回样本

00:18:12.046 --> 00:18:13.656 A:middle
并且我将让

00:18:13.656 --> 00:18:15.346 A:middle
每一个样本的显示名称

00:18:15.346 --> 00:18:16.916 A:middle
都通过我的数据源

00:18:17.526 --> 00:18:17.976 A:middle
好了让我们开始吧

00:18:22.116 --> 00:18:23.666 A:middle
在这里 我已经得到了我的查询样本

00:18:24.016 --> 00:18:25.716 A:middle
并且我正在使用人类

00:18:25.716 --> 00:18:27.246 A:middle
样本记录类型

00:18:28.166 --> 00:18:30.686 A:middle
不需要足够确定 因为我想要

00:18:30.686 --> 00:18:32.656 A:middle
所有用户的免疫接种

00:18:32.656 --> 00:18:35.316 A:middle
并且同样没有限制因为

00:18:35.316 --> 00:18:36.636 A:middle
我想要得到

00:18:36.936 --> 00:18:37.526 A:middle
所有用户的免疫接种

00:18:37.986 --> 00:18:40.266 A:middle
没有排序描述符

00:18:40.266 --> 00:18:41.856 A:middle
这些样本以什么顺序返回

00:18:41.856 --> 00:18:42.616 A:middle
对我来说没有关系

00:18:43.496 --> 00:18:45.916 A:middle
并且我要根据这来检查结果

00:18:46.256 --> 00:18:48.556 A:middle
和看是否存在

00:18:48.556 --> 00:18:49.426 A:middle
没有被合适处理的错误

00:18:50.806 --> 00:18:52.936 A:middle
接下来 我要遍历一遍样本

00:18:52.936 --> 00:18:55.216 A:middle
并且我将根据显示名称让

00:18:55.446 --> 00:18:57.396 A:middle
这些样本

00:18:57.966 --> 00:18:58.056 A:middle
通过我的数据源

00:19:00.496 --> 00:19:02.116 A:middle
有了我的数据源里的这些名称

00:19:02.936 --> 00:19:03.816 A:middle
便是时候去主队列

00:19:03.816 --> 00:19:06.536 A:middle
调用这个我之前写的

00:19:06.536 --> 00:19:08.456 A:middle
重加载的 UI 方法了

00:19:09.816 --> 00:19:12.766 A:middle
最后 我要在健康中心中

00:19:12.766 --> 00:19:14.306 A:middle
执行我的这个样本查找

00:19:15.076 --> 00:19:15.976 A:middle
以上就是整个过程

00:19:16.446 --> 00:19:16.976 A:middle
现在让我们来建立并运行它吧

00:19:21.066 --> 00:19:22.336 A:middle
所以 这是我的训练日志

00:19:22.786 --> 00:19:23.636 A:middle
我将要点击我的

00:19:23.636 --> 00:19:24.916 A:middle
免疫仪表板选项

00:19:25.366 --> 00:19:26.686 A:middle
我看到一个新的健康记录授权表

00:19:26.686 --> 00:19:28.776 A:middle
它向我的用户解释

00:19:28.776 --> 00:19:31.276 A:middle
我的 App 可能会如何

00:19:31.446 --> 00:19:33.896 A:middle
使用用户的健康记录的

00:19:34.916 --> 00:19:37.306 A:middle
我要点击继续

00:19:37.306 --> 00:19:39.596 A:middle
然后在这里 我的用户可以

00:19:39.786 --> 00:19:41.686 A:middle
准许或拒绝

00:19:41.686 --> 00:19:42.156 A:middle
他们觉得合适的类别

00:19:42.966 --> 00:19:44.536 A:middle
这是我早些时候

00:19:44.536 --> 00:19:45.976 A:middle
在我的 Info.plist 中

00:19:45.976 --> 00:19:47.796 A:middle
伴随着一个我的 App 隐私政策的链接

00:19:47.796 --> 00:19:48.956 A:middle
所定义的目标字符串

00:19:49.896 --> 00:19:51.836 A:middle
现在用户必须明确地

00:19:52.026 --> 00:19:53.556 A:middle
切换每一个单一类别

00:19:53.556 --> 00:19:55.776 A:middle
没有一个可以

00:19:55.776 --> 00:19:56.166 A:middle
一次性打开所有类别的按钮

00:19:57.256 --> 00:19:59.306 A:middle
所以 出于这次演示的目的

00:19:59.486 --> 00:20:00.386 A:middle
我打算启用免疫接种

00:19:59.486 --> 00:20:00.386 A:middle
我打算启用免疫接种

00:20:00.386 --> 00:20:02.766 A:middle
并且去分享现在的记录

00:20:03.246 --> 00:20:05.056 A:middle
至于未来的记录

00:20:05.306 --> 00:20:06.746 A:middle
我将把它设成默认为在分享前进行询问

00:20:06.746 --> 00:20:08.506 A:middle
然后我点击完成

00:20:09.016 --> 00:20:12.076 A:middle
然后 就像这样 我拥有了一个

00:20:12.076 --> 00:20:13.806 A:middle
我所有用户的免疫接种清单

00:20:13.806 --> 00:20:14.916 A:middle
所以 这只是

00:20:15.516 --> 00:20:20.586 A:middle
[ 掌声 ]

00:20:21.086 --> 00:20:22.146 A:middle
所以这只是使用显示名称

00:20:22.146 --> 00:20:23.126 A:middle
但是还有很多信息

00:20:23.126 --> 00:20:24.626 A:middle
包含在拥有

00:20:24.626 --> 00:20:27.536 A:middle
临床记录的 FHIR 资源当中

00:20:27.926 --> 00:20:29.166 A:middle
所以 为了让你了解更多关于 FHIR 的信息

00:20:29.166 --> 00:20:30.066 A:middle
我将把接下来的部分

00:20:30.066 --> 00:20:30.416 A:middle
交还给 Jason

00:20:31.576 --> 00:20:32.196 A:middle
&gt;&gt; 谢谢你 Peyton

00:20:32.846 --> 00:20:35.756 A:middle
好了 Peyton 刚才给我们展示了

00:20:35.756 --> 00:20:38.026 A:middle
在我们的 App 中 我们如何去申请权限

00:20:38.026 --> 00:20:41.286 A:middle
如何查找数据

00:20:41.286 --> 00:20:43.266 A:middle
以及如何在 HKClinicalRecord 上

00:20:43.266 --> 00:20:45.556 A:middle
利用新的显示名称

00:20:45.556 --> 00:20:47.086 A:middle
以用户们所熟悉的方法

00:20:47.086 --> 00:20:48.976 A:middle
去显示信息

00:20:53.356 --> 00:20:56.116 A:middle
所以 现在让我们来看看 FHIR

00:20:56.116 --> 00:20:57.536 A:middle
以及你能够用这种

00:20:57.536 --> 00:21:02.626 A:middle
丰富的数据格式来做些什么

00:20:57.536 --> 00:21:02.626 A:middle
丰富的数据格式来做些什么

00:21:02.626 --> 00:21:04.586 A:middle
用户在一生中会与多个

00:21:04.586 --> 00:21:06.026 A:middle
医疗保健机构进行交流

00:21:06.026 --> 00:21:08.446 A:middle
并且它们经常运用

00:21:08.446 --> 00:21:10.526 A:middle
不同的电子健康记录系统

00:21:10.526 --> 00:21:12.446 A:middle
而这些系统

00:21:13.326 --> 00:21:15.856 A:middle
并不总是以同样的方式

00:21:15.856 --> 00:21:16.936 A:middle
来表示数据

00:21:17.586 --> 00:21:19.426 A:middle
这便使得交互操作性

00:21:19.426 --> 00:21:20.536 A:middle
变得非常困难

00:21:21.066 --> 00:21:25.016 A:middle
所以为了解决这个问题

00:21:25.016 --> 00:21:26.516 A:middle
医疗团体为了一个叫做

00:21:26.516 --> 00:21:27.996 A:middle
Argonaut 的项目

00:21:27.996 --> 00:21:30.626 A:middle
而聚集了起来

00:21:30.626 --> 00:21:33.076 A:middle
这个项目利用 FHIR

00:21:33.076 --> 00:21:36.556 A:middle
一个灵活的表示健康记录的 JSON 表示

00:21:36.616 --> 00:21:38.416 A:middle
并且 [ 音质不清晰 ]

00:21:38.416 --> 00:21:40.936 A:middle
如智能授权指南中所定义的那样

00:21:40.936 --> 00:21:43.646 A:middle
允许连接

00:21:43.646 --> 00:21:45.196 A:middle
与医疗机构保持持续性连接

00:21:45.196 --> 00:21:47.256 A:middle
并且允许数据

00:21:47.256 --> 00:21:49.016 A:middle
在一个共同格式下

00:21:49.016 --> 00:21:51.676 A:middle
跨越多个相关的机构

00:21:51.676 --> 00:21:53.046 A:middle
被下载下来

00:21:54.916 --> 00:21:58.826 A:middle
FHIR 本身模拟了

00:21:58.886 --> 00:22:01.556 A:middle
从过敏不耐症到

00:21:58.886 --> 00:22:01.556 A:middle
从过敏不耐症到

00:22:01.656 --> 00:22:04.846 A:middle
视觉处方的庞大的健康数据

00:22:04.846 --> 00:22:08.456 A:middle
并且它将这些数据

00:22:08.456 --> 00:22:10.196 A:middle
组成不同的数据类型

00:22:10.196 --> 00:22:12.316 A:middle
我们把这些数据类型叫做资源

00:22:13.046 --> 00:22:14.966 A:middle
每个资源都有一个资源类型

00:22:14.966 --> 00:22:16.396 A:middle
并且每个健康数据也

00:22:16.396 --> 00:22:20.996 A:middle
都有一个资源类型

00:22:21.776 --> 00:22:23.846 A:middle
如今 我们正在选择八个

00:22:24.046 --> 00:22:26.256 A:middle
最常见的资源类型

00:22:26.256 --> 00:22:27.486 A:middle
并且这些都是在

00:22:27.486 --> 00:22:29.636 A:middle
Argonaut 项目中定义的

00:22:29.636 --> 00:22:31.336 A:middle
我们将它们分成

00:22:31.336 --> 00:22:33.066 A:middle
我们之前看到的

00:22:33.066 --> 00:22:33.926 A:middle
七种不同的临床类型

00:22:35.096 --> 00:22:36.046 A:middle
你会发现我们将

00:22:36.046 --> 00:22:39.756 A:middle
得到的观测数据分成实验结果

00:22:39.756 --> 00:22:41.456 A:middle
和基于分类的生命特征

00:22:41.456 --> 00:22:45.006 A:middle
并且我们将

00:22:45.006 --> 00:22:47.006 A:middle
多种药物资源类型

00:22:47.006 --> 00:22:51.956 A:middle
归入药物类别

00:22:52.066 --> 00:22:54.846 A:middle
因此 FHIR 将数据

00:22:54.846 --> 00:22:56.666 A:middle
表示为一个 JSON 字典

00:22:56.666 --> 00:22:58.376 A:middle
并且有一些关键属性

00:22:58.376 --> 00:23:00.666 A:middle
会在所有的 FHIR 资源当中表现出来

00:22:58.376 --> 00:23:00.666 A:middle
会在所有的 FHIR 资源当中表现出来

00:23:01.816 --> 00:23:03.496 A:middle
比如资源类型

00:23:04.196 --> 00:23:05.096 A:middle
在这里我们看到的是一个观测数据

00:23:05.096 --> 00:23:08.356 A:middle
并且它告诉我们

00:23:08.356 --> 00:23:09.806 A:middle
在健康的情况下

00:23:09.996 --> 00:23:12.006 A:middle
这是一个实验结果

00:23:12.006 --> 00:23:12.426 A:middle
还是一个生命特征

00:23:14.896 --> 00:23:17.686 A:middle
我们也有一个代表

00:23:17.766 --> 00:23:19.286 A:middle
所有资源类型的 ID

00:23:20.246 --> 00:23:22.836 A:middle
这是一个属于这个资源的

00:23:22.836 --> 00:23:24.346 A:middle
独一无二的标识符

00:23:24.346 --> 00:23:26.096 A:middle
但是你应该注意它只是

00:23:26.096 --> 00:23:27.626 A:middle
在这个医疗机构中的

00:23:27.626 --> 00:23:29.326 A:middle
这个资源类型里

00:23:29.326 --> 00:23:30.526 A:middle
是独一无二的

00:23:35.436 --> 00:23:36.806 A:middle
FHIR 的最基本的一个

00:23:36.806 --> 00:23:39.266 A:middle
建筑模块就是编码

00:23:40.736 --> 00:23:43.016 A:middle
这允许我们对

00:23:43.016 --> 00:23:45.216 A:middle
外部编码系统中的

00:23:46.016 --> 00:23:48.176 A:middle
唯一标识符或者编码

00:23:48.176 --> 00:23:48.806 A:middle
能有一个参考

00:23:49.496 --> 00:23:50.816 A:middle
有大量的在 FHIR 中

00:23:50.816 --> 00:23:52.776 A:middle
指定的编码系统

00:23:52.776 --> 00:23:55.466 A:middle
你可以用这些来

00:23:55.466 --> 00:23:57.106 A:middle
找到更多在医学记录中

00:23:57.106 --> 00:23:58.346 A:middle
所涉及的

00:23:58.346 --> 00:24:01.976 A:middle
或是跨多个医疗机构

00:23:58.346 --> 00:24:01.976 A:middle
或是跨多个医疗机构

00:24:01.976 --> 00:24:03.426 A:middle
相关联的

00:24:03.426 --> 00:24:04.826 A:middle
项目信息

00:24:05.346 --> 00:24:09.496 A:middle
在这里 我们实际上是在看一个

00:24:09.546 --> 00:24:12.196 A:middle
类别编码

00:24:12.196 --> 00:24:13.506 A:middle
它告诉我们 这是一个实验结果

00:24:15.816 --> 00:24:18.056 A:middle
当然这里还有一个

00:24:18.056 --> 00:24:20.466 A:middle
针对于正在被测量的内容的代码

00:24:22.296 --> 00:24:25.376 A:middle
这是在 LOINC 编码系统中

00:24:25.636 --> 00:24:27.806 A:middle
定义的血糖

00:24:27.806 --> 00:24:29.266 A:middle
它能够使用这段代码

00:24:29.266 --> 00:24:31.316 A:middle
并且在 LOINC 数据库中

00:24:31.316 --> 00:24:32.956 A:middle
查找能够替代的名称

00:24:32.956 --> 00:24:33.526 A:middle
和更多的信息

00:24:34.076 --> 00:24:38.216 A:middle
当然了这是一个观测

00:24:38.216 --> 00:24:39.966 A:middle
所以我拥有

00:24:39.966 --> 00:24:41.076 A:middle
被观察到的值

00:24:41.386 --> 00:24:42.786 A:middle
这是每分升 60 毫克

00:24:42.786 --> 00:24:44.676 A:middle
并且你会注意到

00:24:44.676 --> 00:24:46.376 A:middle
即使单位都被编码过了

00:24:46.376 --> 00:24:49.816 A:middle
我对于正在发生的事情

00:24:49.816 --> 00:24:49.976 A:middle
有一个非常全面的了解

00:24:54.076 --> 00:24:56.376 A:middle
FHIR 资源有很多

00:24:56.376 --> 00:24:59.586 A:middle
额外的数据元素

00:24:59.586 --> 00:25:01.036 A:middle
并且我鼓励你们去看看

00:24:59.586 --> 00:25:01.036 A:middle
并且我鼓励你们去看看

00:25:01.036 --> 00:25:02.006 A:middle
Argonaut 项目的文档

00:25:02.006 --> 00:25:04.026 A:middle
来了解更多的信息

00:25:04.026 --> 00:25:06.146 A:middle
我将在最后

00:25:06.636 --> 00:25:08.966 A:middle
详细介绍这些

00:25:08.966 --> 00:25:10.716 A:middle
在 HealthKit 中我们建模了一个 FHIR 资源

00:25:10.716 --> 00:25:12.896 A:middle
来作为 HKFHIRResource

00:25:13.926 --> 00:25:15.606 A:middle
我们提供了一些关键属性

00:25:15.826 --> 00:25:18.126 A:middle
比如数据和对于完整的

00:25:18.126 --> 00:25:19.536 A:middle
原始数据的访问通道

00:25:21.376 --> 00:25:23.596 A:middle
我们表示出像

00:25:23.596 --> 00:25:26.206 A:middle
资源类型和标识符

00:25:26.206 --> 00:25:26.806 A:middle
这样的常见元素

00:25:27.426 --> 00:25:32.306 A:middle
你可以利用可编码 Swift 或

00:25:32.306 --> 00:25:34.186 A:middle
JSON 序列化

00:25:34.186 --> 00:25:35.186 A:middle
来访问这些数据

00:25:35.916 --> 00:25:37.156 A:middle
在这里 你可以看到

00:25:37.156 --> 00:25:39.076 A:middle
我已经定义了我自己的可编码结构

00:25:39.336 --> 00:25:42.046 A:middle
我的可编码观测

00:25:42.046 --> 00:25:43.656 A:middle
并且我正在用它来

00:25:43.656 --> 00:25:44.966 A:middle
寻找之前我们看到的量化值

00:25:45.516 --> 00:25:49.166 A:middle
你可以认为

00:25:49.166 --> 00:25:50.906 A:middle
数据结构是正确的

00:25:50.906 --> 00:25:53.606 A:middle
因为我们只通过 API

00:25:53.606 --> 00:25:57.726 A:middle
分享有效的 FHIR 资源

00:25:58.196 --> 00:25:59.136 A:middle
我们也引进了一些

00:25:59.136 --> 00:26:00.556 A:middle
更为确定的信息 来使得你可以

00:25:59.136 --> 00:26:00.556 A:middle
更为确定的信息 来使得你可以

00:26:00.556 --> 00:26:01.356 A:middle
更好地操作

00:26:01.356 --> 00:26:02.566 A:middle
HKClinicalRecord

00:26:03.316 --> 00:26:05.046 A:middle
我们有一个允许你去

00:26:05.046 --> 00:26:08.316 A:middle
按资源类型查找的推断

00:26:08.396 --> 00:26:10.686 A:middle
在这里我在查找处方

00:26:10.686 --> 00:26:12.866 A:middle
或者是 FHIR 的医疗订单

00:26:15.216 --> 00:26:16.766 A:middle
我们同样也有一个

00:26:16.766 --> 00:26:18.716 A:middle
允许你去通过其来源 资源类型

00:26:19.206 --> 00:26:20.946 A:middle
以及标识符

00:26:21.166 --> 00:26:23.076 A:middle
来获得唯一标识记录的推断

00:26:23.716 --> 00:26:25.416 A:middle
这会是非常有用的

00:26:25.416 --> 00:26:27.066 A:middle
因为 FHIR 资源能够

00:26:27.156 --> 00:26:28.636 A:middle
参考其他的 FHIR 资源

00:26:29.046 --> 00:26:30.926 A:middle
例如 一个药物可能会

00:26:30.926 --> 00:26:32.436 A:middle
参考它要

00:26:32.486 --> 00:26:32.956 A:middle
治疗的情况

00:26:37.116 --> 00:26:38.346 A:middle
现在 这里有一些

00:26:38.346 --> 00:26:39.686 A:middle
当你去操作 FHIR 时你需要

00:26:39.686 --> 00:26:41.096 A:middle
知道的额外的事项

00:26:42.726 --> 00:26:44.846 A:middle
首先 FHIR 资源可能

00:26:44.846 --> 00:26:46.906 A:middle
包含他们自己的日期

00:26:47.466 --> 00:26:49.136 A:middle
举个例子 处方中可能会

00:26:49.136 --> 00:26:50.606 A:middle
包含处方的订单数据

00:26:50.606 --> 00:26:52.766 A:middle
而身体状况中

00:26:53.006 --> 00:26:54.766 A:middle
可能会包含开始日期

00:26:54.906 --> 00:26:56.626 A:middle
消减日期以及

00:26:56.626 --> 00:26:58.566 A:middle
首次检查时的处方日期

00:26:59.586 --> 00:27:01.016 A:middle
因此 你应该直接使用 FHIR 资源

00:26:59.586 --> 00:27:01.016 A:middle
因此 你应该直接使用 FHIR 资源

00:27:01.016 --> 00:27:03.726 A:middle
去为每一个

00:27:03.756 --> 00:27:05.356 A:middle
资源类型来

00:27:05.396 --> 00:27:05.676 A:middle
访问这些日期

00:27:06.746 --> 00:27:08.436 A:middle
在 HKSample 的超类中

00:27:08.436 --> 00:27:09.786 A:middle
可获得的开始日期和截止日期

00:27:09.786 --> 00:27:11.716 A:middle
被设置为我们

00:27:11.716 --> 00:27:14.096 A:middle
第一次在 Health 中

00:27:14.966 --> 00:27:16.000 A:middle
加入那个资源的日期

00:27:18.186 --> 00:27:20.046 A:middle
当你去判断一个独一无二的

00:27:20.046 --> 00:27:21.556 A:middle
健康记录时

00:27:21.556 --> 00:27:23.856 A:middle
你应该去使用源代码 资源

00:27:23.856 --> 00:27:24.346 A:middle
类型和标识符

00:27:24.756 --> 00:27:26.476 A:middle
这允许你在

00:27:26.476 --> 00:27:27.506 A:middle
医疗机构

00:27:27.506 --> 00:27:29.636 A:middle
更新的过程中

00:27:29.636 --> 00:27:31.736 A:middle
识别健康记录的整个生命周期

00:27:32.156 --> 00:27:36.666 A:middle
并且最终 你应该知道

00:27:36.666 --> 00:27:39.536 A:middle
就数值精确度而言

00:27:39.536 --> 00:27:41.486 A:middle
FHIR 和 JSON

00:27:41.486 --> 00:27:42.086 A:middle
并不完全统一

00:27:43.286 --> 00:27:45.426 A:middle
FHIR 将小数点后面的

00:27:45.426 --> 00:27:47.316 A:middle
数字的个数赋予了重要性

00:27:47.316 --> 00:27:48.916 A:middle
并且当你使用可编码 Swift 或

00:27:48.916 --> 00:27:50.986 A:middle
JSON 序列化时

00:27:51.166 --> 00:27:52.666 A:middle
它可能会丢失

00:27:53.176 --> 00:27:54.976 A:middle
如果对于你的 App 来说

00:27:54.976 --> 00:27:57.396 A:middle
这些信息

00:27:57.396 --> 00:28:00.116 A:middle
非常重要的话

00:27:57.396 --> 00:28:00.116 A:middle
非常重要的话

00:28:00.116 --> 00:28:01.856 A:middle
那么可编码 Swift和 JSON 序列化

00:28:02.006 --> 00:28:03.576 A:middle
或许并不是很合适的工具

00:28:04.596 --> 00:28:06.646 A:middle
就此而言 我很乐意让

00:28:06.646 --> 00:28:08.496 A:middle
Peyton 回来继续他的演讲

00:28:08.496 --> 00:28:10.376 A:middle
来让我们看一下通过这个新的 API

00:28:10.376 --> 00:28:18.606 A:middle
他都能做些什么 [ 掌声 ]

00:28:19.106 --> 00:28:19.686 A:middle
&gt;&gt; 谢谢你 Jason

00:28:20.636 --> 00:28:21.896 A:middle
那么回到之前我一直在从事的

00:28:21.896 --> 00:28:23.186 A:middle
免疫接种仪表板上

00:28:23.726 --> 00:28:25.526 A:middle
我正在使用 HealthKit 去获取

00:28:25.526 --> 00:28:27.316 A:middle
我的用户的疫苗接种

00:28:27.316 --> 00:28:28.826 A:middle
但是现在 对于用户来讲

00:28:28.826 --> 00:28:30.696 A:middle
他们很难知道 他们有什么疫苗接种

00:28:30.766 --> 00:28:31.846 A:middle
以及他们可能会需要接种什么疫苗

00:28:31.846 --> 00:28:34.616 A:middle
所以我将会通过

00:28:34.616 --> 00:28:36.436 A:middle
一个疫苗接种清单

00:28:36.656 --> 00:28:37.346 A:middle
来解决这个问题

00:28:37.866 --> 00:28:39.466 A:middle
用户们可以看到用

00:28:39.466 --> 00:28:41.706 A:middle
通俗语言说明的 他们的疫苗简介

00:28:43.126 --> 00:28:44.816 A:middle
要填充这个表的话 我需要知道的是

00:28:44.816 --> 00:28:46.016 A:middle
这个组合疫苗

00:28:46.016 --> 00:28:51.136 A:middle
增加抵抗水痘和 MMR 的免疫力

00:28:51.756 --> 00:28:54.016 A:middle
卫生机构讲着不同的语言

00:28:54.016 --> 00:28:55.926 A:middle
所以我不能仅仅

00:28:55.926 --> 00:28:58.596 A:middle
依赖于名字

00:28:58.596 --> 00:28:59.806 A:middle
所以 这就是 FHIR 的互操作性

00:28:59.806 --> 00:29:00.856 A:middle
所扮演的角色

00:28:59.806 --> 00:29:00.856 A:middle
所扮演的角色

00:29:01.856 --> 00:29:03.356 A:middle
FHIR 提供了一种方式去

00:29:03.416 --> 00:29:05.066 A:middle
使用预定义代码而不是

00:29:05.066 --> 00:29:07.616 A:middle
自然语言 来说明事物

00:29:09.156 --> 00:29:11.106 A:middle
所以 在看过 FHIR 文件以后

00:29:11.106 --> 00:29:13.326 A:middle
这便是我想到的

00:29:13.326 --> 00:29:14.806 A:middle
能够用来

00:29:14.806 --> 00:29:16.736 A:middle
识别水痘疫苗的算法

00:29:18.636 --> 00:29:20.066 A:middle
首先 我将从 JSON 中

00:29:20.066 --> 00:29:23.406 A:middle
得到免疫记录

00:29:23.406 --> 00:29:25.176 A:middle
我将把它反序列化

00:29:25.176 --> 00:29:27.046 A:middle
并在 CVX 系统中

00:29:27.046 --> 00:29:28.646 A:middle
提取疫苗代码

00:29:29.306 --> 00:29:31.006 A:middle
CVX 是一种在免疫接种中

00:29:31.006 --> 00:29:32.646 A:middle
常用的编码系统

00:29:32.646 --> 00:29:33.856 A:middle
还有很多其他的

00:29:33.856 --> 00:29:35.616 A:middle
针对不同医学领域的编码系统

00:29:36.916 --> 00:29:38.726 A:middle
最后 我将把我在免疫接种记录中

00:29:38.806 --> 00:29:40.286 A:middle
发现的 CVX 码和我所知道的

00:29:40.286 --> 00:29:42.486 A:middle
能够增强对水痘的免疫力的

00:29:42.486 --> 00:29:44.676 A:middle
疫苗清单

00:29:44.676 --> 00:29:45.546 A:middle
进行比较

00:29:45.916 --> 00:29:47.636 A:middle
如果它们互相匹配

00:29:47.636 --> 00:29:50.376 A:middle
我会在我的 UI 中 水痘的旁边做一个标记

00:29:50.806 --> 00:29:52.976 A:middle
所以 接下来让我们来讨论一下

00:29:52.976 --> 00:29:53.946 A:middle
免疫记录 JSON

00:29:58.046 --> 00:29:59.956 A:middle
这个结构以一个

00:29:59.956 --> 00:30:01.806 A:middle
资源类型免疫接种开始

00:29:59.956 --> 00:30:01.806 A:middle
资源类型免疫接种开始

00:30:02.316 --> 00:30:05.966 A:middle
这里有一个疫苗代码对象

00:30:07.356 --> 00:30:09.986 A:middle
包含一个数组的编码

00:30:10.506 --> 00:30:12.566 A:middle
也许会出现多个编码

00:30:13.556 --> 00:30:16.556 A:middle
所以我需要去通过系统查找

00:30:16.556 --> 00:30:17.526 A:middle
来找到 CVX

00:30:18.186 --> 00:30:19.616 A:middle
在这个例子中

00:30:19.616 --> 00:30:23.186 A:middle
第一个系统是 NDC

00:30:23.186 --> 00:30:24.076 A:middle
所以我往下找直到看到 CVX

00:30:25.086 --> 00:30:27.026 A:middle
就这样我不断查找

00:30:27.026 --> 00:30:29.906 A:middle
然后我就会看见

00:30:29.906 --> 00:30:30.916 A:middle
我有 MMRV

00:30:31.476 --> 00:30:34.886 A:middle
这就是这些

00:30:34.886 --> 00:30:36.176 A:middle
免疫记录 JSON 的结构

00:30:37.026 --> 00:30:38.906 A:middle
现在是时候来实践了

00:30:39.856 --> 00:30:41.646 A:middle
所以我们现在回到

00:30:41.646 --> 00:30:42.956 A:middle
我的免疫视图控制器中

00:30:43.676 --> 00:30:44.796 A:middle
我已经提前完成了一些工作

00:30:44.796 --> 00:30:47.156 A:middle
来使用这个清单的 UI

00:30:47.156 --> 00:30:50.766 A:middle
并且我用

00:30:51.046 --> 00:30:52.596 A:middle
showChecklist 属性实例化了它

00:30:52.596 --> 00:30:57.076 A:middle
那么现在 是时候来用数据

00:30:57.076 --> 00:30:57.826 A:middle
来填充我的清单了

00:30:59.226 --> 00:31:00.856 A:middle
现在我在这个

00:30:59.226 --> 00:31:00.856 A:middle
现在我在这个

00:31:00.856 --> 00:31:01.736 A:middle
免疫方法的查询中

00:31:02.776 --> 00:31:04.226 A:middle
当我对我的用户样本进行遍历时

00:31:04.226 --> 00:31:06.086 A:middle
我将在一个叫做

00:31:06.086 --> 00:31:06.756 A:middle
matchCodedVaccine 的新方法中

00:31:07.596 --> 00:31:09.786 A:middle
添加一个调用 并且如果

00:31:09.786 --> 00:31:10.776 A:middle
遇到的样本是 FHIR 资源的话

00:31:10.776 --> 00:31:12.566 A:middle
我将会通过它

00:31:12.566 --> 00:31:12.866 A:middle
好了现在让我们来实践吧

00:31:17.126 --> 00:31:18.106 A:middle
在这里 我在资源中的 matchCodedVaccine

00:31:18.736 --> 00:31:20.436 A:middle
并且我需要去做的是对这个 FHIR 资源数据

00:31:20.436 --> 00:31:22.776 A:middle
进行反序列化操作

00:31:22.776 --> 00:31:24.896 A:middle
取出接种代码

00:31:24.896 --> 00:31:26.896 A:middle
查找 CVX

00:31:26.896 --> 00:31:29.416 A:middle
并且将它和

00:31:29.416 --> 00:31:32.336 A:middle
不同疾病的 CVX 代码进行比较

00:31:32.966 --> 00:31:35.206 A:middle
在如何选择反序列化 FHIR 资源上

00:31:35.206 --> 00:31:37.136 A:middle
我有很大的自由

00:31:37.136 --> 00:31:39.256 A:middle
所以今天 我将使用

00:31:39.256 --> 00:31:40.356 A:middle
可编码 Swift

00:31:40.906 --> 00:31:43.396 A:middle
我需要为我

00:31:43.396 --> 00:31:44.536 A:middle
真正感兴趣的关键字

00:31:44.536 --> 00:31:45.676 A:middle
去定义一个可编码量

00:31:47.796 --> 00:31:48.736 A:middle
好了我已经操作完了

00:31:49.026 --> 00:31:51.276 A:middle
每个免疫资源有一个疫苗代码

00:31:51.276 --> 00:31:54.896 A:middle
每个疫苗代码有一个

00:31:54.896 --> 00:31:57.086 A:middle
编码数组并且

00:31:57.086 --> 00:32:00.546 A:middle
每个疫苗编码有一个

00:31:57.086 --> 00:32:00.546 A:middle
每个疫苗编码有一个

00:32:01.166 --> 00:32:02.426 A:middle
系统和一个代码

00:32:02.636 --> 00:32:05.836 A:middle
有了这些 我实例化一个 JSON 解码器

00:32:05.836 --> 00:32:08.436 A:middle
并且用它来将一个

00:32:08.436 --> 00:32:10.376 A:middle
FHIR 资源数据解码成一个

00:32:10.376 --> 00:32:11.746 A:middle
免疫资源

00:32:12.276 --> 00:32:16.046 A:middle
剩下的就是去对每个编码进行遍历

00:32:16.046 --> 00:32:19.396 A:middle
检查一下看是否

00:32:19.396 --> 00:32:23.846 A:middle
这个系统是 CVX

00:32:24.106 --> 00:32:26.296 A:middle
然后将代码传递给此方法

00:32:26.296 --> 00:32:28.266 A:middle
好把它标记在数据源中

00:32:28.816 --> 00:32:30.776 A:middle
这个方法的任务就是

00:32:30.776 --> 00:32:32.976 A:middle
将代码和包含每个疾病的代码的清单

00:32:33.046 --> 00:32:34.806 A:middle
相比较 然后

00:32:34.806 --> 00:32:38.026 A:middle
如果在 UI 中发现了匹配标示

00:32:38.026 --> 00:32:41.196 A:middle
说明它是我们已发现的疾病

00:32:41.766 --> 00:32:44.176 A:middle
所以 我要用它来建立

00:32:44.176 --> 00:32:45.916 A:middle
来运行并查看

00:32:45.916 --> 00:32:46.936 A:middle
我的免疫清单

00:32:47.956 --> 00:32:49.436 A:middle
所以现在 我在我的训练日志中

00:32:50.026 --> 00:32:53.746 A:middle
我要去点击免疫接种键

00:32:53.746 --> 00:32:55.546 A:middle
就像这样 通过几行代码

00:32:55.546 --> 00:32:56.816 A:middle
我便拥有了一个免疫清单

00:32:57.516 --> 00:33:02.316 A:middle
[ 掌声 ]

00:32:57.516 --> 00:33:02.316 A:middle
[ 掌声 ]

00:33:02.816 --> 00:33:04.286 A:middle
这就是一个用 FHIR 来

00:33:04.286 --> 00:33:05.626 A:middle
解决问题的例子

00:33:06.426 --> 00:33:11.226 A:middle
现在我将把时间

00:33:11.226 --> 00:33:12.136 A:middle
留给 Jason

00:33:13.226 --> 00:33:19.546 A:middle
Jason [ 掌声 ]

00:33:20.046 --> 00:33:20.856 A:middle
&gt;&gt; 谢谢你 Peyton

00:33:20.856 --> 00:33:25.196 A:middle
所以 Peyton 已经向我们展示了

00:33:25.196 --> 00:33:27.586 A:middle
我们该如何运用丰富的 FHIR 数据

00:33:28.076 --> 00:33:29.756 A:middle
和如何合理地利用我们

00:33:29.756 --> 00:33:31.536 A:middle
所提供的编码

00:33:31.536 --> 00:33:33.336 A:middle
这真的为我们的用户

00:33:33.336 --> 00:33:34.926 A:middle
在他们的健康记录方面

00:33:34.926 --> 00:33:36.806 A:middle
提供了非常有意义的全面的使用

00:33:39.596 --> 00:33:41.736 A:middle
现在 让我们来想一想

00:33:41.736 --> 00:33:43.366 A:middle
在这个领域

00:33:43.366 --> 00:33:46.256 A:middle
你该如何保护你的用户的隐私

00:33:47.526 --> 00:33:48.846 A:middle
正如你所看到的一样

00:33:48.846 --> 00:33:50.446 A:middle
这是一个令人难以置信的敏感数据

00:33:51.716 --> 00:33:53.646 A:middle
我们已经从头开始

00:33:53.646 --> 00:33:57.166 A:middle
建立了隐私

00:33:57.166 --> 00:33:59.646 A:middle
并与医疗机构

00:33:59.646 --> 00:34:00.746 A:middle
建立了直接的安全连接

00:33:59.646 --> 00:34:00.746 A:middle
建立了直接的安全连接

00:34:01.876 --> 00:34:04.156 A:middle
能够直接从用户的

00:34:04.216 --> 00:34:05.946 A:middle
iOS 设备上下载数据

00:34:06.486 --> 00:34:08.255 A:middle
把它安全地

00:34:08.255 --> 00:34:08.896 A:middle
存储在 HealthKit 中

00:34:09.806 --> 00:34:11.406 A:middle
并且围绕着这个

00:34:11.406 --> 00:34:13.886 A:middle
数据的访问端口

00:34:13.886 --> 00:34:16.206 A:middle
提供了全面的管理工具

00:34:16.396 --> 00:34:18.876 A:middle
你的用户们将期望你去

00:34:18.876 --> 00:34:20.896 A:middle
以同样的关心和关注程度

00:34:20.896 --> 00:34:22.596 A:middle
去对待他们的数据

00:34:25.016 --> 00:34:27.626 A:middle
你在这里做的每一个选择

00:34:27.896 --> 00:34:30.266 A:middle
都将直接影响到每个用户

00:34:31.456 --> 00:34:33.126 A:middle
这可能是一个积极的影响

00:34:33.176 --> 00:34:35.065 A:middle
并且这就是我们选择

00:34:35.065 --> 00:34:36.896 A:middle
去提供这个 API 的原因

00:34:36.966 --> 00:34:40.326 A:middle
但是 这个影响也可能是负面的

00:34:41.056 --> 00:34:42.896 A:middle
如果用户觉得这个数据

00:34:42.896 --> 00:34:45.386 A:middle
不受他们的控制

00:34:45.386 --> 00:34:47.275 A:middle
或更糟的是

00:34:47.275 --> 00:34:47.966 A:middle
数据会未经他们同意被分享出去

00:34:49.306 --> 00:34:50.846 A:middle
你可以对你的用户表现出尊重

00:34:50.846 --> 00:34:52.876 A:middle
并且通过给他们

00:34:52.876 --> 00:34:55.025 A:middle
提供关于数据的清晰的政策

00:34:55.025 --> 00:34:56.376 A:middle
去告诉他们

00:34:56.376 --> 00:34:59.736 A:middle
你要用这个数据做什么

00:34:59.736 --> 00:35:01.746 A:middle
来建立一段可信的关系

00:34:59.736 --> 00:35:01.746 A:middle
来建立一段可信的关系

00:35:02.376 --> 00:35:03.736 A:middle
从你的 App

00:35:03.736 --> 00:35:05.736 A:middle
你的目标字符串

00:35:05.736 --> 00:35:08.016 A:middle
你的隐私政策开始

00:35:08.176 --> 00:35:09.916 A:middle
到你处理该数据时

00:35:09.916 --> 00:35:12.206 A:middle
的每一步

00:35:12.206 --> 00:35:14.246 A:middle
都需要这种可信的关系

00:35:15.666 --> 00:35:17.286 A:middle
举个例子 你应该确保

00:35:17.286 --> 00:35:20.836 A:middle
你为你的用户提供了

00:35:20.836 --> 00:35:22.926 A:middle
你是如何管理他们的数据的细节

00:35:23.536 --> 00:35:24.996 A:middle
你应该发布清楚的

00:35:24.996 --> 00:35:27.096 A:middle
保留政策 并且

00:35:27.096 --> 00:35:28.496 A:middle
你应该给他们提供工具

00:35:28.496 --> 00:35:30.296 A:middle
去允许他们删除

00:35:30.296 --> 00:35:32.436 A:middle
他们不再想要与你分享的数据

00:35:32.956 --> 00:35:36.976 A:middle
最终 你应该确保

00:35:36.976 --> 00:35:38.786 A:middle
你请求的数据

00:35:39.426 --> 00:35:41.776 A:middle
和你所要用到的是成正比的

00:35:42.416 --> 00:35:43.906 A:middle
你永远都不该去要求

00:35:43.906 --> 00:35:44.926 A:middle
比你所需要的更多的数据

00:35:49.046 --> 00:35:50.146 A:middle
我鼓励大家去看看

00:35:50.146 --> 00:35:51.996 A:middle
星期四下午 4 点的

00:35:51.996 --> 00:35:53.386 A:middle
隐私对话

00:35:53.386 --> 00:35:55.706 A:middle
通过更好的隐私建立更好的 App

00:35:55.706 --> 00:35:58.486 A:middle
它包含了整个生态系统

00:35:58.606 --> 00:36:00.616 A:middle
所以这是个 去发现更多信息的好机会

00:35:58.606 --> 00:36:00.616 A:middle
所以这是个 去发现更多信息的好机会

00:36:01.286 --> 00:36:02.886 A:middle
所以 我们已经看到了我们

00:36:02.986 --> 00:36:04.376 A:middle
早就介绍过的支持健康记录的

00:36:04.376 --> 00:36:05.756 A:middle
新的样本类型

00:36:06.496 --> 00:36:10.816 A:middle
我们明白如何在我们的 App 中

00:36:10.816 --> 00:36:12.566 A:middle
配置授权和隐私字符串

00:36:12.566 --> 00:36:14.596 A:middle
以请求权限和查找数据

00:36:16.856 --> 00:36:19.066 A:middle
希望我所展示的东西

00:36:19.066 --> 00:36:20.826 A:middle
足以激起你的兴趣

00:36:20.826 --> 00:36:24.706 A:middle
去探索和发现更多关于 FHIR 的信息

00:36:24.806 --> 00:36:26.706 A:middle
并且我们已经看到了

00:36:26.706 --> 00:36:28.396 A:middle
为了帮助用户们保护他们的隐私

00:36:28.396 --> 00:36:28.896 A:middle
你还能做什么

00:36:36.046 --> 00:36:37.826 A:middle
我们为我们的开发团队

00:36:37.826 --> 00:36:39.496 A:middle
所创造的精彩的 App

00:36:39.496 --> 00:36:41.746 A:middle
和当它访问用户的健康数据时

00:36:41.806 --> 00:36:44.096 A:middle
赋予用户

00:36:44.096 --> 00:36:45.846 A:middle
真正的权力 而感到惊喜

00:36:47.356 --> 00:36:49.036 A:middle
这是一个我们基于健康

00:36:49.036 --> 00:36:51.206 A:middle
和 HealthKit 的探究

00:36:51.206 --> 00:36:53.606 A:middle
并且它也是

00:36:53.606 --> 00:36:55.776 A:middle
我们对于 ResearchKit

00:36:56.106 --> 00:36:57.026 A:middle
和 CareKit 的延续

00:36:57.826 --> 00:36:59.746 A:middle
今天 伴随着健康记录

00:36:59.746 --> 00:37:02.686 A:middle
和 HealthKit

00:36:59.746 --> 00:37:02.686 A:middle
和 HealthKit

00:37:02.816 --> 00:37:04.576 A:middle
我们非常激动地

00:37:04.576 --> 00:37:05.766 A:middle
跟大家一起探讨这些

00:37:06.996 --> 00:37:08.586 A:middle
我们已经迫不及待地想知道

00:37:08.586 --> 00:37:12.676 A:middle
你们能够开发出什么

00:37:13.826 --> 00:37:15.556 A:middle
你可以从我身后的 URL 中

00:37:15.556 --> 00:37:16.816 A:middle
和我们拥有的一些实验室中

00:37:16.816 --> 00:37:21.416 A:middle
找到我之前说过的文件

00:37:21.416 --> 00:37:22.926 A:middle
在这次谈话以后

00:37:22.926 --> 00:37:24.636 A:middle
会有一个健康和健身实验室

00:37:24.636 --> 00:37:25.776 A:middle
我们会在那里

00:37:25.776 --> 00:37:27.456 A:middle
与你一起体验这个新的 API

00:37:27.456 --> 00:37:30.916 A:middle
我们的同事 Anherika 和

00:37:30.916 --> 00:37:32.816 A:middle
Kareem 将在明天早上进行一个会谈

00:37:32.816 --> 00:37:36.176 A:middle
来介绍新的运动方式

00:37:36.746 --> 00:37:38.636 A:middle
并且我们明天

00:37:38.636 --> 00:37:40.146 A:middle
还有一项关于健康健身的研究

00:37:40.146 --> 00:37:41.906 A:middle
那对你来说将是一个

00:37:41.906 --> 00:37:45.126 A:middle
了解别人和与我们交流的好机会

00:37:45.666 --> 00:37:49.656 A:middle
所以请你们明天一定不要错过

00:37:49.796 --> 00:37:51.206 A:middle
对此 非常感谢大家

00:37:51.206 --> 00:37:52.976 A:middle
希望大家有一个精彩的会议

00:37:53.516 --> 00:37:56.500 A:middle
[ 掌声 ]
