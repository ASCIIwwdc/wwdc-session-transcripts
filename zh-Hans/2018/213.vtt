WEBVTT

00:00:17.918 --> 00:00:22.155 align:middle line:0
（车载音频及导航app
音乐及转弯）

00:00:29.196 --> 00:00:32.466 align:middle line:0
欢迎参加车载音频及导航app演讲

00:00:32.900 --> 00:00:36.303 align:middle line:-2
我是Jonathan
是iOS车载体验团队的一名工程师

00:00:36.703 --> 00:00:39.873 align:middle line:-2
今天我们非常高兴
跟大家分享一些更新

00:00:39.940 --> 00:00:42.576 align:middle line:-2
帮你们在CarPlay车载中
创建很棒的体验

00:00:44.111 --> 00:00:46.947 align:middle line:-2
我们从CarPlay车载
音频app讲起

00:00:47.247 --> 00:00:50.150 align:middle line:-2
然后我们要介绍
全新的CarPlay车载框架

00:00:50.217 --> 00:00:51.618 align:middle line:-1
可以在你导航app中应用

00:00:52.052 --> 00:00:55.656 align:middle line:-2
并且我们还要进行快速演示
给大家展示

00:00:55.722 --> 00:00:58.325 align:middle line:-2
在CarPlay车载系统中
创建很棒的导航体验有多简单

00:00:58.825 --> 00:01:01.028 align:middle line:-2
我们首先快速回顾一下
CarPlay车载系统

00:00:58.825 --> 00:01:01.028 align:middle line:-2
我们首先快速回顾一下
CarPlay车载系统

00:01:03.297 --> 00:01:07.201 align:middle line:-2
CarPlay车载系统是在汽车中
使用iPhone更智能安全的方式

00:01:07.701 --> 00:01:10.938 align:middle line:-2
你可以毫无压力地处理
一些比较常见的场景

00:01:11.171 --> 00:01:13.073 align:middle line:-2
通过汽车内置播放按钮
当你驾驶汽车时

00:01:13.807 --> 00:01:16.743 align:middle line:-1
你可以打电话、发送和接收信息

00:01:17.010 --> 00:01:21.348 align:middle line:-2
听音乐、播客和收音机
现在还可以通过导航app获取导航

00:01:21.415 --> 00:01:25.118 align:middle line:-1
这些都可以在路上驾车时完成

00:01:26.153 --> 00:01:30.524 align:middle line:-2
你可以把汽车屏幕
当作手机的第二个外显示屏

00:01:31.358 --> 00:01:35.229 align:middle line:-2
你的app可以在汽车屏幕上
呈现另一个版本

00:01:35.295 --> 00:01:38.665 align:middle line:-1
拥有面向汽车优化的用户界面和功能

00:01:39.833 --> 00:01:42.703 align:middle line:-1
还会有一些特别的设计考虑

00:01:42.769 --> 00:01:44.471 align:middle line:-2
当在CarPlay车载系统中
呈现时

00:01:46.373 --> 00:01:49.510 align:middle line:-2
CarPlay车载车辆
有多种输入样式

00:01:49.810 --> 00:01:51.578 align:middle line:-1
有些汽车有触控屏幕

00:01:51.879 --> 00:01:56.149 align:middle line:-2
有些汽车有旋钮
可以上下左右移动从而进行选择

00:01:56.517 --> 00:01:59.620 align:middle line:-2
还有一些汽车有触控板
支持滑动手势

00:01:59.786 --> 00:02:02.623 align:middle line:-2
你甚至可以
通过追踪手指轨迹输入字母

00:01:59.786 --> 00:02:02.623 align:middle line:-2
你甚至可以
通过追踪手指轨迹输入字母

00:02:04.057 --> 00:02:05.893 align:middle line:-1
在靠右驾驶的汽车中

00:02:06.360 --> 00:02:10.997 align:middle line:-2
CarPlay车载状态栏
和app内容将会自动切换

00:02:11.064 --> 00:02:12.366 align:middle line:-1
从而使它更靠近驾驶员

00:02:13.834 --> 00:02:17.371 align:middle line:-2
有些汽车还会通知iOS
当转换成

00:02:18.038 --> 00:02:19.873 align:middle line:-1
一种较暗的界面模式时

00:02:19.940 --> 00:02:21.408 align:middle line:-1
通常这种情况发生在夜晚

00:02:21.475 --> 00:02:23.377 align:middle line:-1
或当汽车的车灯打开时

00:02:24.678 --> 00:02:26.713 align:middle line:-1
你的app可以此为信号

00:02:26.780 --> 00:02:29.516 align:middle line:-1
比如更新地图碎片的显示样式

00:02:31.518 --> 00:02:34.888 align:middle line:-2
CarPlay车载汽车
还支持多种屏幕尺寸

00:02:34.955 --> 00:02:36.456 align:middle line:-1
和纵横比

00:02:37.191 --> 00:02:39.860 align:middle line:-1
iOS会为你处理所有输入方式

00:02:40.194 --> 00:02:43.397 align:middle line:-2
因此你只需要针对CarPlay
车载系统写代码就好

00:02:43.463 --> 00:02:46.033 align:middle line:-1
请放心 所有配置都会支持它

00:02:46.633 --> 00:02:48.702 align:middle line:-2
你可以在CarPlay车载系统中
创建怎样的app呢？

00:02:49.169 --> 00:02:51.872 align:middle line:-2
这些是CarPlay车载app的
五个类别

00:02:52.406 --> 00:02:54.408 align:middle line:-1
车里是一个特殊的地方

00:02:54.474 --> 00:02:57.144 align:middle line:-1
如果你有一款app属于这五个分类

00:02:57.211 --> 00:03:00.714 align:middle line:-2
你需为app申请能在CarPlay
车载系统中使用的授权

00:02:57.211 --> 00:03:00.714 align:middle line:-2
你需为app申请能在CarPlay
车载系统中使用的授权

00:03:02.182 --> 00:03:05.018 align:middle line:-2
如果你不确定app
是否归属于这些类别

00:03:05.085 --> 00:03:06.386 align:middle line:-1
并且你也参加了本次演讲

00:03:06.687 --> 00:03:08.822 align:middle line:-2
请在今天晚些时候
到我们的实验室中面谈

00:03:09.256 --> 00:03:10.624 align:middle line:-1
稍后我们再具体讲一下

00:03:11.024 --> 00:03:14.461 align:middle line:-2
你可以通过这个URL
给你的app申请授权

00:03:15.495 --> 00:03:18.098 align:middle line:-2
让我们快速了解一下
CarPlay车载app的分类

00:03:19.900 --> 00:03:23.003 align:middle line:-2
汽车生产商app是CarPlay
车载app的一个特殊类别

00:03:23.337 --> 00:03:25.305 align:middle line:-1
这些app是由汽车生产商创建的

00:03:25.372 --> 00:03:28.275 align:middle line:-2
并且只能在该生产商
所生产的汽车中使用

00:03:29.142 --> 00:03:33.480 align:middle line:-2
它们可以显示全部自定义用户界面
比如暖风和冷风

00:03:33.780 --> 00:03:34.915 align:middle line:-1
座椅控制

00:03:34.982 --> 00:03:37.184 align:middle line:-1
以及其它与汽车相关的直接集成

00:03:37.784 --> 00:03:41.788 align:middle line:-2
如果这些app集成了SiriKit
那么你就可以修改全部设置

00:03:41.855 --> 00:03:42.956 align:middle line:-1
只需要通过语音控件

00:03:45.292 --> 00:03:49.096 align:middle line:-2
去年我们向CarPlay车载系统
引入了信息和VoIP app

00:03:49.563 --> 00:03:52.499 align:middle line:-2
你的信息和VoIP app
可以接入SiriKit

00:03:52.566 --> 00:03:55.969 align:middle line:-2
因此 你的用户可以实施
许多常见的信息任务

00:03:56.170 --> 00:03:59.773 align:middle line:-2
当连接到CarPlay车载系统时
当在路上驾驶时

00:04:00.440 --> 00:04:03.977 align:middle line:-2
请查看SiriKit了解更多信息
或者可以查看去年的演讲

00:04:04.044 --> 00:04:05.646 align:middle line:-2
名字叫做为你的app
启用CarPlay车载

00:04:08.348 --> 00:04:12.786 align:middle line:-2
先前发布的iOS中 我们向CarPlay
车载系统引入了第三方音频app

00:04:13.387 --> 00:04:16.589 align:middle line:-2
音频app使用了针对汽车
进行了优化的模板界面

00:04:16.656 --> 00:04:19.860 align:middle line:-2
即你的app会针对汽车屏幕
提供数据和元数据

00:04:20.560 --> 00:04:22.896 align:middle line:-1
今天我们要跟大家分享一些

00:04:22.963 --> 00:04:26.099 align:middle line:-2
针对音频app所进行的
性能改善和优化

00:04:27.968 --> 00:04:29.069 align:middle line:-1
最后但同样重要的是

00:04:29.136 --> 00:04:31.572 align:middle line:-1
今天我们要介绍CarPlay框架

00:04:31.839 --> 00:04:35.709 align:middle line:-2
是针对CarPlay车载
导航app的一种全新的iOS框架

00:04:42.516 --> 00:04:43.750 align:middle line:-1
就像音频app一样

00:04:43.817 --> 00:04:47.921 align:middle line:-2
iOS在汽车屏幕中显示你的app
并通过汽车屏幕处理界面

00:04:48.455 --> 00:04:50.057 align:middle line:-1
你的app不需要担心

00:04:50.123 --> 00:04:53.794 align:middle line:-1
输入硬件或许多针对汽车的特别考虑

00:04:54.228 --> 00:04:56.630 align:middle line:-1
你只需要更新地图碎片体验

00:04:56.697 --> 00:04:58.031 align:middle line:-1
让它适合汽车显示屏即可

00:04:59.366 --> 00:05:03.003 align:middle line:-2
CarPlay车载框架
提供一种固定的用户界面模板集合

00:04:59.366 --> 00:05:03.003 align:middle line:-2
CarPlay车载框架
提供一种固定的用户界面模板集合

00:05:03.070 --> 00:05:04.838 align:middle line:-1
是iOS针对汽车显示屏进行渲染的

00:05:05.739 --> 00:05:08.909 align:middle line:-2
你的app会决定
如何创建并配置这些模板

00:05:08.976 --> 00:05:11.445 align:middle line:-2
以及需要采取何种操作
来响app户互动

00:05:11.512 --> 00:05:13.547 align:middle line:-1
通过app模板

00:05:13.614 --> 00:05:16.250 align:middle line:-2
稍后我们会详述
CarPlay车载系统

00:05:18.151 --> 00:05:21.288 align:middle line:-2
现在回头看CarPlay
车载app分类 今天我们主要讲

00:05:21.355 --> 00:05:24.591 align:middle line:-1
其中两个分类：音频和导航

00:05:24.992 --> 00:05:26.827 align:middle line:-2
让我们先讲一下
音频app Albert

00:05:33.433 --> 00:05:34.501 align:middle line:-1
谢谢Jonathan

00:05:35.235 --> 00:05:39.006 align:middle line:-2
今天跟大家分享CarPlay车载
音频app相关信息我感到非常激动

00:05:39.640 --> 00:05:41.341 align:middle line:-1
我们首先看一个概述

00:05:41.408 --> 00:05:43.677 align:middle line:-2
如何将音频设置为
适用于CarPlay车载系统

00:05:44.077 --> 00:05:46.246 align:middle line:-2
还有我们在iOS 12中
所做的性能改善和优化

00:05:46.313 --> 00:05:50.050 align:middle line:-1
以及一些最佳范例

00:05:50.117 --> 00:05:52.019 align:middle line:-1
还有一些常见场景

00:05:52.286 --> 00:05:54.288 align:middle line:-2
当把你的音频app
开发为CarPlay车载app时

00:05:55.756 --> 00:05:58.759 align:middle line:-1
现在驾车和音乐是息息相关的

00:05:58.825 --> 00:06:03.197 align:middle line:-2
很明显 当你驾驶车辆时
你总想听你最喜欢的打击乐

00:05:58.825 --> 00:06:03.197 align:middle line:-2
很明显 当你驾驶车辆时
你总想听你最喜欢的打击乐

00:06:03.263 --> 00:06:06.667 align:middle line:-1
古典乐或甚至是一些播客片段

00:06:07.100 --> 00:06:09.670 align:middle line:-1
或收听收音机的最新新闻

00:06:10.671 --> 00:06:13.307 align:middle line:-2
我们想确保
如果你正在开发一款音频app

00:06:13.373 --> 00:06:16.276 align:middle line:-1
并且你希望给驾驶员提供最好的体验

00:06:17.211 --> 00:06:19.446 align:middle line:-1
现在为了说明这个问题 我想让你们

00:06:19.513 --> 00:06:21.515 align:middle line:-1
看一下我一直在做的一个小项目

00:06:21.849 --> 00:06:24.418 align:middle line:-1
它是一款小app 我觉得一定会很火

00:06:25.919 --> 00:06:27.454 align:middle line:-1
我的app叫做Srirocka

00:06:28.655 --> 00:06:31.625 align:middle line:-1
它主要结合了我最喜欢的两个功能：

00:06:31.959 --> 00:06:33.927 align:middle line:-1
最火的频道和最火的专辑

00:06:34.461 --> 00:06:39.099 align:middle line:-2
通过协同效应 当我们发布它以后
它一定会是App Store中

00:06:39.166 --> 00:06:40.033 align:middle line:-1
最受欢迎的音频app之一

00:06:41.301 --> 00:06:44.104 align:middle line:-2
现在Srirocka已是
功能完全的音频app了

00:06:44.438 --> 00:06:46.640 align:middle line:-2
但我们需要给它添加
CarPlay车载系统支持

00:06:46.707 --> 00:06:48.575 align:middle line:-1
那么让我来说明该如何做

00:06:50.577 --> 00:06:53.580 align:middle line:-2
就像Jonathan刚才提到的
CarPlay车载所使用的模板

00:06:53.647 --> 00:06:57.184 align:middle line:-2
会抽象剥离CarPlay车载中
所具备的一些不同的复杂性

00:06:57.251 --> 00:07:00.220 align:middle line:-1
比如输入方式和屏幕尺寸等等

00:06:57.251 --> 00:07:00.220 align:middle line:-1
比如输入方式和屏幕尺寸等等

00:07:00.521 --> 00:07:04.024 align:middle line:-2
因此你的音频app只需能在
CarPlay车载显示屏上

00:07:04.391 --> 00:07:07.027 align:middle line:-1
显示信息并提供最好的内容即可

00:07:07.528 --> 00:07:10.464 align:middle line:-1
这通常是通过表视图或标签来实现的

00:07:10.531 --> 00:07:12.633 align:middle line:-1
取决于你希望如何呈现你的数据

00:07:13.734 --> 00:07:17.137 align:middle line:-2
你需要关注的是向CarPlay
车载用户提交适当的内容

00:07:17.204 --> 00:07:19.239 align:middle line:-1
并且如果你已经在开发一款音频app

00:07:19.306 --> 00:07:22.242 align:middle line:-2
并且它使用的是现有的API
你可能已经非常熟悉了

00:07:22.809 --> 00:07:24.645 align:middle line:-1
那么让我们具体看一下

00:07:26.547 --> 00:07:28.782 align:middle line:-2
那么这是你要在
CarPlay车载系统中

00:07:28.849 --> 00:07:30.717 align:middle line:-1
发布app所需要了解的三个API

00:07:31.585 --> 00:07:34.621 align:middle line:-2
如果你想了解具体信息
可以参考去年的演讲

00:07:34.688 --> 00:07:37.157 align:middle line:-1
详细解释了每一个API

00:07:37.224 --> 00:07:39.893 align:middle line:-1
但我会大概介绍一下每一种API

00:07:40.727 --> 00:07:42.863 align:middle line:-2
要在CarPlay车载显示屏上
浏览内容

00:07:43.063 --> 00:07:45.265 align:middle line:-2
你需要使用
MPPlayableContent

00:07:45.499 --> 00:07:48.468 align:middle line:-2
MPPlayableContent
有一个数据源和一个委托

00:07:48.535 --> 00:07:51.772 align:middle line:-2
因此你或你的音频app
可以填充app的信息

00:07:51.839 --> 00:07:53.273 align:middle line:-1
在CarPlay车载显示屏上

00:07:53.440 --> 00:07:55.576 align:middle line:-1
并且委托会接收回调

00:07:55.642 --> 00:07:58.412 align:middle line:-2
无论何时当用户在CarPlay
车载显示屏上做出选择时

00:07:59.346 --> 00:08:01.782 align:middle line:-2
现在如果你已将
立即播放元数据设置为

00:07:59.346 --> 00:08:01.782 align:middle line:-2
现在如果你已将
立即播放元数据设置为

00:08:01.849 --> 00:08:03.483 align:middle line:-1
控制中心或锁定屏幕

00:08:03.550 --> 00:08:06.253 align:middle line:-2
或你正在现有的音频app中
开发此功能

00:08:06.520 --> 00:08:08.555 align:middle line:-1
那么你一定已经很熟悉这两个API

00:08:10.090 --> 00:08:12.659 align:middle line:-2
MPNowPlayingInfo
中心允许你

00:08:12.726 --> 00:08:17.331 align:middle line:-2
填充立即播放元数据及其它元素
比如标题和专辑名称等等

00:08:17.397 --> 00:08:20.334 align:middle line:-2
在CarPlay车载系统的
立即播放屏幕上

00:08:20.400 --> 00:08:23.737 align:middle line:-2
以及控制中心和锁定屏幕
如果你已经这么做了

00:08:24.438 --> 00:08:28.175 align:middle line:-2
MPRemoteCommandCenter
允许你的app响应远程命令事件

00:08:28.509 --> 00:08:31.111 align:middle line:-1
比如播放命令、下一曲等等

00:08:32.111 --> 00:08:35.716 align:middle line:-2
我们希望让CarPlay车载app
拥有流畅的立即播放体验

00:08:35.782 --> 00:08:37.751 align:middle line:-2
现在让我们看看
这些如何在代码中实现

00:08:39.086 --> 00:08:40.419 align:middle line:-1
当打开Srirocka后

00:08:40.486 --> 00:08:42.188 align:middle line:-1
我要把Srirocka当个例子

00:08:42.556 --> 00:08:45.559 align:middle line:-2
这是支持CarPlay车载
音频app所需要的最少操作

00:08:45.993 --> 00:08:48.629 align:middle line:-2
Srirocka会提供一个数据源
和一个委托

00:08:49.029 --> 00:08:52.833 align:middle line:-2
给MPPlayableContentManager
因此Srirocka可以提供信息

00:08:52.900 --> 00:08:56.236 align:middle line:-2
到CarPlay车载显示屏
并在绝对必要时做出响应

00:08:57.437 --> 00:09:02.509 align:middle line:-2
接下来我会设置NowPlayingInfoCenter
并让MPNowPlayingInfoCenter了解

00:08:57.437 --> 00:09:02.509 align:middle line:-2
接下来我会设置NowPlayingInfoCenter
并让MPNowPlayingInfoCenter了解

00:09:02.576 --> 00:09:05.045 align:middle line:-1
我的app将提供立即播放元数据

00:09:05.112 --> 00:09:06.647 align:middle line:-1
当它成为立即播放app时

00:09:07.781 --> 00:09:10.851 align:middle line:-2
最后我会响应
MPRemoteCommandCenter事件

00:09:10.918 --> 00:09:14.888 align:middle line:-2
特别注意的是在本例中只需
一个播放命令 当Srirocka

00:09:14.955 --> 00:09:17.624 align:middle line:-2
成为立即播放app时
它会响应这些事件

00:09:18.892 --> 00:09:22.996 align:middle line:-2
我们可以在此看到CarPlay
车载系统所需要的那个API

00:09:23.063 --> 00:09:24.398 align:middle line:-1
就是MPPlayableContent

00:09:24.898 --> 00:09:28.569 align:middle line:-2
对于iOS 12 我们针对如何
更好优化这个API进行了深刻审视

00:09:28.969 --> 00:09:32.906 align:middle line:-2
我们可以安全地说在iOS 12中
我们重新灌录了MPPlayableContent

00:09:32.973 --> 00:09:39.046 align:middle line:-2
（重新灌录
MPPLAYABLECONTENT）

00:09:39.112 --> 00:09:43.617 align:middle line:-2
我们深度分析了MPPlayableContent
并且我们改善了它的性能

00:09:43.684 --> 00:09:46.186 align:middle line:-2
在如何调取数据源
和如何调用委托方面

00:09:47.054 --> 00:09:50.257 align:middle line:-2
你不需要修改当前音频app
在CarPlay车载系统中的实施

00:09:50.624 --> 00:09:53.927 align:middle line:-2
我们加速了启动过程
并提供更流畅的动画

00:09:53.994 --> 00:09:56.396 align:middle line:-2
无论何时当CarPlay
车载显示屏上的内容发生变更时

00:09:57.331 --> 00:10:00.067 align:middle line:-1
我们还向你的app提供更好的通讯

00:09:57.331 --> 00:10:00.067 align:middle line:-1
我们还向你的app提供更好的通讯

00:10:00.434 --> 00:10:02.669 align:middle line:-1
以预估用户可能希望播放什么内容

00:10:02.736 --> 00:10:04.505 align:middle line:-2
或在CarPlay车载显示屏上
想要浏览什么内容

00:10:05.639 --> 00:10:08.175 align:middle line:-2
现在你有更大的空间
来改善你的音频app

00:10:08.242 --> 00:10:09.643 align:middle line:-1
让我们看看该如何实现

00:10:09.710 --> 00:10:13.247 align:middle line:-2
首先要查看
reloadData的实施

00:10:13.313 --> 00:10:15.082 align:middle line:-2
这是MPPlayableContent中的
一个调用

00:10:15.148 --> 00:10:18.285 align:middle line:-2
它会了解如何为你的音频app
进行更好优化

00:10:19.186 --> 00:10:22.589 align:middle line:-2
我们发现你其实
应该只调用reloadData

00:10:22.656 --> 00:10:23.957 align:middle line:-1
当绝对必要时

00:10:24.725 --> 00:10:26.793 align:middle line:-1
它的功能是拆解

00:10:26.860 --> 00:10:29.696 align:middle line:-2
整个app的层级
在CarPlay车载显示器上

00:10:29.763 --> 00:10:32.799 align:middle line:-2
并请求你的音频app
再次进行重新构建

00:10:32.866 --> 00:10:34.801 align:middle line:-1
这可能是一个非常昂贵的操作

00:10:34.868 --> 00:10:36.537 align:middle line:-1
让你app的响应性变得不那么强

00:10:37.771 --> 00:10:40.707 align:middle line:-1
相反 如果你只需要更新一些内容

00:10:40.774 --> 00:10:44.711 align:middle line:-2
你应该把它们一起打包到一个
beginUpdates和一个endUpdates中

00:10:44.778 --> 00:10:47.047 align:middle line:-1
从而可以适当地更新内容

00:10:48.348 --> 00:10:51.685 align:middle line:-2
现在MPPlayableContent
所拥有的调用

00:10:51.752 --> 00:10:55.022 align:middle line:-2
是异步操作
当我们向你的app请求数据时

00:10:55.422 --> 00:10:57.791 align:middle line:-1
因此 需要在你app的某个位置

00:10:57.858 --> 00:11:01.328 align:middle line:-1
保存内部陈述或信息缓存

00:10:57.858 --> 00:11:01.328 align:middle line:-1
保存内部陈述或信息缓存

00:11:01.395 --> 00:11:03.530 align:middle line:-1
那么当我们请求你的内容信息时

00:11:03.597 --> 00:11:07.501 align:middle line:-2
你就能迅速给我们提供信息
并使你的app保持响应

00:11:08.902 --> 00:11:10.237 align:middle line:-1
接下来让我们讨论一些办法

00:11:10.304 --> 00:11:13.273 align:middle line:-2
关于进一步优化音频app
在CarPlay车载系统中的性能

00:11:14.441 --> 00:11:17.277 align:middle line:-1
Srirocka已经有一些实施了

00:11:17.344 --> 00:11:19.713 align:middle line:-1
并且是部分实施 用户需要决定

00:11:19.780 --> 00:11:22.549 align:middle line:-2
在Heating Habaneros
播放列表中做出选择

00:11:22.616 --> 00:11:25.452 align:middle line:-2
它是现在超级火
和最受欢迎的播放列表之一

00:11:26.253 --> 00:11:28.488 align:middle line:-1
但它的加载看起来似乎不顺畅

00:11:28.555 --> 00:11:30.591 align:middle line:-2
我们并不能完全确信
这里正在发生什么

00:11:30.657 --> 00:11:32.559 align:middle line:-1
CarPlay车载系统实际会超时

00:11:32.626 --> 00:11:34.728 align:middle line:-1
如果app不及时提供内容的话

00:11:34.928 --> 00:11:36.530 align:middle line:-1
因为它不会调用完成处理器

00:11:36.597 --> 00:11:38.665 align:middle line:-1
或就只是不会返回信息

00:11:39.600 --> 00:11:41.235 align:middle line:-1
手机上到底发生了什么？

00:11:42.236 --> 00:11:45.405 align:middle line:-2
CarPlay
车载系统用户通常会在

00:11:45.472 --> 00:11:48.775 align:middle line:-2
不能快速连接的区域
或屏幕锁定情况下驾驶汽车

00:11:49.076 --> 00:11:51.879 align:middle line:-2
绝大多数CarPlay车载用户
都会在屏幕锁定

00:11:51.945 --> 00:11:54.181 align:middle line:-2
且需解锁密码的情况下驾车
毕竟他们是在开车

00:11:55.415 --> 00:11:57.718 align:middle line:-1
如果你的app的数据保护政策

00:11:57.784 --> 00:12:00.087 align:middle line:-1
依赖于手机处于解锁状态

00:11:57.784 --> 00:12:00.087 align:middle line:-1
依赖于手机处于解锁状态

00:12:00.153 --> 00:12:02.122 align:middle line:-1
你将不能获取你app的信息

00:12:02.189 --> 00:12:04.224 align:middle line:-2
并且最终CarPlay车载
将会超时

00:12:04.691 --> 00:12:07.494 align:middle line:-2
因此如果你的数据
需要在手机处于解锁状态时获取

00:12:07.561 --> 00:12:10.631 align:middle line:-2
你就需要审查
你的app的数据过渡政策

00:12:12.966 --> 00:12:14.768 align:middle line:-1
另一个问题是…

00:12:16.170 --> 00:12:19.339 align:middle line:-2
你或CarPlay车载用户
可能会在

00:12:19.406 --> 00:12:21.475 align:middle line:-1
很少或没有蜂窝网络活动的区域驾驶

00:12:22.409 --> 00:12:26.246 align:middle line:-2
驾驶员们会开车去任何地方
从乡村公路到农村地区

00:12:26.313 --> 00:12:27.314 align:middle line:-1
再到大城市

00:12:27.381 --> 00:12:30.784 align:middle line:-1
这些是非常多变的区域

00:12:30.851 --> 00:12:33.620 align:middle line:-2
有不同的CarPlay车载系统
不同的数据服务

00:12:33.687 --> 00:12:35.722 align:middle line:-1
并且你需要测试

00:12:35.789 --> 00:12:37.724 align:middle line:-1
没有恒定WIFI网络连接的情况

00:12:39.059 --> 00:12:41.528 align:middle line:-2
现在Srirocka
也考虑到了这个情况

00:12:41.595 --> 00:12:44.364 align:middle line:-1
但它使用了一些非常先进的机器学习

00:12:44.698 --> 00:12:46.600 align:middle line:-1
来了解哪个是最火的频道

00:12:46.667 --> 00:12:48.836 align:middle line:-1
毕竟这一切都发生在移动设备上

00:12:48.902 --> 00:12:50.704 align:middle line:-1
因为隐私是非常重要的问题

00:12:50.938 --> 00:12:52.806 align:middle line:-1
这只需要一点时间去处理

00:12:53.240 --> 00:12:54.675 align:middle line:-1
嗯 在本例中发生了什么？

00:12:56.009 --> 00:12:59.079 align:middle line:-2
我们在indexPath有一个API
叫做beginLoadingChildItems

00:12:59.546 --> 00:13:01.148 align:middle line:-1
用于发起获取内容

00:12:59.546 --> 00:13:01.148 align:middle line:-1
用于发起获取内容

00:13:01.915 --> 00:13:03.350 align:middle line:-1
这个API会被调用

00:13:03.417 --> 00:13:06.987 align:middle line:-2
无论何时当你的任意一个索引路径
在CarPlay车载显示屏上可用

00:13:07.054 --> 00:13:10.858 align:middle line:-2
当用户在表单元格间滚动
或选择不同标签时

00:13:11.558 --> 00:13:14.561 align:middle line:-2
会调用beginLoadingChildItems
针对每一个

00:13:14.628 --> 00:13:15.896 align:middle line:-1
显示在显示屏上的独立索引路径

00:13:17.097 --> 00:13:20.033 align:middle line:-1
这样你的app就有机会开始加载

00:13:20.100 --> 00:13:21.568 align:middle line:-1
在用户实际选择内容之前

00:13:22.402 --> 00:13:24.571 align:middle line:-2
这是Srirocka中的
一段代码示例

00:13:24.872 --> 00:13:28.542 align:middle line:-2
当用户在CarPlay车载显示屏上
看到Heating Habaneros播放列表时

00:13:28.609 --> 00:13:32.579 align:middle line:-2
我们就开始处理
那个播放列表的代码示例

00:13:32.646 --> 00:13:35.816 align:middle line:-2
当用户做出选择时
所选内容正在路上

00:13:35.883 --> 00:13:37.284 align:middle line:-1
通过网络请求

00:13:37.351 --> 00:13:39.887 align:middle line:-1
或立即提供内容

00:13:41.455 --> 00:13:45.492 align:middle line:-1
那么让我们看一些app场景

00:13:45.726 --> 00:13:47.528 align:middle line:-2
可能会在你开发
CarPlay车载app时遇到

00:13:48.729 --> 00:13:53.333 align:middle line:-2
当你注销时 Srirocka
提供丰富的用户体验

00:13:53.400 --> 00:13:55.836 align:middle line:-1
这里非常清楚 有漂亮的排版

00:13:55.903 --> 00:14:00.541 align:middle line:-2
很棒的图形设计
用户是注销状态还是需要登录

00:13:55.903 --> 00:14:00.541 align:middle line:-2
很棒的图形设计
用户是注销状态还是需要登录

00:14:01.508 --> 00:14:03.043 align:middle line:-2
但这在CarPlay车载显示屏上
看起来是什么样的呢？

00:14:04.444 --> 00:14:06.914 align:middle line:-2
Srirocka实际上在注销时
不提供任何数据

00:14:06.980 --> 00:14:10.017 align:middle line:-1
这会导致一种非常坏的用户体验

00:14:10.350 --> 00:14:12.319 align:middle line:-1
用户实际上不知道发生了什么

00:14:12.619 --> 00:14:15.289 align:middle line:-1
也不能和你的app进行交互

00:14:16.657 --> 00:14:19.793 align:middle line:-1
你应该确保你提供某种类型的体验

00:14:19.860 --> 00:14:22.396 align:middle line:-2
从而用户起码可以
跟你的app进行交互

00:14:22.462 --> 00:14:23.864 align:middle line:-1
即使当用户注销时

00:14:24.164 --> 00:14:27.100 align:middle line:-1
营造了一种很好的音频app用户体验

00:14:28.535 --> 00:14:30.037 align:middle line:-1
那么总结一下

00:14:30.103 --> 00:14:32.673 align:middle line:-2
CarPlay车载音频app
拥有自己最棒的特色

00:14:33.640 --> 00:14:35.809 align:middle line:-2
MPPlayableContent
可以允许app

00:14:35.876 --> 00:14:38.579 align:middle line:-2
提供CarPlay车载显示屏模板
从而你的app

00:14:38.645 --> 00:14:42.049 align:middle line:-2
可以在CarPlay车载
显示器上提供很棒的用户体验

00:14:42.983 --> 00:14:44.518 align:middle line:-1
你该关注一些现实世界的场景

00:14:44.585 --> 00:14:47.354 align:middle line:-2
比如当你的app被注销时
或你的屏幕锁定时

00:14:47.654 --> 00:14:50.557 align:middle line:-2
你的app在CarPlay
车载系统中仍展示完美的功能性

00:14:51.725 --> 00:14:54.628 align:middle line:-2
在iOS 12中
我们做了一些很棒的优化

00:14:54.695 --> 00:14:57.831 align:middle line:-2
和性能改善 让你的app
在CarPlay中变得更好

00:14:58.131 --> 00:15:01.101 align:middle line:-2
你需要再次运行你的app
并了解是否还有性能改善的空间

00:14:58.131 --> 00:15:01.101 align:middle line:-2
你需要再次运行你的app
并了解是否还有性能改善的空间

00:15:01.168 --> 00:15:03.337 align:middle line:-1
从而让你的app变得越来越好

00:15:04.338 --> 00:15:06.940 align:middle line:-1
现在为了确保我们不跑题

00:15:07.007 --> 00:15:08.475 align:middle line:-1
我想邀请同事Mike上台

00:15:08.542 --> 00:15:10.944 align:middle line:-2
谈谈CarPlay
车载框架中的导航

00:15:11.144 --> 00:15:12.145 align:middle line:-1
谢谢

00:15:17.050 --> 00:15:18.485 align:middle line:-1
好的 谢谢Albert

00:15:19.319 --> 00:15:21.188 align:middle line:-1
今天我很高兴跟大家分享

00:15:21.255 --> 00:15:24.558 align:middle line:-2
如何向你的导航app中
添加CarPlay车载系统支持

00:15:24.958 --> 00:15:28.896 align:middle line:-2
导航是CarPlay车载系统
体验中的一大部分

00:15:29.363 --> 00:15:33.800 align:middle line:-2
你的用户会非常乐意
在汽车显示屏中看到他们喜欢的app

00:15:34.935 --> 00:15:36.803 align:middle line:-2
正如Jonathan
和Albert之前提到过的

00:15:37.237 --> 00:15:40.841 align:middle line:-2
我们针对之前的app类别
采取了以模板为基础的方法

00:15:42.276 --> 00:15:44.611 align:middle line:-1
你的app要能提供数据和元数据

00:15:44.678 --> 00:15:46.747 align:middle line:-1
这样iOS会显示在汽车显示屏上

00:15:46.813 --> 00:15:49.283 align:middle line:-1
并且以你app的名义管理这些交互

00:15:49.850 --> 00:15:51.818 align:middle line:-1
这用起来非常棒

00:15:52.586 --> 00:15:56.089 align:middle line:-1
但我们意识到导航app有一些不同

00:15:56.790 --> 00:15:59.693 align:middle line:-1
你的app有漂亮的地图

00:16:00.127 --> 00:16:02.863 align:middle line:-1
还有如此美好和身临其境的导航体验

00:16:03.363 --> 00:16:06.200 align:middle line:-2
并且你的用户会期待
在汽车屏幕上也看到同样的效果

00:16:07.201 --> 00:16:11.138 align:middle line:-2
在iOS 12中 我们引入了
CarPlay车载框架

00:16:11.805 --> 00:16:16.677 align:middle line:-2
CarPlay车载框架是你用来
创建良好交互体验的工具

00:16:16.743 --> 00:16:17.878 align:middle line:-1
在汽车显示屏上

00:16:18.478 --> 00:16:22.783 align:middle line:-2
它使用了你的app可以创建并使用的
固定模板对象集合

00:16:22.850 --> 00:16:26.854 align:middle line:-2
iOS将会把它转化为用户界面
并呈现在你app的顶部

00:16:27.688 --> 00:16:30.290 align:middle line:-2
通过这个以及你需要付出的
一点点努力

00:16:30.357 --> 00:16:33.293 align:middle line:-2
你的app就会支持
所有的CarPlay车载系统

00:16:34.228 --> 00:16:36.230 align:middle line:-2
让我们看看CarPlay
车载系统中的一款app

00:16:36.930 --> 00:16:40.200 align:middle line:-2
我们一直在创建自己的导航app
叫做Country Roads

00:16:40.467 --> 00:16:43.470 align:middle line:-2
它通过路线
把我们带到最喜爱的目的地

00:16:44.071 --> 00:16:45.939 align:middle line:-2
让我们看看它在
CarPlay车载系统上为何样

00:16:47.508 --> 00:16:50.844 align:middle line:-2
现在我们位于CarPlay车载主屏幕上
你可以看到Country Roads图标

00:16:50.911 --> 00:16:53.046 align:middle line:-1
就在这里 还有iOS上的其它app

00:16:53.947 --> 00:16:56.250 align:middle line:-2
当我们打开它时
你所面临的第一个元素

00:16:56.984 --> 00:16:58.352 align:middle line:-1
就是我们漂亮的地图碎片

00:16:59.186 --> 00:17:00.354 align:middle line:-2
当我们连接到
CarPlay车载系统时

00:16:59.186 --> 00:17:00.354 align:middle line:-2
当我们连接到
CarPlay车载系统时

00:17:00.420 --> 00:17:03.790 align:middle line:-2
导航app会打开一个窗口
用于在汽车显示屏上绘制内容

00:17:04.391 --> 00:17:06.993 align:middle line:-1
这个窗口就是你的画布

00:17:07.060 --> 00:17:11.298 align:middle line:-2
用于显示所有漂亮的非交互式地图
和导航相关内容

00:17:12.266 --> 00:17:16.002 align:middle line:-2
因为app使用了模板
iOS会把这些模板

00:17:16.069 --> 00:17:19.039 align:middle line:-2
转化为一个能在app顶部
呈现的用户界面

00:17:20.307 --> 00:17:21.541 align:middle line:-1
让我们看看代码

00:17:21.608 --> 00:17:24.411 align:middle line:-2
当你的app连接到
CarPlay车载系统时发生什么

00:17:25.712 --> 00:17:28.782 align:middle line:-2
你需要注意的第一件事
就是app的委托

00:17:28.849 --> 00:17:32.219 align:middle line:-2
要遵守CarPlay车载
app委托协议

00:17:32.486 --> 00:17:33.787 align:middle line:-1
CP app委托

00:17:35.122 --> 00:17:37.558 align:middle line:-2
那个协议中的一个函数是
在窗口中app

00:17:37.624 --> 00:17:40.093 align:middle line:-2
didConnectCar
InterfaceController

00:17:41.161 --> 00:17:44.164 align:middle line:-2
这个函数会给你的app
提供两个非常重要的对象

00:17:44.765 --> 00:17:47.801 align:middle line:-2
第一个是
CPInterfaceController实例

00:17:48.802 --> 00:17:52.773 align:middle line:-2
CPInterfaceController
是你和模板世界的连接以及你的app

00:17:52.840 --> 00:17:55.342 align:middle line:-2
将用什么来管理
汽车显示屏上显示什么内容

00:17:56.009 --> 00:17:58.111 align:middle line:-2
此外 你将会获得
我刚提到的那个窗口

00:17:58.178 --> 00:18:00.514 align:middle line:-1
就是你可以绘制全部地图内容的地方

00:17:58.178 --> 00:18:00.514 align:middle line:-1
就是你可以绘制全部地图内容的地方

00:18:01.849 --> 00:18:03.150 align:middle line:-1
你必须保持对全部两个对象的引用

00:18:03.217 --> 00:18:05.986 align:middle line:-2
在CarPlay车载会话的
整个过程中

00:18:07.254 --> 00:18:11.225 align:middle line:-2
接下来你要创建一个新的视图控制器
向那个窗口中填充内容

00:18:11.291 --> 00:18:13.026 align:middle line:-1
并将它分配到你的窗口浏览控制器

00:18:13.260 --> 00:18:15.195 align:middle line:-1
然后创建一个根模板

00:18:15.495 --> 00:18:17.064 align:middle line:-1
通过那个界面控制器对象

00:18:17.130 --> 00:18:19.066 align:middle line:-2
你可以在汽车显示屏上
setRootTemplate

00:18:20.234 --> 00:18:22.536 align:middle line:-1
让我们谈谈

00:18:22.603 --> 00:18:23.804 align:middle line:-2
在CarPlay车载框架中
可用的模板

00:18:24.238 --> 00:18:26.840 align:middle line:-1
让我们从一个你们已经看到

00:18:27.174 --> 00:18:29.943 align:middle line:-2
并且用户会花费大部分时间
的一个模板开始

00:18:30.344 --> 00:18:31.979 align:middle line:-1
那就是地图模板

00:18:32.980 --> 00:18:34.147 align:middle line:-1
地图模板与其它模板不同

00:18:34.214 --> 00:18:37.918 align:middle line:-1
因为它在app窗口中是透明的

00:18:38.552 --> 00:18:42.089 align:middle line:-1
那么你在那个窗口中所绘制的内容

00:18:42.155 --> 00:18:44.491 align:middle line:-2
将在由地图模板
所提供内容的底层显示

00:18:45.492 --> 00:18:48.195 align:middle line:-2
地图模板可以在几个
不同的地方进行配置

00:18:48.629 --> 00:18:50.564 align:middle line:-1
你可以在导航栏中放置一个按钮

00:18:51.098 --> 00:18:52.533 align:middle line:-1
你最多可以放置四个：

00:18:52.599 --> 00:18:55.602 align:middle line:-1
两个在导航栏 两个在路径栏

00:18:56.270 --> 00:19:02.075 align:middle line:-2
这些是CPBarButton实例
可以是文本或图像

00:18:56.270 --> 00:19:02.075 align:middle line:-2
这些是CPBarButton实例
可以是文本或图像

00:19:02.342 --> 00:19:05.245 align:middle line:-1
并且系统会自动调整其尺寸和样式

00:19:06.046 --> 00:19:08.916 align:middle line:-1
并没有任何预定义按钮行动的概念

00:19:08.982 --> 00:19:10.117 align:middle line:-1
在CarPlay车载框架中

00:19:10.517 --> 00:19:13.520 align:middle line:-2
但当你创建按钮时
你需要提供一个自定义行动处理器

00:19:13.921 --> 00:19:16.823 align:middle line:-1
当用户与汽车显示屏上的按钮交互时

00:19:17.224 --> 00:19:19.593 align:middle line:-2
将会在你的app中
调用你的自定义行动处理器

00:19:20.794 --> 00:19:24.665 align:middle line:-2
你还可以在地图窗口上方
放置最多四个按钮

00:19:25.098 --> 00:19:26.466 align:middle line:-1
这些是地图按钮

00:19:26.834 --> 00:19:28.435 align:middle line:-1
你可以通过图像创建

00:19:28.502 --> 00:19:31.805 align:middle line:-2
跟杆状按钮不同
这些按钮的样式并不是由系统定义的

00:19:33.006 --> 00:19:34.474 align:middle line:-1
地图模板还是

00:19:34.541 --> 00:19:38.045 align:middle line:-2
许多其它地图
和导航相关功能的集合体

00:19:38.478 --> 00:19:40.247 align:middle line:-1
比如拖动地图

00:19:41.148 --> 00:19:45.219 align:middle line:-2
通过导航警告向你的用户
提供重要的情境信息

00:19:45.686 --> 00:19:47.921 align:middle line:-1
当然 还有路线指引

00:19:48.755 --> 00:19:50.390 align:middle line:-1
我们稍微谈谈路线指引

00:19:50.824 --> 00:19:54.194 align:middle line:-1
让我们从拖动地图和导航警告开始谈

00:19:54.895 --> 00:19:56.964 align:middle line:-1
如果你的app支持拖动地图

00:19:57.464 --> 00:20:00.300 align:middle line:-2
我们要求你在地图模板上
呈现一个按钮

00:19:57.464 --> 00:20:00.300 align:middle line:-2
我们要求你在地图模板上
呈现一个按钮

00:20:00.767 --> 00:20:03.303 align:middle line:-2
无论在导航栏
或作为地图按钮都可以

00:20:04.071 --> 00:20:05.606 align:middle line:-1
只要能进入拖动模式就可以

00:20:06.373 --> 00:20:09.910 align:middle line:-2
当地图模板进入拖动模式时
它会显示四个方向按钮

00:20:09.977 --> 00:20:13.647 align:middle line:-2
你的用户可以与之交互
并会被转换到一个API中

00:20:13.714 --> 00:20:16.583 align:middle line:-2
你的app只需要了解
向哪个方向拖动地图

00:20:17.451 --> 00:20:20.320 align:middle line:-2
这个示例 展示CarPlay
车载框架如何抽象剥离

00:20:20.387 --> 00:20:23.223 align:middle line:-2
不同的CarPlay车载系统
所具备的大部分复杂性

00:20:23.891 --> 00:20:25.526 align:middle line:-1
这些按钮可以通过触摸进行交互

00:20:25.592 --> 00:20:29.096 align:middle line:-1
高延迟或低延迟触摸屏都可以

00:20:29.730 --> 00:20:33.133 align:middle line:-2
通过一个旋钮或触控板
选择其中一个按钮

00:20:33.734 --> 00:20:35.469 align:middle line:-1
此外在CarPlay车载系统中

00:20:35.536 --> 00:20:39.706 align:middle line:-1
如果旋钮也支持控制杆或定向移动

00:20:40.040 --> 00:20:42.676 align:middle line:-2
同样的移动也会
被转化到这个API中

00:20:42.910 --> 00:20:45.512 align:middle line:-1
你的app不需要担心它来自哪里

00:20:46.947 --> 00:20:50.350 align:middle line:-2
当你的用户在驾车时
你可能想要给他们呈现一些信息

00:20:50.417 --> 00:20:54.788 align:middle line:-2
比如前方道路关闭
或也许是有一条更好的路径选择

00:20:55.322 --> 00:20:57.558 align:middle line:-1
为此你可以使用导航警告

00:20:58.192 --> 00:21:00.627 align:middle line:-1
导航警告呈现在地图模板上

00:20:58.192 --> 00:21:00.627 align:middle line:-1
导航警告呈现在地图模板上

00:21:00.994 --> 00:21:04.831 align:middle line:-1
可以配置一个标题、副标题、图像

00:21:05.232 --> 00:21:07.901 align:middle line:-1
主行动和第二行动 如果适用的话

00:21:07.968 --> 00:21:11.638 align:middle line:-2
你还可以使用遣散区间
然后警告就会自动遣散

00:21:13.240 --> 00:21:16.343 align:middle line:-1
让我们看一下如何创建根模板的代码

00:21:16.677 --> 00:21:18.145 align:middle line:-1
让我们添加一个新按钮

00:21:18.478 --> 00:21:20.547 align:middle line:-2
在Country Roads上
它是迷路功能

00:21:22.416 --> 00:21:24.585 align:middle line:-1
因为这是创建我们根模板的函数

00:21:24.651 --> 00:21:28.388 align:middle line:-2
我们要做的第一件事就是创建
CPMapTemplate的实例

00:21:29.590 --> 00:21:32.392 align:middle line:-2
然后我们要针对迷路功能
创建一个新按钮

00:21:33.560 --> 00:21:35.996 align:middle line:-2
Country Roads
一个很棒的功能是我们的用户

00:21:36.063 --> 00:21:37.898 align:middle line:-1
可以搜索他们最喜欢的类别

00:21:38.732 --> 00:21:40.167 align:middle line:-1
我们也为此添加一个新按钮

00:21:40.234 --> 00:21:42.369 align:middle line:-2
让我们创建CPBarButton
类型是图像

00:21:42.870 --> 00:21:44.404 align:middle line:-1
在它的自定义行动处理器中

00:21:44.571 --> 00:21:47.908 align:middle line:-2
我们会调用一个我们自己的函数
会显示我们自己喜爱的类别

00:21:48.742 --> 00:21:51.345 align:middle line:-2
然后我们会取回一个图像
并把它分配给按钮

00:21:51.945 --> 00:21:54.047 align:middle line:-1
我们希望这个按钮出现在路径空间中

00:21:54.114 --> 00:21:55.482 align:middle line:-1
在交通按钮的旁边

00:21:55.916 --> 00:21:57.451 align:middle line:-1
我们把这两个按钮

00:21:57.518 --> 00:22:00.120 align:middle line:-2
分配到地图模板上的
路径导航栏按钮

00:21:57.518 --> 00:22:00.120 align:middle line:-2
分配到地图模板上的
路径导航栏按钮

00:22:00.554 --> 00:22:02.089 align:middle line:-1
然后返回我们的地图模板

00:22:03.090 --> 00:22:06.126 align:middle line:-2
很棒 现在我们在地图模板上
有了一个按钮 我们想要一种

00:22:06.193 --> 00:22:08.462 align:middle line:-2
可以向用户显示
他们喜爱的类别的方式

00:22:09.062 --> 00:22:11.398 align:middle line:-2
为此CarPlay车载框架
有一个很棒的模板

00:22:11.598 --> 00:22:12.933 align:middle line:-1
即网格模板

00:22:13.534 --> 00:22:18.438 align:middle line:-2
网格模板会在一个网格格式中
显示一个不超过八个按钮的数组

00:22:19.573 --> 00:22:21.375 align:middle line:-1
这些按钮出现在这里

00:22:21.708 --> 00:22:24.511 align:middle line:-1
并且可以配置一个图像和一个标题

00:22:25.779 --> 00:22:28.048 align:middle line:-1
网格模板还有一个导航栏

00:22:28.282 --> 00:22:30.751 align:middle line:-1
你可以放置同样的导航和路径按钮

00:22:31.185 --> 00:22:32.619 align:middle line:-1
但你还可创建一个网格模板

00:22:32.920 --> 00:22:35.355 align:middle line:-1
它的标题会出现在导航栏中

00:22:36.523 --> 00:22:39.393 align:middle line:-1
让我们跳过代码并创建一个网格模板

00:22:41.762 --> 00:22:44.665 align:middle line:-1
我们要从给网格按钮取回图像开始

00:22:45.365 --> 00:22:46.900 align:middle line:-1
我们要添加一个停车场按钮

00:22:48.635 --> 00:22:52.039 align:middle line:-2
然后我们要创建一个
CPGridButton实例 标题是停车场

00:22:52.472 --> 00:22:53.740 align:middle line:-1
图像是我们刚取回的图像

00:22:55.609 --> 00:22:58.212 align:middle line:-2
那么和其它按钮一样
我们把它分配给一个数组

00:22:58.445 --> 00:23:00.948 align:middle line:-2
然后创建一个
CPGridTemplate实例

00:22:58.445 --> 00:23:00.948 align:middle line:-2
然后创建一个
CPGridTemplate实例

00:23:01.215 --> 00:23:03.884 align:middle line:-2
标题是收藏夹
因为这些是我们喜欢的类别

00:23:04.384 --> 00:23:07.054 align:middle line:-2
还有我们在代码中创建的
网格按钮的数组

00:23:07.955 --> 00:23:10.490 align:middle line:-2
我们要从这里
返回到那个界面控制器对象

00:23:10.557 --> 00:23:11.458 align:middle line:-1
我刚才提到过

00:23:12.092 --> 00:23:14.761 align:middle line:-2
这就是我们如何在汽车显示屏上
管理所呈现的内容

00:23:15.395 --> 00:23:17.130 align:middle line:-1
我们会使用那个界面控制器

00:23:17.197 --> 00:23:20.267 align:middle line:-2
把这个新网格模板
放到汽车显示屏上去

00:23:22.169 --> 00:23:25.105 align:middle line:-2
现在我们有一种方法
可以搜索我们喜欢的类别

00:23:25.172 --> 00:23:26.240 align:middle line:-1
以及我们喜欢的内容

00:23:26.473 --> 00:23:28.842 align:middle line:-2
我们需要一种方式
来向用户显示搜索结果

00:23:29.376 --> 00:23:31.445 align:middle line:-1
为此我们可以使用一个列表模板

00:23:32.746 --> 00:23:35.349 align:middle line:-2
列表模板将显示
一个CPList项的列表

00:23:35.849 --> 00:23:39.319 align:middle line:-1
它们可以是文本、详细文本、图像

00:23:39.586 --> 00:23:40.787 align:middle line:-1
和披露指示器

00:23:41.355 --> 00:23:42.923 align:middle line:-1
你可以提供多个节段

00:23:42.990 --> 00:23:45.592 align:middle line:-2
你还可以有一个导航栏
你可以在那里提供一个标题

00:23:45.659 --> 00:23:47.594 align:middle line:-1
以及同样的导航和路径按钮

00:23:48.228 --> 00:23:50.063 align:middle line:-2
CarPlay车载框架的
一个很棒的功能是

00:23:50.130 --> 00:23:53.667 align:middle line:-2
如果适用
它会在侧面显示一个很棒的滚动条

00:23:53.734 --> 00:23:56.837 align:middle line:-2
可以帮助你的用户
在驾车时翻页浏览搜索结果

00:23:57.971 --> 00:23:59.439 align:middle line:-1
让我们创建一个列表模板

00:24:01.008 --> 00:24:02.376 align:middle line:-1
我们要做的第一件事

00:24:02.709 --> 00:24:05.412 align:middle line:-1
就是把我们自己的搜索结果的数组

00:24:05.479 --> 00:24:08.949 align:middle line:-2
转化到一个
CPListItems数组中

00:24:09.349 --> 00:24:10.317 align:middle line:-1
我们可以通过

00:24:10.384 --> 00:24:12.586 align:middle line:-2
在我们的搜索结果类中
使用一些属性完成

00:24:14.588 --> 00:24:17.524 align:middle line:-2
然后我们初始化一个新的
CPListTemplate

00:24:18.058 --> 00:24:22.262 align:middle line:-2
将这些项作为一个节段
分配一个停车场的标题

00:24:22.563 --> 00:24:25.432 align:middle line:-2
也可以分配一个委托
来管理用户的交互

00:24:26.233 --> 00:24:28.035 align:middle line:-1
我们要使用界面控制器

00:24:28.101 --> 00:24:30.170 align:middle line:-1
把我们的新模板放到汽车显示屏上

00:24:31.505 --> 00:24:33.841 align:middle line:-2
当用户在屏幕上
与其中一个项进行交互时

00:24:35.609 --> 00:24:37.311 align:middle line:-2
listTemplate
didSelect项

00:24:37.377 --> 00:24:40.147 align:middle line:-2
完成处理器
将会在你的列表模板委托上被调用

00:24:41.648 --> 00:24:44.451 align:middle line:-2
在CarPlay车载框架中
还有一些其他项可用

00:24:44.518 --> 00:24:45.652 align:middle line:-1
我想要快速地提一下

00:24:47.120 --> 00:24:51.458 align:middle line:-2
第一个是关于CarPlay
车载系统可以如何复杂

00:24:51.525 --> 00:24:54.695 align:middle line:-2
以及CarPlay车载框架如何
帮你不要太过担心的一个例子

00:24:55.762 --> 00:24:58.365 align:middle line:-1
我们现在看的是搜索模板

00:24:58.432 --> 00:25:01.869 align:middle line:-2
它是CarPlay车载框架中
的模板 呈现一个触控屏键盘

00:24:58.432 --> 00:25:01.869 align:middle line:-2
它是CarPlay车载框架中
的模板 呈现一个触控屏键盘

00:25:02.536 --> 00:25:05.138 align:middle line:-2
但我们了解到
并不是所有CarPlay车载系统

00:25:05.205 --> 00:25:06.139 align:middle line:-1
都有一个触控屏

00:25:06.707 --> 00:25:10.244 align:middle line:-2
很多都只有一个旋钮或触控板
用于用户交互

00:25:10.878 --> 00:25:12.546 align:middle line:-1
在那些系统中 如果适用

00:25:12.880 --> 00:25:15.749 align:middle line:-2
CarPlay车载框架
会显示一个线性样式的键盘

00:25:16.650 --> 00:25:19.753 align:middle line:-2
当然 对于那些
不支持字母识别的触控板来说

00:25:20.187 --> 00:25:22.089 align:middle line:-1
通过同样的搜索模板API

00:25:22.356 --> 00:25:25.726 align:middle line:-1
你的app将免费接收所键入的文字

00:25:27.261 --> 00:25:28.629 align:middle line:-1
你可能还想向用户呈现信息

00:25:28.695 --> 00:25:31.932 align:middle line:-1
以一种需要引起用户更多专注的方式

00:25:32.466 --> 00:25:35.936 align:middle line:-2
为此你可在ActionSheetStyle中
呈现CPAlert

00:25:36.436 --> 00:25:38.972 align:middle line:-1
或呈现真正需要用户注意的信息

00:25:39.039 --> 00:25:41.108 align:middle line:-1
你可以使用全屏模板

00:25:42.576 --> 00:25:46.547 align:middle line:-1
最后 因为语音是app中的一大部分

00:25:47.247 --> 00:25:50.584 align:middle line:-2
我们提供了一个能帮助你
管理语音控件的模板

00:25:51.451 --> 00:25:53.353 align:middle line:-1
我想邀请Jonathan返回舞台

00:25:53.420 --> 00:25:55.455 align:middle line:-2
给大家演示
Country Roads app

00:25:55.522 --> 00:25:56.356 align:middle line:-1
Jonathan

00:26:01.828 --> 00:26:02.829 align:middle line:-1
谢谢Mike

00:26:03.197 --> 00:26:05.632 align:middle line:-2
让我们快速看一下
Country Roads

00:26:11.805 --> 00:26:14.641 align:middle line:-2
这是一个CarPlay车载模拟器
它包含Xcode

00:26:15.475 --> 00:26:17.678 align:middle line:-2
让我们从CarPlay
车载主屏幕开始

00:26:17.744 --> 00:26:21.114 align:middle line:-2
我们可以看到我们为CarPlay
车载系统启用的自定义导航app

00:26:21.181 --> 00:26:23.050 align:middle line:-1
让我们轻触图标打开app

00:26:25.052 --> 00:26:27.554 align:middle line:-2
当我们的app打开后
我们是从地图模板开始

00:26:27.955 --> 00:26:31.358 align:middle line:-2
app展示了 Mike刚提到
的内容 它是全透明的

00:26:31.425 --> 00:26:34.561 align:middle line:-2
并且它允许app的漂亮地图
进行尺寸调整从而完整显示

00:26:35.095 --> 00:26:36.864 align:middle line:-1
这幅地图太出色了

00:26:38.165 --> 00:26:39.967 align:middle line:-2
在这幅地图上
我有一些基础控件

00:26:40.767 --> 00:26:43.670 align:middle line:-1
比如用ECP地图按钮进行缩放

00:26:46.039 --> 00:26:49.343 align:middle line:-2
我还可以用这个拖动按钮
切换拖动模式

00:26:52.679 --> 00:26:56.283 align:middle line:-2
全部这些按钮都是简单的
可配置的模板对象

00:26:56.483 --> 00:27:00.020 align:middle line:-2
CarPlay车载系统会告诉app
当用户与某个按钮发生交互时

00:26:56.483 --> 00:27:00.020 align:middle line:-2
CarPlay车载系统会告诉app
当用户与某个按钮发生交互时

00:27:00.220 --> 00:27:04.658 align:middle line:-2
并且app可以进行缩放或采取
其它适当的行动来进行响应

00:27:05.826 --> 00:27:07.895 align:middle line:-2
Mike刚添加了
一个新的收藏夹按钮

00:27:07.961 --> 00:27:10.797 align:middle line:-1
它显示在路径一侧的导航栏上

00:27:11.465 --> 00:27:16.436 align:middle line:-2
当轻触它时 我们的app就会创建
配置并发布一个网格模板

00:27:16.737 --> 00:27:19.806 align:middle line:-2
可以让我们导航到
某个非常重要的目的地

00:27:20.507 --> 00:27:25.679 align:middle line:-2
如果我们选择停车场 app就会
创建、配置并发布一个列表模板

00:27:26.280 --> 00:27:29.349 align:middle line:-1
我们可以看到周围停车场的搜索结果

00:27:29.917 --> 00:27:33.220 align:middle line:-2
稍后再谈Country Roads
现在让我们请Mike回到舞台

00:27:40.694 --> 00:27:41.962 align:middle line:-1
好的 谢谢Jonathan

00:27:43.864 --> 00:27:45.899 align:middle line:-1
让我们谈谈

00:27:45.966 --> 00:27:48.468 align:middle line:-2
你的app向正在驾车的用户
提供的最重要的功能之一

00:27:49.002 --> 00:27:51.305 align:middle line:-1
那当然是路线指引

00:27:52.039 --> 00:27:55.976 align:middle line:-1
让我们根据用户在开始导航会话时

00:27:56.410 --> 00:27:58.212 align:middle line:-1
可能会看到的典型流程来了解一下

00:27:59.513 --> 00:28:01.715 align:middle line:-1
他们所需要的第一个要素就是目的地

00:27:59.513 --> 00:28:01.715 align:middle line:-1
他们所需要的第一个要素就是目的地

00:28:02.449 --> 00:28:06.053 align:middle line:-2
这可能是由你的app
通过导航警告所呈现的地点

00:28:06.753 --> 00:28:07.988 align:middle line:-1
或者也许他们通过搜索

00:28:08.055 --> 00:28:09.957 align:middle line:-1
所发现的想要去的目的地

00:28:11.158 --> 00:28:14.361 align:middle line:-2
他们可能想预览路线
并查看相关重要信息

00:28:14.428 --> 00:28:16.797 align:middle line:-1
比如开车到那儿需要多长时间

00:28:16.864 --> 00:28:18.699 align:middle line:-1
以及预计到达时间

00:28:19.600 --> 00:28:22.603 align:middle line:-1
如果他们有多重路线可以选择

00:28:22.903 --> 00:28:25.005 align:middle line:-1
他们很可能想要预览每一种路线

00:28:25.072 --> 00:28:26.840 align:middle line:-1
并选择最适合他们的路线

00:28:28.408 --> 00:28:29.610 align:middle line:-1
他们选择其中一条路线

00:28:29.676 --> 00:28:30.777 align:middle line:-1
并开始导航

00:28:31.378 --> 00:28:35.649 align:middle line:-1
然后你的app就向用户提供路线更新

00:28:36.717 --> 00:28:40.387 align:middle line:-1
最终他们到达目的地或取消导航

00:28:41.388 --> 00:28:44.157 align:middle line:-1
让我们看看如何完成同样的流程

00:28:44.224 --> 00:28:45.659 align:middle line:-1
通过使用CarPlay车载框架

00:28:47.060 --> 00:28:49.129 align:middle line:-1
让我们先谈谈路线预览

00:28:49.997 --> 00:28:54.434 align:middle line:-2
你的app要提供数据
以用户可以查看

00:28:55.035 --> 00:28:58.539 align:middle line:-2
他们即将进行的旅程的
全部重要细节的方式

00:28:59.173 --> 00:29:02.042 align:middle line:-1
你可以提供目的地名称

00:28:59.173 --> 00:29:02.042 align:middle line:-1
你可以提供目的地名称

00:29:02.109 --> 00:29:05.179 align:middle line:-1
与路线有关的信息 比如建议性通知

00:29:05.946 --> 00:29:07.047 align:middle line:-1
还可以提供预计时间

00:29:07.114 --> 00:29:08.815 align:middle line:-1
让他们了解他们何时会到达目的地

00:29:09.650 --> 00:29:12.419 align:middle line:-2
并且如果旅程有多重路线选择
CarPlay车载框架

00:29:12.486 --> 00:29:14.855 align:middle line:-1
会自动显示一个更多路线按钮

00:29:15.756 --> 00:29:19.092 align:middle line:-2
那会允许你的用户
在不同的路线之间切换

00:29:19.593 --> 00:29:21.161 align:middle line:-1
并选择他们所需要的路线

00:29:22.296 --> 00:29:25.766 align:middle line:-2
让我们看看在CarPlay
车载框架路线预览中

00:29:25.832 --> 00:29:28.569 align:middle line:-1
创建体验所需要了解的类和方法

00:29:30.170 --> 00:29:31.672 align:middle line:-1
第一个是CPTrip

00:29:32.105 --> 00:29:35.809 align:middle line:-1
这是给用户显示即将进行的旅程

00:29:36.243 --> 00:29:38.579 align:middle line:-1
它包括一些项 比如起点和目的地

00:29:38.979 --> 00:29:42.816 align:middle line:-2
以及多个CPRouteChoice 每一条
他们可能选择的路线都有一个CPRouteChoice

00:29:44.151 --> 00:29:47.988 align:middle line:-2
CPTravelEstimates
描述了整个旅程需要多长时间

00:29:48.055 --> 00:29:49.690 align:middle line:-1
以及个人操作

00:29:50.724 --> 00:29:54.928 align:middle line:-2
在你的地图模板上
当你准备给用户显示路径预览时

00:29:55.262 --> 00:29:57.898 align:middle line:-2
你需要在地图模板上调用
ShowTripPreviews

00:29:57.965 --> 00:29:59.700 align:middle line:-2
它要带有你所创建的
CPTrip对象

00:30:00.734 --> 00:30:03.003 align:middle line:-1
因为用户要在单一路线之间切换

00:30:03.136 --> 00:30:05.105 align:middle line:-1
那么你就有机会更新

00:30:05.172 --> 00:30:06.940 align:middle line:-1
在窗口中所显示的内容了

00:30:07.608 --> 00:30:11.311 align:middle line:-2
将会调用使用routeChoice的
MapTemplate selectedPreviewFor

00:30:11.378 --> 00:30:13.180 align:middle line:-1
并且你可以修改所显示的内容

00:30:14.248 --> 00:30:18.285 align:middle line:-1
这是一个了解地图模板

00:30:18.352 --> 00:30:20.254 align:middle line:-2
如何绘制
在窗口中所显示的内容的好机会

00:30:21.321 --> 00:30:23.457 align:middle line:-1
你要确保你所绘制的内容

00:30:23.524 --> 00:30:25.225 align:middle line:-1
对你的用户可见

00:30:26.126 --> 00:30:29.129 align:middle line:-2
为此我们需要利用现有的
safeArea API

00:30:29.196 --> 00:30:30.464 align:middle line:-1
你可能已经很熟悉它了

00:30:31.298 --> 00:30:34.968 align:middle line:-2
随着地图模板中的内容变更
它会更新

00:30:35.035 --> 00:30:39.039 align:middle line:-2
你窗口中的safeArea插入
从而让你了解哪里可以进行安全绘制

00:30:39.573 --> 00:30:42.276 align:middle line:-2
你只需要实施
safeAreaInsetsDidChange

00:30:42.342 --> 00:30:43.977 align:middle line:-1
并紧密关注那些插入

00:30:44.044 --> 00:30:46.146 align:middle line:-2
并确保你的内容
是在它们内部进行绘制的

00:30:47.748 --> 00:30:49.416 align:middle line:-1
现在让我们谈谈路线指引

00:30:50.484 --> 00:30:54.621 align:middle line:-2
与预览相似 你的app可以向
CarPlay车载框架提供数据

00:30:54.988 --> 00:30:57.257 align:middle line:-1
并让它绘制路线指引卡片

00:30:57.758 --> 00:31:00.794 align:middle line:-2
卡片内填充有信息
比如代表移动方向的图片

00:30:57.758 --> 00:31:00.794 align:middle line:-2
卡片内填充有信息
比如代表移动方向的图片

00:31:01.161 --> 00:31:03.230 align:middle line:-1
你离目的地还有多远

00:31:04.198 --> 00:31:06.800 align:middle line:-1
当然了 还有如何到达目的地的指示

00:31:06.867 --> 00:31:08.802 align:middle line:-1
比如左拐或继续直行

00:31:11.138 --> 00:31:13.173 align:middle line:-1
让我们看看你需要了解哪些信息

00:31:13.240 --> 00:31:16.410 align:middle line:-2
从而在CarPlay车载框架中
使用路线指引

00:31:19.346 --> 00:31:21.515 align:middle line:-2
CPMapTemplateDelegate
和mapTemplate

00:31:21.849 --> 00:31:23.217 align:middle line:-1
你可以从这两个地方开始

00:31:23.684 --> 00:31:25.986 align:middle line:-2
首先 当用户从路线预览中
点击那个开始按钮时

00:31:26.653 --> 00:31:29.423 align:middle line:-2
会在模板委托中调用使用了
routeChoice的mapTemplate

00:31:29.489 --> 00:31:30.591 align:middle line:-1
startedTrip

00:31:31.191 --> 00:31:35.062 align:middle line:-1
这是你要开始导航到目的地的指示

00:31:35.128 --> 00:31:37.097 align:middle line:-1
通过用户所选择的路线

00:31:38.232 --> 00:31:41.502 align:middle line:-2
这也是何时开始在app中
进行导航的时间

00:31:41.568 --> 00:31:44.304 align:middle line:-2
亦开始向CarPlay车载框架
提供路线更新的时间

00:31:45.138 --> 00:31:46.006 align:middle line:-2
你需要调用
startNavigationSession

00:31:46.073 --> 00:31:49.209 align:middle line:-1
在你的地图模板上

00:31:49.576 --> 00:31:52.880 align:middle line:-2
这将给你提供
CPNavigationSession实例

00:31:53.547 --> 00:31:56.116 align:middle line:-2
这就是你要管理
即将发生的移动方向的地方

00:31:58.218 --> 00:32:00.621 align:middle line:-2
使用CPNavigationSession
和CPManeuver

00:31:58.218 --> 00:32:00.621 align:middle line:-2
使用CPNavigationSession
和CPManeuver

00:32:00.954 --> 00:32:02.422 align:middle line:-1
你可以设置即将发生的移动方向

00:32:02.789 --> 00:32:05.492 align:middle line:-1
并且系统会自动显示一个主方向

00:32:05.893 --> 00:32:09.196 align:middle line:-2
如果你提供了第二个移动方向
它会把第二个移动方向

00:32:09.263 --> 00:32:10.264 align:middle line:-1
显示在路线指引卡上

00:32:11.465 --> 00:32:13.901 align:middle line:-2
然后你就可以
使用移动方向的更新预估

00:32:14.134 --> 00:32:17.437 align:middle line:-2
来持续更新
在路线指引卡中所显示的内容

00:32:17.504 --> 00:32:20.440 align:middle line:-2
并让你的用户了解
当他们接近所指示的移动方向时

00:32:21.308 --> 00:32:24.178 align:middle line:-1
你的app很可能会重放音频提示

00:32:24.244 --> 00:32:25.412 align:middle line:-1
从而让用户了解信息

00:32:25.979 --> 00:32:28.282 align:middle line:-1
为此你需要确保你的音频会话

00:32:28.348 --> 00:32:30.284 align:middle line:-2
已针对CarPlay车载系统
做了适当的配置

00:32:31.118 --> 00:32:34.922 align:middle line:-2
我们必须要记住 当我们在车里时
你的用户可能正在收听

00:32:34.988 --> 00:32:37.824 align:middle line:-2
来自iOS系统的音频源
或者他们可能正在收听

00:32:37.891 --> 00:32:40.194 align:middle line:-2
来自汽车系统的音频源
比如FM收音机

00:32:40.994 --> 00:32:42.729 align:middle line:-2
要用
AVAudioSessionModeVoicePrompt

00:32:42.796 --> 00:32:44.831 align:middle line:-1
配置你的音频会话

00:32:45.232 --> 00:32:47.167 align:middle line:-1
因为这会让CarPlay车载系统

00:32:47.768 --> 00:32:50.103 align:middle line:-1
了解何时可以适当地躲避音频源

00:32:50.170 --> 00:32:51.605 align:middle line:-1
无论它来自哪里

00:32:51.672 --> 00:32:56.043 align:middle line:-2
你还可以用类别选项配置
你的会话 duckOthers

00:32:56.109 --> 00:32:58.111 align:middle line:-2
和interruptSpokenAudio
AndMixWithOthers

00:32:58.178 --> 00:33:02.149 align:middle line:-2
这将帮助确保你的音频
和其它iOS音频源能同时播放

00:32:58.178 --> 00:33:02.149 align:middle line:-2
这将帮助确保你的音频
和其它iOS音频源能同时播放

00:33:03.350 --> 00:33:07.454 align:middle line:-2
那么接下来会发生什么？
嗯 你的用户会继续驾驶

00:33:07.855 --> 00:33:11.225 align:middle line:-2
你想继续提供
更新的移动方向和预估方向

00:33:11.291 --> 00:33:13.861 align:middle line:-1
从而当他们需要时 帮助他们转弯

00:33:15.762 --> 00:33:17.397 align:middle line:-1
若他们突然离开现有路线会如何？

00:33:17.464 --> 00:33:20.634 align:middle line:-1
你可能要计算一条新路线

00:33:21.034 --> 00:33:22.236 align:middle line:-1
你可设置一个暂停原因

00:33:22.302 --> 00:33:24.505 align:middle line:-2
它会向用户显示一个
重新安排路径的状态

00:33:25.839 --> 00:33:29.209 align:middle line:-2
也许会有一条新路线
或现有路线上有事情发生

00:33:29.276 --> 00:33:32.412 align:middle line:-2
那么你可以利用导航警告
向他们呈现那个信息

00:33:32.479 --> 00:33:33.914 align:middle line:-1
就在地图模板上

00:33:35.048 --> 00:33:38.619 align:middle line:-2
最终他们会到达目的地
这多亏了你的app帮忙

00:33:39.553 --> 00:33:41.455 align:middle line:-2
我们谈了很多东西
关于你的app

00:33:41.522 --> 00:33:43.957 align:middle line:-2
在汽车显示屏上
处于打开状态时的样子

00:33:44.591 --> 00:33:48.495 align:middle line:-2
但我们知道CarPlay车载用户
经常在地图app和音频app之间切换

00:33:48.762 --> 00:33:51.431 align:middle line:-2
比如我们最喜欢的
音频app Srirocka

00:33:52.533 --> 00:33:53.967 align:middle line:-1
当app在后台时发生什么？

00:33:54.034 --> 00:33:56.703 align:middle line:-2
当你需要向用户
显示重要信息时会发生什么？

00:33:57.538 --> 00:34:01.708 align:middle line:-1
你可以提供横幅通知

00:33:57.538 --> 00:34:01.708 align:middle line:-1
你可以提供横幅通知

00:34:01.775 --> 00:34:03.410 align:middle line:-1
当你的app在后台时会显示

00:34:03.944 --> 00:34:08.415 align:middle line:-1
这适用于移动方向更新以及导航警告

00:34:09.949 --> 00:34:11.051 align:middle line:-1
在你的地图模板委托中

00:34:11.118 --> 00:34:13.387 align:middle line:-1
有三个方法可以实施

00:34:14.087 --> 00:34:17.090 align:middle line:-2
第一个是mapTemplate
ShouldShowNotificationFor移动方向

00:34:17.558 --> 00:34:20.860 align:middle line:-2
当你设置了新的移动方向
并且你的app处于后台时

00:34:21.328 --> 00:34:22.596 align:middle line:-1
系统就会调用这个方法

00:34:22.728 --> 00:34:26.934 align:middle line:-2
如果你返回真
系统会把那个移动方向转化成

00:34:27.000 --> 00:34:28.202 align:middle line:-1
一个横幅通知

00:34:29.335 --> 00:34:31.972 align:middle line:-2
如果你已经针对某个移动方向
呈现了横幅通知

00:34:32.039 --> 00:34:34.007 align:middle line:-1
你只需要简单更新旅行预估

00:34:34.274 --> 00:34:37.043 align:middle line:-2
带travelEstimates的mapTemplate
shouldUpdateNotificationFor

00:34:37.110 --> 00:34:37.945 align:middle line:-1
移动方向

00:34:38.011 --> 00:34:41.581 align:middle line:-2
将会被调用 从而允许你更新
在那个横幅中所显示的内容

00:34:41.982 --> 00:34:44.284 align:middle line:-1
那么 现在不需要一个新的通知

00:34:44.351 --> 00:34:46.920 align:middle line:-2
你可以简单地更新
已经显示在那里的内容

00:34:47.855 --> 00:34:52.092 align:middle line:-2
对于导航警告
你也可以利用它来显示那些信息

00:34:52.159 --> 00:34:53.060 align:middle line:-1
使用mapTemplate

00:34:53.126 --> 00:34:55.495 align:middle line:-2
shouldShowNotificationFor
navigationAlert

00:34:56.429 --> 00:34:59.933 align:middle line:-2
我想邀请Jonathan
再次上台来给大家演示

00:35:00.000 --> 00:35:01.835 align:middle line:-2
我们如何把
Country Roads app

00:35:01.902 --> 00:35:02.769 align:middle line:-1
与CarPlay车载框架集成

00:35:02.836 --> 00:35:06.106 align:middle line:-2
从而实现路线预览和路线指引
Jonathan

00:35:10.844 --> 00:35:11.678 align:middle line:-1
谢谢Mike

00:35:12.479 --> 00:35:15.482 align:middle line:-2
让我们快速了解一些代码
关于你的导航app如何

00:35:15.549 --> 00:35:19.086 align:middle line:-2
在CarPlay车载中提供导航
以Country Roads为例

00:35:20.754 --> 00:35:22.289 align:middle line:-1
当用户选择某个目的地后

00:35:22.756 --> 00:35:25.993 align:middle line:-1
我们会抓取那个地标并把当前位置

00:35:26.059 --> 00:35:30.264 align:middle line:-2
和目的地提交给我们的导航引擎
用于计算可选择的路线

00:35:31.365 --> 00:35:33.967 align:middle line:-2
为了达到演示目的
我们这里只有一条可选路线

00:35:34.168 --> 00:35:38.172 align:middle line:-2
但你的导航引擎可以提供
多个可供选择的路线选项

00:35:38.238 --> 00:35:39.106 align:middle line:-1
如果适用

00:35:39.306 --> 00:35:43.243 align:middle line:-2
此外 我们要包含一些额外的细节
来帮助用户做出知情决策

00:35:43.310 --> 00:35:44.178 align:middle line:-1
针对某一路线

00:35:44.811 --> 00:35:46.780 align:middle line:-1
我们要创建一个CPTrip并调用

00:35:46.847 --> 00:35:51.285 align:middle line:-2
showTripPreviews来告诉CarPlay
车载系统我们即将开始导航

00:35:51.852 --> 00:35:56.523 align:middle line:-2
最后我们要更新预估
从而向用户提供此次旅程的预计时间

00:35:57.024 --> 00:35:59.293 align:middle line:-1
让我们快速了解一下要如何提供

00:35:59.359 --> 00:36:00.928 align:middle line:-2
CarPlay车载系统导航
所需要的移动方向

00:35:59.359 --> 00:36:00.928 align:middle line:-2
CarPlay车载系统导航
所需要的移动方向

00:36:03.797 --> 00:36:07.100 align:middle line:-2
当我们的用户已经选择了一条路线
并开始导航后

00:36:07.301 --> 00:36:10.204 align:middle line:-2
我们首先要隐藏
用户刚才所浏览的路线预览

00:36:11.405 --> 00:36:14.107 align:middle line:-1
我们要告诉地图模板开始导航会话

00:36:14.341 --> 00:36:16.476 align:middle line:-1
并且我们可以把会话改为加载状态

00:36:16.543 --> 00:36:18.078 align:middle line:-1
当我们计算移动方向时

00:36:18.579 --> 00:36:22.683 align:middle line:-2
我们要从导航引擎中
创建一个CP移动方向对象的列表

00:36:23.150 --> 00:36:24.551 align:middle line:-1
最后但同样重要的是

00:36:24.618 --> 00:36:27.821 align:middle line:-1
我们会向导航会话提供第一个指示

00:36:27.888 --> 00:36:29.356 align:middle line:-1
我们现已准备好驾车出发了

00:36:29.423 --> 00:36:30.757 align:middle line:-1
在行动中查看一下具体情况

00:36:38.532 --> 00:36:42.769 align:middle line:-2
好的 让我们浏览一下
收藏夹列表并选择停车场

00:36:44.571 --> 00:36:47.975 align:middle line:-2
当我们轻触其中一个地点时
我们会看到app

00:36:48.041 --> 00:36:50.711 align:middle line:-2
弹回到地图模板
并显示一个路线指引卡

00:36:51.578 --> 00:36:54.848 align:middle line:-2
如果我们轻触这里的开始按钮
选择开始导航

00:36:55.215 --> 00:36:57.317 align:middle line:-1
我们会看到app进入导航模式

00:36:58.051 --> 00:37:02.089 align:middle line:-2
你的app还可以更新导航栏
如果有必要显示自定义按钮

00:36:58.051 --> 00:37:02.089 align:middle line:-2
你的app还可以更新导航栏
如果有必要显示自定义按钮

00:37:02.155 --> 00:37:05.926 align:middle line:-2
在导航模式
比如取消按钮或语音提示切换

00:37:06.360 --> 00:37:08.128 align:middle line:-1
看起来我们做得非常棒

00:37:09.296 --> 00:37:13.267 align:middle line:-2
当我们到达目的地后
我们的app就不再是导航模式

00:37:15.736 --> 00:37:17.771 align:middle line:-2
这就是CarPlay车载框架中的
地图

00:37:18.305 --> 00:37:21.308 align:middle line:-1
让我们回顾一下今天所讲的内容

00:37:22.109 --> 00:37:25.512 align:middle line:-2
我们演示了一些关于CarPlay
车载音频性能较大的改善

00:37:25.579 --> 00:37:28.549 align:middle line:-2
和优化 为了让你的用户
拥有更好的体验

00:37:29.249 --> 00:37:32.219 align:middle line:-1
我们引入了全新CarPlay框架

00:37:32.486 --> 00:37:34.821 align:middle line:-2
用于导航和指路app
在CarPlay车载系统中

00:37:35.522 --> 00:37:39.226 align:middle line:-2
你的app可以顺畅地
在不同屏幕和输入设备中使用

00:37:39.526 --> 00:37:42.996 align:middle line:-2
你是最棒的导航专家
并且你只需要做你最擅长的事：

00:37:43.263 --> 00:37:45.832 align:middle line:-1
在你漂亮的app中绘制漂亮的地图

00:37:46.300 --> 00:37:47.734 align:middle line:-1
我们会替你处理其余的事

00:37:48.402 --> 00:37:49.970 align:middle line:-1
你可以绘制你的地图模板

00:37:50.037 --> 00:37:52.773 align:middle line:-2
使用CPMapTemplate
和CPNavigationSession

00:37:52.840 --> 00:37:54.274 align:middle line:-1
来管理导航

00:37:54.341 --> 00:37:56.276 align:middle line:-1
并按照需要显示其它模板

00:37:56.343 --> 00:37:59.079 align:middle line:-1
用于呈现信息和处理用户交互

00:38:00.581 --> 00:38:03.750 align:middle line:-2
如果你有任何疑问
请到CarPlay车载工作室面谈

00:38:03.817 --> 00:38:07.454 align:middle line:-2
今天稍晚些时候
大概是上午11点到下午2点

00:38:07.921 --> 00:38:08.789 align:middle line:-1
你还可以浏览

00:38:08.856 --> 00:38:11.992 align:middle line:-2
developer.apple.com/carplay
获取更多信息

00:38:12.326 --> 00:38:16.196 align:middle line:-2
此外 你已经拥有了创建很棒的
CarPlay车载app所需的一切

00:38:16.363 --> 00:38:19.099 align:middle line:-1
我们非常期待看到你们所创建的app

00:38:19.166 --> 00:38:20.133 align:middle line:-1
非常感谢
