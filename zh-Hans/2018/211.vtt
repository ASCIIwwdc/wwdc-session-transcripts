WEBVTT

00:00:07.516 --> 00:00:16.500 A:middle
[ 音乐 ]

00:00:20.516 --> 00:00:28.996 A:middle
[ 掌声 ]

00:00:29.496 --> 00:00:30.396 A:middle
大家好

00:00:30.876 --> 00:00:32.566 A:middle
我的名字是 Ari Weinstein

00:00:32.566 --> 00:00:34.326 A:middle
很高兴来到这里

00:00:34.326 --> 00:00:35.766 A:middle
与 Willem Mattelaer 一起

00:00:35.766 --> 00:00:37.516 A:middle
向大家介绍 Siri 的捷径

00:00:38.106 --> 00:00:43.096 A:middle
两年前 我们发布了第一版 SiriKit

00:00:43.256 --> 00:00:44.966 A:middle
让你的 App 能

00:00:44.966 --> 00:00:46.566 A:middle
使用 Siri 的功能

00:00:46.566 --> 00:00:48.446 A:middle
它当时已经具备了

00:00:48.446 --> 00:00:50.046 A:middle
如发送信息

00:00:50.166 --> 00:00:51.586 A:middle
叫车 交易支付等

00:00:51.586 --> 00:00:52.356 A:middle
诸多细化功能

00:00:53.026 --> 00:00:55.116 A:middle
但我们知道

00:00:55.116 --> 00:00:57.096 A:middle
你想用 SiriKit 做更多的事情

00:00:57.096 --> 00:00:58.656 A:middle
这也是为什么今年我们会

00:00:58.656 --> 00:01:00.166 A:middle
如此兴奋地向大家介绍捷径

00:00:58.656 --> 00:01:00.166 A:middle
如此兴奋地向大家介绍捷径

00:01:01.506 --> 00:01:03.586 A:middle
捷径的核心思路

00:01:03.586 --> 00:01:05.066 A:middle
是让你可以把自己的 App 中

00:01:05.066 --> 00:01:06.996 A:middle
最关键的功能

00:01:06.996 --> 00:01:09.246 A:middle
与 Siri 接通

00:01:09.426 --> 00:01:11.226 A:middle
这样真的很好

00:01:11.226 --> 00:01:12.606 A:middle
因为这让人们可以

00:01:12.606 --> 00:01:14.636 A:middle
在新的场景以新的方式

00:01:14.636 --> 00:01:15.136 A:middle
来使用你的 App

00:01:15.596 --> 00:01:17.216 A:middle
这是一种

00:01:17.376 --> 00:01:18.406 A:middle
吸引用户的好方法

00:01:19.446 --> 00:01:22.246 A:middle
接通捷径

00:01:22.246 --> 00:01:24.266 A:middle
为用户使用你的 App

00:01:24.266 --> 00:01:25.616 A:middle
开启了无数种可能性

00:01:25.616 --> 00:01:27.306 A:middle
让我们一起看看可以使用

00:01:27.526 --> 00:01:30.436 A:middle
捷径的典型场景吧

00:01:30.926 --> 00:01:32.216 A:middle
捷径通过

00:01:32.216 --> 00:01:34.416 A:middle
展示你接下来想要做什么

00:01:34.416 --> 00:01:35.986 A:middle
把 “Siri 建议”带到了一个新的层次

00:01:35.986 --> 00:01:37.876 A:middle
不仅仅是打开你的 App

00:01:37.876 --> 00:01:39.816 A:middle
更能延伸到 App 内部的功能

00:01:39.816 --> 00:01:41.766 A:middle
并且 Siri 会在恰当的时机

00:01:41.766 --> 00:01:43.906 A:middle
在搜索界面中提供建议

00:01:45.366 --> 00:01:47.286 A:middle
Siri 还可以在 Apple Watch 上

00:01:47.286 --> 00:01:48.836 A:middle
建议捷径

00:01:48.836 --> 00:01:50.596 A:middle
你可以在你手腕上的 Siri 表盘

00:01:50.596 --> 00:01:51.496 A:middle
上直接使用它们

00:01:53.556 --> 00:01:55.166 A:middle
当 Siri 认为

00:01:55.166 --> 00:01:56.516 A:middle
应该使用某个捷径时

00:01:56.516 --> 00:01:58.286 A:middle
它就会在锁定屏幕上

00:01:58.286 --> 00:01:59.096 A:middle
显示建议

00:01:59.216 --> 00:02:01.026 A:middle
当你轻点一个捷径时

00:01:59.216 --> 00:02:01.026 A:middle
当你轻点一个捷径时

00:02:01.246 --> 00:02:02.776 A:middle
你直接在

00:02:02.976 --> 00:02:05.226 A:middle
锁定屏幕上的定制 UI 上

00:02:05.226 --> 00:02:07.266 A:middle
来使用它

00:02:07.356 --> 00:02:08.586 A:middle
你还可以把捷径添加到 Siri

00:02:08.626 --> 00:02:10.096 A:middle
这样你就可以

00:02:10.096 --> 00:02:11.876 A:middle
通过询问 Siri

00:02:11.876 --> 00:02:12.406 A:middle
来使用这些捷径

00:02:12.646 --> 00:02:14.316 A:middle
在 Siri 中 你会看到

00:02:14.316 --> 00:02:16.536 A:middle
与锁定屏幕和搜索界面中

00:02:16.536 --> 00:02:17.496 A:middle
相同的定制 UI

00:02:18.966 --> 00:02:21.706 A:middle
App 可以在 Siri 中提供

00:02:21.706 --> 00:02:23.566 A:middle
很好的语音体验

00:02:23.566 --> 00:02:26.086 A:middle
App 提供自定义的响应对话

00:02:26.296 --> 00:02:28.176 A:middle
而 Siri 会将其大声读出来

00:02:28.176 --> 00:02:30.976 A:middle
来告诉你一些事情

00:02:31.146 --> 00:02:33.746 A:middle
比如咖啡还有多久做好

00:02:34.476 --> 00:02:37.216 A:middle
当用户给 Siri 添加捷径时

00:02:37.216 --> 00:02:39.036 A:middle
他们要先选择一个

00:02:39.036 --> 00:02:41.056 A:middle
自定义的个人短语

00:02:41.396 --> 00:02:43.536 A:middle
这样用户就可以选择

00:02:43.536 --> 00:02:45.426 A:middle
对 Siri 说什么来启动捷径

00:02:45.846 --> 00:02:47.326 A:middle
作为一个开发者

00:02:47.326 --> 00:02:49.336 A:middle
你应该建议使用的短语

00:02:49.486 --> 00:02:51.736 A:middle
在这种情况下 建议是“咖啡时间”

00:02:52.226 --> 00:02:53.876 A:middle
一旦对 Siri 添加了一个捷径

00:02:53.946 --> 00:02:55.876 A:middle
这将在你所有

00:02:55.876 --> 00:02:58.686 A:middle
iOS 设备上

00:02:58.686 --> 00:03:01.686 A:middle
在 Apple Watch 上 甚至在 HomePod 上都适用

00:02:58.686 --> 00:03:01.686 A:middle
在 Apple Watch 上 甚至在 HomePod 上都适用

00:03:02.376 --> 00:03:04.956 A:middle
我们也有新的

00:03:04.956 --> 00:03:06.576 A:middle
捷径 App

00:03:06.576 --> 00:03:08.146 A:middle
通过这个新的捷径 App

00:03:08.146 --> 00:03:10.176 A:middle
每个人都可以打造自己的捷径

00:03:10.176 --> 00:03:12.086 A:middle
需要做的只是拖拽和放下

00:03:12.086 --> 00:03:13.396 A:middle
一系列的步骤

00:03:13.896 --> 00:03:15.556 A:middle
这些步骤还包括

00:03:15.706 --> 00:03:19.046 A:middle
你 App 所接通的捷径

00:03:19.266 --> 00:03:21.476 A:middle
我们今天将讨论

00:03:21.476 --> 00:03:23.096 A:middle
如何在你的 App 中

00:03:23.096 --> 00:03:24.606 A:middle
使用捷径

00:03:24.606 --> 00:03:25.676 A:middle
以及如何优化你的捷径

00:03:25.676 --> 00:03:27.346 A:middle
以提供更好的建议

00:03:27.806 --> 00:03:29.316 A:middle
我们会讲到一些

00:03:29.316 --> 00:03:30.926 A:middle
要特别注意的

00:03:30.926 --> 00:03:32.106 A:middle
隐私考虑

00:03:32.106 --> 00:03:33.036 A:middle
我们还会讲到

00:03:33.036 --> 00:03:34.906 A:middle
如何为媒体播放 制作出色的捷径

00:03:36.236 --> 00:03:38.156 A:middle
首先 我们来讨论一下

00:03:38.156 --> 00:03:39.946 A:middle
如何采用新的捷径 API

00:03:41.546 --> 00:03:43.236 A:middle
创建捷径

00:03:43.236 --> 00:03:44.676 A:middle
有 3 个步骤

00:03:44.676 --> 00:03:46.726 A:middle
第 1 步是 定义捷径

00:03:46.996 --> 00:03:48.256 A:middle
这意味着你需要决定

00:03:48.396 --> 00:03:50.186 A:middle
为哪个功能接通捷径

00:03:50.186 --> 00:03:52.336 A:middle
同时定义每个捷径

00:03:52.336 --> 00:03:53.576 A:middle
这样 Siri 就可以知道你的 App

00:03:53.576 --> 00:03:54.136 A:middle
能做些什么

00:03:55.406 --> 00:03:57.676 A:middle
第 2 步 你需要递交（Donate）自己新的捷径

00:03:58.086 --> 00:03:59.436 A:middle
这意味着每次用户

00:03:59.436 --> 00:04:01.816 A:middle
在你的 App 中使用

00:03:59.436 --> 00:04:01.816 A:middle
在你的 App 中使用

00:04:01.816 --> 00:04:03.476 A:middle
接通了捷径的功能时

00:04:03.476 --> 00:04:05.046 A:middle
你都需要告诉系统

00:04:05.086 --> 00:04:06.776 A:middle
这样 Siri 才会习得

00:04:06.776 --> 00:04:07.916 A:middle
建议你的捷径的

00:04:07.916 --> 00:04:08.826 A:middle
正确时机和场景

00:04:09.246 --> 00:04:12.616 A:middle
第 3 步是处理你的捷径

00:04:13.076 --> 00:04:14.936 A:middle
这意味着 当用户想要

00:04:14.936 --> 00:04:16.625 A:middle
在 Siri 中 在锁定屏幕上

00:04:16.676 --> 00:04:18.106 A:middle
或是在搜索界面使用你的捷径时

00:04:18.106 --> 00:04:19.886 A:middle
你需要准备好

00:04:19.886 --> 00:04:22.356 A:middle
让你的 App 和 App 扩展

00:04:22.356 --> 00:04:23.596 A:middle
可以被唤醒

00:04:23.596 --> 00:04:24.456 A:middle
并将其传递至句柄

00:04:25.836 --> 00:04:29.236 A:middle
在你定义捷径之前

00:04:29.306 --> 00:04:30.496 A:middle
你需要决定

00:04:30.496 --> 00:04:32.396 A:middle
你具体想要接通的功能是什么

00:04:33.056 --> 00:04:35.176 A:middle
你需要考虑

00:04:35.176 --> 00:04:36.256 A:middle
什么是用户

00:04:36.256 --> 00:04:37.316 A:middle
在使用你的 App 时

00:04:37.316 --> 00:04:38.436 A:middle
会做的最重要的事

00:04:38.686 --> 00:04:39.716 A:middle
因为这些事情

00:04:39.716 --> 00:04:40.826 A:middle
可能就是你需要

00:04:40.826 --> 00:04:41.936 A:middle
接通捷径的东西

00:04:42.256 --> 00:04:44.796 A:middle
你接通的每一个捷径

00:04:44.796 --> 00:04:46.776 A:middle
都应该让用户在使用

00:04:46.776 --> 00:04:48.686 A:middle
你的 App 的核心功能时

00:04:48.716 --> 00:04:49.246 A:middle
能有更快的速度

00:04:50.056 --> 00:04:51.176 A:middle
这意味着你应该采用一些

00:04:51.176 --> 00:04:52.616 A:middle
用户想用你的 App

00:04:52.616 --> 00:04:54.266 A:middle
所做的事情

00:04:54.266 --> 00:04:55.866 A:middle
并让他们能更快地做这些事情

00:04:56.796 --> 00:04:58.616 A:middle
速度的提升应该

00:04:58.616 --> 00:05:00.376 A:middle
是实质性的

00:04:58.616 --> 00:05:00.376 A:middle
是实质性的

00:05:00.376 --> 00:05:01.836 A:middle
你不能只是接通一个

00:05:01.836 --> 00:05:04.676 A:middle
正常地打开你的 App 的捷径

00:05:05.316 --> 00:05:06.936 A:middle
如果你接通的捷径

00:05:06.936 --> 00:05:08.096 A:middle
并没有让用户

00:05:08.096 --> 00:05:09.636 A:middle
在使用 App 时有很大的速度提升

00:05:10.186 --> 00:05:11.826 A:middle
那么它就不会被推荐为经常使用

00:05:12.416 --> 00:05:15.446 A:middle
其次 每一个

00:05:15.446 --> 00:05:16.426 A:middle
你接通的捷径

00:05:16.426 --> 00:05:18.056 A:middle
都应该能长期调动用户的兴趣

00:05:18.166 --> 00:05:19.286 A:middle
这意味着

00:05:19.346 --> 00:05:20.236 A:middle
这应该是用户想要

00:05:20.236 --> 00:05:21.516 A:middle
多次使用的功能

00:05:21.926 --> 00:05:23.696 A:middle
如果只是用户

00:05:23.696 --> 00:05:24.966 A:middle
想要使用一次或两次的功能

00:05:24.966 --> 00:05:27.126 A:middle
那么为它们创建捷径

00:05:27.256 --> 00:05:28.976 A:middle
不是什么好主意

00:05:29.076 --> 00:05:30.906 A:middle
你还应该只接通

00:05:30.906 --> 00:05:32.706 A:middle
可以随时使用的捷径

00:05:32.706 --> 00:05:35.036 A:middle
因为在你的捷径准备好前

00:05:35.036 --> 00:05:36.566 A:middle
你不能指望

00:05:36.566 --> 00:05:38.076 A:middle
用户处于某些

00:05:38.076 --> 00:05:39.596 A:middle
特定状态

00:05:40.806 --> 00:05:43.246 A:middle
一旦你决定要

00:05:43.246 --> 00:05:44.406 A:middle
接通什么捷径时

00:05:44.406 --> 00:05:45.686 A:middle
你就应该准备好查看

00:05:45.686 --> 00:05:47.386 A:middle
捷径的 API

00:05:48.396 --> 00:05:51.026 A:middle
我们有两种 API

00:05:51.026 --> 00:05:52.766 A:middle
来支持捷径的使用

00:05:53.216 --> 00:05:55.316 A:middle
第一种是 NSUserActivity

00:05:56.076 --> 00:05:58.086 A:middle
NSUserActivity 是一种代表你

00:05:58.086 --> 00:05:59.596 A:middle
App 状态的轻量级方式

00:05:59.596 --> 00:06:01.426 A:middle
它集成了一些

00:05:59.596 --> 00:06:01.426 A:middle
它集成了一些

00:06:01.456 --> 00:06:02.776 A:middle
其他的 Apple 功能

00:06:02.806 --> 00:06:04.156 A:middle
如“聚焦”和“接力”

00:06:05.046 --> 00:06:07.046 A:middle
第二种是 Intents

00:06:07.626 --> 00:06:08.676 A:middle
Intents 是

00:06:08.676 --> 00:06:10.726 A:middle
一种展示你的 App

00:06:10.726 --> 00:06:12.286 A:middle
能实现的功能的方式

00:06:12.286 --> 00:06:14.726 A:middle
Siri 内置了

00:06:14.726 --> 00:06:18.166 A:middle
一系列很好的 Intents

00:06:18.166 --> 00:06:19.106 A:middle
它们支持一系列

00:06:19.106 --> 00:06:20.786 A:middle
App 可以用来

00:06:20.786 --> 00:06:21.716 A:middle
与 Siri 协作的功能

00:06:22.226 --> 00:06:22.916 A:middle
今年我们将

00:06:22.916 --> 00:06:23.896 A:middle
介绍一个非常酷的特性

00:06:23.896 --> 00:06:25.176 A:middle
你现在可以

00:06:25.176 --> 00:06:26.556 A:middle
自定义 Intents

00:06:26.556 --> 00:06:27.886 A:middle
来与捷径协作了

00:06:29.006 --> 00:06:30.676 A:middle
因此 对于每一个你接通的捷径

00:06:30.676 --> 00:06:32.286 A:middle
你都需要决定它

00:06:32.286 --> 00:06:33.126 A:middle
是一个 NSUserActivity

00:06:33.126 --> 00:06:34.836 A:middle
还是一个 Intent

00:06:35.266 --> 00:06:36.836 A:middle
那么我们来谈论一下如何

00:06:37.466 --> 00:06:39.266 A:middle
做出这个决定

00:06:40.236 --> 00:06:42.426 A:middle
目前 NSUserActivity 是

00:06:42.426 --> 00:06:43.606 A:middle
构建捷径很好的选择

00:06:43.866 --> 00:06:45.366 A:middle
如果你只是要构建一个

00:06:45.366 --> 00:06:46.746 A:middle
想要打开某些你 App 内的

00:06:46.746 --> 00:06:49.186 A:middle
功能的简单捷径 或者你想要

00:06:49.186 --> 00:06:51.496 A:middle
为某些你已经内置在“聚焦”搜索内

00:06:51.496 --> 00:06:53.216 A:middle
或者已经在 NSUserActivity 中

00:06:53.216 --> 00:06:55.386 A:middle
提供的（比如“接力”）功能

00:06:55.426 --> 00:06:57.486 A:middle
接通捷径

00:06:57.486 --> 00:06:58.616 A:middle
建议你选择 NSUserActivity

00:06:59.146 --> 00:07:02.436 A:middle
但是如果想要最优的

00:06:59.146 --> 00:07:02.436 A:middle
但是如果想要最优的

00:07:02.436 --> 00:07:03.936 A:middle
捷径体验 你应该采用 Intents

00:07:03.936 --> 00:07:05.746 A:middle
以 Intents 为基础的捷径

00:07:05.746 --> 00:07:06.646 A:middle
真的非常酷

00:07:06.646 --> 00:07:08.596 A:middle
因为它们不需要启动你的 App

00:07:08.596 --> 00:07:10.156 A:middle
就可以内联运行

00:07:10.156 --> 00:07:11.656 A:middle
它们能包含一些自定义的

00:07:11.656 --> 00:07:13.626 A:middle
语音回复和定制化的 UI

00:07:13.626 --> 00:07:14.726 A:middle
像我们刚刚看到的那样

00:07:14.726 --> 00:07:16.186 A:middle
它们还会包含一些

00:07:16.336 --> 00:07:17.956 A:middle
颗粒参数预测

00:07:18.266 --> 00:07:19.756 A:middle
这些 Willem 稍后

00:07:19.756 --> 00:07:20.346 A:middle
会和你们讨论

00:07:21.516 --> 00:07:23.616 A:middle
一旦你决定要采用哪种 API

00:07:23.616 --> 00:07:25.356 A:middle
你就准备好

00:07:25.356 --> 00:07:28.116 A:middle
要开始实现了

00:07:29.176 --> 00:07:29.996 A:middle
那我们现在就开始

00:07:29.996 --> 00:07:30.976 A:middle
首先 我们来看看

00:07:30.976 --> 00:07:31.766 A:middle
怎么用 NSUserActivity

00:07:31.766 --> 00:07:33.586 A:middle
来接通捷径

00:07:33.586 --> 00:07:35.416 A:middle
第 1 步是定义你的捷径

00:07:35.416 --> 00:07:37.376 A:middle
对于 NSUserActivity 来说

00:07:37.406 --> 00:07:38.806 A:middle
这意味着你需要

00:07:38.806 --> 00:07:41.116 A:middle
在你 App 内的 Info.plist 文件中

00:07:41.116 --> 00:07:43.466 A:middle
声明一个 UserActivityType

00:07:43.466 --> 00:07:44.596 A:middle
来将你的 Activity 类型登记到系统中

00:07:46.006 --> 00:07:48.326 A:middle
接下来 你需要递交捷径

00:07:48.736 --> 00:07:50.836 A:middle
对于 NSUserActivity

00:07:50.946 --> 00:07:52.186 A:middle
这意味着每当用户处于

00:07:52.186 --> 00:07:53.596 A:middle
你的 App 中你想提供

00:07:53.596 --> 00:07:54.716 A:middle
捷径的界面时

00:07:54.716 --> 00:07:56.076 A:middle
你都应该让你一个

00:07:56.076 --> 00:07:57.836 A:middle
NSUserActivity 对象可用

00:07:58.696 --> 00:08:02.066 A:middle
这里有一个关键的新内容

00:07:58.696 --> 00:08:02.066 A:middle
这里有一个关键的新内容

00:08:02.246 --> 00:08:04.056 A:middle
就是 isEligibleForPrediction Flag

00:08:04.546 --> 00:08:06.206 A:middle
在任何 userActivity 上

00:08:06.206 --> 00:08:07.386 A:middle
把这个 Flag 设置为 “true”

00:08:07.386 --> 00:08:09.236 A:middle
都会把它变成一个捷径 真正酷的是

00:08:09.236 --> 00:08:10.716 A:middle
如果你的 App

00:08:10.716 --> 00:08:12.286 A:middle
已经有了一个 userActivity

00:08:12.286 --> 00:08:14.796 A:middle
你可以直接将这个 Flag 设置为 “true”

00:08:14.796 --> 00:08:16.416 A:middle
这个 userActivity 就会

00:08:16.416 --> 00:08:17.606 A:middle
自动变成一个捷径

00:08:18.616 --> 00:08:21.826 A:middle
请注意 isEligibleForSearch Flag 需要

00:08:21.826 --> 00:08:22.906 A:middle
设置为 “true”

00:08:22.906 --> 00:08:24.956 A:middle
这样 isEligibleForPrediction

00:08:24.956 --> 00:08:25.336 A:middle
才能生效

00:08:25.486 --> 00:08:28.746 A:middle
另外 你可能要考虑到

00:08:28.746 --> 00:08:30.806 A:middle
isEligibleForHandoff Flag

00:08:30.876 --> 00:08:31.786 A:middle
它的默认情况就是 “true”

00:08:31.786 --> 00:08:34.196 A:middle
所以在默认情况下

00:08:34.196 --> 00:08:35.885 A:middle
你的所有 userActivity

00:08:35.885 --> 00:08:38.846 A:middle
都可以在不同设备间“接力”

00:08:38.926 --> 00:08:40.066 A:middle
当你创建自己的 userActivity 时

00:08:40.066 --> 00:08:41.166 A:middle
你要确保

00:08:41.166 --> 00:08:42.426 A:middle
包含所有

00:08:42.426 --> 00:08:44.246 A:middle
userInfo 词典中的信息

00:08:44.246 --> 00:08:45.896 A:middle
以便之后

00:08:45.896 --> 00:08:47.326 A:middle
可以还原在这个 Activity

00:08:48.886 --> 00:08:50.976 A:middle
接着就是通过

00:08:50.976 --> 00:08:52.306 A:middle
把 userActivity 与当前屏幕上的

00:08:52.306 --> 00:08:54.186 A:middle
UIViewController 或 UIResponder 连接

00:08:54.186 --> 00:08:55.566 A:middle
来标记你

00:08:55.566 --> 00:08:56.586 A:middle
当前的 Activity

00:08:57.186 --> 00:09:00.476 A:middle
最后一步就是 在定义

00:08:57.186 --> 00:09:00.476 A:middle
最后一步就是 在定义

00:09:00.476 --> 00:09:01.316 A:middle
且递交了捷径之后

00:09:01.316 --> 00:09:02.526 A:middle
处理它们

00:09:02.926 --> 00:09:05.186 A:middle
每次当用户从你的 App

00:09:05.186 --> 00:09:08.046 A:middle
使用 NSUserActivity 时

00:09:08.406 --> 00:09:09.406 A:middle
它都会在你的 App 中打开

00:09:09.806 --> 00:09:11.186 A:middle
你需要通过执行

00:09:11.186 --> 00:09:12.696 A:middle
App 中用来处理

00:09:12.696 --> 00:09:13.916 A:middle
NSUserActivity 的委托方法

00:09:13.916 --> 00:09:15.256 A:middle
即 continueUserActivity

00:09:15.256 --> 00:09:16.496 A:middle
来对其进行处理

00:09:17.086 --> 00:09:18.036 A:middle
你要做的就是

00:09:18.036 --> 00:09:19.816 A:middle
执行这个方法

00:09:19.816 --> 00:09:21.326 A:middle
确认这种 Activity 类型是否

00:09:21.326 --> 00:09:22.646 A:middle
与你所登记的类型匹配

00:09:22.646 --> 00:09:23.926 A:middle
如果匹配的话

00:09:23.926 --> 00:09:25.396 A:middle
你可以将 App

00:09:25.396 --> 00:09:26.326 A:middle
还原成 userActivity

00:09:26.326 --> 00:09:27.296 A:middle
保存时的状态

00:09:28.706 --> 00:09:30.366 A:middle
以上就是为了让

00:09:30.366 --> 00:09:31.706 A:middle
Siri 通过 NSUserActivity

00:09:31.706 --> 00:09:33.386 A:middle
为你的 App 建议捷径

00:09:33.386 --> 00:09:34.836 A:middle
你需要做的事情

00:09:37.166 --> 00:09:38.396 A:middle
现在 让我们来谈论一下

00:09:38.396 --> 00:09:39.806 A:middle
如何通过 Intents 接通捷径

00:09:41.016 --> 00:09:42.376 A:middle
第 1 步还是

00:09:42.376 --> 00:09:43.346 A:middle
定义你的捷径

00:09:43.526 --> 00:09:44.906 A:middle
你可能需要

00:09:44.906 --> 00:09:47.116 A:middle
从决定采用

00:09:47.116 --> 00:09:49.576 A:middle
哪种类型的 Intents 开始

00:09:50.196 --> 00:09:51.936 A:middle
大家都知道 Siri 包含了

00:09:51.936 --> 00:09:53.396 A:middle
很多内嵌很棒的 Intents

00:09:53.616 --> 00:09:55.406 A:middle
比如信息 健身

00:09:55.536 --> 00:09:56.626 A:middle
清单等等

00:09:57.456 --> 00:09:59.156 A:middle
现在我们将介绍

00:09:59.156 --> 00:10:00.936 A:middle
如何在 Xcode 中

00:09:59.156 --> 00:10:00.936 A:middle
如何在 Xcode 中

00:10:00.936 --> 00:10:01.916 A:middle
为捷径定义自定 Intents

00:10:03.146 --> 00:10:05.346 A:middle
如果你想要创建的捷径

00:10:05.346 --> 00:10:06.486 A:middle
正好与默认情况下的

00:10:06.486 --> 00:10:08.156 A:middle
内嵌式 SiriKit Intents 一致

00:10:08.156 --> 00:10:09.876 A:middle
那你应该采用它

00:10:10.466 --> 00:10:12.136 A:middle
不过你也可以定义自己的捷径

00:10:12.616 --> 00:10:15.096 A:middle
不管你是想定义自己的 Intents

00:10:15.096 --> 00:10:16.416 A:middle
还是采用现有的

00:10:16.416 --> 00:10:18.046 A:middle
并对其进行定制

00:10:18.046 --> 00:10:19.566 A:middle
你都需要在 Xcode 中创建

00:10:19.566 --> 00:10:21.356 A:middle
一个 Intents 定义文件

00:10:21.786 --> 00:10:24.746 A:middle
在我的空闲时间

00:10:24.746 --> 00:10:25.896 A:middle
我一直在与几个朋友

00:10:25.896 --> 00:10:26.956 A:middle
一起研发一个新的 App

00:10:26.956 --> 00:10:29.156 A:middle
这是一个送汤的 App

00:10:29.156 --> 00:10:31.026 A:middle
名字叫《Soup Chef》

00:10:31.026 --> 00:10:32.666 A:middle
要想订汤 使用这个 App

00:10:32.666 --> 00:10:34.646 A:middle
再方便不过了 它与 Siri

00:10:34.676 --> 00:10:36.586 A:middle
关联的潜力让我十分期待

00:10:37.016 --> 00:10:38.586 A:middle
我们来看看怎样使用

00:10:38.586 --> 00:10:40.286 A:middle
新的 Intent Editor

00:10:40.286 --> 00:10:42.066 A:middle
来为《Soup Chef》创建一个 Intent

00:10:42.126 --> 00:10:43.426 A:middle
首先我将打开 Xcode 中的

00:10:43.426 --> 00:10:45.646 A:middle
“File（文件）”-“New File（新文件）”

00:10:45.646 --> 00:10:47.256 A:middle
选择 “SiriKit Intent Definition File

00:10:47.256 --> 00:10:48.196 A:middle
（SiriKit Intent 定义文件）”

00:10:48.196 --> 00:10:51.176 A:middle
然后我们就能看到全新的 Intent Editor

00:10:51.636 --> 00:10:52.986 A:middle
首先我们需要

00:10:52.986 --> 00:10:54.866 A:middle
点击左下角的加号按钮

00:10:54.866 --> 00:10:58.486 A:middle
接下来 我想给我的 Intent 取个名字

00:10:58.756 --> 00:10:59.926 A:middle
因为我要为订汤

00:10:59.926 --> 00:11:01.076 A:middle
制作一个 Intent

00:10:59.926 --> 00:11:01.076 A:middle
制作一个 Intent

00:11:01.076 --> 00:11:02.576 A:middle
所以我要称之为 “OrderSoup（订汤）”

00:11:04.696 --> 00:11:06.266 A:middle
接着我要填写

00:11:06.266 --> 00:11:07.326 A:middle
Intent 的元数据

00:11:07.806 --> 00:11:09.526 A:middle
让我们一步一步来看

00:11:10.456 --> 00:11:12.316 A:middle
第一个元数据是 “Category（类别）”

00:11:12.346 --> 00:11:14.936 A:middle
定义 Category

00:11:15.346 --> 00:11:17.536 A:middle
可以帮助 Siri 知道

00:11:17.536 --> 00:11:19.176 A:middle
如何讲述你的 Intent 以及

00:11:19.176 --> 00:11:20.186 A:middle
如何在 UI 上展示它

00:11:20.666 --> 00:11:22.286 A:middle
比如说 在这种情况下

00:11:22.286 --> 00:11:23.596 A:middle
我选择了 “Order（预定）”这个种类

00:11:23.596 --> 00:11:25.216 A:middle
如果我选择 “Order”

00:11:25.216 --> 00:11:26.926 A:middle
当我使用到这个 Intent 的时候

00:11:26.926 --> 00:11:28.626 A:middle
Siri 会说如 “好的 我预定了”这样的话

00:11:28.766 --> 00:11:29.926 A:middle
接着它会展示一个

00:11:29.926 --> 00:11:31.536 A:middle
如 “Order（预定）”的确认按钮

00:11:32.326 --> 00:11:33.776 A:middle
我们提供

00:11:33.776 --> 00:11:34.816 A:middle
几种不同的类别

00:11:34.816 --> 00:11:36.516 A:middle
你应该选择最适合

00:11:36.516 --> 00:11:37.656 A:middle
你 Intent 目的

00:11:37.656 --> 00:11:38.006 A:middle
的那一个类别

00:11:39.516 --> 00:11:40.956 A:middle
接着你要填写

00:11:40.956 --> 00:11:42.716 A:middle
Intent 的 “Title（标题）”

00:11:43.056 --> 00:11:44.416 A:middle
和 “Description（描述）”

00:11:44.416 --> 00:11:46.196 A:middle
这将会在各类场景中帮助用户发现

00:11:46.196 --> 00:11:47.726 A:middle
你的 App 支持什么捷径

00:11:48.756 --> 00:11:49.876 A:middle
然后就是 “User confirmation required

00:11:49.876 --> 00:11:51.586 A:middle
（需要用户确认）”复选框

00:11:51.866 --> 00:11:53.666 A:middle
这将决定我们是否

00:11:53.786 --> 00:11:55.046 A:middle
在用户使用你的捷径前

00:11:55.046 --> 00:11:57.346 A:middle
询问他们是否确认使用

00:11:57.496 --> 00:11:58.686 A:middle
所以 Siri 可能会说

00:11:58.686 --> 00:12:00.066 A:middle
如“你准备好使用《Soup Chef》

00:11:58.686 --> 00:12:00.066 A:middle
如“你准备好使用《Soup Chef》

00:12:00.066 --> 00:12:01.226 A:middle
来订汤了吗？”之类的话

00:12:01.226 --> 00:12:02.536 A:middle
这对于我的 App 来说真的特别棒

00:12:02.536 --> 00:12:03.566 A:middle
因为我想要确保用户

00:12:03.566 --> 00:12:05.296 A:middle
并不是偶然地订汤 [ 笑声 ]

00:12:07.756 --> 00:12:09.696 A:middle
你可以在这里看到

00:12:09.816 --> 00:12:10.386 A:middle
Intent 的 “Parameter（参数）”

00:12:11.106 --> 00:12:12.856 A:middle
这里将会定义

00:12:12.856 --> 00:12:14.716 A:middle
传递给你的捷径的所有参数

00:12:14.716 --> 00:12:16.546 A:middle
比如说 在我的例子里

00:12:16.546 --> 00:12:17.416 A:middle
我有两个参数

00:12:17.636 --> 00:12:21.746 A:middle
分别是被预定的汤品清单以及配送地址

00:12:22.246 --> 00:12:23.966 A:middle
目前 “Parameters” 支持一个

00:12:23.966 --> 00:12:25.206 A:middle
简短的类型列表

00:12:25.206 --> 00:12:26.966 A:middle
这些类型包括如字符串

00:12:27.256 --> 00:12:29.606 A:middle
数字 人物和位置等

00:12:30.046 --> 00:12:31.236 A:middle
不过如果你想构建一个

00:12:31.236 --> 00:12:33.746 A:middle
能够代表你 App 中的对象

00:12:33.746 --> 00:12:35.346 A:middle
但是却不在

00:12:35.346 --> 00:12:36.706 A:middle
类型列表中的参数

00:12:36.906 --> 00:12:38.236 A:middle
那你可以

00:12:39.676 --> 00:12:39.786 A:middle
选择 “Custom（自定义）”类型

00:12:40.386 --> 00:12:41.116 A:middle
当你已经定义好你的参数

00:12:41.116 --> 00:12:42.146 A:middle
你可能会想要看一下

00:12:42.146 --> 00:12:43.186 A:middle
“捷径类型”

00:12:43.776 --> 00:12:46.016 A:middle
这里会定义

00:12:46.016 --> 00:12:47.266 A:middle
你想要建议给用户的

00:12:47.266 --> 00:12:48.326 A:middle
所有捷径的类型

00:12:49.616 --> 00:12:51.566 A:middle
每种类型都包含

00:12:51.566 --> 00:12:53.436 A:middle
一种特定的 会被预测的

00:12:53.436 --> 00:12:55.836 A:middle
参数组合 每一个类型

00:12:55.836 --> 00:12:57.336 A:middle
都标题和副标题的形式展示

00:12:57.336 --> 00:12:59.476 A:middle
其中会填上你的

00:12:59.706 --> 00:13:01.336 A:middle
参数数值

00:12:59.706 --> 00:13:01.336 A:middle
参数数值

00:13:01.676 --> 00:13:04.246 A:middle
如果因为你的捷径需要

00:13:04.246 --> 00:13:05.526 A:middle
启动你的 App 才能运行

00:13:05.816 --> 00:13:06.916 A:middle
而导致的它不能在后台运行

00:13:06.916 --> 00:13:08.326 A:middle
那么你可以不选

00:13:08.456 --> 00:13:10.446 A:middle
“Supports background

00:13:10.446 --> 00:13:11.766 A:middle
execution（支持后台执行）” 复选框

00:13:12.236 --> 00:13:14.566 A:middle
在某些情况下 一个 Intent

00:13:14.566 --> 00:13:15.786 A:middle
可能拥有很多个捷径类型

00:13:15.786 --> 00:13:17.166 A:middle
它们中有的支持

00:13:17.166 --> 00:13:18.786 A:middle
后台执行

00:13:18.786 --> 00:13:19.026 A:middle
有的则不支持

00:13:19.646 --> 00:13:21.666 A:middle
在《Soup Chef》的例子中

00:13:21.826 --> 00:13:22.996 A:middle
这尤其重要

00:13:22.996 --> 00:13:24.276 A:middle
因为当预知了菜单和

00:13:24.276 --> 00:13:26.186 A:middle
配送位置后

00:13:26.186 --> 00:13:28.286 A:middle
我们可以支持后台执行

00:13:28.286 --> 00:13:29.586 A:middle
因为我们拥有了

00:13:29.586 --> 00:13:30.926 A:middle
下订单所需要的一切

00:13:31.346 --> 00:13:33.276 A:middle
不过如果我们增加了一个

00:13:33.496 --> 00:13:37.106 A:middle
只包含配送位置的捷径类型

00:13:37.106 --> 00:13:39.186 A:middle
Siri 会知道

00:13:39.226 --> 00:13:40.236 A:middle
我们可能不会有

00:13:40.236 --> 00:13:41.446 A:middle
足够的信息来下订单

00:13:41.446 --> 00:13:42.926 A:middle
所以我们需要启动 App

00:13:42.926 --> 00:13:44.806 A:middle
来询问用户他们需要配送到

00:13:44.806 --> 00:13:46.176 A:middle
什么地址 在这种情况下

00:13:46.176 --> 00:13:47.466 A:middle
我们希望这种

00:13:47.556 --> 00:13:49.056 A:middle
捷径类型不要在

00:13:49.056 --> 00:13:50.846 A:middle
后台执行

00:13:51.066 --> 00:13:52.736 A:middle
你应该列出

00:13:52.736 --> 00:13:54.676 A:middle
你认为有助于 Siri

00:13:54.676 --> 00:13:55.896 A:middle
做出最佳预测的

00:13:55.896 --> 00:13:57.366 A:middle
捷径的每种变体的

00:13:57.366 --> 00:13:58.496 A:middle
捷径类型

00:13:58.946 --> 00:14:00.546 A:middle
为了最佳体验

00:13:58.946 --> 00:14:00.546 A:middle
为了最佳体验

00:14:00.776 --> 00:14:02.366 A:middle
你应该尽可能

00:14:02.366 --> 00:14:03.506 A:middle
让所有的捷径类型

00:14:03.506 --> 00:14:04.496 A:middle
都支持后台执行

00:14:05.136 --> 00:14:06.686 A:middle
支持后台执行的

00:14:06.686 --> 00:14:08.226 A:middle
捷径类型让用户

00:14:08.226 --> 00:14:09.756 A:middle
体验速度更快

00:14:09.756 --> 00:14:12.056 A:middle
这样它们会更频繁地被建议

00:14:13.726 --> 00:14:15.336 A:middle
你可以为每个 Intent

00:14:15.336 --> 00:14:17.446 A:middle
提供最多 16 种你定义的捷径类型

00:14:18.766 --> 00:14:19.946 A:middle
一旦你定义了你的 Intent

00:14:19.946 --> 00:14:21.696 A:middle
Xcode 将

00:14:21.696 --> 00:14:23.446 A:middle
自动生成一个 Intent 类

00:14:24.016 --> 00:14:25.596 A:middle
和一个 Intent

00:14:25.596 --> 00:14:26.906 A:middle
处理协议

00:14:27.236 --> 00:14:29.176 A:middle
在我的例子中

00:14:29.176 --> 00:14:31.666 A:middle
我们生成了 OrderSoupIntent 类

00:14:31.746 --> 00:14:33.666 A:middle
还有一个 OrderSoupIntentHandling 协议

00:14:33.806 --> 00:14:36.116 A:middle
这个协议中有着与我刚刚

00:14:36.266 --> 00:14:37.616 A:middle
在我的 Intent 定义文件中

00:14:37.616 --> 00:14:39.146 A:middle
所定义的条目相一致的属性

00:14:39.816 --> 00:14:41.386 A:middle
由于 Xcode 会自动生成代码

00:14:41.386 --> 00:14:42.396 A:middle
很重要的一件事是需要考虑

00:14:42.396 --> 00:14:44.316 A:middle
Xcode 在生成这段代码的时候

00:14:44.316 --> 00:14:45.886 A:middle
Target 是什么

00:14:45.886 --> 00:14:47.486 A:middle
因为你不想要

00:14:47.486 --> 00:14:48.796 A:middle
在最后呈现相同类当中

00:14:48.796 --> 00:14:50.586 A:middle
互相冲突的

00:14:50.586 --> 00:14:51.576 A:middle
完全一样的实例

00:14:52.606 --> 00:14:55.026 A:middle
让我们一起

00:14:55.156 --> 00:14:56.706 A:middle
在 Inspector 面板中

00:14:56.736 --> 00:14:58.156 A:middle
看看我的 Intent 定义文件中的

00:14:58.156 --> 00:14:58.876 A:middle
“Target Membership（目标成员）”部分

00:15:01.046 --> 00:15:02.676 A:middle
你的 Intent 所使用的

00:15:02.676 --> 00:15:04.276 A:middle
每个 Target 都应该

00:15:04.276 --> 00:15:05.976 A:middle
包含你的 Intent 定义文件

00:15:05.976 --> 00:15:07.496 A:middle
你应该选中

00:15:07.496 --> 00:15:10.096 A:middle
“Target Membership” 下面的复选框

00:15:10.506 --> 00:15:11.806 A:middle
不过你需要确定

00:15:11.806 --> 00:15:13.066 A:middle
如果你拥有一个框架

00:15:13.316 --> 00:15:15.096 A:middle
你不会在互相包含的

00:15:15.096 --> 00:15:16.986 A:middle
多个 Target 中生成代码

00:15:17.126 --> 00:15:19.546 A:middle
如果你有一个框架

00:15:19.546 --> 00:15:21.886 A:middle
你应该通过在每个 Target 中

00:15:22.066 --> 00:15:23.516 A:middle
只选择 Intent 类

00:15:23.586 --> 00:15:25.036 A:middle
而不选择生成的类

00:15:25.036 --> 00:15:26.866 A:middle
来将 “Target Membership” 设定为

00:15:26.866 --> 00:15:29.036 A:middle
只为该框架生成 Intent 类

00:15:29.636 --> 00:15:31.496 A:middle
不过如果在你的 App 里

00:15:31.576 --> 00:15:32.596 A:middle
没有任何框架

00:15:32.596 --> 00:15:33.896 A:middle
因为你还没有将你的 App

00:15:33.896 --> 00:15:35.786 A:middle
分离成框架

00:15:35.786 --> 00:15:37.326 A:middle
你应该为每一个 Target

00:15:37.426 --> 00:15:38.486 A:middle
检查 Target

00:15:39.326 --> 00:15:41.796 A:middle
这就是如何在 Xcode 中定义

00:15:41.796 --> 00:15:42.926 A:middle
自定 Intent

00:15:44.296 --> 00:15:45.436 A:middle
当你定义好了自定 Intent

00:15:45.436 --> 00:15:47.296 A:middle
想要递交就非常容易了

00:15:47.906 --> 00:15:48.886 A:middle
你所需要做的只是

00:15:48.886 --> 00:15:50.646 A:middle
将你的 Intent 对象实例化

00:15:51.166 --> 00:15:52.856 A:middle
然后填入参数

00:15:52.956 --> 00:15:54.606 A:middle
再创建并递交一个

00:15:54.766 --> 00:15:55.936 A:middle
INInteraction 对象

00:15:56.816 --> 00:15:58.826 A:middle
需要确保每次用户

00:15:58.866 --> 00:16:00.596 A:middle
在你的 App 中执行与你的捷径

00:15:58.866 --> 00:16:00.596 A:middle
在你的 App 中执行与你的捷径

00:16:00.596 --> 00:16:01.756 A:middle
相同的任务时能做到这一点

00:16:02.566 --> 00:16:05.246 A:middle
在这种情况下 每次当

00:16:05.366 --> 00:16:07.926 A:middle
用户预订汤时

00:16:07.926 --> 00:16:09.396 A:middle
我就会递交这个 Intent

00:16:09.396 --> 00:16:10.666 A:middle
因为这将帮助 Siri

00:16:10.836 --> 00:16:12.336 A:middle
习得预测 Intent 的最佳时期

00:16:13.766 --> 00:16:15.586 A:middle
我们已经定义了自定 Intent

00:16:15.586 --> 00:16:16.926 A:middle
现在要讨论的就是

00:16:16.926 --> 00:16:17.956 A:middle
如何处理它

00:16:18.216 --> 00:16:19.036 A:middle
和 NSUserActivity 一样

00:16:19.036 --> 00:16:21.236 A:middle
你应该在你的 App 委托里

00:16:21.236 --> 00:16:23.036 A:middle
执行 continueUserActivity 方法

00:16:23.036 --> 00:16:24.576 A:middle
以此来处理

00:16:24.576 --> 00:16:25.366 A:middle
你的 Intent

00:16:26.126 --> 00:16:28.056 A:middle
当一个 Intent 在你的 App 中

00:16:28.056 --> 00:16:30.066 A:middle
被打开时 它将以

00:16:30.066 --> 00:16:32.076 A:middle
NSUserActivity 对象的形式

00:16:32.076 --> 00:16:34.436 A:middle
进入它的 Activity

00:16:34.436 --> 00:16:36.086 A:middle
类型就是之前你生成的

00:16:36.086 --> 00:16:36.496 A:middle
Intent 类的名字

00:16:36.796 --> 00:16:37.686 A:middle
在我的例子中

00:16:37.796 --> 00:16:38.926 A:middle
就是 OrderSoupIntent

00:16:40.146 --> 00:16:41.666 A:middle
不过如果你只执行

00:16:41.666 --> 00:16:43.306 A:middle
continueUserActivity

00:16:43.306 --> 00:16:45.446 A:middle
你的捷径每次都会打开你的 App

00:16:45.486 --> 00:16:47.036 A:middle
它不会在后台运行

00:16:47.036 --> 00:16:48.766 A:middle
或者与 Siri 内联运行

00:16:48.766 --> 00:16:50.156 A:middle
也不会支持如自定声音

00:16:50.156 --> 00:16:50.676 A:middle
回复之类的功能

00:16:51.056 --> 00:16:52.706 A:middle
为了拥有最佳的体验

00:16:52.706 --> 00:16:54.486 A:middle
你想要创建一个在后台

00:16:54.486 --> 00:16:56.176 A:middle
处理你的捷径的拓展包

00:16:57.116 --> 00:16:59.716 A:middle
要想实现这个目的

00:16:59.966 --> 00:17:01.736 A:middle
首先要在 Xcode 项目中创建一个新目标

00:16:59.966 --> 00:17:01.736 A:middle
首先要在 Xcode 项目中创建一个新目标

00:17:01.736 --> 00:17:03.366 A:middle
然后选择 “Intents Extension

00:17:03.416 --> 00:17:03.806 A:middle
（Intent 扩展）”模板

00:17:04.326 --> 00:17:07.836 A:middle
确保你的 Intent Handler

00:17:07.925 --> 00:17:09.445 A:middle
遵循 Intent 处理协议

00:17:09.836 --> 00:17:10.636 A:middle
在我的例子中

00:17:10.876 --> 00:17:12.766 A:middle
就是 OrderSoupIntent 这个处理方式

00:17:12.766 --> 00:17:14.076 A:middle
然后再执行这些方法

00:17:14.076 --> 00:17:15.876 A:middle
也就是 confirm() 和 handle()

00:17:16.425 --> 00:17:17.566 A:middle
需要注意的是

00:17:17.566 --> 00:17:19.356 A:middle
和传统的 SiriKit 不同的是

00:17:19.356 --> 00:17:20.846 A:middle
你不需要执行 resolve() 方法

00:17:20.846 --> 00:17:22.876 A:middle
因为你的 Intent

00:17:22.996 --> 00:17:24.346 A:middle
不需要任何

00:17:24.486 --> 00:17:25.866 A:middle
用户定制或

00:17:25.866 --> 00:17:26.965 A:middle
用户的任何后续动作

00:17:27.346 --> 00:17:29.676 A:middle
所以 你应该检查

00:17:29.676 --> 00:17:30.906 A:middle
你 Intent 的属性的

00:17:30.906 --> 00:17:32.126 A:middle
所有数值以保证

00:17:32.126 --> 00:17:33.056 A:middle
它们是有效的

00:17:33.396 --> 00:17:34.596 A:middle
如果不是

00:17:34.596 --> 00:17:36.066 A:middle
在你认为你不能处理

00:17:36.066 --> 00:17:36.906 A:middle
这个 Intent 的情况下

00:17:36.906 --> 00:17:38.096 A:middle
你应该返回一个错误代码

00:17:38.716 --> 00:17:40.866 A:middle
然后处理 准确地说是

00:17:40.916 --> 00:17:42.726 A:middle
执行你的捷径

00:17:43.086 --> 00:17:44.106 A:middle
在我的例子中

00:17:44.106 --> 00:17:45.786 A:middle
这意味着为汤下订单

00:17:46.136 --> 00:17:47.996 A:middle
接着你要返回一个

00:17:47.996 --> 00:17:49.756 A:middle
能够指明结果

00:17:49.756 --> 00:17:51.266 A:middle
如 “Success（成功）”的响应对象

00:17:52.926 --> 00:17:54.596 A:middle
你应该为每一个 Target

00:17:54.596 --> 00:17:56.816 A:middle
在后台运行的捷径

00:17:56.816 --> 00:17:58.476 A:middle
执行一个 Intent 拓展包

00:17:58.476 --> 00:18:00.046 A:middle
因为它们会

00:17:58.476 --> 00:18:00.046 A:middle
因为它们会

00:18:00.046 --> 00:18:01.526 A:middle
与 Siri 内部

00:18:01.526 --> 00:18:03.046 A:middle
在锁定屏幕上

00:18:03.046 --> 00:18:04.426 A:middle
在搜索界面中 在捷径 App 中

00:18:04.426 --> 00:18:05.796 A:middle
或者是在 Siri 表盘中自动运行

00:18:05.796 --> 00:18:07.026 A:middle
而不需要启动你的 App

00:18:07.726 --> 00:18:08.986 A:middle
最有价值的捷径

00:18:08.986 --> 00:18:09.736 A:middle
一定是在后台运行的

00:18:09.736 --> 00:18:11.886 A:middle
不过你也可以创建

00:18:11.886 --> 00:18:13.486 A:middle
很多其他很好的捷径

00:18:13.736 --> 00:18:15.546 A:middle
需要记住的是

00:18:15.546 --> 00:18:16.696 A:middle
即便你执行了一个

00:18:16.696 --> 00:18:18.166 A:middle
Intent 拓展包 你也应该一直

00:18:18.166 --> 00:18:19.816 A:middle
执行 continueUserActivity

00:18:20.126 --> 00:18:21.476 A:middle
因为用户可能会

00:18:21.476 --> 00:18:23.076 A:middle
通过 Siri 在你的 App 中

00:18:23.076 --> 00:18:24.816 A:middle
打开捷径

00:18:24.816 --> 00:18:26.906 A:middle
比如通过点击 Siri 上的卡片

00:18:27.206 --> 00:18:29.126 A:middle
来展示你 App 的

00:18:29.126 --> 00:18:31.226 A:middle
自定 UI

00:18:31.766 --> 00:18:33.206 A:middle
还有一件我想要

00:18:33.206 --> 00:18:34.506 A:middle
告诉你的事情

00:18:34.506 --> 00:18:35.946 A:middle
那就是 INRelevantShortcut

00:18:36.346 --> 00:18:37.896 A:middle
INRelevantShortcut 是一种

00:18:37.896 --> 00:18:39.386 A:middle
向 Siri 表盘展示

00:18:39.386 --> 00:18:41.746 A:middle
捷径的方式

00:18:41.746 --> 00:18:42.726 A:middle
你只需要提供

00:18:42.876 --> 00:18:44.756 A:middle
包含 Intent

00:18:44.756 --> 00:18:46.706 A:middle
或者 userActivity 的

00:18:46.706 --> 00:18:47.176 A:middle
INRelevantShortcut 对象即可

00:18:48.026 --> 00:18:49.266 A:middle
你可以随意地

00:18:49.266 --> 00:18:50.956 A:middle
在你相关的捷径中

00:18:50.956 --> 00:18:52.316 A:middle
包含相关信息

00:18:52.316 --> 00:18:54.546 A:middle
这可以提示 Siri 表盘

00:18:54.546 --> 00:18:56.046 A:middle
何时你的捷径是相关的

00:18:56.046 --> 00:18:57.326 A:middle
以及什么时候是

00:18:57.326 --> 00:18:58.286 A:middle
展示你的捷径的最佳时期

00:18:59.376 --> 00:19:01.266 A:middle
关于 INRelevantShortcut

00:18:59.376 --> 00:19:01.266 A:middle
关于 INRelevantShortcut

00:19:01.386 --> 00:19:02.546 A:middle
最酷的事情就是

00:19:02.546 --> 00:19:04.406 A:middle
即便你没有 Watch App 它也能起作用

00:19:04.806 --> 00:19:06.206 A:middle
你可以从你的 iOS App

00:19:06.206 --> 00:19:07.896 A:middle
接通相关的捷径

00:19:07.896 --> 00:19:09.126 A:middle
如果它们在后台运行

00:19:09.126 --> 00:19:10.666 A:middle
就会直接出现在

00:19:10.666 --> 00:19:11.776 A:middle
Siri 表盘上

00:19:12.276 --> 00:19:13.656 A:middle
好了 我们现在已经讲到了

00:19:13.656 --> 00:19:14.946 A:middle
所有捷径的使用方法

00:19:14.946 --> 00:19:17.256 A:middle
以及采用 API 的方法

00:19:17.256 --> 00:19:18.586 A:middle
接下来的时间交给

00:19:18.586 --> 00:19:20.146 A:middle
我的同事 Willem

00:19:20.146 --> 00:19:21.326 A:middle
他将为你演示

00:19:21.326 --> 00:19:24.976 A:middle
如何在 Xcode 中使用捷径 Willem

00:19:25.516 --> 00:19:34.126 A:middle
[ 掌声 ]

00:19:34.626 --> 00:19:35.266 A:middle
&gt;&gt; 谢谢 Ari

00:19:36.486 --> 00:19:38.976 A:middle
我很兴奋能够成为演示

00:19:38.976 --> 00:19:42.056 A:middle
如何使用捷径的第一个人

00:19:42.756 --> 00:19:45.606 A:middle
在我们深入 Xcode 之前

00:19:45.606 --> 00:19:46.536 A:middle
先让我向大家展示一下

00:19:46.536 --> 00:19:47.066 A:middle
我们一直在研发的一款 App

00:19:47.486 --> 00:19:48.786 A:middle
正如 Ari 提到的

00:19:48.786 --> 00:19:50.516 A:middle
我们在研发一款名为《Soup Chef》的

00:19:50.516 --> 00:19:51.306 A:middle
订汤的 App

00:19:51.486 --> 00:19:52.916 A:middle
让我来向你们展示一下

00:19:59.356 --> 00:20:01.176 A:middle
这就是《Soup Chef》

00:19:59.356 --> 00:20:01.176 A:middle
这就是《Soup Chef》

00:20:01.676 --> 00:20:02.956 A:middle
当我启动这个 App 时

00:20:02.956 --> 00:20:04.646 A:middle
这里会展示我的订单记录

00:20:05.106 --> 00:20:06.216 A:middle
因为我还没有订过任何东西

00:20:06.216 --> 00:20:07.536 A:middle
所以这里还是空的

00:20:08.106 --> 00:20:09.516 A:middle
我可以通过点击加号

00:20:09.516 --> 00:20:10.506 A:middle
来发出一个新的订单

00:20:11.346 --> 00:20:12.696 A:middle
这为我展示了汤品的菜单

00:20:12.696 --> 00:20:13.726 A:middle
在这里你可以看到

00:20:13.726 --> 00:20:15.016 A:middle
我能点的所有汤品

00:20:15.516 --> 00:20:18.056 A:middle
我们来点一个番茄汤

00:20:18.436 --> 00:20:21.336 A:middle
接下来 我可以选择

00:20:21.336 --> 00:20:22.506 A:middle
汤的数量和加料的种类

00:20:22.866 --> 00:20:24.586 A:middle
我要点一个有红辣椒的番茄汤

00:20:24.886 --> 00:20:26.816 A:middle
当我准备好下单时

00:20:26.816 --> 00:20:28.446 A:middle
我就轻点一下

00:20:28.496 --> 00:20:29.056 A:middle
“Place Order（下单）”按钮

00:20:30.306 --> 00:20:31.666 A:middle
现在回到 “Order History（历史订单）”

00:20:31.666 --> 00:20:32.586 A:middle
你就能看到我刚刚下的

00:20:32.586 --> 00:20:33.706 A:middle
那个订单了

00:20:34.246 --> 00:20:36.316 A:middle
我可以轻点订单去看

00:20:36.316 --> 00:20:37.846 A:middle
关于一个特定的订单的更多细节

00:20:38.726 --> 00:20:40.776 A:middle
这一视图与 userActivity 相关联

00:20:41.036 --> 00:20:43.576 A:middle
我认为将这个建议给用户

00:20:43.876 --> 00:20:45.196 A:middle
是非常好的

00:20:45.496 --> 00:20:46.586 A:middle
因为我们的用户喜欢

00:20:46.586 --> 00:20:47.976 A:middle
回味他们曾经点过的

00:20:47.976 --> 00:20:49.166 A:middle
美味的汤

00:20:49.166 --> 00:20:50.066 A:middle
[ 笑声 ]

00:20:50.066 --> 00:20:52.206 A:middle
如果能把这些建议给她们

00:20:52.206 --> 00:20:53.206 A:middle
那将非常棒

00:20:53.726 --> 00:20:54.866 A:middle
让我们去 Xcode 看看

00:20:54.866 --> 00:20:57.346 A:middle
如何实现这个设想

00:20:58.276 --> 00:20:59.596 A:middle
现在我在观看

00:20:59.596 --> 00:21:01.016 A:middle
订单细节视图的

00:20:59.596 --> 00:21:01.016 A:middle
订单细节视图的

00:21:01.016 --> 00:21:01.626 A:middle
viewController

00:21:02.776 --> 00:21:04.766 A:middle
我创建了一个 userActivity

00:21:04.926 --> 00:21:06.026 A:middle
同时我也设定了一个

00:21:06.026 --> 00:21:07.306 A:middle
requiredUserInfoKeys

00:21:07.896 --> 00:21:08.966 A:middle
我还要确保

00:21:08.966 --> 00:21:09.986 A:middle
isEligibleForSearch 为真

00:21:11.316 --> 00:21:14.996 A:middle
为了它能够被建议

00:21:14.996 --> 00:21:16.146 A:middle
我还需要让

00:21:16.146 --> 00:21:16.726 A:middle
isEligibleForPrediction 为真

00:21:22.216 --> 00:21:24.346 A:middle
这样就行了 我们来试一下

00:21:34.226 --> 00:21:35.236 A:middle
首先我需要保证我

00:21:35.236 --> 00:21:36.766 A:middle
递交了 userActivity

00:21:36.766 --> 00:21:39.656 A:middle
我现在返回视图

00:21:39.656 --> 00:21:40.456 A:middle
这样就够了

00:21:40.976 --> 00:21:42.366 A:middle
现在我想确保 Donation

00:21:42.366 --> 00:21:43.696 A:middle
已经发生了

00:21:43.836 --> 00:21:45.476 A:middle
为了确认 我们增加

00:21:45.476 --> 00:21:47.116 A:middle
两项开发者设置

00:21:47.116 --> 00:21:48.916 A:middle
能让它在搜索界面和

00:21:48.916 --> 00:21:50.726 A:middle
锁定屏幕上很容易地看到

00:21:50.726 --> 00:21:51.296 A:middle
最近的 Donation

00:21:51.826 --> 00:21:53.426 A:middle
为了启用这个

00:21:54.126 --> 00:21:55.216 A:middle
我们来到“设置”

00:21:55.216 --> 00:21:56.096 A:middle
滑动到“开发者”这一栏

00:21:57.166 --> 00:21:59.136 A:middle
在最底端有两个新的开关

00:21:59.136 --> 00:22:00.776 A:middle
展示最近的捷径

00:21:59.136 --> 00:22:00.776 A:middle
展示最近的捷径

00:22:00.776 --> 00:22:03.386 A:middle
和在锁定屏幕上展示 Donation

00:22:03.656 --> 00:22:04.386 A:middle
我们打开两个开关

00:22:06.166 --> 00:22:08.236 A:middle
现在我们可以回到主页面

00:22:08.236 --> 00:22:09.906 A:middle
下滑到搜索栏进行搜索

00:22:09.906 --> 00:22:11.416 A:middle
我们可以看到

00:22:11.416 --> 00:22:13.656 A:middle
刚刚完成的 Donation 很好

00:22:14.516 --> 00:22:18.626 A:middle
[ 掌声 ]

00:22:19.126 --> 00:22:20.496 A:middle
我可以轻点它 然后 App

00:22:20.496 --> 00:22:21.556 A:middle
就与 userActivity 一起启动了

00:22:21.556 --> 00:22:23.046 A:middle
并且回到了我刚刚递交的

00:22:23.046 --> 00:22:24.856 A:middle
订单页面

00:22:25.586 --> 00:22:28.846 A:middle
很好 这样很赞

00:22:29.216 --> 00:22:30.826 A:middle
但是我认为我们还能做得更好

00:22:31.316 --> 00:22:33.326 A:middle
因为我们 App 的主要功能

00:22:33.326 --> 00:22:34.856 A:middle
就是订汤

00:22:34.856 --> 00:22:35.846 A:middle
如果它能够把订汤建议给用户

00:22:35.846 --> 00:22:37.556 A:middle
那真是再好不过了

00:22:38.016 --> 00:22:39.426 A:middle
我希望用户可以

00:22:39.426 --> 00:22:40.776 A:middle
不用启动我们的 App

00:22:40.826 --> 00:22:41.086 A:middle
就能达到这个效果

00:22:41.626 --> 00:22:43.756 A:middle
我会使用一个 Intent 来实现

00:22:44.506 --> 00:22:47.536 A:middle
现在还没有内置的订单 Intent

00:22:47.536 --> 00:22:51.196 A:middle
但是在 iOS 12 中

00:22:51.296 --> 00:22:53.116 A:middle
我可以创建一个自定 Intent

00:22:53.116 --> 00:22:54.026 A:middle
我们来试试

00:22:55.826 --> 00:22:58.076 A:middle
首先我们要创建一个

00:22:58.076 --> 00:22:59.896 A:middle
Intent 的定义文件

00:22:59.896 --> 00:23:01.606 A:middle
先选择 “File(文件)”

00:22:59.896 --> 00:23:01.606 A:middle
先选择 “File(文件)”

00:23:02.396 --> 00:23:05.986 A:middle
然后进入 “New（新建）”-“File...”

00:23:05.986 --> 00:23:06.946 A:middle
选择 “SiriKit Definition File"

00:23:08.226 --> 00:23:08.826 A:middle
然后 “Next（继续）”

00:23:09.856 --> 00:23:10.806 A:middle
现在我可以为它命名

00:23:10.806 --> 00:23:12.106 A:middle
我会保留 “Intents” 这个名字

00:23:12.356 --> 00:23:14.116 A:middle
然后放在 “Resources（资源）”文件夹里

00:23:14.166 --> 00:23:15.186 A:middle
好了 现在我准备好了

00:23:15.186 --> 00:23:19.026 A:middle
点按 “Create（创建）” 这里展示的就是

00:23:19.026 --> 00:23:20.206 A:middle
我们的 Intents 定义文件

00:23:20.206 --> 00:23:21.046 A:middle
以及我们的全新 Intents 编辑器

00:23:21.886 --> 00:23:23.106 A:middle
在我添加 Intent 之前

00:23:23.106 --> 00:23:24.456 A:middle
我需要确保

00:23:24.456 --> 00:23:25.526 A:middle
在正确的 Targets 内

00:23:25.526 --> 00:23:26.186 A:middle
包含 Intents 定义文件

00:23:26.526 --> 00:23:28.456 A:middle
正如 Ari 所说 我们需要

00:23:28.456 --> 00:23:30.486 A:middle
在使用 Intent 的所有地方添加 Target

00:23:31.096 --> 00:23:32.976 A:middle
所以我要把它添加在

00:23:32.976 --> 00:23:34.926 A:middle
我们的共享框架中

00:23:34.926 --> 00:23:35.896 A:middle
因为我们使用的是共享框架

00:23:35.896 --> 00:23:38.196 A:middle
我不想让它为 App Target 生成

00:23:38.756 --> 00:23:40.996 A:middle
在下拉菜单中

00:23:40.996 --> 00:23:42.476 A:middle
在 App Target 旁边

00:23:42.476 --> 00:23:43.436 A:middle
我会选择 “No Generated Classes

00:23:45.016 --> 00:23:46.016 A:middle
（无生成类）” 好了

00:23:46.016 --> 00:23:47.096 A:middle
我们可以添加 Intent 了

00:23:47.506 --> 00:23:49.766 A:middle
在左下角点击加号

00:23:49.766 --> 00:23:52.186 A:middle
同时选择

00:23:52.186 --> 00:23:52.776 A:middle
“New Intent（新建 Intent）”

00:23:53.646 --> 00:23:55.986 A:middle
将其命名为 “OrderSoup”

00:23:58.556 --> 00:24:00.726 A:middle
接下来我要选择类别

00:23:58.556 --> 00:24:00.726 A:middle
接下来我要选择类别

00:24:01.006 --> 00:24:02.376 A:middle
在这个例子中

00:24:02.426 --> 00:24:02.766 A:middle
这是一个 “Order”Intent

00:24:03.266 --> 00:24:05.946 A:middle
填写标题 “Order Soup”

00:24:06.486 --> 00:24:08.606 A:middle
然后是描述

00:24:08.786 --> 00:24:10.966 A:middle
“在 Soup Chef 点一碗汤”

00:24:12.236 --> 00:24:13.966 A:middle
因为这涉及到真实世界的交易

00:24:13.966 --> 00:24:15.746 A:middle
我想在提交

00:24:15.746 --> 00:24:17.086 A:middle
订单前确认一下

00:24:17.086 --> 00:24:18.906 A:middle
所以我会选择

00:24:18.906 --> 00:24:20.056 A:middle
要求用户确认

00:24:21.546 --> 00:24:23.366 A:middle
接下来让我们定义参数

00:24:23.776 --> 00:24:25.256 A:middle
我将定义三个参数

00:24:25.256 --> 00:24:27.576 A:middle
一个针对汤

00:24:28.266 --> 00:24:30.016 A:middle
一个针对数量

00:24:30.016 --> 00:24:31.566 A:middle
还有一个针对用户选择的加料选项

00:24:32.056 --> 00:24:35.106 A:middle
首先是汤 我点击 “Parameter” 部分的加号

00:24:35.106 --> 00:24:37.066 A:middle
然后填写名字

00:24:37.296 --> 00:24:38.396 A:middle
“soup（汤）”

00:24:39.186 --> 00:24:41.246 A:middle
因为汤是我们 App 中的定制对象

00:24:41.246 --> 00:24:43.406 A:middle
我将会选择

00:24:44.046 --> 00:24:45.176 A:middle
“Custom（自定义）”类型

00:24:45.726 --> 00:24:47.666 A:middle
接下来 我要添加 “quantity（数量）”

00:24:47.966 --> 00:24:49.566 A:middle
我再次点击加号 填写名字

00:24:49.566 --> 00:24:51.696 A:middle
这次将是一个

00:24:51.746 --> 00:24:52.256 A:middle
“Interger（整数）”类型

00:24:54.346 --> 00:24:56.486 A:middle
接下来是 “options（选项）”

00:24:57.646 --> 00:24:58.756 A:middle
选项是我们的 App 的自定对象

00:24:58.756 --> 00:25:00.836 A:middle
所以我会使用 “Custom” 类型

00:24:58.756 --> 00:25:00.836 A:middle
所以我会使用 “Custom” 类型

00:25:01.846 --> 00:25:03.306 A:middle
因为用户可以选择

00:25:03.306 --> 00:25:04.866 A:middle
多个选项 我还会选中

00:25:04.906 --> 00:25:06.676 A:middle
“Array（数组）”复选框

00:25:07.876 --> 00:25:11.856 A:middle
最后 我们需要定义捷径类型

00:25:11.856 --> 00:25:13.736 A:middle
此时 我将定义一个

00:25:13.736 --> 00:25:17.646 A:middle
包含了所有参数的单一的捷径类型

00:25:18.516 --> 00:25:19.816 A:middle
我会在“捷径类型” 中

00:25:19.816 --> 00:25:22.226 A:middle
点击加号

00:25:22.456 --> 00:25:23.506 A:middle
然后选择我想要包含在

00:25:23.506 --> 00:25:25.236 A:middle
捷径类型中的参数

00:25:25.236 --> 00:25:27.456 A:middle
这样我就能选择汤数量选项了

00:25:27.816 --> 00:25:29.076 A:middle
当我准备好时 点按“添加

00:25:29.076 --> 00:25:30.136 A:middle
捷径 类型”按钮

00:25:31.176 --> 00:25:33.586 A:middle
填写标题订单

00:25:33.586 --> 00:25:35.486 A:middle
然后再插入 “quantity”

00:25:35.576 --> 00:25:39.506 A:middle
以及 “soup” 和 “options”

00:25:39.846 --> 00:25:44.186 A:middle
然后我把副标题留白

00:25:44.186 --> 00:25:45.116 A:middle
因为在标题中

00:25:45.116 --> 00:25:46.726 A:middle
我已经包含了需要的所有信息

00:25:46.896 --> 00:25:49.116 A:middle
我还会选中 “Supports background

00:25:49.116 --> 00:25:50.396 A:middle
execution（支持后台执行）”

00:25:51.266 --> 00:25:52.416 A:middle
因为我想让用户在后台

00:25:52.416 --> 00:25:56.606 A:middle
执行这个 Intent

00:25:56.606 --> 00:25:58.736 A:middle
我们已经定义了我们第一个 Intent

00:25:59.286 --> 00:26:00.116 A:middle
现在让我们来试试

00:25:59.286 --> 00:26:00.116 A:middle
现在让我们来试试

00:26:00.676 --> 00:26:03.016 A:middle
首先我会为我们的 Order 对象

00:26:03.016 --> 00:26:05.426 A:middle
增加两个辅助方法

00:26:05.556 --> 00:26:06.596 A:middle
让它能更简单地

00:26:06.596 --> 00:26:08.016 A:middle
在它和 Intent 之间转换

00:26:08.916 --> 00:26:11.566 A:middle
我现在来到 Order 类

00:26:11.606 --> 00:26:15.536 A:middle
在最底端 我会增加一个 Order 扩展

00:26:16.026 --> 00:26:20.146 A:middle
它包含一个

00:26:20.146 --> 00:26:22.196 A:middle
可以返回 Intent 的系统变量

00:26:22.196 --> 00:26:23.546 A:middle
我在这里创建 Intent

00:26:23.886 --> 00:26:26.266 A:middle
设定汤的数量和

00:26:26.266 --> 00:26:27.926 A:middle
选项 然后返回到 orderSoupIntent

00:26:28.966 --> 00:26:30.316 A:middle
扩展同样也定义了

00:26:30.316 --> 00:26:31.466 A:middle
一个新的源于 Intent 的

00:26:31.466 --> 00:26:31.846 A:middle
初始化程序

00:26:32.556 --> 00:26:34.316 A:middle
在这里 我抽取汤

00:26:34.636 --> 00:26:36.996 A:middle
数量 和选项

00:26:37.046 --> 00:26:38.786 A:middle
然后我用这些数值

00:26:38.956 --> 00:26:40.096 A:middle
初始化订单

00:26:41.056 --> 00:26:42.556 A:middle
很好 这会非常有用

00:26:43.926 --> 00:26:45.256 A:middle
接下来 我需要确保

00:26:45.256 --> 00:26:46.996 A:middle
每次用户下订单的时候

00:26:46.996 --> 00:26:48.156 A:middle
我们都递交了 Intent

00:26:48.726 --> 00:26:50.296 A:middle
所以我来到订汤的

00:26:50.296 --> 00:26:53.026 A:middle
数据管理器

00:26:53.026 --> 00:26:54.656 A:middle
在 placeOrder() 方法中 我会添加

00:26:54.656 --> 00:26:55.436 A:middle
我们的 Donation 逻辑

00:26:57.486 --> 00:26:59.716 A:middle
我声明了一个 INInteraction

00:26:59.716 --> 00:27:01.266 A:middle
它包含了订单的 Intent

00:26:59.716 --> 00:27:01.266 A:middle
它包含了订单的 Intent

00:27:01.266 --> 00:27:03.126 A:middle
然后递交

00:27:03.126 --> 00:27:06.066 A:middle
interaction 就好了

00:27:07.336 --> 00:27:09.036 A:middle
最后 我们需要处理 Intent

00:27:09.366 --> 00:27:11.056 A:middle
首先我需要在 App 中

00:27:11.056 --> 00:27:13.196 A:middle
增加支持

00:27:13.196 --> 00:27:15.196 A:middle
我们打开 AppDelegat.swift

00:27:15.196 --> 00:27:17.086 A:middle
在 continueUserActivity 中

00:27:17.086 --> 00:27:17.686 A:middle
我会为其增加支持

00:27:18.236 --> 00:27:22.086 A:middle
我想要确认 userActivity 的

00:27:22.616 --> 00:27:24.396 A:middle
activityType 是否与我想

00:27:24.396 --> 00:27:26.786 A:middle
处理的 Intent 的类名称一致

00:27:27.216 --> 00:27:29.196 A:middle
如果一致

00:27:29.196 --> 00:27:30.196 A:middle
我会从 userActivity 中提取

00:27:30.196 --> 00:27:32.226 A:middle
Intent 同时生成

00:27:32.226 --> 00:27:32.886 A:middle
一个 Intent

00:27:33.346 --> 00:27:35.276 A:middle
最后 我会展示订单视图

00:27:35.686 --> 00:27:37.426 A:middle
既然我们打开了 App

00:27:37.426 --> 00:27:38.966 A:middle
我假设用户并不想

00:27:38.966 --> 00:27:39.776 A:middle
立刻下订单

00:27:39.776 --> 00:27:41.096 A:middle
而是想在下订单之前

00:27:41.096 --> 00:27:42.746 A:middle
做一些定制

00:27:42.746 --> 00:27:46.036 A:middle
这就是我展示订单视图的原因

00:27:46.846 --> 00:27:50.276 A:middle
最后 让我们增加对

00:27:50.456 --> 00:27:52.556 A:middle
Intent 扩展的支持

00:27:52.556 --> 00:27:54.106 A:middle
这样用户就可以在后台

00:27:54.106 --> 00:27:54.646 A:middle
运行 Intent 了

00:27:55.506 --> 00:27:56.776 A:middle
首先我需要增加一个

00:27:56.776 --> 00:27:58.216 A:middle
Intent 扩展

00:27:58.216 --> 00:28:02.966 A:middle
选择 “File”-“New”“-Target”

00:27:58.216 --> 00:28:02.966 A:middle
选择 “File”-“New”“-Target”

00:28:02.966 --> 00:28:04.446 A:middle
然后选择 “Intents Extention

00:28:05.676 --> 00:28:06.496 A:middle
（Intents 扩展）” 我要为它起个名字

00:28:06.656 --> 00:28:10.286 A:middle
SoupChefIntents 然后点按 “Finish（完成）”

00:28:11.256 --> 00:28:14.956 A:middle
因为我增加了一个我可以使用

00:28:14.956 --> 00:28:17.316 A:middle
Intent 的新 Target

00:28:17.316 --> 00:28:18.166 A:middle
我需要确保

00:28:18.166 --> 00:28:19.316 A:middle
Intent 定义文件

00:28:19.316 --> 00:28:20.386 A:middle
被包含在 Target 中

00:28:20.746 --> 00:28:21.906 A:middle
回到 Intent 定义文件

00:28:21.906 --> 00:28:25.156 A:middle
然后将其增加到 Target 中

00:28:25.716 --> 00:28:27.196 A:middle
我还是不想在 Target 中

00:28:27.196 --> 00:28:28.226 A:middle
生成代码

00:28:28.226 --> 00:28:29.656 A:middle
在下拉菜单中 我选择

00:28:29.656 --> 00:28:33.726 A:middle
“No Generated Classes”

00:28:34.616 --> 00:28:36.976 A:middle
我还希望扩展 Target 能

00:28:36.976 --> 00:28:38.406 A:middle
接入 App 的相同数据

00:28:38.406 --> 00:28:40.066 A:middle
所以我会将其增加到

00:28:40.066 --> 00:28:40.766 A:middle
相同的 App 群组

00:28:41.646 --> 00:28:43.316 A:middle
在项目设定中

00:28:43.316 --> 00:28:47.276 A:middle
我选择 Intents Target

00:28:47.546 --> 00:28:49.146 A:middle
在 “Capability” 页中 我会将其添加到

00:28:49.316 --> 00:28:52.286 A:middle
相同的 App 群组

00:28:52.486 --> 00:28:53.886 A:middle
很好 现在我们就可以

00:28:53.886 --> 00:28:55.226 A:middle
执行与这个 Target

00:28:55.346 --> 00:28:56.916 A:middle
相匹配的 IntentHandler 了

00:28:59.886 --> 00:29:01.626 A:middle
首先 我要引入我们共享的

00:28:59.886 --> 00:29:01.626 A:middle
首先 我要引入我们共享的

00:29:01.626 --> 00:29:02.866 A:middle
框架 SoupKit [ 笑声 ]

00:29:03.956 --> 00:29:08.316 A:middle
因为我们将处理

00:29:08.316 --> 00:29:10.086 A:middle
OrderSoupIntent

00:29:10.086 --> 00:29:11.766 A:middle
这个 IntentHandler 需要

00:29:11.766 --> 00:29:13.606 A:middle
与 OrderSoupIntentHandling 协议相一致

00:29:15.136 --> 00:29:19.356 A:middle
它是作为我们 Intent 的一部分生成的

00:29:21.276 --> 00:29:23.466 A:middle
这个协议有一个必要的方法

00:29:23.466 --> 00:29:25.826 A:middle
也就是 handle() 方法

00:29:25.826 --> 00:29:28.226 A:middle
让我们实现它

00:29:28.876 --> 00:29:31.456 A:middle
在 handle() 方法中

00:29:31.456 --> 00:29:31.926 A:middle
我得到了一个 Intent

00:29:32.746 --> 00:29:33.926 A:middle
我通过那个 Intent 创造了一个订单

00:29:33.926 --> 00:29:36.186 A:middle
如果成功了

00:29:36.186 --> 00:29:38.226 A:middle
我就下了订单

00:29:38.226 --> 00:29:39.416 A:middle
我就会调用 completion()

00:29:39.416 --> 00:29:40.916 A:middle
其中会有 Intent 的响应码 “.success”

00:29:41.706 --> 00:29:43.186 A:middle
如果我不能从 Intent 中

00:29:43.416 --> 00:29:45.016 A:middle
创造一个订单

00:29:45.016 --> 00:29:46.096 A:middle
我也会调用 completion()

00:29:46.096 --> 00:29:47.326 A:middle
但是其中的 Intent 响应码会变成 “.failure”

00:29:47.816 --> 00:29:49.566 A:middle
就是这样

00:29:49.566 --> 00:29:50.946 A:middle
我刚刚在我的 App 里

00:29:50.946 --> 00:29:53.016 A:middle
为一个新 Intent 添加了支持

00:29:53.016 --> 00:29:53.686 A:middle
让我们尝试一下

00:30:04.736 --> 00:30:06.786 A:middle
首先 我需要递交 Intent

00:30:06.856 --> 00:30:08.006 A:middle
我会下另一个订单

00:30:08.566 --> 00:30:10.276 A:middle
点击加号

00:30:10.276 --> 00:30:11.726 A:middle
这次我要订一个有面包丁的

00:30:11.726 --> 00:30:16.896 A:middle
蛤蜊浓汤 我要下单了

00:30:17.996 --> 00:30:19.136 A:middle
现在 如果我重新回到主屏幕并下滑

00:30:19.136 --> 00:30:22.786 A:middle
我可以看到我递交的 Intent 很好

00:30:23.516 --> 00:30:28.196 A:middle
[ 掌声 ]

00:30:28.696 --> 00:30:30.826 A:middle
我可以点击它

00:30:30.826 --> 00:30:32.216 A:middle
现在展示的是一个捷径视图

00:30:32.246 --> 00:30:32.886 A:middle
以及 “Order（点餐）”按钮

00:30:33.266 --> 00:30:34.606 A:middle
如果我点击它

00:30:34.606 --> 00:30:35.646 A:middle
就会直接在后台下单

00:30:35.646 --> 00:30:38.096 A:middle
这样订单就完成了

00:30:38.926 --> 00:30:40.346 A:middle
我可以回到 App

00:30:40.346 --> 00:30:42.106 A:middle
看看它是否预订上了

00:30:42.106 --> 00:30:43.796 A:middle
是的 在我的 App 里有一个新订单

00:30:44.086 --> 00:30:44.976 A:middle
很好 很简单

00:30:45.516 --> 00:30:53.686 A:middle
[ 掌声 ]

00:30:54.186 --> 00:30:55.726 A:middle
除了轻点“点餐”按钮

00:30:55.726 --> 00:30:57.156 A:middle
我还可以点击

00:30:57.156 --> 00:30:58.856 A:middle
捷径视图本身

00:30:58.856 --> 00:31:00.646 A:middle
这将会通过捷径启动 App

00:30:58.856 --> 00:31:00.646 A:middle
这将会通过捷径启动 App

00:31:00.646 --> 00:31:02.586 A:middle
由于我实现的方法

00:31:02.586 --> 00:31:03.686 A:middle
它将会展示订单视图

00:31:03.896 --> 00:31:05.176 A:middle
这里我可以自定义订单

00:31:05.266 --> 00:31:07.576 A:middle
我还可以加上奶酪 谁知道呢

00:31:08.236 --> 00:31:09.496 A:middle
我要下单了

00:31:11.126 --> 00:31:14.396 A:middle
很好 最后 让我们给 Siri

00:31:14.396 --> 00:31:15.516 A:middle
加上捷径

00:31:16.996 --> 00:31:19.156 A:middle
我们来到设置

00:31:19.156 --> 00:31:21.316 A:middle
向上滑到 “Siri 与搜索” 搜索

00:31:22.206 --> 00:31:24.796 A:middle
这里我可以选择我想要添加到 Siri 的捷径

00:31:25.366 --> 00:31:26.856 A:middle
在这个例子中 我要添加

00:31:26.856 --> 00:31:28.636 A:middle
预定一份带面包丁的蛤蜊浓汤

00:31:30.206 --> 00:31:31.456 A:middle
当我选择录音按钮时

00:31:31.456 --> 00:31:32.626 A:middle
我可以说出我想与这个捷径

00:31:32.626 --> 00:31:35.026 A:middle
相关联的短语

00:31:35.456 --> 00:31:36.286 A:middle
“Soup time（喝汤时间）”

00:31:37.446 --> 00:31:38.876 A:middle
这样就好了

00:31:39.516 --> 00:31:45.500 A:middle
[ 掌声 ]

00:31:48.636 --> 00:31:50.296 A:middle
让我们回顾一下

00:31:50.296 --> 00:31:51.516 A:middle
我们刚刚所做的

00:31:51.946 --> 00:31:53.126 A:middle
我们首先让一个

00:31:53.126 --> 00:31:54.856 A:middle
已经在我们 App 中实现的

00:31:54.856 --> 00:31:56.536 A:middle
NSUserActivity 中的

00:31:56.536 --> 00:31:57.226 A:middle
isEligibleForPrediction 为真

00:31:57.886 --> 00:31:59.256 A:middle
这让其可以被建议

00:31:59.376 --> 00:32:00.706 A:middle
同时也是一个接通你 App 内容的

00:31:59.376 --> 00:32:00.706 A:middle
同时也是一个接通你 App 内容的

00:32:00.706 --> 00:32:03.076 A:middle
简单的方法

00:32:04.306 --> 00:32:06.396 A:middle
接下来 我们定义一个自定 Intent

00:32:07.026 --> 00:32:08.806 A:middle
这真的是展示

00:32:08.806 --> 00:32:09.786 A:middle
你的 App 的核心功能的

00:32:09.786 --> 00:32:11.236 A:middle
最好方法

00:32:11.866 --> 00:32:13.536 A:middle
在这个例子中 就是点一碗汤

00:32:13.986 --> 00:32:16.046 A:middle
定义好 Intent 之后

00:32:16.046 --> 00:32:17.136 A:middle
我们要确保每次用户在

00:32:17.136 --> 00:32:18.626 A:middle
App 内下单时

00:32:18.716 --> 00:32:20.196 A:middle
我们都递交了 Intent

00:32:20.196 --> 00:32:23.176 A:middle
最后 我们处理 Intent

00:32:23.176 --> 00:32:25.196 A:middle
不仅是在支持后台运行的

00:32:25.196 --> 00:32:27.266 A:middle
扩展 Target 中的

00:32:27.266 --> 00:32:29.156 A:middle
还有在 App 内的

00:32:29.156 --> 00:32:31.426 A:middle
这样用户就可以

00:32:32.176 --> 00:32:32.426 A:middle
通过捷径 启动 App

00:32:34.066 --> 00:32:35.766 A:middle
现在我们看了如何

00:32:35.766 --> 00:32:37.786 A:middle
采用捷径

00:32:37.786 --> 00:32:39.666 A:middle
接下来我们看看这些捷径 是如何

00:32:39.666 --> 00:32:41.176 A:middle
被建议的以及你可以做些什么

00:32:41.176 --> 00:32:42.866 A:middle
让你的用户看到

00:32:42.866 --> 00:32:44.506 A:middle
可能的最佳建议

00:32:45.096 --> 00:32:48.366 A:middle
每次当一个用户在你的 App 内

00:32:48.366 --> 00:32:50.526 A:middle
完成一个动作并且

00:32:50.526 --> 00:32:53.036 A:middle
你的 App 递交了这个动作

00:32:53.036 --> 00:32:56.726 A:middle
在这个例子中 就是和其他信息

00:32:58.106 --> 00:32:59.906 A:middle
对于时间 我们认为

00:32:59.906 --> 00:33:01.396 A:middle
应该记录一天中的时间

00:32:59.906 --> 00:33:01.396 A:middle
应该记录一天中的时间

00:33:01.736 --> 00:33:02.656 A:middle
或一周中的一天

00:33:03.256 --> 00:33:04.946 A:middle
至于位置

00:33:04.946 --> 00:33:06.216 A:middle
我们会看看用户的

00:33:06.216 --> 00:33:07.286 A:middle
整体位置 然后确定

00:33:07.286 --> 00:33:09.046 A:middle
这是否对于用户来说是一个重要的位置

00:33:09.646 --> 00:33:12.776 A:middle
接下来看看系统如何

00:33:12.776 --> 00:33:14.566 A:middle
利用这些来做出建议

00:33:16.016 --> 00:33:18.526 A:middle
在这里 我们只考虑时间

00:33:19.216 --> 00:33:20.786 A:middle
周一 午饭时间 我预定了一份

00:33:20.786 --> 00:33:22.506 A:middle
加面包丁的番茄汤

00:33:23.766 --> 00:33:25.106 A:middle
晚上的时候我不喜欢面包丁

00:33:25.106 --> 00:33:26.516 A:middle
所以我预定了一份

00:33:26.566 --> 00:33:27.516 A:middle
加红辣椒的番茄汤

00:33:27.516 --> 00:33:30.866 A:middle
第二天的午饭 我再次

00:33:30.866 --> 00:33:32.466 A:middle
预定了加面包丁的番茄汤

00:33:33.326 --> 00:33:34.686 A:middle
我一整周都这样操作

00:33:34.686 --> 00:33:36.966 A:middle
在周五午饭的时候

00:33:37.246 --> 00:33:38.926 A:middle
Siri 可能会尝试给我建议

00:33:39.806 --> 00:33:41.926 A:middle
它会观察我过去的行为

00:33:41.926 --> 00:33:43.286 A:middle
尝试在里面找到规律

00:33:43.806 --> 00:33:45.286 A:middle
如果现在是午餐时间

00:33:45.286 --> 00:33:46.546 A:middle
由于我经常在中午预定

00:33:46.666 --> 00:33:48.486 A:middle
加面包丁的番茄汤

00:33:48.566 --> 00:33:50.486 A:middle
Siri 可能会注意到这点并向我建议

00:33:50.486 --> 00:33:51.986 A:middle
这样很好

00:33:51.986 --> 00:33:53.096 A:middle
这就是我想的

00:33:54.546 --> 00:33:56.196 A:middle
这些都是很高层级的东西

00:33:56.196 --> 00:33:57.546 A:middle
我们来看看

00:33:57.546 --> 00:33:59.526 A:middle
它是如何工作的

00:33:59.706 --> 00:34:00.886 A:middle
我们先从 NSUserActivity 开始

00:33:59.706 --> 00:34:00.886 A:middle
我们先从 NSUserActivity 开始

00:34:01.196 --> 00:34:04.586 A:middle
我们假设一个在《Soup Chef》中

00:34:04.586 --> 00:34:06.346 A:middle
下单界面的 userActivity

00:34:06.676 --> 00:34:09.926 A:middle
用户信息字典可能包含三个 Key

00:34:10.255 --> 00:34:11.985 A:middle
“soup” “quantity” 和 “scrollPosition

00:34:12.485 --> 00:34:13.835 A:middle
（滚动位置）” 由于最后一个的存在

00:34:13.835 --> 00:34:15.036 A:middle
在“接力”中 你可以将用户

00:34:15.036 --> 00:34:17.146 A:middle
带回到他最后所浏览的那个位置

00:34:18.286 --> 00:34:20.246 A:middle
我们看看这要怎么

00:34:20.366 --> 00:34:22.156 A:middle
建议给用户

00:34:22.815 --> 00:34:25.916 A:middle
首先我们递交一个

00:34:25.916 --> 00:34:27.596 A:middle
NSUserActivity

00:34:27.596 --> 00:34:29.716 A:middle
其中汤是 “tomato”

00:34:29.716 --> 00:34:30.926 A:middle
数量是 “1”

00:34:30.926 --> 00:34:31.366 A:middle
滚动位置是 “79.0”

00:34:32.005 --> 00:34:34.076 A:middle
接下来我们递交一个相似的

00:34:34.076 --> 00:34:35.196 A:middle
NSUserActivity

00:34:35.196 --> 00:34:36.686 A:middle
但是滚动位置

00:34:36.686 --> 00:34:37.005 A:middle
却变成了 “110.0”

00:34:38.176 --> 00:34:40.335 A:middle
我们继续操作 在某一时刻

00:34:40.335 --> 00:34:42.376 A:middle
Siri 可能会再次试着寻找一个建议

00:34:42.976 --> 00:34:46.206 A:middle
它会查看过去的行为

00:34:46.206 --> 00:34:47.315 A:middle
然后寻找相同的

00:34:47.406 --> 00:34:48.556 A:middle
NSUserActivity 的规律

00:34:49.295 --> 00:34:52.985 A:middle
由于滚动位置每次都不一致

00:34:52.985 --> 00:34:54.806 A:middle
它可能不会找到合适的建议

00:34:56.346 --> 00:34:58.326 A:middle
那我们要如何修复呢

00:34:59.856 --> 00:35:00.966 A:middle
我们可以使用

00:34:59.856 --> 00:35:00.966 A:middle
我们可以使用

00:35:00.966 --> 00:35:02.366 A:middle
requiredUserInfoKeys

00:35:03.486 --> 00:35:05.046 A:middle
requiredUserInfoKeys 是一种

00:35:05.046 --> 00:35:07.236 A:middle
NSUserActivity 的现有属性

00:35:07.876 --> 00:35:11.066 A:middle
它代表了为了复原 App 到

00:35:11.066 --> 00:35:12.866 A:middle
userActivity 展示的状态

00:35:12.866 --> 00:35:14.336 A:middle
所需的最少的信息数量

00:35:14.336 --> 00:35:17.366 A:middle
至于建议

00:35:17.366 --> 00:35:19.216 A:middle
它会被用来指定

00:35:19.216 --> 00:35:21.026 A:middle
用户信息字典中哪些关键信号

00:35:21.026 --> 00:35:23.466 A:middle
会在寻找规律时用来进行对比

00:35:24.476 --> 00:35:25.856 A:middle
让我们将其应用在

00:35:25.856 --> 00:35:26.326 A:middle
刚刚的例子中

00:35:27.916 --> 00:35:29.166 A:middle
现在我们可以注明

00:35:29.166 --> 00:35:32.176 A:middle
requiredUserInfoKeys 是汤和数量

00:35:32.726 --> 00:35:34.076 A:middle
我们再次递交

00:35:34.076 --> 00:35:36.026 A:middle
汤是 “tomato”

00:35:36.026 --> 00:35:38.066 A:middle
数量是 “1”

00:35:38.066 --> 00:35:39.606 A:middle
滚动位置是 “79.0” 的 userActivity

00:35:39.856 --> 00:35:41.816 A:middle
不过这次滚动位置将被忽略

00:35:42.986 --> 00:35:43.946 A:middle
接下来 我们递交一些

00:35:43.946 --> 00:35:45.556 A:middle
相似的东西 这些滚动位置

00:35:45.556 --> 00:35:46.326 A:middle
也被忽略了

00:35:47.166 --> 00:35:49.546 A:middle
我们一直重复 在某些时刻

00:35:49.546 --> 00:35:51.656 A:middle
Siri 会再次尝试推荐

00:35:53.046 --> 00:35:54.546 A:middle
现在 Siri 会回顾

00:35:54.546 --> 00:35:56.196 A:middle
然后试着为相似的 userActivity 寻找一个规律

00:35:56.196 --> 00:35:57.226 A:middle
因为不再考虑

00:35:57.226 --> 00:35:59.166 A:middle
滚动位置

00:35:59.306 --> 00:36:01.616 A:middle
她可能会想

00:35:59.306 --> 00:36:01.616 A:middle
她可能会想

00:36:01.616 --> 00:36:03.736 A:middle
“一个汤是 ‘tomato’ 数量是 ‘1’ 的

00:36:03.986 --> 00:36:05.546 A:middle
NSUserActivity 可能对这个用户来说

00:36:05.546 --> 00:36:07.056 A:middle
是一个不错的建议”

00:36:08.096 --> 00:36:10.456 A:middle
如你所见

00:36:10.456 --> 00:36:11.796 A:middle
根据需求标明

00:36:11.846 --> 00:36:13.606 A:middle
正确的关键元素很重要

00:36:13.606 --> 00:36:14.946 A:middle
否则你的用户可能

00:36:14.946 --> 00:36:16.306 A:middle
不能获得任何建议

00:36:17.076 --> 00:36:18.696 A:middle
这就是它如何与

00:36:18.696 --> 00:36:19.476 A:middle
userActivity 协作的

00:36:20.826 --> 00:36:23.006 A:middle
Intent 的工作原理与这个相似

00:36:23.006 --> 00:36:24.416 A:middle
但是却更加灵活

00:36:25.386 --> 00:36:29.086 A:middle
Intent 的主要信号是

00:36:29.086 --> 00:36:30.456 A:middle
你定义的捷径类型

00:36:31.866 --> 00:36:33.766 A:middle
每一种捷径类型

00:36:33.766 --> 00:36:35.166 A:middle
都定义了

00:36:35.166 --> 00:36:36.306 A:middle
对于建议来说有效的参数组合

00:36:36.966 --> 00:36:39.036 A:middle
这与 requiredUserInfoKey

00:36:39.276 --> 00:36:40.556 A:middle
有点相似

00:36:40.556 --> 00:36:41.896 A:middle
但是与其只有一个组相比

00:36:42.076 --> 00:36:43.056 A:middle
我们在这里可以定义多个

00:36:43.666 --> 00:36:46.286 A:middle
让我们在《Soup Chef》App 中

00:36:46.286 --> 00:36:48.466 A:middle
应用一下

00:36:48.466 --> 00:36:49.526 A:middle
早些时候 我通过三个参数

00:36:49.526 --> 00:36:51.046 A:middle
即 “soup” “quantity” 和 “options”

00:36:51.046 --> 00:36:53.676 A:middle
定义了一个 OrderSoupIntent

00:36:54.026 --> 00:36:55.566 A:middle
当时 我只定义了

00:36:55.566 --> 00:36:57.426 A:middle
一个包含所有这些参数的单一的捷径类型

00:36:57.466 --> 00:36:59.536 A:middle
但是 理想地说

00:36:59.536 --> 00:37:00.906 A:middle
你可以定义更多捷径类型

00:36:59.536 --> 00:37:00.906 A:middle
你可以定义更多捷径类型

00:37:00.906 --> 00:37:01.876 A:middle
因为这能为系统

00:37:01.876 --> 00:37:04.776 A:middle
寻找用户行为的规律提供了更多选择

00:37:05.596 --> 00:37:07.066 A:middle
现在我要定义三个

00:37:08.136 --> 00:37:09.456 A:middle
一个捷径类型结合了

00:37:09.456 --> 00:37:10.966 A:middle
“soup” 和 “quantity”

00:37:10.966 --> 00:37:12.666 A:middle
一个结合了 “soup” 和 “options”

00:37:12.666 --> 00:37:14.596 A:middle
还有一个结合了三个参数

00:37:15.786 --> 00:37:17.806 A:middle
让我们在另一个例子中看一看

00:37:19.426 --> 00:37:21.586 A:middle
我再次从周一开始

00:37:21.586 --> 00:37:23.136 A:middle
在午餐时间

00:37:23.326 --> 00:37:23.926 A:middle
点一个加面包丁的番茄汤

00:37:24.846 --> 00:37:26.796 A:middle
《Soup Chef》将这个递交给系统

00:37:26.846 --> 00:37:28.836 A:middle
然后系统将会

00:37:28.836 --> 00:37:29.966 A:middle
根据我刚刚定义的

00:37:29.966 --> 00:37:31.556 A:middle
捷径类型

00:37:31.556 --> 00:37:33.806 A:middle
将把它分成

00:37:34.576 --> 00:37:35.396 A:middle
所有可能的组合

00:37:35.396 --> 00:37:36.926 A:middle
当天晚上 我点了一份

00:37:36.926 --> 00:37:37.866 A:middle
加红辣椒的番茄汤

00:37:38.636 --> 00:37:40.696 A:middle
它再次被递交

00:37:40.696 --> 00:37:41.866 A:middle
也被分解成所有

00:37:41.866 --> 00:37:42.746 A:middle
有可能的组合

00:37:44.166 --> 00:37:45.376 A:middle
第二天的午饭 我点了一份

00:37:45.376 --> 00:37:46.786 A:middle
加面包丁的番茄汤

00:37:46.786 --> 00:37:48.456 A:middle
它被递交并分解

00:37:48.456 --> 00:37:50.876 A:middle
我整周都重复这个操作

00:37:50.876 --> 00:37:52.406 A:middle
在周五的午餐时间

00:37:52.626 --> 00:37:53.996 A:middle
Siri 可能会尝试对我建议

00:37:55.076 --> 00:37:56.616 A:middle
它可能会看到

00:37:56.616 --> 00:37:57.876 A:middle
我经常点番茄汤

00:37:59.106 --> 00:38:04.476 A:middle
不过因为是午餐时间

00:37:59.106 --> 00:38:04.476 A:middle
不过因为是午餐时间

00:38:04.476 --> 00:38:06.556 A:middle
它也能看到在午餐时间

00:38:06.556 --> 00:38:08.666 A:middle
我通常会在番茄汤里加面包丁

00:38:09.726 --> 00:38:11.516 A:middle
这是一个更具体的捷径

00:38:11.516 --> 00:38:12.856 A:middle
它最后会

00:38:12.856 --> 00:38:14.746 A:middle
这样建议

00:38:14.746 --> 00:38:16.236 A:middle
所以我可能会被建议

00:38:16.236 --> 00:38:18.166 A:middle
点一份加面包丁的番茄汤

00:38:18.466 --> 00:38:21.516 A:middle
很好 这就是如何

00:38:21.516 --> 00:38:22.456 A:middle
完成建议

00:38:23.296 --> 00:38:24.716 A:middle
现在让我们看看

00:38:24.826 --> 00:38:27.716 A:middle
如何确保这些推荐是好的

00:38:27.716 --> 00:38:29.266 A:middle
首先需要做的是

00:38:29.266 --> 00:38:30.836 A:middle
有一个好的 Donation

00:38:31.546 --> 00:38:34.656 A:middle
一个好的 Donation

00:38:34.656 --> 00:38:36.606 A:middle
应该是一些很大概率重复的东西

00:38:37.576 --> 00:38:39.276 A:middle
对于 userActivity 来说

00:38:39.276 --> 00:38:41.186 A:middle
应该是一些用户经常查看的内容

00:38:41.856 --> 00:38:43.156 A:middle
或者对于 Intents 来说

00:38:43.206 --> 00:38:45.316 A:middle
应该是一些用户会规律做出的动作

00:38:45.316 --> 00:38:48.936 A:middle
你应该确保

00:38:48.936 --> 00:38:50.436 A:middle
你递交的载荷

00:38:50.636 --> 00:38:51.966 A:middle
与你所有的 Donation

00:38:51.966 --> 00:38:53.536 A:middle
都是相一致的 因为这是

00:38:53.536 --> 00:38:55.506 A:middle
系统在寻找规律时

00:38:56.246 --> 00:38:58.196 A:middle
对比的东西

00:38:58.196 --> 00:38:59.906 A:middle
一个好的 Donation 应该不仅包括

00:38:59.906 --> 00:39:01.946 A:middle
时间标记

00:38:59.906 --> 00:39:01.946 A:middle
时间标记

00:39:01.946 --> 00:39:03.726 A:middle
因为当这个 Donation 被推荐时

00:39:03.726 --> 00:39:04.846 A:middle
它可能不会再与

00:39:04.846 --> 00:39:05.426 A:middle
特定时间相关

00:39:06.576 --> 00:39:08.976 A:middle
比如说 一个展示

00:39:08.976 --> 00:39:09.766 A:middle
某个特定日期的会议的

00:39:09.766 --> 00:39:11.396 A:middle
捷径可能没那么有用

00:39:11.396 --> 00:39:12.926 A:middle
因为 如果你第二天

00:39:12.926 --> 00:39:14.586 A:middle
或者之后看到这个提醒

00:39:14.586 --> 00:39:15.756 A:middle
你可能对这个

00:39:15.756 --> 00:39:16.976 A:middle
特定的一天的会面

00:39:16.976 --> 00:39:18.026 A:middle
不再感兴趣了

00:39:19.156 --> 00:39:20.716 A:middle
一个有着相对时间的捷径

00:39:20.716 --> 00:39:22.626 A:middle
却更加有用

00:39:23.236 --> 00:39:27.646 A:middle
你应该确保

00:39:27.646 --> 00:39:29.636 A:middle
你为每一个用户行动

00:39:29.636 --> 00:39:31.416 A:middle
进行一次递交

00:39:31.416 --> 00:39:33.036 A:middle
即便那个用户行动包括

00:39:33.036 --> 00:39:34.606 A:middle
在你 App 内多次的行动

00:39:35.236 --> 00:39:37.116 A:middle
最后 为你的 Intent

00:39:37.116 --> 00:39:39.216 A:middle
选择正确的参数也是非常重要的

00:39:39.646 --> 00:39:40.616 A:middle
所以我们来看一下

00:39:40.616 --> 00:39:42.376 A:middle
两种可能的类型

00:39:42.376 --> 00:39:42.836 A:middle
首先是枚举

00:39:43.556 --> 00:39:46.026 A:middle
你可以在 Intent 旁边的

00:39:46.026 --> 00:39:47.696 A:middle
Intent 定义文件中

00:39:47.696 --> 00:39:49.566 A:middle
定义枚举

00:39:49.566 --> 00:39:53.106 A:middle
并将其作为你参数的类型

00:39:53.596 --> 00:39:55.486 A:middle
我们建议每当

00:39:55.546 --> 00:39:56.596 A:middle
参数的数值有界时

00:39:56.596 --> 00:39:57.666 A:middle
你都使用枚举

00:39:58.296 --> 00:39:59.776 A:middle
比如说 如果你想为

00:39:59.776 --> 00:40:01.476 A:middle
OrderSoupIntent 添加一个

00:39:59.776 --> 00:40:01.476 A:middle
OrderSoupIntent 添加一个

00:40:01.476 --> 00:40:03.206 A:middle
规格参数 那么将其

00:40:03.206 --> 00:40:04.546 A:middle
做成枚举可能会比较有意义

00:40:04.546 --> 00:40:06.036 A:middle
因为可能的规格一般是

00:40:06.036 --> 00:40:07.986 A:middle
小份 中份 大份

00:40:09.916 --> 00:40:11.016 A:middle
使用枚举可以为你的用户提供

00:40:11.016 --> 00:40:12.956 A:middle
更好的建议和

00:40:12.956 --> 00:40:14.806 A:middle
更清晰的标题和副标题

00:40:15.646 --> 00:40:17.176 A:middle
想要学习更多关于

00:40:17.176 --> 00:40:18.716 A:middle
如何用枚举生成标题和

00:40:18.716 --> 00:40:20.296 A:middle
副标题的内容

00:40:20.296 --> 00:40:21.706 A:middle
我建议大家观看本地化讲座

00:40:22.206 --> 00:40:25.076 A:middle
另一个你可以使用的类型是

00:40:25.076 --> 00:40:25.736 A:middle
“Custom（自定）”类型

00:40:27.116 --> 00:40:28.556 A:middle
使用自定类型最终会

00:40:28.556 --> 00:40:29.836 A:middle
得到一个 INObject

00:40:29.836 --> 00:40:31.116 A:middle
并生成 Intent 代码

00:40:32.156 --> 00:40:33.426 A:middle
INObject 结合了

00:40:33.426 --> 00:40:35.516 A:middle
一个标识符和一个显示字符串

00:40:36.336 --> 00:40:38.566 A:middle
这个标识符可以用来

00:40:38.566 --> 00:40:40.086 A:middle
指代你的 App 中的

00:40:40.086 --> 00:40:42.066 A:middle
一个内部对象

00:40:42.066 --> 00:40:43.126 A:middle
显示字符串则包含

00:40:43.126 --> 00:40:45.066 A:middle
一个标识符和一个代表形式

00:40:45.946 --> 00:40:47.516 A:middle
这样你的用户和 App

00:40:47.516 --> 00:40:49.306 A:middle
都可以知道

00:40:49.496 --> 00:40:50.856 A:middle
这个参数的数值是多少

00:40:52.196 --> 00:40:54.666 A:middle
最后 使用一个 INObjec

00:40:54.666 --> 00:40:56.096 A:middle
也会防止参数之间

00:40:56.096 --> 00:40:56.966 A:middle
可能出现的依赖性

00:40:57.676 --> 00:40:59.866 A:middle
让我来示范一下

00:41:00.206 --> 00:41:02.606 A:middle
总共有两种办法来

00:41:02.606 --> 00:41:04.296 A:middle
代表拥有一个字符串的

00:41:04.296 --> 00:41:06.306 A:middle
标识符的融合

00:41:06.346 --> 00:41:07.966 A:middle
你可以为你的 Intent

00:41:07.966 --> 00:41:09.156 A:middle
增加两个参数

00:41:09.156 --> 00:41:10.516 A:middle
一个是给标识符

00:41:10.516 --> 00:41:12.726 A:middle
一个是给显示字符串

00:41:12.726 --> 00:41:16.536 A:middle
或者你还可以使用 INObject 来增加单个

00:41:16.536 --> 00:41:17.586 A:middle
如果用第一种方法

00:41:17.586 --> 00:41:18.366 A:middle
你会有一个依赖

00:41:18.366 --> 00:41:19.716 A:middle
因为显示字符串依赖于

00:41:20.196 --> 00:41:21.936 A:middle
被标识符引用的对象

00:41:21.936 --> 00:41:24.456 A:middle
我们不鼓励这类

00:41:24.456 --> 00:41:25.696 A:middle
依赖的产生

00:41:25.696 --> 00:41:27.246 A:middle
因为在我们之后建议 Intent 时

00:41:27.246 --> 00:41:28.486 A:middle
这些依赖可能会引发问题

00:41:29.186 --> 00:41:34.106 A:middle
一个好的捷径还应该

00:41:34.106 --> 00:41:35.676 A:middle
拥有一个可以理解的标题

00:41:35.926 --> 00:41:37.376 A:middle
副标题 还有图像

00:41:38.056 --> 00:41:39.116 A:middle
它应该展现当用户

00:41:39.116 --> 00:41:40.306 A:middle
点击捷径时会发生什么

00:41:40.306 --> 00:41:42.236 A:middle
因为这是用户在

00:41:42.236 --> 00:41:43.376 A:middle
与其互动前

00:41:43.616 --> 00:41:44.666 A:middle
看到的唯一的东西

00:41:44.916 --> 00:41:46.716 A:middle
当然了 你应该测试你的捷径

00:41:46.716 --> 00:41:47.926 A:middle
来保证它们

00:41:47.926 --> 00:41:49.066 A:middle
看起来是正确的

00:41:49.066 --> 00:41:50.266 A:middle
而且他们会像预期的

00:41:51.056 --> 00:41:52.106 A:middle
那样工作

00:41:52.106 --> 00:41:52.316 A:middle
有一些方法来做到这点

00:41:52.426 --> 00:41:55.096 A:middle
正如我早些时候展示给你的

00:41:55.096 --> 00:41:56.396 A:middle
我们增加了两个新的开发者设置

00:41:56.526 --> 00:41:57.716 A:middle
可以让你在搜索界面

00:41:57.716 --> 00:41:59.406 A:middle
和锁定屏幕上

00:41:59.406 --> 00:42:00.746 A:middle
看到你最近的 Donation

00:41:59.406 --> 00:42:00.746 A:middle
看到你最近的 Donation

00:42:00.746 --> 00:42:02.116 A:middle
而不是你常规的 Siri 推荐

00:42:03.306 --> 00:42:04.636 A:middle
打开这个你就可以看到

00:42:04.636 --> 00:42:05.946 A:middle
当这些 Donation 被建议时

00:42:05.946 --> 00:42:06.796 A:middle
你的用户会看到的东西

00:42:06.796 --> 00:42:09.676 A:middle
你可以试着与其互动

00:42:09.676 --> 00:42:10.666 A:middle
这样就能保证

00:42:10.666 --> 00:42:11.076 A:middle
它能按预期工作

00:42:11.076 --> 00:42:13.856 A:middle
另外一个测试你的

00:42:14.306 --> 00:42:15.846 A:middle
捷径的方法

00:42:15.846 --> 00:42:16.316 A:middle
就是将其添加到 Siri

00:42:17.116 --> 00:42:18.556 A:middle
一个测试它们的简单方法就是

00:42:18.596 --> 00:42:20.406 A:middle
通过编辑 Xcode Scheme

00:42:20.406 --> 00:42:21.726 A:middle
在不需要重复短语

00:42:21.726 --> 00:42:23.356 A:middle
的情况下

00:42:23.356 --> 00:42:23.796 A:middle
来自动唤醒 Siri

00:42:25.796 --> 00:42:27.626 A:middle
在 Intent 扩展的 Scheme 编辑器中

00:42:27.626 --> 00:42:28.976 A:middle
有一个 Siri Intent Query 栏

00:42:28.976 --> 00:42:31.956 A:middle
你可以用它来提供

00:42:31.956 --> 00:42:32.856 A:middle
唤醒 Siri 的语音

00:42:33.166 --> 00:42:36.416 A:middle
最后 你可以在捷径 App 中

00:42:36.416 --> 00:42:38.206 A:middle
创建一个自定捷径

00:42:38.206 --> 00:42:39.546 A:middle
来使用你的捷径

00:42:41.306 --> 00:42:42.736 A:middle
这允许你测试

00:42:42.736 --> 00:42:44.116 A:middle
当你的捷径与从捷径 App

00:42:44.116 --> 00:42:45.186 A:middle
中的其他捷径

00:42:45.186 --> 00:42:46.906 A:middle
或者步骤捆绑在一起的

00:42:46.906 --> 00:42:48.306 A:middle
你的捷径的表现

00:42:49.296 --> 00:42:52.616 A:middle
我们已经看到了

00:42:52.616 --> 00:42:54.796 A:middle
什么是好的 Donation

00:42:54.896 --> 00:42:56.636 A:middle
以及如何向用户建议这个 Donation

00:42:57.356 --> 00:42:59.086 A:middle
我们再来看看一些

00:42:59.086 --> 00:43:00.086 A:middle
关于隐私的考虑

00:42:59.086 --> 00:43:00.086 A:middle
关于隐私的考虑

00:43:00.086 --> 00:43:01.776 A:middle
以及如何确保

00:43:01.776 --> 00:43:03.236 A:middle
你的用户

00:43:03.236 --> 00:43:04.966 A:middle
不对给他们的建议感到失望

00:43:08.046 --> 00:43:09.426 A:middle
你的用户希望当他们

00:43:09.426 --> 00:43:10.626 A:middle
从你的 App 中删除一些东西时

00:43:10.626 --> 00:43:12.286 A:middle
这个删除是永久的

00:43:12.946 --> 00:43:15.706 A:middle
这一点很重要

00:43:15.706 --> 00:43:17.066 A:middle
这样你就可以获得你用户的信任

00:43:17.146 --> 00:43:18.626 A:middle
他们也不会

00:43:18.626 --> 00:43:20.176 A:middle
再收到与他们想要的

00:43:20.176 --> 00:43:21.946 A:middle
毫不相关的信息了

00:43:22.986 --> 00:43:25.076 A:middle
如果你的捷径

00:43:25.076 --> 00:43:26.606 A:middle
包含一些用户可以删除的

00:43:26.606 --> 00:43:28.106 A:middle
信息 你应该

00:43:28.106 --> 00:43:29.596 A:middle
在合适的时间

00:43:29.716 --> 00:43:31.506 A:middle
删除它们

00:43:32.176 --> 00:43:33.246 A:middle
我们来看看

00:43:33.246 --> 00:43:35.226 A:middle
如何删除

00:43:35.226 --> 00:43:36.016 A:middle
从 NSUserActivity 开始

00:43:39.376 --> 00:43:41.506 A:middle
有两种方法来删除一个

00:43:41.506 --> 00:43:42.696 A:middle
已递交的 userActivity

00:43:43.766 --> 00:43:45.276 A:middle
如果你使用“聚焦”索引

00:43:45.396 --> 00:43:46.286 A:middle
你可以设定

00:43:46.286 --> 00:43:48.206 A:middle
relatedUniqueIdentifier

00:43:48.206 --> 00:43:49.256 A:middle
然后从“聚焦”删除的内容

00:43:49.256 --> 00:43:50.616 A:middle
就会自动

00:43:50.616 --> 00:43:51.786 A:middle
删除递交的

00:43:51.786 --> 00:43:52.346 A:middle
userActivity

00:43:53.966 --> 00:43:54.436 A:middle
只需要在 contentAttributeSet 里

00:43:54.436 --> 00:43:56.056 A:middle
将 relatedUniqueIdentifier

00:43:56.056 --> 00:43:59.056 A:middle
设定为与可搜索的对象

00:43:59.056 --> 00:44:00.476 A:middle
相匹配的标识符

00:43:59.056 --> 00:44:00.476 A:middle
相匹配的标识符

00:44:01.316 --> 00:44:04.576 A:middle
接着 当可搜寻对象被删除时

00:44:04.576 --> 00:44:06.516 A:middle
它会自动删除 userActivity

00:44:07.146 --> 00:44:10.746 A:middle
如果你不使用“聚焦”索引

00:44:10.746 --> 00:44:12.266 A:middle
你可以使用

00:44:12.266 --> 00:44:13.926 A:middle
NSUserActivity 中的

00:44:14.196 --> 00:44:15.366 A:middle
持续标识符属性

00:44:15.996 --> 00:44:17.746 A:middle
这是一个你可以设置的新属性

00:44:17.746 --> 00:44:19.276 A:middle
这样你就可以追踪你的

00:44:19.276 --> 00:44:21.446 A:middle
userActivity 并在合适的时间

00:44:21.446 --> 00:44:23.506 A:middle
删除它们

00:44:24.476 --> 00:44:27.406 A:middle
要想使用它

00:44:27.406 --> 00:44:28.886 A:middle
只需要在递交 userActivity 前

00:44:29.026 --> 00:44:30.646 A:middle
设定 persistentIdentifier 属性

00:44:31.536 --> 00:44:32.536 A:middle
如果你想要将其删除

00:44:32.536 --> 00:44:33.526 A:middle
你可以调用

00:44:33.526 --> 00:44:35.316 A:middle
deleteSavedUserActivities

00:44:35.316 --> 00:44:37.056 A:middle
并填入你想要删除的标识符

00:44:37.826 --> 00:44:39.166 A:middle
你还可以删除所有

00:44:39.166 --> 00:44:40.306 A:middle
递交的 userActivity

00:44:41.386 --> 00:44:42.746 A:middle
比如说 当你的用户

00:44:42.746 --> 00:44:44.376 A:middle
退出登录时

00:44:44.376 --> 00:44:46.916 A:middle
你可以调用 deleteAllSavedUserActivities

00:44:48.576 --> 00:44:50.256 A:middle
Intents 拥有现成的 API

00:44:50.256 --> 00:44:51.536 A:middle
与新的 userActivity

00:44:51.536 --> 00:44:53.436 A:middle
API 相似

00:44:54.336 --> 00:44:56.476 A:middle
因为你通过 INInteraction 主导

00:44:56.636 --> 00:44:58.166 A:middle
Intent 的 Donation

00:44:58.166 --> 00:44:59.656 A:middle
删除 Intent 也会通过

00:44:59.656 --> 00:45:00.586 A:middle
INInteraction 发生

00:44:59.656 --> 00:45:00.586 A:middle
INInteraction 发生

00:45:01.496 --> 00:45:03.816 A:middle
一个 INInteraction 拥有一个

00:45:03.856 --> 00:45:04.916 A:middle
标识符和一组

00:45:04.916 --> 00:45:06.386 A:middle
你可以设置的标识符性能

00:45:06.386 --> 00:45:08.086 A:middle
然后用它来删除

00:45:08.086 --> 00:45:10.086 A:middle
一个或多个已经递交的 interaction

00:45:10.556 --> 00:45:13.986 A:middle
在递交 interaction 前

00:45:13.986 --> 00:45:16.546 A:middle
设定标识符或组识别符

00:45:17.586 --> 00:45:18.676 A:middle
当你想要删除时

00:45:18.676 --> 00:45:20.616 A:middle
你可以调用 delete

00:45:20.616 --> 00:45:22.866 A:middle
并填入你想删除的标识符阵列

00:45:23.706 --> 00:45:25.426 A:middle
你还可以通过调用delete

00:45:25.426 --> 00:45:27.076 A:middle
并填入组标识符

00:45:27.076 --> 00:45:28.836 A:middle
删除所有拥有

00:45:29.066 --> 00:45:30.176 A:middle
同样组标识符的已递交 Intent

00:45:30.266 --> 00:45:33.386 A:middle
最后 就如

00:45:33.386 --> 00:45:34.796 A:middle
NSUserActivity 一样

00:45:34.796 --> 00:45:36.146 A:middle
有一种可以删除

00:45:36.146 --> 00:45:38.746 A:middle
所有你递交的 Intent 的方法

00:45:38.746 --> 00:45:39.426 A:middle
即在 INInteraction 调用 deleteAll

00:45:40.796 --> 00:45:42.766 A:middle
请确保在合适的时机

00:45:42.766 --> 00:45:44.456 A:middle
并填入你想删除的 Donation

00:45:45.046 --> 00:45:46.016 A:middle
这会给你的用户

00:45:46.016 --> 00:45:47.736 A:middle
最好的建议

00:45:47.736 --> 00:45:48.976 A:middle
也不会让他们思考

00:45:48.976 --> 00:45:49.986 A:middle
为什么会给他们建议

00:45:49.986 --> 00:45:53.976 A:middle
与他们毫无关联的信息

00:45:55.326 --> 00:45:56.206 A:middle
我们已经观看了

00:45:56.206 --> 00:45:57.386 A:middle
在创造和递交捷径时

00:45:57.546 --> 00:45:59.836 A:middle
应该考虑的事情

00:45:59.836 --> 00:46:02.386 A:middle
让我们最后简单地

00:45:59.836 --> 00:46:02.386 A:middle
让我们最后简单地

00:46:02.386 --> 00:46:04.336 A:middle
看一下怎么创造

00:46:04.336 --> 00:46:06.756 A:middle
最好的媒体捷径

00:46:07.376 --> 00:46:10.486 A:middle
我们创建了一个与捷径

00:46:10.486 --> 00:46:11.936 A:middle
配合很好的新 Intent

00:46:12.426 --> 00:46:13.426 A:middle
这个 Intent 被称作

00:46:13.506 --> 00:46:15.396 A:middle
INPlayMediaIntent

00:46:15.396 --> 00:46:17.326 A:middle
它可以允许你创建和递交

00:46:17.646 --> 00:46:19.256 A:middle
可以播放音频或视频内容的捷径

00:46:20.616 --> 00:46:23.056 A:middle
处理扩展中的 Intent 时

00:46:23.056 --> 00:46:24.406 A:middle
你可以选择

00:46:24.406 --> 00:46:26.346 A:middle
在你的 App 后台处理它

00:46:26.496 --> 00:46:28.896 A:middle
这可以让你直接从你的 App

00:46:28.896 --> 00:46:30.946 A:middle
开始音频播放

00:46:35.546 --> 00:46:36.646 A:middle
除了在搜索界面

00:46:36.646 --> 00:46:38.026 A:middle
或者锁定屏幕上被建议

00:46:38.686 --> 00:46:39.936 A:middle
拥有这个 Intent 的捷径

00:46:39.936 --> 00:46:41.186 A:middle
也应该在用户

00:46:41.186 --> 00:46:42.736 A:middle
连接耳机时

00:46:42.736 --> 00:46:43.966 A:middle
在锁定屏幕上被播放控制所推荐

00:46:43.966 --> 00:46:46.056 A:middle
这样用户可以

00:46:46.056 --> 00:46:47.126 A:middle
更容易地

00:46:47.126 --> 00:46:48.456 A:middle
听到你的内容

00:46:49.736 --> 00:46:52.556 A:middle
最后 拥有这个 Intent 的捷径

00:46:52.556 --> 00:46:54.226 A:middle
在 HomePod 上

00:46:54.226 --> 00:46:54.746 A:middle
也运行得很好

00:46:55.916 --> 00:46:58.236 A:middle
只需要在你的 iPhone 上

00:46:58.356 --> 00:47:01.016 A:middle
对 Siri 增加一个播放媒体的捷径

00:46:58.356 --> 00:47:01.016 A:middle
对 Siri 增加一个播放媒体的捷径

00:47:01.016 --> 00:47:02.216 A:middle
然后在你的 HomePod 上唤醒它

00:47:02.216 --> 00:47:03.866 A:middle
这个音频就会在你的手机上

00:47:04.056 --> 00:47:06.746 A:middle
通过 HomePod 播放

00:47:08.296 --> 00:47:11.636 A:middle
我们还创建了一个新 API

00:47:11.636 --> 00:47:14.366 A:middle
来让你能告诉系统

00:47:14.366 --> 00:47:16.146 A:middle
它可能会感兴趣的内容

00:47:18.646 --> 00:47:20.086 A:middle
这对于周期性的内容来说

00:47:20.086 --> 00:47:21.216 A:middle
非常棒

00:47:21.216 --> 00:47:22.496 A:middle
因为你想要建议给用户的

00:47:22.496 --> 00:47:24.976 A:middle
是他们之前没有听过或看过的内容

00:47:28.206 --> 00:47:29.966 A:middle
这里有一些我们为了

00:47:30.026 --> 00:47:31.576 A:middle
制作好的媒体捷径

00:47:31.576 --> 00:47:32.526 A:middle
而增加的东西

00:47:33.476 --> 00:47:34.886 A:middle
现在 让我们总结一下

00:47:34.886 --> 00:47:35.616 A:middle
刚刚说的内容

00:47:39.086 --> 00:47:41.156 A:middle
捷径可以让你的 App

00:47:41.156 --> 00:47:44.116 A:middle
有着强有力的 全新的体验

00:47:44.116 --> 00:47:46.546 A:middle
它通过将你的 App

00:47:46.546 --> 00:47:48.316 A:middle
在不同的地方连通

00:47:48.446 --> 00:47:49.846 A:middle
从而为吸引用户提供了

00:47:49.846 --> 00:47:50.896 A:middle
一个新方法

00:47:51.226 --> 00:47:53.126 A:middle
比如在搜索界面上 在锁定屏幕上

00:47:53.746 --> 00:47:55.046 A:middle
在 Apple Watch 上的 Siri 表盘上

00:47:55.046 --> 00:47:57.106 A:middle
以及通过 Siri 自身搜索

00:47:57.616 --> 00:48:00.616 A:middle
你可以在新的捷径 App 中使用它

00:47:57.616 --> 00:48:00.616 A:middle
你可以在新的捷径 App 中使用它

00:48:01.486 --> 00:48:03.316 A:middle
你可以通过使用 NSUserActivity

00:48:03.316 --> 00:48:04.766 A:middle
来采用捷径

00:48:04.766 --> 00:48:06.326 A:middle
这是一种展示 App 内容的

00:48:06.326 --> 00:48:07.346 A:middle
简单方法

00:48:08.246 --> 00:48:11.526 A:middle
你还可以采用与系统

00:48:11.526 --> 00:48:12.556 A:middle
有更深的融合的 Intent

00:48:12.556 --> 00:48:14.296 A:middle
从而为你的用户

00:48:14.296 --> 00:48:15.416 A:middle
解锁一个

00:48:15.416 --> 00:48:16.976 A:middle
全新的体验

00:48:17.516 --> 00:48:22.546 A:middle
[ 掌声 ]

00:48:23.046 --> 00:48:24.706 A:middle
如果想要了解更多的信息

00:48:24.706 --> 00:48:26.386 A:middle
我们的会议号码是 211 你可以在

00:48:26.386 --> 00:48:28.176 A:middle
developer.Apple.com 上找到我们的页面

00:48:28.686 --> 00:48:29.986 A:middle
你还可以在这周内

00:48:29.986 --> 00:48:30.526 A:middle
去我们的实验室找我们

00:48:31.116 --> 00:48:32.776 A:middle
感谢你的聆听

00:48:32.846 --> 00:48:34.276 A:middle
我们迫不及待地想要看到

00:48:34.276 --> 00:48:35.266 A:middle
你创建的捷径

00:48:35.806 --> 00:48:36.976 A:middle
祝你在接下来的会议愉快

00:48:37.516 --> 00:48:40.500 A:middle
[ 掌声 ]
