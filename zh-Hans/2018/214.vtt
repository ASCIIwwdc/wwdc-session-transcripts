WEBVTT

00:00:16.750 --> 00:00:22.055 align:middle line:0
（用Siri Shortcuts
创建语音 演讲214）

00:00:24.992 --> 00:00:29.396 align:middle line:-2
大家好 欢迎来到
用Siri Shortcuts创建语音

00:00:30.063 --> 00:00:33.834 align:middle line:-2
我叫Amit 今天一同前来的
还有同事Ayaka Nonaka

00:00:34.168 --> 00:00:37.771 align:middle line:-2
在此向大家介绍Shortcuts
我们感到激动万分

00:00:39.106 --> 00:00:44.044 align:middle line:-2
大家都知道
快捷方式能让用户

00:00:44.344 --> 00:00:46.980 align:middle line:-2
快速访问
app中最重要的东西

00:00:47.748 --> 00:00:49.783 align:middle line:-1
我们感到非常兴奋的是

00:00:50.384 --> 00:00:53.820 align:middle line:-2
用户可以
把这些快捷方式添加到Siri

00:00:54.555 --> 00:00:57.357 align:middle line:-2
随时随地都可以
用语音来操作快捷方式

00:00:58.458 --> 00:01:02.296 align:middle line:-1
最重要的是我们要为

00:00:58.458 --> 00:01:02.296 align:middle line:-1
最重要的是我们要为

00:01:02.362 --> 00:01:04.831 align:middle line:-2
所有用语音访问快捷方式的用户
构建优质语音体验

00:01:05.532 --> 00:01:07.334 align:middle line:-1
这就是我们今天的重点

00:01:07.968 --> 00:01:08.969 align:middle line:-1
好了 我们开始吧

00:01:10.404 --> 00:01:15.576 align:middle line:-2
首先我们讨论的是
用户如何在Siri添加快捷方式

00:01:15.876 --> 00:01:19.446 align:middle line:-1
而且立刻上手去用是多么简单

00:01:20.781 --> 00:01:26.019 align:middle line:-1
接着就会讨论如何通过自定义响应

00:01:26.320 --> 00:01:27.621 align:middle line:-1
建立Siri能应答的对话

00:01:28.555 --> 00:01:31.358 align:middle line:-1
之后Ayaka将讲解一些最佳实践

00:01:31.425 --> 00:01:32.526 align:middle line:-1
大家采用这些方法就可以

00:01:32.593 --> 00:01:36.530 align:middle line:-2
为快捷方式创建
优质的语音和用户界面体验

00:01:37.297 --> 00:01:39.433 align:middle line:-1
在最后我们会讲

00:01:39.499 --> 00:01:44.304 align:middle line:-2
如何在大家的app中
设置快捷方式

00:01:47.508 --> 00:01:51.378 align:middle line:-2
在深入探讨
采用快捷方式和自定义响应

00:01:51.445 --> 00:01:54.181 align:middle line:-1
这些激动人心的内容之前

00:01:54.882 --> 00:02:00.153 align:middle line:-2
让我们来看一看
如何用Siri设置快捷方式

00:01:54.882 --> 00:02:00.153 align:middle line:-2
让我们来看一看
如何用Siri设置快捷方式

00:02:01.622 --> 00:02:03.123 align:middle line:-1
（向Siri添加快捷方式）

00:02:03.190 --> 00:02:07.094 align:middle line:-2
我和我的团队开发了
这款app 叫做Soup Chef

00:02:07.694 --> 00:02:09.295 align:middle line:-1
你可以用它订购汤

00:02:10.564 --> 00:02:14.668 align:middle line:-2
现在Soup Chef采用了
我们所有的快捷方式API

00:02:15.435 --> 00:02:17.671 align:middle line:-1
每当有用户下单

00:02:18.272 --> 00:02:23.477 align:middle line:-2
Soup Chef就会向Siri
发送一条自定义意图来通知系统

00:02:25.112 --> 00:02:29.183 align:middle line:-2
好 昨天我订购了一份番茄汤
味道真的不错

00:02:30.117 --> 00:02:33.053 align:middle line:-1
太美味了以至于我还想再次订购

00:02:33.921 --> 00:02:36.723 align:middle line:-2
如果我只用Siri就能订购
那该多好啊

00:02:37.624 --> 00:02:38.525 align:middle line:-1
没错 我们现在就可以

00:02:40.727 --> 00:02:45.666 align:middle line:-2
当我们进入Siri的设置界面
就会看到Siri建议

00:02:45.732 --> 00:02:49.102 align:middle line:-2
将已生成意图
创建为快捷方式

00:02:50.037 --> 00:02:51.138 align:middle line:-1
好 我们点一下

00:02:51.205 --> 00:02:52.372 align:middle line:-1
（添加到Siri）

00:02:52.439 --> 00:02:56.109 align:middle line:-2
然后我们来到这个界面
我们可以设置一个短语

00:02:56.410 --> 00:02:58.645 align:middle line:-2
你向Siri说该短语
就能执行相应快捷方式

00:02:59.146 --> 00:03:01.915 align:middle line:-2
我作为用户 也能在屏幕上
看到Soup Chef

00:02:59.146 --> 00:03:01.915 align:middle line:-2
我作为用户 也能在屏幕上
看到Soup Chef

00:03:01.982 --> 00:03:06.019 align:middle line:-2
发过来的很多详细信息
显示该快捷方式具体做什么

00:03:06.587 --> 00:03:09.056 align:middle line:-2
怎么做到正确无误呢
过一会儿再讨论

00:03:09.590 --> 00:03:13.260 align:middle line:-1
现在我把一个短语绑定到该快捷方式

00:03:13.694 --> 00:03:14.995 align:middle line:-1
短语要简洁

00:03:15.062 --> 00:03:18.031 align:middle line:-2
要容易记住
我可以一遍又一遍地说

00:03:18.966 --> 00:03:22.603 align:middle line:-2
并不总是那么容易
马上就能想起来

00:03:22.669 --> 00:03:26.907 align:middle line:-2
我会看到Soup Chef
建议我称之为Soup Time

00:03:27.574 --> 00:03:29.409 align:middle line:-1
我喜欢 我就用它了

00:03:30.811 --> 00:03:32.746 align:middle line:-1
现在 我录制该短语之后

00:03:34.348 --> 00:03:37.651 align:middle line:-1
我就有了用Siri订汤的快捷方式

00:03:38.385 --> 00:03:39.319 align:middle line:-1
让我们试一下

00:03:40.521 --> 00:03:43.423 align:middle line:-2
现在我向Siri说：
“Soup Time”

00:03:44.491 --> 00:03:46.960 align:middle line:-1
就会让我确认是否要执行该意图

00:03:48.195 --> 00:03:50.898 align:middle line:-2
然后当我说：“是”
订单就会发送

00:03:50.998 --> 00:03:52.432 align:middle line:-1
就是这么简单

00:03:54.101 --> 00:03:58.338 align:middle line:-2
大家的用户会
为最常用的东西设置快捷方式

00:03:58.805 --> 00:04:03.577 align:middle line:-2
随时随地都可以使用这些
快捷方式 用iOS设备

00:03:58.805 --> 00:04:03.577 align:middle line:-2
随时随地都可以使用这些
快捷方式 用iOS设备

00:04:03.810 --> 00:04:08.482 align:middle line:-2
用手腕上的Apple Watch
在家里使用HomePod

00:04:08.549 --> 00:04:10.984 align:middle line:-1
在路途中还能用CarPlay车载

00:04:11.818 --> 00:04:14.254 align:middle line:-1
所以 我们要特别关注

00:04:14.922 --> 00:04:17.658 align:middle line:-1
用户的语音体验

00:04:19.192 --> 00:04:23.530 align:middle line:-2
为了这一目标
让我们讨论一下自定义响应

00:04:23.597 --> 00:04:24.765 align:middle line:-1
（自定义响应）

00:04:24.831 --> 00:04:30.337 align:middle line:-2
使用快捷方式你可以建立
Siri能够应答的对话

00:04:30.771 --> 00:04:34.308 align:middle line:-1
你就能用语音来提供相关信息

00:04:34.374 --> 00:04:37.110 align:middle line:-1
重要信息

00:04:38.612 --> 00:04:43.050 align:middle line:-2
从根本上来说
自定义响应就是模板字符串

00:04:43.350 --> 00:04:45.686 align:middle line:-2
它的结构
是在意图定义文件中定义的

00:04:47.888 --> 00:04:51.625 align:middle line:-2
根据你在响应中
递送的信息类型

00:04:52.092 --> 00:04:54.094 align:middle line:-1
快捷方式可以分为四类

00:04:55.062 --> 00:04:59.499 align:middle line:-1
第一类是确认自定义响应

00:04:59.566 --> 00:05:01.101 align:middle line:-2
（BEAN说：“你订的咖啡
4.95美元” 要预订吗？）

00:04:59.566 --> 00:05:01.101 align:middle line:-2
（BEAN说：“你订的咖啡
4.95美元” 要预订吗？）

00:05:01.168 --> 00:05:05.572 align:middle line:-2
这让你有机会
在用户确定要执行快捷方式之前

00:05:05.639 --> 00:05:07.574 align:middle line:-1
递送正确无误的信息

00:05:09.710 --> 00:05:12.212 align:middle line:-1
第二类是成功响应

00:05:12.813 --> 00:05:16.950 align:middle line:-2
这让你有机会
在快捷方式运行之后

00:05:17.017 --> 00:05:20.754 align:middle line:-2
递送相关的辅助信息
成功响应的构成包含

00:05:21.121 --> 00:05:25.893 align:middle line:-1
Siri通知用户订单已成功下达

00:05:26.426 --> 00:05:28.061 align:middle line:-1
或者快捷方式已成功运行

00:05:28.495 --> 00:05:32.299 align:middle line:-2
后面紧接着是
你递送的和app有关的信息

00:05:32.366 --> 00:05:34.168 align:middle line:-2
（BEAN说：“10分钟后
来取拿铁）

00:05:34.835 --> 00:05:38.705 align:middle line:-2
第三类自定义响应
是信息响应

00:05:38.839 --> 00:05:40.841 align:middle line:-1
对此我们感到振奋不已

00:05:40.908 --> 00:05:42.409 align:middle line:-2
（COMMUTE说：“尤利卡35路车
将在4分钟后到达卡斯楚区第17站”）

00:05:42.476 --> 00:05:45.812 align:middle line:-1
信息响应可以让你递送一些信息

00:05:45.879 --> 00:05:52.753 align:middle line:-2
如交通时刻表或滑雪预告
仅用Siri语音即可完成

00:05:53.487 --> 00:05:56.456 align:middle line:-1
这就为全新种类的app打开了大门

00:05:56.790 --> 00:05:58.825 align:middle line:-1
在Siri之前这是不可能的

00:06:01.061 --> 00:06:01.895 align:middle line:-1
最后一类

00:06:02.563 --> 00:06:04.798 align:middle line:-1
如果事情不能按预期进行

00:06:05.499 --> 00:06:09.269 align:middle line:-2
自定义错误响应
让你有机会解释

00:06:09.336 --> 00:06:13.207 align:middle line:-2
哪里出错了 而不是仅仅说
“出现异常错误”

00:06:14.074 --> 00:06:18.045 align:middle line:-1
其构成包含Siri向用户通知

00:06:18.111 --> 00:06:20.414 align:middle line:-1
他们的意图没有执行成功

00:06:20.814 --> 00:06:25.519 align:middle line:-2
后面是app的信息
和Siri打断的交互

00:06:25.586 --> 00:06:28.222 align:middle line:-1
提示用户要继续操作app

00:06:31.158 --> 00:06:34.695 align:middle line:-2
既然我们清楚了
什么是自定义响应

00:06:36.663 --> 00:06:40.467 align:middle line:-2
我们就来看一看
如何在app中使用它们

00:06:43.070 --> 00:06:47.741 align:middle line:-1
自定义响应与自定义意图协同工作

00:06:48.408 --> 00:06:51.278 align:middle line:-1
所以 第一步就要定义一个意图

00:06:51.578 --> 00:06:54.748 align:middle line:-2
意图作为模板产生用例
快捷方式就是为用例创建的

00:06:54.815 --> 00:06:56.250 align:middle line:-1
（采用自定义响应）

00:06:56.316 --> 00:07:01.054 align:middle line:-2
我们为Soup Chef创建了
一个意图 叫OrderSoup

00:06:56.316 --> 00:07:01.054 align:middle line:-2
我们为Soup Chef创建了
一个意图 叫OrderSoup

00:07:01.355 --> 00:07:02.923 align:middle line:-1
你能猜到 订汤

00:07:06.226 --> 00:07:10.230 align:middle line:-2
创建意图的同时
你要为意图选一个类型

00:07:10.631 --> 00:07:14.902 align:middle line:-2
你选择的类型
会影响Siri回应它的方式

00:07:15.202 --> 00:07:18.372 align:middle line:-2
或在不同系统间的内容显示
就像订购按钮

00:07:19.072 --> 00:07:23.243 align:middle line:-2
所以 选择的种类要感觉自然
要与用例相搭配

00:07:25.045 --> 00:07:30.150 align:middle line:-2
我们已经定义好了自定义意图
再来看响应选项卡

00:07:30.984 --> 00:07:32.486 align:middle line:-1
在响应选项卡里

00:07:32.553 --> 00:07:36.623 align:middle line:-2
你可以看到已经有了
成功和失败对应的响应代码

00:07:37.124 --> 00:07:39.226 align:middle line:-1
但这些只是泛型响应代码

00:07:39.293 --> 00:07:43.163 align:middle line:-2
除了操作状态以外
不会传达更多信息

00:07:43.897 --> 00:07:44.932 align:middle line:-1
我想做的是

00:07:45.399 --> 00:07:50.204 align:middle line:-2
让用户知道
他们的订单还有多久可以好

00:07:50.270 --> 00:07:51.939 align:middle line:-1
他们什么时候可以到店里来取

00:07:52.840 --> 00:07:56.243 align:middle line:-2
所以 我想做的就是
为此定义一个自定义成功响应

00:07:57.144 --> 00:07:57.978 align:middle line:-1
为了这一目标

00:07:59.279 --> 00:08:05.986 align:middle line:-1
下一步就是声明响应属性

00:07:59.279 --> 00:08:05.986 align:middle line:-1
下一步就是声明响应属性

00:08:06.286 --> 00:08:10.123 align:middle line:-2
响应属性将会用于模板中
并在运行时递送信息

00:08:11.425 --> 00:08:13.460 align:middle line:-1
去看属性区

00:08:14.528 --> 00:08:17.331 align:middle line:-2
我要添加一个waitTime属性
和一个soup属性

00:08:19.633 --> 00:08:22.102 align:middle line:-2
这些做好之后
在定义自定义响应这部分

00:08:22.169 --> 00:08:26.573 align:middle line:-1
剩余要做的只有定义模板

00:08:27.007 --> 00:08:29.776 align:middle line:-1
模板就是Siri答复的内容

00:08:31.311 --> 00:08:34.748 align:middle line:-2
那么 我们来看
意图定义文件中的模板部分

00:08:35.849 --> 00:08:38.251 align:middle line:-1
现在我要添加成功模板

00:08:40.020 --> 00:08:40.854 align:middle line:-1
不仅如此

00:08:41.522 --> 00:08:44.892 align:middle line:-2
我家的店变得受欢迎了
这些天汤几乎卖完了

00:08:45.192 --> 00:08:48.595 align:middle line:-2
那么 如果我能告诉用户
汤已经售完了

00:08:48.896 --> 00:08:51.198 align:middle line:-2
而不是仅仅发送一个随机错误
那会多好

00:08:51.832 --> 00:08:56.236 align:middle line:-2
所以 我要添加另外一个响应代码
叫做“失败 已经卖完”

00:08:56.803 --> 00:08:59.973 align:middle line:-1
用该模板来通知汤已经售完

00:09:02.976 --> 00:09:06.446 align:middle line:-2
到此为止
我们已经定义好了意图响应

00:09:06.780 --> 00:09:07.981 align:middle line:-1
你做的时候

00:09:08.048 --> 00:09:12.886 align:middle line:-2
Xcode会自动生成
一个自定义响应子类

00:09:13.353 --> 00:09:16.456 align:middle line:-2
该子类含有
你定义的所有属性

00:09:16.990 --> 00:09:19.793 align:middle line:-2
以及为模板制定的
自定义构造函数

00:09:19.860 --> 00:09:22.462 align:middle line:-2
自定义构造函数含有
用来构造模板的

00:09:22.529 --> 00:09:23.830 align:middle line:-1
所有重要属性

00:09:27.701 --> 00:09:29.770 align:middle line:-1
剩下最后一步要做的就是

00:09:29.837 --> 00:09:32.706 align:middle line:-1
将这些响app在意图处理器

00:09:35.008 --> 00:09:40.848 align:middle line:-2
处理一个自定义意图包含
两个步骤：确认和处理

00:09:42.282 --> 00:09:43.283 align:middle line:-1
确认步骤中

00:09:44.218 --> 00:09:48.288 align:middle line:-2
会询问我们此时是否准备好
要处理该意图

00:09:49.323 --> 00:09:54.862 align:middle line:-2
所以 我们首先会得知
用户订的汤是否在我们的菜单中

00:09:56.230 --> 00:09:59.967 align:middle line:-2
如果是 我们会告知系统
我们准备要下单了

00:10:01.001 --> 00:10:05.205 align:middle line:-2
这也让我们有机会确定
此时还有汤

00:10:05.272 --> 00:10:06.940 align:middle line:-1
并且我们能够下达该订单

00:10:07.441 --> 00:10:08.308 align:middle line:-1
好 就这么做

00:10:09.610 --> 00:10:11.979 align:middle line:-2
首先 我要获取一个
菜单项的引用

00:10:13.413 --> 00:10:15.115 align:middle line:-1
然后检查是否有货

00:10:15.782 --> 00:10:20.187 align:middle line:-2
如果没货 我就要调用
完成处理器

00:10:20.487 --> 00:10:22.322 align:middle line:-1
里面是新的自定义失败售完响应代码

00:10:24.591 --> 00:10:27.628 align:middle line:-2
如果情况还不错的话
我们就如前所述继续往下

00:10:28.495 --> 00:10:34.201 align:middle line:-2
这也让我们有机会
发送自定义确认响应

00:10:34.601 --> 00:10:37.404 align:middle line:-2
对这些的支持
在后面几部分

00:10:38.639 --> 00:10:40.307 align:middle line:-1
好 这就是确认

00:10:41.942 --> 00:10:44.044 align:middle line:-1
现在该处理该意图了

00:10:44.411 --> 00:10:47.681 align:middle line:-2
对我们来说 就是要
下达订购汤的订单

00:10:47.781 --> 00:10:49.616 align:middle line:-1
那么 我要根据意图中

00:10:49.683 --> 00:10:52.753 align:middle line:-2
出现的所有信息
创建一个订单

00:10:54.221 --> 00:10:56.823 align:middle line:-1
然后用订单管理器下单

00:10:57.324 --> 00:10:59.826 align:middle line:-2
如果成功
我们就要调用带有成功响应代码

00:11:00.027 --> 00:11:03.096 align:middle line:-2
的完成处理器
以通知系统

00:11:04.097 --> 00:11:08.635 align:middle line:-2
然而 因为我们定义了
自定义成功响应模板

00:11:09.036 --> 00:11:11.438 align:middle line:-1
我们就有机会递送等待时间

00:11:12.539 --> 00:11:13.507 align:middle line:-1
好 我们继续

00:11:15.609 --> 00:11:20.414 align:middle line:-2
通过这 我们为自定义意图
添加了两个

00:11:21.081 --> 00:11:22.149 align:middle line:-1
很有用的自定义响应

00:11:24.051 --> 00:11:24.952 align:middle line:-1
我们看看怎么样

00:11:27.020 --> 00:11:31.158 align:middle line:-2
在之前 我们能让用户
知道的是“你的订单已下达”

00:11:32.226 --> 00:11:36.964 align:middle line:-2
但现在 Siri会答复
客户应在十分钟后

00:11:37.364 --> 00:11:40.100 align:middle line:-1
来店里 这非常有用

00:11:42.169 --> 00:11:43.770 align:middle line:-1
要看错误信息的话

00:11:43.837 --> 00:11:46.573 align:middle line:-2
易用性方面的提升是
非常突出的

00:11:47.541 --> 00:11:50.077 align:middle line:-2
之前 对不起
app出现了问题

00:11:50.777 --> 00:11:54.982 align:middle line:-2
而现在 我们能让用户
知道汤已经卖完了

00:11:55.315 --> 00:11:58.051 align:middle line:-1
之后他们就可以决定要做什么

00:11:58.318 --> 00:12:02.589 align:middle line:-2
他们可以app订购
其它东西或者稍后再试

00:11:58.318 --> 00:12:02.589 align:middle line:-2
他们可以app订购
其它东西或者稍后再试

00:12:06.193 --> 00:12:10.831 align:middle line:-2
好 可以看到Siri和快捷方式
可以让你制作自定义对话

00:12:12.533 --> 00:12:13.600 align:middle line:-1
但不止这些

00:12:14.234 --> 00:12:17.337 align:middle line:-1
作为和汤有关的工程师

00:12:17.671 --> 00:12:21.508 align:middle line:-1
我们努力为用户打造最佳体验

00:12:28.749 --> 00:12:33.620 align:middle line:-2
如果在所有运行app的地方都把
这些体验从app转移到快捷方式

00:12:33.687 --> 00:12:35.722 align:middle line:-1
那该有多好

00:12:36.523 --> 00:12:40.127 align:middle line:-2
利用Intents UI Extension
你就可以做到

00:12:41.461 --> 00:12:45.632 align:middle line:-2
Intents UI Extension
可以让你从app到快捷方式

00:12:45.699 --> 00:12:48.635 align:middle line:-1
制作自定义和熟悉的用户界面

00:12:48.702 --> 00:12:50.737 align:middle line:-1
可以跨所有系统显示

00:12:51.104 --> 00:12:54.641 align:middle line:-2
在锁屏上 在搜索
当然 都要通过Siri完成

00:12:56.009 --> 00:13:00.647 align:middle line:-2
要了解更多如何构建
强大的Intents UI Extension

00:12:56.009 --> 00:13:00.647 align:middle line:-2
要了解更多如何构建
强大的Intents UI Extension

00:13:01.014 --> 00:13:04.251 align:middle line:-1
请看一看2017年WWDC

00:13:04.318 --> 00:13:05.385 align:middle line:-1
“SiriKit有何新特性？”

00:13:07.087 --> 00:13:11.358 align:middle line:-2
我们已为Soup Chef app
创建了自定义Intents UI Extension

00:13:11.692 --> 00:13:12.893 align:middle line:-1
让我们看看怎么样

00:13:13.660 --> 00:13:15.963 align:middle line:-1
我们就是从这里拓展开来

00:13:16.864 --> 00:13:19.499 align:middle line:-2
但有了自定义
Intents UI Extension

00:13:19.900 --> 00:13:24.204 align:middle line:-2
现在我就能向用户展示
完整清单并确信

00:13:24.271 --> 00:13:28.242 align:middle line:-2
我们把所有事情都搞定了
还有价格是2.95

00:13:28.308 --> 00:13:31.011 align:middle line:-2
在他们下单之前
这是特别有用的

00:13:32.312 --> 00:13:35.349 align:middle line:-2
用户下单以后
并不是仅仅说“已完成”

00:13:36.717 --> 00:13:41.021 align:middle line:-2
我们现在可以向用户显示订单已收到
并再次确认我们把所有事情都搞定了

00:13:41.221 --> 00:13:43.423 align:middle line:-1
他们应该在十分钟后去那里

00:13:45.826 --> 00:13:49.930 align:middle line:-1
好了 你已经看到

00:13:49.997 --> 00:13:53.901 align:middle line:-2
为自定义用户界面
和自定义响应添加支持是多么简单

00:13:54.668 --> 00:13:57.804 align:middle line:-2
来看看我们在
Soup Chef是怎么做的

00:13:59.573 --> 00:14:02.676 align:middle line:-1
（演示）

00:13:59.573 --> 00:14:02.676 align:middle line:-1
（演示）

00:14:13.987 --> 00:14:17.124 align:middle line:-2
好了 现在你看到的
就是我们的Soup Chef app

00:14:19.226 --> 00:14:21.328 align:middle line:-1
如果去看意图定义文件

00:14:21.662 --> 00:14:25.199 align:middle line:-2
你可以看到我们定义了
一个自定义OrderSoup意图

00:14:25.999 --> 00:14:29.069 align:middle line:-1
该意图属于订购种类

00:14:30.971 --> 00:14:34.408 align:middle line:-2
现在来看和该意图
关联的响应部分

00:14:35.309 --> 00:14:38.245 align:middle line:-1
这里有属性部分和模板部分

00:14:38.645 --> 00:14:42.616 align:middle line:-2
我要做的就是
添加我们刚才讨论的

00:14:42.683 --> 00:14:44.151 align:middle line:-1
自定义成功响应

00:14:44.918 --> 00:14:47.421 align:middle line:-2
好 我们先来添加
等待时间属性

00:14:47.721 --> 00:14:52.259 align:middle line:-2
我点击添加按钮
把该属性命名为waitTime

00:14:52.860 --> 00:14:57.497 align:middle line:-2
设置为String类型
这样我就可以在发送到对话之前

00:14:57.564 --> 00:14:59.299 align:middle line:-1
把日期设定为感觉合适的格式

00:15:00.934 --> 00:15:05.939 align:middle line:-2
为了再次确认用户订的哪种汤
我还要添加soup属性

00:15:06.473 --> 00:15:11.745 align:middle line:-2
在app中soup是自定义对象
所以 我要选择Custom类型

00:15:14.381 --> 00:15:16.717 align:middle line:-1
现在 让我们来看响应代码

00:15:17.117 --> 00:15:19.319 align:middle line:-1
有一个失败代码和一个成功代码

00:15:20.554 --> 00:15:25.826 align:middle line:-2
现在 我要定义
等待时间响应模板

00:15:25.893 --> 00:15:26.727 align:middle line:-1
好 就这样

00:15:28.061 --> 00:15:35.002 align:middle line:-2
你的soup将会在
waitTime后做好

00:15:37.371 --> 00:15:40.641 align:middle line:-2
我还要添加
售完错误代码

00:15:41.175 --> 00:15:45.779 align:middle line:-2
于此 我点击添加按钮
再创建一个响应代码

00:15:46.079 --> 00:15:50.751 align:middle line:-1
命名为failureOutOfStock

00:15:52.319 --> 00:15:56.757 align:middle line:-2
因为这是错误代码
我取消勾选成功复选框

00:15:57.691 --> 00:16:00.661 align:middle line:-2
现在最后一步
为它定义模板

00:15:57.691 --> 00:16:00.661 align:middle line:-2
现在最后一步
为它定义模板

00:16:01.628 --> 00:16:07.000 align:middle line:-1
“对不起 汤已售完”

00:16:09.603 --> 00:16:13.040 align:middle line:-2
到此为止 我们就定义好了
自定义响应

00:16:13.373 --> 00:16:16.109 align:middle line:-2
现在 我们再去看
意图处理器文件

00:16:24.751 --> 00:16:25.586 align:middle line:-1
好了

00:16:27.487 --> 00:16:28.322 align:middle line:-1
就这里

00:16:29.089 --> 00:16:32.626 align:middle line:-2
可以看到 我们这里有个
confirm方法和handle方法

00:16:33.093 --> 00:16:34.461 align:middle line:-1
首先来看confirm方法

00:16:35.028 --> 00:16:38.265 align:middle line:-1
我们找出用户要哪种汤

00:16:38.799 --> 00:16:43.036 align:middle line:-2
然后用菜单管理器检查
我们的菜单上有没有这种汤

00:16:43.470 --> 00:16:45.973 align:middle line:-2
如果有
我们就返回响应代码“就绪”

00:16:47.074 --> 00:16:48.509 align:middle line:-1
这里我想做的是

00:16:48.575 --> 00:16:53.146 align:middle line:-1
检查这道汤现在还能不能订

00:16:53.413 --> 00:16:57.751 align:middle line:-2
那么首先 我们用menuItem
从MenuManager获取引用

00:16:59.419 --> 00:17:01.555 align:middle line:-1
然后 我要检查是否有货

00:16:59.419 --> 00:17:01.555 align:middle line:-1
然后 我要检查是否有货

00:17:06.926 --> 00:17:10.230 align:middle line:-2
如果没有 我就要调用
完成处理器

00:17:10.297 --> 00:17:12.232 align:middle line:-2
并有新加的
failureOutOfStock错误

00:17:18.405 --> 00:17:21.340 align:middle line:-2
并且要提供
用户所要的soup对象

00:17:25.546 --> 00:17:29.683 align:middle line:-2
好了 我们就准备好了
自定义错误代码

00:17:30.117 --> 00:17:31.351 align:middle line:-1
让我们去看处理器

00:17:32.419 --> 00:17:35.822 align:middle line:-2
处理该意图
也就是订购汤

00:17:36.356 --> 00:17:39.793 align:middle line:-2
那么首先 我们从意图类
创建order对象

00:17:41.295 --> 00:17:43.830 align:middle line:-2
然后
用orderManager下单

00:17:44.364 --> 00:17:48.836 align:middle line:-2
最后 通知系统
已成功下单

00:17:49.570 --> 00:17:53.440 align:middle line:-2
这让我们有机会
向用户递送更多有用信息

00:17:53.507 --> 00:17:54.341 align:middle line:-1
例如等待时间

00:17:54.675 --> 00:17:58.078 align:middle line:-2
所以 在调用成功处理器时
就用新加的自定义响应代码

00:18:03.884 --> 00:18:07.688 align:middle line:-2
有了soup和waitTime后
该响应模板作用更大

00:18:08.488 --> 00:18:11.592 align:middle line:-1
所以 我要通过意图类提供这些

00:18:19.366 --> 00:18:21.668 align:middle line:-2
然后就能从order
获取waitTime

00:18:24.972 --> 00:18:25.806 align:middle line:-1
就是如此

00:18:27.374 --> 00:18:34.381 align:middle line:-2
好 大家看到了向自定义响应
和自定义意图添加支持是多么简单

00:18:35.849 --> 00:18:40.320 align:middle line:-2
开始要定义一个
用于用例的自定义意图

00:18:40.888 --> 00:18:41.922 align:middle line:-1
之后

00:18:41.989 --> 00:18:46.193 align:middle line:-2
定义你想要Siri应答的
自定义响应

00:18:46.493 --> 00:18:49.396 align:middle line:-2
最后 你把自定义响应
传递到意图处理器

00:18:50.330 --> 00:18:55.202 align:middle line:-2
刚才我下了这份汤的订单
所以我得回去取

00:18:55.936 --> 00:18:59.573 align:middle line:-1
好 请欢迎我的同事

00:18:59.873 --> 00:19:03.477 align:middle line:-2
她将向大家讲解一些最佳实践
你采用这些方法

00:18:59.873 --> 00:19:03.477 align:middle line:-2
她将向大家讲解一些最佳实践
你采用这些方法

00:19:03.810 --> 00:19:07.447 align:middle line:-2
就能创建优质的语音
和用户界面体验

00:19:07.681 --> 00:19:09.249 align:middle line:-1
谢谢大家并欢迎Ayaka

00:19:09.316 --> 00:19:14.788 align:middle line:-2
（Siri Shortcuts
最佳实践）

00:19:14.855 --> 00:19:15.689 align:middle line:-1
非常感谢

00:19:20.127 --> 00:19:23.230 align:middle line:-2
各位好
正如刚才Amit所介绍的

00:19:23.297 --> 00:19:25.832 align:middle line:-2
Siri Shortcuts
特别容易上手

00:19:26.300 --> 00:19:29.436 align:middle line:-2
一旦生成了快捷方式
系统就会建议

00:19:29.503 --> 00:19:33.006 align:middle line:-2
通过Siri
直接使用该快捷方式

00:19:33.941 --> 00:19:37.878 align:middle line:-2
我将向大家介绍更多新的
快捷方式API以及最佳实践

00:19:37.945 --> 00:19:40.380 align:middle line:-1
以有助于带给用户最佳体验

00:19:40.681 --> 00:19:41.715 align:middle line:-1
我知道大家很关心这点

00:19:41.782 --> 00:19:44.551 align:middle line:-1
因为用户会注意到这些小细节

00:19:44.618 --> 00:19:47.054 align:middle line:-2
以及你在app中
投入的大量心血

00:19:48.288 --> 00:19:51.491 align:middle line:-2
如果你看过第一场演讲
“Siri Shortcuts简介”

00:19:51.558 --> 00:19:53.861 align:middle line:-1
你会知道有两种方式来生成快捷方式

00:19:54.361 --> 00:19:56.463 align:middle line:-2
第一种方式是
通过NSUserActivity

00:19:57.297 --> 00:20:00.400 align:middle line:-2
如果你要做基本的整合
用户活动就足够了

00:19:57.297 --> 00:20:00.400 align:middle line:-2
如果你要做基本的整合
用户活动就足够了

00:20:00.701 --> 00:20:02.135 align:middle line:-1
你可以打开app

00:20:02.202 --> 00:20:04.605 align:middle line:-2
并向用户展示
一条特定内容

00:20:05.439 --> 00:20:07.207 align:middle line:-1
第二种方式是通过Intents

00:20:07.941 --> 00:20:10.611 align:middle line:-2
如果你想要做稍深的整合
Intents就很好用

00:20:10.677 --> 00:20:14.448 align:middle line:-2
你可以在后台运行东西
并在Siri内完成

00:20:14.515 --> 00:20:17.417 align:middle line:-1
所以你就不必在这之外

00:20:17.484 --> 00:20:18.552 align:middle line:-1
完成和用户的交互

00:20:19.753 --> 00:20:23.790 align:middle line:-2
对于NSUserActivity
和Intents 我们可以设置

00:20:23.857 --> 00:20:24.858 align:middle line:-1
好几个参数

00:20:25.859 --> 00:20:27.327 align:middle line:-1
第一个是标题

00:20:28.562 --> 00:20:30.163 align:middle line:-2
此时就是
Order Clam Chowder

00:20:30.797 --> 00:20:34.735 align:middle line:-2
下面是副标题
后面接着图像 最后是

00:20:34.801 --> 00:20:37.871 align:middle line:-2
推荐的调用短语
后面你会看到

00:20:39.339 --> 00:20:41.975 align:middle line:-2
对于每一个参数 我们将谈到
最佳配置方法

00:20:42.442 --> 00:20:44.845 align:middle line:-1
好 先来看标题和副标题

00:20:46.547 --> 00:20:48.715 align:middle line:-2
那么 当你想到
标题和副标题

00:20:48.782 --> 00:20:51.451 align:middle line:-2
你应该记住
两个首要的东西

00:20:52.286 --> 00:20:53.921 align:middle line:-1
首先 标题应当显示

00:20:53.987 --> 00:20:56.390 align:middle line:-2
当用户运行快捷方式时
会发生什么

00:20:56.757 --> 00:21:00.227 align:middle line:-2
在用户运行快捷方式之前
或把快捷方式添加到Siri之前

00:20:56.757 --> 00:21:00.227 align:middle line:-2
在用户运行快捷方式之前
或把快捷方式添加到Siri之前

00:21:00.294 --> 00:21:02.196 align:middle line:-1
他们一定想知道到底会发生什么

00:21:03.430 --> 00:21:07.267 align:middle line:-2
第二 副标题会提供
更多信息 但只在需要时使用

00:21:08.435 --> 00:21:10.637 align:middle line:-1
好了 我们更深入探讨其中的细节

00:21:12.406 --> 00:21:15.108 align:middle line:-2
首先要做的就是
句子首字母大写

00:21:15.175 --> 00:21:18.812 align:middle line:-2
这是为了确保
对于不同的app和快捷方式

00:21:18.879 --> 00:21:20.681 align:middle line:-1
我们要提供相同的体验

00:21:22.349 --> 00:21:25.085 align:middle line:-1
接着 让标题简洁明了是非常重要的

00:21:25.485 --> 00:21:26.553 align:middle line:-1
因为我们面对的

00:21:26.620 --> 00:21:29.189 align:middle line:-2
会是非常有限的
屏幕实际使用面积

00:21:29.690 --> 00:21:32.526 align:middle line:-2
如果你语言能力够好的话
可以通过省略冠词来做到这一点

00:21:32.593 --> 00:21:33.961 align:middle line:-1
比如“a”和“an”

00:21:35.729 --> 00:21:38.665 align:middle line:-2
然后 特别重要的是
要包含关键信息

00:21:38.966 --> 00:21:42.736 align:middle line:-2
举个例子 如果你有一个app
可以让你向朋友转账

00:21:42.803 --> 00:21:46.106 align:middle line:-2
并且你为该app设置了快捷方式
显示美元总额

00:21:46.173 --> 00:21:47.674 align:middle line:-1
或其他货币总额是非常重要的

00:21:48.108 --> 00:21:49.443 align:middle line:-1
这种情况下大概在标题位置

00:21:51.845 --> 00:21:55.382 align:middle line:-2
然后如果我们用Intents工作
重要的是要包含一个动词

00:21:55.449 --> 00:21:56.783 align:middle line:-1
并且如果你用的是英语

00:21:56.850 --> 00:21:59.820 align:middle line:-2
我们应把动词放在句首
并把动词放在短语前面

00:22:01.421 --> 00:22:04.625 align:middle line:-2
最后一条仍然重要 要确保
我们为世界上每个人

00:22:04.691 --> 00:22:07.895 align:middle line:-2
提供快捷方式体验
本地化就非常重要

00:22:09.596 --> 00:22:11.999 align:middle line:-2
好 来看看
我们应避免的一些问题

00:22:12.799 --> 00:22:15.702 align:middle line:-2
那么 首先不需要含有的
是app的名称

00:22:16.236 --> 00:22:19.139 align:middle line:-2
这是因为我们的用户界面
已经添加了app的名称

00:22:19.206 --> 00:22:21.642 align:middle line:-2
不含这一项的话
你可以节省更多空间

00:22:23.610 --> 00:22:26.713 align:middle line:-2
第二 我们不需要在标题中
添加重复信息

00:22:26.780 --> 00:22:28.348 align:middle line:-1
副标题是一样道理

00:22:28.415 --> 00:22:31.018 align:middle line:-2
要为重要信息
节省空间 留出余地

00:22:33.287 --> 00:22:35.556 align:middle line:-2
最后
我们不希望使用引号

00:22:35.622 --> 00:22:38.392 align:middle line:-2
除非你引用的东西
要一字不差地

00:22:38.458 --> 00:22:39.493 align:middle line:-1
在快捷方式中展现

00:22:39.560 --> 00:22:41.828 align:middle line:-2
例如 如果你有一个
发送信息的快捷方式

00:22:41.895 --> 00:22:45.365 align:middle line:-1
你就可以为信息内容加引号

00:22:47.267 --> 00:22:49.203 align:middle line:-1
好 让我们来看一个例子

00:22:51.905 --> 00:22:54.675 align:middle line:-2
例中说“一份Soup Chef
的蛤蜊浓汤

00:22:54.875 --> 00:22:56.643 align:middle line:-2
订汤最佳方式
Soup Chef”

00:22:57.811 --> 00:22:59.680 align:middle line:-1
仅仅根据大家的了解

00:22:59.746 --> 00:23:02.850 align:middle line:-2
我觉得大家都会认为
例中结果不好

00:22:59.746 --> 00:23:02.850 align:middle line:-2
我觉得大家都会认为
例中结果不好

00:23:03.417 --> 00:23:04.518 align:middle line:-1
我们尝试把它改好点

00:23:05.485 --> 00:23:08.755 align:middle line:-2
好 首先比较容易的就是
省略“Soup Chef的”

00:23:08.822 --> 00:23:12.025 align:middle line:-2
因为你可以看到 该用户界面中
已经包含了Soup Chef

00:23:14.161 --> 00:23:16.096 align:middle line:-1
现在剩下“蛤蜊浓汤”

00:23:17.064 --> 00:23:18.332 align:middle line:-1
但当我看到这时

00:23:18.398 --> 00:23:20.801 align:middle line:-2
我不确定运行快捷方式时
会发生什么

00:23:21.034 --> 00:23:24.838 align:middle line:-1
我是在订购汤还是在浏览 谁知道

00:23:25.138 --> 00:23:28.175 align:middle line:-2
我们通过添加动词来改正这一问题
并且当我们处理时

00:23:28.242 --> 00:23:30.744 align:middle line:-2
我还要去掉冠词“一份”
来节省空间

00:23:30.811 --> 00:23:33.380 align:middle line:-1
（一份“蛤蜊浓汤”）

00:23:33.447 --> 00:23:34.648 align:middle line:-1
（订“蛤蜊浓汤”）

00:23:34.715 --> 00:23:36.550 align:middle line:-1
现在我改成“订蛤蜊浓汤”

00:23:37.718 --> 00:23:40.120 align:middle line:-2
当我看到这时
我想到的是 我想要订购

00:23:40.187 --> 00:23:44.291 align:middle line:-2
一份蛤蜊浓汤 而非一份
“蛤蜊”浓汤 带引号不美味

00:23:44.358 --> 00:23:48.128 align:middle line:-2
我们就这样尝试卖汤的话
但真的不够完美

00:23:50.163 --> 00:23:52.266 align:middle line:-2
但好消息是
很容易修改这一问题

00:23:52.332 --> 00:23:54.301 align:middle line:-1
只要去掉引号即可

00:23:55.502 --> 00:23:56.970 align:middle line:-2
现在就变为
“订一份蛤蜊浓汤”

00:23:57.271 --> 00:23:59.606 align:middle line:-2
到这一步我感觉
标题看起来非常好了

00:24:00.207 --> 00:24:01.575 align:middle line:-1
但再看副标题

00:24:02.309 --> 00:24:04.845 align:middle line:-1
副标题为“获得汤的最佳方法”

00:24:05.479 --> 00:24:08.115 align:middle line:-1
但这不过是Soup Chef标语

00:24:08.182 --> 00:24:10.517 align:middle line:-2
我早就知道Soup Chef
是订汤的最佳方式

00:24:10.851 --> 00:24:14.388 align:middle line:-2
没有针对快捷方式增加
任何额外信息

00:24:15.255 --> 00:24:20.694 align:middle line:-2
所以这已经算不好了
但更严重的坏事情是

00:24:20.761 --> 00:24:25.632 align:middle line:-2
Soup Chef最近开始
提供配送服务

00:24:25.699 --> 00:24:28.001 align:middle line:-2
我不知道
我的汤配送到哪里

00:24:28.068 --> 00:24:31.605 align:middle line:-2
送到我家里、我的办公室
还是别人的办公室？一无所知

00:24:31.672 --> 00:24:34.374 align:middle line:-2
所以 我们要通过添加
配送地址来改正这一点

00:24:35.709 --> 00:24:39.179 align:middle line:-2
我要“订蛤蜊浓汤
送到1 Apple Park Way”

00:24:39.546 --> 00:24:42.783 align:middle line:-2
现在我就确切知道当我运行
快捷方式时会发生什么

00:24:43.183 --> 00:24:44.084 align:middle line:-1
那么 这就很好了

00:24:45.886 --> 00:24:48.589 align:middle line:-2
在设置界面
外观应该是这样子

00:24:50.190 --> 00:24:53.126 align:middle line:-2
这看起来还不错
但我认为我们还能有所改进

00:24:53.994 --> 00:24:57.865 align:middle line:-2
好 你可以看到蛤蜊浓汤
和番茄汤两种情况都用了

00:24:57.931 --> 00:25:01.168 align:middle line:-2
Soup Chef的app图标
但修改一下会不会更好

00:24:57.931 --> 00:25:01.168 align:middle line:-2
Soup Chef的app图标
但修改一下会不会更好

00:25:01.235 --> 00:25:03.470 align:middle line:-2
在蛤蜊浓汤上
显示蛤蜊浓汤图像

00:25:03.537 --> 00:25:06.006 align:middle line:-2
在番茄汤上
显示番茄汤的图像

00:25:06.440 --> 00:25:07.274 align:middle line:-1
大概就像这样

00:25:08.876 --> 00:25:10.878 align:middle line:-1
为此 我们提供了两个API

00:25:11.144 --> 00:25:13.313 align:middle line:-2
一个用于NSUserActivity
另一个用于Intents

00:25:13.380 --> 00:25:14.348 align:middle line:-1
好 我们来看看

00:25:15.983 --> 00:25:19.152 align:middle line:-2
好 来设置一些情景
该用户刚刚浏览了

00:25:19.219 --> 00:25:22.289 align:middle line:-2
之前的一个汤订单
我们要生成该订单

00:25:22.356 --> 00:25:25.626 align:middle line:-1
我们就可以把这绑定到快捷方式

00:25:26.727 --> 00:25:27.961 align:middle line:-1
那么 我们首先要做的

00:25:28.028 --> 00:25:31.064 align:middle line:-2
就是创建一个
CSSearchableItemAttributeSet

00:25:31.131 --> 00:25:33.000 align:middle line:-2
顺便说一下
如果你想要

00:25:33.066 --> 00:25:36.336 align:middle line:-2
把副标题赋给userActivity
也是同样道理 但此时

00:25:36.403 --> 00:25:40.307 align:middle line:-2
我要设置图像 所以首先创建
一个名称为Chowder的图像

00:25:41.041 --> 00:25:44.745 align:middle line:-2
获取它的PNG数据
赋值给attributes的

00:25:44.811 --> 00:25:45.779 align:middle line:-1
thumbnailData属性

00:25:46.280 --> 00:25:48.315 align:middle line:-2
下一步我就获取到了
这些attributes

00:25:48.382 --> 00:25:51.018 align:middle line:-2
把它赋给userActivity
的contentAttributeSet属性

00:25:51.084 --> 00:25:53.854 align:middle line:-2
最后 我要传送userActivity
就把它赋给

00:25:53.921 --> 00:25:56.423 align:middle line:-2
viewController的
userActivity属性

00:25:58.458 --> 00:26:00.727 align:middle line:-2
好 我们来看它是
怎么用在Intents的

00:25:58.458 --> 00:26:00.727 align:middle line:-2
好 我们来看它是
怎么用在Intents的

00:26:01.562 --> 00:26:04.531 align:middle line:-2
对于Intents
事实上我能够设置多个图像

00:26:04.598 --> 00:26:07.267 align:middle line:-2
每个参数都被定义为一个意图
每个参数都有一个图像

00:26:08.035 --> 00:26:12.072 align:middle line:-2
我就为名称为Soup
的参数设置一个杂烩图像

00:26:12.806 --> 00:26:13.907 align:middle line:-2
为名称为
deliveryLocation

00:26:13.974 --> 00:26:15.809 align:middle line:-1
的参数设置一个办公室图像

00:26:16.243 --> 00:26:20.080 align:middle line:-2
到这一步 我就要由Intents创建
一个InInteraction并调用donate方法

00:26:21.682 --> 00:26:23.350 align:middle line:-1
那么 此时此刻 你可能会想

00:26:23.417 --> 00:26:26.820 align:middle line:-2
如果我有一个shortcut
类型的快捷方式

00:26:26.887 --> 00:26:31.391 align:middle line:-2
其中多个参数有图像
我怎么知道要用哪个图像

00:26:32.893 --> 00:26:35.462 align:middle line:-2
为此 我们去看看
意图定义文件

00:26:37.097 --> 00:26:39.066 align:middle line:-1
尤其要注意的是参数部分

00:26:39.867 --> 00:26:41.068 align:middle line:-1
那么 在参数部分

00:26:41.134 --> 00:26:42.669 align:middle line:-1
我们要确保这些参数

00:26:42.736 --> 00:26:47.241 align:middle line:-2
至少那些带图像的参数
要从大类到细分来排列

00:26:47.574 --> 00:26:51.812 align:middle line:-2
这种情况下 相比配送地址
我更关心汤的图像

00:26:51.879 --> 00:26:54.915 align:middle line:-2
所以 我就要确保
汤在deliveryLocation下面

00:26:56.283 --> 00:26:59.219 align:middle line:-2
做好以后
快捷方式列表应该是这样

00:27:00.220 --> 00:27:02.789 align:middle line:-2
在前两种情况下
这种快捷方式

00:27:02.856 --> 00:27:05.659 align:middle line:-2
包含一个soup和一个
deliveryLocation

00:27:05.993 --> 00:27:08.595 align:middle line:-2
我能看到汤的图像
但最后一种情况

00:27:08.662 --> 00:27:11.865 align:middle line:-2
该种快捷方式只包含
deliveryLocation

00:27:11.932 --> 00:27:14.601 align:middle line:-1
我只能看到配送地址图像

00:27:15.702 --> 00:27:18.539 align:middle line:-2
现在 这些快捷方式看起来很好了
我想要点一个

00:27:18.605 --> 00:27:20.474 align:middle line:-1
添加到Siri 我就可以用了

00:27:21.508 --> 00:27:24.411 align:middle line:-2
对于这项新功能
用户们也是激动万分

00:27:24.478 --> 00:27:28.382 align:middle line:-2
他们迫不及待地要
尝鲜Siri快捷方式

00:27:28.949 --> 00:27:30.918 align:middle line:-2
但随着更多用户
开始使用该功能

00:27:31.185 --> 00:27:33.120 align:middle line:-2
我们意识到些东西
我们意识到一个问题

00:27:34.621 --> 00:27:37.224 align:middle line:-2
当他们到达录制界面
他们不知道该说什么

00:27:38.058 --> 00:27:39.793 align:middle line:-1
我们应当发挥创意灵感

00:27:39.860 --> 00:27:42.763 align:middle line:-1
来选一个建议性快捷方式短语

00:27:43.397 --> 00:27:47.067 align:middle line:-2
作为Soup Chef app开发者
同时也是普通的汤爱好者

00:27:47.134 --> 00:27:48.902 align:middle line:-1
我想我们有一些非常不错的主意

00:27:48.969 --> 00:27:51.271 align:middle line:-1
来创建一个订汤短语

00:27:51.471 --> 00:27:54.675 align:middle line:-2
你知道 例如
“番茄 番茄”或“浓汤时间”

00:27:55.709 --> 00:27:59.580 align:middle line:-2
所以 我们显示这样一个建议
那不是很好吗？

00:27:59.980 --> 00:28:02.482 align:middle line:-2
用户你好 比如你可以说
“浓汤时间”

00:27:59.980 --> 00:28:02.482 align:middle line:-2
用户你好 比如你可以说
“浓汤时间”

00:28:03.217 --> 00:28:05.919 align:middle line:-2
当然 为此我们有一个API
让我们来看看

00:28:06.820 --> 00:28:10.691 align:middle line:-2
那么 在前面例子的基础上
我们只需要添加一行

00:28:11.325 --> 00:28:14.628 align:middle line:-2
好 userActivity有一个属性
称为suggestedInvocationPhrase

00:28:14.695 --> 00:28:16.430 align:middle line:-1
我设置为浓汤时间

00:28:17.197 --> 00:28:19.099 align:middle line:-1
对于Intents 完全一样

00:28:19.766 --> 00:28:23.237 align:middle line:-2
Intents也有一个属性
叫做suggestedInvocationPhrase

00:28:23.303 --> 00:28:24.972 align:middle line:-1
同样我也设置为“浓汤时间”

00:28:25.906 --> 00:28:28.475 align:middle line:-2
那么 你可以看到
这个API特别简单

00:28:28.675 --> 00:28:31.545 align:middle line:-2
但到底如何创建一个
好的建议性调用短语呢？

00:28:34.348 --> 00:28:36.717 align:middle line:-1
那么 要记住 最重要的就是

00:28:37.017 --> 00:28:40.888 align:middle line:-2
建议性调用短语要
既简短又好记

00:28:41.288 --> 00:28:44.091 align:middle line:-2
你得记住 你的用户
每一次运行快捷方式

00:28:44.157 --> 00:28:46.460 align:middle line:-1
他们都要说这个短语

00:28:46.793 --> 00:28:49.263 align:middle line:-2
所以 最佳长度
就是两到三个词

00:28:51.465 --> 00:28:54.735 align:middle line:-2
接着 快捷方式短语中
不要包含短语“嘿 Siri”

00:28:54.801 --> 00:28:56.203 align:middle line:-1
这也比较重要

00:28:56.270 --> 00:28:59.439 align:middle line:-2
因为如果用户不慎
将快捷短语设置为

00:28:59.506 --> 00:29:02.576 align:middle line:-2
“嘿 Siri 浓汤时间”
当他们运行快捷方式时

00:28:59.506 --> 00:29:02.576 align:middle line:-2
“嘿 Siri 浓汤时间”
当他们运行快捷方式时

00:29:02.643 --> 00:29:05.646 align:middle line:-2
他们必须得说“嘿 Siri
嘿 Siri 浓汤时间”

00:29:05.712 --> 00:29:06.980 align:middle line:-1
谁都不想这么做

00:29:09.950 --> 00:29:11.852 align:middle line:-1
好 我们来看一些例子

00:29:13.820 --> 00:29:17.691 align:middle line:-2
这个例子为“嘿 Siri
请下订单 谢谢”

00:29:19.226 --> 00:29:23.063 align:middle line:-2
尽管用语很礼貌
但并不恰当

00:29:23.830 --> 00:29:26.400 align:middle line:-2
首先 里面含有“嘿 Siri”
这比较明显

00:29:26.466 --> 00:29:30.103 align:middle line:-2
但稍微太长了
我不想每次运行快捷方式

00:29:30.170 --> 00:29:32.472 align:middle line:-2
都重复说这么长的句子
所以 这不恰当

00:29:33.340 --> 00:29:34.408 align:middle line:-1
这个例子怎样

00:29:35.008 --> 00:29:38.245 align:middle line:-2
这个例子为
“订一份蛤蜊浓汤送到我的办公室”

00:29:38.712 --> 00:29:39.780 align:middle line:-1
感觉比较恰当

00:29:40.147 --> 00:29:43.717 align:middle line:-2
但仍然不好
因为还是太长了

00:29:43.784 --> 00:29:45.452 align:middle line:-1
比如说 并不简短好记

00:29:45.519 --> 00:29:48.622 align:middle line:-2
每当我想订蛤蜊浓汤
并送到我的办公室

00:29:48.689 --> 00:29:51.758 align:middle line:-2
我觉得我记不住
也不想记住说这个短语

00:29:53.493 --> 00:29:56.864 align:middle line:-2
再看这个例子呢？
这个仅仅有“浓汤时间”

00:29:57.164 --> 00:29:59.466 align:middle line:-1
既简短又好记

00:29:59.533 --> 00:30:01.568 align:middle line:-1
并且不含短语“嘿 Siri”

00:29:59.533 --> 00:30:01.568 align:middle line:-1
并且不含短语“嘿 Siri”

00:30:02.069 --> 00:30:04.905 align:middle line:-2
好 这个符合我们的所有要求
特别好

00:30:06.006 --> 00:30:07.574 align:middle line:-1
但还没有完

00:30:08.275 --> 00:30:12.212 align:middle line:-2
为了向全世界的用户
提供优质的

00:30:13.113 --> 00:30:15.449 align:middle line:-2
快捷方式体验
你一定要做本地化

00:30:15.682 --> 00:30:18.719 align:middle line:-2
比如 我说英语和日语
如果我能够向用户推荐

00:30:18.785 --> 00:30:22.623 align:middle line:-2
类似这样的日语快捷方式
那该多好啊

00:30:23.390 --> 00:30:26.627 align:middle line:-2
那么 就不用说 浓汤时间
我可以[日语]

00:30:26.693 --> 00:30:28.362 align:middle line:-1
意思是“我想吃浓汤”

00:30:30.597 --> 00:30:32.466 align:middle line:-2
要做到这一点
我们可以本地化

00:30:32.866 --> 00:30:34.801 align:middle line:-1
当我们想到本地化

00:30:34.868 --> 00:30:37.171 align:middle line:-1
要记住几条

00:30:37.504 --> 00:30:40.507 align:middle line:-2
那么 除了要本地化代码
我们一定还要

00:30:40.574 --> 00:30:43.877 align:middle line:-1
本地化意图定义文件中的内容

00:30:43.944 --> 00:30:46.547 align:middle line:-2
因为正如你所知
那里有很多字符串

00:30:47.514 --> 00:30:49.983 align:middle line:-2
第二
我们要注重多元化

00:30:50.050 --> 00:30:53.620 align:middle line:-2
那么 尽管除了英语
你不想翻译到其他语言

00:30:53.987 --> 00:30:57.357 align:middle line:-2
如果你必须得处理像这样的
订一份蛤蜊浓汤 相反

00:30:57.424 --> 00:31:00.561 align:middle line:-2
订三份蛤蜊浓汤
你就得考虑本地化

00:30:57.424 --> 00:31:00.561 align:middle line:-2
订三份蛤蜊浓汤
你就得考虑本地化

00:31:00.928 --> 00:31:03.030 align:middle line:-1
要了解完整资料

00:31:03.096 --> 00:31:05.966 align:middle line:-2
请查看本地化演讲
以及他们的实验室

00:31:06.233 --> 00:31:08.202 align:middle line:-2
你需知的一切
他们都会教你且远多于此

00:31:09.269 --> 00:31:11.839 align:middle line:-2
那很不错
现在 我们再回到英语

00:31:14.208 --> 00:31:16.376 align:middle line:-2
既然我们遵循了
这些最佳实践

00:31:16.443 --> 00:31:17.678 align:middle line:-1
当我们来到设置界面

00:31:17.744 --> 00:31:20.848 align:middle line:-2
一列美观的建议性
快捷方式呈现在你面前

00:31:21.348 --> 00:31:24.818 align:middle line:-1
现在 这些是多个建议的组合

00:31:24.885 --> 00:31:28.388 align:middle line:-2
根据用户过去的日常习惯
和最近的所作所为

00:31:29.089 --> 00:31:31.124 align:middle line:-1
然而 我们另外提供一个API

00:31:31.191 --> 00:31:33.760 align:middle line:-2
可以让开发人员
推荐自己的快捷方式

00:31:34.161 --> 00:31:36.663 align:middle line:-2
这很有用处
因为可以让你推荐

00:31:36.730 --> 00:31:38.932 align:middle line:-2
快捷方式用于用户
不是非得做过的

00:31:38.999 --> 00:31:40.234 align:middle line:-1
或最近没做的

00:31:40.868 --> 00:31:42.769 align:middle line:-1
例如 如果你有个音乐app

00:31:42.836 --> 00:31:46.273 align:middle line:-2
你应该想为特定的播放列表
提供快捷方式

00:31:46.340 --> 00:31:49.476 align:middle line:-2
尽管用户以前还没播放过
最近也没播放过

00:31:49.543 --> 00:31:52.546 align:middle line:-2
因为可推测
如果用户建立了播放列表

00:31:52.613 --> 00:31:54.882 align:middle line:-2
他们很可能是要在
未来某些时刻去播放

00:31:56.350 --> 00:31:59.253 align:middle line:-2
我认为在Soup Chef app中
如果我们能推荐一个

00:31:59.653 --> 00:32:02.289 align:middle line:-2
订购当天汤的快捷方式
那会更好

00:31:59.653 --> 00:32:02.289 align:middle line:-2
订购当天汤的快捷方式
那会更好

00:32:02.356 --> 00:32:05.259 align:middle line:-2
尽管他们最近没有订汤
也从未订过汤

00:32:05.325 --> 00:32:08.362 align:middle line:-2
因为根据过往经验
用户看起来很喜欢它

00:32:08.428 --> 00:32:11.298 align:middle line:-2
因为既美味
又有特价

00:32:11.698 --> 00:32:14.368 align:middle line:-2
好 我们来看看
通过该API如何去做

00:32:16.036 --> 00:32:20.207 align:middle line:-2
对于Intent 你在Intent中
创建一个INShortcut

00:32:20.474 --> 00:32:23.777 align:middle line:-2
好 对于userActivity
你同样在其中创建一个INShortcut

00:32:24.378 --> 00:32:26.280 align:middle line:-1
我要把它打包成一个建议列表

00:32:26.346 --> 00:32:31.251 align:middle line:-2
然后传值给INVoiceShortcutCenters的
setShortcutSuggestions方法

00:32:32.152 --> 00:32:33.120 align:middle line:-1
做好之后

00:32:33.187 --> 00:32:38.125 align:middle line:-2
你同时一起会看到我的推荐
和其他所有系统推荐

00:32:38.792 --> 00:32:41.128 align:middle line:-2
顺便要说
这一系列推荐

00:32:41.195 --> 00:32:44.765 align:middle line:-2
会同样显示在快捷方式app中
你就能利用你的快捷方式

00:32:44.831 --> 00:32:46.099 align:middle line:-1
创建自定义快捷方式

00:32:49.803 --> 00:32:54.741 align:middle line:-2
好 既然我们做所有这些工作
就是为了给大家的用户提供

00:32:54.808 --> 00:32:57.644 align:middle line:-2
优质的语音体验 我们想确保
用户知道

00:32:57.711 --> 00:33:00.480 align:middle line:-2
他们能够添加快捷方式
并通过Siri使用

00:32:57.711 --> 00:33:00.480 align:middle line:-2
他们能够添加快捷方式
并通过Siri使用

00:33:00.547 --> 00:33:04.084 align:middle line:-2
为此最好的方式就是
将快捷方式加入到大家的app中

00:33:04.451 --> 00:33:08.121 align:middle line:-2
用户也好直接在app中
创建快捷方式

00:33:08.188 --> 00:33:09.223 align:middle line:-1
（将快捷方式加入app）

00:33:09.289 --> 00:33:12.092 align:middle line:-1
好 举个例子 我刚订了一份汤

00:33:12.693 --> 00:33:16.430 align:middle line:-2
我就需要推荐
来把快捷方式添加到Siri

00:33:18.432 --> 00:33:23.604 align:middle line:-2
当我点击“添加到Siri”
就会显示相同的系统界面

00:33:23.804 --> 00:33:27.574 align:middle line:-2
可以让我设置一个
新Siri用的快捷方式

00:33:28.809 --> 00:33:30.644 align:middle line:-2
好 我们来看看
该功能的API

00:33:32.346 --> 00:33:34.548 align:middle line:-2
同样 我要获取
userActivity

00:33:34.615 --> 00:33:38.619 align:middle line:-2
并用它创建INShortcut
然后用这 我要创建

00:33:38.685 --> 00:33:42.623 align:middle line:-2
一个INUIAddVoiceShortcut
ViewController

00:33:42.689 --> 00:33:44.625 align:middle line:-1
设置delegate属性 调用present

00:33:45.759 --> 00:33:47.194 align:middle line:-1
对于Intents也如此

00:33:47.528 --> 00:33:51.965 align:middle line:-2
若不用userActivity
创建INShortcut

00:33:52.032 --> 00:33:56.770 align:middle line:-2
我就用Intent来创建viewController
设置delegate属性 调用present

00:33:57.771 --> 00:34:01.175 align:middle line:-2
我做好之后
用户直接从app中

00:33:57.771 --> 00:34:01.175 align:middle line:-2
我做好之后
用户直接从app中

00:34:01.241 --> 00:34:02.976 align:middle line:-1
就会看到该设置界面

00:34:04.178 --> 00:34:09.416 align:middle line:-2
另外 要重写一个API让用户
删除和编辑现有的快捷方式

00:34:13.253 --> 00:34:17.291 align:middle line:-2
我们还有一个API
可以让你获取

00:34:17.357 --> 00:34:19.659 align:middle line:-2
用户添加到Siri的
快捷方式列表

00:34:19.927 --> 00:34:22.094 align:middle line:-2
好 举个例子
我可以利用该信息

00:34:22.161 --> 00:34:24.598 align:middle line:-1
看出用户为Siri

00:34:24.864 --> 00:34:30.103 align:middle line:-1
添加了哪些汤的快捷方式

00:34:30.370 --> 00:34:34.408 align:middle line:-2
那么 如你所见 对于蛤蜊浓汤
现在绑定的有“浓汤时间”

00:34:34.474 --> 00:34:36.510 align:middle line:-2
对于番茄汤
现在有“番茄 番茄”

00:34:37.911 --> 00:34:43.951 align:middle line:-2
棒极了 好 总结一下
我们重温一下今天所学内容

00:34:45.018 --> 00:34:46.920 align:middle line:-1
首先 我们了解到在向用户

00:34:46.987 --> 00:34:50.924 align:middle line:-2
提供优质的语音体验方面
自定义响应是至关重要的

00:34:51.458 --> 00:34:53.594 align:middle line:-2
Amit向大家展示了
这是多么简单

00:34:55.862 --> 00:34:59.833 align:middle line:-2
我们看到自定义IntentsUI
可以把app体验

00:34:59.900 --> 00:35:04.238 align:middle line:-2
带到Siri和系统中其他地方
如搜索和锁屏

00:34:59.900 --> 00:35:04.238 align:middle line:-2
带到Siri和系统中其他地方
如搜索和锁屏

00:35:06.440 --> 00:35:08.242 align:middle line:-1
我们也看到了细节的重要性

00:35:08.509 --> 00:35:11.545 align:middle line:-2
甚至一些小东西
会发挥大作用

00:35:11.612 --> 00:35:14.081 align:middle line:-2
比如向快捷方式添加图像
从蛤蜊浓汤两边

00:35:14.147 --> 00:35:15.616 align:middle line:-1
删除引号

00:35:15.916 --> 00:35:19.319 align:middle line:-2
像本地化这些关键细节
会起到巨大的作用

00:35:21.154 --> 00:35:23.557 align:middle line:-2
最后 我们了解了
各种不同的API

00:35:23.624 --> 00:35:26.627 align:middle line:-2
你用这些API可以将
快捷方式功能加入到你的app

00:35:26.693 --> 00:35:28.662 align:middle line:-1
用户可以把app中使用

00:35:28.729 --> 00:35:31.732 align:middle line:-2
最频繁的创建为快捷方式
并通过Siri使用

00:35:33.367 --> 00:35:37.738 align:middle line:-2
关于如何操作的文档
全部都在developer.apple.com

00:35:37.804 --> 00:35:40.507 align:middle line:-2
另外 我们要举办一周
快捷方式实验室

00:35:40.574 --> 00:35:42.309 align:middle line:-1
今天晚些时候就有一次

00:35:42.876 --> 00:35:46.146 align:middle line:-2
本会场之后紧接着我们的
Watch演讲 向你展示

00:35:46.213 --> 00:35:49.917 align:middle line:-2
如何把快捷方式体验
带到Watch和Siri表盘

00:35:49.983 --> 00:35:52.386 align:middle line:-2
他们也会向你展示
其工作原理

00:35:52.452 --> 00:35:55.789 align:middle line:-2
哪怕你没有Watch app
那也是一定要看的

00:35:58.358 --> 00:35:59.259 align:middle line:-1
好了

00:36:05.098 --> 00:36:08.268 align:middle line:-2
好 好 现在你知道了
所有你需要知道的

00:36:08.335 --> 00:36:11.238 align:middle line:-2
就可以为用户创建优质的
快捷方式体验

00:36:11.305 --> 00:36:13.807 align:middle line:-2
我们迫不及待地想看到
你用我们的新API构建的内容

00:36:14.074 --> 00:36:17.177 align:middle line:-2
谢谢观看 祝你在接下来的
WWDC中度过愉快时光
