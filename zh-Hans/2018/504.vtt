WEBVTT

00:00:07.516 --> 00:00:14.500 A:middle
[ 音乐 ]

00:00:20.516 --> 00:00:26.936 A:middle
[ 掌声 ]

00:00:27.436 --> 00:00:29.726 A:middle
&gt;&gt; 大家好 我叫 Neil Desai

00:00:29.726 --> 00:00:31.456 A:middle
是 watchOS 框架工程师

00:00:31.456 --> 00:00:33.116 A:middle
我很激动能在这里

00:00:33.116 --> 00:00:34.216 A:middle
探讨如何为

00:00:34.216 --> 00:00:36.116 A:middle
watchOS 创建一些杰出的音频 App

00:00:36.616 --> 00:00:38.276 A:middle
说实话  我已经等待了

00:00:38.276 --> 00:00:39.336 A:middle
超过一年才轮到我跟大家

00:00:39.336 --> 00:00:40.566 A:middle
探讨这些  我真十分开心

00:00:40.566 --> 00:00:42.626 A:middle
能站在这里 让我们直截了当

00:00:42.626 --> 00:00:43.616 A:middle
进入正题吧

00:00:44.576 --> 00:00:46.596 A:middle
在 watchOS 4 中 我们展示了一个

00:00:46.596 --> 00:00:48.906 A:middle
修订版的音乐和广播 App

00:00:48.906 --> 00:00:51.016 A:middle
在 watchOS 5 中 我们展示了一个

00:00:51.016 --> 00:00:52.386 A:middle
全新的播客 App

00:00:52.486 --> 00:00:53.906 A:middle
我们发现用户

00:00:53.986 --> 00:00:56.156 A:middle
十分喜欢

00:00:56.156 --> 00:00:58.366 A:middle
在路上或者

00:00:58.366 --> 00:00:59.286 A:middle
在锻炼的时候播放音乐

00:01:02.046 --> 00:01:02.686 A:middle
我们也发现了

00:01:02.686 --> 00:01:04.275 A:middle
用户真的特别喜欢能够

00:01:04.275 --> 00:01:05.696 A:middle
远程控制

00:01:05.696 --> 00:01:06.776 A:middle
在另一个设备上

00:01:06.776 --> 00:01:07.316 A:middle
播放的音乐

00:01:07.766 --> 00:01:09.956 A:middle
比如你的 iPhone 或者 HomePod

00:01:10.296 --> 00:01:12.016 A:middle
我也特别喜欢这一项功能

00:01:12.016 --> 00:01:13.636 A:middle
我很喜欢能够

00:01:13.636 --> 00:01:15.916 A:middle
在 iPhone 上播放音乐

00:01:15.916 --> 00:01:17.196 A:middle
于此同时也可以

00:01:17.196 --> 00:01:18.716 A:middle
通过我的手表

00:01:18.716 --> 00:01:19.456 A:middle
直接控制播放的设置 比如音量

00:01:19.916 --> 00:01:20.996 A:middle
这是个伟大的功能

00:01:21.756 --> 00:01:23.426 A:middle
今天 在 watchOS 5 上

00:01:23.426 --> 00:01:25.086 A:middle
我们将展示如何创造

00:01:25.086 --> 00:01:27.016 A:middle
美好的体验 如同

00:01:27.016 --> 00:01:28.396 A:middle
在 Keynote 上看到的一样

00:01:28.396 --> 00:01:30.466 A:middle
在 Audible 中和在

00:01:30.536 --> 00:01:31.626 A:middle
Pandora 中能做到的一样

00:01:32.496 --> 00:01:34.516 A:middle
并且他们可以使用

00:01:34.516 --> 00:01:36.756 A:middle
一些 watchOS 5 提供的

00:01:36.756 --> 00:01:37.726 A:middle
新的功能

00:01:37.766 --> 00:01:39.526 A:middle
今天我要介绍

00:01:39.526 --> 00:01:41.436 A:middle
我们是如何做到这些同样的事情的

00:01:42.216 --> 00:01:43.156 A:middle
为了达成这个目标 我们先要

00:01:43.156 --> 00:01:44.686 A:middle
讲一下四个今天的主要主题

00:01:44.966 --> 00:01:46.736 A:middle
我们将要介绍

00:01:46.736 --> 00:01:48.276 A:middle
原生的控制 以及如何

00:01:48.276 --> 00:01:49.926 A:middle
把我们的系统控制

00:01:50.266 --> 00:01:51.926 A:middle
直接嵌入你的 App

00:01:52.826 --> 00:01:53.856 A:middle
我们要介绍如何

00:01:53.856 --> 00:01:55.846 A:middle
把信息内容推送到手表上

00:01:56.196 --> 00:01:57.496 A:middle
在我们获得了信息内容之后

00:01:57.496 --> 00:01:59.186 A:middle
如何为用户播放

00:01:59.186 --> 00:02:00.416 A:middle
一些东西

00:01:59.186 --> 00:02:00.416 A:middle
一些东西

00:02:01.716 --> 00:02:02.766 A:middle
最后我们会再

00:02:02.766 --> 00:02:04.296 A:middle
梳理一遍整体的音频体验

00:02:04.296 --> 00:02:05.656 A:middle
以及如何给我们的用户们

00:02:05.656 --> 00:02:07.296 A:middle
提供丰富的体验

00:02:07.296 --> 00:02:08.536 A:middle
并且这些体验要始终良好地

00:02:08.536 --> 00:02:09.356 A:middle
集成在整个系统里

00:02:11.276 --> 00:02:13.326 A:middle
首先让我们先探讨原生的控制吧

00:02:15.776 --> 00:02:17.736 A:middle
在 watchOS 5 中 我们展示了两种

00:02:17.736 --> 00:02:19.046 A:middle
新的控制并且它们

00:02:19.046 --> 00:02:20.936 A:middle
都可以直接植入在你的 App 之中

00:02:21.926 --> 00:02:23.756 A:middle
第一个是 Now Playing

00:02:23.756 --> 00:02:25.696 A:middle
视图 它可以被嵌入到你的

00:02:25.696 --> 00:02:26.746 A:middle
watchOS App 之中

00:02:27.136 --> 00:02:29.306 A:middle
这个很适合用于

00:02:29.306 --> 00:02:31.966 A:middle
播放那些也许不属于你的内容

00:02:32.456 --> 00:02:34.876 A:middle
你还可以嵌入一个音量

00:02:34.876 --> 00:02:36.286 A:middle
控制 这样你可以做一个

00:02:36.286 --> 00:02:38.166 A:middle
自己定制的 UI 来方便用户

00:02:38.166 --> 00:02:40.016 A:middle
控制音量

00:02:41.146 --> 00:02:42.306 A:middle
你也许会在想

00:02:42.306 --> 00:02:45.686 A:middle
这个 Now Playing 界面 到底什么时候才会

00:02:45.686 --> 00:02:47.446 A:middle
允许用户

00:02:47.526 --> 00:02:49.646 A:middle
控制那些音频内容却不属于

00:02:49.646 --> 00:02:50.986 A:middle
我的音频播放呢

00:02:52.086 --> 00:02:53.676 A:middle
让我来举个例子

00:02:53.676 --> 00:02:54.756 A:middle
我自己在使用健身 App 的时候

00:02:54.756 --> 00:02:55.406 A:middle
就是这么做的

00:02:55.846 --> 00:02:57.606 A:middle
我正在做 HIIT 健身

00:02:57.606 --> 00:02:58.636 A:middle
我向左划一下

00:02:58.636 --> 00:03:00.426 A:middle
我需要一个健身背景音乐 “Eye of the

00:02:58.636 --> 00:03:00.426 A:middle
我需要一个健身背景音乐 “Eye of the

00:03:00.426 --> 00:03:02.096 A:middle
Tiger” 我有一点点

00:03:02.096 --> 00:03:03.376 A:middle
无趣 但是我实际上

00:03:03.376 --> 00:03:05.016 A:middle
真的有时候在健身时候

00:03:05.016 --> 00:03:05.956 A:middle
听这首歌 我很喜欢这首歌

00:03:06.406 --> 00:03:07.596 A:middle
并且这是一个很棒的体验

00:03:07.596 --> 00:03:08.896 A:middle
只要这么划过来

00:03:08.896 --> 00:03:11.546 A:middle
就可以让用户控制播放

00:03:12.236 --> 00:03:15.066 A:middle
所以如果你在制作一个健身 App

00:03:15.066 --> 00:03:16.736 A:middle
你也可以做出同样的

00:03:16.736 --> 00:03:18.006 A:middle
用户体验 只要你

00:03:18.006 --> 00:03:19.856 A:middle
把 Now Playing 直接嵌入到

00:03:19.856 --> 00:03:20.656 A:middle
你的 App 里

00:03:22.036 --> 00:03:22.826 A:middle
让我们探讨一下

00:03:22.826 --> 00:03:24.846 A:middle
Now Playing 的一些特性

00:03:24.846 --> 00:03:26.796 A:middle
第一个我要说的是

00:03:26.796 --> 00:03:28.346 A:middle
Digital Crown

00:03:28.346 --> 00:03:29.426 A:middle
它控制了音量

00:03:30.006 --> 00:03:31.396 A:middle
正因为如此

00:03:31.396 --> 00:03:32.536 A:middle
你要把这个视图

00:03:32.536 --> 00:03:34.026 A:middle
放在不可滚动的控制器里

00:03:34.526 --> 00:03:36.326 A:middle
比如在我的这个 App 里

00:03:36.326 --> 00:03:38.686 A:middle
我实际上仅仅把

00:03:38.686 --> 00:03:40.126 A:middle
Now Playing 直接塞进了

00:03:40.126 --> 00:03:41.886 A:middle
控制器里

00:03:41.886 --> 00:03:43.746 A:middle
或者你可以重新加载一个

00:03:43.746 --> 00:03:45.726 A:middle
包含这个控制器的页面

00:03:45.726 --> 00:03:47.486 A:middle
或者把他放到一个类似健身 App

00:03:47.806 --> 00:03:48.966 A:middle
的接口之中

00:03:49.436 --> 00:03:52.366 A:middle
之后这个视图

00:03:52.366 --> 00:03:54.646 A:middle
就可以自动控制他所代表的内容

00:03:54.736 --> 00:03:56.606 A:middle
这意味着无论是提供播放

00:03:56.606 --> 00:03:58.256 A:middle
的原始数据的 iPhone

00:03:58.256 --> 00:03:59.766 A:middle
还是手表也好

00:04:00.236 --> 00:04:01.356 A:middle
这个视图将会

00:04:01.356 --> 00:04:01.966 A:middle
为你把其他事情都处理好

00:04:01.966 --> 00:04:03.846 A:middle
你完全不必担心这个问题

00:04:04.916 --> 00:04:06.466 A:middle
最后 Now Playing

00:04:06.466 --> 00:04:07.696 A:middle
可以自动获取你

00:04:07.696 --> 00:04:09.426 A:middle
App 色调 所以

00:04:09.426 --> 00:04:10.956 A:middle
它能跟你的 App 的外观与感觉

00:04:10.956 --> 00:04:11.846 A:middle
匹配起来

00:04:13.076 --> 00:04:15.616 A:middle
现在 我们在 Interface Builder

00:04:15.616 --> 00:04:17.336 A:middle
使用一下它

00:04:17.726 --> 00:04:19.446 A:middle
我们现打开了 Xcode

00:04:19.446 --> 00:04:20.916 A:middle
选定了 Object Library

00:04:21.016 --> 00:04:22.696 A:middle
之后我们可以拖动

00:04:22.696 --> 00:04:24.866 A:middle
Now Playing 到控制器里

00:04:25.176 --> 00:04:26.496 A:middle
一旦我的用户点进来

00:04:26.496 --> 00:04:28.496 A:middle
所有的事情都为你做好了

00:04:28.496 --> 00:04:29.816 A:middle
这个系统会把其他工作都处理好

00:04:30.196 --> 00:04:32.096 A:middle
就是如此简单

00:04:33.536 --> 00:04:35.046 A:middle
这就是我们的 Now Playing 视图

00:04:35.746 --> 00:04:37.386 A:middle
我们现在说说音量控制

00:04:38.176 --> 00:04:39.606 A:middle
这个音量控制

00:04:39.606 --> 00:04:41.616 A:middle
可以设置成控制

00:04:41.616 --> 00:04:43.936 A:middle
iPhone 的音量或本地手表的音量

00:04:44.616 --> 00:04:46.216 A:middle
跟 Now Playing 一样

00:04:46.216 --> 00:04:47.606 A:middle
我们会获取

00:04:47.606 --> 00:04:48.946 A:middle
App 的色调

00:04:48.946 --> 00:04:51.896 A:middle
并且在使用这个控制的时候调整好它

00:04:54.636 --> 00:04:58.426 A:middle
当用户在在转动

00:04:58.426 --> 00:05:00.126 A:middle
Digital Crown 的时候

00:04:58.426 --> 00:05:00.126 A:middle
Digital Crown 的时候

00:05:00.126 --> 00:05:01.646 A:middle
音量控制的色调

00:05:01.956 --> 00:05:04.026 A:middle
将会调整到系统绿色

00:05:04.026 --> 00:05:05.746 A:middle
以匹配其他的部分

00:05:06.276 --> 00:05:09.796 A:middle
至于用这个音量控制调整

00:05:09.796 --> 00:05:12.376 A:middle
本地播放的音量

00:05:12.626 --> 00:05:14.596 A:middle
还是 iPhone 的音量

00:05:14.596 --> 00:05:18.506 A:middle
在 Attributes Inspector 有个选择框

00:05:18.506 --> 00:05:19.746 A:middle
可以控制本地音量

00:05:20.486 --> 00:05:21.696 A:middle
如果你没有选中它

00:05:21.926 --> 00:05:22.866 A:middle
这个音量控制

00:05:22.866 --> 00:05:24.316 A:middle
将默认控制 iPhone 上的音量

00:05:25.086 --> 00:05:27.056 A:middle
如果你选中了它

00:05:27.166 --> 00:05:28.676 A:middle
音量控制将控制

00:05:28.676 --> 00:05:29.676 A:middle
手表上的音量

00:05:30.216 --> 00:05:32.656 A:middle
如果你的 App

00:05:32.656 --> 00:05:34.366 A:middle
有多个应用场景

00:05:34.366 --> 00:05:35.506 A:middle
分别要远程控制播放内容

00:05:35.506 --> 00:05:37.466 A:middle
或者要控制本地播放内容

00:05:37.466 --> 00:05:39.236 A:middle
这样的话

00:05:39.236 --> 00:05:40.446 A:middle
你可能需要多个控制器

00:05:40.446 --> 00:05:41.616 A:middle
来控制着不同的音量

00:05:41.616 --> 00:05:43.136 A:middle
你需要在设计的时候

00:05:43.136 --> 00:05:44.436 A:middle
就要做好这些相关的决定

00:05:45.516 --> 00:05:47.176 A:middle
好的 这些就是

00:05:47.176 --> 00:05:49.276 A:middle
我们的系统控制的内容

00:05:49.276 --> 00:05:50.466 A:middle
接下来让我们介绍一下

00:05:50.466 --> 00:05:51.996 A:middle
如何在实际操作中将

00:05:51.996 --> 00:05:53.266 A:middle
内容数据传递给设备

00:05:55.096 --> 00:05:57.606 A:middle
我做了一个

00:05:57.606 --> 00:05:59.306 A:middle
博物馆导览的 App

00:05:59.466 --> 00:06:01.166 A:middle
我希望我的用户

00:05:59.466 --> 00:06:01.166 A:middle
我希望我的用户

00:06:01.456 --> 00:06:03.336 A:middle
直接点一下就可以在博物馆里

00:06:03.336 --> 00:06:04.836 A:middle
听导览并且

00:06:04.836 --> 00:06:06.116 A:middle
这是一个在手表上很棒的应用体验是

00:06:06.116 --> 00:06:09.496 A:middle
因为我们可以把手机放到一边

00:06:09.496 --> 00:06:10.716 A:middle
我们可以在

00:06:10.716 --> 00:06:12.666 A:middle
手腕之上得到完整的体验并且

00:06:12.666 --> 00:06:14.656 A:middle
可以欣赏身边的艺术

00:06:15.046 --> 00:06:17.936 A:middle
比如说我做了一个

00:06:17.936 --> 00:06:19.706 A:middle
缓冲区让用户

00:06:19.816 --> 00:06:23.446 A:middle
在去博物馆的路上下载内容

00:06:24.236 --> 00:06:25.616 A:middle
这样的话 我需要

00:06:25.616 --> 00:06:27.926 A:middle
使用 URLSession 然后

00:06:27.926 --> 00:06:29.726 A:middle
直接从服务器获取数据

00:06:29.726 --> 00:06:31.906 A:middle
让手表自己把数据下载下来

00:06:33.326 --> 00:06:35.546 A:middle
让我们看一眼代码

00:06:35.546 --> 00:06:38.026 A:middle
是如何实现的

00:06:38.226 --> 00:06:39.256 A:middle
请看这里

00:06:39.256 --> 00:06:41.626 A:middle
我有一个 IBAction 绑定到了

00:06:41.626 --> 00:06:43.206 A:middle
我的 WK Interface 按钮

00:06:43.446 --> 00:06:44.246 A:middle
首先你需要

00:06:44.246 --> 00:06:46.776 A:middle
注意的就是 isFrontmostTimeoutExtended

00:06:46.816 --> 00:06:48.776 A:middle
的属性设置成了 true

00:06:50.006 --> 00:06:51.096 A:middle
我们等下还要再讨论

00:06:51.096 --> 00:06:52.546 A:middle
一下这件事情

00:06:52.686 --> 00:06:53.586 A:middle
但是我想说的是

00:06:53.586 --> 00:06:55.416 A:middle
我们的用户

00:06:55.416 --> 00:06:57.526 A:middle
和设备进行了交互

00:06:57.616 --> 00:07:00.526 A:middle
可以说当用户再一次抬起手时

00:06:57.616 --> 00:07:00.526 A:middle
可以说当用户再一次抬起手时

00:07:00.526 --> 00:07:01.356 A:middle
他们希望看到

00:07:01.356 --> 00:07:02.076 A:middle
我们的 App

00:07:02.586 --> 00:07:04.476 A:middle
因为我们延长了

00:07:04.476 --> 00:07:05.946 A:middle
最前超时 我们从

00:07:05.946 --> 00:07:07.266 A:middle
系统得到了更多的优先级

00:07:07.266 --> 00:07:09.256 A:middle
来帮助我们使用的 URLSessions

00:07:09.636 --> 00:07:10.766 A:middle
同样的 这个我们

00:07:10.766 --> 00:07:11.776 A:middle
等一下再说

00:07:12.186 --> 00:07:15.656 A:middle
当然了 用户在任何时候

00:07:15.656 --> 00:07:16.926 A:middle
都可以把手垂下

00:07:17.176 --> 00:07:18.476 A:middle
所以我使用

00:07:18.476 --> 00:07:19.416 A:middle
backgroundSession 来保证这一点

00:07:19.826 --> 00:07:21.276 A:middle
这样的话当我的 App

00:07:21.276 --> 00:07:22.516 A:middle
进入后台

00:07:22.516 --> 00:07:23.886 A:middle
下载还在继续

00:07:24.566 --> 00:07:26.186 A:middle
然后 我们可以直接启动

00:07:26.186 --> 00:07:27.706 A:middle
下载任务然后

00:07:27.906 --> 00:07:28.816 A:middle
将它忽略

00:07:29.686 --> 00:07:30.926 A:middle
当你在构建这样的

00:07:30.926 --> 00:07:32.886 A:middle
用户体验时候 你希望

00:07:32.886 --> 00:07:34.556 A:middle
显示下载进度

00:07:34.626 --> 00:07:36.216 A:middle
并且当然要处理各种错误

00:07:36.586 --> 00:07:40.406 A:middle
让我们看看这是如何实现的

00:07:40.406 --> 00:07:41.926 A:middle
看一下这里我建造了一个类

00:07:41.926 --> 00:07:43.796 A:middle
DownloadManager 它是我的

00:07:44.026 --> 00:07:45.536 A:middle
SessionTaskDelegate 也是

00:07:45.566 --> 00:07:47.176 A:middle
URLSessionDownload Delegate

00:07:47.666 --> 00:07:49.886 A:middle
在第一个函数里

00:07:49.886 --> 00:07:51.296 A:middle
我可以获取总共下载了的

00:07:51.296 --> 00:07:52.646 A:middle
数据大小并把它除以

00:07:52.646 --> 00:07:54.076 A:middle
要写入的总字节数

00:07:54.356 --> 00:07:55.366 A:middle
这样 我们可以获得

00:07:55.366 --> 00:07:56.676 A:middle
某个下载任务的进度

00:07:56.676 --> 00:07:58.606 A:middle
在 URLSession

00:07:59.006 --> 00:08:00.796 A:middle
提醒我并且给我发出相关

00:07:59.006 --> 00:08:00.796 A:middle
提醒我并且给我发出相关

00:08:00.796 --> 00:08:01.436 A:middle
信息的时候

00:08:01.926 --> 00:08:04.086 A:middle
这样一来 我可以在

00:08:04.086 --> 00:08:07.026 A:middle
UI 上更新下载进度

00:08:07.726 --> 00:08:10.266 A:middle
之后当下载完成时

00:08:10.266 --> 00:08:12.316 A:middle
我当然可以

00:08:12.316 --> 00:08:13.686 A:middle
操作文件 我也许

00:08:13.686 --> 00:08:15.426 A:middle
想要发送一个通知

00:08:15.426 --> 00:08:17.156 A:middle
提醒用户

00:08:17.156 --> 00:08:18.246 A:middle
文件已经准备好播放了

00:08:18.766 --> 00:08:21.976 A:middle
当然了 我的程序

00:08:21.976 --> 00:08:22.936 A:middle
也会调用 didCompleteWithError

00:08:22.936 --> 00:08:24.946 A:middle
用于适当地清理

00:08:24.946 --> 00:08:26.266 A:middle
并处理该点

00:08:26.496 --> 00:08:28.066 A:middle
任何存在的

00:08:28.066 --> 00:08:28.916 A:middle
任何错误

00:08:29.946 --> 00:08:31.466 A:middle
这非常棒

00:08:31.466 --> 00:08:32.976 A:middle
使用 URLSession 我们可以

00:08:32.976 --> 00:08:34.265 A:middle
直接把数据下载到手表上

00:08:34.816 --> 00:08:36.416 A:middle
但有时 iPhone

00:08:36.416 --> 00:08:38.056 A:middle
上已经有了数据了

00:08:39.106 --> 00:08:40.576 A:middle
这样的话我们可以用

00:08:40.576 --> 00:08:44.416 A:middle
WatchConnectivity 直接传送

00:08:42.135 --> 00:08:44.416 A:middle
文件到手表上

00:08:48.536 --> 00:08:50.336 A:middle
为了完成这个 我们可以使用

00:08:50.336 --> 00:08:51.426 A:middle
transfer file 的 API

00:08:51.426 --> 00:08:53.946 A:middle
watchOS 5 有个可以

00:08:53.946 --> 00:08:56.256 A:middle
获取传输进度的新功能

00:08:57.376 --> 00:08:58.306 A:middle
让我们来看一眼

00:08:58.956 --> 00:09:00.546 A:middle
在代码里 我们可以看到

00:08:58.956 --> 00:09:00.546 A:middle
在代码里 我们可以看到

00:09:00.546 --> 00:09:02.236 A:middle
WCSession FileTransfer 的 App

00:09:02.596 --> 00:09:03.996 A:middle
正如新功能

00:09:03.996 --> 00:09:05.526 A:middle
进度属性已经可以在

00:09:05.526 --> 00:09:08.166 A:middle
watchOS 5 and iOS 12 查看了

00:09:12.996 --> 00:09:14.666 A:middle
我可以在我的 iOS 界面上

00:09:14.666 --> 00:09:16.186 A:middle
获得 fileTransfer

00:09:16.186 --> 00:09:18.966 A:middle
获取进度 更新数据

00:09:20.566 --> 00:09:21.476 A:middle
如果你希望了解更多

00:09:21.476 --> 00:09:22.766 A:middle
WatchConnectivity 相关内容

00:09:23.156 --> 00:09:24.346 A:middle
网上有完备的

00:09:24.346 --> 00:09:25.596 A:middle
示例代码

00:09:25.936 --> 00:09:27.056 A:middle
强烈推荐你去看一看

00:09:27.056 --> 00:09:28.196 A:middle
simple WatchConnectivity

00:09:28.196 --> 00:09:29.426 A:middle
的实例代码

00:09:29.906 --> 00:09:33.196 A:middle
你可能会思考

00:09:33.776 --> 00:09:34.936 A:middle
我们有 URLSession 也有

00:09:34.936 --> 00:09:36.896 A:middle
WatchConnectivity 我究竟

00:09:37.106 --> 00:09:38.176 A:middle
应该用哪个呢

00:09:38.176 --> 00:09:39.486 A:middle
究竟什么时候这么用 会比较合理呢

00:09:41.016 --> 00:09:43.126 A:middle
对于 URLSession 我们希望在

00:09:43.126 --> 00:09:45.866 A:middle
在用户在手表上启动下载的时候使用它

00:09:46.646 --> 00:09:48.836 A:middle
然后我们将向 connectivity property

00:09:48.836 --> 00:09:50.676 A:middle
发送请求以获取

00:09:50.676 --> 00:09:54.136 A:middle
在那里的网络连接

00:09:54.306 --> 00:09:55.476 A:middle
我还要提一下

00:09:55.476 --> 00:09:57.006 A:middle
如果 iPhone 在旁边

00:09:57.006 --> 00:09:58.306 A:middle
那么你的请求将会

00:09:58.606 --> 00:10:00.336 A:middle
由在信号范围内的 iPhone 进行代理中转

00:09:58.606 --> 00:10:00.336 A:middle
由在信号范围内的 iPhone 进行代理中转

00:10:01.566 --> 00:10:02.906 A:middle
如果你希望了解一些

00:10:03.176 --> 00:10:05.216 A:middle
URLSession 的细枝末节

00:10:05.486 --> 00:10:06.516 A:middle
有一个去年的讲座

00:10:06.516 --> 00:10:07.826 A:middle
可以在网上找到

00:10:07.826 --> 00:10:09.426 A:middle
Advances in Networking Part 2

00:10:09.726 --> 00:10:11.296 A:middle
我强烈建议你去看一下

00:10:11.816 --> 00:10:14.646 A:middle
然后呢 另一方面

00:10:14.646 --> 00:10:16.706 A:middle
对于 watchConnectivity

00:10:16.706 --> 00:10:17.856 A:middle
它会变得十分重要

00:10:17.856 --> 00:10:19.336 A:middle
当用户在 iPhone 上

00:10:19.336 --> 00:10:20.696 A:middle
启动了下载任务

00:10:20.696 --> 00:10:22.806 A:middle
或者已经有

00:10:22.806 --> 00:10:23.726 A:middle
内容下载好了

00:10:23.726 --> 00:10:25.186 A:middle
并且已经没有必要

00:10:25.186 --> 00:10:26.596 A:middle
再向服务器请求了的时候

00:10:28.716 --> 00:10:30.446 A:middle
这两个功能 特别是

00:10:30.446 --> 00:10:31.646 A:middle
watchConnectivity 你需要

00:10:31.646 --> 00:10:33.606 A:middle
对用户的操作进行一定的预测

00:10:34.116 --> 00:10:35.476 A:middle
不要忘了告诉用户

00:10:35.476 --> 00:10:36.526 A:middle
下载任务或者

00:10:36.526 --> 00:10:38.376 A:middle
文件传输的任务快完成了

00:10:38.376 --> 00:10:40.596 A:middle
还有那些把手表放在了

00:10:40.596 --> 00:10:42.306 A:middle
充电器上之后会进行的操作

00:10:42.846 --> 00:10:45.006 A:middle
比如我们自己是这么做的

00:10:45.336 --> 00:10:47.156 A:middle
在 Apple Watch App 中的

00:10:47.156 --> 00:10:49.676 A:middle
Music 界面 在最上面

00:10:49.676 --> 00:10:51.926 A:middle
我们会给用户显示

00:10:51.926 --> 00:10:53.516 A:middle
有多少歌被实际

00:10:53.516 --> 00:10:54.846 A:middle
传送到了手表上

00:10:54.846 --> 00:10:56.956 A:middle
我们甚至会告诉

00:10:56.956 --> 00:10:59.166 A:middle
用户 当 Apple Watch 连上充电器的时候

00:10:59.166 --> 00:11:00.216 A:middle
音乐将会被同步

00:10:59.166 --> 00:11:00.216 A:middle
音乐将会被同步

00:11:00.216 --> 00:11:03.156 A:middle
别把这个忘了

00:11:03.326 --> 00:11:04.796 A:middle
好了 我们聊了

00:11:04.796 --> 00:11:07.186 A:middle
获取内容 现在

00:11:07.186 --> 00:11:08.216 A:middle
我们有了内容

00:11:08.216 --> 00:11:09.466 A:middle
我们说一下如何播放它们

00:11:10.466 --> 00:11:12.326 A:middle
在 watchOS 上 我们有好多

00:11:12.326 --> 00:11:13.736 A:middle
不同的工具可以使用

00:11:14.186 --> 00:11:16.226 A:middle
一部分工具本身

00:11:16.226 --> 00:11:17.546 A:middle
就在 WatchKit 里面了

00:11:18.036 --> 00:11:20.646 A:middle
这里有带有选项的

00:11:20.646 --> 00:11:22.216 A:middle
presentMediaPlayerController

00:11:22.216 --> 00:11:23.966 A:middle
你可以用它

00:11:24.426 --> 00:11:27.086 A:middle
这里也有 WKAudioFile QueuePlayer

00:11:27.306 --> 00:11:29.076 A:middle
你可以提供一个列表的

00:11:29.076 --> 00:11:30.416 A:middle
播放内容 之后队列播放器

00:11:30.416 --> 00:11:31.506 A:middle
将按照排列播放

00:11:31.536 --> 00:11:32.126 A:middle
相应的内容

00:11:32.636 --> 00:11:35.536 A:middle
所以 presentMediaPlayerController

00:11:35.536 --> 00:11:37.256 A:middle
的选项

00:11:37.326 --> 00:11:38.716 A:middle
将显示在 UI 之上

00:11:38.716 --> 00:11:40.656 A:middle
所以这个控制器将给你做好其他的工作

00:11:41.056 --> 00:11:42.476 A:middle
你真的不需要做很多的工作

00:11:42.826 --> 00:11:44.456 A:middle
这是个完美的选项

00:11:44.456 --> 00:11:46.306 A:middle
尤其对于短时内容来说

00:11:46.306 --> 00:11:47.176 A:middle
你不用在这件事情上

00:11:47.176 --> 00:11:48.686 A:middle
考虑太多

00:11:50.096 --> 00:11:52.536 A:middle
并且 WKAudioFIleQueuePlayer 是

00:11:52.536 --> 00:11:53.416 A:middle
在后台播放

00:11:53.416 --> 00:11:54.736 A:middle
较长的内容时

00:11:54.736 --> 00:11:55.706 A:middle
的一个绝佳选项

00:11:56.126 --> 00:11:57.346 A:middle
这是一个传送带式

00:11:57.346 --> 00:12:00.116 A:middle
的方法 有了播放的内容

00:11:57.346 --> 00:12:00.116 A:middle
的方法 有了播放的内容

00:12:00.116 --> 00:12:01.726 A:middle
你可以直接

00:12:01.726 --> 00:12:02.896 A:middle
把它移交给系统

00:12:02.896 --> 00:12:03.916 A:middle
系统会代表你

00:12:03.916 --> 00:12:04.426 A:middle
进行播放

00:12:05.006 --> 00:12:06.936 A:middle
这就是

00:12:06.936 --> 00:12:08.736 A:middle
WKAudioFileQueuePlayer 的设计目的

00:12:09.086 --> 00:12:12.696 A:middle
这里也有个正在工作的 AVFoundation

00:12:16.386 --> 00:12:19.136 A:middle
所以这里有 AVAudioPlayer 和

00:12:19.136 --> 00:12:19.866 A:middle
AVAudioEngine

00:12:20.396 --> 00:12:22.966 A:middle
在 watchOS 5 之前

00:12:22.966 --> 00:12:24.396 A:middle
他被绑定在健身后台模式

00:12:24.396 --> 00:12:26.486 A:middle
或者当你的 App

00:12:26.486 --> 00:12:28.196 A:middle
在前台并且屏幕已经点亮的时候

00:12:29.406 --> 00:12:31.736 A:middle
比如 Nike Run Club App

00:12:31.796 --> 00:12:33.086 A:middle
它就干了这个

00:12:33.086 --> 00:12:34.346 A:middle
比如你正在

00:12:34.346 --> 00:12:36.346 A:middle
跑步并且你想要一点禅修的感觉

00:12:36.686 --> 00:12:39.026 A:middle
你可以用 Headspace 播放

00:12:39.026 --> 00:12:40.586 A:middle
一点冥想的辅助内容

00:12:41.956 --> 00:12:44.546 A:middle
在 watchOS 5 之前

00:12:44.546 --> 00:12:46.406 A:middle
利用 AVFoundation 的后台播放

00:12:46.406 --> 00:12:47.756 A:middle
只可能在

00:12:47.756 --> 00:12:49.666 A:middle
这些种类的健身 App 中使用

00:12:50.166 --> 00:12:52.666 A:middle
在现在的 watchOS 中

00:12:52.666 --> 00:12:54.296 A:middle
有一个全新的

00:12:54.456 --> 00:12:55.746 A:middle
后台模式并且

00:12:55.746 --> 00:12:56.716 A:middle
它令我很是激动

00:12:57.846 --> 00:13:00.296 A:middle
让我们说一下

00:12:57.846 --> 00:13:00.296 A:middle
让我们说一下

00:13:00.296 --> 00:13:01.306 A:middle
我现在正在做的东西

00:13:02.096 --> 00:13:04.076 A:middle
有点拓宽我们的 tool kit 的感觉

00:13:07.376 --> 00:13:09.806 A:middle
我们有 AVFoundation 并且

00:13:09.806 --> 00:13:11.026 A:middle
它没有绑定在

00:13:11.026 --> 00:13:12.156 A:middle
某种后台模式

00:13:12.156 --> 00:13:13.996 A:middle
我们就可以直接用 AVFoundation

00:13:13.996 --> 00:13:15.266 A:middle
在后台播放中

00:13:16.616 --> 00:13:18.626 A:middle
我们开放了权限

00:13:18.626 --> 00:13:21.586 A:middle
允许你 允许用户

00:13:21.586 --> 00:13:22.776 A:middle
选择一个播放的路线

00:13:22.776 --> 00:13:24.256 A:middle
比如不同的

00:13:24.256 --> 00:13:25.196 A:middle
蓝牙耳机

00:13:26.176 --> 00:13:28.146 A:middle
在 watchOS 5 种我们也

00:13:28.146 --> 00:13:29.376 A:middle
开放了 MediaPlayer.

00:13:29.376 --> 00:13:30.636 A:middle
framework 并且你可以提供

00:13:30.636 --> 00:13:32.186 A:middle
一些 Now Playing 信息

00:13:32.186 --> 00:13:36.026 A:middle
同时处理远程控制的指令

00:13:36.026 --> 00:13:37.626 A:middle
就像 Music Podcasts

00:13:37.626 --> 00:13:39.366 A:middle
和 Radio App 中的一样

00:13:39.366 --> 00:13:41.056 A:middle
长的内容被限定到了

00:13:41.406 --> 00:13:43.516 A:middle
蓝牙播放 也就是说

00:13:43.816 --> 00:13:45.406 A:middle
这是一种更好的方式来

00:13:45.406 --> 00:13:46.776 A:middle
使你使用

00:13:47.236 --> 00:13:49.276 A:middle
扬声器播放

00:13:49.446 --> 00:13:50.906 A:middle
让我们一步一步的

00:13:51.306 --> 00:13:52.836 A:middle
来看一下

00:13:52.836 --> 00:13:54.386 A:middle
后台较长的内容

00:13:54.386 --> 00:13:55.206 A:middle
是如何播放的

00:13:55.756 --> 00:13:59.886 A:middle
首先把你的音乐添加到 info.plist

00:13:59.886 --> 00:14:00.726 A:middle
的后台模式

00:13:59.886 --> 00:14:00.726 A:middle
的后台模式

00:14:01.166 --> 00:14:04.366 A:middle
之后你建立起

00:14:04.366 --> 00:14:05.656 A:middle
合适的 session

00:14:05.656 --> 00:14:06.806 A:middle
然后告诉你的系统

00:14:06.806 --> 00:14:07.696 A:middle
你想要播放

00:14:07.696 --> 00:14:09.646 A:middle
较长的内容在系统后台

00:14:09.956 --> 00:14:13.456 A:middle
你希望允许用户选择

00:14:13.696 --> 00:14:14.736 A:middle
不同的路线

00:14:14.986 --> 00:14:16.976 A:middle
之后呢你去

00:14:16.976 --> 00:14:18.416 A:middle
调用播放函数

00:14:18.666 --> 00:14:19.656 A:middle
并且在用户

00:14:19.656 --> 00:14:20.916 A:middle
正在播放的时候

00:14:20.916 --> 00:14:23.006 A:middle
适时处理播放任务

00:14:23.866 --> 00:14:25.606 A:middle
让我们再仔细分析一下

00:14:25.606 --> 00:14:28.266 A:middle
内部的代码

00:14:29.196 --> 00:14:30.956 A:middle
在 Xcode 里面的 Project

00:14:30.956 --> 00:14:32.486 A:middle
Settings 进入到 Capabilities 里

00:14:32.486 --> 00:14:34.696 A:middle
你可以调整

00:14:34.696 --> 00:14:35.876 A:middle
Background Mode 的开关 你选中

00:14:35.876 --> 00:14:37.396 A:middle
Audio 然后这就好了

00:14:37.396 --> 00:14:38.206 A:middle
可以进行下一步了

00:14:38.576 --> 00:14:42.056 A:middle
现在开始建立你的 session

00:14:42.236 --> 00:14:43.186 A:middle
你需要设置在 AVAudioSession 之中

00:14:43.186 --> 00:14:45.126 A:middle
的 routeSharingPolicy

00:14:45.346 --> 00:14:46.626 A:middle
到 longform 模式

00:14:46.726 --> 00:14:49.026 A:middle
之后你调用 在 AVAudioSession 里面的

00:14:49.026 --> 00:14:53.726 A:middle
newActivate WithOptions Completion 方法

00:14:53.936 --> 00:14:55.276 A:middle
在它完成之后

00:14:55.276 --> 00:14:56.216 A:middle
你就可以调用播放了

00:14:57.276 --> 00:14:58.946 A:middle
在你第一次

00:14:58.946 --> 00:15:01.106 A:middle
启动 activate 函数之前到

00:14:58.946 --> 00:15:01.106 A:middle
启动 activate 函数之前到

00:15:01.266 --> 00:15:02.926 A:middle
completion 返回之前这段时间内

00:15:02.966 --> 00:15:04.676 A:middle
播放路线的选择器

00:15:04.676 --> 00:15:06.956 A:middle
将会将你的选择显示出来

00:15:07.336 --> 00:15:10.516 A:middle
这是播放路线的选择器的样子

00:15:10.516 --> 00:15:12.616 A:middle
它将会在你的 App 内

00:15:12.616 --> 00:15:14.126 A:middle
出现 然后它会

00:15:14.126 --> 00:15:15.966 A:middle
允许用户选择

00:15:15.966 --> 00:15:17.266 A:middle
使用哪个蓝牙耳机

00:15:17.266 --> 00:15:18.746 A:middle
播放内容并且

00:15:18.746 --> 00:15:19.656 A:middle
控制播放

00:15:21.376 --> 00:15:22.636 A:middle
我们再说一下

00:15:22.636 --> 00:15:23.486 A:middle
播放路线的选择器

00:15:23.986 --> 00:15:25.446 A:middle
还是一样 调用一下

00:15:25.446 --> 00:15:26.796 A:middle
asynchronous activate

00:15:27.166 --> 00:15:29.496 A:middle
函数然后它就会

00:15:29.496 --> 00:15:32.036 A:middle
显示播放路线的选择

00:15:32.276 --> 00:15:33.456 A:middle
之后它会返回

00:15:33.796 --> 00:15:34.856 A:middle
completion 在你处理掉它

00:15:34.856 --> 00:15:36.396 A:middle
之后你就可以直接调用播放

00:15:36.396 --> 00:15:39.146 A:middle
每次要播放东西的时候

00:15:39.146 --> 00:15:40.016 A:middle
你都需要这么做

00:15:40.236 --> 00:15:41.566 A:middle
这样呢 你就可以保证

00:15:41.566 --> 00:15:43.846 A:middle
每次在播放的时候

00:15:43.846 --> 00:15:45.046 A:middle
都可以选择合适的播放路线

00:15:46.496 --> 00:15:47.956 A:middle
然后我们进入代码

00:15:47.956 --> 00:15:49.246 A:middle
看一下如何建立 session

00:15:49.886 --> 00:15:50.836 A:middle
现在我们有一个

00:15:50.836 --> 00:15:52.576 A:middle
AVAudioSession 我们要

00:15:52.576 --> 00:15:54.256 A:middle
把我们的类别设置到播放

00:15:54.816 --> 00:15:56.606 A:middle
之后我们把模式设置到默认

00:15:57.256 --> 00:15:58.706 A:middle
最重要的是

00:15:58.706 --> 00:15:59.596 A:middle
我们要把 route

00:15:59.596 --> 00:16:01.176 A:middle
sharing policy 设置到 longform

00:15:59.596 --> 00:16:01.176 A:middle
sharing policy 设置到 longform

00:16:02.076 --> 00:16:03.656 A:middle
之后我们启动 session

00:16:03.656 --> 00:16:07.316 A:middle
它将会显示路线选择器

00:16:07.316 --> 00:16:08.946 A:middle
之后你就可以调用播放

00:16:10.006 --> 00:16:11.816 A:middle
现在呢 关于线路选择器

00:16:11.816 --> 00:16:13.666 A:middle
我要指出

00:16:13.666 --> 00:16:15.906 A:middle
我们需要把播放路线想成两种不同的方式

00:16:16.766 --> 00:16:18.536 A:middle
第一种是基于 Apple

00:16:18.536 --> 00:16:19.906 A:middle
无线芯片的播放路线

00:16:19.906 --> 00:16:21.866 A:middle
我们经常叫它 W1 路线

00:16:21.866 --> 00:16:24.256 A:middle
这些是 AirPods 或者

00:16:24.256 --> 00:16:25.506 A:middle
Beats Studio Wireless 使用的

00:16:26.476 --> 00:16:27.386 A:middle
之后呢是我们的

00:16:27.386 --> 00:16:28.946 A:middle
普通蓝牙耳机路线

00:16:29.646 --> 00:16:30.986 A:middle
在讨论路线选择器的时候

00:16:30.986 --> 00:16:32.836 A:middle
区别这两种路线

00:16:33.196 --> 00:16:34.496 A:middle
是十分重要的

00:16:37.056 --> 00:16:39.206 A:middle
如果用户正连着一个

00:16:39.206 --> 00:16:40.726 A:middle
播放路线 那么

00:16:40.726 --> 00:16:41.846 A:middle
选择器将代表你自动

00:16:41.846 --> 00:16:43.186 A:middle
选择这个路线

00:16:43.756 --> 00:16:44.666 A:middle
这点非常好因为

00:16:44.666 --> 00:16:46.146 A:middle
选择器甚至不会

00:16:46.146 --> 00:16:46.796 A:middle
显示在界面上

00:16:47.036 --> 00:16:47.926 A:middle
你将马上

00:16:47.926 --> 00:16:50.066 A:middle
得到 completion 的回复

00:16:50.506 --> 00:16:53.296 A:middle
如果你的用户

00:16:53.296 --> 00:16:55.276 A:middle
连到了一个 W1 线路

00:16:55.306 --> 00:16:57.416 A:middle
但是它正在被 iPhone 占用

00:16:57.416 --> 00:16:58.806 A:middle
系统将会直接从 iPhone

00:16:58.806 --> 00:17:00.346 A:middle
接管这个播放线路

00:16:58.806 --> 00:17:00.346 A:middle
接管这个播放线路

00:17:00.346 --> 00:17:01.586 A:middle
并把它给你的手表

00:17:02.616 --> 00:17:04.646 A:middle
有时候这也不会发生

00:17:04.646 --> 00:17:06.126 A:middle
这就是当你的

00:17:06.126 --> 00:17:07.435 A:middle
iPhone 有更高的优先级

00:17:07.866 --> 00:17:09.205 A:middle
比如我正在

00:17:09.205 --> 00:17:11.465 A:middle
我的手机上打电话

00:17:11.685 --> 00:17:12.636 A:middle
这时候我们将

00:17:12.636 --> 00:17:13.766 A:middle
不会为手表接管路线

00:17:13.766 --> 00:17:15.286 A:middle
因为打电话

00:17:15.776 --> 00:17:16.945 A:middle
可能更加重要

00:17:17.425 --> 00:17:20.195 A:middle
如果没有正在工作的

00:17:20.195 --> 00:17:21.356 A:middle
路线 路线选择器

00:17:21.356 --> 00:17:23.685 A:middle
将会显示出你的选择

00:17:24.636 --> 00:17:26.425 A:middle
好了 这是路线选择器

00:17:26.425 --> 00:17:27.576 A:middle
现在我们说一下

00:17:27.576 --> 00:17:29.296 A:middle
究竟如何

00:17:29.296 --> 00:17:30.316 A:middle
播放内容

00:17:31.306 --> 00:17:32.686 A:middle
你还是只需要用

00:17:32.686 --> 00:17:34.836 A:middle
AVAudioPlayer 和 AVAudioEngine

00:17:34.996 --> 00:17:35.946 A:middle
watchOS 上支持了

00:17:35.946 --> 00:17:38.236 A:middle
很多种内容格式

00:17:38.946 --> 00:17:40.116 A:middle
更好的一点是

00:17:40.226 --> 00:17:42.586 A:middle
如果你有 iOS 代码使用了

00:17:42.586 --> 00:17:44.006 A:middle
这些类 你可以在 iOS 和 watchOS

00:17:44.006 --> 00:17:48.026 A:middle
播放操作中共享程序框架

00:17:49.096 --> 00:17:51.206 A:middle
在 AVAudioEngine 中

00:17:51.206 --> 00:17:53.736 A:middle
你实际上可以

00:17:53.736 --> 00:17:55.506 A:middle
配合着 AVAudioPlayer

00:17:55.506 --> 00:17:57.446 A:middle
节点播放一些 DRM 内容

00:17:57.996 --> 00:17:59.666 A:middle
你可以播放你自己的

00:17:59.666 --> 00:18:01.086 A:middle
DRM 内容 你自己

00:17:59.666 --> 00:18:01.086 A:middle
DRM 内容 你自己

00:18:01.086 --> 00:18:03.426 A:middle
进行解密 然后给用户播放

00:18:03.936 --> 00:18:06.476 A:middle
请特别注意一下

00:18:06.476 --> 00:18:09.676 A:middle
watchOS 本身的

00:18:09.676 --> 00:18:11.866 A:middle
电力 所以请在真的十分

00:18:11.866 --> 00:18:14.056 A:middle
必要时候使用音频播放

00:18:14.056 --> 00:18:15.476 A:middle
比如用户真的就想

00:18:15.476 --> 00:18:16.326 A:middle
在这放音频

00:18:17.316 --> 00:18:19.386 A:middle
对于 AVAudioEngine 来说

00:18:19.386 --> 00:18:21.886 A:middle
autoShutdownEnabled 属性是

00:18:21.966 --> 00:18:24.096 A:middle
默认开启的 所以如果没有

00:18:24.096 --> 00:18:25.946 A:middle
在 AVAudioEngine 发现活动节点

00:18:25.946 --> 00:18:29.026 A:middle
我们会在必要的时候

00:18:29.026 --> 00:18:31.026 A:middle
自动关闭 AVAudioEngine

00:18:31.516 --> 00:18:34.796 A:middle
这就是我们的播放

00:18:35.366 --> 00:18:37.366 A:middle
现在我们说一下

00:18:37.366 --> 00:18:38.436 A:middle
我们的 MediaPlayer framework

00:18:38.826 --> 00:18:40.076 A:middle
当然了 如果你要

00:18:40.076 --> 00:18:41.176 A:middle
提供我们的 Now Playing

00:18:41.176 --> 00:18:44.136 A:middle
信息给系统

00:18:44.586 --> 00:18:47.576 A:middle
那么 Now Playing UI

00:18:47.576 --> 00:18:48.826 A:middle
会被更新 这是一个

00:18:48.826 --> 00:18:50.766 A:middle
系统级的播放信息

00:18:50.796 --> 00:18:51.886 A:middle
并且它会

00:18:51.886 --> 00:18:54.136 A:middle
基于你提供的信息更新

00:18:54.556 --> 00:18:55.506 A:middle
所以这些信息

00:18:55.506 --> 00:18:57.156 A:middle
会出现在 Now Playing App 或者在

00:18:57.156 --> 00:18:59.386 A:middle
Workout 一类的 App 之内或者

00:18:59.386 --> 00:19:00.636 A:middle
那些嵌入了 Now Playing

00:18:59.386 --> 00:19:00.636 A:middle
那些嵌入了 Now Playing

00:19:00.636 --> 00:19:02.906 A:middle
的第三方 App

00:19:03.376 --> 00:19:04.796 A:middle
这些地方都会显示

00:19:04.796 --> 00:19:07.366 A:middle
接下来 靠着 MediaPlayer

00:19:07.366 --> 00:19:08.326 A:middle
framework 我们希望处理一些

00:19:08.326 --> 00:19:10.386 A:middle
事件和各种媒体播放

00:19:10.386 --> 00:19:11.626 A:middle
远程控制指令

00:19:11.626 --> 00:19:13.396 A:middle
比如在 AirPods 上的

00:19:13.396 --> 00:19:14.526 A:middle
播放下一曲

00:19:15.576 --> 00:19:16.846 A:middle
让我们看看这些代码

00:19:16.846 --> 00:19:18.146 A:middle
如何提供

00:19:18.146 --> 00:19:19.346 A:middle
Now Playing 信息的

00:19:23.216 --> 00:19:26.986 A:middle
在这里我们有 MPNowPlaying InfoCenter

00:19:26.986 --> 00:19:28.176 A:middle
我们想要获取信息

00:19:28.576 --> 00:19:30.406 A:middle
然后接下来设置 nowPlayingInfo

00:19:30.956 --> 00:19:35.046 A:middle
之后我们需要设置

00:19:35.046 --> 00:19:36.526 A:middle
我们的 artwork 我们的 MPMedia

00:19:36.526 --> 00:19:37.566 A:middle
ItemArtwork

00:19:37.866 --> 00:19:39.126 A:middle
但是这个功能现在还没有在 seed 1 发布

00:19:39.126 --> 00:19:40.876 A:middle
它将会在 seed 2 里面出现

00:19:41.456 --> 00:19:43.526 A:middle
这个例子里 你提供的 artwork

00:19:43.526 --> 00:19:46.436 A:middle
显示在 Siri watch face

00:19:46.956 --> 00:19:51.606 A:middle
之后呢 我们设置好了 title album

00:19:51.606 --> 00:19:53.646 A:middle
artwork 我们它设置到

00:19:53.646 --> 00:19:55.436 A:middle
我们的 nowPlaying InfoCenter

00:19:56.206 --> 00:19:57.726 A:middle
之后我们再做一些

00:19:57.726 --> 00:20:01.206 A:middle
类似的工作 之后我们的数据

00:19:57.726 --> 00:20:01.206 A:middle
类似的工作 之后我们的数据

00:20:01.206 --> 00:20:02.946 A:middle
将在 Now Playing App 中出现

00:20:02.946 --> 00:20:04.816 A:middle
这就是 Now Playing App

00:20:05.086 --> 00:20:07.516 A:middle
我提供了一些关于

00:20:07.516 --> 00:20:10.296 A:middle
在我的 App 正在播放音频的信息

00:20:10.686 --> 00:20:15.196 A:middle
然后 Now Playing 与此同时

00:20:15.196 --> 00:20:16.306 A:middle
也会被更新

00:20:16.576 --> 00:20:17.726 A:middle
这个例子里 最底下

00:20:17.726 --> 00:20:18.866 A:middle
显示着 "Lights in the Sky"

00:20:18.866 --> 00:20:19.956 A:middle
正是我正在听的

00:20:20.286 --> 00:20:22.786 A:middle
之后呢  关于媒体播放

00:20:22.786 --> 00:20:24.246 A:middle
远程控制指令 也是一样的

00:20:24.246 --> 00:20:25.256 A:middle
用 MediaPlayer framework

00:20:25.256 --> 00:20:27.416 A:middle
现在在 watchOS 上你可以

00:20:27.416 --> 00:20:29.466 A:middle
随心所欲处理这些指令

00:20:31.366 --> 00:20:32.876 A:middle
让我们看一些代码

00:20:32.876 --> 00:20:34.456 A:middle
我们获取

00:20:34.566 --> 00:20:35.986 A:middle
MPRemoteCommandCenter

00:20:36.836 --> 00:20:38.266 A:middle
之后 不去播放

00:20:38.266 --> 00:20:40.046 A:middle
下一曲 我们实际上

00:20:40.046 --> 00:20:42.156 A:middle
可以为用户

00:20:42.656 --> 00:20:43.546 A:middle
做得更好

00:20:43.666 --> 00:20:44.846 A:middle
所以我有这样一个函数

00:20:44.966 --> 00:20:46.966 A:middle
它是 enableSkipForwardCommand

00:20:47.396 --> 00:20:49.866 A:middle
它的默认是 15 秒

00:20:50.816 --> 00:20:52.646 A:middle
我可以设置一个喜欢的

00:20:52.646 --> 00:20:53.836 A:middle
快进时间

00:20:53.946 --> 00:20:55.966 A:middle
然后我又添加了 target

00:20:55.966 --> 00:20:57.836 A:middle
和 selector 接下来我在 command center

00:20:57.836 --> 00:21:00.596 A:middle
启动了远程指令

00:20:57.836 --> 00:21:00.596 A:middle
启动了远程指令

00:21:01.896 --> 00:21:03.406 A:middle
如果你想了解更多

00:21:03.406 --> 00:21:04.616 A:middle
media player framework 的信息 特别是

00:21:04.616 --> 00:21:05.696 A:middle
媒体播放远程指令

00:21:05.696 --> 00:21:07.296 A:middle
我很推荐

00:21:07.296 --> 00:21:09.236 A:middle
看一下 MP remote

00:21:09.236 --> 00:21:11.376 A:middle
command sample 的例子 这个在网上可以找到

00:21:11.946 --> 00:21:12.996 A:middle
这个例子里

00:21:12.996 --> 00:21:14.536 A:middle
设置好了想要的

00:21:14.536 --> 00:21:17.156 A:middle
快进时间之后之后 Now

00:21:17.156 --> 00:21:19.226 A:middle
Playing App 将会被适当地调整

00:21:19.226 --> 00:21:21.056 A:middle
这个 Now Playing UI  无论在哪里

00:21:21.056 --> 00:21:22.876 A:middle
都会显示减 15 秒

00:21:22.876 --> 00:21:25.196 A:middle
或者加 15 秒

00:21:25.196 --> 00:21:29.396 A:middle
这些都可以按你的喜好进行调整

00:21:29.546 --> 00:21:32.086 A:middle
好了 这就是手表上的

00:21:32.086 --> 00:21:34.486 A:middle
音频体验或者是

00:21:34.486 --> 00:21:35.826 A:middle
音频播放 我们再说说

00:21:35.826 --> 00:21:37.016 A:middle
音频体验吧

00:21:42.216 --> 00:21:44.286 A:middle
我想说音频体验主要

00:21:44.286 --> 00:21:46.086 A:middle
有四个主要的方面

00:21:46.476 --> 00:21:47.506 A:middle
有我们的自动启动

00:21:47.506 --> 00:21:48.536 A:middle
功能让你的 App

00:21:48.536 --> 00:21:49.686 A:middle
自动启动

00:21:50.236 --> 00:21:51.696 A:middle
有最前 App 状态

00:21:51.696 --> 00:21:54.366 A:middle
并且我们如何在 App 中利用它

00:21:54.936 --> 00:21:56.396 A:middle
有我们的新的

00:21:56.396 --> 00:21:57.356 A:middle
交互式通知

00:21:57.716 --> 00:22:00.066 A:middle
和我们的 Siri 快捷启动

00:21:57.716 --> 00:22:00.066 A:middle
和我们的 Siri 快捷启动

00:22:03.076 --> 00:22:05.566 A:middle
我们已经说了

00:22:05.566 --> 00:22:06.856 A:middle
很多在手表上的

00:22:06.856 --> 00:22:09.316 A:middle
播放 但是现在我要

00:22:09.316 --> 00:22:10.836 A:middle
说一说之前聊过的东西

00:22:10.836 --> 00:22:11.986 A:middle
我们还想再过一遍

00:22:11.986 --> 00:22:14.946 A:middle
远程控制的例子

00:22:15.136 --> 00:22:16.886 A:middle
比方说我正在 iPhone 上

00:22:16.886 --> 00:22:19.026 A:middle
用 Apple Music 放音乐

00:22:19.026 --> 00:22:20.426 A:middle
Now Playing App 会自动

00:22:20.426 --> 00:22:22.726 A:middle
在我的手表上显示相关信息

00:22:23.016 --> 00:22:24.486 A:middle
我很喜欢这个功能

00:22:24.486 --> 00:22:25.986 A:middle
就像魔法一样

00:22:25.986 --> 00:22:27.396 A:middle
看一眼我的手腕

00:22:27.396 --> 00:22:28.896 A:middle
我就可以控制播放了

00:22:28.896 --> 00:22:31.876 A:middle
这是最酷的事情了

00:22:33.306 --> 00:22:34.456 A:middle
这个例子中 我们的 App

00:22:34.456 --> 00:22:35.626 A:middle
其实在 iPhone 上

00:22:35.626 --> 00:22:37.226 A:middle
播放内容

00:22:37.226 --> 00:22:38.626 A:middle
之后我们的

00:22:38.626 --> 00:22:40.936 A:middle
手表 App 就自动开启了

00:22:45.356 --> 00:22:46.766 A:middle
我们把这个叫做

00:22:46.766 --> 00:22:47.886 A:middle
自动启动音频 App 功能

00:22:48.386 --> 00:22:49.766 A:middle
只要 Now Playing

00:22:49.766 --> 00:22:51.496 A:middle
session 正在 iPhone 上运行

00:22:51.806 --> 00:22:53.426 A:middle
我们的 Apple Watch App

00:22:53.426 --> 00:22:55.116 A:middle
就会被提到最前面显示

00:22:56.126 --> 00:22:57.316 A:middle
并且会在 session 中

00:22:57.316 --> 00:22:59.766 A:middle
一直保持最前

00:23:00.056 --> 00:23:01.406 A:middle
只要用户在

00:23:01.406 --> 00:23:02.726 A:middle
iPhone 上听内容

00:23:02.986 --> 00:23:04.736 A:middle
我们的 App 就会

00:23:04.736 --> 00:23:06.076 A:middle
保持在最前

00:23:06.076 --> 00:23:07.296 A:middle
除非用户会到别的地方

00:23:08.556 --> 00:23:11.196 A:middle
在 watchOS 5 上我们

00:23:11.196 --> 00:23:12.756 A:middle
开放了 Now Playing session

00:23:12.756 --> 00:23:14.816 A:middle
API 这能让你知道

00:23:14.816 --> 00:23:16.236 A:middle
何时你 iPhone 上的 Now Playing session

00:23:16.236 --> 00:23:17.756 A:middle
被启动了

00:23:18.156 --> 00:23:19.496 A:middle
这样你可以

00:23:19.496 --> 00:23:21.396 A:middle
直接给用户显示合适的界面

00:23:21.906 --> 00:23:24.026 A:middle
做这个呢 你需要

00:23:24.026 --> 00:23:25.486 A:middle
使用 handleRemoteNow

00:23:25.486 --> 00:23:27.216 A:middle
PlayingActivity on

00:23:27.216 --> 00:23:28.326 A:middle
WKExtension Delegate

00:23:30.026 --> 00:23:31.636 A:middle
让我们看看

00:23:31.636 --> 00:23:35.896 A:middle
具体代码是怎么用

00:23:36.086 --> 00:23:36.976 A:middle
看这里

00:23:36.976 --> 00:23:38.196 A:middle
我有了我的 extension delegate

00:23:39.176 --> 00:23:40.406 A:middle
我可以实现

00:23:40.406 --> 00:23:42.316 A:middle
handleRemoteNow PlayingActivity

00:23:43.216 --> 00:23:44.286 A:middle
首先我需要

00:23:44.286 --> 00:23:46.846 A:middle
检查一下我的用户界面正在显示什么

00:23:47.476 --> 00:23:50.256 A:middle
所以我调用一下 visible

00:23:50.256 --> 00:23:51.926 A:middle
interface controller 我可以

00:23:51.926 --> 00:23:54.016 A:middle
知道我的用户现在界面的样子

00:23:54.016 --> 00:23:55.856 A:middle
他是否在我的 Now

00:23:55.856 --> 00:23:57.576 A:middle
Playing UI 上 如果在那么很棒

00:23:57.776 --> 00:23:58.746 A:middle
就留在这里

00:23:59.896 --> 00:24:01.116 A:middle
如果不在

00:23:59.896 --> 00:24:01.116 A:middle
如果不在

00:24:01.116 --> 00:24:04.316 A:middle
我们直接重新加载界面

00:24:04.316 --> 00:24:05.836 A:middle
这样我们就有了

00:24:05.836 --> 00:24:07.636 A:middle
魔法般的体验 因为无论停在哪个界面

00:24:07.636 --> 00:24:09.536 A:middle
我举起手

00:24:09.536 --> 00:24:10.976 A:middle
就可以看到我想控制的东西

00:24:16.116 --> 00:24:18.396 A:middle
有时候呢 如果它不是很适合

00:24:18.396 --> 00:24:20.316 A:middle
用户的需求

00:24:20.316 --> 00:24:22.056 A:middle
你也许会选择主动退出

00:24:22.506 --> 00:24:23.896 A:middle
选择你觉得对的就好

00:24:23.896 --> 00:24:25.066 A:middle
做个决定

00:24:25.376 --> 00:24:26.556 A:middle
比如说你的 App

00:24:26.556 --> 00:24:28.616 A:middle
跟你的手机 App 没什么关系

00:24:28.616 --> 00:24:29.946 A:middle
那选择退出

00:24:29.946 --> 00:24:32.086 A:middle
是一个非常合适的选择

00:24:32.836 --> 00:24:34.756 A:middle
要做到这样 在你的 WK extension

00:24:34.946 --> 00:24:36.716 A:middle
的 auto-launch feature

00:24:36.716 --> 00:24:40.396 A:middle
里使用 opt out

00:24:40.396 --> 00:24:41.306 A:middle
info.plist

00:24:41.796 --> 00:24:44.916 A:middle
如果你选择了主动退出

00:24:44.996 --> 00:24:46.366 A:middle
Now Playing App 将会

00:24:46.366 --> 00:24:47.146 A:middle
顶上来出现在屏幕

00:24:52.046 --> 00:24:53.716 A:middle
现在呢 我们说说

00:24:53.716 --> 00:24:55.116 A:middle
最前 App 状态

00:24:55.116 --> 00:24:56.906 A:middle
我们先做一个它的小的回顾

00:24:58.096 --> 00:25:00.196 A:middle
我有个 App

00:24:58.096 --> 00:25:00.196 A:middle
我有个 App

00:25:00.196 --> 00:25:01.276 A:middle
它正在前台运行

00:25:01.276 --> 00:25:02.196 A:middle
我正在看着它

00:25:02.526 --> 00:25:04.066 A:middle
屏幕是亮着的并且这个 App

00:25:04.066 --> 00:25:06.176 A:middle
被认为是活跃并且在最前

00:25:06.826 --> 00:25:07.766 A:middle
但是然后呢

00:25:07.766 --> 00:25:08.376 A:middle
我把手垂下来

00:25:09.546 --> 00:25:11.246 A:middle
我的 App 还是

00:25:11.246 --> 00:25:12.646 A:middle
被当作最前

00:25:13.106 --> 00:25:14.396 A:middle
因为我把手再抬起来

00:25:14.396 --> 00:25:15.996 A:middle
还是会见到这个 App

00:25:16.416 --> 00:25:18.356 A:middle
这样的话

00:25:18.356 --> 00:25:20.506 A:middle
这个 App 仅仅是进入了后台

00:25:24.116 --> 00:25:26.066 A:middle
依靠最前 App 状态

00:25:26.266 --> 00:25:27.226 A:middle
我们在系统上

00:25:27.226 --> 00:25:28.586 A:middle
增强了一些功能

00:25:29.116 --> 00:25:32.286 A:middle
从 iPhone 来的

00:25:32.406 --> 00:25:33.856 A:middle
后台传输 比如说我们正在

00:25:33.856 --> 00:25:35.436 A:middle
从 iPhone 向手表传输

00:25:35.576 --> 00:25:36.986 A:middle
内容 这些

00:25:36.986 --> 00:25:39.036 A:middle
后台传输任务 他们完成后

00:25:39.036 --> 00:25:40.326 A:middle
它将直接唤醒恢复

00:25:40.476 --> 00:25:42.266 A:middle
进入我们的 App 如果

00:25:42.266 --> 00:25:43.586 A:middle
我们的 App 在最前状态

00:25:44.486 --> 00:25:45.996 A:middle
我们的 URL session 恢复

00:25:45.996 --> 00:25:47.286 A:middle
也是这么工作的

00:25:47.616 --> 00:25:49.886 A:middle
比如这个 URL session 我们

00:25:49.886 --> 00:25:51.246 A:middle
的后台 session 之前在下载

00:25:51.246 --> 00:25:53.166 A:middle
现在已经完成了

00:25:53.166 --> 00:25:54.396 A:middle
我们的 App

00:25:54.396 --> 00:25:56.346 A:middle
会被直接唤醒并且播放相应内容

00:25:56.826 --> 00:26:00.566 A:middle
如果我们在最前

00:25:56.826 --> 00:26:00.566 A:middle
如果我们在最前

00:26:00.566 --> 00:26:02.256 A:middle
用户将会到我们这 所以我们

00:26:02.256 --> 00:26:03.776 A:middle
可以决定何时或者是否

00:26:03.776 --> 00:26:06.036 A:middle
让通知显示 还有

00:26:06.036 --> 00:26:07.916 A:middle
我们需要适当地处理通知

00:26:08.286 --> 00:26:09.686 A:middle
也许我们想要让用户留在

00:26:09.686 --> 00:26:11.166 A:middle
这个 App 或者可能我们想要

00:26:11.166 --> 00:26:12.716 A:middle
向用户展示一个通知

00:26:13.136 --> 00:26:14.566 A:middle
在最前的 App 状态中

00:26:14.566 --> 00:26:15.826 A:middle
我们可以做这个决定

00:26:16.256 --> 00:26:18.786 A:middle
如果我们 App 在最前

00:26:18.786 --> 00:26:20.626 A:middle
状态 我们可以震动一下

00:26:21.236 --> 00:26:23.516 A:middle
如果你还想再

00:26:23.516 --> 00:26:24.706 A:middle
了解一些最前 App

00:26:24.706 --> 00:26:26.646 A:middle
状态 有个去年的演讲

00:26:26.646 --> 00:26:28.476 A:middle
关于这个 The Life of a watchOS App

00:26:28.956 --> 00:26:30.396 A:middle
这是个不错的演讲

00:26:30.396 --> 00:26:31.806 A:middle
你也许能认出这是哪个演讲者

00:26:31.806 --> 00:26:32.666 A:middle
他挺不错的

00:26:33.636 --> 00:26:35.956 A:middle
你想要保持

00:26:35.956 --> 00:26:38.816 A:middle
最前状态两分钟 但是如果你

00:26:38.816 --> 00:26:40.396 A:middle
能够想起来 我之前延长了

00:26:40.396 --> 00:26:41.336 A:middle
最前状态时间

00:26:41.716 --> 00:26:43.066 A:middle
这样的话 最前时间将会

00:26:43.066 --> 00:26:45.526 A:middle
被默认延长到8 分钟

00:26:45.986 --> 00:26:47.636 A:middle
一样的 这个是很方便

00:26:47.636 --> 00:26:48.856 A:middle
来用于下载内容

00:26:48.856 --> 00:26:50.666 A:middle
所以我直接延长了

00:26:50.666 --> 00:26:52.666 A:middle
最前时间

00:27:00.236 --> 00:27:01.446 A:middle
如果我们正在播放

00:27:01.446 --> 00:27:03.996 A:middle
一些音频 我们的 App

00:27:03.996 --> 00:27:06.046 A:middle
会在整个 session 保持

00:27:06.046 --> 00:27:07.796 A:middle
最前状态 就像远程控制

00:27:07.796 --> 00:27:10.006 A:middle
iPhone 上正在播放的

00:27:10.006 --> 00:27:11.266 A:middle
音频一样

00:27:12.396 --> 00:27:13.566 A:middle
还有呢 当用户

00:27:13.566 --> 00:27:15.716 A:middle
离开了界面

00:27:15.716 --> 00:27:17.646 A:middle
你的 App 将不是最前了

00:27:17.646 --> 00:27:19.066 A:middle
但后台播放

00:27:19.066 --> 00:27:20.016 A:middle
还是会正常运行

00:27:21.166 --> 00:27:22.346 A:middle
这个情况下 当然

00:27:22.346 --> 00:27:23.826 A:middle
你需要处理好

00:27:23.826 --> 00:27:26.266 A:middle
后台各种事件

00:27:26.266 --> 00:27:30.786 A:middle
好了 现在 当我们在最前

00:27:30.786 --> 00:27:33.746 A:middle
的状态之中 我们可以

00:27:33.746 --> 00:27:36.116 A:middle
和通知适当地结合起来

00:27:36.116 --> 00:27:38.406 A:middle
我们可以显示个通知 比如

00:27:38.406 --> 00:27:39.586 A:middle
当下载已完成了 我们可以显示个

00:27:39.586 --> 00:27:41.546 A:middle
本地内容可以播放的通知

00:27:42.006 --> 00:27:43.466 A:middle
我们想把播放

00:27:43.466 --> 00:27:44.826 A:middle
作为主要的用户操作

00:27:45.596 --> 00:27:46.876 A:middle
靠着我们新的在 watchOS 上的

00:27:46.876 --> 00:27:49.046 A:middle
交互通知 我么可以让

00:27:49.046 --> 00:27:50.396 A:middle
用户在通知里

00:27:50.396 --> 00:27:52.906 A:middle
设置一些播放参数

00:27:52.906 --> 00:27:56.156 A:middle
并且可以把启动播放

00:27:56.156 --> 00:27:57.946 A:middle
作为主要操作 之后可以

00:27:57.946 --> 00:27:59.616 A:middle
立即进入 App

00:27:59.616 --> 00:28:00.646 A:middle
启动播放

00:27:59.616 --> 00:28:00.646 A:middle
启动播放

00:28:01.576 --> 00:28:03.546 A:middle
比如我们有

00:28:03.546 --> 00:28:06.146 A:middle
Salvador Dali exhibit

00:28:06.146 --> 00:28:07.226 A:middle
它已经准备好了

00:28:07.296 --> 00:28:08.556 A:middle
我们可以调整播放速度

00:28:08.556 --> 00:28:10.496 A:middle
并且直接启动播放

00:28:10.996 --> 00:28:12.976 A:middle
它将启动我的 App 然后

00:28:12.976 --> 00:28:14.556 A:middle
我可以以合适的

00:28:14.556 --> 00:28:16.326 A:middle
速度给用户播放内容

00:28:16.326 --> 00:28:19.796 A:middle
如果你想要更多

00:28:19.796 --> 00:28:21.336 A:middle
关于交互通知的内容

00:28:21.666 --> 00:28:22.856 A:middle
可以看看 What's New in

00:28:22.856 --> 00:28:24.226 A:middle
watchOS 之前的演讲

00:28:24.876 --> 00:28:26.056 A:middle
他们都在网上可以找到

00:28:26.056 --> 00:28:27.676 A:middle
这是个很好的演讲 你可以

00:28:27.676 --> 00:28:28.756 A:middle
学到很多关于

00:28:28.756 --> 00:28:30.176 A:middle
交互式通知的内容

00:28:30.176 --> 00:28:31.206 A:middle
在看完这个之后

00:28:31.976 --> 00:28:33.526 A:middle
好了 你还记得

00:28:33.526 --> 00:28:35.486 A:middle
我之前这个

00:28:35.486 --> 00:28:36.456 A:middle
发布通知

00:28:36.456 --> 00:28:39.316 A:middle
提醒用户

00:28:39.316 --> 00:28:40.966 A:middle
有东西可以播放了的功能吗

00:28:41.396 --> 00:28:42.716 A:middle
比如说我们的 App

00:28:42.716 --> 00:28:45.046 A:middle
现在在最前

00:28:45.246 --> 00:28:46.336 A:middle
这样呢当我们

00:28:46.336 --> 00:28:48.006 A:middle
从最前状态的 App

00:28:48.006 --> 00:28:50.306 A:middle
发布了通知

00:28:50.366 --> 00:28:52.126 A:middle
这将会被调用

00:28:52.126 --> 00:28:53.866 A:middle
并且显示一个有 completion handler

00:28:53.866 --> 00:28:55.276 A:middle
的通知

00:28:56.426 --> 00:28:57.886 A:middle
这样的话 我实际上

00:28:57.886 --> 00:28:59.406 A:middle
可以决定是否仍要

00:28:59.406 --> 00:29:00.846 A:middle
发布这个通知

00:28:59.406 --> 00:29:00.846 A:middle
发布这个通知

00:29:01.226 --> 00:29:02.436 A:middle
或者因为我的 App

00:29:02.436 --> 00:29:04.176 A:middle
已经在最前了 我可以直接

00:29:04.176 --> 00:29:06.076 A:middle
震动一下让用户知道

00:29:06.076 --> 00:29:07.586 A:middle
抬起你的手

00:29:07.586 --> 00:29:08.516 A:middle
你就有新的内容了

00:29:08.516 --> 00:29:09.556 A:middle
我可以更新界面

00:29:10.216 --> 00:29:11.436 A:middle
同样 如果你想知道

00:29:11.436 --> 00:29:12.686 A:middle
更多关于最前状态通知的信息

00:29:12.686 --> 00:29:14.396 A:middle
可以去看一下

00:29:14.396 --> 00:29:15.636 A:middle
Life of a watchOS App

00:29:16.516 --> 00:29:18.396 A:middle
好了 我们已经用了

00:29:18.396 --> 00:29:19.976 A:middle
最前 App 状态和

00:29:19.976 --> 00:29:22.266 A:middle
交互式通知

00:29:22.266 --> 00:29:24.756 A:middle
但我们也想在 Siri watch face 上显示内容

00:29:25.756 --> 00:29:27.306 A:middle
使用音频 App 我们可以

00:29:27.306 --> 00:29:28.906 A:middle
靠着相关的快捷方式

00:29:28.906 --> 00:29:30.806 A:middle
向 Siri watch face 提供一些

00:29:30.856 --> 00:29:32.336 A:middle
播放建议

00:29:32.976 --> 00:29:36.356 A:middle
比如用户最喜欢的播客下一期

00:29:36.356 --> 00:29:38.506 A:middle
内容或者

00:29:38.506 --> 00:29:40.506 A:middle
刚刚同步到手表的音乐

00:29:43.986 --> 00:29:46.116 A:middle
举个例子 Audible 可以

00:29:46.116 --> 00:29:47.586 A:middle
产生类似的体验

00:29:47.976 --> 00:29:49.726 A:middle
它可以从 Siri watch face

00:29:49.726 --> 00:29:52.156 A:middle
直接让用户进入App

00:29:52.156 --> 00:29:54.756 A:middle
然后恢复播放有声读物

00:29:55.236 --> 00:29:59.036 A:middle
无论何时交互

00:29:59.036 --> 00:30:00.866 A:middle
产生了 就是

00:29:59.036 --> 00:30:00.866 A:middle
产生了 就是

00:30:00.866 --> 00:30:02.336 A:middle
强调一下 一定要想一下

00:30:02.336 --> 00:30:03.136 A:middle
你送出了什么

00:30:03.586 --> 00:30:05.256 A:middle
要确定你把你的 INMedia

00:30:05.256 --> 00:30:07.656 A:middle
PlaybackIntent 送到系统

00:30:07.656 --> 00:30:08.836 A:middle
这样之后系统可以知道

00:30:08.836 --> 00:30:10.816 A:middle
大多数时候用户在干什么

00:30:11.286 --> 00:30:14.396 A:middle
这样呢 你会跟 Siri watch face 连接更紧密

00:30:17.016 --> 00:30:19.016 A:middle
同时也要想想你在 Siri

00:30:19.016 --> 00:30:21.116 A:middle
中的快捷启动短语 比如

00:30:21.456 --> 00:30:23.836 A:middle
设计一个合适的短语

00:30:23.926 --> 00:30:26.486 A:middle
你的用户可以在 Siri 用它

00:30:26.516 --> 00:30:30.586 A:middle
直接进入你的 App

00:30:30.586 --> 00:30:31.706 A:middle
然后进行播放

00:30:32.206 --> 00:30:35.826 A:middle
总之 在 Siri watch face

00:30:35.826 --> 00:30:38.296 A:middle
你可以设计良好的体验

00:30:38.556 --> 00:30:39.736 A:middle
也许你有一些

00:30:39.736 --> 00:30:41.366 A:middle
只能看一眼的信息类似  “嘿

00:30:41.366 --> 00:30:42.666 A:middle
展览就要开始了”

00:30:43.266 --> 00:30:45.016 A:middle
或者一下可以点进去的

00:30:45.016 --> 00:30:46.386 A:middle
操作 像 Audible 做的

00:30:46.386 --> 00:30:47.946 A:middle
“嘿 我们马上开始语音导览”

00:30:47.946 --> 00:30:53.446 A:middle
然后直接进入 App

00:30:53.706 --> 00:30:56.166 A:middle
关于各种快捷方式 你要把你的

00:30:56.166 --> 00:30:57.966 A:middle
INMediaPlaybackIntent 送出去

00:30:58.876 --> 00:31:00.706 A:middle
使用相关的快捷方式的 API

00:30:58.876 --> 00:31:00.706 A:middle
使用相关的快捷方式的 API

00:31:00.706 --> 00:31:02.236 A:middle
使之出现在 Siri watch face 上

00:31:03.436 --> 00:31:04.746 A:middle
并且你要想好你的

00:31:04.746 --> 00:31:05.256 A:middle
快捷启动短语

00:31:06.786 --> 00:31:07.906 A:middle
我们这个礼拜有了很多

00:31:07.906 --> 00:31:09.706 A:middle
关于快捷方式的演讲

00:31:09.706 --> 00:31:12.326 A:middle
我重申一下 Shortcuts on the

00:31:12.326 --> 00:31:13.396 A:middle
Siri Watch Face 这个演讲的重要性

00:31:13.706 --> 00:31:14.506 A:middle
我自己这么觉得

00:31:14.506 --> 00:31:16.126 A:middle
这个很棒

00:31:16.126 --> 00:31:16.706 A:middle
我也从中学了很多

00:31:19.276 --> 00:31:21.556 A:middle
总结一下 第一

00:31:21.556 --> 00:31:23.436 A:middle
你可以把原生控制

00:31:23.436 --> 00:31:25.866 A:middle
直接嵌入到你的 App

00:31:26.346 --> 00:31:27.676 A:middle
你可以随意地使用

00:31:27.676 --> 00:31:29.226 A:middle
后台播放来

00:31:29.226 --> 00:31:30.986 A:middle
随心所欲地处理

00:31:30.986 --> 00:31:32.176 A:middle
远程控制命令

00:31:32.636 --> 00:31:35.686 A:middle
同时也有了更好的

00:31:35.686 --> 00:31:37.326 A:middle
向手表传输内容

00:31:37.326 --> 00:31:39.066 A:middle
并且把他们

00:31:39.066 --> 00:31:40.416 A:middle
呈现给用户的方法

00:31:41.556 --> 00:31:42.786 A:middle
如果你想要更多的

00:31:43.126 --> 00:31:44.836 A:middle
信息 请到网上

00:31:44.836 --> 00:31:47.816 A:middle
查阅资料 或者加入我们下午的实验室活动

00:31:49.016 --> 00:31:50.676 A:middle
我真的十分激动

00:31:50.676 --> 00:31:52.216 A:middle
能见到这样为 watchOS 构建的的音频 App

00:31:52.216 --> 00:31:54.816 A:middle
谢谢大家

00:31:55.166 --> 00:31:57.816 A:middle
享受 WWWDC 大会吧 谢谢

00:31:58.516 --> 00:32:03.500 A:middle
[ 掌声 ]
