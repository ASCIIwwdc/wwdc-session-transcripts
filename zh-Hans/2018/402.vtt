WEBVTT

00:00:16.750 --> 00:00:22.890 align:middle line:0
（充分利用XCODE中的
PLAYGROUND）

00:00:22.956 --> 00:00:24.057 align:middle line:0
（演讲402）

00:00:29.062 --> 00:00:30.097 align:middle line:-1
下午好！

00:00:30.163 --> 00:00:33.066 align:middle line:-2
欢迎来到“充分利用Xcode中的
Playground”演讲

00:00:33.467 --> 00:00:37.104 align:middle line:-2
我叫Tibet Rooney-Rabdau
和我一起的是我的同伴

00:00:37.171 --> 00:00:38.972 align:middle line:-2
Alex Brown
和TJ Usiyan

00:00:40.207 --> 00:00:42.209 align:middle line:-1
我喜欢每次当我有新的编程想法时

00:00:42.276 --> 00:00:44.444 align:middle line:-2
我能直接在Playground中
进行尝试

00:00:45.112 --> 00:00:48.682 align:middle line:-2
在今天的演讲中 我们将与你
分享我们最喜爱的工作流程

00:00:49.383 --> 00:00:50.384 align:middle line:-1
对于那些不太熟悉

00:00:50.450 --> 00:00:53.053 align:middle line:-2
Xcode中Playground
的用户以及更高级的用户来说

00:00:53.120 --> 00:00:54.755 align:middle line:-1
这都将是一次很棒的演讲

00:00:56.890 --> 00:00:59.826 align:middle line:-2
我们将从Playground原理
开始今天的演讲

00:01:00.327 --> 00:01:04.431 align:middle line:-2
简要介绍Playground
标记和嵌入资源

00:01:05.432 --> 00:01:08.235 align:middle line:-2
然后向你展示如何在
Playground上逐步运行代码

00:01:08.936 --> 00:01:12.606 align:middle line:-2
我们将讨论一些能让你更好地
控制代码执行的小技巧

00:01:14.208 --> 00:01:16.610 align:middle line:-1
最后 我们以一些更高级的技术收尾

00:01:16.944 --> 00:01:20.347 align:middle line:-2
包括走进Custom Playground
Display Convertible的精彩世界

00:01:20.647 --> 00:01:23.984 align:middle line:-2
我们将使用此协议
来定制你的内联结果

00:01:25.052 --> 00:01:30.490 align:middle line:-2
我们还将讨论如何使用工作区
来实践框架中的代码

00:01:32.559 --> 00:01:35.729 align:middle line:-2
使用Playground
可以一种互动方式探索Swift

00:01:35.796 --> 00:01:39.066 align:middle line:-2
也可以为他人创建学习环境
或为app的一部分开发原型

00:01:40.467 --> 00:01:43.537 align:middle line:-2
让我们快速浏览一下
Xcode中的Playground

00:01:46.773 --> 00:01:50.777 align:middle line:-2
当你第一次打开Playground时
Xcode会显示标准编辑器视图

00:01:51.311 --> 00:01:55.249 align:middle line:-2
这是你在Xcode中使用的
基本编辑模式 外加一些额外功能

00:01:56.216 --> 00:01:59.186 align:middle line:-2
当你使用Playground时
这个编辑器的独特之处

00:01:59.253 --> 00:02:01.488 align:middle line:-1
在于右侧的运行结果边栏

00:01:59.253 --> 00:02:01.488 align:middle line:-1
在于右侧的运行结果边栏

00:02:01.855 --> 00:02:04.391 align:middle line:-2
显示你的代码中
每一个表达式的结果

00:02:06.126 --> 00:02:09.863 align:middle line:-1
你还可以将这些结果添加为内联结果

00:02:10.898 --> 00:02:14.535 align:middle line:-2
这是通过点击结果边栏中的
在运行结果旁边的

00:02:14.601 --> 00:02:15.769 align:middle line:-1
矩形按钮来实现的

00:02:16.870 --> 00:02:20.207 align:middle line:-2
你的结果将会在Swift代码中
内联显示出来

00:02:22.809 --> 00:02:24.945 align:middle line:-1
在这个例子中 你可以看到

00:02:25.012 --> 00:02:26.380 align:middle line:-1
“你好 Playground”

00:02:26.647 --> 00:02:29.116 align:middle line:-1
被添加到我们的字符串变量声明下面

00:02:31.518 --> 00:02:33.687 align:middle line:-1
我们来看一下辅助编辑器模式

00:02:34.855 --> 00:02:37.925 align:middle line:-2
在Xcode的Playground中
这种模式的有趣之处在于

00:02:37.991 --> 00:02:41.929 align:middle line:-2
你可以使用实时视图
更详细地可视化你的结果

00:02:43.697 --> 00:02:46.867 align:middle line:-2
在这个例子中 我使用
UIView创建了一个实时视图

00:02:46.934 --> 00:02:48.335 align:middle line:-1
来显示欢迎消息

00:02:49.203 --> 00:02:53.307 align:middle line:-2
但你也可在iOS和tvOS Playground中
使用UIViewController

00:02:53.707 --> 00:02:57.344 align:middle line:-2
而对于macOS Playground
你可使用NSView和NSViewController

00:03:01.915 --> 00:03:05.652 align:middle line:-2
现在让我向你展示一段简短的代码
以演示如何显示实时视图

00:03:06.520 --> 00:03:08.822 align:middle line:-2
首先 你需要导入
PlaygroundSupport

00:03:10.224 --> 00:03:13.060 align:middle line:-2
PlaygroundSupport
是由Xcode提供的框架

00:03:13.126 --> 00:03:15.462 align:middle line:-2
以允许Playground能够
与Xcode之间进行交互

00:03:15.863 --> 00:03:17.998 align:middle line:-1
其中就包括了对显示实时视图的支持

00:03:18.866 --> 00:03:21.068 align:middle line:-2
你需要导入这个
Playground支持框架

00:03:21.134 --> 00:03:22.536 align:middle line:-1
以便使用其API

00:03:23.704 --> 00:03:28.108 align:middle line:-2
一旦你使用标准的UIKit或AppKit API
创建一个viewController

00:03:28.509 --> 00:03:31.111 align:middle line:-2
你需要将其传递给
PlaygroundSupport框架

00:03:31.778 --> 00:03:34.081 align:middle line:-2
你可以通过将当前
Playground页面的liveView属性

00:03:34.147 --> 00:03:36.884 align:middle line:-2
设置为viewController
来完成此操作

00:03:37.584 --> 00:03:40.354 align:middle line:-2
这将会告诉Xcode
它应该在辅助编辑器中

00:03:40.420 --> 00:03:41.855 align:middle line:-1
显示viewController

00:03:43.690 --> 00:03:46.059 align:middle line:-1
-为让Playground更好看

00:03:46.126 --> 00:03:47.961 align:middle line:-1
你可以包含一些标记文本

00:03:48.362 --> 00:03:51.632 align:middle line:-2
当你在创建一个想与他人分享的
Playground时 这一点尤其有用

00:03:52.065 --> 00:03:57.171 align:middle line:-2
通过标记 你能在Playground中
添加风格化的文字、图片和视频

00:03:58.038 --> 00:04:01.341 align:middle line:-2
现在让我们快速浏览一下
可以怎样使用标记

00:03:58.038 --> 00:04:01.341 align:middle line:-2
现在让我们快速浏览一下
可以怎样使用标记

00:04:03.777 --> 00:04:07.347 align:middle line:-2
这里 我为我写的一首诗
添加了一些标记注释

00:04:08.148 --> 00:04:10.184 align:middle line:-1
标记注释与常规注释类似

00:04:10.250 --> 00:04:12.786 align:middle line:-1
只是在正斜杠后面有一个冒号

00:04:13.253 --> 00:04:16.290 align:middle line:-1
注释的其余部分将被视为标记文本

00:04:18.257 --> 00:04:21.161 align:middle line:-1
如果你有多行注释彼此相邻

00:04:21.228 --> 00:04:23.931 align:middle line:-1
则它们形成一个标记文本块

00:04:25.499 --> 00:04:27.835 align:middle line:-1
你也可以使用多行注释

00:04:27.901 --> 00:04:30.304 align:middle line:-1
即在第一个星号后面加冒号

00:04:32.072 --> 00:04:34.074 align:middle line:-1
这是我们在Xcode中的标记

00:04:34.741 --> 00:04:37.244 align:middle line:-1
它显示了我写的诗的原始标记

00:04:38.078 --> 00:04:39.847 align:middle line:-1
要以渲染后的形式显示它

00:04:40.147 --> 00:04:42.883 align:middle line:-1
选择窗口右上角的按钮

00:04:42.950 --> 00:04:44.818 align:middle line:-2
这将打开
Xcode Inspector

00:04:45.919 --> 00:04:49.590 align:middle line:-2
在“Playground设置”
下方选择“渲染文档”

00:04:50.991 --> 00:04:53.093 align:middle line:-1
现在我的诗已经被渲染好了

00:04:55.529 --> 00:04:57.397 align:middle line:-2
使用标记还能实现的
另一个有趣的事

00:04:57.464 --> 00:04:59.466 align:middle line:-2
是将标题添入
Playground页面

00:05:00.167 --> 00:05:02.903 align:middle line:-2
你可以使用标题创建
Playground的内部结构

00:05:03.270 --> 00:05:06.673 align:middle line:-2
你可以使用“#”号
来提供最多三级标题

00:05:07.875 --> 00:05:11.612 align:middle line:-2
在这个例子中
诗的标题“玫瑰是红色的”

00:05:11.678 --> 00:05:12.913 align:middle line:-1
作为一级标题

00:05:13.714 --> 00:05:17.217 align:middle line:-2
副标题“标记颂歌”
作为二级标题

00:05:17.918 --> 00:05:20.220 align:middle line:-2
而我的署名行则是
第三级标题

00:05:21.421 --> 00:05:23.090 align:middle line:-1
请记住在“#”号

00:05:23.156 --> 00:05:24.992 align:middle line:-1
和标题字符串之间添加至少一个空格

00:05:25.058 --> 00:05:27.561 align:middle line:-2
否则渲染时“#”号
将会与你的标题连在一起

00:05:29.530 --> 00:05:31.298 align:middle line:-1
这是诗中的标题

00:05:31.365 --> 00:05:32.699 align:middle line:-1
经过渲染后的效果

00:05:33.734 --> 00:05:36.236 align:middle line:-1
你可以看到第一级标题最大

00:05:36.303 --> 00:05:38.739 align:middle line:-2
其次是第二级
最后是第三级标题

00:05:40.741 --> 00:05:43.644 align:middle line:-1
你也可以格式化标记内容中的文本

00:05:44.878 --> 00:05:48.448 align:middle line:-1
你可以在字符串两边添加星号

00:05:48.515 --> 00:05:50.684 align:middle line:-1
来斜体显示星号之间的文本

00:05:51.652 --> 00:05:54.821 align:middle line:-1
你也可以使用反引号来显示代码字体

00:05:56.823 --> 00:06:00.827 align:middle line:-2
最后 如果你使用两个星号
而不是一个 则文本将显示为粗体

00:05:56.823 --> 00:06:00.827 align:middle line:-2
最后 如果你使用两个星号
而不是一个 则文本将显示为粗体

00:06:01.795 --> 00:06:03.363 align:middle line:-1
让我们来看看它的渲染效果

00:06:05.332 --> 00:06:08.435 align:middle line:-2
你可以看到“红色”和“蓝色”
是斜体

00:06:08.735 --> 00:06:12.005 align:middle line:-2
“标记”以代码字体显示
以及“乐趣”以粗体显示

00:06:14.007 --> 00:06:16.410 align:middle line:-1
我们来看看如何在标记中使用列表

00:06:17.344 --> 00:06:20.380 align:middle line:-1
如果标记注释以数字开头 后跟句点

00:06:20.447 --> 00:06:23.450 align:middle line:-1
则它会在有序列表中创建一个项

00:06:24.618 --> 00:06:28.222 align:middle line:-2
在这个例子中
我将诗句添加到了一个有序列表中

00:06:29.389 --> 00:06:32.526 align:middle line:-2
在这里你可以看到我的诗句
显示在一个有序列表中

00:06:32.693 --> 00:06:35.963 align:middle line:-1
其中每行代表有序列表中的一个项

00:06:37.464 --> 00:06:39.800 align:middle line:-1
你也可以使用标记创建一个无序列表

00:06:40.767 --> 00:06:42.736 align:middle line:-1
无序列表与有序列表类似

00:06:42.803 --> 00:06:45.839 align:middle line:-1
除了每行以星号而不是数字开头

00:06:47.708 --> 00:06:50.310 align:middle line:-2
这是我的诗在一个
无序列表中呈现的效果

00:06:50.377 --> 00:06:51.645 align:middle line:-1
诗中每一行

00:06:51.712 --> 00:06:54.848 align:middle line:-1
都代表无序列表中的一个项

00:06:57.050 --> 00:06:59.086 align:middle line:-1
标记也可以包含链接

00:07:00.120 --> 00:07:03.557 align:middle line:-2
在这个例子中 我分别创建了
一个玫瑰链接和一个紫罗兰链接

00:07:04.358 --> 00:07:06.960 align:middle line:-2
为了创建链接
你需要将文本放在方括号中

00:07:07.027 --> 00:07:09.930 align:middle line:-2
然后将链接的目标
放在随后的圆括号中

00:07:11.598 --> 00:07:15.602 align:middle line:-1
另一种创建链接的方式是使用引用

00:07:16.003 --> 00:07:18.572 align:middle line:-2
在这个例子中
我创建了一个名为1的引用

00:07:18.972 --> 00:07:21.542 align:middle line:-2
但这可以是任何字符串
它不一定是一个数字

00:07:23.010 --> 00:07:26.880 align:middle line:-2
创建和使用链接引用时
需要将名称放在方括号中

00:07:27.181 --> 00:07:30.918 align:middle line:-2
创建引用时 添加一个冒号
随后是链接的目标

00:07:32.920 --> 00:07:35.656 align:middle line:-1
这是链接的呈现形式

00:07:36.456 --> 00:07:40.994 align:middle line:-2
玫瑰、紫罗兰和乐趣均以蓝色显示
以表示这是一个链接

00:07:43.130 --> 00:07:46.500 align:middle line:-2
目前为止 我们都在把
Playground视为单个空间

00:07:47.067 --> 00:07:49.469 align:middle line:-2
但Playground
可以包含多个页面

00:07:49.736 --> 00:07:51.772 align:middle line:-1
每个都有自己的标记和代码

00:07:52.940 --> 00:07:54.741 align:middle line:-2
要创建一个
新的Playground页面

00:07:54.975 --> 00:07:57.511 align:middle line:-2
选择Playground
然后打开文件菜单

00:07:57.978 --> 00:07:59.980 align:middle line:-2
选择“新建” 然后选择
“Playground页面”

00:08:01.081 --> 00:08:02.883 align:middle line:-2
你也可以通过如下方法
创建一个Playground页面

00:08:02.950 --> 00:08:06.920 align:middle line:-2
按住Ctrl键并点击Playground
然后选择“新建Playground页面”

00:08:09.156 --> 00:08:12.759 align:middle line:-2
你可以在标记中创建链接
以在不同页面之间进行导航

00:08:13.794 --> 00:08:15.362 align:middle line:-1
要转到上一页

00:08:15.529 --> 00:08:18.765 align:middle line:-2
你可以创建一个链接
其目标是@previous

00:08:19.666 --> 00:08:20.701 align:middle line:-1
要进入下一页

00:08:20.767 --> 00:08:23.570 align:middle line:-2
你可以创建一个
目标是@next的链接

00:08:24.538 --> 00:08:27.441 align:middle line:-1
最后 如果你想导航到特定页面

00:08:27.508 --> 00:08:30.878 align:middle line:-2
你可以创建一个链接
其目标是该页面的文件名

00:08:30.944 --> 00:08:35.249 align:middle line:-2
但需要去掉其扩展名
并使用百分号编码

00:08:35.315 --> 00:08:37.017 align:middle line:-1
替换任何空格或特殊字符

00:08:39.586 --> 00:08:41.488 align:middle line:-1
你也可以嵌入一些额外的内容

00:08:41.554 --> 00:08:43.690 align:middle line:-1
让Playground更加强大

00:08:44.758 --> 00:08:47.661 align:middle line:-2
你可将其它Swift文件
添加到源文件夹

00:08:47.728 --> 00:08:49.763 align:middle line:-2
该文件夹位于
Playground顶层

00:08:50.764 --> 00:08:53.534 align:middle line:-1
每个页面也有它自己的源文件夹

00:08:54.268 --> 00:08:56.837 align:middle line:-1
源将被编译为独立的模块

00:08:56.904 --> 00:08:59.339 align:middle line:-1
在可见的地方它们会被自动导入

00:08:59.406 --> 00:09:01.708 align:middle line:-1
所以你不必处理导入语句

00:08:59.406 --> 00:09:01.708 align:middle line:-1
所以你不必处理导入语句

00:09:02.409 --> 00:09:04.745 align:middle line:-1
由于它们被编译为独立的模块

00:09:05.078 --> 00:09:06.747 align:middle line:-1
因此你可以使用访问控制机制

00:09:06.813 --> 00:09:10.184 align:middle line:-1
来控制哪些东西可以从辅助源中导出

00:09:11.652 --> 00:09:14.388 align:middle line:-2
任何你想用作
主Playground源的东西

00:09:14.454 --> 00:09:16.023 align:middle line:-1
都应该标记为“公开”

00:09:16.657 --> 00:09:19.693 align:middle line:-1
需要放入源文件夹的一个好例子

00:09:19.760 --> 00:09:23.530 align:middle line:-1
是辅助代码

00:09:23.797 --> 00:09:25.599 align:middle line:-2
例如不属于
主Playground的类或插件

00:09:28.702 --> 00:09:31.271 align:middle line:-2
Playground
还可以包含其它资源

00:09:31.939 --> 00:09:35.542 align:middle line:-2
资源是你希望在Playground中
使用的任何其它文件

00:09:35.609 --> 00:09:38.979 align:middle line:-2
如图像、音频、视频
Storyboard和压缩文件

00:09:40.480 --> 00:09:41.815 align:middle line:-1
就像源一样

00:09:42.115 --> 00:09:44.852 align:middle line:-2
每个页面
都在Playground顶层

00:09:44.918 --> 00:09:46.420 align:middle line:-1
拥有一个资源文件夹

00:09:48.522 --> 00:09:51.425 align:middle line:-1
你可以在你的标记和代码中使用

00:09:51.491 --> 00:09:53.327 align:middle line:-2
你添加到Playground的
这些资源

00:09:54.728 --> 00:09:57.297 align:middle line:-2
类似于你在Playground上
创建链接的方式

00:09:57.364 --> 00:10:01.335 align:middle line:-2
你可以使用这里高亮显示的语法
在标记中嵌入图像

00:09:57.364 --> 00:10:01.335 align:middle line:-2
你可以使用这里高亮显示的语法
在标记中嵌入图像

00:10:02.703 --> 00:10:06.473 align:middle line:-2
你需要指定图像名称
在此为MyPicture.jpg

00:10:07.140 --> 00:10:10.110 align:middle line:-1
你还可以指定描述图像的替代文本

00:10:10.177 --> 00:10:14.047 align:middle line:-2
以及悬停标题文本
以表示我的鼠标停留在图像上方

00:10:15.148 --> 00:10:19.353 align:middle line:-2
替代文本和悬停标题文本
也可用于无障碍功能

00:10:19.419 --> 00:10:21.154 align:middle line:-1
从而让语音系统使用者受益

00:10:22.723 --> 00:10:25.092 align:middle line:-2
这里我们使用标准的UIImage
或NSImage API

00:10:25.359 --> 00:10:28.395 align:middle line:-1
访问相同的图像代码

00:10:30.264 --> 00:10:34.034 align:middle line:-2
与图片类似
你也可以将视频嵌入到你的标记中

00:10:35.068 --> 00:10:38.172 align:middle line:-2
这是通过使用与嵌入图像
相似的语法来完成的

00:10:38.372 --> 00:10:41.275 align:middle line:-1
但还需要额外指定一张海报图片

00:10:41.575 --> 00:10:43.944 align:middle line:-1
以及指定视频的宽度和高度

00:10:46.246 --> 00:10:49.349 align:middle line:-1
对于你想要在代码中访问的其它资源

00:10:49.416 --> 00:10:50.517 align:middle line:-1
比如这个视频

00:10:51.118 --> 00:10:54.721 align:middle line:-2
你可以使用标准的
Bundle API来查找资源

00:10:56.023 --> 00:10:59.660 align:middle line:-2
此示例使用URL函数的
forResource和withExtension参数

00:10:59.927 --> 00:11:03.530 align:middle line:-2
来向mainBundle索取
Mvideo.mp4资源的URL

00:10:59.927 --> 00:11:03.530 align:middle line:-2
来向mainBundle索取
Mvideo.mp4资源的URL

00:11:05.032 --> 00:11:06.400 align:middle line:-1
在Playground中的资源

00:11:06.466 --> 00:11:09.636 align:middle line:-2
会被自动视为
mainBundle的资源

00:11:12.039 --> 00:11:15.375 align:middle line:-2
有关你在Playground中
可使用的标记

00:11:15.442 --> 00:11:18.045 align:middle line:-2
以及我们前面讨论的
PlaygroundSupport框架的更多信息

00:11:18.111 --> 00:11:20.080 align:middle line:-1
请访问developer.apple.com

00:11:21.748 --> 00:11:24.785 align:middle line:-2
现在请欢迎我的同伴
Alex Brown上台

00:11:25.018 --> 00:11:26.186 align:middle line:-1
他将介绍更多关于

00:11:26.253 --> 00:11:28.555 align:middle line:-2
Xcode 10中
令人激动的新变化

00:11:29.223 --> 00:11:30.224 align:middle line:-1
谢谢

00:11:39.132 --> 00:11:40.133 align:middle line:-1
谢谢Tibet

00:11:40.434 --> 00:11:43.504 align:middle line:-2
我是Alex Brown
一名Core OS工程师

00:11:44.972 --> 00:11:46.373 align:middle line:-1
我想问你们一个问题

00:11:47.040 --> 00:11:49.943 align:middle line:-1
你是否曾想到过一个极妙的编程想法

00:11:50.544 --> 00:11:53.847 align:middle line:-2
却在你打开代码编辑器之前
就将其放下了

00:11:54.815 --> 00:11:56.917 align:middle line:-1
也许是你的收件箱阻碍了你

00:11:57.384 --> 00:12:00.821 align:middle line:-2
或者你还没有在Xcode中
设置好你的项目

00:11:57.384 --> 00:12:00.821 align:middle line:-2
或者你还没有在Xcode中
设置好你的项目

00:12:02.389 --> 00:12:06.026 align:middle line:-2
无论你是刚开始使用
Apple API的初学者

00:12:06.927 --> 00:12:08.996 align:middle line:-1
还是赶着最后期限经验丰富的工程师

00:12:09.730 --> 00:12:12.799 align:middle line:-1
或是构建机器学习模型的数据科学家

00:12:13.967 --> 00:12:18.205 align:middle line:-2
我都想告诉你 使用
Xcode Playground

00:12:18.405 --> 00:12:21.375 align:middle line:-2
是开始为Apple API
开发代码最快的方式

00:12:24.411 --> 00:12:25.546 align:middle line:-1
在Xcode 10中

00:12:26.480 --> 00:12:29.283 align:middle line:-2
Playground
比以往任何时候更快 反应更迅速

00:12:29.650 --> 00:12:32.786 align:middle line:-1
这允许你以逐步的方式执行代码

00:12:34.254 --> 00:12:37.457 align:middle line:-2
为此 首先我想让你们
熟悉一个新的用户界面

00:12:41.695 --> 00:12:43.430 align:middle line:-1
若你很熟悉Playground

00:12:43.830 --> 00:12:47.100 align:middle line:-1
你的视线应该会立即跳到

00:12:47.768 --> 00:12:49.102 align:middle line:-1
非行号上面的蓝线处

00:12:50.671 --> 00:12:53.507 align:middle line:-2
这里有一个新的Play按钮
它可以跟踪你的光标

00:12:55.909 --> 00:13:00.681 align:middle line:-2
行号上方的蓝线表示
这些行已准备好执行

00:12:55.909 --> 00:13:00.681 align:middle line:-2
行号上方的蓝线表示
这些行已准备好执行

00:13:01.882 --> 00:13:03.450 align:middle line:-1
当你点击Play按钮时

00:13:04.084 --> 00:13:08.255 align:middle line:-2
这意味着运行所有蓝线标记的代码
直到并且包含

00:13:08.589 --> 00:13:10.123 align:middle line:-1
前面有Play按钮的那行

00:13:10.190 --> 00:13:11.725 align:middle line:-1
让我们看看它是什么样子

00:13:13.060 --> 00:13:13.927 align:middle line:-1
就像这样

00:13:13.994 --> 00:13:17.464 align:middle line:-2
你可以看到只有Playground的
前三行代码被执行

00:13:18.098 --> 00:13:20.567 align:middle line:-1
运行结果显示在右侧

00:13:21.502 --> 00:13:24.471 align:middle line:-1
你还看到Play按钮现在变灰了

00:13:24.538 --> 00:13:28.108 align:middle line:-2
这表明这些代码行不再处于
准备好执行的状态

00:13:28.675 --> 00:13:29.877 align:middle line:-1
你刚刚已经执行了它们

00:13:31.345 --> 00:13:34.414 align:middle line:-2
Play按钮变为灰色
还可能有另一个原因

00:13:35.015 --> 00:13:39.253 align:middle line:-2
比如你正在一些
不是顶层的代码行上工作

00:13:39.786 --> 00:13:43.023 align:middle line:-1
这包括函数括号内的代码

00:13:43.090 --> 00:13:44.291 align:middle line:-1
或for循环中的代码

00:13:44.858 --> 00:13:46.793 align:middle line:-1
如果你想执行一个for循环

00:13:47.127 --> 00:13:50.063 align:middle line:-1
你需要将光标移到右括号处

00:13:50.264 --> 00:13:54.468 align:middle line:-2
这时Play按钮将变为蓝色
你就能够执行它了

00:13:58.338 --> 00:14:02.643 align:middle line:-2
还有一个很棒的快捷键
Shift + Return

00:13:58.338 --> 00:14:02.643 align:middle line:-2
还有一个很棒的快捷键
Shift + Return

00:14:03.410 --> 00:14:06.647 align:middle line:-2
这就像在输入一行代码后
按下Return键一样

00:14:06.713 --> 00:14:09.082 align:middle line:-1
但这还会执行这一行代码

00:14:09.249 --> 00:14:12.819 align:middle line:-2
并且它将光标移动到下一行
准备写更多的代码

00:14:14.655 --> 00:14:17.691 align:middle line:-1
蓝色代码也有另一种含义

00:14:18.192 --> 00:14:22.629 align:middle line:-2
意味着这些代码可安全编辑
无需重新设置Playground

00:14:23.363 --> 00:14:24.464 align:middle line:-1
为什么这很重要？

00:14:25.032 --> 00:14:27.367 align:middle line:-1
如果你编辑蓝线上方的代码

00:14:28.569 --> 00:14:31.138 align:middle line:-1
这将会修改你已经执行过的代码

00:14:31.471 --> 00:14:35.342 align:middle line:-2
因此你须重置Playground
以反应出你所做的更改

00:14:36.143 --> 00:14:40.747 align:middle line:-2
当你编辑蓝线上方的代码时
Playground会自动重置

00:14:44.618 --> 00:14:47.487 align:middle line:-2
有时 你需要手动
重置你的Playground

00:14:47.554 --> 00:14:49.923 align:middle line:-1
你可以使用屏幕底部调试栏中的

00:14:50.157 --> 00:14:52.426 align:middle line:-1
Stop按钮来完成此操作

00:14:53.694 --> 00:14:57.431 align:middle line:-2
那么为什么要逐步运行？
为什么我们要添加这个功能呢？

00:14:58.098 --> 00:15:01.034 align:middle line:-1
首先 再多执行一行代码很快

00:14:58.098 --> 00:15:01.034 align:middle line:-1
首先 再多执行一行代码很快

00:15:01.335 --> 00:15:03.437 align:middle line:-1
这比重新启动Playground

00:15:03.504 --> 00:15:05.739 align:middle line:-1
并等待它赶上你的想法要快得多

00:15:06.773 --> 00:15:09.910 align:middle line:-1
其次 它允许你对实时数据做出回应

00:15:10.444 --> 00:15:14.548 align:middle line:-2
写一行代码 执行它
查看结果是什么

00:15:14.715 --> 00:15:17.784 align:middle line:-1
这会自然引出要写的下一行代码

00:15:18.919 --> 00:15:21.855 align:middle line:-2
第三 每次重新运行
Playground

00:15:22.089 --> 00:15:23.991 align:middle line:-1
都可能会给你不同的值

00:15:24.424 --> 00:15:27.828 align:middle line:-2
例如 如果你正在访问网络资源
或者你正在生成随机数字

00:15:28.328 --> 00:15:30.097 align:middle line:-1
就会发生这种情况

00:15:30.797 --> 00:15:32.499 align:middle line:-1
通过逐步执行

00:15:32.566 --> 00:15:35.402 align:middle line:-1
你的数据模型将保持稳定且易于理解

00:15:36.470 --> 00:15:40.507 align:middle line:-2
让我们看一个简单的例子
你自己也可以尝试一下

00:15:42.910 --> 00:15:43.977 align:middle line:-1
我喜欢游戏

00:15:44.044 --> 00:15:46.747 align:middle line:-2
我喜欢纸牌游戏
棋盘游戏和电脑游戏

00:15:46.813 --> 00:15:48.782 align:middle line:-1
我甚至喜欢写游戏

00:15:49.082 --> 00:15:52.286 align:middle line:-2
现在 我对此不太狂热
因此我喜欢保持较小的游戏规模

00:15:52.619 --> 00:15:55.556 align:middle line:-2
这是一个非常小的游戏
被称为“罗萨布”

00:15:55.956 --> 00:15:59.660 align:middle line:-1
这是“剪刀石头布”之类的校园游戏

00:16:00.694 --> 00:16:03.297 align:middle line:-1
我将游戏规则写成简单的检查函数

00:16:03.497 --> 00:16:04.932 align:middle line:-1
来告诉我们是否赢了

00:16:05.599 --> 00:16:07.167 align:middle line:-1
我还写了一个电脑玩家

00:16:07.234 --> 00:16:09.536 align:middle line:-1
它只是随机出一个动作

00:16:10.838 --> 00:16:14.441 align:middle line:-2
通过逐步执行
我们可以执行到第6行

00:16:14.508 --> 00:16:16.009 align:middle line:-1
也就是轮到电脑玩家出的地方

00:16:16.643 --> 00:16:18.912 align:middle line:-1
并在我们出手之前看看结果如何

00:16:19.479 --> 00:16:22.015 align:middle line:-2
在这种情况下
电脑玩家出的是“石头”

00:16:22.416 --> 00:16:23.851 align:middle line:-1
我们出“布”

00:16:25.085 --> 00:16:27.120 align:middle line:-2
“布”击败“石头”
我们赢得比赛

00:16:28.021 --> 00:16:30.123 align:middle line:-1
这听起来有点像作弊

00:16:30.357 --> 00:16:32.659 align:middle line:-1
但这却是一种非常强大的技术

00:16:35.963 --> 00:16:37.831 align:middle line:-1
这是一个极其强大的技术

00:16:38.165 --> 00:16:41.435 align:middle line:-1
当你正试图学习新的陌生的API时

00:16:41.835 --> 00:16:45.472 align:middle line:-2
或当你探索一个你还不知道
类型和值的数据结构时

00:16:46.640 --> 00:16:48.175 align:middle line:-1
这是一个非常简单的例子

00:16:48.742 --> 00:16:51.845 align:middle line:-1
现在我们来看一个更神奇的演示

00:17:04.625 --> 00:17:07.895 align:middle line:-2
我们刚才以一个游戏开始
现在我们来看另一个游戏

00:17:08.262 --> 00:17:10.329 align:middle line:-1
这是“一字棋”游戏

00:17:11.765 --> 00:17:13.634 align:middle line:-1
我已经在这个游戏上做了一些工作

00:17:14.535 --> 00:17:18.005 align:middle line:-2
我构建好了游戏引擎
并且制作了第一个用户界面版本

00:17:18.405 --> 00:17:21.974 align:middle line:-1
我已将所有代码移到辅助资源中

00:17:22.376 --> 00:17:25.913 align:middle line:-2
这让我们摆脱了这部分代码
使我们能够专注于下一步

00:17:26.280 --> 00:17:29.349 align:middle line:-2
即真正的去玩这个游戏
并稍微改进一下用户界面

00:17:30.951 --> 00:17:32.519 align:middle line:-1
我也将使用实时视图

00:17:32.586 --> 00:17:37.090 align:middle line:-2
但首先让我们回顾一下
行号上的蓝色控制机制

00:17:37.691 --> 00:17:39.660 align:middle line:-1
你可以看到它跟踪着鼠标指针

00:17:40.494 --> 00:17:44.264 align:middle line:-1
让我们开始加载棋盘

00:17:45.232 --> 00:17:46.834 align:middle line:-2
我们旋转一下
以便可以看到它

00:17:48.635 --> 00:17:50.671 align:middle line:-1
这是“一字棋”棋盘

00:17:51.104 --> 00:17:54.274 align:middle line:-2
你可以看到我已经执行了
Playground的前半部分

00:17:54.708 --> 00:17:57.411 align:middle line:-2
并且Playground中
还剩一些代码等待执行

00:17:58.178 --> 00:18:00.247 align:middle line:-1
其中包括该我走的第一步

00:17:58.178 --> 00:18:00.247 align:middle line:-1
其中包括该我走的第一步

00:18:01.381 --> 00:18:02.249 align:middle line:-1
让我们来运行它

00:18:03.383 --> 00:18:04.218 align:middle line:-1
就像这样

00:18:04.518 --> 00:18:07.454 align:middle line:-1
你可以看到我们在用代码来玩游戏

00:18:08.055 --> 00:18:10.490 align:middle line:-1
并在实时视图中查看结果

00:18:11.358 --> 00:18:13.160 align:middle line:-1
我们再让电脑走一步

00:18:18.031 --> 00:18:19.099 align:middle line:-1
很少 太棒了

00:18:19.166 --> 00:18:21.368 align:middle line:-1
电脑玩家是完全随机的

00:18:21.435 --> 00:18:23.971 align:middle line:-1
所以今天它不太可能会打败我

00:18:28.542 --> 00:18:31.545 align:middle line:-2
我向你展示了
我们如何只执行一部分代码行

00:18:31.812 --> 00:18:33.080 align:middle line:-1
然后逐步执行

00:18:33.547 --> 00:18:36.216 align:middle line:-2
Playground中
剩下的代码行

00:18:36.450 --> 00:18:37.885 align:middle line:-1
但我们可以做得比这更多

00:18:37.951 --> 00:18:40.921 align:middle line:-2
在Playground后面
添加新代码永远是安全的

00:18:41.088 --> 00:18:42.489 align:middle line:-1
所以让我们再走一步

00:18:51.732 --> 00:18:52.633 align:middle line:-1
就像这样

00:18:52.699 --> 00:18:54.635 align:middle line:-1
现在 我可以点击Play按钮

00:18:56.537 --> 00:18:59.406 align:middle line:-1
来执行这一行代码

00:18:59.840 --> 00:19:01.842 align:middle line:-1
我们现在让电脑再走一步

00:18:59.840 --> 00:19:01.842 align:middle line:-1
我们现在让电脑再走一步

00:19:07.681 --> 00:19:08.549 align:middle line:-1
很好

00:19:13.086 --> 00:19:14.988 align:middle line:-1
你应该在这里注意一些事情

00:19:15.289 --> 00:19:18.525 align:middle line:-1
第一 棋盘一开始是平的

00:19:18.592 --> 00:19:21.562 align:middle line:-1
我需要经过旋转才能看到它

00:19:23.497 --> 00:19:25.499 align:middle line:-1
当我们执行更多的代码行时

00:19:25.566 --> 00:19:28.101 align:middle line:-1
它不会旋转回原来的位置

00:19:28.302 --> 00:19:29.136 align:middle line:-1
这很不错

00:19:29.203 --> 00:19:33.140 align:middle line:-2
因为我可以写代码
来将它旋转到正确的位置

00:19:33.207 --> 00:19:35.275 align:middle line:-1
但这会涉及一些称为四元数的东西

00:19:35.342 --> 00:19:37.578 align:middle line:-1
我认为我还没有准备好去学习这东西

00:19:39.246 --> 00:19:40.747 align:middle line:-1
这东西很棒的第二个原因

00:19:40.814 --> 00:19:44.518 align:middle line:-2
是如果电脑玩家可以在
每次我们重新执行新代码时

00:19:44.918 --> 00:19:48.822 align:middle line:-1
重新开始 它就可以得到一次新机会

00:19:48.889 --> 00:19:50.424 align:middle line:-1
这会有点不公平

00:19:51.525 --> 00:19:54.194 align:middle line:-2
让我们完成这个游戏
然后可以告一段落

00:20:04.705 --> 00:20:05.772 align:middle line:-1
这是正确的走法吗？

00:20:08.942 --> 00:20:09.943 align:middle line:-1
很好

00:20:17.317 --> 00:20:19.920 align:middle line:-2
你可以看到游戏通过
放置三个红色圆圈

00:20:19.987 --> 00:20:21.822 align:middle line:-1
突出显示了我的决胜步

00:20:23.156 --> 00:20:24.224 align:middle line:-1
这不算太花哨

00:20:24.291 --> 00:20:27.094 align:middle line:-2
我正在寻找一些
感觉像是庆祝的东西

00:20:27.361 --> 00:20:30.364 align:middle line:-1
因此我一直在研究新的用户界面

00:20:30.864 --> 00:20:33.166 align:middle line:-1
在传统的开发环境中

00:20:33.233 --> 00:20:35.202 align:middle line:-1
你将不得不建立一个复杂的流程

00:20:35.269 --> 00:20:37.771 align:middle line:-1
在游戏或任何你使用的API中

00:20:38.105 --> 00:20:40.140 align:middle line:-1
自动代表你去执行

00:20:40.574 --> 00:20:44.311 align:middle line:-2
以便我们可以测试在程序中
后来发生的事情

00:20:45.212 --> 00:20:48.415 align:middle line:-2
但在Playground上
由于我能够逐步执行

00:20:48.482 --> 00:20:50.417 align:middle line:-1
我可以手动参与游戏直到游戏结束

00:20:50.484 --> 00:20:52.252 align:middle line:-1
然后编写新的代码

00:20:52.319 --> 00:20:54.821 align:middle line:-1
更新当前正在进行的操作

00:20:55.255 --> 00:20:56.523 align:middle line:-1
现在我们来试试

00:21:01.228 --> 00:21:03.730 align:middle line:-1
我已经使用粒子系统

00:21:03.797 --> 00:21:05.232 align:middle line:-1
为游戏结束准备了新的效果

00:21:06.466 --> 00:21:08.535 align:middle line:-2
让我们使用
Shift + Return执行

00:21:09.503 --> 00:21:12.806 align:middle line:-1
这感觉更像是一场胜利

00:21:17.945 --> 00:21:19.847 align:middle line:-1
让我们回顾一下我们刚刚看到的内容

00:21:20.747 --> 00:21:25.452 align:middle line:-2
通过逐步运行
我们可以用一行新代码探索一个想法

00:21:26.286 --> 00:21:30.157 align:middle line:-2
这使我们能够在代码和数据
之间进行沟通

00:21:30.657 --> 00:21:32.793 align:middle line:-1
每次我们得到一些新信息

00:21:32.860 --> 00:21:36.730 align:middle line:-1
我们都可以编写下一行代码来探索它

00:21:37.698 --> 00:21:38.999 align:middle line:-2
我们可以使用
Shift + Return

00:21:39.066 --> 00:21:42.302 align:middle line:-2
让我们的手不离开键盘
同时大脑能够进行思考

00:21:43.203 --> 00:21:47.174 align:middle line:-2
最后 通过将动态实时视图
添加到Playground

00:21:47.241 --> 00:21:50.978 align:middle line:-1
我们可以创建模型的第二视图

00:21:51.044 --> 00:21:55.249 align:middle line:-2
并且我们可以在使用图形环境操控
和代码操控之间无缝切换

00:21:56.884 --> 00:21:57.718 align:middle line:-1
所以…

00:21:58.285 --> 00:22:02.689 align:middle line:-2
无论你是刚学习
Apple API的初学者

00:21:58.285 --> 00:22:02.689 align:middle line:-2
无论你是刚学习
Apple API的初学者

00:22:03.891 --> 00:22:06.093 align:middle line:-2
还是试图勾勒出下一个
伟大app的原型的

00:22:06.760 --> 00:22:10.130 align:middle line:-1
高级程序员

00:22:12.232 --> 00:22:14.735 align:middle line:-1
下一次当你有编码灵感时

00:22:15.302 --> 00:22:18.172 align:middle line:-2
我们邀请你
使用Playground

00:22:21.575 --> 00:22:24.311 align:middle line:-1
如果你仍在寻找想法

00:22:24.711 --> 00:22:26.213 align:middle line:-1
我这里有三个主意

00:22:27.080 --> 00:22:27.915 align:middle line:-1
第一

00:22:28.448 --> 00:22:30.851 align:middle line:-1
如果你正在创建你自己的API

00:22:31.018 --> 00:22:32.853 align:middle line:-1
展示它的最佳方式之一

00:22:33.086 --> 00:22:36.156 align:middle line:-2
是为你的API创建一个
可以跟着做的教程

00:22:36.356 --> 00:22:41.128 align:middle line:-2
用户可以逐步执行代码
并实时查看它的功能

00:22:43.297 --> 00:22:47.634 align:middle line:-2
第二 你可以下载一些
公开可用的数据

00:22:48.001 --> 00:22:50.037 align:middle line:-1
并使用Playground

00:22:50.871 --> 00:22:52.639 align:middle line:-1
逐步深入研究这些数据

00:22:53.807 --> 00:22:57.144 align:middle line:-2
你可以从地图、地方政府
或是一个课程项目中

00:22:57.377 --> 00:22:58.912 align:middle line:-1
获取这些数据

00:23:00.514 --> 00:23:04.918 align:middle line:-2
最后 你可以像我一样
创建一个游戏或动画

00:23:05.819 --> 00:23:06.887 align:middle line:-1
从简单的开始

00:23:07.855 --> 00:23:10.190 align:middle line:-2
使用SpriteKit
或SyncKit

00:23:10.257 --> 00:23:13.594 align:middle line:-1
逐行优化 直至趋于完美

00:23:16.230 --> 00:23:20.667 align:middle line:-2
我希望今天能够向你们展示
Playground并非简单玩具

00:23:21.134 --> 00:23:23.470 align:middle line:-1
它很有趣 但是一种很有用的有趣

00:23:26.807 --> 00:23:30.010 align:middle line:-2
它允许你以交互的方式
探索代码和数据

00:23:30.677 --> 00:23:33.780 align:middle line:-2
这很棒 无论你使用
互联网上的REST API

00:23:33.847 --> 00:23:35.716 align:middle line:-1
下载了一段未知的JSON

00:23:36.316 --> 00:23:40.087 align:middle line:-1
还是你正在机器学习app中

00:23:40.654 --> 00:23:42.222 align:middle line:-1
处理数十万或数百万行的数据

00:23:42.589 --> 00:23:44.591 align:middle line:-1
若想了解更多用例

00:23:44.658 --> 00:23:47.928 align:middle line:-1
我鼓励你在WWDC app中

00:23:48.462 --> 00:23:50.531 align:middle line:-1
下载并观看“创建ML”演讲

00:23:51.999 --> 00:23:56.303 align:middle line:-2
其次 学习使用Apple API
没有比这更好的方法

00:23:56.870 --> 00:24:00.407 align:middle line:-1
无论你刚开始学习

00:23:56.870 --> 00:24:00.407 align:middle line:-1
无论你刚开始学习

00:24:00.474 --> 00:24:02.809 align:middle line:-2
还是尝试使用在本次WWDC上
了解到的新API

00:24:04.945 --> 00:24:07.514 align:middle line:-1
你不必非得使用Apple API

00:24:07.915 --> 00:24:11.018 align:middle line:-2
你还可以将自己的框架
导入Playground

00:24:11.385 --> 00:24:13.387 align:middle line:-1
展示这一点的最佳方式之一

00:24:13.921 --> 00:24:16.924 align:middle line:-1
是为你的数据类型创建自定义表述

00:24:17.391 --> 00:24:21.562 align:middle line:-2
这允许开发人员只需扫一眼
即可获取最相关的信息

00:24:22.696 --> 00:24:25.265 align:middle line:-1
为了讨论更多关于这两个先进的概念

00:24:25.599 --> 00:24:27.734 align:middle line:-1
我想邀请TJ上台

00:24:37.110 --> 00:24:38.111 align:middle line:-1
谢谢Alex

00:24:38.278 --> 00:24:41.281 align:middle line:-2
我的名字是TJ Usiyan
我是一名Xcode工程师

00:24:42.115 --> 00:24:45.652 align:middle line:-2
当我讲完我的部分时
我相信你们所有人都会同意

00:24:45.853 --> 00:24:48.388 align:middle line:-1
你发布的每个库框架

00:24:48.689 --> 00:24:52.159 align:middle line:-2
将会并可以通过增加
Playground支持得以改善

00:24:53.560 --> 00:25:00.367 align:middle line:-2
Playground能为readme文件
教程和通用API文档

00:24:53.560 --> 00:25:00.367 align:middle line:-2
Playground能为readme文件
教程和通用API文档

00:25:00.567 --> 00:25:02.870 align:middle line:-1
提供更丰富的体验

00:25:04.905 --> 00:25:08.809 align:middle line:-2
实现这一点的方法之一就是
正如Alex所说的那样

00:25:08.876 --> 00:25:11.912 align:middle line:-2
在Playground中
提供你自己的表述

00:25:12.479 --> 00:25:14.748 align:middle line:-1
我将涵盖所有这些内容

00:25:15.382 --> 00:25:18.252 align:middle line:-2
从Custom Playground
Display Convertible开始

00:25:18.752 --> 00:25:19.920 align:middle line:-1
它将允许你

00:25:19.987 --> 00:25:25.392 align:middle line:-2
在Playground中
提供你的类型的自定义表述

00:25:25.692 --> 00:25:27.828 align:middle line:-1
以便用户可以有一个很好的概念

00:25:28.962 --> 00:25:34.768 align:middle line:-2
随后我将继续介绍如何将
你的框架导入Playground

00:25:35.769 --> 00:25:38.572 align:middle line:-1
最后 我将介绍一些疑难解决技巧

00:25:38.639 --> 00:25:41.041 align:middle line:-1
以预防事情不像你所期望的那样发生

00:25:43.977 --> 00:25:46.513 align:middle line:-2
让我们从Playground Display
Convertible开始

00:25:47.814 --> 00:25:48.916 align:middle line:-1
如你所知

00:25:49.950 --> 00:25:52.853 align:middle line:-1
当用户输入一行代码时

00:25:53.720 --> 00:25:57.891 align:middle line:-1
值会显示在右侧的结果边栏

00:25:59.726 --> 00:26:02.196 align:middle line:-2
对于没有针对Playground
进行优化的数据类型

00:25:59.726 --> 00:26:02.196 align:middle line:-2
对于没有针对Playground
进行优化的数据类型

00:26:02.930 --> 00:26:06.133 align:middle line:-2
Playground
有两种方式生成其描述

00:26:07.167 --> 00:26:11.305 align:middle line:-2
对不符合Custom String
Convertible标准的类型

00:26:13.040 --> 00:26:16.844 align:middle line:-2
我们将使用Swift类型
创建一个结构化表述

00:26:17.544 --> 00:26:20.681 align:middle line:-2
对符合Custom String
Convertible标准的类型

00:26:20.747 --> 00:26:23.851 align:middle line:-1
我们将使用调用描述的结果

00:26:26.486 --> 00:26:28.355 align:middle line:-1
当这还不够时

00:26:28.422 --> 00:26:33.560 align:middle line:-2
你的用户可以点击右侧的
Quick Look按钮

00:26:35.696 --> 00:26:38.899 align:middle line:-1
他们也可以点击

00:26:39.233 --> 00:26:42.736 align:middle line:-1
Inline Results按钮

00:26:44.037 --> 00:26:45.105 align:middle line:-1
当他们这样做时

00:26:46.974 --> 00:26:48.842 align:middle line:-1
会显示一个自定义表述

00:26:49.243 --> 00:26:51.545 align:middle line:-1
通常是一个文本表述

00:26:52.646 --> 00:26:55.315 align:middle line:-2
对于很多类型来说
这已经足够完美了

00:26:55.382 --> 00:26:59.253 align:middle line:-1
但有时候也许你想返回一个数字

00:27:01.121 --> 00:27:02.356 align:middle line:-1
尽管这仍然是文本

00:27:03.156 --> 00:27:06.627 align:middle line:-1
有时 仅文本还不够

00:27:06.693 --> 00:27:10.497 align:middle line:-1
你想返回一些图形 也许是图片

00:27:13.033 --> 00:27:15.269 align:middle line:-1
控制你返回格式的方式

00:27:16.303 --> 00:27:19.239 align:middle line:-2
是通过实现Custom Playground
Display Convertible达到的

00:27:20.073 --> 00:27:26.513 align:middle line:-2
这是在Xcode 9.3和Swift 4.1中
引入的新协议

00:27:27.247 --> 00:27:30.350 align:middle line:-2
它取代了Custom Playground
Quick Lookable

00:27:30.684 --> 00:27:32.753 align:middle line:-1
这在同一版本中已被弃用

00:27:34.721 --> 00:27:37.157 align:middle line:-1
现在我们来看看一致性

00:27:40.060 --> 00:27:44.998 align:middle line:-2
你可以在这里看到
一致性要求只涉及返回一个属性

00:27:45.065 --> 00:27:46.033 align:middle line:-1
playgroundDescription

00:27:46.533 --> 00:27:48.802 align:middle line:-1
playgroundDescription的类型为Any

00:27:49.303 --> 00:27:54.675 align:middle line:-2
这意味着你可以返回任何
你认为最能描述你的值的东西

00:27:56.510 --> 00:28:00.881 align:middle line:-1
现在 某些类型已经有了专门的表述

00:27:56.510 --> 00:28:00.881 align:middle line:-1
现在 某些类型已经有了专门的表述

00:28:01.348 --> 00:28:02.950 align:middle line:-1
这些表述由Apple提供

00:28:04.484 --> 00:28:08.355 align:middle line:-2
这些是自Xcode 9.3
和Swift 4.1后

00:28:08.422 --> 00:28:11.792 align:middle line:-1
具有专门表述的类型列表

00:28:12.626 --> 00:28:16.763 align:middle line:-1
左侧的类型具有特定的文字表述

00:28:17.798 --> 00:28:20.634 align:middle line:-1
右侧的类型具有图形表述

00:28:21.435 --> 00:28:23.837 align:middle line:-1
我邀请你尝试以上每种方法

00:28:23.904 --> 00:28:27.941 align:middle line:-2
并决定哪个最能代表
你在Playground中的值

00:28:31.211 --> 00:28:34.181 align:middle line:-2
完成此操作后
你需要发布你所有的类型、值

00:28:34.248 --> 00:28:36.483 align:middle line:-1
以及API给你的用户

00:28:38.318 --> 00:28:43.190 align:middle line:-2
我将向你展示如何向Playground
导入你自己的自定义框架

00:28:43.457 --> 00:28:46.026 align:middle line:-1
并与Apple框架共存

00:28:48.462 --> 00:28:52.833 align:middle line:-1
通常 当你在项目中构建单个框架时

00:28:53.734 --> 00:28:56.670 align:middle line:-2
该框架将保存在
Built Products Directory

00:28:58.505 --> 00:29:00.874 align:middle line:-2
当你想将它导入
Playground时

00:28:58.505 --> 00:29:00.874 align:middle line:-2
当你想将它导入
Playground时

00:29:01.675 --> 00:29:03.610 align:middle line:-2
这也是Playground
将会搜索的地方

00:29:04.244 --> 00:29:05.379 align:middle line:-2
确保你的Playground
能看到你的框架

00:29:05.445 --> 00:29:07.014 align:middle line:-1
最简单的方法

00:29:07.748 --> 00:29:10.350 align:middle line:-2
是将Playground
添加到你的项目中

00:29:11.852 --> 00:29:14.721 align:middle line:-1
这是我为简单项目建议的策略

00:29:15.055 --> 00:29:17.958 align:middle line:-2
这种情况下你能够
访问该项目并愿意编辑它

00:29:18.725 --> 00:29:21.395 align:middle line:-1
这就是在Project Navigator中的样子

00:29:25.098 --> 00:29:26.967 align:middle line:-1
一旦你添加了这个项目

00:29:27.134 --> 00:29:29.603 align:middle line:-2
或在你将该Playground
添加到项目中后

00:29:30.003 --> 00:29:30.971 align:middle line:-1
我有一点建议

00:29:31.038 --> 00:29:31.905 align:middle line:-1
记住：

00:29:32.840 --> 00:29:34.608 align:middle line:-1
构建非常像走路

00:29:35.342 --> 00:29:39.046 align:middle line:-2
因为你必须记住
在运行之前进行构建

00:29:39.112 --> 00:29:41.381 align:middle line:-1
记住在运行之前进行构建

00:29:42.449 --> 00:29:46.753 align:middle line:-1
有时你有多个项目

00:29:47.054 --> 00:29:48.288 align:middle line:-1
多个框架

00:29:48.555 --> 00:29:51.325 align:middle line:-1
也许你有两个、三个、四个

00:29:53.026 --> 00:29:54.027 align:middle line:-1
在这种情况下

00:29:54.294 --> 00:29:57.297 align:middle line:-2
我刚刚描述的Built Products
Directory的情况

00:29:57.364 --> 00:29:58.565 align:middle line:-1
实际上是翻倍的

00:29:58.632 --> 00:30:02.302 align:middle line:-2
如果你有不同的项目 就会有多个
Build Product Directory

00:29:58.632 --> 00:30:02.302 align:middle line:-2
如果你有不同的项目 就会有多个
Build Product Directory

00:30:02.369 --> 00:30:06.573 align:middle line:-2
当你想要将代码导入Playground时
这可能会成为问题

00:30:07.107 --> 00:30:11.912 align:middle line:-2
解决此问题的最简单方法
是将每个项目添加到一个工作区

00:30:12.446 --> 00:30:13.647 align:middle line:-1
单个工作区

00:30:14.014 --> 00:30:16.617 align:middle line:-1
然后当你构建每个项目时

00:30:17.818 --> 00:30:19.620 align:middle line:-1
这些框架将最终保存在

00:30:20.153 --> 00:30:24.057 align:middle line:-2
你的工作区中的那个
Built Products Directory中

00:30:24.358 --> 00:30:28.328 align:middle line:-2
之后只需将Playground
添加到该工作区

00:30:28.529 --> 00:30:29.963 align:middle line:-1
这样就应该没问题了

00:30:31.665 --> 00:30:35.102 align:middle line:-2
这就是刚才说的内容
在项目导航栏中的样子

00:30:36.904 --> 00:30:39.640 align:middle line:-1
现在 假设你已经做了这些事情

00:30:39.706 --> 00:30:43.610 align:middle line:-2
你遵循了我的指示
但结果却不是你所预料的那样

00:30:43.844 --> 00:30:45.746 align:middle line:-1
你会说“TJ对我撒谎”

00:30:48.582 --> 00:30:50.984 align:middle line:-2
你需要检查
Built Products Directory

00:30:51.051 --> 00:30:54.254 align:middle line:-2
以确保一切都按照
你期望的那样待在那里

00:30:56.290 --> 00:30:57.624 align:middle line:-1
以下是你如何做到这一点

00:30:59.092 --> 00:31:00.460 align:middle line:-1
你要打开File

00:30:59.092 --> 00:31:00.460 align:middle line:-1
你要打开File

00:31:01.361 --> 00:31:02.396 align:middle line:-1
Project Settings

00:31:05.265 --> 00:31:07.568 align:middle line:-1
然后点击Advanced按钮

00:31:09.803 --> 00:31:11.939 align:middle line:-1
在浅灰色的屏幕上

00:31:12.005 --> 00:31:16.977 align:middle line:-2
我们会看到
有一个Products目标路径

00:31:17.477 --> 00:31:18.545 align:middle line:-1
你需要点击它

00:31:18.745 --> 00:31:22.049 align:middle line:-1
这会直接将你带到你所打开项目的

00:31:22.115 --> 00:31:23.951 align:middle line:-2
Built Products
Directory目录下

00:31:26.987 --> 00:31:29.256 align:middle line:-1
这是在Finder中看起来的样子

00:31:30.724 --> 00:31:33.827 align:middle line:-2
现在让我们将所有这些
汇集在一个演示中

00:31:43.237 --> 00:31:45.572 align:middle line:-1
那些认识我的人

00:31:46.406 --> 00:31:50.244 align:middle line:-1
知道我对音乐有着持久的兴趣

00:31:51.612 --> 00:31:56.550 align:middle line:-2
我其实对音乐非常感兴趣
以至于找到了这个新的乐符

00:31:56.884 --> 00:31:59.720 align:middle line:-2
至少对我来说很新
它被称为赫尔姆霍茨乐符

00:31:59.786 --> 00:32:02.990 align:middle line:-1
我觉得更多人应该知道这一点

00:31:59.786 --> 00:32:02.990 align:middle line:-1
我觉得更多人应该知道这一点

00:32:03.056 --> 00:32:04.525 align:middle line:-1
而且它应该被更广泛地使用

00:32:05.459 --> 00:32:08.262 align:middle line:-2
所以我创建了一个框架
并与其他开发者分享

00:32:08.328 --> 00:32:09.796 align:middle line:-1
以便他们可以在代码中使用它

00:32:10.464 --> 00:32:12.799 align:middle line:-2
在这里你可以看到
我包含了一个Playground

00:32:13.066 --> 00:32:19.306 align:middle line:-1
我也在维基百科上做了一些研究

00:32:20.374 --> 00:32:23.944 align:middle line:-2
并写了一个描述该乐符的
小Playground

00:32:24.244 --> 00:32:27.447 align:middle line:-1
随后是几个值

00:32:27.514 --> 00:32:32.486 align:middle line:-1
以便我们可以在右侧看到结果

00:32:35.289 --> 00:32:36.957 align:middle line:-1
如果我渲染这个文档

00:32:38.258 --> 00:32:41.361 align:middle line:-1
这些将会在Pros中显示出来

00:32:41.428 --> 00:32:44.765 align:middle line:-2
其中链接以蓝色突显
就像Tibet谈到的那样

00:32:48.302 --> 00:32:49.469 align:middle line:-1
在我运行之前

00:32:50.237 --> 00:32:51.905 align:middle line:0
我需要进行构建

00:32:55.809 --> 00:33:00.280 align:middle line:-2
接着让我们运行
Playground

00:32:55.809 --> 00:33:00.280 align:middle line:-2
接着让我们运行
Playground

00:33:01.648 --> 00:33:02.482 align:middle line:-1
现在…

00:33:05.752 --> 00:33:08.322 align:middle line:-1
你可以在这里看到右侧的结果中

00:33:08.388 --> 00:33:09.990 align:middle line:-1
显示了这些有趣的乐符

00:33:10.424 --> 00:33:13.994 align:middle line:-1
我真的认为这个乐符很有趣

00:33:14.061 --> 00:33:17.731 align:middle line:-1
因为较低音用大写字母表示

00:33:18.098 --> 00:33:20.767 align:middle line:-1
较高音用小写字母表示

00:33:21.201 --> 00:33:25.172 align:middle line:-1
而确切的八度

00:33:25.639 --> 00:33:26.840 align:middle line:-1
由逗号或撇号的数量表示

00:33:28.041 --> 00:33:28.876 align:middle line:-1
现在…

00:33:29.676 --> 00:33:32.045 align:middle line:-1
希望你们都能看到这个乐符

00:33:32.346 --> 00:33:34.181 align:middle line:-1
也希望我足够清晰地解释了它们

00:33:34.248 --> 00:33:37.918 align:middle line:-2
但其实我在我正辅导的人那里
遇到了一些麻烦

00:33:39.052 --> 00:33:41.021 align:middle line:-1
他们不像我一样喜欢这种方式

00:33:41.355 --> 00:33:44.124 align:middle line:-1
所以我创建了另一个

00:33:44.458 --> 00:33:48.328 align:middle line:-2
带有键盘可视化功能的框架
我认为这对他们逐渐熟悉此乐符

00:33:48.729 --> 00:33:50.063 align:middle line:-1
很有帮助

00:33:51.164 --> 00:33:52.599 align:middle line:-1
既然我想这样做

00:33:52.833 --> 00:33:55.035 align:middle line:-2
我需要在工作区中创建一个
独立的Playground

00:33:55.102 --> 00:33:57.938 align:middle line:-2
在这个工作区中
我可以导入这两个框架

00:33:58.005 --> 00:34:00.040 align:middle line:-1
而无需更改任何框架

00:33:58.005 --> 00:34:00.040 align:middle line:-1
而无需更改任何框架

00:34:01.108 --> 00:34:02.009 align:middle line:-1
为了做到这一点

00:34:02.809 --> 00:34:04.711 align:middle line:-1
我先关闭这个

00:34:07.314 --> 00:34:09.583 align:middle line:-1
然后创建一个全新的

00:34:12.386 --> 00:34:13.286 align:middle line:-1
工作区

00:34:13.687 --> 00:34:14.855 align:middle line:-1
打开File

00:34:16.989 --> 00:34:18.492 align:middle line:-1
选择New Work Space

00:34:21.228 --> 00:34:22.829 align:middle line:-1
我将其命名为“Tutoring”

00:34:24.598 --> 00:34:26.033 align:middle line:-1
并将它放在桌面上

00:34:31.038 --> 00:34:36.310 align:middle line:-2
然后 我将通过选择File &gt;
Add Files添加每个框架

00:34:38.712 --> 00:34:40.581 align:middle line:-1
先添加赫尔姆霍茨

00:34:41.215 --> 00:34:42.716 align:middle line:-1
这是我刚打开的框架

00:34:44.251 --> 00:34:45.185 align:middle line:-1
然后点File…

00:34:46.820 --> 00:34:48.522 align:middle line:-1
就在这里 Keyboard

00:34:52.759 --> 00:34:58.165 align:middle line:-2
然后我通过File &gt; New &gt;
Playground添加一个新的Playground

00:35:02.970 --> 00:35:04.371 align:middle line:-2
一个空白的
Playground就好

00:35:05.672 --> 00:35:07.608 align:middle line:-2
“My Playground”
是一个不错的名字

00:35:08.041 --> 00:35:09.042 align:middle line:-1
跟任何名字一样

00:35:11.512 --> 00:35:13.180 align:middle line:-1
我需要首先导入

00:35:14.414 --> 00:35:15.549 align:middle line:-1
赫尔姆霍茨

00:35:16.817 --> 00:35:17.951 align:middle line:-1
然后导入我的Keyboard

00:35:22.289 --> 00:35:23.123 align:middle line:-1
好的

00:35:24.024 --> 00:35:27.528 align:middle line:-1
之后 我将快速做一些测试

00:35:27.928 --> 00:35:32.032 align:middle line:-1
以确保音符按照我的预期显示

00:35:33.333 --> 00:35:36.170 align:middle line:-1
我将构建我的每个框架

00:35:37.104 --> 00:35:40.040 align:middle line:-1
我要确保从方案中选中每一个

00:35:40.107 --> 00:35:42.476 align:middle line:0
稍后 我可能会制定另一个方案

00:35:42.543 --> 00:35:45.012 align:middle line:0
一次性构建这两个项目

00:35:45.078 --> 00:35:47.114 align:middle line:-1
但我现在所剩时间不多了

00:35:48.882 --> 00:35:52.452 align:middle line:-2
接着我在其中
运行我的Playground

00:35:52.519 --> 00:35:53.887 align:middle line:-1
一切都按预期运作

00:35:54.254 --> 00:35:55.122 align:middle line:-1
但是

00:35:56.089 --> 00:35:57.824 align:middle line:-1
这个可视化功能有时并不起作用

00:35:57.891 --> 00:36:00.160 align:middle line:-1
我有一些只见过钢琴的年轻学生

00:35:57.891 --> 00:36:00.160 align:middle line:-1
我有一些只见过钢琴的年轻学生

00:36:00.594 --> 00:36:02.362 align:middle line:-1
这里有一小段代码

00:36:05.132 --> 00:36:06.600 align:middle line:-1
可以在playgroundDescription中

00:36:07.501 --> 00:36:09.870 align:middle line:-1
快速创建一个视图

00:36:10.270 --> 00:36:11.805 align:middle line:-1
配置它

00:36:12.172 --> 00:36:14.775 align:middle line:-1
我还需要写一行代码

00:36:16.143 --> 00:36:19.446 align:middle line:-1
“customText=description”

00:36:20.981 --> 00:36:24.051 align:middle line:-1
在配置完我的视图后 我需要返回它

00:36:24.251 --> 00:36:25.252 align:middle line:-1
就这么简单

00:36:25.819 --> 00:36:26.987 align:middle line:-1
这变得更加简单

00:36:27.054 --> 00:36:29.523 align:middle line:-1
因为我手上碰巧有一个框架

00:36:29.890 --> 00:36:35.128 align:middle line:-2
现在我想再次运行第4行
但这次使用我的新配置

00:36:35.362 --> 00:36:40.234 align:middle line:-2
我要通过点击这里的Stop按钮
来重置这个Playground

00:36:44.571 --> 00:36:47.074 align:middle line:-1
接着在我添加内联结果后

00:36:49.009 --> 00:36:50.544 align:middle line:-1
重新运行整个Playground

00:36:54.114 --> 00:36:55.349 align:middle line:-1
你可以在这里看到…

00:37:02.723 --> 00:37:05.926 align:middle line:-2
你可以在这里看到
我有一个可视化的键盘

00:37:06.159 --> 00:37:11.632 align:middle line:-2
这样我的学生就可以识别出
我正尝试教他们的音符

00:37:15.636 --> 00:37:16.470 align:middle line:-1
现在

00:37:16.904 --> 00:37:21.408 align:middle line:-1
让我们来回顾一下今天所学的知识

00:37:25.412 --> 00:37:28.448 align:middle line:-2
Tibet介绍了
Playground的原理

00:37:28.949 --> 00:37:32.386 align:middle line:-2
布局以及
Playground标记语法

00:37:33.253 --> 00:37:37.457 align:middle line:-2
Alex解释了Playground中
强大的逐步运行功能

00:37:37.958 --> 00:37:40.360 align:middle line:-2
我介绍了Custom Playground
Display Convertible

00:37:40.861 --> 00:37:42.696 align:middle line:-1
以及如何导入你自己的代码

00:37:43.931 --> 00:37:44.898 align:middle line:-1
所以希望…

00:37:45.365 --> 00:37:48.268 align:middle line:-2
既然演讲已接近尾声
并且我们所有人都…

00:37:48.735 --> 00:37:52.406 align:middle line:-2
我们已介绍了Playground
以及你能获得的强大功能

00:37:53.874 --> 00:37:56.743 align:middle line:-1
我们希望看到每个项目

00:37:57.744 --> 00:37:59.479 align:middle line:-1
明年都有一个Playground

00:38:03.150 --> 00:38:04.618 align:middle line:-1
如果你有任何问题

00:38:04.685 --> 00:38:06.987 align:middle line:0
请随时造访我们的实验室

00:38:07.321 --> 00:38:08.422 align:middle line:0
我们明年再见
