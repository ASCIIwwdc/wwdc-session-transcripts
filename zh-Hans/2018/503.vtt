WEBVTT

00:00:07.516 --> 00:00:15.500 A:middle
[ 音乐 ]

00:00:18.516 --> 00:00:20.546 A:middle
[ 掌声 ]

00:00:21.046 --> 00:00:23.856 A:middle
&gt;&gt; 早上好 很高兴

00:00:23.856 --> 00:00:24.676 A:middle
和你们在这里一起探讨

00:00:25.346 --> 00:00:26.386 A:middle
我的名字是 Emmanuel

00:00:26.386 --> 00:00:27.476 A:middle
是 Core Image 团队的一名工程师

00:00:28.586 --> 00:00:30.106 A:middle
今天 我们将着眼于

00:00:30.206 --> 00:00:32.386 A:middle
使用深度图创建照片和视频效果

00:00:32.866 --> 00:00:35.686 A:middle
让我们开始吧

00:00:37.036 --> 00:00:38.976 A:middle
在 iOS 11 中 我们开始

00:00:38.976 --> 00:00:40.726 A:middle
将人像深度数据

00:00:40.726 --> 00:00:42.206 A:middle
与静态人像图片一同传送

00:00:43.516 --> 00:00:45.386 A:middle
在去年的 WWDC 会议期间

00:00:45.736 --> 00:00:46.746 A:middle
我们展示了如何利用

00:00:46.746 --> 00:00:47.826 A:middle
深度数据实现

00:00:47.826 --> 00:00:49.436 A:middle
令人惊叹的效果 例如

00:00:49.436 --> 00:00:51.446 A:middle
力度透视 模拟

00:00:51.446 --> 00:00:52.996 A:middle
景深效果 以及

00:00:52.996 --> 00:00:53.806 A:middle
各种前景和

00:00:53.806 --> 00:00:55.286 A:middle
背景分离效果

00:00:56.716 --> 00:00:57.806 A:middle
今年我们非常

00:00:57.806 --> 00:00:59.206 A:middle
高兴地宣布

00:00:59.206 --> 00:01:01.976 A:middle
我们将推出一个新的功能人像蒙版

00:00:59.206 --> 00:01:01.976 A:middle
我们将推出一个新的功能人像蒙版

00:01:06.046 --> 00:01:07.036 A:middle
因此 在此次会议的前半部分

00:01:07.036 --> 00:01:08.616 A:middle
我们将着重于

00:01:08.616 --> 00:01:09.696 A:middle
人物静态图像

00:01:09.696 --> 00:01:11.896 A:middle
以及如何很好的使用它们的效果

00:01:12.956 --> 00:01:14.366 A:middle
在接下来的一半时间里

00:01:14.366 --> 00:01:15.446 A:middle
我的同事 Ron 来自视频工程的专家

00:01:15.446 --> 00:01:17.176 A:middle
将着重于

00:01:17.176 --> 00:01:18.426 A:middle
使用 TruthDepth 相机

00:01:18.426 --> 00:01:19.906 A:middle
来实现实时视频效果

00:01:21.936 --> 00:01:24.076 A:middle
好的 让我们来看看

00:01:24.076 --> 00:01:26.636 A:middle
人像景深识别 API

00:01:27.236 --> 00:01:28.436 A:middle
之前 我提到了人像蒙版

00:01:28.436 --> 00:01:29.526 A:middle
那么人像蒙版是什么呢

00:01:29.526 --> 00:01:30.636 A:middle
人像蒙版是

00:01:30.636 --> 00:01:32.476 A:middle
把前景和背景

00:01:32.476 --> 00:01:33.856 A:middle
分割开来 这意味着

00:01:33.856 --> 00:01:35.706 A:middle
你有着一个

00:01:35.706 --> 00:01:37.706 A:middle
前景为 1.0

00:01:37.706 --> 00:01:40.576 A:middle
的遮罩 背景

00:01:40.576 --> 00:01:42.176 A:middle
为 0.0 的遮罩 并且你可以在两者之间

00:01:42.176 --> 00:01:42.976 A:middle
获得平缓且连续的数值

00:01:47.046 --> 00:01:47.646 A:middle
人像蒙版有着

00:01:47.646 --> 00:01:49.116 A:middle
极高的质量 并且

00:01:49.116 --> 00:01:50.626 A:middle
能够很好的保留细节

00:01:50.676 --> 00:01:52.666 A:middle
例如人物的卷发和

00:01:52.666 --> 00:01:53.696 A:middle
头发上的轮廓

00:01:54.076 --> 00:01:55.446 A:middle
这非常的了不起

00:01:56.716 --> 00:01:59.646 A:middle
蒙版可以实现

00:01:59.646 --> 00:02:01.666 A:middle
很多惊人的效果 此处

00:01:59.646 --> 00:02:01.666 A:middle
很多惊人的效果 此处

00:02:01.666 --> 00:02:03.556 A:middle
只是其中以一

00:02:03.556 --> 00:02:04.916 A:middle
通过使背景变暗

00:02:04.916 --> 00:02:06.866 A:middle
来实现前景和背景的分离

00:02:06.866 --> 00:02:09.806 A:middle
我们把这个工具交与你手 这样你可以创造出

00:02:09.806 --> 00:02:12.256 A:middle
惊人的 App 和新的

00:02:12.256 --> 00:02:13.836 A:middle
效果 从而让你的用户满意

00:02:15.836 --> 00:02:18.466 A:middle
好的 人像蒙版

00:02:18.466 --> 00:02:21.326 A:middle
效果将可以在 iOS 12 中使用

00:02:22.056 --> 00:02:25.536 A:middle
它适用于

00:02:25.536 --> 00:02:27.476 A:middle
前置和后置相机

00:02:28.056 --> 00:02:31.516 A:middle
此技术被使用于

00:02:31.516 --> 00:02:33.726 A:middle
人物静止图像 并且

00:02:33.726 --> 00:02:34.766 A:middle
此刻场景中

00:02:34.766 --> 00:02:35.616 A:middle
必须有人物存在

00:02:37.426 --> 00:02:39.426 A:middle
请注意 人像蒙版是

00:02:39.426 --> 00:02:41.086 A:middle
线性编码 它并不是

00:02:41.086 --> 00:02:42.306 A:middle
伽马编码 所以你得到

00:02:42.306 --> 00:02:43.346 A:middle
的是一个灰度缓冲区

00:02:44.756 --> 00:02:46.966 A:middle
而且也不能保证

00:02:46.966 --> 00:02:47.826 A:middle
你会获得

00:02:47.826 --> 00:02:49.036 A:middle
人像蒙版

00:02:49.036 --> 00:02:50.076 A:middle
当你使用人像静止图片

00:02:50.116 --> 00:02:51.516 A:middle
你总是能获得图像深度数据

00:02:51.866 --> 00:02:53.316 A:middle
但是你需要测试

00:02:53.316 --> 00:02:54.196 A:middle
去确保人像蒙版的存在

00:02:54.516 --> 00:02:57.176 A:middle
现在 让我们来看看

00:02:57.176 --> 00:02:58.666 A:middle
API 了解如何

00:02:58.666 --> 00:03:00.126 A:middle
加载数据

00:02:58.666 --> 00:03:00.126 A:middle
加载数据

00:03:00.586 --> 00:03:02.876 A:middle
首先 ImageIO 提供了一个简易的

00:03:02.876 --> 00:03:04.286 A:middle
API 允许你加载

00:03:04.516 --> 00:03:05.466 A:middle
人像蒙版效果

00:03:05.766 --> 00:03:08.456 A:middle
所以通过调用 CGImageSourceCopy

00:03:09.156 --> 00:03:10.426 A:middle
传递一个新的变量

00:03:10.706 --> 00:03:12.576 A:middle
kCGImageAuxiliaryData

00:03:12.576 --> 00:03:13.806 A:middle
TypePortraitEffectsMatte

00:03:15.186 --> 00:03:16.046 A:middle
这个调用将返回一个

00:03:16.046 --> 00:03:18.216 A:middle
包含三个主要信息的结构

00:03:18.846 --> 00:03:20.426 A:middle
图像本身数据定义为

00:03:20.426 --> 00:03:24.176 A:middle
CFDataRef 与缓冲区本身

00:03:24.176 --> 00:03:25.496 A:middle
相关的元数据为

00:03:25.496 --> 00:03:28.096 A:middle
CFDictionary 以及

00:03:28.266 --> 00:03:31.146 A:middle
与抓取本身相关的元数据

00:03:33.356 --> 00:03:35.056 A:middle
AVFoundation 同时也提供了

00:03:35.056 --> 00:03:36.386 A:middle
一个可以比 ImageIO

00:03:36.386 --> 00:03:38.186 A:middle
更高级的 API

00:03:38.986 --> 00:03:42.286 A:middle
因此从 CGImageSourceCopy 获得输出 然后

00:03:42.286 --> 00:03:43.976 A:middle
你将它输入 AVPortrait effects matte 类

00:03:48.046 --> 00:03:49.656 A:middle
你从中返回的东西

00:03:49.656 --> 00:03:51.326 A:middle
非常的简单 它是一个 CV 像素

00:03:51.326 --> 00:03:53.596 A:middle
缓冲器以及像素格式类型

00:03:53.816 --> 00:03:54.946 A:middle
因此你可以使用这个 CV

00:03:54.946 --> 00:03:56.626 A:middle
像素缓冲器来满足你

00:03:56.626 --> 00:03:58.586 A:middle
进一步的处理需求

00:03:59.006 --> 00:04:00.296 A:middle
这非常的简单

00:03:59.006 --> 00:04:00.296 A:middle
这非常的简单

00:04:01.106 --> 00:04:02.676 A:middle
AVFoundation 还支持

00:04:02.676 --> 00:04:04.966 A:middle
在拍摄时提供人像蒙版

00:04:05.516 --> 00:04:07.176 A:middle
典型的 AVFoundation 设置

00:04:07.176 --> 00:04:08.956 A:middle
从 AVCaptureInput 开始

00:04:08.956 --> 00:04:11.296 A:middle
然后 AVCaptureDevice

00:04:11.296 --> 00:04:12.126 A:middle
以及 AVCaptureSession

00:04:12.706 --> 00:04:14.386 A:middle
首先 你需要确保

00:04:14.386 --> 00:04:15.436 A:middle
你的软件环境

00:04:15.436 --> 00:04:16.495 A:middle
能够支持

00:04:16.495 --> 00:04:17.986 A:middle
人像蒙版效果

00:04:18.206 --> 00:04:20.286 A:middle
要做到这点 你需要

00:04:20.286 --> 00:04:21.636 A:middle
检查是否支持

00:04:21.636 --> 00:04:23.036 A:middle
深度数据传输 以及

00:04:23.036 --> 00:04:24.596 A:middle
人像蒙版效果传输

00:04:25.136 --> 00:04:26.406 A:middle
我们有这两个的原因

00:04:26.506 --> 00:04:27.636 A:middle
是由于深度数据

00:04:27.636 --> 00:04:29.046 A:middle
和人像蒙版同时存在

00:04:29.636 --> 00:04:31.286 A:middle
你可以选择仅

00:04:31.286 --> 00:04:32.976 A:middle
获取深度信息

00:04:32.976 --> 00:04:34.026 A:middle
但只要你需求

00:04:34.026 --> 00:04:35.516 A:middle
人像蒙版 你就需要激活

00:04:35.516 --> 00:04:37.216 A:middle
深度数据的传输

00:04:38.126 --> 00:04:39.786 A:middle
为了激活或者

00:04:39.786 --> 00:04:41.606 A:middle
选择传输数据 你需要

00:04:41.606 --> 00:04:42.336 A:middle
确保修改你的

00:04:42.336 --> 00:04:44.146 A:middle
AVCapturePhotoSettings 并且

00:04:44.146 --> 00:04:45.336 A:middle
启用 isPortraitEffects MatteDelivery

00:04:45.336 --> 00:04:46.906 A:middle
以及设置

00:04:46.906 --> 00:04:49.846 A:middle
isDepthDataDeliveryEnabled 为 true

00:04:50.806 --> 00:04:52.266 A:middle
然后抓取时间 你的

00:04:52.706 --> 00:04:53.776 A:middle
ddiFinishProcessingPhoto

00:04:53.776 --> 00:04:55.086 A:middle
回调函数将会

00:04:55.086 --> 00:04:57.346 A:middle
给你人像蒙版效果

00:04:57.346 --> 00:04:59.316 A:middle
就是如此的简单

00:05:00.256 --> 00:05:01.366 A:middle
Core Image 还为你

00:05:01.366 --> 00:05:02.986 A:middle
提供加载和

00:05:02.986 --> 00:05:04.626 A:middle
保存你的人像蒙版效果的方法

00:05:05.546 --> 00:05:06.806 A:middle
一个新的队列被引入

00:05:06.926 --> 00:05:07.726 A:middle
auxiliaryPortrait

00:05:07.726 --> 00:05:09.106 A:middle
EffectsMatte 你只需要传入

00:05:09.106 --> 00:05:13.386 A:middle
imageWithContentsOFURL 到 CIImage

00:05:13.386 --> 00:05:14.776 A:middle
就可以获取人像蒙版效果

00:05:19.046 --> 00:05:19.866 A:middle
Core Image 同时还允许

00:05:19.866 --> 00:05:21.636 A:middle
你的人像蒙版效果

00:05:21.636 --> 00:05:23.946 A:middle
直接保存到你的文件中

00:05:24.426 --> 00:05:26.526 A:middle
要做到这一点 这里有一个新的选择

00:05:26.526 --> 00:05:29.506 A:middle
称为 portraitEffectsMatteImage 你传入

00:05:29.506 --> 00:05:30.876 A:middle
在 CI Image 中的

00:05:30.876 --> 00:05:32.696 A:middle
人像蒙版效果 然后你

00:05:32.696 --> 00:05:34.086 A:middle
就可以例如用

00:05:34.086 --> 00:05:35.246 A:middle
writeHEIFRepresntationOfImage

00:05:35.246 --> 00:05:36.576 A:middle
写入你的磁盘

00:05:37.196 --> 00:05:39.246 A:middle
这里有一件很重要

00:05:39.246 --> 00:05:41.136 A:middle
的事情需要注意 关于

00:05:41.416 --> 00:05:42.826 A:middle
三种图像 你的 RGB 图像

00:05:42.826 --> 00:05:44.796 A:middle
深度图和

00:05:44.796 --> 00:05:47.116 A:middle
人像蒙版图

00:05:47.116 --> 00:05:47.996 A:middle
有着不同的分辨率

00:05:49.266 --> 00:05:50.426 A:middle
例如 对于后置摄像机的

00:05:50.426 --> 00:05:51.876 A:middle
人像蒙版

00:05:51.876 --> 00:05:53.866 A:middle
是一半大小 对于深度图

00:05:53.866 --> 00:05:54.696 A:middle
甚至更小

00:05:55.526 --> 00:05:56.386 A:middle
所以让我们一起

00:05:56.386 --> 00:05:57.616 A:middle
来看后置摄像头的

00:05:57.616 --> 00:05:58.516 A:middle
三种图像

00:05:59.786 --> 00:06:00.816 A:middle
这意味着在你的 App 中

00:05:59.786 --> 00:06:00.816 A:middle
这意味着在你的 App 中

00:06:00.816 --> 00:06:02.076 A:middle
你需要确保 要不将

00:06:02.076 --> 00:06:04.236 A:middle
RGB 图像缩减为与

00:06:04.236 --> 00:06:06.076 A:middle
你的人像深度图或者

00:06:06.076 --> 00:06:08.636 A:middle
人像蒙版图一样的大小

00:06:09.336 --> 00:06:11.086 A:middle
或者用相反的方法 将它们

00:06:11.086 --> 00:06:12.496 A:middle
采样到与 RGB 图像相同的大小

00:06:13.256 --> 00:06:15.316 A:middle
所以这就是我今天

00:06:15.316 --> 00:06:16.286 A:middle
想要讨论的

00:06:16.286 --> 00:06:18.686 A:middle
人像景深识别 API 并且我们准备了

00:06:18.686 --> 00:06:20.626 A:middle
一个非常棒的演示

00:06:20.626 --> 00:06:24.986 A:middle
让你们观看在这个演示中 我将

00:06:24.986 --> 00:06:26.376 A:middle
使用 Jupiter Notebook

00:06:26.896 --> 00:06:28.276 A:middle
它是一个基于浏览器的

00:06:33.306 --> 00:06:36.456 A:middle
我们将 Python 与 Core Image 绑定起来

00:06:36.546 --> 00:06:37.646 A:middle
我们将会在稍后的一个单独会议

00:06:37.646 --> 00:06:38.976 A:middle
中介绍这些绑定

00:06:45.056 --> 00:06:46.626 A:middle
让我们开始并加载一张

00:06:46.626 --> 00:06:48.686 A:middle
包含人像深度数据和

00:06:48.686 --> 00:06:49.706 A:middle
人像蒙版的图片

00:06:50.016 --> 00:06:50.906 A:middle
所以这将是我们

00:06:50.906 --> 00:06:51.516 A:middle
所要处理的图片

00:06:52.296 --> 00:06:54.956 A:middle
首先 我想为你展示

00:06:54.956 --> 00:06:56.796 A:middle
该图片的深度图

00:06:56.796 --> 00:06:57.906 A:middle
看起来是什么样的

00:06:57.906 --> 00:06:59.196 A:middle
让我们来看看这两张图

00:06:59.296 --> 00:07:00.436 A:middle
在左侧我们有

00:06:59.296 --> 00:07:00.436 A:middle
在左侧我们有

00:07:00.436 --> 00:07:02.206 A:middle
人像深度图 在右侧有

00:07:02.206 --> 00:07:03.046 A:middle
人像蒙版图 你可以

00:07:03.046 --> 00:07:04.796 A:middle
看到它们的细节有多好

00:07:05.366 --> 00:07:07.496 A:middle
我们将在一分钟内做一个

00:07:07.496 --> 00:07:09.896 A:middle
缩放剪裁 以便你

00:07:09.896 --> 00:07:13.066 A:middle
更好地欣赏它的质量

00:07:13.836 --> 00:07:15.686 A:middle
接下来我们要做的是

00:07:15.686 --> 00:07:16.586 A:middle
调整图像的大小

00:07:17.426 --> 00:07:18.966 A:middle
你可以看到 RGB 图和深度图

00:07:18.966 --> 00:07:20.596 A:middle
在大小上有很大的区别

00:07:22.006 --> 00:07:23.516 A:middle
所以我们调整图像的大小

00:07:23.516 --> 00:07:25.126 A:middle
让我们再一起看看它们

00:07:25.436 --> 00:07:26.686 A:middle
所以在右侧我们有 RGB 图像和

00:07:26.686 --> 00:07:27.536 A:middle
深度数据图

00:07:27.946 --> 00:07:29.076 A:middle
在本演示的第一个部分中

00:07:29.076 --> 00:07:30.876 A:middle
我将着重于深度数据图

00:07:31.326 --> 00:07:32.806 A:middle
然后我们将看到

00:07:32.806 --> 00:07:33.946 A:middle
事物在使用人像蒙版效果时

00:07:33.946 --> 00:07:34.846 A:middle
会变得多么简单

00:07:35.596 --> 00:07:37.806 A:middle
所以今天我将

00:07:37.806 --> 00:07:39.296 A:middle
处理的效果是深度阈值

00:07:39.296 --> 00:07:42.426 A:middle
基本上我要做的是计算我的

00:07:42.426 --> 00:07:43.576 A:middle
人像深度数据图中

00:07:43.576 --> 00:07:45.316 A:middle
灰度值的直方图

00:07:45.316 --> 00:07:47.596 A:middle
我将在这直方图中运用

00:07:47.596 --> 00:07:48.536 A:middle
一个阈值或者一个剪切点

00:07:48.536 --> 00:07:49.636 A:middle
所以一切都

00:07:49.636 --> 00:07:51.516 A:middle
变为零或者一

00:07:51.516 --> 00:07:53.426 A:middle
取决于它是否低于或高于该阈值

00:07:54.346 --> 00:07:55.886 A:middle
我们将排除图片中的小型黑洞

00:07:55.886 --> 00:07:57.336 A:middle
通过使用形态学

00:07:57.336 --> 00:07:59.116 A:middle
闭运算操作

00:07:59.116 --> 00:08:01.386 A:middle
然后模糊遮罩 以便

00:07:59.116 --> 00:08:01.386 A:middle
然后模糊遮罩 以便

00:08:01.386 --> 00:08:03.006 A:middle
获得漂亮的羽化

00:08:03.766 --> 00:08:05.456 A:middle
让我们看看这个的实际情况

00:08:06.486 --> 00:08:07.456 A:middle
记住 所有的这些都是用

00:08:07.456 --> 00:08:09.966 A:middle
Core Image 作为后端从而

00:08:09.966 --> 00:08:11.396 A:middle
在浏览器中执行

00:08:11.866 --> 00:08:13.836 A:middle
首先 我想给你展示的

00:08:13.836 --> 00:08:15.356 A:middle
是如何改变

00:08:15.356 --> 00:08:17.036 A:middle
百分比点来改变我的遮罩

00:08:17.286 --> 00:08:19.216 A:middle
所以越高的数值

00:08:19.216 --> 00:08:21.026 A:middle
越不明显 我剪裁的是前景

00:08:21.276 --> 00:08:22.316 A:middle
所以让我们选择一个合理

00:08:22.316 --> 00:08:24.466 A:middle
的数值 也许可以选择这个

00:08:25.226 --> 00:08:26.556 A:middle
你可以在这里

00:08:26.556 --> 00:08:28.246 A:middle
看到是我们称之为

00:08:28.246 --> 00:08:29.376 A:middle
插入到图片

00:08:29.716 --> 00:08:31.226 A:middle
前景的区域

00:08:31.226 --> 00:08:32.176 A:middle
这里也有一些我想

00:08:32.176 --> 00:08:33.086 A:middle
去除掉的区域

00:08:33.296 --> 00:08:35.086 A:middle
所以我会做的是添加

00:08:35.086 --> 00:08:36.446 A:middle
一些形态学闭运算

00:08:36.926 --> 00:08:38.936 A:middle
看看这是多么的神奇

00:08:38.976 --> 00:08:40.885 A:middle
如果我的数值调的太大 明显的

00:08:40.885 --> 00:08:42.265 A:middle
将失去我整个的目标 我不想这么做

00:08:43.066 --> 00:08:44.226 A:middle
所以让我们选择这个点

00:08:44.916 --> 00:08:46.576 A:middle
接下来我做的是通过

00:08:46.576 --> 00:08:47.876 A:middle
在其上面做高斯模糊

00:08:47.876 --> 00:08:48.556 A:middle
来改变羽化

00:08:49.196 --> 00:08:50.306 A:middle
然后我们再看看 RGB 图

00:08:50.306 --> 00:08:51.266 A:middle
在此上什么样

00:08:51.686 --> 00:08:52.906 A:middle
这不是我们刚刚提出来的

00:08:52.906 --> 00:08:54.176 A:middle
效果 只是为了了解

00:08:54.176 --> 00:08:55.166 A:middle
遮罩是怎么被运用的

00:08:55.166 --> 00:08:56.306 A:middle
让我们继续

00:08:57.186 --> 00:08:59.206 A:middle
我在这里为阈值

00:08:59.206 --> 00:09:01.746 A:middle
选择了一些参数

00:08:59.206 --> 00:09:01.746 A:middle
选择了一些参数

00:09:01.906 --> 00:09:02.976 A:middle
这些将用于我的前景中

00:09:07.256 --> 00:09:09.416 A:middle
接下来 我只在我的前景中

00:09:09.416 --> 00:09:10.536 A:middle
应用效果

00:09:10.536 --> 00:09:11.546 A:middle
所以在这个特定的例子中

00:09:11.546 --> 00:09:12.936 A:middle
我将使用 Core Image 的 photoEffectNoir

00:09:13.056 --> 00:09:14.396 A:middle
它可以将所有变成灰度图

00:09:14.396 --> 00:09:15.556 A:middle
并且具有一点对比度

00:09:16.186 --> 00:09:17.206 A:middle
我正在进行

00:09:17.206 --> 00:09:19.816 A:middle
曝光调整 以及

00:09:19.846 --> 00:09:21.156 A:middle
稍微减弱饱和度

00:09:21.156 --> 00:09:23.196 A:middle
并进一步增强对比度

00:09:23.936 --> 00:09:24.896 A:middle
让我们看看结果

00:09:24.896 --> 00:09:25.716 A:middle
这将是我要

00:09:25.716 --> 00:09:26.826 A:middle
使用的前景

00:09:27.336 --> 00:09:28.936 A:middle
我想做的是

00:09:29.016 --> 00:09:32.016 A:middle
利用深度数据遮罩

00:09:32.016 --> 00:09:33.756 A:middle
我将把这个

00:09:33.756 --> 00:09:35.446 A:middle
前景合成到背景中

00:09:36.496 --> 00:09:37.866 A:middle
我们需生成一个

00:09:37.866 --> 00:09:39.276 A:middle
只是比原始图像

00:09:39.396 --> 00:09:40.236 A:middle
较暗版本的背景

00:09:40.766 --> 00:09:43.816 A:middle
然后 我们可以用

00:09:43.816 --> 00:09:45.146 A:middle
Core Image 的滤镜 称为

00:09:45.146 --> 00:09:48.956 A:middle
blendWithMask 将两者结合到一起

00:09:48.956 --> 00:09:50.186 A:middle
然后我们得到了结果

00:09:50.186 --> 00:09:52.866 A:middle
就是如此的简单 好的

00:09:52.866 --> 00:09:54.936 A:middle
谢谢

00:09:55.516 --> 00:09:58.716 A:middle
[ 掌声 ]

00:09:59.216 --> 00:10:02.926 A:middle
如你所见 需要一点点烦琐地

00:09:59.216 --> 00:10:02.926 A:middle
如你所见 需要一点点烦琐地

00:10:02.926 --> 00:10:04.096 A:middle
修剪参数

00:10:04.096 --> 00:10:05.666 A:middle
使其平滑

00:10:05.666 --> 00:10:06.096 A:middle
如此这般

00:10:06.356 --> 00:10:07.366 A:middle
这个人像蒙版效果

00:10:07.526 --> 00:10:10.406 A:middle
使你能在没有实际做太多操作

00:10:10.406 --> 00:10:11.666 A:middle
的情况下执行操作

00:10:11.666 --> 00:10:12.816 A:middle
这非常令人兴奋

00:10:12.816 --> 00:10:13.386 A:middle
让我们看看这个

00:10:13.666 --> 00:10:15.506 A:middle
因此 我们从另一张

00:10:15.506 --> 00:10:19.086 A:middle
图像开始 它同样

00:10:19.086 --> 00:10:20.646 A:middle
有着人像深度信息

00:10:20.646 --> 00:10:22.386 A:middle
和人像蒙版信息

00:10:22.386 --> 00:10:23.486 A:middle
让我们来看看这些

00:10:25.066 --> 00:10:27.056 A:middle
像我之前提到的

00:10:27.056 --> 00:10:29.666 A:middle
这是一个非常高质量的前景遮罩

00:10:29.666 --> 00:10:31.056 A:middle
所以让我们来看看这个

00:10:31.056 --> 00:10:33.376 A:middle
头发上的细节

00:10:33.976 --> 00:10:36.846 A:middle
看看这细节有多好

00:10:36.846 --> 00:10:37.456 A:middle
非常的漂亮

00:10:37.626 --> 00:10:38.526 A:middle
在最右侧

00:10:38.526 --> 00:10:39.676 A:middle
是一个深度图像

00:10:39.676 --> 00:10:42.436 A:middle
与人像蒙版对比

00:10:42.436 --> 00:10:43.586 A:middle
它表明深度数据如何的粗糙

00:10:44.376 --> 00:10:46.036 A:middle
所以在这里我们再做一个

00:10:46.036 --> 00:10:47.886 A:middle
前景分离效果

00:10:47.886 --> 00:10:49.016 A:middle
就像我们刚刚做的一样

00:10:49.016 --> 00:10:49.956 A:middle
但是这次我们使用人像蒙版图

00:10:49.956 --> 00:10:50.816 A:middle
而不是人像深度图

00:10:51.386 --> 00:10:53.736 A:middle
因此 让我们看看我们

00:10:53.736 --> 00:10:55.606 A:middle
与之前类似的前景图

00:10:55.606 --> 00:10:56.656 A:middle
但是这次我们稍微

00:10:56.656 --> 00:10:57.856 A:middle
降低一些前景的饱和度

00:10:57.856 --> 00:10:59.746 A:middle
增加更多的对比度

00:10:59.746 --> 00:11:02.666 A:middle
以及一些图像的振动

00:10:59.746 --> 00:11:02.666 A:middle
以及一些图像的振动

00:11:03.406 --> 00:11:04.706 A:middle
现在我们来创建一个背景

00:11:04.706 --> 00:11:06.006 A:middle
这次我们将做一个

00:11:06.006 --> 00:11:07.236 A:middle
discBlur 它是 Core Image

00:11:07.236 --> 00:11:08.836 A:middle
的另一种滤镜 以及减少

00:11:08.836 --> 00:11:09.996 A:middle
曝光 使图像变得

00:11:09.996 --> 00:11:10.746 A:middle
非常的黑暗

00:11:10.746 --> 00:11:12.356 A:middle
但是我们仍然有

00:11:12.356 --> 00:11:13.386 A:middle
一些背景 它很微弱

00:11:13.386 --> 00:11:14.386 A:middle
但仍然存在

00:11:15.446 --> 00:11:17.826 A:middle
再次 我用了 Core Image 的

00:11:17.826 --> 00:11:19.216 A:middle
blendWithMask 它将为

00:11:19.216 --> 00:11:20.716 A:middle
我们合成图像

00:11:21.316 --> 00:11:22.216 A:middle
然后我们就有了左右两张图

00:11:22.526 --> 00:11:23.776 A:middle
这难道不美吗

00:11:24.516 --> 00:11:27.556 A:middle
[ 掌声 ]

00:11:28.056 --> 00:11:29.276 A:middle
谢谢

00:11:29.436 --> 00:11:30.476 A:middle
好了 让我们看看

00:11:30.476 --> 00:11:32.386 A:middle
另一个我们称之为 Big Head 的演示

00:11:32.946 --> 00:11:36.326 A:middle
由于人像蒙版是

00:11:36.326 --> 00:11:37.806 A:middle
如此的好 我们实际上可以

00:11:37.806 --> 00:11:39.306 A:middle
做一些事情例如

00:11:39.306 --> 00:11:40.496 A:middle
改变我们目标的大小

00:11:40.496 --> 00:11:41.966 A:middle
相对于背景的大小

00:11:42.216 --> 00:11:44.506 A:middle
让我们开始这样做

00:11:44.506 --> 00:11:45.006 A:middle
我们现场做

00:11:46.096 --> 00:11:48.536 A:middle
所以 左边这是我们的输入

00:11:48.536 --> 00:11:50.416 A:middle
图像和右边的

00:11:50.416 --> 00:11:52.786 A:middle
人像蒙版图

00:11:52.966 --> 00:11:55.056 A:middle
我将要做的是

00:11:55.056 --> 00:11:57.146 A:middle
我会改变在我框架中人物的

00:11:57.146 --> 00:11:59.616 A:middle
大小 注意目标是

00:11:59.616 --> 00:12:02.416 A:middle
如何的变大和变小

00:11:59.616 --> 00:12:02.416 A:middle
如何的变大和变小

00:12:03.176 --> 00:12:04.946 A:middle
你可以在你的

00:12:05.956 --> 00:12:07.096 A:middle
框架中给这个目标

00:12:07.096 --> 00:12:09.046 A:middle
更多的权重数值 你也可以做

00:12:09.046 --> 00:12:11.106 A:middle
很酷的事情 就像现在

00:12:11.106 --> 00:12:12.456 A:middle
我有着这个 让我选择

00:12:12.456 --> 00:12:14.966 A:middle
我最喜欢的尺寸大小

00:12:14.966 --> 00:12:17.436 A:middle
你可以通过在前景中

00:12:17.436 --> 00:12:19.346 A:middle
提供更多对比度

00:12:19.346 --> 00:12:20.276 A:middle
并使背景模糊

00:12:20.276 --> 00:12:22.076 A:middle
来做类似仿真景深的事情

00:12:22.076 --> 00:12:22.916 A:middle
从而为拍摄对象

00:12:22.916 --> 00:12:24.136 A:middle
提供更多的突出点

00:12:26.296 --> 00:12:28.006 A:middle
所以让我们来看看

00:12:28.006 --> 00:12:29.346 A:middle
另一张图片

00:12:29.346 --> 00:12:30.506 A:middle
看看这操作起来是多么的容易

00:12:30.506 --> 00:12:32.226 A:middle
因为它们使用了完全

00:12:32.226 --> 00:12:33.176 A:middle
相同的方法

00:12:33.176 --> 00:12:34.486 A:middle
这是非常的简单 仅仅

00:12:34.536 --> 00:12:36.376 A:middle
使用了人像蒙版图并用它

00:12:36.376 --> 00:12:38.856 A:middle
去模糊前景和背景

00:12:38.856 --> 00:12:40.096 A:middle
再次 我们输入图像

00:12:40.096 --> 00:12:42.586 A:middle
改变它的大小

00:12:42.586 --> 00:12:44.966 A:middle
使它变得更大

00:12:45.006 --> 00:12:47.736 A:middle
然后应用一些对比度 来给我们的人像更多的焦点

00:12:48.706 --> 00:12:49.976 A:middle
这很简单 令人兴奋

00:12:50.516 --> 00:12:55.216 A:middle
[ 掌声 ]

00:12:55.716 --> 00:12:57.186 A:middle
好吧 让我们看看

00:12:57.186 --> 00:12:58.956 A:middle
另一个演示 我们称它为 Marching

00:12:59.226 --> 00:13:01.226 A:middle
我甚至不会

00:12:59.226 --> 00:13:01.226 A:middle
我甚至不会

00:13:01.226 --> 00:13:02.976 A:middle
解释它的作用

00:13:02.976 --> 00:13:04.816 A:middle
让我们来看看滤镜的实际操作

00:13:10.046 --> 00:13:12.516 A:middle
你看 有趣的东西

00:13:12.516 --> 00:13:14.236 A:middle
因为可以做到这一点

00:13:14.236 --> 00:13:15.696 A:middle
所以我可以添加任何

00:13:15.696 --> 00:13:16.406 A:middle
我想要的数量缝合在一起

00:13:16.406 --> 00:13:18.726 A:middle
所以从只有一些贴近你

00:13:18.726 --> 00:13:20.526 A:middle
到把它推到很远很远

00:13:21.966 --> 00:13:23.046 A:middle
令人兴奋

00:13:23.456 --> 00:13:31.506 A:middle
好的 这就是这个演示

00:13:31.506 --> 00:13:32.356 A:middle
我希望你喜欢这个

00:13:33.966 --> 00:13:35.606 A:middle
所以如果你想了解

00:13:35.606 --> 00:13:36.956 A:middle
更多有关使用 Python 和

00:13:36.956 --> 00:13:38.126 A:middle
Core Image 的东西 我建议你去

00:13:38.126 --> 00:13:39.426 A:middle
参加今天下午的

00:13:39.796 --> 00:13:40.906 A:middle
Core Image Performance

00:13:40.906 --> 00:13:42.066 A:middle
Prototyping in Python 的会议

00:13:42.686 --> 00:13:45.616 A:middle
这就是我今天所有的展示

00:13:45.616 --> 00:13:46.736 A:middle
让我来介绍我的同事

00:13:46.736 --> 00:13:48.266 A:middle
Ron 一名视频工程师

00:13:48.266 --> 00:13:49.676 A:middle
将介绍使用 TrueDepth

00:13:49.676 --> 00:13:51.046 A:middle
的实时视频效果

00:13:51.346 --> 00:13:51.976 A:middle
谢谢大家

00:13:52.516 --> 00:13:56.500 A:middle
[ 掌声 ]

00:13:59.286 --> 00:14:00.046 A:middle
&gt;&gt; 谢谢你 Emmanuel

00:13:59.286 --> 00:14:00.046 A:middle
&gt;&gt; 谢谢你 Emmanuel

00:14:01.186 --> 00:14:02.826 A:middle
非常精彩的图像效果

00:14:02.826 --> 00:14:03.456 A:middle
那么视频呢

00:14:04.866 --> 00:14:06.926 A:middle
我的名字是 Ron Sokolovsky

00:14:06.926 --> 00:14:07.916 A:middle
我是一名视频工程师

00:14:08.476 --> 00:14:11.946 A:middle
在这个部分 我们将

00:14:11.946 --> 00:14:13.236 A:middle
利用 TrueDepth 的相机

00:14:13.446 --> 00:14:15.576 A:middle
为实时视频

00:14:15.576 --> 00:14:17.636 A:middle
创造类似的效果

00:14:17.636 --> 00:14:20.426 A:middle
例如此背景替换 App

00:14:21.856 --> 00:14:24.556 A:middle
为了产生如此的效果

00:14:24.836 --> 00:14:26.486 A:middle
我们将深入研究

00:14:26.486 --> 00:14:29.306 A:middle
来自 TrueDepth 相机的特性

00:14:29.306 --> 00:14:32.066 A:middle
最佳实践性和挑战

00:14:32.636 --> 00:14:35.316 A:middle
我们将为你展示

00:14:35.316 --> 00:14:36.706 A:middle
如何使用点云技术

00:14:36.706 --> 00:14:38.286 A:middle
一个完全不同的方式

00:14:38.286 --> 00:14:40.546 A:middle
来处理和渲染丰富的深度信息

00:14:41.056 --> 00:14:42.626 A:middle
后台替换程序

00:14:42.846 --> 00:14:44.116 A:middle
我们称之为 Backdrop

00:14:44.476 --> 00:14:45.516 A:middle
我们将向你逐步

00:14:45.516 --> 00:14:46.756 A:middle
展示如何实现

00:14:48.336 --> 00:14:51.446 A:middle
但首先 TrueDepth 相机的流

00:14:51.446 --> 00:14:53.396 A:middle
由帧组成

00:14:53.396 --> 00:14:55.326 A:middle
每一帧都是一个深度图

00:14:55.326 --> 00:14:57.186 A:middle
它是一个 2D 图像

00:14:57.426 --> 00:14:58.926 A:middle
其中每一个像素都包含

00:14:59.236 --> 00:15:00.976 A:middle
深度信息和沿该方向到场景的距离

00:14:59.236 --> 00:15:00.976 A:middle
深度信息和沿该方向到场景的距离

00:15:05.046 --> 00:15:06.296 A:middle
我们选择了特定的着色

00:15:06.296 --> 00:15:08.466 A:middle
方法 近处像素

00:15:08.466 --> 00:15:11.056 A:middle
用红色着色 而远处的像素

00:15:11.056 --> 00:15:12.306 A:middle
用蓝色着色

00:15:12.886 --> 00:15:14.216 A:middle
在它们之间有一个

00:15:14.216 --> 00:15:16.426 A:middle
彩色光谱 因此你可以

00:15:16.776 --> 00:15:18.566 A:middle
看到深度图的纹理

00:15:20.156 --> 00:15:21.686 A:middle
同时还有黑色像素

00:15:22.156 --> 00:15:23.636 A:middle
是那些在深度图中的黑色小洞

00:15:24.286 --> 00:15:25.946 A:middle
对于这些像素 我们

00:15:25.946 --> 00:15:27.596 A:middle
没有任何深度的信息

00:15:28.456 --> 00:15:30.796 A:middle
今天 我们将发布一个

00:15:30.796 --> 00:15:32.936 A:middle
新的工具 一个示例 App

00:15:32.936 --> 00:15:34.676 A:middle
让你去探索这个流

00:15:34.676 --> 00:15:36.526 A:middle
我们称之为 TrueDepth Streamer

00:15:37.076 --> 00:15:40.716 A:middle
你可以在视频流和

00:15:40.716 --> 00:15:42.976 A:middle
TrueDepth 流之间切换

00:15:47.046 --> 00:15:48.716 A:middle
现在 由于 TrueDepth 相机

00:15:49.456 --> 00:15:51.936 A:middle
即使在完全黑暗的情况下

00:15:51.936 --> 00:15:53.676 A:middle
也具有主动照明

00:15:53.676 --> 00:15:56.966 A:middle
所以 TrueDepth 相机

00:15:56.966 --> 00:15:59.026 A:middle
仍然正常工作

00:16:01.716 --> 00:16:04.906 A:middle
所以 现在你可以看到我 现在你不行

00:16:05.516 --> 00:16:09.266 A:middle
[ 掌声 ]

00:16:09.766 --> 00:16:11.666 A:middle
那么如何将 TrueDepth 相机

00:16:11.666 --> 00:16:13.986 A:middle
中的数据流添加到你的 App 中

00:16:14.946 --> 00:16:17.526 A:middle
首先你需要做的是

00:16:17.986 --> 00:16:19.346 A:middle
找到 builtInTrueDepthCamera

00:16:19.346 --> 00:16:24.186 A:middle
然后初始化设备捕捉输入

00:16:24.186 --> 00:16:27.416 A:middle
然后你将 depthDataOutput

00:16:27.416 --> 00:16:28.766 A:middle
添加进你的会话类中

00:16:29.606 --> 00:16:32.826 A:middle
现在你可以开始进行会话类了

00:16:32.826 --> 00:16:33.706 A:middle
并且会在会话中

00:16:33.706 --> 00:16:35.266 A:middle
有着 TrueDepth 流

00:16:37.376 --> 00:16:39.286 A:middle
这些流有着两种

00:16:39.286 --> 00:16:42.166 A:middle
形式的数据视差和深度

00:16:42.846 --> 00:16:44.306 A:middle
视差数据是深度数据的

00:16:44.306 --> 00:16:46.586 A:middle
倒数 反之亦然

00:16:46.586 --> 00:16:47.396 A:middle
所以你应该选择哪个呢

00:16:48.666 --> 00:16:51.366 A:middle
良好的视差数据通常产生

00:16:51.366 --> 00:16:53.456 A:middle
更好的结果

00:16:53.456 --> 00:16:54.596 A:middle
特别是对于机器学习 App 来说

00:16:55.216 --> 00:16:56.646 A:middle
但深度数据在

00:16:56.646 --> 00:16:58.926 A:middle
实际测量方面具有更多意义

00:17:00.036 --> 00:17:01.666 A:middle
你需要知道 当你处理深度时

00:17:01.746 --> 00:17:05.935 A:middle
深度误差与深度的平方一致

00:17:06.036 --> 00:17:08.096 A:middle
这意味着一个 1 米远的

00:17:08.096 --> 00:17:09.685 A:middle
物体有着 4 倍于 2 米远

00:17:09.685 --> 00:17:11.976 A:middle
物体的深度精度

00:17:16.286 --> 00:17:18.496 A:middle
我们有视频流和深度流

00:17:18.496 --> 00:17:19.425 A:middle
它们不一定

00:17:19.425 --> 00:17:21.136 A:middle
分享相同的分辨率

00:17:21.646 --> 00:17:23.006 A:middle
TrueDepth 相机的原始分辨率

00:17:23.006 --> 00:17:24.596 A:middle
是 VGA 或者 640x480

00:17:24.596 --> 00:17:27.736 A:middle
你将会获得这种分辨率

00:17:27.736 --> 00:17:30.176 A:middle
如果你选择一个视频

00:17:30.656 --> 00:17:32.236 A:middle
以屏幕高宽比 4:3 的预设

00:17:33.226 --> 00:17:35.516 A:middle
但如果你选择 16x9 的屏幕高宽比

00:17:35.516 --> 00:17:40.246 A:middle
你将会得到 640x360 的深度图

00:17:40.966 --> 00:17:42.916 A:middle
在两种情况下 深度图

00:17:42.916 --> 00:17:44.856 A:middle
都将覆盖整个 RGB

00:17:45.146 --> 00:17:46.146 A:middle
图像的整个视野

00:17:46.666 --> 00:17:49.466 A:middle
现在我们讨论的是

00:17:49.466 --> 00:17:51.116 A:middle
视频 App 所以我们

00:17:51.116 --> 00:17:52.946 A:middle
要非常快速地处理大量数据

00:17:52.946 --> 00:17:54.956 A:middle
随着时间的推移 这可能

00:17:55.306 --> 00:17:57.266 A:middle
对系统产生压力

00:17:57.936 --> 00:17:59.696 A:middle
所以你可以测试你的 App

00:17:59.696 --> 00:18:01.306 A:middle
并测试你系统压力

00:17:59.696 --> 00:18:01.306 A:middle
并测试你系统压力

00:18:01.306 --> 00:18:04.006 A:middle
水平 从轻松

00:18:04.006 --> 00:18:07.056 A:middle
一般 负荷 超负荷 最后关机

00:18:07.476 --> 00:18:08.956 A:middle
而责任掌握在你的手中

00:18:08.956 --> 00:18:10.886 A:middle
因为系统会允许你一直测试

00:18:11.166 --> 00:18:12.326 A:middle
直至它最终关机

00:18:12.326 --> 00:18:15.206 A:middle
但是当这发生了

00:18:15.206 --> 00:18:17.326 A:middle
所有的捕捉设备也都将受损

00:18:17.726 --> 00:18:22.026 A:middle
另一件你可以做的事是

00:18:22.026 --> 00:18:24.006 A:middle
采用退化方案

00:18:24.006 --> 00:18:25.496 A:middle
如果压力水平变得严重

00:18:25.496 --> 00:18:27.206 A:middle
你可以将帧速率

00:18:27.206 --> 00:18:29.736 A:middle
降低到每秒 15 帧

00:18:29.736 --> 00:18:31.516 A:middle
或者你可以选择更复杂的方案

00:18:31.896 --> 00:18:33.966 A:middle
用更加柔和的退化方式

00:18:33.966 --> 00:18:37.356 A:middle
每当压力提升 把每秒帧数

00:18:37.356 --> 00:18:39.976 A:middle
从 30 24 20 一直降到 15

00:18:43.836 --> 00:18:45.026 A:middle
而且我们在深度图中有着

00:18:45.026 --> 00:18:46.406 A:middle
一些黑洞 我们可以做些什么呢

00:18:47.686 --> 00:18:49.456 A:middle
实际上你可以得到

00:18:49.456 --> 00:18:51.496 A:middle
一些已经过滤后的流

00:18:52.176 --> 00:18:53.936 A:middle
这是一个名为

00:18:53.936 --> 00:18:55.546 A:middle
isFilteringEnabled 的参数

00:18:55.546 --> 00:18:57.676 A:middle
默认为真  它意味着

00:18:57.676 --> 00:18:59.236 A:middle
你可以在空间和时间上

00:18:59.606 --> 00:19:01.576 A:middle
平滑地过滤

00:18:59.606 --> 00:19:01.576 A:middle
平滑地过滤

00:19:01.776 --> 00:19:03.536 A:middle
深度图 并从 RGB 图像

00:19:03.536 --> 00:19:04.356 A:middle
填充黑洞

00:19:05.466 --> 00:19:07.256 A:middle
这对于摄影和分割

00:19:07.256 --> 00:19:08.616 A:middle
App 非常有用

00:19:08.616 --> 00:19:10.206 A:middle
因为每次

00:19:10.446 --> 00:19:12.386 A:middle
查询像素时

00:19:12.386 --> 00:19:13.216 A:middle
都知道深度值

00:19:13.776 --> 00:19:17.376 A:middle
在 TrueDepth Streamer 中

00:19:17.376 --> 00:19:19.566 A:middle
你可以切换到滤镜流

00:19:19.566 --> 00:19:21.876 A:middle
从而查看它是否更平滑

00:19:21.876 --> 00:19:22.586 A:middle
并且黑孔被填充

00:19:23.126 --> 00:19:27.526 A:middle
这非常的好

00:19:27.526 --> 00:19:29.636 A:middle
但它不适用于所有的情况

00:19:30.226 --> 00:19:31.676 A:middle
如果你在处理点云

00:19:31.676 --> 00:19:34.606 A:middle
或者任何类型的

00:19:34.836 --> 00:19:36.256 A:middle
真实世界测量 你最好

00:19:36.256 --> 00:19:38.366 A:middle
保持原始数据

00:19:38.366 --> 00:19:39.806 A:middle
以保证最高的保真度

00:19:40.846 --> 00:19:42.726 A:middle
如果你这样做的话 你会得到黑洞

00:19:42.906 --> 00:19:44.496 A:middle
你会有像素被标记

00:19:44.496 --> 00:19:46.866 A:middle
为零 它并不意味它们

00:19:46.866 --> 00:19:48.396 A:middle
距离摄像机零米

00:19:48.396 --> 00:19:50.356 A:middle
的距离 它只意味着我们

00:19:50.356 --> 00:19:52.296 A:middle
没有关于它们的信息

00:19:53.336 --> 00:19:54.946 A:middle
因此 你需要注意如

00:19:55.116 --> 00:19:56.506 A:middle
求平均和

00:19:56.506 --> 00:19:57.606 A:middle
降采样的操作 因为你不希望

00:19:57.606 --> 00:20:00.976 A:middle
把真实值和这些零混合

00:19:57.606 --> 00:20:00.976 A:middle
把真实值和这些零混合

00:20:03.756 --> 00:20:04.996 A:middle
但是为什么我们会得到这些黑洞呢

00:20:05.536 --> 00:20:08.876 A:middle
TrueDepth 相机

00:20:09.296 --> 00:20:11.456 A:middle
可以探测大约 5 米

00:20:11.456 --> 00:20:14.056 A:middle
的物体 但并不是所有的

00:20:14.056 --> 00:20:15.296 A:middle
材料都是相同的

00:20:15.636 --> 00:20:17.496 A:middle
一些材料有着低反射率

00:20:17.716 --> 00:20:20.126 A:middle
它们吸收大部分的光线

00:20:21.476 --> 00:20:23.656 A:middle
例如 这种极端的情景

00:20:23.706 --> 00:20:26.046 A:middle
这是一块有着极低反射率的材料

00:20:26.046 --> 00:20:27.896 A:middle
看看当我一边远离它一边获得深度图时

00:20:27.896 --> 00:20:29.686 A:middle
一边获得深度图时

00:20:29.686 --> 00:20:31.766 A:middle
会发生什么

00:20:33.346 --> 00:20:35.066 A:middle
即使场景中存在

00:20:35.066 --> 00:20:37.466 A:middle
距离较远的物体

00:20:37.796 --> 00:20:39.866 A:middle
我们也可以在这块材料上看到

00:20:39.866 --> 00:20:41.436 A:middle
黑孔洞 这是因为它

00:20:42.026 --> 00:20:42.766 A:middle
吸收了大部分的光线

00:20:44.126 --> 00:20:45.446 A:middle
如果切换到滤镜流

00:20:45.446 --> 00:20:47.616 A:middle
并重复相同的

00:20:47.616 --> 00:20:49.246 A:middle
动作 那么这些黑孔洞会被填满

00:20:49.786 --> 00:20:53.336 A:middle
但是这不仅与反射回来的

00:20:53.336 --> 00:20:54.766 A:middle
光的数量有关

00:20:55.326 --> 00:20:56.916 A:middle
而且它也和反射

00:20:56.916 --> 00:20:58.056 A:middle
的方向相关

00:20:59.116 --> 00:21:01.036 A:middle
一些材料是镜面的

00:20:59.116 --> 00:21:01.036 A:middle
一些材料是镜面的

00:21:01.036 --> 00:21:02.826 A:middle
或是有光泽的

00:21:02.826 --> 00:21:04.166 A:middle
它们本身反射光的方向

00:21:04.166 --> 00:21:05.046 A:middle
就非常的挑剔

00:21:05.656 --> 00:21:08.406 A:middle
这有一个

00:21:08.406 --> 00:21:11.816 A:middle
极端的情况 你可以观看

00:21:11.816 --> 00:21:13.436 A:middle
视频流以查看反射

00:21:14.616 --> 00:21:15.746 A:middle
当我们切换到深度图时

00:21:15.746 --> 00:21:18.366 A:middle
黑孔的形成取决于

00:21:18.366 --> 00:21:20.246 A:middle
设备和屏幕之间的角度

00:21:21.556 --> 00:21:23.376 A:middle
因此如果我们切换到

00:21:23.376 --> 00:21:25.216 A:middle
滤镜流 这些黑孔洞将被填充

00:21:25.666 --> 00:21:26.976 A:middle
但是保真度会降低

00:21:31.046 --> 00:21:32.916 A:middle
另一个具有挑战性的场景

00:21:32.916 --> 00:21:35.306 A:middle
就是室外 通常在室外场景中

00:21:35.306 --> 00:21:36.996 A:middle
背景十分遥远

00:21:36.996 --> 00:21:38.736 A:middle
所以我们不希望从背景中

00:21:38.736 --> 00:21:39.806 A:middle
得到任何深度信息

00:21:40.456 --> 00:21:42.956 A:middle
同时 太阳光被视为

00:21:42.956 --> 00:21:44.906 A:middle
主动照明的影响因素

00:21:45.496 --> 00:21:48.696 A:middle
为了证明这个 我在一个

00:21:48.696 --> 00:21:50.006 A:middle
阳光非常明媚的下午

00:21:50.006 --> 00:21:51.556 A:middle
去了外面 把自己

00:21:51.556 --> 00:21:52.326 A:middle
置于阳光下

00:21:53.216 --> 00:21:54.286 A:middle
当我们切换到深度图时

00:21:54.286 --> 00:21:55.926 A:middle
你可以看到背景

00:21:55.926 --> 00:21:58.056 A:middle
没有任何深度数据

00:21:58.056 --> 00:21:59.786 A:middle
并且在框架的周围有着

00:21:59.786 --> 00:22:01.726 A:middle
一些黑孔洞

00:21:59.786 --> 00:22:01.726 A:middle
一些黑孔洞

00:22:01.726 --> 00:22:02.506 A:middle
特别是头发

00:22:03.476 --> 00:22:05.556 A:middle
但前景大部分深度数据

00:22:05.556 --> 00:22:07.696 A:middle
仍然完好无损

00:22:08.256 --> 00:22:12.436 A:middle
我想介绍的最后一点是

00:22:12.596 --> 00:22:14.616 A:middle
从 TrueDepth 相机的

00:22:14.616 --> 00:22:15.736 A:middle
角度来看

00:22:15.736 --> 00:22:17.516 A:middle
投影的光线

00:22:17.516 --> 00:22:19.396 A:middle
会在返回的路上

00:22:19.396 --> 00:22:21.306 A:middle
撞击到物体

00:22:21.306 --> 00:22:23.006 A:middle
所以我们会从

00:22:23.006 --> 00:22:26.096 A:middle
投影机和相机之间的视差中得到阴影

00:22:26.096 --> 00:22:27.316 A:middle
这个杯子的

00:22:27.316 --> 00:22:29.266 A:middle
右侧就是一个例子

00:22:30.176 --> 00:22:31.576 A:middle
但这里有些不同

00:22:32.676 --> 00:22:34.426 A:middle
这不是一个深度图

00:22:34.426 --> 00:22:36.916 A:middle
那我们为什么还会得到黑孔洞呢

00:22:37.096 --> 00:22:38.586 A:middle
在 TrueDepth Streamer 中

00:22:38.586 --> 00:22:41.076 A:middle
你可以从二维模式切换

00:22:41.076 --> 00:22:43.616 A:middle
到三维 从而为我们提供点云视图

00:22:44.326 --> 00:22:45.956 A:middle
有了点云我们可以

00:22:45.956 --> 00:22:47.426 A:middle
动态地改变

00:22:47.426 --> 00:22:48.936 A:middle
场景的视角

00:22:50.796 --> 00:22:53.506 A:middle
从而当我们这么做时

00:22:54.106 --> 00:22:56.256 A:middle
会产生更多黑孔洞

00:22:56.396 --> 00:22:58.226 A:middle
现在我可以问你的是

00:22:58.226 --> 00:23:01.706 A:middle
这杯子是半空的还是半满的

00:22:58.226 --> 00:23:01.706 A:middle
这杯子是半空的还是半满的

00:23:01.706 --> 00:23:03.826 A:middle
答案是我们不知道

00:23:05.256 --> 00:23:07.176 A:middle
通过虚拟地改变

00:23:07.176 --> 00:23:08.606 A:middle
相机的视角

00:23:08.606 --> 00:23:10.696 A:middle
我们不添加新的信息

00:23:10.696 --> 00:23:11.966 A:middle
这是因为 TrueDepth 相机

00:23:11.966 --> 00:23:13.656 A:middle
可以做很多事情

00:23:13.656 --> 00:23:17.726 A:middle
但是不包括将光线投射进杯子中

00:23:18.076 --> 00:23:18.786 A:middle
让我们来观看现场演示

00:23:21.516 --> 00:23:24.500 A:middle
[ 掌声 ]

00:23:32.046 --> 00:23:32.946 A:middle
所以我开始视频展示

00:23:32.946 --> 00:23:34.736 A:middle
并且我想让你关注于这个角落

00:23:35.636 --> 00:23:37.356 A:middle
观察发生了什么 当我

00:23:37.356 --> 00:23:38.456 A:middle
触摸屏幕 我将触碰我的

00:23:38.456 --> 00:23:39.636 A:middle
前景 你可以看到

00:23:39.636 --> 00:23:41.456 A:middle
深度的迹象

00:23:41.806 --> 00:23:44.466 A:middle
如果当我移动手机

00:23:44.466 --> 00:23:46.036 A:middle
你可以看到动态地变化

00:23:46.036 --> 00:23:47.606 A:middle
我可以办到此事的原因是

00:23:47.606 --> 00:23:50.206 A:middle
从 TrueDepth 相机

00:23:50.206 --> 00:23:51.346 A:middle
的流也在运行

00:23:51.346 --> 00:23:53.836 A:middle
你可以看到

00:23:53.836 --> 00:23:55.316 A:middle
它覆盖在视频上

00:23:55.316 --> 00:23:58.976 A:middle
所以我们有着每秒 30 帧的

00:23:58.976 --> 00:24:00.766 A:middle
实况流 并且我们可以

00:23:58.976 --> 00:24:00.766 A:middle
实况流 并且我们可以

00:24:00.766 --> 00:24:01.996 A:middle
切换到滤镜视频

00:24:02.456 --> 00:24:06.026 A:middle
然后使所有的黑孔洞都被填满

00:24:06.206 --> 00:24:07.446 A:middle
如果我切换到点云视图

00:24:07.446 --> 00:24:10.076 A:middle
我可以动态地改变

00:24:11.636 --> 00:24:13.296 A:middle
场景的视角

00:24:14.276 --> 00:24:15.516 A:middle
所以即使我直接

00:24:15.516 --> 00:24:17.786 A:middle
看着设备

00:24:17.786 --> 00:24:19.846 A:middle
它看起来像是有人从上面看我

00:24:21.336 --> 00:24:22.516 A:middle
我们称之为点云的原因是

00:24:22.516 --> 00:24:25.076 A:middle
如果我放大 你实际

00:24:25.076 --> 00:24:28.156 A:middle
可以看到三维空间中的点

00:24:28.686 --> 00:24:32.016 A:middle
但是在 WWDC 和你们在一起

00:24:32.466 --> 00:24:33.576 A:middle
我觉得我必须要

00:24:33.576 --> 00:24:36.306 A:middle
要让视角回到正常

00:24:39.516 --> 00:24:42.500 A:middle
[ 掌声 ]

00:24:45.076 --> 00:24:48.446 A:middle
谢谢 让我们看看点云

00:24:48.446 --> 00:24:49.306 A:middle
我们如何创造它们

00:24:50.126 --> 00:24:51.426 A:middle
我们从深度图开始

00:24:51.826 --> 00:24:54.236 A:middle
这是一个二维图像

00:24:54.716 --> 00:24:57.056 A:middle
其中深度 Z 是像素坐标 U 和 V 的函数

00:24:58.486 --> 00:25:00.076 A:middle
而且我们想要将它在

00:24:58.486 --> 00:25:00.076 A:middle
而且我们想要将它在

00:25:00.076 --> 00:25:01.586 A:middle
三维空间 X Y Z 中转为

00:25:01.586 --> 00:25:03.486 A:middle
新的坐标系

00:25:04.336 --> 00:25:06.256 A:middle
我们已经有了 Z

00:25:06.256 --> 00:25:07.616 A:middle
这是深度图的深度数据

00:25:07.616 --> 00:25:09.766 A:middle
但是我们想要获得 X 和 Y

00:25:10.416 --> 00:25:13.606 A:middle
因此 我们需要借助

00:25:13.606 --> 00:25:15.806 A:middle
内参矩阵的帮忙

00:25:15.806 --> 00:25:17.196 A:middle
该矩阵包含焦距

00:25:17.196 --> 00:25:18.346 A:middle
和主点信息

00:25:19.376 --> 00:25:21.686 A:middle
例如 我想要得到 X

00:25:21.686 --> 00:25:22.936 A:middle
我需要从像素坐标 U 开始

00:25:22.936 --> 00:25:24.506 A:middle
减去主元点 X0

00:25:24.506 --> 00:25:26.576 A:middle
乘以深度 Z

00:25:26.576 --> 00:25:28.916 A:middle
然后除以焦距 f

00:25:29.136 --> 00:25:30.416 A:middle
当然 我也需要对

00:25:30.416 --> 00:25:31.256 A:middle
另一个维度

00:25:31.256 --> 00:25:32.026 A:middle
做同样的计算

00:25:33.196 --> 00:25:36.976 A:middle
现在可以通过

00:25:36.976 --> 00:25:39.126 A:middle
相机校准数据访问内参矩阵

00:25:39.716 --> 00:25:43.656 A:middle
事实上 这个操作

00:25:44.786 --> 00:25:47.056 A:middle
是在 TrueDepth 中的每一帧中完成的

00:25:47.506 --> 00:25:49.836 A:middle
这么做的原因是

00:25:49.836 --> 00:25:51.656 A:middle
视频流和深度流

00:25:51.656 --> 00:25:54.506 A:middle
来自两个独立的摄像机

00:25:55.136 --> 00:25:57.246 A:middle
但是由于 TrueDepth 相机

00:25:57.246 --> 00:25:58.936 A:middle
为我们提供了一个深度图

00:25:58.936 --> 00:26:00.446 A:middle
所以我们可以将其转为点云

00:25:58.936 --> 00:26:00.446 A:middle
所以我们可以将其转为点云

00:26:00.876 --> 00:26:03.046 A:middle
并将其重新投影到

00:26:03.046 --> 00:26:06.306 A:middle
RGB 图像的视角

00:26:06.306 --> 00:26:07.756 A:middle
所以深度流已经

00:26:07.756 --> 00:26:10.076 A:middle
存在于视频流中

00:26:10.076 --> 00:26:13.556 A:middle
这样你就能获得 RGBD 数据

00:26:14.146 --> 00:26:15.916 A:middle
谢谢你们

00:26:16.496 --> 00:26:18.346 A:middle
这非常的酷

00:26:20.066 --> 00:26:21.526 A:middle
现在 这些类型的操作

00:26:21.626 --> 00:26:23.906 A:middle
最好在 Metal Graphic Shaders 中完成

00:26:24.226 --> 00:26:25.476 A:middle
并且你可以下载

00:26:25.476 --> 00:26:27.066 A:middle
TrueDepth Streamer 的代码

00:26:27.066 --> 00:26:28.666 A:middle
你要关注这两个方面

00:26:29.196 --> 00:26:32.286 A:middle
在 Vertex Shader 中

00:26:32.286 --> 00:26:33.296 A:middle
我们控制点的位置

00:26:33.486 --> 00:26:34.976 A:middle
我们将从深度图开始

00:26:35.126 --> 00:26:36.696 A:middle
并将其转换为真实世界

00:26:36.696 --> 00:26:37.986 A:middle
坐标或者 X Y Z

00:26:39.186 --> 00:26:40.796 A:middle
然后我们可以将它

00:26:40.796 --> 00:26:43.706 A:middle
与视图矩阵相乘 用来改变视角

00:26:44.336 --> 00:26:49.066 A:middle
在 Fragment Shader 中

00:26:49.066 --> 00:26:51.766 A:middle
我们将得到 Vertex 中的输出

00:26:51.766 --> 00:26:53.866 A:middle
但是我们必须检查它是否是真实值

00:26:54.096 --> 00:26:55.186 A:middle
或者是一个在深度图中的黑孔洞

00:26:56.026 --> 00:26:57.476 A:middle
如果它是一个黑孔洞 它被标记

00:26:57.476 --> 00:26:59.766 A:middle
为零并且我们不知道它的深度

00:26:59.766 --> 00:27:01.516 A:middle
所以我们无法将它转换到 X Y Z 坐标

00:26:59.766 --> 00:27:01.516 A:middle
所以我们无法将它转换到 X Y Z 坐标

00:27:01.516 --> 00:27:02.856 A:middle
因此我们要

00:27:02.856 --> 00:27:03.816 A:middle
抛弃这个点

00:27:05.196 --> 00:27:06.786 A:middle
如果它是一个真实值

00:27:06.786 --> 00:27:09.286 A:middle
我们可以采样 RGB 纹理

00:27:09.286 --> 00:27:11.366 A:middle
并为片段或者点

00:27:11.366 --> 00:27:14.746 A:middle
添加颜色

00:27:14.956 --> 00:27:17.356 A:middle
我明白这部分有点

00:27:17.356 --> 00:27:19.066 A:middle
技术性 并且你们

00:27:19.066 --> 00:27:20.276 A:middle
来自不同的专业背景

00:27:21.016 --> 00:27:22.876 A:middle
不用担心

00:27:22.876 --> 00:27:25.056 A:middle
我们为你提供 App

00:27:25.056 --> 00:27:26.756 A:middle
一款帮助你替换背景的 App

00:27:26.756 --> 00:27:40.926 A:middle
让我们看看它的实况

00:27:41.136 --> 00:27:43.516 A:middle
我可以将自己放在约塞米蒂国家公园

00:27:43.936 --> 00:27:46.466 A:middle
我可以把自己放在

00:27:46.466 --> 00:27:47.466 A:middle
更抽象的东西上

00:27:48.166 --> 00:27:51.466 A:middle
我甚至可以一路去

00:27:51.466 --> 00:27:53.006 A:middle
亚利桑那州的羚羊峡谷

00:27:53.006 --> 00:27:54.356 A:middle
上次花了我 15 个小时到达那里

00:27:54.356 --> 00:27:55.846 A:middle
现在我只要刷下屏幕就到达

00:27:55.846 --> 00:27:58.126 A:middle
节省了我一大笔的油钱

00:27:59.546 --> 00:28:02.016 A:middle
事实上 这个 App

00:27:59.546 --> 00:28:02.016 A:middle
事实上 这个 App

00:28:02.016 --> 00:28:04.116 A:middle
甚至可以将你放入

00:28:04.116 --> 00:28:05.876 A:middle
一个没有人可以听到你的空间

00:28:11.516 --> 00:28:15.616 A:middle
[ 掌声 ]

00:28:16.116 --> 00:28:19.036 A:middle
所以我们如何实现这些的

00:28:19.256 --> 00:28:21.586 A:middle
任何时候我们在处理

00:28:21.586 --> 00:28:23.706 A:middle
视频 App 时

00:28:23.706 --> 00:28:25.476 A:middle
都会根据每帧的情况进行

00:28:25.476 --> 00:28:28.456 A:middle
其它操作 在这种情况下

00:28:28.456 --> 00:28:31.696 A:middle
我们必须检测面部

00:28:31.696 --> 00:28:33.316 A:middle
从深度图建立一个全新的遮罩

00:28:33.316 --> 00:28:36.056 A:middle
将其平滑并升级为

00:28:36.056 --> 00:28:37.286 A:middle
RGB 分辨率

00:28:37.736 --> 00:28:39.246 A:middle
然后我们将这个前景

00:28:39.246 --> 00:28:41.536 A:middle
遮罩再次放大

00:28:41.536 --> 00:28:42.636 A:middle
直到低光背景图像

00:28:43.446 --> 00:28:44.616 A:middle
然后我们可以混合或者

00:28:44.646 --> 00:28:46.876 A:middle
组合它们 但是我们

00:28:46.876 --> 00:28:49.336 A:middle
可以做些什么来减少

00:28:49.416 --> 00:28:50.416 A:middle
一些复杂度

00:28:51.976 --> 00:28:54.466 A:middle
如果每次我们加载背景图像

00:28:54.466 --> 00:28:56.306 A:middle
我们只将其调整为

00:28:56.306 --> 00:28:57.756 A:middle
RGB 分辨率

00:28:57.756 --> 00:28:59.556 A:middle
而不是每帧一次

00:28:59.556 --> 00:29:01.446 A:middle
那么我们就不需要第二次放大

00:28:59.556 --> 00:29:01.446 A:middle
那么我们就不需要第二次放大

00:29:01.446 --> 00:29:02.926 A:middle
并且以低分辨率完成混合

00:29:02.926 --> 00:29:04.886 A:middle
这会产生很大的差异

00:29:06.276 --> 00:29:07.716 A:middle
所以让我们深入

00:29:07.716 --> 00:29:08.086 A:middle
这些深度数据

00:29:08.626 --> 00:29:10.606 A:middle
首先我们需要找到

00:29:10.606 --> 00:29:11.856 A:middle
脸部的中心

00:29:12.366 --> 00:29:14.406 A:middle
在 iOS 中 有很多方法

00:29:14.646 --> 00:29:16.386 A:middle
可以获得

00:29:16.386 --> 00:29:17.316 A:middle
脸部元素组

00:29:18.296 --> 00:29:19.246 A:middle
你可以使用 Core Image

00:29:19.246 --> 00:29:20.706 A:middle
的探测器 或者 Vision

00:29:20.706 --> 00:29:22.796 A:middle
Framework 但是在此情况下

00:29:22.976 --> 00:29:25.226 A:middle
因为我们只需要

00:29:25.226 --> 00:29:26.366 A:middle
脸部中间的像素

00:29:26.366 --> 00:29:29.056 A:middle
我们可以使用 AV 元数据对象 类型为脸

00:29:30.426 --> 00:29:32.896 A:middle
但它使我们成为 RGB 图像

00:29:32.896 --> 00:29:34.236 A:middle
编码系统的中心

00:29:34.236 --> 00:29:36.086 A:middle
我们需要将它

00:29:36.086 --> 00:29:38.196 A:middle
映射到可能不是一样分辨率的

00:29:38.196 --> 00:29:39.106 A:middle
深度图中

00:29:41.356 --> 00:29:43.316 A:middle
一旦我们获得了

00:29:43.316 --> 00:29:45.886 A:middle
人脸深度的值

00:29:45.886 --> 00:29:47.566 A:middle
我们就可以使用它加上 25 厘米特征的边距

00:29:47.566 --> 00:29:50.656 A:middle
来确定深度图的阈值

00:29:50.656 --> 00:29:52.306 A:middle
并创造一个二进制

00:29:52.306 --> 00:29:54.076 A:middle
掩码 前景为 1

00:29:54.476 --> 00:29:55.296 A:middle
背景为 0

00:29:56.556 --> 00:29:58.456 A:middle
事实上 我们可以在这里停下来

00:29:58.456 --> 00:30:00.956 A:middle
我们可以使用这个二进制掩码并创建效果

00:29:58.456 --> 00:30:00.956 A:middle
我们可以使用这个二进制掩码并创建效果

00:30:01.596 --> 00:30:02.816 A:middle
从背景到前景

00:30:02.816 --> 00:30:04.166 A:middle
的过度将非常的

00:30:04.166 --> 00:30:06.636 A:middle
尖锐 但我们会在边缘周围

00:30:06.636 --> 00:30:07.826 A:middle
得到一些差的数据

00:30:09.486 --> 00:30:10.856 A:middle
所以我们想要滤波一下

00:30:11.826 --> 00:30:14.156 A:middle
第一阶段将

00:30:14.156 --> 00:30:15.216 A:middle
使用从背景到前景

00:30:15.216 --> 00:30:16.346 A:middle
的一些平滑技术

00:30:16.346 --> 00:30:17.896 A:middle
在此情况 用高斯模糊

00:30:18.626 --> 00:30:20.446 A:middle
高斯模糊的半径

00:30:20.446 --> 00:30:22.716 A:middle
将决定转换的斜率

00:30:22.716 --> 00:30:25.096 A:middle
你可以使用该值

00:30:25.096 --> 00:30:28.526 A:middle
来获得不同的效果

00:30:29.426 --> 00:30:31.126 A:middle
另一个我们添加的处理阶段

00:30:31.346 --> 00:30:33.966 A:middle
是伽马调节 它允许我们

00:30:33.966 --> 00:30:35.286 A:middle
进一步微调

00:30:35.286 --> 00:30:36.976 A:middle
从背景到前景的这种转变

00:30:37.426 --> 00:30:39.386 A:middle
如果我们使用高于 1 的伽玛值

00:30:39.386 --> 00:30:41.576 A:middle
我们将获得

00:30:41.576 --> 00:30:43.156 A:middle
更窄的前景蒙板

00:30:44.176 --> 00:30:45.966 A:middle
另一方面

00:30:45.966 --> 00:30:47.526 A:middle
如果我们使用小于 1 的伽马值

00:30:47.526 --> 00:30:49.886 A:middle
我们将得到更宽的前景蒙版

00:30:49.886 --> 00:30:51.026 A:middle
也许会有一些光环

00:30:52.386 --> 00:30:53.646 A:middle
所以你可以通过

00:30:53.646 --> 00:30:56.286 A:middle
组合这两个参数来

00:30:56.446 --> 00:30:57.136 A:middle
创建不同的效果

00:30:57.556 --> 00:31:01.156 A:middle
如果你使用一个大的模糊半径

00:30:57.556 --> 00:31:01.156 A:middle
如果你使用一个大的模糊半径

00:31:01.366 --> 00:31:02.866 A:middle
和一个大的伽马值

00:31:02.866 --> 00:31:04.656 A:middle
你就创建了一种透明

00:31:04.656 --> 00:31:06.726 A:middle
的过度 让你看起来

00:31:06.726 --> 00:31:08.486 A:middle
好像是空间中的全息图

00:31:09.546 --> 00:31:10.706 A:middle
或者类似地 它可能是在

00:31:10.706 --> 00:31:13.336 A:middle
水下 你可以调整

00:31:13.336 --> 00:31:15.576 A:middle
这些数值来创造不同的效果

00:31:15.576 --> 00:31:17.936 A:middle
如果我保持大的半径

00:31:18.116 --> 00:31:19.766 A:middle
但将伽马值减小到

00:31:19.766 --> 00:31:22.186 A:middle
很低的值 我就会创造出围绕

00:31:22.186 --> 00:31:22.756 A:middle
在头上的光环

00:31:23.406 --> 00:31:24.376 A:middle
所以你可以用这个来

00:31:24.376 --> 00:31:27.586 A:middle
创造你自己的效果

00:31:27.586 --> 00:31:31.266 A:middle
我们如何实现这一点

00:31:31.466 --> 00:31:33.026 A:middle
在 Core Image 它非常的简单

00:31:33.026 --> 00:31:34.106 A:middle
直接 我们可以

00:31:34.106 --> 00:31:36.166 A:middle
把三个滤镜连接在一起

00:31:36.886 --> 00:31:38.516 A:middle
首先是用 CIGaussianBlur

00:31:39.866 --> 00:31:42.656 A:middle
然后添加 CIGammaAdjustment

00:31:42.656 --> 00:31:45.016 A:middle
再升级到 RGB 分辨率

00:31:46.616 --> 00:31:48.306 A:middle
但是 为了最好的实际操作

00:31:48.306 --> 00:31:49.756 A:middle
这里我想强调

00:31:49.756 --> 00:31:50.686 A:middle
一些小的方面

00:31:52.076 --> 00:31:54.176 A:middle
无论何时 你使用

00:31:54.176 --> 00:31:55.696 A:middle
一个基于高斯模糊

00:31:55.696 --> 00:31:57.436 A:middle
的卷积操作

00:31:57.436 --> 00:31:59.466 A:middle
最好的做法是从

00:31:59.466 --> 00:32:00.696 A:middle
clampedtoExtent 开始

00:31:59.466 --> 00:32:00.696 A:middle
clampedtoExtent 开始

00:32:01.856 --> 00:32:03.576 A:middle
通过向外重复

00:32:03.576 --> 00:32:06.446 A:middle
边界像素 我们可以确保

00:32:06.446 --> 00:32:07.566 A:middle
图像所有的边界

00:32:07.566 --> 00:32:10.996 A:middle
都被滤镜正确地处理

00:32:11.126 --> 00:32:13.236 A:middle
而且 在滤镜之后

00:32:13.236 --> 00:32:14.616 A:middle
和在升级分辨率之前

00:32:15.116 --> 00:32:16.286 A:middle
最好的操作是

00:32:16.286 --> 00:32:18.386 A:middle
修剪到原来的样子

00:32:18.886 --> 00:32:20.006 A:middle
因为这是我们真正

00:32:20.006 --> 00:32:21.496 A:middle
关心的图像中的部分

00:32:21.766 --> 00:32:25.816 A:middle
在这一点上 我们有

00:32:25.816 --> 00:32:27.766 A:middle
一个 alpha 前景蒙版

00:32:27.766 --> 00:32:29.096 A:middle
你可以使用它为

00:32:29.096 --> 00:32:30.246 A:middle
背景和前景创建

00:32:30.246 --> 00:32:31.336 A:middle
不同的效果

00:32:31.796 --> 00:32:33.646 A:middle
就像 Emmanuel 在上半场展示的一样

00:32:34.076 --> 00:32:39.266 A:middle
在 Backdrop 中 我们使用

00:32:39.266 --> 00:32:41.136 A:middle
从 TrueDepth 相机创建的

00:32:41.136 --> 00:32:43.186 A:middle
alpha 蒙版将 RGB 流

00:32:43.186 --> 00:32:45.016 A:middle
与加载的背景图像

00:32:45.016 --> 00:32:46.296 A:middle
融合在一行

00:32:46.296 --> 00:32:48.706 A:middle
Core Image 代码中

00:32:49.216 --> 00:32:50.236 A:middle
以创建此背景替换效果

00:32:53.996 --> 00:32:57.056 A:middle
所以这个 TrueDepth 相机

00:32:58.046 --> 00:32:59.416 A:middle
给了我们每秒 30 帧

00:32:59.416 --> 00:33:02.576 A:middle
640x480 分辨率的

00:32:59.416 --> 00:33:02.576 A:middle
640x480 分辨率的

00:33:02.576 --> 00:33:05.936 A:middle
深度图 并且它已经存在于视频流中

00:33:06.476 --> 00:33:09.496 A:middle
你可以使用它来

00:33:09.496 --> 00:33:10.776 A:middle
创建点云和动态地

00:33:10.776 --> 00:33:12.426 A:middle
改变场景的透视图

00:33:12.486 --> 00:33:16.066 A:middle
或者使用深度

00:33:16.336 --> 00:33:18.486 A:middle
滤镜来创造不同的视频效果

00:33:21.476 --> 00:33:22.986 A:middle
你可以访问网页并

00:33:22.986 --> 00:33:25.176 A:middle
下载 Jupiter Notebook

00:33:25.466 --> 00:33:28.576 A:middle
TrueDepth Streamer 和 Backdrop

00:33:29.246 --> 00:33:31.986 A:middle
我们希望它能激发你

00:33:31.986 --> 00:33:34.876 A:middle
在你的 App 中

00:33:34.876 --> 00:33:37.776 A:middle
加入许多新奇炫酷的视频效果

00:33:39.316 --> 00:33:41.156 A:middle
欢迎你们来 AVCapture 实验室

00:33:41.156 --> 00:33:42.976 A:middle
非常感谢你的支持 祝你有美好的一天

00:33:43.516 --> 00:33:46.500 A:middle
[ 掌声 ]
