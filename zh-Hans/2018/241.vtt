WEBVTT

00:00:18.085 --> 00:00:20.921 align:middle line:0
嗨 我是Conor Hughes
来自iOS辅助功能团队

00:00:20.988 --> 00:00:24.491 align:middle line:-2
今天我们来谈谈如何使iOS中
的拖放适用于辅助功能

00:00:24.892 --> 00:00:25.726 align:middle line:-1
我们开始吧

00:00:27.961 --> 00:00:29.963 align:middle line:-2
我们简要地提一下
下面要讨论的内容

00:00:30.764 --> 00:00:34.434 align:middle line:-2
首先简单复习一下
拖动和放置的基本要点

00:00:35.769 --> 00:00:39.706 align:middle line:-2
然后 我们会讲讲
辅助功能拖放API背后的概念

00:00:40.641 --> 00:00:42.176 align:middle line:-1
最后 我们将举两个例子

00:00:42.242 --> 00:00:45.779 align:middle line:-2
第一个
从辅助功能元素揭示出其祖先的拖动

00:00:46.413 --> 00:00:49.249 align:middle line:0
第二 从一个辅助功能元素中
揭示多个放置操作

00:00:50.984 --> 00:00:52.953 align:middle line:-1
简单来说

00:00:53.020 --> 00:00:56.256 align:middle line:-1
拖放技术始于iOS 11

00:00:56.323 --> 00:00:59.326 align:middle line:-1
它为我们的app的用户

00:00:59.660 --> 00:01:02.029 align:middle line:-1
提供了强大的数据传输功能

00:00:59.660 --> 00:01:02.029 align:middle line:-1
提供了强大的数据传输功能

00:01:02.095 --> 00:01:03.397 align:middle line:-1
适于app内部及app之间

00:01:04.631 --> 00:01:07.467 align:middle line:-1
拖放引入了互动的概念

00:01:07.734 --> 00:01:09.770 align:middle line:-1
它们由app中的视图主管

00:01:10.604 --> 00:01:12.005 align:middle line:-1
如果要从视图开始拖动

00:01:12.072 --> 00:01:14.741 align:middle line:-2
你为它添加一个
UIDrag互动对象

00:01:15.943 --> 00:01:18.745 align:middle line:-2
要接受放置
则添加UIDrop互动

00:01:19.680 --> 00:01:21.415 align:middle line:-1
如果你不熟悉这些类

00:01:21.481 --> 00:01:23.884 align:middle line:-2
j建议你先看看2017年
WWDC的专题

00:01:23.951 --> 00:01:26.820 align:middle line:-1
“拖放会话简介”来了解一下

00:01:27.154 --> 00:01:28.422 align:middle line:-1
然后再回到这个视频

00:01:31.058 --> 00:01:32.693 align:middle line:-1
现在我们开始讨论辅助功能

00:01:33.060 --> 00:01:35.028 align:middle line:-2
很自然地
我们想通过辅助功能技术

00:01:35.095 --> 00:01:38.165 align:middle line:-2
如旁白
向你的app的用户显示

00:01:38.232 --> 00:01:40.033 align:middle line:-1
拖放互动的强大功能

00:01:41.835 --> 00:01:45.372 align:middle line:-1
辅助功能拖放API的设计中

00:01:45.439 --> 00:01:46.440 align:middle line:-1
重点解决几个特定的问题

00:01:47.407 --> 00:01:51.178 align:middle line:-2
首先 你的辅助功能元素
未必直接管互动

00:01:51.778 --> 00:01:54.114 align:middle line:-1
例如 辅助功能元素可能是一个视图

00:01:54.181 --> 00:01:56.717 align:middle line:-1
它的子视图主管互动

00:01:57.518 --> 00:02:00.320 align:middle line:-1
或者你的元素可能继承了一个视图

00:01:57.518 --> 00:02:00.320 align:middle line:-1
或者你的元素可能继承了一个视图

00:02:00.387 --> 00:02:02.723 align:middle line:-1
而这个视图主管与其逻辑相关的互动

00:02:03.857 --> 00:02:06.994 align:middle line:-2
解决这些问题的办法
是辅助功能拖放API

00:02:07.060 --> 00:02:10.497 align:middle line:-1
允许指定系统中的逻辑拖放

00:02:10.997 --> 00:02:13.734 align:middle line:-1
使其可与辅助技术一起使用

00:02:14.501 --> 00:02:15.869 align:middle line:-1
我们具体看看这些API

00:02:17.738 --> 00:02:19.706 align:middle line:-2
UIAccessibilityDragging
非正式协议

00:02:19.773 --> 00:02:21.108 align:middle line:-1
定义了两个属性

00:02:21.175 --> 00:02:23.210 align:middle line:-1
来向辅助功能表达拖放

00:02:23.944 --> 00:02:27.447 align:middle line:-2
它引入了“拖动源”
和“放置点”的概念

00:02:28.549 --> 00:02:31.051 align:middle line:-1
拖动源描述从哪里开始

00:02:31.118 --> 00:02:32.519 align:middle line:-1
与元素关联的拖动

00:02:33.020 --> 00:02:36.023 align:middle line:-1
放置点则描述与元素相关联的

00:02:36.089 --> 00:02:37.324 align:middle line:-1
可以放置的地方

00:02:37.891 --> 00:02:39.693 align:middle line:-2
要使用这些属性
可以给它们赋值

00:02:39.760 --> 00:02:42.095 align:middle line:-1
或重写getter来临时提供数据

00:02:44.164 --> 00:02:47.367 align:middle line:-1
这些拖放呈现给辅助技术用户的方式

00:02:47.434 --> 00:02:50.437 align:middle line:-1
与辅助自定义操作非常相似

00:02:51.238 --> 00:02:52.339 align:middle line:0
这即辅助功能拖放API

00:02:55.876 --> 00:02:58.579 align:middle line:-1
通常 拖动和放置会由系统

00:02:58.645 --> 00:03:00.214 align:middle line:-1
自动呈现给辅助功能

00:02:58.645 --> 00:03:00.214 align:middle line:-1
自动呈现给辅助功能

00:03:01.715 --> 00:03:05.252 align:middle line:-2
如果它们被自动找到
它们将被分配一个默认名称

00:03:05.919 --> 00:03:09.189 align:middle line:-2
但请注意
只有元素子树中的互动

00:03:09.256 --> 00:03:10.724 align:middle line:-1
会自动呈现

00:03:12.025 --> 00:03:13.861 align:middle line:-1
UIAccessibilityDragging协议

00:03:13.927 --> 00:03:17.264 align:middle line:-1
允许你准确揭示你需要的互动

00:03:17.698 --> 00:03:20.000 align:middle line:-1
无论它们是否存在于视图的结构中

00:03:20.934 --> 00:03:23.403 align:middle line:-1
允许为每个互动指定一个好名字

00:03:24.805 --> 00:03:26.940 align:middle line:-1
所以 你应该考虑实现它

00:03:27.207 --> 00:03:30.077 align:middle line:-2
通过辅助技术
为你的app的用户

00:03:30.143 --> 00:03:31.478 align:middle line:-1
提供最佳体验

00:03:33.814 --> 00:03:36.517 align:middle line:-1
现在我们来看一个例子

00:03:36.583 --> 00:03:39.286 align:middle line:-2
看看如何用UIAccessibilityDragging协议
呈现拖动

00:03:41.054 --> 00:03:42.890 align:middle line:-1
假设我们要建一个条形图

00:03:43.223 --> 00:03:47.361 align:middle line:-2
我们决定通过设置
CALayer对象来绘制条形图

00:03:48.562 --> 00:03:52.499 align:middle line:-1
我们将尝试启用对条形的拖动

00:03:52.566 --> 00:03:53.700 align:middle line:-1
以拖动它的数据

00:03:55.836 --> 00:03:57.538 align:middle line:0
这个例子说明了一个实现过程

00:03:57.604 --> 00:04:00.941 align:middle line:0
重复一下
每个条形都是CALayer对象

00:03:57.604 --> 00:04:00.941 align:middle line:0
重复一下
每个条形都是CALayer对象

00:04:02.376 --> 00:04:05.312 align:middle line:0
我们将如何去实现这个拖动？

00:04:07.414 --> 00:04:08.782 align:middle line:-1
像这样

00:04:10.317 --> 00:04:14.121 align:middle line:-2
注意 因为图层不是视图
无法主管互动

00:04:14.188 --> 00:04:17.190 align:middle line:-1
所以条形图本身设置了互动

00:04:17.658 --> 00:04:20.226 align:middle line:-2
在这个itemsForBeginning
会话中回调时

00:04:22.095 --> 00:04:23.997 align:middle line:-1
取决于被命中的条形图

00:04:24.865 --> 00:04:28.001 align:middle line:-1
我们在拖动项目中返回不同的数据

00:04:29.136 --> 00:04:31.738 align:middle line:-1
注意 虽然我只有一个拖动互动

00:04:31.805 --> 00:04:34.608 align:middle line:-1
我用它来支持多个逻辑拖动

00:04:35.209 --> 00:04:38.412 align:middle line:-1
这是一个完全支持的方法

00:04:38.478 --> 00:04:41.215 align:middle line:-1
也体现了基本拖放API的强大功能

00:04:43.317 --> 00:04:44.952 align:middle line:-1
那怎么加上辅助功能？

00:04:45.953 --> 00:04:48.222 align:middle line:-2
一个办法是
让每个栏作为辅助功能元素公开

00:04:49.256 --> 00:04:52.926 align:middle line:-1
从而使图表有辅助功能

00:04:53.894 --> 00:04:54.795 align:middle line:-1
就像这样

00:04:55.696 --> 00:04:58.065 align:middle line:-1
请注意 我在这里做的是

00:04:58.131 --> 00:05:00.801 align:middle line:-1
把我的app内容的逻辑结构数据

00:04:58.131 --> 00:05:00.801 align:middle line:-1
把我的app内容的逻辑结构数据

00:05:00.868 --> 00:05:02.369 align:middle line:-1
提供给辅助功能运行时间

00:05:02.936 --> 00:05:06.707 align:middle line:-1
促成辅助技术以不同的方式呈现内容

00:05:07.774 --> 00:05:10.244 align:middle line:-2
我们需要做同样的事情
来使拖动具辅助功能

00:05:10.777 --> 00:05:13.113 align:middle line:-2
为此 我们需要对
UIAccessibilityDragging非正式协议

00:05:13.180 --> 00:05:15.983 align:middle line:-1
了解一些更具体的细节

00:05:18.151 --> 00:05:19.520 align:middle line:-1
首先我们来看看

00:05:19.586 --> 00:05:21.388 align:middle line:-2
UIAccessibility
LocationDescriptor类

00:05:23.657 --> 00:05:26.326 align:middle line:-1
这个类描述一个互动

00:05:26.393 --> 00:05:29.062 align:middle line:-1
通过指定一个点

00:05:30.464 --> 00:05:31.532 align:middle line:-1
在视图中

00:05:32.833 --> 00:05:34.067 align:middle line:-1
并有特定的名称

00:05:34.835 --> 00:05:37.638 align:middle line:0
因此对于我们的条形图中的一个例子

00:05:38.705 --> 00:05:42.042 align:middle line:0
拖动条形的位置描述符

00:05:42.509 --> 00:05:43.610 align:middle line:0
可能看起来像这样

00:05:43.677 --> 00:05:45.679 align:middle line:0
可以给它命名为
“Drag Bar Data”

00:05:46.146 --> 00:05:48.482 align:middle line:0
视图就是条形图视图本身

00:05:48.549 --> 00:05:51.018 align:middle line:0
这个点则是位于条形内的一个点

00:05:54.087 --> 00:05:54.922 align:middle line:0
那么 我们如何处理

00:05:54.988 --> 00:05:56.990 align:middle line:0
UIAccessibility
LocationDescriptor对象？

00:05:58.058 --> 00:06:00.661 align:middle line:0
我们将它们赋给前面提到的两个属性

00:05:58.058 --> 00:06:00.661 align:middle line:0
我们将它们赋给前面提到的两个属性

00:06:02.396 --> 00:06:03.830 align:middle line:-1
协议中的两个属性是

00:06:03.897 --> 00:06:05.766 align:middle line:-2
accessibilityDrag
SourceDescriptors

00:06:05.832 --> 00:06:07.768 align:middle line:-2
和accessibilityDrop
PointDescriptors

00:06:09.570 --> 00:06:12.773 align:middle line:-1
DragSourceDescriptors用于显示

00:06:12.840 --> 00:06:14.808 align:middle line:-1
在逻辑上与元素相关联的拖动源

00:06:15.175 --> 00:06:18.712 align:middle line:-1
DropPointDescriptors则显示

00:06:18.779 --> 00:06:20.380 align:middle line:-1
逻辑上与元素相关联的放置位置

00:06:21.315 --> 00:06:23.984 align:middle line:-1
这些属性告诉辅助功能

00:06:24.051 --> 00:06:27.254 align:middle line:-2
一个给定的元素
什么可以拖 什么可以放

00:06:29.089 --> 00:06:31.391 align:middle line:-1
要注意的一点是描述符

00:06:31.458 --> 00:06:34.361 align:middle line:-1
必须引用实际有互动的视图

00:06:34.795 --> 00:06:37.731 align:middle line:-1
所以 你不应该引用窗口中

00:06:37.798 --> 00:06:40.467 align:middle line:-1
在主管互动的视图中的一个点

00:06:40.534 --> 00:06:42.102 align:middle line:-1
而是指定该视图本身

00:06:45.138 --> 00:06:48.208 align:middle line:-2
总之
从某个元素中呈现单个拖动

00:06:48.275 --> 00:06:49.977 align:middle line:-1
根本不需要几行代码

00:06:50.043 --> 00:06:52.145 align:middle line:-2
你通过在主管互动的视图中
指定一个点

00:06:52.212 --> 00:06:54.848 align:middle line:-1
建一个指定该拖动的描述符

00:06:54.915 --> 00:06:55.949 align:middle line:-1
并给它一个名字即可

00:06:56.383 --> 00:06:57.217 align:middle line:-1
然后设置元素的

00:06:57.284 --> 00:07:00.153 align:middle line:-2
accessibilityDrag
SourceDescriptors属性

00:06:57.284 --> 00:07:00.153 align:middle line:-2
accessibilityDrag
SourceDescriptors属性

00:07:00.220 --> 00:07:02.055 align:middle line:-1
加到包含该描述符的数组中

00:07:04.558 --> 00:07:06.026 align:middle line:-1
我们回到我们的条形图例子

00:07:06.093 --> 00:07:08.462 align:middle line:-1
设置视图辅助功能元素的代码

00:07:08.829 --> 00:07:11.298 align:middle line:-1
如何来呈现每个元素的拖动？

00:07:14.368 --> 00:07:17.171 align:middle line:-1
我们在视图的坐标空间中

00:07:17.604 --> 00:07:19.273 align:middle line:-1
计算该元素所表示的条内的点

00:07:20.073 --> 00:07:22.643 align:middle line:-1
用视图中的点建适当的描述符

00:07:23.243 --> 00:07:25.679 align:middle line:-1
并设置该元素的

00:07:25.746 --> 00:07:26.647 align:middle line:-2
accessibilityDrag
SourceDescriptors 属性

00:07:26.713 --> 00:07:27.648 align:middle line:-1
完成了

00:07:30.450 --> 00:07:32.119 align:middle line:-1
现在 我们看一个稍微不同的例子

00:07:32.719 --> 00:07:35.455 align:middle line:-1
让我们尝试从单个元素呈现多个放置

00:07:36.657 --> 00:07:39.726 align:middle line:-1
这可能对像名片这样的情况有用

00:07:40.260 --> 00:07:41.762 align:middle line:-1
它的特点是名片足够小

00:07:43.163 --> 00:07:47.334 align:middle line:-2
我们将把它作为一个元素
呈现给辅助功能

00:07:47.868 --> 00:07:49.770 align:middle line:-1
但名片内有多个井点

00:07:49.837 --> 00:07:52.806 align:middle line:-1
我们可以将内容投入其中

00:07:54.541 --> 00:07:56.510 align:middle line:0
例如 它可能有一个地方放肖像

00:07:56.877 --> 00:08:00.647 align:middle line:0
和一个可以投入
该联系人的任意附件的空间

00:07:56.877 --> 00:08:00.647 align:middle line:0
和一个可以投入
该联系人的任意附件的空间

00:08:02.883 --> 00:08:03.817 align:middle line:0
现在我们了解了

00:08:03.884 --> 00:08:06.220 align:middle line:0
UIAccessibilityDragging非正式协议

00:08:06.286 --> 00:08:07.821 align:middle line:0
呈现这些就很简单了

00:08:10.357 --> 00:08:11.225 align:middle line:-1
我们可以重写视图的

00:08:11.291 --> 00:08:13.961 align:middle line:-2
accessibilityDrop
PointDescriptors getter

00:08:16.096 --> 00:08:18.198 align:middle line:-1
计算两个井点的中点

00:08:18.999 --> 00:08:22.169 align:middle line:-2
然后返回以每个放置点为名的
两个位置描述符

00:08:24.638 --> 00:08:28.342 align:middle line:-1
总之 因为你希望人人都能够用所有

00:08:28.408 --> 00:08:31.245 align:middle line:-1
你建到你的app中的酷炫的功能

00:08:32.813 --> 00:08:33.847 align:middle line:-1
你想确保

00:08:33.914 --> 00:08:36.149 align:middle line:-2
与你的app中
辅助功能元素相关联的拖放

00:08:36.216 --> 00:08:38.085 align:middle line:-1
能呈现给辅助功能技术

00:08:38.952 --> 00:08:39.886 align:middle line:-1
为此 用

00:08:39.953 --> 00:08:42.389 align:middle line:-2
accessibilityDrag
SourceDescriptors属性

00:08:42.456 --> 00:08:44.491 align:middle line:-1
来指定应该呈现哪些拖动

00:08:45.359 --> 00:08:47.728 align:middle line:-2
用accessibilityDrop
PointDescriptors属性

00:08:48.161 --> 00:08:49.897 align:middle line:-1
来指定应该呈现哪些放置

00:08:50.497 --> 00:08:52.366 align:middle line:-1
最后 这些属性只是一些数组

00:08:52.432 --> 00:08:53.267 align:middle line:-1
组成数组的成员是

00:08:53.333 --> 00:08:55.002 align:middle line:-2
UIAccessibility
LocationDescriptor对象

00:08:55.335 --> 00:08:56.803 align:middle line:-1
这些对象为辅助功能描述了

00:08:57.137 --> 00:08:59.773 align:middle line:-1
你的app中有哪些拖动和放置

00:09:00.107 --> 00:09:01.241 align:middle line:-1
以及如何激活它们

00:09:02.976 --> 00:09:05.245 align:middle line:-2
要了解更多信息
你可以在线查看这个视频

00:09:06.180 --> 00:09:07.247 align:middle line:-1
感谢你的收看
