WEBVTT

00:00:07.516 --> 00:00:15.500 A:middle
[ 音乐 ]

00:00:17.516 --> 00:00:20.976 A:middle
[ 掌声 ]

00:00:21.476 --> 00:00:24.166 A:middle
&gt;&gt; 大家好 欢迎大家

00:00:25.086 --> 00:00:26.766 A:middle
我是 Betim Deva

00:00:26.766 --> 00:00:28.216 A:middle
Apple Music 团队的工程师

00:00:28.256 --> 00:00:30.336 A:middle
在此我激动地与你们分享

00:00:30.336 --> 00:00:32.266 A:middle
我们对 MusicKit

00:00:32.266 --> 00:00:33.296 A:middle
所作的一些更新

00:00:35.106 --> 00:00:36.566 A:middle
MusicKit 发布于去年

00:00:36.566 --> 00:00:38.626 A:middle
它使得开发者

00:00:38.626 --> 00:00:41.366 A:middle
可以在自己的 App 中

00:00:41.366 --> 00:00:43.556 A:middle
实现定制化的音乐体验

00:00:44.476 --> 00:00:46.476 A:middle
今年 我们要介绍的是

00:00:46.476 --> 00:00:48.796 A:middle
网页端 Apple Music

00:00:48.796 --> 00:00:50.486 A:middle
将使你能够在你的网站上

00:00:50.486 --> 00:00:53.586 A:middle
实现同样的音乐体验

00:00:54.766 --> 00:00:56.856 A:middle
我们准备好了一个很棒的网页播放器

00:00:56.856 --> 00:00:58.916 A:middle
方便你嵌入使用

00:00:58.916 --> 00:01:00.796 A:middle
而我们即将登场的网页端 MusicKit

00:00:58.916 --> 00:01:00.796 A:middle
而我们即将登场的网页端 MusicKit

00:01:00.796 --> 00:01:02.976 A:middle
能够把 Apple Music

00:01:03.046 --> 00:01:06.456 A:middle
整合在你的网站中

00:01:07.066 --> 00:01:09.006 A:middle
我们过一小会再讨论

00:01:09.006 --> 00:01:10.546 A:middle
网页端 Apple Music

00:01:10.546 --> 00:01:12.566 A:middle
但是首先让我们看一看

00:01:12.566 --> 00:01:14.736 A:middle
MusicKit 上的一些令人激动的更新

00:01:15.256 --> 00:01:18.906 A:middle
我们非常欣喜地看到

00:01:18.906 --> 00:01:20.816 A:middle
App 开发者以不同的方式

00:01:21.196 --> 00:01:23.466 A:middle
将 Apple Music 结合到他们的 App 里

00:01:24.026 --> 00:01:27.026 A:middle
例如 我们都熟知并喜欢

00:01:27.026 --> 00:01:29.986 A:middle
用 musical.ly 来制作音乐视频

00:01:30.636 --> 00:01:32.086 A:middle
当你在这个 App 中发现一首新歌

00:01:32.086 --> 00:01:34.586 A:middle
你可以很容易将它加入播放列表

00:01:36.216 --> 00:01:38.726 A:middle
Houdini 使得加入 Apple Music

00:01:38.726 --> 00:01:39.716 A:middle
更加简单

00:01:40.306 --> 00:01:42.366 A:middle
它可以把你的播放列表

00:01:42.366 --> 00:01:44.336 A:middle
转移到 Apple Music 中

00:01:45.716 --> 00:01:48.166 A:middle
Stationhead 可以把你的

00:01:48.166 --> 00:01:50.596 A:middle
播放列表变成电台

00:01:50.976 --> 00:01:53.126 A:middle
它可以将你的音乐和声音

00:01:53.126 --> 00:01:56.046 A:middle
广播到全世界

00:01:57.556 --> 00:02:00.536 A:middle
最后 Ola 是全印度最大的

00:01:57.556 --> 00:02:00.536 A:middle
最后 Ola 是全印度最大的

00:02:00.536 --> 00:02:02.286 A:middle
网约车服务

00:02:03.106 --> 00:02:04.296 A:middle
我们一直在与他们合作

00:02:04.296 --> 00:02:06.466 A:middle
将 Apple Music 体验

00:02:06.466 --> 00:02:09.256 A:middle
加入到他们的车队中

00:02:10.876 --> 00:02:13.406 A:middle
自从去年 MusicKit 发布以来

00:02:13.406 --> 00:02:15.466 A:middle
我们收到了大量的反馈

00:02:15.466 --> 00:02:18.276 A:middle
希望我们提供

00:02:18.276 --> 00:02:20.406 A:middle
能够利用 ISRC

00:02:20.406 --> 00:02:22.926 A:middle
也就是国际标准音像制品编码

00:02:22.926 --> 00:02:24.796 A:middle
来搜索内容的功能

00:02:24.846 --> 00:02:28.336 A:middle
在此我高兴地宣布

00:02:28.336 --> 00:02:30.156 A:middle
我们已经加入了这项功能

00:02:30.156 --> 00:02:31.986 A:middle
它能够精确地把

00:02:32.246 --> 00:02:35.296 A:middle
Apple Music 目录

00:02:35.296 --> 00:02:37.066 A:middle
与几乎任何其他来源的

00:02:37.066 --> 00:02:38.916 A:middle
歌曲与音乐视频进行匹配

00:02:40.596 --> 00:02:43.036 A:middle
另一项对 MusicKit 的改进

00:02:43.626 --> 00:02:46.686 A:middle
是增加了 iCloud 音乐资料库 API

00:02:48.096 --> 00:02:50.026 A:middle
只要用户向你的 App

00:02:50.026 --> 00:02:52.736 A:middle
提供授权

00:02:52.736 --> 00:02:54.396 A:middle
他们就可以以各种方式

00:02:54.756 --> 00:02:56.486 A:middle
在你的 App 里直接与

00:02:56.486 --> 00:02:59.206 A:middle
他们的音乐资料库互动

00:03:00.676 --> 00:03:03.966 A:middle
这些 API 使你的用户

00:03:03.966 --> 00:03:08.176 A:middle
可以浏览 搜索 添加内容

00:03:08.176 --> 00:03:09.506 A:middle
到他们的音乐资料库

00:03:10.816 --> 00:03:12.246 A:middle
你还可以让你的用户

00:03:12.246 --> 00:03:14.506 A:middle
创建播放列表

00:03:14.976 --> 00:03:16.736 A:middle
或是将歌曲添加到已创建的播放列表

00:03:16.776 --> 00:03:20.000 A:middle
这一切在你的 App 内就能完成

00:03:24.256 --> 00:03:26.146 A:middle
去年我们带来了一些

00:03:26.146 --> 00:03:28.366 A:middle
针对目录的 Apple Music API

00:03:29.576 --> 00:03:32.366 A:middle
今年我们新增了

00:03:32.366 --> 00:03:33.876 A:middle
iCloud 音乐资料库的 API

00:03:34.476 --> 00:03:35.906 A:middle
我们认为这是一组不错的

00:03:35.906 --> 00:03:37.276 A:middle
音乐 API

00:03:38.266 --> 00:03:40.196 A:middle
如果你一直在使用我们的

00:03:40.196 --> 00:03:42.576 A:middle
现有的 iTunes Search API

00:03:42.616 --> 00:03:44.916 A:middle
我们希望现在你能转移到

00:03:44.916 --> 00:03:48.126 A:middle
Apple Music API

00:03:48.356 --> 00:03:50.246 A:middle
现在我要请

00:03:50.246 --> 00:03:52.466 A:middle
我的同事 DJ 上台

00:03:52.466 --> 00:03:54.216 A:middle
给大家谈一谈网页端 Apple Music

00:03:54.716 --> 00:03:55.126 A:middle
谢谢

00:03:56.516 --> 00:04:00.836 A:middle
[ 掌声 ]

00:03:56.516 --> 00:04:00.836 A:middle
[ 掌声 ]

00:04:01.336 --> 00:04:01.846 A:middle
&gt;&gt; 谢谢 Betim

00:04:03.256 --> 00:04:04.396 A:middle
今年 我们怀着激动的心情

00:04:04.396 --> 00:04:05.676 A:middle
发布网页端 MusicKit

00:04:06.476 --> 00:04:08.306 A:middle
去年 我们讨论了

00:04:08.346 --> 00:04:09.686 A:middle
将 Apple Music 加入你的 iOS App 的

00:04:09.686 --> 00:04:11.236 A:middle
各种方法

00:04:12.166 --> 00:04:13.186 A:middle
今年 我们将给网页端

00:04:13.186 --> 00:04:14.786 A:middle
带来同样强大的功能

00:04:16.456 --> 00:04:17.435 A:middle
那么 让我们来谈谈

00:04:17.435 --> 00:04:21.906 A:middle
网页端 MusicKit 的组成部分

00:04:22.106 --> 00:04:23.416 A:middle
去年 我们添加了

00:04:23.416 --> 00:04:24.906 A:middle
REST API 用来访问

00:04:24.906 --> 00:04:26.496 A:middle
整个 Apple Music 目录

00:04:27.056 --> 00:04:28.646 A:middle
今年 正如 Betim 提到过的

00:04:29.286 --> 00:04:30.526 A:middle
我们将会发布对 REST API

00:04:30.526 --> 00:04:32.006 A:middle
进行补充

00:04:32.006 --> 00:04:33.786 A:middle
允许已登录用户访问

00:04:33.786 --> 00:04:34.766 A:middle
iCloud 音乐资料库

00:04:36.276 --> 00:04:37.386 A:middle
同时我们会发布

00:04:37.386 --> 00:04:38.936 A:middle
MusicKit JS 库

00:04:39.606 --> 00:04:41.766 A:middle
它能让你轻松地在浏览器上

00:04:41.766 --> 00:04:42.816 A:middle
使用两个 REST API

00:04:42.816 --> 00:04:46.296 A:middle
并允许你的用户

00:04:46.296 --> 00:04:47.486 A:middle
仅使用浏览器

00:04:47.486 --> 00:04:49.266 A:middle
就能完整地播放歌曲

00:04:49.266 --> 00:04:51.026 A:middle
无论歌曲位于 Apple Music 目录上

00:04:51.026 --> 00:04:52.756 A:middle
还是位于 iCloud 音乐资料库里

00:04:56.616 --> 00:04:58.206 A:middle
在我们深入研究 MusicKit JS 之前

00:04:58.206 --> 00:04:59.906 A:middle
我想向你们展示

00:04:59.906 --> 00:05:00.876 A:middle
Apple Music 网页播放器

00:04:59.906 --> 00:05:00.876 A:middle
Apple Music 网页播放器

00:05:02.836 --> 00:05:04.646 A:middle
几星期前 我们发布了一个

00:05:04.646 --> 00:05:05.616 A:middle
新的可嵌入式播放器

00:05:06.586 --> 00:05:08.306 A:middle
它在桌面和移动端的浏览器上

00:05:08.306 --> 00:05:10.176 A:middle
运行得都很好

00:05:11.996 --> 00:05:13.496 A:middle
这些可嵌入式播放器

00:05:13.496 --> 00:05:15.016 A:middle
让你能很轻松地

00:05:15.016 --> 00:05:16.186 A:middle
在自己的网站上

00:05:16.186 --> 00:05:18.246 A:middle
完整播放 Apple Music 目录中的歌曲

00:05:18.506 --> 00:05:20.986 A:middle
我们的播放器支持

00:05:20.986 --> 00:05:23.176 A:middle
单曲 专辑或是整个播放列表

00:05:24.496 --> 00:05:26.346 A:middle
你可以在 Apple Music 预览页面

00:05:26.346 --> 00:05:28.636 A:middle
或是可嵌入式播放器自身上面

00:05:28.636 --> 00:05:30.236 A:middle
找到嵌入代码

00:05:31.316 --> 00:05:32.816 A:middle
你所需做的仅仅是将它

00:05:32.816 --> 00:05:34.156 A:middle
拷贝并粘贴到你的网站上

00:05:34.156 --> 00:05:36.116 A:middle
这些可嵌入式播放器

00:05:36.116 --> 00:05:38.526 A:middle
非常适合用来在第三方网站上

00:05:38.526 --> 00:05:40.036 A:middle
播放完整的歌曲

00:05:40.036 --> 00:05:41.466 A:middle
同时 我们也把这个功能

00:05:41.466 --> 00:05:43.026 A:middle
做到了 Apple Music 预览页面上

00:05:43.596 --> 00:05:47.366 A:middle
内嵌功能是由

00:05:47.506 --> 00:05:49.706 A:middle
MusicKit JS 支持的

00:05:49.706 --> 00:05:50.766 A:middle
我们也将一并发布 MusicKit JS

00:05:50.766 --> 00:05:52.086 A:middle
让你打造属于自己的音乐体验

00:05:53.636 --> 00:05:55.916 A:middle
那么 让我们谈谈功能

00:05:58.256 --> 00:05:59.936 A:middle
最重要的一点是

00:05:59.936 --> 00:06:01.046 A:middle
你将能够在浏览器内完整播放

00:05:59.936 --> 00:06:01.046 A:middle
你将能够在浏览器内完整播放

00:06:01.046 --> 00:06:03.246 A:middle
Apple Music 上的歌曲

00:06:04.076 --> 00:06:05.536 A:middle
它可以在如今所有浏览器上运行

00:06:05.536 --> 00:06:06.746 A:middle
不需要任何插件

00:06:06.746 --> 00:06:08.646 A:middle
也没有任何外部依赖

00:06:09.436 --> 00:06:11.156 A:middle
你可以单独使用它

00:06:11.216 --> 00:06:12.626 A:middle
或是在想要的 JavaScript 框架中使用

00:06:14.796 --> 00:06:16.856 A:middle
播放音乐需要我们授权用户

00:06:18.046 --> 00:06:19.426 A:middle
我们会替你把控

00:06:19.426 --> 00:06:20.606 A:middle
确保该用户订阅了

00:06:20.606 --> 00:06:21.376 A:middle
Apple Music

00:06:21.916 --> 00:06:24.066 A:middle
JavaScript 库

00:06:24.066 --> 00:06:25.326 A:middle
会维护一个歌曲队列

00:06:25.326 --> 00:06:26.756 A:middle
允许你完整播放整张专辑

00:06:26.756 --> 00:06:27.336 A:middle
或是整个播放列表

00:06:27.446 --> 00:06:31.536 A:middle
只要你有了那个播放队列

00:06:31.536 --> 00:06:32.866 A:middle
你就能够轻易控制它

00:06:33.006 --> 00:06:34.466 A:middle
你可以播放 暂停

00:06:34.466 --> 00:06:36.256 A:middle
跳到上一首或是

00:06:36.256 --> 00:06:37.466 A:middle
跳到下一首

00:06:38.676 --> 00:06:40.786 A:middle
并且我们也会追踪正在播放

00:06:40.786 --> 00:06:42.606 A:middle
或正在加载的歌曲的

00:06:42.606 --> 00:06:43.916 A:middle
正在播放元数据

00:06:43.916 --> 00:06:45.446 A:middle
以便你可以基于它

00:06:45.446 --> 00:06:47.126 A:middle
来渲染 UI

00:06:48.596 --> 00:06:49.836 A:middle
让我们来聊聊

00:06:49.836 --> 00:06:51.146 A:middle
如何给网页构建一个简单的播放器

00:06:51.576 --> 00:06:53.066 A:middle
我们要包含

00:06:53.066 --> 00:06:54.566 A:middle
JavaScript 库

00:06:56.676 --> 00:06:57.876 A:middle
然后 你需要提供你的

00:06:57.876 --> 00:06:58.686 A:middle
开发者令牌

00:06:58.936 --> 00:07:00.296 A:middle
你可以用你的私钥

00:06:58.936 --> 00:07:00.296 A:middle
你可以用你的私钥

00:07:00.296 --> 00:07:00.976 A:middle
来生成令牌

00:07:01.506 --> 00:07:05.466 A:middle
我们可以很好地使用

00:07:05.466 --> 00:07:07.606 A:middle
声明式的 HTML 标记语言

00:07:07.796 --> 00:07:09.156 A:middle
你可以给你的页面添加一些标记语言

00:07:09.196 --> 00:07:10.636 A:middle
例如 登录 登出

00:07:10.636 --> 00:07:12.376 A:middle
或是播放控制的按钮

00:07:13.776 --> 00:07:15.236 A:middle
我们会将这些元素

00:07:15.236 --> 00:07:17.856 A:middle
与 MusicKit 内的有关功能相连接

00:07:18.346 --> 00:07:20.366 A:middle
然后 我们来加一些

00:07:20.366 --> 00:07:21.026 A:middle
播放按钮

00:07:21.026 --> 00:07:22.596 A:middle
我们会用到一些来自 Apple Music 目录的

00:07:22.596 --> 00:07:24.456 A:middle
内容 ID 和 URL

00:07:24.456 --> 00:07:26.876 A:middle
这样用户就能开始播放了

00:07:27.236 --> 00:07:31.716 A:middle
让我们来看一下这里的代码

00:07:31.716 --> 00:07:33.476 A:middle
你需要包含 JavaScript 库

00:07:33.476 --> 00:07:34.926 A:middle
同时我们也会将该文件

00:07:34.926 --> 00:07:36.566 A:middle
托管至我们的 CDN 服务器

00:07:37.086 --> 00:07:39.016 A:middle
我们需要加入一些用于

00:07:39.256 --> 00:07:41.286 A:middle
登录和登出的按钮

00:07:42.496 --> 00:07:44.156 A:middle
用于控制播放的按钮

00:07:44.366 --> 00:07:45.386 A:middle
这里 我们有一个播放键

00:07:45.386 --> 00:07:46.936 A:middle
一个暂停键和下一曲键

00:07:46.936 --> 00:07:50.836 A:middle
我们会加一些

00:07:50.836 --> 00:07:52.286 A:middle
关于正在播放内容的

00:07:52.286 --> 00:07:53.126 A:middle
将会在元数据中提供的元素

00:07:53.546 --> 00:07:54.636 A:middle
比如我们可以得到播放列表名称

00:07:54.636 --> 00:07:57.046 A:middle
歌曲名称和艺术家名称

00:07:57.476 --> 00:07:59.746 A:middle
然后我们有一些元素

00:07:59.746 --> 00:08:01.736 A:middle
使你能够向用户展示

00:07:59.746 --> 00:08:01.736 A:middle
使你能够向用户展示

00:08:01.736 --> 00:08:02.746 A:middle
当前播放音轨的

00:08:02.746 --> 00:08:04.566 A:middle
进行状态

00:08:04.566 --> 00:08:05.926 A:middle
播放时长

00:08:05.926 --> 00:08:07.166 A:middle
播放时间和播放进度

00:08:07.656 --> 00:08:10.376 A:middle
所以 我想让 Jae Hess 上台

00:08:10.376 --> 00:08:12.166 A:middle
来向你们演示

00:08:12.166 --> 00:08:13.866 A:middle
如何用 MusicKit JS

00:08:13.866 --> 00:08:15.196 A:middle
来构建一个我们刚刚讨论过的

00:08:15.796 --> 00:08:16.856 A:middle
简易播放器

00:08:17.516 --> 00:08:20.016 A:middle
[ 鼓掌 ]

00:08:20.516 --> 00:08:21.056 A:middle
&gt;&gt; 谢谢你 DJ

00:08:22.806 --> 00:08:24.556 A:middle
我们这就准备开始

00:08:24.556 --> 00:08:27.586 A:middle
在右侧的 Xcode 里

00:08:27.586 --> 00:08:29.106 A:middle
有一个基础的 HTML 模板

00:08:29.156 --> 00:08:30.746 A:middle
已经与 MusicKit JS 库

00:08:30.746 --> 00:08:32.196 A:middle
相关联

00:08:32.466 --> 00:08:34.586 A:middle
在左边 有一个

00:08:34.586 --> 00:08:35.966 A:middle
打开的 Safari 窗口

00:08:35.966 --> 00:08:37.405 A:middle
正在运行一个实时重载的服务器

00:08:37.616 --> 00:08:38.956 A:middle
这样一来 我在标记语言上做的

00:08:38.956 --> 00:08:40.486 A:middle
任何改变都会直接

00:08:40.486 --> 00:08:42.196 A:middle
反映在左手边的窗口里

00:08:42.756 --> 00:08:45.996 A:middle
要想开始使用

00:08:45.996 --> 00:08:47.626 A:middle
我们首先要做的事就是

00:08:47.626 --> 00:08:49.046 A:middle
按照我们的使用目的配置

00:08:49.426 --> 00:08:51.076 A:middle
有了声明式标记语言

00:08:51.076 --> 00:08:52.026 A:middle
通过使用 meta 标签

00:08:52.026 --> 00:08:53.296 A:middle
可以很简单地完成

00:08:53.816 --> 00:08:58.266 A:middle
我们可以指定我们的 App 名称

00:08:58.266 --> 00:09:00.136 A:middle
同时提供我们的

00:08:58.266 --> 00:09:00.136 A:middle
同时提供我们的

00:09:00.136 --> 00:09:01.096 A:middle
开发者令牌

00:09:01.096 --> 00:09:05.936 A:middle
然后 为了得到我们想要的功能

00:09:05.936 --> 00:09:08.396 A:middle
我们要往页面上放置一个

00:09:08.396 --> 00:09:10.176 A:middle
供用户点击的按钮

00:09:10.276 --> 00:09:11.356 A:middle
当点击这个按钮

00:09:11.356 --> 00:09:13.516 A:middle
它将会从 Apple Music 目录里

00:09:13.516 --> 00:09:14.676 A:middle
获取一个播放列表

00:09:15.306 --> 00:09:17.036 A:middle
设置好播放队列

00:09:17.036 --> 00:09:18.026 A:middle
然后开始在浏览器里播放

00:09:18.506 --> 00:09:20.746 A:middle
现在我准备提供一个

00:09:20.886 --> 00:09:22.256 A:middle
从桌面端的 iTunes 中获取的

00:09:22.256 --> 00:09:24.166 A:middle
内容 URL 以嵌入一个我想嵌入的

00:09:24.166 --> 00:09:25.166 A:middle
具体的播放列表

00:09:26.426 --> 00:09:27.846 A:middle
这个播放列表叫做

00:09:27.846 --> 00:09:29.000 A:middle
Today at Apple Music

00:09:34.516 --> 00:09:41.016 A:middle
[ 音乐 ]

00:09:41.516 --> 00:09:42.836 A:middle
只用简简单单一条代码

00:09:42.836 --> 00:09:44.866 A:middle
我们就能在浏览器里

00:09:45.136 --> 00:09:51.776 A:middle
完整播放 Today at Apple 列表了

00:09:51.946 --> 00:09:53.436 A:middle
尽管这很棒 并且是一个

00:09:53.436 --> 00:09:55.076 A:middle
相当好的解决方案

00:09:55.546 --> 00:09:56.876 A:middle
但我们可能会想要

00:09:56.876 --> 00:09:58.146 A:middle
为用户提供更多

00:09:58.146 --> 00:09:59.176 A:middle
控制方式和功能

00:10:00.146 --> 00:10:01.466 A:middle
我们的第一件要做的

00:10:01.466 --> 00:10:02.816 A:middle
是让你的 App 用户

00:10:02.816 --> 00:10:03.926 A:middle
同时也是

00:10:03.926 --> 00:10:05.396 A:middle
Apple Music 的订阅用户

00:10:05.396 --> 00:10:06.336 A:middle
能够登录和登出

00:10:06.806 --> 00:10:08.476 A:middle
我们可以通过往页面上

00:10:08.536 --> 00:10:09.666 A:middle
添加授权和取消授权按钮

00:10:09.696 --> 00:10:13.316 A:middle
来做到这一点

00:10:13.376 --> 00:10:15.946 A:middle
我们使用 Apple Music 的

00:10:15.946 --> 00:10:19.706 A:middle
Authorize 和 Unauthorize 属性

00:10:19.706 --> 00:10:21.376 A:middle
然后 MusicKit JS 就能替我管理

00:10:21.376 --> 00:10:22.816 A:middle
这些按钮的展示状态

00:10:22.946 --> 00:10:24.576 A:middle
我之前登录过

00:10:24.576 --> 00:10:25.826 A:middle
所以你能看到这里的状态显示

00:10:25.826 --> 00:10:28.000 A:middle
从 Apple Music 登出

00:10:32.276 --> 00:10:33.776 A:middle
接下来我想要加一些

00:10:33.776 --> 00:10:34.746 A:middle
播放控制按键

00:10:35.346 --> 00:10:37.116 A:middle
我们可以用 Apple Music 属性

00:10:37.116 --> 00:10:39.156 A:middle
来指定这些

00:10:39.156 --> 00:10:41.206 A:middle
而且我们可以指定

00:10:41.276 --> 00:10:47.656 A:middle
跳转到上一项 暂停 播放

00:10:48.156 --> 00:10:52.000 A:middle
以及跳转到下一项

00:10:56.556 --> 00:10:58.276 A:middle
我们可以添加正在播放信息

00:10:58.276 --> 00:10:59.696 A:middle
让用户能够看到

00:10:59.696 --> 00:11:01.086 A:middle
队列中正在播放的那一首

00:10:59.696 --> 00:11:01.086 A:middle
队列中正在播放的那一首

00:11:02.596 --> 00:11:03.596 A:middle
这里我指定了

00:11:03.596 --> 00:11:05.316 A:middle
playlistArtworkURL 并且我可以

00:11:05.316 --> 00:11:06.796 A:middle
指定我想要

00:11:06.796 --> 00:11:07.616 A:middle
展示的高和宽

00:11:08.236 --> 00:11:09.706 A:middle
并且我也有权获取

00:11:09.706 --> 00:11:11.196 A:middle
有关这个媒体项目的可用的

00:11:11.196 --> 00:11:11.996 A:middle
任何数据属性

00:11:12.646 --> 00:11:14.176 A:middle
所以我可以指定

00:11:15.076 --> 00:11:18.636 A:middle
播放列表名称

00:11:18.636 --> 00:11:20.496 A:middle
曲目名称 还有艺术家名称

00:11:21.716 --> 00:11:22.996 A:middle
在下面 我已经指定了

00:11:22.996 --> 00:11:23.646 A:middle
我希望当前播放时间

00:11:23.646 --> 00:11:26.116 A:middle
可以被加载在

00:11:26.116 --> 00:11:28.966 A:middle
HTML 的时间元素中

00:11:29.036 --> 00:11:31.376 A:middle
当页面重新加载

00:11:31.686 --> 00:11:33.036 A:middle
正在播放 界面里什么都没有

00:11:33.036 --> 00:11:33.916 A:middle
因为我们没有播放任何音乐

00:11:33.916 --> 00:11:35.856 A:middle
让我们解决这个问题

00:11:35.856 --> 00:11:37.076 A:middle
添加按键 让用户得以

00:11:37.076 --> 00:11:39.306 A:middle
将播放列表加入队列中

00:11:39.856 --> 00:11:45.026 A:middle
我要粘贴 16 个播放列表

00:11:45.376 --> 00:11:48.826 A:middle
然后当用户

00:11:51.516 --> 00:11:58.036 A:middle
[ 音乐 ]

00:11:58.536 --> 00:11:59.366 A:middle
现在 使用播放控制按键

00:11:59.366 --> 00:12:01.536 A:middle
我可以暂停播放

00:11:59.366 --> 00:12:01.536 A:middle
我可以暂停播放

00:12:01.886 --> 00:12:03.136 A:middle
可以跳至下一首

00:12:05.516 --> 00:12:09.186 A:middle
[ 音乐 ]

00:12:09.686 --> 00:12:16.606 A:middle
甚至可以回到那一首

00:12:18.166 --> 00:12:21.076 A:middle
现在 MusicKit JS 提供了

00:12:21.076 --> 00:12:22.256 A:middle
用声明式标记语言的解决办法

00:12:22.256 --> 00:12:24.086 A:middle
它也提供了

00:12:24.086 --> 00:12:26.306 A:middle
完整的 JavaScript API

00:12:26.306 --> 00:12:28.406 A:middle
所以我想请 DJ 回到台上

00:12:29.046 --> 00:12:30.306 A:middle
来和你们讲讲 JavaScript API

00:12:30.736 --> 00:12:30.996 A:middle
谢谢大家

00:12:32.516 --> 00:12:38.236 A:middle
[ 掌声 ]

00:12:38.736 --> 00:12:39.556 A:middle
&gt;&gt; 谢谢你 Jae

00:12:40.156 --> 00:12:43.686 A:middle
用声明式标记语言来实现基础功能

00:12:43.686 --> 00:12:46.646 A:middle
是一种非常直接的方式

00:12:47.436 --> 00:12:48.326 A:middle
让我们再来谈谈更加

00:12:48.326 --> 00:12:49.246 A:middle
高级的用法

00:12:49.246 --> 00:12:50.836 A:middle
让我们来写一些 JavaScript

00:12:50.836 --> 00:12:52.016 A:middle
来与 MusicKit 交互

00:12:52.016 --> 00:12:53.646 A:middle
现在我们先

00:12:53.646 --> 00:12:54.496 A:middle
来看几个例子

00:12:55.746 --> 00:12:58.626 A:middle
用 ID 可以从目录获取到元数据

00:12:59.156 --> 00:13:03.206 A:middle
我们可以在 Apple Music 目录内

00:12:59.156 --> 00:13:03.206 A:middle
我们可以在 Apple Music 目录内

00:13:03.206 --> 00:13:04.156 A:middle
搜索内容

00:13:04.796 --> 00:13:08.276 A:middle
我们可以为已登录的用户

00:13:08.276 --> 00:13:09.876 A:middle
浏览 iCloud 音乐资料库

00:13:10.306 --> 00:13:12.856 A:middle
搜索也可以在资料库范围内进行

00:13:13.286 --> 00:13:16.196 A:middle
我们可以直接设置和控制

00:13:16.196 --> 00:13:17.206 A:middle
歌曲队列

00:13:17.266 --> 00:13:20.576 A:middle
而且我们可以响应播放事件

00:13:20.576 --> 00:13:25.936 A:middle
相应地绘制 UI

00:13:26.146 --> 00:13:28.876 A:middle
那么 我们来看一些代码

00:13:28.876 --> 00:13:29.836 A:middle
首先 我们会用

00:13:29.836 --> 00:13:33.366 A:middle
MusicKit.getInstant 方法

00:13:33.506 --> 00:13:34.776 A:middle
MusicKit 是单件模式

00:13:34.776 --> 00:13:35.986 A:middle
因为你同时只能播放一首歌曲

00:13:35.986 --> 00:13:37.886 A:middle
所以我们把

00:13:37.886 --> 00:13:39.026 A:middle
这个赋值给 music 变量

00:13:39.026 --> 00:13:40.896 A:middle
然后会在剩下所有例子里

00:13:40.896 --> 00:13:42.246 A:middle
都使用 music 来代替

00:13:42.756 --> 00:13:46.486 A:middle
你可以用 ID 来查找一首歌

00:13:47.376 --> 00:13:49.406 A:middle
api.song 方法拿到这个 ID

00:13:49.406 --> 00:13:50.866 A:middle
然后你需要提供一个回调

00:13:50.866 --> 00:13:52.006 A:middle
这就是一个 promise

00:13:52.406 --> 00:13:53.516 A:middle
你会看到这个 promise 模型

00:13:53.516 --> 00:13:54.476 A:middle
贯穿了 MusicKit

00:13:54.996 --> 00:13:58.086 A:middle
然后会返回给你一个内容对象

00:13:58.086 --> 00:13:59.486 A:middle
该内容对象

00:13:59.486 --> 00:14:00.756 A:middle
向你展示那首歌曲的属性

00:13:59.486 --> 00:14:00.756 A:middle
向你展示那首歌曲的属性

00:14:00.756 --> 00:14:02.906 A:middle
以及任何相关信息

00:14:03.216 --> 00:14:05.826 A:middle
例如艺术家和专辑

00:14:06.116 --> 00:14:10.806 A:middle
就像 Betim 之前提到过的

00:14:10.806 --> 00:14:11.806 A:middle
如果你没有内容 ID

00:14:11.806 --> 00:14:13.716 A:middle
使用 ISRC 查询筛选器

00:14:14.216 --> 00:14:16.936 A:middle
你也能完成同样的查找

00:14:17.766 --> 00:14:19.056 A:middle
返回的对象与之前的例子

00:14:19.376 --> 00:14:20.926 A:middle
是一模一样的

00:14:24.596 --> 00:14:27.176 A:middle
如果你想要用一次网络请求

00:14:27.586 --> 00:14:29.766 A:middle
返回一组歌曲对象

00:14:29.766 --> 00:14:30.896 A:middle
我们有一个批处理 API

00:14:30.896 --> 00:14:33.156 A:middle
对于专辑和播放列表也

00:14:33.156 --> 00:14:35.000 A:middle
同样生效

00:14:39.756 --> 00:14:41.146 A:middle
我们可以让用户从他们的

00:14:41.146 --> 00:14:43.156 A:middle
iCloud 音乐资料库选择播放内容

00:14:44.436 --> 00:14:46.246 A:middle
因此 这些 API 是在资料库

00:14:46.246 --> 00:14:47.306 A:middle
范围内运行的

00:14:47.976 --> 00:14:49.506 A:middle
你可以得到歌曲列表

00:14:49.876 --> 00:14:51.166 A:middle
专辑和播放列表

00:14:52.356 --> 00:14:54.206 A:middle
这些 API 都是分页的

00:14:54.206 --> 00:14:56.346 A:middle
所以你可以像常见做法那样

00:14:56.466 --> 00:14:57.846 A:middle
仅获取一个子集

00:14:57.846 --> 00:15:00.066 A:middle
然后你可以在用户翻页

00:14:57.846 --> 00:15:00.066 A:middle
然后你可以在用户翻页

00:15:00.066 --> 00:15:02.296 A:middle
或者滑动的时候加载更多

00:15:02.816 --> 00:15:06.456 A:middle
你可以搜索 Apple Music 目录

00:15:07.086 --> 00:15:09.306 A:middle
我们先仅搜索歌曲

00:15:09.686 --> 00:15:11.446 A:middle
然后在第二个例子中

00:15:11.446 --> 00:15:12.486 A:middle
我们将同时搜索

00:15:12.486 --> 00:15:13.926 A:middle
歌曲和专辑

00:15:14.086 --> 00:15:16.056 A:middle
你也可以提供一个限制

00:15:16.156 --> 00:15:17.666 A:middle
来规定返回结果的数量上限

00:15:18.176 --> 00:15:22.626 A:middle
你也可以将查询指令

00:15:22.626 --> 00:15:24.046 A:middle
限定在用户自己的

00:15:24.046 --> 00:15:25.286 A:middle
iCloud 音乐资料库范围内

00:15:26.036 --> 00:15:27.576 A:middle
这里我们用到的是一模一样的

00:15:27.576 --> 00:15:28.736 A:middle
使用同样参数的搜索方法

00:15:28.736 --> 00:15:30.796 A:middle
但是我们在资料库范围内

00:15:30.796 --> 00:15:32.026 A:middle
进行搜索

00:15:35.906 --> 00:15:37.466 A:middle
接下来 我们来讲授权

00:15:38.596 --> 00:15:39.526 A:middle
我们应该在真正

00:15:39.526 --> 00:15:40.726 A:middle
需要授权的时候处理授权问题

00:15:40.726 --> 00:15:42.496 A:middle
也就是当播放开始

00:15:42.496 --> 00:15:44.096 A:middle
或者当你试图获取

00:15:44.096 --> 00:15:45.886 A:middle
当前已登录用户的

00:15:45.886 --> 00:15:47.516 A:middle
iCloud 音乐资料库的时候

00:15:48.996 --> 00:15:50.486 A:middle
如果你想 你也可以自行触发

00:15:51.156 --> 00:15:52.386 A:middle
或许在用户刚来到你们网站时

00:15:52.386 --> 00:15:53.786 A:middle
就想强制他们

00:15:53.786 --> 00:15:54.586 A:middle
进行授权验证

00:15:58.256 --> 00:15:59.706 A:middle
当用户按下一个按键

00:16:00.716 --> 00:16:01.476 A:middle
你就可以开始播放了

00:16:01.766 --> 00:16:03.996 A:middle
你可以用 setQueue 方法来做

00:16:04.946 --> 00:16:06.576 A:middle
这里我们提供了

00:16:06.576 --> 00:16:07.926 A:middle
一张专辑 然后 MusicKit

00:16:07.926 --> 00:16:10.286 A:middle
将会处理获取元数据以及

00:16:10.286 --> 00:16:11.206 A:middle
设置播放队列

00:16:12.346 --> 00:16:13.496 A:middle
如果有个之前见过的

00:16:13.496 --> 00:16:15.206 A:middle
内容对象 你可以

00:16:15.206 --> 00:16:16.526 A:middle
直接传入它

00:16:16.526 --> 00:16:19.946 A:middle
MusicKit 自己就知道该做什么了

00:16:19.946 --> 00:16:21.176 A:middle
setQueue 返回了一个 promise

00:16:22.166 --> 00:16:23.276 A:middle
当队列完全加载时

00:16:23.276 --> 00:16:24.206 A:middle
你就可以开始播放了

00:16:24.256 --> 00:16:24.966 A:middle
这里我们用 music.play

00:16:24.966 --> 00:16:30.996 A:middle
来自动开始播放

00:16:31.206 --> 00:16:32.176 A:middle
一旦那些歌曲开始播放

00:16:32.176 --> 00:16:34.616 A:middle
你会想去控制它

00:16:34.616 --> 00:16:36.356 A:middle
你可以跳到下一曲或是

00:16:36.356 --> 00:16:37.106 A:middle
返回上一曲

00:16:37.146 --> 00:16:38.000 A:middle
你可以暂停

00:16:42.406 --> 00:16:44.056 A:middle
你可以在 UI 上呈现一些操作

00:16:44.056 --> 00:16:46.016 A:middle
让用户可以快速把

00:16:46.016 --> 00:16:47.196 A:middle
正在浏览的歌曲

00:16:47.196 --> 00:16:49.056 A:middle
专辑或者播放列表

00:16:49.056 --> 00:16:50.366 A:middle
添加到自己的 iCloud 音乐资料库里

00:16:51.236 --> 00:16:52.986 A:middle
我们这里有一个 addToLibrary 方法

00:16:52.986 --> 00:16:58.646 A:middle
你可以做一样的事

00:16:58.646 --> 00:17:00.216 A:middle
你可以一次性完成三次调用

00:16:58.646 --> 00:17:00.216 A:middle
你可以一次性完成三次调用

00:17:00.706 --> 00:17:01.886 A:middle
现在我们添加上面例子中的

00:17:01.886 --> 00:17:03.546 A:middle
相同的四个项目

00:17:03.846 --> 00:17:04.646 A:middle
但是我们会在一次网络

00:17:04.646 --> 00:17:05.146 A:middle
请求中完成

00:17:05.715 --> 00:17:11.476 A:middle
接下来我们看看事件

00:17:11.636 --> 00:17:12.945 A:middle
MusicKit 会

00:17:13.256 --> 00:17:14.806 A:middle
触发事件来驱动 UI

00:17:15.185 --> 00:17:16.846 A:middle
我们之所以这样做是因为

00:17:16.955 --> 00:17:18.445 A:middle
MusicKit 为了播放完整的曲目

00:17:18.636 --> 00:17:20.826 A:middle
需要控制音频元素

00:17:21.376 --> 00:17:22.606 A:middle
这里我们会用

00:17:22.766 --> 00:17:24.656 A:middle
addEventListener

00:17:24.656 --> 00:17:26.016 A:middle
如果你之前写过 DOM 脚本

00:17:26.016 --> 00:17:27.606 A:middle
这对你来说会非常熟悉

00:17:28.856 --> 00:17:30.096 A:middle
作为例子 我们会

00:17:30.096 --> 00:17:31.256 A:middle
详细看看几个事件

00:17:34.756 --> 00:17:36.756 A:middle
mediaItemWillChange 和

00:17:36.756 --> 00:17:38.536 A:middle
mediaItemDidChange 事件会在

00:17:38.536 --> 00:17:39.766 A:middle
队列中的正在播放项目变化时触发

00:17:39.766 --> 00:17:41.386 A:middle
以及在正在播放的

00:17:41.386 --> 00:17:43.326 A:middle
第一首切换到第二首的时候

00:17:44.266 --> 00:17:45.646 A:middle
你可以用它来触发

00:17:45.646 --> 00:17:47.726 A:middle
更新 UI

00:17:47.726 --> 00:17:48.696 A:middle
显示正在播放的歌曲

00:17:49.186 --> 00:17:53.106 A:middle
当你真正开始播放时

00:17:53.106 --> 00:17:54.616 A:middle
playbackStateChange

00:17:54.686 --> 00:17:56.096 A:middle
事件会被激发

00:17:56.266 --> 00:17:57.326 A:middle
同样 这里我们有 playbackStateWillChange

00:17:57.326 --> 00:17:58.686 A:middle
和 playbackStateDidChange

00:17:59.616 --> 00:18:01.586 A:middle
比如说 你能知道一首歌曲

00:17:59.616 --> 00:18:01.586 A:middle
比如说 你能知道一首歌曲

00:18:01.586 --> 00:18:03.596 A:middle
正在加载

00:18:03.596 --> 00:18:04.906 A:middle
正在播放或已暂停

00:18:05.026 --> 00:18:06.766 A:middle
然后你会恰到好处地

00:18:06.766 --> 00:18:07.416 A:middle
更新你的 UI

00:18:08.406 --> 00:18:09.646 A:middle
这个事件会告诉你

00:18:09.646 --> 00:18:11.076 A:middle
之前的状态以及

00:18:11.076 --> 00:18:12.586 A:middle
将要转变至的新状态

00:18:16.676 --> 00:18:18.486 A:middle
当歌曲在播放时

00:18:18.486 --> 00:18:20.296 A:middle
你会有 playbackProgressChange 事件

00:18:20.296 --> 00:18:23.786 A:middle
这个事件把当前播放进度

00:18:23.786 --> 00:18:25.896 A:middle
作为百分比展示

00:18:26.426 --> 00:18:28.166 A:middle
你可以利用它来更新播放进度的 UI

00:18:31.576 --> 00:18:32.766 A:middle
你也会需要监听

00:18:32.766 --> 00:18:34.326 A:middle
所有媒体回放错误

00:18:35.206 --> 00:18:37.806 A:middle
mediaPlaybackError 事件会被激发

00:18:39.016 --> 00:18:40.276 A:middle
你可以捕捉到

00:18:40.276 --> 00:18:41.496 A:middle
然后给用户展示

00:18:41.496 --> 00:18:42.466 A:middle
对应的错误信息

00:18:42.726 --> 00:18:47.396 A:middle
我想请 Jae 回到舞台

00:18:47.706 --> 00:18:48.676 A:middle
他将接手

00:18:48.676 --> 00:18:50.616 A:middle
我们刚刚制作好的这个播放器

00:18:50.616 --> 00:18:51.466 A:middle
向大家展示如何使用

00:18:51.466 --> 00:18:53.336 A:middle
那些 JavaScript API

00:18:53.726 --> 00:18:56.866 A:middle
来实现搜索 Apple Music 目录

00:18:56.866 --> 00:18:58.936 A:middle
搜索 iCLoud 音乐资料库

00:18:58.936 --> 00:19:00.556 A:middle
我们还将运用事件

00:18:58.936 --> 00:19:00.556 A:middle
我们还将运用事件

00:19:00.556 --> 00:19:02.356 A:middle
来制作一个简单的进度条

00:19:03.536 --> 00:19:03.716 A:middle
有请 Jae

00:19:04.526 --> 00:19:05.516 A:middle
&gt;&gt; 谢谢你 DJ

00:19:06.516 --> 00:19:11.686 A:middle
[ 掌声 ]

00:19:12.186 --> 00:19:13.996 A:middle
如 DJ 提到的

00:19:13.996 --> 00:19:15.786 A:middle
我们要在之前的例子的基础上

00:19:15.786 --> 00:19:17.186 A:middle
进一步扩展

00:19:17.556 --> 00:19:18.446 A:middle
增加播放列表搜索功能

00:19:19.026 --> 00:19:22.116 A:middle
我在台下时

00:19:22.116 --> 00:19:23.736 A:middle
移除了之前那个例子中

00:19:23.736 --> 00:19:24.716 A:middle
我们做过的许多东西

00:19:24.716 --> 00:19:26.046 A:middle
但是我保留了

00:19:26.046 --> 00:19:27.046 A:middle
页面内的一些东西

00:19:27.336 --> 00:19:29.846 A:middle
另外 我包含了

00:19:29.846 --> 00:19:31.276 A:middle
一个 JavaScript 文件

00:19:31.276 --> 00:19:32.476 A:middle
之后会往里面添加

00:19:32.476 --> 00:19:33.806 A:middle
JavaScript 代码

00:19:33.806 --> 00:19:35.556 A:middle
但我想再快速地过一遍 HTML 文件

00:19:36.976 --> 00:19:38.966 A:middle
我们做的主要改变是

00:19:38.966 --> 00:19:40.406 A:middle
添加了一个输入元素

00:19:40.406 --> 00:19:42.896 A:middle
让用户可以搜索

00:19:43.226 --> 00:19:45.096 A:middle
以及两个 DOM 容器

00:19:45.096 --> 00:19:46.546 A:middle
可以让我们把搜索结果放进去

00:19:47.176 --> 00:19:48.656 A:middle
MusicKit JS 无所谓

00:19:48.656 --> 00:19:50.336 A:middle
你在 App 中

00:19:50.336 --> 00:19:51.476 A:middle
使用什么库或者框架

00:19:51.476 --> 00:19:53.336 A:middle
所以在这个例子中

00:19:53.336 --> 00:19:55.256 A:middle
我们的 CSS

00:19:55.256 --> 00:19:56.566 A:middle
已经在后台构建好了

00:19:56.896 --> 00:19:58.046 A:middle
在另一个文件里

00:19:58.046 --> 00:19:59.036 A:middle
我们也构建了一些

00:19:59.036 --> 00:19:59.786 A:middle
template helper

00:20:00.706 --> 00:20:02.846 A:middle
我们注意到

00:20:02.846 --> 00:20:04.446 A:middle
标记语言在左边看起来

00:20:04.446 --> 00:20:05.346 A:middle
有点奇怪

00:20:05.856 --> 00:20:06.926 A:middle
有几个按钮

00:20:06.926 --> 00:20:09.486 A:middle
随意地漂浮着

00:20:09.486 --> 00:20:10.826 A:middle
专辑封面明显是空的

00:20:11.396 --> 00:20:15.106 A:middle
这是因为 MusicKit JS

00:20:15.176 --> 00:20:16.756 A:middle
假定如果你在用

00:20:16.756 --> 00:20:18.456 A:middle
meta 标签配置

00:20:18.456 --> 00:20:20.066 A:middle
那么你就想要启用

00:20:20.066 --> 00:20:20.886 A:middle
声明式标记语言

00:20:21.246 --> 00:20:22.256 A:middle
如果你没有提供

00:20:22.256 --> 00:20:24.156 A:middle
那些配置项 它会假定

00:20:24.156 --> 00:20:25.776 A:middle
你在运行 JavaScript

00:20:25.776 --> 00:20:26.756 A:middle
你并不需要声明式标记

00:20:26.786 --> 00:20:28.856 A:middle
但我们为你提供了一个 hook 使得你可以

00:20:28.856 --> 00:20:30.146 A:middle
在 JavaScript 里重新启用声明式标记语言

00:20:30.616 --> 00:20:35.486 A:middle
我们通过监听

00:20:35.486 --> 00:20:36.956 A:middle
在文档中触发的 MusicKit 加载事件

00:20:36.956 --> 00:20:38.456 A:middle
来配置 MusicKit JS

00:20:38.976 --> 00:20:40.646 A:middle
我们可以由此知道

00:20:40.646 --> 00:20:42.016 A:middle
MusicKit JS 已经可以使用和配置

00:20:42.016 --> 00:20:43.716 A:middle
以及播放可以开始了

00:20:44.576 --> 00:20:46.926 A:middle
我们可以像使用 meta 标签那样

00:20:46.926 --> 00:20:48.166 A:middle
配置 App 名称

00:20:48.166 --> 00:20:49.986 A:middle
但是现在有一个属性

00:20:49.986 --> 00:20:50.806 A:middle
告诉我们说

00:20:50.806 --> 00:20:52.226 A:middle
declarativeMarkup 可以被设置为 true

00:20:52.226 --> 00:20:54.756 A:middle
这样 MusicKit JS

00:20:54.756 --> 00:20:55.916 A:middle
就知道我们运行在

00:20:55.916 --> 00:20:57.276 A:middle
一种混合模式

00:20:57.276 --> 00:21:00.000 A:middle
我们希望启用声明式标记特性

00:21:05.636 --> 00:21:07.656 A:middle
接下来 我要添加一个搜索处理程序

00:21:07.906 --> 00:21:09.566 A:middle
这是纯粹的 JavaScript

00:21:09.686 --> 00:21:10.966 A:middle
并非 MusicKit JS 特有

00:21:10.966 --> 00:21:12.056 A:middle
但我想特别指出

00:21:12.056 --> 00:21:13.286 A:middle
当用户在搜索框里

00:21:13.286 --> 00:21:15.066 A:middle
按下回车键时

00:21:15.366 --> 00:21:16.696 A:middle
就是我们需要触发

00:21:17.086 --> 00:21:18.506 A:middle
搜索回调的时候

00:21:19.046 --> 00:21:23.036 A:middle
我们可以通过

00:21:23.036 --> 00:21:24.936 A:middle
使用 MusicKit 的 API 属性的

00:21:24.936 --> 00:21:26.496 A:middle
search 方法来实现

00:21:27.816 --> 00:21:29.286 A:middle
这样会用 Apple Music API

00:21:29.286 --> 00:21:30.796 A:middle
来搜索 并且

00:21:31.026 --> 00:21:32.976 A:middle
我们可以用一个配置对象

00:21:32.976 --> 00:21:34.736 A:middle
来指定 Apple Music API

00:21:34.736 --> 00:21:38.516 A:middle
接受的搜索变量

00:21:39.286 --> 00:21:40.376 A:middle
所以我们可以搜索

00:21:40.376 --> 00:21:41.436 A:middle
并将搜索范围

00:21:41.436 --> 00:21:43.436 A:middle
限制在播放列表

00:21:43.436 --> 00:21:45.786 A:middle
以及希望搜索结果个数限制在 8 个

00:21:46.856 --> 00:21:48.546 A:middle
我们有我们自定义的模板

00:21:49.796 --> 00:21:51.356 A:middle
但是我想强调这三行

00:21:51.356 --> 00:21:53.186 A:middle
通过这三行代码

00:21:53.186 --> 00:21:55.966 A:middle
我们告诉 MusicKit 实例

00:21:55.966 --> 00:21:57.256 A:middle
采用用户点击的播放列表封面

00:21:57.256 --> 00:21:59.016 A:middle
而且我们想要把

00:21:59.016 --> 00:22:01.016 A:middle
播放队列设置为那个列表 ID

00:21:59.016 --> 00:22:01.016 A:middle
播放队列设置为那个列表 ID

00:22:01.816 --> 00:22:04.026 A:middle
这会返回一个 promise

00:22:04.026 --> 00:22:05.636 A:middle
我们可以调用 music.play

00:22:05.636 --> 00:22:06.896 A:middle
这样就会开始为用户播放了

00:22:07.066 --> 00:22:08.466 A:middle
接下来 我们也有了

00:22:08.466 --> 00:22:09.256 A:middle
自定义的界面

00:22:13.496 --> 00:22:15.196 A:middle
我以 a list 为关键词进行一次搜索

00:22:16.126 --> 00:22:18.346 A:middle
我们看到 8 项来自 Apple Music 目录的

00:22:18.346 --> 00:22:20.466 A:middle
关于 a list 播放列表的结果

00:22:20.996 --> 00:22:25.946 A:middle
如果同样的搜索

00:22:25.946 --> 00:22:27.586 A:middle
可以运用到我的

00:22:27.586 --> 00:22:29.356 A:middle
个人 iCloud 资料库就好了

00:22:30.336 --> 00:22:31.936 A:middle
我们可以用几乎一模一样的方法

00:22:31.936 --> 00:22:34.996 A:middle
完成以上搜索

00:22:34.996 --> 00:22:36.526 A:middle
除了 search 方法来自

00:22:36.526 --> 00:22:38.196 A:middle
library property 而非

00:22:38.196 --> 00:22:39.126 A:middle
API property

00:22:39.756 --> 00:22:41.066 A:middle
这会告知 MusicKit

00:22:41.066 --> 00:22:45.246 A:middle
你正在查找 iCloud 资料库

00:22:45.246 --> 00:22:47.926 A:middle
设置播放列表 同样设置结果数为 8 个

00:22:47.956 --> 00:22:49.806 A:middle
然后 设置播放队列

00:22:49.806 --> 00:22:52.086 A:middle
以及开始播放的代码

00:22:52.256 --> 00:22:53.746 A:middle
跟之前完全一样

00:22:57.096 --> 00:22:58.956 A:middle
如果我运行同一个搜索

00:23:00.496 --> 00:23:02.396 A:middle
会看到 iCloud 音乐资料库的

00:23:02.396 --> 00:23:04.216 A:middle
搜索结果 同时还有

00:23:04.216 --> 00:23:05.946 A:middle
目录资料库的结果

00:23:06.366 --> 00:23:10.866 A:middle
我可以点击

00:23:10.866 --> 00:23:12.896 A:middle
然后我们就能播放 iCloud 资料库里的内容了

00:23:14.516 --> 00:23:17.736 A:middle
[ 音乐 ]

00:23:18.236 --> 00:23:19.706 A:middle
看着正在播放的界面

00:23:19.706 --> 00:23:21.096 A:middle
或者说底部显示的

00:23:21.096 --> 00:23:22.616 A:middle
正在播放的信息

00:23:22.616 --> 00:23:23.996 A:middle
让我意识到

00:23:23.996 --> 00:23:25.256 A:middle
少了一个进度指示器

00:23:25.256 --> 00:23:26.856 A:middle
这样我无法得知正在播放的曲目

00:23:26.856 --> 00:23:27.806 A:middle
播了多少了

00:23:28.346 --> 00:23:30.576 A:middle
我们可以通过监听

00:23:30.576 --> 00:23:33.636 A:middle
MusicKit JS 提供的

00:23:33.636 --> 00:23:35.206 A:middle
playbackProgressDidChange 事件

00:23:35.476 --> 00:23:38.000 A:middle
来添加一个进度指示器

00:23:42.296 --> 00:23:43.696 A:middle
在这里我们给 MusicKit 实例

00:23:43.696 --> 00:23:45.686 A:middle
添加一个 EventListener

00:23:45.686 --> 00:23:47.136 A:middle
监听 playbackProgressDidChange

00:23:47.356 --> 00:23:48.636 A:middle
当我们收到那个事件时

00:23:48.636 --> 00:23:54.526 A:middle
用一个自定义的渲染程序来显示进度

00:23:54.646 --> 00:23:56.186 A:middle
我们可以再搜索一遍 a list

00:23:56.716 --> 00:23:59.226 A:middle
这一次 当我播放歌曲时

00:23:59.226 --> 00:24:01.126 A:middle
能看到我们制作的进度条

00:23:59.226 --> 00:24:01.126 A:middle
能看到我们制作的进度条

00:24:01.126 --> 00:24:03.000 A:middle
被绘制出来

00:24:07.946 --> 00:24:09.076 A:middle
其实还有更多可以深入讨论的

00:24:09.076 --> 00:24:10.996 A:middle
关于 MusicKit JS 的内容

00:24:10.996 --> 00:24:12.556 A:middle
但我想让 DJ 回到舞台上来

00:24:12.556 --> 00:24:13.566 A:middle
为今天我们聊过的

00:24:13.566 --> 00:24:15.356 A:middle
做一个总结

00:24:16.516 --> 00:24:19.776 A:middle
[ 掌声 ]

00:24:20.276 --> 00:24:21.946 A:middle
&gt;&gt; 你们现在可以为你们的网站

00:24:21.946 --> 00:24:23.226 A:middle
带来超凡的音乐体验

00:24:24.416 --> 00:24:25.386 A:middle
你可以使用声明式标记语言

00:24:25.386 --> 00:24:27.896 A:middle
来快速添加简单的播放功能

00:24:27.896 --> 00:24:30.736 A:middle
或者你可以直接使用

00:24:30.736 --> 00:24:32.356 A:middle
JavaScript API

00:24:32.356 --> 00:24:33.856 A:middle
制作一个高级的 App

00:24:34.466 --> 00:24:35.926 A:middle
我们非常期待看到

00:24:35.926 --> 00:24:36.786 A:middle
你们的杰作

00:24:37.396 --> 00:24:38.426 A:middle
我们有很好的开发文档

00:24:38.426 --> 00:24:40.936 A:middle
在本场会议结束后

00:24:41.416 --> 00:24:42.196 A:middle
马上在 Technology Lab 3

00:24:42.196 --> 00:24:43.986 A:middle
会有一个实验室

00:24:44.716 --> 00:24:45.766 A:middle
可以回答你们的

00:24:45.766 --> 00:24:46.666 A:middle
任何问题

00:24:47.416 --> 00:24:48.006 A:middle
谢谢

00:24:49.508 --> 00:24:51.508 A:middle
[ 掌声 ]
