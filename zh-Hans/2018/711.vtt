WEBVTT

00:00:16.950 --> 00:00:21.622 align:middle line:0
（通知群组的使用 演讲711）

00:00:23.557 --> 00:00:25.893 align:middle line:-1
谢谢 下午好 欢迎

00:00:26.260 --> 00:00:27.394 align:middle line:-1
我叫Michele

00:00:27.461 --> 00:00:30.097 align:middle line:-1
在iOS用户通知团队工作

00:00:31.532 --> 00:00:34.735 align:middle line:-2
几分钟前
同事Kritarth和Teja

00:00:34.801 --> 00:00:36.737 align:middle line:-1
向你介绍了群组通知

00:00:37.037 --> 00:00:41.808 align:middle line:-1
现在我们将更详细地

00:00:41.875 --> 00:00:43.143 align:middle line:-1
探讨这个功能

00:00:43.210 --> 00:00:46.613 align:middle line:-2
我们将学习如何使用
如何提高它的效率

00:00:47.014 --> 00:00:50.551 align:middle line:-1
以及如何使其更有条理

00:00:52.719 --> 00:00:55.455 align:middle line:-1
首先我们简要概述一下

00:00:55.522 --> 00:00:56.523 align:middle line:-1
该功能的工作原理

00:00:56.590 --> 00:00:59.193 align:middle line:-1
以及UI的各部分如何协调

00:00:59.693 --> 00:01:02.963 align:middle line:-2
然后我们来看看默认分组
及app分组

00:00:59.693 --> 00:01:02.963 align:middle line:-2
然后我们来看看默认分组
及app分组

00:01:03.330 --> 00:01:07.234 align:middle line:-1
我们将了解如何创建自定义通知群组

00:01:07.301 --> 00:01:11.171 align:middle line:-1
以便你根据app内容调整群组

00:01:12.573 --> 00:01:14.274 align:middle line:-1
最后 我们将学习

00:01:14.341 --> 00:01:17.444 align:middle line:-2
如何为你的新通知群组
创建切题的摘要

00:01:21.481 --> 00:01:24.818 align:middle line:-1
我们先简要介绍一下该功能的UI

00:01:26.553 --> 00:01:31.291 align:middle line:-1
通知群组收集不同通知

00:01:31.358 --> 00:01:33.927 align:middle line:-1
并将它们分组排一个小堆栈中

00:01:34.294 --> 00:01:37.664 align:middle line:-1
这样使Notification Center更有条理

00:01:37.731 --> 00:01:39.600 align:middle line:-1
并且对用户更高效

00:01:39.666 --> 00:01:42.569 align:middle line:-1
这样用户可以同时看到更多通知

00:01:42.636 --> 00:01:46.840 align:middle line:-1
而不会被任何全屏的app挡住

00:01:46.907 --> 00:01:48.642 align:middle line:-1
从而看不到一些内容

00:01:50.611 --> 00:01:54.047 align:middle line:-1
每个通知群组都会在其顶部

00:01:54.114 --> 00:01:56.416 align:middle line:-1
显示本组的最新通知

00:01:56.683 --> 00:01:59.052 align:middle line:-1
我们将此称为主通知

00:02:00.287 --> 00:02:03.924 align:middle line:-2
主通知下方
每个组会显示一个简短的摘要

00:02:03.991 --> 00:02:05.926 align:middle line:-1
提供一些

00:02:05.993 --> 00:02:08.829 align:middle line:-1
关于组中包含的其他通知的细节

00:02:09.096 --> 00:02:14.468 align:middle line:-1
提供一个组内通知总数

00:02:14.535 --> 00:02:19.306 align:middle line:-1
有时还有有关通知内容的详细信息

00:02:22.643 --> 00:02:26.013 align:middle line:-1
通知群组还有助于通知分类

00:02:26.079 --> 00:02:27.948 align:middle line:-1
例如 只需轻轻一滑

00:02:28.015 --> 00:02:31.552 align:middle line:-1
你可以清除该组中的所有通知

00:02:31.618 --> 00:02:32.719 align:middle line:-1
全部清除它们

00:02:33.987 --> 00:02:36.823 align:middle line:-1
同样容易的是扩展群组

00:02:36.890 --> 00:02:40.460 align:middle line:-2
查看内部的所有通知
并一次阅读其中一条通知

00:02:40.527 --> 00:02:42.396 align:middle line:-1
也许清除一条

00:02:42.729 --> 00:02:45.666 align:middle line:-1
当完成后 你可以清除所有通知

00:02:45.732 --> 00:02:48.402 align:middle line:-1
用顶部的组按键 清除所有组内通知

00:02:52.172 --> 00:02:57.978 align:middle line:-1
这是对该功能的一个非常简短的概述

00:02:58.045 --> 00:03:01.481 align:middle line:-1
让你熟悉对UI的不同部分和术语

00:02:58.045 --> 00:03:01.481 align:middle line:-1
让你熟悉对UI的不同部分和术语

00:03:02.015 --> 00:03:06.119 align:middle line:-2
现在我们看看这些群组如何运作
以及如何创建它们

00:03:07.521 --> 00:03:09.790 align:middle line:-1
默认行为是app分组

00:03:10.591 --> 00:03:13.961 align:middle line:-1
每个app都有自己的群组

00:03:14.027 --> 00:03:16.730 align:middle line:-2
来自该app的所有通知
都集中到该组

00:03:17.197 --> 00:03:19.700 align:middle line:-1
如果你不作任何操作就是这个设定

00:03:19.766 --> 00:03:25.606 align:middle line:-2
你会在不采用任何新API的情况下
继续发送通知

00:03:27.541 --> 00:03:32.279 align:middle line:-2
许多情况下 app分组就足够了
而且效果非常好

00:03:32.346 --> 00:03:36.016 align:middle line:-1
例如 在播客app

00:03:36.083 --> 00:03:41.889 align:middle line:-2
所有通知同属一组
因为播客发的通知非常类似

00:03:41.989 --> 00:03:45.692 align:middle line:-1
它们是节目新剧集的通知

00:03:46.059 --> 00:03:49.596 align:middle line:-1
所以 不存在有的具体通知更有意思

00:03:49.663 --> 00:03:52.900 align:middle line:-1
或更重要 而需要作不同的显示

00:03:55.002 --> 00:03:59.072 align:middle line:-2
刚才说过 我们可以轻松点击群组
扩展群组

00:03:59.139 --> 00:04:01.275 align:middle line:-1
并查看该组内的详细信息

00:03:59.139 --> 00:04:01.275 align:middle line:-1
并查看该组内的详细信息

00:04:06.513 --> 00:04:10.884 align:middle line:-2
所以 app分组很好
它使通知更有条理

00:04:10.951 --> 00:04:13.887 align:middle line:-2
使Notification Center
更紧凑易用

00:04:14.454 --> 00:04:18.392 align:middle line:-1
但许多app有更特别的内容

00:04:18.458 --> 00:04:20.827 align:middle line:-1
它们可能需要不同的组织方式

00:04:20.894 --> 00:04:23.797 align:middle line:-1
使通知更有效率

00:04:24.731 --> 00:04:25.632 align:middle line:-1
据此

00:04:25.699 --> 00:04:27.301 align:middle line:-1
我们可以创建自定义分组

00:04:27.968 --> 00:04:30.537 align:middle line:-1
在这场讨论中 我们将首先看看

00:04:30.604 --> 00:04:34.341 align:middle line:-1
用于为通知创建自定义组的API

00:04:34.842 --> 00:04:39.680 align:middle line:-2
然后我们看一下iOS 12中的
一些app示例

00:04:41.014 --> 00:04:43.917 align:middle line:-1
探索这些app采用的一些模式

00:04:43.984 --> 00:04:47.221 align:middle line:-1
以及它们在用户可见的内容

00:04:47.287 --> 00:04:49.590 align:middle line:-1
以及群组涵盖内容

00:04:49.656 --> 00:04:52.092 align:middle line:-1
之间如何寻找平衡

00:04:52.159 --> 00:04:55.462 align:middle line:-1
以帮助Notification Center的组织

00:04:57.764 --> 00:05:01.969 align:middle line:-1
这就是为你的app创建群组的方式

00:04:57.764 --> 00:05:01.969 align:middle line:-1
这就是为你的app创建群组的方式

00:05:02.369 --> 00:05:06.373 align:middle line:-2
你只需在通知内容中
设置自定义线程标识符

00:05:08.375 --> 00:05:09.843 align:middle line:-1
完成此操作后

00:05:09.910 --> 00:05:13.380 align:middle line:-2
你使用相同线程标识符
发送的所有通知

00:05:13.747 --> 00:05:16.984 align:middle line:-2
将在Notification Center
组合在一起

00:05:18.952 --> 00:05:20.988 align:middle line:-1
线程标识符可以是任何字符串

00:05:21.922 --> 00:05:23.457 align:middle line:-1
用什么标识都没关系

00:05:23.891 --> 00:05:26.326 align:middle line:-1
所有通知都会据此组合在一起

00:05:26.827 --> 00:05:28.829 align:middle line:-1
你只需要为其独特命名

00:05:28.896 --> 00:05:31.832 align:middle line:-2
你只需要一个唯一的字符串
作为群组标识符

00:05:32.933 --> 00:05:34.067 align:middle line:-1
这就行了

00:05:34.134 --> 00:05:36.603 align:middle line:-1
你为通知创建了一个群组

00:05:37.571 --> 00:05:40.908 align:middle line:-1
但鉴于它如此简单

00:05:41.642 --> 00:05:44.811 align:middle line:-1
我们需要注意如何创建这些组

00:05:46.346 --> 00:05:49.183 align:middle line:-1
而且如果你熟悉通知API

00:05:49.650 --> 00:05:51.885 align:middle line:-1
你会注意到这不是一个新的API

00:05:51.952 --> 00:05:55.222 align:middle line:-1
这是前期iOS版本中引入的API

00:05:55.289 --> 00:05:58.492 align:middle line:-1
因此 它已经存在于当前的iOS中

00:05:58.959 --> 00:06:03.897 align:middle line:-2
过去我们介绍了丰富的通知
和私人通知

00:05:58.959 --> 00:06:03.897 align:middle line:-2
过去我们介绍了丰富的通知
和私人通知

00:06:04.231 --> 00:06:06.333 align:middle line:-1
所以 如果你已经采用了这个API

00:06:06.867 --> 00:06:10.337 align:middle line:-2
以支持以前iOS版本中的
这两个功能

00:06:10.404 --> 00:06:14.074 align:middle line:-2
你的通知已经在iOS 12中
进行分组

00:06:15.409 --> 00:06:18.078 align:middle line:-1
你可能想要复习群组的创建方式

00:06:18.145 --> 00:06:20.480 align:middle line:-1
因为现在API的上下文有点变化

00:06:20.781 --> 00:06:24.117 align:middle line:-1
所以稍微调整一下可能会更好

00:06:26.119 --> 00:06:29.056 align:middle line:-2
在这个例子中
你看到了如何创建一个线程

00:06:29.122 --> 00:06:31.558 align:middle line:-1
在本地通知上设置线程标识符

00:06:32.726 --> 00:06:36.663 align:middle line:-2
你可以在推送有效负载上
设置推送通知

00:06:42.336 --> 00:06:47.140 align:middle line:-2
好 现在让我们来看看
iOS 12中的几个例子

00:06:48.442 --> 00:06:52.112 align:middle line:-2
在我们看这些例子时
请记住最重要的一点

00:06:52.179 --> 00:06:54.348 align:middle line:-1
即通知分组的目标

00:06:54.982 --> 00:07:01.722 align:middle line:-2
通过对通知进行分组
我们希望提高通知效率

00:06:54.982 --> 00:07:01.722 align:middle line:-2
通过对通知进行分组
我们希望提高通知效率

00:07:01.788 --> 00:07:05.025 align:middle line:-2
并改进
Notification Center的组织

00:07:05.359 --> 00:07:09.096 align:middle line:-1
你可能熟悉这种情况

00:07:09.162 --> 00:07:10.531 align:middle line:-1
某个app发送了许多通知

00:07:10.597 --> 00:07:12.366 align:middle line:-1
也许你在app里聊天

00:07:12.933 --> 00:07:16.170 align:middle line:-1
有人发送了大量消息

00:07:16.737 --> 00:07:20.574 align:middle line:-1
我们想通过组织通知来改善这种情况

00:07:20.641 --> 00:07:24.244 align:middle line:-1
以便用户可以更有效地使用它们

00:07:28.382 --> 00:07:30.384 align:middle line:-1
我们的第一个例子是日历

00:07:33.220 --> 00:07:38.292 align:middle line:-2
根据你的生活组织方式或工作地点
日历可能会发送

00:07:38.358 --> 00:07:42.896 align:middle line:-1
很多事件更改及事件邀请的通知

00:07:43.997 --> 00:07:46.967 align:middle line:-1
但并非所有通知都有相同的重要性

00:07:47.034 --> 00:07:49.436 align:middle line:-1
日历发送的有些通知

00:07:49.503 --> 00:07:51.271 align:middle line:-1
比其它通知更重要

00:07:51.772 --> 00:07:53.006 align:middle line:-1
这些是…

00:07:55.175 --> 00:07:58.011 align:middle line:-1
你在创建活动时设置的事件提醒

00:07:58.445 --> 00:08:00.480 align:middle line:-1
或“该走了”通知

00:07:58.445 --> 00:08:00.480 align:middle line:-1
或“该走了”通知

00:08:00.547 --> 00:08:01.682 align:middle line:-1
这些通知更重要

00:08:01.748 --> 00:08:05.752 align:middle line:-1
因为它们提示我现在要采取行动

00:08:05.819 --> 00:08:08.956 align:middle line:-2
如果我收到通知
说我在15分钟内有个会

00:08:09.022 --> 00:08:11.592 align:middle line:-1
我需要开始去赴会

00:08:12.459 --> 00:08:15.329 align:middle line:-1
但许多其他通知

00:08:15.395 --> 00:08:18.732 align:middle line:-1
不需要立即回应

00:08:18.799 --> 00:08:21.768 align:middle line:-1
比如分享日历的更新

00:08:22.169 --> 00:08:24.438 align:middle line:-1
或其他事件的时间变化

00:08:24.505 --> 00:08:27.241 align:middle line:-1
当天晚些时候或某天

00:08:28.442 --> 00:08:30.644 align:middle line:-1
所以分开这两类通知很有用

00:08:31.778 --> 00:08:36.517 align:middle line:-1
日历的作法是用默认组即app组

00:08:36.582 --> 00:08:39.852 align:middle line:-1
处理发送的大部分通知

00:08:40.187 --> 00:08:43.222 align:middle line:-1
实现办法是 对大部分通知

00:08:43.289 --> 00:08:45.459 align:middle line:-1
不设置任何线程标识符

00:08:45.993 --> 00:08:47.628 align:middle line:-1
邮件是默认值

00:08:47.694 --> 00:08:50.297 align:middle line:-1
如果你不设置它 这是默认的群组

00:08:51.532 --> 00:08:55.536 align:middle line:-1
然后 日历设置特定的线程标识符

00:08:55.602 --> 00:08:58.639 align:middle line:-1
仅针对这些更重要的通知

00:08:58.705 --> 00:09:00.207 align:middle line:-1
我们想特别提起注意的通知

00:08:58.705 --> 00:09:00.207 align:middle line:-1
我们想特别提起注意的通知

00:09:02.809 --> 00:09:04.945 align:middle line:-1
结果就是…

00:09:06.146 --> 00:09:11.518 align:middle line:-1
来自日历的大多数通知都是信息更新

00:09:11.985 --> 00:09:15.589 align:middle line:-1
不需要立即做出反应

00:09:15.656 --> 00:09:18.959 align:middle line:-1
或者不需要留给以后参考

00:09:19.026 --> 00:09:22.930 align:middle line:-2
例如提示事件位置的通知
它们就组合在一个组中

00:09:23.764 --> 00:09:26.500 align:middle line:-1
而其他更重要的

00:09:26.567 --> 00:09:29.636 align:middle line:-2
更紧急的
或者需要稍后引用的那些通知

00:09:29.703 --> 00:09:34.107 align:middle line:-2
比如找到会议地点
这些通知是分开的

00:09:37.044 --> 00:09:42.783 align:middle line:-1
我展开一下 看到我的群组还有什么

00:09:44.384 --> 00:09:48.689 align:middle line:-1
这是我们从日历中学到的模式

00:09:49.089 --> 00:09:51.892 align:middle line:-1
把重要且可操作的通知

00:09:51.959 --> 00:09:53.594 align:middle line:-1
与信息更新的通知分隔开

00:09:58.765 --> 00:10:01.368 align:middle line:-1
我们的下一个例子是短信

00:09:58.765 --> 00:10:01.368 align:middle line:-1
我们的下一个例子是短信

00:10:02.703 --> 00:10:04.137 align:middle line:-1
短信可能是

00:10:04.204 --> 00:10:07.841 align:middle line:-1
最简单的通知群组的实现

00:10:08.375 --> 00:10:11.645 align:middle line:-1
显而易见 短信包含对话

00:10:12.212 --> 00:10:14.448 align:middle line:-1
每个对话都有自己的群组

00:10:16.083 --> 00:10:18.585 align:middle line:-1
但我们仍可以学到重要的东西

00:10:18.652 --> 00:10:21.355 align:middle line:-1
我们仍然可以从短信中学习

00:10:21.855 --> 00:10:24.858 align:middle line:-1
为什么短信把所有对话

00:10:24.925 --> 00:10:28.729 align:middle line:-1
分在不同的组中？

00:10:29.730 --> 00:10:31.865 align:middle line:-1
短信发送的通知

00:10:31.932 --> 00:10:34.301 align:middle line:-1
通常来自人

00:10:34.368 --> 00:10:36.136 align:middle line:-1
来自你的朋友和家人

00:10:36.203 --> 00:10:39.806 align:middle line:-1
这些是我们关心并重视的通知

00:10:39.873 --> 00:10:44.211 align:middle line:-1
其次 它们通常是短暂的通知

00:10:44.278 --> 00:10:46.980 align:middle line:-2
因为通常情况下
你会在短信中快速响应

00:10:47.047 --> 00:10:49.716 align:middle line:-1
从而从Notifications Center清除

00:10:51.818 --> 00:10:53.053 align:middle line:-1
短信的做法

00:10:53.120 --> 00:10:57.958 align:middle line:-1
是为这些一对一对话创建一个线程

00:10:58.258 --> 00:11:01.028 align:middle line:-1
它会创建一个单独的通知组

00:10:58.258 --> 00:11:01.028 align:middle line:-1
它会创建一个单独的通知组

00:11:01.094 --> 00:11:03.197 align:middle line:-1
用于群组对话

00:11:03.764 --> 00:11:08.302 align:middle line:-1
只需为该线程生成任何组标识符

00:11:08.368 --> 00:11:09.670 align:middle line:-1
并将它们组合在一起

00:11:13.907 --> 00:11:17.177 align:middle line:-1
我可以展开并看到我的所有消息

00:11:18.645 --> 00:11:21.982 align:middle line:-1
那么我们从短信中学到了什么？

00:11:22.583 --> 00:11:26.186 align:middle line:-1
为有意义的个人通信创建群组

00:11:26.520 --> 00:11:27.855 align:middle line:-1
这些短信通知

00:11:27.921 --> 00:11:30.424 align:middle line:-1
通常很重要

00:11:30.490 --> 00:11:34.628 align:middle line:-2
它们在Notification Center
只短暂存在

00:11:34.695 --> 00:11:38.899 align:middle line:-2
因此
我们为所有这些组创建许多单独的组

00:11:43.170 --> 00:11:44.872 align:middle line:-1
我们的最后一个例子是邮件

00:11:46.507 --> 00:11:47.841 align:middle line:-1
邮件与短信

00:11:48.242 --> 00:11:51.645 align:middle line:-1
有一些相同的特征

00:11:52.145 --> 00:11:56.049 align:middle line:-1
它们都经常是人与人的直接沟通

00:11:56.583 --> 00:12:02.589 align:middle line:-1
二者有类似的概念

00:11:56.583 --> 00:12:02.589 align:middle line:-1
二者有类似的概念

00:12:03.490 --> 00:12:04.758 align:middle line:-1
如线程及对话

00:12:05.993 --> 00:12:10.030 align:middle line:-1
但邮件和短信之间存在一些重大差异

00:12:10.564 --> 00:12:15.102 align:middle line:-1
邮件的通知数量可能高于短信

00:12:15.669 --> 00:12:20.274 align:middle line:-2
另一方面
邮件通知的有效期也可能更长

00:12:21.608 --> 00:12:26.246 align:middle line:-1
邮件通常用于较慢的通信

00:12:26.313 --> 00:12:29.483 align:middle line:-1
一般不需立即回应

00:12:30.651 --> 00:12:31.485 align:middle line:-1
所以

00:12:31.718 --> 00:12:38.125 align:middle line:-1
按线程组织邮件通知并不理想

00:12:38.192 --> 00:12:42.095 align:middle line:-2
这将在Notification Center中
创建很多线程

00:12:42.162 --> 00:12:46.200 align:middle line:-1
这样的UI效率不高

00:12:46.266 --> 00:12:51.471 align:middle line:-1
邮件提供了特定UI显示邮件线程

00:12:52.573 --> 00:12:55.843 align:middle line:-1
那么 邮件如何组织其通知？

00:12:57.344 --> 00:13:02.115 align:middle line:-1
首先 邮件提供了一些邮件到达时

00:12:57.344 --> 00:13:02.115 align:middle line:-1
首先 邮件提供了一些邮件到达时

00:13:02.182 --> 00:13:03.917 align:middle line:-1
已有的组织的功能

00:13:03.984 --> 00:13:05.586 align:middle line:-1
和优先处理功能

00:13:07.020 --> 00:13:10.858 align:middle line:-2
邮件提供单独的帐户
你可以拥有并在你的设备中

00:13:10.924 --> 00:13:12.292 align:middle line:-1
设置许多不同的帐户

00:13:13.026 --> 00:13:17.931 align:middle line:-2
提供VIP功能
你可以将任何联系人设置为VIP

00:13:18.999 --> 00:13:21.702 align:middle line:-1
你可以设收藏夹

00:13:22.336 --> 00:13:25.372 align:middle line:-1
你也可以在邮件客户端

00:13:25.439 --> 00:13:27.341 align:middle line:-1
打开特定线程的通知

00:13:28.876 --> 00:13:32.513 align:middle line:-1
所以似乎用户已经在告诉我们

00:13:32.579 --> 00:13:36.083 align:middle line:-1
哪些通知和邮件更重要

00:13:36.149 --> 00:13:37.851 align:middle line:-1
哪些不太重要

00:13:37.918 --> 00:13:39.319 align:middle line:-1
这就是邮件所做的

00:13:39.786 --> 00:13:46.093 align:middle line:-1
邮件首先从帐号组开始组织通知

00:13:46.426 --> 00:13:48.862 align:middle line:-1
它为所有投递给特定帐号的邮件

00:13:48.929 --> 00:13:50.964 align:middle line:-1
创建一个大帐号

00:13:51.732 --> 00:13:55.169 align:middle line:-2
如果我有多个帐号
每个帐号都会拥有自己的群组

00:13:56.603 --> 00:13:57.437 align:middle line:-1
然而

00:13:58.572 --> 00:14:03.243 align:middle line:-2
如果我的VIP联系人
向该帐号发送邮件

00:13:58.572 --> 00:14:03.243 align:middle line:-2
如果我的VIP联系人
向该帐号发送邮件

00:14:03.844 --> 00:14:07.047 align:middle line:-1
该邮件会被分到另一个群组

00:14:07.748 --> 00:14:09.516 align:middle line:-1
因为我指定了那是VIP

00:14:09.583 --> 00:14:13.487 align:middle line:-2
当VIP发送电子邮件时
我希望

00:14:13.554 --> 00:14:14.655 align:middle line:-1
立即得到通知

00:14:16.089 --> 00:14:21.128 align:middle line:0
而且如果我打开邮件内
某些特定线程的通知

00:14:21.795 --> 00:14:25.399 align:middle line:0
它们也会分离到自己的小组中

00:14:29.102 --> 00:14:32.840 align:middle line:-1
所以你看到虽然邮件与短信

00:14:32.906 --> 00:14:36.710 align:middle line:-1
在某些特征上类似

00:14:37.177 --> 00:14:39.780 align:middle line:-1
它们分组通知的方法略有不同

00:14:39.847 --> 00:14:42.950 align:middle line:-1
因为它们使用通知的方法

00:14:43.016 --> 00:14:44.818 align:middle line:-1
及处理的内容不同

00:14:46.520 --> 00:14:49.223 align:middle line:-1
那么 这里邮件在告诉我们什么？

00:14:49.723 --> 00:14:52.726 align:middle line:-1
尊重用户的优先级设定和组织

00:14:53.093 --> 00:14:58.031 align:middle line:-1
邮件具有组织和确定优先级的功能

00:14:58.332 --> 00:15:02.469 align:middle line:-1
我们可以用它来组织邮件发送的通知

00:14:58.332 --> 00:15:02.469 align:middle line:-1
我们可以用它来组织邮件发送的通知

00:15:05.572 --> 00:15:10.177 align:middle line:-1
（通知组摘要）

00:15:10.244 --> 00:15:15.015 align:middle line:-1
我们已看到了如何创建任意数量的组

00:15:16.817 --> 00:15:21.321 align:middle line:-2
我们来看看
如何通过在组内提供一些信息

00:15:21.388 --> 00:15:24.124 align:middle line:-1
描述它们包含的内容

00:15:25.692 --> 00:15:28.328 align:middle line:-1
而使这些群组更加清晰

00:15:30.864 --> 00:15:35.035 align:middle line:-2
这些例子是我上周的
Notification Center

00:15:35.669 --> 00:15:38.505 align:middle line:-2
这里我们看到
每个小组底部有一个简短的摘要

00:15:38.639 --> 00:15:41.108 align:middle line:-1
了该组的内容略作解释

00:15:41.642 --> 00:15:46.180 align:middle line:-2
例如 邮件说
我的工作帐户中有几封电子邮件

00:15:47.414 --> 00:15:50.384 align:middle line:-1
播客说我有一堆新剧集

00:15:50.450 --> 00:15:54.354 align:middle line:-1
已发送到我的播客app以收听

00:15:56.523 --> 00:15:58.192 align:middle line:0
而新闻告诉我

00:15:58.258 --> 00:16:01.428 align:middle line:0
我有九个
来自《国家地理》杂志的通知

00:15:58.258 --> 00:16:01.428 align:middle line:0
我有九个
来自《国家地理》杂志的通知

00:16:05.165 --> 00:16:07.634 align:middle line:0
让我们稍加探讨一下

00:16:07.701 --> 00:16:12.506 align:middle line:-2
如果你不自定义摘要
我们在组中设置了默认消息

00:16:12.573 --> 00:16:14.474 align:middle line:-1
说你还有九个通知

00:16:15.108 --> 00:16:19.313 align:middle line:-1
但我们可以更好地描述这些内容

00:16:19.379 --> 00:16:22.316 align:middle line:-2
例如 如果你有一个
发送消息的app

00:16:22.883 --> 00:16:27.621 align:middle line:-1
你可能想说你正在发送九条消息

00:16:28.355 --> 00:16:29.189 align:middle line:-1
怎样做到这个？

00:16:30.991 --> 00:16:34.294 align:middle line:-1
第一件事就是选择摘要格式

00:16:34.361 --> 00:16:35.562 align:middle line:-1
这是一个格式字符串

00:16:36.029 --> 00:16:39.633 align:middle line:-1
只是用数字占位符描述你的内容

00:16:39.700 --> 00:16:42.669 align:middle line:-2
正如我们在这里看到的
数字 更多消息

00:16:44.137 --> 00:16:48.342 align:middle line:-1
然后在通知类别中设置

00:16:49.243 --> 00:16:51.245 align:middle line:-1
你将用于发送通知的格式字符串

00:16:54.548 --> 00:16:57.618 align:middle line:-1
注意 摘要格式是在类别上设置的

00:16:57.684 --> 00:17:00.988 align:middle line:-1
而线程是在通知内容上设置的

00:16:57.684 --> 00:17:00.988 align:middle line:-1
而线程是在通知内容上设置的

00:17:01.054 --> 00:17:03.590 align:middle line:-1
这是因为如你所知 类别

00:17:03.657 --> 00:17:09.429 align:middle line:-2
指的是类型
是你发送的类似的通知组

00:17:09.930 --> 00:17:12.499 align:middle line:-1
例如 短信有不同的类别

00:17:12.566 --> 00:17:16.837 align:middle line:-1
用于一对一对话和群组对话

00:17:16.904 --> 00:17:19.239 align:middle line:-1
这意味着这两个类别

00:17:19.306 --> 00:17:20.807 align:middle line:-1
可以设置不同的摘要

00:17:21.074 --> 00:17:23.911 align:middle line:-1
这就是在类别中设置摘要格式的原因

00:17:27.714 --> 00:17:28.949 align:middle line:-1
当你在这里时

00:17:29.016 --> 00:17:32.886 align:middle line:-1
更新通知组的通知类别

00:17:32.953 --> 00:17:37.024 align:middle line:-2
你也可以设置这个
hiddenPreviewsPlaceholder属性

00:17:37.824 --> 00:17:41.995 align:middle line:-1
与我们用于通知组的摘要非常相似

00:17:42.596 --> 00:17:46.767 align:middle line:-2
这两者之间的主要区
别在于它们的使用环境

00:17:47.534 --> 00:17:49.837 align:middle line:-2
hiddenPreviewsPlaceholder
不是新功能

00:17:49.903 --> 00:17:53.006 align:middle line:-2
这是我们去年在iOS 11中
推出的一项功能

00:17:53.640 --> 00:17:57.778 align:middle line:-1
它会自定义显示的文本

00:17:57.845 --> 00:18:02.282 align:middle line:-2
而不是用户将其通知
设置为私有时的通知

00:17:57.845 --> 00:18:02.282 align:middle line:-2
而不是用户将其通知
设置为私有时的通知

00:18:02.716 --> 00:18:07.855 align:middle line:-2
如果我将通知设置为私有
我说九条短信

00:18:08.255 --> 00:18:11.258 align:middle line:-1
但是 当我作身份验证并解锁设备时

00:18:11.325 --> 00:18:14.695 align:middle line:-1
我可以在下面看到展开的通知和摘要

00:18:14.928 --> 00:18:17.164 align:middle line:-1
说还有八条短信

00:18:17.397 --> 00:18:21.768 align:middle line:-1
这就是为什么摘要格式包含更多消息

00:18:21.969 --> 00:18:25.806 align:middle line:-1
但预览占位符仅包含短信数

00:18:31.411 --> 00:18:36.283 align:middle line:-1
这就是摘要的基本设置

00:18:36.750 --> 00:18:38.952 align:middle line:-1
但是群组对话的消息

00:18:39.019 --> 00:18:43.590 align:middle line:-2
有一个更有趣的摘要
其中显示了短信的数量

00:18:43.657 --> 00:18:45.492 align:middle line:-1
还有在那个线程 那个对话

00:18:45.559 --> 00:18:49.997 align:middle line:-1
发短信的人

00:18:51.064 --> 00:18:53.934 align:middle line:-2
我们不能用刚刚指定的格式
来做到这个

00:18:54.001 --> 00:18:56.737 align:middle line:-1
因为它只有一个数字占位符

00:18:57.604 --> 00:19:02.142 align:middle line:-2
所以 我们要做的是
创建一个不同的摘要格式

00:18:57.604 --> 00:19:02.142 align:middle line:-2
所以 我们要做的是
创建一个不同的摘要格式

00:19:02.442 --> 00:19:09.149 align:middle line:-1
包含数字占位符和字符串占位符

00:19:09.216 --> 00:19:13.287 align:middle line:-2
如你所见
数字更多来自字符串的消息

00:19:13.620 --> 00:19:16.390 align:middle line:-1
我们将把第二个占位符

00:19:16.456 --> 00:19:19.359 align:middle line:-1
以通知中的名称列表来替换

00:19:21.161 --> 00:19:23.430 align:middle line:-1
仍然在类别中设置摘要格式

00:19:24.431 --> 00:19:26.800 align:middle line:-1
然后我们必须收集这些名称

00:19:28.602 --> 00:19:33.607 align:middle line:-2
要发送这些名称
再次在通知内容中进行设置

00:19:33.674 --> 00:19:36.310 align:middle line:-1
因为每个通知都可以由不同的人发送

00:19:36.376 --> 00:19:37.911 align:middle line:-1
可以是不同的名字

00:19:40.581 --> 00:19:42.983 align:middle line:-1
所以 我们收集所有这些名字

00:19:43.650 --> 00:19:48.889 align:middle line:-1
在字符串中构建并在摘要中替换它们

00:19:48.956 --> 00:19:53.427 align:middle line:-1
当然 推送有效负载也支持摘要参数

00:19:54.795 --> 00:19:59.199 align:middle line:-1
这就是我们收集所有名称后的摘要

00:19:59.266 --> 00:20:01.235 align:middle line:-1
并在摘要参数中设定其格式

00:19:59.266 --> 00:20:01.235 align:middle line:-1
并在摘要参数中设定其格式

00:20:06.373 --> 00:20:08.075 align:middle line:-1
名称不必是唯一的

00:20:08.141 --> 00:20:12.079 align:middle line:-1
你可以用同一个名称发送许多通知

00:20:12.479 --> 00:20:18.252 align:middle line:-2
例如 在邮件案例中
所有通知都具有相同的名称

00:20:18.318 --> 00:20:20.087 align:middle line:-1
因为它们都在同一个帐号中

00:20:20.153 --> 00:20:22.356 align:middle line:-1
我们将删除重复数据

00:20:22.422 --> 00:20:26.693 align:middle line:-1
并且只显示每个可见名称的一个实例

00:20:32.199 --> 00:20:34.868 align:middle line:-1
下一个例子是播客

00:20:35.302 --> 00:20:38.939 align:middle line:-2
播客向我们展示了
此API的另一小细节

00:20:40.274 --> 00:20:42.242 align:middle line:-1
此通知有什么特别之处？

00:20:42.843 --> 00:20:44.945 align:middle line:-1
在此通知中 播客说

00:20:45.012 --> 00:20:51.451 align:middle line:-1
我的主要通知播客中有两集新剧

00:20:53.554 --> 00:20:56.123 align:middle line:-1
总结说众多节目中

00:20:56.190 --> 00:20:57.925 align:middle line:-1
还有七集

00:20:58.792 --> 00:21:00.727 align:middle line:-1
当我扩展这个群体时会发生什么？

00:20:58.792 --> 00:21:00.727 align:middle line:-1
当我扩展这个群体时会发生什么？

00:21:03.564 --> 00:21:07.534 align:middle line:-1
群组中只有三个外部通知

00:21:07.768 --> 00:21:11.572 align:middle line:-2
不像总结说的那样是7个
在之前的例子中

00:21:11.638 --> 00:21:15.676 align:middle line:-1
摘要中的数量

00:21:15.742 --> 00:21:17.144 align:middle line:-1
与组内通知数量相匹配

00:21:18.278 --> 00:21:19.713 align:middle line:-1
那么这是怎么回事？

00:21:21.181 --> 00:21:24.952 align:middle line:-1
因为播客集中这些通知

00:21:25.018 --> 00:21:28.388 align:middle line:-1
并在一个节目发布多集时

00:21:28.789 --> 00:21:31.124 align:middle line:-1
试图限制发送的通知数量

00:21:31.191 --> 00:21:34.595 align:middle line:-1
同时 它有这些通知说

00:21:34.661 --> 00:21:37.364 align:middle line:-2
“有两集新剧集选择
有三集新剧集选择”

00:21:38.565 --> 00:21:43.670 align:middle line:-2
如果你把底部三个通知中的剧集
数量加起来

00:21:43.737 --> 00:21:46.306 align:middle line:-1
这就是摘要所算的

00:21:46.373 --> 00:21:47.975 align:middle line:-1
你可以看到总数是7

00:21:49.676 --> 00:21:52.012 align:middle line:-1
让我们看看这个API是如何工作的

00:21:53.447 --> 00:21:56.583 align:middle line:-1
这只是通知内容的另一个属性

00:21:56.650 --> 00:21:59.052 align:middle line:-1
称为summaryArgumentCount

00:22:00.020 --> 00:22:03.123 align:middle line:-1
此数字表示

00:22:03.190 --> 00:22:06.894 align:middle line:-1
在摘要中摘要参数的计数

00:22:08.328 --> 00:22:12.900 align:middle line:-1
我们将再次收集所有名称

00:22:12.966 --> 00:22:16.203 align:middle line:-1
我们将统计所有计数 创建摘要

00:22:17.304 --> 00:22:20.707 align:middle line:-1
正如我们所看到的 这个通知会有

00:22:21.141 --> 00:22:25.179 align:middle line:-2
summaryArgumentCount计数
三 一 三 总计为七

00:22:25.746 --> 00:22:28.048 align:middle line:-1
这就是我们展示的摘要

00:22:30.384 --> 00:22:31.685 align:middle line:-1
而且和其它部分一样

00:22:31.752 --> 00:22:34.221 align:middle line:-1
你当然可以在推送有效负载中设置它

00:22:38.225 --> 00:22:42.829 align:middle line:-2
summaryArgumentCount
是可选的 默认为1

00:22:42.896 --> 00:22:46.533 align:middle line:-2
因此你只有对通知
进行此类捆绑时才需要设置

00:22:46.600 --> 00:22:47.968 align:middle line:-1
而非任何时候都需要设置

00:22:50.537 --> 00:22:53.841 align:middle line:-1
（摘要复数和本地化）

00:22:53.907 --> 00:22:59.246 align:middle line:-1
现在 我们正在玩文字 建句子

00:22:59.313 --> 00:23:05.285 align:middle line:-2
而且这时
你一直需要考虑不同的语言

00:22:59.313 --> 00:23:05.285 align:middle line:-2
而且这时
你一直需要考虑不同的语言

00:23:05.652 --> 00:23:09.089 align:middle line:-2
并且在这种情况下需要考虑复数
因为有数字

00:23:12.059 --> 00:23:14.294 align:middle line:-1
另一个播客通知

00:23:14.361 --> 00:23:17.431 align:middle line:-2
例如 在这种情况下
它说“还有四集”

00:23:17.865 --> 00:23:22.536 align:middle line:-2
但如果我只有一集
那个字符串就需要用单数

00:23:23.270 --> 00:23:25.873 align:middle line:-1
但API只允许我们设置一个字符串

00:23:27.207 --> 00:23:28.242 align:middle line:-1
而我们需要两个

00:23:29.710 --> 00:23:31.011 align:middle line:-1
你需要两个的英语表述

00:23:31.712 --> 00:23:36.283 align:middle line:-1
但是如果你想本地化你的app

00:23:36.350 --> 00:23:38.185 align:middle line:-1
或者如果你的主要语言不是英语

00:23:38.252 --> 00:23:40.521 align:middle line:-1
你正在为不同的语言做开发

00:23:41.054 --> 00:23:44.458 align:middle line:-1
某些语言对复数有不同的规则

00:23:44.525 --> 00:23:47.060 align:middle line:-2
也许它们没有两个形式
而可能有三个

00:23:47.828 --> 00:23:50.430 align:middle line:-1
它们可能会有适用不同规则的形式

00:23:51.565 --> 00:23:55.169 align:middle line:-2
iOS
在Foundation框架中

00:23:55.235 --> 00:23:58.805 align:middle line:-1
提供了对本地化这类字符串的支持

00:23:58.872 --> 00:24:02.242 align:middle line:-1
所以你不需要学习所有的规则

00:23:58.872 --> 00:24:02.242 align:middle line:-1
所以你不需要学习所有的规则

00:24:02.309 --> 00:24:04.912 align:middle line:-2
你不需要知道
你要将你的app翻译成的所有语言

00:24:05.746 --> 00:24:11.018 align:middle line:-1
采用和翻译每个字符串非常简单

00:24:11.084 --> 00:24:12.819 align:middle line:-1
拥有正确的复数形式

00:24:18.625 --> 00:24:23.063 align:middle line:-1
我们需要做的第一件事就是采用

00:24:23.130 --> 00:24:28.669 align:middle line:-2
这“修复我们的复数问题”
是将摘要格式中的

00:24:28.735 --> 00:24:32.639 align:middle line:-1
文字字符串用本地化字符串代替

00:24:34.007 --> 00:24:36.476 align:middle line:-1
并请记住 在这里 你需要使用

00:24:36.543 --> 00:24:39.980 align:middle line:-2
我们针对本地化字符串的
特殊通知API

00:24:40.547 --> 00:24:45.652 align:middle line:-2
因为我们需要存储这个本地化的
字符串并将其放在一边

00:24:46.186 --> 00:24:51.058 align:middle line:-1
因为如果系统语言稍后发生变化

00:24:51.325 --> 00:24:54.695 align:middle line:-2
如果你发送通知
我们会发送系统本地化更改后

00:24:54.761 --> 00:24:57.331 align:middle line:-1
正确的本地化信息

00:25:00.000 --> 00:25:04.538 align:middle line:-2
因此 在这里设置本地化字符串后
你需要本地化字符串

00:25:05.606 --> 00:25:10.878 align:middle line:-2
并在字符串dict文件中
本地化字符串

00:25:11.411 --> 00:25:14.381 align:middle line:-2
字符串dict文件
是一个属性列表文件

00:25:14.448 --> 00:25:20.287 align:middle line:-1
它描述性能字符串和配置字典

00:25:20.654 --> 00:25:22.623 align:middle line:-1
这个文件在底部的配置字典中

00:25:22.689 --> 00:25:28.695 align:middle line:-1
你会看到英文单数和复数的两个版本

00:25:29.463 --> 00:25:32.933 align:middle line:-1
如我所说 要想支持其他语言

00:25:33.000 --> 00:25:37.771 align:middle line:0
和不同的复数规则
你要做的就是改变这个dict文件

00:25:37.871 --> 00:25:38.906 align:middle line:0
你创建一个新文件

00:25:38.972 --> 00:25:44.178 align:middle line:0
希伯来语有三种不同的复数形式

00:25:44.645 --> 00:25:49.149 align:middle line:0
俄语有三种复数 与希伯来语亦不同

00:25:49.249 --> 00:25:52.586 align:middle line:0
而且你不需要知道何时使用哪一个

00:25:52.653 --> 00:25:54.955 align:middle line:0
若你用我们提供的
Foundation API

00:25:57.057 --> 00:26:01.428 align:middle line:0
这是我们刚刚看到的简单摘要格式

00:25:57.057 --> 00:26:01.428 align:middle line:0
这是我们刚刚看到的简单摘要格式

00:26:02.029 --> 00:26:07.267 align:middle line:-1
当然我们也可以使用参数格式化摘要

00:26:08.101 --> 00:26:12.840 align:middle line:-1
你看 我们在顶部定义了格式字符串

00:26:13.473 --> 00:26:17.611 align:middle line:-1
我们需要按键匹配配置字典

00:26:18.712 --> 00:26:22.716 align:middle line:-1
在下面 我们为两个不同的版本

00:26:23.383 --> 00:26:25.886 align:middle line:-1
用数字占位符指定了两个字符串

00:26:25.953 --> 00:26:29.990 align:middle line:-1
以及我们将提供名称的列表的占位符

00:26:35.028 --> 00:26:35.863 align:middle line:-1
所以…

00:26:36.663 --> 00:26:38.432 align:middle line:-1
因为我们正在交换

00:26:38.799 --> 00:26:42.836 align:middle line:-1
app和系统之间的这些格式字符串

00:26:43.203 --> 00:26:45.339 align:middle line:-1
这些实际上是API的一部分

00:26:45.606 --> 00:26:50.277 align:middle line:-1
因此 我们可以支持的格式数量有限

00:26:51.411 --> 00:26:53.113 align:middle line:-1
我们需要就这些达成一致

00:26:53.547 --> 00:26:56.250 align:middle line:-2
这就是我在这些例子中
展示的那些格式

00:26:56.817 --> 00:27:01.555 align:middle line:-1
第一个是当你不需要参数时

00:26:56.817 --> 00:27:01.555 align:middle line:-1
第一个是当你不需要参数时

00:27:02.022 --> 00:27:04.057 align:middle line:-1
带有一个数字占位符的格式

00:27:04.124 --> 00:27:07.561 align:middle line:-1
你需要指定一个无符号数字

00:27:09.096 --> 00:27:11.899 align:middle line:-1
你可以使用的第二种格式

00:27:11.965 --> 00:27:16.236 align:middle line:-2
是有数字占位符
和字符串占位符的那个

00:27:16.803 --> 00:27:22.176 align:middle line:-2
我们将自动检测你正在使用的字符串
并赋予正确格式

00:27:26.213 --> 00:27:27.381 align:middle line:-1
（快速提示）

00:27:27.447 --> 00:27:32.152 align:middle line:-1
现在我们都完成了通知分组的功能

00:27:32.553 --> 00:27:35.822 align:middle line:-2
但在你离场之前
我想再给你一点

00:27:36.356 --> 00:27:38.625 align:middle line:-1
关于通知分组和这些API的提示

00:27:38.692 --> 00:27:43.230 align:middle line:-2
这将帮你完成app中的
最后一点美化

00:27:45.699 --> 00:27:50.437 align:middle line:-1
第一步是组合不同的摘要

00:27:52.573 --> 00:27:55.676 align:middle line:-1
我们看到你可以

00:27:55.742 --> 00:28:00.747 align:middle line:-1
在不同的类别中设置不同的摘要

00:27:55.742 --> 00:28:00.747 align:middle line:-1
在不同的类别中设置不同的摘要

00:28:00.814 --> 00:28:04.318 align:middle line:-1
并在通知内容中并定义线程组

00:28:04.384 --> 00:28:08.322 align:middle line:-2
表示你可以在同一组通知中
混合不同摘要

00:28:08.655 --> 00:28:13.093 align:middle line:-2
当你这样做时会发生什么？
两类主要结果

00:28:13.727 --> 00:28:19.766 align:middle line:-2
如果该组中的任何摘要都没有参数
我们将尝试

00:28:20.267 --> 00:28:23.370 align:middle line:-1
合并列表中的所有摘要并这样显示

00:28:24.505 --> 00:28:28.876 align:middle line:-1
但是如果组内任何通知摘要

00:28:28.942 --> 00:28:31.678 align:middle line:-1
有任何参数

00:28:32.179 --> 00:28:34.948 align:middle line:-1
我们将不得不回到默认消息

00:28:40.587 --> 00:28:45.125 align:middle line:0
第二个提示是关于丰富的通知和组

00:28:46.393 --> 00:28:50.564 align:middle line:0
我们不久前在iOS中
引入了丰富的通知

00:28:51.198 --> 00:28:54.601 align:middle line:0
它们与群组通知可同时工作

00:28:55.269 --> 00:29:00.674 align:middle line:0
当用户按下某个组
以查看丰富的通知时

00:28:55.269 --> 00:29:00.674 align:middle line:0
当用户按下某个组
以查看丰富的通知时

00:29:00.741 --> 00:29:03.744 align:middle line:0
将加载该群组的内容扩展程序

00:29:03.810 --> 00:29:07.047 align:middle line:0
你的通知

00:29:07.381 --> 00:29:09.716 align:middle line:0
将被主要通知加载

00:29:09.783 --> 00:29:13.787 align:middle line:0
显示在顶部的那个

00:29:13.854 --> 00:29:17.090 align:middle line:0
用通常的didReceive Notification
API 你将在通知中收到它

00:29:20.894 --> 00:29:25.399 align:middle line:0
加载扩展程序后
你可以加载其他通知

00:29:25.499 --> 00:29:27.801 align:middle line:0
例如 组中的相同通知

00:29:28.402 --> 00:29:30.070 align:middle line:0
或者如果你想显示不同的内容

00:29:30.137 --> 00:29:31.905 align:middle line:0
你也可以使用自己的API加载它

00:29:35.475 --> 00:29:38.846 align:middle line:0
当你的扩展程序打开且运行时

00:29:38.912 --> 00:29:42.182 align:middle line:0
如果其他通知发送到同一组

00:29:42.416 --> 00:29:44.351 align:middle line:0
它们有相同的线程标识符

00:29:44.418 --> 00:29:48.288 align:middle line:0
将和开始时一样
用didReceive Notification方法

00:29:48.355 --> 00:29:52.426 align:middle line:0
被发送到你的内容扩展程序

00:29:56.597 --> 00:30:02.369 align:middle line:0
最后 如果你已经通过
从递送通知中加载的方法

00:29:56.597 --> 00:30:02.369 align:middle line:0
最后 如果你已经通过
从递送通知中加载的方法

00:30:02.436 --> 00:30:05.906 align:middle line:0
或从你自己的API加载

00:30:06.139 --> 00:30:08.809 align:middle line:0
向用户显示了额外的通知

00:30:08.876 --> 00:30:11.645 align:middle line:0
你该从Notification Center中
删除它们

00:30:11.879 --> 00:30:17.284 align:middle line:0
继续保持Notification Center的
有序性和效率

00:30:18.585 --> 00:30:21.455 align:middle line:0
我想回顾一下我们谈到的内容

00:30:22.389 --> 00:30:24.992 align:middle line:-1
这是一段很长的谈话 有很多细节

00:30:25.058 --> 00:30:28.562 align:middle line:-1
但我只希望你记住两件非常重要的事

00:30:29.363 --> 00:30:32.366 align:middle line:-1
第一个是通知分组的目标

00:30:32.733 --> 00:30:37.404 align:middle line:-2
通知分组的目标是更好地组织
Notification Center

00:30:37.471 --> 00:30:42.309 align:middle line:-1
并帮你的用户在使用通知时提高效率

00:30:42.543 --> 00:30:45.846 align:middle line:-1
这将帮助他们对通知进行分类

00:30:45.913 --> 00:30:49.349 align:middle line:-2
并让他们更快地接收重要信息
更好地做出反应

00:30:50.717 --> 00:30:55.489 align:middle line:-1
我希望你记住的第二件事

00:30:55.556 --> 00:30:58.759 align:middle line:-1
是添加自定义摘要以提高清晰度

00:30:59.293 --> 00:31:03.063 align:middle line:-2
正如你在我的示例中所看到的
例如播客或邮件

00:30:59.293 --> 00:31:03.063 align:middle line:-2
正如你在我的示例中所看到的
例如播客或邮件

00:31:03.764 --> 00:31:09.136 align:middle line:-1
通知组下方的一小段文字有助于

00:31:09.203 --> 00:31:11.138 align:middle line:-1
查看该组中还有哪些新通知

00:31:11.205 --> 00:31:13.774 align:middle line:-1
而且我不需要打开通知群组

00:31:13.841 --> 00:31:16.710 align:middle line:-1
来查看所有有关内容

00:31:16.777 --> 00:31:19.913 align:middle line:-1
摘要已经提供了一些信息

00:31:21.081 --> 00:31:25.886 align:middle line:0
我们将在本次会议结束后不久
在楼下有个实验室

00:31:26.253 --> 00:31:30.824 align:middle line:0
明早我们将有另一个实验室
我们期待与你交谈

00:31:31.725 --> 00:31:35.395 align:middle line:0
周五还有另一场关于通知的会议

00:31:35.462 --> 00:31:38.365 align:middle line:0
更多地讨论设计方面的问题

00:31:38.432 --> 00:31:41.802 align:middle line:0
及如何跨所有用户设备和不同系统

00:31:41.869 --> 00:31:45.272 align:middle line:0
全局化考虑你的通知

00:31:47.441 --> 00:31:49.877 align:middle line:-1
非常感谢 再见
