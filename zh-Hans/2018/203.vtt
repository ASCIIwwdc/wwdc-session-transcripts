WEBVTT

00:00:07.516 --> 00:00:21.106 A:middle
[ 音乐 ]

00:00:21.606 --> 00:00:22.216 A:middle
&gt;&gt; 大家好

00:00:22.216 --> 00:00:23.846 A:middle
早上好

00:00:24.516 --> 00:00:28.036 A:middle
[ 掌声 ]

00:00:28.536 --> 00:00:30.136 A:middle
感谢大家今天的到来

00:00:30.376 --> 00:00:31.516 A:middle
我叫 Jesse Pease

00:00:31.516 --> 00:00:32.476 A:middle
是一名来自

00:00:32.476 --> 00:00:33.666 A:middle
Health Engineering 团队的工程师

00:00:34.036 --> 00:00:35.266 A:middle
今天 我将向大家展示

00:00:35.266 --> 00:00:37.606 A:middle
如何制作自己的第一个 App

00:00:38.516 --> 00:00:40.286 A:middle
今天 我们将踏出

00:00:40.286 --> 00:00:41.256 A:middle
自己的舒适圈

00:00:41.516 --> 00:00:42.736 A:middle
我们将要去探索

00:00:43.006 --> 00:00:44.006 A:middle
我们将要去开发

00:00:44.006 --> 00:00:44.866 A:middle
一款你梦想中的 App

00:00:45.506 --> 00:00:47.316 A:middle
还记得那个早上排队买咖啡时

00:00:47.316 --> 00:00:49.016 A:middle
在你脑海深处迸发的灵感

00:00:49.566 --> 00:00:50.716 A:middle
又或者是来参加 WWDC 的飞机上

00:00:50.716 --> 00:00:53.096 A:middle
你在餐巾纸上描绘的草图

00:00:53.896 --> 00:00:54.746 A:middle
还是那个

00:00:54.746 --> 00:00:55.676 A:middle
你叫朋友们

00:00:55.676 --> 00:00:57.256 A:middle
一定要保密的好点子

00:00:58.136 --> 00:00:59.446 A:middle
就是它 这个想法

00:00:59.446 --> 00:01:03.286 A:middle
就是我们今天要探讨的

00:00:59.446 --> 00:01:03.286 A:middle
就是我们今天要探讨的

00:01:03.466 --> 00:01:05.016 A:middle
Joseph Chilton Pearce 曾经说过

00:01:05.385 --> 00:01:07.106 A:middle
“如果想要充满创意的生活

00:01:07.106 --> 00:01:08.346 A:middle
就一定要摆脱对错误的恐惧”

00:01:09.166 --> 00:01:10.286 A:middle
当我们尝试新想法时

00:01:10.286 --> 00:01:11.986 A:middle
遇到阻碍

00:01:11.986 --> 00:01:12.836 A:middle
是在所难免的

00:01:13.286 --> 00:01:14.836 A:middle
但是我们今天的目的是向大家展示

00:01:14.836 --> 00:01:16.126 A:middle
将梦想中的 App 化为现实

00:01:16.126 --> 00:01:18.286 A:middle
所需要的基本要素

00:01:18.286 --> 00:01:21.386 A:middle
首先我们要

00:01:21.386 --> 00:01:22.976 A:middle
组织自己的想法

00:01:23.686 --> 00:01:24.696 A:middle
其次我们要学会

00:01:24.696 --> 00:01:25.546 A:middle
如何操作 Xcode

00:01:25.546 --> 00:01:27.776 A:middle
然后使用 Swift

00:01:27.976 --> 00:01:28.526 A:middle
制作一个简单的游戏

00:01:29.266 --> 00:01:30.546 A:middle
如果你对一个编程语言很熟悉

00:01:30.546 --> 00:01:32.366 A:middle
那将对你的帮助很大

00:01:32.986 --> 00:01:34.206 A:middle
但是如果你是个 Swift 新手

00:01:34.206 --> 00:01:35.516 A:middle
想要找一些学习资源

00:01:35.806 --> 00:01:37.296 A:middle
我建议你

00:01:37.456 --> 00:01:39.146 A:middle
从 Apple 书店下载一本

00:01:39.146 --> 00:01:40.036 A:middle
“App Development with Swift”

00:01:40.456 --> 00:01:41.486 A:middle
或者下载一个 iPad App

00:01:41.486 --> 00:01:44.506 A:middle
“Swift Playgrounds”

00:01:44.716 --> 00:01:46.026 A:middle
一会儿 [ 音质不清晰 ] 将会

00:01:46.026 --> 00:01:47.696 A:middle
给大家展示

00:01:47.696 --> 00:01:49.286 A:middle
如何在一个 App 里添加多个视图

00:01:49.286 --> 00:01:50.856 A:middle
能够持续为用户

00:01:50.856 --> 00:01:52.496 A:middle
展示数据

00:01:53.716 --> 00:01:55.046 A:middle
我和 Tono [音译] 最近去了

00:01:55.046 --> 00:01:56.806 A:middle
一个独角兽动物园

00:01:57.316 --> 00:01:58.806 A:middle
没错 我们加州的确有这样的地方

00:01:58.806 --> 00:02:02.516 A:middle
在经历了漫无止境的

00:01:58.806 --> 00:02:02.516 A:middle
在经历了漫无止境的

00:02:02.516 --> 00:02:03.336 A:middle
排队等待后

00:02:03.716 --> 00:02:04.956 A:middle
我们觉得

00:02:04.956 --> 00:02:06.016 A:middle
需要做出点东西

00:02:06.016 --> 00:02:07.116 A:middle
来填补这些等待时光

00:02:07.706 --> 00:02:08.966 A:middle
所以我们决定做一款游戏

00:02:09.446 --> 00:02:11.106 A:middle
一款上手快 又有趣的游戏

00:02:11.106 --> 00:02:12.806 A:middle
来填补我们的碎片时间

00:02:13.526 --> 00:02:14.726 A:middle
我对他说 “如果我们要做一款游戏

00:02:14.726 --> 00:02:16.526 A:middle
游戏里当然一定要有独角兽”

00:02:17.576 --> 00:02:18.566 A:middle
但是我们也需要一些

00:02:18.566 --> 00:02:20.006 A:middle
人们避之不及的元素

00:02:20.666 --> 00:02:21.726 A:middle
比如说 大便

00:02:22.176 --> 00:02:25.296 A:middle
所以我们就决定去做一款

00:02:25.296 --> 00:02:26.636 A:middle
同时有独角兽和大便的

00:02:26.636 --> 00:02:27.836 A:middle
“打地鼠” 类型的游戏

00:02:28.216 --> 00:02:29.966 A:middle
游戏界面包含你的分数

00:02:29.966 --> 00:02:31.586 A:middle
最后还会有排行榜

00:02:31.586 --> 00:02:32.896 A:middle
玩家可以一直跟进自己的分数

00:02:33.146 --> 00:02:33.976 A:middle
因为我们的本性里都是

00:02:33.976 --> 00:02:34.916 A:middle
有点胜负欲的

00:02:34.916 --> 00:02:37.816 A:middle
让我们来看看

00:02:37.816 --> 00:02:39.086 A:middle
游戏的游玩界面吧

00:02:39.866 --> 00:02:42.006 A:middle
点击开始游戏

00:02:42.006 --> 00:02:43.496 A:middle
任意的 emoji 会随机地

00:02:43.696 --> 00:02:45.006 A:middle
出现在屏幕的任意位置

00:02:45.506 --> 00:02:46.896 A:middle
可能是独角兽 也可能是大便

00:02:46.896 --> 00:02:49.556 A:middle
这时候 玩家有一秒钟的时间

00:02:49.556 --> 00:02:51.086 A:middle
去点击它们

00:02:52.586 --> 00:02:54.286 A:middle
如果玩家点到独角兽

00:02:54.656 --> 00:02:55.876 A:middle
则得一分

00:02:56.276 --> 00:02:57.446 A:middle
如果不小心点到了大便

00:02:57.486 --> 00:02:59.416 A:middle
那么游戏就结束了

00:03:00.286 --> 00:03:01.686 A:middle
除此之外

00:03:01.686 --> 00:03:03.076 A:middle
如果玩家错过了独角兽

00:03:03.076 --> 00:03:05.276 A:middle
错过了这个并不太孤独的独角兽

00:03:05.446 --> 00:03:06.856 A:middle
那就自动输掉了游戏

00:03:07.366 --> 00:03:09.316 A:middle
所以目标就是 要点到所有的独角兽

00:03:09.596 --> 00:03:11.116 A:middle
不能点大便

00:03:11.636 --> 00:03:12.356 A:middle
我们来看看吧

00:03:16.076 --> 00:03:17.356 A:middle
点 不错

00:03:18.716 --> 00:03:19.516 A:middle
点独角兽

00:03:20.086 --> 00:03:23.346 A:middle
喔 又得了一分

00:03:23.446 --> 00:03:24.426 A:middle
喔 糟糕

00:03:24.766 --> 00:03:25.686 A:middle
移动得太快了

00:03:25.686 --> 00:03:27.736 A:middle
不小心点到了大便

00:03:28.246 --> 00:03:29.276 A:middle
让我们直入正题

00:03:29.866 --> 00:03:32.016 A:middle
对新手们科普一下

00:03:32.016 --> 00:03:34.256 A:middle
Xcode 是在 macOS 中

00:03:34.256 --> 00:03:35.916 A:middle
帮助我们制作 iOS

00:03:36.376 --> 00:03:38.666 A:middle
macOS watchOS 和 tvOS App 的工具

00:03:38.666 --> 00:03:41.276 A:middle
如果你还没有这个软件

00:03:41.276 --> 00:03:42.576 A:middle
你可以去 App Store 中下载

00:03:43.566 --> 00:03:45.206 A:middle
当我们打开 Xcode

00:03:45.206 --> 00:03:46.736 A:middle
首先要选择

00:03:46.736 --> 00:03:47.826 A:middle
“create a new Xcode project”

00:03:49.046 --> 00:03:51.126 A:middle
之后 我们可以看到

00:03:51.126 --> 00:03:52.556 A:middle
所有我们可以创建的

00:03:52.556 --> 00:03:53.316 A:middle
不同的 App 模版

00:03:54.146 --> 00:03:55.076 A:middle
根据我们的需要

00:03:55.076 --> 00:03:56.126 A:middle
我们选择 “single view app（单视图 App）”

00:03:56.716 --> 00:03:57.736 A:middle
但是在这里你同样也可以选择

00:03:57.736 --> 00:03:59.706 A:middle
“page based app（基于页面的 App）”

00:03:59.776 --> 00:04:01.196 A:middle
“sticker pack app（表情包 App）”

00:03:59.776 --> 00:04:01.196 A:middle
“sticker pack app（表情包 App）”

00:04:01.196 --> 00:04:01.656 A:middle
甚至是 “game（游戏）”

00:04:02.066 --> 00:04:03.596 A:middle
但是我们要做的游戏非常简单

00:04:03.596 --> 00:04:05.976 A:middle
所以选择 “single view app” 就可以

00:04:05.976 --> 00:04:08.886 A:middle
然后点击下一步

00:04:08.886 --> 00:04:10.146 A:middle
在这里输入 App 的名字

00:04:10.316 --> 00:04:11.216 A:middle
我们的名字是

00:04:11.216 --> 00:04:12.416 A:middle
“消失的独角兽”

00:04:12.666 --> 00:04:14.066 A:middle
我们的 “team” 名称是

00:04:14.066 --> 00:04:14.926 A:middle
“示例团队”

00:04:15.456 --> 00:04:16.296 A:middle
然后点击下一步

00:04:17.366 --> 00:04:18.875 A:middle
在选择完储存位置后

00:04:18.875 --> 00:04:20.245 A:middle
我们来到了

00:04:20.245 --> 00:04:21.255 A:middle
“project settings（项目设置）”

00:04:21.625 --> 00:04:22.766 A:middle
今天我们先不做任何修改

00:04:22.766 --> 00:04:24.376 A:middle
我们直接去看在屏幕左手边的

00:04:24.376 --> 00:04:25.336 A:middle
“Project Navigator（项目导航器）”

00:04:25.336 --> 00:04:26.736 A:middle
查看一些我们项目中

00:04:26.736 --> 00:04:28.436 A:middle
其他重要的文件

00:04:29.226 --> 00:04:30.896 A:middle
第一个是 “AppDelegate（App 委托）”

00:04:31.506 --> 00:04:34.156 A:middle
AppDelegate 是为每个 App 创造的

00:04:34.156 --> 00:04:35.856 A:middle
它可以帮助我们管理

00:04:35.856 --> 00:04:37.416 A:middle
每个 App 的生命周期

00:04:38.586 --> 00:04:39.626 A:middle
当我们进入后台

00:04:39.626 --> 00:04:40.936 A:middle
或是进入前端

00:04:40.936 --> 00:04:42.866 A:middle
都可以调用特定的方法

00:04:43.346 --> 00:04:44.586 A:middle
但是我们今天

00:04:44.586 --> 00:04:45.756 A:middle
不用 AppDelegate

00:04:45.756 --> 00:04:46.416 A:middle
对前端或者后端进行调整

00:04:46.926 --> 00:04:49.966 A:middle
下一步我们来选择

00:04:49.966 --> 00:04:51.356 A:middle
“Main.storyboard（主要界面描述板）”文件

00:04:52.106 --> 00:04:53.746 A:middle
Storyboard 是我们

00:04:53.746 --> 00:04:55.336 A:middle
为 App 打造 UI

00:04:55.336 --> 00:04:56.116 A:middle
也就是用户接口的地方

00:04:56.596 --> 00:04:58.006 A:middle
在这里我们可以添加所有的 UI 元素

00:04:58.006 --> 00:04:59.806 A:middle
例如 按钮

00:04:59.996 --> 00:05:01.336 A:middle
标签和图片

00:04:59.996 --> 00:05:01.336 A:middle
标签和图片

00:05:02.116 --> 00:05:03.056 A:middle
但是在这里

00:05:03.056 --> 00:05:04.626 A:middle
我们不止可以做出单视图

00:05:04.856 --> 00:05:06.306 A:middle
这里也是我们布置一个 App

00:05:06.306 --> 00:05:09.416 A:middle
所有逻辑流程的地方 也就是故事

00:05:09.886 --> 00:05:12.506 A:middle
下一步我们选择 “View

00:05:12.506 --> 00:05:13.036 A:middle
Controller（视图控制器）”

00:05:13.636 --> 00:05:16.536 A:middle
View Controller 能帮助我们控制视图

00:05:16.536 --> 00:05:17.966 A:middle
我们也要在这里

00:05:17.966 --> 00:05:22.126 A:middle
写下 App 的所有逻辑代码

00:05:22.406 --> 00:05:23.436 A:middle
我们来看看如何用

00:05:23.436 --> 00:05:25.866 A:middle
storyboard 来创建视图

00:05:26.876 --> 00:05:28.536 A:middle
我们再回到刚刚的

00:05:28.536 --> 00:05:29.846 A:middle
Main.storyboard 文件

00:05:30.206 --> 00:05:32.006 A:middle
在这里一定要注意

00:05:32.006 --> 00:05:32.656 A:middle
不要选成 “Launch

00:05:32.656 --> 00:05:34.276 A:middle
Screen.storyboard（启动画面描述版）”

00:05:34.876 --> 00:05:36.586 A:middle
LaunchScreen.storyboard

00:05:36.586 --> 00:05:38.206 A:middle
是我们用来制作

00:05:38.206 --> 00:05:39.296 A:middle
App 启动或加载时

00:05:39.296 --> 00:05:42.646 A:middle
首先出现在屏幕上的视图

00:05:43.166 --> 00:05:44.166 A:middle
在 storyboard 的右上角

00:05:44.166 --> 00:05:47.646 A:middle
你会注意到有一个

00:05:47.726 --> 00:05:48.976 A:middle
对象库按钮

00:05:49.146 --> 00:05:50.476 A:middle
这个按钮的图标是

00:05:50.476 --> 00:05:51.816 A:middle
一个圆圈中间套了个小方块

00:05:52.336 --> 00:05:53.886 A:middle
我们可以在这里

00:05:53.886 --> 00:05:56.326 A:middle
制作按钮 标签和图像

00:05:56.576 --> 00:05:57.766 A:middle
然后可以把它们拖到

00:05:57.766 --> 00:05:58.446 A:middle
storyboard

00:05:58.876 --> 00:06:01.346 A:middle
在左手边

00:05:58.876 --> 00:06:01.346 A:middle
在左手边

00:06:01.416 --> 00:06:04.026 A:middle
你可以看到我们 App 的概览

00:06:04.606 --> 00:06:05.916 A:middle
点击这个小三角

00:06:05.916 --> 00:06:08.336 A:middle
就可以将现在 storyboard 中

00:06:08.336 --> 00:06:09.836 A:middle
所有的内容展开

00:06:09.836 --> 00:06:11.346 A:middle
现在你会想

00:06:11.556 --> 00:06:12.896 A:middle
“这个 storyboard 上什么都没有

00:06:12.986 --> 00:06:13.736 A:middle
这能有什么用呢？”

00:06:14.266 --> 00:06:15.546 A:middle
将来在你的 storyboard 上

00:06:15.546 --> 00:06:17.436 A:middle
将会充斥着各种各样的元素

00:06:17.846 --> 00:06:19.106 A:middle
到最后 你可能都很难找到想要的东西

00:06:19.106 --> 00:06:20.176 A:middle
因为它很有可能

00:06:20.176 --> 00:06:21.466 A:middle
藏在了某些文件下

00:06:21.576 --> 00:06:22.456 A:middle
你也有可能会不小心

00:06:22.456 --> 00:06:23.356 A:middle
创建了副本

00:06:23.566 --> 00:06:24.846 A:middle
所以 如果想查看

00:06:24.846 --> 00:06:25.816 A:middle
你添加到 storyboard 里的

00:06:25.816 --> 00:06:26.776 A:middle
所有内容

00:06:26.776 --> 00:06:27.356 A:middle
这里是最合适的地方

00:06:28.576 --> 00:06:30.306 A:middle
好了 现在让我们直接

00:06:30.306 --> 00:06:31.756 A:middle
进入到演示

00:06:31.756 --> 00:06:31.976 A:middle
开始制作 App 吧

00:06:32.046 --> 00:06:35.796 A:middle
现在我要来这边

00:06:35.796 --> 00:06:37.426 A:middle
使用我的电脑

00:06:37.546 --> 00:06:39.136 A:middle
它已经打开了 Xcode

00:06:39.896 --> 00:06:41.796 A:middle
好的 现在我们已经有了

00:06:41.796 --> 00:06:43.896 A:middle
“消失的独角兽” 文件

00:06:44.066 --> 00:06:45.496 A:middle
现在我们来到了

00:06:45.496 --> 00:06:46.286 A:middle
“Main.storyboard”

00:06:46.516 --> 00:06:47.746 A:middle
在一开始

00:06:47.746 --> 00:06:48.946 A:middle
让我们先加入

00:06:49.056 --> 00:06:50.376 A:middle
制作游戏 App 所需的

00:06:50.376 --> 00:06:50.776 A:middle
所有 UI 元素

00:06:51.396 --> 00:06:52.436 A:middle
现在我要点击上方的

00:06:52.436 --> 00:06:53.506 A:middle
对象库按钮

00:06:53.766 --> 00:06:55.276 A:middle
我可以滚动查看

00:06:55.436 --> 00:06:56.486 A:middle
各种各样我们可以

00:06:56.486 --> 00:06:57.636 A:middle
使用的内容

00:06:58.436 --> 00:07:01.136 A:middle
这里有标签 按钮 文本框

00:06:58.436 --> 00:07:01.136 A:middle
这里有标签 按钮 文本框

00:07:01.246 --> 00:07:04.836 A:middle
活动指示标甚至图像

00:07:05.736 --> 00:07:07.576 A:middle
让我们首先来添加

00:07:07.576 --> 00:07:08.656 A:middle
“开始游戏”按钮吧

00:07:08.796 --> 00:07:10.306 A:middle
所以现在我要搜索“按钮”

00:07:11.136 --> 00:07:13.356 A:middle
点击并拖拽这个按钮

00:07:13.356 --> 00:07:14.526 A:middle
放到 storyboard 的正中心

00:07:15.386 --> 00:07:17.506 A:middle
在这里双击修改文本

00:07:17.506 --> 00:07:19.106 A:middle
改为 “开始游戏”

00:07:19.156 --> 00:07:20.346 A:middle
感叹号

00:07:20.346 --> 00:07:22.886 A:middle
但是这样有点小了

00:07:23.306 --> 00:07:24.816 A:middle
所以 如果要把它变大

00:07:24.906 --> 00:07:26.306 A:middle
我们可以去 Xcode 的右上角

00:07:26.306 --> 00:07:27.716 A:middle
Xcode 的右上角

00:07:27.716 --> 00:07:28.586 A:middle
打开检查窗格

00:07:28.586 --> 00:07:30.276 A:middle
然后选择

00:07:30.356 --> 00:07:31.466 A:middle
这个小的滑块按钮

00:07:31.466 --> 00:07:32.486 A:middle
这就是属性检查器

00:07:32.916 --> 00:07:33.886 A:middle
在这里 我们可以修改

00:07:33.886 --> 00:07:36.556 A:middle
storyboard 上项目的属性

00:07:36.976 --> 00:07:38.326 A:middle
现在 我要让

00:07:38.326 --> 00:07:39.286 A:middle
我的字号变大

00:07:39.746 --> 00:07:42.856 A:middle
从 15 号调整到 50 号

00:07:43.336 --> 00:07:45.056 A:middle
点击“完成”

00:07:45.056 --> 00:07:46.726 A:middle
如果想要快速复制

00:07:46.726 --> 00:07:48.716 A:middle
storyboard 上的项目

00:07:48.936 --> 00:07:50.526 A:middle
按住键盘上的 option 按钮

00:07:50.526 --> 00:07:52.526 A:middle
在 storyboard 上点击并拖拽

00:07:52.526 --> 00:07:53.776 A:middle
就能快速复制

00:07:53.776 --> 00:07:54.446 A:middle
这个按钮了

00:07:55.406 --> 00:07:56.926 A:middle
现在我将要

00:07:56.926 --> 00:07:59.656 A:middle
把“开始游戏”改为

00:07:59.656 --> 00:08:01.026 A:middle
一个独角兽 emoji

00:07:59.656 --> 00:08:01.026 A:middle
一个独角兽 emoji

00:08:01.216 --> 00:08:02.206 A:middle
如果要调出 emoji 键盘

00:08:02.206 --> 00:08:03.216 A:middle
你可以同时按下

00:08:03.216 --> 00:08:06.886 A:middle
control-command-空格

00:08:06.916 --> 00:08:07.816 A:middle
然后选择独角兽

00:08:08.916 --> 00:08:11.576 A:middle
很棒 现在让我们

00:08:11.576 --> 00:08:13.966 A:middle
再做一次快速复制

00:08:13.966 --> 00:08:14.946 A:middle
添加大便

00:08:16.016 --> 00:08:20.206 A:middle
Control-command-空格 选大便

00:08:21.206 --> 00:08:22.986 A:middle
棒极了 现在再给“排行榜”

00:08:22.986 --> 00:08:24.076 A:middle
添加一个按钮

00:08:24.456 --> 00:08:26.596 A:middle
点击 option 再拖拽

00:08:27.346 --> 00:08:29.676 A:middle
双击 输入“排行榜”

00:08:29.826 --> 00:08:31.906 A:middle
噢 不是大写喔

00:08:32.775 --> 00:08:34.676 A:middle
然后修改字体大小

00:08:34.676 --> 00:08:37.096 A:middle
把 50 号的字变小

00:08:37.155 --> 00:08:37.616 A:middle
差不多 25 号

00:08:37.706 --> 00:08:39.046 A:middle
很好

00:08:39.676 --> 00:08:42.316 A:middle
现在我们的 storyboard

00:08:42.316 --> 00:08:45.496 A:middle
还需要一个元素

00:08:45.496 --> 00:08:46.106 A:middle
那就是得分标签

00:08:47.016 --> 00:08:48.666 A:middle
我们返回对象库

00:08:48.666 --> 00:08:49.846 A:middle
搜索“标签”

00:08:49.846 --> 00:08:52.116 A:middle
然后点击 并把它拖拽

00:08:52.276 --> 00:08:53.016 A:middle
到屏幕上

00:08:53.946 --> 00:08:54.986 A:middle
现在我们把文本

00:08:54.986 --> 00:08:56.696 A:middle
改成零分

00:08:57.166 --> 00:08:58.246 A:middle
然后把字

00:08:58.246 --> 00:09:00.836 A:middle
调到很大很大 90 号

00:08:58.246 --> 00:09:00.836 A:middle
调到很大很大 90 号

00:09:01.386 --> 00:09:04.036 A:middle
非常好 做好了

00:09:04.376 --> 00:09:05.606 A:middle
现在我们已经拥有了

00:09:05.666 --> 00:09:07.296 A:middle
所有制作游戏需要的 UI 元素

00:09:08.426 --> 00:09:09.516 A:middle
现在我们继续

00:09:09.546 --> 00:09:11.536 A:middle
将 UI 和代码连接起来

00:09:12.386 --> 00:09:14.046 A:middle
如果要把 storyboard 和 view controller

00:09:14.046 --> 00:09:15.376 A:middle
同时用代码连接起来

00:09:15.376 --> 00:09:17.246 A:middle
我们可以打开

00:09:17.276 --> 00:09:18.566 A:middle
“Assistant Editor（辅助编辑器）”

00:09:18.836 --> 00:09:19.956 A:middle
就是图标是两个圆圈套起来

00:09:19.956 --> 00:09:21.176 A:middle
这个按钮

00:09:21.846 --> 00:09:25.576 A:middle
很好 现在我们有了很多

00:09:25.626 --> 00:09:26.756 A:middle
能将 storyboard 上的

00:09:26.756 --> 00:09:28.396 A:middle
项目和代码

00:09:28.396 --> 00:09:30.146 A:middle
连接起来的方法

00:09:30.646 --> 00:09:31.966 A:middle
第一种叫做

00:09:31.966 --> 00:09:33.906 A:middle
“outlet（插口）” outlet 可以在代码中

00:09:33.906 --> 00:09:35.516 A:middle
使我们跳转到

00:09:35.706 --> 00:09:36.466 A:middle
用户界面

00:09:37.016 --> 00:09:38.306 A:middle
让我们先为

00:09:38.306 --> 00:09:39.516 A:middle
“开始游戏”按钮

00:09:39.516 --> 00:09:40.036 A:middle
设置一个 outlet

00:09:41.116 --> 00:09:42.866 A:middle
要创建一个 outlet

00:09:42.866 --> 00:09:44.016 A:middle
先选中 storyboard 上的“开始游戏”

00:09:44.016 --> 00:09:45.396 A:middle
按住 control 键

00:09:45.396 --> 00:09:47.786 A:middle
点击并拖动到

00:09:47.786 --> 00:09:49.146 A:middle
storyboard 上

00:09:49.146 --> 00:09:50.136 A:middle
抱歉 是拖动到

00:09:50.136 --> 00:09:52.686 A:middle
控制者代码上 然后松开鼠标

00:09:53.096 --> 00:09:54.576 A:middle
到这一步

00:09:54.576 --> 00:09:56.626 A:middle
要将连接形式修改为

00:09:56.846 --> 00:09:57.606 A:middle
喔 已经是 outlet 了

00:09:57.656 --> 00:09:59.536 A:middle
非常好 现在我要给

00:09:59.536 --> 00:10:02.596 A:middle
“开始游戏”按钮命名

00:09:59.536 --> 00:10:02.596 A:middle
“开始游戏”按钮命名

00:10:02.636 --> 00:10:02.896 A:middle
点击“连接”

00:10:04.526 --> 00:10:05.776 A:middle
非常好

00:10:05.776 --> 00:10:07.586 A:middle
现在我们的代码和 storyboard

00:10:07.586 --> 00:10:08.356 A:middle
已经连接起来了

00:10:08.656 --> 00:10:09.806 A:middle
现在我们可以检查一遍

00:10:09.806 --> 00:10:10.696 A:middle
连接是否正确

00:10:10.696 --> 00:10:13.226 A:middle
我们看到

00:10:13.226 --> 00:10:14.976 A:middle
“开始游戏”按钮

00:10:14.976 --> 00:10:15.836 A:middle
左边的灰色小圆圈

00:10:16.176 --> 00:10:17.896 A:middle
如果把鼠标停留在上方

00:10:17.896 --> 00:10:18.916 A:middle
此代码连接的项目

00:10:18.916 --> 00:10:20.986 A:middle
就会在 storyboard 上

00:10:20.986 --> 00:10:22.416 A:middle
高亮显示

00:10:22.686 --> 00:10:25.036 A:middle
因为时间的关系

00:10:25.036 --> 00:10:26.546 A:middle
我已经将其他 outlet 的

00:10:26.676 --> 00:10:27.866 A:middle
代码写好

00:10:28.346 --> 00:10:29.736 A:middle
但是你会发现

00:10:29.736 --> 00:10:31.646 A:middle
在他们左边的是空心圆圈

00:10:31.966 --> 00:10:33.126 A:middle
这就表明这条代码还没有跟

00:10:33.126 --> 00:10:34.556 A:middle
storyboard 上的项目连接起来

00:10:35.516 --> 00:10:37.116 A:middle
要创建一个连接

00:10:37.116 --> 00:10:38.716 A:middle
我们只需点击

00:10:38.716 --> 00:10:40.246 A:middle
“good button（得分按钮）”

00:10:40.246 --> 00:10:40.626 A:middle
左边的圆圈

00:10:40.856 --> 00:10:42.586 A:middle
然后将它拖拽到

00:10:42.586 --> 00:10:43.796 A:middle
独角兽按钮上

00:10:43.796 --> 00:10:45.776 A:middle
也就是我们想让这条代码连接的按钮上

00:10:46.116 --> 00:10:46.626 A:middle
然后松开鼠标

00:10:47.736 --> 00:10:49.276 A:middle
我们可以对 “bad button（失分按钮）”

00:10:49.276 --> 00:10:53.836 A:middle
排行榜按钮 和分数标签

00:10:53.836 --> 00:10:54.506 A:middle
做同样的操作

00:10:55.776 --> 00:10:57.016 A:middle
很好 所有的连接

00:10:57.016 --> 00:10:58.116 A:middle
都已经完成了

00:10:59.086 --> 00:11:00.316 A:middle
另一种我们可以创建的连接

00:10:59.086 --> 00:11:00.316 A:middle
另一种我们可以创建的连接

00:11:00.316 --> 00:11:02.116 A:middle
叫做 “action（动作）”

00:11:02.996 --> 00:11:04.596 A:middle
action 是一句连接

00:11:04.596 --> 00:11:07.176 A:middle
触发 App 内某一事件的代码

00:11:07.946 --> 00:11:09.706 A:middle
在这里 我想为

00:11:09.846 --> 00:11:11.416 A:middle
每一次点击“开始游戏”按钮

00:11:11.586 --> 00:11:12.856 A:middle
添加一个 action

00:11:14.036 --> 00:11:15.766 A:middle
要想创建这个连接

00:11:15.766 --> 00:11:17.046 A:middle
我要再次选中“开始游戏”按钮

00:11:17.046 --> 00:11:18.786 A:middle
按住 control 键

00:11:18.786 --> 00:11:21.346 A:middle
再点击并拖拽它

00:11:21.346 --> 00:11:22.656 A:middle
到 View Controller 的代码上

00:11:22.986 --> 00:11:24.886 A:middle
然后松开鼠标

00:11:25.136 --> 00:11:26.386 A:middle
这次我要将连接类型

00:11:26.386 --> 00:11:28.916 A:middle
修改为 “action”

00:11:28.916 --> 00:11:31.306 A:middle
然后命名为“点击开始”

00:11:31.546 --> 00:11:33.576 A:middle
我想要这个事件变为

00:11:33.576 --> 00:11:35.836 A:middle
“touchup inside” 点击连接

00:11:37.366 --> 00:11:38.836 A:middle
非常好 你会发现

00:11:38.836 --> 00:11:41.106 A:middle
这又出现了一个实心圆圈

00:11:41.156 --> 00:11:43.426 A:middle
当我把鼠标放上去时

00:11:43.426 --> 00:11:44.726 A:middle
“开始游戏”按钮会高亮显示

00:11:45.846 --> 00:11:47.186 A:middle
我已经提前为另外两个动作

00:11:47.186 --> 00:11:49.096 A:middle
“得分点击”

00:11:49.096 --> 00:11:50.456 A:middle
和“失分点击”

00:11:50.546 --> 00:11:51.126 A:middle
写好了两条代码

00:11:52.086 --> 00:11:53.286 A:middle
但是这一次

00:11:53.286 --> 00:11:54.716 A:middle
我想要做一个

00:11:54.716 --> 00:11:55.276 A:middle
完全不同的连接

00:11:56.046 --> 00:11:58.986 A:middle
我想创建一个事件 或是动作事件

00:11:58.986 --> 00:12:00.726 A:middle
就是每次点击按钮

00:11:58.986 --> 00:12:00.726 A:middle
就是每次点击按钮

00:12:00.726 --> 00:12:02.316 A:middle
即可立即触发的事件

00:12:02.796 --> 00:12:04.116 A:middle
因为我想让用户

00:12:04.116 --> 00:12:06.256 A:middle
点击按钮即可立即得分

00:12:06.346 --> 00:12:08.446 A:middle
而不是点击后 手指离开屏幕再得分

00:12:08.446 --> 00:12:10.706 A:middle
现在我要选择

00:12:10.706 --> 00:12:12.776 A:middle
跟这个动作关联的项目

00:12:12.776 --> 00:12:14.866 A:middle
在这里 就是我们的“得分按钮”

00:12:14.866 --> 00:12:15.556 A:middle
也就是独角兽

00:12:16.166 --> 00:12:17.466 A:middle
然后我们来到检查窗格

00:12:17.466 --> 00:12:19.186 A:middle
点击这个

00:12:19.186 --> 00:12:22.296 A:middle
圆圈中套着小箭头的按钮

00:12:22.606 --> 00:12:24.536 A:middle
它叫做 “Connections Inspector（连接检查器）”

00:12:24.806 --> 00:12:26.506 A:middle
你可以在这里看到所有

00:12:26.506 --> 00:12:27.916 A:middle
我可以为之创造连接的

00:12:28.056 --> 00:12:29.166 A:middle
不同种类的

00:12:29.166 --> 00:12:29.416 A:middle
已发送事件

00:12:29.696 --> 00:12:31.766 A:middle
在这里 我们要为一个

00:12:31.766 --> 00:12:34.046 A:middle
touch-down 事件创建连接

00:12:34.616 --> 00:12:36.236 A:middle
我要点击一下这个空心圆圈

00:12:36.236 --> 00:12:38.836 A:middle
让后将他拖到

00:12:38.956 --> 00:12:40.166 A:middle
我想与这一事件连接

00:12:40.166 --> 00:12:41.796 A:middle
的动作方法上

00:12:41.796 --> 00:12:43.566 A:middle
然后松开鼠标

00:12:43.676 --> 00:12:45.996 A:middle
同样的操作也适用于“减分按钮”

00:12:46.896 --> 00:12:49.656 A:middle
Touch-down 点击 然后拖拽

00:12:49.656 --> 00:12:52.786 A:middle
到“失分点击”松开鼠标 好了 很棒

00:12:53.216 --> 00:12:54.606 A:middle
距离建成并运行

00:12:54.606 --> 00:12:55.996 A:middle
我们的第一个 App

00:12:55.996 --> 00:12:57.836 A:middle
只差两个步骤了

00:12:58.806 --> 00:13:00.146 A:middle
下一步需要做的是

00:12:58.806 --> 00:13:00.146 A:middle
下一步需要做的是

00:13:00.146 --> 00:13:01.376 A:middle
为我们的 App

00:13:01.376 --> 00:13:02.316 A:middle
添加一些设置

00:13:02.836 --> 00:13:04.076 A:middle
我们可以用一种名为 viewDidLoad

00:13:04.076 --> 00:13:04.966 A:middle
的方法做到

00:13:05.636 --> 00:13:07.486 A:middle
viewDidLoad 会在最开始

00:13:07.486 --> 00:13:09.126 A:middle
为视图控制器

00:13:09.126 --> 00:13:10.206 A:middle
自动生成

00:13:10.696 --> 00:13:12.496 A:middle
在这里 我们需要

00:13:12.496 --> 00:13:13.316 A:middle
做出一点设置

00:13:13.646 --> 00:13:16.496 A:middle
根据我们的情况 我需要将一些东西藏起来

00:13:16.816 --> 00:13:18.116 A:middle
第一个我想藏起来的项目

00:13:18.116 --> 00:13:19.166 A:middle
就是分数标签

00:13:19.306 --> 00:13:21.006 A:middle
我不想让它游戏的最开始

00:13:21.106 --> 00:13:22.386 A:middle
出现在屏幕上

00:13:23.346 --> 00:13:25.766 A:middle
所以我要输入

00:13:26.186 --> 00:13:27.716 A:middle
“pointlabel.”

00:13:28.186 --> 00:13:29.086 A:middle
“hide（隐藏）”

00:13:30.126 --> 00:13:32.086 A:middle
看到了吗

00:13:32.086 --> 00:13:33.616 A:middle
这里有一个属性叫 “isHidden”

00:13:33.936 --> 00:13:35.286 A:middle
我点击回车

00:13:35.316 --> 00:13:37.106 A:middle
就会自动为我变成 Xcode

00:13:37.866 --> 00:13:40.036 A:middle
为了了解 “isHidden” 的作用

00:13:40.036 --> 00:13:41.376 A:middle
你可以按住键盘上的 option 键

00:13:41.376 --> 00:13:43.736 A:middle
将鼠标放在 “isHidden” 上

00:13:43.736 --> 00:13:45.226 A:middle
然后点击

00:13:45.446 --> 00:13:46.916 A:middle
这样操作 我可以对 “isHidden”

00:13:46.916 --> 00:13:48.746 A:middle
和它的作用

00:13:48.746 --> 00:13:49.506 A:middle
有更深入的了解

00:13:49.506 --> 00:13:51.576 A:middle
在这里 我们可以看到

00:13:51.576 --> 00:13:52.886 A:middle
它既是 getter 也是 setter

00:13:53.176 --> 00:13:54.116 A:middle
也就是说我可以将

00:13:54.166 --> 00:13:56.596 A:middle
给 isHidden 赋值为真

00:13:56.596 --> 00:13:57.976 A:middle
这样在游戏一开始

00:13:57.976 --> 00:14:00.646 A:middle
就能将标签隐藏了

00:13:57.976 --> 00:14:00.646 A:middle
就能将标签隐藏了

00:14:00.846 --> 00:14:03.126 A:middle
同时我们也需要一些变量

00:14:03.126 --> 00:14:05.046 A:middle
来持续记录游戏过程

00:14:05.416 --> 00:14:06.626 A:middle
我已经提前写好了代码

00:14:06.666 --> 00:14:08.606 A:middle
所以我现在将它们快速添加进来

00:14:10.086 --> 00:14:12.466 A:middle
他们其中之一需要 噢

00:14:12.826 --> 00:14:13.736 A:middle
已经初始化了

00:14:13.736 --> 00:14:15.176 A:middle
但是其实我还需要

00:14:15.176 --> 00:14:15.706 A:middle
填充一些数据进去

00:14:15.706 --> 00:14:18.146 A:middle
这里是游戏按钮列表

00:14:18.946 --> 00:14:19.926 A:middle
现在你可能会想

00:14:20.356 --> 00:14:21.716 A:middle
"Jessie 如果我们

00:14:21.716 --> 00:14:23.326 A:middle
只有独角兽和一个大便

00:14:23.326 --> 00:14:25.546 A:middle
那为什么要创建这么多的按钮呢

00:14:26.246 --> 00:14:27.826 A:middle
那是因为 我们需要让我们的代码

00:14:27.826 --> 00:14:29.426 A:middle
有更强的可扩充性

00:14:29.596 --> 00:14:30.956 A:middle
也是为了后续的构建

00:14:30.956 --> 00:14:32.036 A:middle
提供便利

00:14:32.366 --> 00:14:34.056 A:middle
因为 在以后

00:14:34.056 --> 00:14:35.916 A:middle
我们的游戏可能不会只有独角兽和大便

00:14:35.916 --> 00:14:37.266 A:middle
我们有可能会添加大拇指 emoji

00:14:37.266 --> 00:14:39.306 A:middle
可能会添加皱眉 emoji

00:14:39.806 --> 00:14:41.556 A:middle
所以在这里 我们要输入

00:14:42.346 --> 00:14:47.436 A:middle
“gamebuttons=

00:14:47.436 --> 00:14:50.256 A:middle
[good button，bad button]”

00:14:51.596 --> 00:14:53.856 A:middle
好的 我也提前

00:14:53.856 --> 00:14:55.476 A:middle
写好了一些辅助方法

00:14:55.476 --> 00:14:56.316 A:middle
来完善游戏可玩性

00:14:56.926 --> 00:14:58.266 A:middle
我现在把它们加进来

00:14:59.316 --> 00:15:00.866 A:middle
其中一个方法叫做

00:14:59.316 --> 00:15:00.866 A:middle
其中一个方法叫做

00:15:00.866 --> 00:15:02.826 A:middle
“setupFreshGameState”

00:15:03.476 --> 00:15:06.666 A:middle
你可以看到 他们可以确保“开始游戏”

00:15:06.666 --> 00:15:08.556 A:middle
和“排行榜”按钮是不被隐藏的

00:15:08.556 --> 00:15:09.346 A:middle
它们都显示在屏幕上

00:15:10.006 --> 00:15:11.946 A:middle
它将游戏按钮都隐藏了起来

00:15:12.306 --> 00:15:13.876 A:middle
也为游戏得分

00:15:13.946 --> 00:15:15.666 A:middle
设置了初始值

00:15:17.176 --> 00:15:19.036 A:middle
所以在我的 viewDidLoad 中

00:15:19.036 --> 00:15:21.116 A:middle
我同样也要调出

00:15:21.576 --> 00:15:23.196 A:middle
“setupFreshGameState”

00:15:24.056 --> 00:15:25.126 A:middle
大家可以看到

00:15:25.126 --> 00:15:27.756 A:middle
随着我的输入 Xcode 可以自动填充

00:15:27.936 --> 00:15:29.016 A:middle
所有我可能

00:15:29.016 --> 00:15:31.046 A:middle
会输入的代码

00:15:31.046 --> 00:15:33.236 A:middle
现在 如果我按下回车

00:15:33.356 --> 00:15:34.646 A:middle
在 “setupFreshGameState”

00:15:34.916 --> 00:15:36.276 A:middle
已经高亮的情况下

00:15:36.276 --> 00:15:39.543 A:middle
系统会自动为我们将其填充完整

00:15:39.543 --> 00:15:41.606 A:middle
好的 距离完成和运行 App

00:15:41.606 --> 00:15:43.066 A:middle
我们还有最后一个步骤

00:15:44.156 --> 00:15:46.396 A:middle
为了更明智一些

00:15:46.396 --> 00:15:48.366 A:middle
我要给“点击开始”方法“动作”方法

00:15:48.366 --> 00:15:49.376 A:middle
添加一个

00:15:49.446 --> 00:15:50.356 A:middle
打印语句 然后输入

00:15:51.176 --> 00:15:53.686 A:middle
“Start game button was pressed”

00:15:54.356 --> 00:15:56.706 A:middle
我希望每次点击

00:15:56.706 --> 00:15:58.096 A:middle
“开始游戏” 按钮时

00:15:58.426 --> 00:15:59.746 A:middle
这句代码都能记录到

00:15:59.746 --> 00:16:00.466 A:middle
我的控制台中

00:15:59.746 --> 00:16:00.466 A:middle
我的控制台中

00:16:00.956 --> 00:16:03.666 A:middle
点开中间的这个

00:16:03.736 --> 00:16:05.466 A:middle
图标是方块下有条横线的按钮

00:16:05.466 --> 00:16:07.586 A:middle
就可以打开调试区域

00:16:08.616 --> 00:16:10.266 A:middle
我把检查窗格关掉吧

00:16:10.266 --> 00:16:11.126 A:middle
现在不需要它了

00:16:11.946 --> 00:16:13.816 A:middle
好了 终于到了

00:16:13.816 --> 00:16:15.426 A:middle
我们建成并可以运行 App 的时候了

00:16:15.956 --> 00:16:17.036 A:middle
在左上角

00:16:17.036 --> 00:16:18.676 A:middle
你可以看到 App 的名字

00:16:18.846 --> 00:16:20.206 A:middle
“消失的独角兽”

00:16:20.206 --> 00:16:22.176 A:middle
和一个箭头指着 iPhone X

00:16:22.756 --> 00:16:24.636 A:middle
如果点击 iPhone X

00:16:24.636 --> 00:16:26.276 A:middle
你可以看到所有可以

00:16:26.276 --> 00:16:27.456 A:middle
运行我们 App 的模拟器

00:16:28.126 --> 00:16:30.046 A:middle
模拟器就是让某一个设备

00:16:30.176 --> 00:16:31.526 A:middle
在 Mac 上模拟运行

00:16:32.666 --> 00:16:34.676 A:middle
在这里我们选择 iPhone X

00:16:35.236 --> 00:16:37.016 A:middle
如果现在我将手机接入电脑

00:16:37.016 --> 00:16:39.036 A:middle
我同样也可以

00:16:39.036 --> 00:16:40.646 A:middle
在我自己的手机上运行这个 App

00:16:40.646 --> 00:16:42.236 A:middle
非常酷

00:16:43.556 --> 00:16:45.396 A:middle
选中 iPhone X 后

00:16:45.546 --> 00:16:47.456 A:middle
我可以点击 “play” 按钮

00:16:47.456 --> 00:16:48.996 A:middle
这样模拟器就会

00:16:49.256 --> 00:16:51.976 A:middle
运行我的 App 出来了

00:16:57.266 --> 00:17:00.566 A:middle
噢 很好 我们点击

00:16:57.266 --> 00:17:00.566 A:middle
噢 很好 我们点击

00:17:00.566 --> 00:17:02.196 A:middle
“开始游戏”按钮

00:17:02.196 --> 00:17:04.406 A:middle
我们可以看到 点击按钮的动作

00:17:04.406 --> 00:17:05.566 A:middle
已经被记录到了

00:17:05.566 --> 00:17:06.366 A:middle
下面的控制台中

00:17:07.126 --> 00:17:09.036 A:middle
非常好 我们刚刚创建了一个 UI

00:17:09.036 --> 00:17:10.476 A:middle
我们也将它与代码

00:17:10.476 --> 00:17:10.925 A:middle
连接了起来

00:17:11.856 --> 00:17:13.465 A:middle
让我们回头再聊聊

00:17:13.465 --> 00:17:15.536 A:middle
我们 App 的游戏逻辑

00:17:19.046 --> 00:17:20.336 A:middle
好的 在游戏的最一开始

00:17:20.336 --> 00:17:21.506 A:middle
我们知道

00:17:21.506 --> 00:17:23.316 A:middle
我们的开始界面上

00:17:23.396 --> 00:17:24.695 A:middle
有两个按钮

00:17:24.695 --> 00:17:25.986 A:middle
“开始游戏”按钮

00:17:26.036 --> 00:17:27.215 A:middle
和“排行榜”按钮

00:17:27.586 --> 00:17:28.756 A:middle
但是我们现在要讲的是

00:17:28.756 --> 00:17:29.696 A:middle
游戏的可玩性

00:17:30.016 --> 00:17:31.436 A:middle
我们会等着

00:17:31.646 --> 00:17:34.236 A:middle
玩家去按下“开始游戏”

00:17:34.236 --> 00:17:35.536 A:middle
当这个按钮被按下时

00:17:35.806 --> 00:17:37.236 A:middle
我们就进入了游玩模式

00:17:37.996 --> 00:17:39.266 A:middle
在游玩模式的最初

00:17:39.266 --> 00:17:41.796 A:middle
一个随机的 emoji 会随机地出现在

00:17:41.796 --> 00:17:43.386 A:middle
屏幕的任何一个地方

00:17:43.666 --> 00:17:45.216 A:middle
可能是独角兽 或是大便

00:17:46.066 --> 00:17:48.096 A:middle
这时候 我们留出一秒钟

00:17:48.096 --> 00:17:50.396 A:middle
让用户有时间

00:17:50.396 --> 00:17:52.746 A:middle
与这个按钮进行互动

00:17:54.136 --> 00:17:55.476 A:middle
在这一秒结束时

00:17:55.476 --> 00:17:57.376 A:middle
如果用户没有点击按钮

00:17:57.626 --> 00:17:59.196 A:middle
点击独角兽

00:17:59.196 --> 00:18:00.706 A:middle
独角兽被冷落了

00:17:59.196 --> 00:18:00.706 A:middle
独角兽被冷落了

00:18:00.706 --> 00:18:01.016 A:middle
用户也输了游戏

00:18:02.566 --> 00:18:04.466 A:middle
如果用户成功地避开了大便

00:18:04.466 --> 00:18:06.126 A:middle
那么就可以继续进行

00:18:06.126 --> 00:18:07.966 A:middle
另一轮游戏

00:18:08.456 --> 00:18:10.446 A:middle
现在我们也想讨论

00:18:10.446 --> 00:18:11.886 A:middle
如果用户点击了

00:18:11.886 --> 00:18:13.116 A:middle
某一按钮

00:18:13.116 --> 00:18:13.496 A:middle
会发生些什么

00:18:14.636 --> 00:18:16.066 A:middle
如果用户点击了独角兽按钮

00:18:16.066 --> 00:18:18.206 A:middle
我们就可以让他

00:18:18.206 --> 00:18:19.436 A:middle
再进行一轮游戏

00:18:19.436 --> 00:18:19.876 A:middle
并且得一分

00:18:20.486 --> 00:18:21.806 A:middle
否则 如果用户不小心

00:18:21.806 --> 00:18:24.316 A:middle
选择了大便 游戏则结束

00:18:25.366 --> 00:18:26.736 A:middle
好的 我们来聊聊它的

00:18:26.736 --> 00:18:27.496 A:middle
代码是什么样的

00:18:28.166 --> 00:18:29.786 A:middle
我们从开始界面开始

00:18:29.786 --> 00:18:32.236 A:middle
现在我们要把我们的代码

00:18:32.236 --> 00:18:33.656 A:middle
分解成逻辑块

00:18:33.866 --> 00:18:34.786 A:middle
在这里 我们要用

00:18:34.786 --> 00:18:36.056 A:middle
多种方法做到这一点

00:18:36.056 --> 00:18:37.856 A:middle
所以它不仅仅是一个

00:18:37.856 --> 00:18:39.376 A:middle
充满代码的长文件

00:18:39.516 --> 00:18:41.096 A:middle
关注一个特定的部分

00:18:41.096 --> 00:18:42.346 A:middle
对我们来说更容易

00:18:43.396 --> 00:18:44.706 A:middle
我们要写的第一个方法

00:18:44.706 --> 00:18:46.146 A:middle
叫做 “Start New Game”

00:18:46.286 --> 00:18:48.006 A:middle
我们要在这里调入

00:18:48.166 --> 00:18:48.676 A:middle
“startPressed”

00:18:49.266 --> 00:18:52.846 A:middle
这将为最一开始的游戏

00:18:53.666 --> 00:18:53.766 A:middle
做出一些设置

00:18:55.656 --> 00:18:57.266 A:middle
“StartNewGame” 下

00:18:57.266 --> 00:18:58.726 A:middle
第一个要实现的功能是

00:18:58.726 --> 00:19:00.346 A:middle
隐藏“开始游戏”按钮

00:18:58.726 --> 00:19:00.346 A:middle
隐藏“开始游戏”按钮

00:19:00.346 --> 00:19:01.746 A:middle
和隐藏“排行榜”按钮

00:19:02.656 --> 00:19:04.206 A:middle
然后我们需要更新得分标签

00:19:04.206 --> 00:19:05.726 A:middle
设置为零分

00:19:06.366 --> 00:19:07.706 A:middle
我们甚至

00:19:07.706 --> 00:19:09.576 A:middle
可以用代码

00:19:09.576 --> 00:19:11.666 A:middle
做一些酷炫效果

00:19:11.666 --> 00:19:13.016 A:middle
比如动态变化分数颜色

00:19:13.226 --> 00:19:14.576 A:middle
我将要把

00:19:14.576 --> 00:19:15.996 A:middle
游戏期间的文本颜色

00:19:16.046 --> 00:19:16.706 A:middle
设置成洋红色

00:19:17.756 --> 00:19:21.486 A:middle
在设置 “StartNewGame” 的最后

00:19:21.486 --> 00:19:23.196 A:middle
我要调入我们游戏的第一轮

00:19:24.646 --> 00:19:27.326 A:middle
好的 我们来看看

00:19:27.526 --> 00:19:29.196 A:middle
在 “oneGameRound()” 中

00:19:29.196 --> 00:19:30.706 A:middle
我们首先要更新得分标签

00:19:30.706 --> 00:19:31.626 A:middle
保证分数是最新的

00:19:32.286 --> 00:19:34.116 A:middle
然后我们要放置一个随机按钮

00:19:34.116 --> 00:19:35.586 A:middle
使独角兽或是大便

00:19:35.646 --> 00:19:37.816 A:middle
随机地出现在屏幕上

00:19:38.316 --> 00:19:39.716 A:middle
我已经写好了这个辅助方法

00:19:39.716 --> 00:19:41.046 A:middle
"displayRandomButton()"

00:19:41.046 --> 00:19:42.376 A:middle
它会随机地选择 x y 坐标

00:19:42.376 --> 00:19:44.276 A:middle
来放置我们的按钮

00:19:45.406 --> 00:19:47.156 A:middle
然后我们设置

00:19:47.156 --> 00:19:47.606 A:middle
一秒的定时

00:19:48.726 --> 00:19:51.026 A:middle
现在 如果一秒之后

00:19:51.116 --> 00:19:53.216 A:middle
计时结束

00:19:53.216 --> 00:19:54.596 A:middle
那么方块中的代码

00:19:54.596 --> 00:19:55.306 A:middle
则会被调用

00:19:55.796 --> 00:19:58.226 A:middle
这种情况下 我们需要确认

00:19:58.226 --> 00:19:59.676 A:middle
现在屏幕上的按钮

00:19:59.676 --> 00:20:01.486 A:middle
是否是独角兽

00:19:59.676 --> 00:20:01.486 A:middle
是否是独角兽

00:20:02.006 --> 00:20:03.216 A:middle
游戏也就结束了

00:20:03.586 --> 00:20:05.326 A:middle
因为用户没有

00:20:05.326 --> 00:20:07.716 A:middle
点击独角兽

00:20:07.916 --> 00:20:09.806 A:middle
否则 如果用户

00:20:09.806 --> 00:20:11.116 A:middle
成功避开了大便

00:20:11.116 --> 00:20:12.796 A:middle
大便还显示在屏幕上

00:20:12.796 --> 00:20:13.616 A:middle
那么就能进入下一轮游戏

00:20:15.056 --> 00:20:15.826 A:middle
现在让我们来看看

00:20:15.826 --> 00:20:17.346 A:middle
如果用户点击了我们其中一个按钮之后

00:20:17.346 --> 00:20:18.026 A:middle
会发生什么

00:20:18.626 --> 00:20:19.636 A:middle
如果用户点击了“得分按钮”

00:20:19.636 --> 00:20:21.306 A:middle
我们就会给他加一分

00:20:21.996 --> 00:20:25.176 A:middle
我们要把定时取消

00:20:25.176 --> 00:20:27.716 A:middle
要通过让这条代码失效的方法

00:20:27.716 --> 00:20:29.746 A:middle
所以游戏还会继续

00:20:29.746 --> 00:20:32.936 A:middle
我们会再调出新一轮游戏

00:20:33.056 --> 00:20:34.176 A:middle
然而 如果用户点击了

00:20:34.376 --> 00:20:36.176 A:middle
“失分按钮”

00:20:36.176 --> 00:20:37.376 A:middle
我们就让这个按钮消失

00:20:37.376 --> 00:20:39.046 A:middle
所以用户就不能再与之进行互动了

00:20:39.636 --> 00:20:41.176 A:middle
我们要再使定时失效

00:20:41.526 --> 00:20:42.756 A:middle
来取消定时

00:20:42.756 --> 00:20:45.736 A:middle
然后再调用我提前写好的

00:20:45.736 --> 00:20:46.686 A:middle
辅助方法 “game over()”

00:20:46.686 --> 00:20:49.946 A:middle
还帮助我们终止游戏

00:20:50.446 --> 00:20:52.016 A:middle
好的 让我们把这条游戏逻辑

00:20:52.016 --> 00:20:53.226 A:middle
加入进来

00:20:54.516 --> 00:20:57.936 A:middle
再回到我们的

00:20:58.036 --> 00:20:58.886 A:middle
Xcode 项目

00:20:58.886 --> 00:21:01.896 A:middle
现在 我已经不需要

00:20:58.886 --> 00:21:01.896 A:middle
现在 我已经不需要

00:21:01.896 --> 00:21:03.306 A:middle
storyboard 了

00:21:03.436 --> 00:21:04.586 A:middle
我只需要

00:21:04.586 --> 00:21:05.816 A:middle
在 View Controller 上做出改变

00:21:06.266 --> 00:21:07.676 A:middle
所以现在我选择

00:21:07.676 --> 00:21:10.146 A:middle
“standard editor（标准编辑器）”

00:21:10.146 --> 00:21:11.156 A:middle
然后再从 Project Navigator 中

00:21:11.156 --> 00:21:12.156 A:middle
选择 View Controller

00:21:13.266 --> 00:21:15.046 A:middle
我们已经提前在幻灯片里

00:21:15.126 --> 00:21:17.266 A:middle
写好了代码

00:21:17.656 --> 00:21:19.086 A:middle
所以我要

00:21:19.086 --> 00:21:21.206 A:middle
将他们快速添加到

00:21:21.296 --> 00:21:22.216 A:middle
View Controller 中

00:21:22.506 --> 00:21:24.856 A:middle
现在我们有 “startNewGame()”

00:21:25.176 --> 00:21:26.716 A:middle
“开始游戏”和“排行榜”按钮

00:21:26.716 --> 00:21:27.906 A:middle
都藏在这里

00:21:28.176 --> 00:21:29.506 A:middle
还有一些初始化设置

00:21:29.506 --> 00:21:31.546 A:middle
得分设置

00:21:31.546 --> 00:21:32.546 A:middle
和调用新一轮游戏

00:21:33.066 --> 00:21:35.906 A:middle
然后添加 “oneGameRound()”

00:21:36.506 --> 00:21:39.386 A:middle
再添加 “update our points label()”

00:21:39.386 --> 00:21:41.646 A:middle
“display random button()”

00:21:41.646 --> 00:21:42.576 A:middle
然后调出定时

00:21:43.706 --> 00:21:45.996 A:middle
最后我们要为了我们的

00:21:45.996 --> 00:21:47.766 A:middle
“开始游戏”按下

00:21:47.766 --> 00:21:50.766 A:middle
和“得分按钮”按下

00:21:50.766 --> 00:21:52.196 A:middle
填写代码

00:21:53.426 --> 00:21:57.886 A:middle
最后是“失分按钮”

00:21:58.036 --> 00:22:00.256 A:middle
好的 所有的代码都输好了

00:21:58.036 --> 00:22:00.256 A:middle
好的 所有的代码都输好了

00:22:00.606 --> 00:22:03.156 A:middle
让我们看看效果怎样

00:22:03.376 --> 00:22:05.936 A:middle
我要点击 “Play” 按钮

00:22:05.936 --> 00:22:07.316 A:middle
在模拟器上运行我们的 App

00:22:09.506 --> 00:22:10.816 A:middle
好的 我好紧张

00:22:11.166 --> 00:22:14.496 A:middle
开始吧 噢 得了一分

00:22:15.936 --> 00:22:17.436 A:middle
下一个在哪 有好多大便啊

00:22:18.136 --> 00:22:20.086 A:middle
很好

00:22:20.336 --> 00:22:21.566 A:middle
好的 我可以就这样玩一整天

00:22:21.566 --> 00:22:23.096 A:middle
但是我应该让

00:22:23.096 --> 00:22:24.086 A:middle
[ 音质不清晰 ] 给大家展示

00:22:24.086 --> 00:22:25.416 A:middle
如何迁入排行榜了

00:22:25.756 --> 00:22:27.976 A:middle
所以我要故意输掉游戏了

00:22:29.226 --> 00:22:30.626 A:middle
噢 游戏结束了

00:22:31.236 --> 00:22:33.886 A:middle
好的 喔 非常好

00:22:34.516 --> 00:22:37.896 A:middle
[ 掌声 ]

00:22:38.396 --> 00:22:39.426 A:middle
太棒了

00:22:39.736 --> 00:22:41.596 A:middle
我们刚刚在三十分钟内

00:22:41.596 --> 00:22:42.326 A:middle
就制作了一款游戏

00:22:42.846 --> 00:22:44.106 A:middle
设想一下 如果有更多的时间

00:22:44.106 --> 00:22:45.066 A:middle
你能做到多少呢

00:22:46.266 --> 00:22:47.456 A:middle
首先我们学习了

00:22:47.456 --> 00:22:48.986 A:middle
如何操作 Xcode

00:22:49.526 --> 00:22:52.116 A:middle
然后我们用 storyboard

00:22:52.266 --> 00:22:53.926 A:middle
创建了一个简单的 UI

00:22:53.926 --> 00:22:56.156 A:middle
把这个 UI 和代码连接了起来

00:22:56.476 --> 00:22:58.556 A:middle
最后我们用 Swift

00:22:58.616 --> 00:22:59.236 A:middle
加入了一些游戏逻辑

00:22:59.846 --> 00:23:01.106 A:middle
所有的不到三十分钟就完成了

00:22:59.846 --> 00:23:01.106 A:middle
所有的不到三十分钟就完成了

00:23:01.816 --> 00:23:03.676 A:middle
如果我们有更充沛的时间

00:23:03.676 --> 00:23:04.636 A:middle
试想一下

00:23:04.636 --> 00:23:05.836 A:middle
我们还可以做出哪些优化

00:23:06.716 --> 00:23:08.016 A:middle
我们刚刚使用了按钮 标签

00:23:08.096 --> 00:23:09.666 A:middle
这样简单的 UI 元素

00:23:10.076 --> 00:23:11.246 A:middle
但是你也可以使用

00:23:11.246 --> 00:23:13.796 A:middle
SpriteKit 等框架

00:23:14.156 --> 00:23:15.826 A:middle
来创建更多的

00:23:15.826 --> 00:23:18.036 A:middle
有重力或物理感应功能的

00:23:18.036 --> 00:23:19.066 A:middle
更有想象力的按钮

00:23:20.296 --> 00:23:21.476 A:middle
我们同样也可以融合 MusicKit

00:23:21.476 --> 00:23:23.046 A:middle
使用 Apple music 中的音乐

00:23:23.046 --> 00:23:24.306 A:middle
在游戏进行时

00:23:24.306 --> 00:23:25.396 A:middle
作为背景音乐

00:23:26.536 --> 00:23:28.166 A:middle
我们也可以读取传感器数据

00:23:28.466 --> 00:23:29.736 A:middle
可以基于用户的动作

00:23:29.736 --> 00:23:31.086 A:middle
来调整游戏的速度

00:23:32.046 --> 00:23:33.176 A:middle
这里是三个 WWDC 早先的演讲

00:23:33.176 --> 00:23:35.066 A:middle
我强烈建议大家

00:23:35.066 --> 00:23:36.146 A:middle
去看一看 2013 年的

00:23:36.796 --> 00:23:39.106 A:middle
“Introduction to SpriteKit”  去年的

00:23:39.546 --> 00:23:41.446 A:middle
“Introducing MusicKit（MusicKit 入门）”

00:23:41.596 --> 00:23:43.036 A:middle
同样也是去年的 “Creating Immersive Apps

00:23:43.036 --> 00:23:44.236 A:middle
with Core Motion

00:23:44.236 --> 00:23:44.476 A:middle
（用核心动作创建沉浸式 App）”

00:23:45.436 --> 00:23:46.966 A:middle
非常感谢 现在有请 [ 音质不清晰 ]

00:23:47.006 --> 00:23:48.506 A:middle
为大家讲解

00:23:48.506 --> 00:23:50.706 A:middle
“如何为你的 App 创建更多的屏幕”

00:23:51.516 --> 00:23:57.500 A:middle
[ 掌声 ]

00:24:06.086 --> 00:24:07.246 A:middle
&gt;&gt; 大家早上好

00:24:08.106 --> 00:24:09.306 A:middle
我希望刚刚大便和

00:24:09.306 --> 00:24:10.466 A:middle
独角兽的游戏

00:24:10.466 --> 00:24:11.126 A:middle
大家学得愉快

00:24:12.706 --> 00:24:13.886 A:middle
我叫 [ 音质不清晰 ]

00:24:13.886 --> 00:24:16.856 A:middle
今天我来帮助大家 给你们的 App

00:24:16.986 --> 00:24:18.786 A:middle
增加一些更棒的元素

00:24:20.006 --> 00:24:22.156 A:middle
我们将会学习

00:24:22.156 --> 00:24:24.816 A:middle
在 iOS 系统中

00:24:24.816 --> 00:24:26.766 A:middle
常用的 API 和框架

00:24:28.456 --> 00:24:30.536 A:middle
首先让我们看看

00:24:30.536 --> 00:24:32.946 A:middle
想要在游戏中添加些什么元素

00:24:34.256 --> 00:24:35.986 A:middle
我们要引入一个“排行榜”

00:24:35.986 --> 00:24:38.306 A:middle
我们可以在这里看到

00:24:38.306 --> 00:24:40.376 A:middle
每个玩过游戏的用户

00:24:40.376 --> 00:24:42.206 A:middle
的名字和分数

00:24:43.576 --> 00:24:46.206 A:middle
当我们点击他的名字时

00:24:46.206 --> 00:24:48.236 A:middle
我们想要看到关于这个人

00:24:48.236 --> 00:24:49.006 A:middle
更多的信息

00:24:49.536 --> 00:24:53.646 A:middle
今天我们开发的 App

00:24:53.716 --> 00:24:55.626 A:middle
主要有三个侧重点

00:24:56.906 --> 00:24:58.416 A:middle
第一个是数据

00:24:58.416 --> 00:25:00.416 A:middle
我们要把用户的信息

00:24:58.416 --> 00:25:00.416 A:middle
我们要把用户的信息

00:25:00.416 --> 00:25:02.126 A:middle
储存在哪里

00:25:03.006 --> 00:25:04.466 A:middle
我们如何检索这些数据

00:25:05.946 --> 00:25:08.006 A:middle
第二点是用户界面

00:25:08.936 --> 00:25:10.626 A:middle
“排行榜”要做成什么样子

00:25:11.166 --> 00:25:13.056 A:middle
它要具备什么功能

00:25:13.666 --> 00:25:15.666 A:middle
最后 我们要看看

00:25:15.666 --> 00:25:17.936 A:middle
管理和储存数据

00:25:18.016 --> 00:25:19.786 A:middle
和在 App 内

00:25:19.786 --> 00:25:22.756 A:middle
完成其他任务的逻辑

00:25:23.826 --> 00:25:26.826 A:middle
如果把我们的 App

00:25:26.826 --> 00:25:29.326 A:middle
拆分成这三部分

00:25:29.326 --> 00:25:31.286 A:middle
那么我们也在

00:25:31.636 --> 00:25:33.526 A:middle
遵循一个非常流行的架构模式

00:25:33.526 --> 00:25:37.046 A:middle
也就是 “model-view-controller

00:25:38.716 --> 00:25:40.596 A:middle
（模型-视图-控制器）”

00:25:41.456 --> 00:25:43.976 A:middle
模型-视图-控制器代表了

00:25:43.976 --> 00:25:44.696 A:middle
模型中的数据

00:25:49.566 --> 00:25:52.286 A:middle
控制器就是

00:25:52.646 --> 00:25:56.606 A:middle
连接模型和视图的逻辑

00:25:57.146 --> 00:26:00.346 A:middle
这个模型可以帮助我们

00:25:57.146 --> 00:26:00.346 A:middle
这个模型可以帮助我们

00:26:00.346 --> 00:26:01.666 A:middle
将类似的任务集合起来

00:26:02.786 --> 00:26:04.706 A:middle
也可以帮助我们

00:26:04.706 --> 00:26:06.976 A:middle
在不影响其他部分的情况下

00:26:06.976 --> 00:26:08.656 A:middle
对 App 某一部分的修改

00:26:08.656 --> 00:26:14.286 A:middle
更加容易在 iOS 中

00:26:14.286 --> 00:26:16.676 A:middle
控制器可以被视为 “UIViewController

00:26:16.676 --> 00:26:18.086 A:middle
（UI 视图控制器）” 类下的子类

00:26:19.816 --> 00:26:22.656 A:middle
视图可以被视为

00:26:22.656 --> 00:26:23.766 A:middle
UIView 的子类

00:26:25.076 --> 00:26:29.326 A:middle
模型可以被视为

00:26:29.866 --> 00:26:30.936 A:middle
NSObject 的子类

00:26:31.116 --> 00:26:33.026 A:middle
在今天的 App 开发中

00:26:33.356 --> 00:26:35.236 A:middle
我们将仔细研究一下

00:26:35.376 --> 00:26:36.786 A:middle
“model-view-controller” 模型

00:26:36.786 --> 00:26:38.006 A:middle
的不同部分

00:26:39.556 --> 00:26:41.196 A:middle
现在我们来看一个演示

00:26:41.656 --> 00:26:43.876 A:middle
来为储存数据创建一个模型

00:26:46.206 --> 00:26:48.206 A:middle
这是刚刚 Jessie 创建的

00:26:48.276 --> 00:26:49.976 A:middle
“消失的独角兽”项目

00:26:51.396 --> 00:26:52.906 A:middle
我现在右键点击

00:26:52.906 --> 00:26:55.426 A:middle
“消失的独角兽”文件夹

00:26:55.426 --> 00:26:56.376 A:middle
点击 “new file（新文件）”

00:26:57.846 --> 00:26:59.186 A:middle
选择 “Cocoa Touch Class”

00:27:00.066 --> 00:27:02.426 A:middle
这是在 iOS 常见的类

00:27:03.486 --> 00:27:05.906 A:middle
点击下一步

00:27:05.906 --> 00:27:07.646 A:middle
在类中输入 [ 音质不清晰 ] Data

00:27:08.426 --> 00:27:11.966 A:middle
这是 NSobject 的子类

00:27:11.966 --> 00:27:14.236 A:middle
NSobject 是我数据的

00:27:14.236 --> 00:27:15.406 A:middle
一个很好的父类

00:27:16.526 --> 00:27:19.086 A:middle
点击下一步 创建

00:27:19.796 --> 00:27:23.636 A:middle
在这个类中

00:27:23.636 --> 00:27:25.336 A:middle
我们要储存玩家信息

00:27:26.156 --> 00:27:28.236 A:middle
现在我要使用 shortcut

00:27:28.526 --> 00:27:29.926 A:middle
添加一些我已经写好的代码

00:27:30.556 --> 00:27:33.916 A:middle
我们有储存每个人

00:27:33.916 --> 00:27:38.006 A:middle
姓名 得分 排名 和图片的变量

00:27:38.006 --> 00:27:41.596 A:middle
除此之外 我还加入了

00:27:41.676 --> 00:27:43.906 A:middle
一些初始化器来设置这些数据

00:27:44.716 --> 00:27:46.406 A:middle
但是我们不用管那些

00:27:47.626 --> 00:27:49.496 A:middle
让我们再去右键点击文件夹

00:27:49.496 --> 00:27:51.626 A:middle
添加一个新类

00:27:51.626 --> 00:27:54.366 A:middle
然后点击 “Add Files”

00:27:55.046 --> 00:27:58.216 A:middle
这是一个我已经写好的

00:27:58.216 --> 00:27:59.366 A:middle
游戏数据类

00:28:02.136 --> 00:28:04.306 A:middle
让我们看一看

00:28:04.306 --> 00:28:06.246 A:middle
在这一类中已经实施的方法

00:28:09.756 --> 00:28:13.056 A:middle
首先 我们有 “savePoints

00:28:13.136 --> 00:28:14.156 A:middle
(for name)” 方法

00:28:14.916 --> 00:28:17.876 A:middle
这是用来储存任意玩家

00:28:17.876 --> 00:28:20.366 A:middle
游戏总分数的

00:28:21.576 --> 00:28:23.926 A:middle
接下来 我们有 “playerData(forRank)” 方法

00:28:23.926 --> 00:28:26.406 A:middle
它能给我们提供

00:28:26.436 --> 00:28:28.616 A:middle
在特定排名下

00:28:28.616 --> 00:28:30.986 A:middle
某玩家的所有信息

00:28:32.006 --> 00:28:34.406 A:middle
最后 我们有一个属性

00:28:34.766 --> 00:28:36.536 A:middle
能计算出

00:28:36.536 --> 00:28:38.396 A:middle
玩过我们游戏的总人数

00:28:39.616 --> 00:28:40.996 A:middle
今天 我们不去关注

00:28:40.996 --> 00:28:42.876 A:middle
这些方法的

00:28:42.876 --> 00:28:43.786 A:middle
实现细节

00:28:44.716 --> 00:28:45.996 A:middle
重要的是 我们要知道

00:28:45.996 --> 00:28:48.316 A:middle
我们创建了一组

00:28:48.316 --> 00:28:51.336 A:middle
单独的文件来保存数据

00:28:52.106 --> 00:28:55.146 A:middle
当你开发自己的 App 时

00:28:55.146 --> 00:28:56.616 A:middle
我鼓励你

00:28:56.616 --> 00:28:59.226 A:middle
将数据视为独立的实体

00:28:59.226 --> 00:29:01.706 A:middle
并使其独立于

00:28:59.226 --> 00:29:01.706 A:middle
并使其独立于

00:29:01.706 --> 00:29:03.126 A:middle
用户界面

00:29:03.656 --> 00:29:05.776 A:middle
就像我们现在做的一样

00:29:06.396 --> 00:29:08.816 A:middle
当涉及到在后台保存

00:29:08.816 --> 00:29:10.306 A:middle
和检索数据时

00:29:10.306 --> 00:29:13.266 A:middle
我们有几个

00:29:13.266 --> 00:29:14.276 A:middle
不同的选项

00:29:14.936 --> 00:29:18.146 A:middle
其中一个是使用核心数据

00:29:18.146 --> 00:29:21.536 A:middle
核心数据对于管理磁盘上的数据

00:29:21.906 --> 00:29:23.136 A:middle
非常有用

00:29:24.266 --> 00:29:26.056 A:middle
它为你提供了

00:29:26.686 --> 00:29:29.046 A:middle
验证 查询 筛选和组织对象的

00:29:29.046 --> 00:29:30.506 A:middle
解决方案

00:29:31.136 --> 00:29:34.756 A:middle
如果你的数据位于某个 web 服务器上

00:29:34.826 --> 00:29:36.936 A:middle
那么你可以使用

00:29:36.936 --> 00:29:40.106 A:middle
NSURLSessions

00:29:40.106 --> 00:29:42.706 A:middle
下载并上传数据

00:29:42.786 --> 00:29:44.936 A:middle
另一个不错的选择是

00:29:44.936 --> 00:29:47.226 A:middle
使用 CloudKit 来

00:29:47.326 --> 00:29:47.696 A:middle
云储存数据

00:29:48.496 --> 00:29:50.686 A:middle
你甚至可以使用

00:29:50.686 --> 00:29:52.656 A:middle
第三方云提供商来

00:29:52.656 --> 00:29:53.336 A:middle
管理你的云数据

00:29:53.336 --> 00:29:55.476 A:middle
现在我们已经设置好了数据

00:29:56.286 --> 00:29:58.666 A:middle
让我们进入

00:29:59.096 --> 00:30:00.956 A:middle
构建用户界面的下一部分

00:29:59.096 --> 00:30:00.956 A:middle
构建用户界面的下一部分

00:30:03.096 --> 00:30:03.856 A:middle
这是我们

00:30:03.856 --> 00:30:05.116 A:middle
想要的排行榜

00:30:06.476 --> 00:30:08.276 A:middle
我将把它分解成

00:30:08.276 --> 00:30:09.936 A:middle
屏幕上几个不同的观察器

00:30:11.266 --> 00:30:14.056 A:middle
在顶部我们有导航栏

00:30:15.306 --> 00:30:18.846 A:middle
下面是一个表格视图

00:30:18.846 --> 00:30:20.896 A:middle
它的行叫做

00:30:21.086 --> 00:30:22.226 A:middle
表视图单元格

00:30:23.486 --> 00:30:26.376 A:middle
在每个单元格中

00:30:26.456 --> 00:30:29.266 A:middle
左边有一个图像视图

00:30:29.266 --> 00:30:31.966 A:middle
右边有一些标签显示文本

00:30:33.456 --> 00:30:36.006 A:middle
除了排行榜

00:30:36.006 --> 00:30:37.786 A:middle
我们还需要设置

00:30:37.786 --> 00:30:39.766 A:middle
细节页面

00:30:39.766 --> 00:30:40.656 A:middle
这个很简单

00:30:41.236 --> 00:30:43.846 A:middle
它有一个图像视图和一些标签

00:30:45.366 --> 00:30:47.376 A:middle
现在我们知道了

00:30:47.486 --> 00:30:50.056 A:middle
我们的 UI 是如何组成的

00:30:50.056 --> 00:30:52.196 A:middle
让我们回到另一个演示中

00:30:52.236 --> 00:30:54.586 A:middle
并设置这个用户界面

00:31:01.886 --> 00:31:03.726 A:middle
我会选择我们和 Jessie

00:31:03.976 --> 00:31:06.966 A:middle
一起创建的 “Main.storyboard”

00:31:07.156 --> 00:31:08.006 A:middle
这里我们有一个

00:31:08.096 --> 00:31:10.626 A:middle
单视图控制器

00:31:10.626 --> 00:31:12.766 A:middle
用于管理游戏的

00:31:12.766 --> 00:31:14.156 A:middle
整个屏幕内容

00:31:15.396 --> 00:31:17.706 A:middle
现在我们想在细节视图中

00:31:18.386 --> 00:31:20.506 A:middle
添加更多的屏幕

00:31:20.506 --> 00:31:21.586 A:middle
来显示我们的排行榜

00:31:22.656 --> 00:31:25.236 A:middle
为此 我们可以从对象库中

00:31:25.236 --> 00:31:27.646 A:middle
添加另一个 View Controller

00:31:28.426 --> 00:31:29.986 A:middle
我来搜索 “View Controller”

00:31:31.406 --> 00:31:32.666 A:middle
我们注意到 View Controller

00:31:32.666 --> 00:31:34.716 A:middle
有几个不同的选项

00:31:35.746 --> 00:31:37.356 A:middle
因为我希望我的排行榜

00:31:37.356 --> 00:31:39.416 A:middle
看起来更像一个表格

00:31:39.416 --> 00:31:41.296 A:middle
所以我选择 “table view controller”

00:31:41.866 --> 00:31:43.516 A:middle
然后把它拖拽到 storyboard 上

00:31:46.186 --> 00:31:47.626 A:middle
“table view controller”

00:31:48.326 --> 00:31:50.756 A:middle
会自动生成表视图

00:31:51.826 --> 00:31:53.196 A:middle
让我们选择表视图

00:31:53.196 --> 00:31:56.166 A:middle
并查看右边的

00:31:56.166 --> 00:31:56.816 A:middle
属性检查器

00:31:58.096 --> 00:32:00.956 A:middle
这里的内容类型设置为

00:31:58.096 --> 00:32:00.956 A:middle
这里的内容类型设置为

00:32:00.956 --> 00:32:02.316 A:middle
“dynamic prototypes（动态原型）”

00:32:03.206 --> 00:32:04.836 A:middle
我把它改成

00:32:04.956 --> 00:32:05.296 A:middle
“static cells（静态单元格）”

00:32:06.646 --> 00:32:08.216 A:middle
静态单元格

00:32:08.216 --> 00:32:09.656 A:middle
非常适合显示静态数据

00:32:10.576 --> 00:32:12.316 A:middle
这些可以容易地

00:32:12.466 --> 00:32:13.416 A:middle
在 storyboard 中设置

00:32:14.786 --> 00:32:17.146 A:middle
现在 我们选择一个单元格

00:32:17.256 --> 00:32:19.516 A:middle
从属性检查器中

00:32:19.516 --> 00:32:21.186 A:middle
将其样式更改为

00:32:21.246 --> 00:32:21.966 A:middle
“subtitle（副标题）”

00:32:23.456 --> 00:32:25.126 A:middle
我们有了一个标题和副标题

00:32:25.126 --> 00:32:27.386 A:middle
在这里我可以在排行榜上

00:32:27.386 --> 00:32:29.486 A:middle
显示名字和分数

00:32:31.046 --> 00:32:33.426 A:middle
我还想在行左边

00:32:33.426 --> 00:32:34.496 A:middle
添加一个图像

00:32:35.476 --> 00:32:38.136 A:middle
为此 我可以在

00:32:38.136 --> 00:32:39.986 A:middle
属性检查器的

00:32:39.986 --> 00:32:42.086 A:middle
图像字段中输入

00:32:42.086 --> 00:32:42.736 A:middle
一个图像的名称

00:32:43.856 --> 00:32:46.776 A:middle
我在项目中导入了一张图片

00:32:46.846 --> 00:32:48.686 A:middle
作为示例

00:32:49.266 --> 00:32:51.306 A:middle
让我补充进来

00:32:51.866 --> 00:32:55.666 A:middle
好的 现在单元格都设置好了

00:32:55.666 --> 00:32:57.776 A:middle
我们的排行榜

00:32:57.776 --> 00:32:58.716 A:middle
有了很好的框架

00:32:59.586 --> 00:33:02.066 A:middle
让我们继续添加细节 UI

00:32:59.586 --> 00:33:02.066 A:middle
让我们继续添加细节 UI

00:33:02.066 --> 00:33:05.276 A:middle
我要返回到对象库

00:33:05.276 --> 00:33:07.686 A:middle
这次我们取一个

00:33:07.686 --> 00:33:10.176 A:middle
空白的视图控制器

00:33:10.176 --> 00:33:11.896 A:middle
添加到 storyboard 中

00:33:14.236 --> 00:33:16.876 A:middle
在这个 View Controller 中

00:33:16.876 --> 00:33:18.526 A:middle
我们将添加一个图像视图

00:33:22.076 --> 00:33:24.036 A:middle
让我从属性检查器中

00:33:24.036 --> 00:33:25.366 A:middle
设置图像

00:33:27.076 --> 00:33:27.786 A:middle
稍等

00:33:27.786 --> 00:33:29.676 A:middle
这个有点变形

00:33:30.336 --> 00:33:32.676 A:middle
让我将 “content mode（内容模式）”

00:33:32.676 --> 00:33:36.656 A:middle
调节为适应比例 好多了

00:33:37.796 --> 00:33:39.376 A:middle
现在我要回到对象库

00:33:39.376 --> 00:33:40.976 A:middle
添加一些标签

00:33:44.046 --> 00:33:45.356 A:middle
这些将用于

00:33:45.356 --> 00:33:46.456 A:middle
存储名称

00:33:47.076 --> 00:33:48.186 A:middle
我要做一个副本

00:33:49.066 --> 00:33:51.516 A:middle
下一个是排名

00:33:51.606 --> 00:33:53.146 A:middle
最后是另一个标签

00:33:53.846 --> 00:33:54.716 A:middle
再做一个副本

00:33:54.966 --> 00:33:56.256 A:middle
另一个分数标签

00:33:57.496 --> 00:34:00.186 A:middle
好的 现在我们的 View Controllers

00:33:57.496 --> 00:34:00.186 A:middle
好的 现在我们的 View Controllers

00:34:00.186 --> 00:34:02.496 A:middle
都设置好了

00:34:02.496 --> 00:34:03.586 A:middle
还有一件事要做

00:34:03.586 --> 00:34:06.756 A:middle
我们要让 App 知道

00:34:06.756 --> 00:34:08.335 A:middle
在我们在 App 中

00:34:08.335 --> 00:34:10.466 A:middle
做了某个动作后

00:34:11.466 --> 00:34:13.335 A:middle
要显示排行榜或细节视图

00:34:13.335 --> 00:34:13.545 A:middle
因为我们想要在

00:34:14.936 --> 00:34:17.076 A:middle
点击按钮之后

00:34:17.076 --> 00:34:19.376 A:middle
让排行榜

00:34:19.376 --> 00:34:20.696 A:middle
显示出来

00:34:20.896 --> 00:34:23.356 A:middle
我将在排行榜按钮

00:34:23.356 --> 00:34:25.065 A:middle
和 table view controller 之间

00:34:25.106 --> 00:34:26.176 A:middle
创建一个连接

00:34:27.286 --> 00:34:29.045 A:middle
让我们按住

00:34:29.045 --> 00:34:31.036 A:middle
键盘上的 control 键

00:34:31.036 --> 00:34:32.466 A:middle
并将鼠标

00:34:32.466 --> 00:34:33.246 A:middle
从排行榜按钮

00:34:33.246 --> 00:34:34.376 A:middle
拖到 table view controller

00:34:34.916 --> 00:34:38.235 A:middle
当我松开鼠标

00:34:38.235 --> 00:34:40.235 A:middle
会看到菜单上有几个不同的选项

00:34:40.755 --> 00:34:43.376 A:middle
这里是一些

00:34:43.376 --> 00:34:45.496 A:middle
我们可以将

00:34:45.496 --> 00:34:47.476 A:middle
第二个 View Controller

00:34:47.476 --> 00:34:48.116 A:middle
置于第一个之上的方法

00:34:49.416 --> 00:34:51.196 A:middle
现在 我要选择 “show” 选项

00:34:51.196 --> 00:34:53.866 A:middle
这是此类型 App

00:34:53.936 --> 00:34:55.106 A:middle
很常用的连续

00:34:56.716 --> 00:34:58.856 A:middle
我们注意到

00:34:58.986 --> 00:35:00.856 A:middle
两个视图控制器之间已经

00:34:58.986 --> 00:35:00.856 A:middle
两个视图控制器之间已经

00:35:00.856 --> 00:35:01.526 A:middle
创建了连接

00:35:02.496 --> 00:35:04.726 A:middle
这就叫做“连续”

00:35:05.636 --> 00:35:07.946 A:middle
现在 当我点击

00:35:07.946 --> 00:35:09.626 A:middle
排行榜中的单元格时

00:35:09.926 --> 00:35:11.646 A:middle
我想要显示 “details view

00:35:11.646 --> 00:35:12.256 A:middle
controller（细节视图控制器）”

00:35:13.106 --> 00:35:14.306 A:middle
我们再按住 control 键

00:35:14.306 --> 00:35:16.346 A:middle
将鼠标拖到

00:35:16.976 --> 00:35:18.556 A:middle
“details view controller”

00:35:18.946 --> 00:35:21.126 A:middle
再次选择 “show”

00:35:21.836 --> 00:35:24.486 A:middle
现在我们已经准备好

00:35:24.486 --> 00:35:25.706 A:middle
第一次运行我们的 App 了

00:35:28.436 --> 00:35:30.276 A:middle
我们来看看模拟器

00:35:30.936 --> 00:35:35.356 A:middle
如果点击排行榜

00:35:35.356 --> 00:35:37.486 A:middle
我发现它有一个

00:35:37.486 --> 00:35:38.156 A:middle
很好的模型

00:35:39.016 --> 00:35:41.306 A:middle
我可以点击单元格

00:35:41.306 --> 00:35:43.896 A:middle
就可以显示详细

00:35:43.896 --> 00:35:44.706 A:middle
信息视图

00:35:45.336 --> 00:35:46.706 A:middle
看起来不错

00:35:46.706 --> 00:35:50.306 A:middle
但我该如何回到

00:35:50.306 --> 00:35:51.906 A:middle
排行榜或游戏呢

00:35:52.946 --> 00:35:54.756 A:middle
让我们来解决这个问题

00:35:56.076 --> 00:35:58.926 A:middle
为此 我将选择

00:35:58.926 --> 00:36:01.036 A:middle
装载游戏的

00:35:58.926 --> 00:36:01.036 A:middle
装载游戏的

00:36:01.036 --> 00:36:01.556 A:middle
主要 View Controller

00:36:02.516 --> 00:36:04.206 A:middle
然后选择 Xcode 菜单中的 “editor（编辑器）”

00:36:04.246 --> 00:36:07.186 A:middle
选择 嵌入

00:36:07.526 --> 00:36:08.906 A:middle
“Navigation Controller”

00:36:09.466 --> 00:36:12.676 A:middle
这为我们的 App

00:36:12.676 --> 00:36:13.796 A:middle
添加了一个导航控制器

00:36:14.536 --> 00:36:16.816 A:middle
导航控制器是一种

00:36:16.816 --> 00:36:18.776 A:middle
特殊类型的视图控制器

00:36:19.216 --> 00:36:21.266 A:middle
用于管理

00:36:21.266 --> 00:36:22.956 A:middle
视图控制器之间的

00:36:23.056 --> 00:36:24.736 A:middle
来回转换

00:36:26.066 --> 00:36:29.046 A:middle
它也在视图控制器的顶部

00:36:29.046 --> 00:36:31.146 A:middle
添加了一个导航栏

00:36:31.146 --> 00:36:33.256 A:middle
如果我从属性检查器中

00:36:33.256 --> 00:36:36.226 A:middle
为排行榜设置了标题

00:36:36.646 --> 00:36:38.856 A:middle
它现在会显示在

00:36:38.856 --> 00:36:41.556 A:middle
导航条中

00:36:42.936 --> 00:36:44.966 A:middle
现在我们已经添加了

00:36:44.966 --> 00:36:47.396 A:middle
所有需要为 UI 添加的观察器

00:36:48.726 --> 00:36:50.616 A:middle
最后 我要给这个 App

00:36:50.616 --> 00:36:53.066 A:middle
添加一个图标

00:36:54.376 --> 00:36:56.426 A:middle
让我们进入项目导航器

00:36:57.156 --> 00:36:59.276 A:middle
选择名为 “assets” 的

00:36:59.556 --> 00:36:59.876 A:middle
蓝色文件夹

00:37:01.146 --> 00:37:03.366 A:middle
选择 App 图标图像设置

00:37:04.836 --> 00:37:06.956 A:middle
现在这里有一些

00:37:06.956 --> 00:37:08.016 A:middle
设计师已经做好的图标

00:37:08.736 --> 00:37:11.446 A:middle
选择这些

00:37:11.546 --> 00:37:12.666 A:middle
添加到 Xcode 中

00:37:14.656 --> 00:37:16.756 A:middle
创建这些图标

00:37:16.756 --> 00:37:18.436 A:middle
有一种特定的方式

00:37:18.686 --> 00:37:20.116 A:middle
在 developer.apple.com 上

00:37:20.116 --> 00:37:21.766 A:middle
提供了教程

00:37:22.346 --> 00:37:25.676 A:middle
这一次 当我们运行 App 时

00:37:26.116 --> 00:37:28.296 A:middle
先把这个关闭

00:37:28.296 --> 00:37:30.976 A:middle
在主页上就可以看到图标了

00:37:31.646 --> 00:37:32.406 A:middle
可爱吗

00:37:33.516 --> 00:37:36.856 A:middle
[ 掌声 ] 谢谢

00:37:38.026 --> 00:37:39.166 A:middle
让我们回到 App 中

00:37:40.586 --> 00:37:42.126 A:middle
然后点击排行榜

00:37:43.496 --> 00:37:45.936 A:middle
现在 我们可以在

00:37:45.936 --> 00:37:47.826 A:middle
所有视图之间来回切换了

00:37:47.826 --> 00:37:50.926 A:middle
太棒了 现在让我们

00:37:51.016 --> 00:37:52.286 A:middle
[ 掌声 ]

00:37:52.286 --> 00:37:53.546 A:middle
很高兴大家能喜欢

00:37:54.656 --> 00:37:56.686 A:middle
现在让我们转动手机

00:37:56.746 --> 00:37:57.726 A:middle
看看会发生什么

00:37:58.346 --> 00:38:01.206 A:middle
哦不 标签都被

00:37:58.346 --> 00:38:01.206 A:middle
哦不 标签都被

00:38:01.206 --> 00:38:04.266 A:middle
挡住了 图片又太靠左了

00:38:04.956 --> 00:38:07.256 A:middle
为了让我的布局看起来正确

00:38:07.256 --> 00:38:08.976 A:middle
把手机转回来

00:38:10.076 --> 00:38:12.196 A:middle
我将使用一种

00:38:12.316 --> 00:38:13.066 A:middle
叫做自动布局的技术

00:38:14.616 --> 00:38:16.536 A:middle
自动布局是一组规则

00:38:16.776 --> 00:38:19.706 A:middle
通过定义规则

00:38:19.706 --> 00:38:21.846 A:middle
我们可以让 App 视图

00:38:21.896 --> 00:38:22.216 A:middle
按照我们的意愿布局

00:38:23.866 --> 00:38:26.846 A:middle
因此 自动布局中的每个规则

00:38:26.846 --> 00:38:28.366 A:middle
都被称为约束

00:38:29.386 --> 00:38:31.336 A:middle
现在 我们要在 details view controller 中

00:38:31.856 --> 00:38:33.316 A:middle
为这个图像视图

00:38:33.316 --> 00:38:34.696 A:middle
添加一些约束

00:38:36.206 --> 00:38:40.156 A:middle
看看 storyboard 右下角的按钮

00:38:41.356 --> 00:38:43.506 A:middle
我们点击“排列”按钮

00:38:43.896 --> 00:38:45.756 A:middle
按钮的图标是两条横条

00:38:46.566 --> 00:38:48.356 A:middle
勾选 “horizontally

00:38:48.386 --> 00:38:48.876 A:middle
in container”

00:38:48.876 --> 00:38:51.026 A:middle
添加一个约束

00:38:51.026 --> 00:38:54.346 A:middle
这就在 App 中设置了

00:38:54.346 --> 00:38:56.546 A:middle
图像视图

00:38:56.546 --> 00:38:57.926 A:middle
总是在水平中心

00:38:58.656 --> 00:39:01.146 A:middle
我们再单击“排列按钮”

00:38:58.656 --> 00:39:01.146 A:middle
我们再单击“排列按钮”

00:39:01.146 --> 00:39:03.306 A:middle
旁边的这个按钮

00:39:03.446 --> 00:39:04.996 A:middle
叫做 “Add New Constraints（添加新约束）”

00:39:05.736 --> 00:39:08.926 A:middle
最上面的文本框

00:39:09.256 --> 00:39:11.926 A:middle
表示我的图像视图

00:39:12.016 --> 00:39:14.586 A:middle
与其上方最近的项目

00:39:14.586 --> 00:39:15.516 A:middle
之间的距离

00:39:16.706 --> 00:39:19.086 A:middle
如果我设置这个数值

00:39:19.086 --> 00:39:21.516 A:middle
就能确保

00:39:21.516 --> 00:39:23.566 A:middle
我的图像视图

00:39:23.606 --> 00:39:26.456 A:middle
距离顶部最近的项目

00:39:26.456 --> 00:39:27.366 A:middle
有 10 点的距离

00:39:27.566 --> 00:39:28.696 A:middle
也可能是

00:39:28.696 --> 00:39:29.456 A:middle
距离屏幕的边缘

00:39:30.556 --> 00:39:32.876 A:middle
让我们再设置下宽度和高度

00:39:39.046 --> 00:39:41.826 A:middle
现在我们的图像视图都设置好

00:39:41.826 --> 00:39:43.026 A:middle
可以使用自动布局了

00:39:43.876 --> 00:39:45.396 A:middle
我将给所有标签

00:39:45.396 --> 00:39:47.226 A:middle
添加相似的约束

00:39:48.086 --> 00:39:49.736 A:middle
我们将它们可以全选

00:39:49.736 --> 00:39:51.386 A:middle
来一次性完成更改

00:39:54.996 --> 00:39:58.326 A:middle
现在如果我们运行 App

00:39:58.326 --> 00:40:00.336 A:middle
然后旋转

00:39:58.326 --> 00:40:00.336 A:middle
然后旋转

00:40:00.446 --> 00:40:02.976 A:middle
应该就可以看到视图正确分布了

00:40:04.026 --> 00:40:05.936 A:middle
还有一种更简单的方式

00:40:05.936 --> 00:40:07.166 A:middle
来验证我们的布局

00:40:08.136 --> 00:40:09.516 A:middle
我们可以看到

00:40:09.606 --> 00:40:11.786 A:middle
storyboard 左下角的

00:40:11.786 --> 00:40:13.126 A:middle
设备配置窗格

00:40:14.466 --> 00:40:18.066 A:middle
把方向转变成横屏

00:40:18.796 --> 00:40:21.836 A:middle
现在我可以看到

00:40:21.836 --> 00:40:23.276 A:middle
横向的视窗了

00:40:24.016 --> 00:40:25.436 A:middle
我的图片

00:40:25.436 --> 00:40:27.796 A:middle
在正中央

00:40:27.796 --> 00:40:30.976 A:middle
标签都在同一个页面上

00:40:32.436 --> 00:40:34.086 A:middle
你甚至可以

00:40:34.126 --> 00:40:36.056 A:middle
从设备配置窗格中更改设备

00:40:36.056 --> 00:40:38.476 A:middle
看看在 iPad 上

00:40:38.716 --> 00:40:40.966 A:middle
或更小的手机上会是什么样子

00:40:41.506 --> 00:40:46.486 A:middle
这样 UI 就都设置好了

00:40:47.116 --> 00:40:48.866 A:middle
让我们快速回顾一下

00:40:48.866 --> 00:40:50.336 A:middle
刚刚在这部分中

00:40:50.556 --> 00:40:51.056 A:middle
学到的内容

00:40:52.036 --> 00:40:55.006 A:middle
我们从一个

00:40:55.006 --> 00:40:57.596 A:middle
单视图控制器开始

00:40:57.816 --> 00:40:59.426 A:middle
它管理着

00:40:59.586 --> 00:41:00.636 A:middle
整个游戏的屏幕

00:40:59.586 --> 00:41:00.636 A:middle
整个游戏的屏幕

00:41:01.826 --> 00:41:03.406 A:middle
我们了解到可

00:41:03.566 --> 00:41:05.846 A:middle
以创建多个视图控制器

00:41:05.846 --> 00:41:08.426 A:middle
来显示多个内容屏幕

00:41:09.016 --> 00:41:11.846 A:middle
如果我们创建了多屏幕的内容

00:41:11.846 --> 00:41:16.016 A:middle
那么我们需要告诉 iOS

00:41:16.506 --> 00:41:18.596 A:middle
如何从一个视图控制器

00:41:18.596 --> 00:41:19.946 A:middle
切换到另一个

00:41:20.976 --> 00:41:23.486 A:middle
我们通过添加连接

00:41:24.046 --> 00:41:25.506 A:middle
也就是“连续”来实现这一点

00:41:27.296 --> 00:41:28.046 A:middle
我们创建了一个

00:41:28.046 --> 00:41:29.506 A:middle
表格视图控制器

00:41:30.006 --> 00:41:32.596 A:middle
它非常适合显示数据列表

00:41:34.186 --> 00:41:36.236 A:middle
我们还在导航控制器中

00:41:36.236 --> 00:41:37.696 A:middle
添加了它

00:41:38.656 --> 00:41:40.776 A:middle
导航控制器

00:41:40.776 --> 00:41:42.636 A:middle
帮助我们在表视图和细节页面之间

00:41:42.636 --> 00:41:45.826 A:middle
来回切换

00:41:46.966 --> 00:41:49.386 A:middle
这种使用

00:41:49.386 --> 00:41:51.016 A:middle
表视图和导航控制器的模式

00:41:51.016 --> 00:41:54.586 A:middle
在 iOS App 中很常见

00:41:55.756 --> 00:41:56.966 A:middle
这里有一些例子

00:41:59.676 --> 00:42:01.086 A:middle
要了解更多

00:41:59.676 --> 00:42:01.086 A:middle
要了解更多

00:42:01.086 --> 00:42:02.866 A:middle
关于视图控制器的信息

00:42:02.866 --> 00:42:05.846 A:middle
请查看 developer.apple.com 上的文档

00:42:07.186 --> 00:42:08.856 A:middle
我们还学习了自动布局

00:42:08.856 --> 00:42:10.636 A:middle
这是一种很好的技术

00:42:10.696 --> 00:42:12.726 A:middle
可以为不同的屏幕尺寸

00:42:12.726 --> 00:42:15.096 A:middle
和不同的方向

00:42:15.156 --> 00:42:16.346 A:middle
构建良好的

00:42:16.346 --> 00:42:17.236 A:middle
用户界面

00:42:18.016 --> 00:42:19.586 A:middle
我建议大家去

00:42:19.586 --> 00:42:22.076 A:middle
看看这些 WWDC 课程

00:42:22.076 --> 00:42:23.516 A:middle
来了解更多关于自动布局的知识

00:42:25.146 --> 00:42:28.686 A:middle
最后 我们可以将数据模型

00:42:28.876 --> 00:42:31.566 A:middle
与 UI 连接起来

00:42:31.566 --> 00:42:34.016 A:middle
并写入逻辑 将所有东西

00:42:34.016 --> 00:42:34.546 A:middle
组合在一起

00:42:35.346 --> 00:42:37.446 A:middle
让我们看看另一个演示

00:42:41.216 --> 00:42:43.526 A:middle
我们需要在每次游戏结束时

00:42:43.566 --> 00:42:44.816 A:middle
保存分数

00:42:45.736 --> 00:42:48.306 A:middle
为此 我选择

00:42:48.306 --> 00:42:50.046 A:middle
与 Jessie 一起编写的

00:42:50.046 --> 00:42:50.696 A:middle
视图控制器

00:42:51.266 --> 00:42:54.226 A:middle
在 “game over()” 方法中

00:42:55.396 --> 00:42:58.916 A:middle
我将调用之前编写的数据模型

00:42:59.286 --> 00:43:01.446 A:middle
上的一个方法来保存分数

00:42:59.286 --> 00:43:01.446 A:middle
上的一个方法来保存分数

00:43:03.256 --> 00:43:06.186 A:middle
这个 “save points()” 方法

00:43:06.186 --> 00:43:07.646 A:middle
有两个参数

00:43:08.536 --> 00:43:10.456 A:middle
一个是我们已经保存在

00:43:11.226 --> 00:43:14.066 A:middle
游戏分数变量中的总分数

00:43:15.336 --> 00:43:18.746 A:middle
第二个参数是

00:43:18.746 --> 00:43:20.376 A:middle
正在玩游戏的玩家的用户名

00:43:20.806 --> 00:43:22.896 A:middle
总结一下

00:43:22.896 --> 00:43:24.826 A:middle
我在之前创建的

00:43:25.146 --> 00:43:26.876 A:middle
视图控制器中

00:43:26.876 --> 00:43:27.356 A:middle
添加了一些代码

00:43:28.066 --> 00:43:30.466 A:middle
游戏中的

00:43:30.546 --> 00:43:32.926 A:middle
“save points()” 方法

00:43:32.926 --> 00:43:33.706 A:middle
有两个参数

00:43:34.336 --> 00:43:36.266 A:middle
第一个是我们已经

00:43:36.956 --> 00:43:39.616 A:middle
存储在变量中的游戏分数

00:43:40.596 --> 00:43:44.346 A:middle
第二个参数是

00:43:44.346 --> 00:43:46.156 A:middle
正在玩游戏的玩家的用户名

00:43:47.476 --> 00:43:49.916 A:middle
在实际的 App 中

00:43:49.916 --> 00:43:51.866 A:middle
你可能会创建一个

00:43:51.866 --> 00:43:53.636 A:middle
配置文件屏幕或设置屏幕

00:43:53.636 --> 00:43:55.946 A:middle
用户可以在其中

00:43:55.946 --> 00:43:56.726 A:middle
输入自己的名字

00:43:57.496 --> 00:43:59.056 A:middle
但为了这个演示

00:43:59.056 --> 00:44:01.566 A:middle
我要将自己的名字

00:43:59.056 --> 00:44:01.566 A:middle
我要将自己的名字

00:44:01.566 --> 00:44:02.366 A:middle
硬编码进来

00:44:02.946 --> 00:44:05.856 A:middle
现在 我们已经保存了分数

00:44:05.856 --> 00:44:08.356 A:middle
我们需要写一些代码

00:44:08.356 --> 00:44:11.236 A:middle
来在排行榜上正确显示

00:44:11.576 --> 00:44:13.866 A:middle
分数和名字

00:44:14.756 --> 00:44:16.386 A:middle
让我们继续创建一个类

00:44:16.386 --> 00:44:18.956 A:middle
右键单击

00:44:19.066 --> 00:44:21.506 A:middle
独角兽的文件夹

00:44:21.506 --> 00:44:22.646 A:middle
点击 “New File (新文件)”

00:44:23.806 --> 00:44:25.426 A:middle
再次选择 “Cocoa Touch Class”

00:44:25.946 --> 00:44:30.466 A:middle
这是 UI “Table View Controller” 的子类

00:44:31.606 --> 00:44:33.656 A:middle
记得我们在 storyboard 上

00:44:33.656 --> 00:44:35.266 A:middle
创建的排行榜吗

00:44:35.616 --> 00:44:37.336 A:middle
那就是一个表格视图控制器

00:44:37.696 --> 00:44:40.256 A:middle
所以我要再次使用 Table View Controller 类

00:44:40.256 --> 00:44:42.816 A:middle
来为排行榜

00:44:42.916 --> 00:44:44.096 A:middle
输入一些代码

00:44:45.166 --> 00:44:46.626 A:middle
让我们称它为

00:44:46.626 --> 00:44:48.476 A:middle
“Leaderboard View Controller”

00:44:49.796 --> 00:44:51.636 A:middle
点击下一步 创建

00:44:56.096 --> 00:44:58.106 A:middle
它已经有了一些

00:44:58.106 --> 00:45:00.726 A:middle
由 Xcode 生成的代码

00:44:58.106 --> 00:45:00.726 A:middle
由 Xcode 生成的代码

00:45:01.536 --> 00:45:03.156 A:middle
这些是开发者们

00:45:03.646 --> 00:45:05.956 A:middle
在构建自己的

00:45:05.956 --> 00:45:06.756 A:middle
Table View Controller 时

00:45:06.756 --> 00:45:07.916 A:middle
发现有用的方法

00:45:08.976 --> 00:45:11.536 A:middle
我们将实现其中两种方法

00:45:12.766 --> 00:45:15.666 A:middle
首先是 “table view number of

00:45:15.736 --> 00:45:16.866 A:middle
rows in sections（）”

00:45:17.936 --> 00:45:20.916 A:middle
这个方法

00:45:21.066 --> 00:45:22.906 A:middle
决定着我们

00:45:22.906 --> 00:45:24.836 A:middle
想要在表格视图中显示的总行数

00:45:25.966 --> 00:45:30.656 A:middle
在我们的例子中总行数

00:45:30.766 --> 00:45:32.146 A:middle
等于参与游戏的

00:45:32.146 --> 00:45:33.336 A:middle
玩家总数

00:45:33.336 --> 00:45:36.026 A:middle
我们可以从数据模型中

00:45:36.026 --> 00:45:37.736 A:middle
得到这些信息

00:45:38.706 --> 00:45:40.586 A:middle
所以玩家变量的数量

00:45:40.586 --> 00:45:43.616 A:middle
会给出我们所有的行数

00:45:45.056 --> 00:45:46.986 A:middle
我们需要实现的

00:45:46.986 --> 00:45:49.396 A:middle
第二种方法是

00:45:49.396 --> 00:45:50.976 A:middle
“cell [ 音质不清晰 ] at index path” 方法

00:45:52.536 --> 00:45:55.906 A:middle
每当排行榜上需要

00:45:56.116 --> 00:45:59.006 A:middle
显示单元格时

00:45:59.006 --> 00:45:59.746 A:middle
就会调用此方法

00:46:00.776 --> 00:46:03.766 A:middle
索引路径参数

00:46:03.856 --> 00:46:06.636 A:middle
告诉我们将显示的

00:46:06.636 --> 00:46:07.576 A:middle
单元格的行号

00:46:08.856 --> 00:46:10.706 A:middle
在这里 我们需要像

00:46:10.756 --> 00:46:13.256 A:middle
评论所说的那样

00:46:13.306 --> 00:46:14.116 A:middle
配置单元格

00:46:15.526 --> 00:46:18.146 A:middle
让我插入一些代码

00:46:18.256 --> 00:46:18.956 A:middle
来设置这个单元格

00:46:18.956 --> 00:46:22.126 A:middle
我们再次使用了

00:46:22.386 --> 00:46:22.876 A:middle
“gameData” 类

00:46:23.886 --> 00:46:26.256 A:middle
索引路径行会

00:46:26.256 --> 00:46:28.366 A:middle
告诉我们玩家的排名

00:46:28.976 --> 00:46:30.046 A:middle
因为我们想

00:46:30.046 --> 00:46:31.566 A:middle
按升序显示玩家

00:46:32.726 --> 00:46:35.036 A:middle
一旦我们有了玩家的排名

00:46:35.036 --> 00:46:36.816 A:middle
我们就可以把它发送到

00:46:36.816 --> 00:46:38.806 A:middle
“gameData” 类下的 “player data” 方法

00:46:39.316 --> 00:46:41.466 A:middle
来获取更多关于此玩家的信息

00:46:42.906 --> 00:46:45.006 A:middle
使用这些信息

00:46:45.136 --> 00:46:46.336 A:middle
我们可以设置单元格

00:46:47.246 --> 00:46:49.626 A:middle
文本标签就是标题

00:46:50.326 --> 00:46:52.826 A:middle
细节文本标签就是副标题

00:46:53.296 --> 00:46:54.996 A:middle
图像视图就是

00:46:54.996 --> 00:46:56.486 A:middle
照片的图像

00:46:56.486 --> 00:46:59.216 A:middle
现在 我将不再重复创建

00:46:59.256 --> 00:47:01.136 A:middle
该游戏数据实例

00:46:59.256 --> 00:47:01.136 A:middle
该游戏数据实例

00:47:01.136 --> 00:47:02.406 A:middle
而是将其放在该类的顶部

00:47:02.406 --> 00:47:04.556 A:middle
以便可以再使用

00:47:06.136 --> 00:47:08.136 A:middle
让我也删除

00:47:08.236 --> 00:47:09.976 A:middle
默认添加的分

00:47:09.976 --> 00:47:11.936 A:middle
段方法的数量

00:47:11.936 --> 00:47:12.936 A:middle
我们今天不需要

00:47:13.506 --> 00:47:15.576 A:middle
现在我们已经为排行榜

00:47:15.656 --> 00:47:17.996 A:middle
写好了代码

00:47:18.076 --> 00:47:20.546 A:middle
让我们打开 “Main.storyboard”

00:47:20.546 --> 00:47:21.986 A:middle
和右边的助理编辑器

00:47:23.546 --> 00:47:25.486 A:middle
我把界面旋转一下

00:47:25.676 --> 00:47:26.646 A:middle
这样我们就能看清楚了

00:47:30.476 --> 00:47:33.116 A:middle
我们需要告诉 Xcode

00:47:33.256 --> 00:47:35.786 A:middle
排行榜的代码

00:47:35.786 --> 00:47:38.426 A:middle
写在我们刚刚创建的类中

00:47:39.466 --> 00:47:41.786 A:middle
为此 我将为排行榜选择视图控制器

00:47:41.786 --> 00:47:43.516 A:middle
选择 “View Controller”

00:47:44.466 --> 00:47:46.616 A:middle
点击身份检查器

00:47:47.306 --> 00:47:49.386 A:middle
将类名改成

00:47:49.386 --> 00:47:50.806 A:middle
“leaderboard view controller”

00:47:51.346 --> 00:47:54.216 A:middle
在此之后

00:47:54.316 --> 00:47:57.366 A:middle
我在 storyboard 中选择 “Table View”

00:47:58.066 --> 00:48:00.146 A:middle
转到属性检查器

00:47:58.066 --> 00:48:00.146 A:middle
转到属性检查器

00:48:00.816 --> 00:48:02.746 A:middle
并将内容类型更改为

00:48:02.746 --> 00:48:03.926 A:middle
“dynamic prototypes”

00:48:05.736 --> 00:48:08.136 A:middle
这意味着现在

00:48:08.136 --> 00:48:10.736 A:middle
单元格正在我们编写的代码中

00:48:10.736 --> 00:48:12.006 A:middle
动态创建

00:48:13.576 --> 00:48:16.306 A:middle
我们再选择一个单元格

00:48:19.356 --> 00:48:22.156 A:middle
在属性检查器的

00:48:22.156 --> 00:48:24.626 A:middle
标识符部分

00:48:24.626 --> 00:48:27.606 A:middle
我要从类中的

00:48:28.106 --> 00:48:29.706 A:middle
“cell [ 音质不清晰 ] path()” 方法

00:48:29.706 --> 00:48:31.046 A:middle
复制重用标识符

00:48:32.926 --> 00:48:35.456 A:middle
通过这样做

00:48:35.456 --> 00:48:37.876 A:middle
我想在我的表视图中

00:48:37.926 --> 00:48:38.916 A:middle
重用单元格

00:48:39.686 --> 00:48:40.966 A:middle
这将有助于改进

00:48:41.026 --> 00:48:42.716 A:middle
表视图的性能

00:48:45.276 --> 00:48:47.346 A:middle
最后 我们已经为这个排行榜类

00:48:47.486 --> 00:48:49.976 A:middle
编写了代码

00:48:50.086 --> 00:48:51.606 A:middle
我们仍然需要为

00:48:51.606 --> 00:48:52.956 A:middle
“Details View Controller” 编写代码

00:48:56.356 --> 00:48:58.286 A:middle
幸运的是 我已经添加了一些代码

00:48:58.286 --> 00:49:01.156 A:middle
我们将把它们导入项目中

00:48:58.286 --> 00:49:01.156 A:middle
我们将把它们导入项目中

00:49:03.336 --> 00:49:06.586 A:middle
这是 “Details View Controller” 类

00:49:07.116 --> 00:49:09.466 A:middle
让我们从跳转栏里直接跳转

00:49:11.226 --> 00:49:14.326 A:middle
这里有一些 IBOutlets

00:49:14.326 --> 00:49:15.746 A:middle
用于我们 “Details View Controller” 中的

00:49:15.746 --> 00:49:17.126 A:middle
不同视图

00:49:18.196 --> 00:49:20.506 A:middle
记住 当我们写游戏时

00:49:20.506 --> 00:49:22.526 A:middle
我们要将 IBOutlets 连接到

00:49:22.526 --> 00:49:24.236 A:middle
storyboard 中的视图

00:49:25.226 --> 00:49:27.196 A:middle
但我们现在不能这么做

00:49:28.026 --> 00:49:30.376 A:middle
是因为我们

00:49:30.436 --> 00:49:32.526 A:middle
还没有告诉 Xcode

00:49:32.526 --> 00:49:34.196 A:middle
这个视图控制器的代码就在这里

00:49:35.076 --> 00:49:36.636 A:middle
让我们到标识检查器

00:49:36.636 --> 00:49:38.466 A:middle
通过将类名更改为

00:49:38.466 --> 00:49:39.936 A:middle
“details view controller”

00:49:39.936 --> 00:49:41.246 A:middle
来再次执行此操作

00:49:42.456 --> 00:49:44.806 A:middle
现在我们就可以

00:49:44.896 --> 00:49:45.476 A:middle
轻松地连接 IBOutlets 了

00:49:52.256 --> 00:49:55.166 A:middle
通过这样做

00:49:55.166 --> 00:49:57.506 A:middle
我们可以从代码中设置视图

00:49:57.506 --> 00:50:00.226 A:middle
就像我在 “view load()” 方法中所做的那样

00:49:57.506 --> 00:50:00.226 A:middle
就像我在 “view load()” 方法中所做的那样

00:50:01.456 --> 00:50:02.966 A:middle
我把 “Main.storyboard”

00:50:02.966 --> 00:50:05.446 A:middle
暂时隐藏起来

00:50:05.586 --> 00:50:07.686 A:middle
这里还有一个

00:50:07.686 --> 00:50:08.366 A:middle
玩家信息变量

00:50:08.366 --> 00:50:11.046 A:middle
我们使用玩家信息

00:50:11.046 --> 00:50:13.426 A:middle
来建立我们的视图

00:50:14.876 --> 00:50:16.706 A:middle
你可能在想

00:50:16.706 --> 00:50:18.166 A:middle
我们并没有把这个玩家的信息

00:50:18.166 --> 00:50:19.356 A:middle
发送到任何地方

00:50:20.246 --> 00:50:21.756 A:middle
那么我们如何得到这些数据呢

00:50:23.136 --> 00:50:25.106 A:middle
实际上 我们需要询问排行榜

00:50:25.106 --> 00:50:27.266 A:middle
是谁的名字

00:50:27.266 --> 00:50:28.166 A:middle
被点击了

00:50:29.576 --> 00:50:30.946 A:middle
因此 我们要回到

00:50:30.946 --> 00:50:32.906 A:middle
排行榜的记分板

00:50:33.006 --> 00:50:35.266 A:middle
找出我们需要

00:50:35.266 --> 00:50:37.336 A:middle
展示更多信息的人

00:50:38.526 --> 00:50:39.226 A:middle
让我们跳转到

00:50:39.226 --> 00:50:40.626 A:middle
“Leaderboard View Controller”

00:50:41.876 --> 00:50:44.336 A:middle
在这个类的底部

00:50:44.336 --> 00:50:46.226 A:middle
我们有一个方法

00:50:46.226 --> 00:50:48.506 A:middle
是由 Xcode 为我们编写的

00:50:48.506 --> 00:50:49.916 A:middle
叫做 “prepare for segue()” 方法

00:50:50.946 --> 00:50:54.476 A:middle
当我们在一个视图控制器

00:50:54.476 --> 00:50:56.146 A:middle
和另一个视图控制器之间转换时

00:50:56.146 --> 00:50:57.946 A:middle
会调用它

00:50:58.466 --> 00:51:00.946 A:middle
当我们点击

00:50:58.466 --> 00:51:00.946 A:middle
当我们点击

00:51:00.946 --> 00:51:03.346 A:middle
Table View Controller 中的一个单元格时

00:51:03.346 --> 00:51:04.506 A:middle
它就立刻会被调用

00:51:05.226 --> 00:51:10.216 A:middle
在这里我将根据排名

00:51:10.686 --> 00:51:11.786 A:middle
获得更多关于玩家的信息

00:51:11.786 --> 00:51:14.206 A:middle
我可以得知排名

00:51:14.616 --> 00:51:16.866 A:middle
因为表视图中

00:51:16.866 --> 00:51:18.816 A:middle
有一个属性叫做

00:51:19.196 --> 00:51:20.256 A:middle
索引路径

00:51:20.256 --> 00:51:23.456 A:middle
它能告诉我

00:51:23.456 --> 00:51:24.946 A:middle
我选择的单元格的行号

00:51:25.476 --> 00:51:29.036 A:middle
我们还在这个方法中

00:51:29.036 --> 00:51:29.566 A:middle
得到一个延续参数

00:51:29.566 --> 00:51:32.706 A:middle
还记得 “延续” 如何连接

00:51:32.706 --> 00:51:33.686 A:middle
两个视图控制器吗

00:51:33.776 --> 00:51:36.286 A:middle
延续的目标属性

00:51:36.286 --> 00:51:38.686 A:middle
会告诉我们

00:51:38.686 --> 00:51:40.146 A:middle
要导航到哪个

00:51:40.146 --> 00:51:40.666 A:middle
视图控制器

00:51:41.956 --> 00:51:44.236 A:middle
一旦我们有了

00:51:44.236 --> 00:51:46.456 A:middle
“details view controller” 的示例

00:51:46.456 --> 00:51:47.686 A:middle
这就是我们的目的

00:51:48.286 --> 00:51:50.496 A:middle
然后我们就可以用我们现有的细节

00:51:50.786 --> 00:51:52.206 A:middle
设置玩家信息了

00:51:53.776 --> 00:51:55.686 A:middle
最后 我们准备

00:51:55.686 --> 00:51:58.426 A:middle
最后一次运行我们的 App

00:51:58.426 --> 00:51:59.686 A:middle
看看所有东西是如何结合在一起的

00:52:01.496 --> 00:52:02.756 A:middle
现在我们来玩这个游戏

00:52:02.756 --> 00:52:06.186 A:middle
我们去看排行榜

00:52:06.716 --> 00:52:07.826 A:middle
我们可以看到

00:52:07.826 --> 00:52:10.516 A:middle
所有来自数据模型的信息

00:52:11.516 --> 00:52:16.976 A:middle
[ 掌声 ]

00:52:17.476 --> 00:52:19.546 A:middle
我只得了一分

00:52:19.546 --> 00:52:20.136 A:middle
所以我在最后

00:52:20.536 --> 00:52:22.196 A:middle
让我看看我的排名

00:52:23.096 --> 00:52:24.706 A:middle
第十一名 还不错

00:52:25.016 --> 00:52:26.616 A:middle
至少我的 App 都设置好了

00:52:28.586 --> 00:52:31.206 A:middle
现在我们已经建好了我们的 App

00:52:31.476 --> 00:52:33.426 A:middle
让我们看看接下来的一些步骤

00:52:35.226 --> 00:52:36.366 A:middle
在发布 App 之前

00:52:36.956 --> 00:52:38.446 A:middle
进行测试是很重要的

00:52:39.376 --> 00:52:41.176 A:middle
XCTest 框架

00:52:41.176 --> 00:52:44.516 A:middle
可以用来编写单元测试

00:52:44.666 --> 00:52:46.076 A:middle
你也可以看看

00:52:46.076 --> 00:52:47.756 A:middle
App Store 的审核指南

00:52:48.646 --> 00:52:50.116 A:middle
这些都是为了

00:52:50.116 --> 00:52:52.206 A:middle
给用户和开发者

00:52:52.206 --> 00:52:53.286 A:middle
创造良好的体验

00:52:54.056 --> 00:52:57.006 A:middle
总有一天 你会加入

00:52:57.006 --> 00:52:58.616 A:middle
Apple Developer

00:52:58.616 --> 00:52:59.266 A:middle
Program

00:53:00.216 --> 00:53:01.896 A:middle
在你创建发布 App 时

00:53:01.896 --> 00:53:03.536 A:middle
它将为你获取证书

00:53:03.536 --> 00:53:06.976 A:middle
和概要文件提供帮助

00:53:08.046 --> 00:53:10.696 A:middle
最后 提交 App 以供审查

00:53:11.756 --> 00:53:13.926 A:middle
一旦通过审查

00:53:13.926 --> 00:53:15.396 A:middle
就去告知你的朋友 家人

00:53:15.396 --> 00:53:16.076 A:middle
甚至是整个世界吧

00:53:16.346 --> 00:53:17.186 A:middle
你已经建好了自己的 App

00:53:18.746 --> 00:53:20.396 A:middle
要了解更多关于这些后续步骤的信息

00:53:20.396 --> 00:53:22.546 A:middle
你可以在 WWDC App 上

00:53:22.596 --> 00:53:25.046 A:middle
查看此演讲

00:53:25.046 --> 00:53:27.316 A:middle
的参考资料

00:53:27.836 --> 00:53:30.896 A:middle
总之 我鼓励大家

00:53:30.896 --> 00:53:32.756 A:middle
去探索 Xcode

00:53:33.056 --> 00:53:35.476 A:middle
它有许多工具和模板

00:53:35.596 --> 00:53:38.216 A:middle
可以让 iOS 开发变得非常简单

00:53:38.746 --> 00:53:42.046 A:middle
你可以用 storyboard

00:53:42.046 --> 00:53:44.006 A:middle
轻松地设置用户界面

00:53:44.596 --> 00:53:46.826 A:middle
尝试一些视图

00:53:46.826 --> 00:53:48.626 A:middle
看看你的 App 可能是什么样子

00:53:50.146 --> 00:53:52.106 A:middle
想想你可能需要的数据

00:53:52.106 --> 00:53:54.826 A:middle
以及你要如何储存它

00:53:56.266 --> 00:53:58.186 A:middle
为所有设备

00:53:58.186 --> 00:54:01.086 A:middle
创建良好的用户体验是很重要的

00:53:58.186 --> 00:54:01.086 A:middle
创建良好的用户体验是很重要的

00:54:01.796 --> 00:54:03.356 A:middle
这可能意味着要

00:54:03.406 --> 00:54:05.856 A:middle
优化旧设备的性能

00:54:05.856 --> 00:54:08.266 A:middle
或者照顾不同的屏幕大小

00:54:10.216 --> 00:54:12.236 A:middle
作出好的 App

00:54:12.236 --> 00:54:14.096 A:middle
要遵循指导和加以练习

00:54:14.096 --> 00:54:18.216 A:middle
如果你已经完成了所有这些

00:54:18.216 --> 00:54:20.866 A:middle
那么你就能正式成为了一名 iOS App 开发者

00:54:21.516 --> 00:54:22.676 A:middle
祝贺大家

00:54:22.846 --> 00:54:24.456 A:middle
祝大家 WWDC 愉快

00:54:25.016 --> 00:54:26.000 A:middle
[ 掌声 ]
