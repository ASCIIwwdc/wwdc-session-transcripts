WEBVTT

00:00:07.516 --> 00:00:17.776 A:middle
[ 音乐 ]

00:00:18.276 --> 00:00:19.586 A:middle
&gt;&gt; 在这个讨论会中 我们将

00:00:19.586 --> 00:00:21.006 A:middle
向你介绍 Quick Look

00:00:21.646 --> 00:00:22.806 A:middle
欢迎参加 Quick Look 的

00:00:22.806 --> 00:00:23.366 A:middle
“Preview from the ground up（入门预览）”

00:00:24.096 --> 00:00:26.046 A:middle
我是 Raffael

00:00:26.046 --> 00:00:27.816 A:middle
我将与另一位 Apple

00:00:28.186 --> 00:00:29.576 A:middle
软件工程师 Maxime

00:00:29.576 --> 00:00:29.946 A:middle
一起向大家讲解

00:00:30.456 --> 00:00:34.256 A:middle
我们首先

00:00:34.256 --> 00:00:36.286 A:middle
会进行一个

00:00:36.286 --> 00:00:36.826 A:middle
Quick Look 的概述

00:00:37.896 --> 00:00:39.326 A:middle
然后我们将向你展示

00:00:39.326 --> 00:00:41.656 A:middle
如何在 App 中 采用 “Quick Look Preview

00:00:41.656 --> 00:00:43.366 A:middle
Controller（Quick Look 预览控制器）”

00:00:43.726 --> 00:00:45.816 A:middle
然后我们将解释

00:00:45.816 --> 00:00:47.566 A:middle
如何为你自己的文件格式

00:00:47.566 --> 00:00:51.216 A:middle
提供自定义 Quick Look 预览

00:00:51.416 --> 00:00:52.976 A:middle
和自定义缩略图

00:00:55.536 --> 00:00:57.866 A:middle
让我们开始吧 什么是 Quick Look

00:01:00.156 --> 00:01:01.486 A:middle
Quick Look 被用来

00:01:01.486 --> 00:01:03.786 A:middle
预览文稿

00:01:03.786 --> 00:01:06.006 A:middle
它让你能轻松地展示文稿

00:01:07.026 --> 00:01:08.936 A:middle
更准确地说

00:01:09.126 --> 00:01:10.726 A:middle
Quick Look 是一个 iOS 框架

00:01:10.726 --> 00:01:12.826 A:middle
它为开发者提供了

00:01:12.826 --> 00:01:13.466 A:middle
多个核心功能

00:01:15.036 --> 00:01:16.236 A:middle
它允许你

00:01:16.236 --> 00:01:18.246 A:middle
预览几种常用的

00:01:18.246 --> 00:01:21.716 A:middle
文件格式的文稿

00:01:21.716 --> 00:01:23.926 A:middle
为你的文件格式

00:01:23.926 --> 00:01:27.596 A:middle
提供自定义预览

00:01:27.596 --> 00:01:29.236 A:middle
并为你的

00:01:29.236 --> 00:01:31.296 A:middle
自定义文件格式的文件

00:01:31.296 --> 00:01:32.326 A:middle
向系统提供缩略图

00:01:35.786 --> 00:01:37.146 A:middle
实际上 Apple 的许多

00:01:37.146 --> 00:01:38.816 A:middle
第一方 App

00:01:38.816 --> 00:01:39.886 A:middle
已经在使用 Quick Look

00:01:41.006 --> 00:01:43.896 A:middle
例如 在“文件”中显示

00:01:43.896 --> 00:01:45.976 A:middle
存储在云中的文稿

00:01:51.046 --> 00:01:53.346 A:middle
或者在“邮件”和“备忘录”中

00:01:53.346 --> 00:01:53.976 A:middle
预览你的附件

00:02:01.356 --> 00:02:03.266 A:middle
在“信息”中显示

00:02:03.266 --> 00:02:04.976 A:middle
你已经发送的照片和视频

00:02:12.046 --> 00:02:13.286 A:middle
所以 这个讨论会的目标听众是谁呢

00:02:13.686 --> 00:02:15.546 A:middle
如果你想知道

00:02:15.546 --> 00:02:17.106 A:middle
如何在 App 中

00:02:17.106 --> 00:02:18.836 A:middle
展示文稿

00:02:18.836 --> 00:02:19.976 A:middle
而不需要实现

00:02:19.976 --> 00:02:21.696 A:middle
用户所使用的所有常见功能

00:02:22.526 --> 00:02:23.676 A:middle
那么你就来对了

00:02:24.986 --> 00:02:26.836 A:middle
你可能还拥有一个

00:02:26.836 --> 00:02:29.176 A:middle
iOS 原本不支持的自定义文件格式

00:02:29.176 --> 00:02:30.796 A:middle
你想要保证

00:02:30.796 --> 00:02:32.306 A:middle
你的文件格式

00:02:32.306 --> 00:02:34.136 A:middle
通过自定义缩略图和预览

00:02:34.136 --> 00:02:35.776 A:middle
被 iOS 正确地处理

00:02:36.046 --> 00:02:38.176 A:middle
如果你想了解更多信息 就不要离开

00:02:39.776 --> 00:02:40.816 A:middle
不管你是

00:02:40.816 --> 00:02:43.046 A:middle
iOS 的新手

00:02:43.046 --> 00:02:45.026 A:middle
还是已经有了一个 App

00:02:45.026 --> 00:02:46.616 A:middle
我们都会一步一步地指导你

00:02:49.356 --> 00:02:50.626 A:middle
顺便说一句

00:02:50.626 --> 00:02:51.906 A:middle
如果你还没看过的话

00:02:51.906 --> 00:02:53.526 A:middle
你应该看看去年的讨论会

00:02:53.526 --> 00:02:55.286 A:middle
“在 iOS 中打造

00:02:55.336 --> 00:02:57.876 A:middle
优秀的基于文稿的 App”

00:02:57.876 --> 00:02:59.586 A:middle
那次我们介绍了

00:02:59.586 --> 00:03:01.256 A:middle
UIDocumentBrowserViewController

00:02:59.586 --> 00:03:01.256 A:middle
UIDocumentBrowserViewController

00:03:01.506 --> 00:03:03.286 A:middle
也简要介绍了一些关于

00:03:03.286 --> 00:03:04.656 A:middle
Quick Look 的预览和缩略图扩展功能

00:03:04.656 --> 00:03:06.086 A:middle
的基础内容

00:03:07.516 --> 00:03:09.046 A:middle
今年还将会有一场

00:03:09.046 --> 00:03:10.426 A:middle
文稿浏览器入门

00:03:10.426 --> 00:03:11.986 A:middle
的讨论会

00:03:11.986 --> 00:03:13.606 A:middle
如果你对 iOS 上的

00:03:14.016 --> 00:03:15.506 A:middle
文件处理感兴趣

00:03:15.506 --> 00:03:16.896 A:middle
我们强烈建议你参加

00:03:21.246 --> 00:03:22.416 A:middle
Quick Look 已经存在

00:03:22.416 --> 00:03:23.426 A:middle
有一段时间了

00:03:23.886 --> 00:03:25.146 A:middle
它是在 iOS 4 的

00:03:25.146 --> 00:03:26.536 A:middle
SDK 中引入的

00:03:28.046 --> 00:03:29.386 A:middle
你最感兴趣的应该是

00:03:29.386 --> 00:03:30.786 A:middle
QLPreviewController

00:03:30.786 --> 00:03:32.476 A:middle
它是一个预览文稿的

00:03:32.476 --> 00:03:34.356 A:middle
视图控制器

00:03:36.266 --> 00:03:38.386 A:middle
它使用经典的数据源

00:03:38.386 --> 00:03:40.086 A:middle
和委托模式

00:03:40.086 --> 00:03:41.706 A:middle
这些你已经从你的 UIKit 和

00:03:41.706 --> 00:03:42.526 A:middle
其他框架中知道了

00:03:42.976 --> 00:03:46.156 A:middle
要想用一个漂亮的缩放变换

00:03:46.156 --> 00:03:47.516 A:middle
来展示 Quick Look

00:03:47.516 --> 00:03:49.256 A:middle
我们给你的 API

00:03:49.256 --> 00:03:49.976 A:middle
是最便利的方案

00:03:55.046 --> 00:03:56.326 A:middle
你为什么想使用 Quick Look

00:03:56.606 --> 00:03:58.326 A:middle
如果你有一个与“文件” “邮件”

00:03:58.326 --> 00:04:00.986 A:middle
或其他我们之前展示给你的 App

00:03:58.326 --> 00:04:00.986 A:middle
或其他我们之前展示给你的 App

00:04:00.986 --> 00:04:02.356 A:middle
相似的用例

00:04:02.986 --> 00:04:04.696 A:middle
Quick Look 是你最好的选择

00:04:05.886 --> 00:04:07.146 A:middle
Quick Look 可以直接使用

00:04:07.146 --> 00:04:08.426 A:middle
你想要的它都有

00:04:10.306 --> 00:04:11.896 A:middle
它支持常用的

00:04:11.896 --> 00:04:14.436 A:middle
文件类型

00:04:14.436 --> 00:04:16.495 A:middle
并提供给用户

00:04:16.495 --> 00:04:18.055 A:middle
从其他第一方 iOS App 已经习惯的

00:04:18.055 --> 00:04:19.656 A:middle
原生用户体验

00:04:21.616 --> 00:04:22.976 A:middle
我们确保 Quick Look

00:04:22.976 --> 00:04:24.586 A:middle
在所有设备上

00:04:24.586 --> 00:04:26.056 A:middle
都具有优异的性能

00:04:26.056 --> 00:04:28.166 A:middle
因此所有的动画和手势都很流畅

00:04:30.006 --> 00:04:31.106 A:middle
你可能正在处理

00:04:31.106 --> 00:04:32.976 A:middle
来自不可信来源的文件

00:04:33.046 --> 00:04:34.936 A:middle
但别担心 有我们在

00:04:35.466 --> 00:04:36.396 A:middle
Quick Look 附带了一个

00:04:36.396 --> 00:04:38.046 A:middle
复杂的安全模型

00:04:38.046 --> 00:04:39.816 A:middle
可以保证 App 的安全性

00:04:44.136 --> 00:04:45.056 A:middle
让我们看一下

00:04:45.056 --> 00:04:46.296 A:middle
受支持的文件类型

00:04:47.196 --> 00:04:48.966 A:middle
正如你所见

00:04:48.966 --> 00:04:49.986 A:middle
囊括了所有的常用类型

00:04:50.406 --> 00:04:52.676 A:middle
媒体文件 比如图像

00:04:52.676 --> 00:04:54.506 A:middle
音频文件和视频

00:04:54.876 --> 00:04:56.916 A:middle
文稿 比如 PDF

00:04:56.916 --> 00:04:59.526 A:middle
办公文件以及压缩档案

00:05:00.556 --> 00:05:02.786 A:middle
预览压缩档案

00:05:02.786 --> 00:05:04.586 A:middle
允许你查看

00:05:04.586 --> 00:05:06.346 A:middle
档案中的内容

00:05:06.346 --> 00:05:08.466 A:middle
并单独查看其中的文件

00:05:08.466 --> 00:05:09.516 A:middle
或共享等等

00:05:11.446 --> 00:05:13.176 A:middle
现在如果你的自定义文件格式

00:05:13.176 --> 00:05:15.136 A:middle
并不在这个列表中 那也不要担心

00:05:16.096 --> 00:05:17.786 A:middle
去年我们引入了

00:05:17.786 --> 00:05:19.456 A:middle
一个新的扩展点

00:05:19.456 --> 00:05:21.046 A:middle
来实现 Quick Look 的预览扩展

00:05:21.916 --> 00:05:23.726 A:middle
预览扩展允许你

00:05:23.726 --> 00:05:25.886 A:middle
作为开发者为自己的

00:05:25.886 --> 00:05:27.746 A:middle
自定义文件格式的文件

00:05:27.746 --> 00:05:28.876 A:middle
创建预览

00:05:28.876 --> 00:05:31.976 A:middle
我们将在讨论会的第二部分讨论这个问题

00:05:32.476 --> 00:05:35.776 A:middle
今年有了 iOS 12 我们也增加了

00:05:35.776 --> 00:05:37.376 A:middle
对新的 AR 文件格式

00:05:37.376 --> 00:05:41.196 A:middle
USDZ 的支持

00:05:41.196 --> 00:05:43.156 A:middle
所以只要几行代码

00:05:43.156 --> 00:05:44.856 A:middle
你就可以在 App 中

00:05:44.856 --> 00:05:46.586 A:middle
获得完全沉浸式的

00:05:46.586 --> 00:05:47.276 A:middle
增强现实体验

00:05:48.746 --> 00:05:50.896 A:middle
好的 现在我们谈一谈用户体验

00:05:51.556 --> 00:05:53.086 A:middle
对于刚才所显示的每个文件类型

00:05:53.086 --> 00:05:55.056 A:middle
我们确保 Quick Look

00:05:55.056 --> 00:05:56.606 A:middle
为你的移动设备

00:05:56.606 --> 00:05:58.866 A:middle
提供了最好的预览

00:06:00.476 --> 00:06:01.936 A:middle
例如 当你预览图像时

00:06:01.936 --> 00:06:04.266 A:middle
你可以方便地

00:06:04.266 --> 00:06:05.796 A:middle
放大图像

00:06:06.246 --> 00:06:08.706 A:middle
你也可以用一个向下滑动的手势

00:06:08.706 --> 00:06:10.466 A:middle
来关闭 Quick Look

00:06:11.006 --> 00:06:14.596 A:middle
在 PDF 文稿中

00:06:14.596 --> 00:06:16.156 A:middle
你会有一个带有缩略图的侧边栏

00:06:16.156 --> 00:06:17.286 A:middle
便于导航

00:06:18.356 --> 00:06:20.366 A:middle
在电子表格中

00:06:20.366 --> 00:06:22.956 A:middle
你可以切换文稿的各个页面

00:06:24.396 --> 00:06:26.476 A:middle
在媒体文件中

00:06:26.476 --> 00:06:28.176 A:middle
我们展示了一个滚动条

00:06:28.176 --> 00:06:29.656 A:middle
允许你前后快进 等等

00:06:29.776 --> 00:06:30.626 A:middle
你应该明白了吧

00:06:32.556 --> 00:06:33.896 A:middle
所以当你选择 Quick Look 时

00:06:34.246 --> 00:06:36.046 A:middle
你的用户可以使用

00:06:36.046 --> 00:06:37.976 A:middle
所有其他 App 可以使用的手势

00:06:43.386 --> 00:06:44.516 A:middle
那么对于 Quick Look 的

00:06:44.516 --> 00:06:46.126 A:middle
常见用例是什么呢

00:06:47.196 --> 00:06:49.046 A:middle
例如 你可能希望

00:06:49.046 --> 00:06:51.136 A:middle
让用户放大照片

00:06:51.136 --> 00:06:54.386 A:middle
或者希望能够

00:06:54.386 --> 00:06:56.746 A:middle
通过左右滑动 快速浏览一组照片

00:06:57.826 --> 00:07:00.096 A:middle
你想要播放音频或视频文件

00:06:57.826 --> 00:07:00.096 A:middle
你想要播放音频或视频文件

00:07:00.096 --> 00:07:02.046 A:middle
而不需要处理

00:07:02.046 --> 00:07:03.546 A:middle
底层框架

00:07:03.546 --> 00:07:06.996 A:middle
或者你想要呈现一个

00:07:06.996 --> 00:07:08.946 A:middle
可滚动 可缩放的

00:07:08.946 --> 00:07:11.646 A:middle
PDF 形式的用户协议

00:07:12.876 --> 00:07:14.026 A:middle
那就使用 Quick Look 吧

00:07:16.686 --> 00:07:17.876 A:middle
但是 Quick Look 不应该被误用

00:07:17.876 --> 00:07:20.446 A:middle
这些时候不应该使用 Quick Look

00:07:21.936 --> 00:07:22.946 A:middle
Quick Look 提供预览功能

00:07:22.946 --> 00:07:25.826 A:middle
但不提供编辑功能

00:07:26.766 --> 00:07:27.866 A:middle
因此如果你需要

00:07:27.866 --> 00:07:29.806 A:middle
图像编辑

00:07:29.806 --> 00:07:32.746 A:middle
PDF 管理 或者电影剪辑等功能

00:07:32.746 --> 00:07:34.976 A:middle
你需要选择另一种方法

00:07:39.046 --> 00:07:40.676 A:middle
类似地

00:07:40.676 --> 00:07:42.336 A:middle
如果你需要为你的视频

00:07:42.336 --> 00:07:43.906 A:middle
提供更高级的播放控制

00:07:43.906 --> 00:07:45.426 A:middle
Quick Look 可能不是最好的选择

00:07:46.016 --> 00:07:47.896 A:middle
你可以使用 AVPlayer

00:07:49.116 --> 00:07:50.016 A:middle
Quick Look 应该

00:07:50.016 --> 00:07:51.346 A:middle
全屏显示

00:07:51.716 --> 00:07:53.276 A:middle
如果你只是想

00:07:53.276 --> 00:07:55.456 A:middle
展示嵌入布局的一个图像

00:07:55.636 --> 00:07:57.356 A:middle
一个视频或一个文稿

00:07:57.356 --> 00:07:58.936 A:middle
以及它周围的其他视图

00:07:59.616 --> 00:08:00.886 A:middle
你可能想要使用

00:07:59.616 --> 00:08:00.886 A:middle
你可能想要使用

00:08:00.886 --> 00:08:04.506 A:middle
UAImageView AVPlayer WKWebView

00:08:04.576 --> 00:08:06.086 A:middle
或其他类型的视图

00:08:08.816 --> 00:08:10.316 A:middle
还要注意

00:08:10.316 --> 00:08:12.436 A:middle
暂不支持定制

00:08:12.436 --> 00:08:13.856 A:middle
Quick Look 的视图层级结构

00:08:14.416 --> 00:08:16.316 A:middle
请不要尝试

00:08:16.316 --> 00:08:17.696 A:middle
在预览前面添加别的视图

00:08:17.696 --> 00:08:20.036 A:middle
比如导航工具栏

00:08:20.036 --> 00:08:20.976 A:middle
这是目前不支持的

00:08:26.166 --> 00:08:27.826 A:middle
现在我们已经介绍了 Quick Look

00:08:27.826 --> 00:08:29.596 A:middle
让我们看看

00:08:29.596 --> 00:08:31.976 A:middle
如何充分利用我们的 API

00:08:37.275 --> 00:08:38.655 A:middle
如果你想把文稿作为第一步

00:08:38.655 --> 00:08:40.966 A:middle
呈现给用户

00:08:40.966 --> 00:08:44.296 A:middle
你要实例化一个新的 QLPreviewController

00:08:44.296 --> 00:08:46.186 A:middle
它基本上就是一个 UIViewController

00:08:48.176 --> 00:08:50.886 A:middle
接下来 为了告诉 previewController

00:08:50.886 --> 00:08:53.006 A:middle
要预览哪些文稿

00:08:53.006 --> 00:08:54.726 A:middle
你需要为它分配一个 dataSource（数据源）

00:08:55.676 --> 00:08:57.156 A:middle
dataSource 是一个

00:08:57.156 --> 00:08:58.046 A:middle
遵循 QLPreviewControllerDataSource

00:08:58.046 --> 00:09:00.426 A:middle
dataSource 协议的对象

00:08:58.046 --> 00:09:00.426 A:middle
dataSource 协议的对象

00:09:00.426 --> 00:09:02.906 A:middle
我们马上就会看到这个

00:09:03.396 --> 00:09:07.116 A:middle
第三步也是最后一步

00:09:07.586 --> 00:09:09.006 A:middle
你要做的就是

00:09:09.006 --> 00:09:09.786 A:middle
展现这个视图控制器

00:09:15.046 --> 00:09:16.296 A:middle
让我们仔细看看

00:09:16.296 --> 00:09:17.436 A:middle
dataSource 是如何工作的

00:09:18.376 --> 00:09:20.236 A:middle
你的数据源必须遵循

00:09:20.236 --> 00:09:22.956 A:middle
QLPreviewControllerDataSource 协议

00:09:24.026 --> 00:09:26.426 A:middle
这是一个需要两个方法的协议

00:09:26.776 --> 00:09:28.666 A:middle
首先你需要返回

00:09:28.666 --> 00:09:30.406 A:middle
预览控制器应该

00:09:30.406 --> 00:09:31.946 A:middle
预览的项目数量

00:09:32.956 --> 00:09:34.336 A:middle
它应该提供

00:09:34.336 --> 00:09:36.166 A:middle
一个以上的项目

00:09:36.166 --> 00:09:37.926 A:middle
让用户将能够左右滑动

00:09:37.926 --> 00:09:38.936 A:middle
浏览文稿

00:09:41.156 --> 00:09:43.216 A:middle
接下来 Quick Look

00:09:43.216 --> 00:09:44.186 A:middle
根据你之前

00:09:44.186 --> 00:09:46.446 A:middle
返回的数值

00:09:46.446 --> 00:09:48.176 A:middle
QLPreviewItem 向你询求一个或多个

00:09:50.516 --> 00:09:52.636 A:middle
那么 什么是 QLPreviewItem 呢

00:09:53.456 --> 00:09:54.966 A:middle
它是一种对文稿

00:09:54.966 --> 00:09:56.736 A:middle
进行抽象的协议

00:09:57.386 --> 00:09:59.326 A:middle
对于 Quick Look 而言

00:09:59.326 --> 00:10:02.136 A:middle
QLPreviewItem 基本上就是 URL

00:09:59.326 --> 00:10:02.136 A:middle
QLPreviewItem 基本上就是 URL

00:10:02.136 --> 00:10:04.596 A:middle
我可以在这找到磁盘上的文稿

00:10:04.596 --> 00:10:06.936 A:middle
以及可选的标题

00:10:06.936 --> 00:10:08.566 A:middle
Quick Look 将把它显示在导航栏中

00:10:09.136 --> 00:10:12.216 A:middle
在你的 App 中

00:10:12.216 --> 00:10:14.206 A:middle
表示文稿的类

00:10:14.206 --> 00:10:15.746 A:middle
需要遵循 QLPreviewItem 协议

00:10:16.586 --> 00:10:19.266 A:middle
但是顺便说一下

00:10:19.266 --> 00:10:21.376 A:middle
NSURL 已经遵循了 QLPreviewItem 协议

00:10:21.376 --> 00:10:23.396 A:middle
所以如果不需要自定义标题

00:10:23.396 --> 00:10:25.246 A:middle
你可以直接

00:10:25.246 --> 00:10:29.806 A:middle
返回数据源中的 NSURL 实例

00:10:29.806 --> 00:10:30.936 A:middle
而无需自己实现协议

00:10:31.466 --> 00:10:34.896 A:middle
让我们看一下这个例子

00:10:36.426 --> 00:10:38.136 A:middle
在这个场景中

00:10:38.136 --> 00:10:39.576 A:middle
显示 Quick Look 的

00:10:39.576 --> 00:10:41.766 A:middle
视图控制器

00:10:41.766 --> 00:10:43.166 A:middle
充当 QLPreviewController 的数据源

00:10:44.496 --> 00:10:46.566 A:middle
因此我们让它

00:10:46.566 --> 00:10:48.236 A:middle
在扩展中遵循

00:10:48.236 --> 00:10:50.346 A:middle
QLPreviewControllerDataSource

00:10:50.346 --> 00:10:51.586 A:middle
并执行了这两种方法

00:10:53.276 --> 00:10:54.986 A:middle
这里我们使用一个

00:10:54.986 --> 00:10:57.396 A:middle
文件 URL 数组作为 Model

00:10:57.986 --> 00:10:59.516 A:middle
我们返回

00:10:59.516 --> 00:11:02.096 A:middle
numberOfPreviewItems

00:10:59.516 --> 00:11:02.096 A:middle
numberOfPreviewItems

00:11:02.096 --> 00:11:03.646 A:middle
(in controller:) 方法

00:11:03.646 --> 00:11:04.086 A:middle
中的 URL 数量

00:11:04.586 --> 00:11:07.626 A:middle
然后每个 URL 会相应地被

00:11:07.796 --> 00:11:10.006 A:middle
previewController(_ controller:

00:11:10.006 --> 00:11:12.216 A:middle
previewItemAt index:) 方法

00:11:12.216 --> 00:11:13.896 A:middle
中的索引引用

00:11:19.046 --> 00:11:22.426 A:middle
好的 我们已经设置好了 previewController

00:11:22.426 --> 00:11:24.336 A:middle
它知道要预览哪些文件

00:11:24.336 --> 00:11:25.656 A:middle
所以我们已经准备好

00:11:25.656 --> 00:11:26.376 A:middle
展示视图控制器了

00:11:27.386 --> 00:11:28.836 A:middle
有两种方法可以选择

00:11:29.586 --> 00:11:30.766 A:middle
你可以在当前环境顶上

00:11:30.766 --> 00:11:34.866 A:middle
模态地显示 previewController

00:11:34.866 --> 00:11:36.456 A:middle
也可以将 previewController

00:11:36.916 --> 00:11:38.626 A:middle
推入 UINavigationController

00:11:39.726 --> 00:11:41.746 A:middle
这两种方法都很有效

00:11:41.746 --> 00:11:43.646 A:middle
你需要决定哪一种

00:11:43.646 --> 00:11:44.586 A:middle
更适合你的情况

00:11:44.586 --> 00:11:47.016 A:middle
如果要模态地显示

00:11:47.016 --> 00:11:48.066 A:middle
你的处理方法和处理任何视图控制器一样

00:11:48.066 --> 00:11:49.716 A:middle
也就是调用 present()

00:11:51.666 --> 00:11:53.296 A:middle
这是一个

00:11:53.296 --> 00:11:54.996 A:middle
模态显示的例子

00:11:57.176 --> 00:11:58.046 A:middle
如果你有一个

00:11:58.046 --> 00:11:59.876 A:middle
UINavigationController

00:11:59.876 --> 00:12:01.396 A:middle
而且更喜欢把 previewController 推入

00:11:59.876 --> 00:12:01.396 A:middle
而且更喜欢把 previewController 推入

00:12:01.396 --> 00:12:03.386 A:middle
你可以使用

00:12:03.386 --> 00:12:03.976 A:middle
pushViewController

00:12:08.146 --> 00:12:08.976 A:middle
它的效果是这样的

00:12:16.046 --> 00:12:17.286 A:middle
QLPreviewController 类

00:12:17.286 --> 00:12:18.866 A:middle
提供了一些

00:12:18.866 --> 00:12:19.906 A:middle
我想要强调的方法

00:12:20.956 --> 00:12:22.826 A:middle
首先 如果你想知道

00:12:22.826 --> 00:12:24.296 A:middle
Quick Look 是否能够

00:12:24.366 --> 00:12:25.986 A:middle
预览某个文稿

00:12:26.706 --> 00:12:28.756 A:middle
使用 canPreview(_ item:) 类方法

00:12:28.756 --> 00:12:32.026 A:middle
这个方法将返回为真

00:12:32.026 --> 00:12:33.726 A:middle
如果文稿匹配任何

00:12:33.726 --> 00:12:36.376 A:middle
默认支持的文件类型

00:12:36.376 --> 00:12:37.756 A:middle
或者如果有可用的预览扩展

00:12:37.756 --> 00:12:39.666 A:middle
可以处理该文件

00:12:41.856 --> 00:12:44.216 A:middle
这是我们已经讨论过的 dataSource

00:12:46.816 --> 00:12:49.216 A:middle
reloadData() 重新加载

00:12:49.216 --> 00:12:50.356 A:middle
预览控制器应该呈现的

00:12:50.356 --> 00:12:51.556 A:middle
文稿列表

00:12:52.236 --> 00:12:54.406 A:middle
如果这个列表发生了变化

00:12:54.406 --> 00:12:55.486 A:middle
且预览控制器已经显示

00:12:55.486 --> 00:12:57.626 A:middle
则使用该方法

00:12:57.626 --> 00:12:59.236 A:middle
来触发重载

00:13:01.796 --> 00:13:03.446 A:middle
如果你需要获取

00:13:03.446 --> 00:13:05.236 A:middle
预览项列表中

00:13:05.236 --> 00:13:07.146 A:middle
当前预览项的索引

00:13:07.956 --> 00:13:09.546 A:middle
请记住用户可以向左

00:13:09.546 --> 00:13:10.696 A:middle
或向右滑动以切换到另一个

00:13:10.696 --> 00:13:14.436 A:middle
请使用 currentPreviewItemIndex 变量

00:13:15.646 --> 00:13:17.206 A:middle
这既是一个 getter

00:13:17.206 --> 00:13:19.486 A:middle
也是一个 setter

00:13:19.486 --> 00:13:20.986 A:middle
所以如果你想要 Quick Look

00:13:20.986 --> 00:13:22.746 A:middle
在某个特定项目时开始显示

00:13:22.746 --> 00:13:25.256 A:middle
请将索引设置为正确的值

00:13:25.666 --> 00:13:29.946 A:middle
最后但同样重要的是

00:13:29.946 --> 00:13:32.376 A:middle
预览控制器也有一个委托

00:13:33.066 --> 00:13:34.126 A:middle
现在让我们来看看

00:13:34.126 --> 00:13:35.936 A:middle
QLPreviewControllerDelegate 协议

00:13:41.056 --> 00:13:42.506 A:middle
如果你给你的预览控制器

00:13:42.506 --> 00:13:44.366 A:middle
分配一个委托

00:13:44.366 --> 00:13:46.626 A:middle
你会有更多的方法来控制 Quick Look 的行为

00:13:47.736 --> 00:13:49.226 A:middle
它还允许你

00:13:49.226 --> 00:13:50.496 A:middle
对 Quick Look 的显示做出反应

00:13:51.316 --> 00:13:52.836 A:middle
注意 QLPreviewControllerDelegate 中的

00:13:52.836 --> 00:13:55.616 A:middle
所有方法都是可选的

00:13:56.226 --> 00:13:57.636 A:middle
你不需要执行它们

00:13:57.726 --> 00:13:59.096 A:middle
事实上你甚至

00:13:59.096 --> 00:14:00.556 A:middle
不需要分配一个委托

00:13:59.096 --> 00:14:00.556 A:middle
不需要分配一个委托

00:14:02.376 --> 00:14:04.076 A:middle
该协议承载了许多

00:14:04.076 --> 00:14:05.506 A:middle
可以实现的方法

00:14:06.306 --> 00:14:07.986 A:middle
前两种方法允许你

00:14:07.986 --> 00:14:09.566 A:middle
对 Quick Look 即将

00:14:09.566 --> 00:14:11.086 A:middle
被用户取消

00:14:11.086 --> 00:14:13.976 A:middle
以及已经取消这两种事件 做出反应

00:14:18.046 --> 00:14:19.036 A:middle
你可能想要使用这些方法

00:14:19.036 --> 00:14:20.636 A:middle
来更新当前

00:14:20.636 --> 00:14:22.976 A:middle
呈现 Quick Look 的视图控制器

00:14:27.176 --> 00:14:29.456 A:middle
接下来 previewController(_ controller:

00:14:29.456 --> 00:14:31.856 A:middle
shouldOpen url: for item:)方法

00:14:32.386 --> 00:14:34.026 A:middle
让你能预防 Quick Look

00:14:34.026 --> 00:14:35.966 A:middle
打开预览文稿

00:14:35.966 --> 00:14:37.136 A:middle
所包含的链接

00:14:38.006 --> 00:14:39.846 A:middle
使用这个方法

00:14:39.846 --> 00:14:41.736 A:middle
你可以防止用户

00:14:41.736 --> 00:14:43.806 A:middle
在点击 PDF 中

00:14:43.806 --> 00:14:46.206 A:middle
包含的 URL 或电话号码时离开 App

00:14:46.206 --> 00:14:51.086 A:middle
最后

00:14:51.086 --> 00:14:52.246 A:middle
如刚刚我们提到的

00:14:52.246 --> 00:14:53.936 A:middle
QLPreviewControllerDelegate 协议

00:14:53.936 --> 00:14:56.356 A:middle
提供了 API

00:14:56.476 --> 00:14:58.896 A:middle
以在 Quick Look 被显示和被撤销时

00:14:58.896 --> 00:15:00.636 A:middle
获得一个平滑的缩放动画

00:14:58.896 --> 00:15:00.636 A:middle
获得一个平滑的缩放动画

00:15:01.716 --> 00:15:03.616 A:middle
通过这些方法

00:15:03.616 --> 00:15:05.396 A:middle
用户界面上的缩略图

00:15:05.396 --> 00:15:07.706 A:middle
可以在被点按时

00:15:07.706 --> 00:15:10.086 A:middle
转换为 Quick Look预览

00:15:13.056 --> 00:15:15.466 A:middle
如果有一个邮件附件

00:15:15.466 --> 00:15:17.356 A:middle
或对话视图中的一张照片

00:15:17.586 --> 00:15:20.526 A:middle
借助 Quick Look

00:15:20.526 --> 00:15:22.096 A:middle
你可以通过轻点它 让它全屏显示

00:15:25.406 --> 00:15:27.356 A:middle
在你的 App 中

00:15:27.356 --> 00:15:28.906 A:middle
我们让你非常容易地

00:15:28.906 --> 00:15:30.756 A:middle
得到这个渐变缩放动画

00:15:32.276 --> 00:15:33.936 A:middle
如果你要执行委托中的

00:15:33.936 --> 00:15:35.496 A:middle
其中一种方法

00:15:35.936 --> 00:15:37.236 A:middle
Quick Look 将需要

00:15:37.236 --> 00:15:38.986 A:middle
询求所需的信息

00:15:38.986 --> 00:15:40.096 A:middle
来执行缩放

00:15:41.026 --> 00:15:42.126 A:middle
基本上就是

00:15:42.126 --> 00:15:44.386 A:middle
一个矩形区域

00:15:44.386 --> 00:15:45.636 A:middle
当显示或取消 Quick Look 时

00:15:45.636 --> 00:15:48.246 A:middle
动画会在这个区域内

00:15:48.246 --> 00:15:49.226 A:middle
开始或停止

00:15:51.176 --> 00:15:54.666 A:middle
你可以提供

00:15:54.666 --> 00:15:58.586 A:middle
缩略图的框架和图像

00:15:58.686 --> 00:16:00.266 A:middle
或者 更好地

00:15:58.686 --> 00:16:00.266 A:middle
或者 更好地

00:16:00.266 --> 00:16:02.416 A:middle
你可以使用

00:16:02.416 --> 00:16:04.136 A:middle
我们的模态方法

00:16:04.136 --> 00:16:05.946 A:middle
即返回缩略图为视图

00:16:06.916 --> 00:16:08.306 A:middle
使用这种方法

00:16:08.306 --> 00:16:09.916 A:middle
你不必担心坐标

00:16:10.436 --> 00:16:11.976 A:middle
Quick Look 将为你完成所有繁重的工作

00:16:17.126 --> 00:16:18.416 A:middle
它的效果是这样的

00:16:19.986 --> 00:16:21.006 A:middle
请注意缩略图是

00:16:21.006 --> 00:16:22.916 A:middle
如何过渡到

00:16:22.916 --> 00:16:23.896 A:middle
Quick Look 全屏预览的

00:16:26.126 --> 00:16:27.716 A:middle
好的 现在是演示的时候了

00:16:27.716 --> 00:16:29.206 A:middle
我们想向你展示

00:16:29.206 --> 00:16:31.016 A:middle
我们刚刚讲过的内容

00:16:33.156 --> 00:16:35.666 A:middle
好的 这是一个 iOS 项目

00:16:35.666 --> 00:16:37.226 A:middle
我们不讨论它

00:16:37.226 --> 00:16:38.696 A:middle
而是按下播放键

00:16:38.906 --> 00:16:40.016 A:middle
看一看我们准备了什么

00:16:40.016 --> 00:16:41.926 A:middle
以及我们正做些什么

00:16:51.046 --> 00:16:51.926 A:middle
我们叫它《Wildlife Explorer》

00:16:51.926 --> 00:16:53.976 A:middle
它是一个非常简单的 App

00:16:54.766 --> 00:16:56.516 A:middle
它基本上显示了

00:16:56.516 --> 00:16:58.766 A:middle
一个照片网格

00:16:58.766 --> 00:17:00.516 A:middle
我们在这里看到的每一张照片

00:16:58.766 --> 00:17:00.516 A:middle
我们在这里看到的每一张照片

00:17:00.516 --> 00:17:02.276 A:middle
都是它背后内容的缩略图

00:17:02.276 --> 00:17:03.126 A:middle
你可以点击它

00:17:03.256 --> 00:17:05.496 A:middle
例如 点击大象的图片

00:17:05.496 --> 00:17:07.286 A:middle
就会在全屏显示

00:17:07.286 --> 00:17:08.866 A:middle
大象的大照片

00:17:08.866 --> 00:17:11.826 A:middle
点击长颈鹿

00:17:12.066 --> 00:17:13.945 A:middle
就会预览一个完整的 PDF 文件

00:17:13.945 --> 00:17:15.715 A:middle
内含所有种类的长颈鹿

00:17:17.215 --> 00:17:18.906 A:middle
现在 我们除了看着它

00:17:18.906 --> 00:17:20.445 A:middle
什么都做不了

00:17:21.156 --> 00:17:23.806 A:middle
点击图片没有反应 所以我们来修复这个问题

00:17:28.306 --> 00:17:30.406 A:middle
这个 App 的结构

00:17:30.406 --> 00:17:31.376 A:middle
相当简单

00:17:32.546 --> 00:17:33.916 A:middle
为了显示照片的网格

00:17:33.916 --> 00:17:35.166 A:middle
我们使用

00:17:35.166 --> 00:17:36.356 A:middle
CollectionViewController

00:17:38.886 --> 00:17:41.686 A:middle
在初始化它时

00:17:41.686 --> 00:17:43.996 A:middle
我们将获得与 App 打包的文稿

00:17:43.996 --> 00:17:45.656 A:middle
的 URL 列表

00:17:45.656 --> 00:17:46.946 A:middle
比如我们刚刚看到的大象图片

00:17:51.196 --> 00:17:53.276 A:middle
我们使用这个列表

00:17:53.276 --> 00:17:55.396 A:middle
来初始化 documentDataSource

00:17:56.666 --> 00:17:58.626 A:middle
该对象在

00:17:58.626 --> 00:17:59.966 A:middle
UICollectionViewDataSource

00:17:59.966 --> 00:18:01.296 A:middle
协议的实现中

00:17:59.966 --> 00:18:01.296 A:middle
协议的实现中

00:18:01.296 --> 00:18:03.976 A:middle
作为集合视图的 Model

00:18:12.106 --> 00:18:13.896 A:middle
在这里

00:18:13.896 --> 00:18:15.696 A:middle
我们返回刚才收集的文稿的数目

00:18:16.096 --> 00:18:17.896 A:middle
然后为每个文稿

00:18:17.896 --> 00:18:19.316 A:middle
创建一个 cell

00:18:19.316 --> 00:18:20.896 A:middle
每个 cell 的缩略图

00:18:20.896 --> 00:18:22.076 A:middle
分别作为单元格的图像

00:18:22.526 --> 00:18:25.756 A:middle
到目前为止

00:18:25.756 --> 00:18:27.166 A:middle
这几乎就是这个 App 的核心了

00:18:28.266 --> 00:18:29.736 A:middle
现在我们把之前

00:18:29.736 --> 00:18:30.476 A:middle
讲过的内容加上去

00:18:31.216 --> 00:18:32.786 A:middle
在点击单元格时

00:18:32.786 --> 00:18:34.246 A:middle
我们希望 Quick Look

00:18:34.246 --> 00:18:35.146 A:middle
会显示正确的文稿

00:18:36.286 --> 00:18:37.886 A:middle
我们已经可以确定

00:18:37.886 --> 00:18:39.196 A:middle
在用户刚刚轻点一个单元格时

00:18:39.196 --> 00:18:40.966 A:middle
有一个方法被调用了

00:18:47.056 --> 00:18:48.676 A:middle
为了显示 Quick Look 我们在这里

00:18:48.676 --> 00:18:50.896 A:middle
创建一个新的 QLPreviewController

00:18:51.286 --> 00:18:51.976 A:middle
并对它进行配置

00:19:03.396 --> 00:19:05.796 A:middle
我们创建一个新的控制器

00:19:05.796 --> 00:19:07.426 A:middle
并把 documentDataSource 赋予给它

00:19:07.426 --> 00:19:09.676 A:middle
作为数据源

00:19:09.856 --> 00:19:11.446 A:middle
然后确保 Quick Look

00:19:11.446 --> 00:19:12.936 A:middle
在出现的时候显示正确的预览

00:19:12.936 --> 00:19:15.016 A:middle
通过设置正确的

00:19:15.116 --> 00:19:15.976 A:middle
currentPreviewItemIndex

00:19:20.056 --> 00:19:22.316 A:middle
很好 现在 Xcode 已经在

00:19:22.316 --> 00:19:23.986 A:middle
抱怨我们的新代码了

00:19:23.986 --> 00:19:25.486 A:middle
它还不知道

00:19:25.486 --> 00:19:27.106 A:middle
QLPreviewController

00:19:27.826 --> 00:19:29.106 A:middle
我们需要首先导入 QuickLook

00:19:29.106 --> 00:19:31.396 A:middle
因此我们返回到

00:19:31.396 --> 00:19:32.976 A:middle
文件的顶部并导入 QuickLook

00:19:44.046 --> 00:19:46.456 A:middle
好了 Xcode 抱怨的

00:19:46.456 --> 00:19:48.446 A:middle
下一件事是数据源

00:19:49.166 --> 00:19:50.766 A:middle
我们赋给

00:19:50.766 --> 00:19:52.016 A:middle
新预览控制器

00:19:52.016 --> 00:19:53.556 A:middle
的文稿数据源

00:19:53.556 --> 00:19:54.416 A:middle
似乎还没有遵循

00:19:54.416 --> 00:19:56.226 A:middle
QLPreviewControllerDataSource 协议

00:19:56.226 --> 00:19:57.946 A:middle
这个我们之前

00:19:57.946 --> 00:19:58.946 A:middle
已经讨论过了

00:20:00.656 --> 00:20:02.766 A:middle
为了解决这个问题

00:20:02.766 --> 00:20:04.976 A:middle
我们切换到 DocumentDataSource 的部分

00:20:10.246 --> 00:20:11.606 A:middle
DocumentDataSource

00:20:11.606 --> 00:20:13.486 A:middle
是一个非常简单的对象

00:20:13.576 --> 00:20:15.926 A:middle
到目前为止

00:20:15.926 --> 00:20:16.246 A:middle
它仅仅拥有一个 URL 数组

00:20:17.256 --> 00:20:18.286 A:middle
我们需要将

00:20:18.286 --> 00:20:20.086 A:middle
QLPreviewControllerDataSource 协议

00:20:20.086 --> 00:20:21.646 A:middle
添加到这个

00:20:21.646 --> 00:20:23.936 A:middle
类实现的协议列表中

00:20:33.246 --> 00:20:34.956 A:middle
接下来 我们实现缺失的方法

00:20:45.096 --> 00:20:46.456 A:middle
正如你看到的

00:20:46.456 --> 00:20:48.376 A:middle
我们在这里使用 DocumentDataSource 的方式

00:20:48.376 --> 00:20:50.216 A:middle
与我们在集合视图中

00:20:50.216 --> 00:20:51.326 A:middle
使用文稿数据源的方式非常相似

00:20:51.586 --> 00:20:54.066 A:middle
在 numberOfPreviewItems() 方法中

00:20:54.066 --> 00:20:56.046 A:middle
我们返回之前

00:20:56.046 --> 00:20:57.516 A:middle
从文稿文件夹

00:20:57.516 --> 00:20:59.326 A:middle
收集的 URL 数量

00:20:59.806 --> 00:21:03.626 A:middle
然后 Quick Look 询求

00:20:59.806 --> 00:21:03.626 A:middle
然后 Quick Look 询求

00:21:03.626 --> 00:21:06.126 A:middle
单独的 QLPreviewItem

00:21:06.126 --> 00:21:08.896 A:middle
然后返回索引引用的正确 URL

00:21:13.066 --> 00:21:14.106 A:middle
很好 数据源已经

00:21:14.106 --> 00:21:15.866 A:middle
被正确地设置好了

00:21:15.866 --> 00:21:17.496 A:middle
因此我们可以继续并

00:21:17.496 --> 00:21:18.416 A:middle
显示预览控制器了

00:21:19.456 --> 00:21:20.836 A:middle
因此 我们返回到

00:21:20.836 --> 00:21:23.036 A:middle
didTapCollectionCell() 方法

00:21:23.036 --> 00:21:23.976 A:middle
并添加丢失的方法调用

00:21:34.046 --> 00:21:34.976 A:middle
我们来看看现在是什么样子

00:21:46.046 --> 00:21:47.456 A:middle
好的 我们回到了网格中

00:21:47.666 --> 00:21:49.516 A:middle
现在 当点击一个单元格时

00:21:49.846 --> 00:21:51.766 A:middle
Quick Look 会

00:21:51.766 --> 00:21:53.656 A:middle
全屏显示正确的文稿

00:21:55.326 --> 00:21:57.406 A:middle
看看 使用你习惯的所有手势

00:21:57.406 --> 00:21:59.936 A:middle
全屏显示图像

00:21:59.936 --> 00:22:01.826 A:middle
甚至 PDF 文件

00:21:59.936 --> 00:22:01.826 A:middle
甚至 PDF 文件

00:22:01.826 --> 00:22:03.346 A:middle
是多么容易

00:22:04.126 --> 00:22:06.256 A:middle
我们可以用两个手指放大文稿

00:22:06.606 --> 00:22:09.276 A:middle
我们可以选择文本

00:22:09.276 --> 00:22:11.576 A:middle
甚至复制它

00:22:13.846 --> 00:22:16.356 A:middle
一旦我们完成了

00:22:16.356 --> 00:22:18.706 A:middle
我们可以用缩放手势

00:22:18.706 --> 00:22:18.976 A:middle
再次取消 Quick Look

00:22:23.046 --> 00:22:24.416 A:middle
所以我们在这里使用的

00:22:24.416 --> 00:22:25.976 A:middle
显示 Quick Look 的方式

00:22:25.976 --> 00:22:26.986 A:middle
是模态展示风格

00:22:27.946 --> 00:22:29.406 A:middle
正如我前面所说的

00:22:29.406 --> 00:22:31.156 A:middle
我们还可以用一个推挤动画

00:22:31.156 --> 00:22:32.136 A:middle
来呈现 Quick Look

00:22:33.426 --> 00:22:35.026 A:middle
因此 我们只需

00:22:35.026 --> 00:22:36.556 A:middle
告诉 App 的导航控制器

00:22:36.556 --> 00:22:38.206 A:middle
将预览控制器

00:22:38.206 --> 00:22:40.116 A:middle
推到当前的控制器上

00:22:40.116 --> 00:22:52.786 A:middle
来让它显示 我们来看一下

00:23:05.076 --> 00:23:06.336 A:middle
正如你所见

00:23:06.336 --> 00:23:07.896 A:middle
这是一种不同的

00:23:07.896 --> 00:23:09.506 A:middle
呈现 Quick Look 的风格

00:23:09.506 --> 00:23:10.976 A:middle
它和模态呈现一样有效

00:23:17.066 --> 00:23:19.226 A:middle
好了 Quick Look 能用了

00:23:19.226 --> 00:23:20.356 A:middle
现在我想告诉你们的最后一件事

00:23:20.356 --> 00:23:22.126 A:middle
是如何使用 Quick Look 委托

00:23:22.126 --> 00:23:23.766 A:middle
来我们在网格中

00:23:23.766 --> 00:23:25.576 A:middle
点击缩略图时

00:23:25.576 --> 00:23:28.616 A:middle
获得漂亮的缩放动画

00:23:28.706 --> 00:23:30.456 A:middle
首先 我们切换回

00:23:30.456 --> 00:23:32.286 A:middle
模态呈现样式

00:23:32.286 --> 00:23:33.976 A:middle
这是缩放变换工作所需要的

00:23:39.046 --> 00:23:40.286 A:middle
然后我们需要

00:23:40.286 --> 00:23:41.496 A:middle
给预览控制器

00:23:41.496 --> 00:23:43.706 A:middle
分配一个委托

00:23:43.706 --> 00:23:44.496 A:middle
在这种情况下我们分配 self

00:23:54.046 --> 00:23:55.646 A:middle
然而 self 还不符合

00:23:55.646 --> 00:23:57.536 A:middle
QLPreviewController 委托

00:23:57.536 --> 00:23:59.506 A:middle
所以让我们将它添加到

00:23:59.506 --> 00:23:59.976 A:middle
协议列表中

00:24:12.236 --> 00:24:14.556 A:middle
现在 最后一步

00:24:14.556 --> 00:24:16.446 A:middle
我们执行一个神奇的方法

00:24:16.446 --> 00:24:18.156 A:middle
它告诉 Quick Look

00:24:18.156 --> 00:24:20.176 A:middle
当将要显示缩放动画时

00:24:20.176 --> 00:24:22.756 A:middle
使用哪个视图作为源

00:24:34.366 --> 00:24:36.506 A:middle
正如你所看到的

00:24:36.506 --> 00:24:38.816 A:middle
我们正在使用最近被轻点的

00:24:38.816 --> 00:24:40.356 A:middle
单元格的 imageView

00:24:40.356 --> 00:24:42.356 A:middle
我们将这个单元格作为参考

00:24:42.356 --> 00:24:42.896 A:middle
并将其返回给 Quick Look

00:24:44.196 --> 00:24:45.646 A:middle
这就是我们为了

00:24:45.646 --> 00:24:47.666 A:middle
让缩放动画工作要做的一切

00:24:48.066 --> 00:24:49.836 A:middle
Quick Look 将在被提交时

00:24:49.836 --> 00:24:52.416 A:middle
和被取消时调用它

00:24:52.996 --> 00:24:53.916 A:middle
我们来试一下

00:25:03.046 --> 00:25:04.506 A:middle
现在 当我们点击一个缩略图时

00:25:05.116 --> 00:25:06.576 A:middle
请注意缩略图

00:25:06.576 --> 00:25:08.446 A:middle
是如何显示到全屏预览的

00:25:09.756 --> 00:25:11.646 A:middle
同时也观察到

00:25:11.646 --> 00:25:13.726 A:middle
无论我们如何取消预览

00:25:13.766 --> 00:25:15.946 A:middle
它都会漂亮地过渡到正确的起点

00:25:22.306 --> 00:25:24.586 A:middle
很好 演示到这里

00:25:25.206 --> 00:25:26.106 A:middle
回到幻灯片

00:25:26.616 --> 00:25:30.036 A:middle
现在我想把它交给 Maxime

00:25:30.036 --> 00:25:31.996 A:middle
他会告诉你关于预览

00:25:31.996 --> 00:25:33.076 A:middle
和缩略图扩展的一切

00:25:34.336 --> 00:25:35.506 A:middle
&gt;&gt; 谢谢你 Raffael

00:25:36.186 --> 00:25:37.916 A:middle
那么 如你所见

00:25:37.996 --> 00:25:39.486 A:middle
Quick Look 使得在 App 中

00:25:39.486 --> 00:25:41.506 A:middle
添加一个强大的预览功能变得非常容易

00:25:42.196 --> 00:25:43.756 A:middle
但还有更多的事情可以谈

00:25:44.486 --> 00:25:45.556 A:middle
首先 我想向你展示的是

00:25:45.556 --> 00:25:47.326 A:middle
如何扩展 Quick Look 的预览功能

00:25:47.326 --> 00:25:48.826 A:middle
通过为你的

00:25:48.896 --> 00:25:50.766 A:middle
文件格式

00:25:50.766 --> 00:25:51.676 A:middle
提供预览

00:25:54.006 --> 00:25:55.476 A:middle
我们已经列出了

00:25:55.476 --> 00:25:56.636 A:middle
Quick Look 在本地支持的

00:25:56.636 --> 00:25:57.536 A:middle
文件类型

00:25:59.216 --> 00:26:02.936 A:middle
然而 自 iOS 11 以来

00:25:59.216 --> 00:26:02.936 A:middle
然而 自 iOS 11 以来

00:26:03.046 --> 00:26:04.836 A:middle
这个列表可以通过

00:26:04.836 --> 00:26:06.646 A:middle
与 iOS App 捆绑一个预览扩展来扩展

00:26:06.646 --> 00:26:08.886 A:middle
这样作为开发者的你

00:26:08.886 --> 00:26:10.876 A:middle
就可以为你的自定义文件格式

00:26:10.876 --> 00:26:12.326 A:middle
提供预览

00:26:12.636 --> 00:26:15.666 A:middle
你应该提供一个预览

00:26:15.666 --> 00:26:16.886 A:middle
如果你使用的是自定义文件格式

00:26:17.166 --> 00:26:18.536 A:middle
并且你想使它

00:26:18.536 --> 00:26:20.436 A:middle
像其他原生文件类型一样通过

00:26:20.436 --> 00:26:22.466 A:middle
Quick Look 预览

00:26:23.656 --> 00:26:25.146 A:middle
可供共享的文件类型

00:26:25.146 --> 00:26:27.126 A:middle
通常是用来创建扩展的

00:26:27.126 --> 00:26:28.656 A:middle
很好选择

00:26:29.576 --> 00:26:31.046 A:middle
特别是如果你希望

00:26:31.046 --> 00:26:32.886 A:middle
用户在收到

00:26:32.936 --> 00:26:35.106 A:middle
来自“邮件” “信息”

00:26:35.106 --> 00:26:37.516 A:middle
或“备忘录”等 App 中的文件后

00:26:37.516 --> 00:26:38.256 A:middle
轻松预览内容

00:26:38.766 --> 00:26:40.536 A:middle
然后一切开始运转

00:26:40.536 --> 00:26:44.096 A:middle
如果 App 使用 QLPreviewController

00:26:44.096 --> 00:26:45.896 A:middle
且打算预览一个

00:26:46.196 --> 00:26:48.026 A:middle
本地并不支持的文件

00:26:48.476 --> 00:26:50.326 A:middle
那它将会从你的预览扩展中受益

00:26:52.606 --> 00:26:54.796 A:middle
下面这个例子能告诉你

00:26:54.796 --> 00:26:56.916 A:middle
你可以通过预览扩展获得什么

00:26:57.346 --> 00:26:59.876 A:middle
我们已经构建了一个示例 App

00:26:59.876 --> 00:27:01.386 A:middle
你可以从 Apple 的网站上下载

00:26:59.876 --> 00:27:01.386 A:middle
你可以从 Apple 的网站上下载

00:27:01.386 --> 00:27:02.956 A:middle
这个 App 允许用户

00:27:02.956 --> 00:27:05.316 A:middle
创建定制的 Particle

00:27:05.316 --> 00:27:05.936 A:middle
并与其进行交互

00:27:07.086 --> 00:27:08.406 A:middle
由于我们想

00:27:08.406 --> 00:27:11.286 A:middle
与其他用户共享我们很酷的 Particle

00:27:11.286 --> 00:27:13.956 A:middle
我们创建了一个新的文件格式

00:27:13.956 --> 00:27:16.636 A:middle
Particles 文件格式

00:27:16.636 --> 00:27:18.076 A:middle
每个文件代表

00:27:18.076 --> 00:27:20.316 A:middle
一个 Particle 系统

00:27:20.316 --> 00:27:22.856 A:middle
并且你可以在其中配置各种火焰和星星

00:27:24.466 --> 00:27:26.956 A:middle
现在假设

00:27:27.296 --> 00:27:29.146 A:middle
你向你的朋友共享一个 Particles 文件

00:27:30.026 --> 00:27:31.656 A:middle
当你在“信息”中

00:27:31.786 --> 00:27:33.106 A:middle
或作为电子邮件附件预览它们时

00:27:33.106 --> 00:27:34.906 A:middle
我们看到的是

00:27:35.206 --> 00:27:36.996 A:middle
一个空白的屏幕

00:27:36.996 --> 00:27:40.256 A:middle
那肯定不是我们想要的

00:27:40.416 --> 00:27:42.176 A:middle
但是通过为我们的 Particles 文件格式

00:27:42.176 --> 00:27:43.696 A:middle
执行预览扩展

00:27:43.696 --> 00:27:45.196 A:middle
它将用一个

00:27:45.196 --> 00:27:47.926 A:middle
漂亮的三维互动 Particle 系统

00:27:48.236 --> 00:27:49.976 A:middle
取代空白屏幕 这多么棒啊

00:27:54.046 --> 00:27:55.136 A:middle
我确信你现在一定希望

00:27:55.346 --> 00:27:56.546 A:middle
了解如何为你的文件格式

00:27:56.546 --> 00:27:58.586 A:middle
创建自己的预览扩展

00:28:00.276 --> 00:28:02.666 A:middle
首先 你需要

00:28:02.666 --> 00:28:04.556 A:middle
在现有的 App 项目中

00:28:04.556 --> 00:28:05.696 A:middle
添加一个新的 Target

00:28:06.786 --> 00:28:10.116 A:middle
为此 你必须在 Xcode 中

00:28:10.156 --> 00:28:13.986 A:middle
选择 “Quick Look Preview Extension

00:28:13.986 --> 00:28:16.486 A:middle
（Quick Look 预览扩展）”模板 然后

00:28:16.486 --> 00:28:17.956 A:middle
Xcode 将为你生成几个文件

00:28:19.226 --> 00:28:20.936 A:middle
具有一个基本实现的

00:28:20.936 --> 00:28:22.426 A:middle
PreviewViewController 类

00:28:23.296 --> 00:28:25.186 A:middle
这就是你要为

00:28:25.186 --> 00:28:26.476 A:middle
预览添加代码的地方

00:28:27.066 --> 00:28:29.816 A:middle
将 PreviewViewController

00:28:29.816 --> 00:28:32.216 A:middle
作为其入口点的 storyboard 文件

00:28:32.686 --> 00:28:35.696 A:middle
然后 Info.plist 是你

00:28:35.696 --> 00:28:37.626 A:middle
需要编辑的第一样东西

00:28:37.626 --> 00:28:42.586 A:middle
让我们仔细看一下

00:28:42.796 --> 00:28:45.066 A:middle
首先

00:28:45.066 --> 00:28:46.776 A:middle
我们最感兴趣的属性

00:28:46.776 --> 00:28:48.836 A:middle
是 QLSupportedContentTypes

00:28:49.706 --> 00:28:50.786 A:middle
就是在屏幕快照中

00:28:50.816 --> 00:28:52.256 A:middle
被选定的那个

00:28:53.706 --> 00:28:55.066 A:middle
这是一个数组

00:28:55.066 --> 00:28:56.346 A:middle
其中列出了

00:28:56.346 --> 00:28:57.756 A:middle
你的扩展可以提供预览的

00:28:57.756 --> 00:28:58.136 A:middle
所有文件类型

00:28:59.366 --> 00:29:00.946 A:middle
请注意 你只能为

00:28:59.366 --> 00:29:00.946 A:middle
请注意 你只能为

00:29:00.946 --> 00:29:02.716 A:middle
你拥有的和导出的 UTI（统一类型标识符）

00:29:02.756 --> 00:29:03.996 A:middle
提供预览

00:29:05.356 --> 00:29:07.146 A:middle
当 Quick Look 不能

00:29:07.146 --> 00:29:09.246 A:middle
预览本机的文件类型时

00:29:09.246 --> 00:29:10.826 A:middle
它将使用添加到

00:29:10.826 --> 00:29:13.986 A:middle
这个数组中的内容类型

00:29:13.986 --> 00:29:15.306 A:middle
并选择一个

00:29:15.506 --> 00:29:16.106 A:middle
可以处理这个预览的扩展

00:29:16.906 --> 00:29:18.246 A:middle
所以一定要列出

00:29:18.246 --> 00:29:19.946 A:middle
你的扩展支持的所有文件类型

00:29:21.056 --> 00:29:22.526 A:middle
让我们看看我们的《Particles》App

00:29:22.746 --> 00:29:24.176 A:middle
是如何实现这一点的

00:29:24.426 --> 00:29:29.576 A:middle
如你所看到的

00:29:29.576 --> 00:29:30.896 A:middle
Particles 声明并导出一个

00:29:31.276 --> 00:29:32.176 A:middle
新的 Particles 文件类型

00:29:32.326 --> 00:29:34.806 A:middle
它的标识符是

00:29:35.486 --> 00:29:37.986 A:middle
com.example.apple-samplecode.

00:29:37.986 --> 00:29:39.996 A:middle
Particles.Particles

00:29:41.296 --> 00:29:43.006 A:middle
由于我们希望扩展

00:29:43.006 --> 00:29:45.196 A:middle
以支持预览 Particles 文件

00:29:45.196 --> 00:29:47.016 A:middle
所以我们将这个标识符添加到

00:29:47.016 --> 00:29:48.836 A:middle
Info.plist 的

00:29:48.836 --> 00:29:49.566 A:middle
QLSupportedContentTypes 中

00:29:50.256 --> 00:29:52.196 A:middle
顺便说一下

00:29:52.196 --> 00:29:54.756 A:middle
如果你对 UTI 感兴趣

00:29:54.756 --> 00:29:56.646 A:middle
你应该看看今年的

00:29:56.646 --> 00:29:56.956 A:middle
“Document Manage（文稿管理）”讨论会

00:30:00.376 --> 00:30:01.696 A:middle
当需要为文件类型扩展

00:30:01.696 --> 00:30:03.066 A:middle
生成一个新的预览时

00:30:03.066 --> 00:30:06.156 A:middle
Quick Look 将创建一个新的

00:30:06.156 --> 00:30:07.986 A:middle
PreviewViewController 实例

00:30:08.456 --> 00:30:09.026 A:middle
并在 preparePreviewOfFile(

00:30:09.086 --> 00:30:10.636 A:middle
at url: completionHandler handler:)

00:30:10.636 --> 00:30:12.056 A:middle
方法中调用它

00:30:14.976 --> 00:30:16.716 A:middle
该方法是

00:30:16.716 --> 00:30:18.876 A:middle
QLPreviewingController 协议的一部分

00:30:19.216 --> 00:30:20.826 A:middle
必须为文件

00:30:20.826 --> 00:30:22.296 A:middle
提供预览

00:30:23.156 --> 00:30:25.296 A:middle
Quick Look 将显示并加载

00:30:25.336 --> 00:30:26.116 A:middle
同时等待

00:30:26.116 --> 00:30:27.486 A:middle
你的扩展准备好

00:30:27.486 --> 00:30:28.266 A:middle
显示预览

00:30:28.756 --> 00:30:31.026 A:middle
你所要做的

00:30:31.026 --> 00:30:32.116 A:middle
就是加载预览的内容

00:30:32.116 --> 00:30:34.276 A:middle
并在扩展完成后

00:30:34.276 --> 00:30:36.196 A:middle
立即调用

00:30:36.196 --> 00:30:38.886 A:middle
completionHandler

00:30:39.026 --> 00:30:40.216 A:middle
好的

00:30:40.216 --> 00:30:42.676 A:middle
这就是预览扩展

00:30:42.676 --> 00:30:43.216 A:middle
让我们更进一步

00:30:44.016 --> 00:30:46.046 A:middle
与预览类似

00:30:46.046 --> 00:30:47.266 A:middle
你也可以为自己文件格式的文件

00:30:47.266 --> 00:30:48.926 A:middle
提供缩略图

00:30:49.316 --> 00:30:51.506 A:middle
让我们来谈谈

00:30:51.506 --> 00:30:52.356 A:middle
Quick Look 缩略图扩展

00:30:52.916 --> 00:30:56.776 A:middle
缩略图是表示

00:30:56.776 --> 00:30:58.806 A:middle
文件内容的

00:30:58.806 --> 00:31:00.806 A:middle
有限大小的图像

00:30:58.806 --> 00:31:00.806 A:middle
有限大小的图像

00:31:01.116 --> 00:31:03.206 A:middle
整个 iOS 和 macOS

00:31:03.206 --> 00:31:05.856 A:middle
都允许用户

00:31:05.856 --> 00:31:08.216 A:middle
辨别文件

00:31:08.216 --> 00:31:09.876 A:middle
而不需要打开文件

00:31:11.366 --> 00:31:12.796 A:middle
例如 你可以在这个屏幕快照中看到

00:31:12.796 --> 00:31:15.016 A:middle
iOS 是如何在“文件” App 中

00:31:15.016 --> 00:31:17.706 A:middle
使用它们的

00:31:17.706 --> 00:31:19.326 A:middle
iOS 可以为不同的文件类型

00:31:19.326 --> 00:31:21.356 A:middle
图像 视频 PDF

00:31:21.356 --> 00:31:24.426 A:middle
文本文件和 USDZ 文件

00:31:24.426 --> 00:31:25.266 A:middle
生成缩略图

00:31:26.126 --> 00:31:28.276 A:middle
现在你可能已经注意到了

00:31:28.276 --> 00:31:29.966 A:middle
左边的空白图标

00:31:31.186 --> 00:31:32.816 A:middle
这是因为这些是 Particles 文件

00:31:32.956 --> 00:31:35.726 A:middle
iOS 不知道

00:31:35.726 --> 00:31:37.346 A:middle
如何为这个文件

00:31:37.346 --> 00:31:38.466 A:middle
生成缩略图

00:31:38.796 --> 00:31:41.786 A:middle
但是不用担心

00:31:41.786 --> 00:31:43.756 A:middle
我们将向你展示

00:31:43.756 --> 00:31:45.376 A:middle
如何创建一个缩略图扩展

00:31:45.376 --> 00:31:46.746 A:middle
你可以使用它

00:31:46.746 --> 00:31:47.986 A:middle
轻松地为你的自定义文件类型

00:31:47.986 --> 00:31:48.296 A:middle
改进这种情况

00:31:49.296 --> 00:31:50.996 A:middle
看看这些 Particles 文件的

00:31:50.996 --> 00:31:52.516 A:middle
缩略图看起来有多棒

00:31:52.516 --> 00:31:54.346 A:middle
多亏了我们在 App 中

00:31:54.346 --> 00:31:55.976 A:middle
添加的缩略图扩展

00:32:01.166 --> 00:32:02.426 A:middle
这个扩展提供的缩略图

00:32:02.426 --> 00:32:04.906 A:middle
出现在“文件” App 中

00:32:04.906 --> 00:32:06.416 A:middle
以及任何

00:32:06.416 --> 00:32:07.616 A:middle
基于 UIDocumentBrowswerViewController

00:32:07.616 --> 00:32:09.526 A:middle
的 App 中

00:32:10.576 --> 00:32:12.256 A:middle
它们也会出现在

00:32:12.256 --> 00:32:14.076 A:middle
Quick Look 列表中

00:32:14.076 --> 00:32:15.746 A:middle
在 Quick Look 中预览多个文件时

00:32:15.746 --> 00:32:17.546 A:middle
你可以在点击列表按钮时看到它们

00:32:17.546 --> 00:32:20.166 A:middle
如果你有

00:32:20.166 --> 00:32:22.136 A:middle
用户可以共享并与之交互的

00:32:22.136 --> 00:32:24.276 A:middle
自定义文件类型

00:32:24.276 --> 00:32:25.396 A:middle
那么你可能想要为你的 App

00:32:25.396 --> 00:32:26.416 A:middle
提供一个这样的扩展

00:32:27.166 --> 00:32:28.786 A:middle
现在让我们看看如何做到这一点

00:32:31.796 --> 00:32:33.436 A:middle
创建缩略图扩展

00:32:33.466 --> 00:32:35.466 A:middle
就像创建预览扩展一样

00:32:36.856 --> 00:32:39.626 A:middle
为此 在现有的 App 项目中

00:32:39.626 --> 00:32:40.936 A:middle
添加一个新的 Target

00:32:40.936 --> 00:32:42.536 A:middle
并选择

00:32:42.536 --> 00:32:43.986 A:middle
“Thumbnail Extension（缩略图扩展）”模板

00:32:46.326 --> 00:32:48.226 A:middle
Xcode 将为你生成两个文件

00:32:48.226 --> 00:32:50.126 A:middle
一个是具有

00:32:50.126 --> 00:32:51.316 A:middle
基本实现的

00:32:51.316 --> 00:32:52.046 A:middle
ThumbnailProvider 类

00:32:53.326 --> 00:32:56.296 A:middle
在这里 你要添加

00:32:56.296 --> 00:33:00.596 A:middle
负责生成缩略图的代码 Info.plist

00:32:56.296 --> 00:33:00.596 A:middle
负责生成缩略图的代码 Info.plist

00:33:00.596 --> 00:33:01.806 A:middle
像在预览扩展中一样

00:33:02.356 --> 00:33:03.856 A:middle
是你创建扩展后

00:33:03.856 --> 00:33:05.796 A:middle
你要编辑的第一件东西

00:33:10.046 --> 00:33:11.296 A:middle
与预览扩展的

00:33:11.296 --> 00:33:12.926 A:middle
Info.plist 一样

00:33:12.926 --> 00:33:14.096 A:middle
缩略图扩展的

00:33:14.096 --> 00:33:15.406 A:middle
Info.plist 也有一个

00:33:15.406 --> 00:33:17.326 A:middle
QLSupportedContentTypes 数组

00:33:17.936 --> 00:33:20.766 A:middle
需要用扩展支持的

00:33:20.856 --> 00:33:23.096 A:middle
内容类型填充

00:33:24.096 --> 00:33:26.866 A:middle
因此 请确保

00:33:26.866 --> 00:33:29.086 A:middle
在 QLSupportedContentTypes 中

00:33:29.086 --> 00:33:30.756 A:middle
包含你的扩展可以生成

00:33:30.756 --> 00:33:32.626 A:middle
缩略图的所有内容类型

00:33:33.766 --> 00:33:35.646 A:middle
在设置扩展之后

00:33:35.836 --> 00:33:37.466 A:middle
你将能够开始

00:33:37.466 --> 00:33:40.206 A:middle
实现 QLThumbnailProvider 子类

00:33:40.596 --> 00:33:42.506 A:middle
有两种方法

00:33:42.506 --> 00:33:44.976 A:middle
可以为文件提供缩略图

00:33:45.116 --> 00:33:49.336 A:middle
你可以使用这些来绘制 CoreGraphics

00:33:49.336 --> 00:33:52.266 A:middle
UIKit 绘制技术

00:33:52.266 --> 00:33:54.286 A:middle
或者你可以返回图像文件 URL

00:33:55.536 --> 00:33:59.296 A:middle
你必须在

00:33:59.296 --> 00:34:00.866 A:middle
QLThumbnailProvider 子类中

00:33:59.296 --> 00:34:00.866 A:middle
QLThumbnailProvider 子类中

00:34:00.866 --> 00:34:02.316 A:middle
重写 provideThumbnail(for request:

00:34:02.536 --> 00:34:04.326 A:middle
_ handler: )方法

00:34:05.546 --> 00:34:07.816 A:middle
我们在 2017 年的 WWDC 中的

00:34:07.816 --> 00:34:09.795 A:middle
“在 iOS 11 中打造优秀的基于文稿的 App”

00:34:09.826 --> 00:34:14.376 A:middle
讨论会中 对 Quick Look API 中的

00:34:14.376 --> 00:34:16.556 A:middle
这一部分进行了广泛的讨论

00:34:17.076 --> 00:34:18.166 A:middle
如果你想

00:34:18.166 --> 00:34:19.485 A:middle
为你的自定义文件类型

00:34:19.485 --> 00:34:21.966 A:middle
提供缩略图

00:34:21.966 --> 00:34:23.666 A:middle
我强烈建议你去看看

00:34:23.936 --> 00:34:25.485 A:middle
简而言之

00:34:25.485 --> 00:34:26.936 A:middle
你将需要利用

00:34:26.936 --> 00:34:28.166 A:middle
在 QLFileThumbnailRequest 方法中

00:34:28.275 --> 00:34:30.286 A:middle
包含的参数

00:34:31.856 --> 00:34:34.126 A:middle
文件的 URL

00:34:34.126 --> 00:34:35.176 A:middle
缩略图的最大和最小尺寸

00:34:35.176 --> 00:34:37.295 A:middle
以及它的大小

00:34:39.596 --> 00:34:41.565 A:middle
对于每个缩略图请求

00:34:41.565 --> 00:34:43.646 A:middle
API 期望你创建一个

00:34:43.646 --> 00:34:45.315 A:middle
QLThumbnailReply 对象

00:34:45.916 --> 00:34:48.025 A:middle
这个对象必须

00:34:48.025 --> 00:34:49.886 A:middle
负责生成缩略图

00:34:50.826 --> 00:34:51.886 A:middle
你需要通过该方法的

00:34:51.886 --> 00:34:53.116 A:middle
完成处理程序

00:34:53.116 --> 00:34:57.636 A:middle
把它提供给 Quick Look

00:34:57.766 --> 00:34:59.166 A:middle
好吧 让我们来具体看看

00:34:59.166 --> 00:35:00.306 A:middle
现在是演示时间

00:34:59.166 --> 00:35:00.306 A:middle
现在是演示时间

00:35:00.806 --> 00:35:03.956 A:middle
让我们先来看看

00:35:04.096 --> 00:35:05.556 A:middle
安装了《Particles》App 后

00:35:05.556 --> 00:35:08.566 A:middle
没有任何 Quick Look 扩展的情况

00:35:09.556 --> 00:35:11.466 A:middle
好吧 我们还没有任何文件

00:35:11.466 --> 00:35:13.686 A:middle
让我们按一下 “+” 按钮

00:35:13.686 --> 00:35:15.056 A:middle
创建一个新的文件

00:35:17.116 --> 00:35:18.686 A:middle
你在这里看到的是

00:35:18.686 --> 00:35:19.686 A:middle
Particle 编辑器

00:35:20.126 --> 00:35:21.786 A:middle
让我们创建一个火焰 Particle 系统

00:35:21.786 --> 00:35:23.946 A:middle
我们稍微改变一下颜色

00:35:23.946 --> 00:35:25.426 A:middle
然后保存文稿

00:35:27.096 --> 00:35:30.336 A:middle
那么你可以看到

00:35:30.336 --> 00:35:31.716 A:middle
我们并看不到我们刚刚设计的

00:35:31.716 --> 00:35:33.046 A:middle
美丽的 Particle 系统

00:35:33.406 --> 00:35:35.716 A:middle
我们可以通过

00:35:35.716 --> 00:35:37.716 A:middle
在我们的 App 中添加一个缩略图扩展来修复

00:35:38.476 --> 00:35:41.966 A:middle
现在 让我们将文件保存到“备忘录”

00:35:41.966 --> 00:35:46.916 A:middle
并查看 Quick Look 中的预览效果

00:35:47.076 --> 00:35:50.056 A:middle
好的 我们打开文件格式

00:35:52.316 --> 00:35:54.746 A:middle
我们看到的只是一个空白的屏幕

00:35:54.746 --> 00:35:56.626 A:middle
我们可以做得更好 我们也改进一下这个

00:35:57.556 --> 00:35:59.066 A:middle
让我们切换到 Xcode

00:35:59.066 --> 00:36:00.706 A:middle
并实行预览

00:35:59.066 --> 00:36:00.706 A:middle
并实行预览

00:36:00.706 --> 00:36:01.606 A:middle
和缩略图扩展

00:36:02.826 --> 00:36:04.526 A:middle
我们已经有一个

00:36:04.526 --> 00:36:06.926 A:middle
包含扩展设置的现有项目

00:36:07.956 --> 00:36:09.516 A:middle
我们将使用这些作为起点

00:36:09.516 --> 00:36:11.736 A:middle
并添加这两个扩展

00:36:12.556 --> 00:36:14.266 A:middle
如前所述

00:36:14.266 --> 00:36:16.326 A:middle
我们需要配置扩展的 Info.plist

00:36:16.326 --> 00:36:17.936 A:middle
以便系统知道

00:36:17.936 --> 00:36:19.436 A:middle
我们能够为 Particles 文件

00:36:19.436 --> 00:36:21.196 A:middle
提供预览

00:36:21.196 --> 00:36:22.316 A:middle
和缩略图

00:36:23.476 --> 00:36:25.786 A:middle
所以《Particles》App

00:36:25.786 --> 00:36:28.236 A:middle
在 App 的 Target 中的

00:36:28.236 --> 00:36:30.076 A:middle
“Exported UTIs” 部分定义自己的文件格式

00:36:30.936 --> 00:36:32.246 A:middle
我们需要配置扩展

00:36:32.246 --> 00:36:35.156 A:middle
以在 Info.plist 中使用该 UTI

00:36:35.336 --> 00:36:38.676 A:middle
正如你所看到的

00:36:38.676 --> 00:36:40.186 A:middle
预览扩展的 Info.plist 的

00:36:40.186 --> 00:36:41.376 A:middle
QLSupportedContentTypes

00:36:41.376 --> 00:36:43.346 A:middle
确实包含

00:36:43.346 --> 00:36:44.756 A:middle
Particles 文件格式的

00:36:44.756 --> 00:36:45.746 A:middle
UTI 的标识符

00:36:46.226 --> 00:36:49.606 A:middle
缩略图扩展的

00:36:49.606 --> 00:36:50.886 A:middle
Info.plist 的情况

00:36:50.886 --> 00:36:51.446 A:middle
也是这样

00:36:51.966 --> 00:36:54.256 A:middle
所以唯一剩下要做的

00:36:54.526 --> 00:36:56.226 A:middle
就是执行这些扩展

00:36:56.766 --> 00:36:58.226 A:middle
让我们从预览扩展开始

00:36:59.276 --> 00:37:02.296 A:middle
正如演讲中提到的

00:36:59.276 --> 00:37:02.296 A:middle
正如演讲中提到的

00:37:02.626 --> 00:37:03.796 A:middle
我们需要执行这个方法

00:37:03.796 --> 00:37:05.976 A:middle
preparePreviewOfFile(at url:

00:37:05.976 --> 00:37:07.166 A:middle
completionHandler handler: )

00:37:07.536 --> 00:37:10.506 A:middle
我们的主要 App

00:37:10.506 --> 00:37:12.316 A:middle
《Particles》已经有一个视图控制器类

00:37:12.626 --> 00:37:13.686 A:middle
它会在屏幕上

00:37:13.686 --> 00:37:14.526 A:middle
变成 Particles 系统

00:37:15.546 --> 00:37:16.866 A:middle
我们将在我们的扩展中

00:37:16.866 --> 00:37:18.346 A:middle
减少重复的控制器

00:37:19.406 --> 00:37:21.126 A:middle
我们将创建一个 helper 方法

00:37:21.126 --> 00:37:22.716 A:middle
它将负责

00:37:22.716 --> 00:37:24.176 A:middle
加载这样的视图控制器

00:37:24.366 --> 00:37:26.316 A:middle
并将其添加到视图层级结构中

00:37:28.046 --> 00:37:30.726 A:middle
正如你看到的

00:37:30.726 --> 00:37:32.156 A:middle
现在一个文稿的 particleViewController

00:37:32.156 --> 00:37:33.656 A:middle
只是创建一个

00:37:33.656 --> 00:37:35.526 A:middle
particleViewController

00:37:35.526 --> 00:37:37.146 A:middle
并将它传递给

00:37:37.146 --> 00:37:38.426 A:middle
它接收到的文稿

00:37:38.426 --> 00:37:39.806 A:middle
这样 particleViewController

00:37:39.806 --> 00:37:41.566 A:middle
就可以呈现

00:37:41.566 --> 00:37:42.586 A:middle
文稿所代表的 Particles

00:37:44.126 --> 00:37:45.426 A:middle
我们仍然需要

00:37:45.426 --> 00:37:46.896 A:middle
从 preparePreviewOfFile() 中调用这个方法

00:37:46.896 --> 00:37:50.286 A:middle
那么我们就这么做吧

00:37:51.336 --> 00:37:54.136 A:middle
我们首先创建一个文稿

00:37:54.136 --> 00:37:56.096 A:middle
它是 UIDocument 的子类

00:37:57.136 --> 00:37:59.876 A:middle
我们打开它

00:37:59.876 --> 00:38:01.846 A:middle
一旦它打开我们就可调用

00:37:59.876 --> 00:38:01.846 A:middle
一旦它打开我们就可调用

00:38:01.846 --> 00:38:03.496 A:middle
我们的 helper 方法

00:38:03.496 --> 00:38:04.566 A:middle
它会取代一个 particleViewController

00:38:05.696 --> 00:38:08.206 A:middle
最后 我们不要忘记

00:38:08.206 --> 00:38:09.606 A:middle
关闭完成处理程序

00:38:09.606 --> 00:38:11.796 A:middle
以通知 Quick Look

00:38:11.796 --> 00:38:13.186 A:middle
我们的视图控制器已经加载

00:38:13.186 --> 00:38:13.976 A:middle
并准备在屏幕上显示

00:38:15.306 --> 00:38:17.606 A:middle
我们的预览扩展现在已经准备好了

00:38:18.376 --> 00:38:19.986 A:middle
让我们现在实现缩略图扩展

00:38:21.586 --> 00:38:24.466 A:middle
这里我们要做的

00:38:24.466 --> 00:38:26.086 A:middle
就是执行 provideThumbnail(for request:

00:38:26.086 --> 00:38:27.456 A:middle
_ handler: ) 方法

00:38:28.776 --> 00:38:30.546 A:middle
因此 request 提供了

00:38:30.546 --> 00:38:32.016 A:middle
在呈现缩略图时

00:38:32.016 --> 00:38:33.686 A:middle
需要考虑的几个属性

00:38:35.886 --> 00:38:37.696 A:middle
在本例中

00:38:37.696 --> 00:38:39.886 A:middle
我们将使用文件 URL

00:38:39.886 --> 00:38:40.726 A:middle
作为缩略图的最大尺寸

00:38:41.966 --> 00:38:43.926 A:middle
注意这里也有缩放

00:38:43.926 --> 00:38:45.826 A:middle
和最小尺寸的性质

00:38:45.926 --> 00:38:47.056 A:middle
但是在我们的 Particle 系统中

00:38:47.056 --> 00:38:48.316 A:middle
我们不使用它们

00:38:49.716 --> 00:38:51.496 A:middle
然后我们创建一个绘制代码块

00:38:51.826 --> 00:38:54.676 A:middle
稍后我们将提供完成块

00:38:56.596 --> 00:38:58.836 A:middle
在本例中

00:38:58.836 --> 00:39:00.476 A:middle
我们调用 helper 方法

00:38:58.836 --> 00:39:00.476 A:middle
我们调用 helper 方法

00:39:00.476 --> 00:39:01.246 A:middle
它负责绘制缩略图

00:39:02.056 --> 00:39:03.606 A:middle
drawThumbnail(for: fileURL

00:39:04.126 --> 00:39:04.866 A:middle
contextSize: )

00:39:05.336 --> 00:39:06.676 A:middle
我们马上要执行

00:39:06.676 --> 00:39:08.136 A:middle
这个 helper 方法

00:39:08.706 --> 00:39:10.296 A:middle
你可能已经注意到

00:39:10.296 --> 00:39:11.716 A:middle
我们的绘图块返回一个布尔值

00:39:12.576 --> 00:39:13.926 A:middle
该标志指示

00:39:13.926 --> 00:39:15.196 A:middle
是否已成功绘制了缩略图

00:39:15.196 --> 00:39:17.266 A:middle
如果这个代码块

00:39:17.266 --> 00:39:18.376 A:middle
被用来生成缩略图

00:39:19.396 --> 00:39:21.376 A:middle
现在我们来看看

00:39:21.376 --> 00:39:22.236 A:middle
如何画出 Particles 缩略图

00:39:24.316 --> 00:39:26.746 A:middle
为了绘制缩略图

00:39:26.746 --> 00:39:29.316 A:middle
我们使用文件的 URL

00:39:29.316 --> 00:39:31.276 A:middle
以及绘制环境的大小

00:39:32.196 --> 00:39:33.856 A:middle
在这种情况下

00:39:33.856 --> 00:39:35.256 A:middle
我们都知道缩略图要求的最大尺寸

00:39:35.256 --> 00:39:37.116 A:middle
因为我们可以生成

00:39:37.116 --> 00:39:38.526 A:middle
任意大小的 Particles 缩略图

00:39:39.376 --> 00:39:41.756 A:middle
我们的方法是首先

00:39:41.756 --> 00:39:43.426 A:middle
创建一个表示文件的文稿

00:39:43.426 --> 00:39:45.776 A:middle
并尝试打开它

00:39:46.226 --> 00:39:48.296 A:middle
如果失败 则返回假

00:39:48.336 --> 00:39:50.276 A:middle
表示无法生成缩略图

00:39:50.906 --> 00:39:54.066 A:middle
打开文件之后

00:39:54.186 --> 00:39:56.036 A:middle
它会创建一个 particleViewController

00:39:56.626 --> 00:39:57.576 A:middle
用于呈现

00:39:57.576 --> 00:39:57.966 A:middle
Particles 文件

00:39:59.506 --> 00:40:01.136 A:middle
然后它获取一个 particleViewController

00:39:59.506 --> 00:40:01.136 A:middle
然后它获取一个 particleViewController

00:40:01.136 --> 00:40:02.666 A:middle
的快照

00:40:02.666 --> 00:40:05.466 A:middle
并使用它来绘制缩略图

00:40:05.506 --> 00:40:06.766 A:middle
我们在返回真之前

00:40:06.766 --> 00:40:08.196 A:middle
关闭文稿

00:40:08.196 --> 00:40:09.886 A:middle
表明我们成功地生成了一个缩略图

00:40:11.766 --> 00:40:13.116 A:middle
现在我们已经

00:40:13.116 --> 00:40:15.736 A:middle
生成了缩略图

00:40:15.736 --> 00:40:16.736 A:middle
我们需要创建我们的 QLThumbnailReply

00:40:17.296 --> 00:40:20.476 A:middle
我们根据环境大小创建

00:40:20.476 --> 00:40:23.076 A:middle
在本例中

00:40:23.076 --> 00:40:25.486 A:middle
是最大尺寸和绘制代码块

00:40:27.516 --> 00:40:29.886 A:middle
我们还有我们通过

00:40:29.886 --> 00:40:32.346 A:middle
完成处理程序中的参数

00:40:32.346 --> 00:40:33.356 A:middle
提供的 reply 对象

00:40:33.936 --> 00:40:35.806 A:middle
在这个例子中是 “nil”

00:40:35.806 --> 00:40:36.946 A:middle
因为我们总是添加它们

00:40:36.946 --> 00:40:38.566 A:middle
来为 Particles 文件

00:40:39.676 --> 00:40:40.956 A:middle
绘制缩略图

00:40:40.956 --> 00:40:41.926 A:middle
如果在绘制时它们中的任何一个显示出来

00:40:42.386 --> 00:40:43.486 A:middle
缩略图块的成功值

00:40:43.486 --> 00:40:45.486 A:middle
将会支持出来

00:40:45.486 --> 00:40:47.736 A:middle
所以缩略图可在之后被舍弃

00:40:48.266 --> 00:40:49.796 A:middle
我们最终都设置好了

00:40:49.796 --> 00:40:51.326 A:middle
让我们运行这段代码看看 它是怎样的

00:40:52.406 --> 00:40:54.726 A:middle
哇 现在我们看到了一个

00:40:54.726 --> 00:40:56.926 A:middle
漂亮的火粒子的文件缩略图

00:40:57.446 --> 00:40:59.386 A:middle
这比之前看起来好太多了

00:41:00.426 --> 00:41:03.296 A:middle
现在我们来检测一下我们的预览扩展

00:41:04.966 --> 00:41:07.076 A:middle
好的 所以我们在“备忘录”里

00:41:07.076 --> 00:41:08.126 A:middle
Quick Look 仍然显示着

00:41:08.126 --> 00:41:09.726 A:middle
和之前我们尝试预览文件的时候

00:41:09.726 --> 00:41:11.006 A:middle
一样的空白屏

00:41:11.676 --> 00:41:13.016 A:middle
让我们取消 Quick Look

00:41:13.016 --> 00:41:13.706 A:middle
然后再次显示它

00:41:16.186 --> 00:41:18.556 A:middle
现在我们能看见

00:41:18.556 --> 00:41:20.796 A:middle
漂亮的粒子预览

00:41:20.796 --> 00:41:25.186 A:middle
将我们的自定义文件格式 在 iOS 中是如此的简单

00:41:25.186 --> 00:41:26.556 A:middle
今天的展示就到这里

00:41:27.086 --> 00:41:29.116 A:middle
所以 我们今天学习到了什么

00:41:29.806 --> 00:41:32.176 A:middle
首先 我们已经向你展示了

00:41:32.326 --> 00:41:33.956 A:middle
通过使用 Quick Look 的

00:41:33.956 --> 00:41:35.696 A:middle
QLPreviewController

00:41:35.696 --> 00:41:37.306 A:middle
向 App 添加

00:41:37.306 --> 00:41:39.276 A:middle
强大的预览功能是多么容易

00:41:40.276 --> 00:41:42.926 A:middle
之后我们了解了

00:41:42.926 --> 00:41:44.316 A:middle
Quick Look 的扩展点

00:41:45.196 --> 00:41:47.236 A:middle
预览扩展允许你

00:41:47.236 --> 00:41:48.876 A:middle
让你的自定义文件

00:41:48.876 --> 00:41:50.306 A:middle
像任何本地文件类型一样

00:41:50.306 --> 00:41:51.386 A:middle
通过 Quick Look 得以预览

00:41:52.396 --> 00:41:54.326 A:middle
而缩略图扩展

00:41:54.326 --> 00:41:56.136 A:middle
用于在需要时

00:41:56.176 --> 00:41:57.976 A:middle
向 iOS 提供你的

00:41:57.976 --> 00:41:58.276 A:middle
文件类型的缩略图

00:41:59.086 --> 00:42:01.526 A:middle
这些扩展一起协作

00:41:59.086 --> 00:42:01.526 A:middle
这些扩展一起协作

00:42:01.526 --> 00:42:02.826 A:middle
使你的文件格式

00:42:02.826 --> 00:42:06.216 A:middle
成为 iOS 中的会员

00:42:06.356 --> 00:42:08.036 A:middle
那么 这就是这场 Quick Look

00:42:08.036 --> 00:42:08.576 A:middle
讨论会的全部内容了

00:42:09.186 --> 00:42:10.286 A:middle
如果你想得到更多信息

00:42:10.286 --> 00:42:12.346 A:middle
你可以登陆

00:42:12.346 --> 00:42:13.246 A:middle
Apple 的网站

00:42:13.646 --> 00:42:14.976 A:middle
感谢大家的关注
