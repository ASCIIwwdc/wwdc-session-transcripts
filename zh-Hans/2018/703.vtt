WEBVTT

00:00:06.516 --> 00:00:14.500 A:middle
［ 音乐 ］

00:00:20.516 --> 00:00:29.046 A:middle
［ 掌声 ］

00:00:29.546 --> 00:00:31.956 A:middle
&gt;&gt; 大家好 非常欢迎

00:00:32.436 --> 00:00:33.796 A:middle
我是 Gaurav

00:00:33.796 --> 00:00:34.936 A:middle
今天要向大家介绍的主题是

00:00:34.936 --> 00:00:36.436 A:middle
机器学习

00:00:37.096 --> 00:00:40.146 A:middle
去年我们发布了 Core ML

00:00:40.146 --> 00:00:41.986 A:middle
从各位开发人员处

00:00:41.986 --> 00:00:44.906 A:middle
得到的反馈

00:00:44.906 --> 00:00:45.766 A:middle
非同凡响

00:00:46.566 --> 00:00:48.456 A:middle
你们开发的 App

00:00:48.606 --> 00:00:50.436 A:middle
令人惊叹

00:00:50.436 --> 00:00:53.596 A:middle
效果也非常出众

00:00:53.596 --> 00:00:54.086 A:middle
所以 首先让我对大家表示感谢

00:00:54.676 --> 00:00:56.186 A:middle
谢谢你们信任 Core ML

00:00:56.666 --> 00:00:58.376 A:middle
我们非常高兴看到

00:00:58.376 --> 00:01:01.396 A:middle
这么多开发人员

00:00:58.376 --> 00:01:01.396 A:middle
这么多开发人员

00:01:01.396 --> 00:01:03.306 A:middle
使用 Core ML

00:01:03.306 --> 00:01:03.596 A:middle
并给用户带来智能体验

00:01:04.406 --> 00:01:05.556 A:middle
因为我们是共进退的

00:01:05.876 --> 00:01:06.226 A:middle
感谢大家

00:01:07.041 --> 00:01:09.041 A:middle
［ 掌声 ］

00:01:09.066 --> 00:01:12.376 A:middle
这是给所有开发人员的掌声

00:01:13.236 --> 00:01:16.506 A:middle
好 如果你还有印象

00:01:16.506 --> 00:01:18.026 A:middle
Core ML 让你可以轻松

00:01:18.026 --> 00:01:19.526 A:middle
将机器学习模型

00:01:19.526 --> 00:01:19.856 A:middle
应用于你的 App 中

00:01:21.336 --> 00:01:22.586 A:middle
整个过程非常简单

00:01:23.006 --> 00:01:25.066 A:middle
找到一个机器学习模型

00:01:25.066 --> 00:01:27.746 A:middle
拖拽到 Xcode 中

00:01:27.816 --> 00:01:29.806 A:middle
然后仅添加三行代码

00:01:30.366 --> 00:01:32.776 A:middle
你就可以实时运行

00:01:32.776 --> 00:01:34.206 A:middle
最先进的机器学习模型

00:01:34.206 --> 00:01:36.376 A:middle
以及其中几百万个参数

00:01:36.436 --> 00:01:36.716 A:middle
和几十亿次计算

00:01:36.916 --> 00:01:37.736 A:middle
真是令人惊叹

00:01:39.076 --> 00:01:40.856 A:middle
你的用户可以

00:01:40.916 --> 00:01:42.606 A:middle
实时体验机器学习

00:01:42.606 --> 00:01:44.576 A:middle
同时他们的隐私

00:01:44.576 --> 00:01:44.806 A:middle
也受到保护

00:01:46.066 --> 00:01:47.466 A:middle
你只需要将模型

00:01:47.466 --> 00:01:49.766 A:middle
拖拽进 Xcode

00:01:50.126 --> 00:01:51.546 A:middle
剩下的就看

00:01:51.546 --> 00:01:51.756 A:middle
Core ML 了

00:01:51.856 --> 00:01:55.986 A:middle
那么问题来了

00:01:55.986 --> 00:01:57.776 A:middle
这些机器学习模型

00:01:58.626 --> 00:01:58.746 A:middle
从哪儿来呢

00:01:59.936 --> 00:02:01.726 A:middle
去年 我们给大家提供了

00:01:59.936 --> 00:02:01.726 A:middle
去年 我们给大家提供了

00:02:01.726 --> 00:02:02.486 A:middle
两个选择

00:02:03.116 --> 00:02:05.086 A:middle
第一个是

00:02:05.086 --> 00:02:06.896 A:middle
你可以从我们网站上

00:02:06.896 --> 00:02:09.416 A:middle
下载机器学习模型

00:02:10.166 --> 00:02:13.146 A:middle
但更重要的是

00:02:13.146 --> 00:02:15.326 A:middle
我们还发布了 Core ML 工具

00:02:15.896 --> 00:02:18.086 A:middle
有了 Core ML 工具

00:02:18.316 --> 00:02:19.486 A:middle
你们就可以使用

00:02:19.576 --> 00:02:22.496 A:middle
了不起的 ML 社区创作作品了

00:02:23.776 --> 00:02:25.986 A:middle
方法也很简单

00:02:26.446 --> 00:02:27.316 A:middle
选择你最想要的学习资料库

00:02:27.316 --> 00:02:29.226 A:middle
在该资料库中

00:02:29.226 --> 00:02:31.326 A:middle
训练你的模型

00:02:31.526 --> 00:02:33.426 A:middle
将模型导入 Core ML

00:02:33.426 --> 00:02:35.776 A:middle
然后再嵌入

00:02:35.776 --> 00:02:36.426 A:middle
你的 App 即可

00:02:36.426 --> 00:02:40.256 A:middle
我们发布 Core ML 的时候

00:02:40.256 --> 00:02:42.346 A:middle
Core ML 只支持

00:02:42.406 --> 00:02:43.656 A:middle
五个或六个

00:02:43.656 --> 00:02:47.726 A:middle
训练资料库

00:02:47.726 --> 00:02:48.996 A:middle
但是一年以内

00:02:48.996 --> 00:02:52.026 A:middle
我们就支持了

00:02:52.026 --> 00:02:52.976 A:middle
所有热门的资料库

00:02:53.966 --> 00:02:55.586 A:middle
我们现在还在改良工具

00:02:55.586 --> 00:02:56.756 A:middle
让你们有更大

00:02:56.756 --> 00:02:57.826 A:middle
自定义的空间

00:02:58.266 --> 00:02:59.436 A:middle
明天的会上

00:02:59.436 --> 00:03:01.846 A:middle
我们会给大家更详细介绍

00:02:59.436 --> 00:03:01.846 A:middle
我们会给大家更详细介绍

00:03:01.846 --> 00:03:02.786 A:middle
Core ML 工具

00:03:03.246 --> 00:03:07.586 A:middle
2017 年年底

00:03:07.586 --> 00:03:10.686 A:middle
我们发布了 Turi Create 这是我们的

00:03:10.686 --> 00:03:11.816 A:middle
开源机器学习数据集

00:03:11.926 --> 00:03:13.706 A:middle
明天的会议上我们也会

00:03:13.706 --> 00:03:15.556 A:middle
介绍 Turi Create

00:03:16.086 --> 00:03:18.666 A:middle
今年 我们想给大家

00:03:18.666 --> 00:03:19.636 A:middle
带来一些新的东西

00:03:20.046 --> 00:03:22.186 A:middle
希望能继续我们的征途

00:03:22.876 --> 00:03:24.226 A:middle
给大家带来一些原生的

00:03:24.226 --> 00:03:27.126 A:middle
既灵活又基于 Swift 的东西

00:03:28.056 --> 00:03:29.276 A:middle
对 Xcode 的功能

00:03:29.276 --> 00:03:32.216 A:middle
好好加以利用

00:03:32.216 --> 00:03:33.726 A:middle
将关注点放在你们身上

00:03:33.726 --> 00:03:35.916 A:middle
开发人员身上

00:03:35.916 --> 00:03:37.566 A:middle
让机器学习变得简单明了

00:03:38.306 --> 00:03:40.956 A:middle
这就是我们发布 Create ML 的原因

00:03:41.516 --> 00:03:47.636 A:middle
［ 掌声 ］

00:03:48.136 --> 00:03:50.026 A:middle
下面说说我们基于 Swift 的

00:03:50.716 --> 00:03:52.016 A:middle
机器学习框架

00:03:52.226 --> 00:03:55.096 A:middle
Create ML 让机器学习的

00:03:55.096 --> 00:03:56.616 A:middle
组成部分变得完整

00:03:57.616 --> 00:03:59.836 A:middle
你可以在 Create ML 中

00:03:59.836 --> 00:04:01.946 A:middle
创建一个模型

00:03:59.836 --> 00:04:01.946 A:middle
创建一个模型

00:04:01.996 --> 00:04:02.216 A:middle
然后在 Core ML 中运行该模型

00:04:02.796 --> 00:04:04.496 A:middle
这样你就可以用我们最喜欢的

00:04:04.496 --> 00:04:06.956 A:middle
编程语言 Swift

00:04:06.956 --> 00:04:07.776 A:middle
从头到脚进行机器学习开发

00:04:08.346 --> 00:04:09.366 A:middle
无需面对开发过程中

00:04:09.366 --> 00:04:10.606 A:middle
需要用到多种语言的情况

00:04:10.606 --> 00:04:12.166 A:middle
例如 你用一种语言训练模型

00:04:12.166 --> 00:04:13.386 A:middle
而又在另一种语言中

00:04:13.386 --> 00:04:14.446 A:middle
运行模型

00:04:16.296 --> 00:04:19.736 A:middle
Create ML

00:04:19.736 --> 00:04:20.565 A:middle
既简单又强大

00:04:20.565 --> 00:04:21.966 A:middle
为各位的 App 量身打造

00:04:22.546 --> 00:04:23.996 A:middle
Create ML 运用了

00:04:23.996 --> 00:04:27.146 A:middle
Apple 核心技术

00:04:27.146 --> 00:04:29.566 A:middle
在你的 Mac 上就能使用

00:04:31.156 --> 00:04:32.876 A:middle
今年 目前为止

00:04:32.876 --> 00:04:34.336 A:middle
我们的重点是

00:04:34.336 --> 00:04:35.036 A:middle
三个非常重要的用例

00:04:35.416 --> 00:04:38.696 A:middle
第一个是图像

00:04:38.696 --> 00:04:40.946 A:middle
第二个是文本

00:04:41.096 --> 00:04:41.646 A:middle
第三个是表格数据

00:04:42.886 --> 00:04:45.226 A:middle
我们认为这三个用例

00:04:45.226 --> 00:04:47.346 A:middle
对大家是最有用的

00:04:47.606 --> 00:04:50.946 A:middle
你可以自定义

00:04:50.946 --> 00:04:52.206 A:middle
图像分类器

00:04:52.676 --> 00:04:54.426 A:middle
这需要你自己创建

00:04:54.426 --> 00:04:55.696 A:middle
图像分类器

00:04:55.696 --> 00:04:57.606 A:middle
对你产品列表中的产品

00:04:57.636 --> 00:04:58.316 A:middle
完成正确识别

00:04:59.536 --> 00:05:00.846 A:middle
你也可以

00:04:59.536 --> 00:05:00.846 A:middle
你也可以

00:05:00.986 --> 00:05:02.586 A:middle
做文本分类器

00:05:02.586 --> 00:05:04.266 A:middle
然后自己做情感分析

00:05:04.266 --> 00:05:05.766 A:middle
话题分析 或领域分析

00:05:06.456 --> 00:05:09.616 A:middle
你还可以

00:05:09.656 --> 00:05:12.636 A:middle
对列表数据做

00:05:12.636 --> 00:05:13.246 A:middle
经典回归及分类

00:05:13.626 --> 00:05:15.316 A:middle
举个例子 你可能想

00:05:15.316 --> 00:05:16.726 A:middle
根据红酒的化学成分

00:05:16.726 --> 00:05:18.916 A:middle
预测红酒品质

00:05:19.746 --> 00:05:21.066 A:middle
这样的例子数不胜数

00:05:21.066 --> 00:05:23.286 A:middle
在接下来的三十分钟里

00:05:23.286 --> 00:05:24.966 A:middle
我们来详细探讨一下

00:05:24.966 --> 00:05:25.216 A:middle
这个状况

00:05:27.976 --> 00:05:30.216 A:middle
在我们开始前

00:05:30.216 --> 00:05:31.656 A:middle
我们先看一下普通的工作流程

00:05:31.656 --> 00:05:35.246 A:middle
假如你想

00:05:35.576 --> 00:05:37.526 A:middle
在你的 App 中

00:05:37.526 --> 00:05:39.726 A:middle
添加一个新的功能

00:05:39.726 --> 00:05:40.826 A:middle
首先确保机器学习

00:05:40.876 --> 00:05:41.606 A:middle
是正确的选择

00:05:41.866 --> 00:05:42.986 A:middle
不要盲目地

00:05:42.986 --> 00:05:43.676 A:middle
使用机器学习

00:05:44.056 --> 00:05:45.156 A:middle
确保机器学习

00:05:45.156 --> 00:05:46.496 A:middle
是适合你的

00:05:46.496 --> 00:05:47.996 A:middle
然后明确

00:05:49.696 --> 00:05:49.926 A:middle
你要解决的问题

00:05:50.076 --> 00:05:52.006 A:middle
第二步是收集数据

00:05:53.326 --> 00:05:55.446 A:middle
要保证你的数据可以反映

00:05:55.446 --> 00:05:57.766 A:middle
你 App 的真实使用情况

00:05:58.566 --> 00:05:59.686 A:middle
例如 如果你在

00:05:59.686 --> 00:06:01.916 A:middle
制作一个图像分类器

00:05:59.686 --> 00:06:01.916 A:middle
制作一个图像分类器

00:06:02.546 --> 00:06:04.066 A:middle
用户会在 iPhone 上

00:06:04.066 --> 00:06:06.486 A:middle
使用你的 App

00:06:06.486 --> 00:06:07.946 A:middle
那你就需要收集

00:06:07.946 --> 00:06:08.236 A:middle
iPhone 中的照片

00:06:08.676 --> 00:06:10.246 A:middle
不要收集太多

00:06:10.366 --> 00:06:12.566 A:middle
屏幕截图 主要还是

00:06:13.106 --> 00:06:13.326 A:middle
iPhone 的照片

00:06:14.536 --> 00:06:17.606 A:middle
下一步是训练模型

00:06:18.396 --> 00:06:21.276 A:middle
最后一个重要步骤是

00:06:21.276 --> 00:06:22.756 A:middle
对你的模型进行评估

00:06:23.366 --> 00:06:25.686 A:middle
模型评估需要用

00:06:25.686 --> 00:06:27.996 A:middle
一组不一样的数据来检验

00:06:29.286 --> 00:06:31.556 A:middle
如果你觉得满意

00:06:31.606 --> 00:06:32.376 A:middle
就可以导出模型

00:06:33.726 --> 00:06:35.416 A:middle
不过我们假设结果

00:06:35.416 --> 00:06:36.216 A:middle
并不令人满意

00:06:36.216 --> 00:06:37.246 A:middle
你要不就用不同的参数

00:06:37.246 --> 00:06:39.416 A:middle
重新训练模型

00:06:39.686 --> 00:06:41.676 A:middle
要不就收集更多数据

00:06:43.456 --> 00:06:45.356 A:middle
Create ML 在工作流程的

00:06:45.356 --> 00:06:47.736 A:middle
四个阶段

00:06:47.736 --> 00:06:48.176 A:middle
都能给你提供帮助

00:06:48.796 --> 00:06:52.886 A:middle
我们有强大的

00:06:52.886 --> 00:06:55.816 A:middle
内置数据版工具 数据源和数据表

00:06:55.816 --> 00:06:57.196 A:middle
那么接下来

00:06:57.196 --> 00:06:58.036 A:middle
我会给大家介绍

00:06:58.466 --> 00:07:01.546 A:middle
你只需一行代码

00:06:58.466 --> 00:07:01.546 A:middle
你只需一行代码

00:07:01.546 --> 00:07:03.196 A:middle
就可以训练你的机器学习模型

00:07:04.416 --> 00:07:06.196 A:middle
训练过程会根据你的硬件

00:07:06.196 --> 00:07:07.386 A:middle
做最优化处理

00:07:08.096 --> 00:07:11.796 A:middle
Create ML 还有内置评估标准

00:07:11.796 --> 00:07:12.976 A:middle
这样你就不用

00:07:12.976 --> 00:07:14.236 A:middle
自己写精确率 召回率

00:07:14.236 --> 00:07:16.316 A:middle
和混淆矩阵的计算了

00:07:16.646 --> 00:07:19.926 A:middle
用现成的就行

00:07:19.926 --> 00:07:22.376 A:middle
最后 你对结果满意了

00:07:22.376 --> 00:07:22.716 A:middle
导出模型即可

00:07:23.366 --> 00:07:25.936 A:middle
现在我们深入研究一下

00:07:25.936 --> 00:07:28.506 A:middle
三个用例

00:07:29.006 --> 00:07:32.646 A:middle
图像 文本 和列表数据

00:07:32.986 --> 00:07:34.466 A:middle
首先是图像

00:07:34.466 --> 00:07:36.056 A:middle
下面有请 Lizi Ottens 上台

00:07:36.056 --> 00:07:38.036 A:middle
她是机器学习团队的

00:07:38.036 --> 00:07:38.766 A:middle
一名高级工程师

00:07:38.926 --> 00:07:39.266 A:middle
谢谢大家

00:07:40.516 --> 00:07:44.996 A:middle
［ 掌声 ］

00:07:45.496 --> 00:07:49.516 A:middle
&gt;&gt; 谢谢你 Gaurav

00:07:50.106 --> 00:07:51.716 A:middle
基于图像的功能

00:07:51.716 --> 00:07:53.866 A:middle
是 App 功能中最强大

00:07:53.866 --> 00:07:56.806 A:middle
也最具交互性的功能之一

00:07:57.526 --> 00:07:59.346 A:middle
所以我们今天来看一下

00:07:59.346 --> 00:08:00.886 A:middle
如何训练自定义的

00:07:59.346 --> 00:08:00.886 A:middle
如何训练自定义的

00:08:00.886 --> 00:08:02.156 A:middle
图像分类模型

00:08:03.316 --> 00:08:04.686 A:middle
图像分类是

00:08:04.686 --> 00:08:06.626 A:middle
在一组标签中

00:08:06.626 --> 00:08:08.546 A:middle
找出你想要给某张图片

00:08:08.546 --> 00:08:10.336 A:middle
添加的标签

00:08:11.646 --> 00:08:12.486 A:middle
根据训练数据的不同

00:08:12.486 --> 00:08:14.216 A:middle
你可以将目标定为

00:08:14.216 --> 00:08:16.676 A:middle
在 App 中实现

00:08:16.676 --> 00:08:18.666 A:middle
特定领域的用例

00:08:19.346 --> 00:08:21.876 A:middle
我们的第一步是收集训练数据

00:08:23.826 --> 00:08:25.286 A:middle
让我们来看一个

00:08:25.536 --> 00:08:28.286 A:middle
水果分类器是如何成型的

00:08:29.596 --> 00:08:31.756 A:middle
首先 你需要收集很多

00:08:31.756 --> 00:08:33.306 A:middle
不同类型的图像

00:08:33.306 --> 00:08:34.756 A:middle
这些图像要与你想得到的

00:08:34.756 --> 00:08:36.296 A:middle
最终结果保持一致

00:08:36.296 --> 00:08:37.796 A:middle
然后给图像添加标签

00:08:37.796 --> 00:08:38.726 A:middle
你可以先做一个图集

00:08:38.726 --> 00:08:41.775 A:middle
图集的字符串标签

00:08:42.066 --> 00:08:43.726 A:middle
要与图集中的图像保持一致

00:08:44.376 --> 00:08:46.466 A:middle
或者我们注意到

00:08:46.506 --> 00:08:48.226 A:middle
很多热门的数据组

00:08:48.316 --> 00:08:49.636 A:middle
是通过分层目录结构整理的

00:08:49.636 --> 00:08:51.706 A:middle
也就是说 图像的标签

00:08:52.356 --> 00:08:53.726 A:middle
就是图片文件夹的名字

00:08:53.726 --> 00:08:55.006 A:middle
文件夹中包含所有相关图片

00:08:56.726 --> 00:08:57.556 A:middle
还有一些其他数据源

00:08:57.806 --> 00:09:00.116 A:middle
比如 在单个文件夹里

00:08:57.806 --> 00:09:00.116 A:middle
比如 在单个文件夹里

00:09:00.286 --> 00:09:01.836 A:middle
图片标签被添加到文件名称中

00:09:02.296 --> 00:09:04.186 A:middle
Create ML 的接口

00:09:04.186 --> 00:09:05.876 A:middle
便于提取

00:09:06.156 --> 00:09:06.776 A:middle
这些不同结构

00:09:09.126 --> 00:09:11.256 A:middle
下面是比较复杂的部分

00:09:11.396 --> 00:09:12.246 A:middle
模型训练

00:09:12.686 --> 00:09:14.756 A:middle
准备好数据后

00:09:14.806 --> 00:09:15.596 A:middle
就要训练模型了

00:09:17.036 --> 00:09:18.946 A:middle
你可以通过

00:09:19.046 --> 00:09:20.576 A:middle
输入的图像

00:09:20.646 --> 00:09:23.176 A:middle
从零开始 训练一个复杂的模型

00:09:23.936 --> 00:09:26.326 A:middle
这时你需要大量的标签数据

00:09:26.976 --> 00:09:28.546 A:middle
你还需要大量的计算

00:09:28.546 --> 00:09:29.446 A:middle
和很好的耐心

00:09:30.396 --> 00:09:31.626 A:middle
在机器学习领域

00:09:31.696 --> 00:09:33.376 A:middle
另一个比较成功的技术

00:09:33.376 --> 00:09:34.086 A:middle
就是迁移学习

00:09:34.966 --> 00:09:36.936 A:middle
由于 Apple 在训练

00:09:36.936 --> 00:09:38.796 A:middle
复杂模型上

00:09:38.906 --> 00:09:40.236 A:middle
有丰富的经验

00:09:40.236 --> 00:09:41.386 A:middle
操作系统中

00:09:41.426 --> 00:09:43.036 A:middle
已经包含一个

00:09:43.036 --> 00:09:43.826 A:middle
你可以利用的模型了

00:09:44.336 --> 00:09:46.056 A:middle
我们要做的是

00:09:46.056 --> 00:09:47.616 A:middle
将迁移学习用于

00:09:47.686 --> 00:09:49.346 A:middle
操作系统中的模型

00:09:49.346 --> 00:09:50.806 A:middle
然后对其进行补充

00:09:51.256 --> 00:09:52.836 A:middle
用你准备的数据

00:09:53.166 --> 00:09:55.046 A:middle
重新训练最后几个层次

00:09:55.046 --> 00:09:57.126 A:middle
这样你就不用收集几百万张图片了

00:09:57.476 --> 00:09:59.736 A:middle
只需用你能收集到的数据

00:09:59.936 --> 00:10:01.446 A:middle
就可以训练出一个不错的图像分类器

00:09:59.936 --> 00:10:01.446 A:middle
就可以训练出一个不错的图像分类器

00:10:03.576 --> 00:10:05.656 A:middle
这可以节省很多训练时间

00:10:06.176 --> 00:10:07.306 A:middle
我们看到很多开发人员

00:10:07.346 --> 00:10:08.936 A:middle
一开始花费数小时训练模型

00:10:09.596 --> 00:10:12.996 A:middle
后来逐渐减少到几分钟

00:10:12.996 --> 00:10:14.576 A:middle
只需用几千张图像

00:10:15.056 --> 00:10:16.756 A:middle
或更小的数据组就可以

00:10:16.826 --> 00:10:17.166 A:middle
有些甚至几秒就能完成

00:10:19.886 --> 00:10:21.126 A:middle
这也缩减了模型大小

00:10:21.296 --> 00:10:23.026 A:middle
从几百 MB

00:10:23.026 --> 00:10:26.756 A:middle
缩减至几 MB

00:10:26.756 --> 00:10:28.426 A:middle
只需几千张图片

00:10:28.426 --> 00:10:28.896 A:middle
小的甚至有几 KB 的

00:10:32.076 --> 00:10:34.416 A:middle
Create ML 的目标在于

00:10:34.416 --> 00:10:35.966 A:middle
简化模型训练

00:10:35.966 --> 00:10:37.646 A:middle
让机器学习变得简单易用

00:10:38.286 --> 00:10:39.786 A:middle
为了证明这一点

00:10:39.786 --> 00:10:40.396 A:middle
我们来看一个例子

00:10:47.396 --> 00:10:49.356 A:middle
首先 为了发现问题

00:10:49.446 --> 00:10:51.066 A:middle
我运行了一个 App

00:10:51.126 --> 00:10:52.546 A:middle
而这个 App

00:10:52.626 --> 00:10:54.286 A:middle
采用的是行业现有的

00:10:54.286 --> 00:10:55.166 A:middle
一个图像分类模型

00:10:56.326 --> 00:10:57.766 A:middle
这个模型是挺大的

00:10:57.766 --> 00:10:59.446 A:middle
在 App 中有 100 MB

00:11:00.676 --> 00:11:03.066 A:middle
我们运行 App

00:11:03.116 --> 00:11:07.016 A:middle
可以得到一些水果的图片

00:11:07.016 --> 00:11:07.756 A:middle
但是这不是我想要的结果

00:11:08.626 --> 00:11:10.256 A:middle
如果我们能将

00:11:11.356 --> 00:11:13.316 A:middle
这些特例分类就更棒了

00:11:14.376 --> 00:11:15.796 A:middle
我们可以

00:11:15.886 --> 00:11:19.346 A:middle
新建一个 Playground

00:11:19.346 --> 00:11:21.536 A:middle
输入 CreateMLUI

00:11:21.536 --> 00:11:24.166 A:middle
我借助 UI 给大家演示

00:11:24.166 --> 00:11:25.016 A:middle
如何操作

00:11:26.166 --> 00:11:27.276 A:middle
我们定义一个创建器

00:11:28.796 --> 00:11:29.576 A:middle
设为启动

00:11:29.576 --> 00:11:31.226 A:middle
然后启用拖拽式训练

00:11:31.276 --> 00:11:32.766 A:middle
我们可以

00:11:32.766 --> 00:11:34.186 A:middle
实时展示创建器

00:11:38.426 --> 00:11:40.696 A:middle
这会在实时视图中

00:11:40.696 --> 00:11:42.476 A:middle
出现拖拽添加图像的提示

00:11:42.646 --> 00:11:43.306 A:middle
添加后开始训练模型

00:11:44.886 --> 00:11:47.176 A:middle
我准备了一些

00:11:47.176 --> 00:11:50.676 A:middle
水果的图片 有蓝莓 还有其他的水果

00:11:51.746 --> 00:11:53.396 A:middle
你可以将图片拖进来

00:11:53.476 --> 00:11:54.626 A:middle
然后你的 Mac

00:11:54.626 --> 00:11:56.366 A:middle
就自动开始训练

00:11:56.576 --> 00:11:57.056 A:middle
图像分类模型了

00:11:57.916 --> 00:11:59.616 A:middle
无论有多少类别

00:11:59.616 --> 00:12:03.516 A:middle
你的 GPU 都会加速训练进程

00:11:59.616 --> 00:12:03.516 A:middle
你的 GPU 都会加速训练进程

00:12:04.736 --> 00:12:06.036 A:middle
Create ML 会自动展示

00:12:06.036 --> 00:12:09.526 A:middle
训练数据组的准确率 然而

00:12:09.526 --> 00:12:11.316 A:middle
更有效的是

00:12:11.316 --> 00:12:13.076 A:middle
用模型未识别过的图像

00:12:13.076 --> 00:12:15.006 A:middle
来预测实际用例中

00:12:15.006 --> 00:12:17.076 A:middle
模型的性能

00:12:17.806 --> 00:12:20.696 A:middle
我将另一个包含新图片的文件夹拖入

00:12:21.786 --> 00:12:24.846 A:middle
现在 模型在评估新的水果图片

00:12:25.246 --> 00:12:26.896 A:middle
往下滑可以

00:12:26.896 --> 00:12:28.566 A:middle
看到图片的真实标签

00:12:28.606 --> 00:12:31.756 A:middle
和模型预测出的标签

00:12:34.376 --> 00:12:36.406 A:middle
如果你对准确度

00:12:36.406 --> 00:12:38.216 A:middle
还算满意

00:12:38.216 --> 00:12:39.976 A:middle
你就可以将模型

00:12:39.976 --> 00:12:40.406 A:middle
拖入你的 App

00:12:44.786 --> 00:12:45.496 A:middle
我加在了这里

00:12:45.806 --> 00:12:48.036 A:middle
我们现在再来看

00:12:48.076 --> 00:12:49.836 A:middle
这个模型只有 83 KB

00:12:50.396 --> 00:12:52.656 A:middle
比之前的模型

00:12:52.766 --> 00:12:53.206 A:middle
小了很多

00:12:54.516 --> 00:12:59.736 A:middle
［ 掌声 ］

00:13:00.236 --> 00:13:01.696 A:middle
我们可以删除

00:13:01.696 --> 00:13:02.686 A:middle
之前的旧模型

00:13:02.686 --> 00:13:04.786 A:middle
在视图控制器中

00:13:04.786 --> 00:13:06.286 A:middle
我们可以启用新的模型

00:13:06.986 --> 00:13:07.806 A:middle
ImageClassifier

00:13:10.536 --> 00:13:11.676 A:middle
我们重新运行 App

00:13:13.146 --> 00:13:17.866 A:middle
打开模拟器

00:13:17.866 --> 00:13:18.946 A:middle
看一下新模型

00:13:19.026 --> 00:13:19.356 A:middle
对于水果图片的识别

00:13:24.026 --> 00:13:25.436 A:middle
现在 App 可以

00:13:25.436 --> 00:13:27.366 A:middle
正确识别覆盆子了

00:13:27.366 --> 00:13:28.806 A:middle
因为我们训练了模型

00:13:29.276 --> 00:13:29.826 A:middle
对于覆盆子的识别

00:13:30.686 --> 00:13:31.736 A:middle
我们甚至可以看看

00:13:31.736 --> 00:13:32.986 A:middle
模型是否能区分草莓和覆盆子

00:13:33.396 --> 00:13:34.126 A:middle
现在能做到了

00:13:37.956 --> 00:13:39.236 A:middle
然而你还可以采用

00:13:39.286 --> 00:13:39.826 A:middle
其他的工作流程

00:13:40.636 --> 00:13:41.516 A:middle
或许你想

00:13:41.606 --> 00:13:43.356 A:middle
用编程控制

00:13:43.356 --> 00:13:44.056 A:middle
或自动训练

00:13:45.116 --> 00:13:46.486 A:middle
下面就来讲一下我们

00:13:46.486 --> 00:13:48.096 A:middle
如何在 Create ML 中实现

00:13:48.866 --> 00:13:54.246 A:middle
我们切换到新的 Playground

00:13:54.296 --> 00:13:57.316 A:middle
然后输入 CreateML

00:13:57.866 --> 00:13:59.566 A:middle
由于会用到 URL

00:13:59.566 --> 00:14:01.386 A:middle
我们也输入 Foundation

00:13:59.566 --> 00:14:01.386 A:middle
我们也输入 Foundation

00:14:03.686 --> 00:14:05.406 A:middle
因为桌面上

00:14:05.406 --> 00:14:06.826 A:middle
还有水果图片的文件夹

00:14:06.826 --> 00:14:09.776 A:middle
我们可以直接输入路径

00:14:09.776 --> 00:14:14.586 A:middle
测试用的图片

00:14:14.586 --> 00:14:15.466 A:middle
也是一样

00:14:15.466 --> 00:14:17.526 A:middle
下一步是

00:14:17.526 --> 00:14:18.636 A:middle
训练模型

00:14:19.426 --> 00:14:22.376 A:middle
我们可以定义一个模型

00:14:22.376 --> 00:14:23.716 A:middle
然后启动一个

00:14:23.716 --> 00:14:24.386 A:middle
图像分类器

00:14:25.206 --> 00:14:26.726 A:middle
现在 我们看一下

00:14:26.726 --> 00:14:28.166 A:middle
自动完成的情况

00:14:28.296 --> 00:14:29.826 A:middle
我们提供多个标签

00:14:29.826 --> 00:14:31.006 A:middle
和多张图像所匹配的

00:14:31.006 --> 00:14:33.016 A:middle
训练数据

00:14:33.086 --> 00:14:38.616 A:middle
或者使用数据源

00:14:38.666 --> 00:14:39.846 A:middle
甚至可以用

00:14:39.906 --> 00:14:40.046 A:middle
模型训练的参数

00:14:41.456 --> 00:14:42.466 A:middle
我们用一个数据源吧

00:14:42.466 --> 00:14:44.226 A:middle
我们用 labeledDirectories

00:14:44.296 --> 00:14:45.366 A:middle
因为我们的数据

00:14:45.366 --> 00:14:47.576 A:middle
是根据标签目录整理的

00:14:47.576 --> 00:14:48.436 A:middle
然后指定 trainingDirectory

00:14:50.526 --> 00:14:51.556 A:middle
由于我们在 Xcode Playground

00:14:51.556 --> 00:14:52.946 A:middle
新的 REPL 模式下

00:14:52.976 --> 00:14:54.226 A:middle
运行模型

00:14:54.226 --> 00:14:56.726 A:middle
我只需按 Shift + Enter

00:14:56.726 --> 00:14:57.796 A:middle
模型马上就开始训练了

00:14:59.216 --> 00:15:00.576 A:middle
你可以将控制台

00:14:59.216 --> 00:15:00.576 A:middle
你可以将控制台

00:15:01.556 --> 00:15:04.006 A:middle
打开查看

00:15:04.006 --> 00:15:06.036 A:middle
提取功能

00:15:06.036 --> 00:15:07.256 A:middle
并查看有多少重复

00:15:08.566 --> 00:15:10.126 A:middle
之后 你也可以

00:15:10.126 --> 00:15:12.066 A:middle
打开 Quick Look

00:15:12.066 --> 00:15:13.866 A:middle
查看模型的名称

00:15:13.866 --> 00:15:14.546 A:middle
和经过多少数据的训练

00:15:16.216 --> 00:15:19.286 A:middle
现在我们用测试数据

00:15:19.376 --> 00:15:19.686 A:middle
评估一下模型

00:15:20.666 --> 00:15:22.926 A:middle
我们可以

00:15:22.926 --> 00:15:25.116 A:middle
对另一个数据源

00:15:25.306 --> 00:15:26.626 A:middle
调用估算

00:15:26.626 --> 00:15:27.636 A:middle
因为整理方法与之前相同

00:15:28.036 --> 00:15:30.206 A:middle
明确测试数据的 URL

00:15:30.986 --> 00:15:33.246 A:middle
点击 Shift + Enter

00:15:33.246 --> 00:15:35.196 A:middle
模型就开始评估

00:15:35.196 --> 00:15:35.456 A:middle
测试图像了

00:15:36.196 --> 00:15:37.816 A:middle
评估结束后

00:15:37.816 --> 00:15:39.326 A:middle
我们可以查看 Quick Look

00:15:39.326 --> 00:15:40.956 A:middle
看评估了多少数据

00:15:40.956 --> 00:15:42.636 A:middle
文件夹中包含

00:15:42.726 --> 00:15:44.166 A:middle
多少类别

00:15:44.596 --> 00:15:45.366 A:middle
和模型准确率

00:15:46.886 --> 00:15:48.326 A:middle
如果多结果满意

00:15:48.376 --> 00:15:48.816 A:middle
就可以将模型导出

00:15:58.606 --> 00:15:59.716 A:middle
假设我想

00:15:59.826 --> 00:16:00.996 A:middle
导出到桌面

00:15:59.826 --> 00:16:00.996 A:middle
导出到桌面

00:16:01.206 --> 00:16:02.706 A:middle
并命名为 FruitClassifier

00:16:04.846 --> 00:16:06.296 A:middle
成功之后

00:16:06.296 --> 00:16:07.676 A:middle
桌面上就有这个新模型了

00:16:08.586 --> 00:16:09.876 A:middle
我们双击模型查看

00:16:09.876 --> 00:16:12.046 A:middle
可以发现

00:16:12.126 --> 00:16:12.466 A:middle
大小完全没变

00:16:12.696 --> 00:16:14.256 A:middle
还是 83 KB

00:16:17.036 --> 00:16:18.316 A:middle
此外 我们可以以同样的方式

00:16:18.376 --> 00:16:19.666 A:middle
将模型嵌入我们的 App

00:16:21.206 --> 00:16:21.596 A:middle
让我们重温一下

00:16:22.516 --> 00:16:31.506 A:middle
［ 掌声 ］

00:16:32.006 --> 00:16:33.536 A:middle
我们看到两种

00:16:33.536 --> 00:16:35.126 A:middle
在 Create ML 中

00:16:35.126 --> 00:16:35.516 A:middle
训练图像分类器模型的方式

00:16:36.276 --> 00:16:38.406 A:middle
一是借助 UI

00:16:38.406 --> 00:16:40.446 A:middle
拖拽训练数据

00:16:40.656 --> 00:16:41.626 A:middle
及评估数据

00:16:41.626 --> 00:16:43.956 A:middle
这样创建模型

00:16:43.956 --> 00:16:44.276 A:middle
非常简单

00:16:45.396 --> 00:16:47.866 A:middle
二是利用 Create ML 接口

00:16:48.676 --> 00:16:49.726 A:middle
看代码的话

00:16:49.726 --> 00:16:51.406 A:middle
我们会发现

00:16:51.406 --> 00:16:53.486 A:middle
我们首先需要输入 CreateML

00:16:54.456 --> 00:16:56.066 A:middle
下一步要明确

00:16:56.066 --> 00:16:57.486 A:middle
训练数据和测试数据的位置

00:16:57.486 --> 00:16:59.666 A:middle
然后通过明确

00:16:59.666 --> 00:17:01.396 A:middle
测试数据的结构

00:16:59.666 --> 00:17:01.396 A:middle
测试数据的结构

00:17:01.496 --> 00:17:02.926 A:middle
我们就可以开始训练模型了

00:17:04.205 --> 00:17:05.346 A:middle
然后我们用测试数据

00:17:05.415 --> 00:17:07.996 A:middle
评估模型

00:17:07.996 --> 00:17:08.306 A:middle
最后保存模型

00:17:11.576 --> 00:17:12.596 A:middle
如果想自动操作

00:17:13.006 --> 00:17:14.215 A:middle
你可以将这些

00:17:14.326 --> 00:17:16.106 A:middle
写成脚本

00:17:16.106 --> 00:17:17.836 A:middle
很多人用脚本保存操作过程

00:17:17.836 --> 00:17:19.215 A:middle
并且可以随时运行

00:17:21.746 --> 00:17:22.896 A:middle
你可以更改

00:17:22.896 --> 00:17:24.766 A:middle
文件的权限

00:17:24.866 --> 00:17:25.086 A:middle
然后就这样运行

00:17:26.056 --> 00:17:27.806 A:middle
对于其他的工作流程

00:17:27.806 --> 00:17:29.996 A:middle
你可以使用

00:17:29.996 --> 00:17:30.126 A:middle
Swift 命令行

00:17:30.126 --> 00:17:33.246 A:middle
今天我们了解了

00:17:33.246 --> 00:17:34.496 A:middle
如何通过不同的工作流程

00:17:35.016 --> 00:17:36.176 A:middle
训练图像分类模型

00:17:36.176 --> 00:17:38.496 A:middle
下面我要有请 Tao

00:17:38.496 --> 00:17:40.576 A:middle
来讲一下

00:17:40.576 --> 00:17:40.976 A:middle
自然语言处理

00:17:41.476 --> 00:17:41.766 A:middle
谢谢大家

00:17:42.516 --> 00:17:49.876 A:middle
［ 掌声 ］

00:17:50.376 --> 00:17:53.546 A:middle
&gt;&gt; 谢谢 Lizi

00:17:54.636 --> 00:17:55.336 A:middle
大家好

00:17:55.526 --> 00:17:56.466 A:middle
我的名字是 Tao

00:17:56.466 --> 00:17:58.416 A:middle
我是 Apple Core ML 团队的

00:17:58.686 --> 00:18:00.086 A:middle
一名工程师

00:17:58.686 --> 00:18:00.086 A:middle
一名工程师

00:18:00.996 --> 00:18:03.166 A:middle
刚刚大家看到了

00:18:03.166 --> 00:18:04.676 A:middle
我们用几行代码

00:18:04.676 --> 00:18:07.036 A:middle
就可以简单且直观地

00:18:07.036 --> 00:18:07.616 A:middle
训练图像分类器

00:18:08.246 --> 00:18:10.146 A:middle
自然语言也可以做到

00:18:10.146 --> 00:18:11.876 A:middle
下面由我

00:18:11.876 --> 00:18:12.406 A:middle
为大家讲解

00:18:12.956 --> 00:18:15.926 A:middle
今年发布的 Create ML 中

00:18:15.926 --> 00:18:17.476 A:middle
我们会支持两种自然语言处理

00:18:17.476 --> 00:18:19.826 A:middle
文本分类

00:18:19.826 --> 00:18:21.866 A:middle
和词语标注

00:18:23.096 --> 00:18:25.046 A:middle
今天 我会重点介绍

00:18:25.046 --> 00:18:26.516 A:middle
文本分类

00:18:26.836 --> 00:18:28.216 A:middle
想了解词语标注的更多细节

00:18:28.796 --> 00:18:30.136 A:middle
请各位参加明天

00:18:30.136 --> 00:18:31.796 A:middle
自然语言方面的会议

00:18:32.656 --> 00:18:34.446 A:middle
文本分类

00:18:34.696 --> 00:18:35.846 A:middle
在机器学习中

00:18:35.926 --> 00:18:36.606 A:middle
有几种 App

00:18:37.816 --> 00:18:39.886 A:middle
例如 情感分析

00:18:40.756 --> 00:18:42.526 A:middle
各位开发人员的热情

00:18:42.526 --> 00:18:43.516 A:middle
不可抵挡

00:18:43.826 --> 00:18:44.906 A:middle
这是正面信息

00:18:45.336 --> 00:18:46.776 A:middle
你希望你的 App 可以识别

00:18:47.516 --> 00:18:50.166 A:middle
［ 掌声 ］

00:18:50.666 --> 00:18:51.656 A:middle
垃圾邮件分析

00:18:52.336 --> 00:18:54.006 A:middle
如果你在邮箱中

00:18:54.006 --> 00:18:55.846 A:middle
看到这条信息

00:18:55.846 --> 00:18:57.616 A:middle
你知道这是垃圾邮件

00:18:57.766 --> 00:19:00.056 A:middle
所以你希望你的 App

00:18:57.766 --> 00:19:00.056 A:middle
所以你希望你的 App

00:19:00.526 --> 00:19:02.086 A:middle
也能识别

00:19:02.086 --> 00:19:03.076 A:middle
话题分析

00:19:03.736 --> 00:19:05.696 A:middle
勇士队翻盘

00:19:05.696 --> 00:19:06.636 A:middle
大获全胜

00:19:07.166 --> 00:19:08.686 A:middle
这是一条体育新闻

00:19:08.906 --> 00:19:10.406 A:middle
你希望你的 App

00:19:10.406 --> 00:19:11.186 A:middle
能划分类别

00:19:12.406 --> 00:19:14.876 A:middle
想要训练这样的分类器

00:19:14.876 --> 00:19:16.226 A:middle
你首先要收集

00:19:16.226 --> 00:19:17.436 A:middle
一些训练数据

00:19:18.326 --> 00:19:21.076 A:middle
Create ML 支持

00:19:21.076 --> 00:19:22.256 A:middle
多种整理训练

00:19:22.256 --> 00:19:23.686 A:middle
数据的方式

00:19:24.326 --> 00:19:26.776 A:middle
比如 标签目录

00:19:27.486 --> 00:19:28.796 A:middle
这里有两个文件夹

00:19:29.116 --> 00:19:30.856 A:middle
一个叫正面

00:19:30.856 --> 00:19:32.196 A:middle
一个叫负面

00:19:32.836 --> 00:19:34.526 A:middle
每个文件夹中

00:19:34.526 --> 00:19:37.026 A:middle
都有一些原始文本

00:19:37.026 --> 00:19:40.046 A:middle
它们的准确标签

00:19:40.046 --> 00:19:41.616 A:middle
就是文件夹的名字

00:19:43.096 --> 00:19:45.056 A:middle
或者你可以

00:19:45.056 --> 00:19:46.456 A:middle
在 CSV 文件中

00:19:46.456 --> 00:19:48.866 A:middle
记录原始文本

00:19:48.866 --> 00:19:50.766 A:middle
和准确标签

00:19:50.966 --> 00:19:51.916 A:middle
以逗号隔开

00:19:52.926 --> 00:19:54.926 A:middle
我们还支持 JSON 格式的

00:19:54.926 --> 00:19:56.856 A:middle
训练数据

00:19:57.236 --> 00:19:58.426 A:middle
我们刚提到

00:19:58.426 --> 00:20:00.326 A:middle
训练数据整理

00:19:58.426 --> 00:20:00.326 A:middle
训练数据整理

00:20:00.366 --> 00:20:02.056 A:middle
测试数据也可以用

00:20:02.056 --> 00:20:03.326 A:middle
同样的方式整理

00:20:06.376 --> 00:20:08.296 A:middle
训练数据和测试数据

00:20:08.296 --> 00:20:10.196 A:middle
都准备好后

00:20:10.196 --> 00:20:12.246 A:middle
训练文本分类器

00:20:12.246 --> 00:20:13.196 A:middle
还需要什么步骤呢

00:20:16.046 --> 00:20:17.806 A:middle
典型的工作流程

00:20:17.806 --> 00:20:18.576 A:middle
大概是这样

00:20:20.046 --> 00:20:21.396 A:middle
我们从原始文本入手

00:20:22.286 --> 00:20:24.206 A:middle
通过语言识别

00:20:24.206 --> 00:20:25.906 A:middle
确认原始文本的语言

00:20:27.286 --> 00:20:28.916 A:middle
将文本转换成标记

00:20:30.306 --> 00:20:31.756 A:middle
再将标记

00:20:31.756 --> 00:20:34.946 A:middle
转换成相应特征值

00:20:34.946 --> 00:20:36.216 A:middle
然后加入机器学习模型

00:20:36.216 --> 00:20:40.116 A:middle
输出一些预测值

00:20:40.116 --> 00:20:42.066 A:middle
再将预测值转成标签

00:20:42.066 --> 00:20:44.126 A:middle
然后你可以将标签

00:20:44.126 --> 00:20:46.256 A:middle
与准确标签对比

00:20:46.346 --> 00:20:49.206 A:middle
不断重复这样的过程

00:20:49.466 --> 00:20:51.926 A:middle
然而有了 Create ML

00:20:51.926 --> 00:20:54.666 A:middle
整个流程变得简单

00:20:54.666 --> 00:20:56.696 A:middle
这样你只需

00:20:56.696 --> 00:20:58.896 A:middle
准备原始文本

00:20:58.896 --> 00:21:01.226 A:middle
和准确标签

00:20:58.896 --> 00:21:01.226 A:middle
和准确标签

00:21:01.686 --> 00:21:02.566 A:middle
再训练模型就可以了

00:21:03.516 --> 00:21:09.356 A:middle
［ 掌声 ］

00:21:09.856 --> 00:21:11.686 A:middle
下面我来给大家展示

00:21:11.686 --> 00:21:13.256 A:middle
如何训练文本分类器

00:21:13.256 --> 00:21:15.406 A:middle
并对其加以使用

00:21:16.186 --> 00:21:18.396 A:middle
假如我们有一个简单的 App

00:21:18.536 --> 00:21:21.106 A:middle
叫做保持正面

00:21:21.196 --> 00:21:23.566 A:middle
App 的目的是为了激发

00:21:23.626 --> 00:21:24.016 A:middle
正面的帖子

00:21:24.656 --> 00:21:27.246 A:middle
如果有用户输入

00:21:27.246 --> 00:21:29.326 A:middle
我讨厌堵车

00:21:29.326 --> 00:21:31.506 A:middle
则帖子背景变为红色

00:21:31.506 --> 00:21:31.856 A:middle
发帖按钮变为不可点击

00:21:32.706 --> 00:21:37.206 A:middle
我喜欢淡定地在车流中

00:21:37.206 --> 00:21:40.006 A:middle
以每小时 10 公里的速度

00:21:40.736 --> 00:21:41.416 A:middle
向前行驶

00:21:41.626 --> 00:21:42.736 A:middle
这是个正面的帖子

00:21:42.946 --> 00:21:44.646 A:middle
我们鼓励这种帖子

00:21:46.116 --> 00:21:47.876 A:middle
如果每个人的手机上

00:21:47.876 --> 00:21:49.486 A:middle
都装了这个 App

00:21:49.836 --> 00:21:51.406 A:middle
互联网会变得多好呀

00:21:52.516 --> 00:21:56.396 A:middle
［掌声］

00:21:56.896 --> 00:21:58.336 A:middle
想要实现这一点

00:21:58.336 --> 00:21:59.296 A:middle
我来给大家做个演示

00:22:07.016 --> 00:22:09.966 A:middle
要训练这样一个分类器

00:22:09.966 --> 00:22:11.506 A:middle
我们首先要

00:22:11.506 --> 00:22:12.206 A:middle
收集训练数据

00:22:12.916 --> 00:22:17.736 A:middle
在桌面上 有一个训练数据文件夹

00:22:17.736 --> 00:22:19.436 A:middle
和一个测试数据文件夹

00:22:20.126 --> 00:22:21.616 A:middle
在训练文件里

00:22:21.616 --> 00:22:22.156 A:middle
我们有两个文件夹

00:22:22.316 --> 00:22:23.816 A:middle
一个命名为正面

00:22:23.816 --> 00:22:26.246 A:middle
另一个为负面

00:22:26.246 --> 00:22:28.106 A:middle
每个文件夹中

00:22:28.106 --> 00:22:28.446 A:middle
有一些文章

00:22:29.526 --> 00:22:31.486 A:middle
测试文件夹的整理方式

00:22:31.486 --> 00:22:32.686 A:middle
基本相同

00:22:33.436 --> 00:22:38.116 A:middle
首先 我需要

00:22:38.116 --> 00:22:41.196 A:middle
输入 CreateML

00:22:41.446 --> 00:22:43.846 A:middle
现在 我需要明确

00:22:43.846 --> 00:22:46.666 A:middle
训练数据的位置

00:22:47.436 --> 00:22:50.056 A:middle
我用的只是 URL

00:22:50.056 --> 00:22:53.056 A:middle
然后我就可以

00:22:53.056 --> 00:22:54.656 A:middle
用 Lizi 展示过的

00:22:54.656 --> 00:22:56.576 A:middle
标签目录

00:22:56.576 --> 00:22:57.206 A:middle
来训练我的模型了

00:22:57.556 --> 00:23:00.756 A:middle
看 训练开始了

00:22:57.556 --> 00:23:00.756 A:middle
看 训练开始了

00:23:02.406 --> 00:23:03.656 A:middle
从底下可以看到

00:23:03.656 --> 00:23:06.726 A:middle
在这里有进度报告

00:23:06.926 --> 00:23:10.276 A:middle
训练好像已经结束了

00:23:10.406 --> 00:23:12.566 A:middle
现在你可以

00:23:12.566 --> 00:23:13.696 A:middle
查看这个模型中

00:23:13.696 --> 00:23:14.256 A:middle
的一些表现数据

00:23:14.496 --> 00:23:19.226 A:middle
例如 model.trainingMetrics

00:23:19.226 --> 00:23:20.516 A:middle
在训练中

00:23:20.516 --> 00:23:23.226 A:middle
使用了 2000 多个数据

00:23:23.226 --> 00:23:24.786 A:middle
准确率 100%

00:23:25.286 --> 00:23:29.796 A:middle
那如果是新数据

00:23:29.846 --> 00:23:30.556 A:middle
这个模型表现会如何呢

00:23:31.446 --> 00:23:33.336 A:middle
我接下来要

00:23:33.366 --> 00:23:37.126 A:middle
定义测试数据

00:23:38.376 --> 00:23:42.086 A:middle
然后用测试数据

00:23:43.316 --> 00:23:43.456 A:middle
评估模型

00:23:43.626 --> 00:23:46.336 A:middle
可以看到

00:23:46.516 --> 00:23:49.036 A:middle
这里有 77 个测试数据

00:23:49.446 --> 00:23:52.966 A:middle
准确率 94%

00:23:52.966 --> 00:23:53.616 A:middle
效果非常好

00:23:54.556 --> 00:23:56.076 A:middle
为了更高的准确率

00:23:56.076 --> 00:23:57.296 A:middle
你们可能想多训练几次

00:23:57.296 --> 00:23:59.906 A:middle
但是这个数字

00:23:59.906 --> 00:24:01.936 A:middle
已经很好了

00:23:59.906 --> 00:24:01.936 A:middle
已经很好了

00:24:01.936 --> 00:24:04.276 A:middle
所以下面我想

00:24:04.276 --> 00:24:04.456 A:middle
试验一下

00:24:05.306 --> 00:24:07.686 A:middle
想要保存模型

00:24:07.686 --> 00:24:10.446 A:middle
我需要定义

00:24:10.446 --> 00:24:14.496 A:middle
保存路径

00:24:14.496 --> 00:24:16.176 A:middle
然后将模型导出到桌面

00:24:16.736 --> 00:24:19.086 A:middle
这看起来

00:24:19.246 --> 00:24:20.306 A:middle
模型已经保存了

00:24:22.236 --> 00:24:23.906 A:middle
现在切换到

00:24:23.906 --> 00:24:24.386 A:middle
我的 App 来

00:24:25.326 --> 00:24:27.266 A:middle
将模型拖拽过来

00:24:27.836 --> 00:24:29.396 A:middle
这就可以了

00:24:33.636 --> 00:24:36.756 A:middle
现在我就可以使用模型了

00:24:37.276 --> 00:24:39.686 A:middle
let model = TextClassifier

00:24:39.686 --> 00:24:42.566 A:middle
它应当会自动填充

00:24:43.426 --> 00:24:45.236 A:middle
然后我要插入一些

00:24:45.236 --> 00:24:47.236 A:middle
基本的推理代码

00:24:47.776 --> 00:24:50.716 A:middle
在这个推理代码中

00:24:50.716 --> 00:24:52.576 A:middle
我在第一行使用了

00:24:52.696 --> 00:24:54.826 A:middle
model.prediction

00:24:54.826 --> 00:24:55.386 A:middle
来获取预测

00:24:55.386 --> 00:24:56.806 A:middle
为了与 App

00:24:56.806 --> 00:24:58.586 A:middle
简洁的 UI 兼容

00:24:58.586 --> 00:25:00.456 A:middle
我将预测结果转换成两个值

00:24:58.586 --> 00:25:00.456 A:middle
我将预测结果转换成两个值

00:25:01.146 --> 00:25:03.566 A:middle
我们来试试

00:25:16.456 --> 00:25:18.026 A:middle
先试一下

00:25:18.026 --> 00:25:18.766 A:middle
已经展示过的例子

00:25:19.676 --> 00:25:23.566 A:middle
我讨厌堵车 负面情绪

00:25:24.666 --> 00:25:27.196 A:middle
我喜欢淡定地在车流中

00:25:27.936 --> 00:25:30.856 A:middle
以每小时 10 公里的速度

00:25:30.856 --> 00:25:32.666 A:middle
向前行驶

00:25:33.416 --> 00:25:35.866 A:middle
正面情绪 让我们尝试

00:25:35.866 --> 00:25:37.686 A:middle
一些不一样的

00:25:38.706 --> 00:25:41.486 A:middle
机器学习很难

00:25:41.686 --> 00:25:45.436 A:middle
Create ML 让机器学习变得简单

00:25:46.536 --> 00:25:47.076 A:middle
出现正面

00:25:48.516 --> 00:25:53.166 A:middle
［ 掌声 ］

00:25:53.666 --> 00:25:55.046 A:middle
这就是如何训练

00:25:55.046 --> 00:25:57.776 A:middle
你的文本分类器

00:25:57.776 --> 00:25:59.926 A:middle
将其拖入 App 中并使用

00:26:04.796 --> 00:26:06.406 A:middle
我们来回顾一下

00:26:07.836 --> 00:26:09.726 A:middle
训练这样一个分类器

00:26:09.866 --> 00:26:11.266 A:middle
首先你要

00:26:11.266 --> 00:26:12.246 A:middle
确定数据

00:26:13.216 --> 00:26:14.686 A:middle
训练数据

00:26:14.686 --> 00:26:18.136 A:middle
以及测试数据

00:26:18.136 --> 00:26:19.586 A:middle
然后用训练数据

00:26:19.586 --> 00:26:20.836 A:middle
创建模型

00:26:22.146 --> 00:26:24.646 A:middle
评估模型性能时

00:26:24.646 --> 00:26:26.246 A:middle
用测试数据

00:26:26.246 --> 00:26:26.466 A:middle
进行评估

00:26:27.786 --> 00:26:30.136 A:middle
最后 你只需用 write 接口

00:26:30.136 --> 00:26:32.716 A:middle
保存模型

00:26:32.716 --> 00:26:35.336 A:middle
就可以嵌入 App 中使用了

00:26:38.176 --> 00:26:41.586 A:middle
总的来说

00:26:41.586 --> 00:26:43.676 A:middle
只需几行代码

00:26:43.676 --> 00:26:45.986 A:middle
你就可以训练自己的

00:26:47.136 --> 00:26:48.526 A:middle
文本分类器 简单又直观

00:26:49.046 --> 00:26:52.196 A:middle
下面 我将话筒

00:26:52.196 --> 00:26:53.586 A:middle
转回给 Gaurav

00:26:53.586 --> 00:26:54.696 A:middle
由他来介绍列表数据

00:26:55.256 --> 00:26:55.626 A:middle
谢谢各位

00:26:56.516 --> 00:27:00.986 A:middle
［ 掌声 ］

00:26:56.516 --> 00:27:00.986 A:middle
［ 掌声 ］

00:27:01.486 --> 00:27:04.576 A:middle
&gt;&gt; 谢谢你 Tao

00:27:04.826 --> 00:27:07.136 A:middle
除了图像和文本

00:27:07.136 --> 00:27:08.776 A:middle
另一类在解决

00:27:08.776 --> 00:27:10.106 A:middle
机器学习问题时

00:27:10.106 --> 00:27:12.556 A:middle
很常见的数据来源

00:27:12.556 --> 00:27:12.706 A:middle
就是列表数据

00:27:13.986 --> 00:27:15.526 A:middle
列表数据是指

00:27:15.526 --> 00:27:17.446 A:middle
有特殊格式

00:27:17.446 --> 00:27:19.206 A:middle
或列表形式的数据

00:27:19.686 --> 00:27:21.716 A:middle
这类数据非常常见

00:27:22.766 --> 00:27:24.356 A:middle
举个例子 假如

00:27:24.356 --> 00:27:25.706 A:middle
你想利用床的数量

00:27:25.796 --> 00:27:27.326 A:middle
浴室数量

00:27:27.406 --> 00:27:28.716 A:middle
或建筑面积

00:27:28.786 --> 00:27:29.196 A:middle
预测房价

00:27:29.836 --> 00:27:31.366 A:middle
这样的数据通常

00:27:31.446 --> 00:27:32.446 A:middle
是以列表形式整理的

00:27:32.446 --> 00:27:35.656 A:middle
你想通过

00:27:35.656 --> 00:27:36.996 A:middle
红酒中的化学成分

00:27:36.996 --> 00:27:37.996 A:middle
预测红酒质量

00:27:38.316 --> 00:27:39.336 A:middle
你的数据有很大可能

00:27:39.336 --> 00:27:40.456 A:middle
是列表形式

00:27:41.066 --> 00:27:42.426 A:middle
或者一些简单的事

00:27:42.486 --> 00:27:44.116 A:middle
比如用酒吧减价时段

00:27:44.116 --> 00:27:46.396 A:middle
或酒吧消费水平

00:27:46.516 --> 00:27:48.516 A:middle
决定今晚去哪家酒吧

00:27:48.776 --> 00:27:50.066 A:middle
你的数据会是列表形式

00:27:51.696 --> 00:27:55.076 A:middle
要处理列表形式的数据

00:27:55.076 --> 00:27:56.756 A:middle
我们需要用到

00:27:56.936 --> 00:27:59.846 A:middle
一种新的数据结构

00:27:59.846 --> 00:28:01.686 A:middle
我们把它叫作 MLDataTable

00:27:59.846 --> 00:28:01.686 A:middle
我们把它叫作 MLDataTable

00:28:02.496 --> 00:28:04.876 A:middle
MLDataTable 是基于

00:28:04.876 --> 00:28:06.866 A:middle
Turi Create 的一项技术

00:28:06.866 --> 00:28:08.546 A:middle
我们明天会详细介绍

00:28:09.036 --> 00:28:11.136 A:middle
这些数据表格

00:28:11.136 --> 00:28:12.286 A:middle
有一点很有意思

00:28:13.876 --> 00:28:15.056 A:middle
每一行包含

00:28:15.056 --> 00:28:17.266 A:middle
一个例子的所有数据

00:28:17.356 --> 00:28:18.946 A:middle
这里二号房子

00:28:19.056 --> 00:28:21.236 A:middle
有四张床 三间浴室

00:28:21.316 --> 00:28:21.666 A:middle
价格是 50 万美元

00:28:22.336 --> 00:28:25.006 A:middle
每一列数据包含

00:28:25.006 --> 00:28:25.876 A:middle
一种特征

00:28:26.306 --> 00:28:27.636 A:middle
床的数量 浴室数量

00:28:28.636 --> 00:28:30.426 A:middle
建筑面积等等

00:28:30.966 --> 00:28:31.886 A:middle
都是特征

00:28:33.206 --> 00:28:34.966 A:middle
我们想预测的

00:28:35.016 --> 00:28:37.446 A:middle
是一列特殊的数据

00:28:37.586 --> 00:28:41.246 A:middle
那就是房屋价格

00:28:41.246 --> 00:28:43.286 A:middle
所以这一列是目标或反应变量

00:28:44.046 --> 00:28:45.546 A:middle
列表数据处理

00:28:45.546 --> 00:28:47.136 A:middle
其实是将目标变量

00:28:47.136 --> 00:28:49.456 A:middle
作为所有特征的函数

00:28:49.646 --> 00:28:51.846 A:middle
然后进行预测

00:28:51.896 --> 00:28:57.086 A:middle
那我们都支持

00:28:57.086 --> 00:28:57.756 A:middle
什么格式的列表数据呢

00:28:57.756 --> 00:28:59.926 A:middle
CSV JSON

00:28:59.926 --> 00:29:02.306 A:middle
还有代码

00:28:59.926 --> 00:29:02.306 A:middle
还有代码

00:29:02.786 --> 00:29:04.666 A:middle
我们再谈谈

00:29:05.436 --> 00:29:07.886 A:middle
MLDataTable

00:29:08.396 --> 00:29:11.946 A:middle
你只需用 CSV

00:29:11.946 --> 00:29:14.346 A:middle
数据可以轻松读取

00:29:14.826 --> 00:29:17.536 A:middle
更重要的是

00:29:17.536 --> 00:29:19.636 A:middle
你可以用下标标注

00:29:19.636 --> 00:29:20.806 A:middle
访问数据列

00:29:20.996 --> 00:29:22.426 A:middle
你只需调用

00:29:22.496 --> 00:29:23.926 A:middle
houseData[“price”]

00:29:23.926 --> 00:29:27.296 A:middle
就可以得到整列价格数据

00:29:27.476 --> 00:29:30.356 A:middle
你可以对两列数据

00:29:30.356 --> 00:29:31.886 A:middle
做加减乘除

00:29:32.686 --> 00:29:35.376 A:middle
实现该操作的语句

00:29:35.376 --> 00:29:36.696 A:middle
非常直观

00:29:36.696 --> 00:29:37.956 A:middle
你只需要

00:29:37.956 --> 00:29:39.296 A:middle
用 houseData[“price”]

00:29:39.296 --> 00:29:41.356 A:middle
除以 houseData[“sqft”]

00:29:41.356 --> 00:29:41.896 A:middle
就得到每平方英尺的价格

00:29:43.136 --> 00:29:45.196 A:middle
在后台运行中

00:29:45.226 --> 00:29:46.936 A:middle
计算通过

00:29:46.936 --> 00:29:49.106 A:middle
惰性求值

00:29:49.106 --> 00:29:50.196 A:middle
和矢量运算完成

00:29:50.956 --> 00:29:53.716 A:middle
还有一些其他

00:29:53.716 --> 00:29:54.576 A:middle
有意思的地方

00:29:54.686 --> 00:29:56.596 A:middle
例如你可以在训练中

00:29:56.596 --> 00:29:58.616 A:middle
切分数据表格

00:29:58.696 --> 00:29:59.946 A:middle
也可以过滤数据

00:30:00.746 --> 00:30:02.146 A:middle
举个例子

00:30:02.146 --> 00:30:04.406 A:middle
如果你只对大房子感兴趣

00:30:04.406 --> 00:30:05.956 A:middle
就可以创建一个指示变量

00:30:05.956 --> 00:30:06.896 A:middle
然后进行过滤

00:30:08.116 --> 00:30:09.846 A:middle
列表数据支持

00:30:09.846 --> 00:30:11.656 A:middle
很多种操作

00:30:11.656 --> 00:30:13.686 A:middle
希望大家可以在 Xcode

00:30:13.686 --> 00:30:14.626 A:middle
Playground 中多多尝试

00:30:14.766 --> 00:30:15.196 A:middle
非常有意思

00:30:15.196 --> 00:30:19.406 A:middle
现在 当你将数据

00:30:19.406 --> 00:30:20.706 A:middle
添进表格后

00:30:20.746 --> 00:30:21.426 A:middle
就可以开始训练了

00:30:22.846 --> 00:30:24.416 A:middle
Create ML 支持

00:30:24.416 --> 00:30:25.766 A:middle
很多种算法

00:30:25.766 --> 00:30:29.006 A:middle
例如 提升树算法

00:30:29.006 --> 00:30:30.146 A:middle
随机森林回归算法 等等

00:30:31.256 --> 00:30:33.526 A:middle
这些算法

00:30:33.526 --> 00:30:34.506 A:middle
有各自的级

00:30:34.506 --> 00:30:37.936 A:middle
想要训练模型

00:30:37.936 --> 00:30:39.816 A:middle
你只需要一行代码

00:30:40.246 --> 00:30:41.786 A:middle
就是说 你只要

00:30:41.826 --> 00:30:44.036 A:middle
指定目标

00:30:44.036 --> 00:30:45.466 A:middle
明确数据位置

00:30:45.466 --> 00:30:46.886 A:middle
指定算法 就可以了

00:30:47.456 --> 00:30:49.846 A:middle
在示例中 假设我们采用线性回归

00:30:49.846 --> 00:30:52.586 A:middle
或普通线性回归算法

00:30:52.586 --> 00:30:53.816 A:middle
你只需要

00:30:53.816 --> 00:30:56.676 A:middle
说明数据来自 houseData

00:30:56.676 --> 00:30:57.876 A:middle
以及数据列是 price

00:30:58.666 --> 00:31:03.016 A:middle
如果选择 BoostedTreeRegression

00:30:58.666 --> 00:31:03.016 A:middle
如果选择 BoostedTreeRegression

00:31:03.016 --> 00:31:04.746 A:middle
就将线性回归算法

00:31:04.746 --> 00:31:06.676 A:middle
替换掉就可以了

00:31:07.676 --> 00:31:09.946 A:middle
RandomForest 是这个

00:31:11.316 --> 00:31:14.346 A:middle
我们还提供

00:31:14.346 --> 00:31:16.186 A:middle
高度提炼过的 MLRegressor

00:31:16.526 --> 00:31:18.066 A:middle
它可以自动运行

00:31:18.066 --> 00:31:19.706 A:middle
所有的算法

00:31:19.706 --> 00:31:20.666 A:middle
并为你找出最合适的

00:31:21.516 --> 00:31:27.196 A:middle
［ 掌声 ］

00:31:27.696 --> 00:31:28.866 A:middle
这与我们的理念相吻合

00:31:28.866 --> 00:31:30.606 A:middle
我们希望大家

00:31:30.606 --> 00:31:30.876 A:middle
可以将精力用于其他任务

00:31:30.876 --> 00:31:32.476 A:middle
示例中的任务就是

00:31:32.536 --> 00:31:32.916 A:middle
预测房屋价格

00:31:32.916 --> 00:31:34.146 A:middle
你们不应当

00:31:34.516 --> 00:31:36.286 A:middle
花太多精力在算法的细节上

00:31:37.056 --> 00:31:38.776 A:middle
如果你是算法方面的专家

00:31:38.776 --> 00:31:40.876 A:middle
你也可以使用

00:31:40.876 --> 00:31:42.316 A:middle
BoostedTree

00:31:42.316 --> 00:31:43.506 A:middle
并自己修改其中的参数

00:31:48.156 --> 00:31:50.446 A:middle
一个完整的开发流程

00:31:50.446 --> 00:31:51.126 A:middle
就是这样的

00:31:52.016 --> 00:31:54.396 A:middle
跟图像和文本的

00:31:54.396 --> 00:31:56.196 A:middle
流程一模一样

00:31:56.586 --> 00:31:59.956 A:middle
首先是指定数据

00:32:00.276 --> 00:32:02.616 A:middle
第二点是

00:32:03.646 --> 00:32:04.096 A:middle
创建自己的模型

00:32:04.546 --> 00:32:05.966 A:middle
第三 评估模型

00:32:07.346 --> 00:32:09.126 A:middle
一旦你感到满意就

00:32:09.126 --> 00:32:09.386 A:middle
保存模型

00:32:10.536 --> 00:32:13.856 A:middle
列表数据 图像数据

00:32:14.086 --> 00:32:15.746 A:middle
文本数据的

00:32:15.806 --> 00:32:17.206 A:middle
流程都是一样的

00:32:19.876 --> 00:32:21.466 A:middle
现在让我们

00:32:21.466 --> 00:32:23.856 A:middle
快速回忆一下

00:32:23.946 --> 00:32:24.356 A:middle
本次会议的内容

00:32:27.676 --> 00:32:30.896 A:middle
Create ML 是我们机器学习框架的新工具

00:32:30.896 --> 00:32:33.156 A:middle
它简单易用

00:32:33.156 --> 00:32:34.876 A:middle
功能强大

00:32:34.876 --> 00:32:36.836 A:middle
它搭载了 Apple 的核心技术

00:32:36.836 --> 00:32:38.226 A:middle
你可以在 Mac 上用 Swift

00:32:38.226 --> 00:32:40.686 A:middle
完整运用机器学习

00:32:43.256 --> 00:32:45.116 A:middle
我们还说到

00:32:45.176 --> 00:32:46.036 A:middle
工作流程

00:32:46.976 --> 00:32:49.896 A:middle
你需要从功能入手

00:32:50.576 --> 00:32:52.366 A:middle
你想要实现什么样的功能

00:32:53.716 --> 00:32:55.196 A:middle
然后发现问题

00:32:55.946 --> 00:32:57.176 A:middle
收集数据

00:32:57.456 --> 00:33:00.456 A:middle
要保证你的数据可以反映

00:32:57.456 --> 00:33:00.456 A:middle
要保证你的数据可以反映

00:33:00.456 --> 00:33:02.776 A:middle
真实的使用场景

00:33:03.606 --> 00:33:05.156 A:middle
然后训练模型

00:33:05.536 --> 00:33:07.186 A:middle
最后评估模型

00:33:08.016 --> 00:33:10.406 A:middle
满意之后

00:33:10.476 --> 00:33:14.366 A:middle
保存模型

00:33:14.636 --> 00:33:17.046 A:middle
Create ML 基于 Swift 语言

00:33:17.406 --> 00:33:19.496 A:middle
在 macOS Mojave 中已经可以使用

00:33:22.836 --> 00:33:24.396 A:middle
你可以在 Xcode Playground

00:33:24.396 --> 00:33:28.206 A:middle
Swift Scripts

00:33:28.206 --> 00:33:29.076 A:middle
及 Swift REPL 中使用

00:33:29.076 --> 00:33:30.536 A:middle
大家多多尝试

00:33:32.326 --> 00:33:33.776 A:middle
我们很期待大家的反馈

00:33:33.776 --> 00:33:35.546 A:middle
我们会收集反馈

00:33:35.546 --> 00:33:37.946 A:middle
希望你们也同样

00:33:37.946 --> 00:33:38.956 A:middle
喜爱 Create ML

00:33:41.456 --> 00:33:43.146 A:middle
我们之后还有

00:33:43.146 --> 00:33:44.656 A:middle
机器学习的聚会

00:33:44.656 --> 00:33:45.146 A:middle
以及实验室议程

00:33:45.296 --> 00:33:46.946 A:middle
明天也有一个聚会

00:33:47.376 --> 00:33:49.046 A:middle
我们也会在实验室

00:33:49.046 --> 00:33:50.236 A:middle
希望届时能得到大家的反馈

00:33:51.346 --> 00:33:52.866 A:middle
在 WWDC 的 App 中

00:33:52.866 --> 00:33:53.986 A:middle
有相关的会议信息

00:33:54.146 --> 00:33:56.626 A:middle
明天上午有 Core ML 的会议

00:33:56.626 --> 00:34:00.346 A:middle
下午是机器学习的会议

00:33:56.626 --> 00:34:00.346 A:middle
下午是机器学习的会议

00:34:00.346 --> 00:34:03.516 A:middle
周四有一个

00:34:05.216 --> 00:34:05.606 A:middle
视觉内容的会议

00:34:05.606 --> 00:34:08.795 A:middle
在周三和周五 我们有实验室议程

00:34:09.466 --> 00:34:09.786 A:middle
感谢大家

00:34:10.516 --> 00:34:20.370 A:middle
［ 掌声 ］
