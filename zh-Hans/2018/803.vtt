WEBVTT

00:00:07.516 --> 00:00:15.500 A:middle
[ 音乐 ]

00:00:27.266 --> 00:00:27.956 A:middle
&gt;&gt; 大家好

00:00:28.516 --> 00:00:31.716 A:middle
[ 掌声 ]

00:00:32.216 --> 00:00:33.006 A:middle
谢谢

00:00:34.116 --> 00:00:35.296 A:middle
欢迎你们

00:00:36.326 --> 00:00:38.576 A:middle
欢迎来听

00:00:38.576 --> 00:00:39.216 A:middle
设计流畅界面

00:00:39.456 --> 00:00:40.456 A:middle
我是 Chan

00:00:40.766 --> 00:00:43.206 A:middle
Apple 人机界面团队的一员

00:00:43.856 --> 00:00:45.536 A:middle
最近我主要

00:00:45.536 --> 00:00:47.536 A:middle
在研究 iPhone X 的

00:00:47.536 --> 00:00:49.176 A:middle
流畅手势界面

00:00:49.926 --> 00:00:53.756 A:middle
我 Marcos 和 Nathan 三个人

00:00:53.796 --> 00:00:55.146 A:middle
想分享一些

00:00:55.146 --> 00:00:56.676 A:middle
关于我们对这个

00:00:57.336 --> 00:00:59.056 A:middle
以及过去类似项目的研究发现

00:01:00.026 --> 00:01:01.576 A:middle
那么我们经常

00:01:01.826 --> 00:01:04.536 A:middle
问自己的一个问题是

00:01:04.676 --> 00:01:07.156 A:middle
究竟什么才能使界面流畅

00:01:08.296 --> 00:01:09.826 A:middle
我们注意到事实上

00:01:09.986 --> 00:01:11.826 A:middle
每个人对它的描述都不同

00:01:12.276 --> 00:01:14.026 A:middle
大家都知道 有时

00:01:14.026 --> 00:01:15.226 A:middle
当人们真的使用了界面

00:01:15.226 --> 00:01:16.516 A:middle
当我们给他们一个样品试用

00:01:16.516 --> 00:01:17.296 A:middle
他们只有在拿到手中体验之后

00:01:17.356 --> 00:01:19.226 A:middle
有时候才会说

00:01:19.226 --> 00:01:19.636 A:middle
这感觉很快速

00:01:20.106 --> 00:01:21.356 A:middle
或者有时其他人会说

00:01:21.356 --> 00:01:22.496 A:middle
这感觉很平滑

00:01:22.896 --> 00:01:24.146 A:middle
当使用感真的很棒

00:01:24.146 --> 00:01:25.606 A:middle
有时他们甚至会说

00:01:25.606 --> 00:01:27.476 A:middle
这感觉很自然或者很神奇

00:01:28.426 --> 00:01:29.766 A:middle
但是说到底

00:01:30.476 --> 00:01:32.356 A:middle
它给人的感觉就是

00:01:32.356 --> 00:01:33.636 A:middle
你感觉到了

00:01:33.636 --> 00:01:34.656 A:middle
它就对了

00:01:35.176 --> 00:01:36.206 A:middle
它就是那样的一件东西

00:01:37.186 --> 00:01:38.526 A:middle
你可以有手势用户界面

00:01:38.806 --> 00:01:41.076 A:middle
我们已经看到市场上 有很多手势用户界面了

00:01:41.076 --> 00:01:42.866 A:middle
但如果处理不当

00:01:43.016 --> 00:01:44.526 A:middle
有些使用感觉可能

00:01:44.636 --> 00:01:45.426 A:middle
就是不对

00:01:45.896 --> 00:01:48.556 A:middle
而且你常常不能明确知道原因

00:01:49.496 --> 00:01:50.776 A:middle
大家知道

00:01:50.946 --> 00:01:51.956 A:middle
这不仅仅和帧率相关

00:01:52.066 --> 00:01:53.236 A:middle
每秒显示帧数为 60 时

00:01:53.236 --> 00:01:54.906 A:middle
你也可以缓慢进行操作

00:01:54.906 --> 00:01:57.746 A:middle
但那感觉就是不对

00:01:57.776 --> 00:01:59.626 A:middle
那究竟是什么 能给我们这种感觉呢

00:02:00.756 --> 00:02:02.916 A:middle
我想把这种感觉归结于

00:02:03.306 --> 00:02:04.676 A:middle
当这个工具就像我们

00:02:04.676 --> 00:02:06.176 A:middle
大脑的延伸的感觉

00:02:06.856 --> 00:02:08.506 A:middle
没错 大脑的延伸

00:02:09.256 --> 00:02:10.895 A:middle
那么为何这点如此重要呢

00:02:12.056 --> 00:02:13.526 A:middle
我们来看看

00:02:13.526 --> 00:02:15.226 A:middle
iPhone 是个工具 对吧

00:02:15.226 --> 00:02:17.486 A:middle
它是一个用来获取信息 并且进行沟通的

00:02:17.486 --> 00:02:18.396 A:middle
手持工具

00:02:18.916 --> 00:02:22.986 A:middle
通过融合完美的触觉和视觉

00:02:22.986 --> 00:02:23.396 A:middle
发挥作用

00:02:24.316 --> 00:02:25.536 A:middle
但如果我们仔细考虑

00:02:25.536 --> 00:02:27.846 A:middle
就会发现它实际上是千百年来

00:02:28.006 --> 00:02:31.056 A:middle
手持工具发展长河中的一部分

00:02:32.066 --> 00:02:33.286 A:middle
左面的是

00:02:33.286 --> 00:02:35.036 A:middle
150，000 年前

00:02:35.036 --> 00:02:37.846 A:middle
用于提取骨髓的工具

00:02:37.846 --> 00:02:39.226 A:middle
它拓展了手指的锋利程度

00:02:39.776 --> 00:02:41.586 A:middle
因此人类制造手持工具

00:02:41.586 --> 00:02:42.686 A:middle
已经有一段时间了

00:02:43.076 --> 00:02:45.276 A:middle
最令人惊奇的是

00:02:45.276 --> 00:02:46.326 A:middle
我们的双手已经进化

00:02:46.326 --> 00:02:49.666 A:middle
并且适应了我们制造的工具

00:02:49.946 --> 00:02:51.296 A:middle
我们进化出了一双富集肌肉

00:02:51.296 --> 00:02:52.726 A:middle
神经 血管的双手

00:02:52.726 --> 00:02:54.766 A:middle
能够完成

00:02:54.766 --> 00:02:56.136 A:middle
最精细的手势操作

00:02:56.136 --> 00:02:58.196 A:middle
以及作出最轻柔的触摸

00:02:59.306 --> 00:03:01.386 A:middle
因此我们已经完全

00:02:59.306 --> 00:03:01.386 A:middle
因此我们已经完全

00:03:01.536 --> 00:03:03.156 A:middle
适应了这个触觉世界

00:03:04.206 --> 00:03:06.106 A:middle
但是如果回顾电脑的历史

00:03:06.106 --> 00:03:09.536 A:middle
我们从人机之间的

00:03:09.536 --> 00:03:11.846 A:middle
多个抽象层起步

00:03:12.306 --> 00:03:13.636 A:middle
你要学习各种

00:03:13.636 --> 00:03:15.026 A:middle
复杂的操作

00:03:15.466 --> 00:03:17.956 A:middle
这将大多数人拒之门外

00:03:19.446 --> 00:03:21.756 A:middle
但是过去的几十年间

00:03:21.756 --> 00:03:24.596 A:middle
我们通过一对一的

00:03:24.596 --> 00:03:25.696 A:middle
间接操控装置

00:03:25.696 --> 00:03:27.316 A:middle
将这些抽象层

00:03:27.316 --> 00:03:28.436 A:middle
进行了剥离

00:03:28.436 --> 00:03:30.836 A:middle
每一步都剥离一点点

00:03:30.836 --> 00:03:33.946 A:middle
最终我们剥离了

00:03:34.076 --> 00:03:35.776 A:middle
所有那些抽象层

00:03:35.816 --> 00:03:38.736 A:middle
直接和内容进行交互

00:03:39.056 --> 00:03:40.916 A:middle
这对于我们就像是

00:03:40.916 --> 00:03:41.266 A:middle
魔法一般

00:03:41.266 --> 00:03:42.586 A:middle
这种感觉不再像

00:03:42.586 --> 00:03:44.906 A:middle
是一台电脑

00:03:45.456 --> 00:03:49.266 A:middle
而更像是自然世界的延伸

00:03:49.976 --> 00:03:51.916 A:middle
这意味着现在的界面

00:03:51.956 --> 00:03:53.976 A:middle
正在以有史以来

00:03:53.976 --> 00:03:55.606 A:middle
最古老的方式

00:03:55.606 --> 00:03:57.366 A:middle
和我们沟通

00:03:57.886 --> 00:03:59.286 A:middle
而且我们对此有

00:03:59.416 --> 00:04:00.136 A:middle
相当高的标准

00:03:59.416 --> 00:04:00.136 A:middle
相当高的标准

00:04:00.586 --> 00:04:01.796 A:middle
大家知道只要有一点点东西

00:04:01.796 --> 00:04:03.166 A:middle
感觉不对 这种幻想

00:04:03.166 --> 00:04:04.136 A:middle
就会被粉碎

00:04:04.136 --> 00:04:06.566 A:middle
但是如果感觉良好

00:04:06.566 --> 00:04:07.866 A:middle
这就会像是你的延伸

00:04:07.866 --> 00:04:10.056 A:middle
你身体的延伸

00:04:10.736 --> 00:04:13.066 A:middle
它会跟你的思想同步

00:04:13.066 --> 00:04:14.786 A:middle
使用起来会很愉悦

00:04:14.786 --> 00:04:16.356 A:middle
几乎没有阻力

00:04:16.356 --> 00:04:17.466 A:middle
甚至会非常愉悦

00:04:18.396 --> 00:04:19.966 A:middle
那么究竟是什么 给了我们这样的感觉

00:04:20.456 --> 00:04:21.805 A:middle
当感觉不好的时候

00:04:21.805 --> 00:04:22.866 A:middle
我们要怎么调整

00:04:23.586 --> 00:04:25.606 A:middle
这就是今天我要展示的内容

00:04:27.006 --> 00:04:28.016 A:middle
今天我们将谈到

00:04:28.096 --> 00:04:28.586 A:middle
四个部分

00:04:28.586 --> 00:04:30.736 A:middle
首先就是

00:04:31.126 --> 00:04:32.546 A:middle
制定一些原则

00:04:32.546 --> 00:04:34.106 A:middle
明确如何设计出

00:04:34.146 --> 00:04:36.636 A:middle
像是我们的延伸的界面

00:04:37.426 --> 00:04:39.516 A:middle
如何设计出

00:04:39.516 --> 00:04:40.776 A:middle
与我们身体运动和周边世界

00:04:40.776 --> 00:04:42.736 A:middle
相匹配的动作

00:04:43.716 --> 00:04:47.476 A:middle
设计出优雅 智能的手势

00:04:48.036 --> 00:04:50.206 A:middle
那么既然我们已经设计出了

00:04:50.206 --> 00:04:51.806 A:middle
这样东西 我们还将谈谈

00:04:51.806 --> 00:04:53.436 A:middle
如何在此基础上

00:04:53.436 --> 00:04:54.786 A:middle
打造天生适用于媒介的

00:04:54.866 --> 00:04:57.786 A:middle
就像媒介本身的互动

00:04:57.786 --> 00:05:00.246 A:middle
让我们开始吧

00:04:57.786 --> 00:05:00.246 A:middle
让我们开始吧

00:05:00.346 --> 00:05:02.556 A:middle
我们如何设计出

00:05:02.656 --> 00:05:04.316 A:middle
真正延伸大脑的界面呢

00:05:04.316 --> 00:05:05.046 A:middle
如何做到这一点呢

00:05:05.786 --> 00:05:07.996 A:middle
好吧 我们认为这就需要

00:05:08.546 --> 00:05:10.406 A:middle
将界面与我们思考和

00:05:10.406 --> 00:05:12.396 A:middle
运动的方式

00:05:12.396 --> 00:05:12.786 A:middle
相匹配

00:05:13.666 --> 00:05:14.916 A:middle
最重要的一点是

00:05:14.956 --> 00:05:17.626 A:middle
我们的思维会不断地

00:05:17.676 --> 00:05:19.386 A:middle
对变化 刺激和思维

00:05:19.386 --> 00:05:21.766 A:middle
作出反应 对吧

00:05:21.926 --> 00:05:22.856 A:middle
我们的思维和身体

00:05:23.006 --> 00:05:25.286 A:middle
一直处于这种动态变化的状态

00:05:25.746 --> 00:05:27.226 A:middle
因此并非界面需要

00:05:27.226 --> 00:05:28.746 A:middle
是流畅变化的

00:05:28.856 --> 00:05:30.236 A:middle
而是我们本身就是流畅变化的

00:05:30.236 --> 00:05:31.626 A:middle
我们的界面需要对此作出回应

00:05:33.046 --> 00:05:35.666 A:middle
所以界面始于响应

00:05:37.176 --> 00:05:38.986 A:middle
大家知道我们对工具的使用感受

00:05:39.036 --> 00:05:39.736 A:middle
取决于延迟

00:05:40.126 --> 00:05:41.236 A:middle
现实世界中

00:05:41.236 --> 00:05:44.336 A:middle
如果工具或其他任何东西

00:05:44.336 --> 00:05:45.436 A:middle
在使用时有响应延迟

00:05:45.436 --> 00:05:46.536 A:middle
那将是多么艰难

00:05:47.206 --> 00:05:48.516 A:middle
而且我们发现人们

00:05:48.736 --> 00:05:49.926 A:middle
对于延迟真的

00:05:49.926 --> 00:05:50.416 A:middle
非常非常敏感

00:05:50.766 --> 00:05:52.386 A:middle
大家知道吗

00:05:52.386 --> 00:05:54.876 A:middle
如果有时间间隔

00:05:54.876 --> 00:05:56.026 A:middle
那么它的响应表现

00:05:56.026 --> 00:05:57.466 A:middle
突然间就有点像

00:05:57.466 --> 00:05:58.106 A:middle
掉下了悬崖

00:05:58.106 --> 00:05:59.436 A:middle
有了额外的

00:05:59.436 --> 00:06:00.246 A:middle
精神负担

00:05:59.436 --> 00:06:00.246 A:middle
精神负担

00:06:00.546 --> 00:06:01.736 A:middle
感觉非常脱节

00:06:01.736 --> 00:06:02.776 A:middle
它不再像是

00:06:02.776 --> 00:06:03.966 A:middle
自我的延伸

00:06:04.756 --> 00:06:06.526 A:middle
这就是为什么我们如此努力试图

00:06:06.596 --> 00:06:07.126 A:middle
减少延迟感

00:06:07.716 --> 00:06:09.276 A:middle
实际上最新的 iPhone

00:06:09.276 --> 00:06:10.696 A:middle
能更快地响应

00:06:10.696 --> 00:06:12.286 A:middle
你的手指操作

00:06:12.286 --> 00:06:13.916 A:middle
因此我们才能实时

00:06:13.916 --> 00:06:15.396 A:middle
检测到你手势的所有

00:06:15.426 --> 00:06:15.876 A:middle
细微差别

00:06:16.696 --> 00:06:18.086 A:middle
我们对此十分关注

00:06:18.146 --> 00:06:19.486 A:middle
并且认为所有开发者

00:06:19.486 --> 00:06:19.826 A:middle
都应如此

00:06:19.826 --> 00:06:23.166 A:middle
这意味着寻找

00:06:23.296 --> 00:06:23.936 A:middle
各处的延迟

00:06:23.986 --> 00:06:25.016 A:middle
这并不局限于滑动手势

00:06:25.016 --> 00:06:26.306 A:middle
还包括轻敲 按压等

00:06:26.446 --> 00:06:28.066 A:middle
所有的界面交互操作

00:06:28.586 --> 00:06:30.606 A:middle
所有元素都应该及时响应

00:06:31.466 --> 00:06:32.486 A:middle
大家知道

00:06:32.486 --> 00:06:34.076 A:middle
在设计界面的过程中

00:06:34.076 --> 00:06:38.796 A:middle
非常容易出现延迟

00:06:38.986 --> 00:06:39.956 A:middle
大家懂吧

00:06:39.956 --> 00:06:42.236 A:middle
因此我们必须时刻警惕延迟

00:06:42.306 --> 00:06:44.136 A:middle
警惕所有那些

00:06:44.136 --> 00:06:46.046 A:middle
在界面中

00:06:46.046 --> 00:06:47.086 A:middle
可能出现的延迟

00:06:47.226 --> 00:06:49.026 A:middle
只有这样界面才能始终

00:06:49.096 --> 00:06:50.016 A:middle
及时响应

00:06:51.576 --> 00:06:52.406 A:middle
这就是响应

00:06:52.406 --> 00:06:54.906 A:middle
这个话题虽然简单

00:06:54.906 --> 00:06:57.326 A:middle
但却是让界面感觉充满活力和动感

00:06:58.556 --> 00:06:58.786 A:middle
的关键

00:06:59.046 --> 00:07:02.756 A:middle
接下来我们想考虑

00:06:59.046 --> 00:07:02.756 A:middle
接下来我们想考虑

00:07:02.756 --> 00:07:04.896 A:middle
持续的重新定向与中断

00:07:05.136 --> 00:07:05.866 A:middle
这一点很重要

00:07:06.706 --> 00:07:08.526 A:middle
那么我们的思维和身体

00:07:08.756 --> 00:07:09.876 A:middle
始终处于

00:07:09.876 --> 00:07:12.206 A:middle
对变化重新定向的状态

00:07:12.206 --> 00:07:12.736 A:middle
就像我们刚才谈到的那样

00:07:13.586 --> 00:07:14.916 A:middle
如果我在走向舞台

00:07:14.916 --> 00:07:16.496 A:middle
另一端的过程中意识到

00:07:16.496 --> 00:07:17.736 A:middle
我把东西落在了后面

00:07:17.766 --> 00:07:19.706 A:middle
我会马上掉头

00:07:19.706 --> 00:07:20.656 A:middle
而不用非得等到

00:07:20.656 --> 00:07:22.676 A:middle
走到舞台另一头

00:07:23.146 --> 00:07:23.936 A:middle
才那样做 对吧

00:07:24.336 --> 00:07:25.376 A:middle
因此我们的界面能

00:07:25.376 --> 00:07:26.896 A:middle
展示出这种持续

00:07:26.986 --> 00:07:28.666 A:middle
重新定向能力

00:07:28.666 --> 00:07:29.246 A:middle
十分重要

00:07:29.246 --> 00:07:31.486 A:middle
这种感觉与你紧密相连

00:07:32.276 --> 00:07:34.286 A:middle
这也是我们为什么要在 iPhone X 中

00:07:34.286 --> 00:07:36.416 A:middle
建立可重新定向界面的原因

00:07:37.336 --> 00:07:38.546 A:middle
那么 它究竟是什么呢

00:07:39.006 --> 00:07:41.206 A:middle
iPhone X 实际上

00:07:41.206 --> 00:07:43.416 A:middle
非常易于手势操作

00:07:43.416 --> 00:07:44.836 A:middle
你可以横向轻扫 切换 App

00:07:45.306 --> 00:07:46.646 A:middle
竖向轻扫 回到桌面

00:07:47.106 --> 00:07:48.586 A:middle
也可以将这两个方向的操作混合

00:07:48.586 --> 00:07:50.136 A:middle
因此你可以在返回桌面的过程中

00:07:50.196 --> 00:07:52.036 A:middle
看下多任务界面

00:07:52.036 --> 00:07:53.336 A:middle
来决定是否点进去

00:07:54.046 --> 00:07:55.306 A:middle
也可以进入多任务界面的时候

00:07:55.306 --> 00:07:57.426 A:middle
直接返回桌面

00:07:58.286 --> 00:07:59.926 A:middle
这些看起来不太重要

00:07:59.926 --> 00:08:01.596 A:middle
但如果我们没有提供这个功能

00:07:59.926 --> 00:08:01.596 A:middle
但如果我们没有提供这个功能

00:08:01.596 --> 00:08:01.916 A:middle
将会怎么样呢

00:08:02.026 --> 00:08:03.266 A:middle
如果它不支持重新定向 将会怎么样呢

00:08:03.266 --> 00:08:07.706 A:middle
假如你唯一能做的手势

00:08:07.706 --> 00:08:09.246 A:middle
就是横向轻扫

00:08:09.246 --> 00:08:11.226 A:middle
不同的 App

00:08:11.226 --> 00:08:12.666 A:middle
竖向轻扫返回桌面

00:08:12.666 --> 00:08:13.256 A:middle
仅仅只能这样

00:08:13.256 --> 00:08:14.316 A:middle
你无法进行

00:08:14.316 --> 00:08:15.416 A:middle
我刚才提到的

00:08:15.416 --> 00:08:15.776 A:middle
任何中间操作

00:08:16.636 --> 00:08:17.846 A:middle
这样的结果是

00:08:17.846 --> 00:08:19.406 A:middle
你将不得不

00:08:19.696 --> 00:08:21.136 A:middle
在进行手势操作前

00:08:21.136 --> 00:08:23.153 A:middle
想清楚 自己想做什么

00:08:23.986 --> 00:08:25.156 A:middle
那么这一系列事件

00:08:25.156 --> 00:08:26.276 A:middle
就会是先行操作 对吧

00:08:26.316 --> 00:08:27.276 A:middle
你需要思考

00:08:27.276 --> 00:08:28.106 A:middle
我要不要回到桌面

00:08:28.106 --> 00:08:29.396 A:middle
要不要进入多任务

00:08:29.826 --> 00:08:30.876 A:middle
然后做出决定

00:08:30.876 --> 00:08:32.306 A:middle
进行手势操作

00:08:32.306 --> 00:08:32.905 A:middle
然后松手

00:08:34.206 --> 00:08:35.876 A:middle
但很酷的是 如果它是

00:08:35.956 --> 00:08:37.876 A:middle
可重新定向的

00:08:37.876 --> 00:08:39.746 A:middle
你的思考和手势就可以并行

00:08:40.426 --> 00:08:42.535 A:middle
你可以边思考边操作

00:08:42.635 --> 00:08:47.386 A:middle
这样会比在做之前想好 快得多

00:08:47.386 --> 00:08:48.826 A:middle
因为这是一个

00:08:48.856 --> 00:08:52.326 A:middle
多方向手势操作

00:08:52.326 --> 00:08:53.676 A:middle
而不是独立操作

00:08:53.986 --> 00:08:55.976 A:middle
它是一个可以完成所有这些事情的手势

00:08:55.976 --> 00:08:57.306 A:middle
桌面 多任务 快速 App 切换

00:08:57.306 --> 00:08:58.266 A:middle
因此你不必把它当作

00:08:58.646 --> 00:09:00.166 A:middle
是一个独立的手势

00:08:58.646 --> 00:09:00.166 A:middle
是一个独立的手势

00:09:01.206 --> 00:09:03.796 A:middle
而且还能帮助你探索

00:09:03.916 --> 00:09:05.346 A:middle
因为你可以在现有手势的

00:09:05.346 --> 00:09:07.656 A:middle
基础上探索一个新的手势操作

00:09:08.546 --> 00:09:10.886 A:middle
并让你伴随思考

00:09:10.886 --> 00:09:12.706 A:middle
做出对应手势

00:09:13.256 --> 00:09:14.286 A:middle
那么最后一点 是什么意思呢

00:09:14.896 --> 00:09:16.566 A:middle
让我给你们看几个例子

00:09:16.826 --> 00:09:17.846 A:middle
我们已经放慢了

00:09:17.846 --> 00:09:19.196 A:middle
模拟中的动作

00:09:19.196 --> 00:09:20.626 A:middle
因此你们实际上能看到

00:09:20.626 --> 00:09:21.616 A:middle
一些我刚才所说的内容

00:09:22.506 --> 00:09:26.006 A:middle
我可以滑动到桌面

00:09:26.006 --> 00:09:27.566 A:middle
再滑动到下一页

00:09:27.566 --> 00:09:28.946 A:middle
或者在返回桌面的过程中

00:09:28.946 --> 00:09:29.176 A:middle
滑动切换主屏幕

00:09:29.176 --> 00:09:30.616 A:middle
一旦我把这两个手势内化了

00:09:30.616 --> 00:09:31.806 A:middle
就能把它们叠加在一起

00:09:33.186 --> 00:09:34.796 A:middle
还有一个例子是

00:09:34.796 --> 00:09:35.846 A:middle
我在启动 App 的过程中

00:09:35.846 --> 00:09:37.126 A:middle
突然意识到

00:09:37.126 --> 00:09:38.186 A:middle
我实际上要打开多任务界面

00:09:38.316 --> 00:09:39.806 A:middle
那么我就可以

00:09:39.806 --> 00:09:41.396 A:middle
在 App 启动的过程中

00:09:41.396 --> 00:09:42.256 A:middle
直接进入多任务界面

00:09:43.566 --> 00:09:47.296 A:middle
或者我打开了一个 App

00:09:47.296 --> 00:09:49.136 A:middle
但突然意识到点错了 App

00:09:49.846 --> 00:09:51.096 A:middle
我可以在打开过程中

00:09:51.246 --> 00:09:53.066 A:middle
直接将其关闭 返回桌面

00:09:53.756 --> 00:09:56.406 A:middle
还有一个例子是

00:09:56.406 --> 00:09:58.516 A:middle
假设我很匆忙

00:09:58.516 --> 00:10:00.166 A:middle
我可以在打开 App

00:09:58.516 --> 00:10:00.166 A:middle
我可以在打开 App

00:10:00.166 --> 00:10:01.976 A:middle
的过程中开始进行交互操作

00:10:03.436 --> 00:10:05.366 A:middle
这些事情看起来可能

00:10:05.366 --> 00:10:06.766 A:middle
没有那么重要

00:10:06.876 --> 00:10:08.256 A:middle
但我们发现如果想要界面

00:10:08.256 --> 00:10:09.786 A:middle
一直能及时响应

00:10:09.786 --> 00:10:11.426 A:middle
并理解你的意图

00:10:11.426 --> 00:10:11.576 A:middle
这非常重要

00:10:12.006 --> 00:10:13.566 A:middle
能让人感到灵活

00:10:13.566 --> 00:10:16.306 A:middle
而且这对于

00:10:16.306 --> 00:10:17.416 A:middle
你对界面的期待和理解

00:10:17.416 --> 00:10:18.776 A:middle
以及使用的舒适度

00:10:19.196 --> 00:10:20.396 A:middle
也非常重要

00:10:20.716 --> 00:10:22.766 A:middle
要明白 当你需要的时候

00:10:22.766 --> 00:10:23.436 A:middle
它必须永远能及时响应

00:10:23.966 --> 00:10:27.776 A:middle
这也适用于

00:10:27.776 --> 00:10:29.476 A:middle
动作的改变

00:10:29.756 --> 00:10:31.496 A:middle
不仅是交互的开始

00:10:31.496 --> 00:10:33.526 A:middle
还包括交互的中间过程

00:10:33.526 --> 00:10:34.106 A:middle
你也在改变

00:10:34.666 --> 00:10:37.196 A:middle
我们同样需要对中断

00:10:37.196 --> 00:10:37.486 A:middle
及时响应

00:10:38.046 --> 00:10:39.236 A:middle
一个好的案例是

00:10:39.236 --> 00:10:40.606 A:middle
iPhone X 的多任务界面触发机制

00:10:41.456 --> 00:10:42.936 A:middle
当你向上轻扫手指

00:10:42.936 --> 00:10:44.136 A:middle
至屏幕的一半并暂停

00:10:44.136 --> 00:10:45.506 A:middle
这就是暂停手势

00:10:45.506 --> 00:10:47.726 A:middle
那么我们需要弄明白

00:10:47.726 --> 00:10:50.896 A:middle
如何检测 这个运动中的变化

00:10:50.896 --> 00:10:52.166 A:middle
我们要如何做呢

00:10:52.166 --> 00:10:53.576 A:middle
如何检测这个动作中的变化

00:10:53.956 --> 00:10:55.036 A:middle
是否需要用到定时器

00:10:55.306 --> 00:10:56.586 A:middle
是否需要等到

00:10:56.586 --> 00:10:57.756 A:middle
手指降低到某个速度

00:10:57.756 --> 00:10:59.486 A:middle
并保持一段时间

00:10:59.536 --> 00:11:01.836 A:middle
然后 [ 音质不清晰 ] 才能进入

00:10:59.536 --> 00:11:01.836 A:middle
然后 [ 音质不清晰 ] 才能进入

00:11:01.836 --> 00:11:02.886 A:middle
多任务界面呢

00:11:02.886 --> 00:11:04.976 A:middle
事实证明这样太慢了

00:11:05.196 --> 00:11:06.636 A:middle
人们期待能立刻

00:11:06.636 --> 00:11:08.086 A:middle
进入多任务界面

00:11:08.786 --> 00:11:10.856 A:middle
那么我们就需要想办法

00:11:10.856 --> 00:11:13.986 A:middle
和他们响应得一样快

00:11:14.206 --> 00:11:15.116 A:middle
我们不需要关注

00:11:15.116 --> 00:11:16.376 A:middle
手指的加速度

00:11:17.266 --> 00:11:18.636 A:middle
实际上当你暂停时

00:11:18.636 --> 00:11:20.336 A:middle
你的手指滑动速度

00:11:20.336 --> 00:11:21.416 A:middle
会急剧提高

00:11:21.816 --> 00:11:23.056 A:middle
而且你暂停得越快

00:11:23.056 --> 00:11:25.226 A:middle
iPhone X 检测到的也就越快

00:11:25.776 --> 00:11:27.016 A:middle
因此这种响应运动变化的方式

00:11:27.016 --> 00:11:30.886 A:middle
其实和我们所知的一样快

00:11:30.886 --> 00:11:31.676 A:middle
而不是使用等待定时器的方式

00:11:33.006 --> 00:11:34.326 A:middle
这就是尽快响应

00:11:34.326 --> 00:11:35.666 A:middle
重新定向的

00:11:35.666 --> 00:11:37.006 A:middle
一个好案例

00:11:37.586 --> 00:11:42.436 A:middle
这就是中断和重新定向的概念

00:11:43.096 --> 00:11:44.426 A:middle
它们让界面和你

00:11:44.426 --> 00:11:46.246 A:middle
非常非常匹配

00:11:47.596 --> 00:11:50.576 A:middle
接下来我们将稍微谈谈

00:11:50.576 --> 00:11:52.096 A:middle
界面的构造

00:11:52.096 --> 00:11:52.976 A:middle
从概念上讲

00:11:53.716 --> 00:11:54.406 A:middle
就是你如何布局

00:11:55.696 --> 00:11:56.596 A:middle
我们认为当你布局的时候

00:11:56.596 --> 00:11:58.006 A:middle
必须保持

00:11:58.116 --> 00:11:59.846 A:middle
在移动中的

00:11:59.956 --> 00:12:00.246 A:middle
空间一致性

00:11:59.956 --> 00:12:00.246 A:middle
空间一致性

00:12:01.126 --> 00:12:01.686 A:middle
这是什么意思

00:12:02.526 --> 00:12:03.716 A:middle
这有点模仿了

00:12:03.766 --> 00:12:05.656 A:middle
现实生活中客体连续性记忆

00:12:05.806 --> 00:12:06.436 A:middle
的工作原理

00:12:07.116 --> 00:12:08.766 A:middle
所以在现实生活中我们会感受到

00:12:08.766 --> 00:12:09.756 A:middle
物体以对称路径的方式

00:12:09.866 --> 00:12:10.426 A:middle
出现和消失

00:12:11.866 --> 00:12:13.246 A:middle
假如某个事物以某种方式消失了

00:12:13.246 --> 00:12:15.556 A:middle
我们会期望它从出现的地方

00:12:15.556 --> 00:12:16.146 A:middle
再次显露 对吧

00:12:16.306 --> 00:12:18.056 A:middle
如果我从舞台的一侧消失

00:12:18.056 --> 00:12:20.006 A:middle
然后从舞台的另一侧出现

00:12:20.136 --> 00:12:22.496 A:middle
你们就会非常疑惑 对吗

00:12:22.846 --> 00:12:24.776 A:middle
因为这是不可能的

00:12:25.486 --> 00:12:27.256 A:middle
所以我们希望延续这种

00:12:27.736 --> 00:12:29.516 A:middle
现实世界中的

00:12:29.516 --> 00:12:31.246 A:middle
空间一致感

00:12:31.806 --> 00:12:34.776 A:middle
这也就意味着

00:12:34.776 --> 00:12:36.116 A:middle
在界面中如果某个元素

00:12:36.116 --> 00:12:37.186 A:middle
在你的视野中消失

00:12:37.186 --> 00:12:39.156 A:middle
然后再出现

00:12:39.156 --> 00:12:40.386 A:middle
它应该是以对称路径的方式进行

00:12:40.796 --> 00:12:42.006 A:middle
并拥有一致的

00:12:42.096 --> 00:12:44.836 A:middle
出现消失路径

00:12:44.836 --> 00:12:45.756 A:middle
比如

00:12:45.916 --> 00:12:47.246 A:middle
在 iOS 的导航中

00:12:47.246 --> 00:12:48.706 A:middle
如果我点击列表中的元素

00:12:48.706 --> 00:12:50.406 A:middle
它从屏幕右边滑入

00:12:51.196 --> 00:12:52.636 A:middle
当我点击返回按钮时

00:12:52.636 --> 00:12:53.866 A:middle
它将返回右侧

00:12:53.926 --> 00:12:55.656 A:middle
这就是对称式路径

00:12:55.656 --> 00:12:57.276 A:middle
两个状态下

00:12:57.276 --> 00:12:58.626 A:middle
每个元素都有一个存在的

00:12:58.716 --> 00:12:59.286 A:middle
固定区域

00:12:59.966 --> 00:13:01.646 A:middle
这也强化了手势

00:12:59.966 --> 00:13:01.646 A:middle
这也强化了手势

00:13:01.646 --> 00:13:03.336 A:middle
如果我将其滑回右侧

00:13:03.416 --> 00:13:04.576 A:middle
因为我知道

00:13:04.576 --> 00:13:05.586 A:middle
它属于那里

00:13:05.586 --> 00:13:05.786 A:middle
我就能这么做

00:13:05.786 --> 00:13:06.466 A:middle
这是可以预期的

00:13:07.426 --> 00:13:08.686 A:middle
如果我们不这么做

00:13:09.146 --> 00:13:10.236 A:middle
看这个例子

00:13:10.236 --> 00:13:11.816 A:middle
我轻敲后 页面从右侧滑入

00:13:11.816 --> 00:13:13.926 A:middle
然后我点击返回

00:13:13.926 --> 00:13:14.316 A:middle
它下移消失

00:13:14.316 --> 00:13:15.916 A:middle
这就会有种割裂感

00:13:15.916 --> 00:13:16.796 A:middle
并让人疑惑

00:13:17.476 --> 00:13:18.826 A:middle
就好像我正在把它

00:13:19.136 --> 00:13:19.576 A:middle
发送到哪里

00:13:19.576 --> 00:13:20.626 A:middle
事实上 如果我想传达

00:13:20.626 --> 00:13:21.736 A:middle
我正在把它发送到哪里

00:13:21.736 --> 00:13:22.746 A:middle
这就是我操作的方式

00:13:22.746 --> 00:13:23.616 A:middle
对吧

00:13:24.816 --> 00:13:26.496 A:middle
所以这就是

00:13:26.496 --> 00:13:27.246 A:middle
空间一致性

00:13:28.056 --> 00:13:29.396 A:middle
它让手势操作

00:13:29.396 --> 00:13:30.736 A:middle
与我们对物理世界空间

00:13:30.736 --> 00:13:33.796 A:middle
的理解相匹配

00:13:33.796 --> 00:13:37.906 A:middle
接下来是 暗示手势操作方向

00:13:38.796 --> 00:13:40.216 A:middle
大家知道 我们人类总是

00:13:40.306 --> 00:13:41.596 A:middle
会根据经验

00:13:41.596 --> 00:13:43.356 A:middle
来预测下一步

00:13:43.746 --> 00:13:44.906 A:middle
我们总是

00:13:44.906 --> 00:13:46.026 A:middle
通过世界中

00:13:46.026 --> 00:13:47.546 A:middle
万物的轨迹

00:13:47.546 --> 00:13:49.296 A:middle
来预测接下来的运动

00:13:50.316 --> 00:13:52.016 A:middle
所以我们认为界面中

00:13:52.046 --> 00:13:53.456 A:middle
引入预测

00:13:53.456 --> 00:13:53.906 A:middle
是非常好的

00:13:54.556 --> 00:13:56.246 A:middle
如果你有两个状态

00:13:56.966 --> 00:13:58.706 A:middle
初始态和终止态

00:13:59.336 --> 00:14:01.996 A:middle
当然你还有中间过渡

00:13:59.336 --> 00:14:01.996 A:middle
当然你还有中间过渡

00:14:01.996 --> 00:14:03.746 A:middle
物体需要在两种状态中

00:14:04.006 --> 00:14:05.586 A:middle
平滑转换

00:14:05.586 --> 00:14:07.176 A:middle
从初始态平滑过渡

00:14:07.176 --> 00:14:08.416 A:middle
到终止态

00:14:08.536 --> 00:14:10.086 A:middle
不管是通过

00:14:10.086 --> 00:14:11.396 A:middle
手势操作还是动效变化

00:14:12.666 --> 00:14:13.856 A:middle
一个很好的例子就是

00:14:13.856 --> 00:14:14.486 A:middle
控制中心

00:14:15.206 --> 00:14:16.476 A:middle
控制中心的模块

00:14:16.476 --> 00:14:17.516 A:middle
会根据你的

00:14:17.636 --> 00:14:19.286 A:middle
按下操作变大

00:14:19.516 --> 00:14:22.696 A:middle
并向你手指移动

00:14:22.696 --> 00:14:26.426 A:middle
最终 弹开

00:14:26.566 --> 00:14:27.596 A:middle
这就是暗示

00:14:28.216 --> 00:14:29.586 A:middle
它让手势操作充满预期

00:14:29.586 --> 00:14:33.626 A:middle
并可预测

00:14:33.626 --> 00:14:35.646 A:middle
接下来一个重要的原则是

00:14:35.646 --> 00:14:37.556 A:middle
触摸交互

00:14:37.606 --> 00:14:38.786 A:middle
轻量化

00:14:39.546 --> 00:14:40.526 A:middle
我想大家都知道

00:14:40.526 --> 00:14:41.836 A:middle
多点触控的轻盈

00:14:41.946 --> 00:14:43.686 A:middle
是其最被低估的一面

00:14:44.046 --> 00:14:46.386 A:middle
它可以检测到空气般的轻扫

00:14:46.386 --> 00:14:48.576 A:middle
滑动 轻敲等

00:14:48.576 --> 00:14:49.646 A:middle
我们习以为常的操作

00:14:49.646 --> 00:14:51.236 A:middle
这些操作是如此轻柔

00:14:51.736 --> 00:14:53.876 A:middle
但我们希望放大

00:14:53.876 --> 00:14:54.436 A:middle
它们的动作

00:14:54.926 --> 00:14:56.726 A:middle
我们希望在移动

00:14:56.726 --> 00:14:58.566 A:middle
或投掷某物的时候

00:14:58.566 --> 00:15:00.336 A:middle
让小的投入产生大的效果

00:14:58.566 --> 00:15:00.336 A:middle
让小的投入产生大的效果

00:15:00.336 --> 00:15:01.656 A:middle
从而产生

00:15:01.656 --> 00:15:03.066 A:middle
令人满意的感觉

00:15:03.096 --> 00:15:05.416 A:middle
那么这将如何应用到我们的

00:15:05.416 --> 00:15:06.006 A:middle
界面上呢

00:15:06.086 --> 00:15:07.816 A:middle
这就需要从短交互

00:15:07.876 --> 00:15:08.476 A:middle
开始说起

00:15:09.226 --> 00:15:11.016 A:middle
这是短小轻量的交互

00:15:11.856 --> 00:15:14.256 A:middle
我们运用了所有传感器

00:15:14.256 --> 00:15:16.586 A:middle
和技术来尽可能地理解

00:15:17.096 --> 00:15:18.956 A:middle
并建立手势操作的

00:15:18.956 --> 00:15:21.836 A:middle
能量和动量文档

00:15:23.306 --> 00:15:24.426 A:middle
运用一切已知信息

00:15:24.426 --> 00:15:26.256 A:middle
包括位置 速度

00:15:26.416 --> 00:15:30.566 A:middle
速率 力度来产生

00:15:30.566 --> 00:15:32.746 A:middle
这个手势的惯性文档

00:15:32.746 --> 00:15:34.506 A:middle
然后我们检测并

00:15:34.506 --> 00:15:37.986 A:middle
放大移动的效果

00:15:37.986 --> 00:15:39.556 A:middle
使其仍然感觉像是你自身的延伸

00:15:40.146 --> 00:15:41.696 A:middle
因此你通过一个轻量的交互

00:15:41.926 --> 00:15:43.666 A:middle
就可以获得满意的结果

00:15:45.156 --> 00:15:46.936 A:middle
例如在滚动页面

00:15:46.936 --> 00:15:47.876 A:middle
的过程中

00:15:47.876 --> 00:15:49.756 A:middle
你的手指实际上只停留在

00:15:49.836 --> 00:15:51.876 A:middle
屏幕上一小段时间

00:15:51.876 --> 00:15:53.496 A:middle
但系统能保留你所有的

00:15:53.576 --> 00:15:54.926 A:middle
能量和动量

00:15:54.986 --> 00:15:56.466 A:middle
并将其优雅地转入到

00:15:56.466 --> 00:15:57.066 A:middle
界面中

00:15:58.276 --> 00:15:59.506 A:middle
那么如果它不能这么做呢

00:16:00.566 --> 00:16:02.566 A:middle
如果没有这些相同的滑动

00:16:02.566 --> 00:16:03.526 A:middle
你将无法移动这么远的距离

00:16:04.416 --> 00:16:07.946 A:middle
而且为了滚动页面

00:16:07.946 --> 00:16:09.816 A:middle
你将不得不进行一些

00:16:09.946 --> 00:16:11.766 A:middle
需要更多手指运动的费劲的

00:16:11.766 --> 00:16:12.686 A:middle
滑动操作

00:16:12.686 --> 00:16:14.616 A:middle
使用的时候将会异常痛苦

00:16:15.816 --> 00:16:17.196 A:middle
另一个案例是

00:16:17.296 --> 00:16:18.326 A:middle
上滑返回桌面

00:16:19.076 --> 00:16:20.026 A:middle
你只需要在屏幕上

00:16:20.026 --> 00:16:22.026 A:middle
轻轻一滑

00:16:22.736 --> 00:16:26.016 A:middle
就会呈现出一个

00:16:26.016 --> 00:16:27.656 A:middle
流畅并且轻量的多点触控手势操作

00:16:27.686 --> 00:16:29.466 A:middle
感觉就像是

00:16:29.466 --> 00:16:30.706 A:middle
天生内置的

00:16:31.506 --> 00:16:32.726 A:middle
同时仅凭一个按钮

00:16:32.726 --> 00:16:33.976 A:middle
就能大量重复使用

00:16:33.976 --> 00:16:35.346 A:middle
你的肌肉信息

00:16:35.346 --> 00:16:36.676 A:middle
因为当你松手的时候

00:16:36.676 --> 00:16:37.686 A:middle
屏幕就会返回面板状态

00:16:38.306 --> 00:16:43.336 A:middle
不仅滑动

00:16:43.376 --> 00:16:44.446 A:middle
点击也是如此

00:16:44.886 --> 00:16:46.166 A:middle
界面对每个交互进行

00:16:46.166 --> 00:16:48.186 A:middle
令人满意的响应

00:16:48.186 --> 00:16:48.746 A:middle
是一件非常重要的事情

00:16:49.136 --> 00:16:50.416 A:middle
界面不停向你传递

00:16:50.416 --> 00:16:51.886 A:middle
它理解你的信号

00:16:52.336 --> 00:16:53.676 A:middle
让你感觉界面

00:16:53.676 --> 00:16:55.096 A:middle
充满活力

00:16:55.096 --> 00:16:55.816 A:middle
并与你相联

00:16:56.916 --> 00:16:57.956 A:middle
这就是我要说的

00:16:57.956 --> 00:16:59.766 A:middle
轻量化和放大

00:17:01.596 --> 00:17:03.246 A:middle
接下来要说的是

00:17:03.416 --> 00:17:04.006 A:middle
Rubber Banding

00:17:05.066 --> 00:17:07.156 A:middle
它指我们柔和地

00:17:07.156 --> 00:17:08.665 A:middle
表明边界

00:17:08.665 --> 00:17:12.296 A:middle
在这个例子中

00:17:12.296 --> 00:17:14.215 A:middle
界面渐进且柔和地

00:17:14.296 --> 00:17:16.266 A:middle
让你知道那边没有内容

00:17:16.266 --> 00:17:17.346 A:middle
全程追踪

00:17:17.425 --> 00:17:17.796 A:middle
你的操作

00:17:18.086 --> 00:17:19.266 A:middle
并让你知道

00:17:19.266 --> 00:17:20.165 A:middle
它很理解你

00:17:21.016 --> 00:17:22.026 A:middle
如果没这么做的话

00:17:22.026 --> 00:17:22.246 A:middle
会怎么样呢

00:17:22.246 --> 00:17:23.846 A:middle
结果会是这样

00:17:23.846 --> 00:17:25.106 A:middle
移动整个界面的手将会

00:17:25.106 --> 00:17:25.726 A:middle
非常粘涩 令人不安

00:17:25.726 --> 00:17:27.126 A:middle
就像撞上了一堵墙

00:17:27.126 --> 00:17:28.326 A:middle
感觉就像坏了 对吧

00:17:28.776 --> 00:17:29.976 A:middle
你将无法理解

00:17:29.976 --> 00:17:31.476 A:middle
冻结的手机

00:17:31.476 --> 00:17:33.076 A:middle
和上滑到屏幕边缘的

00:17:33.076 --> 00:17:34.696 A:middle
手机之间的区别

00:17:34.786 --> 00:17:36.406 A:middle
所以告诉你

00:17:36.406 --> 00:17:37.456 A:middle
已经抵达了边缘

00:17:37.456 --> 00:17:38.346 A:middle
是一件重要的事情

00:17:38.736 --> 00:17:41.706 A:middle
这同样也适用于从一个状态

00:17:41.706 --> 00:17:42.666 A:middle
到另一个状态的过渡

00:17:42.666 --> 00:17:43.736 A:middle
这不仅仅是当你轻敲边缘

00:17:43.736 --> 00:17:45.086 A:middle
还有你从一件事

00:17:45.086 --> 00:17:47.466 A:middle
接力到另一件事

00:17:47.846 --> 00:17:50.926 A:middle
追踪

00:17:50.926 --> 00:17:53.026 A:middle
以上滑桌面

00:17:53.026 --> 00:17:54.876 A:middle
和上滑 App 为例

00:17:55.566 --> 00:17:56.926 A:middle
这并不像撞上了一面墙

00:17:56.926 --> 00:17:58.006 A:middle
停止追踪物体

00:17:58.006 --> 00:17:59.196 A:middle
然后由另一个物体接管

00:17:59.536 --> 00:18:01.466 A:middle
它们都以顺滑的曲线

00:17:59.536 --> 00:18:01.466 A:middle
它们都以顺滑的曲线

00:18:01.526 --> 00:18:04.026 A:middle
进行平滑切换

00:18:04.026 --> 00:18:06.166 A:middle
不会让你感觉这是

00:18:06.166 --> 00:18:07.696 A:middle
一个物体接管另一个物体的

00:18:07.696 --> 00:18:10.146 A:middle
粗糙时刻

00:18:10.146 --> 00:18:12.236 A:middle
接下来是设计平滑的

00:18:12.236 --> 00:18:13.216 A:middle
运动效果

00:18:14.546 --> 00:18:16.166 A:middle
假设有一个小物体

00:18:16.666 --> 00:18:18.206 A:middle
在这儿上下移动

00:18:18.206 --> 00:18:18.936 A:middle
非常简单

00:18:19.636 --> 00:18:22.396 A:middle
但是我们都知道这个物体

00:18:22.396 --> 00:18:23.626 A:middle
实际上并没有动 对吧

00:18:24.316 --> 00:18:25.456 A:middle
我们只是视觉上感到

00:18:25.456 --> 00:18:26.676 A:middle
它在移动

00:18:26.676 --> 00:18:27.536 A:middle
因为我们同时

00:18:27.636 --> 00:18:29.466 A:middle
在屏幕上看到很多帧

00:18:29.466 --> 00:18:31.456 A:middle
它们让我们有物体在运动

00:18:31.456 --> 00:18:32.476 A:middle
的错觉

00:18:33.096 --> 00:18:33.916 A:middle
如果我们把所有这些

00:18:33.916 --> 00:18:35.306 A:middle
构成运动的帧

00:18:35.306 --> 00:18:36.176 A:middle
分散开来

00:18:36.176 --> 00:18:37.806 A:middle
就能看到小球运动

00:18:37.806 --> 00:18:40.356 A:middle
的全过程

00:18:40.356 --> 00:18:42.746 A:middle
我们关心的问题是

00:18:42.746 --> 00:18:44.566 A:middle
这里相邻的两帧

00:18:44.566 --> 00:18:46.686 A:middle
出现了明显的

00:18:47.176 --> 00:18:48.246 A:middle
视觉变化

00:18:48.626 --> 00:18:50.846 A:middle
这时候整个界面

00:18:50.846 --> 00:18:52.866 A:middle
会感觉有点 不连贯

00:18:53.326 --> 00:18:54.786 A:middle
出现视觉频闪

00:18:55.796 --> 00:18:57.246 A:middle
这是因为

00:18:57.246 --> 00:18:59.776 A:middle
这两帧的差别实在太大了

00:19:00.966 --> 00:19:02.736 A:middle
以至于你的视觉跟不上

00:19:02.736 --> 00:19:03.626 A:middle
出现了频闪

00:19:03.626 --> 00:19:04.576 A:middle
看这个例子

00:19:04.576 --> 00:19:07.766 A:middle
两个物体都以 30 每帧传输帧数运动

00:19:08.266 --> 00:19:09.276 A:middle
但左边的看起来

00:19:09.356 --> 00:19:10.596 A:middle
要比右边的稍微顺畅些

00:19:10.596 --> 00:19:11.476 A:middle
因为右边的

00:19:11.476 --> 00:19:14.036 A:middle
运动得太快了

00:19:14.606 --> 00:19:15.336 A:middle
产生了频闪

00:19:15.416 --> 00:19:19.946 A:middle
我的视觉感受有点被破坏了

00:19:19.946 --> 00:19:21.806 A:middle
我不再相信它正在

00:19:21.806 --> 00:19:22.676 A:middle
平滑运动

00:19:23.566 --> 00:19:24.896 A:middle
在设计中重要的

00:19:24.896 --> 00:19:27.016 A:middle
不是帧速率

00:19:27.556 --> 00:19:28.876 A:middle
而是帧内容

00:19:29.746 --> 00:19:31.426 A:middle
我们有点被帧速率

00:19:31.466 --> 00:19:32.956 A:middle
和我们能在保持顺畅运动的同时

00:19:32.956 --> 00:19:34.736 A:middle
运动多快

00:19:34.736 --> 00:19:35.186 A:middle
限制住了

00:19:36.036 --> 00:19:38.216 A:middle
那么这个是 30 每秒传输帧数

00:19:38.526 --> 00:19:40.016 A:middle
如果我们将它提高到 60 每秒传输帧数

00:19:40.016 --> 00:19:42.036 A:middle
大家能够看到

00:19:42.036 --> 00:19:43.286 A:middle
我们实际上能变得更快一点

00:19:43.286 --> 00:19:45.486 A:middle
而且还能保持

00:19:45.576 --> 00:19:46.406 A:middle
流畅的运动

00:19:46.606 --> 00:19:47.776 A:middle
我们可以呈现更快的运动

00:19:47.776 --> 00:19:48.586 A:middle
并且不会出现频闪

00:19:49.556 --> 00:19:50.736 A:middle
我们还能做得更多

00:19:50.736 --> 00:19:52.556 A:middle
比如 动态模糊

00:19:52.556 --> 00:19:55.696 A:middle
它能在呈现运动状态的每帧中

00:19:55.696 --> 00:19:57.476 A:middle
加入更多信息

00:19:57.476 --> 00:19:59.276 A:middle
就像我们的眼睛

00:19:59.276 --> 00:20:00.406 A:middle
或者照相机

00:19:59.276 --> 00:20:00.406 A:middle
或者照相机

00:20:00.406 --> 00:20:01.086 A:middle
的工作原理

00:20:02.256 --> 00:20:03.316 A:middle
你还可以通过拉伸

00:20:03.356 --> 00:20:05.396 A:middle
从 2D 动画和视频游戏中

00:20:05.396 --> 00:20:07.026 A:middle
选取一页

00:20:07.026 --> 00:20:07.786 A:middle
从每一帧中拉伸内容

00:20:07.786 --> 00:20:09.536 A:middle
这样物体在高速运动时

00:20:09.536 --> 00:20:12.376 A:middle
还能看起来很流畅

00:20:12.376 --> 00:20:15.466 A:middle
这就是运动拉伸技术

00:20:16.126 --> 00:20:19.246 A:middle
那么在运动中

00:20:19.246 --> 00:20:20.086 A:middle
看起来就是这样的

00:20:20.746 --> 00:20:22.126 A:middle
上面的每种方式

00:20:22.126 --> 00:20:23.866 A:middle
都像是试图

00:20:23.866 --> 00:20:26.556 A:middle
在运动中将更多的

00:20:26.776 --> 00:20:28.466 A:middle
信息进行

00:20:28.466 --> 00:20:28.896 A:middle
视觉编码

00:20:29.546 --> 00:20:30.386 A:middle
我想再稍微多谈一下

00:20:30.386 --> 00:20:31.286 A:middle
这里的最后一点

00:20:31.286 --> 00:20:32.906 A:middle
运动拉伸

00:20:32.906 --> 00:20:34.206 A:middle
因为我们实际上在 iPhone X 上操作

00:20:34.876 --> 00:20:36.136 A:middle
大家知道当你启动 App 的时候

00:20:36.136 --> 00:20:40.606 A:middle
图标会弹性伸缩成

00:20:41.076 --> 00:20:41.636 A:middle
App 界面

00:20:42.366 --> 00:20:43.726 A:middle
并在你关闭 App 的时候

00:20:43.726 --> 00:20:45.096 A:middle
以相反的方向

00:20:45.096 --> 00:20:45.556 A:middle
进行伸缩

00:20:45.946 --> 00:20:46.876 A:middle
由于在运动的每帧之间

00:20:46.876 --> 00:20:48.486 A:middle
增加了一点额外信息

00:20:48.486 --> 00:20:49.786 A:middle
因此整个运动看起来

00:20:49.786 --> 00:20:53.366 A:middle
更加顺滑

00:20:53.366 --> 00:20:55.356 A:middle
最后 我们想考虑操作

00:20:55.396 --> 00:20:57.546 A:middle
而非动画

00:20:58.226 --> 00:20:59.226 A:middle
大家知道现实世界中的事物

00:20:59.226 --> 00:21:00.836 A:middle
总是处于

00:20:59.226 --> 00:21:00.836 A:middle
总是处于

00:21:00.836 --> 00:21:02.006 A:middle
动态变化中

00:21:02.006 --> 00:21:03.516 A:middle
并且总是会受到你的影响

00:21:03.886 --> 00:21:05.316 A:middle
并不像动画片中的

00:21:05.356 --> 00:21:06.886 A:middle
那样运动

00:21:06.936 --> 00:21:07.366 A:middle
对吧

00:21:07.366 --> 00:21:09.336 A:middle
也没有现实生活

00:21:09.336 --> 00:21:10.786 A:middle
制定的动画曲线

00:21:11.406 --> 00:21:12.256 A:middle
所以我们认为

00:21:12.256 --> 00:21:13.816 A:middle
动画和操作更像是

00:21:13.866 --> 00:21:15.216 A:middle
你和物体之间的

00:21:15.216 --> 00:21:15.626 A:middle
一场对话

00:21:15.956 --> 00:21:17.376 A:middle
而非界面的描述

00:21:17.956 --> 00:21:21.436 A:middle
所以 不要试图把静态的事物转化为动画

00:21:21.436 --> 00:21:22.926 A:middle
而应该更多地去思考

00:21:22.956 --> 00:21:23.806 A:middle
行为本身

00:21:24.506 --> 00:21:26.206 A:middle
Nathan 稍后将具体谈到

00:21:26.206 --> 00:21:26.826 A:middle
这一点

00:21:27.186 --> 00:21:28.546 A:middle
但是让我快速举个例子

00:21:29.186 --> 00:21:33.036 A:middle
在照片这个 App 中

00:21:33.036 --> 00:21:36.256 A:middle
滑动照片的阻力很小

00:21:36.826 --> 00:21:38.586 A:middle
因为它在概念上就很轻量化

00:21:38.716 --> 00:21:40.596 A:middle
但是当你滑动切换 App 时

00:21:40.766 --> 00:21:42.386 A:middle
阻力会稍微大些

00:21:42.386 --> 00:21:44.366 A:middle
因为它在概念上更重

00:21:44.366 --> 00:21:45.936 A:middle
所以我们赋予了系统更重的质量

00:21:48.516 --> 00:21:54.696 A:middle
[ 掌声 ]

00:21:55.196 --> 00:21:56.366 A:middle
好了 这就是我想说的

00:21:56.476 --> 00:21:58.606 A:middle
如何设计像我们一样

00:21:58.736 --> 00:22:01.606 A:middle
思考和工作的界面

00:21:58.736 --> 00:22:01.606 A:middle
思考和工作的界面

00:22:02.876 --> 00:22:04.906 A:middle
界面通过响应

00:22:05.496 --> 00:22:06.586 A:middle
让我们感受到与事物的连接

00:22:06.616 --> 00:22:08.546 A:middle
并且适应我们

00:22:08.546 --> 00:22:10.286 A:middle
不停变化的思维

00:22:11.156 --> 00:22:12.986 A:middle
保持空间一致性

00:22:13.246 --> 00:22:17.286 A:middle
来加强统一的空间感

00:22:17.286 --> 00:22:18.626 A:middle
以及对称的过渡方式

00:22:19.466 --> 00:22:21.646 A:middle
暗示手势操作的方向

00:22:22.046 --> 00:22:23.526 A:middle
来影响我们

00:22:23.526 --> 00:22:24.036 A:middle
对未来的预期

00:22:24.156 --> 00:22:26.586 A:middle
保持交互轻量化

00:22:26.586 --> 00:22:28.686 A:middle
但放大其效果

00:22:29.536 --> 00:22:31.286 A:middle
在保持互动的轻盈性

00:22:31.366 --> 00:22:32.196 A:middle
和轻量的同时

00:22:32.196 --> 00:22:33.836 A:middle
获得令人满意的响应

00:22:34.506 --> 00:22:38.036 A:middle
在界面中采用

00:22:38.036 --> 00:22:39.076 A:middle
柔性边界

00:22:39.516 --> 00:22:42.066 A:middle
并在你触及边界

00:22:42.066 --> 00:22:44.696 A:middle
以及转换追踪物体时

00:22:44.696 --> 00:22:45.726 A:middle
进行优雅的响应

00:22:46.446 --> 00:22:49.456 A:middle
设计与你同步工作的

00:22:49.486 --> 00:22:51.976 A:middle
顺滑动态的行为

00:22:52.566 --> 00:22:57.516 A:middle
好了 这就是如何设计

00:22:57.516 --> 00:22:58.366 A:middle
像我们大脑延伸般的

00:22:58.366 --> 00:23:00.936 A:middle
界面的几点原则

00:22:58.366 --> 00:23:00.936 A:middle
界面的几点原则

00:23:01.846 --> 00:23:03.136 A:middle
让我们再深入一点

00:23:03.136 --> 00:23:04.096 A:middle
我将把舞台交给我的同事

00:23:04.096 --> 00:23:05.396 A:middle
Nathan de Vries

00:23:05.756 --> 00:23:07.616 A:middle
他将谈到

00:23:07.616 --> 00:23:09.006 A:middle
如何设计动作

00:23:09.056 --> 00:23:10.566 A:middle
使其与你自身

00:23:10.566 --> 00:23:12.346 A:middle
和自然世界

00:23:12.346 --> 00:23:12.976 A:middle
完美连接

00:23:13.516 --> 00:23:22.006 A:middle
[ 掌声 ]

00:23:22.506 --> 00:23:23.036 A:middle
&gt;&gt; 谢谢 Chan

00:23:24.016 --> 00:23:24.686 A:middle
大家好

00:23:24.736 --> 00:23:26.866 A:middle
我叫 Nathan

00:23:26.866 --> 00:23:28.406 A:middle
今天非常激动能站在这里

00:23:28.406 --> 00:23:29.796 A:middle
和大家谈谈

00:23:29.866 --> 00:23:30.806 A:middle
用动态运动进行设计

00:23:32.196 --> 00:23:34.666 A:middle
正如 Chan 刚刚提到的

00:23:34.666 --> 00:23:36.326 A:middle
我们的思维和身体总是

00:23:36.326 --> 00:23:37.276 A:middle
处于运动状态

00:23:37.396 --> 00:23:38.636 A:middle
我们周围的世界

00:23:38.636 --> 00:23:39.556 A:middle
也处于运动状态

00:23:40.046 --> 00:23:42.366 A:middle
这就导致了

00:23:42.366 --> 00:23:44.566 A:middle
我们希望当界面

00:23:44.756 --> 00:23:46.396 A:middle
变得更加有触感时

00:23:46.396 --> 00:23:48.466 A:middle
界面也同样

00:23:48.466 --> 00:23:50.766 A:middle
能将我们的期望

00:23:50.766 --> 00:23:51.676 A:middle
变得更加真实

00:23:53.026 --> 00:23:54.686 A:middle
现在在界面中使用动态的

00:23:54.686 --> 00:23:57.576 A:middle
一种方式是定时动画

00:23:58.286 --> 00:23:59.366 A:middle
只要敲屏幕上的一个按钮

00:23:59.366 --> 00:24:01.746 A:middle
控制权就像是

00:23:59.366 --> 00:24:01.746 A:middle
控制权就像是

00:24:01.746 --> 00:24:03.406 A:middle
完全交给了设计者

00:24:04.256 --> 00:24:06.016 A:middle
他们的职责就是

00:24:06.066 --> 00:24:08.206 A:middle
在时间中精心制作

00:24:08.206 --> 00:24:09.076 A:middle
这些完美的帧

00:24:09.656 --> 00:24:11.816 A:middle
一旦动画完成

00:24:11.816 --> 00:24:13.306 A:middle
控制权又交还给了

00:24:13.306 --> 00:24:14.706 A:middle
界面的使用者

00:24:14.706 --> 00:24:17.466 A:middle
让他们继续互动

00:24:18.336 --> 00:24:19.536 A:middle
所以你们可以把

00:24:19.536 --> 00:24:21.286 A:middle
动画和互动看成是

00:24:21.356 --> 00:24:23.716 A:middle
一段时间内

00:24:23.716 --> 00:24:24.836 A:middle
在调用和响应模式间的

00:24:24.886 --> 00:24:28.006 A:middle
线性移动

00:24:28.166 --> 00:24:30.056 A:middle
在一个流畅的界面中

00:24:30.056 --> 00:24:33.026 A:middle
使用者动态化的本质是

00:24:33.026 --> 00:24:35.046 A:middle
从我们这些设计者手中

00:24:35.046 --> 00:24:36.146 A:middle
拿走控制权

00:24:37.196 --> 00:24:39.016 A:middle
那么我们的作用就是

00:24:39.016 --> 00:24:42.186 A:middle
想办法设计如何让动态

00:24:42.186 --> 00:24:43.686 A:middle
与互动同步运行

00:24:44.366 --> 00:24:46.676 A:middle
这就需要通过这些

00:24:46.676 --> 00:24:49.016 A:middle
持续运行和活跃的

00:24:49.346 --> 00:24:51.646 A:middle
动态行为来完成

00:24:52.206 --> 00:24:55.016 A:middle
那么今天

00:24:55.056 --> 00:24:57.156 A:middle
我主要想讲的就是

00:24:57.156 --> 00:24:57.676 A:middle
这些动态操作

00:24:58.236 --> 00:25:00.746 A:middle
首先我们来谈谈

00:24:58.236 --> 00:25:00.746 A:middle
首先我们来谈谈

00:25:00.816 --> 00:25:02.756 A:middle
无缝动态

00:25:03.476 --> 00:25:06.226 A:middle
就是这个动态元素

00:25:06.226 --> 00:25:07.486 A:middle
让我们感觉

00:25:07.486 --> 00:25:09.656 A:middle
动态动作是自身的延伸

00:25:11.076 --> 00:25:12.386 A:middle
下面让我们来看看人像

00:25:12.386 --> 00:25:14.806 A:middle
如何在即便没有时间曲线

00:25:14.806 --> 00:25:16.196 A:middle
和定时动画的情况下

00:25:16.196 --> 00:25:19.836 A:middle
也能在你的界面的运动中

00:25:19.956 --> 00:25:22.566 A:middle
引入可玩性

00:25:22.566 --> 00:25:23.206 A:middle
个性 以及纹理的概念

00:25:24.696 --> 00:25:26.196 A:middle
最后我们还将看看

00:25:26.196 --> 00:25:27.816 A:middle
动态自身如何给我们提供一些

00:25:27.906 --> 00:25:29.916 A:middle
关于人们想要对界面

00:25:29.996 --> 00:25:32.126 A:middle
做的事情的线索

00:25:32.366 --> 00:25:33.456 A:middle
我们如何通过

00:25:33.456 --> 00:25:35.176 A:middle
观看手势的动作

00:25:35.176 --> 00:25:36.796 A:middle
来解决一些

00:25:36.796 --> 00:25:38.816 A:middle
手势想要做的事件

00:25:38.816 --> 00:25:39.206 A:middle
的不确定性

00:25:39.906 --> 00:25:44.206 A:middle
那么首先

00:25:44.296 --> 00:25:45.516 A:middle
让我们来看看无缝动态

00:25:45.916 --> 00:25:47.466 A:middle
这是什么意思呢

00:25:48.696 --> 00:25:49.866 A:middle
先来看个

00:25:49.866 --> 00:25:51.116 A:middle
我想大家都很熟悉的

00:25:51.936 --> 00:25:53.496 A:middle
例子吧

00:25:54.236 --> 00:25:56.086 A:middle
这儿有辆车

00:25:56.266 --> 00:25:58.086 A:middle
正在以持续的速度前进

00:25:58.776 --> 00:25:59.636 A:middle
然后驾驶员踩了刹车

00:25:59.636 --> 00:26:01.336 A:middle
车子完全

00:25:59.636 --> 00:26:01.336 A:middle
车子完全

00:26:01.336 --> 00:26:02.126 A:middle
停下来了

00:26:02.126 --> 00:26:05.636 A:middle
我们再来看一遍

00:26:05.756 --> 00:26:07.756 A:middle
但这次我们将汽车在这段时间内的位置

00:26:07.756 --> 00:26:08.946 A:middle
划分成小块

00:26:09.466 --> 00:26:12.826 A:middle
在曲线的最前段

00:26:12.826 --> 00:26:14.186 A:middle
它几乎是直线

00:26:14.236 --> 00:26:15.816 A:middle
向右上方延伸

00:26:16.176 --> 00:26:17.376 A:middle
这表明汽车

00:26:17.376 --> 00:26:19.056 A:middle
正在以几乎恒定的速率移动

00:26:19.056 --> 00:26:20.906 A:middle
几乎不变

00:26:21.706 --> 00:26:22.626 A:middle
但是之后你会注意到

00:26:22.626 --> 00:26:24.356 A:middle
曲线开始弯曲了

00:26:24.546 --> 00:26:27.406 A:middle
光滑地偏离了一开始的

00:26:27.406 --> 00:26:28.206 A:middle
这条直线

00:26:28.496 --> 00:26:30.166 A:middle
这是因为踩了刹车

00:26:30.406 --> 00:26:32.016 A:middle
由于阻力

00:26:32.016 --> 00:26:33.346 A:middle
汽车减速了

00:26:34.336 --> 00:26:35.796 A:middle
然后在曲线的末尾

00:26:35.796 --> 00:26:36.986 A:middle
它完全平了

00:26:37.056 --> 00:26:38.206 A:middle
是水平的

00:26:38.206 --> 00:26:40.106 A:middle
表明位置不再变化

00:26:40.676 --> 00:26:41.676 A:middle
汽车停下来了

00:26:42.386 --> 00:26:45.916 A:middle
因此这条位置曲线

00:26:46.006 --> 00:26:47.726 A:middle
基本上就从视觉上展示了

00:26:47.766 --> 00:26:49.236 A:middle
什么叫无痕动态

00:26:49.236 --> 00:26:51.446 A:middle
线条完全是未被破坏的

00:26:52.286 --> 00:26:54.426 A:middle
方向也没有突然的变化

00:26:55.916 --> 00:26:57.916 A:middle
所以它是平滑无痕的

00:26:58.426 --> 00:27:00.136 A:middle
实际上 即便汽车

00:26:58.426 --> 00:27:00.136 A:middle
实际上 即便汽车

00:27:00.196 --> 00:27:02.816 A:middle
将有新的动态动作

00:27:02.816 --> 00:27:06.866 A:middle
比如导致摩擦阻力的刹车

00:27:08.346 --> 00:27:09.536 A:middle
即便汽车完全停下了

00:27:09.536 --> 00:27:11.396 A:middle
你也会注意到

00:27:11.396 --> 00:27:13.656 A:middle
这条曲线是完全平滑的

00:27:13.656 --> 00:27:16.126 A:middle
它难以察觉

00:27:16.126 --> 00:27:17.436 A:middle
你无法指出汽车

00:27:17.476 --> 00:27:18.486 A:middle
究竟是什么时候停下的

00:27:18.926 --> 00:27:21.936 A:middle
那么为什么我要说汽车呢

00:27:21.936 --> 00:27:23.806 A:middle
我们谈论的应该是界面

00:27:23.806 --> 00:27:24.666 A:middle
对吧

00:27:25.866 --> 00:27:28.056 A:middle
我们感觉

00:27:28.056 --> 00:27:29.596 A:middle
物理世界的特征

00:27:29.596 --> 00:27:31.556 A:middle
创造了完美的动作

00:27:32.636 --> 00:27:34.256 A:middle
在座的每一位都会觉得

00:27:34.326 --> 00:27:36.786 A:middle
这个汽车的例子是如此的简单

00:27:36.786 --> 00:27:38.276 A:middle
因为我们有共识

00:27:38.276 --> 00:27:40.486 A:middle
或者说都知道

00:27:40.486 --> 00:27:42.206 A:middle
像汽车这样的物体在现实世界中

00:27:42.206 --> 00:27:42.676 A:middle
是如何运动的

00:27:43.966 --> 00:27:47.086 A:middle
这就给了我们一个参考点

00:27:47.276 --> 00:27:48.186 A:middle
现在我并不是说我们需要

00:27:48.186 --> 00:27:49.736 A:middle
打造一个完美的

00:27:49.806 --> 00:27:51.516 A:middle
汽车物理模拟

00:27:51.516 --> 00:27:53.086 A:middle
来运转我们的界面

00:27:53.616 --> 00:27:55.476 A:middle
而是说我们可以参考汽车

00:27:55.556 --> 00:27:57.406 A:middle
或在现实世界中

00:27:57.576 --> 00:27:58.896 A:middle
我们抛掷或移动的

00:27:58.896 --> 00:28:01.636 A:middle
其他物体的运动

00:27:58.896 --> 00:28:01.636 A:middle
其他物体的运动

00:28:01.636 --> 00:28:02.676 A:middle
并将它们运用到动态操作中去

00:28:02.726 --> 00:28:04.986 A:middle
让动态变得更熟悉

00:28:04.986 --> 00:28:07.466 A:middle
有联系

00:28:07.466 --> 00:28:09.086 A:middle
或是让人信服

00:28:09.086 --> 00:28:11.756 A:middle
这才是最重要的

00:28:11.986 --> 00:28:13.666 A:middle
这个参考现实世界

00:28:13.666 --> 00:28:15.646 A:middle
打造动态行为的想法

00:28:15.696 --> 00:28:17.906 A:middle
从一开始的滑动中

00:28:17.906 --> 00:28:19.846 A:middle
就已经运用到 iPhone 上了

00:28:21.016 --> 00:28:22.766 A:middle
孩子可以随手拿起一台 iPhone

00:28:22.766 --> 00:28:24.156 A:middle
然后在主屏幕

00:28:24.156 --> 00:28:25.936 A:middle
滑动找到最喜欢的 App

00:28:25.936 --> 00:28:27.376 A:middle
这就像在地上推动玩具小汽车

00:28:27.376 --> 00:28:30.666 A:middle
一样简单

00:28:30.926 --> 00:28:32.716 A:middle
那么这个滚动

00:28:32.796 --> 00:28:34.556 A:middle
动态行为的

00:28:34.556 --> 00:28:36.116 A:middle
一些特点

00:28:36.116 --> 00:28:36.606 A:middle
是什么呢

00:28:37.646 --> 00:28:39.376 A:middle
首先它利用了

00:28:39.376 --> 00:28:41.236 A:middle
我们在现实世界中

00:28:41.236 --> 00:28:42.756 A:middle
都有的关于

00:28:43.336 --> 00:28:45.276 A:middle
物体运动的

00:28:45.276 --> 00:28:45.706 A:middle
直觉和认知

00:28:45.706 --> 00:28:47.866 A:middle
以及我们对于那些物体的影响

00:28:49.296 --> 00:28:51.366 A:middle
这些物体的运动

00:28:51.686 --> 00:28:53.786 A:middle
是完全无缝的

00:28:53.786 --> 00:28:55.086 A:middle
因此当我和它们互动的时候

00:28:55.086 --> 00:28:57.306 A:middle
当我拖拽它们的时候

00:28:57.396 --> 00:28:59.096 A:middle
我的身体提供了运动的流畅性

00:28:59.096 --> 00:29:00.776 A:middle
因为我的身体

00:28:59.096 --> 00:29:00.776 A:middle
因为我的身体

00:29:00.776 --> 00:29:01.386 A:middle
是流动的

00:29:02.476 --> 00:29:03.766 A:middle
但是一旦我放开了那个物体

00:29:03.766 --> 00:29:06.926 A:middle
它就会因为惯性

00:29:06.926 --> 00:29:07.716 A:middle
慢慢地停下来

00:29:08.046 --> 00:29:09.346 A:middle
因此我们有点像是在

00:29:09.346 --> 00:29:11.146 A:middle
保持放入界面中的精力

00:29:11.146 --> 00:29:12.896 A:middle
的动能

00:29:14.496 --> 00:29:15.896 A:middle
用来滚动的阻力

00:29:15.956 --> 00:29:17.966 A:middle
数量是持续不变的

00:29:18.066 --> 00:29:19.806 A:middle
这就使得它是可预测的

00:29:19.876 --> 00:29:22.026 A:middle
并且非常容易掌控

00:29:23.636 --> 00:29:25.956 A:middle
最后 这个物体不可察觉地

00:29:25.986 --> 00:29:28.096 A:middle
停下了

00:29:28.096 --> 00:29:29.246 A:middle
有点像这辆车

00:29:29.246 --> 00:29:31.186 A:middle
我们无法明确得知

00:29:31.186 --> 00:29:31.696 A:middle
它究竟是何时停下的

00:29:32.566 --> 00:29:34.016 A:middle
我们认为

00:29:34.516 --> 00:29:36.366 A:middle
这种明显感觉不到的结尾

00:29:36.366 --> 00:29:38.446 A:middle
加强了内容是永远运动

00:29:38.446 --> 00:29:39.966 A:middle
并且能够运动

00:29:39.966 --> 00:29:42.066 A:middle
的这一想法

00:29:42.066 --> 00:29:43.226 A:middle
因此当滑动内容时

00:29:43.276 --> 00:29:44.866 A:middle
感觉就像是

00:29:44.866 --> 00:29:46.366 A:middle
只要你将手往下拉

00:29:46.466 --> 00:29:47.346 A:middle
它就可以就能持续滚动

00:29:47.346 --> 00:29:48.226 A:middle
你不必等待

00:29:48.226 --> 00:29:49.166 A:middle
什么东西的结束

00:29:49.746 --> 00:29:53.186 A:middle
因此有无数

00:29:53.186 --> 00:29:55.116 A:middle
现实世界的特征

00:29:55.116 --> 00:29:57.406 A:middle
可以被借鉴 用来设计出更好的运动

00:29:58.136 --> 00:29:59.296 A:middle
我们没有时间来逐一探讨

00:29:59.296 --> 00:30:01.086 A:middle
但我接下来主要

00:29:59.296 --> 00:30:01.086 A:middle
但我接下来主要

00:30:01.086 --> 00:30:02.346 A:middle
想谈谈这个

00:30:02.346 --> 00:30:04.276 A:middle
因为我们真的觉得

00:30:04.276 --> 00:30:05.886 A:middle
它在我们的设计工作中

00:30:05.886 --> 00:30:05.976 A:middle
必不可少

00:30:08.076 --> 00:30:10.116 A:middle
这儿有一朵

00:30:10.826 --> 00:30:12.626 A:middle
漂亮的花

00:30:12.626 --> 00:30:14.386 A:middle
它的自然纤维

00:30:15.136 --> 00:30:18.546 A:middle
有弹性这一自然特点

00:30:20.046 --> 00:30:21.926 A:middle
弹性指的是

00:30:21.926 --> 00:30:23.776 A:middle
移除压力或拉力后

00:30:23.776 --> 00:30:26.526 A:middle
物体有优雅地

00:30:26.526 --> 00:30:28.036 A:middle
回到静息状态下的趋势

00:30:29.646 --> 00:30:31.766 A:middle
我们人类的身体就

00:30:31.766 --> 00:30:32.286 A:middle
非常有弹性

00:30:33.216 --> 00:30:34.746 A:middle
我们可以持续跑

00:30:35.196 --> 00:30:37.626 A:middle
一段非常长的距离

00:30:37.626 --> 00:30:38.956 A:middle
并不是因为肌肉有多强壮

00:30:38.956 --> 00:30:41.786 A:middle
而是因为它们可以放松

00:30:43.296 --> 00:30:44.596 A:middle
正是它们的弹性

00:30:44.656 --> 00:30:45.156 A:middle
做到了这一点

00:30:46.296 --> 00:30:47.726 A:middle
一旦压力或张力被移除

00:30:47.726 --> 00:30:49.786 A:middle
肌肉就会缩紧并放松

00:30:49.896 --> 00:30:51.556 A:middle
这就是我们保存力量的方式

00:30:51.776 --> 00:30:54.806 A:middle
让我们感觉自然 有机

00:30:55.456 --> 00:30:58.476 A:middle
同样的弹性被运用到了

00:30:58.686 --> 00:30:59.206 A:middle
iPhone X 中

00:30:59.966 --> 00:31:01.546 A:middle
在主屏幕轻敲一个图标

00:30:59.966 --> 00:31:01.546 A:middle
在主屏幕轻敲一个图标

00:31:01.936 --> 00:31:03.836 A:middle
随后一个富有弹性的运动

00:31:03.836 --> 00:31:05.156 A:middle
就将一个软件在你面前打开

00:31:05.986 --> 00:31:08.076 A:middle
完全是你想要的样子

00:31:08.136 --> 00:31:09.566 A:middle
当你从底部轻扫

00:31:09.566 --> 00:31:12.046 A:middle
这个 App 就会重新

00:31:12.046 --> 00:31:13.176 A:middle
回到主屏幕上

00:31:13.176 --> 00:31:14.136 A:middle
刚刚好的位置

00:31:14.686 --> 00:31:18.966 A:middle
我们在滑动中 也运用了弹性

00:31:19.366 --> 00:31:20.706 A:middle
因此如果我滑动得太远 并且产生了

00:31:20.706 --> 00:31:21.966 A:middle
Rubber Band 就像 Chan 刚才提到的那样

00:31:21.966 --> 00:31:23.996 A:middle
当你放手的时候

00:31:23.996 --> 00:31:26.736 A:middle
内容就会因为弹性

00:31:26.856 --> 00:31:29.256 A:middle
在界面中返回

00:31:29.256 --> 00:31:30.496 A:middle
帮助你回到

00:31:30.576 --> 00:31:32.466 A:middle
静息位置

00:31:32.466 --> 00:31:33.656 A:middle
为下一次滑动作准备

00:31:33.726 --> 00:31:37.126 A:middle
让我们深入探讨一下

00:31:37.126 --> 00:31:39.596 A:middle
这种弹性在后台

00:31:39.726 --> 00:31:40.636 A:middle
是如何工作的

00:31:41.266 --> 00:31:44.466 A:middle
大家可以把滑动内容

00:31:44.466 --> 00:31:48.306 A:middle
当作连接在弹簧上的

00:31:49.456 --> 00:31:49.606 A:middle
一个小球

00:31:49.786 --> 00:31:51.276 A:middle
在弹簧的一端

00:31:51.416 --> 00:31:52.246 A:middle
是当前值

00:31:52.326 --> 00:31:55.626 A:middle
这就是展示内容的位置

00:31:56.616 --> 00:31:58.316 A:middle
弹簧的另一端是

00:31:58.316 --> 00:32:00.146 A:middle
内容由于弹性

00:31:58.316 --> 00:32:00.146 A:middle
内容由于弹性

00:32:00.146 --> 00:32:01.596 A:middle
将要去的地方

00:32:01.746 --> 00:32:02.616 A:middle
那么我们就得到了这样一个弹簧

00:32:02.616 --> 00:32:05.896 A:middle
它把当前值拉向目标

00:32:06.136 --> 00:32:08.276 A:middle
这个行为正在影响

00:32:08.276 --> 00:32:09.376 A:middle
内容的位置

00:32:11.176 --> 00:32:13.126 A:middle
现在弹簧事实上

00:32:13.126 --> 00:32:15.596 A:middle
就在把当前值拉向目标

00:32:16.636 --> 00:32:18.016 A:middle
有趣的是

00:32:18.016 --> 00:32:19.986 A:middle
弹簧的运动是无缝的

00:32:19.986 --> 00:32:21.396 A:middle
这种无缝对于行为来说

00:32:21.556 --> 00:32:23.756 A:middle
有点像内置的

00:32:25.056 --> 00:32:26.256 A:middle
这就是为何它们是

00:32:26.256 --> 00:32:28.356 A:middle
进行流畅界面设计的

00:32:28.356 --> 00:32:30.176 A:middle
多功能工具

00:32:30.926 --> 00:32:32.426 A:middle
你可以几乎免费

00:32:32.426 --> 00:32:33.196 A:middle
获得这样东西

00:32:33.536 --> 00:32:35.476 A:middle
因为它就在行为本身内部

00:32:35.626 --> 00:32:40.326 A:middle
我们喜爱这个

00:32:40.326 --> 00:32:41.876 A:middle
值移向目标的行为

00:32:41.876 --> 00:32:43.766 A:middle
我们可以指出 这个小球将运动到哪里

00:32:43.766 --> 00:32:45.126 A:middle
并能得到

00:32:45.246 --> 00:32:47.696 A:middle
小球移向目标的

00:32:47.696 --> 00:32:48.896 A:middle
无痕动态

00:32:48.896 --> 00:32:50.506 A:middle
但是我们想稍微控制一下

00:32:50.506 --> 00:32:52.446 A:middle
它运动的速度

00:32:53.016 --> 00:32:54.736 A:middle
以及是否会出现过冲

00:32:55.236 --> 00:32:55.986 A:middle
要怎么做呢

00:32:57.166 --> 00:32:58.326 A:middle
我们可以给这个小球一些质量

00:32:58.326 --> 00:33:00.046 A:middle
比如让它变大一点

00:32:58.326 --> 00:33:00.046 A:middle
比如让它变大一点

00:33:00.106 --> 00:33:01.266 A:middle
或者重一点

00:33:02.296 --> 00:33:03.796 A:middle
如果这样做的话

00:33:04.236 --> 00:33:05.776 A:middle
就会改变小球的惯性

00:33:06.106 --> 00:33:08.536 A:middle
或者说是它想要开始运动的意愿

00:33:09.116 --> 00:33:12.126 A:middle
它不想停下运动的抗拒

00:33:12.616 --> 00:33:16.526 A:middle
然后小球就可能有过冲

00:33:16.716 --> 00:33:17.786 A:middle
另一种可能性是

00:33:17.786 --> 00:33:19.166 A:middle
我们可以改变弹簧的硬度

00:33:19.166 --> 00:33:20.886 A:middle
或者说是弹簧的

00:33:20.886 --> 00:33:21.566 A:middle
可伸展长度

00:33:22.206 --> 00:33:23.066 A:middle
这么做的后果就是

00:33:23.066 --> 00:33:24.696 A:middle
会影响对小球施加的力

00:33:24.696 --> 00:33:26.726 A:middle
改变小球

00:33:26.726 --> 00:33:28.526 A:middle
移向目标的速度

00:33:29.156 --> 00:33:31.786 A:middle
最后 与汽车运用刹车

00:33:31.786 --> 00:33:34.506 A:middle
非常类似

00:33:34.646 --> 00:33:36.156 A:middle
我们可以改变

00:33:36.226 --> 00:33:37.936 A:middle
小球表面的

00:33:37.936 --> 00:33:39.076 A:middle
阻尼或阻力

00:33:39.696 --> 00:33:40.876 A:middle
它的作用就像刹车

00:33:40.876 --> 00:33:42.626 A:middle
可以在一段时间内减缓小球的速度

00:33:42.626 --> 00:33:46.046 A:middle
同样影响过冲的能力

00:33:46.596 --> 00:33:50.576 A:middle
因此小球和弹簧的物理特性

00:33:50.576 --> 00:33:51.946 A:middle
就有点像是物理学科的东西

00:33:52.176 --> 00:33:53.686 A:middle
对吧

00:33:53.686 --> 00:33:54.666 A:middle
在科学领域中

00:33:54.706 --> 00:33:55.996 A:middle
它非常有用

00:33:55.996 --> 00:33:57.946 A:middle
但我们发现在设计工作中

00:33:57.946 --> 00:33:59.196 A:middle
它们对于在屏幕上

00:33:59.196 --> 00:34:01.336 A:middle
控制物体行为

00:33:59.196 --> 00:34:01.336 A:middle
控制物体行为

00:34:01.636 --> 00:34:02.996 A:middle
太具有压倒性了

00:34:03.416 --> 00:34:04.426 A:middle
有些难操作

00:34:05.876 --> 00:34:07.376 A:middle
因此我们认为我们的设计工具

00:34:07.376 --> 00:34:09.366 A:middle
必须有一点

00:34:09.366 --> 00:34:10.346 A:middle
人类界面

00:34:10.786 --> 00:34:11.806 A:middle
它们需要反映

00:34:11.806 --> 00:34:13.746 A:middle
使用工具的设计者的需求

00:34:14.886 --> 00:34:16.255 A:middle
那么我们要怎么做呢

00:34:16.255 --> 00:34:17.246 A:middle
我们如何简化这些特性

00:34:17.246 --> 00:34:18.806 A:middle
让它对设计者

00:34:19.815 --> 00:34:20.626 A:middle
更加友好呢

00:34:22.516 --> 00:34:24.396 A:middle
质量硬度和阻尼

00:34:24.396 --> 00:34:25.815 A:middle
将仍保留在后台

00:34:25.815 --> 00:34:26.606 A:middle
它们是我们使用的

00:34:26.606 --> 00:34:28.016 A:middle
弹簧系统

00:34:28.016 --> 00:34:28.696 A:middle
最根本的特性

00:34:28.696 --> 00:34:30.226 A:middle
但是我们可以简化界面

00:34:30.226 --> 00:34:32.266 A:middle
仅保留两个最基本的特性

00:34:33.446 --> 00:34:35.176 A:middle
第一个就是阻尼

00:34:35.176 --> 00:34:36.835 A:middle
控制 100% 的阻尼

00:34:36.886 --> 00:34:39.306 A:middle
剩下多少

00:34:39.306 --> 00:34:40.565 A:middle
这样当阻尼为 0 时

00:34:40.565 --> 00:34:43.136 A:middle
就不会出现过冲

00:34:43.136 --> 00:34:44.545 A:middle
弹簧将永远

00:34:44.545 --> 00:34:45.246 A:middle
来回摆动

00:34:47.126 --> 00:34:50.485 A:middle
第二个特性是响应

00:34:52.025 --> 00:34:55.186 A:middle
它决定着值将以多快的速度

00:34:55.186 --> 00:34:55.735 A:middle
到达目标

00:34:56.956 --> 00:34:58.296 A:middle
大家可能会注意到

00:34:58.296 --> 00:34:59.956 A:middle
我从来没有用到过持续时间这个词

00:35:00.446 --> 00:35:02.506 A:middle
事实上我们往往避免

00:35:02.506 --> 00:35:03.986 A:middle
用这个词来形容

00:35:03.986 --> 00:35:05.456 A:middle
弹性行为

00:35:05.456 --> 00:35:07.356 A:middle
因为它强调了

00:35:07.726 --> 00:35:09.506 A:middle
持续动态变化这一概念

00:35:09.756 --> 00:35:11.656 A:middle
弹簧总是在运动中

00:35:11.656 --> 00:35:13.066 A:middle
时刻准备着移动到别的地方

00:35:14.346 --> 00:35:15.466 A:middle
那么这两个特性的

00:35:15.466 --> 00:35:17.016 A:middle
专业术语是阻尼比

00:35:17.016 --> 00:35:18.836 A:middle
和频率响应

00:35:18.876 --> 00:35:20.426 A:middle
如果你想在自己的设计工作中

00:35:20.426 --> 00:35:21.666 A:middle
运用到这两个特性

00:35:21.666 --> 00:35:23.396 A:middle
可以查找一下这两个术语

00:35:23.456 --> 00:35:27.546 A:middle
你将会发现 轻松转换它们的办法

00:35:27.776 --> 00:35:29.836 A:middle
这就是控制

00:35:29.906 --> 00:35:31.116 A:middle
弹性行为的两个

00:35:31.116 --> 00:35:32.086 A:middle
简单特性

00:35:32.806 --> 00:35:35.166 A:middle
但是这个曲线

00:35:35.166 --> 00:35:38.106 A:middle
还带来了无数可能性

00:35:38.106 --> 00:35:39.836 A:middle
比如 我们有成百上千

00:35:39.866 --> 00:35:41.176 A:middle
成千上万种方法

00:35:41.176 --> 00:35:42.756 A:middle
来配置这两个简单的特性

00:35:42.756 --> 00:35:45.826 A:middle
并得到不同的行为

00:35:47.106 --> 00:35:49.636 A:middle
那我们如何运用它们来精心制作

00:35:49.636 --> 00:35:50.786 A:middle
App 中的一个特性

00:35:50.786 --> 00:35:53.996 A:middle
来控制 App 的感受呢

00:35:54.246 --> 00:35:56.286 A:middle
首先

00:35:56.286 --> 00:35:57.516 A:middle
我们必须牢记

00:35:57.516 --> 00:35:59.246 A:middle
设备是工具

00:36:00.326 --> 00:36:02.716 A:middle
我们要尊重它们

00:36:03.276 --> 00:36:04.736 A:middle
因为我们带有目的地使用它们

00:36:04.736 --> 00:36:08.186 A:middle
这就要求我们不要

00:36:08.186 --> 00:36:09.836 A:middle
引入不必要的运动

00:36:09.836 --> 00:36:12.146 A:middle
来妨碍它们

00:36:13.366 --> 00:36:14.496 A:middle
所以我们认为你应该

00:36:14.496 --> 00:36:15.386 A:middle
从简单的开始

00:36:16.166 --> 00:36:18.146 A:middle
弹簧不需要过冲

00:36:18.346 --> 00:36:20.246 A:middle
你不需要用有弹性的弹簧

00:36:21.576 --> 00:36:23.426 A:middle
我们建议你调试弹性行为的时候

00:36:23.426 --> 00:36:26.146 A:middle
一开始就让阻尼为 100%

00:36:26.386 --> 00:36:28.026 A:middle
或者不要有过冲

00:36:28.776 --> 00:36:30.056 A:middle
这样你将会得到流畅

00:36:30.286 --> 00:36:32.266 A:middle
优雅 无缝的动态

00:36:32.806 --> 00:36:33.996 A:middle
且丝毫没有扰乱

00:36:34.086 --> 00:36:34.916 A:middle
正在执行的任务

00:36:35.176 --> 00:36:36.446 A:middle
就像很快地发送一封

00:36:36.446 --> 00:36:36.986 A:middle
电子邮件

00:36:39.156 --> 00:36:40.836 A:middle
那什么时候使用反弹

00:36:40.836 --> 00:36:41.766 A:middle
才合适

00:36:42.306 --> 00:36:43.346 A:middle
一定要有合适的时间

00:36:43.346 --> 00:36:44.196 A:middle
对吧

00:36:44.936 --> 00:36:46.526 A:middle
我们认为当

00:36:46.526 --> 00:36:48.796 A:middle
驱动动态的手势

00:36:48.796 --> 00:36:50.886 A:middle
自身有了动量

00:36:50.886 --> 00:36:52.056 A:middle
你就可以给它

00:36:52.056 --> 00:36:53.066 A:middle
一点点过冲

00:36:54.256 --> 00:36:56.496 A:middle
换句话说

00:36:56.616 --> 00:36:58.126 A:middle
如果一个手势有动量

00:36:58.126 --> 00:37:00.116 A:middle
并且没有任何过冲

00:36:58.126 --> 00:37:00.116 A:middle
并且没有任何过冲

00:37:00.116 --> 00:37:03.506 A:middle
那么跟随它的那个动态

00:37:03.566 --> 00:37:05.236 A:middle
就会像坏了 让人不满意

00:37:05.786 --> 00:37:08.796 A:middle
一个很好的例子就是

00:37:08.796 --> 00:37:09.696 A:middle
Apple 的音乐 App

00:37:10.516 --> 00:37:12.186 A:middle
在屏幕底部

00:37:12.186 --> 00:37:14.076 A:middle
有一个很小的迷你栏

00:37:14.076 --> 00:37:15.796 A:middle
显示正在播放

00:37:15.796 --> 00:37:18.076 A:middle
你可以轻敲这一栏

00:37:18.076 --> 00:37:18.456 A:middle
显示正在播放

00:37:18.946 --> 00:37:22.306 A:middle
由于在查看正在播放

00:37:22.356 --> 00:37:24.316 A:middle
的这个方向

00:37:24.356 --> 00:37:26.286 A:middle
轻敲这一动作没有任何的动量

00:37:26.286 --> 00:37:28.606 A:middle
我们用 100% 阻尼来确保

00:37:28.636 --> 00:37:29.486 A:middle
它不会过冲

00:37:30.126 --> 00:37:32.656 A:middle
但如果你轻扫

00:37:32.736 --> 00:37:34.506 A:middle
离开正在播放

00:37:34.506 --> 00:37:36.566 A:middle
这个方向就会有动量

00:37:37.016 --> 00:37:39.166 A:middle
所以我们用了 80% 阻尼

00:37:39.166 --> 00:37:40.426 A:middle
来获得一些弹性和挤压

00:37:40.426 --> 00:37:42.306 A:middle
让这个手势更加

00:37:42.306 --> 00:37:43.126 A:middle
令人满意

00:37:46.416 --> 00:37:48.766 A:middle
反弹还可以作为一个

00:37:48.766 --> 00:37:50.696 A:middle
实用程序

00:37:51.476 --> 00:37:53.106 A:middle
它能提供有用的提示

00:37:53.176 --> 00:37:54.576 A:middle
告诉你有东西

00:37:54.666 --> 00:37:57.166 A:middle
在屏幕下方

00:37:57.306 --> 00:37:59.056 A:middle
在 iPhone X 上

00:37:59.056 --> 00:38:01.136 A:middle
我们在屏保上引入了两个按钮

00:37:59.056 --> 00:38:01.136 A:middle
我们在屏保上引入了两个按钮

00:38:01.776 --> 00:38:03.056 A:middle
分别是打开手电筒

00:38:03.056 --> 00:38:04.476 A:middle
和打开相机

00:38:06.336 --> 00:38:08.246 A:middle
为了避免无意间错误地

00:38:08.246 --> 00:38:09.906 A:middle
打开手电筒

00:38:09.906 --> 00:38:11.416 A:middle
我们要求用一个更加刻意的

00:38:11.416 --> 00:38:13.976 A:middle
手势来打开手电筒

00:38:14.726 --> 00:38:16.006 A:middle
但是假如你不知道

00:38:16.006 --> 00:38:17.066 A:middle
需要用更加刻意的手势

00:38:17.066 --> 00:38:18.906 A:middle
来打开它

00:38:19.696 --> 00:38:22.466 A:middle
当你轻敲这个按钮

00:38:22.466 --> 00:38:24.206 A:middle
它会以反弹的形式响应你的操作

00:38:24.386 --> 00:38:26.196 A:middle
这个感觉有点好玩

00:38:27.116 --> 00:38:28.756 A:middle
这个暗示告诉你

00:38:28.756 --> 00:38:29.776 A:middle
这个按钮不仅能正常工作

00:38:29.836 --> 00:38:31.466 A:middle
而且它正在响应你

00:38:31.636 --> 00:38:33.146 A:middle
但是它就像在教你

00:38:33.146 --> 00:38:34.836 A:middle
如果你再用力一点按它

00:38:34.836 --> 00:38:37.426 A:middle
它就会打开手电筒了

00:38:37.426 --> 00:38:38.236 A:middle
它就像真的在教你

00:38:38.236 --> 00:38:39.446 A:middle
并通过动态的方向

00:38:39.446 --> 00:38:40.086 A:middle
给予暗示

00:38:40.696 --> 00:38:42.936 A:middle
因此反弹可以用来

00:38:42.936 --> 00:38:47.396 A:middle
暗示这类东西

00:38:47.576 --> 00:38:48.706 A:middle
那么到目前为止

00:38:48.706 --> 00:38:50.806 A:middle
我们都在谈用动态移动事物

00:38:50.866 --> 00:38:52.286 A:middle
或者改变它们的规模

00:38:52.286 --> 00:38:54.096 A:middle
改变它们在屏幕上的

00:38:54.096 --> 00:38:55.596 A:middle
视觉呈现

00:38:56.556 --> 00:38:58.666 A:middle
但是我们能以很多不同的方式

00:38:58.666 --> 00:38:59.386 A:middle
感知动态

00:39:00.226 --> 00:39:01.746 A:middle
比如通过灯光 色彩

00:39:01.776 --> 00:39:04.056 A:middle
或纹理和触觉

00:39:04.866 --> 00:39:05.756 A:middle
甚至是声音

00:39:06.036 --> 00:39:07.876 A:middle
我们许多其他的感官

00:39:08.386 --> 00:39:11.656 A:middle
都能感受到

00:39:11.766 --> 00:39:13.036 A:middle
我们认为这是一个

00:39:13.036 --> 00:39:15.556 A:middle
在调试 App 特征时

00:39:15.666 --> 00:39:17.626 A:middle
让我们走得更远的机遇

00:39:17.626 --> 00:39:18.886 A:middle
不止是动态

00:39:19.946 --> 00:39:21.606 A:middle
通过结合运动的

00:39:21.696 --> 00:39:23.256 A:middle
动态行为与

00:39:23.256 --> 00:39:25.766 A:middle
声音和触觉的动态行为

00:39:26.346 --> 00:39:28.256 A:middle
你可以真正彻底地

00:39:28.256 --> 00:39:29.976 A:middle
改变界面的感受

00:39:35.216 --> 00:39:37.746 A:middle
当你看到 听到

00:39:38.256 --> 00:39:40.036 A:middle
并感觉到手势操作的结果

00:39:40.076 --> 00:39:42.506 A:middle
它可以将本来

00:39:42.506 --> 00:39:43.986 A:middle
只是滑动的行为

00:39:43.986 --> 00:39:45.316 A:middle
变成一个

00:39:45.316 --> 00:39:48.746 A:middle
仿佛是有触感的界面

00:39:49.356 --> 00:39:53.206 A:middle
最后我想谈的是

00:39:53.206 --> 00:39:54.556 A:middle
当你精心制作

00:39:54.556 --> 00:39:56.006 A:middle
App 的特征时

00:39:56.006 --> 00:39:56.396 A:middle
你在想什么

00:39:57.336 --> 00:39:59.086 A:middle
那就是它必须给人连贯的感觉

00:39:59.086 --> 00:40:00.976 A:middle
你始终处于特征中

00:39:59.086 --> 00:40:00.976 A:middle
你始终处于特征中

00:40:01.186 --> 00:40:03.506 A:middle
这是什么意思呢

00:40:04.816 --> 00:40:07.156 A:middle
即便是在你的 App 中

00:40:07.156 --> 00:40:08.726 A:middle
或者是在整个系统上

00:40:08.726 --> 00:40:10.056 A:middle
你必须把单个行为

00:40:10.056 --> 00:40:12.136 A:middle
当作整个行为家族中的一份子来对待

00:40:13.166 --> 00:40:15.206 A:middle
比如在滑动时

00:40:15.706 --> 00:40:17.936 A:middle
当我用滑动操作

00:40:17.936 --> 00:40:19.946 A:middle
向下滑动一个页面时

00:40:19.946 --> 00:40:21.946 A:middle
只要用一个弹性行为

00:40:21.946 --> 00:40:23.196 A:middle
轻敲状态栏

00:40:23.196 --> 00:40:24.176 A:middle
就能回到页面顶端

00:40:24.946 --> 00:40:27.316 A:middle
在这两种情况中

00:40:27.356 --> 00:40:28.626 A:middle
尽管实际上有两种不同的行为

00:40:28.626 --> 00:40:30.766 A:middle
促使它运动

00:40:30.766 --> 00:40:32.086 A:middle
影响这个动作

00:40:32.086 --> 00:40:33.506 A:middle
但页面就像是

00:40:33.506 --> 00:40:34.496 A:middle
以相同的方式运动

00:40:34.546 --> 00:40:35.726 A:middle
和我们有相同的行为

00:40:37.036 --> 00:40:38.276 A:middle
现在它不止适用于

00:40:38.336 --> 00:40:40.576 A:middle
滑动这一单个互动

00:40:41.376 --> 00:40:42.716 A:middle
还适用于你整个 App

00:40:43.236 --> 00:40:45.046 A:middle
如果你有一个好玩的 App

00:40:45.046 --> 00:40:46.016 A:middle
你应该接受它的特征

00:40:46.016 --> 00:40:47.676 A:middle
然后让你整个 App

00:40:47.676 --> 00:40:49.666 A:middle
都展现相同的感觉

00:40:49.876 --> 00:40:50.996 A:middle
一旦人们学会了

00:40:50.996 --> 00:40:52.506 A:middle
App 的一个行为

00:40:53.066 --> 00:40:53.936 A:middle
他们就可以很轻松地

00:40:53.936 --> 00:40:55.666 A:middle
学会另一个

00:40:55.666 --> 00:40:57.146 A:middle
因为我们通过重复来学习

00:40:57.566 --> 00:40:59.636 A:middle
我们学到的东西会

00:40:59.636 --> 00:41:00.896 A:middle
渗透到我们的行为中

00:40:59.636 --> 00:41:00.896 A:middle
渗透到我们的行为中

00:41:06.386 --> 00:41:07.396 A:middle
接下来 我想稍微谈谈

00:41:07.396 --> 00:41:10.156 A:middle
有意图的

00:41:10.186 --> 00:41:12.466 A:middle
定向手势

00:41:12.506 --> 00:41:12.976 A:middle
或者说动态手势

00:41:17.216 --> 00:41:19.146 A:middle
对于一个离散的互动

00:41:19.146 --> 00:41:21.906 A:middle
比如按钮

00:41:21.906 --> 00:41:23.406 A:middle
手势的意图

00:41:23.406 --> 00:41:23.756 A:middle
非常明确

00:41:23.966 --> 00:41:26.086 A:middle
对吧 你们可以在大屏幕上

00:41:26.226 --> 00:41:28.276 A:middle
看到三个很明确的图标

00:41:29.226 --> 00:41:31.256 A:middle
然后我轻敲它们中的一个

00:41:31.256 --> 00:41:32.196 A:middle
结果也很明显

00:41:33.856 --> 00:41:35.096 A:middle
但是 例如轻扫这一手势

00:41:35.216 --> 00:41:37.796 A:middle
意图就不会马上

00:41:37.866 --> 00:41:39.246 A:middle
那么明显了

00:41:39.686 --> 00:41:41.456 A:middle
你可以说意图基本上

00:41:41.456 --> 00:41:43.126 A:middle
藏在手势的运动中

00:41:43.126 --> 00:41:45.176 A:middle
因此解释运动的意思

00:41:45.176 --> 00:41:47.736 A:middle
决定你们应该

00:41:47.736 --> 00:41:50.006 A:middle
对此做些什么

00:41:50.226 --> 00:41:51.786 A:middle
就是我们的工作和任务

00:41:52.276 --> 00:41:53.696 A:middle
我们来看个例子

00:41:55.086 --> 00:41:56.546 A:middle
比如我打了个一对一的

00:41:56.546 --> 00:41:58.046 A:middle
FaceTime 视频通话

00:41:58.046 --> 00:42:01.216 A:middle
在 FaceTime视频通话中

00:41:58.046 --> 00:42:01.216 A:middle
在 FaceTime视频通话中

00:42:01.356 --> 00:42:03.036 A:middle
屏幕角落有一个

00:42:03.036 --> 00:42:04.816 A:middle
小的视频播放器代表着

00:42:04.816 --> 00:42:05.296 A:middle
我自己

00:42:05.396 --> 00:42:07.276 A:middle
这样我就能看到

00:42:07.276 --> 00:42:08.596 A:middle
电话那头的人将看到什么

00:42:09.766 --> 00:42:11.086 A:middle
我们把这个悬浮视频播放器

00:42:11.236 --> 00:42:13.306 A:middle
叫做 PIP 它是画中画的缩写

00:42:14.886 --> 00:42:16.466 A:middle
我们将 PIP 的外表做成是浮动的

00:42:16.466 --> 00:42:18.146 A:middle
这样大家就能明确知道

00:42:18.146 --> 00:42:19.166 A:middle
它是可以被移动的

00:42:20.026 --> 00:42:22.166 A:middle
只要非常轻量地拂动它

00:42:22.166 --> 00:42:23.566 A:middle
它可以被移到

00:42:23.566 --> 00:42:25.846 A:middle
屏幕的任意角落

00:42:27.636 --> 00:42:29.136 A:middle
那么如果我们将它与

00:42:29.296 --> 00:42:31.676 A:middle
播放 暂停 跳过按钮比较

00:42:32.646 --> 00:42:33.546 A:middle
它们的区别

00:42:33.586 --> 00:42:33.826 A:middle
在哪里呢

00:42:35.266 --> 00:42:36.116 A:middle
在这个情况下

00:42:36.116 --> 00:42:38.796 A:middle
我们实际上在处理

00:42:39.076 --> 00:42:39.976 A:middle
四块看不见的区域

00:42:40.656 --> 00:42:42.126 A:middle
我们不能再在屏幕上

00:42:42.126 --> 00:42:44.196 A:middle
看到被轻敲的

00:42:44.196 --> 00:42:45.476 A:middle
三个明显的按钮

00:42:46.066 --> 00:42:47.176 A:middle
我们必须透过手势

00:42:47.176 --> 00:42:49.436 A:middle
看正在发生的运动

00:42:49.436 --> 00:42:52.786 A:middle
然后凭直觉猜出它的意思

00:42:52.786 --> 00:42:54.516 A:middle
我们想把它放到哪个角落

00:42:55.686 --> 00:42:57.236 A:middle
我们把屏幕的这些区域

00:42:57.236 --> 00:42:59.676 A:middle
叫做手势的终点

00:43:00.506 --> 00:43:02.816 A:middle
当轻轻弹出 PIP

00:43:02.816 --> 00:43:04.986 A:middle
我们的目标是找到

00:43:04.986 --> 00:43:06.746 A:middle
我们想要的正确的终点

00:43:07.426 --> 00:43:09.726 A:middle
我们把这叫做

00:43:10.216 --> 00:43:12.306 A:middle
终点和手势意图的一致

00:43:12.986 --> 00:43:17.446 A:middle
一种方法是

00:43:17.596 --> 00:43:18.936 A:middle
当我拖拽 PIP 时

00:43:18.936 --> 00:43:22.046 A:middle
留意追踪最近的终点

00:43:22.226 --> 00:43:24.056 A:middle
这有点用

00:43:24.056 --> 00:43:25.286 A:middle
我能把 PIP 拖动到

00:43:25.286 --> 00:43:29.086 A:middle
屏幕的角落

00:43:29.086 --> 00:43:30.366 A:middle
但一旦我把它拖得有点远了

00:43:30.366 --> 00:43:33.596 A:middle
它就开始不好用了

00:43:33.776 --> 00:43:35.796 A:middle
现在我就需要把 PIP 拖到很远

00:43:35.886 --> 00:43:38.506 A:middle
差不多超过

00:43:38.676 --> 00:43:39.516 A:middle
屏幕的一半

00:43:39.636 --> 00:43:40.836 A:middle
很接近另一端的角落

00:43:40.836 --> 00:43:42.606 A:middle
所以它并没有真的放大

00:43:42.606 --> 00:43:43.046 A:middle
我的手势操作

00:43:43.046 --> 00:43:44.656 A:middle
对我来说不管用

00:43:44.656 --> 00:43:47.056 A:middle
但假如我试着轻拂 PIP

00:43:48.196 --> 00:43:50.586 A:middle
它就会去最近的那个角落

00:43:50.586 --> 00:43:52.036 A:middle
这却不一定是我想要的结果

00:43:52.146 --> 00:43:54.726 A:middle
这儿的问题就是

00:43:54.816 --> 00:43:56.206 A:middle
我们只关注了位置

00:43:56.366 --> 00:43:58.756 A:middle
却忽略了移动 PIP 时

00:43:58.756 --> 00:44:02.236 A:middle
它拥有的动量和速度

00:43:58.756 --> 00:44:02.236 A:middle
它拥有的动量和速度

00:44:03.446 --> 00:44:05.486 A:middle
那么我们要怎么将动量融入到

00:44:06.306 --> 00:44:08.696 A:middle
如何决定我们想去的终点

00:44:08.696 --> 00:44:09.646 A:middle
中去呢

00:44:10.256 --> 00:44:13.396 A:middle
想象一下

00:44:13.396 --> 00:44:15.346 A:middle
我们可以退一步

00:44:15.346 --> 00:44:16.896 A:middle
暂时把终点放在一边

00:44:17.816 --> 00:44:22.326 A:middle
简化这个问题

00:44:22.386 --> 00:44:23.686 A:middle
我最终想要做的是

00:44:23.736 --> 00:44:27.026 A:middle
在屏幕上移动内容

00:44:27.796 --> 00:44:29.206 A:middle
我已经有的是

00:44:29.206 --> 00:44:31.126 A:middle
用滑动来完成它

00:44:31.436 --> 00:44:35.466 A:middle
的大量肌肉记忆

00:44:35.876 --> 00:44:37.186 A:middle
那我们为什么不用这些记忆呢

00:44:38.616 --> 00:44:40.326 A:middle
我们一直在用滑动操作

00:44:40.326 --> 00:44:41.496 A:middle
因此我们就有天生的直觉

00:44:41.496 --> 00:44:44.596 A:middle
能够知道当我滑动时

00:44:44.596 --> 00:44:45.936 A:middle
这些内容能够达到多远

00:44:47.366 --> 00:44:50.096 A:middle
大家能看到

00:44:50.096 --> 00:44:52.706 A:middle
当我滚动 PIP 时

00:44:52.706 --> 00:44:54.586 A:middle
它慢慢地挪动然后速度慢下来了

00:44:54.866 --> 00:44:57.536 A:middle
正是这个我们

00:44:58.176 --> 00:44:59.796 A:middle
从滑动中熟悉的减速

00:45:01.026 --> 00:45:02.896 A:middle
基本上我们在这儿运用这个优势

00:45:02.896 --> 00:45:05.066 A:middle
可以加强

00:45:05.146 --> 00:45:06.906 A:middle
人们从别的地方

00:45:06.906 --> 00:45:07.876 A:middle
学到的东西

00:45:08.146 --> 00:45:10.786 A:middle
即行为仅仅是在执行

00:45:10.786 --> 00:45:15.426 A:middle
系统被期待做的事情

00:45:15.566 --> 00:45:17.756 A:middle
现在这个新的 基于假定的

00:45:18.126 --> 00:45:21.566 A:middle
想象中的 PIP 位置并不是真的

00:45:21.566 --> 00:45:22.756 A:middle
我们将不会在

00:45:22.756 --> 00:45:24.056 A:middle
这个界面中展示 PIP

00:45:24.266 --> 00:45:25.826 A:middle
我们把这个叫做预测

00:45:27.136 --> 00:45:28.656 A:middle
我们获得了 PIP

00:45:28.656 --> 00:45:30.526 A:middle
被投掷时的速度

00:45:30.936 --> 00:45:32.066 A:middle
我们混入了减速率

00:45:32.066 --> 00:45:34.336 A:middle
并最终得到了

00:45:34.336 --> 00:45:35.926 A:middle
如果我们滑动它

00:45:36.196 --> 00:45:40.936 A:middle
将得到的预测位置

00:45:41.166 --> 00:45:42.666 A:middle
当投掷时我们不需要

00:45:42.666 --> 00:45:44.346 A:middle
找离 PIP 最近的终点

00:45:45.056 --> 00:45:47.096 A:middle
相反 我们可以计算预计位置

00:45:47.096 --> 00:45:50.946 A:middle
并直接移动到那儿

00:45:51.476 --> 00:45:53.346 A:middle
当我仅用一个轻量级的拂动

00:45:53.346 --> 00:45:55.036 A:middle
从屏幕的一个角落

00:45:55.036 --> 00:45:56.216 A:middle
轻扫至另一个角落时

00:45:56.306 --> 00:45:58.956 A:middle
它移动到了我预期的位置

00:46:03.176 --> 00:46:05.306 A:middle
因此预测动量这一概念

00:46:05.306 --> 00:46:08.346 A:middle
十分有用

00:46:08.766 --> 00:46:10.806 A:middle
我们认为它非常重要

00:46:10.806 --> 00:46:12.136 A:middle
我想和你们分享一些其中的代码

00:46:12.136 --> 00:46:13.536 A:middle
这样你们可以在自己的 App 中

00:46:13.536 --> 00:46:16.196 A:middle
也这样做

00:46:16.336 --> 00:46:17.596 A:middle
这个功能将用到一个速度

00:46:17.596 --> 00:46:19.366 A:middle
就像 PIP 位置的速度那样

00:46:19.366 --> 00:46:22.086 A:middle
和减速率

00:46:22.956 --> 00:46:24.966 A:middle
它会给你一个值

00:46:24.996 --> 00:46:28.206 A:middle
你可以把它当作动态操作的终点

00:46:29.076 --> 00:46:29.876 A:middle
非常简单

00:46:30.556 --> 00:46:33.056 A:middle
我们来看一下 FaceTime 视频通话

00:46:33.056 --> 00:46:35.606 A:middle
滑动手势结束代码

00:46:35.606 --> 00:46:38.556 A:middle
大家能看到

00:46:38.556 --> 00:46:39.186 A:middle
我只用了

00:46:39.186 --> 00:46:41.326 A:middle
UIScrollView.DecelerationRate 这一指令

00:46:41.506 --> 00:46:43.106 A:middle
这是建立在

00:46:43.106 --> 00:46:44.556 A:middle
人们熟悉滑动操作

00:46:44.556 --> 00:46:46.186 A:middle
和滑动内容

00:46:46.186 --> 00:46:47.106 A:middle
能移动到多远的基础上

00:46:48.256 --> 00:46:50.966 A:middle
而且我也用了这一认知

00:46:51.176 --> 00:46:51.846 A:middle
来进行预测

00:46:52.226 --> 00:46:53.536 A:middle
我得到了 PIP 的速度

00:46:53.606 --> 00:46:55.546 A:middle
和减速率

00:46:55.546 --> 00:46:57.976 A:middle
然后创建了想象中的 PIP 位置

00:46:58.546 --> 00:47:01.336 A:middle
我后来正是用了这个想象中的

00:46:58.546 --> 00:47:01.336 A:middle
我后来正是用了这个想象中的

00:47:01.336 --> 00:47:03.196 A:middle
预测位置

00:47:03.196 --> 00:47:05.246 A:middle
作为最近的角落位置

00:47:06.246 --> 00:47:07.616 A:middle
然后重新定位

00:47:07.616 --> 00:47:09.166 A:middle
将 PIP 送到那里

00:47:11.236 --> 00:47:13.406 A:middle
因此通过预测

00:47:13.836 --> 00:47:17.156 A:middle
找到一个位置的终点

00:47:17.216 --> 00:47:19.266 A:middle
的这一想法对拖拽

00:47:19.416 --> 00:47:21.026 A:middle
或轻扫内容

00:47:21.026 --> 00:47:22.366 A:middle
非常有用

00:47:22.366 --> 00:47:23.676 A:middle
你必须尊重

00:47:23.676 --> 00:47:24.856 A:middle
手势的动量

00:47:26.396 --> 00:47:27.516 A:middle
但是这个预测功能

00:47:27.516 --> 00:47:29.706 A:middle
不仅仅对位置有用

00:47:29.706 --> 00:47:34.126 A:middle
你还能在大小旋转

00:47:35.026 --> 00:47:36.506 A:middle
甚至大小和旋转的结合中

00:47:36.506 --> 00:47:36.876 A:middle
运用它

00:47:37.866 --> 00:47:39.496 A:middle
这是一个多功能的工具

00:47:39.496 --> 00:47:40.696 A:middle
在使用时你

00:47:40.696 --> 00:47:41.796 A:middle
必须确保

00:47:41.836 --> 00:47:43.866 A:middle
尊重手势的动量

00:47:43.866 --> 00:47:45.856 A:middle
并且让它感到

00:47:46.036 --> 00:47:47.326 A:middle
App 中的动态动作

00:47:47.766 --> 00:47:49.186 A:middle
是你自身的延伸

00:47:51.086 --> 00:47:54.496 A:middle
这就是用运动来设计

00:47:54.976 --> 00:47:55.936 A:middle
动态运动

00:47:56.896 --> 00:47:58.916 A:middle
行为必须一直

00:47:58.916 --> 00:48:00.986 A:middle
无缝地与互动

00:47:58.916 --> 00:48:00.986 A:middle
无缝地与互动

00:48:01.106 --> 00:48:02.946 A:middle
完美配合

00:48:05.276 --> 00:48:06.976 A:middle
我们必须依靠那个大家都有的

00:48:06.976 --> 00:48:08.646 A:middle
对我们身边现实世界

00:48:08.646 --> 00:48:10.086 A:middle
的直觉

00:48:10.086 --> 00:48:11.916 A:middle
那就是 当我们还是孩子时

00:48:11.916 --> 00:48:13.316 A:middle
就已经知道的

00:48:13.366 --> 00:48:14.766 A:middle
在现实世界中物体是怎么运动的

00:48:14.766 --> 00:48:17.506 A:middle
并时刻准备着

00:48:17.906 --> 00:48:19.236 A:middle
将其运用到动态界面中

00:48:21.076 --> 00:48:22.246 A:middle
你们要记住

00:48:22.246 --> 00:48:23.416 A:middle
反弹一定是

00:48:23.476 --> 00:48:24.146 A:middle
有目的的

00:48:24.856 --> 00:48:26.346 A:middle
想一想你为什么在用它

00:48:26.456 --> 00:48:27.666 A:middle
用它是否合适

00:48:28.336 --> 00:48:29.686 A:middle
还要确保当你增加特征

00:48:30.206 --> 00:48:32.856 A:middle
和纹理时

00:48:32.856 --> 00:48:33.726 A:middle
你将其与这个实用工具

00:48:33.766 --> 00:48:34.326 A:middle
完美平衡

00:48:35.066 --> 00:48:38.866 A:middle
最后记住要预测动量

00:48:39.226 --> 00:48:40.836 A:middle
不要光用位置

00:48:40.836 --> 00:48:41.826 A:middle
而要利用所有可用信息

00:48:41.826 --> 00:48:43.586 A:middle
来确保动作

00:48:43.586 --> 00:48:45.576 A:middle
和人们真正

00:48:45.576 --> 00:48:47.166 A:middle
想要挪动的地方

00:48:47.166 --> 00:48:47.616 A:middle
是一致的

00:48:48.166 --> 00:48:51.376 A:middle
并且将他们带过去

00:48:51.376 --> 00:48:52.356 A:middle
那么接下来我将

00:48:52.356 --> 00:48:54.126 A:middle
把舞台交给我的同事 Marcos

00:48:54.276 --> 00:48:56.146 A:middle
由他为大家进一步介绍

00:48:56.146 --> 00:48:57.466 A:middle
如何流畅地响应

00:48:57.466 --> 00:48:58.626 A:middle
手势和互动

00:48:59.006 --> 00:48:59.956 A:middle
谢谢大家

00:49:00.516 --> 00:49:05.086 A:middle
[ 掌声 ]

00:49:05.586 --> 00:49:06.066 A:middle
&gt;&gt; 你刚刚说得很棒

00:49:06.836 --> 00:49:07.906 A:middle
谢谢 Nathan

00:49:13.446 --> 00:49:14.176 A:middle
大家好

00:49:15.006 --> 00:49:15.936 A:middle
我是 Marcos

00:49:16.726 --> 00:49:18.816 A:middle
到目前为止 我们已经看到了

00:49:18.816 --> 00:49:20.266 A:middle
流畅度在设计界面时的

00:49:20.266 --> 00:49:20.956 A:middle
重要性

00:49:21.786 --> 00:49:24.096 A:middle
很大一部分来自于

00:49:24.096 --> 00:49:25.366 A:middle
你和设备的互动

00:49:26.776 --> 00:49:28.366 A:middle
接下来我将为大家展示

00:49:28.366 --> 00:49:29.996 A:middle
轻触屏幕

00:49:29.996 --> 00:49:32.566 A:middle
如何编程你 App 中的手势

00:49:33.036 --> 00:49:34.316 A:middle
以及如何设计这些手势

00:49:34.366 --> 00:49:36.106 A:middle
来为你的界面

00:49:36.106 --> 00:49:38.476 A:middle
捕捉所有的表达和意图

00:49:42.356 --> 00:49:43.206 A:middle
我们首先来看看

00:49:43.206 --> 00:49:44.656 A:middle
一些最主要的手势的设计

00:49:44.656 --> 00:49:46.936 A:middle
比如轻敲和轻扫

00:49:47.966 --> 00:49:48.956 A:middle
然后我们将看到一些

00:49:48.956 --> 00:49:50.586 A:middle
在给界面

00:49:50.586 --> 00:49:51.606 A:middle
设计手势时的

00:49:51.606 --> 00:49:52.956 A:middle
互动原则

00:49:54.176 --> 00:49:55.686 A:middle
最后我们将会看到

00:49:55.686 --> 00:49:57.386 A:middle
如何处理多个手势

00:49:57.386 --> 00:49:59.376 A:middle
如何将它们结合到你的 App 中

00:50:00.116 --> 00:50:01.956 A:middle
那么首先我们来看一下

00:50:01.956 --> 00:50:04.926 A:middle
一个看起来很简单的手势 轻敲

00:50:05.786 --> 00:50:07.006 A:middle
大家可能会觉得

00:50:07.006 --> 00:50:09.786 A:middle
轻敲不需要设计

00:50:09.786 --> 00:50:11.396 A:middle
但是你们将看到

00:50:11.396 --> 00:50:13.006 A:middle
它动作中的细微差别

00:50:13.006 --> 00:50:13.766 A:middle
要比看上去多

00:50:14.896 --> 00:50:16.926 A:middle
在这个例子中

00:50:16.926 --> 00:50:18.856 A:middle
我们将在计算器 App 中

00:50:18.856 --> 00:50:19.983 A:middle
轻敲一个按钮

00:50:24.476 --> 00:50:26.216 A:middle
我们要记住的第一件事就是

00:50:26.216 --> 00:50:27.276 A:middle
当我们轻触按钮时

00:50:27.276 --> 00:50:29.346 A:middle
它必须马上高亮

00:50:30.226 --> 00:50:31.246 A:middle
这告诉我

00:50:31.246 --> 00:50:32.916 A:middle
按钮能正常工作

00:50:32.916 --> 00:50:34.026 A:middle
系统也在响应我的手势

00:50:34.766 --> 00:50:36.526 A:middle
但是只有当手指离开屏幕

00:50:36.576 --> 00:50:39.006 A:middle
我们才正式完成了轻敲这一动作

00:50:39.976 --> 00:50:41.866 A:middle
第二件要记住的事情是

00:50:41.866 --> 00:50:43.456 A:middle
在轻敲区域附近

00:50:43.456 --> 00:50:44.006 A:middle
创建一圈额外的边缘

00:50:44.636 --> 00:50:46.516 A:middle
它将让我们的轻敲

00:50:46.516 --> 00:50:48.506 A:middle
更加舒服

00:50:48.506 --> 00:50:50.336 A:middle
并且避免在互动过程中

00:50:50.336 --> 00:50:51.906 A:middle
额外移动后轻触意外取消

00:50:52.376 --> 00:50:54.746 A:middle
正如我的同事 Chan 刚才说的那样

00:50:54.746 --> 00:50:56.276 A:middle
我很可能

00:50:56.276 --> 00:50:57.386 A:middle
在触碰按钮后

00:50:57.456 --> 00:50:58.566 A:middle
想改变主意

00:50:59.066 --> 00:51:00.686 A:middle
那么如果我把手指

00:50:59.066 --> 00:51:00.686 A:middle
那么如果我把手指

00:51:00.686 --> 00:51:02.976 A:middle
拖拽出轻敲区域并且抬起手指

00:51:02.976 --> 00:51:04.346 A:middle
就能取消轻敲

00:51:05.056 --> 00:51:07.266 A:middle
同样地 如果我轻扫回按钮

00:51:07.266 --> 00:51:09.896 A:middle
它应该能再一次高亮并让我

00:51:09.896 --> 00:51:11.226 A:middle
确认完成轻敲

00:51:12.956 --> 00:51:17.756 A:middle
接下来 要讲的手势是轻扫

00:51:18.666 --> 00:51:19.816 A:middle
它是 iOS 最核心的手势之一

00:51:19.856 --> 00:51:21.786 A:middle
并且它在许多动作中

00:51:21.786 --> 00:51:23.466 A:middle
都会被用到

00:51:23.466 --> 00:51:25.316 A:middle
比如滑动 拖拽和分页

00:51:26.606 --> 00:51:27.826 A:middle
但是无论你轻扫的目的是什么

00:51:27.826 --> 00:51:30.006 A:middle
或者随便你怎么称呼它

00:51:30.006 --> 00:51:31.506 A:middle
手势最核心的原则

00:51:31.506 --> 00:51:32.106 A:middle
都是一样的

00:51:32.106 --> 00:51:35.026 A:middle
在这个例子中

00:51:35.026 --> 00:51:36.626 A:middle
我们将用轻扫这一手势

00:51:36.626 --> 00:51:37.116 A:middle
将这一图像拖动到屏幕右侧

00:51:38.026 --> 00:51:39.956 A:middle
这个互动从我带着拖动的目的

00:51:39.956 --> 00:51:40.976 A:middle
手指触碰到图像的那一瞬间

00:51:40.976 --> 00:51:41.976 A:middle
就开始了

00:51:46.696 --> 00:51:49.126 A:middle
但在我们能确认它是轻扫前

00:51:49.126 --> 00:51:50.716 A:middle
这一触碰必须移动

00:51:50.716 --> 00:51:51.576 A:middle
一定距离

00:51:52.166 --> 00:51:53.876 A:middle
我们知道分辨轻扫和

00:51:53.876 --> 00:51:54.976 A:middle
其他手势

00:51:55.516 --> 00:51:56.956 A:middle
这段距离就叫做滞后现象

00:51:56.956 --> 00:52:00.006 A:middle
在 iOS 系统中 通常表现为 10 个点

00:51:56.956 --> 00:52:00.006 A:middle
在 iOS 系统中 通常表现为 10 个点

00:52:01.456 --> 00:52:03.266 A:middle
因此一旦触碰达到了这个距离

00:52:03.266 --> 00:52:04.776 A:middle
轻扫就开始了

00:52:05.976 --> 00:52:07.706 A:middle
这也是确定

00:52:07.706 --> 00:52:09.086 A:middle
轻扫方向的时候

00:52:09.516 --> 00:52:11.366 A:middle
确定它是水平的

00:52:11.366 --> 00:52:12.136 A:middle
还是垂直的

00:52:12.526 --> 00:52:13.796 A:middle
我们不需要真正拿它举例

00:52:13.796 --> 00:52:15.766 A:middle
但在某些情况下

00:52:15.766 --> 00:52:16.626 A:middle
这真的非常有用

00:52:16.626 --> 00:52:19.356 A:middle
那么既然已经检测到了轻扫

00:52:19.356 --> 00:52:21.976 A:middle
这就是一个手势最开始的位置

00:52:22.816 --> 00:52:24.746 A:middle
之后 轻触这一手势

00:52:24.746 --> 00:52:26.516 A:middle
和这个图像就成为一体

00:52:26.516 --> 00:52:27.686 A:middle
同步运动

00:52:28.286 --> 00:52:29.426 A:middle
我们必须尊重相对位置

00:52:29.426 --> 00:52:31.106 A:middle
坚决不要

00:52:31.106 --> 00:52:32.396 A:middle
以图像中心

00:52:32.396 --> 00:52:33.186 A:middle
为拖拽点

00:52:34.266 --> 00:52:35.456 A:middle
在拖拽过程中

00:52:35.456 --> 00:52:36.926 A:middle
我们还要留意

00:52:36.926 --> 00:52:38.576 A:middle
位置和速度

00:52:38.576 --> 00:52:40.136 A:middle
当拖拽结束

00:52:40.136 --> 00:52:41.036 A:middle
我们不使用最后的位置

00:52:41.406 --> 00:52:42.846 A:middle
而是用触碰历史

00:52:42.966 --> 00:52:44.876 A:middle
来确保所有的动作

00:52:44.876 --> 00:52:46.896 A:middle
都流畅地转移到了图片中

00:52:50.296 --> 00:52:52.286 A:middle
正如大家看到的

00:52:52.316 --> 00:52:53.906 A:middle
轻触和内容应该同步运动

00:52:54.436 --> 00:52:56.136 A:middle
一对一追踪

00:52:56.136 --> 00:52:56.806 A:middle
十分重要

00:52:57.406 --> 00:52:59.436 A:middle
当轻扫或拖拽时

00:52:59.436 --> 00:53:00.696 A:middle
内容必须和手势

00:52:59.436 --> 00:53:00.696 A:middle
内容必须和手势

00:53:00.696 --> 00:53:01.326 A:middle
联结在一起

00:53:02.566 --> 00:53:04.516 A:middle
这就是 iOS 的原则之一

00:53:05.086 --> 00:53:06.706 A:middle
你用了滑动这一手势

00:53:06.706 --> 00:53:08.106 A:middle
让设备使用起来感到自然

00:53:08.106 --> 00:53:08.466 A:middle
而有直觉

00:53:08.996 --> 00:53:11.406 A:middle
一旦轻触和内容

00:53:11.406 --> 00:53:13.196 A:middle
不再一对一追踪

00:53:13.196 --> 00:53:14.446 A:middle
我们立刻就能注意到

00:53:14.446 --> 00:53:16.076 A:middle
这是非常明显

00:53:16.076 --> 00:53:16.646 A:middle
并且令人期待的

00:53:17.106 --> 00:53:18.346 A:middle
在滑动的情况下

00:53:18.406 --> 00:53:20.106 A:middle
它告诉我们

00:53:20.106 --> 00:53:21.836 A:middle
我们已经到达了所有内容的底部

00:53:22.216 --> 00:53:25.826 A:middle
但是一对一追踪

00:53:25.826 --> 00:53:27.106 A:middle
不限于轻触屏幕

00:53:27.686 --> 00:53:30.096 A:middle
比如 在 Apple TV 上操纵用户界面

00:53:30.096 --> 00:53:32.426 A:middle
就是根据这一理念设计的

00:53:33.486 --> 00:53:34.686 A:middle
即便轻触没有直接

00:53:34.686 --> 00:53:35.796 A:middle
操纵内容

00:53:35.796 --> 00:53:37.316 A:middle
在手势和界面间

00:53:37.316 --> 00:53:38.736 A:middle
获得直接联系

00:53:38.816 --> 00:53:40.436 A:middle
也让你能

00:53:40.436 --> 00:53:42.106 A:middle
操控整个动作

00:53:42.106 --> 00:53:43.246 A:middle
并让互动富有直觉

00:53:47.256 --> 00:53:48.776 A:middle
设计手势的另外一个

00:53:48.776 --> 00:53:50.146 A:middle
核心原则是

00:53:50.146 --> 00:53:51.366 A:middle
在互动过程中

00:53:51.366 --> 00:53:52.456 A:middle
持续提供反馈

00:53:52.796 --> 00:53:54.176 A:middle
这不仅限于

00:53:54.176 --> 00:53:55.166 A:middle
轻扫或拖拽

00:53:55.706 --> 00:53:57.536 A:middle
还适用于所有互动

00:53:58.146 --> 00:53:59.706 A:middle
如果你们再回过头来

00:53:59.706 --> 00:54:00.956 A:middle
看看 iPhone X 上的闪光灯按钮

00:53:59.706 --> 00:54:00.956 A:middle
看看 iPhone X 上的闪光灯按钮

00:54:00.956 --> 00:54:03.296 A:middle
它的大小

00:54:03.626 --> 00:54:05.176 A:middle
会根据我触碰的压力而变化

00:54:05.786 --> 00:54:06.426 A:middle
这就让我对自己的动作

00:54:06.426 --> 00:54:07.846 A:middle
有把握

00:54:08.136 --> 00:54:09.376 A:middle
它让我知道

00:54:09.376 --> 00:54:11.206 A:middle
系统正在响应我的手势

00:54:11.206 --> 00:54:12.946 A:middle
但它同时也告诉我

00:54:12.946 --> 00:54:14.706 A:middle
再按得用力些

00:54:14.706 --> 00:54:15.306 A:middle
就能打开闪光灯

00:54:15.736 --> 00:54:19.966 A:middle
另一个持续反馈的例子是

00:54:19.966 --> 00:54:21.446 A:middle
Apple TV 上的焦点引擎

00:54:22.466 --> 00:54:23.606 A:middle
Siri 遥控器上的运动

00:54:23.606 --> 00:54:26.486 A:middle
一直显示在屏幕上

00:54:26.956 --> 00:54:28.596 A:middle
它会显示

00:54:28.596 --> 00:54:30.456 A:middle
当前选中的项目

00:54:30.456 --> 00:54:31.736 A:middle
改变选中的项目

00:54:31.736 --> 00:54:33.666 A:middle
选中的方向就会

00:54:33.666 --> 00:54:37.516 A:middle
跟随着移动

00:54:37.736 --> 00:54:39.286 A:middle
因此 让我们的用户界面

00:54:39.286 --> 00:54:41.176 A:middle
在手势操作过程中及时响应

00:54:41.176 --> 00:54:42.496 A:middle
对提供流畅的体验至关重要

00:54:42.886 --> 00:54:44.416 A:middle
为此

00:54:44.416 --> 00:54:46.146 A:middle
当给出手势操作时

00:54:46.146 --> 00:54:47.566 A:middle
你应该避免做那些

00:54:47.566 --> 00:54:48.906 A:middle
仅会在结束才会被检测到的手势

00:54:48.906 --> 00:54:51.566 A:middle
比如 UI Swipe Gesture Recognizer （轻扫）

00:54:52.236 --> 00:54:53.586 A:middle
你应该用真实的轻触

00:54:53.586 --> 00:54:54.876 A:middle
或其他的

00:54:54.926 --> 00:54:56.916 A:middle
手势识别器

00:54:56.916 --> 00:54:58.306 A:middle
提供关于手势的

00:54:58.306 --> 00:54:59.466 A:middle
所有可能信息

00:55:00.586 --> 00:55:01.846 A:middle
因此不止是位置

00:55:01.846 --> 00:55:03.996 A:middle
还有轻触的速度

00:55:04.266 --> 00:55:07.886 A:middle
压力和大小

00:55:08.096 --> 00:55:10.106 A:middle
然而在大多数情况下

00:55:10.106 --> 00:55:12.006 A:middle
界面必须对多个手势

00:55:12.006 --> 00:55:12.856 A:middle
做出响应

00:55:13.586 --> 00:55:14.836 A:middle
当你不停地往 App 中加入特征

00:55:14.836 --> 00:55:16.766 A:middle
手势的复杂程度

00:55:16.766 --> 00:55:19.296 A:middle
和个数也都会增加

00:55:19.836 --> 00:55:21.976 A:middle
比如说

00:55:21.976 --> 00:55:23.476 A:middle
在几乎所有采用滚动视图的用户界面中

00:55:23.476 --> 00:55:25.196 A:middle
轻触和轻扫等

00:55:25.196 --> 00:55:26.996 A:middle
其他手势会彼此竞争

00:55:27.476 --> 00:55:29.116 A:middle
就像在这个例子中

00:55:29.116 --> 00:55:30.846 A:middle
我可以滑动联系人列表

00:55:30.846 --> 00:55:32.306 A:middle
或自由地轻触他们中的任意一个

00:55:32.306 --> 00:55:33.486 A:middle
进行预览

00:55:34.996 --> 00:55:36.846 A:middle
假如在得到任何反馈前

00:55:36.846 --> 00:55:39.006 A:middle
我必须等待最终手势

00:55:39.006 --> 00:55:41.656 A:middle
那么就会带来延迟

00:55:42.276 --> 00:55:43.566 A:middle
在那段等待时间中

00:55:43.566 --> 00:55:44.566 A:middle
界面就像是

00:55:44.566 --> 00:55:45.236 A:middle
不在反应

00:55:45.726 --> 00:55:48.306 A:middle
为此 我们必须

00:55:48.306 --> 00:55:49.896 A:middle
从动作的一开始

00:55:50.146 --> 00:55:51.536 A:middle
就检测所有可能的手势

00:55:52.106 --> 00:55:53.456 A:middle
一旦我们确认了意图

00:55:53.456 --> 00:55:55.286 A:middle
就取消所有

00:55:55.286 --> 00:55:55.976 A:middle
其他手势

00:55:58.556 --> 00:55:59.856 A:middle
那么我们回过头来看看 刚刚那个例子

00:55:59.856 --> 00:56:01.756 A:middle
我开始按压联系人

00:55:59.856 --> 00:56:01.756 A:middle
我开始按压联系人

00:56:01.756 --> 00:56:03.646 A:middle
但是后来决定

00:56:03.646 --> 00:56:04.166 A:middle
我要滑动

00:56:04.836 --> 00:56:06.426 A:middle
也就是在那个时候

00:56:06.426 --> 00:56:08.336 A:middle
我们取消了三维触控动作

00:56:08.336 --> 00:56:09.956 A:middle
过渡到了正确的手势

00:56:14.116 --> 00:56:15.506 A:middle
然而有时

00:56:15.506 --> 00:56:17.006 A:middle
延迟是不可避免的

00:56:17.816 --> 00:56:19.496 A:middle
比如每次我们在用户界面中双击时

00:56:19.496 --> 00:56:21.306 A:middle
所有正常的触摸

00:56:21.306 --> 00:56:22.716 A:middle
都会被延迟

00:56:23.596 --> 00:56:25.446 A:middle
系统必须等到触摸结束之后

00:56:25.446 --> 00:56:27.366 A:middle
才能分辨这是单次轻触

00:56:27.366 --> 00:56:27.936 A:middle
还是双击

00:56:28.476 --> 00:56:32.146 A:middle
在这个例子中

00:56:32.146 --> 00:56:33.576 A:middle
由于我可以双击以缩放照片

00:56:33.726 --> 00:56:36.336 A:middle
轻触以显示 App 菜单

00:56:36.336 --> 00:56:38.766 A:middle
就被延迟了大约半秒钟

00:56:39.826 --> 00:56:41.056 A:middle
因此当为你的 App 设计手势时

00:56:41.056 --> 00:56:42.676 A:middle
你应该

00:56:42.676 --> 00:56:44.256 A:middle
意识到这些情况

00:56:44.256 --> 00:56:45.516 A:middle
并尽可能想办法

00:56:45.516 --> 00:56:46.046 A:middle
避免这些延迟

00:56:49.216 --> 00:56:51.406 A:middle
那么来总结一下

00:56:51.406 --> 00:56:53.506 A:middle
我们已经看过了如何设计一些核心手势

00:56:53.616 --> 00:56:54.826 A:middle
比如轻触和轻扫

00:56:55.496 --> 00:56:56.636 A:middle
我们看到了内容和轻触手势

00:56:56.636 --> 00:57:00.326 A:middle
必须一对一地移动

00:56:56.636 --> 00:57:00.326 A:middle
必须一对一地移动

00:57:00.536 --> 00:57:02.536 A:middle
这是 iOS 的核心理念之一

00:57:03.426 --> 00:57:04.286 A:middle
在互动的全过程中

00:57:04.316 --> 00:57:05.836 A:middle
你还要持续提供反馈

00:57:05.836 --> 00:57:08.106 A:middle
并且当出现多个手势时

00:57:08.106 --> 00:57:10.146 A:middle
从一开始就要

00:57:10.146 --> 00:57:11.866 A:middle
同步监测它们

00:57:12.416 --> 00:57:15.246 A:middle
现在我想把舞台交还给 Chan

00:57:15.246 --> 00:57:16.876 A:middle
他将谈谈

00:57:16.876 --> 00:57:19.106 A:middle
使用流畅的界面

00:57:19.456 --> 00:57:19.976 A:middle
谢谢大家

00:57:20.516 --> 00:57:25.196 A:middle
[ 掌声 ]

00:57:25.696 --> 00:57:26.086 A:middle
&gt;&gt; 干得漂亮

00:57:28.446 --> 00:57:29.656 A:middle
好的 我又回来了

00:57:30.776 --> 00:57:32.046 A:middle
我们刚刚学习了

00:57:32.046 --> 00:57:33.816 A:middle
如何打造

00:57:34.216 --> 00:57:35.466 A:middle
和我们一样流畅

00:57:35.506 --> 00:57:37.636 A:middle
能及时响应的

00:57:37.636 --> 00:57:37.886 A:middle
活跃的界面

00:57:38.746 --> 00:57:39.796 A:middle
那么既然我们现在

00:57:39.796 --> 00:57:41.096 A:middle
已经有点得心应手了

00:57:41.096 --> 00:57:41.926 A:middle
让我们来谈谈

00:57:41.926 --> 00:57:43.036 A:middle
在流畅界面的

00:57:43.036 --> 00:57:44.646 A:middle
媒介中工作

00:57:44.676 --> 00:57:45.586 A:middle
的一些考量

00:57:46.136 --> 00:57:47.816 A:middle
首先就是教学

00:57:48.706 --> 00:57:50.716 A:middle
手势界面的一个缺点在于

00:57:50.716 --> 00:57:52.406 A:middle
它不能立刻确定

00:57:52.526 --> 00:57:55.476 A:middle
究竟是哪个手势

00:57:55.826 --> 00:57:57.266 A:middle
我们必须友善并机智地

00:57:57.266 --> 00:57:59.376 A:middle
以一种友好

00:57:59.376 --> 00:58:00.476 A:middle
吸引人的方式

00:57:59.376 --> 00:58:00.476 A:middle
吸引人的方式

00:58:00.476 --> 00:58:01.336 A:middle
引导用户

00:58:02.716 --> 00:58:04.196 A:middle
一种方法是

00:58:04.196 --> 00:58:05.606 A:middle
利用视觉线索

00:58:06.316 --> 00:58:08.136 A:middle
它们充斥着世界

00:58:08.136 --> 00:58:08.936 A:middle
对吧

00:58:09.726 --> 00:58:10.996 A:middle
你只需学习一次

00:58:10.996 --> 00:58:12.116 A:middle
然后就可以到处用它们

00:58:12.116 --> 00:58:12.986 A:middle
它们非常便携

00:58:12.986 --> 00:58:15.226 A:middle
当你一看到它

00:58:15.226 --> 00:58:16.046 A:middle
就会知道如何使用

00:58:17.686 --> 00:58:19.156 A:middle
我们已经在 iOS 中

00:58:19.156 --> 00:58:20.766 A:middle
试着建立起相似的习惯

00:58:21.106 --> 00:58:22.146 A:middle
这里有一些例子

00:58:23.196 --> 00:58:24.396 A:middle
这里有一列滚动内容

00:58:24.396 --> 00:58:25.726 A:middle
你可以在底部

00:58:25.726 --> 00:58:27.566 A:middle
裁剪掉一些内容

00:58:27.566 --> 00:58:28.786 A:middle
来表示下面还有更多内容

00:58:28.836 --> 00:58:30.596 A:middle
让人试着发现

00:58:30.596 --> 00:58:31.666 A:middle
下面还有什么

00:58:31.706 --> 00:58:34.036 A:middle
假如我们处理的是好几页的内容

00:58:34.036 --> 00:58:36.106 A:middle
那就可以用页面指示物

00:58:36.106 --> 00:58:37.916 A:middle
来表明

00:58:37.916 --> 00:58:39.576 A:middle
有好几页的内容

00:58:40.316 --> 00:58:41.676 A:middle
对于滑动窗口内容

00:58:41.676 --> 00:58:42.636 A:middle
你能用

00:58:42.636 --> 00:58:44.166 A:middle
像这样的一个

00:58:44.166 --> 00:58:46.646 A:middle
把手来暗示它是

00:58:46.646 --> 00:58:47.776 A:middle
可以被抓取并滑动的

00:58:49.326 --> 00:58:50.926 A:middle
另外一个可以用到的技术是

00:58:50.926 --> 00:58:53.146 A:middle
把互动元素提高到

00:58:53.146 --> 00:58:54.136 A:middle
一个单独的平面

00:58:54.566 --> 00:58:55.946 A:middle
假如你有一个互动元素

00:58:55.946 --> 00:58:57.576 A:middle
将它提升到单独的平面

00:58:57.626 --> 00:58:58.676 A:middle
可以帮助你

00:58:58.716 --> 00:59:00.286 A:middle
将它与其他内容区分开来

00:58:58.716 --> 00:59:00.286 A:middle
将它与其他内容区分开来

00:59:01.586 --> 00:59:03.006 A:middle
一个很好的例子是

00:59:03.006 --> 00:59:04.056 A:middle
打开/关闭按钮

00:59:04.496 --> 00:59:05.696 A:middle
我们想要表明

00:59:05.696 --> 00:59:07.136 A:middle
开关的旋钮是可以被抓取的

00:59:07.586 --> 00:59:09.396 A:middle
因此我们把它 提升到了另一个平面

00:59:10.036 --> 00:59:11.656 A:middle
这在视觉上就将其分开

00:59:11.816 --> 00:59:13.776 A:middle
并且展现了它可以被抓取的本质

00:59:14.696 --> 00:59:16.096 A:middle
因此像这样

00:59:16.456 --> 00:59:17.716 A:middle
在界面上方的

00:59:17.716 --> 00:59:19.406 A:middle
悬浮元素 互动元素

00:59:19.556 --> 00:59:20.816 A:middle
能表明它们是可以被抓取的

00:59:21.506 --> 00:59:26.136 A:middle
接下来我们将用动作

00:59:26.136 --> 00:59:28.156 A:middle
来展示 而不是简单地说

00:59:28.516 --> 00:59:30.136 A:middle
如何使用界面

00:59:30.426 --> 00:59:32.356 A:middle
我们可以用静止的动画

00:59:32.396 --> 00:59:34.106 A:middle
来增强动态行为

00:59:35.006 --> 00:59:35.976 A:middle
一个例子就是

00:59:36.006 --> 00:59:36.446 A:middle
Safari 浏览器

00:59:37.076 --> 00:59:39.166 A:middle
在 Safari 浏览器中

00:59:39.166 --> 00:59:40.456 A:middle
左上角靠近标签页的地方有这个 x 型图标

00:59:40.456 --> 00:59:41.816 A:middle
当你轻敲那个按钮

00:59:41.866 --> 00:59:43.646 A:middle
标签页就向左轻扫了

00:59:43.646 --> 00:59:44.766 A:middle
表明它已被关闭

00:59:45.596 --> 00:59:46.846 A:middle
这就暗示我

00:59:46.846 --> 00:59:48.576 A:middle
可以自己向左轻扫

00:59:48.676 --> 00:59:50.536 A:middle
通过一个手势操作来

00:59:50.536 --> 00:59:52.116 A:middle
同样完成关闭标签页

00:59:52.116 --> 00:59:52.586 A:middle
这个动作

00:59:53.436 --> 00:59:54.886 A:middle
通过使离散的动画

00:59:55.046 --> 00:59:56.246 A:middle
和手势一致

00:59:56.246 --> 00:59:58.786 A:middle
我们可以用其中一个

00:59:58.826 --> 01:00:00.246 A:middle
去教另一个

00:59:58.826 --> 01:00:00.246 A:middle
去教另一个

01:00:02.296 --> 01:00:03.196 A:middle
还有另外一种可以用的技术

01:00:03.196 --> 01:00:05.306 A:middle
那就是解释

01:00:05.476 --> 01:00:07.196 A:middle
你明确告诉用户

01:00:07.196 --> 01:00:08.576 A:middle
如何使用一个手势

01:00:09.666 --> 01:00:10.796 A:middle
这最好是适度使用

01:00:10.796 --> 01:00:12.456 A:middle
最理想的情况是

01:00:12.456 --> 01:00:14.196 A:middle
当你在很多地方

01:00:14.196 --> 01:00:15.766 A:middle
重复使用一个手势

01:00:16.186 --> 01:00:18.216 A:middle
因为你只要到前台解释一次

01:00:18.216 --> 01:00:19.246 A:middle
然后继续用它

01:00:19.286 --> 01:00:21.036 A:middle
就能继续加强它

01:00:21.896 --> 01:00:23.136 A:middle
不要把它运用到

01:00:23.136 --> 01:00:24.836 A:middle
间歇使用的手势上

01:00:24.836 --> 01:00:25.976 A:middle
人们记不住它的

01:00:26.946 --> 01:00:29.706 A:middle
接下来我想稍微谈谈

01:00:29.706 --> 01:00:31.786 A:middle
乐趣和可玩性

01:00:32.496 --> 01:00:33.606 A:middle
因为这是流畅界面

01:00:33.606 --> 01:00:35.976 A:middle
最重要的方面之一

01:00:36.366 --> 01:00:37.906 A:middle
只有当你确定了一切

01:00:37.906 --> 01:00:39.076 A:middle
它才有效

01:00:40.326 --> 01:00:42.196 A:middle
这是流畅界面的

01:00:42.196 --> 01:00:43.136 A:middle
自然结果

01:00:43.136 --> 01:00:44.056 A:middle
当界面即时响应

01:00:44.056 --> 01:00:46.186 A:middle
并表现得令人满意

01:00:46.506 --> 01:00:47.686 A:middle
当它是可重新定向

01:00:47.686 --> 01:00:48.216 A:middle
并宽容的

01:00:48.676 --> 01:00:50.496 A:middle
当动作和手势是流畅的

01:00:50.496 --> 01:00:51.816 A:middle
所有一切我们刚刚提到的

01:00:52.426 --> 01:00:54.546 A:middle
界面开始和你感觉同步了

01:00:55.336 --> 01:00:57.486 A:middle
神奇的事情发生了

01:00:57.486 --> 01:00:58.996 A:middle
你不再感觉

01:00:58.996 --> 01:01:00.446 A:middle
你需要学习界面

01:00:58.996 --> 01:01:00.446 A:middle
你需要学习界面

01:01:00.546 --> 01:01:02.326 A:middle
相反 你感觉你正在发现界面

01:01:03.806 --> 01:01:06.016 A:middle
因此我们认为

01:01:06.016 --> 01:01:08.026 A:middle
当能让用户通过玩耍来发现界面

01:01:08.026 --> 01:01:09.026 A:middle
这是最好的情况

01:01:09.026 --> 01:01:10.076 A:middle
这甚至不会让人感觉

01:01:10.076 --> 01:01:11.216 A:middle
他们在学习它

01:01:11.216 --> 01:01:11.626 A:middle
这真的很有趣

01:01:12.876 --> 01:01:15.836 A:middle
人们喜欢玩东西

01:01:16.146 --> 01:01:18.176 A:middle
我们认为如果能发挥与生俱来拨弄的本性

01:01:18.176 --> 01:01:19.936 A:middle
这是最好的

01:01:20.696 --> 01:01:22.486 A:middle
玩是我们大脑

01:01:22.486 --> 01:01:24.146 A:middle
正在内化

01:01:24.146 --> 01:01:24.646 A:middle
界面的感觉

01:01:25.356 --> 01:01:26.306 A:middle
所以当我们仅仅是为了打造而打造这东西

01:01:26.306 --> 01:01:27.256 A:middle
制作它的原型时

01:01:27.256 --> 01:01:29.646 A:middle
这才是最棒的

01:01:29.646 --> 01:01:30.736 A:middle
亲自玩它

01:01:30.796 --> 01:01:32.176 A:middle
看你能怎么摆弄它

01:01:32.266 --> 01:01:33.426 A:middle
把它给别人

01:01:33.426 --> 01:01:33.976 A:middle
看看别人会怎么玩

01:01:34.376 --> 01:01:35.486 A:middle
然后考虑你将如何通过

01:01:35.486 --> 01:01:37.536 A:middle
类似动画 动作

01:01:37.536 --> 01:01:39.106 A:middle
或解释等行为

01:01:39.106 --> 01:01:39.926 A:middle
来加强它

01:01:41.336 --> 01:01:43.006 A:middle
令人惊讶的是

01:01:43.126 --> 01:01:45.076 A:middle
玩居然可以有这么大的效果

01:01:45.076 --> 01:01:46.726 A:middle
让界面向人类展示

01:01:46.726 --> 01:01:47.056 A:middle
自我学习

01:01:47.626 --> 01:01:51.486 A:middle
让我们再来谈谈

01:01:51.486 --> 01:01:52.696 A:middle
作为媒介的流畅度

01:01:53.216 --> 01:01:54.146 A:middle
我们如何真正开始

01:01:54.206 --> 01:01:55.056 A:middle
打造这东西

01:01:55.666 --> 01:01:56.716 A:middle
我们把像这样的界面

01:01:56.716 --> 01:01:58.426 A:middle
看成是独一无二的介质

01:01:58.426 --> 01:01:59.426 A:middle
因此必须正确地

01:01:59.616 --> 01:02:00.606 A:middle
处理它

01:01:59.616 --> 01:02:00.606 A:middle
处理它

01:02:02.376 --> 01:02:04.296 A:middle
那么第一件事就是

01:02:04.296 --> 01:02:05.356 A:middle
将互动与视觉

01:02:05.396 --> 01:02:07.036 A:middle
打造成不可分割的状态

01:02:07.616 --> 01:02:08.936 A:middle
而不是后来添加的东西

01:02:09.566 --> 01:02:11.506 A:middle
互动设计必须

01:02:11.506 --> 01:02:12.776 A:middle
与视觉效果

01:02:12.776 --> 01:02:13.196 A:middle
同步完成

01:02:13.196 --> 01:02:14.166 A:middle
你甚至不应该能分得清

01:02:14.306 --> 01:02:15.776 A:middle
什么时候一个结束了

01:02:15.776 --> 01:02:16.226 A:middle
而另一个开始了

01:02:17.466 --> 01:02:18.526 A:middle
我们必须建立

01:02:18.526 --> 01:02:19.926 A:middle
这种东西的样本

01:02:19.926 --> 01:02:21.326 A:middle
我们认为互动演示

01:02:21.326 --> 01:02:23.006 A:middle
绝对值得一百万个

01:02:23.046 --> 01:02:23.476 A:middle
静态设计

01:02:23.926 --> 01:02:25.766 A:middle
不只是为了展示给别人看

01:02:25.996 --> 01:02:27.806 A:middle
还要你自身理解

01:02:27.806 --> 01:02:29.606 A:middle
界面的真正内涵

01:02:30.996 --> 01:02:33.646 A:middle
当你制作它的原型时

01:02:33.646 --> 01:02:35.806 A:middle
非常珍贵

01:02:35.806 --> 01:02:36.846 A:middle
因为你在搭建时

01:02:36.846 --> 01:02:38.886 A:middle
就几乎发现了界面

01:02:39.696 --> 01:02:40.436 A:middle
这个技术实际上就是

01:02:40.436 --> 01:02:41.796 A:middle
我们在搭建 iPhone X 界面时

01:02:41.886 --> 01:02:42.566 A:middle
用到的

01:02:43.886 --> 01:02:45.016 A:middle
它真的非常重要

01:02:45.016 --> 01:02:46.636 A:middle
因为它同时为实施

01:02:46.636 --> 01:02:47.406 A:middle
设立了目标

01:02:47.826 --> 01:02:49.416 A:middle
非常幸运在 Apple

01:02:49.416 --> 01:02:50.596 A:middle
我们有这支

01:02:50.596 --> 01:02:52.056 A:middle
令人惊艳的工程设计团队来建造它

01:02:52.056 --> 01:02:53.386 A:middle
因为建造过程

01:02:53.386 --> 01:02:53.826 A:middle
真的很难

01:02:53.936 --> 01:02:56.866 A:middle
还需要有一些

01:02:57.006 --> 01:02:58.126 A:middle
神奇的例子

01:02:58.126 --> 01:02:59.706 A:middle
提醒你自己和

01:02:59.706 --> 01:03:01.446 A:middle
工程设计团队

01:02:59.706 --> 01:03:01.446 A:middle
工程设计团队

01:03:01.586 --> 01:03:05.066 A:middle
它将会有什么感觉

01:03:05.066 --> 01:03:05.746 A:middle
明白吗

01:03:05.746 --> 01:03:10.476 A:middle
记住 这真的是在提醒你自己

01:03:11.896 --> 01:03:15.086 A:middle
当你真的搭建时

01:03:15.086 --> 01:03:16.426 A:middle
它是非常难以

01:03:16.426 --> 01:03:17.626 A:middle
被复制的

01:03:17.896 --> 01:03:19.386 A:middle
这就给了你的 App

01:03:19.426 --> 01:03:19.936 A:middle
独一无二的特性

01:03:21.006 --> 01:03:27.286 A:middle
因此多点触控

01:03:27.286 --> 01:03:28.726 A:middle
是我们发挥的一个

01:03:28.726 --> 01:03:29.156 A:middle
神奇的媒介

01:03:30.196 --> 01:03:31.446 A:middle
我们用科技

01:03:31.446 --> 01:03:32.596 A:middle
在古老 触觉的层面上

01:03:32.726 --> 01:03:34.106 A:middle
与人们联系

01:03:34.756 --> 01:03:36.126 A:middle
这真的非常酷

01:03:38.206 --> 01:03:40.066 A:middle
今天我们谈论的

01:03:40.066 --> 01:03:42.226 A:middle
所有原则

01:03:42.226 --> 01:03:43.616 A:middle
都是 iPhone X 手势界面

01:03:43.746 --> 01:03:45.646 A:middle
设计的核心

01:03:46.336 --> 01:03:47.526 A:middle
及时响应

01:03:47.526 --> 01:03:48.976 A:middle
可重新定向 可中断的手势

01:03:48.976 --> 01:03:50.926 A:middle
动态动作

01:03:51.306 --> 01:03:52.876 A:middle
优雅的手势操作

01:03:53.636 --> 01:03:55.056 A:middle
这在很多方面

01:03:55.056 --> 01:03:57.646 A:middle
体现了我们认为的

01:03:58.996 --> 01:04:01.246 A:middle
流畅界面

01:03:58.996 --> 01:04:01.246 A:middle
流畅界面

01:04:01.246 --> 01:04:02.586 A:middle
我们的思维和行动一致时

01:04:03.376 --> 01:04:05.166 A:middle
神奇的事情发生了

01:04:05.986 --> 01:04:07.796 A:middle
它不再像是一台电脑

01:04:07.796 --> 01:04:09.906 A:middle
而是开始像

01:04:09.906 --> 01:04:11.596 A:middle
我们自身的无缝延伸

01:04:14.416 --> 01:04:16.206 A:middle
当我们设计

01:04:16.276 --> 01:04:18.336 A:middle
界面的未来

01:04:18.336 --> 01:04:19.776 A:middle
我们认为必须像这样

01:04:20.056 --> 01:04:21.716 A:middle
在科技中

01:04:21.716 --> 01:04:22.626 A:middle
试图捕捉人性

01:04:23.626 --> 01:04:24.416 A:middle
这个人类最重要的

01:04:24.416 --> 01:04:26.596 A:middle
工具之一

01:04:26.596 --> 01:04:28.966 A:middle
使用起来不是负担

01:04:28.966 --> 01:04:30.086 A:middle
而是快乐和愉悦

01:04:30.966 --> 01:04:31.956 A:middle
非常感谢

01:04:32.516 --> 01:04:36.500 A:middle
[ 掌声 ]
