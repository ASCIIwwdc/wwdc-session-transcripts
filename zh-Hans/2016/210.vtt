WEBVTT

00:00:19.553 --> 00:00:23.390
<c.magenta>掌握tvOS的UIKit</c>

00:00:24.157 --> 00:00:26.960
<c.magenta>欢迎来到</c>
<c.magenta>“掌握tvOS的UIKit”</c>

00:00:27.661 --> 00:00:29.563
<c.magenta>我是Justin</c>
<c.magenta>我负责UIKit工作</c>

00:00:29.830 --> 00:00:32.266
<c.magenta>我在这里向你展示</c>
<c.magenta>如何超越普通点</c>

00:00:32.332 --> 00:00:35.169
<c.magenta>真正让你的tvOS应用达到新高度</c>

00:00:36.870 --> 00:00:38.939
<c.magenta>要做到那些 我们今天需要讨论几件事</c>

00:00:39.473 --> 00:00:40.974
<c.magenta>首先是事件处理</c>

00:00:41.275 --> 00:00:43.043
<c.magenta>你的应用将会收到什么样的事件</c>

00:00:43.110 --> 00:00:45.312
<c.magenta>处理这些事件的最好方法</c>
<c.magenta>是什么</c>

00:00:46.780 --> 00:00:48.582
<c.magenta>然后我们会讨论分层图片</c>

00:00:48.649 --> 00:00:51.285
<c.magenta>这是tvOS独一无二的用户界面元素</c>

00:00:51.351 --> 00:00:53.387
<c.magenta>我们将展示如何利用它</c>

00:00:55.222 --> 00:00:56.823
<c.magenta>第三 我们将讨论滚动条</c>

00:00:56.890 --> 00:00:59.826
<c.magenta>滚动条在tvOS的工作方式</c>
<c.magenta>与在iOS中有些不同</c>

00:00:59.893 --> 00:01:02.262
<c.magenta>我们将展示如何控制滚动条</c>

00:00:59.893 --> 00:01:02.262
<c.magenta>我们将展示如何控制滚动条</c>

00:01:03.797 --> 00:01:05.599
<c.magenta>最后我们将讨论文本输入</c>

00:01:05.699 --> 00:01:07.167
<c.magenta>和如何使用系统键盘</c>

00:01:07.234 --> 00:01:08.735
<c.magenta>接收用户的文本</c>

00:01:09.469 --> 00:01:11.738
<c.magenta>让我们开始吧 首先进入事件处理</c>

00:01:12.472 --> 00:01:14.007
<c.magenta>当讲到事件处理</c>

00:01:14.341 --> 00:01:15.943
<c.magenta>这里几个全面的最佳实践</c>

00:01:16.009 --> 00:01:17.644
<c.magenta>我马上与你们分享</c>

00:01:18.045 --> 00:01:21.548
<c.magenta>第一个是当它允许你的用户</c>

00:01:21.615 --> 00:01:23.016
<c.magenta>去导航你的应用程序</c>

00:01:23.083 --> 00:01:25.219
<c.magenta>并转移焦点从一个项目到另外一个项目</c>

00:01:25.652 --> 00:01:28.155
<c.magenta>你不需要写任何你自己的事件处理程序</c>

00:01:28.222 --> 00:01:30.858
<c.magenta>焦点引擎会为你处理一起</c>

00:01:31.225 --> 00:01:33.627
<c.magenta>包括处理不同类型的事件</c>

00:01:33.694 --> 00:01:36.463
<c.magenta>基于用户当前使用的输入设备类型</c>

00:01:36.597 --> 00:01:38.232
<c.magenta>它会为你处理好一切</c>

00:01:41.201 --> 00:01:43.971
<c.magenta>第二 如果你决定需要开始处理事件</c>

00:01:44.037 --> 00:01:46.373
<c.magenta>我们建议你开始使用</c>
<c.magenta>UIGestureRecognizer</c>

00:01:46.640 --> 00:01:48.509
<c.magenta>不仅得到一个极富表现力的API</c>

00:01:48.575 --> 00:01:51.912
<c.magenta>而且它会帮助确保你的应用里</c>
<c.magenta>所有的手势和交互</c>

00:01:51.979 --> 00:01:54.982
<c.magenta>将同所有系统应用和其他应用保持一致</c>

00:01:57.484 --> 00:02:00.087
<c.magenta>最终 当你正在设计应用交互模型</c>

00:01:57.484 --> 00:02:00.087
<c.magenta>最终 当你正在设计应用交互模型</c>

00:02:00.153 --> 00:02:01.922
<c.magenta>记住并非每个输入设备</c>

00:02:01.989 --> 00:02:03.457
<c.magenta>能够生成每一种类型的事件</c>

00:02:03.657 --> 00:02:06.126
<c.magenta>例如 一个用户可能使用游戏控制器</c>

00:02:06.193 --> 00:02:07.661
<c.magenta>来导航你的应用程序</c>

00:02:07.861 --> 00:02:10.030
<c.magenta>游戏控制器能够生成触摸事件</c>

00:02:10.097 --> 00:02:11.765
<c.magenta>你可能不想使用触摸事件</c>

00:02:11.832 --> 00:02:13.834
<c.magenta>作为与你应用交互的唯一方式</c>

00:02:13.901 --> 00:02:16.136
<c.magenta>所以当你正在设计应用时记住这些</c>

00:02:18.071 --> 00:02:19.473
<c.magenta>谈到触摸</c>

00:02:19.673 --> 00:02:21.141
<c.magenta>我们在tvOS上的触摸技术</c>

00:02:21.208 --> 00:02:23.177
<c.magenta>在Siri Remote上</c>
<c.magenta>使用触摸表面</c>

00:02:23.644 --> 00:02:25.479
<c.magenta>我们以UITouch交付给你</c>

00:02:25.546 --> 00:02:27.748
<c.magenta>它是一个API</c>
<c.magenta>你可能从iOS中认出</c>

00:02:28.182 --> 00:02:30.984
<c.magenta>一次触碰代表用户手指</c>

00:02:31.218 --> 00:02:32.886
<c.magenta>和遥控器屏幕的联系</c>

00:02:35.189 --> 00:02:36.223
<c.magenta>这就像iOS版本</c>

00:02:36.290 --> 00:02:37.925
<c.magenta>他包括位置和其他属性</c>

00:02:37.991 --> 00:02:38.959
<c.magenta>你经常使用的</c>

00:02:39.960 --> 00:02:41.028
<c.magenta>这点是很重要的差别</c>

00:02:41.094 --> 00:02:43.297
<c.magenta>tvOS和iOS的触摸技术之间</c>

00:02:43.697 --> 00:02:46.667
<c.magenta>iOS触摸直接发生于用户界面</c>

00:02:46.733 --> 00:02:49.136
<c.magenta>用户肢体触摸UI</c>

00:02:49.837 --> 00:02:51.271
<c.magenta>tvOS却并非如此</c>

00:02:51.338 --> 00:02:53.006
<c.magenta>离用户界面10英尺远</c>

00:02:53.140 --> 00:02:54.842
<c.magenta>用户触摸的是其遥控器</c>

00:02:55.409 --> 00:02:58.245
<c.magenta>所以我们把这些分为两个不同的类别</c>

00:02:58.312 --> 00:03:00.347
<c.magenta>我们称在iOS上的为直接触摸</c>

00:02:58.312 --> 00:03:00.347
<c.magenta>我们称在iOS上的为直接触摸</c>

00:03:00.414 --> 00:03:02.850
<c.magenta>在tvOS上的为间接触摸</c>

00:03:03.150 --> 00:03:06.053
<c.magenta>我们称该触摸类型为</c>
<c.magenta>UITouchTypeIndirect</c>

00:03:06.119 --> 00:03:07.921
<c.magenta>来帮助你区分两者不同</c>

00:03:09.656 --> 00:03:12.626
<c.magenta>因为这种间接触摸</c>
<c.magenta>假如你问UITouch</c>

00:03:12.693 --> 00:03:16.463
<c.magenta>在一个直接触摸界面</c>
<c.magenta>“你在屏幕上位置是什么？”</c>

00:03:16.730 --> 00:03:17.865
<c.magenta>答案显而易见</c>

00:03:17.931 --> 00:03:18.932
<c.magenta>我们提供一个位置</c>

00:03:18.999 --> 00:03:21.602
<c.magenta>它能准确配对用户手指在屏幕上的位置</c>

00:03:21.902 --> 00:03:23.737
<c.magenta>但是在tvOS</c>
<c.magenta>用户不会触摸屏幕</c>

00:03:23.804 --> 00:03:25.839
<c.magenta>那我们会怎么报告触摸的位置呢？</c>

00:03:26.740 --> 00:03:28.008
<c.magenta>在这情况下 我们会</c>

00:03:28.075 --> 00:03:30.544
<c.magenta>无论用户手指在遥控器上</c>
<c.magenta>从何处开始触摸</c>

00:03:30.611 --> 00:03:32.513
<c.magenta>我们总将该触摸传递至你的应用</c>

00:03:32.579 --> 00:03:35.516
<c.magenta>好像它是从焦点视图的中央直接开始的</c>

00:03:36.149 --> 00:03:37.384
<c.magenta>这方法很好</c>
<c.magenta>因为它意味着</c>

00:03:37.451 --> 00:03:39.820
<c.magenta>任何手势识别器或事件处理逻辑</c>

00:03:39.887 --> 00:03:41.855
<c.magenta>你可能已附加到焦点视图上</c>

00:03:42.122 --> 00:03:44.625
<c.magenta>将总有机会参与到手势上</c>

00:03:46.593 --> 00:03:47.995
<c.magenta>我们不能暴露的是</c>

00:03:48.061 --> 00:03:49.563
<c.magenta>用户手指的绝对位置</c>

00:03:49.630 --> 00:03:50.464
<c.magenta>在触控板上</c>

00:03:50.531 --> 00:03:52.933
<c.magenta>我们为什么那么做是有一些原因的</c>
<c.magenta>其中最重要的一点是</c>

00:03:52.999 --> 00:03:56.270
<c.magenta>在tvOS上</c>
<c.magenta>我们想阻止基于指针的UI</c>

00:03:56.336 --> 00:03:58.071
<c.magenta>我们不想看到一些如鼠标指针类的东西</c>

00:03:58.138 --> 00:03:59.139
<c.magenta>或像它一样的</c>

00:03:59.206 --> 00:04:01.041
<c.magenta>我们真的很希望应用程序能够坚持</c>

00:03:59.206 --> 00:04:01.041
<c.magenta>我们真的很希望应用程序能够坚持</c>

00:04:01.108 --> 00:04:02.910
<c.magenta>我们所创建的焦点交互模型</c>

00:04:05.412 --> 00:04:06.747
<c.magenta>除了触摸</c>

00:04:06.813 --> 00:04:08.849
<c.magenta>你还能在tvOS上获得另外一种事件</c>

00:04:08.916 --> 00:04:10.250
<c.magenta>它们被称作按下</c>

00:04:10.651 --> 00:04:13.153
<c.magenta>按下方法</c>
<c.magenta>通过经典UIPress类提供</c>

00:04:13.487 --> 00:04:16.290
<c.magenta>一次按下代表一个真实的硬件按钮</c>

00:04:16.356 --> 00:04:17.891
<c.magenta>用户正在与它交互</c>

00:04:18.692 --> 00:04:21.695
<c.magenta>并不是所有的这些按钮被简单按下</c>
<c.magenta>或者没被按下</c>

00:04:21.762 --> 00:04:23.997
<c.magenta>比如游戏控制器这样的一些按钮</c>
<c.magenta>是压力感应的</c>

00:04:24.064 --> 00:04:26.967
<c.magenta>我们能真实检测到用户按下按钮的强度</c>

00:04:27.034 --> 00:04:28.669
<c.magenta>我们可以把那个信息传递给你</c>

00:04:30.437 --> 00:04:31.305
<c.magenta>你能够识别按下</c>

00:04:31.371 --> 00:04:32.706
<c.magenta>通过UIGestureRecognizer类</c>

00:04:32.773 --> 00:04:34.842
<c.magenta>包括如TapGestureRecognizer</c>

00:04:34.908 --> 00:04:36.610
<c.magenta>和LongPressGestureRecognizer</c>

00:04:38.078 --> 00:04:39.646
<c.magenta>我们有低级别的按下处理事件</c>

00:04:39.713 --> 00:04:42.482
<c.magenta>它与低级别的触摸处理事件</c>
<c.magenta>遵循相同的模式</c>

00:04:42.549 --> 00:04:44.518
<c.magenta>pressesBegan会触发</c>

00:04:44.585 --> 00:04:46.186
<c.magenta>一旦用户开始按下按钮</c>

00:04:46.253 --> 00:04:47.955
<c.magenta>pressesChanged方法</c>
<c.magenta>会被调用</c>

00:04:48.021 --> 00:04:49.289
<c.magenta>若它是一个压力感应按钮</c>

00:04:49.356 --> 00:04:50.958
<c.magenta>并且压力值会改变</c>

00:04:51.491 --> 00:04:53.760
<c.magenta>还有pressesEnded</c>
<c.magenta>和pressesCancelled</c>

00:04:53.827 --> 00:04:56.797
<c.magenta>像touchesCancelled</c>
<c.magenta>是的 你真的必须执行它</c>

00:04:57.965 --> 00:04:59.833
<c.magenta>关于这些方法 有件事需要知道</c>

00:04:59.900 --> 00:05:03.003
<c.magenta>那就是按下事件</c>
<c.magenta>以为它们不是真的有一个位置</c>

00:04:59.900 --> 00:05:03.003
<c.magenta>那就是按下事件</c>
<c.magenta>以为它们不是真的有一个位置</c>

00:05:03.070 --> 00:05:04.738
<c.magenta>它们直接传递到焦点视图</c>

00:05:04.805 --> 00:05:06.707
<c.magenta>他们从那里到达响应者链</c>

00:05:06.773 --> 00:05:09.009
<c.magenta>它们不会去任何焦点视图的子视图</c>

00:05:09.076 --> 00:05:10.911
<c.magenta>所以要记住这点 当你决定</c>

00:05:10.978 --> 00:05:12.946
<c.magenta>把什么样的视图附加到手势识别器上</c>

00:05:15.315 --> 00:05:16.750
<c.magenta>我们说了好多关于按下的事</c>

00:05:16.817 --> 00:05:18.051
<c.magenta>让我们过一遍按下的类型</c>

00:05:18.118 --> 00:05:20.687
<c.magenta>对于你来说是可用的</c>
<c.magenta>和什么类型的按钮会触发它们</c>

00:05:20.754 --> 00:05:21.989
<c.magenta>在不同类型的输入设备上</c>

00:05:22.389 --> 00:05:24.191
<c.magenta>所以我要向你展示</c>
<c.magenta>Siri Remote</c>

00:05:25.092 --> 00:05:27.528
<c.magenta>上一代Apple TV</c>
<c.magenta>的Apple Remote</c>

00:05:28.428 --> 00:05:29.963
<c.magenta>我要向你展示游戏控制器</c>

00:05:30.030 --> 00:05:31.732
<c.magenta>幻灯片上没有空间 但是记住</c>

00:05:31.798 --> 00:05:35.035
<c.magenta>按下也能够从可编程通用的遥控器里</c>

00:05:35.102 --> 00:05:36.503
<c.magenta>和从Bluetooth键盘中产生</c>

00:05:36.570 --> 00:05:38.272
<c.magenta>所以有很多方法得到按下</c>

00:05:40.574 --> 00:05:43.377
<c.magenta>可能你最常碰到的按下类型是</c>
<c.magenta>UIPressTypeSelect</c>

00:05:43.443 --> 00:05:45.646
<c.magenta>这种按下类型代表</c>

00:05:45.712 --> 00:05:48.415
<c.magenta>用户想激活一个控制或选择一个</c>
<c.magenta>CollectionView单元</c>

00:05:48.482 --> 00:05:49.449
<c.magenta>诸如此类</c>

00:05:50.117 --> 00:05:52.986
<c.magenta>在Siri Remote上</c>
<c.magenta>那是在遥控器触摸表面</c>

00:05:53.053 --> 00:05:53.887
<c.magenta>之下的按钮</c>

00:05:54.821 --> 00:05:56.690
<c.magenta>在Apple Remote上</c>
<c.magenta>那是一个银色的圆圈</c>

00:05:56.757 --> 00:05:57.691
<c.magenta>在游戏控制器上</c>

00:05:57.758 --> 00:05:59.826
<c.magenta>我们使用A按钮生成此按下类型</c>

00:06:01.795 --> 00:06:04.464
<c.magenta>另外一种你会碰到的常用按下类型</c>
<c.magenta>是UIPressTypeMenu</c>

00:06:04.531 --> 00:06:07.167
<c.magenta>这种按下类型指用户想返回</c>

00:06:07.234 --> 00:06:09.169
<c.magenta>他们想释放一个presentedviewcontroller</c>

00:06:09.236 --> 00:06:12.372
<c.magenta>或甚完全释放你的应用并返回到主界面</c>

00:06:13.006 --> 00:06:16.543
<c.magenta>这三者在屏幕上 就是菜单按钮</c>

00:06:17.811 --> 00:06:20.280
<c.magenta>在游戏控制器上</c>
<c.magenta>我们也使用B按钮</c>

00:06:22.649 --> 00:06:24.818
<c.magenta>最后 就是UIPressTypePlayPause</c>

00:06:24.885 --> 00:06:27.754
<c.magenta>这对于暂停和播放内容明显是有用的</c>

00:06:27.955 --> 00:06:30.557
<c.magenta>但是它也被用作除选择按钮以外的</c>
<c.magenta>快捷图标</c>

00:06:30.958 --> 00:06:33.360
<c.magenta>所以如果用户选中一个电影海报</c>

00:06:33.594 --> 00:06:36.129
<c.magenta>按下选择按钮可能会展示这个</c>
<c.magenta>电影的详细信息</c>

00:06:36.196 --> 00:06:38.765
<c.magenta>但是按下播放/暂停将直接跳转到回放</c>

00:06:39.566 --> 00:06:41.468
<c.magenta>所以这图标有——</c>

00:06:41.535 --> 00:06:43.670
<c.magenta>或者有播放/暂停图标的按钮</c>

00:06:43.770 --> 00:06:44.671
<c.magenta>在游戏控制器上</c>

00:06:44.738 --> 00:06:46.974
<c.magenta>我们将使用X按钮生成按下类型</c>

00:06:48.775 --> 00:06:50.844
<c.magenta>为了更完整些 这还有几个按下类型</c>

00:06:50.911 --> 00:06:52.613
<c.magenta>它们是定向按下</c>

00:06:52.679 --> 00:06:55.282
<c.magenta>所以我们有上 下 左 右箭头按下</c>

00:06:55.349 --> 00:06:56.350
<c.magenta>能够被生成</c>

00:06:56.884 --> 00:06:59.686
<c.magenta>在Apple Remote上</c>
<c.magenta>我们使用四个定向按钮</c>

00:07:00.621 --> 00:07:02.389
<c.magenta>在游戏控制器上</c>
<c.magenta>有好多方法去实现</c>

00:07:02.456 --> 00:07:03.924
<c.magenta>所以我们将使用D pad</c>

00:07:05.192 --> 00:07:07.194
<c.magenta>我们也使用定向手柄</c>

00:07:08.161 --> 00:07:10.063
<c.magenta>我们甚至生成左和右的按下</c>

00:07:10.130 --> 00:07:11.932
<c.magenta>在游戏控制器上使用肩按钮</c>

00:07:13.033 --> 00:07:15.802
<c.magenta>在Siri Remote上</c>
<c.magenta>这些箭头不是具体的硬件按钮</c>

00:07:15.869 --> 00:07:17.971
<c.magenta>所以你可能想到在那里生成是不可能的</c>

00:07:18.038 --> 00:07:19.406
<c.magenta>但那其实是错的</c>

00:07:19.640 --> 00:07:21.875
<c.magenta>如果你做了一个触摸点击</c>
<c.magenta>而非一直长按</c>

00:07:21.942 --> 00:07:23.443
<c.magenta>选择按钮 但只是触摸</c>

00:07:23.510 --> 00:07:25.779
<c.magenta>在表面的这四个基本方位点</c>

00:07:26.013 --> 00:07:27.214
<c.magenta>然后UIKit会检测到它</c>

00:07:27.281 --> 00:07:29.516
<c.magenta>将为你生成箭头按下</c>

00:07:29.583 --> 00:07:31.485
<c.magenta>这是一个真正简便的导航方法</c>

00:07:31.552 --> 00:07:34.021
<c.magenta>一次一项目地通过你的用户界面</c>

00:07:34.488 --> 00:07:36.557
<c.magenta>只因用户</c>
<c.magenta>正使用Siri Remote</c>

00:07:36.623 --> 00:07:38.792
<c.magenta>那并不意味着它们不能生成箭头按下</c>

00:07:40.961 --> 00:07:43.497
<c.magenta>我保证你可以用手势识别器去识别它们</c>

00:07:43.564 --> 00:07:46.700
<c.magenta>我不会详细过一遍</c>
<c.magenta>但是我想给你们举些例子</c>

00:07:46.800 --> 00:07:49.002
<c.magenta>你知道 我们可以使用顶端的</c>
<c.magenta>TapGestureRecognizer</c>

00:07:49.469 --> 00:07:51.371
<c.magenta>我们甚至可能长按 正如你可能这么做</c>

00:07:51.438 --> 00:07:53.674
<c.magenta>在tvOS主界面进入编辑模式</c>

00:07:54.274 --> 00:07:56.577
<c.magenta>在底层我甚至可以调整所需点击的次数</c>

00:07:56.643 --> 00:07:59.179
<c.magenta>所以我现在选择按钮上监听一个双击</c>

00:08:02.082 --> 00:08:04.451
<c.magenta>好的 让我们特别谈谈一个按钮</c>

00:08:04.518 --> 00:08:05.786
<c.magenta>它是菜单按钮</c>

00:08:06.887 --> 00:08:09.656
<c.magenta>菜单按钮在tvOS上有些有趣的行为</c>

00:08:09.723 --> 00:08:11.091
<c.magenta>它似乎有两个角色</c>

00:08:11.458 --> 00:08:13.861
<c.magenta>它不仅需要在你的应用内部有用</c>

00:08:13.927 --> 00:08:16.129
<c.magenta>因为我们要做</c>
<c.magenta>诸如释放视图控制器之类的事</c>

00:08:16.196 --> 00:08:18.866
<c.magenta>或弹出UINavigationController</c>

00:08:18.932 --> 00:08:20.767
<c.magenta>而且它还需要有系统层级的行为</c>

00:08:20.834 --> 00:08:23.170
<c.magenta>最终你的应用需要去释放——</c>

00:08:23.237 --> 00:08:25.639
<c.magenta>被释放 因而用户可以返回主界面</c>

00:08:25.873 --> 00:08:28.575
<c.magenta>若那不可能 你的用户将感到非常沮丧</c>

00:08:28.642 --> 00:08:29.810
<c.magenta>可以想象这非常重要</c>

00:08:29.877 --> 00:08:32.712
<c.magenta>这就是应用审查的特别关注点</c>

00:08:32.846 --> 00:08:34.515
<c.magenta>如果你的应用程序无法退出</c>

00:08:34.581 --> 00:08:37.083
<c.magenta>通过按菜单按钮</c>
<c.magenta>你可能无法通过应用审查</c>

00:08:37.150 --> 00:08:38.150
<c.magenta>我们不想发生这事</c>

00:08:39.453 --> 00:08:41.688
<c.magenta>所以这怎样进行？</c>

00:08:41.755 --> 00:08:44.525
<c.magenta>我们如何得到它以致菜单按钮不仅</c>

00:08:44.591 --> 00:08:46.693
<c.magenta>被应用程序捕获而且可以被系统使用？</c>

00:08:47.261 --> 00:08:48.896
<c.magenta>所需技术层面的</c>

00:08:48.962 --> 00:08:52.266
<c.magenta>为了你的应用能完美退出并返回主界面</c>

00:08:52.699 --> 00:08:54.501
<c.magenta>是当菜单按钮被释放的时候</c>

00:08:54.568 --> 00:08:56.837
<c.magenta>pressesEnded事件</c>
<c.magenta>需要一路沿</c>

00:08:56.904 --> 00:08:59.373
<c.magenta>响应者链向上</c>
<c.magenta>若你被UIApplication接收</c>

00:08:59.773 --> 00:09:01.875
<c.magenta>如果那不发生 你的应用不会退出</c>

00:08:59.773 --> 00:09:01.875
<c.magenta>如果那不发生 你的应用不会退出</c>

00:09:02.609 --> 00:09:04.044
<c.magenta>有时候那正是你想要的</c>

00:09:04.111 --> 00:09:06.113
<c.magenta>如果你已深入到</c>
<c.magenta>UINavigationController</c>

00:09:06.180 --> 00:09:07.614
<c.magenta>用户按下菜单按钮</c>

00:09:07.681 --> 00:09:08.882
<c.magenta>他们不想退出你的应用程序</c>

00:09:08.949 --> 00:09:10.484
<c.magenta>他们只想返回到前一个视图控制器</c>

00:09:10.918 --> 00:09:13.320
<c.magenta>在那种情况下 有可能是</c>
<c.magenta>TapGestureRecognizer</c>

00:09:13.387 --> 00:09:14.922
<c.magenta>它是用于监听菜单按钮</c>

00:09:15.022 --> 00:09:17.024
<c.magenta>如果那个识别器开始识别</c>

00:09:17.090 --> 00:09:19.560
<c.magenta>它会发送pressesCancelled到响应者链</c>

00:09:19.626 --> 00:09:21.261
<c.magenta>在这种情况下 应用不会退出</c>

00:09:21.328 --> 00:09:24.431
<c.magenta>然后UINavigationController</c>
<c.magenta>可以抛开视图控制器</c>

00:09:24.498 --> 00:09:27.434
<c.magenta>不总发送pressesEnded</c>
<c.magenta>到你的应用是可以的</c>

00:09:27.501 --> 00:09:29.469
<c.magenta>你只要确认这是可能的</c>

00:09:29.703 --> 00:09:31.538
<c.magenta>当它出现在一个合适的时机</c>

00:09:33.473 --> 00:09:34.608
<c.magenta>所以正确的做法是</c>

00:09:34.675 --> 00:09:36.543
<c.magenta>我们强烈建议你从手势识别器开始</c>

00:09:36.610 --> 00:09:39.346
<c.magenta>当你不再对处理菜单按钮感兴趣时</c>

00:09:39.680 --> 00:09:42.216
<c.magenta>你需确保GestureRecognizer已移除</c>

00:09:42.282 --> 00:09:45.385
<c.magenta>一种做法是从视图中移除</c>
<c.magenta>GestureRecognizer</c>

00:09:46.353 --> 00:09:47.487
<c.magenta>同时禁用手势</c>

00:09:47.554 --> 00:09:49.456
<c.magenta>手势识别器有个属性叫做已启用</c>

00:09:49.523 --> 00:09:52.159
<c.magenta>如果你把值设置为假</c>
<c.magenta>然后手势将被禁用</c>

00:09:53.493 --> 00:09:54.728
<c.magenta>如果你不想那么做</c>

00:09:54.795 --> 00:09:58.732
<c.magenta>这里有UIGestureRecognizer delegate API</c>
<c.magenta>叫做gestureRecognizerShouldBegin</c>

00:09:59.099 --> 00:10:01.668
<c.magenta>你可以执行它</c>
<c.magenta>然后对于每个菜单按钮的按下</c>

00:09:59.099 --> 00:10:01.668
<c.magenta>你可以执行它</c>
<c.magenta>然后对于每个菜单按钮的按下</c>

00:10:01.735 --> 00:10:03.770
<c.magenta>你有机会在那刻决定</c>

00:10:03.837 --> 00:10:05.405
<c.magenta>是否想处理手势</c>

00:10:07.174 --> 00:10:09.610
<c.magenta>如果你正执行低级别按下处理方法</c>

00:10:09.676 --> 00:10:11.612
<c.magenta>在pressesEnded实现中</c>

00:10:11.678 --> 00:10:13.914
<c.magenta>决定你是否想处理这个事件</c>

00:10:13.981 --> 00:10:16.650
<c.magenta>如果你想去处理这个事件</c>
<c.magenta>就不要调用super</c>

00:10:17.084 --> 00:10:18.552
<c.magenta>但如果你不打算处理这个事件</c>

00:10:18.619 --> 00:10:20.187
<c.magenta>就确保调用super</c>

00:10:20.254 --> 00:10:22.322
<c.magenta>这样它就可以继续沿响应链向上走</c>

00:10:22.389 --> 00:10:24.892
<c.magenta>UIApplication</c>
<c.magenta>有机会去接收它</c>

00:10:26.660 --> 00:10:27.694
<c.magenta>最后 若你正写游戏</c>

00:10:27.761 --> 00:10:29.730
<c.magenta>你只有一个视图控制器是非常常见的</c>

00:10:29.796 --> 00:10:31.298
<c.magenta>它是用于展示你的游戏</c>

00:10:31.431 --> 00:10:32.666
<c.magenta>所以这种情况下</c>

00:10:32.733 --> 00:10:35.068
<c.magenta>你可能考虑使用</c>
<c.magenta>GCEventViewController</c>

00:10:35.269 --> 00:10:37.971
<c.magenta>它有这个属性</c>
<c.magenta>controllerUserInteractionEnabled</c>

00:10:38.305 --> 00:10:39.706
<c.magenta>功能是</c>

00:10:39.773 --> 00:10:42.376
<c.magenta>当用户使用游戏控制器浏览你的应用时</c>

00:10:42.442 --> 00:10:44.511
<c.magenta>不但事件将会到游戏控制器框架中</c>

00:10:44.578 --> 00:10:46.346
<c.magenta>这框架可能你早已在游戏中使用</c>

00:10:46.547 --> 00:10:50.017
<c.magenta>而且它可能产生UIKit事件</c>
<c.magenta>如按下或其他</c>

00:10:50.217 --> 00:10:52.186
<c.magenta>当你正在玩游戏</c>
<c.magenta>你可能没有兴趣</c>

00:10:52.252 --> 00:10:54.154
<c.magenta>接收这些事件的UIKit版本</c>

00:10:54.221 --> 00:10:56.490
<c.magenta>如果你设置</c>
<c.magenta>controllerUserInteractionEnabled</c>

00:10:56.657 --> 00:10:59.726
<c.magenta>值为假 在游戏进行中</c>

00:10:59.793 --> 00:11:03.063
<c.magenta>然后按下菜单按钮</c>
<c.magenta>不会立刻退出你的应用程序</c>

00:10:59.793 --> 00:11:03.063
<c.magenta>然后按下菜单按钮</c>
<c.magenta>不会立刻退出你的应用程序</c>

00:11:03.130 --> 00:11:06.033
<c.magenta>取而代之 你将能够捕获它</c>
<c.magenta>并你自己处理它</c>

00:11:06.300 --> 00:11:08.569
<c.magenta>但是当用户返回到游戏根菜单</c>

00:11:08.635 --> 00:11:10.037
<c.magenta>你将把值设置为是</c>

00:11:10.103 --> 00:11:12.339
<c.magenta>所以按下菜单按钮能够退出程序</c>

00:11:13.740 --> 00:11:15.542
<c.magenta>这就是事件处理</c>

00:11:16.543 --> 00:11:18.345
<c.magenta>现在让我们讨论下分层图像</c>

00:11:20.047 --> 00:11:22.082
<c.magenta>分层图像是一个用户界面元素</c>

00:11:22.149 --> 00:11:23.617
<c.magenta>这是tvOS特有的</c>

00:11:24.117 --> 00:11:27.254
<c.magenta>你可能在所有演示中看过这些图像了</c>

00:11:29.089 --> 00:11:30.824
<c.magenta>它们最多可以有五层图像</c>

00:11:30.891 --> 00:11:32.860
<c.magenta>是移动的parallaxing内容</c>

00:11:34.228 --> 00:11:35.996
<c.magenta>这些是应用图标需要的</c>

00:11:36.063 --> 00:11:39.633
<c.magenta>在tvOS上 你的应用图标至少两层</c>

00:11:39.867 --> 00:11:41.635
<c.magenta>你至少需要对该格式有点熟悉</c>

00:11:41.702 --> 00:11:43.170
<c.magenta>如果你将在tvOS上开发</c>

00:11:44.738 --> 00:11:45.506
<c.magenta>它们是交互的</c>

00:11:45.572 --> 00:11:48.275
<c.magenta>当用户在Siri Remote上</c>
<c.magenta>移动手指时</c>

00:11:48.609 --> 00:11:51.678
<c.magenta>图像会随着他们的手指移动</c>

00:11:51.745 --> 00:11:53.380
<c.magenta>这不仅仅是看起来很好看</c>

00:11:53.447 --> 00:11:56.450
<c.magenta>这帮用户意识到他们的输入被实时接收</c>

00:11:56.517 --> 00:11:59.353
<c.magenta>帮他们预见焦点运动发生的轨迹</c>

00:12:01.255 --> 00:12:01.889
<c.magenta>它们是动画</c>

00:12:01.955 --> 00:12:04.525
<c.magenta>所以他们有很多很棒的内置动画</c>

00:12:04.591 --> 00:12:06.226
<c.magenta>特别是当它们获取聚焦时</c>

00:12:06.360 --> 00:12:09.062
<c.magenta>我们将展示怎样才能协调这些动画</c>

00:12:09.129 --> 00:12:10.898
<c.magenta>使你的应用变得生动</c>

00:12:13.400 --> 00:12:15.202
<c.magenta>所以让我们来讨论一下交互</c>

00:12:16.637 --> 00:12:19.673
<c.magenta>我刚才播放的视频</c>
<c.magenta>是UIImageView</c>

00:12:19.740 --> 00:12:21.108
<c.magenta>若UIImageView获得聚焦</c>

00:12:21.175 --> 00:12:24.478
<c.magenta>它会给你一个很棒的浮动外表</c>

00:12:24.545 --> 00:12:26.713
<c.magenta>若你有一分层图像在</c>
<c.magenta>ImageView里</c>

00:12:27.381 --> 00:12:29.917
<c.magenta>但是这是常出现的情况一个</c>
<c.magenta>UI图像不是</c>

00:12:29.983 --> 00:12:31.118
<c.magenta>实际获得聚焦的控件</c>

00:12:31.185 --> 00:12:34.721
<c.magenta>图像通常是较大控件的组件</c>

00:12:34.788 --> 00:12:37.324
<c.magenta>在这种情况下 较大控件将获得聚焦</c>

00:12:37.391 --> 00:12:38.892
<c.magenta>所以怎么获取浮动外观</c>

00:12:38.959 --> 00:12:40.928
<c.magenta>如果图像不被聚焦？</c>

00:12:41.128 --> 00:12:42.663
<c.magenta>它不一定要获得聚焦</c>

00:12:42.763 --> 00:12:44.631
<c.magenta>我们已拥有添加至</c>
<c.magenta>UIImageView的属性</c>

00:12:44.698 --> 00:12:47.234
<c.magenta>叫作</c>
<c.magenta>adjustsImageWhenAncestorfocused</c>

00:12:47.668 --> 00:12:49.002
<c.magenta>如果你设置它的值为真</c>

00:12:49.069 --> 00:12:51.638
<c.magenta>如果任何父图片视图获得聚焦</c>

00:12:51.905 --> 00:12:53.907
<c.magenta>然后图像会自动获得浮动外观</c>

00:12:53.974 --> 00:12:55.709
<c.magenta>并开始对用户的输入有响应</c>

00:12:57.711 --> 00:12:59.580
<c.magenta>而且这些图像也有</c>
<c.magenta>“按入”状态</c>

00:12:59.646 --> 00:13:02.516
<c.magenta>这与一些正常默认值状态有点不同</c>

00:12:59.646 --> 00:13:02.516
<c.magenta>这与一些正常默认值状态有点不同</c>

00:13:02.583 --> 00:13:04.484
<c.magenta>它们就在屏幕上</c>

00:13:04.718 --> 00:13:06.486
<c.magenta>它们有种“压入”外观</c>

00:13:06.553 --> 00:13:08.655
<c.magenta>好像用户用手压下一样</c>

00:13:09.256 --> 00:13:10.924
<c.magenta>你可以手动触发它</c>

00:13:10.991 --> 00:13:13.493
<c.magenta>通过在ImageView设置</c>
<c.magenta>isHighlighted属性值</c>

00:13:13.560 --> 00:13:16.663
<c.magenta>为真或假 那会产生打开或关闭的效果</c>

00:13:17.264 --> 00:13:19.900
<c.magenta>你可能想在控件子类里这样做</c>

00:13:19.967 --> 00:13:22.369
<c.magenta>当用户开始按下选择按钮 例如</c>

00:13:23.036 --> 00:13:25.472
<c.magenta>但有一些情况 我们已为你考虑到了</c>

00:13:25.539 --> 00:13:27.508
<c.magenta>你完全没有必要手动去做这些</c>

00:13:27.641 --> 00:13:30.844
<c.magenta>这些图像是在</c>
<c.magenta>UICollectionViewCells内部</c>

00:13:30.911 --> 00:13:32.913
<c.magenta>还有图像在自定义</c>
<c.magenta>UIButton内部</c>

00:13:32.980 --> 00:13:35.616
<c.magenta>这些情况下 你完全无需管理</c>
<c.magenta>isHighlighted属性</c>

00:13:35.682 --> 00:13:37.050
<c.magenta>我们会为你管理它</c>

00:13:39.186 --> 00:13:42.356
<c.magenta>我们谈过了动画</c>
<c.magenta>让我们再进一步了解它</c>

00:13:43.423 --> 00:13:46.527
<c.magenta>当这些图像形成时发生的事情之一</c>

00:13:46.593 --> 00:13:48.629
<c.magenta>在浮动外观里它们变得更大</c>

00:13:48.695 --> 00:13:49.663
<c.magenta>或者看起来更大</c>

00:13:50.330 --> 00:13:51.732
<c.magenta>你可能不得不在毗邻使用它</c>

00:13:51.798 --> 00:13:52.866
<c.magenta>你可能把它移开</c>

00:13:52.933 --> 00:13:55.536
<c.magenta>比如在电影画报下方你有一个标签</c>

00:13:56.170 --> 00:13:58.572
<c.magenta>你可以使用自动布局去限制这些</c>

00:13:58.639 --> 00:14:00.641
<c.magenta>所以 若我在此有ImageView</c>

00:13:58.639 --> 00:14:00.641
<c.magenta>所以 若我在此有ImageView</c>

00:14:00.807 --> 00:14:03.911
<c.magenta>若我改变ImageView大小</c>
<c.magenta>使其与图像一样尺寸</c>

00:14:04.912 --> 00:14:06.914
<c.magenta>然后你可以限制图像的边框</c>

00:14:06.980 --> 00:14:09.183
<c.magenta>但当它放大 边框不变</c>

00:14:09.249 --> 00:14:11.485
<c.magenta>但图片的可见度会变</c>

00:14:13.020 --> 00:14:15.656
<c.magenta>所以弄清图片获得聚焦时会有多大</c>

00:14:15.722 --> 00:14:18.258
<c.magenta>我们展示focusedFrameGuide布局指引</c>

00:14:18.358 --> 00:14:21.528
<c.magenta>你可以附加其他限制条件到</c>
<c.magenta>那个布局指引上</c>

00:14:21.595 --> 00:14:23.730
<c.magenta>这样 那些视图将会离图像足够远</c>

00:14:23.797 --> 00:14:26.567
<c.magenta>当它们变大时 不会被剪辑</c>

00:14:27.835 --> 00:14:28.735
<c.magenta>让我们过一遍这个</c>

00:14:28.802 --> 00:14:31.205
<c.magenta>我在此有个ImageView</c>
<c.magenta>并且有个红色轮廓</c>

00:14:31.271 --> 00:14:33.373
<c.magenta>它代表UIImageView的框架</c>

00:14:34.374 --> 00:14:37.444
<c.magenta>当它获得聚焦时会变大</c>

00:14:37.511 --> 00:14:39.479
<c.magenta>但是框架依旧在那个红色轮廓</c>

00:14:41.114 --> 00:14:44.518
<c.magenta>这个虚线轮廓显示的就是</c>
<c.magenta>focusedFrameGuide的位置</c>

00:14:44.585 --> 00:14:46.353
<c.magenta>那个focusedFrameGuide一直在那里</c>

00:14:46.420 --> 00:14:47.955
<c.magenta>即使现在没有获取聚焦</c>

00:14:48.021 --> 00:14:49.590
<c.magenta>你可以选择其中一个</c>

00:14:49.656 --> 00:14:51.158
<c.magenta>以附加布局约束</c>

00:14:52.359 --> 00:14:55.629
<c.magenta>或者你可以选择改变哪个活跃约束</c>

00:14:55.696 --> 00:14:57.764
<c.magenta>基于该元素现在是否被聚焦</c>

00:14:57.831 --> 00:15:00.701
<c.magenta>若你那样做 你真该使用协调API</c>

00:14:57.831 --> 00:15:00.701
<c.magenta>若你那样做 你真该使用协调API</c>

00:15:00.767 --> 00:15:02.803
<c.magenta>那个我们在焦点更新上展示的</c>

00:15:02.870 --> 00:15:05.873
<c.magenta>确保动画同系统动画发生时间一致</c>

00:15:06.473 --> 00:15:08.208
<c.magenta>系统动画有很多微妙的东西</c>

00:15:08.275 --> 00:15:10.110
<c.magenta>比如具体时间</c>

00:15:10.177 --> 00:15:12.346
<c.magenta>它取决于用户滑动得多快</c>

00:15:12.412 --> 00:15:14.381
<c.magenta>或者视图离屏幕多远被聚焦</c>

00:15:14.448 --> 00:15:15.716
<c.magenta>此时它获得聚焦</c>

00:15:16.016 --> 00:15:18.318
<c.magenta>所以将目标值放入你的应用</c>
<c.magenta>是不太可能的</c>

00:15:18.385 --> 00:15:20.454
<c.magenta>你需要使用协调API</c>

00:15:20.521 --> 00:15:23.123
<c.magenta>确保你的动画同系统动画匹配</c>

00:15:23.290 --> 00:15:24.391
<c.magenta>向你展示这是如何做到的</c>

00:15:24.458 --> 00:15:26.660
<c.magenta>我想邀请Randy上台</c>
<c.magenta>给你们做个演示</c>

00:15:26.727 --> 00:15:27.594
<c.magenta>Randy</c>

00:15:31.865 --> 00:15:32.833
<c.magenta>谢谢你 Justin</c>

00:15:33.300 --> 00:15:36.770
<c.magenta>今天我将要过一遍这两个</c>
<c.magenta>我们经常碰到的情况</c>

00:15:36.937 --> 00:15:39.273
<c.magenta>关于添加交互至分层图像</c>

00:15:39.773 --> 00:15:42.643
<c.magenta>首先我们将看一个UIButton</c>

00:15:42.809 --> 00:15:45.913
<c.magenta>其次我们将看一下</c>
<c.magenta>自定义集合视图表单元</c>

00:15:46.413 --> 00:15:49.416
<c.magenta>现在开始</c>
<c.magenta>我有一个在Xcode中已打开的项目</c>

00:15:49.483 --> 00:15:51.752
<c.magenta>有一个资产目录 里面包含分层图像</c>

00:15:51.818 --> 00:15:53.120
<c.magenta>我只有一个...</c>

00:15:54.721 --> 00:15:56.490
<c.magenta>ViewController子类</c>

00:15:56.857 --> 00:15:58.992
<c.magenta>我们将要拖拽出一个按钮——</c>

00:16:03.063 --> 00:16:03.964
<c.magenta>到画布</c>

00:16:05.199 --> 00:16:06.266
<c.magenta>查看它</c>

00:16:07.534 --> 00:16:09.303
<c.magenta>给它一个图像</c>

00:16:17.444 --> 00:16:18.679
<c.magenta>我们将删除它的标题</c>

00:16:21.815 --> 00:16:23.684
<c.magenta>接下来我们将加几个约束条件</c>

00:16:24.985 --> 00:16:26.887
<c.magenta>让它垂直和水平居中</c>

00:16:28.956 --> 00:16:33.427
<c.magenta>接下来我们将更新按钮框架来匹配</c>
<c.magenta>这些约束条件</c>

00:16:33.594 --> 00:16:35.495
<c.magenta>你可以通过下拉菜单来做</c>

00:16:35.796 --> 00:16:39.099
<c.magenta>但是我通常用键盘快捷键</c>
<c.magenta>Command Option Equals</c>

00:16:40.467 --> 00:16:42.402
<c.magenta>如果你仔细看</c>

00:16:42.603 --> 00:16:45.472
<c.magenta>按钮的周围有一点额外空间</c>

00:16:46.139 --> 00:16:48.175
<c.magenta>这些是边缘内容插图</c>

00:16:48.442 --> 00:16:50.544
<c.magenta>我们不需要这些 所以可以删除</c>

00:16:53.113 --> 00:16:54.515
<c.magenta>这看来差不多是我们想要的</c>

00:16:54.615 --> 00:16:57.551
<c.magenta>我们将构建和运行并且看看它怎样运作的</c>

00:16:58.418 --> 00:17:02.122
<c.magenta>我正用tvOS模拟器 但已将Mac</c>
<c.magenta>与Siri Remote配对了</c>

00:16:58.418 --> 00:17:02.122
<c.magenta>我正用tvOS模拟器 但已将Mac</c>
<c.magenta>与Siri Remote配对了</c>

00:17:03.257 --> 00:17:07.060
<c.magenta>对于交互是怎样工作的</c>
<c.magenta>你会得到一个较好的认识</c>

00:17:08.127 --> 00:17:11.464
<c.magenta>我的手指正按下选择按钮</c>

00:17:12.132 --> 00:17:15.602
<c.magenta>但这只是变暗的效果和稍微压入的效果</c>

00:17:15.969 --> 00:17:17.738
<c.magenta>当手指移动到数字转换器上</c>

00:17:17.804 --> 00:17:19.205
<c.magenta>它对我的触摸没有回应</c>

00:17:19.640 --> 00:17:20.374
<c.magenta>让我们做得更好</c>

00:17:22.576 --> 00:17:23.443
<c.magenta>为此</c>

00:17:23.510 --> 00:17:28.882
<c.magenta>我将打开Assistant Editor</c>
<c.magenta>为ViewController的子类</c>

00:17:29.883 --> 00:17:32.152
<c.magenta>为按钮拖拽出一个轮廓</c>

00:17:36.790 --> 00:17:38.192
<c.magenta>在viewDidLoad里</c>

00:17:38.258 --> 00:17:41.495
<c.magenta>我将从那个按钮里</c>
<c.magenta>抓取ImageView</c>

00:17:47.401 --> 00:17:50.337
<c.magenta>我要去打开</c>
<c.magenta>Justin告诉我们的那个属性</c>

00:17:51.471 --> 00:17:53.607
<c.magenta>adjustsImageWhenAncestorFocused</c>

00:17:56.410 --> 00:17:57.978
<c.magenta>现在如果我构建并且运行</c>

00:17:59.746 --> 00:18:02.282
<c.magenta>你应该看到按钮</c>

00:17:59.746 --> 00:18:02.282
<c.magenta>你应该看到按钮</c>

00:18:02.349 --> 00:18:04.017
<c.magenta>对在遥控器上的手指作出回应</c>

00:18:05.319 --> 00:18:07.354
<c.magenta>当我点击它的时候 它推进去</c>

00:18:07.788 --> 00:18:08.989
<c.magenta>但是我们仍然还有一个问题</c>

00:18:09.056 --> 00:18:10.757
<c.magenta>因为这个按钮的边缘被裁剪了</c>

00:18:11.225 --> 00:18:13.060
<c.magenta>由于默认</c>

00:18:13.594 --> 00:18:17.030
<c.magenta>按钮的ImageView</c>
<c.magenta>把clipsToBounds打开</c>

00:18:17.764 --> 00:18:18.832
<c.magenta>我们把它关闭就好</c>

00:18:19.967 --> 00:18:20.868
<c.magenta>再一次构建和运行</c>

00:18:22.002 --> 00:18:23.770
<c.magenta>我们应该能够得到我们想要的结果</c>

00:18:24.204 --> 00:18:26.807
<c.magenta>交互的分层图像是非常棒的</c>

00:18:26.874 --> 00:18:28.842
<c.magenta>它们围绕着我的手指移动</c>

00:18:29.009 --> 00:18:30.844
<c.magenta>当我按下它 它就压入</c>

00:18:31.745 --> 00:18:32.579
<c.magenta>很好</c>

00:18:33.146 --> 00:18:34.348
<c.magenta>让我们来一些更复杂的</c>

00:18:37.317 --> 00:18:38.585
<c.magenta>我在此还有一个项目</c>

00:18:39.586 --> 00:18:42.890
<c.magenta>这个项目有CollectionViewController的子类</c>

00:18:44.057 --> 00:18:46.260
<c.magenta>我继续</c>

00:18:46.326 --> 00:18:49.730
<c.magenta>并且配置了CollectionView的尺寸参数</c>

00:18:50.197 --> 00:18:52.699
<c.magenta>根据tvOS的Human Interface Guidelines</c>

00:18:52.766 --> 00:18:53.967
<c.magenta>一个六栏位布局</c>

00:18:54.735 --> 00:18:57.871
<c.magenta>这些指引告诉我们</c>
<c.magenta>我想要一个宽度为250点的单元</c>

00:18:58.438 --> 00:19:02.176
<c.magenta>我知道 基于我的设计</c>
<c.magenta>我需要垂直450点</c>

00:18:58.438 --> 00:19:02.176
<c.magenta>我知道 基于我的设计</c>
<c.magenta>我需要垂直450点</c>

00:19:02.376 --> 00:19:03.677
<c.magenta>作为单元的内容</c>

00:19:04.344 --> 00:19:06.213
<c.magenta>指引告诉我们</c>
<c.magenta>对于一个六栏位布局</c>

00:19:06.280 --> 00:19:08.982
<c.magenta>我们需要水平单元间48点</c>

00:19:09.349 --> 00:19:11.585
<c.magenta>及垂直单元间至少100点</c>

00:19:12.085 --> 00:19:15.722
<c.magenta>最后 为在广泛TV的安全区域内</c>

00:19:15.789 --> 00:19:17.958
<c.magenta>我们想在顶部和底部各保留60点离</c>

00:19:18.025 --> 00:19:19.726
<c.magenta>及左边和右边各保留90点</c>

00:19:19.826 --> 00:19:21.695
<c.magenta>这些数字在指引里都有</c>

00:19:22.696 --> 00:19:24.398
<c.magenta>让我们看下单元本身</c>

00:19:25.866 --> 00:19:29.436
<c.magenta>我已经给它一个自定义类和复用标识</c>

00:19:30.170 --> 00:19:31.839
<c.magenta>我们将要放大一点</c>

00:19:32.506 --> 00:19:34.041
<c.magenta>增加一些...</c>

00:19:35.175 --> 00:19:36.210
<c.magenta>自定义子视图</c>

00:19:38.178 --> 00:19:40.280
<c.magenta>首先我们将拖拽出</c>
<c.magenta>一个ImageView</c>

00:19:45.786 --> 00:19:47.154
<c.magenta>然后拖拽出一个标签</c>

00:19:52.793 --> 00:19:55.796
<c.magenta>现在我将增加一些限制条件来布局视图</c>

00:19:55.863 --> 00:19:59.399
<c.magenta>我想让ImageView紧靠</c>
<c.magenta>左右顶部边缘</c>

00:19:59.900 --> 00:20:03.770
<c.magenta>我们恰巧知道我们所有的图像</c>
<c.magenta>有相同的宽高比</c>

00:19:59.900 --> 00:20:03.770
<c.magenta>我们恰巧知道我们所有的图像</c>
<c.magenta>有相同的宽高比</c>

00:20:03.837 --> 00:20:06.106
<c.magenta>所以我将添加宽高比限制条件</c>

00:20:07.875 --> 00:20:09.676
<c.magenta>我将编辑宽高比约束条件</c>

00:20:09.743 --> 00:20:12.179
<c.magenta>以匹配我们的图像</c>
<c.magenta>所以它们的比例是2:3</c>

00:20:14.114 --> 00:20:16.216
<c.magenta>我将为我的标签添加一些限制条件</c>

00:20:16.416 --> 00:20:18.819
<c.magenta>我从标签按Control拖拽</c>
<c.magenta>至ImageView</c>

00:20:18.886 --> 00:20:22.322
<c.magenta>添加一个水平居中的约束条件</c>

00:20:23.924 --> 00:20:27.261
<c.magenta>我也想要我的ImageView</c>

00:20:27.594 --> 00:20:31.265
<c.magenta>我的标签顶部离</c>
<c.magenta>ImageView底部有15点</c>

00:20:31.431 --> 00:20:33.901
<c.magenta>我会在它们两项之间添加一个约束</c>

00:20:36.236 --> 00:20:38.205
<c.magenta>现在我们已经添加了这些约束</c>

00:20:38.272 --> 00:20:39.806
<c.magenta>我们可以执行</c>
<c.magenta>Command Option Equals</c>

00:20:40.140 --> 00:20:42.109
<c.magenta>把一切回归原位</c>

00:20:43.243 --> 00:20:45.712
<c.magenta>最后 这个字体有点小</c>

00:20:45.779 --> 00:20:48.982
<c.magenta>我把它更改成Body风格</c>

00:20:49.316 --> 00:20:50.150
<c.magenta>不错的选择</c>

00:20:51.218 --> 00:20:55.689
<c.magenta>我们已从海报上的</c>
<c.magenta>ImageView获得一些轮廓</c>

00:20:55.923 --> 00:20:57.858
<c.magenta>我们只要钩住上面的和标签</c>

00:20:59.359 --> 00:21:02.362
<c.magenta>现在让我们快速浏览下</c>
<c.magenta>CollectionViewController</c>

00:20:59.359 --> 00:21:02.362
<c.magenta>现在让我们快速浏览下</c>
<c.magenta>CollectionViewController</c>

00:21:02.829 --> 00:21:05.098
<c.magenta>你可以看到我们刚在这部分执行的项数</c>

00:21:05.165 --> 00:21:06.900
<c.magenta>以及cellForItemAtindexPath</c>

00:21:07.568 --> 00:21:09.069
<c.magenta>如果我构建和运行</c>

00:21:10.571 --> 00:21:13.540
<c.magenta>我应该能得到我们寻找的基本布局</c>

00:21:14.141 --> 00:21:15.976
<c.magenta>但是我们将看看行为是怎样的</c>

00:21:20.514 --> 00:21:22.216
<c.magenta>这几乎是我想要的布局</c>

00:21:22.282 --> 00:21:23.584
<c.magenta>全是我想要的</c>

00:21:23.650 --> 00:21:26.420
<c.magenta>但一下子你说不出哪个项目被聚焦</c>

00:21:26.486 --> 00:21:29.823
<c.magenta>当我点击 你看不到我选择的单元</c>

00:21:30.891 --> 00:21:33.627
<c.magenta>让我们来处理这些事情</c>

00:21:34.862 --> 00:21:40.234
<c.magenta>现在 首先 为了看到焦点所在</c>
<c.magenta>我们将进入Interface Builder</c>

00:21:40.300 --> 00:21:41.835
<c.magenta>选择我们的ImageView</c>

00:21:41.902 --> 00:21:44.805
<c.magenta>检查adjustImagewhenfocused检查标记</c>

00:21:45.873 --> 00:21:49.910
<c.magenta>这足以让我们的单元</c>

00:21:49.977 --> 00:21:51.645
<c.magenta>开始回应焦点</c>

00:21:52.513 --> 00:21:55.315
<c.magenta>如你看到</c>
<c.magenta>它很大 它对我的触摸作出反应</c>

00:21:55.382 --> 00:21:56.917
<c.magenta>当我点击它 它推进</c>

00:21:57.584 --> 00:21:59.653
<c.magenta>但是标签重叠在底部</c>

00:21:59.820 --> 00:22:03.123
<c.magenta>他们对焦点尺寸变化没有反应</c>

00:21:59.820 --> 00:22:03.123
<c.magenta>他们对焦点尺寸变化没有反应</c>

00:22:04.024 --> 00:22:05.526
<c.magenta>为此</c>

00:22:05.592 --> 00:22:09.263
<c.magenta>我们将打开自定义单元类</c>

00:22:09.329 --> 00:22:10.430
<c.magenta>在Assistant Editor里</c>

00:22:11.865 --> 00:22:12.699
<c.magenta>还有...</c>

00:22:13.534 --> 00:22:18.005
<c.magenta>首先 我们将拖拽出一个轮廓</c>

00:22:18.071 --> 00:22:20.707
<c.magenta>为标签顶部和ImageView底部</c>
<c.magenta>之间的垂直约束</c>

00:22:21.508 --> 00:22:22.643
<c.magenta>我们将为它添加一个轮廓</c>

00:22:22.709 --> 00:22:28.315
<c.magenta>我们称它为</c>
<c.magenta>unfocusedConstraint</c>

00:22:33.687 --> 00:22:35.222
<c.magenta>然后我将添加另外一个属性</c>

00:22:39.126 --> 00:22:41.094
<c.magenta>为</c>
<c.magenta>focusedConstraint</c>

00:22:42.029 --> 00:22:44.831
<c.magenta>我们将在awakeFromNib里</c>
<c.magenta>设置focusedConstraint</c>

00:22:48.202 --> 00:22:50.604
<c.magenta>成为label.topAnchor</c>

00:23:00.314 --> 00:23:06.687
<c.magenta>与imageView的</c>
<c.magenta>focusedFrameGuide.bottomAnchor相关</c>

00:23:07.788 --> 00:23:09.022
<c.magenta>还有那15点</c>

00:23:12.726 --> 00:23:13.560
<c.magenta>然后在...</c>

00:23:15.362 --> 00:23:17.231
<c.magenta>updateConstraints</c>

00:23:18.332 --> 00:23:20.200
<c.magenta>我们将设置</c>
<c.magenta>focusedFrame</c>

00:23:20.334 --> 00:23:22.402
<c.magenta>我们将使focusedConstraint为活跃状态</c>

00:23:22.870 --> 00:23:24.905
<c.magenta>当单元获得聚焦</c>

00:23:25.706 --> 00:23:29.209
<c.magenta>我们将使</c>
<c.magenta>unfocusedConstraint为活跃状态</c>

00:23:31.178 --> 00:23:32.579
<c.magenta>在相反的情况下</c>

00:23:34.515 --> 00:23:38.118
<c.magenta>最后 在didUpdateFocus里</c>
<c.magenta>我们将使约束无效</c>

00:23:38.185 --> 00:23:41.421
<c.magenta>通过调用</c>
<c.magenta>setNeedsUpdateConstraints</c>

00:23:42.956 --> 00:23:44.858
<c.magenta>我们将添加一个协调动画</c>

00:23:45.492 --> 00:23:48.328
<c.magenta>通过调用</c>
<c.magenta>addCoordinatedAnimations</c>

00:23:50.230 --> 00:23:51.532
<c.magenta>在那里面</c>

00:23:52.666 --> 00:23:54.635
<c.magenta>我们将调用</c>
<c.magenta>layoutIfNeeded</c>

00:24:02.342 --> 00:24:04.945
<c.magenta>这应该够了</c>
<c.magenta>现在当我们构建和运行</c>

00:24:08.081 --> 00:24:11.218
<c.magenta>我们应该看到标签移动到下方</c>

00:24:11.285 --> 00:24:13.954
<c.magenta>离开焦点海报</c>

00:24:14.621 --> 00:24:18.392
<c.magenta>当我从一个移动到另一个</c>

00:24:18.992 --> 00:24:22.396
<c.magenta>它们全部动画离开</c>
<c.magenta>回到它们应该在的地方</c>

00:24:23.363 --> 00:24:24.198
<c.magenta>很好！</c>

00:24:30.370 --> 00:24:33.473
<c.magenta>记住 使用focusedFrameGuide</c>
<c.magenta>和coordinatedAnimations</c>

00:24:33.540 --> 00:24:36.944
<c.magenta>不要忘记打开</c>
<c.magenta>adjustsImageWhenAncestorFocused</c>

00:24:37.010 --> 00:24:37.978
<c.magenta>去获取这些效果</c>

00:24:38.111 --> 00:24:39.746
<c.magenta>关于那些 现在交还给Justin</c>

00:24:45.485 --> 00:24:46.920
<c.magenta>谢谢那很棒的演示 Randy</c>

00:24:46.987 --> 00:24:48.455
<c.magenta>你可以看到它是多么的容易</c>

00:24:48.522 --> 00:24:50.991
<c.magenta>去真正利用独特的用户接口元素</c>

00:24:51.058 --> 00:24:52.793
<c.magenta>真正让你的tvOS应用变得生动</c>

00:24:54.261 --> 00:24:55.329
<c.magenta>让我们说些别的</c>

00:24:55.395 --> 00:24:56.763
<c.magenta>讨论一下滚动条</c>

00:24:57.197 --> 00:25:00.767
<c.magenta>tvOS上滚动条与iOS上有些不同</c>

00:24:57.197 --> 00:25:00.767
<c.magenta>tvOS上滚动条与iOS上有些不同</c>

00:25:00.868 --> 00:25:02.870
<c.magenta>它必须间接触摸</c>

00:25:03.203 --> 00:25:05.906
<c.magenta>当用户在iOS上</c>
<c.magenta>ScrollView里滚动</c>

00:25:05.973 --> 00:25:07.441
<c.magenta>它们用肢体触摸ScrollView</c>

00:25:07.508 --> 00:25:08.675
<c.magenta>当他们移动手指</c>

00:25:08.742 --> 00:25:10.210
<c.magenta>ScrollView偏移将会调整</c>

00:25:10.277 --> 00:25:11.879
<c.magenta>去匹配他们手指的运动</c>

00:25:12.379 --> 00:25:14.882
<c.magenta>但在tvOS上并非如此</c>

00:25:14.948 --> 00:25:16.850
<c.magenta>在tvOS上</c>
<c.magenta>你并不是在触摸屏幕</c>

00:25:17.184 --> 00:25:19.920
<c.magenta>也不是直接操控滚动视图</c>

00:25:19.987 --> 00:25:22.456
<c.magenta>你真正做的是改变焦点项目</c>

00:25:22.656 --> 00:25:25.826
<c.magenta>当焦点项目改变</c>
<c.magenta>焦点引擎会检测到它</c>

00:25:25.893 --> 00:25:28.762
<c.magenta>它会自动滚动到</c>
<c.magenta>它需要的任何滚动视图</c>

00:25:28.829 --> 00:25:31.298
<c.magenta>确保焦点视图总是在屏幕上</c>

00:25:34.034 --> 00:25:36.670
<c.magenta>焦点引擎会选择它能够调整的最佳偏移</c>

00:25:36.737 --> 00:25:38.805
<c.magenta>基于视图的尺寸和滚动视图的尺寸</c>

00:25:38.972 --> 00:25:40.807
<c.magenta>但也有时候你想控制</c>

00:25:40.874 --> 00:25:42.609
<c.magenta>它将发送给你什么样的偏移</c>

00:25:42.843 --> 00:25:45.579
<c.magenta>例如 一个人们常用的自定义</c>

00:25:45.646 --> 00:25:47.915
<c.magenta>是他们想要焦点视图始终居中</c>

00:25:47.981 --> 00:25:49.383
<c.magenta>在ScrollView的边界内</c>

00:25:49.449 --> 00:25:50.317
<c.magenta>你可以那样做</c>

00:25:50.484 --> 00:25:53.086
<c.magenta>你可以那样做的方法是</c>
<c.magenta>使用UIScrollViewDelegate方法</c>

00:25:53.287 --> 00:25:54.521
<c.magenta>你有可能从iOS中识别</c>

00:25:54.588 --> 00:25:59.026
<c.magenta>那是scrollViewWillEndDragging:</c>
<c.magenta>withVelocity:targetContentOffset</c>

00:25:59.493 --> 00:26:01.862
<c.magenta>那里最终的参数</c>
<c.magenta>targetContentOffset</c>

00:25:59.493 --> 00:26:01.862
<c.magenta>那里最终的参数</c>
<c.magenta>targetContentOffset</c>

00:26:01.929 --> 00:26:03.797
<c.magenta>是一个指针指向CGPoint</c>

00:26:04.531 --> 00:26:06.934
<c.magenta>那个指针代表偏移</c>

00:26:07.000 --> 00:26:10.304
<c.magenta>焦点引擎将滚动到的地方</c>
<c.magenta>如果你什么也不做</c>

00:26:10.370 --> 00:26:12.639
<c.magenta>那个是偏移</c>
<c.magenta>它会自动为你展示</c>

00:26:12.940 --> 00:26:14.908
<c.magenta>但是如果你愿意自己计算</c>

00:26:14.975 --> 00:26:17.177
<c.magenta>滚动偏移是多少</c>

00:26:17.277 --> 00:26:18.178
<c.magenta>你也可以那样做</c>

00:26:18.245 --> 00:26:20.314
<c.magenta>计算你想要的偏移</c>

00:26:20.380 --> 00:26:22.616
<c.magenta>把它的值存在指针中</c>

00:26:22.916 --> 00:26:24.218
<c.magenta>让指针指向你</c>

00:26:24.284 --> 00:26:26.119
<c.magenta>焦点引擎将滚到那里</c>

00:26:26.320 --> 00:26:28.288
<c.magenta>伴随着它</c>
<c.magenta>你会得到很多很棒的系统动画</c>

00:26:28.355 --> 00:26:29.623
<c.magenta>对于你所选择的偏移</c>

00:26:31.725 --> 00:26:33.727
<c.magenta>但是并不是说直接操控总是不好的</c>

00:26:33.794 --> 00:26:35.729
<c.magenta>或者在tvOS上从来不是个好主意</c>

00:26:36.029 --> 00:26:38.031
<c.magenta>有些情况下 你想这样做</c>

00:26:38.098 --> 00:26:40.601
<c.magenta>所以 一些情况下需要</c>

00:26:40.667 --> 00:26:42.769
<c.magenta>比如你有许多全屏内容</c>

00:26:42.836 --> 00:26:44.438
<c.magenta>可能是一个全屏相片集</c>

00:26:44.605 --> 00:26:46.740
<c.magenta>那里照片可以完全覆盖到屏幕边缘</c>

00:26:47.074 --> 00:26:49.543
<c.magenta>一个UIKit的例子</c>
<c.magenta>是UIPageViewController</c>

00:26:49.810 --> 00:26:52.446
<c.magenta>当你有一个UIPageViewController</c>
<c.magenta>它并不做焦点滚动</c>

00:26:52.513 --> 00:26:54.114
<c.magenta>取而代之 你直接操控</c>

00:26:54.181 --> 00:26:56.450
<c.magenta>PageViewController</c>
<c.magenta>的ScrollView内容</c>

00:26:56.950 --> 00:26:58.919
<c.magenta>还有其他情况下 你有很多滚动文本</c>

00:26:58.986 --> 00:27:01.321
<c.magenta>这是你想直接操控的另外一处</c>

00:26:58.986 --> 00:27:01.321
<c.magenta>这是你想直接操控的另外一处</c>

00:27:01.455 --> 00:27:04.758
<c.magenta>基本上 不清楚焦点项目是什么时</c>

00:27:05.025 --> 00:27:08.328
<c.magenta>你不能够看到下一个焦点项目是什么</c>

00:27:08.662 --> 00:27:10.531
<c.magenta>这些都是非常适合直接操控的情况</c>

00:27:11.265 --> 00:27:12.132
<c.magenta>如果你想要那样做</c>

00:27:12.199 --> 00:27:14.201
<c.magenta>你没必要去写你自己的</c>
<c.magenta>手势处理代码</c>

00:27:14.268 --> 00:27:17.104
<c.magenta>你可以复用早已存在</c>
<c.magenta>于ScrollView的拖动手势</c>

00:27:17.604 --> 00:27:20.040
<c.magenta>这个技巧是</c>
<c.magenta>滚动视图是被配置成</c>

00:27:20.107 --> 00:27:22.809
<c.magenta>直接触摸的唯一监听</c>

00:27:23.277 --> 00:27:25.946
<c.magenta>Siri Remote</c>
<c.magenta>正生成间接触摸</c>

00:27:26.280 --> 00:27:27.881
<c.magenta>你只需获得这个拖动手势识别器</c>

00:27:27.948 --> 00:27:30.017
<c.magenta>确认它监听间接触摸</c>

00:27:31.318 --> 00:27:33.754
<c.magenta>我们也有定向按下手势识别器</c>

00:27:33.820 --> 00:27:35.422
<c.magenta>只有tvOS的</c>
<c.magenta>ScrollView上才有</c>

00:27:35.489 --> 00:27:37.791
<c.magenta>它是监听这些箭头按钮按下事件</c>

00:27:37.858 --> 00:27:40.227
<c.magenta>用户不使用设备的情况下</c>

00:27:40.294 --> 00:27:42.896
<c.magenta>可以触摸输入</c>
<c.magenta>也可以滚动ScrollView</c>

00:27:43.063 --> 00:27:44.798
<c.magenta>这个手势默认是禁用的</c>

00:27:44.865 --> 00:27:47.334
<c.magenta>因为我们更倾向于</c>
<c.magenta>让这些箭头按下操控焦点</c>

00:27:47.401 --> 00:27:48.769
<c.magenta>而非操控ScrollView偏移</c>

00:27:48.836 --> 00:27:50.037
<c.magenta>你需要启用它</c>

00:27:50.504 --> 00:27:53.207
<c.magenta>你可以使用这段代码去做这两个事情</c>

00:27:53.273 --> 00:27:56.176
<c.magenta>我们从ScrollView中得到</c>
<c.magenta>panGestureRecognizer</c>

00:27:56.243 --> 00:27:59.046
<c.magenta>我们告诉它我们想监听间接触摸事件</c>

00:27:59.580 --> 00:28:01.481
<c.magenta>我们得到</c>
<c.magenta>directionalPressGestureRecognizer</c>

00:27:59.580 --> 00:28:01.481
<c.magenta>我们得到</c>
<c.magenta>directionalPressGestureRecognizer</c>

00:28:01.548 --> 00:28:02.850
<c.magenta>告诉它应该是打开的</c>

00:28:03.283 --> 00:28:06.887
<c.magenta>如果你这样做 所有进入</c>
<c.magenta>ScrollView的这些事件</c>

00:28:06.954 --> 00:28:09.523
<c.magenta>会直接操控ScrollView偏移</c>

00:28:10.724 --> 00:28:13.861
<c.magenta>其实 合并直接操控技术</c>

00:28:13.927 --> 00:28:15.562
<c.magenta>和焦点交互技术是可能的</c>

00:28:15.629 --> 00:28:16.663
<c.magenta>为了展示如何去做</c>

00:28:16.730 --> 00:28:18.866
<c.magenta>我想邀请Kevin上台演示</c>

00:28:18.932 --> 00:28:19.766
<c.magenta>Kevin</c>

00:28:22.169 --> 00:28:23.036
<c.magenta>谢谢 Justin</c>

00:28:24.771 --> 00:28:27.841
<c.magenta>嗨 我是Kevin Hiscott</c>
<c.magenta>我是tvOS工程师</c>

00:28:28.308 --> 00:28:30.544
<c.magenta>我们将看一个关于视图控制器的例子</c>

00:28:30.878 --> 00:28:33.914
<c.magenta>在文本视图中展现条款和条件文本</c>

00:28:34.815 --> 00:28:36.984
<c.magenta>TextView是</c>
<c.magenta>ScrollView的子类</c>

00:28:37.050 --> 00:28:40.754
<c.magenta>我们可以看到怎么样向它添加直接操控</c>

00:28:44.458 --> 00:28:47.194
<c.magenta>我们去看下我的ZIB</c>
<c.magenta>看看我目前为止设置了什么</c>

00:28:47.728 --> 00:28:51.398
<c.magenta>我有个文本视图带有冗长的</c>
<c.magenta>Lorem Ipsum粘贴在里面</c>

00:28:52.599 --> 00:28:55.102
<c.magenta>如果我们进入应用程序</c>

00:28:55.169 --> 00:28:57.538
<c.magenta>我们可在应用的上下文中看到它的样子</c>

00:28:59.206 --> 00:29:00.707
<c.magenta>展现ViewController时</c>

00:28:59.206 --> 00:29:00.707
<c.magenta>展现ViewController时</c>

00:29:00.774 --> 00:29:03.944
<c.magenta>我们可以沿着底部的边缘文本</c>
<c.magenta>看到其实文本已被裁剪</c>

00:29:04.344 --> 00:29:07.848
<c.magenta>若我努力擦碰Siri Remote</c>
<c.magenta>文本不会滚动</c>

00:29:08.415 --> 00:29:09.850
<c.magenta>让我们来改进它</c>

00:29:11.718 --> 00:29:13.253
<c.magenta>让我们进入</c>
<c.magenta>ViewController</c>

00:29:13.320 --> 00:29:17.424
<c.magenta>在viewDidLoad里抓取</c>
<c.magenta>我为UITextView创建的轮廓</c>

00:29:17.958 --> 00:29:19.893
<c.magenta>我称它为</c>
<c.magenta>messageTextView</c>

00:29:20.827 --> 00:29:24.498
<c.magenta>在messageTextView和任何ScrollView上</c>
<c.magenta>有一个panGestureRecognizer</c>

00:29:24.698 --> 00:29:26.633
<c.magenta>我们将改变它允许的触摸类型</c>

00:29:26.700 --> 00:29:28.569
<c.magenta>包括间接触摸的类型</c>

00:29:29.203 --> 00:29:30.270
<c.magenta>如Justin所说</c>

00:29:30.337 --> 00:29:32.506
<c.magenta>这些触摸</c>
<c.magenta>由Siri Remote创建</c>

00:29:34.074 --> 00:29:37.010
<c.magenta>我们还将把isSelectable</c>
<c.magenta>的值设置为真</c>

00:29:37.511 --> 00:29:40.948
<c.magenta>这将允许文本视图获得聚焦</c>

00:29:41.014 --> 00:29:42.249
<c.magenta>和接收这些事件</c>

00:29:42.482 --> 00:29:44.351
<c.magenta>让我们构建和运行看看它们怎样运作</c>

00:29:52.259 --> 00:29:53.961
<c.magenta>呈现ViewController时</c>

00:29:54.528 --> 00:29:56.597
<c.magenta>其实我能够直接擦碰</c>

00:29:56.663 --> 00:29:58.966
<c.magenta>通过Siri Remote</c>
<c.magenta>使文本上下滚动</c>

00:29:59.399 --> 00:30:01.001
<c.magenta>很好 直接操控</c>

00:29:59.399 --> 00:30:01.001
<c.magenta>很好 直接操控</c>

00:30:01.935 --> 00:30:05.105
<c.magenta>另一个ViewController</c>
<c.magenta>所需的好条款和条件</c>

00:30:05.472 --> 00:30:09.376
<c.magenta>是让用户接受或拒绝你条件的方法</c>

00:30:10.043 --> 00:30:12.079
<c.magenta>为此 让我们看看我的ZIB</c>

00:30:13.380 --> 00:30:14.748
<c.magenta>拖入几个按钮</c>

00:30:16.617 --> 00:30:18.485
<c.magenta>我将一个标识为不同意</c>

00:30:20.821 --> 00:30:21.955
<c.magenta>另一个标识为同意</c>

00:30:23.924 --> 00:30:25.726
<c.magenta>让我们构建和运行看看将发生什么</c>

00:30:25.859 --> 00:30:28.529
<c.magenta>我期待发生的是我们的焦点</c>

00:30:28.595 --> 00:30:31.431
<c.magenta>伴随着水平擦碰而作水平移动</c>

00:30:31.498 --> 00:30:34.101
<c.magenta>对于垂直擦碰却始终滚动文本视图</c>

00:30:34.935 --> 00:30:37.004
<c.magenta>但当我呈现</c>
<c.magenta>ViewController</c>

00:30:37.204 --> 00:30:41.475
<c.magenta>我可以看到那些垂直擦碰确有移动文本</c>

00:30:41.542 --> 00:30:43.243
<c.magenta>但是 如果我擦碰得太低</c>

00:30:43.310 --> 00:30:45.312
<c.magenta>焦点实际移动到按钮上</c>

00:30:45.579 --> 00:30:47.181
<c.magenta>我就不能滚动文本了</c>

00:30:47.247 --> 00:30:49.316
<c.magenta>直到焦点回到文本视图</c>

00:30:50.083 --> 00:30:52.553
<c.magenta>这并非我想要的行为</c>

00:30:53.987 --> 00:30:55.889
<c.magenta>让我们回到</c>
<c.magenta>我的ViewController</c>

00:30:55.956 --> 00:30:57.858
<c.magenta>我们将禁用isSelectable</c>

00:30:58.225 --> 00:31:02.696
<c.magenta>我们实际上不是想让TextView</c>
<c.magenta>成为一个可获聚焦的屏幕元素</c>

00:30:58.225 --> 00:31:02.696
<c.magenta>我们实际上不是想让TextView</c>
<c.magenta>成为一个可获聚焦的屏幕元素</c>

00:31:03.463 --> 00:31:05.265
<c.magenta>取而代之 我将展示一个小技巧</c>

00:31:06.066 --> 00:31:08.135
<c.magenta>我们将抓取panGestureRecognizer</c>

00:31:08.202 --> 00:31:11.972
<c.magenta>实际上把它添加到我们的</c>
<c.magenta>ViewController视图</c>

00:31:12.573 --> 00:31:14.575
<c.magenta>这将允许消息TextView</c>

00:31:14.641 --> 00:31:17.244
<c.magenta>本身不获聚焦的情况下 接收事件</c>

00:31:18.412 --> 00:31:20.314
<c.magenta>让我们构建和运行看看它的表现</c>

00:31:25.752 --> 00:31:27.521
<c.magenta>呈现ViewController时</c>

00:31:28.789 --> 00:31:31.992
<c.magenta>我们可以看到不同意按钮立刻获得聚焦</c>

00:31:32.259 --> 00:31:34.828
<c.magenta>这是因为文本视图已经不可获聚焦了</c>

00:31:35.295 --> 00:31:38.198
<c.magenta>我可左右擦碰Siri Remote</c>
<c.magenta>去移动焦点</c>

00:31:38.265 --> 00:31:41.602
<c.magenta>但任何时候</c>
<c.magenta>我可以上下擦碰去移动文本</c>

00:31:42.269 --> 00:31:44.004
<c.magenta>很好 这样看起来不错</c>

00:31:44.638 --> 00:31:47.274
<c.magenta>在tvOS上 我们最后一个要考虑的</c>

00:31:47.541 --> 00:31:51.078
<c.magenta>是由其他输入方法产生的</c>
<c.magenta>定向按下类型事件</c>

00:31:51.144 --> 00:31:54.448
<c.magenta>像游戏控制器</c>
<c.magenta>键盘 或者IR遥控器</c>

00:31:55.148 --> 00:31:57.718
<c.magenta>我们让tvOS很容易支持这些</c>

00:31:57.918 --> 00:31:59.620
<c.magenta>让我们回头看看我的视图控制器</c>

00:32:00.087 --> 00:32:03.090
<c.magenta>我们将抓取directionalPressGestureRecognizer</c>

00:32:03.156 --> 00:32:05.692
<c.magenta>从我们的messageTextView中</c>
<c.magenta>并且启用它</c>

00:32:05.759 --> 00:32:09.062
<c.magenta>伴随着这些类型而允许滚动发生</c>

00:32:09.129 --> 00:32:10.664
<c.magenta>由其他设备生成</c>

00:32:11.899 --> 00:32:13.567
<c.magenta>我们将要做的最后一件事是</c>

00:32:13.634 --> 00:32:15.969
<c.magenta>把GestureRecognizer移动到</c>
<c.magenta>我们自己的视图中</c>

00:32:16.036 --> 00:32:17.137
<c.magenta>如我们之前做的</c>

00:32:19.673 --> 00:32:22.109
<c.magenta>让我们构建和运行看看</c>
<c.magenta>整体运行情况</c>

00:32:25.612 --> 00:32:27.514
<c.magenta>现在当我呈现</c>
<c.magenta>条款和条件的时候</c>

00:32:27.714 --> 00:32:30.617
<c.magenta>我能够左右擦碰去移动焦点</c>

00:32:30.717 --> 00:32:34.221
<c.magenta>我也能够左右拍击去移动焦点</c>

00:32:34.555 --> 00:32:37.925
<c.magenta>通过定向按下类型事件</c>
<c.magenta>由Siri Remote</c>

00:32:37.991 --> 00:32:39.193
<c.magenta>和其他设备生成</c>

00:32:39.760 --> 00:32:43.664
<c.magenta>我可以上下擦碰去改变内容偏移</c>

00:32:43.730 --> 00:32:46.633
<c.magenta>但是我也可以上下拍击去增量滚动</c>

00:32:47.367 --> 00:32:50.904
<c.magenta>很好！这是一个全功能条款和条件的</c>
<c.magenta>ViewController</c>

00:32:50.971 --> 00:32:51.805
<c.magenta>在tvOS中</c>

00:32:52.406 --> 00:32:53.440
<c.magenta>谢谢你们</c>

00:32:53.507 --> 00:32:56.476
<c.magenta>我已迫不及待接受你们应用里的</c>
<c.magenta>所有条款和条件</c>

00:32:56.743 --> 00:32:57.711
<c.magenta>交还给Justin</c>

00:32:59.947 --> 00:33:02.349
<c.magenta>让我们来继续最后一个话题 文本输入</c>

00:32:59.947 --> 00:33:02.349
<c.magenta>让我们来继续最后一个话题 文本输入</c>

00:33:03.383 --> 00:33:05.752
<c.magenta>我们在tvOS上有很棒的系统键盘</c>

00:33:06.186 --> 00:33:08.655
<c.magenta>有很多特性只可用在</c>

00:33:08.722 --> 00:33:10.324
<c.magenta>系统键盘上</c>

00:33:10.390 --> 00:33:12.125
<c.magenta>我想和你们介绍一下几个特性</c>

00:33:12.526 --> 00:33:14.094
<c.magenta>其中一个功能是听写</c>

00:33:14.228 --> 00:33:16.563
<c.magenta>用户可对Siri Remote说话</c>

00:33:16.630 --> 00:33:18.465
<c.magenta>文字会显示在屏幕上</c>

00:33:19.233 --> 00:33:20.467
<c.magenta>我们还支持Bluetooth键盘</c>

00:33:20.534 --> 00:33:23.070
<c.magenta>若将其和Bluetooth键盘配对</c>
<c.magenta>你就可以直接在那里打字</c>

00:33:24.071 --> 00:33:25.472
<c.magenta>我们有新的Apple</c>
<c.magenta>TV Remote应用</c>

00:33:25.539 --> 00:33:27.774
<c.magenta>因此用户可以把电话与TV配对</c>

00:33:27.841 --> 00:33:29.610
<c.magenta>他们可以在电话键盘上打字</c>

00:33:29.743 --> 00:33:30.944
<c.magenta>发送文字到TV</c>

00:33:32.012 --> 00:33:33.747
<c.magenta>这里还有很多本地化的细节</c>

00:33:33.814 --> 00:33:35.682
<c.magenta>系统键盘会为你处理好</c>

00:33:36.750 --> 00:33:38.552
<c.magenta>它能够自动改变自己的布局</c>

00:33:38.619 --> 00:33:40.521
<c.magenta>根据用户正使用的输入设备</c>

00:33:40.888 --> 00:33:43.557
<c.magenta>这里有一个你可能最熟悉的线性布局</c>

00:33:43.624 --> 00:33:45.292
<c.magenta>但还有我们将会用到的网格布局</c>

00:33:45.359 --> 00:33:47.327
<c.magenta>如果没和TV配对的</c>
<c.magenta>Siri Remote</c>

00:33:48.262 --> 00:33:49.196
<c.magenta>有很多很棒的功能</c>

00:33:49.263 --> 00:33:51.098
<c.magenta>它们只有在系统键盘里是可用的</c>

00:33:51.164 --> 00:33:53.033
<c.magenta>如果你使用的不是系统键盘</c>

00:33:53.100 --> 00:33:55.802
<c.magenta>用户将不能够使用这些功能</c>

00:33:56.103 --> 00:33:59.072
<c.magenta>我们不鼓励你推出自己的键盘</c>

00:33:59.139 --> 00:34:00.374
<c.magenta>坚持用系统键盘</c>

00:33:59.139 --> 00:34:00.374
<c.magenta>坚持用系统键盘</c>

00:34:00.440 --> 00:34:02.342
<c.magenta>用户可以使用所有这些功能</c>

00:34:02.409 --> 00:34:03.944
<c.magenta>它们全部只对系统可用</c>

00:34:05.212 --> 00:34:06.547
<c.magenta>这里有些方法你可以自定义</c>

00:34:06.613 --> 00:34:07.981
<c.magenta>内置的系统键盘</c>

00:34:08.248 --> 00:34:10.817
<c.magenta>其中一个方法是添加</c>
<c.magenta>一个你自己的视图</c>

00:34:10.884 --> 00:34:13.053
<c.magenta>到键盘上</c>
<c.magenta>会呈现在它旁边</c>

00:34:13.187 --> 00:34:15.589
<c.magenta>你可使用UIResponder上的</c>
<c.magenta>一些API</c>

00:34:15.656 --> 00:34:17.257
<c.magenta>那些你有可能从iOS中识别</c>

00:34:17.456 --> 00:34:18.992
<c.magenta>这里有inputAccessoryView</c>

00:34:19.126 --> 00:34:21.027
<c.magenta>和inputAccessoryViewController</c>

00:34:21.161 --> 00:34:23.230
<c.magenta>如果你在文本框上指派这些属性</c>

00:34:23.330 --> 00:34:24.998
<c.magenta>你想去编辑文本的文本框</c>

00:34:25.264 --> 00:34:26.699
<c.magenta>当键盘出现</c>

00:34:26.766 --> 00:34:29.101
<c.magenta>在键盘的旁边展现你自己的视图</c>

00:34:29.168 --> 00:34:31.471
<c.magenta>一秒后 我将展现刚才那一幕的截屏</c>

00:34:32.706 --> 00:34:34.574
<c.magenta>最后 我想指出行为的一个变化</c>

00:34:34.641 --> 00:34:37.010
<c.magenta>出现在tvOS 9</c>
<c.magenta>和tvOS 10间</c>

00:34:37.444 --> 00:34:40.313
<c.magenta>UITextField有一个属性叫</c>
<c.magenta>keyboardAppearance</c>

00:34:40.414 --> 00:34:42.449
<c.magenta>你可以设置它为不指定亮和暗</c>

00:34:42.850 --> 00:34:45.619
<c.magenta>在tvOS 9上 如果你设置它</c>
<c.magenta>比如 暗</c>

00:34:45.918 --> 00:34:48.856
<c.magenta>然后键盘呈现时 不仅自身变暗</c>

00:34:48.922 --> 00:34:52.092
<c.magenta>屏幕上的文本框同样会变暗</c>

00:34:52.559 --> 00:34:55.161
<c.magenta>现在tvOS 10里</c>
<c.magenta>我们有新外观API</c>

00:34:55.228 --> 00:34:57.664
<c.magenta>所以整个系统能够对应的变亮或变暗</c>

00:34:57.865 --> 00:35:00.000
<c.magenta>现在我们在tvOS 10上做的</c>

00:35:00.067 --> 00:35:03.337
<c.magenta>是这个键盘外观属性只影响键盘</c>

00:35:03.403 --> 00:35:05.005
<c.magenta>和文本框外观</c>

00:35:05.072 --> 00:35:08.175
<c.magenta>它将被更大的</c>
<c.magenta>UPI Tray Collection所制定</c>

00:35:09.576 --> 00:35:11.078
<c.magenta>这是我答应展示给你们的屏幕截图</c>

00:35:11.144 --> 00:35:13.914
<c.magenta>这种情况下</c>
<c.magenta>我已经创建了一个常规文本框</c>

00:35:13.981 --> 00:35:15.516
<c.magenta>我给它一个inputAccessoryView</c>

00:35:15.582 --> 00:35:17.885
<c.magenta>我放了一个红色边控在上面 所以</c>
<c.magenta>你可以看到它在哪里</c>

00:35:18.151 --> 00:35:19.853
<c.magenta>这些UI标签全部都是定制的</c>

00:35:19.920 --> 00:35:23.257
<c.magenta>我只是把它们放在那里</c>
<c.magenta>所以你可以添加任何种类的附件视图</c>

00:35:23.323 --> 00:35:24.992
<c.magenta>那些你想让它们出现在键盘上方的</c>

00:35:27.327 --> 00:35:29.096
<c.magenta>另一个你可在键盘上获得UI方法</c>

00:35:29.162 --> 00:35:31.598
<c.magenta>同时当键盘正使用</c>
<c.magenta>SearchController</c>

00:35:31.865 --> 00:35:33.934
<c.magenta>你使用一些从iOS中能识别的API</c>

00:35:34.001 --> 00:35:35.769
<c.magenta>这就是UISearchController</c>

00:35:37.471 --> 00:35:40.207
<c.magenta>我们有键盘并且搜索结果呈现在其下方</c>

00:35:41.208 --> 00:35:42.809
<c.magenta>这也是自动适配的</c>

00:35:42.876 --> 00:35:44.778
<c.magenta>这里有基于网格和基于线性的布局</c>

00:35:44.845 --> 00:35:46.847
<c.magenta>取决于用户正在使用的输入设备</c>

00:35:47.314 --> 00:35:49.383
<c.magenta>你可以把它嵌入到其他视图类型的内部</c>

00:35:49.516 --> 00:35:51.418
<c.magenta>SearchController</c>
<c.magenta>通常要模态展现</c>

00:35:51.485 --> 00:35:52.553
<c.magenta>并接管整个屏幕</c>

00:35:52.920 --> 00:35:56.190
<c.magenta>但你可把它嵌入到另一个视图控制器中</c>

00:35:56.256 --> 00:35:57.858
<c.magenta>通过使用UISearchContainerViewController</c>

00:35:57.925 --> 00:36:00.227
<c.magenta>我将在几页幻灯片里展现一段样本代码</c>

00:35:57.925 --> 00:36:00.227
<c.magenta>我将在几页幻灯片里展现一段样本代码</c>

00:36:01.995 --> 00:36:04.131
<c.magenta>你提供了为搜索结果定制的视图控制器</c>

00:36:04.198 --> 00:36:06.466
<c.magenta>搜索结果的视觉外观</c>

00:36:06.533 --> 00:36:07.968
<c.magenta>和交互完全取决于你</c>

00:36:08.035 --> 00:36:09.069
<c.magenta>你可以做任何你想做的</c>

00:36:09.136 --> 00:36:11.405
<c.magenta>你可能使用一个视图集合</c>
<c.magenta>或可能使用一个分开视图</c>

00:36:11.471 --> 00:36:13.073
<c.magenta>它有一个表视图和集合视图</c>

00:36:13.207 --> 00:36:14.041
<c.magenta>其他你想要的</c>

00:36:14.107 --> 00:36:15.642
<c.magenta>取决于你来定制视图控制器</c>

00:36:17.945 --> 00:36:21.048
<c.magenta>很快地展示一下如何在其他东西内部</c>
<c.magenta>嵌入一个搜索控制器</c>

00:36:21.114 --> 00:36:22.950
<c.magenta>比如 一个标签栏控制器</c>

00:36:23.016 --> 00:36:25.552
<c.magenta>我获取到我的定制类</c>
<c.magenta>ViewController</c>

00:36:25.986 --> 00:36:29.056
<c.magenta>在viewDidAppear里</c>
<c.magenta>我将创建一个searchController</c>

00:36:29.156 --> 00:36:30.257
<c.magenta>我想确保不做第二回</c>

00:36:30.324 --> 00:36:32.025
<c.magenta>所以我检查确保</c>
<c.magenta>我之前没有做过</c>

00:36:33.694 --> 00:36:35.195
<c.magenta>然后我创建了UISearchController</c>

00:36:35.262 --> 00:36:37.664
<c.magenta>告诉它我的结果使用何种视图控制器</c>

00:36:37.731 --> 00:36:39.800
<c.magenta>当搜索查询变更时 与谁联系</c>

00:36:41.034 --> 00:36:42.269
<c.magenta>然后我要去包裹那些</c>

00:36:42.336 --> 00:36:44.104
<c.magenta>UISearchContainerViewController内部的东西</c>

00:36:44.171 --> 00:36:46.240
<c.magenta>现允许我拿这个container</c>

00:36:46.306 --> 00:36:48.742
<c.magenta>我可以在其上面做常规的</c>
<c.magenta>ViewController containment</c>

00:36:49.076 --> 00:36:51.011
<c.magenta>我将它作为一个ChildViewController添加</c>

00:36:51.445 --> 00:36:52.412
<c.magenta>如果你想这样做</c>

00:36:52.479 --> 00:36:55.649
<c.magenta>你将会很容易在标签栏内部</c>
<c.magenta>使用搜索控制器</c>

00:36:55.716 --> 00:36:57.518
<c.magenta>如在tvOS上的一些系统应用程序</c>

00:36:59.820 --> 00:37:01.188
<c.magenta>这就是文本输入</c>

00:36:59.820 --> 00:37:01.188
<c.magenta>这就是文本输入</c>

00:37:01.688 --> 00:37:02.523
<c.magenta>总的来说</c>

00:37:02.589 --> 00:37:04.591
<c.magenta>我们希望你们能从本次演讲中</c>
<c.magenta>得到的东西之一</c>

00:37:04.791 --> 00:37:08.195
<c.magenta>首先是当你正处理菜单按钮 小心</c>

00:37:08.295 --> 00:37:11.465
<c.magenta>记住你不想去干扰系统手势</c>

00:37:12.933 --> 00:37:13.934
<c.magenta>当你正使用分层图像时</c>

00:37:14.001 --> 00:37:16.603
<c.magenta>利用我们提供给你的布局指引</c>

00:37:16.670 --> 00:37:18.238
<c.magenta>和协调动画API</c>

00:37:18.305 --> 00:37:20.307
<c.magenta>确保你的视图能够移动</c>

00:37:20.374 --> 00:37:22.142
<c.magenta>与系统动画协同运作</c>

00:37:23.877 --> 00:37:25.679
<c.magenta>若你想在ScrollViews上</c>
<c.magenta>直接操控</c>

00:37:25.746 --> 00:37:27.581
<c.magenta>你无需自己做任何处理代码的事情</c>

00:37:27.648 --> 00:37:30.150
<c.magenta>只要复用已经内置的拖动手势</c>

00:37:31.585 --> 00:37:33.320
<c.magenta>最后 使用系统键盘去确保</c>

00:37:33.387 --> 00:37:34.621
<c.magenta>你的用户能获得使用</c>

00:37:34.688 --> 00:37:37.024
<c.magenta>所有的功能 当他们输入文本的时候</c>

00:37:37.758 --> 00:37:39.993
<c.magenta>想获取本次演讲更多的信息</c>
<c.magenta>你可以访问这个URL</c>

00:37:40.060 --> 00:37:41.762
<c.magenta>这里你会找到文档的链接</c>

00:37:42.029 --> 00:37:44.665
<c.magenta>本周接下来还会有其他演讲</c>

00:37:44.731 --> 00:37:46.099
<c.magenta>我想特别推荐两个</c>

00:37:46.166 --> 00:37:48.235
<c.magenta>都是关于tvOS上的UIKit</c>

00:37:48.569 --> 00:37:50.204
<c.magenta>希望大家在余下的会议中过得愉快 谢谢</c>
