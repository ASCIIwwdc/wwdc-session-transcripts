WEBVTT

00:00:19.319 --> 00:00:20.153 align:middle
<c.magenta>tvOS有什么新内容</c>

00:00:21.922 --> 00:00:23.991 align:middle
<c.magenta>欢迎来到tvOS有何新内容这一会话</c>

00:00:26.727 --> 00:00:29.396 align:middle
<c.magenta>我是Hans</c>
<c.magenta>我是tvOS团队中的一名工程师</c>

00:00:31.131 --> 00:00:34.201 align:middle
<c.magenta>今年我们非常高兴</c>
<c.magenta>欢迎你</c>

00:00:34.635 --> 00:00:37.538 align:middle
<c.magenta>参加tvOS第一次的全球开发者大会</c>

00:00:44.011 --> 00:00:47.981 align:middle
<c.magenta>那么我想通过对tvOS简要概述</c>
<c.magenta>来作为今天下午的开始</c>

00:00:49.316 --> 00:00:52.386 align:middle
<c.magenta>我们会引导大家认识</c>
<c.magenta>tvOS 10的一些新功能</c>

00:00:53.320 --> 00:00:56.924 align:middle
<c.magenta>然后我们将就其中的几个</c>
<c.magenta>深入讨论更多细节</c>

00:00:57.457 --> 00:00:59.092 align:middle
<c.magenta>我们甚至有一个很好的案例示范</c>

00:01:00.561 --> 00:01:01.395 align:middle
<c.magenta>现在开始</c>

00:01:03.730 --> 00:01:06.600 align:middle
<c.magenta>仅仅九个月前</c>
<c.magenta>我们发布了新的Apple TV</c>

00:01:07.334 --> 00:01:09.369 align:middle
<c.magenta>伴随它还发布了tvOS</c>

00:01:10.571 --> 00:01:15.142 align:middle
<c.magenta>tvOS是一个现代操作系统</c>
<c.magenta>专为现代硬件所设计</c>

00:01:16.009 --> 00:01:19.680 align:middle
<c.magenta>而其仅是64位的</c>
<c.magenta>没有32位的运行时间</c>

00:01:20.614 --> 00:01:24.351 align:middle
<c.magenta>因此它会为你节省</c>
<c.magenta>很多的时间</c>

00:01:25.185 --> 00:01:30.157 align:middle
<c.magenta>来测试32位兼容性</c>
<c.magenta>或为32位片段进行配置</c>

00:01:32.593 --> 00:01:34.194 align:middle
<c.magenta>与你的iPhone</c>

00:01:36.563 --> 00:01:38.498 align:middle
<c.magenta>iPad甚至Mac都不同</c>

00:01:39.366 --> 00:01:42.135 align:middle
<c.magenta>Apple TV一直连接到</c>
<c.magenta>高速网络</c>

00:01:42.836 --> 00:01:46.039 align:middle
<c.magenta>这使得tvOS成为这样一个理想平台</c>

00:01:46.306 --> 00:01:51.445 align:middle
<c.magenta>在那里你可以卸载一些任务</c>
<c.magenta>比如管理你的应用的资源</c>

00:01:52.012 --> 00:01:52.880 align:middle
<c.magenta>用户数据</c>

00:01:53.614 --> 00:01:58.051 align:middle
<c.magenta>甚至是你的应用内容将其放到</c>
<c.magenta>某些技术中去 如CloudKit等</c>

00:01:58.819 --> 00:02:00.120 align:middle
<c.magenta>以及按需资源</c>

00:01:58.819 --> 00:02:00.120 align:middle
<c.magenta>以及按需资源</c>

00:02:02.256 --> 00:02:04.625 align:middle
<c.magenta>CloudKit是你</c>

00:02:04.858 --> 00:02:07.861 align:middle
<c.magenta>在icloud中通往几乎无限的</c>
<c.magenta>存储空间的界面</c>

00:02:09.263 --> 00:02:12.099 align:middle
<c.magenta>它为你的资源提供了一个结构存储</c>

00:02:13.033 --> 00:02:16.937 align:middle
<c.magenta>它也为用户数据提供了一个公共的</c>
<c.magenta>和私人的数据库</c>

00:02:17.938 --> 00:02:19.940 align:middle
<c.magenta>正如你在前一会话中所听到的</c>

00:02:20.407 --> 00:02:24.578 align:middle
<c.magenta>可以跨iOS Mac OS和</c>
<c.magenta>tvOS平台来将其使用</c>

00:02:25.312 --> 00:02:26.647 align:middle
<c.magenta>并且也可以被分享</c>

00:02:28.949 --> 00:02:31.351 align:middle
<c.magenta>并且由于到iCloud认证</c>

00:02:31.952 --> 00:02:33.720 align:middle
<c.magenta>你再也不必问你的客户</c>

00:02:34.188 --> 00:02:35.656 align:middle
<c.magenta>要一个单独的登录账号了</c>

00:02:37.824 --> 00:02:42.896 align:middle
<c.magenta>即使你的应用碰巧在其他</c>
<c.magenta>没有CloudKit的平台上运行</c>

00:02:43.297 --> 00:02:44.631 align:middle
<c.magenta>这也依然成立</c>

00:02:45.766 --> 00:02:49.236 align:middle
<c.magenta>而通过使用CloudKit JS</c>
<c.magenta>以及其网络服务API</c>

00:02:49.837 --> 00:02:52.339 align:middle
<c.magenta>你就不必去推出自己的解决方案了</c>

00:02:52.406 --> 00:02:55.209 align:middle
<c.magenta>而仍然可利用</c>
<c.magenta>安全性和效率方面的优势</c>

00:02:58.378 --> 00:03:02.983 align:middle
<c.magenta>目前 如果按照传统做法</c>
<c.magenta>客户不得不下载整个应用</c>

00:02:58.378 --> 00:03:02.983 align:middle
<c.magenta>目前 如果按照传统做法</c>
<c.magenta>客户不得不下载整个应用</c>

00:03:03.350 --> 00:03:05.219 align:middle
<c.magenta>这样才能将其发布并开始使用</c>

00:03:06.320 --> 00:03:10.023 align:middle
<c.magenta>而只要应用体积增大</c>
<c.magenta>这就成为一个痛点</c>

00:03:11.692 --> 00:03:15.095 align:middle
<c.magenta>因为我们等着下800兆的文件</c>
<c.magenta>不是要为了找乐子的</c>

00:03:17.231 --> 00:03:19.399 align:middle
<c.magenta>这不仅令用户沮丧</c>

00:03:19.466 --> 00:03:21.401 align:middle
<c.magenta>同时对我们开发者来说也是一个挑战</c>

00:03:21.902 --> 00:03:23.070 align:middle
<c.magenta>因为客户</c>

00:03:23.570 --> 00:03:26.907 align:middle
<c.magenta>甚至可能在他们能够尝试之前</c>
<c.magenta>就对我们的应用失去兴趣</c>

00:03:29.009 --> 00:03:30.511 align:middle
<c.magenta>按需资源……</c>

00:03:31.778 --> 00:03:34.615 align:middle
<c.magenta>利用Apple TV的</c>
<c.magenta>一直在线的优势</c>

00:03:35.716 --> 00:03:38.619 align:middle
<c.magenta>并提供一种机制</c>
<c.magenta>据此你的应用甚至可以</c>

00:03:38.685 --> 00:03:40.921 align:middle
<c.magenta>在其所有内容被下载之前</c>
<c.magenta>就作出发布</c>

00:03:42.089 --> 00:03:44.958 align:middle
<c.magenta>这意味着你的客户</c>
<c.magenta>他们可以更快的用上此应用</c>

00:03:46.326 --> 00:03:48.195 align:middle
<c.magenta>而当应用被下载时</c>

00:03:49.263 --> 00:03:52.132 align:middle
<c.magenta>该系统可以继续</c>
<c.magenta>下载更多内容</c>

00:03:52.432 --> 00:03:55.035 align:middle
<c.magenta>所以在需要它们的时候</c>
<c.magenta>它们就已经准备好了</c>

00:03:55.736 --> 00:03:57.704 align:middle
<c.magenta>进一步减少等待时间</c>

00:04:00.674 --> 00:04:05.846 align:middle
<c.magenta>而且应用的尺寸可以非常大</c>

00:04:05.913 --> 00:04:09.883 align:middle
<c.magenta>事实上</c>
<c.magenta>比传统上所能同意的大得多</c>

00:04:10.651 --> 00:04:11.885 align:middle
<c.magenta>让我们来看看这个</c>

00:04:15.255 --> 00:04:20.093 align:middle
<c.magenta>每个应用都有一个</c>
<c.magenta>可执行资源和基础资源的主应用包</c>

00:04:21.128 --> 00:04:22.529 align:middle
<c.magenta>使用ODR时</c>

00:04:22.796 --> 00:04:26.667 align:middle
<c.magenta>你的主应用包的尺寸</c>
<c.magenta>可高达200兆字节</c>

00:04:28.001 --> 00:04:32.206 align:middle
<c.magenta>你可以向此应用包添加第一组</c>
<c.magenta>待下载内容</c>

00:04:32.639 --> 00:04:35.609 align:middle
<c.magenta>这样当应用安装时</c>
<c.magenta>它们就已经准备好了</c>

00:04:36.610 --> 00:04:39.646 align:middle
<c.magenta>例如这可能是</c>
<c.magenta>你的游戏的前三关</c>

00:04:41.481 --> 00:04:44.184 align:middle
<c.magenta>第一组被称为</c>
<c.magenta>初始安装标签</c>

00:04:45.919 --> 00:04:48.055 align:middle
<c.magenta>而这可以最多高达两个千兆字节</c>

00:04:50.190 --> 00:04:51.692 align:middle
<c.magenta>如果你有更多的内容呢？</c>

00:04:52.292 --> 00:04:55.529 align:middle
<c.magenta>那么</c>
<c.magenta>你可以指定安装之后</c>

00:04:56.530 --> 00:04:59.199 align:middle
<c.magenta>需要立即下载的</c>
<c.magenta>额外的资源包</c>

00:05:01.201 --> 00:05:03.403 align:middle line:1
<c.magenta>而这就被称作预取标签</c>

00:05:04.638 --> 00:05:09.109 align:middle line:1
<c.magenta>预取标签用于你知道</c>
<c.magenta>你会尽快需要的内容</c>

00:05:09.543 --> 00:05:13.013 align:middle
<c.magenta>但不够快到足以解释</c>
<c.magenta>对你应用的首次发布的阻止</c>

00:05:13.213 --> 00:05:15.682 align:middle
<c.magenta>从而防止你的用户使用此应用</c>

00:05:18.785 --> 00:05:19.620 align:middle
<c.magenta>因此 例如</c>

00:05:22.122 --> 00:05:23.357 align:middle
<c.magenta>如果你的用户正在玩</c>

00:05:24.958 --> 00:05:26.260 align:middle
<c.magenta>你的游戏的第一关</c>

00:05:27.327 --> 00:05:30.364 align:middle
<c.magenta>该系统将开始下载</c>
<c.magenta>第四、五、六关</c>

00:05:31.265 --> 00:05:34.968 align:middle
<c.magenta>而当用户过了第三关时</c>
<c.magenta>下一关</c>

00:05:35.903 --> 00:05:39.273 align:middle
<c.magenta>已经下载好</c>
<c.magenta>就等着用户去玩了</c>

00:05:40.407 --> 00:05:44.344 align:middle
<c.magenta>所以这样的等待就已经</c>
<c.magenta>从用户被转移到该系统了</c>

00:05:45.245 --> 00:05:48.682 align:middle
<c.magenta>而系统不介意等待</c>
<c.magenta>但用户介意</c>

00:05:50.884 --> 00:05:53.387 align:middle
<c.magenta>预取标签使用其剩余允许量时</c>

00:05:55.355 --> 00:05:57.057 align:middle
<c.magenta>其尺寸可以高达四个千兆字节</c>

00:05:58.091 --> 00:06:02.496 align:middle
<c.magenta>所以如果你为初始安装标签</c>
<c.magenta>用了500兆字节</c>

00:05:58.091 --> 00:06:02.496 align:middle
<c.magenta>所以如果你为初始安装标签</c>
<c.magenta>用了500兆字节</c>

00:06:03.330 --> 00:06:06.800 align:middle
<c.magenta>那么你为预取标签</c>
<c.magenta>就有3.5千兆字节</c>

00:06:08.602 --> 00:06:12.506 align:middle
<c.magenta>如果你已经用了</c>
<c.magenta>你的初始安装标签的两千兆字节</c>

00:06:12.806 --> 00:06:16.543 align:middle
<c.magenta>则你自然就为你的预取标签</c>
<c.magenta>有两千兆字节</c>

00:06:17.744 --> 00:06:19.913 align:middle
<c.magenta>如果你没有初始安装标签呢？</c>

00:06:21.615 --> 00:06:24.618 align:middle
<c.magenta>从数学上来讲你的预取标签</c>
<c.magenta>有四千兆字节 但是</c>

00:06:25.853 --> 00:06:28.856 align:middle
<c.magenta>你可能希望将一些内容</c>
<c.magenta>移入初始安装标签</c>

00:06:28.922 --> 00:06:30.324 align:middle
<c.magenta>这样它们就可被早点使用了</c>

00:06:35.429 --> 00:06:36.496 align:middle
<c.magenta>类似的</c>

00:06:37.331 --> 00:06:41.168 align:middle
<c.magenta>在应用被进一步使用时</c>
<c.magenta>更多的资源包可以被下载</c>

00:06:42.736 --> 00:06:46.139 align:middle
<c.magenta>总下载内容</c>
<c.magenta>可高达20千兆字节</c>

00:06:46.640 --> 00:06:50.644 align:middle
<c.magenta>使应用包和可下载内容的总尺寸</c>

00:06:51.078 --> 00:06:53.046 align:middle
<c.magenta>达到令人惊叹的20.2千兆字节</c>

00:06:58.585 --> 00:07:00.220 align:middle
<c.magenta>而这不仅只是一个大数字</c>

00:06:58.585 --> 00:07:00.220 align:middle
<c.magenta>而这不仅只是一个大数字</c>

00:07:00.821 --> 00:07:04.458 align:middle
<c.magenta>它还是一个客户感受不到</c>
<c.magenta>其沉重和繁琐的大数字</c>

00:07:04.858 --> 00:07:06.627 align:middle
<c.magenta>因为他们可以更早开始</c>

00:07:06.793 --> 00:07:09.897 align:middle
<c.magenta>而且他们可以继续使用应用</c>
<c.magenta>而没有多少中断</c>

00:07:12.132 --> 00:07:16.837 align:middle
<c.magenta>晶体管是一个很棒的游戏</c>
<c.magenta>也是使用ODR的好例子</c>

00:07:17.838 --> 00:07:20.674 align:middle
<c.magenta>它的应用包有160兆字节</c>

00:07:21.208 --> 00:07:23.710 align:middle
<c.magenta>初始安装标签有500兆字节</c>

00:07:23.777 --> 00:07:26.880 align:middle
<c.magenta>所以它能快速下载并安装</c>

00:07:28.782 --> 00:07:31.985 align:middle
<c.magenta>但由于900兆字节的</c>
<c.magenta>预取标签</c>

00:07:33.487 --> 00:07:37.357 align:middle
<c.magenta>玩家就可以不断被</c>
<c.magenta>新而华丽的游戏关卡所挑战</c>

00:07:38.358 --> 00:07:40.694 align:middle
<c.magenta>而几乎没有任何中断</c>

00:07:42.629 --> 00:07:44.631 align:middle
<c.magenta>但是ODR不只用于游戏</c>

00:07:46.934 --> 00:07:50.070 align:middle
<c.magenta>我最喜欢的应用之一是</c>
<c.magenta>Earthlapse TV</c>

00:07:51.605 --> 00:07:52.840 align:middle
<c.magenta>Earthlapse TV</c>

00:07:53.373 --> 00:07:57.344 align:middle
<c.magenta>推出从国际空间站</c>
<c.magenta>得到的时间推移视频</c>

00:07:58.178 --> 00:08:01.448 align:middle
<c.magenta>并在你的客厅</c>
<c.magenta>创建一个虚拟窗口</c>

00:07:58.178 --> 00:08:01.448 align:middle
<c.magenta>并在你的客厅</c>
<c.magenta>创建一个虚拟窗口</c>

00:08:02.983 --> 00:08:07.187 align:middle
<c.magenta>它拥有超过一千兆字节的</c>
<c.magenta>超高品质的内容</c>

00:08:07.654 --> 00:08:11.191 align:middle
<c.magenta>然而它下载</c>
<c.magenta>和启动都很迅速</c>

00:08:12.159 --> 00:08:15.395 align:middle
<c.magenta>并且在内容之间跳跃时</c>
<c.magenta>几乎没有任何等待</c>

00:08:18.198 --> 00:08:19.166 align:middle
<c.magenta>所以这就是ODR</c>

00:08:20.367 --> 00:08:23.470 align:middle
<c.magenta>顺便提一下</c>
<c.magenta>那是从Cupola模块看到的加拿大</c>

00:08:27.608 --> 00:08:30.110 align:middle
<c.magenta>现在让我们来看看</c>
<c.magenta>我们如何与电视进行交互</c>

00:08:32.111 --> 00:08:35.015 align:middle
<c.magenta>我们每天都使用电话</c>
<c.magenta>而且我们已经很习惯了</c>

00:08:36.650 --> 00:08:40.587 align:middle
<c.magenta>但独特的是</c>
<c.magenta>我们的关注和行动都</c>

00:08:41.388 --> 00:08:44.458 align:middle
<c.magenta>就在我们面前</c>
<c.magenta>在触摸表面上</c>

00:08:46.593 --> 00:08:48.395 align:middle
<c.magenta>然而当你看电视时</c>

00:08:49.263 --> 00:08:52.866 align:middle
<c.magenta>我们的注意力在10英尺之外</c>
<c.magenta>在房间的另一侧</c>

00:08:54.134 --> 00:08:57.804 align:middle
<c.magenta>而我们的行动在遥控器上</c>
<c.magenta>就在我们手中</c>

00:08:58.438 --> 00:09:00.674 align:middle
<c.magenta>两者之间</c>
<c.magenta>没有直接的联系</c>

00:08:58.438 --> 00:09:00.674 align:middle
<c.magenta>两者之间</c>
<c.magenta>没有直接的联系</c>

00:09:02.910 --> 00:09:06.280 align:middle
<c.magenta>tvOS提供了一个独特的机会</c>

00:09:06.613 --> 00:09:09.783 align:middle
<c.magenta>来使这方面的体验</c>
<c.magenta>更为直接和相关</c>

00:09:11.451 --> 00:09:13.220 align:middle
<c.magenta>首先是Siri Remote</c>

00:09:14.154 --> 00:09:15.522 align:middle
<c.magenta>通过其触摸表面</c>

00:09:15.956 --> 00:09:20.060 align:middle
<c.magenta>Siri Remote实现了</c>
<c.magenta>一种新的基于集中的交互</c>

00:09:21.028 --> 00:09:23.664 align:middle
<c.magenta>而其是专为</c>
<c.magenta>这样的环境所设计的</c>

00:09:24.865 --> 00:09:30.470 align:middle
<c.magenta>通过在触摸表面上</c>
<c.magenta>按下按钮和使用手势</c>

00:09:31.772 --> 00:09:34.641 align:middle
<c.magenta>用户可以将焦点</c>
<c.magenta>从一个元素移到另一个上</c>

00:09:36.577 --> 00:09:40.681 align:middle
<c.magenta>停留在特定的一个上</c>
<c.magenta>然后点击来触发操作</c>

00:09:47.821 --> 00:09:49.857 align:middle
<c.magenta>为了配合这一集中交互</c>

00:09:50.123 --> 00:09:53.794 align:middle
<c.magenta>tvOS也引入了</c>
<c.magenta>一种新的视差效果</c>

00:09:55.462 --> 00:09:58.765 align:middle
<c.magenta>这种视差效果使你感觉到</c>
<c.magenta>你的焦点在哪里</c>

00:09:59.533 --> 00:10:02.503 align:middle
<c.magenta>也让你觉得</c>
<c.magenta>你和屏幕相连在一起</c>

00:09:59.533 --> 00:10:02.503 align:middle
<c.magenta>也让你觉得</c>
<c.magenta>你和屏幕相连在一起</c>

00:10:04.705 --> 00:10:07.441 align:middle
<c.magenta>而利用视差效果的</c>
<c.magenta>最好的方式</c>

00:10:07.741 --> 00:10:09.877 align:middle
<c.magenta>是使用分层图像</c>

00:10:12.813 --> 00:10:15.849 align:middle
<c.magenta>分层图像</c>
<c.magenta>是为tvOS所设计的一种图像类型</c>

00:10:16.817 --> 00:10:19.353 align:middle
<c.magenta>当元素处于对焦状态时</c>

00:10:19.720 --> 00:10:21.154 align:middle
<c.magenta>它会增强深度和活力</c>

00:10:24.391 --> 00:10:26.693 align:middle
<c.magenta>它最多可以有五层</c>

00:10:27.828 --> 00:10:30.097 align:middle
<c.magenta>实际上它也是应用图标所需要的</c>

00:10:33.133 --> 00:10:37.137 align:middle
<c.magenta>为了创建新的分层图像</c>
<c.magenta>你可使用Xcode的资源目录</c>

00:10:38.105 --> 00:10:40.607 align:middle
<c.magenta>Mac OS的Parallax</c>
<c.magenta>Previewer应用</c>

00:10:41.942 --> 00:10:45.145 align:middle
<c.magenta>以及Photoshop的</c>
<c.magenta>Parallax Exporter插件</c>

00:10:45.879 --> 00:10:49.750 align:middle
<c.magenta>当然所有这些</c>
<c.magenta>都可从developer.apple.com下载</c>

00:10:52.686 --> 00:10:57.524 align:middle
<c.magenta>现在让我们退一步</c>
<c.magenta>看一看主屏幕</c>

00:10:59.092 --> 00:11:02.563 align:middle
<c.magenta>主屏幕这里</c>
<c.magenta>这个10英尺的体验被最佳示出</c>

00:10:59.092 --> 00:11:02.563 align:middle
<c.magenta>主屏幕这里</c>
<c.magenta>这个10英尺的体验被最佳示出</c>

00:11:04.865 --> 00:11:10.470 align:middle
<c.magenta>第一行应用图标上面</c>
<c.magenta>是所谓的Top Shelf区域</c>

00:11:11.872 --> 00:11:14.975 align:middle
<c.magenta>而放在第一行的应用</c>
<c.magenta>能够参与其中</c>

00:11:17.811 --> 00:11:21.715 align:middle
<c.magenta>你的应用可呈现最相关的特性或内容</c>

00:11:21.782 --> 00:11:25.152 align:middle
<c.magenta>因为内容的快捷方式</c>
<c.magenta>深藏在你的应用的内部</c>

00:11:25.986 --> 00:11:28.021 align:middle
<c.magenta>所以你的客户</c>
<c.magenta>可以直接跳到它</c>

00:11:28.856 --> 00:11:32.693 align:middle
<c.magenta>而这可能是</c>
<c.magenta>例如你的电影的一张海报</c>

00:11:39.199 --> 00:11:44.037 align:middle
<c.magenta>音乐专辑封面</c>
<c.magenta>横幅广告</c>

00:11:44.505 --> 00:11:46.073 align:middle
<c.magenta>或可让应用有意义的任何东西</c>

00:11:51.245 --> 00:11:54.915 align:middle
<c.magenta>Top Shelf是一个把客户带回</c>
<c.magenta>你的应用的伟大的管道</c>

00:11:54.982 --> 00:11:57.684 align:middle
<c.magenta>因此我们强烈建议</c>
<c.magenta>你利用它</c>

00:11:57.985 --> 00:12:00.954 align:middle
<c.magenta>而不是仅仅让它提供一个占位符图像</c>

00:11:57.985 --> 00:12:00.954 align:middle
<c.magenta>而不是仅仅让它提供一个占位符图像</c>

00:12:04.358 --> 00:12:07.528 align:middle
<c.magenta>现在让我们再回到</c>
<c.magenta>主屏幕</c>

00:12:08.929 --> 00:12:11.632 align:middle
<c.magenta>主屏幕上是你关心的应用的集合</c>

00:12:12.466 --> 00:12:14.168 align:middle
<c.magenta>如你在keynote中听到的</c>

00:12:15.269 --> 00:12:17.271 align:middle
<c.magenta>我们相信电视的未来是应用</c>

00:12:18.672 --> 00:12:21.942 align:middle
<c.magenta>这一切都被App Store所实现</c>

00:12:24.111 --> 00:12:28.182 align:middle
<c.magenta>App Store正如在</c>
<c.magenta>iOS上一样 是你去浏览</c>

00:12:28.582 --> 00:12:30.584 align:middle
<c.magenta>发现和下载应用的地方</c>

00:12:31.952 --> 00:12:34.988 align:middle
<c.magenta>而且由于它在</c>
<c.magenta>iOS和tvOS上都存在</c>

00:12:36.757 --> 00:12:38.659 align:middle
<c.magenta>所以它支持通用购买</c>

00:12:39.826 --> 00:12:43.063 align:middle
<c.magenta>所以如果你的客户</c>
<c.magenta>已在iOS上下载了此应用</c>

00:12:43.564 --> 00:12:47.467 align:middle
<c.magenta>他们就可免费在tvOS上享用此应用</c>
<c.magenta>只需按下一个按钮</c>

00:12:49.937 --> 00:12:53.340 align:middle
<c.magenta>由于Apple TV的持续连接</c>

00:12:53.674 --> 00:12:57.377 align:middle
<c.magenta>在tvOS 10中</c>
<c.magenta>我们要介绍的是自动下载</c>

00:12:58.378 --> 00:13:00.581 align:middle
<c.magenta>所以在iOS上被下载的应用</c>

00:12:58.378 --> 00:13:00.581 align:middle
<c.magenta>所以在iOS上被下载的应用</c>

00:13:00.647 --> 00:13:02.816 align:middle
<c.magenta>将被自动下载到电视里</c>

00:13:04.818 --> 00:13:05.652 align:middle
<c.magenta>就那么简单</c>

00:13:07.154 --> 00:13:10.290 align:middle
<c.magenta>这样会更容易让你的客户</c>
<c.magenta>来获取你的应用</c>

00:13:11.758 --> 00:13:13.527 align:middle
<c.magenta>但是你打算怎么将其建立呢？</c>

00:13:15.495 --> 00:13:19.600 align:middle
<c.magenta>tvOS 提供与iOS、</c>
<c.magenta>Mac OS和watchOS相同的</c>

00:13:20.634 --> 00:13:23.470 align:middle
<c.magenta>开发工具和语言</c>

00:13:24.805 --> 00:13:27.441 align:middle
<c.magenta>还有许多你已经知道的</c>
<c.magenta>相同的框架 例如</c>

00:13:27.808 --> 00:13:32.012 align:middle
<c.magenta>UIKit、Foundation、</c>
<c.magenta>Core Animation</c>

00:13:32.079 --> 00:13:34.348 align:middle
<c.magenta>AVFoundation、</c>
<c.magenta>Core Audio</c>

00:13:34.748 --> 00:13:38.585 align:middle
<c.magenta>等等等等 在tvOS上都可用</c>

00:13:39.486 --> 00:13:43.757 align:middle
<c.magenta>另外在tvOS 9.2中</c>
<c.magenta>我们也把MapKit带到了电视之中</c>

00:13:45.926 --> 00:13:47.928 align:middle
<c.magenta>但是这仍然只是整个列表中的一个部分</c>

00:13:47.995 --> 00:13:50.264 align:middle
<c.magenta>可供你挑选的还有很多</c>

00:13:51.632 --> 00:13:53.800 align:middle
<c.magenta>例如 如果你正在开发一个游戏</c>

00:13:54.301 --> 00:13:55.936 align:middle
<c.magenta>你会很高兴知道</c>

00:13:56.003 --> 00:13:58.172 align:middle
<c.magenta>你所喜爱的</c>
<c.magenta>所有游戏技术</c>

00:13:58.705 --> 00:14:00.908 align:middle
<c.magenta>在tvOS上都是可用的：</c>

00:13:58.705 --> 00:14:00.908 align:middle
<c.magenta>在tvOS上都是可用的：</c>

00:14:01.408 --> 00:14:04.811 align:middle
<c.magenta>Game Center、Game</c>
<c.magenta>Controller、GameplayKit</c>

00:14:05.612 --> 00:14:08.682 align:middle
<c.magenta>Model I/O、MetalKit</c>
<c.magenta>Performance Traders</c>

00:14:09.116 --> 00:14:11.852 align:middle
<c.magenta>SpriteKit</c>
<c.magenta>SceneKit还有很多很多</c>

00:14:11.919 --> 00:14:14.154 align:middle
<c.magenta>要什么有什么</c>

00:14:16.890 --> 00:14:21.962 align:middle
<c.magenta>最后tvOS还引入了</c>
<c.magenta>一个全新的高级框架</c>

00:14:22.362 --> 00:14:24.064 align:middle
<c.magenta>叫做TVMLKit</c>

00:14:25.732 --> 00:14:28.402 align:middle
<c.magenta>TVMLKit通过为你处理</c>

00:14:28.468 --> 00:14:30.704 align:middle
<c.magenta>诸如布局和焦点管理之类的重活累活</c>

00:14:31.305 --> 00:14:34.107 align:middle
<c.magenta>来使你可以</c>
<c.magenta>相当方便的打造</c>

00:14:34.608 --> 00:14:36.109 align:middle
<c.magenta>以内容为中心的应用</c>

00:14:37.578 --> 00:14:41.715 align:middle
<c.magenta>而它通过为布局使用预定义模板</c>

00:14:42.549 --> 00:14:44.685 align:middle
<c.magenta>应用逻辑使用</c>
<c.magenta>JavaScript来操作</c>

00:14:45.686 --> 00:14:48.488 align:middle
<c.magenta>它用于快速迭代和部署 真的很棒</c>

00:14:49.089 --> 00:14:51.558 align:middle
<c.magenta>而且当然</c>
<c.magenta>它也被调整过来得到强大的性能</c>

00:14:53.193 --> 00:14:57.598 align:middle
<c.magenta>事实上Apple自己的一些应用</c>
<c.magenta>也是用TVML</c>

00:14:59.199 --> 00:15:00.200 align:middle
<c.magenta>那个电影应用所打造的</c>

00:14:59.199 --> 00:15:00.200 align:middle
<c.magenta>那个电影应用所打造的</c>

00:15:02.402 --> 00:15:05.739 align:middle
<c.magenta>的确App Store本身就是</c>
<c.magenta>用TVMLKit打造的</c>

00:15:08.141 --> 00:15:11.612 align:middle
<c.magenta>而所有在iOS上帮你微调</c>
<c.magenta>和优化你的应用</c>

00:15:11.979 --> 00:15:14.882 align:middle
<c.magenta>的开发工具</c>

00:15:15.115 --> 00:15:19.786 align:middle
<c.magenta>例如Unit Testing</c>
<c.magenta>App Analytics和TestFlight</c>

00:15:20.487 --> 00:15:22.489 align:middle
<c.magenta>在tvOS上也都是可用的</c>

00:15:27.361 --> 00:15:31.732 align:middle
<c.magenta>今年tvOS继续提供</c>
<c.magenta>令人兴奋的新功能</c>

00:15:32.499 --> 00:15:34.001 align:middle
<c.magenta>如同你在主题演讲中听到一样</c>

00:15:35.002 --> 00:15:37.171 align:middle
<c.magenta>我们正在把HomeKit引入电视</c>

00:15:37.304 --> 00:15:39.806 align:middle
<c.magenta>这样就能从电视上</c>
<c.magenta>控制与HomeKit相兼容的</c>

00:15:39.873 --> 00:15:40.707 align:middle
<c.magenta>配件了</c>

00:15:42.442 --> 00:15:44.111 align:middle
<c.magenta>我们也正在引入PhotoKit</c>

00:15:44.545 --> 00:15:47.781 align:middle
<c.magenta>这样你的应用就可以利用</c>
<c.magenta>你客户的iCloud照片库了</c>

00:15:50.784 --> 00:15:53.587 align:middle
<c.magenta>使用SpriteKit</c>
<c.magenta>甚至变得更简单了</c>

00:15:54.421 --> 00:15:57.624 align:middle
<c.magenta>多亏了来自焦点引擎的</c>
<c.magenta>本地支持</c>

00:15:58.792 --> 00:16:02.396 align:middle
<c.magenta>你的运动和导航</c>
<c.magenta>会感觉更自然</c>

00:15:58.792 --> 00:16:02.396 align:middle
<c.magenta>你的运动和导航</c>
<c.magenta>会感觉更自然</c>

00:16:03.664 --> 00:16:06.200 align:middle
<c.magenta>并与OS其他部分完全集成</c>
<c.magenta>而这是免费的</c>

00:16:07.868 --> 00:16:09.803 align:middle
<c.magenta>说起运动和导航</c>

00:16:11.138 --> 00:16:14.341 align:middle
<c.magenta>玩游戏的一个组成部分</c>
<c.magenta>是你如何控制它们</c>

00:16:17.010 --> 00:16:20.180 align:middle
<c.magenta>你可以把Siri Remote当做</c>
<c.magenta>一个轻量级的游戏控制器</c>

00:16:20.781 --> 00:16:26.053 align:middle
<c.magenta>竖着拿</c>
<c.magenta>并使用像刷卡之类的手势</c>

00:16:26.587 --> 00:16:28.555 align:middle
<c.magenta>以及例如 点击跳跃</c>

00:16:29.957 --> 00:16:30.858 align:middle
<c.magenta>来控制游戏</c>

00:16:31.992 --> 00:16:36.029 align:middle
<c.magenta>如果你的标题要求</c>
<c.magenta>稍微复杂的输入</c>

00:16:39.066 --> 00:16:41.235 align:middle
<c.magenta>你可以把它作为</c>
<c.magenta>仅有基本的D-pads</c>

00:16:41.301 --> 00:16:44.304 align:middle
<c.magenta>和两按钮控制的</c>
<c.magenta>小型游戏平板电脑横着拿</c>

00:16:46.440 --> 00:16:50.444 align:middle
<c.magenta>如果你的游戏标题要求</c>
<c.magenta>甚至更为复杂的输入</c>

00:16:51.078 --> 00:16:53.113 align:middle
<c.magenta>你可以使用扩展游戏控制器</c>

00:16:53.180 --> 00:16:55.215 align:middle
<c.magenta>和你在</c>
<c.magenta>国情咨文演说中所听到的一样</c>

00:16:55.282 --> 00:16:56.216 align:middle
<c.magenta>最多可以用4个</c>

00:16:57.885 --> 00:16:59.720 align:middle
<c.magenta>你现在有一个选项</c>

00:17:00.254 --> 00:17:02.990 align:middle
<c.magenta>来要求使用</c>
<c.magenta>基于MFI的游戏控制器</c>

00:17:03.857 --> 00:17:06.093 align:middle
<c.magenta>而app store将会在必要时</c>
<c.magenta>根据情况</c>

00:17:06.159 --> 00:17:07.094 align:middle
<c.magenta>向用户弹出提示</c>

00:17:08.896 --> 00:17:13.032 align:middle
<c.magenta>我们也在将ReplayKit移入电视</c>

00:17:14.468 --> 00:17:15.636 align:middle
<c.magenta>使用ReplayKit</c>

00:17:16.502 --> 00:17:19.940 align:middle
<c.magenta>玩家可以在本地设备上</c>
<c.magenta>录制自己的gameplay</c>

00:17:21.008 --> 00:17:23.877 align:middle
<c.magenta>并通过AirDrop与朋友们分享</c>

00:17:24.912 --> 00:17:25.945 align:middle
<c.magenta>但是这还不是全部</c>

00:17:27.114 --> 00:17:30.083 align:middle
<c.magenta>游戏玩家现可在</c>
<c.magenta>诸如Mobcrush的服务上</c>

00:17:30.517 --> 00:17:32.319 align:middle
<c.magenta>实时广播其gameplay</c>

00:17:35.689 --> 00:17:38.792 align:middle
<c.magenta>在tvOS 10中我们也将和</c>
<c.magenta>iOS 10一道引入</c>

00:17:41.662 --> 00:17:45.132 align:middle
<c.magenta>一个全新的</c>
<c.magenta>UserNotification.framework</c>

00:17:46.233 --> 00:17:47.067 align:middle
<c.magenta>还有</c>

00:17:48.368 --> 00:17:51.405 align:middle
<c.magenta>ExternalAccessory.framework</c>
<c.magenta>这个用于</c>

00:17:51.672 --> 00:17:52.673 align:middle
<c.magenta>来自iOS的蓝牙配件</c>

00:17:54.174 --> 00:17:57.678 align:middle
<c.magenta>我们也在推出一个全新的</c>
<c.magenta>Apple TV遥控应用</c>

00:17:58.879 --> 00:18:02.549 align:middle
<c.magenta>最后用户可以设置</c>
<c.magenta>其系统外观</c>

00:17:58.879 --> 00:18:02.549 align:middle
<c.magenta>最后用户可以设置</c>
<c.magenta>其系统外观</c>

00:18:02.616 --> 00:18:04.151 align:middle
<c.magenta>的明暗程度</c>

00:18:06.687 --> 00:18:09.156 align:middle
<c.magenta>而当你实际打造应用时</c>

00:18:10.324 --> 00:18:11.425 align:middle
<c.magenta>你会有很多选择</c>

00:18:13.427 --> 00:18:15.929 align:middle
<c.magenta>你可能需要把UIKit</c>
<c.magenta>用作你的基准</c>

00:18:16.330 --> 00:18:19.233 align:middle
<c.magenta>并利用所有可用的框架</c>

00:18:19.733 --> 00:18:22.836 align:middle
<c.magenta>如果你已经习惯</c>
<c.magenta>全天然框架</c>

00:18:25.105 --> 00:18:26.740 align:middle
<c.magenta>或若你有一个现有的iOS应用</c>

00:18:27.608 --> 00:18:30.410 align:middle
<c.magenta>我们本周会有一些伟大的会话</c>
<c.magenta>请你不要错过</c>

00:18:30.978 --> 00:18:33.547 align:middle line:1
<c.magenta>包括在tvOS上掌握UIKit</c>

00:18:35.282 --> 00:18:38.785 align:middle line:1
<c.magenta>在那里你可以把你的UIKit应用</c>
<c.magenta>提升一个层次</c>

00:18:40.120 --> 00:18:42.122 align:middle
<c.magenta>而就在tvOS上的焦点交互</c>

00:18:43.590 --> 00:18:45.058 align:middle
<c.magenta>我们将回顾焦点系统</c>

00:18:45.759 --> 00:18:47.928 align:middle
<c.magenta>讨论一些tvOS 10上的新功能</c>

00:18:48.328 --> 00:18:49.963 align:middle
<c.magenta>还要讨论SpriteKit</c>

00:18:54.234 --> 00:18:56.737 align:middle
<c.magenta>我们还建议你看看TVMLKit</c>

00:18:58.505 --> 00:19:01.909 align:middle
<c.magenta>TVMLKit是一个令人难以置信的</c>
<c.magenta>丰富的框架</c>

00:18:58.505 --> 00:19:01.909 align:middle
<c.magenta>TVMLKit是一个令人难以置信的</c>
<c.magenta>丰富的框架</c>

00:19:03.377 --> 00:19:08.182 align:middle
<c.magenta>若你的技能已经</c>
<c.magenta>包括JavaScript和XML</c>

00:19:09.750 --> 00:19:11.785 align:middle
<c.magenta>那么就真的很容易使用TVMLKit</c>

00:19:11.852 --> 00:19:14.855 align:middle
<c.magenta>来迅速开发和部署以内容为中心的应用</c>

00:19:15.989 --> 00:19:18.825 align:middle
<c.magenta>而由于TVMLKit是打造于</c>
<c.magenta>UIKit之上的</c>

00:19:19.326 --> 00:19:22.829 align:middle
<c.magenta>你甚至可以混合进UIKit中</c>
<c.magenta>来做进一步的定制</c>

00:19:26.366 --> 00:19:29.670 align:middle line:1
<c.magenta>而这些会话侧重</c>
<c.magenta>从TVMLKit取得最大获益</c>

00:19:29.736 --> 00:19:32.072 align:middle line:1
<c.magenta>所以我们强烈建议你来看看</c>

00:19:33.473 --> 00:19:35.509 align:middle line:1
<c.magenta>如果你是一个游戏开发者</c>
<c.magenta>那么当然</c>

00:19:35.909 --> 00:19:39.646 align:middle
<c.magenta>所有打包成GameKit</c>
<c.magenta>的游戏技术</c>

00:19:39.713 --> 00:19:40.981 align:middle
<c.magenta>很可能也是你的选择</c>

00:19:46.587 --> 00:19:48.889 align:middle line:1
<c.magenta>下面我要加速了</c>

00:19:49.489 --> 00:19:52.926 align:middle
<c.magenta>我们要深入研究</c>
<c.magenta>tvOS 10中的一些新特性</c>

00:19:53.293 --> 00:19:56.864 align:middle
<c.magenta>为此 现在有请</c>
<c.magenta>我的同事Marshall Huss</c>

00:20:05.072 --> 00:20:07.941 align:middle
<c.magenta>下午好我是Marshall</c>
<c.magenta>我是一名tvOS工程师</c>

00:20:08.509 --> 00:20:10.777 align:middle
<c.magenta>今天我们要深入研究如何应用</c>

00:20:10.844 --> 00:20:14.381 align:middle
<c.magenta>tvOS 10中的某些新特性</c>

00:20:15.916 --> 00:20:19.052 align:middle
<c.magenta>在主题演讲中听到新的</c>
<c.magenta>Apple TV Remote应用</c>

00:20:20.087 --> 00:20:22.756 align:middle
<c.magenta>我们来看看如何使用通知</c>

00:20:22.956 --> 00:20:25.392 align:middle
<c.magenta>当你有新内容时</c>
<c.magenta>如何通知用户</c>

00:20:26.827 --> 00:20:29.329 align:middle
<c.magenta>最后我们要看看如何在你的应用中</c>

00:20:29.396 --> 00:20:31.331 align:middle
<c.magenta>实现明/暗外观调整</c>

00:20:34.067 --> 00:20:37.938 align:middle
<c.magenta>因此新的Apple TV Remote应用</c>
<c.magenta>和Siri Remote的工作模式一模一样</c>

00:20:38.005 --> 00:20:41.275 align:middle
<c.magenta>所以不需要做任何更改</c>
<c.magenta>就能让你的应用运行起来</c>

00:20:42.209 --> 00:20:45.212 align:middle
<c.magenta>它还包括</c>
<c.magenta>一个新的游戏控制器布局</c>

00:20:45.646 --> 00:20:47.447 align:middle
<c.magenta>这样用户可以用它来打游戏</c>

00:20:50.083 --> 00:20:52.352 align:middle
<c.magenta>现在如果用户正在使用此应用</c>

00:20:52.419 --> 00:20:55.522 align:middle
<c.magenta>你的应用针对游戏控制器框架做了连接</c>

00:20:55.589 --> 00:20:58.225 align:middle
<c.magenta>则他们会在导航栏得到一个新图标</c>

00:20:58.292 --> 00:20:59.326 align:middle
<c.magenta>看起来是这样的</c>

00:21:00.060 --> 00:21:03.463 align:middle
<c.magenta>当该用户点击该图标时</c>
<c.magenta>他们面前会呈现</c>

00:21:03.530 --> 00:21:06.633 align:middle
<c.magenta>一个游戏控制器布局</c>
<c.magenta>可通过旋转电话来使用</c>

00:21:08.202 --> 00:21:11.805 align:middle line:1
<c.magenta>要了解如何最大限度利用</c>
<c.magenta>游戏控制器框架</c>

00:21:11.872 --> 00:21:13.974 align:middle line:1
<c.magenta>我们本周晚些时候</c>
<c.magenta>会有一个会话</c>

00:21:15.008 --> 00:21:18.879 align:middle line:1
<c.magenta>种子今天就可用</c>
<c.magenta>请去下载和尝试</c>

00:21:21.048 --> 00:21:23.951 align:middle
<c.magenta>接下来</c>
<c.magenta>我们要看看通知</c>

00:21:24.218 --> 00:21:26.186 align:middle
<c.magenta>以及当你有新的内容可用时</c>

00:21:26.253 --> 00:21:28.055 align:middle
<c.magenta>如何使用它们来通知用户</c>

00:21:28.689 --> 00:21:30.791 align:middle
<c.magenta>你可能会习惯的</c>
<c.magenta>一个操作此事的好方法</c>

00:21:30.958 --> 00:21:32.759 align:middle
<c.magenta>是把你的应用图标做成徽章</c>

00:21:32.826 --> 00:21:35.128 align:middle
<c.magenta>我们已经在tvOS 10中</c>
<c.magenta>增加了这种支持</c>

00:21:36.396 --> 00:21:40.067 align:middle
<c.magenta>现在就iOS你得向用户要求权限</c>

00:21:40.133 --> 00:21:42.069 align:middle
<c.magenta>来把应用图标做成徽章</c>

00:21:42.202 --> 00:21:44.438 align:middle
<c.magenta>但在tvOS上</c>
<c.magenta>这看起来有点不同</c>

00:21:44.638 --> 00:21:46.974 align:middle
<c.magenta>他们会得到</c>
<c.magenta>全屏模式警报</c>

00:21:47.608 --> 00:21:48.709 align:middle
<c.magenta>所以一定要确保</c>

00:21:48.775 --> 00:21:51.111 align:middle
<c.magenta>你在适当的时间</c>
<c.magenta>申请许可</c>

00:21:51.178 --> 00:21:54.181 align:middle
<c.magenta>否则这可能是</c>
<c.magenta>用户使用应用的第一次体验</c>

00:21:55.849 --> 00:21:58.886 align:middle
<c.magenta>我们还添加了</c>
<c.magenta>对于远程通知的支持</c>

00:21:58.952 --> 00:22:01.688 align:middle
<c.magenta>这样你就可以使用</c>
<c.magenta>Apple的推送通知服务</c>

00:21:58.952 --> 00:22:01.688 align:middle
<c.magenta>这样你就可以使用</c>
<c.magenta>Apple的推送通知服务</c>

00:22:01.755 --> 00:22:03.323 align:middle
<c.magenta>来发送远程通知了</c>

00:22:04.057 --> 00:22:06.660 align:middle
<c.magenta>我们支持两种通知类型</c>

00:22:06.793 --> 00:22:11.999 align:middle
<c.magenta>那些都是我们刚才看到的徽章</c>
<c.magenta>而且也会有内容提供</c>

00:22:13.400 --> 00:22:15.869 align:middle
<c.magenta>现在如果你的应用在后台</c>

00:22:15.936 --> 00:22:19.072 align:middle
<c.magenta>那么这些有内容可用的应用</c>
<c.magenta>将不会叫醒你的应用</c>

00:22:19.139 --> 00:22:21.275 align:middle
<c.magenta>就像你可能在iOS中所习惯的那样</c>

00:22:21.675 --> 00:22:23.443 align:middle
<c.magenta>让我们来看看这是什么意思</c>

00:22:24.044 --> 00:22:26.513 align:middle
<c.magenta>比方说你的用户</c>
<c.magenta>有新的内容可用</c>

00:22:26.580 --> 00:22:27.848 align:middle
<c.magenta>好的通知方式是发送一个</c>

00:22:27.915 --> 00:22:31.785 align:middle
<c.magenta>有内容的推送通知</c>
<c.magenta>以及一个数值为1的徽章</c>

00:22:32.286 --> 00:22:35.689 align:middle
<c.magenta>如果应用未打开</c>
<c.magenta>tvOS将保留此通知</c>

00:22:36.190 --> 00:22:37.624 align:middle
<c.magenta>并更新用户的徽章</c>

00:22:38.091 --> 00:22:40.227 align:middle
<c.magenta>现在用户获得更多的可用内容</c>

00:22:40.294 --> 00:22:43.864 align:middle
<c.magenta>所以你可以发送另一个推送通知</c>
<c.magenta>其将更新徽章图标</c>

00:22:45.632 --> 00:22:48.368 align:middle
<c.magenta>tvOS将保留</c>
<c.magenta>最新的通知</c>

00:22:48.602 --> 00:22:50.170 align:middle
<c.magenta>并等待应用回来</c>

00:22:50.237 --> 00:22:52.639 align:middle
<c.magenta>最后</c>
<c.magenta>你会得到更多的可用内容</c>

00:22:52.706 --> 00:22:54.308 align:middle
<c.magenta>而你也可以再次更新徽章</c>

00:22:54.641 --> 00:22:55.642 align:middle
<c.magenta>当用户准备好之后</c>

00:22:55.709 --> 00:22:58.045 align:middle
<c.magenta>回到应用并看看他们有什么新内容时</c>

00:22:58.345 --> 00:22:59.379 align:middle
<c.magenta>他们可以打开应用</c>

00:22:59.813 --> 00:23:02.816 align:middle
<c.magenta>而我们提供上次通知</c>
<c.magenta>这样你就可以到你的服务器</c>

00:22:59.813 --> 00:23:02.816 align:middle
<c.magenta>而我们提供上次通知</c>
<c.magenta>这样你就可以到你的服务器</c>

00:23:02.883 --> 00:23:05.319 align:middle
<c.magenta>并也许获得</c>
<c.magenta>任何可用的新内容</c>

00:23:07.721 --> 00:23:08.956 align:middle
<c.magenta>为了支持这一点</c>

00:23:09.022 --> 00:23:11.592 align:middle
<c.magenta>你必须使用</c>
<c.magenta>新用户通知框架</c>

00:23:11.992 --> 00:23:15.562 align:middle
<c.magenta>如果你之前已经</c>
<c.magenta>在iOS中应用过通知</c>

00:23:15.629 --> 00:23:17.831 align:middle
<c.magenta>你可能习惯了使用UIKit API</c>

00:23:18.332 --> 00:23:20.734 align:middle
<c.magenta>到现在为止那些在tvOS中</c>
<c.magenta>是被禁止的</c>

00:23:20.801 --> 00:23:22.102 align:middle
<c.magenta>而它们将被保持禁止</c>

00:23:22.169 --> 00:23:25.005 align:middle
<c.magenta>所以为了全力支持本地通知</c>
<c.magenta>和[听不清]的通知</c>

00:23:25.072 --> 00:23:28.408 align:middle
<c.magenta>你将需要使用</c>
<c.magenta>新用户通知框架</c>

00:23:28.809 --> 00:23:30.611 align:middle
<c.magenta>我们本周会有关于你可以如何学习</c>

00:23:30.677 --> 00:23:33.413 align:middle
<c.magenta>在你的应用中</c>
<c.magenta>完全将其应用的会话</c>

00:23:35.148 --> 00:23:37.317 align:middle
<c.magenta>而终于在今天</c>
<c.magenta>我们要去看一看</c>

00:23:37.384 --> 00:23:39.987 align:middle
<c.magenta>tvOS上的</c>
<c.magenta>新的明暗外观</c>

00:23:41.188 --> 00:23:44.491 align:middle
<c.magenta>我们看到这是</c>
<c.magenta>给用户的一个全系统的设置</c>

00:23:45.025 --> 00:23:47.594 align:middle
<c.magenta>用户将确定其何时</c>
<c.magenta>想在明暗之间</c>

00:23:47.661 --> 00:23:48.762 align:middle
<c.magenta>做出改变</c>

00:23:49.296 --> 00:23:50.631 align:middle
<c.magenta>现在要考虑的事情</c>

00:23:50.697 --> 00:23:53.133 align:middle
<c.magenta>是用户可能在不同的环境</c>
<c.magenta>有一定的空间</c>

00:23:53.200 --> 00:23:55.135 align:middle
<c.magenta>它可以是在一个电影厅中</c>
<c.magenta>那里很暗</c>

00:23:55.202 --> 00:23:57.771 align:middle
<c.magenta>它可能是在起居室中</c>
<c.magenta>里面有很多窗户</c>

00:23:57.838 --> 00:24:00.440 align:middle
<c.magenta>或者用户可以</c>
<c.magenta>根据一天中的时间改变它</c>

00:23:57.838 --> 00:24:00.440 align:middle
<c.magenta>或者用户可以</c>
<c.magenta>根据一天中的时间改变它</c>

00:24:00.941 --> 00:24:03.577 align:middle
<c.magenta>所以为了尊重用户的选择</c>
<c.magenta>为其提供最好的</c>

00:24:03.644 --> 00:24:05.679 align:middle
<c.magenta>用户体验非常重要</c>

00:24:07.581 --> 00:24:10.150 align:middle
<c.magenta>为了充分支持这一点</c>
<c.magenta>我们已经</c>

00:24:10.450 --> 00:24:12.152 align:middle
<c.magenta>在UITraitCollection上添加了新的API</c>

00:24:14.221 --> 00:24:17.391 align:middle
<c.magenta>你必须真正选择加入</c>
<c.magenta>黑暗的外观</c>

00:24:20.294 --> 00:24:22.129 align:middle
<c.magenta>如果你不选择加入</c>

00:24:22.196 --> 00:24:25.365 align:middle
<c.magenta>你的应用将继续留在亮处</c>
<c.magenta>就像在tvOS 9中所做的一样</c>

00:24:28.502 --> 00:24:30.571 align:middle
<c.magenta>让我们一起来看看</c>
<c.magenta>如何才能让你的应用</c>

00:24:30.637 --> 00:24:33.173 align:middle
<c.magenta>采用新的明</c>
<c.magenta>暗系统的外观</c>

00:24:34.942 --> 00:24:38.045 align:middle
<c.magenta>第一步是添加一把新钥匙</c>
<c.magenta>到你的Info.plist</c>

00:24:38.111 --> 00:24:41.014 align:middle
<c.magenta>我们添加了一个叫做</c>
<c.magenta>UIUserInterfaceStyle</c>

00:24:41.481 --> 00:24:44.718 align:middle
<c.magenta>如果设置了明值</c>
<c.magenta>它就总是解析为明</c>

00:24:44.985 --> 00:24:47.821 align:middle
<c.magenta>如果设置了暗值</c>
<c.magenta>你的应用就总是解析为暗</c>

00:24:48.088 --> 00:24:50.791 align:middle
<c.magenta>或者如果你使用我们所推荐的 自动的</c>

00:24:50.858 --> 00:24:53.060 align:middle
<c.magenta>它尊重用户和系统设定</c>

00:24:53.126 --> 00:24:55.162 align:middle
<c.magenta>并通过你的应用进行传播</c>

00:24:56.230 --> 00:24:59.900 align:middle
<c.magenta>如果你用Xcode 8为</c>
<c.magenta>tvOS制作新项目</c>

00:24:59.967 --> 00:25:02.002 align:middle
<c.magenta>这实际上将默认为自动</c>

00:24:59.967 --> 00:25:02.002 align:middle
<c.magenta>这实际上将默认为自动</c>

00:25:03.403 --> 00:25:05.772 align:middle
<c.magenta>有新API和</c>
<c.magenta>TraitCollection</c>

00:25:05.839 --> 00:25:08.876 align:middle
<c.magenta>我们增加了一个新属性</c>
<c.magenta>称为UserInterfaceStyle</c>

00:25:09.543 --> 00:25:12.613 align:middle
<c.magenta>这可能有不确定的值</c>
<c.magenta>可能是</c>

00:25:12.679 --> 00:25:15.282 align:middle
<c.magenta>如果你的视图尚未被插入视图层次结构</c>

00:25:15.449 --> 00:25:17.284 align:middle
<c.magenta>或者它可以或明或暗</c>

00:25:17.351 --> 00:25:20.654 align:middle
<c.magenta>具体取决于系统设置</c>
<c.magenta>和你的应用支持什么</c>

00:25:24.258 --> 00:25:27.327 align:middle
<c.magenta>为了支持开发者将其采用</c>

00:25:27.394 --> 00:25:29.162 align:middle
<c.magenta>我们增加了开发工具支持</c>

00:25:29.363 --> 00:25:31.565 align:middle
<c.magenta>到界面生成器和模拟器</c>

00:25:32.399 --> 00:25:34.301 align:middle
<c.magenta>如果你使用标准的UIKit控制</c>

00:25:34.368 --> 00:25:36.870 align:middle
<c.magenta>这些实际上会为你自动改变</c>

00:25:37.337 --> 00:25:39.740 align:middle
<c.magenta>如果你习惯使用外观代理</c>

00:25:39.806 --> 00:25:42.809 align:middle
<c.magenta>那么重构一点点</c>
<c.magenta>然后你就可以指定颜色了</c>

00:25:42.876 --> 00:25:44.545 align:middle
<c.magenta>这取决于TraitCollection</c>

00:25:44.945 --> 00:25:46.647 align:middle
<c.magenta>如果你想要最大程度的控制</c>

00:25:46.713 --> 00:25:48.749 align:middle
<c.magenta>你可以应用</c>
<c.magenta>TraitCollectionDidChange</c>

00:25:48.815 --> 00:25:50.651 align:middle
<c.magenta>在你的视图或视图控制里</c>

00:25:53.287 --> 00:25:56.690 align:middle
<c.magenta>现在在界面生成器</c>
<c.magenta>你可以指定颜色</c>

00:25:56.757 --> 00:25:58.792 align:middle
<c.magenta>就在检查者中规定明暗</c>

00:26:00.827 --> 00:26:03.697 align:middle
<c.magenta>我们向Storyboard</c>
<c.magenta>增加了一个明暗预览</c>

00:26:03.764 --> 00:26:06.033 align:middle
<c.magenta>这样你就可以迅速开发</c>
<c.magenta>和设计你的应用了</c>

00:26:06.567 --> 00:26:09.069 align:middle
<c.magenta>我们还向模拟器增加了一个快捷方式</c>
<c.magenta>从而能</c>

00:26:09.136 --> 00:26:11.839 align:middle
<c.magenta>这些系统外观之间</c>
<c.magenta>快速切换</c>

00:26:15.209 --> 00:26:18.745 align:middle
<c.magenta>我提过UIKit控制</c>
<c.magenta>会将其自动更新</c>

00:26:19.146 --> 00:26:21.248 align:middle
<c.magenta>而我们在自己的系统应用中</c>
<c.magenta>对其大量应用</c>

00:26:21.481 --> 00:26:22.749 align:middle
<c.magenta>我们看到某些视图</c>

00:26:22.816 --> 00:26:25.619 align:middle
<c.magenta>比如这个键盘</c>
<c.magenta>或文本字段或分段控制</c>

00:26:25.686 --> 00:26:29.256 align:middle
<c.magenta>会自动更新风格</c>
<c.magenta>以在电视壁纸上显示最好的效果</c>

00:26:29.590 --> 00:26:32.092 align:middle
<c.magenta>若你使用表格视图</c>
<c.magenta>像我们在设置应用中一样</c>

00:26:32.359 --> 00:26:34.862 align:middle
<c.magenta>它会自动调整其背景颜色</c>

00:26:34.928 --> 00:26:37.297 align:middle
<c.magenta>文本颜色</c>
<c.magenta>以及所有的参数来使其看起来好看</c>

00:26:37.364 --> 00:26:39.867 align:middle
<c.magenta>如果你正在使用系统内置键盘</c>

00:26:39.967 --> 00:26:41.468 align:middle
<c.magenta>那么那些也会自行调整</c>

00:26:43.670 --> 00:26:46.640 align:middle
<c.magenta>如果你正在尝试自定义你的文字</c>

00:26:46.707 --> 00:26:49.576 align:middle
<c.magenta>我们已添加支持到</c>
<c.magenta>UILabel和UITextView</c>

00:26:49.643 --> 00:26:52.212 align:middle
<c.magenta>这样它们也就会自动改变其颜色</c>

00:26:52.946 --> 00:26:56.016 align:middle
<c.magenta>为轻巧美观</c>
<c.magenta>文字颜色设置为黑色</c>

00:26:56.483 --> 00:26:58.752 align:middle
<c.magenta>外观为暗时</c>
<c.magenta>它将被设定为白色</c>

00:26:59.052 --> 00:27:01.622 align:middle
<c.magenta>但有需要注意的是</c>
<c.magenta>如果你设置过文本颜色</c>

00:26:59.052 --> 00:27:01.622 align:middle
<c.magenta>但有需要注意的是</c>
<c.magenta>如果你设置过文本颜色</c>

00:27:01.688 --> 00:27:04.057 align:middle
<c.magenta>则你将自行负责</c>
<c.magenta>为此两种模式</c>

00:27:04.124 --> 00:27:05.692 align:middle
<c.magenta>更新该颜色</c>

00:27:08.061 --> 00:27:11.298 align:middle
<c.magenta>我们还添加了</c>
<c.magenta>两个新的模糊样式到API</c>

00:27:12.366 --> 00:27:15.235 align:middle
<c.magenta>你现在可以使用</c>
<c.magenta>UIBlurEffectStyleRegular</c>

00:27:15.302 --> 00:27:17.371 align:middle
<c.magenta>或UIBlurEffectStyleProminent了</c>

00:27:17.771 --> 00:27:19.573 align:middle
<c.magenta>我们称这些为自动样式</c>

00:27:19.640 --> 00:27:22.976 align:middle
<c.magenta>他们实际上将基于系统设置内容来调整</c>

00:27:23.043 --> 00:27:24.912 align:middle
<c.magenta>有效的模糊效果的风格</c>

00:27:25.345 --> 00:27:27.981 align:middle
<c.magenta>所以如果你使用</c>
<c.magenta>UIBlurEffectStyleRegular</c>

00:27:28.048 --> 00:27:31.318 align:middle
<c.magenta>而系统是浅色 则其将使用</c>
<c.magenta>UIBlurEffectStyle.light</c>

00:27:31.485 --> 00:27:34.087 align:middle
<c.magenta>如果使用常规和深色</c>
<c.magenta>你将使用深色</c>

00:27:34.154 --> 00:27:37.591 align:middle
<c.magenta>如果你使用突出 其将使用</c>
<c.magenta>.extraLight和.extraDark</c>

00:27:38.292 --> 00:27:40.327 align:middle
<c.magenta>.extraDark被放在</c>
<c.magenta>稍后种子中</c>

00:27:44.198 --> 00:27:47.334 align:middle
<c.magenta>现在你可以用外观代理</c>
<c.magenta>定制你的应用了</c>

00:27:47.401 --> 00:27:49.837 align:middle
<c.magenta>所以你可能有这样的代码</c>

00:27:50.170 --> 00:27:52.806 align:middle
<c.magenta>它设置一个按钮的标题颜色为红色</c>

00:27:53.407 --> 00:27:55.008 align:middle
<c.magenta>重新调整一点点</c>

00:27:55.075 --> 00:27:57.544 align:middle
<c.magenta>就可为明暗两色都提供</c>
<c.magenta>TraitCollection</c>

00:27:57.611 --> 00:27:59.780 align:middle
<c.magenta>而使用外观代理API</c>

00:27:59.847 --> 00:28:03.050 align:middle
<c.magenta>我们可以为那些具体的</c>
<c.magenta>TraitCollections 设置一种颜色</c>

00:27:59.847 --> 00:28:03.050 align:middle
<c.magenta>我们可以为那些具体的</c>
<c.magenta>TraitCollections 设置一种颜色</c>

00:28:03.116 --> 00:28:06.687 align:middle
<c.magenta>现在这种情况下我们的按钮</c>
<c.magenta>将在浅色外观下使用红色</c>

00:28:06.954 --> 00:28:08.856 align:middle
<c.magenta>将在深色外观下使用蓝色</c>

00:28:10.624 --> 00:28:13.527 align:middle
<c.magenta>最后如果你想要</c>
<c.magenta>在这些变化中有最多的控制</c>

00:28:13.594 --> 00:28:15.229 align:middle
<c.magenta>你可以直接回复他们</c>

00:28:16.096 --> 00:28:18.298 align:middle
<c.magenta>使用TraitCollectionDidChange</c>
<c.magenta>你就能在</c>

00:28:18.365 --> 00:28:20.067 align:middle
<c.magenta>在你的视图或视图控制器中做到</c>

00:28:20.167 --> 00:28:22.870 align:middle
<c.magenta>让我们来看一个对此应用会是什么样子</c>

00:28:23.136 --> 00:28:26.640 align:middle
<c.magenta>首先我们在视图控制器中覆写了</c>
<c.magenta>TraitCollectionDidChange</c>

00:28:28.175 --> 00:28:30.711 align:middle
<c.magenta>然后我们检查以确保</c>
<c.magenta>UITraitCollection</c>

00:28:30.777 --> 00:28:33.180 align:middle
<c.magenta>对新的</c>
<c.magenta>用户界面的样式属性</c>

00:28:33.247 --> 00:28:36.683 align:middle
<c.magenta>这使我们能够在tvOS上</c>
<c.magenta>为我们的用户建立这个功能</c>

00:28:36.750 --> 00:28:39.119 align:middle
<c.magenta>但依然支持</c>
<c.magenta>可能在使用tvOS 9的用户</c>

00:28:41.021 --> 00:28:41.855 align:middle
<c.magenta>下一个</c>

00:28:41.922 --> 00:28:44.691 align:middle
<c.magenta>我们检查用户界面风格</c>
<c.magenta>实际改变了</c>

00:28:44.758 --> 00:28:47.294 align:middle
<c.magenta>否则我们可能会做</c>
<c.magenta>比我们所需要的更多的工作</c>

00:28:48.529 --> 00:28:51.865 align:middle
<c.magenta>最后我们可以检查</c>
<c.magenta>用户界面风格</c>

00:28:51.932 --> 00:28:53.800 align:middle
<c.magenta>并相应地更新我们的控制</c>

00:28:56.570 --> 00:28:58.505 align:middle
<c.magenta>现在对此的一项高级用途是</c>

00:28:58.572 --> 00:29:00.641 align:middle
<c.magenta>你是否想覆写</c>
<c.magenta>TraitCollections</c>

00:28:58.572 --> 00:29:00.641 align:middle
<c.magenta>你是否想覆写</c>
<c.magenta>TraitCollections</c>

00:29:00.707 --> 00:29:03.310 align:middle
<c.magenta>可能是这种情况</c>
<c.magenta>如果你希望你的应用</c>

00:29:03.377 --> 00:29:06.180 align:middle
<c.magenta>支持自动风格</c>
<c.magenta>但也可以在你的应用中</c>

00:29:06.246 --> 00:29:07.681 align:middle
<c.magenta>有某些视图或视图控制器</c>

00:29:07.781 --> 00:29:10.617 align:middle
<c.magenta>而你想要指定样式本身</c>

00:29:11.385 --> 00:29:12.953 align:middle
<c.magenta>我们将此用于我们的系统应用</c>

00:29:13.187 --> 00:29:18.959 align:middle
<c.magenta>我们的产品页面和电影</c>
<c.magenta>而电视节目实际使用</c>

00:29:19.026 --> 00:29:20.894 align:middle
<c.magenta>其艺术作品</c>
<c.magenta>所基于各种元素的样子</c>

00:29:21.094 --> 00:29:23.030 align:middle
<c.magenta>在这种情况下我们有浅色艺术作品</c>

00:29:23.096 --> 00:29:25.532 align:middle
<c.magenta>所以我们就按钮样式使用黑色文本</c>

00:29:25.599 --> 00:29:27.000 align:middle
<c.magenta>使颜色鲜活</c>

00:29:27.634 --> 00:29:31.104 align:middle
<c.magenta>我们也有深色网页</c>
<c.magenta>我们在深色风格上</c>

00:29:31.171 --> 00:29:33.440 align:middle
<c.magenta>用白色文本 而按钮也被相应更新</c>

00:29:35.676 --> 00:29:37.544 align:middle
<c.magenta>为了覆写这些</c>
<c.magenta>TraitCollections</c>

00:29:37.611 --> 00:29:39.847 align:middle
<c.magenta>我们使用API</c>
<c.magenta>其已经被添加进iOS 8</c>

00:29:39.913 --> 00:29:43.183 align:middle
<c.magenta>而这是用于ChildViewController</c>
<c.magenta>的setOverrideTraitCollection</c>

00:29:43.517 --> 00:29:46.386 align:middle
<c.magenta>为了将其使用</c>
<c.magenta>我们可以用小包装</c>

00:29:47.187 --> 00:29:49.356 align:middle
<c.magenta>让我们看这样一个例子</c>
<c.magenta>可能可能看起来像</c>

00:29:50.490 --> 00:29:51.625 align:middle
<c.magenta>首先我们创建...</c>

00:29:54.061 --> 00:29:55.863 align:middle
<c.magenta>一个新的类</c>
<c.magenta>AppearanceViewController</c>

00:29:55.929 --> 00:29:58.131 align:middle
<c.magenta>然后我们从UIViewController处继承</c>

00:29:58.866 --> 00:30:00.868 align:middle
<c.magenta>我们可添加一个属性</c>
<c.magenta>它有这样的一种风格</c>

00:29:58.866 --> 00:30:00.868 align:middle
<c.magenta>我们可添加一个属性</c>
<c.magenta>它有这样的一种风格</c>

00:30:00.934 --> 00:30:03.770 align:middle
<c.magenta>即我们可能会想设置</c>
<c.magenta>ChildViewControllers</c>

00:30:03.837 --> 00:30:07.441 align:middle
<c.magenta>然后我们可以添加另一个属性</c>
<c.magenta>在这里我们</c>

00:30:07.508 --> 00:30:09.610 align:middle
<c.magenta>实际设置视图控制器</c>

00:30:13.814 --> 00:30:17.518 align:middle
<c.magenta>然后我们为ChildViewController</c>
<c.magenta>设置了OverrideTraitCollection</c>

00:30:17.584 --> 00:30:19.553 align:middle
<c.magenta>用我们指定的样式</c>

00:30:19.920 --> 00:30:23.223 align:middle line:1
<c.magenta>最后我们使用标准</c>
<c.magenta>ChildViewController包含</c>

00:30:24.691 --> 00:30:26.493 align:middle
<c.magenta>现在如果你想使用这个类</c>

00:30:27.094 --> 00:30:29.830 align:middle
<c.magenta>我们可以提供</c>
<c.magenta>AppearanceViewController</c>

00:30:30.130 --> 00:30:34.735 align:middle
<c.magenta>指定我们想要的风格</c>
<c.magenta>无论基于我们希望的何种属性</c>

00:30:35.502 --> 00:30:37.204 align:middle
<c.magenta>我们可以设置ViewController</c>

00:30:37.838 --> 00:30:39.640 align:middle
<c.magenta>然后我们将其转让给用户</c>

00:30:42.409 --> 00:30:44.011 align:middle
<c.magenta>接下来有请Brandon</c>

00:30:44.077 --> 00:30:46.847 align:middle
<c.magenta>来向你展示怎么样</c>
<c.magenta>来为tvOS 10而更新你的应用</c>

00:31:03.597 --> 00:31:04.665 align:middle
<c.magenta>谢谢 Marshall</c>

00:31:04.965 --> 00:31:06.433 align:middle
<c.magenta>大家好 我是Brandon</c>

00:31:06.500 --> 00:31:10.070 align:middle
<c.magenta>非常激动向你们展示</c>
<c.magenta>我们一直在努力做的tvOS应用</c>

00:31:10.337 --> 00:31:12.139 align:middle
<c.magenta>它被称为世界壁炉</c>

00:31:12.239 --> 00:31:14.875 align:middle
<c.magenta>壁炉爱好者们</c>
<c.magenta>到目前为止很喜爱它</c>

00:31:15.209 --> 00:31:16.076 align:middle
<c.magenta>让我们来看看</c>

00:31:19.246 --> 00:31:22.015 align:middle
<c.magenta>这个应用允许你把</c>
<c.magenta>来自世界各地的壁炉样式</c>

00:31:22.082 --> 00:31:23.550 align:middle
<c.magenta>直接带到你的客厅</c>

00:31:23.817 --> 00:31:26.220 align:middle
<c.magenta>让我们来看看</c>
<c.magenta>佛蒙特州的壁炉是什么模样</c>

00:31:28.655 --> 00:31:30.657 align:middle
<c.magenta>啊 这里感觉很舒适 不是吗？</c>

00:31:31.258 --> 00:31:32.292 align:middle
<c.magenta>我认为这很棒</c>

00:31:34.895 --> 00:31:37.764 align:middle
<c.magenta>现在尽管模拟器外观</c>
<c.magenta>将被设置为深色</c>

00:31:37.831 --> 00:31:39.833 align:middle
<c.magenta>我们的应用使用的是默认的浅色外观</c>

00:31:39.900 --> 00:31:41.935 align:middle
<c.magenta>因为我们没有指定偏好</c>

00:31:42.269 --> 00:31:44.371 align:middle
<c.magenta>我很高兴能采用</c>
<c.magenta>新的深色外观</c>

00:31:44.438 --> 00:31:45.906 align:middle
<c.magenta>让我们现在就去更新应用</c>

00:31:49.042 --> 00:31:50.344 align:middle
<c.magenta>我们需要做的第一件事情</c>

00:31:50.410 --> 00:31:54.014 align:middle
<c.magenta>是将此新用户界面风格密钥</c>
<c.magenta>添加到我们的Info.plist</c>

00:32:01.688 --> 00:32:04.157 align:middle
<c.magenta>我们会把它的值设为自动</c>
<c.magenta>并重新运行我们的应用</c>

00:32:06.326 --> 00:32:08.662 align:middle
<c.magenta>我们选择自动</c>
<c.magenta>因为我们希望让我们应用的外观</c>

00:32:08.729 --> 00:32:10.731 align:middle
<c.magenta>匹配用户的外观设置</c>

00:32:16.303 --> 00:32:18.472 align:middle
<c.magenta>好的</c>
<c.magenta>目前为止看起来很不错</c>

00:32:19.006 --> 00:32:22.643 align:middle
<c.magenta>所以我们所有的标准UIKit视图</c>
<c.magenta>都已被自动更新</c>

00:32:22.910 --> 00:32:25.312 align:middle
<c.magenta>因此在这种情况下标签栏</c>
<c.magenta>和壁纸</c>

00:32:25.379 --> 00:32:26.713 align:middle
<c.magenta>现在就有了一个深色的外观</c>

00:32:27.447 --> 00:32:28.282 align:middle
<c.magenta>对于你们某些来说</c>

00:32:28.348 --> 00:32:30.884 align:middle
<c.magenta>这可能就是你</c>
<c.magenta>更新你的应用所需要做的一切</c>

00:32:30.951 --> 00:32:33.120 align:middle
<c.magenta>但是我们的设计师已经决定</c>

00:32:33.187 --> 00:32:36.290 align:middle
<c.magenta>他们希望深色外观</c>
<c.magenta>有一个不同的标志颜色</c>

00:32:36.957 --> 00:32:39.526 align:middle
<c.magenta>而在集合视图样式中的</c>
<c.magenta>背景颜色</c>

00:32:39.593 --> 00:32:41.161 align:middle
<c.magenta>有那么一点点突兀</c>

00:32:41.361 --> 00:32:42.863 align:middle
<c.magenta>那么就让我们来做这些更改</c>

00:32:44.231 --> 00:32:46.133 align:middle
<c.magenta>让我们去我们的main.storyboard</c>

00:32:47.935 --> 00:32:51.004 align:middle
<c.magenta>而我们需要做的第一件事</c>

00:32:51.071 --> 00:32:53.340 align:middle
<c.magenta>因为这是一个现有项目</c>

00:32:53.407 --> 00:32:57.544 align:middle
<c.magenta>我们需要在Xcode 8中启动</c>
<c.magenta>性状变体功能</c>

00:32:58.078 --> 00:33:01.048 align:middle
<c.magenta>因此要做到这一点</c>
<c.magenta>我们会去文件检查器中</c>

00:32:58.078 --> 00:33:01.048 align:middle
<c.magenta>因此要做到这一点</c>
<c.magenta>我们会去文件检查器中</c>

00:33:01.849 --> 00:33:04.451 align:middle
<c.magenta>点击Use Trait</c>
<c.magenta>Variations 复选框</c>

00:33:05.018 --> 00:33:08.956 align:middle
<c.magenta>当我们这样做时会得到警告</c>
<c.magenta>即性状变化仅仅兼容</c>

00:33:09.323 --> 00:33:10.624 align:middle
<c.magenta>Xcode 8或更高版本</c>

00:33:10.691 --> 00:33:12.392 align:middle
<c.magenta>这很好 所以我们将继续</c>

00:33:13.994 --> 00:33:17.264 align:middle
<c.magenta>现在我们要点击我们的标志</c>
<c.magenta>去Attributes Inspector</c>

00:33:17.431 --> 00:33:20.434 align:middle
<c.magenta>在一些属性旁边</c>
<c.magenta>有这些新的加号按钮</c>

00:33:20.501 --> 00:33:21.869 align:middle
<c.magenta>所以我们会将其点击</c>

00:33:21.935 --> 00:33:25.038 align:middle
<c.magenta>并为我们的标志图像</c>
<c.magenta>添加一个深色接口</c>

00:33:25.105 --> 00:33:26.406 align:middle
<c.magenta>我们会将其指定为黄色</c>

00:33:28.208 --> 00:33:29.843 align:middle
<c.magenta>现在Xcode 8一很酷功能</c>

00:33:29.910 --> 00:33:32.546 align:middle
<c.magenta>可在Interface</c>
<c.magenta>Builder的外观间</c>

00:33:32.613 --> 00:33:34.414 align:middle
<c.magenta>直接切换</c>

00:33:34.781 --> 00:33:37.217 align:middle
<c.magenta>要做到这一点我们就下到</c>
<c.magenta>我们的故事板的底部</c>

00:33:37.284 --> 00:33:39.853 align:middle line:1
<c.magenta>并点击View As:</c>
<c.magenta>Apple TV（浅色风格）.</c>

00:33:40.587 --> 00:33:41.989 align:middle line:1
<c.magenta>我们在这里有两个选择</c>

00:33:42.222 --> 00:33:43.957 align:middle line:1
<c.magenta>浅色和深色</c>

00:33:45.392 --> 00:33:48.795 align:middle
<c.magenta>当我们点击深色时</c>
<c.magenta>一切都将自动更新</c>

00:33:48.862 --> 00:33:50.297 align:middle
<c.magenta>我们的标志变了颜色</c>

00:33:50.364 --> 00:33:54.501 align:middle
<c.magenta>而且标签栏和墙纸</c>
<c.magenta>也都已经改变了颜色</c>

00:33:55.836 --> 00:33:58.972 align:middle
<c.magenta>看起来很不错</c>
<c.magenta>现在来更新我们的背景颜色</c>

00:34:00.741 --> 00:34:02.042 align:middle
<c.magenta>在AppDelegate中</c>

00:34:02.242 --> 00:34:05.879 align:middle
<c.magenta>我们使用外观代理</c>
<c.magenta>来设置我们CollectionViewCell的</c>

00:34:05.946 --> 00:34:07.347 align:middle
<c.magenta>背景颜色</c>

00:34:07.948 --> 00:34:11.318 align:middle
<c.magenta>现在我们要背景颜色</c>
<c.magenta>根据具体特性变化</c>

00:34:11.385 --> 00:34:13.954 align:middle
<c.magenta>因此我们需要使用</c>
<c.magenta>具体特性的外观代理</c>

00:34:14.521 --> 00:34:18.458 align:middle
<c.magenta>所以首先我们要</c>
<c.magenta>通过创建一个UITraitCollection来开始</c>

00:34:18.525 --> 00:34:20.994 align:middle
<c.magenta>因此用浅色的UserInterfaceStyle</c>

00:34:21.594 --> 00:34:24.931 align:middle
<c.magenta>来让浅色等于</c>
<c.magenta>UITraitCollection</c>

00:34:27.134 --> 00:34:29.536 align:middle
<c.magenta>然后我们将更换</c>
<c.magenta>我们的通用外观代理</c>

00:34:29.670 --> 00:34:31.705 align:middle
<c.magenta>用的是具体特性的外观代理</c>

00:34:32.039 --> 00:34:36.043 align:middle line:1
<c.magenta>因此对于TraitCollection我们会用</c>
<c.magenta>刚刚创建的TraitCollection</c>

00:34:37.978 --> 00:34:41.315 align:middle
<c.magenta>就深色我们会同样操作</c>
<c.magenta>并指定一个不同的背景颜色</c>

00:34:42.216 --> 00:34:44.351 align:middle
<c.magenta>现在我们无法在</c>
<c.magenta>Interface Builder中查看</c>

00:34:44.418 --> 00:34:45.418 align:middle
<c.magenta>我们重新运行应用</c>

00:34:46.652 --> 00:34:49.156 align:middle
<c.magenta>我们增加了一个键盘快捷键</c>
<c.magenta>这样你就可以切换</c>

00:34:49.456 --> 00:34:53.427 align:middle
<c.magenta>在模拟器中的</c>
<c.magenta>浅色与深色外观之间快速切换</c>

00:34:54.862 --> 00:34:56.830 align:middle
<c.magenta>要做到这一点</c>
<c.magenta>点击Command Shift D</c>

00:34:57.164 --> 00:34:58.665 align:middle
<c.magenta>来切换浅色外观</c>

00:34:58.966 --> 00:35:02.002 align:middle
<c.magenta>然后Command Shift D</c>
<c.magenta>来切换回深色外观</c>

00:34:58.966 --> 00:35:02.002 align:middle
<c.magenta>然后Command Shift D</c>
<c.magenta>来切换回深色外观</c>

00:35:02.769 --> 00:35:04.404 align:middle
<c.magenta>到目前为止看起来都相当不错</c>

00:35:04.471 --> 00:35:08.141 align:middle
<c.magenta>但我注意到 现在我们已经改变了</c>

00:35:08.208 --> 00:35:10.143 align:middle
<c.magenta>我们的背景颜色</c>
<c.magenta>却很难再看到图标了</c>

00:35:10.544 --> 00:35:12.045 align:middle
<c.magenta>所以让我们把这个也更新一下</c>

00:35:13.981 --> 00:35:16.683 align:middle
<c.magenta>我们会去我们定制的</c>
<c.magenta>收藏ViewCell子类别</c>

00:35:17.217 --> 00:35:21.021 align:middle
<c.magenta>而之前我们在awakeFromNib</c>
<c.magenta>功能中设置着色颜色</c>

00:35:21.855 --> 00:35:25.459 align:middle
<c.magenta>既然我们要在我们的TraitCollection改变时</c>
<c.magenta>让着色颜色改变</c>

00:35:25.526 --> 00:35:28.695 align:middle
<c.magenta>我们将覆写</c>
<c.magenta>TraitCollectionDidChange功能</c>

00:35:30.764 --> 00:35:34.168 align:middle
<c.magenta>我们将使用与我们的浅色界面风格</c>
<c.magenta>相同的的颜色</c>

00:35:34.668 --> 00:35:37.337 align:middle
<c.magenta>而为我们的深色</c>
<c.magenta>我们将实际使用浅灰色</c>

00:35:38.672 --> 00:35:42.409 align:middle
<c.magenta>现在TraitCollectionDidChange</c>
<c.magenta>将在每次</c>

00:35:42.476 --> 00:35:45.179 align:middle
<c.magenta>你的视图被添加到</c>
<c.magenta>一个视图层次时被调用</c>

00:35:45.245 --> 00:35:47.481 align:middle
<c.magenta>我们在这里删除我们的初始化代码</c>

00:35:47.848 --> 00:35:51.351 align:middle
<c.magenta>但为了向下兼容</c>
<c.magenta>我们只是把它留在那里</c>

00:35:52.753 --> 00:35:54.621 align:middle
<c.magenta>让我们运行应用</c>
<c.magenta>看看现在效果如何</c>

00:36:02.095 --> 00:36:03.730 align:middle
<c.magenta>好的 看起来好多了</c>

00:36:04.498 --> 00:36:07.401 align:middle
<c.magenta>让我们切换到浅色外观</c>
<c.magenta>确保一切都没有改变</c>

00:36:07.467 --> 00:36:08.735 align:middle
<c.magenta>看起来仍然不错</c>

00:36:09.102 --> 00:36:11.905 align:middle
<c.magenta>现在回到深色外观</c>
<c.magenta>看起来真棒</c>

00:36:12.439 --> 00:36:15.776 align:middle
<c.magenta>我们刚刚更新了我们的应用</c>
<c.magenta>来采用新的深色外观</c>

00:36:16.109 --> 00:36:18.345 align:middle
<c.magenta>我们已经为tvOS 10做好准备了</c>

00:36:18.812 --> 00:36:21.014 align:middle
<c.magenta>现在有请Hans</c>
<c.magenta>回到舞台</c>

00:36:27.521 --> 00:36:28.522 align:middle
<c.magenta>谢谢你Brandon</c>

00:36:29.223 --> 00:36:32.025 align:middle
<c.magenta>非常棒的案例示范</c>

00:36:34.828 --> 00:36:36.063 align:middle
<c.magenta>所以和你所见的一样</c>

00:36:36.129 --> 00:36:38.732 align:middle
<c.magenta>采用浅色和深色外观</c>
<c.magenta>是相当容易的</c>

00:36:39.266 --> 00:36:43.403 align:middle
<c.magenta>我们希望大家都可以</c>
<c.magenta>在你的应用中很快采用它</c>

00:36:47.274 --> 00:36:51.311 align:middle
<c.magenta>今天下午我们已经看到了</c>
<c.magenta>tvOS中的许多功能的一小部分</c>

00:36:52.546 --> 00:36:56.617 align:middle
<c.magenta>tvOS提供你已知的相同的工具</c>
<c.magenta>服务和框架</c>

00:36:57.084 --> 00:36:59.987 align:middle
<c.magenta>所以它真的</c>
<c.magenta>很容易上手</c>

00:37:02.022 --> 00:37:03.624 align:middle
<c.magenta>而基于焦点的交互</c>

00:37:04.291 --> 00:37:07.895 align:middle
<c.magenta>结合了视差效果的分层图像</c>
<c.magenta>和Top Shelf</c>

00:37:08.462 --> 00:37:10.631 align:middle
<c.magenta>它们一起共同创造了</c>

00:37:10.898 --> 00:37:13.400 align:middle
<c.magenta>一个直接和相连的10英尺体验</c>

00:37:15.369 --> 00:37:18.672 align:middle
<c.magenta>而有了Universal Purchase</c>
<c.magenta>和Auto Download</c>

00:37:19.106 --> 00:37:21.909 align:middle
<c.magenta>你的客户将能够从未如此密切的</c>
<c.magenta>享受使用你的应用</c>

00:37:23.877 --> 00:37:27.314 align:middle
<c.magenta>我们也推出了一个全新的</c>
<c.magenta>Apple TV Remote应用</c>

00:37:27.381 --> 00:37:29.583 align:middle
<c.magenta>而且它已经被做成了一个种子</c>
<c.magenta>就请下载</c>

00:37:29.983 --> 00:37:31.218 align:middle
<c.magenta>并用它测试你的应用</c>

00:37:33.387 --> 00:37:36.623 align:middle
<c.magenta>而有了ReplayKit和</c>
<c.magenta>SpriteKit支持</c>

00:37:36.690 --> 00:37:38.091 align:middle
<c.magenta>且直接来自聚焦引擎</c>

00:37:39.726 --> 00:37:42.229 align:middle
<c.magenta>游戏体验更棒了</c>

00:37:44.097 --> 00:37:49.002 align:middle
<c.magenta>最后用户可以根据其喜好来设置</c>
<c.magenta>自己的系统外观</c>

00:37:50.637 --> 00:37:53.307 align:middle
<c.magenta>我们希望</c>
<c.magenta>你会就所见所闻而高兴</c>

00:37:54.341 --> 00:37:55.742 align:middle
<c.magenta>通过本周许多很棒的会话</c>

00:37:55.976 --> 00:37:58.378 align:middle
<c.magenta>你还可以学到更多</c>

00:37:59.746 --> 00:38:04.585 align:middle
<c.magenta>今年早些时候的 Apple</c>
<c.magenta>TV Tech Talk视频</c>

00:37:59.746 --> 00:38:04.585 align:middle
<c.magenta>今年早些时候的 Apple</c>
<c.magenta>TV Tech Talk视频</c>

00:38:05.018 --> 00:38:07.754 align:middle
<c.magenta>就指导你完成基础知识学习</c>
<c.magenta>非常有用</c>

00:38:09.089 --> 00:38:12.059 align:middle
<c.magenta>也可从developer.apple.com下载</c>

00:38:12.693 --> 00:38:16.864 align:middle
<c.magenta>当然所有这些信息</c>
<c.magenta>都被放在会话链接</c>

00:38:18.198 --> 00:38:19.032 align:middle
<c.magenta>最后</c>

00:38:19.466 --> 00:38:23.270 align:middle
<c.magenta>等不及要看到</c>
<c.magenta>你们为电视的未来所创作的产品了</c>

00:38:24.338 --> 00:38:27.174 align:middle
<c.magenta>非常感谢大家的光临</c>
<c.magenta>请享受其余会议</c>
