WEBVTT

00:00:19.353 --> 00:00:23.423
<c.magenta>SceneKit渲染的进展</c>

00:00:24.925 --> 00:00:25.826
<c.magenta>早上好</c>

00:00:28.996 --> 00:00:32.633
<c.magenta>欢迎来到</c>
<c.magenta>“SceneKit渲染的进展”</c>

00:00:33.634 --> 00:00:36.103
<c.magenta>我叫Amaury 很高兴在这里</c>

00:00:36.236 --> 00:00:39.273
<c.magenta>为大家讲解如何</c>
<c.magenta>让SceneKit再上一个台阶</c>

00:00:39.339 --> 00:00:40.741
<c.magenta>利用艺术图形状态</c>

00:00:42.176 --> 00:00:44.077
<c.magenta>所以我们今天会讲很多东西</c>

00:00:44.144 --> 00:00:46.647
<c.magenta>首先对SceneKit做一个简介</c>

00:00:46.713 --> 00:00:49.616
<c.magenta>在讨论渲染的新进展之前</c>

00:00:50.384 --> 00:00:55.422
<c.magenta>接下来Jean-Baptiste和Sebastien</c>
<c.magenta>会和我一起为大家演示一个很酷的例子</c>

00:00:55.489 --> 00:00:59.059
<c.magenta>来解释该例子是如何编写出来</c>
<c.magenta>并为大家展示所有新的性能</c>

00:00:59.159 --> 00:01:00.894
<c.magenta>比如全新的照相效果</c>

00:00:59.159 --> 00:01:00.894
<c.magenta>比如全新的照相效果</c>

00:01:01.395 --> 00:01:05.732
<c.magenta>最后 Nick会为我们讲解</c>
<c.magenta>Model I/O的基础</c>

00:01:07.367 --> 00:01:08.402
<c.magenta>简而言之</c>

00:01:09.937 --> 00:01:14.875
<c.magenta>如你所知 SceneKit是</c>
<c.magenta>GameKit下的高级API</c>

00:01:14.942 --> 00:01:16.877
<c.magenta>主要应用于3D图形</c>

00:01:17.578 --> 00:01:19.880
<c.magenta>它和2D图形的</c>
<c.magenta>Spritkit完美结合</c>

00:01:19.947 --> 00:01:23.183
<c.magenta>并且构建在Metal和</c>
<c.magenta>OpenGL之上</c>

00:01:24.084 --> 00:01:26.687
<c.magenta>你可以把SceneKit</c>
<c.magenta>应用于各种情况</c>

00:01:26.753 --> 00:01:28.655
<c.magenta>把屏幕上的图形进行分散</c>

00:01:29.223 --> 00:01:33.026
<c.magenta>仔细想会发现</c>
<c.magenta>它们被应用到很多领域</c>

00:01:34.228 --> 00:01:37.764
<c.magenta>比如 我们刚引进了</c>
<c.magenta>Swift Playgrounds</c>

00:01:38.298 --> 00:01:41.101
<c.magenta>SceneKit让其界面更为可视化</c>

00:01:41.168 --> 00:01:46.740
<c.magenta>帮助孩子们迈出学习编程的第一步</c>

00:01:48.308 --> 00:01:50.644
<c.magenta>在Xcode</c>
<c.magenta>我们用SceneKit建立了</c>

00:01:50.711 --> 00:01:53.947
<c.magenta>一个创新并极为有用的接口</c>

00:01:54.348 --> 00:01:56.884
<c.magenta>帮助你编写应用的视图结构</c>

00:01:58.352 --> 00:02:02.222
<c.magenta>在iBooks和iBooks Author里</c>
<c.magenta>人们可写出丰富的书本</c>

00:01:58.352 --> 00:02:02.222
<c.magenta>在iBooks和iBooks Author里</c>
<c.magenta>人们可写出丰富的书本</c>

00:02:02.289 --> 00:02:06.627
<c.magenta>利用增强的插图效果 并且是互动型的</c>

00:02:07.828 --> 00:02:10.097
<c.magenta>当然SceneKit也被用在游戏上</c>

00:02:11.498 --> 00:02:13.534
<c.magenta>最后 但不失其重要性的 谢谢你们</c>

00:02:14.034 --> 00:02:17.871
<c.magenta>你们为SceneKit和3D图形</c>
<c.magenta>找到了非常多的用户用例</c>

00:02:18.272 --> 00:02:22.075
<c.magenta>你们在app store里发布了</c>
<c.magenta>成千上万基于SceneKit的应用</c>

00:02:22.242 --> 00:02:23.076
<c.magenta>所以谢谢你们</c>

00:02:29.483 --> 00:02:33.854
<c.magenta>现在 如你所知 SceneKit</c>
<c.magenta>和系统紧密结合</c>

00:02:34.288 --> 00:02:36.924
<c.magenta>它和所有Apple技术无缝合作</c>

00:02:37.324 --> 00:02:40.060
<c.magenta>它充分利用macOS和iOS平台</c>

00:02:40.527 --> 00:02:42.529
<c.magenta>这两个平台已经问世多年</c>

00:02:43.630 --> 00:02:48.569
<c.magenta>在去年的WWDC上 我们还在</c>
<c.magenta>tvOS上引入了SceneKit</c>

00:02:49.870 --> 00:02:55.375
<c.magenta>我们在狐狸例子里所添加的</c>
<c.magenta>只是为游戏控制器加了两个端口</c>

00:02:55.642 --> 00:02:58.312
<c.magenta>就可以在大屏幕上玩了</c>

00:02:59.313 --> 00:03:02.249
<c.magenta>真的非常精彩 能看到同一款游戏</c>

00:02:59.313 --> 00:03:02.249
<c.magenta>真的非常精彩 能看到同一款游戏</c>

00:03:02.482 --> 00:03:06.353
<c.magenta>和代码能在macOS、iOS</c>
<c.magenta>和tvOS运行</c>

00:03:07.020 --> 00:03:10.924
<c.magenta>今年我们画了一个完整圆 让</c>
<c.magenta>SceneKit进入watchOS</c>

00:03:14.094 --> 00:03:14.928
<c.magenta>谢谢</c>

00:03:18.432 --> 00:03:22.269
<c.magenta>SceneKit应用到</c>
<c.magenta>watchOS是一个非常好的机会</c>

00:03:22.336 --> 00:03:24.605
<c.magenta>开始思考新互动</c>

00:03:24.671 --> 00:03:27.040
<c.magenta>以及在手腕上展现内容的方法</c>

00:03:27.841 --> 00:03:29.343
<c.magenta>如你所想象的</c>

00:03:30.310 --> 00:03:33.046
<c.magenta>在Apple Watch编程</c>
<c.magenta>有很多可讲的内容</c>

00:03:33.213 --> 00:03:35.315
<c.magenta>今天无法面面俱到</c>

00:03:35.616 --> 00:03:37.584
<c.magenta>但是我们有一个专门的演讲</c>

00:03:37.651 --> 00:03:40.888
<c.magenta>星期五的</c>
<c.magenta>“Apple Watch游戏技巧”</c>

00:03:41.288 --> 00:03:43.824
<c.magenta>你可以了解到更多可用功能</c>

00:03:43.891 --> 00:03:46.827
<c.magenta>如何利用SceneKit</c>
<c.magenta>SpriteKit和其他技术</c>

00:03:48.428 --> 00:03:50.631
<c.magenta>如果你是SceneKit新手</c>
<c.magenta>想学习更多</c>

00:03:50.697 --> 00:03:56.470
<c.magenta>可随时上网观看过去几年WWDC演讲</c>
<c.magenta>我们讲解过基本技巧</c>

00:03:56.570 --> 00:03:59.072
<c.magenta>也讲过SceneKit中</c>
<c.magenta>非常高级的功能</c>

00:04:00.641 --> 00:04:04.611
<c.magenta>好的 让我们开始</c>
<c.magenta>看看这个新的渲染技术</c>

00:04:05.646 --> 00:04:09.049
<c.magenta>今年 SceneKit把手动渲染</c>

00:04:09.116 --> 00:04:10.584
<c.magenta>交到了你们手中</c>

00:04:11.685 --> 00:04:14.087
<c.magenta>也就是说 编程者 你们大家</c>

00:04:14.154 --> 00:04:18.192
<c.magenta>可以在艺术作品和游戏中</c>
<c.magenta>取得惊人的图形效果</c>

00:04:19.625 --> 00:04:23.330
<c.magenta>这在SceneKits渲染能力里</c>
<c.magenta>是一个显著进步</c>

00:04:23.430 --> 00:04:24.965
<c.magenta>自从它问世以来</c>

00:04:25.532 --> 00:04:30.304
<c.magenta>我们在3D图形最新高级技巧的基础上</c>
<c.magenta>利用了先进的技术</c>

00:04:30.370 --> 00:04:33.540
<c.magenta>提供准确的渲染和基于物理着色</c>

00:04:35.275 --> 00:04:38.946
<c.magenta>现在 基于物理着色有一些要求</c>

00:04:39.146 --> 00:04:41.715
<c.magenta>首先从线性渲染开始</c>

00:04:43.083 --> 00:04:47.721
<c.magenta>这里是一个平滑的辐射图 从0到1</c>

00:04:47.788 --> 00:04:50.290
<c.magenta>如你所见 显示很完美</c>

00:04:51.124 --> 00:04:52.860
<c.magenta>直到你把它压缩</c>

00:04:52.926 --> 00:04:56.730
<c.magenta>想储存到8寸的磁盘光学映像里 比如</c>

00:04:57.464 --> 00:05:00.033
<c.magenta>可以看到 发生了光度弯曲</c>

00:04:57.464 --> 00:05:00.033
<c.magenta>可以看到 发生了光度弯曲</c>

00:05:00.133 --> 00:05:04.238
<c.magenta>这是因为我们的眼睛对于变化很敏感</c>

00:05:04.304 --> 00:05:05.472
<c.magenta>在深色的影响下</c>

00:05:06.473 --> 00:05:12.379
<c.magenta>通过伽马编码</c>
<c.magenta>可以给该暗圈函数指定更多的值</c>

00:05:13.914 --> 00:05:18.018
<c.magenta>比如 这里的图例显示了</c>

00:05:18.085 --> 00:05:22.389
<c.magenta>储存原始像素数据和</c>
<c.magenta>利用了伽马编码之后的不同</c>

00:05:24.558 --> 00:05:28.161
<c.magenta>现在的问题是当着色［听不清］</c>

00:05:28.228 --> 00:05:32.933
<c.magenta>所有的光信息和公式</c>
<c.magenta>都在一个线性空间表示</c>

00:05:34.234 --> 00:05:37.371
<c.magenta>所以在非线性管道中</c>

00:05:37.437 --> 00:05:40.741
<c.magenta>只存在鲜艳的颜色数据</c>
<c.magenta>在纹理上进行伽马编码后</c>

00:05:41.475 --> 00:05:44.444
<c.magenta>并且用线性公式进行处理</c>

00:05:44.511 --> 00:05:48.015
<c.magenta>产生的浓缩结果会被</c>
<c.magenta>写入某个纹理或帧缓存中</c>

00:05:48.882 --> 00:05:51.018
<c.magenta>如你所想 这是错误的</c>

00:05:52.019 --> 00:05:58.091
<c.magenta>为了最终的图片显示正确</c>
<c.magenta>所有的操作都需要有足够的空间</c>

00:05:59.760 --> 00:06:05.699
<c.magenta>作为一个演示例子</c>
<c.magenta>这是伽马空间内光照场景</c>

00:05:59.760 --> 00:06:05.699
<c.magenta>作为一个演示例子</c>
<c.magenta>这是伽马空间内光照场景</c>

00:06:06.466 --> 00:06:09.803
<c.magenta>这是同样的场景</c>
<c.magenta>以线性空间的着色显示</c>

00:06:10.971 --> 00:06:13.740
<c.magenta>如果比较两者 会发现光照如何消退</c>

00:06:13.974 --> 00:06:17.444
<c.magenta>以及边缘变得粗糙 在线性渲染里</c>

00:06:18.745 --> 00:06:22.916
<c.magenta>线性渲染对于基于物理的渲染十分关键</c>

00:06:22.983 --> 00:06:26.520
<c.magenta>它实际上被应用于</c>
<c.magenta>所有SceneKit光照模型</c>

00:06:26.587 --> 00:06:28.689
<c.magenta>因为从数学角度上很正确</c>

00:06:30.757 --> 00:06:35.062
<c.magenta>如你所知</c>
<c.magenta>颜色是今年WWDC的重要话题</c>

00:06:35.128 --> 00:06:39.032
<c.magenta>除了伽马纠正</c>

00:06:39.099 --> 00:06:42.769
<c.magenta>SceneKit［听不清］</c>
<c.magenta>自动管理颜色和线性渲染</c>

00:06:44.972 --> 00:06:45.973
<c.magenta>这代表了什么？</c>

00:06:46.473 --> 00:06:49.476
<c.magenta>它意味着指定给一个纹理的颜色配置</c>

00:06:49.543 --> 00:06:50.844
<c.magenta>现在将会［听不清］</c>

00:06:51.678 --> 00:06:54.948
<c.magenta>任何操作 从发生在图像从磁盘</c>

00:06:55.015 --> 00:06:57.918
<c.magenta>被加载 到传给系统那一刻</c>

00:06:57.985 --> 00:06:59.920
<c.magenta>可以显示在屏幕上</c>

00:06:59.987 --> 00:07:02.623
<c.magenta>我们会保持颜色数据的完整性</c>

00:06:59.987 --> 00:07:02.623
<c.magenta>我们会保持颜色数据的完整性</c>

00:07:04.057 --> 00:07:08.795
<c.magenta>基于SceneKit的应用</c>
<c.magenta>会产生高度的色彩准确性</c>

00:07:08.862 --> 00:07:11.298
<c.magenta>和某些专业照片编辑应用一样</c>

00:07:12.666 --> 00:07:16.336
<c.magenta>如今 如你所知</c>
<c.magenta>［听不清］地图和普通地图</c>

00:07:16.870 --> 00:07:21.375
<c.magenta>都不再显示被存储为色彩的原始数据</c>

00:07:21.775 --> 00:07:24.912
<c.magenta>SceneKit知道这一点</c>
<c.magenta>它不会为此类图像配色</c>

00:07:26.013 --> 00:07:29.149
<c.magenta>为了帮助你解决这一点</c>
<c.magenta>有一个全新的很棒的性能</c>

00:07:29.216 --> 00:07:32.986
<c.magenta>在Xcode 8资产目录里</c>
<c.magenta>就是纹理集合</c>

00:07:34.388 --> 00:07:40.227
<c.magenta>在纹理集合里 可以指定一个图像</c>
<c.magenta>显示色彩数据或者原始数据</c>

00:07:40.294 --> 00:07:44.731
<c.magenta>然后Xcode</c>
<c.magenta>可以自动把这些图像转换为</c>

00:07:44.798 --> 00:07:48.368
<c.magenta>CPU和GPU高效纹理格式</c>

00:07:49.269 --> 00:07:52.539
<c.magenta>关于这点 午饭后我们还有一个演讲</c>

00:07:52.606 --> 00:07:53.974
<c.magenta>“用广色域来工作”</c>

00:07:54.241 --> 00:07:56.910
<c.magenta>Metal团队将会讲解更多相关细节</c>

00:07:58.979 --> 00:08:04.218
<c.magenta>除了纹理 色彩管理也应用于色彩对象</c>

00:07:58.979 --> 00:08:04.218
<c.magenta>除了纹理 色彩管理也应用于色彩对象</c>

00:08:05.252 --> 00:08:08.121
<c.magenta>色彩组件不能再假定为sRGB</c>

00:08:08.889 --> 00:08:11.191
<c.magenta>如果要变成新建色彩</c>

00:08:11.258 --> 00:08:14.428
<c.magenta>使用正确的构造器非常重要</c>

00:08:15.495 --> 00:08:18.665
<c.magenta>这里展示了两个色彩对象</c>

00:08:19.032 --> 00:08:21.568
<c.magenta>一个叫Display P3</c>
<c.magenta>另一个叫sRGB</c>

00:08:21.902 --> 00:08:24.271
<c.magenta>它们是由同一个组件构建出来的</c>

00:08:26.173 --> 00:08:27.808
<c.magenta>当使用色彩选择器时</c>

00:08:27.875 --> 00:08:30.310
<c.magenta>请注意选择的色彩空间</c>

00:08:30.377 --> 00:08:33.780
<c.magenta>菜单上可以选择不同的色彩空间</c>

00:08:34.280 --> 00:08:38.684
<c.magenta>包括和设备无关的</c>
<c.magenta>比如Display P3和sRGB</c>

00:08:39.352 --> 00:08:42.222
<c.magenta>还有一个很方便的选项显示数值</c>

00:08:42.289 --> 00:08:44.892
<c.magenta>以浮点数显示 而不是整数</c>

00:08:44.958 --> 00:08:47.461
<c.magenta>这样它们可以方便地复制粘贴到代码中</c>

00:08:48.395 --> 00:08:50.998
<c.magenta>讲到这里 如你所知</c>

00:08:51.565 --> 00:08:53.867
<c.magenta>着色修改器是</c>
<c.magenta>SceneKit非常优秀的性能</c>

00:08:54.034 --> 00:08:57.004
<c.magenta>它允许自定义渲染</c>

00:08:58.005 --> 00:09:01.708
<c.magenta>如我所说 今年着色出现在线性空间</c>

00:08:58.005 --> 00:09:01.708
<c.magenta>如我所说 今年着色出现在线性空间</c>

00:09:02.376 --> 00:09:05.212
<c.magenta>所以你必须确保把色彩</c>

00:09:05.279 --> 00:09:08.148
<c.magenta>转换为线性扩展sRGB色彩空间</c>

00:09:08.549 --> 00:09:11.318
<c.magenta>在这些组件被用来［听不清］</c>

00:09:13.520 --> 00:09:16.323
<c.magenta>关于向后兼容性要注意几点</c>

00:09:18.892 --> 00:09:22.796
<c.magenta>线性渲染和色彩管理会自动启动</c>

00:09:22.863 --> 00:09:25.732
<c.magenta>当你把应用和</c>
<c.magenta>新的SDKs连接起来时</c>

00:09:26.333 --> 00:09:28.869
<c.magenta>启动不会产生性能下降</c>

00:09:29.002 --> 00:09:32.506
<c.magenta>但是会显著改变旧场景的外观</c>

00:09:32.940 --> 00:09:37.711
<c.magenta>举例说明 这是去年的演示</c>
<c.magenta>并没有使用线性渲染</c>

00:09:38.478 --> 00:09:41.582
<c.magenta>如果对其进行重组会变成这样</c>

00:09:42.716 --> 00:09:46.220
<c.magenta>当然 纹理 光照和阴影修改器</c>

00:09:46.286 --> 00:09:48.822
<c.magenta>可以用线性渲染重新进行改写</c>

00:09:49.523 --> 00:09:53.861
<c.magenta>但是如果想把应用部署到旧版本的系统</c>

00:09:53.927 --> 00:09:57.264
<c.magenta>或者出于某种原因</c>
<c.magenta>想在色彩管理中更新线性渲染</c>

00:09:57.731 --> 00:09:59.066
<c.magenta>有一个方法可以实现</c>

00:10:00.467 --> 00:10:04.071
<c.magenta>你可以通过指定一个关键字</c>

00:10:04.137 --> 00:10:05.839
<c.magenta>在应用的info.plist文件</c>

00:10:07.641 --> 00:10:10.210
<c.magenta>将会显示广域内容</c>

00:10:10.544 --> 00:10:13.714
<c.magenta>如你所知 广域色彩空间</c>

00:10:13.780 --> 00:10:17.851
<c.magenta>比如存在扩展sRGB</c>

00:10:17.918 --> 00:10:20.988
<c.magenta>对现代硬件设备来说非常重要</c>

00:10:22.723 --> 00:10:26.126
<c.magenta>新款带Retina显示的</c>
<c.magenta>iPad Pro和iMac</c>

00:10:26.193 --> 00:10:29.229
<c.magenta>有广域显示</c>
<c.magenta>SceneKit自动支持</c>

00:10:29.997 --> 00:10:35.068
<c.magenta>你只需要取出广域内容</c>
<c.magenta>比如纹理或色彩</c>

00:10:35.435 --> 00:10:38.572
<c.magenta>SceneKit可以透明化进入其中</c>

00:10:42.309 --> 00:10:46.747
<c.magenta>广域纹理和帧缓存</c>
<c.magenta>需要更多的内存存储该数据</c>

00:10:46.813 --> 00:10:49.983
<c.magenta>从而会带来更多的带宽消耗</c>

00:10:50.050 --> 00:10:52.286
<c.magenta>如果产生任何性能问题</c>

00:10:52.386 --> 00:10:56.390
<c.magenta>我们提供了一种重新上传的方法</c>
<c.magenta>［听不清］</c>

00:11:01.528 --> 00:11:04.464
<c.magenta>下面来看一下色域展示示例代码</c>

00:11:05.165 --> 00:11:08.402
<c.magenta>是和Cocoa和</c>
<c.magenta>Cocoa Touch团队合作编写</c>

00:11:09.236 --> 00:11:12.272
<c.magenta>它是一个基于同步的应用 允许</c>

00:11:12.406 --> 00:11:15.676
<c.magenta>可以在色域组件外观察</c>

00:11:15.742 --> 00:11:19.213
<c.magenta>这非常有用 因为在广域显示里</c>

00:11:19.279 --> 00:11:21.949
<c.magenta>你可以看到该显示情况</c>

00:11:22.049 --> 00:11:24.818
<c.magenta>因为你可以模拟一个非广域显示</c>

00:11:26.453 --> 00:11:29.122
<c.magenta>从而可以学习利用广域</c>

00:11:29.189 --> 00:11:35.062
<c.magenta>以及如何在色彩空间内转换色彩组件</c>

00:11:35.128 --> 00:11:37.130
<c.magenta>再次说明</c>
<c.magenta>今天下午我们会有一个精彩演讲</c>

00:11:38.398 --> 00:11:40.467
<c.magenta>也可以应用到准确渲染</c>

00:11:40.534 --> 00:11:44.271
<c.magenta>也是基于物理渲染的前提</c>

00:11:44.338 --> 00:11:45.572
<c.magenta>基于物理渲染</c>

00:11:45.639 --> 00:11:49.276
<c.magenta>什么是基于物理渲染 为什么要用它</c>

00:11:50.010 --> 00:11:53.714
<c.magenta>人们总是认为精细的场景</c>

00:11:53.780 --> 00:11:57.017
<c.magenta>是带有很多细节模块的场景</c>

00:11:57.284 --> 00:11:58.652
<c.magenta>的确是这样</c>

00:11:59.253 --> 00:12:02.322
<c.magenta>但是着色才能让对象有形</c>

00:11:59.253 --> 00:12:02.322
<c.magenta>但是着色才能让对象有形</c>

00:12:03.257 --> 00:12:06.793
<c.magenta>在屏幕上看到的</c>
<c.magenta>这幅图曾经是一组多边形</c>

00:12:07.694 --> 00:12:12.232
<c.magenta>着色是为屏幕上每个细节</c>
<c.magenta>找到正确色彩的过程</c>

00:12:12.466 --> 00:12:18.071
<c.magenta>所有的高亮 阴影和深度感</c>
<c.magenta>都是从着色而来</c>

00:12:19.940 --> 00:12:24.411
<c.magenta>着色就是那个神奇的操作</c>
<c.magenta>能够让场景栩栩如生</c>

00:12:25.412 --> 00:12:26.747
<c.magenta>工作原理是什么？</c>

00:12:27.381 --> 00:12:30.317
<c.magenta>首先有一个光源发出的光</c>

00:12:30.984 --> 00:12:33.086
<c.magenta>当光碰到对象</c>

00:12:33.153 --> 00:12:37.591
<c.magenta>会根据表面的属性跟物质发生相互作用</c>

00:12:37.658 --> 00:12:41.895
<c.magenta>光发生反射</c>
<c.magenta>进入人眼或本例中的一台相机</c>

00:12:43.797 --> 00:12:47.768
<c.magenta>光和物质之间的相互作用非常复杂</c>

00:12:48.368 --> 00:12:50.771
<c.magenta>多年来很多数学模型</c>

00:12:50.838 --> 00:12:53.373
<c.magenta>都在尝试对它进行最好的解释</c>

00:12:54.541 --> 00:12:58.679
<c.magenta>基于物理渲染是光传输的模拟</c>

00:12:58.745 --> 00:13:01.248
<c.magenta>基于这种数学模型之上</c>

00:12:58.745 --> 00:13:01.248
<c.magenta>基于这种数学模型之上</c>

00:13:01.315 --> 00:13:04.751
<c.magenta>它们考虑到了光和物质的物理性质</c>

00:13:05.385 --> 00:13:08.155
<c.magenta>但是 如你所知</c>
<c.magenta>SceneKit是高级API</c>

00:13:08.288 --> 00:13:12.092
<c.magenta>我们想让每个人</c>
<c.magenta>都从该全新光照模型受益</c>

00:13:12.693 --> 00:13:15.596
<c.magenta>所以我们公开了一个超为简单的API</c>

00:13:15.963 --> 00:13:19.333
<c.magenta>可以让你利用基于美术师们热衷的</c>
<c.magenta>物理渲染技术</c>

00:13:20.400 --> 00:13:24.371
<c.magenta>本次演讲结尾 你可以从该渲染</c>

00:13:24.438 --> 00:13:27.341
<c.magenta>也是标准渲染 变成基于物理渲染</c>

00:13:29.910 --> 00:13:34.081
<c.magenta>在SceneKit</c>
<c.magenta>我们从两个角度导出基于物理渲染</c>

00:13:34.615 --> 00:13:38.585
<c.magenta>首先 基于物理材料 以及</c>
<c.magenta>基于物理光照</c>

00:13:40.387 --> 00:13:43.457
<c.magenta>基于物理材料</c>

00:13:43.524 --> 00:13:45.292
<c.magenta>首先 基于物理材料</c>

00:13:47.160 --> 00:13:50.097
<c.magenta>这里描述了表面上的一点</c>

00:13:50.163 --> 00:13:53.166
<c.magenta>通常指示方向是空间</c>

00:13:54.334 --> 00:13:57.304
<c.magenta>当光照碰到该点 发生两种反射</c>

00:13:58.172 --> 00:14:00.707
<c.magenta>漫反射和镜面反射</c>

00:13:58.172 --> 00:14:00.707
<c.magenta>漫反射和镜面反射</c>

00:14:02.042 --> 00:14:04.444
<c.magenta>漫反射通过</c>

00:14:04.511 --> 00:14:06.280
<c.magenta>回应进入表面下面的光</c>

00:14:06.346 --> 00:14:09.316
<c.magenta>进行多次反射 并射向各个方向</c>

00:14:09.383 --> 00:14:10.617
<c.magenta>看上去均匀</c>

00:14:12.019 --> 00:14:16.924
<c.magenta>漫反射的色彩是对象的底色的反照率</c>

00:14:17.658 --> 00:14:20.928
<c.magenta>所以在SceneKit中</c>
<c.magenta>设计基于物理材料的接口时</c>

00:14:20.994 --> 00:14:23.664
<c.magenta>我们需要用到反照率映射图</c>

00:14:24.698 --> 00:14:27.801
<c.magenta>镜面反射不需要如此</c>

00:14:29.069 --> 00:14:32.906
<c.magenta>镜面反射由从表面弹回的光组成</c>

00:14:32.973 --> 00:14:35.375
<c.magenta>所以它的颜色是光源射线的颜色</c>

00:14:36.543 --> 00:14:38.245
<c.magenta>这是我们称作的立方体映射图</c>

00:14:38.312 --> 00:14:42.149
<c.magenta>这是六个空间的集合</c>

00:14:42.216 --> 00:14:44.351
<c.magenta>代表3D空间位置的周边环境</c>

00:14:45.619 --> 00:14:48.055
<c.magenta>当我们把一个全镜面对象</c>

00:14:48.121 --> 00:14:52.159
<c.magenta>放入该环境 可以看到它好比一个镜子</c>

00:14:52.893 --> 00:14:56.463
<c.magenta>我们来举一个更实际的例子 用塑料球</c>

00:14:57.264 --> 00:14:59.600
<c.magenta>可以看出 它不是一个完美的镜子</c>

00:15:00.000 --> 00:15:02.503
<c.magenta>中间部分反射很暗</c>

00:15:02.569 --> 00:15:06.039
<c.magenta>越向边缘靠近越亮</c>

00:15:06.440 --> 00:15:09.676
<c.magenta>实际上在高角度 所有的光都被反射</c>

00:15:11.111 --> 00:15:14.448
<c.magenta>不是所有材料都有相同的反射量</c>

00:15:14.915 --> 00:15:20.254
<c.magenta>上方是代表反射值的曲线</c>

00:15:20.320 --> 00:15:23.724
<c.magenta>从0到90度入射角的函数</c>

00:15:24.391 --> 00:15:26.760
<c.magenta>可以看到这些反射值</c>

00:15:26.827 --> 00:15:29.663
<c.magenta>从0到45度时几乎保持不变</c>

00:15:30.030 --> 00:15:33.934
<c.magenta>我们实际上可以利用该值重建整条曲线</c>

00:15:34.768 --> 00:15:36.803
<c.magenta>金子是一个很有意思的例子</c>

00:15:37.204 --> 00:15:40.040
<c.magenta>因为它有不同的反射值</c>

00:15:40.107 --> 00:15:42.242
<c.magenta>对红色 绿色和蓝色组件</c>

00:15:43.577 --> 00:15:46.513
<c.magenta>最后要注意的是 金属</c>

00:15:46.580 --> 00:15:51.185
<c.magenta>比如铝或金 反射值较高</c>

00:15:51.251 --> 00:15:56.356
<c.magenta>而非金属或绝缘体的反射值较低</c>

00:15:57.958 --> 00:16:01.061
<c.magenta>反射值的区别很重要</c>

00:15:57.958 --> 00:16:01.061
<c.magenta>反射值的区别很重要</c>

00:16:01.128 --> 00:16:02.329
<c.magenta>对于对象的最终显示</c>

00:16:02.829 --> 00:16:05.866
<c.magenta>所以在SceneKit中</c>
<c.magenta>我们想要公开一张金属性映射图</c>

00:16:06.400 --> 00:16:12.272
<c.magenta>显示对象的哪些部分是金属的</c>
<c.magenta>哪些不是</c>

00:16:13.841 --> 00:16:17.544
<c.magenta>所以除了不同的反射值以外</c>

00:16:17.945 --> 00:16:21.748
<c.magenta>要注意金属也会吸收表面之下的所有光</c>

00:16:21.815 --> 00:16:24.251
<c.magenta>而绝缘体将会发生散射</c>

00:16:24.651 --> 00:16:26.320
<c.magenta>两者的视觉效果</c>

00:16:27.654 --> 00:16:33.827
<c.magenta>是金属有广泛的镜面反射 没有漫反射</c>

00:16:33.894 --> 00:16:36.763
<c.magenta>绝缘体则有非常多的漫反射</c>

00:16:36.830 --> 00:16:40.901
<c.magenta>镜面反射几乎只能在高角度看到</c>

00:16:42.302 --> 00:16:47.441
<c.magenta>在SceneKit我们会重新使用</c>
<c.magenta>发散的Metal属性</c>

00:16:47.875 --> 00:16:53.447
<c.magenta>储存金属的反射值和绝缘体的反照率</c>

00:16:54.581 --> 00:16:58.051
<c.magenta>对于绝缘体的反射值</c>

00:16:58.118 --> 00:17:01.054
<c.magenta>我们只使用一个全局常量</c>

00:16:58.118 --> 00:17:01.054
<c.magenta>我们只使用一个全局常量</c>

00:17:03.257 --> 00:17:06.993
<c.magenta>并且重用金属属性diffuse</c>

00:17:07.060 --> 00:17:09.429
<c.magenta>我们从其他［听不清］取得</c>

00:17:10.597 --> 00:17:15.469
<c.magenta>最后我要讲的一点是表面粗糙度</c>

00:17:16.869 --> 00:17:19.940
<c.magenta>你们知道 没有完全光滑的表面</c>

00:17:20.473 --> 00:17:23.577
<c.magenta>从微观来看 总有小的凸起</c>

00:17:24.044 --> 00:17:26.713
<c.magenta>和裂纹将影响镜面反射</c>

00:17:27.981 --> 00:17:33.053
<c.magenta>微观表面越粗糙 反射越模糊</c>

00:17:33.120 --> 00:17:36.723
<c.magenta>因为光的反射线不再对齐</c>

00:17:37.558 --> 00:17:40.827
<c.magenta>所以在SceneKit里</c>
<c.magenta>也会提供粗糙度映射图</c>

00:17:40.894 --> 00:17:46.466
<c.magenta>将会显示表面的哪些部分是粗糙的</c>
<c.magenta>哪些部分是光滑的</c>

00:17:46.934 --> 00:17:48.936
<c.magenta>这是一张灰度图</c>

00:17:51.505 --> 00:17:56.910
<c.magenta>可以看出如何分开三个基本属性</c>

00:17:57.411 --> 00:17:59.713
<c.magenta>每一个属性都有明确的含义</c>

00:17:59.780 --> 00:18:03.851
<c.magenta>都是来自表面的属性</c>

00:17:59.780 --> 00:18:03.851
<c.magenta>都是来自表面的属性</c>

00:18:04.751 --> 00:18:08.255
<c.magenta>在SceneKit中</c>
<c.magenta>建立基于物理材料很简单</c>

00:18:08.722 --> 00:18:12.392
<c.magenta>新建一个材料 设置其光照模型</c>

00:18:12.459 --> 00:18:14.461
<c.magenta>为新的基于物理光照模型</c>

00:18:14.928 --> 00:18:16.530
<c.magenta>最后提供映射图</c>

00:18:17.831 --> 00:18:19.733
<c.magenta>来看一个例子</c>

00:18:19.800 --> 00:18:23.036
<c.magenta>从一台矿车开始 它只有一张漫反射映射图</c>

00:18:23.971 --> 00:18:25.706
<c.magenta>然后添加粗糙度映射图</c>

00:18:25.772 --> 00:18:27.908
<c.magenta>比如 看一下煤</c>

00:18:28.675 --> 00:18:32.479
<c.magenta>煤很粗糙 所以没有［听不清］</c>

00:18:33.647 --> 00:18:36.183
<c.magenta>随后我们加一个金属性映射图</c>

00:18:36.250 --> 00:18:39.186
<c.magenta>比如 看看铁轨和车轮</c>

00:18:41.622 --> 00:18:42.990
<c.magenta>再举一个例子</c>

00:18:43.056 --> 00:18:44.491
<c.magenta>这是一辆消防车</c>

00:18:45.259 --> 00:18:47.160
<c.magenta>我们还是从漫反射映射图开始</c>

00:18:47.895 --> 00:18:49.997
<c.magenta>现在添加金属性映射图</c>

00:18:51.565 --> 00:18:53.267
<c.magenta>最后是粗糙度映射图</c>

00:18:53.333 --> 00:18:56.170
<c.magenta>比如 看看轮胎</c>

00:18:59.139 --> 00:19:02.109
<c.magenta>我想要指出一点</c>

00:18:59.139 --> 00:19:02.109
<c.magenta>我想要指出一点</c>

00:19:02.809 --> 00:19:05.812
<c.magenta>对于金属度 粗糙度和环境闭合映射图</c>

00:19:06.280 --> 00:19:08.148
<c.magenta>请使用灰度图像</c>

00:19:08.582 --> 00:19:11.952
<c.magenta>使用红绿蓝色彩通道</c>

00:19:12.019 --> 00:19:13.687
<c.magenta>只会造成内存浪费</c>

00:19:13.754 --> 00:19:15.956
<c.magenta>如果还添加另一个函数 浪费更大</c>

00:19:16.924 --> 00:19:20.594
<c.magenta>此外 如果想在整个表面使用相同的值</c>

00:19:20.661 --> 00:19:22.162
<c.magenta>可以利用色彩对象</c>

00:19:22.729 --> 00:19:27.234
<c.magenta>或更好的方法 因为对于这些金属属性</c>
<c.magenta>支持数量已知</c>

00:19:29.169 --> 00:19:33.207
<c.magenta>我们看看如何建立简单而高级的API</c>

00:19:33.273 --> 00:19:35.475
<c.magenta>从而建立各种各样的材料</c>

00:19:36.109 --> 00:19:37.177
<c.magenta>这是同一个对象</c>

00:19:37.911 --> 00:19:40.581
<c.magenta>在一个轴上 改变粗糙度值</c>

00:19:40.914 --> 00:19:44.251
<c.magenta>在另一个轴上 改变粗糙度值</c>

00:19:46.520 --> 00:19:50.290
<c.magenta>我们曾经说过 会导出基于物理渲染</c>

00:19:51.091 --> 00:19:54.027
<c.magenta>来看一下基于物理光照</c>

00:19:54.895 --> 00:19:57.831
<c.magenta>在SceneKit光照分为三类</c>

00:19:58.966 --> 00:20:02.302
<c.magenta>首先是基于图像光照 IBL,</c>

00:19:58.966 --> 00:20:02.302
<c.magenta>首先是基于图像光照 IBL,</c>

00:20:02.936 --> 00:20:05.539
<c.magenta>然后是光照探测 最后是点光源</c>

00:20:06.773 --> 00:20:08.575
<c.magenta>基于图像关照</c>

00:20:10.444 --> 00:20:14.581
<c.magenta>我说过</c>
<c.magenta>可以利用一个立方体映射图描述</c>

00:20:14.781 --> 00:20:17.150
<c.magenta>3D空间位置的周边环境</c>

00:20:18.785 --> 00:20:20.621
<c.magenta>当对表面上的一点进行着色时</c>

00:20:20.687 --> 00:20:24.725
<c.magenta>我们可以把终点上方当做完结点</c>
<c.magenta>根据它的平均值</c>

00:20:25.125 --> 00:20:27.828
<c.magenta>和色彩的正确光照信息</c>

00:20:27.895 --> 00:20:29.863
<c.magenta>从立方体映射图中获取的</c>

00:20:30.731 --> 00:20:33.033
<c.magenta>举例说明 这里有一个对象</c>

00:20:33.100 --> 00:20:36.236
<c.magenta>只利用图像光照进行照明</c>

00:20:36.303 --> 00:20:37.771
<c.magenta>在该场景中没有光照</c>

00:20:38.272 --> 00:20:39.406
<c.magenta>你可看到根据立方体映射图的改变</c>

00:20:39.473 --> 00:20:42.876
<c.magenta>如何显著影响了对象的外观</c>

00:20:44.344 --> 00:20:47.648
<c.magenta>对场景内所有对象利用基于图像光照</c>

00:20:47.714 --> 00:20:50.684
<c.magenta>将会带来一致的观感 协调合作</c>

00:20:52.085 --> 00:20:55.322
<c.magenta>在SceneKit里</c>
<c.magenta>使用基于图像光照非常简单</c>

00:20:55.923 --> 00:20:59.226
<c.magenta>我们为场景添加一个</c>
<c.magenta>“lightingEnvironment”属性</c>

00:20:59.927 --> 00:21:02.329
<c.magenta>只需把它的内容设置为</c>
<c.magenta>一个立方体映射图</c>

00:20:59.927 --> 00:21:02.329
<c.magenta>只需把它的内容设置为</c>
<c.magenta>一个立方体映射图</c>

00:21:03.230 --> 00:21:06.533
<c.magenta>很棒的是它和background属性</c>
<c.magenta>完美结合</c>

00:21:07.801 --> 00:21:14.074
<c.magenta>比如 如果取一个对象</c>
<c.magenta>把其background</c>

00:21:14.141 --> 00:21:16.276
<c.magenta>和lightingEnvironment属性</c>
<c.magenta>都设为相同的图片</c>

00:21:16.343 --> 00:21:19.346
<c.magenta>就可以在上下文中显示一个对象</c>

00:21:21.348 --> 00:21:26.320
<c.magenta>立方体映射图</c>
<c.magenta>可以显示远处的环境和艺术</c>

00:21:27.487 --> 00:21:29.356
<c.magenta>当对表面上的一点进行着色时</c>

00:21:29.423 --> 00:21:32.960
<c.magenta>有可能这个环境不可见</c>

00:21:33.026 --> 00:21:37.097
<c.magenta>因为你正处于山洞</c>
<c.magenta>或它们之间有别的对象</c>

00:21:37.798 --> 00:21:41.268
<c.magenta>基于图像光照应该要考虑到这一点</c>

00:21:41.335 --> 00:21:44.705
<c.magenta>所以对封闭对象来说效果没那么好</c>

00:21:45.539 --> 00:21:48.542
<c.magenta>还好我们对此有解决方案 光照探测器</c>

00:21:49.543 --> 00:21:51.345
<c.magenta>光照探测器</c>

00:21:51.411 --> 00:21:55.349
<c.magenta>光照探测器是面向场景的局部光照</c>

00:21:55.415 --> 00:21:59.753
<c.magenta>它们捕捉局部漫反射</c>

00:22:00.420 --> 00:22:05.926
<c.magenta>当着色表面某点时</c>
<c.magenta>可以找到四个最近的光照探测器</c>

00:22:05.993 --> 00:22:08.929
<c.magenta>然后从这些探测器添加光照</c>

00:22:10.397 --> 00:22:13.567
<c.magenta>如我所说 光照探测器</c>
<c.magenta>它们是局部光源</c>

00:22:13.634 --> 00:22:15.536
<c.magenta>它们可以被认为是闭合的</c>

00:22:16.370 --> 00:22:18.405
<c.magenta>可以用这种方法实现</c>

00:22:18.472 --> 00:22:20.741
<c.magenta>它们重量轻 效率高</c>

00:22:21.341 --> 00:22:24.044
<c.magenta>可以在场景中放置很多光照探测器</c>

00:22:24.311 --> 00:22:25.812
<c.magenta>我们推荐这么做</c>

00:22:26.680 --> 00:22:30.484
<c.magenta>因为探测器越多 就越精细</c>

00:22:30.551 --> 00:22:33.287
<c.magenta>获取的局部光照信息就越准确</c>

00:22:34.855 --> 00:22:36.490
<c.magenta>建立光照探测器很简单</c>

00:22:37.090 --> 00:22:39.359
<c.magenta>新建光照 修改其类型</c>

00:22:40.093 --> 00:22:41.962
<c.magenta>可以编写代码实现</c>

00:22:42.396 --> 00:22:44.865
<c.magenta>也可在Xcode SceneKit</c>
<c.magenta>的场景编辑器里</c>

00:22:46.300 --> 00:22:51.505
<c.magenta>和立方体映射图一样</c>
<c.magenta>光照探测器捕捉静态光照信息</c>

00:22:52.005 --> 00:22:56.210
<c.magenta>该信息可以被很简单地传入探测器</c>

00:22:56.276 --> 00:22:59.513
<c.magenta>只需用到这个API的</c>
<c.magenta>Xcode场景编辑器</c>

00:23:00.781 --> 00:23:06.854
<c.magenta>我们看了如何利用IBL或光照探测器</c>

00:23:06.920 --> 00:23:09.256
<c.magenta>在场景中进行间接照明</c>

00:23:09.823 --> 00:23:12.125
<c.magenta>当然也需要直接照明</c>

00:23:12.192 --> 00:23:14.595
<c.magenta>还是可以访问任何别的光照</c>

00:23:15.762 --> 00:23:19.867
<c.magenta>如全向 定向或聚光灯</c>

00:23:19.933 --> 00:23:21.668
<c.magenta>都可以运用在基于物理渲染中</c>

00:23:21.735 --> 00:23:26.507
<c.magenta>实际上我们还有［听不清］</c>
<c.magenta>可以进行更好的设置</c>

00:23:28.075 --> 00:23:30.844
<c.magenta>比如</c>
<c.magenta>添加“intensity”属性</c>

00:23:31.879 --> 00:23:37.050
<c.magenta>光照强度通过每千瓦的流明数表示</c>

00:23:37.117 --> 00:23:39.553
<c.magenta>和灯泡是一个量级</c>

00:23:40.587 --> 00:23:45.392
<c.magenta>我们还添加了温度属性 单位是开尔文</c>

00:23:45.459 --> 00:23:47.361
<c.magenta>可以用该单位区分颜色</c>

00:23:48.795 --> 00:23:52.999
<c.magenta>一个新的性能</c>
<c.magenta>我们添加了新的光照种类 IES光照</c>

00:23:54.401 --> 00:23:59.306
<c.magenta>IES光照 即光度学光照</c>
<c.magenta>可以用于任何衰减形状</c>

00:24:00.574 --> 00:24:03.610
<c.magenta>当聚光灯或全向光</c>

00:24:03.677 --> 00:24:07.080
<c.magenta>有一个非常对称的衰减曲线</c>

00:24:07.147 --> 00:24:11.718
<c.magenta>IES光照可以更好积累剧场光照的行为</c>

00:24:12.653 --> 00:24:15.222
<c.magenta>比如可以照一个锥形</c>

00:24:15.289 --> 00:24:16.857
<c.magenta>也可以照一个阴影</c>

00:24:17.391 --> 00:24:19.726
<c.magenta>如此种种 根据光源的形状</c>

00:24:20.794 --> 00:24:24.498
<c.magenta>在SceneKit里</c>
<c.magenta>建立光度学光照很简单</c>

00:24:24.865 --> 00:24:26.300
<c.magenta>同样 新建光照</c>

00:24:26.366 --> 00:24:27.568
<c.magenta>修改类型属性</c>

00:24:28.402 --> 00:24:32.573
<c.magenta>最后提供一个URL 放入配置文件中</c>

00:24:32.639 --> 00:24:36.810
<c.magenta>可以比如 从生产商网站上直接下载</c>

00:24:38.812 --> 00:24:43.517
<c.magenta>快速复习一下</c>
<c.magenta>我们看到在SceneKit中</c>

00:24:43.584 --> 00:24:45.953
<c.magenta>新建基于物理材料多么简单</c>

00:24:46.019 --> 00:24:50.190
<c.magenta>所有这些属性都是</c>
<c.magenta>从表面属性中衍生出来</c>

00:24:50.257 --> 00:24:52.392
<c.magenta>非常容易理解</c>

00:24:52.459 --> 00:24:56.096
<c.magenta>以及如何利用光照在</c>
<c.magenta>基于物理的材料之上</c>

00:24:57.397 --> 00:25:01.969
<c.magenta>请欢迎Jean-Baptiste</c>
<c.magenta>和Sebastien做精彩的演示</c>

00:24:57.397 --> 00:25:01.969
<c.magenta>请欢迎Jean-Baptiste</c>
<c.magenta>和Sebastien做精彩的演示</c>

00:25:04.104 --> 00:25:05.205
<c.magenta>谢谢你 Amaury</c>

00:25:05.272 --> 00:25:10.811
<c.magenta>为大家做了关于SceneKit的</c>
<c.magenta>全新渲染技术的演讲</c>

00:25:12.746 --> 00:25:16.950
<c.magenta>我们在实际操作中看一下</c>
<c.magenta>Xcode场景编辑器</c>

00:25:17.718 --> 00:25:21.154
<c.magenta>如大家所见</c>
<c.magenta>Amaury演示的几乎一切</c>

00:25:21.221 --> 00:25:26.760
<c.magenta>都可以在Xcode</c>
<c.magenta>场景编辑器里直接可用</c>

00:25:27.961 --> 00:25:33.333
<c.magenta>可以调整属性 实时观察结果</c>

00:25:34.067 --> 00:25:40.908
<c.magenta>这里有一个很简单的场景</c>
<c.magenta>卡车上只有一个光照</c>

00:25:41.608 --> 00:25:45.112
<c.magenta>打开材料检查器</c>

00:25:47.314 --> 00:25:50.083
<c.magenta>该对象只有两个材料</c>

00:25:50.717 --> 00:25:53.120
<c.magenta>一个车身 一个配件 等等</c>

00:25:53.187 --> 00:25:55.489
<c.magenta>选中这两个材料</c>

00:25:56.623 --> 00:25:58.926
<c.magenta>继续采用布林光照模型</c>

00:25:58.992 --> 00:26:01.862
<c.magenta>切换到基于物理光照模型</c>

00:25:58.992 --> 00:26:01.862
<c.magenta>切换到基于物理光照模型</c>

00:26:01.929 --> 00:26:05.966
<c.magenta>把两个材料设成金属</c>

00:26:07.167 --> 00:26:09.102
<c.magenta>可以看到有一个问题</c>

00:26:09.169 --> 00:26:13.140
<c.magenta>因为我们没看到环境反射</c>

00:26:13.540 --> 00:26:17.110
<c.magenta>打开场景检查器</c>

00:26:18.312 --> 00:26:20.781
<c.magenta>我们必须要为项目设置光照环境</c>

00:26:21.448 --> 00:26:24.218
<c.magenta>为此我要使用立方体映射图</c>

00:26:25.719 --> 00:26:30.290
<c.magenta>比如 该停车场立方体映射图</c>

00:26:33.160 --> 00:26:34.494
<c.magenta>作为光照环境</c>

00:26:41.768 --> 00:26:45.138
<c.magenta>接下来将集中讲解这三个主要的</c>

00:26:45.205 --> 00:26:47.241
<c.magenta>基于物理光照模型的属性</c>

00:26:48.208 --> 00:26:50.410
<c.magenta>现在来看粗糙度值</c>

00:26:51.445 --> 00:26:54.982
<c.magenta>粗糙度显示表面有多光滑</c>

00:26:55.182 --> 00:26:58.719
<c.magenta>可以看到</c>

00:27:00.554 --> 00:27:05.559
<c.magenta>表面越粗糙 显示越模糊</c>

00:27:06.994 --> 00:27:10.831
<c.magenta>如果把粗糙度值调到近1</c>

00:27:12.833 --> 00:27:14.568
<c.magenta>反射很模糊</c>

00:27:14.635 --> 00:27:17.604
<c.magenta>当值到达1时 几乎没有反射</c>

00:27:20.474 --> 00:27:24.645
<c.magenta>如果调回0 表面就非常光滑</c>

00:27:27.881 --> 00:27:30.651
<c.magenta>如你所见 一切</c>

00:27:30.717 --> 00:27:33.287
<c.magenta>整个环境都在金属里反射</c>

00:27:36.290 --> 00:27:40.661
<c.magenta>我只用一个常量值代表粗糙度</c>

00:27:41.662 --> 00:27:46.667
<c.magenta>然后为对象的每一个部分指定一个值</c>

00:27:46.733 --> 00:27:48.802
<c.magenta>因此我需要一张粗糙度映射图</c>

00:27:49.136 --> 00:27:51.271
<c.magenta>为车体提供一张粗糙度映射图</c>

00:27:59.847 --> 00:28:01.748
<c.magenta>以及一张配件粗糙度映射图</c>

00:27:59.847 --> 00:28:01.748
<c.magenta>以及一张配件粗糙度映射图</c>

00:28:02.449 --> 00:28:05.219
<c.magenta>对于金属度也是一样操作</c>

00:28:05.285 --> 00:28:08.856
<c.magenta>我们需要指定对象的哪些部分是金属</c>
<c.magenta>哪些不是</c>

00:28:08.922 --> 00:28:10.858
<c.magenta>所以我们需要提供金属度映射图</c>

00:28:11.291 --> 00:28:15.696
<c.magenta>设定配件金属度映射图</c>

00:28:17.698 --> 00:28:18.599
<c.magenta>还有不同的图</c>

00:28:22.803 --> 00:28:23.670
<c.magenta>给车体</c>

00:28:24.404 --> 00:28:29.076
<c.magenta>如你所见 对象的车体部分是非金属</c>

00:28:29.142 --> 00:28:33.847
<c.magenta>前面的散热器格则完全是金属</c>

00:28:38.619 --> 00:28:40.354
<c.magenta>最后是添加反照率</c>

00:28:49.296 --> 00:28:50.197
<c.magenta>就完成了</c>

00:28:55.335 --> 00:28:59.072
<c.magenta>就这样 我们为该卡车进行了</c>
<c.magenta>完整的基于物理渲染</c>

00:28:59.139 --> 00:29:03.577
<c.magenta>现在切换到场景编辑器</c>
<c.magenta>修改立方体映射图</c>

00:28:59.139 --> 00:29:03.577
<c.magenta>现在切换到场景编辑器</c>
<c.magenta>修改立方体映射图</c>

00:29:04.211 --> 00:29:08.749
<c.magenta>比如</c>
<c.magenta>这个都是树的光照环境的立方体地图</c>

00:29:09.216 --> 00:29:10.784
<c.magenta>可以设定为背景</c>

00:29:13.554 --> 00:29:14.388
<c.magenta>就这样</c>

00:29:15.222 --> 00:29:18.025
<c.magenta>如你所見</c>

00:29:18.091 --> 00:29:22.963
<c.magenta>新SceneKit场景细节的</c>
<c.magenta>使用十分简单</c>

00:29:23.330 --> 00:29:26.867
<c.magenta>为了说明这种渲染操作</c>

00:29:26.934 --> 00:29:30.504
<c.magenta>我们编写了一个很酷的演示</c>
<c.magenta>现在放给大家</c>

00:29:31.872 --> 00:29:34.241
<c.magenta>Sebastien将进行讲解</c>

00:29:34.741 --> 00:29:35.576
<c.magenta>大家好</c>

00:29:38.145 --> 00:29:39.179
<c.magenta>谢谢</c>

00:29:40.647 --> 00:29:44.184
<c.magenta>很高兴为大家介绍</c>
<c.magenta>今年的新的毛茸茸朋友</c>

00:29:44.451 --> 00:29:45.986
<c.magenta>Bub Bub是一头獾</c>

00:29:46.086 --> 00:29:47.487
<c.magenta>它开着一台采矿车</c>

00:29:47.921 --> 00:29:52.292
<c.magenta>它要采集珠宝 用于加速</c>

00:29:54.394 --> 00:29:57.331
<c.magenta>你看到的所有场景都采用了新的</c>
<c.magenta>SceneKit渲染技术</c>

00:29:58.332 --> 00:30:01.268
<c.magenta>所有的材料都是基于物理 光照也是</c>

00:29:58.332 --> 00:30:01.268
<c.magenta>所有的材料都是基于物理 光照也是</c>

00:30:02.202 --> 00:30:04.338
<c.magenta>我们还采用了平常的</c>

00:30:05.038 --> 00:30:11.845
<c.magenta>SceneKit的属性</c>
<c.magenta>比如动作 动画</c>

00:30:11.912 --> 00:30:15.082
<c.magenta>和以前有的对象</c>

00:30:17.251 --> 00:30:21.555
<c.magenta>这是Swift应用 可在macOS</c>
<c.magenta>iOS和tvOS上运行</c>

00:30:22.689 --> 00:30:27.394
<c.magenta>都完全用Swift编写</c>
<c.magenta>大概有700行的代码</c>

00:30:28.462 --> 00:30:31.331
<c.magenta>沿着轨道我们安置了光照探测器</c>

00:30:31.798 --> 00:30:34.835
<c.magenta>考虑到局部照明的改变</c>

00:30:36.036 --> 00:30:40.674
<c.magenta>请注意光照改变 当进入山洞或隧道时</c>

00:30:41.942 --> 00:30:48.949
<c.magenta>还加入了新的特效 比如运动模糊</c>

00:30:49.283 --> 00:30:53.220
<c.magenta>当Bub像这样抓到一个加速奖品时</c>
<c.magenta>就可以看到</c>

00:30:55.622 --> 00:30:59.793
<c.magenta>我们有一个HGI相机</c>
<c.magenta>这就是为什么光照发生改变</c>

00:30:59.860 --> 00:31:02.896
<c.magenta>当有亮光或环境改变时</c>

00:30:59.860 --> 00:31:02.896
<c.magenta>当有亮光或环境改变时</c>

00:31:03.931 --> 00:31:08.101
<c.magenta>我们还采用IDL（交互式数据语言）</c>
<c.magenta>编写光照环境</c>

00:31:09.469 --> 00:31:13.006
<c.magenta>还有一些新的 我们喜欢的运动模糊</c>

00:31:14.274 --> 00:31:18.645
<c.magenta>当有亮光时 会有绽放效果</c>

00:31:20.781 --> 00:31:23.951
<c.magenta>所有的材料 你所看到的</c>
<c.magenta>都完全是PBR效果</c>

00:31:24.384 --> 00:31:26.553
<c.magenta>对水晶是全自由反射</c>

00:31:26.620 --> 00:31:29.423
<c.magenta>对所有的奖品和宝石也是如此</c>

00:31:30.724 --> 00:31:32.492
<c.magenta>在这里又看到了照明变化</c>

00:31:34.094 --> 00:31:36.964
<c.magenta>色调映射实现了这一切 谢谢</c>

00:31:42.135 --> 00:31:43.770
<c.magenta>我们现在来看幻灯片</c>

00:31:45.172 --> 00:31:47.040
<c.magenta>我会再讲解一些关于这个演示的内容</c>

00:31:48.141 --> 00:31:52.346
<c.magenta>首先 今年我们十分高兴告诉大家的是</c>

00:31:52.412 --> 00:31:54.948
<c.magenta>和往年一样 该演示是一个简单代码</c>

00:31:55.382 --> 00:31:57.784
<c.magenta>是的 谢谢</c>

00:32:00.187 --> 00:32:04.358
<c.magenta>大家可以在开发者网站上下载所有代码</c>

00:32:04.625 --> 00:32:08.896
<c.magenta>调试它 检查场景代码</c>
<c.magenta>看我们如何编写</c>

00:32:09.129 --> 00:32:12.065
<c.magenta>大约700行的Swift代码</c>

00:32:12.132 --> 00:32:16.003
<c.magenta>我们认为代码很容易理解</c>
<c.magenta>希望你们能够欣赏所见</c>

00:32:16.069 --> 00:32:18.572
<c.magenta>并从中学到一些东西</c>

00:32:20.174 --> 00:32:25.679
<c.magenta>今年我们决定 关于演示</c>
<c.magenta>我们和美术师们进行了讨论</c>

00:32:26.380 --> 00:32:32.653
<c.magenta>我们拟定了一些草稿</c>
<c.magenta>考虑已有的设计理念</c>

00:32:33.353 --> 00:32:36.990
<c.magenta>当我们就设计理念和流程达成一致时</c>

00:32:37.057 --> 00:32:39.860
<c.magenta>美术师开始构建模型世界</c>

00:32:40.360 --> 00:32:44.898
<c.magenta>这是一个互动的过程 我们非常需要</c>

00:32:45.165 --> 00:32:48.035
<c.magenta>能够在模型正在构建时取得其信息</c>

00:32:48.101 --> 00:32:52.940
<c.magenta>并马上开始编程</c>
<c.magenta>而不用等待最终的资产</c>

00:32:54.107 --> 00:32:56.043
<c.magenta>所以在SceneKit中</c>
<c.magenta>我们有一个自定义工具</c>

00:32:56.109 --> 00:33:00.747
<c.magenta>在命令行工具里</c>
<c.magenta>充分利用SceneKit的强大</c>

00:32:56.109 --> 00:33:00.747
<c.magenta>在命令行工具里</c>
<c.magenta>充分利用SceneKit的强大</c>

00:33:01.215 --> 00:33:06.687
<c.magenta>为了采用DAE文件里的工具</c>
<c.magenta>单位转换为米</c>

00:33:06.753 --> 00:33:09.923
<c.magenta>且它们可在场景里自动放置光照探测器</c>

00:33:09.990 --> 00:33:11.792
<c.magenta>因为有200多个光照探测器</c>

00:33:11.859 --> 00:33:16.530
<c.magenta>我们不想每一次场景转换时</c>
<c.magenta>需要手动安置它们</c>

00:33:19.633 --> 00:33:21.802
<c.magenta>我们采用了基于图像光照</c>

00:33:22.202 --> 00:33:25.239
<c.magenta>所以我们有立方体映射图作为背景图片</c>

00:33:25.305 --> 00:33:27.808
<c.magenta>另一张立方体映射图作为光照环境</c>

00:33:27.875 --> 00:33:30.310
<c.magenta>我们采用了光照环境添加反射</c>

00:33:30.377 --> 00:33:32.713
<c.magenta>如你所见 对于户外场景效果非常好</c>

00:33:34.648 --> 00:33:36.483
<c.magenta>我们还采用了光照探测器</c>

00:33:36.550 --> 00:33:40.087
<c.magenta>它们显示在Xcode当中</c>
<c.magenta>你可以看到它们</c>

00:33:40.354 --> 00:33:41.822
<c.magenta>我们对它们进行了高亮显示</c>

00:33:41.889 --> 00:33:44.625
<c.magenta>可以看到只从这个视图上就已经有</c>
<c.magenta>很多光照探测器</c>

00:33:44.691 --> 00:33:46.994
<c.magenta>可以想象整个场景中用了多少</c>

00:33:47.594 --> 00:33:52.399
<c.magenta>自定义工具把它们放入环境 开始计算</c>

00:33:53.300 --> 00:33:55.402
<c.magenta>也可以在Xcode中手动实现</c>

00:33:55.702 --> 00:33:59.573
<c.magenta>但是 当然 光照探测器用的越多</c>
<c.magenta>就会越沉闷</c>

00:34:00.440 --> 00:34:01.542
<c.magenta>它对室内场景很重要</c>

00:34:01.608 --> 00:34:05.879
<c.magenta>但它也为户外场景视图</c>
<c.magenta>添加了很好的触摸效果</c>

00:34:05.946 --> 00:34:08.916
<c.magenta>来检测场景中的微小变化</c>

00:34:11.217 --> 00:34:13.853
<c.magenta>我们还对室内场景添加了光照映射图</c>

00:34:13.920 --> 00:34:17.623
<c.magenta>因为它覆盖了光照环境</c>

00:34:17.690 --> 00:34:21.094
<c.magenta>这对山洞非常重要</c>
<c.magenta>因为光照在山洞里非常不同</c>

00:34:21.161 --> 00:34:23.730
<c.magenta>我们采用探测器和光照映射图</c>

00:34:23.797 --> 00:34:26.567
<c.magenta>在该场景中改变了光照和氛围</c>

00:34:28.034 --> 00:34:32.371
<c.magenta>当然我们也采用了正常的映射图</c>
<c.magenta>为模型添加细节</c>

00:34:33.639 --> 00:34:36.710
<c.magenta>我们还采用了环境闭合映射图</c>

00:34:36.777 --> 00:34:40.880
<c.magenta>产生效果更好的光照视图和渲染</c>

00:34:42.815 --> 00:34:45.918
<c.magenta>我们采用了一个点光源来模拟太阳</c>

00:34:46.186 --> 00:34:48.021
<c.magenta>在场景中天空的高处</c>

00:34:48.088 --> 00:34:51.891
<c.magenta>我们利用它建立动态阴影</c>
<c.magenta>并加强全局光照</c>

00:34:54.293 --> 00:34:59.399
<c.magenta>所有在演示中看到的材料都是</c>
<c.magenta>100%的基于物理材料</c>

00:35:00.067 --> 00:35:05.205
<c.magenta>所以有椰子树在环境反射下的逼真效果</c>
<c.magenta>水晶也是如此</c>

00:35:06.073 --> 00:35:09.076
<c.magenta>讲到水晶</c>
<c.magenta>这是我们编写非常简单的材料</c>

00:35:09.476 --> 00:35:12.779
<c.magenta>它没有纹理映射 创建非常简单</c>

00:35:13.180 --> 00:35:16.183
<c.magenta>它是全金属 完全没有粗糙度</c>

00:35:16.450 --> 00:35:18.185
<c.magenta>只是一个漫反射色彩</c>

00:35:18.418 --> 00:35:21.088
<c.magenta>所以它是创建宝石的非常好的方法</c>

00:35:21.154 --> 00:35:23.257
<c.magenta>宝石几乎对环境全反射</c>

00:35:24.491 --> 00:35:27.661
<c.magenta>光谱另一端 可以看到这座塔</c>

00:35:27.728 --> 00:35:32.533
<c.magenta>该对象既有金属部分又有非金属部分</c>

00:35:32.699 --> 00:35:38.105
<c.magenta>采用金属度 粗糙度映射图</c>
<c.magenta>和纹理映射图来创建它</c>

00:35:38.672 --> 00:35:42.576
<c.magenta>如你所见 我们还是在普通映射图上</c>
<c.magenta>采用漫反射色彩来添加细节</c>

00:35:45.078 --> 00:35:48.815
<c.magenta>基本上该演示使用了</c>
<c.magenta>所有SceneKit的新功能</c>

00:35:49.449 --> 00:35:54.087
<c.magenta>基于物理着色 所有材料和</c>
<c.magenta>光照的SceneKit API</c>

00:35:54.154 --> 00:35:55.856
<c.magenta>我们采用了Xcode集成</c>

00:35:56.623 --> 00:36:01.228
<c.magenta>以及为流程新建的自定义工具</c>

00:35:56.623 --> 00:36:01.228
<c.magenta>以及为流程新建的自定义工具</c>

00:36:01.628 --> 00:36:04.965
<c.magenta>我们认为这是今年新特性的</c>
<c.magenta>非常精彩的展示</c>

00:36:05.032 --> 00:36:08.035
<c.magenta>也是非常好的示例代码</c>
<c.magenta>能让大家学到新知识</c>

00:36:08.101 --> 00:36:09.837
<c.magenta>希望你们喜欢</c>

00:36:12.039 --> 00:36:13.073
<c.magenta>谢谢</c>

00:36:17.377 --> 00:36:19.580
<c.magenta>如你们所见</c>

00:36:19.646 --> 00:36:24.184
<c.magenta>今年我们对材料和光照进行了重大升级</c>

00:36:24.718 --> 00:36:28.121
<c.magenta>我们也因此必须改变相机的表现</c>

00:36:28.188 --> 00:36:30.624
<c.magenta>我们已经有了优秀的材料和光照</c>

00:36:31.291 --> 00:36:32.926
<c.magenta>我们也需要更好的相机</c>

00:36:33.594 --> 00:36:37.397
<c.magenta>现在我们了现实光照</c>

00:36:37.464 --> 00:36:40.934
<c.magenta>我们需要有一个HDR相机</c>
<c.magenta>或高动态范围</c>

00:36:41.802 --> 00:36:44.972
<c.magenta>因为普通的相机是低动态范围</c>

00:36:45.272 --> 00:36:46.707
<c.magenta>是每组件8比特</c>

00:36:46.773 --> 00:36:49.176
<c.magenta>我们采用浮点组件</c>

00:36:49.243 --> 00:36:54.681
<c.magenta>所以可以有非常亮的光照</c>
<c.magenta>比如蜡烛或灯泡</c>

00:36:54.748 --> 00:36:58.552
<c.magenta>还可以有比如说 太阳</c>
<c.magenta>是非常非常亮的光照</c>

00:36:59.152 --> 00:37:00.754
<c.magenta>这样形成了非常高动态范围</c>

00:36:59.152 --> 00:37:00.754
<c.magenta>这样形成了非常高动态范围</c>

00:37:00.821 --> 00:37:04.358
<c.magenta>需要对屏幕上的动态范围进行重映射</c>

00:37:04.925 --> 00:37:06.527
<c.magenta>我们采用色调映射</c>

00:37:06.593 --> 00:37:10.163
<c.magenta>色调映射是把部分渲染重映射</c>

00:37:10.230 --> 00:37:12.399
<c.magenta>到低设置设备</c>

00:37:14.835 --> 00:37:16.703
<c.magenta>所以我们需要启用HDR相机</c>

00:37:16.770 --> 00:37:20.574
<c.magenta>它不是默认设置里自动设好的</c>
<c.magenta>可以在API或者Xcode里设置</c>

00:37:21.808 --> 00:37:23.210
<c.magenta>可以调试色调映射</c>

00:37:23.277 --> 00:37:25.279
<c.magenta>可以改变灰点 白点</c>

00:37:25.445 --> 00:37:27.681
<c.magenta>以及曝光的范围</c>

00:37:28.015 --> 00:37:30.384
<c.magenta>还可以固定曝光偏移</c>

00:37:30.484 --> 00:37:33.654
<c.magenta>举例说明 这个场景显示得很好</c>

00:37:33.720 --> 00:37:38.692
<c.magenta>但是你可以进行曝光不足渲染</c>
<c.magenta>低调显示 也可以过度曝光</c>

00:37:38.759 --> 00:37:41.094
<c.magenta>只需要改变偏移值 很简单</c>

00:37:43.263 --> 00:37:46.900
<c.magenta>因为有HDR相机</c>
<c.magenta>我们还添加了很棒的视觉效果</c>

00:37:47.334 --> 00:37:49.269
<c.magenta>首先是绽放效果</c>

00:37:49.703 --> 00:37:53.073
<c.magenta>绽放是模拟很强的光照造成的刺眼效果</c>

00:37:53.340 --> 00:37:55.075
<c.magenta>来自场景里或反射</c>

00:37:55.676 --> 00:38:00.581
<c.magenta>可以通过散开</c>

00:37:55.676 --> 00:38:00.581
<c.magenta>可以通过散开</c>

00:38:00.647 --> 00:38:02.482
<c.magenta>光照附近的放射像素</c>

00:38:02.749 --> 00:38:04.785
<c.magenta>在这个例子可以看到 非常好的效果</c>

00:38:04.852 --> 00:38:09.723
<c.magenta>可以看看在塔顶上的反射绽放效果</c>

00:38:10.457 --> 00:38:15.295
<c.magenta>这是一种很好的方法</c>
<c.magenta>使光照附近的像素晕开</c>

00:38:16.296 --> 00:38:18.699
<c.magenta>让渲染润色不少</c>

00:38:21.702 --> 00:38:23.937
<c.magenta>接着我们添加了运动模糊</c>
<c.magenta>已经在演示中看到了</c>

00:38:24.671 --> 00:38:26.139
<c.magenta>它让相机运动变得平滑</c>

00:38:27.007 --> 00:38:30.210
<c.magenta>如果把运动模糊加入整个场景</c>

00:38:30.277 --> 00:38:31.111
<c.magenta>就变成这个样子</c>

00:38:31.211 --> 00:38:34.047
<c.magenta>有时我们并不想让所有对象都模糊</c>

00:38:34.114 --> 00:38:39.286
<c.magenta>比如 我想让獾和矿车显示清晰利落</c>

00:38:39.686 --> 00:38:45.926
<c.magenta>所以有一个新API</c>
<c.magenta>可以从运动模糊中排出某些对象</c>

00:38:46.493 --> 00:38:50.430
<c.magenta>结果带来目标对象显示清晰利落的效果</c>

00:38:53.534 --> 00:38:59.806
<c.magenta>今年我们在现实生活相机中</c>
<c.magenta>加了几个变化</c>

00:39:00.440 --> 00:39:02.142
<c.magenta>首先是渐晕</c>

00:39:02.442 --> 00:39:07.181
<c.magenta>渐晕是现实生活镜头的误差</c>

00:39:07.247 --> 00:39:09.816
<c.magenta>在图像角落上形成阴影</c>

00:39:10.417 --> 00:39:14.988
<c.magenta>所以你可以把这张图像换到这张</c>

00:39:15.055 --> 00:39:18.091
<c.magenta>也可以改变环境对象 把滤镜</c>

00:39:18.158 --> 00:39:21.361
<c.magenta>从图像中间调到图像边缘</c>

00:39:22.396 --> 00:39:26.633
<c.magenta>今年模拟的另一个误差是彩色边纹</c>

00:39:26.767 --> 00:39:30.337
<c.magenta>彩色边纹是实际镜头中发生的折射</c>

00:39:30.404 --> 00:39:32.005
<c.magenta>实际镜头的玻璃上</c>

00:39:32.706 --> 00:39:39.613
<c.magenta>所以它会在渲染中产生</c>
<c.magenta>光照的紫红色和黄褐色阴影</c>

00:39:39.680 --> 00:39:41.248
<c.magenta>就会看到这个样子变成这个样子</c>

00:39:41.315 --> 00:39:42.850
<c.magenta>这个例子很极端</c>

00:39:43.083 --> 00:39:45.485
<c.magenta>可以更加温和细致 取得好的效果</c>

00:39:47.521 --> 00:39:50.858
<c.magenta>我们还加入了一个</c>
<c.magenta>可以改变场景氛围的好办法</c>

00:39:50.924 --> 00:39:52.059
<c.magenta>就是色彩校正</c>

00:39:52.326 --> 00:39:56.263
<c.magenta>可以改变饱和度 达到几乎黑白效果</c>

00:39:56.330 --> 00:39:58.065
<c.magenta>如果你想 也可以让色彩更夸张</c>

00:39:58.131 --> 00:40:00.634
<c.magenta>还可以改变场景对比度</c>

00:39:58.131 --> 00:40:00.634
<c.magenta>还可以改变场景对比度</c>

00:40:01.201 --> 00:40:05.539
<c.magenta>就会产生正常的图像或不饱和的</c>

00:40:06.974 --> 00:40:09.643
<c.magenta>或过度饱和的图像 然后改变对比度</c>

00:40:13.146 --> 00:40:17.851
<c.magenta>最后一个 有着非常非常棒的效果</c>

00:40:18.018 --> 00:40:19.219
<c.magenta>就是调色</c>

00:40:19.286 --> 00:40:22.322
<c.magenta>调色让我们完全重映射</c>

00:40:22.389 --> 00:40:25.259
<c.magenta>场景的颜色 变为完全不同的颜色</c>

00:40:25.692 --> 00:40:28.662
<c.magenta>我们采用正方形条形图片</c>

00:40:28.829 --> 00:40:32.065
<c.magenta>构建3D颜色立方体 当作查找表</c>

00:40:32.533 --> 00:40:35.035
<c.magenta>来重映射本来的颜色到全新的</c>

00:40:35.102 --> 00:40:37.771
<c.magenta>举个例子 我们重映射</c>

00:40:37.838 --> 00:40:41.475
<c.magenta>上面这条的普通颜色 到褐色调</c>

00:40:41.942 --> 00:40:46.680
<c.magenta>这就是褐色调的效果</c>

00:40:46.747 --> 00:40:49.616
<c.magenta>操作很简单 我们觉得很棒</c>

00:40:49.683 --> 00:40:50.717
<c.magenta>看上去很不错</c>

00:40:52.486 --> 00:40:55.055
<c.magenta>这就是今年对HDR相机的更新</c>

00:40:55.322 --> 00:40:58.125
<c.magenta>我们觉得这是非常棒的升级</c>

00:40:58.559 --> 00:41:00.127
<c.magenta>期待看到大家使用后的结果</c>

00:40:58.559 --> 00:41:00.127
<c.magenta>期待看到大家使用后的结果</c>

00:41:00.194 --> 00:41:03.764
<c.magenta>我们把所有的新效果都集中整合</c>
<c.magenta>供用户使用</c>

00:41:03.830 --> 00:41:06.500
<c.magenta>你不用在比如绽放或运动模糊之间选择</c>

00:41:06.667 --> 00:41:08.168
<c.magenta>可以同时使用所有效果</c>

00:41:08.368 --> 00:41:09.269
<c.magenta>当然这些是需要付费的</c>

00:41:09.336 --> 00:41:14.875
<c.magenta>但是你可以用来做出非常棒的图片和</c>
<c.magenta>看上去非常酷的场景</c>

00:41:15.876 --> 00:41:19.913
<c.magenta>现在我把讲台让给Nick</c>
<c.magenta>来讲解今年Model I/O的改进</c>

00:41:20.080 --> 00:41:20.981
<c.magenta>非常感谢</c>

00:41:28.322 --> 00:41:29.723
<c.magenta>好的 大家好</c>

00:41:29.823 --> 00:41:32.025
<c.magenta>首先我将稍微讲解</c>

00:41:32.092 --> 00:41:37.731
<c.magenta>今年模块输入输出和</c>
<c.magenta>SceneKit上的改进</c>

00:41:39.166 --> 00:41:43.537
<c.magenta>今年SceneKit可以导入模块</c>

00:41:43.604 --> 00:41:49.042
<c.magenta>到自定义格式比如</c>
<c.magenta>不一定和以前一样的三角形</c>

00:41:49.109 --> 00:41:53.747
<c.magenta>而是四边形或任意多边形的拓扑</c>

00:41:53.814 --> 00:41:57.050
<c.magenta>作者最初新建内容的地方</c>

00:41:57.551 --> 00:42:00.320
<c.magenta>SceneKit 如果需要</c>
<c.magenta>会自动进行三角测量</c>

00:41:57.551 --> 00:42:00.320
<c.magenta>SceneKit 如果需要</c>
<c.magenta>会自动进行三角测量</c>

00:42:00.387 --> 00:42:02.589
<c.magenta>从而完成渲染</c>

00:42:02.990 --> 00:42:08.495
<c.magenta>问题是如果想要采用全新的镶嵌设备</c>

00:42:08.562 --> 00:42:12.633
<c.magenta>你需要让镶嵌有精确的形状</c>

00:42:12.699 --> 00:42:16.403
<c.magenta>所以你需要修改代码 采用</c>
<c.magenta>“preservedOriginalTopology”标识</c>

00:42:16.770 --> 00:42:19.206
<c.magenta>该标识和Model I/O标识一致</c>

00:42:19.439 --> 00:42:22.509
<c.magenta>把它带入资产 进行指定</c>

00:42:22.576 --> 00:42:25.479
<c.magenta>它将保留所有的孔 折线</c>
<c.magenta>以及所有重要的东西</c>

00:42:25.546 --> 00:42:27.915
<c.magenta>为了对象的正确再现</c>

00:42:29.016 --> 00:42:33.620
<c.magenta>今年我们还改进了细分算法</c>

00:42:33.754 --> 00:42:37.624
<c.magenta>成为新的体系 来自Pixar的</c>
<c.magenta>OpenSubdiv 3</c>

00:42:37.925 --> 00:42:39.293
<c.magenta>可以看到在这个例子中</c>

00:42:39.359 --> 00:42:43.130
<c.magenta>有之前以三角形方式导入的对象</c>
<c.magenta>当进行镶嵌时</c>

00:42:43.197 --> 00:42:47.334
<c.magenta>我们想进行平滑细分的盒子</c>
<c.magenta>显得有点凹凸不平</c>

00:42:47.901 --> 00:42:50.504
<c.magenta>如果取出该对象 保持其拓扑结构</c>

00:42:50.771 --> 00:42:57.044
<c.magenta>可以看到四边形形成了均匀的圆形表面</c>

00:42:57.110 --> 00:42:58.111
<c.magenta>看上去效果很好</c>

00:42:58.612 --> 00:43:02.583
<c.magenta>这是一种非常好的方法 让轻量对象</c>

00:42:58.612 --> 00:43:02.583
<c.magenta>这是一种非常好的方法 让轻量对象</c>

00:43:02.649 --> 00:43:06.386
<c.magenta>可以根据场景缩放分辨率 诸如此类</c>

00:43:06.854 --> 00:43:12.159
<c.magenta>输入输出的另一方面 我想要强调的</c>

00:43:12.226 --> 00:43:17.097
<c.magenta>是去年我们在Model I/O里</c>
<c.magenta>引入了基于物理材料等</c>

00:43:17.331 --> 00:43:21.235
<c.magenta>它们自然连接了</c>
<c.magenta>所有SceneKit的内容</c>

00:43:21.301 --> 00:43:25.939
<c.magenta>如果在Model I/O里</c>
<c.magenta>指定了高动态范围相机</c>

00:43:26.006 --> 00:43:28.609
<c.magenta>它会四处可用 不会失去任何属性</c>

00:43:30.711 --> 00:43:32.880
<c.magenta>来看Model I/O</c>

00:43:32.946 --> 00:43:34.081
<c.magenta>快速复习一下</c>

00:43:34.748 --> 00:43:38.485
<c.magenta>如［听不清］所说</c>
<c.magenta>模块输入输出</c>

00:43:38.552 --> 00:43:40.654
<c.magenta>在框架和系统里</c>

00:43:42.289 --> 00:43:45.459
<c.magenta>显然需要它们 把数据在应用之间</c>

00:43:45.526 --> 00:43:48.595
<c.magenta>新建对象的地方 以及翻译对象</c>

00:43:48.662 --> 00:43:52.032
<c.magenta>在框架之间 比如SceneKit</c>
<c.magenta>和MetalKit 等等</c>

00:43:52.466 --> 00:43:56.670
<c.magenta>我们支持很多标准文件格式</c>

00:43:57.004 --> 00:44:01.308
<c.magenta>文件格式是一种方法 让内容</c>

00:43:57.004 --> 00:44:01.308
<c.magenta>文件格式是一种方法 让内容</c>

00:44:01.375 --> 00:44:03.310
<c.magenta>从成品输出到工具</c>

00:44:03.377 --> 00:44:05.312
<c.magenta>以前存在的格式</c>

00:44:05.379 --> 00:44:08.015
<c.magenta>专业范围很窄</c>

00:44:08.215 --> 00:44:10.651
<c.magenta>比如 只是一个模型</c>

00:44:10.717 --> 00:44:12.486
<c.magenta>或者只是一大堆数据</c>

00:44:12.986 --> 00:44:18.125
<c.magenta>今年很激动人心的是</c>

00:44:18.192 --> 00:44:21.895
<c.magenta>我们和Pixar联袂合作</c>

00:44:21.962 --> 00:44:25.432
<c.magenta>引入了对全局场景描述工具的支持</c>

00:44:26.466 --> 00:44:32.105
<c.magenta>现在全局场景描述是全新的公开标准</c>

00:44:32.806 --> 00:44:36.877
<c.magenta>关于它非常有趣和令人激动的是</c>

00:44:36.944 --> 00:44:41.949
<c.magenta>它不仅仅是一个文件系统</c>
<c.magenta>和一种格式</c>

00:44:42.182 --> 00:44:47.120
<c.magenta>很容易以ASCII读取</c>
<c.magenta>或足够以二进制加载</c>

00:44:47.588 --> 00:44:51.091
<c.magenta>它还包含了一个场景组合引擎</c>

00:44:51.525 --> 00:44:55.262
<c.magenta>这让它真正</c>
<c.magenta>从以前的其他格式中区分开来</c>

00:44:55.729 --> 00:44:58.599
<c.magenta>它凝聚了多年来的实际操作经验</c>

00:44:58.665 --> 00:45:00.667
<c.magenta>Pixar采用它制作电影</c>

00:44:58.665 --> 00:45:00.667
<c.magenta>Pixar采用它制作电影</c>

00:45:01.034 --> 00:45:06.840
<c.magenta>明天上映的“海底总动员2”</c>
<c.magenta>完全从USD文件产生</c>

00:45:07.374 --> 00:45:10.878
<c.magenta>现在USD有专门用于场景的数据类型</c>

00:45:11.278 --> 00:45:16.383
<c.magenta>并且再一次</c>
<c.magenta>除了将此格式作为开放格式</c>

00:45:16.450 --> 00:45:19.520
<c.magenta>还有文件分层 实现并发流程</c>

00:45:19.920 --> 00:45:23.757
<c.magenta>并发工作流程非常棒</c>

00:45:25.192 --> 00:45:29.096
<c.magenta>这是一个例子 可能在</c>

00:45:29.162 --> 00:45:32.132
<c.magenta>在全局场景描述中取得的</c>
<c.magenta>关于电影中某个典型场景</c>

00:45:32.699 --> 00:45:37.037
<c.magenta>我们有一个取景层</c>
<c.magenta>取景被分层</c>

00:45:37.104 --> 00:45:39.439
<c.magenta>从组件 从背景 从角色</c>

00:45:39.506 --> 00:45:42.042
<c.magenta>角色本身可能包含很多组件</c>

00:45:42.609 --> 00:45:45.913
<c.magenta>可以看到该取景层图片有很多分层</c>

00:45:46.046 --> 00:45:49.349
<c.magenta>因为你不止可以新建一个场景</c>

00:45:49.416 --> 00:45:51.051
<c.magenta>由所有这些内容构成的</c>

00:45:51.118 --> 00:45:52.986
<c.magenta>你还可以做出改变</c>

00:45:53.053 --> 00:45:57.257
<c.magenta>场景描述可以让你知道 这是第四镜</c>

00:45:57.324 --> 00:46:00.427
<c.magenta>角色可能出来快了些或慢了些</c>

00:45:57.324 --> 00:46:00.427
<c.magenta>角色可能出来快了些或慢了些</c>

00:46:00.827 --> 00:46:05.732
<c.magenta>可以把所有这些变化存入一个文件</c>
<c.magenta>为了审阅</c>

00:46:09.403 --> 00:46:13.941
<c.magenta>另一个全局场景描述的特点是</c>

00:46:14.007 --> 00:46:16.710
<c.magenta>据我所知 它是唯一的开源文件格式</c>

00:46:17.077 --> 00:46:22.316
<c.magenta>允许在对象变化中对类进行指定</c>

00:46:22.716 --> 00:46:26.453
<c.magenta>可以想象 可能出现一种情况</c>

00:46:26.520 --> 00:46:28.856
<c.magenta>有很多野兽 都想闯进大学</c>

00:46:28.922 --> 00:46:30.090
<c.magenta>之类的 那里有书本</c>

00:46:30.524 --> 00:46:34.261
<c.magenta>在传统的工作流程中 你大概会</c>

00:46:34.328 --> 00:46:37.130
<c.magenta>发现自己在编写书本 编写程序</c>

00:46:37.231 --> 00:46:39.733
<c.magenta>为每本小书都新建无数文件</c>

00:46:39.800 --> 00:46:44.071
<c.magenta>然后把它们放在书架上</c>
<c.magenta>然后一本一本取出进行渲染</c>

00:46:44.605 --> 00:46:46.440
<c.magenta>真的很枯燥</c>

00:46:46.640 --> 00:46:49.877
<c.magenta>在游戏里 有一种角色团队</c>

00:46:49.943 --> 00:46:52.779
<c.magenta>可能各个角色有所不同</c>
<c.magenta>比如发型和T恤</c>

00:46:53.180 --> 00:46:55.449
<c.magenta>你可能不得不把它们都删除</c>

00:46:55.516 --> 00:46:57.351
<c.magenta>而现在全局场景描述</c>

00:46:57.417 --> 00:47:01.955
<c.magenta>允许你在对象的一个单一文件类中</c>
<c.magenta>进行指定</c>

00:46:57.417 --> 00:47:01.955
<c.magenta>允许你在对象的一个单一文件类中</c>
<c.magenta>进行指定</c>

00:47:02.022 --> 00:47:05.192
<c.magenta>所以一个类在这里显然代表了了一本书</c>

00:47:07.761 --> 00:47:08.595
<c.magenta>所以</c>

00:47:09.329 --> 00:47:15.068
<c.magenta>文件可以代表很多不同几何形状的书</c>

00:47:15.335 --> 00:47:18.872
<c.magenta>显然有一本宽的 长的 还有一本厚的</c>

00:47:19.506 --> 00:47:23.777
<c.magenta>当你把书实例化 放入书架时</c>

00:47:23.844 --> 00:47:25.746
<c.magenta>你可以告诉全局场景描述</c>

00:47:26.013 --> 00:47:29.483
<c.magenta>我想要这本书 想让它这么宽这么长</c>

00:47:29.750 --> 00:47:31.618
<c.magenta>它会提供你想要的信息</c>

00:47:31.685 --> 00:47:36.723
<c.magenta>实例化进入运行 或照片 都可以</c>

00:47:39.526 --> 00:47:46.133
<c.magenta>你在一个单一文件内的</c>
<c.magenta>改变可以是很多轴上的</c>

00:47:46.433 --> 00:47:48.869
<c.magenta>在本例中 我将修改一些着色属性</c>

00:47:49.002 --> 00:47:51.004
<c.magenta>刚才我有所有这些书</c>

00:47:51.071 --> 00:47:52.840
<c.magenta>我可以给它们着任何我想要的颜色</c>

00:47:53.340 --> 00:47:58.312
<c.magenta>神奇的地方是 我把书放好</c>
<c.magenta>最后我问</c>

00:47:58.412 --> 00:47:59.580
<c.magenta>为了渲染</c>

00:47:59.646 --> 00:48:02.616
<c.magenta>在这个地方的书是什么颜色的？</c>

00:47:59.646 --> 00:48:02.616
<c.magenta>在这个地方的书是什么颜色的？</c>

00:48:02.683 --> 00:48:07.221
<c.magenta>它会找出来</c>
<c.magenta>根据所有的场景组合的逻辑</c>

00:48:07.287 --> 00:48:11.892
<c.magenta>文件和引擎包含的</c>
<c.magenta>它应该被表达的方式</c>

00:48:13.060 --> 00:48:18.465
<c.magenta>除此以外 你还可以在一个单一文件内</c>

00:48:18.532 --> 00:48:19.666
<c.magenta>表达不同的功能</c>

00:48:19.933 --> 00:48:23.537
<c.magenta>我将要展示的是在非常低的终端</c>

00:48:23.604 --> 00:48:27.741
<c.magenta>比如某个可穿戴设备</c>
<c.magenta>可能只显示低多边形版本</c>

00:48:27.841 --> 00:48:31.578
<c.magenta>同样的文件可以展示出合适的效果</c>

00:48:32.312 --> 00:48:35.282
<c.magenta>在已有功能的最高渲染上</c>

00:48:36.149 --> 00:48:39.820
<c.magenta>我们集成了全局场景描述</c>

00:48:39.887 --> 00:48:42.222
<c.magenta>跨越所有系统和框架</c>

00:48:42.856 --> 00:48:46.460
<c.magenta>所以 在最底层</c>

00:48:46.627 --> 00:48:50.330
<c.magenta>如果把一个全局场景描述文件</c>
<c.magenta>导入Model I/O</c>

00:48:50.397 --> 00:48:51.965
<c.magenta>我不期待你们可以读懂</c>

00:48:52.165 --> 00:48:55.736
<c.magenta>可以获得一个熟悉的</c>
<c.magenta>Model I/O对象层次</c>

00:48:55.802 --> 00:48:58.605
<c.magenta>含有所有在全局场景描述文件中的属性</c>

00:48:58.672 --> 00:49:01.441
<c.magenta>精确地表现 所以可以使用我们的工具</c>

00:48:58.672 --> 00:49:01.441
<c.magenta>精确地表现 所以可以使用我们的工具</c>

00:49:01.508 --> 00:49:05.546
<c.magenta>Model I/O所提供的</c>
<c.magenta>比如 放置光照探测器</c>

00:49:05.612 --> 00:49:08.048
<c.magenta>并且评估它们的最佳位置</c>

00:49:10.284 --> 00:49:15.689
<c.magenta>然而 除此之外 比如有一个项目</c>

00:49:15.756 --> 00:49:18.258
<c.magenta>你的美术团队给了你一个</c>
<c.magenta>包含很多内容的文件夹</c>

00:49:19.126 --> 00:49:22.596
<c.magenta>你可以在Finder里打开窗口</c>
<c.magenta>包含所有内容</c>

00:49:22.663 --> 00:49:25.766
<c.magenta>Finder会准备好缩略图</c>

00:49:25.832 --> 00:49:26.900
<c.magenta>因此可以看见里面有什么</c>

00:49:27.334 --> 00:49:29.102
<c.magenta>快速查找也适用</c>

00:49:29.169 --> 00:49:32.172
<c.magenta>你可以选中其中一个对象 按下空格键</c>

00:49:32.239 --> 00:49:34.174
<c.magenta>它会跳出 你可将其翻来翻去</c>

00:49:34.374 --> 00:49:38.145
<c.magenta>当然快速查找一次只能显示一个对象</c>

00:49:38.312 --> 00:49:40.848
<c.magenta>如果你想保留一个对象以进行比较</c>

00:49:40.914 --> 00:49:44.117
<c.magenta>或者你的USD文件有多台相机</c>
<c.magenta>或多项内容</c>

00:49:44.184 --> 00:49:48.121
<c.magenta>你想逐个检查 可以用预览打开</c>

00:49:48.188 --> 00:49:51.792
<c.magenta>全局场景描述在那里实现地非常好</c>

00:49:53.093 --> 00:49:57.331
<c.magenta>如果把全局场景文件读入Xcode</c>

00:49:57.397 --> 00:50:00.667
<c.magenta>它通过Model I/O</c>
<c.magenta>导入SceneKit</c>

00:49:57.397 --> 00:50:00.667
<c.magenta>它通过Model I/O</c>
<c.magenta>导入SceneKit</c>

00:50:00.734 --> 00:50:03.136
<c.magenta>含有该文件内完全相同的属性表达</c>

00:50:03.270 --> 00:50:06.507
<c.magenta>所以可以在层次浏览器上进行查看</c>

00:50:06.673 --> 00:50:07.908
<c.magenta>可以查看属性</c>

00:50:08.141 --> 00:50:11.011
<c.magenta>可以移动对象 可以添加相机</c>

00:50:11.078 --> 00:50:13.547
<c.magenta>修改场景 返回给USD</c>

00:50:13.614 --> 00:50:16.216
<c.magenta>然后你把它发回给美术师们说</c>

00:50:16.283 --> 00:50:17.885
<c.magenta>你知道 我做了点修改</c>

00:50:17.951 --> 00:50:19.486
<c.magenta>你能不能 你知道该怎么做</c>

00:50:20.454 --> 00:50:25.325
<c.magenta>最后 它归入SceneKit</c>

00:50:25.392 --> 00:50:30.063
<c.magenta>Pixar的朋友为我们提供了</c>
<c.magenta>“海底总动员2”里的雷先生</c>

00:50:30.631 --> 00:50:33.967
<c.magenta>这是SceneKit</c>
<c.magenta>最直接可用的功能</c>

00:50:34.034 --> 00:50:37.571
<c.magenta>用最新的基于物理着色方法</c>
<c.magenta>你刚才已经全部听过</c>

00:50:38.005 --> 00:50:43.710
<c.magenta>我们只在电影资产中</c>
<c.magenta>播放了3秒动画</c>

00:50:43.777 --> 00:50:45.312
<c.magenta>看上去效果非常非常好</c>

00:50:47.147 --> 00:50:50.817
<c.magenta>你还需要插件</c>

00:50:50.884 --> 00:50:53.620
<c.magenta>才能把全局场景描述集成到工作流程中</c>

00:50:54.087 --> 00:50:57.758
<c.magenta>从而激活资产的动作 在人物</c>

00:50:57.958 --> 00:51:00.561
<c.magenta>内容创作节目 编写的应用之间</c>

00:50:57.958 --> 00:51:00.561
<c.magenta>内容创作节目 编写的应用之间</c>

00:51:01.094 --> 00:51:04.698
<c.magenta>所有插件 开源信息</c>

00:51:04.765 --> 00:51:07.801
<c.magenta>可用性 时间表等等等等</c>

00:51:07.868 --> 00:51:12.773
<c.magenta>都可以在openusd.org</c>
<c.magenta>网站上找到 我建议大家访问</c>

00:51:12.840 --> 00:51:16.777
<c.magenta>找出可以在你的管道和进程中</c>
<c.magenta>可用到的内容</c>

00:51:18.612 --> 00:51:20.447
<c.magenta>这就是全局场景描述</c>

00:51:28.088 --> 00:51:29.089
<c.magenta>快速总结一下</c>

00:51:29.923 --> 00:51:34.528
<c.magenta>SceneKit在我们的所有系统</c>
<c.magenta>和平台上可用</c>

00:51:34.795 --> 00:51:36.096
<c.magenta>这非常令人赞叹</c>

00:51:36.396 --> 00:51:39.833
<c.magenta>我们有基于物理渲染</c>
<c.magenta>针对任何美术外观状态</c>

00:51:39.900 --> 00:51:43.704
<c.magenta>以及美术表现状态 看上去非常美</c>

00:51:43.904 --> 00:51:47.608
<c.magenta>HDR相机和效果让你</c>

00:51:47.674 --> 00:51:51.011
<c.magenta>控制如何表现对象</c>
<c.magenta>以及外观 非常高质量</c>

00:51:51.612 --> 00:51:56.049
<c.magenta>我们还提供全局场景描述的支持</c>

00:51:56.116 --> 00:51:58.852
<c.magenta>我们非常高兴能在背后进行支持</c>

00:51:58.919 --> 00:52:01.922
<c.magenta>并且认为将在工作流程里大显身手</c>

00:51:58.919 --> 00:52:01.922
<c.magenta>并且认为将在工作流程里大显身手</c>

00:52:01.989 --> 00:52:04.191
<c.magenta>在未来的日子里</c>

00:52:06.760 --> 00:52:10.797
<c.magenta>关于本次演讲609</c>
<c.magenta>更多信息 都可以在网站上找到</c>

00:52:13.534 --> 00:52:15.802
<c.magenta>相关演讲还有</c>

00:52:15.869 --> 00:52:19.173
<c.magenta>Xcode中可视化调试和广色域</c>
<c.magenta>游戏技术和Apple Watch</c>

00:52:19.239 --> 00:52:22.142
<c.magenta>今天和明天可以参加</c>

00:52:22.209 --> 00:52:23.477
<c.magenta>非常感谢大家</c>
