WEBVTT

00:00:19.353 --> 00:00:23.023 align:middle
审核应用的辅助功能

00:00:27.127 --> 00:00:27.961 align:middle
早上好

00:00:28.996 --> 00:00:30.497 align:middle
我是Susumu Harada

00:00:30.731 --> 00:00:32.833 align:middle
一名来自辅助功能团队的工程师

00:00:33.166 --> 00:00:35.269 align:middle
今天很高兴能和同事Patti

00:00:35.636 --> 00:00:38.238 align:middle
一起给大家介绍

00:00:38.305 --> 00:00:44.111 align:middle
一种最便捷的工具
用于发现 诊断和修复

00:00:44.178 --> 00:00:46.046 align:middle
应用中的辅助功能问题

00:00:47.147 --> 00:00:49.249 align:middle
也许有些人还是辅助功能方面的新手

00:00:49.449 --> 00:00:52.686 align:middle
所以让我们简要介绍下什么是辅助功能

00:00:52.953 --> 00:00:56.056 align:middle
大家在开发应用过程中会遇到的问题

00:00:58.592 --> 00:01:02.696 align:middle
首先 辅助功能就是确保每个人

00:00:58.592 --> 00:01:02.696 align:middle
首先 辅助功能就是确保每个人

00:01:02.763 --> 00:01:07.301 align:middle
都能享受到应用所提供的产品和服务

00:01:07.568 --> 00:01:09.136 align:middle
不论他们的能力如何

00:01:10.771 --> 00:01:13.607 align:middle
现在 有些用户可能有视觉

00:01:15.175 --> 00:01:16.176 align:middle
或听觉障碍

00:01:18.111 --> 00:01:21.515 align:middle
有些可能正遭受身体和运动困难

00:01:22.716 --> 00:01:24.751 align:middle
或者有认知和学习障碍

00:01:26.954 --> 00:01:29.656 align:middle
为了支持广泛多样的用户

00:01:30.057 --> 00:01:34.261 align:middle
Apple已努力开发一系列辅助技术

00:01:34.328 --> 00:01:36.697 align:middle
帮助增强
各种用户的能力

00:01:37.064 --> 00:01:39.733 align:middle
例如VoiceOver
帮助有视觉障碍的用户

00:01:39.800 --> 00:01:42.469 align:middle
Switch control
帮助运动困难的用户

00:01:45.205 --> 00:01:50.477 align:middle
我们也确定
这些技术可通过平台用于所有设备

00:01:50.544 --> 00:01:54.214 align:middle
包括macOS iOS
watchOS和tvOS

00:01:57.084 --> 00:02:00.420 align:middle
尽管这些辅助技术 工具很棒

00:01:57.084 --> 00:02:00.420 align:middle
尽管这些辅助技术 工具很棒

00:02:00.487 --> 00:02:03.857 align:middle
但用户体验的核心是你们的应用

00:02:05.559 --> 00:02:10.264 align:middle
所以要更好了解
你的应用如何与我们的辅助技术交互

00:02:10.697 --> 00:02:12.833 align:middle
过程中可能会遇到的问题

00:02:13.100 --> 00:02:14.935 align:middle
首先来看看一个简单的例子

00:02:15.769 --> 00:02:18.906 align:middle
我写了个简单的应用
叫做Math Learner

00:02:19.273 --> 00:02:22.242 align:middle
我给一位用户在顶部显示一个方程

00:02:22.576 --> 00:02:24.444 align:middle
底部有四个答案按钮

00:02:25.245 --> 00:02:27.281 align:middle
用户可以点击答案按钮

00:02:27.347 --> 00:02:29.917 align:middle
得到答案是否正确的反馈

00:02:30.317 --> 00:02:31.785 align:middle
非常简单

00:02:31.852 --> 00:02:33.687 align:middle
看起来运行正常

00:02:34.087 --> 00:02:37.958 align:middle
但是现在有位盲人使用该程序怎么办

00:02:40.994 --> 00:02:43.830 align:middle
显然若没有辅助技术

00:02:43.897 --> 00:02:47.167 align:middle
他们无法看到屏幕
那就毫无用处

00:02:47.701 --> 00:02:48.669 align:middle
幸运的是

00:02:48.869 --> 00:02:51.872 align:middle
他们可以使用
我们的屏幕读取器VoiceOver

00:02:52.372 --> 00:02:55.075 align:middle
读出屏幕上的信息

00:02:55.509 --> 00:02:58.145 align:middle
还可以在屏幕上使用各种手势

00:02:58.212 --> 00:03:00.314 align:middle
来导航和与不同控制器交互

00:02:58.212 --> 00:03:00.314 align:middle
来导航和与不同控制器交互

00:03:00.781 --> 00:03:02.649 align:middle
这样 应用的辅助功能就很全面

00:03:03.016 --> 00:03:05.686 align:middle
当用户点击屏幕方程

00:03:06.253 --> 00:03:07.588 align:middle
VoiceOver读出

00:03:07.921 --> 00:03:09.223 align:middle
5加3等于

00:03:10.057 --> 00:03:10.891 align:middle
很棒吧

00:03:12.726 --> 00:03:16.396 align:middle
所以要如何才能让
像VoiceOver这样的

00:03:16.463 --> 00:03:19.099 align:middle
辅助技术有效与应用连接呢？

00:03:19.433 --> 00:03:21.702 align:middle
有几个关键信息

00:03:23.136 --> 00:03:24.538 align:middle
但首先要知道的是

00:03:24.605 --> 00:03:27.474 align:middle
屏幕上重要元素的位置

00:03:28.742 --> 00:03:31.512 align:middle
要知道每个元素的特点

00:03:31.578 --> 00:03:35.716 align:middle
或是类型例如这个按钮
标题或静态文本是什么

00:03:38.051 --> 00:03:41.288 align:middle
最后 还要知道一个描述标签

00:03:41.355 --> 00:03:43.223 align:middle
以及该元素的唯一标识

00:03:43.290 --> 00:03:46.026 align:middle
可以以一种可理解的方式向用户描述

00:03:48.529 --> 00:03:50.731 align:middle
这样有了这些关键信息

00:03:51.198 --> 00:03:53.367 align:middle
VoiceOver和
其他辅助技术就可以

00:03:53.433 --> 00:03:55.602 align:middle
以一种可用性强的方式向用户

00:03:56.203 --> 00:03:57.704 align:middle
展示交互性

00:04:00.073 --> 00:04:03.110 align:middle
所有的辅助功能信息都是通过

00:04:03.377 --> 00:04:05.179 align:middle
辅助功能API由应用提供的

00:04:05.746 --> 00:04:09.283 align:middle
Apple公司努力打造辅助功能支持

00:04:09.349 --> 00:04:10.984 align:middle
纳入我们的UI框架

00:04:11.318 --> 00:04:14.121 align:middle
所以若你使用标准控件构建自己的应用

00:04:14.555 --> 00:04:17.591 align:middle
所有的辅助功能信息都将自动由

00:04:17.658 --> 00:04:19.059 align:middle
制定器填入

00:04:19.125 --> 00:04:21.228 align:middle
你不必进行其他操作

00:04:23.063 --> 00:04:26.266 align:middle
当然 你的应用将会
最终包括自定义控件

00:04:26.333 --> 00:04:28.468 align:middle
当它们生效 你可能需要提供

00:04:28.535 --> 00:04:31.038 align:middle
一些自己的辅助功能信息

00:04:31.839 --> 00:04:34.608 align:middle
如果没有 你可能最终无法访问应用

00:04:35.075 --> 00:04:37.411 align:middle
所以让我们来看看会有什么影响

00:04:38.846 --> 00:04:41.715 align:middle
如果我已经执行顶部方程视图

00:04:41.782 --> 00:04:45.953 align:middle
使用完全自定义绘图代码
如CA Layers或OpenGL

00:04:46.553 --> 00:04:49.456 align:middle
在默认的情况下没有任何辅助功能

00:04:49.523 --> 00:04:51.658 align:middle
所以除非我明显提供了

00:04:52.693 --> 00:04:55.195 align:middle
才可能完全无形于VoiceOver

00:04:55.262 --> 00:04:56.997 align:middle
和其他辅助技术

00:04:58.432 --> 00:05:00.300 align:middle
而这四个底部按钮

00:04:58.432 --> 00:05:00.300 align:middle
而这四个底部按钮

00:05:00.367 --> 00:05:03.570 align:middle
如果我使用类似按钮的自定义视图

00:05:03.637 --> 00:05:04.805 align:middle
但忘了说明

00:05:04.872 --> 00:05:07.207 align:middle
它们作为按钮的辅助功能特点

00:05:07.908 --> 00:05:09.743 align:middle
那么VoiceOver和用户

00:05:09.810 --> 00:05:12.045 align:middle
就无法知道它们可以点击这些按钮

00:05:14.314 --> 00:05:16.183 align:middle
最后 这是求助按钮

00:05:16.450 --> 00:05:19.086 align:middle
如果我对它使用自定义绘图代码

00:05:19.152 --> 00:05:21.755 align:middle
忘了给标签提供辅助功能

00:05:23.524 --> 00:05:26.193 align:middle
VoiceOver
就不知道如何向用户描述

00:05:26.260 --> 00:05:28.929 align:middle
而用户就不知按钮的用途

00:05:29.863 --> 00:05:30.931 align:middle
所以这样你就会发现

00:05:30.998 --> 00:05:33.667 align:middle
要是错过一些关键的可访问下信息

00:05:34.101 --> 00:05:37.171 align:middle
需要依靠辅助技术的用户体验

00:05:37.237 --> 00:05:38.238 align:middle
就会非常糟糕

00:05:41.575 --> 00:05:45.145 align:middle
所以必须确保应用全面的辅助功能

00:05:45.679 --> 00:05:48.348 align:middle
从而提供良好的用户体验

00:05:49.616 --> 00:05:53.187 align:middle
确保应用辅助功能还有另一个好处

00:05:53.387 --> 00:05:55.589 align:middle
就是对于具有全面

00:05:56.123 --> 00:05:57.457 align:middle
辅助功能的应用

00:05:57.758 --> 00:06:00.027 align:middle
你可以自动编写UI测试

00:05:57.758 --> 00:06:00.027 align:middle
你可以自动编写UI测试

00:06:00.093 --> 00:06:02.930 align:middle
通过使用Xcode的UI测试支持

00:06:03.897 --> 00:06:07.100 align:middle
获取更多信息 推荐大家去看

00:06:07.167 --> 00:06:10.103 align:middle
去年 WWDC 上的
Xcode的UI测试演讲

00:06:11.738 --> 00:06:13.140 align:middle
审核辅助功能

00:06:13.674 --> 00:06:14.508 align:middle
好极了 那么

00:06:14.575 --> 00:06:16.677 align:middle
如何才能确保app提供

00:06:16.743 --> 00:06:19.046 align:middle
所有必要的辅助功能信息呢

00:06:19.980 --> 00:06:22.115 align:middle
我们一直建议的方法就是

00:06:22.316 --> 00:06:24.585 align:middle
使用实际的辅助技术

00:06:24.651 --> 00:06:27.287 align:middle
例如VoiceOver和
Switch control

00:06:27.721 --> 00:06:29.857 align:middle
现在 这还是个很理想的方法

00:06:29.923 --> 00:06:33.493 align:middle
因为这样你可以反映实际的用户体验

00:06:33.827 --> 00:06:36.196 align:middle
同时不论是否可以进行访问

00:06:36.263 --> 00:06:38.332 align:middle
都还可以解决可用性的问题

00:06:38.899 --> 00:06:43.036 align:middle
但是这确实要求大家熟悉掌握这些技术

00:06:43.871 --> 00:06:46.507 align:middle
特别当你的应用支持多平台时

00:06:46.940 --> 00:06:48.275 align:middle
你会觉得这有点难

00:06:48.342 --> 00:06:52.045 align:middle
必须的特定设备上多次部署应用

00:06:52.212 --> 00:06:54.982 align:middle
通过各种辅助技术运行

00:06:55.048 --> 00:06:57.718 align:middle
在每个平台重复这个过程

00:06:59.486 --> 00:07:03.657 align:middle
所有平台都有一些辅助功能设置

00:06:59.486 --> 00:07:03.657 align:middle
所有平台都有一些辅助功能设置

00:07:03.724 --> 00:07:05.058 align:middle
用户可以进行配置

00:07:05.325 --> 00:07:07.694 align:middle
例如动态类型的字体大小

00:07:09.129 --> 00:07:12.499 align:middle
作为开发人员可能会觉得有点乏味

00:07:12.566 --> 00:07:15.602 align:middle
必须在改变辅助功能设置

00:07:15.669 --> 00:07:17.771 align:middle
和返回应用中

00:07:17.838 --> 00:07:18.939 align:middle
进行来回切换

00:07:19.206 --> 00:07:21.141 align:middle
验证在应用上的效果

00:07:21.542 --> 00:07:22.876 align:middle
再重复该过程

00:07:24.011 --> 00:07:26.046 align:middle
所以 听取大家的反馈后

00:07:26.113 --> 00:07:28.382 align:middle
今天很高兴发布一种更为简便的

00:07:28.849 --> 00:07:33.387 align:middle
全新工具用于审查辅助功能

00:07:33.754 --> 00:07:35.856 align:middle
那就是全新的
辅助功能检查

00:07:39.326 --> 00:07:41.295 align:middle
在辅助功能检查上

00:07:41.962 --> 00:07:43.797 align:middle
只有一个按钮

00:07:44.264 --> 00:07:47.768 align:middle
它可以自动审查应用的
一般辅助功能问题

00:07:47.968 --> 00:07:49.136 align:middle
非常简单

00:07:49.736 --> 00:07:52.372 align:middle
甚至可以建议你如何解决问题

00:07:54.408 --> 00:07:59.179 align:middle
在Interactive Inspection模式中
你可以轻松定位应用的任何元素

00:07:59.446 --> 00:08:02.149 align:middle
获得详细的辅助功能信息

00:07:59.446 --> 00:08:02.149 align:middle
获得详细的辅助功能信息

00:08:02.716 --> 00:08:05.452 align:middle
不论应用是在模拟器
还是连接设备上运行

00:08:05.586 --> 00:08:07.321 align:middle
都可以使用

00:08:09.857 --> 00:08:13.927 align:middle
我们还提供了实时预览功能

00:08:14.328 --> 00:08:17.464 align:middle
可以让大家轻松改变辅助功能设置

00:08:17.798 --> 00:08:20.033 align:middle
并立即在应用上看到效果

00:08:20.100 --> 00:08:21.602 align:middle
却不用离开应用

00:08:23.937 --> 00:08:28.542 align:middle
很高兴告诉大家
这款Accessibility Inspector

00:08:28.809 --> 00:08:30.978 align:middle
现在已经支持所有平台

00:08:32.346 --> 00:08:36.450 align:middle
只要桌面上有辅助功能检查应用

00:08:37.083 --> 00:08:42.722 align:middle
你就可以审查应用在
macOS iOS watchOS

00:08:42.789 --> 00:08:44.057 align:middle
甚至tvOS上的运行

00:08:45.826 --> 00:08:50.097 align:middle
而你只要
在模拟器或设备上运行应用

00:08:50.631 --> 00:08:53.233 align:middle
选择inspector上的各个目标

00:08:53.600 --> 00:08:54.568 align:middle
就是这么简单

00:08:55.903 --> 00:09:00.107 align:middle
我们希望这个功能

00:08:55.903 --> 00:09:00.107 align:middle
我们希望这个功能

00:09:00.174 --> 00:09:05.279 align:middle
可以最大程度上简化在所有平台
上的测试和审查辅助功能的工作

00:09:06.780 --> 00:09:11.118 align:middle
给大家演示了这些全新功能
和全新accessibly inspector后

00:09:11.652 --> 00:09:13.220 align:middle
我要把时间交给Patti

00:09:20.460 --> 00:09:22.095 align:middle
嗨 我是Patty Hoa

00:09:22.162 --> 00:09:23.730 align:middle
很兴奋

00:09:23.797 --> 00:09:27.601 align:middle
可以给大家介绍我们全新
辅助功能检查

00:09:28.468 --> 00:09:32.172 align:middle
我们一直致力于整个大家的反馈

00:09:32.573 --> 00:09:35.542 align:middle
我已经等不及向大家展示了

00:09:38.378 --> 00:09:39.379 align:middle
请注意

00:09:40.214 --> 00:09:44.117 align:middle
辅助功能检查
现在是开发包的一部分

00:09:44.184 --> 00:09:46.954 align:middle
这意味着大家只要进入迷你工具条

00:09:47.020 --> 00:09:50.791 align:middle
Open Developer Tools
区域下方的代码

00:09:50.858 --> 00:09:53.160 align:middle
就能运行辅助功能检查

00:09:54.528 --> 00:09:57.965 align:middle
这是我们新Accessibly Inspector的截图

00:09:58.365 --> 00:10:01.068 align:middle
首先希望大家注意下顶部

00:09:58.365 --> 00:10:01.068 align:middle
首先希望大家注意下顶部

00:10:01.502 --> 00:10:05.472 align:middle
左边是Target Chooser

00:10:05.873 --> 00:10:08.108 align:middle
这可以让我们

00:10:08.342 --> 00:10:10.978 align:middle
检查所有不同的Apple设备

00:10:11.044 --> 00:10:13.547 align:middle
包括iPhone iPad

00:10:13.614 --> 00:10:17.284 align:middle
台式机 watch TV和模拟器

00:10:19.486 --> 00:10:23.090 align:middle
中间是Inspection Pointer

00:10:23.457 --> 00:10:25.225 align:middle
当你启用这个时

00:10:25.592 --> 00:10:28.762 align:middle
工具就能开始检查

00:10:29.229 --> 00:10:31.665 align:middle
你手指下方的设备上是什么

00:10:32.199 --> 00:10:35.135 align:middle
若是使用模拟器或台式机

00:10:35.202 --> 00:10:37.571 align:middle
就是你鼠标光标下的内容

00:10:39.806 --> 00:10:42.109 align:middle
在右侧有三个按钮

00:10:43.477 --> 00:10:46.380 align:middle
代表工具的三个主要功能

00:10:46.847 --> 00:10:49.750 align:middle
这就是下面我要给大家介绍的

00:10:49.816 --> 00:10:52.753 align:middle
会有更多细节和演示

00:10:53.187 --> 00:10:54.855 align:middle
是哪三种功能呢

00:10:55.789 --> 00:10:57.357 align:middle
第一 检查

00:10:59.059 --> 00:11:01.795 align:middle
检查功能可以调试分析

00:10:59.059 --> 00:11:01.795 align:middle
检查功能可以调试分析

00:11:01.862 --> 00:11:03.764 align:middle
应用的可访问状态

00:11:05.332 --> 00:11:06.900 align:middle
然后是审查功能

00:11:07.367 --> 00:11:10.938 align:middle
帮助大家找到应用的辅助功能问题

00:11:12.206 --> 00:11:14.174 align:middle
最后是设置功能

00:11:15.042 --> 00:11:20.314 align:middle
帮助大家快速测试辅助功能设置
对应用的影响

00:11:21.248 --> 00:11:24.418 align:middle
我要说的第一点是审查功能

00:11:27.087 --> 00:11:29.156 align:middle line:1
大家的最终目标是

00:11:29.223 --> 00:11:32.659 align:middle line:1
确保应用对每一个人的辅助功能

00:11:33.126 --> 00:11:35.362 align:middle
要做到这一点 首先就要审查应用

00:11:36.663 --> 00:11:40.400 align:middle
正如Susumu提过的那样可以使用

00:11:40.467 --> 00:11:43.437 align:middle
VoiceOver
Switch control以及

00:11:43.504 --> 00:11:44.905 align:middle
审查应用

00:11:45.706 --> 00:11:48.275 align:middle
或者你也可以聘请辅助功能顾问

00:11:48.342 --> 00:11:50.344 align:middle
代表你进行评估

00:11:50.744 --> 00:11:52.446 align:middle
当 今天我要说的是

00:11:52.513 --> 00:11:55.782 align:middle
一种更经济的解决方法

00:11:56.950 --> 00:12:01.655 align:middle
只要使用我们工具的审查功能

00:11:56.950 --> 00:12:01.655 align:middle
只要使用我们工具的审查功能

00:12:04.658 --> 00:12:07.794 align:middle
在审查选项中有这个审查运行按钮

00:12:08.095 --> 00:12:11.064 align:middle
向大家介绍该功能最好的方法就是

00:12:11.131 --> 00:12:12.499 align:middle
演示一遍

00:12:21.909 --> 00:12:23.844 align:middle
我在屏幕上

00:12:24.044 --> 00:12:25.646 align:middle
运行一版

00:12:26.180 --> 00:12:29.316 align:middle
iOS版的
Math Learner应用

00:12:29.383 --> 00:12:30.918 align:middle
在模拟器上运行

00:12:32.286 --> 00:12:34.755 align:middle
这样你可以玩游戏 我们有方程

00:12:34.821 --> 00:12:36.790 align:middle
我们选择其中一个选项

00:12:37.191 --> 00:12:38.992 align:middle
不是那个 这个

00:12:39.059 --> 00:12:41.228 align:middle
三个 这就是玩游戏的规则

00:12:43.931 --> 00:12:47.134 align:middle
好了 现在我想要运行
辅助功能检查

00:12:48.402 --> 00:12:51.572 align:middle
我只要前往Xcode

00:12:54.308 --> 00:12:55.509 align:middle
在顶部

00:12:57.611 --> 00:12:59.780 align:middle
Open Developer Tool的下方

00:13:00.314 --> 00:13:02.683 align:middle
我们要启动辅助功能检查

00:13:06.220 --> 00:13:08.288 align:middle
你要告诉工具的第一点就是

00:13:08.355 --> 00:13:10.457 align:middle
你要审查那个设备

00:13:11.391 --> 00:13:15.195 align:middle
在Target Chooser中
我要挑选模拟器

00:13:19.399 --> 00:13:21.802 align:middle
之后点击审查选项条

00:13:22.569 --> 00:13:24.872 align:middle
这个就是我之前说的审查运行按钮

00:13:25.339 --> 00:13:27.207 align:middle
我继续点击那个

00:13:29.243 --> 00:13:31.812 align:middle
几秒后 我们就完成应用的审查了

00:13:33.981 --> 00:13:35.582 align:middle
这些是发现的问题

00:13:36.517 --> 00:13:39.186 align:middle
可以进行选择

00:13:39.253 --> 00:13:41.054 align:middle
循环浏览这些问题

00:13:41.121 --> 00:13:42.556 align:middle
你会发现有

00:13:42.823 --> 00:13:46.660 align:middle
一个对应的红色高亮区显示问题

00:13:49.229 --> 00:13:51.965 align:middle
当然 如果你检查真实的设备

00:13:52.032 --> 00:13:53.500 align:middle
例如iPhone和iPad

00:13:54.301 --> 00:13:56.069 align:middle
就可能是这样的视图

00:13:57.304 --> 00:14:00.841 align:middle
如果你想指定问题的位置

00:13:57.304 --> 00:14:00.841 align:middle
如果你想指定问题的位置

00:14:00.908 --> 00:14:03.477 align:middle
就必须离开工具

00:14:03.744 --> 00:14:06.213 align:middle
关注iPhone或iPad

00:14:07.080 --> 00:14:08.448 align:middle
我们有的只是

00:14:08.882 --> 00:14:10.951 align:middle
一个还不错的功能

00:14:11.018 --> 00:14:14.021 align:middle
只是给你工具中有问题的相同元素的

00:14:14.087 --> 00:14:17.124 align:middle
一个小预览 一个截图

00:14:17.191 --> 00:14:19.860 align:middle
这样你可以继续关注工具本身

00:14:22.362 --> 00:14:24.131 align:middle
好了 我们有这些问题

00:14:24.898 --> 00:14:27.301 align:middle
下一步你想做的是什么

00:14:27.367 --> 00:14:28.502 align:middle
就是解决问题

00:14:29.436 --> 00:14:31.104 align:middle
先选择一个问题

00:14:31.905 --> 00:14:33.473 align:middle
元素没有描述

00:14:33.540 --> 00:14:39.213 align:middle
点击三角形展开获取更多信息

00:14:41.582 --> 00:14:44.618 align:middle
好了 所以是元素没有描述

00:14:44.985 --> 00:14:46.854 align:middle
相对应的代码是什么

00:14:47.387 --> 00:14:49.323 align:middle
你知道要编写哪一段代码吗

00:14:50.490 --> 00:14:52.326 align:middle
好吧 如果你在线

00:14:52.392 --> 00:14:55.195 align:middle
阅读所有关于辅助功能API的文件

00:14:55.262 --> 00:14:57.831 align:middle
可能可以给你一些修复问题的提示

00:14:58.432 --> 00:15:01.268 align:middle
但是今天我要展示
一种更便捷的解决方法

00:14:58.432 --> 00:15:01.268 align:middle
但是今天我要展示
一种更便捷的解决方法

00:15:01.768 --> 00:15:03.270 align:middle
只要点击这个问号

00:15:04.738 --> 00:15:07.574 align:middle
工具会识别哪个API需要修复

00:15:08.275 --> 00:15:11.478 align:middle
内容是 考虑设置辅助功能的标签

00:15:12.446 --> 00:15:15.616 align:middle
那么 在这一点上
如果你知道API如何工作

00:15:15.682 --> 00:15:18.752 align:middle
你只要直接进入代码进行修改

00:15:19.620 --> 00:15:22.689 align:middle
但如果想要更多
关于API如何运行的信息

00:15:23.223 --> 00:15:24.992 align:middle
可以点击这个链接

00:15:25.759 --> 00:15:30.330 align:middle
之后可以链接到像这样的文件

00:15:30.397 --> 00:15:34.168 align:middle
你可以找到更多关于API的信息

00:15:37.938 --> 00:15:40.541 align:middle
好了 因为我知道需要覆盖哪个API

00:15:40.941 --> 00:15:42.943 align:middle
所以直接进入代码 进行修复

00:15:50.083 --> 00:15:51.685 align:middle
我正在修复的

00:15:51.752 --> 00:15:54.321 align:middle
就是那些带点的按钮视图

00:15:54.788 --> 00:15:59.059 align:middle
而实现的方式
只不过是一个自定义UI视图

00:16:00.360 --> 00:16:01.328 align:middle
所以现在

00:16:02.429 --> 00:16:04.798 align:middle
我只要重写

00:16:06.166 --> 00:16:07.734 align:middle
辅助功能标签

00:16:11.471 --> 00:16:16.610 align:middle
再返回描写那些点的字符串

00:16:17.678 --> 00:16:20.814 align:middle
当然 你应该返回的是本地化字符串

00:16:22.249 --> 00:16:24.618 align:middle
好了吗？现在我用自己的编写方法

00:16:25.886 --> 00:16:28.722 align:middle
我要进行保存 运行 再运行

00:16:41.568 --> 00:16:43.237 align:middle
好 让我们返回Addition

00:16:45.405 --> 00:16:48.008 align:middle
清除有的老问题

00:16:49.343 --> 00:16:50.544 align:middle
再返回审查

00:16:53.447 --> 00:16:55.616 align:middle
代码做了小变动后

00:16:55.983 --> 00:16:58.252 align:middle
我们修复了一堆问题

00:16:58.318 --> 00:16:59.186 align:middle
很棒不是吗

00:17:06.760 --> 00:17:07.594 align:middle
好了

00:17:07.661 --> 00:17:11.431 align:middle
请注意这个同样强大的审查功能

00:17:11.498 --> 00:17:13.967 align:middle
可以由团队的其他成员使用

00:17:14.034 --> 00:17:17.271 align:middle
如代表你想要进行评估的质量检查人员

00:17:17.671 --> 00:17:20.607 align:middle
当然 他们会报告这些错误

00:17:23.911 --> 00:17:27.281 align:middle
为了加快报告流程

00:17:27.714 --> 00:17:30.083 align:middle
他们现在只要在运行审查后

00:17:30.150 --> 00:17:31.485 align:middle
复制黏贴

00:17:31.985 --> 00:17:33.587 align:middle
到错误报告中

00:17:34.154 --> 00:17:37.090 align:middle
当然 每个合格的错误报告

00:17:37.157 --> 00:17:38.425 align:middle
都应有屏幕截图

00:17:39.593 --> 00:17:42.829 align:middle
所以我们在这儿有个
Quick Look按钮

00:17:43.964 --> 00:17:45.132 align:middle
只要一点

00:17:46.200 --> 00:17:49.803 align:middle
就能够获得整个屏幕的截图

00:17:50.270 --> 00:17:53.473 align:middle
加上问题存在的蓝色框

00:17:54.308 --> 00:17:55.943 align:middle
你只要再一次复制

00:17:57.311 --> 00:17:59.046 align:middle
黏贴到你的错误报告中

00:17:59.112 --> 00:18:01.081 align:middle
现在你已经准备好发送错误报告了

00:17:59.112 --> 00:18:01.081 align:middle
现在你已经准备好发送错误报告了

00:18:17.364 --> 00:18:21.902 align:middle
好了 我们刚才看的就是审查功能如何

00:18:21.969 --> 00:18:25.105 align:middle
帮助你自动检测应用问题

00:18:25.839 --> 00:18:27.908 align:middle
并给你提供建议方案

00:18:27.975 --> 00:18:30.644 align:middle
甚至加快错误报告过程

00:18:32.813 --> 00:18:35.949 align:middle
这个功能的强大之处就是

00:18:36.016 --> 00:18:39.486 align:middle
帮助发现应用中的问题

00:18:39.553 --> 00:18:45.125 align:middle
类似于在Xcode的编译警告

00:18:45.692 --> 00:18:48.562 align:middle
没有警告不代表

00:18:48.629 --> 00:18:50.831 align:middle
应用 没有问题

00:18:51.498 --> 00:18:55.502 align:middle
这就是必须要进行一些人工审查的原因

00:18:57.604 --> 00:19:00.874 align:middle
为了说明其重要性

00:18:57.604 --> 00:19:00.874 align:middle
为了说明其重要性

00:19:01.475 --> 00:19:03.076 align:middle
我给大家举个例子

00:19:05.245 --> 00:19:07.181 align:middle
假设你有一个按钮

00:19:07.781 --> 00:19:09.583 align:middle
功能是发生邮件

00:19:10.684 --> 00:19:13.387 align:middle
当然 按钮带有一堆属性

00:19:14.588 --> 00:19:18.125 align:middle
当我们创建新按钮时 我们往往喜欢

00:19:18.458 --> 00:19:21.195 align:middle
简单地从现有按钮中选择一个

00:19:21.728 --> 00:19:22.729 align:middle
进行复制

00:19:23.730 --> 00:19:27.701 align:middle
当然 按钮所有的属性都进行传送

00:19:28.802 --> 00:19:30.871 align:middle
我们再去调整一些属性

00:19:30.938 --> 00:19:35.442 align:middle
像动作和图标

00:19:37.878 --> 00:19:39.847 align:middle
这没问题 一切都顺利

00:19:39.913 --> 00:19:44.084 align:middle
除非你忘了升级一些属性

00:19:44.151 --> 00:19:45.219 align:middle
会产生问题

00:19:45.285 --> 00:19:48.689 align:middle
特别是在这种情况下的
辅助功能标签属性

00:19:50.490 --> 00:19:52.860 align:middle
对于使用辅助技术
如VoiceOver的用户

00:19:53.427 --> 00:19:56.363 align:middle
辅助功能标签属性显得至关重要

00:19:56.430 --> 00:19:59.132 align:middle
原因是唯一拥有的信息

00:19:59.199 --> 00:20:01.568 align:middle
就是这个按钮的功能如何

00:19:59.199 --> 00:20:01.568 align:middle
就是这个按钮的功能如何

00:20:02.870 --> 00:20:07.708 align:middle
所以使用辅助技术
例如VoiceOver的用户

00:20:08.075 --> 00:20:10.244 align:middle
使用这个按钮
而辅助功能标签没有更新

00:20:10.310 --> 00:20:12.012 align:middle
提示说发送邮件

00:20:12.779 --> 00:20:15.749 align:middle
当他们按下按钮以为在发送邮件

00:20:15.816 --> 00:20:18.685 align:middle
但实际上是删除邮件

00:20:19.152 --> 00:20:20.654 align:middle
这就不是个好结果

00:20:23.156 --> 00:20:24.258 align:middle
对于这点

00:20:25.259 --> 00:20:28.929 align:middle
我们就要帮助大家使用工具

00:20:29.263 --> 00:20:30.230 align:middle
进行人工审查

00:20:30.397 --> 00:20:32.666 align:middle
这也是我要谈谈检查的原因

00:20:36.436 --> 00:20:38.772 align:middle
首先让我介绍下检查的一些亮点

00:20:38.839 --> 00:20:42.309 align:middle
以及是如何在人工审查过程中
帮助大家的

00:20:42.543 --> 00:20:45.946 align:middle
假设我们这里有一个按钮
其中有8个点

00:20:47.614 --> 00:20:51.685 align:middle
检查选项顶部有Quick Look

00:20:52.719 --> 00:20:58.892 align:middle
左边是描述区域

00:20:59.159 --> 00:21:02.229 align:middle
或者是总结元素如何描述的

00:20:59.159 --> 00:21:02.229 align:middle
或者是总结元素如何描述的

00:21:02.496 --> 00:21:05.899 align:middle
在这种8点按钮的情况下
我们只要说8

00:21:07.134 --> 00:21:09.503 align:middle
右边是导航按钮

00:21:09.570 --> 00:21:14.808 align:middle
让你轻松从该元素前往邻近的UI元素

00:21:14.875 --> 00:21:17.578 align:middle
通过这个按钮

00:21:19.713 --> 00:21:22.049 align:middle
下面是基本区

00:21:22.816 --> 00:21:26.987 align:middle
包含用于描述元素的属性

00:21:27.588 --> 00:21:29.590 align:middle
例如 我们有标签

00:21:29.656 --> 00:21:31.925 align:middle
与辅助标签相对应

00:21:31.992 --> 00:21:33.627 align:middle
返回值8

00:21:33.994 --> 00:21:34.895 align:middle
我们有Trait

00:21:34.962 --> 00:21:37.064 align:middle
这种情况下 一个按钮 返回按钮

00:21:38.699 --> 00:21:41.134 align:middle
因为这个按钮是相互作用的

00:21:42.569 --> 00:21:45.205 align:middle
你要考虑Action区域 看到

00:21:45.272 --> 00:21:48.308 align:middle
有Activate Action

00:21:48.575 --> 00:21:52.212 align:middle
这样你只要点击运行按钮就能

00:21:52.279 --> 00:21:53.614 align:middle
验证这个活动生效

00:21:56.149 --> 00:21:58.185 align:middle
这就是检查的亮点之一

00:21:58.252 --> 00:22:02.356 align:middle
让我继续给大家做一个演示

00:21:58.252 --> 00:22:02.356 align:middle
让我继续给大家做一个演示

00:22:12.332 --> 00:22:14.868 align:middle
好了 我们回到应用

00:22:15.736 --> 00:22:18.272 align:middle
现在我们要进入检查选项

00:22:19.773 --> 00:22:23.277 align:middle
记得之前我提到有这个
Inspection Pointer

00:22:23.343 --> 00:22:26.313 align:middle
现在启用了 就意味着 我把鼠标

00:22:26.380 --> 00:22:29.616 align:middle
放在模拟器该项目上方

00:22:29.850 --> 00:22:33.720 align:middle
工具会开始检查光标下的元素

00:22:34.121 --> 00:22:36.023 align:middle
你可以看见绿色的亮点

00:22:37.691 --> 00:22:39.593 align:middle
在桌面模拟器上

00:22:39.660 --> 00:22:43.130 align:middle
你如果单击项目

00:22:44.631 --> 00:22:46.633 align:middle
就会关闭Inspection Pointer

00:22:46.934 --> 00:22:49.770 align:middle
就可以四处移动鼠标

00:22:49.837 --> 00:22:52.072 align:middle
却不会影响检查项目

00:22:53.473 --> 00:22:57.144 align:middle
我们正在检查addition
你看到描述

00:22:57.578 --> 00:23:00.514 align:middle
现在我点击进入下一元素按钮

00:22:57.578 --> 00:23:00.514 align:middle
现在我点击进入下一元素按钮

00:23:01.982 --> 00:23:04.818 align:middle
你会看见亮点下降到这些按钮

00:23:06.153 --> 00:23:07.988 align:middle
再点击 进入下一个

00:23:08.055 --> 00:23:10.624 align:middle
同样得到描述 这是4点按钮

00:23:11.658 --> 00:23:15.395 align:middle
注意我们完全绕过

00:23:15.462 --> 00:23:17.865 align:middle
了重要的事情： 这个方程

00:23:18.932 --> 00:23:20.868 align:middle
只要进行这个导航

00:23:20.934 --> 00:23:24.071 align:middle
就能找到伴随的问题

00:23:24.137 --> 00:23:26.940 align:middle
这种情况下 可能方程会有问题

00:23:28.308 --> 00:23:29.243 align:middle
我们继续往下

00:23:30.410 --> 00:23:32.980 align:middle
我们在8点 9点

00:23:34.081 --> 00:23:36.216 align:middle
再到帮助按钮

00:23:36.283 --> 00:23:39.386 align:middle
除了描述看起来不太好 对吧

00:23:39.453 --> 00:23:41.555 align:middle
IMG 0151

00:23:41.889 --> 00:23:45.659 align:middle
不太对头
再一次 可能是另一个潜在区域

00:23:46.126 --> 00:23:47.427 align:middle
需要修复

00:23:48.529 --> 00:23:52.466 align:middle
如果可以简单使用
Quick Look区域

00:23:52.533 --> 00:23:55.135 align:middle
在所有应用UI进行导航

00:23:55.202 --> 00:23:59.606 align:middle
并验证描述是否都正确无误

00:24:00.174 --> 00:24:01.675 align:middle
然后你就在正确的轨道上了

00:24:02.142 --> 00:24:06.180 align:middle
当然 如果你有其他交互UI

00:24:06.246 --> 00:24:07.314 align:middle
类似这些按钮

00:24:08.182 --> 00:24:10.217 align:middle
你只要去
Action Section

00:24:11.351 --> 00:24:12.186 align:middle
现在

00:24:13.020 --> 00:24:16.790 align:middle
我点击执行按钮激活该按钮

00:24:16.857 --> 00:24:18.559 align:middle
来验证活动效果

00:24:21.028 --> 00:24:23.063 align:middle
很好 我刚才展示的

00:24:23.130 --> 00:24:25.399 align:middle
就是如何使用检查

00:24:25.799 --> 00:24:30.938 align:middle
来帮助你进行应用人工审查

00:24:31.805 --> 00:24:36.610 align:middle
现在检查对与应用辅助功能状态

00:24:36.677 --> 00:24:39.880 align:middle
的调试和分析也有很大帮助

00:24:40.881 --> 00:24:45.953 align:middle
其中一个例子就是
理解辅助层次结构如何工作

00:24:46.019 --> 00:24:49.456 align:middle
这个很重要
特别是在OS X应用上

00:24:49.823 --> 00:24:54.261 align:middle
其中相应的视图层次会变得更复杂

00:24:54.728 --> 00:24:56.530 align:middle
为了展示该功能如何作用

00:24:56.597 --> 00:24:59.666 align:middle
我继续运行同一应用的OS X版本

00:25:07.407 --> 00:25:10.577 align:middle
好了 这是OS X 版本的应用

00:25:11.879 --> 00:25:14.982 align:middle
我们进行稍微复杂一些的处理 乘法

00:25:15.983 --> 00:25:17.818 align:middle
当你进行3乘以6

00:25:17.885 --> 00:25:19.920 align:middle
不好意思 再来一次

00:25:19.987 --> 00:25:21.021 align:middle
这次怎么样

00:25:21.088 --> 00:25:23.857 align:middle
错误 再来 3乘以6 18

00:25:23.924 --> 00:25:24.758 align:middle
正确

00:25:25.459 --> 00:25:28.962 align:middle
好了 你进行一样的操作
就知道 这个应用怎么工作了

00:25:29.029 --> 00:25:32.766 align:middle
在iOS和OS X上运行一样的应用

00:25:34.601 --> 00:25:35.435 align:middle
好了

00:25:35.669 --> 00:25:37.204 align:middle
首先要做的就是

00:25:37.371 --> 00:25:41.308 align:middle
告诉工具你要检查一个新设备

00:25:41.975 --> 00:25:43.844 align:middle
我们开始选择

00:25:44.278 --> 00:25:48.115 align:middle
我的MacBook Pro原因是
我们正在检查机子本身

00:25:48.182 --> 00:25:51.685 align:middle
这种情况下
我们应选择先要检查的应用

00:25:51.752 --> 00:25:53.387 align:middle
我想选择Math Learner

00:25:55.455 --> 00:25:59.126 align:middle
我们可以再次运行
审查功能看看发现什么问题

00:25:59.426 --> 00:26:00.894 align:middle
发现了一堆问题

00:25:59.426 --> 00:26:00.894 align:middle
发现了一堆问题

00:26:03.197 --> 00:26:05.699 align:middle
我希望大家注意这四个问题

00:26:06.300 --> 00:26:08.402 align:middle
就是 可能无法访问的元素

00:26:08.669 --> 00:26:14.174 align:middle
执行这些答案选项
它们只是自定义的NSview

00:26:14.575 --> 00:26:17.244 align:middle
这是通过CA文本图层绘制文本

00:26:18.111 --> 00:26:21.381 align:middle
现在 在默认情况下
CA各层没有辅助支持

00:26:21.782 --> 00:26:23.283 align:middle
意味着如果你创建它们

00:26:23.984 --> 00:26:26.653 align:middle
VoiceOver客户
就无法看见它们

00:26:27.154 --> 00:26:30.691 align:middle
工具正在告诉你
这些不能访问

00:26:31.558 --> 00:26:33.227 align:middle
为了了解如何解决这个问题

00:26:33.293 --> 00:26:36.897 align:middle
帮助了解如何可及性层级如何工作

00:26:38.098 --> 00:26:39.566 align:middle
我们前往检查

00:26:41.602 --> 00:26:44.104 align:middle
再次 打开Inspection Pointer

00:26:44.905 --> 00:26:46.974 align:middle
如果我把鼠标这样

00:26:47.374 --> 00:26:50.077 align:middle
再次 检查鼠标下的内容

00:26:50.143 --> 00:26:53.747 align:middle
我想要检查的是整个窗口

00:26:54.414 --> 00:26:56.750 align:middle
原因是我想知道

00:26:56.817 --> 00:26:59.987 align:middle
这个窗口的子元素有哪些

00:27:02.389 --> 00:27:04.191 align:middle
所以 我能看到的

00:27:04.258 --> 00:27:07.160 align:middle
就是我在层级区域下能看到的

00:27:09.329 --> 00:27:12.799 align:middle
这些是该窗口的所有子元素

00:27:14.668 --> 00:27:17.704 align:middle
我放到方程上方 你能看到红色的亮点

00:27:18.405 --> 00:27:19.773 align:middle
在图像上

00:27:20.541 --> 00:27:21.808 align:middle
一些状态文本上

00:27:21.875 --> 00:27:25.212 align:middle
还有工具了部分的一堆东西

00:27:25.812 --> 00:27:26.813 align:middle
现在

00:27:27.014 --> 00:27:32.486 align:middle
那四个关键答案选项按钮
就不再是窗口子元素

00:27:33.720 --> 00:27:35.789 align:middle
我们知道要进行修复

00:27:35.889 --> 00:27:38.292 align:middle
但今天 我不会演示如何修复

00:27:38.992 --> 00:27:41.461 align:middle
而是 让大家看看

00:27:41.528 --> 00:27:44.965 align:middle
我们示例代码辅助UI例子

00:27:45.432 --> 00:27:48.035 align:middle
可以从developer.apple.com下载

00:27:48.602 --> 00:27:50.204 align:middle
这个示例应用包含

00:27:50.270 --> 00:27:52.739 align:middle
一整个UI场景数据库

00:27:53.006 --> 00:27:56.243 align:middle
你可以向里面增添辅助支持

00:27:56.944 --> 00:27:58.345 align:middle
我建议大家这么做

00:27:58.979 --> 00:28:00.514 align:middle
一旦修复

00:27:58.979 --> 00:28:00.514 align:middle
一旦修复

00:28:01.081 --> 00:28:04.685 align:middle
我希望那四个答案选项按钮

00:28:04.751 --> 00:28:08.121 align:middle
就会作为窗口的子元素

00:28:08.188 --> 00:28:11.091 align:middle
你就可以在该层级验证它

00:28:17.030 --> 00:28:19.833 align:middle
我之前展示的都是

00:28:19.900 --> 00:28:21.702 align:middle
如何使用检查功能

00:28:21.768 --> 00:28:24.338 align:middle
帮助大家进行人工审查

00:28:25.038 --> 00:28:27.574 align:middle
以及如何使用检查功能

00:28:27.641 --> 00:28:32.112 align:middle
进行应用辅助状态的调试和分析

00:28:33.046 --> 00:28:34.681 align:middle
下面我想要谈谈

00:28:35.849 --> 00:28:37.518 align:middle
设置

00:28:39.620 --> 00:28:42.089 align:middle
在所有OS平台上

00:28:42.155 --> 00:28:45.192 align:middle
我们有着很多辅助功能设置

00:28:45.492 --> 00:28:47.160 align:middle
自带内置

00:28:48.228 --> 00:28:50.464 align:middle
例如在iPhone上

00:28:51.031 --> 00:28:56.737 align:middle
在“常规辅助功能”下设置应用

00:28:57.271 --> 00:28:58.272 align:middle
你会发现

00:28:58.338 --> 00:29:01.642 align:middle
许多很棒的内置辅助功能

00:28:58.338 --> 00:29:01.642 align:middle
许多很棒的内置辅助功能

00:29:02.009 --> 00:29:04.178 align:middle
像Toggle一样设置

00:29:04.811 --> 00:29:09.483 align:middle
如果你想知道
动态字体如何影响你的应用

00:29:09.850 --> 00:29:11.084 align:middle
你可以进入

00:29:11.451 --> 00:29:12.853 align:middle
调整字体大小

00:29:14.021 --> 00:29:15.389 align:middle
调到很大

00:29:16.023 --> 00:29:17.191 align:middle
然后返回应用

00:29:18.025 --> 00:29:21.028 align:middle
就能直观验证大字体在应用的效果

00:29:22.496 --> 00:29:24.565 align:middle
然后再返回设置应用

00:29:25.799 --> 00:29:27.968 align:middle
重新调到很小

00:29:28.402 --> 00:29:32.272 align:middle
再看看很小的字体在应用的效果

00:29:35.609 --> 00:29:39.179 align:middle
现在 你可以看到这会很繁琐

00:29:39.379 --> 00:29:42.149 align:middle
如果你一直在设置应用和自己的应用

00:29:42.216 --> 00:29:44.418 align:middle
之间来回切换

00:29:45.619 --> 00:29:46.453 align:middle
还有

00:29:47.054 --> 00:29:48.488 align:middle
你又该如何知道

00:29:48.856 --> 00:29:51.959 align:middle
那个辅助设置对测试来说很重要

00:29:52.993 --> 00:29:55.162 align:middle
好了 我们的工具可以给出答案

00:29:58.966 --> 00:30:00.701 align:middle
这是我们的设置选项

00:29:58.966 --> 00:30:00.701 align:middle
这是我们的设置选项

00:30:04.204 --> 00:30:06.240 align:middle
我们的设置选项显示

00:30:06.406 --> 00:30:09.643 align:middle
了一些最常见的辅助功能设置

00:30:09.710 --> 00:30:11.345 align:middle
希望你们测试一下

00:30:12.479 --> 00:30:14.715 align:middle
另外 因为工具中内置

00:30:15.148 --> 00:30:18.185 align:middle
你不必再在应用之间来回切换

00:30:25.425 --> 00:30:28.428 align:middle
这个演示告诉大家如何操作

00:30:29.196 --> 00:30:31.932 align:middle
在设置选项中 大家可以反转颜色

00:30:32.332 --> 00:30:36.503 align:middle
并立刻看到呈现在应用中的效果

00:30:37.704 --> 00:30:39.907 align:middle
我们可以对字体大小做同样的处理

00:30:39.973 --> 00:30:40.807 align:middle
调整

00:30:41.808 --> 00:30:42.876 align:middle
直接看到效果

00:30:54.621 --> 00:30:55.923 align:middle
你刚才看到的

00:30:57.291 --> 00:31:01.662 align:middle
就是设置功能带来的便利

00:30:57.291 --> 00:31:01.662 align:middle
就是设置功能带来的便利

00:31:02.095 --> 00:31:04.598 align:middle
今天我给大家展示了三大功能

00:31:05.866 --> 00:31:08.502 align:middle
第一是审查功能

00:31:08.569 --> 00:31:12.272 align:middle
帮助大家自动检测应用的辅助功能问题

00:31:13.273 --> 00:31:15.075 align:middle
并给出修复建议

00:31:15.442 --> 00:31:17.945 align:middle
让大家更快速地报告问题

00:31:20.480 --> 00:31:23.884 align:middle
然后我们看到了检查功能的强大之处

00:31:24.151 --> 00:31:26.720 align:middle
指导大家进行整个人工审查过程

00:31:27.087 --> 00:31:31.491 align:middle
并对应用的辅助功能状态
进行调试和分析

00:31:32.593 --> 00:31:35.095 align:middle
最后就是刚刚看到的设置功能

00:31:35.429 --> 00:31:37.598 align:middle
便于大家查看测试

00:31:37.664 --> 00:31:42.102 align:middle
辅助功能的设置改变在应用上的效果

00:31:43.337 --> 00:31:48.242 align:middle
有关辅助检查功能的简要介绍就是这些

00:31:56.149 --> 00:31:57.251 align:middle
好极了 谢谢Patti

00:31:58.886 --> 00:32:03.123 align:middle
我们期待大家
体验我们全新的辅助功能检查

00:31:58.886 --> 00:32:03.123 align:middle
我们期待大家
体验我们全新的辅助功能检查

00:32:04.291 --> 00:32:05.659 align:middle
也希望

00:32:05.993 --> 00:32:10.430 align:middle
大家在设计下一个应用时能努力

00:32:10.497 --> 00:32:12.566 align:middle
确保所有用户的需求

00:32:13.233 --> 00:32:14.601 align:middle
为了帮助大家实现这一目标

00:32:14.935 --> 00:32:17.971 align:middle
我们今天给大家介绍了
全新的辅助功能检查

00:32:18.405 --> 00:32:23.110 align:middle
希望能让大家更便捷地找到
诊断并修复

00:32:23.177 --> 00:32:24.811 align:middle
应用中的辅助功能问题

00:32:26.914 --> 00:32:30.083 align:middle
与开发流程无缝整合

00:32:30.651 --> 00:32:34.188 align:middle
这样大家就能简单地检查和审查应用

00:32:34.254 --> 00:32:36.823 align:middle
不论是在模拟器还是在设备上运行

00:32:37.958 --> 00:32:41.628 align:middle
我们很高兴告诉大家支持所有平台

00:32:41.695 --> 00:32:45.299 align:middle
包括macOS iOS
watchOS和tvOS

00:32:46.433 --> 00:32:48.602 align:middle
我们希望这款新工具

00:32:48.669 --> 00:32:51.004 align:middle
能够让大家编写出优秀的应用

00:32:51.071 --> 00:32:53.907 align:middle
让不同能力的用户都能使用的应用

00:32:55.943 --> 00:33:00.480 align:middle
你可以在该URL中的视频和文本中
找到更多相关信息

00:32:55.943 --> 00:33:00.480 align:middle
你可以在该URL中的视频和文本中
找到更多相关信息

00:33:01.782 --> 00:33:05.018 align:middle
我们期待收到大家的反馈
真诚希望听到大家

00:33:05.085 --> 00:33:08.856 align:middle
对于如何更好支持
开发工作的意见以及在

00:33:08.922 --> 00:33:11.692 align:middle
使用该检查时遇到的问题

00:33:12.459 --> 00:33:15.062 align:middle
你可以给我们传送改进和错误请求

00:33:15.128 --> 00:33:18.699 align:middle
不好意思 是报告不是请求 错误报告

00:33:19.099 --> 00:33:21.301 align:middle
在bugreport.apple.com上

00:33:21.368 --> 00:33:24.037 align:middle
也可以加入我们的开发人员论坛

00:33:24.104 --> 00:33:27.107 align:middle
网址forums.developer.apple.com

00:33:28.609 --> 00:33:30.177 align:middle
要是你昨天错过

00:33:30.244 --> 00:33:34.114 align:middle
我们推荐大家去回顾
并观看这些精彩的演讲视频

00:33:34.181 --> 00:33:36.783 align:middle
包括“辅助功能新变化”的演讲

00:33:36.850 --> 00:33:38.785 align:middle
和“包容性应用设计”的演讲

00:33:39.653 --> 00:33:40.988 align:middle
今晚我们

00:33:41.054 --> 00:33:43.924 align:middle
在Buena Vista Park
举行辅助功能技术和

00:33:44.258 --> 00:33:45.592 align:middle
包容性设计的讨论会

00:33:45.659 --> 00:33:48.028 align:middle
不是真正的公园
而是设在一楼的会议厅

00:33:48.128 --> 00:33:49.530 align:middle
期待与大家在那儿相见

00:33:49.696 --> 00:33:52.533 align:middle
谢谢大家
尽情享受接下来的大会内容
