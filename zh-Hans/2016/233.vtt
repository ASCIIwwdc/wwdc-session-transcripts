WEBVTT

00:00:19.453 --> 00:00:25.325
<c.magenta>令应用自适应 第二部分</c>

00:00:27.394 --> 00:00:30.330
<c.magenta>早上好</c>
<c.magenta>我叫David Duncan</c>

00:00:30.564 --> 00:00:33.333
<c.magenta>和Kurt Revis一起</c>
<c.magenta>今天我们要讲讲</c>

00:00:33.400 --> 00:00:35.769
<c.magenta>如何使应用自适应</c>

00:00:36.737 --> 00:00:41.241
<c.magenta>那么 第一部分你们会看到</c>
<c.magenta>Interface Builder加入了的</c>

00:00:41.308 --> 00:00:43.343
<c.magenta>工具</c>

00:00:43.610 --> 00:00:47.981
<c.magenta>以及做自适应布局的基础</c>

00:00:48.815 --> 00:00:50.784
<c.magenta>这个部分中</c>
<c.magenta>我们会跟你讲更多</c>

00:00:50.851 --> 00:00:55.155
<c.magenta>能帮助你做自适应应用的技巧</c>

00:00:56.156 --> 00:00:57.791
<c.magenta>以及自己定制想要的体验</c>

00:00:57.858 --> 00:01:01.261
<c.magenta>同时保持自适应性</c>
<c.magenta>所需要写的代码</c>

00:00:57.858 --> 00:01:01.261
<c.magenta>同时保持自适应性</c>
<c.magenta>所需要写的代码</c>

00:01:02.062 --> 00:01:04.164
<c.magenta>那么 看看今天的议程</c>

00:01:05.065 --> 00:01:07.100
<c.magenta>我们要谈的第一个</c>

00:01:07.167 --> 00:01:11.805
<c.magenta>只是一些尺寸和屏幕分类的基础</c>
<c.magenta>帮助大家温习一下</c>

00:01:12.940 --> 00:01:18.478
<c.magenta>我们还要讲讲在UIKit工具中已经</c>
<c.magenta>有的一些东西</c>

00:01:18.545 --> 00:01:24.117
<c.magenta>能够帮助你用Interface Builder</c>
<c.magenta>最有效利用UIKit</c>

00:01:25.018 --> 00:01:28.021
<c.magenta>最后 Kurt会上来讲</c>

00:01:28.088 --> 00:01:32.526
<c.magenta>怎样跨屏幕构造自定义体验</c>

00:01:33.327 --> 00:01:35.329
<c.magenta>那么 让我们从尺寸开始</c>

00:01:37.364 --> 00:01:39.099
<c.magenta>好 尺寸</c>

00:01:39.600 --> 00:01:41.802
<c.magenta>如果直接拿过来所有的设备</c>

00:01:41.869 --> 00:01:44.805
<c.magenta>和它们的设备方向</c>
<c.magenta>和它们在屏幕上的适配</c>

00:01:44.872 --> 00:01:48.308
<c.magenta>这样看起来是很复杂的一些东西呢</c>

00:01:48.609 --> 00:01:51.245
<c.magenta>我不认为任何人会想把这些问题都</c>
<c.magenta>连根拔起</c>

00:01:51.478 --> 00:01:53.981
<c.magenta>搞清楚它们的布局看上去怎么样</c>
<c.magenta>使它工作</c>

00:01:54.047 --> 00:01:57.551
<c.magenta>让我们看看是否可以</c>
<c.magenta>将需简化的所有这些做个图表</c>

00:02:00.254 --> 00:02:04.091
<c.magenta>好吧 还是挺复杂的</c>

00:02:04.157 --> 00:02:07.628
<c.magenta>你不必读它</c>
<c.magenta>这些文本很难看清楚</c>

00:02:07.694 --> 00:02:11.665
<c.magenta>看看把文字和颜色去掉会不会简单些</c>

00:02:12.232 --> 00:02:15.235
<c.magenta>并没有什么帮助</c>
<c.magenta>那么我们还可以怎么做？</c>

00:02:16.003 --> 00:02:21.942
<c.magenta>好吧 我们在UIKit考虑该问题时</c>
<c.magenta>我们会想可以怎样</c>

00:02:22.042 --> 00:02:26.747
<c.magenta>分配空间</c>
<c.magenta>给用户创造好的体验？</c>

00:02:28.215 --> 00:02:32.252
<c.magenta>正如你已经猜到的</c>
<c.magenta>我们在讲的是屏幕分类</c>

00:02:32.920 --> 00:02:38.592
<c.magenta>用网格分开 分成紧凑宽度</c>
<c.magenta>和常规宽度</c>

00:02:38.659 --> 00:02:40.394
<c.magenta>紧凑高度和常规高度</c>

00:02:40.794 --> 00:02:44.264
<c.magenta>我们决定 当你在紧凑型时</c>

00:02:44.331 --> 00:02:48.068
<c.magenta>你会有更接近iPhone的体验</c>
<c.magenta>更好运用空间</c>

00:02:48.702 --> 00:02:53.507
<c.magenta>但当在常规型时</c>
<c.magenta>你可以做到一些更高级的事</c>

00:02:53.574 --> 00:02:57.110
<c.magenta>真正利用空间做到更有趣的一些事</c>

00:02:58.011 --> 00:03:02.850
<c.magenta>那么从中学到的就是</c>
<c.magenta>当你看到常规尺寸时</c>

00:02:58.011 --> 00:03:02.850
<c.magenta>那么从中学到的就是</c>
<c.magenta>当你看到常规尺寸时</c>

00:03:03.183 --> 00:03:07.054
<c.magenta>就是给了你机会给用户</c>
<c.magenta>提供更好的用户体验</c>

00:03:07.120 --> 00:03:08.288
<c.magenta>利用空间</c>

00:03:08.355 --> 00:03:11.291
<c.magenta>超越能在紧凑型尺寸办到的</c>

00:03:12.292 --> 00:03:16.897
<c.magenta>那么 看看基于屏幕分类 UIKit</c>
<c.magenta>已经能办到的</c>

00:03:18.298 --> 00:03:21.001
<c.magenta>大部分视图和控制实际上并没有变</c>

00:03:21.768 --> 00:03:23.237
<c.magenta>如果你看一下开关</c>

00:03:23.303 --> 00:03:25.639
<c.magenta>它在紧凑型还是常规型是一样的</c>

00:03:25.806 --> 00:03:28.709
<c.magenta>导航条在紧凑型还是常规型也是一样的</c>

00:03:28.976 --> 00:03:30.577
<c.magenta>但什么会变呢？</c>

00:03:31.812 --> 00:03:33.413
<c.magenta>好吧 这里有个展示</c>

00:03:33.780 --> 00:03:37.284
<c.magenta>看上去是个全屏展示</c>
<c.magenta>在iPhone 6s Plus上</c>

00:03:37.784 --> 00:03:42.122
<c.magenta>如果我们旋转设备 把它放在紧凑型时</c>
<c.magenta>我们看到一个表单</c>

00:03:42.756 --> 00:03:45.492
<c.magenta>所以在展示中看到的一件事是</c>

00:03:45.626 --> 00:03:49.263
<c.magenta>如果你在常规型尺寸展示表单</c>

00:03:49.329 --> 00:03:52.966
<c.magenta>转而到紧凑型尺寸</c>
<c.magenta>不会有足够的空间来展示</c>

00:03:53.033 --> 00:03:55.636
<c.magenta>所以会把它改成全屏展示</c>

00:03:56.937 --> 00:04:00.908
<c.magenta>现在在UIKit中做着最复杂的适配</c>

00:03:56.937 --> 00:04:00.908
<c.magenta>现在在UIKit中做着最复杂的适配</c>

00:04:00.974 --> 00:04:03.210
<c.magenta>基于屏幕分类和有限空间</c>

00:04:03.510 --> 00:04:05.179
<c.magenta>的是UISplitViewController</c>

00:04:05.679 --> 00:04:10.918
<c.magenta>在iPhone 6s Plus上看</c>
<c.magenta>紧凑型宽度的观看体验</c>

00:04:11.318 --> 00:04:14.021
<c.magenta>会看到 如同你常常体验到的</c>

00:04:14.087 --> 00:04:17.224
<c.magenta>只能看到一个能够推送、弹出东西</c>
<c.magenta>的导航控制器</c>

00:04:17.658 --> 00:04:20.627
<c.magenta>我们再旋转到紧凑型宽度时</c>

00:04:21.028 --> 00:04:22.462
<c.magenta>就引入了边栏</c>

00:04:22.629 --> 00:04:27.868
<c.magenta>在iPhone 6s Plus上</c>
<c.magenta>我们认为所有常规型尺寸的空间</c>

00:04:27.935 --> 00:04:32.539
<c.magenta>有边栏比没有带来的用户体验更好</c>

00:04:32.973 --> 00:04:36.243
<c.magenta>尽管我们只有这么些空间来加上它</c>

00:04:37.211 --> 00:04:41.348
<c.magenta>跟在iPad上相似</c>
<c.magenta>横屏9.7英寸iPad</c>

00:04:41.415 --> 00:04:44.551
<c.magenta>你会看到也有边栏</c>

00:04:44.618 --> 00:04:47.120
<c.magenta>让你更方便切换于不同邮件之间</c>

00:04:47.788 --> 00:04:49.823
<c.magenta>如果换到竖屏怎么办？</c>

00:04:50.691 --> 00:04:53.393
<c.magenta>记住 在iPad上还是常规型尺寸</c>

00:04:54.061 --> 00:04:57.598
<c.magenta>但是我们觉得在iPad上通常有内容</c>

00:04:57.731 --> 00:05:00.234
<c.magenta>更大、更有趣的内容</c>

00:04:57.731 --> 00:05:00.234
<c.magenta>更大、更有趣的内容</c>

00:05:00.300 --> 00:05:04.104
<c.magenta>内联图像等等</c>
<c.magenta>你需要多余空间</c>

00:05:04.471 --> 00:05:07.374
<c.magenta>来和内容交互</c>

00:05:08.041 --> 00:05:11.411
<c.magenta>然而 我们允许你在边栏切换</c>

00:05:11.478 --> 00:05:14.681
<c.magenta>这样你还是能方便切换于不同邮件之间</c>

00:05:15.415 --> 00:05:19.620
<c.magenta>这就是UIKit的一些</c>

00:05:19.686 --> 00:05:24.525
<c.magenta>基于两种屏幕分类</c>
<c.magenta>提供最好体验的功能</c>

00:05:24.591 --> 00:05:26.660
<c.magenta>和有限的实际空间</c>

00:05:27.528 --> 00:05:31.832
<c.magenta>为了更好利用它</c>
<c.magenta>让我们看看UIKit的一些实践</c>

00:05:32.232 --> 00:05:35.802
<c.magenta>充分利用现有功能</c>

00:05:36.870 --> 00:05:40.908
<c.magenta>讲讲Xcode工具里UIKit的</c>

00:05:41.074 --> 00:05:42.943
<c.magenta>第一部分中</c>

00:05:43.010 --> 00:05:46.713
<c.magenta>你们看过了Interface Builder的用来做自适应</c>
<c.magenta>应用的增强功能</c>

00:05:47.181 --> 00:05:50.684
<c.magenta>为了在所有范围轻易做调试</c>
<c.magenta>基于屏幕分类</c>

00:05:50.751 --> 00:05:51.652
<c.magenta>和特征</c>

00:05:52.519 --> 00:05:55.689
<c.magenta>但是 Xcode还提供了资源目录</c>

00:05:55.756 --> 00:05:59.293
<c.magenta>资源目录很棒</c>
<c.magenta>不仅用来整理图像</c>

00:05:59.359 --> 00:06:02.663
<c.magenta>还指定了什么时候该用这些图像</c>

00:05:59.359 --> 00:06:02.663
<c.magenta>还指定了什么时候该用这些图像</c>

00:06:03.931 --> 00:06:06.466
<c.magenta>当然UIKit有很多技术</c>

00:06:06.600 --> 00:06:08.735
<c.magenta>让构建自适应应用变得简单</c>

00:06:09.403 --> 00:06:11.738
<c.magenta>我们讨论自动布局很多年了</c>

00:06:11.805 --> 00:06:14.007
<c.magenta>有很多相关演讲</c>
<c.magenta>如果你想了解</c>

00:06:14.074 --> 00:06:15.309
<c.magenta>可以去回顾它们</c>

00:06:15.475 --> 00:06:18.879
<c.magenta>当然今天稍晚些有个演讲</c>
<c.magenta>关于自动布局的新进展</c>

00:06:20.013 --> 00:06:22.850
<c.magenta>特征集合在第一部分回顾过了</c>

00:06:23.684 --> 00:06:26.153
<c.magenta>但还有别的东西比如动态字体</c>

00:06:26.486 --> 00:06:29.756
<c.magenta>让你的应用适应不同字体大小</c>

00:06:29.823 --> 00:06:31.158
<c.magenta>基于用户想使用的</c>

00:06:32.426 --> 00:06:36.163
<c.magenta>布局导引是个很好的方式</c>
<c.magenta>用于传递自动布局信息</c>

00:06:36.230 --> 00:06:37.331
<c.magenta>向层级下</c>

00:06:37.431 --> 00:06:40.701
<c.magenta>我们会讨论一些UIKit默认提供的</c>
<c.magenta>一些布局导引</c>

00:06:41.835 --> 00:06:44.505
<c.magenta>最后UIAppearance能很好</c>

00:06:44.571 --> 00:06:48.342
<c.magenta>声明指定你想让你的应用</c>

00:06:48.408 --> 00:06:49.843
<c.magenta>控制和视图看上去怎样</c>

00:06:51.178 --> 00:06:53.380
<c.magenta>让我们从资源目录开始</c>

00:06:54.581 --> 00:06:58.919
<c.magenta>资源目录让你自动适应图像</c>

00:06:59.052 --> 00:07:02.022
<c.magenta>基于图像所在展示的特征环境</c>

00:06:59.052 --> 00:07:02.022
<c.magenta>基于图像所在展示的特征环境</c>

00:07:02.890 --> 00:07:04.391
<c.magenta>这里有个小例子</c>

00:07:04.958 --> 00:07:07.427
<c.magenta>这里是些Sophia宝宝的图片</c>

00:07:07.594 --> 00:07:11.231
<c.magenta>有1x 2x 3x版本的图像</c>

00:07:11.565 --> 00:07:16.537
<c.magenta>不管你在iPad 2</c>
<c.magenta>还是iPhone 6s Plus上</c>

00:07:16.703 --> 00:07:20.741
<c.magenta>你会得到那个设备下最好分辨率</c>
<c.magenta>的图像</c>

00:07:21.842 --> 00:07:23.377
<c.magenta>另一个优点是</c>

00:07:23.443 --> 00:07:27.314
<c.magenta>资源目录可以为应用瘦身设计</c>

00:07:27.648 --> 00:07:32.553
<c.magenta>这意味着如果我指定这个应用</c>
<c.magenta>给iPhone 6s</c>

00:07:32.619 --> 00:07:36.356
<c.magenta>一个2x设备</c>
<c.magenta>我不用付出空间损失</c>

00:07:36.423 --> 00:07:38.859
<c.magenta>给携带1x和3x的图片</c>

00:07:39.693 --> 00:07:43.197
<c.magenta>同样的 还压缩了图像基于屏幕分类</c>

00:07:43.263 --> 00:07:44.298
<c.magenta>和其他一些东西</c>

00:07:44.431 --> 00:07:46.266
<c.magenta>那么 用资源目录</c>

00:07:46.333 --> 00:07:49.036
<c.magenta>可以给图像做最好的细分</c>

00:07:49.136 --> 00:07:50.671
<c.magenta>让你用尽量少的容量</c>

00:07:50.737 --> 00:07:52.706
<c.magenta>部署给用户设备的时候</c>

00:07:54.541 --> 00:07:57.644
<c.magenta>另外 资源目录提供了元数据信息</c>

00:07:57.711 --> 00:08:00.647
<c.magenta>为了各种理由添加到图像上的</c>

00:07:57.711 --> 00:08:00.647
<c.magenta>为了各种理由添加到图像上的</c>

00:08:00.914 --> 00:08:03.717
<c.magenta>第一件要讨论的是对齐嵌入物</c>

00:08:03.851 --> 00:08:05.552
<c.magenta>把Sophia宝宝弄回来</c>

00:08:06.153 --> 00:08:07.988
<c.magenta>比如有个应用</c>

00:08:08.055 --> 00:08:12.025
<c.magenta>有时我们要剪裁这张图片成正方形</c>

00:08:12.726 --> 00:08:15.329
<c.magenta>如果随便取中间部分</c>

00:08:15.395 --> 00:08:16.830
<c.magenta>会看不见她大部分的脸</c>

00:08:16.997 --> 00:08:20.667
<c.magenta>真正要的部分是在她脸上画个正方形</c>

00:08:21.768 --> 00:08:23.504
<c.magenta>现在你该怎么办？</c>

00:08:23.570 --> 00:08:25.405
<c.magenta>要引入一些度量</c>

00:08:25.472 --> 00:08:28.041
<c.magenta>搞清楚从边到正方形的距离</c>

00:08:29.009 --> 00:08:33.046
<c.magenta>不用把这些写入代码和资源相连</c>

00:08:33.447 --> 00:08:36.049
<c.magenta>你可以直接在资源目录完成这些</c>

00:08:36.582 --> 00:08:40.254
<c.magenta>UIImage会在你需要时</c>
<c.magenta>提供这些数值</c>

00:08:40.419 --> 00:08:43.023
<c.magenta>类似的 你可以用这些数值创建图像</c>

00:08:43.090 --> 00:08:44.958
<c.magenta>把图像放进资源目录</c>

00:08:45.025 --> 00:08:48.495
<c.magenta>意味着你无需巨大的表格关联资源名字</c>

00:08:48.729 --> 00:08:49.630
<c.magenta>和元数据</c>

00:08:51.164 --> 00:08:56.136
<c.magenta>类似的 比如表格视图有个背景</c>

00:08:56.203 --> 00:08:58.472
<c.magenta>之类的 你需要调整大小</c>

00:08:58.539 --> 00:09:01.208
<c.magenta>来适应展示尺寸</c>

00:08:58.539 --> 00:09:01.208
<c.magenta>来适应展示尺寸</c>

00:09:01.708 --> 00:09:06.046
<c.magenta>你可以创建一个分成9部分的图片</c>
<c.magenta>创建切割边缘</c>

00:09:06.513 --> 00:09:08.882
<c.magenta>储存这些进资源目录</c>

00:09:09.416 --> 00:09:12.152
<c.magenta>然后当这张图片改成</c>
<c.magenta>最终状态下的尺寸时</c>

00:09:13.120 --> 00:09:16.356
<c.magenta>它不需要大尺寸图像就能调整大小</c>

00:09:16.423 --> 00:09:18.892
<c.magenta>而且特定的根据你在工作的设备大小</c>

00:09:20.527 --> 00:09:22.429
<c.magenta>好 这些是资源目录</c>

00:09:22.496 --> 00:09:26.066
<c.magenta>讲讲其他可以给应用做的适配</c>

00:09:26.333 --> 00:09:27.301
<c.magenta>使用动态字体</c>

00:09:28.635 --> 00:09:29.803
<c.magenta>我们喜欢动态字体</c>

00:09:30.437 --> 00:09:33.207
<c.magenta>它给用户提供了指定字体大小的能力</c>

00:09:33.273 --> 00:09:37.044
<c.magenta>给用户一些视野上的帮助</c>

00:09:37.110 --> 00:09:41.081
<c.magenta>指定很大的字体大小来更方便阅读</c>

00:09:41.782 --> 00:09:42.950
<c.magenta>今年</c>

00:09:43.417 --> 00:09:47.387
<c.magenta>我们让你在应用上用动态字体更加简单</c>

00:09:47.788 --> 00:09:49.256
<c.magenta>用两种方法</c>

00:09:49.790 --> 00:09:52.526
<c.magenta>第一种 把它放在特征目录其中</c>

00:09:52.960 --> 00:09:55.963
<c.magenta>就不用等着听通知了</c>

00:09:56.163 --> 00:10:00.234
<c.magenta>它就在那儿给你使用来自定义文本</c>
<c.magenta>如果你需要它</c>

00:09:56.163 --> 00:10:00.234
<c.magenta>它就在那儿给你使用来自定义文本</c>
<c.magenta>如果你需要它</c>

00:10:00.801 --> 00:10:04.538
<c.magenta>但我们发现你在常规型文本视图下</c>
<c.magenta>应该不需要做这些</c>

00:10:04.605 --> 00:10:07.040
<c.magenta>给标签 文本框和文本视图</c>

00:10:08.008 --> 00:10:10.210
<c.magenta>我们把这些变得非常简单</c>

00:10:10.544 --> 00:10:14.615
<c.magenta>你只要指定想要的字体样式</c>

00:10:14.982 --> 00:10:18.485
<c.magenta>给内容尺寸类别</c>
<c.magenta>设置调整尺寸的标志</c>

00:10:18.852 --> 00:10:21.355
<c.magenta>所有标签 文本框和文本视图</c>

00:10:21.421 --> 00:10:24.124
<c.magenta>都自动适配成当前动态字体尺寸</c>

00:10:24.191 --> 00:10:25.826
<c.magenta>你不用做任何事</c>

00:10:31.899 --> 00:10:33.834
<c.magenta>当然 如果你用了这个方法</c>

00:10:33.901 --> 00:10:37.771
<c.magenta>确定在所有动态字体尺寸下测试应用</c>

00:10:37.838 --> 00:10:40.040
<c.magenta>如我提到的有些很大的字体</c>

00:10:40.107 --> 00:10:43.810
<c.magenta>Mac的无障碍检查器会连接你的应用</c>

00:10:43.877 --> 00:10:45.345
<c.magenta>你可以动态调回来</c>

00:10:45.412 --> 00:10:47.548
<c.magenta>而不用来回设置</c>

00:10:48.015 --> 00:10:50.918
<c.magenta>如果你要在表格或集合视图展示</c>

00:10:50.984 --> 00:10:54.788
<c.magenta>回顾一下“集合视图的新特性”演讲</c>

00:10:54.855 --> 00:10:58.659
<c.magenta>其中有些很好的信息关于性能和行为</c>
<c.magenta>的增强功能</c>

00:10:58.725 --> 00:11:02.196
<c.magenta>在集合视图中可以很好利用的</c>

00:10:58.725 --> 00:11:02.196
<c.magenta>在集合视图中可以很好利用的</c>

00:11:03.630 --> 00:11:05.933
<c.magenta>那么讨论讨论布局导引</c>

00:11:06.967 --> 00:11:10.370
<c.magenta>UIView提供两种布局导引</c>

00:11:10.571 --> 00:11:13.006
<c.magenta>边距导引 和可读内容导引</c>

00:11:13.073 --> 00:11:14.608
<c.magenta>我们会依次说</c>

00:11:15.075 --> 00:11:17.377
<c.magenta>这两种都源于视图</c>

00:11:18.045 --> 00:11:19.913
<c.magenta>不管要放什么内容</c>

00:11:20.280 --> 00:11:25.786
<c.magenta>边距导引由UIView中的</c>
<c.magenta>一项属性定义</c>

00:11:26.153 --> 00:11:27.554
<c.magenta>那就是布局边距</c>

00:11:27.921 --> 00:11:29.990
<c.magenta>定义了插入物的所有边</c>

00:11:31.391 --> 00:11:33.594
<c.magenta>那么 接下来怎么创建布局导引呢</c>

00:11:33.861 --> 00:11:37.764
<c.magenta>那只是由视图指定的一个长方形而已</c>

00:11:38.432 --> 00:11:42.503
<c.magenta>边距导引 当然 提供自动布局对象</c>

00:11:42.569 --> 00:11:44.638
<c.magenta>给你生成自定义约束</c>

00:11:45.205 --> 00:11:46.039
<c.magenta>简单</c>

00:11:46.740 --> 00:11:50.210
<c.magenta>那么 可读内容导引跟这有什么关系呢</c>

00:11:51.378 --> 00:11:52.913
<c.magenta>可读内容导引</c>

00:11:53.480 --> 00:11:57.985
<c.magenta>提供信息如何布局文本</c>

00:11:58.352 --> 00:12:00.320
<c.magenta>让文本的每行长度看上去好</c>
<c.magenta>可读性高</c>

00:11:58.352 --> 00:12:00.320
<c.magenta>让文本的每行长度看上去好</c>
<c.magenta>可读性高</c>

00:12:00.988 --> 00:12:04.791
<c.magenta>如果你在用</c>
<c.magenta>新的12.9英寸iPad Pros</c>

00:12:04.992 --> 00:12:07.060
<c.magenta>把文本布局成一边到另一边</c>

00:12:07.127 --> 00:12:09.963
<c.magenta>用户在阅读时会不停转头</c>

00:12:10.497 --> 00:12:15.469
<c.magenta>第一件要计算的是文本长度的理想宽度</c>
<c.magenta>是多少？</c>

00:12:16.537 --> 00:12:19.306
<c.magenta>我们不想要文本溢出边距</c>

00:12:19.373 --> 00:12:22.976
<c.magenta>所以把边距导引作为计算的一部分</c>

00:12:23.477 --> 00:12:27.781
<c.magenta>把两者结合成可读内容导引</c>

00:12:28.081 --> 00:12:32.252
<c.magenta>另一种在UIView中放入文本布局</c>

00:12:33.687 --> 00:12:37.157
<c.magenta>现在 可读内容导引基于动态字体大小</c>

00:12:37.724 --> 00:12:39.626
<c.magenta>如果动态字体大小变了会怎么样？</c>

00:12:40.127 --> 00:12:42.329
<c.magenta>好吧 我们放大了动态字体大小</c>

00:12:42.396 --> 00:12:43.997
<c.magenta>理想宽度变大了</c>

00:12:44.531 --> 00:12:45.599
<c.magenta>如你所见</c>

00:12:45.666 --> 00:12:49.002
<c.magenta>因为可读内容导引基于边距</c>

00:12:49.369 --> 00:12:52.306
<c.magenta>导引不会穿过这些边距</c>

00:12:52.739 --> 00:12:54.374
<c.magenta>所以你可以铺开文本</c>

00:12:54.441 --> 00:12:58.912
<c.magenta>得到可读性强的文本长度在视图里面</c>

00:13:00.314 --> 00:13:02.583
<c.magenta>那么</c>
<c.magenta>让我们讲讲UIAppearance</c>

00:13:04.051 --> 00:13:06.954
<c.magenta>UIAppearance</c>
<c.magenta>如果你还没用过 是个声明方式</c>

00:13:07.221 --> 00:13:10.424
<c.magenta>给你指定你想让应用看上去怎么样</c>

00:13:11.024 --> 00:13:12.125
<c.magenta>这什么意思？</c>

00:13:12.726 --> 00:13:17.497
<c.magenta>这意味着 比如说不同于有个新的</c>
<c.magenta>标签栏就写代码</c>

00:13:17.564 --> 00:13:18.398
<c.magenta>你写道：</c>

00:13:19.066 --> 00:13:21.301
<c.magenta>你写说 对于我所有的标签栏</c>

00:13:21.735 --> 00:13:25.205
<c.magenta>外表样式中所有未选择的着色是蓝色</c>

00:13:25.706 --> 00:13:28.442
<c.magenta>非常简单</c>
<c.magenta>每次创建标签栏时</c>

00:13:28.775 --> 00:13:30.377
<c.magenta>未选择项目会是蓝色</c>

00:13:31.111 --> 00:13:32.513
<c.magenta>但它同样是基于上下文的</c>

00:13:33.013 --> 00:13:37.217
<c.magenta>意味着你可以指定基于特征集合</c>

00:13:37.284 --> 00:13:40.487
<c.magenta>或基于视图包含物</c>

00:13:42.923 --> 00:13:45.025
<c.magenta>这看上去什么样？</c>
<c.magenta>让我们看看</c>

00:13:46.059 --> 00:13:48.762
<c.magenta>这是我们的应用</c>

00:13:49.196 --> 00:13:53.800
<c.magenta>至于样式 我们想把大的标题图片</c>
<c.magenta>放在顶部</c>

00:13:53.867 --> 00:13:56.136
<c.magenta>在常规型竖向屏幕的时候</c>

00:13:56.403 --> 00:13:59.673
<c.magenta>图片会替换导航栏的背景</c>

00:14:00.140 --> 00:14:02.643
<c.magenta>然而 当我们在紧凑型竖向屏幕时</c>

00:14:02.910 --> 00:14:04.811
<c.magenta>会呈现并排布局</c>

00:14:04.878 --> 00:14:07.714
<c.magenta>图片不会超出导航条</c>

00:14:07.781 --> 00:14:10.551
<c.magenta>所以我们会用默认背景</c>

00:14:11.151 --> 00:14:13.053
<c.magenta>先让我们做默认背景</c>

00:14:14.054 --> 00:14:17.524
<c.magenta>创建一个UITraitCollection</c>
<c.magenta>给竖向紧凑型屏幕</c>

00:14:19.059 --> 00:14:22.362
<c.magenta>把导航条样式赋给特征集合</c>

00:14:23.463 --> 00:14:27.668
<c.magenta>说我们不想给这个样式用任何背景图片</c>

00:14:27.968 --> 00:14:31.772
<c.magenta>这会导致导航条用回原来默认样式</c>

00:14:32.840 --> 00:14:36.476
<c.magenta>类似的 做竖向常规型屏幕时</c>

00:14:37.144 --> 00:14:39.146
<c.magenta>给它创建一个特征集合</c>

00:14:40.214 --> 00:14:41.615
<c.magenta>用这个样式</c>

00:14:42.549 --> 00:14:45.752
<c.magenta>指定一个空图片</c>
<c.magenta>导致导航条</c>

00:14:45.819 --> 00:14:48.188
<c.magenta>不使用背景图片</c>

00:14:49.089 --> 00:14:53.393
<c.magenta>现在 记住给特征集合的样式API</c>

00:14:53.560 --> 00:14:54.695
<c.magenta>可能会被读取的很奇怪</c>

00:14:54.761 --> 00:14:57.331
<c.magenta>我们实际想修改C2的API</c>

00:14:57.397 --> 00:14:58.665
<c.magenta>所以仔细注意这部分</c>

00:14:59.766 --> 00:15:03.604
<c.magenta>要结束这个最佳实践的部分前</c>

00:14:59.766 --> 00:15:03.604
<c.magenta>要结束这个最佳实践的部分前</c>

00:15:04.137 --> 00:15:07.741
<c.magenta>这个部分我们回顾了如何用资源目录</c>
<c.magenta>整理图片</c>

00:15:08.742 --> 00:15:12.312
<c.magenta>动态字体适配用户改变字体大小的愿望</c>

00:15:13.313 --> 00:15:15.883
<c.magenta>布局导引帮助你构建你自己的布局</c>

00:15:15.949 --> 00:15:20.120
<c.magenta>以容易适配所有布局情况的方式</c>

00:15:20.988 --> 00:15:22.489
<c.magenta>最后 外表</c>

00:15:22.656 --> 00:15:25.459
<c.magenta>让你的应用看上去跟你想要的一样</c>

00:15:25.759 --> 00:15:27.694
<c.magenta>那么接下来</c>
<c.magenta>我要交给Kurt继续讲</c>

00:15:35.269 --> 00:15:36.170
<c.magenta>谢谢 David</c>

00:15:37.104 --> 00:15:41.408
<c.magenta>如果你还记得 从</c>
<c.magenta>自适应应用 第一部分演讲中</c>

00:15:41.708 --> 00:15:43.944
<c.magenta>要记住的讯息是：</c>

00:15:44.411 --> 00:15:47.247
<c.magenta>系统会做大部分工作</c>
<c.magenta>你不用做</c>

00:15:48.015 --> 00:15:50.484
<c.magenta>现在 我今天要讲的是超越系统做的</c>

00:15:50.951 --> 00:15:54.221
<c.magenta>如果你想超越系统提供的</c>

00:15:54.821 --> 00:15:55.822
<c.magenta>接下来告诉你怎么做</c>

00:15:56.390 --> 00:15:58.492
<c.magenta>这里的关键词是“如果你想要”</c>

00:15:58.559 --> 00:15:59.693
<c.magenta>不是必须的</c>

00:16:00.360 --> 00:16:03.664
<c.magenta>然而 如果你不想要</c>
<c.magenta>即使你不利用它</c>

00:16:03.964 --> 00:16:07.401
<c.magenta>还是可以学到如何更有效使用</c>
<c.magenta>UIKit</c>

00:16:08.836 --> 00:16:10.938
<c.magenta>那么我要讲一些超越基础的</c>

00:16:11.905 --> 00:16:15.409
<c.magenta>我要告诉你怎么设计应用来解决</c>
<c.magenta>所有各种</c>

00:16:15.475 --> 00:16:17.511
<c.magenta>设备方向 尺寸的问题</c>

00:16:18.345 --> 00:16:20.280
<c.magenta>你如何实现这些设计</c>

00:16:20.347 --> 00:16:23.317
<c.magenta>应用改变大小时 如何动态改变设计</c>

00:16:23.984 --> 00:16:26.186
<c.magenta>然后我要讲关于使用可重复元素</c>

00:16:26.253 --> 00:16:28.822
<c.magenta>让构建应用更方便快捷</c>

00:16:29.456 --> 00:16:32.459
<c.magenta>我会放在做一个应用的上下文中讲这些</c>
<c.magenta>这儿我们会做个真正的应用</c>

00:16:32.726 --> 00:16:35.462
<c.magenta>那么 称我的应用为</c>
<c.magenta>我的非常自适应的应用</c>

00:16:35.996 --> 00:16:38.165
<c.magenta>幸运的是</c>
<c.magenta>它也很简单</c>

00:16:38.732 --> 00:16:41.635
<c.magenta>在这个应用中只要展现三件事</c>

00:16:42.336 --> 00:16:44.204
<c.magenta>三个项目</c>
<c.magenta>每个项目有个标题</c>

00:16:44.371 --> 00:16:45.973
<c.magenta>只是A B 和C</c>

00:16:46.440 --> 00:16:50.010
<c.magenta>然后还有更长一些的文本</c>
<c.magenta>每个项目一个描述</c>

00:16:50.511 --> 00:16:53.814
<c.magenta>即使这个应用非常简单</c>
<c.magenta>我会用到一些技巧 你可以在</c>

00:16:53.881 --> 00:16:57.251
<c.magenta>更复杂更大的应用中使用</c>

00:16:58.485 --> 00:17:01.622
<c.magenta>这就是我应用的原型</c>
<c.magenta>这是其中的数据</c>

00:16:58.485 --> 00:17:01.622
<c.magenta>这就是我应用的原型</c>
<c.magenta>这是其中的数据</c>

00:17:01.788 --> 00:17:04.324
<c.magenta>那么我的应用该看上去如何</c>
<c.magenta>以及如何运行呢？</c>

00:17:04.525 --> 00:17:05.392
<c.magenta>设计什么样？</c>

00:17:06.660 --> 00:17:08.762
<c.magenta>好 当我在思考设计时</c>

00:17:08.862 --> 00:17:10.830
<c.magenta>我需要考虑所有尺寸和方向的组合</c>

00:17:11.330 --> 00:17:14.434
<c.magenta>给每个组合做个特别的设计太费事了</c>

00:17:14.734 --> 00:17:17.738
<c.magenta>这工作量太大了</c>
<c.magenta>让我们试着简化</c>

00:17:18.472 --> 00:17:21.008
<c.magenta>我觉得我的应用只需要两个设计</c>

00:17:21.608 --> 00:17:23.143
<c.magenta>称第一个为“高的”</c>

00:17:23.210 --> 00:17:26.980
<c.magenta>我把所有项目竖着排放</c>
<c.magenta>A B 和C竖着放在堆里</c>

00:17:27.981 --> 00:17:31.718
<c.magenta>另一个设计叫“宽的”</c>
<c.magenta>于是横着排所有项目</c>

00:17:32.819 --> 00:17:35.689
<c.magenta>现在 我认为不管应用实际是什么尺寸</c>

00:17:36.023 --> 00:17:39.326
<c.magenta>我可以用两者之一的设计</c>
<c.magenta>让它们放的合适</c>

00:17:40.661 --> 00:17:41.662
<c.magenta>现在我的问题是：</c>

00:17:41.728 --> 00:17:44.364
<c.magenta>给到一个设备方向和尺寸的组合</c>

00:17:44.431 --> 00:17:46.366
<c.magenta>怎么选择用哪个设计？</c>

00:17:46.800 --> 00:17:50.070
<c.magenta>我要定义一个规则</c>
<c.magenta>我的应用专用</c>

00:17:51.004 --> 00:17:54.441
<c.magenta>我觉得我要选：</c>
<c.magenta>如果宽度低于高度</c>

00:17:54.508 --> 00:17:56.009
<c.magenta>用“高的”设计</c>

00:17:56.710 --> 00:17:58.645
<c.magenta>否则的话 用“宽的”设计</c>

00:17:59.880 --> 00:18:02.616
<c.magenta>运行所有的组合看效果怎么样</c>

00:17:59.880 --> 00:18:02.616
<c.magenta>运行所有的组合看效果怎么样</c>

00:18:02.683 --> 00:18:05.586
<c.magenta>在写代码之前先在纸上看看</c>

00:18:06.353 --> 00:18:08.822
<c.magenta>比如 这个iPhone是竖向的</c>

00:18:08.889 --> 00:18:11.959
<c.magenta>宽度低于高度</c>
<c.magenta>我们用“高的“设计</c>

00:18:12.559 --> 00:18:15.162
<c.magenta>把iPhone放到横向</c>

00:18:15.462 --> 00:18:19.032
<c.magenta>或者iPad全屏</c>
<c.magenta>或者iPad部分屏幕</c>

00:18:19.132 --> 00:18:22.302
<c.magenta>过一遍所有的例子</c>
<c.magenta>全都试一遍确保这个规则能用</c>

00:18:23.871 --> 00:18:25.239
<c.magenta>再说一遍我刚刚做的</c>

00:18:25.305 --> 00:18:27.407
<c.magenta>在设计应用解决尺寸问题时</c>

00:18:27.808 --> 00:18:29.610
<c.magenta>我考虑了所有的组合</c>

00:18:30.577 --> 00:18:34.281
<c.magenta>想出了几个设计来覆盖所有组合</c>
<c.magenta>整个范围</c>

00:18:35.082 --> 00:18:38.819
<c.magenta>然后定义规则来确定用哪个设计</c>

00:18:40.687 --> 00:18:42.189
<c.magenta>当我在定义规则时</c>

00:18:42.422 --> 00:18:45.158
<c.magenta>有很多方式可以用</c>
<c.magenta>这也是让我的应用变得特别的地方</c>

00:18:45.526 --> 00:18:47.661
<c.magenta>但要注意我本来可以检查</c>

00:18:47.728 --> 00:18:50.464
<c.magenta>尺寸是否正好匹配</c>

00:18:50.531 --> 00:18:53.967
<c.magenta>我本来可以看1024x768尺寸</c>

00:18:54.034 --> 00:18:56.803
<c.magenta>那么说这是iPad</c>
<c.magenta>然后基于这个信息决定设计</c>

00:18:57.104 --> 00:19:00.274
<c.magenta>我不想这么做因为这样做会要</c>
<c.magenta>解决太多组合</c>

00:18:57.104 --> 00:19:00.274
<c.magenta>我不想这么做因为这样做会要</c>
<c.magenta>解决太多组合</c>

00:19:00.340 --> 00:19:02.176
<c.magenta>而具体尺寸会随着时间变化</c>

00:19:03.443 --> 00:19:05.979
<c.magenta>所以我定义了一个简单的是否条件</c>

00:19:06.046 --> 00:19:08.081
<c.magenta>来告诉我用哪个设计</c>

00:19:08.515 --> 00:19:10.150
<c.magenta>有很多方法做这些</c>

00:19:10.551 --> 00:19:13.086
<c.magenta>第一条 最明显的是用屏幕分类</c>

00:19:13.153 --> 00:19:14.855
<c.magenta>然后就完成了大部分工作</c>

00:19:14.922 --> 00:19:17.891
<c.magenta>你只要检查是常规型还是紧凑型</c>

00:19:19.026 --> 00:19:21.228
<c.magenta>应用会像系统其他应用一样工作</c>

00:19:21.295 --> 00:19:23.363
<c.magenta>因为在用同一个屏幕分类</c>

00:19:23.764 --> 00:19:27.467
<c.magenta>所有的Xcode工具可以帮到你</c>
<c.magenta>你会无偿得到很多</c>

00:19:28.001 --> 00:19:29.903
<c.magenta>但是你也可以自己定义一个规则</c>

00:19:30.637 --> 00:19:34.441
<c.magenta>比如可以比较一个值 比如宽度或高度</c>
<c.magenta>跟一个阈值比较</c>

00:19:35.409 --> 00:19:38.445
<c.magenta>或者比较两个值 像我之前做的</c>
<c.magenta>宽度和高度比较</c>

00:19:38.879 --> 00:19:40.080
<c.magenta>或者结合这些规则</c>

00:19:40.147 --> 00:19:43.483
<c.magenta>重点是想出一个简单清除的规定</c>

00:19:43.550 --> 00:19:45.319
<c.magenta>来决定用哪个设计</c>

00:19:47.054 --> 00:19:51.158
<c.magenta>在考虑设计时</c>
<c.magenta>即使尺寸相同</c>

00:19:51.225 --> 00:19:54.127
<c.magenta>比如iPad的一边或者另一边</c>

00:19:54.561 --> 00:19:59.466
<c.magenta>不要把设计特定到设备按钮位置</c>

00:19:59.533 --> 00:20:02.469
<c.magenta>或者多线程操作时另一个应用在哪儿</c>

00:19:59.533 --> 00:20:02.469
<c.magenta>或者多线程操作时另一个应用在哪儿</c>

00:20:04.938 --> 00:20:06.773
<c.magenta>找到应用的大小</c>

00:20:07.674 --> 00:20:10.677
<c.magenta>用规则决定用哪个设计</c>

00:20:11.311 --> 00:20:14.014
<c.magenta>最后 把设计用在UI上</c>

00:20:14.081 --> 00:20:16.450
<c.magenta>改变UI的视图来适配</c>

00:20:17.851 --> 00:20:19.319
<c.magenta>现在我该把这段代码放哪儿？</c>

00:20:19.853 --> 00:20:22.923
<c.magenta>如果我用个Xcode的新模板</c>
<c.magenta>或者新的视图控制器</c>

00:20:22.990 --> 00:20:25.058
<c.magenta>有viewDidLoad方法的模板</c>

00:20:25.125 --> 00:20:29.029
<c.magenta>它说 在这里进行任何额外设置</c>
<c.magenta>那么我就在这儿放代码 对不对？</c>

00:20:29.530 --> 00:20:31.231
<c.magenta>不幸的是 没那么简单</c>

00:20:31.865 --> 00:20:35.102
<c.magenta>原因是你不会想做这些</c>
<c.magenta>因为视图在所需时加载</c>

00:20:35.536 --> 00:20:39.106
<c.magenta>第一次要求视图时</c>
<c.magenta>这个视图会被调用</c>

00:20:39.606 --> 00:20:40.707
<c.magenta>那得很早了</c>

00:20:41.508 --> 00:20:44.878
<c.magenta>我们知道那时视图还不是父视图</c>

00:20:45.379 --> 00:20:46.914
<c.magenta>布局还无效呢</c>

00:20:47.414 --> 00:20:49.349
<c.magenta>所以你不能指望视图尺寸</c>

00:20:49.416 --> 00:20:52.085
<c.magenta>活任何父级尺寸或特征之类的</c>

00:20:52.152 --> 00:20:53.086
<c.magenta>只是太早了</c>

00:20:53.954 --> 00:20:58.492
<c.magenta>对于一次性东西 像初始器</c>
<c.magenta>loadView、viewDidLoad</c>

00:20:58.725 --> 00:21:02.229
<c.magenta>你会想放一些设计中都一样的代码</c>

00:20:58.725 --> 00:21:02.229
<c.magenta>你会想放一些设计中都一样的代码</c>

00:21:03.130 --> 00:21:04.998
<c.magenta>对我来说更好的地方放规则代码</c>

00:21:05.332 --> 00:21:07.768
<c.magenta>是在视图控制器的</c>
<c.magenta>viewWillLayoutSubViews方法里</c>

00:21:09.870 --> 00:21:13.473
<c.magenta>你会看到因为那时视图在父视图中</c>

00:21:14.074 --> 00:21:16.109
<c.magenta>父视图的布局已经发生了</c>

00:21:16.243 --> 00:21:18.378
<c.magenta>尺寸有效</c>
<c.magenta>视图尺寸有效</c>

00:21:18.445 --> 00:21:20.547
<c.magenta>特征有效</c>
<c.magenta>一切都很好</c>

00:21:21.648 --> 00:21:25.619
<c.magenta>这是操纵视图控制器中元素的好时机</c>

00:21:25.719 --> 00:21:28.622
<c.magenta>这里改变视图控制器的视图</c>

00:21:28.689 --> 00:21:30.490
<c.magenta>约束等等</c>

00:21:31.625 --> 00:21:36.463
<c.magenta>现在 注意要小心</c>
<c.magenta>因为这是条非常火的路径</c>

00:21:36.530 --> 00:21:39.666
<c.magenta>经常被调用 经常</c>
<c.magenta>出于你掌控之外的原因</c>

00:21:40.667 --> 00:21:44.304
<c.magenta>所以在这个方法里做尽量少的工作</c>

00:21:45.072 --> 00:21:48.909
<c.magenta>理想条件下你会发现上次被调用后</c>
<c.magenta>什么改变了</c>

00:21:48.976 --> 00:21:51.845
<c.magenta>然后基于变化 尽量少的更新</c>

00:21:52.212 --> 00:21:56.183
<c.magenta>只改变视图的必须改变的属性</c>

00:21:58.151 --> 00:22:00.754
<c.magenta>最后 小心不要导致布局循环</c>

00:21:58.151 --> 00:22:00.754
<c.magenta>最后 小心不要导致布局循环</c>

00:22:01.188 --> 00:22:03.323
<c.magenta>如果使父视图布局失效</c>

00:22:03.724 --> 00:22:05.692
<c.magenta>它们会反过来失效你的布局</c>

00:22:05.859 --> 00:22:08.395
<c.magenta>马上你会发现你应用没做任何事</c>
<c.magenta>只是不停使生效、</c>

00:22:08.462 --> 00:22:11.198
<c.magenta>失效布局</c>
<c.magenta>然后任何实际都没有发生</c>

00:22:11.365 --> 00:22:14.434
<c.magenta>要了解更多关于调试和</c>
<c.magenta>更多关于布局循环</c>

00:22:14.501 --> 00:22:17.204
<c.magenta>可以看看今天稍晚些的</c>
<c.magenta>自动布局的新进展演讲</c>

00:22:19.339 --> 00:22:22.576
<c.magenta>那么这里是我的两个设计</c>
<c.magenta>回到这里</c>

00:22:22.643 --> 00:22:24.878
<c.magenta>怎样实现它们呢？</c>

00:22:25.612 --> 00:22:29.449
<c.magenta>我可以给每个项目A B C一个视图</c>

00:22:30.450 --> 00:22:32.085
<c.magenta>然后用UIStackView</c>

00:22:32.152 --> 00:22:34.521
<c.magenta>来横向或竖向排列这些东西</c>

00:22:34.788 --> 00:22:37.891
<c.magenta>UIStackView做全部工作</c>
<c.magenta>我不用特别努力思考</c>

00:22:38.959 --> 00:22:39.993
<c.magenta>这有一些代码</c>

00:22:40.427 --> 00:22:43.897
<c.magenta>我简单示例的视图控制器是一个</c>
<c.magenta>UIViewController的子类</c>

00:22:44.598 --> 00:22:45.866
<c.magenta>为它做个storyboard</c>

00:22:45.933 --> 00:22:49.136
<c.magenta>其中有个堆视图</c>
<c.magenta>而且这个视图中已经有了三个视图</c>

00:22:49.970 --> 00:22:54.374
<c.magenta>现在我要</c>
<c.magenta>在viewWillLayoutSubviews方法里</c>

00:22:54.441 --> 00:22:55.375
<c.magenta>覆写这些</c>

00:22:56.243 --> 00:22:59.112
<c.magenta>第一步 得到尺寸</c>
<c.magenta>写view.bounds.size</c>

00:23:00.214 --> 00:23:01.582
<c.magenta>第二 采用规则</c>

00:23:01.949 --> 00:23:04.151
<c.magenta>如果宽度大于高度...</c>

00:23:04.218 --> 00:23:08.255
<c.magenta>或等于高度 选择用“宽的”设计</c>

00:23:09.389 --> 00:23:11.291
<c.magenta>最后采用设计</c>

00:23:11.892 --> 00:23:13.994
<c.magenta>如果再用“宽的”设计</c>

00:23:14.061 --> 00:23:16.530
<c.magenta>堆视图的读取会是横向的</c>

00:23:16.597 --> 00:23:19.366
<c.magenta>否则就是竖向的</c>
<c.magenta>这是所有我要做的</c>

00:23:20.033 --> 00:23:22.469
<c.magenta>注意这里我不用做很多工作</c>

00:23:23.003 --> 00:23:26.039
<c.magenta>我还利用了StackView很聪明</c>
<c.magenta>这个事实</c>

00:23:26.507 --> 00:23:29.710
<c.magenta>如果设置读取已有值</c>

00:23:29.776 --> 00:23:31.678
<c.magenta>不需要做额外工作</c>

00:23:33.347 --> 00:23:36.717
<c.magenta>让我们看看在活动的应用</c>
<c.magenta>这是我应用在iPhone竖向屏幕上</c>

00:23:36.783 --> 00:23:40.587
<c.magenta>看到竖向布局</c>
<c.magenta>现在我旋转到横向</c>

00:23:41.154 --> 00:23:44.391
<c.magenta>会看到应用也旋转到横向</c>

00:23:45.259 --> 00:23:47.094
<c.magenta>我还无偿得到这个动画</c>

00:23:47.661 --> 00:23:49.963
<c.magenta>现在回到竖向</c>
<c.magenta>再展示一下</c>

00:23:53.367 --> 00:23:54.701
<c.magenta>这样</c>
<c.magenta>旋转了</c>

00:23:55.402 --> 00:23:56.403
<c.magenta>把这给David看</c>

00:23:56.470 --> 00:23:59.173
<c.magenta>因为我被震撼到了</c>
<c.magenta>堆视图 免费给了我这个</c>

00:23:59.239 --> 00:24:00.240
<c.magenta>我没料到</c>

00:23:59.239 --> 00:24:00.240
<c.magenta>我没料到</c>

00:24:00.707 --> 00:24:02.442
<c.magenta>他说“好 这很棒</c>

00:24:02.509 --> 00:24:04.912
<c.magenta>但怎么让它更好？</c>
<c.magenta>你能让它变得更突出吗？”</c>

00:24:05.712 --> 00:24:09.149
<c.magenta>如果你是个应用开发者 也许你曾经</c>
<c.magenta>从客户那儿听到过这些</c>

00:24:09.383 --> 00:24:11.151
<c.magenta>我说“当然 我能让这更突出”</c>

00:24:11.652 --> 00:24:14.721
<c.magenta>我可以让应用稍微有趣些</c>
<c.magenta>让它更突出</c>

00:24:15.122 --> 00:24:20.260
<c.magenta>通过在旋转时 让项目向你变大</c>

00:24:21.195 --> 00:24:23.997
<c.magenta>旋转后我让它们回到正常大小</c>

00:24:24.164 --> 00:24:25.165
<c.magenta>缩回到正常大小</c>

00:24:27.868 --> 00:24:30.404
<c.magenta>这不是我们必须提倡</c>

00:24:30.504 --> 00:24:31.772
<c.magenta>你在你应用中做的</c>

00:24:32.739 --> 00:24:35.509
<c.magenta>不是这个特定的让应用突出的技巧</c>

00:24:35.843 --> 00:24:40.214
<c.magenta>重点是把代码放在哪儿以及具体怎么做</c>

00:24:41.114 --> 00:24:44.585
<c.magenta>那么我把代码放在viewWillTransition</c>
<c.magenta>方法里来调整大小</c>

00:24:44.651 --> 00:24:45.552
<c.magenta>和协调器</c>

00:24:46.353 --> 00:24:49.823
<c.magenta>我这么做因为它会在应用尺寸变化时</c>
<c.magenta>被调用</c>

00:24:49.890 --> 00:24:50.824
<c.magenta>或者在旋转时</c>

00:24:51.225 --> 00:24:53.560
<c.magenta>我给协调器设置动画</c>

00:24:53.627 --> 00:24:56.296
<c.magenta>在旋转同时设置</c>
<c.magenta>之后发生</c>

00:24:57.497 --> 00:24:59.600
<c.magenta>为什么不把所有布局代码放在这儿？</c>

00:25:00.000 --> 00:25:03.537
<c.magenta>因为应用启动时</c>
<c.magenta>第一次不会调用这个方法</c>

00:25:03.604 --> 00:25:05.873
<c.magenta>还有别的原因 但那是主要原因</c>

00:25:06.907 --> 00:25:09.076
<c.magenta>那么我用协调器</c>
<c.magenta>设一段代码</c>

00:25:09.142 --> 00:25:11.044
<c.magenta>来在旋转时加入动效</c>

00:25:11.478 --> 00:25:12.746
<c.magenta>我要做的是在这段代码中</c>

00:25:12.813 --> 00:25:14.915
<c.magenta>设置参数表示我想要动画</c>

00:25:14.982 --> 00:25:18.886
<c.magenta>它就会以相同曲线和相同时间旋转</c>

00:25:19.353 --> 00:25:21.321
<c.magenta>接下来设置堆视图变化</c>

00:25:21.388 --> 00:25:25.359
<c.magenta>到1.4倍</c>
<c.magenta>所以变大一点点</c>

00:25:26.627 --> 00:25:30.063
<c.magenta>然后结束后</c>
<c.magenta>设置自己的动画和持续时间</c>

00:25:30.130 --> 00:25:32.266
<c.magenta>这里我选了.5</c>
<c.magenta>然后回到正常大小</c>

00:25:32.332 --> 00:25:34.668
<c.magenta>设置CGAffineTransform为默认</c>

00:25:34.968 --> 00:25:35.869
<c.magenta>也就是正常大小</c>

00:25:36.803 --> 00:25:37.638
<c.magenta>那么就这样</c>

00:25:38.005 --> 00:25:40.674
<c.magenta>这是同一个应用</c>
<c.magenta>上面有多加的代码</c>

00:25:41.008 --> 00:25:41.875
<c.magenta>会旋转</c>

00:25:43.911 --> 00:25:45.946
<c.magenta>向你弹出然后回去</c>

00:25:46.813 --> 00:25:49.883
<c.magenta>如果再旋转 它会做同样的事</c>

00:25:50.817 --> 00:25:53.120
<c.magenta>就这样</c>
<c.magenta>我加入了弹出效果</c>

00:25:53.187 --> 00:25:54.855
<c.magenta>让它变得有趣了些</c>

00:25:54.922 --> 00:25:57.157
<c.magenta>但我没有变核心布局代码</c>

00:25:57.224 --> 00:25:59.426
<c.magenta>它保持原样</c>
<c.magenta>我只是加了些在顶部</c>

00:26:01.929 --> 00:26:04.765
<c.magenta>最后我想讲的是可再用元素</c>

00:26:05.599 --> 00:26:08.702
<c.magenta>这种方法可以让你构建应用</c>

00:26:08.769 --> 00:26:11.638
<c.magenta>由不同设计中可再用的元素</c>

00:26:12.506 --> 00:26:15.509
<c.magenta>这种应用构建方法更快</c>
<c.magenta>而且利用了</c>

00:26:15.576 --> 00:26:18.579
<c.magenta>不同设计而不用重写所有东西</c>

00:26:19.313 --> 00:26:21.148
<c.magenta>我们会用到视图控制器</c>

00:26:21.215 --> 00:26:23.317
<c.magenta>每个元素往往是一个视图控制器</c>

00:26:23.684 --> 00:26:26.787
<c.magenta>这是因为视图控制器打包了</c>
<c.magenta>很多有用的东西在一起</c>

00:26:27.221 --> 00:26:29.122
<c.magenta>比如你得到了一个树的视图</c>

00:26:29.189 --> 00:26:31.625
<c.magenta>不仅是单个视图</c>
<c.magenta>而是一整个树的视图</c>

00:26:32.092 --> 00:26:34.061
<c.magenta>和所有它们的约束一起</c>

00:26:34.828 --> 00:26:36.964
<c.magenta>可以连接到其他的视图控制器</c>

00:26:37.030 --> 00:26:39.933
<c.magenta>于是你可以用segue跳转到另一个</c>
<c.magenta>不同的视图控制器</c>

00:26:40.000 --> 00:26:43.737
<c.magenta>或者呈现某个东西</c>
<c.magenta>找到父视图控制器</c>

00:26:43.804 --> 00:26:44.638
<c.magenta>之类的</c>

00:26:45.305 --> 00:26:48.408
<c.magenta>这里可以和应用的其他部分建立连结</c>

00:26:48.475 --> 00:26:51.845
<c.magenta>你可以连接到模型对象或者一个对象</c>

00:26:51.912 --> 00:26:54.081
<c.magenta>代表网路接入之类的</c>

00:26:55.516 --> 00:26:59.119
<c.magenta>现在你应用的视图控制器有不同的角色</c>

00:26:59.786 --> 00:27:01.755
<c.magenta>也许有一个容器视图控制器</c>

00:26:59.786 --> 00:27:01.755
<c.magenta>也许有一个容器视图控制器</c>

00:27:02.122 --> 00:27:06.460
<c.magenta>它也许包含了几个被包含的视图控制器</c>

00:27:07.361 --> 00:27:10.364
<c.magenta>也许你曾经写过被包含的视图控制器</c>

00:27:10.430 --> 00:27:13.133
<c.magenta>然后把它们放在</c>
<c.magenta>UIKit提供的容器里</c>

00:27:13.767 --> 00:27:16.870
<c.magenta>比如导航控制器</c>
<c.magenta>或者分割视图控制器</c>

00:27:16.937 --> 00:27:18.438
<c.magenta>或者标签栏控制器等等</c>

00:27:18.705 --> 00:27:21.241
<c.magenta>但你可以写自己的容器视图控制器</c>

00:27:21.375 --> 00:27:23.644
<c.magenta>这让你解锁很多能量</c>

00:27:23.710 --> 00:27:25.846
<c.magenta>你可以通过这做到很多事</c>

00:27:26.880 --> 00:27:29.216
<c.magenta>我会展示给你如何做到</c>
<c.magenta>又是我的设计</c>

00:27:29.816 --> 00:27:33.820
<c.magenta>在我的案例中 我认为我可以有一个</c>
<c.magenta>外面的容器视图控制器</c>

00:27:35.556 --> 00:27:37.858
<c.magenta>我称它为</c>
<c.magenta>示例容器视图控制器</c>

00:27:38.292 --> 00:27:41.228
<c.magenta>在那里面我又三个元素视图控制器</c>

00:27:41.295 --> 00:27:42.863
<c.magenta>每个元素有一个视图控制器</c>

00:27:44.264 --> 00:27:48.202
<c.magenta>现在 想想</c>
<c.magenta>我认为我的设计需要一点精化</c>

00:27:48.669 --> 00:27:50.103
<c.magenta>如果我没有很多空间</c>

00:27:50.170 --> 00:27:52.806
<c.magenta>我会需要展示这些项目的预览</c>

00:27:52.873 --> 00:27:55.209
<c.magenta>我没有地方放全部文本</c>
<c.magenta>只够放标题</c>

00:27:56.009 --> 00:27:58.345
<c.magenta>那么当我点击其中一项时</c>

00:27:58.412 --> 00:28:01.448
<c.magenta>或者 不好意思 轻击其中一项时</c>
<c.magenta>它会呈现预览</c>

00:27:58.412 --> 00:28:01.448
<c.magenta>或者 不好意思 轻击其中一项时</c>
<c.magenta>它会呈现预览</c>

00:28:01.915 --> 00:28:05.319
<c.magenta>会呈现展示全文的另一个视图控制器</c>

00:28:06.119 --> 00:28:09.423
<c.magenta>然后如果我再轻击那个</c>
<c.magenta>我们就遣散了它 它会不见</c>

00:28:10.624 --> 00:28:14.328
<c.magenta>做出这个通过...</c>
<c.magenta>我的示例容器视图控制器</c>

00:28:14.394 --> 00:28:17.397
<c.magenta>会有三个小的元素视图控制器</c>

00:28:17.464 --> 00:28:18.565
<c.magenta>我们等会儿会定义它</c>

00:28:19.233 --> 00:28:21.401
<c.magenta>当我们要呈现一个时</c>
<c.magenta>轻击它</c>

00:28:21.468 --> 00:28:24.905
<c.magenta>就创建并呈现了一个新的大的</c>
<c.magenta>元素视图控制器</c>

00:28:26.240 --> 00:28:29.042
<c.magenta>如果我的应用够大</c>
<c.magenta>我不需要做这些</c>

00:28:29.109 --> 00:28:33.380
<c.magenta>我只要展示这里的大的</c>
<c.magenta>元素视图控制器就可以了</c>

00:28:34.481 --> 00:28:35.883
<c.magenta>直接在容器里</c>

00:28:36.149 --> 00:28:39.119
<c.magenta>所以我的容器会有三个另一个类的</c>
<c.magenta>实例</c>

00:28:39.186 --> 00:28:40.754
<c.magenta>LargeElementViewController类</c>

00:28:41.188 --> 00:28:44.892
<c.magenta>当应用动态改变尺寸时</c>

00:28:45.058 --> 00:28:49.096
<c.magenta>我们要在这两种视图控制器层级的状态</c>
<c.magenta>之间改变</c>

00:28:50.130 --> 00:28:51.431
<c.magenta>在这里展示代码</c>

00:28:51.498 --> 00:28:54.201
<c.magenta>我们将从被包含的视图控制器</c>
<c.magenta>向上讲到</c>

00:28:54.268 --> 00:28:55.402
<c.magenta>容器</c>

00:28:55.469 --> 00:28:58.572
<c.magenta>从给这些被包含的视图控制器的</c>
<c.magenta>storyboard开始讲</c>

00:28:58.906 --> 00:29:02.176
<c.magenta>它很简单 这里有个简单带标题的视图</c>

00:28:58.906 --> 00:29:02.176
<c.magenta>它很简单 这里有个简单带标题的视图</c>

00:29:02.476 --> 00:29:06.180
<c.magenta>注意我设置自定义类为</c>
<c.magenta>小元素视图控制器</c>

00:29:06.513 --> 00:29:09.850
<c.magenta>把storyboard标识符</c>
<c.magenta>设为小元素</c>

00:29:09.917 --> 00:29:13.387
<c.magenta>就能在storyboard找到这些</c>
<c.magenta>然后之后举例说明它们</c>

00:29:14.588 --> 00:29:17.791
<c.magenta>至于大元素视图控制器</c>
<c.magenta>它更大 其中有更多文本</c>

00:29:17.858 --> 00:29:18.692
<c.magenta>同样道理</c>

00:29:18.759 --> 00:29:21.428
<c.magenta>设置自定义类为</c>
<c.magenta>大元素视图控制器</c>

00:29:21.895 --> 00:29:23.163
<c.magenta>然后设置标识符</c>

00:29:24.498 --> 00:29:26.934
<c.magenta>这儿是给小元素视图控制器的代码</c>

00:29:27.201 --> 00:29:29.570
<c.magenta>从这开始</c>
<c.magenta>我知道每次展示这些</c>

00:29:29.636 --> 00:29:32.673
<c.magenta>就要点击来展示大的视图了</c>

00:29:32.739 --> 00:29:36.243
<c.magenta>在viewDidLoad方法中</c>
<c.magenta>有个适合的时机来做这个</c>

00:29:36.643 --> 00:29:38.712
<c.magenta>我要设置轻击手势识别器</c>

00:29:39.046 --> 00:29:40.047
<c.magenta>加到视图中</c>

00:29:41.114 --> 00:29:44.484
<c.magenta>接下来它被轻击时会被调用</c>

00:29:45.319 --> 00:29:47.521
<c.magenta>找到主storyboard</c>

00:29:47.588 --> 00:29:50.390
<c.magenta>举例说明大元素视图控制器</c>

00:29:50.457 --> 00:29:52.226
<c.magenta>用标识符 大元素</c>

00:29:52.993 --> 00:29:55.863
<c.magenta>最后只要呈现它们</c>

00:29:57.664 --> 00:30:00.200
<c.magenta>在大元素视图控制器中更复杂一些</c>

00:29:57.664 --> 00:30:00.200
<c.magenta>在大元素视图控制器中更复杂一些</c>

00:30:00.267 --> 00:30:02.936
<c.magenta>因为我们需要知道是否在被呈现</c>

00:30:03.136 --> 00:30:05.372
<c.magenta>如果在被展示</c>
<c.magenta>需要轻击来退出</c>

00:30:05.439 --> 00:30:06.473
<c.magenta>如果不是</c>
<c.magenta>不需要</c>

00:30:07.174 --> 00:30:09.076
<c.magenta>所以我把这段代码放在</c>
<c.magenta>viewWillAppear方法里</c>

00:30:09.343 --> 00:30:11.545
<c.magenta>我这么做因为能用另一个方法</c>

00:30:11.945 --> 00:30:15.082
<c.magenta>isBeingPresented</c>
<c.magenta>方法找出这视图是否被呈现</c>

00:30:16.049 --> 00:30:19.353
<c.magenta>如果在被展现</c>
<c.magenta>跟之前一样加入轻击手势识别器</c>

00:30:19.853 --> 00:30:22.155
<c.magenta>当被轻击时</c>
<c.magenta>所有要做的只是退出</c>

00:30:25.158 --> 00:30:27.561
<c.magenta>现在进入容器视图控制器</c>

00:30:28.629 --> 00:30:30.430
<c.magenta>我准备加额外的一个对象</c>

00:30:30.497 --> 00:30:32.165
<c.magenta>让它更容易工作</c>

00:30:35.802 --> 00:30:37.938
<c.magenta>叫做设计对象</c>

00:30:39.173 --> 00:30:41.141
<c.magenta>设计对象可以包裹</c>

00:30:41.208 --> 00:30:43.977
<c.magenta>所有描述一个设计的信息</c>

00:30:45.379 --> 00:30:48.315
<c.magenta>我把它做成一个无法改变的值类</c>
<c.magenta>出于安全考虑</c>

00:30:48.382 --> 00:30:52.252
<c.magenta>写一个函数返回其中一个</c>
<c.magenta>之后它无法改变</c>

00:30:52.319 --> 00:30:53.287
<c.magenta>没人能改变它</c>

00:30:54.521 --> 00:30:56.456
<c.magenta>它允许比较</c>

00:30:56.523 --> 00:31:01.295
<c.magenta>这样就可以看我想要的设计和当前显示</c>
<c.magenta>是否不同</c>

00:30:56.523 --> 00:31:01.295
<c.magenta>这样就可以看我想要的设计和当前显示</c>
<c.magenta>是否不同</c>

00:31:02.462 --> 00:31:07.134
<c.magenta>让我们实现它</c>
<c.magenta>我只有一个简单的Swift结构</c>

00:31:07.401 --> 00:31:09.636
<c.magenta>它有两项信息</c>

00:31:09.736 --> 00:31:11.171
<c.magenta>第一个是轴</c>

00:31:11.505 --> 00:31:15.242
<c.magenta>从堆视图中重复使用这个枚举</c>
<c.magenta>可以是竖向或横向的</c>

00:31:16.543 --> 00:31:20.113
<c.magenta>然后定义这个自己的枚举为</c>
<c.magenta>是否在用小版本</c>

00:31:20.180 --> 00:31:22.382
<c.magenta>或里面视图控制器的大版本</c>

00:31:22.449 --> 00:31:23.717
<c.magenta>称其为ElementKind</c>

00:31:24.852 --> 00:31:27.955
<c.magenta>最后这里有个只读的计算的属性</c>

00:31:28.055 --> 00:31:29.423
<c.magenta>称为</c>
<c.magenta>elementIdentifier</c>

00:31:29.723 --> 00:31:31.959
<c.magenta>这只是用来告诉我用哪个标识符</c>

00:31:32.025 --> 00:31:34.428
<c.magenta>做storyboard里视图控制器</c>

00:31:36.396 --> 00:31:39.399
<c.magenta>最后 实现Swift里的</c>
<c.magenta>Equatable协议</c>

00:31:39.733 --> 00:31:43.537
<c.magenta>这里只是双等号函数</c>
<c.magenta>我在两个设计中比较数据</c>

00:31:43.604 --> 00:31:44.671
<c.magenta>来看它们是否相同</c>

00:31:46.640 --> 00:31:49.009
<c.magenta>让我们进入容器视图控制器</c>

00:31:49.076 --> 00:31:50.143
<c.magenta>然后做这些</c>

00:31:50.210 --> 00:31:53.113
<c.magenta>你记得它会有三个子视图控制器</c>

00:31:54.014 --> 00:31:57.317
<c.magenta>它要用这些规则来创建决定用哪个设计</c>

00:31:58.051 --> 00:31:59.152
<c.magenta>然后更新</c>

00:31:59.219 --> 00:32:01.955
<c.magenta>每个布局会重新评估用哪个设计</c>

00:31:59.219 --> 00:32:01.955
<c.magenta>每个布局会重新评估用哪个设计</c>

00:32:02.022 --> 00:32:03.423
<c.magenta>然后改些东西如果需要的话</c>

00:32:04.224 --> 00:32:06.860
<c.magenta>那么这样</c>
<c.magenta>示例视图控制器</c>

00:32:06.927 --> 00:32:10.731
<c.magenta>这里有个包含三个位置的数组</c>
<c.magenta>给三个可选视图控制器</c>

00:32:11.198 --> 00:32:12.165
<c.magenta>它们开始是无值</c>

00:32:12.232 --> 00:32:15.903
<c.magenta>当它一开始被创建时</c>
<c.magenta>还没有展示任何东西</c>

00:32:17.237 --> 00:32:20.440
<c.magenta>我还要跟踪记录当前展示的设计</c>

00:32:20.507 --> 00:32:23.677
<c.magenta>这也是可选的 现在是无值的</c>
<c.magenta>因为还没有发生什么</c>

00:32:24.745 --> 00:32:28.148
<c.magenta>在viewWillLayoutSubviews方法中</c>
<c.magenta>这些现在应该看来很熟悉了</c>

00:32:28.215 --> 00:32:29.550
<c.magenta>得到尺寸</c>

00:32:30.050 --> 00:32:33.086
<c.magenta>调用一个叫</c>
<c.magenta>decideDesign的函数</c>

00:32:33.320 --> 00:32:35.923
<c.magenta>基于尺寸</c>
<c.magenta>返回一个新的设计使用</c>

00:32:36.657 --> 00:32:39.393
<c.magenta>如果这个设计和当前显示的不同</c>

00:32:39.459 --> 00:32:43.230
<c.magenta>我就把设计用到UI上</c>
<c.magenta>改变UI来匹配</c>

00:32:44.031 --> 00:32:48.235
<c.magenta>注意这和我之前讲的伪代码一模一样</c>

00:32:48.735 --> 00:32:51.438
<c.magenta>不管你的应用做什么</c>

00:32:51.638 --> 00:32:53.607
<c.magenta>你也可以按照这个模式来</c>

00:32:53.740 --> 00:32:55.742
<c.magenta>也许你的设计中有不同的东西</c>

00:32:55.876 --> 00:32:58.946
<c.magenta>你的decideDesign和</c>
<c.magenta>applyDesign方法不同</c>

00:32:59.479 --> 00:33:02.649
<c.magenta>但会按照一模一样的模式</c>

00:32:59.479 --> 00:33:02.649
<c.magenta>但会按照一模一样的模式</c>

00:33:03.951 --> 00:33:06.253
<c.magenta>现在把这些函数填进示例应用中</c>

00:33:06.653 --> 00:33:10.691
<c.magenta>DecideDesign</c>
<c.magenta>先决定坐标轴</c>

00:33:10.757 --> 00:33:13.660
<c.magenta>我们已经讲过了对这个规则怎么做</c>

00:33:14.361 --> 00:33:16.730
<c.magenta>对elementKind</c>
<c.magenta>我将用一个不同规则</c>

00:33:16.797 --> 00:33:21.468
<c.magenta>我决定选择比较应用宽度是否低于</c>
<c.magenta>阈值的规则</c>

00:33:21.535 --> 00:33:24.238
<c.magenta>选择用小的视图控制器</c>
<c.magenta>否则用大的</c>

00:33:24.605 --> 00:33:26.373
<c.magenta>这里我在跟一个定值做比较</c>

00:33:26.440 --> 00:33:28.442
<c.magenta>这是一个给我应用用的例子</c>

00:33:28.509 --> 00:33:31.845
<c.magenta>你不一定在你的应用中用这个值</c>
<c.magenta>这只是一个例子</c>

00:33:33.280 --> 00:33:35.949
<c.magenta>把这两样信息打包</c>

00:33:36.016 --> 00:33:37.918
<c.magenta>进设计对象</c>
<c.magenta>然后返回它</c>

00:33:39.319 --> 00:33:42.422
<c.magenta>用这个设计 采用这两样</c>

00:33:42.623 --> 00:33:44.391
<c.magenta>我需要找出它们是否改变了</c>

00:33:44.591 --> 00:33:47.194
<c.magenta>坐标轴直接传递到堆视图</c>

00:33:47.261 --> 00:33:49.596
<c.magenta>它很聪明</c>
<c.magenta>不会做任何不需要做的事</c>

00:33:50.531 --> 00:33:52.633
<c.magenta>对于elementKind</c>
<c.magenta>我们还有些工作要做</c>

00:33:53.500 --> 00:33:58.605
<c.magenta>如果有旧的元素视图控制器</c>
<c.magenta>而且元素类型在改变</c>

00:33:58.672 --> 00:34:01.275
<c.magenta>那么我们需要毁掉老的</c>
<c.magenta>创建新的</c>

00:33:58.672 --> 00:34:01.275
<c.magenta>那么我们需要毁掉老的</c>
<c.magenta>创建新的</c>

00:34:01.675 --> 00:34:05.112
<c.magenta>这里我们要做的是迭代整个数组</c>

00:34:05.179 --> 00:34:07.247
<c.magenta>这里我用了这个枚举函数</c>

00:34:07.314 --> 00:34:10.150
<c.magenta>因为它让我们得到索引和</c>
<c.magenta>在那个索引的对象</c>

00:34:10.217 --> 00:34:12.018
<c.magenta>在迭代的同时</c>

00:34:13.085 --> 00:34:15.856
<c.magenta>最后 如果我们有一个</c>
<c.magenta>旧的元素视图控制器</c>

00:34:16.190 --> 00:34:18.926
<c.magenta>需要删除它</c>
<c.magenta>可以调用这个函数删除</c>

00:34:19.626 --> 00:34:22.329
<c.magenta>到storyboard</c>
<c.magenta>创建一个新的元素视图控制器</c>

00:34:22.396 --> 00:34:24.598
<c.magenta>用设计给我的标识符创建</c>

00:34:25.199 --> 00:34:28.335
<c.magenta>最后调用函数 加入新的子视图控制器</c>

00:34:28.969 --> 00:34:32.005
<c.magenta>然后保存它到数组为了下一次迭代</c>

00:34:33.774 --> 00:34:36.210
<c.magenta>这是最后一页代码幻灯片</c>
<c.magenta>谢谢你们听我讲到这儿</c>

00:34:36.409 --> 00:34:37.744
<c.magenta>这些是我们需要做的</c>

00:34:37.811 --> 00:34:40.013
<c.magenta>来做一个运行良好的容器视图控制器</c>

00:34:40.080 --> 00:34:42.649
<c.magenta>完全按照这个顺序完成步骤很重要</c>

00:34:43.350 --> 00:34:46.954
<c.magenta>加入新的视图控制器时</c>
<c.magenta>调用addChildViewController</c>

00:34:47.020 --> 00:34:52.926
<c.magenta>这个方法加入这个视图控制器</c>
<c.magenta>到自身的一列视图控制器中</c>

00:34:53.827 --> 00:34:56.763
<c.magenta>然后需要加入那个新的</c>
<c.magenta>视图控制器的视图</c>

00:34:56.830 --> 00:34:57.931
<c.magenta>到视图层级中</c>

00:34:58.565 --> 00:35:02.603
<c.magenta>通过运用堆视图的</c>
<c.magenta>addArrangedSubviews方法</c>

00:34:58.565 --> 00:35:02.603
<c.magenta>通过运用堆视图的</c>
<c.magenta>addArrangedSubviews方法</c>

00:35:03.036 --> 00:35:04.538
<c.magenta>UIKit不会帮你做这个</c>

00:35:04.605 --> 00:35:06.840
<c.magenta>也不能帮你做这个</c>
<c.magenta>因为我们不知道</c>

00:35:06.907 --> 00:35:09.643
<c.magenta>在视图层级中它该放在哪儿</c>

00:35:09.710 --> 00:35:11.178
<c.magenta>只有你能告诉我们这些</c>

00:35:12.379 --> 00:35:14.915
<c.magenta>最后 做完前面步骤以后</c>
<c.magenta>你告诉那个视图控制器</c>

00:35:14.982 --> 00:35:18.018
<c.magenta>它移到了新的父视图控制器</c>
<c.magenta>那里是“自己”</c>

00:35:19.319 --> 00:35:22.289
<c.magenta>要移除旧的</c>
<c.magenta>做基本上相同的步骤</c>

00:35:22.356 --> 00:35:23.557
<c.magenta>只是以相反的顺序</c>

00:35:23.757 --> 00:35:27.094
<c.magenta>我们告诉它</c>
<c.magenta>它会移到一新的父视图控制器 即无值</c>

00:35:27.861 --> 00:35:29.863
<c.magenta>从视图层级中移除它的视图</c>

00:35:30.163 --> 00:35:34.301
<c.magenta>最后从自身的子视图控制器中移除自己</c>

00:35:36.370 --> 00:35:38.972
<c.magenta>就是这样</c>
<c.magenta>最终给你们展示了应用</c>

00:35:39.139 --> 00:35:43.010
<c.magenta>这里我们在看横屏的iPad</c>
<c.magenta>有很多空间</c>

00:35:43.076 --> 00:35:46.813
<c.magenta>我们用横向布局和大元素视图控制器</c>

00:35:47.548 --> 00:35:50.350
<c.magenta>现在我划到另一个应用固定住</c>

00:35:52.085 --> 00:35:55.022
<c.magenta>我的应用变小了</c>
<c.magenta>它换到了竖向布局</c>

00:35:55.255 --> 00:35:57.491
<c.magenta>我还是在用大元素视图控制器</c>

00:35:57.558 --> 00:36:01.128
<c.magenta>它们和之前我们看的视图控制器一样</c>

00:35:57.558 --> 00:36:01.128
<c.magenta>它们和之前我们看的视图控制器一样</c>

00:36:01.828 --> 00:36:04.598
<c.magenta>现在如果我还把应用变得更小</c>

00:36:06.867 --> 00:36:08.936
<c.magenta>你会注意到我们换到了小点儿的设计</c>

00:36:09.002 --> 00:36:11.872
<c.magenta>还是竖向 但在用小一点的设计</c>

00:36:12.105 --> 00:36:14.808
<c.magenta>现在我能轻击其中一个小视图控制器</c>

00:36:14.875 --> 00:36:18.412
<c.magenta>呈现大的那个</c>
<c.magenta>如果再轻击 会退出它</c>

00:36:19.980 --> 00:36:22.883
<c.magenta>这就是我的应用</c>
<c.magenta>记住我们超越了基本的</c>

00:36:22.950 --> 00:36:25.886
<c.magenta>我们真的决定了要自己完成这些</c>

00:36:26.453 --> 00:36:29.022
<c.magenta>我解决了所有组合的设计</c>

00:36:30.224 --> 00:36:31.658
<c.magenta>实现了每个设计</c>

00:36:31.725 --> 00:36:34.995
<c.magenta>应用变换尺寸时在不同设计间动态变化</c>

00:36:35.762 --> 00:36:38.065
<c.magenta>还用了可重复使用元素来完成</c>

00:36:38.966 --> 00:36:42.336
<c.magenta>我的应用只是一个示例</c>
<c.magenta>你的应用也能做到这些</c>

00:36:44.538 --> 00:36:48.509
<c.magenta>我们讲过了基础</c>
<c.magenta>展示给你Xcode能办到什么</c>

00:36:48.575 --> 00:36:52.279
<c.magenta>展示了一些</c>
<c.magenta>UIKit提供的很棒的东西</c>

00:36:52.346 --> 00:36:54.281
<c.magenta>在一整套瑞士军刀一样的工具里</c>

00:36:54.581 --> 00:36:56.984
<c.magenta>在实例应用中讲过了代码</c>

00:36:57.317 --> 00:36:59.520
<c.magenta>可我们还只是涉及了表面</c>

00:36:59.586 --> 00:37:00.754
<c.magenta>还有很多要做</c>

00:36:59.586 --> 00:37:00.754
<c.magenta>还有很多要做</c>

00:37:00.988 --> 00:37:03.757
<c.magenta>看看这个URL里的示例代码</c>

00:37:04.725 --> 00:37:07.861
<c.magenta>还有 如果你还没有看第一部分</c>
<c.magenta>请回顾它</c>

00:37:07.928 --> 00:37:11.665
<c.magenta>有一个“兼收并蓄的应用设计”演讲</c>
<c.magenta>会讲到字体排印</c>

00:37:12.733 --> 00:37:16.670
<c.magenta>David提到</c>
<c.magenta>集合视图和自动布局的新特性</c>

00:37:17.171 --> 00:37:19.373
<c.magenta>还有WWDC去年两年</c>

00:37:19.439 --> 00:37:21.975
<c.magenta>我们讲过关于自适应应用和多线程任务</c>

00:37:22.042 --> 00:37:24.578
<c.magenta>真的不想重复太多那些材料</c>

00:37:24.645 --> 00:37:26.380
<c.magenta>所以请复习那些东西</c>

00:37:26.446 --> 00:37:28.715
<c.magenta>那些演讲中有很多很好的材料</c>

00:37:29.449 --> 00:37:31.451
<c.magenta>那么谢谢各位</c>
<c.magenta>愿各位度过一个很棒的周五</c>
