WEBVTT

00:00:19.820 --> 00:00:25.826
<c.magenta>Xcode介绍</c>

00:00:32.366 --> 00:00:34.334
<c.magenta>欢迎大家来到“Xcode介绍”</c>

00:00:34.568 --> 00:00:37.538
<c.magenta>我是Najla</c>
<c.magenta>是Xcode团队的成员</c>

00:00:38.038 --> 00:00:39.940
<c.magenta>与同事Rick Ballard一起</c>

00:00:40.007 --> 00:00:43.377
<c.magenta>我们将会给大家介绍</c>
<c.magenta>Xcode的必要组件</c>

00:00:44.311 --> 00:00:47.581
<c.magenta>Xcode是创建应用的开发平台</c>

00:00:47.648 --> 00:00:53.387
<c.magenta>可为iOS、watchOS</c>
<c.magenta>tvOS和OS X、macOS创建应用</c>

00:00:54.288 --> 00:00:56.957
<c.magenta>它为创建完整的应用提供了必要的工具</c>

00:00:57.257 --> 00:01:00.460
<c.magenta>从设计你应用的用户界面到实现代码</c>

00:00:57.257 --> 00:01:00.460
<c.magenta>从设计你应用的用户界面到实现代码</c>

00:01:00.661 --> 00:01:03.030
<c.magenta>以及测试和调试你的应用</c>

00:01:03.463 --> 00:01:06.466
<c.magenta>同时为你的应用发布到</c>
<c.magenta>App Store做些准备工作</c>

00:01:09.002 --> 00:01:12.973
<c.magenta>今天我们将带你了解</c>
<c.magenta>Xcode的一些必须组件</c>

00:01:13.040 --> 00:01:14.141
<c.magenta>通过创建应用</c>

00:01:15.075 --> 00:01:17.377
<c.magenta>你将会学习如何创建一个新的应用</c>

00:01:17.444 --> 00:01:18.879
<c.magenta>如何把应用运行在模拟器中</c>

00:01:19.479 --> 00:01:21.949
<c.magenta>如何去测试和调试你的应用</c>

00:01:23.150 --> 00:01:26.186
<c.magenta>如何去查看你的更改</c>
<c.magenta>然后提交到代码管理系统</c>

00:01:27.421 --> 00:01:29.990
<c.magenta>如何配置你的工程来进行应用的发布</c>

00:01:31.191 --> 00:01:35.562
<c.magenta>我们的这次演讲</c>
<c.magenta>大多关于学习如何使用Xcode</c>

00:01:35.729 --> 00:01:37.798
<c.magenta>也有一小部分关于应用开发的内容</c>

00:01:37.865 --> 00:01:41.301
<c.magenta>今天我们将要使用到的应用也挺简单</c>

00:01:41.702 --> 00:01:44.171
<c.magenta>但是千万不要被这个简单的应用误导</c>

00:01:44.238 --> 00:01:46.373
<c.magenta>这次演讲的内容是面向所有开发者</c>

00:01:46.607 --> 00:01:50.077
<c.magenta>不论是新的开发者还是有经验的开发者</c>

00:01:52.145 --> 00:01:54.615
<c.magenta>学习Xcode最有效的方法是使用它</c>

00:01:54.681 --> 00:01:57.050
<c.magenta>现在我们打开计算机</c>

00:01:57.784 --> 00:02:00.420
<c.magenta>我们现看到的是Xcode的欢迎窗口</c>

00:01:57.784 --> 00:02:00.420
<c.magenta>我们现看到的是Xcode的欢迎窗口</c>

00:02:00.754 --> 00:02:03.490
<c.magenta>在窗口的右边</c>
<c.magenta>你能看到已经存在的一些项目</c>

00:02:03.991 --> 00:02:05.993
<c.magenta>在左边 你可以新建一些项目</c>

00:02:06.793 --> 00:02:08.262
<c.magenta>让我们新建项目</c>

00:02:09.729 --> 00:02:11.932
<c.magenta>当你在Xcode里面新建项目的时候</c>

00:02:11.999 --> 00:02:14.067
<c.magenta>你有一些模板可以进行选择</c>

00:02:14.134 --> 00:02:17.204
<c.magenta>你可以把模板作为开发你应用的雏形</c>

00:02:18.005 --> 00:02:21.408
<c.magenta>这些模板对于这四个平台都是可用的</c>

00:02:21.475 --> 00:02:26.480
<c.magenta>iOS、watchOS、</c>
<c.magenta>tvOS和macOS</c>

00:02:27.114 --> 00:02:29.816
<c.magenta>这里我选择最简单的可用模板</c>

00:02:30.350 --> 00:02:33.954
<c.magenta>iOS平台上单页面应用的模板</c>

00:02:34.388 --> 00:02:39.259
<c.magenta>这个模板为显示iOS的单视图应用</c>
<c.magenta>提供了必要的代码</c>

00:02:42.262 --> 00:02:44.531
<c.magenta>我们工程命名为Hello</c>

00:02:45.399 --> 00:02:49.002
<c.magenta>如果你有开发者账户</c>
<c.magenta>你可在这添加账户并且选择你的项目组</c>

00:02:50.204 --> 00:02:53.073
<c.magenta>组织的名字就是你就职的公司</c>

00:02:54.308 --> 00:02:55.642
<c.magenta>标识符是</c>

00:02:55.709 --> 00:03:00.047
<c.magenta>你的组织的名字和你的产品的名字</c>

00:02:55.709 --> 00:03:00.047
<c.magenta>你的组织的名字和你的产品的名字</c>

00:03:00.314 --> 00:03:03.584
<c.magenta>这个标识符是你应用的唯一标识</c>

00:03:05.085 --> 00:03:07.754
<c.magenta>当你在Xcode中创建了新应用</c>

00:03:08.255 --> 00:03:12.426
<c.magenta>你可以选择使用Swift和</c>
<c.magenta>Objective-C作为开发语言</c>

00:03:12.793 --> 00:03:16.730
<c.magenta>我们将选择Swift</c>
<c.magenta>我们的应用是普适的</c>

00:03:16.797 --> 00:03:20.834
<c.magenta>那就意味着我们的应用</c>
<c.magenta>可以运行在iPhone和iPad上</c>

00:03:23.904 --> 00:03:26.173
<c.magenta>当你创建了一个模板</c>

00:03:26.740 --> 00:03:29.309
<c.magenta>你需要在你的工程中</c>
<c.magenta>配置许多不同的选项</c>

00:03:29.376 --> 00:03:31.745
<c.magenta>我们将会选择单元测试和UI选项</c>

00:03:35.282 --> 00:03:37.818
<c.magenta>让我们把工程保存在文档文件夹下</c>

00:03:38.185 --> 00:03:41.355
<c.magenta>我将点击“创建Git仓库”</c>

00:03:41.421 --> 00:03:45.359
<c.magenta>我们的项目一开始就</c>
<c.magenta>通过版本控制器进行管理</c>

00:03:51.498 --> 00:03:53.600
<c.magenta>不错 这就是我们的工程</c>

00:03:53.901 --> 00:03:56.803
<c.magenta>双击顶部两下 会重新调整窗口大小</c>

00:03:58.372 --> 00:04:01.208
<c.magenta>这就是Xcode的主窗口</c>

00:03:58.372 --> 00:04:01.208
<c.magenta>这就是Xcode的主窗口</c>

00:04:02.376 --> 00:04:07.414
<c.magenta>在左边的导航区域</c>
<c.magenta>有你的许多文件和资源</c>

00:04:08.115 --> 00:04:11.618
<c.magenta>中间是你打开文件的编辑区域</c>

00:04:11.685 --> 00:04:14.087
<c.magenta>你在导航栏点击文件的时候</c>

00:04:15.055 --> 00:04:17.457
<c.magenta>右边是实用工具区域</c>

00:04:17.690 --> 00:04:20.027
<c.magenta>这个区域所显示的信息是</c>

00:04:20.093 --> 00:04:23.163
<c.magenta>基于你在导航区或者编辑区选择的内容</c>

00:04:24.531 --> 00:04:27.301
<c.magenta>如果Xcode对你来说比较陌生</c>
<c.magenta>你可能觉得奇怪</c>

00:04:27.401 --> 00:04:29.770
<c.magenta>如何把应用运行在移动设备上？</c>

00:04:31.305 --> 00:04:34.541
<c.magenta>你可以点击运行按钮运行你的应用</c>

00:04:34.775 --> 00:04:36.176
<c.magenta>在主窗口的顶端</c>

00:04:36.610 --> 00:04:37.611
<c.magenta>但我们在运行应用前</c>

00:04:37.678 --> 00:04:41.014
<c.magenta>让我解释一下</c>
<c.magenta>当你点击运行的时候发生了什么</c>

00:04:43.016 --> 00:04:46.153
<c.magenta>当你点击了运行 你指定了运行的应用</c>

00:04:47.855 --> 00:04:49.656
<c.magenta>你要在哪儿运行应用</c>

00:04:53.293 --> 00:04:56.129
<c.magenta>在你的工程中 你可以有许多应用</c>

00:04:56.196 --> 00:04:59.333
<c.magenta>甚至相同的应用有不同的配置</c>

00:05:00.367 --> 00:05:02.936
<c.magenta>规则是如何指定你想运行什么</c>

00:05:03.003 --> 00:05:05.806
<c.magenta>它里面同样包含你如何运行应用的信息</c>

00:05:06.373 --> 00:05:10.177
<c.magenta>举例</c>
<c.magenta>我有iOS应用和Watch应用</c>

00:05:10.611 --> 00:05:13.614
<c.magenta>在这种情况下</c>
<c.magenta>我有一个运行iOS应用的规则</c>

00:05:14.047 --> 00:05:15.816
<c.magenta>和运行我的手表应用的规则</c>

00:05:17.551 --> 00:05:19.786
<c.magenta>现在呢 在我们的工程中只有一个规则</c>

00:05:19.853 --> 00:05:22.022
<c.magenta>这个规则就是Hello</c>
<c.magenta>我们已经选定它</c>

00:05:25.225 --> 00:05:28.362
<c.magenta>现在 你运行应用到目标平台</c>

00:05:28.428 --> 00:05:32.666
<c.magenta>你在Xcode中选择的目标平台</c>
<c.magenta>你有两个选项</c>

00:05:32.999 --> 00:05:35.135
<c.magenta>你可以在模拟器中运行你的应用</c>

00:05:35.402 --> 00:05:36.870
<c.magenta>或你可在设备上运行你的应用</c>

00:05:37.471 --> 00:05:40.841
<c.magenta>模拟器是用来模拟你应用运行的设备</c>

00:05:41.141 --> 00:05:44.144
<c.magenta>模拟器对快速和迭代开发是有用的</c>

00:05:44.378 --> 00:05:47.748
<c.magenta>当你想获得你应用的外观</c>
<c.magenta>及如何运作的反馈时</c>

00:05:49.383 --> 00:05:52.953
<c.magenta>我们现已选择</c>
<c.magenta>iPhone SE模拟器</c>

00:05:53.754 --> 00:05:55.422
<c.magenta>让我们点击运行按钮</c>

00:05:56.256 --> 00:06:01.028
<c.magenta>我们的应用就</c>
<c.magenta>运行在iPhone SE的模拟器上</c>

00:05:56.256 --> 00:06:01.028
<c.magenta>我们的应用就</c>
<c.magenta>运行在iPhone SE的模拟器上</c>

00:06:05.599 --> 00:06:07.134
<c.magenta>我们的应用已经开始运行了</c>

00:06:08.969 --> 00:06:09.903
<c.magenta>它在这儿</c>

00:06:10.037 --> 00:06:13.173
<c.magenta>我说过我们选择的是最简单的可用模板</c>

00:06:13.240 --> 00:06:14.975
<c.magenta>这儿没有任何东西</c>

00:06:15.042 --> 00:06:18.378
<c.magenta>让我们添加一些功能来使它变得有趣</c>

00:06:19.613 --> 00:06:22.749
<c.magenta>我会去点击停止按钮停止这个模拟器</c>

00:06:22.816 --> 00:06:23.884
<c.magenta>同运行按钮紧挨着的那个按钮</c>

00:06:24.885 --> 00:06:28.488
<c.magenta>在Xcode中</c>
<c.magenta>可以给你的应用添加用户界面</c>

00:06:28.555 --> 00:06:30.123
<c.magenta>可在storyboard中进行添加</c>

00:06:31.825 --> 00:06:34.428
<c.magenta>现由于我们是通过模板创建我们的工程</c>

00:06:35.195 --> 00:06:37.197
<c.magenta>我们这有两个</c>
<c.magenta>storyboard可用</c>

00:06:37.564 --> 00:06:40.100
<c.magenta>分别是启动屏幕</c>
<c.magenta>和主屏幕storyboard</c>

00:06:40.567 --> 00:06:44.838
<c.magenta>启动屏幕storyboard</c>
<c.magenta>包含启动屏幕的用户界面</c>

00:06:44.905 --> 00:06:46.573
<c.magenta>它是第一时间出现的屏幕</c>

00:06:46.640 --> 00:06:48.876
<c.magenta>当你首次启动应用时</c>

00:06:49.009 --> 00:06:51.512
<c.magenta>main.storyboard</c>
<c.magenta>包含用户界面</c>

00:06:51.578 --> 00:06:53.113
<c.magenta>以及你应用的其他界面</c>

00:06:53.480 --> 00:06:55.582
<c.magenta>让我们打开</c>
<c.magenta>main.storyboard</c>

00:06:58.118 --> 00:06:59.386
<c.magenta>storyboard中</c>

00:06:59.453 --> 00:07:02.456
<c.magenta>有白色背景的画布</c>

00:06:59.453 --> 00:07:02.456
<c.magenta>有白色背景的画布</c>

00:07:03.390 --> 00:07:05.492
<c.magenta>画布里面有场景</c>

00:07:05.559 --> 00:07:09.796
<c.magenta>有相应的视图</c>
<c.magenta>它代表了你应用中的一个界面</c>

00:07:10.898 --> 00:07:13.734
<c.magenta>为了便于讲解</c>
<c.magenta>我尽可能将应用做得简单</c>

00:07:13.800 --> 00:07:16.837
<c.magenta>我想用代码与界面进行一些交互</c>

00:07:17.337 --> 00:07:21.441
<c.magenta>我将添加一个按钮 当你点击它时</c>
<c.magenta>会在文本框中显示Hello</c>

00:07:23.677 --> 00:07:27.915
<c.magenta>在实用工具的底端是Xcode库</c>

00:07:27.981 --> 00:07:30.617
<c.magenta>比如文件库和代码片段库</c>

00:07:31.218 --> 00:07:34.421
<c.magenta>点击从左数第三个按钮会进入到对象库</c>

00:07:34.788 --> 00:07:38.325
<c.magenta>包含你能添加到场景中的所有UI元素</c>

00:07:39.660 --> 00:07:43.330
<c.magenta>你可以把它们看视为列表</c>
<c.magenta>你无法准确知道它的长度</c>

00:07:43.397 --> 00:07:45.899
<c.magenta>你需更多信息才能知道你看到的是什么</c>

00:07:46.466 --> 00:07:48.435
<c.magenta>又或者你可以把它们看作是网格</c>

00:07:50.470 --> 00:07:55.509
<c.magenta>我已知道我想在场景中</c>
<c.magenta>放置按钮和标题栏</c>

00:07:56.243 --> 00:07:58.278
<c.magenta>我可以使用滤棒</c>

00:07:58.345 --> 00:08:01.882
<c.magenta>在实用区域的下方进行按钮的搜索</c>

00:07:58.345 --> 00:08:01.882
<c.magenta>在实用区域的下方进行按钮的搜索</c>

00:08:06.587 --> 00:08:10.257
<c.magenta>将它拖到场景中</c>
<c.magenta>辅助线会帮我们将它居中对齐</c>

00:08:13.560 --> 00:08:15.696
<c.magenta>这是我早先提到的实用面板</c>

00:08:16.396 --> 00:08:20.167
<c.magenta>让我们仔细看看在它顶部的检视面板</c>

00:08:23.403 --> 00:08:27.241
<c.magenta>开始的两个是文件和快速帮助检视器</c>

00:08:27.441 --> 00:08:32.613
<c.magenta>在我们工程中它们始终是可用的</c>
<c.magenta>不管你在导航区和编辑区选择了什么</c>

00:08:33.212 --> 00:08:35.782
<c.magenta>在我的场景中我选择了按钮</c>

00:08:36.283 --> 00:08:39.686
<c.magenta>其余的检视器包含这个按钮的信息</c>

00:08:40.287 --> 00:08:44.925
<c.magenta>例如 我可以点击属性检视器</c>

00:08:46.960 --> 00:08:52.566
<c.magenta>获得按钮的文本属性信息</c>
<c.magenta>比如大小 字体和颜色</c>

00:08:53.467 --> 00:08:56.003
<c.magenta>我点击属性检视器旁边的大小检视器</c>

00:08:56.503 --> 00:09:01.775
<c.magenta>来查看按钮的大小和位置信息</c>

00:08:56.503 --> 00:09:01.775
<c.magenta>来查看按钮的大小和位置信息</c>

00:09:03.110 --> 00:09:06.914
<c.magenta>我把按钮的标题</c>
<c.magenta>改为Say Hello</c>

00:09:07.381 --> 00:09:09.650
<c.magenta>我可以在属性检视器里做这些</c>

00:09:10.184 --> 00:09:13.787
<c.magenta>但是更简单点的方法是双击按钮</c>

00:09:14.154 --> 00:09:16.123
<c.magenta>输入我们想显示的标题</c>

00:09:19.860 --> 00:09:22.129
<c.magenta>挺好的 这样我们在场景中添加了按钮</c>

00:09:22.930 --> 00:09:25.866
<c.magenta>回到过滤条界面搜索文本框</c>

00:09:31.572 --> 00:09:35.108
<c.magenta>我拖拽以便其处于按钮的顶端并且居中</c>

00:09:37.477 --> 00:09:40.047
<c.magenta>切换到到属性检视器</c>

00:09:40.113 --> 00:09:42.549
<c.magenta>或者大小检视器来配置它的属性</c>

00:09:42.649 --> 00:09:45.552
<c.magenta>但是我喜欢这种方式 先不管它了</c>

00:09:48.422 --> 00:09:52.793
<c.magenta>我们需要注意我们的用户界面没有指定</c>

00:09:52.860 --> 00:09:56.330
<c.magenta>视图如何根据设备大小进行缩放</c>

00:09:57.631 --> 00:10:00.534
<c.magenta>现在 我们看这个场景</c>

00:09:57.631 --> 00:10:00.534
<c.magenta>现在 我们看这个场景</c>

00:10:00.601 --> 00:10:04.171
<c.magenta>使用的是iPhone 6s模拟器</c>
<c.magenta>或者设备的尺寸</c>

00:10:04.738 --> 00:10:05.772
<c.magenta>但若我点击这个按钮</c>

00:10:06.106 --> 00:10:10.210
<c.magenta>我们将可以使用其他设备</c>
<c.magenta>比如iPhone SE设备</c>

00:10:11.211 --> 00:10:13.113
<c.magenta>我们可以看到文本框和按钮</c>

00:10:13.180 --> 00:10:15.482
<c.magenta>实际上它们并没有按照我们设想的居中</c>

00:10:17.618 --> 00:10:19.920
<c.magenta>让我们切换到iPhone 6s</c>

00:10:20.420 --> 00:10:23.390
<c.magenta>让我们使用自动布局添加一些限制</c>

00:10:23.790 --> 00:10:26.627
<c.magenta>来为用户界面如何进行缩放设置规则</c>

00:10:29.429 --> 00:10:33.267
<c.magenta>我们可以使用位于画布底部</c>
<c.magenta>的自动布局按钮设置规则</c>

00:10:34.468 --> 00:10:35.502
<c.magenta>对于按钮来说</c>

00:10:35.836 --> 00:10:38.972
<c.magenta>我想让它在水平和</c>
<c.magenta>垂直方向上进行居中显示</c>

00:10:39.840 --> 00:10:42.342
<c.magenta>点击对齐按钮</c>

00:10:44.244 --> 00:10:47.381
<c.magenta>对按钮进行设置以便它在容器的</c>
<c.magenta>水平和垂直方向上是居中的</c>

00:10:49.917 --> 00:10:51.952
<c.magenta>在场景中我们可以看到添加的限定条件</c>

00:10:53.320 --> 00:10:58.325
<c.magenta>对于文本框来说</c>
<c.magenta>我也想让它相对于视图是水平对齐的</c>

00:10:59.293 --> 00:11:03.664
<c.magenta>切回到对齐按钮</c>
<c.magenta>在容器中检查水平对齐选项</c>

00:10:59.293 --> 00:11:03.664
<c.magenta>切回到对齐按钮</c>
<c.magenta>在容器中检查水平对齐选项</c>

00:11:05.432 --> 00:11:07.534
<c.magenta>当我们做完上述操作</c>
<c.magenta>添加的限制变成红色</c>

00:11:07.601 --> 00:11:09.403
<c.magenta>意味着有错误发生</c>

00:11:10.137 --> 00:11:12.773
<c.magenta>在文档大纲的顶端</c>

00:11:12.873 --> 00:11:17.010
<c.magenta>有一个箭头将给我们指示错误</c>
<c.magenta>告诉我们错的地方</c>

00:11:17.244 --> 00:11:21.648
<c.magenta>可以看到我们没为文本框设置y的位置</c>

00:11:23.884 --> 00:11:28.288
<c.magenta>我实际上并不关心</c>
<c.magenta>这个文本框在y方向上位置</c>

00:11:28.455 --> 00:11:30.657
<c.magenta>我只想让它位于按钮的顶部</c>

00:11:31.859 --> 00:11:35.462
<c.magenta>我能做的是点击这个图钉按钮</c>

00:11:38.398 --> 00:11:40.701
<c.magenta>哎呀 我们没有在场景中选中文本框</c>

00:11:41.068 --> 00:11:44.605
<c.magenta>一旦你选中了文本框</c>
<c.magenta>你可以点击图钉按钮</c>

00:11:45.305 --> 00:11:48.642
<c.magenta>把文本框的底部固定在按钮的顶部</c>

00:11:50.277 --> 00:11:52.880
<c.magenta>这就是我们添加的限制 它是蓝色的</c>

00:11:54.114 --> 00:11:55.749
<c.magenta>我将切回到模拟器</c>

00:11:55.816 --> 00:11:57.851
<c.magenta>来看下是否像我们预想的那样显示了</c>

00:12:04.725 --> 00:12:07.394
<c.magenta>这就是我们的用户界面</c>
<c.magenta>看起来相当不错</c>

00:12:07.861 --> 00:12:10.697
<c.magenta>如果我旋转设备将会发生什么呢？</c>

00:12:11.431 --> 00:12:15.402
<c.magenta>使用模拟器 通过点击</c>
<c.magenta>硬件菜单模拟旋转</c>

00:12:16.803 --> 00:12:18.772
<c.magenta>旋转到左边或者旋转到右边</c>

00:12:19.106 --> 00:12:22.342
<c.magenta>那就旋转到左边吧 仍然是居中显示的</c>

00:12:23.277 --> 00:12:27.514
<c.magenta>模拟器的特别之处在于</c>
<c.magenta>它可以模拟一系列不同的的操作</c>

00:12:27.648 --> 00:12:31.852
<c.magenta>旋转 摇晃 甚至指定位置</c>

00:12:32.619 --> 00:12:36.023
<c.magenta>我建议你自己运行下模拟器做些操作</c>

00:12:36.089 --> 00:12:38.625
<c.magenta>因为当你想做快速测试时</c>
<c.magenta>用模拟器还是比较方便的</c>

00:12:38.692 --> 00:12:40.594
<c.magenta>你又不想使用真机进行测试</c>

00:12:42.429 --> 00:12:45.999
<c.magenta>我们已摆放好用户界面了</c>
<c.magenta>我们需要添加一些代码</c>

00:12:46.200 --> 00:12:50.103
<c.magenta>以便点击按钮时</c>
<c.magenta>文本框会变成say Hello</c>

00:12:51.505 --> 00:12:52.940
<c.magenta>停止模拟器</c>

00:12:54.208 --> 00:12:57.010
<c.magenta>谈论一些关于场景和视图控制器的内容</c>

00:12:57.744 --> 00:13:02.416
<c.magenta>每个在storyboard中的场景</c>
<c.magenta>都和一些视图控制器类关联</c>

00:12:57.744 --> 00:13:02.416
<c.magenta>每个在storyboard中的场景</c>
<c.magenta>都和一些视图控制器类关联</c>

00:13:03.083 --> 00:13:05.719
<c.magenta>这些类包含一些控制视图的代码</c>

00:13:07.221 --> 00:13:09.122
<c.magenta>在应用中仅有一个场景</c>

00:13:09.890 --> 00:13:13.660
<c.magenta>在我们导航栏里</c>
<c.magenta>仅有一个视图控制类文件</c>

00:13:14.294 --> 00:13:20.367
<c.magenta>我可以推断这个场景关联</c>
<c.magenta>这个Swift视图控制类</c>

00:13:21.401 --> 00:13:26.607
<c.magenta>但是有多个场景在应用中会怎么样呢</c>
<c.magenta>会有多个视图控制器文件？</c>

00:13:26.740 --> 00:13:30.110
<c.magenta>我如何知道哪个场景对应</c>
<c.magenta>哪个视图控制器文件呢？</c>

00:13:31.445 --> 00:13:34.348
<c.magenta>当你在storyboard中</c>
<c.magenta>选择一个场景的时候</c>

00:13:34.882 --> 00:13:37.417
<c.magenta>你可以点击身份鉴别检视器</c>

00:13:37.584 --> 00:13:39.486
<c.magenta>身份鉴别检视器和属性检视器是紧挨着</c>

00:13:39.853 --> 00:13:42.523
<c.magenta>它实际上是列出了场景引用的类</c>

00:13:43.023 --> 00:13:46.159
<c.magenta>现在我们可以确定</c>
<c.magenta>我们需要把代码放在哪儿</c>

00:13:49.696 --> 00:13:54.434
<c.magenta>我需要显示storyboard文件</c>
<c.magenta>和我们的视图控制器文件并排显示</c>

00:13:55.335 --> 00:13:56.570
<c.magenta>我可以这样做</c>

00:13:56.837 --> 00:14:01.208
<c.magenta>我可以在主窗口的顶端点击编辑助手</c>

00:13:56.837 --> 00:14:01.208
<c.magenta>我可以在主窗口的顶端点击编辑助手</c>

00:14:04.845 --> 00:14:08.215
<c.magenta>它看起来有点窄 我将留出一点空间来</c>

00:14:08.849 --> 00:14:13.687
<c.magenta>通过点击这儿的按钮隐藏文档大纲</c>

00:14:15.189 --> 00:14:17.558
<c.magenta>并且隐藏实用区域</c>

00:14:19.326 --> 00:14:20.894
<c.magenta>通过点击这个面板</c>

00:14:23.163 --> 00:14:26.567
<c.magenta>需要注意的是</c>
<c.magenta>那个条块在我们编辑区的顶部</c>

00:14:26.633 --> 00:14:30.304
<c.magenta>可以叫它跳转条块</c>
<c.magenta>它包含了许多有用的信息</c>

00:14:30.370 --> 00:14:36.043
<c.magenta>关于文件中的函数甚至文件本身</c>

00:14:37.044 --> 00:14:39.146
<c.magenta>编辑助手的特别之处是</c>

00:14:39.279 --> 00:14:43.417
<c.magenta>它知道哪个文件</c>

00:14:43.483 --> 00:14:46.153
<c.magenta>同我在主编辑区打开的文件有关联</c>

00:14:46.587 --> 00:14:49.022
<c.magenta>会在编辑助手中为我打开相应的文件</c>

00:14:49.289 --> 00:14:50.257
<c.magenta>例如</c>

00:14:50.324 --> 00:14:53.994
<c.magenta>如果我们在主编辑区</c>
<c.magenta>打开用Swift编写的视图控制器</c>

00:14:54.061 --> 00:14:57.264
<c.magenta>编辑助手会为视图控制器类</c>
<c.magenta>打开关联的界面文件</c>

00:14:58.498 --> 00:15:00.801
<c.magenta>另一个编辑助手很酷的功能是</c>

00:14:58.498 --> 00:15:00.801
<c.magenta>另一个编辑助手很酷的功能是</c>

00:15:01.101 --> 00:15:05.639
<c.magenta>你可以更改实际的文件关联</c>

00:15:06.206 --> 00:15:09.343
<c.magenta>通过选择位于顶部的跳转条</c>

00:15:09.676 --> 00:15:11.478
<c.magenta>可以更改为你想关联到的任何文件</c>

00:15:11.612 --> 00:15:18.619
<c.magenta>例如 你可以更改为它的相邻文件</c>
<c.magenta>编辑助手会打开继承自基类的所有文件</c>

00:15:22.856 --> 00:15:25.526
<c.magenta>让我们切回到</c>
<c.magenta>main.storyboard</c>

00:15:26.527 --> 00:15:28.495
<c.magenta>通过使用跳转条块的返回箭头</c>

00:15:32.032 --> 00:15:35.002
<c.magenta>这样我们就看到了</c>
<c.magenta>视图控制器类和storyboard</c>

00:15:35.068 --> 00:15:39.540
<c.magenta>我们需要在我们的类中</c>
<c.magenta>创建按钮和文本框的引用</c>

00:15:42.442 --> 00:15:44.011
<c.magenta>我可以这样做</c>

00:15:44.678 --> 00:15:49.283
<c.magenta>选中我想选中的UI元素</c>
<c.magenta>这样我们就选中它了</c>

00:15:49.349 --> 00:15:53.520
<c.magenta>按住Control键从场景中</c>
<c.magenta>拖动控件到我们的类中</c>

00:15:55.122 --> 00:15:57.157
<c.magenta>我希望控件有一个动作</c>

00:15:57.224 --> 00:16:02.529
<c.magenta>意味着当我点击这个按钮时</c>
<c.magenta>会有所响应</c>

00:15:57.224 --> 00:16:02.529
<c.magenta>意味着当我点击这个按钮时</c>
<c.magenta>会有所响应</c>

00:16:02.963 --> 00:16:05.499
<c.magenta>给它命名为Say Hello</c>

00:16:09.102 --> 00:16:10.838
<c.magenta>让我们对文本框做相同的事情</c>

00:16:13.173 --> 00:16:14.875
<c.magenta>实际上我想让它成为插槽变量</c>

00:16:15.075 --> 00:16:17.578
<c.magenta>意味着它是我可以操作的引用</c>

00:16:18.312 --> 00:16:21.415
<c.magenta>让我们给它命名为</c>
<c.magenta>Hello Label</c>

00:16:26.753 --> 00:16:29.056
<c.magenta>现在我们就有了元素的引用</c>

00:16:29.756 --> 00:16:33.861
<c.magenta>我们需要添加一些操作文本框的</c>
<c.magenta>代码到动作</c>

00:16:35.062 --> 00:16:39.867
<c.magenta>我认为文本框有一个属性我们可以使用</c>
<c.magenta>但是我又不是十分的确定</c>

00:16:40.300 --> 00:16:44.638
<c.magenta>Xcode中使用Option+点击</c>
<c.magenta>还有Command+点击很便捷</c>

00:16:45.739 --> 00:16:48.342
<c.magenta>当我们为文本框创建引用的时候</c>

00:16:48.509 --> 00:16:51.478
<c.magenta>它被声明和实例化</c>
<c.magenta>为UI label类</c>

00:16:52.446 --> 00:16:57.551
<c.magenta>我可以按住Option</c>
<c.magenta>在文本框的类名上点击来获得帮助信息</c>

00:16:58.051 --> 00:17:01.088
<c.magenta>关于这个类是做什么的以及怎样访问它</c>

00:16:58.051 --> 00:17:01.088
<c.magenta>关于这个类是做什么的以及怎样访问它</c>

00:17:03.090 --> 00:17:08.462
<c.magenta>按住Command 在UI文本框上</c>
<c.magenta>点击界面会跳转到它声明的地方</c>

00:17:09.896 --> 00:17:12.833
<c.magenta>假如我仅仅是想查询文档</c>

00:17:13.534 --> 00:17:14.902
<c.magenta>我可以跳转到帮助</c>

00:17:16.470 --> 00:17:18.571
<c.magenta>文档和API参考</c>

00:17:20.307 --> 00:17:23.777
<c.magenta>并且查找类 搜索UI文本框</c>

00:17:24.411 --> 00:17:29.750
<c.magenta>会有简短描述 概览</c>
<c.magenta>还会列举类的所有属性</c>

00:17:30.450 --> 00:17:34.054
<c.magenta>这里表明文本框有文本属性</c>

00:17:35.088 --> 00:17:38.525
<c.magenta>我们可以使用这个属性显示Hello</c>

00:17:40.694 --> 00:17:44.464
<c.magenta>关闭文档切换到视图控制器文件</c>

00:17:44.898 --> 00:17:47.401
<c.magenta>点击跳转条块上的返回箭头</c>

00:17:49.703 --> 00:17:50.704
<c.magenta>添加一些代码</c>

00:17:51.572 --> 00:17:55.209
<c.magenta>我想操作Hello Label</c>
<c.magenta>我会在这儿键入代码</c>

00:17:56.076 --> 00:18:00.514
<c.magenta>键入代码</c>
<c.magenta>Xcode会提供代码自动补全的建议</c>

00:17:56.076 --> 00:18:00.514
<c.magenta>键入代码</c>
<c.magenta>Xcode会提供代码自动补全的建议</c>

00:18:00.948 --> 00:18:02.816
<c.magenta>这是Xcode的代码补全</c>

00:18:04.184 --> 00:18:05.986
<c.magenta>我可以按Tab键进行自动补全</c>

00:18:07.521 --> 00:18:12.059
<c.magenta>我可以访问文本属性</c>
<c.magenta>我可以自动补全它</c>

00:18:13.126 --> 00:18:15.662
<c.magenta>设置文本的属性为Hello</c>

00:18:17.564 --> 00:18:18.632
<c.magenta>这里有一些代码</c>

00:18:19.132 --> 00:18:20.067
<c.magenta>有一些引用</c>

00:18:20.133 --> 00:18:25.072
<c.magenta>切回到模拟器中</c>
<c.magenta>看这些代码能否正常工作</c>

00:18:30.711 --> 00:18:32.045
<c.magenta>应用正在启动</c>

00:18:33.280 --> 00:18:36.250
<c.magenta>点击按钮 显示发生了变化</c>

00:18:36.517 --> 00:18:37.885
<c.magenta>非常酷 对不对？</c>

00:18:42.789 --> 00:18:43.624
<c.magenta>对的</c>

00:18:46.193 --> 00:18:49.463
<c.magenta>现在你知道如何在Xcode中</c>
<c.magenta>创建新的工程</c>

00:18:49.530 --> 00:18:52.999
<c.magenta>如何添加简单的功能</c>
<c.magenta>如何将应用运行在模拟器中</c>

00:18:53.500 --> 00:18:58.071
<c.magenta>你将通过已经存在的工程</c>
<c.magenta>学习如何使用Xcode</c>

00:18:58.138 --> 00:19:00.807
<c.magenta>那些工程里的东西</c>
<c.magenta>比我们演示的按钮和文本框更复杂</c>

00:18:58.138 --> 00:19:00.807
<c.magenta>那些工程里的东西</c>
<c.magenta>比我们演示的按钮和文本框更复杂</c>

00:19:01.842 --> 00:19:06.213
<c.magenta>加快一点速度</c>
<c.magenta>我和Rick知道基本原理</c>

00:19:06.280 --> 00:19:08.448
<c.magenta>我们已经实现了一些功能</c>

00:19:09.049 --> 00:19:11.885
<c.magenta>我将把Rick请上台来</c>

00:19:11.952 --> 00:19:14.955
<c.magenta>来给大家演示</c>
<c.magenta>Xcode开发流程中的剩余部分</c>

00:19:23.597 --> 00:19:24.464
<c.magenta>谢谢你Najla</c>

00:19:25.232 --> 00:19:27.701
<c.magenta>在过去的一周</c>
<c.magenta>我们构建了一个小型应用</c>

00:19:27.768 --> 00:19:29.903
<c.magenta>是一个追踪地震的应用</c>

00:19:29.970 --> 00:19:32.606
<c.magenta>我们可以看到最近发生地震的地方</c>

00:19:33.207 --> 00:19:35.776
<c.magenta>我们基本编写完成了</c>
<c.magenta>当然 我们编写了单元测试</c>

00:19:35.843 --> 00:19:37.778
<c.magenta>以便我们可以确定代码能正常工作</c>

00:19:37.845 --> 00:19:40.113
<c.magenta>但我认为</c>
<c.magenta>我们还有一些问题需要进行修复</c>

00:19:40.647 --> 00:19:45.152
<c.magenta>让我们看一下并且深入到</c>
<c.magenta>Xcode的调试器和单元测试中</c>

00:19:47.087 --> 00:19:50.257
<c.magenta>开始前</c>
<c.magenta>我需要从代码控制系统中分检出代码</c>

00:19:50.858 --> 00:19:54.661
<c.magenta>Xcode支持Git和</c>
<c.magenta>Subversion源代码管理工具</c>

00:19:55.295 --> 00:19:59.666
<c.magenta>为了检出工程</c>
<c.magenta>我需点击Xcode的源代码管理菜单</c>

00:19:59.766 --> 00:20:01.935
<c.magenta>选择检出命令</c>

00:19:59.766 --> 00:20:01.935
<c.magenta>选择检出命令</c>

00:20:03.170 --> 00:20:07.708
<c.magenta>这是Xcode给出的检出界面</c>
<c.magenta>我可以输入仓库的路径</c>

00:20:07.774 --> 00:20:13.347
<c.magenta>我们仓库的路径是</c>
<c.magenta>example.com/repos</c>

00:20:13.413 --> 00:20:16.016
<c.magenta>我们的工程叫作Quakenator</c>

00:20:17.351 --> 00:20:18.418
<c.magenta>我将点击下一步</c>

00:20:18.752 --> 00:20:19.953
<c.magenta>Xcode让我输入</c>

00:20:20.020 --> 00:20:22.523
<c.magenta>仓库的授权凭证</c>

00:20:23.490 --> 00:20:24.358
<c.magenta>额</c>

00:20:28.061 --> 00:20:30.998
<c.magenta>Xcode会询问我将工程检出到哪儿</c>

00:20:31.064 --> 00:20:32.900
<c.magenta>放在文档文件夹下就好了</c>

00:20:33.100 --> 00:20:34.168
<c.magenta>点击下载</c>

00:20:34.234 --> 00:20:36.370
<c.magenta>Xcode</c>
<c.magenta>会从代码管理系统中检出代码</c>

00:20:36.436 --> 00:20:37.804
<c.magenta>我们会用检出的代码做演示</c>

00:20:38.272 --> 00:20:39.806
<c.magenta>工程完全检出来了</c>

00:20:39.873 --> 00:20:42.609
<c.magenta>你会注意到代码管理菜单有许多选项</c>

00:20:42.676 --> 00:20:44.311
<c.magenta>后面我们会使用它们</c>

00:20:45.212 --> 00:20:47.948
<c.magenta>开始前 我们看一下单元测试</c>

00:20:48.315 --> 00:20:50.884
<c.magenta>我们可以在左边浏览工程的结构</c>

00:20:50.951 --> 00:20:54.621
<c.magenta>尝试着手动查找测试文件</c>
<c.magenta>但是会有更好的途径</c>

00:20:55.422 --> 00:20:59.426
<c.magenta>在导航区域的顶部</c>
<c.magenta>有许多不同的导航按钮</c>

00:20:59.493 --> 00:21:03.063
<c.magenta>这些按钮会用不同的视图</c>
<c.magenta>显示你工程中的内容</c>

00:20:59.493 --> 00:21:03.063
<c.magenta>这些按钮会用不同的视图</c>
<c.magenta>显示你工程中的内容</c>

00:21:04.031 --> 00:21:06.466
<c.magenta>查找面板就是众多视图中的一个</c>

00:21:06.533 --> 00:21:10.771
<c.magenta>使用它我可以查找工程中文本类的内容</c>

00:21:10.838 --> 00:21:15.008
<c.magenta>例如 我们知道所有的测试方法</c>
<c.magenta>都以测试开头</c>

00:21:15.242 --> 00:21:20.514
<c.magenta>我可以查找以测试开头的内容</c>

00:21:20.914 --> 00:21:22.182
<c.magenta>点击返回</c>

00:21:22.249 --> 00:21:26.787
<c.magenta>在这儿Xcode会在工程中</c>
<c.magenta>找到所有以测试开头的内容</c>

00:21:26.854 --> 00:21:29.823
<c.magenta>包括测试方法还有些注释和其他的合辑</c>

00:21:30.757 --> 00:21:33.560
<c.magenta>挺棒的 做一些更智能的事情</c>

00:21:33.794 --> 00:21:37.798
<c.magenta>如果我想查找我的测试方法</c>
<c.magenta>我能找到一些定义</c>

00:21:37.865 --> 00:21:40.701
<c.magenta>像我的测试方法在哪儿定义</c>

00:21:41.168 --> 00:21:46.940
<c.magenta>再查找以测试开头的内容</c>
<c.magenta>这儿只找到测试的方法</c>

00:21:47.708 --> 00:21:49.276
<c.magenta>查找面板是个不错的方法</c>

00:21:49.343 --> 00:21:51.144
<c.magenta>查找工程里面的内容</c>

00:21:51.445 --> 00:21:54.248
<c.magenta>我们按特性查找单元测试的内容</c>

00:21:54.314 --> 00:21:58.352
<c.magenta>Xcode给我们提供了更好的方法</c>
<c.magenta>那就是测试导航面板</c>

00:21:59.653 --> 00:22:04.024
<c.magenta>测试导航面板中 Xcode自动列出</c>
<c.magenta>每一个单元测试和UI测试</c>

00:21:59.653 --> 00:22:04.024
<c.magenta>测试导航面板中 Xcode自动列出</c>
<c.magenta>每一个单元测试和UI测试</c>

00:22:04.091 --> 00:22:07.027
<c.magenta>性能测试这些内容是</c>
<c.magenta>Xcode在你的工程中找到的</c>

00:22:07.828 --> 00:22:10.631
<c.magenta>其中有一些是灰色的比如UI测试</c>

00:22:10.931 --> 00:22:14.935
<c.magenta>那是因为在当前的规则下</c>
<c.magenta>这些测试是不会运行的</c>

00:22:15.269 --> 00:22:18.272
<c.magenta>当我运行UI测试的时候</c>
<c.magenta>我会使用另外一个规则</c>

00:22:19.206 --> 00:22:21.141
<c.magenta>剩下的测试内容以黑色显示</c>

00:22:21.241 --> 00:22:24.845
<c.magenta>那就意味着当我进行测试的时候</c>
<c.magenta>这些测试都是可以运行的</c>

00:22:25.078 --> 00:22:26.747
<c.magenta>让我们尽快试一下</c>

00:22:27.681 --> 00:22:29.983
<c.magenta>在产品菜单下有测试的选项</c>

00:22:30.050 --> 00:22:32.119
<c.magenta>同下面其它四个选项是一样的</c>

00:22:32.753 --> 00:22:35.189
<c.magenta>点击运行 应用会在调试器中运行</c>

00:22:35.656 --> 00:22:37.357
<c.magenta>点击测试 将会运行测试</c>

00:22:38.325 --> 00:22:41.895
<c.magenta>点击配置 将会在容器中运行应用</c>
<c.magenta>这样可以测试应用的性能</c>

00:22:42.629 --> 00:22:44.898
<c.magenta>点击分析</c>
<c.magenta>运行Xcode静态代码分析</c>

00:22:44.965 --> 00:22:47.634
<c.magenta>会捕捉到我有可能遗漏的问题</c>

00:22:48.101 --> 00:22:52.506
<c.magenta>最后存档会以发布的方式</c>
<c.magenta>构建应用并把应用存档</c>

00:22:52.573 --> 00:22:55.809
<c.magenta>然后我可以把它发布给</c>
<c.magenta>测试者或放到App Store里</c>

00:22:55.876 --> 00:22:59.446
<c.magenta>为未来崩溃日志解析或者符号化做保存</c>

00:22:59.880 --> 00:23:01.915
<c.magenta>这个菜单选项将会变得可以点击</c>

00:22:59.880 --> 00:23:01.915
<c.magenta>这个菜单选项将会变得可以点击</c>

00:23:01.982 --> 00:23:04.384
<c.magenta>一旦我选择了可以运行的设备</c>

00:23:05.819 --> 00:23:08.622
<c.magenta>我将选择一个进行测试</c>
<c.magenta>当我开始测试的时候</c>

00:23:08.689 --> 00:23:11.825
<c.magenta>我希望大家注意窗口活动区域的顶部</c>

00:23:11.892 --> 00:23:13.994
<c.magenta>因为它会告诉你Xcode在做什么</c>

00:23:14.528 --> 00:23:17.931
<c.magenta>我点击了测试</c>
<c.magenta>会看到Xcode正在构建应用</c>

00:23:18.131 --> 00:23:20.868
<c.magenta>然后将会构建测试代码 最后就会运行</c>

00:23:20.934 --> 00:23:23.070
<c.magenta>看起来我们好像有一个编译错误</c>

00:23:24.605 --> 00:23:26.173
<c.magenta>当编译错误产生</c>

00:23:27.341 --> 00:23:30.244
<c.magenta>一个标志会出现在活动区域的右手边</c>

00:23:30.310 --> 00:23:31.745
<c.magenta>表明那儿有一个问题</c>

00:23:31.979 --> 00:23:35.382
<c.magenta>Xcode会自动切换到</c>
<c.magenta>左边的问题导航栏</c>

00:23:36.116 --> 00:23:39.219
<c.magenta>这种做法 像自动切换到导航</c>

00:23:39.286 --> 00:23:41.154
<c.magenta>当问题发生时显示问题</c>

00:23:41.722 --> 00:23:43.690
<c.magenta>像这种行为</c>
<c.magenta>可在Xcode中进行配置</c>

00:23:43.757 --> 00:23:46.126
<c.magenta>你可以学着</c>
<c.magenta>让它按照你想要的方式来工作</c>

00:23:46.193 --> 00:23:49.062
<c.magenta>你有可能想对各式各样的行为进行配置</c>

00:23:49.530 --> 00:23:52.199
<c.magenta>你可以在Xcode的</c>
<c.magenta>行为偏好里进行配置</c>

00:23:52.766 --> 00:23:56.203
<c.magenta>如果你选择编辑行为</c>
<c.magenta>Xcode会给展示一个偏好表格</c>

00:23:56.270 --> 00:23:58.071
<c.magenta>让你对各式各样的行为进行配置</c>

00:23:58.138 --> 00:24:02.509
<c.magenta>当我们进行构建的时候出了问题</c>
<c.magenta>我们显示问题面板</c>

00:23:58.138 --> 00:24:02.509
<c.magenta>当我们进行构建的时候出了问题</c>
<c.magenta>我们显示问题面板</c>

00:24:03.043 --> 00:24:05.112
<c.magenta>当测试生成出了问题比如测试失败</c>

00:24:05.179 --> 00:24:07.247
<c.magenta>我们显示测试导航面板 诸如此类</c>

00:24:07.648 --> 00:24:09.449
<c.magenta>你想在Xcode中获得好的体验</c>

00:24:09.516 --> 00:24:12.920
<c.magenta>想让它按照你的工作流程开始工作</c>

00:24:12.986 --> 00:24:14.888
<c.magenta>我建议你对Xcode的偏好进行设置</c>

00:24:16.723 --> 00:24:19.593
<c.magenta>让我们看一下发生了什么编译错误</c>

00:24:20.027 --> 00:24:23.463
<c.magenta>我在问题面板上点击我们的问题</c>

00:24:23.664 --> 00:24:25.699
<c.magenta>它将跳转到我们的代码中</c>

00:24:25.766 --> 00:24:27.634
<c.magenta>引起编译错误的地方</c>

00:24:28.669 --> 00:24:32.005
<c.magenta>Xcode在错误代码的右边</c>
<c.magenta>显示发生了什么错误</c>

00:24:32.072 --> 00:24:34.575
<c.magenta>它看起来像数据源对象</c>

00:24:34.641 --> 00:24:37.945
<c.magenta>没有一个属性或者方法的</c>
<c.magenta>名为Assorted Quakes</c>

00:24:38.745 --> 00:24:41.048
<c.magenta>我知道有Assorted</c>
<c.magenta>Quakes属性</c>

00:24:41.148 --> 00:24:43.717
<c.magenta>只是昨天我对那个属性进行了重命名</c>

00:24:43.851 --> 00:24:46.153
<c.magenta>我猜因为我忘记了</c>
<c.magenta>在单元测试中对属性重命名</c>

00:24:46.220 --> 00:24:49.189
<c.magenta>让我们想想如何找出这个方法的新名字</c>

00:24:50.524 --> 00:24:53.694
<c.magenta>开始对代码进行追踪</c>
<c.magenta>按住Command键</c>

00:24:54.161 --> 00:24:56.029
<c.magenta>点击数据源对象</c>

00:24:56.129 --> 00:24:58.599
<c.magenta>页面将会跳转到变量定义的地方</c>

00:24:58.665 --> 00:25:02.002
<c.magenta>我们可以看到我将它初始化为</c>
<c.magenta>QuakeDataSource</c>

00:24:58.665 --> 00:25:02.002
<c.magenta>我们可以看到我将它初始化为</c>
<c.magenta>QuakeDataSource</c>

00:25:02.870 --> 00:25:05.072
<c.magenta>我们再一次按住Command键</c>

00:25:05.405 --> 00:25:07.140
<c.magenta>在QuakeDataSource上进行点击</c>

00:25:07.207 --> 00:25:10.377
<c.magenta>然后会跳转到</c>
<c.magenta>QuakeDataSource定义的地方</c>

00:25:11.111 --> 00:25:14.248
<c.magenta>我将开始滚动文件查找新添加的属性</c>

00:25:14.515 --> 00:25:15.649
<c.magenta>但是有一个更好的方法</c>

00:25:17.117 --> 00:25:20.521
<c.magenta>代码编辑顶部的跳转条块</c>
<c.magenta>显示了每一个方法</c>

00:25:20.587 --> 00:25:24.291
<c.magenta>Xcode根据文件中</c>
<c.magenta>符号出现的先后顺序展示</c>

00:25:25.058 --> 00:25:26.894
<c.magenta>有好几种方法可以达到类似的效果</c>

00:25:26.960 --> 00:25:29.363
<c.magenta>如果当它弹出时</c>
<c.magenta>我按下Command键</c>

00:25:29.463 --> 00:25:31.431
<c.magenta>Xcode会根据字母顺序进行显示</c>

00:25:31.498 --> 00:25:33.333
<c.magenta>而不是出现的顺序</c>

00:25:34.468 --> 00:25:39.606
<c.magenta>或者我可以进行输入</c>
<c.magenta>Xcode会对列表进行过滤</c>

00:25:39.706 --> 00:25:43.277
<c.magenta>曾被命名Sorted Quakes</c>
<c.magenta>或许现名依然带有Quankes</c>

00:25:43.544 --> 00:25:46.413
<c.magenta>我将输入Quakes</c>
<c.magenta>然后这里会显示属性和方法</c>

00:25:46.480 --> 00:25:47.981
<c.magenta>包含Quakes字符属性和方法</c>

00:25:48.348 --> 00:25:49.883
<c.magenta>里面有一orderedQuakes</c>

00:25:49.950 --> 00:25:51.952
<c.magenta>感觉它应该是我们要找的属性</c>

00:25:52.686 --> 00:25:57.191
<c.magenta>通过这次查找以后</c>
<c.magenta>你再查找别的内容时 都会比较容易了</c>

00:25:57.457 --> 00:26:01.428
<c.magenta>如果我简单输入OQ</c>
<c.magenta>Xcode会找到orderedQuakes</c>

00:25:57.457 --> 00:26:01.428
<c.magenta>如果我简单输入OQ</c>
<c.magenta>Xcode会找到orderedQuakes</c>

00:26:01.495 --> 00:26:05.232
<c.magenta>因为字母O和Q</c>
<c.magenta>在属性的名字上依次出现</c>

00:26:06.967 --> 00:26:08.702
<c.magenta>我将向你展示最后的一些内容</c>

00:26:09.069 --> 00:26:10.504
<c.magenta>或许你已注意到我有两个标题</c>

00:26:10.571 --> 00:26:13.440
<c.magenta>这儿的TODO注释</c>
<c.magenta>提醒我需要添加更多的性能测试</c>

00:26:13.774 --> 00:26:16.510
<c.magenta>有头部将属性和方法分开</c>

00:26:17.044 --> 00:26:20.614
<c.magenta>你可以进行配置</c>
<c.magenta>将指定的注释加入你的源代码中</c>

00:26:20.681 --> 00:26:24.451
<c.magenta>就像TODO和MARK注释那样</c>
<c.magenta>有一个标题名字</c>

00:26:24.952 --> 00:26:27.221
<c.magenta>使得弹出的跳转栏</c>

00:26:27.287 --> 00:26:30.224
<c.magenta>按照你设定的方式</c>
<c.magenta>显示使得代码间跳转更容易</c>

00:26:31.592 --> 00:26:33.060
<c.magenta>一切就绪 让我们查找该属性</c>

00:26:33.126 --> 00:26:35.729
<c.magenta>我将再次键入OQ</c>
<c.magenta>并且选择orderedQuakes</c>

00:26:36.129 --> 00:26:37.598
<c.magenta>我们找到它了</c>

00:26:37.898 --> 00:26:40.100
<c.magenta>让我们继续进行然后复制方法的名字</c>

00:26:41.001 --> 00:26:44.471
<c.magenta>使用返回箭头按钮</c>
<c.magenta>以便跳回我们的测试文件</c>

00:26:45.439 --> 00:26:48.609
<c.magenta>将新的方法名字粘贴到这里</c>

00:26:48.809 --> 00:26:50.143
<c.magenta>当我做以上操作时 我希望你注意</c>

00:26:50.210 --> 00:26:52.546
<c.magenta>位于代码编辑区左侧的错误标记</c>

00:26:52.813 --> 00:26:54.515
<c.magenta>并且错误在问题导航栏也有显示</c>

00:26:55.682 --> 00:26:58.719
<c.magenta>粘贴正确的名字到这里</c>
<c.magenta>然后两个地方的错误标识消失</c>

00:26:59.019 --> 00:27:02.656
<c.magenta>因为问题导航栏会对</c>
<c.magenta>你所做的修改进行实时追踪</c>

00:26:59.019 --> 00:27:02.656
<c.magenta>因为问题导航栏会对</c>
<c.magenta>你所做的修改进行实时追踪</c>

00:27:02.789 --> 00:27:05.459
<c.magenta>所以我们可以在你修改代码时</c>
<c.magenta>看到代码的状态</c>

00:27:05.526 --> 00:27:08.996
<c.magenta>不用等到构建时 才能知道代码的对错</c>

00:27:10.764 --> 00:27:15.035
<c.magenta>好了 我们修复了编译错误</c>
<c.magenta>让我们再一次进行测试</c>

00:27:15.903 --> 00:27:19.006
<c.magenta>当我做完上述操作</c>
<c.magenta>Xcode会编译我修改后的代码</c>

00:27:19.339 --> 00:27:21.975
<c.magenta>Xcode正准备</c>
<c.magenta>将我们的测试运行在模拟器上</c>

00:27:22.042 --> 00:27:24.111
<c.magenta>你可以从顶部的活动去观察到</c>

00:27:24.912 --> 00:27:26.213
<c.magenta>看起来我们的测试在运行</c>

00:27:26.280 --> 00:27:28.749
<c.magenta>让我们切回测试导航栏来看发生了什么</c>

00:27:29.683 --> 00:27:33.053
<c.magenta>从这里的微小变化</c>
<c.magenta>可以看出测试正在运行</c>

00:27:33.120 --> 00:27:34.988
<c.magenta>看起来像是性能测试</c>

00:27:35.189 --> 00:27:36.223
<c.magenta>那会持续一会儿</c>

00:27:36.290 --> 00:27:39.126
<c.magenta>让我们点击停止按钮回头看下</c>

00:27:40.327 --> 00:27:42.062
<c.magenta>性能测试是有必要的</c>

00:27:42.162 --> 00:27:44.731
<c.magenta>但是我需要对</c>
<c.magenta>我的单元测试进行迭代修改</c>

00:27:44.798 --> 00:27:47.734
<c.magenta>我不想每次都等待性能测试完成</c>

00:27:47.935 --> 00:27:50.304
<c.magenta>我们需要配置不同的规则</c>

00:27:50.370 --> 00:27:52.339
<c.magenta>不会每次修改都进行性能测试</c>

00:27:53.507 --> 00:27:54.441
<c.magenta>为了配置规则</c>

00:27:54.508 --> 00:27:57.778
<c.magenta>弹出规则菜单选择编辑规则</c>

00:27:59.146 --> 00:28:01.548
<c.magenta>Xcode会显示出规则编辑列表</c>

00:27:59.146 --> 00:28:01.548
<c.magenta>Xcode会显示出规则编辑列表</c>

00:28:01.915 --> 00:28:03.684
<c.magenta>你可以看到在左边有一个标签页</c>

00:28:03.750 --> 00:28:06.019
<c.magenta>对应着五个规则的动作</c>

00:28:06.420 --> 00:28:08.255
<c.magenta>还有顶部的构建标签</c>

00:28:08.388 --> 00:28:11.592
<c.magenta>让我们选择哪一个目标</c>
<c.magenta>将要按照这个规则构建</c>

00:28:11.692 --> 00:28:14.561
<c.magenta>以便在目标的产品上执行这些操作</c>

00:28:15.996 --> 00:28:19.666
<c.magenta>就像运行操作</c>
<c.magenta>我需要选择哪个执行文件去运行</c>

00:28:19.733 --> 00:28:20.968
<c.magenta>该例中 就是我的应用</c>

00:28:21.602 --> 00:28:24.972
<c.magenta>我应当传递命令行参数和环境变量</c>

00:28:25.639 --> 00:28:29.042
<c.magenta>像Xcode功能强大的地址追踪功能</c>

00:28:29.109 --> 00:28:30.844
<c.magenta>会帮你找出难题的成因</c>

00:28:31.111 --> 00:28:35.182
<c.magenta>由于这些诊断是在运行时进行的</c>

00:28:35.249 --> 00:28:39.152
<c.magenta>对于已经发布存档的应用来说</c>
<c.magenta>没有任何影响</c>

00:28:39.219 --> 00:28:43.557
<c.magenta>所以你不用担心这些诊断的干扰</c>
<c.magenta>你将应用发布到App Store</c>

00:28:44.791 --> 00:28:46.994
<c.magenta>接下来进行测试操作并且你会看到</c>

00:28:47.060 --> 00:28:49.530
<c.magenta>测试将会根据我配置的规则运行</c>

00:28:50.163 --> 00:28:51.632
<c.magenta>在我改变规则之前</c>

00:28:51.732 --> 00:28:54.635
<c.magenta>我要做一些我编辑规则时经常会做的事</c>

00:28:54.701 --> 00:28:58.739
<c.magenta>拷贝一份规则然后这份拷贝上进行编辑</c>

00:28:59.439 --> 00:29:01.308
<c.magenta>因为我仍想保留原先的规则</c>

00:28:59.439 --> 00:29:01.308
<c.magenta>因为我仍想保留原先的规则</c>

00:29:01.375 --> 00:29:03.243
<c.magenta>原先的规则可以进行性能测试</c>

00:29:03.310 --> 00:29:05.179
<c.magenta>因为我真的想跑一下我的性能测试</c>

00:29:05.445 --> 00:29:08.582
<c.magenta>我只想要一个能运行单元测试的规则</c>

00:29:09.816 --> 00:29:12.653
<c.magenta>所以做了上面的操作</c>
<c.magenta>然后选择复制规则按钮</c>

00:29:13.387 --> 00:29:15.556
<c.magenta>Xcode会让我们对新规则重命名</c>

00:29:15.622 --> 00:29:18.525
<c.magenta>我们将它命名为</c>
<c.magenta>QuakenatorNoPerf</c>

00:29:19.593 --> 00:29:23.030
<c.magenta>现在我们可以进行测试操作了</c>
<c.magenta>找到我们的性能测试</c>

00:29:23.163 --> 00:29:25.232
<c.magenta>取消复选框来禁止进行性能测试</c>

00:29:26.466 --> 00:29:30.904
<c.magenta>在此你其实可以禁止这些测试前提是</c>

00:29:30.971 --> 00:29:33.974
<c.magenta>有测试失败了而且你没有时间处理</c>

00:29:34.975 --> 00:29:37.411
<c.magenta>好了 我们完成了新规则的配置工作</c>

00:29:37.477 --> 00:29:39.313
<c.magenta>在我开始进行测试前</c>

00:29:39.379 --> 00:29:41.348
<c.magenta>我会给大家展示更实用的东西</c>

00:29:41.415 --> 00:29:43.550
<c.magenta>那就是如何管理我们的规则</c>

00:29:44.618 --> 00:29:47.020
<c.magenta>管理规则的按钮在这个表格的底部</c>

00:29:47.287 --> 00:29:49.690
<c.magenta>按下后</c>
<c.magenta>Xcode会显示规则的管理界面</c>

00:29:49.923 --> 00:29:53.460
<c.magenta>在此Xcode显示工程中的所有规则</c>

00:29:54.795 --> 00:29:56.630
<c.magenta>我要提醒大家需要注意的是</c>

00:29:56.697 --> 00:29:58.832
<c.magenta>在右边的共享复选框列</c>

00:29:59.666 --> 00:30:01.001
<c.magenta>如果一个规则是共享的</c>

00:29:59.666 --> 00:30:01.001
<c.magenta>如果一个规则是共享的</c>

00:30:01.168 --> 00:30:04.037
<c.magenta>假设你也将规则提交到了</c>
<c.magenta>源代码管理系统</c>

00:30:04.304 --> 00:30:08.342
<c.magenta>当你的工作伙伴使用这个工程的时候</c>
<c.magenta>他们也会得到相同的规则</c>

00:30:08.809 --> 00:30:10.844
<c.magenta>你或者你工作伙伴做的任何更改</c>

00:30:11.078 --> 00:30:13.647
<c.magenta>假设你将这些更改提交到了</c>
<c.magenta>源代码控制系统</c>

00:30:13.814 --> 00:30:15.549
<c.magenta>这些更改会和你的工作伙伴共享</c>

00:30:15.616 --> 00:30:18.285
<c.magenta>这样使得配置特定的规则变得十分容易</c>

00:30:18.352 --> 00:30:21.321
<c.magenta>对于你想让每个人使用规则</c>
<c.magenta>和同工作伙伴分享规则来说</c>

00:30:22.656 --> 00:30:25.325
<c.magenta>如果我的工作伙伴也想只运行单元测试</c>

00:30:25.392 --> 00:30:27.027
<c.magenta>不运行性能测试</c>

00:30:27.094 --> 00:30:29.062
<c.magenta>我就可以同他们分享我的新规则</c>

00:30:30.397 --> 00:30:31.765
<c.magenta>好了 我们已完成这些操作</c>

00:30:31.832 --> 00:30:34.801
<c.magenta>让我们切回然后再一次运行测试</c>

00:30:38.405 --> 00:30:40.307
<c.magenta>这是在模拟器中</c>
<c.magenta>运行单元测试的准备工作</c>

00:30:41.008 --> 00:30:43.544
<c.magenta>附加到测试 测试正在运行</c>

00:30:43.777 --> 00:30:46.713
<c.magenta>在左边的测试导航面板上你可以看到</c>

00:30:46.813 --> 00:30:50.017
<c.magenta>我已经通过了大多数的测试</c>
<c.magenta>但是我有一个测试失败了</c>

00:30:51.285 --> 00:30:53.287
<c.magenta>如果我想看看最近的时间点发生了什么</c>

00:30:53.353 --> 00:30:56.023
<c.magenta>我可以在Xcode的报告导航栏</c>
<c.magenta>找到这些信息</c>

00:30:57.858 --> 00:31:01.895
<c.magenta>报告导航栏显示了</c>
<c.magenta>我进行的每一步操作的日志</c>

00:30:57.858 --> 00:31:01.895
<c.magenta>报告导航栏显示了</c>
<c.magenta>我进行的每一步操作的日志</c>

00:31:02.062 --> 00:31:05.132
<c.magenta>日志按原先进行测试的规则进行分组</c>

00:31:05.799 --> 00:31:10.070
<c.magenta>这儿显示在我进行测试时</c>
<c.magenta>我执行了自动构建</c>

00:31:10.137 --> 00:31:11.939
<c.magenta>然后我请求进行测试操作</c>

00:31:13.073 --> 00:31:16.410
<c.magenta>如果我选择了构建的日志</c>
<c.magenta>然后调整过滤器显示所有的日志</c>

00:31:16.677 --> 00:31:18.946
<c.magenta>我看到Xcode执行的每一步命令</c>

00:31:19.012 --> 00:31:22.049
<c.magenta>构建应用和测试的命令</c>

00:31:23.483 --> 00:31:29.056
<c.magenta>若选择测试的日志</c>
<c.magenta>Xcode会显示每个测试和其状态</c>

00:31:29.122 --> 00:31:32.659
<c.magenta>还可以展开它去查找测试失败的消息</c>

00:31:32.926 --> 00:31:34.728
<c.magenta>在该实例中</c>
<c.magenta>我测试中的一个断言失败</c>

00:31:34.795 --> 00:31:37.264
<c.magenta>因为一个地震的等级超过了限定大小</c>

00:31:38.832 --> 00:31:42.302
<c.magenta>我把鼠标移到测试中的一个上面</c>
<c.magenta>我们会看到一个跳转箭头</c>

00:31:42.836 --> 00:31:45.806
<c.magenta>如果我点击箭头</c>
<c.magenta>Xcode在右边显示失败的测试代码</c>

00:31:47.207 --> 00:31:49.476
<c.magenta>你可以看到我在哪里对测试进行了声明</c>

00:31:49.576 --> 00:31:51.812
<c.magenta>在测试方法代码的左边有一个标识</c>

00:31:51.879 --> 00:31:54.047
<c.magenta>表明那个就是测试失败的方法</c>

00:31:55.282 --> 00:31:57.751
<c.magenta>如果我继续向下滚动</c>
<c.magenta>可以发现导致测试失败的代码</c>

00:31:58.285 --> 00:32:01.588
<c.magenta>这儿有一个检查测试数据范围的断言</c>

00:31:58.285 --> 00:32:01.588
<c.magenta>这儿有一个检查测试数据范围的断言</c>

00:32:01.655 --> 00:32:06.860
<c.magenta>或者地震的大小</c>
<c.magenta>看起来范围检查失败了</c>

00:32:06.927 --> 00:32:08.161
<c.magenta>其实这些操作貌似挺简单</c>

00:32:08.228 --> 00:32:11.031
<c.magenta>应当有一个较大值的时候</c>
<c.magenta>程序却给出了一个较小的值</c>

00:32:11.098 --> 00:32:13.867
<c.magenta>因为我对给出的正数值范围进行了检查</c>

00:32:13.934 --> 00:32:15.636
<c.magenta>在此我应当对测试用例进行修复</c>

00:32:16.837 --> 00:32:19.940
<c.magenta>再次运行测试看看我们是否修复了它</c>

00:32:20.240 --> 00:32:25.812
<c.magenta>但是由于我在失败的测试上反复修改</c>
<c.magenta>有一个更快完成所有的测试的方法</c>

00:32:25.946 --> 00:32:27.681
<c.magenta>我可以仅仅运行失败的测试</c>

00:32:28.482 --> 00:32:32.686
<c.magenta>为了那样做</c>
<c.magenta>我转到测试导航栏并把鼠标移动测试上</c>

00:32:32.853 --> 00:32:36.023
<c.magenta>当我那样做的时候</c>
<c.magenta>你看到这个标志变成了一个小播放按钮</c>

00:32:36.523 --> 00:32:40.494
<c.magenta>该按钮可仅仅运行失败的测试</c>
<c.magenta>或我只运行这些测试中的一个</c>

00:32:41.161 --> 00:32:43.530
<c.magenta>或者如果我不想切回测试导航栏</c>

00:32:43.664 --> 00:32:45.966
<c.magenta>我甚至可以从左边代码编辑区运行测试</c>

00:32:46.066 --> 00:32:49.536
<c.magenta>只是把鼠标移到</c>
<c.magenta>测试方法左边的失败标志上</c>

00:32:49.603 --> 00:32:51.505
<c.magenta>然后播放按钮就会出现</c>

00:32:52.639 --> 00:32:53.774
<c.magenta>现在我们点击这个按钮</c>

00:32:54.141 --> 00:32:58.045
<c.magenta>构建我们的测试然后再次运行测试</c>

00:33:00.380 --> 00:33:03.550
<c.magenta>我们又运行了一次测试</c>
<c.magenta>然而结果是我们的测试依旧失败</c>

00:33:03.617 --> 00:33:05.118
<c.magenta>所以一定还有其他问题</c>

00:33:05.752 --> 00:33:06.587
<c.magenta>我接着向下翻</c>

00:33:07.788 --> 00:33:10.390
<c.magenta>我看到每一个地震数据</c>

00:33:10.457 --> 00:33:13.727
<c.magenta>有一个明显的标识</c>
<c.magenta>形象化标识着地震的量级</c>

00:33:13.994 --> 00:33:15.395
<c.magenta>对我们测试的地震数据来说</c>

00:33:15.462 --> 00:33:18.432
<c.magenta>我们只是保证了</c>
<c.magenta>每一个地震有一个形象化的标识</c>

00:33:18.498 --> 00:33:21.668
<c.magenta>但是他们之中有一个标识是nil</c>
<c.magenta>所以就是标识数据丢失了</c>

00:33:22.803 --> 00:33:25.138
<c.magenta>这不像是我测试代码的问题</c>

00:33:25.205 --> 00:33:27.774
<c.magenta>可能在新建地震数据对象时出了问题</c>

00:33:27.841 --> 00:33:31.512
<c.magenta>我将跳转到代码里面</c>
<c.magenta>仔细看那里发生了什么</c>

00:33:32.713 --> 00:33:36.049
<c.magenta>我将给大家展示一些</c>
<c.magenta>在Xcode中浏览代码的方法</c>

00:33:36.116 --> 00:33:40.087
<c.magenta>但是我将展示给大家的是</c>
<c.magenta>最实用的导航手势</c>

00:33:41.154 --> 00:33:43.590
<c.magenta>在Xcode的文件菜单中</c>
<c.magenta>有一个命令</c>

00:33:44.057 --> 00:33:46.293
<c.magenta>唔... 快速打开</c>

00:33:46.860 --> 00:33:49.596
<c.magenta>这是一个键盘的快捷键 你一定要记住</c>

00:33:49.663 --> 00:33:52.699
<c.magenta>Command+Shift+O</c>
<c.magenta>你会想一直使用该快捷键的</c>

00:33:53.700 --> 00:33:57.538
<c.magenta>如果我选择快速打开</c>
<c.magenta>会在窗口的中央显示一个文本框</c>

00:33:57.938 --> 00:34:00.908
<c.magenta>我可以在这里进行键入查找所有标识</c>

00:33:57.938 --> 00:34:00.908
<c.magenta>我可以在这里进行键入查找所有标识</c>

00:34:00.974 --> 00:34:03.844
<c.magenta>像方法的名字 在我们的工程中</c>

00:34:03.911 --> 00:34:06.647
<c.magenta>同样也有Apple的API标识</c>

00:34:06.914 --> 00:34:09.216
<c.magenta>不管你使用它搜索任何东西</c>
<c.magenta>都是十分简单的</c>

00:34:09.283 --> 00:34:12.418
<c.magenta>不论搜索的内容在我们的代码中</c>
<c.magenta>还是在框架的代码中</c>

00:34:13.453 --> 00:34:15.188
<c.magenta>这个工具十分好 支持模糊查询</c>

00:34:15.255 --> 00:34:18.192
<c.magenta>但是我也同样需要准确知道</c>
<c.magenta>我查询内容的名字</c>

00:34:18.525 --> 00:34:22.596
<c.magenta>在这个例子中 地震对象在类似于</c>
<c.magenta>fetchesquakes方法中创建</c>

00:34:22.663 --> 00:34:25.065
<c.magenta>让我们键入</c>
<c.magenta>fetchesquakes</c>

00:34:25.732 --> 00:34:28.902
<c.magenta>你可以看到它查找到了</c>
<c.magenta>myFetchLatestQuakes方法</c>

00:34:29.203 --> 00:34:32.572
<c.magenta>即使我没有正确的名字</c>
<c.magenta>因为它是模糊匹配</c>

00:34:33.040 --> 00:34:35.976
<c.magenta>这个方法的三个实例</c>
<c.magenta>在我们的工程中出现过</c>

00:34:36.043 --> 00:34:38.679
<c.magenta>选中的第一个方法是</c>
<c.magenta>我创建测试数据的地方</c>

00:34:38.745 --> 00:34:39.980
<c.magenta>它就是我们需要找的</c>

00:34:40.047 --> 00:34:42.616
<c.magenta>我点击它然后跳转到它所在的代码</c>

00:34:44.016 --> 00:34:46.853
<c.magenta>好的 在这个方法里</c>
<c.magenta>我创建了地震数据对象</c>

00:34:47.087 --> 00:34:49.322
<c.magenta>我没有看到代码有任何问题</c>

00:34:49.523 --> 00:34:51.992
<c.magenta>这就需要仔细查看究竟出了什么问题</c>

00:34:52.259 --> 00:34:54.862
<c.magenta>为了找出问题</c>
<c.magenta>我要使用Xcode的调试器</c>

00:34:55.862 --> 00:35:00.367
<c.magenta>不论你在Xcode中运行应用或</c>
<c.magenta>进行测试Xcode的调试器都可用</c>

00:34:55.862 --> 00:35:00.367
<c.magenta>不论你在Xcode中运行应用或</c>
<c.magenta>进行测试Xcode的调试器都可用</c>

00:35:00.601 --> 00:35:03.904
<c.magenta>你可以使工程停在代码的一行或者中断</c>

00:35:04.037 --> 00:35:06.106
<c.magenta>通过在代码行上设置断点</c>

00:35:07.541 --> 00:35:10.711
<c.magenta>我可以通过点击左边代码编辑区的</c>
<c.magenta>边缘设置断点</c>

00:35:10.777 --> 00:35:13.247
<c.magenta>然后你就会看到</c>
<c.magenta>一个断点的标识出现在代码行上</c>

00:35:14.114 --> 00:35:15.983
<c.magenta>我可以再次点击那个断点使其灰掉</c>

00:35:16.049 --> 00:35:18.886
<c.magenta>暂时禁用断点如果你想忽略掉断点</c>

00:35:18.952 --> 00:35:22.756
<c.magenta>或者当我们使用完之后</c>
<c.magenta>可以将它拖出断点就这样删除了</c>

00:35:23.824 --> 00:35:26.894
<c.magenta>在这个例子中 我确实需要断点</c>
<c.magenta>我将再次点击创建断点</c>

00:35:27.728 --> 00:35:29.796
<c.magenta>再次运行测试</c>

00:35:29.997 --> 00:35:32.766
<c.magenta>我将给大家展示最后一个</c>
<c.magenta>快速运行相同测试的方法</c>

00:35:32.933 --> 00:35:35.335
<c.magenta>在Xcode中有一个叫做</c>
<c.magenta>再次测试的命令</c>

00:35:35.569 --> 00:35:39.206
<c.magenta>再次测试命令将会运行</c>
<c.magenta>我运行过的任何单个测试或测试集</c>

00:35:39.406 --> 00:35:43.076
<c.magenta>这个命令便于我们重复进行相同的测试</c>

00:35:44.211 --> 00:35:46.847
<c.magenta>可以在Xcode的产品菜单中</c>
<c.magenta>使用再次测试命令</c>

00:35:46.914 --> 00:35:48.982
<c.magenta>在执行操作</c>
<c.magenta>子菜单下</c>

00:35:49.483 --> 00:35:52.486
<c.magenta>这儿有许多有用的命令</c>
<c.magenta>这个是再次测试命令</c>

00:35:53.453 --> 00:35:57.558
<c.magenta>我们选择它</c>
<c.magenta>Xcode只会运行这一个测试</c>

00:35:58.258 --> 00:36:01.562
<c.magenta>在模拟器中附加到测试 开始运行测试</c>

00:35:58.258 --> 00:36:01.562
<c.magenta>在模拟器中附加到测试 开始运行测试</c>

00:36:01.828 --> 00:36:05.832
<c.magenta>你可以看到Xcode在调试器中</c>
<c.magenta>停在了那行代码</c>

00:36:07.167 --> 00:36:09.369
<c.magenta>当调试器停止的时候</c>
<c.magenta>就会发生一些事情</c>

00:36:09.803 --> 00:36:12.739
<c.magenta>首先 在底部 调试的条块出现了</c>

00:36:12.806 --> 00:36:15.909
<c.magenta>一些按钮来允许我们进行调试操作</c>

00:36:15.976 --> 00:36:18.378
<c.magenta>例如继续 单步调试 步进调试</c>

00:36:19.713 --> 00:36:22.549
<c.magenta>调试按钮下面是变量区域</c>

00:36:22.616 --> 00:36:25.686
<c.magenta>在我们当前可见的代码区域</c>
<c.magenta>显示每一个变量值</c>

00:36:26.086 --> 00:36:28.121
<c.magenta>这儿我声明了三个不同的地震对象</c>

00:36:28.188 --> 00:36:31.091
<c.magenta>但是我还没有给一些变量赋值</c>
<c.magenta>所以显示为空值</c>

00:36:32.492 --> 00:36:34.761
<c.magenta>在右手边是控制台区域</c>

00:36:34.828 --> 00:36:38.098
<c.magenta>显示程序打印到标准输出</c>
<c.magenta>或者标准错误的内容</c>

00:36:38.165 --> 00:36:40.701
<c.magenta>我过会儿会演示这部分内容</c>

00:36:42.169 --> 00:36:45.339
<c.magenta>最后 你可能注意到</c>
<c.magenta>因为Xcode在调试器中停止了</c>

00:36:45.405 --> 00:36:47.207
<c.magenta>命中了断点</c>

00:36:47.274 --> 00:36:50.210
<c.magenta>Xcode自动切换到调试面板</c>

00:36:50.878 --> 00:36:53.881
<c.magenta>这儿Xcode显示了</c>
<c.magenta>在每一个线程中中断的代码</c>

00:36:54.181 --> 00:36:58.185
<c.magenta>这个代码现在是</c>
<c.magenta>自动运行在后台线程的 线程6</c>

00:36:58.652 --> 00:37:03.390
<c.magenta>所有的堆栈帧中</c>
<c.magenta>我们能访问到代码的显示为黑色</c>

00:36:58.652 --> 00:37:03.390
<c.magenta>所有的堆栈帧中</c>
<c.magenta>我们能访问到代码的显示为黑色</c>

00:37:03.891 --> 00:37:06.593
<c.magenta>然而所有堆栈帧包含的系统代码</c>

00:37:06.660 --> 00:37:11.298
<c.magenta>我们都没有源代码并且</c>
<c.magenta>无法查看的代码显示为灰色</c>

00:37:11.965 --> 00:37:16.003
<c.magenta>你有可能注意到这儿有虚线</c>
<c.magenta>同这些堆栈帧是对齐的</c>

00:37:16.069 --> 00:37:18.772
<c.magenta>这是因为我真的不需要</c>
<c.magenta>了解这10帧系统代码</c>

00:37:18.839 --> 00:37:20.240
<c.magenta>我也没有这些帧的代码</c>

00:37:20.307 --> 00:37:23.110
<c.magenta>当然 假如我想看到底发生了什么</c>

00:37:23.177 --> 00:37:26.313
<c.magenta>我可以调整位于调试面板底部的</c>
<c.magenta>控件进行过滤</c>

00:37:27.781 --> 00:37:29.816
<c.magenta>一切就绪 让我们单步调试这些代码</c>

00:37:29.883 --> 00:37:32.319
<c.magenta>调试我们第一次初始化</c>
<c.magenta>地震对象之处看看发生了什么</c>

00:37:32.653 --> 00:37:34.721
<c.magenta>我将使用单步调试完成上述操作</c>

00:37:35.522 --> 00:37:38.192
<c.magenta>当我点击单步调试后</c>
<c.magenta>Xcode会运行到下一行代码</c>

00:37:38.425 --> 00:37:40.727
<c.magenta>你将看到第一个地震对象</c>

00:37:40.794 --> 00:37:42.763
<c.magenta>在变量视图中已经被初始化</c>

00:37:44.097 --> 00:37:47.801
<c.magenta>我可以点击这里</c>
<c.magenta>查看这个新建地震对象的所有属性</c>

00:37:48.502 --> 00:37:50.637
<c.magenta>这里是可见的标识</c>

00:37:50.737 --> 00:37:53.941
<c.magenta>这是一张图像我可能想仔细观察下</c>

00:37:54.007 --> 00:37:57.644
<c.magenta>Xcode让我们</c>
<c.magenta>可以像上面那样快速查看对象</c>

00:37:57.978 --> 00:38:00.013
<c.magenta>当我快速查看它时</c>
<c.magenta>Xcode会读取这张图像</c>

00:37:57.978 --> 00:38:00.013
<c.magenta>当我快速查看它时</c>
<c.magenta>Xcode会读取这张图像</c>

00:38:00.080 --> 00:38:03.250
<c.magenta>加载到程序内存并且显示到这里</c>

00:38:03.317 --> 00:38:06.053
<c.magenta>这样你就能检查这张图像是怎样的</c>

00:38:07.454 --> 00:38:10.757
<c.magenta>这个标识明显不是这个程序的</c>
<c.magenta>因为它是非空的</c>

00:38:10.958 --> 00:38:12.993
<c.magenta>查看下一个地震对象</c>

00:38:13.260 --> 00:38:15.162
<c.magenta>为了查看类信息 我将步进调试到创建</c>

00:38:15.229 --> 00:38:17.264
<c.magenta>地震对象函数里</c>
<c.magenta>看看里面究竟发生了什么</c>

00:38:18.131 --> 00:38:21.935
<c.magenta>我使用步进按钮</c>
<c.magenta>调试进对象的初始化函数</c>

00:38:23.537 --> 00:38:25.105
<c.magenta>就是我们对地震对象做初始化的方法</c>

00:38:25.172 --> 00:38:27.674
<c.magenta>我可以对代码做单行调试</c>

00:38:28.675 --> 00:38:32.045
<c.magenta>这里的switch语句里面</c>
<c.magenta>选择要使用的量级大小标识符</c>

00:38:32.379 --> 00:38:36.350
<c.magenta>这里是标识符初始化的地方</c>
<c.magenta>我感觉这里写的有些不妥</c>

00:38:36.416 --> 00:38:40.387
<c.magenta>我想IIII不是一个有效的罗马数字</c>

00:38:41.288 --> 00:38:45.259
<c.magenta>这有可能是问题所在</c>
<c.magenta>我尝试修改这里的代码</c>

00:38:45.325 --> 00:38:47.361
<c.magenta>终止程序运行 再次运行测试</c>

00:38:47.461 --> 00:38:51.965
<c.magenta>Xcode使这变得可能</c>
<c.magenta>每次重新运行程序的时候不用停止程序</c>

00:38:52.232 --> 00:38:54.868
<c.magenta>为了达到上述效果</c>
<c.magenta>我会使用调试器表达式</c>

00:38:56.470 --> 00:39:02.176
<c.magenta>在控制台区域 我使用PO命令</c>
<c.magenta>就是把对象打印出来的意思</c>

00:38:56.470 --> 00:39:02.176
<c.magenta>在控制台区域 我使用PO命令</c>
<c.magenta>就是把对象打印出来的意思</c>

00:39:02.743 --> 00:39:06.180
<c.magenta>这条命令支持有效的Swift</c>
<c.magenta>或者Objective-C表达式</c>

00:39:06.246 --> 00:39:07.347
<c.magenta>我在这里运行它</c>

00:39:07.681 --> 00:39:12.920
<c.magenta>我可以拷贝这个图像的初始化函数</c>
<c.magenta>把它粘贴到控制台区域</c>

00:39:13.320 --> 00:39:15.455
<c.magenta>我要将控制台区域拉大一点</c>

00:39:15.522 --> 00:39:19.393
<c.magenta>使用清空按钮清空控制台的已有文本</c>
<c.magenta>这样我就能了解到做了什么</c>

00:39:20.727 --> 00:39:24.698
<c.magenta>现在我将点击回车</c>
<c.magenta>在我的程序中运行这行命令</c>

00:39:25.332 --> 00:39:28.602
<c.magenta>你可以看到命令返回了空值</c>
<c.magenta>没有那个名字的图像</c>

00:39:29.603 --> 00:39:32.139
<c.magenta>点击向上的箭头</c>
<c.magenta>让执行过的表达式再次显示</c>

00:39:32.439 --> 00:39:36.476
<c.magenta>试一下IV</c>
<c.magenta>我想这个罗马数字4应该是对的</c>

00:39:37.077 --> 00:39:38.579
<c.magenta>我按下回车执行这条语句</c>

00:39:39.012 --> 00:39:42.216
<c.magenta>你可以看到</c>
<c.magenta>Xcode返回了一幅图像的实例</c>

00:39:42.282 --> 00:39:44.284
<c.magenta>看起来这个名字的图像是存在的</c>

00:39:45.552 --> 00:39:47.821
<c.magenta>到此为止 停止调试器</c>

00:39:48.455 --> 00:39:50.457
<c.magenta>我将把图像换成IV</c>

00:39:51.458 --> 00:39:55.062
<c.magenta>使用再次测试命令</c>
<c.magenta>再次运行测试</c>

00:39:56.563 --> 00:39:59.099
<c.magenta>Xcode会对刚才代码更改进行构建</c>

00:39:59.533 --> 00:40:01.134
<c.magenta>上面我们为测试做了准备</c>

00:39:59.533 --> 00:40:01.134
<c.magenta>上面我们为测试做了准备</c>

00:40:01.301 --> 00:40:03.971
<c.magenta>切换到测试导航栏看看测试的结果</c>

00:40:04.505 --> 00:40:07.774
<c.magenta>而且 哦 那看起来</c>
<c.magenta>我还设置了一个断点</c>

00:40:08.475 --> 00:40:10.911
<c.magenta>我想运行我们的测试</c>
<c.magenta>并且不会停止调试器</c>

00:40:10.978 --> 00:40:13.347
<c.magenta>让我们看一下如何管理我们的断点</c>

00:40:14.381 --> 00:40:15.916
<c.magenta>Xcode的断点导航面板</c>

00:40:15.983 --> 00:40:21.355
<c.magenta>显示了我在工程中</c>
<c.magenta>设置的全部断点 展开这里</c>

00:40:21.722 --> 00:40:26.460
<c.magenta>我也可以在这里单独禁用他们</c>
<c.magenta>或者在我用完后 选中然后删除它们</c>

00:40:27.461 --> 00:40:30.430
<c.magenta>我可以添加一些不同类型的断点</c>
<c.magenta>在断点导航面板上</c>

00:40:30.497 --> 00:40:35.102
<c.magenta>像Swift有错误的时候抛出</c>
<c.magenta>单元测试失败</c>

00:40:35.169 --> 00:40:37.704
<c.magenta>或者在任何方法名字上标识</c>

00:40:39.106 --> 00:40:44.044
<c.magenta>如果我发现某个断点是我经常使用的</c>
<c.magenta>就像测试失败的断点</c>

00:40:44.478 --> 00:40:48.048
<c.magenta>我可以让那个断点在每个工程中</c>
<c.magenta>都是可用我需要简单的</c>

00:40:48.515 --> 00:40:53.053
<c.magenta>选择已经添加的断点 弹出菜单</c>

00:40:53.687 --> 00:40:55.989
<c.magenta>选择移动断点到用户</c>

00:40:56.990 --> 00:41:02.362
<c.magenta>移动就是将断点变为用户断点</c>
<c.magenta>使得断点可在我工作的任何工程上使用</c>

00:40:56.990 --> 00:41:02.362
<c.magenta>移动就是将断点变为用户断点</c>
<c.magenta>使得断点可在我工作的任何工程上使用</c>

00:41:04.031 --> 00:41:06.066
<c.magenta>就这样 在这个例子中 我还没准备</c>

00:41:06.133 --> 00:41:08.635
<c.magenta>删除我全部断点</c>
<c.magenta>是为了防止程序出现问题</c>

00:41:08.702 --> 00:41:12.072
<c.magenta>暂时禁用这些断点以便程序能正常运行</c>

00:41:12.606 --> 00:41:16.743
<c.magenta>我可以暂时禁用这些断点</c>
<c.magenta>使用调试条块上的断点按钮</c>

00:41:18.011 --> 00:41:20.781
<c.magenta>我将点击继续按钮完成测试</c>

00:41:21.315 --> 00:41:22.983
<c.magenta>回到测试导航栏</c>

00:41:23.217 --> 00:41:26.587
<c.magenta>你可以看到我通过了所有的测试</c>
<c.magenta>看起来我们成功了</c>

00:41:27.421 --> 00:41:28.956
<c.magenta>回顾一下我们做了什么</c>

00:41:29.823 --> 00:41:32.960
<c.magenta>回顾我们的更改</c>
<c.magenta>切回Xcode的工程导航面板</c>

00:41:33.227 --> 00:41:36.964
<c.magenta>使用在底部的过滤功能</c>
<c.magenta>叫做过滤代码控制状态</c>

00:41:37.998 --> 00:41:39.967
<c.magenta>这个功能会将工程导航面板展示给我</c>

00:41:40.200 --> 00:41:44.271
<c.magenta>这些文件有特定的代码控制状态</c>
<c.magenta>比如改动过的</c>

00:41:45.138 --> 00:41:47.207
<c.magenta>这两个功能让我了解到我做了什么更改</c>

00:41:47.274 --> 00:41:50.210
<c.magenta>这是很实用的功能</c>
<c.magenta>如果我有许多的工作集</c>

00:41:50.277 --> 00:41:53.247
<c.magenta>还有一些编码过程中用到的文件</c>
<c.magenta>我想在这些文件中快速跳转</c>

00:41:53.347 --> 00:41:54.848
<c.magenta>如果我修改了这些文件</c>

00:41:54.948 --> 00:41:58.185
<c.magenta>我可以使用过滤功能</c>
<c.magenta>限定出我正使用的文件</c>

00:41:59.887 --> 00:42:02.322
<c.magenta>如果我想查看我对一个文件所做的更改</c>

00:41:59.887 --> 00:42:02.322
<c.magenta>如果我想查看我对一个文件所做的更改</c>

00:42:02.489 --> 00:42:05.392
<c.magenta>我可以选择那个文件并且</c>
<c.magenta>使用Xcode的第三种编辑模式</c>

00:42:06.193 --> 00:42:09.363
<c.magenta>我已经给大家展示了</c>
<c.magenta>基本的编辑和编辑助手的用法</c>

00:42:09.696 --> 00:42:14.201
<c.magenta>Xcode第三种编辑模式是版式编辑</c>
<c.magenta>它有三个子模式</c>

00:42:15.369 --> 00:42:19.373
<c.magenta>对比编辑让我们能够</c>
<c.magenta>比较两个修订版间的差异</c>

00:42:19.439 --> 00:42:22.342
<c.magenta>或者是你没有提交的变化</c>
<c.magenta>相对于你最新的提交</c>

00:42:22.876 --> 00:42:25.279
<c.magenta>职责模式让你可以看到是谁</c>

00:42:25.345 --> 00:42:27.714
<c.magenta>在你文件的哪个版本</c>
<c.magenta>对每行代码做的改动</c>

00:42:28.549 --> 00:42:31.818
<c.magenta>日志模式将展示给你</c>
<c.magenta>源代码管理器的日志文件</c>

00:42:32.986 --> 00:42:35.122
<c.magenta>在这个示例中 我使用比较模式</c>

00:42:36.490 --> 00:42:39.860
<c.magenta>当我选择比较模式</c>
<c.magenta>Xcode会展示给我文件的两个版本</c>

00:42:40.260 --> 00:42:43.931
<c.magenta>在左边栏是我本地的文件</c>
<c.magenta>这里显示的是我已经更改的</c>

00:42:44.598 --> 00:42:47.768
<c.magenta>右边是我提交到代码管理器的最新版本</c>

00:42:47.835 --> 00:42:52.072
<c.magenta>这里显示给我的就是不同的部分</c>
<c.magenta>我已经修改的和我最新提交的</c>

00:42:53.407 --> 00:42:56.577
<c.magenta>在下面的中间部分显示的一些箭头</c>
<c.magenta>能实现修改之间跳转</c>

00:42:57.077 --> 00:42:58.312
<c.magenta>当我们查看变化的时候</c>

00:42:58.378 --> 00:43:01.381
<c.magenta>Xcode将对每行的更改</c>
<c.magenta>进行可视化的显示</c>

00:42:58.378 --> 00:43:01.381
<c.magenta>Xcode将对每行的更改</c>
<c.magenta>进行可视化的显示</c>

00:43:01.481 --> 00:43:04.518
<c.magenta>高亮显示在哪一行进行了更改</c>

00:43:06.019 --> 00:43:09.256
<c.magenta>如果我想通先前的版本进行对比</c>
<c.magenta>我可以这样弹出菜单</c>

00:43:09.323 --> 00:43:12.226
<c.magenta>然后选择哪个版本的文件</c>
<c.magenta>是我将要进行对比的</c>

00:43:12.826 --> 00:43:16.330
<c.magenta>或者我可以对比两个版本之间</c>
<c.magenta>旧版本同每一个其它版本</c>

00:43:16.396 --> 00:43:18.398
<c.magenta>在左边栏选择不同的版本文件</c>

00:43:19.933 --> 00:43:21.068
<c.magenta>这些改变应该没有错误</c>

00:43:21.368 --> 00:43:24.037
<c.magenta>现在我们可以对我们的更改进行提交了</c>

00:43:25.205 --> 00:43:27.641
<c.magenta>为了提交</c>
<c.magenta>需要点击Xcode的代码控制菜单</c>

00:43:27.708 --> 00:43:29.176
<c.magenta>然后选择提交条目</c>

00:43:29.810 --> 00:43:31.879
<c.magenta>然后会向下弹出Xcode的提交列表</c>

00:43:32.913 --> 00:43:35.249
<c.magenta>在左边 我能看到</c>
<c.magenta>我对文件做的所有更改</c>

00:43:35.315 --> 00:43:37.818
<c.magenta>包括其中的一些设置文件</c>
<c.magenta>如果我选择一个文件</c>

00:43:37.985 --> 00:43:40.420
<c.magenta>在提交表单的右侧会显示文件的对比</c>

00:43:40.487 --> 00:43:42.789
<c.magenta>给我们最后的机会审核我们的更改</c>

00:43:43.924 --> 00:43:46.426
<c.magenta>在这里我甚至可以丢弃所做的更改</c>

00:43:46.493 --> 00:43:52.533
<c.magenta>点击选择改变标记然后选择不要提交</c>
<c.magenta>如果我只想提交我做的部分更改</c>

00:43:53.467 --> 00:43:56.236
<c.magenta>在这个例子中</c>
<c.magenta>我想提交全部的更改 给出提交的信息</c>

00:43:56.537 --> 00:43:58.005
<c.magenta>我将会写修复了测试</c>

00:43:59.239 --> 00:44:02.176
<c.magenta>当我提交的时候</c>
<c.magenta>我想立即将我的更改推送给工作伙伴</c>

00:43:59.239 --> 00:44:02.176
<c.magenta>当我提交的时候</c>
<c.magenta>我想立即将我的更改推送给工作伙伴</c>

00:44:02.242 --> 00:44:03.744
<c.magenta>点击推送的复选框</c>

00:44:04.278 --> 00:44:07.881
<c.magenta>提交我们的更改</c>
<c.magenta>Xcode正在提交中</c>

00:44:08.182 --> 00:44:11.752
<c.magenta>将我们的更改推送给我们的工作伙伴</c>
<c.magenta>上述操作完成</c>

00:44:12.819 --> 00:44:14.021
<c.magenta>大家准备好</c>

00:44:14.087 --> 00:44:17.457
<c.magenta>将你的应用分发给你的测试人员</c>
<c.magenta>或者App Store</c>

00:44:17.524 --> 00:44:18.859
<c.magenta>如果你想知道如何去发布</c>

00:44:19.126 --> 00:44:22.796
<c.magenta>或者假如有些东西我们没有讲到</c>
<c.magenta>恰巧这些东西是你想了解的</c>

00:44:23.063 --> 00:44:25.232
<c.magenta>我建议你查阅Xcode的帮助手册</c>

00:44:26.500 --> 00:44:30.204
<c.magenta>你可以获得帮助手册</c>
<c.magenta>从帮助菜单下选择Xcode帮助</c>

00:44:31.939 --> 00:44:37.344
<c.magenta>那里 你可以查询任何你想了解的信息</c>
<c.magenta>或者浏览其它主题</c>

00:44:37.444 --> 00:44:40.547
<c.magenta>比如 存档还有输出产品以及常见存档</c>

00:44:40.681 --> 00:44:43.917
<c.magenta>这里Xcode告诉我们</c>
<c.magenta>如何为发布的应用创建存档</c>

00:44:45.552 --> 00:44:49.122
<c.magenta>不错 挺好的</c>
<c.magenta>我给大家讲述了完整的工作流程</c>

00:44:49.690 --> 00:44:53.527
<c.magenta>但是还有一些重要的知识</c>
<c.magenta>在本次演讲结束前我将给大家讲解</c>

00:44:53.594 --> 00:44:56.530
<c.magenta>那就是</c>
<c.magenta>如何定制你的源代码和你的工程...</c>

00:44:56.597 --> 00:45:00.400
<c.magenta>对不起 是如何自定义你的工程</c>
<c.magenta>并按照我们需要的配置他们</c>

00:44:56.597 --> 00:45:00.400
<c.magenta>对不起 是如何自定义你的工程</c>
<c.magenta>并按照我们需要的配置他们</c>

00:45:01.201 --> 00:45:03.837
<c.magenta>我会带大家了解一些核心的配置概念</c>

00:45:03.937 --> 00:45:07.875
<c.magenta>我要把Najla请回台上</c>
<c.magenta>让她来给大家讲解</c>

00:45:14.047 --> 00:45:14.948
<c.magenta>谢谢你 Rick</c>

00:45:15.616 --> 00:45:18.652
<c.magenta>现在你知道了</c>
<c.magenta>在Xcode进行开发的基本流程</c>

00:45:18.719 --> 00:45:22.155
<c.magenta>当你刚开始使用Xcode的时候</c>
<c.magenta>上面的内容或许是你需要的</c>

00:45:22.656 --> 00:45:25.292
<c.magenta>随着你开发的工程越来越复杂</c>

00:45:25.359 --> 00:45:28.462
<c.magenta>你需要知道如何配置你的工程和设置</c>

00:45:29.630 --> 00:45:33.600
<c.magenta>让我们快速浏览下</c>
<c.magenta>Xcode的主要配置概念</c>

00:45:33.667 --> 00:45:35.569
<c.magenta>以便你能理解你正在使用的是什么</c>

00:45:37.638 --> 00:45:40.440
<c.magenta>今天有五个概念是我们需要谈论的</c>

00:45:41.175 --> 00:45:44.444
<c.magenta>Xcode工程和工程包含的目标</c>

00:45:45.779 --> 00:45:50.017
<c.magenta>构建设置和功能</c>
<c.magenta>这些可以决定Xcode的行为</c>

00:45:50.717 --> 00:45:53.787
<c.magenta>工作空间用来组织你的工程</c>

00:45:57.758 --> 00:46:00.727
<c.magenta>先我们先谈论下工程</c>

00:45:57.758 --> 00:46:00.727
<c.magenta>先我们先谈论下工程</c>

00:46:02.896 --> 00:46:08.936
<c.magenta>工程是你在Xcode中</c>
<c.magenta>可以组织你代码和资源的文档</c>

00:46:09.770 --> 00:46:14.408
<c.magenta>你所引用的代码和</c>
<c.magenta>资源文件存储在磁盘上</c>

00:46:16.410 --> 00:46:20.714
<c.magenta>目标将这些文件构建到</c>
<c.magenta>像你应用的产品中</c>

00:46:22.449 --> 00:46:26.220
<c.magenta>构建设置配置</c>
<c.magenta>你的目标如何构建你的产品</c>

00:46:27.454 --> 00:46:30.824
<c.magenta>规则配置Xcode的运行操作</c>

00:46:31.024 --> 00:46:33.160
<c.magenta>例如运行 使用你的目标</c>

00:46:34.795 --> 00:46:39.233
<c.magenta>现在 为了找到你工程的设置</c>
<c.magenta>在导航栏上选择你的工程</c>

00:46:40.167 --> 00:46:44.505
<c.magenta>在编辑区的顶部选中放大的选项</c>
<c.magenta>然后选择你的应用</c>

00:46:45.906 --> 00:46:48.942
<c.magenta>现在 你工程的设置</c>
<c.magenta>位于两个标签页中间</c>

00:46:49.209 --> 00:46:51.345
<c.magenta>信息标签页和构建设置标签页</c>

00:46:51.845 --> 00:46:54.381
<c.magenta>通用设置为于信息标签页中</c>

00:46:54.915 --> 00:46:58.752
<c.magenta>有一点我需要指出</c>
<c.magenta>你应用的开发目标</c>

00:46:59.786 --> 00:47:04.491
<c.magenta>你开发的目标最低系统版本</c>
<c.magenta>你的应用能运行和支持的系统版本</c>

00:46:59.786 --> 00:47:04.491
<c.magenta>你开发的目标最低系统版本</c>
<c.magenta>你的应用能运行和支持的系统版本</c>

00:47:04.825 --> 00:47:07.594
<c.magenta>现在你的应用仅仅支持iOS 10</c>

00:47:07.895 --> 00:47:12.432
<c.magenta>但若我想让我们的应用支持iOS 9</c>
<c.magenta>我可以在工程设置中进行修改</c>

00:47:14.735 --> 00:47:16.970
<c.magenta>让我们将谈论话题转到目标</c>

00:47:18.705 --> 00:47:21.708
<c.magenta>一个目标包含构建所需的指令</c>

00:47:21.975 --> 00:47:24.344
<c.magenta>想一个应用或者框架</c>

00:47:25.145 --> 00:47:28.515
<c.magenta>你的目标生产出的叫做它的产品</c>

00:47:30.317 --> 00:47:35.022
<c.magenta>你目标构建它产品的一系列步骤</c>
<c.magenta>就叫做构建的阶段</c>

00:47:35.956 --> 00:47:41.261
<c.magenta>最后 目标的构建设置</c>
<c.magenta>是配置如何成产它的产品的</c>

00:47:43.030 --> 00:47:48.101
<c.magenta>现在 需要注意的是</c>
<c.magenta>工程和目标都有构建设置</c>

00:47:48.402 --> 00:47:51.638
<c.magenta>目标沿用工程中的一些数据</c>

00:47:51.805 --> 00:47:55.142
<c.magenta>但是可以被目标指定的值覆盖</c>

00:47:57.878 --> 00:47:59.446
<c.magenta>目标构建阶段做的事情</c>

00:47:59.513 --> 00:48:05.319
<c.magenta>像构建依赖关系</c>
<c.magenta>在目标中编译资源文件</c>

00:47:59.513 --> 00:48:05.319
<c.magenta>像构建依赖关系</c>
<c.magenta>在目标中编译资源文件</c>

00:48:05.519 --> 00:48:08.388
<c.magenta>链接库和框架到目标</c>

00:48:10.524 --> 00:48:15.662
<c.magenta>你也能增加叫做运行脚本的构建阶段</c>
<c.magenta>对构建中你想修改的其他方面进行配置</c>

00:48:18.999 --> 00:48:20.734
<c.magenta>你可以访问你的目标设置</c>

00:48:21.335 --> 00:48:23.637
<c.magenta>通过在你的导航栏中选择你的工程</c>

00:48:24.171 --> 00:48:26.473
<c.magenta>选择在编辑区顶部弹出的选项</c>

00:48:26.540 --> 00:48:28.475
<c.magenta>选择你的目标</c>

00:48:30.644 --> 00:48:33.714
<c.magenta>现在你目标设置的标签页</c>
<c.magenta>在许多标签页之间</c>

00:48:34.314 --> 00:48:37.417
<c.magenta>比如构建设置标签页 功能标签页</c>

00:48:37.484 --> 00:48:39.186
<c.magenta>和构建阶段标签页</c>

00:48:40.787 --> 00:48:44.958
<c.magenta>让我们谈论一些构建设置和功能的内容</c>

00:48:47.294 --> 00:48:51.398
<c.magenta>构建设置包含名字还有一些选项的值</c>

00:48:51.465 --> 00:48:54.168
<c.magenta>控制构建过程的一些选项</c>

00:48:54.501 --> 00:48:58.906
<c.magenta>比如 构建设置指定</c>
<c.magenta>你想基于哪个架构进行构建</c>

00:48:59.506 --> 00:49:03.243
<c.magenta>你的代码是否被优化</c>
<c.magenta>给你的产品进行命名</c>

00:48:59.506 --> 00:49:03.243
<c.magenta>你的代码是否被优化</c>
<c.magenta>给你的产品进行命名</c>

00:49:03.377 --> 00:49:04.978
<c.magenta>你如何处理警告</c>

00:49:07.981 --> 00:49:11.585
<c.magenta>构建设置在工程和目标层面上都可访问</c>

00:49:12.019 --> 00:49:13.620
<c.magenta>在构建设置标签页中</c>

00:49:13.854 --> 00:49:17.591
<c.magenta>里面的表格包含了</c>
<c.magenta>所有的名字和需要设置的值</c>

00:49:20.394 --> 00:49:24.364
<c.magenta>现在 构建设置的值可被构建配置改变</c>

00:49:24.998 --> 00:49:29.002
<c.magenta>默认情况下</c>
<c.magenta>工程有一个调试和发布配置</c>

00:49:29.803 --> 00:49:34.641
<c.magenta>例如 当你为调试进行构建的时候</c>
<c.magenta>你有可能不想优化你的代码</c>

00:49:34.842 --> 00:49:38.345
<c.magenta>但是当你构建发布版本的时候</c>
<c.magenta>你想让系统优化你的代码</c>

00:49:41.381 --> 00:49:45.485
<c.magenta>除了提供细粒度的构建设置</c>
<c.magenta>Xcode也提供了功能</c>

00:49:45.552 --> 00:49:48.922
<c.magenta>可以允许你轻松的打开特定的功能</c>

00:49:49.890 --> 00:49:51.358
<c.magenta>例如 对iOS</c>

00:49:51.425 --> 00:49:55.596
<c.magenta>有一些功能是为启用In-APP Purchase</c>
<c.magenta>和集成Apple Maps提供的</c>

00:49:56.230 --> 00:49:59.333
<c.magenta>如果你想了解关于功能的更多内容</c>

00:49:59.499 --> 00:50:02.135
<c.magenta>你可以展看功能的面板</c>

00:49:59.499 --> 00:50:02.135
<c.magenta>你可以展看功能的面板</c>

00:50:02.903 --> 00:50:05.205
<c.magenta>你可以禁用或者启用一些功能</c>

00:50:05.272 --> 00:50:08.442
<c.magenta>通过使用在编辑器右边的</c>
<c.magenta>打开或者关闭选项</c>

00:50:11.245 --> 00:50:13.580
<c.magenta>最后 让我们谈论下工作空间</c>

00:50:15.048 --> 00:50:19.386
<c.magenta>你有可能发现随着时间推移</c>
<c.magenta>你更倾向于像集合那样对待一组工程</c>

00:50:19.786 --> 00:50:25.125
<c.magenta>例如 有使用相同框架的两个工程</c>
<c.magenta>你想把它们放到一起</c>

00:50:27.294 --> 00:50:28.529
<c.magenta>在这种情况下</c>

00:50:28.829 --> 00:50:32.266
<c.magenta>你可以创建Xcode的工作空间</c>
<c.magenta>来引用你的工程</c>

00:50:34.234 --> 00:50:36.403
<c.magenta>当你在Xcode中打开工作空间时</c>

00:50:36.803 --> 00:50:40.607
<c.magenta>它会包含我们引用的全部工程</c>

00:50:40.807 --> 00:50:45.245
<c.magenta>工作空间使得相关代码的</c>
<c.magenta>跳转和编辑变得容易</c>

00:50:48.081 --> 00:50:51.618
<c.magenta>现你了解了Xcode的主要配置概念</c>

00:50:52.119 --> 00:50:55.923
<c.magenta>有这些知识和额外的</c>
<c.magenta>Xcode基本开发流程</c>

00:50:55.989 --> 00:50:59.059
<c.magenta>你就有了制作高质量应用的工具</c>

00:51:01.161 --> 00:51:02.763
<c.magenta>今天我展示给你们的内容</c>

00:51:02.829 --> 00:51:06.300
<c.magenta>是通过Xcode构建应用的</c>
<c.magenta>重要组成部分</c>

00:51:06.867 --> 00:51:10.237
<c.magenta>你学习了如何创建一个新的应用</c>
<c.magenta>然后将它运行在模拟器中</c>

00:51:10.537 --> 00:51:12.039
<c.magenta>如何去测试和调试应用</c>

00:51:12.639 --> 00:51:15.342
<c.magenta>我们也谈论了Xcode的实用工具</c>

00:51:15.409 --> 00:51:19.279
<c.magenta>例如Command+Option+</c>
<c.magenta>单击还有快速打开</c>

00:51:20.214 --> 00:51:25.385
<c.magenta>我们也展示给你如何在工程中进行查找</c>
<c.magenta>使用过滤工具和跳转工具</c>

00:51:27.487 --> 00:51:30.257
<c.magenta>你学习了如何审查和提交更改</c>

00:51:30.324 --> 00:51:34.595
<c.magenta>还有如何配置你的工程和设置</c>
<c.magenta>一旦你准备将应用提交到商店</c>

00:51:36.797 --> 00:51:39.333
<c.magenta>我希望本场演讲之后</c>
<c.magenta>你能有更好了解到</c>

00:51:39.399 --> 00:51:42.336
<c.magenta>你利用Xcode能做各式各样的事情</c>

00:51:42.402 --> 00:51:45.305
<c.magenta>我们看到大家所创建的应用十分开心</c>

00:51:54.348 --> 00:51:58.519
<c.magenta>好的 如果你想了解本次演讲更多消息</c>

00:51:58.585 --> 00:52:04.658
<c.magenta>你可以访问</c>
<c.magenta>developer.apple.com/wwdc16/413</c>

00:51:58.585 --> 00:52:04.658
<c.magenta>你可以访问</c>
<c.magenta>developer.apple.com/wwdc16/413</c>

00:52:06.527 --> 00:52:09.863
<c.magenta>如果你对Xcode的特定部分感兴趣</c>

00:52:10.197 --> 00:52:12.833
<c.magenta>有一些你可以参加的演讲</c>
<c.magenta>或者可以在线观看</c>

00:52:13.200 --> 00:52:16.136
<c.magenta>例如 在周二有</c>
<c.magenta>“Xcode应用签名”的演讲</c>

00:52:16.203 --> 00:52:19.373
<c.magenta>当你要提交你的应用到商店时</c>
<c.magenta>进行签名是很重要的</c>

00:52:19.840 --> 00:52:25.612
<c.magenta>有一个关于测试和持续集成</c>
<c.magenta>以及调试技巧的演讲</c>

00:52:26.880 --> 00:52:30.784
<c.magenta>谢谢大家观看本场演讲</c>
<c.magenta>希望大家在这次大会中过得开心</c>
