WEBVTT

00:00:19.419 --> 00:00:24.925
<c.magenta>构建最棒的锻炼应用</c>

00:00:29.563 --> 00:00:30.531
<c.magenta>大家好</c>

00:00:30.731 --> 00:00:32.533
<c.magenta>欢迎来到“构建最棒的锻炼应用”</c>

00:00:32.966 --> 00:00:36.303
<c.magenta>你们来到这里是</c>
<c.magenta>因为你们关注构建最佳用户体验</c>

00:00:36.370 --> 00:00:38.338
<c.magenta>对于你的健身应用的用户</c>

00:00:39.006 --> 00:00:40.340
<c.magenta>有些用户很狂热</c>

00:00:40.707 --> 00:00:42.843
<c.magenta>他们每周花好几个小时</c>
<c.magenta>在健身上</c>

00:00:43.110 --> 00:00:46.046
<c.magenta>他们期待响应快的</c>
<c.magenta>易于使用的应用</c>

00:00:46.113 --> 00:00:47.648
<c.magenta>能提供精确的数据</c>

00:00:47.714 --> 00:00:50.117
<c.magenta>并能和Apple Health</c>
<c.magenta>无缝衔接</c>

00:00:51.218 --> 00:00:52.219
<c.magenta>我是Dash</c>

00:00:52.286 --> 00:00:54.555
<c.magenta>我是Apple Health & Fitness</c>
<c.magenta>团队的一个工程师</c>

00:00:54.621 --> 00:00:57.591
<c.magenta>一会我的同事Jorge</c>
<c.magenta>会来加入我</c>

00:00:58.392 --> 00:01:01.562
<c.magenta>今天 我们将要向大家展示</c>
<c.magenta>如何搭建一个很棒的锻炼应用</c>

00:00:58.392 --> 00:01:01.562
<c.magenta>今天 我们将要向大家展示</c>
<c.magenta>如何搭建一个很棒的锻炼应用</c>

00:01:01.628 --> 00:01:02.863
<c.magenta>能搏得用户的喜爱</c>

00:01:06.967 --> 00:01:09.403
<c.magenta>锻炼是保持身体健康</c>
<c.magenta>的很重要的一方面</c>

00:01:10.204 --> 00:01:12.973
<c.magenta>它能帮助你睡眠</c>
<c.magenta>与更好地进行饮食决策</c>

00:01:13.040 --> 00:01:14.141
<c.magenta>还能清醒大脑</c>

00:01:20.280 --> 00:01:23.917
<c.magenta>你们中的许多人都曾</c>
<c.magenta>很努力地创造iOS锻炼应用</c>

00:01:23.984 --> 00:01:26.954
<c.magenta>能启发用户来记录</c>
<c.magenta>他们的身体健康活动</c>

00:01:27.020 --> 00:01:29.122
<c.magenta>并追逐新的健康与健身目标</c>

00:01:31.191 --> 00:01:33.727
<c.magenta>借助Apple Watch</c>
<c.magenta>锻炼应用又提升一个层次</c>

00:01:33.794 --> 00:01:37.531
<c.magenta>通过瞬时心率</c>
<c.magenta>卡路里燃烧 以及运动探测</c>

00:01:37.598 --> 00:01:40.501
<c.magenta>只需一个来自手腕活动的信息</c>

00:01:41.568 --> 00:01:43.403
<c.magenta>今天 我们主要关注</c>

00:01:43.470 --> 00:01:46.440
<c.magenta>如何搭建Apple Watch</c>
<c.magenta>上的最棒的锻炼应用</c>

00:01:49.510 --> 00:01:51.745
<c.magenta>我们先介绍后台运行</c>

00:01:51.945 --> 00:01:55.449
<c.magenta>一个watchOS 3中的对于</c>
<c.magenta>锻炼应用而言颠覆性的新功能</c>

00:01:57.618 --> 00:02:01.188
<c.magenta>然后 我们会从头到尾</c>
<c.magenta>细数一遍一次锻炼的周期</c>

00:01:57.618 --> 00:02:01.188
<c.magenta>然后 我们会从头到尾</c>
<c.magenta>细数一遍一次锻炼的周期</c>

00:02:03.123 --> 00:02:05.626
<c.magenta>在这之间 我们将向大家展示</c>
<c.magenta>你的锻炼应用如何能</c>

00:02:05.692 --> 00:02:07.861
<c.magenta>对用户的活动排名做贡献</c>

00:02:10.264 --> 00:02:14.735
<c.magenta>然后 我们会讨论在iOS 10中</c>
<c.magenta>添加针对锻炼的新API</c>

00:02:16.937 --> 00:02:19.273
<c.magenta>最终 我们会看看一些最佳实践</c>

00:02:20.140 --> 00:02:21.375
<c.magenta>那我们开始吧</c>

00:02:23.110 --> 00:02:26.246
<c.magenta>每一个锻炼应用的核心</c>
<c.magenta>是一个锻炼周期</c>

00:02:26.313 --> 00:02:27.915
<c.magenta>用户可以开始可以结束</c>

00:02:28.515 --> 00:02:31.151
<c.magenta>所以我们先说说</c>
<c.magenta>HKWorkoutSession</c>

00:02:32.085 --> 00:02:33.720
<c.magenta>这个API用起来很简单</c>

00:02:33.787 --> 00:02:36.390
<c.magenta>为你的锻炼应用</c>
<c.magenta>提供了自动化的好处</c>

00:02:37.424 --> 00:02:38.892
<c.magenta>当一个锻炼周期开始时</c>

00:02:38.959 --> 00:02:41.595
<c.magenta>Apple Watch的传感器</c>
<c.magenta>就会通过活动类型</c>

00:02:41.662 --> 00:02:44.865
<c.magenta>与某锻炼周期对应</c>
<c.magenta>来精确计算运动和卡路里</c>

00:02:46.233 --> 00:02:48.168
<c.magenta>这还会允许</c>
<c.magenta>你的应用来贡献到</c>

00:02:48.235 --> 00:02:49.703
<c.magenta>用户的活动环</c>

00:02:50.404 --> 00:02:52.306
<c.magenta>比如说 在一次锻炼期间</c>

00:02:52.372 --> 00:02:55.742
<c.magenta>活动会通过锻炼类型</c>
<c.magenta>来奖励运动的分钟数</c>

00:02:55.809 --> 00:02:57.277
<c.magenta>到用户的运动环中</c>

00:02:59.746 --> 00:03:00.914
<c.magenta>在一次锻炼周期中</c>

00:02:59.746 --> 00:03:00.914
<c.magenta>在一次锻炼周期中</c>

00:03:00.981 --> 00:03:04.017
<c.magenta>一旦用户唤醒设备</c>
<c.magenta>你的应用就会被展示</c>

00:03:04.484 --> 00:03:06.987
<c.magenta>用户会很喜欢</c>
<c.magenta>瞬间访问你的应用</c>

00:03:07.054 --> 00:03:08.655
<c.magenta>在他们使用手表锻炼时</c>

00:03:12.025 --> 00:03:15.395
<c.magenta>最终 我们很高兴地</c>
<c.magenta>宣布 锻炼应用</c>

00:03:15.462 --> 00:03:18.532
<c.magenta>在watchOS 3中</c>
<c.magenta>现在可以设置在后台运行</c>

00:03:19.633 --> 00:03:21.635
<c.magenta>让我们多说几句后台运行</c>

00:03:27.007 --> 00:03:30.077
<c.magenta>后台运行会大幅提高</c>
<c.magenta>你的锻炼应用的使用体验</c>

00:03:30.944 --> 00:03:34.214
<c.magenta>你的应用可以在后台</c>
<c.magenta>处理来自传感器的数据</c>

00:03:34.681 --> 00:03:38.719
<c.magenta>比如说 你将能收到</c>
<c.magenta>连续的心率值</c>

00:03:38.785 --> 00:03:40.988
<c.magenta>即使当你的应用</c>
<c.magenta>没有展示在屏幕上</c>

00:03:42.890 --> 00:03:45.459
<c.magenta>你还可以向用户</c>
<c.magenta>提供即时的反馈</c>

00:03:45.526 --> 00:03:47.761
<c.magenta>在一次运动周期的任何时间</c>

00:03:48.095 --> 00:03:51.431
<c.magenta>你可以向用户发送触觉警告</c>
<c.magenta>来告知他们当前进度</c>

00:03:53.867 --> 00:03:57.337
<c.magenta>这还将允许你很快的</c>
<c.magenta>展示最新的数据</c>

00:03:57.404 --> 00:03:59.806
<c.magenta>每当用户看一眼手腕时</c>

00:04:02.809 --> 00:04:04.745
<c.magenta>允许后台运行很简单</c>

00:04:05.045 --> 00:04:08.549
<c.magenta>只需要将workout-processing</c>
<c.magenta>添加到BackgroundModes</c>

00:04:08.615 --> 00:04:10.817
<c.magenta>在你的扩展Info.plist</c>

00:04:13.820 --> 00:04:16.656
<c.magenta>当然 为了保持</c>
<c.magenta>Apple Watch的高性能</c>

00:04:16.723 --> 00:04:18.492
<c.magenta>你必须要限制你的后台任务</c>

00:04:18.559 --> 00:04:20.093
<c.magenta>只进行必要的工作</c>

00:04:21.461 --> 00:04:24.331
<c.magenta>如果你的应用在后台</c>
<c.magenta>使用过多的CPU资源</c>

00:04:24.731 --> 00:04:26.733
<c.magenta>watchOS可能会将其暂停</c>

00:04:29.336 --> 00:04:31.672
<c.magenta>我们建议你使用我们的工具</c>

00:04:31.738 --> 00:04:34.174
<c.magenta>来测量你的应用的</c>
<c.magenta>后台CPU使用情况</c>

00:04:35.075 --> 00:04:37.744
<c.magenta>你可以使用Xcode</c>
<c.magenta>内置的CPU反馈工具</c>

00:04:38.946 --> 00:04:41.014
<c.magenta>或是instruments</c>
<c.magenta>中的time profiler</c>

00:04:42.649 --> 00:04:45.619
<c.magenta>watchOS 3还会生成一个</c>
<c.magenta>内含backtrace的日志</c>

00:04:45.686 --> 00:04:48.288
<c.magenta>每当你的应用超过了CPU临界值</c>

00:04:51.024 --> 00:04:52.860
<c.magenta>现在你设置好了后台运行</c>

00:04:52.926 --> 00:04:54.895
<c.magenta>我们一步步讲解</c>
<c.magenta>如何开启一次锻炼</c>

00:04:56.663 --> 00:04:58.665
<c.magenta>开启一次锻炼</c>
<c.magenta>要进行如下三步</c>

00:05:00.200 --> 00:05:03.770
<c.magenta>第一 你需要请求授权</c>
<c.magenta>来访问HealthKit中的数据</c>

00:05:06.473 --> 00:05:08.909
<c.magenta>第二 你需要创建一个锻炼配置对象</c>

00:05:08.976 --> 00:05:11.411
<c.magenta>来表示你想要</c>
<c.magenta>开启的锻炼类型</c>

00:05:12.813 --> 00:05:15.582
<c.magenta>第三 你需要创建并</c>
<c.magenta>开启一次运动周期</c>

00:05:15.649 --> 00:05:17.251
<c.magenta>利用你的锻炼配置</c>

00:05:17.718 --> 00:05:19.319
<c.magenta>我们一步步来完成</c>

00:05:22.823 --> 00:05:25.192
<c.magenta>所有的锻炼应用都需要请求权限</c>

00:05:25.259 --> 00:05:26.827
<c.magenta>为将健身写入HealthKit</c>

00:05:27.561 --> 00:05:29.429
<c.magenta>这将允许你的应用中的锻炼</c>

00:05:29.496 --> 00:05:32.132
<c.magenta>展示在用户的</c>
<c.magenta>健康和运动应用中</c>

00:05:33.500 --> 00:05:35.502
<c.magenta>根据你的锻炼应用的细节</c>

00:05:35.569 --> 00:05:38.539
<c.magenta>你可以请求权限</c>
<c.magenta>来读取燃烧的能量</c>

00:05:38.605 --> 00:05:40.007
<c.magenta>距离以及心率</c>

00:05:41.441 --> 00:05:44.378
<c.magenta>如果你想了解</c>
<c.magenta>有关设置授权的更多信息</c>

00:05:44.444 --> 00:05:46.713
<c.magenta>我们建议你看看我们</c>
<c.magenta>先前的一次分享</c>

00:05:46.780 --> 00:05:48.415
<c.magenta>充分利用HealthKit</c>

00:05:53.020 --> 00:05:56.123
<c.magenta>锻炼周期是通过</c>
<c.magenta>workoutConfiguration对象创建的</c>

00:05:57.658 --> 00:06:00.627
<c.magenta>workoutConfiguration</c>
<c.magenta>包含了锻炼活动类型</c>

00:05:57.658 --> 00:06:00.627
<c.magenta>workoutConfiguration</c>
<c.magenta>包含了锻炼活动类型</c>

00:06:00.694 --> 00:06:02.129
<c.magenta>比如跑步或骑行</c>

00:06:02.796 --> 00:06:05.365
<c.magenta>以及位置类型</c>
<c.magenta>比如室内或室外</c>

00:06:08.101 --> 00:06:11.305
<c.magenta>你将要使用配置对象</c>
<c.magenta>来创建一个workoutSession</c>

00:06:12.406 --> 00:06:13.974
<c.magenta>然后为了开启这一周期</c>

00:06:14.041 --> 00:06:17.211
<c.magenta>只需将其传入</c>
<c.magenta>HK healthStore的start方法中</c>

00:06:20.647 --> 00:06:21.982
<c.magenta>让我们通过演示来尝试一下</c>

00:06:22.850 --> 00:06:25.352
<c.magenta>仅限今天 我们假装</c>
<c.magenta>我们都在为一家公司工作</c>

00:06:25.786 --> 00:06:29.489
<c.magenta>我们最新的项目是要构建一个</c>
<c.magenta>基于watchOS 3的锻炼应用</c>

00:06:29.823 --> 00:06:32.092
<c.magenta>它专门为树懒爱好者设计</c>

00:06:33.193 --> 00:06:34.494
<c.magenta>它叫SpeedySloth</c>

00:06:35.095 --> 00:06:39.199
<c.magenta>我这里有一个Xcode项目</c>
<c.magenta>已经构建好了锻炼应用的UI</c>

00:06:39.633 --> 00:06:40.834
<c.magenta>让我们一起看一眼</c>

00:06:49.743 --> 00:06:53.113
<c.magenta>这个事用户打开应用时</c>
<c.magenta>所看到的第一个视图</c>

00:06:53.514 --> 00:06:57.951
<c.magenta>它只有两个选择器 一个是活动类型</c>
<c.magenta>可以是走路 跑步或远足</c>

00:06:58.986 --> 00:07:03.190
<c.magenta>另一个是位置类型</c>
<c.magenta>可以是室外 室内或未知</c>

00:06:58.986 --> 00:07:03.190
<c.magenta>另一个是位置类型</c>
<c.magenta>可以是室外 室内或未知</c>

00:07:04.591 --> 00:07:07.394
<c.magenta>当我点击开始按钮时</c>
<c.magenta>什么反应也没有</c>

00:07:07.461 --> 00:07:08.695
<c.magenta>让我们一起修改它</c>

00:07:11.832 --> 00:07:13.901
<c.magenta>你刚刚看到的视图是被</c>

00:07:13.967 --> 00:07:16.570
<c.magenta>ConfigurationInterfaceContrller</c>
<c.magenta>类所控制</c>

00:07:17.538 --> 00:07:20.440
<c.magenta>我在这里写了一个方法</c>
<c.magenta>叫didTapStartButton</c>

00:07:20.507 --> 00:07:22.643
<c.magenta>其会在用户</c>
<c.magenta>每次点击开始按钮时调用</c>

00:07:22.910 --> 00:07:23.977
<c.magenta>我要在里面写代码了</c>

00:07:28.115 --> 00:07:30.517
<c.magenta>我要创建一个</c>
<c.magenta>workoutConfiguration对象</c>

00:07:30.918 --> 00:07:34.354
<c.magenta>我需要将活动类型</c>
<c.magenta>设置为当前选择的活动类型</c>

00:07:34.421 --> 00:07:35.923
<c.magenta>通过第一个选择器</c>

00:07:37.124 --> 00:07:38.692
<c.magenta>然后将位置类型</c>

00:07:39.626 --> 00:07:42.729
<c.magenta>设置为当前选择的第二个选择器</c>
<c.magenta>位置类型</c>

00:07:44.198 --> 00:07:46.466
<c.magenta>我要将workoutConfiguration</c>
<c.magenta>对象传入</c>

00:07:46.533 --> 00:07:49.736
<c.magenta>到一个新的界面控制器</c>
<c.magenta>叫做WorkoutInterface Controller</c>

00:07:50.904 --> 00:07:52.639
<c.magenta>WorkoutInterface</c>
<c.magenta>Controller负责</c>

00:07:52.706 --> 00:07:55.108
<c.magenta>在锻炼周期中管理UI</c>

00:07:55.609 --> 00:07:58.946
<c.magenta>它还负责开启与停止健身周期</c>

00:07:59.546 --> 00:08:01.548
<c.magenta>让我们看看这个</c>
<c.magenta>WorkoutInterface Controller</c>

00:07:59.546 --> 00:08:01.548
<c.magenta>让我们看看这个</c>
<c.magenta>WorkoutInterface Controller</c>

00:08:07.187 --> 00:08:09.957
<c.magenta>我在WorkoutInterface</c>
<c.magenta>Controller的唤醒方法中</c>

00:08:10.023 --> 00:08:12.626
<c.magenta>我知道我将收到</c>
<c.magenta>我们的workoutConfiguration对象</c>

00:08:12.693 --> 00:08:14.494
<c.magenta>作为这个方法中的上下文对象</c>

00:08:15.062 --> 00:08:16.830
<c.magenta>让我们使用它来</c>
<c.magenta>开启一次锻炼周期</c>

00:08:20.234 --> 00:08:22.269
<c.magenta>首先 我要打开这个上下文对象</c>

00:08:22.336 --> 00:08:24.771
<c.magenta>来确保它是一个有效的</c>
<c.magenta>workoutConfiguration</c>

00:08:26.573 --> 00:08:29.009
<c.magenta>然后我要通过它</c>
<c.magenta>创建一次锻炼周期</c>

00:08:29.076 --> 00:08:31.278
<c.magenta>通过将其传入HKWorkoutSession</c>
<c.magenta>的初始化程序中</c>

00:08:33.679 --> 00:08:36.216
<c.magenta>我要将我的锻炼周期</c>
<c.magenta>的代理设为self</c>

00:08:36.283 --> 00:08:39.352
<c.magenta>而后我将收到回调</c>
<c.magenta>获得类似状态改变或是错误等信息</c>

00:08:42.422 --> 00:08:45.425
<c.magenta>然后我讲当前时间</c>
<c.magenta>保存为锻炼开始的时间</c>

00:08:45.492 --> 00:08:48.562
<c.magenta>我们在后面还将用到这个参数</c>
<c.magenta>当我们将锻炼样本保存到HealthKit时</c>

00:08:51.498 --> 00:08:55.402
<c.magenta>下面 我要将workoutSession</c>
<c.magenta>传入HK healthStore的开始方法</c>

00:08:55.869 --> 00:08:56.937
<c.magenta>我们试一试</c>

00:09:10.717 --> 00:09:13.086
<c.magenta>现在我们来到了配置界面控制器</c>

00:09:13.153 --> 00:09:14.721
<c.magenta>我就选室外步行了</c>

00:09:14.788 --> 00:09:16.823
<c.magenta>我要再次点击开始按钮</c>

00:09:18.725 --> 00:09:20.861
<c.magenta>所以这打开了</c>
<c.magenta>WorkoutInterface Controller</c>

00:09:20.928 --> 00:09:23.597
<c.magenta>我有预感我们的锻炼周期正确开始了</c>

00:09:23.664 --> 00:09:26.633
<c.magenta>保险起见 我们看一看</c>
<c.magenta>设备上的钟表界面</c>

00:09:27.467 --> 00:09:30.170
<c.magenta>你可以在最上面看到</c>
<c.magenta>那里有一个绿色的跑动小人图标</c>

00:09:30.237 --> 00:09:33.073
<c.magenta>这代表这个手表上的一个应用</c>

00:09:33.140 --> 00:09:34.641
<c.magenta>有一个活动的锻炼周期</c>

00:09:35.175 --> 00:09:39.546
<c.magenta>用户可以在任何时候通过点击</c>
<c.magenta>这个图标进入其所属的应用</c>

00:09:41.715 --> 00:09:44.218
<c.magenta>所以看起来我们的</c>
<c.magenta>周期的确正确地开始了</c>

00:09:44.284 --> 00:09:45.619
<c.magenta>让我们回顾一下所完成的</c>

00:09:46.153 --> 00:09:50.190
<c.magenta>我们使用用户信息创建了</c>
<c.magenta>workoutConfiguration对象</c>

00:09:50.691 --> 00:09:53.694
<c.magenta>然后我们使用这个configuration</c>
<c.magenta>创建了一个锻炼周期</c>

00:09:54.027 --> 00:09:57.531
<c.magenta>然后我们通过将其传入</c>
<c.magenta>healthStore的开始方法来启动周期</c>

00:09:59.032 --> 00:10:01.235
<c.magenta>现在我们有一个活跃的锻炼周期</c>

00:09:59.032 --> 00:10:01.235
<c.magenta>现在我们有一个活跃的锻炼周期</c>

00:10:01.301 --> 00:10:04.805
<c.magenta>我们想要在锻炼期间</c>
<c.magenta>收集一些数据并展示给用户</c>

00:10:05.439 --> 00:10:07.608
<c.magenta>为了分享给大家</c>
<c.magenta>更多有关收集和控制的信息</c>

00:10:07.674 --> 00:10:09.476
<c.magenta>我要邀请我的同事Jorge到这里来</c>

00:10:09.543 --> 00:10:10.511
<c.magenta>谢谢你</c>

00:10:15.516 --> 00:10:16.717
<c.magenta>谢谢你Dash</c>

00:10:18.919 --> 00:10:19.887
<c.magenta>早上好</c>

00:10:20.420 --> 00:10:21.255
<c.magenta>我叫Jorge</c>

00:10:21.321 --> 00:10:23.690
<c.magenta>我是HealthKit</c>
<c.magenta>团队的一个软件工程师</c>

00:10:24.391 --> 00:10:27.027
<c.magenta>我的同事Dash刚刚展示了</c>

00:10:27.094 --> 00:10:29.897
<c.magenta>如何配置并开启一次锻炼周期</c>

00:10:30.297 --> 00:10:34.501
<c.magenta>现在 我们将继续</c>
<c.magenta>讨论你如何收集数据</c>

00:10:34.568 --> 00:10:38.205
<c.magenta>并在一次锻炼期间控制你的周期状态</c>

00:10:44.945 --> 00:10:47.948
<c.magenta>我们将要调用</c>
<c.magenta>数据收集以及控制</c>

00:10:48.315 --> 00:10:51.084
<c.magenta>这些你要进行的</c>
<c.magenta>不同的任务</c>

00:10:51.151 --> 00:10:54.388
<c.magenta>从你的锻炼周期起始点开始</c>

00:10:54.454 --> 00:10:56.623
<c.magenta>一直到你决定结束</c>

00:10:57.891 --> 00:10:59.993
<c.magenta>让我们看看</c>
<c.magenta>这些不同的步骤</c>

00:11:02.896 --> 00:11:06.066
<c.magenta>首先 我们将要</c>
<c.magenta>观察样本 也就是</c>

00:11:06.133 --> 00:11:09.403
<c.magenta>从HealthKit获取样本信息</c>

00:11:09.469 --> 00:11:12.773
<c.magenta>为了将其合并到</c>
<c.magenta>你的锻炼中</c>

00:11:15.409 --> 00:11:17.978
<c.magenta>然后 我们要观察事件</c>

00:11:18.312 --> 00:11:21.648
<c.magenta>事件可以被HealthKit生成</c>

00:11:21.715 --> 00:11:25.052
<c.magenta>或者你可以在用户界面</c>
<c.magenta>中探测事件</c>

00:11:25.118 --> 00:11:28.822
<c.magenta>我们一会再</c>
<c.magenta>更深入地讨论事件</c>

00:11:31.592 --> 00:11:34.528
<c.magenta>一旦你开启了这两个任务</c>

00:11:34.595 --> 00:11:36.530
<c.magenta>你就处在运行状态了</c>

00:11:37.030 --> 00:11:41.134
<c.magenta>在任何时候</c>
<c.magenta>你都可以选择暂停</c>

00:11:41.502 --> 00:11:44.338
<c.magenta>然后可以多次继续锻炼</c>

00:11:45.606 --> 00:11:49.276
<c.magenta>然后 你可以决定你要</c>

00:11:49.343 --> 00:11:51.512
<c.magenta>结束这次锻炼周期</c>

00:11:53.046 --> 00:11:56.617
<c.magenta>所以让我们更深入地</c>
<c.magenta>再研究一下这些步骤</c>

00:11:59.753 --> 00:12:02.723
<c.magenta>首先 我说了我们想要观察样本</c>

00:11:59.753 --> 00:12:02.723
<c.magenta>首先 我说了我们想要观察样本</c>

00:12:02.789 --> 00:12:07.027
<c.magenta>你将需要打开</c>
<c.magenta>一个锚对象查询</c>

00:12:07.094 --> 00:12:10.097
<c.magenta>对你所感兴趣的</c>
<c.magenta>所有数据标签</c>

00:12:10.531 --> 00:12:16.170
<c.magenta>这可能是轮椅长度</c>
<c.magenta>或者是活动燃烧的能量</c>

00:12:18.405 --> 00:12:22.376
<c.magenta>当你进行此项操作时 你还需创建</c>
<c.magenta>updateHandler</c>

00:12:22.442 --> 00:12:27.481
<c.magenta>为了能收到HealthKit的</c>
<c.magenta>新事件 新样本</c>

00:12:30.117 --> 00:12:35.055
<c.magenta>这将允许你可以</c>
<c.magenta>不停地计算锻炼的总体数据</c>

00:12:35.656 --> 00:12:38.692
<c.magenta>比如总共的累计距离</c>

00:12:38.759 --> 00:12:41.261
<c.magenta>或是总共的累计卡路里数</c>

00:12:41.562 --> 00:12:45.966
<c.magenta>这样 你就能实时更新UI了</c>

00:12:46.600 --> 00:12:49.403
<c.magenta>你还可以展示 比如说</c>

00:12:49.469 --> 00:12:51.839
<c.magenta>最新测量到的心率</c>

00:12:55.676 --> 00:12:59.947
<c.magenta>你可以通知用户某些目标</c>
<c.magenta>比如说</c>

00:13:00.013 --> 00:13:02.783
<c.magenta>每当他们在一次</c>
<c.magenta>跑步中达到一英里</c>

00:13:02.850 --> 00:13:05.786
<c.magenta>或是当他们燃烧掉</c>
<c.magenta>第一个100卡路里</c>

00:13:05.853 --> 00:13:07.387
<c.magenta>在他们的划船锻炼中</c>

00:13:09.089 --> 00:13:11.291
<c.magenta>现在让我们看点代码</c>

00:13:13.927 --> 00:13:16.530
<c.magenta>因为我们要使用</c>
<c.magenta>锚对象查询</c>

00:13:16.597 --> 00:13:20.968
<c.magenta>你需要做的第一件事就是为你的查询</c>
<c.magenta>创建一个predicate</c>

00:13:22.736 --> 00:13:27.174
<c.magenta>我们将使用</c>
<c.magenta>你的锻炼开始时间</c>

00:13:27.674 --> 00:13:32.279
<c.magenta>你不想要那个时间之前</c>
<c.magenta>所生成的样本</c>

00:13:32.346 --> 00:13:34.848
<c.magenta>来计算总量</c>

00:13:37.451 --> 00:13:42.155
<c.magenta>然后 你将需要</c>
<c.magenta>向本地设备索取样本</c>

00:13:42.222 --> 00:13:43.891
<c.magenta>也就是当前的手表</c>

00:13:45.192 --> 00:13:47.094
<c.magenta>你想要避免 比如说</c>

00:13:47.561 --> 00:13:50.998
<c.magenta>获得那些保存在</c>
<c.magenta>手表上的样本</c>

00:13:51.398 --> 00:13:54.368
<c.magenta>作为一次和iPhone</c>
<c.magenta>同步的结果</c>

00:13:56.503 --> 00:13:59.139
<c.magenta>最终 你将要构建</c>
<c.magenta>两个predicate</c>

00:13:59.206 --> 00:14:03.343
<c.magenta>来组成最终的predicate</c>
<c.magenta>并在查询中使用</c>

00:13:59.206 --> 00:14:03.343
<c.magenta>来组成最终的predicate</c>
<c.magenta>并在查询中使用</c>

00:14:06.313 --> 00:14:09.082
<c.magenta>然后 你要建立一个handler</c>

00:14:09.149 --> 00:14:12.452
<c.magenta>为了处理HealthKit的样本</c>

00:14:13.520 --> 00:14:17.057
<c.magenta>你可以将这些样本</c>
<c.magenta>累计并计算总量</c>

00:14:17.124 --> 00:14:21.562
<c.magenta>而后可以展示一些</c>
<c.magenta>更新的用户界面</c>

00:14:23.096 --> 00:14:26.600
<c.magenta>现在 我们可以创建</c>
<c.magenta>锚对象查询了</c>

00:14:26.834 --> 00:14:30.337
<c.magenta>你将要使用你所</c>
<c.magenta>感兴趣的quantityType</c>

00:14:30.404 --> 00:14:32.039
<c.magenta>我们刚构建的predicate</c>

00:14:32.105 --> 00:14:36.276
<c.magenta>并使用我们刚刚构建的handler</c>
<c.magenta>作为你最初的结果处理器</c>

00:14:38.779 --> 00:14:41.582
<c.magenta>你还要建立</c>
<c.magenta>updateHandler</c>

00:14:42.015 --> 00:14:46.286
<c.magenta>这样你才能从HealthKit</c>
<c.magenta>获得锻炼期间生成的样本</c>

00:14:48.255 --> 00:14:52.192
<c.magenta>最终 你需要执行</c>
<c.magenta>锚对象查询</c>

00:14:57.664 --> 00:15:00.868
<c.magenta>我们还提到你可以</c>
<c.magenta>通知你的用户</c>

00:14:57.664 --> 00:15:00.868
<c.magenta>我们还提到你可以</c>
<c.magenta>通知你的用户</c>

00:15:00.934 --> 00:15:02.536
<c.magenta>有关某些达成的目标</c>

00:15:02.603 --> 00:15:05.105
<c.magenta>比如说 当他们</c>
<c.magenta>达到了一英里</c>

00:15:05.172 --> 00:15:07.441
<c.magenta>或是在锻炼中消耗掉的</c>
<c.magenta>第一个100卡路里</c>

00:15:07.708 --> 00:15:09.243
<c.magenta>一般的做法是</c>

00:15:09.309 --> 00:15:12.179
<c.magenta>进行一次触觉提示</c>
<c.magenta>来告知用户当前情况</c>

00:15:13.213 --> 00:15:17.651
<c.magenta>与之同时 我们建议</c>
<c.magenta>你要同时更新用户界面</c>

00:15:17.718 --> 00:15:21.088
<c.magenta>这样才能展示达成了什么目标</c>

00:15:21.154 --> 00:15:24.191
<c.magenta>很可能当用户感受到时</c>

00:15:24.758 --> 00:15:28.061
<c.magenta>他们会抬起手腕</c>
<c.magenta>并看看屏幕</c>

00:15:28.128 --> 00:15:29.496
<c.magenta>这次震动是什么意思</c>

00:15:32.933 --> 00:15:36.303
<c.magenta>进行一次触觉反馈的方式</c>
<c.magenta>是调用play方法</c>

00:15:36.370 --> 00:15:38.305
<c.magenta>在WatchKit界面设备中</c>

00:15:42.476 --> 00:15:44.144
<c.magenta>现在让我们说说事件</c>

00:15:44.912 --> 00:15:47.848
<c.magenta>事件是你要使用的时间戳</c>

00:15:47.915 --> 00:15:50.417
<c.magenta>来在锻炼中突出特定点</c>

00:15:50.751 --> 00:15:53.987
<c.magenta>比如说 你可以使用</c>
<c.magenta>暂停与继续事件</c>

00:15:54.054 --> 00:15:56.924
<c.magenta>来突出那些锻炼状态发生改变的点</c>

00:16:01.862 --> 00:16:04.831
<c.magenta>有些事件将被你的应用创建</c>

00:16:04.898 --> 00:16:06.800
<c.magenta>并随后存入锻炼中</c>

00:16:08.435 --> 00:16:12.406
<c.magenta>而有些是由HealthKit</c>
<c.magenta>创建并发送给你的</c>

00:16:15.375 --> 00:16:17.110
<c.magenta>watchOS 3的新特性</c>

00:16:17.177 --> 00:16:20.848
<c.magenta>我们在锻炼周期delegate</c>
<c.magenta>中有didGenerate事件</c>

00:16:21.915 --> 00:16:26.286
<c.magenta>HealthKit要使用</c>
<c.magenta>该事件来向你的应用发送事件</c>

00:16:28.121 --> 00:16:31.158
<c.magenta>所以让我们看看</c>
<c.magenta>不同种类的事件</c>

00:16:31.225 --> 00:16:32.793
<c.magenta>在watchOS 3中</c>

00:16:36.797 --> 00:16:41.168
<c.magenta>圈数和标记是</c>
<c.magenta>我们刚刚介绍的两种新事件</c>

00:16:42.669 --> 00:16:47.307
<c.magenta>这些事件是你</c>
<c.magenta>需要自己创建的</c>

00:16:47.374 --> 00:16:49.309
<c.magenta>并存储在你的锻炼中</c>

00:16:51.111 --> 00:16:54.114
<c.magenta>它表示你将用到的时间戳</c>

00:16:54.181 --> 00:16:57.451
<c.magenta>用于将你的锻炼展示</c>
<c.magenta>为图标或是统计数据</c>

00:16:58.952 --> 00:17:01.655
<c.magenta>圈数和标记有一个区别</c>

00:16:58.952 --> 00:17:01.655
<c.magenta>圈数和标记有一个区别</c>

00:17:03.490 --> 00:17:08.996
<c.magenta>圈数代表代表划分</c>
<c.magenta>你的锻炼的事件</c>

00:17:09.061 --> 00:17:11.131
<c.magenta>它们所占的比例相同</c>

00:17:11.464 --> 00:17:12.299
<c.magenta>比如说</c>

00:17:13.267 --> 00:17:17.003
<c.magenta>如果你是在路径中</c>
<c.magenta>进行跑步或骑行锻炼</c>

00:17:17.404 --> 00:17:22.843
<c.magenta>你需要每次在用户</c>
<c.magenta>完成一圈时创建圈数事件</c>

00:17:27.247 --> 00:17:29.216
<c.magenta>标记 与之不同</c>

00:17:29.283 --> 00:17:32.319
<c.magenta>可以是锻炼中的任意节点</c>

00:17:32.819 --> 00:17:36.490
<c.magenta>它们不需要与距离或</c>
<c.magenta>其他度量绑定</c>

00:17:37.758 --> 00:17:39.526
<c.magenta>它们可以代表 比如说</c>

00:17:39.860 --> 00:17:43.463
<c.magenta>你的用户达到山顶的瞬间</c>

00:17:44.131 --> 00:17:48.435
<c.magenta>或是你在路上</c>
<c.magenta>看到了一只树懒</c>

00:17:54.975 --> 00:17:57.644
<c.magenta>现在让我们说说</c>
<c.magenta>暂停与继续锻炼</c>

00:17:59.313 --> 00:18:00.781
<c.magenta>在一次锻炼周期中</c>

00:17:59.313 --> 00:18:00.781
<c.magenta>在一次锻炼周期中</c>

00:18:00.848 --> 00:18:04.818
<c.magenta>你的用户可能会决定</c>
<c.magenta>暂时停止活动</c>

00:18:05.519 --> 00:18:10.023
<c.magenta>比如说 他们正在跑步</c>
<c.magenta>他们可能决定暂停</c>

00:18:10.090 --> 00:18:12.092
<c.magenta>来买一瓶水</c>

00:18:14.094 --> 00:18:17.564
<c.magenta>在这种情况下</c>
<c.magenta>你需要在用户界面中有方法</c>

00:18:17.631 --> 00:18:19.900
<c.magenta>来让你用户</c>
<c.magenta>告知你这种情况</c>

00:18:20.400 --> 00:18:21.502
<c.magenta>当这种情况发生时</c>

00:18:22.603 --> 00:18:26.373
<c.magenta>你可以调用HealthKit</c>
<c.magenta>来暂停你的锻炼</c>

00:18:27.040 --> 00:18:30.777
<c.magenta>这将允许HealthKit</c>
<c.magenta>来节省手表中的电量</c>

00:18:30.844 --> 00:18:32.646
<c.magenta>以及数据库中的空间</c>

00:18:34.348 --> 00:18:36.049
<c.magenta>当然了 当这种情况发生时</c>

00:18:36.116 --> 00:18:39.920
<c.magenta>你也想忽略应用收到的任何新数据</c>

00:18:40.587 --> 00:18:44.291
<c.magenta>你不想积累样本</c>

00:18:45.259 --> 00:18:48.862
<c.magenta>到总量中</c>
<c.magenta>在周期被暂停期间</c>

00:18:51.965 --> 00:18:55.335
<c.magenta>HealthKit会反馈</c>
<c.magenta>暂停与继续调用</c>

00:18:55.869 --> 00:18:58.505
<c.magenta>通过生成暂停与继续事件</c>

00:18:58.572 --> 00:19:03.377
<c.magenta>你需要使用锻炼周期</c>
<c.magenta>代理获得</c>

00:18:58.572 --> 00:19:03.377
<c.magenta>你需要使用锻炼周期</c>
<c.magenta>代理获得</c>

00:19:05.145 --> 00:19:08.682
<c.magenta>你需要知道当你收到暂停事件时</c>

00:19:09.249 --> 00:19:12.019
<c.magenta>HealthKit不会再生成</c>
<c.magenta>新的事件了</c>

00:19:12.085 --> 00:19:14.688
<c.magenta>直到你继续你的周期</c>

00:19:19.493 --> 00:19:20.894
<c.magenta>watchOS 3的新特性</c>

00:19:21.261 --> 00:19:24.631
<c.magenta>你暂停与继续一次健身</c>
<c.magenta>所需要调用的函数</c>

00:19:24.698 --> 00:19:26.500
<c.magenta>是HKHealthStore的</c>
<c.magenta>一部分</c>

00:19:26.567 --> 00:19:29.236
<c.magenta>暂停workoutSession</c>
<c.magenta>和继续workoutSession</c>

00:19:32.105 --> 00:19:34.775
<c.magenta>你将要收到的事件</c>
<c.magenta>是暂停和继续事件</c>

00:19:35.275 --> 00:19:39.046
<c.magenta>你可能在之前的iOS版本</c>
<c.magenta>就已经知道了</c>

00:19:43.383 --> 00:19:45.619
<c.magenta>现在让我们聊聊运动事件</c>

00:19:46.687 --> 00:19:48.288
<c.magenta>这是watchOS 3新特性</c>

00:19:48.589 --> 00:19:51.291
<c.magenta>运动暂停与运动继续事件</c>

00:19:52.459 --> 00:19:55.028
<c.magenta>你的手表 在一次跑步锻炼期间</c>

00:19:55.462 --> 00:19:59.466
<c.magenta>可以探测到用户停止运动</c>

00:19:59.533 --> 00:20:01.602
<c.magenta>这意味着他们停止跑动了</c>

00:19:59.533 --> 00:20:01.602
<c.magenta>这意味着他们停止跑动了</c>

00:20:02.402 --> 00:20:05.572
<c.magenta>而一旦他们继续跑动</c>
<c.magenta>我们就可以立即探测到</c>

00:20:07.007 --> 00:20:08.809
<c.magenta>当你收到这些事件时</c>

00:20:10.544 --> 00:20:13.914
<c.magenta>你要停止收集数据进健身中</c>

00:20:14.181 --> 00:20:18.385
<c.magenta>就像用户手动暂停一样</c>

00:20:18.752 --> 00:20:24.057
<c.magenta>但是 你不需要暂停你的锻炼周期</c>

00:20:26.026 --> 00:20:30.697
<c.magenta>要注意这只是在</c>
<c.magenta>跑步活动类型中实现了</c>

00:20:34.768 --> 00:20:38.338
<c.magenta>所以让我们回到我们的</c>
<c.magenta>SpeedySloth演示应用</c>

00:20:38.405 --> 00:20:41.408
<c.magenta>看看我们如何可以</c>
<c.magenta>具体化这些概念</c>

00:20:41.475 --> 00:20:42.910
<c.magenta>我们刚刚所学到的</c>

00:20:47.147 --> 00:20:51.251
<c.magenta>所以我要切换到</c>
<c.magenta>我们的演示了</c>

00:20:52.953 --> 00:20:54.721
<c.magenta>为了回放一下我们刚刚看到的</c>

00:20:56.590 --> 00:21:00.794
<c.magenta>我们有...我们的锻炼应用</c>

00:20:56.590 --> 00:21:00.794
<c.magenta>我们有...我们的锻炼应用</c>

00:21:00.861 --> 00:21:03.263
<c.magenta>它已经启动了锻炼周期</c>

00:21:03.330 --> 00:21:07.935
<c.magenta>但我们可以看到屏幕上</c>
<c.magenta>卡路里和距离都是0</c>

00:21:08.435 --> 00:21:10.470
<c.magenta>我们还没有累加数据</c>

00:21:10.838 --> 00:21:14.274
<c.magenta>所以我们进入锻炼中</c>
<c.magenta>来看看如何解决这个问题</c>

00:21:16.243 --> 00:21:19.479
<c.magenta>回到我们的锻炼界面控制器类</c>

00:21:19.613 --> 00:21:23.317
<c.magenta>我要找被委托的回调函数</c>

00:21:23.383 --> 00:21:25.319
<c.magenta>当决定改变其状态时</c>

00:21:25.385 --> 00:21:30.624
<c.magenta>这是workoutSession</c>
<c.magenta>didChangeTo toState fromState</c>

00:21:31.291 --> 00:21:35.229
<c.magenta>这里我有一个switch语句</c>
<c.magenta>所有case都是空的</c>

00:21:35.562 --> 00:21:38.298
<c.magenta>我现在所感兴趣的</c>
<c.magenta>是运行时的case</c>

00:21:39.399 --> 00:21:41.768
<c.magenta>每当我们从notStarted</c>
<c.magenta>状态进来时</c>

00:21:42.202 --> 00:21:46.473
<c.magenta>这意味着你的应用</c>
<c.magenta>刚刚启动了锻炼</c>

00:21:48.242 --> 00:21:51.378
<c.magenta>所以如果是在跑步</c>
<c.magenta>从notStarted状态进入</c>

00:21:51.445 --> 00:21:55.649
<c.magenta>我要调用startAccumulating</c>
<c.magenta>Data函数</c>

00:21:56.550 --> 00:21:58.252
<c.magenta>让我们看看这个函数</c>

00:22:00.454 --> 00:22:04.191
<c.magenta>我们想更新屏幕</c>
<c.magenta>上的这两个标签</c>

00:22:04.258 --> 00:22:09.296
<c.magenta>一个代表距离</c>
<c.magenta>一个代表燃烧的能量</c>

00:22:09.363 --> 00:22:11.798
<c.magenta>所以我们要进行两次查询</c>

00:22:11.865 --> 00:22:14.434
<c.magenta>针对这两种数据类型</c>

00:22:16.069 --> 00:22:17.571
<c.magenta>进行查询的方式</c>

00:22:17.638 --> 00:22:20.340
<c.magenta>和在展示中的一样</c>

00:22:21.241 --> 00:22:25.846
<c.magenta>首先我们要构建一个</c>
<c.magenta>在查询中使用的predicate</c>

00:22:28.148 --> 00:22:30.450
<c.magenta>然后 我们要</c>
<c.magenta>定义一个处理器</c>

00:22:30.751 --> 00:22:35.389
<c.magenta>在这里 我已经有一个</c>
<c.magenta>实现好的过程函数</c>

00:22:35.455 --> 00:22:38.458
<c.magenta>它将接收这些样本</c>
<c.magenta>并进行累积</c>

00:22:38.525 --> 00:22:40.527
<c.magenta>并更新我的用户界面</c>

00:22:43.897 --> 00:22:47.000
<c.magenta>现在 我准备好创建查询了</c>

00:22:47.801 --> 00:22:50.504
<c.magenta>建立updateHandler</c>
<c.magenta>并执行</c>

00:22:53.707 --> 00:22:58.045
<c.magenta>最终 我想要保存</c>
<c.magenta>这个查询留用</c>

00:22:58.111 --> 00:23:02.616
<c.magenta>因为由updateHandler</c>
<c.magenta>执行的查询</c>

00:22:58.111 --> 00:23:02.616
<c.magenta>因为由updateHandler</c>
<c.magenta>执行的查询</c>

00:23:02.683 --> 00:23:04.952
<c.magenta>我们想在某个时刻停止它</c>

00:23:07.187 --> 00:23:08.388
<c.magenta>让我们开始</c>

00:23:10.257 --> 00:23:11.959
<c.magenta>再一次运行我们的应用</c>

00:23:14.461 --> 00:23:15.796
<c.magenta>切换到模拟器</c>

00:23:21.301 --> 00:23:22.669
<c.magenta>好了</c>

00:23:22.836 --> 00:23:25.005
<c.magenta>所以我们要选择 比如说</c>

00:23:25.639 --> 00:23:28.008
<c.magenta>一个室外的跑步锻炼</c>

00:23:30.477 --> 00:23:31.378
<c.magenta>好了</c>

00:23:33.213 --> 00:23:34.214
<c.magenta>当我们开始时</c>

00:23:35.616 --> 00:23:38.819
<c.magenta>我们可以看到屏幕上</c>
<c.magenta>的数字已经开始增长了</c>

00:23:38.886 --> 00:23:41.588
<c.magenta>这是因为手表模拟器</c>

00:23:41.655 --> 00:23:44.157
<c.magenta>在为你生成</c>
<c.magenta>一些虚拟样本</c>

00:23:44.224 --> 00:23:46.326
<c.magenta>每当你开始一次锻炼周期</c>

00:23:47.694 --> 00:23:48.529
<c.magenta>棒</c>

00:23:48.595 --> 00:23:51.899
<c.magenta>如果你看看屏幕</c>
<c.magenta>你可以看到有几个按钮</c>

00:23:51.965 --> 00:23:54.067
<c.magenta>但他们现在没有任何工作</c>

00:23:54.701 --> 00:24:00.040
<c.magenta>我们已经说了你如何</c>
<c.magenta>能暂停并为应用生成标记事件</c>

00:23:54.701 --> 00:24:00.040
<c.magenta>我们已经说了你如何</c>
<c.magenta>能暂停并为应用生成标记事件</c>

00:24:00.107 --> 00:24:02.976
<c.magenta>所以让我们看看代码</c>
<c.magenta>看看我们如何完成</c>

00:24:05.812 --> 00:24:11.585
<c.magenta>我在这里有一个didTapPause</c>
<c.magenta>ResumeButton函数</c>

00:24:11.652 --> 00:24:15.122
<c.magenta>它与屏幕上的暂停按钮绑定</c>

00:24:15.189 --> 00:24:17.391
<c.magenta>所以我要在这里写代码</c>

00:24:19.159 --> 00:24:22.229
<c.magenta>首先我要要检查</c>
<c.magenta>我是否有一个锻炼周期</c>

00:24:22.396 --> 00:24:24.831
<c.magenta>然后我要检查它的状态</c>

00:24:25.232 --> 00:24:26.333
<c.magenta>看它是否在运行</c>

00:24:27.201 --> 00:24:29.570
<c.magenta>我要暂停这次锻炼周期</c>

00:24:29.870 --> 00:24:32.439
<c.magenta>如果它是暂停的</c>
<c.magenta>我要将其继续</c>

00:24:34.107 --> 00:24:37.878
<c.magenta>好的 这样的结果是</c>
<c.magenta>你的锻炼周期状态会改变</c>

00:24:38.312 --> 00:24:39.780
<c.magenta>如果我们退回到</c>

00:24:43.584 --> 00:24:46.420
<c.magenta>委托回调</c>

00:24:46.486 --> 00:24:50.757
<c.magenta>每当你的锻炼周期</c>
<c.magenta>变动到特定的状态</c>

00:24:50.824 --> 00:24:54.328
<c.magenta>你可以在这里看到</c>
<c.magenta>暂停状态是空的</c>

00:24:54.561 --> 00:24:56.463
<c.magenta>所以我们要写点代码</c>

00:24:56.530 --> 00:25:01.001
<c.magenta>在这里我已实现了</c>
<c.magenta>pauseAccumulatingData</c>

00:24:56.530 --> 00:25:01.001
<c.magenta>在这里我已实现了</c>
<c.magenta>pauseAccumulatingData</c>

00:25:01.268 --> 00:25:04.471
<c.magenta>这个函数不再处理</c>

00:25:04.538 --> 00:25:07.741
<c.magenta>新的样本 当它们</c>
<c.magenta>进入到我的锻炼中时</c>

00:25:09.176 --> 00:25:12.145
<c.magenta>类似地 我们要在某点</c>
<c.magenta>继续这次锻炼</c>

00:25:12.212 --> 00:25:17.150
<c.magenta>所以当我们的周期</c>
<c.magenta>回到运行状态时</c>

00:25:18.285 --> 00:25:21.788
<c.magenta>我们会收到</c>
<c.magenta>resumeAccumulatingData</c>

00:25:25.292 --> 00:25:31.031
<c.magenta>屏幕上的另一个按键</c>
<c.magenta>是Marker按键</c>

00:25:31.965 --> 00:25:36.937
<c.magenta>在这里 我们想要创建</c>
<c.magenta>一个markerEvent</c>

00:25:37.871 --> 00:25:41.909
<c.magenta>我们刚刚创建了一个类型为</c>
<c.magenta>标记并有当前日期的锻炼事件</c>

00:25:42.376 --> 00:25:46.046
<c.magenta>我们要将该事件</c>
<c.magenta>保存到一个本地的队列里</c>

00:25:46.346 --> 00:25:48.749
<c.magenta>为了以后保存到锻炼中</c>

00:25:49.116 --> 00:25:55.155
<c.magenta>最终 我这里有一个步骤</c>
<c.magenta>要在用户界面通知用户</c>

00:25:55.222 --> 00:25:57.357
<c.magenta>这个事件刚刚发生</c>

00:25:59.092 --> 00:26:03.497
<c.magenta>还要记住我们已经</c>
<c.magenta>实现了didGenerate event</c>

00:25:59.092 --> 00:26:03.497
<c.magenta>还要记住我们已经</c>
<c.magenta>实现了didGenerate event</c>

00:26:05.599 --> 00:26:08.969
<c.magenta>这是来自</c>
<c.magenta>锻炼周期代理的回调</c>

00:26:09.036 --> 00:26:14.408
<c.magenta>在这里 我们还想保存</c>
<c.magenta>由HealthKit生成的事件</c>

00:26:14.474 --> 00:26:17.177
<c.magenta>到锻炼事件队列中</c>

00:26:18.645 --> 00:26:20.747
<c.magenta>所以让我们再运行一遍应用</c>

00:26:28.155 --> 00:26:29.823
<c.magenta>等它运行起来</c>

00:26:33.393 --> 00:26:34.595
<c.magenta>好了 出现了</c>

00:26:34.661 --> 00:26:37.097
<c.magenta>我现在要选择室外步行</c>

00:26:38.298 --> 00:26:41.401
<c.magenta>等几秒屏幕上出现数字</c>

00:26:42.135 --> 00:26:46.039
<c.magenta>你可以在屏幕最上看到</c>
<c.magenta>有一个活跃的锻炼</c>

00:26:46.540 --> 00:26:50.777
<c.magenta>每当我点击暂停按钮</c>
<c.magenta>它都进入暂停状态</c>

00:26:50.844 --> 00:26:55.048
<c.magenta>你可以看到卡路里</c>
<c.magenta>和距离的数字没有增长</c>

00:26:56.049 --> 00:26:57.718
<c.magenta>我现在可以点继续了</c>

00:26:58.051 --> 00:27:01.855
<c.magenta>它进入了活动状态</c>
<c.magenta>数字又开始增长了</c>

00:26:58.051 --> 00:27:01.855
<c.magenta>它进入了活动状态</c>
<c.magenta>数字又开始增长了</c>

00:27:04.324 --> 00:27:08.629
<c.magenta>你也可以点击Marker按钮</c>

00:27:09.196 --> 00:27:11.832
<c.magenta>它会在用户界面中进行展示</c>

00:27:12.266 --> 00:27:16.904
<c.magenta>很可能你的用户所佩戴的</c>
<c.magenta>手表会生成一次抖动</c>

00:27:19.673 --> 00:27:23.143
<c.magenta>很好 现在我们回到展示</c>

00:27:26.146 --> 00:27:27.614
<c.magenta>回想一下我们所看到的</c>

00:27:30.284 --> 00:27:33.787
<c.magenta>我们刚刚看到你如何</c>
<c.magenta>使用锚对象查询</c>

00:27:33.854 --> 00:27:38.492
<c.magenta>来从HealthKit获得信息</c>
<c.magenta>并更新锻炼总量</c>

00:27:39.226 --> 00:27:42.829
<c.magenta>然后我们实现了</c>
<c.magenta>暂停与继续事件</c>

00:27:43.730 --> 00:27:45.332
<c.magenta>在你的锻炼应用中</c>

00:27:45.399 --> 00:27:50.137
<c.magenta>最后 我们展示了如何</c>
<c.magenta>创建一次事件并保存留用</c>

00:27:54.208 --> 00:27:57.177
<c.magenta>下一步是终止你的锻炼周期</c>

00:27:57.244 --> 00:28:01.648
<c.magenta>说到这里我要邀请</c>
<c.magenta>我的同事Dash回来</c>

00:27:57.244 --> 00:28:01.648
<c.magenta>说到这里我要邀请</c>
<c.magenta>我的同事Dash回来</c>

00:28:09.223 --> 00:28:10.090
<c.magenta>又见面了</c>

00:28:11.091 --> 00:28:13.026
<c.magenta>结束并保存一次锻炼很简单</c>

00:28:13.493 --> 00:28:17.264
<c.magenta>只需几步 你的应用</c>
<c.magenta>所保存的锻炼可以无缝地集成</c>

00:28:17.331 --> 00:28:19.800
<c.magenta>与活动与健康应用</c>

00:28:20.100 --> 00:28:22.202
<c.magenta>让我们看看活动应用</c>

00:28:25.839 --> 00:28:28.141
<c.magenta>保存到HealthKit的</c>
<c.magenta>锻炼会自动展示</c>

00:28:28.208 --> 00:28:30.244
<c.magenta>在活动应用锻炼列表中</c>

00:28:31.078 --> 00:28:34.882
<c.magenta>从iOS 10开始</c>
<c.magenta>这包含了手机上的锻炼</c>

00:28:35.215 --> 00:28:38.318
<c.magenta>这意味着用户可以在</c>
<c.magenta>手机应用上进行锻炼</c>

00:28:38.385 --> 00:28:40.020
<c.magenta>当他们的手表不在身边时</c>

00:28:40.087 --> 00:28:42.389
<c.magenta>他们一样会在活动应用</c>
<c.magenta>中获得积分</c>

00:28:47.728 --> 00:28:49.363
<c.magenta>有能量样本的锻炼</c>

00:28:49.429 --> 00:28:51.665
<c.magenta>可以向用户的</c>
<c.magenta>运动环做贡献</c>

00:28:51.965 --> 00:28:54.902
<c.magenta>用户会很喜欢从</c>
<c.magenta>你的应用获得锻炼积分</c>

00:28:54.968 --> 00:28:56.136
<c.magenta>在他们的活动日中</c>

00:28:57.838 --> 00:29:00.240
<c.magenta>让我们一步步学习</c>
<c.magenta>如何结束并保存一次锻炼</c>

00:28:57.838 --> 00:29:00.240
<c.magenta>让我们一步步学习</c>
<c.magenta>如何结束并保存一次锻炼</c>

00:29:00.307 --> 00:29:02.543
<c.magenta>让它们展示在</c>
<c.magenta>用户的活动应用中</c>

00:29:03.944 --> 00:29:06.180
<c.magenta>完成一次健身有三步</c>

00:29:07.814 --> 00:29:09.883
<c.magenta>第一 你要结束锻炼周期</c>

00:29:12.186 --> 00:29:14.588
<c.magenta>第二 你要将锻炼</c>
<c.magenta>保存至HealthKit</c>

00:29:15.622 --> 00:29:19.193
<c.magenta>第三 你将关联的样本</c>
<c.magenta>添加到保存的锻炼中</c>

00:29:19.259 --> 00:29:20.627
<c.magenta>比如燃烧的热量和距离</c>

00:29:21.795 --> 00:29:23.096
<c.magenta>让我们一个一个解决</c>

00:29:26.366 --> 00:29:29.670
<c.magenta>为结束锻炼周期 只需调用</c>
<c.magenta>healthStore的结束方法</c>

00:29:29.736 --> 00:29:31.505
<c.magenta>并传入锻炼周期</c>

00:29:31.972 --> 00:29:34.775
<c.magenta>这将重置设备的</c>
<c.magenta>传感器至正常状态</c>

00:29:37.044 --> 00:29:38.846
<c.magenta>当HealthKit成功结束锻炼后</c>

00:29:38.912 --> 00:29:41.081
<c.magenta>你的锻炼周期代理</c>
<c.magenta>会收到回调</c>

00:29:41.148 --> 00:29:42.449
<c.magenta>在其状态改变方法中</c>

00:29:43.383 --> 00:29:45.485
<c.magenta>当你看到状态改为ended时</c>

00:29:45.552 --> 00:29:47.221
<c.magenta>就应该保存锻炼了</c>

00:29:50.224 --> 00:29:53.227
<c.magenta>你要创建一个HKWorkout样本</c>
<c.magenta>来保存到HealthKit</c>

00:29:53.660 --> 00:29:55.696
<c.magenta>你创建锻炼所使用的信息</c>

00:29:55.762 --> 00:29:58.332
<c.magenta>将会展示在用户的</c>
<c.magenta>健康与活动应用中</c>

00:30:00.567 --> 00:30:04.104
<c.magenta>确保你所使用的活动类型</c>
<c.magenta>和原先配置健身时一样</c>

00:30:05.906 --> 00:30:08.175
<c.magenta>为锻炼设置一个起始时间和结束时间</c>

00:30:08.842 --> 00:30:11.078
<c.magenta>并包含一个锻炼事件队列</c>

00:30:11.445 --> 00:30:14.114
<c.magenta>这个队列可以包含</c>
<c.magenta>诸如暂停与继续的事件</c>

00:30:14.181 --> 00:30:16.817
<c.magenta>以及Jorge刚才讨论过的</c>
<c.magenta>标记和圈数</c>

00:30:20.053 --> 00:30:23.790
<c.magenta>totalEnergyBurned</c>
<c.magenta>值是一个HK数值 代表总值</c>

00:30:23.857 --> 00:30:26.326
<c.magenta>在锻炼周期期间所有燃烧的能量</c>

00:30:27.628 --> 00:30:30.397
<c.magenta>类似地 totalDistance</c>
<c.magenta>值也是HK数值</c>

00:30:30.464 --> 00:30:33.233
<c.magenta>代表锻炼周期期间所运动的总长</c>

00:30:36.003 --> 00:30:38.105
<c.magenta>最后 不要忘了添加元数据</c>

00:30:39.072 --> 00:30:40.974
<c.magenta>给IndoorWorkout键</c>
<c.magenta>设一个值</c>

00:30:41.041 --> 00:30:43.310
<c.magenta>来为你的锻炼声明位置类型</c>

00:30:47.047 --> 00:30:49.082
<c.magenta>你可将该锻炼样本</c>
<c.magenta>存至HealthKit</c>

00:30:49.149 --> 00:30:51.919
<c.magenta>只需要将其传入</c>
<c.magenta>healthStore的保存方法</c>

00:30:53.153 --> 00:30:55.255
<c.magenta>当你看到它保存成功时</c>

00:30:55.322 --> 00:30:57.424
<c.magenta>就可以向锻炼添加样本了</c>

00:30:57.491 --> 00:30:59.193
<c.magenta>让我们说说添加样本</c>

00:31:02.062 --> 00:31:03.830
<c.magenta>当你向一次锻炼添加样本时</c>

00:31:03.897 --> 00:31:07.701
<c.magenta>HealthKit会在这些样本</c>
<c.magenta>和锻炼之间创建一个链接</c>

00:31:09.169 --> 00:31:11.672
<c.magenta>应用可以在其后</c>
<c.magenta>查询所有的样本</c>

00:31:11.738 --> 00:31:13.740
<c.magenta>与指定的锻炼对应</c>

00:31:14.875 --> 00:31:16.443
<c.magenta>这将很有用 如果你想绘图</c>

00:31:16.510 --> 00:31:18.745
<c.magenta>在锻炼时间线中</c>
<c.magenta>描述细节数据</c>

00:31:21.782 --> 00:31:24.251
<c.magenta>想锻炼添加能量样本很必要</c>

00:31:24.318 --> 00:31:26.887
<c.magenta>如果你想让用户</c>
<c.magenta>在活动运动环中获得积分</c>

00:31:27.421 --> 00:31:29.990
<c.magenta>活动会使用这些关联的能量样本</c>

00:31:30.057 --> 00:31:31.592
<c.magenta>来计算环中的积分</c>

00:31:36.797 --> 00:31:40.267
<c.magenta>最终 确保你先前保存在</c>
<c.magenta>锻炼样本中的总额</c>

00:31:40.634 --> 00:31:42.970
<c.magenta>与这些关联样本相符</c>

00:31:45.939 --> 00:31:49.443
<c.magenta>为了向锻炼添加样本</c>
<c.magenta>只需要传入一个HK样本队列</c>

00:31:49.510 --> 00:31:52.246
<c.magenta>到healthStore的</c>
<c.magenta>addSamplesToWorkout方法</c>

00:31:55.682 --> 00:31:59.019
<c.magenta>让我们现更新SpeedySloth</c>
<c.magenta>添加结束与保存锻炼功能</c>

00:32:00.320 --> 00:32:01.722
<c.magenta>我们上一次使用应用时</c>

00:32:01.788 --> 00:32:04.424
<c.magenta>Jorge展示了如何收集</c>
<c.magenta>数据来展示给用户</c>

00:32:05.058 --> 00:32:07.895
<c.magenta>以及如何通过暂停与继续</c>
<c.magenta>控制这个事件</c>

00:32:08.529 --> 00:32:11.532
<c.magenta>你可能已经发现在</c>
<c.magenta>WorkoutInterfaceController底部</c>

00:32:11.598 --> 00:32:13.367
<c.magenta>有一个叫</c>
<c.magenta>End Workout的按钮</c>

00:32:13.967 --> 00:32:15.936
<c.magenta>当我点击它时没有反应</c>

00:32:16.003 --> 00:32:17.171
<c.magenta>我们现在要进行修改</c>

00:32:18.739 --> 00:32:20.641
<c.magenta>我又回到了锻炼界面控制器</c>

00:32:21.208 --> 00:32:23.443
<c.magenta>我有一个方法叫</c>
<c.magenta>didTapEndButton</c>

00:32:24.211 --> 00:32:25.345
<c.magenta>让我们向里面写代码</c>

00:32:28.982 --> 00:32:31.852
<c.magenta>首先 我要保存当前时间</c>
<c.magenta>作为workoutEndDate</c>

00:32:31.919 --> 00:32:34.555
<c.magenta>我们稍后创建锻炼样本时</c>
<c.magenta>会用到它</c>

00:32:37.224 --> 00:32:39.626
<c.magenta>接下来 我要调用</c>
<c.magenta>healthStore的结束方法</c>

00:32:39.693 --> 00:32:41.595
<c.magenta>并传入锻炼周期</c>

00:32:43.297 --> 00:32:45.065
<c.magenta>当healthKit成功结束周期后</c>

00:32:45.132 --> 00:32:47.668
<c.magenta>我们在状态变更方法</c>
<c.magenta>中就会收到一个回调</c>

00:32:48.368 --> 00:32:50.370
<c.magenta>我现要回到</c>
<c.magenta>状态变更方法</c>

00:32:53.874 --> 00:32:55.275
<c.magenta>Jorge刚才已经展示</c>

00:32:55.342 --> 00:32:57.444
<c.magenta>如何处理运行与暂停状态</c>

00:32:58.412 --> 00:33:00.480
<c.magenta>现在我们想处理</c>
<c.magenta>这个终止状态</c>

00:32:58.412 --> 00:33:00.480
<c.magenta>现在我们想处理</c>
<c.magenta>这个终止状态</c>

00:33:03.417 --> 00:33:05.986
<c.magenta>我们想在锻炼周期结束时</c>
<c.magenta>完成两项任务</c>

00:33:06.286 --> 00:33:08.355
<c.magenta>第一 我想结束所有的查询</c>

00:33:09.857 --> 00:33:11.291
<c.magenta>这个方法已经实现了</c>

00:33:11.358 --> 00:33:14.928
<c.magenta>它会遍历开放查询的队列</c>
<c.magenta>并逐一停止</c>

00:33:16.964 --> 00:33:19.666
<c.magenta>然后 我们想将锻炼保存</c>
<c.magenta>让我们现在实现它</c>

00:33:27.374 --> 00:33:30.143
<c.magenta>我要创建一个锻炼样本</c>
<c.magenta>我要使用活动类型</c>

00:33:30.210 --> 00:33:31.879
<c.magenta>直接从锻炼配置获得</c>

00:33:33.747 --> 00:33:37.284
<c.magenta>然后我将开始时间与</c>
<c.magenta>结束时间设置为刚才保存的值</c>

00:33:39.386 --> 00:33:40.988
<c.magenta>我添加了</c>
<c.magenta>workoutEvents对列</c>

00:33:41.054 --> 00:33:43.757
<c.magenta>Jorge展示了如何</c>
<c.magenta>在锻炼周期期间进行构建</c>

00:33:47.361 --> 00:33:49.296
<c.magenta>我要使用totalEnergyBurned</c>
<c.magenta>的数值</c>

00:33:49.363 --> 00:33:53.467
<c.magenta>以及在此期间我们从数据查询</c>
<c.magenta>中积累的totalDistance</c>

00:33:55.903 --> 00:33:58.338
<c.magenta>最终 我要添加针对</c>
<c.magenta>描述信息的代码字典</c>

00:33:58.405 --> 00:34:01.308
<c.magenta>我要给室内锻炼字段赋值</c>

00:33:58.405 --> 00:34:01.308
<c.magenta>我要给室内锻炼字段赋值</c>

00:34:01.375 --> 00:34:04.011
<c.magenta>基于我们锻炼配置的位置类型</c>

00:34:07.714 --> 00:34:10.617
<c.magenta>我要将锻炼样本</c>
<c.magenta>传入healthStore的保存方法</c>

00:34:10.684 --> 00:34:12.119
<c.magenta>它会将其存到HealthKit中</c>

00:34:13.554 --> 00:34:15.522
<c.magenta>当我们看到它保存成功后</c>

00:34:15.822 --> 00:34:17.424
<c.magenta>我将要调用</c>
<c.magenta>addSamplesToWorkout</c>

00:34:17.491 --> 00:34:19.893
<c.magenta>这个函数就在这里</c>
<c.magenta>我们现在就实现它</c>

00:34:24.998 --> 00:34:27.266
<c.magenta>我想要想这次锻炼</c>
<c.magenta>添加两个样本</c>

00:34:27.333 --> 00:34:30.137
<c.magenta>一个作为totalEnergyBurned</c>
<c.magenta>另一个是totalDistance</c>

00:34:33.072 --> 00:34:35.708
<c.magenta>对于totalEnergyBurned</c>
<c.magenta>我创建了一个quantitySample</c>

00:34:36.176 --> 00:34:38.879
<c.magenta>我使用的数值类型</c>
<c.magenta>是activeEnergyBurned</c>

00:34:39.947 --> 00:34:42.748
<c.magenta>然后我要传入同一个</c>
<c.magenta>totalEnergyBurned数量</c>

00:34:42.815 --> 00:34:44.551
<c.magenta>与刚才我在锻炼样本中使用的相同</c>

00:34:45.085 --> 00:34:48.355
<c.magenta>这意味着将有一个</c>
<c.magenta>很大的能量消耗样本</c>

00:34:48.422 --> 00:34:50.389
<c.magenta>这跨越了锻炼的整个周期</c>

00:34:50.991 --> 00:34:54.561
<c.magenta>如果你想要的话 你可以</c>
<c.magenta>创建多个更小的能量燃烧样本</c>

00:34:54.628 --> 00:34:56.630
<c.magenta>只需保证它们加起来和</c>

00:34:56.697 --> 00:34:58.532
<c.magenta>你在HKWorkout样本中</c>
<c.magenta>的值相同</c>

00:35:03.103 --> 00:35:05.272
<c.magenta>我为totalDistanceSample</c>
<c.magenta>进行同样操作</c>

00:35:06.340 --> 00:35:08.909
<c.magenta>我要使用的数值类型是</c>
<c.magenta>distanceWalkingRunning</c>

00:35:09.243 --> 00:35:11.178
<c.magenta>HealthKit有三种距离类型</c>

00:35:11.245 --> 00:35:13.881
<c.magenta>我要用WalkingRunning</c>
<c.magenta>因为我们的锻炼应用只处理</c>

00:35:13.947 --> 00:35:15.349
<c.magenta>走动与跑动距离</c>

00:35:16.016 --> 00:35:17.918
<c.magenta>如果你要构建骑行锻炼应用</c>

00:35:17.985 --> 00:35:20.087
<c.magenta>你应当使用骑行距离</c>

00:35:20.521 --> 00:35:22.723
<c.magenta>我们刚刚添加了一种</c>
<c.magenta>新的距离类型</c>

00:35:22.789 --> 00:35:25.859
<c.magenta>轮椅距离 你可以使用它</c>
<c.magenta>进行基于轮椅的锻炼活动</c>

00:35:29.296 --> 00:35:32.299
<c.magenta>我要使用和刚才锻炼样本</c>
<c.magenta>一样的总距离数值</c>

00:35:32.733 --> 00:35:35.002
<c.magenta>我要设置同样的</c>
<c.magenta>锻炼开始和结束时间</c>

00:35:35.068 --> 00:35:38.405
<c.magenta>再一次 这是一个很大的</c>
<c.magenta>距离样本 跨越整个锻炼</c>

00:35:41.275 --> 00:35:43.343
<c.magenta>我将这两个样本添加到锻炼</c>

00:35:43.410 --> 00:35:45.546
<c.magenta>通过将它们放在一个</c>
<c.magenta>队列中并传入</c>

00:35:45.612 --> 00:35:47.281
<c.magenta>“添加样本至锻炼”方法</c>
<c.magenta>在healthStore中</c>

00:35:49.316 --> 00:35:51.351
<c.magenta>当我看到添加成功时</c>

00:35:51.418 --> 00:35:54.288
<c.magenta>我知道我这次锻炼的所有</c>
<c.magenta>数据都保存到HealthKit中了</c>

00:35:54.821 --> 00:35:56.823
<c.magenta>现在我想将锻炼展示给用户</c>

00:36:00.027 --> 00:36:02.529
<c.magenta>我通过传入HKWorkout</c>
<c.magenta>对象来完成</c>

00:36:02.596 --> 00:36:05.699
<c.magenta>传给一个新的界面控制器叫</c>
<c.magenta>SummaryInterface Controller</c>

00:36:06.466 --> 00:36:08.402
<c.magenta>SummaryInterface Controller</c>
<c.magenta>已经写好了 它知道</c>

00:36:08.468 --> 00:36:11.805
<c.magenta>如何在一个总览视图中</c>
<c.magenta>向用户展示一个HKWorkout</c>

00:36:14.107 --> 00:36:17.411
<c.magenta>我要再次运行应用</c>
<c.magenta>我们将看到如何结束锻炼</c>

00:36:33.026 --> 00:36:34.728
<c.magenta>我们再一次选择室外跑步</c>

00:36:34.795 --> 00:36:35.896
<c.magenta>我要点击Start</c>

00:36:37.064 --> 00:36:39.399
<c.magenta>我们稍等片刻</c>
<c.magenta>数据开始收集</c>

00:36:44.638 --> 00:36:46.440
<c.magenta>好了我将点击</c>
<c.magenta>结束锻炼按钮</c>

00:36:46.507 --> 00:36:47.641
<c.magenta>因为我们已经有些数据了</c>

00:36:49.743 --> 00:36:53.046
<c.magenta>我们的锻炼周期结束了</c>
<c.magenta>我们的样本已存到HealthKit</c>

00:36:53.113 --> 00:36:56.016
<c.magenta>这里是总览视图</c>
<c.magenta>向我们展示锻炼样本</c>

00:36:57.050 --> 00:36:59.920
<c.magenta>为确保它的确成功</c>
<c.magenta>保存到了HealthKit</c>

00:36:59.987 --> 00:37:02.623
<c.magenta>让我们看看iPhone</c>
<c.magenta>模拟器上的Health应用</c>

00:36:59.987 --> 00:37:02.623
<c.magenta>让我们看看iPhone</c>
<c.magenta>模拟器上的Health应用</c>

00:37:05.325 --> 00:37:07.961
<c.magenta>现在我在Health应用</c>
<c.magenta>的Workout视图中</c>

00:37:08.462 --> 00:37:11.265
<c.magenta>我要点击显示全部数据</c>
<c.magenta>而后会看到一个锻炼列表</c>

00:37:13.700 --> 00:37:16.937
<c.magenta>在顶端你可以看到</c>
<c.magenta>一个在11:36刚刚完成的锻炼</c>

00:37:17.004 --> 00:37:18.005
<c.magenta>这就是我们的锻炼</c>

00:37:18.338 --> 00:37:20.774
<c.magenta>我要点击它来</c>
<c.magenta>获得更多信息</c>

00:37:22.643 --> 00:37:24.611
<c.magenta>你可以看到这是</c>
<c.magenta>一个跑步锻炼</c>

00:37:24.678 --> 00:37:27.948
<c.magenta>它有近乎13秒的时长</c>
<c.magenta>这里有起始和结束时间</c>

00:37:28.015 --> 00:37:30.384
<c.magenta>这是我们锻炼样本中的所有信息了</c>

00:37:30.484 --> 00:37:33.820
<c.magenta>你甚至可以在这里看到元数据</c>
<c.magenta>说这不是室内活动</c>

00:37:34.788 --> 00:37:36.723
<c.magenta>在底端你可以看到两个样本</c>

00:37:36.790 --> 00:37:38.492
<c.magenta>我们刚才将其与锻炼关联</c>

00:37:38.825 --> 00:37:41.128
<c.magenta>我们几乎总共燃烧了2卡路里</c>

00:37:41.195 --> 00:37:42.129
<c.magenta>干得漂亮</c>

00:37:42.663 --> 00:37:45.799
<c.magenta>我们跑了一英里的百分之一</c>

00:37:46.967 --> 00:37:49.736
<c.magenta>所以看起来所有信息</c>
<c.magenta>都成功保存到了HealthKit</c>

00:37:50.270 --> 00:37:51.605
<c.magenta>让我们回看刚才做了什么</c>

00:37:54.374 --> 00:37:57.578
<c.magenta>我们通过对healthStore</c>
<c.magenta>调用end结束了锻炼周期</c>

00:37:58.779 --> 00:38:01.882
<c.magenta>然后我们在状态变更</c>
<c.magenta>代理方法中等待回调</c>

00:37:58.779 --> 00:38:01.882
<c.magenta>然后我们在状态变更</c>
<c.magenta>代理方法中等待回调</c>

00:38:02.316 --> 00:38:04.418
<c.magenta>当我们看到状态</c>
<c.magenta>改变为end后</c>

00:38:04.484 --> 00:38:06.920
<c.magenta>我们创建了一个锻炼样本</c>
<c.magenta>并保存至HealthKit</c>

00:38:07.754 --> 00:38:10.524
<c.magenta>然后 我们创建了两个样本</c>
<c.magenta>来添加到锻炼中</c>

00:38:10.591 --> 00:38:13.093
<c.magenta>一个为了totalEnergyBurned</c>
<c.magenta>另一个作为totalDistance</c>

00:38:13.694 --> 00:38:16.697
<c.magenta>要记住有必要关联</c>
<c.magenta>燃烧能量的样本</c>

00:38:16.763 --> 00:38:19.266
<c.magenta>这样用户就可以在</c>
<c.magenta>活动环中获得积分</c>

00:38:21.602 --> 00:38:24.571
<c.magenta>我们刚刚构建了一整个</c>
<c.magenta>watchOS 3的锻炼应用</c>

00:38:24.638 --> 00:38:25.706
<c.magenta>就是这么简单</c>

00:38:33.514 --> 00:38:37.384
<c.magenta>现在watchOS中的每个应用</c>
<c.magenta>都有一个父应用</c>

00:38:37.718 --> 00:38:41.889
<c.magenta>我们在iOS 10中专门为</c>
<c.magenta>锻炼应用添加了一些API</c>

00:38:42.556 --> 00:38:46.226
<c.magenta>为了向大家介绍这些新API</c>
<c.magenta>我要邀请Jorge回到这里</c>

00:38:46.426 --> 00:38:47.261
<c.magenta>谢谢你</c>

00:38:53.967 --> 00:38:54.801
<c.magenta>谢谢你 Dash</c>

00:38:58.939 --> 00:39:03.443
<c.magenta>你们都为iPhone开发了</c>
<c.magenta>很棒的应用</c>

00:38:58.939 --> 00:39:03.443
<c.magenta>你们都为iPhone开发了</c>
<c.magenta>很棒的应用</c>

00:39:03.810 --> 00:39:08.782
<c.magenta>锻炼应用不只是你的手表</c>

00:39:09.349 --> 00:39:11.185
<c.magenta>从iOS 10开始</c>

00:39:11.251 --> 00:39:14.721
<c.magenta>我们提供了新的API</c>
<c.magenta>供大家使用</c>

00:39:14.788 --> 00:39:18.258
<c.magenta>来在你的iPhone应用中</c>
<c.magenta>实现新的功能</c>

00:39:21.995 --> 00:39:27.935
<c.magenta>我们提到了每一个手表</c>
<c.magenta>应用都有一个iPhone父应用</c>

00:39:28.902 --> 00:39:35.209
<c.magenta>你可以利用这一点</c>
<c.magenta>为你的用户提供很棒的体验</c>

00:39:36.877 --> 00:39:39.546
<c.magenta>你可以使用</c>
<c.magenta>WatchConnectivity</c>

00:39:39.613 --> 00:39:41.949
<c.magenta>在两个应用间通信</c>

00:39:42.115 --> 00:39:45.052
<c.magenta>这是实现新特性</c>
<c.magenta>很有效的方法</c>

00:39:45.118 --> 00:39:47.888
<c.magenta>当你的手表处在健身状态</c>

00:39:48.355 --> 00:39:50.023
<c.magenta>且应用在运行</c>

00:39:52.426 --> 00:39:54.494
<c.magenta>现在我们有了后台运行</c>

00:39:54.561 --> 00:39:57.965
<c.magenta>这样你的应用可以在任意时刻运行</c>

00:39:58.031 --> 00:40:02.970
<c.magenta>这允许你实现很棒的新功能</c>

00:39:58.031 --> 00:40:02.970
<c.magenta>这允许你实现很棒的新功能</c>

00:40:04.505 --> 00:40:07.140
<c.magenta>但是 为了实现这一点</c>

00:40:07.207 --> 00:40:10.611
<c.magenta>你需要将手表调到健身状态</c>

00:40:12.246 --> 00:40:17.017
<c.magenta>从iOS 10开始</c>
<c.magenta>我们提供功能</c>

00:40:17.084 --> 00:40:22.523
<c.magenta>让你从iPhone中开启一次锻炼</c>

00:40:25.092 --> 00:40:29.329
<c.magenta>这就是 你的手表将</c>
<c.magenta>进入锻炼状态</c>

00:40:29.396 --> 00:40:33.467
<c.magenta>用户不需要干预其用户界面</c>

00:40:34.535 --> 00:40:37.204
<c.magenta>现在 让我们看看这怎么完成</c>

00:40:39.740 --> 00:40:41.175
<c.magenta>在你的iPhone应用中</c>

00:40:41.909 --> 00:40:45.579
<c.magenta>你可以选择活动类型和位置</c>

00:40:45.646 --> 00:40:48.749
<c.magenta>你需要创建一个</c>
<c.magenta>workoutConfiguration对象</c>

00:40:49.917 --> 00:40:51.185
<c.magenta>一旦完成</c>

00:40:52.186 --> 00:40:54.621
<c.magenta>你将workoutConfiguration对象</c>

00:40:54.688 --> 00:40:56.156
<c.magenta>发送到手表应用中</c>

00:40:56.690 --> 00:40:59.760
<c.magenta>如果手表应用没有运行</c>

00:40:59.826 --> 00:41:01.328
<c.magenta>就会自动运行</c>

00:40:59.826 --> 00:41:01.328
<c.magenta>就会自动运行</c>

00:41:03.630 --> 00:41:09.002
<c.magenta>现在 锻炼应用可以获取那个配置对象</c>

00:41:09.069 --> 00:41:10.737
<c.magenta>并开启一次锻炼周期</c>

00:41:13.907 --> 00:41:15.409
<c.magenta>为了使之正常运行</c>

00:41:15.475 --> 00:41:18.445
<c.magenta>你需要进入</c>
<c.magenta>锻炼运行后台模式</c>

00:41:18.512 --> 00:41:20.814
<c.magenta>我们在展示的前一段提到过</c>

00:41:22.649 --> 00:41:24.852
<c.magenta>现在让我们看看代码</c>

00:41:26.753 --> 00:41:28.488
<c.magenta>你可能对这段代码很熟悉</c>

00:41:28.555 --> 00:41:30.958
<c.magenta>因为我们在展示的前面看到过</c>

00:41:31.024 --> 00:41:35.429
<c.magenta>每当你要在手表上开启一次</c>
<c.magenta>锻炼时都需要这么做</c>

00:41:37.097 --> 00:41:40.067
<c.magenta>你先创建一个workout</c>
<c.magenta>Configuration对象</c>

00:41:40.601 --> 00:41:45.172
<c.magenta>然后使用它创建一个</c>
<c.magenta>workoutSession与startDate</c>

00:41:48.175 --> 00:41:52.479
<c.magenta>在这里 我们想将这些</c>
<c.magenta>代码分成两部分</c>

00:41:53.981 --> 00:41:56.817
<c.magenta>第一部分是创建</c>
<c.magenta>workoutConfiguration</c>

00:41:56.884 --> 00:41:59.152
<c.magenta>会在iPhone应用中执行</c>

00:42:00.220 --> 00:42:04.758
<c.magenta>创建workoutSession与</c>
<c.magenta>startDate将在手表应用上执行</c>

00:42:07.528 --> 00:42:09.763
<c.magenta>为了完成这一点</c>
<c.magenta>你需要进行通信</c>

00:42:09.830 --> 00:42:11.431
<c.magenta>在两个应用之间</c>

00:42:11.732 --> 00:42:15.536
<c.magenta>所以让我们先看看</c>
<c.magenta>iPhone应用中的代码</c>

00:42:18.338 --> 00:42:21.742
<c.magenta>首先 你需要检测</c>
<c.magenta>WatchConnectivity</c>

00:42:21.808 --> 00:42:23.510
<c.magenta>看看有没有一个</c>
<c.magenta>激活的会话</c>

00:42:24.178 --> 00:42:26.813
<c.magenta>以及手表应用是否安装</c>

00:42:28.782 --> 00:42:32.619
<c.magenta>完成之后 你就可以创建</c>
<c.magenta>workoutConfiguration了</c>

00:42:34.922 --> 00:42:38.192
<c.magenta>下一步 为了将</c>
<c.magenta>workoutConfiguration传给</c>

00:42:38.258 --> 00:42:40.093
<c.magenta>你的手表应用</c>

00:42:40.160 --> 00:42:44.264
<c.magenta>你将要调用iOS 10中的</c>
<c.magenta>新方法 startWatchApp</c>

00:42:44.331 --> 00:42:45.933
<c.magenta>使用workoutConfiguration</c>

00:42:46.166 --> 00:42:48.635
<c.magenta>这是HK healthStore</c>
<c.magenta>的新方法</c>

00:42:49.169 --> 00:42:54.541
<c.magenta>这会将你的workoutConfiguration</c>
<c.magenta>传送到手表应用中</c>

00:42:58.712 --> 00:43:01.215
<c.magenta>现在让我们看看</c>
<c.magenta>手表应用代码</c>

00:42:58.712 --> 00:43:01.215
<c.magenta>现在让我们看看</c>
<c.magenta>手表应用代码</c>

00:43:01.682 --> 00:43:04.618
<c.magenta>你需要用workoutConfiguration</c>

00:43:05.285 --> 00:43:07.354
<c.magenta>来创建一个锻炼周期并开始</c>

00:43:08.755 --> 00:43:14.061
<c.magenta>为此 你需要实现处理</c>
<c.magenta>workoutConfiguration</c>

00:43:14.127 --> 00:43:16.530
<c.magenta>这是一个新函数</c>

00:43:16.797 --> 00:43:20.200
<c.magenta>是WatchKit</c>
<c.magenta>ExtensionDelegate的一部分</c>

00:43:20.734 --> 00:43:22.603
<c.magenta>通过实现这个函数</c>

00:43:22.669 --> 00:43:26.073
<c.magenta>你可以获取你的</c>
<c.magenta>workouConfiguration并可以开始</c>

00:43:27.541 --> 00:43:32.045
<c.magenta>现在让我们回到我们的</c>
<c.magenta>SpeedySloth演示应用</c>

00:43:32.279 --> 00:43:38.085
<c.magenta>来看看我们我们如何</c>
<c.magenta>从iPhone开始我们的建设</c>

00:43:44.858 --> 00:43:45.726
<c.magenta>所以</c>

00:43:47.761 --> 00:43:50.864
<c.magenta>让我们看看iPhone模拟器</c>

00:43:50.931 --> 00:43:52.466
<c.magenta>我将要创建健康应用</c>

00:43:53.367 --> 00:43:55.636
<c.magenta>这里我有iPhone版本</c>

00:43:55.702 --> 00:43:57.571
<c.magenta>的SpeedySloth应用</c>

00:43:58.038 --> 00:43:59.373
<c.magenta>我要启动它</c>

00:43:59.439 --> 00:44:01.208
<c.magenta>你可以看到用户界面</c>

00:43:59.439 --> 00:44:01.208
<c.magenta>你可以看到用户界面</c>

00:44:01.275 --> 00:44:04.611
<c.magenta>和手表上的非常相似</c>

00:44:05.612 --> 00:44:09.650
<c.magenta>我们的用户界面可以让你</c>

00:44:09.716 --> 00:44:12.553
<c.magenta>选择活动类型和位置类型</c>

00:44:12.619 --> 00:44:16.323
<c.magenta>我们还有一个Start按钮</c>
<c.magenta>现在没有任何功能</c>

00:44:17.391 --> 00:44:20.761
<c.magenta>所以我们看看代码</c>

00:44:20.827 --> 00:44:24.264
<c.magenta>来看看我们如何实现该方法</c>

00:44:25.532 --> 00:44:30.337
<c.magenta>我要切换到iPhone应用的代码</c>

00:44:30.704 --> 00:44:34.808
<c.magenta>我有一个配置视图控制器</c>

00:44:35.075 --> 00:44:38.178
<c.magenta>这个类负责处理我们</c>
<c.magenta>刚刚看到的界面</c>

00:44:38.712 --> 00:44:40.380
<c.magenta>在didTapStart按钮中</c>

00:44:40.881 --> 00:44:44.618
<c.magenta>我们要实现我们的方法</c>

00:44:47.087 --> 00:44:51.859
<c.magenta>首先 我们要创建</c>
<c.magenta>workoutConfiguration对象</c>

00:44:52.192 --> 00:44:54.294
<c.magenta>使用选择的</c>
<c.magenta>活动类型和位置类型</c>

00:44:54.361 --> 00:44:58.999
<c.magenta>这和在手表应用上的代码一样</c>

00:45:00.767 --> 00:45:05.205
<c.magenta>下一步 我们要获取</c>
<c.magenta>workoutViewController</c>

00:45:05.272 --> 00:45:06.740
<c.magenta>为了storyboard</c>

00:45:06.807 --> 00:45:11.411
<c.magenta>在健身持续期间</c>
<c.magenta>我们要展示这个UI</c>

00:45:13.881 --> 00:45:16.583
<c.magenta>我们要设置</c>
<c.magenta>workoutViewController的属性</c>

00:45:16.650 --> 00:45:19.853
<c.magenta>为了传入我们创建的</c>
<c.magenta>workoutConfiguration</c>

00:45:20.587 --> 00:45:24.992
<c.magenta>最终 我们要展示用户界面</c>

00:45:26.360 --> 00:45:29.296
<c.magenta>让我们看看</c>
<c.magenta>workoutViewController的代码</c>

00:45:29.363 --> 00:45:31.932
<c.magenta>看看它在做什么</c>

00:45:34.201 --> 00:45:37.804
<c.magenta>在viewDidLoad方法中</c>
<c.magenta>我们看到我们做的第一件事</c>

00:45:37.871 --> 00:45:40.007
<c.magenta>是初始化手表连接</c>

00:45:40.073 --> 00:45:43.510
<c.magenta>只需要获取WatchConnectivity</c>
<c.magenta>这个会话</c>

00:45:43.577 --> 00:45:45.312
<c.magenta>并确保它已经初始化</c>

00:45:47.481 --> 00:45:51.752
<c.magenta>然后 我们要调用</c>
<c.magenta>startWatchApp函数</c>

00:45:54.221 --> 00:45:55.756
<c.magenta>startWatchApp函数...</c>

00:45:58.258 --> 00:46:01.595
<c.magenta>会首先检查我们是否有有效的</c>
<c.magenta>workoutConfiguration</c>

00:45:58.258 --> 00:46:01.595
<c.magenta>会首先检查我们是否有有效的</c>
<c.magenta>workoutConfiguration</c>

00:46:02.329 --> 00:46:05.032
<c.magenta>当我们有有效的</c>
<c.magenta>WatchConnectivity会话后</c>

00:46:05.966 --> 00:46:08.569
<c.magenta>这是和在幻灯片中一样的代码</c>

00:46:08.635 --> 00:46:11.371
<c.magenta>我们首先检查连接周期</c>

00:46:11.438 --> 00:46:14.508
<c.magenta>被激活 以及手表应用已经安装</c>

00:46:16.243 --> 00:46:18.212
<c.magenta>最终 我们要调用</c>

00:46:18.278 --> 00:46:21.148
<c.magenta>startWatchApp</c>
<c.magenta>使用workoutConfiguration</c>

00:46:22.182 --> 00:46:27.020
<c.magenta>很棒 现在我们要进入</c>
<c.magenta>WatchKit扩展</c>

00:46:27.087 --> 00:46:30.891
<c.magenta>来确保我们能获取到</c>
<c.magenta>workoutConfiguration对象</c>

00:46:31.258 --> 00:46:34.595
<c.magenta>所以 我们要进入锻炼——</c>

00:46:34.895 --> 00:46:37.965
<c.magenta>进入手表应用的</c>
<c.magenta>ExtensionDelegate</c>

00:46:40.400 --> 00:46:43.871
<c.magenta>并使用同样的代码来处理</c>
<c.magenta>workoutConfiguration</c>

00:46:44.638 --> 00:46:48.275
<c.magenta>当我们进行这一操作时</c>
<c.magenta>我们需要封装workoutConfiguration</c>

00:46:48.342 --> 00:46:53.747
<c.magenta>在一个上下文对象中 并传入</c>
<c.magenta>Workout InterfaceController</c>

00:46:53.814 --> 00:46:56.817
<c.magenta>这个用户界面与</c>

00:46:56.884 --> 00:47:00.821
<c.magenta>我们每次在手表上启动锻炼</c>
<c.magenta>时所展示的一样</c>

00:46:56.884 --> 00:47:00.821
<c.magenta>我们每次在手表上启动锻炼</c>
<c.magenta>时所展示的一样</c>

00:47:04.057 --> 00:47:09.830
<c.magenta>还有一件事</c>

00:47:12.332 --> 00:47:15.536
<c.magenta>如果我们进入</c>
<c.magenta>Workout InterfaceController</c>

00:47:16.403 --> 00:47:18.172
<c.magenta>每当一个应用</c>

00:47:18.972 --> 00:47:21.975
<c.magenta>让我们看看 每当</c>
<c.magenta>一个活动的锻炼周期状态改变时</c>

00:47:22.309 --> 00:47:25.646
<c.magenta>我们要调用这个</c>
<c.magenta>updateState函数</c>

00:47:25.913 --> 00:47:28.582
<c.magenta>这个函数我们已经实现了</c>

00:47:29.016 --> 00:47:33.287
<c.magenta>在我们的代码中</c>
<c.magenta>它只是获取周期的目前状态</c>

00:47:33.353 --> 00:47:35.789
<c.magenta>并通过WatchConnectivity发送</c>

00:47:35.856 --> 00:47:37.758
<c.magenta>给iPhone应用</c>

00:47:39.793 --> 00:47:44.031
<c.magenta>所以 现在让我们切换到</c>
<c.magenta>iPhone应用中的代码</c>

00:47:47.668 --> 00:47:48.635
<c.magenta>并看一看</c>

00:47:54.007 --> 00:47:54.908
<c.magenta>在这里</c>

00:47:54.975 --> 00:47:59.012
<c.magenta>我们要选择室外步行锻炼</c>

00:47:59.613 --> 00:48:03.217
<c.magenta>当我点击Start按钮时</c>
<c.magenta>你可以看到锻炼周期已经开始</c>

00:47:59.613 --> 00:48:03.217
<c.magenta>当我点击Start按钮时</c>
<c.magenta>你可以看到锻炼周期已经开始</c>

00:48:03.283 --> 00:48:05.052
<c.magenta>如果你回到手表模拟器</c>

00:48:05.118 --> 00:48:08.722
<c.magenta>你可以看到应用启动</c>

00:48:09.890 --> 00:48:12.059
<c.magenta>回到iPhone应用</c>
<c.magenta>你可以看到现在</c>

00:48:12.492 --> 00:48:14.361
<c.magenta>它处在运行状态</c>
<c.magenta>如果你不想这样</c>

00:48:14.428 --> 00:48:17.464
<c.magenta>我就可以将锻炼周期暂停</c>

00:48:18.365 --> 00:48:20.801
<c.magenta>你就可以看到另一端</c>
<c.magenta>的状态已经更新</c>

00:48:21.401 --> 00:48:23.237
<c.magenta>而后我们就可以将其终止了</c>

00:48:23.570 --> 00:48:28.141
<c.magenta>现在在另一端锻炼状态也已经改变</c>

00:48:37.818 --> 00:48:40.787
<c.magenta>回放刚才所说</c>
<c.magenta>我们展示了你如何可以</c>

00:48:42.489 --> 00:48:45.259
<c.magenta>在iPhone应用中写点代码</c>

00:48:45.325 --> 00:48:49.496
<c.magenta>来让你的手表进入锻炼状态</c>

00:48:49.563 --> 00:48:53.901
<c.magenta>任何时候用户都不需要</c>
<c.magenta>操作手表</c>

00:48:57.971 --> 00:49:00.407
<c.magenta>现在 让我们聊聊最基本的实践</c>

00:48:57.971 --> 00:49:00.407
<c.magenta>现在 让我们聊聊最基本的实践</c>

00:49:00.474 --> 00:49:05.479
<c.magenta>我们希望你能在开发锻炼应用时</c>
<c.magenta>能遵守以下几点</c>

00:49:09.016 --> 00:49:12.252
<c.magenta>第一就是我们想让你确保</c>

00:49:12.319 --> 00:49:16.223
<c.magenta>你的手表应用依然可以运行</c>

00:49:16.290 --> 00:49:21.895
<c.magenta>当你的手表与iPhone失联时</c>

00:49:24.031 --> 00:49:27.434
<c.magenta>比如 一个用户可能希望</c>

00:49:27.935 --> 00:49:30.204
<c.magenta>启动一次锻炼周期</c>

00:49:30.938 --> 00:49:34.575
<c.magenta>并离开住处 出去跑步</c>
<c.magenta>不带着iPhone</c>

00:49:35.676 --> 00:49:40.347
<c.magenta>在这种情况下</c>
<c.magenta>我们不希望你停止锻炼</c>

00:49:43.684 --> 00:49:50.290
<c.magenta>所以 你要做的第一件事就是</c>
<c.magenta>让你的锻炼周期处于活动状态</c>

00:49:50.958 --> 00:49:54.962
<c.magenta>及时你与iPhone失去连接</c>

00:49:58.398 --> 00:50:01.068
<c.magenta>在这种情况下的另一个</c>
<c.magenta>很有趣的点是</c>

00:49:58.398 --> 00:50:01.068
<c.magenta>在这种情况下的另一个</c>
<c.magenta>很有趣的点是</c>

00:50:01.134 --> 00:50:03.704
<c.magenta>你可以使用HealthKit路程</c>

00:50:03.770 --> 00:50:08.275
<c.magenta>因为HealthKit可以生成</c>
<c.magenta>路程样本</c>

00:50:08.342 --> 00:50:11.645
<c.magenta>即使没有GPS</c>

00:50:16.350 --> 00:50:18.752
<c.magenta>还有 我们说过</c>

00:50:20.487 --> 00:50:24.591
<c.magenta>你的用户可以开始健身</c>

00:50:24.658 --> 00:50:28.128
<c.magenta>从他们的iPhone或</c>
<c.magenta>Apple Watch</c>

00:50:29.496 --> 00:50:32.766
<c.magenta>我建议你让用户来选择</c>

00:50:33.166 --> 00:50:36.336
<c.magenta>到底是想从哪个设备开始锻炼</c>

00:50:41.074 --> 00:50:46.613
<c.magenta>还有一些其他建议</c>
<c.magenta>包括展示历史锻炼</c>

00:50:48.048 --> 00:50:51.385
<c.magenta>如果你这么做</c>
<c.magenta>展示所有来源的锻炼</c>

00:50:51.451 --> 00:50:53.487
<c.magenta>不但会帮助你自己的应用</c>

00:50:54.454 --> 00:50:57.357
<c.magenta>我们还想让你展示</c>

00:50:57.424 --> 00:50:59.393
<c.magenta>其他应用生成的锻炼</c>

00:51:02.462 --> 00:51:07.868
<c.magenta>如果你这么做</c>
<c.magenta>不要忘了观察被删除的对象</c>

00:51:08.836 --> 00:51:11.738
<c.magenta>不要展示一些锻炼</c>

00:51:11.805 --> 00:51:14.241
<c.magenta>而它们已经从HealthKit</c>
<c.magenta>数据库中移除</c>

00:51:18.345 --> 00:51:22.516
<c.magenta>所以 总结今天的展示</c>
<c.magenta>我们想让你学到三件事</c>

00:51:22.583 --> 00:51:24.685
<c.magenta>从今天的展示中</c>

00:51:25.953 --> 00:51:28.589
<c.magenta>第一 我们学习了后台运行</c>

00:51:28.655 --> 00:51:33.160
<c.magenta>这是一个很好的方法</c>
<c.magenta>来让你的应用</c>

00:51:33.460 --> 00:51:35.162
<c.magenta>不停地更新</c>

00:51:35.629 --> 00:51:40.801
<c.magenta>还要让你的用户界面有反馈性</c>

00:51:44.505 --> 00:51:47.541
<c.magenta>第二 你学到了你可以贡献</c>

00:51:47.608 --> 00:51:52.012
<c.magenta>到活动环</c>
<c.magenta>通过向锻炼添加样本</c>

00:51:52.913 --> 00:51:57.117
<c.magenta>不论是在手表还是</c>
<c.magenta>在iPhone应用上</c>

00:52:00.120 --> 00:52:04.625
<c.magenta>最终 第三点</c>
<c.magenta>我们学到了你如何可以开始锻炼</c>

00:52:04.691 --> 00:52:08.161
<c.magenta>从手表或是iPhone中</c>

00:52:10.264 --> 00:52:14.268
<c.magenta>所以我们希望大家可以</c>
<c.magenta>回到家或是办公室</c>

00:52:14.735 --> 00:52:18.205
<c.magenta>看看你的代码</c>
<c.magenta>并应用上今天所学到的</c>

00:52:18.272 --> 00:52:21.375
<c.magenta>来实现你的应用中的很棒的功能</c>

00:52:23.610 --> 00:52:26.313
<c.magenta>如需更多信息</c>
<c.magenta>你可以访问这个网站</c>

00:52:26.380 --> 00:52:28.715
<c.magenta>你可以找到这次展示的视频</c>

00:52:30.651 --> 00:52:32.052
<c.magenta>我们还有其他关联的视频</c>

00:52:32.119 --> 00:52:35.289
<c.magenta>一个是HealthKit做的</c>
<c.magenta>另一个是Core Motion做的</c>

00:52:35.355 --> 00:52:37.691
<c.magenta>如果你错过这些展示</c>
<c.magenta>你可以上网观看</c>

00:52:38.125 --> 00:52:43.197
<c.magenta>还有些几年前的视频</c>
<c.magenta>也与今天的主题相关</c>

00:52:45.199 --> 00:52:46.400
<c.magenta>这就是今天的全部了</c>

00:52:46.733 --> 00:52:47.801
<c.magenta>感谢大家</c>

00:52:47.868 --> 00:52:49.036
<c.magenta>祝大家今天过得愉快</c>
