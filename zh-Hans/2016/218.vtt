WEBVTT

00:00:19.453 --> 00:00:24.892
<c.magenta>让Watch应用保持更新</c>

00:00:32.566 --> 00:00:33.400
<c.magenta>好的</c>

00:00:33.467 --> 00:00:37.337
<c.magenta>大家好 欢迎参加我们的演讲</c>
<c.magenta>“让Watch应用保持更新”</c>

00:00:37.771 --> 00:00:41.642
<c.magenta>我叫Eric Lanz 今天跟我</c>
<c.magenta>一起的还有Austen Green</c>

00:00:41.808 --> 00:00:44.545
<c.magenta>我们都是watchOS团队的工程师</c>

00:00:46.346 --> 00:00:49.349
<c.magenta>这是一个日历应用的截屏</c>

00:00:49.516 --> 00:00:52.619
<c.magenta>当你听到应用这个词时</c>
<c.magenta>你脑海中很可能会浮现这个画面</c>

00:00:53.554 --> 00:00:57.724
<c.magenta>但watchOS还有很多超出</c>
<c.magenta>标准应用之外的互动方式</c>

00:00:58.025 --> 00:01:01.428
<c.magenta>比如 你的用户认为通知</c>

00:00:58.025 --> 00:01:01.428
<c.magenta>比如 你的用户认为通知</c>

00:01:01.495 --> 00:01:03.463
<c.magenta>是你应用的一个重要部分</c>

00:01:04.464 --> 00:01:07.534
<c.magenta>如果你有complication</c>
<c.magenta>你的用户会认为</c>

00:01:07.601 --> 00:01:09.636
<c.magenta>那也是你应用的一个重要部分</c>

00:01:10.971 --> 00:01:14.808
<c.magenta>在watchOS 3中</c>
<c.magenta>我们引入了一个新的应用dock</c>

00:01:15.175 --> 00:01:17.611
<c.magenta>这个功能允许用户添加多达十个</c>

00:01:17.678 --> 00:01:21.348
<c.magenta>应用到一个总是可见的dock中</c>

00:01:21.682 --> 00:01:23.116
<c.magenta>他们可以滑动浏览dock</c>

00:01:23.183 --> 00:01:25.719
<c.magenta>从dock中快速获得所有数据</c>

00:01:26.286 --> 00:01:28.755
<c.magenta>这个现在已经成为</c>
<c.magenta>应用的一个部分了</c>

00:01:29.489 --> 00:01:31.959
<c.magenta>人们以很多不同的方式使用你应用的数据</c>

00:01:32.025 --> 00:01:34.828
<c.magenta>并且希望所有这些方式</c>

00:01:34.895 --> 00:01:37.664
<c.magenta>都能一直同步和更新</c>

00:01:38.165 --> 00:01:41.535
<c.magenta>听起来像是个不可能的任务</c>
<c.magenta>但不要担心</c>

00:01:41.602 --> 00:01:42.569
<c.magenta>我们可以帮你们实现</c>

00:01:44.438 --> 00:01:46.874
<c.magenta>今天 我们要讲五个话题</c>

00:01:46.940 --> 00:01:50.911
<c.magenta>第一 这个API的概述以及</c>
<c.magenta>它在watchOS上的使用</c>

00:01:51.411 --> 00:01:55.315
<c.magenta>第二 用真实代码</c>
<c.magenta>演示一个示例应用</c>

00:01:55.983 --> 00:01:57.918
<c.magenta>第三 Austen将上台</c>

00:01:57.985 --> 00:02:00.888
<c.magenta>演示预约在后台是如何运行的</c>

00:01:57.985 --> 00:02:00.888
<c.magenta>演示预约在后台是如何运行的</c>

00:02:01.421 --> 00:02:03.590
<c.magenta>第四 我们将分享一些最佳范例</c>

00:02:03.657 --> 00:02:06.460
<c.magenta>把这个API应用到你自己的应用中</c>

00:02:06.894 --> 00:02:09.863
<c.magenta>第五 我们将演示一个案例分析</c>

00:02:09.930 --> 00:02:13.433
<c.magenta>阐述我们是如何把这个API</c>
<c.magenta>应用到我们自己的股票应用中的</c>

00:02:15.669 --> 00:02:19.573
<c.magenta>首先 我们要思考的是我们</c>
<c.magenta>如何使用手机和表</c>

00:02:19.640 --> 00:02:21.341
<c.magenta>每天以不同的方式</c>

00:02:22.876 --> 00:02:26.180
<c.magenta>早上 你排队买咖啡</c>
<c.magenta>开始新的一天</c>

00:02:26.246 --> 00:02:28.849
<c.magenta>你可以在手机上看几分钟新闻</c>

00:02:29.483 --> 00:02:31.585
<c.magenta>离开商店前 查一下天气情况</c>

00:02:31.652 --> 00:02:35.055
<c.magenta>用表盘上的complication</c>
<c.magenta>这是个两秒钟任务</c>

00:02:36.456 --> 00:02:39.393
<c.magenta>午饭时 再用地图找一个不错的餐厅</c>

00:02:39.459 --> 00:02:42.462
<c.magenta>几分钟后 你选好餐厅 收起电话</c>

00:02:43.530 --> 00:02:46.033
<c.magenta>在去餐厅的路上</c>
<c.magenta>你收到一条通知</c>

00:02:46.099 --> 00:02:48.302
<c.magenta>你快速地瞥了一眼手腕</c>
<c.magenta>你知道你的朋友们</c>

00:02:48.368 --> 00:02:51.505
<c.magenta>会晚几分钟到</c>
<c.magenta>这是另一个两秒钟任务</c>

00:02:53.307 --> 00:02:57.144
<c.magenta>在今天结束的时候 你再次使用</c>
<c.magenta>地图规划一下路线 你可能会改道</c>

00:02:58.612 --> 00:03:01.582
<c.magenta>你收到一条iMessage</c>
<c.magenta>询问你今晚何时到家</c>

00:02:58.612 --> 00:03:01.582
<c.magenta>你收到一条iMessage</c>
<c.magenta>询问你今晚何时到家</c>

00:03:02.115 --> 00:03:05.452
<c.magenta>你使用watchOS 3的</c>
<c.magenta>快速回复功能回信息</c>

00:03:05.519 --> 00:03:08.522
<c.magenta>“在路上” 又一个两秒钟任务</c>

00:03:10.057 --> 00:03:12.960
<c.magenta>几乎不可能在几秒钟之内</c>

00:03:13.026 --> 00:03:15.696
<c.magenta>把用户即将传给我们的数据准备好</c>

00:03:15.762 --> 00:03:16.897
<c.magenta>我们需要更长的时间</c>

00:03:17.297 --> 00:03:19.399
<c.magenta>在后台进行刷新</c>

00:03:19.900 --> 00:03:23.203
<c.magenta>你可以通过这个强大的</c>
<c.magenta>新API预约运行时间</c>

00:03:23.270 --> 00:03:26.507
<c.magenta>这样 在用户需要这些数据之前</c>
<c.magenta>数据能提前准备好</c>

00:03:30.511 --> 00:03:34.314
<c.magenta>要了解这个新API的功能</c>
<c.magenta>让我们仔细看一下</c>

00:03:34.381 --> 00:03:36.416
<c.magenta>在watchOS上查询天气情况</c>

00:03:36.884 --> 00:03:40.687
<c.magenta>这里 我们看到查询天气</c>
<c.magenta>complication的前台活动</c>

00:03:41.221 --> 00:03:44.057
<c.magenta>在查询发生之前</c>
<c.magenta>我们就要准备好数据</c>

00:03:44.992 --> 00:03:49.129
<c.magenta>让我们用这个API来预约查询</c>
<c.magenta>发生之前的某个时间来更新UI</c>

00:03:49.830 --> 00:03:52.366
<c.magenta>但是 没有数据该如何更新UI呢</c>

00:03:52.766 --> 00:03:56.203
<c.magenta>我们需要更多时间从服务器上</c>
<c.magenta>获取最新的天气数据</c>

00:03:56.270 --> 00:03:57.838
<c.magenta>为此 我们要计划一个任务</c>

00:03:58.572 --> 00:04:01.308
<c.magenta>但是 我们要怎么着手</c>
<c.magenta>处理这一系列的事件呢？</c>

00:03:58.572 --> 00:04:01.308
<c.magenta>但是 我们要怎么着手</c>
<c.magenta>处理这一系列的事件呢？</c>

00:04:01.675 --> 00:04:06.046
<c.magenta>我们需要一种方式</c>
<c.magenta>使系统在后台唤醒我们的应用</c>

00:04:07.714 --> 00:04:11.818
<c.magenta>在watchOS上 系统通过</c>
<c.magenta>给应用分配任务唤醒应用</c>

00:04:12.386 --> 00:04:15.055
<c.magenta>系统所能分配的任务有限</c>

00:04:15.122 --> 00:04:17.357
<c.magenta>所以你要充分利用</c>
<c.magenta>你得到的每一个任务</c>

00:04:18.625 --> 00:04:20.928
<c.magenta>当系统要唤醒你的应用时</c>

00:04:20.994 --> 00:04:23.830
<c.magenta>它会交付一个或几个任务对象</c>

00:04:24.198 --> 00:04:25.766
<c.magenta>请一定要守住这个任务</c>

00:04:25.832 --> 00:04:27.901
<c.magenta>直到完成数据处理</c>

00:04:29.169 --> 00:04:30.604
<c.magenta>系统 交付任务</c>

00:04:30.671 --> 00:04:33.607
<c.magenta>通过调用已处理的</c>
<c.magenta>新后台任务方法</c>

00:04:33.674 --> 00:04:35.509
<c.magenta>在WK扩展委托上</c>

00:04:36.176 --> 00:04:38.712
<c.magenta>稍后我们将演示</c>
<c.magenta>这个方法的一个示例</c>

00:04:40.147 --> 00:04:41.882
<c.magenta>当你完成后台工作后</c>

00:04:41.949 --> 00:04:44.818
<c.magenta>完成任务并把任务返回给系统</c>

00:04:44.885 --> 00:04:46.553
<c.magenta>这就是基本流程</c>

00:04:46.620 --> 00:04:49.756
<c.magenta>你可以通过这个流程</c>
<c.magenta>在watchOS上获得后台运行时间</c>

00:04:51.725 --> 00:04:54.361
<c.magenta>现在 我们要从一个更高的层次</c>
<c.magenta>来了解任务系统</c>

00:04:54.428 --> 00:04:57.130
<c.magenta>让我们再深入地看一下</c>
<c.magenta>具体的任务类型</c>

00:04:57.197 --> 00:04:59.066
<c.magenta>系统可以创建的</c>

00:05:00.100 --> 00:05:02.402
<c.magenta>首先 这是个应用任务</c>

00:05:02.803 --> 00:05:05.806
<c.magenta>这是个通用的运行时间任务</c>
<c.magenta>你可以预约</c>

00:05:05.873 --> 00:05:08.442
<c.magenta>在将来某一个日期唤醒应用</c>

00:05:10.043 --> 00:05:14.214
<c.magenta>在应用任务的运行时间内</c>
<c.magenta>你可以进行任何形式的本地处理</c>

00:05:14.648 --> 00:05:17.217
<c.magenta>你可能想</c>
<c.magenta>更新complication时间线</c>

00:05:17.284 --> 00:05:20.320
<c.magenta>或用URLSession</c>
<c.magenta>从服务器上下载数据</c>

00:05:21.355 --> 00:05:23.757
<c.magenta>URLSession任务是如何得知</c>

00:05:23.824 --> 00:05:26.760
<c.magenta>数据已下载完成并等待处理</c>

00:05:27.794 --> 00:05:31.398
<c.magenta>由于watchOS是个共享的</c>
<c.magenta>生态系统 没有任何意义</c>

00:05:31.465 --> 00:05:34.468
<c.magenta>在数据下载时使应用保持运行</c>

00:05:34.968 --> 00:05:37.371
<c.magenta>最好是让应用休眠</c>

00:05:37.437 --> 00:05:39.506
<c.magenta>那么就让系统替我们实现吧</c>

00:05:41.008 --> 00:05:44.478
<c.magenta>快照是watchOS上的一个</c>
<c.magenta>非常重要的部分</c>

00:05:45.045 --> 00:05:46.613
<c.magenta>它们既是你的启动画面</c>

00:05:47.114 --> 00:05:49.316
<c.magenta>又是在dock中运行时的预览画面</c>

00:05:50.050 --> 00:05:52.986
<c.magenta>如果用户停留在你的应用上</c>
<c.magenta>你的应用将再次苏醒并运行</c>

00:05:53.053 --> 00:05:56.823
<c.magenta>关键是你的快照要持续更新</c>

00:05:58.692 --> 00:06:02.196
<c.magenta>快照任务是如何</c>
<c.magenta>获得在后台准备UI的运行时间</c>

00:05:58.692 --> 00:06:02.196
<c.magenta>快照任务是如何</c>
<c.magenta>获得在后台准备UI的运行时间</c>

00:06:02.262 --> 00:06:05.098
<c.magenta>并获取新快照</c>

00:06:08.368 --> 00:06:09.837
<c.magenta>当你完成这个任务后</c>

00:06:09.903 --> 00:06:12.606
<c.magenta>系统会自动给UI创建快照</c>

00:06:13.140 --> 00:06:16.810
<c.magenta>请记住 完成数据处理后</c>
<c.magenta>一定要预约一个任务</c>

00:06:16.877 --> 00:06:19.346
<c.magenta>否则用户就看不到</c>
<c.magenta>你刚刚所做的工作</c>

00:06:20.614 --> 00:06:23.417
<c.magenta>当通知到达时 用户会看到通知</c>

00:06:23.483 --> 00:06:26.854
<c.magenta>然后他们会期待</c>
<c.magenta>你的complication和快照</c>

00:06:26.920 --> 00:06:28.922
<c.magenta>更新并显示最新数据</c>

00:06:29.523 --> 00:06:33.627
<c.magenta>用户喜欢那些感觉像是OS</c>
<c.magenta>密不可分的一部分一样的应用</c>

00:06:33.694 --> 00:06:36.396
<c.magenta>并且他们把那些应用</c>
<c.magenta>放进dock中的可能性更大</c>

00:06:38.599 --> 00:06:42.669
<c.magenta>如果用户有一个小时以上</c>
<c.magenta>不跟你的应用进行互动</c>

00:06:42.736 --> 00:06:44.972
<c.magenta>系统就会给你一个机会</c>

00:06:45.038 --> 00:06:46.640
<c.magenta>来修复你的缺省状态</c>

00:06:47.841 --> 00:06:50.511
<c.magenta>缺省状态对于不同的应用来说</c>
<c.magenta>含义不同</c>

00:06:50.577 --> 00:06:53.313
<c.magenta>有些应用没有缺省状态的概念</c>

00:06:56.216 --> 00:07:00.687
<c.magenta>在watchOS 3上设计精美快照</c>
<c.magenta>是个很大、很重要的话题</c>

00:06:56.216 --> 00:07:00.687
<c.magenta>在watchOS 3上设计精美快照</c>
<c.magenta>是个很大、很重要的话题</c>

00:07:01.021 --> 00:07:03.423
<c.magenta>我们建议你参加一些</c>
<c.magenta>其他相关的演讲</c>

00:07:03.490 --> 00:07:07.294
<c.magenta>了解如何创建优秀</c>
<c.magenta>快照的一些设计建议</c>

00:07:09.263 --> 00:07:12.099
<c.magenta>最后一个任务类型是表连通性</c>

00:07:12.633 --> 00:07:16.036
<c.magenta>在watchOS 3上</c>
<c.magenta>我们整合了表连通性</c>

00:07:16.103 --> 00:07:18.305
<c.magenta>和后台刷新API</c>

00:07:19.072 --> 00:07:22.442
<c.magenta>意思是 你现在可以使用</c>
<c.magenta>表连通性消息</c>

00:07:22.509 --> 00:07:26.313
<c.magenta>把数据更新到应用中</c>
<c.magenta>当应用在后台运行时</c>

00:07:28.582 --> 00:07:31.885
<c.magenta>complication推送</c>
<c.magenta>应用情境、发送文件</c>

00:07:31.952 --> 00:07:35.522
<c.magenta>或发送用户信息</c>
<c.magenta>都将在后台唤醒应用</c>

00:07:36.123 --> 00:07:37.858
<c.magenta>我们希望这个版本会带给</c>

00:07:37.925 --> 00:07:41.161
<c.magenta>我们的用户更丰富的体验</c>

00:07:42.663 --> 00:07:46.133
<c.magenta>当应用通过表连通性任务</c>
<c.magenta>被唤醒时</c>

00:07:46.934 --> 00:07:49.303
<c.magenta>使用标准API来获取数据</c>

00:07:49.736 --> 00:07:52.005
<c.magenta>首先 确保会话是激活的</c>

00:07:53.373 --> 00:07:54.908
<c.magenta>一旦会话被重新激活</c>

00:07:54.975 --> 00:07:58.378
<c.magenta>就开始监控</c>
<c.magenta>新的hasContentPending属性</c>

00:07:59.046 --> 00:08:02.449
<c.magenta>只要这个属性为真</c>
<c.magenta>就表示仍有数据要处理</c>

00:07:59.046 --> 00:08:02.449
<c.magenta>只要这个属性为真</c>
<c.magenta>就表示仍有数据要处理</c>

00:08:02.950 --> 00:08:04.384
<c.magenta>确保要一直守住这个任务</c>

00:08:04.451 --> 00:08:06.553
<c.magenta>直到完成数据处理</c>

00:08:07.754 --> 00:08:10.290
<c.magenta>完成时 你有责任将任务</c>

00:08:10.357 --> 00:08:12.292
<c.magenta>返回给系统</c>

00:08:12.860 --> 00:08:15.963
<c.magenta>如果你不这样做</c>
<c.magenta>你将不会再获得后台运行时间</c>

00:08:16.029 --> 00:08:17.998
<c.magenta>并且我们会给你一个崩溃报告</c>

00:08:19.099 --> 00:08:21.902
<c.magenta>Austen稍后会提供详细信息</c>

00:08:21.969 --> 00:08:23.837
<c.magenta>是关于运行时间警告的信息</c>

00:08:25.405 --> 00:08:29.977
<c.magenta>让我们快速回顾一下</c>
<c.magenta>新后台刷新API的使用流程</c>

00:08:30.344 --> 00:08:33.013
<c.magenta>首先 预约一个任务</c>

00:08:33.847 --> 00:08:36.015
<c.magenta>然后 接收系统任务</c>

00:08:36.917 --> 00:08:38.619
<c.magenta>现在你就可以进行后台工作了</c>

00:08:38.885 --> 00:08:42.121
<c.magenta>一定要守住这个任务</c>
<c.magenta>直到完成后台工作</c>

00:08:42.890 --> 00:08:45.526
<c.magenta>你可以利用这个运行时间</c>
<c.magenta>预约后续工作</c>

00:08:45.592 --> 00:08:48.395
<c.magenta>比如使用URLSession</c>
<c.magenta>从服务器获取数据</c>

00:08:49.863 --> 00:08:54.134
<c.magenta>结束后 完成任务</c>
<c.magenta>并把任务返回给系统</c>

00:08:56.803 --> 00:09:01.775
<c.magenta>在继续演讲之前 我想强调一件</c>
<c.magenta>非常重要的事儿 就是做一个好公民</c>

00:08:56.803 --> 00:09:01.775
<c.magenta>在继续演讲之前 我想强调一件</c>
<c.magenta>非常重要的事儿 就是做一个好公民</c>

00:09:03.243 --> 00:09:07.147
<c.magenta>watchOS是一个共享的生态系统</c>
<c.magenta>有许多应用</c>

00:09:07.214 --> 00:09:10.984
<c.magenta>和系统进程争夺CPU时间</c>
<c.magenta>和电池寿命</c>

00:09:11.451 --> 00:09:15.022
<c.magenta>在这个生态系统中</c>
<c.magenta>我们作为开发人员有责任</c>

00:09:15.088 --> 00:09:18.058
<c.magenta>尽最大努力有效地使用这些资源</c>

00:09:18.825 --> 00:09:21.628
<c.magenta>假如用户在下午3点</c>
<c.magenta>启动了你的应用</c>

00:09:22.563 --> 00:09:25.899
<c.magenta>你想确保在一个小时内有机会</c>
<c.magenta>跟服务器进行核对</c>

00:09:25.966 --> 00:09:27.901
<c.magenta>那你就预约一个下午4点的任务</c>

00:09:28.735 --> 00:09:32.072
<c.magenta>嗯 如果用户在下午3点50分</c>
<c.magenta>启动了应用会怎么样呢？</c>

00:09:33.073 --> 00:09:35.909
<c.magenta>我们可以立即更新数据</c>

00:09:35.976 --> 00:09:39.046
<c.magenta>四点钟当任务运行时再次更新数据 但这对于</c>
<c.magenta>我来说并不是最理想的方案</c>

00:09:40.280 --> 00:09:43.450
<c.magenta>最好的方法是在3点50分</c>
<c.magenta>利用运行时间</c>

00:09:43.517 --> 00:09:47.254
<c.magenta>重新预约一个小时后的后台任务</c>
<c.magenta>也就是4点50分的任务</c>

00:09:48.088 --> 00:09:49.256
<c.magenta>每个应用都不一样</c>

00:09:49.323 --> 00:09:53.260
<c.magenta>但我们希望你们能找到一个</c>
<c.magenta>这样的模式 使资源最大化</c>

00:09:54.995 --> 00:09:56.897
<c.magenta>好了 让我们看点儿代码吧</c>

00:09:57.865 --> 00:09:59.466
<c.magenta>为了帮助设计示例代码</c>

00:09:59.533 --> 00:10:02.636
<c.magenta>我们将按照时间线</c>
<c.magenta>逐步演示一个示例应用</c>

00:09:59.533 --> 00:10:02.636
<c.magenta>我们将按照时间线</c>
<c.magenta>逐步演示一个示例应用</c>

00:10:02.703 --> 00:10:04.505
<c.magenta>并展示如何写代码</c>

00:10:04.571 --> 00:10:07.274
<c.magenta>来响应所有生命周期事件</c>

00:10:07.808 --> 00:10:09.610
<c.magenta>让我们看一个足球应用</c>

00:10:09.810 --> 00:10:13.881
<c.magenta>假如今晚7点到9点</c>
<c.magenta>有一场重要比赛</c>

00:10:14.882 --> 00:10:17.284
<c.magenta>我们知道用户最钟爱的球队</c>
<c.magenta>会参加比赛</c>

00:10:17.351 --> 00:10:20.187
<c.magenta>并且我们认为他们一定</c>
<c.magenta>会频繁地查看比分</c>

00:10:20.587 --> 00:10:24.358
<c.magenta>让我们给后台活动选定一个</c>
<c.magenta>三十分钟的节奏</c>

00:10:25.626 --> 00:10:29.463
<c.magenta>后台刷新API只能允许</c>
<c.magenta>每种类型有一个任务</c>

00:10:29.530 --> 00:10:31.765
<c.magenta>是执行状态 在任何特定时间内</c>

00:10:32.299 --> 00:10:36.103
<c.magenta>一开始 我们预约第一个任务的</c>
<c.magenta>时间是7点半</c>

00:10:37.171 --> 00:10:41.341
<c.magenta>在7点半 我们将使用所得到的运行</c>
<c.magenta>时间预约下一个任务 时间为8点</c>

00:10:42.142 --> 00:10:46.480
<c.magenta>8点时 我们将再次使用所得到的运行</c>
<c.magenta>时间预约下一个事件 时间是8点半</c>

00:10:46.914 --> 00:10:50.284
<c.magenta>一直确保预约未来任务非常重要</c>

00:10:50.350 --> 00:10:53.287
<c.magenta>否则你就不知道什么时候</c>
<c.magenta>才能有机会再运行</c>

00:10:55.355 --> 00:10:59.793
<c.magenta>在此 我们看到了在watchOS上</c>
<c.magenta>预约应用任务的代码</c>

00:11:00.227 --> 00:11:03.397
<c.magenta>首先 让我们把任务时间</c>
<c.magenta>设定为三十分钟以后</c>

00:11:04.565 --> 00:11:08.936
<c.magenta>使用userInfo对象来存储某些</c>
<c.magenta>关于为何做出请求的数据</c>

00:11:09.369 --> 00:11:12.706
<c.magenta>在这个例子中</c>
<c.magenta>我存了发起请求的日期</c>

00:11:12.773 --> 00:11:16.810
<c.magenta>和当任务返回时</c>
<c.magenta>能稍后查看原因的一个字符串</c>

00:11:17.377 --> 00:11:18.745
<c.magenta>这个属性是可选的</c>

00:11:18.812 --> 00:11:22.082
<c.magenta>可以在这里存储任何</c>
<c.magenta>安全编码的兼容数据</c>

00:11:23.951 --> 00:11:26.587
<c.magenta>这个完成日志是获知</c>

00:11:26.653 --> 00:11:30.324
<c.magenta>系统是否已经成功预约任务的</c>

00:11:31.058 --> 00:11:33.093
<c.magenta>请注意 正因为这里没有报错</c>

00:11:33.160 --> 00:11:36.663
<c.magenta>但这也并不意味着任务</c>
<c.magenta>会按所请求的时间运行</c>

00:11:37.598 --> 00:11:41.902
<c.magenta>Austen将为大家解释何时及为何</c>
<c.magenta>系统触发指定任务</c>

00:11:43.837 --> 00:11:47.007
<c.magenta>预约应用任务后</c>
<c.magenta>让我们把重点放在时间线上</c>

00:11:47.074 --> 00:11:50.811
<c.magenta>看这个只有五分钟的窗口</c>
<c.magenta>预约任务将在这个窗口中运行</c>

00:11:52.546 --> 00:11:53.847
<c.magenta>当系统唤醒应用时</c>

00:11:53.914 --> 00:11:56.817
<c.magenta>我们优先考虑的是</c>
<c.magenta>从服务器获取最新比分数据</c>

00:11:57.084 --> 00:11:58.452
<c.magenta>让我们看一下代码</c>

00:11:58.519 --> 00:12:01.588
<c.magenta>在watchOS上</c>
<c.magenta>开始后台URLSession的</c>

00:11:58.519 --> 00:12:01.588
<c.magenta>在watchOS上</c>
<c.magenta>开始后台URLSession的</c>

00:12:06.193 --> 00:12:09.329
<c.magenta>首先 创建一个</c>
<c.magenta>URLSession配置对象</c>

00:12:09.696 --> 00:12:11.765
<c.magenta>重点是把这个对象配置为</c>

00:12:11.832 --> 00:12:14.801
<c.magenta>后台会话 因为我们要在后台运行</c>

00:12:16.236 --> 00:12:20.007
<c.magenta>同时设置一个标识符</c>
<c.magenta>稍后用来获取数据</c>

00:12:22.075 --> 00:12:25.546
<c.magenta>接下来 用这个配置</c>
<c.magenta>创建一个URL会话</c>

00:12:26.847 --> 00:12:31.251
<c.magenta>我们要求URLSession提供</c>
<c.magenta>一个或多个下载任务对象</c>

00:12:31.919 --> 00:12:35.589
<c.magenta>可以给会话关联多个下载任务</c>
<c.magenta>想关联多少就关联多少</c>

00:12:35.889 --> 00:12:40.661
<c.magenta>请谨记 系统只能在完成所有</c>
<c.magenta>关联任务后才会唤醒应用</c>

00:12:42.863 --> 00:12:45.966
<c.magenta>要开始下载数据</c>
<c.magenta>请不要忘记调用重新启动</c>

00:12:48.602 --> 00:12:51.672
<c.magenta>返回时间线</c>
<c.magenta>我们在过程中下载了URL</c>

00:12:51.738 --> 00:12:55.375
<c.magenta>所以完成任务</c>
<c.magenta>和使应用休眠是很安全的</c>

00:12:56.076 --> 00:12:58.445
<c.magenta>系统将继续下载数据</c>

00:12:58.512 --> 00:12:59.813
<c.magenta>当我们被挂起时</c>

00:13:01.248 --> 00:13:04.351
<c.magenta>当数据下载完成后</c>
<c.magenta>URLSession会创建一个任务</c>

00:13:04.418 --> 00:13:06.253
<c.magenta>并再次唤醒应用</c>

00:13:06.720 --> 00:13:09.489
<c.magenta>但是 到底什么是唤醒应用呢？</c>

00:13:10.791 --> 00:13:14.061
<c.magenta>具体地说 唤醒应用的意思就是</c>

00:13:14.127 --> 00:13:18.932
<c.magenta>在WKExtensionDelegate上调用</c>
<c.magenta>新的处理后台任务方法</c>

00:13:20.400 --> 00:13:21.635
<c.magenta>除了这个调用</c>

00:13:21.702 --> 00:13:25.239
<c.magenta>我们还将收到是否在可见视图</c>
<c.magenta>控制器上激活调用</c>

00:13:26.673 --> 00:13:30.344
<c.magenta>系统合并任务</c>
<c.magenta>并提交给我们一个任务集</c>

00:13:30.777 --> 00:13:33.247
<c.magenta>我们需要处理</c>
<c.magenta>这个任务集中的所有任务</c>

00:13:33.313 --> 00:13:35.349
<c.magenta>让我们开始依次处理吧</c>

00:13:36.283 --> 00:13:39.253
<c.magenta>对于每个任务来说</c>
<c.magenta>我们可以使用一个内联任务</c>

00:13:39.319 --> 00:13:41.622
<c.magenta>来得到我们想得到的类型的对象</c>

00:13:42.823 --> 00:13:45.425
<c.magenta>在这个例子中 要处理一个</c>
<c.magenta>URLSession任务</c>

00:13:45.492 --> 00:13:50.430
<c.magenta>那么我们需要使用</c>
<c.magenta>和任务关联的标识符再次加入会话</c>

00:13:52.232 --> 00:13:55.202
<c.magenta>URLSession</c>
<c.magenta>是一个高度异步API</c>

00:13:55.269 --> 00:13:57.571
<c.magenta>我们一定要注意守住任务</c>

00:13:57.638 --> 00:13:59.773
<c.magenta>直到完成数据处理</c>

00:14:00.474 --> 00:14:03.076
<c.magenta>我们建议你把任务存在一个集合中</c>

00:14:03.143 --> 00:14:04.945
<c.magenta>完成后再遣散集合</c>

00:14:05.012 --> 00:14:08.315
<c.magenta>完成每个任务</c>
<c.magenta>并把它返回给系统</c>

00:14:10.517 --> 00:14:13.654
<c.magenta>一定要完成那些</c>
<c.magenta>未特别处理的任务类型</c>

00:14:14.188 --> 00:14:16.657
<c.magenta>请记住 系统的任务数量有限</c>

00:14:16.757 --> 00:14:18.525
<c.magenta>所以要完成你得到的每个任务</c>

00:14:20.327 --> 00:14:22.596
<c.magenta>我们已经得到了数据</c>
<c.magenta>让我们更新模型吧</c>

00:14:22.863 --> 00:14:26.099
<c.magenta>你可能会考虑</c>
<c.magenta>在这个时候一起更新UI</c>

00:14:26.166 --> 00:14:29.203
<c.magenta>但我们建议你充分利用</c>
<c.magenta>这个快照任务的运行时间</c>

00:14:29.269 --> 00:14:30.437
<c.magenta>进行数据处理这样的工作</c>

00:14:31.271 --> 00:14:33.574
<c.magenta>因此 在完成URL任务之前</c>

00:14:33.640 --> 00:14:35.576
<c.magenta>要先确保预约创建快照</c>

00:14:37.344 --> 00:14:40.514
<c.magenta>预约创建快照后再完成URL任务</c>
<c.magenta>就安全了</c>

00:14:40.581 --> 00:14:42.783
<c.magenta>并允许应用再次休眠</c>

00:14:44.351 --> 00:14:49.223
<c.magenta>很快 系统将通过我们刚预约的</c>
<c.magenta>快照任务再次唤醒应用</c>

00:14:49.957 --> 00:14:52.159
<c.magenta>现在是时候更新UI了</c>

00:14:52.226 --> 00:14:54.728
<c.magenta>并准备好创建新快照所需的东西</c>

00:14:56.597 --> 00:14:59.266
<c.magenta>快照有一个独特的完成处理器</c>

00:14:59.333 --> 00:15:01.435
<c.magenta>让我们来看看这个</c>
<c.magenta>完成处理器</c>

00:14:59.333 --> 00:15:01.435
<c.magenta>让我们来看看这个</c>
<c.magenta>完成处理器</c>

00:15:01.502 --> 00:15:03.136
<c.magenta>在watchOS上处理快照</c>

00:15:05.005 --> 00:15:08.709
<c.magenta>无论什么时候</c>
<c.magenta>每个应用都必须有一个快照</c>

00:15:09.142 --> 00:15:12.012
<c.magenta>这是因为快照既是启动画面</c>

00:15:12.346 --> 00:15:14.548
<c.magenta>又是在dock中运行时的预览画面</c>

00:15:15.415 --> 00:15:17.885
<c.magenta>这个规则的意思是当创建快照后</c>

00:15:18.619 --> 00:15:21.555
<c.magenta>我们要通知系统</c>
<c.magenta>这个快照的有效期</c>

00:15:22.356 --> 00:15:26.159
<c.magenta>要考虑数据及数据与用户</c>
<c.magenta>相关性的时间长度</c>

00:15:26.994 --> 00:15:29.663
<c.magenta>在这个例子中</c>
<c.magenta>我们在八点有一个预约事件</c>

00:15:29.730 --> 00:15:32.399
<c.magenta>让我们把有效时间设为三十分钟</c>

00:15:35.235 --> 00:15:37.704
<c.magenta>可以在用户信息中随意存储一些</c>
<c.magenta>这样的信息</c>

00:15:37.771 --> 00:15:39.473
<c.magenta>比如为何发起这次请求</c>

00:15:39.740 --> 00:15:43.043
<c.magenta>那个数据将为我们返回</c>
<c.magenta>下一个快照任务</c>

00:15:45.746 --> 00:15:48.882
<c.magenta>watchOS将给应用提供</c>
<c.magenta>的机会</c>

00:15:48.949 --> 00:15:52.452
<c.magenta>还原缺省状态 在休止一个小时后</c>

00:15:53.020 --> 00:15:55.522
<c.magenta>你可以告诉系统跳过那个事件</c>

00:15:55.589 --> 00:15:58.825
<c.magenta>通过把restoredDefaultState</c>
<c.magenta>属性的值设为真</c>

00:15:59.626 --> 00:16:03.197
<c.magenta>这样就会使系统了解</c>
<c.magenta>你已经是缺省状态了</c>

00:15:59.626 --> 00:16:03.197
<c.magenta>这样就会使系统了解</c>
<c.magenta>你已经是缺省状态了</c>

00:16:03.263 --> 00:16:05.098
<c.magenta>不需要额外任务了</c>

00:16:06.066 --> 00:16:08.502
<c.magenta>没有缺省状态概念的应用</c>

00:16:08.569 --> 00:16:11.405
<c.magenta>应该考虑一直把这个属性设为真</c>

00:16:13.106 --> 00:16:17.010
<c.magenta>完成快照任务后 系统将挂起应用</c>

00:16:17.444 --> 00:16:19.880
<c.magenta>然后自动抓取UI</c>

00:16:19.947 --> 00:16:21.682
<c.magenta>并用作新的启动画面</c>

00:16:22.349 --> 00:16:25.118
<c.magenta>这将不会唤醒你的应用</c>

00:16:27.554 --> 00:16:30.257
<c.magenta>我们通过 端对端示例实现</c>

00:16:30.324 --> 00:16:34.194
<c.magenta>常见后台刷新模式</c>
<c.magenta>和所关联代码</c>

00:16:34.862 --> 00:16:36.163
<c.magenta>提醒一下</c>

00:16:36.230 --> 00:16:39.099
<c.magenta>虽然我们看到时间线上是五分钟</c>

00:16:39.533 --> 00:16:43.070
<c.magenta>我们的应用总共</c>
<c.magenta>也只能活跃15秒</c>

00:16:44.037 --> 00:16:45.205
<c.magenta>通过任务链</c>

00:16:45.272 --> 00:16:48.675
<c.magenta>我们可以最大限度地</c>
<c.magenta>利用系统资源</c>

00:16:49.977 --> 00:16:53.580
<c.magenta>现在 你应该对这个新API</c>
<c.magenta>是什么有了更好的理解</c>

00:16:54.581 --> 00:16:56.183
<c.magenta>为什么要使用它</c>

00:16:56.250 --> 00:16:58.252
<c.magenta>以及怎么使用它</c>

00:16:59.720 --> 00:17:02.422
<c.magenta>接下来 让我们欢迎</c>
<c.magenta>Austen Green上台</c>

00:16:59.720 --> 00:17:02.422
<c.magenta>接下来 让我们欢迎</c>
<c.magenta>Austen Green上台</c>

00:17:02.489 --> 00:17:04.023
<c.magenta>给大家深入介绍</c>

00:17:04.090 --> 00:17:06.393
<c.magenta>预约是如何在后台运作的</c>

00:17:09.396 --> 00:17:10.430
<c.magenta>祝你好运</c>

00:17:13.834 --> 00:17:15.569
<c.magenta>大家好</c>
<c.magenta>我是Austen Green</c>

00:17:15.636 --> 00:17:17.104
<c.magenta>我是一名watchOS工程师</c>

00:17:17.337 --> 00:17:21.675
<c.magenta>今天上午 我要跟大家分享一些</c>
<c.magenta>的信息</c>

00:17:21.742 --> 00:17:24.243
<c.magenta>关于预约如何在后台运作</c>

00:17:24.645 --> 00:17:27.948
<c.magenta>我会提供一些</c>
<c.magenta>精挑细选的最佳范例</c>

00:17:28.015 --> 00:17:30.817
<c.magenta>我们在我们自己的应用中</c>
<c.magenta>使用后台刷新时</c>

00:17:31.151 --> 00:17:33.554
<c.magenta>最后 结束之前</c>
<c.magenta>还要做一个快速的案例分析</c>

00:17:33.620 --> 00:17:36.356
<c.magenta>是关于如何 应用后台刷新的</c>

00:17:36.423 --> 00:17:37.691
<c.magenta>在我们的股票应用中</c>

00:17:38.859 --> 00:17:39.860
<c.magenta>让我们开始吧</c>

00:17:42.763 --> 00:17:45.499
<c.magenta>我要讲的第一点是运行时间</c>

00:17:46.233 --> 00:17:49.069
<c.magenta>应用在前台</c>

00:17:50.037 --> 00:17:51.605
<c.magenta>一直是运行状态</c>

00:17:51.939 --> 00:17:55.175
<c.magenta>意思是会开始执行你的代码</c>

00:17:55.242 --> 00:17:59.146
<c.magenta>你可以进行像更新模型</c>
<c.magenta>和绘制UI这样的工作</c>

00:17:59.213 --> 00:18:02.082
<c.magenta>以及应用可能需要</c>
<c.magenta>进行的其他各种任务</c>

00:17:59.213 --> 00:18:02.082
<c.magenta>以及应用可能需要</c>
<c.magenta>进行的其他各种任务</c>

00:18:03.317 --> 00:18:05.886
<c.magenta>当你的应用进入后台时</c>

00:18:05.953 --> 00:18:08.655
<c.magenta>系统一般会挂起你的应用</c>

00:18:08.889 --> 00:18:12.526
<c.magenta>意思是 你的应用不再有机会</c>
<c.magenta>执行任何代码了</c>

00:18:13.927 --> 00:18:16.964
<c.magenta>有时候 当应用在后台时</c>

00:18:17.030 --> 00:18:20.734
<c.magenta>系统可能希望应用</c>
<c.magenta>能实施一项特定的任务</c>

00:18:20.801 --> 00:18:23.971
<c.magenta>此时系统将唤醒应用</c>

00:18:24.037 --> 00:18:27.541
<c.magenta>并要求应用实施</c>
<c.magenta>它想要应用实施的特定任务</c>

00:18:27.975 --> 00:18:29.276
<c.magenta>在watchOS 2中</c>

00:18:29.843 --> 00:18:32.713
<c.magenta>系统有许多方式来唤醒应用</c>

00:18:32.779 --> 00:18:36.316
<c.magenta>比如处理需要仔细看的通知</c>

00:18:37.017 --> 00:18:39.686
<c.magenta>或也许ClockKit会要求应用</c>

00:18:39.753 --> 00:18:41.154
<c.magenta>更新complication</c>

00:18:41.788 --> 00:18:44.191
<c.magenta>在watchOS 3中</c>
<c.magenta>我们增加了更多的方式</c>

00:18:44.258 --> 00:18:46.126
<c.magenta>使应用在后台运行</c>

00:18:50.063 --> 00:18:54.301
<c.magenta>系统要限制 时间</c>

00:18:54.368 --> 00:18:56.403
<c.magenta>在后台运行的</c>

00:18:58.071 --> 00:19:00.707
<c.magenta>时间的单位是秒</c>

00:18:58.071 --> 00:19:00.707
<c.magenta>时间的单位是秒</c>

00:19:01.041 --> 00:19:04.578
<c.magenta>系统会考虑你所使用的时间</c>

00:19:04.645 --> 00:19:06.980
<c.magenta>以及你所使用的CPU</c>

00:19:07.047 --> 00:19:10.050
<c.magenta>所以 尽快、</c>
<c.magenta>完成工作才能获得最大利益</c>

00:19:10.117 --> 00:19:11.852
<c.magenta>尽可能有效地</c>

00:19:13.053 --> 00:19:16.190
<c.magenta>在随后的种子中</c>
<c.magenta>如果你超出了限制</c>

00:19:16.323 --> 00:19:18.125
<c.magenta>系统将会扼杀你的应用</c>

00:19:18.525 --> 00:19:19.693
<c.magenta>你将得到一份崩溃报告</c>

00:19:19.760 --> 00:19:22.429
<c.magenta>从而了解是否超出CPU限制</c>

00:19:22.663 --> 00:19:26.733
<c.magenta>或时间限制</c>
<c.magenta>根据崩溃报告中的异常码</c>

00:19:28.435 --> 00:19:32.706
<c.magenta>我们意识到 不同的任务</c>
<c.magenta>可能有不同的需要</c>

00:19:32.840 --> 00:19:34.708
<c.magenta>所以ApplicationRefresh任务</c>

00:19:34.775 --> 00:19:38.612
<c.magenta>和URLSession任务</c>
<c.magenta>的时间限制要长</c>

00:19:38.946 --> 00:19:41.548
<c.magenta>比表连通性和快照任务</c>

00:19:52.359 --> 00:19:56.496
<c.magenta>那么在watchOS 2中</c>
<c.magenta>complication是</c>

00:19:56.563 --> 00:19:58.932
<c.magenta>应用在后台获得运行时间的主要方式</c>

00:19:59.967 --> 00:20:01.168
<c.magenta>watchOS 3中</c>

00:19:59.967 --> 00:20:01.168
<c.magenta>watchOS 3中</c>

00:20:01.235 --> 00:20:04.204
<c.magenta>我们要确保你继续每小时</c>
<c.magenta>进行多次更新</c>

00:20:04.271 --> 00:20:06.173
<c.magenta>若是带complication应用</c>

00:20:06.240 --> 00:20:08.709
<c.magenta>与在watchOS 2上一样</c>

00:20:09.510 --> 00:20:13.413
<c.magenta>然而 如果你提前向系统</c>
<c.magenta>请求运行时间</c>

00:20:13.480 --> 00:20:15.249
<c.magenta>更新complication数据</c>

00:20:15.549 --> 00:20:18.118
<c.magenta>你现在可请求通过</c>
<c.magenta>WKExtension进行更新了</c>

00:20:18.185 --> 00:20:19.987
<c.magenta>稍后我会讲一下如何实现</c>

00:20:20.988 --> 00:20:22.789
<c.magenta>另外 watchOS 3的新功能是</c>

00:20:22.856 --> 00:20:26.493
<c.magenta>我们确保有来自</c>
<c.magenta>父类iPhone的五十次push</c>

00:20:27.494 --> 00:20:29.229
<c.magenta>如果你使用表连通性的话</c>

00:20:29.530 --> 00:20:32.699
<c.magenta>利用这个信息可以很简单地</c>

00:20:32.766 --> 00:20:36.036
<c.magenta>确保提供很棒的</c>
<c.magenta>complication体验</c>

00:20:36.103 --> 00:20:38.105
<c.magenta>全天候为你的用户</c>

00:20:38.639 --> 00:20:40.107
<c.magenta>让我们来看一些代码</c>

00:20:41.975 --> 00:20:45.646
<c.magenta>假如你正运行一个iPhone应用</c>

00:20:46.046 --> 00:20:47.881
<c.magenta>并且你注意到模型发生了变更</c>

00:20:48.582 --> 00:20:50.884
<c.magenta>你可以查询WCSession</c>

00:20:50.951 --> 00:20:53.153
<c.magenta>remainingComplication</c>
<c.magenta>UserInfoTransfers</c>

00:20:53.220 --> 00:20:56.823
<c.magenta>来了解</c>
<c.magenta>你还剩多少高优先级的push</c>

00:20:56.890 --> 00:20:58.725
<c.magenta>今天剩下的时间</c>

00:20:59.793 --> 00:21:01.228
<c.magenta>你可以利用这个信息</c>

00:20:59.793 --> 00:21:01.228
<c.magenta>你可以利用这个信息</c>

00:21:01.295 --> 00:21:03.564
<c.magenta>打造complication体验</c>

00:21:03.630 --> 00:21:07.100
<c.magenta>决定何时是发送</c>
<c.magenta>complication数据的最佳时间</c>

00:21:08.035 --> 00:21:09.970
<c.magenta>比如说在默认情况下</c>

00:21:10.604 --> 00:21:12.105
<c.magenta>你有足够多的push</c>

00:21:12.673 --> 00:21:14.341
<c.magenta>那就立即发送数据</c>

00:21:14.408 --> 00:21:18.478
<c.magenta>用户几乎会立即看到最相关的数据</c>

00:21:19.479 --> 00:21:21.882
<c.magenta>假如你已经push了很多次</c>

00:21:21.949 --> 00:21:24.551
<c.magenta>并且运行有点儿慢 传输有点儿慢</c>

00:21:24.751 --> 00:21:30.090
<c.magenta>你可能会考虑节制发送给表的数据</c>
<c.magenta>从而确保</c>

00:21:30.157 --> 00:21:34.061
<c.magenta>你的用户得到</c>
<c.magenta>complication的数据更新</c>

00:21:34.127 --> 00:21:35.596
<c.magenta>在当天剩余的时间内</c>

00:21:36.864 --> 00:21:40.801
<c.magenta>最后 如果你没有任何</c>
<c.magenta>高优先级的传输了</c>

00:21:40.868 --> 00:21:43.971
<c.magenta>仍然可以尝试和发送数据 但是</c>

00:21:44.037 --> 00:21:46.406
<c.magenta>数据会以较低的优先级发送</c>

00:21:49.076 --> 00:21:50.711
<c.magenta>接下来 我要讲</c>

00:21:50.777 --> 00:21:53.247
<c.magenta>一些CLKComplication</c>
<c.magenta>DataSource方法</c>

00:21:53.313 --> 00:21:56.383
<c.magenta>我们想要搬到WatchKit中去的</c>

00:21:57.117 --> 00:22:00.787
<c.magenta>如果你</c>
<c.magenta>提前向系统请求运行时间</c>

00:21:57.117 --> 00:22:00.787
<c.magenta>如果你</c>
<c.magenta>提前向系统请求运行时间</c>

00:22:00.854 --> 00:22:03.056
<c.magenta>通过getNextRequestedUpdateDate</c>

00:22:05.926 --> 00:22:10.564
<c.magenta>你应该希望系统预约后台刷新</c>

00:22:10.631 --> 00:22:14.835
<c.magenta>的日期跟你之前</c>
<c.magenta>通知ClockKit的日期相同</c>

00:22:16.136 --> 00:22:19.706
<c.magenta>类似的</c>
<c.magenta>当ClockKit想让你的应用运行时</c>

00:22:19.773 --> 00:22:21.909
<c.magenta>它会调用</c>
<c.magenta>requestedUpdateDidBegin</c>

00:22:22.676 --> 00:22:25.946
<c.magenta>现在 我们希望在应用层级来实现</c>

00:22:26.013 --> 00:22:29.049
<c.magenta>通过刷新处理后台或</c>
<c.magenta>处理backgroundTasks</c>

00:22:29.149 --> 00:22:30.617
<c.magenta>你会得到一个应用任务</c>

00:22:31.118 --> 00:22:35.189
<c.magenta>处理complication</c>
<c.magenta>更新和应用更新</c>

00:22:37.658 --> 00:22:41.361
<c.magenta>在watchOS 3中</c>
<c.magenta>我们引入了dock</c>

00:22:41.428 --> 00:22:45.899
<c.magenta>我们认为这很棒 可以使用户快速</c>
<c.magenta>获取他们所喜欢的应用的数据</c>

00:22:45.966 --> 00:22:49.436
<c.magenta>并方便地查看</c>
<c.magenta>他们所关注的所有信息</c>

00:22:50.637 --> 00:22:53.574
<c.magenta>我们希望dock中的应用数据</c>
<c.magenta>保持最新</c>

00:22:53.640 --> 00:22:56.476
<c.magenta>因此我们要保证每小时</c>
<c.magenta>至少更新一次</c>

00:22:56.543 --> 00:23:00.113
<c.magenta>这适用于快照任务和应用刷新任务</c>

00:22:56.543 --> 00:23:00.113
<c.magenta>这适用于快照任务和应用刷新任务</c>

00:23:01.181 --> 00:23:05.719
<c.magenta>现在这个预算分散到了</c>
<c.magenta>dock中的所有应用</c>

00:23:06.186 --> 00:23:09.122
<c.magenta>用户可以选择</c>
<c.magenta>在dock中放多少应用</c>

00:23:09.623 --> 00:23:12.893
<c.magenta>结果就是如果用户的dock中</c>
<c.magenta>应用的数量少</c>

00:23:13.327 --> 00:23:16.163
<c.magenta>那么你的应用某特定小时内就有更多</c>

00:23:16.230 --> 00:23:18.665
<c.magenta>在后台运行的机会</c>

00:23:19.700 --> 00:23:22.269
<c.magenta>另外 我们会把应用留在内存中</c>

00:23:22.736 --> 00:23:26.306
<c.magenta>可以迅速重新启动 用户还可以</c>
<c.magenta>跟你的应用互动</c>

00:23:26.373 --> 00:23:28.809
<c.magenta>如果用户停留在你的应用上</c>
<c.magenta>尽可能快地</c>

00:23:30.878 --> 00:23:34.281
<c.magenta>另外在dock中 我们有一个</c>
<c.magenta>最近使用的应用的概念</c>

00:23:35.582 --> 00:23:38.051
<c.magenta>这个应用占据了dock的</c>
<c.magenta>最后一个位置</c>

00:23:38.485 --> 00:23:41.555
<c.magenta>并且用户有机会</c>
<c.magenta>把它放进dock中</c>

00:23:42.222 --> 00:23:43.257
<c.magenta>通过按按钮</c>

00:23:44.157 --> 00:23:48.695
<c.magenta>对这个应用的处理跟</c>
<c.magenta>应用的处理方式完全相同</c>

00:23:48.762 --> 00:23:51.031
<c.magenta>用户明确添加到dock中的</c>

00:23:52.065 --> 00:23:55.035
<c.magenta>意思就是这个应用</c>

00:23:55.102 --> 00:23:58.138
<c.magenta>将收到后台刷新任务和快照任务</c>

00:23:58.205 --> 00:24:00.073
<c.magenta>就像dock中的其他应用一样</c>

00:23:58.205 --> 00:24:00.073
<c.magenta>就像dock中的其他应用一样</c>

00:24:00.574 --> 00:24:02.976
<c.magenta>所以你要确保一直 预约</c>

00:24:03.043 --> 00:24:04.978
<c.magenta>跟系统预约 任何应用、</c>

00:24:05.045 --> 00:24:07.681
<c.magenta>任何后台刷新请求 你可能需要的</c>

00:24:09.483 --> 00:24:12.986
<c.magenta>有些主屏幕应用不需要定期预约</c>

00:24:14.021 --> 00:24:15.455
<c.magenta>请记住这一点</c>

00:24:18.125 --> 00:24:21.828
<c.magenta>刚才Eric也提到了</c>
<c.magenta>你应用的快照</c>

00:24:22.663 --> 00:24:27.467
<c.magenta>对于watchOS 3上的</c>
<c.magenta>dock中的应用体验来说至关重要</c>

00:24:28.902 --> 00:24:32.506
<c.magenta>有时候 系统需要应用快照</c>

00:24:33.340 --> 00:24:34.708
<c.magenta>的原因各种各样</c>

00:24:35.943 --> 00:24:38.111
<c.magenta>如果系统要求你的应用</c>

00:24:38.178 --> 00:24:40.714
<c.magenta>创建快照是因为我们认为</c>
<c.magenta>我们需要一个快照</c>

00:24:41.181 --> 00:24:43.016
<c.magenta>这些快照将不会计入你的预算中</c>

00:24:43.383 --> 00:24:46.320
<c.magenta>并且不含在</c>
<c.magenta>所请求的快照数量之内</c>

00:24:46.386 --> 00:24:47.821
<c.magenta>你向系统</c>

00:24:48.455 --> 00:24:51.458
<c.magenta>有五个触发器可以导致系统</c>

00:24:51.525 --> 00:24:53.293
<c.magenta>向应用要求创建快照</c>

00:24:54.761 --> 00:24:56.797
<c.magenta>complication时间线更新</c>

00:24:57.764 --> 00:25:00.300
<c.magenta>用户与你的其中一条通知互动</c>

00:24:57.764 --> 00:25:00.300
<c.magenta>用户与你的其中一条通知互动</c>

00:25:00.701 --> 00:25:03.704
<c.magenta>意思是通知被积极地解除</c>

00:25:03.770 --> 00:25:06.373
<c.magenta>并且 如果通知进入通知中心</c>
<c.magenta>将不计数</c>

00:25:07.808 --> 00:25:10.077
<c.magenta>当应用从前台进入到后台时</c>

00:25:10.143 --> 00:25:13.347
<c.magenta>然后再一次 一个小时之后再</c>
<c.magenta>提供给应用一个返回 的机会</c>

00:25:13.413 --> 00:25:15.549
<c.magenta>到缺省状态 如果适用的话</c>

00:25:16.550 --> 00:25:19.286
<c.magenta>最后 为了让一切开始运作</c>

00:25:19.353 --> 00:25:22.523
<c.magenta>系统会要求你的应用在启动时</c>
<c.magenta>创建一个快照</c>

00:25:23.023 --> 00:25:24.191
<c.magenta>这是你的机会</c>

00:25:24.258 --> 00:25:27.628
<c.magenta>可以开始预约系统的</c>
<c.magenta>其他后台刷新任务</c>

00:25:31.798 --> 00:25:36.069
<c.magenta>现在 我想花点儿时间</c>
<c.magenta>分享一些最佳范例</c>

00:25:36.136 --> 00:25:37.638
<c.magenta>是我们精心挑选的</c>

00:25:37.704 --> 00:25:40.807
<c.magenta>在自己的应用上应用后台刷新</c>

00:25:43.410 --> 00:25:46.380
<c.magenta>首先 系统想要了解</c>

00:25:46.446 --> 00:25:48.649
<c.magenta>与你的需求相关的</c>
<c.magenta>尽可能多的信息</c>

00:25:48.715 --> 00:25:50.751
<c.magenta>所以 如果需要 就频繁地预约</c>

00:25:51.418 --> 00:25:53.720
<c.magenta>应用每获得一个运行的机会</c>

00:25:53.787 --> 00:25:56.990
<c.magenta>你都应该考虑重新评估</c>
<c.magenta>后台刷新需求</c>

00:25:57.057 --> 00:25:59.793
<c.magenta>并适当地预约系统任务</c>

00:26:01.328 --> 00:26:03.764
<c.magenta>然而 你不应该觉得</c>
<c.magenta>你有义务这样做</c>

00:26:03.830 --> 00:26:06.900
<c.magenta>如果系统把你的应用调回来</c>
<c.magenta>进行后台刷新任务</c>

00:26:07.334 --> 00:26:10.204
<c.magenta>并没有任何意义</c>
<c.magenta>也许你刚更新过数据</c>

00:26:10.604 --> 00:26:13.540
<c.magenta>需要进行其他工作 要尽快完成</c>

00:26:13.974 --> 00:26:14.808
<c.magenta>或者最好是</c>

00:26:16.276 --> 00:26:18.111
<c.magenta>当你完成那项工作后</c>

00:26:18.178 --> 00:26:22.816
<c.magenta>考虑推迟你已经跟系统预约好的</c>
<c.magenta>其他任务</c>

00:26:24.218 --> 00:26:26.520
<c.magenta>你应该考虑你得到的所有运行时间</c>

00:26:26.587 --> 00:26:29.690
<c.magenta>并确保使应用保持最新数据</c>

00:26:29.756 --> 00:26:32.025
<c.magenta>意思是 更新模型和UI</c>

00:26:32.092 --> 00:26:34.528
<c.magenta>并预约系统的后台任务</c>

00:26:34.962 --> 00:26:37.598
<c.magenta>因此是为了dock</c>
<c.magenta>和前台激活、通知、</c>

00:26:37.664 --> 00:26:39.499
<c.magenta>complication更新</c>
<c.magenta>和后台刷新</c>

00:26:39.566 --> 00:26:43.170
<c.magenta>应用获得运行时间的原因</c>
<c.magenta>有很多很多</c>

00:26:43.237 --> 00:26:45.305
<c.magenta>你应该全部都考虑到</c>

00:26:45.372 --> 00:26:47.241
<c.magenta>当你尝试和保持应用数据最新时</c>

00:26:48.942 --> 00:26:54.715
<c.magenta>应用刷新后台任务</c>
<c.magenta>就是你的切入点</c>

00:26:54.948 --> 00:26:58.118
<c.magenta>切入通用的意图运行时间</c>
<c.magenta>当你在后台时</c>

00:26:58.452 --> 00:27:00.721
<c.magenta>我们认为有一些非常不错的用例</c>

00:26:58.452 --> 00:27:00.721
<c.magenta>我们认为有一些非常不错的用例</c>

00:27:00.787 --> 00:27:03.824
<c.magenta>你可以执行如</c>
<c.magenta>拉动系统数据库这样的操作</c>

00:27:04.725 --> 00:27:08.595
<c.magenta>也许你想定期读取HealthKit数据库</c>
<c.magenta>或日历数据库</c>

00:27:09.396 --> 00:27:11.565
<c.magenta>你可以预约未来的URL会话</c>

00:27:11.632 --> 00:27:13.734
<c.magenta>这正是我们在股票应用中所执行的</c>

00:27:14.434 --> 00:27:16.170
<c.magenta>如果你已经知道时间过渡</c>

00:27:16.236 --> 00:27:19.039
<c.magenta>你可以告诉系统你认为</c>

00:27:19.106 --> 00:27:21.542
<c.magenta>运行应用最佳的确切日期</c>

00:27:21.742 --> 00:27:25.512
<c.magenta>比如 日历应用或旅行应用可能有</c>

00:27:25.712 --> 00:27:28.982
<c.magenta>定义良好的时间过渡</c>

00:27:29.816 --> 00:27:32.986
<c.magenta>最后 如果你</c>
<c.magenta>提前得到后台运行时间</c>

00:27:33.053 --> 00:27:35.789
<c.magenta>通过ClockKit API</c>
<c.magenta>我们希望你能进入</c>

00:27:35.856 --> 00:27:39.059
<c.magenta>WatchKit API触发</c>
<c.magenta>complication更新</c>

00:27:42.563 --> 00:27:45.599
<c.magenta>现在让我们讲一些快照的最佳范例</c>

00:27:47.668 --> 00:27:50.437
<c.magenta>快照是一个系统自有的 缓存</c>

00:27:50.504 --> 00:27:53.273
<c.magenta>应用数据 跟普通的缓存一样</c>

00:27:54.107 --> 00:27:55.576
<c.magenta>数据也会失效</c>

00:27:55.776 --> 00:27:58.378
<c.magenta>因此 系统想了解</c>
<c.magenta>数据什么时候会失效</c>

00:27:59.146 --> 00:28:02.816
<c.magenta>你可以 通知系统快照需要更新</c>

00:27:59.146 --> 00:28:02.816
<c.magenta>你可以 通知系统快照需要更新</c>

00:28:02.883 --> 00:28:05.319
<c.magenta>通过预约新快照请求</c>

00:28:06.653 --> 00:28:09.556
<c.magenta>现在 你应该考虑重大的内容变更</c>

00:28:09.623 --> 00:28:11.525
<c.magenta>当你尝试使快照无效时</c>

00:28:11.892 --> 00:28:15.028
<c.magenta>你并不想频繁失效</c>

00:28:15.529 --> 00:28:19.366
<c.magenta>比如 在倒计时应用中</c>

00:28:19.433 --> 00:28:22.369
<c.magenta>你一定不想每秒钟都更新快照</c>

00:28:22.436 --> 00:28:23.537
<c.magenta>那样没有任何意义</c>

00:28:23.604 --> 00:28:26.673
<c.magenta>相反 你肯定希望通知系统</c>
<c.magenta>更新你的快照</c>

00:28:26.740 --> 00:28:29.643
<c.magenta>当发生重大事件时 比如计时结束时</c>

00:28:32.746 --> 00:28:34.081
<c.magenta>我知道这很复杂</c>

00:28:34.147 --> 00:28:38.919
<c.magenta>我想分享一个我认为很棒的</c>
<c.magenta>数据流</c>

00:28:38.986 --> 00:28:40.521
<c.magenta>关于如何管理这种复杂性</c>

00:28:41.622 --> 00:28:44.024
<c.magenta>假如你有一些外部事件</c>

00:28:44.324 --> 00:28:47.027
<c.magenta>也许是表连通性</c>
<c.magenta>也许是NSURLSession</c>

00:28:47.194 --> 00:28:49.596
<c.magenta>也许应用碰巧在前台运行</c>

00:28:49.663 --> 00:28:51.365
<c.magenta>因为用户启动了你的应用</c>

00:28:51.665 --> 00:28:55.035
<c.magenta>基本上是导致你更新</c>
<c.magenta>模型的所有事件</c>

00:28:57.137 --> 00:28:59.907
<c.magenta>我们想要你为后台刷新做的所有操作</c>

00:29:00.274 --> 00:29:03.410
<c.magenta>是为了回应模型的变更</c>

00:29:03.977 --> 00:29:06.046
<c.magenta>比如 更新complication</c>

00:29:06.113 --> 00:29:07.614
<c.magenta>请求创建新快照</c>

00:29:08.081 --> 00:29:10.884
<c.magenta>然后评估下一次后台刷新需求</c>

00:29:10.951 --> 00:29:12.853
<c.magenta>无论是后台URLSession</c>

00:29:12.920 --> 00:29:15.989
<c.magenta>或者仅仅是跟后台刷新API</c>
<c.magenta>预约任意一个运行时间</c>

00:29:21.495 --> 00:29:24.131
<c.magenta>现在watchOS 3中</c>
<c.magenta>有了dock</c>

00:29:24.598 --> 00:29:26.967
<c.magenta>我们认为用户会</c>

00:29:28.202 --> 00:29:31.872
<c.magenta>我们认为用户会出入很多应用</c>

00:29:31.939 --> 00:29:34.107
<c.magenta>比watchOS 2上要频繁地多</c>

00:29:34.675 --> 00:29:37.511
<c.magenta>在watchOS 2中 你必须准备</c>

00:29:37.578 --> 00:29:40.848
<c.magenta>随时进入前台或后台</c>

00:29:41.014 --> 00:29:43.750
<c.magenta>但我们认为现在这些转换</c>
<c.magenta>发生的频率要高得多</c>

00:29:45.185 --> 00:29:48.121
<c.magenta>因此你应该确保</c>
<c.magenta>完成所有后台任务</c>

00:29:48.188 --> 00:29:50.724
<c.magenta>当处于前台激活状态时尽快</c>

00:29:52.159 --> 00:29:54.094
<c.magenta>当应用在前台被激活时</c>

00:29:54.161 --> 00:29:56.864
<c.magenta>你一定不想实施任何额外的工作</c>

00:29:56.930 --> 00:29:59.132
<c.magenta>你只想做一些有用的工作</c>

00:29:59.199 --> 00:30:01.134
<c.magenta>向用户显示UI</c>

00:29:59.199 --> 00:30:01.134
<c.magenta>向用户显示UI</c>

00:30:01.702 --> 00:30:05.706
<c.magenta>类似的 当应用从前台进入后台时</c>

00:30:05.939 --> 00:30:09.543
<c.magenta>你应该尽快完成所有的前台工作</c>

00:30:09.877 --> 00:30:13.046
<c.magenta>现在我们意识到</c>
<c.magenta>你可能需要一点儿时间</c>

00:30:13.113 --> 00:30:14.581
<c.magenta>来完成所有的前台工作</c>

00:30:14.648 --> 00:30:18.619
<c.magenta>你可以通过使用NSProcessInfo</c>
<c.magenta>.performExpiringActivity实现</c>

00:30:19.386 --> 00:30:24.291
<c.magenta>去年的WWDC有一场不错的演讲</c>
<c.magenta>是“WatchKit技巧与陷阱”</c>

00:30:24.358 --> 00:30:28.529
<c.magenta>教你如何使用NSProcessInfo</c>
<c.magenta>.performExpiringActivity</c>

00:30:29.296 --> 00:30:32.299
<c.magenta>最后 我还要提一下数据保护</c>

00:30:33.100 --> 00:30:37.137
<c.magenta>一般来说</c>
<c.magenta>用户是早晨戴上表</c>

00:30:37.604 --> 00:30:40.307
<c.magenta>解锁 然后表一整天都是解锁状态</c>

00:30:40.374 --> 00:30:43.177
<c.magenta>直到晚上再脱下表 放回充电器</c>

00:30:45.345 --> 00:30:48.749
<c.magenta>完全不能获取到</c>
<c.magenta>表上某些类型的数据</c>

00:30:48.815 --> 00:30:50.717
<c.magenta>当设备为锁定状态时</c>

00:30:50.984 --> 00:30:54.588
<c.magenta>比如 其中一个最著名的案例是</c>
<c.magenta>HealthKit数据库</c>

00:30:55.222 --> 00:30:58.959
<c.magenta>因此 你一定要考虑</c>
<c.magenta>你有什么解决方案</c>

00:30:59.026 --> 00:31:01.695
<c.magenta>如果数据不可用</c>
<c.magenta>不能创建快照的话</c>

00:30:59.026 --> 00:31:01.695
<c.magenta>如果数据不可用</c>
<c.magenta>不能创建快照的话</c>

00:31:05.766 --> 00:31:08.402
<c.magenta>然后我想分享一些测试技巧</c>

00:31:09.636 --> 00:31:12.573
<c.magenta>模拟器对于迭代开发来说</c>
<c.magenta>是个不错的工具</c>

00:31:12.639 --> 00:31:15.042
<c.magenta>我之前提过 我们有一些预算</c>

00:31:15.108 --> 00:31:17.845
<c.magenta>但在模拟器中</c>
<c.magenta>我们不会强制实施任何预算</c>

00:31:17.911 --> 00:31:21.615
<c.magenta>所以 你一般会根据</c>
<c.magenta>你想要调用任务的日期</c>

00:31:21.682 --> 00:31:23.584
<c.magenta>在模拟器中调用任务</c>

00:31:25.252 --> 00:31:27.154
<c.magenta>类似的 当在设备上时</c>

00:31:27.621 --> 00:31:29.456
<c.magenta>我们可能仍然需要应用一些预算</c>

00:31:29.523 --> 00:31:31.391
<c.magenta>但 你将获得最佳体验</c>

00:31:31.458 --> 00:31:32.526
<c.magenta>当在充电器上时</c>

00:31:35.395 --> 00:31:38.298
<c.magenta>你要确保你对启动路径和重新启动</c>
<c.magenta>路径都进行了测试</c>

00:31:38.365 --> 00:31:41.168
<c.magenta>系统会尽可能</c>
<c.magenta>把你的应用放在内存中</c>

00:31:42.102 --> 00:31:43.770
<c.magenta>但如果有引导程序</c>

00:31:43.837 --> 00:31:45.806
<c.magenta>系统将启动你的应用</c>

00:31:45.873 --> 00:31:48.342
<c.magenta>以便请求初始快照</c>

00:31:49.843 --> 00:31:51.912
<c.magenta>要验证已完成所有任务</c>

00:31:52.446 --> 00:31:54.615
<c.magenta>在随后的种子中</c>
<c.magenta>你将得到一个崩溃报告</c>

00:31:54.681 --> 00:31:56.617
<c.magenta>如果你不能按时完成任务的话</c>

00:31:57.084 --> 00:31:59.853
<c.magenta>超级重要的一点是</c>
<c.magenta>你的应用并不会崩溃</c>

00:31:59.920 --> 00:32:03.357
<c.magenta>因为我们希望你的应用</c>
<c.magenta>尽可能地响应用户</c>

00:31:59.920 --> 00:32:03.357
<c.magenta>因为我们希望你的应用</c>
<c.magenta>尽可能地响应用户</c>

00:32:04.691 --> 00:32:06.760
<c.magenta>最后 一旦你认为你已经</c>

00:32:06.827 --> 00:32:09.096
<c.magenta>实现了后台刷新策略</c>

00:32:09.162 --> 00:32:10.264
<c.magenta>你的应用应该已经被激活了</c>

00:32:10.364 --> 00:32:11.798
<c.magenta>确保你得到了 体验</c>

00:32:11.865 --> 00:32:13.500
<c.magenta>你希望你的用户能得到的</c>

00:32:14.134 --> 00:32:17.304
<c.magenta>你应该改变dock中的应用数量</c>

00:32:18.739 --> 00:32:21.575
<c.magenta>确保对最好的和最坏的情况</c>
<c.magenta>进行充分测试</c>

00:32:21.642 --> 00:32:22.943
<c.magenta>当你得到预约时</c>

00:32:23.277 --> 00:32:27.514
<c.magenta>现在 我想分享一个案例研究</c>
<c.magenta>关于我们如何 应用后台刷新</c>

00:32:27.581 --> 00:32:28.882
<c.magenta>在我们的股票应用中</c>

00:32:30.817 --> 00:32:33.620
<c.magenta>在我们开始写代码之前</c>

00:32:34.288 --> 00:32:38.425
<c.magenta>我们先退一步思考一下</c>

00:32:38.492 --> 00:32:40.627
<c.magenta>进行后台刷新的有趣特征</c>

00:32:40.694 --> 00:32:41.995
<c.magenta>为我们的股票应用</c>

00:32:43.764 --> 00:32:47.067
<c.magenta>我们使用URLSession</c>
<c.magenta>取回服务器数据</c>

00:32:49.570 --> 00:32:51.338
<c.magenta>且要做一个complication</c>

00:32:51.772 --> 00:32:54.141
<c.magenta>意思就是 我们知道 有多个视图</c>

00:32:54.208 --> 00:32:55.843
<c.magenta>系统中的数据</c>

00:32:55.909 --> 00:32:58.145
<c.magenta>通过complication、快照</c>

00:32:58.745 --> 00:33:01.281
<c.magenta>以及激活应用</c>

00:32:58.745 --> 00:33:01.281
<c.magenta>以及激活应用</c>

00:33:04.084 --> 00:33:08.255
<c.magenta>我们知道 我们想要周期性地运行</c>

00:33:08.755 --> 00:33:11.592
<c.magenta>我们要定期更新应用</c>

00:33:12.659 --> 00:33:14.728
<c.magenta>然后 我们了解了数据中一些有趣的东西</c>

00:33:14.795 --> 00:33:19.233
<c.magenta>就是一旦股市关闭 我们的数据</c>
<c.magenta>在当天剩余的时间内是没什么问题的</c>

00:33:19.299 --> 00:33:20.767
<c.magenta>根本不会发生变化</c>

00:33:21.201 --> 00:33:24.037
<c.magenta>嗯 让我们讲一下应用的运行</c>

00:33:25.005 --> 00:33:27.741
<c.magenta>假如我们的设备启动</c>

00:33:27.808 --> 00:33:30.978
<c.magenta>系统会要求</c>
<c.magenta>我们的应用创建一个快照</c>

00:33:31.712 --> 00:33:34.348
<c.magenta>因此 我们加载最新数据</c>
<c.magenta>并准备好UI</c>

00:33:34.414 --> 00:33:36.383
<c.magenta>但在完成快照任务之前</c>

00:33:36.450 --> 00:33:39.453
<c.magenta>我们要预约一个</c>
<c.magenta>后台的URLSession任务</c>

00:33:40.420 --> 00:33:43.724
<c.magenta>这是我们开始后台刷新周期</c>
<c.magenta>的机会</c>

00:33:44.691 --> 00:33:48.128
<c.magenta>并确保为用户下载最新数据</c>

00:33:49.496 --> 00:33:53.300
<c.magenta>现在 我们要使用</c>
<c.magenta>NSURLSessionDownloadTask</c>

00:33:53.634 --> 00:33:58.472
<c.magenta>给系统提供我们想要下载</c>
<c.magenta>哪种数据的信息</c>

00:33:58.539 --> 00:34:01.175
<c.magenta>系统可以让我们的应用休眠</c>

00:33:58.539 --> 00:34:01.175
<c.magenta>系统可以让我们的应用休眠</c>

00:34:01.241 --> 00:34:02.843
<c.magenta>并在后台下载数据</c>

00:34:04.077 --> 00:34:08.949
<c.magenta>URLSessionDataTask</c>
<c.magenta>的确能在后台会话中运行</c>

00:34:09.248 --> 00:34:11.518
<c.magenta>然而 如果应用在后台</c>

00:34:11.585 --> 00:34:15.889
<c.magenta>或当应用被挂起时 它会失败</c>

00:34:17.424 --> 00:34:19.893
<c.magenta>因为后台刷新有时间限制</c>

00:34:19.960 --> 00:34:23.964
<c.magenta>你的应用很可能会在</c>
<c.magenta>得到数据之前就被挂起了</c>

00:34:24.031 --> 00:34:26.667
<c.magenta>所以我们建议使用下载任务</c>

00:34:28.402 --> 00:34:32.239
<c.magenta>稍后 系统会唤醒我们的应用</c>

00:34:32.306 --> 00:34:33.873
<c.magenta>因为我们已经完成了下载</c>

00:34:34.908 --> 00:34:38.011
<c.magenta>我们会更新我们的模型</c>
<c.magenta>因为我们已经更新了模型</c>

00:34:38.078 --> 00:34:39.612
<c.magenta>我们有三件事要去做</c>

00:34:39.913 --> 00:34:41.982
<c.magenta>触发complication更新</c>

00:34:43.250 --> 00:34:46.954
<c.magenta>通过请求</c>
<c.magenta>通知系统快照已经失效</c>

00:34:47.020 --> 00:34:48.487
<c.magenta>立即创建新快照</c>

00:34:49.556 --> 00:34:53.025
<c.magenta>并评估</c>
<c.magenta>下一次后台刷新需求</c>

00:34:54.460 --> 00:34:56.964
<c.magenta>计划好下一次的运行时间</c>

00:34:57.030 --> 00:34:58.432
<c.magenta>并把这个时间通知给系统</c>

00:35:00.033 --> 00:35:03.337
<c.magenta>稍后 我们开始运行后台刷新</c>

00:35:03.403 --> 00:35:06.940
<c.magenta>我们所要做的就是预约</c>
<c.magenta>下一次的URLSession下载</c>

00:35:07.741 --> 00:35:11.745
<c.magenta>我们一天之内要完成多个</c>
<c.magenta>这样的周期</c>

00:35:12.746 --> 00:35:15.649
<c.magenta>就是为了保证应用的数据</c>
<c.magenta>是最新的 系统会创建快照</c>

00:35:15.716 --> 00:35:17.451
<c.magenta>若用户在dock中</c>
<c.magenta>浏览我们快照</c>

00:35:17.518 --> 00:35:21.288
<c.magenta>我们的快照会显示最新的数据</c>

00:35:22.956 --> 00:35:25.526
<c.magenta>嗯 假如用户从dock中</c>
<c.magenta>激活了我们的应用</c>

00:35:26.093 --> 00:35:27.361
<c.magenta>我们应用会变成全屏显示</c>

00:35:28.061 --> 00:35:30.764
<c.magenta>并且我们想确保我们的用户</c>
<c.magenta>有最新的数据</c>

00:35:30.831 --> 00:35:34.368
<c.magenta>所以我们将再次下载最新数据</c>

00:35:34.434 --> 00:35:35.936
<c.magenta>因为我们已经进入前台</c>

00:35:37.237 --> 00:35:40.707
<c.magenta>一旦完成模型的更新</c>
<c.magenta>我们仍然要完成三件事</c>

00:35:40.774 --> 00:35:42.676
<c.magenta>我们要请求</c>
<c.magenta>complication更新</c>

00:35:42.910 --> 00:35:44.278
<c.magenta>还要请求创建新快照</c>

00:35:44.978 --> 00:35:47.915
<c.magenta>然后还要再次预约</c>
<c.magenta>稍后的后台刷新</c>

00:35:48.182 --> 00:35:49.883
<c.magenta>在这里 我要指出两点</c>

00:35:50.250 --> 00:35:53.854
<c.magenta>首先 虽然我们已经进入前台</c>
<c.magenta>但我们仍然正在请求创建新快照</c>

00:35:54.354 --> 00:35:57.724
<c.magenta>这绝对没问题</c>
<c.magenta>而且我们也期待你们这样做</c>

00:35:57.791 --> 00:36:00.727
<c.magenta>我们希望只要模型发生变更</c>
<c.magenta>就请求创建新快照</c>

00:35:57.791 --> 00:36:00.727
<c.magenta>我们希望只要模型发生变更</c>
<c.magenta>就请求创建新快照</c>

00:36:00.794 --> 00:36:03.964
<c.magenta>系统非常智能</c>
<c.magenta>它知道你的应用何时处于前台</c>

00:36:04.031 --> 00:36:07.267
<c.magenta>以及何时不适合</c>
<c.magenta>给你发送快照任务</c>

00:36:08.335 --> 00:36:11.271
<c.magenta>第二点 因为我们是在前台运行</c>

00:36:11.905 --> 00:36:13.106
<c.magenta>并更新了模型</c>

00:36:13.407 --> 00:36:16.443
<c.magenta>我们得评估</c>
<c.magenta>下一次的后台刷新需求</c>

00:36:16.910 --> 00:36:19.913
<c.magenta>如果我们知道</c>
<c.magenta>我们很可能会在十分钟后运行</c>

00:36:19.980 --> 00:36:21.648
<c.magenta>但我们只下载了数据</c>

00:36:22.416 --> 00:36:26.653
<c.magenta>我们可以推迟创建快照</c>
<c.magenta>或者推迟后台刷新请求</c>

00:36:26.720 --> 00:36:30.791
<c.magenta>使运行时间最大化</c>

00:36:32.326 --> 00:36:34.728
<c.magenta>要使应用运行的几率最大化</c>

00:36:37.264 --> 00:36:40.100
<c.magenta>最后 股市关闭之前</c>
<c.magenta>做最后一次更新</c>

00:36:41.301 --> 00:36:43.303
<c.magenta>我们知道 当天的数据将不会再发生变化</c>

00:36:44.304 --> 00:36:45.973
<c.magenta>但是我们会像往常一样完成更新</c>

00:36:46.039 --> 00:36:48.008
<c.magenta>意思是更新complication</c>

00:36:48.542 --> 00:36:49.977
<c.magenta>请求创建新快照</c>

00:36:50.577 --> 00:36:53.113
<c.magenta>然后评估后台刷新需求</c>

00:36:54.882 --> 00:36:57.718
<c.magenta>因为我们知道</c>
<c.magenta>当天的数据会停止更新</c>

00:36:57.784 --> 00:37:01.154
<c.magenta>我们不能在complication</c>
<c.magenta>或快照中保留失效的数据</c>

00:36:57.784 --> 00:37:01.154
<c.magenta>我们不能在complication</c>
<c.magenta>或快照中保留失效的数据</c>

00:37:02.623 --> 00:37:05.025
<c.magenta>我们可以等待</c>
<c.magenta>直到股市下一次开市</c>

00:37:05.092 --> 00:37:07.160
<c.magenta>获得下一次后台刷新的机会</c>

00:37:08.762 --> 00:37:12.432
<c.magenta>这就使我们的应用避开系统</c>

00:37:12.499 --> 00:37:14.668
<c.magenta>并且不用完成任何不必要的工作</c>

00:37:15.002 --> 00:37:16.870
<c.magenta>意思就是</c>
<c.magenta>会获得更多的刷新任务</c>

00:37:16.937 --> 00:37:18.539
<c.magenta>系统上的其他应用</c>

00:37:21.208 --> 00:37:25.312
<c.magenta>总之 一定要完成任务</c>

00:37:25.412 --> 00:37:27.748
<c.magenta>完成任务非常重要</c>

00:37:27.814 --> 00:37:29.483
<c.magenta>如果没有完成任务</c>
<c.magenta>在随后的种子中</c>

00:37:29.550 --> 00:37:31.652
<c.magenta>系统会扼杀你的应用</c>

00:37:31.718 --> 00:37:33.654
<c.magenta>如果系统扼杀了你的应用</c>

00:37:33.720 --> 00:37:38.825
<c.magenta>用户在dock中就不会得到</c>
<c.magenta>他们所期待的快速响应时间</c>

00:37:38.959 --> 00:37:41.061
<c.magenta>并且用户将</c>
<c.magenta>把你的应用从dock中移除</c>

00:37:42.763 --> 00:37:45.132
<c.magenta>要有效地利用运行时间</c>

00:37:45.199 --> 00:37:48.468
<c.magenta>考虑前台激活、</c>
<c.magenta>通知、ClockKit</c>

00:37:48.535 --> 00:37:51.738
<c.magenta>当然还有后台刷新机会</c>

00:37:52.039 --> 00:37:53.540
<c.magenta>无论什么时候获得运行时间</c>

00:37:53.774 --> 00:37:56.877
<c.magenta>都一定要考虑保持最新的模型</c>

00:37:56.944 --> 00:37:59.580
<c.magenta>并评估后台刷新需求</c>

00:38:01.281 --> 00:38:03.383
<c.magenta>当数据发生变更时要通知系统</c>

00:38:04.218 --> 00:38:06.887
<c.magenta>你的complication</c>
<c.magenta>和你的应用快照</c>

00:38:06.954 --> 00:38:11.558
<c.magenta>都是系统自有的应用数据缓存</c>

00:38:12.659 --> 00:38:16.129
<c.magenta>系统需要了解何时数据失效</c>

00:38:16.496 --> 00:38:19.132
<c.magenta>以便我们不会</c>
<c.magenta>给用户显示错误的数据</c>

00:38:19.600 --> 00:38:22.269
<c.magenta>用户期待看到一致的数据</c>

00:38:22.636 --> 00:38:25.038
<c.magenta>无论他们用什么方式</c>
<c.magenta>浏览应用数据</c>

00:38:26.673 --> 00:38:29.076
<c.magenta>最后 你需要 来决定应用策略</c>

00:38:29.142 --> 00:38:30.744
<c.magenta>具体分析</c>

00:38:30.811 --> 00:38:32.513
<c.magenta>没有适合所有情况的解决方案</c>

00:38:32.579 --> 00:38:36.016
<c.magenta>你一定要考虑用户</c>
<c.magenta>是如何使用应用的</c>

00:38:36.283 --> 00:38:38.352
<c.magenta>以及数据的有趣性特征</c>

00:38:38.418 --> 00:38:40.721
<c.magenta>从而决定如何计划后台刷新策略</c>

00:38:42.122 --> 00:38:44.858
<c.magenta>要了解更多信息</c>
<c.magenta>你可以访问这个网站</c>

00:38:45.392 --> 00:38:49.796
<c.magenta>今天下午3点还有一场</c>
<c.magenta>非常不错的演讲</c>

00:38:49.863 --> 00:38:55.068
<c.magenta>构造watchOS 3上的性能</c>
<c.magenta>我们将具体阐述股票应用的实现</c>

00:38:55.135 --> 00:38:56.270
<c.magenta>谢谢大家</c>
