WEBVTT

00:00:19.386 --> 00:00:21.722
<c.magenta>国际用户界面的新功能</c>

00:00:21.922 --> 00:00:24.024
<c.magenta>早上好！欢迎大家！</c>

00:00:28.195 --> 00:00:31.164
<c.magenta>感谢大家来参加本场演讲</c>
<c.magenta>我是Sara Radi</c>

00:00:31.231 --> 00:00:33.600
<c.magenta>国际软件工程师</c>

00:00:33.667 --> 00:00:36.303
<c.magenta>今天和同事Joaquim Lobo Silva</c>

00:00:36.370 --> 00:00:38.972
<c.magenta>一起讨论一下国际用户界面</c>

00:00:39.306 --> 00:00:40.307
<c.magenta>现在我们开始</c>

00:00:43.110 --> 00:00:46.947
<c.magenta>Apple软件支持40多个本地化版本</c>

00:00:47.247 --> 00:00:49.750
<c.magenta>每一种语言对我们来说都是挑战</c>

00:00:49.850 --> 00:00:52.386
<c.magenta>今天我们主要讨论</c>

00:00:52.452 --> 00:00:55.189
<c.magenta>软件支持的两种从右向左书写的语言</c>

00:00:55.556 --> 00:00:57.724
<c.magenta>它们是阿拉伯语和希伯来语</c>

00:00:58.425 --> 00:01:01.228
<c.magenta>这种语言是巨大的挑战</c>

00:00:58.425 --> 00:01:01.228
<c.magenta>这种语言是巨大的挑战</c>

00:01:01.728 --> 00:01:03.497
<c.magenta>在开发应用时</c>

00:01:03.564 --> 00:01:07.034
<c.magenta>这是因为书写方向与众不同</c>

00:01:07.534 --> 00:01:10.170
<c.magenta>那么为什么我们要</c>
<c.magenta>单独讨论这两种语言呢？</c>

00:01:11.972 --> 00:01:15.209
<c.magenta>在中东有超过4亿的人口</c>

00:01:15.275 --> 00:01:16.910
<c.magenta>这是一个巨大的正在成长的市场</c>

00:01:17.544 --> 00:01:21.381
<c.magenta>就在去年 我们在阿拉伯联合酋长国</c>
<c.magenta>开了两个Apple Store</c>

00:01:21.448 --> 00:01:24.051
<c.magenta>图片是Apple Store的开业</c>
<c.magenta>分别位于阿布扎比和</c>

00:01:25.219 --> 00:01:26.119
<c.magenta>迪拜...</c>

00:01:26.720 --> 00:01:31.992
<c.magenta>仅几周前 我们在阿拉伯联合酋长国</c>
<c.magenta>首次开放了Apple.com</c>

00:01:32.125 --> 00:01:33.660
<c.magenta>网站的阿拉伯语版本</c>

00:01:33.927 --> 00:01:37.698
<c.magenta>这确实非常令人激动</c>
<c.magenta>那么这对你来说意味着什么呢？</c>

00:01:38.732 --> 00:01:43.237
<c.magenta>作为开发者</c>
<c.magenta>你在这个市场获得了更多的机会</c>

00:01:43.570 --> 00:01:47.741
<c.magenta>为用户开发语言本地化的</c>
<c.magenta>应用非常重要</c>

00:01:48.308 --> 00:01:51.879
<c.magenta>因此在这个演讲中</c>
<c.magenta>我们主要谈论从右向左书写的语言</c>

00:01:52.279 --> 00:01:55.983
<c.magenta>如果你想了解更多的</c>
<c.magenta>关于语言本地化应用的设计</c>

00:01:56.049 --> 00:01:57.251
<c.magenta>请查阅这两个演讲</c>

00:01:57.451 --> 00:02:00.153
<c.magenta>“兼收并蓄的应用设计”</c>
<c.magenta>主要探讨</c>

00:01:57.451 --> 00:02:00.153
<c.magenta>“兼收并蓄的应用设计”</c>
<c.magenta>主要探讨</c>

00:02:00.387 --> 00:02:02.222
<c.magenta>应用的人机交互界面</c>

00:02:02.489 --> 00:02:04.391
<c.magenta>以及“国际化最佳实践”</c>

00:02:04.458 --> 00:02:06.827
<c.magenta>如果你想学习有关</c>
<c.magenta>应用国际化的知识</c>

00:02:08.294 --> 00:02:11.265
<c.magenta>去年 在iOS 9上</c>

00:02:11.331 --> 00:02:13.333
<c.magenta>我们扩大了国际化支持</c>

00:02:13.400 --> 00:02:16.069
<c.magenta>全面支持从右向左书写语言</c>

00:02:16.403 --> 00:02:17.905
<c.magenta>在那以后</c>

00:02:17.971 --> 00:02:23.477
<c.magenta>在watchOS 2.1中加入了</c>
<c.magenta>希伯来语和阿拉伯语的本地化语言支持</c>

00:02:24.378 --> 00:02:25.279
<c.magenta>今年...</c>

00:02:25.679 --> 00:02:30.651
<c.magenta>我很高兴的宣布我们一直在致力于</c>
<c.magenta>为这个市场重新设计macOS</c>

00:02:31.318 --> 00:02:33.854
<c.magenta>现在我想带你们浏览一下</c>

00:02:34.721 --> 00:02:37.424
<c.magenta>在这个演讲中我们要经过的议程</c>

00:02:38.358 --> 00:02:42.629
<c.magenta>首先Joaquim要简要叙述一下APIs</c>

00:02:42.696 --> 00:02:44.064
<c.magenta>它们是在去年引入的</c>

00:02:44.665 --> 00:02:49.002
<c.magenta>然后他要讨论一下在iOS 10中的</c>
<c.magenta>图像处理的最新进展</c>

00:02:50.137 --> 00:02:52.806
<c.magenta>以及如何评估布局方向</c>

00:02:54.408 --> 00:02:57.110
<c.magenta>最后他会探讨watchOS支持的新功能</c>

00:02:57.544 --> 00:03:01.515
<c.magenta>然后我要讲述macOS的新功能</c>

00:02:57.544 --> 00:03:01.515
<c.magenta>然后我要讲述macOS的新功能</c>

00:03:02.349 --> 00:03:05.219
<c.magenta>在文本支持中的最新进展</c>
<c.magenta>和你如何</c>

00:03:05.285 --> 00:03:08.121
<c.magenta>在应用中正确显示混合文本</c>

00:03:08.655 --> 00:03:12.826
<c.magenta>现在让Joaquim来讲讲iOS</c>

00:03:13.260 --> 00:03:14.094
<c.magenta>Joaquim</c>

00:03:17.831 --> 00:03:19.333
<c.magenta>好 谢谢Sara</c>

00:03:19.399 --> 00:03:21.168
<c.magenta>早上好!</c>
<c.magenta>谢谢大家的光临!</c>

00:03:21.702 --> 00:03:23.770
<c.magenta>我叫Joaquim 首先让我</c>

00:03:23.837 --> 00:03:25.772
<c.magenta>讲讲iOS</c>

00:03:27.341 --> 00:03:31.111
<c.magenta>刚才Sara讲过</c>
<c.magenta>去年在WWDC...</c>

00:03:31.912 --> 00:03:36.717
<c.magenta>我们宣布了在iOS整个平台上全面</c>
<c.magenta>支持从右向左语言的界面</c>

00:03:38.085 --> 00:03:40.754
<c.magenta>当这些语言的用户运行应用时</c>

00:03:40.821 --> 00:03:44.791
<c.magenta>他们希望用户界面适应这些语言的特点</c>

00:03:46.693 --> 00:03:50.097
<c.magenta>UIKit为你做了大量的工作</c>
<c.magenta>它的控制层和视图层</c>

00:03:50.163 --> 00:03:52.966
<c.magenta>使从右向左语言的应用运行正确</c>

00:03:54.768 --> 00:03:57.905
<c.magenta>在视图中管理界面设计可以</c>
<c.magenta>通过自动设计来实现</c>

00:03:57.971 --> 00:04:00.140
<c.magenta>而且还有高层次的组件</c>

00:03:57.971 --> 00:04:00.140
<c.magenta>而且还有高层次的组件</c>

00:04:00.207 --> 00:04:03.610
<c.magenta>例如iOS 9中新添加的</c>
<c.magenta>UIStack视图在去年也发布了</c>

00:04:04.578 --> 00:04:08.749
<c.magenta>它可以让你很容易地为用户界面建模</c>
<c.magenta>和维护你的界面</c>

00:04:09.249 --> 00:04:12.386
<c.magenta>它可以容易实现嵌套使用</c>
<c.magenta>多个水平和垂直视窗</c>

00:04:12.853 --> 00:04:15.389
<c.magenta>栈视图的优点是</c>

00:04:15.455 --> 00:04:17.757
<c.magenta>它可以为你管理自动布局约束</c>

00:04:18.959 --> 00:04:21.228
<c.magenta>尤其对于从右向左语言来说</c>

00:04:21.295 --> 00:04:23.297
<c.magenta>它可以管理开头和结尾的约束</c>

00:04:23.363 --> 00:04:26.066
<c.magenta>它包括左和右两个属性</c>

00:04:26.133 --> 00:04:29.102
<c.magenta>文本可以自动左右调整</c>

00:04:29.169 --> 00:04:30.904
<c.magenta>当在从右向左的语言中运行的时候</c>

00:04:33.473 --> 00:04:36.343
<c.magenta>重要的是要注意</c>

00:04:36.543 --> 00:04:39.680
<c.magenta>正是因为这些语言是</c>
<c.magenta>从右向左书写和阅读的</c>

00:04:40.080 --> 00:04:43.183
<c.magenta>这意味着并不是应用的每一个控制都是</c>

00:04:43.250 --> 00:04:46.753
<c.magenta>严格遵守这些语言的书写方向</c>

00:04:47.221 --> 00:04:49.790
<c.magenta>还有细微的差别和例外情况</c>

00:04:49.857 --> 00:04:52.593
<c.magenta>在为这些语言设计应用时</c>
<c.magenta>要铭记在心</c>

00:04:53.026 --> 00:04:56.997
<c.magenta>一个例子是和重放有关的重放用户界面</c>

00:04:57.064 --> 00:05:01.735
<c.magenta>例如视频、音频和时间轴的快退和快进</c>

00:04:57.064 --> 00:05:01.735
<c.magenta>例如视频、音频和时间轴的快退和快进</c>

00:05:01.802 --> 00:05:04.304
<c.magenta>它们的布局方向应该保持一致</c>

00:05:07.040 --> 00:05:09.543
<c.magenta>另一个例子是我们称之为空间界面</c>

00:05:09.676 --> 00:05:11.979
<c.magenta>它可以是一组控制</c>

00:05:12.045 --> 00:05:15.449
<c.magenta>它们没有与它们有关的特定方向性</c>

00:05:15.816 --> 00:05:17.684
<c.magenta>像左右这样的文本对齐</c>

00:05:17.751 --> 00:05:21.688
<c.magenta>在所有的语言中显然都应该保持一致</c>

00:05:21.989 --> 00:05:24.258
<c.magenta>还有一个例子是指南针</c>

00:05:24.324 --> 00:05:28.095
<c.magenta>那些在实体或者地理上</c>
<c.magenta>有对应物的东西</c>

00:05:28.228 --> 00:05:29.396
<c.magenta>应该保持不变</c>

00:05:29.463 --> 00:05:32.266
<c.magenta>东西南北不会根据左右而改变</c>

00:05:34.201 --> 00:05:37.437
<c.magenta>iOS中有语义内容属性有助于你管理</c>

00:05:37.704 --> 00:05:40.073
<c.magenta>并且确定和调节</c>

00:05:40.140 --> 00:05:42.943
<c.magenta>每个视图和子视图的设计流程</c>

00:05:44.278 --> 00:05:47.814
<c.magenta>它是枚举类型 正如我刚才说的</c>
<c.magenta>它是建立在UIView上的属性</c>

00:05:48.115 --> 00:05:50.150
<c.magenta>它包括我刚才讲到的所有的情况</c>

00:05:50.217 --> 00:05:53.220
<c.magenta>有重放、空间用户界面</c>

00:05:53.587 --> 00:05:56.723
<c.magenta>还有自动的强制方向转换</c>

00:05:57.191 --> 00:05:59.826
<c.magenta>另外还有未确定 它是默认值</c>

00:06:00.060 --> 00:06:02.829
<c.magenta>这可能是大多数视图所属的类别</c>

00:06:05.699 --> 00:06:08.869
<c.magenta>因此如果你想更详尽的了解它们</c>

00:06:08.936 --> 00:06:11.772
<c.magenta>或者你是从右到左用户界面设计的新手</c>

00:06:11.872 --> 00:06:14.575
<c.magenta>我建议你查看去年的演讲</c>

00:06:14.641 --> 00:06:16.910
<c.magenta>对国际用户界面的最新UIKit支持</c>

00:06:17.211 --> 00:06:19.479
<c.magenta>它详细介绍了这些概念</c>

00:06:19.546 --> 00:06:21.515
<c.magenta>并且讲解了一些新的API</c>

00:06:21.748 --> 00:06:24.718
<c.magenta>或者不很新但是是我们新添加到</c>
<c.magenta>iOS 9中的API</c>

00:06:25.085 --> 00:06:26.086
<c.magenta>用于从右到左用户界面</c>

00:06:27.421 --> 00:06:30.791
<c.magenta>刚才简要介绍了iOS的布局中</c>
<c.magenta>现有的功能</c>

00:06:31.358 --> 00:06:33.794
<c.magenta>下面我要介绍图片</c>

00:06:35.762 --> 00:06:37.331
<c.magenta>用于从右向左语言的图片很有趣</c>

00:06:37.397 --> 00:06:40.033
<c.magenta>它们可以分为三类</c>

00:06:42.102 --> 00:06:44.471
<c.magenta>第一类是通用图片</c>

00:06:44.571 --> 00:06:47.941
<c.magenta>这可能是大多数图片所属的类别</c>

00:06:48.008 --> 00:06:49.977
<c.magenta>它们包括插图和图标</c>

00:06:50.310 --> 00:06:54.381
<c.magenta>它们不需要考虑语言书写的方向</c>

00:06:54.448 --> 00:06:57.985
<c.magenta>任何情况下它们都是一样的</c>
<c.magenta>这对你来说当然是很熟悉的</c>

00:06:58.051 --> 00:07:02.456
<c.magenta>例如常规用户界面图片或者在图片查看器</c>
<c.magenta>和Interface Builder上为图片命名</c>

00:06:58.051 --> 00:07:02.456
<c.magenta>例如常规用户界面图片或者在图片查看器</c>
<c.magenta>和Interface Builder上为图片命名</c>

00:07:04.758 --> 00:07:09.229
<c.magenta>第二类是有方向和它们关联的图片</c>

00:07:09.463 --> 00:07:13.867
<c.magenta>无论它是导航箭头</c>

00:07:13.934 --> 00:07:16.336
<c.magenta>例如导航条中返回按钮</c>

00:07:16.803 --> 00:07:18.605
<c.magenta>或者详细展开按钮</c>

00:07:18.672 --> 00:07:21.008
<c.magenta>或者界面布局表格的单元格上</c>
<c.magenta>的展开箭头</c>

00:07:21.542 --> 00:07:24.578
<c.magenta>或者像本例中 简单的文本展示</c>

00:07:24.878 --> 00:07:27.981
<c.magenta>这些图片应该按照从右向左来展示</c>
<c.magenta>仅仅翻转这些图片</c>

00:07:28.048 --> 00:07:30.450
<c.magenta>就会生成用于从右向左布局的正确结果</c>

00:07:30.517 --> 00:07:34.521
<c.magenta>现在让我们翻转图像</c>
<c.magenta>现在圆圈处在了正确的位置</c>

00:07:36.723 --> 00:07:40.561
<c.magenta>在iOS中你可以通过使用imageFlipped</c>
<c.magenta>ForRightToLeftLayoutDirection来实现</c>

00:07:40.928 --> 00:07:44.231
<c.magenta>我们把它称为基于界面图像的</c>
<c.magenta>方法和它的返回对象</c>

00:07:44.398 --> 00:07:48.101
<c.magenta>当在用户界面图像视图中展示的时候</c>
<c.magenta>它会自动纠正从而正确显示</c>

00:07:48.302 --> 00:07:50.404
<c.magenta>如果这个应用在从右向左语言中运行</c>

00:07:53.207 --> 00:07:54.208
<c.magenta>最后...</c>

00:07:54.508 --> 00:07:58.779
<c.magenta>第三类是和方向密切相关的图像</c>

00:07:58.846 --> 00:08:01.648
<c.magenta>它们要更加复杂</c>

00:07:58.846 --> 00:08:01.648
<c.magenta>它们要更加复杂</c>

00:08:01.715 --> 00:08:04.384
<c.magenta>仅仅翻转图像会产生</c>

00:08:04.451 --> 00:08:06.954
<c.magenta>错误的从右向左结果</c>

00:08:07.254 --> 00:08:09.323
<c.magenta>在本例中是和前面相同的项目列表</c>

00:08:09.823 --> 00:08:13.126
<c.magenta>但是项目符号是对号而不是</c>
<c.magenta>圆圈 当我翻转图像的时候</c>

00:08:13.193 --> 00:08:15.162
<c.magenta>对号现在处于正确的位置</c>

00:08:15.229 --> 00:08:16.864
<c.magenta>但是对号也被翻转了</c>

00:08:16.930 --> 00:08:20.067
<c.magenta>而在这个从右向左的例子中</c>
<c.magenta>对号应该和原来保持一致</c>

00:08:20.434 --> 00:08:23.871
<c.magenta>此时我需要的是</c>
<c.magenta>两个单独的图像</c>

00:08:23.971 --> 00:08:25.506
<c.magenta>每个图像用于一个布局方向</c>

00:08:26.507 --> 00:08:28.542
<c.magenta>我可以为从右到左语言调节图像</c>

00:08:28.609 --> 00:08:32.446
<c.magenta>现在它显示正确了</c>
<c.magenta>现在我有两个不同的图像</c>

00:08:32.513 --> 00:08:35.381
<c.magenta>到现在为止你在iOS上</c>

00:08:35.448 --> 00:08:38.684
<c.magenta>实现了在运行时正确的展示图像</c>
<c.magenta>实际上是进行了运行时检查</c>

00:08:39.219 --> 00:08:41.621
<c.magenta>你要使用语义内容属性API</c>

00:08:41.688 --> 00:08:43.357
<c.magenta>来检查布局方向</c>

00:08:43.557 --> 00:08:46.760
<c.magenta>并且在运行时从文件库中</c>
<c.magenta>加载正确的图像</c>

00:08:48.929 --> 00:08:51.765
<c.magenta>在iOS 10中我们稍稍改变了一下</c>

00:08:52.199 --> 00:08:54.001
<c.magenta>我们不赞成</c>

00:08:54.067 --> 00:08:56.370
<c.magenta>为从右向左布局进行图像翻转</c>

00:08:57.204 --> 00:08:59.573
<c.magenta>为此我们引入了一个新的概念</c>

00:08:59.773 --> 00:09:02.142
<c.magenta>就可以让这三种图像正确显示</c>

00:08:59.773 --> 00:09:02.142
<c.magenta>就可以让这三种图像正确显示</c>

00:09:02.376 --> 00:09:06.413
<c.magenta>我们使用常规用户界面图像</c>
<c.magenta>或者Interface Builder中的图像命名</c>

00:09:07.080 --> 00:09:10.184
<c.magenta>在Xcode 8中引入全新的</c>
<c.magenta>方向图片资源库</c>

00:09:10.250 --> 00:09:12.686
<c.magenta>它位于资源目录中</c>

00:09:14.454 --> 00:09:15.389
<c.magenta>谢谢！</c>

00:09:17.824 --> 00:09:19.493
<c.magenta>这意味着什么？</c>

00:09:20.027 --> 00:09:22.529
<c.magenta>在Xcode中有你的图像资源库</c>

00:09:22.596 --> 00:09:25.599
<c.magenta>现在你有了新的概念和新的属性</c>
<c.magenta>你可设置它们</c>

00:09:25.832 --> 00:09:29.002
<c.magenta>它被称为方向属性</c>
<c.magenta>你可以设值不同的值</c>

00:09:29.069 --> 00:09:31.605
<c.magenta>对应前面的幻灯片中提到的概念</c>

00:09:31.672 --> 00:09:34.508
<c.magenta>一张图片可以有一个固定的方向</c>

00:09:36.043 --> 00:09:39.746
<c.magenta>你可以指定一张图片</c>
<c.magenta>用于一种布局方向</c>

00:09:39.813 --> 00:09:41.648
<c.magenta>也可以翻转适用于另一种布局</c>

00:09:41.715 --> 00:09:44.251
<c.magenta>由从左到右布局到从右到左布局转换</c>
<c.magenta>或者相反</c>

00:09:46.220 --> 00:09:48.922
<c.magenta>或者你也可以简单的指定</c>
<c.magenta>两张不同的图片</c>

00:09:48.989 --> 00:09:51.725
<c.magenta>在你的资源目录中</c>
<c.magenta>两张图片适用于不同的方向</c>

00:09:53.760 --> 00:09:56.363
<c.magenta>这些是图片资源库</c>
<c.magenta>你可能已经熟悉了</c>

00:09:56.430 --> 00:09:59.600
<c.magenta>其它种类的图片转化技术</c>

00:09:59.666 --> 00:10:04.371
<c.magenta>例如不同的像素密度或者</c>
<c.magenta>用于不同平台的图片</c>

00:09:59.666 --> 00:10:04.371
<c.magenta>例如不同的像素密度或者</c>
<c.magenta>用于不同平台的图片</c>

00:10:04.805 --> 00:10:08.609
<c.magenta>实际上它们是同一个概念</c>
<c.magenta>你所要做的只是</c>

00:10:08.675 --> 00:10:14.181
<c.magenta>在Interface Builder中设置图像或者</c>
<c.magenta>使用用户界面图像加载指定的图像</c>

00:10:15.883 --> 00:10:17.818
<c.magenta>现在我想给你们做个演示</c>

00:10:20.187 --> 00:10:21.288
<c.magenta>好...</c>

00:10:24.057 --> 00:10:26.193
<c.magenta>这是一个很简单的应用...</c>

00:10:27.427 --> 00:10:30.264
<c.magenta>让我运行一遍</c>
<c.magenta>展示一下它的界面</c>

00:10:31.064 --> 00:10:32.099
<c.magenta>它的名字叫旗...</c>

00:10:33.433 --> 00:10:38.739
<c.magenta>国际模式</c>
<c.magenta>当然它是一个猜国旗的游戏 耶</c>

00:10:39.873 --> 00:10:44.411
<c.magenta>这个游戏比较直接</c>
<c.magenta>多人玩很有趣</c>

00:10:45.345 --> 00:10:47.781
<c.magenta>在这里你只看到一个</c>
<c.magenta>非常简单的用户界面</c>

00:10:47.848 --> 00:10:50.217
<c.magenta>这是要猜的国旗</c>

00:10:50.450 --> 00:10:52.119
<c.magenta>底部有一个显示按钮</c>

00:10:52.186 --> 00:10:54.721
<c.magenta>谁知道这是哪个国家？</c>

00:10:55.022 --> 00:10:57.791
<c.magenta>我知道现在是星期五早上9点</c>
<c.magenta>是吗？</c>

00:10:57.858 --> 00:10:59.193
<c.magenta>对 好的 我听到了</c>

00:10:59.259 --> 00:11:00.961
<c.magenta>我听到很多人说法国 很好</c>

00:10:59.259 --> 00:11:00.961
<c.magenta>我听到很多人说法国 很好</c>

00:11:01.028 --> 00:11:03.163
<c.magenta>好 谢谢你！</c>

00:11:04.431 --> 00:11:08.068
<c.magenta>上面有两个箭头 一个向前</c>

00:11:08.135 --> 00:11:10.170
<c.magenta>指向下一个问题</c>
<c.magenta>一个箭头返回</c>

00:11:11.738 --> 00:11:14.041
<c.magenta>这是通过自动布局约束实现的</c>

00:11:14.107 --> 00:11:16.009
<c.magenta>这也是一个垂直栈视图</c>

00:11:16.877 --> 00:11:18.345
<c.magenta>谁知道这是哪个国家？</c>

00:11:18.846 --> 00:11:22.049
<c.magenta>噢 哇 好 很棒 听听 好</c>

00:11:22.549 --> 00:11:24.952
<c.magenta>好极了 是</c>
<c.magenta>这是我的祖国 葡萄牙</c>

00:11:25.118 --> 00:11:26.753
<c.magenta>好 现在你们明白了 对吗？</c>

00:11:27.421 --> 00:11:31.425
<c.magenta>现在我要给这个应用添加</c>
<c.magenta>对从右向左语言的支持</c>

00:11:32.092 --> 00:11:34.862
<c.magenta>现在我不会讲这种</c>

00:11:34.928 --> 00:11:37.297
<c.magenta>从右向左书写和阅读的语言</c>

00:11:37.598 --> 00:11:40.834
<c.magenta>然而如果我想看应用的界面是</c>
<c.magenta>什么样的 不必一定要会说这种语言</c>

00:11:41.602 --> 00:11:43.003
<c.magenta>Xcode允许我</c>

00:11:43.070 --> 00:11:45.572
<c.magenta>在自身模拟</c>
<c.magenta>一个从右向左的环境</c>

00:11:45.639 --> 00:11:50.010
<c.magenta>所以我要做的仅仅是编辑一下方案</c>

00:11:50.077 --> 00:11:53.113
<c.magenta>在这儿 顶部有编辑方案</c>

00:11:53.947 --> 00:11:57.317
<c.magenta>出现了下拉的列表 已经选择了运行</c>

00:11:57.384 --> 00:11:59.019
<c.magenta>在顶部有选项标签</c>

00:12:00.053 --> 00:12:03.724
<c.magenta>这儿是应用语言重载</c>

00:12:04.458 --> 00:12:08.161
<c.magenta>这儿列举了本应用支持的</c>
<c.magenta>本地化语言 现在只有英语</c>

00:12:08.228 --> 00:12:10.931
<c.magenta>但是我也能选择从右向左</c>
<c.magenta>的假语言设置</c>

00:12:11.265 --> 00:12:13.700
<c.magenta>下面运行应用</c>

00:12:13.767 --> 00:12:16.503
<c.magenta>用我的开发语言 英语</c>

00:12:16.637 --> 00:12:18.472
<c.magenta>但是它让用户界面认为</c>

00:12:18.539 --> 00:12:20.807
<c.magenta>它运行在从右向左的语言环境中</c>

00:12:21.275 --> 00:12:23.343
<c.magenta>让我这样设置一下 关闭</c>

00:12:23.710 --> 00:12:24.811
<c.magenta>重新运行应用</c>

00:12:25.812 --> 00:12:26.647
<c.magenta>好</c>

00:12:31.752 --> 00:12:33.353
<c.magenta>让我们再次运行这个游戏</c>

00:12:33.420 --> 00:12:35.389
<c.magenta>我们很快就能看到一些变化</c>

00:12:35.455 --> 00:12:37.357
<c.magenta>导航条是正确的</c>

00:12:37.424 --> 00:12:40.027
<c.magenta>后退按钮的位置正确</c>

00:12:41.328 --> 00:12:43.564
<c.magenta>并且我的用户界面看起来和以前大致相同</c>

00:12:43.797 --> 00:12:45.465
<c.magenta>除了你可能已经注意到了</c>

00:12:45.532 --> 00:12:49.069
<c.magenta>箭头的方向看起来不对</c>
<c.magenta>它们指向彼此</c>

00:12:49.570 --> 00:12:52.973
<c.magenta>它们的位置是正确的</c>
<c.magenta>前进按钮在左面</c>

00:12:53.040 --> 00:12:54.575
<c.magenta>对从右向左语言来说是正确的</c>

00:12:54.842 --> 00:12:57.311
<c.magenta>但是图像本身没有适应变化</c>
<c.magenta>做出改变</c>

00:12:57.477 --> 00:12:58.846
<c.magenta>现在我需要改变这种情况</c>

00:13:00.180 --> 00:13:02.850
<c.magenta>在Xcode 8中 我需要做的是</c>
<c.magenta>到我的图像资源库中</c>

00:13:02.916 --> 00:13:04.885
<c.magenta>我需要继续在此选择它们</c>

00:13:07.054 --> 00:13:09.456
<c.magenta>注意 我有两个不同的图像</c>

00:13:09.523 --> 00:13:11.758
<c.magenta>一个是后退箭头 一个是前进箭头</c>

00:13:13.227 --> 00:13:15.028
<c.magenta>我要到检查工具中</c>

00:13:15.229 --> 00:13:17.364
<c.magenta>选择新的方向属性</c>

00:13:17.431 --> 00:13:21.101
<c.magenta>把它从固定图像改为从左向右图像</c>

00:13:21.268 --> 00:13:23.770
<c.magenta>翻转为</c>
<c.magenta>相反的布局方向</c>

00:13:24.671 --> 00:13:26.707
<c.magenta>同样...</c>

00:13:27.374 --> 00:13:30.677
<c.magenta>前进箭头</c>
<c.magenta>你可以看到</c>

00:13:30.744 --> 00:13:33.480
<c.magenta>是从左向右图像的翻转</c>
<c.magenta>而不是固定方向</c>

00:13:34.248 --> 00:13:35.782
<c.magenta>现在再次运行我的应用</c>

00:13:38.685 --> 00:13:40.487
<c.magenta>让我们看看它的界面怎样</c>

00:13:47.127 --> 00:13:48.362
<c.magenta>酷 开始游戏</c>

00:13:48.996 --> 00:13:51.064
<c.magenta>好 这就是我要做的</c>

00:13:51.565 --> 00:13:54.401
<c.magenta>它完整的支持从右向左语言环境</c>

00:13:54.468 --> 00:13:57.371
<c.magenta>不需要额外写任何代码</c>

00:13:57.738 --> 00:13:59.373
<c.magenta>就实现了从右到左用户界面的设计</c>

00:13:59.540 --> 00:14:02.442
<c.magenta>自动布局、栈视图和现在的</c>
<c.magenta>图像资源库</c>

00:13:59.540 --> 00:14:02.442
<c.magenta>自动布局、栈视图和现在的</c>
<c.magenta>图像资源库</c>

00:14:02.509 --> 00:14:04.678
<c.magenta>为你的程序运行做了大大的提升</c>

00:14:04.912 --> 00:14:06.580
<c.magenta>对了 还有一个重要的组件</c>

00:14:06.647 --> 00:14:08.815
<c.magenta>页面视图控制器</c>
<c.magenta>会提供支持</c>

00:14:08.882 --> 00:14:13.554
<c.magenta>它会管理前进和后退的姿态</c>

00:14:13.620 --> 00:14:15.722
<c.magenta>因此我也不必为此多费心思</c>

00:14:16.290 --> 00:14:19.826
<c.magenta>这就是关于图像资源库的演示</c>
<c.magenta>让我们回到幻灯片</c>

00:14:21.628 --> 00:14:22.462
<c.magenta>太酷了！</c>

00:14:24.431 --> 00:14:28.068
<c.magenta>刚才简要介绍了新的</c>
<c.magenta>提供方向支持的图像资源库</c>

00:14:29.236 --> 00:14:31.772
<c.magenta>现在你也可以完成这一切</c>

00:14:31.839 --> 00:14:35.175
<c.magenta>如果你的图像没有直接</c>
<c.magenta>储存在文件库中</c>

00:14:35.242 --> 00:14:37.177
<c.magenta>比如你从远端的服务器上</c>
<c.magenta>获取内容</c>

00:14:37.244 --> 00:14:39.346
<c.magenta>并且它们具有方向性</c>

00:14:39.413 --> 00:14:41.081
<c.magenta>而且它们要在你的用户界面上显示出来</c>

00:14:42.216 --> 00:14:43.917
<c.magenta>对于没有储存在本地的图像</c>

00:14:43.984 --> 00:14:47.087
<c.magenta>你可以使用UIKit中的特征集合</c>
<c.magenta>来关联这些图像</c>

00:14:49.223 --> 00:14:51.391
<c.magenta>我们也有基于用户界面图像的方便方法</c>

00:14:51.458 --> 00:14:55.028
<c.magenta>让你指定一个图像是</c>
<c.magenta>另一个图像的相对物</c>

00:14:55.095 --> 00:14:56.430
<c.magenta>并且它应该被翻转以后</c>

00:14:57.364 --> 00:14:59.066
<c.magenta>再添加到图像资源库中</c>

00:15:00.334 --> 00:15:02.936
<c.magenta>这被称为imageWithHorizontally</c>
<c.magenta>FlippedOrientation方法</c>

00:15:03.003 --> 00:15:06.573
<c.magenta>如果我用代码展示给你的话</c>
<c.magenta>可能更简单一些</c>

00:15:07.341 --> 00:15:10.611
<c.magenta>这就是</c>
<c.magenta>我要做的就是创建图像资源库</c>

00:15:11.545 --> 00:15:14.181
<c.magenta>在这个例子中</c>
<c.magenta>我得到了一个从左向右图像</c>

00:15:14.248 --> 00:15:15.949
<c.magenta>从远端资源 比如服务器</c>

00:15:16.884 --> 00:15:19.620
<c.magenta>并且我的从右向左图像</c>
<c.magenta>是同一个图像</c>

00:15:19.686 --> 00:15:23.290
<c.magenta>但是被水平翻转了</c>
<c.magenta>我使用了用户界面图像上的新方法</c>

00:15:25.058 --> 00:15:27.094
<c.magenta>然后要注册两个图像</c>

00:15:27.160 --> 00:15:29.997
<c.magenta>对应每个布局方向</c>

00:15:30.430 --> 00:15:32.232
<c.magenta>使用从左向右和从右向左的特征集合</c>

00:15:35.102 --> 00:15:39.506
<c.magenta>你可能已经使用</c>
<c.magenta>或者编写过相似的代码</c>

00:15:39.573 --> 00:15:42.943
<c.magenta>你正好得到了和特征集合兼容的图像</c>

00:15:43.243 --> 00:15:44.611
<c.magenta>用于图像视图</c>

00:15:44.678 --> 00:15:48.282
<c.magenta>你不必做出改变</c>
<c.magenta>因为再说一遍 它们是相同的概念</c>

00:15:48.482 --> 00:15:51.351
<c.magenta>我们只是在它之上建立了</c>
<c.magenta>一个新的方向属性</c>

00:15:54.488 --> 00:15:58.258
<c.magenta>这就是方向图像</c>
<c.magenta>在Xcode 8和iOS 10中的新概念</c>

00:15:58.458 --> 00:16:00.294
<c.magenta>同样在watchOS和macOS中也是这样</c>

00:15:58.458 --> 00:16:00.294
<c.magenta>同样在watchOS和macOS中也是这样</c>

00:16:01.562 --> 00:16:05.432
<c.magenta>正如你前面看到的 我们有了一个</c>
<c.magenta>新的属性 叫做布局方向</c>

00:16:06.500 --> 00:16:08.535
<c.magenta>这是UIKit中新的UITrait集合</c>

00:16:08.602 --> 00:16:11.805
<c.magenta>因为它是新的属性</c>
<c.magenta>不要忘记以下几点</c>

00:16:12.105 --> 00:16:15.142
<c.magenta>在评估iOS中的布局方向时</c>

00:16:15.209 --> 00:16:16.310
<c.magenta>用这个新概念</c>

00:16:17.211 --> 00:16:20.414
<c.magenta>举个简单的例子</c>
<c.magenta>我有一个UIView子类</c>

00:16:20.747 --> 00:16:23.450
<c.magenta>在布局子视图上进行定制布局</c>

00:16:23.784 --> 00:16:26.153
<c.magenta>用这个简单的蓝盒子来表示</c>

00:16:28.255 --> 00:16:30.524
<c.magenta>由语义内容属性告知</c>

00:16:30.591 --> 00:16:32.826
<c.magenta>它是应该是从左到右还是从右到左</c>

00:16:32.893 --> 00:16:34.862
<c.magenta>这时你可以使用我们的API</c>

00:16:35.562 --> 00:16:37.331
<c.magenta>现在如果没有指明语言环境</c>

00:16:37.664 --> 00:16:40.567
<c.magenta>语义内容属性服从应用的环境</c>

00:16:40.634 --> 00:16:43.070
<c.magenta>它可能属于特征环境</c>

00:16:43.504 --> 00:16:45.072
<c.magenta>特征环境是一个特征集合</c>

00:16:45.138 --> 00:16:48.375
<c.magenta>或者可能是这个应用的通用</c>
<c.magenta>用户界面布局方向</c>

00:16:50.177 --> 00:16:54.915
<c.magenta>现在实际上</c>
<c.magenta>你的用户界面视图应该仅仅关心</c>

00:16:54.982 --> 00:16:57.618
<c.magenta>它是应该从左到右还是</c>
<c.magenta>从右到左 就是这样 好</c>

00:16:57.684 --> 00:16:59.753
<c.magenta>这相当复杂但是也确实很快</c>

00:17:00.487 --> 00:17:04.023
<c.magenta>我很高兴的告诉大家在iOS 10中</c>
<c.magenta>你只要这样做就可以了</c>

00:17:04.324 --> 00:17:06.894
<c.magenta>通过使用基于用户界面视图的新属性</c>

00:17:06.960 --> 00:17:10.364
<c.magenta>它是一个计算属性叫做</c>
<c.magenta>effectiveUserInterfaceLayoutDirection</c>

00:17:10.430 --> 00:17:12.665
<c.magenta>它会考虑所有的这些概念</c>

00:17:12.733 --> 00:17:15.469
<c.magenta>并且立即告诉你应该</c>

00:17:15.536 --> 00:17:17.171
<c.magenta>以从左向右还是从右向左布局</c>

00:17:19.406 --> 00:17:23.777
<c.magenta>如果你在布局中根本没有</c>
<c.magenta>使用UIKit或者UIView</c>

00:17:23.844 --> 00:17:26.946
<c.magenta>例如你使用SceneKit视图</c>
<c.magenta>或者SpriteKit视图制作游戏</c>

00:17:27.013 --> 00:17:29.883
<c.magenta>但是你仍然想利用这些</c>
<c.magenta>视图控制器概念</c>

00:17:29.950 --> 00:17:32.419
<c.magenta>你可以做到的</c>
<c.magenta>使用这些基于用户界面视图新的类程序</c>

00:17:32.786 --> 00:17:33.954
<c.magenta>给你同样的</c>

00:17:34.021 --> 00:17:38.325
<c.magenta>和语义内容属性有关的</c>
<c.magenta>同样的布局评估</c>

00:17:41.228 --> 00:17:43.430
<c.magenta>这就是在iOS中的新进展</c>
<c.magenta>的简要介绍</c>

00:17:43.530 --> 00:17:46.300
<c.magenta>我们看到了全新的方向图像资源库</c>

00:17:46.366 --> 00:17:49.002
<c.magenta>可以和Interface Builder以及</c>
<c.magenta>常规用户界面图像一起使用</c>

00:17:49.203 --> 00:17:52.172
<c.magenta>不需要额外写任何</c>
<c.magenta>对从右向左语言支持的代码</c>

00:17:53.307 --> 00:17:54.908
<c.magenta>对另外一些图像也是如此</c>

00:17:54.975 --> 00:17:56.944
<c.magenta>这些图像没有直接</c>
<c.magenta>储存在文件库中</c>

00:17:57.878 --> 00:17:59.680
<c.magenta>结果是我们不赞成在</c>

00:17:59.746 --> 00:18:02.649
<c.magenta>iOS 10中使用imageFlippedForRight</c>
<c.magenta>ToLeftLayoutDirection</c>

00:17:59.746 --> 00:18:02.649
<c.magenta>iOS 10中使用imageFlippedForRight</c>
<c.magenta>ToLeftLayoutDirection</c>

00:18:04.818 --> 00:18:07.554
<c.magenta>我们也讲解了基于用户界面视图</c>
<c.magenta>新的方便属性</c>

00:18:07.621 --> 00:18:10.490
<c.magenta>用于决定定制布局中的布局方向</c>

00:18:11.024 --> 00:18:12.392
<c.magenta>还有一个类程序</c>

00:18:12.459 --> 00:18:14.962
<c.magenta>使你在其它语言中</c>
<c.magenta>达到了同样的效果</c>

00:18:16.597 --> 00:18:21.401
<c.magenta>这就是iOS的情况</c>
<c.magenta>现在我要讲讲watchOS</c>

00:18:23.370 --> 00:18:25.973
<c.magenta>watchOS 2.1中</c>

00:18:26.373 --> 00:18:29.610
<c.magenta>添加了阿拉伯语和希伯来语</c>
<c.magenta>作为备选系统语言</c>

00:18:30.777 --> 00:18:36.683
<c.magenta>对于你的应用来说这意味着</c>
<c.magenta>watchKit现在能够识别从右向左语言</c>

00:18:37.384 --> 00:18:39.386
<c.magenta>所有watchKit元素</c>
<c.magenta>能正确的运行</c>

00:18:39.453 --> 00:18:41.255
<c.magenta>在选择阿拉伯语或者希伯来语的时候</c>

00:18:42.422 --> 00:18:44.224
<c.magenta>它的API和iOS的相似</c>

00:18:44.291 --> 00:18:48.795
<c.magenta>使你能够调整每个组</c>
<c.magenta>或者界面对象的实例</c>

00:18:50.697 --> 00:18:54.067
<c.magenta>重要的是也要注意 刚刚说过</c>

00:18:54.134 --> 00:18:56.003
<c.magenta>很自然的人们认为</c>

00:18:56.403 --> 00:18:59.940
<c.magenta>我们在iOS中看到的很多设计</c>
<c.magenta>概念也应用于Watch</c>

00:19:00.007 --> 00:19:04.478
<c.magenta>推送和弹出界面控制器也有方向</c>

00:19:04.545 --> 00:19:05.979
<c.magenta>应也为从右向左语言</c>
<c.magenta>环境下做出改变</c>

00:19:06.046 --> 00:19:08.215
<c.magenta>你应该记住这一点如果你的用户界面</c>

00:19:08.282 --> 00:19:09.950
<c.magenta>也要这样显示</c>

00:19:12.186 --> 00:19:15.756
<c.magenta>在水平布局中某些元素的优先级更高</c>
<c.magenta>要优先显示</c>

00:19:15.822 --> 00:19:20.194
<c.magenta>或者按顺序排列表格视图</c>
<c.magenta>单元格中的图像</c>

00:19:20.627 --> 00:19:22.930
<c.magenta>或者标签有顺序</c>
<c.magenta>都应该改变以适应这些变化</c>

00:19:23.931 --> 00:19:28.368
<c.magenta>对于Watch来说有一个特别的事物</c>
<c.magenta>那是时间的思想和概念</c>

00:19:28.435 --> 00:19:32.072
<c.magenta>具体来说就是顺时针和逆时针</c>

00:19:32.139 --> 00:19:35.309
<c.magenta>再回到那些细微差别和例外情况</c>

00:19:35.442 --> 00:19:39.246
<c.magenta>如果你有辐射状的、</c>
<c.magenta>顺时针或者逆时针的用户界面</c>

00:19:39.313 --> 00:19:41.915
<c.magenta>在布局方向中它们</c>
<c.magenta>应该没有变化</c>

00:19:41.982 --> 00:19:43.951
<c.magenta>这是需要谨记在心的一点</c>

00:19:44.017 --> 00:19:46.286
<c.magenta>除了刚才我们讨论过的概念以外</c>

00:19:48.388 --> 00:19:49.890
<c.magenta>你用API如何实现这个呢？</c>

00:19:49.957 --> 00:19:51.425
<c.magenta>因此正如我刚才说的</c>

00:19:51.491 --> 00:19:54.228
<c.magenta>运行在从右向左的语言环境下时</c>
<c.magenta>所有界面对象显示正确</c>

00:19:54.294 --> 00:19:56.864
<c.magenta>这包括按钮、滑块和开关</c>

00:19:58.165 --> 00:19:59.399
<c.magenta>除此之外</c>

00:19:59.466 --> 00:20:03.337
<c.magenta>方向和排列的概念也是自动改变的</c>

00:19:59.466 --> 00:20:03.337
<c.magenta>方向和排列的概念也是自动改变的</c>

00:20:03.403 --> 00:20:06.607
<c.magenta>这就是说水平界面的方向</c>

00:20:07.040 --> 00:20:11.011
<c.magenta>和它们的排列以及</c>

00:20:11.078 --> 00:20:13.313
<c.magenta>和父类有关的WatchKit中</c>
<c.magenta>对象的排列也相应的改变</c>

00:20:13.380 --> 00:20:16.884
<c.magenta>在上面的例子中 有一个简单的应用</c>

00:20:17.017 --> 00:20:20.220
<c.magenta>上面是水平排列的图片 左对齐 向左</c>

00:20:21.088 --> 00:20:23.524
<c.magenta>底部是垂直排列的图片 左对齐</c>

00:20:24.091 --> 00:20:27.995
<c.magenta>如果我在希伯来语中运行这个应用</c>
<c.magenta>左面都转移到了右面</c>

00:20:28.061 --> 00:20:31.665
<c.magenta>注意水平界面的元素的排列顺序</c>
<c.magenta>也发生了变化</c>

00:20:33.500 --> 00:20:35.903
<c.magenta>我们有语义内容属性</c>
<c.magenta>和iOS一样</c>

00:20:36.503 --> 00:20:38.205
<c.magenta>在我刚才讲过的实例中</c>

00:20:38.505 --> 00:20:43.243
<c.magenta>帮助管理各个界面、界面对象</c>
<c.magenta>或者对象组</c>

00:20:44.444 --> 00:20:47.414
<c.magenta>它的功能和其它属性的功能一样简单</c>

00:20:47.481 --> 00:20:49.216
<c.magenta>在WatchKit对象中</c>
<c.magenta>你可以设置这些属性</c>

00:20:51.752 --> 00:20:53.887
<c.magenta>如果你没使用WatchKit</c>
<c.magenta>来规划你的用户界面</c>

00:20:53.954 --> 00:20:56.957
<c.magenta>而是使用SceneKit或者SpriteKit</c>
<c.magenta>在WatchOS 3中它们还是很新的</c>

00:20:57.491 --> 00:20:59.159
<c.magenta>你仍然能够评估</c>

00:20:59.226 --> 00:21:02.496
<c.magenta>布局方向 如果你记住</c>
<c.magenta>语义内容属性的话</c>

00:20:59.226 --> 00:21:02.496
<c.magenta>布局方向 如果你记住</c>
<c.magenta>语义内容属性的话</c>

00:21:02.563 --> 00:21:06.133
<c.magenta>在这儿我只是使用一个类程序</c>
<c.magenta>就得到了方向</c>

00:21:06.200 --> 00:21:08.001
<c.magenta>用于界面设备 一旦我有了它</c>

00:21:08.068 --> 00:21:10.704
<c.magenta>我只是检查一下它是</c>
<c.magenta>从左向右还是从右向左</c>

00:21:13.006 --> 00:21:15.776
<c.magenta>这是对watchOS 2.1中</c>
<c.magenta>新添加的特性的简要介绍</c>

00:21:16.310 --> 00:21:19.479
<c.magenta>它和iOS的思想和原则是一样的</c>

00:21:20.814 --> 00:21:23.383
<c.magenta>所有watchKit元素做得很好</c>
<c.magenta>使界面显示正确</c>

00:21:23.483 --> 00:21:24.685
<c.magenta>而不需要额外的工作</c>

00:21:25.052 --> 00:21:28.522
<c.magenta>任何在定制的用户界面或者元素中</c>
<c.magenta>你也应该考虑到这一点</c>

00:21:29.122 --> 00:21:32.626
<c.magenta>当然要记住我刚才提到的</c>
<c.magenta>微小差别和例外情况</c>

00:21:32.693 --> 00:21:34.661
<c.magenta>以及你可以使用语义内容属性</c>

00:21:34.895 --> 00:21:37.931
<c.magenta>在运行时帮助决定布局方向</c>

00:21:39.499 --> 00:21:41.735
<c.magenta>现在我要把时间交给Sara</c>

00:21:41.902 --> 00:21:44.705
<c.magenta>讲解一下macOS和</c>
<c.magenta>如何处理双向文本</c>

00:21:44.972 --> 00:21:47.975
<c.magenta>非常感谢！</c>
<c.magenta>希望你们度过一个愉快的周五 谢谢！</c>

00:21:50.143 --> 00:21:50.978
<c.magenta>谢谢！</c>

00:21:52.112 --> 00:21:53.514
<c.magenta>首先谈谈macOS</c>

00:21:54.214 --> 00:21:56.984
<c.magenta>正如其它平台</c>
<c.magenta>iOS和watchOS</c>

00:21:57.150 --> 00:21:59.586
<c.magenta>对于macOS来说概念</c>
<c.magenta>是完全一样的</c>

00:21:59.887 --> 00:22:02.489
<c.magenta>如果你使用标准AppKit控制层</c>

00:21:59.887 --> 00:22:02.489
<c.magenta>如果你使用标准AppKit控制层</c>

00:22:03.056 --> 00:22:04.925
<c.magenta>你会得到视图的准确呈现</c>

00:22:04.992 --> 00:22:07.628
<c.magenta>当你在从右向左环境中</c>
<c.magenta>运行你的应用时</c>

00:22:07.694 --> 00:22:11.298
<c.magenta>现在我想带你们浏览一下</c>
<c.magenta>系统的一些实例</c>

00:22:11.365 --> 00:22:13.333
<c.magenta>展示一下动态控制是如何运行的</c>

00:22:14.201 --> 00:22:17.538
<c.magenta>首先从我们称之为系统层控制开始</c>

00:22:17.905 --> 00:22:20.974
<c.magenta>我们把它称之为系统层控制</c>
<c.magenta>是因为布局</c>

00:22:21.041 --> 00:22:23.810
<c.magenta>遵循用户运行的系统语言</c>

00:22:23.877 --> 00:22:25.779
<c.magenta>而不是你的应用布局方向运行的</c>

00:22:26.113 --> 00:22:28.715
<c.magenta>让我们看一些实例可能更清楚一些</c>

00:22:28.882 --> 00:22:31.351
<c.magenta>让我们看一下这儿的菜单条</c>

00:22:32.586 --> 00:22:35.022
<c.magenta>我的系统在从右向左环境中运行</c>

00:22:35.455 --> 00:22:36.857
<c.magenta>正如你看到的</c>

00:22:37.791 --> 00:22:40.594
<c.magenta>上面的菜单条从窗口的右边开始</c>

00:22:41.461 --> 00:22:45.699
<c.magenta>而且菜单内的元素也是从右向左扩展的</c>

00:22:46.600 --> 00:22:47.835
<c.magenta>这个概念...</c>

00:22:49.403 --> 00:22:51.071
<c.magenta>也适用于NSWindow</c>

00:22:51.538 --> 00:22:52.639
<c.magenta>通过设计</c>

00:22:52.706 --> 00:22:56.109
<c.magenta>我们决定使窗口控制保持一致</c>

00:22:56.310 --> 00:22:59.646
<c.magenta>在所有应用中不管你的</c>
<c.magenta>应用有没有进行本地化</c>

00:23:00.147 --> 00:23:04.051
<c.magenta>如果你有自己的逻辑</c>
<c.magenta>并且你进行自己的定制控制</c>

00:23:04.117 --> 00:23:07.120
<c.magenta>你需要考虑到这一点</c>
<c.magenta>并且升级你的逻辑</c>

00:23:07.187 --> 00:23:09.890
<c.magenta>即使你的应用不支持阿拉伯语</c>
<c.magenta>或者希伯来语本地化</c>

00:23:11.358 --> 00:23:13.493
<c.magenta>下一个 应用层控制</c>

00:23:13.927 --> 00:23:15.495
<c.magenta>这是应用层控制</c>

00:23:16.230 --> 00:23:19.633
<c.magenta>应用的布局方向遵循你的应用语言</c>

00:23:20.167 --> 00:23:22.669
<c.magenta>例如NSTableView</c>

00:23:23.537 --> 00:23:26.240
<c.magenta>这是一个任务监控应用的截屏</c>

00:23:26.473 --> 00:23:28.075
<c.magenta>我们使用栈表视图</c>

00:23:28.141 --> 00:23:31.178
<c.magenta>你可以看到表视图的列自动改变了方向</c>

00:23:31.245 --> 00:23:33.680
<c.magenta>当我们在阿拉伯语</c>
<c.magenta>中运行应用时</c>

00:23:34.381 --> 00:23:36.984
<c.magenta>另一个例子</c>
<c.magenta>NSCollectionView</c>

00:23:37.885 --> 00:23:39.219
<c.magenta>来自搜索应用</c>

00:23:39.286 --> 00:23:42.089
<c.magenta>集合视图布局遵循从右向左语言</c>

00:23:42.723 --> 00:23:44.157
<c.magenta>还有一个例子</c>

00:23:45.425 --> 00:23:48.695
<c.magenta>NSScrollView</c>
<c.magenta>用了相同的概念</c>

00:23:48.962 --> 00:23:52.766
<c.magenta>我们也转换了滚动视图中</c>
<c.magenta>滚动条的位置</c>

00:23:53.100 --> 00:23:56.637
<c.magenta>这将避免和应用的内容重叠</c>

00:23:57.971 --> 00:24:02.442
<c.magenta>注意如果你在应用中使用页面视图</c>

00:23:57.971 --> 00:24:02.442
<c.magenta>注意如果你在应用中使用页面视图</c>

00:24:02.709 --> 00:24:05.279
<c.magenta>它的滚动条的工作方式略有不同</c>

00:24:05.579 --> 00:24:08.815
<c.magenta>WebKit会查阅你的网页内容</c>

00:24:08.916 --> 00:24:11.451
<c.magenta>然后评估它的HTML属性</c>

00:24:11.752 --> 00:24:14.621
<c.magenta>然后基于此来确定滚动条的位置</c>

00:24:15.255 --> 00:24:18.125
<c.magenta>例如我运行了Safari的英文版</c>

00:24:18.192 --> 00:24:20.060
<c.magenta>我进入了英文版Apple.com</c>

00:24:20.827 --> 00:24:23.330
<c.magenta>看看我的网页内容</c>

00:24:23.730 --> 00:24:24.731
<c.magenta>我会得到</c>

00:24:24.998 --> 00:24:27.267
<c.magenta>方向的属性被设置为从左向右</c>

00:24:27.334 --> 00:24:30.070
<c.magenta>我们把滚动条设置在右边</c>

00:24:31.505 --> 00:24:33.841
<c.magenta>如果我采用同样的设置</c>

00:24:34.241 --> 00:24:36.577
<c.magenta>但这次我进入了</c>
<c.magenta>阿拉伯语版的Apple.com</c>

00:24:36.643 --> 00:24:37.978
<c.magenta>看看它的内容</c>

00:24:38.512 --> 00:24:42.249
<c.magenta>现在我的内容是阿拉伯语</c>
<c.magenta>看看这儿的方向属性</c>

00:24:42.316 --> 00:24:43.450
<c.magenta>它被设置为从右向左</c>

00:24:43.517 --> 00:24:45.419
<c.magenta>现在我们转换了滚动条的位置</c>

00:24:46.053 --> 00:24:49.890
<c.magenta>这些是WebKit控制和</c>
<c.magenta>AppKit控制的例子</c>

00:24:50.324 --> 00:24:52.726
<c.magenta>现在我想谈谈API</c>

00:24:55.896 --> 00:24:57.698
<c.magenta>我们在上一个例子上看到</c>

00:24:57.764 --> 00:25:01.034
<c.magenta>WebKit控制和</c>
<c.magenta>AppKit控制略有不同</c>

00:24:57.764 --> 00:25:01.034
<c.magenta>WebKit控制和</c>
<c.magenta>AppKit控制略有不同</c>

00:25:01.568 --> 00:25:05.506
<c.magenta>在WebKit中</c>
<c.magenta>我们提供了新的API</c>

00:25:05.572 --> 00:25:08.041
<c.magenta>叫做userInterfaceDirectionPolicy</c>

00:25:08.442 --> 00:25:13.981
<c.magenta>我刚才提到过</c>
<c.magenta>网页的内容被设置为默认值</c>

00:25:14.047 --> 00:25:16.750
<c.magenta>但是如果你愿意你可以改变这个值</c>

00:25:16.817 --> 00:25:19.653
<c.magenta>例如 你的滚动条遵循系统语言</c>

00:25:19.720 --> 00:25:22.055
<c.magenta>而不是网页的内容</c>

00:25:22.256 --> 00:25:24.992
<c.magenta>你可以使用系统</c>
<c.magenta>而不是内容来改变它的值</c>

00:25:26.693 --> 00:25:28.962
<c.magenta>下面让我们谈谈AppKit API</c>

00:25:31.698 --> 00:25:32.900
<c.magenta>首先简述一下</c>

00:25:33.367 --> 00:25:36.570
<c.magenta>如果你使用标准AppKit控制层</c>
<c.magenta>你什么也不用做</c>

00:25:36.637 --> 00:25:38.438
<c.magenta>所有的工作都是自动完成的</c>

00:25:39.139 --> 00:25:42.676
<c.magenta>现在你可能有特殊的设计</c>

00:25:42.743 --> 00:25:45.045
<c.magenta>你想自己布局你的视图</c>

00:25:45.746 --> 00:25:49.216
<c.magenta>我们强烈建议你使用</c>
<c.magenta>StackViews和GridViews</c>

00:25:49.283 --> 00:25:51.118
<c.magenta>GridViews是</c>
<c.magenta>macOS新添加的</c>

00:25:51.351 --> 00:25:53.554
<c.magenta>这些工具都非常强大</c>

00:25:53.620 --> 00:25:56.890
<c.magenta>因为它们在底层为你</c>
<c.magenta>建立自动布局约束</c>

00:25:57.491 --> 00:25:59.893
<c.magenta>它们也使用开头和结尾约束</c>

00:25:59.960 --> 00:26:01.828
<c.magenta>它会自动翻转视图</c>

00:25:59.960 --> 00:26:01.828
<c.magenta>它会自动翻转视图</c>

00:26:01.895 --> 00:26:04.164
<c.magenta>当你在从右向左环境下运行应用时</c>

00:26:05.399 --> 00:26:08.902
<c.magenta>如果不使用StackViews或</c>
<c.magenta>GridViews 就使用自动布局</c>

00:26:09.336 --> 00:26:12.573
<c.magenta>如果你对此感到很陌生</c>
<c.magenta>前几年关于这个有很棒的演讲</c>

00:26:12.639 --> 00:26:14.942
<c.magenta>今天下午还有一场演讲</c>

00:26:15.008 --> 00:26:17.144
<c.magenta>叫做自动布局的最新进展</c>
<c.magenta>去看看吧</c>

00:26:18.111 --> 00:26:21.949
<c.magenta>最后如果你使用</c>
<c.magenta>基类方法中的storyboards</c>

00:26:22.015 --> 00:26:24.751
<c.magenta>我们也为你做好了文本的翻转</c>

00:26:27.154 --> 00:26:30.257
<c.magenta>此外 在NSView中有一个API</c>

00:26:30.390 --> 00:26:33.961
<c.magenta>让你获取和设置视图的布局方向</c>

00:26:34.361 --> 00:26:36.897
<c.magenta>举个例子 我有一个横幅滑块</c>

00:26:36.964 --> 00:26:38.999
<c.magenta>它有两个值 左和右</c>

00:26:39.466 --> 00:26:43.303
<c.magenta>我想让滑块和本地化语言保持一致</c>

00:26:43.370 --> 00:26:46.173
<c.magenta>这样做是合理的</c>
<c.magenta>左应该总是待在左边</c>

00:26:46.240 --> 00:26:48.408
<c.magenta>右应该总是待在右边</c>

00:26:48.842 --> 00:26:50.711
<c.magenta>这完全没有问题 如果我设置</c>

00:26:50.777 --> 00:26:53.580
<c.magenta>滑块的布局方向总是从左向右</c>

00:26:54.615 --> 00:26:57.584
<c.magenta>我刚才说过</c>
<c.magenta>在NSView中有一个API</c>

00:26:57.818 --> 00:26:59.086
<c.magenta>让你能够这样做</c>

00:26:59.486 --> 00:27:03.690
<c.magenta>默认值设置给</c>
<c.magenta>NSApp.userInterfaceLayoutDirection</c>

00:26:59.486 --> 00:27:03.690
<c.magenta>默认值设置给</c>
<c.magenta>NSApp.userInterfaceLayoutDirection</c>

00:27:04.791 --> 00:27:07.261
<c.magenta>但是你可以重新设置为左或者右</c>

00:27:07.494 --> 00:27:09.596
<c.magenta>取决于你想怎样设计视图</c>

00:27:11.031 --> 00:27:13.600
<c.magenta>现在谈一下图像</c>

00:27:15.903 --> 00:27:17.938
<c.magenta>在刚才的Joaquim的演示中</c>

00:27:18.038 --> 00:27:20.574
<c.magenta>我们引入了方向图像资源库</c>

00:27:21.108 --> 00:27:22.075
<c.magenta>它位于资源目录中</c>

00:27:22.142 --> 00:27:24.811
<c.magenta>在macOS中也有资源目录</c>

00:27:24.878 --> 00:27:27.814
<c.magenta>它们和iOS以同样的方式工作</c>

00:27:27.881 --> 00:27:29.816
<c.magenta>在这儿我就不详细讲解了</c>

00:27:30.150 --> 00:27:31.985
<c.magenta>但是有时</c>

00:27:32.052 --> 00:27:34.588
<c.magenta>在应用文件库中没有相应的图像</c>

00:27:34.655 --> 00:27:38.725
<c.magenta>而你想从远端 例如服务器中</c>
<c.magenta>得到相应的图像</c>

00:27:39.359 --> 00:27:42.563
<c.magenta>在NSImageRep中</c>
<c.magenta>有一个API</c>

00:27:42.629 --> 00:27:45.432
<c.magenta>让你能够实现这个功能</c>
<c.magenta>用代码注册你的图像</c>

00:27:45.933 --> 00:27:48.969
<c.magenta>让我举个例子看看它是如何工作的</c>

00:27:51.471 --> 00:27:52.639
<c.magenta>我刚才说过</c>

00:27:52.906 --> 00:27:56.009
<c.magenta>有时你的图像储存在另一个地方</c>

00:27:56.176 --> 00:27:57.511
<c.magenta>你想注册它们</c>

00:27:57.578 --> 00:28:00.581
<c.magenta>首先你需要做的是</c>
<c.magenta>创建从左向右图像</c>

00:27:57.578 --> 00:28:00.581
<c.magenta>首先你需要做的是</c>
<c.magenta>创建从左向右图像</c>

00:28:00.647 --> 00:28:02.249
<c.magenta>通过使用NSImage API</c>

00:28:02.916 --> 00:28:03.951
<c.magenta>有了图像以后</c>

00:28:04.017 --> 00:28:06.587
<c.magenta>你需要把布局方向设置为从左向右</c>

00:28:07.120 --> 00:28:09.189
<c.magenta>对于从右向左图像来说也是如此</c>

00:28:09.423 --> 00:28:12.659
<c.magenta>但是这一次你需要使用</c>
<c.magenta>NSImageRep API</c>

00:28:13.060 --> 00:28:15.229
<c.magenta>当你有了两个图像以后</c>

00:28:15.762 --> 00:28:20.701
<c.magenta>你需要注册从右向左图像展示</c>

00:28:20.767 --> 00:28:24.304
<c.magenta>和从左向右图像展示</c>
<c.magenta>这可以通过使用其它展示API来实现</c>

00:28:24.705 --> 00:28:27.541
<c.magenta>当你注册了两个图像以后</c>

00:28:27.808 --> 00:28:30.777
<c.magenta>在运行时加载正确的图像就可以了</c>

00:28:31.211 --> 00:28:32.446
<c.magenta>无论你运行应用</c>

00:28:32.513 --> 00:28:35.382
<c.magenta>在从左向右还是从右向左环境下</c>

00:28:37.885 --> 00:28:38.719
<c.magenta>最后</c>

00:28:38.819 --> 00:28:43.490
<c.magenta>我们为普通AppKit控制层</c>
<c.magenta>设计了新的方便初始化工具</c>

00:28:44.024 --> 00:28:46.894
<c.magenta>为一个附件 例如</c>
<c.magenta>它会设置...</c>

00:28:47.694 --> 00:28:50.564
<c.magenta>对齐属性和自动布局属性</c>

00:28:50.631 --> 00:28:51.632
<c.magenta>完全正确</c>
<c.magenta>无需你操心</c>

00:28:52.366 --> 00:28:53.534
<c.magenta>对于NSButton</c>

00:28:54.434 --> 00:28:57.304
<c.magenta>它会翻转图像 复选框的位置</c>

00:28:57.371 --> 00:29:00.040
<c.magenta>单选按钮的位置</c>
<c.magenta>这一切都是自动进行的</c>

00:28:57.371 --> 00:29:00.040
<c.magenta>单选按钮的位置</c>
<c.magenta>这一切都是自动进行的</c>

00:29:00.507 --> 00:29:02.376
<c.magenta>现在我为你们做个演示</c>

00:29:02.442 --> 00:29:04.411
<c.magenta>来总结一下本次演讲的内容</c>

00:29:10.317 --> 00:29:11.151
<c.magenta>好</c>

00:29:16.089 --> 00:29:20.661
<c.magenta>太酷了！我从Joaquim的演示中</c>
<c.magenta>得到启发 创造了一个记分牌的应用</c>

00:29:20.994 --> 00:29:24.598
<c.magenta>当我们进行比赛的时候</c>
<c.magenta>可以用它纪录分数</c>

00:29:24.798 --> 00:29:26.200
<c.magenta>这儿有一个简单的...</c>

00:29:27.768 --> 00:29:30.270
<c.magenta>应用 你可以在视图控制器中看到它</c>

00:29:30.337 --> 00:29:31.805
<c.magenta>这儿仅仅是一个表格视图</c>

00:29:32.239 --> 00:29:34.775
<c.magenta>我已经设置好了自动布局约束</c>

00:29:35.242 --> 00:29:38.645
<c.magenta>在表格视图单元格中有一张图片</c>

00:29:38.712 --> 00:29:41.315
<c.magenta>一个文本域 一个下一个按钮</c>
<c.magenta>非常简单</c>

00:29:41.715 --> 00:29:43.517
<c.magenta>这儿我用StackViews</c>

00:29:43.584 --> 00:29:46.420
<c.magenta>来布局表格视图单元格中的元素</c>

00:29:46.486 --> 00:29:49.423
<c.magenta>我不需要关心设置自动布局约束</c>

00:29:49.489 --> 00:29:52.092
<c.magenta>因为文本视图已经为我做好了</c>

00:29:52.860 --> 00:29:53.861
<c.magenta>在底部</c>

00:29:54.361 --> 00:29:57.264
<c.magenta>有一个标签</c>
<c.magenta>我可以在那儿更新最高分</c>

00:29:57.331 --> 00:29:59.366
<c.magenta>和最好玩家</c>
<c.magenta>很简单</c>

00:30:00.200 --> 00:30:01.568
<c.magenta>现在我需要做什么呢？</c>

00:30:01.635 --> 00:30:03.537
<c.magenta>我将模拟从右向左环境</c>

00:30:03.604 --> 00:30:06.039
<c.magenta>这可以在我的应用上直接进行</c>
<c.magenta>看看是什么样子</c>

00:30:07.641 --> 00:30:10.477
<c.magenta>好 我要进入Scheme Editor</c>

00:30:11.044 --> 00:30:12.713
<c.magenta>进入应用语言</c>

00:30:12.779 --> 00:30:15.282
<c.magenta>选择从右向左的假语言</c>

00:30:15.349 --> 00:30:16.783
<c.magenta>而不是系统语言</c>

00:30:17.518 --> 00:30:19.286
<c.magenta>我要重新编译运行我的应用</c>

00:30:21.722 --> 00:30:23.257
<c.magenta>现在正在编译 好</c>

00:30:23.323 --> 00:30:25.893
<c.magenta>你可以看到</c>
<c.magenta>没有写一行代码</c>

00:30:25.959 --> 00:30:29.596
<c.magenta>仅通过使用storyboard、StackViews</c>
<c.magenta>和自动布局就实现了它的功能</c>

00:30:29.963 --> 00:30:30.898
<c.magenta>就是这样</c>

00:30:31.331 --> 00:30:34.301
<c.magenta>现在我的应用在从右向左</c>
<c.magenta>环境中看上去很好</c>

00:30:34.368 --> 00:30:35.302
<c.magenta>下面我要做什么呢？</c>

00:30:35.369 --> 00:30:38.172
<c.magenta>我要回到我的代码</c>

00:30:39.406 --> 00:30:40.507
<c.magenta>并且...</c>

00:30:41.375 --> 00:30:43.977
<c.magenta>我要运行我的应用 这一次</c>

00:30:45.145 --> 00:30:49.383
<c.magenta>用系统语言而不是</c>
<c.magenta>从右向左的假语言</c>

00:30:49.449 --> 00:30:52.786
<c.magenta>这次要在英语环境中运行应用</c>
<c.magenta>因为系统语言是英语</c>

00:30:54.087 --> 00:30:55.522
<c.magenta>现在再次运行我的应用</c>

00:30:57.925 --> 00:31:00.027
<c.magenta>为什么我要这样做</c>
<c.magenta>我只是想向你展示</c>

00:30:57.925 --> 00:31:00.027
<c.magenta>为什么我要这样做</c>
<c.magenta>我只是想向你展示</c>

00:31:00.093 --> 00:31:02.563
<c.magenta>国际用户界面的另一个功能</c>

00:31:03.263 --> 00:31:06.200
<c.magenta>我的应用在英语中看起来也很棒</c>

00:31:06.533 --> 00:31:08.068
<c.magenta>现在我要加入游戏</c>

00:31:08.135 --> 00:31:09.570
<c.magenta>我要先添加一个游戏者</c>

00:31:12.439 --> 00:31:15.709
<c.magenta>我要点击这儿 添加新的游戏者</c>
<c.magenta>很有趣</c>

00:31:15.976 --> 00:31:18.145
<c.magenta>我想用我的母语写我的名字</c>

00:31:18.212 --> 00:31:20.214
<c.magenta>继续 修改键入的语言</c>

00:31:21.114 --> 00:31:22.749
<c.magenta>使用阿拉伯语而不是英语</c>

00:31:23.617 --> 00:31:25.853
<c.magenta>好 我用阿拉伯语键入我的名字...</c>

00:31:27.120 --> 00:31:27.988
<c.magenta>好</c>

00:31:28.822 --> 00:31:31.058
<c.magenta>我其实也很擅长猜国旗</c>

00:31:31.124 --> 00:31:33.227
<c.magenta>我会在游戏中取胜</c>
<c.magenta>我不会浪费时间</c>

00:31:33.293 --> 00:31:35.195
<c.magenta>现在我要更新我的分数</c>

00:31:35.395 --> 00:31:36.263
<c.magenta>好的...</c>

00:31:37.764 --> 00:31:39.433
<c.magenta>好 看看发生了什么</c>

00:31:39.499 --> 00:31:41.635
<c.magenta>仅仅是更新我的名字</c>

00:31:42.369 --> 00:31:46.840
<c.magenta>我的标签就彻底打乱了</c>
<c.magenta>因为它跳到了右面</c>

00:31:46.907 --> 00:31:51.545
<c.magenta>现在标签上是</c>
<c.magenta>“ ！得了最高分12 Sara”</c>

00:31:51.612 --> 00:31:53.080
<c.magenta>这看上去不对</c>

00:31:53.881 --> 00:31:55.616
<c.magenta>下面</c>

00:31:55.682 --> 00:31:58.819
<c.magenta>我要展示如何解决这个问题</c>

00:31:58.886 --> 00:32:02.456
<c.magenta>你怎样才能使文本方向正确呢？</c>

00:31:58.886 --> 00:32:02.456
<c.magenta>你怎样才能使文本方向正确呢？</c>

00:32:02.856 --> 00:32:04.324
<c.magenta>让我们回到幻灯片</c>

00:32:14.067 --> 00:32:17.671
<c.magenta>刚才我们在演示应用中看到了</c>
<c.magenta>仅仅是用阿拉伯语输入我的姓名</c>

00:32:18.038 --> 00:32:19.873
<c.magenta>就打乱了文本的呈现</c>

00:32:20.307 --> 00:32:22.876
<c.magenta>现在看看如何才能修复这个问题</c>

00:32:27.181 --> 00:32:31.585
<c.magenta>在应用中呈现文本非常重要</c>

00:32:32.386 --> 00:32:36.623
<c.magenta>无论你的应用是否支持某种语言</c>
<c.magenta>的本地化都没有关系</c>

00:32:36.690 --> 00:32:39.493
<c.magenta>即使你的应用只支持英语</c>

00:32:39.793 --> 00:32:45.132
<c.magenta>你的用户仍然可以用</c>
<c.magenta>其它语言阅读和书写内容</c>

00:32:45.666 --> 00:32:47.100
<c.magenta>当涉及到文本的时候</c>

00:32:47.801 --> 00:32:51.338
<c.magenta>重要的是要记住文本排列</c>

00:32:51.405 --> 00:32:54.208
<c.magenta>和文本方向是两个不同的概念</c>

00:32:54.775 --> 00:32:57.911
<c.magenta>例如在这儿 有一段英文片段</c>

00:32:58.078 --> 00:33:00.747
<c.magenta>它是右对齐排列 很好</c>
<c.magenta>它看上去不错</c>

00:32:58.078 --> 00:33:00.747
<c.magenta>它是右对齐排列 很好</c>
<c.magenta>它看上去不错</c>

00:33:01.281 --> 00:33:03.217
<c.magenta>因为你可能需要那样设计</c>

00:33:03.283 --> 00:33:04.918
<c.magenta>这没有打乱文本的展示</c>

00:33:05.752 --> 00:33:10.190
<c.magenta>同样在这个例子中</c>
<c.magenta>这一次是左对齐排列</c>

00:33:10.390 --> 00:33:13.160
<c.magenta>但是我把书写顺序改为从右向左</c>

00:33:13.227 --> 00:33:15.128
<c.magenta>这就会打乱文本的呈现</c>

00:33:15.195 --> 00:33:18.665
<c.magenta>在本例中你会看到感叹号的位置不对</c>

00:33:19.600 --> 00:33:21.902
<c.magenta>让我们再展开一点</c>

00:33:22.302 --> 00:33:25.606
<c.magenta>在我们所有的平台中</c>
<c.magenta>默认都是横向对齐</c>

00:33:25.672 --> 00:33:27.541
<c.magenta>如果你没有更改它的值</c>

00:33:27.975 --> 00:33:31.044
<c.magenta>在大多数情况下我们会</c>
<c.magenta>得到正确的显示</c>

00:33:31.378 --> 00:33:34.548
<c.magenta>我们讲讲文本方向</c>
<c.magenta>它更复杂一点</c>

00:33:37.351 --> 00:33:38.685
<c.magenta>这儿我要简要</c>

00:33:38.752 --> 00:33:43.390
<c.magenta>介绍一下文本引擎的算法</c>

00:33:43.590 --> 00:33:46.894
<c.magenta>如果你想了解更多的</c>
<c.magenta>关于Unicode的算法</c>

00:33:47.094 --> 00:33:49.997
<c.magenta>你可以查阅</c>
<c.magenta>Unicode.org中的详述</c>

00:33:50.631 --> 00:33:52.132
<c.magenta>我们从最简单的基础开始</c>

00:33:53.800 --> 00:33:56.370
<c.magenta>Unicode字符有三种类型</c>

00:33:56.803 --> 00:33:59.773
<c.magenta>一种是严格从左向右字符</c>

00:33:59.940 --> 00:34:00.774
<c.magenta>例如</c>

00:33:59.940 --> 00:34:00.774
<c.magenta>例如</c>

00:34:01.408 --> 00:34:05.212
<c.magenta>我们所熟悉的有拉丁语、汉语或者日语</c>

00:34:06.346 --> 00:34:08.982
<c.magenta>一种是严格的从右向左字符</c>

00:34:09.049 --> 00:34:13.853
<c.magenta>例如阿拉伯语、希伯来语、</c>
<c.magenta>波斯语或者乌尔都语</c>

00:34:13.920 --> 00:34:17.623
<c.magenta>还有一些字符根本没有方向</c>

00:34:17.991 --> 00:34:20.928
<c.magenta>我们把这些称为中立</c>
<c.magenta>或者非严格字符</c>

00:34:21.161 --> 00:34:22.529
<c.magenta>例如 空格</c>

00:34:25.165 --> 00:34:27.568
<c.magenta>文本引擎是如何决定</c>

00:34:27.734 --> 00:34:30.437
<c.magenta>某个片段的方向性的？</c>

00:34:32.172 --> 00:34:36.476
<c.magenta>文本引擎判断首先出现的</c>
<c.magenta>严格Unicode字符是什么类型</c>

00:34:36.543 --> 00:34:37.476
<c.magenta>就是这样</c>

00:34:37.543 --> 00:34:38.879
<c.magenta>如果是严格从右向左字符</c>

00:34:38.946 --> 00:34:40.880
<c.magenta>整个章节就遵循从右向左方向</c>

00:34:40.947 --> 00:34:42.049
<c.magenta>如果是严格从左向右字符</c>

00:34:42.114 --> 00:34:44.384
<c.magenta>整个章节就遵循从左向右方向</c>

00:34:44.784 --> 00:34:47.987
<c.magenta>让我们举个例子看看</c>
<c.magenta>它是如何工作的</c>

00:34:48.688 --> 00:34:50.991
<c.magenta>现在我把演示应用中的标签单独取出来</c>

00:34:51.291 --> 00:34:53.260
<c.magenta>%@得了最高分</c>

00:34:54.328 --> 00:34:59.233
<c.magenta>我不知道在运行时%@会被什么代替</c>

00:34:59.299 --> 00:35:03.170
<c.magenta>因为用户可以用键盘输入任何字符</c>

00:34:59.299 --> 00:35:03.170
<c.magenta>因为用户可以用键盘输入任何字符</c>

00:35:03.704 --> 00:35:05.639
<c.magenta>让我们把问题变得简单些</c>

00:35:05.939 --> 00:35:09.610
<c.magenta>假如%@被拉丁名字代替</c>

00:35:10.844 --> 00:35:12.980
<c.magenta>此处第一个字母是A</c>

00:35:13.380 --> 00:35:16.316
<c.magenta>它是拉丁字母 严格从左向右字字符</c>

00:35:16.617 --> 00:35:20.954
<c.magenta>因此章节的方向也是从左向右</c>
<c.magenta>显示正确</c>

00:35:21.922 --> 00:35:26.493
<c.magenta>现在假如这个变量被</c>
<c.magenta>阿拉伯名字代替</c>

00:35:26.860 --> 00:35:30.797
<c.magenta>第一个严格字符是阿拉伯字符</c>

00:35:30.864 --> 00:35:35.002
<c.magenta>使整个章节变成从右向左</c>

00:35:35.068 --> 00:35:38.672
<c.magenta>这就是为什么文本的</c>
<c.magenta>呈现被打乱了</c>

00:35:38.739 --> 00:35:39.673
<c.magenta>这是错误的</c>

00:35:41.208 --> 00:35:43.710
<c.magenta>那么现在什么是正确的显示呢？</c>

00:35:43.777 --> 00:35:47.114
<c.magenta>我希望文本这样显示</c>
<c.magenta>即使我的名字是阿拉伯人名</c>

00:35:47.181 --> 00:35:50.350
<c.magenta>我希望它在左面</c>
<c.magenta>并且章节的其它部分</c>

00:35:50.417 --> 00:35:52.553
<c.magenta>也从左向右显示</c>

00:35:54.221 --> 00:35:56.523
<c.magenta>所以最好的情形是这样的</c>

00:35:56.657 --> 00:35:59.293
<c.magenta>它能读取变量并且把它隔离开</c>

00:35:59.660 --> 00:36:02.029
<c.magenta>让名字自己按照一定的方向排列</c>

00:35:59.660 --> 00:36:02.029
<c.magenta>让名字自己按照一定的方向排列</c>

00:36:02.095 --> 00:36:04.131
<c.magenta>而不会影响章节的其它部分</c>

00:36:04.631 --> 00:36:07.467
<c.magenta>用Isolates支持这是可能的</c>

00:36:07.868 --> 00:36:11.672
<c.magenta>Isolates是最新的</c>
<c.magenta>双向Unicode字符</c>

00:36:11.738 --> 00:36:13.974
<c.magenta>在Unicode 6.3中引入</c>

00:36:14.374 --> 00:36:17.644
<c.magenta>并且在我们所有的平台中</c>
<c.magenta>的文本引擎都支持</c>

00:36:18.078 --> 00:36:19.246
<c.magenta>我刚才讲过</c>

00:36:19.646 --> 00:36:22.749
<c.magenta>Isolates允许部分文本隔离开</c>

00:36:23.083 --> 00:36:26.386
<c.magenta>使首先出现的严格字符</c>
<c.magenta>遵循一定的方向</c>

00:36:26.787 --> 00:36:30.090
<c.magenta>而不影响周围的文本</c>

00:36:31.124 --> 00:36:33.360
<c.magenta>我高兴告诉大家</c>
<c.magenta>你不需要</c>

00:36:33.427 --> 00:36:37.064
<c.magenta>自己插入字符</c>
<c.magenta>就像具体问题具体分析</c>

00:36:37.631 --> 00:36:40.601
<c.magenta>因为如果你使用</c>
<c.magenta>localizedStringWithFormat</c>

00:36:41.068 --> 00:36:42.936
<c.magenta>它们能自动实现这个功能</c>

00:36:43.003 --> 00:36:46.840
<c.magenta>因此localizedStringWithFormat</c>
<c.magenta>会自动隔离%@</c>

00:36:46.907 --> 00:36:49.276
<c.magenta>在运行时它会做出正确的选择</c>

00:36:50.377 --> 00:36:53.280
<c.magenta>现在 回到演示应用</c>

00:36:53.347 --> 00:36:56.149
<c.magenta>仅仅通过一行代码</c>
<c.magenta>就能解决前面的问题</c>

00:36:56.216 --> 00:36:57.084
<c.magenta>让我们试一下</c>

00:37:04.658 --> 00:37:06.326
<c.magenta>好 太酷了</c>

00:37:06.393 --> 00:37:09.530
<c.magenta>现在我要回到这个视图控制器</c>

00:37:10.364 --> 00:37:12.099
<c.magenta>在这儿我更新了我的标签</c>

00:37:13.901 --> 00:37:15.369
<c.magenta>为了节省时间</c>

00:37:15.435 --> 00:37:18.305
<c.magenta>我已经写好了代码</c>
<c.magenta>使用带格式的本地化标准字符串</c>

00:37:18.372 --> 00:37:20.174
<c.magenta>而不是用正常的字符串</c>

00:37:20.574 --> 00:37:24.044
<c.magenta>我打算继续给这个正常的</c>
<c.magenta>字符串加上注释符号</c>

00:37:24.411 --> 00:37:27.514
<c.magenta>对于使用localizedString</c>
<c.magenta>WithFormat的一行则取消注释</c>

00:37:28.348 --> 00:37:29.783
<c.magenta>再次运行我的应用</c>

00:37:31.318 --> 00:37:32.686
<c.magenta>看看问题是否解决了</c>

00:37:38.625 --> 00:37:42.129
<c.magenta>好 正如你们看到的 问题解决了</c>

00:37:42.196 --> 00:37:45.232
<c.magenta>现在我的名字在句子的左边</c>

00:37:45.299 --> 00:37:46.633
<c.magenta>我可以正确地读出它</c>

00:37:46.900 --> 00:37:49.803
<c.magenta>再看看对于英文名字是否起作用</c>

00:37:50.437 --> 00:37:54.308
<c.magenta>看看 如果我把名字改为Rana</c>
<c.magenta>它起作用了</c>

00:37:54.741 --> 00:37:56.310
<c.magenta>再看看阿拉伯名字 也没问题</c>

00:37:56.543 --> 00:37:59.112
<c.magenta>这就是我们的平台的</c>
<c.magenta>Isolates支持</c>

00:38:00.180 --> 00:38:01.381
<c.magenta>让我们回到幻灯片</c>

00:38:06.420 --> 00:38:08.188
<c.magenta>好 总结一下</c>

00:38:10.157 --> 00:38:13.594
<c.magenta>在本次演讲中我们引入了</c>
<c.magenta>方向图像资源库</c>

00:38:14.094 --> 00:38:17.497
<c.magenta>现在它能更容易的支持不同的图像</c>

00:38:17.564 --> 00:38:20.801
<c.magenta>用于从左向右或者</c>
<c.magenta>从右向左本地化设置</c>

00:38:22.002 --> 00:38:26.740
<c.magenta>在iOS watchOS和macOS中</c>
<c.magenta>我们为你设计了新的API</c>

00:38:27.541 --> 00:38:29.843
<c.magenta>自动布局是非常友好的</c>

00:38:29.910 --> 00:38:34.047
<c.magenta>如果你想布局你的视图</c>
<c.magenta>或者支持其它语言的本地化</c>

00:38:35.382 --> 00:38:38.285
<c.magenta>我们也改善了文本引擎</c>

00:38:38.352 --> 00:38:40.754
<c.magenta>通过支持Isolates的</c>
<c.magenta>Unicode字符</c>

00:38:42.422 --> 00:38:44.191
<c.magenta>有了这些改进</c>

00:38:44.258 --> 00:38:49.530
<c.magenta>作为开发者的你能更容易的</c>
<c.magenta>开发软件 开拓新的市场</c>

00:38:51.031 --> 00:38:54.368
<c.magenta>如果你需要更多的信息</c>
<c.magenta>请参阅developer.apple.com</c>

00:38:54.434 --> 00:38:57.771
<c.magenta>那儿有我们的演讲</c>
<c.magenta>谢谢你们的到来！</c>

00:38:58.071 --> 00:39:01.041
<c.magenta>如果你错过了一些演讲</c>
<c.magenta>那儿还有相关的演讲</c>

00:38:58.071 --> 00:39:01.041
<c.magenta>如果你错过了一些演讲</c>
<c.magenta>那儿还有相关的演讲</c>

00:39:01.108 --> 00:39:03.177
<c.magenta>请查阅它们 它们很棒</c>

00:39:04.611 --> 00:39:06.446
<c.magenta>祝你们度过愉快的一天</c>

00:39:06.513 --> 00:39:09.650
<c.magenta>希望大家在WWDC余下的演讲中</c>
<c.magenta>过得愉快 非常感谢！</c>
