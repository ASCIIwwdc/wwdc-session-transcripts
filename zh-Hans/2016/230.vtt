WEBVTT

00:00:20.020 --> 00:00:26.226
<c.magenta>用CallKit提升VoIP应用</c>

00:00:32.399 --> 00:00:33.433
<c.magenta>大家好</c>

00:00:33.800 --> 00:00:35.335
<c.magenta>欢迎来到演讲230</c>

00:00:35.536 --> 00:00:38.138
<c.magenta>我是Sirisha</c>
<c.magenta>一名CallKit的工程师</c>

00:00:38.605 --> 00:00:40.974
<c.magenta>今天和我一起的还有</c>
<c.magenta>我的同事Stewart和Nick</c>

00:00:41.308 --> 00:00:44.912
<c.magenta>今天我们很兴奋地向大家</c>
<c.magenta>介绍一个全新的框架</c>

00:00:45.412 --> 00:00:46.380
<c.magenta>CallKit</c>

00:00:49.383 --> 00:00:51.985
<c.magenta>你们有很多人已经编写过VoIP应用</c>

00:00:52.719 --> 00:00:55.055
<c.magenta>你们改变了电话通讯的面貌</c>

00:00:55.122 --> 00:00:56.790
<c.magenta>让世界变得更小</c>

00:00:57.891 --> 00:01:01.662
<c.magenta>你想让你的应用成为用户</c>
<c.magenta>的首要选择</c>

00:00:57.891 --> 00:01:01.662
<c.magenta>你想让你的应用成为用户</c>
<c.magenta>的首要选择</c>

00:01:01.728 --> 00:01:05.331
<c.magenta>他们用你的应用在iOS上接听电话</c>
<c.magenta>我们想为你们提供这方面的支持</c>

00:01:06.200 --> 00:01:10.103
<c.magenta>CallKit是一个框架 能够大大提升</c>
<c.magenta>第三方VoIP应用</c>

00:01:10.170 --> 00:01:11.839
<c.magenta>使它和原装应用的体验一样好</c>

00:01:18.879 --> 00:01:19.713
<c.magenta>谢谢</c>

00:01:20.614 --> 00:01:22.749
<c.magenta>因为你们很多人已经</c>
<c.magenta>编写过VoIP应用</c>

00:01:22.816 --> 00:01:25.853
<c.magenta>接下来的40分钟中</c>
<c.magenta>假设我们创建了</c>

00:01:25.919 --> 00:01:28.021
<c.magenta>一个全新的应用</c>
<c.magenta>叫做Speakerbox</c>

00:01:28.655 --> 00:01:31.358
<c.magenta>Speakerbox是一个简单的应用</c>

00:01:31.425 --> 00:01:35.929
<c.magenta>能在iOS上拨打与接听电话</c>
<c.magenta>就像现在的iOS上的软件一样</c>

00:01:37.097 --> 00:01:39.666
<c.magenta>在开始之前</c>
<c.magenta>先让我设置一个场景</c>

00:01:40.434 --> 00:01:42.369
<c.magenta>Jane一直在欧洲旅游</c>

00:01:42.970 --> 00:01:45.138
<c.magenta>关心她的父母想要联系她</c>

00:01:45.205 --> 00:01:46.673
<c.magenta>以确定她现在很好</c>

00:01:47.508 --> 00:01:50.143
<c.magenta>因为是国际长途</c>
<c.magenta>他们要使用Speakerbox</c>

00:01:50.210 --> 00:01:51.311
<c.magenta>给她打电话</c>

00:01:52.479 --> 00:01:55.649
<c.magenta>现在看看给Jane的来电是什么样子</c>

00:01:57.184 --> 00:01:58.719
<c.magenta>这是Jane的锁屏屏幕</c>

00:01:59.653 --> 00:02:01.588
<c.magenta>首先她收到爸爸的iMessage</c>

00:01:59.653 --> 00:02:01.588
<c.magenta>首先她收到爸爸的iMessage</c>

00:02:02.222 --> 00:02:05.792
<c.magenta>在她还没有回复的时候</c>
<c.magenta>就收到了妈妈打进来的电话</c>

00:02:07.194 --> 00:02:08.996
<c.magenta>Jane不能分辨</c>

00:02:09.062 --> 00:02:12.666
<c.magenta>iMessage通知</c>

00:02:12.733 --> 00:02:15.402
<c.magenta>与打入电话通知的区别</c>

00:02:16.103 --> 00:02:19.139
<c.magenta>因为现在的VoIP电话</c>

00:02:19.373 --> 00:02:20.674
<c.magenta>它仅仅是一个通知</c>

00:02:21.642 --> 00:02:23.877
<c.magenta>如果Jane想接听这个电话</c>

00:02:24.178 --> 00:02:27.481
<c.magenta>她要打开Speakerbox</c>
<c.magenta>输入密码</c>

00:02:27.848 --> 00:02:31.785
<c.magenta>连接到应用上去</c>
<c.magenta>然后开始讲话</c>

00:02:34.154 --> 00:02:38.559
<c.magenta>这是Jane开锁后的屏幕</c>
<c.magenta>体验很糟糕</c>

00:02:39.459 --> 00:02:41.061
<c.magenta>她收到妈妈打来的电话</c>

00:02:43.130 --> 00:02:45.332
<c.magenta>你会不小心错过这个电话吗？</c>

00:02:46.400 --> 00:02:48.502
<c.magenta>有可能</c>
<c.magenta>它仅仅是一个顶部的横条</c>

00:02:49.736 --> 00:02:51.338
<c.magenta>那么是不是这样更好呢？</c>

00:02:51.405 --> 00:02:55.809
<c.magenta>如果给Jane的来电是这个样子</c>

00:02:56.743 --> 00:02:58.512
<c.magenta>这是Jane的锁屏屏幕</c>

00:02:59.146 --> 00:03:00.914
<c.magenta>她收到妈妈打来的电话</c>

00:02:59.146 --> 00:03:00.914
<c.magenta>她收到妈妈打来的电话</c>

00:03:01.481 --> 00:03:03.450
<c.magenta>注意全屏本地用户界面</c>

00:03:08.822 --> 00:03:12.960
<c.magenta>Jane滑动一下就可以</c>
<c.magenta>接听电话和妈妈交谈了</c>

00:03:14.528 --> 00:03:18.632
<c.magenta>而且在解锁屏幕上也是这样</c>

00:03:18.699 --> 00:03:21.668
<c.magenta>同样丰富的本地用户界面</c>
<c.magenta>上面有接听和拒接按钮</c>

00:03:21.735 --> 00:03:23.704
<c.magenta>而且预先设置好的铃声会响起</c>

00:03:29.910 --> 00:03:31.111
<c.magenta>这样不是更好吗？</c>

00:03:31.178 --> 00:03:34.047
<c.magenta>如果VoIP电话能够和系统中</c>
<c.magenta>的其它电话互动</c>

00:03:34.982 --> 00:03:38.218
<c.magenta>例如本地电话、</c>
<c.magenta>FaceTime语音电话</c>

00:03:38.685 --> 00:03:40.521
<c.magenta>或者另一个VoIP电话</c>

00:03:41.922 --> 00:03:46.460
<c.magenta>甚至VoIP电话能够从通话记录、</c>
<c.magenta>常用联系人、</c>

00:03:46.793 --> 00:03:48.595
<c.magenta>甚至是联系人中拨打电话</c>

00:03:49.830 --> 00:03:52.900
<c.magenta>或者从Siri、</c>
<c.magenta>Bluetooth上拨打电话</c>

00:03:53.534 --> 00:03:57.905
<c.magenta>甚至有请勿打扰和黑名单等功能</c>

00:03:58.705 --> 00:03:59.940
<c.magenta>这就是CallKit</c>

00:04:09.716 --> 00:04:12.886
<c.magenta>今天我们将讲解CallKit的架构、</c>

00:04:13.287 --> 00:04:16.490
<c.magenta>打入电话流程和打出电话流程</c>

00:04:16.557 --> 00:04:19.026
<c.magenta>最后详细讲解一下它的API</c>

00:04:19.560 --> 00:04:20.627
<c.magenta>现在开始</c>

00:04:21.361 --> 00:04:25.265
<c.magenta>好 这儿我们有所有的系统服务</c>
<c.magenta>例如蓝牙、</c>

00:04:25.332 --> 00:04:28.068
<c.magenta>Siri、CarPlay和本地用户界面</c>

00:04:28.402 --> 00:04:31.772
<c.magenta>这儿有全部的VoIP应用</c>
<c.magenta>例如Speakerbox</c>

00:04:32.506 --> 00:04:34.408
<c.magenta>它们是两个独立的实体</c>

00:04:34.708 --> 00:04:38.645
<c.magenta>系统和服务不能获知</c>
<c.magenta>对Speakerbox进行的调用</c>

00:04:39.913 --> 00:04:44.017
<c.magenta>在iOS 10中我们已经在</c>
<c.magenta>系统服务中采用了CallKit</c>

00:04:44.718 --> 00:04:48.889
<c.magenta>现在系统通过CallKit</c>
<c.magenta>可以获知对蓝牙的调用</c>

00:04:49.923 --> 00:04:52.693
<c.magenta>如果Speakerbox想要相似的体验</c>

00:04:52.759 --> 00:04:54.294
<c.magenta>它要使用CallKit</c>

00:04:55.095 --> 00:04:58.732
<c.magenta>系统现在通过CallKit可以获知</c>
<c.magenta>对Speakerbox做出的调用</c>

00:04:59.299 --> 00:05:03.604
<c.magenta>然后系统会给其它服务</c>
<c.magenta>公布这些调用</c>

00:04:59.299 --> 00:05:03.604
<c.magenta>然后系统会给其它服务</c>
<c.magenta>公布这些调用</c>

00:05:04.805 --> 00:05:07.307
<c.magenta>让我们深入讲解一下</c>
<c.magenta>Speakerbox</c>

00:05:08.876 --> 00:05:11.512
<c.magenta>现在我们有Speakerbox</c>
<c.magenta>和它的所有代码</c>

00:05:12.145 --> 00:05:15.148
<c.magenta>它和网络通信</c>
<c.magenta>它有自己的应用用户界面</c>

00:05:15.916 --> 00:05:17.351
<c.magenta>现在我们要连接CallKit</c>

00:05:18.418 --> 00:05:21.288
<c.magenta>在CallKit中我们关心</c>
<c.magenta>两个主要的类</c>

00:05:22.055 --> 00:05:24.424
<c.magenta>第一个是CXProvider类</c>

00:05:25.359 --> 00:05:27.861
<c.magenta>这个类是Speakerbox用来</c>

00:05:27.928 --> 00:05:31.431
<c.magenta>让系统获知</c>

00:05:31.498 --> 00:05:32.432
<c.magenta>发生过的带外通知</c>

00:05:33.567 --> 00:05:36.170
<c.magenta>第二个类是</c>
<c.magenta>CXCallController</c>

00:05:36.970 --> 00:05:39.840
<c.magenta>这个类是Speakerbox用来</c>

00:05:39.907 --> 00:05:43.043
<c.magenta>让系统获知本地用户的操作</c>

00:05:44.578 --> 00:05:48.448
<c.magenta>让我们详细了解一下这两个类</c>
<c.magenta>首先是供应商</c>

00:05:49.216 --> 00:05:51.084
<c.magenta>供应商 正如我刚才说的</c>

00:05:51.318 --> 00:05:55.522
<c.magenta>是让系统获知带外通知的一个类</c>

00:05:55.989 --> 00:05:58.659
<c.magenta>这些通知不是用户的行为</c>

00:05:59.126 --> 00:06:01.995
<c.magenta>他们实际是外来的事件 例如</c>

00:05:59.126 --> 00:06:01.995
<c.magenta>他们实际是外来的事件 例如</c>

00:06:02.062 --> 00:06:04.231
<c.magenta>Speakerbox接到一个</c>
<c.magenta>打来的电话</c>

00:06:05.098 --> 00:06:07.201
<c.magenta>和CXCallController</c>
<c.magenta>对比一下</c>

00:06:07.901 --> 00:06:11.371
<c.magenta>CXCallController</c>
<c.magenta>是Speakerbox用来</c>

00:06:11.438 --> 00:06:15.709
<c.magenta>让系统获知来自应用内部请求的类</c>

00:06:16.176 --> 00:06:18.478
<c.magenta>它实际上是用户行为</c>

00:06:19.580 --> 00:06:22.683
<c.magenta>是内部事件 例如拨打电话的操作</c>

00:06:24.284 --> 00:06:27.221
<c.magenta>通过CallController</c>
<c.magenta>Speakerbox</c>

00:06:27.287 --> 00:06:28.956
<c.magenta>可以与系统的其它呼叫互动</c>

00:06:30.190 --> 00:06:33.493
<c.magenta>例如在一个本地电话通话时</c>

00:06:33.560 --> 00:06:37.764
<c.magenta>用户想从Speakerbox界面</c>
<c.magenta>发起一个Speakerbox通话</c>

00:06:39.233 --> 00:06:41.034
<c.magenta>通过使用控制器</c>

00:06:41.101 --> 00:06:43.570
<c.magenta>系统会获知发起通话的操作</c>

00:06:43.871 --> 00:06:46.340
<c.magenta>并且系统会通知</c>
<c.magenta>本地电话的供应商</c>

00:06:46.406 --> 00:06:50.444
<c.magenta>保持它的通话 从而让</c>
<c.magenta>Speakerbox开始它的通话</c>

00:06:52.212 --> 00:06:54.381
<c.magenta>让我们举一些例子说明一下</c>

00:06:55.482 --> 00:06:59.853
<c.magenta>供应商用来报告带外通知</c>

00:07:00.187 --> 00:07:02.990
<c.magenta>例如向Speakerbox发起的来电</c>

00:07:03.924 --> 00:07:06.193
<c.magenta>或者向外拨出的电话已经连接</c>

00:07:06.894 --> 00:07:09.863
<c.magenta>或者拨出的电话已被对方终止</c>

00:07:11.064 --> 00:07:14.468
<c.magenta>而控制器用来请求</c>

00:07:14.735 --> 00:07:17.437
<c.magenta>来自系统的操作 例如用户想</c>

00:07:17.504 --> 00:07:20.974
<c.magenta>发起一个的通话</c>
<c.magenta>或者用户想接听</c>

00:07:21.041 --> 00:07:25.479
<c.magenta>Speakerbox的来电</c>
<c.magenta>或者结束Speakerbox的通话</c>

00:07:27.347 --> 00:07:29.416
<c.magenta>当供应商想和</c>

00:07:29.483 --> 00:07:33.587
<c.magenta>系统通信的时候</c>
<c.magenta>它使用CSXCallUpdate类</c>

00:07:34.221 --> 00:07:36.256
<c.magenta>当系统想让Speakerbox</c>

00:07:36.323 --> 00:07:38.125
<c.magenta>和用户互动的时候</c>

00:07:38.292 --> 00:07:41.862
<c.magenta>它使用CXAction类</c>
<c.magenta>通知Speakerbox</c>

00:07:43.330 --> 00:07:46.033
<c.magenta>控制器和系统通信时</c>

00:07:46.099 --> 00:07:49.136
<c.magenta>用户的操作被</c>
<c.magenta>捆绑成CSTransaction</c>

00:07:49.670 --> 00:07:51.972
<c.magenta>以便让系统获知这些操作</c>

00:07:53.941 --> 00:07:55.576
<c.magenta>刚才讲了许多</c>

00:07:55.843 --> 00:07:59.546
<c.magenta>让我们看看打入电话的流程</c>

00:08:00.814 --> 00:08:04.852
<c.magenta>我们有Speakerbox</c>
<c.magenta>Jane接到了来自妈妈的呼叫</c>

00:08:05.652 --> 00:08:10.390
<c.magenta>呼叫来到Speakerbox以后</c>
<c.magenta>Speakerbox创建了CXCallUpdate</c>

00:08:10.757 --> 00:08:12.960
<c.magenta>并且使用供应商</c>
<c.magenta>把呼叫传送给系统</c>

00:08:13.927 --> 00:08:16.363
<c.magenta>然后系统会把呼入</c>

00:08:16.430 --> 00:08:18.765
<c.magenta>公布给所有的服务进程 包括用户界面进程</c>

00:08:20.200 --> 00:08:23.437
<c.magenta>如果Jane想通过应用界面来接听呼叫</c>

00:08:23.504 --> 00:08:25.706
<c.magenta>接听操作会传递给系统</c>

00:08:26.206 --> 00:08:30.244
<c.magenta>系统接着会告诉Speakerbox</c>
<c.magenta>供应商</c>

00:08:30.544 --> 00:08:33.013
<c.magenta>会回复CXAnswerCallAction</c>

00:08:33.881 --> 00:08:37.150
<c.magenta>在需要的情况下</c>
<c.magenta>Speakerbox会接听这个呼叫</c>

00:08:38.150 --> 00:08:43.289
<c.magenta>如果Jane现在想从应用界面</c>
<c.magenta>内结束这个通话</c>

00:08:43.357 --> 00:08:45.125
<c.magenta>结束操作就传递到控制器中</c>

00:08:45.459 --> 00:08:48.161
<c.magenta>控制器把它捆绑</c>
<c.magenta>传递给CXTransaction</c>

00:08:48.562 --> 00:08:51.798
<c.magenta>并且传递给系统</c>
<c.magenta>如果一切顺利的话</c>

00:08:52.199 --> 00:08:55.169
<c.magenta>系统把它通过供应商</c>
<c.magenta>返回给Speakerbox</c>

00:08:55.569 --> 00:08:58.605
<c.magenta>然后Speakerbox就可以结束通话</c>

00:09:00.340 --> 00:09:02.843
<c.magenta>下面我们让Stewart为</c>
<c.magenta>我们做一下演示</c>

00:09:08.615 --> 00:09:09.650
<c.magenta>谢谢Sirisha</c>

00:09:09.850 --> 00:09:12.753
<c.magenta>现在你们了解了CallKit的好处</c>

00:09:12.819 --> 00:09:14.488
<c.magenta>我将演示一下如何使用CallKit</c>

00:09:14.555 --> 00:09:17.758
<c.magenta>在一个已经做好的VoIP应用中</c>
<c.magenta>Speakerbox应用</c>

00:09:17.824 --> 00:09:18.992
<c.magenta>就是Sirisha刚才讲过的应用</c>

00:09:19.393 --> 00:09:22.696
<c.magenta>我首先给你们展示一下</c>
<c.magenta>如何用它处理一个呼入的通话</c>

00:09:23.664 --> 00:09:26.900
<c.magenta>我首先打开一个Speakerbox</c>
<c.magenta>Xscript工程</c>

00:09:28.802 --> 00:09:32.206
<c.magenta>在我深入讲解在应用中使用</c>
<c.magenta>CallKit之前</c>

00:09:32.439 --> 00:09:34.608
<c.magenta>让我给你们展示一下</c>
<c.magenta>这个应用的架构</c>

00:09:34.675 --> 00:09:36.109
<c.magenta>这样你就有一个参考的框架</c>

00:09:36.510 --> 00:09:39.112
<c.magenta>在应用中有两个主要的类</c>

00:09:39.780 --> 00:09:43.984
<c.magenta>SpeakerboxCallManager类</c>
<c.magenta>它维护应用中的通话列表</c>

00:09:44.051 --> 00:09:48.956
<c.magenta>它有一些操作</c>
<c.magenta>比如发起通话和结束通话</c>

00:09:50.290 --> 00:09:53.026
<c.magenta>另一个主要的类是</c>
<c.magenta>SpeakerboxCall</c>

00:09:53.460 --> 00:09:56.997
<c.magenta>这是一个模板类</c>
<c.magenta>表示应用中的一个通话</c>

00:09:57.064 --> 00:10:00.367
<c.magenta>它有关于通话的元数据</c>
<c.magenta>和一些回调代码区</c>

00:09:57.064 --> 00:10:00.367
<c.magenta>它有关于通话的元数据</c>
<c.magenta>和一些回调代码区</c>

00:10:00.434 --> 00:10:04.304
<c.magenta>在它运行的时候我们可以得知</c>
<c.magenta>通话的生命周期</c>

00:10:05.739 --> 00:10:09.209
<c.magenta>正如Sirisha提到的 我们</c>
<c.magenta>使用CallKit时首先需要做的</c>

00:10:09.276 --> 00:10:12.679
<c.magenta>是创建CX供应商</c>

00:10:12.746 --> 00:10:13.914
<c.magenta>并且设置它的代理</c>

00:10:14.381 --> 00:10:18.619
<c.magenta>首先我要创建一个新文件叫做</c>
<c.magenta>供应商代理</c>

00:10:23.724 --> 00:10:26.994
<c.magenta>在这个新文件中我要加入一些</c>
<c.magenta>已经写好的新代码</c>

00:10:27.361 --> 00:10:29.363
<c.magenta>首先让我们看看它能做些什么</c>

00:10:29.830 --> 00:10:32.733
<c.magenta>在初始化程序中</c>
<c.magenta>我们把一个引用参数</c>

00:10:32.799 --> 00:10:34.568
<c.magenta>传递给SpeakerboxCallManager类</c>

00:10:35.202 --> 00:10:38.972
<c.magenta>使供应商代理</c>
<c.magenta>能够访问应用的通话列表</c>

00:10:39.406 --> 00:10:42.409
<c.magenta>然后通过UUID引用它们</c>
<c.magenta>我们在后面会演示</c>

00:10:43.544 --> 00:10:46.647
<c.magenta>然后我们 我们创建一个</c>
<c.magenta>CXProvider实例</c>

00:10:47.214 --> 00:10:48.148
<c.magenta>然后我们传递</c>

00:10:48.215 --> 00:10:50.984
<c.magenta>叫做供应商配置的东西</c>
<c.magenta>我们现在看到的就是</c>

00:10:51.685 --> 00:10:53.053
<c.magenta>供应商配置</c>

00:10:53.120 --> 00:10:55.589
<c.magenta>会在后面详细讲解</c>

00:10:55.656 --> 00:10:58.926
<c.magenta>它让应用能够配置一些系统选项</c>

00:10:58.992 --> 00:11:00.260
<c.magenta>以决定它的行为</c>

00:10:58.992 --> 00:11:00.260
<c.magenta>以决定它的行为</c>

00:11:01.662 --> 00:11:03.063
<c.magenta>现在回到初始化程序</c>

00:11:03.730 --> 00:11:08.502
<c.magenta>我们把这个类设置为供应商代理</c>
<c.magenta>然后如果有必要的话</c>

00:11:09.036 --> 00:11:11.405
<c.magenta>我们请求使用供应商的授权</c>

00:11:12.372 --> 00:11:13.207
<c.magenta>好</c>

00:11:13.273 --> 00:11:16.009
<c.magenta>现在已经设置好了</c>
<c.magenta>供应商和代理</c>

00:11:16.076 --> 00:11:18.212
<c.magenta>我们需要在应用代理中创建这个</c>

00:11:18.812 --> 00:11:21.481
<c.magenta>我声明一个变量</c>
<c.magenta>供应商代理</c>

00:11:22.616 --> 00:11:25.052
<c.magenta>并且在application函数中实现了</c>

00:11:25.118 --> 00:11:27.187
<c.magenta>didFinishLaunchingWithOptions</c>
<c.magenta>方法</c>

00:11:28.088 --> 00:11:28.922
<c.magenta>酷</c>

00:11:28.989 --> 00:11:31.458
<c.magenta>现在应用中</c>
<c.magenta>有了一个供应商</c>

00:11:32.392 --> 00:11:35.095
<c.magenta>那么当有呼入的通话时</c>
<c.magenta>应用怎样对作出反应呢？</c>

00:11:35.762 --> 00:11:36.930
<c.magenta>我把它往下拉</c>

00:11:37.397 --> 00:11:40.067
<c.magenta>我们会看到应用现在使用PushKit</c>

00:11:40.133 --> 00:11:42.903
<c.magenta>通过推送通知获知呼入请求</c>

00:11:43.704 --> 00:11:45.506
<c.magenta>我们看看这个代码起了什么作用</c>

00:11:46.039 --> 00:11:48.208
<c.magenta>我们看到</c>
<c.magenta>它查阅了dictionaryPayload</c>

00:11:48.275 --> 00:11:50.711
<c.magenta>它从推送通知中查阅</c>
<c.magenta>并且获得一些</c>

00:11:50.777 --> 00:11:54.448
<c.magenta>关于呼入电话的元数据</c>
<c.magenta>例如UUID</c>

00:11:54.515 --> 00:11:57.317
<c.magenta>和代表呼入者的标识符</c>
<c.magenta>叫做句柄</c>

00:11:58.318 --> 00:12:01.455
<c.magenta>然后我们调用显示来电方法</c>

00:11:58.318 --> 00:12:01.455
<c.magenta>然后我们调用显示来电方法</c>

00:12:01.922 --> 00:12:03.323
<c.magenta>我们看 这儿的代码是</c>

00:12:03.390 --> 00:12:06.393
<c.magenta>应用控制本地的通知</c>

00:12:06.560 --> 00:12:08.495
<c.magenta>给用户显示来电</c>

00:12:09.463 --> 00:12:10.797
<c.magenta>但是如果使用CallKit</c>

00:12:10.864 --> 00:12:14.101
<c.magenta>我们不再需要本地通知来显示这个</c>

00:12:14.635 --> 00:12:19.740
<c.magenta>我们转而可以使用系统的</c>
<c.magenta>全屏本地来电用户界面</c>

00:12:19.940 --> 00:12:22.543
<c.magenta>我们这样做是因为</c>
<c.magenta>这能获得更好的体验</c>

00:12:23.510 --> 00:12:26.713
<c.magenta>要这样做 我将回到</c>
<c.magenta>供应商代理</c>

00:12:27.214 --> 00:12:28.815
<c.magenta>我要创建一个helper方法</c>

00:12:29.449 --> 00:12:31.919
<c.magenta>它让我们为</c>
<c.magenta>供应商调用API</c>

00:12:33.320 --> 00:12:35.088
<c.magenta>我将会调用reportIncomingCall方法</c>

00:12:36.490 --> 00:12:37.658
<c.magenta>在这个方法中</c>

00:12:38.292 --> 00:12:41.161
<c.magenta>我首先要创建一个</c>
<c.magenta>CXCallUpdate类</c>

00:12:41.228 --> 00:12:44.431
<c.magenta>它含有呼入电话的元数据</c>

00:12:45.265 --> 00:12:49.002
<c.magenta>然后我们为供应商调用</c>
<c.magenta>reportNewIncomingCall方法</c>

00:12:49.303 --> 00:12:52.706
<c.magenta>这将会告知系统来电的信息</c>

00:12:53.841 --> 00:12:55.642
<c.magenta>现在我们要在代码中加入异常处理</c>

00:12:56.410 --> 00:12:57.878
<c.magenta>我们要检查是否有异常</c>

00:12:58.612 --> 00:13:02.616
<c.magenta>如果没有异常我们就创建</c>
<c.magenta>SpeakerboxCall实例且配置它</c>

00:12:58.612 --> 00:13:02.616
<c.magenta>如果没有异常我们就创建</c>
<c.magenta>SpeakerboxCall实例且配置它</c>

00:13:02.783 --> 00:13:05.652
<c.magenta>然后我们把这个通话添</c>
<c.magenta>加到应用的通话列表中</c>

00:13:06.520 --> 00:13:08.522
<c.magenta>后面我们会详细讲解</c>

00:13:08.589 --> 00:13:10.524
<c.magenta>为什么这儿有个异常处理？</c>

00:13:10.791 --> 00:13:13.060
<c.magenta>无需多说 有些情况下</c>

00:13:13.126 --> 00:13:15.529
<c.magenta>设备没有准备好</c>

00:13:15.596 --> 00:13:16.864
<c.magenta>接听来电</c>

00:13:18.432 --> 00:13:21.168
<c.magenta>好 现在我们的供应商代理中</c>
<c.magenta>有了helper方法</c>

00:13:21.735 --> 00:13:23.270
<c.magenta>回到我的应用代理</c>

00:13:23.770 --> 00:13:26.707
<c.magenta>把这些代码改为调用helper</c>

00:13:27.574 --> 00:13:28.775
<c.magenta>发布本地通知</c>

00:13:30.043 --> 00:13:30.878
<c.magenta>好</c>

00:13:30.944 --> 00:13:32.880
<c.magenta>现在我们使用CallKit</c>

00:13:32.946 --> 00:13:35.315
<c.magenta>通知呼入电话</c>

00:13:35.382 --> 00:13:37.518
<c.magenta>而过去我们通过推送通知获知这个消息</c>

00:13:37.584 --> 00:13:41.255
<c.magenta>系统使用全屏本地来电用户界面</c>
<c.magenta>显示了来电</c>

00:13:42.022 --> 00:13:44.992
<c.magenta>好 那么如果用户按下绿色按钮</c>

00:13:45.058 --> 00:13:46.460
<c.magenta>接听来电会发生什么呢？</c>

00:13:47.661 --> 00:13:48.829
<c.magenta>在这个时候</c>

00:13:49.296 --> 00:13:52.966
<c.magenta>供应商代理</c>
<c.magenta>会收到另一个方法 我们还需要实现它</c>

00:13:54.101 --> 00:13:59.206
<c.magenta>这就是ProviderPerformAnswer</c>
<c.magenta>CallAction方法</c>

00:13:59.773 --> 00:14:01.208
<c.magenta>让我演示一下</c>

00:13:59.773 --> 00:14:01.208
<c.magenta>让我演示一下</c>

00:14:02.176 --> 00:14:04.044
<c.magenta>首先我们创建一个</c>

00:14:04.111 --> 00:14:07.314
<c.magenta>Speakerbox call</c>
<c.magenta>类的实例 它和</c>

00:14:07.381 --> 00:14:08.715
<c.magenta>我们正接听的通话UUID相对应</c>

00:14:09.850 --> 00:14:13.086
<c.magenta>下面我们调用</c>
<c.magenta>answerSpeakerboxcall方法</c>

00:14:13.520 --> 00:14:17.090
<c.magenta>这些代码来自老版本的应用</c>

00:14:17.157 --> 00:14:20.160
<c.magenta>它和网络通信告诉它要应答这个来电</c>

00:14:20.494 --> 00:14:23.030
<c.magenta>我们在供应商代理</c>
<c.magenta>回调中这样做</c>

00:14:24.031 --> 00:14:27.000
<c.magenta>最后我们调用执行操作</c>

00:14:28.001 --> 00:14:30.771
<c.magenta>在CallKit中 每一个动作</c>
<c.magenta>要么被执行</c>

00:14:30.838 --> 00:14:34.441
<c.magenta>如果成功的话 要么执行失败</c>
<c.magenta>如果有异常的话</c>

00:14:35.242 --> 00:14:37.578
<c.magenta>这儿有几行代码</c>

00:14:37.878 --> 00:14:41.215
<c.magenta>如果我们找不到Speakerbox</c>
<c.magenta>对这个UUID的调用</c>

00:14:41.281 --> 00:14:44.384
<c.magenta>我们就调用failed方法</c>
<c.magenta>向系统报告</c>

00:14:46.119 --> 00:14:48.755
<c.magenta>这个方法处理对来电的应答</c>

00:14:49.289 --> 00:14:51.491
<c.magenta>那么如果用户如何结束通话呢？</c>

00:14:52.059 --> 00:14:56.230
<c.magenta>为此我们有一个相似的方法叫做</c>

00:14:56.296 --> 00:14:58.565
<c.magenta>ProviderPerformEndCallAction</c>

00:14:59.499 --> 00:15:00.868
<c.magenta>它们很相似</c>

00:14:59.499 --> 00:15:00.868
<c.magenta>它们很相似</c>

00:15:00.934 --> 00:15:03.904
<c.magenta>它查询一个基于UUID的调用</c>

00:15:04.838 --> 00:15:07.774
<c.magenta>它使用endSpeakerBoxCall</c>
<c.magenta>方法和网络通信</c>

00:15:08.575 --> 00:15:11.745
<c.magenta>通过调用执行告知这方法执行成功</c>

00:15:12.513 --> 00:15:14.948
<c.magenta>然后把通话从应用的通话列表中删除</c>

00:15:16.350 --> 00:15:18.485
<c.magenta>现在处理呼入的通话</c>
<c.magenta>我们讲的差不多了</c>

00:15:18.819 --> 00:15:20.621
<c.magenta>还有一件事情</c>

00:15:20.687 --> 00:15:22.456
<c.magenta>在处理呼入的通话时应该考虑</c>

00:15:22.856 --> 00:15:24.258
<c.magenta>就是通话的音频</c>

00:15:25.225 --> 00:15:26.660
<c.magenta>使用CallKit时</c>

00:15:26.727 --> 00:15:30.063
<c.magenta>你不需要直接激活应用的音频会话</c>

00:15:30.664 --> 00:15:33.767
<c.magenta>你只需要配置音频会话</c>

00:15:33.834 --> 00:15:36.537
<c.magenta>系统会为你激活应用的音频会话</c>

00:15:36.603 --> 00:15:38.338
<c.magenta>并且提高它的优先级</c>

00:15:38.872 --> 00:15:40.340
<c.magenta>让我演示一下它是如何工作的</c>

00:15:42.242 --> 00:15:45.612
<c.magenta>回到PerformAnswerCallAction方法中</c>

00:15:46.647 --> 00:15:49.983
<c.magenta>我在函数configureaudiosession中</c>
<c.magenta>插入一个通话</c>

00:15:51.018 --> 00:15:54.421
<c.magenta>正如字面意思</c>
<c.magenta>它能配置应用的音频会话</c>

00:15:54.488 --> 00:15:55.722
<c.magenta>但是并没有激活它</c>

00:15:56.857 --> 00:15:59.726
<c.magenta>音频会话将被系统激活</c>

00:16:00.093 --> 00:16:01.195
<c.magenta>然后</c>

00:16:01.261 --> 00:16:03.964
<c.magenta>我们会收到一个返回的代理叫做</c>
<c.magenta>供应商</c>

00:16:04.031 --> 00:16:05.365
<c.magenta>didActivate audioSession</c>

00:16:05.999 --> 00:16:08.936
<c.magenta>从这儿开始</c>
<c.magenta>我们开始处理通话的音频</c>

00:16:10.304 --> 00:16:14.875
<c.magenta>最后一步是停止处理通话的音频</c>

00:16:14.942 --> 00:16:17.010
<c.magenta>它是用PerformEndCallAction</c>
<c.magenta>方法实现的</c>

00:16:18.312 --> 00:16:22.983
<c.magenta>好的 这是我们使用CallKit</c>
<c.magenta>处理呼入通话的所有代码</c>

00:16:23.650 --> 00:16:27.921
<c.magenta>现在我把设备屏幕显示在电脑屏幕上</c>

00:16:28.322 --> 00:16:30.290
<c.magenta>让我们编译运行设备上的应用</c>

00:16:32.426 --> 00:16:34.094
<c.magenta>为了本次演示</c>

00:16:34.161 --> 00:16:37.297
<c.magenta>我仅仅使用底部的按钮</c>
<c.magenta>模拟呼入通话</c>

00:16:37.965 --> 00:16:39.166
<c.magenta>现在我按下它</c>

00:16:39.600 --> 00:16:42.503
<c.magenta>我们会看到Speakerbox</c>
<c.magenta>的呼入请求</c>

00:16:42.569 --> 00:16:45.305
<c.magenta>它使用了全屏本地呼入用户界面</c>

00:16:46.073 --> 00:16:47.841
<c.magenta>我可以接听这个电话</c>

00:16:48.642 --> 00:16:52.713
<c.magenta>供应商代理就会收到</c>
<c.magenta>PerformAnswerCallAction方法</c>

00:16:53.180 --> 00:16:57.317
<c.magenta>它执行了</c>
<c.magenta>最后当我和Jane交谈完以后</c>

00:16:57.551 --> 00:17:02.189
<c.magenta>我可以结束通话和应用</c>
<c.magenta>供应商代理也执行了</c>

00:16:57.551 --> 00:17:02.189
<c.magenta>我可以结束通话和应用</c>
<c.magenta>供应商代理也执行了</c>

00:17:03.257 --> 00:17:06.492
<c.magenta>这是使用CallKit处理</c>
<c.magenta>呼入电话的演示</c>

00:17:06.560 --> 00:17:08.829
<c.magenta>现在交给Sirisha</c>

00:17:09.128 --> 00:17:09.963
<c.magenta>谢谢</c>

00:17:16.036 --> 00:17:16.970
<c.magenta>谢谢 Stewart</c>

00:17:17.538 --> 00:17:19.839
<c.magenta>让我们再回顾一下Stewart的演示</c>

00:17:20.140 --> 00:17:22.175
<c.magenta>首先 把呼入的请求</c>

00:17:22.242 --> 00:17:25.012
<c.magenta>通过reportnew</c>
<c.magenta>Incomingcall API通知给系统</c>

00:17:25.779 --> 00:17:27.948
<c.magenta>然后我们处理接听电话的操作</c>

00:17:28.015 --> 00:17:30.817
<c.magenta>通过实现代理方法</c>
<c.magenta>performActionAnswer</c>

00:17:31.084 --> 00:17:32.119
<c.magenta>CallAction</c>

00:17:32.686 --> 00:17:34.488
<c.magenta>然后我们接听了电话</c>

00:17:34.555 --> 00:17:37.257
<c.magenta>我们通过调用执行API</c>
<c.magenta>执行了这个操作</c>

00:17:38.458 --> 00:17:40.627
<c.magenta>CallKit能做的不仅仅只是接电话</c>

00:17:41.128 --> 00:17:43.463
<c.magenta>这个列表</c>
<c.magenta>列举了它支持的其它操作</c>

00:17:43.931 --> 00:17:48.168
<c.magenta>有保持通话、多人通话、</c>
<c.magenta>双音多频电话等等</c>

00:17:49.536 --> 00:17:52.639
<c.magenta>现在花点时间谈谈多人通话</c>

00:17:53.273 --> 00:17:55.809
<c.magenta>假如Speakerbox可以</c>
<c.magenta>处理多人通话</c>

00:17:56.476 --> 00:17:57.878
<c.magenta>在这儿 在这个例子中</c>

00:17:57.945 --> 00:18:00.547
<c.magenta>已经有一个活动的</c>
<c.magenta>Speakerbox通话了</c>

00:17:57.945 --> 00:18:00.547
<c.magenta>已经有一个活动的</c>
<c.magenta>Speakerbox通话了</c>

00:18:00.614 --> 00:18:02.783
<c.magenta>这时又呼入了一个电话</c>

00:18:03.383 --> 00:18:05.485
<c.magenta>若用户想用本地用户界面</c>
<c.magenta>结束这个活动的通话</c>

00:18:05.552 --> 00:18:09.356
<c.magenta>并且接听下一个呼叫</c>

00:18:09.423 --> 00:18:12.326
<c.magenta>系统就会发送CXTransaction</c>
<c.magenta>给Speakerbox</c>

00:18:13.227 --> 00:18:18.899
<c.magenta>CXTransaction就是一个</c>
<c.magenta>或多个操作的列表</c>

00:18:19.132 --> 00:18:22.169
<c.magenta>在这种情况下 那就是</c>
<c.magenta>结束和应答的操作</c>

00:18:22.836 --> 00:18:25.005
<c.magenta>一旦Speakerbox处理</c>

00:18:25.072 --> 00:18:26.874
<c.magenta>和执行其中的操作</c>

00:18:26.940 --> 00:18:29.209
<c.magenta>它需要分别完成它们</c>

00:18:29.276 --> 00:18:32.246
<c.magenta>这样系统知道要转换用户界面</c>

00:18:33.647 --> 00:18:37.484
<c.magenta>现在我要交给Nick</c>
<c.magenta>讲解打出电话流程</c>

00:18:41.455 --> 00:18:42.489
<c.magenta>谢谢Sirisha</c>

00:18:43.190 --> 00:18:44.691
<c.magenta>让我们继续用Jane的例子</c>

00:18:45.359 --> 00:18:48.729
<c.magenta>她昨天和妈妈通了电话</c>
<c.magenta>但是今天她有点想家了</c>

00:18:48.795 --> 00:18:50.163
<c.magenta>她想和家人联络</c>

00:18:51.031 --> 00:18:53.267
<c.magenta>让我们看看如何打出电话</c>

00:18:57.137 --> 00:18:59.873
<c.magenta>首先Jane要做的是到最近联系人中</c>

00:18:59.940 --> 00:19:03.644
<c.magenta>点击 给她的妈妈打电话</c>
<c.magenta>应用启动时</c>

00:18:59.940 --> 00:19:03.644
<c.magenta>点击 给她的妈妈打电话</c>
<c.magenta>应用启动时</c>

00:19:03.710 --> 00:19:05.412
<c.magenta>首先出现了可能通话操作列表</c>

00:19:06.780 --> 00:19:10.217
<c.magenta>你们中有人可能已经看了</c>
<c.magenta>SiriKit的演讲介绍</c>

00:19:11.251 --> 00:19:12.920
<c.magenta>我们介绍了可能通话操作列表</c>

00:19:12.986 --> 00:19:15.055
<c.magenta>如果你想了解更多信息</c>

00:19:15.122 --> 00:19:16.890
<c.magenta>你可以观看在线视频</c>

00:19:17.724 --> 00:19:19.960
<c.magenta>一言以蔽之</c>
<c.magenta>可能操作列表</c>

00:19:20.027 --> 00:19:22.296
<c.magenta>就是期望的用户行为</c>

00:19:22.563 --> 00:19:26.033
<c.magenta>被打包在NSUser活动中</c>
<c.magenta>并且传送给应用</c>

00:19:27.434 --> 00:19:30.604
<c.magenta>应用收到可能通话操作列表</c>

00:19:30.671 --> 00:19:33.540
<c.magenta>就创建可能通话操作</c>

00:19:33.607 --> 00:19:35.442
<c.magenta>根据可能通话操作中的信息</c>

00:19:36.610 --> 00:19:40.581
<c.magenta>我们会得到相应的操作 然后通过</c>
<c.magenta>CallController发出请求</c>

00:19:41.782 --> 00:19:44.985
<c.magenta>CallController</c>
<c.magenta>会把操作传送给系统</c>

00:19:45.419 --> 00:19:48.956
<c.magenta>如果它接收了 它会通过</c>
<c.magenta>供应商代理返回给应用</c>

00:19:50.224 --> 00:19:52.392
<c.magenta>最后我们的应用会得到这个操作</c>

00:19:52.860 --> 00:19:55.829
<c.magenta>使用网络上必要的命令</c>

00:19:55.896 --> 00:19:57.164
<c.magenta>打出电话</c>

00:19:57.965 --> 00:20:01.201
<c.magenta>首先看看从这时开始的</c>
<c.magenta>呼出电话的生命周期</c>

00:19:57.965 --> 00:20:01.201
<c.magenta>首先看看从这时开始的</c>
<c.magenta>呼出电话的生命周期</c>

00:20:01.969 --> 00:20:04.404
<c.magenta>我们已经开始进行呼出操作</c>

00:20:05.005 --> 00:20:06.707
<c.magenta>所以呼叫现在处于正在开始状态</c>

00:20:08.008 --> 00:20:10.677
<c.magenta>这时我们完成了执行这个操作</c>

00:20:10.744 --> 00:20:13.914
<c.magenta>执行操作把呼叫转移到已经开始状态</c>

00:20:15.148 --> 00:20:17.618
<c.magenta>当对方接听电话时</c>

00:20:18.385 --> 00:20:21.788
<c.magenta>我们会通知供应商</c>
<c.magenta>通话正在连接</c>

00:20:23.156 --> 00:20:24.091
<c.magenta>最后</c>

00:20:24.791 --> 00:20:28.462
<c.magenta>我们会通知供应商</c>
<c.magenta>通话已经连接并且通知系统</c>

00:20:28.529 --> 00:20:30.864
<c.magenta>双方可以通话了</c>

00:20:32.733 --> 00:20:34.168
<c.magenta>有请Stewart回台上</c>

00:20:34.234 --> 00:20:35.636
<c.magenta>做另一个演示</c>

00:20:41.508 --> 00:20:42.409
<c.magenta>谢谢 Nick</c>

00:20:42.476 --> 00:20:44.478
<c.magenta>现在我要演示第二部分</c>

00:20:44.545 --> 00:20:46.713
<c.magenta>如何使用CallKit</c>
<c.magenta>和Speakerbox</c>

00:20:46.914 --> 00:20:49.850
<c.magenta>这一次是如何使用它</c>
<c.magenta>处理呼出的通话</c>

00:20:50.817 --> 00:20:54.154
<c.magenta>我要再次打开一个</c>
<c.magenta>Speakerbox Xscript工程</c>

00:20:55.122 --> 00:20:57.391
<c.magenta>回到我们的应用代理类</c>

00:20:57.991 --> 00:21:01.528
<c.magenta>我们看到Speakerbox</c>
<c.magenta>现在这样处理启动</c>

00:20:57.991 --> 00:21:01.528
<c.magenta>我们看到Speakerbox</c>
<c.magenta>现在这样处理启动</c>

00:21:01.595 --> 00:21:03.664
<c.magenta>用一个URL开始新的通话</c>

00:21:04.631 --> 00:21:06.800
<c.magenta>当用CallKit的时候</c>

00:21:06.867 --> 00:21:09.937
<c.magenta>拨出电话的过程是相似的</c>

00:21:10.470 --> 00:21:14.141
<c.magenta>但是当用户从这些场合中</c>
<c.magenta>发起通话的时候 例如电话应用、</c>

00:21:14.208 --> 00:21:18.145
<c.magenta>最近联系人、联系人</c>
<c.magenta>卡片或者Siri</c>

00:21:18.212 --> 00:21:20.147
<c.magenta>应用启动时有可能操作列表</c>

00:21:20.214 --> 00:21:23.250
<c.magenta>并且会通过NSUser活动传递给我们</c>

00:21:24.218 --> 00:21:27.454
<c.magenta>这儿使用CallKit的第一步是</c>

00:21:27.521 --> 00:21:31.658
<c.magenta>实现applicationContinue</c>
<c.magenta>UserActivity方法</c>

00:21:32.793 --> 00:21:34.494
<c.magenta>看看是怎么做的吧</c>

00:21:34.928 --> 00:21:37.865
<c.magenta>先看看</c>
<c.magenta>NSUser活动</c>

00:21:38.232 --> 00:21:40.767
<c.magenta>我们要得到startCallHandle</c>
<c.magenta>变量的值</c>

00:21:41.668 --> 00:21:45.038
<c.magenta>这些代码我们已经写好了</c>
<c.magenta>查看NSUser活动</c>

00:21:45.472 --> 00:21:48.342
<c.magenta>得到可能操作列表 返回句柄</c>

00:21:48.408 --> 00:21:51.211
<c.magenta>它是一个字符串代表我们</c>
<c.magenta>想要把电话打给何人</c>

00:21:52.446 --> 00:21:53.847
<c.magenta>现在一旦我们有了句柄</c>

00:21:54.281 --> 00:21:58.652
<c.magenta>开始新通话的过程就等于</c>
<c.magenta>上面的URL句柄</c>

00:21:58.952 --> 00:22:01.955
<c.magenta>我们仅仅是在通话管理器中</c>
<c.magenta>调用了开始通话方法</c>

00:21:58.952 --> 00:22:01.955
<c.magenta>我们仅仅是在通话管理器中</c>
<c.magenta>调用了开始通话方法</c>

00:22:03.257 --> 00:22:05.125
<c.magenta>现在看看这个方法做了什么</c>

00:22:06.793 --> 00:22:09.696
<c.magenta>我们可以在</c>
<c.magenta>SpeakerboxCallManager类中看到</c>

00:22:09.763 --> 00:22:13.033
<c.magenta>我们通过创建模板类的一个新实例</c>
<c.magenta>就开始了一个通话</c>

00:22:13.100 --> 00:22:14.301
<c.magenta>Speakerbox通话</c>

00:22:14.968 --> 00:22:17.971
<c.magenta>然后我们调用</c>
<c.magenta>StartSpeakerBoxCall方法</c>

00:22:18.338 --> 00:22:20.941
<c.magenta>它会和网络通信 然后开始发起通话</c>

00:22:21.608 --> 00:22:25.012
<c.magenta>最后还把这个通话加入</c>
<c.magenta>到通话列表中</c>

00:22:26.113 --> 00:22:28.749
<c.magenta>但是现在还没有使用</c>
<c.magenta>CallKit来通知系统</c>

00:22:28.815 --> 00:22:30.584
<c.magenta>我们打算发起一个新的通话</c>

00:22:30.918 --> 00:22:32.019
<c.magenta>我们需要这样做</c>

00:22:32.486 --> 00:22:34.555
<c.magenta>所以我现在要删除这些代码</c>

00:22:34.621 --> 00:22:36.690
<c.magenta>过一会儿我还要把某些部分添加回来</c>

00:22:38.425 --> 00:22:41.361
<c.magenta>在这个类中采用CallKit</c>
<c.magenta>首先要</c>

00:22:41.428 --> 00:22:42.663
<c.magenta>导入框架</c>

00:22:45.098 --> 00:22:48.702
<c.magenta>然后我需要Sirisha</c>
<c.magenta>提到的第二个类</c>

00:22:48.769 --> 00:22:50.571
<c.magenta>CXCallController</c>

00:22:52.039 --> 00:22:55.542
<c.magenta>现在在开始通话方法里已经有了</c>

00:22:56.543 --> 00:22:59.046
<c.magenta>我需要创建</c>
<c.magenta>startCallAction</c>

00:22:59.112 --> 00:23:02.015
<c.magenta>然后用我想拨出的句柄配置它</c>

00:22:59.112 --> 00:23:02.015
<c.magenta>然后用我想拨出的句柄配置它</c>

00:23:03.383 --> 00:23:06.954
<c.magenta>然后创建CXTransaction</c>
<c.magenta>它含有有上面的操作</c>

00:23:07.921 --> 00:23:10.924
<c.magenta>最后我在callController中</c>
<c.magenta>调用请求事务</c>

00:23:10.991 --> 00:23:13.193
<c.magenta>请求系统执行操作</c>

00:23:14.161 --> 00:23:17.531
<c.magenta>现在仅仅是重复Sirisha</c>
<c.magenta>提到的这一点</c>

00:23:17.931 --> 00:23:20.901
<c.magenta>你可能想知道为什么我们</c>
<c.magenta>需要向系统请求这个事务</c>

00:23:20.968 --> 00:23:23.804
<c.magenta>其实看起来这一切只是</c>

00:23:23.871 --> 00:23:25.339
<c.magenta>发生在应用的内部</c>

00:23:26.106 --> 00:23:29.009
<c.magenta>原因是当你试图</c>

00:23:29.076 --> 00:23:30.344
<c.magenta>发起一个通话的时候</c>

00:23:30.410 --> 00:23:33.080
<c.magenta>系统可能已经有了一个</c>
<c.magenta>其它的通话正在进行</c>

00:23:33.146 --> 00:23:36.517
<c.magenta>例如 如果用户使用本地电话、</c>
<c.magenta>FaceTime电话</c>

00:23:36.884 --> 00:23:38.619
<c.magenta>或者其它的VoIP应用电话</c>

00:23:39.119 --> 00:23:43.423
<c.magenta>如果这样的话 系统需要在你的通话</c>
<c.magenta>开始之前保留原来的通话</c>

00:23:43.924 --> 00:23:46.426
<c.magenta>为什么我们需要</c>
<c.magenta>从系统层请求操作</c>

00:23:46.693 --> 00:23:48.595
<c.magenta>要让系统知道这些操作</c>

00:23:51.298 --> 00:23:55.569
<c.magenta>现在 一旦系统接收并且</c>
<c.magenta>改善了我们的开始通话操作</c>

00:23:55.936 --> 00:23:59.907
<c.magenta>它要通过供应商代理</c>
<c.magenta>把这个操作发送回给应用</c>

00:24:00.674 --> 00:24:03.911
<c.magenta>所以我需要实现供应商代理</c>
<c.magenta>的另一个方法</c>

00:24:04.645 --> 00:24:08.649
<c.magenta>它叫做provider perform</c>
<c.magenta>StartCallAction方法</c>

00:24:09.316 --> 00:24:10.584
<c.magenta>让我们一起写这些代码吧</c>

00:24:11.852 --> 00:24:14.555
<c.magenta>和以前一样 我们首先</c>

00:24:14.621 --> 00:24:17.090
<c.magenta>创建一个Speakerbox call</c>
<c.magenta>模板实例</c>

00:24:17.324 --> 00:24:20.027
<c.magenta>然后用我们用拨出</c>
<c.magenta>通话的句柄来配置它</c>

00:24:20.961 --> 00:24:24.798
<c.magenta>然后配置音频会话</c>
<c.magenta>这和以前一样</c>

00:24:24.865 --> 00:24:28.135
<c.magenta>当应答不同时间打来的电话时</c>

00:24:28.268 --> 00:24:30.804
<c.magenta>我们需要在通话上配置一些属性</c>

00:24:31.371 --> 00:24:33.874
<c.magenta>这儿的代码很多 让我们梳理一下</c>

00:24:34.675 --> 00:24:37.878
<c.magenta>我们为通话设置两个通话返回代码区</c>

00:24:38.545 --> 00:24:43.383
<c.magenta>hasStartedConnectingDidChange和</c>
<c.magenta>hasConnctedDidChange</c>

00:24:44.184 --> 00:24:47.287
<c.magenta>它们是异步的通话返回代码区</c>
<c.magenta>它们会被激活</c>

00:24:47.354 --> 00:24:49.756
<c.magenta>当通话由已连接状态</c>

00:24:49.823 --> 00:24:52.259
<c.magenta>进入正在连接状态</c>
<c.magenta>然后再进入已连接状态</c>

00:24:52.893 --> 00:24:54.561
<c.magenta>在这些通话返回代码区中</c>

00:24:54.895 --> 00:24:57.664
<c.magenta>我们向系统报告通话的过程</c>

00:24:57.731 --> 00:25:01.001
<c.magenta>这样系统就会知道</c>
<c.magenta>并且在界面中显示出来</c>

00:24:57.731 --> 00:25:01.001
<c.magenta>这样系统就会知道</c>
<c.magenta>并且在界面中显示出来</c>

00:25:02.169 --> 00:25:06.807
<c.magenta>设置好了以后 我们就可以</c>
<c.magenta>调用startSpeakerboxCall方法</c>

00:25:06.874 --> 00:25:07.741
<c.magenta>在通话时</c>

00:25:08.008 --> 00:25:10.878
<c.magenta>它会再次同网络通信 然后拨出电话</c>

00:25:11.745 --> 00:25:15.249
<c.magenta>完成了这个操作就可以</c>
<c.magenta>向系统报告操作成功</c>

00:25:15.949 --> 00:25:17.985
<c.magenta>并且把通话添加到</c>
<c.magenta>通话管理列表中</c>

00:25:20.821 --> 00:25:24.057
<c.magenta>好 这是对呼出通话的处理</c>

00:25:24.124 --> 00:25:26.927
<c.magenta>但是如果用户想结束通话</c>
<c.magenta>我们该怎么做呢？</c>

00:25:26.994 --> 00:25:29.463
<c.magenta>从我们自己的--应用自己的用户界面上</c>

00:25:30.464 --> 00:25:33.967
<c.magenta>这样我们需要回到</c>
<c.magenta>Speakerbox callManager类中</c>

00:25:34.034 --> 00:25:35.335
<c.magenta>看看结束通话方法</c>

00:25:36.036 --> 00:25:39.806
<c.magenta>在这儿 我们可以看到</c>
<c.magenta>和前面的发起通话方法一样</c>

00:25:39.873 --> 00:25:41.375
<c.magenta>它还没有使用CallKit</c>

00:25:41.875 --> 00:25:43.877
<c.magenta>所以我要替换一下代码</c>

00:25:44.845 --> 00:25:49.583
<c.magenta>我把它拖进来</c>
<c.magenta>看看 我们创建了结束通话操作</c>

00:25:50.017 --> 00:25:51.785
<c.magenta>它被打包成事务</c>

00:25:52.052 --> 00:25:54.821
<c.magenta>从callController可以</c>
<c.magenta>请求这个事务</c>

00:25:55.956 --> 00:25:58.425
<c.magenta>这一次你不需要在</c>
<c.magenta>供应商代理中做任何改动</c>

00:25:58.492 --> 00:26:01.361
<c.magenta>因为你可以看到</c>

00:25:58.492 --> 00:26:01.361
<c.magenta>因为你可以看到</c>

00:26:01.428 --> 00:26:03.764
<c.magenta>我们已经在前面的演示中实现了这个</c>

00:26:04.998 --> 00:26:07.668
<c.magenta>这就是我们处理</c>
<c.magenta>呼出通话的所有代码</c>

00:26:07.868 --> 00:26:11.138
<c.magenta>现在我要在设备上编译和运行应用</c>
<c.magenta>给你们另一个演示</c>

00:26:17.110 --> 00:26:20.047
<c.magenta>我已经在设备上编译和更新了应用</c>

00:26:20.280 --> 00:26:21.548
<c.magenta>为了给你们演示呼出通话</c>

00:26:21.615 --> 00:26:26.286
<c.magenta>我想回到联系人卡中的电话应用</c>

00:26:26.687 --> 00:26:31.058
<c.magenta>现我们能够看到Speakerbox</c>
<c.magenta>应用列在联系人卡中了</c>

00:26:31.592 --> 00:26:34.194
<c.magenta>我只要点击这儿就可以运行应用</c>

00:26:34.461 --> 00:26:36.763
<c.magenta>应用启动了</c>

00:26:36.830 --> 00:26:38.665
<c.magenta>它会收到可能操作列表</c>

00:26:38.999 --> 00:26:42.936
<c.magenta>使用callController</c>
<c.magenta>开始一个通话</c>

00:26:43.637 --> 00:26:46.940
<c.magenta>它会请求系统支持的一个事务</c>

00:26:47.307 --> 00:26:51.144
<c.magenta>提供给供应商代理</c>
<c.magenta>然后供应商代理执行操作</c>

00:26:51.845 --> 00:26:53.914
<c.magenta>现在看 就是这样</c>

00:26:53.981 --> 00:26:55.482
<c.magenta>现在通话正在进行</c>

00:26:57.451 --> 00:27:02.155
<c.magenta>现在正在通话 如果我按下home键</c>
<c.magenta>退出 我们能看到一些新鲜玩意</c>

00:26:57.451 --> 00:27:02.155
<c.magenta>现在正在通话 如果我按下home键</c>
<c.magenta>退出 我们能看到一些新鲜玩意</c>

00:27:02.589 --> 00:27:06.059
<c.magenta>竟然出现了绿色的双倍高度的状态条</c>

00:27:06.126 --> 00:27:08.262
<c.magenta>在显示我们的应用正在运行</c>

00:27:08.829 --> 00:27:11.164
<c.magenta>以前这是本地电话</c>

00:27:11.231 --> 00:27:13.934
<c.magenta>和FaceTime电话专用的</c>
<c.magenta>如果我点击它</c>

00:27:14.168 --> 00:27:16.303
<c.magenta>将会回到Speakerbox通话页面</c>

00:27:20.240 --> 00:27:21.108
<c.magenta>谢谢！</c>

00:27:21.742 --> 00:27:24.645
<c.magenta>当通话结束的时候</c>
<c.magenta>我点击结束通话</c>

00:27:24.711 --> 00:27:27.848
<c.magenta>这会向系统发出请求 终止通话操作</c>

00:27:27.915 --> 00:27:29.449
<c.magenta>供应商代理</c>
<c.magenta>会执行这个操作</c>

00:27:30.450 --> 00:27:34.454
<c.magenta>这是使用CallKit处理</c>
<c.magenta>呼出通话的所有演示</c>

00:27:34.521 --> 00:27:38.292
<c.magenta>现在交回给Nick回顾一下</c>
<c.magenta>然后介绍几个别的API</c>

00:27:38.592 --> 00:27:39.426
<c.magenta>谢谢</c>

00:27:46.400 --> 00:27:47.267
<c.magenta>谢谢 Stewart</c>

00:27:47.768 --> 00:27:50.437
<c.magenta>首先快速回顾一下刚才的内容</c>

00:27:53.140 --> 00:27:56.643
<c.magenta>首先是Speakerbox</c>
<c.magenta>收到可能通话列表</c>

00:27:57.411 --> 00:27:59.580
<c.magenta>基于这个列表创建了开始通话操作</c>

00:27:59.813 --> 00:28:01.715
<c.magenta>然后请求开始通话操作</c>

00:27:59.813 --> 00:28:01.715
<c.magenta>然后请求开始通话操作</c>

00:28:02.816 --> 00:28:05.953
<c.magenta>开始通话操作通过</c>
<c.magenta>供应商代理被接收</c>

00:28:06.386 --> 00:28:08.188
<c.magenta>然后执行</c>

00:28:09.156 --> 00:28:13.360
<c.magenta>最后 Speakerbox报告</c>
<c.magenta>通话成为正在连接状态</c>

00:28:13.861 --> 00:28:15.395
<c.magenta>然后是已经连接状态</c>

00:28:17.998 --> 00:28:21.201
<c.magenta>这是基本的流程</c>

00:28:21.802 --> 00:28:23.837
<c.magenta>现在让我们深入研究</c>
<c.magenta>一下API的细节</c>

00:28:23.904 --> 00:28:25.706
<c.magenta>以便充分的使用CallKit</c>

00:28:26.507 --> 00:28:30.611
<c.magenta>我们要尤其关注供应商授权</c>

00:28:30.677 --> 00:28:34.214
<c.magenta>和配置</c>
<c.magenta>它们帮助在本地用户界面中定制应用</c>

00:28:34.915 --> 00:28:37.518
<c.magenta>我们看看如何处理操作异常</c>

00:28:37.584 --> 00:28:39.019
<c.magenta>和系统约束</c>

00:28:39.353 --> 00:28:41.755
<c.magenta>最后看看CallKit</c>

00:28:41.822 --> 00:28:44.091
<c.magenta>在应用的通话音频扮演什么角色</c>

00:28:47.394 --> 00:28:51.798
<c.magenta>所以和其它API一样</c>
<c.magenta>例如联系人和定位</c>

00:28:52.499 --> 00:28:54.801
<c.magenta>CallKit要求用户的使用许可</c>

00:28:55.335 --> 00:28:56.336
<c.magenta>因此</c>

00:28:56.403 --> 00:28:59.239
<c.magenta>应用在启动的时候</c>
<c.magenta>首先要做的是</c>

00:28:59.306 --> 00:29:01.775
<c.magenta>检查它当前授权的状态</c>

00:28:59.306 --> 00:29:01.775
<c.magenta>检查它当前授权的状态</c>

00:29:02.476 --> 00:29:05.112
<c.magenta>因为从上次启动应用以来</c>
<c.magenta>它可能发生了变化</c>

00:29:05.179 --> 00:29:08.348
<c.magenta>如果用户设置激活或者终止你的应用</c>

00:29:09.616 --> 00:29:10.751
<c.magenta>那么现在</c>

00:29:10.817 --> 00:29:13.220
<c.magenta>如果你发现应用的授权状态</c>

00:29:13.287 --> 00:29:17.324
<c.magenta>还没有确定</c>
<c.magenta>你应该请求应用的授权</c>

00:29:18.192 --> 00:29:21.028
<c.magenta>这就是</c>
<c.magenta>告诉操作系统给用户展示一个</c>

00:29:21.094 --> 00:29:23.197
<c.magenta>警告 请求获得许可</c>

00:29:23.931 --> 00:29:25.566
<c.magenta>这是为你的应用做出的授权</c>

00:29:26.066 --> 00:29:29.069
<c.magenta>因为这是为你的应用做出的授权</c>
<c.magenta>你应该确定</c>

00:29:29.136 --> 00:29:32.840
<c.magenta>在应用的info.plist中包含</c>
<c.magenta>应用字符串 提供相应的信息</c>

00:29:35.475 --> 00:29:37.544
<c.magenta>最后 当应用启动的时候</c>

00:29:37.945 --> 00:29:40.180
<c.magenta>你应该确定时刻监听</c>

00:29:40.247 --> 00:29:42.716
<c.magenta>可能发生的授权状态的改变</c>

00:29:43.717 --> 00:29:46.253
<c.magenta>这样你能一直为用户显示</c>
<c.magenta>最新的用户界面</c>

00:29:49.790 --> 00:29:52.226
<c.magenta>现在谈谈供应商配置</c>

00:29:53.026 --> 00:29:55.629
<c.magenta>供应商配置使你的应用</c>

00:29:55.729 --> 00:30:00.701
<c.magenta>直接在本地或者通话用户界面中</c>
<c.magenta>定制通话体验</c>

00:29:55.729 --> 00:30:00.701
<c.magenta>直接在本地或者通话用户界面中</c>
<c.magenta>定制通话体验</c>

00:30:02.836 --> 00:30:06.240
<c.magenta>可以定制</c>

00:30:06.306 --> 00:30:08.442
<c.magenta>为你的通话显示应用的本地名称</c>

00:30:09.610 --> 00:30:11.478
<c.magenta>这包括特定的功能</c>

00:30:11.545 --> 00:30:14.181
<c.magenta>例如应用是否支持视频通话</c>

00:30:15.415 --> 00:30:16.550
<c.magenta>这甚至包括</c>

00:30:16.617 --> 00:30:20.954
<c.magenta>是否指定自己定制的图像</c>
<c.magenta>直接显示在</c>

00:30:21.021 --> 00:30:22.990
<c.magenta>终端用户界面的按钮处</c>

00:30:23.490 --> 00:30:26.927
<c.magenta>当点击的时候</c>
<c.magenta>会让用户直接启动应用</c>

00:30:28.295 --> 00:30:30.797
<c.magenta>记一下 对于本应用图标的支持</c>

00:30:30.864 --> 00:30:32.833
<c.magenta>在下一个版本会实现</c>

00:30:36.570 --> 00:30:40.407
<c.magenta>到目前为止我们看到了</c>
<c.magenta>执行顺畅的时候应用的表现</c>

00:30:40.474 --> 00:30:42.543
<c.magenta>但是如果碰到问题会怎样呢？</c>

00:30:43.277 --> 00:30:45.612
<c.magenta>看看前面拨出电话的例子吧</c>

00:30:46.580 --> 00:30:50.217
<c.magenta>我们已经执行了开始通话操作</c>

00:30:50.851 --> 00:30:54.221
<c.magenta>但是在执行的过程中</c>
<c.magenta>我们碰到了异常</c>

00:30:54.922 --> 00:30:57.591
<c.magenta>也许是和网络服务器连接不好</c>

00:30:57.658 --> 00:30:59.626
<c.magenta>导致我们无法拨出电话</c>

00:31:00.727 --> 00:31:04.498
<c.magenta>在这种情况下 我们要终止通话操作</c>

00:31:05.499 --> 00:31:09.269
<c.magenta>这很重要是因为它要通知</c>
<c.magenta>操作系统</c>

00:31:09.336 --> 00:31:10.637
<c.magenta>出问题了</c>

00:31:11.004 --> 00:31:12.973
<c.magenta>操作系统反过来</c>

00:31:13.607 --> 00:31:17.044
<c.magenta>会通过调用失败用户界面通知用户</c>

00:31:19.179 --> 00:31:22.583
<c.magenta>同这些操作异常密切相关的是</c>
<c.magenta>操作失败时间</c>

00:31:23.917 --> 00:31:28.121
<c.magenta>系统的每一个操作都有和它关联的</c>
<c.magenta>特定的失败时间</c>

00:31:28.822 --> 00:31:31.391
<c.magenta>这些失败时间很重要</c>
<c.magenta>因为它们确保</c>

00:31:31.458 --> 00:31:35.462
<c.magenta>用户发出的操作</c>

00:31:35.529 --> 00:31:38.498
<c.magenta>以操作和回应的方式进行</c>

00:31:39.399 --> 00:31:42.236
<c.magenta>因此</c>
<c.magenta>应用应该总是确保</c>

00:31:42.302 --> 00:31:45.339
<c.magenta>在一定时间内来执行这些操作</c>

00:31:46.707 --> 00:31:49.443
<c.magenta>如果某个操作超时了</c>

00:31:50.043 --> 00:31:54.081
<c.magenta>应用会通过合适的</c>
<c.magenta>供应商代理方法得到通知</c>

00:31:54.147 --> 00:31:56.116
<c.magenta>同时做出合适的反应</c>

00:32:00.687 --> 00:32:03.257
<c.magenta>根据设备当时的状态</c>

00:32:03.323 --> 00:32:05.792
<c.magenta>一定的系统约束是必要的</c>

00:32:06.793 --> 00:32:09.296
<c.magenta>让我们用打入电话作为例子</c>

00:32:10.564 --> 00:32:13.433
<c.magenta>你的呼叫</c>

00:32:13.500 --> 00:32:17.638
<c.magenta>应用的打入呼叫被拒绝了</c>
<c.magenta>可能因为</c>

00:32:17.704 --> 00:32:21.508
<c.magenta>用户停止了应用</c>
<c.magenta>它不再被授权使用</c>

00:32:22.643 --> 00:32:25.279
<c.magenta>或者拨入电话者</c>

00:32:25.345 --> 00:32:26.747
<c.magenta>在接入电话的黑名单中</c>

00:32:27.581 --> 00:32:29.917
<c.magenta>或者用户启用了</c>
<c.magenta>禁止打扰功能</c>

00:32:30.350 --> 00:32:33.120
<c.magenta>现在不想接任何电话</c>

00:32:34.955 --> 00:32:36.590
<c.magenta>对于所有这些情况</c>

00:32:37.024 --> 00:32:40.894
<c.magenta>应用会通过API的</c>
<c.magenta>完成句柄得到通知</c>

00:32:41.995 --> 00:32:44.831
<c.magenta>例如 reportNewIncomingCall</c>
<c.magenta>API</c>

00:32:44.898 --> 00:32:47.134
<c.magenta>在完成句柄中会返回一个错误代码</c>

00:32:48.035 --> 00:32:52.472
<c.magenta>你看 应用检查了返回的错误代码</c>

00:32:53.006 --> 00:32:56.009
<c.magenta>看到错误代码是禁止打扰</c>

00:32:56.543 --> 00:32:58.045
<c.magenta>就会做出相应的处理</c>

00:32:59.446 --> 00:33:02.216
<c.magenta>现在让我们看看CallKit的音频</c>

00:32:59.446 --> 00:33:02.216
<c.magenta>现在让我们看看CallKit的音频</c>

00:33:03.750 --> 00:33:07.955
<c.magenta>有了CallKit的通话音频</c>
<c.magenta>应用得到很多好处</c>

00:33:08.255 --> 00:33:10.090
<c.magenta>最大的好处是</c>

00:33:10.424 --> 00:33:14.728
<c.magenta>它的音频会话在系统中的</c>
<c.magenta>优先级会得到很大提高</c>

00:33:14.795 --> 00:33:17.431
<c.magenta>同本地电话和</c>
<c.magenta>FaceTime电话不相上下</c>

00:33:18.232 --> 00:33:21.468
<c.magenta>这意味着系统上的其它应用不能</c>

00:33:21.535 --> 00:33:23.337
<c.magenta>打断你的应用的通话音频</c>

00:33:24.838 --> 00:33:26.139
<c.magenta>除此之外</c>

00:33:26.640 --> 00:33:29.943
<c.magenta>CallKit能分辨系统的</c>
<c.magenta>特定音频路由</c>

00:33:30.677 --> 00:33:34.548
<c.magenta>这意味着它能知道如何路由音频</c>
<c.magenta>根据</c>

00:33:34.615 --> 00:33:37.784
<c.magenta>用户的当前访问配置</c>

00:33:37.851 --> 00:33:40.454
<c.magenta>还是当前连接的蓝牙设备</c>

00:33:42.990 --> 00:33:46.627
<c.magenta>让我们把呼入电话流程作为例子</c>

00:33:47.361 --> 00:33:49.663
<c.magenta>我们知道在接到电话以后</c>
<c.magenta>应用</c>

00:33:50.097 --> 00:33:54.401
<c.magenta>会收到回应呼叫操作</c>
<c.magenta>然后执行这个操作</c>

00:33:55.702 --> 00:33:58.505
<c.magenta>在收到回应呼叫操作以后应该</c>

00:33:58.572 --> 00:34:00.841
<c.magenta>配置音频会话</c>

00:33:58.572 --> 00:34:00.841
<c.magenta>配置音频会话</c>

00:34:01.308 --> 00:34:03.977
<c.magenta>因为我们知道</c>
<c.magenta>通话很快就会进入已连接状态</c>

00:34:05.312 --> 00:34:07.581
<c.magenta>当我们执行回应呼叫操作以后</c>

00:34:08.581 --> 00:34:11.618
<c.magenta>系统会自动为应用</c>
<c.magenta>开启一个音频会话</c>

00:34:11.685 --> 00:34:14.054
<c.magenta>而且具有很高的优先级</c>

00:34:14.721 --> 00:34:16.623
<c.magenta>然后让应用知道这些已经完成</c>

00:34:17.157 --> 00:34:20.527
<c.magenta>这是通过did activateaudiosession</c>
<c.magenta>Providerdelegatecallback告知的</c>

00:34:21.328 --> 00:34:22.996
<c.magenta>这实际是通知应用</c>

00:34:23.563 --> 00:34:26.033
<c.magenta>应该为通话开启多媒体了</c>

00:34:26.667 --> 00:34:29.870
<c.magenta>这是对API 的细节的</c>
<c.magenta>简要介绍</c>

00:34:29.937 --> 00:34:32.672
<c.magenta>它们帮助我们使用CallKit</c>

00:34:37.511 --> 00:34:41.681
<c.magenta>现在我们邀请你在创建的</c>
<c.magenta>VoIP 应用中采用CallKit</c>

00:34:42.014 --> 00:34:45.118
<c.magenta>或者使用CallKit创建一个</c>
<c.magenta>全新的VoIP 应用</c>

00:34:46.353 --> 00:34:50.757
<c.magenta>使用CallKit你将直接调用</c>
<c.magenta>整合系统的底层驱动</c>

00:34:51.692 --> 00:34:55.062
<c.magenta>一旦你使用了CallKit</c>
<c.magenta>你的应用将获得</c>

00:34:55.128 --> 00:34:56.964
<c.magenta>和本地电话服务平等的功能</c>

00:34:57.965 --> 00:34:59.166
<c.magenta>最重要的是</c>

00:34:59.566 --> 00:35:02.970
<c.magenta>使用CallKit你的应用将</c>

00:34:59.566 --> 00:35:02.970
<c.magenta>使用CallKit你的应用将</c>

00:35:03.036 --> 00:35:05.939
<c.magenta>在系统中是可见的</c>
<c.magenta>无论是在全屏、</c>

00:35:06.006 --> 00:35:10.244
<c.magenta>锁屏的来电提醒、最近来电、</c>

00:35:10.310 --> 00:35:14.715
<c.magenta>常用联系人和联系人中 还是和Siri、</c>

00:35:14.781 --> 00:35:16.350
<c.magenta>CarPlay和Bluetooth的整合中</c>

00:35:19.186 --> 00:35:21.622
<c.magenta>要获得更多信息请查阅我们的演讲网址</c>

00:35:21.688 --> 00:35:23.090
<c.magenta>developer.apple.com</c>

00:35:23.457 --> 00:35:25.826
<c.magenta>那儿也有Speakerbox</c>
<c.magenta>的示例代码</c>

00:35:25.893 --> 00:35:27.995
<c.magenta>这个演讲中</c>
<c.magenta>我们也一直在引用上面的代码</c>

00:35:29.696 --> 00:35:32.065
<c.magenta>我们有很多精彩的相关演讲</c>

00:35:32.366 --> 00:35:35.769
<c.magenta>一定要参阅关于Siri、</c>
<c.magenta>可能操作列表、</c>

00:35:35.836 --> 00:35:37.237
<c.magenta>网络和音频的更多信息</c>

00:35:38.672 --> 00:35:41.341
<c.magenta>非常感谢你们的到来</c>
<c.magenta>希望在实验室里看到你们</c>
