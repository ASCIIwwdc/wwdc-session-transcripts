WEBVTT

00:00:24.516 --> 00:00:27.846 A:middle
[ Applause ]

00:00:28.346 --> 00:00:30.126 A:middle
&gt;&gt; Hello everyone, and welcome

00:00:30.126 --> 00:00:31.566 A:middle
to Building Apps with Dynamic

00:00:31.566 --> 00:00:31.696 A:middle
Type.

00:00:32.426 --> 00:00:34.096 A:middle
My name is Clare, and together

00:00:34.096 --> 00:00:35.436 A:middle
with my colleague Nandini, I'm

00:00:35.436 --> 00:00:36.576 A:middle
excited to share with you how

00:00:36.576 --> 00:00:37.976 A:middle
you can make your apps work

00:00:38.026 --> 00:00:40.466 A:middle
great at any text size.

00:00:42.176 --> 00:00:43.876 A:middle
Today we'll first cover what

00:00:43.876 --> 00:00:45.706 A:middle
Dynamic Type is and why the

00:00:45.706 --> 00:00:46.446 A:middle
feature exists.

00:00:46.446 --> 00:00:48.526 A:middle
Next we'll look at what's new in

00:00:48.646 --> 00:00:50.046 A:middle
iOS 11 for Dynamic Type.

00:00:51.096 --> 00:00:52.136 A:middle
We'll follow that with some

00:00:52.136 --> 00:00:53.866 A:middle
guidelines and API you can apply

00:00:53.866 --> 00:00:55.856 A:middle
to your own apps, and finally

00:00:55.856 --> 00:00:57.306 A:middle
we'll show all of that hands-on

00:00:57.386 --> 00:00:58.906 A:middle
in a sample app.

00:01:01.416 --> 00:01:04.446 A:middle
So first what is Dynamic Type.

00:01:06.676 --> 00:01:08.606 A:middle
Dynamic Type is a feature that

00:01:08.606 --> 00:01:10.686 A:middle
allows users to customize the

00:01:10.686 --> 00:01:13.796 A:middle
size of text on screen.

00:01:13.936 --> 00:01:15.286 A:middle
For example, some users may

00:01:15.286 --> 00:01:17.626 A:middle
prefer a smaller text size so

00:01:17.626 --> 00:01:18.796 A:middle
they can fit more content on

00:01:18.796 --> 00:01:19.896 A:middle
screen.

00:01:22.166 --> 00:01:23.666 A:middle
Others may prefer a larger text

00:01:23.666 --> 00:01:24.596 A:middle
size because it's more

00:01:24.596 --> 00:01:26.086 A:middle
comfortable to read.

00:01:26.776 --> 00:01:28.926 A:middle
But Dynamic Type goes beyond a

00:01:29.016 --> 00:01:30.396 A:middle
user's preferences.

00:01:33.236 --> 00:01:34.946 A:middle
Some users may experience eye

00:01:34.946 --> 00:01:36.846 A:middle
strain when viewing text at the

00:01:36.846 --> 00:01:37.876 A:middle
default size for long periods of

00:01:37.876 --> 00:01:37.976 A:middle
time.

00:01:42.446 --> 00:01:43.716 A:middle
Others may simply have less

00:01:43.716 --> 00:01:45.756 A:middle
acute vision due to aging.

00:01:49.076 --> 00:01:51.026 A:middle
And yet others may have a low

00:01:51.026 --> 00:01:52.396 A:middle
vision condition which makes it

00:01:52.396 --> 00:01:53.776 A:middle
impossible for them to read text

00:01:54.276 --> 00:01:55.256 A:middle
at the default size.

00:01:56.456 --> 00:01:58.166 A:middle
So for these users Dynamic Type

00:01:58.166 --> 00:01:59.856 A:middle
isn't just a preference, it's an

00:01:59.856 --> 00:02:02.256 A:middle
actual need and by supporting

00:02:02.256 --> 00:02:03.936 A:middle
Dynamic Type in your apps, you

00:02:03.936 --> 00:02:05.646 A:middle
can allow these users to use

00:02:05.646 --> 00:02:06.436 A:middle
your app and have a great

00:02:06.436 --> 00:02:06.976 A:middle
experience with it.

00:02:12.046 --> 00:02:13.416 A:middle
The Dynamic Type settings can be

00:02:13.466 --> 00:02:15.106 A:middle
found in the Settings app under

00:02:15.106 --> 00:02:15.996 A:middle
Display and Brightness.

00:02:16.736 --> 00:02:17.896 A:middle
It starts out with seven

00:02:17.896 --> 00:02:18.976 A:middle
different text sizes you can

00:02:18.976 --> 00:02:20.616 A:middle
choose from, and the default one

00:02:20.616 --> 00:02:21.236 A:middle
is in the middle.

00:02:24.116 --> 00:02:25.306 A:middle
You can also go into your

00:02:25.306 --> 00:02:26.986 A:middle
Accessibility settings and there

00:02:26.986 --> 00:02:29.816 A:middle
you can enable five even larger

00:02:29.816 --> 00:02:30.496 A:middle
sizes.

00:02:31.066 --> 00:02:32.596 A:middle
Those sizes are geared towards

00:02:32.756 --> 00:02:34.556 A:middle
users with low vision.

00:02:35.196 --> 00:02:37.306 A:middle
They range from somewhat larger

00:02:37.306 --> 00:02:40.796 A:middle
than default size to much

00:02:40.796 --> 00:02:41.166 A:middle
larger.

00:02:42.636 --> 00:02:43.746 A:middle
Now, looking at this you might

00:02:43.746 --> 00:02:45.686 A:middle
be wondering whether you really

00:02:45.686 --> 00:02:47.236 A:middle
need text to get that big.

00:02:47.236 --> 00:02:48.906 A:middle
Let's look in the example of why

00:02:48.906 --> 00:02:49.906 A:middle
this is useful.

00:02:54.316 --> 00:02:56.376 A:middle
So here's the phone app and on

00:02:56.376 --> 00:02:58.186 A:middle
the left we've got it at the

00:02:58.186 --> 00:03:00.076 A:middle
largest size, not including the

00:03:00.076 --> 00:03:01.166 A:middle
Accessibility sizes.

00:03:01.876 --> 00:03:03.726 A:middle
On the right we have it at the

00:03:03.726 --> 00:03:05.406 A:middle
larger size overall.

00:03:06.186 --> 00:03:06.946 A:middle
Now let's look at this through

00:03:06.946 --> 00:03:07.806 A:middle
the lens of a user with low

00:03:07.806 --> 00:03:07.976 A:middle
vision.

00:03:12.046 --> 00:03:13.216 A:middle
Someone with low vision might

00:03:13.216 --> 00:03:14.286 A:middle
see something closer to what we

00:03:14.286 --> 00:03:15.146 A:middle
see here.

00:03:15.466 --> 00:03:16.426 A:middle
Notice how the version on the

00:03:16.426 --> 00:03:18.646 A:middle
left is completely unreadable,

00:03:19.476 --> 00:03:20.786 A:middle
but the version on the right is

00:03:20.786 --> 00:03:22.126 A:middle
still fairly readable, even

00:03:22.126 --> 00:03:22.716 A:middle
though its blurry.

00:03:24.066 --> 00:03:25.706 A:middle
So text size makes a huge

00:03:25.706 --> 00:03:27.426 A:middle
difference for the legibility of

00:03:27.426 --> 00:03:28.726 A:middle
your apps and that's why it's

00:03:28.726 --> 00:03:29.626 A:middle
really important that you

00:03:29.626 --> 00:03:31.086 A:middle
support the full range of

00:03:31.086 --> 00:03:31.976 A:middle
Dynamic Type sizes.

00:03:38.216 --> 00:03:39.546 A:middle
So that's what Dynamic Type is,

00:03:39.546 --> 00:03:40.766 A:middle
and now let's look at what's new

00:03:40.766 --> 00:03:42.326 A:middle
in iOS 11 for Dynamic Type.

00:03:43.286 --> 00:03:44.596 A:middle
The biggest thing that's changed

00:03:44.596 --> 00:03:46.336 A:middle
is that Dynamic Type support is

00:03:46.336 --> 00:03:48.266 A:middle
vastly improved and expanded

00:03:48.266 --> 00:03:50.106 A:middle
across all of iOS.

00:03:51.016 --> 00:03:52.566 A:middle
When we started working on iOS

00:03:52.566 --> 00:03:56.776 A:middle
11, we had three goals in mind.

00:03:56.876 --> 00:03:58.716 A:middle
First, text should be large

00:03:58.716 --> 00:04:00.846 A:middle
enough for the user to read.

00:04:00.846 --> 00:04:02.096 A:middle
In other words, text should

00:04:02.096 --> 00:04:03.526 A:middle
scale with Dynamic Type.

00:04:03.946 --> 00:04:07.926 A:middle
Second, the text should be fully

00:04:07.926 --> 00:04:08.416 A:middle
readable.

00:04:08.846 --> 00:04:09.976 A:middle
It shouldn't be truncated

00:04:09.976 --> 00:04:11.706 A:middle
unnecessarily and it shouldn't

00:04:11.706 --> 00:04:12.976 A:middle
be overlapped or clipping.

00:04:15.276 --> 00:04:17.766 A:middle
And third, we want an app UI to

00:04:17.766 --> 00:04:19.486 A:middle
look beautiful at all text

00:04:19.486 --> 00:04:19.956 A:middle
sizes.

00:04:20.706 --> 00:04:23.416 A:middle
Now, for more information on the

00:04:23.416 --> 00:04:25.436 A:middle
design thinking behind the iOS

00:04:25.436 --> 00:04:26.986 A:middle
11 Dynamic Type improvements,

00:04:27.046 --> 00:04:28.166 A:middle
please check out the Design for

00:04:28.166 --> 00:04:28.976 A:middle
Everyone talk from yesterday.

00:04:33.416 --> 00:04:34.906 A:middle
So now let's look at some

00:04:34.906 --> 00:04:36.076 A:middle
examples of what's changed.

00:04:36.526 --> 00:04:37.266 A:middle
Here's the Settings app.

00:04:37.846 --> 00:04:38.856 A:middle
Notice how it now adapts

00:04:38.856 --> 00:04:40.326 A:middle
beautifully for all the text

00:04:40.326 --> 00:04:40.916 A:middle
sizes.

00:04:43.566 --> 00:04:45.106 A:middle
Here's another example from

00:04:45.106 --> 00:04:45.566 A:middle
Calendar.

00:04:46.146 --> 00:04:47.546 A:middle
Notice how text everywhere is

00:04:47.546 --> 00:04:49.576 A:middle
scaling with Dynamic Type, and

00:04:49.576 --> 00:04:51.786 A:middle
some texts, like the event time,

00:04:52.406 --> 00:04:53.386 A:middle
is laid out differently to

00:04:53.386 --> 00:04:53.976 A:middle
accommodate larger text.

00:04:59.046 --> 00:05:00.356 A:middle
Now, there are some cases where

00:05:00.356 --> 00:05:01.626 A:middle
we don't scale for Dynamic Type.

00:05:01.976 --> 00:05:04.346 A:middle
For example, in tab bars, if we

00:05:04.346 --> 00:05:06.076 A:middle
were to scale a text here, the

00:05:06.076 --> 00:05:07.386 A:middle
tab bar would take away too much

00:05:07.386 --> 00:05:08.596 A:middle
room from the main content.

00:05:09.346 --> 00:05:12.226 A:middle
However, now, in iOS 11, if you

00:05:12.226 --> 00:05:13.646 A:middle
have one of the five largest

00:05:14.016 --> 00:05:16.106 A:middle
Dynamic Type settings chosen,

00:05:16.446 --> 00:05:18.516 A:middle
you can long press on one of the

00:05:18.516 --> 00:05:19.496 A:middle
items in the tab bar.

00:05:20.086 --> 00:05:21.476 A:middle
For example, the Voicemail tab,

00:05:22.026 --> 00:05:24.146 A:middle
and that will show a larger

00:05:24.146 --> 00:05:24.826 A:middle
version in the middle of the

00:05:24.826 --> 00:05:24.976 A:middle
screen.

00:05:31.126 --> 00:05:32.276 A:middle
So that's a sampling of what's

00:05:32.276 --> 00:05:33.256 A:middle
changed in iOS 11.

00:05:33.866 --> 00:05:34.866 A:middle
Now let's look at some

00:05:34.866 --> 00:05:36.266 A:middle
guidelines in API that you can

00:05:36.266 --> 00:05:39.036 A:middle
apply to your own apps.

00:05:39.216 --> 00:05:40.586 A:middle
We'll be covering this in four

00:05:40.586 --> 00:05:41.096 A:middle
areas.

00:05:41.866 --> 00:05:43.336 A:middle
First, we'll look at how you can

00:05:43.336 --> 00:05:44.656 A:middle
scale your font sizes for

00:05:44.656 --> 00:05:45.226 A:middle
Dynamic Type.

00:05:46.596 --> 00:05:48.356 A:middle
Second, we'll see how you can

00:05:48.356 --> 00:05:50.226 A:middle
accommodate larger text in your

00:05:50.226 --> 00:05:50.776 A:middle
app's layouts.

00:05:52.436 --> 00:05:53.746 A:middle
Third, we'll look at the

00:05:53.746 --> 00:05:55.456 A:middle
specific, very common case of

00:05:55.456 --> 00:05:56.296 A:middle
table views.

00:05:57.296 --> 00:05:58.726 A:middle
And then finally, we'll even see

00:05:58.726 --> 00:06:00.676 A:middle
how images can work well with

00:06:00.676 --> 00:06:00.976 A:middle
Dynamic Type.

00:06:06.386 --> 00:06:08.616 A:middle
So first, let's scale font sizes

00:06:08.616 --> 00:06:10.166 A:middle
for Dynamic Type.

00:06:10.916 --> 00:06:12.666 A:middle
The easiest way to do this is to

00:06:12.666 --> 00:06:14.256 A:middle
use the built-in text styles

00:06:14.526 --> 00:06:15.226 A:middle
that come with iOS.

00:06:16.316 --> 00:06:17.646 A:middle
Here's a list of all of our text

00:06:17.646 --> 00:06:19.896 A:middle
styles, along with their font

00:06:19.896 --> 00:06:21.776 A:middle
sizes at the default text size.

00:06:22.746 --> 00:06:24.346 A:middle
If your user has a different

00:06:24.346 --> 00:06:26.216 A:middle
text size selected, these font

00:06:26.216 --> 00:06:26.856 A:middle
sizes will also change.

00:06:31.196 --> 00:06:32.456 A:middle
Now, for those of you who have

00:06:32.456 --> 00:06:33.796 A:middle
already be using text styles in

00:06:33.796 --> 00:06:36.626 A:middle
your app, first, thank you; and

00:06:36.626 --> 00:06:38.126 A:middle
second, there's one important

00:06:38.126 --> 00:06:39.456 A:middle
change in iOS 11 that you should

00:06:39.456 --> 00:06:39.986 A:middle
be aware of.

00:06:41.026 --> 00:06:43.476 A:middle
Prior to iOS 11 all the text

00:06:43.476 --> 00:06:45.166 A:middle
style adapted for the seven

00:06:45.166 --> 00:06:46.246 A:middle
standard sizes.

00:06:46.866 --> 00:06:49.336 A:middle
However, only the body style

00:06:49.636 --> 00:06:50.796 A:middle
adapted for the five

00:06:50.926 --> 00:06:52.296 A:middle
accessibility sizes.

00:06:52.836 --> 00:06:56.506 A:middle
In iOS 11 all of the text style

00:06:56.506 --> 00:06:58.506 A:middle
adapt for all 12 text sizes.

00:06:59.036 --> 00:07:00.116 A:middle
And so if you're using text

00:07:00.186 --> 00:07:01.246 A:middle
styles, you'll get support for

00:07:01.246 --> 00:07:01.966 A:middle
all 12 sizes for free.

00:07:07.046 --> 00:07:09.066 A:middle
To use text styles in Interface

00:07:09.116 --> 00:07:10.566 A:middle
Builder, go to the Attribute

00:07:10.756 --> 00:07:13.756 A:middle
Inspector and change the font on

00:07:13.756 --> 00:07:14.176 A:middle
your view.

00:07:15.256 --> 00:07:16.236 A:middle
By default this will be

00:07:16.236 --> 00:07:18.286 A:middle
something like System 17 point,

00:07:18.666 --> 00:07:19.706 A:middle
which means it's not going to

00:07:19.706 --> 00:07:20.806 A:middle
scale with Dynamic Type.

00:07:21.466 --> 00:07:22.946 A:middle
But if you click on that T icon,

00:07:23.186 --> 00:07:24.106 A:middle
you can choose one of the text

00:07:24.236 --> 00:07:25.436 A:middle
style fonts instead and those

00:07:25.666 --> 00:07:25.976 A:middle
will scale.

00:07:30.056 --> 00:07:31.986 A:middle
Also, new in iOS 11 you can

00:07:31.986 --> 00:07:33.656 A:middle
check the Automatically Adjust

00:07:33.656 --> 00:07:34.536 A:middle
Font checkbox.

00:07:35.186 --> 00:07:36.396 A:middle
This means that if the user

00:07:36.396 --> 00:07:38.226 A:middle
changes their text size while

00:07:38.226 --> 00:07:39.766 A:middle
your app is running, your view

00:07:39.766 --> 00:07:41.146 A:middle
will automatically update its

00:07:41.146 --> 00:07:42.476 A:middle
font for the new text size.

00:07:42.476 --> 00:07:43.456 A:middle
So we highly recommend you check

00:07:43.456 --> 00:07:43.976 A:middle
this on all of your views.

00:07:49.376 --> 00:07:51.296 A:middle
In code it's just as easy to use

00:07:51.296 --> 00:07:51.936 A:middle
text styles.

00:07:52.236 --> 00:07:52.756 A:middle
You can use the

00:07:52.756 --> 00:07:54.696 A:middle
preferredFont(forTextStyle) API

00:07:55.356 --> 00:07:56.906 A:middle
to get a font for the text

00:07:56.906 --> 00:07:59.296 A:middle
style, and then you can use the

00:07:59.296 --> 00:08:00.886 A:middle
adjustsFontForContentSize

00:08:00.926 --> 00:08:02.986 A:middle
Category property to make sure

00:08:02.986 --> 00:08:03.986 A:middle
that your views update their

00:08:03.986 --> 00:08:04.956 A:middle
fonts if the text size changes.

00:08:11.126 --> 00:08:12.496 A:middle
But what if you can't use text

00:08:12.546 --> 00:08:12.916 A:middle
styles?

00:08:13.756 --> 00:08:15.476 A:middle
Maybe you have a design that

00:08:15.476 --> 00:08:16.616 A:middle
requires custom fonts.

00:08:17.766 --> 00:08:19.676 A:middle
The great news is that in iOS 11

00:08:20.026 --> 00:08:21.796 A:middle
it's really easy to get those

00:08:21.796 --> 00:08:23.136 A:middle
fonts to work well with Dynamic

00:08:23.866 --> 00:08:23.956 A:middle
Type.

00:08:26.236 --> 00:08:27.676 A:middle
So let's say you have some code

00:08:27.786 --> 00:08:29.026 A:middle
that assigns the font property

00:08:29.026 --> 00:08:30.426 A:middle
of a label to a custom font of

00:08:30.426 --> 00:08:30.976 A:middle
your choosing.

00:08:34.286 --> 00:08:36.166 A:middle
In iOS 11 you can now use the

00:08:36.166 --> 00:08:39.106 A:middle
new UIFontMetrics class to scale

00:08:39.106 --> 00:08:40.396 A:middle
that font so that it will get

00:08:40.466 --> 00:08:42.316 A:middle
smaller or bigger, depending on

00:08:42.316 --> 00:08:42.976 A:middle
the user's text size.

00:08:43.516 --> 00:08:45.726 A:middle
[ Applause ]

00:08:46.226 --> 00:08:46.806 A:middle
Thanks.

00:08:47.516 --> 00:08:50.046 A:middle
[ Applause ]

00:08:50.546 --> 00:08:51.766 A:middle
In this example we're using the

00:08:51.766 --> 00:08:53.346 A:middle
default font metrics, which

00:08:53.346 --> 00:08:54.826 A:middle
means we're using the font

00:08:54.826 --> 00:08:56.346 A:middle
metrics of the body text style.

00:08:56.776 --> 00:08:58.626 A:middle
That means that if body text

00:08:58.836 --> 00:09:00.596 A:middle
would be 50 percent larger for a

00:09:00.596 --> 00:09:02.436 A:middle
particular user, your font will

00:09:02.436 --> 00:09:03.916 A:middle
also get 50 percent larger.

00:09:04.506 --> 00:09:07.256 A:middle
For better results, you can pick

00:09:07.256 --> 00:09:08.756 A:middle
a particular text style that you

00:09:08.756 --> 00:09:09.896 A:middle
want to scale your font with.

00:09:10.616 --> 00:09:11.766 A:middle
So, for example, if you have a

00:09:11.766 --> 00:09:13.286 A:middle
font that you're using for title

00:09:13.336 --> 00:09:14.906 A:middle
text in your app, you might

00:09:14.906 --> 00:09:16.466 A:middle
choose to scale it in the same

00:09:16.466 --> 00:09:17.696 A:middle
way that we've scaled title1

00:09:17.696 --> 00:09:17.976 A:middle
text.

00:09:23.196 --> 00:09:25.176 A:middle
Now, a final word on web views.

00:09:25.386 --> 00:09:26.906 A:middle
Many of you may have web views

00:09:26.906 --> 00:09:27.896 A:middle
that you're displaying in your

00:09:28.046 --> 00:09:29.096 A:middle
iOS app.

00:09:29.096 --> 00:09:30.586 A:middle
You should make those adapt for

00:09:30.586 --> 00:09:31.506 A:middle
Dynamic Type as well.

00:09:32.156 --> 00:09:33.776 A:middle
To do so, you can use the

00:09:33.776 --> 00:09:36.286 A:middle
-apple-system-body font and that

00:09:36.286 --> 00:09:37.786 A:middle
will get you the body text style

00:09:37.866 --> 00:09:39.636 A:middle
font and it will adapt for the

00:09:39.636 --> 00:09:41.056 A:middle
user's dynamic typesetting.

00:09:42.156 --> 00:09:44.186 A:middle
Now, note that this is only

00:09:44.186 --> 00:09:45.896 A:middle
available on Apple devices, so

00:09:45.896 --> 00:09:46.806 A:middle
if you're planning to use the

00:09:46.856 --> 00:09:47.866 A:middle
same web page for other

00:09:47.866 --> 00:09:49.716 A:middle
platforms, make sure you set an

00:09:49.746 --> 00:09:51.566 A:middle
appropriate fallback font.

00:09:52.776 --> 00:09:55.076 A:middle
Then for your other styles you

00:09:55.076 --> 00:09:56.626 A:middle
can define their font sizes in

00:09:56.626 --> 00:09:57.716 A:middle
terms of relative units, and

00:09:57.746 --> 00:09:58.536 A:middle
that way they'll scale

00:09:58.536 --> 00:09:58.976 A:middle
proportionately.

00:10:04.516 --> 00:10:06.096 A:middle
So that's how you can scale your

00:10:06.096 --> 00:10:07.486 A:middle
font sizes for Dynamic Type.

00:10:07.996 --> 00:10:09.246 A:middle
Now let's look at how you can

00:10:09.246 --> 00:10:10.476 A:middle
accommodate larger text in your

00:10:10.476 --> 00:10:10.976 A:middle
app layouts.

00:10:15.216 --> 00:10:16.316 A:middle
So let's say we've got some text

00:10:16.646 --> 00:10:18.586 A:middle
at the default text size, and

00:10:18.586 --> 00:10:19.736 A:middle
you can imagine that the white

00:10:19.736 --> 00:10:20.766 A:middle
border is the available area on

00:10:20.766 --> 00:10:20.976 A:middle
the screen.

00:10:23.356 --> 00:10:25.086 A:middle
So first step, let's scale the

00:10:25.086 --> 00:10:25.626 A:middle
font size.

00:10:29.166 --> 00:10:29.846 A:middle
We have a problem.

00:10:30.256 --> 00:10:31.286 A:middle
The text is now running off

00:10:31.286 --> 00:10:33.406 A:middle
screen and so your users are not

00:10:33.406 --> 00:10:35.346 A:middle
going to see anything outside of

00:10:35.346 --> 00:10:36.066 A:middle
the white box.

00:10:36.636 --> 00:10:38.556 A:middle
To prevent the label from

00:10:38.556 --> 00:10:39.396 A:middle
running off screen, we can add a

00:10:39.396 --> 00:10:39.976 A:middle
trailing constraint.

00:10:44.236 --> 00:10:45.916 A:middle
But now we still have a problem

00:10:45.916 --> 00:10:46.886 A:middle
because the text is getting

00:10:46.886 --> 00:10:47.376 A:middle
truncated.

00:10:47.676 --> 00:10:48.966 A:middle
The end result is that your

00:10:48.966 --> 00:10:50.366 A:middle
users aren't going to see all

00:10:50.366 --> 00:10:50.646 A:middle
the text.

00:10:52.296 --> 00:10:53.676 A:middle
To really fix this let's wrap

00:10:55.146 --> 00:10:57.236 A:middle
the text and that will allow the

00:10:57.306 --> 00:10:58.696 A:middle
text to grow as much as it needs

00:10:58.696 --> 00:10:59.506 A:middle
while still displaying all of

00:10:59.506 --> 00:10:59.936 A:middle
the text.

00:11:05.126 --> 00:11:06.316 A:middle
To wrap text in Interface

00:11:06.316 --> 00:11:07.606 A:middle
Builder you can use the

00:11:07.606 --> 00:11:09.416 A:middle
Attribute Inspector and adjust

00:11:09.506 --> 00:11:10.816 A:middle
the Lines property on your

00:11:10.816 --> 00:11:11.146 A:middle
label.

00:11:12.076 --> 00:11:13.306 A:middle
By default this is set to one

00:11:13.306 --> 00:11:15.236 A:middle
line, but if you change it to 0,

00:11:15.236 --> 00:11:16.716 A:middle
that will allow your label to

00:11:16.716 --> 00:11:18.196 A:middle
wrap to as many lines as it

00:11:18.196 --> 00:11:19.436 A:middle
needs for its content.

00:11:22.116 --> 00:11:23.346 A:middle
You can do the same thing in

00:11:23.346 --> 00:11:24.286 A:middle
code by setting the number of

00:11:24.286 --> 00:11:24.946 A:middle
lines property to 0.

00:11:31.266 --> 00:11:32.586 A:middle
Okay. Let's look at another

00:11:32.586 --> 00:11:33.966 A:middle
common scenario that can occur.

00:11:34.576 --> 00:11:37.036 A:middle
So when you're writing your app

00:11:37.036 --> 00:11:37.886 A:middle
and you're thinking about the

00:11:37.886 --> 00:11:40.496 A:middle
default text size, it's tempting

00:11:40.496 --> 00:11:42.126 A:middle
to use constant values for your

00:11:42.126 --> 00:11:42.726 A:middle
spacings.

00:11:43.326 --> 00:11:44.366 A:middle
So you might have something like

00:11:44.416 --> 00:11:46.606 A:middle
two labels here whose baselines

00:11:46.606 --> 00:11:48.886 A:middle
are separated by a constant 40

00:11:48.886 --> 00:11:49.146 A:middle
points.

00:11:49.806 --> 00:11:52.526 A:middle
Looks great at the default text

00:11:53.406 --> 00:11:55.646 A:middle
size, but once you start

00:11:55.646 --> 00:11:56.856 A:middle
adapting for Dynamic Type, you

00:11:56.856 --> 00:11:58.116 A:middle
can run into problems like this,

00:11:58.116 --> 00:11:59.156 A:middle
where the labels overlap.

00:12:00.876 --> 00:12:03.766 A:middle
What we really want here is a

00:12:03.766 --> 00:12:04.736 A:middle
spacing that's dynamic and that

00:12:04.736 --> 00:12:05.976 A:middle
accounts for the fonts involved.

00:12:11.086 --> 00:12:13.376 A:middle
In iOS 11 you can now do this

00:12:13.636 --> 00:12:15.076 A:middle
with new Auto Layout System

00:12:15.076 --> 00:12:15.976 A:middle
Spacing Constraints.

00:12:17.066 --> 00:12:18.586 A:middle
You can define the spacing

00:12:18.586 --> 00:12:20.566 A:middle
between two baselines and Auto

00:12:20.566 --> 00:12:21.876 A:middle
Layout will automatically figure

00:12:21.876 --> 00:12:23.616 A:middle
out the best spacing to use

00:12:24.026 --> 00:12:25.036 A:middle
based on the fonts of your

00:12:25.036 --> 00:12:25.456 A:middle
viewers.

00:12:26.976 --> 00:12:28.816 A:middle
Now, if you try this and you

00:12:28.816 --> 00:12:30.486 A:middle
decide that you want a slightly

00:12:30.486 --> 00:12:32.256 A:middle
larger or smaller spacing, you

00:12:32.426 --> 00:12:34.146 A:middle
can do that, too, by adjusting

00:12:34.146 --> 00:12:36.706 A:middle
the Multiplier property and that

00:12:36.706 --> 00:12:37.686 A:middle
will let you get the exact

00:12:37.766 --> 00:12:39.046 A:middle
results you want.

00:12:40.876 --> 00:12:42.546 A:middle
It's also possible to use these

00:12:42.546 --> 00:12:44.356 A:middle
new Auto Layout Constraints in

00:12:44.356 --> 00:12:45.626 A:middle
Interface Builder, and for more

00:12:45.626 --> 00:12:47.096 A:middle
information on that, please

00:12:47.096 --> 00:12:48.226 A:middle
check out the Auto Layout

00:12:48.226 --> 00:12:49.066 A:middle
Techniques and Interface Builder

00:12:49.066 --> 00:12:49.976 A:middle
talk that happened this morning.

00:12:56.156 --> 00:12:58.316 A:middle
Now, I know there are probably

00:12:58.316 --> 00:12:59.966 A:middle
some of you out there who have a

00:12:59.966 --> 00:13:00.826 A:middle
view in your app that was

00:13:00.886 --> 00:13:02.546 A:middle
written eight or nine years ago

00:13:02.546 --> 00:13:03.806 A:middle
and it's just not using Auto

00:13:04.756 --> 00:13:04.886 A:middle
Layout.

00:13:05.536 --> 00:13:06.686 A:middle
Don't worry, we have you

00:13:06.686 --> 00:13:07.026 A:middle
covered.

00:13:07.846 --> 00:13:09.046 A:middle
So let's say you have some

00:13:09.046 --> 00:13:10.976 A:middle
layout code that sets a constant

00:13:10.976 --> 00:13:11.696 A:middle
value and ads that to a y

00:13:11.776 --> 00:13:11.976 A:middle
origin.

00:13:16.346 --> 00:13:17.476 A:middle
Using the same UIFontMetrics

00:13:17.476 --> 00:13:19.556 A:middle
class we saw earlier we can

00:13:19.556 --> 00:13:21.556 A:middle
scale that 40 point value, or

00:13:21.556 --> 00:13:24.616 A:middle
any CGFloat value, and that way

00:13:24.616 --> 00:13:25.886 A:middle
it will get smaller or larger,

00:13:25.976 --> 00:13:26.846 A:middle
depending on the user's text

00:13:26.846 --> 00:13:26.966 A:middle
size.

00:13:33.256 --> 00:13:34.516 A:middle
Now let's look at one final

00:13:34.666 --> 00:13:35.356 A:middle
common scenario.

00:13:36.366 --> 00:13:38.356 A:middle
Here we've got two labels that

00:13:38.356 --> 00:13:40.196 A:middle
are side-by-side at the default

00:13:40.196 --> 00:13:40.696 A:middle
text size.

00:13:41.476 --> 00:13:42.916 A:middle
Again, you can imagine that the

00:13:42.916 --> 00:13:44.406 A:middle
yellow border is the area

00:13:44.406 --> 00:13:45.336 A:middle
available on screen.

00:13:46.616 --> 00:13:48.226 A:middle
Now let's scale our font sizes.

00:13:51.526 --> 00:13:52.746 A:middle
As you can see, there's not

00:13:52.746 --> 00:13:53.756 A:middle
enough room for the text

00:13:53.756 --> 00:13:56.906 A:middle
anymore, so going back to what

00:13:56.906 --> 00:13:58.006 A:middle
we saw earlier, we could try to

00:13:58.076 --> 00:13:58.966 A:middle
wrap the text --

00:14:04.046 --> 00:14:04.736 A:middle
and we'll get something like

00:14:04.786 --> 00:14:05.156 A:middle
this.

00:14:06.326 --> 00:14:07.756 A:middle
So I'd like to step back for a

00:14:07.756 --> 00:14:09.626 A:middle
second and revisit those three

00:14:09.626 --> 00:14:10.486 A:middle
goals we mentioned at the

00:14:10.486 --> 00:14:11.216 A:middle
beginning of the talk.

00:14:12.346 --> 00:14:13.846 A:middle
First, all text should be large

00:14:13.846 --> 00:14:14.926 A:middle
enough to read.

00:14:15.546 --> 00:14:16.316 A:middle
We've got that covered.

00:14:17.586 --> 00:14:19.846 A:middle
Second, all text should be fully

00:14:19.846 --> 00:14:20.246 A:middle
readable.

00:14:20.926 --> 00:14:21.836 A:middle
That's true here.

00:14:22.256 --> 00:14:24.986 A:middle
None of the text is missing.

00:14:25.116 --> 00:14:27.286 A:middle
Third, app UI should look

00:14:27.336 --> 00:14:29.236 A:middle
beautiful at all text sizes.

00:14:30.456 --> 00:14:31.556 A:middle
And that's where we haven't

00:14:31.556 --> 00:14:32.506 A:middle
quite met our goals yet.

00:14:32.506 --> 00:14:34.366 A:middle
As you can see, on the righthand

00:14:34.396 --> 00:14:36.456 A:middle
side the d is being orphaned

00:14:36.456 --> 00:14:37.596 A:middle
from the rest of the word and it

00:14:37.596 --> 00:14:38.626 A:middle
just doesn't look right.

00:14:38.786 --> 00:14:42.476 A:middle
So for this scenario we

00:14:42.476 --> 00:14:44.026 A:middle
recommend that for larger font

00:14:44.066 --> 00:14:47.016 A:middle
sizes you change your layout to

00:14:47.016 --> 00:14:49.056 A:middle
use vertical stacking and that

00:14:49.056 --> 00:14:50.396 A:middle
way each label can grow to the

00:14:50.396 --> 00:14:51.676 A:middle
full width of the screen.

00:14:54.536 --> 00:14:56.306 A:middle
Now, this technique works not

00:14:56.306 --> 00:14:57.936 A:middle
just for text, but for anything

00:14:57.936 --> 00:14:59.346 A:middle
that might take room away from

00:14:59.346 --> 00:14:59.856 A:middle
text.

00:15:00.656 --> 00:15:02.106 A:middle
For example, here's the Siri

00:15:02.106 --> 00:15:04.176 A:middle
Help screen and notice how on

00:15:04.246 --> 00:15:06.296 A:middle
the left, at the default text

00:15:06.296 --> 00:15:08.326 A:middle
size, there's an icon that takes

00:15:08.326 --> 00:15:10.346 A:middle
up a horizontal column away from

00:15:10.346 --> 00:15:10.636 A:middle
the text.

00:15:11.966 --> 00:15:13.336 A:middle
So that's why for larger font

00:15:13.336 --> 00:15:14.936 A:middle
sizes we actually move that icon

00:15:14.936 --> 00:15:16.606 A:middle
above the text and allow the

00:15:16.606 --> 00:15:17.706 A:middle
text to grow to the full width

00:15:17.706 --> 00:15:17.976 A:middle
of the screen.

00:15:23.056 --> 00:15:24.786 A:middle
Now, to do an alternate layout

00:15:24.786 --> 00:15:26.086 A:middle
based on the user's text size

00:15:26.306 --> 00:15:27.316 A:middle
you'll need to know how to get

00:15:27.316 --> 00:15:27.426 A:middle
that.

00:15:28.506 --> 00:15:31.126 A:middle
You can do that by accessing the

00:15:31.226 --> 00:15:34.046 A:middle
preferredConstantSizeCategory

00:15:34.046 --> 00:15:36.166 A:middle
property on either your view's

00:15:36.166 --> 00:15:38.866 A:middle
traitCollection or on the

00:15:38.866 --> 00:15:39.966 A:middle
UIApplication object.

00:15:42.596 --> 00:15:44.356 A:middle
The default text size will

00:15:44.356 --> 00:15:46.246 A:middle
return large and the standard

00:15:46.246 --> 00:15:48.876 A:middle
sizes run from extra small to

00:15:48.916 --> 00:15:50.406 A:middle
extra, extra, extra large.

00:15:53.256 --> 00:15:55.606 A:middle
The Accessibility sizes are

00:15:55.606 --> 00:15:57.076 A:middle
prefixed with Accessibility to

00:15:57.076 --> 00:15:57.976 A:middle
avoid adding more extras.

00:16:03.356 --> 00:16:05.126 A:middle
Now, in iOS 11 we've added new

00:16:05.126 --> 00:16:06.376 A:middle
functions that you can use to

00:16:06.376 --> 00:16:07.676 A:middle
ask questions about the user's

00:16:07.676 --> 00:16:08.256 A:middle
text size.

00:16:09.786 --> 00:16:10.976 A:middle
So, for example, you can check

00:16:10.976 --> 00:16:12.136 A:middle
whether the user is using one of

00:16:12.136 --> 00:16:13.626 A:middle
the Accessibility text sizes,

00:16:13.716 --> 00:16:15.116 A:middle
and if so, you can do an

00:16:15.116 --> 00:16:16.326 A:middle
alternate layout like vertical

00:16:16.326 --> 00:16:16.706 A:middle
stacking,

00:16:19.286 --> 00:16:20.506 A:middle
or you can use any threshold you

00:16:20.506 --> 00:16:20.866 A:middle
want.

00:16:21.526 --> 00:16:22.746 A:middle
We now support compares in

00:16:22.746 --> 00:16:24.196 A:middle
operators so you can check

00:16:24.196 --> 00:16:25.636 A:middle
whether the user's text size is

00:16:25.636 --> 00:16:26.706 A:middle
larger than a particular

00:16:26.706 --> 00:16:26.976 A:middle
threshold.

00:16:33.276 --> 00:16:35.436 A:middle
So that covers some general

00:16:35.436 --> 00:16:36.616 A:middle
guidelines for adapting your

00:16:36.616 --> 00:16:38.316 A:middle
layouts for Dynamic Type.

00:16:38.966 --> 00:16:40.816 A:middle
Now let's look at the specific

00:16:40.816 --> 00:16:44.616 A:middle
case of table views.

00:16:44.616 --> 00:16:45.946 A:middle
Earlier we saw how the Settings

00:16:45.946 --> 00:16:47.516 A:middle
app adapts beautifully for all

00:16:47.516 --> 00:16:48.606 A:middle
Dynamic Type sizes.

00:16:49.096 --> 00:16:50.246 A:middle
The good news is that if you're

00:16:50.246 --> 00:16:51.456 A:middle
using a standard table view

00:16:51.456 --> 00:16:53.016 A:middle
styles, you will get this kind

00:16:53.016 --> 00:16:53.866 A:middle
of layout for free.

00:16:54.556 --> 00:16:56.166 A:middle
So your fonts will grow or

00:16:56.166 --> 00:16:57.526 A:middle
shrink, depending on the Dynamic

00:16:57.526 --> 00:16:59.316 A:middle
Type setting, and for larger

00:16:59.316 --> 00:17:01.436 A:middle
fonts the text will wrap so that

00:17:01.436 --> 00:17:04.706 A:middle
all of it is visible.

00:17:04.706 --> 00:17:06.066 A:middle
Also, for standard table views

00:17:06.066 --> 00:17:07.486 A:middle
that have a detail text label,

00:17:08.436 --> 00:17:09.656 A:middle
those will automatically lay out

00:17:09.656 --> 00:17:11.306 A:middle
with vertical stacking for

00:17:11.306 --> 00:17:12.746 A:middle
larger fonts.

00:17:15.266 --> 00:17:16.416 A:middle
So standard table views will

00:17:16.416 --> 00:17:17.596 A:middle
adapt their layout for Dynamic

00:17:17.686 --> 00:17:21.176 A:middle
Type, and cell heights are based

00:17:21.176 --> 00:17:21.906 A:middle
on their content.

00:17:22.696 --> 00:17:24.006 A:middle
This is particularly important

00:17:24.006 --> 00:17:25.556 A:middle
at larger font sizes where the

00:17:25.556 --> 00:17:27.636 A:middle
text wraps because a cell that

00:17:27.636 --> 00:17:29.116 A:middle
has more text may need to be

00:17:29.166 --> 00:17:31.066 A:middle
taller than a cell that has

00:17:32.216 --> 00:17:32.316 A:middle
less.

00:17:32.316 --> 00:17:34.026 A:middle
So how do we accomplish variable

00:17:34.026 --> 00:17:34.976 A:middle
cell heights in a table view?

00:17:38.096 --> 00:17:39.056 A:middle
We can do this through a

00:17:39.056 --> 00:17:40.346 A:middle
technique called self-sizing.

00:17:42.006 --> 00:17:43.346 A:middle
When self-sizing is enabled, the

00:17:43.346 --> 00:17:44.996 A:middle
table view will ask each cell to

00:17:44.996 --> 00:17:47.126 A:middle
provide its own size and the

00:17:47.176 --> 00:17:48.806 A:middle
cell can calculate that based on

00:17:48.806 --> 00:17:50.346 A:middle
its own content.

00:17:51.236 --> 00:17:53.196 A:middle
Then the table view client

00:17:53.196 --> 00:17:54.426 A:middle
simply needs to give the table

00:17:54.426 --> 00:17:55.736 A:middle
view an estimate for any cells

00:17:55.736 --> 00:17:56.836 A:middle
that are off screen.

00:18:03.076 --> 00:18:05.356 A:middle
In iOS 11 self-sizing is enabled

00:18:05.356 --> 00:18:06.026 A:middle
by default.

00:18:07.236 --> 00:18:09.226 A:middle
However, if you're using fixed

00:18:09.226 --> 00:18:11.496 A:middle
row heights or if you are using

00:18:11.496 --> 00:18:12.936 A:middle
Interface Builder, you may need

00:18:12.936 --> 00:18:14.206 A:middle
to enable self-sizing.

00:18:14.796 --> 00:18:17.846 A:middle
To do so set your row height of

00:18:17.846 --> 00:18:19.476 A:middle
a table view to be Automatic

00:18:19.516 --> 00:18:21.516 A:middle
Dimension and then set the

00:18:21.516 --> 00:18:23.166 A:middle
Estimated Row Height to a

00:18:23.166 --> 00:18:24.626 A:middle
reasonable estimate given your

00:18:24.626 --> 00:18:25.476 A:middle
table view.

00:18:27.016 --> 00:18:28.516 A:middle
If you have section headers and

00:18:28.516 --> 00:18:30.326 A:middle
footers, you can do the same

00:18:30.326 --> 00:18:31.556 A:middle
thing for those using very

00:18:31.556 --> 00:18:32.976 A:middle
similarly named properties.

00:18:38.346 --> 00:18:39.826 A:middle
So that's the story for standard

00:18:39.826 --> 00:18:40.486 A:middle
table view cells.

00:18:41.136 --> 00:18:42.616 A:middle
Now, if you're using custom

00:18:42.616 --> 00:18:44.526 A:middle
cells with Auto Layout, it's

00:18:44.526 --> 00:18:45.696 A:middle
really easy to get these to work

00:18:45.696 --> 00:18:46.366 A:middle
with self-sizing.

00:18:46.926 --> 00:18:49.436 A:middle
All you need to do is set up

00:18:49.476 --> 00:18:50.776 A:middle
your constraints so that they

00:18:50.776 --> 00:18:53.226 A:middle
define the size of the cell and

00:18:53.226 --> 00:18:54.906 A:middle
then Auto Layout will figure out

00:18:54.906 --> 00:18:55.686 A:middle
the size for you.

00:18:57.066 --> 00:18:57.996 A:middle
So let's look at how we could

00:18:58.026 --> 00:18:59.366 A:middle
set up the constraints for this

00:18:59.366 --> 00:19:01.126 A:middle
custom cell shown here, where we

00:19:01.126 --> 00:19:02.766 A:middle
have two labels, one on top of

00:19:02.766 --> 00:19:02.966 A:middle
the other.

00:19:05.356 --> 00:19:06.906 A:middle
We'll definitely want leading

00:19:06.906 --> 00:19:08.046 A:middle
and trailing constraints for

00:19:08.046 --> 00:19:08.816 A:middle
those labels.

00:19:09.416 --> 00:19:12.026 A:middle
And we want to make sure that

00:19:12.026 --> 00:19:13.116 A:middle
the labels are separated

00:19:13.116 --> 00:19:15.086 A:middle
vertically by an appropriate

00:19:15.086 --> 00:19:16.006 A:middle
amount of space.

00:19:16.786 --> 00:19:18.186 A:middle
Again, you can use the new

00:19:18.186 --> 00:19:19.306 A:middle
System Spacing Constraints to

00:19:19.306 --> 00:19:20.836 A:middle
get a value that will work well

00:19:20.836 --> 00:19:21.896 A:middle
at all text sizes.

00:19:21.956 --> 00:19:23.976 A:middle
So are we done?

00:19:27.186 --> 00:19:27.696 A:middle
Not quite.

00:19:27.696 --> 00:19:29.296 A:middle
We still need to add constraints

00:19:29.296 --> 00:19:31.006 A:middle
relative to the top and bottom

00:19:31.006 --> 00:19:32.926 A:middle
of the cell and that will

00:19:32.926 --> 00:19:34.086 A:middle
complete the set of constraints

00:19:34.086 --> 00:19:35.516 A:middle
we need to define the size of

00:19:35.516 --> 00:19:35.886 A:middle
the cell.

00:19:37.436 --> 00:19:38.796 A:middle
Again, you can use the System

00:19:38.796 --> 00:19:40.216 A:middle
Spacing Constraints here to get

00:19:40.216 --> 00:19:41.036 A:middle
values that will look good

00:19:41.036 --> 00:19:41.946 A:middle
across all text sizes.

00:19:47.576 --> 00:19:49.236 A:middle
Now, if you're using Manual

00:19:49.236 --> 00:19:50.606 A:middle
Layout with your cells, you can

00:19:50.606 --> 00:19:51.766 A:middle
also use self-sizing.

00:19:52.626 --> 00:19:55.356 A:middle
To do so you'll want to override

00:19:55.356 --> 00:19:57.386 A:middle
the sizeThatFits method on your

00:19:57.386 --> 00:20:01.556 A:middle
cell, and then you can use the

00:20:01.556 --> 00:20:03.866 A:middle
contentView's width to figure

00:20:03.866 --> 00:20:04.726 A:middle
out the width available for your

00:20:04.726 --> 00:20:04.976 A:middle
subviews.

00:20:13.176 --> 00:20:14.676 A:middle
Now let's move on to our last

00:20:14.676 --> 00:20:15.856 A:middle
topic, images.

00:20:17.356 --> 00:20:18.926 A:middle
Why are images showing up in a

00:20:18.926 --> 00:20:19.936 A:middle
talk about Dynamic Type?

00:20:21.116 --> 00:20:22.226 A:middle
After all, they're not text.

00:20:22.866 --> 00:20:25.456 A:middle
But images are an integral part

00:20:25.456 --> 00:20:26.946 A:middle
of your app's UI and in some

00:20:26.946 --> 00:20:28.896 A:middle
cases they carry meaning that's

00:20:28.896 --> 00:20:30.266 A:middle
not communicated elsewhere.

00:20:31.106 --> 00:20:32.416 A:middle
So for the same reason it's

00:20:32.416 --> 00:20:34.036 A:middle
important for your text to be

00:20:34.036 --> 00:20:35.916 A:middle
readable by your users, it's

00:20:35.916 --> 00:20:37.436 A:middle
also important that your images

00:20:37.436 --> 00:20:38.276 A:middle
are distinguishable.

00:20:39.596 --> 00:20:40.636 A:middle
Let's look at an example.

00:20:43.136 --> 00:20:44.776 A:middle
So here's the Recents view in

00:20:44.776 --> 00:20:46.576 A:middle
the phone app.

00:20:46.576 --> 00:20:48.896 A:middle
Notice how in front of some of

00:20:48.896 --> 00:20:51.126 A:middle
the calls there's an image of a

00:20:51.236 --> 00:20:52.846 A:middle
phone with an arrow pointing out

00:20:52.846 --> 00:20:53.816 A:middle
of it.

00:20:54.476 --> 00:20:56.356 A:middle
This image means that this call

00:20:56.356 --> 00:20:58.856 A:middle
was made by you versus a call

00:20:59.946 --> 00:21:01.126 A:middle
that came in.

00:21:01.126 --> 00:21:02.636 A:middle
Now let's turn up the text size.

00:21:05.486 --> 00:21:06.386 A:middle
For those of you who are

00:21:06.386 --> 00:21:08.136 A:middle
wondering, the image has moved

00:21:08.136 --> 00:21:10.526 A:middle
over here and notice how it is

00:21:10.526 --> 00:21:12.166 A:middle
tiny compared to the text.

00:21:12.166 --> 00:21:14.766 A:middle
If you need your text to be this

00:21:14.806 --> 00:21:16.826 A:middle
big so you can read it, you

00:21:16.826 --> 00:21:18.126 A:middle
probably can't see that image.

00:21:19.396 --> 00:21:22.056 A:middle
So what we really want to do

00:21:22.616 --> 00:21:24.316 A:middle
here is scale the image the same

00:21:24.316 --> 00:21:25.746 A:middle
way that we scale a text, and

00:21:26.376 --> 00:21:27.526 A:middle
that's exactly what we've done

00:21:27.576 --> 00:21:29.696 A:middle
in iOS 11, and better yet, we

00:21:29.696 --> 00:21:31.226 A:middle
made it easy for you to do so in

00:21:31.226 --> 00:21:31.756 A:middle
your own apps.

00:21:34.276 --> 00:21:35.896 A:middle
So to just allow your images to

00:21:36.016 --> 00:21:37.986 A:middle
scale for Dynamic Type you'll

00:21:37.986 --> 00:21:39.626 A:middle
first want to make sure that

00:21:39.626 --> 00:21:40.886 A:middle
your images are provided as

00:21:40.936 --> 00:21:42.476 A:middle
PDF's at 1x scale.

00:21:43.416 --> 00:21:44.846 A:middle
So this is a good idea anyways

00:21:44.846 --> 00:21:46.146 A:middle
because it allows you to use the

00:21:46.146 --> 00:21:48.826 A:middle
same image for both 2x and 3x

00:21:48.826 --> 00:21:49.896 A:middle
resolution devices.

00:21:50.376 --> 00:21:52.216 A:middle
In fact, your app might already

00:21:52.216 --> 00:21:53.756 A:middle
be doing this.

00:21:53.756 --> 00:21:55.026 A:middle
So just make sure you have a

00:21:55.026 --> 00:21:55.116 A:middle
PDF.

00:21:55.936 --> 00:21:58.946 A:middle
Next, go to the Asset Catalog

00:21:59.666 --> 00:22:01.526 A:middle
and check this new checkbox for

00:22:01.526 --> 00:22:02.556 A:middle
Preserving Vector Data.

00:22:03.316 --> 00:22:05.696 A:middle
If you don't check the checkbox,

00:22:06.086 --> 00:22:07.126 A:middle
when the Asset Catalog is

00:22:07.126 --> 00:22:09.516 A:middle
compiled, it's going to

00:22:09.516 --> 00:22:10.396 A:middle
rasterize all the PDF's.

00:22:11.656 --> 00:22:12.856 A:middle
But if you check the checkbox,

00:22:12.856 --> 00:22:14.636 A:middle
the original PDF gets preserved,

00:22:14.676 --> 00:22:17.316 A:middle
and the cool thing about that is

00:22:17.316 --> 00:22:18.896 A:middle
that now if you use this image

00:22:18.896 --> 00:22:20.456 A:middle
and put it into an image view of

00:22:20.456 --> 00:22:22.576 A:middle
any size, the image will get

00:22:22.576 --> 00:22:23.826 A:middle
drawn smoothly using PDF

00:22:23.826 --> 00:22:23.976 A:middle
Drawing.

00:22:24.516 --> 00:22:32.576 A:middle
[ Applause ]

00:22:33.076 --> 00:22:34.436 A:middle
Now, the final step is to make

00:22:34.436 --> 00:22:35.996 A:middle
sure that your view resizes for

00:22:35.996 --> 00:22:36.596 A:middle
Dynamic Type.

00:22:37.166 --> 00:22:38.796 A:middle
To do this in Interface Builder

00:22:39.426 --> 00:22:41.846 A:middle
you can select any image view or

00:22:41.846 --> 00:22:44.226 A:middle
button and you can check the new

00:22:44.226 --> 00:22:46.056 A:middle
Adjusts Image Size property.

00:22:47.756 --> 00:22:49.076 A:middle
This means that your image

00:22:49.076 --> 00:22:51.356 A:middle
viewer button will scale up for

00:22:51.356 --> 00:22:52.806 A:middle
the five largest Dynamic Type

00:22:52.806 --> 00:22:53.266 A:middle
sizes.

00:22:56.116 --> 00:22:57.276 A:middle
And you can do the same thing in

00:22:57.276 --> 00:22:59.616 A:middle
code with the Adjusts Image Size

00:22:59.866 --> 00:22:59.986 A:middle
for

00:22:59.986 --> 00:23:01.646 A:middle
AccessibilityContentSizeCategory

00:23:01.646 --> 00:23:01.946 A:middle
property.

00:23:08.236 --> 00:23:09.786 A:middle
There's one more place where

00:23:09.786 --> 00:23:11.586 A:middle
image scaling comes in handy,

00:23:12.046 --> 00:23:14.246 A:middle
and that's when the user long

00:23:14.246 --> 00:23:16.186 A:middle
presses on a bar item.

00:23:16.606 --> 00:23:18.366 A:middle
So earlier we saw how you can

00:23:18.366 --> 00:23:19.746 A:middle
long press on the Voicemail tab

00:23:19.896 --> 00:23:21.136 A:middle
to show a larger version in the

00:23:21.136 --> 00:23:21.876 A:middle
middle of the screen.

00:23:22.426 --> 00:23:23.936 A:middle
Notice that both the text is

00:23:23.936 --> 00:23:25.146 A:middle
scaling and also the image.

00:23:25.146 --> 00:23:26.406 A:middle
So we want to make sure that

00:23:26.406 --> 00:23:27.526 A:middle
that image looks as good as

00:23:27.526 --> 00:23:27.946 A:middle
possible.

00:23:32.536 --> 00:23:34.746 A:middle
If your bar item is using a PDF

00:23:34.796 --> 00:23:36.666 A:middle
image, all you need to do is

00:23:36.666 --> 00:23:37.946 A:middle
check the Preserve Vector Data

00:23:37.946 --> 00:23:39.656 A:middle
checkbox that we saw earlier.

00:23:40.156 --> 00:23:42.216 A:middle
That will allow UIKit to scale

00:23:42.216 --> 00:23:42.976 A:middle
it up smoothly.

00:23:45.276 --> 00:23:46.066 A:middle
If you're not using a PDF,

00:23:46.066 --> 00:23:48.236 A:middle
you'll want to provide a larger

00:23:48.236 --> 00:23:49.226 A:middle
version that we can show when

00:23:49.226 --> 00:23:50.856 A:middle
the user long presses on that

00:23:50.856 --> 00:23:51.146 A:middle
image.

00:23:52.196 --> 00:23:55.596 A:middle
To do that in Interface Builder

00:23:55.826 --> 00:23:56.896 A:middle
you can go to the Attributes

00:23:56.896 --> 00:23:58.726 A:middle
Inspector and set the

00:23:58.726 --> 00:24:00.206 A:middle
Accessibility property of your

00:24:00.206 --> 00:24:01.976 A:middle
bar item to be the larger

00:24:02.726 --> 00:24:02.886 A:middle
version.

00:24:05.046 --> 00:24:06.466 A:middle
Or in code you can simply set

00:24:06.466 --> 00:24:08.006 A:middle
the largeContentSizeImage

00:24:08.006 --> 00:24:08.976 A:middle
property to that larger version.

00:24:14.536 --> 00:24:16.246 A:middle
So we've just covered a variety

00:24:16.246 --> 00:24:17.616 A:middle
of tips and tricks you can use

00:24:17.936 --> 00:24:19.116 A:middle
to adapt your apps for Dynamic

00:24:19.166 --> 00:24:19.346 A:middle
Type.

00:24:19.916 --> 00:24:20.886 A:middle
And now I'd like to invite

00:24:20.886 --> 00:24:22.466 A:middle
Nandini to the stage to show all

00:24:22.466 --> 00:24:22.976 A:middle
of that in a sample app.

00:24:23.516 --> 00:24:30.586 A:middle
[ Applause ]

00:24:31.086 --> 00:24:31.746 A:middle
&gt;&gt; Hi everyone.

00:24:32.456 --> 00:24:33.346 A:middle
I'm Nandini.

00:24:33.346 --> 00:24:34.696 A:middle
I'm a software engineer in the

00:24:34.696 --> 00:24:36.126 A:middle
Accessibility Team at Apple.

00:24:37.376 --> 00:24:39.366 A:middle
Today, using a sample app, I'll

00:24:39.466 --> 00:24:41.176 A:middle
show you how you can fix your

00:24:41.446 --> 00:24:43.066 A:middle
app in very little time with

00:24:43.066 --> 00:24:43.386 A:middle
[inaudible] font sizes.

00:24:43.386 --> 00:24:46.366 A:middle
First, I will open the app in

00:24:46.366 --> 00:24:48.016 A:middle
the default text size, and later

00:24:48.096 --> 00:24:51.056 A:middle
I'll open the app in the largest

00:24:51.056 --> 00:24:52.286 A:middle
of the Dynamic Type font size

00:24:52.286 --> 00:24:54.926 A:middle
and fix issues along the way.

00:24:55.226 --> 00:24:56.206 A:middle
Let's start the app.

00:24:56.206 --> 00:24:56.626 A:middle
We cleared it.

00:24:56.626 --> 00:24:58.676 A:middle
It's called Cute Battle Pets.

00:24:58.676 --> 00:25:00.256 A:middle
In this app you can choose among

00:25:00.256 --> 00:25:01.546 A:middle
two pets to battle with each

00:25:01.546 --> 00:25:01.716 A:middle
other.

00:25:02.396 --> 00:25:06.116 A:middle
Let me open the app now.

00:25:06.116 --> 00:25:08.346 A:middle
In this tab, Opponents, you see

00:25:08.346 --> 00:25:10.096 A:middle
a list of pets you can choose to

00:25:10.096 --> 00:25:12.396 A:middle
battle among each other, and the

00:25:12.396 --> 00:25:14.716 A:middle
next tab, Achievements, you see

00:25:14.716 --> 00:25:16.666 A:middle
a list of badges of honors these

00:25:16.666 --> 00:25:17.586 A:middle
pets can earn.

00:25:18.986 --> 00:25:20.476 A:middle
Before auditing our app for the

00:25:20.476 --> 00:25:22.466 A:middle
largest of the Dynamic Type font

00:25:22.526 --> 00:25:23.866 A:middle
size, if we switch back to the

00:25:23.866 --> 00:25:26.726 A:middle
Opponents tab, you can audit

00:25:26.726 --> 00:25:28.386 A:middle
your app for the largest of the

00:25:28.386 --> 00:25:30.196 A:middle
Dynamic Font size using a very

00:25:30.196 --> 00:25:32.096 A:middle
handy tool in Xcode called

00:25:32.096 --> 00:25:33.406 A:middle
Accessibility Inspector.

00:25:33.956 --> 00:25:36.646 A:middle
This tool is very handy because

00:25:37.016 --> 00:25:38.556 A:middle
you can audit your app before

00:25:38.556 --> 00:25:39.456 A:middle
going to the Settings app on

00:25:39.456 --> 00:25:40.056 A:middle
your device.

00:25:41.356 --> 00:25:43.636 A:middle
You can open this tool by going

00:25:43.636 --> 00:25:45.976 A:middle
to Xcode in the menu bar, choose

00:25:45.976 --> 00:25:47.386 A:middle
Open Developer Tool and then

00:25:47.446 --> 00:25:48.576 A:middle
click on Accessibility

00:25:48.576 --> 00:25:48.976 A:middle
Inspector.

00:25:55.206 --> 00:25:56.896 A:middle
This tool can be used to audit

00:25:57.006 --> 00:25:59.326 A:middle
apps in all macOS and iOS

00:25:59.556 --> 00:26:01.006 A:middle
iPhones, including the

00:26:01.006 --> 00:26:01.456 A:middle
Simulators.

00:26:01.516 --> 00:26:05.836 A:middle
As our app is running on the

00:26:05.836 --> 00:26:07.226 A:middle
iPhone Simulator, I'll choose

00:26:07.226 --> 00:26:09.286 A:middle
Start from the dropdown menu.

00:26:09.886 --> 00:26:11.156 A:middle
I'll go to the Settings tab in

00:26:11.246 --> 00:26:12.576 A:middle
the Accessibility Inspector.

00:26:12.676 --> 00:26:15.376 A:middle
Here you see a font size slider.

00:26:16.576 --> 00:26:17.856 A:middle
The font size is currently the

00:26:17.856 --> 00:26:18.726 A:middle
default text size.

00:26:19.456 --> 00:26:20.766 A:middle
I'm going to move the slider's

00:26:20.826 --> 00:26:22.276 A:middle
knob to the last notch on the

00:26:22.326 --> 00:26:22.666 A:middle
slider.

00:26:23.006 --> 00:26:24.106 A:middle
That is the largest of the

00:26:24.106 --> 00:26:26.846 A:middle
Dynamic Type font size.

00:26:27.006 --> 00:26:29.276 A:middle
Let's go back to our app now to

00:26:29.366 --> 00:26:32.716 A:middle
see the effect of this change.

00:26:32.956 --> 00:26:34.516 A:middle
The font size of these labels

00:26:34.516 --> 00:26:35.396 A:middle
has not changed yet.

00:26:35.396 --> 00:26:37.576 A:middle
Any idea why this is happening?

00:26:38.076 --> 00:26:39.346 A:middle
This is happening because of two

00:26:39.346 --> 00:26:39.776 A:middle
reasons.

00:26:39.926 --> 00:26:42.416 A:middle
The labels here are not yet set

00:26:42.416 --> 00:26:44.956 A:middle
to automatically adjust to the

00:26:44.956 --> 00:26:46.706 A:middle
user's ContentSizeCategory, and

00:26:47.046 --> 00:26:49.456 A:middle
the petName and petDescription

00:26:49.456 --> 00:26:50.876 A:middle
labels here are using custom

00:26:50.876 --> 00:26:51.236 A:middle
fonts.

00:26:52.456 --> 00:26:53.986 A:middle
Let's go to a project now to fix

00:26:53.986 --> 00:26:54.486 A:middle
these issues.

00:26:55.256 --> 00:26:57.286 A:middle
I'll minimize Accessibility

00:26:57.286 --> 00:26:58.196 A:middle
Inspector for now.

00:26:58.196 --> 00:27:03.206 A:middle
I'll go to BattleCell zip file.

00:27:03.426 --> 00:27:05.366 A:middle
Here, using the jump bar, I'll

00:27:05.366 --> 00:27:06.346 A:middle
move to Set Up Labels and

00:27:06.346 --> 00:27:07.336 A:middle
Buttons Method.

00:27:08.686 --> 00:27:12.976 A:middle
Here for petName, petDescription

00:27:12.976 --> 00:27:15.216 A:middle
and battleButton's titleLabel,

00:27:15.876 --> 00:27:17.526 A:middle
I'll set the property at this

00:27:17.726 --> 00:27:19.446 A:middle
font for ContentSizeCategory and

00:27:19.446 --> 00:27:19.976 A:middle
I'll set it to True.

00:27:27.246 --> 00:27:29.616 A:middle
As petName and petDescription

00:27:29.616 --> 00:27:32.766 A:middle
are using custom fonts, we can

00:27:32.766 --> 00:27:35.076 A:middle
use UIFont, make it API, scan

00:27:35.146 --> 00:27:36.246 A:middle
font for font metric.

00:27:37.036 --> 00:27:37.986 A:middle
For petName I'll be using the

00:27:38.126 --> 00:27:38.976 A:middle
headline TextStyle.

00:27:43.276 --> 00:27:45.316 A:middle
For petDescription I'll be using

00:27:45.316 --> 00:27:46.576 A:middle
the sub headline TextStyle.

00:27:50.376 --> 00:27:51.246 A:middle
Let's run the app again and see

00:27:51.246 --> 00:27:51.936 A:middle
the effect of these changes.

00:28:01.516 --> 00:28:03.636 A:middle
Now, after these labels are

00:28:03.636 --> 00:28:04.886 A:middle
adjusted to the user's

00:28:04.886 --> 00:28:07.276 A:middle
ContentSizeCategory, we see that

00:28:07.276 --> 00:28:08.736 A:middle
these labels have really less

00:28:08.736 --> 00:28:09.846 A:middle
horizontal room to grow.

00:28:09.846 --> 00:28:12.236 A:middle
With the menu on the left and

00:28:12.316 --> 00:28:14.106 A:middle
the button on the right, these

00:28:14.396 --> 00:28:15.686 A:middle
labels have really less

00:28:15.686 --> 00:28:17.576 A:middle
horizontal room to grow and the

00:28:17.576 --> 00:28:20.516 A:middle
labels either truncate or wrap

00:28:20.516 --> 00:28:21.226 A:middle
in multiple lines.

00:28:22.076 --> 00:28:25.776 A:middle
We can fix this by having an

00:28:25.826 --> 00:28:27.796 A:middle
alternate adopt layout for

00:28:27.796 --> 00:28:28.746 A:middle
larger text constraints.

00:28:30.206 --> 00:28:32.136 A:middle
We can achieve this by moving

00:28:32.136 --> 00:28:34.036 A:middle
the image above the text and the

00:28:34.036 --> 00:28:35.866 A:middle
button below the text.

00:28:36.556 --> 00:28:38.376 A:middle
This will ensure that the labels

00:28:38.376 --> 00:28:40.136 A:middle
are less of wrap and truncated.

00:28:40.136 --> 00:28:41.766 A:middle
Let's go fix this in our project

00:28:41.766 --> 00:28:41.916 A:middle
now.

00:28:47.076 --> 00:28:48.966 A:middle
First, before adding this

00:28:48.966 --> 00:28:50.246 A:middle
adoptLayoutConstraints for

00:28:50.246 --> 00:28:52.356 A:middle
larger text constraints, let me

00:28:52.356 --> 00:28:53.946 A:middle
add a private variable for that.

00:28:58.116 --> 00:28:59.756 A:middle
Next let me go to

00:28:59.756 --> 00:29:01.576 A:middle
setupLayoutConstraints method.

00:29:01.576 --> 00:29:04.916 A:middle
Here you see that you already

00:29:04.916 --> 00:29:06.426 A:middle
have a set of layout constraints

00:29:06.426 --> 00:29:07.596 A:middle
for default text size.

00:29:08.626 --> 00:29:10.066 A:middle
Now I'll be placing a set of

00:29:10.146 --> 00:29:11.446 A:middle
constraints for larger Dynamic

00:29:11.446 --> 00:29:11.976 A:middle
Type font sizes.

00:29:18.046 --> 00:29:19.736 A:middle
These set of constraints pasted

00:29:19.736 --> 00:29:20.896 A:middle
here will be available in the

00:29:20.896 --> 00:29:22.386 A:middle
sample app code attached along

00:29:22.386 --> 00:29:23.176 A:middle
the session website.

00:29:23.666 --> 00:29:25.366 A:middle
You can go and review this after

00:29:25.366 --> 00:29:27.216 A:middle
the session, but I give a short

00:29:27.216 --> 00:29:28.726 A:middle
overview of what this actually

00:29:28.726 --> 00:29:29.406 A:middle
do.

00:29:29.406 --> 00:29:32.636 A:middle
These constraints ensure that

00:29:32.636 --> 00:29:34.436 A:middle
the image labels and the button

00:29:34.436 --> 00:29:35.596 A:middle
are vertically stacked, and

00:29:35.946 --> 00:29:37.816 A:middle
these constraints also get them

00:29:37.816 --> 00:29:40.396 A:middle
in the height of the cell.

00:29:40.586 --> 00:29:42.106 A:middle
Okay. Let's go to our

00:29:42.106 --> 00:29:43.616 A:middle
developerLayoutConstraints

00:29:43.616 --> 00:29:43.936 A:middle
method.

00:29:45.026 --> 00:29:46.356 A:middle
Here we see that one of the

00:29:46.356 --> 00:29:48.046 A:middle
developer constraints aren't

00:29:48.346 --> 00:29:49.386 A:middle
activated.

00:29:49.386 --> 00:29:50.106 A:middle
We need the larger [inaudible],

00:29:50.106 --> 00:29:50.246 A:middle
right.

00:29:50.246 --> 00:29:50.976 A:middle
Let's fix that.

00:29:57.046 --> 00:29:59.176 A:middle
Here, based on user's

00:29:59.216 --> 00:30:00.676 A:middle
preferredContentSizeCategory,

00:30:00.916 --> 00:30:01.976 A:middle
they put in the five largest

00:30:01.976 --> 00:30:03.606 A:middle
Dynamic Type font sizes.

00:30:03.776 --> 00:30:05.746 A:middle
With the app you will be able to

00:30:05.746 --> 00:30:06.876 A:middle
look at its constraints and

00:30:06.876 --> 00:30:08.526 A:middle
activateLargeTextConstraints.

00:30:09.246 --> 00:30:10.496 A:middle
Otherwise, do the reverse

00:30:10.496 --> 00:30:11.086 A:middle
operation.

00:30:11.286 --> 00:30:14.956 A:middle
To ensure that these layout

00:30:14.956 --> 00:30:17.066 A:middle
constraints are up-to-date based

00:30:17.066 --> 00:30:18.056 A:middle
on the change in trait

00:30:18.056 --> 00:30:20.906 A:middle
collection, we call this method

00:30:20.906 --> 00:30:22.166 A:middle
if trait collection did change.

00:30:27.076 --> 00:30:27.746 A:middle
If the user's

00:30:27.746 --> 00:30:29.966 A:middle
preferredContentSizeCategory

00:30:29.966 --> 00:30:31.256 A:middle
shifts from the five largest

00:30:31.256 --> 00:30:33.156 A:middle
Dynamic Type font sizes to the

00:30:33.156 --> 00:30:34.586 A:middle
smaller Dynamic Type font sizes,

00:30:34.796 --> 00:30:37.016 A:middle
or visa-versa, these layout

00:30:37.016 --> 00:30:37.976 A:middle
constraints will be updated.

00:30:40.536 --> 00:30:41.226 A:middle
Let's run the app again to see

00:30:41.226 --> 00:30:41.956 A:middle
the effect of these changes.

00:30:51.266 --> 00:30:53.346 A:middle
Great. After vertically stacking

00:30:53.346 --> 00:30:55.396 A:middle
the content the labels are less

00:30:55.396 --> 00:30:57.256 A:middle
of wrapped and there's no

00:30:57.256 --> 00:30:58.006 A:middle
truncation at all.

00:30:58.566 --> 00:31:00.056 A:middle
Let's go the next step,

00:31:00.056 --> 00:31:00.926 A:middle
Achievements.

00:31:03.356 --> 00:31:04.806 A:middle
When we run the app in the

00:31:04.806 --> 00:31:06.526 A:middle
default text size, you will

00:31:06.526 --> 00:31:08.086 A:middle
notice that these cells here

00:31:08.086 --> 00:31:10.226 A:middle
have multiple lines of text, but

00:31:10.316 --> 00:31:12.166 A:middle
currently only one line of text

00:31:12.166 --> 00:31:13.056 A:middle
is visible on screen.

00:31:14.366 --> 00:31:15.646 A:middle
Let's go to Achievements View

00:31:15.646 --> 00:31:17.336 A:middle
Controller in Swift check on why

00:31:17.336 --> 00:31:17.976 A:middle
this is happening.

00:31:20.176 --> 00:31:22.266 A:middle
This is happening because the

00:31:22.266 --> 00:31:23.826 A:middle
table view's row height is set

00:31:23.826 --> 00:31:25.036 A:middle
to a constant value, hundred.

00:31:25.036 --> 00:31:27.426 A:middle
This makes that these cells do

00:31:27.516 --> 00:31:29.256 A:middle
not have cell size at all.

00:31:30.096 --> 00:31:31.766 A:middle
To fix this and make this cells

00:31:31.766 --> 00:31:34.156 A:middle
have size we have to set the

00:31:34.156 --> 00:31:35.976 A:middle
table view's row height to use

00:31:35.976 --> 00:31:37.756 A:middle
UITableViewAutomaticDimension,

00:31:37.756 --> 00:31:39.686 A:middle
and TableView's

00:31:39.686 --> 00:31:42.206 A:middle
estimatedRowHeight to a constant

00:31:42.206 --> 00:31:43.976 A:middle
value, and I'll choose hundred.

00:31:49.116 --> 00:31:49.916 A:middle
Let's run the app again.

00:31:58.136 --> 00:31:59.846 A:middle
Let me go to Achievements tab.

00:31:59.846 --> 00:32:03.936 A:middle
Now we see that we have more

00:32:03.936 --> 00:32:05.426 A:middle
lines of text in each of these

00:32:05.476 --> 00:32:07.736 A:middle
cells, and the cells, they're

00:32:07.826 --> 00:32:09.696 A:middle
sized to fit content, but let's

00:32:09.986 --> 00:32:11.036 A:middle
take a look at the [inaudible].

00:32:11.036 --> 00:32:16.046 A:middle
Unlike the labels the images do

00:32:16.046 --> 00:32:17.106 A:middle
not grow, according to the

00:32:17.106 --> 00:32:18.186 A:middle
user's ContentSizeCategory.

00:32:18.926 --> 00:32:21.126 A:middle
To fix this let's go to

00:32:21.126 --> 00:32:21.806 A:middle
Achievements [inaudible] file.

00:32:27.256 --> 00:32:29.376 A:middle
And set the label and image view

00:32:29.426 --> 00:32:29.976 A:middle
method.

00:32:30.746 --> 00:32:32.866 A:middle
For the badgeImageView I set the

00:32:32.866 --> 00:32:34.966 A:middle
property adjustsImageSize for

00:32:34.966 --> 00:32:36.106 A:middle
accessibilityContentSize

00:32:36.146 --> 00:32:37.936 A:middle
Category, and I set it to two.

00:32:38.826 --> 00:32:40.636 A:middle
This will ensure that the image

00:32:40.636 --> 00:32:42.096 A:middle
is scaled for the five largest

00:32:42.096 --> 00:32:42.976 A:middle
Dynamic Type font sizes.

00:32:47.056 --> 00:32:48.016 A:middle
Let's run the app again to see

00:32:48.016 --> 00:32:48.946 A:middle
the effect of this change.

00:32:56.516 --> 00:33:00.016 A:middle
Let me move to Achievements tab.

00:33:00.216 --> 00:33:02.896 A:middle
Great. Both the labels and the

00:33:02.896 --> 00:33:04.806 A:middle
image have sizes largest Dynamic

00:33:04.806 --> 00:33:08.156 A:middle
Type font size, but let's take a

00:33:08.156 --> 00:33:09.346 A:middle
closer look at the image in

00:33:09.406 --> 00:33:09.966 A:middle
these cells.

00:33:15.236 --> 00:33:17.156 A:middle
Let's also take a look at the

00:33:17.156 --> 00:33:19.236 A:middle
large text only that comes up in

00:33:19.236 --> 00:33:20.426 A:middle
a long press on the tab bar

00:33:20.426 --> 00:33:20.906 A:middle
icons.

00:33:29.376 --> 00:33:31.256 A:middle
Based on that, the images in

00:33:31.256 --> 00:33:33.306 A:middle
these cells and also in the tab

00:33:33.306 --> 00:33:35.386 A:middle
bar icons were not smooth.

00:33:35.856 --> 00:33:37.556 A:middle
To fix that we have to go to

00:33:37.556 --> 00:33:39.396 A:middle
Assets Catalog, choose our

00:33:40.596 --> 00:33:43.996 A:middle
images, those are PDF images, go

00:33:44.546 --> 00:33:49.636 A:middle
to the Attributes Inspector and

00:33:49.636 --> 00:33:53.596 A:middle
click on the Preserve Vector

00:33:53.596 --> 00:33:54.946 A:middle
Data checkbox.

00:34:00.356 --> 00:34:02.256 A:middle
If we do this, what happens is

00:34:02.256 --> 00:34:03.926 A:middle
the PDF vector data is preserved

00:34:03.926 --> 00:34:05.806 A:middle
and the images are rendered

00:34:05.846 --> 00:34:07.376 A:middle
smooth in different Dynamic Type

00:34:07.376 --> 00:34:07.926 A:middle
font sizes.

00:34:09.446 --> 00:34:10.396 A:middle
Let's run the app again to see

00:34:10.396 --> 00:34:10.936 A:middle
the effect of this change.

00:34:21.126 --> 00:34:22.576 A:middle
Let me go to Achievements tab.

00:34:23.336 --> 00:34:24.796 A:middle
For confirmation, let me zoom in

00:34:24.796 --> 00:34:24.946 A:middle
again.

00:34:31.166 --> 00:34:33.996 A:middle
Now we see that the images here

00:34:33.996 --> 00:34:36.846 A:middle
are rendered smooth, right.

00:34:39.386 --> 00:34:41.766 A:middle
Finally, using the Accessibility

00:34:41.766 --> 00:34:43.286 A:middle
Inspector, I'm going to run

00:34:43.286 --> 00:34:44.916 A:middle
through a quick audit of this

00:34:45.246 --> 00:34:46.926 A:middle
app and different Dynamic Type

00:34:46.926 --> 00:34:47.466 A:middle
font sizes.

00:34:47.896 --> 00:34:49.356 A:middle
For that let me minimize Xcode.

00:34:49.356 --> 00:34:50.126 A:middle
Let me bring up the

00:34:50.756 --> 00:34:51.976 A:middle
Accessibility Inspector.

00:34:56.166 --> 00:34:57.666 A:middle
Let me move the first tab,

00:34:57.666 --> 00:34:58.236 A:middle
Opponents.

00:34:59.006 --> 00:35:01.786 A:middle
Let me switch the font size

00:35:01.836 --> 00:35:03.086 A:middle
slider to default text size.

00:35:04.186 --> 00:35:05.496 A:middle
Now I'm going to increase the

00:35:05.536 --> 00:35:07.386 A:middle
font size one-by-one and you'll

00:35:07.386 --> 00:35:09.966 A:middle
notice that the labels in these

00:35:09.966 --> 00:35:11.436 A:middle
cells increase according to the

00:35:11.436 --> 00:35:12.696 A:middle
user's ContentSizeCategory.

00:35:12.696 --> 00:35:13.976 A:middle
When I move to the five larger

00:35:14.056 --> 00:35:16.246 A:middle
Dynamic Type font sizes, the

00:35:17.046 --> 00:35:18.766 A:middle
layout of these cells change.

00:35:19.726 --> 00:35:22.306 A:middle
The labels have more horizontal

00:35:22.306 --> 00:35:24.496 A:middle
room to grow and the cell says

00:35:24.496 --> 00:35:25.436 A:middle
sizeToFitContent.

00:35:28.196 --> 00:35:30.436 A:middle
Next move on to Achievements to

00:35:30.436 --> 00:35:31.466 A:middle
do the same audit.

00:35:34.436 --> 00:35:37.246 A:middle
I'll switch back to default text

00:35:38.876 --> 00:35:39.006 A:middle
size.

00:35:39.216 --> 00:35:40.496 A:middle
I'll increase the font size

00:35:40.646 --> 00:35:41.706 A:middle
one-by-one.

00:35:42.736 --> 00:35:44.666 A:middle
Now, you see that the labels

00:35:44.666 --> 00:35:45.686 A:middle
wrap in multiple lines.

00:35:46.346 --> 00:35:48.186 A:middle
The cell says sizeToFitContent,

00:35:48.756 --> 00:35:51.186 A:middle
and also the image scales in the

00:35:51.256 --> 00:35:52.966 A:middle
five larger Dynamic Type font

00:35:53.616 --> 00:35:53.806 A:middle
sizes.

00:35:55.256 --> 00:35:56.226 A:middle
So there you have it.

00:35:56.226 --> 00:35:58.376 A:middle
Our app looks pretty great in

00:35:58.376 --> 00:36:00.386 A:middle
all the Dynamic Type font sizes.

00:36:00.676 --> 00:36:03.606 A:middle
So using the new API's available

00:36:03.606 --> 00:36:05.076 A:middle
in iOS 11, you can make your

00:36:05.136 --> 00:36:06.366 A:middle
apps, too, work for all Dynamic

00:36:06.366 --> 00:36:07.046 A:middle
Type font sizes.

00:36:07.946 --> 00:36:09.546 A:middle
Now I welcome Clare back on

00:36:09.546 --> 00:36:10.306 A:middle
stage to conclude the

00:36:10.306 --> 00:36:10.756 A:middle
presentation.

00:36:10.756 --> 00:36:10.946 A:middle
Thank you.

00:36:11.516 --> 00:36:17.606 A:middle
[ Applause ]

00:36:18.106 --> 00:36:19.366 A:middle
&gt;&gt; Thanks, Nandini.

00:36:19.916 --> 00:36:21.666 A:middle
So all of that sample code is

00:36:21.666 --> 00:36:23.186 A:middle
available on our session

00:36:23.186 --> 00:36:26.436 A:middle
website, but the version we have

00:36:26.436 --> 00:36:27.366 A:middle
on the session website is

00:36:27.366 --> 00:36:28.676 A:middle
actually expanded to include

00:36:28.676 --> 00:36:29.686 A:middle
even more examples.

00:36:29.686 --> 00:36:31.706 A:middle
So you can see how we do this in

00:36:31.706 --> 00:36:32.766 A:middle
Interface Builder.

00:36:32.986 --> 00:36:34.396 A:middle
You can see an example where we

00:36:34.396 --> 00:36:36.196 A:middle
wrap text around images.

00:36:36.556 --> 00:36:38.056 A:middle
You can find a case where we

00:36:38.056 --> 00:36:39.376 A:middle
allow scrolling only when

00:36:39.376 --> 00:36:41.296 A:middle
necessary for larger fonts, and

00:36:41.296 --> 00:36:41.546 A:middle
more.

00:36:42.276 --> 00:36:43.566 A:middle
Think of it as a recipe book for

00:36:43.666 --> 00:36:44.816 A:middle
things you might encounter in

00:36:44.816 --> 00:36:45.466 A:middle
your own apps.

00:36:45.966 --> 00:36:47.376 A:middle
So we highly encourage you to

00:36:47.376 --> 00:36:47.976 A:middle
check it out after the session.

00:36:52.566 --> 00:36:53.506 A:middle
To summarize what we covered

00:36:53.506 --> 00:36:55.556 A:middle
today, it's easy to support

00:36:55.556 --> 00:36:57.836 A:middle
Dynamic Type with new API in iOS

00:36:57.836 --> 00:36:58.126 A:middle
11.

00:36:59.136 --> 00:37:00.526 A:middle
If you have an app that doesn't

00:37:00.526 --> 00:37:02.376 A:middle
support Dynamic Type, now is a

00:37:02.376 --> 00:37:04.196 A:middle
great time to do so, and you

00:37:04.196 --> 00:37:06.456 A:middle
should because supporting

00:37:06.456 --> 00:37:08.046 A:middle
Dynamic Type is good for your

00:37:08.046 --> 00:37:08.666 A:middle
users.

00:37:09.596 --> 00:37:10.716 A:middle
It's good for the users who

00:37:10.716 --> 00:37:12.616 A:middle
prefer smaller text because it

00:37:12.616 --> 00:37:13.726 A:middle
allows them to see more on

00:37:13.726 --> 00:37:14.126 A:middle
screen.

00:37:15.086 --> 00:37:15.996 A:middle
It's good for the users who

00:37:15.996 --> 00:37:17.576 A:middle
prefer larger text because it's

00:37:17.576 --> 00:37:19.886 A:middle
more comfortable to read, and

00:37:19.886 --> 00:37:21.826 A:middle
it's especially beneficial for

00:37:21.826 --> 00:37:23.846 A:middle
users who need larger text in

00:37:23.846 --> 00:37:26.286 A:middle
order to be able to read it.

00:37:26.546 --> 00:37:29.226 A:middle
When more apps are usable by

00:37:29.226 --> 00:37:30.766 A:middle
people with a disability, such

00:37:30.766 --> 00:37:33.116 A:middle
as low vision, it really helps

00:37:33.256 --> 00:37:35.006 A:middle
to level the playing field for

00:37:35.006 --> 00:37:35.796 A:middle
those users.

00:37:36.456 --> 00:37:37.836 A:middle
And so by supporting Dynamic

00:37:37.886 --> 00:37:39.306 A:middle
Type in your app, you're

00:37:39.306 --> 00:37:40.256 A:middle
actually making the world a

00:37:40.256 --> 00:37:40.736 A:middle
better place.

00:37:41.696 --> 00:37:43.356 A:middle
So we really hope you take what

00:37:43.356 --> 00:37:45.126 A:middle
you saw today in today's session

00:37:45.476 --> 00:37:47.376 A:middle
and go back and make apps that

00:37:47.376 --> 00:37:48.976 A:middle
work well with Dynamic Type and

00:37:49.036 --> 00:37:50.606 A:middle
include more users so that more

00:37:50.606 --> 00:37:51.606 A:middle
users can benefit from the great

00:37:51.606 --> 00:37:51.976 A:middle
work you've done.

00:37:56.286 --> 00:37:58.406 A:middle
For more information, including

00:37:58.406 --> 00:37:59.386 A:middle
the sample code we showed,

00:37:59.866 --> 00:38:00.746 A:middle
please go to our session

00:38:00.746 --> 00:38:00.976 A:middle
website.

00:38:04.396 --> 00:38:05.476 A:middle
Now, there have been several

00:38:05.476 --> 00:38:06.916 A:middle
sessions at this conference

00:38:06.916 --> 00:38:08.146 A:middle
related to the one we just gave.

00:38:08.806 --> 00:38:10.076 A:middle
As we mentioned earlier, the

00:38:10.076 --> 00:38:11.426 A:middle
Design for Everyone talk from

00:38:11.426 --> 00:38:13.086 A:middle
yesterday covers the design

00:38:13.086 --> 00:38:14.646 A:middle
thinking behind the iOS 11

00:38:14.646 --> 00:38:15.886 A:middle
Dynamic Type improvements.

00:38:16.536 --> 00:38:18.056 A:middle
There are also two sessions on

00:38:18.056 --> 00:38:19.556 A:middle
accessibility, What's New in

00:38:19.556 --> 00:38:21.406 A:middle
Accessibility and Media and

00:38:21.406 --> 00:38:22.406 A:middle
Gaming Accessibility.

00:38:22.406 --> 00:38:24.546 A:middle
Both of these sessions cover how

00:38:24.546 --> 00:38:26.126 A:middle
you can widen your user base and

00:38:26.126 --> 00:38:27.196 A:middle
include more users.

00:38:28.296 --> 00:38:30.296 A:middle
And finally, as we mentioned

00:38:30.296 --> 00:38:31.926 A:middle
earlier, to learn more about the

00:38:31.926 --> 00:38:33.486 A:middle
System Spacing Constraints in

00:38:33.486 --> 00:38:35.116 A:middle
Interface Builder, check out the

00:38:35.116 --> 00:38:36.226 A:middle
Auto Layout Techniques in

00:38:36.226 --> 00:38:37.226 A:middle
Interface Builder talk.

00:38:37.756 --> 00:38:38.706 A:middle
Thank you all for coming, and I

00:38:38.706 --> 00:38:39.416 A:middle
hope you enjoy the rest of the

00:38:39.416 --> 00:38:39.956 A:middle
conference.

00:38:40.516 --> 00:38:46.940 A:middle
[ Applause ]