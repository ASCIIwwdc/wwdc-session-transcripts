WEBVTT

00:00:06.516 --> 00:00:15.500 A:middle
[ Music ]

00:00:20.086 --> 00:00:21.136 A:middle
&gt;&gt; Welcome to designing web

00:00:21.136 --> 00:00:22.606 A:middle
content for watchOS.

00:00:22.856 --> 00:00:24.366 A:middle
My name is Wenson and I'm on the

00:00:24.366 --> 00:00:25.066 A:middle
WebKit team.

00:00:25.586 --> 00:00:27.586 A:middle
In watchOS 5, we're introducing

00:00:27.586 --> 00:00:29.546 A:middle
the ability to render rich HTML

00:00:29.546 --> 00:00:31.176 A:middle
content on Apple Watch using

00:00:31.176 --> 00:00:31.676 A:middle
WebKit.

00:00:32.406 --> 00:00:34.016 A:middle
Before we explore how it works,

00:00:34.396 --> 00:00:35.586 A:middle
let's go over a couple of the

00:00:35.586 --> 00:00:37.296 A:middle
ways WebKit enriches the user

00:00:37.296 --> 00:00:38.876 A:middle
experience on watchOS.

00:00:40.676 --> 00:00:43.206 A:middle
Previously in mail, rich HTML

00:00:43.206 --> 00:00:44.646 A:middle
mail messages would be rendered

00:00:44.646 --> 00:00:46.786 A:middle
in a text-only format requiring

00:00:46.786 --> 00:00:48.366 A:middle
the user to go to another device

00:00:48.366 --> 00:00:49.506 A:middle
for the full experience.

00:00:50.396 --> 00:00:52.936 A:middle
New in watchOS 5, the full HTML

00:00:52.936 --> 00:00:54.326 A:middle
mail message can now render on

00:00:54.326 --> 00:00:55.936 A:middle
Apple Watch in cases where

00:00:55.936 --> 00:00:57.586 A:middle
text-only formatting cannot

00:00:57.586 --> 00:00:59.066 A:middle
express the full content of the

00:00:59.066 --> 00:00:59.566 A:middle
message.


00:01:01.656 --> 00:01:02.926 A:middle
When tapping links in mail or

00:01:02.926 --> 00:01:04.836 A:middle
messages, we'd previously direct

00:01:04.836 --> 00:01:06.396 A:middle
the user to iPhone in order to

00:01:06.396 --> 00:01:07.336 A:middle
view the web page.

00:01:07.936 --> 00:01:10.196 A:middle
Also new in watchOS 5, the user

00:01:10.196 --> 00:01:11.746 A:middle
can now tap links to view and

00:01:11.746 --> 00:01:12.996 A:middle
interact with the web page

00:01:12.996 --> 00:01:14.396 A:middle
directly on Apple Watch.

00:01:18.866 --> 00:01:20.226 A:middle
In this session, we'll explore

00:01:20.226 --> 00:01:21.736 A:middle
the techniques WebKit uses to

00:01:21.736 --> 00:01:23.206 A:middle
adapt existing content to

00:01:23.206 --> 00:01:25.266 A:middle
watchOS and introduce a new

00:01:25.266 --> 00:01:26.506 A:middle
mechanism you can use to

00:01:26.506 --> 00:01:28.016 A:middle
optimize your content for

00:01:28.016 --> 00:01:29.296 A:middle
display on Apple Watch.

00:01:29.696 --> 00:01:31.206 A:middle
We'll also cover some other

00:01:31.206 --> 00:01:32.486 A:middle
important details you need to

00:01:32.486 --> 00:01:34.126 A:middle
know to ensure that users

00:01:34.126 --> 00:01:35.316 A:middle
viewing and interacting with

00:01:35.316 --> 00:01:36.656 A:middle
your content will have a great

00:01:36.656 --> 00:01:37.436 A:middle
experience.

00:01:38.296 --> 00:01:41.446 A:middle
I'd like to start by discussing

00:01:41.446 --> 00:01:43.176 A:middle
how WebKit works on Apple Watch.

00:01:45.126 --> 00:01:47.066 A:middle
Out of the box, WebKit supports

00:01:47.066 --> 00:01:48.126 A:middle
the gestures you're already

00:01:48.126 --> 00:01:48.836 A:middle
familiar with.

00:01:50.356 --> 00:01:51.816 A:middle
Turning the digital crown

00:01:51.816 --> 00:01:53.406 A:middle
scrolls vertically and you can

00:01:53.406 --> 00:01:54.696 A:middle
also drag your finger on the

00:01:54.696 --> 00:01:56.026 A:middle
screen to scroll the page.

00:01:59.996 --> 00:02:01.566 A:middle
Double tapping zooms into the


00:01:59.996 --> 00:02:01.566 A:middle
Double tapping zooms into the

00:02:01.566 --> 00:02:03.256 A:middle
page and a subsequent double tab

00:02:03.406 --> 00:02:04.376 A:middle
zooms back out.

00:02:06.246 --> 00:02:07.676 A:middle
Lastly, a firm press reveals

00:02:07.676 --> 00:02:09.246 A:middle
back and forward buttons, but

00:02:09.246 --> 00:02:10.795 A:middle
you can also swipe forwards or

00:02:10.795 --> 00:02:12.036 A:middle
backwards to navigate through

00:02:12.036 --> 00:02:12.646 A:middle
your history.

00:02:13.266 --> 00:02:14.986 A:middle
It's important to note that we

00:02:14.986 --> 00:02:16.276 A:middle
optimized WebKit for quickly

00:02:16.276 --> 00:02:17.286 A:middle
consuming content.

00:02:17.896 --> 00:02:19.106 A:middle
Therefore, a limited set of

00:02:19.106 --> 00:02:20.396 A:middle
features are not supported at

00:02:20.396 --> 00:02:20.966 A:middle
this time.

00:02:21.726 --> 00:02:23.206 A:middle
These include video playback,

00:02:23.336 --> 00:02:25.006 A:middle
service workers, and web fonts.

00:02:26.536 --> 00:02:27.906 A:middle
Now let's see how WebKit lays

00:02:27.906 --> 00:02:29.616 A:middle
out web pages on Apple Watch.

00:02:32.086 --> 00:02:33.436 A:middle
Most responsive content is

00:02:33.436 --> 00:02:34.786 A:middle
already well proportioned when

00:02:34.786 --> 00:02:37.206 A:middle
laid out at 320 CSS pixels, the

00:02:37.206 --> 00:02:38.516 A:middle
width of iPhone SE.

00:02:40.096 --> 00:02:41.146 A:middle
We ensure that it's also

00:02:41.146 --> 00:02:42.626 A:middle
well-proportioned on Apple Watch

00:02:42.626 --> 00:02:44.196 A:middle
by laying out at this width and

00:02:44.196 --> 00:02:45.766 A:middle
then computing the initial scale

00:02:45.766 --> 00:02:47.056 A:middle
of the page such that the

00:02:47.056 --> 00:02:48.396 A:middle
content width fits within the

00:02:48.396 --> 00:02:48.976 A:middle
viewport.

00:02:49.586 --> 00:02:51.206 A:middle
This means that text and images

00:02:51.206 --> 00:02:52.636 A:middle
may appear smaller but the

00:02:52.636 --> 00:02:54.046 A:middle
overall layout of the page is

00:02:54.046 --> 00:02:54.626 A:middle
preserved.

00:02:56.736 --> 00:02:58.216 A:middle
When this technique is used, the

00:02:58.216 --> 00:03:00.056 A:middle
viewport meta-tags initial scale


00:02:58.216 --> 00:03:00.056 A:middle
viewport meta-tags initial scale

00:03:00.056 --> 00:03:01.546 A:middle
is ignored in favor of an

00:03:01.546 --> 00:03:02.926 A:middle
initial scale that contains the

00:03:02.926 --> 00:03:04.686 A:middle
entire content of the page.

00:03:06.336 --> 00:03:07.846 A:middle
Additionally, inner width is

00:03:07.846 --> 00:03:10.356 A:middle
inflated to a minimum of 320 CSS

00:03:10.356 --> 00:03:10.866 A:middle
pixels.

00:03:10.896 --> 00:03:12.676 A:middle
And when using media queries,

00:03:12.966 --> 00:03:14.246 A:middle
the device width will also

00:03:14.246 --> 00:03:16.196 A:middle
appear to be 320 CSS pixels

00:03:16.536 --> 00:03:17.746 A:middle
rather than the true width of

00:03:17.746 --> 00:03:18.426 A:middle
Apple Watch.

00:03:20.096 --> 00:03:21.726 A:middle
By shrinking to fit, we also

00:03:21.726 --> 00:03:23.256 A:middle
avoid horizontal scrolling on

00:03:23.256 --> 00:03:24.796 A:middle
pages where content is wider

00:03:24.796 --> 00:03:25.616 A:middle
than the viewport.

00:03:27.706 --> 00:03:30.606 A:middle
These heuristics adapt existing

00:03:30.606 --> 00:03:32.246 A:middle
content to Apple Watch, but you

00:03:32.246 --> 00:03:33.626 A:middle
can override them when designing

00:03:33.626 --> 00:03:34.936 A:middle
content tailored for this form

00:03:34.936 --> 00:03:35.366 A:middle
factor.

00:03:36.106 --> 00:03:37.346 A:middle
Let's look at an example.

00:03:37.916 --> 00:03:40.596 A:middle
I've written a web page that

00:03:40.596 --> 00:03:42.056 A:middle
contains a gallery of photos I

00:03:42.056 --> 00:03:43.276 A:middle
took from a recent trip to

00:03:43.276 --> 00:03:44.926 A:middle
Vietnam, and I'd like to share

00:03:44.926 --> 00:03:45.766 A:middle
it with my friends.

00:03:47.246 --> 00:03:48.316 A:middle
If I send them a link to this

00:03:48.316 --> 00:03:49.956 A:middle
page using messages, they can

00:03:49.956 --> 00:03:51.036 A:middle
view it on Apple Watch.

00:03:51.806 --> 00:03:52.996 A:middle
Right now it's laying out at a

00:03:52.996 --> 00:03:55.036 A:middle
width of 320 CSS pixels and

00:03:55.036 --> 00:03:56.056 A:middle
shrinking down to fit.

00:03:56.936 --> 00:03:58.286 A:middle
However, I've also written this

00:03:58.286 --> 00:03:59.746 A:middle
page to be responsive on Apple

00:03:59.746 --> 00:04:01.686 A:middle
Watch by using a media query to


00:03:59.746 --> 00:04:01.686 A:middle
Watch by using a media query to

00:04:01.686 --> 00:04:03.476 A:middle
limit my two-column layout only

00:04:03.476 --> 00:04:05.676 A:middle
to viewports larger than 320 CSS

00:04:05.676 --> 00:04:06.196 A:middle
pixels.

00:04:07.676 --> 00:04:09.146 A:middle
Now all I need to do is tell

00:04:09.146 --> 00:04:10.776 A:middle
WebKit that this page is already

00:04:10.776 --> 00:04:12.616 A:middle
optimized for Apple Watch and

00:04:12.616 --> 00:04:13.556 A:middle
doesn't need the default

00:04:13.556 --> 00:04:14.376 A:middle
adaptations.

00:04:15.086 --> 00:04:16.636 A:middle
To do this, I simply include a

00:04:16.636 --> 00:04:18.146 A:middle
new meta-tag in the head of my

00:04:18.146 --> 00:04:20.086 A:middle
document with name equal to

00:04:20.086 --> 00:04:22.346 A:middle
disabled-adaptations and content

00:04:22.346 --> 00:04:23.126 A:middle
equal to watch.

00:04:24.186 --> 00:04:25.456 A:middle
I'm using this new disabled

00:04:25.456 --> 00:04:27.556 A:middle
adaptations meta-tag along side

00:04:27.556 --> 00:04:29.026 A:middle
the existing viewport meta-tag

00:04:29.026 --> 00:04:30.616 A:middle
I'm already using to ensure

00:04:30.616 --> 00:04:32.506 A:middle
responsive layout on iPhone and

00:04:33.326 --> 00:04:33.776 A:middle
iPad.

00:04:33.866 --> 00:04:35.246 A:middle
This allows WebKit to treat the

00:04:35.246 --> 00:04:36.706 A:middle
viewport's device width as the

00:04:36.706 --> 00:04:38.146 A:middle
real width of Apple Watch.

00:04:40.966 --> 00:04:42.276 A:middle
Let's now switch gears and talk

00:04:42.276 --> 00:04:43.616 A:middle
about some best practices for

00:04:43.616 --> 00:04:44.446 A:middle
form controls.

00:04:45.416 --> 00:04:46.866 A:middle
WebKit supports interaction with

00:04:46.866 --> 00:04:48.376 A:middle
form controls out-of-the-box.

00:04:49.036 --> 00:04:50.626 A:middle
To ensure a great experience for

00:04:50.626 --> 00:04:51.836 A:middle
users when designing form

00:04:51.836 --> 00:04:53.496 A:middle
controls and inputs, it's

00:04:53.496 --> 00:04:54.636 A:middle
important to keep a couple of

00:04:54.636 --> 00:04:55.476 A:middle
things in mind.

00:04:56.896 --> 00:04:58.386 A:middle
First, choose the appropriate

00:04:58.386 --> 00:04:59.886 A:middle
type attribute and element tag

00:04:59.886 --> 00:05:00.886 A:middle
for your form controls.


00:04:59.886 --> 00:05:00.886 A:middle
for your form controls.

00:05:01.686 --> 00:05:03.046 A:middle
WebKit supports a variety of

00:05:03.046 --> 00:05:04.496 A:middle
form control types including

00:05:04.496 --> 00:05:06.396 A:middle
passwords, numeric and telephone

00:05:06.396 --> 00:05:08.376 A:middle
fields, date, time, and select

00:05:08.376 --> 00:05:08.836 A:middle
menus.

00:05:09.596 --> 00:05:10.846 A:middle
Choosing the most relevant type

00:05:10.846 --> 00:05:12.106 A:middle
attribute allows WebKit to

00:05:12.106 --> 00:05:13.406 A:middle
present the most appropriate

00:05:13.406 --> 00:05:15.106 A:middle
interface to handle user input.

00:05:16.956 --> 00:05:18.426 A:middle
Secondly, it's important to note

00:05:18.426 --> 00:05:20.776 A:middle
that unlike iOS and macOS, input

00:05:20.776 --> 00:05:22.266 A:middle
methods on watchOS require

00:05:22.266 --> 00:05:23.486 A:middle
full-screen interaction.

00:05:24.646 --> 00:05:25.986 A:middle
Label your form controls or

00:05:25.986 --> 00:05:27.346 A:middle
specify aria label or

00:05:27.346 --> 00:05:28.566 A:middle
placeholder attributes to

00:05:28.566 --> 00:05:29.896 A:middle
provide additional context in

00:05:29.896 --> 00:05:31.176 A:middle
the status bar when a

00:05:31.176 --> 00:05:32.336 A:middle
full-screen input view is

00:05:32.336 --> 00:05:32.826 A:middle
presented.

00:05:34.796 --> 00:05:36.826 A:middle
Lastly, let's dive into Safari

00:05:36.826 --> 00:05:37.206 A:middle
Reader.

00:05:38.766 --> 00:05:40.156 A:middle
You may already be familiar with

00:05:40.156 --> 00:05:42.346 A:middle
Safari Reader, a feature on iOS

00:05:42.346 --> 00:05:44.056 A:middle
and macOS that reformats text

00:05:44.056 --> 00:05:45.246 A:middle
heavy web pages to make them

00:05:45.246 --> 00:05:45.976 A:middle
easier to read.

00:05:49.686 --> 00:05:51.016 A:middle
We've brought Reader to watchOS

00:05:51.016 --> 00:05:52.326 A:middle
5 where it automatically

00:05:52.326 --> 00:05:53.666 A:middle
activates when following links

00:05:53.666 --> 00:05:54.966 A:middle
to text heavy web pages.

00:05:55.236 --> 00:05:57.116 A:middle
It's important to ensure that

00:05:57.116 --> 00:05:58.496 A:middle
Reader draws out the key parts

00:05:58.496 --> 00:05:59.896 A:middle
of your web page by using

00:05:59.896 --> 00:06:01.466 A:middle
semantic markup to reinforce the


00:05:59.896 --> 00:06:01.466 A:middle
semantic markup to reinforce the

00:06:01.466 --> 00:06:02.886 A:middle
meaning and purpose of elements

00:06:02.886 --> 00:06:03.686 A:middle
in the document.

00:06:04.566 --> 00:06:05.756 A:middle
Let's walk through an example.

00:06:07.076 --> 00:06:08.936 A:middle
First, we indicate which parts

00:06:08.936 --> 00:06:09.846 A:middle
of the page are the most

00:06:09.846 --> 00:06:11.166 A:middle
important by wrapping it in an

00:06:11.166 --> 00:06:11.866 A:middle
article tag.

00:06:12.566 --> 00:06:14.166 A:middle
Specifically, enclosing these

00:06:14.166 --> 00:06:15.306 A:middle
header elements inside the

00:06:15.306 --> 00:06:16.886 A:middle
article ensure that they all

00:06:16.886 --> 00:06:17.686 A:middle
appear in Reader.

00:06:19.326 --> 00:06:20.776 A:middle
Reader also styles each header

00:06:20.776 --> 00:06:22.316 A:middle
element differently depending on

00:06:22.316 --> 00:06:23.546 A:middle
the value of its itemprop

00:06:23.546 --> 00:06:24.236 A:middle
attribute.

00:06:24.806 --> 00:06:26.476 A:middle
Using itemprop, we're able to

00:06:26.476 --> 00:06:27.596 A:middle
ensure that the author,

00:06:27.596 --> 00:06:29.466 A:middle
publication date, title, and

00:06:29.466 --> 00:06:30.786 A:middle
subheading are prominently

00:06:30.786 --> 00:06:31.216 A:middle
featured.

00:06:34.796 --> 00:06:36.146 A:middle
This paragraph contains content

00:06:36.146 --> 00:06:37.596 A:middle
that is of strong importance and

00:06:37.596 --> 00:06:38.426 A:middle
other content that is

00:06:38.426 --> 00:06:41.046 A:middle
emphasized, so we put this text

00:06:41.206 --> 00:06:42.896 A:middle
under strong and em elements.

00:06:43.546 --> 00:06:45.226 A:middle
Reader recognizes these tags and

00:06:45.226 --> 00:06:46.806 A:middle
preserves their semantic styles.

00:06:49.536 --> 00:06:52.726 A:middle
For this image, we use figure

00:06:52.726 --> 00:06:54.146 A:middle
and figcaption elements to let

00:06:54.146 --> 00:06:55.386 A:middle
the Reader know that the image

00:06:55.386 --> 00:06:56.566 A:middle
is associated with the below

00:06:56.566 --> 00:06:57.056 A:middle
caption.

00:06:57.826 --> 00:06:59.306 A:middle
Reader then positions the image

00:06:59.306 --> 00:07:00.486 A:middle
alongside its caption.


00:06:59.306 --> 00:07:00.486 A:middle
alongside its caption.

00:07:04.056 --> 00:07:05.956 A:middle
For this quoted paragraph, we

00:07:05.956 --> 00:07:07.276 A:middle
use a blockquote element rather

00:07:07.276 --> 00:07:08.166 A:middle
than a stylediv.

00:07:08.796 --> 00:07:10.096 A:middle
Reader automatically styles

00:07:10.096 --> 00:07:11.336 A:middle
these blocksquote elements as

00:07:11.336 --> 00:07:11.956 A:middle
appropriate.

00:07:14.616 --> 00:07:15.966 A:middle
Lastly, adding open graph

00:07:15.966 --> 00:07:17.656 A:middle
meta-tags gives more context to

00:07:17.656 --> 00:07:19.266 A:middle
Reader and also ensures that

00:07:19.266 --> 00:07:20.536 A:middle
links to the article look great

00:07:20.536 --> 00:07:21.106 A:middle
when shared.

00:07:23.246 --> 00:07:24.706 A:middle
For more information about open

00:07:24.706 --> 00:07:26.176 A:middle
graph meta-tags and rich links,

00:07:26.516 --> 00:07:28.096 A:middle
check out our video on Ensuring

00:07:28.096 --> 00:07:29.306 A:middle
Beautiful Rich Links.

00:07:31.446 --> 00:07:32.906 A:middle
To recap this session, we've

00:07:32.906 --> 00:07:34.426 A:middle
seen how WebKit adapts existing

00:07:34.426 --> 00:07:34.946 A:middle
content.

00:07:34.946 --> 00:07:36.746 A:middle
And we've also seen what you can

00:07:36.746 --> 00:07:38.176 A:middle
do to optimize content for

00:07:38.176 --> 00:07:39.306 A:middle
layout in Apple Watch.

00:07:40.096 --> 00:07:41.296 A:middle
Finally, we covered best

00:07:41.296 --> 00:07:43.326 A:middle
practices for form controls and

00:07:43.326 --> 00:07:44.936 A:middle
also learned how to ensure that

00:07:44.936 --> 00:07:46.496 A:middle
Reader brings out the key parts

00:07:46.496 --> 00:07:47.536 A:middle
of your web page.

00:07:49.656 --> 00:07:51.016 A:middle
We're so excited to bring the

00:07:51.016 --> 00:07:52.986 A:middle
power of the web to watchOS and

00:07:52.986 --> 00:07:54.536 A:middle
can't wait to see what content

00:07:54.536 --> 00:07:55.936 A:middle
you create for Apple Watch.
