WEBVTT

00:00:07.516 --> 00:00:15.500 A:middle
[ Music ]

00:00:20.516 --> 00:00:29.046 A:middle
[ Applause ]

00:00:29.546 --> 00:00:31.936 A:middle
&gt;&gt; Hello, welcome everyone.

00:00:32.436 --> 00:00:34.296 A:middle
My name is Gaurav and today we

00:00:34.296 --> 00:00:36.106 A:middle
are going to talk about machine

00:00:36.106 --> 00:00:36.436 A:middle
learning.

00:00:37.096 --> 00:00:40.146 A:middle
Last year we launched Core ML.

00:00:40.146 --> 00:00:41.986 A:middle
And the response from

00:00:41.986 --> 00:00:44.906 A:middle
developers, from you guys, have

00:00:44.906 --> 00:00:45.766 A:middle
been tremendous.

00:00:46.566 --> 00:00:48.456 A:middle
We are just amazed by the apps

00:00:48.606 --> 00:00:49.176 A:middle
you have made.

00:00:49.176 --> 00:00:51.436 A:middle
It clearly really is phenomenal.

00:00:52.196 --> 00:00:53.596 A:middle
So let me first begin by saying

00:00:53.596 --> 00:00:54.096 A:middle
thank you.

00:00:54.676 --> 00:00:56.186 A:middle
Thank you for embracing Core ML

00:00:56.666 --> 00:00:58.706 A:middle
and we love seeing so many of

00:00:58.756 --> 00:01:01.386 A:middle
you using it and giving


00:00:58.756 --> 00:01:01.386 A:middle
you using it and giving

00:01:01.386 --> 00:01:03.306 A:middle
intelligent features to our

00:01:03.306 --> 00:01:03.596 A:middle
users.

00:01:04.406 --> 00:01:05.556 A:middle
We are in this together.

00:01:05.876 --> 00:01:06.226 A:middle
Thank you.

00:01:07.516 --> 00:01:10.546 A:middle
[ Applause ]

00:01:11.046 --> 00:01:12.306 A:middle
It is applause to the

00:01:12.306 --> 00:01:12.686 A:middle
developers.

00:01:14.336 --> 00:01:16.506 A:middle
OK, so if you recall, Core ML

00:01:16.506 --> 00:01:18.056 A:middle
gives you an easy way to

00:01:18.056 --> 00:01:19.526 A:middle
integrate an ML model in the

00:01:19.526 --> 00:01:19.856 A:middle
app.

00:01:21.336 --> 00:01:22.586 A:middle
The idea is very simple.

00:01:23.006 --> 00:01:25.066 A:middle
You get an ML model, you drag

00:01:25.066 --> 00:01:27.746 A:middle
and drop an Xcode and with just

00:01:27.816 --> 00:01:29.806 A:middle
three lines of code you can run

00:01:30.366 --> 00:01:32.776 A:middle
state of the art ML model with

00:01:32.776 --> 00:01:34.206 A:middle
millions of parameters and

00:01:34.206 --> 00:01:36.376 A:middle
billions of calculations in real

00:01:36.376 --> 00:01:36.716 A:middle
time.

00:01:36.906 --> 00:01:37.736 A:middle
That's just amazing.

00:01:39.076 --> 00:01:41.216 A:middle
And you give your users get real

00:01:41.216 --> 00:01:42.816 A:middle
time machine learning as well

00:01:43.046 --> 00:01:44.576 A:middle
privacy friendly machine

00:01:44.576 --> 00:01:44.806 A:middle
learning.

00:01:46.066 --> 00:01:47.456 A:middle
All you have to do is to drag

00:01:47.456 --> 00:01:49.766 A:middle
and drop and ML model in Xcode.

00:01:50.126 --> 00:01:51.556 A:middle
And Core ML takes care of the

00:01:51.556 --> 00:01:51.826 A:middle
rest.

00:01:54.066 --> 00:01:55.996 A:middle
I think the big question remains

00:01:55.996 --> 00:01:57.776 A:middle
is where do I get these models

00:01:58.626 --> 00:01:58.746 A:middle
from?

00:01:59.936 --> 00:02:01.976 A:middle
So last year we provided you two


00:01:59.936 --> 00:02:01.976 A:middle
So last year we provided you two

00:02:01.976 --> 00:02:02.536 A:middle
options.

00:02:03.116 --> 00:02:05.086 A:middle
The first one was you could

00:02:05.086 --> 00:02:06.896 A:middle
download some of these models,

00:02:06.896 --> 00:02:08.876 A:middle
popular models, from our

00:02:08.876 --> 00:02:09.406 A:middle
website.

00:02:10.166 --> 00:02:13.146 A:middle
But more importantly we also

00:02:13.146 --> 00:02:15.326 A:middle
released Core ML Tools.

00:02:15.896 --> 00:02:18.086 A:middle
Core ML Tools allow you to tap

00:02:18.326 --> 00:02:19.486 A:middle
the work which is done by

00:02:19.576 --> 00:02:22.496 A:middle
amazing ML Community.

00:02:23.776 --> 00:02:25.986 A:middle
So the idea is again simple.

00:02:26.446 --> 00:02:27.316 A:middle
You choose your favorite

00:02:27.316 --> 00:02:29.226 A:middle
training library, create your

00:02:29.226 --> 00:02:31.326 A:middle
model in that training library,

00:02:31.526 --> 00:02:33.426 A:middle
covert it into Core ML from

00:02:33.426 --> 00:02:35.776 A:middle
there and then just integrate it

00:02:35.776 --> 00:02:36.406 A:middle
into your app.

00:02:37.086 --> 00:02:40.836 A:middle
When we released Core ML we

00:02:40.836 --> 00:02:42.346 A:middle
released with only five or six

00:02:42.406 --> 00:02:43.656 A:middle
training libraries, support for

00:02:43.656 --> 00:02:46.976 A:middle
five or six training library,

00:02:46.976 --> 00:02:48.486 A:middle
but within a year we have a

00:02:48.486 --> 00:02:51.196 A:middle
support for all the famous

00:02:51.676 --> 00:02:52.976 A:middle
training libraries out there.

00:02:53.966 --> 00:02:55.586 A:middle
We are enhancing our tools to

00:02:55.586 --> 00:02:56.756 A:middle
even allow you more

00:02:56.756 --> 00:02:58.786 A:middle
customization and we are going

00:02:58.786 --> 00:03:00.436 A:middle
to talk about more about Core ML


00:02:58.786 --> 00:03:00.436 A:middle
to talk about more about Core ML

00:03:00.436 --> 00:03:02.786 A:middle
tools in tomorrow's session.

00:03:03.246 --> 00:03:07.586 A:middle
Another thing we did towards the

00:03:07.586 --> 00:03:09.006 A:middle
end of the year, we released to

00:03:09.006 --> 00:03:11.026 A:middle
recreate our open source machine

00:03:11.026 --> 00:03:11.816 A:middle
learning library.

00:03:11.926 --> 00:03:13.696 A:middle
We are going to talk about to

00:03:13.696 --> 00:03:16.186 A:middle
recreate in tomorrow's session.

00:03:17.036 --> 00:03:18.756 A:middle
Bu this year we want to give you

00:03:18.756 --> 00:03:19.646 A:middle
something even more.

00:03:20.046 --> 00:03:22.186 A:middle
We want to continue our journey.

00:03:22.876 --> 00:03:24.226 A:middle
We want to give you something

00:03:24.226 --> 00:03:27.106 A:middle
native, something swiftly,

00:03:28.066 --> 00:03:29.276 A:middle
something that harnesses the

00:03:29.276 --> 00:03:32.216 A:middle
power of our Xcode, something

00:03:32.216 --> 00:03:33.726 A:middle
that puts the focus on you, our

00:03:33.726 --> 00:03:35.916 A:middle
developers, something that just

00:03:35.916 --> 00:03:37.396 A:middle
demystify machine learning for

00:03:37.396 --> 00:03:37.566 A:middle
you.

00:03:38.306 --> 00:03:40.826 A:middle
Hence we are introducing Create

00:03:41.266 --> 00:03:41.716 A:middle
ML.

00:03:42.516 --> 00:03:47.636 A:middle
[ Applause ]

00:03:48.136 --> 00:03:50.026 A:middle
Our machine learning framework

00:03:50.716 --> 00:03:52.016 A:middle
in Swift.

00:03:52.226 --> 00:03:55.336 A:middle
So Create ML completes the left

00:03:55.336 --> 00:03:56.616 A:middle
had side of the equation.

00:03:57.616 --> 00:03:59.686 A:middle
The idea is you make the model

00:03:59.686 --> 00:04:01.746 A:middle
in Create ML and you run it in


00:03:59.686 --> 00:04:01.746 A:middle
in Create ML and you run it in

00:04:01.786 --> 00:04:02.216 A:middle
Core ML.

00:04:02.796 --> 00:04:04.496 A:middle
You do complete end-to-end

00:04:04.496 --> 00:04:06.946 A:middle
machine learning in Swift, our

00:04:06.946 --> 00:04:07.776 A:middle
favorite language.

00:04:08.346 --> 00:04:09.366 A:middle
So you are not dealing with

00:04:09.366 --> 00:04:10.606 A:middle
language oddities where you are

00:04:10.606 --> 00:04:12.166 A:middle
training in one language and

00:04:12.166 --> 00:04:13.476 A:middle
then running inference in

00:04:13.476 --> 00:04:14.446 A:middle
another language.

00:04:16.296 --> 00:04:19.736 A:middle
Create ML is simple and very

00:04:19.736 --> 00:04:20.555 A:middle
powerful.

00:04:20.596 --> 00:04:21.966 A:middle
It is tailored to your app.

00:04:22.546 --> 00:04:23.996 A:middle
It leverages core Apple

00:04:23.996 --> 00:04:27.146 A:middle
technologies and you do

00:04:27.146 --> 00:04:29.566 A:middle
everything on your Mac.

00:04:31.156 --> 00:04:32.886 A:middle
So for this year we are going to

00:04:32.886 --> 00:04:34.336 A:middle
focus on three very important

00:04:34.336 --> 00:04:35.036 A:middle
use cases.

00:04:35.416 --> 00:04:38.696 A:middle
The first one is images, second

00:04:38.696 --> 00:04:40.946 A:middle
is text, and the third one is

00:04:41.096 --> 00:04:41.646 A:middle
tabular data.

00:04:42.886 --> 00:04:45.226 A:middle
These are the top use cases that

00:04:45.226 --> 00:04:47.346 A:middle
we believe will benefit you.

00:04:47.606 --> 00:04:50.946 A:middle
So you can do things like Custom

00:04:50.946 --> 00:04:52.206 A:middle
Image Classifier.

00:04:52.676 --> 00:04:54.426 A:middle
Idea is that you make your own

00:04:54.426 --> 00:04:55.696 A:middle
image classifier that can

00:04:55.696 --> 00:04:57.636 A:middle
recognize product from your

00:04:57.636 --> 00:04:58.316 A:middle
product catalog.

00:04:59.536 --> 00:05:00.846 A:middle
You can do things like text


00:04:59.536 --> 00:05:00.846 A:middle
You can do things like text

00:05:00.986 --> 00:05:02.586 A:middle
classifier so you can make your

00:05:02.586 --> 00:05:04.266 A:middle
own sentiment analysis, topic

00:05:04.266 --> 00:05:05.796 A:middle
analysis, domain analysis.

00:05:06.456 --> 00:05:09.616 A:middle
And you can also do classical

00:05:09.656 --> 00:05:12.636 A:middle
regression and classification on

00:05:12.636 --> 00:05:13.146 A:middle
tabular data.

00:05:13.626 --> 00:05:15.316 A:middle
For example, let's just say you

00:05:15.316 --> 00:05:16.726 A:middle
want to predict the wine quality

00:05:16.726 --> 00:05:18.916 A:middle
using its chemical composition.

00:05:19.746 --> 00:05:21.066 A:middle
The possibilities are endless

00:05:21.066 --> 00:05:23.286 A:middle
and we are going to discuss them

00:05:23.286 --> 00:05:24.966 A:middle
in detail in the next 30

00:05:24.966 --> 00:05:25.216 A:middle
minutes.

00:05:27.976 --> 00:05:30.366 A:middle
However, before we do let's take

00:05:30.366 --> 00:05:31.796 A:middle
a look at common work flow.

00:05:32.296 --> 00:05:36.376 A:middle
First, let's just say you are

00:05:36.376 --> 00:05:37.926 A:middle
trying to enable an experience

00:05:37.926 --> 00:05:38.436 A:middle
in app.

00:05:39.106 --> 00:05:40.356 A:middle
Make sure that machine learning

00:05:40.356 --> 00:05:41.616 A:middle
is the right thing to do there.

00:05:41.866 --> 00:05:42.986 A:middle
So don't just blindly apply

00:05:42.986 --> 00:05:43.676 A:middle
machine learning.

00:05:44.046 --> 00:05:45.156 A:middle
Make sure machine learning is

00:05:45.156 --> 00:05:46.496 A:middle
the right thing to do there and

00:05:46.496 --> 00:05:47.576 A:middle
define a machine learning

00:05:47.626 --> 00:05:47.976 A:middle
problem.

00:05:50.076 --> 00:05:52.006 A:middle
Second collect data.

00:05:53.326 --> 00:05:55.446 A:middle
Make sure this data reflects the

00:05:55.446 --> 00:05:57.766 A:middle
real usage of your app.

00:05:58.566 --> 00:06:00.436 A:middle
So for example if you're making


00:05:58.566 --> 00:06:00.436 A:middle
So for example if you're making

00:06:00.436 --> 00:06:02.746 A:middle
a custom image classifier that

00:06:02.746 --> 00:06:05.076 A:middle
is going to be used by users on

00:06:05.076 --> 00:06:06.856 A:middle
their iPhone, so collect

00:06:06.986 --> 00:06:08.296 A:middle
pictures from your iPhone.

00:06:08.676 --> 00:06:11.206 A:middle
Collect less screenshots but

00:06:11.206 --> 00:06:13.326 A:middle
have more iPhone pictures.

00:06:14.536 --> 00:06:17.606 A:middle
Then you train your model.

00:06:18.356 --> 00:06:21.026 A:middle
Finally another important step

00:06:21.026 --> 00:06:22.756 A:middle
here is to evaluate this model.

00:06:23.366 --> 00:06:25.686 A:middle
The model evaluation is done on

00:06:25.686 --> 00:06:27.996 A:middle
a separate handout set.

00:06:29.286 --> 00:06:31.556 A:middle
If you're happy, you write out

00:06:31.606 --> 00:06:34.626 A:middle
the ML model, but let's just say

00:06:34.626 --> 00:06:36.216 A:middle
the results are not good.

00:06:36.216 --> 00:06:37.246 A:middle
You should either reclaim your

00:06:37.246 --> 00:06:39.416 A:middle
model with different parameters

00:06:39.686 --> 00:06:41.676 A:middle
or you collect more data.

00:06:43.436 --> 00:06:45.356 A:middle
Create ML actually helps you

00:06:45.356 --> 00:06:47.786 A:middle
across all four stages of this

00:06:48.786 --> 00:06:49.756 A:middle
work flow.

00:06:49.976 --> 00:06:52.436 A:middle
We have powerful in build data

00:06:52.436 --> 00:06:54.276 A:middle
injection utilities DataSource

00:06:54.276 --> 00:06:56.576 A:middle
and DataTable that we will talk

00:06:56.576 --> 00:06:57.296 A:middle
in the remainder of the

00:06:57.296 --> 00:06:58.036 A:middle
presentation.

00:06:58.466 --> 00:07:01.546 A:middle
You can actually train your


00:06:58.466 --> 00:07:01.546 A:middle
You can actually train your

00:07:01.546 --> 00:07:02.776 A:middle
model using only one line of

00:07:02.866 --> 00:07:03.196 A:middle
code.

00:07:04.426 --> 00:07:06.196 A:middle
And the training is done

00:07:06.196 --> 00:07:07.396 A:middle
hardware optimized.

00:07:08.106 --> 00:07:11.796 A:middle
There are built-in evaluation

00:07:11.796 --> 00:07:12.976 A:middle
metrics so you don't have to

00:07:12.976 --> 00:07:14.236 A:middle
write your own precision and

00:07:14.236 --> 00:07:15.576 A:middle
recall and confusion metrics

00:07:15.576 --> 00:07:17.146 A:middle
calculation, use them.

00:07:17.146 --> 00:07:20.076 A:middle
And then finally when you're

00:07:20.136 --> 00:07:22.716 A:middle
happy just write out the model.

00:07:23.406 --> 00:07:25.936 A:middle
Now we will take a deeper look

00:07:25.936 --> 00:07:27.386 A:middle
in all three-use cases --

00:07:27.386 --> 00:07:32.646 A:middle
Images, Text, and Table of Data.

00:07:32.986 --> 00:07:34.686 A:middle
So let's start with images and

00:07:34.686 --> 00:07:36.276 A:middle
to do that I will invite Liza

00:07:36.276 --> 00:07:38.036 A:middle
Ottens, Senior Engineer in

00:07:38.036 --> 00:07:38.766 A:middle
Machine Learning team.

00:07:38.926 --> 00:07:39.266 A:middle
Thank you.

00:07:40.516 --> 00:07:44.906 A:middle
[ Applause ]

00:07:45.406 --> 00:07:45.956 A:middle
&gt;&gt; Thank you Gaurav.

00:07:50.106 --> 00:07:51.716 A:middle
Since enabling image based

00:07:51.716 --> 00:07:53.856 A:middle
experiences are some of the most

00:07:53.856 --> 00:07:55.906 A:middle
powerful and interactive ones

00:07:55.906 --> 00:07:56.806 A:middle
that you can add to your apps,

00:07:57.526 --> 00:07:59.346 A:middle
today we'll take a look at how

00:07:59.346 --> 00:08:00.886 A:middle
to train custom image


00:07:59.346 --> 00:08:00.886 A:middle
to train custom image

00:08:00.926 --> 00:08:02.156 A:middle
classification models.

00:08:03.316 --> 00:08:04.686 A:middle
Image classification is the

00:08:04.686 --> 00:08:06.626 A:middle
problem of identifying what

00:08:06.626 --> 00:08:08.436 A:middle
label out of a set of categories

00:08:08.526 --> 00:08:10.346 A:middle
you'd like to apply to an image.

00:08:11.646 --> 00:08:12.496 A:middle
Depending on the type of

00:08:12.496 --> 00:08:14.226 A:middle
training data, you can target

00:08:14.226 --> 00:08:16.676 A:middle
domains specific use cases to

00:08:16.676 --> 00:08:18.666 A:middle
enable in your apps.

00:08:19.346 --> 00:08:21.236 A:middle
The first step is to collect

00:08:21.416 --> 00:08:21.876 A:middle
training data.

00:08:23.826 --> 00:08:25.686 A:middle
In doing so we'll take a look at

00:08:25.746 --> 00:08:27.776 A:middle
a fruit classifier and see how

00:08:27.776 --> 00:08:28.286 A:middle
you would do so.

00:08:29.596 --> 00:08:31.336 A:middle
First you would want to gather

00:08:31.336 --> 00:08:33.306 A:middle
many varied types of images that

00:08:33.306 --> 00:08:34.756 A:middle
reflect the true data that

00:08:34.756 --> 00:08:36.035 A:middle
you'll end up seeing or that

00:08:36.035 --> 00:08:38.066 A:middle
your users will and then label

00:08:39.056 --> 00:08:39.226 A:middle
them.

00:08:39.226 --> 00:08:40.155 A:middle
First you can do this as a

00:08:40.155 --> 00:08:43.206 A:middle
dictionary with the string label

00:08:43.496 --> 00:08:44.696 A:middle
corresponding to arrays of

00:08:44.696 --> 00:08:47.566 A:middle
images or what we've noticed is

00:08:47.566 --> 00:08:49.196 A:middle
many popular data sets are

00:08:49.196 --> 00:08:50.586 A:middle
organized in hierarchical

00:08:50.646 --> 00:08:52.456 A:middle
directory structures such that

00:08:52.556 --> 00:08:54.456 A:middle
the label is the name of the

00:08:54.526 --> 00:08:56.076 A:middle
folder that contains all images

00:08:56.146 --> 00:08:56.436 A:middle
within it.

00:08:58.166 --> 00:08:58.986 A:middle
There are also other data

00:08:59.236 --> 00:09:01.546 A:middle
sources such as single folders


00:08:59.236 --> 00:09:01.546 A:middle
sources such as single folders

00:09:01.716 --> 00:09:03.276 A:middle
that contain labeled file names

00:09:03.726 --> 00:09:05.616 A:middle
and in the Create ML API we've

00:09:05.616 --> 00:09:07.306 A:middle
provided conveniences to extract

00:09:07.596 --> 00:09:08.216 A:middle
these structures.

00:09:10.556 --> 00:09:12.696 A:middle
Now training is the more complex

00:09:12.836 --> 00:09:13.686 A:middle
part of the equation.

00:09:14.116 --> 00:09:16.196 A:middle
So once you have your data this

00:09:16.236 --> 00:09:17.036 A:middle
is what you'll look at next.

00:09:18.476 --> 00:09:20.696 A:middle
And what you can do is you start

00:09:20.736 --> 00:09:22.496 A:middle
training a very complex model

00:09:22.606 --> 00:09:24.216 A:middle
from scratch on your input

00:09:24.216 --> 00:09:24.606 A:middle
images.

00:09:25.376 --> 00:09:26.946 A:middle
And for this you need lots and

00:09:26.946 --> 00:09:28.696 A:middle
lots of labeled data, you need

00:09:28.806 --> 00:09:30.426 A:middle
big compute and you need a lot

00:09:30.426 --> 00:09:30.876 A:middle
of patience.

00:09:31.836 --> 00:09:33.066 A:middle
But another well-established

00:09:33.126 --> 00:09:34.816 A:middle
technique in the industry is

00:09:34.816 --> 00:09:35.516 A:middle
transfer learning.

00:09:36.406 --> 00:09:38.366 A:middle
And since Apple has lots of

00:09:38.366 --> 00:09:40.226 A:middle
experience in training complex

00:09:40.336 --> 00:09:41.676 A:middle
machine learning models, we

00:09:41.676 --> 00:09:42.816 A:middle
already have one in the

00:09:42.866 --> 00:09:44.476 A:middle
operating system that you can

00:09:44.476 --> 00:09:45.266 A:middle
take advantage of.

00:09:45.776 --> 00:09:47.486 A:middle
So what we do is we apply

00:09:47.486 --> 00:09:49.046 A:middle
transfer learning on top of this

00:09:49.116 --> 00:09:50.786 A:middle
model that already exists in the

00:09:50.786 --> 00:09:53.236 A:middle
OS and we augment it, retraining

00:09:53.236 --> 00:09:54.846 A:middle
the last few layers to your

00:09:54.846 --> 00:09:55.276 A:middle
specific data.

00:09:55.276 --> 00:09:57.986 A:middle
So you no longer need millions

00:09:57.986 --> 00:09:58.566 A:middle
of images.

00:09:58.886 --> 00:10:01.166 A:middle
You can train a good classifier


00:09:58.886 --> 00:10:01.166 A:middle
You can train a good classifier

00:10:01.366 --> 00:10:02.556 A:middle
using the amount of data that

00:10:02.606 --> 00:10:02.886 A:middle
you have.

00:10:05.006 --> 00:10:06.846 A:middle
This results in faster training

00:10:06.846 --> 00:10:07.096 A:middle
times.

00:10:07.616 --> 00:10:08.746 A:middle
And for developers that we've

00:10:08.786 --> 00:10:10.376 A:middle
worked with we've seen them go

00:10:11.026 --> 00:10:14.436 A:middle
from ours of training down to

00:10:14.436 --> 00:10:16.016 A:middle
minutes for thousands of images

00:10:16.496 --> 00:10:18.186 A:middle
or for small data sets even

00:10:18.266 --> 00:10:18.606 A:middle
seconds.

00:10:21.326 --> 00:10:22.566 A:middle
This also results in much

00:10:22.726 --> 00:10:24.466 A:middle
smaller models going from

00:10:24.466 --> 00:10:26.596 A:middle
hundreds of megabytes down to

00:10:27.036 --> 00:10:28.186 A:middle
just a few megabytes for

00:10:28.186 --> 00:10:29.866 A:middle
thousands of images or even

00:10:29.866 --> 00:10:31.216 A:middle
kilobytes for small models.

00:10:33.516 --> 00:10:35.846 A:middle
The goal with Create ML is to

00:10:35.846 --> 00:10:37.406 A:middle
abstract much of this and make

00:10:37.406 --> 00:10:38.966 A:middle
it simple and easy to use.

00:10:39.726 --> 00:10:41.216 A:middle
But to prove it let's take a

00:10:41.216 --> 00:10:41.836 A:middle
look at a demo.

00:10:49.386 --> 00:10:50.526 A:middle
And there are two work flows

00:10:51.326 --> 00:10:51.896 A:middle
that we can look at.

00:10:52.956 --> 00:10:54.596 A:middle
But first to set up the problem

00:10:54.996 --> 00:10:56.016 A:middle
I've started by running an app

00:10:56.676 --> 00:10:57.896 A:middle
that's using a state of the art

00:10:57.986 --> 00:10:59.366 A:middle
image classification model

00:10:59.866 --> 00:11:00.896 A:middle
that's already in the industry.


00:10:59.866 --> 00:11:00.896 A:middle
that's already in the industry.

00:11:02.066 --> 00:11:03.506 A:middle
This one though is quite large.

00:11:03.506 --> 00:11:05.186 A:middle
It's a 100 megabytes in our app

00:11:06.416 --> 00:11:08.806 A:middle
and if we run it we have some

00:11:08.856 --> 00:11:12.756 A:middle
fruits but it's not quite what I

00:11:12.756 --> 00:11:13.496 A:middle
was looking for.

00:11:14.366 --> 00:11:17.156 A:middle
I'd really like it if instead we

00:11:17.486 --> 00:11:18.806 A:middle
could classify these particular

00:11:18.806 --> 00:11:19.046 A:middle
ones.

00:11:20.116 --> 00:11:21.536 A:middle
So what we can do is we can

00:11:21.626 --> 00:11:25.086 A:middle
switch to a new playground and

00:11:25.086 --> 00:11:27.276 A:middle
import Create MLUI and walk

00:11:27.276 --> 00:11:29.906 A:middle
through how to do this using the

00:11:29.906 --> 00:11:30.756 A:middle
UI for it.

00:11:31.906 --> 00:11:33.006 A:middle
We can define a builder,

00:11:34.526 --> 00:11:36.296 A:middle
initialize it, and to enable

00:11:36.296 --> 00:11:38.106 A:middle
drag and drop training we can

00:11:38.106 --> 00:11:39.666 A:middle
show the builder in the live

00:11:39.696 --> 00:11:39.926 A:middle
view.

00:11:44.166 --> 00:11:46.436 A:middle
This brings up a prompt in the

00:11:46.436 --> 00:11:48.216 A:middle
live view to drag in images to

00:11:48.386 --> 00:11:49.036 A:middle
begin training.

00:11:50.626 --> 00:11:52.536 A:middle
And here I've set aside some

00:11:52.536 --> 00:11:54.756 A:middle
photos of fruits -- some

00:11:54.756 --> 00:11:56.416 A:middle
blueberries and other types.

00:11:57.476 --> 00:11:59.136 A:middle
And you can drag them in and

00:11:59.216 --> 00:12:00.366 A:middle
automatically an image


00:11:59.216 --> 00:12:00.366 A:middle
automatically an image

00:12:00.426 --> 00:12:02.106 A:middle
classifier model begins training

00:12:02.316 --> 00:12:02.796 A:middle
on the Mac.

00:12:03.656 --> 00:12:05.366 A:middle
All of this is accelerated on

00:12:05.366 --> 00:12:07.546 A:middle
the GPU on however many

00:12:07.546 --> 00:12:09.076 A:middle
categories you end up training

00:12:09.076 --> 00:12:09.256 A:middle
on.

00:12:10.476 --> 00:12:11.776 A:middle
It automatically tells you what

00:12:11.776 --> 00:12:13.366 A:middle
the accuracy is on the training

00:12:13.426 --> 00:12:13.816 A:middle
data set.

00:12:14.346 --> 00:12:16.086 A:middle
But what's more helpful is to

00:12:16.086 --> 00:12:18.206 A:middle
try this on new images that the

00:12:18.206 --> 00:12:19.776 A:middle
model hasn't seen before to

00:12:19.776 --> 00:12:22.226 A:middle
predict how it will do on real

00:12:22.226 --> 00:12:22.816 A:middle
use cases.

00:12:23.546 --> 00:12:24.586 A:middle
So I can drag in this other

00:12:24.646 --> 00:12:26.416 A:middle
folder containing unseen images

00:12:27.526 --> 00:12:29.116 A:middle
and now the model is evaluating

00:12:29.116 --> 00:12:30.586 A:middle
on these new types of fruits.

00:12:30.986 --> 00:12:32.636 A:middle
And if you scroll, you can see

00:12:32.636 --> 00:12:34.306 A:middle
what the true label is of each

00:12:34.346 --> 00:12:36.486 A:middle
type, as well what the predicted

00:12:36.486 --> 00:12:37.496 A:middle
one was by the model.

00:12:40.116 --> 00:12:41.836 A:middle
And if you're happy with this

00:12:41.936 --> 00:12:43.956 A:middle
accuracy, what you can do is you

00:12:43.956 --> 00:12:45.716 A:middle
can take the model and drag it

00:12:45.716 --> 00:12:46.146 A:middle
into your app.

00:12:50.526 --> 00:12:51.236 A:middle
I'll add it here.

00:12:51.546 --> 00:12:54.196 A:middle
And if we take a look this model

00:12:54.236 --> 00:12:55.576 A:middle
is 83 kilobytes.

00:12:56.126 --> 00:12:58.396 A:middle
That's a huge savings down from

00:12:58.506 --> 00:12:58.946 A:middle
hundreds.


00:13:00.516 --> 00:13:05.546 A:middle
[ Applause ]

00:13:06.046 --> 00:13:07.436 A:middle
So we can delete the old model

00:13:07.436 --> 00:13:09.286 A:middle
that we were using before and in

00:13:09.286 --> 00:13:10.666 A:middle
the view controller we can

00:13:10.666 --> 00:13:13.516 A:middle
initialize this new one, Fruit

00:13:14.016 --> 00:13:15.966 A:middle
Classifier, well Image

00:13:15.966 --> 00:13:16.446 A:middle
Classifier.

00:13:19.776 --> 00:13:22.596 A:middle
We can then rerun the app, bring

00:13:22.596 --> 00:13:27.336 A:middle
up the simulator, and see how it

00:13:27.336 --> 00:13:28.626 A:middle
does on some of those fruits

00:13:28.626 --> 00:13:29.716 A:middle
that we've not trained it on.

00:13:30.196 --> 00:13:31.216 A:middle
Well, different.

00:13:33.276 --> 00:13:34.686 A:middle
On the raspberry it can no

00:13:34.686 --> 00:13:36.616 A:middle
correctly predict it since we

00:13:36.616 --> 00:13:38.056 A:middle
trained the model to recognize

00:13:38.526 --> 00:13:39.066 A:middle
raspberries.

00:13:39.926 --> 00:13:40.976 A:middle
We can even see if it can

00:13:40.976 --> 00:13:42.226 A:middle
distinguish from strawberries

00:13:42.646 --> 00:13:44.926 A:middle
and it can now depending on our

00:13:44.926 --> 00:13:45.126 A:middle
data.

00:13:47.206 --> 00:13:48.476 A:middle
But there are other workflows

00:13:48.526 --> 00:13:49.066 A:middle
you can use.

00:13:49.876 --> 00:13:50.756 A:middle
Perhaps you want to do this

00:13:50.846 --> 00:13:52.596 A:middle
programmatically or perhaps you

00:13:52.596 --> 00:13:53.306 A:middle
want to automate it.

00:13:54.356 --> 00:13:55.736 A:middle
We can also walk through how to

00:13:55.736 --> 00:13:58.076 A:middle
use the API, Create ML to do so.


00:14:02.156 --> 00:14:04.256 A:middle
So now we can switch to another

00:14:04.306 --> 00:14:07.326 A:middle
playground in import Create ML.

00:14:07.876 --> 00:14:09.576 A:middle
Since we'll be using URLs we

00:14:09.576 --> 00:14:11.396 A:middle
also can import foundation.

00:14:13.696 --> 00:14:15.416 A:middle
And since on our desktop we

00:14:15.416 --> 00:14:16.836 A:middle
still have these folders of

00:14:16.836 --> 00:14:19.786 A:middle
fruits, we can say where they

00:14:19.786 --> 00:14:24.596 A:middle
are, and also say where the

00:14:24.596 --> 00:14:25.476 A:middle
testing fruits are.

00:14:25.476 --> 00:14:27.536 A:middle
And then the next step is to

00:14:27.536 --> 00:14:28.636 A:middle
actually train the model.

00:14:29.436 --> 00:14:32.386 A:middle
So we can define a model and we

00:14:32.386 --> 00:14:33.726 A:middle
can initialize an image

00:14:33.726 --> 00:14:34.396 A:middle
classifier.

00:14:35.216 --> 00:14:36.736 A:middle
And now if we take a look at

00:14:36.736 --> 00:14:38.386 A:middle
what autocomplete shows to us we

00:14:38.386 --> 00:14:40.246 A:middle
can see, we can provide training

00:14:40.316 --> 00:14:41.636 A:middle
data in the form of a dictionary

00:14:41.636 --> 00:14:45.356 A:middle
of labels to arrays of images or

00:14:45.356 --> 00:14:47.496 A:middle
we can use a data source or even

00:14:47.496 --> 00:14:48.986 A:middle
specify model training

00:14:48.986 --> 00:14:50.056 A:middle
parameters if we want to.

00:14:51.466 --> 00:14:52.746 A:middle
Let's use a data source and

00:14:52.896 --> 00:14:54.236 A:middle
we'll use label directories

00:14:54.306 --> 00:14:55.366 A:middle
since that's how our data is

00:14:55.366 --> 00:14:57.586 A:middle
organized and specify the

00:14:57.586 --> 00:15:00.346 A:middle
trainingDir Directory.


00:14:57.586 --> 00:15:00.346 A:middle
trainingDir Directory.

00:15:02.436 --> 00:15:03.466 A:middle
And since we're running in the

00:15:03.466 --> 00:15:04.856 A:middle
new REPL mode of Xcode

00:15:04.886 --> 00:15:06.146 A:middle
Playgrounds I just need to hit

00:15:06.146 --> 00:15:08.636 A:middle
Shift Enter and the model begins

00:15:08.636 --> 00:15:09.706 A:middle
training right away.

00:15:11.126 --> 00:15:12.496 A:middle
You can even pull up the console

00:15:13.426 --> 00:15:15.916 A:middle
and see output of one of its

00:15:15.916 --> 00:15:17.946 A:middle
extracting features and how many

00:15:17.946 --> 00:15:19.166 A:middle
iterations it's running through.

00:15:20.476 --> 00:15:22.036 A:middle
Afterwards you can also open

00:15:22.036 --> 00:15:23.976 A:middle
Quick Looks and see the name in

00:15:23.976 --> 00:15:25.776 A:middle
the model and how many instances

00:15:25.776 --> 00:15:26.466 A:middle
it's trained on.

00:15:28.126 --> 00:15:29.986 A:middle
Now we might want to evaluate on

00:15:29.986 --> 00:15:31.206 A:middle
the testing data that we've set

00:15:31.286 --> 00:15:31.596 A:middle
aside.

00:15:32.576 --> 00:15:34.836 A:middle
So what we can do is we can call

00:15:34.836 --> 00:15:37.076 A:middle
evaluation on another data

00:15:37.216 --> 00:15:38.536 A:middle
source since that folder is

00:15:38.536 --> 00:15:39.546 A:middle
organized the same way

00:15:39.956 --> 00:15:41.786 A:middle
specifying the URL the test

00:15:41.936 --> 00:15:42.116 A:middle
data.

00:15:42.896 --> 00:15:45.166 A:middle
You can hit Shift Enter and now

00:15:45.166 --> 00:15:46.886 A:middle
the model is evaluating on these

00:15:46.986 --> 00:15:48.516 A:middle
testing datasets, testing

00:15:48.516 --> 00:15:48.766 A:middle
images.

00:15:49.536 --> 00:15:51.166 A:middle
Once it's complete we can also

00:15:51.166 --> 00:15:52.676 A:middle
look at the Quick Look and see

00:15:52.676 --> 00:15:54.306 A:middle
how many examples it evaluated

00:15:54.306 --> 00:15:55.986 A:middle
on, as well as how many classes

00:15:56.076 --> 00:15:57.516 A:middle
were in that folder all together

00:15:57.946 --> 00:15:58.706 A:middle
and the accuracy.


00:16:00.236 --> 00:16:01.666 A:middle
If we're happy with that we can

00:16:01.716 --> 00:16:02.166 A:middle
write it out.

00:16:07.756 --> 00:16:09.066 A:middle
I'll grab a code snippet here.

00:16:11.946 --> 00:16:13.066 A:middle
And say that I want to write it

00:16:13.176 --> 00:16:14.686 A:middle
to the desktop with name Fruit

00:16:14.716 --> 00:16:16.056 A:middle
Classifier ML Model.

00:16:18.196 --> 00:16:19.646 A:middle
Once I do, you can see this new

00:16:19.646 --> 00:16:21.026 A:middle
model up here is on the desktop.

00:16:21.936 --> 00:16:23.226 A:middle
We can double click it and take

00:16:23.226 --> 00:16:25.386 A:middle
a look and see it's exactly the

00:16:25.476 --> 00:16:25.806 A:middle
same.

00:16:26.046 --> 00:16:27.606 A:middle
This is also 83 kilobytes.

00:16:30.376 --> 00:16:31.666 A:middle
Furthermore, we can integrate it

00:16:31.716 --> 00:16:33.016 A:middle
back into our app the same way.

00:16:34.546 --> 00:16:34.936 A:middle
Let's recap.

00:16:38.516 --> 00:16:44.856 A:middle
[ Applause ]

00:16:45.356 --> 00:16:46.876 A:middle
We saw two ways of training

00:16:46.876 --> 00:16:48.476 A:middle
image classifier models in

00:16:48.476 --> 00:16:48.856 A:middle
Create ML.

00:16:49.626 --> 00:16:51.756 A:middle
One was with the UI, which makes

00:16:51.756 --> 00:16:53.796 A:middle
it super simple to drag and drop

00:16:53.996 --> 00:16:54.966 A:middle
your training data and

00:16:54.966 --> 00:16:57.296 A:middle
evaluation data to produce an ML

00:16:57.296 --> 00:16:57.626 A:middle
Model.

00:16:58.736 --> 00:17:01.876 A:middle
The other way was with the API,


00:16:58.736 --> 00:17:01.876 A:middle
The other way was with the API,

00:17:02.306 --> 00:17:04.476 A:middle
the Create ML API using Xcode

00:17:04.516 --> 00:17:05.006 A:middle
Playgrounds.

00:17:05.886 --> 00:17:07.606 A:middle
If we walk through some of this

00:17:07.606 --> 00:17:09.296 A:middle
code we can see the first thing

00:17:09.296 --> 00:17:11.286 A:middle
we had to do was import Create

00:17:11.286 --> 00:17:11.376 A:middle
ML.

00:17:12.336 --> 00:17:13.945 A:middle
The next was to specify where

00:17:13.945 --> 00:17:15.376 A:middle
our training and testing data

00:17:15.376 --> 00:17:17.546 A:middle
was and then actually begin

00:17:17.546 --> 00:17:19.276 A:middle
training the model by specifying

00:17:19.376 --> 00:17:20.606 A:middle
how our training data was laid

00:17:20.606 --> 00:17:20.806 A:middle
out.

00:17:22.096 --> 00:17:23.226 A:middle
We can then evaluate on the

00:17:23.306 --> 00:17:25.876 A:middle
testing data and finally Save ML

00:17:25.876 --> 00:17:26.185 A:middle
Model.

00:17:29.466 --> 00:17:30.996 A:middle
If you want to automate this you

00:17:30.996 --> 00:17:32.106 A:middle
can also turn these into

00:17:32.236 --> 00:17:33.996 A:middle
scripts, which is a very popular

00:17:33.996 --> 00:17:35.656 A:middle
way of saving what you've done

00:17:35.716 --> 00:17:37.096 A:middle
and rerunning it whenever.

00:17:39.626 --> 00:17:40.776 A:middle
You can then change permissions

00:17:40.776 --> 00:17:42.656 A:middle
on the file and run them like

00:17:42.756 --> 00:17:42.976 A:middle
so.

00:17:43.936 --> 00:17:45.696 A:middle
Or for other work flows you can

00:17:45.696 --> 00:17:47.836 A:middle
always use Swift Command Line

00:17:47.836 --> 00:17:48.166 A:middle
REPL.

00:17:49.146 --> 00:17:51.126 A:middle
So we've seen today how to train

00:17:51.126 --> 00:17:52.386 A:middle
image classification models

00:17:52.896 --> 00:17:53.966 A:middle
using a few different work

00:17:54.036 --> 00:17:54.306 A:middle
flows.

00:17:54.836 --> 00:17:56.386 A:middle
Put next, I'd like to pass it

00:17:56.386 --> 00:17:58.456 A:middle
off to Tao to talk about natural

00:17:58.456 --> 00:17:58.866 A:middle
language.

00:17:59.356 --> 00:17:59.646 A:middle
Thank you.


00:18:01.516 --> 00:18:05.500 A:middle
[ Applause ]

00:18:08.256 --> 00:18:11.446 A:middle
&gt;&gt; Thank you Liza.

00:18:12.516 --> 00:18:14.356 A:middle
Hello everyone, my name is Tao.

00:18:14.356 --> 00:18:16.306 A:middle
I'm an Engineer Head at Apple

00:18:16.576 --> 00:18:17.976 A:middle
working on the Core ML Team.

00:18:18.886 --> 00:18:21.046 A:middle
You just saw how easy and

00:18:21.046 --> 00:18:22.556 A:middle
intuitive to train an image

00:18:22.556 --> 00:18:24.926 A:middle
classifier with just a few lines

00:18:24.926 --> 00:18:25.496 A:middle
of code.

00:18:26.126 --> 00:18:28.026 A:middle
Now, I'm going to show you the

00:18:28.026 --> 00:18:29.756 A:middle
same can be done for natural

00:18:29.756 --> 00:18:30.286 A:middle
language.

00:18:30.836 --> 00:18:33.796 A:middle
In the easiest release we're

00:18:33.796 --> 00:18:35.356 A:middle
going to support two Natural

00:18:35.356 --> 00:18:37.706 A:middle
Language Tasks -- Text

00:18:37.706 --> 00:18:39.746 A:middle
Classification and Word Tagging.

00:18:40.976 --> 00:18:43.276 A:middle
Today I'm going to focus on Text

00:18:43.276 --> 00:18:44.406 A:middle
Classification.

00:18:44.716 --> 00:18:46.106 A:middle
For details on Word Tagging

00:18:46.676 --> 00:18:48.016 A:middle
please join the Natural Language

00:18:48.016 --> 00:18:49.666 A:middle
Session that happens tomorrow.

00:18:50.546 --> 00:18:52.336 A:middle
Text Classification can be used

00:18:52.586 --> 00:18:53.726 A:middle
in a few machine learning

00:18:53.806 --> 00:18:54.486 A:middle
applications.

00:18:55.706 --> 00:18:57.776 A:middle
For example, Sentiment Analysis.

00:18:58.646 --> 00:19:00.416 A:middle
The energy of developers is


00:18:58.646 --> 00:19:00.416 A:middle
The energy of developers is

00:19:00.416 --> 00:19:01.396 A:middle
amazing!

00:19:01.706 --> 00:19:02.786 A:middle
That's a positive note.

00:19:03.216 --> 00:19:04.656 A:middle
You want your app to know it.

00:19:05.516 --> 00:19:08.046 A:middle
[ Applause ]

00:19:08.546 --> 00:19:09.546 A:middle
Spam Analysis.

00:19:10.216 --> 00:19:11.896 A:middle
If you saw this message in your

00:19:11.896 --> 00:19:13.726 A:middle
mailbox, you know it's very

00:19:13.726 --> 00:19:15.486 A:middle
likely it's a Spam.

00:19:15.656 --> 00:19:17.936 A:middle
So you want your app to know

00:19:18.406 --> 00:19:19.966 A:middle
that as well.

00:19:19.966 --> 00:19:20.956 A:middle
Topic Analysis.

00:19:21.616 --> 00:19:23.586 A:middle
The Warriors just had an amazing

00:19:23.586 --> 00:19:24.306 A:middle
comeback win.

00:19:25.046 --> 00:19:26.566 A:middle
That's a sport post.

00:19:26.796 --> 00:19:28.296 A:middle
You want your app to be able to

00:19:28.296 --> 00:19:29.066 A:middle
classify that.

00:19:30.286 --> 00:19:32.766 A:middle
So to train such a classifier,

00:19:32.766 --> 00:19:34.106 A:middle
the first thing you do is to

00:19:34.106 --> 00:19:35.326 A:middle
collect some training data.

00:19:36.206 --> 00:19:38.956 A:middle
With Create ML we support a few

00:19:38.956 --> 00:19:40.146 A:middle
different ways for you to

00:19:40.146 --> 00:19:41.576 A:middle
organize your training data.

00:19:42.216 --> 00:19:44.676 A:middle
For example, label directories.

00:19:45.366 --> 00:19:46.676 A:middle
Here you have two folders.

00:19:46.996 --> 00:19:48.556 A:middle
One named the positive, the

00:19:48.556 --> 00:19:50.076 A:middle
other one named negative.

00:19:50.716 --> 00:19:52.416 A:middle
Within each folder you have a

00:19:52.416 --> 00:19:54.966 A:middle
number of articles with just raw

00:19:55.766 --> 00:19:57.926 A:middle
text whose true label is simply

00:19:57.926 --> 00:19:59.496 A:middle
the name of the folder.


00:20:00.976 --> 00:20:02.936 A:middle
Alternatively, you can prepare

00:20:02.936 --> 00:20:04.346 A:middle
your training data using simple

00:20:04.346 --> 00:20:06.746 A:middle
CSV, where you prepare your raw

00:20:06.746 --> 00:20:08.646 A:middle
text and the truth label

00:20:08.856 --> 00:20:09.806 A:middle
separated by comma.

00:20:10.806 --> 00:20:12.876 A:middle
We also support JSON for the

00:20:12.876 --> 00:20:15.286 A:middle
training data and know that we

00:20:15.286 --> 00:20:16.486 A:middle
just talk about training data

00:20:16.486 --> 00:20:18.206 A:middle
organization and you can

00:20:18.206 --> 00:20:19.976 A:middle
actually organize your test data

00:20:19.976 --> 00:20:20.976 A:middle
in the exact same way.

00:20:24.256 --> 00:20:26.176 A:middle
Now, with your training data and

00:20:26.176 --> 00:20:28.086 A:middle
test data ready, what are the

00:20:28.086 --> 00:20:30.126 A:middle
steps involved to train such a

00:20:30.126 --> 00:20:31.076 A:middle
text classifier?

00:20:34.226 --> 00:20:35.686 A:middle
A typical work flow would look

00:20:35.686 --> 00:20:36.446 A:middle
something like this.

00:20:37.936 --> 00:20:39.276 A:middle
You start with your raw text,

00:20:40.166 --> 00:20:42.096 A:middle
you do a language identification

00:20:42.096 --> 00:20:43.426 A:middle
to figure out which language it

00:20:43.426 --> 00:20:46.196 A:middle
is in, you convert that into

00:20:46.306 --> 00:20:49.346 A:middle
tokens, and then you convert

00:20:49.346 --> 00:20:50.676 A:middle
that into some feature values

00:20:52.256 --> 00:20:53.796 A:middle
and then you can apply a machine

00:20:53.796 --> 00:20:56.206 A:middle
learning model that gives you

00:20:56.206 --> 00:20:57.716 A:middle
some predicted value that you

00:20:57.836 --> 00:20:59.476 A:middle
have to map to some desired

00:20:59.476 --> 00:20:59.956 A:middle
label.

00:20:59.956 --> 00:21:02.016 A:middle
And then you can compare that


00:20:59.956 --> 00:21:02.016 A:middle
And then you can compare that

00:21:02.016 --> 00:21:04.136 A:middle
label to your truth label and

00:21:04.226 --> 00:21:07.096 A:middle
start reiterating on it.

00:21:07.356 --> 00:21:09.806 A:middle
With Create ML though we took

00:21:09.806 --> 00:21:12.546 A:middle
away all these complexities so

00:21:12.546 --> 00:21:14.586 A:middle
that all you need to do is to

00:21:14.586 --> 00:21:16.976 A:middle
prepare raw text with the true

00:21:17.036 --> 00:21:19.116 A:middle
label and start training

00:21:19.566 --> 00:21:20.456 A:middle
immediately.

00:21:21.516 --> 00:21:27.236 A:middle
[ Applause ]

00:21:27.736 --> 00:21:29.576 A:middle
Now let me give you a concrete

00:21:29.576 --> 00:21:31.136 A:middle
example like how you can train

00:21:31.136 --> 00:21:33.306 A:middle
such a classifier and use it.

00:21:34.066 --> 00:21:36.286 A:middle
For example, we have this simple

00:21:36.426 --> 00:21:38.986 A:middle
App called Stay Positive, whose

00:21:39.086 --> 00:21:41.736 A:middle
purpose is to encourage positive

00:21:42.476 --> 00:21:42.606 A:middle
post.

00:21:43.356 --> 00:21:45.706 A:middle
If user entered "I hate traffic"

00:21:46.286 --> 00:21:48.366 A:middle
the background turns red and we

00:21:48.366 --> 00:21:49.746 A:middle
disable the post button.

00:21:50.516 --> 00:21:52.726 A:middle
[ Laughing ]

00:21:53.226 --> 00:21:55.086 A:middle
"I love driving my car at five

00:21:55.086 --> 00:21:57.886 A:middle
miles per hour just chilling in

00:21:58.626 --> 00:21:59.306 A:middle
traffic."

00:21:59.516 --> 00:22:00.596 A:middle
That's a positive post.


00:21:59.516 --> 00:22:00.596 A:middle
That's a positive post.

00:22:00.826 --> 00:22:02.526 A:middle
We encourage you to post it.

00:22:03.996 --> 00:22:05.756 A:middle
Just imagine what our Internet

00:22:05.756 --> 00:22:07.076 A:middle
would look like this with this

00:22:07.076 --> 00:22:08.896 A:middle
app running on everybody's

00:22:08.896 --> 00:22:09.346 A:middle
phone.

00:22:11.516 --> 00:22:14.586 A:middle
[ Applause ]

00:22:15.086 --> 00:22:16.216 A:middle
Now in order to do that let me

00:22:16.216 --> 00:22:18.000 A:middle
give you a live demo.

00:22:25.236 --> 00:22:27.846 A:middle
So to train such a classifier

00:22:27.846 --> 00:22:29.396 A:middle
the first thing I do is collect

00:22:29.396 --> 00:22:29.976 A:middle
some training data.

00:22:33.336 --> 00:22:35.626 A:middle
On my desktop I have a train

00:22:35.626 --> 00:22:37.326 A:middle
folder and also a test folder.

00:22:38.006 --> 00:22:39.506 A:middle
In train folder we have two

00:22:39.506 --> 00:22:40.046 A:middle
folders.

00:22:40.196 --> 00:22:41.696 A:middle
One is named positive, the other

00:22:41.696 --> 00:22:42.506 A:middle
one negative.

00:22:43.306 --> 00:22:44.586 A:middle
And there are a number of

00:22:44.586 --> 00:22:47.986 A:middle
articles in each folder and task

00:22:47.986 --> 00:22:49.696 A:middle
folder is organized in a very

00:22:49.696 --> 00:22:50.576 A:middle
similar way.

00:22:51.316 --> 00:22:55.996 A:middle
So the first thing I do is to

00:22:55.996 --> 00:22:59.076 A:middle
import Create ML.

00:22:59.326 --> 00:23:02.096 A:middle
Now I need to tell the program


00:22:59.326 --> 00:23:02.096 A:middle
Now I need to tell the program

00:23:02.096 --> 00:23:04.036 A:middle
where to find my training data.

00:23:04.426 --> 00:23:07.696 A:middle
For that I'm simply using a URL

00:23:07.806 --> 00:23:10.946 A:middle
capability and then I can start

00:23:10.946 --> 00:23:12.536 A:middle
training my model using the

00:23:12.536 --> 00:23:14.466 A:middle
label directories that Liza just

00:23:14.466 --> 00:23:14.866 A:middle
showed you.

00:23:14.866 --> 00:23:18.276 A:middle
Looks like the training has

00:23:18.276 --> 00:23:18.636 A:middle
started.

00:23:20.296 --> 00:23:21.546 A:middle
As you can see on the bottom

00:23:21.546 --> 00:23:23.046 A:middle
there there's some programs

00:23:23.046 --> 00:23:24.096 A:middle
report for you to check.

00:23:24.096 --> 00:23:26.626 A:middle
It looks like the training has

00:23:27.956 --> 00:23:28.166 A:middle
finished.

00:23:28.286 --> 00:23:30.446 A:middle
Now you can check some basic

00:23:30.446 --> 00:23:31.576 A:middle
performance numbers on this

00:23:31.576 --> 00:23:32.136 A:middle
model.

00:23:32.376 --> 00:23:32.976 A:middle
For example,

00:23:33.846 --> 00:23:36.756 A:middle
model.trainingmatrics, now it

00:23:36.756 --> 00:23:38.136 A:middle
shows you this model has been

00:23:38.136 --> 00:23:40.036 A:middle
trained on over 2,000 examples

00:23:40.876 --> 00:23:42.666 A:middle
and the accuracy is 100%.

00:23:45.786 --> 00:23:47.686 A:middle
But how does it perform on some

00:23:47.726 --> 00:23:48.446 A:middle
unseen data?

00:23:49.336 --> 00:23:51.216 A:middle
So I'm going to do the same to

00:23:51.246 --> 00:23:55.006 A:middle
define test data and then

00:23:56.256 --> 00:23:59.966 A:middle
evaluate that model on the test


00:24:01.196 --> 00:24:01.336 A:middle
data.

00:24:01.516 --> 00:24:04.226 A:middle
As you can see we have 77 test

00:24:04.416 --> 00:24:06.936 A:middle
examples and we are achieving

00:24:07.336 --> 00:24:10.846 A:middle
over 94% accuracy, which is very

00:24:10.846 --> 00:24:11.506 A:middle
good.

00:24:12.436 --> 00:24:13.726 A:middle
I'm sure you want to reiterate

00:24:13.726 --> 00:24:15.186 A:middle
on it if you want to see like

00:24:15.186 --> 00:24:17.786 A:middle
even higher number, but this

00:24:17.786 --> 00:24:19.816 A:middle
number is pretty good enough for

00:24:19.816 --> 00:24:20.016 A:middle
my app.

00:24:20.776 --> 00:24:22.336 A:middle
So let me just test it out.

00:24:23.206 --> 00:24:25.576 A:middle
So to save out the model what I

00:24:25.576 --> 00:24:28.336 A:middle
need to do is define a URL where

00:24:28.336 --> 00:24:32.386 A:middle
it's saving to and then write

00:24:32.386 --> 00:24:34.056 A:middle
out the model to my desktop.

00:24:34.636 --> 00:24:36.706 A:middle
It looks like that model has

00:24:36.746 --> 00:24:38.186 A:middle
been saved.

00:24:40.116 --> 00:24:41.786 A:middle
So now I need to switch back to

00:24:41.786 --> 00:24:42.276 A:middle
my app.

00:24:43.216 --> 00:24:45.046 A:middle
Just drag and drop it.

00:24:45.716 --> 00:24:46.626 A:middle
There you go.

00:24:51.526 --> 00:24:54.646 A:middle
Now I can start use it.

00:24:55.156 --> 00:24:57.576 A:middle
I will do let model equal to

00:24:57.576 --> 00:24:59.926 A:middle
TextClassifier, which should up

00:24:59.926 --> 00:25:00.446 A:middle
complete.


00:24:59.926 --> 00:25:00.446 A:middle
complete.

00:25:01.306 --> 00:25:03.116 A:middle
And then I'm going to insert

00:25:03.116 --> 00:25:05.126 A:middle
some basic inference code.

00:25:05.716 --> 00:25:08.596 A:middle
In this inference code as you

00:25:08.596 --> 00:25:10.896 A:middle
see the first like I do is using

00:25:10.896 --> 00:25:12.626 A:middle
model.prediction to get

00:25:12.626 --> 00:25:14.416 A:middle
prediction and then in order to

00:25:14.416 --> 00:25:15.786 A:middle
hook up with this simple App UI,

00:25:15.786 --> 00:25:17.596 A:middle
I just convert that it into some

00:25:17.596 --> 00:25:18.296 A:middle
double value.

00:25:18.296 --> 00:25:21.000 A:middle
Let's give it a try.

00:25:34.336 --> 00:25:35.916 A:middle
Yeah, let's try some example we

00:25:35.916 --> 00:25:36.656 A:middle
have showed you.

00:25:37.566 --> 00:25:38.726 A:middle
"I hate traffic".

00:25:40.046 --> 00:25:40.476 A:middle
Negative.

00:25:43.046 --> 00:25:46.426 A:middle
"I love driving my car at five

00:25:46.426 --> 00:25:49.926 A:middle
mile per hour just chilling in

00:25:50.316 --> 00:25:50.546 A:middle
traffic."

00:25:51.296 --> 00:25:53.746 A:middle
Positive. Let's try something

00:25:53.746 --> 00:25:54.146 A:middle
different.

00:25:54.366 --> 00:25:55.576 A:middle
That will be fun.

00:25:56.596 --> 00:25:59.396 A:middle
"Machine learning is hard,

00:25:59.566 --> 00:26:03.306 A:middle
Create ML makes it so easy."


00:25:59.566 --> 00:26:03.306 A:middle
Create ML makes it so easy."

00:26:04.416 --> 00:26:04.966 A:middle
Positive.

00:26:07.516 --> 00:26:11.056 A:middle
[ Applause ]

00:26:11.556 --> 00:26:12.936 A:middle
So that's how you train your

00:26:12.936 --> 00:26:15.666 A:middle
customized text classifier and

00:26:15.666 --> 00:26:16.976 A:middle
drag it into your app to use it.

00:26:23.046 --> 00:26:24.286 A:middle
Here's the recap.

00:26:25.716 --> 00:26:27.606 A:middle
So to train such a classifier

00:26:27.746 --> 00:26:29.026 A:middle
the first thing you would do is

00:26:29.026 --> 00:26:30.136 A:middle
to specify data.

00:26:31.106 --> 00:26:33.036 A:middle
You specify training data as

00:26:33.096 --> 00:26:34.386 A:middle
well as your test data.

00:26:35.836 --> 00:26:37.126 A:middle
And then you can create your

00:26:37.126 --> 00:26:40.186 A:middle
model on the training data to

00:26:40.186 --> 00:26:42.536 A:middle
evaluate these performance you

00:26:42.536 --> 00:26:44.126 A:middle
evaluate a model on the test

00:26:44.126 --> 00:26:44.356 A:middle
data.

00:26:45.676 --> 00:26:48.016 A:middle
Finally to use your model in

00:26:48.016 --> 00:26:50.606 A:middle
your app you simply save it out

00:26:50.606 --> 00:26:53.216 A:middle
using this right API.

00:26:56.076 --> 00:26:59.466 A:middle
To summarize, with just a few

00:26:59.466 --> 00:27:01.746 A:middle
lines of code you can train your


00:26:59.466 --> 00:27:01.746 A:middle
lines of code you can train your

00:27:01.786 --> 00:27:03.866 A:middle
customized text classifier

00:27:05.026 --> 00:27:06.406 A:middle
simple intuitive.

00:27:06.926 --> 00:27:10.086 A:middle
With that, I'd like to hand back

00:27:10.086 --> 00:27:11.466 A:middle
to Gaurav who is going to talk

00:27:11.466 --> 00:27:12.586 A:middle
about tabula data.

00:27:13.136 --> 00:27:13.516 A:middle
Thank you.

00:27:14.516 --> 00:27:18.866 A:middle
[ Applause ]

00:27:19.366 --> 00:27:22.476 A:middle
&gt;&gt; Thank you Tau.

00:27:22.716 --> 00:27:24.726 A:middle
Besides images and texts,

00:27:24.726 --> 00:27:26.296 A:middle
another common source of data

00:27:26.496 --> 00:27:27.836 A:middle
that requires very frequently

00:27:27.836 --> 00:27:29.026 A:middle
when you're solving a machine

00:27:29.026 --> 00:27:30.436 A:middle
learning problem is tabular

00:27:30.436 --> 00:27:30.596 A:middle
data.

00:27:31.876 --> 00:27:33.416 A:middle
What I mean by tabular data I

00:27:33.416 --> 00:27:35.346 A:middle
mean the data is spread sheet

00:27:35.376 --> 00:27:37.096 A:middle
format or in a table format.

00:27:37.566 --> 00:27:39.016 A:middle
This kind of data occurs fairly

00:27:39.016 --> 00:27:39.596 A:middle
frequently.

00:27:40.656 --> 00:27:42.486 A:middle
For example, let's just you're

00:27:42.486 --> 00:27:44.256 A:middle
trying to predict house prices

00:27:44.256 --> 00:27:45.656 A:middle
using number of beds, number of

00:27:45.656 --> 00:27:47.086 A:middle
baths, or square footage,

00:27:47.716 --> 00:27:49.256 A:middle
generally the data is arranged

00:27:49.336 --> 00:27:50.336 A:middle
in a tabular format.

00:27:50.336 --> 00:27:53.536 A:middle
You want to predict the quality

00:27:53.536 --> 00:27:54.876 A:middle
of wine using its chemical

00:27:54.876 --> 00:27:55.826 A:middle
compositions.

00:27:56.206 --> 00:27:57.226 A:middle
Chances are data will be

00:27:57.226 --> 00:27:58.346 A:middle
arranged in table format.

00:27:58.946 --> 00:28:00.556 A:middle
Or something even simple where


00:27:58.946 --> 00:28:00.556 A:middle
Or something even simple where

00:28:00.556 --> 00:28:02.006 A:middle
to hop -- which bar to hop

00:28:02.006 --> 00:28:04.166 A:middle
tonight using happy hour or

00:28:04.406 --> 00:28:06.406 A:middle
price the data will be in

00:28:06.666 --> 00:28:07.986 A:middle
tabular format.

00:28:09.576 --> 00:28:12.956 A:middle
To handle the data, which is in

00:28:12.956 --> 00:28:15.346 A:middle
tabular format, we actually

00:28:16.006 --> 00:28:17.726 A:middle
introduce a new data structure,

00:28:17.726 --> 00:28:19.566 A:middle
which we call as MLDataTable.

00:28:20.386 --> 00:28:22.756 A:middle
MLDataTable is based on

00:28:22.756 --> 00:28:24.756 A:middle
[inaudible] technology that we

00:28:24.756 --> 00:28:26.436 A:middle
will discuss in detail tomorrow.

00:28:26.916 --> 00:28:29.016 A:middle
There's something interesting

00:28:29.016 --> 00:28:30.176 A:middle
about these data tables.

00:28:31.756 --> 00:28:32.996 A:middle
The rows contain the

00:28:32.996 --> 00:28:35.146 A:middle
observations, or examples.

00:28:35.236 --> 00:28:36.836 A:middle
So here house number two has

00:28:36.946 --> 00:28:39.116 A:middle
four bed, three bath, and 500K

00:28:39.196 --> 00:28:39.556 A:middle
price.

00:28:40.216 --> 00:28:42.886 A:middle
The columns contains what we

00:28:42.886 --> 00:28:43.766 A:middle
call as features.

00:28:44.186 --> 00:28:45.516 A:middle
So the beds are features, baths

00:28:46.526 --> 00:28:48.306 A:middle
are features, square feet,

00:28:48.846 --> 00:28:49.776 A:middle
etcetera, are features.

00:28:51.096 --> 00:28:52.856 A:middle
There is one spatial column that

00:28:52.896 --> 00:28:55.326 A:middle
we want to predict, in this case

00:28:55.476 --> 00:28:58.506 A:middle
price, and this feature in this

00:28:58.506 --> 00:29:00.136 A:middle
column is known as target or


00:28:58.506 --> 00:29:00.136 A:middle
column is known as target or

00:29:00.136 --> 00:29:01.176 A:middle
response variable.

00:29:01.926 --> 00:29:03.426 A:middle
The whole idea behind tabular

00:29:03.426 --> 00:29:05.016 A:middle
data is that we want to predict

00:29:05.016 --> 00:29:07.336 A:middle
target variable as a function of

00:29:07.536 --> 00:29:09.736 A:middle
one or many of these features.

00:29:13.046 --> 00:29:14.966 A:middle
So what are the common sources

00:29:14.966 --> 00:29:15.646 A:middle
that we support?

00:29:15.646 --> 00:29:18.126 A:middle
Well, CSV, JSON, as well you can

00:29:18.206 --> 00:29:20.186 A:middle
actually have code.

00:29:20.666 --> 00:29:21.826 A:middle
So let's take a little bit more

00:29:23.326 --> 00:29:25.776 A:middle
about MLDataTable.

00:29:26.286 --> 00:29:29.826 A:middle
First you can read data simply

00:29:29.826 --> 00:29:32.236 A:middle
by using CSV.

00:29:32.706 --> 00:29:35.426 A:middle
What is more important that you

00:29:35.426 --> 00:29:37.516 A:middle
can access the column using a

00:29:37.566 --> 00:29:38.686 A:middle
subscript notation.

00:29:38.876 --> 00:29:40.306 A:middle
So all you do is house at a

00:29:40.376 --> 00:29:42.206 A:middle
price and you get an entire of

00:29:42.596 --> 00:29:42.886 A:middle
price.

00:29:45.356 --> 00:29:47.246 A:middle
You can add to column, subtract

00:29:47.246 --> 00:29:48.826 A:middle
to column, multiply to column,

00:29:48.826 --> 00:29:49.776 A:middle
divide to columns.

00:29:50.566 --> 00:29:53.256 A:middle
And the way you do it is in very

00:29:53.256 --> 00:29:54.576 A:middle
natural looking syntax.

00:29:54.576 --> 00:29:55.726 A:middle
So you just simply say house

00:29:55.726 --> 00:29:57.286 A:middle
data price divided by house data

00:29:57.286 --> 00:29:59.246 A:middle
square feet to get price per

00:29:59.246 --> 00:29:59.766 A:middle
square feet.


00:30:01.016 --> 00:30:03.056 A:middle
Behind the scenes this

00:30:03.126 --> 00:30:04.816 A:middle
calculation is done using

00:30:04.816 --> 00:30:07.506 A:middle
evaluation and through vector

00:30:07.506 --> 00:30:08.086 A:middle
operations.

00:30:08.816 --> 00:30:11.226 A:middle
You can also do some of the

00:30:11.226 --> 00:30:12.716 A:middle
other interesting things, for

00:30:12.716 --> 00:30:14.846 A:middle
example you can split data table

00:30:14.846 --> 00:30:17.126 A:middle
in training intercept as well as

00:30:17.126 --> 00:30:18.476 A:middle
you can even do a filtering.

00:30:18.636 --> 00:30:20.026 A:middle
So for example, if you're only

00:30:20.026 --> 00:30:21.776 A:middle
interested in large houses, you

00:30:21.776 --> 00:30:23.256 A:middle
can clear and indicate a

00:30:23.256 --> 00:30:24.776 A:middle
variable and filter it out.

00:30:26.006 --> 00:30:27.376 A:middle
There are a lot of operations

00:30:27.376 --> 00:30:29.536 A:middle
that data table support.

00:30:29.536 --> 00:30:31.566 A:middle
I urge you to try it out in

00:30:31.566 --> 00:30:32.506 A:middle
Xcode Playground.

00:30:32.656 --> 00:30:33.836 A:middle
They're fun.

00:30:36.056 --> 00:30:37.296 A:middle
Now once we have data in data

00:30:37.296 --> 00:30:38.586 A:middle
table you will like to do the

00:30:38.636 --> 00:30:39.316 A:middle
training on it.

00:30:40.726 --> 00:30:42.596 A:middle
Create ML supports large number

00:30:42.596 --> 00:30:44.296 A:middle
of algorithms such as Boosted

00:30:44.296 --> 00:30:46.576 A:middle
Tree, Regularized Regression,

00:30:46.576 --> 00:30:48.036 A:middle
Random Forest, etcetera.

00:30:49.146 --> 00:30:51.416 A:middle
And all of these algorithms are

00:30:51.416 --> 00:30:52.386 A:middle
represented by their class.

00:30:52.386 --> 00:30:56.016 A:middle
In order to train your model you

00:30:56.016 --> 00:30:57.326 A:middle
only have to write one line of

00:30:57.416 --> 00:30:57.716 A:middle
code.

00:30:58.126 --> 00:30:59.666 A:middle
Basically you tell what is the

00:30:59.716 --> 00:31:01.926 A:middle
target and where you are getting


00:30:59.716 --> 00:31:01.926 A:middle
target and where you are getting

00:31:01.926 --> 00:31:03.346 A:middle
the data and which is the

00:31:03.346 --> 00:31:04.766 A:middle
algorithm you are instantiating.

00:31:05.356 --> 00:31:06.896 A:middle
So in this case, let's just say

00:31:06.896 --> 00:31:07.726 A:middle
you are running Linear

00:31:07.726 --> 00:31:10.186 A:middle
Regression, or Regularized

00:31:10.186 --> 00:31:11.356 A:middle
Linear Regression, you just

00:31:11.356 --> 00:31:13.726 A:middle
actually tell it that the data

00:31:13.726 --> 00:31:15.566 A:middle
is house data and the column is

00:31:16.456 --> 00:31:16.606 A:middle
price.

00:31:19.076 --> 00:31:20.906 A:middle
If you do Boosted Tree

00:31:20.906 --> 00:31:22.636 A:middle
Regression, just replace Linear

00:31:22.636 --> 00:31:23.926 A:middle
Regression with Boosted Tree and

00:31:23.926 --> 00:31:24.566 A:middle
you're all set.

00:31:25.566 --> 00:31:27.826 A:middle
Now Random Forest like that.

00:31:29.206 --> 00:31:32.226 A:middle
Plus we also provide a high

00:31:32.226 --> 00:31:34.266 A:middle
level abstraction ML Regression

00:31:34.406 --> 00:31:35.956 A:middle
that automatically runs all

00:31:35.956 --> 00:31:37.506 A:middle
these algorithms and choose the

00:31:37.506 --> 00:31:37.976 A:middle
best one for you.

00:31:38.516 --> 00:31:45.076 A:middle
[ Applause ]

00:31:45.576 --> 00:31:46.746 A:middle
This is inline with our

00:31:46.746 --> 00:31:48.726 A:middle
philosophy that you should focus

00:31:48.726 --> 00:31:49.106 A:middle
on task.

00:31:49.106 --> 00:31:50.366 A:middle
And the task is to predict the

00:31:50.416 --> 00:31:50.796 A:middle
price.

00:31:50.796 --> 00:31:52.036 A:middle
You should not focus about

00:31:52.396 --> 00:31:53.546 A:middle
nitty-gritty details of the

00:31:53.546 --> 00:31:54.166 A:middle
algorithm.

00:31:54.936 --> 00:31:56.736 A:middle
Having said that in case you are

00:31:56.736 --> 00:31:58.766 A:middle
expert you can actually use

00:31:58.766 --> 00:32:00.196 A:middle
Booster Tree and change its


00:31:58.766 --> 00:32:00.196 A:middle
Booster Tree and change its

00:32:00.196 --> 00:32:01.386 A:middle
parameters also.

00:32:06.436 --> 00:32:08.346 A:middle
So a complete end-to-end would

00:32:08.346 --> 00:32:09.006 A:middle
look like this.

00:32:09.896 --> 00:32:12.276 A:middle
It follows exactly the same

00:32:12.276 --> 00:32:14.076 A:middle
pattern as image and text.

00:32:14.466 --> 00:32:17.836 A:middle
First you specify the data.

00:32:18.166 --> 00:32:20.506 A:middle
Second you just create your

00:32:21.536 --> 00:32:21.986 A:middle
model.

00:32:22.426 --> 00:32:23.846 A:middle
Third you evaluate the model.

00:32:25.236 --> 00:32:27.006 A:middle
And once you're happy you save

00:32:27.006 --> 00:32:27.246 A:middle
it all.

00:32:28.426 --> 00:32:31.686 A:middle
So table of data, image data,

00:32:31.686 --> 00:32:33.526 A:middle
and text data, they all follow

00:32:33.526 --> 00:32:35.086 A:middle
the same pattern.

00:32:37.756 --> 00:32:39.356 A:middle
So let's just take a quick

00:32:39.356 --> 00:32:41.736 A:middle
summary of what we saw in this

00:32:41.836 --> 00:32:42.236 A:middle
session.

00:32:46.076 --> 00:32:48.336 A:middle
So Create ML is our ML framework

00:32:48.336 --> 00:32:49.226 A:middle
in Swift.

00:32:49.226 --> 00:32:51.036 A:middle
It's very simple to use and it

00:32:51.036 --> 00:32:52.756 A:middle
is very powerful and it

00:32:52.756 --> 00:32:53.726 A:middle
leverages Core Apple

00:32:53.726 --> 00:32:54.626 A:middle
Technologies.

00:32:54.716 --> 00:32:56.106 A:middle
You do end to end machine

00:32:56.106 --> 00:32:58.546 A:middle
learning in Swift on your Mac.


00:33:01.136 --> 00:33:03.286 A:middle
We also discussed about our work

00:33:03.286 --> 00:33:03.916 A:middle
flow.

00:33:04.866 --> 00:33:07.036 A:middle
Once again, you start from an

00:33:07.036 --> 00:33:07.776 A:middle
experience.

00:33:08.456 --> 00:33:09.456 A:middle
What is the experience you're

00:33:09.456 --> 00:33:10.246 A:middle
trying to enable?

00:33:11.596 --> 00:33:13.076 A:middle
Then define the problem.

00:33:13.826 --> 00:33:16.056 A:middle
Then collect the data, make sure

00:33:16.056 --> 00:33:17.806 A:middle
this data is reflective of the

00:33:17.806 --> 00:33:20.136 A:middle
real world usage of your

00:33:20.136 --> 00:33:20.656 A:middle
scenario.

00:33:21.486 --> 00:33:23.016 A:middle
Then you train the model and

00:33:23.416 --> 00:33:25.076 A:middle
then finally evaluate it.

00:33:25.906 --> 00:33:28.286 A:middle
And once you are happy you just

00:33:28.356 --> 00:33:28.746 A:middle
save it out.

00:33:32.516 --> 00:33:35.676 A:middle
Create ML is in Swift and it's

00:33:35.676 --> 00:33:36.956 A:middle
available on macOS Mojave.

00:33:40.726 --> 00:33:42.276 A:middle
You can use it in Xcode

00:33:42.276 --> 00:33:44.506 A:middle
Playground, Swift Scripts, and

00:33:44.506 --> 00:33:45.186 A:middle
Swift for Apple.

00:33:46.046 --> 00:33:48.426 A:middle
So please try it out.

00:33:50.206 --> 00:33:51.666 A:middle
We would love to hear from you.

00:33:51.666 --> 00:33:53.456 A:middle
We are here to receive your

00:33:53.456 --> 00:33:55.836 A:middle
feedback and we hope that you

00:33:55.836 --> 00:33:56.976 A:middle
will love it as much as we do.


00:34:00.046 --> 00:34:01.276 A:middle
We will be in Machine Learning

00:34:01.276 --> 00:34:03.036 A:middle
Get Together as well as in Labs

00:34:03.176 --> 00:34:04.216 A:middle
so there is tomorrow there's a

00:34:04.216 --> 00:34:04.836 A:middle
Get Together.

00:34:05.266 --> 00:34:06.636 A:middle
We will be in Labs also.

00:34:06.836 --> 00:34:08.116 A:middle
So please give us your feedback.

00:34:09.226 --> 00:34:10.755 A:middle
There are also related sessions

00:34:10.755 --> 00:34:11.876 A:middle
in the WWDC App.

00:34:12.036 --> 00:34:14.505 A:middle
We have Core ML session tomorrow

00:34:14.505 --> 00:34:17.755 A:middle
morning and an ML Session

00:34:17.755 --> 00:34:18.956 A:middle
tomorrow afternoon.

00:34:19.235 --> 00:34:23.946 A:middle
Vision session on Thursday and

00:34:24.436 --> 00:34:26.306 A:middle
we have Labs on Wednesday and

00:34:26.306 --> 00:34:26.686 A:middle
Friday.

00:34:27.346 --> 00:34:28.396 A:middle
Thank you.

00:34:29.016 --> 00:34:35.500 A:middle
[ Applause ]
