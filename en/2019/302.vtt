WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:08.180 --> 00:00:10.181 A:middle
[ Applause ]

00:00:10.346 --> 00:00:10.866 A:middle
&gt;&gt; Good morning!

00:00:14.596 --> 00:00:16.276 A:middle
Welcome to In-App Purchases and

00:00:16.276 --> 00:00:17.376 A:middle
Using Server-to-Server

00:00:17.376 --> 00:00:18.286 A:middle
Notifications.

00:00:18.836 --> 00:00:20.386 A:middle
My name is Dana DuBois, and I'm

00:00:20.386 --> 00:00:21.296 A:middle
an App Store engineering

00:00:21.296 --> 00:00:21.766 A:middle
manager.

00:00:22.216 --> 00:00:24.806 A:middle
We'll talk about a number of

00:00:24.806 --> 00:00:25.466 A:middle
things today.

00:00:26.116 --> 00:00:27.086 A:middle
First I'm going to start off

00:00:27.086 --> 00:00:29.846 A:middle
about what's new in StoreKit.

00:00:29.876 --> 00:00:31.246 A:middle
What have we changed since we

00:00:31.246 --> 00:00:32.036 A:middle
were here last year?

00:00:32.036 --> 00:00:34.436 A:middle
Then I'm going to hand it off to

00:00:34.436 --> 00:00:35.896 A:middle
my colleague Tori, and she's

00:00:35.896 --> 00:00:36.956 A:middle
going to give you everything you

00:00:36.956 --> 00:00:37.976 A:middle
need to know about

00:00:37.976 --> 00:00:39.716 A:middle
Server-to-Server Notifications,

00:00:40.016 --> 00:00:40.906 A:middle
and how you can make sure you

00:00:40.906 --> 00:00:43.376 A:middle
have the latest information

00:00:43.586 --> 00:00:44.866 A:middle
about your subscription

00:00:44.866 --> 00:00:46.786 A:middle
customers on your backend.

00:00:47.296 --> 00:00:50.166 A:middle
Next up, Manjeet is going to

00:00:50.166 --> 00:00:51.626 A:middle
walk through the different

00:00:51.626 --> 00:00:52.836 A:middle
billing events during the

00:00:52.836 --> 00:00:53.996 A:middle
subscription lifecycle.

00:00:55.256 --> 00:00:56.896 A:middle
And then, finally, he's going to

00:00:56.896 --> 00:00:57.726 A:middle
walk you through what you need

00:00:57.726 --> 00:00:59.366 A:middle
to know to reduce involuntary

00:00:59.366 --> 00:01:00.906 A:middle
churn, and keep your

00:00:59.366 --> 00:01:00.906 A:middle
churn, and keep your

00:01:00.976 --> 00:01:02.816 A:middle
subscription customers in your

00:01:02.816 --> 00:01:03.466 A:middle
service.

00:01:03.996 --> 00:01:05.616 A:middle
So, first.

00:01:05.616 --> 00:01:08.506 A:middle
What's new in StoreKit?

00:01:09.936 --> 00:01:11.756 A:middle
Well, this spring we introduced

00:01:11.756 --> 00:01:12.866 A:middle
subscription offers.

00:01:14.196 --> 00:01:16.266 A:middle
Subscription offers is a feature

00:01:16.806 --> 00:01:19.676 A:middle
that we introduced that gives

00:01:19.676 --> 00:01:22.296 A:middle
you a tool to retain existing

00:01:22.296 --> 00:01:25.156 A:middle
subscribers as well as win back

00:01:25.156 --> 00:01:26.966 A:middle
subscribers who used to be in

00:01:26.966 --> 00:01:27.696 A:middle
the service.

00:01:29.056 --> 00:01:31.516 A:middle
You can achieve this by having

00:01:31.516 --> 00:01:35.226 A:middle
up to 10 different active offers

00:01:35.346 --> 00:01:37.716 A:middle
per subscription, that will give

00:01:37.716 --> 00:01:39.866 A:middle
you a discount or free service

00:01:39.866 --> 00:01:40.626 A:middle
that you can give to your

00:01:40.626 --> 00:01:41.356 A:middle
customers.

00:01:41.736 --> 00:01:45.186 A:middle
Your app decides what to present

00:01:45.186 --> 00:01:46.156 A:middle
and to whom.

00:01:46.626 --> 00:01:47.816 A:middle
It's completely up to you.

00:01:48.626 --> 00:01:49.926 A:middle
This is such a great feature,

00:01:49.926 --> 00:01:51.406 A:middle
and such a big feature, that we

00:01:51.406 --> 00:01:52.496 A:middle
actually have a dedicated

00:01:52.496 --> 00:01:54.036 A:middle
session to that later today,

00:01:54.176 --> 00:01:56.076 A:middle
right here at 2 o'clock.

00:01:56.076 --> 00:01:57.696 A:middle
If you have subscriptions in

00:01:57.696 --> 00:01:59.706 A:middle
your service, I highly recommend

00:01:59.706 --> 00:02:01.006 A:middle
you check that out.

00:01:59.706 --> 00:02:01.006 A:middle
you check that out.

00:02:02.836 --> 00:02:03.946 A:middle
So, what else is new in

00:02:03.946 --> 00:02:04.456 A:middle
StoreKit?

00:02:04.456 --> 00:02:06.326 A:middle
Well, this summer, we're

00:02:06.326 --> 00:02:07.936 A:middle
announcing that we've introduced

00:02:07.936 --> 00:02:08.936 A:middle
the SKStorefront.

00:02:09.826 --> 00:02:11.906 A:middle
SKStorefront is how we're

00:02:11.906 --> 00:02:13.806 A:middle
actually exposing to you, the

00:02:13.806 --> 00:02:15.986 A:middle
developer, the storefront that

00:02:15.986 --> 00:02:17.566 A:middle
the user has set their App Store

00:02:18.416 --> 00:02:18.496 A:middle
to.

00:02:20.836 --> 00:02:22.646 A:middle
This allows you to present the

00:02:22.716 --> 00:02:24.786 A:middle
right content to your customers.

00:02:25.146 --> 00:02:26.256 A:middle
What do you want to merchandise

00:02:26.256 --> 00:02:27.646 A:middle
to your customers all around the

00:02:27.646 --> 00:02:27.966 A:middle
world?

00:02:27.966 --> 00:02:29.796 A:middle
You can use the SKStorefront to

00:02:29.796 --> 00:02:33.026 A:middle
get specific territory for that

00:02:33.026 --> 00:02:34.376 A:middle
customer on their device.

00:02:35.116 --> 00:02:36.686 A:middle
This is the same way that the

00:02:36.686 --> 00:02:39.176 A:middle
App Store exposes content.

00:02:39.456 --> 00:02:41.956 A:middle
And, this API gives you the

00:02:41.956 --> 00:02:43.696 A:middle
storefront that the App Store is

00:02:43.696 --> 00:02:44.696 A:middle
currently set to.

00:02:45.216 --> 00:02:47.756 A:middle
One thing to keep in mind is

00:02:47.756 --> 00:02:49.136 A:middle
that this API returns a

00:02:49.136 --> 00:02:52.466 A:middle
device-specific cached value for

00:02:52.466 --> 00:02:53.296 A:middle
that storefront.

00:02:53.856 --> 00:02:55.536 A:middle
And, it can change over time, so

00:02:55.536 --> 00:02:56.496 A:middle
there's some stuff you need to

00:02:56.496 --> 00:02:57.886 A:middle
think about while you're

00:02:57.886 --> 00:02:58.726 A:middle
interfacing with the

00:02:58.726 --> 00:02:59.516 A:middle
SKStorefront.

00:03:00.376 --> 00:03:01.456 A:middle
So, let's get into the code, and

00:03:01.456 --> 00:03:01.976 A:middle
see how this will all work.

00:03:06.096 --> 00:03:07.936 A:middle
So, if you're interfacing with

00:03:07.936 --> 00:03:09.416 A:middle
StoreKit today, you're already

00:03:09.866 --> 00:03:10.806 A:middle
have a delegate on the

00:03:10.806 --> 00:03:11.986 A:middle
SKPaymentQueue.

00:03:12.596 --> 00:03:14.376 A:middle
We've added on that, the ability

00:03:14.376 --> 00:03:17.276 A:middle
to get a parameter that returns

00:03:17.386 --> 00:03:19.116 A:middle
the current cached value for the

00:03:19.116 --> 00:03:19.706 A:middle
storefront.

00:03:20.056 --> 00:03:21.556 A:middle
Just .storefront, and that'll

00:03:21.606 --> 00:03:22.356 A:middle
give you the value.

00:03:23.166 --> 00:03:24.746 A:middle
Because it can change, and

00:03:24.746 --> 00:03:26.036 A:middle
because it's device-specific, it

00:03:26.036 --> 00:03:27.976 A:middle
is possible, though unlikely,

00:03:28.176 --> 00:03:28.966 A:middle
that it will be nil.

00:03:28.966 --> 00:03:30.286 A:middle
So, you need to check for that

00:03:30.286 --> 00:03:31.636 A:middle
in your app, and make sure you

00:03:31.636 --> 00:03:34.316 A:middle
do the right thing.

00:03:34.536 --> 00:03:35.906 A:middle
Once you have that storefront,

00:03:36.466 --> 00:03:38.366 A:middle
right on that API, is a country

00:03:38.366 --> 00:03:38.746 A:middle
code.

00:03:38.996 --> 00:03:40.256 A:middle
And, that's a 3-letter,

00:03:40.426 --> 00:03:42.386 A:middle
ISO-standard value for

00:03:42.386 --> 00:03:43.966 A:middle
territories and countries all

00:03:43.966 --> 00:03:44.606 A:middle
around the world.

00:03:44.606 --> 00:03:46.226 A:middle
And, that'll tell you exactly

00:03:46.226 --> 00:03:47.666 A:middle
what the App Store is set to on

00:03:47.666 --> 00:03:48.366 A:middle
that device.

00:03:49.076 --> 00:03:49.706 A:middle
And, that's really it.

00:03:49.706 --> 00:03:51.896 A:middle
That'll allow you then to take

00:03:51.896 --> 00:03:53.406 A:middle
that country code, and

00:03:53.706 --> 00:03:55.556 A:middle
merchandise the right content to

00:03:55.556 --> 00:03:56.486 A:middle
your customers.

00:03:57.146 --> 00:03:58.496 A:middle
But, as I said, it can change

00:03:58.496 --> 00:03:59.286 A:middle
over time.

00:03:59.706 --> 00:04:01.176 A:middle
So, let's go a little deeper

00:03:59.706 --> 00:04:01.176 A:middle
So, let's go a little deeper

00:04:01.176 --> 00:04:02.026 A:middle
into the code, and see what else

00:04:02.026 --> 00:04:02.806 A:middle
you need to think about.

00:04:03.306 --> 00:04:06.916 A:middle
Here we have an example of some

00:04:06.916 --> 00:04:09.346 A:middle
code where you're taking your

00:04:09.346 --> 00:04:11.376 A:middle
product identifiers that you

00:04:11.376 --> 00:04:13.506 A:middle
fetch from your backend, passing

00:04:13.506 --> 00:04:14.316 A:middle
it in and then trying to

00:04:14.316 --> 00:04:16.656 A:middle
determine if you should fetch

00:04:16.656 --> 00:04:18.995 A:middle
the metadata, do an SKProduct

00:04:18.995 --> 00:04:20.495 A:middle
request to determine if you

00:04:20.495 --> 00:04:22.125 A:middle
should show that content or not.

00:04:22.866 --> 00:04:25.466 A:middle
So, what the developer has done

00:04:25.466 --> 00:04:27.856 A:middle
there is, fetch that metadata

00:04:27.856 --> 00:04:30.016 A:middle
from their backend, and did a

00:04:30.016 --> 00:04:32.326 A:middle
call to say, hey, is this

00:04:32.326 --> 00:04:34.506 A:middle
storefront valid for that code?

00:04:34.596 --> 00:04:36.046 A:middle
And then, you can see here,

00:04:36.046 --> 00:04:37.286 A:middle
right before you fetch product

00:04:37.286 --> 00:04:39.656 A:middle
info, you would call shouldShow.

00:04:40.156 --> 00:04:42.556 A:middle
If that returns true, add that

00:04:42.556 --> 00:04:44.686 A:middle
identifier to the list of things

00:04:44.686 --> 00:04:45.296 A:middle
you're going to make an

00:04:45.296 --> 00:04:46.586 A:middle
SKProduct request on.

00:04:46.706 --> 00:04:48.476 A:middle
You should do that before you

00:04:48.476 --> 00:04:49.876 A:middle
make the SKProduct request,

00:04:49.876 --> 00:04:50.986 A:middle
because if you're not going to

00:04:50.986 --> 00:04:52.736 A:middle
merchandise that product, it's

00:04:52.736 --> 00:04:54.176 A:middle
more efficient not to actually

00:04:54.176 --> 00:04:56.286 A:middle
fetch the product-- the product

00:04:56.286 --> 00:04:56.836 A:middle
metadata.

00:04:56.836 --> 00:05:01.216 A:middle
But, as I said before, it can

00:04:56.836 --> 00:05:01.216 A:middle
But, as I said before, it can

00:05:01.216 --> 00:05:02.356 A:middle
change over time.

00:05:02.486 --> 00:05:04.676 A:middle
The users could actually switch

00:05:04.676 --> 00:05:06.856 A:middle
accounts, or even-- it's even

00:05:06.856 --> 00:05:08.186 A:middle
possible within the same account

00:05:08.186 --> 00:05:09.436 A:middle
to go into the App Store and

00:05:09.436 --> 00:05:10.946 A:middle
browse different storefronts.

00:05:10.946 --> 00:05:12.456 A:middle
Developers will do this a lot

00:05:12.456 --> 00:05:13.736 A:middle
when they actually want to see

00:05:13.736 --> 00:05:15.306 A:middle
their app in different

00:05:15.306 --> 00:05:16.546 A:middle
territories around the world,

00:05:16.546 --> 00:05:17.396 A:middle
see what it looks like.

00:05:17.396 --> 00:05:18.176 A:middle
See how it's doing.

00:05:18.176 --> 00:05:19.316 A:middle
There's ways of doing that in

00:05:19.316 --> 00:05:19.746 A:middle
the App Store.

00:05:20.046 --> 00:05:21.066 A:middle
So, we want to make sure you

00:05:21.066 --> 00:05:22.746 A:middle
have the latest information in

00:05:22.746 --> 00:05:23.476 A:middle
your running app.

00:05:23.766 --> 00:05:26.066 A:middle
So, on the SKPayment transaction

00:05:26.066 --> 00:05:27.756 A:middle
observer, we added a new

00:05:27.996 --> 00:05:30.296 A:middle
paymentQueueDidChange event that

00:05:30.296 --> 00:05:32.166 A:middle
you can listen for, right inside

00:05:32.166 --> 00:05:32.766 A:middle
your app.

00:05:33.286 --> 00:05:34.386 A:middle
That passes in the payment

00:05:34.386 --> 00:05:34.726 A:middle
queue.

00:05:35.176 --> 00:05:36.196 A:middle
When you get that, you go

00:05:36.196 --> 00:05:37.666 A:middle
queue.storefront, and get the

00:05:37.666 --> 00:05:38.786 A:middle
new value for what that

00:05:38.786 --> 00:05:39.576 A:middle
storefront is.

00:05:40.056 --> 00:05:41.806 A:middle
And, again, it's a new

00:05:41.806 --> 00:05:42.336 A:middle
storefront.

00:05:42.336 --> 00:05:43.606 A:middle
So, you want to reload all the

00:05:43.606 --> 00:05:46.236 A:middle
content specific to that new

00:05:46.236 --> 00:05:46.736 A:middle
store front.

00:05:46.736 --> 00:05:47.466 A:middle
You might actually have

00:05:47.526 --> 00:05:48.666 A:middle
different content that you want

00:05:48.666 --> 00:05:49.926 A:middle
to merchandise based on where

00:05:49.926 --> 00:05:50.976 A:middle
that user is in the world.

00:05:54.096 --> 00:05:55.776 A:middle
So, again, call shouldShow.

00:05:56.066 --> 00:05:57.796 A:middle
Determine if you should, and

00:05:57.796 --> 00:05:59.316 A:middle
fetch product information for

00:05:59.316 --> 00:05:59.383 A:middle
it.

00:06:00.146 --> 00:06:02.466 A:middle
So, what happens when you're

00:06:02.466 --> 00:06:03.436 A:middle
doing a purchase?

00:06:04.376 --> 00:06:05.306 A:middle
You've merchandised some

00:06:05.306 --> 00:06:07.346 A:middle
content, the user's about to go

00:06:07.346 --> 00:06:08.916 A:middle
buy it, and normally everything

00:06:08.916 --> 00:06:09.576 A:middle
will go fine.

00:06:09.576 --> 00:06:11.286 A:middle
But, if the user is actually in

00:06:11.286 --> 00:06:12.646 A:middle
a different storefront from what

00:06:12.646 --> 00:06:14.076 A:middle
their device was set to, it is

00:06:14.126 --> 00:06:16.366 A:middle
possible that the payment queue

00:06:16.616 --> 00:06:18.336 A:middle
will change storefronts in the

00:06:18.336 --> 00:06:19.476 A:middle
middle of that transaction.

00:06:20.276 --> 00:06:21.146 A:middle
So, we've given you a

00:06:21.146 --> 00:06:22.546 A:middle
paymentQueue delegate that

00:06:22.716 --> 00:06:24.396 A:middle
allows you to listen to

00:06:24.396 --> 00:06:27.006 A:middle
paymentQueue: shouldContinue: in

00:06:27.086 --> 00:06:27.826 A:middle
newStorefront.

00:06:27.926 --> 00:06:29.236 A:middle
This is your chance to

00:06:29.236 --> 00:06:31.406 A:middle
double-check, should I allow

00:06:31.406 --> 00:06:32.636 A:middle
this purchase to happen in this

00:06:32.636 --> 00:06:33.346 A:middle
new storefront?

00:06:33.946 --> 00:06:35.256 A:middle
And, again use that same

00:06:35.496 --> 00:06:37.156 A:middle
shouldShow functionality, where

00:06:37.156 --> 00:06:38.506 A:middle
you've listed all your product

00:06:38.506 --> 00:06:40.426 A:middle
identifiers, and you know all

00:06:40.426 --> 00:06:41.436 A:middle
the territories that those

00:06:41.436 --> 00:06:42.686 A:middle
products are available in.

00:06:43.126 --> 00:06:45.506 A:middle
Just-- if it returns true, allow

00:06:45.506 --> 00:06:46.436 A:middle
the payment to continue.

00:06:47.346 --> 00:06:48.936 A:middle
To make sure that it's the best

00:06:48.936 --> 00:06:51.756 A:middle
user experience, we want this to

00:06:51.756 --> 00:06:53.606 A:middle
return fast, so you shouldn't

00:06:53.606 --> 00:06:55.356 A:middle
make a server-side call in the

00:06:55.356 --> 00:06:56.596 A:middle
middle of paymentQueue:

00:06:56.596 --> 00:06:58.066 A:middle
shouldContinue: newStorefront.

00:06:58.686 --> 00:06:59.876 A:middle
You should have this information

00:06:59.876 --> 00:07:01.556 A:middle
cached on your device, what's

00:06:59.876 --> 00:07:01.556 A:middle
cached on your device, what's

00:07:01.556 --> 00:07:03.276 A:middle
available in the territories,

00:07:03.536 --> 00:07:04.836 A:middle
ready to go when the payment's

00:07:04.836 --> 00:07:05.316 A:middle
happening.

00:07:05.666 --> 00:07:07.196 A:middle
That way, you can return real

00:07:07.196 --> 00:07:08.876 A:middle
quick, the user can continue

00:07:08.876 --> 00:07:10.646 A:middle
their purchase, or, if you're

00:07:10.646 --> 00:07:12.616 A:middle
returning no, you can actually

00:07:13.096 --> 00:07:14.866 A:middle
inform the user why it's not

00:07:14.866 --> 00:07:16.076 A:middle
valid in the new storefront.

00:07:17.296 --> 00:07:19.336 A:middle
So, as I said, maybe it's not

00:07:19.336 --> 00:07:20.616 A:middle
available in the new territory.

00:07:21.186 --> 00:07:23.036 A:middle
So, what do you do then?

00:07:23.286 --> 00:07:25.476 A:middle
Well, when that happens, in your

00:07:25.476 --> 00:07:26.156 A:middle
paymentQueue:

00:07:26.156 --> 00:07:27.726 A:middle
updatedTransactions delegate

00:07:27.726 --> 00:07:29.556 A:middle
call, we'll return an

00:07:29.556 --> 00:07:31.696 A:middle
SKStoreProductNotAvailable

00:07:31.696 --> 00:07:31.996 A:middle
error.

00:07:32.536 --> 00:07:34.416 A:middle
This will inform you that you've

00:07:34.416 --> 00:07:35.846 A:middle
just told us that you shouldn't

00:07:35.846 --> 00:07:37.306 A:middle
allow this transaction to happen

00:07:37.306 --> 00:07:38.156 A:middle
in that new storefront.

00:07:38.336 --> 00:07:39.816 A:middle
And, here's your chance to

00:07:40.036 --> 00:07:41.116 A:middle
present a dialog.

00:07:41.476 --> 00:07:43.906 A:middle
Or, merchandise some other piece

00:07:43.906 --> 00:07:44.836 A:middle
of content that might be

00:07:44.836 --> 00:07:45.626 A:middle
equivalent in the new

00:07:45.626 --> 00:07:46.196 A:middle
storefront.

00:07:46.716 --> 00:07:48.446 A:middle
Show an alert, update the UI, do

00:07:48.446 --> 00:07:50.336 A:middle
what you need to do right then

00:07:51.056 --> 00:07:52.476 A:middle
and there.

00:07:52.676 --> 00:07:54.306 A:middle
So, that's SKStorefront.

00:07:54.806 --> 00:07:57.496 A:middle
What else are we introducing?

00:07:58.276 --> 00:08:03.676 A:middle
Well, in iOS 11, 11.2 and tvOS

00:07:58.276 --> 00:08:03.676 A:middle
Well, in iOS 11, 11.2 and tvOS

00:08:03.676 --> 00:08:07.026 A:middle
11.2, and macOS 10.13.2, we

00:08:07.026 --> 00:08:08.566 A:middle
introduced app pre-orders.

00:08:09.826 --> 00:08:11.286 A:middle
This has been a great feature

00:08:11.286 --> 00:08:13.156 A:middle
that developers have used all,

00:08:13.396 --> 00:08:14.756 A:middle
you know, around the world, to

00:08:14.756 --> 00:08:16.116 A:middle
actually get interest in their

00:08:16.116 --> 00:08:17.386 A:middle
apps before they're available in

00:08:17.386 --> 00:08:17.866 A:middle
the store.

00:08:18.636 --> 00:08:19.676 A:middle
And, we're excited to announce

00:08:19.676 --> 00:08:20.716 A:middle
that we're introducing that with

00:08:20.716 --> 00:08:22.896 A:middle
watchOS 6.0 this year, so you

00:08:22.896 --> 00:08:24.636 A:middle
can market your apps right to

00:08:24.636 --> 00:08:26.336 A:middle
the Watch, and gain interest

00:08:26.336 --> 00:08:28.566 A:middle
ahead of time, like having them

00:08:28.566 --> 00:08:29.816 A:middle
be available for pre-order.

00:08:29.816 --> 00:08:32.025 A:middle
But, we're also doing one more

00:08:32.025 --> 00:08:32.836 A:middle
thing this year.

00:08:33.356 --> 00:08:34.826 A:middle
And, coming soon, we're actually

00:08:34.956 --> 00:08:36.476 A:middle
going to signal inside the app

00:08:36.476 --> 00:08:38.676 A:middle
receipt, if the app was

00:08:38.726 --> 00:08:39.996 A:middle
purchased as a pre-order.

00:08:40.275 --> 00:08:41.996 A:middle
So, you'll know which of your

00:08:41.996 --> 00:08:43.866 A:middle
customers have actually

00:08:44.056 --> 00:08:44.966 A:middle
pre-ordered the app.

00:08:45.566 --> 00:08:46.866 A:middle
And, you can use that to, you

00:08:47.666 --> 00:08:49.586 A:middle
know, give them great messages,

00:08:49.586 --> 00:08:50.386 A:middle
saying thank you for

00:08:50.386 --> 00:08:51.446 A:middle
pre-ordering my app.

00:08:51.446 --> 00:08:52.636 A:middle
Or, if you want to unlock some

00:08:52.636 --> 00:08:54.426 A:middle
additional content as a thank

00:08:54.426 --> 00:08:55.276 A:middle
you to some of your best

00:08:55.276 --> 00:08:56.776 A:middle
customers, you can use that

00:08:56.776 --> 00:08:57.286 A:middle
information.

00:08:57.286 --> 00:08:58.186 A:middle
That'll be available in the

00:08:58.186 --> 00:08:58.606 A:middle
receipt.

00:08:58.906 --> 00:08:59.946 A:middle
And, the great thing about the

00:08:59.946 --> 00:09:01.146 A:middle
receipt is that this will go

00:08:59.946 --> 00:09:01.146 A:middle
receipt is that this will go

00:09:01.336 --> 00:09:04.796 A:middle
back to iOS 11, 12, all the way

00:09:04.796 --> 00:09:05.176 A:middle
back in time.

00:09:05.176 --> 00:09:05.976 A:middle
It's available in the receipt.

00:09:08.066 --> 00:09:10.066 A:middle
[ Applause ]

00:09:10.116 --> 00:09:10.966 A:middle
So, those are some of the things

00:09:10.966 --> 00:09:12.376 A:middle
that have changed with StoreKit,

00:09:12.376 --> 00:09:13.496 A:middle
and in-app purchases since we

00:09:13.496 --> 00:09:14.236 A:middle
were here last year.

00:09:15.006 --> 00:09:16.646 A:middle
Next up, I'm excited to hand it

00:09:16.646 --> 00:09:18.036 A:middle
off to my colleague Tori, and

00:09:18.036 --> 00:09:19.056 A:middle
she's going to talk all about

00:09:19.056 --> 00:09:20.616 A:middle
Server-to-Server Notifications.

00:09:20.826 --> 00:09:20.946 A:middle
Tori?

00:09:21.516 --> 00:09:27.500 A:middle
[ Applause ]

00:09:30.236 --> 00:09:31.506 A:middle
&gt;&gt; Hi everyone.

00:09:31.556 --> 00:09:33.166 A:middle
My name's Tori, and I'm very

00:09:33.166 --> 00:09:34.866 A:middle
excited to be here today to talk

00:09:34.866 --> 00:09:36.036 A:middle
to you about Server-to-Server

00:09:36.036 --> 00:09:36.886 A:middle
Notifications.

00:09:38.136 --> 00:09:39.396 A:middle
We have several new features

00:09:39.396 --> 00:09:40.426 A:middle
that we want to bring to the

00:09:40.426 --> 00:09:41.706 A:middle
server-to-server notification,

00:09:41.706 --> 00:09:43.336 A:middle
and I want to do an in-depth

00:09:43.456 --> 00:09:45.286 A:middle
talk with you on how you can use

00:09:45.286 --> 00:09:46.796 A:middle
these to effectively monitor

00:09:46.796 --> 00:09:47.906 A:middle
your subscription events.

00:09:48.546 --> 00:09:50.286 A:middle
But, before we get into all

00:09:50.286 --> 00:09:52.316 A:middle
that, let's first take a look at

00:09:52.316 --> 00:09:53.356 A:middle
what Server-to-Server

00:09:53.356 --> 00:09:55.096 A:middle
Notifications are, and how you

00:09:55.096 --> 00:09:56.626 A:middle
can set up your servers to

00:09:56.666 --> 00:09:56.936 A:middle
receive them.

00:10:01.596 --> 00:10:02.516 A:middle
So, Server-to-Server

00:10:02.516 --> 00:10:05.276 A:middle
Notifications are an HTTP POST

00:10:05.276 --> 00:10:07.126 A:middle
we send from our server to

00:10:07.226 --> 00:10:08.816 A:middle
yours, with a JSON body.

00:10:09.506 --> 00:10:10.746 A:middle
You might recognize these by

00:10:10.746 --> 00:10:11.676 A:middle
their previous name,

00:10:11.886 --> 00:10:13.596 A:middle
statusUpdateNotifications.

00:10:14.356 --> 00:10:15.976 A:middle
Server-to-server notifications

00:10:16.076 --> 00:10:17.856 A:middle
are incredibly useful for

00:10:17.856 --> 00:10:19.476 A:middle
getting of-the-moment updates on

00:10:19.476 --> 00:10:21.156 A:middle
your subscription events, and

00:10:21.156 --> 00:10:22.656 A:middle
for using them so win back

00:10:22.656 --> 00:10:24.316 A:middle
customers in cases like

00:10:24.316 --> 00:10:25.226 A:middle
subscription offers.

00:10:26.436 --> 00:10:27.526 A:middle
Once you've determined which

00:10:27.526 --> 00:10:28.976 A:middle
endpoint you want to receive

00:10:29.006 --> 00:10:29.676 A:middle
your Server-to-Server

00:10:29.676 --> 00:10:31.686 A:middle
Notifications at, all you have

00:10:31.746 --> 00:10:34.016 A:middle
to do is return a 200 response

00:10:34.366 --> 00:10:36.426 A:middle
from that endpoint to indicate a

00:10:36.426 --> 00:10:38.146 A:middle
successfully received message.

00:10:39.116 --> 00:10:41.206 A:middle
However, should you not return a

00:10:41.206 --> 00:10:43.736 A:middle
200 response, we will retry up

00:10:43.906 --> 00:10:45.716 A:middle
to three times to resend the

00:10:45.716 --> 00:10:46.616 A:middle
notification to you.

00:10:46.616 --> 00:10:49.916 A:middle
Once you have determined this

00:10:49.916 --> 00:10:51.766 A:middle
endpoint, you first have to set

00:10:51.766 --> 00:10:52.956 A:middle
it up in App Store Connect.

00:10:53.456 --> 00:10:54.826 A:middle
You can find this place on your

00:10:54.826 --> 00:10:57.156 A:middle
app's App Information page, in

00:10:57.156 --> 00:10:58.286 A:middle
the Subscription Status URL

00:10:58.286 --> 00:10:58.656 A:middle
section.

00:11:03.086 --> 00:11:04.496 A:middle
In addition to setting up your

00:11:04.496 --> 00:11:05.646 A:middle
endpoint in App Store Connect,

00:11:06.186 --> 00:11:07.336 A:middle
there are certain security

00:11:07.336 --> 00:11:08.426 A:middle
requirements which the

00:11:08.426 --> 00:11:10.406 A:middle
connection must adhere to in

00:11:10.406 --> 00:11:11.726 A:middle
order for you to successfully

00:11:11.726 --> 00:11:13.176 A:middle
receive these notifications.

00:11:13.826 --> 00:11:15.726 A:middle
Basically, this all sums up to,

00:11:16.086 --> 00:11:17.086 A:middle
the connection must be App

00:11:17.286 --> 00:11:19.576 A:middle
Transport Security, or ATS,

00:11:20.186 --> 00:11:20.726 A:middle
compliant.

00:11:21.486 --> 00:11:22.686 A:middle
Now, this means a few things.

00:11:23.516 --> 00:11:25.516 A:middle
First, the certificate must be

00:11:25.516 --> 00:11:27.156 A:middle
issued by a trusted certificate

00:11:27.156 --> 00:11:27.636 A:middle
authority.

00:11:29.196 --> 00:11:30.606 A:middle
The Transport Layer Security

00:11:30.606 --> 00:11:33.386 A:middle
version, or TLS version, must be

00:11:33.386 --> 00:11:34.426 A:middle
TLS 1.2.

00:11:35.516 --> 00:11:37.056 A:middle
You must use one of the provided

00:11:37.126 --> 00:11:39.166 A:middle
symmetric ciphers, and the

00:11:39.166 --> 00:11:41.116 A:middle
certificate must be signed and

00:11:41.116 --> 00:11:42.886 A:middle
hashed using an algorithm which

00:11:42.886 --> 00:11:45.096 A:middle
is SHA-256 or greater.

00:11:46.556 --> 00:11:47.496 A:middle
I hope with all this

00:11:47.496 --> 00:11:48.666 A:middle
information, you have a better

00:11:48.666 --> 00:11:49.636 A:middle
understanding of what

00:11:49.736 --> 00:11:51.126 A:middle
Server-to-Server Notifications

00:11:51.126 --> 00:11:52.816 A:middle
are, and how you can set them

00:11:52.816 --> 00:11:53.106 A:middle
up.

00:11:53.896 --> 00:11:54.576 A:middle
Should you need more

00:11:54.576 --> 00:11:56.026 A:middle
information, you can look up the

00:11:56.026 --> 00:11:56.996 A:middle
documentation for

00:11:56.996 --> 00:11:59.136 A:middle
statusUpdateNotifications on

00:11:59.136 --> 00:11:59.966 A:middle
developer.apple.com.

00:12:05.136 --> 00:12:06.486 A:middle
So, now that we've looked into

00:12:06.486 --> 00:12:07.376 A:middle
what Server-to-Server

00:12:07.376 --> 00:12:08.796 A:middle
Notifications are, and how you

00:12:08.796 --> 00:12:10.376 A:middle
can receive them, I'm very

00:12:10.376 --> 00:12:11.636 A:middle
excited to talk to you about the

00:12:11.636 --> 00:12:12.836 A:middle
new features and new

00:12:12.836 --> 00:12:14.366 A:middle
notification types we are

00:12:14.366 --> 00:12:15.616 A:middle
bringing to Server-to-Server

00:12:15.616 --> 00:12:16.426 A:middle
Notifications.

00:12:17.566 --> 00:12:19.156 A:middle
So, as we were thinking about

00:12:19.156 --> 00:12:20.356 A:middle
some new features we could add

00:12:20.356 --> 00:12:21.936 A:middle
to the notification, we were

00:12:21.936 --> 00:12:23.316 A:middle
taking a look at the receipt

00:12:23.316 --> 00:12:24.496 A:middle
fields currently in the

00:12:24.496 --> 00:12:26.596 A:middle
notification, latest receipt,

00:12:26.776 --> 00:12:27.916 A:middle
and latest receipt info.

00:12:28.726 --> 00:12:30.546 A:middle
We noticed that these receipts,

00:12:30.766 --> 00:12:32.186 A:middle
while useful, only give you

00:12:32.186 --> 00:12:34.056 A:middle
information about the latest

00:12:34.056 --> 00:12:34.806 A:middle
in-app purchase.

00:12:35.446 --> 00:12:36.736 A:middle
So, we were thinking how much

00:12:36.736 --> 00:12:38.446 A:middle
more useful it would be if we

00:12:38.446 --> 00:12:39.516 A:middle
could give you your entire

00:12:39.586 --> 00:12:41.186 A:middle
subscription history when we

00:12:41.236 --> 00:12:42.726 A:middle
send you the server-to-server

00:12:42.726 --> 00:12:43.466 A:middle
notification.

00:12:44.156 --> 00:12:46.136 A:middle
For this reason, we are bringing

00:12:46.136 --> 00:12:47.686 A:middle
the unified receipt to the

00:12:47.686 --> 00:12:48.976 A:middle
server-to-server notification.

00:12:49.516 --> 00:12:52.500 A:middle
[ Applause ]

00:12:56.376 --> 00:12:58.356 A:middle
So, as a review, the unified

00:12:58.356 --> 00:12:59.866 A:middle
receipt contains the history of

00:12:59.916 --> 00:13:01.426 A:middle
subscription purchases for your

00:12:59.916 --> 00:13:01.426 A:middle
subscription purchases for your

00:13:01.426 --> 00:13:02.066 A:middle
subscription.

00:13:02.646 --> 00:13:04.146 A:middle
Previously, this incredibly

00:13:04.146 --> 00:13:06.246 A:middle
valuable information could only

00:13:06.246 --> 00:13:07.266 A:middle
be obtained through hitting

00:13:07.266 --> 00:13:08.166 A:middle
verifyReceipt.

00:13:09.336 --> 00:13:10.796 A:middle
The two receipt fields in the

00:13:10.796 --> 00:13:12.306 A:middle
notification right now, latest

00:13:12.306 --> 00:13:13.956 A:middle
receipt, and latest receipt info

00:13:14.276 --> 00:13:16.026 A:middle
provide an encoded and decoded

00:13:16.026 --> 00:13:17.406 A:middle
transactional receipt about the

00:13:17.456 --> 00:13:18.456 A:middle
latest in-app purchase.

00:13:19.266 --> 00:13:20.466 A:middle
Starting in the fall, you'll

00:13:20.466 --> 00:13:22.266 A:middle
begin to see one new field in

00:13:22.266 --> 00:13:22.986 A:middle
the server-to-server

00:13:22.986 --> 00:13:23.756 A:middle
notification.

00:13:24.586 --> 00:13:25.826 A:middle
We have decided to call this

00:13:26.166 --> 00:13:27.846 A:middle
unified receipt, and it will

00:13:27.846 --> 00:13:29.646 A:middle
contain almost exactly what you

00:13:29.646 --> 00:13:31.016 A:middle
expect to get from verified

00:13:31.016 --> 00:13:31.376 A:middle
receipt.

00:13:31.966 --> 00:13:35.316 A:middle
With the addition of unified

00:13:35.316 --> 00:13:36.506 A:middle
receipt to the server-to-server

00:13:36.506 --> 00:13:38.476 A:middle
notification, in most cases,

00:13:38.476 --> 00:13:39.866 A:middle
this will make latest receipt

00:13:40.036 --> 00:13:41.586 A:middle
and latest receipt info no

00:13:41.586 --> 00:13:42.846 A:middle
longer needed.

00:13:43.496 --> 00:13:46.126 A:middle
However, there is one important

00:13:46.126 --> 00:13:47.656 A:middle
caveat we must call out here.

00:13:48.166 --> 00:13:49.196 A:middle
This receipt that we are

00:13:49.196 --> 00:13:51.346 A:middle
generating for you is not tied

00:13:51.496 --> 00:13:53.256 A:middle
to a specific install of an app

00:13:53.706 --> 00:13:55.586 A:middle
on a device, like the receipts

00:13:55.586 --> 00:13:57.196 A:middle
you are used to receiving as the

00:13:57.196 --> 00:13:57.926 A:middle
result of a buy.

00:13:58.646 --> 00:14:00.496 A:middle
For this reason, the receipt

00:13:58.646 --> 00:14:00.496 A:middle
For this reason, the receipt

00:14:00.496 --> 00:14:02.006 A:middle
should always be stored on your

00:14:02.006 --> 00:14:04.716 A:middle
server, and never locally on a

00:14:04.716 --> 00:14:05.086 A:middle
device.

00:14:05.906 --> 00:14:09.356 A:middle
So, with that out of the way,

00:14:09.446 --> 00:14:10.586 A:middle
let's take a look at what you

00:14:10.586 --> 00:14:11.726 A:middle
can expect to find in the

00:14:11.726 --> 00:14:13.056 A:middle
unified receipt in the

00:14:13.056 --> 00:14:14.496 A:middle
server-to-server notification.

00:14:15.426 --> 00:14:16.736 A:middle
The first field you will find in

00:14:16.836 --> 00:14:18.206 A:middle
this JSON object is the latest

00:14:18.206 --> 00:14:18.596 A:middle
receipt.

00:14:19.136 --> 00:14:20.566 A:middle
This is an encoded unified

00:14:20.566 --> 00:14:21.656 A:middle
receipt, which we have just

00:14:21.656 --> 00:14:23.226 A:middle
generated for you, and you can

00:14:23.226 --> 00:14:25.496 A:middle
use this to hit verified receipt

00:14:25.496 --> 00:14:26.786 A:middle
later, if you should need it.

00:14:27.866 --> 00:14:29.226 A:middle
You will also find the latest

00:14:29.226 --> 00:14:29.936 A:middle
receipt info.

00:14:30.676 --> 00:14:32.036 A:middle
This contains an array of

00:14:32.086 --> 00:14:33.616 A:middle
subscription purchases for your

00:14:33.616 --> 00:14:35.466 A:middle
subscription, with metadata

00:14:35.466 --> 00:14:36.826 A:middle
about them to help you track

00:14:36.926 --> 00:14:37.976 A:middle
what has been going on with your

00:14:37.976 --> 00:14:38.506 A:middle
subscriber.

00:14:39.706 --> 00:14:40.976 A:middle
You will also find the pending

00:14:40.976 --> 00:14:41.666 A:middle
renewal info.

00:14:42.146 --> 00:14:43.766 A:middle
This contains information about

00:14:43.766 --> 00:14:45.106 A:middle
the upcoming renewal for your

00:14:45.106 --> 00:14:46.976 A:middle
subscription, such as if the

00:14:46.976 --> 00:14:48.336 A:middle
customer is in a price increase

00:14:48.336 --> 00:14:49.776 A:middle
flow, or they have entered a

00:14:49.776 --> 00:14:50.846 A:middle
billing retry period.

00:14:50.846 --> 00:14:53.296 A:middle
We will also include the status

00:14:53.296 --> 00:14:54.556 A:middle
of the receipt, and the

00:14:54.556 --> 00:14:55.626 A:middle
environment the receipt was

00:14:55.626 --> 00:14:57.756 A:middle
produced in, either sandbox, or

00:14:57.756 --> 00:14:58.266 A:middle
production.

00:14:59.416 --> 00:15:00.906 A:middle
We chose to name the fields this

00:14:59.416 --> 00:15:00.906 A:middle
We chose to name the fields this

00:15:00.906 --> 00:15:02.236 A:middle
way because this mirrors what

00:15:02.236 --> 00:15:03.476 A:middle
you expect to receive from

00:15:03.476 --> 00:15:04.276 A:middle
verify receipt.

00:15:04.766 --> 00:15:06.526 A:middle
So, hopefully you can reuse your

00:15:06.526 --> 00:15:08.106 A:middle
parsing logic there to make the

00:15:08.106 --> 00:15:10.116 A:middle
transition easier here.

00:15:11.666 --> 00:15:14.196 A:middle
However, latest receipt info

00:15:14.196 --> 00:15:15.956 A:middle
will be limited to the 100

00:15:15.956 --> 00:15:17.296 A:middle
latest in-app purchases.

00:15:17.836 --> 00:15:18.936 A:middle
So, should you need more

00:15:18.936 --> 00:15:20.366 A:middle
information that this, you can

00:15:20.366 --> 00:15:22.286 A:middle
always hit verify receipt with

00:15:22.286 --> 00:15:24.006 A:middle
the provided encoded receipt.

00:15:25.436 --> 00:15:26.256 A:middle
So, let's look at the

00:15:26.256 --> 00:15:27.626 A:middle
notification types we currently

00:15:27.626 --> 00:15:27.886 A:middle
have.

00:15:28.446 --> 00:15:29.466 A:middle
There are currently four

00:15:29.466 --> 00:15:30.686 A:middle
existing notification types.

00:15:30.776 --> 00:15:32.516 A:middle
INITIAL BUY, INTERACTIVE

00:15:32.516 --> 00:15:34.046 A:middle
RENEWAL, DID CHANGE RENEWAL

00:15:34.046 --> 00:15:35.596 A:middle
PREFERENCES, and CANCEL.

00:15:35.906 --> 00:15:37.346 A:middle
And, we are adding four more.

00:15:38.386 --> 00:15:40.326 A:middle
DID CHANGE RENEWAL STATUS, DID

00:15:40.326 --> 00:15:43.196 A:middle
FAIL TO RENEW, DID RECOVER, and

00:15:43.196 --> 00:15:43.976 A:middle
PRICE INCREASE CONSENT.

00:15:44.516 --> 00:15:49.500 A:middle
[ Applause ]

00:15:52.226 --> 00:15:53.546 A:middle
Now, let's take a quick look at

00:15:53.546 --> 00:15:54.406 A:middle
each of those four new

00:15:54.406 --> 00:15:55.656 A:middle
notification types, so we can

00:15:55.656 --> 00:15:57.186 A:middle
get an idea of why they are

00:15:57.286 --> 00:15:57.526 A:middle
sent.

00:15:59.016 --> 00:16:00.796 A:middle
First, let's look at DID CHANGE

00:15:59.016 --> 00:16:00.796 A:middle
First, let's look at DID CHANGE

00:16:00.796 --> 00:16:01.506 A:middle
RENEWAL STATUS.

00:16:01.956 --> 00:16:03.056 A:middle
This is sent when the user

00:16:03.056 --> 00:16:05.106 A:middle
toggles auto-renew on or off.

00:16:05.776 --> 00:16:06.986 A:middle
You should actually be receiving

00:16:06.986 --> 00:16:08.606 A:middle
this notification right now, so

00:16:08.606 --> 00:16:09.436 A:middle
make sure that you're looking

00:16:09.436 --> 00:16:10.506 A:middle
for it if you are currently

00:16:10.506 --> 00:16:11.516 A:middle
using our Server-to-Server

00:16:11.516 --> 00:16:12.256 A:middle
Notifications.

00:16:12.866 --> 00:16:14.626 A:middle
We will soon be adding a

00:16:14.626 --> 00:16:15.906 A:middle
notification type called DID

00:16:15.906 --> 00:16:16.396 A:middle
FAIL TO RENEW.

00:16:16.396 --> 00:16:18.696 A:middle
We will send this to you when a

00:16:18.696 --> 00:16:20.436 A:middle
subscription fails auto-renew at

00:16:20.436 --> 00:16:21.876 A:middle
the first attempt to renew in a

00:16:21.876 --> 00:16:22.766 A:middle
subscription period.

00:16:22.766 --> 00:16:24.866 A:middle
You will start to see this

00:16:24.866 --> 00:16:26.206 A:middle
notification in the fall.

00:16:26.816 --> 00:16:29.656 A:middle
Hand-in-hand with DID FAIL TO

00:16:29.656 --> 00:16:31.006 A:middle
RENEW comes DID RECOVER.

00:16:31.686 --> 00:16:33.206 A:middle
DID RECOVER will be sent when we

00:16:33.206 --> 00:16:34.616 A:middle
recover billing of your

00:16:34.616 --> 00:16:36.386 A:middle
subscription during the billing

00:16:36.386 --> 00:16:37.326 A:middle
retry period.

00:16:37.896 --> 00:16:39.546 A:middle
This will also start to appear

00:16:39.546 --> 00:16:40.036 A:middle
in the fall.

00:16:40.576 --> 00:16:42.156 A:middle
Should you receive DID RECOVER,

00:16:42.406 --> 00:16:43.366 A:middle
you should have recently

00:16:43.366 --> 00:16:44.906 A:middle
received DID FAIL TO RENEW.

00:16:44.996 --> 00:16:46.416 A:middle
And, you can know that billing

00:16:46.416 --> 00:16:47.746 A:middle
of your subscription was

00:16:47.776 --> 00:16:48.726 A:middle
successfully recovered.

00:16:49.656 --> 00:16:50.906 A:middle
If you are currently using our

00:16:50.986 --> 00:16:52.366 A:middle
Server-to-Server Notifications,

00:16:52.836 --> 00:16:54.016 A:middle
you may notice that we will be

00:16:54.066 --> 00:16:55.536 A:middle
sending DID RECOVER when we

00:16:55.536 --> 00:16:57.116 A:middle
currently send our renewal

00:16:57.116 --> 00:16:58.066 A:middle
notification type.

00:16:58.596 --> 00:17:01.516 A:middle
The plan is for DID RECOVER to

00:16:58.596 --> 00:17:01.516 A:middle
The plan is for DID RECOVER to

00:17:01.516 --> 00:17:03.326 A:middle
eventually replace RENEWAL as it

00:17:03.436 --> 00:17:05.326 A:middle
is a bit more aptly named, but

00:17:05.326 --> 00:17:06.576 A:middle
for a period, when we start

00:17:06.576 --> 00:17:07.826 A:middle
sending DID RECOVER, we will

00:17:07.876 --> 00:17:09.856 A:middle
send you both DID RECOVER and

00:17:09.856 --> 00:17:11.536 A:middle
RENEWAL to give you time to

00:17:11.536 --> 00:17:14.726 A:middle
adjust to the change.

00:17:14.726 --> 00:17:16.116 A:middle
Finally, we're adding a fourth

00:17:16.116 --> 00:17:17.646 A:middle
notification type, PRICE

00:17:17.646 --> 00:17:18.435 A:middle
INCREASE CONSENT.

00:17:19.195 --> 00:17:20.796 A:middle
PRICE INCREASE CONSENT will be

00:17:20.796 --> 00:17:22.556 A:middle
sent to you when we detect that

00:17:22.556 --> 00:17:24.116 A:middle
one of your subscribers has

00:17:24.116 --> 00:17:25.566 A:middle
entered a price increase flow,

00:17:25.976 --> 00:17:27.476 A:middle
which requires their consent in

00:17:27.476 --> 00:17:28.656 A:middle
order for them to continue

00:17:28.656 --> 00:17:29.786 A:middle
renewing their subscription.

00:17:30.696 --> 00:17:32.296 A:middle
With this notification, comes a

00:17:32.296 --> 00:17:33.946 A:middle
new field in the JSON payload,

00:17:34.276 --> 00:17:35.656 A:middle
price increase effective date.

00:17:36.356 --> 00:17:37.966 A:middle
This is the date by which the

00:17:37.966 --> 00:17:39.606 A:middle
customer must agree to the price

00:17:39.606 --> 00:17:40.946 A:middle
increase in order for them to

00:17:40.946 --> 00:17:41.786 A:middle
continue renewing.

00:17:42.426 --> 00:17:43.856 A:middle
You may also expect to see this

00:17:43.856 --> 00:17:44.976 A:middle
notification in the fall.

00:17:49.656 --> 00:17:50.886 A:middle
So now that we've taken a look

00:17:51.066 --> 00:17:52.336 A:middle
into what's new in

00:17:52.376 --> 00:17:53.786 A:middle
Server-to-Server Notifications,

00:17:54.216 --> 00:17:55.506 A:middle
I'm really excited to talk to

00:17:55.506 --> 00:17:56.946 A:middle
you about how you can handle all

00:17:56.946 --> 00:17:58.336 A:middle
eight of our notification types

00:17:58.396 --> 00:18:00.216 A:middle
so you are getting the most out

00:17:58.396 --> 00:18:00.216 A:middle
so you are getting the most out

00:18:00.216 --> 00:18:01.816 A:middle
of each notification when you

00:18:01.816 --> 00:18:02.286 A:middle
receive it.

00:18:03.606 --> 00:18:05.796 A:middle
So, first, let's take a quick

00:18:05.856 --> 00:18:07.046 A:middle
overview of our existing

00:18:07.046 --> 00:18:07.926 A:middle
notification types.

00:18:08.626 --> 00:18:10.486 A:middle
INITIAL BUY, INTERACTIVE

00:18:10.486 --> 00:18:14.216 A:middle
RENEWAL, DID CHANGE RENEWAL

00:18:14.216 --> 00:18:15.846 A:middle
PREFERENCES, and CANCEL.

00:18:16.996 --> 00:18:18.136 A:middle
We're going to take a moment to

00:18:18.136 --> 00:18:19.776 A:middle
take a deep-dive into each of

00:18:19.776 --> 00:18:21.446 A:middle
these notification types, but

00:18:21.446 --> 00:18:23.466 A:middle
before we do that, I want you to

00:18:23.466 --> 00:18:26.646 A:middle
notice one trend up here on this

00:18:26.646 --> 00:18:26.896 A:middle
chart.

00:18:27.706 --> 00:18:30.096 A:middle
You'll notice that in the JSON

00:18:30.096 --> 00:18:31.456 A:middle
payload, we're asking you to

00:18:31.456 --> 00:18:32.356 A:middle
look for the original

00:18:32.356 --> 00:18:33.926 A:middle
transaction id for each

00:18:33.926 --> 00:18:34.826 A:middle
notification type.

00:18:35.636 --> 00:18:37.046 A:middle
This is because the original

00:18:37.046 --> 00:18:38.746 A:middle
transaction id is considered a

00:18:38.746 --> 00:18:40.316 A:middle
unique identifier for your

00:18:40.316 --> 00:18:40.946 A:middle
subscription.

00:18:41.336 --> 00:18:42.916 A:middle
And, keeping track of this will

00:18:42.916 --> 00:18:44.566 A:middle
help you to link subsequent

00:18:44.566 --> 00:18:45.986 A:middle
events back to the initial

00:18:45.986 --> 00:18:47.366 A:middle
purchase of your subscription.

00:18:47.966 --> 00:18:50.856 A:middle
Now, let's imagine for a moment

00:18:50.856 --> 00:18:51.906 A:middle
that you have a potential

00:18:51.906 --> 00:18:52.516 A:middle
subscriber.

00:18:53.096 --> 00:18:54.666 A:middle
Let's call him John, and he is

00:18:54.736 --> 00:18:56.226 A:middle
interested in purchasing your

00:18:56.226 --> 00:18:56.846 A:middle
subscription.

00:18:57.796 --> 00:18:58.906 A:middle
Let's take a walk through

00:18:58.906 --> 00:19:00.226 A:middle
decisions that John makes

00:18:58.906 --> 00:19:00.226 A:middle
decisions that John makes

00:19:00.506 --> 00:19:02.236 A:middle
concerning his subscription, and

00:19:02.236 --> 00:19:03.396 A:middle
what notifications you will

00:19:03.396 --> 00:19:03.966 A:middle
receive along the way.

00:19:09.536 --> 00:19:11.296 A:middle
So, the first notification type

00:19:11.426 --> 00:19:12.776 A:middle
you can expect to receive for a

00:19:12.776 --> 00:19:14.326 A:middle
subscription is the INITIAL BUY.

00:19:15.156 --> 00:19:16.836 A:middle
When John first purchases his

00:19:16.836 --> 00:19:18.116 A:middle
subscription, we will send you

00:19:18.116 --> 00:19:19.446 A:middle
an INITIAL BUY notification.

00:19:20.016 --> 00:19:21.106 A:middle
Upon receiving this

00:19:21.106 --> 00:19:23.796 A:middle
notification, you can update the

00:19:23.996 --> 00:19:25.246 A:middle
customer status to something

00:19:25.246 --> 00:19:27.136 A:middle
like "active" or "subscribed" on

00:19:27.136 --> 00:19:29.026 A:middle
your server, and provide service

00:19:29.026 --> 00:19:29.826 A:middle
for the newly purchased

00:19:29.826 --> 00:19:30.386 A:middle
subscription.

00:19:31.426 --> 00:19:33.336 A:middle
In this notification type, there

00:19:33.336 --> 00:19:34.646 A:middle
are four fields that I want you

00:19:34.646 --> 00:19:36.266 A:middle
to look for in the JSON payload.

00:19:37.216 --> 00:19:38.366 A:middle
The first of these is the

00:19:38.366 --> 00:19:39.116 A:middle
purchase date.

00:19:39.676 --> 00:19:40.746 A:middle
This is in milliseconds

00:19:40.946 --> 00:19:41.956 A:middle
since epoch, and it will

00:19:41.956 --> 00:19:43.676 A:middle
tell you the exact date and time

00:19:43.856 --> 00:19:45.206 A:middle
that your customer has purchased

00:19:45.206 --> 00:19:45.906 A:middle
your subscription.

00:19:46.946 --> 00:19:48.046 A:middle
You should next look for the

00:19:48.046 --> 00:19:49.366 A:middle
original transaction id.

00:19:49.796 --> 00:19:51.626 A:middle
As I mentioned, this is a unique

00:19:51.626 --> 00:19:52.836 A:middle
identifier for your

00:19:52.836 --> 00:19:54.556 A:middle
subscription, and keeping track

00:19:54.556 --> 00:19:56.086 A:middle
of this now will let you link

00:19:56.196 --> 00:19:57.926 A:middle
subsequent notifications back to

00:19:57.926 --> 00:20:00.166 A:middle
this initial buy.

00:19:57.926 --> 00:20:00.166 A:middle
this initial buy.

00:20:00.416 --> 00:20:01.536 A:middle
You should also check for the

00:20:01.536 --> 00:20:02.976 A:middle
web order line item id.

00:20:03.686 --> 00:20:05.256 A:middle
This is considered a unique

00:20:05.256 --> 00:20:06.926 A:middle
identifier for each subscription

00:20:06.926 --> 00:20:08.596 A:middle
period and should you need to

00:20:08.596 --> 00:20:10.036 A:middle
hit verify receipt after

00:20:10.036 --> 00:20:11.616 A:middle
receiving this notification, it

00:20:11.616 --> 00:20:13.536 A:middle
will link this notification to

00:20:13.536 --> 00:20:15.246 A:middle
an entry in the verifyReceipt

00:20:15.246 --> 00:20:15.436 A:middle
array.

00:20:16.856 --> 00:20:18.536 A:middle
Finally, you should look for the

00:20:18.606 --> 00:20:19.306 A:middle
product id.

00:20:19.916 --> 00:20:21.516 A:middle
The product id will tell you

00:20:21.516 --> 00:20:23.466 A:middle
exactly which product your new

00:20:23.466 --> 00:20:25.636 A:middle
customer has subscribed to.

00:20:26.416 --> 00:20:28.246 A:middle
So, after John has been using

00:20:28.246 --> 00:20:30.056 A:middle
his subscription for a while, he

00:20:30.056 --> 00:20:31.566 A:middle
decides that he wants to upgrade

00:20:31.566 --> 00:20:33.066 A:middle
his service to a higher tier.

00:20:33.956 --> 00:20:35.436 A:middle
We consider this a renewal in

00:20:35.436 --> 00:20:37.136 A:middle
the foreground, so we will send

00:20:37.136 --> 00:20:38.436 A:middle
you an INTERACTIVE RENEWAL

00:20:38.436 --> 00:20:40.166 A:middle
notification type.

00:20:40.756 --> 00:20:43.656 A:middle
Because an upgrade gives the

00:20:43.656 --> 00:20:45.656 A:middle
customer access to the higher

00:20:45.746 --> 00:20:47.396 A:middle
tier immediately, we will also

00:20:47.396 --> 00:20:49.146 A:middle
send you a CANCEL notification

00:20:49.146 --> 00:20:50.206 A:middle
type for the lower tier

00:20:50.206 --> 00:20:51.606 A:middle
subscription, which we have

00:20:51.606 --> 00:20:52.096 A:middle
canceled.

00:20:53.116 --> 00:20:54.936 A:middle
However, should a customer

00:20:54.936 --> 00:20:56.706 A:middle
resubscribe after churn, you

00:20:56.706 --> 00:20:58.646 A:middle
will receive only an INTERACTIVE

00:20:58.646 --> 00:21:00.056 A:middle
RENEWAL notification type.

00:20:58.646 --> 00:21:00.056 A:middle
RENEWAL notification type.

00:21:00.686 --> 00:21:03.406 A:middle
In this notification, there are

00:21:03.406 --> 00:21:04.926 A:middle
four more fields you should look

00:21:04.926 --> 00:21:06.346 A:middle
for in the JSON payload.

00:21:09.206 --> 00:21:10.416 A:middle
The first of these will be the

00:21:10.416 --> 00:21:11.106 A:middle
purchase date.

00:21:11.496 --> 00:21:12.906 A:middle
This will tell you the exact

00:21:13.016 --> 00:21:14.756 A:middle
date and time that your customer

00:21:15.176 --> 00:21:16.346 A:middle
either resubscribed to this

00:21:16.346 --> 00:21:17.806 A:middle
subscription or upgraded their

00:21:17.806 --> 00:21:18.236 A:middle
service.

00:21:19.486 --> 00:21:20.826 A:middle
You should again be checking for

00:21:20.826 --> 00:21:23.016 A:middle
the original transaction id to

00:21:23.016 --> 00:21:24.266 A:middle
link this back to the original

00:21:24.266 --> 00:21:27.596 A:middle
subscription, as well as the web

00:21:27.596 --> 00:21:28.796 A:middle
order line item id.

00:21:29.436 --> 00:21:30.976 A:middle
This is the unique identifier

00:21:30.976 --> 00:21:32.146 A:middle
for each subscription period,

00:21:32.146 --> 00:21:33.436 A:middle
and it will help you to link

00:21:33.436 --> 00:21:35.576 A:middle
this notification to an entry in

00:21:35.576 --> 00:21:36.666 A:middle
the verifyReceipt array.

00:21:38.266 --> 00:21:40.066 A:middle
Finally, check for the product

00:21:40.066 --> 00:21:40.266 A:middle
id.

00:21:40.806 --> 00:21:42.146 A:middle
This will tell you the exact

00:21:42.146 --> 00:21:43.826 A:middle
product that your customer has

00:21:43.826 --> 00:21:45.466 A:middle
re-subscribed to or upgraded

00:21:45.466 --> 00:21:46.096 A:middle
their service to.

00:21:46.096 --> 00:21:48.766 A:middle
A little later down the line,

00:21:49.056 --> 00:21:51.216 A:middle
John decides to downgrade his

00:21:51.246 --> 00:21:52.926 A:middle
subscription to a more basic

00:21:52.926 --> 00:21:53.216 A:middle
tier.

00:21:53.846 --> 00:21:55.736 A:middle
In this case, we send you a DID

00:21:55.736 --> 00:21:57.276 A:middle
CHANGE RENEWAL PREFERENCES

00:21:57.276 --> 00:21:58.216 A:middle
notification type.

00:21:59.036 --> 00:22:00.056 A:middle
Upon receiving this

00:21:59.036 --> 00:22:00.056 A:middle
Upon receiving this

00:22:00.056 --> 00:22:01.756 A:middle
notification, you can update the

00:22:01.756 --> 00:22:03.256 A:middle
customer's subscription status

00:22:03.356 --> 00:22:05.186 A:middle
on your server to a more basic

00:22:05.186 --> 00:22:05.366 A:middle
tier.

00:22:05.366 --> 00:22:08.016 A:middle
In this notification type, there

00:22:08.016 --> 00:22:09.766 A:middle
are two fields that I want you

00:22:09.766 --> 00:22:11.846 A:middle
to look out for.

00:22:12.046 --> 00:22:13.416 A:middle
The first of these is the auto

00:22:13.416 --> 00:22:14.506 A:middle
renew product id.

00:22:15.136 --> 00:22:16.766 A:middle
Because a subscription downgrade

00:22:16.766 --> 00:22:18.166 A:middle
does not take place until the

00:22:18.166 --> 00:22:19.846 A:middle
end of the subscription period,

00:22:20.376 --> 00:22:22.096 A:middle
this will tell you exactly which

00:22:22.096 --> 00:22:23.446 A:middle
product your customer will

00:22:23.446 --> 00:22:24.976 A:middle
auto-renew at when it comes time

00:22:24.976 --> 00:22:25.556 A:middle
for renewal.

00:22:26.136 --> 00:22:28.906 A:middle
You should again be checking for

00:22:28.906 --> 00:22:30.946 A:middle
the original transaction id to

00:22:30.946 --> 00:22:32.156 A:middle
link this notification back to

00:22:32.156 --> 00:22:32.976 A:middle
the original subscription.

00:22:38.086 --> 00:22:39.616 A:middle
Now, unfortunately, a little

00:22:39.616 --> 00:22:41.216 A:middle
later, John gets on the phone

00:22:41.216 --> 00:22:42.526 A:middle
with customer support and

00:22:42.526 --> 00:22:43.826 A:middle
decides to cancel his

00:22:43.826 --> 00:22:44.416 A:middle
subscription.

00:22:45.456 --> 00:22:46.896 A:middle
In this case, we will send you a

00:22:46.896 --> 00:22:48.586 A:middle
CANCEL notification type.

00:22:49.566 --> 00:22:51.036 A:middle
As I mentioned earlier, when a

00:22:51.036 --> 00:22:52.216 A:middle
customer upgrades their

00:22:52.216 --> 00:22:53.686 A:middle
subscription, you will also

00:22:53.686 --> 00:22:55.236 A:middle
receive a CANCEL plus an

00:22:55.236 --> 00:22:56.816 A:middle
INTERACTIVE RENEWAL, where the

00:22:56.816 --> 00:22:58.756 A:middle
CANCEL signifies the lower tier

00:22:58.756 --> 00:23:00.376 A:middle
subscription which was canceled.

00:22:58.756 --> 00:23:00.376 A:middle
subscription which was canceled.

00:23:01.656 --> 00:23:03.046 A:middle
In this notification type, I

00:23:03.046 --> 00:23:04.026 A:middle
want you to look for three

00:23:04.026 --> 00:23:04.346 A:middle
fields.

00:23:05.376 --> 00:23:07.236 A:middle
First, you should look for the

00:23:07.236 --> 00:23:08.126 A:middle
cancellation date.

00:23:08.446 --> 00:23:09.506 A:middle
This will tell you the exact

00:23:09.596 --> 00:23:11.176 A:middle
date and time that your customer

00:23:11.176 --> 00:23:12.426 A:middle
decided to cancel their

00:23:12.426 --> 00:23:13.006 A:middle
subscription.

00:23:14.246 --> 00:23:15.436 A:middle
You should still be looking for

00:23:15.436 --> 00:23:17.066 A:middle
the original transaction id to

00:23:17.066 --> 00:23:18.216 A:middle
link this back to the original

00:23:18.216 --> 00:23:21.126 A:middle
subscription purchase, as well

00:23:21.126 --> 00:23:22.356 A:middle
as the product id, to know

00:23:22.356 --> 00:23:24.046 A:middle
exactly which product your

00:23:24.046 --> 00:23:24.976 A:middle
customer has canceled.

00:23:30.516 --> 00:23:31.916 A:middle
So, now that we've looked at all

00:23:31.916 --> 00:23:33.166 A:middle
of our existing notification

00:23:33.166 --> 00:23:34.466 A:middle
types, let's give the same

00:23:34.466 --> 00:23:36.566 A:middle
treatment to the four new

00:23:36.566 --> 00:23:38.036 A:middle
notification types that I

00:23:38.036 --> 00:23:38.956 A:middle
introduced earlier.

00:23:40.036 --> 00:23:43.266 A:middle
These are DID CHANGE RENEWAL

00:23:43.266 --> 00:23:45.726 A:middle
STATUS, DID FAIL TO RENEW, DID

00:23:45.726 --> 00:23:47.666 A:middle
RECOVER, and PRICE INCREASE

00:23:47.666 --> 00:23:48.096 A:middle
CONSENT.

00:23:49.426 --> 00:23:50.906 A:middle
In these notification types, you

00:23:51.026 --> 00:23:52.316 A:middle
still want to be looking for the

00:23:52.316 --> 00:23:54.556 A:middle
original transaction id in each

00:23:54.606 --> 00:23:55.696 A:middle
of the JSON payloads.

00:23:56.716 --> 00:23:58.296 A:middle
As I mentioned earlier, this is

00:23:58.296 --> 00:23:59.586 A:middle
because it is a unique

00:23:59.586 --> 00:24:01.146 A:middle
identifier for your subscription

00:23:59.586 --> 00:24:01.146 A:middle
identifier for your subscription

00:24:01.146 --> 00:24:03.106 A:middle
and will help you to link all of

00:24:03.106 --> 00:24:04.486 A:middle
your notifications together.

00:24:05.896 --> 00:24:07.396 A:middle
Now, let's revisit John.

00:24:08.746 --> 00:24:10.166 A:middle
One day he is scrolling through

00:24:10.166 --> 00:24:11.686 A:middle
his managed subscriptions page,

00:24:11.886 --> 00:24:13.506 A:middle
and decides to turn auto-renew

00:24:13.506 --> 00:24:15.126 A:middle
back on for your subscription.

00:24:15.926 --> 00:24:17.596 A:middle
In this case, we will send you a

00:24:17.596 --> 00:24:19.136 A:middle
DID CHANGE RENEWAL STATUS

00:24:19.426 --> 00:24:20.296 A:middle
notification type.

00:24:21.256 --> 00:24:22.366 A:middle
You will also receive this

00:24:22.366 --> 00:24:24.146 A:middle
notification if a customer

00:24:24.146 --> 00:24:25.986 A:middle
decides to turn auto-renew off.

00:24:27.206 --> 00:24:28.116 A:middle
Upon receiving this

00:24:28.116 --> 00:24:30.456 A:middle
notification, you can update the

00:24:30.456 --> 00:24:32.196 A:middle
customer subscription status on

00:24:32.196 --> 00:24:34.476 A:middle
your end to reflect the changes.

00:24:35.766 --> 00:24:37.186 A:middle
You can optionally deploy

00:24:37.186 --> 00:24:39.086 A:middle
retention strategies to keep the

00:24:39.086 --> 00:24:40.396 A:middle
customer, if you see that they

00:24:40.396 --> 00:24:41.556 A:middle
have turned auto-renew off.

00:24:43.176 --> 00:24:44.586 A:middle
In this notification type, there

00:24:44.586 --> 00:24:46.096 A:middle
are four more fields that you

00:24:46.096 --> 00:24:47.376 A:middle
should look for and mark down.

00:24:48.416 --> 00:24:49.736 A:middle
The first of these is the auto

00:24:49.736 --> 00:24:51.066 A:middle
renew status change date.

00:24:51.516 --> 00:24:52.896 A:middle
This tells you the exact date

00:24:52.896 --> 00:24:54.376 A:middle
and time that your customer's

00:24:54.376 --> 00:24:55.606 A:middle
auto-renew status changed.

00:24:57.126 --> 00:24:58.316 A:middle
You should check for auto-renew

00:24:58.406 --> 00:24:58.816 A:middle
status.

00:24:59.386 --> 00:25:00.896 A:middle
This will tell you the direction

00:24:59.386 --> 00:25:00.896 A:middle
This will tell you the direction

00:25:00.946 --> 00:25:02.106 A:middle
of the auto-renew toggle.

00:25:02.736 --> 00:25:04.076 A:middle
Should you see the auto renew

00:25:04.076 --> 00:25:06.476 A:middle
status has a value of true, you

00:25:06.476 --> 00:25:07.866 A:middle
can know that your customer has

00:25:07.866 --> 00:25:10.436 A:middle
turned auto-renew back on, and

00:25:10.436 --> 00:25:12.446 A:middle
intends to continue buying your

00:25:12.446 --> 00:25:12.976 A:middle
subscription.

00:25:13.576 --> 00:25:15.986 A:middle
You should again be checking for

00:25:15.986 --> 00:25:17.846 A:middle
the original transaction id, to

00:25:17.846 --> 00:25:19.136 A:middle
link this back to the original

00:25:19.206 --> 00:25:21.736 A:middle
subscription purchase, as well

00:25:21.736 --> 00:25:23.166 A:middle
as the product id, to see

00:25:23.166 --> 00:25:24.396 A:middle
exactly which product your

00:25:24.436 --> 00:25:26.076 A:middle
customer has turned auto-renew

00:25:26.126 --> 00:25:26.976 A:middle
on or off for.

00:25:31.416 --> 00:25:33.376 A:middle
As we are trying to bill John

00:25:33.376 --> 00:25:34.546 A:middle
for his subscription during the

00:25:34.546 --> 00:25:36.126 A:middle
auto-renew period, we

00:25:36.126 --> 00:25:37.566 A:middle
unfortunately encounter a

00:25:37.566 --> 00:25:38.196 A:middle
billing error.

00:25:38.726 --> 00:25:40.176 A:middle
In this case, we will send you a

00:25:40.176 --> 00:25:41.856 A:middle
DID FAIL TO RENEW on our first

00:25:41.856 --> 00:25:43.506 A:middle
attempt to renew for that

00:25:43.506 --> 00:25:44.406 A:middle
subscription period.

00:25:45.326 --> 00:25:46.276 A:middle
Upon receiving this

00:25:46.276 --> 00:25:48.256 A:middle
notification, you can optionally

00:25:48.256 --> 00:25:50.066 A:middle
choose to suspend service for

00:25:50.066 --> 00:25:50.716 A:middle
your customer.

00:25:51.856 --> 00:25:53.446 A:middle
You can also update the customer

00:25:53.446 --> 00:25:54.796 A:middle
subscription status to something

00:25:54.796 --> 00:25:56.236 A:middle
like "active" or "billing

00:25:56.236 --> 00:25:58.126 A:middle
re-try," depending on the value

00:25:58.126 --> 00:25:59.296 A:middle
of the fields you see in the

00:25:59.296 --> 00:25:59.926 A:middle
JSON payload.

00:26:00.686 --> 00:26:01.666 A:middle
So now, let's take a look at

00:26:01.666 --> 00:26:01.966 A:middle
that.

00:26:02.696 --> 00:26:03.656 A:middle
The first field you should be

00:26:03.656 --> 00:26:05.366 A:middle
looking for here is is in

00:26:05.366 --> 00:26:06.746 A:middle
billing retry period.

00:26:07.346 --> 00:26:09.556 A:middle
This has a value of 0 or 1, and

00:26:09.556 --> 00:26:11.196 A:middle
will tell you if we are actively

00:26:11.196 --> 00:26:12.546 A:middle
trying to recover billing of

00:26:12.546 --> 00:26:13.666 A:middle
this subscription for you.

00:26:14.466 --> 00:26:15.676 A:middle
Should you see that this field

00:26:15.676 --> 00:26:17.696 A:middle
has a value of 1, you can know

00:26:17.696 --> 00:26:19.156 A:middle
that we are trying to recover

00:26:19.156 --> 00:26:20.676 A:middle
billing of your subscription in

00:26:20.676 --> 00:26:21.926 A:middle
the billing re-try period.

00:26:23.436 --> 00:26:24.866 A:middle
You should still be checking for

00:26:24.866 --> 00:26:26.936 A:middle
the original transaction id to

00:26:26.936 --> 00:26:28.096 A:middle
link this back to the original

00:26:28.096 --> 00:26:30.606 A:middle
subscription, as well as the

00:26:30.606 --> 00:26:31.446 A:middle
expires date.

00:26:31.856 --> 00:26:33.266 A:middle
This will tell you the exact

00:26:33.386 --> 00:26:35.476 A:middle
date and time that we attempted

00:26:35.476 --> 00:26:37.496 A:middle
to auto-renew your subscription,

00:26:37.636 --> 00:26:39.956 A:middle
and it failed.

00:26:40.146 --> 00:26:41.736 A:middle
Fortunately, during the billing

00:26:41.736 --> 00:26:44.166 A:middle
re-try period, the billing issue

00:26:44.166 --> 00:26:45.686 A:middle
with John's subscription was

00:26:45.686 --> 00:26:46.956 A:middle
resolved, and we are able to

00:26:46.956 --> 00:26:47.976 A:middle
recover billing of his

00:26:47.976 --> 00:26:48.566 A:middle
subscription.

00:26:49.116 --> 00:26:50.956 A:middle
In this case, we send you a DID

00:26:50.996 --> 00:26:52.606 A:middle
RECOVER notification type.

00:26:52.606 --> 00:26:55.906 A:middle
As a reminder, DID RECOVER is

00:26:55.906 --> 00:26:57.356 A:middle
replacing our RENEWAL

00:26:57.356 --> 00:26:58.746 A:middle
notification type, which we

00:26:58.746 --> 00:27:00.276 A:middle
currently send at this time.

00:26:58.746 --> 00:27:00.276 A:middle
currently send at this time.

00:27:01.656 --> 00:27:03.266 A:middle
Upon receiving this notification

00:27:03.266 --> 00:27:05.006 A:middle
type, you can restore service

00:27:05.206 --> 00:27:06.396 A:middle
for the recovered subscription,

00:27:06.396 --> 00:27:08.496 A:middle
and update your customer's

00:27:08.496 --> 00:27:09.896 A:middle
status to something like

00:27:09.896 --> 00:27:11.246 A:middle
"active" or "subscribed," or

00:27:11.246 --> 00:27:12.986 A:middle
whatever you use to denote an

00:27:13.056 --> 00:27:13.906 A:middle
active subscriber.

00:27:15.036 --> 00:27:16.706 A:middle
In this notification type, there

00:27:16.706 --> 00:27:17.906 A:middle
are a few more fields that I

00:27:17.906 --> 00:27:18.846 A:middle
want you to look for in the

00:27:18.886 --> 00:27:19.256 A:middle
payload.

00:27:20.656 --> 00:27:21.646 A:middle
You should first check for the

00:27:21.696 --> 00:27:22.416 A:middle
purchase date.

00:27:22.416 --> 00:27:24.276 A:middle
This will tell you exactly when

00:27:24.396 --> 00:27:25.926 A:middle
we were able to recover billing

00:27:25.926 --> 00:27:26.826 A:middle
of this subscription.

00:27:28.176 --> 00:27:29.626 A:middle
You should again check for the

00:27:29.626 --> 00:27:32.106 A:middle
original transaction id, as this

00:27:32.106 --> 00:27:33.876 A:middle
will tell you exactly which

00:27:33.876 --> 00:27:35.146 A:middle
subscription we recovered

00:27:35.146 --> 00:27:36.976 A:middle
billing for, as it is the unique

00:27:36.976 --> 00:27:38.616 A:middle
identifier for the subscription.

00:27:40.106 --> 00:27:41.826 A:middle
Finally, look for the expires

00:27:41.856 --> 00:27:42.196 A:middle
date.

00:27:42.576 --> 00:27:44.086 A:middle
This will tell you the date and

00:27:44.126 --> 00:27:45.906 A:middle
time that this new subscription

00:27:45.906 --> 00:27:47.106 A:middle
period will expire.

00:27:47.466 --> 00:27:48.326 A:middle
And, you can expect us to

00:27:48.326 --> 00:27:48.976 A:middle
attempt to auto-renew again.

00:27:54.016 --> 00:27:56.126 A:middle
Now, let's suppose that you, the

00:27:56.126 --> 00:27:57.946 A:middle
developer, decide to increase

00:27:57.976 --> 00:27:59.296 A:middle
the price of your subscription.

00:28:00.036 --> 00:28:01.076 A:middle
When we check for a price

00:28:01.076 --> 00:28:03.006 A:middle
increase for a subscription, 7

00:28:03.006 --> 00:28:04.066 A:middle
days before a weekly

00:28:04.066 --> 00:28:05.856 A:middle
subscription renewal, 10 days

00:28:05.896 --> 00:28:07.076 A:middle
before a monthly subscription

00:28:07.076 --> 00:28:09.126 A:middle
renewal, and 30 days before an

00:28:09.126 --> 00:28:10.936 A:middle
annual subscription renewal, and

00:28:10.936 --> 00:28:12.166 A:middle
we see that you wish to raise

00:28:12.166 --> 00:28:14.006 A:middle
the price, we will send you a

00:28:14.106 --> 00:28:15.306 A:middle
PRICE INCREASE CONSENT

00:28:15.626 --> 00:28:17.606 A:middle
notification for your customer.

00:28:18.786 --> 00:28:19.766 A:middle
Upon receiving this

00:28:19.766 --> 00:28:21.446 A:middle
notification, you can update the

00:28:21.446 --> 00:28:23.146 A:middle
user status on your end to

00:28:23.146 --> 00:28:24.466 A:middle
something like "price increase."

00:28:25.316 --> 00:28:27.056 A:middle
And, optionally, you can deploy

00:28:27.056 --> 00:28:28.656 A:middle
in-app messaging to prompt your

00:28:28.656 --> 00:28:30.166 A:middle
customer to consent to the price

00:28:30.166 --> 00:28:30.556 A:middle
increase.

00:28:31.726 --> 00:28:34.116 A:middle
Note that we will also email and

00:28:34.116 --> 00:28:35.526 A:middle
send push notifications to the

00:28:35.526 --> 00:28:36.926 A:middle
customer to prompt them to

00:28:36.926 --> 00:28:38.176 A:middle
consent to this price increase.

00:28:38.816 --> 00:28:41.596 A:middle
In this notification type, there

00:28:41.596 --> 00:28:42.576 A:middle
are a few more fields that I

00:28:42.576 --> 00:28:43.266 A:middle
want you to look for.

00:28:44.196 --> 00:28:45.296 A:middle
First, you should look for the

00:28:45.336 --> 00:28:46.516 A:middle
price consent status.

00:28:46.896 --> 00:28:47.936 A:middle
This will tell you if your

00:28:47.936 --> 00:28:50.046 A:middle
customer has already consented

00:28:50.046 --> 00:28:51.186 A:middle
to your price increase.

00:28:51.846 --> 00:28:53.636 A:middle
However, because we are sending

00:28:53.636 --> 00:28:55.816 A:middle
this notification to you, almost

00:28:55.816 --> 00:28:57.546 A:middle
as soon as we detect the price

00:28:57.546 --> 00:28:59.246 A:middle
increase, you should expect in

00:28:59.246 --> 00:29:00.816 A:middle
most cases that this value will

00:28:59.246 --> 00:29:00.816 A:middle
most cases that this value will

00:29:00.816 --> 00:29:02.766 A:middle
be 0, or that the customer has

00:29:02.766 --> 00:29:03.586 A:middle
not yet consented.

00:29:03.586 --> 00:29:06.606 A:middle
You should again be checking for

00:29:06.656 --> 00:29:08.866 A:middle
the original transaction id to

00:29:08.866 --> 00:29:10.716 A:middle
link this notification back to

00:29:10.716 --> 00:29:11.776 A:middle
the original subscription.

00:29:12.796 --> 00:29:14.336 A:middle
Finally, I want you to look for

00:29:14.336 --> 00:29:15.226 A:middle
the expires date.

00:29:15.746 --> 00:29:17.286 A:middle
This will tell you the date and

00:29:17.356 --> 00:29:18.666 A:middle
time that this subscription

00:29:18.666 --> 00:29:19.866 A:middle
period will expire.

00:29:20.406 --> 00:29:22.346 A:middle
And, by that time, your customer

00:29:22.516 --> 00:29:24.316 A:middle
will have had to consented to

00:29:24.316 --> 00:29:24.976 A:middle
the price increase.

00:29:29.536 --> 00:29:31.136 A:middle
So, now that we've taken a look

00:29:31.136 --> 00:29:32.036 A:middle
at what's new to

00:29:32.036 --> 00:29:33.446 A:middle
Server-to-Server Notifications,

00:29:33.676 --> 00:29:34.956 A:middle
and what you can do to handle

00:29:34.956 --> 00:29:36.526 A:middle
these notifications, when you

00:29:36.526 --> 00:29:38.286 A:middle
receive them, I'm going to

00:29:38.286 --> 00:29:40.396 A:middle
invite Manjeet Chawla onstage to

00:29:40.396 --> 00:29:41.856 A:middle
talk to you about subscription

00:29:41.856 --> 00:29:42.976 A:middle
lifecycle, and reducing churn.

00:29:43.516 --> 00:29:49.500 A:middle
[ Applause ]

00:29:54.946 --> 00:29:55.406 A:middle
&gt;&gt; Good morning.

00:29:56.056 --> 00:29:57.836 A:middle
My name is Manjeet Chawla, and

00:29:57.836 --> 00:29:59.246 A:middle
I'm on the App Store commerce

00:29:59.356 --> 00:29:59.516 A:middle
scene.

00:30:00.626 --> 00:30:02.146 A:middle
I'm really excited to be here

00:30:02.146 --> 00:30:03.756 A:middle
today, and talk to you guys

00:30:03.846 --> 00:30:06.586 A:middle
about how you can use the new

00:30:06.586 --> 00:30:08.476 A:middle
and improved Server-to-Server

00:30:08.476 --> 00:30:11.046 A:middle
Notifications to identify

00:30:11.046 --> 00:30:13.416 A:middle
billing events through a

00:30:13.576 --> 00:30:16.236 A:middle
subscription lifecycle that may

00:30:16.236 --> 00:30:17.666 A:middle
impact your customer's

00:30:17.666 --> 00:30:18.596 A:middle
subscription status.

00:30:20.156 --> 00:30:21.866 A:middle
So, what does the lifecycle of a

00:30:21.866 --> 00:30:25.146 A:middle
subscription look like?

00:30:25.416 --> 00:30:27.616 A:middle
Now, you may start acquiring new

00:30:27.616 --> 00:30:29.306 A:middle
customers by offering them a

00:30:29.306 --> 00:30:31.396 A:middle
free trial, or an introductory

00:30:31.396 --> 00:30:33.536 A:middle
price to attract them to your

00:30:33.536 --> 00:30:35.526 A:middle
service, and let the users try

00:30:35.526 --> 00:30:36.656 A:middle
your service before paying the

00:30:36.656 --> 00:30:36.976 A:middle
full price.

00:30:40.646 --> 00:30:42.806 A:middle
Next, you keep them engaged to

00:30:42.806 --> 00:30:44.516 A:middle
your service by providing them

00:30:44.516 --> 00:30:45.996 A:middle
constant updates to your

00:30:45.996 --> 00:30:46.466 A:middle
content.

00:30:46.996 --> 00:30:51.626 A:middle
And, finally, you try to retain

00:30:51.626 --> 00:30:54.496 A:middle
them as active subscribers by

00:30:54.496 --> 00:30:54.976 A:middle
minimizing churn.

00:30:59.166 --> 00:31:01.426 A:middle
Now, we all know that during

00:30:59.166 --> 00:31:01.426 A:middle
Now, we all know that during

00:31:01.426 --> 00:31:03.476 A:middle
this lifecycle, there's a number

00:31:03.476 --> 00:31:05.116 A:middle
of different billing events that

00:31:05.116 --> 00:31:06.416 A:middle
can occur for most of your

00:31:06.416 --> 00:31:07.116 A:middle
subscribers.

00:31:07.716 --> 00:31:11.236 A:middle
And, today, you're probably

00:31:11.236 --> 00:31:12.586 A:middle
calling the verifyReceipt

00:31:12.586 --> 00:31:14.396 A:middle
endpoint for all your

00:31:14.396 --> 00:31:16.996 A:middle
subscribers to get these billing

00:31:16.996 --> 00:31:17.716 A:middle
event changes.

00:31:18.336 --> 00:31:20.716 A:middle
Now, we know that this is not

00:31:20.716 --> 00:31:22.566 A:middle
efficient, and can be costly

00:31:22.566 --> 00:31:25.256 A:middle
over time, as your subscription

00:31:25.256 --> 00:31:26.016 A:middle
business grows.

00:31:26.506 --> 00:31:28.696 A:middle
But, the improvements that we

00:31:28.696 --> 00:31:30.746 A:middle
saw earlier to Server-to-Server

00:31:30.746 --> 00:31:32.456 A:middle
Notifications, you no longer

00:31:32.456 --> 00:31:35.256 A:middle
have to rely on the receipts to

00:31:35.256 --> 00:31:36.906 A:middle
reflect these billing event

00:31:36.906 --> 00:31:37.336 A:middle
changes.

00:31:38.566 --> 00:31:40.076 A:middle
So, let's talk more about how

00:31:40.076 --> 00:31:41.356 A:middle
you can use the new

00:31:41.356 --> 00:31:42.936 A:middle
Server-to-Server Notifications

00:31:43.456 --> 00:31:45.146 A:middle
to detect these billing events,

00:31:45.906 --> 00:31:47.226 A:middle
and build the best subscription

00:31:47.226 --> 00:31:48.736 A:middle
experience for your customers.

00:31:49.286 --> 00:31:53.136 A:middle
So, let's start with the initial

00:31:53.136 --> 00:31:54.476 A:middle
purchase of a subscription.

00:31:55.256 --> 00:31:56.886 A:middle
Now, we all know that this

00:31:57.186 --> 00:31:59.386 A:middle
initial purchase unlocks content

00:31:59.976 --> 00:32:03.886 A:middle
over a set period of time.

00:31:59.976 --> 00:32:03.886 A:middle
over a set period of time.

00:32:04.076 --> 00:32:05.236 A:middle
When the customer purchases

00:32:05.236 --> 00:32:06.976 A:middle
their subscription in your app,

00:32:07.646 --> 00:32:09.336 A:middle
you will receive a transaction

00:32:09.336 --> 00:32:11.396 A:middle
through StoreKit on the device,

00:32:12.366 --> 00:32:13.916 A:middle
and a receipt associated to that

00:32:13.916 --> 00:32:14.496 A:middle
transaction.

00:32:15.096 --> 00:32:19.056 A:middle
At the same time, you'll receive

00:32:20.076 --> 00:32:21.916 A:middle
a new notification called

00:32:21.916 --> 00:32:23.956 A:middle
INITIAL BUY for this newly

00:32:23.956 --> 00:32:25.046 A:middle
purchased subscription.

00:32:25.696 --> 00:32:27.916 A:middle
Using this notification, you can

00:32:27.916 --> 00:32:30.146 A:middle
identify a newly purchased

00:32:30.176 --> 00:32:31.576 A:middle
subscriber that has never

00:32:31.576 --> 00:32:32.666 A:middle
purchased your subscription

00:32:32.666 --> 00:32:33.066 A:middle
before.

00:32:35.816 --> 00:32:37.976 A:middle
Now, you hang onto that initial

00:32:37.976 --> 00:32:40.276 A:middle
buy notification JSON, and at

00:32:40.276 --> 00:32:41.926 A:middle
the same time, you send your

00:32:41.926 --> 00:32:44.336 A:middle
receipt from the device to your

00:32:44.336 --> 00:32:46.056 A:middle
server over a secure connection.

00:32:46.376 --> 00:32:47.756 A:middle
And then, to the verifyReceipt

00:32:47.756 --> 00:32:49.266 A:middle
endpoint to validate the

00:32:49.266 --> 00:32:49.976 A:middle
contents of the receipt.

00:32:54.046 --> 00:32:55.296 A:middle
In the response that you get

00:32:55.296 --> 00:32:57.146 A:middle
back from the App Store, you

00:32:57.146 --> 00:32:59.426 A:middle
then check for the contents of

00:32:59.426 --> 00:33:01.836 A:middle
the JSON, and you update your

00:32:59.426 --> 00:33:01.836 A:middle
the JSON, and you update your

00:33:01.836 --> 00:33:04.246 A:middle
user database by looking for

00:33:04.246 --> 00:33:05.896 A:middle
information for the latest

00:33:05.896 --> 00:33:07.966 A:middle
purchase that the user made.

00:33:09.116 --> 00:33:11.316 A:middle
Finally, that notification that

00:33:11.316 --> 00:33:13.166 A:middle
you stored previously, you can

00:33:13.166 --> 00:33:15.256 A:middle
link the response that you got

00:33:15.366 --> 00:33:16.856 A:middle
from the App Store through this

00:33:16.856 --> 00:33:19.176 A:middle
verifyReceipt, and link that to

00:33:19.176 --> 00:33:21.506 A:middle
the initial buy notification by

00:33:21.506 --> 00:33:23.466 A:middle
using original transaction id,

00:33:23.896 --> 00:33:24.976 A:middle
and the web order line item id.

00:33:31.126 --> 00:33:32.706 A:middle
Now, when the subscription is

00:33:32.706 --> 00:33:34.846 A:middle
ready for renewal, the App Store

00:33:34.846 --> 00:33:36.126 A:middle
will automatically renew the

00:33:36.126 --> 00:33:37.436 A:middle
subscription for you in the

00:33:37.436 --> 00:33:37.976 A:middle
background.

00:33:39.086 --> 00:33:40.336 A:middle
And, the next time the user

00:33:40.336 --> 00:33:41.666 A:middle
launches their app on the

00:33:41.666 --> 00:33:44.216 A:middle
device, you'll receive a new

00:33:44.216 --> 00:33:45.646 A:middle
transaction, and a receipt

00:33:46.036 --> 00:33:47.636 A:middle
associated to that transaction.

00:33:48.236 --> 00:33:52.916 A:middle
You, again, base64-encode that

00:33:52.916 --> 00:33:55.146 A:middle
receipt, and send that securely

00:33:55.146 --> 00:33:56.106 A:middle
to your server.

00:33:56.636 --> 00:33:59.736 A:middle
And, let's say your user is

00:33:59.736 --> 00:34:01.426 A:middle
consuming their service on a

00:33:59.736 --> 00:34:01.426 A:middle
consuming their service on a

00:34:01.426 --> 00:34:02.546 A:middle
different platform, and you

00:34:02.546 --> 00:34:04.376 A:middle
don't want to rely on the user

00:34:04.376 --> 00:34:06.386 A:middle
launching the app to detect this

00:34:06.386 --> 00:34:06.816 A:middle
renewal.

00:34:07.416 --> 00:34:09.746 A:middle
You can also use the receipt

00:34:09.746 --> 00:34:11.266 A:middle
data that you stored previously

00:34:11.266 --> 00:34:13.266 A:middle
from the initial purchase, and

00:34:13.295 --> 00:34:13.976 A:middle
send that to your server.

00:34:20.096 --> 00:34:21.585 A:middle
Next, you send that to the

00:34:21.585 --> 00:34:23.376 A:middle
verifyReceipt endpoint, and

00:34:23.376 --> 00:34:24.606 A:middle
check for the renewal

00:34:24.606 --> 00:34:26.076 A:middle
transaction in the JSON

00:34:26.076 --> 00:34:26.525 A:middle
response.

00:34:27.156 --> 00:34:29.846 A:middle
In the response, you can

00:34:29.846 --> 00:34:31.806 A:middle
validate the latest renewal for

00:34:31.806 --> 00:34:33.525 A:middle
that user, and you update the

00:34:33.525 --> 00:34:35.536 A:middle
latest expires date, based on

00:34:35.536 --> 00:34:36.545 A:middle
that subscription.

00:34:37.096 --> 00:34:40.916 A:middle
And, finally, you keep service

00:34:40.916 --> 00:34:42.266 A:middle
on for the customer as the

00:34:42.266 --> 00:34:43.396 A:middle
subscription successfully

00:34:43.565 --> 00:34:43.896 A:middle
renewed.

00:34:44.446 --> 00:34:47.626 A:middle
Note that for this event, there

00:34:47.626 --> 00:34:48.786 A:middle
is no server-to-server

00:34:48.786 --> 00:34:49.426 A:middle
notification.

00:34:49.856 --> 00:34:51.326 A:middle
So you have to call

00:34:51.326 --> 00:34:53.726 A:middle
verifyReceipt based on the

00:34:53.726 --> 00:34:55.025 A:middle
information that you have from

00:34:55.025 --> 00:34:57.566 A:middle
the initial purchase to check

00:34:57.626 --> 00:34:58.726 A:middle
for the renewal transaction.

00:35:01.796 --> 00:35:03.256 A:middle
Now, let's say that the customer

00:35:03.256 --> 00:35:04.916 A:middle
has been loving your service,

00:35:04.916 --> 00:35:07.176 A:middle
and they enjoy their basic

00:35:07.436 --> 00:35:08.776 A:middle
subscription service, and they

00:35:08.776 --> 00:35:10.976 A:middle
decide to upgrade your service

00:35:11.016 --> 00:35:12.556 A:middle
to your premium product, maybe a

00:35:12.556 --> 00:35:15.766 A:middle
higher tier of service.

00:35:15.916 --> 00:35:17.636 A:middle
Now, for this upgrade, you'll

00:35:17.636 --> 00:35:19.736 A:middle
receive a CANCEL notification

00:35:20.156 --> 00:35:21.366 A:middle
from the App Store on your

00:35:21.366 --> 00:35:21.786 A:middle
server.

00:35:22.326 --> 00:35:27.146 A:middle
And, in the content of the JSON,

00:35:27.596 --> 00:35:28.746 A:middle
there will be a cancellation

00:35:28.746 --> 00:35:31.226 A:middle
date notifying you that the App

00:35:31.226 --> 00:35:33.146 A:middle
Store has canceled the previous

00:35:33.146 --> 00:35:34.396 A:middle
subscription for the user.

00:35:34.866 --> 00:35:39.536 A:middle
Followed by the CANCEL, you'll

00:35:39.536 --> 00:35:41.336 A:middle
also receive an INTERACTIVE

00:35:41.336 --> 00:35:42.656 A:middle
RENEWAL notification on your

00:35:42.656 --> 00:35:43.046 A:middle
server.

00:35:43.546 --> 00:35:47.316 A:middle
Use this notification to update

00:35:47.316 --> 00:35:50.156 A:middle
your users' database with the

00:35:50.396 --> 00:35:51.426 A:middle
date of the upgrade.

00:35:51.726 --> 00:35:53.096 A:middle
So, now you know that this user

00:35:53.096 --> 00:35:55.596 A:middle
has upgraded their subscription

00:35:55.836 --> 00:35:57.526 A:middle
to a higher tier service, or a

00:35:57.526 --> 00:35:57.976 A:middle
premium product.

00:36:02.636 --> 00:36:04.946 A:middle
And, finally, you unlock the

00:36:04.946 --> 00:36:06.786 A:middle
premium content for the user in

00:36:06.786 --> 00:36:06.976 A:middle
the app.

00:36:11.806 --> 00:36:15.016 A:middle
Now, at some point, the customer

00:36:15.016 --> 00:36:16.856 A:middle
decides that this content isn't

00:36:16.856 --> 00:36:18.546 A:middle
right for them, and they want to

00:36:18.546 --> 00:36:19.636 A:middle
cancel their subscription.

00:36:20.656 --> 00:36:22.056 A:middle
They do this by turning off

00:36:22.336 --> 00:36:24.536 A:middle
auto-renew inside Manage

00:36:24.576 --> 00:36:27.206 A:middle
Subscription settings on the

00:36:28.256 --> 00:36:28.416 A:middle
device.

00:36:28.566 --> 00:36:31.246 A:middle
Now, today, you might be relying

00:36:31.326 --> 00:36:33.886 A:middle
on the receipt to reflect the

00:36:33.886 --> 00:36:34.966 A:middle
latest renewal status.

00:36:36.136 --> 00:36:37.446 A:middle
You may even be calling

00:36:37.446 --> 00:36:39.006 A:middle
verifyReceipt for all your

00:36:39.006 --> 00:36:40.656 A:middle
customers, just to get the

00:36:40.656 --> 00:36:42.376 A:middle
renewal status of their latest

00:36:42.376 --> 00:36:42.916 A:middle
subscription.

00:36:43.486 --> 00:36:46.696 A:middle
Now, we talked about this

00:36:46.696 --> 00:36:47.236 A:middle
earlier.

00:36:47.576 --> 00:36:49.066 A:middle
Tori mentioned the new

00:36:49.066 --> 00:36:51.476 A:middle
notification, by using that you

00:36:51.476 --> 00:36:53.296 A:middle
no longer have to rely on

00:36:53.296 --> 00:36:55.106 A:middle
verifyReceipt for that renewal

00:36:55.166 --> 00:36:55.866 A:middle
status change.

00:36:56.426 --> 00:36:59.496 A:middle
And now, you get the DID CHANGE

00:36:59.496 --> 00:37:01.936 A:middle
RENEWAL STATUS notification any

00:36:59.496 --> 00:37:01.936 A:middle
RENEWAL STATUS notification any

00:37:01.936 --> 00:37:03.896 A:middle
time a user turns off or on

00:37:04.166 --> 00:37:05.826 A:middle
their auto-renew status from the

00:37:05.826 --> 00:37:06.966 A:middle
Manage Subscriptions settings.

00:37:12.106 --> 00:37:14.396 A:middle
You use this event to update the

00:37:14.396 --> 00:37:16.196 A:middle
renewal status of the

00:37:16.196 --> 00:37:17.766 A:middle
subscription to false, because

00:37:17.766 --> 00:37:19.246 A:middle
in this case the user turned off

00:37:19.386 --> 00:37:19.946 A:middle
auto-renew.

00:37:20.486 --> 00:37:22.876 A:middle
And, you update their

00:37:22.876 --> 00:37:24.566 A:middle
subscription status.

00:37:25.476 --> 00:37:27.886 A:middle
Now, let's say that you don't

00:37:27.886 --> 00:37:29.676 A:middle
receive any other notifications

00:37:29.676 --> 00:37:31.836 A:middle
for this user until the end of

00:37:31.836 --> 00:37:32.806 A:middle
their subscription period.

00:37:34.196 --> 00:37:36.366 A:middle
You can safely assume that their

00:37:36.616 --> 00:37:38.036 A:middle
subscription has now churned at

00:37:38.586 --> 00:37:39.676 A:middle
the end of their current

00:37:39.676 --> 00:37:41.046 A:middle
subscription period.

00:37:43.016 --> 00:37:44.246 A:middle
So, you can update the

00:37:44.246 --> 00:37:45.846 A:middle
subscription status for your

00:37:45.846 --> 00:37:51.516 A:middle
user as "inactive" or "churned."

00:37:51.676 --> 00:37:54.396 A:middle
Now, over time, as your

00:37:54.396 --> 00:37:56.526 A:middle
subscribers will churn out, you

00:37:56.526 --> 00:37:58.166 A:middle
want to try and win them back by

00:37:58.166 --> 00:38:00.266 A:middle
giving them an attractive offer,

00:37:58.166 --> 00:38:00.266 A:middle
giving them an attractive offer,

00:38:00.616 --> 00:38:02.586 A:middle
either a discounted price, or

00:38:02.586 --> 00:38:06.146 A:middle
maybe even a free trial.

00:38:06.266 --> 00:38:07.336 A:middle
We launched a new feature

00:38:07.336 --> 00:38:09.186 A:middle
recently called Subscription

00:38:09.186 --> 00:38:11.226 A:middle
Offers that allows you to give

00:38:11.386 --> 00:38:13.386 A:middle
that discounted price, or a free

00:38:13.386 --> 00:38:15.506 A:middle
trial, to keep existing

00:38:15.506 --> 00:38:16.936 A:middle
subscribers, or win back

00:38:17.466 --> 00:38:18.966 A:middle
previously churned subscribers.

00:38:20.306 --> 00:38:21.236 A:middle
We have a session on

00:38:21.236 --> 00:38:22.706 A:middle
Subscription Offers later today,

00:38:22.816 --> 00:38:23.886 A:middle
where my colleagues will go

00:38:23.886 --> 00:38:25.626 A:middle
through best practices in

00:38:25.626 --> 00:38:26.646 A:middle
implementing subscription

00:38:26.646 --> 00:38:27.006 A:middle
offers.

00:38:27.596 --> 00:38:29.366 A:middle
And, the different use cases on

00:38:29.366 --> 00:38:30.616 A:middle
how you can use subscription

00:38:30.616 --> 00:38:31.756 A:middle
offers to improve your retention

00:38:31.756 --> 00:38:31.976 A:middle
numbers.

00:38:37.066 --> 00:38:37.986 A:middle
Now, let's take a look at a

00:38:37.986 --> 00:38:39.026 A:middle
slightly different case, where

00:38:39.026 --> 00:38:40.496 A:middle
the user had no intention to

00:38:40.496 --> 00:38:42.336 A:middle
cancel your subscription, but

00:38:42.336 --> 00:38:44.766 A:middle
the App Store was unable to

00:38:44.766 --> 00:38:46.096 A:middle
recover or renew the

00:38:46.096 --> 00:38:47.216 A:middle
subscription on the user's

00:38:47.246 --> 00:38:47.536 A:middle
behalf.

00:38:48.966 --> 00:38:50.356 A:middle
Maybe the user's credit card was

00:38:50.356 --> 00:38:52.176 A:middle
invalid, or maybe they did not

00:38:52.176 --> 00:38:53.636 A:middle
have sufficient funds in their

00:38:53.636 --> 00:38:54.026 A:middle
account.

00:38:54.606 --> 00:38:58.246 A:middle
For this event, the App Store

00:38:58.246 --> 00:39:00.346 A:middle
will now send you a DID FAIL TO

00:38:58.246 --> 00:39:00.346 A:middle
will now send you a DID FAIL TO

00:39:00.346 --> 00:39:01.326 A:middle
RENEW notification.

00:39:02.366 --> 00:39:04.736 A:middle
Using this notification, you

00:39:04.736 --> 00:39:05.886 A:middle
know that the user's

00:39:05.886 --> 00:39:07.966 A:middle
subscription failed to renew due

00:39:08.126 --> 00:39:09.126 A:middle
to a billing issue.

00:39:10.226 --> 00:39:11.446 A:middle
And, you can update your

00:39:11.646 --> 00:39:13.026 A:middle
subscription status for that

00:39:13.026 --> 00:39:15.056 A:middle
customer to "inactive" or

00:39:15.916 --> 00:39:16.046 A:middle
"churned."

00:39:17.616 --> 00:39:20.106 A:middle
You use this notification to

00:39:20.106 --> 00:39:21.676 A:middle
show them a message inside the

00:39:21.676 --> 00:39:22.916 A:middle
app, letting them know that

00:39:22.916 --> 00:39:23.976 A:middle
their subscription has expired.

00:39:28.256 --> 00:39:30.186 A:middle
Now, for billing-related issues,

00:39:31.116 --> 00:39:32.486 A:middle
the App Store automatically

00:39:32.486 --> 00:39:34.886 A:middle
makes several attempts to renew

00:39:34.886 --> 00:39:36.206 A:middle
the user's subscription over

00:39:36.206 --> 00:39:36.506 A:middle
time.

00:39:37.626 --> 00:39:39.546 A:middle
If an attempt succeeds, and if

00:39:39.546 --> 00:39:40.856 A:middle
you're able to charge the

00:39:40.856 --> 00:39:42.446 A:middle
customer for that subscription,

00:39:43.656 --> 00:39:45.266 A:middle
you'll now receive a DID RECOVER

00:39:45.266 --> 00:39:45.976 A:middle
notification.

00:39:46.626 --> 00:39:48.996 A:middle
So, using this notification, you

00:39:48.996 --> 00:39:50.446 A:middle
update the user database for

00:39:50.446 --> 00:39:52.896 A:middle
that customer to "subscribed,"

00:39:54.086 --> 00:39:55.826 A:middle
and you note the new expires

00:39:55.896 --> 00:39:57.966 A:middle
date for that newly renewed

00:40:00.606 --> 00:40:00.946 A:middle
subscription.

00:40:01.126 --> 00:40:02.566 A:middle
And, you re-enable service for

00:40:02.566 --> 00:40:02.976 A:middle
that customer.

00:40:08.096 --> 00:40:09.426 A:middle
So, now we saw in the last

00:40:09.426 --> 00:40:11.066 A:middle
example, that the App Store

00:40:11.066 --> 00:40:13.276 A:middle
makes several attempts to renew

00:40:13.276 --> 00:40:14.766 A:middle
subscriptions over a period of

00:40:14.766 --> 00:40:15.046 A:middle
time.

00:40:15.966 --> 00:40:17.626 A:middle
Now, this happens automatically

00:40:18.266 --> 00:40:21.576 A:middle
for you, but how can you as a

00:40:21.576 --> 00:40:24.176 A:middle
developer respond to these

00:40:24.286 --> 00:40:26.486 A:middle
attempts, and what can you do on

00:40:26.486 --> 00:40:27.846 A:middle
your end to reduce involuntary

00:40:27.846 --> 00:40:27.976 A:middle
churn?

00:40:32.566 --> 00:40:34.026 A:middle
Last year, in Engineering

00:40:34.026 --> 00:40:36.006 A:middle
Subscriptions, we talked about

00:40:36.006 --> 00:40:37.696 A:middle
our extended billing re-try

00:40:37.696 --> 00:40:39.636 A:middle
logic that attempts to renew the

00:40:39.636 --> 00:40:42.686 A:middle
subscription over a period of

00:40:44.156 --> 00:40:44.266 A:middle
time.

00:40:44.486 --> 00:40:45.816 A:middle
This is deployed when a

00:40:45.816 --> 00:40:47.456 A:middle
subscription fails to renew due

00:40:47.456 --> 00:40:48.256 A:middle
to a billing issue.

00:40:48.786 --> 00:40:52.836 A:middle
And, since launch, we have been

00:40:52.836 --> 00:40:54.506 A:middle
making constant updates and

00:40:54.506 --> 00:40:56.496 A:middle
tuning to our strategies to

00:40:56.496 --> 00:40:57.806 A:middle
optimize recoveries.

00:40:59.156 --> 00:41:01.276 A:middle
We're also looking at advanced

00:40:59.156 --> 00:41:01.276 A:middle
We're also looking at advanced

00:41:01.276 --> 00:41:03.066 A:middle
machine learning models to

00:41:03.066 --> 00:41:04.666 A:middle
improve how we recover

00:41:04.666 --> 00:41:06.176 A:middle
subscriptions across the

00:41:06.176 --> 00:41:06.636 A:middle
platform.

00:41:06.636 --> 00:41:10.876 A:middle
Now, as we look at performance

00:41:10.966 --> 00:41:13.456 A:middle
since launch, you can see that

00:41:13.456 --> 00:41:15.676 A:middle
we're recovering more than 77%

00:41:15.676 --> 00:41:18.176 A:middle
of subscriptions that failed due

00:41:18.176 --> 00:41:19.486 A:middle
to a billing issue.

00:41:20.046 --> 00:41:22.416 A:middle
And, by recovering these

00:41:22.416 --> 00:41:24.276 A:middle
subscriptions, we have been able

00:41:24.276 --> 00:41:25.566 A:middle
to reduce the overall

00:41:25.566 --> 00:41:27.336 A:middle
involuntary churn to less than

00:41:27.336 --> 00:41:28.966 A:middle
2% across the platform.

00:41:29.516 --> 00:41:36.656 A:middle
[ Applause ]

00:41:37.156 --> 00:41:39.116 A:middle
And, with all these updates and

00:41:39.116 --> 00:41:40.556 A:middle
improvements that we've made to

00:41:40.556 --> 00:41:41.946 A:middle
our billing re-try strategies,

00:41:42.596 --> 00:41:45.406 A:middle
we have been able to recover

00:41:45.406 --> 00:41:47.316 A:middle
over 46 million of your

00:41:47.426 --> 00:41:47.976 A:middle
subscriptions.

00:41:48.516 --> 00:41:54.326 A:middle
[ Applause ]

00:41:54.826 --> 00:41:56.246 A:middle
Now, these subscriptions would

00:41:56.246 --> 00:41:58.276 A:middle
have churned otherwise, and

00:41:58.276 --> 00:42:00.086 A:middle
users had no intention to cancel

00:41:58.276 --> 00:42:00.086 A:middle
users had no intention to cancel

00:42:00.086 --> 00:42:00.796 A:middle
their service.

00:42:01.006 --> 00:42:02.956 A:middle
Users were renewing and enjoying

00:42:02.956 --> 00:42:04.236 A:middle
their service, and they did not

00:42:04.236 --> 00:42:04.946 A:middle
want to cancel their

00:42:04.946 --> 00:42:05.446 A:middle
subscription.

00:42:06.336 --> 00:42:07.836 A:middle
And, we see across the platform

00:42:07.966 --> 00:42:09.466 A:middle
that more than half of these

00:42:09.466 --> 00:42:13.776 A:middle
subscriptions are still active.

00:42:13.966 --> 00:42:15.536 A:middle
Now, as we look at how we are

00:42:15.536 --> 00:42:17.016 A:middle
recovering these subscriptions

00:42:17.016 --> 00:42:19.996 A:middle
over time, over the period of 60

00:42:20.956 --> 00:42:22.046 A:middle
days, you can see that we

00:42:22.046 --> 00:42:24.206 A:middle
recover more than 77% of

00:42:24.206 --> 00:42:25.256 A:middle
subscriptions that failed due to

00:42:25.256 --> 00:42:26.296 A:middle
a billing issue over the period

00:42:26.296 --> 00:42:26.976 A:middle
of 60 days.

00:42:31.056 --> 00:42:32.606 A:middle
And, more than 80% of these

00:42:32.606 --> 00:42:34.416 A:middle
recoveries happen in the first

00:42:34.696 --> 00:42:36.226 A:middle
16 days.

00:42:37.916 --> 00:42:39.906 A:middle
So, what happens when we recover

00:42:40.266 --> 00:42:40.976 A:middle
these subscriptions?

00:42:43.286 --> 00:42:45.476 A:middle
First, you reenable service, as

00:42:45.476 --> 00:42:46.806 A:middle
Tori mentioned earlier, with the

00:42:46.806 --> 00:42:47.876 A:middle
new notifications.

00:42:48.216 --> 00:42:49.626 A:middle
You may re-enable service for

00:42:49.626 --> 00:42:51.246 A:middle
the customers next time that

00:42:51.246 --> 00:42:52.856 A:middle
they try to access their

00:42:53.466 --> 00:42:53.646 A:middle
service.

00:42:54.696 --> 00:42:56.726 A:middle
We start a new billing cycle for

00:42:56.726 --> 00:42:58.556 A:middle
that subscription from the date

00:42:58.556 --> 00:42:58.976 A:middle
of recovery.

00:43:02.506 --> 00:43:04.336 A:middle
And, the days of paid service

00:43:04.336 --> 00:43:05.236 A:middle
that the customers were

00:43:05.236 --> 00:43:07.026 A:middle
accumulating toward that higher

00:43:07.026 --> 00:43:09.666 A:middle
revenue share, 85/15, resumes

00:43:09.706 --> 00:43:11.036 A:middle
from that day of recovery.

00:43:12.736 --> 00:43:15.736 A:middle
So, if you were offering service

00:43:16.256 --> 00:43:17.766 A:middle
to customers during this period

00:43:17.826 --> 00:43:19.926 A:middle
from the day they started

00:43:20.146 --> 00:43:21.866 A:middle
billing re-try to the day of

00:43:21.866 --> 00:43:23.686 A:middle
recovery, you're probably

00:43:23.686 --> 00:43:25.406 A:middle
missing out on revenue for those

00:43:25.406 --> 00:43:25.766 A:middle
days.

00:43:26.316 --> 00:43:30.326 A:middle
How can we improve that?

00:43:31.996 --> 00:43:34.056 A:middle
So, this fall, I'm excited to

00:43:34.056 --> 00:43:35.096 A:middle
announce that we're launching a

00:43:35.096 --> 00:43:37.226 A:middle
new feature that will allow you

00:43:37.416 --> 00:43:38.756 A:middle
to offer a grace period, a

00:43:38.756 --> 00:43:40.336 A:middle
billing grace period, that

00:43:40.336 --> 00:43:42.086 A:middle
allows additional time for

00:43:42.086 --> 00:43:44.906 A:middle
customers while they're enjoying

00:43:44.906 --> 00:43:46.246 A:middle
their service, they have access

00:43:46.316 --> 00:43:47.316 A:middle
to that paid content.

00:43:48.416 --> 00:43:49.346 A:middle
And, it allows you, the

00:43:49.346 --> 00:43:50.976 A:middle
developer to get additional

00:43:50.976 --> 00:43:52.496 A:middle
revenue for any service that you

00:43:52.496 --> 00:43:53.966 A:middle
provide during those days.

00:43:54.516 --> 00:44:00.716 A:middle
[ Applause ]

00:43:54.516 --> 00:44:00.716 A:middle
[ Applause ]

00:44:01.216 --> 00:44:02.236 A:middle
Now, this creates a better

00:44:02.236 --> 00:44:03.866 A:middle
experience for all your

00:44:03.866 --> 00:44:05.366 A:middle
customers, who recovered

00:44:05.366 --> 00:44:07.516 A:middle
naturally over a period of time,

00:44:08.216 --> 00:44:09.346 A:middle
because they never expressed an

00:44:09.346 --> 00:44:10.126 A:middle
intent to cancel.

00:44:11.466 --> 00:44:13.056 A:middle
This also recovers customers who

00:44:13.056 --> 00:44:14.976 A:middle
maybe had a temporary credit

00:44:14.976 --> 00:44:16.606 A:middle
card hold on their account.

00:44:19.826 --> 00:44:21.066 A:middle
Now, let's take a look at how

00:44:21.066 --> 00:44:22.436 A:middle
you can implement this feature.

00:44:23.116 --> 00:44:24.336 A:middle
Well, it's really easy.

00:44:24.756 --> 00:44:26.896 A:middle
It takes three simple steps to

00:44:26.896 --> 00:44:29.006 A:middle
implement a billing grace

00:44:29.556 --> 00:44:29.756 A:middle
period.

00:44:29.866 --> 00:44:32.386 A:middle
First, you opt-in via App Store

00:44:32.386 --> 00:44:34.536 A:middle
Connect to offer pre-configured

00:44:34.536 --> 00:44:36.516 A:middle
durations for grace period.

00:44:37.696 --> 00:44:39.086 A:middle
Now, based on the recovery data

00:44:39.086 --> 00:44:41.126 A:middle
that we saw earlier, we're going

00:44:41.126 --> 00:44:43.506 A:middle
to start with 6 days for weekly

00:44:43.506 --> 00:44:45.996 A:middle
subscriptions, and 16 days for

00:44:45.996 --> 00:44:47.006 A:middle
all other durations.

00:44:49.956 --> 00:44:52.136 A:middle
Next, you look for a new field

00:44:52.436 --> 00:44:54.046 A:middle
in the verifyReceipt response,

00:44:54.426 --> 00:44:55.636 A:middle
or in the notification.

00:44:56.056 --> 00:44:58.176 A:middle
This will allow you to know the

00:44:58.176 --> 00:44:59.786 A:middle
latest expiry date for your

00:44:59.786 --> 00:44:59.976 A:middle
service.

00:45:04.046 --> 00:45:05.956 A:middle
And, you keep service on for

00:45:05.956 --> 00:45:06.976 A:middle
customers during the period.

00:45:13.146 --> 00:45:14.476 A:middle
Now, you may be thinking, as a

00:45:15.496 --> 00:45:17.826 A:middle
developer, why should you opt-in

00:45:18.086 --> 00:45:19.576 A:middle
to offer a billing grace period?

00:45:22.396 --> 00:45:23.346 A:middle
Well, there's a number of

00:45:23.346 --> 00:45:23.886 A:middle
benefits.

00:45:24.156 --> 00:45:26.306 A:middle
First, your customers never

00:45:26.306 --> 00:45:27.336 A:middle
intended to cancel your

00:45:27.336 --> 00:45:29.716 A:middle
subscription, so they enjoy

00:45:29.716 --> 00:45:31.556 A:middle
accessing your service without

00:45:31.556 --> 00:45:32.306 A:middle
any interruptions.

00:45:37.076 --> 00:45:37.806 A:middle
This also allows you, or your

00:45:37.806 --> 00:45:39.466 A:middle
customers to maintain their

00:45:39.466 --> 00:45:41.256 A:middle
existing billing cycle, as we

00:45:41.256 --> 00:45:42.356 A:middle
recover their subscription

00:45:42.356 --> 00:45:43.696 A:middle
during this billing grace

00:45:43.696 --> 00:45:43.986 A:middle
period.

00:45:44.506 --> 00:45:47.776 A:middle
And it enables you, the

00:45:47.776 --> 00:45:51.566 A:middle
developer, to earn additional

00:45:51.566 --> 00:45:53.476 A:middle
revenue for the service that you

00:45:53.476 --> 00:45:54.526 A:middle
provide during this billing

00:45:54.526 --> 00:45:54.976 A:middle
grace period.

00:46:00.056 --> 00:46:01.916 A:middle
And, as we saw earlier, it

00:46:01.916 --> 00:46:03.656 A:middle
allows customers to accumulate

00:46:03.966 --> 00:46:06.746 A:middle
those 85/15 higher revenue share

00:46:06.866 --> 00:46:08.626 A:middle
days of paid service at a faster

00:46:09.206 --> 00:46:09.306 A:middle
rate.

00:46:10.756 --> 00:46:12.786 A:middle
I highly encourage you to look

00:46:12.786 --> 00:46:14.176 A:middle
into grace period for your

00:46:14.176 --> 00:46:15.856 A:middle
subscriptions when we launch

00:46:15.936 --> 00:46:19.306 A:middle
this later this fall.

00:46:19.516 --> 00:46:21.676 A:middle
Now, in addition to offering a

00:46:21.676 --> 00:46:22.766 A:middle
grace period, what are some of

00:46:22.766 --> 00:46:24.056 A:middle
the other things that you can do

00:46:24.356 --> 00:46:26.566 A:middle
to reduce overall involuntary

00:46:26.566 --> 00:46:28.116 A:middle
churn, and improve recoveries?

00:46:29.516 --> 00:46:31.466 A:middle
Here we see an example, where

00:46:31.936 --> 00:46:33.646 A:middle
inside the app, by showing

00:46:33.646 --> 00:46:35.596 A:middle
contextual messaging to your

00:46:35.596 --> 00:46:37.916 A:middle
customers who are in the billing

00:46:37.916 --> 00:46:39.616 A:middle
re-try state, you can let them

00:46:39.616 --> 00:46:40.926 A:middle
know that their subscription has

00:46:40.926 --> 00:46:41.826 A:middle
failed to renew due to a billing

00:46:41.826 --> 00:46:41.916 A:middle
issue.

00:46:48.446 --> 00:46:49.716 A:middle
And, if you were offering a

00:46:49.716 --> 00:46:51.396 A:middle
grace period, you can focus your

00:46:51.396 --> 00:46:54.116 A:middle
messaging on any grace period

00:46:54.116 --> 00:46:55.206 A:middle
service that you are providing

00:46:55.206 --> 00:46:55.996 A:middle
to your customers.

00:46:56.666 --> 00:46:58.486 A:middle
Now, you can be creative with

00:46:58.646 --> 00:47:00.646 A:middle
how you devise this messaging.

00:46:58.646 --> 00:47:00.646 A:middle
how you devise this messaging.

00:47:01.326 --> 00:47:02.726 A:middle
It can be towards the end of the

00:47:02.726 --> 00:47:03.276 A:middle
grace period.

00:47:03.276 --> 00:47:04.746 A:middle
Maybe you are providing premium

00:47:04.746 --> 00:47:06.076 A:middle
content, and they will lose

00:47:06.106 --> 00:47:07.386 A:middle
content at the end of that grace

00:47:07.426 --> 00:47:07.636 A:middle
period.

00:47:07.636 --> 00:47:10.616 A:middle
So, highlighting the premium

00:47:10.616 --> 00:47:11.886 A:middle
content that they're going to

00:47:11.886 --> 00:47:13.506 A:middle
lose at the end of the grace

00:47:13.506 --> 00:47:15.326 A:middle
period will help you recover

00:47:15.326 --> 00:47:16.276 A:middle
those subscriptions.

00:47:19.476 --> 00:47:21.946 A:middle
Here we see an app, Foodvisor,

00:47:22.336 --> 00:47:23.886 A:middle
showing a message to customers

00:47:24.076 --> 00:47:26.386 A:middle
in billing re-try, and showing

00:47:26.386 --> 00:47:28.146 A:middle
them the remaining duration for

00:47:28.146 --> 00:47:32.336 A:middle
the premium content.

00:47:32.416 --> 00:47:34.936 A:middle
Now, within this message, you

00:47:34.936 --> 00:47:37.246 A:middle
can also embed a deep link to

00:47:37.246 --> 00:47:39.246 A:middle
the payment details page, where

00:47:39.246 --> 00:47:40.806 A:middle
the customers can then go and

00:47:40.806 --> 00:47:41.976 A:middle
resolve any billing issues.

00:47:46.206 --> 00:47:48.086 A:middle
As you can see, we've recently

00:47:48.086 --> 00:47:50.476 A:middle
updated this Payment Details

00:47:50.566 --> 00:47:52.476 A:middle
page to allow a customer to have

00:47:52.606 --> 00:47:53.996 A:middle
up to 10 different payment

00:47:53.996 --> 00:47:55.806 A:middle
methods on account.

00:47:56.356 --> 00:47:59.006 A:middle
Now, in addition to providing

00:47:59.146 --> 00:48:00.576 A:middle
easier payment management

00:47:59.146 --> 00:48:00.576 A:middle
easier payment management

00:48:00.576 --> 00:48:02.926 A:middle
options to customers, this also

00:48:02.926 --> 00:48:06.256 A:middle
helps the App Store to reduce

00:48:06.256 --> 00:48:08.976 A:middle
overall involuntary churn by

00:48:08.976 --> 00:48:10.226 A:middle
charging alternate payment

00:48:10.226 --> 00:48:10.976 A:middle
methods on file.

00:48:18.236 --> 00:48:19.796 A:middle
Now, we covered a lot of topics

00:48:19.826 --> 00:48:20.996 A:middle
today in this session.

00:48:22.026 --> 00:48:23.806 A:middle
But, just to summarize, we

00:48:24.436 --> 00:48:25.916 A:middle
talked about Subscription

00:48:25.916 --> 00:48:28.086 A:middle
Offers, our new feature that we

00:48:28.316 --> 00:48:30.616 A:middle
launched recently that allows

00:48:30.616 --> 00:48:32.746 A:middle
you to reduce voluntary churn by

00:48:32.746 --> 00:48:35.666 A:middle
giving customers a discounted

00:48:35.666 --> 00:48:37.756 A:middle
price, or a free trial to retain

00:48:37.756 --> 00:48:38.456 A:middle
their subscription.

00:48:39.396 --> 00:48:41.406 A:middle
Dana walked us through the code

00:48:41.406 --> 00:48:43.116 A:middle
to implement a new API called

00:48:43.116 --> 00:48:45.226 A:middle
SKStorefront which you can use

00:48:45.226 --> 00:48:47.106 A:middle
to display the right content to

00:48:47.106 --> 00:48:49.326 A:middle
your customers around the world.

00:48:52.256 --> 00:48:53.776 A:middle
We talked about some receipt

00:48:53.776 --> 00:48:55.356 A:middle
changes that are coming soon,

00:48:55.586 --> 00:48:57.566 A:middle
that allow you to reward your

00:48:57.566 --> 00:48:58.916 A:middle
loyal customers who pre-ordered

00:48:58.916 --> 00:49:00.496 A:middle
the app, maybe by giving them a

00:48:58.916 --> 00:49:00.496 A:middle
the app, maybe by giving them a

00:49:00.496 --> 00:49:02.346 A:middle
starting balance of a game.

00:49:02.866 --> 00:49:04.406 A:middle
And, if you haven't already done

00:49:04.686 --> 00:49:06.456 A:middle
this, check out the

00:49:06.456 --> 00:49:08.006 A:middle
Server-to-Server Notifications,

00:49:08.986 --> 00:49:10.596 A:middle
and add that URL in App Store

00:49:10.596 --> 00:49:12.756 A:middle
Connect to get notified for the

00:49:12.756 --> 00:49:13.896 A:middle
billing events from the App

00:49:13.896 --> 00:49:14.166 A:middle
Store.

00:49:15.646 --> 00:49:17.096 A:middle
We talked about grace period,

00:49:17.156 --> 00:49:18.376 A:middle
and how you can provide a

00:49:18.376 --> 00:49:20.456 A:middle
billing grace period to improve

00:49:20.616 --> 00:49:22.826 A:middle
recoveries for customers that

00:49:22.826 --> 00:49:23.966 A:middle
their subscriptions failed to

00:49:23.966 --> 00:49:25.006 A:middle
renew because of a billing

00:49:25.006 --> 00:49:25.746 A:middle
issue.

00:49:28.356 --> 00:49:29.596 A:middle
And, we talked about contextual

00:49:29.596 --> 00:49:31.356 A:middle
messaging, that you can display

00:49:31.356 --> 00:49:33.286 A:middle
inside the app to recover more

00:49:33.406 --> 00:49:34.256 A:middle
of your subscriptions.

00:49:34.866 --> 00:49:37.576 A:middle
For more information on this

00:49:37.616 --> 00:49:39.736 A:middle
session, and the video for this

00:49:39.736 --> 00:49:42.566 A:middle
session, look up Session 302.

00:49:42.986 --> 00:49:44.816 A:middle
And, later this afternoon, my

00:49:44.816 --> 00:49:46.276 A:middle
colleagues will talk about

00:49:46.276 --> 00:49:47.506 A:middle
subscription offers best

00:49:47.506 --> 00:49:48.246 A:middle
practices.

00:49:48.246 --> 00:49:49.306 A:middle
They'll tell you how to

00:49:49.306 --> 00:49:50.696 A:middle
implement subscription offers,

00:49:50.696 --> 00:49:52.566 A:middle
and the different use cases for

00:49:52.566 --> 00:49:54.246 A:middle
using subscription offers to

00:49:54.246 --> 00:49:55.826 A:middle
reduce voluntary churn.

00:49:56.356 --> 00:49:58.546 A:middle
And, we'll be around in the lab

00:49:59.016 --> 00:50:00.696 A:middle
to answer any questions you may

00:49:59.016 --> 00:50:00.696 A:middle
to answer any questions you may

00:50:00.696 --> 00:50:01.976 A:middle
have about these features.

00:50:04.576 --> 00:50:06.086 A:middle
Thank you and have a great rest

00:50:06.166 --> 00:50:06.966 A:middle
of your afternoon.

00:50:07.516 --> 00:50:10.506 A:middle
[ Applause ]
