WEBVTT

00:00:01.516 --> 00:00:06.546 A:middle
[ Music ]

00:00:07.046 --> 00:00:07.566 A:middle
&gt;&gt; Hello everyone.

00:00:07.866 --> 00:00:10.216 A:middle
My name is Shiva Sundar, and I'm

00:00:10.216 --> 00:00:12.526 A:middle
extremely excited to talk about

00:00:12.806 --> 00:00:14.696 A:middle
HEVC Video with Alpha.

00:00:17.506 --> 00:00:19.116 A:middle
You're probably familiar with

00:00:19.116 --> 00:00:21.216 A:middle
Alpha channels in image files today.

00:00:22.716 --> 00:00:24.716 A:middle
Alpha channels are ubiquitous

00:00:24.856 --> 00:00:27.776 A:middle
in image files, in our apps and on

00:00:27.776 --> 00:00:28.136 A:middle
the web.

00:00:29.576 --> 00:00:30.806 A:middle
When there's an Alpha channel

00:00:30.886 --> 00:00:33.726 A:middle
in an image file, every pixel in the

00:00:33.726 --> 00:00:36.236 A:middle
image gets opacity along with

00:00:36.236 --> 00:00:36.816 A:middle
its color.

00:00:38.036 --> 00:00:40.706 A:middle
This allows us to have an image

00:00:40.706 --> 00:00:42.256 A:middle
that has a complex,

00:00:42.256 --> 00:00:44.916 A:middle
non-rectangular shape but looks

00:00:44.916 --> 00:00:47.786 A:middle
natural when composited against

00:00:47.786 --> 00:00:49.066 A:middle
many different backgrounds.

00:00:52.556 --> 00:00:55.536 A:middle
So Alpha and transparency are

00:00:55.536 --> 00:00:58.336 A:middle
common and used all over the web

00:00:59.136 --> 00:01:00.816 A:middle
principally by still image

00:00:59.136 --> 00:01:00.816 A:middle
principally by still image

00:01:00.816 --> 00:01:01.946 A:middle
formats like PNG.

00:01:05.135 --> 00:01:07.216 A:middle
Alpha in video has been less

00:01:07.216 --> 00:01:07.626 A:middle
common.

00:01:09.176 --> 00:01:11.296 A:middle
It has been a professional video

00:01:11.296 --> 00:01:13.456 A:middle
workflow tool.

00:01:13.616 --> 00:01:15.466 A:middle
The formats used in professional

00:01:15.466 --> 00:01:17.576 A:middle
video workflows like Apple

00:01:17.576 --> 00:01:20.516 A:middle
ProRes 4444 are very high data

00:01:20.516 --> 00:01:22.286 A:middle
rate and not appropriate for

00:01:22.286 --> 00:01:22.726 A:middle
delivery.

00:01:24.236 --> 00:01:26.776 A:middle
In 2017, Apple introduced

00:01:26.776 --> 00:01:28.906 A:middle
support for the HEIF image file

00:01:28.906 --> 00:01:31.286 A:middle
format, which lets us take

00:01:31.286 --> 00:01:33.816 A:middle
advantage of the advanced

00:01:33.816 --> 00:01:34.476 A:middle
lossy compression

00:01:34.476 --> 00:01:37.526 A:middle
technologies in HEVC to compress

00:01:37.526 --> 00:01:38.466 A:middle
still images.

00:01:39.996 --> 00:01:42.016 A:middle
HEIF also lets you include an

00:01:42.016 --> 00:01:43.946 A:middle
Alpha channel in image files.

00:01:45.366 --> 00:01:47.216 A:middle
In fact, this year we are

00:01:47.666 --> 00:01:49.286 A:middle
adding support for HEIF

00:01:49.286 --> 00:01:51.816 A:middle
sequences, which lets you have

00:01:51.816 --> 00:01:53.536 A:middle
multiple images in a single

00:01:53.536 --> 00:01:53.916 A:middle
file.

00:01:55.376 --> 00:01:57.536 A:middle
HEIF sequences also support

00:01:57.536 --> 00:01:58.336 A:middle
Alpha channels.

00:02:00.106 --> 00:02:02.136 A:middle
For some time we've recognized

00:02:02.196 --> 00:02:04.796 A:middle
the need for a lower bitrate way

00:02:05.076 --> 00:02:06.696 A:middle
to include Alpha in motion

00:02:06.696 --> 00:02:07.076 A:middle
video.

00:02:08.226 --> 00:02:11.236 A:middle
And so we said let's use that

00:02:11.236 --> 00:02:12.656 A:middle
advanced loosy compression

00:02:12.656 --> 00:02:14.796 A:middle
technology to support Alpha

00:02:14.796 --> 00:02:16.876 A:middle
channels in video files as well.

00:02:19.286 --> 00:02:21.786 A:middle
Playback of HEVC video with

00:02:21.786 --> 00:02:24.616 A:middle
Alpha is supported in iOS 13,

00:02:24.946 --> 00:02:28.376 A:middle
tvOS 13 and macOS Catalina on

00:02:28.406 --> 00:02:29.976 A:middle
all supported devices and

00:02:29.976 --> 00:02:30.676 A:middle
computers.

00:02:31.816 --> 00:02:34.566 A:middle
Encoding is supported on all of

00:02:34.566 --> 00:02:36.446 A:middle
those devices and computers that

00:02:36.446 --> 00:02:37.836 A:middle
have an HEVC encoder.

00:02:39.556 --> 00:02:41.916 A:middle
Having a video with Alpha format

00:02:42.606 --> 00:02:45.286 A:middle
that works well at bit rates low

00:02:45.286 --> 00:02:47.696 A:middle
enough for distribution opens up

00:02:47.696 --> 00:02:48.796 A:middle
many opportunities.

00:02:52.046 --> 00:02:53.046 A:middle
You can have rich,

00:02:53.126 --> 00:02:54.896 A:middle
non-rectangular motion video

00:02:54.896 --> 00:02:57.246 A:middle
content that you incorporate as

00:02:57.246 --> 00:02:59.346 A:middle
a layer as part of your app's

00:02:59.346 --> 00:03:00.716 A:middle
expressive experience.

00:02:59.346 --> 00:03:00.716 A:middle
expressive experience.

00:03:02.566 --> 00:03:04.136 A:middle
It could be pre-rendered like an

00:03:04.136 --> 00:03:04.856 A:middle
animation.

00:03:05.786 --> 00:03:07.926 A:middle
Such an element can move around

00:03:07.966 --> 00:03:09.446 A:middle
on top of a complicated

00:03:09.446 --> 00:03:11.476 A:middle
background and you could even have

00:03:11.476 --> 00:03:13.276 A:middle
several of them to give a

00:03:13.276 --> 00:03:15.366 A:middle
feeling of depth or complex

00:03:15.366 --> 00:03:16.116 A:middle
interactions.

00:03:17.416 --> 00:03:19.416 A:middle
Because these are movies they

00:03:19.416 --> 00:03:20.746 A:middle
can have synchronized sound

00:03:20.746 --> 00:03:23.046 A:middle
tracks so the characters in

00:03:23.046 --> 00:03:24.916 A:middle
these non-rectangular movies can

00:03:24.916 --> 00:03:25.296 A:middle
talk.

00:03:26.436 --> 00:03:27.346 A:middle
&gt;&gt; Highly professional.

00:03:27.826 --> 00:03:28.476 A:middle
&gt;&gt; Alpha channel.

00:03:28.746 --> 00:03:29.176 A:middle
&gt;&gt; Content.

00:03:29.406 --> 00:03:29.896 A:middle
&gt;&gt; For you.

00:03:30.176 --> 00:03:31.336 A:middle
&gt;&gt; Woo-hoo.

00:03:32.056 --> 00:03:33.196 A:middle
&gt;&gt; Woo-hoo.

00:03:33.376 --> 00:03:34.826 A:middle
&gt;&gt; They could be integrated into

00:03:34.826 --> 00:03:37.866 A:middle
games using SpriteKit, SceneKit

00:03:38.176 --> 00:03:38.646 A:middle
or Metal.

00:03:39.806 --> 00:03:41.356 A:middle
In this context, we have

00:03:41.356 --> 00:03:42.696 A:middle
provided you with some sample

00:03:42.696 --> 00:03:45.376 A:middle
code on how to record a SceneKit

00:03:45.376 --> 00:03:48.266 A:middle
scene into a HEVC video with

00:03:48.266 --> 00:03:50.706 A:middle
Alpha and how to render another

00:03:50.996 --> 00:03:52.036 A:middle
in a SpriteKit scene.

00:03:53.236 --> 00:03:55.336 A:middle
On web pages, they could bring

00:03:55.336 --> 00:03:57.926 A:middle
interactive elements to life.

00:03:58.316 --> 00:04:00.926 A:middle
HEVC video with Alpha is

00:03:58.316 --> 00:04:00.926 A:middle
HEVC video with Alpha is

00:04:00.926 --> 00:04:03.806 A:middle
supported by Safari in iOS 13

00:04:04.016 --> 00:04:05.606 A:middle
and macOS Catalina.

00:04:06.746 --> 00:04:08.826 A:middle
Safari can also tell the web

00:04:08.826 --> 00:04:10.666 A:middle
page whether this feature is

00:04:10.666 --> 00:04:11.206 A:middle
supported.

00:04:12.906 --> 00:04:15.016 A:middle
For more information on using

00:04:15.016 --> 00:04:17.956 A:middle
the media capabilities API, be

00:04:17.956 --> 00:04:20.236 A:middle
sure to check out the What's New

00:04:20.236 --> 00:04:22.696 A:middle
in Authentication, Safari and

00:04:22.696 --> 00:04:23.746 A:middle
WebKit video.

00:04:26.396 --> 00:04:29.236 A:middle
The ability to distribute video

00:04:29.236 --> 00:04:32.166 A:middle
with Alpha at low bitrates opens

00:04:32.166 --> 00:04:34.026 A:middle
opportunities for authoring apps

00:04:34.346 --> 00:04:35.726 A:middle
to provide background removal.

00:04:37.986 --> 00:04:40.206 A:middle
Here I am in front of a green

00:04:40.206 --> 00:04:42.006 A:middle
sheet hung from the wall

00:04:42.516 --> 00:04:43.826 A:middle
recorded using an iPhone.

00:04:47.776 --> 00:04:53.366 A:middle
I wish I was here.

00:04:53.486 --> 00:04:55.936 A:middle
I used a custom video compositor

00:04:56.196 --> 00:04:58.356 A:middle
with a co-image filter to

00:04:58.356 --> 00:05:00.096 A:middle
replace the green pixels with

00:04:58.356 --> 00:05:00.096 A:middle
replace the green pixels with

00:05:00.176 --> 00:05:02.786 A:middle
transparency and exported it to

00:05:02.786 --> 00:05:03.856 A:middle
a video with Alpha.

00:05:07.766 --> 00:05:10.096 A:middle
I wish I was here.

00:05:13.046 --> 00:05:15.756 A:middle
And now I can overlay this video

00:05:15.926 --> 00:05:17.186 A:middle
on any background I like.

00:05:21.246 --> 00:05:23.606 A:middle
I wish I was here.

00:05:25.736 --> 00:05:27.536 A:middle
We are providing sample code

00:05:27.776 --> 00:05:30.066 A:middle
showing how to do this and write

00:05:30.246 --> 00:05:32.366 A:middle
the resulting HEVC video with

00:05:32.366 --> 00:05:33.156 A:middle
Alpha movie.

00:05:35.116 --> 00:05:36.656 A:middle
So how does this work?

00:05:37.906 --> 00:05:40.446 A:middle
As you know, movie files contain

00:05:40.446 --> 00:05:42.556 A:middle
tracks of various media types.

00:05:44.396 --> 00:05:46.766 A:middle
A video track contains video

00:05:46.766 --> 00:05:47.196 A:middle
frames.

00:05:48.406 --> 00:05:50.716 A:middle
HEVC video with Alpha is

00:05:50.716 --> 00:05:52.876 A:middle
contained inside a single video

00:05:52.876 --> 00:05:54.036 A:middle
track in the movie.

00:05:56.136 --> 00:05:58.486 A:middle
In the single track, each frame

00:05:58.606 --> 00:06:00.526 A:middle
contains 2 parts called layers

00:05:58.606 --> 00:06:00.526 A:middle
contains 2 parts called layers

00:06:01.186 --> 00:06:03.326 A:middle
and each layer is compressed

00:06:03.326 --> 00:06:04.896 A:middle
using the HEVC codec.

00:06:06.776 --> 00:06:08.876 A:middle
The base layer contains the

00:06:08.876 --> 00:06:10.666 A:middle
colored image of the frame as

00:06:10.666 --> 00:06:11.066 A:middle
usual.

00:06:12.306 --> 00:06:14.716 A:middle
The Alpha layer contains just

00:06:14.716 --> 00:06:16.266 A:middle
the Alpha channel of the frame.

00:06:17.606 --> 00:06:20.076 A:middle
This is done using special HEVC

00:06:20.076 --> 00:06:22.286 A:middle
syntax which identifies the 2

00:06:22.286 --> 00:06:22.836 A:middle
layers.

00:06:24.056 --> 00:06:26.506 A:middle
The HEVC rules for this syntax

00:06:26.936 --> 00:06:29.326 A:middle
mean that the HEVC decoder that

00:06:29.326 --> 00:06:31.276 A:middle
does not know how to handle the

00:06:31.276 --> 00:06:33.956 A:middle
Alpha layer will ignore it and

00:06:33.956 --> 00:06:35.336 A:middle
display the base layer alone.

00:06:37.526 --> 00:06:39.826 A:middle
Let's move along and talk about

00:06:39.826 --> 00:06:40.696 A:middle
how to use it.

00:06:42.066 --> 00:06:44.456 A:middle
HEVC with Alpha encoding is

00:06:44.456 --> 00:06:46.926 A:middle
integrated into numerous AV

00:06:46.926 --> 00:06:48.236 A:middle
Foundation APIs.

00:06:49.066 --> 00:06:50.786 A:middle
Let's look at content creation,

00:06:50.786 --> 00:06:51.516 A:middle
for example.

00:06:53.086 --> 00:06:55.026 A:middle
You can render video frames with

00:06:55.026 --> 00:06:57.706 A:middle
Alpha in your application and

00:06:57.706 --> 00:07:00.506 A:middle
use AVAssetWriter to encode them

00:06:57.706 --> 00:07:00.506 A:middle
use AVAssetWriter to encode them

00:07:00.686 --> 00:07:02.326 A:middle
and write them to a movie file.

00:07:03.996 --> 00:07:05.516 A:middle
You can use new presets

00:07:05.706 --> 00:07:06.516 A:middle
available with

00:07:06.516 --> 00:07:08.896 A:middle
AVAssetExportSession to

00:07:08.896 --> 00:07:10.926 A:middle
transcode video formats

00:07:10.926 --> 00:07:13.716 A:middle
containing Alpha including Apple

00:07:13.716 --> 00:07:16.966 A:middle
ProRes 4444 into HEVC with

00:07:16.966 --> 00:07:17.406 A:middle
Alpha.

00:07:18.706 --> 00:07:21.206 A:middle
These new HEVC presets have the

00:07:21.206 --> 00:07:22.946 A:middle
suffix with Alpha.

00:07:26.676 --> 00:07:27.786 A:middle
You can also use

00:07:27.786 --> 00:07:30.786 A:middle
AVAssettExportSession to burn

00:07:31.016 --> 00:07:32.886 A:middle
in a specific background color

00:07:33.246 --> 00:07:35.606 A:middle
converting a movie with Alpha

00:07:35.876 --> 00:07:38.556 A:middle
into a movie without Alpha, that

00:07:38.556 --> 00:07:40.406 A:middle
will play on players that don't

00:07:40.406 --> 00:07:42.026 A:middle
support HEVC with Alpha.

00:07:45.046 --> 00:07:48.586 A:middle
Or you can also use the HEVC

00:07:48.586 --> 00:07:50.376 A:middle
with Alpha video encoder

00:07:50.596 --> 00:07:51.996 A:middle
directly via

00:07:51.996 --> 00:07:53.256 A:middle
VTCompressionSession.

00:07:57.246 --> 00:07:58.866 A:middle
Looking at AVFoundation's

00:07:58.866 --> 00:08:02.706 A:middle
playback APIs, HEVC with Alpha

00:07:58.866 --> 00:08:02.706 A:middle
playback APIs, HEVC with Alpha

00:08:02.956 --> 00:08:05.556 A:middle
is supported by AVPlayer and

00:08:05.556 --> 00:08:07.996 A:middle
AVPlayerLayer for display in

00:08:07.996 --> 00:08:10.056 A:middle
your apps view hierarchy via

00:08:10.056 --> 00:08:13.016 A:middle
Core Animation, AppKit and UIKit.

00:08:14.676 --> 00:08:17.606 A:middle
The video in AVPlayerLayer will

00:08:17.606 --> 00:08:19.506 A:middle
be displayed with a transparent

00:08:19.506 --> 00:08:21.686 A:middle
background and composed with the

00:08:21.686 --> 00:08:23.206 A:middle
rest of the layers and views.

00:08:25.076 --> 00:08:27.766 A:middle
Alternatively you can access a

00:08:27.766 --> 00:08:29.916 A:middle
sequence of decoded video frames

00:08:30.146 --> 00:08:32.856 A:middle
directly using

00:08:32.976 --> 00:08:33.846 A:middle
AVPlayerItemVideoOutput.

00:08:35.056 --> 00:08:36.856 A:middle
This is a great choice when you

00:08:36.856 --> 00:08:38.616 A:middle
want to incorporate those video

00:08:38.616 --> 00:08:40.846 A:middle
frames into a custom rendering

00:08:40.846 --> 00:08:42.546 A:middle
you're doing using Metal,

00:08:42.905 --> 00:08:45.046 A:middle
SpriteKit and other GPU-based

00:08:45.046 --> 00:08:49.176 A:middle
rendering APIs.

00:08:49.206 --> 00:08:51.246 A:middle
If you need to decode frames for

00:08:51.246 --> 00:08:54.746 A:middle
another purpose, you can use

00:08:54.746 --> 00:08:57.266 A:middle
AVAssetImageGenerator directory

00:08:57.576 --> 00:08:59.436 A:middle
and individual frame of the

00:08:59.436 --> 00:09:02.156 A:middle
movie as a CGImage with Alpha.

00:08:59.436 --> 00:09:02.156 A:middle
movie as a CGImage with Alpha.

00:09:03.766 --> 00:09:06.236 A:middle
You can use AVAssetReader to

00:09:06.276 --> 00:09:09.186 A:middle
extract video frames for use in

00:09:09.186 --> 00:09:10.496 A:middle
a non-playback workflow.

00:09:13.226 --> 00:09:15.856 A:middle
You can also use the HEVC with

00:09:15.856 --> 00:09:18.886 A:middle
Alpha video decoder directly via

00:09:18.886 --> 00:09:20.416 A:middle
VTDecompressionSession.

00:09:22.776 --> 00:09:25.776 A:middle
In short because HEVC with Alpha

00:09:26.166 --> 00:09:28.746 A:middle
is integrated into AVFoundation

00:09:28.836 --> 00:09:31.196 A:middle
at the level of a video codec,

00:09:31.716 --> 00:09:33.796 A:middle
it fits in well into all these

00:09:33.896 --> 00:09:35.486 A:middle
familiar API workflows.

00:09:38.576 --> 00:09:40.536 A:middle
Now let us see how we can

00:09:40.536 --> 00:09:42.106 A:middle
accomplish this in code.

00:09:43.476 --> 00:09:45.846 A:middle
When encoding a movie, when

00:09:45.846 --> 00:09:48.216 A:middle
configuring your AVAssetWriter

00:09:48.266 --> 00:09:50.776 A:middle
input or VTCompressionSession,

00:09:51.526 --> 00:09:55.036 A:middle
use the video codec type HEVC

00:09:55.036 --> 00:09:55.716 A:middle
with Alpha.

00:09:56.816 --> 00:09:59.236 A:middle
This is a special signal that

00:09:59.236 --> 00:10:00.586 A:middle
the Alpha channel should be

00:09:59.236 --> 00:10:00.586 A:middle
the Alpha channel should be

00:10:00.586 --> 00:10:01.106 A:middle
encoded.

00:10:01.976 --> 00:10:04.336 A:middle
The encoded file will have the

00:10:04.336 --> 00:10:06.466 A:middle
standard HEVC codec type.

00:10:07.286 --> 00:10:09.056 A:middle
It will be backwards compatible.

00:10:09.916 --> 00:10:12.216 A:middle
An HEVC player that does not

00:10:12.216 --> 00:10:14.286 A:middle
understand Alpha will display

00:10:14.286 --> 00:10:15.756 A:middle
only the base video layer.

00:10:16.396 --> 00:10:17.526 A:middle
It will ignore the Alpha

00:10:17.526 --> 00:10:17.996 A:middle
portion.

00:10:19.716 --> 00:10:21.306 A:middle
If you work with Alpha channels,

00:10:21.966 --> 00:10:23.606 A:middle
you may know that there are 2

00:10:23.606 --> 00:10:25.576 A:middle
strategies for how to write

00:10:25.576 --> 00:10:27.086 A:middle
video data to a file,

00:10:28.066 --> 00:10:30.636 A:middle
premultiplied Alpha or straight

00:10:30.636 --> 00:10:32.206 A:middle
Alpha, also known as

00:10:32.206 --> 00:10:33.956 A:middle
unassociated Alpha or

00:10:33.956 --> 00:10:35.346 A:middle
non-premultiplied Alpha.

00:10:36.416 --> 00:10:38.186 A:middle
The tradeoffs between these

00:10:38.186 --> 00:10:40.316 A:middle
choices are beyond the scope of

00:10:40.316 --> 00:10:40.996 A:middle
this talk.

00:10:42.706 --> 00:10:44.086 A:middle
If you're familiar with these,

00:10:44.756 --> 00:10:46.506 A:middle
what you need to know is that

00:10:46.506 --> 00:10:47.416 A:middle
both are supported.

00:10:49.366 --> 00:10:50.716 A:middle
If you're not similar with

00:10:50.716 --> 00:10:52.996 A:middle
these, we recommend the default,

00:10:53.446 --> 00:10:54.896 A:middle
which is premultiplied Alpha.

00:10:55.536 --> 00:10:57.856 A:middle
It's the natural choice in most

00:10:57.856 --> 00:10:59.906 A:middle
GPU-based rendering parts and it

00:10:59.906 --> 00:11:00.736 A:middle
scales better.

00:10:59.906 --> 00:11:00.736 A:middle
scales better.

00:11:02.616 --> 00:11:05.036 A:middle
Now looking at the code, you may

00:11:05.036 --> 00:11:07.606 A:middle
specify the Alpha mode by either

00:11:07.606 --> 00:11:09.286 A:middle
configuring the compression

00:11:09.286 --> 00:11:11.676 A:middle
session or as a buffer

00:11:11.676 --> 00:11:12.306 A:middle
attachment.

00:11:12.306 --> 00:11:15.606 A:middle
As a safety mechanism if the

00:11:15.606 --> 00:11:17.206 A:middle
setting and the buffer

00:11:17.206 --> 00:11:19.256 A:middle
attachment are both specified

00:11:19.366 --> 00:11:21.246 A:middle
and they do not match, the

00:11:21.246 --> 00:11:23.036 A:middle
encoding operation will fail.

00:11:25.046 --> 00:11:26.996 A:middle
Our APIs require the

00:11:26.996 --> 00:11:29.556 A:middle
Alpha channel to be encoded with

00:11:29.556 --> 00:11:32.006 A:middle
fixed quality because video

00:11:32.006 --> 00:11:34.176 A:middle
encoding artifacts in the Alpha

00:11:34.176 --> 00:11:36.126 A:middle
channel can be bothersome in

00:11:36.326 --> 00:11:37.986 A:middle
ways that the same artifacts

00:11:38.286 --> 00:11:39.636 A:middle
wouldn't be in the base layer.

00:11:40.746 --> 00:11:41.486 A:middle
Our APIs let you

00:11:41.836 --> 00:11:44.136 A:middle
control the base layers bitrate

00:11:44.476 --> 00:11:46.026 A:middle
and the Alpha channel's quality

00:11:46.026 --> 00:11:49.876 A:middle
separately if you need to.

00:11:50.076 --> 00:11:52.426 A:middle
Now, looking at the code you can

00:11:52.426 --> 00:11:54.396 A:middle
specify the Alpha layer quality

00:11:54.896 --> 00:11:56.876 A:middle
using target quality for Alpha

00:11:56.876 --> 00:11:57.546 A:middle
parameter.

00:11:59.376 --> 00:12:01.876 A:middle
It is arranged between 0 and 1

00:11:59.376 --> 00:12:01.876 A:middle
It is arranged between 0 and 1

00:12:02.436 --> 00:12:04.026 A:middle
where 1 means it is close to

00:12:04.026 --> 00:12:04.596 A:middle
lossless.

00:12:05.746 --> 00:12:07.036 A:middle
The bitrate parameter you

00:12:07.036 --> 00:12:09.316 A:middle
specify only applies to the base

00:12:09.316 --> 00:12:11.126 A:middle
layer and is ignored by the

00:12:11.126 --> 00:12:11.846 A:middle
Alpha layer.

00:12:13.546 --> 00:12:15.306 A:middle
To detect the presence of an

00:12:15.306 --> 00:12:18.076 A:middle
Alpha channel, you can either

00:12:18.076 --> 00:12:20.556 A:middle
test AV media characteristic

00:12:21.016 --> 00:12:24.076 A:middle
containsAlphaChannel or you

00:12:24.076 --> 00:12:26.506 A:middle
can query the format description

00:12:26.506 --> 00:12:28.196 A:middle
extension contains Alpha

00:12:28.196 --> 00:12:28.496 A:middle
channel.

00:12:30.706 --> 00:12:33.286 A:middle
If you are trying to export HEVC

00:12:33.286 --> 00:12:35.376 A:middle
with Alpha movie, use to

00:12:35.376 --> 00:12:37.876 A:middle
determine compatibility API to

00:12:37.876 --> 00:12:40.026 A:middle
validate that Alpha is present

00:12:40.026 --> 00:12:40.886 A:middle
in the source asset.

00:12:43.866 --> 00:12:45.636 A:middle
This validation only takes the

00:12:45.636 --> 00:12:47.466 A:middle
source movie into account not

00:12:47.466 --> 00:12:48.546 A:middle
the video composition.

00:12:48.736 --> 00:12:51.046 A:middle
So you must skip it if you are

00:12:51.046 --> 00:12:53.126 A:middle
using a video composition to

00:12:53.126 --> 00:12:54.756 A:middle
generate a new Alpha channel

00:12:55.206 --> 00:12:56.766 A:middle
from sources that do not have

00:12:56.766 --> 00:12:57.476 A:middle
Alpha channels.

00:12:59.466 --> 00:13:01.386 A:middle
There are a lot of video players

00:12:59.466 --> 00:13:01.386 A:middle
There are a lot of video players

00:13:01.386 --> 00:13:02.426 A:middle
in the ecosystem.

00:13:03.676 --> 00:13:06.216 A:middle
Many of them don't support HEVC

00:13:06.736 --> 00:13:08.586 A:middle
let alone HEVC with Alpha.

00:13:10.096 --> 00:13:11.716 A:middle
You can remove the Alpha channel

00:13:12.466 --> 00:13:14.426 A:middle
by burning in a solid background

00:13:14.426 --> 00:13:14.896 A:middle
color.

00:13:15.936 --> 00:13:17.616 A:middle
We have added some convenience

00:13:17.616 --> 00:13:19.906 A:middle
API and sample code to help

00:13:19.906 --> 00:13:21.196 A:middle
simplify this conversion.

00:13:22.766 --> 00:13:24.156 A:middle
If you're looking to build

00:13:24.156 --> 00:13:26.766 A:middle
support into a non-Apple media

00:13:26.766 --> 00:13:28.806 A:middle
framework, we have published a

00:13:28.806 --> 00:13:30.616 A:middle
specification for an

00:13:30.616 --> 00:13:32.506 A:middle
interoperability profile that

00:13:32.506 --> 00:13:34.476 A:middle
you should read, but if you

00:13:34.476 --> 00:13:36.316 A:middle
can't wait, here is a sneak

00:13:36.316 --> 00:13:37.000 A:middle
peek.

00:13:43.296 --> 00:13:45.756 A:middle
To summarize, HEVC video with

00:13:45.756 --> 00:13:47.676 A:middle
Alpha is a cool new feature.

00:13:48.516 --> 00:13:50.596 A:middle
It takes advantage of HEVC's

00:13:50.596 --> 00:13:52.716 A:middle
state of the art compression

00:13:52.716 --> 00:13:53.316 A:middle
technology.

00:13:54.676 --> 00:13:57.866 A:middle
It is supported on iOS 13, tvOS

00:13:57.866 --> 00:13:59.916 A:middle
13 and macOS Catalina.

00:14:01.226 --> 00:14:03.416 A:middle
It takes advantage of hardware

00:14:03.416 --> 00:14:05.496 A:middle
acceleration on recent devices.

00:14:06.886 --> 00:14:09.206 A:middle
It is well integrated into

00:14:09.206 --> 00:14:11.436 A:middle
AVFoundation for use in your apps.

00:14:12.686 --> 00:14:15.206 A:middle
It is also integrated in Safari

00:14:15.206 --> 00:14:17.166 A:middle
for use in your web experiences.

00:14:18.576 --> 00:14:21.526 A:middle
HEVC with Alpha brings us new

00:14:21.526 --> 00:14:23.276 A:middle
opportunities for creative

00:14:23.276 --> 00:14:25.286 A:middle
expression for both developers

00:14:25.286 --> 00:14:26.216 A:middle
and users alike.

00:14:26.886 --> 00:14:28.616 A:middle
We can't wait to see the ways

00:14:28.676 --> 00:14:30.376 A:middle
you can take advantage of it in

00:14:30.376 --> 00:14:30.766 A:middle
your apps.

00:14:30.936 --> 00:14:31.976 A:middle
Thank you for your time.
