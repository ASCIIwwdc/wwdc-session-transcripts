WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[Music]

00:00:08.416 --> 00:00:11.566 A:middle
&gt;&gt; [Applause] All right, thank

00:00:11.566 --> 00:00:11.946 A:middle
you.

00:00:12.606 --> 00:00:14.906 A:middle
Welcome. It's so great to see

00:00:14.906 --> 00:00:15.976 A:middle
you all here and it's great to

00:00:15.976 --> 00:00:17.806 A:middle
see so many people excited about

00:00:17.806 --> 00:00:18.176 A:middle
SwiftUI.

00:00:18.176 --> 00:00:20.296 A:middle
My name is Jeff Nadeau.

00:00:20.546 --> 00:00:22.256 A:middle
I work on macOS frameworks and

00:00:22.256 --> 00:00:23.276 A:middle
I'll be joined in a little bit

00:00:23.276 --> 00:00:24.986 A:middle
by my colleagues Ada Turner and

00:00:24.986 --> 00:00:25.676 A:middle
Meghna Sapre [phonetic].

00:00:27.026 --> 00:00:27.776 A:middle
Now we hope you've had the

00:00:27.776 --> 00:00:28.996 A:middle
chance to learn about SwiftUI

00:00:29.056 --> 00:00:30.446 A:middle
all throughout the week but if

00:00:30.446 --> 00:00:32.066 A:middle
you need a summary, here it is.

00:00:32.625 --> 00:00:34.196 A:middle
SwiftUI is the shortest path to

00:00:34.196 --> 00:00:35.626 A:middle
building great apps on every

00:00:35.626 --> 00:00:36.206 A:middle
device.

00:00:36.766 --> 00:00:38.976 A:middle
And what we're here to focus on

00:00:38.976 --> 00:00:40.856 A:middle
today is the 'every' in every

00:00:40.856 --> 00:00:41.546 A:middle
device.

00:00:42.936 --> 00:00:43.986 A:middle
Now when we think about building

00:00:43.986 --> 00:00:45.036 A:middle
applications for all of our

00:00:45.036 --> 00:00:46.236 A:middle
Apple devices, these are the

00:00:46.236 --> 00:00:47.196 A:middle
technologies that we think

00:00:47.196 --> 00:00:47.526 A:middle
about.

00:00:48.026 --> 00:00:49.056 A:middle
We use AppKit on the Mac.

00:00:49.756 --> 00:00:51.636 A:middle
UIKit on iPhone and iPad,

00:00:52.046 --> 00:00:54.236 A:middle
TVUIKit which is built on UIKit

00:00:54.286 --> 00:00:55.866 A:middle
for Apple TV, and then on the

00:00:55.866 --> 00:00:57.096 A:middle
watch we use WatchKit.

00:00:58.396 --> 00:00:59.506 A:middle
These UI frameworks were

00:00:59.506 --> 00:01:00.806 A:middle
designed around the strengths

00:00:59.506 --> 00:01:00.806 A:middle
designed around the strengths

00:01:00.806 --> 00:01:01.886 A:middle
and capabilities of the

00:01:01.886 --> 00:01:02.986 A:middle
respective devices.

00:01:03.386 --> 00:01:04.586 A:middle
And so naturally there are some

00:01:04.586 --> 00:01:05.556 A:middle
differences between them.

00:01:06.196 --> 00:01:07.366 A:middle
And historically we haven't been

00:01:07.366 --> 00:01:08.606 A:middle
able to take code written for

00:01:08.606 --> 00:01:10.316 A:middle
one and move it over to another

00:01:10.316 --> 00:01:11.806 A:middle
device without modification.

00:01:12.466 --> 00:01:14.876 A:middle
But for the first time ever,

00:01:14.876 --> 00:01:16.496 A:middle
we're introducing a UI framework

00:01:16.496 --> 00:01:17.936 A:middle
that you can use on any of these

00:01:17.936 --> 00:01:18.536 A:middle
devices.

00:01:19.216 --> 00:01:20.616 A:middle
That's unprecedented and it's a

00:01:20.726 --> 00:01:22.206 A:middle
big opportunity for you as app

00:01:22.236 --> 00:01:22.936 A:middle
developers.

00:01:24.016 --> 00:01:25.246 A:middle
But these devices are so

00:01:25.246 --> 00:01:26.326 A:middle
different so how is it that

00:01:26.326 --> 00:01:27.606 A:middle
we've built one UI framework

00:01:27.606 --> 00:01:29.026 A:middle
that works on all of them?

00:01:30.026 --> 00:01:31.636 A:middle
Well, SwiftUI was built from the

00:01:31.636 --> 00:01:33.216 A:middle
ground up to accommodate many

00:01:33.216 --> 00:01:34.496 A:middle
different UI paradigms.

00:01:34.916 --> 00:01:35.886 A:middle
So whether you're using a

00:01:35.886 --> 00:01:37.726 A:middle
keyboard and mouse, or a multi

00:01:37.726 --> 00:01:39.296 A:middle
touch display, or the Siri

00:01:39.296 --> 00:01:40.776 A:middle
remote, or even the digital

00:01:40.776 --> 00:01:42.326 A:middle
crown on your Apple Watch, or

00:01:42.326 --> 00:01:43.606 A:middle
assistive technologies like

00:01:43.606 --> 00:01:45.176 A:middle
voiceover and switch control,

00:01:45.616 --> 00:01:46.646 A:middle
SwiftUI was designed to

00:01:46.646 --> 00:01:47.946 A:middle
accommodate all of these.

00:01:49.126 --> 00:01:50.726 A:middle
And it has great support for our

00:01:50.726 --> 00:01:51.996 A:middle
platform design conventions out

00:01:51.996 --> 00:01:52.696 A:middle
of the box.

00:01:53.276 --> 00:01:54.536 A:middle
We've brought together experts

00:01:54.536 --> 00:01:56.426 A:middle
from every platform to make sure

00:01:57.016 --> 00:01:59.706 A:middle
that when you use an element in

00:01:59.706 --> 00:02:01.766 A:middle
SwiftUI on a given device that

00:01:59.706 --> 00:02:01.766 A:middle
SwiftUI on a given device that

00:02:01.766 --> 00:02:03.396 A:middle
it looks and feels right at

00:02:03.396 --> 00:02:03.706 A:middle
home.

00:02:04.646 --> 00:02:06.086 A:middle
The result is a system where

00:02:06.086 --> 00:02:07.506 A:middle
your knowledge is transferrable

00:02:07.506 --> 00:02:08.526 A:middle
across devices.

00:02:09.246 --> 00:02:10.436 A:middle
Everything fits together in the

00:02:10.436 --> 00:02:10.996 A:middle
same way.

00:02:11.556 --> 00:02:12.516 A:middle
So even when you're working

00:02:12.576 --> 00:02:14.036 A:middle
with-- you're building support

00:02:14.036 --> 00:02:15.116 A:middle
for some specific piece of

00:02:15.116 --> 00:02:16.356 A:middle
hardware, say the Touch Bar on a

00:02:16.356 --> 00:02:18.026 A:middle
MacBook Pro or the digital crown

00:02:18.026 --> 00:02:19.966 A:middle
on an Apple Watch, or the Siri

00:02:19.966 --> 00:02:21.786 A:middle
remote, the tools for doing this

00:02:21.816 --> 00:02:23.206 A:middle
have a kind of consistency and

00:02:23.206 --> 00:02:24.756 A:middle
familiarity that makes them

00:02:24.756 --> 00:02:25.786 A:middle
really easy to pick up.

00:02:27.156 --> 00:02:28.626 A:middle
Now, on top of just general

00:02:28.626 --> 00:02:31.456 A:middle
design philosophy we also have a

00:02:31.456 --> 00:02:32.936 A:middle
number of elements that are in

00:02:32.936 --> 00:02:34.736 A:middle
common across-- SwiftUI across

00:02:34.736 --> 00:02:35.426 A:middle
all devices.

00:02:35.776 --> 00:02:38.016 A:middle
So for example, every platform

00:02:38.016 --> 00:02:39.316 A:middle
has the idea of a toggle

00:02:39.316 --> 00:02:39.806 A:middle
control.

00:02:40.356 --> 00:02:42.466 A:middle
You've got some kind of piece of

00:02:42.466 --> 00:02:43.526 A:middle
Boolean state that you want to

00:02:43.526 --> 00:02:46.356 A:middle
be able to toggle and you have a

00:02:46.356 --> 00:02:47.436 A:middle
label describing what you're

00:02:47.436 --> 00:02:47.906 A:middle
toggling.

00:02:49.236 --> 00:02:50.926 A:middle
And so even though our

00:02:51.416 --> 00:02:52.996 A:middle
expression of this control could

00:02:52.996 --> 00:02:53.996 A:middle
be very different on each

00:02:53.996 --> 00:02:55.566 A:middle
device-- it might be a switch or

00:02:55.566 --> 00:02:57.146 A:middle
a check box or a toggle button--

00:02:57.546 --> 00:02:59.426 A:middle
we can offer a single API that

00:02:59.426 --> 00:03:00.986 A:middle
describes this on any device.

00:02:59.426 --> 00:03:00.986 A:middle
describes this on any device.

00:03:03.396 --> 00:03:05.676 A:middle
SwiftUI also has a common layout

00:03:05.766 --> 00:03:06.186 A:middle
system.

00:03:06.806 --> 00:03:08.146 A:middle
So when you're using a stack or

00:03:08.146 --> 00:03:10.066 A:middle
a spacer or a padding, these

00:03:10.066 --> 00:03:11.346 A:middle
tools work the same on every

00:03:11.346 --> 00:03:11.846 A:middle
device.

00:03:11.936 --> 00:03:13.196 A:middle
And what that means is that once

00:03:13.196 --> 00:03:14.276 A:middle
you've learned to lay out an

00:03:14.276 --> 00:03:15.596 A:middle
application on one device,

00:03:15.926 --> 00:03:16.796 A:middle
you've learned how to lay out an

00:03:16.796 --> 00:03:21.336 A:middle
application on any.

00:03:21.446 --> 00:03:22.666 A:middle
We also have some more advanced

00:03:22.666 --> 00:03:23.836 A:middle
controls like picker for

00:03:23.836 --> 00:03:24.306 A:middle
example.

00:03:24.686 --> 00:03:26.246 A:middle
Picker picks one element from a

00:03:26.246 --> 00:03:28.946 A:middle
list of many and this control

00:03:28.946 --> 00:03:30.316 A:middle
expresses itself in a variety of

00:03:30.316 --> 00:03:30.556 A:middle
ways.

00:03:30.556 --> 00:03:32.416 A:middle
So on MacOS it might be a pop-up

00:03:32.416 --> 00:03:32.746 A:middle
button.

00:03:33.076 --> 00:03:34.856 A:middle
On iOS or WatchOS it might be

00:03:34.856 --> 00:03:35.896 A:middle
this wheel style picker.

00:03:37.096 --> 00:03:38.786 A:middle
And given how different they

00:03:38.786 --> 00:03:40.016 A:middle
are, you might not use them

00:03:40.016 --> 00:03:41.426 A:middle
completely interchangeably from

00:03:41.426 --> 00:03:42.386 A:middle
device to device.

00:03:42.946 --> 00:03:43.656 A:middle
But the one thing that's

00:03:43.746 --> 00:03:45.366 A:middle
constant is the relationship to

00:03:45.366 --> 00:03:45.846 A:middle
your data.

00:03:47.046 --> 00:03:48.086 A:middle
When you've adapted your model

00:03:48.086 --> 00:03:48.986 A:middle
to work with one of these

00:03:48.986 --> 00:03:50.626 A:middle
controls, you can easily

00:03:50.626 --> 00:03:52.296 A:middle
transplant that from device to

00:03:52.296 --> 00:03:52.936 A:middle
device.

00:03:53.876 --> 00:03:54.946 A:middle
Now we don't have time to go

00:03:54.946 --> 00:03:56.006 A:middle
over all of the different

00:03:56.006 --> 00:03:57.906 A:middle
elements available in SwiftUI so

00:03:57.906 --> 00:03:58.946 A:middle
you should check out the SwiftUI

00:03:58.946 --> 00:04:00.026 A:middle
essentials talk for more

00:03:58.946 --> 00:04:00.026 A:middle
essentials talk for more

00:04:00.026 --> 00:04:01.826 A:middle
information about that.

00:04:02.396 --> 00:04:04.696 A:middle
Now, does that mean that I can

00:04:04.696 --> 00:04:06.446 A:middle
really use SwiftUI to design a

00:04:06.446 --> 00:04:07.806 A:middle
single app that's going to work

00:04:07.806 --> 00:04:09.526 A:middle
great across all these devices?

00:04:10.756 --> 00:04:12.186 A:middle
Is it going to let me write code

00:04:12.186 --> 00:04:14.076 A:middle
to adapt seamlessly from a 4k

00:04:14.076 --> 00:04:15.936 A:middle
television all the way down to a

00:04:15.936 --> 00:04:17.656 A:middle
44 millimeter watch face?

00:04:19.796 --> 00:04:21.156 A:middle
Well of course not.

00:04:23.286 --> 00:04:25.436 A:middle
You know, there's no such thing

00:04:25.436 --> 00:04:27.926 A:middle
as a one size fits all app.

00:04:28.156 --> 00:04:30.386 A:middle
If we decided to just stick to

00:04:30.386 --> 00:04:31.696 A:middle
the common denominator between

00:04:31.696 --> 00:04:33.456 A:middle
all these devices, we'd be

00:04:33.456 --> 00:04:34.686 A:middle
missing out on the things that

00:04:34.686 --> 00:04:35.946 A:middle
make each device great.

00:04:35.946 --> 00:04:38.566 A:middle
And there's no magic abstraction

00:04:38.566 --> 00:04:39.536 A:middle
that can do that for you.

00:04:39.986 --> 00:04:41.116 A:middle
You have to decide what the

00:04:41.116 --> 00:04:43.086 A:middle
right design is for your app on

00:04:43.136 --> 00:04:43.926 A:middle
each device.

00:04:45.266 --> 00:04:46.676 A:middle
Now what SwiftUI can help you

00:04:46.676 --> 00:04:48.576 A:middle
with is you can share your skill

00:04:48.576 --> 00:04:50.036 A:middle
set and toolset that you've

00:04:50.036 --> 00:04:51.656 A:middle
learned building from one device

00:04:51.996 --> 00:04:53.056 A:middle
across many others.

00:04:54.466 --> 00:04:55.966 A:middle
And there are definitely going

00:04:55.966 --> 00:04:57.106 A:middle
to be opportunities to share

00:04:57.106 --> 00:04:59.056 A:middle
code along the way, just where

00:04:59.056 --> 00:04:59.876 A:middle
it makes sense.

00:05:00.436 --> 00:05:02.386 A:middle
And so we think it's kind of

00:05:02.386 --> 00:05:03.276 A:middle
important to think about this

00:05:03.306 --> 00:05:05.036 A:middle
less as write once and run

00:05:05.036 --> 00:05:07.746 A:middle
anywhere and more like learn

00:05:07.746 --> 00:05:09.286 A:middle
once and apply anywhere.

00:05:09.896 --> 00:05:12.516 A:middle
Now to put these principles into

00:05:12.516 --> 00:05:14.406 A:middle
practice, we need to build an

00:05:14.406 --> 00:05:14.546 A:middle
app.

00:05:16.016 --> 00:05:18.146 A:middle
But really it's more like we've

00:05:18.176 --> 00:05:20.096 A:middle
built four apps, one for each of

00:05:20.096 --> 00:05:21.266 A:middle
our platforms.

00:05:22.736 --> 00:05:23.966 A:middle
And the app that we've built is

00:05:23.966 --> 00:05:24.876 A:middle
called Landmarks.

00:05:25.806 --> 00:05:27.006 A:middle
The purpose of Landmarks is to

00:05:27.006 --> 00:05:28.066 A:middle
research and visit landmarks

00:05:28.066 --> 00:05:28.776 A:middle
throughout the country.

00:05:29.516 --> 00:05:31.656 A:middle
We definitely want to look at

00:05:31.656 --> 00:05:32.626 A:middle
photos and get visitor

00:05:32.626 --> 00:05:34.026 A:middle
information about these places.

00:05:34.146 --> 00:05:36.936 A:middle
I think it would be great to get

00:05:36.936 --> 00:05:38.716 A:middle
maps and directions to a

00:05:38.716 --> 00:05:39.406 A:middle
destination.

00:05:40.846 --> 00:05:41.786 A:middle
And if we're planning a trip,

00:05:41.876 --> 00:05:43.066 A:middle
marking favorites is a great

00:05:43.066 --> 00:05:43.346 A:middle
idea.

00:05:43.346 --> 00:05:45.776 A:middle
And when we think about bringing

00:05:45.776 --> 00:05:47.436 A:middle
this app to all of our devices,

00:05:47.676 --> 00:05:49.336 A:middle
we can tell ourselves a story

00:05:49.396 --> 00:05:50.576 A:middle
about how we think the app

00:05:50.706 --> 00:05:52.536 A:middle
belongs and fits on each one.

00:05:53.936 --> 00:05:57.266 A:middle
So for example, on AppleTV it's

00:05:57.266 --> 00:05:58.766 A:middle
a natural place to couch surf

00:05:58.766 --> 00:05:59.616 A:middle
for places to go.

00:06:00.296 --> 00:06:02.296 A:middle
And because it's a big screen

00:06:02.296 --> 00:06:03.276 A:middle
experience, that might be

00:06:03.276 --> 00:06:04.126 A:middle
something that you do with

00:06:04.126 --> 00:06:05.686 A:middle
family or friends or roommates.

00:06:06.326 --> 00:06:08.846 A:middle
And we definitely want to mark

00:06:08.846 --> 00:06:10.246 A:middle
favorites to research later.

00:06:10.866 --> 00:06:13.476 A:middle
And the Mac would be a great

00:06:13.476 --> 00:06:14.876 A:middle
place to do that research.

00:06:15.456 --> 00:06:17.886 A:middle
It's a good place to compare and

00:06:17.886 --> 00:06:20.356 A:middle
contrast info, maybe have some

00:06:20.356 --> 00:06:21.526 A:middle
more advanced sorting and

00:06:21.526 --> 00:06:24.416 A:middle
filtering controls, and really

00:06:24.416 --> 00:06:28.216 A:middle
read up on all the details.

00:06:28.216 --> 00:06:30.146 A:middle
On iPhone, we obviously want

00:06:30.146 --> 00:06:31.196 A:middle
quick information about each

00:06:31.196 --> 00:06:33.276 A:middle
landmark but since it's so

00:06:33.276 --> 00:06:34.426 A:middle
common to navigate with our

00:06:34.426 --> 00:06:36.026 A:middle
phones, we should also be able

00:06:36.026 --> 00:06:37.096 A:middle
to get driving directions as

00:06:37.096 --> 00:06:37.316 A:middle
well.

00:06:38.986 --> 00:06:40.336 A:middle
And iPhone of course is also a

00:06:40.336 --> 00:06:41.636 A:middle
phone so if we need to place a

00:06:41.636 --> 00:06:43.136 A:middle
phone call to call ahead, it's a

00:06:43.136 --> 00:06:45.896 A:middle
natural place to do it.

00:06:46.736 --> 00:06:48.546 A:middle
Finally on Apple Watch, that's

00:06:48.546 --> 00:06:49.746 A:middle
where we want to get at-a-glance

00:06:49.746 --> 00:06:51.226 A:middle
info about what's most important

00:06:51.226 --> 00:06:51.706 A:middle
to us.

00:06:52.226 --> 00:06:55.056 A:middle
And it's the perfect platform to

00:06:55.056 --> 00:06:56.736 A:middle
receive important notifications

00:06:56.736 --> 00:06:57.846 A:middle
when anything changes.

00:06:58.356 --> 00:07:02.046 A:middle
Now the cool thing is that the

00:06:58.356 --> 00:07:02.046 A:middle
Now the cool thing is that the

00:07:02.046 --> 00:07:03.356 A:middle
iOS version of this application

00:07:03.356 --> 00:07:04.576 A:middle
is already available to you

00:07:04.576 --> 00:07:05.116 A:middle
today.

00:07:06.186 --> 00:07:07.536 A:middle
It's part of a new documentation

00:07:07.536 --> 00:07:09.286 A:middle
series to teach you how to view

00:07:09.286 --> 00:07:09.746 A:middle
SwiftUI.

00:07:10.886 --> 00:07:11.816 A:middle
You start from the very

00:07:11.816 --> 00:07:13.156 A:middle
beginning and you can build this

00:07:13.156 --> 00:07:16.816 A:middle
application up step by step.

00:07:17.046 --> 00:07:17.906 A:middle
It's already available for

00:07:17.906 --> 00:07:19.686 A:middle
download today and it's a great

00:07:19.686 --> 00:07:21.366 A:middle
way to learn how to build an iOS

00:07:21.366 --> 00:07:21.506 A:middle
app.

00:07:21.506 --> 00:07:23.586 A:middle
And so as a result, we're going

00:07:23.586 --> 00:07:25.066 A:middle
to be focusing more today on

00:07:25.066 --> 00:07:26.926 A:middle
bringing this application to

00:07:26.926 --> 00:07:28.856 A:middle
AppleTV, Mac, and Apple Watch.

00:07:29.416 --> 00:07:31.496 A:middle
And to start us off on that

00:07:31.496 --> 00:07:32.476 A:middle
journey, I'd like to hand it

00:07:32.476 --> 00:07:33.886 A:middle
over to my colleague Ada Turner

00:07:33.936 --> 00:07:35.456 A:middle
to talk to us about SwiftUI on

00:07:35.456 --> 00:07:35.936 A:middle
AppleTV.

00:07:36.516 --> 00:07:43.086 A:middle
[ Applause ]

00:07:43.586 --> 00:07:44.186 A:middle
&gt;&gt; Thanks Jeff.

00:07:45.136 --> 00:07:48.036 A:middle
Hi. My name is Ada Turner and

00:07:48.036 --> 00:07:49.736 A:middle
I'm really excited to talk to

00:07:49.736 --> 00:07:51.986 A:middle
you today about SwiftUI for

00:07:51.986 --> 00:07:52.826 A:middle
AppleTV.

00:07:54.356 --> 00:07:57.096 A:middle
Designing apps for the TV means

00:07:57.096 --> 00:07:58.546 A:middle
designing for the biggest,

00:07:58.546 --> 00:08:00.896 A:middle
boldest screen in the entire

00:07:58.546 --> 00:08:00.896 A:middle
boldest screen in the entire

00:08:00.896 --> 00:08:02.726 A:middle
home and that comes with some

00:08:02.726 --> 00:08:04.576 A:middle
challenges and considerations

00:08:04.626 --> 00:08:05.906 A:middle
unique to AppleTV.

00:08:06.526 --> 00:08:09.006 A:middle
Luckily, SwiftUI allows you to

00:08:09.006 --> 00:08:11.036 A:middle
create great experiences that

00:08:11.036 --> 00:08:12.466 A:middle
are optimized for the living

00:08:12.466 --> 00:08:14.486 A:middle
room using the same skill set

00:08:14.486 --> 00:08:16.156 A:middle
and toolset that you've learned

00:08:16.286 --> 00:08:17.386 A:middle
when developing for Apple's

00:08:17.386 --> 00:08:18.216 A:middle
other devices.

00:08:19.696 --> 00:08:22.416 A:middle
Today I'd like to focus on three

00:08:22.576 --> 00:08:24.366 A:middle
key points for designing great

00:08:24.366 --> 00:08:26.116 A:middle
experience on the biggest,

00:08:26.196 --> 00:08:27.236 A:middle
boldest screen.

00:08:28.266 --> 00:08:30.656 A:middle
TVOS is a 10 foot experience,

00:08:31.046 --> 00:08:32.275 A:middle
not a mobile experience.

00:08:33.176 --> 00:08:34.736 A:middle
People interact with your apps

00:08:34.976 --> 00:08:36.816 A:middle
using the Siri remote not a

00:08:36.816 --> 00:08:38.296 A:middle
touch screen or a mouse and

00:08:38.296 --> 00:08:38.826 A:middle
keyboard.

00:08:39.486 --> 00:08:41.506 A:middle
And it is especially important

00:08:41.506 --> 00:08:43.176 A:middle
for TVOS apps to have

00:08:43.346 --> 00:08:45.336 A:middle
streamlined navigation so people

00:08:45.336 --> 00:08:46.856 A:middle
can jump right into your app's

00:08:46.856 --> 00:08:47.386 A:middle
content.

00:08:48.636 --> 00:08:51.076 A:middle
Now, what is a 10 foot

00:08:51.076 --> 00:08:51.806 A:middle
experience?

00:08:53.106 --> 00:08:55.986 A:middle
It's this, not this.

00:08:57.546 --> 00:08:59.796 A:middle
Your apps should emphasize rich

00:08:59.866 --> 00:09:02.036 A:middle
and immersive experiences like

00:08:59.866 --> 00:09:02.036 A:middle
and immersive experiences like

00:09:02.036 --> 00:09:04.246 A:middle
beautiful imagery or video as

00:09:04.286 --> 00:09:06.116 A:middle
opposed to accomplishing tasks

00:09:06.586 --> 00:09:08.216 A:middle
like taking notes or getting

00:09:08.216 --> 00:09:08.986 A:middle
directions.

00:09:10.396 --> 00:09:12.576 A:middle
When sharing SwiftUI code with

00:09:12.576 --> 00:09:14.266 A:middle
your AppleTV app from other

00:09:14.266 --> 00:09:16.766 A:middle
devices, carefully consider

00:09:16.766 --> 00:09:18.476 A:middle
which experiences make the most

00:09:18.546 --> 00:09:20.746 A:middle
sense when displayed on a large

00:09:20.746 --> 00:09:23.316 A:middle
screen viewed from across the

00:09:23.316 --> 00:09:26.686 A:middle
room with longer periods of use

00:09:27.506 --> 00:09:29.166 A:middle
and potentially more than one

00:09:29.166 --> 00:09:31.946 A:middle
viewer at a time.

00:09:32.156 --> 00:09:33.606 A:middle
Let's take a look at which

00:09:33.606 --> 00:09:35.096 A:middle
features we decided to support

00:09:35.096 --> 00:09:37.296 A:middle
on Landmarks for TV and which

00:09:37.296 --> 00:09:38.716 A:middle
ones we left on the cutting room

00:09:38.716 --> 00:09:39.136 A:middle
floor.

00:09:40.596 --> 00:09:42.586 A:middle
The easiest choice to make was

00:09:42.586 --> 00:09:43.586 A:middle
to include the gorgeous

00:09:43.666 --> 00:09:45.026 A:middle
photographs of the landmarks

00:09:45.396 --> 00:09:46.716 A:middle
which will look great on the big

00:09:46.766 --> 00:09:47.226 A:middle
screen.

00:09:48.566 --> 00:09:49.936 A:middle
Gathering in the living room to

00:09:49.936 --> 00:09:51.596 A:middle
pick out favorites together is

00:09:51.596 --> 00:09:52.856 A:middle
one of the key features of our

00:09:52.856 --> 00:09:54.746 A:middle
TVOS app so we can't forget

00:09:54.746 --> 00:09:54.946 A:middle
that.

00:09:56.626 --> 00:09:58.486 A:middle
And we'll also include basic

00:09:58.486 --> 00:10:00.246 A:middle
tourism information such as

00:09:58.486 --> 00:10:00.246 A:middle
tourism information such as

00:10:00.246 --> 00:10:02.576 A:middle
hours of information and cost so

00:10:02.576 --> 00:10:04.146 A:middle
that people can make informed

00:10:04.146 --> 00:10:05.466 A:middle
decisions about where they want

00:10:05.466 --> 00:10:06.706 A:middle
to visit as they browse.

00:10:08.386 --> 00:10:10.406 A:middle
Now, although our data supports

00:10:10.446 --> 00:10:12.646 A:middle
it, we decided that we're not

00:10:12.646 --> 00:10:14.426 A:middle
going to include lengthy details

00:10:14.426 --> 00:10:15.676 A:middle
about the history of each

00:10:15.676 --> 00:10:17.876 A:middle
landmark as content like that

00:10:17.876 --> 00:10:19.516 A:middle
really isn't appropriate on the

00:10:19.516 --> 00:10:20.056 A:middle
TV.

00:10:21.116 --> 00:10:22.896 A:middle
We also decided not to include

00:10:22.896 --> 00:10:24.606 A:middle
advanced sorting and filtering

00:10:24.846 --> 00:10:26.246 A:middle
as features like that make a lot

00:10:26.246 --> 00:10:28.346 A:middle
more sense on the Mac or iPad.

00:10:29.296 --> 00:10:31.646 A:middle
And finally, although our data

00:10:31.646 --> 00:10:32.656 A:middle
includes geographical

00:10:32.656 --> 00:10:34.826 A:middle
coordinates, we decided not to

00:10:34.826 --> 00:10:35.876 A:middle
implement geofenced

00:10:35.876 --> 00:10:38.156 A:middle
notifications as traveling with

00:10:38.156 --> 00:10:40.056 A:middle
an actively running TVOS app is

00:10:40.056 --> 00:10:41.636 A:middle
a very rare use case.

00:10:42.236 --> 00:10:44.236 A:middle
[Laughter]

00:10:44.456 --> 00:10:47.666 A:middle
Next, let's talk about focus.

00:10:48.276 --> 00:10:50.656 A:middle
People interact with TVOS apps

00:10:50.656 --> 00:10:52.586 A:middle
using the Siri remote which is

00:10:52.716 --> 00:10:54.326 A:middle
optimized for effortlessly

00:10:54.326 --> 00:10:55.576 A:middle
swiping through your app's

00:10:55.576 --> 00:10:56.086 A:middle
interface.

00:10:56.786 --> 00:10:59.206 A:middle
It is critical that your entire

00:10:59.206 --> 00:11:01.396 A:middle
apps interface be intuitively

00:10:59.206 --> 00:11:01.396 A:middle
apps interface be intuitively

00:11:01.396 --> 00:11:03.026 A:middle
navigable using focus.

00:11:03.916 --> 00:11:06.216 A:middle
Luckily, many of SwiftUI's

00:11:06.286 --> 00:11:08.356 A:middle
standard interface elements such

00:11:08.356 --> 00:11:11.086 A:middle
as lists, buttons, text fields,

00:11:11.206 --> 00:11:13.666 A:middle
and toggles, all work seamlessly

00:11:13.666 --> 00:11:15.986 A:middle
on TVOS, adopting different

00:11:15.986 --> 00:11:18.016 A:middle
appearances and behaviors that

00:11:18.016 --> 00:11:20.356 A:middle
look great on the big screen and

00:11:20.466 --> 00:11:21.966 A:middle
interact using focus.

00:11:23.456 --> 00:11:25.076 A:middle
If you implement your own custom

00:11:25.076 --> 00:11:27.376 A:middle
controls, SwiftUI provides a

00:11:27.516 --> 00:11:29.476 A:middle
focusable view modifier that

00:11:29.476 --> 00:11:31.366 A:middle
allows you to control whether or

00:11:31.366 --> 00:11:33.026 A:middle
not your view can become focused

00:11:33.406 --> 00:11:35.976 A:middle
and execute a block of code when

00:11:35.976 --> 00:11:37.566 A:middle
your view gains or loses focus.

00:11:38.416 --> 00:11:40.246 A:middle
You can also use the on play

00:11:40.246 --> 00:11:42.676 A:middle
pause command and on exit

00:11:42.676 --> 00:11:44.406 A:middle
command view modifiers to

00:11:44.406 --> 00:11:46.146 A:middle
respond to people pressing the

00:11:46.146 --> 00:11:48.316 A:middle
play pause and menu buttons on

00:11:48.316 --> 00:11:49.876 A:middle
the Siri remote when your view

00:11:49.876 --> 00:11:50.586 A:middle
is focused.

00:11:52.716 --> 00:11:53.586 A:middle
Thank you.

00:11:54.176 --> 00:11:57.836 A:middle
[ Applause ]

00:11:58.336 --> 00:12:00.366 A:middle
Finally, let's dive into some

00:11:58.336 --> 00:12:00.366 A:middle
Finally, let's dive into some

00:12:00.366 --> 00:12:02.476 A:middle
best navigation practices on

00:12:02.546 --> 00:12:03.146 A:middle
TVOS.

00:12:05.046 --> 00:12:06.466 A:middle
Long, vertically scrolling

00:12:06.466 --> 00:12:08.556 A:middle
tables of content with deeply

00:12:08.556 --> 00:12:10.756 A:middle
nested levels of navigation work

00:12:10.756 --> 00:12:13.486 A:middle
great on the Mac or iPhone, but

00:12:14.096 --> 00:12:16.146 A:middle
on TVOS people want an

00:12:16.316 --> 00:12:18.036 A:middle
effortless browsing experience

00:12:18.036 --> 00:12:19.596 A:middle
that emphasizes content.

00:12:20.586 --> 00:12:22.686 A:middle
Using SwiftUI's easily

00:12:22.686 --> 00:12:25.096 A:middle
composable stack views, list

00:12:25.096 --> 00:12:27.416 A:middle
views, and scroll views, we can

00:12:27.416 --> 00:12:29.426 A:middle
create an interface like this on

00:12:29.426 --> 00:12:31.836 A:middle
Landmarks for a TV with vertical

00:12:31.836 --> 00:12:33.676 A:middle
stacks of horizontally scrolling

00:12:33.676 --> 00:12:35.396 A:middle
shelves that really take

00:12:35.396 --> 00:12:36.856 A:middle
advantage of the widescreen

00:12:36.856 --> 00:12:39.626 A:middle
display on the TV and allow

00:12:39.626 --> 00:12:40.826 A:middle
people to browse between

00:12:40.826 --> 00:12:42.596 A:middle
different categories without

00:12:42.596 --> 00:12:43.866 A:middle
having to navigate between

00:12:43.866 --> 00:12:44.646 A:middle
different pages.

00:12:46.166 --> 00:12:48.316 A:middle
First, let's take a look at how

00:12:48.316 --> 00:12:49.776 A:middle
we might structure the top level

00:12:49.776 --> 00:12:52.486 A:middle
navigation of a SwiftUI app for

00:12:52.486 --> 00:12:53.226 A:middle
AppleTV.

00:12:54.386 --> 00:12:56.626 A:middle
Tab view is the primary means of

00:12:56.626 --> 00:12:58.856 A:middle
navigation for many TVOS apps.

00:12:59.616 --> 00:13:01.076 A:middle
It allows you to break your

00:12:59.616 --> 00:13:01.076 A:middle
It allows you to break your

00:13:01.076 --> 00:13:02.996 A:middle
app's content up into distinct

00:13:02.996 --> 00:13:04.386 A:middle
categories that are easy to

00:13:04.466 --> 00:13:06.786 A:middle
switch between and provides a

00:13:06.786 --> 00:13:08.796 A:middle
persistent indicator at the top

00:13:08.796 --> 00:13:10.396 A:middle
of each view that lets people

00:13:10.396 --> 00:13:11.616 A:middle
know where they are in your app.

00:13:13.286 --> 00:13:15.396 A:middle
Navigation view allows you to

00:13:15.396 --> 00:13:17.556 A:middle
nest pages of content and

00:13:17.556 --> 00:13:19.236 A:middle
optionally display a navigation

00:13:19.236 --> 00:13:21.206 A:middle
bar with a title or buttons.

00:13:22.756 --> 00:13:24.656 A:middle
I'd like to make a quick note on

00:13:24.656 --> 00:13:26.226 A:middle
structuring your app's top level

00:13:26.226 --> 00:13:29.056 A:middle
navigation on TVOS versus iOS.

00:13:30.516 --> 00:13:33.166 A:middle
On iOS if you use a tabbed view,

00:13:33.166 --> 00:13:34.836 A:middle
it will typically be the top

00:13:34.836 --> 00:13:37.586 A:middle
level view of your app and each

00:13:37.586 --> 00:13:39.656 A:middle
of its child views may be a

00:13:39.656 --> 00:13:41.946 A:middle
navigation view with your app's

00:13:41.946 --> 00:13:43.876 A:middle
content as the navigation view's

00:13:43.876 --> 00:13:44.506 A:middle
root view.

00:13:45.176 --> 00:13:47.016 A:middle
With this structure, when people

00:13:47.016 --> 00:13:48.726 A:middle
navigate deeper into your app's

00:13:48.726 --> 00:13:50.796 A:middle
content, the tab bar will remain

00:13:50.796 --> 00:13:52.576 A:middle
visible allowing people to

00:13:52.576 --> 00:13:55.886 A:middle
easily switch tabs at any time.

00:13:56.076 --> 00:13:58.316 A:middle
Here on photos the tab bar

00:13:58.316 --> 00:14:00.276 A:middle
remains visible on the bottom of

00:13:58.316 --> 00:14:00.276 A:middle
remains visible on the bottom of

00:14:00.276 --> 00:14:02.846 A:middle
the screen after navigating to

00:14:02.846 --> 00:14:06.416 A:middle
the details page so that people

00:14:06.416 --> 00:14:08.686 A:middle
can easily switch tabs without

00:14:08.686 --> 00:14:10.116 A:middle
having to navigate backwards.

00:14:12.516 --> 00:14:17.506 A:middle
However, on TVOS if you use a

00:14:17.506 --> 00:14:19.996 A:middle
tab view you will actually want

00:14:19.996 --> 00:14:21.996 A:middle
to make the navigation view the

00:14:21.996 --> 00:14:24.146 A:middle
top level view of your app and

00:14:24.256 --> 00:14:26.046 A:middle
set its root view to the tab

00:14:26.106 --> 00:14:28.496 A:middle
view with your app's content as

00:14:28.536 --> 00:14:30.186 A:middle
the direct children of the tab

00:14:30.186 --> 00:14:30.456 A:middle
view.

00:14:31.166 --> 00:14:32.776 A:middle
With this structure, when people

00:14:32.776 --> 00:14:34.206 A:middle
navigate deeper into your app's

00:14:34.206 --> 00:14:36.306 A:middle
content, the top bar will

00:14:36.306 --> 00:14:38.156 A:middle
disappear and we want this

00:14:38.196 --> 00:14:40.436 A:middle
behavior because TVOS is all

00:14:40.436 --> 00:14:42.216 A:middle
about full screen experiences

00:14:42.436 --> 00:14:43.706 A:middle
that emphasize your app's

00:14:43.706 --> 00:14:44.246 A:middle
content.

00:14:46.356 --> 00:14:49.246 A:middle
Here on photos for TV the tab

00:14:49.246 --> 00:14:50.826 A:middle
bar disappears when we navigate

00:14:50.826 --> 00:14:52.286 A:middle
deeper into the album's details

00:14:52.286 --> 00:14:54.366 A:middle
so that people can focus on the

00:14:54.366 --> 00:14:58.556 A:middle
contents of the album.

00:14:58.766 --> 00:15:00.776 A:middle
SwiftUI views are highly

00:14:58.766 --> 00:15:00.776 A:middle
SwiftUI views are highly

00:15:00.776 --> 00:15:03.586 A:middle
composable so it's super easy to

00:15:03.586 --> 00:15:05.256 A:middle
rearrange your app's navigation

00:15:05.256 --> 00:15:06.626 A:middle
structure for TVOS.

00:15:07.626 --> 00:15:10.196 A:middle
The nested relationships between

00:15:10.196 --> 00:15:13.526 A:middle
the tab view, navigation views,

00:15:14.996 --> 00:15:17.046 A:middle
and content views, are all

00:15:17.046 --> 00:15:18.836 A:middle
visually indicated by the

00:15:18.836 --> 00:15:22.686 A:middle
inherent structure of your code.

00:15:22.906 --> 00:15:24.706 A:middle
Now, let's put some of these

00:15:24.706 --> 00:15:26.616 A:middle
principles into practice and

00:15:26.666 --> 00:15:28.816 A:middle
tune up landmarks for TV.

00:15:29.916 --> 00:15:31.626 A:middle
First we will no longer be

00:15:31.626 --> 00:15:33.246 A:middle
needing this navigation bar

00:15:33.246 --> 00:15:33.866 A:middle
button title.

00:15:40.536 --> 00:15:43.036 A:middle
Next we'll get rid of this

00:15:43.036 --> 00:15:45.566 A:middle
navigation button and data

00:15:45.566 --> 00:15:46.126 A:middle
header label.

00:15:48.506 --> 00:15:49.826 A:middle
Let's see how this looks.

00:16:05.196 --> 00:16:06.086 A:middle
This is definitely an

00:16:06.086 --> 00:16:07.766 A:middle
improvement but we've got a ways

00:16:07.816 --> 00:16:08.176 A:middle
to go.

00:16:09.056 --> 00:16:11.016 A:middle
This long, vertically scrolling

00:16:11.016 --> 00:16:13.366 A:middle
list doesn't quite feel right on

00:16:13.416 --> 00:16:16.806 A:middle
TVOS so let's use a scroll view

00:16:16.806 --> 00:16:18.796 A:middle
with a nested HStack instead of

00:16:18.796 --> 00:16:18.976 A:middle
a list.

00:16:30.726 --> 00:16:32.796 A:middle
And let's display all of the

00:16:32.796 --> 00:16:34.326 A:middle
landmarks within a category

00:16:35.106 --> 00:16:36.036 A:middle
inside of a row.

00:16:39.876 --> 00:16:41.606 A:middle
Let's take a closer look at the

00:16:42.196 --> 00:16:42.266 A:middle
row.

00:16:43.816 --> 00:16:45.946 A:middle
It's very similar to category

00:16:45.946 --> 00:16:48.016 A:middle
landmarks with the addition of a

00:16:48.016 --> 00:16:50.886 A:middle
VStack containing a header label

00:16:51.286 --> 00:16:53.486 A:middle
and an HStack wrapping the four

00:16:53.486 --> 00:16:54.506 A:middle
each landmarks.

00:16:55.656 --> 00:16:57.996 A:middle
One thing to note here is that

00:16:57.996 --> 00:16:59.466 A:middle
instead of a plain text view,

00:16:59.946 --> 00:17:01.686 A:middle
I'm using a custom view called

00:16:59.946 --> 00:17:01.686 A:middle
I'm using a custom view called

00:17:01.686 --> 00:17:03.976 A:middle
landmark card as the label for

00:17:03.976 --> 00:17:05.906 A:middle
the navigation button and I'm

00:17:05.906 --> 00:17:07.675 A:middle
sharing this view directly with

00:17:07.675 --> 00:17:08.496 A:middle
the iOS app.

00:17:09.526 --> 00:17:10.406 A:middle
Let's give this a run.

00:17:22.086 --> 00:17:23.415 A:middle
This is starting to feel a lot

00:17:23.415 --> 00:17:23.856 A:middle
better.

00:17:24.386 --> 00:17:25.996 A:middle
By changing only a few lines of

00:17:25.996 --> 00:17:29.096 A:middle
code, I now have a nice, big

00:17:29.096 --> 00:17:31.636 A:middle
inviting buttons with images and

00:17:31.636 --> 00:17:33.006 A:middle
a vertically scrolling list that

00:17:33.006 --> 00:17:34.236 A:middle
really takes advantage of the

00:17:34.236 --> 00:17:34.936 A:middle
wide screen.

00:17:36.276 --> 00:17:37.706 A:middle
One thing I'd like to point out

00:17:37.736 --> 00:17:39.226 A:middle
here is that while we're still

00:17:39.226 --> 00:17:41.326 A:middle
using the exact same navigation

00:17:41.326 --> 00:17:43.286 A:middle
button view in landmarks row,

00:17:43.676 --> 00:17:45.196 A:middle
its appearance has changed.

00:17:45.716 --> 00:17:47.286 A:middle
The chevron on the right hand

00:17:47.326 --> 00:17:49.016 A:middle
side of the view is gone and the

00:17:49.016 --> 00:17:50.306 A:middle
background is different.

00:17:50.956 --> 00:17:52.446 A:middle
This is because navigation

00:17:52.446 --> 00:17:54.246 A:middle
button is no longer being

00:17:54.246 --> 00:17:55.936 A:middle
displayed in the list view and

00:17:55.936 --> 00:17:57.676 A:middle
has automatically adapted its

00:17:57.676 --> 00:17:58.156 A:middle
appearance.

00:17:59.446 --> 00:18:01.066 A:middle
Now, while the horizontally

00:17:59.446 --> 00:18:01.066 A:middle
Now, while the horizontally

00:18:01.066 --> 00:18:02.826 A:middle
scrolling content looks great on

00:18:02.826 --> 00:18:04.626 A:middle
the big screen, it might be a

00:18:04.626 --> 00:18:05.986 A:middle
little too horizontal.

00:18:06.566 --> 00:18:07.786 A:middle
Let's vertically stack the

00:18:07.786 --> 00:18:09.786 A:middle
categories by changing the main

00:18:09.786 --> 00:18:10.746 A:middle
view's HStack to a VStack.

00:18:19.126 --> 00:18:21.186 A:middle
And adding a nested scroll view

00:18:21.306 --> 00:18:22.926 A:middle
around the row's HStack.

00:18:31.506 --> 00:18:31.946 A:middle
Let's give this a run.

00:18:40.676 --> 00:18:42.286 A:middle
Ah, this is feeling really,

00:18:42.286 --> 00:18:42.906 A:middle
really great.

00:18:43.536 --> 00:18:45.106 A:middle
It's super easy to browse

00:18:45.106 --> 00:18:47.346 A:middle
between different categories and

00:18:47.636 --> 00:18:49.266 A:middle
browse the landmarks within each

00:18:49.266 --> 00:18:49.876 A:middle
category.

00:18:51.376 --> 00:18:52.806 A:middle
Finally, let's take a look at

00:18:52.806 --> 00:18:54.526 A:middle
the details page.

00:18:55.316 --> 00:18:57.706 A:middle
Well, this beautiful edge to

00:18:57.706 --> 00:18:59.176 A:middle
edge photograph of the landmark

00:18:59.176 --> 00:19:00.896 A:middle
would be looking pretty nice if

00:18:59.176 --> 00:19:00.896 A:middle
would be looking pretty nice if

00:19:00.896 --> 00:19:02.286 A:middle
it wasn't obscured by all of

00:19:02.286 --> 00:19:03.396 A:middle
this high density text.

00:19:04.296 --> 00:19:05.716 A:middle
Let's see what we can do to make

00:19:05.716 --> 00:19:07.036 A:middle
improvements for AppleTV.

00:19:07.036 --> 00:19:09.856 A:middle
So let's take a look at the

00:19:09.856 --> 00:19:10.836 A:middle
details view.

00:19:12.116 --> 00:19:13.216 A:middle
It's a pretty simple view.

00:19:13.826 --> 00:19:15.556 A:middle
We have a background displaying

00:19:15.556 --> 00:19:17.456 A:middle
a photo of the landmark, a

00:19:17.456 --> 00:19:19.376 A:middle
favorites button, and some

00:19:19.376 --> 00:19:20.226 A:middle
historic details.

00:19:21.446 --> 00:19:22.986 A:middle
Let's try displaying tourism

00:19:22.986 --> 00:19:23.476 A:middle
details.

00:19:24.426 --> 00:19:25.386 A:middle
Try one last time.

00:19:33.526 --> 00:19:34.946 A:middle
Ah, that's looking so much

00:19:34.946 --> 00:19:35.306 A:middle
better.

00:19:35.826 --> 00:19:37.596 A:middle
Only the most relevant details

00:19:37.596 --> 00:19:39.536 A:middle
are being displayed with nice

00:19:39.536 --> 00:19:41.006 A:middle
large fonts that are easy to

00:19:41.006 --> 00:19:42.366 A:middle
read from across the room.

00:19:43.416 --> 00:19:44.996 A:middle
We can mark a few landmarks as

00:19:45.056 --> 00:19:46.786 A:middle
favorited for when we do more

00:19:46.786 --> 00:19:48.996 A:middle
detailed research on landmarks

00:19:48.996 --> 00:19:49.626 A:middle
for MacOS.

00:19:52.516 --> 00:19:53.716 A:middle
Now, back to you Jeff.

00:19:54.516 --> 00:19:56.726 A:middle
[Applause]

00:19:57.226 --> 00:19:57.636 A:middle
&gt;&gt; Thanks Ada.

00:19:58.836 --> 00:20:00.496 A:middle
I love that Ada was able to take

00:19:58.836 --> 00:20:00.496 A:middle
I love that Ada was able to take

00:20:01.066 --> 00:20:02.476 A:middle
a pretty standard list-based UI

00:20:02.476 --> 00:20:04.776 A:middle
and really make it feel at home

00:20:04.776 --> 00:20:06.956 A:middle
on AppleTV just by rearranging a

00:20:06.956 --> 00:20:07.596 A:middle
couple of pieces that she

00:20:07.596 --> 00:20:07.956 A:middle
already had.

00:20:08.046 --> 00:20:10.106 A:middle
I think that really shows how

00:20:10.106 --> 00:20:11.416 A:middle
powerful this framework is.

00:20:12.466 --> 00:20:13.586 A:middle
So now let's turn our attention

00:20:13.586 --> 00:20:14.556 A:middle
to MacOS.

00:20:15.586 --> 00:20:17.296 A:middle
Now there's a lot that goes into

00:20:17.296 --> 00:20:18.576 A:middle
making a great Mac app and I

00:20:18.576 --> 00:20:19.806 A:middle
could probably fill the whole

00:20:19.806 --> 00:20:21.746 A:middle
hour if we had it, but I'm going

00:20:21.746 --> 00:20:23.386 A:middle
to focus on a few key points

00:20:23.416 --> 00:20:24.836 A:middle
that SwiftUI can really help you

00:20:24.836 --> 00:20:27.166 A:middle
with-- high information density,

00:20:27.596 --> 00:20:28.816 A:middle
multi windowing support,

00:20:29.286 --> 00:20:31.256 A:middle
keyboard shortcuts, and support

00:20:31.256 --> 00:20:32.526 A:middle
for the MacBook Pro Touch Bar.

00:20:33.086 --> 00:20:35.496 A:middle
Let's start with high

00:20:35.586 --> 00:20:36.536 A:middle
information density.

00:20:39.286 --> 00:20:40.236 A:middle
We generally have a lot of

00:20:40.236 --> 00:20:41.496 A:middle
screen real estate to work with

00:20:41.496 --> 00:20:43.396 A:middle
on the Mac and so we can use

00:20:43.396 --> 00:20:44.756 A:middle
that to provide more information

00:20:44.756 --> 00:20:45.516 A:middle
at a glance.

00:20:46.126 --> 00:20:47.296 A:middle
That can make it easier to make

00:20:47.296 --> 00:20:48.916 A:middle
more, to make better decisions

00:20:48.916 --> 00:20:50.446 A:middle
and make comparisons if you have

00:20:50.446 --> 00:20:52.146 A:middle
all that information all in one

00:20:52.146 --> 00:20:52.706 A:middle
place.

00:20:54.376 --> 00:20:55.976 A:middle
And because we have a precision

00:20:55.976 --> 00:20:57.826 A:middle
pointing device on the Mac, we

00:20:57.826 --> 00:20:59.016 A:middle
can tolerate smaller click

00:20:59.046 --> 00:21:00.766 A:middle
targets and denser controls.

00:20:59.046 --> 00:21:00.766 A:middle
targets and denser controls.

00:21:01.116 --> 00:21:02.366 A:middle
Now that doesn't mean that your

00:21:02.366 --> 00:21:03.726 A:middle
app should look like an airplane

00:21:03.726 --> 00:21:05.116 A:middle
cockpit, but it does mean that

00:21:05.116 --> 00:21:05.846 A:middle
you can provide more

00:21:05.846 --> 00:21:07.416 A:middle
functionality in one place and

00:21:07.416 --> 00:21:09.496 A:middle
leave more room for your

00:21:10.696 --> 00:21:10.976 A:middle
content.

00:21:11.106 --> 00:21:13.456 A:middle
And the Mac is a great place to

00:21:13.456 --> 00:21:15.186 A:middle
read lots of text content if you

00:21:15.186 --> 00:21:16.176 A:middle
have text content.

00:21:17.296 --> 00:21:19.696 A:middle
So app sessions are often longer

00:21:19.696 --> 00:21:21.076 A:middle
on the Mac and you're usually

00:21:21.076 --> 00:21:22.406 A:middle
using it seated so it's very

00:21:22.406 --> 00:21:23.356 A:middle
comfortable to just scroll

00:21:23.356 --> 00:21:27.086 A:middle
through some text and read it.

00:21:27.336 --> 00:21:29.196 A:middle
Now SwiftUI automatically

00:21:29.196 --> 00:21:31.036 A:middle
adjusts the spacing and paddings

00:21:31.036 --> 00:21:32.406 A:middle
between elements to be

00:21:32.406 --> 00:21:34.966 A:middle
appropriate for the Mac.

00:21:35.106 --> 00:21:37.526 A:middle
And you can use the control size

00:21:37.526 --> 00:21:39.446 A:middle
modifier to access the small and

00:21:39.446 --> 00:21:40.926 A:middle
mini sized controls that we have

00:21:40.926 --> 00:21:42.586 A:middle
available on the MacOS system.

00:21:43.006 --> 00:21:44.196 A:middle
And that might be great if you

00:21:44.196 --> 00:21:46.026 A:middle
want to make an entire inspector

00:21:46.366 --> 00:21:47.506 A:middle
use small controls.

00:21:50.686 --> 00:21:51.666 A:middle
Next multi windowing.

00:21:52.646 --> 00:21:53.666 A:middle
You know multiple windows have

00:21:53.666 --> 00:21:55.196 A:middle
been just a staple of the MacUI

00:21:55.196 --> 00:21:57.896 A:middle
for decades, and people love

00:21:57.896 --> 00:21:58.836 A:middle
using multiple windows.

00:21:59.156 --> 00:22:00.366 A:middle
They love using multiple windows

00:21:59.156 --> 00:22:00.366 A:middle
They love using multiple windows

00:22:00.406 --> 00:22:01.716 A:middle
to compare content across

00:22:01.716 --> 00:22:03.406 A:middle
windows side by side.

00:22:04.176 --> 00:22:06.826 A:middle
It's often nice to pull a single

00:22:06.826 --> 00:22:08.406 A:middle
item out into its own window so

00:22:08.406 --> 00:22:09.866 A:middle
you can focus on it in detail.

00:22:10.576 --> 00:22:13.396 A:middle
And many people love organizing

00:22:13.396 --> 00:22:14.626 A:middle
their windows spatially across

00:22:14.656 --> 00:22:16.316 A:middle
their desktop and spaces.

00:22:16.566 --> 00:22:17.836 A:middle
And these are all capabilities

00:22:17.836 --> 00:22:19.246 A:middle
that you unlock if you support

00:22:19.246 --> 00:22:19.946 A:middle
multi windowing.

00:22:20.586 --> 00:22:22.026 A:middle
And SwiftUI makes this super

00:22:22.026 --> 00:22:22.406 A:middle
easy.

00:22:22.456 --> 00:22:24.236 A:middle
I'll show you an example of that

00:22:24.236 --> 00:22:27.736 A:middle
in a little bit.

00:22:27.956 --> 00:22:29.396 A:middle
Next, keyboard shortcuts.

00:22:30.596 --> 00:22:31.746 A:middle
Keyboard shortcuts are an

00:22:31.746 --> 00:22:33.146 A:middle
essential part of a MacUI.

00:22:33.806 --> 00:22:35.546 A:middle
Mac users and especially power

00:22:35.546 --> 00:22:37.406 A:middle
users love using keyboard

00:22:37.406 --> 00:22:38.706 A:middle
shortcuts to access common

00:22:38.706 --> 00:22:40.526 A:middle
actions and just fly through

00:22:40.526 --> 00:22:41.606 A:middle
your app's navigation.

00:22:42.826 --> 00:22:43.756 A:middle
And supporting keyboard

00:22:43.756 --> 00:22:45.356 A:middle
shortcuts in SwiftUI is really

00:22:45.356 --> 00:22:46.366 A:middle
easy and I'm going to show you

00:22:46.426 --> 00:22:47.926 A:middle
an example.

00:22:47.996 --> 00:22:49.156 A:middle
So let's say we have a tab view.

00:22:49.646 --> 00:22:50.756 A:middle
We've got three tabs for

00:22:50.756 --> 00:22:53.186 A:middle
explore, hikes, and tours, and

00:22:53.186 --> 00:22:54.846 A:middle
what we want to do is bind each

00:22:54.846 --> 00:22:56.286 A:middle
of these tabs to command one,

00:22:56.286 --> 00:22:57.776 A:middle
two, and three, so that we can

00:22:57.776 --> 00:22:58.766 A:middle
switch between them really

00:22:58.766 --> 00:22:59.186 A:middle
quickly.

00:23:00.236 --> 00:23:01.406 A:middle
Now when we want to set up a

00:23:01.406 --> 00:23:02.516 A:middle
keyboard shortcut on the Mac,

00:23:02.836 --> 00:23:04.156 A:middle
the first place that we go is

00:23:04.156 --> 00:23:05.496 A:middle
actually the Mac menu bar.

00:23:06.346 --> 00:23:07.316 A:middle
We like to put keyboard

00:23:07.316 --> 00:23:08.796 A:middle
shortcuts into the Mac menu bar

00:23:09.186 --> 00:23:10.116 A:middle
because it makes them more

00:23:10.116 --> 00:23:12.066 A:middle
discoverable and it ensures that

00:23:12.066 --> 00:23:13.656 A:middle
whatever actions we're hooking

00:23:13.656 --> 00:23:15.846 A:middle
up here are also accessible if

00:23:15.846 --> 00:23:17.256 A:middle
you're using just a mouse.

00:23:17.976 --> 00:23:19.776 A:middle
Now you could do this in code.

00:23:19.856 --> 00:23:21.276 A:middle
I've gone ahead and set it up in

00:23:21.276 --> 00:23:22.076 A:middle
my storyboard.

00:23:23.056 --> 00:23:24.606 A:middle
And then what I've done is

00:23:24.606 --> 00:23:26.126 A:middle
defined some commands for each

00:23:26.126 --> 00:23:27.436 A:middle
of these keyboard shortcuts.

00:23:27.686 --> 00:23:31.226 A:middle
A command is just a name for a

00:23:31.226 --> 00:23:33.346 A:middle
command that can be sent through

00:23:33.346 --> 00:23:35.426 A:middle
the SwiftUI hierarchy and we can

00:23:35.426 --> 00:23:37.186 A:middle
use them to wrap the selectors

00:23:37.316 --> 00:23:38.446 A:middle
sent by each of these menu

00:23:38.446 --> 00:23:38.956 A:middle
items.

00:23:42.246 --> 00:23:44.146 A:middle
Putting it all together, all we

00:23:44.146 --> 00:23:45.776 A:middle
have to do is use the on command

00:23:45.776 --> 00:23:47.456 A:middle
modifier attached to the view

00:23:47.456 --> 00:23:48.306 A:middle
that we want to recognize

00:23:48.306 --> 00:23:48.876 A:middle
commands on.

00:23:49.306 --> 00:23:51.576 A:middle
In this case we pass in the

00:23:51.576 --> 00:23:52.726 A:middle
command that we just defined a

00:23:52.726 --> 00:23:54.366 A:middle
moment ago, as what was a block

00:23:54.366 --> 00:23:55.816 A:middle
of code to run when the command

00:23:55.816 --> 00:23:56.376 A:middle
occurs.

00:23:57.746 --> 00:23:58.966 A:middle
Here we're just setting the

00:23:58.966 --> 00:24:00.426 A:middle
selected tab variable that our

00:23:58.966 --> 00:24:00.426 A:middle
selected tab variable that our

00:24:00.426 --> 00:24:01.906 A:middle
tab view is already bound to.

00:24:02.486 --> 00:24:03.386 A:middle
So when we use one of these

00:24:03.416 --> 00:24:04.766 A:middle
commands, the selected tab

00:24:04.766 --> 00:24:06.486 A:middle
variable updates, the tab view

00:24:06.536 --> 00:24:08.286 A:middle
notices and updates itself as

00:24:08.286 --> 00:24:08.576 A:middle
well.

00:24:12.256 --> 00:24:14.026 A:middle
If you want to know more about

00:24:14.206 --> 00:24:15.486 A:middle
recognizing keyboard shortcuts

00:24:15.486 --> 00:24:16.506 A:middle
and other system level

00:24:16.506 --> 00:24:17.796 A:middle
integrations like this you

00:24:17.796 --> 00:24:18.776 A:middle
should check out the integrating

00:24:18.776 --> 00:24:20.186 A:middle
SwiftUI talk from this year.

00:24:22.396 --> 00:24:23.966 A:middle
Finally, the Touch Bar.

00:24:25.286 --> 00:24:26.396 A:middle
The Touch Bar is another great

00:24:26.396 --> 00:24:28.176 A:middle
way to accelerate common actions

00:24:28.176 --> 00:24:28.716 A:middle
on your Mac.

00:24:29.606 --> 00:24:30.636 A:middle
It brings the most common and

00:24:30.636 --> 00:24:32.756 A:middle
contextual actions right at your

00:24:32.756 --> 00:24:33.516 A:middle
fingertips.

00:24:34.066 --> 00:24:36.146 A:middle
And supporting the Touch Bar in

00:24:36.146 --> 00:24:37.816 A:middle
SwiftUI is easier than ever.

00:24:39.246 --> 00:24:40.106 A:middle
I'll show you an example.

00:24:40.866 --> 00:24:42.226 A:middle
We define a Touch Bar in code

00:24:42.356 --> 00:24:43.596 A:middle
and then just like we're

00:24:43.596 --> 00:24:46.336 A:middle
populating a list or a stack, we

00:24:46.336 --> 00:24:47.416 A:middle
just put the elements that we

00:24:47.416 --> 00:24:48.656 A:middle
want in the Touch Bar one by

00:24:48.656 --> 00:24:48.966 A:middle
one.

00:24:50.596 --> 00:24:52.396 A:middle
And when we want to attach this

00:24:52.396 --> 00:24:54.246 A:middle
to a view, we'll just use the

00:24:54.246 --> 00:24:57.116 A:middle
dot Touch Bar modifier, passing

00:24:57.116 --> 00:24:58.156 A:middle
in the Touch Bar that we're just

00:24:58.156 --> 00:24:58.586 A:middle
defined.

00:24:58.586 --> 00:25:00.246 A:middle
And it's that easy.

00:24:58.586 --> 00:25:00.246 A:middle
And it's that easy.

00:25:01.056 --> 00:25:01.966 A:middle
Whenever this view is the

00:25:01.966 --> 00:25:03.546 A:middle
focused view or the nearest

00:25:03.546 --> 00:25:04.936 A:middle
ancestor of the focused view,

00:25:05.056 --> 00:25:06.206 A:middle
these controls will appear in

00:25:06.206 --> 00:25:07.736 A:middle
the Touch Bar hardware.

00:25:10.366 --> 00:25:11.686 A:middle
Now let's go back to our demo so

00:25:11.686 --> 00:25:12.676 A:middle
we can put some of these into

00:25:12.676 --> 00:25:13.896 A:middle
practice for Landmarks for

00:25:13.896 --> 00:25:14.596 A:middle
MacOS.

00:25:18.906 --> 00:25:20.216 A:middle
Okay here we are in Xcode.

00:25:21.606 --> 00:25:22.416 A:middle
Let's just build and run

00:25:22.416 --> 00:25:23.866 A:middle
Landmarks for MacOS so we can

00:25:23.866 --> 00:25:24.816 A:middle
see where we're starting.

00:25:27.636 --> 00:25:30.456 A:middle
Okay, we have a fairly standard

00:25:30.456 --> 00:25:32.306 A:middle
master detail view here where

00:25:32.376 --> 00:25:33.766 A:middle
we've got a list of landmarks on

00:25:33.766 --> 00:25:35.326 A:middle
the left and the details on the

00:25:35.326 --> 00:25:35.596 A:middle
right.

00:25:37.276 --> 00:25:38.496 A:middle
We've also added some filtering

00:25:38.496 --> 00:25:39.936 A:middle
controls so that we can go

00:25:40.066 --> 00:25:42.036 A:middle
filter down by category or we

00:25:42.036 --> 00:25:43.086 A:middle
can choose to see only our

00:25:43.086 --> 00:25:43.706 A:middle
favorites.

00:25:44.306 --> 00:25:47.086 A:middle
Now the really neat thing is

00:25:47.086 --> 00:25:48.506 A:middle
that this list I've got here on

00:25:48.506 --> 00:25:50.016 A:middle
the left side is actually

00:25:50.016 --> 00:25:50.886 A:middle
something that I shared

00:25:50.886 --> 00:25:52.366 A:middle
completely with iOS.

00:25:52.896 --> 00:25:53.606 A:middle
And that was great.

00:25:53.606 --> 00:25:54.716 A:middle
It gave me a really big head

00:25:54.716 --> 00:25:55.936 A:middle
start to making this app.

00:25:56.506 --> 00:25:57.616 A:middle
And I didn't have to do any

00:25:57.616 --> 00:25:58.266 A:middle
adaptation.

00:25:58.266 --> 00:25:59.286 A:middle
I didn't have to adapt it to a

00:25:59.286 --> 00:26:00.486 A:middle
new data source or delegate

00:25:59.286 --> 00:26:00.486 A:middle
new data source or delegate

00:26:00.486 --> 00:26:02.006 A:middle
protocol or anything like that.

00:26:02.436 --> 00:26:03.476 A:middle
I just got it for free.

00:26:04.966 --> 00:26:06.596 A:middle
But I do think that this list

00:26:06.676 --> 00:26:07.916 A:middle
could look better on the Mac.

00:26:08.536 --> 00:26:09.976 A:middle
I wish I could see more elements

00:26:09.976 --> 00:26:11.626 A:middle
in my scroll view at once and

00:26:11.626 --> 00:26:13.066 A:middle
I'd love to have more details in

00:26:13.066 --> 00:26:13.516 A:middle
each row.

00:26:16.286 --> 00:26:17.436 A:middle
Let's start by taking a look at

00:26:17.436 --> 00:26:18.296 A:middle
how this is defined.

00:26:18.956 --> 00:26:22.096 A:middle
In our landmark list we've gone

00:26:22.096 --> 00:26:23.496 A:middle
ahead and actually defined a Mac

00:26:23.596 --> 00:26:25.346 A:middle
landmark list that wraps this

00:26:25.346 --> 00:26:26.856 A:middle
landmark list which is a common

00:26:26.856 --> 00:26:27.736 A:middle
element that I discussed

00:26:27.736 --> 00:26:28.166 A:middle
earlier.

00:26:29.486 --> 00:26:30.496 A:middle
Structuring our project like

00:26:30.536 --> 00:26:32.436 A:middle
this is really handy because it

00:26:32.436 --> 00:26:33.806 A:middle
means that I can still mostly

00:26:33.806 --> 00:26:35.106 A:middle
share the implementation of this

00:26:35.106 --> 00:26:36.706 A:middle
list but it gives me a place to

00:26:36.706 --> 00:26:37.726 A:middle
put my Mac specific

00:26:37.726 --> 00:26:38.576 A:middle
customizations.

00:26:39.126 --> 00:26:41.426 A:middle
Let's follow this to look at how

00:26:41.426 --> 00:26:42.116 A:middle
this is defined.

00:26:42.716 --> 00:26:45.146 A:middle
We have some filter criteria

00:26:45.146 --> 00:26:46.136 A:middle
that just describes the

00:26:46.136 --> 00:26:47.286 A:middle
configuration of our filter

00:26:47.286 --> 00:26:48.186 A:middle
controls that we looked at

00:26:48.186 --> 00:26:48.576 A:middle
earlier.

00:26:49.186 --> 00:26:50.016 A:middle
We have a binding to the

00:26:50.016 --> 00:26:51.486 A:middle
selected landmarks the list-- so

00:26:51.486 --> 00:26:52.796 A:middle
that the list can show and

00:26:52.796 --> 00:26:53.366 A:middle
modify it.

00:26:54.176 --> 00:26:55.376 A:middle
And we have some user data so

00:26:55.406 --> 00:26:56.686 A:middle
that we know what landmarks are

00:26:56.686 --> 00:26:57.196 A:middle
favorited.

00:26:58.346 --> 00:26:59.816 A:middle
And the list is pretty simple.

00:26:59.816 --> 00:27:00.836 A:middle
You've probably seen this a

00:26:59.816 --> 00:27:00.836 A:middle
You've probably seen this a

00:27:00.836 --> 00:27:01.716 A:middle
number of times already.

00:27:01.806 --> 00:27:03.966 A:middle
We have a list we use for each

00:27:03.966 --> 00:27:05.106 A:middle
to iterate over all of our

00:27:05.106 --> 00:27:06.006 A:middle
landmarks to display.

00:27:06.006 --> 00:27:07.926 A:middle
And then we create a landmark

00:27:07.926 --> 00:27:08.676 A:middle
row for each one.

00:27:09.286 --> 00:27:12.156 A:middle
And this is a hard-coded type

00:27:12.156 --> 00:27:12.526 A:middle
here.

00:27:12.526 --> 00:27:13.716 A:middle
It's just, this is the type of

00:27:13.716 --> 00:27:14.676 A:middle
row that we're using right now.

00:27:15.636 --> 00:27:16.876 A:middle
Now we could start doing

00:27:16.876 --> 00:27:18.776 A:middle
something like poundif [assumed

00:27:18.836 --> 00:27:20.626 A:middle
spelling] to exchange what

00:27:20.806 --> 00:27:21.816 A:middle
landmark where we're using on

00:27:21.816 --> 00:27:23.396 A:middle
each OS but I really don't want

00:27:23.396 --> 00:27:24.256 A:middle
to do this as a hack.

00:27:24.426 --> 00:27:25.866 A:middle
I want to build a tool that I

00:27:25.866 --> 00:27:26.666 A:middle
can reuse.

00:27:27.466 --> 00:27:28.526 A:middle
And so let me show you how I'm

00:27:28.526 --> 00:27:28.976 A:middle
going to do that.

00:27:34.476 --> 00:27:39.586 A:middle
So I'm going to redefine this

00:27:43.356 --> 00:27:45.376 A:middle
list to be generic over the type

00:27:45.376 --> 00:27:46.356 A:middle
of landmark row that we're going

00:27:46.356 --> 00:27:46.826 A:middle
to use.

00:27:47.436 --> 00:27:51.726 A:middle
And then I'm going to add a

00:27:51.726 --> 00:27:58.036 A:middle
property which is a closure from

00:27:58.036 --> 00:28:00.306 A:middle
the landmark to the row type

00:27:58.036 --> 00:28:00.306 A:middle
the landmark to the row type

00:28:00.306 --> 00:28:01.326 A:middle
that we've just defined as a

00:28:01.326 --> 00:28:02.666 A:middle
generic type.

00:28:04.086 --> 00:28:06.066 A:middle
And then instead of using a

00:28:06.236 --> 00:28:07.846 A:middle
hard-coded type here I'm going

00:28:07.846 --> 00:28:11.546 A:middle
to delegate the creation of the

00:28:11.596 --> 00:28:13.536 A:middle
row to my block.

00:28:14.326 --> 00:28:17.856 A:middle
Now, to adapt that in my Mac

00:28:17.856 --> 00:28:21.106 A:middle
landmark list, all I have to do

00:28:21.106 --> 00:28:23.776 A:middle
is update my type definition

00:28:23.776 --> 00:28:27.096 A:middle
here, add the closure that I

00:28:27.096 --> 00:28:27.926 A:middle
just described, the row

00:28:27.926 --> 00:28:34.756 A:middle
provider, and return a row type.

00:28:34.946 --> 00:28:36.756 A:middle
Luckily like any good TV demo I

00:28:36.756 --> 00:28:38.206 A:middle
had one baking in the oven all

00:28:38.206 --> 00:28:39.656 A:middle
along so we'll just use that

00:28:40.876 --> 00:28:41.016 A:middle
one.

00:28:44.056 --> 00:28:45.586 A:middle
Let's take a look at how that

00:28:45.586 --> 00:28:46.816 A:middle
looks now.

00:28:49.486 --> 00:28:50.486 A:middle
Now this is a lot better.

00:28:51.206 --> 00:28:52.246 A:middle
My rows are a little bit more

00:28:52.246 --> 00:28:52.766 A:middle
compact.

00:28:53.196 --> 00:28:54.546 A:middle
I've added some more details to

00:28:54.546 --> 00:28:56.186 A:middle
each one and I can even see at a

00:28:56.186 --> 00:28:57.536 A:middle
glance which ones are favorited,

00:28:58.606 --> 00:28:59.516 A:middle
and that's really nice.

00:29:00.086 --> 00:29:01.566 A:middle
And the great thing here is that

00:29:01.566 --> 00:29:02.956 A:middle
my list implementation is still

00:29:02.956 --> 00:29:03.986 A:middle
completely shared.

00:29:04.506 --> 00:29:06.436 A:middle
So if I still had-- if I had

00:29:06.436 --> 00:29:08.236 A:middle
like really advanced filtering,

00:29:08.236 --> 00:29:10.096 A:middle
sorting, or grouping logic, or

00:29:10.096 --> 00:29:11.846 A:middle
if it was especially fancy,

00:29:11.846 --> 00:29:12.706 A:middle
let's say I had some

00:29:12.706 --> 00:29:14.036 A:middle
asynchronous work that was going

00:29:14.036 --> 00:29:15.026 A:middle
to a database or to the

00:29:15.026 --> 00:29:16.826 A:middle
internet, you know personally I

00:29:16.826 --> 00:29:17.896 A:middle
only want to write that code

00:29:17.946 --> 00:29:18.456 A:middle
once.

00:29:18.706 --> 00:29:20.466 A:middle
And now we can and we don't have

00:29:20.496 --> 00:29:22.186 A:middle
to compromise on our design to

00:29:22.186 --> 00:29:22.926 A:middle
do it.

00:29:23.936 --> 00:29:25.676 A:middle
The next thing that I'd love to

00:29:25.676 --> 00:29:27.096 A:middle
be able to do is to double click

00:29:27.096 --> 00:29:28.416 A:middle
one of these rows to pop it out

00:29:28.416 --> 00:29:29.396 A:middle
into its own window.

00:29:29.396 --> 00:29:31.546 A:middle
And that's also really easy.

00:29:31.546 --> 00:29:32.316 A:middle
I'm going to show you how.

00:29:32.996 --> 00:29:34.376 A:middle
The first thing that we need to

00:29:34.376 --> 00:29:37.106 A:middle
do is create a window and on the

00:29:37.106 --> 00:29:38.736 A:middle
Mac, even when we're defining

00:29:38.736 --> 00:29:40.646 A:middle
our views with SwiftUI, we use

00:29:40.646 --> 00:29:42.196 A:middle
AppKit to define our windows.

00:29:45.336 --> 00:29:46.326 A:middle
Now I could do this in my

00:29:46.326 --> 00:29:48.436 A:middle
storyboard but the code is

00:29:48.436 --> 00:29:49.406 A:middle
really short so I'm just going

00:29:49.406 --> 00:29:50.036 A:middle
to show it to you.

00:29:50.896 --> 00:29:52.736 A:middle
We have a window controller and

00:29:53.526 --> 00:29:54.886 A:middle
then I've defined a convenience

00:29:54.886 --> 00:29:56.456 A:middle
initializer that takes a SwiftUI

00:29:56.456 --> 00:29:58.576 A:middle
view, puts it into a hosting

00:29:58.576 --> 00:30:00.456 A:middle
controller, and then creates a

00:29:58.576 --> 00:30:00.456 A:middle
controller, and then creates a

00:30:00.456 --> 00:30:01.716 A:middle
window around that hosting

00:30:01.716 --> 00:30:01.976 A:middle
controller.

00:30:03.286 --> 00:30:04.746 A:middle
I've also written a little bit

00:30:04.746 --> 00:30:06.426 A:middle
of convenience code here that

00:30:06.426 --> 00:30:07.756 A:middle
just keeps track of which

00:30:07.756 --> 00:30:09.316 A:middle
windows exist per landmark

00:30:09.316 --> 00:30:10.876 A:middle
already so that if I double

00:30:10.876 --> 00:30:12.156 A:middle
click on a row that already has

00:30:12.156 --> 00:30:13.456 A:middle
a window, it'll bring the

00:30:13.456 --> 00:30:15.376 A:middle
existing window front instead of

00:30:15.456 --> 00:30:16.766 A:middle
creating a new one every time.

00:30:20.146 --> 00:30:21.486 A:middle
Let's go back to our list and

00:30:21.486 --> 00:30:22.336 A:middle
add this integration.

00:30:23.546 --> 00:30:30.486 A:middle
So, detail-- let's add a quick

00:30:32.006 --> 00:30:32.936 A:middle
convenience method--

00:30:38.596 --> 00:30:42.066 A:middle
shared-- to show a window for a

00:30:42.066 --> 00:30:42.686 A:middle
given landmark.

00:30:43.946 --> 00:30:45.506 A:middle
And then to attach it to my row,

00:30:45.586 --> 00:30:48.496 A:middle
I can just add a tap action with

00:30:48.496 --> 00:30:49.916 A:middle
a count of two because I only

00:30:49.916 --> 00:30:50.816 A:middle
want it to recognize double

00:30:50.816 --> 00:30:54.956 A:middle
clicks, and then in this tap

00:30:54.956 --> 00:30:55.886 A:middle
action I'll call my show detail

00:30:55.886 --> 00:30:56.946 A:middle
for landmark method.

00:31:06.796 --> 00:31:08.546 A:middle
Now, when I double click on my

00:31:08.546 --> 00:31:11.606 A:middle
rows, I can pull them out into

00:31:11.606 --> 00:31:13.006 A:middle
their own windows and I can put

00:31:13.006 --> 00:31:14.006 A:middle
them side by side, arrange them

00:31:14.006 --> 00:31:14.696 A:middle
however I'd like.

00:31:15.236 --> 00:31:16.246 A:middle
And because these are still

00:31:16.246 --> 00:31:18.046 A:middle
AppKit windows I can use all of

00:31:18.046 --> 00:31:19.026 A:middle
the great windowing features

00:31:19.026 --> 00:31:19.736 A:middle
that are built in.

00:31:19.796 --> 00:31:21.446 A:middle
So if I like tabs I can merge

00:31:21.446 --> 00:31:22.556 A:middle
them into tabs and it's just

00:31:22.556 --> 00:31:22.976 A:middle
like that.

00:31:22.976 --> 00:31:24.166 A:middle
I get that completely for free

00:31:24.166 --> 00:31:24.976 A:middle
which is really great.

00:31:25.516 --> 00:31:30.886 A:middle
[ Applause ]

00:31:31.386 --> 00:31:32.566 A:middle
And with that, I think that the

00:31:32.566 --> 00:31:33.446 A:middle
Mac version of this app is

00:31:33.446 --> 00:31:34.666 A:middle
starting to look pretty good so

00:31:34.666 --> 00:31:36.096 A:middle
I'm going to go ahead and go

00:31:36.096 --> 00:31:37.106 A:middle
back to our slides.

00:31:37.106 --> 00:31:40.546 A:middle
So now that we've seen SwiftUI

00:31:40.546 --> 00:31:43.616 A:middle
on AppleTV and Mac, it's time to

00:31:43.616 --> 00:31:44.576 A:middle
turn our attention to Apple

00:31:44.576 --> 00:31:44.986 A:middle
Watch.

00:31:45.486 --> 00:31:46.736 A:middle
You know SwiftUI is the first

00:31:46.736 --> 00:31:47.926 A:middle
truly native framework for

00:31:47.926 --> 00:31:49.236 A:middle
building apps on Apple Watch and

00:31:49.236 --> 00:31:50.346 A:middle
I think it's going to really

00:31:50.516 --> 00:31:52.046 A:middle
broaden our horizons for what's

00:31:52.046 --> 00:31:52.616 A:middle
possible.

00:31:52.976 --> 00:31:53.966 A:middle
And to walk us through some of

00:31:53.966 --> 00:31:55.776 A:middle
those possibilities, I'd like to

00:31:55.776 --> 00:31:56.786 A:middle
hand it over to my colleague

00:31:56.816 --> 00:31:57.176 A:middle
Meghna.

00:31:58.516 --> 00:32:00.556 A:middle
[ Applause ]

00:31:58.516 --> 00:32:00.556 A:middle
[ Applause ]

00:32:01.056 --> 00:32:01.506 A:middle
&gt;&gt; Thank you.

00:32:02.516 --> 00:32:06.276 A:middle
[Applause]

00:32:06.776 --> 00:32:07.616 A:middle
Thanks Jeff.

00:32:08.346 --> 00:32:10.686 A:middle
With SwiftUI and all the amazing

00:32:10.686 --> 00:32:12.686 A:middle
things you've learned so far you

00:32:12.686 --> 00:32:14.186 A:middle
are bound to be on track to

00:32:14.186 --> 00:32:15.646 A:middle
build an app that provides an

00:32:15.716 --> 00:32:17.436 A:middle
awesome experience on all

00:32:17.436 --> 00:32:18.346 A:middle
devices.

00:32:18.946 --> 00:32:21.396 A:middle
Hi, I'm Meghna and now I'm going

00:32:21.396 --> 00:32:22.776 A:middle
to talk to you about bringing

00:32:22.776 --> 00:32:24.226 A:middle
this great experience to your

00:32:24.226 --> 00:32:25.786 A:middle
Apple Watch App.

00:32:26.996 --> 00:32:28.826 A:middle
While your experience may be

00:32:28.876 --> 00:32:30.476 A:middle
rooted in your application,

00:32:30.846 --> 00:32:32.846 A:middle
building for WatchOS means so

00:32:32.846 --> 00:32:33.436 A:middle
much more.

00:32:34.656 --> 00:32:37.446 A:middle
Complications, Siri shortcuts,

00:32:37.666 --> 00:32:40.166 A:middle
and notifications all contribute

00:32:40.166 --> 00:32:41.486 A:middle
to showing the most timely

00:32:41.486 --> 00:32:43.516 A:middle
information right on your Apple

00:32:43.516 --> 00:32:44.166 A:middle
Watch face.

00:32:45.226 --> 00:32:47.226 A:middle
Apple Watch is all about showing

00:32:47.226 --> 00:32:48.496 A:middle
the right information at the

00:32:48.496 --> 00:32:49.106 A:middle
right time.

00:32:50.206 --> 00:32:51.736 A:middle
For the purposes of this talk,

00:32:52.026 --> 00:32:53.796 A:middle
I'm going to focus on the app

00:32:53.796 --> 00:32:54.856 A:middle
and notifications.

00:32:55.526 --> 00:32:58.086 A:middle
We'll start with talking about

00:32:58.086 --> 00:32:59.576 A:middle
how SwiftUI allows you to

00:32:59.576 --> 00:33:01.706 A:middle
display elements and lay out

00:32:59.576 --> 00:33:01.706 A:middle
display elements and lay out

00:33:01.706 --> 00:33:03.746 A:middle
your Apps UI like never before.

00:33:05.126 --> 00:33:06.036 A:middle
But first things first.

00:33:06.036 --> 00:33:08.936 A:middle
A good rule while building an

00:33:08.936 --> 00:33:11.256 A:middle
Apple Watch experience is to aim

00:33:11.256 --> 00:33:13.046 A:middle
for the primary information or

00:33:13.046 --> 00:33:14.976 A:middle
the most critical action to be

00:33:14.976 --> 00:33:16.596 A:middle
available within two or three

00:33:16.596 --> 00:33:16.776 A:middle
taps.

00:33:18.106 --> 00:33:19.726 A:middle
While designing this experience,

00:33:19.996 --> 00:33:22.036 A:middle
the aim isn't to shrink down

00:33:22.036 --> 00:33:23.906 A:middle
your iPhone app but to bring the

00:33:23.906 --> 00:33:26.216 A:middle
most timely and relevant actions

00:33:26.216 --> 00:33:27.856 A:middle
to the context of your wrist.

00:33:28.466 --> 00:33:31.176 A:middle
With that, let's dive into some

00:33:31.236 --> 00:33:33.166 A:middle
SwiftUI simple concepts.

00:33:34.006 --> 00:33:35.426 A:middle
If you have content that exceeds

00:33:35.426 --> 00:33:37.386 A:middle
the bounds of a full screen, you

00:33:37.386 --> 00:33:39.266 A:middle
can wrap it in a SwiftUI scroll

00:33:39.266 --> 00:33:39.766 A:middle
view.

00:33:41.056 --> 00:33:43.166 A:middle
SwiftUI also gives you this

00:33:43.246 --> 00:33:45.236 A:middle
great new digital crown rotation

00:33:45.236 --> 00:33:47.596 A:middle
API which lets you completely

00:33:47.596 --> 00:33:49.396 A:middle
control rotation and haptics.

00:33:49.956 --> 00:33:52.546 A:middle
This API also opens the door to

00:33:52.666 --> 00:33:54.946 A:middle
using the digital crown in all

00:33:54.946 --> 00:33:56.676 A:middle
new ways to modify interface

00:33:56.676 --> 00:33:57.356 A:middle
elements.

00:33:57.666 --> 00:33:59.136 A:middle
This is something that was never

00:33:59.136 --> 00:34:02.196 A:middle
possible before.

00:33:59.136 --> 00:34:02.196 A:middle
possible before.

00:34:02.346 --> 00:34:04.016 A:middle
You're also probably familiar

00:34:04.016 --> 00:34:05.596 A:middle
with groups in WatchKit.

00:34:06.296 --> 00:34:08.666 A:middle
SwiftUI now gives you much more

00:34:08.666 --> 00:34:10.176 A:middle
powerful ways to organize your

00:34:10.176 --> 00:34:12.216 A:middle
content with horizontal and

00:34:12.216 --> 00:34:13.186 A:middle
vertical stacks.

00:34:14.596 --> 00:34:16.666 A:middle
Tabulating information has never

00:34:16.666 --> 00:34:18.866 A:middle
been easier than with lists and

00:34:18.866 --> 00:34:19.976 A:middle
with list sections.

00:34:22.275 --> 00:34:24.886 A:middle
Lastly, identifying what your

00:34:24.886 --> 00:34:26.485 A:middle
users care about the most on

00:34:26.485 --> 00:34:28.716 A:middle
your Apple Watch App will help

00:34:28.716 --> 00:34:30.186 A:middle
you decide what kind of data to

00:34:30.186 --> 00:34:30.666 A:middle
surface.

00:34:31.295 --> 00:34:32.476 A:middle
With the views and controls

00:34:32.476 --> 00:34:34.596 A:middle
provided by SwiftUI, you can

00:34:34.596 --> 00:34:35.985 A:middle
easily build an interface that

00:34:35.985 --> 00:34:37.266 A:middle
conveys the most crucial

00:34:37.266 --> 00:34:39.045 A:middle
information first.

00:34:39.815 --> 00:34:42.326 A:middle
Notifications are a great way to

00:34:42.326 --> 00:34:44.866 A:middle
give timely updates, however,

00:34:45.295 --> 00:34:47.366 A:middle
too much information or content

00:34:47.366 --> 00:34:48.616 A:middle
that isn't useful may lead

00:34:48.646 --> 00:34:50.476 A:middle
people to turn them off for your

00:34:50.476 --> 00:34:50.706 A:middle
app.

00:34:52.335 --> 00:34:54.496 A:middle
SwiftUI gives you the ability to

00:34:54.576 --> 00:34:56.466 A:middle
easily provide intuitive and

00:34:56.466 --> 00:34:58.526 A:middle
beneficial controls so people

00:34:58.526 --> 00:35:00.336 A:middle
can respond from within your app

00:34:58.526 --> 00:35:00.336 A:middle
can respond from within your app

00:35:00.746 --> 00:35:02.136 A:middle
and not have to dismiss the

00:35:02.136 --> 00:35:03.026 A:middle
notification.

00:35:03.996 --> 00:35:05.376 A:middle
Making your notifications

00:35:05.376 --> 00:35:07.666 A:middle
actionable as possible, you can

00:35:07.666 --> 00:35:09.846 A:middle
allow people to quickly respond.

00:35:12.316 --> 00:35:14.346 A:middle
When you send your notification

00:35:14.406 --> 00:35:16.236 A:middle
can be just as important as what

00:35:16.236 --> 00:35:17.056 A:middle
you send in it.

00:35:17.796 --> 00:35:19.376 A:middle
Try to use what you know about

00:35:19.376 --> 00:35:21.576 A:middle
how someone uses your app and

00:35:21.576 --> 00:35:22.956 A:middle
with that information you can

00:35:23.056 --> 00:35:24.836 A:middle
send the most timely information

00:35:24.836 --> 00:35:27.136 A:middle
at the most appropriate time.

00:35:28.436 --> 00:35:30.386 A:middle
With these powerful new SwiftUI

00:35:30.386 --> 00:35:31.986 A:middle
concepts and a better

00:35:31.986 --> 00:35:33.466 A:middle
understanding of what makes a

00:35:33.466 --> 00:35:34.786 A:middle
great Apple Watch experience,

00:35:35.286 --> 00:35:36.166 A:middle
let's take a look at the

00:35:36.166 --> 00:35:37.736 A:middle
landmarks app where we put some

00:35:37.736 --> 00:35:39.016 A:middle
of these concepts to use.

00:35:39.086 --> 00:35:42.436 A:middle
Using the app you've built with

00:35:42.436 --> 00:35:44.566 A:middle
SwiftUI for all the other

00:35:44.566 --> 00:35:46.256 A:middle
devices you're going to have a

00:35:46.256 --> 00:35:47.476 A:middle
functional Apple Watch App.

00:35:48.046 --> 00:35:50.126 A:middle
However, it may not be the best

00:35:50.126 --> 00:35:51.206 A:middle
Apple Watch experience.

00:35:51.586 --> 00:35:53.376 A:middle
I'm going to show you how, with

00:35:53.376 --> 00:35:55.986 A:middle
a few tweaks and updates, you're

00:35:55.986 --> 00:35:57.146 A:middle
going to be able to bring this

00:35:57.146 --> 00:35:58.316 A:middle
app more in line with the

00:35:58.316 --> 00:36:00.006 A:middle
context of the wrist.

00:35:58.316 --> 00:36:00.006 A:middle
context of the wrist.

00:36:02.036 --> 00:36:03.436 A:middle
Well the first thing you see

00:36:03.436 --> 00:36:04.996 A:middle
here is that we've built a

00:36:05.226 --> 00:36:06.396 A:middle
landmarks list.

00:36:07.076 --> 00:36:08.596 A:middle
For the watch landmarks, we've

00:36:08.596 --> 00:36:10.056 A:middle
gone ahead and customized the

00:36:10.056 --> 00:36:11.106 A:middle
details cell.

00:36:11.696 --> 00:36:14.716 A:middle
We've included an image for some

00:36:14.716 --> 00:36:15.376 A:middle
context.

00:36:15.996 --> 00:36:17.426 A:middle
We've included some tool details

00:36:17.666 --> 00:36:19.156 A:middle
and we've also added some

00:36:19.156 --> 00:36:20.316 A:middle
contact capabilities.

00:36:21.266 --> 00:36:22.446 A:middle
Now some of these things like

00:36:22.446 --> 00:36:24.106 A:middle
the contact capabilities don't

00:36:24.106 --> 00:36:26.296 A:middle
add too much value to say, an

00:36:26.296 --> 00:36:28.696 A:middle
AppleTV app but they work great

00:36:28.696 --> 00:36:30.566 A:middle
inside an Apple Watch App.

00:36:32.416 --> 00:36:34.466 A:middle
But that was still way too much

00:36:34.466 --> 00:36:36.496 A:middle
content to scroll so what we

00:36:36.496 --> 00:36:38.166 A:middle
decided to do is to narrow it

00:36:38.206 --> 00:36:39.586 A:middle
down to just our favorites.

00:36:40.476 --> 00:36:42.326 A:middle
To do that we created a simple

00:36:42.376 --> 00:36:43.156 A:middle
Swift filter.

00:36:44.666 --> 00:36:46.026 A:middle
Since we've narrowed this data

00:36:46.026 --> 00:36:48.226 A:middle
down, we also wanted users to

00:36:48.226 --> 00:36:49.776 A:middle
have an option to see all the

00:36:49.776 --> 00:36:51.046 A:middle
landmarks if they chose to.

00:36:52.046 --> 00:36:53.686 A:middle
That was possible with adding

00:36:53.686 --> 00:36:54.296 A:middle
this button.

00:36:55.146 --> 00:36:56.616 A:middle
This button simply toggles the

00:36:56.616 --> 00:36:58.226 A:middle
state between showing all and

00:36:58.226 --> 00:37:00.046 A:middle
showing favorites based on the

00:36:58.226 --> 00:37:00.046 A:middle
showing favorites based on the

00:37:00.046 --> 00:37:01.026 A:middle
view that you're in.

00:37:02.026 --> 00:37:03.716 A:middle
SwiftUI gives you this unique

00:37:03.716 --> 00:37:05.486 A:middle
ability to pick the pieces that

00:37:05.486 --> 00:37:07.226 A:middle
interest you for your app and

00:37:07.226 --> 00:37:09.146 A:middle
compose the views that work best

00:37:09.336 --> 00:37:10.326 A:middle
for your interface.

00:37:12.976 --> 00:37:15.306 A:middle
We wanted to be able to focus on

00:37:15.306 --> 00:37:17.306 A:middle
each cell more when we scroll.

00:37:18.176 --> 00:37:20.136 A:middle
With SwiftUI we were able to do

00:37:20.136 --> 00:37:21.736 A:middle
that with the carousel list

00:37:21.736 --> 00:37:22.186 A:middle
style.

00:37:23.236 --> 00:37:24.926 A:middle
This list style is great when

00:37:24.926 --> 00:37:26.716 A:middle
you have a fewer number of cells

00:37:27.206 --> 00:37:28.516 A:middle
or when you have cells with

00:37:28.546 --> 00:37:29.766 A:middle
interactive controls.

00:37:30.556 --> 00:37:33.266 A:middle
Here our cell has buttons for

00:37:33.266 --> 00:37:35.426 A:middle
contacting, for making a phone

00:37:35.426 --> 00:37:37.756 A:middle
call, for adding or removing the

00:37:37.756 --> 00:37:39.556 A:middle
landmark from favorites, and

00:37:39.556 --> 00:37:41.016 A:middle
having some navigation

00:37:41.086 --> 00:37:41.826 A:middle
capabilities.

00:37:44.436 --> 00:37:46.526 A:middle
Lastly, notifications.

00:37:47.256 --> 00:37:49.256 A:middle
For the landmarks app we wanted

00:37:49.256 --> 00:37:50.626 A:middle
to notify you when a new tour

00:37:50.626 --> 00:37:51.326 A:middle
has been added.

00:37:51.946 --> 00:37:53.556 A:middle
We wanted to add some images so

00:37:53.556 --> 00:37:55.286 A:middle
you can decide if you're

00:37:55.286 --> 00:37:56.516 A:middle
interested in this tour.

00:37:56.996 --> 00:37:58.646 A:middle
And also give you the ability to

00:37:58.886 --> 00:38:00.026 A:middle
book it from within the

00:37:58.886 --> 00:38:00.026 A:middle
book it from within the

00:38:00.026 --> 00:38:00.916 A:middle
notification.

00:38:02.146 --> 00:38:04.336 A:middle
Using the power of Swift, you

00:38:04.336 --> 00:38:06.086 A:middle
not only have the textual

00:38:06.086 --> 00:38:08.286 A:middle
information but you also have

00:38:08.286 --> 00:38:09.876 A:middle
this gorgeous, rich animation

00:38:09.876 --> 00:38:11.206 A:middle
moving the images.

00:38:12.286 --> 00:38:13.606 A:middle
Instead of just talking to you

00:38:13.606 --> 00:38:14.896 A:middle
about it I'm going to show you

00:38:14.896 --> 00:38:16.196 A:middle
how we built this.

00:38:24.336 --> 00:38:25.796 A:middle
So what you see here is that

00:38:25.796 --> 00:38:28.946 A:middle
I've created a structure for a

00:38:28.946 --> 00:38:30.316 A:middle
new tour notification.

00:38:31.066 --> 00:38:32.706 A:middle
Now I've already gone ahead and

00:38:32.706 --> 00:38:34.526 A:middle
hooked this notification up to

00:38:34.526 --> 00:38:36.726 A:middle
my notification controller which

00:38:36.726 --> 00:38:38.996 A:middle
means that whatever is in this

00:38:38.996 --> 00:38:40.876 A:middle
body is what you see inside the

00:38:40.876 --> 00:38:42.526 A:middle
notification after I run this

00:38:42.526 --> 00:38:42.936 A:middle
scheme.

00:38:44.336 --> 00:38:45.426 A:middle
This struct [phonetic] takes in

00:38:45.426 --> 00:38:48.066 A:middle
a landmark as a parameter which

00:38:48.066 --> 00:38:49.256 A:middle
is what the notification will

00:38:49.256 --> 00:38:52.186 A:middle
ideally pass to it.

00:38:52.466 --> 00:38:56.266 A:middle
Now let's go ahead and add some

00:38:56.266 --> 00:38:56.716 A:middle
text.

00:39:08.426 --> 00:39:10.836 A:middle
Okay so what we've done here is

00:39:10.836 --> 00:39:13.416 A:middle
that we've created a stack that

00:39:13.416 --> 00:39:14.396 A:middle
includes some textual

00:39:14.396 --> 00:39:15.106 A:middle
information.

00:39:15.316 --> 00:39:17.166 A:middle
The only reason I have a stack

00:39:17.166 --> 00:39:18.496 A:middle
here is because I'm going to add

00:39:18.586 --> 00:39:20.926 A:middle
some more data inside this.

00:39:29.276 --> 00:39:31.156 A:middle
In here we have decided a struct

00:39:31.196 --> 00:39:33.206 A:middle
called slideshow which takes in

00:39:33.206 --> 00:39:34.436 A:middle
an array of strings.

00:39:35.156 --> 00:39:37.626 A:middle
These strings are image names.

00:39:40.036 --> 00:39:41.696 A:middle
We have a variable which is

00:39:41.696 --> 00:39:43.036 A:middle
called the current index which

00:39:43.036 --> 00:39:44.696 A:middle
is essentially just to track

00:39:45.046 --> 00:39:46.446 A:middle
which image you're on at this

00:39:46.546 --> 00:39:46.926 A:middle
point.

00:39:48.956 --> 00:39:50.696 A:middle
Tour image is a custom

00:39:50.816 --> 00:39:52.046 A:middle
struct that I've created

00:39:52.176 --> 00:39:53.026 A:middle
which is a view.

00:39:53.596 --> 00:39:55.826 A:middle
It takes in an image name that

00:39:55.826 --> 00:39:57.226 A:middle
aligns the image correctly

00:39:57.226 --> 00:39:58.276 A:middle
inside my app.

00:39:59.656 --> 00:40:01.376 A:middle
Let's see how this looks in the

00:39:59.656 --> 00:40:01.376 A:middle
Let's see how this looks in the

00:40:01.526 --> 00:40:02.946 A:middle
previews so far.

00:40:17.456 --> 00:40:19.386 A:middle
Now, the next thing I want to be

00:40:19.386 --> 00:40:24.076 A:middle
able to add here is an ID for an

00:40:24.076 --> 00:40:24.646 A:middle
image.

00:40:25.206 --> 00:40:27.406 A:middle
That way when we animate this we

00:40:27.406 --> 00:40:29.476 A:middle
will have a proper track of what

00:40:29.476 --> 00:40:30.956 A:middle
view needs to be inserted and

00:40:30.956 --> 00:40:31.976 A:middle
what view needs to be removed.

00:40:39.046 --> 00:40:40.686 A:middle
At this point it looks like--

00:40:40.686 --> 00:40:41.836 A:middle
okay we have our text here,

00:40:41.836 --> 00:40:43.456 A:middle
great-- at this point it looks

00:40:43.486 --> 00:40:44.876 A:middle
like we can go ahead and add

00:40:44.876 --> 00:40:46.956 A:middle
this slideshow struct inside our

00:40:46.956 --> 00:40:48.186 A:middle
notifications body.

00:40:50.896 --> 00:40:52.646 A:middle
All right so once this updates

00:40:52.646 --> 00:40:53.796 A:middle
we should be able to see this

00:40:54.006 --> 00:40:54.666 A:middle
view here.

00:40:54.716 --> 00:40:55.906 A:middle
This looks great.

00:40:56.896 --> 00:40:58.256 A:middle
Now like we talked about here,

00:40:58.256 --> 00:40:59.376 A:middle
we should be able to support

00:40:59.376 --> 00:41:01.066 A:middle
multiple images inside this

00:40:59.376 --> 00:41:01.066 A:middle
multiple images inside this

00:41:01.066 --> 00:41:01.456 A:middle
struct.

00:41:01.976 --> 00:41:03.296 A:middle
For that, we would need to

00:41:03.296 --> 00:41:05.366 A:middle
calculate the next index.

00:41:06.716 --> 00:41:10.646 A:middle
Let's go ahead and do that.

00:41:10.846 --> 00:41:12.086 A:middle
Now in here I'm simply

00:41:12.086 --> 00:41:14.606 A:middle
calculating the next index and

00:41:14.606 --> 00:41:16.236 A:middle
I'm updating the current index.

00:41:17.666 --> 00:41:19.886 A:middle
What I also want to do is

00:41:19.886 --> 00:41:22.846 A:middle
animate this change.

00:41:23.046 --> 00:41:24.966 A:middle
With a simple animation, every

00:41:24.966 --> 00:41:27.476 A:middle
time my current index is updated

00:41:27.476 --> 00:41:29.146 A:middle
it will have some fluid string

00:41:29.146 --> 00:41:30.516 A:middle
animation which looks pretty

00:41:30.516 --> 00:41:30.826 A:middle
good.

00:41:33.856 --> 00:41:36.366 A:middle
Now, we've created this but we

00:41:36.366 --> 00:41:37.946 A:middle
haven't actually hooked it up to

00:41:37.946 --> 00:41:38.546 A:middle
anything.

00:41:39.046 --> 00:41:42.856 A:middle
Inside our ZStack ideally what

00:41:42.856 --> 00:41:44.156 A:middle
we'd want is that after a

00:41:44.156 --> 00:41:46.246 A:middle
particular interval in time we'd

00:41:46.246 --> 00:41:47.686 A:middle
want the image to change and

00:41:47.686 --> 00:41:52.116 A:middle
move on to the next image.

00:41:52.456 --> 00:41:55.386 A:middle
So I created an extension on a

00:41:55.386 --> 00:41:56.996 A:middle
view which has a view modifier.

00:41:58.306 --> 00:41:59.956 A:middle
Show next image is a simple view

00:41:59.956 --> 00:42:01.936 A:middle
extension which essentially

00:41:59.956 --> 00:42:01.936 A:middle
extension which essentially

00:42:02.436 --> 00:42:04.426 A:middle
invokes a timer that after every

00:42:04.426 --> 00:42:06.716 A:middle
two seconds switches on to the

00:42:06.716 --> 00:42:07.926 A:middle
next image index.

00:42:10.816 --> 00:42:12.616 A:middle
Now the last thing I want to add

00:42:12.616 --> 00:42:14.566 A:middle
here is this gorgeous slide

00:42:14.566 --> 00:42:17.836 A:middle
transition we saw, which is this

00:42:18.586 --> 00:42:22.496 A:middle
easy command right here.

00:42:22.706 --> 00:42:24.976 A:middle
Okay, let's see how this looks.

00:42:42.716 --> 00:42:44.636 A:middle
Okay so we have these images

00:42:44.826 --> 00:42:45.706 A:middle
scrolling through.

00:42:46.206 --> 00:42:47.906 A:middle
We have some actions that we had

00:42:47.956 --> 00:42:49.186 A:middle
hooked up to the notification

00:42:49.186 --> 00:42:50.106 A:middle
controller before.

00:42:51.536 --> 00:42:52.366 A:middle
As you can see-- [applause]

00:42:53.066 --> 00:42:53.876 A:middle
thank you.

00:42:54.516 --> 00:42:57.576 A:middle
[ Applause ]

00:42:58.076 --> 00:43:00.086 A:middle
Like you see, with very few

00:42:58.076 --> 00:43:00.086 A:middle
Like you see, with very few

00:43:00.086 --> 00:43:02.006 A:middle
changes we were able to create

00:43:02.006 --> 00:43:04.046 A:middle
this gorgeous, rich notification

00:43:04.406 --> 00:43:06.616 A:middle
which in WatchOS was never a

00:43:06.616 --> 00:43:07.706 A:middle
possibility before.

00:43:08.486 --> 00:43:09.946 A:middle
With that, let's go back to

00:43:09.946 --> 00:43:10.096 A:middle
Jeff.

00:43:11.516 --> 00:43:15.886 A:middle
[ Applause ]

00:43:16.386 --> 00:43:17.926 A:middle
&gt;&gt; All right, thank you Meghna.

00:43:18.696 --> 00:43:19.966 A:middle
I think it's so cool to see

00:43:19.966 --> 00:43:21.116 A:middle
something so rich and

00:43:21.116 --> 00:43:22.596 A:middle
interactive appearing just in

00:43:22.596 --> 00:43:24.026 A:middle
the context of a notification.

00:43:24.506 --> 00:43:25.626 A:middle
I think SwiftUI is going to

00:43:25.626 --> 00:43:26.966 A:middle
really broaden the horizons for

00:43:26.966 --> 00:43:28.596 A:middle
what's possible on WatchOS.

00:43:29.186 --> 00:43:31.746 A:middle
Now this has been just a

00:43:31.746 --> 00:43:33.696 A:middle
whirlwind tour so let's kind of

00:43:34.506 --> 00:43:37.036 A:middle
revisit and sum up what we've

00:43:37.036 --> 00:43:37.586 A:middle
learned today.

00:43:38.956 --> 00:43:40.296 A:middle
The first thing is that when

00:43:40.296 --> 00:43:41.516 A:middle
we're thinking about bringing an

00:43:41.516 --> 00:43:43.396 A:middle
application to a given device,

00:43:43.876 --> 00:43:45.646 A:middle
take a design first approach.

00:43:46.216 --> 00:43:47.416 A:middle
This isn't about saying that

00:43:47.416 --> 00:43:48.556 A:middle
I've got this code and I'm going

00:43:48.556 --> 00:43:49.816 A:middle
to try and get it working over

00:43:49.816 --> 00:43:50.136 A:middle
here.

00:43:50.726 --> 00:43:51.906 A:middle
It's thinking about what's the

00:43:51.906 --> 00:43:53.666 A:middle
right expression for my app on

00:43:53.666 --> 00:43:55.006 A:middle
this device and working

00:43:55.006 --> 00:43:58.976 A:middle
backwards from there.

00:43:59.246 --> 00:44:00.476 A:middle
But, you can share some code

00:43:59.246 --> 00:44:00.476 A:middle
But, you can share some code

00:44:00.476 --> 00:44:01.146 A:middle
sometimes.

00:44:01.646 --> 00:44:03.626 A:middle
For example, we didn't really

00:44:03.626 --> 00:44:05.096 A:middle
call it out but every demo that

00:44:05.096 --> 00:44:06.776 A:middle
you saw today is effortlessly

00:44:06.776 --> 00:44:07.816 A:middle
sharing the model code.

00:44:07.996 --> 00:44:09.156 A:middle
The model code has been compiled

00:44:09.156 --> 00:44:10.766 A:middle
into each target identically.

00:44:12.256 --> 00:44:15.006 A:middle
And you can share view code, you

00:44:15.006 --> 00:44:16.246 A:middle
just have to use good judgment

00:44:16.246 --> 00:44:17.106 A:middle
about when you do it.

00:44:17.566 --> 00:44:19.046 A:middle
And SwiftUI can help you along

00:44:19.046 --> 00:44:21.146 A:middle
the way by making it really easy

00:44:21.306 --> 00:44:23.396 A:middle
to re-factor out small, reusable

00:44:23.396 --> 00:44:25.236 A:middle
components that make more sense

00:44:25.236 --> 00:44:26.876 A:middle
to reuse across devices.

00:44:29.146 --> 00:44:31.526 A:middle
And finally, we're not here to

00:44:31.526 --> 00:44:32.926 A:middle
write once and run anywhere.

00:44:33.406 --> 00:44:34.716 A:middle
The real power is in your

00:44:34.716 --> 00:44:35.386 A:middle
knowledge.

00:44:35.806 --> 00:44:37.346 A:middle
When you learn once, you can

00:44:37.346 --> 00:44:39.366 A:middle
apply that to any device and I

00:44:39.366 --> 00:44:40.736 A:middle
think that's really powerful.

00:44:43.286 --> 00:44:44.566 A:middle
As always, this talk lives

00:44:44.566 --> 00:44:44.956 A:middle
online.

00:44:44.956 --> 00:44:45.896 A:middle
There you can see the video

00:44:45.896 --> 00:44:47.286 A:middle
replay and get associated

00:44:47.286 --> 00:44:49.266 A:middle
resources and I want to thank

00:44:49.266 --> 00:44:49.776 A:middle
you for your time.

00:44:49.776 --> 00:44:50.916 A:middle
We cannot wait to see what you

00:44:50.916 --> 00:44:51.636 A:middle
build with SwiftUI.

00:44:52.516 --> 00:45:04.320 A:middle
[ Applause ]
