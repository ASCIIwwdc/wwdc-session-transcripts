WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[ Music ]

00:00:10.516 --> 00:00:15.096 A:middle
[ Applause ]

00:00:15.596 --> 00:00:16.126 A:middle
&gt;&gt; Good morning.

00:00:16.976 --> 00:00:18.406 A:middle
Welcome to Implementing Dark

00:00:18.406 --> 00:00:19.546 A:middle
Mode in iOS.

00:00:19.776 --> 00:00:20.956 A:middle
I'm Kurt. I'll be presenting

00:00:20.956 --> 00:00:21.416 A:middle
with Tyler.

00:00:22.826 --> 00:00:24.356 A:middle
Now, when we added Dark Mode to

00:00:24.356 --> 00:00:26.626 A:middle
iOS 13, we looked at every piece

00:00:26.626 --> 00:00:28.396 A:middle
of the UI and made it look great

00:00:28.856 --> 00:00:30.156 A:middle
in this new dark appearance.

00:00:30.456 --> 00:00:31.776 A:middle
It's a whole new look for iOS.

00:00:32.846 --> 00:00:33.946 A:middle
Now it's your turn.

00:00:34.136 --> 00:00:35.546 A:middle
We're here to help you implement

00:00:35.546 --> 00:00:36.846 A:middle
Dark Mode in your apps.

00:00:37.476 --> 00:00:39.246 A:middle
It's easy and we'll demonstrate

00:00:39.246 --> 00:00:40.296 A:middle
that to you with some live

00:00:40.296 --> 00:00:40.766 A:middle
demos.

00:00:41.856 --> 00:00:43.556 A:middle
It's also built on top of a very

00:00:43.556 --> 00:00:45.216 A:middle
flexible and powerful system.

00:00:45.686 --> 00:00:46.896 A:middle
So whatever you imagine that

00:00:46.896 --> 00:00:47.946 A:middle
your app should look like in

00:00:47.946 --> 00:00:49.606 A:middle
Dark Mode, you can achieve it.

00:00:51.056 --> 00:00:52.096 A:middle
First, let's talk about the

00:00:52.096 --> 00:00:53.236 A:middle
design of Dark Mode.

00:00:53.236 --> 00:00:54.616 A:middle
Now, I'll start by showing an

00:00:54.616 --> 00:00:55.106 A:middle
example.

00:00:56.116 --> 00:00:57.286 A:middle
Here's settings of a very

00:00:57.286 --> 00:00:58.116 A:middle
familiar app.

00:00:58.836 --> 00:01:00.176 A:middle
You see that in Dark Mode, it's

00:00:58.836 --> 00:01:00.176 A:middle
You see that in Dark Mode, it's

00:01:00.176 --> 00:01:01.966 A:middle
the same app in the same layout.

00:01:02.446 --> 00:01:03.496 A:middle
It works the same way.

00:01:03.906 --> 00:01:04.796 A:middle
It just has a different

00:01:04.796 --> 00:01:05.086 A:middle
appearance.

00:01:06.006 --> 00:01:07.506 A:middle
So, we've taken the iOS design

00:01:07.506 --> 00:01:09.226 A:middle
system and extended it for the

00:01:09.226 --> 00:01:09.876 A:middle
dark appearance.

00:01:10.846 --> 00:01:12.156 A:middle
When we did that, we considered

00:01:12.156 --> 00:01:12.676 A:middle
three things.

00:01:14.106 --> 00:01:15.776 A:middle
First and most important,

00:01:16.056 --> 00:01:16.576 A:middle
colors.

00:01:17.226 --> 00:01:19.116 A:middle
iOS apps traditionally have hard

00:01:19.116 --> 00:01:20.716 A:middle
coded all of their colors.

00:01:20.956 --> 00:01:22.776 A:middle
You specify the RGB value of

00:01:22.886 --> 00:01:24.596 A:middle
every piece of your UI.

00:01:25.286 --> 00:01:26.476 A:middle
Now that we have Dark Mode,

00:01:26.476 --> 00:01:27.936 A:middle
almost every one of those colors

00:01:27.936 --> 00:01:28.806 A:middle
needs to change.

00:01:29.356 --> 00:01:30.496 A:middle
And since there are so many

00:01:30.496 --> 00:01:31.526 A:middle
colors, we need to keep

00:01:31.526 --> 00:01:32.116 A:middle
organized.

00:01:33.576 --> 00:01:35.206 A:middle
We do that using semantic

00:01:35.206 --> 00:01:35.746 A:middle
colors.

00:01:35.986 --> 00:01:36.976 A:middle
These are colors that have a

00:01:36.976 --> 00:01:38.666 A:middle
name that explains what they

00:01:38.666 --> 00:01:39.206 A:middle
signify.

00:01:40.026 --> 00:01:41.426 A:middle
Our text label here uses the

00:01:41.426 --> 00:01:42.466 A:middle
color label.

00:01:42.766 --> 00:01:44.136 A:middle
That's a default color for text

00:01:44.136 --> 00:01:44.636 A:middle
and labels.

00:01:45.836 --> 00:01:47.426 A:middle
Our background is system grouped

00:01:47.426 --> 00:01:48.016 A:middle
background.

00:01:48.076 --> 00:01:49.126 A:middle
That's because we're in a

00:01:49.126 --> 00:01:51.316 A:middle
grouped table view, and UI table

00:01:51.316 --> 00:01:52.516 A:middle
view gives us that by default.

00:01:53.866 --> 00:01:55.076 A:middle
Finally for this icon, we're

00:01:55.076 --> 00:01:56.356 A:middle
using system blue.

00:01:56.896 --> 00:01:58.826 A:middle
It's not just pure blue, but

00:01:58.826 --> 00:02:00.306 A:middle
it's tweaked to fit with the

00:01:58.826 --> 00:02:00.306 A:middle
it's tweaked to fit with the

00:02:00.306 --> 00:02:01.216 A:middle
rest of the colors.

00:02:02.156 --> 00:02:04.246 A:middle
So, when we implement UI, we

00:02:04.246 --> 00:02:05.766 A:middle
pick an appropriate semantic

00:02:05.766 --> 00:02:06.976 A:middle
color for each piece.

00:02:08.836 --> 00:02:09.786 A:middle
When we switch back to light

00:02:09.786 --> 00:02:11.226 A:middle
mode, we're still using the same

00:02:11.276 --> 00:02:11.536 A:middle
colors.

00:02:12.186 --> 00:02:13.116 A:middle
But because these colors are

00:02:13.116 --> 00:02:14.886 A:middle
dynamic, they can have different

00:02:14.886 --> 00:02:16.336 A:middle
values in light and dark.

00:02:17.576 --> 00:02:19.116 A:middle
The great thing is when you use

00:02:19.116 --> 00:02:21.076 A:middle
these semantic dynamic colors,

00:02:21.376 --> 00:02:22.986 A:middle
UI kit does the work for you.

00:02:22.986 --> 00:02:24.646 A:middle
You don't have to think about

00:02:24.646 --> 00:02:26.166 A:middle
what mode you're in and you

00:02:26.166 --> 00:02:27.456 A:middle
don't have to do any work when

00:02:27.456 --> 00:02:28.216 A:middle
the mode changes.

00:02:29.676 --> 00:02:30.846 A:middle
Now, our design system provides

00:02:30.846 --> 00:02:32.426 A:middle
a whole new palette of colors.

00:02:32.716 --> 00:02:33.716 A:middle
I'll give some examples.

00:02:34.676 --> 00:02:35.906 A:middle
We have a stack of background

00:02:35.906 --> 00:02:37.286 A:middle
colors here designed to work

00:02:37.316 --> 00:02:37.686 A:middle
together.

00:02:38.676 --> 00:02:40.526 A:middle
System background is the base

00:02:40.566 --> 00:02:42.246 A:middle
background color, it's pure

00:02:42.246 --> 00:02:43.246 A:middle
white in light mode.

00:02:43.246 --> 00:02:44.926 A:middle
That's very familiar, and pure

00:02:44.926 --> 00:02:46.046 A:middle
black in dark mode.

00:02:47.296 --> 00:02:48.356 A:middle
On top of that, there's

00:02:48.356 --> 00:02:50.566 A:middle
secondary and tertiary system

00:02:50.566 --> 00:02:52.196 A:middle
background colors, and these

00:02:52.196 --> 00:02:53.496 A:middle
allow you to structure the

00:02:53.576 --> 00:02:55.216 A:middle
information hierarchy of your

00:02:55.776 --> 00:02:55.856 A:middle
app.

00:02:56.396 --> 00:02:58.146 A:middle
Note that dark mode is not just

00:02:58.146 --> 00:02:59.616 A:middle
a simple inversion of light

00:02:59.616 --> 00:02:59.856 A:middle
mode.

00:03:00.006 --> 00:03:00.916 A:middle
It's more subtle than that.

00:03:02.276 --> 00:03:03.706 A:middle
We use this idea of hierarchy

00:03:03.706 --> 00:03:04.776 A:middle
for text as well.

00:03:05.466 --> 00:03:06.676 A:middle
There's four levels of text

00:03:06.676 --> 00:03:07.876 A:middle
colors and they let you

00:03:07.876 --> 00:03:09.276 A:middle
emphasize which elements are

00:03:09.276 --> 00:03:11.036 A:middle
important relative to others.

00:03:11.946 --> 00:03:13.376 A:middle
For instance, the primary color

00:03:13.376 --> 00:03:14.526 A:middle
might be used for things like

00:03:14.576 --> 00:03:14.926 A:middle
titles.

00:03:15.736 --> 00:03:16.986 A:middle
The secondary color might be

00:03:16.986 --> 00:03:19.386 A:middle
used for subtitles and so on.

00:03:20.436 --> 00:03:22.546 A:middle
The full catalog of colors is in

00:03:22.546 --> 00:03:23.856 A:middle
the human interface guidelines,

00:03:24.396 --> 00:03:25.976 A:middle
what they are and when to use

00:03:25.976 --> 00:03:26.136 A:middle
them.

00:03:26.896 --> 00:03:28.456 A:middle
And we provide a lot of colors

00:03:28.806 --> 00:03:30.066 A:middle
but you will need to make your

00:03:30.066 --> 00:03:30.236 A:middle
own.

00:03:30.946 --> 00:03:32.016 A:middle
You can make your own dynamic

00:03:32.016 --> 00:03:33.146 A:middle
colors and we'll show you how to

00:03:33.146 --> 00:03:34.066 A:middle
do that a little later.

00:03:35.476 --> 00:03:36.656 A:middle
Now, let's move on to the second

00:03:36.656 --> 00:03:37.816 A:middle
part of our design system -

00:03:37.886 --> 00:03:38.516 A:middle
materials.

00:03:39.126 --> 00:03:40.456 A:middle
Here's an example in photos.

00:03:41.346 --> 00:03:43.196 A:middle
Materials are more than just

00:03:43.196 --> 00:03:43.666 A:middle
colors.

00:03:44.126 --> 00:03:45.826 A:middle
There are blur effects that look

00:03:45.826 --> 00:03:47.616 A:middle
like a translucent material on

00:03:47.616 --> 00:03:48.536 A:middle
top of a background.

00:03:49.446 --> 00:03:51.176 A:middle
On top of that, there's vibrancy

00:03:51.426 --> 00:03:53.016 A:middle
that cuts through the blur and

00:03:53.016 --> 00:03:53.586 A:middle
stands out.

00:03:53.586 --> 00:03:55.796 A:middle
Of course these look good on top

00:03:55.796 --> 00:03:58.026 A:middle
of any photo that we have, and

00:03:58.026 --> 00:03:59.916 A:middle
they work in dark and in light

00:03:59.916 --> 00:04:00.156 A:middle
mode.

00:03:59.916 --> 00:04:00.156 A:middle
mode.

00:04:01.716 --> 00:04:03.206 A:middle
The third part of the design

00:04:03.206 --> 00:04:05.686 A:middle
system is the built-in views and

00:04:05.686 --> 00:04:07.366 A:middle
controls provided by UIKit.

00:04:08.136 --> 00:04:09.406 A:middle
These are made using the same

00:04:09.406 --> 00:04:10.966 A:middle
colors and the same materials.

00:04:11.226 --> 00:04:12.706 A:middle
Everything has been designed to

00:04:12.706 --> 00:04:13.406 A:middle
fit together.

00:04:15.156 --> 00:04:16.755 A:middle
So, when you design your app for

00:04:16.755 --> 00:04:18.276 A:middle
Dark Mode, before you touch a

00:04:18.276 --> 00:04:20.375 A:middle
single line of code, learn this

00:04:20.406 --> 00:04:22.256 A:middle
design system and figure out how

00:04:22.256 --> 00:04:23.376 A:middle
to take advantage of what it

00:04:23.416 --> 00:04:23.866 A:middle
provides.

00:04:25.036 --> 00:04:26.896 A:middle
Then, figure out what you'd like

00:04:26.896 --> 00:04:27.596 A:middle
to customize.

00:04:28.536 --> 00:04:30.616 A:middle
iOS apps have so much diversity

00:04:30.856 --> 00:04:32.166 A:middle
that we can't provide everything

00:04:32.246 --> 00:04:33.766 A:middle
for you, but we do give you the

00:04:33.766 --> 00:04:35.926 A:middle
power to do anything you need.

00:04:37.056 --> 00:04:38.126 A:middle
So, now that you've thought

00:04:38.126 --> 00:04:39.486 A:middle
about your design, let's talk

00:04:39.486 --> 00:04:40.906 A:middle
about how to implement it.

00:04:41.456 --> 00:04:44.256 A:middle
As soon as you build using the

00:04:44.256 --> 00:04:47.236 A:middle
iOS 13 SDK, your app can appear

00:04:47.236 --> 00:04:48.336 A:middle
in Light and Dark.

00:04:49.196 --> 00:04:50.806 A:middle
Switch the device to Dark Mode,

00:04:51.426 --> 00:04:52.826 A:middle
run your app, and see what it

00:04:52.826 --> 00:04:53.316 A:middle
looks like.

00:04:53.816 --> 00:04:55.126 A:middle
The first thing you'll find is

00:04:55.126 --> 00:04:56.546 A:middle
that you do have work to do.

00:04:57.166 --> 00:04:58.256 A:middle
We can't do this for you

00:04:58.256 --> 00:04:58.936 A:middle
automatically.

00:04:59.546 --> 00:05:00.766 A:middle
And ultimately it is your

00:04:59.546 --> 00:05:00.766 A:middle
And ultimately it is your

00:05:00.766 --> 00:05:02.086 A:middle
responsibility to make the

00:05:02.086 --> 00:05:04.206 A:middle
choices to make your app look

00:05:04.206 --> 00:05:05.216 A:middle
good in Dark Mode.

00:05:06.236 --> 00:05:07.096 A:middle
The first thing you'll need to

00:05:07.096 --> 00:05:08.746 A:middle
do is start with colors.

00:05:10.066 --> 00:05:11.696 A:middle
Now in the past, each UI color

00:05:11.696 --> 00:05:13.486 A:middle
had only one single value.

00:05:13.686 --> 00:05:14.776 A:middle
It was always the same.

00:05:15.566 --> 00:05:16.896 A:middle
Now they can be dynamic.

00:05:17.956 --> 00:05:19.066 A:middle
The color can have a different

00:05:19.066 --> 00:05:20.946 A:middle
value in Light Mode and in Dark

00:05:20.946 --> 00:05:21.136 A:middle
Mode.

00:05:22.086 --> 00:05:23.046 A:middle
And when you set one of these

00:05:23.046 --> 00:05:24.716 A:middle
dynamic colors on a view, for

00:05:24.716 --> 00:05:26.286 A:middle
instance, as a background color

00:05:26.526 --> 00:05:28.566 A:middle
or a text color, UIKit will

00:05:28.566 --> 00:05:29.826 A:middle
automatically use the correct

00:05:29.826 --> 00:05:31.876 A:middle
value and will update when the

00:05:31.876 --> 00:05:32.476 A:middle
mode changes.

00:05:33.496 --> 00:05:34.986 A:middle
So, you just set the color once.

00:05:36.006 --> 00:05:37.356 A:middle
If you're familiar with macOS

00:05:37.356 --> 00:05:38.966 A:middle
Dark Mode, this is how NSColor

00:05:38.966 --> 00:05:39.386 A:middle
works.

00:05:39.386 --> 00:05:41.016 A:middle
We're following the exact same

00:05:41.816 --> 00:05:41.966 A:middle
pattern.

00:05:43.046 --> 00:05:43.946 A:middle
So, let's get started.

00:05:43.946 --> 00:05:45.216 A:middle
Let's implement Dark Mode in an

00:05:45.216 --> 00:05:45.316 A:middle
app.

00:05:45.686 --> 00:05:47.006 A:middle
Over to Tyler for a demo.

00:05:48.516 --> 00:05:53.946 A:middle
[ Applause ]

00:05:54.446 --> 00:05:55.706 A:middle
&gt;&gt; Thanks, Kurt.

00:05:58.456 --> 00:05:59.896 A:middle
So, we have a simple demo app

00:05:59.896 --> 00:06:01.216 A:middle
that we put together which was

00:05:59.896 --> 00:06:01.216 A:middle
that we put together which was

00:06:01.216 --> 00:06:02.586 A:middle
originally written against iOS

00:06:02.636 --> 00:06:04.186 A:middle
12, and we want to walk you

00:06:04.186 --> 00:06:05.426 A:middle
through some of the changes that

00:06:05.426 --> 00:06:06.666 A:middle
we'll make to update this to

00:06:06.666 --> 00:06:08.636 A:middle
support Dark Mode in iOS 13.

00:06:10.556 --> 00:06:11.326 A:middle
This should hopefully give you

00:06:11.326 --> 00:06:12.456 A:middle
an idea of some of the types of

00:06:12.456 --> 00:06:13.536 A:middle
changes that you'll be making in

00:06:13.536 --> 00:06:14.266 A:middle
your own apps.

00:06:14.676 --> 00:06:15.996 A:middle
So, here's our app running in a

00:06:15.996 --> 00:06:16.966 A:middle
simulator on the right.

00:06:17.756 --> 00:06:18.386 A:middle
It's pretty simple.

00:06:18.386 --> 00:06:20.066 A:middle
So, why don't we just start by

00:06:20.066 --> 00:06:21.516 A:middle
flipping it into Dark Mode and

00:06:21.516 --> 00:06:22.446 A:middle
seeing how things look.

00:06:23.356 --> 00:06:24.626 A:middle
We can do that using the new

00:06:24.626 --> 00:06:26.466 A:middle
environment overrides feature in

00:06:26.506 --> 00:06:26.916 A:middle
Xcode.

00:06:27.206 --> 00:06:28.306 A:middle
So, we're running from Xcode

00:06:28.306 --> 00:06:28.576 A:middle
here.

00:06:29.006 --> 00:06:30.896 A:middle
We can just apply a dark user

00:06:30.896 --> 00:06:32.346 A:middle
interface dial override by

00:06:32.346 --> 00:06:33.406 A:middle
toggling that switch.

00:06:33.936 --> 00:06:35.746 A:middle
And if you noticed, our app

00:06:35.746 --> 00:06:36.666 A:middle
reacted right away.

00:06:36.736 --> 00:06:37.676 A:middle
It turned into Dark Mode.

00:06:38.706 --> 00:06:39.936 A:middle
Now, you might've noticed that

00:06:39.986 --> 00:06:41.236 A:middle
for example the tab bar at the

00:06:41.236 --> 00:06:42.886 A:middle
bottom of the screen changed.

00:06:43.446 --> 00:06:44.446 A:middle
And that's because we're using a

00:06:44.446 --> 00:06:46.156 A:middle
UIKit standard tab bar, so we

00:06:46.156 --> 00:06:47.156 A:middle
got all of that for free.

00:06:48.066 --> 00:06:49.606 A:middle
But of course our app didn't

00:06:49.606 --> 00:06:51.236 A:middle
rally get very dark and that's

00:06:51.236 --> 00:06:52.336 A:middle
because we have some work to do.

00:06:52.336 --> 00:06:54.586 A:middle
So, why don't we switch over and

00:06:54.586 --> 00:06:56.156 A:middle
take a look at how our UI is

00:06:56.226 --> 00:06:57.196 A:middle
built in the storyboard.

00:06:58.856 --> 00:07:00.226 A:middle
So, here's our home screen of

00:06:58.856 --> 00:07:00.226 A:middle
So, here's our home screen of

00:07:00.226 --> 00:07:00.556 A:middle
our app.

00:07:01.096 --> 00:07:02.116 A:middle
And the first thing that we

00:07:02.116 --> 00:07:03.036 A:middle
should probably take a look at

00:07:03.036 --> 00:07:04.066 A:middle
is why we have this white

00:07:04.126 --> 00:07:05.306 A:middle
background sitting behind

00:07:05.306 --> 00:07:05.756 A:middle
everything.

00:07:06.846 --> 00:07:09.056 A:middle
We can select that view in our

00:07:09.056 --> 00:07:09.846 A:middle
storyboard here.

00:07:10.046 --> 00:07:11.036 A:middle
And if you look in the

00:07:11.036 --> 00:07:12.096 A:middle
attributes inspector on the

00:07:12.096 --> 00:07:13.016 A:middle
right, you can see that we're

00:07:13.016 --> 00:07:14.276 A:middle
setting a hard-coded white

00:07:14.316 --> 00:07:14.706 A:middle
color.

00:07:15.306 --> 00:07:17.026 A:middle
That might've been fine before,

00:07:17.366 --> 00:07:18.396 A:middle
but we now want to switch to

00:07:18.396 --> 00:07:19.926 A:middle
using one of these new dynamic

00:07:19.926 --> 00:07:21.206 A:middle
colors that Kurt talked about.

00:07:21.806 --> 00:07:23.816 A:middle
So, a great choice is the system

00:07:23.816 --> 00:07:24.556 A:middle
background color.

00:07:24.886 --> 00:07:26.086 A:middle
So, you can find all these

00:07:26.186 --> 00:07:27.636 A:middle
system colors in this new list

00:07:27.636 --> 00:07:27.896 A:middle
here.

00:07:27.896 --> 00:07:29.406 A:middle
We'll choose system background.

00:07:30.276 --> 00:07:31.676 A:middle
And nothing actually changed

00:07:31.676 --> 00:07:32.486 A:middle
when we did that, and that's

00:07:32.486 --> 00:07:33.686 A:middle
because system background color

00:07:33.686 --> 00:07:35.376 A:middle
is still white in light mode.

00:07:35.716 --> 00:07:37.506 A:middle
But what we can do is write in

00:07:37.506 --> 00:07:38.876 A:middle
the storyboard editor, switch

00:07:38.876 --> 00:07:40.616 A:middle
our preview to see what it's

00:07:40.616 --> 00:07:41.906 A:middle
going to look like in Dark Mode.

00:07:42.466 --> 00:07:44.706 A:middle
So, if we do that, we can now

00:07:44.706 --> 00:07:46.676 A:middle
see that we're getting a dark

00:07:46.776 --> 00:07:47.666 A:middle
background color here.

00:07:48.266 --> 00:07:50.626 A:middle
But of course, our text just

00:07:50.626 --> 00:07:51.176 A:middle
disappeared.

00:07:51.176 --> 00:07:51.706 A:middle
What happened?

00:07:52.946 --> 00:07:54.366 A:middle
Well, we have black text drawing

00:07:54.366 --> 00:07:55.576 A:middle
on top of a black background.

00:07:56.326 --> 00:07:57.516 A:middle
So, we need to actually go in

00:07:57.516 --> 00:07:59.026 A:middle
here and we can choose, let's

00:07:59.026 --> 00:08:00.276 A:middle
start with the title label.

00:07:59.026 --> 00:08:00.276 A:middle
start with the title label.

00:08:01.326 --> 00:08:03.036 A:middle
And we can see on the right that

00:08:03.036 --> 00:08:04.386 A:middle
we have this configured also

00:08:04.386 --> 00:08:05.816 A:middle
with a hard-coded black color

00:08:05.816 --> 00:08:06.206 A:middle
for the text.

00:08:07.086 --> 00:08:07.906 A:middle
So, once again, we need to

00:08:07.906 --> 00:08:08.906 A:middle
switch that to one of these new

00:08:08.906 --> 00:08:09.786 A:middle
dynamic colors.

00:08:10.426 --> 00:08:12.296 A:middle
In this case, we have a great

00:08:12.296 --> 00:08:13.836 A:middle
choice with the label color.

00:08:14.566 --> 00:08:16.456 A:middle
That's going to give us white in

00:08:16.456 --> 00:08:16.836 A:middle
Dark Mode.

00:08:18.176 --> 00:08:19.456 A:middle
Similarly, we select our text

00:08:19.456 --> 00:08:19.746 A:middle
view.

00:08:20.536 --> 00:08:22.336 A:middle
It's also set to black, so we'll

00:08:22.336 --> 00:08:23.356 A:middle
need to update that as well.

00:08:26.156 --> 00:08:27.306 A:middle
So, now that we've made those

00:08:27.306 --> 00:08:28.696 A:middle
changes, how about we run in the

00:08:28.696 --> 00:08:29.916 A:middle
simulator and see how things are

00:08:29.916 --> 00:08:33.626 A:middle
actually starting to look.

00:08:33.866 --> 00:08:35.385 A:middle
Here's our app running in light

00:08:35.385 --> 00:08:35.616 A:middle
mode.

00:08:36.405 --> 00:08:37.466 A:middle
We'll once again go to those

00:08:37.466 --> 00:08:39.395 A:middle
environment overrides and toggle

00:08:39.395 --> 00:08:39.966 A:middle
it into dark.

00:08:40.686 --> 00:08:42.826 A:middle
And now we're seeing a lot more

00:08:42.826 --> 00:08:43.256 A:middle
updating.

00:08:43.395 --> 00:08:44.796 A:middle
And so it's looking pretty good.

00:08:45.266 --> 00:08:46.396 A:middle
But what if we want to go a

00:08:46.396 --> 00:08:47.096 A:middle
little bit further?

00:08:47.796 --> 00:08:49.476 A:middle
So, at the top we have this star

00:08:49.476 --> 00:08:49.796 A:middle
image.

00:08:49.796 --> 00:08:50.786 A:middle
That's our app's logo.

00:08:51.176 --> 00:08:52.656 A:middle
And we want to customize that

00:08:52.656 --> 00:08:54.446 A:middle
with a different color in Dark

00:08:54.446 --> 00:08:54.676 A:middle
Mode.

00:08:55.816 --> 00:08:57.346 A:middle
So, this is easily possible.

00:08:57.826 --> 00:09:00.316 A:middle
We can select the image in our

00:08:57.826 --> 00:09:00.316 A:middle
We can select the image in our

00:09:00.316 --> 00:09:00.866 A:middle
storyboard.

00:09:01.266 --> 00:09:02.156 A:middle
You'll see this is an image

00:09:02.156 --> 00:09:02.436 A:middle
view.

00:09:02.516 --> 00:09:04.006 A:middle
It's configured with an image

00:09:04.006 --> 00:09:04.886 A:middle
that comes from our asset

00:09:04.886 --> 00:09:05.406 A:middle
catalog.

00:09:06.046 --> 00:09:07.336 A:middle
And this image is set up to

00:09:07.336 --> 00:09:08.536 A:middle
render as a template image,

00:09:08.536 --> 00:09:10.016 A:middle
which means that any tint color

00:09:10.016 --> 00:09:12.086 A:middle
set on the image view is going

00:09:12.086 --> 00:09:13.166 A:middle
to tint the image.

00:09:13.776 --> 00:09:14.886 A:middle
So, here we're tinting it with

00:09:14.936 --> 00:09:16.496 A:middle
this custom logo color that

00:09:16.496 --> 00:09:17.516 A:middle
we've already defined in our

00:09:17.516 --> 00:09:18.256 A:middle
asset catalog.

00:09:18.786 --> 00:09:19.916 A:middle
Let's click this little arrow

00:09:19.916 --> 00:09:21.316 A:middle
right here to jump straight to

00:09:21.316 --> 00:09:23.596 A:middle
that color and see how it's set

00:09:23.596 --> 00:09:23.736 A:middle
up.

00:09:24.346 --> 00:09:25.406 A:middle
So, here's that color.

00:09:25.406 --> 00:09:27.116 A:middle
It's this custom green color.

00:09:27.906 --> 00:09:29.276 A:middle
If we want to add a different

00:09:29.276 --> 00:09:30.956 A:middle
appearance for Dark Mode, we can

00:09:30.956 --> 00:09:32.886 A:middle
do that now by opening up a new

00:09:32.886 --> 00:09:34.836 A:middle
slot specific for the dark

00:09:34.836 --> 00:09:35.436 A:middle
appearance.

00:09:36.706 --> 00:09:38.256 A:middle
Once we've done that, we can

00:09:38.366 --> 00:09:39.496 A:middle
select the dark appearance and

00:09:39.496 --> 00:09:41.016 A:middle
change it, let's say to a nice

00:09:41.186 --> 00:09:42.876 A:middle
yellow perhaps, something like

00:09:42.906 --> 00:09:43.166 A:middle
that.

00:09:44.196 --> 00:09:45.766 A:middle
And now we have a color set up

00:09:45.826 --> 00:09:47.556 A:middle
to automatically switch between

00:09:47.556 --> 00:09:48.446 A:middle
two different appearances in

00:09:48.446 --> 00:09:48.916 A:middle
light and dark.

00:09:50.096 --> 00:09:52.026 A:middle
So, if I save and switch back to

00:09:52.026 --> 00:09:55.076 A:middle
our storyboard, you can see that

00:09:55.076 --> 00:09:57.516 A:middle
as we toggle between light and

00:09:57.516 --> 00:09:59.466 A:middle
dark in the preview, we're

00:09:59.466 --> 00:10:00.816 A:middle
getting that automatic updating,

00:09:59.466 --> 00:10:00.816 A:middle
getting that automatic updating,

00:10:00.986 --> 00:10:01.446 A:middle
which is great.

00:10:03.516 --> 00:10:06.516 A:middle
[ Applause ]

00:10:07.016 --> 00:10:07.606 A:middle
But there's more.

00:10:08.416 --> 00:10:09.336 A:middle
What if we want to actually

00:10:09.336 --> 00:10:10.636 A:middle
update that background image?

00:10:10.636 --> 00:10:11.606 A:middle
So right now it's a nice

00:10:11.606 --> 00:10:12.896 A:middle
tropical beach scene during the

00:10:12.896 --> 00:10:13.286 A:middle
day.

00:10:13.466 --> 00:10:14.596 A:middle
Wouldn't it be cool if it kind

00:10:14.596 --> 00:10:16.646 A:middle
of got to a nice sunset-darkened

00:10:16.646 --> 00:10:18.956 A:middle
appearance in Dark Mode?

00:10:19.746 --> 00:10:20.856 A:middle
We can select that image view

00:10:20.856 --> 00:10:22.096 A:middle
and do something really similar

00:10:22.096 --> 00:10:23.206 A:middle
to what we did with the color.

00:10:23.786 --> 00:10:25.066 A:middle
So, here we have an image view,

00:10:25.066 --> 00:10:26.396 A:middle
it's configured with this header

00:10:26.396 --> 00:10:27.846 A:middle
image in our asset catalog.

00:10:27.846 --> 00:10:29.216 A:middle
We'll click the arrow to jump

00:10:29.216 --> 00:10:29.896 A:middle
directly to that.

00:10:31.376 --> 00:10:32.266 A:middle
Here's where that image is set

00:10:32.266 --> 00:10:32.396 A:middle
up.

00:10:33.066 --> 00:10:34.066 A:middle
And just like you saw with the

00:10:34.066 --> 00:10:35.776 A:middle
color, it's really just the same

00:10:35.776 --> 00:10:36.116 A:middle
thing.

00:10:36.196 --> 00:10:38.216 A:middle
You can open up a new slot for

00:10:38.216 --> 00:10:39.936 A:middle
the dark appearance and then all

00:10:39.936 --> 00:10:42.096 A:middle
we need to do is grab that

00:10:42.896 --> 00:10:45.126 A:middle
sunset image, drag that in.

00:10:46.046 --> 00:10:47.836 A:middle
I'll save and just let's run for

00:10:47.876 --> 00:10:48.846 A:middle
real and see what everything

00:10:48.846 --> 00:10:50.536 A:middle
looks like in the simulator now.

00:10:52.976 --> 00:10:54.446 A:middle
So, this is light mode.

00:10:54.606 --> 00:10:55.476 A:middle
Nothing has changed.

00:10:55.476 --> 00:10:56.806 A:middle
It's all what we started with,

00:10:56.806 --> 00:10:57.816 A:middle
even with all these changes.

00:10:58.326 --> 00:11:00.116 A:middle
But once we flip into Dark using

00:10:58.326 --> 00:11:00.116 A:middle
But once we flip into Dark using

00:11:00.116 --> 00:11:02.496 A:middle
our environment overrides, now

00:11:02.716 --> 00:11:04.076 A:middle
everything on this screen has

00:11:04.076 --> 00:11:05.936 A:middle
been updated to support Dark

00:11:05.936 --> 00:11:06.136 A:middle
Mode.

00:11:07.516 --> 00:11:10.406 A:middle
[ Applause ]

00:11:10.906 --> 00:11:12.356 A:middle
So the really cool thing that

00:11:12.356 --> 00:11:13.946 A:middle
you've seen here is that by

00:11:13.946 --> 00:11:15.076 A:middle
using all of these dynamic

00:11:15.076 --> 00:11:16.666 A:middle
colors and taking advantage of

00:11:16.666 --> 00:11:18.436 A:middle
these dynamic images and custom

00:11:18.436 --> 00:11:20.296 A:middle
colors in the asset catalog, we

00:11:20.296 --> 00:11:21.456 A:middle
were able to get Dark Mode

00:11:21.456 --> 00:11:23.456 A:middle
working without any code.

00:11:24.106 --> 00:11:25.416 A:middle
This is the advantage of taking

00:11:25.416 --> 00:11:26.266 A:middle
advantage of all of this

00:11:26.336 --> 00:11:27.796 A:middle
infrastructure that we provide

00:11:27.796 --> 00:11:29.536 A:middle
for you in Xcode and UIKit.

00:11:30.386 --> 00:11:31.596 A:middle
You can also make these same

00:11:31.596 --> 00:11:33.036 A:middle
sorts of changes to your app's

00:11:33.186 --> 00:11:34.476 A:middle
Launch storyboard to support

00:11:34.476 --> 00:11:36.046 A:middle
Dark Mode when your app is

00:11:36.046 --> 00:11:38.156 A:middle
launching as well.

00:11:38.366 --> 00:11:40.386 A:middle
So, now why don't we take a look

00:11:40.386 --> 00:11:41.846 A:middle
at another screen in our app.

00:11:42.396 --> 00:11:43.866 A:middle
If you tap this Learn More

00:11:43.866 --> 00:11:45.736 A:middle
button, we present a view

00:11:45.856 --> 00:11:47.556 A:middle
controller here in this new

00:11:47.556 --> 00:11:48.746 A:middle
card-style presentation.

00:11:48.746 --> 00:11:49.996 A:middle
And of course we're going to

00:11:49.996 --> 00:11:51.166 A:middle
want to make this support Dark

00:11:51.166 --> 00:11:51.696 A:middle
Mode as well.

00:11:52.066 --> 00:11:53.556 A:middle
The interesting thing here is

00:11:53.556 --> 00:11:54.916 A:middle
that on the bottom half, you can

00:11:54.916 --> 00:11:56.176 A:middle
see we're taking advantage of

00:11:56.176 --> 00:11:57.336 A:middle
some materials.

00:11:57.746 --> 00:11:59.406 A:middle
So, we have a blur over this

00:11:59.446 --> 00:12:00.746 A:middle
background image and then we

00:11:59.446 --> 00:12:00.746 A:middle
background image and then we

00:12:00.746 --> 00:12:02.306 A:middle
have a vibrant label sitting on

00:12:02.306 --> 00:12:02.856 A:middle
top of that.

00:12:03.416 --> 00:12:04.506 A:middle
I'll hand things back over to

00:12:04.556 --> 00:12:05.996 A:middle
Kurt to talk a little bit more

00:12:05.996 --> 00:12:07.316 A:middle
about how you can use these

00:12:07.316 --> 00:12:09.276 A:middle
visual effects to automatically

00:12:09.276 --> 00:12:10.586 A:middle
update for Dark Mode as well.

00:12:14.196 --> 00:12:15.156 A:middle
&gt;&gt; Thank you, Tyler.

00:12:16.016 --> 00:12:18.426 A:middle
[ Applause ]

00:12:18.926 --> 00:12:20.516 A:middle
So, let me show some examples of

00:12:20.516 --> 00:12:21.216 A:middle
these materials.

00:12:21.936 --> 00:12:23.256 A:middle
Here's some new blur effects.

00:12:24.046 --> 00:12:26.356 A:middle
There's thick, regular, thin,

00:12:26.816 --> 00:12:27.976 A:middle
and ultra thin styles.

00:12:28.376 --> 00:12:29.276 A:middle
And of course these work in

00:12:29.276 --> 00:12:30.686 A:middle
light and in dark.

00:12:31.656 --> 00:12:32.736 A:middle
Now here's how to use them.

00:12:33.846 --> 00:12:35.156 A:middle
Let's say in my app I have some

00:12:35.156 --> 00:12:36.806 A:middle
views in the background and I

00:12:36.806 --> 00:12:38.456 A:middle
want a blur on top of them.

00:12:39.206 --> 00:12:40.636 A:middle
First thing we do is create a

00:12:40.636 --> 00:12:43.106 A:middle
UIBlur effect, and we specify a

00:12:43.106 --> 00:12:43.906 A:middle
style.

00:12:44.136 --> 00:12:45.126 A:middle
In this case, we're going to use

00:12:45.126 --> 00:12:46.086 A:middle
system material.

00:12:46.146 --> 00:12:47.396 A:middle
That's a good default choice.

00:12:48.636 --> 00:12:51.046 A:middle
Next, we create a UIVisual

00:12:51.046 --> 00:12:52.756 A:middle
effect view using that effect.

00:12:53.956 --> 00:12:55.346 A:middle
We make sure its size and

00:12:55.346 --> 00:12:56.886 A:middle
position are appropriate, then

00:12:56.886 --> 00:12:58.176 A:middle
we put the visual effect view

00:12:58.286 --> 00:12:59.456 A:middle
into our view hierarchy.

00:13:00.756 --> 00:13:02.196 A:middle
You see that it blurs everything

00:13:02.196 --> 00:13:02.736 A:middle
underneath it.

00:13:02.936 --> 00:13:03.606 A:middle
It's pretty simple.

00:13:05.446 --> 00:13:06.946 A:middle
Now, on top of Blur effects, you

00:13:06.946 --> 00:13:08.286 A:middle
can have vibrant content.

00:13:08.866 --> 00:13:10.166 A:middle
The vibrancy effect let's some

00:13:10.166 --> 00:13:11.416 A:middle
of the background material pass

00:13:11.416 --> 00:13:12.036 A:middle
through.

00:13:12.676 --> 00:13:13.886 A:middle
And in the past, there was only

00:13:13.886 --> 00:13:16.066 A:middle
one style of vibrancy but now

00:13:16.066 --> 00:13:16.756 A:middle
there are several.

00:13:17.286 --> 00:13:18.746 A:middle
There's four styles for text,

00:13:19.456 --> 00:13:21.106 A:middle
three styles for larger filled

00:13:21.106 --> 00:13:23.486 A:middle
areas, and even a style for thin

00:13:23.566 --> 00:13:24.346 A:middle
separator lines.

00:13:25.086 --> 00:13:26.056 A:middle
Of course, these work in light

00:13:26.156 --> 00:13:26.786 A:middle
and in dark.

00:13:28.236 --> 00:13:29.326 A:middle
So, here's how to implement

00:13:29.326 --> 00:13:29.846 A:middle
vibrancy.

00:13:30.726 --> 00:13:32.396 A:middle
Now, vibrancy's always added on

00:13:32.476 --> 00:13:33.946 A:middle
top of Blur, so, we're starting

00:13:33.946 --> 00:13:35.306 A:middle
with the same setup from before.

00:13:36.406 --> 00:13:38.396 A:middle
We'll make a vibrancy effect and

00:13:38.396 --> 00:13:39.776 A:middle
we specify a style.

00:13:40.206 --> 00:13:41.316 A:middle
In this case, I'm using fill

00:13:41.316 --> 00:13:42.186 A:middle
because I'm going to show a

00:13:42.186 --> 00:13:43.116 A:middle
larger filled area.

00:13:44.306 --> 00:13:45.626 A:middle
Note that when you create a

00:13:45.626 --> 00:13:46.976 A:middle
vibrancy effect, you give it a

00:13:46.976 --> 00:13:48.316 A:middle
reference to a Blur effect.

00:13:48.636 --> 00:13:50.156 A:middle
The two things operate together.

00:13:51.606 --> 00:13:52.866 A:middle
To show the vibrancy effect, we

00:13:52.866 --> 00:13:54.456 A:middle
make another visual effect view,

00:13:55.266 --> 00:13:56.576 A:middle
and then we'll put that inside

00:13:56.616 --> 00:13:57.216 A:middle
the Blur effect.

00:13:57.216 --> 00:13:58.626 A:middle
Now, there's something a little

00:13:58.626 --> 00:13:59.776 A:middle
subtle here, is that we don't

00:13:59.776 --> 00:14:01.886 A:middle
ever add views directly as

00:13:59.776 --> 00:14:01.886 A:middle
ever add views directly as

00:14:01.886 --> 00:14:03.466 A:middle
subviews of a visual effect

00:14:03.556 --> 00:14:03.806 A:middle
view.

00:14:04.186 --> 00:14:05.406 A:middle
Instead, we go through its

00:14:05.406 --> 00:14:06.196 A:middle
content view.

00:14:07.566 --> 00:14:08.866 A:middle
Now we'll add the views that

00:14:08.866 --> 00:14:09.786 A:middle
become vibrant.

00:14:10.326 --> 00:14:11.916 A:middle
So again, I get the content view

00:14:12.506 --> 00:14:13.656 A:middle
and then I add the views that

00:14:13.656 --> 00:14:15.026 A:middle
will become vibrant and you see

00:14:15.026 --> 00:14:15.686 A:middle
how it looks.

00:14:16.546 --> 00:14:18.086 A:middle
In this case, our view has an

00:14:18.086 --> 00:14:19.596 A:middle
opaque background color.

00:14:20.256 --> 00:14:21.606 A:middle
But instead of its normal color,

00:14:21.606 --> 00:14:23.056 A:middle
you see the vibrancy effect

00:14:23.056 --> 00:14:23.546 A:middle
instead.

00:14:24.216 --> 00:14:25.006 A:middle
That's because with this

00:14:25.006 --> 00:14:27.096 A:middle
vibrancy style, the color is

00:14:27.096 --> 00:14:29.036 A:middle
ignored and only the alpha is

00:14:29.036 --> 00:14:29.446 A:middle
used.

00:14:30.456 --> 00:14:31.676 A:middle
So, over to Tyler again to

00:14:31.676 --> 00:14:33.136 A:middle
finish adding materials to our

00:14:33.136 --> 00:14:34.426 A:middle
demo app.

00:14:36.516 --> 00:14:41.500 A:middle
[ Applause ]

00:14:44.946 --> 00:14:47.046 A:middle
&gt;&gt; Okay. So, we're back on this

00:14:47.086 --> 00:14:48.926 A:middle
learn more screen and the

00:14:48.926 --> 00:14:50.256 A:middle
difference between this screen

00:14:50.326 --> 00:14:51.366 A:middle
and the last screen that we

00:14:51.366 --> 00:14:52.966 A:middle
worked on is that this one is

00:14:52.966 --> 00:14:54.566 A:middle
actually built entirely in code.

00:14:55.536 --> 00:14:56.936 A:middle
So, here we are in our view

00:14:56.936 --> 00:14:58.476 A:middle
controller, and you can see that

00:14:58.476 --> 00:14:59.556 A:middle
everything's assembled in this

00:14:59.556 --> 00:15:00.296 A:middle
Load View method.

00:14:59.556 --> 00:15:00.296 A:middle
Load View method.

00:15:00.896 --> 00:15:01.966 A:middle
Before we actually get started,

00:15:01.966 --> 00:15:03.196 A:middle
why don't we just try flipping

00:15:03.196 --> 00:15:04.266 A:middle
on Dark Mode and seeing how

00:15:04.266 --> 00:15:04.676 A:middle
things look.

00:15:06.006 --> 00:15:07.606 A:middle
We'll go here to our environment

00:15:07.606 --> 00:15:10.186 A:middle
overrides, switch to Dark, and

00:15:10.466 --> 00:15:11.476 A:middle
if you notice, there's actually

00:15:11.476 --> 00:15:12.516 A:middle
a few things that changed.

00:15:12.806 --> 00:15:14.136 A:middle
We got the navigation bar this

00:15:14.186 --> 00:15:15.296 A:middle
time for free, because that's

00:15:15.296 --> 00:15:16.216 A:middle
coming from UIKit.

00:15:16.906 --> 00:15:18.886 A:middle
We also already have our dynamic

00:15:19.066 --> 00:15:20.986 A:middle
custom color and the custom

00:15:20.986 --> 00:15:22.366 A:middle
image set up, and it's the same

00:15:22.366 --> 00:15:23.656 A:middle
ones that we updated before, so

00:15:23.656 --> 00:15:24.656 A:middle
those are already working as

00:15:24.656 --> 00:15:24.846 A:middle
well.

00:15:25.396 --> 00:15:26.406 A:middle
But of course, you can see we

00:15:26.406 --> 00:15:27.576 A:middle
still have a white background

00:15:27.936 --> 00:15:29.336 A:middle
and those materials don't look

00:15:29.416 --> 00:15:30.876 A:middle
particularly great in the dark

00:15:31.006 --> 00:15:31.676 A:middle
appearance here.

00:15:31.676 --> 00:15:32.306 A:middle
So, we're going to make some

00:15:32.306 --> 00:15:32.676 A:middle
changes.

00:15:33.546 --> 00:15:35.216 A:middle
So, let's take a look at how all

00:15:35.216 --> 00:15:35.796 A:middle
of this is built.

00:15:36.556 --> 00:15:38.206 A:middle
The first thing that we do is

00:15:38.236 --> 00:15:39.466 A:middle
set up this view in the

00:15:39.466 --> 00:15:39.976 A:middle
background.

00:15:39.976 --> 00:15:41.066 A:middle
This is where the white is

00:15:41.066 --> 00:15:41.556 A:middle
coming from.

00:15:41.886 --> 00:15:42.526 A:middle
Just like you saw in the

00:15:42.526 --> 00:15:44.156 A:middle
storyboard, we need to switch to

00:15:44.156 --> 00:15:45.666 A:middle
use one of the new system

00:15:45.666 --> 00:15:46.416 A:middle
background colors.

00:15:46.826 --> 00:15:47.886 A:middle
Let's choose system background

00:15:47.886 --> 00:15:49.306 A:middle
again, just like we did before.

00:15:49.846 --> 00:15:52.746 A:middle
Next we're setting up the star

00:15:52.746 --> 00:15:54.216 A:middle
image, and again, that's using

00:15:54.266 --> 00:15:55.636 A:middle
our asset catalog color.

00:15:55.636 --> 00:15:56.796 A:middle
So, nothing to do there.

00:15:57.876 --> 00:16:00.006 A:middle
Here is the learn more label

00:15:57.876 --> 00:16:00.006 A:middle
Here is the learn more label

00:16:00.006 --> 00:16:01.126 A:middle
that you can see, the title of

00:16:01.186 --> 00:16:02.016 A:middle
this screen.

00:16:02.016 --> 00:16:02.946 A:middle
We're going to need to make a

00:16:02.946 --> 00:16:04.706 A:middle
change because we have the black

00:16:05.066 --> 00:16:06.076 A:middle
hard-coded color here.

00:16:06.696 --> 00:16:07.626 A:middle
And once again, we can just

00:16:07.626 --> 00:16:09.106 A:middle
switch to something like label.

00:16:11.576 --> 00:16:13.516 A:middle
Now, for the bottom half, what

00:16:13.516 --> 00:16:15.316 A:middle
we have going on is an image

00:16:15.316 --> 00:16:16.626 A:middle
view sitting at the very back.

00:16:17.626 --> 00:16:18.366 A:middle
That's right here.

00:16:19.006 --> 00:16:20.556 A:middle
Layered on top of the image view

00:16:20.936 --> 00:16:22.136 A:middle
is a visual effect view

00:16:22.206 --> 00:16:23.536 A:middle
configured with a Blur.

00:16:24.596 --> 00:16:26.146 A:middle
So, that's this light-style

00:16:26.146 --> 00:16:26.496 A:middle
blur.

00:16:27.446 --> 00:16:28.726 A:middle
Then on top of that, we have

00:16:28.726 --> 00:16:29.956 A:middle
another visual effect view

00:16:30.046 --> 00:16:31.576 A:middle
configured with vibrancy.

00:16:32.476 --> 00:16:33.056 A:middle
That's right here.

00:16:33.816 --> 00:16:35.236 A:middle
And finally, inside of the

00:16:35.236 --> 00:16:37.116 A:middle
content view of that vibrancy

00:16:37.116 --> 00:16:38.656 A:middle
view, we have the label.

00:16:39.806 --> 00:16:40.766 A:middle
So, the changes that we need to

00:16:40.766 --> 00:16:42.286 A:middle
make to update these materials

00:16:42.696 --> 00:16:44.346 A:middle
are first of all to switch to a

00:16:44.346 --> 00:16:45.566 A:middle
dynamic blur effect.

00:16:45.566 --> 00:16:47.286 A:middle
This light effect is not

00:16:47.286 --> 00:16:48.076 A:middle
actually dynamic.

00:16:48.076 --> 00:16:49.246 A:middle
It's not going to update for us

00:16:49.246 --> 00:16:50.186 A:middle
when we switch to Dark Mode.

00:16:50.886 --> 00:16:51.886 A:middle
So, we can take advantage of

00:16:51.886 --> 00:16:53.716 A:middle
this brand-new system material

00:16:53.776 --> 00:16:55.726 A:middle
palette that we have in iOS 13.

00:16:56.326 --> 00:16:57.756 A:middle
Great choice, because the system

00:16:57.756 --> 00:16:59.696 A:middle
thin material for this

00:16:59.696 --> 00:17:00.866 A:middle
particular use case, it'll look

00:16:59.696 --> 00:17:00.866 A:middle
particular use case, it'll look

00:17:00.866 --> 00:17:01.926 A:middle
very similar to what we had

00:17:01.926 --> 00:17:02.296 A:middle
before.

00:17:02.886 --> 00:17:04.746 A:middle
And then we also want to update

00:17:04.746 --> 00:17:06.546 A:middle
our vibrancy to take advantage

00:17:06.546 --> 00:17:07.695 A:middle
of the new system vibrancy

00:17:07.695 --> 00:17:08.266 A:middle
styles.

00:17:08.636 --> 00:17:09.976 A:middle
And these vibrancy styles now

00:17:09.976 --> 00:17:11.586 A:middle
come in a nice hierarchy.

00:17:11.766 --> 00:17:13.685 A:middle
So, we can add a style

00:17:13.766 --> 00:17:14.266 A:middle
parameter.

00:17:14.766 --> 00:17:16.016 A:middle
And in this case it's kind of

00:17:16.016 --> 00:17:17.546 A:middle
secondary content, so we can

00:17:17.546 --> 00:17:20.205 A:middle
choose the secondary label and

00:17:20.955 --> 00:17:22.766 A:middle
with those few changes, why

00:17:22.766 --> 00:17:24.715 A:middle
don't we run and see how things

00:17:24.715 --> 00:17:24.876 A:middle
look.

00:17:26.256 --> 00:17:26.886 A:middle
Let's bring up that

00:17:26.886 --> 00:17:27.506 A:middle
presentation.

00:17:28.376 --> 00:17:29.686 A:middle
So, here we are in light mode.

00:17:29.686 --> 00:17:30.726 A:middle
It looks pretty similar to what

00:17:30.726 --> 00:17:33.456 A:middle
we had before, but we'll now

00:17:33.456 --> 00:17:34.246 A:middle
switch into Dark.

00:17:35.486 --> 00:17:37.716 A:middle
And bam. Everything has been

00:17:37.716 --> 00:17:39.336 A:middle
updated with nice, new Dark

00:17:39.336 --> 00:17:39.816 A:middle
Materials.

00:17:41.516 --> 00:17:44.276 A:middle
[ Applause ]

00:17:44.776 --> 00:17:46.266 A:middle
So, one point here is that even

00:17:46.266 --> 00:17:47.246 A:middle
though we did write some code

00:17:47.246 --> 00:17:48.486 A:middle
this time, there's nothing wrong

00:17:48.486 --> 00:17:50.006 A:middle
with that, we didn't actually

00:17:50.006 --> 00:17:51.236 A:middle
need to write any code that

00:17:51.236 --> 00:17:53.046 A:middle
explicitly checked which mode we

00:17:53.046 --> 00:17:55.566 A:middle
were in, or handled changes from

00:17:55.566 --> 00:17:56.656 A:middle
Light to Dark Mode or vice

00:17:56.656 --> 00:17:57.156 A:middle
versa.

00:17:57.926 --> 00:17:59.306 A:middle
This is also the advantage of

00:17:59.336 --> 00:18:01.406 A:middle
taking-- of using these dynamic

00:17:59.336 --> 00:18:01.406 A:middle
taking-- of using these dynamic

00:18:01.546 --> 00:18:03.416 A:middle
system colors and materials in

00:18:03.416 --> 00:18:04.426 A:middle
your app.

00:18:04.426 --> 00:18:05.656 A:middle
I'll had it back over to Kurt to

00:18:05.656 --> 00:18:06.566 A:middle
tell you a little bit more of

00:18:06.566 --> 00:18:07.856 A:middle
how all of this works behind the

00:18:07.856 --> 00:18:08.216 A:middle
scenes.

00:18:12.566 --> 00:18:12.976 A:middle
&gt;&gt; Thank you.

00:18:13.516 --> 00:18:16.256 A:middle
[ Applause ]

00:18:16.756 --> 00:18:17.786 A:middle
So, here's something subtle that

00:18:17.786 --> 00:18:18.966 A:middle
you might not have noticed.

00:18:19.886 --> 00:18:21.696 A:middle
We used system background color

00:18:21.746 --> 00:18:23.066 A:middle
as the main background in our

00:18:23.066 --> 00:18:24.396 A:middle
app, that was black.

00:18:24.746 --> 00:18:26.416 A:middle
And then we used it again in

00:18:26.416 --> 00:18:27.296 A:middle
that presented view.

00:18:27.856 --> 00:18:29.016 A:middle
And if you look carefully, you

00:18:29.016 --> 00:18:30.416 A:middle
can see it's a lighter shade of

00:18:30.416 --> 00:18:30.726 A:middle
grey.

00:18:31.986 --> 00:18:33.486 A:middle
That's because the design for

00:18:33.486 --> 00:18:35.046 A:middle
Dark Mode has two different

00:18:35.046 --> 00:18:35.536 A:middle
levels.

00:18:36.076 --> 00:18:37.256 A:middle
When the view fills the whole

00:18:37.256 --> 00:18:38.896 A:middle
screen edge to edge, we call

00:18:38.896 --> 00:18:39.896 A:middle
that the base level.

00:18:40.696 --> 00:18:41.876 A:middle
And then when content appears in

00:18:41.876 --> 00:18:43.996 A:middle
a separate layer above that, we

00:18:43.996 --> 00:18:45.336 A:middle
call that the elevated level.

00:18:46.236 --> 00:18:47.446 A:middle
So, in Dark Mode, the

00:18:47.446 --> 00:18:48.886 A:middle
system-provided background

00:18:48.886 --> 00:18:50.756 A:middle
colors have lighter values in

00:18:50.756 --> 00:18:51.606 A:middle
the elevated level.

00:18:51.856 --> 00:18:53.086 A:middle
This helps distinguish them from

00:18:53.086 --> 00:18:54.546 A:middle
the black background underneath.

00:18:55.426 --> 00:18:56.706 A:middle
But foreground colors don't

00:18:56.706 --> 00:18:57.246 A:middle
change.

00:18:58.276 --> 00:18:59.476 A:middle
Now on iPhone, this can happen

00:18:59.476 --> 00:19:00.816 A:middle
with presentations, as you see

00:18:59.476 --> 00:19:00.816 A:middle
with presentations, as you see

00:19:00.816 --> 00:19:01.036 A:middle
here.

00:19:01.946 --> 00:19:03.366 A:middle
On iPad, this can also happen

00:19:03.366 --> 00:19:04.866 A:middle
when the app is in multitasking

00:19:04.866 --> 00:19:06.446 A:middle
split view, so it doesn't fill

00:19:06.446 --> 00:19:07.046 A:middle
the whole screen.

00:19:08.626 --> 00:19:09.646 A:middle
So, we've learned the essentials

00:19:09.646 --> 00:19:10.836 A:middle
about implementing Dark Mode.

00:19:11.626 --> 00:19:13.646 A:middle
And we've both been saying that

00:19:13.676 --> 00:19:14.746 A:middle
things just work.

00:19:14.936 --> 00:19:15.796 A:middle
It's just automatic.

00:19:16.276 --> 00:19:18.066 A:middle
So, let's dive deeper into how

00:19:18.066 --> 00:19:19.756 A:middle
dynamic colors and images work.

00:19:20.176 --> 00:19:21.166 A:middle
And this will help you take

00:19:21.166 --> 00:19:22.516 A:middle
advantage of all this power and

00:19:22.516 --> 00:19:23.126 A:middle
flexibility.

00:19:24.526 --> 00:19:25.656 A:middle
So, we've seen how dynamic

00:19:25.656 --> 00:19:27.126 A:middle
colors automatically resolve

00:19:27.126 --> 00:19:28.746 A:middle
their appearance, but how does

00:19:28.746 --> 00:19:29.946 A:middle
the color know whether it's

00:19:29.946 --> 00:19:30.546 A:middle
light or dark?

00:19:31.466 --> 00:19:32.476 A:middle
This is done with trait

00:19:32.476 --> 00:19:32.886 A:middle
collections.

00:19:33.506 --> 00:19:34.886 A:middle
So, each view and view

00:19:34.886 --> 00:19:36.316 A:middle
controller in your app has a

00:19:36.316 --> 00:19:38.156 A:middle
trait collection, and this helps

00:19:38.846 --> 00:19:40.416 A:middle
determine the appearance of the

00:19:40.416 --> 00:19:41.016 A:middle
views.

00:19:41.836 --> 00:19:42.966 A:middle
In this case, all of our views

00:19:42.966 --> 00:19:44.096 A:middle
have the same trait collection.

00:19:44.796 --> 00:19:46.246 A:middle
The idiom is phone, because

00:19:46.246 --> 00:19:47.536 A:middle
we're running on a phone and not

00:19:47.536 --> 00:19:48.446 A:middle
an iPad or CarPlay.

00:19:49.406 --> 00:19:50.726 A:middle
The user interface style is

00:19:50.766 --> 00:19:51.946 A:middle
dark, because we're in Dark

00:19:51.946 --> 00:19:52.206 A:middle
Mode.

00:19:52.826 --> 00:19:54.266 A:middle
And the user interface level is

00:19:54.396 --> 00:19:55.806 A:middle
base, because we're full screen.

00:19:56.866 --> 00:19:58.496 A:middle
So, if you want to find out what

00:19:58.496 --> 00:20:00.116 A:middle
appearance to use, get the trait

00:19:58.496 --> 00:20:00.116 A:middle
appearance to use, get the trait

00:20:00.116 --> 00:20:01.406 A:middle
collection, we'll look at the

00:20:01.406 --> 00:20:03.036 A:middle
user interface style, and also

00:20:03.036 --> 00:20:04.436 A:middle
the other traits.

00:20:05.416 --> 00:20:07.396 A:middle
Now, dynamic colors are resolved

00:20:07.546 --> 00:20:08.726 A:middle
using a trait collection.

00:20:08.966 --> 00:20:10.376 A:middle
So, it's the combination of a

00:20:10.426 --> 00:20:11.946 A:middle
dynamic color and a trait

00:20:11.946 --> 00:20:13.306 A:middle
collection that determine the

00:20:13.426 --> 00:20:14.516 A:middle
final resolved color.

00:20:15.396 --> 00:20:16.246 A:middle
And normally this happens

00:20:16.246 --> 00:20:17.746 A:middle
automatically but if you need

00:20:17.786 --> 00:20:19.726 A:middle
resolve a color yourself, you

00:20:19.726 --> 00:20:20.246 A:middle
can do that.

00:20:21.286 --> 00:20:22.346 A:middle
Let's say we have a dynamic

00:20:22.346 --> 00:20:23.916 A:middle
color and we've gotten a trait

00:20:23.916 --> 00:20:24.926 A:middle
collection from a view.

00:20:26.076 --> 00:20:27.056 A:middle
If we want to resolve that

00:20:27.056 --> 00:20:29.356 A:middle
color, we just say dynamic color

00:20:29.356 --> 00:20:31.446 A:middle
resolved color with trait

00:20:31.446 --> 00:20:31.946 A:middle
collection.

00:20:32.296 --> 00:20:34.146 A:middle
It will return a fully resolved

00:20:34.146 --> 00:20:35.496 A:middle
color that isn't dynamic

00:20:35.496 --> 00:20:35.896 A:middle
anymore.

00:20:37.086 --> 00:20:38.486 A:middle
So, this is safe to call on any

00:20:38.486 --> 00:20:38.796 A:middle
color.

00:20:38.956 --> 00:20:40.446 A:middle
If that color wasn't dynamic, it

00:20:40.446 --> 00:20:41.626 A:middle
would've just returned itself.

00:20:43.056 --> 00:20:44.886 A:middle
You can also make custom dynamic

00:20:44.936 --> 00:20:45.426 A:middle
colors.

00:20:45.786 --> 00:20:46.726 A:middle
We showed how to do that in the

00:20:46.726 --> 00:20:48.246 A:middle
asset catalog, but you can do

00:20:48.246 --> 00:20:49.186 A:middle
that in code as well.

00:20:50.496 --> 00:20:52.076 A:middle
Initialize a color with a

00:20:52.076 --> 00:20:54.146 A:middle
closure, and the argument is a

00:20:54.146 --> 00:20:54.946 A:middle
trait collection.

00:20:55.856 --> 00:20:57.006 A:middle
Then our closure will return

00:20:57.096 --> 00:20:57.896 A:middle
another color.

00:20:58.766 --> 00:21:00.536 A:middle
So, each time this dynamic color

00:20:58.766 --> 00:21:00.536 A:middle
So, each time this dynamic color

00:21:00.536 --> 00:21:01.966 A:middle
needs to be resolved, that

00:21:01.966 --> 00:21:03.856 A:middle
closure will be called with the

00:21:03.856 --> 00:21:04.896 A:middle
appropriate trait collection.

00:21:05.686 --> 00:21:07.146 A:middle
And in the closure, you can use

00:21:07.146 --> 00:21:08.386 A:middle
that trait collection to

00:21:08.386 --> 00:21:09.706 A:middle
determine another color to

00:21:09.706 --> 00:21:10.056 A:middle
return.

00:21:10.846 --> 00:21:12.326 A:middle
This example is implementing the

00:21:12.326 --> 00:21:13.356 A:middle
diagram that we just saw.

00:21:14.576 --> 00:21:16.056 A:middle
So another question.

00:21:16.436 --> 00:21:17.546 A:middle
You might be wondering since

00:21:17.616 --> 00:21:18.976 A:middle
dynamic colors can be used

00:21:18.976 --> 00:21:20.346 A:middle
directly like any other color,

00:21:20.886 --> 00:21:21.756 A:middle
how did they get resolved

00:21:21.756 --> 00:21:22.386 A:middle
automatically?

00:21:23.286 --> 00:21:24.956 A:middle
If I have a dynamic color and I

00:21:24.956 --> 00:21:26.556 A:middle
ask it for its RGB components,

00:21:27.076 --> 00:21:28.046 A:middle
it'll return a result.

00:21:28.636 --> 00:21:30.656 A:middle
If I have black, I'll get 000.

00:21:31.286 --> 00:21:32.846 A:middle
Well, when I ask it, I don't

00:21:32.926 --> 00:21:33.916 A:middle
pass in a Trait Collection.

00:21:34.386 --> 00:21:35.246 A:middle
How does it know?

00:21:36.826 --> 00:21:38.046 A:middle
Well, there's a new property on

00:21:38.046 --> 00:21:39.176 A:middle
UITrait Collection called

00:21:39.286 --> 00:21:41.336 A:middle
current, and this is set for you

00:21:41.336 --> 00:21:42.066 A:middle
by UIKit.

00:21:43.196 --> 00:21:45.186 A:middle
And the color is resolved using

00:21:45.186 --> 00:21:46.556 A:middle
that current Trait Collection.

00:21:47.296 --> 00:21:48.456 A:middle
And again, we're following the

00:21:48.456 --> 00:21:49.486 A:middle
same pattern from the mac.

00:21:49.766 --> 00:21:51.026 A:middle
This is the same concept as

00:21:51.146 --> 00:21:52.656 A:middle
NSAppearance.current.

00:21:54.106 --> 00:21:55.396 A:middle
Now, UIKit sets the current

00:21:55.396 --> 00:21:56.636 A:middle
Trait Collection for you when it

00:21:56.636 --> 00:21:57.446 A:middle
calls certain methods.

00:21:58.086 --> 00:21:58.796 A:middle
Here's an example.

00:21:59.476 --> 00:22:01.366 A:middle
I have a UIVIew Subclass and

00:21:59.476 --> 00:22:01.366 A:middle
I have a UIVIew Subclass and

00:22:01.366 --> 00:22:02.626 A:middle
I've overridden the draw method.

00:22:02.726 --> 00:22:03.866 A:middle
So, this view will do all of its

00:22:03.866 --> 00:22:04.386 A:middle
own drawing.

00:22:06.336 --> 00:22:07.896 A:middle
Before it calls this method,

00:22:08.386 --> 00:22:10.366 A:middle
UIKit will set the current Trait

00:22:10.366 --> 00:22:11.866 A:middle
Collection to the Views Trait

00:22:11.866 --> 00:22:12.286 A:middle
Collection.

00:22:13.166 --> 00:22:14.986 A:middle
So that inside this code when a

00:22:14.986 --> 00:22:16.366 A:middle
dynamic color needs to be

00:22:16.366 --> 00:22:18.356 A:middle
resolved, it will use the Views

00:22:18.356 --> 00:22:18.966 A:middle
Trait Collection.

00:22:20.376 --> 00:22:22.176 A:middle
In fact, when the mode changes,

00:22:22.176 --> 00:22:23.856 A:middle
UIKit knows that you overrode

00:22:23.856 --> 00:22:24.476 A:middle
the draw method.

00:22:24.506 --> 00:22:26.206 A:middle
So, it will automatically call

00:22:26.206 --> 00:22:27.766 A:middle
set needs display on your view

00:22:27.866 --> 00:22:29.296 A:middle
and will draw again with new

00:22:29.296 --> 00:22:29.816 A:middle
colors.

00:22:31.306 --> 00:22:32.666 A:middle
UIKit also sets the current

00:22:32.666 --> 00:22:33.926 A:middle
Trait Collection for you before

00:22:33.926 --> 00:22:35.266 A:middle
it calls several other methods.

00:22:36.296 --> 00:22:38.676 A:middle
I'm-- subclasses of view, view

00:22:38.676 --> 00:22:39.916 A:middle
controller, and presentation

00:22:39.916 --> 00:22:41.826 A:middle
controller, explain draw.

00:22:42.946 --> 00:22:44.516 A:middle
But UIKit also sets the current

00:22:44.516 --> 00:22:45.816 A:middle
Trait Collection during layout.

00:22:46.646 --> 00:22:48.566 A:middle
So, override layout subviews in

00:22:48.566 --> 00:22:50.356 A:middle
your view subclass and then add

00:22:50.356 --> 00:22:51.576 A:middle
code that resolves dynamic

00:22:51.576 --> 00:22:52.016 A:middle
colors.

00:22:52.746 --> 00:22:54.626 A:middle
When the mode changes, set needs

00:22:54.626 --> 00:22:55.826 A:middle
layout will be called.

00:22:55.826 --> 00:22:56.736 A:middle
Layout will happen again.

00:22:56.736 --> 00:22:58.376 A:middle
And this includes the

00:22:58.376 --> 00:22:59.716 A:middle
corresponding calls on view

00:22:59.716 --> 00:23:01.276 A:middle
controller and presentation

00:22:59.716 --> 00:23:01.276 A:middle
controller and presentation

00:23:01.276 --> 00:23:01.656 A:middle
controller.

00:23:03.076 --> 00:23:04.846 A:middle
Finally, all three kinds of

00:23:04.846 --> 00:23:05.876 A:middle
these objects get trait

00:23:05.876 --> 00:23:07.616 A:middle
collection did change, when a

00:23:07.616 --> 00:23:08.346 A:middle
trait changes.

00:23:08.666 --> 00:23:10.266 A:middle
And views get tint color did

00:23:10.266 --> 00:23:11.296 A:middle
change when the tint color

00:23:11.326 --> 00:23:11.636 A:middle
changes.

00:23:12.306 --> 00:23:13.656 A:middle
So inside all of these methods,

00:23:13.656 --> 00:23:14.696 A:middle
it's convenient to be able to

00:23:14.696 --> 00:23:16.316 A:middle
use dynamic colors right away.

00:23:17.696 --> 00:23:19.186 A:middle
Now, here's a big point to keep

00:23:19.186 --> 00:23:19.536 A:middle
in mind.

00:23:20.546 --> 00:23:21.926 A:middle
Outside of these methods, the

00:23:21.926 --> 00:23:23.466 A:middle
current trait collection is not

00:23:23.836 --> 00:23:25.006 A:middle
guaranteed to have any

00:23:25.006 --> 00:23:27.246 A:middle
particular value, so if you need

00:23:27.246 --> 00:23:28.706 A:middle
to resolve a dynamic color

00:23:28.906 --> 00:23:30.446 A:middle
outside of these methods, you

00:23:30.446 --> 00:23:31.146 A:middle
need to manage it.

00:23:31.886 --> 00:23:33.046 A:middle
Here's an example of why you

00:23:33.046 --> 00:23:33.666 A:middle
might need to.

00:23:35.076 --> 00:23:37.126 A:middle
Lower-level classes, like CA

00:23:37.126 --> 00:23:39.126 A:middle
Layer and CG Color, don't

00:23:39.126 --> 00:23:40.416 A:middle
understand dynamic colors.

00:23:40.416 --> 00:23:41.546 A:middle
It's a UIKit concept.

00:23:42.696 --> 00:23:43.856 A:middle
So in this case, we're creating

00:23:43.856 --> 00:23:45.056 A:middle
a layer and then setting its

00:23:45.136 --> 00:23:45.756 A:middle
border color.

00:23:46.496 --> 00:23:48.656 A:middle
That takes a CG Color which

00:23:48.656 --> 00:23:49.496 A:middle
can't be dynamic.

00:23:50.566 --> 00:23:52.886 A:middle
So, calling CG Color on a UIKit

00:23:52.966 --> 00:23:54.556 A:middle
dynamic color needs to resolve

00:23:54.556 --> 00:23:54.626 A:middle
it.

00:23:55.636 --> 00:23:56.836 A:middle
Now, let's imagine, we're not in

00:23:56.836 --> 00:23:58.006 A:middle
one of those methods I mentioned

00:23:58.006 --> 00:23:58.356 A:middle
earlier.

00:23:58.526 --> 00:23:59.546 A:middle
That means it's our

00:23:59.546 --> 00:24:01.036 A:middle
responsibility to manage this

00:23:59.546 --> 00:24:01.036 A:middle
responsibility to manage this

00:24:01.036 --> 00:24:01.526 A:middle
process.

00:24:02.296 --> 00:24:03.256 A:middle
The first thing we need is a

00:24:03.256 --> 00:24:04.826 A:middle
Trait Collection and we'll get

00:24:04.826 --> 00:24:05.466 A:middle
it from a view.

00:24:06.536 --> 00:24:07.816 A:middle
Now we need to use that Trait

00:24:07.816 --> 00:24:09.036 A:middle
Collection, and I'll show three

00:24:09.036 --> 00:24:09.756 A:middle
ways to do this.

00:24:09.756 --> 00:24:12.096 A:middle
The first way we've already

00:24:12.096 --> 00:24:12.366 A:middle
seen.

00:24:12.926 --> 00:24:15.256 A:middle
Ask the color to resolve itself

00:24:15.436 --> 00:24:16.516 A:middle
using that Trait Collection.

00:24:17.516 --> 00:24:18.646 A:middle
Now this is fine if you have

00:24:18.646 --> 00:24:20.436 A:middle
only a single color, but it can

00:24:20.436 --> 00:24:21.636 A:middle
be awkward if you've got more.

00:24:22.126 --> 00:24:23.296 A:middle
And you have to remember to do

00:24:23.296 --> 00:24:23.906 A:middle
it every time.

00:24:24.696 --> 00:24:25.836 A:middle
The second way is easier.

00:24:26.396 --> 00:24:29.086 A:middle
Just call perform as current on

00:24:29.086 --> 00:24:29.856 A:middle
the Trait Collection.

00:24:30.866 --> 00:24:32.146 A:middle
That makes that Trait Collection

00:24:32.296 --> 00:24:33.176 A:middle
become the current Trait

00:24:33.176 --> 00:24:34.936 A:middle
Collection, and then it runs the

00:24:34.936 --> 00:24:36.176 A:middle
code in the closure that you

00:24:36.176 --> 00:24:36.646 A:middle
provide.

00:24:37.536 --> 00:24:38.526 A:middle
So, since we're resolving the

00:24:38.526 --> 00:24:39.936 A:middle
color inside that closure, you

00:24:39.936 --> 00:24:42.436 A:middle
get the right value.

00:24:42.636 --> 00:24:43.816 A:middle
Finally, the third option,

00:24:44.186 --> 00:24:46.186 A:middle
directly set the current Trait

00:24:46.186 --> 00:24:46.586 A:middle
Collection.

00:24:47.406 --> 00:24:48.616 A:middle
This looks a little intimidating

00:24:48.616 --> 00:24:50.086 A:middle
but it's absolutely safe.

00:24:50.236 --> 00:24:50.946 A:middle
It's lightweight.

00:24:51.046 --> 00:24:52.446 A:middle
There are no side effects.

00:24:53.286 --> 00:24:54.746 A:middle
This is even safe to do on a

00:24:54.746 --> 00:24:55.616 A:middle
background thread.

00:24:55.616 --> 00:24:57.846 A:middle
It will only affect the specific

00:24:57.916 --> 00:24:58.886 A:middle
thread that you're running on,

00:24:59.336 --> 00:25:00.526 A:middle
so it won't affect your main

00:24:59.336 --> 00:25:00.526 A:middle
so it won't affect your main

00:25:00.526 --> 00:25:00.786 A:middle
thread.

00:25:02.016 --> 00:25:03.096 A:middle
If you're going to do this, it's

00:25:03.096 --> 00:25:04.876 A:middle
a good idea to save the current

00:25:04.876 --> 00:25:05.806 A:middle
Trait Collection and then

00:25:05.806 --> 00:25:07.156 A:middle
restore it afterwards in case

00:25:07.206 --> 00:25:08.566 A:middle
any other code was relying on

00:25:08.566 --> 00:25:08.633 A:middle
it.

00:25:09.506 --> 00:25:10.516 A:middle
And note that performance

00:25:10.516 --> 00:25:11.806 A:middle
current does that for you, it

00:25:11.806 --> 00:25:14.276 A:middle
does this exact same thing.

00:25:14.516 --> 00:25:15.966 A:middle
So, if you are doing this sort

00:25:15.966 --> 00:25:17.366 A:middle
of thing, you will also want to

00:25:17.366 --> 00:25:18.966 A:middle
know when the dynamic color

00:25:19.066 --> 00:25:20.196 A:middle
needs to be resolved again.

00:25:21.186 --> 00:25:22.826 A:middle
That usually happens when traits

00:25:22.866 --> 00:25:23.336 A:middle
change.

00:25:23.986 --> 00:25:25.296 A:middle
When traits change, Trait

00:25:25.296 --> 00:25:26.666 A:middle
Collection did change as called.

00:25:27.626 --> 00:25:29.546 A:middle
But not all trait changes will

00:25:29.546 --> 00:25:30.346 A:middle
affect colors.

00:25:30.726 --> 00:25:31.946 A:middle
If the user interface style

00:25:31.946 --> 00:25:33.466 A:middle
changes from light to dark, that

00:25:33.466 --> 00:25:34.846 A:middle
will obviously affect colors.

00:25:35.296 --> 00:25:36.276 A:middle
But if something like a size

00:25:36.366 --> 00:25:38.106 A:middle
class changes because your app

00:25:38.106 --> 00:25:39.836 A:middle
was resized, that won't affect

00:25:39.956 --> 00:25:40.336 A:middle
colors.

00:25:41.306 --> 00:25:43.176 A:middle
So, it's best to use this method

00:25:43.626 --> 00:25:45.376 A:middle
has different color appearance

00:25:45.376 --> 00:25:46.696 A:middle
to see if the relevant traits

00:25:46.696 --> 00:25:47.206 A:middle
have changed.

00:25:48.136 --> 00:25:49.246 A:middle
If it didn't, then you should

00:25:49.246 --> 00:25:50.446 A:middle
resolve those dynamic colors

00:25:50.446 --> 00:25:50.666 A:middle
again.

00:25:52.336 --> 00:25:53.856 A:middle
Finally, let's talk about

00:25:53.856 --> 00:25:54.326 A:middle
images.

00:25:54.916 --> 00:25:56.596 A:middle
As you saw, you can create

00:25:56.596 --> 00:25:58.246 A:middle
dynamic images in the asset

00:25:58.326 --> 00:25:58.736 A:middle
catalog.

00:25:59.406 --> 00:26:00.466 A:middle
And when you show one of these

00:25:59.406 --> 00:26:00.466 A:middle
And when you show one of these

00:26:00.466 --> 00:26:02.586 A:middle
images with UIImage view, it

00:26:02.586 --> 00:26:04.786 A:middle
uses its Trait Collection to

00:26:04.786 --> 00:26:06.046 A:middle
determine which image to

00:26:06.046 --> 00:26:06.516 A:middle
display.

00:26:07.896 --> 00:26:09.536 A:middle
Now, UIImage view is doing the

00:26:09.536 --> 00:26:10.016 A:middle
work here.

00:26:10.646 --> 00:26:13.116 A:middle
Unlike UIColor, UIImage doesn't

00:26:13.116 --> 00:26:14.426 A:middle
pay attention to the current

00:26:14.426 --> 00:26:14.986 A:middle
Trait Collection.

00:26:15.996 --> 00:26:17.156 A:middle
So, we recommend most of the

00:26:17.156 --> 00:26:18.666 A:middle
time use UIImage view.

00:26:19.466 --> 00:26:20.786 A:middle
But if you need to resolve the

00:26:20.786 --> 00:26:22.096 A:middle
color yourself, you can.

00:26:23.296 --> 00:26:25.276 A:middle
Given an image, just ask for its

00:26:25.406 --> 00:26:26.166 A:middle
image asset.

00:26:26.516 --> 00:26:27.746 A:middle
That's that collection of all

00:26:27.746 --> 00:26:29.196 A:middle
the different image variations.

00:26:31.066 --> 00:26:33.176 A:middle
Next, ask for a specific image

00:26:33.306 --> 00:26:34.976 A:middle
that matches a specific Trait

00:26:34.976 --> 00:26:35.376 A:middle
Collection.

00:26:36.946 --> 00:26:38.426 A:middle
You can also use the image asset

00:26:38.556 --> 00:26:40.556 A:middle
to register new variations of an

00:26:40.556 --> 00:26:41.306 A:middle
image at runtime.

00:26:41.906 --> 00:26:43.296 A:middle
So, if you draw your own image,

00:26:43.386 --> 00:26:45.106 A:middle
you can add variations for light

00:26:45.136 --> 00:26:45.626 A:middle
and dark.

00:26:46.516 --> 00:26:47.586 A:middle
Just put that in in an image

00:26:47.586 --> 00:26:47.886 A:middle
view.

00:26:48.206 --> 00:26:49.366 A:middle
It will automatically show the

00:26:49.366 --> 00:26:49.716 A:middle
right one.

00:26:50.916 --> 00:26:51.986 A:middle
So, let's talk about some things

00:26:51.986 --> 00:26:53.306 A:middle
to keep in mind when adopting

00:26:53.306 --> 00:26:53.756 A:middle
Dark Mode.

00:26:54.216 --> 00:26:55.500 A:middle
Over to Tyler.

00:26:57.516 --> 00:27:02.926 A:middle
[ Applause ]

00:26:57.516 --> 00:27:02.926 A:middle
[ Applause ]

00:27:03.426 --> 00:27:03.956 A:middle
&gt;&gt; Thanks, Kurt.

00:27:04.726 --> 00:27:06.286 A:middle
So, let's take a few minutes to

00:27:06.286 --> 00:27:07.536 A:middle
review some more things about

00:27:07.536 --> 00:27:08.786 A:middle
how Trait Collections work.

00:27:08.896 --> 00:27:10.256 A:middle
Because as you've seen, these

00:27:10.306 --> 00:27:12.176 A:middle
play a really key role in Dark

00:27:12.176 --> 00:27:12.386 A:middle
Mode.

00:27:13.046 --> 00:27:14.566 A:middle
The most important thing to

00:27:14.566 --> 00:27:15.806 A:middle
remember about Trait Collections

00:27:15.856 --> 00:27:17.766 A:middle
is that there is not just one in

00:27:17.766 --> 00:27:19.306 A:middle
your entire app.

00:27:19.706 --> 00:27:20.826 A:middle
Trait Collections actually

00:27:20.866 --> 00:27:22.936 A:middle
cascade through the hierarchy of

00:27:22.936 --> 00:27:24.836 A:middle
your app, starting at the root

00:27:24.836 --> 00:27:27.436 A:middle
level with the screen, then down

00:27:27.436 --> 00:27:28.636 A:middle
to the window scene, which is

00:27:28.636 --> 00:27:30.426 A:middle
new this year in iOS 13.

00:27:30.706 --> 00:27:32.016 A:middle
From there, down to the window.

00:27:32.696 --> 00:27:34.496 A:middle
At that point, traits start to

00:27:34.496 --> 00:27:36.096 A:middle
flow into any presentations in

00:27:36.096 --> 00:27:37.426 A:middle
your app and then the view

00:27:37.426 --> 00:27:38.636 A:middle
controllers inside those

00:27:38.636 --> 00:27:39.256 A:middle
presentations.

00:27:40.966 --> 00:27:42.406 A:middle
And finally, traits cascade

00:27:42.406 --> 00:27:43.606 A:middle
through the view hierarchy

00:27:43.696 --> 00:27:44.886 A:middle
inside each of your view

00:27:44.886 --> 00:27:45.596 A:middle
controllers.

00:27:46.696 --> 00:27:47.926 A:middle
Because of this hierarchy, you

00:27:47.926 --> 00:27:49.206 A:middle
always want to use the trait

00:27:49.206 --> 00:27:51.266 A:middle
collection of the most specific

00:27:51.266 --> 00:27:52.906 A:middle
view or view controller you can.

00:27:54.346 --> 00:27:55.376 A:middle
And when the value of a trait

00:27:55.376 --> 00:27:57.176 A:middle
changes, you're going to receive

00:27:57.176 --> 00:27:58.756 A:middle
trait collection did change on

00:27:58.836 --> 00:28:00.446 A:middle
all of these objects inside of

00:27:58.836 --> 00:28:00.446 A:middle
all of these objects inside of

00:28:00.446 --> 00:28:01.676 A:middle
your app when they get that

00:28:01.676 --> 00:28:02.206 A:middle
change.

00:28:02.876 --> 00:28:04.046 A:middle
So, if the system Dark Mode

00:28:04.046 --> 00:28:05.406 A:middle
setting changes, for example,

00:28:05.806 --> 00:28:06.926 A:middle
you'll see that trait change

00:28:06.926 --> 00:28:08.596 A:middle
just cascade right through.

00:28:09.036 --> 00:28:10.636 A:middle
But I want to talk a little bit

00:28:10.636 --> 00:28:12.206 A:middle
more about Trait Changes,

00:28:12.436 --> 00:28:13.706 A:middle
because we have some new

00:28:13.706 --> 00:28:15.596 A:middle
behavior this year in iOS 13.

00:28:16.236 --> 00:28:17.586 A:middle
Let's zoom into the bottom half

00:28:17.586 --> 00:28:18.816 A:middle
of this diagram and walk through

00:28:18.816 --> 00:28:20.566 A:middle
an example about what's changed.

00:28:22.236 --> 00:28:23.936 A:middle
So, here's a view that we want

00:28:23.936 --> 00:28:25.516 A:middle
to add into the view hierarchy.

00:28:25.576 --> 00:28:26.806 A:middle
It's going to become the view

00:28:26.806 --> 00:28:28.116 A:middle
inside of this view controller

00:28:28.116 --> 00:28:28.636 A:middle
right above it.

00:28:30.116 --> 00:28:32.016 A:middle
The first thing that we'll do is

00:28:32.016 --> 00:28:32.826 A:middle
create that view.

00:28:33.626 --> 00:28:34.716 A:middle
Now, when a view is being

00:28:34.716 --> 00:28:36.626 A:middle
initialized, it hasn't yet been

00:28:36.756 --> 00:28:38.276 A:middle
added inside of this trait

00:28:38.276 --> 00:28:38.736 A:middle
hierarchy.

00:28:39.306 --> 00:28:41.256 A:middle
So, when the view's created, in

00:28:41.396 --> 00:28:43.736 A:middle
iOS 13, UIKit is going to make a

00:28:43.736 --> 00:28:45.366 A:middle
prediction about where it

00:28:45.366 --> 00:28:46.846 A:middle
expects that view will end up,

00:28:47.926 --> 00:28:49.636 A:middle
and populate that view's Trait

00:28:49.636 --> 00:28:51.376 A:middle
Collection right from the start

00:28:51.696 --> 00:28:52.936 A:middle
based on the predicted

00:28:52.936 --> 00:28:53.626 A:middle
destination.

00:28:54.496 --> 00:28:56.666 A:middle
So, now let's add this view

00:28:56.956 --> 00:28:57.936 A:middle
and-- yeah, it's pretty cool

00:28:57.936 --> 00:28:59.016 A:middle
[laughter].

00:28:59.311 --> 00:29:01.311 A:middle
[ Applause ]

00:28:59.311 --> 00:29:01.311 A:middle
[ Applause ]

00:29:01.606 --> 00:29:02.826 A:middle
So, let's add this view into the

00:29:02.826 --> 00:29:03.666 A:middle
hierarchy now.

00:29:04.446 --> 00:29:06.426 A:middle
So, we'll do that by calling out

00:29:06.516 --> 00:29:07.106 A:middle
subview.

00:29:07.896 --> 00:29:08.846 A:middle
It moves over.

00:29:09.526 --> 00:29:10.626 A:middle
And once the view's actually

00:29:10.696 --> 00:29:12.586 A:middle
added, it's going to inherit its

00:29:12.586 --> 00:29:14.316 A:middle
actually traits from its parent

00:29:14.316 --> 00:29:15.666 A:middle
trait environment, in this case

00:29:15.666 --> 00:29:17.526 A:middle
the view controller above it.

00:29:17.846 --> 00:29:19.256 A:middle
But in this case, since the

00:29:19.256 --> 00:29:20.656 A:middle
Trait Collection was correctly

00:29:20.656 --> 00:29:23.046 A:middle
predicted up front, there wasn't

00:29:23.046 --> 00:29:24.426 A:middle
a trait change that happened

00:29:24.656 --> 00:29:26.136 A:middle
when that view moved into the

00:29:26.136 --> 00:29:26.976 A:middle
view controller and view

00:29:26.976 --> 00:29:27.396 A:middle
hierarchy.

00:29:27.916 --> 00:29:29.626 A:middle
So, what you've seen is some new

00:29:29.626 --> 00:29:30.956 A:middle
behavior in iOS 13.

00:29:31.666 --> 00:29:33.396 A:middle
To recap, traits are now

00:29:33.396 --> 00:29:35.586 A:middle
predicted during initialization.

00:29:36.956 --> 00:29:38.386 A:middle
View controllers and views will

00:29:38.386 --> 00:29:40.056 A:middle
all receive a pretty complete

00:29:40.056 --> 00:29:41.246 A:middle
Trait Collection right up front,

00:29:41.246 --> 00:29:42.086 A:middle
which is really useful.

00:29:42.086 --> 00:29:43.426 A:middle
And then Trait Collection did

00:29:43.426 --> 00:29:44.766 A:middle
change will only be called

00:29:44.766 --> 00:29:46.226 A:middle
afterwards if any of those

00:29:46.226 --> 00:29:47.506 A:middle
initial traits change.

00:29:48.126 --> 00:29:49.706 A:middle
So, when you're updating your

00:29:49.706 --> 00:29:52.586 A:middle
existing apps for iOS 13, keep

00:29:52.586 --> 00:29:53.876 A:middle
an eye out for existing code

00:29:53.876 --> 00:29:55.306 A:middle
that you might have inside of

00:29:55.346 --> 00:29:56.456 A:middle
methods like Trait Collection

00:29:56.456 --> 00:29:58.216 A:middle
did change that expected the

00:29:58.216 --> 00:29:59.916 A:middle
older behavior where there was

00:29:59.916 --> 00:30:01.196 A:middle
often a trait change that

00:29:59.916 --> 00:30:01.196 A:middle
often a trait change that

00:30:01.196 --> 00:30:02.716 A:middle
occurred when you moved into the

00:30:02.716 --> 00:30:03.146 A:middle
hierarchy.

00:30:03.876 --> 00:30:05.066 A:middle
Now, to make it a little bit

00:30:05.066 --> 00:30:06.596 A:middle
easier to see when some of these

00:30:06.596 --> 00:30:07.896 A:middle
trait changes are occurring in

00:30:07.986 --> 00:30:10.486 A:middle
iOS 13, we have some helpful new

00:30:10.486 --> 00:30:11.586 A:middle
debug logging this year.

00:30:11.746 --> 00:30:13.316 A:middle
You can enable using this launch

00:30:13.316 --> 00:30:14.786 A:middle
argument and it'll tell you

00:30:14.786 --> 00:30:16.116 A:middle
exactly when Trait Collection

00:30:16.116 --> 00:30:17.886 A:middle
did change is called and the

00:30:17.886 --> 00:30:19.226 A:middle
details of each of those

00:30:19.226 --> 00:30:19.726 A:middle
changes.

00:30:19.786 --> 00:30:20.866 A:middle
It's really cool and you should

00:30:20.866 --> 00:30:21.486 A:middle
give it a try.

00:30:22.946 --> 00:30:23.876 A:middle
Now, as you're updating your

00:30:23.876 --> 00:30:25.916 A:middle
existing code or adding new code

00:30:25.916 --> 00:30:28.086 A:middle
that uses traits, the best

00:30:28.086 --> 00:30:29.976 A:middle
practice is to wait until layout

00:30:30.336 --> 00:30:31.446 A:middle
to actually read the Trait

00:30:31.446 --> 00:30:32.916 A:middle
Collection from the view or view

00:30:32.916 --> 00:30:34.386 A:middle
controller and perform work

00:30:34.386 --> 00:30:35.386 A:middle
based on it.

00:30:35.996 --> 00:30:37.916 A:middle
Traits are always updated before

00:30:37.916 --> 00:30:38.756 A:middle
layout occurs.

00:30:39.286 --> 00:30:40.396 A:middle
And so if you get the Trait

00:30:40.396 --> 00:30:41.526 A:middle
Collection from inside of one of

00:30:41.526 --> 00:30:42.926 A:middle
these methods, you can rest

00:30:42.926 --> 00:30:44.476 A:middle
assured that it's not going to

00:30:44.476 --> 00:30:45.566 A:middle
be a prediction anymore.

00:30:45.656 --> 00:30:47.396 A:middle
It'll reflect the actual values

00:30:47.396 --> 00:30:48.826 A:middle
that it was inheriting from its

00:30:48.826 --> 00:30:49.096 A:middle
parent.

00:30:50.656 --> 00:30:51.696 A:middle
Just remember that if you put

00:30:51.696 --> 00:30:52.796 A:middle
code in any of these layout

00:30:52.796 --> 00:30:54.466 A:middle
methods, they can be called

00:30:54.466 --> 00:30:56.196 A:middle
often when the view is visible.

00:30:56.826 --> 00:30:58.116 A:middle
Anytime something calls, a set

00:30:58.116 --> 00:30:58.646 A:middle
needs layout.

00:30:59.066 --> 00:31:01.046 A:middle
So, be sure that you handle this

00:30:59.066 --> 00:31:01.046 A:middle
So, be sure that you handle this

00:31:01.106 --> 00:31:02.476 A:middle
by not repeating work

00:31:02.476 --> 00:31:03.156 A:middle
unnecessarily.

00:31:04.276 --> 00:31:05.696 A:middle
So, that's what you should keep

00:31:05.696 --> 00:31:07.296 A:middle
in mind when using Trait

00:31:07.296 --> 00:31:08.136 A:middle
Collections.

00:31:08.426 --> 00:31:09.926 A:middle
But it turns out that we can

00:31:09.926 --> 00:31:11.566 A:middle
also modify these trait

00:31:11.566 --> 00:31:12.976 A:middle
collections inside of our app as

00:31:12.976 --> 00:31:13.116 A:middle
well.

00:31:14.526 --> 00:31:15.676 A:middle
Here's an example of why you

00:31:15.676 --> 00:31:17.516 A:middle
might want to do this.

00:31:17.706 --> 00:31:19.026 A:middle
Let's say that we want the learn

00:31:19.026 --> 00:31:20.636 A:middle
more screen that we showed you

00:31:20.636 --> 00:31:22.486 A:middle
in our app to always be dark,

00:31:23.016 --> 00:31:24.346 A:middle
even when the rest of our app is

00:31:24.346 --> 00:31:25.296 A:middle
in light appearance.

00:31:26.196 --> 00:31:27.346 A:middle
We can do this by taking

00:31:27.346 --> 00:31:28.616 A:middle
advantage of the trait

00:31:28.616 --> 00:31:29.156 A:middle
hierarchy.

00:31:30.376 --> 00:31:31.886 A:middle
So if this diagram represents

00:31:31.886 --> 00:31:33.666 A:middle
our app, normally with the

00:31:33.666 --> 00:31:35.476 A:middle
system in light mode, everything

00:31:35.476 --> 00:31:36.436 A:middle
will have the light user

00:31:36.436 --> 00:31:37.756 A:middle
interface style, just like you

00:31:37.816 --> 00:31:38.196 A:middle
see here.

00:31:39.536 --> 00:31:40.906 A:middle
But if we just want let's say

00:31:40.906 --> 00:31:42.796 A:middle
that one view controller on the

00:31:42.796 --> 00:31:44.106 A:middle
bottom right and everything on

00:31:44.106 --> 00:31:46.196 A:middle
the side of it to be dark, we

00:31:46.196 --> 00:31:47.696 A:middle
can do that by overriding the

00:31:47.696 --> 00:31:49.846 A:middle
user interface style trait with

00:31:49.846 --> 00:31:50.156 A:middle
dark.

00:31:50.876 --> 00:31:52.316 A:middle
And now everything inside that

00:31:52.316 --> 00:31:53.506 A:middle
view controller will be dark,

00:31:54.016 --> 00:31:55.296 A:middle
even the rest of our app and

00:31:55.296 --> 00:31:56.426 A:middle
even the system is running in

00:31:56.426 --> 00:31:56.756 A:middle
light mode.

00:31:57.486 --> 00:31:58.606 A:middle
So, how do you actually do this

00:31:58.606 --> 00:31:59.086 A:middle
override?

00:32:00.146 --> 00:32:01.926 A:middle
We have some new API this year

00:32:01.926 --> 00:32:03.736 A:middle
in iOS 13 to make this really

00:32:03.736 --> 00:32:04.146 A:middle
easy.

00:32:04.986 --> 00:32:06.256 A:middle
There are new properties on view

00:32:06.256 --> 00:32:07.716 A:middle
controller and view so that you

00:32:07.716 --> 00:32:09.246 A:middle
can just set the user interface

00:32:09.246 --> 00:32:10.786 A:middle
style that you want and it'll

00:32:10.866 --> 00:32:12.776 A:middle
apply to everything inside that

00:32:12.776 --> 00:32:13.586 A:middle
and all of its children.

00:32:14.436 --> 00:32:15.776 A:middle
Now, you should use the view

00:32:15.776 --> 00:32:17.076 A:middle
controller property whenever

00:32:17.076 --> 00:32:17.796 A:middle
possible.

00:32:17.796 --> 00:32:19.816 A:middle
The view one should only be used

00:32:19.816 --> 00:32:20.816 A:middle
if you don't have a view

00:32:20.816 --> 00:32:22.376 A:middle
controller around for that

00:32:22.376 --> 00:32:23.356 A:middle
particular thing you're trying

00:32:23.356 --> 00:32:24.036 A:middle
to change.

00:32:24.566 --> 00:32:25.646 A:middle
And there are some caveats if

00:32:25.646 --> 00:32:27.116 A:middle
you use that view property, so

00:32:27.116 --> 00:32:27.866 A:middle
be sure to read the

00:32:27.866 --> 00:32:29.066 A:middle
documentation if you do.

00:32:29.956 --> 00:32:31.916 A:middle
Finally, if your entire app

00:32:32.096 --> 00:32:33.456 A:middle
should always just be light or

00:32:33.506 --> 00:32:35.386 A:middle
dark, we have an info p list key

00:32:35.386 --> 00:32:37.276 A:middle
you can set to make this really

00:32:37.846 --> 00:32:37.966 A:middle
easy.

00:32:39.376 --> 00:32:40.446 A:middle
There's also some existing API

00:32:40.446 --> 00:32:41.916 A:middle
that you can use to override

00:32:41.916 --> 00:32:42.446 A:middle
traits.

00:32:42.796 --> 00:32:44.586 A:middle
This will let you override any

00:32:44.586 --> 00:32:45.826 A:middle
trait on a view controller or

00:32:45.826 --> 00:32:46.806 A:middle
presentation controller.

00:32:46.806 --> 00:32:48.346 A:middle
And the key thing to remember

00:32:48.346 --> 00:32:49.886 A:middle
when you use this is that the

00:32:49.886 --> 00:32:51.066 A:middle
override trait collection that

00:32:51.066 --> 00:32:52.986 A:middle
you set should only contain

00:32:52.986 --> 00:32:54.856 A:middle
values for the specific traits

00:32:54.856 --> 00:32:56.066 A:middle
you care about overriding.

00:32:56.866 --> 00:32:58.346 A:middle
Leave all of the other traits

00:32:58.386 --> 00:33:00.186 A:middle
unspecified - just don't touch

00:32:58.386 --> 00:33:00.186 A:middle
unspecified - just don't touch

00:33:00.186 --> 00:33:01.596 A:middle
them - so that UIKit will

00:33:01.596 --> 00:33:03.566 A:middle
automatically fill in the normal

00:33:03.566 --> 00:33:04.896 A:middle
inherited values for those

00:33:04.896 --> 00:33:05.376 A:middle
traits.

00:33:06.556 --> 00:33:07.706 A:middle
That's pretty much all you need

00:33:07.706 --> 00:33:09.056 A:middle
to know to successfully use

00:33:09.056 --> 00:33:10.726 A:middle
Trait Collections in iOS 13.

00:33:12.186 --> 00:33:13.586 A:middle
Let's talk about some of the

00:33:13.586 --> 00:33:15.016 A:middle
other API updates that we have

00:33:15.066 --> 00:33:16.616 A:middle
this year and some other things

00:33:16.616 --> 00:33:17.606 A:middle
to keep in mind as you're

00:33:17.606 --> 00:33:19.046 A:middle
updating your apps to support

00:33:19.046 --> 00:33:19.456 A:middle
Dark Mode.

00:33:20.306 --> 00:33:21.236 A:middle
And how about we'll start with

00:33:21.236 --> 00:33:21.946 A:middle
the status bar.

00:33:23.536 --> 00:33:25.666 A:middle
Prior to iOS 13, we had two

00:33:25.666 --> 00:33:27.056 A:middle
existing status bar styles.

00:33:27.636 --> 00:33:29.566 A:middle
We had the default style and

00:33:29.566 --> 00:33:30.196 A:middle
light content.

00:33:32.046 --> 00:33:34.176 A:middle
New in iOS 13, we have a new

00:33:34.176 --> 00:33:36.296 A:middle
dark content style, which is

00:33:36.386 --> 00:33:38.336 A:middle
sort of taking over the place of

00:33:38.336 --> 00:33:39.856 A:middle
what used to be default, and

00:33:39.856 --> 00:33:41.276 A:middle
we've repurposed default to

00:33:41.276 --> 00:33:43.316 A:middle
become an automatic style

00:33:43.316 --> 00:33:43.916 A:middle
switching mode.

00:33:45.326 --> 00:33:46.466 A:middle
Now, the automatic switching is

00:33:46.556 --> 00:33:47.906 A:middle
based on the user interface

00:33:47.906 --> 00:33:49.226 A:middle
style of the view controller

00:33:49.226 --> 00:33:50.596 A:middle
that controls the status bar

00:33:50.596 --> 00:33:51.156 A:middle
appearance.

00:33:51.556 --> 00:33:53.326 A:middle
And as always, you can override

00:33:53.446 --> 00:33:55.526 A:middle
a specific preferred status bar

00:33:55.526 --> 00:33:56.856 A:middle
style on a view controller and

00:33:56.856 --> 00:33:58.336 A:middle
recurrent a particular style if

00:33:58.336 --> 00:33:58.806 A:middle
you desire.

00:33:59.916 --> 00:34:02.076 A:middle
Finally, it's not shown here but

00:33:59.916 --> 00:34:02.076 A:middle
Finally, it's not shown here but

00:34:02.076 --> 00:34:03.436 A:middle
just a quick note that we also

00:34:03.436 --> 00:34:04.916 A:middle
updated UIScroll view's

00:34:05.006 --> 00:34:06.866 A:middle
indicator style to behave in a

00:34:06.866 --> 00:34:08.275 A:middle
really similar way to this.

00:34:09.826 --> 00:34:11.886 A:middle
Next, let's talk about activity

00:34:11.886 --> 00:34:12.536 A:middle
indicators.

00:34:13.235 --> 00:34:15.636 A:middle
In iOS 13, these existing styles

00:34:15.636 --> 00:34:16.436 A:middle
are now deprecating.

00:34:16.726 --> 00:34:17.926 A:middle
And that's because they were

00:34:17.926 --> 00:34:19.656 A:middle
implying a very specific color

00:34:19.656 --> 00:34:20.666 A:middle
appearance, which doesn't really

00:34:20.666 --> 00:34:21.436 A:middle
make sense anymore.

00:34:22.456 --> 00:34:23.366 A:middle
But in their place, we've

00:34:23.366 --> 00:34:24.706 A:middle
introduced a handful of new

00:34:24.706 --> 00:34:26.416 A:middle
styles, which are just based on

00:34:26.416 --> 00:34:27.536 A:middle
the size of the activity

00:34:27.536 --> 00:34:27.936 A:middle
indicator.

00:34:29.116 --> 00:34:30.906 A:middle
They also use a nice dynamic

00:34:31.056 --> 00:34:32.735 A:middle
grey color by default, so they

00:34:32.735 --> 00:34:34.146 A:middle
look great in light and dark

00:34:34.146 --> 00:34:35.306 A:middle
mode without any changes.

00:34:35.966 --> 00:34:37.536 A:middle
But you can use the existing

00:34:37.656 --> 00:34:39.696 A:middle
color property to set a custom,

00:34:39.696 --> 00:34:41.656 A:middle
dynamic color, or even just a

00:34:41.656 --> 00:34:43.266 A:middle
static color like white, if you

00:34:43.266 --> 00:34:44.606 A:middle
want a particular fixed

00:34:44.606 --> 00:34:44.976 A:middle
appearance.

00:34:47.505 --> 00:34:49.376 A:middle
Next, here are a few things to

00:34:49.376 --> 00:34:51.096 A:middle
keep in mind when you're dealing

00:34:51.096 --> 00:34:52.315 A:middle
with text in your app.

00:34:53.416 --> 00:34:54.946 A:middle
Now, by default, text classes

00:34:54.946 --> 00:34:57.126 A:middle
like UILabel, UIText field, and

00:34:57.126 --> 00:34:59.766 A:middle
UIText view use the label color.

00:35:00.206 --> 00:35:01.476 A:middle
So, if you're just setting the

00:35:01.476 --> 00:35:03.596 A:middle
text on a new text field or text

00:35:03.636 --> 00:35:05.596 A:middle
view, or a label, you'll just

00:35:05.596 --> 00:35:07.056 A:middle
get a nice, correct appearance

00:35:07.146 --> 00:35:08.366 A:middle
in both light and dark by

00:35:08.366 --> 00:35:08.796 A:middle
default.

00:35:09.616 --> 00:35:11.266 A:middle
But if you use attributed

00:35:11.266 --> 00:35:12.976 A:middle
strings in your app, and you set

00:35:12.976 --> 00:35:14.346 A:middle
the attributed text of one of

00:35:14.346 --> 00:35:16.516 A:middle
these text classes, or if you

00:35:16.516 --> 00:35:17.976 A:middle
draw that attributed string

00:35:17.976 --> 00:35:20.026 A:middle
yourself manually, you should

00:35:20.026 --> 00:35:21.206 A:middle
keep in mind that you need to

00:35:21.206 --> 00:35:22.646 A:middle
specify a foreground color.

00:35:23.726 --> 00:35:25.206 A:middle
Drawing an attributed string

00:35:25.316 --> 00:35:26.686 A:middle
without any foreground color

00:35:26.686 --> 00:35:28.536 A:middle
attribute like this, is actually

00:35:28.536 --> 00:35:30.316 A:middle
defined to yield black text.

00:35:31.456 --> 00:35:33.296 A:middle
So, if you see black text in

00:35:33.296 --> 00:35:34.856 A:middle
your app in Dark Mode, and

00:35:34.856 --> 00:35:36.016 A:middle
you're using attributed strings,

00:35:36.126 --> 00:35:37.516 A:middle
just make sure you're specifying

00:35:37.576 --> 00:35:39.536 A:middle
a dynamic color like label, just

00:35:39.536 --> 00:35:40.866 A:middle
as you see here for that

00:35:40.946 --> 00:35:42.166 A:middle
foreground color attribute.

00:35:42.506 --> 00:35:44.706 A:middle
It's really quite easy.

00:35:45.506 --> 00:35:47.476 A:middle
Now, for those of you who have

00:35:47.666 --> 00:35:49.486 A:middle
embedded web content in your

00:35:49.486 --> 00:35:51.466 A:middle
app, you should know that Dark

00:35:51.466 --> 00:35:52.596 A:middle
Mode is opt in.

00:35:53.576 --> 00:35:54.656 A:middle
You can do this by using the

00:35:54.656 --> 00:35:56.826 A:middle
color scheme style property, or

00:35:56.826 --> 00:35:58.076 A:middle
a meta tag with the same name.

00:35:59.006 --> 00:36:00.666 A:middle
And then you can use the prefers

00:35:59.006 --> 00:36:00.666 A:middle
And then you can use the prefers

00:36:00.666 --> 00:36:02.496 A:middle
color scheme media query to

00:36:02.496 --> 00:36:03.796 A:middle
actually customize different

00:36:03.796 --> 00:36:05.276 A:middle
colors and images in both light

00:36:05.276 --> 00:36:05.816 A:middle
and dark mode.

00:36:07.096 --> 00:36:08.136 A:middle
You can learn more about all

00:36:08.136 --> 00:36:09.516 A:middle
these details in the Supporting

00:36:09.516 --> 00:36:11.366 A:middle
Dark Mode in Web Content video

00:36:11.666 --> 00:36:12.946 A:middle
from WWDC this year.

00:36:14.626 --> 00:36:16.706 A:middle
Now for those of you with tvOS

00:36:16.706 --> 00:36:19.466 A:middle
apps, there's a good chance that

00:36:19.466 --> 00:36:20.766 A:middle
you already support Dark Mode

00:36:21.426 --> 00:36:22.516 A:middle
since we've had that available

00:36:22.516 --> 00:36:23.326 A:middle
for a few years now.

00:36:24.476 --> 00:36:26.346 A:middle
Now, this year, your tvOS 13

00:36:26.346 --> 00:36:27.806 A:middle
apps will be expected to support

00:36:27.806 --> 00:36:29.936 A:middle
Dark Mode by default, just like

00:36:29.936 --> 00:36:30.546 A:middle
on iOS.

00:36:31.796 --> 00:36:33.006 A:middle
Most of the new API that we've

00:36:33.066 --> 00:36:34.466 A:middle
covered today, such as all the

00:36:34.466 --> 00:36:36.746 A:middle
dynamic colors and image assets,

00:36:37.056 --> 00:36:37.836 A:middle
it's all available.

00:36:38.546 --> 00:36:39.986 A:middle
But a few things like the new

00:36:39.986 --> 00:36:41.726 A:middle
system materials, are available

00:36:41.756 --> 00:36:42.496 A:middle
on iOS only.

00:36:43.816 --> 00:36:45.076 A:middle
Now, if you do already support

00:36:45.076 --> 00:36:47.786 A:middle
Dark Mode on your tvOS app, you

00:36:47.786 --> 00:36:49.356 A:middle
can feel free to adopt all of

00:36:49.356 --> 00:36:51.086 A:middle
these new features and new APIs

00:36:51.086 --> 00:36:51.966 A:middle
anywhere that you'd like.

00:36:53.076 --> 00:36:54.246 A:middle
But if your existing Dark Mode

00:36:54.246 --> 00:36:55.426 A:middle
implementation already is

00:36:55.426 --> 00:36:56.746 A:middle
working well, you don't need to

00:36:56.746 --> 00:36:57.576 A:middle
throw any of that away.

00:37:00.256 --> 00:37:01.606 A:middle
Now, if you'll be bringing your

00:37:01.606 --> 00:37:03.206 A:middle
iPad app to the Mac this year,

00:37:03.836 --> 00:37:05.196 A:middle
you can support Dark Mode on the

00:37:05.196 --> 00:37:07.446 A:middle
Mac in the exact same way, using

00:37:07.526 --> 00:37:09.066 A:middle
all the same API that we just

00:37:09.066 --> 00:37:10.556 A:middle
talked about for iOS.

00:37:11.456 --> 00:37:13.456 A:middle
Now, your Mac app will follow

00:37:13.456 --> 00:37:14.696 A:middle
the Dark Mode setting that the

00:37:14.696 --> 00:37:16.106 A:middle
user selects in system

00:37:16.106 --> 00:37:16.636 A:middle
preferences.

00:37:17.156 --> 00:37:18.766 A:middle
Very simple, just like on iOS.

00:37:19.346 --> 00:37:20.916 A:middle
But the only difference that you

00:37:20.916 --> 00:37:22.456 A:middle
actually will notice is that in

00:37:22.456 --> 00:37:25.186 A:middle
some cases, on the Mac, UIKit

00:37:25.186 --> 00:37:26.686 A:middle
will automatically provide

00:37:26.846 --> 00:37:28.436 A:middle
slightly different versions of

00:37:28.436 --> 00:37:30.006 A:middle
dynamic colors for those system

00:37:30.006 --> 00:37:31.486 A:middle
colors, and also some of the

00:37:31.486 --> 00:37:33.356 A:middle
materials, to better match the

00:37:33.356 --> 00:37:34.696 A:middle
ones that would normally be

00:37:34.696 --> 00:37:36.096 A:middle
provided by a framework like

00:37:36.096 --> 00:37:36.846 A:middle
AppKit on the Mac.

00:37:37.476 --> 00:37:38.826 A:middle
So, your app will look great

00:37:38.926 --> 00:37:40.566 A:middle
right alongside other AppKit

00:37:40.566 --> 00:37:41.926 A:middle
apps on the Mac as well.

00:37:44.856 --> 00:37:46.516 A:middle
Believe it or not, that's about

00:37:46.516 --> 00:37:47.866 A:middle
all you need to know so that you

00:37:47.866 --> 00:37:49.666 A:middle
can start updating all of your

00:37:49.666 --> 00:37:51.576 A:middle
apps for Dark Mode in iOS 13

00:37:51.576 --> 00:37:51.936 A:middle
today.

00:37:53.696 --> 00:37:55.166 A:middle
Once you build against the iOS

00:37:55.166 --> 00:37:57.146 A:middle
13 SCK, your app will

00:37:57.146 --> 00:37:58.446 A:middle
participate in Dark Mode by

00:37:58.446 --> 00:37:58.846 A:middle
default.

00:37:59.726 --> 00:38:00.846 A:middle
But you might have some work to

00:37:59.726 --> 00:38:00.846 A:middle
But you might have some work to

00:38:00.846 --> 00:38:03.696 A:middle
do, as you saw in our demos.

00:38:03.836 --> 00:38:05.516 A:middle
Now, we've made it really easy

00:38:05.666 --> 00:38:06.826 A:middle
to take advantage of all of

00:38:06.826 --> 00:38:08.566 A:middle
these new features and quickly

00:38:08.566 --> 00:38:10.216 A:middle
get your app going with Dark

00:38:10.216 --> 00:38:10.446 A:middle
Mode.

00:38:11.176 --> 00:38:13.196 A:middle
So be sure to start by using all

00:38:13.196 --> 00:38:14.946 A:middle
of the new dynamic system colors

00:38:14.946 --> 00:38:16.036 A:middle
and materials that we've made

00:38:16.036 --> 00:38:16.926 A:middle
available this year.

00:38:17.376 --> 00:38:19.146 A:middle
And then of course, create your

00:38:19.146 --> 00:38:20.566 A:middle
own custom appearances for

00:38:20.566 --> 00:38:22.126 A:middle
custom colors, custom images,

00:38:22.126 --> 00:38:22.576 A:middle
and more.

00:38:23.366 --> 00:38:24.746 A:middle
Finally, don't forget to take

00:38:24.746 --> 00:38:27.396 A:middle
advantage of all of the powerful

00:38:27.396 --> 00:38:29.026 A:middle
customizations and flexibility

00:38:29.136 --> 00:38:31.126 A:middle
built into UIKit to make your

00:38:31.126 --> 00:38:32.836 A:middle
apps really shine in Dark Mode.

00:38:33.776 --> 00:38:34.946 A:middle
We're really looking forward to

00:38:34.946 --> 00:38:36.886 A:middle
seeing how all of your apps look

00:38:36.886 --> 00:38:38.906 A:middle
in Dark Mode later this year.

00:38:39.836 --> 00:38:41.216 A:middle
For more information, we have

00:38:41.216 --> 00:38:42.756 A:middle
some more content available and

00:38:42.756 --> 00:38:43.886 A:middle
a little bit of sample code up

00:38:43.886 --> 00:38:45.076 A:middle
on our session page.

00:38:45.596 --> 00:38:46.846 A:middle
And with that, thank you very

00:38:46.846 --> 00:38:46.976 A:middle
much.

00:38:47.516 --> 00:38:54.500 A:middle
[ Applause ]
