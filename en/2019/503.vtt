WEBVTT

00:00:01.516 --> 00:00:04.500 A:middle
[ Music ]

00:00:11.776 --> 00:00:13.036 A:middle
&gt;&gt; Welcome to Delivering

00:00:13.036 --> 00:00:14.566 A:middle
Intuitive Media Playback with

00:00:14.566 --> 00:00:14.916 A:middle
AVKit.

00:00:15.516 --> 00:00:17.756 A:middle
[ Applause ]

00:00:18.256 --> 00:00:19.626 A:middle
My name is Jed Lewison, and I'll

00:00:19.626 --> 00:00:21.316 A:middle
be joined a little bit later by

00:00:21.316 --> 00:00:22.416 A:middle
my colleague Dan Wright.

00:00:22.916 --> 00:00:24.206 A:middle
And we're going to talk with you

00:00:24.206 --> 00:00:26.686 A:middle
about media playback with AVKit.

00:00:27.146 --> 00:00:29.756 A:middle
And what's new in best practices

00:00:30.036 --> 00:00:31.786 A:middle
with AVPlayerViewController on

00:00:31.976 --> 00:00:33.706 A:middle
iOS and tvOS.

00:00:35.256 --> 00:00:37.326 A:middle
AVKit is a cross platform media

00:00:37.326 --> 00:00:39.026 A:middle
playback UI framework built on

00:00:39.026 --> 00:00:40.676 A:middle
top of AVFoundation in

00:00:40.676 --> 00:00:41.356 A:middle
CoreMedia.

00:00:41.656 --> 00:00:43.176 A:middle
And our mission is to make it

00:00:43.176 --> 00:00:45.746 A:middle
easy for you to show and play

00:00:45.746 --> 00:00:47.266 A:middle
AVPlayer-based media content

00:00:47.646 --> 00:00:49.876 A:middle
using the same user interface

00:00:50.436 --> 00:00:51.976 A:middle
used by Apple's own apps.

00:00:53.326 --> 00:00:55.506 A:middle
For UIKit apps, we provide

00:00:55.666 --> 00:00:56.966 A:middle
AVPlayerViewController.

00:00:58.246 --> 00:01:00.236 A:middle
For APKit apps, we provide

00:00:58.246 --> 00:01:00.236 A:middle
For APKit apps, we provide

00:01:00.236 --> 00:01:00.876 A:middle
AVPlayerView.

00:01:01.316 --> 00:01:03.316 A:middle
And for both UIKit and APKit

00:01:03.316 --> 00:01:04.406 A:middle
apps, we provide

00:01:04.406 --> 00:01:05.906 A:middle
AVRoutePickerView, which lets

00:01:05.906 --> 00:01:07.546 A:middle
you add a wireless route picker

00:01:07.806 --> 00:01:09.706 A:middle
to your custom playback UI's.

00:01:11.166 --> 00:01:11.976 A:middle
So let's take a look at some

00:01:11.976 --> 00:01:12.266 A:middle
code.

00:01:12.736 --> 00:01:14.086 A:middle
Getting started with

00:01:14.086 --> 00:01:16.586 A:middle
AVPlayerViewController on iOS is

00:01:16.586 --> 00:01:18.546 A:middle
incredibly easy, and tvOS.

00:01:19.226 --> 00:01:20.286 A:middle
The first thing you do is you

00:01:20.286 --> 00:01:21.236 A:middle
create an AVPlayer.

00:01:22.396 --> 00:01:23.846 A:middle
Then, you create and

00:01:23.846 --> 00:01:25.356 A:middle
AVPlayerViewController and

00:01:25.356 --> 00:01:26.566 A:middle
assign to it the player that you

00:01:26.566 --> 00:01:27.346 A:middle
just created.

00:01:28.096 --> 00:01:29.976 A:middle
And finally, you present it.

00:01:29.976 --> 00:01:31.786 A:middle
And that's all there is to it.

00:01:32.516 --> 00:01:33.556 A:middle
That's all it takes to get a

00:01:33.556 --> 00:01:35.176 A:middle
rich and fully functional media

00:01:35.236 --> 00:01:37.026 A:middle
playback UI that will be

00:01:37.076 --> 00:01:39.216 A:middle
familiar to your users because

00:01:39.216 --> 00:01:41.136 A:middle
it's the same UI used by Apple

00:01:41.406 --> 00:01:42.676 A:middle
in its own apps.

00:01:43.356 --> 00:01:45.176 A:middle
But there's a lot of power below

00:01:45.176 --> 00:01:45.906 A:middle
the surface.

00:01:46.016 --> 00:01:48.066 A:middle
And that's because when you use

00:01:48.066 --> 00:01:50.726 A:middle
AVKit, you own the media

00:01:50.776 --> 00:01:51.926 A:middle
playback objects.

00:01:52.366 --> 00:01:54.496 A:middle
You are in control of creating

00:01:54.556 --> 00:01:55.576 A:middle
and managing them.

00:01:55.906 --> 00:01:57.906 A:middle
And video rendering is built on

00:01:57.906 --> 00:02:00.546 A:middle
top of the same core technology

00:01:57.906 --> 00:02:00.546 A:middle
top of the same core technology

00:02:00.766 --> 00:02:02.286 A:middle
that powers AVPlayerLayer.

00:02:03.066 --> 00:02:03.946 A:middle
That means you get the full

00:02:03.946 --> 00:02:05.586 A:middle
power of AVFoundation in

00:02:05.586 --> 00:02:06.996 A:middle
CoreMedia playback UI's,

00:02:07.576 --> 00:02:09.045 A:middle
including all the power

00:02:09.045 --> 00:02:10.186 A:middle
delivered by AVPlayer,

00:02:10.186 --> 00:02:12.746 A:middle
AVPlayerItem, and AVAsset.

00:02:12.926 --> 00:02:15.516 A:middle
But because AVKit also sit on

00:02:15.516 --> 00:02:18.276 A:middle
top of UIKit and AppKit, you get

00:02:18.276 --> 00:02:20.236 A:middle
a user experience tailored to

00:02:20.236 --> 00:02:21.606 A:middle
each of Apple's unique

00:02:21.836 --> 00:02:22.586 A:middle
platforms.

00:02:22.816 --> 00:02:24.746 A:middle
So AVKit gives you the best of

00:02:24.746 --> 00:02:25.456 A:middle
both worlds.

00:02:27.156 --> 00:02:28.936 A:middle
You get full control over your

00:02:28.936 --> 00:02:30.276 A:middle
media playback objects.

00:02:30.686 --> 00:02:33.746 A:middle
And a familiar API for showing

00:02:33.746 --> 00:02:35.746 A:middle
and displaying them using UIKit

00:02:35.746 --> 00:02:37.246 A:middle
and APKit-based APIs.

00:02:38.576 --> 00:02:40.666 A:middle
So, that's a high-level look at

00:02:40.666 --> 00:02:41.296 A:middle
AVKIt.

00:02:41.296 --> 00:02:43.476 A:middle
Let's dive right into what's new

00:02:43.836 --> 00:02:45.296 A:middle
in AVPlayerViewController and

00:02:45.406 --> 00:02:47.046 A:middle
iOS for iOS 13.

00:02:47.436 --> 00:02:49.936 A:middle
I'm going to start talking about

00:02:50.086 --> 00:02:51.936 A:middle
new full screen callbacks that

00:02:51.936 --> 00:02:53.296 A:middle
we added that inform you about

00:02:53.296 --> 00:02:55.676 A:middle
transitions from embedded inline

00:02:55.676 --> 00:02:58.096 A:middle
presentations to full screen and

00:02:58.096 --> 00:02:59.366 A:middle
entering full screen and exiting

00:02:59.366 --> 00:02:59.936 A:middle
full screens.

00:02:59.936 --> 00:03:02.746 A:middle
So, to motivate this, in this

00:02:59.936 --> 00:03:02.746 A:middle
So, to motivate this, in this

00:03:02.746 --> 00:03:05.096 A:middle
video, what we'll see is the

00:03:05.256 --> 00:03:06.416 A:middle
user's going to enter full

00:03:06.416 --> 00:03:08.156 A:middle
screen here and then start an

00:03:08.156 --> 00:03:09.626 A:middle
interactive dismissal.

00:03:10.206 --> 00:03:12.016 A:middle
But, they'll cancel that

00:03:12.016 --> 00:03:12.636 A:middle
dismissal.

00:03:12.836 --> 00:03:13.866 A:middle
So now we're back to full

00:03:13.866 --> 00:03:14.366 A:middle
screen.

00:03:14.686 --> 00:03:17.576 A:middle
And now the user has dismissed,

00:03:17.686 --> 00:03:19.246 A:middle
and we're back to where we

00:03:19.246 --> 00:03:20.056 A:middle
started with an

00:03:20.056 --> 00:03:21.936 A:middle
AVPlayerViewController embedded

00:03:21.936 --> 00:03:22.386 A:middle
inline.

00:03:23.336 --> 00:03:25.316 A:middle
So, the new API we're delivering

00:03:25.316 --> 00:03:27.456 A:middle
in iOS 13 informs you about all

00:03:27.456 --> 00:03:29.136 A:middle
of these states by extending

00:03:29.136 --> 00:03:30.656 A:middle
AVPlayerViewController Delegate.

00:03:32.056 --> 00:03:33.516 A:middle
You get notifications when a

00:03:33.606 --> 00:03:35.636 A:middle
full screen presentation begins

00:03:35.836 --> 00:03:36.456 A:middle
or ends.

00:03:36.606 --> 00:03:37.766 A:middle
And it looks like this.

00:03:38.966 --> 00:03:40.246 A:middle
Two new delegate methods.

00:03:41.076 --> 00:03:42.646 A:middle
If you link against the iOS 13

00:03:42.786 --> 00:03:44.366 A:middle
SDK, they will be available

00:03:44.366 --> 00:03:48.096 A:middle
starting with iOS 12, one for

00:03:48.096 --> 00:03:49.136 A:middle
beginning a full screen

00:03:49.136 --> 00:03:51.686 A:middle
presentation, and one that is

00:03:51.686 --> 00:03:52.516 A:middle
called when a full screen

00:03:52.516 --> 00:03:53.656 A:middle
presentation ends.

00:03:54.386 --> 00:03:55.386 A:middle
So, let's take a look at an

00:03:55.386 --> 00:03:56.426 A:middle
implementation here.

00:03:56.916 --> 00:03:58.356 A:middle
And the key object is the

00:03:58.356 --> 00:03:59.716 A:middle
UIViewControllerTransition

00:03:59.746 --> 00:04:00.316 A:middle
Coordinator.

00:03:59.746 --> 00:04:00.316 A:middle
Coordinator.

00:04:00.316 --> 00:04:01.896 A:middle
At that works exactly the same

00:04:02.186 --> 00:04:03.886 A:middle
as it does with any other view

00:04:03.886 --> 00:04:05.376 A:middle
controller transition in UIKit.

00:04:05.376 --> 00:04:06.486 A:middle
And you can learn about all

00:04:06.486 --> 00:04:07.446 A:middle
those details and the power

00:04:07.446 --> 00:04:10.106 A:middle
there from UIKit documentation.

00:04:10.106 --> 00:04:10.946 A:middle
But the key thing I want to

00:04:10.946 --> 00:04:13.996 A:middle
focus on here is the completion

00:04:13.996 --> 00:04:15.116 A:middle
handler for the animate

00:04:15.116 --> 00:04:17.206 A:middle
alongsideTransition callback.

00:04:17.206 --> 00:04:18.666 A:middle
And this is where you find out

00:04:18.666 --> 00:04:21.356 A:middle
whether a transition succeeded

00:04:21.596 --> 00:04:23.046 A:middle
or whether the user cancelled

00:04:23.046 --> 00:04:23.216 A:middle
it.

00:04:23.216 --> 00:04:24.706 A:middle
And this is the source of truth

00:04:24.766 --> 00:04:26.396 A:middle
for learning about entering full

00:04:26.396 --> 00:04:27.396 A:middle
screen from an inline

00:04:27.576 --> 00:04:28.256 A:middle
presentation.

00:04:29.306 --> 00:04:31.636 A:middle
And obviously it's interesting

00:04:31.636 --> 00:04:33.266 A:middle
to know whether the player view

00:04:33.266 --> 00:04:35.366 A:middle
controller is full screen or

00:04:35.476 --> 00:04:37.706 A:middle
whether it is embedded inline.

00:04:37.706 --> 00:04:39.486 A:middle
But why is it crucial?

00:04:40.066 --> 00:04:41.906 A:middle
It's important because, let's

00:04:41.906 --> 00:04:43.646 A:middle
take the case of where your

00:04:43.646 --> 00:04:45.166 A:middle
player view controller may have

00:04:45.166 --> 00:04:46.116 A:middle
been in a scroll view.

00:04:46.336 --> 00:04:47.896 A:middle
And the user has entered full

00:04:47.896 --> 00:04:48.376 A:middle
screen.

00:04:48.606 --> 00:04:50.056 A:middle
When the device rotates, as you

00:04:50.056 --> 00:04:51.606 A:middle
know, sometimes your scroll

00:04:51.606 --> 00:04:52.866 A:middle
view's offset might change.

00:04:52.866 --> 00:04:53.846 A:middle
And it's possible that the

00:04:53.846 --> 00:04:55.356 A:middle
player view controller will

00:04:55.356 --> 00:04:56.216 A:middle
scroll offscreen.

00:04:56.996 --> 00:04:59.696 A:middle
And that's okay for it to scroll

00:04:59.696 --> 00:05:00.756 A:middle
offscreen during the full screen

00:04:59.696 --> 00:05:00.756 A:middle
offscreen during the full screen

00:05:00.756 --> 00:05:01.966 A:middle
presentation because the user

00:05:01.966 --> 00:05:02.776 A:middle
can't see it.

00:05:03.266 --> 00:05:04.796 A:middle
But you need to make sure that

00:05:04.846 --> 00:05:06.186 A:middle
the player view controller does

00:05:06.186 --> 00:05:07.056 A:middle
stay alive.

00:05:07.206 --> 00:05:08.806 A:middle
If it is deallocated, the full

00:05:08.806 --> 00:05:11.046 A:middle
screen presentation will end.

00:05:11.736 --> 00:05:14.066 A:middle
So you can use the new API to

00:05:14.566 --> 00:05:16.366 A:middle
know when to take a strong

00:05:16.366 --> 00:05:17.436 A:middle
reference to the player view

00:05:17.436 --> 00:05:20.096 A:middle
controller if your table view

00:05:20.096 --> 00:05:21.666 A:middle
controller or collection view

00:05:21.996 --> 00:05:24.296 A:middle
happens to remove the player

00:05:24.296 --> 00:05:26.306 A:middle
view controller if it's scrolled

00:05:26.306 --> 00:05:26.896 A:middle
offscreen.

00:05:27.396 --> 00:05:28.356 A:middle
But you're still left with the

00:05:28.356 --> 00:05:29.766 A:middle
question of how do you get it

00:05:29.766 --> 00:05:31.866 A:middle
back in place when the user

00:05:31.866 --> 00:05:32.746 A:middle
exits full screen.

00:05:32.746 --> 00:05:35.036 A:middle
And for that, you use the

00:05:35.036 --> 00:05:36.766 A:middle
willEnd variant of the new API.

00:05:36.766 --> 00:05:38.646 A:middle
And this is called the before

00:05:38.646 --> 00:05:39.966 A:middle
the animation begins.

00:05:40.226 --> 00:05:42.756 A:middle
So you can reset the location of

00:05:42.756 --> 00:05:44.486 A:middle
the player view controller in

00:05:44.486 --> 00:05:45.596 A:middle
your UI.

00:05:45.596 --> 00:05:46.696 A:middle
And the user will be none the

00:05:46.696 --> 00:05:47.066 A:middle
wiser.

00:05:47.066 --> 00:05:48.466 A:middle
Everything will be back the way

00:05:48.776 --> 00:05:49.346 A:middle
they expect.

00:05:50.116 --> 00:05:51.126 A:middle
So those are full screen

00:05:51.126 --> 00:05:51.756 A:middle
callbacks.

00:05:53.536 --> 00:05:54.756 A:middle
Now let's take a look at

00:05:54.756 --> 00:05:56.106 A:middle
AVPlayerViewController in iPad

00:05:56.106 --> 00:05:56.856 A:middle
apps on the Mac.

00:05:56.856 --> 00:05:58.886 A:middle
And as you know, iPad apps can

00:05:58.886 --> 00:06:00.146 A:middle
now be built on the Mac.

00:05:58.886 --> 00:06:00.146 A:middle
now be built on the Mac.

00:06:00.596 --> 00:06:02.426 A:middle
And AVPlayerViewController is a

00:06:02.426 --> 00:06:03.676 A:middle
full participant in that.

00:06:04.716 --> 00:06:05.686 A:middle
And here's what it looks like.

00:06:05.866 --> 00:06:07.516 A:middle
You get the same user interface

00:06:07.746 --> 00:06:09.916 A:middle
that you expect from Apple's

00:06:09.916 --> 00:06:11.266 A:middle
playback UIs with all the

00:06:11.266 --> 00:06:12.606 A:middle
functionality that

00:06:12.606 --> 00:06:15.036 A:middle
AVPlayerViewController delivers

00:06:15.166 --> 00:06:15.916 A:middle
for iPad apps.

00:06:15.966 --> 00:06:17.766 A:middle
But you also get some platform

00:06:17.926 --> 00:06:19.386 A:middle
specific features for Mac.

00:06:19.746 --> 00:06:22.176 A:middle
Things like touch bar support,

00:06:22.176 --> 00:06:23.066 A:middle
which you get for free.

00:06:24.146 --> 00:06:25.296 A:middle
And keyboard support.

00:06:27.246 --> 00:06:28.756 A:middle
And we've also added

00:06:29.086 --> 00:06:31.326 A:middle
picture-in-picture support to

00:06:32.496 --> 00:06:34.206 A:middle
iPad apps on the Mac.

00:06:34.666 --> 00:06:35.926 A:middle
In fact, we've extended

00:06:35.926 --> 00:06:37.296 A:middle
picture-in-picture support to

00:06:37.576 --> 00:06:40.256 A:middle
all UIKit and APPKit-based apps

00:06:40.256 --> 00:06:41.396 A:middle
on the Mac for this release.

00:06:42.696 --> 00:06:44.176 A:middle
And how many new lines of code

00:06:44.176 --> 00:06:45.266 A:middle
to you need to use

00:06:45.266 --> 00:06:47.266 A:middle
AVPlayerViewController in an

00:06:47.266 --> 00:06:48.986 A:middle
iPad app on the Mac?

00:06:49.956 --> 00:06:50.416 A:middle
You guessed it.

00:06:51.006 --> 00:06:51.206 A:middle
None.

00:06:52.516 --> 00:06:55.776 A:middle
[ Applause ]

00:06:56.276 --> 00:06:58.436 A:middle
So that's AVPlayerViewController

00:06:58.436 --> 00:06:59.576 A:middle
and iPad apps on the Mac.

00:07:00.506 --> 00:07:01.646 A:middle
Now let's talk about external

00:07:01.646 --> 00:07:02.186 A:middle
metadata.

00:07:02.556 --> 00:07:05.056 A:middle
And to motivate this, imagine

00:07:05.056 --> 00:07:06.906 A:middle
that your AirPlaying content.

00:07:07.306 --> 00:07:09.446 A:middle
And imagine when you did that,

00:07:09.706 --> 00:07:11.576 A:middle
your locked screen looked like

00:07:11.576 --> 00:07:15.306 A:middle
this, instead of like this.

00:07:15.856 --> 00:07:17.986 A:middle
And there's two things that make

00:07:18.116 --> 00:07:20.076 A:middle
it possible to show this UI.

00:07:20.076 --> 00:07:20.966 A:middle
The first thing is you need to

00:07:20.966 --> 00:07:22.816 A:middle
handle remote control commands.

00:07:23.216 --> 00:07:24.846 A:middle
And AVKit handles that for you

00:07:24.846 --> 00:07:26.096 A:middle
automatically for free.

00:07:26.096 --> 00:07:27.336 A:middle
You don't have to do anything.

00:07:28.186 --> 00:07:29.616 A:middle
But you also sometimes have

00:07:29.616 --> 00:07:31.166 A:middle
media that doesn't have all the

00:07:31.166 --> 00:07:32.816 A:middle
metadata that you would want to

00:07:32.816 --> 00:07:34.076 A:middle
publish baked in.

00:07:34.496 --> 00:07:37.186 A:middle
And for that, we're adding this

00:07:37.186 --> 00:07:38.296 A:middle
new API to iOS.

00:07:38.296 --> 00:07:41.946 A:middle
It's actually existed on tvOS.

00:07:42.226 --> 00:07:44.776 A:middle
And you take your AVPlayerItem.

00:07:44.856 --> 00:07:47.136 A:middle
And you can supplement metadata

00:07:47.136 --> 00:07:48.636 A:middle
with things like title,

00:07:48.796 --> 00:07:51.236 A:middle
metadata, or artwork metadata.

00:07:51.486 --> 00:07:52.406 A:middle
It's super easy.

00:07:52.406 --> 00:07:54.286 A:middle
And when you do that, we'll take

00:07:54.286 --> 00:07:57.966 A:middle
care of the rest.

00:07:58.236 --> 00:08:02.006 A:middle
We've also, in iOS 13, improved

00:07:58.236 --> 00:08:02.006 A:middle
We've also, in iOS 13, improved

00:08:02.006 --> 00:08:04.446 A:middle
support for interactive -- for

00:08:04.616 --> 00:08:06.236 A:middle
custom controls from

00:08:06.236 --> 00:08:07.416 A:middle
AVPlayerViewController.

00:08:07.596 --> 00:08:08.776 A:middle
That's always been possible to

00:08:08.776 --> 00:08:10.746 A:middle
do, use custom controls with

00:08:10.746 --> 00:08:13.146 A:middle
AVPlayerViewController on iOS.

00:08:13.676 --> 00:08:15.456 A:middle
But when you did that, you lost

00:08:15.456 --> 00:08:16.726 A:middle
all the other things that

00:08:16.726 --> 00:08:18.136 A:middle
weren't onscreen.

00:08:18.656 --> 00:08:20.246 A:middle
Things like interactive

00:08:20.246 --> 00:08:21.096 A:middle
dismissals.

00:08:21.416 --> 00:08:23.706 A:middle
Or landscape support.

00:08:24.626 --> 00:08:25.996 A:middle
Things like keyboard.

00:08:26.356 --> 00:08:27.296 A:middle
And now in

00:08:27.366 --> 00:08:30.066 A:middle
AVPlayerViewController on iPad

00:08:30.066 --> 00:08:31.306 A:middle
apps for the Mac, touch bar

00:08:31.306 --> 00:08:31.696 A:middle
support.

00:08:31.696 --> 00:08:35.265 A:middle
So, what you can do now in iOS

00:08:35.265 --> 00:08:37.256 A:middle
13 is if you set

00:08:37.256 --> 00:08:38.706 A:middle
showsPlaybackControls to False.

00:08:39.686 --> 00:08:41.426 A:middle
And then you present

00:08:41.426 --> 00:08:43.096 A:middle
AVPlayerViewController modally.

00:08:44.176 --> 00:08:45.856 A:middle
And finally use the

00:08:45.856 --> 00:08:47.616 A:middle
contentOverlayView as a place

00:08:47.616 --> 00:08:48.736 A:middle
where you place your custom

00:08:48.736 --> 00:08:49.266 A:middle
controls.

00:08:50.026 --> 00:08:51.276 A:middle
You can have a completely custom

00:08:51.276 --> 00:08:53.406 A:middle
playback UI but still take

00:08:53.406 --> 00:08:55.416 A:middle
advantage of things like

00:08:55.506 --> 00:08:58.166 A:middle
nowPlayingInfo support

00:08:58.166 --> 00:08:59.776 A:middle
and interactive dismissals.

00:08:59.816 --> 00:09:01.426 A:middle
But there's some things, if you

00:08:59.816 --> 00:09:01.426 A:middle
But there's some things, if you

00:09:01.426 --> 00:09:02.706 A:middle
do this, some things you should

00:09:02.706 --> 00:09:04.486 A:middle
keep in mind.

00:09:04.486 --> 00:09:05.486 A:middle
You still are going to need to

00:09:05.486 --> 00:09:08.046 A:middle
take care of status bar and home

00:09:08.046 --> 00:09:09.686 A:middle
indicator appearance.

00:09:09.916 --> 00:09:11.136 A:middle
And you should always pass

00:09:11.136 --> 00:09:13.786 A:middle
unhandled touches through your

00:09:13.786 --> 00:09:15.546 A:middle
view hierarchy so that AVKit can

00:09:15.546 --> 00:09:17.006 A:middle
handle things like interactive

00:09:17.006 --> 00:09:19.396 A:middle
dismissals or double-tap for

00:09:19.396 --> 00:09:20.876 A:middle
zoom, which we'll talk about in

00:09:20.876 --> 00:09:21.376 A:middle
a little bit.

00:09:22.846 --> 00:09:24.846 A:middle
So, that's a look at what's new

00:09:25.136 --> 00:09:27.246 A:middle
in AVPlayerViewController on

00:09:27.356 --> 00:09:27.816 A:middle
iOS.

00:09:28.246 --> 00:09:29.956 A:middle
There's a bunch more things that

00:09:29.956 --> 00:09:30.526 A:middle
we've added.

00:09:31.406 --> 00:09:35.246 A:middle
And one of them is we've made

00:09:35.246 --> 00:09:36.476 A:middle
great strides in improving

00:09:36.476 --> 00:09:38.076 A:middle
performance in iOS 12.

00:09:38.466 --> 00:09:40.886 A:middle
And it's even better on iOS 13.

00:09:40.886 --> 00:09:43.276 A:middle
So if you're interested in using

00:09:43.276 --> 00:09:44.486 A:middle
AVPlayerViewController in scroll

00:09:44.486 --> 00:09:46.466 A:middle
view, it should be buttery

00:09:46.466 --> 00:09:47.076 A:middle
smooth now.

00:09:48.496 --> 00:09:49.976 A:middle
So, let's talk about some best

00:09:50.026 --> 00:09:51.056 A:middle
practices with

00:09:51.056 --> 00:09:52.146 A:middle
AVPlayerViewController.

00:09:54.416 --> 00:09:56.056 A:middle
I want to talk about three

00:09:56.056 --> 00:09:57.416 A:middle
different ways that we show

00:09:57.696 --> 00:09:59.486 A:middle
video on our devices.

00:09:59.956 --> 00:10:01.436 A:middle
And of course, there's a fourth

00:09:59.956 --> 00:10:01.436 A:middle
And of course, there's a fourth

00:10:01.436 --> 00:10:03.196 A:middle
way that we show video from an

00:10:03.196 --> 00:10:04.376 A:middle
iOS device AirPlay.

00:10:04.376 --> 00:10:06.226 A:middle
And there was a terrific talk on

00:10:06.226 --> 00:10:08.046 A:middle
Tuesday morning at 9:00 a.m. If

00:10:08.046 --> 00:10:09.136 A:middle
you haven't seen it, I would

00:10:09.136 --> 00:10:12.376 A:middle
strongly recommend watching that

00:10:12.376 --> 00:10:12.476 A:middle
talk.

00:10:12.476 --> 00:10:13.806 A:middle
But I'm going to focus on

00:10:13.866 --> 00:10:15.096 A:middle
on-device playback today.

00:10:16.146 --> 00:10:18.056 A:middle
And let's start with full screen

00:10:18.056 --> 00:10:18.866 A:middle
video playback.

00:10:18.866 --> 00:10:21.056 A:middle
And of course, what I mean by

00:10:21.056 --> 00:10:22.856 A:middle
that is full screen in the UIKit

00:10:22.856 --> 00:10:23.656 A:middle
sense of the word.

00:10:23.946 --> 00:10:25.356 A:middle
So, we're talking about covering

00:10:25.356 --> 00:10:27.076 A:middle
your UIWindowScene coordinate

00:10:27.076 --> 00:10:27.576 A:middle
space.

00:10:27.726 --> 00:10:29.296 A:middle
And if we think about it,

00:10:29.296 --> 00:10:31.456 A:middle
there's two different reasons

00:10:31.456 --> 00:10:32.616 A:middle
why we might play a video full

00:10:32.616 --> 00:10:33.086 A:middle
screen.

00:10:33.676 --> 00:10:35.046 A:middle
It could be for sort of a

00:10:35.046 --> 00:10:36.376 A:middle
background video in a splash

00:10:36.376 --> 00:10:37.186 A:middle
screen scenario.

00:10:37.536 --> 00:10:39.146 A:middle
Or because the video is the star

00:10:39.146 --> 00:10:39.686 A:middle
of the show.

00:10:39.686 --> 00:10:41.056 A:middle
And we want full playback

00:10:41.056 --> 00:10:41.556 A:middle
controls.

00:10:41.556 --> 00:10:43.306 A:middle
And let's take a quick look at

00:10:43.306 --> 00:10:44.976 A:middle
the splash screen scenario.

00:10:45.426 --> 00:10:47.866 A:middle
And you're going to have set of

00:10:47.866 --> 00:10:49.766 A:middle
these things that you're going

00:10:49.806 --> 00:10:52.606 A:middle
to want to implement in your

00:10:52.606 --> 00:10:53.406 A:middle
application.

00:10:54.136 --> 00:10:56.286 A:middle
And to do that, you're going to

00:10:56.626 --> 00:10:58.056 A:middle
take the playerViewController.

00:10:58.426 --> 00:10:59.476 A:middle
You're going to embed it as a

00:10:59.476 --> 00:10:59.936 A:middle
child.

00:10:59.936 --> 00:11:01.006 A:middle
So it can be at the bottom of

00:10:59.936 --> 00:11:01.006 A:middle
So it can be at the bottom of

00:11:01.006 --> 00:11:02.126 A:middle
your view hierarchy.

00:11:02.526 --> 00:11:03.356 A:middle
You're going to do things like

00:11:03.446 --> 00:11:05.466 A:middle
disabling playback controls and

00:11:05.646 --> 00:11:07.116 A:middle
setting the video gravity so

00:11:07.116 --> 00:11:08.526 A:middle
that the video scales to fill

00:11:08.526 --> 00:11:09.446 A:middle
the full screen.

00:11:10.296 --> 00:11:11.226 A:middle
If you're using the new video

00:11:11.226 --> 00:11:12.876 A:middle
with alpha APIs that are new in

00:11:12.876 --> 00:11:13.956 A:middle
this release, you're going to

00:11:13.956 --> 00:11:15.246 A:middle
want to set your view's

00:11:15.246 --> 00:11:17.296 A:middle
background color to clear or

00:11:17.296 --> 00:11:19.146 A:middle
some other color to leverage

00:11:19.146 --> 00:11:19.396 A:middle
that.

00:11:21.016 --> 00:11:22.226 A:middle
And there's some things to take

00:11:22.226 --> 00:11:23.956 A:middle
into account with AVFoundation.

00:11:24.456 --> 00:11:25.356 A:middle
You always want to make sure to

00:11:25.356 --> 00:11:27.436 A:middle
prevent external playback with

00:11:27.436 --> 00:11:28.566 A:middle
something that is playing as a

00:11:28.566 --> 00:11:29.396 A:middle
splash screen.

00:11:29.716 --> 00:11:30.276 A:middle
Because you don't want to

00:11:30.276 --> 00:11:32.026 A:middle
interrupt, say, music playing on

00:11:32.026 --> 00:11:33.086 A:middle
someone's Apple TV.

00:11:33.306 --> 00:11:35.316 A:middle
And you want to configure the

00:11:35.316 --> 00:11:36.136 A:middle
audio session.

00:11:36.136 --> 00:11:37.876 A:middle
And especially this last

00:11:37.986 --> 00:11:41.836 A:middle
property on AVAudioSession, that

00:11:42.066 --> 00:11:43.746 A:middle
this secondary audio should be

00:11:43.746 --> 00:11:44.216 A:middle
silenced.

00:11:44.216 --> 00:11:45.966 A:middle
It lets you know if the user is

00:11:46.026 --> 00:11:47.776 A:middle
playing audio from some other

00:11:47.776 --> 00:11:48.566 A:middle
application.

00:11:48.846 --> 00:11:50.206 A:middle
And they want that application

00:11:50.206 --> 00:11:51.476 A:middle
to be -- that audio to be

00:11:51.476 --> 00:11:52.026 A:middle
primary.

00:11:52.656 --> 00:11:53.946 A:middle
In that case, if you have audio

00:11:53.946 --> 00:11:55.056 A:middle
in your splash screen video,

00:11:55.216 --> 00:11:57.236 A:middle
make sure to mute it.

00:11:58.056 --> 00:11:59.546 A:middle
But then, let's look at full

00:11:59.546 --> 00:12:01.036 A:middle
screen playback where the video

00:11:59.546 --> 00:12:01.036 A:middle
screen playback where the video

00:12:01.036 --> 00:12:01.986 A:middle
is the star of the show.

00:12:01.986 --> 00:12:03.046 A:middle
And when we do this, of course

00:12:03.046 --> 00:12:06.456 A:middle
we want playback UI that adapts

00:12:06.886 --> 00:12:08.446 A:middle
beautifully whether it's a

00:12:08.446 --> 00:12:10.506 A:middle
portrait presentation like this

00:12:10.506 --> 00:12:12.696 A:middle
where we have a stacked playback

00:12:12.816 --> 00:12:14.326 A:middle
transport controls.

00:12:14.726 --> 00:12:16.696 A:middle
Or we're in landscape and we

00:12:16.696 --> 00:12:18.596 A:middle
need a slightly different layout

00:12:18.596 --> 00:12:20.086 A:middle
but the same -- but we need to

00:12:20.196 --> 00:12:21.716 A:middle
deliver the same functionality.

00:12:22.406 --> 00:12:23.806 A:middle
So AVPlayerViewController

00:12:24.396 --> 00:12:26.446 A:middle
delivers this to you for free.

00:12:26.916 --> 00:12:28.646 A:middle
And it also does things like,

00:12:28.646 --> 00:12:31.266 A:middle
you'll notice in those two

00:12:31.336 --> 00:12:34.256 A:middle
screen shots the video was

00:12:34.806 --> 00:12:36.066 A:middle
unzoomed in portrait.

00:12:36.066 --> 00:12:37.976 A:middle
And now it's zoomed in

00:12:38.206 --> 00:12:38.836 A:middle
landscape.

00:12:39.566 --> 00:12:40.546 A:middle
And it's zoomed to fill the

00:12:40.546 --> 00:12:42.096 A:middle
entire screen because the user

00:12:42.096 --> 00:12:43.946 A:middle
has generally, in this case, has

00:12:44.006 --> 00:12:46.766 A:middle
played video that is of similar

00:12:46.766 --> 00:12:48.186 A:middle
aspect ratio to the device

00:12:48.186 --> 00:12:50.976 A:middle
aspect ratio in a zoomed format.

00:12:51.286 --> 00:12:53.446 A:middle
But some users prefer to have

00:12:53.826 --> 00:12:56.856 A:middle
video unzoomed, like here.

00:12:57.136 --> 00:12:58.406 A:middle
And when that happens we want to

00:12:58.406 --> 00:13:00.836 A:middle
make sure that the video isn't

00:12:58.406 --> 00:13:00.836 A:middle
make sure that the video isn't

00:13:00.836 --> 00:13:02.856 A:middle
occluded by any physical

00:13:02.856 --> 00:13:04.116 A:middle
characteristic of the device.

00:13:04.706 --> 00:13:07.036 A:middle
AVKit is aware of all these

00:13:07.036 --> 00:13:08.186 A:middle
things and takes care of that

00:13:08.186 --> 00:13:09.276 A:middle
for you when you're using

00:13:09.746 --> 00:13:10.756 A:middle
PlayerViewController.

00:13:10.816 --> 00:13:12.086 A:middle
But rather than running through

00:13:12.496 --> 00:13:14.306 A:middle
every feature that we provide, I

00:13:14.306 --> 00:13:15.966 A:middle
just want to zoom in on two very

00:13:15.966 --> 00:13:17.816 A:middle
small things that we added in

00:13:17.896 --> 00:13:18.856 A:middle
iOS 13.

00:13:19.416 --> 00:13:22.876 A:middle
The first -- in this video,

00:13:23.096 --> 00:13:24.516 A:middle
you're going to hear audio

00:13:24.556 --> 00:13:24.956 A:middle
playing.

00:13:24.956 --> 00:13:26.186 A:middle
And the user's going to tap the

00:13:26.186 --> 00:13:26.766 A:middle
Mute button.

00:13:26.996 --> 00:13:30.276 A:middle
Notice when it mutes, there's a

00:13:30.366 --> 00:13:32.166 A:middle
subtle ramp to the audio.

00:13:32.826 --> 00:13:35.206 A:middle
And there's an animation in the

00:13:35.616 --> 00:13:36.256 A:middle
volume slider.

00:13:37.516 --> 00:13:40.546 A:middle
[ Music ]

00:13:41.046 --> 00:13:43.456 A:middle
And then in this example,

00:13:43.456 --> 00:13:44.286 A:middle
there's an interactive

00:13:44.286 --> 00:13:44.886 A:middle
dismissal.

00:13:44.886 --> 00:13:45.966 A:middle
And notice that the audio

00:13:45.966 --> 00:13:48.366 A:middle
gracefully fades with the user's

00:13:48.656 --> 00:13:49.146 A:middle
dismissal.

00:13:49.146 --> 00:13:50.226 A:middle
And then when the user cancels

00:13:50.226 --> 00:13:51.526 A:middle
the dismissal, the audio comes

00:13:51.526 --> 00:13:52.686 A:middle
back up.

00:13:53.516 --> 00:14:04.296 A:middle
[ Music ]

00:13:53.516 --> 00:14:04.296 A:middle
[ Music ]

00:14:04.796 --> 00:14:06.726 A:middle
So those are two small things,

00:14:06.726 --> 00:14:08.466 A:middle
but they illustrate the level of

00:14:08.466 --> 00:14:09.706 A:middle
attention to detail that we're

00:14:09.706 --> 00:14:10.746 A:middle
able to give to

00:14:10.746 --> 00:14:11.916 A:middle
AVPlayerViewController and that

00:14:11.916 --> 00:14:14.036 A:middle
your users will get for free if

00:14:14.036 --> 00:14:15.796 A:middle
you're able to adopt it in your

00:14:15.796 --> 00:14:16.126 A:middle
app.

00:14:17.816 --> 00:14:20.216 A:middle
You get a whole bunch of other

00:14:20.216 --> 00:14:20.356 A:middle
things.

00:14:20.356 --> 00:14:22.586 A:middle
And the question that you might

00:14:22.586 --> 00:14:23.986 A:middle
ask is how do you get all of

00:14:23.986 --> 00:14:24.466 A:middle
this?

00:14:24.786 --> 00:14:26.416 A:middle
And let's take another look at

00:14:26.416 --> 00:14:26.736 A:middle
code.

00:14:28.566 --> 00:14:30.446 A:middle
So, this is basically the same

00:14:30.446 --> 00:14:31.716 A:middle
thing that I showed earlier in

00:14:31.776 --> 00:14:32.506 A:middle
the talk.

00:14:33.126 --> 00:14:34.136 A:middle
The only addition is this

00:14:34.136 --> 00:14:35.216 A:middle
external metadata.

00:14:35.396 --> 00:14:36.336 A:middle
This line allows you to

00:14:36.496 --> 00:14:38.916 A:middle
supplement your metadata.

00:14:39.486 --> 00:14:41.366 A:middle
And it really is that easy to

00:14:41.366 --> 00:14:42.006 A:middle
get started.

00:14:43.486 --> 00:14:45.056 A:middle
But it's worth talking about why

00:14:45.056 --> 00:14:47.206 A:middle
it's possible for you to do so

00:14:47.206 --> 00:14:50.416 A:middle
little on the UI side and to get

00:14:50.416 --> 00:14:51.506 A:middle
such a good experience.

00:14:51.846 --> 00:14:53.416 A:middle
And so, for that I want to talk

00:14:53.416 --> 00:14:55.746 A:middle
about a couple of best practices

00:14:55.746 --> 00:14:55.906 A:middle
here.

00:14:56.446 --> 00:14:57.696 A:middle
So, when you use

00:14:57.696 --> 00:14:59.246 A:middle
AVPlayerViewController for a

00:14:59.246 --> 00:15:00.276 A:middle
full screen presentation you

00:14:59.246 --> 00:15:00.276 A:middle
full screen presentation you

00:15:00.276 --> 00:15:01.396 A:middle
should always present it

00:15:01.396 --> 00:15:03.506 A:middle
modally, not as a child view

00:15:03.506 --> 00:15:05.026 A:middle
controller of some other view

00:15:05.026 --> 00:15:05.566 A:middle
controller.

00:15:06.076 --> 00:15:07.226 A:middle
And sometimes you may have done

00:15:07.226 --> 00:15:08.376 A:middle
that because you wanted to learn

00:15:08.376 --> 00:15:10.666 A:middle
about presentation state, which

00:15:10.666 --> 00:15:11.466 A:middle
you can now do with the

00:15:11.466 --> 00:15:13.546 A:middle
callbacks that I discussed

00:15:13.546 --> 00:15:14.016 A:middle
earlier.

00:15:14.866 --> 00:15:16.276 A:middle
Presenting modally lets us

00:15:16.386 --> 00:15:17.816 A:middle
handle things like status bar

00:15:17.816 --> 00:15:18.656 A:middle
visibility.

00:15:18.656 --> 00:15:20.436 A:middle
Let's us optimize the screen's

00:15:20.716 --> 00:15:21.816 A:middle
display mode.

00:15:22.066 --> 00:15:25.156 A:middle
It lets us handle video gravity,

00:15:25.156 --> 00:15:27.806 A:middle
video zoom mode, interactive

00:15:27.806 --> 00:15:28.496 A:middle
dismissals.

00:15:29.166 --> 00:15:30.776 A:middle
And when you are presenting

00:15:31.036 --> 00:15:33.166 A:middle
modally full screen, you should

00:15:33.166 --> 00:15:35.246 A:middle
use the default modal

00:15:35.246 --> 00:15:36.086 A:middle
presentation style.

00:15:36.086 --> 00:15:38.676 A:middle
As you may know, in iOS 13, the

00:15:38.676 --> 00:15:40.906 A:middle
new default modal presentation

00:15:40.906 --> 00:15:42.486 A:middle
style is automatic.

00:15:43.076 --> 00:15:44.746 A:middle
And what that resolves to for

00:15:44.746 --> 00:15:46.836 A:middle
AVPlayerViewController is a full

00:15:46.836 --> 00:15:47.826 A:middle
screen presentation.

00:15:48.856 --> 00:15:50.106 A:middle
And there's two types of full

00:15:50.106 --> 00:15:51.456 A:middle
screen presentations: Full

00:15:51.456 --> 00:15:53.386 A:middle
screen and over full screen.

00:15:53.966 --> 00:15:55.336 A:middle
The reason why you want to use

00:15:55.486 --> 00:15:58.036 A:middle
the default is because when your

00:15:58.036 --> 00:15:59.836 A:middle
view controller is presented,

00:15:59.836 --> 00:16:01.966 A:middle
the presenting view can be

00:15:59.836 --> 00:16:01.966 A:middle
the presenting view can be

00:16:01.966 --> 00:16:03.506 A:middle
removed by UIKit.

00:16:04.026 --> 00:16:06.706 A:middle
This allows, because your view

00:16:06.706 --> 00:16:09.676 A:middle
is covering the newly presented

00:16:10.006 --> 00:16:12.206 A:middle
view hierarchy, removing the

00:16:12.206 --> 00:16:13.026 A:middle
presenting view is an

00:16:13.026 --> 00:16:14.606 A:middle
optimization during rotation.

00:16:14.606 --> 00:16:16.386 A:middle
You don't want to do layout when

00:16:16.386 --> 00:16:17.486 A:middle
your view's not even visible.

00:16:17.866 --> 00:16:19.526 A:middle
But it also allows things like

00:16:19.526 --> 00:16:21.306 A:middle
landscape playback if your app

00:16:21.306 --> 00:16:22.906 A:middle
is otherwise portrait only or

00:16:22.906 --> 00:16:24.476 A:middle
this view controller hierarchy

00:16:24.476 --> 00:16:26.046 A:middle
is otherwise portrait only.

00:16:27.746 --> 00:16:29.326 A:middle
It's also best just to leave the

00:16:29.326 --> 00:16:30.866 A:middle
video gravity property alone for

00:16:30.896 --> 00:16:31.886 A:middle
full screen playback.

00:16:32.206 --> 00:16:34.146 A:middle
That allows us to do automatic

00:16:34.146 --> 00:16:35.606 A:middle
behaviors like I was

00:16:35.606 --> 00:16:36.766 A:middle
illustrating before.

00:16:37.196 --> 00:16:39.326 A:middle
If you set the video gravity,

00:16:39.326 --> 00:16:40.506 A:middle
we'll give you exactly what you

00:16:40.506 --> 00:16:40.886 A:middle
want.

00:16:40.886 --> 00:16:42.376 A:middle
We'll zoom the video or unzoom

00:16:42.376 --> 00:16:42.766 A:middle
the video.

00:16:42.766 --> 00:16:43.726 A:middle
But once you do that, the

00:16:43.726 --> 00:16:45.046 A:middle
automatic behavior, we can't do

00:16:45.046 --> 00:16:46.416 A:middle
the automatic behavior anymore.

00:16:46.736 --> 00:16:48.236 A:middle
So your users generally would

00:16:48.236 --> 00:16:49.466 A:middle
prefer to have the automatic

00:16:49.906 --> 00:16:50.656 A:middle
behavior.

00:16:51.096 --> 00:16:52.496 A:middle
And of course, use the new

00:16:52.576 --> 00:16:53.736 A:middle
delegate methods to track the

00:16:53.736 --> 00:16:55.076 A:middle
full screen presentation state.

00:16:56.176 --> 00:16:59.506 A:middle
A couple of tips related to

00:16:59.506 --> 00:17:01.376 A:middle
AVFoundation best practices

00:16:59.506 --> 00:17:01.376 A:middle
AVFoundation best practices

00:17:01.376 --> 00:17:01.616 A:middle
here.

00:17:02.206 --> 00:17:04.796 A:middle
What this one is about, the way

00:17:04.796 --> 00:17:06.546 A:middle
I think about it, is if you're

00:17:06.546 --> 00:17:08.356 A:middle
starting a video, say halfway

00:17:08.356 --> 00:17:11.476 A:middle
into the video, seek the player

00:17:11.476 --> 00:17:14.046 A:middle
item to the resume time before

00:17:14.316 --> 00:17:15.425 A:middle
setting it on the player.

00:17:15.425 --> 00:17:16.606 A:middle
And make sure you're going to

00:17:16.606 --> 00:17:17.705 A:middle
have a playing player that it's

00:17:17.705 --> 00:17:18.455 A:middle
already playing.

00:17:18.455 --> 00:17:20.215 A:middle
And then provide that to

00:17:20.215 --> 00:17:21.316 A:middle
AVPlayerViewController.

00:17:21.316 --> 00:17:22.776 A:middle
And this allows the UI to look

00:17:23.126 --> 00:17:23.406 A:middle
correct.

00:17:23.406 --> 00:17:24.465 A:middle
And more importantly, it avoids

00:17:24.465 --> 00:17:27.636 A:middle
loading content that isn't going

00:17:27.636 --> 00:17:28.676 A:middle
to end up being played.

00:17:30.006 --> 00:17:32.426 A:middle
You should also always observe

00:17:32.426 --> 00:17:35.126 A:middle
AVPlayer's and AVPlayerItem

00:17:35.126 --> 00:17:36.106 A:middle
status property.

00:17:36.906 --> 00:17:39.356 A:middle
Though you can use KVO to

00:17:39.356 --> 00:17:39.876 A:middle
observe them.

00:17:39.876 --> 00:17:41.766 A:middle
When they fail, when the

00:17:41.766 --> 00:17:43.156 A:middle
property status becomes failed,

00:17:43.646 --> 00:17:45.286 A:middle
there's an easy path to recovery

00:17:45.286 --> 00:17:46.126 A:middle
in many cases.

00:17:46.386 --> 00:17:47.566 A:middle
Check the error property.

00:17:47.916 --> 00:17:49.416 A:middle
See if media services were

00:17:49.416 --> 00:17:49.806 A:middle
reset.

00:17:49.806 --> 00:17:51.986 A:middle
And if so, just rebuild your

00:17:51.986 --> 00:17:52.996 A:middle
player, player item, your

00:17:52.996 --> 00:17:55.036 A:middle
AVFoundation object ref and set

00:17:55.036 --> 00:17:55.446 A:middle
it back on the

00:17:55.446 --> 00:17:56.616 A:middle
PlayerViewController and

00:17:56.896 --> 00:17:59.976 A:middle
everything should be fine.

00:18:00.046 --> 00:18:02.576 A:middle
And this property gives you an

00:18:02.576 --> 00:18:04.356 A:middle
optimized video rendering when

00:18:04.706 --> 00:18:05.576 A:middle
you're mirroring.

00:18:06.116 --> 00:18:10.716 A:middle
And of course, always configure

00:18:10.716 --> 00:18:12.026 A:middle
your audio session for playback.

00:18:12.776 --> 00:18:18.056 A:middle
So, when we talk about embedding

00:18:18.256 --> 00:18:19.726 A:middle
AVPlayerViewController inline,

00:18:19.886 --> 00:18:20.956 A:middle
there's a little bit more to

00:18:20.956 --> 00:18:21.446 A:middle
consider.

00:18:22.266 --> 00:18:25.356 A:middle
And we've already talked about

00:18:25.356 --> 00:18:28.466 A:middle
the full screen, new full screen

00:18:28.466 --> 00:18:30.626 A:middle
presentation state callbacks in

00:18:30.626 --> 00:18:31.516 A:middle
iOS 13.

00:18:32.376 --> 00:18:34.236 A:middle
So I won't go over those again.

00:18:34.236 --> 00:18:35.976 A:middle
But, one thing I want to touch

00:18:35.976 --> 00:18:37.156 A:middle
on is if you've used

00:18:37.156 --> 00:18:38.326 A:middle
AVPlayerViewController in the

00:18:38.326 --> 00:18:41.566 A:middle
past, when we enter full screen

00:18:41.896 --> 00:18:42.926 A:middle
from an embedded inline

00:18:42.926 --> 00:18:44.246 A:middle
presentation, the modal

00:18:44.246 --> 00:18:46.296 A:middle
transition style has been in

00:18:46.296 --> 00:18:47.796 A:middle
over full screen style, which

00:18:47.796 --> 00:18:49.056 A:middle
means that your view, your

00:18:49.296 --> 00:18:50.746 A:middle
presenting view, isn't removed.

00:18:50.986 --> 00:18:53.326 A:middle
If your app links against iOS

00:18:53.326 --> 00:18:55.206 A:middle
13, the default presentation

00:18:55.206 --> 00:18:57.316 A:middle
style now will be full screen.

00:18:57.316 --> 00:18:58.426 A:middle
Which means that the presenting

00:18:58.426 --> 00:18:59.416 A:middle
view might be removed.

00:18:59.416 --> 00:19:00.606 A:middle
And that has all the benefits

00:18:59.416 --> 00:19:00.606 A:middle
And that has all the benefits

00:19:00.646 --> 00:19:01.876 A:middle
that I talked about earlier.

00:19:02.866 --> 00:19:04.566 A:middle
So, ideally you'll be able to

00:19:04.566 --> 00:19:07.216 A:middle
leave this modal presentation

00:19:07.216 --> 00:19:08.946 A:middle
style as full screen.

00:19:09.086 --> 00:19:10.446 A:middle
But if you don't, it's okay.

00:19:10.446 --> 00:19:12.126 A:middle
You can still set it to over

00:19:12.126 --> 00:19:12.696 A:middle
full screen.

00:19:12.976 --> 00:19:14.106 A:middle
But the recommendation is to

00:19:14.106 --> 00:19:15.096 A:middle
just stick with the default.

00:19:17.746 --> 00:19:19.036 A:middle
Another thing to consider is

00:19:19.496 --> 00:19:20.696 A:middle
when you have an embedded

00:19:20.826 --> 00:19:23.596 A:middle
presentation, your video, you

00:19:23.596 --> 00:19:25.506 A:middle
may want to zoom the video so

00:19:25.506 --> 00:19:26.946 A:middle
that you don't have black bars

00:19:26.946 --> 00:19:28.286 A:middle
on top or on bottom.

00:19:28.976 --> 00:19:30.216 A:middle
You also might want to have

00:19:30.216 --> 00:19:32.926 A:middle
things like a corner curve to

00:19:32.926 --> 00:19:35.776 A:middle
the video's view port.

00:19:36.486 --> 00:19:38.736 A:middle
And also, you may want to set

00:19:38.736 --> 00:19:40.316 A:middle
the background color of the

00:19:40.316 --> 00:19:40.656 A:middle
view.

00:19:41.006 --> 00:19:42.656 A:middle
You can do all that to

00:19:42.656 --> 00:19:44.106 A:middle
AVPlayerViewController's view or

00:19:44.106 --> 00:19:45.736 A:middle
to the video gravity when it's

00:19:45.776 --> 00:19:46.806 A:middle
embedded inline.

00:19:47.106 --> 00:19:48.446 A:middle
And we'll use that for the

00:19:48.706 --> 00:19:50.326 A:middle
inline part of the presentation.

00:19:51.026 --> 00:19:52.486 A:middle
If the user decides to go full

00:19:52.486 --> 00:19:53.916 A:middle
screen, then we'll do the right

00:19:53.916 --> 00:19:54.306 A:middle
thing there.

00:19:54.306 --> 00:19:56.496 A:middle
So, in contrast to, if you're

00:19:56.496 --> 00:19:57.426 A:middle
just presenting

00:19:57.426 --> 00:19:58.576 A:middle
AVPlayerViewController full

00:19:58.576 --> 00:20:01.006 A:middle
screen, it's okay to -- you can

00:19:58.576 --> 00:20:01.006 A:middle
screen, it's okay to -- you can

00:20:01.006 --> 00:20:02.066 A:middle
change these properties for the

00:20:02.126 --> 00:20:02.996 A:middle
inline portion of the

00:20:02.996 --> 00:20:03.676 A:middle
presentation.

00:20:03.886 --> 00:20:06.496 A:middle
No problem at all.

00:20:08.166 --> 00:20:09.616 A:middle
We also have a couple of

00:20:10.006 --> 00:20:11.966 A:middle
properties that provide

00:20:11.966 --> 00:20:14.336 A:middle
automatic behavior when you have

00:20:14.336 --> 00:20:15.636 A:middle
an inline presentation.

00:20:15.906 --> 00:20:18.266 A:middle
And these allow you to do things

00:20:18.266 --> 00:20:20.006 A:middle
like, if the user taps a big

00:20:20.006 --> 00:20:21.316 A:middle
play button, the

00:20:21.316 --> 00:20:23.166 A:middle
PlayerViewController will -- the

00:20:23.166 --> 00:20:23.706 A:middle
content of the

00:20:23.706 --> 00:20:24.576 A:middle
PlayerViewController will

00:20:24.576 --> 00:20:26.076 A:middle
automatically enter full screen.

00:20:26.806 --> 00:20:29.156 A:middle
And similarly, at the end of the

00:20:29.156 --> 00:20:31.616 A:middle
video, will exit full screen.

00:20:32.026 --> 00:20:34.696 A:middle
And it's really best for us to

00:20:34.906 --> 00:20:36.066 A:middle
handle those things on your

00:20:36.066 --> 00:20:36.386 A:middle
behalf.

00:20:36.486 --> 00:20:37.886 A:middle
Because for example, let's say

00:20:37.886 --> 00:20:40.626 A:middle
that a user is scrubbing to the

00:20:40.626 --> 00:20:41.476 A:middle
end of a video.

00:20:42.316 --> 00:20:43.176 A:middle
Well, the time's going to be the

00:20:43.176 --> 00:20:44.776 A:middle
end of the video, but you don't

00:20:44.776 --> 00:20:46.616 A:middle
want to dismiss the video at

00:20:46.616 --> 00:20:47.106 A:middle
that point.

00:20:47.106 --> 00:20:48.306 A:middle
Because they're probably just

00:20:48.306 --> 00:20:49.006 A:middle
seeking around.

00:20:49.276 --> 00:20:50.586 A:middle
We keep track of what the user

00:20:50.586 --> 00:20:51.056 A:middle
is doing.

00:20:51.056 --> 00:20:52.946 A:middle
And we'll only exit if it's

00:20:53.106 --> 00:20:53.726 A:middle
appropriate.

00:20:57.046 --> 00:20:57.866 A:middle
Of course, you're always going

00:20:57.866 --> 00:20:58.566 A:middle
to want to adopt

00:20:58.756 --> 00:21:00.646 A:middle
UIViewController containment

00:20:58.756 --> 00:21:00.646 A:middle
UIViewController containment

00:21:00.646 --> 00:21:01.286 A:middle
API.

00:21:01.806 --> 00:21:04.726 A:middle
And it looks like this.

00:21:09.566 --> 00:21:10.786 A:middle
One other thing to keep in mind

00:21:10.786 --> 00:21:12.406 A:middle
is if you have a lot of videos

00:21:12.406 --> 00:21:13.516 A:middle
that you're scrolling through,

00:21:14.056 --> 00:21:15.946 A:middle
you may find that having a

00:21:15.946 --> 00:21:19.196 A:middle
poster image is a good idea as a

00:21:19.196 --> 00:21:21.246 A:middle
way to show a frame of the video

00:21:21.486 --> 00:21:23.986 A:middle
without having to have the video

00:21:23.986 --> 00:21:24.716 A:middle
fully loaded.

00:21:24.716 --> 00:21:25.986 A:middle
And that can take a little bit

00:21:25.986 --> 00:21:26.556 A:middle
of time.

00:21:27.236 --> 00:21:28.246 A:middle
And so you use

00:21:28.246 --> 00:21:29.066 A:middle
AVPlayerViewController's

00:21:29.066 --> 00:21:30.656 A:middle
contentOverlayView for this.

00:21:31.086 --> 00:21:33.126 A:middle
But then you want to know when

00:21:33.236 --> 00:21:35.886 A:middle
is the video -- when is the

00:21:35.886 --> 00:21:37.106 A:middle
first frame of video ready so

00:21:37.106 --> 00:21:39.706 A:middle
that you can remove the content

00:21:39.706 --> 00:21:41.426 A:middle
that you just put in the overlay

00:21:41.426 --> 00:21:41.696 A:middle
view.

00:21:42.966 --> 00:21:43.926 A:middle
You do that by observing

00:21:43.926 --> 00:21:45.836 A:middle
isReadyForDisplay on

00:21:45.836 --> 00:21:46.816 A:middle
AVPlayerViewController.

00:21:46.816 --> 00:21:48.136 A:middle
It's a property that you can

00:21:48.136 --> 00:21:49.656 A:middle
observe using KVO.

00:21:49.656 --> 00:21:51.106 A:middle
And this is what it looks like

00:21:51.136 --> 00:21:51.836 A:middle
to observe it.

00:21:52.086 --> 00:21:52.766 A:middle
You always want to take the

00:21:52.766 --> 00:21:53.916 A:middle
initial value because it could

00:21:53.916 --> 00:21:55.686 A:middle
be the video frame is already

00:21:55.866 --> 00:21:56.276 A:middle
rendered.

00:22:00.506 --> 00:22:01.636 A:middle
I want to finish by talking a

00:22:01.636 --> 00:22:02.166 A:middle
little bit about

00:22:02.166 --> 00:22:03.026 A:middle
picture-in-picture, which is

00:22:03.026 --> 00:22:04.836 A:middle
super easy to add to your app.

00:22:04.836 --> 00:22:06.236 A:middle
AVPlayerViewController takes

00:22:06.266 --> 00:22:08.326 A:middle
care of most things for you.

00:22:08.326 --> 00:22:09.916 A:middle
You do have to configure your

00:22:09.916 --> 00:22:10.876 A:middle
application to support

00:22:10.876 --> 00:22:11.526 A:middle
picture-in-picture.

00:22:11.526 --> 00:22:12.266 A:middle
And it looks like this.

00:22:12.266 --> 00:22:14.566 A:middle
Just click a check box in XCode.

00:22:16.666 --> 00:22:19.476 A:middle
One thing, this applies whether

00:22:19.476 --> 00:22:20.066 A:middle
you're using

00:22:20.066 --> 00:22:22.186 A:middle
AVPictureInPictureController or

00:22:22.186 --> 00:22:23.206 A:middle
AVPlayerViewController.

00:22:23.556 --> 00:22:26.206 A:middle
When a user swipes up to go home

00:22:26.456 --> 00:22:29.566 A:middle
in iPad, picture-in-picture may

00:22:29.566 --> 00:22:30.636 A:middle
automatically start.

00:22:30.636 --> 00:22:33.116 A:middle
And that means when your app is

00:22:33.116 --> 00:22:34.876 A:middle
entering background, you should

00:22:34.876 --> 00:22:37.106 A:middle
not pause any playing video.

00:22:37.646 --> 00:22:38.606 A:middle
Because picture-in-picture may

00:22:38.606 --> 00:22:39.066 A:middle
be starting.

00:22:39.066 --> 00:22:40.276 A:middle
You don't want to pause the very

00:22:40.276 --> 00:22:42.396 A:middle
video that your user is trying

00:22:42.396 --> 00:22:43.326 A:middle
to keep on watching.

00:22:43.686 --> 00:22:45.606 A:middle
So, don't pause.

00:22:45.976 --> 00:22:48.006 A:middle
And AVFoundation will take care

00:22:48.006 --> 00:22:48.746 A:middle
of this for you.

00:22:49.066 --> 00:22:50.286 A:middle
But if you absolutely must

00:22:50.316 --> 00:22:51.806 A:middle
pause, you should wait for the

00:22:52.176 --> 00:22:53.686 A:middle
application's background state,

00:22:54.046 --> 00:22:56.266 A:middle
application state, or the window

00:22:56.306 --> 00:22:57.526 A:middle
scene state to reach background.

00:22:57.526 --> 00:22:58.856 A:middle
And this is how you do that.

00:23:01.556 --> 00:23:02.736 A:middle
You can track state about

00:23:02.736 --> 00:23:04.946 A:middle
whether you're in

00:23:04.946 --> 00:23:06.036 A:middle
picture-picture or leaving

00:23:06.036 --> 00:23:08.456 A:middle
picture-picture using the

00:23:08.456 --> 00:23:09.746 A:middle
AVPlayerViewControllerDelegate.

00:23:11.136 --> 00:23:12.106 A:middle
And always toggle

00:23:12.316 --> 00:23:13.486 A:middle
PictureInPicture Playback.

00:23:15.666 --> 00:23:16.966 A:middle
Be prepared for your view

00:23:16.966 --> 00:23:18.576 A:middle
controller to dismiss when

00:23:18.576 --> 00:23:20.526 A:middle
picture-in-picture is starting.

00:23:21.056 --> 00:23:22.466 A:middle
And unlike in the full screen

00:23:22.466 --> 00:23:23.576 A:middle
case, we will prevent

00:23:23.616 --> 00:23:24.466 A:middle
deallocation of

00:23:24.466 --> 00:23:26.876 A:middle
AVPlayerViewController while

00:23:27.946 --> 00:23:30.266 A:middle
picture-in-picture is active.

00:23:30.826 --> 00:23:32.506 A:middle
But if the view controller's

00:23:32.506 --> 00:23:33.656 A:middle
been dismissed, you're going to

00:23:33.656 --> 00:23:35.446 A:middle
want to restore the UI when the

00:23:35.446 --> 00:23:37.956 A:middle
user wants to go back to your

00:23:37.956 --> 00:23:38.356 A:middle
app.

00:23:38.356 --> 00:23:39.906 A:middle
And so, it's really easy to do

00:23:39.906 --> 00:23:40.166 A:middle
that.

00:23:40.636 --> 00:23:41.736 A:middle
This is the callback you're

00:23:41.736 --> 00:23:42.516 A:middle
going to get

00:23:42.516 --> 00:23:43.786 A:middle
AVPlayerViewControllerDelegate.

00:23:44.086 --> 00:23:45.396 A:middle
And all you have to do here is

00:23:45.686 --> 00:23:47.526 A:middle
get your UI back into a state

00:23:47.526 --> 00:23:49.206 A:middle
that works, that is what you

00:23:49.206 --> 00:23:49.506 A:middle
want.

00:23:49.696 --> 00:23:50.486 A:middle
In this case we're just

00:23:50.566 --> 00:23:51.686 A:middle
presenting the view controller

00:23:51.686 --> 00:23:51.846 A:middle
again.

00:23:51.846 --> 00:23:53.606 A:middle
And then when you're ready, call

00:23:53.606 --> 00:23:54.886 A:middle
the completion handler that is

00:23:54.886 --> 00:23:56.226 A:middle
passed into the callback.

00:23:56.726 --> 00:23:58.096 A:middle
Let us know that you're ready to

00:23:58.096 --> 00:23:58.376 A:middle
go.

00:23:58.376 --> 00:23:59.846 A:middle
And we will animate back in

00:23:59.846 --> 00:24:00.116 A:middle
place.

00:23:59.846 --> 00:24:00.116 A:middle
place.

00:24:00.116 --> 00:24:01.316 A:middle
You need to do it fairly

00:24:01.316 --> 00:24:02.736 A:middle
quickly, otherwise the

00:24:02.736 --> 00:24:03.846 A:middle
picture-in-picture window might

00:24:03.846 --> 00:24:05.266 A:middle
just go oop!

00:24:05.506 --> 00:24:07.576 A:middle
And no more picture-in-picture

00:24:07.576 --> 00:24:08.126 A:middle
for your user.

00:24:08.126 --> 00:24:09.096 A:middle
And they're not able to get back

00:24:09.096 --> 00:24:11.866 A:middle
to your app.

00:24:13.456 --> 00:24:15.716 A:middle
So, that's a look at what's new

00:24:15.876 --> 00:24:17.126 A:middle
in best practices for

00:24:17.126 --> 00:24:18.656 A:middle
AVPlayerViewController in iOS.

00:24:18.706 --> 00:24:20.096 A:middle
There's sample code illustrating

00:24:20.096 --> 00:24:21.936 A:middle
all these concepts at our

00:24:21.936 --> 00:24:23.116 A:middle
session website.

00:24:23.506 --> 00:24:24.756 A:middle
And now, I'd like to hand things

00:24:24.756 --> 00:24:26.496 A:middle
over to my colleague, Dan

00:24:26.496 --> 00:24:26.786 A:middle
Wright.

00:24:28.516 --> 00:24:31.656 A:middle
[ Applause ]

00:24:32.156 --> 00:24:33.266 A:middle
&gt;&gt; All right.

00:24:33.806 --> 00:24:35.786 A:middle
Let's talk about video playback

00:24:35.786 --> 00:24:36.476 A:middle
on TV.

00:24:40.956 --> 00:24:44.086 A:middle
On tvOS AVPlayerViewController

00:24:44.086 --> 00:24:45.796 A:middle
supports full screen interactive

00:24:45.796 --> 00:24:48.106 A:middle
playback with standard controls

00:24:48.106 --> 00:24:50.436 A:middle
for navigation, information, and

00:24:50.436 --> 00:24:51.106 A:middle
settings.

00:24:52.166 --> 00:24:53.376 A:middle
Built in support for advanced

00:24:53.376 --> 00:24:54.796 A:middle
Siri features such as "what did

00:24:54.796 --> 00:24:55.386 A:middle
she say?"

00:24:56.116 --> 00:24:57.856 A:middle
Publication of Now Playing info.

00:24:58.456 --> 00:25:00.386 A:middle
Interstitials such as for ads.

00:24:58.456 --> 00:25:00.386 A:middle
Interstitials such as for ads.

00:25:00.846 --> 00:25:02.526 A:middle
Content proposals, and more.

00:25:04.946 --> 00:25:06.796 A:middle
So, what's new for tvOS 13?

00:25:08.436 --> 00:25:10.806 A:middle
Since last year we've updated

00:25:10.806 --> 00:25:12.266 A:middle
the appearance of the controls.

00:25:12.836 --> 00:25:14.896 A:middle
And starting with tvOS 12.3,

00:25:14.896 --> 00:25:16.096 A:middle
introduced fine precision

00:25:16.096 --> 00:25:16.506 A:middle
scrubbing.

00:25:17.756 --> 00:25:19.406 A:middle
Today, we're introducing custom

00:25:19.406 --> 00:25:21.496 A:middle
interactive overlays, channel

00:25:21.496 --> 00:25:24.286 A:middle
flipping for live streams, and

00:25:24.286 --> 00:25:25.536 A:middle
automatic enforcement of

00:25:25.536 --> 00:25:26.976 A:middle
parental content restrictions.

00:25:30.066 --> 00:25:31.586 A:middle
Fine precision scrubbing makes

00:25:31.586 --> 00:25:32.786 A:middle
it easier to use your Siri

00:25:32.786 --> 00:25:34.346 A:middle
remote to find the precise

00:25:34.346 --> 00:25:35.706 A:middle
moment in the video that you're

00:25:35.706 --> 00:25:36.356 A:middle
looking for.

00:25:37.966 --> 00:25:39.266 A:middle
PlayerViewController has always

00:25:39.326 --> 00:25:41.546 A:middle
supported -- the scrubbing in

00:25:41.546 --> 00:25:42.616 A:middle
PlayerViewController has always

00:25:42.616 --> 00:25:44.546 A:middle
made it easy to navigate quickly

00:25:44.546 --> 00:25:45.656 A:middle
across a wide range of your

00:25:45.656 --> 00:25:46.166 A:middle
video.

00:25:46.706 --> 00:25:48.766 A:middle
But now fine scrubbing makes it

00:25:48.766 --> 00:25:51.566 A:middle
easier to find a very precise

00:25:51.566 --> 00:25:53.746 A:middle
moment, like within about a

00:25:53.846 --> 00:25:54.936 A:middle
second, as you're navigating.

00:25:56.046 --> 00:25:57.716 A:middle
And of course, the info views

00:25:57.766 --> 00:25:59.336 A:middle
have a new appearance to match

00:25:59.426 --> 00:26:01.966 A:middle
the TV app.

00:25:59.426 --> 00:26:01.966 A:middle
the TV app.

00:26:03.736 --> 00:26:05.266 A:middle
Custom interactive overlays

00:26:05.536 --> 00:26:07.486 A:middle
support application controls.

00:26:08.076 --> 00:26:09.696 A:middle
A custom overlay is normally

00:26:09.696 --> 00:26:10.106 A:middle
hidden.

00:26:11.606 --> 00:26:13.766 A:middle
A hint onscreen guides the user

00:26:13.896 --> 00:26:16.346 A:middle
to swipe up, which presents your

00:26:16.346 --> 00:26:16.726 A:middle
overlay.

00:26:17.336 --> 00:26:19.646 A:middle
The overlay is fully

00:26:19.646 --> 00:26:21.196 A:middle
interactive, and it can contain

00:26:21.196 --> 00:26:23.366 A:middle
buttons, collections, or any

00:26:23.366 --> 00:26:25.296 A:middle
other interactive elements that

00:26:25.296 --> 00:26:26.986 A:middle
you like as defined by your view

00:26:26.986 --> 00:26:27.456 A:middle
controller.

00:26:28.006 --> 00:26:31.516 A:middle
And then you should, for

00:26:31.846 --> 00:26:33.046 A:middle
persistent non-interactive

00:26:33.046 --> 00:26:34.626 A:middle
elements like a channel logo,

00:26:34.626 --> 00:26:35.856 A:middle
for example, you should continue

00:26:35.856 --> 00:26:37.686 A:middle
to use the contentOverlayView

00:26:37.686 --> 00:26:37.753 A:middle
too.

00:26:38.286 --> 00:26:41.776 A:middle
Let's see what custom overlays

00:26:41.776 --> 00:26:42.196 A:middle
look like.

00:26:42.816 --> 00:26:46.536 A:middle
When the video begins, you have

00:26:46.536 --> 00:26:48.016 A:middle
a hint at the bottom to guide

00:26:48.016 --> 00:26:49.096 A:middle
them to swipe up for more.

00:26:49.506 --> 00:26:50.916 A:middle
And when they swipe up, they get

00:26:50.916 --> 00:26:51.376 A:middle
your overlay.

00:26:51.446 --> 00:26:53.036 A:middle
Just like that.

00:26:53.226 --> 00:26:54.936 A:middle
They can dismiss by swiping down

00:26:54.936 --> 00:26:56.336 A:middle
or by clicking the Menu button.

00:27:01.456 --> 00:27:03.006 A:middle
So, your view controller is

00:27:03.006 --> 00:27:03.606 A:middle
presented.

00:27:03.676 --> 00:27:04.596 A:middle
You get all the usual

00:27:04.596 --> 00:27:06.186 A:middle
UIViewController notifications.

00:27:06.466 --> 00:27:08.556 A:middle
We handle dismissal and

00:27:08.756 --> 00:27:09.876 A:middle
animations.

00:27:10.176 --> 00:27:11.606 A:middle
And your users get a consistent

00:27:12.116 --> 00:27:13.926 A:middle
experience across applications.

00:27:14.196 --> 00:27:15.676 A:middle
So all you need to do to use it

00:27:15.896 --> 00:27:17.276 A:middle
is to define your view

00:27:17.276 --> 00:27:18.366 A:middle
controller with the content that

00:27:18.366 --> 00:27:19.116 A:middle
you want to display.

00:27:19.526 --> 00:27:19.946 A:middle
And set the

00:27:19.946 --> 00:27:21.946 A:middle
customOverlayViewController

00:27:21.946 --> 00:27:23.356 A:middle
property on your player view

00:27:23.356 --> 00:27:23.836 A:middle
controller.

00:27:29.326 --> 00:27:30.856 A:middle
Live broadcast channel flipping.

00:27:32.706 --> 00:27:33.936 A:middle
Channel flipping is for live

00:27:33.936 --> 00:27:34.476 A:middle
streams.

00:27:34.476 --> 00:27:36.466 A:middle
It provides support for flipping

00:27:36.466 --> 00:27:38.196 A:middle
between multiple live streams.

00:27:38.196 --> 00:27:39.886 A:middle
For example, different channels.

00:27:40.416 --> 00:27:43.366 A:middle
The user swipes horizontally to

00:27:43.366 --> 00:27:44.746 A:middle
go to the next or the previous

00:27:44.746 --> 00:27:45.336 A:middle
channels.

00:27:46.136 --> 00:27:48.926 A:middle
And a channel interstitial

00:27:48.966 --> 00:27:50.986 A:middle
screen describes each channel

00:27:51.386 --> 00:27:54.406 A:middle
while it loads.

00:27:54.526 --> 00:27:55.986 A:middle
So let's see what channel

00:27:55.986 --> 00:27:56.776 A:middle
flipping looks like.

00:27:57.476 --> 00:28:02.036 A:middle
As the user swipes between

00:27:57.476 --> 00:28:02.036 A:middle
As the user swipes between

00:28:02.036 --> 00:28:03.436 A:middle
channels, your channel

00:28:03.436 --> 00:28:04.646 A:middle
interstitial view is shown.

00:28:05.456 --> 00:28:06.616 A:middle
Here it has a simple green

00:28:06.616 --> 00:28:08.536 A:middle
background, some text, and a

00:28:08.536 --> 00:28:09.526 A:middle
loading indicator.

00:28:09.916 --> 00:28:11.526 A:middle
But, that's entirely within your

00:28:11.526 --> 00:28:11.956 A:middle
control.

00:28:11.956 --> 00:28:14.706 A:middle
You can make it look whatever

00:28:14.706 --> 00:28:15.836 A:middle
you like in there, including

00:28:15.836 --> 00:28:18.446 A:middle
pictures, a gradient background,

00:28:18.446 --> 00:28:19.596 A:middle
your custom spinner, whatever

00:28:19.596 --> 00:28:20.606 A:middle
you like.

00:28:21.216 --> 00:28:24.506 A:middle
The main thing is to orient your

00:28:24.816 --> 00:28:26.276 A:middle
user to where they are and where

00:28:26.276 --> 00:28:26.676 A:middle
they're going.

00:28:30.046 --> 00:28:31.436 A:middle
And the one other thing I would

00:28:31.436 --> 00:28:32.236 A:middle
add is that this a

00:28:32.236 --> 00:28:33.206 A:middle
non-interactive screen.

00:28:33.206 --> 00:28:34.866 A:middle
It's meant to guide the user to

00:28:34.866 --> 00:28:35.486 A:middle
the next channel.

00:28:35.486 --> 00:28:36.656 A:middle
So you shouldn't expect to have

00:28:36.656 --> 00:28:37.356 A:middle
controls here.

00:28:37.966 --> 00:28:40.366 A:middle
To support channel flipping,

00:28:40.656 --> 00:28:41.596 A:middle
extend your

00:28:41.596 --> 00:28:43.166 A:middle
AVPlayerViewControllerDelegate

00:28:43.746 --> 00:28:44.256 A:middle
to implement

00:28:44.636 --> 00:28:45.506 A:middle
playerViewController

00:28:45.506 --> 00:28:47.136 A:middle
skipToNextChannel and

00:28:47.176 --> 00:28:48.236 A:middle
skipToPreviousChannel.

00:28:49.616 --> 00:28:53.326 A:middle
All these methods do is replace

00:28:53.326 --> 00:28:54.396 A:middle
the content in your player view

00:28:54.396 --> 00:28:55.956 A:middle
controller with that of the new

00:28:55.956 --> 00:28:56.376 A:middle
channel.

00:28:56.936 --> 00:29:01.086 A:middle
You can wait until the content

00:28:56.936 --> 00:29:01.086 A:middle
You can wait until the content

00:29:01.086 --> 00:29:02.196 A:middle
is ready to play if you like.

00:29:03.306 --> 00:29:04.926 A:middle
When you're done, call the

00:29:04.926 --> 00:29:05.696 A:middle
completion block.

00:29:06.326 --> 00:29:07.786 A:middle
Pass True if it was successful.

00:29:07.786 --> 00:29:08.986 A:middle
And pass False if something

00:29:08.986 --> 00:29:09.396 A:middle
failed.

00:29:10.606 --> 00:29:11.836 A:middle
But whatever you do, make sure

00:29:11.836 --> 00:29:12.926 A:middle
that you call that completion

00:29:12.926 --> 00:29:14.436 A:middle
block eventually, because that's

00:29:14.436 --> 00:29:15.856 A:middle
what's going to dismiss the

00:29:15.856 --> 00:29:16.756 A:middle
channel interstitial.

00:29:19.846 --> 00:29:20.886 A:middle
Now, there are two additional

00:29:20.886 --> 00:29:21.206 A:middle
methods:

00:29:21.206 --> 00:29:22.506 A:middle
nextChannelInterstitialView

00:29:22.506 --> 00:29:23.206 A:middle
Controller and

00:29:23.386 --> 00:29:24.846 A:middle
previousChannelInterstitialView

00:29:24.846 --> 00:29:25.396 A:middle
Controller.

00:29:25.576 --> 00:29:27.926 A:middle
And these are responsible for

00:29:27.926 --> 00:29:30.466 A:middle
providing that view controller

00:29:30.466 --> 00:29:32.266 A:middle
that displays between channels.

00:29:33.476 --> 00:29:36.076 A:middle
So, you need to instantiate your

00:29:36.076 --> 00:29:37.176 A:middle
view controller, if you have

00:29:37.176 --> 00:29:38.056 A:middle
one, if you need to.

00:29:38.506 --> 00:29:40.386 A:middle
And populate it with information

00:29:40.386 --> 00:29:41.196 A:middle
about the new channel.

00:29:42.326 --> 00:29:43.456 A:middle
And then just return it.

00:29:43.896 --> 00:29:45.006 A:middle
In this example we're

00:29:45.006 --> 00:29:46.526 A:middle
instantiating a new view

00:29:46.526 --> 00:29:47.626 A:middle
controller every time.

00:29:47.986 --> 00:29:50.106 A:middle
But in many cases, you could

00:29:50.136 --> 00:29:52.086 A:middle
probably just instantiate it

00:29:52.086 --> 00:29:53.766 A:middle
once and then reuse it.

00:29:58.316 --> 00:30:00.396 A:middle
tvOS has built in support for

00:29:58.316 --> 00:30:00.396 A:middle
tvOS has built in support for

00:30:00.396 --> 00:30:02.056 A:middle
restricting access to content

00:30:02.316 --> 00:30:04.646 A:middle
using a passcode, or with a

00:30:04.646 --> 00:30:05.766 A:middle
device profile.

00:30:06.066 --> 00:30:07.406 A:middle
Device profiles are commonly

00:30:07.406 --> 00:30:09.756 A:middle
used in a classroom setting or

00:30:09.756 --> 00:30:11.016 A:middle
perhaps a business setting.

00:30:12.066 --> 00:30:14.766 A:middle
In tvOS 13, AVKit provides

00:30:14.766 --> 00:30:16.876 A:middle
automatic support to help your

00:30:16.876 --> 00:30:18.566 A:middle
users regain control of

00:30:18.566 --> 00:30:19.896 A:middle
restricted content.

00:30:20.506 --> 00:30:23.766 A:middle
So, to test content

00:30:23.766 --> 00:30:25.866 A:middle
restrictions, go to Settings,

00:30:26.156 --> 00:30:26.976 A:middle
Restrictions.

00:30:30.076 --> 00:30:30.676 A:middle
Turn them on.

00:30:31.316 --> 00:30:33.466 A:middle
Provide and confirm a passcode.

00:30:36.046 --> 00:30:37.346 A:middle
Then change the allowed content

00:30:37.346 --> 00:30:40.526 A:middle
rating under Movies, and/or TV

00:30:40.526 --> 00:30:41.166 A:middle
Shows.

00:30:42.226 --> 00:30:43.406 A:middle
In this case we'll change it to

00:30:43.406 --> 00:30:43.976 A:middle
PG-13.

00:30:49.046 --> 00:30:51.436 A:middle
So, what do you need to do to

00:30:51.436 --> 00:30:53.036 A:middle
actually support it in your app?

00:30:53.426 --> 00:30:54.616 A:middle
Well, the most important thing

00:30:54.616 --> 00:30:55.806 A:middle
is you need to specify the media

00:30:55.806 --> 00:31:00.026 A:middle
content rating in all of your

00:30:55.806 --> 00:31:00.026 A:middle
content rating in all of your

00:31:00.026 --> 00:31:00.466 A:middle
content.

00:31:00.506 --> 00:31:02.006 A:middle
If your asset does not have this

00:31:02.006 --> 00:31:03.226 A:middle
information, then you'll need to

00:31:03.226 --> 00:31:05.116 A:middle
add it using the external

00:31:05.116 --> 00:31:05.996 A:middle
metadata property of

00:31:05.996 --> 00:31:06.756 A:middle
AVPlayerItem.

00:31:07.216 --> 00:31:08.676 A:middle
And you're going to want to use

00:31:08.676 --> 00:31:09.566 A:middle
the iTunes metadata content

00:31:09.566 --> 00:31:10.646 A:middle
rating identifier.

00:31:13.536 --> 00:31:14.446 A:middle
You'll want to provide this

00:31:14.446 --> 00:31:15.956 A:middle
rating at the start of playback

00:31:15.956 --> 00:31:18.866 A:middle
so that AVKit can test whether

00:31:18.866 --> 00:31:20.886 A:middle
this is restricted content

00:31:20.886 --> 00:31:22.956 A:middle
according to the user settings.

00:31:24.126 --> 00:31:25.716 A:middle
And present the passcode to

00:31:25.716 --> 00:31:26.626 A:middle
screen if necessary.

00:31:30.046 --> 00:31:31.016 A:middle
Now, if the content is

00:31:31.016 --> 00:31:32.486 A:middle
restricted by passcode, the user

00:31:32.486 --> 00:31:34.446 A:middle
will be prompted to enter it.

00:31:36.756 --> 00:31:38.386 A:middle
If it is restricted by a device

00:31:38.386 --> 00:31:39.566 A:middle
profile, however, it could

00:31:39.566 --> 00:31:40.936 A:middle
simply fail to play entirely.

00:31:40.936 --> 00:31:42.206 A:middle
There may be no option for the

00:31:42.206 --> 00:31:43.636 A:middle
user to override.

00:31:44.766 --> 00:31:46.676 A:middle
Now, AVPlayerViewController will

00:31:46.676 --> 00:31:48.326 A:middle
request access automatically to

00:31:48.376 --> 00:31:49.636 A:middle
your content when playback

00:31:49.636 --> 00:31:50.286 A:middle
begins.

00:31:50.836 --> 00:31:52.476 A:middle
But you can request access

00:31:52.476 --> 00:31:55.576 A:middle
earlier using a new API request

00:31:55.576 --> 00:31:56.906 A:middle
playback restrictions

00:31:56.906 --> 00:31:57.626 A:middle
authorization.

00:32:01.736 --> 00:32:03.416 A:middle
And of course, any kind of

00:32:03.496 --> 00:32:04.636 A:middle
failure here, if the user

00:32:04.636 --> 00:32:06.346 A:middle
doesn't know the passcode or

00:32:06.346 --> 00:32:07.176 A:middle
doesn't want to enter the

00:32:07.176 --> 00:32:08.946 A:middle
passcode, or if it's a device

00:32:08.996 --> 00:32:11.116 A:middle
profile that prohibits it, the

00:32:11.366 --> 00:32:12.616 A:middle
player view controller will be

00:32:12.616 --> 00:32:14.256 A:middle
automatically dismissed.

00:32:14.736 --> 00:32:17.626 A:middle
And finally, if you have a

00:32:17.626 --> 00:32:19.266 A:middle
custom playback user interface,

00:32:19.266 --> 00:32:20.866 A:middle
you can also request access

00:32:21.146 --> 00:32:23.246 A:middle
using the aforementioned API to

00:32:23.246 --> 00:32:23.946 A:middle
restricted content.

00:32:23.946 --> 00:32:27.876 A:middle
Now let's take a look at what

00:32:27.876 --> 00:32:29.436 A:middle
the user sees when attempting to

00:32:29.436 --> 00:32:30.776 A:middle
play restricted content.

00:32:31.386 --> 00:32:35.176 A:middle
Now, the video's going to load.

00:32:35.176 --> 00:32:36.236 A:middle
And as soon as it's ready to

00:32:36.296 --> 00:32:37.556 A:middle
play and the metadata's

00:32:37.556 --> 00:32:38.996 A:middle
available, the passcode screen

00:32:38.996 --> 00:32:40.596 A:middle
is going to immediately appear.

00:32:40.736 --> 00:32:41.856 A:middle
And as soon as the user enters

00:32:41.856 --> 00:32:44.586 A:middle
the passcode, the passcode

00:32:44.586 --> 00:32:45.766 A:middle
screen is dismissed and the

00:32:45.766 --> 00:32:46.696 A:middle
video begins playing.

00:32:46.696 --> 00:32:51.836 A:middle
So let's take a look at how to

00:32:51.836 --> 00:32:52.866 A:middle
provide the media content

00:32:52.866 --> 00:32:53.186 A:middle
rating.

00:32:54.456 --> 00:32:56.106 A:middle
This metadata is sometimes part

00:32:56.106 --> 00:32:57.086 A:middle
of your assets.

00:32:57.266 --> 00:32:59.146 A:middle
But usually it is not.

00:32:59.926 --> 00:33:01.146 A:middle
So you will need to provide it

00:32:59.926 --> 00:33:01.146 A:middle
So you will need to provide it

00:33:01.146 --> 00:33:02.546 A:middle
via the external metadata

00:33:02.576 --> 00:33:04.146 A:middle
property of the AVPlayerItem.

00:33:04.716 --> 00:33:07.766 A:middle
We've seen this code before in

00:33:07.766 --> 00:33:08.856 A:middle
previous presentations.

00:33:08.856 --> 00:33:10.086 A:middle
But we just have a helper

00:33:10.086 --> 00:33:11.496 A:middle
function here that takes our

00:33:11.496 --> 00:33:13.266 A:middle
rating in the form of a string

00:33:13.566 --> 00:33:15.206 A:middle
and returns and AVMetadataItem.

00:33:16.176 --> 00:33:18.236 A:middle
The value is that string.

00:33:18.236 --> 00:33:19.706 A:middle
The extended language tag is set

00:33:19.706 --> 00:33:21.796 A:middle
to und for Undefined because

00:33:22.056 --> 00:33:22.996 A:middle
it's not any particular

00:33:22.996 --> 00:33:23.586 A:middle
language.

00:33:24.656 --> 00:33:26.296 A:middle
Your identifier is the

00:33:26.296 --> 00:33:27.706 A:middle
iTunesMetadataContent Rating.

00:33:28.796 --> 00:33:30.086 A:middle
And then finally, once we've

00:33:30.156 --> 00:33:31.576 A:middle
created it, in this case with a

00:33:31.576 --> 00:33:32.906 A:middle
rating of PG-13,

00:33:37.336 --> 00:33:40.306 A:middle
we add it to the external

00:33:40.306 --> 00:33:41.696 A:middle
metadata property of the player

00:33:43.046 --> 00:33:43.166 A:middle
item.

00:33:43.246 --> 00:33:45.316 A:middle
Now, AVPlayerViewController will

00:33:45.316 --> 00:33:46.506 A:middle
prompt automatically, if

00:33:46.506 --> 00:33:47.176 A:middle
necessary.

00:33:47.506 --> 00:33:48.826 A:middle
But let's say you want to prompt

00:33:48.826 --> 00:33:51.366 A:middle
earlier before you present the

00:33:51.366 --> 00:33:53.056 A:middle
player view controller, or

00:33:53.056 --> 00:33:54.666 A:middle
perhaps before earlier content.

00:33:55.316 --> 00:33:57.876 A:middle
You can do this using the

00:33:57.876 --> 00:33:59.296 A:middle
requestPlayback Restrictions

00:33:59.296 --> 00:34:00.616 A:middle
Authorization API on

00:33:59.296 --> 00:34:00.616 A:middle
Authorization API on

00:34:00.616 --> 00:34:01.736 A:middle
AVPlayerItem.

00:34:02.296 --> 00:34:05.176 A:middle
The closure will be called when

00:34:05.176 --> 00:34:06.976 A:middle
the request is complete to

00:34:06.976 --> 00:34:08.045 A:middle
indicate whether there the

00:34:08.045 --> 00:34:10.235 A:middle
request succeeded or failed.

00:34:11.016 --> 00:34:13.266 A:middle
And if it fails, the error

00:34:13.266 --> 00:34:15.136 A:middle
provides information about why

00:34:15.136 --> 00:34:15.646 A:middle
it failed.

00:34:16.196 --> 00:34:18.176 A:middle
If it succeeded, you should

00:34:18.176 --> 00:34:20.666 A:middle
proceed with playback.

00:34:20.775 --> 00:34:22.906 A:middle
Otherwise, you should cancel,

00:34:23.386 --> 00:34:25.186 A:middle
dismiss, go back to your menu

00:34:25.186 --> 00:34:25.926 A:middle
screen or whatever.

00:34:26.306 --> 00:34:27.556 A:middle
And don't try to play the

00:34:27.556 --> 00:34:28.906 A:middle
content again unless the use

00:34:28.906 --> 00:34:30.826 A:middle
explicitly requests it.

00:34:35.166 --> 00:34:35.545 A:middle
All right.

00:34:35.545 --> 00:34:38.356 A:middle
Let's do a brief demo and get a

00:34:38.516 --> 00:34:39.446 A:middle
closer look at some of this.

00:34:45.646 --> 00:34:45.996 A:middle
All right.

00:34:46.065 --> 00:34:47.116 A:middle
So we have our little sample

00:34:47.116 --> 00:34:47.306 A:middle
app.

00:34:49.275 --> 00:34:51.206 A:middle
These videos may be familiar to

00:34:51.206 --> 00:34:52.025 A:middle
some of you who have done

00:34:52.025 --> 00:34:52.976 A:middle
testing with HLS.

00:34:54.926 --> 00:34:55.936 A:middle
Here's our swipe up.

00:34:55.936 --> 00:34:56.835 A:middle
Swipe for more hints at the

00:34:56.835 --> 00:34:57.286 A:middle
bottom.

00:34:57.376 --> 00:35:01.566 A:middle
And if we swipe up, we get our

00:34:57.376 --> 00:35:01.566 A:middle
And if we swipe up, we get our

00:35:02.136 --> 00:35:03.326 A:middle
custom overlay.

00:35:03.326 --> 00:35:04.986 A:middle
And see that it actually works

00:35:04.986 --> 00:35:05.376 A:middle
and everything.

00:35:05.586 --> 00:35:07.986 A:middle
And I can just swipe down to get

00:35:07.986 --> 00:35:08.846 A:middle
rid of it.

00:35:09.376 --> 00:35:10.846 A:middle
And what else do we have here?

00:35:12.426 --> 00:35:15.156 A:middle
Well, if I press and keep my

00:35:15.156 --> 00:35:16.586 A:middle
finger down, we see the Hints on

00:35:16.586 --> 00:35:17.666 A:middle
the left and the right sides of

00:35:17.666 --> 00:35:18.316 A:middle
the screens.

00:35:18.316 --> 00:35:19.726 A:middle
Those are the arrows to guide

00:35:19.726 --> 00:35:21.106 A:middle
the user to channel flipping.

00:35:21.376 --> 00:35:23.276 A:middle
And if I just swipe -- see

00:35:23.426 --> 00:35:25.266 A:middle
what's going on next door.

00:35:26.786 --> 00:35:29.196 A:middle
&gt;&gt; Using some great design

00:35:29.346 --> 00:35:29.876 A:middle
patterns, including --

00:35:29.876 --> 00:35:30.796 A:middle
&gt;&gt; Oh yeah, it's the bottom part

00:35:30.796 --> 00:35:32.586 A:middle
is using a list to lay out --

00:35:33.056 --> 00:35:34.976 A:middle
&gt;&gt; In the last month --

00:35:35.476 --> 00:35:36.006 A:middle
&gt;&gt; Let's see.

00:35:36.006 --> 00:35:37.016 A:middle
What else do we have?

00:35:37.016 --> 00:35:37.476 A:middle
Is that it?

00:35:37.476 --> 00:35:39.716 A:middle
Oh, what's going on over here?

00:35:41.516 --> 00:35:44.706 A:middle
[ Laughter ]

00:35:45.206 --> 00:35:45.626 A:middle
All right.

00:35:46.516 --> 00:35:51.786 A:middle
[ Applause ]

00:35:52.286 --> 00:35:52.616 A:middle
&gt;&gt; All right.

00:35:52.736 --> 00:35:53.746 A:middle
So we have our little sample

00:35:53.746 --> 00:35:53.966 A:middle
app.

00:35:56.366 --> 00:35:57.066 A:middle
&gt;&gt; I passed me.

00:35:57.066 --> 00:35:58.916 A:middle
Let's go back to -- let's see --

00:35:58.916 --> 00:36:00.826 A:middle
back to the --

00:35:58.916 --> 00:36:00.826 A:middle
back to the --

00:36:01.576 --> 00:36:02.916 A:middle
&gt;&gt; Here's our Swipe up bar for

00:36:02.916 --> 00:36:03.936 A:middle
more hints at the bottom.

00:36:05.046 --> 00:36:08.396 A:middle
And if we swipe up, we get our

00:36:08.886 --> 00:36:10.516 A:middle
custom overlay and see if it

00:36:10.516 --> 00:36:10.976 A:middle
actually works --

00:36:11.296 --> 00:36:12.466 A:middle
&gt;&gt; Let's pause.

00:36:13.508 --> 00:36:15.508 A:middle
[ Laughter ]

00:36:18.146 --> 00:36:18.556 A:middle
All right.

00:36:18.556 --> 00:36:20.036 A:middle
So let's take a moment to talk

00:36:20.036 --> 00:36:21.466 A:middle
about some best practices on

00:36:21.466 --> 00:36:22.196 A:middle
tvOS now.

00:36:23.296 --> 00:36:25.116 A:middle
Some of you already have

00:36:25.116 --> 00:36:27.156 A:middle
controls in your apps that are

00:36:27.156 --> 00:36:28.276 A:middle
revealed by swipe up.

00:36:28.276 --> 00:36:30.116 A:middle
Often, it's Up Next list.

00:36:31.776 --> 00:36:32.946 A:middle
And typically, you're doing this

00:36:32.946 --> 00:36:34.376 A:middle
by installing your own custom

00:36:34.376 --> 00:36:36.676 A:middle
swipe up gesture recognizer on

00:36:36.676 --> 00:36:38.376 A:middle
the player view or a super view.

00:36:38.716 --> 00:36:39.946 A:middle
And then presenting your view

00:36:39.946 --> 00:36:40.516 A:middle
controller.

00:36:41.086 --> 00:36:41.906 A:middle
Well, if you're doing that, we

00:36:41.906 --> 00:36:44.056 A:middle
want to encourage you to migrate

00:36:44.056 --> 00:36:45.646 A:middle
to using a custom overlay

00:36:45.776 --> 00:36:46.346 A:middle
instead.

00:36:47.366 --> 00:36:49.516 A:middle
What that gets you is much

00:36:49.516 --> 00:36:50.906 A:middle
better compatibility in the

00:36:50.906 --> 00:36:52.786 A:middle
future -- hint.

00:36:53.346 --> 00:36:56.086 A:middle
And a better and more consistent

00:36:56.086 --> 00:36:57.526 A:middle
experience for your users across

00:36:57.526 --> 00:36:58.336 A:middle
applications.

00:36:58.916 --> 00:37:03.566 A:middle
If you're using a UI tap gesture

00:36:58.916 --> 00:37:03.566 A:middle
If you're using a UI tap gesture

00:37:03.566 --> 00:37:05.636 A:middle
recognizer on the Menu button to

00:37:05.636 --> 00:37:08.326 A:middle
detect dismissal of your player

00:37:08.326 --> 00:37:11.236 A:middle
view controller, or in some

00:37:11.276 --> 00:37:14.786 A:middle
cases to provide the dismissal

00:37:14.786 --> 00:37:18.106 A:middle
animation, you should use the

00:37:18.106 --> 00:37:19.136 A:middle
delegate to dismissal

00:37:19.136 --> 00:37:20.476 A:middle
notifications instead.

00:37:20.786 --> 00:37:22.726 A:middle
We introduced those in tvOS 11.

00:37:23.036 --> 00:37:23.926 A:middle
And they should give you all the

00:37:23.926 --> 00:37:24.996 A:middle
information that you need.

00:37:25.586 --> 00:37:27.196 A:middle
This is important because it's

00:37:27.196 --> 00:37:28.676 A:middle
no longer the case that the only

00:37:28.676 --> 00:37:30.426 A:middle
way that your play view

00:37:30.426 --> 00:37:31.636 A:middle
controller can be dismissed is

00:37:31.666 --> 00:37:32.836 A:middle
by the user hitting the Menu

00:37:32.836 --> 00:37:33.176 A:middle
button.

00:37:33.566 --> 00:37:34.816 A:middle
It could now be automatically

00:37:34.816 --> 00:37:35.356 A:middle
dismissed.

00:37:39.456 --> 00:37:40.886 A:middle
I've said this one before, but

00:37:40.886 --> 00:37:42.446 A:middle
showsPlaybackControls should not

00:37:42.446 --> 00:37:44.026 A:middle
be abused to try to force

00:37:44.026 --> 00:37:44.966 A:middle
immediate change in the

00:37:44.966 --> 00:37:46.386 A:middle
visibility of the controls.

00:37:46.786 --> 00:37:47.306 A:middle
The purpose of

00:37:47.306 --> 00:37:48.896 A:middle
showsPlaybackControls is to

00:37:48.896 --> 00:37:50.936 A:middle
configure the player view

00:37:50.936 --> 00:37:52.536 A:middle
controller to indicate whether

00:37:52.536 --> 00:37:54.446 A:middle
you want the user to have access

00:37:54.446 --> 00:37:56.546 A:middle
to the playback controls at all.

00:37:59.786 --> 00:38:00.946 A:middle
Provide media content ratings

00:37:59.786 --> 00:38:00.946 A:middle
Provide media content ratings

00:38:00.946 --> 00:38:01.936 A:middle
for all of your content.

00:38:02.686 --> 00:38:05.456 A:middle
And of course, test with

00:38:05.816 --> 00:38:07.086 A:middle
parental content restrictions

00:38:07.086 --> 00:38:07.516 A:middle
enabled.

00:38:08.276 --> 00:38:09.566 A:middle
Most of you will have no issues,

00:38:09.566 --> 00:38:11.216 A:middle
but you might find that there's

00:38:11.216 --> 00:38:12.296 A:middle
something that you're doing that

00:38:12.296 --> 00:38:13.456 A:middle
doesn't work very well when a

00:38:13.456 --> 00:38:14.696 A:middle
passcode stream comes up.

00:38:14.996 --> 00:38:16.506 A:middle
For example, if you display a

00:38:16.506 --> 00:38:17.966 A:middle
hint for a few seconds at the

00:38:17.966 --> 00:38:20.056 A:middle
start of playback, you would

00:38:20.056 --> 00:38:21.946 A:middle
want to not do that while the

00:38:21.946 --> 00:38:24.026 A:middle
passcode is covering it or the

00:38:24.026 --> 00:38:25.406 A:middle
user won't see it.

00:38:27.316 --> 00:38:29.476 A:middle
So in summary, adopt

00:38:29.476 --> 00:38:31.506 A:middle
AVPlayerViewController across

00:38:31.506 --> 00:38:32.126 A:middle
platform.

00:38:32.126 --> 00:38:34.816 A:middle
You get great functionality on

00:38:34.966 --> 00:38:37.336 A:middle
iOS and on tvOS for a very low

00:38:37.336 --> 00:38:37.936 A:middle
cost.

00:38:38.846 --> 00:38:41.216 A:middle
And a wide range of

00:38:41.216 --> 00:38:43.066 A:middle
compatibility for remotes and

00:38:43.066 --> 00:38:43.806 A:middle
other features.

00:38:45.986 --> 00:38:46.176 A:middle
Use

00:38:46.176 --> 00:38:47.536 A:middle
AVPlayerViewControllerDelegate

00:38:47.536 --> 00:38:49.026 A:middle
notifications to track

00:38:49.026 --> 00:38:50.456 A:middle
presentation state, as seen

00:38:50.456 --> 00:38:52.556 A:middle
today on iOS, and to handle

00:38:52.556 --> 00:38:54.256 A:middle
dismissal, as on tvOS.

00:38:54.676 --> 00:38:57.656 A:middle
Observe the player item status

00:38:57.656 --> 00:38:58.616 A:middle
and handle errors.

00:39:00.476 --> 00:39:02.696 A:middle
Use external metadata, now on

00:39:02.696 --> 00:39:06.626 A:middle
both iOS and tvOS in addition to

00:39:06.626 --> 00:39:08.206 A:middle
some of these uses we've seen

00:39:08.206 --> 00:39:09.476 A:middle
today for parental content

00:39:09.476 --> 00:39:10.606 A:middle
restrictions and in the info

00:39:10.606 --> 00:39:11.076 A:middle
panel.

00:39:11.386 --> 00:39:12.806 A:middle
External metadata is also used

00:39:12.806 --> 00:39:14.106 A:middle
to publish Now Playing info,

00:39:14.486 --> 00:39:15.656 A:middle
which means that if you use

00:39:15.656 --> 00:39:16.746 A:middle
external metadata on both

00:39:16.746 --> 00:39:18.546 A:middle
platforms, you can now remove

00:39:18.546 --> 00:39:20.126 A:middle
all of your Now Playing info

00:39:20.386 --> 00:39:20.886 A:middle
support.

00:39:23.756 --> 00:39:26.426 A:middle
If you have a custom overlay on

00:39:26.426 --> 00:39:27.966 A:middle
a swipe up action, migrate it --

00:39:28.136 --> 00:39:29.306 A:middle
I'm sorry -- if you swipe up

00:39:29.306 --> 00:39:31.056 A:middle
action presenting an overlay,

00:39:31.056 --> 00:39:32.306 A:middle
migrate to custom overlays.

00:39:33.106 --> 00:39:34.406 A:middle
And finally, support parental

00:39:34.406 --> 00:39:35.286 A:middle
content restrictions.

00:39:37.076 --> 00:39:38.706 A:middle
So, for more information,

00:39:38.706 --> 00:39:39.926 A:middle
including sample code for this

00:39:39.926 --> 00:39:41.856 A:middle
session, visit our session page

00:39:41.856 --> 00:39:43.026 A:middle
at the URL on the screen.

00:39:43.666 --> 00:39:45.306 A:middle
And come with your questions and

00:39:45.306 --> 00:39:47.876 A:middle
your code to the AVKit Lab at

00:39:47.876 --> 00:39:49.576 A:middle
2:00 p.m. today or to the

00:39:49.576 --> 00:39:51.406 A:middle
AVFoundation lab at 4:00.

00:39:52.116 --> 00:39:53.486 A:middle
Thank you, and enjoy the rest of

00:39:53.486 --> 00:39:53.896 A:middle
conferences.

00:39:54.516 --> 00:39:57.500 A:middle
[ Applause ]
