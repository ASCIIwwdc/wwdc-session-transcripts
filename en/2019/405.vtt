WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:09.516 --> 00:00:17.616 A:middle
[ Applause and Cheering ]

00:00:18.116 --> 00:00:19.866 A:middle
&gt;&gt; Hello, everyone, and welcome

00:00:19.866 --> 00:00:21.276 A:middle
to our session on Swift

00:00:21.276 --> 00:00:22.266 A:middle
Playgrounds 3.

00:00:23.186 --> 00:00:24.606 A:middle
My name is Grace Kendall.

00:00:25.026 --> 00:00:26.276 A:middle
&gt;&gt; My name Joy Forbes.

00:00:26.406 --> 00:00:27.936 A:middle
&gt;&gt; And my name is Jonathan Penn.

00:00:28.036 --> 00:00:29.346 A:middle
We're all engineers working on

00:00:29.346 --> 00:00:30.896 A:middle
Swift Playgrounds and we are so

00:00:30.896 --> 00:00:32.165 A:middle
excited to talk about the new

00:00:32.226 --> 00:00:33.956 A:middle
features that you can use to

00:00:33.956 --> 00:00:36.046 A:middle
build ideas right on iPad with

00:00:36.046 --> 00:00:36.416 A:middle
Swift.

00:00:36.756 --> 00:00:38.046 A:middle
And we'll demonstrate some

00:00:38.046 --> 00:00:39.196 A:middle
techniques that you can use to

00:00:39.196 --> 00:00:40.636 A:middle
build even more engaging

00:00:40.686 --> 00:00:41.696 A:middle
Playground experiences.

00:00:43.416 --> 00:00:44.576 A:middle
&gt;&gt; Swift Playgrounds is an app

00:00:44.876 --> 00:00:46.486 A:middle
that you can write Swift code in

00:00:46.486 --> 00:00:47.966 A:middle
as well as learn from content

00:00:47.966 --> 00:00:49.236 A:middle
that other authors have made.

00:00:50.466 --> 00:00:51.896 A:middle
The code that you write is real

00:00:52.006 --> 00:00:54.056 A:middle
Swift and it's compiled and run

00:00:54.266 --> 00:00:55.736 A:middle
all on the iPad by the app.

00:00:57.826 --> 00:00:58.976 A:middle
&gt;&gt; Playgrounds you've created or

00:00:58.976 --> 00:01:00.566 A:middle
downloaded show up in your list

00:00:58.976 --> 00:01:00.566 A:middle
downloaded show up in your list

00:01:00.566 --> 00:01:02.056 A:middle
of documents as shown here.

00:01:03.436 --> 00:01:04.786 A:middle
And the more Playground section

00:01:04.786 --> 00:01:06.416 A:middle
at the bottom shows other

00:01:06.476 --> 00:01:07.466 A:middle
Playgrounds that are similar to

00:01:07.466 --> 00:01:08.806 A:middle
the content you already have.

00:01:09.526 --> 00:01:11.056 A:middle
If you tap the See All button,

00:01:12.226 --> 00:01:13.316 A:middle
you'll see all the content

00:01:13.316 --> 00:01:14.866 A:middle
available for download from

00:01:15.046 --> 00:01:16.976 A:middle
Apple and the other feeds that

00:01:16.976 --> 00:01:17.806 A:middle
you're subscribed to.

00:01:18.456 --> 00:01:19.706 A:middle
You can also browse featured

00:01:19.706 --> 00:01:21.366 A:middle
subscriptions in the From Other

00:01:21.416 --> 00:01:22.836 A:middle
Publishers section at the

00:01:22.836 --> 00:01:23.116 A:middle
bottom.

00:01:24.916 --> 00:01:26.466 A:middle
&gt;&gt; Apple has published six new

00:01:26.466 --> 00:01:27.896 A:middle
pieces of content in Swift

00:01:27.936 --> 00:01:28.746 A:middle
Playgrounds 3.

00:01:30.046 --> 00:01:31.436 A:middle
The Learn to Code family has

00:01:31.436 --> 00:01:32.756 A:middle
expanded with Lights, Camera,

00:01:32.846 --> 00:01:34.786 A:middle
Code, Assemble Your Camera, and

00:01:34.786 --> 00:01:35.616 A:middle
Flashy Photos.

00:01:36.226 --> 00:01:37.626 A:middle
These and the starting point

00:01:37.626 --> 00:01:39.776 A:middle
Camera Create introduce the

00:01:39.836 --> 00:01:40.966 A:middle
concept of building with

00:01:40.966 --> 00:01:42.496 A:middle
components to create things like

00:01:42.586 --> 00:01:43.876 A:middle
cameras and photo editors.

00:01:45.396 --> 00:01:46.806 A:middle
This Sonic Workshop challenge

00:01:46.896 --> 00:01:48.476 A:middle
and Sonic Create starting point

00:01:48.696 --> 00:01:50.516 A:middle
use touch events on iPad to

00:01:50.516 --> 00:01:52.426 A:middle
compose music and create visual

00:01:52.486 --> 00:01:53.056 A:middle
soundscapes.

00:01:55.226 --> 00:01:56.416 A:middle
&gt;&gt; Today, we'll be reviewing

00:01:56.416 --> 00:01:57.476 A:middle
some of the exciting new

00:01:57.476 --> 00:01:59.266 A:middle
features in Swift Playgrounds 3.

00:02:00.016 --> 00:02:01.016 A:middle
I'll be going through the

00:02:01.016 --> 00:02:02.206 A:middle
breadth of development that you

00:02:02.206 --> 00:02:04.346 A:middle
can do just on iPad, and then

00:02:04.346 --> 00:02:05.566 A:middle
Joy will talk about some of the

00:02:05.566 --> 00:02:06.936 A:middle
new features available to

00:02:06.936 --> 00:02:08.036 A:middle
authors on the Mac.

00:02:08.686 --> 00:02:10.045 A:middle
But first, Jonathan is going to

00:02:10.045 --> 00:02:11.776 A:middle
show us a demo that exemplifies

00:02:11.816 --> 00:02:13.756 A:middle
the power of Swift Playgrounds 3

00:02:13.866 --> 00:02:14.656 A:middle
for developers.

00:02:15.006 --> 00:02:15.406 A:middle
Jonathan?

00:02:16.106 --> 00:02:16.646 A:middle
&gt;&gt; Thank you, Grace.

00:02:17.516 --> 00:02:23.286 A:middle
[ Applause and Cheering ]

00:02:23.786 --> 00:02:24.936 A:middle
I would like to demonstrate how

00:02:24.936 --> 00:02:26.536 A:middle
powerful this tool can be as a

00:02:26.536 --> 00:02:28.606 A:middle
scratchpad for ideas with a

00:02:28.606 --> 00:02:29.716 A:middle
little bit of fun.

00:02:30.116 --> 00:02:31.556 A:middle
These devices are quite nifty.

00:02:31.966 --> 00:02:33.596 A:middle
I am personally very excited

00:02:33.596 --> 00:02:34.986 A:middle
about the sensors that it has

00:02:34.986 --> 00:02:36.236 A:middle
like the accelerometer.

00:02:36.666 --> 00:02:39.076 A:middle
I'm a big fun of games that use

00:02:39.116 --> 00:02:40.786 A:middle
the accelerometer to do cool

00:02:40.786 --> 00:02:42.186 A:middle
things and bring a sense of

00:02:42.326 --> 00:02:44.136 A:middle
physicality to what's going on,

00:02:44.136 --> 00:02:44.766 A:middle
on the screen.

00:02:45.566 --> 00:02:48.116 A:middle
So, I'm going to show some steps

00:02:48.116 --> 00:02:50.096 A:middle
that I took to build an infinite

00:02:50.216 --> 00:02:52.316 A:middle
scrolling marble obstacle course

00:02:52.776 --> 00:02:55.776 A:middle
from scratch on an iPad all in

00:02:55.776 --> 00:02:56.396 A:middle
Swift Playgrounds.

00:02:56.806 --> 00:02:57.956 A:middle
If you've ever played one of

00:02:57.956 --> 00:02:59.166 A:middle
those tiny puzzle games where

00:02:59.166 --> 00:03:00.326 A:middle
you've got a roll around a

00:02:59.166 --> 00:03:00.326 A:middle
you've got a roll around a

00:03:00.326 --> 00:03:01.626 A:middle
marble and not fall into any

00:03:01.626 --> 00:03:02.886 A:middle
holes, it's just something like

00:03:02.886 --> 00:03:03.026 A:middle
that.

00:03:04.086 --> 00:03:05.346 A:middle
We need a few things to make

00:03:05.346 --> 00:03:07.376 A:middle
this work like a marble that

00:03:07.376 --> 00:03:09.946 A:middle
response to the tilting motion

00:03:09.946 --> 00:03:10.666 A:middle
of an iPad.

00:03:11.966 --> 00:03:13.096 A:middle
We'll need a procedurally

00:03:13.096 --> 00:03:14.476 A:middle
generated map of holes that the

00:03:14.476 --> 00:03:16.216 A:middle
player guides the marble pass.

00:03:16.756 --> 00:03:17.946 A:middle
And to keep things simple, the

00:03:17.946 --> 00:03:19.356 A:middle
goal is just to get as far as

00:03:19.356 --> 00:03:20.896 A:middle
possible, as fast as possible

00:03:20.926 --> 00:03:23.196 A:middle
without falling into a hole and

00:03:23.196 --> 00:03:23.866 A:middle
out of the course.

00:03:25.596 --> 00:03:26.336 A:middle
There's a bunch involved in

00:03:26.336 --> 00:03:27.276 A:middle
building something like this.

00:03:27.276 --> 00:03:29.016 A:middle
I'm going to focus on a few

00:03:29.016 --> 00:03:31.156 A:middle
steps in the process using, of

00:03:31.156 --> 00:03:34.486 A:middle
course, Swift Playgrounds to

00:03:34.486 --> 00:03:36.086 A:middle
read the raw accelerometer data,

00:03:36.196 --> 00:03:37.536 A:middle
experimenting with the in line

00:03:37.536 --> 00:03:39.346 A:middle
results to do that, using the

00:03:39.346 --> 00:03:40.586 A:middle
live view to learn about the

00:03:40.586 --> 00:03:42.116 A:middle
SpriteKit game in physics

00:03:42.156 --> 00:03:44.596 A:middle
engine, experiment with how to

00:03:44.596 --> 00:03:46.176 A:middle
do this procedural hole

00:03:46.176 --> 00:03:47.606 A:middle
generation placement throughout

00:03:47.606 --> 00:03:49.996 A:middle
the course, and then, we'll add

00:03:49.996 --> 00:03:51.156 A:middle
it all up and take a look at the

00:03:51.156 --> 00:03:51.756 A:middle
full prototype.

00:03:52.456 --> 00:03:53.846 A:middle
Let's get started.

00:03:57.356 --> 00:03:57.746 A:middle
All right.

00:03:58.206 --> 00:04:00.246 A:middle
Let's begin with a blank page.

00:03:58.206 --> 00:04:00.246 A:middle
Let's begin with a blank page.

00:04:00.706 --> 00:04:01.986 A:middle
Every page in a Swift

00:04:02.096 --> 00:04:03.746 A:middle
Playgrounds document is its own

00:04:03.796 --> 00:04:05.216 A:middle
execution entry point.

00:04:05.366 --> 00:04:06.636 A:middle
It's a main .SWF file.

00:04:06.946 --> 00:04:08.936 A:middle
I love to use separate pages.

00:04:09.196 --> 00:04:10.386 A:middle
It's like a journal of my

00:04:10.386 --> 00:04:12.146 A:middle
travels as I'm trying to either

00:04:12.316 --> 00:04:13.946 A:middle
solve a problem or learn a new

00:04:13.946 --> 00:04:15.486 A:middle
API, just figuring something

00:04:15.486 --> 00:04:15.686 A:middle
out.

00:04:16.206 --> 00:04:17.926 A:middle
I'll start with one subsystem or

00:04:18.245 --> 00:04:19.236 A:middle
working on a function or

00:04:19.236 --> 00:04:20.836 A:middle
something over here, and then

00:04:20.836 --> 00:04:22.065 A:middle
move to a new page.

00:04:22.065 --> 00:04:23.456 A:middle
It's a completely blank slate

00:04:23.526 --> 00:04:24.546 A:middle
where I can work on the next

00:04:24.546 --> 00:04:27.026 A:middle
idea leaving behind a trail that

00:04:27.026 --> 00:04:28.206 A:middle
I can return to further

00:04:28.206 --> 00:04:29.096 A:middle
experimentation.

00:04:29.666 --> 00:04:31.396 A:middle
Now, our chief mechanic is the

00:04:31.396 --> 00:04:32.886 A:middle
tilting motion of the iPad.

00:04:32.886 --> 00:04:34.666 A:middle
So, we should probably start by

00:04:34.666 --> 00:04:35.966 A:middle
importing CoreMotion.

00:04:37.166 --> 00:04:39.206 A:middle
We'll create a CMMotionManager.

00:04:39.486 --> 00:04:41.006 A:middle
Now, I'm using the Tab key of

00:04:41.006 --> 00:04:43.176 A:middle
the hardware keyboard to select

00:04:43.436 --> 00:04:45.346 A:middle
the different options in this

00:04:45.346 --> 00:04:47.026 A:middle
shortcuts bar at the bottom for

00:04:47.026 --> 00:04:47.706 A:middle
code completion.

00:04:47.926 --> 00:04:50.006 A:middle
And then I'm pressing the Return

00:04:50.006 --> 00:04:51.406 A:middle
key to select it.

00:04:51.816 --> 00:04:53.306 A:middle
We'll tell the manager to start

00:04:53.306 --> 00:04:54.206 A:middle
up by saying

00:04:54.206 --> 00:04:55.676 A:middle
startAccelerometerUpdates.

00:04:57.076 --> 00:04:59.036 A:middle
Now, I don't know about you but

00:04:59.036 --> 00:05:00.946 A:middle
I never remember which of the

00:04:59.036 --> 00:05:00.946 A:middle
I never remember which of the

00:05:00.946 --> 00:05:03.186 A:middle
xyz coordinates of the

00:05:03.186 --> 00:05:05.206 A:middle
accelerometer corresponds to how

00:05:05.206 --> 00:05:07.016 A:middle
the iPad is supposed to move in

00:05:07.016 --> 00:05:07.806 A:middle
this orientation.

00:05:07.806 --> 00:05:09.336 A:middle
It's always confusing to me.

00:05:09.666 --> 00:05:11.286 A:middle
But hey, let's figure it out

00:05:11.286 --> 00:05:11.806 A:middle
right here.

00:05:12.886 --> 00:05:14.946 A:middle
We need to wait a brief moment

00:05:14.946 --> 00:05:15.846 A:middle
before we can start.

00:05:16.196 --> 00:05:17.486 A:middle
The accelerometer has to take

00:05:17.536 --> 00:05:18.386 A:middle
time to spin up.

00:05:18.986 --> 00:05:21.136 A:middle
We'll worry about reading this

00:05:21.256 --> 00:05:22.476 A:middle
thing regularly later.

00:05:22.476 --> 00:05:24.446 A:middle
Right now, we just want to get

00:05:24.446 --> 00:05:25.956 A:middle
an experiment going to see if we

00:05:25.956 --> 00:05:27.406 A:middle
get a value out of this thing.

00:05:27.666 --> 00:05:30.776 A:middle
So, I will tell the manager that

00:05:30.776 --> 00:05:32.236 A:middle
I want the accelerometer data,

00:05:32.236 --> 00:05:34.296 A:middle
the acceleration property, and

00:05:34.296 --> 00:05:35.026 A:middle
the x-coordinate.

00:05:35.476 --> 00:05:36.986 A:middle
By putting it on its own line,

00:05:37.356 --> 00:05:39.096 A:middle
this line gets logged, the

00:05:39.096 --> 00:05:40.656 A:middle
expression gets logged and turns

00:05:40.656 --> 00:05:42.186 A:middle
into an inline result on the

00:05:42.186 --> 00:05:43.006 A:middle
right-hand side.

00:05:43.056 --> 00:05:44.426 A:middle
We can see this here when I tap

00:05:44.426 --> 00:05:45.026 A:middle
around my code.

00:05:46.556 --> 00:05:47.826 A:middle
All four lines get an inline

00:05:47.826 --> 00:05:48.216 A:middle
result.

00:05:48.216 --> 00:05:49.386 A:middle
I'm going to tap on the last

00:05:49.436 --> 00:05:50.996 A:middle
icon here for the last line.

00:05:51.346 --> 00:05:53.426 A:middle
Hey, we see a value, negative

00:05:53.426 --> 00:05:54.956 A:middle
0.78.

00:05:55.476 --> 00:05:57.126 A:middle
That means something.

00:05:57.516 --> 00:05:58.486 A:middle
Well, let me try this here.

00:05:58.486 --> 00:05:59.716 A:middle
I'll tilt the iPad and try

00:05:59.716 --> 00:06:00.816 A:middle
running it again and see what

00:05:59.716 --> 00:06:00.816 A:middle
running it again and see what

00:06:00.816 --> 00:06:02.316 A:middle
value comes out now.

00:06:03.436 --> 00:06:06.916 A:middle
It says, hey, negative 0.061.

00:06:07.246 --> 00:06:08.766 A:middle
That's a different number.

00:06:09.266 --> 00:06:10.766 A:middle
So somewhere in here, we're

00:06:10.766 --> 00:06:12.126 A:middle
getting some sort of reaction

00:06:12.126 --> 00:06:13.216 A:middle
that I think is related to the

00:06:13.216 --> 00:06:14.116 A:middle
movement of the iPad.

00:06:14.186 --> 00:06:14.946 A:middle
This is a start.

00:06:15.416 --> 00:06:16.576 A:middle
But I'd really like to have some

00:06:16.576 --> 00:06:18.436 A:middle
sort of real time feedback to

00:06:18.436 --> 00:06:20.276 A:middle
give me an idea of what's going

00:06:20.276 --> 00:06:20.566 A:middle
on.

00:06:21.136 --> 00:06:22.446 A:middle
So let's fast forward to the

00:06:22.446 --> 00:06:24.166 A:middle
next page where I've prepared an

00:06:24.166 --> 00:06:27.686 A:middle
example to try out.

00:06:27.956 --> 00:06:29.226 A:middle
Usually, when you run a

00:06:29.226 --> 00:06:30.966 A:middle
Playground page, as the program

00:06:30.966 --> 00:06:32.556 A:middle
counter reaches the very end,

00:06:32.846 --> 00:06:33.906 A:middle
execution stops.

00:06:34.186 --> 00:06:35.216 A:middle
You can restart whenever you

00:06:35.216 --> 00:06:36.366 A:middle
want by just tapping around my

00:06:36.366 --> 00:06:36.716 A:middle
code.

00:06:36.996 --> 00:06:38.386 A:middle
And that's useful in many cases.

00:06:38.606 --> 00:06:39.966 A:middle
But in this case, I would like

00:06:40.026 --> 00:06:41.766 A:middle
the execution to continue so I

00:06:41.766 --> 00:06:43.426 A:middle
can gather values over time.

00:06:43.686 --> 00:06:45.236 A:middle
And because of that, I'm using

00:06:45.236 --> 00:06:46.796 A:middle
the Playground Support API to

00:06:47.016 --> 00:06:48.726 A:middle
tell the current page that I

00:06:48.726 --> 00:06:50.406 A:middle
need indefinite execution.

00:06:51.406 --> 00:06:52.816 A:middle
We create the CMMotionManager

00:06:52.816 --> 00:06:54.336 A:middle
just like before, we tell the

00:06:54.336 --> 00:06:55.416 A:middle
accelerometer to start.

00:06:56.046 --> 00:06:57.006 A:middle
And here, I wrote a simple

00:06:57.006 --> 00:06:58.466 A:middle
function, just to helper

00:06:58.466 --> 00:07:00.616 A:middle
function called repeatEvery that

00:06:58.466 --> 00:07:00.616 A:middle
function called repeatEvery that

00:07:00.616 --> 00:07:02.866 A:middle
takes a trailing closure, calls

00:07:02.866 --> 00:07:04.246 A:middle
the closure immediately, and

00:07:04.246 --> 00:07:06.056 A:middle
then schedules calling it again

00:07:06.056 --> 00:07:07.436 A:middle
after the given time interval

00:07:07.686 --> 00:07:09.376 A:middle
but using the asyncAfter method

00:07:09.376 --> 00:07:10.676 A:middle
on the name dispatch queue.

00:07:11.146 --> 00:07:12.616 A:middle
It's crude a way of repeating

00:07:12.616 --> 00:07:13.206 A:middle
things, I know.

00:07:13.296 --> 00:07:14.906 A:middle
But, you know what, we're just

00:07:14.906 --> 00:07:16.226 A:middle
experimenting and it works

00:07:16.226 --> 00:07:16.546 A:middle
great.

00:07:16.546 --> 00:07:17.916 A:middle
I can reuse this wherever I need

00:07:17.916 --> 00:07:18.796 A:middle
to on this page.

00:07:19.286 --> 00:07:20.366 A:middle
And I'm using it right here.

00:07:21.116 --> 00:07:22.456 A:middle
Every half a second, this

00:07:22.456 --> 00:07:24.116 A:middle
trailing closure gets called and

00:07:24.116 --> 00:07:25.476 A:middle
as soon as the accelerometer

00:07:25.476 --> 00:07:28.076 A:middle
data is not nil, we log the

00:07:28.076 --> 00:07:29.876 A:middle
x-coordinate using that

00:07:29.876 --> 00:07:31.146 A:middle
expression on this line.

00:07:31.576 --> 00:07:32.626 A:middle
Let's take a look and see what

00:07:32.626 --> 00:07:33.926 A:middle
happens when I tap around my own

00:07:33.926 --> 00:07:34.176 A:middle
code.

00:07:34.566 --> 00:07:36.256 A:middle
All right, we have things

00:07:36.576 --> 00:07:37.376 A:middle
happening on the screen.

00:07:37.376 --> 00:07:38.576 A:middle
Let me tap on the inline result

00:07:38.576 --> 00:07:39.456 A:middle
and look what happens here.

00:07:40.206 --> 00:07:41.896 A:middle
A graph representation is

00:07:41.946 --> 00:07:43.216 A:middle
automatically selected for us

00:07:43.256 --> 00:07:44.636 A:middle
because this is a sequence of

00:07:44.636 --> 00:07:45.946 A:middle
simple numeric values.

00:07:46.216 --> 00:07:47.076 A:middle
I'm going to pick this up and

00:07:47.076 --> 00:07:47.736 A:middle
move it around.

00:07:48.406 --> 00:07:50.746 A:middle
Whoa, we have things, stuff.

00:07:50.986 --> 00:07:51.356 A:middle
All right.

00:07:51.356 --> 00:07:52.406 A:middle
I'm going to try to get a

00:07:52.406 --> 00:07:53.056 A:middle
baseline here.

00:07:53.056 --> 00:07:55.206 A:middle
I'm going to hold it flat and

00:07:55.206 --> 00:07:56.136 A:middle
then I'm going to tilt it

00:07:56.776 --> 00:07:57.426 A:middle
upright.

00:07:58.426 --> 00:08:00.016 A:middle
I will tilt it down.

00:07:58.426 --> 00:08:00.016 A:middle
I will tilt it down.

00:08:00.016 --> 00:08:02.656 A:middle
OK. I think we've kind of

00:08:02.656 --> 00:08:03.556 A:middle
figured this out.

00:08:03.556 --> 00:08:05.546 A:middle
The x-coordinate of the

00:08:05.546 --> 00:08:06.976 A:middle
accelerometer corresponds to

00:08:06.976 --> 00:08:09.496 A:middle
movement along this axis of the

00:08:09.496 --> 00:08:10.966 A:middle
iPad in this orientation.

00:08:11.136 --> 00:08:11.906 A:middle
All right, there we go.

00:08:12.176 --> 00:08:13.346 A:middle
I could do the same thing to

00:08:13.386 --> 00:08:15.536 A:middle
figure out how y and z work as

00:08:15.536 --> 00:08:15.956 A:middle
well.

00:08:16.206 --> 00:08:17.066 A:middle
This is quite useful.

00:08:17.986 --> 00:08:19.626 A:middle
Now, this repeatEvery function

00:08:19.626 --> 00:08:20.886 A:middle
[applause].

00:08:20.886 --> 00:08:21.106 A:middle
Thank you.

00:08:23.526 --> 00:08:25.166 A:middle
This repeatEvery function is

00:08:25.166 --> 00:08:25.436 A:middle
nice.

00:08:25.436 --> 00:08:27.456 A:middle
It's is crude of course but it's

00:08:27.496 --> 00:08:27.896 A:middle
terse.

00:08:28.136 --> 00:08:28.756 A:middle
It's clear.

00:08:28.756 --> 00:08:29.926 A:middle
And I'm going to use it other

00:08:29.926 --> 00:08:31.226 A:middle
places until I figure out how to

00:08:31.226 --> 00:08:32.006 A:middle
do it the right way.

00:08:32.006 --> 00:08:32.556 A:middle
That's fine.

00:08:33.176 --> 00:08:35.775 A:middle
Well, because I created this as

00:08:35.775 --> 00:08:37.385 A:middle
a blank playground in Swift

00:08:37.466 --> 00:08:39.395 A:middle
Playgrounds 3, I have access to

00:08:39.395 --> 00:08:40.666 A:middle
the new tabbed editing

00:08:40.666 --> 00:08:41.366 A:middle
experience.

00:08:41.686 --> 00:08:42.206 A:middle
Let me show you.

00:08:42.876 --> 00:08:43.966 A:middle
I'm going to tap on the File

00:08:43.966 --> 00:08:45.526 A:middle
icon up in the Navigation bar,

00:08:45.526 --> 00:08:47.176 A:middle
and then I'm going to tap on the

00:08:47.176 --> 00:08:48.216 A:middle
Utilities Module.

00:08:48.516 --> 00:08:49.986 A:middle
This brings up the user module

00:08:49.986 --> 00:08:50.926 A:middle
and source file picker.

00:08:50.926 --> 00:08:51.856 A:middle
And you can see I've already

00:08:51.856 --> 00:08:53.106 A:middle
done a lot of things in here as

00:08:53.106 --> 00:08:54.446 A:middle
I was working on this idea.

00:08:54.826 --> 00:08:56.146 A:middle
Well, in the Utilities Module,

00:08:56.146 --> 00:08:57.136 A:middle
I'm going to put that function

00:08:57.136 --> 00:08:59.196 A:middle
in here, make a Timing.swift

00:08:59.196 --> 00:08:59.576 A:middle
file.

00:09:01.116 --> 00:09:03.106 A:middle
I'll tap on the Tab for the main

00:09:03.106 --> 00:09:04.406 A:middle
file of the page to go back.

00:09:04.906 --> 00:09:06.286 A:middle
I will tap on the repeatEvery

00:09:06.286 --> 00:09:07.506 A:middle
function to select it.

00:09:07.996 --> 00:09:09.726 A:middle
If I tap and hold, I can pick it

00:09:09.726 --> 00:09:09.866 A:middle
up.

00:09:10.416 --> 00:09:12.066 A:middle
And with my other hand, I will

00:09:12.066 --> 00:09:14.226 A:middle
tap on the Timing Tab, and then

00:09:14.226 --> 00:09:16.136 A:middle
let go to drop this piece of

00:09:16.186 --> 00:09:18.596 A:middle
code as a copy in its place in

00:09:18.596 --> 00:09:19.136 A:middle
this file.

00:09:20.206 --> 00:09:21.376 A:middle
Because this is a new file,

00:09:21.746 --> 00:09:22.996 A:middle
Swift has no idea what time

00:09:22.996 --> 00:09:24.126 A:middle
interval or dispatch queue you

00:09:24.126 --> 00:09:25.536 A:middle
are, I'm going to have to tell

00:09:25.536 --> 00:09:27.636 A:middle
it by importing foundation so it

00:09:27.636 --> 00:09:28.486 A:middle
knows what to do with those

00:09:28.486 --> 00:09:28.996 A:middle
symbols.

00:09:29.846 --> 00:09:31.036 A:middle
And because I want to use this

00:09:31.036 --> 00:09:32.356 A:middle
function everywhere on every

00:09:32.356 --> 00:09:34.306 A:middle
page and possibly even in other

00:09:34.306 --> 00:09:36.126 A:middle
modules, I need to mark this

00:09:36.126 --> 00:09:37.736 A:middle
function as public so it's

00:09:37.736 --> 00:09:38.026 A:middle
visible.

00:09:38.786 --> 00:09:40.316 A:middle
Now, I can go back to the main

00:09:40.316 --> 00:09:41.786 A:middle
file, tap to select the

00:09:41.786 --> 00:09:44.796 A:middle
function, delete it, and if I

00:09:44.796 --> 00:09:46.966 A:middle
did it right, everything should

00:09:46.966 --> 00:09:47.366 A:middle
work.

00:09:47.366 --> 00:09:48.496 A:middle
All right, there we go.

00:09:48.776 --> 00:09:51.486 A:middle
Yay. Now, I can open as many

00:09:51.486 --> 00:09:52.746 A:middle
files as I need to, to

00:09:52.746 --> 00:09:54.186 A:middle
experiment on different ideas.

00:09:54.186 --> 00:09:55.896 A:middle
Like, let's try this one here,

00:09:56.086 --> 00:09:56.816 A:middle
Math.swift.

00:09:57.076 --> 00:09:58.096 A:middle
I threw a bunch of bits and

00:09:58.096 --> 00:09:59.016 A:middle
pieces in here as I was going

00:09:59.016 --> 00:09:59.976 A:middle
just to help me experiment.

00:10:00.796 --> 00:10:02.366 A:middle
These are math helper functions

00:10:02.366 --> 00:10:04.126 A:middle
and a few extensions on system

00:10:04.126 --> 00:10:06.076 A:middle
types that made writing the code

00:10:06.076 --> 00:10:07.436 A:middle
more fluent at the point that I

00:10:07.436 --> 00:10:09.316 A:middle
was using it, just part of the

00:10:09.346 --> 00:10:09.706 A:middle
process.

00:10:10.816 --> 00:10:14.346 A:middle
I can tap and drag to reorder

00:10:14.346 --> 00:10:16.726 A:middle
the tabs, tap the Close button

00:10:16.726 --> 00:10:17.276 A:middle
to close them.

00:10:17.496 --> 00:10:18.586 A:middle
And all of this code is

00:10:18.586 --> 00:10:20.576 A:middle
available for use anywhere in

00:10:20.576 --> 00:10:21.166 A:middle
this document.

00:10:21.606 --> 00:10:22.256 A:middle
Quite convenient.

00:10:23.006 --> 00:10:25.336 A:middle
Now, let's fast forward a bit

00:10:25.336 --> 00:10:26.406 A:middle
more in this story.

00:10:26.606 --> 00:10:27.626 A:middle
I've been poking around a bit

00:10:27.626 --> 00:10:28.876 A:middle
with SpriteKit, refreshing my

00:10:28.876 --> 00:10:29.976 A:middle
memory about how it works.

00:10:30.196 --> 00:10:32.356 A:middle
Let's see how far I've gotten on

00:10:32.356 --> 00:10:33.206 A:middle
the next page.

00:10:33.766 --> 00:10:35.206 A:middle
I needed to bring up the

00:10:35.206 --> 00:10:36.906 A:middle
documentation for SpriteKit.

00:10:36.906 --> 00:10:38.556 A:middle
So I did that by tapping on the

00:10:38.556 --> 00:10:39.916 A:middle
Tools Menu icon in the

00:10:39.916 --> 00:10:41.206 A:middle
Navigation Bar and choosing

00:10:41.206 --> 00:10:42.006 A:middle
Documentation.

00:10:42.616 --> 00:10:44.536 A:middle
I searched for it by tapping on

00:10:44.536 --> 00:10:46.306 A:middle
the magnifying glass and search

00:10:46.346 --> 00:10:47.216 A:middle
for SpriteKit.

00:10:47.476 --> 00:10:48.886 A:middle
By reading through this, I was

00:10:48.886 --> 00:10:50.296 A:middle
able to refresh my memory of how

00:10:50.296 --> 00:10:52.346 A:middle
this works, built up this body

00:10:52.346 --> 00:10:54.096 A:middle
of code on the left-hand side of

00:10:54.096 --> 00:10:54.676 A:middle
the screen.

00:10:55.046 --> 00:10:56.286 A:middle
I learned about SpriteKit's

00:10:56.346 --> 00:10:58.826 A:middle
scenes and nodes, that SpriteKit

00:10:58.826 --> 00:11:01.496 A:middle
uses to layout everything in the

00:10:58.826 --> 00:11:01.496 A:middle
uses to layout everything in the

00:11:01.496 --> 00:11:02.746 A:middle
game and render it on the

00:11:02.746 --> 00:11:03.186 A:middle
screen.

00:11:03.476 --> 00:11:04.476 A:middle
I learned about the physics

00:11:04.476 --> 00:11:05.756 A:middle
engine and how you can apply

00:11:05.756 --> 00:11:07.316 A:middle
forces to nodes so that the

00:11:07.316 --> 00:11:09.396 A:middle
physics mechanism starts working

00:11:09.396 --> 00:11:09.966 A:middle
over time.

00:11:10.356 --> 00:11:11.746 A:middle
And I learned about the game

00:11:11.746 --> 00:11:13.666 A:middle
loop when SpriteKit calls my

00:11:13.666 --> 00:11:15.796 A:middle
code back on every frame so that

00:11:15.796 --> 00:11:17.186 A:middle
I can affect changes in the

00:11:17.186 --> 00:11:17.646 A:middle
environment.

00:11:17.956 --> 00:11:18.846 A:middle
That last point is very

00:11:18.846 --> 00:11:19.276 A:middle
important.

00:11:19.776 --> 00:11:22.416 A:middle
Let me close the side panel and

00:11:22.416 --> 00:11:24.156 A:middle
open up the Execution Controls

00:11:24.156 --> 00:11:25.006 A:middle
Menu at the bottom.

00:11:25.536 --> 00:11:27.656 A:middle
Because SpriteKit calls me back

00:11:27.656 --> 00:11:28.856 A:middle
on every frame, I have to be

00:11:28.906 --> 00:11:30.296 A:middle
quick, and I'm going to turn off

00:11:30.346 --> 00:11:31.196 A:middle
the inline result.

00:11:31.546 --> 00:11:32.706 A:middle
As we've seen, they're quite

00:11:32.706 --> 00:11:34.866 A:middle
useful in many cases, but the

00:11:34.866 --> 00:11:36.206 A:middle
logging of those expressions

00:11:36.456 --> 00:11:37.276 A:middle
takes time.

00:11:37.586 --> 00:11:38.916 A:middle
I don't want to slow SpriteKit

00:11:38.916 --> 00:11:40.326 A:middle
down in this case, and I don't

00:11:40.326 --> 00:11:40.966 A:middle
even need them.

00:11:41.206 --> 00:11:43.036 A:middle
Because as you'll see, when I

00:11:43.036 --> 00:11:45.456 A:middle
tap run my code, SpriteKit I set

00:11:45.456 --> 00:11:46.746 A:middle
it up as the live view.

00:11:46.746 --> 00:11:48.246 A:middle
SpriteKit itself is giving me

00:11:48.246 --> 00:11:49.526 A:middle
the feedback that I needed while

00:11:49.526 --> 00:11:50.626 A:middle
working on this part.

00:11:51.136 --> 00:11:53.866 A:middle
And here you go, we have a

00:11:54.006 --> 00:11:55.876 A:middle
circle shape thingy moving

00:11:55.876 --> 00:11:57.186 A:middle
around in response to tilting

00:11:57.186 --> 00:11:57.576 A:middle
the iPad.

00:11:57.576 --> 00:11:57.926 A:middle
All right.

00:11:58.346 --> 00:11:59.526 A:middle
Now, this is an important part

00:11:59.526 --> 00:12:00.396 A:middle
of the story because--

00:11:59.526 --> 00:12:00.396 A:middle
of the story because--

00:12:01.436 --> 00:12:04.486 A:middle
[applause] thank you-- once you

00:12:04.486 --> 00:12:05.656 A:middle
get something like this going,

00:12:05.656 --> 00:12:06.636 A:middle
once you've got this kind of

00:12:06.636 --> 00:12:07.706 A:middle
physical stuff happening on the

00:12:07.706 --> 00:12:08.936 A:middle
screen, you've got to take this

00:12:08.936 --> 00:12:10.036 A:middle
out and do user testing, right?

00:12:10.506 --> 00:12:11.686 A:middle
So I took this to my kids.

00:12:12.096 --> 00:12:13.166 A:middle
And as I started to tell them,

00:12:13.166 --> 00:12:13.776 A:middle
hey, do you want to see

00:12:13.776 --> 00:12:15.186 A:middle
something cool, they interrupted

00:12:15.186 --> 00:12:16.486 A:middle
me, grab the iPad out of my

00:12:16.486 --> 00:12:17.676 A:middle
hands and started looking at it,

00:12:17.976 --> 00:12:19.276 A:middle
and tilting it around to watch

00:12:19.276 --> 00:12:20.516 A:middle
it bounce around the screen.

00:12:20.516 --> 00:12:21.636 A:middle
And they were amused.

00:12:21.786 --> 00:12:22.856 A:middle
They said, "This is nice,

00:12:22.856 --> 00:12:23.176 A:middle
father.

00:12:23.176 --> 00:12:23.816 A:middle
This is very nice."

00:12:24.016 --> 00:12:25.976 A:middle
[Laughter]

00:12:25.976 --> 00:12:26.836 A:middle
But it's missing something.

00:12:27.636 --> 00:12:28.726 A:middle
You see, there are not enough

00:12:28.726 --> 00:12:29.686 A:middle
marbles on the screen.

00:12:30.226 --> 00:12:32.066 A:middle
We need more marbles, lots and

00:12:32.066 --> 00:12:33.006 A:middle
lots of marbles.

00:12:34.446 --> 00:12:35.526 A:middle
They have a future in project

00:12:35.526 --> 00:12:37.286 A:middle
management, all right

00:12:37.286 --> 00:12:38.946 A:middle
[laughter].

00:12:38.946 --> 00:12:40.216 A:middle
This had nothing to do with my

00:12:40.216 --> 00:12:42.176 A:middle
ultimate goal but it did sound

00:12:42.176 --> 00:12:42.746 A:middle
kind of cool.

00:12:42.746 --> 00:12:43.766 A:middle
We should get more marbles.

00:12:43.936 --> 00:12:45.266 A:middle
So I added the tap, just to

00:12:45.266 --> 00:12:46.396 A:middle
recognize and I sat down with

00:12:46.396 --> 00:12:46.526 A:middle
them.

00:12:46.526 --> 00:12:47.326 A:middle
We did this together.

00:12:47.326 --> 00:12:48.756 A:middle
And so, every time you tap now

00:12:48.756 --> 00:12:50.516 A:middle
on the screen, we insert a new

00:12:50.516 --> 00:12:52.346 A:middle
SpriteKit node into the scene

00:12:52.506 --> 00:12:54.246 A:middle
and add it to the physics engine

00:12:54.246 --> 00:12:55.666 A:middle
so that it will participate in

00:12:55.666 --> 00:12:56.816 A:middle
all the fun forces going on

00:12:56.816 --> 00:12:56.956 A:middle
here.

00:12:57.256 --> 00:12:58.456 A:middle
Now, this is usually how it

00:12:58.456 --> 00:12:58.646 A:middle
went.

00:12:58.736 --> 00:13:00.616 A:middle
The younger the child, the more

00:12:58.736 --> 00:13:00.616 A:middle
The younger the child, the more

00:13:00.616 --> 00:13:02.156 A:middle
furiously they would tap to try

00:13:02.156 --> 00:13:03.276 A:middle
to fill this thing up as fast as

00:13:03.276 --> 00:13:04.246 A:middle
they could and they wanted to

00:13:04.246 --> 00:13:04.986 A:middle
see if it would crash.

00:13:05.336 --> 00:13:05.766 A:middle
It didn't.

00:13:06.076 --> 00:13:07.186 A:middle
And then they would just make

00:13:07.186 --> 00:13:08.636 A:middle
this thing go and slosh it

00:13:08.636 --> 00:13:08.926 A:middle
around.

00:13:08.926 --> 00:13:10.546 A:middle
And I'm not going to lie, I find

00:13:10.546 --> 00:13:12.946 A:middle
this absolutely mesmerizing.

00:13:12.946 --> 00:13:13.976 A:middle
I can look at this all--

00:13:14.516 --> 00:13:18.986 A:middle
[Sound Effect]

00:13:19.486 --> 00:13:20.196 A:middle
I'll do that later.

00:13:21.016 --> 00:13:26.666 A:middle
[ Laughter and Applause ]

00:13:27.166 --> 00:13:28.266 A:middle
I would recommend you do it too.

00:13:28.266 --> 00:13:28.896 A:middle
It's very relaxing.

00:13:29.286 --> 00:13:31.486 A:middle
So anyway, we have SpriteKit now

00:13:31.716 --> 00:13:33.446 A:middle
doing something in response to

00:13:33.446 --> 00:13:35.426 A:middle
the accelerometer that's on the

00:13:35.426 --> 00:13:36.496 A:middle
iPad as you tilt it around.

00:13:36.496 --> 00:13:37.156 A:middle
This is close.

00:13:37.156 --> 00:13:38.596 A:middle
We're getting a feel for how

00:13:38.596 --> 00:13:39.696 A:middle
this game could work, and it's

00:13:39.696 --> 00:13:40.676 A:middle
getting more and more exciting.

00:13:41.486 --> 00:13:42.966 A:middle
But now, I need to figure out

00:13:42.966 --> 00:13:44.536 A:middle
how to do this procedural whole

00:13:44.536 --> 00:13:45.056 A:middle
generation.

00:13:45.056 --> 00:13:46.866 A:middle
Now remember, this is a trench

00:13:46.866 --> 00:13:48.366 A:middle
that has the holes laid out that

00:13:48.366 --> 00:13:49.336 A:middle
the marble is supposed to go

00:13:49.336 --> 00:13:50.386 A:middle
pass and avoid them.

00:13:50.686 --> 00:13:52.536 A:middle
And we probably want to remember

00:13:52.536 --> 00:13:54.096 A:middle
the holes that we put down.

00:13:54.096 --> 00:13:55.466 A:middle
So if the user happens to scroll

00:13:55.466 --> 00:13:57.756 A:middle
backwards for some reason, they

00:13:57.756 --> 00:13:59.036 A:middle
can revisit the holes they saw

00:13:59.036 --> 00:13:59.466 A:middle
before.

00:14:00.536 --> 00:14:01.786 A:middle
So let's jump ahead to see an

00:14:01.786 --> 00:14:02.896 A:middle
experiment that I was working

00:14:02.896 --> 00:14:03.056 A:middle
on.

00:14:03.636 --> 00:14:05.236 A:middle
Now, while building this page, I

00:14:05.236 --> 00:14:07.066 A:middle
decided to go into my game

00:14:07.146 --> 00:14:12.446 A:middle
module and create a MapStruct.

00:14:12.546 --> 00:14:15.206 A:middle
This goal of this type was just

00:14:15.206 --> 00:14:17.316 A:middle
to calculate and remember where

00:14:17.316 --> 00:14:18.946 A:middle
the holes go as you're

00:14:18.946 --> 00:14:20.156 A:middle
proceeding through the course.

00:14:20.346 --> 00:14:21.816 A:middle
It basically breaks up the map

00:14:21.906 --> 00:14:23.756 A:middle
into a grid of columns and then

00:14:23.756 --> 00:14:24.946 A:middle
places the holes inside there.

00:14:25.236 --> 00:14:25.966 A:middle
It's really simple.

00:14:26.236 --> 00:14:27.546 A:middle
This could easily be swapped out

00:14:27.546 --> 00:14:28.566 A:middle
for something more intricate or

00:14:28.566 --> 00:14:29.566 A:middle
complicated if I want.

00:14:29.806 --> 00:14:31.006 A:middle
Eh, it works for now.

00:14:31.926 --> 00:14:33.576 A:middle
And also in the Game Engine

00:14:33.576 --> 00:14:36.736 A:middle
Module, I created a MapNode that

00:14:36.736 --> 00:14:38.576 A:middle
receives a map and knows how to

00:14:38.576 --> 00:14:40.456 A:middle
layout the whole nodes at

00:14:40.456 --> 00:14:41.656 A:middle
different points along the

00:14:41.656 --> 00:14:41.956 A:middle
course.

00:14:42.096 --> 00:14:43.476 A:middle
All you have to do is pass it a

00:14:43.476 --> 00:14:45.206 A:middle
rectangle that represents where

00:14:45.206 --> 00:14:47.506 A:middle
the camera is and the viewport

00:14:47.706 --> 00:14:49.146 A:middle
of the-- that the user sees.

00:14:49.406 --> 00:14:51.306 A:middle
As soon as you do that, it will

00:14:51.306 --> 00:14:52.846 A:middle
render the holes in that spot

00:14:52.846 --> 00:14:54.326 A:middle
reusing nodes if it needs to.

00:14:54.326 --> 00:14:55.536 A:middle
It kind of acts like UI table

00:14:55.536 --> 00:14:56.416 A:middle
view, stuff like that.

00:14:57.046 --> 00:14:58.436 A:middle
So, let me run the code here and

00:14:58.436 --> 00:14:59.406 A:middle
we'll see how this works.

00:15:00.026 --> 00:15:01.186 A:middle
We get some inline results on

00:15:01.186 --> 00:15:02.156 A:middle
the right-hand side, and I'm

00:15:02.156 --> 00:15:04.006 A:middle
going to tap to view this

00:15:04.006 --> 00:15:04.506 A:middle
preview.

00:15:04.676 --> 00:15:05.996 A:middle
I wrote this preview method on

00:15:05.996 --> 00:15:07.836 A:middle
the MathNode myself because I

00:15:08.116 --> 00:15:10.906 A:middle
wanted to generate an SKView,

00:15:10.906 --> 00:15:12.926 A:middle
the UIView subclass that shows

00:15:12.926 --> 00:15:13.816 A:middle
SpriteKit scenes.

00:15:14.036 --> 00:15:15.066 A:middle
I wanted to generate it and put

00:15:15.066 --> 00:15:16.296 A:middle
it here so it can just show up

00:15:16.296 --> 00:15:17.606 A:middle
as a static inline result.

00:15:17.606 --> 00:15:18.936 A:middle
I didn't have to build any extra

00:15:18.936 --> 00:15:19.796 A:middle
plumbing to show this up.

00:15:19.796 --> 00:15:21.426 A:middle
It's just right there ready to

00:15:21.426 --> 00:15:21.626 A:middle
go.

00:15:21.996 --> 00:15:23.826 A:middle
And now, we see if the whole

00:15:23.826 --> 00:15:25.326 A:middle
diameter is 20 points wide and

00:15:25.796 --> 00:15:26.766 A:middle
we're at this point in the

00:15:26.766 --> 00:15:28.166 A:middle
course, this is the map density

00:15:28.166 --> 00:15:28.446 A:middle
you'll get.

00:15:28.446 --> 00:15:30.346 A:middle
I can experiment with this

00:15:30.346 --> 00:15:32.146 A:middle
density anyway I want and tweak

00:15:32.146 --> 00:15:33.446 A:middle
the values here, jump into the

00:15:33.446 --> 00:15:34.886 A:middle
other files and tweak those two.

00:15:35.156 --> 00:15:36.356 A:middle
And the inline results gave me

00:15:36.356 --> 00:15:37.766 A:middle
the feedback that I needed at

00:15:37.766 --> 00:15:38.236 A:middle
this point.

00:15:40.276 --> 00:15:40.916 A:middle
Now, we're ready.

00:15:41.046 --> 00:15:43.096 A:middle
Let's skip ahead even further to

00:15:43.096 --> 00:15:45.646 A:middle
the final point where we see the

00:15:45.646 --> 00:15:46.026 A:middle
game.

00:15:46.316 --> 00:15:47.996 A:middle
Now before I start, I have to

00:15:47.996 --> 00:15:49.226 A:middle
turn off the inline results

00:15:49.226 --> 00:15:49.696 A:middle
again.

00:15:49.856 --> 00:15:51.396 A:middle
As before, we're doing a lot of

00:15:51.396 --> 00:15:52.246 A:middle
work on every frame.

00:15:52.326 --> 00:15:53.886 A:middle
And we don't need the expression

00:15:53.886 --> 00:15:54.896 A:middle
logging and we don't want it to

00:15:54.896 --> 00:15:55.486 A:middle
slow us down.

00:15:56.256 --> 00:15:57.296 A:middle
I'll tap around my code, and

00:15:58.576 --> 00:15:59.826 A:middle
there it is.

00:16:00.346 --> 00:16:02.366 A:middle
We have a marble looking thing

00:16:02.366 --> 00:16:04.616 A:middle
on top of a wall looking thing

00:16:05.216 --> 00:16:06.016 A:middle
with parallax.

00:16:06.106 --> 00:16:07.376 A:middle
Look at this, lovely stuff.

00:16:07.866 --> 00:16:09.196 A:middle
Now, when I was working on this

00:16:09.196 --> 00:16:11.426 A:middle
idea, Joy reminded me that

00:16:11.626 --> 00:16:12.986 A:middle
there's a bunch of textures that

00:16:12.986 --> 00:16:14.596 A:middle
I can grab out of the templates

00:16:14.676 --> 00:16:16.246 A:middle
that you can download right in

00:16:16.246 --> 00:16:17.266 A:middle
the app just, you know, grab

00:16:17.266 --> 00:16:18.346 A:middle
those resources and have fun

00:16:18.346 --> 00:16:18.616 A:middle
with them.

00:16:18.986 --> 00:16:20.406 A:middle
So I pulled up the sensor create

00:16:20.406 --> 00:16:22.416 A:middle
template, used the asset picker,

00:16:22.766 --> 00:16:23.496 A:middle
pulled out some of these

00:16:23.496 --> 00:16:24.896 A:middle
textures and dropped them in my

00:16:24.896 --> 00:16:25.066 A:middle
app.

00:16:25.066 --> 00:16:25.656 A:middle
And here they are.

00:16:26.156 --> 00:16:29.066 A:middle
I even went over to a-- an image

00:16:29.066 --> 00:16:31.096 A:middle
editing app to find-- there we

00:16:31.096 --> 00:16:32.776 A:middle
go, make some fuzzy looking hole

00:16:32.776 --> 00:16:33.356 A:middle
shape things.

00:16:33.446 --> 00:16:34.396 A:middle
Oh, that's all right.

00:16:35.116 --> 00:16:36.086 A:middle
It's amazing what radial

00:16:36.086 --> 00:16:36.886 A:middle
gradients can do.

00:16:36.886 --> 00:16:37.616 A:middle
It's so cool.

00:16:38.106 --> 00:16:39.186 A:middle
Here, let me tap in the middle

00:16:39.186 --> 00:16:40.676 A:middle
and make this full screen by

00:16:40.676 --> 00:16:42.796 A:middle
dragging the midpoint all the

00:16:42.796 --> 00:16:43.676 A:middle
way over to the left.

00:16:44.146 --> 00:16:45.276 A:middle
And I'm going to try this again.

00:16:45.526 --> 00:16:47.026 A:middle
I added the tap recognizer to

00:16:47.026 --> 00:16:49.316 A:middle
start over if the game ends.

00:16:49.386 --> 00:16:50.896 A:middle
And let's see how far I get.

00:16:51.266 --> 00:16:54.236 A:middle
The faster you go, the faster it

00:16:54.236 --> 00:16:55.946 A:middle
increases the score to add a

00:16:55.946 --> 00:16:57.546 A:middle
little bit of recklessness to

00:16:57.546 --> 00:16:57.976 A:middle
the fun here.

00:16:58.226 --> 00:16:58.876 A:middle
Whoa, OK.

00:17:01.146 --> 00:17:01.946 A:middle
It's really hard to do this in

00:17:01.946 --> 00:17:03.466 A:middle
front of a crowd [laughs].

00:17:04.455 --> 00:17:06.156 A:middle
But, hey, you know what, all of

00:17:06.156 --> 00:17:07.816 A:middle
what you've seen here, each step

00:17:07.816 --> 00:17:08.965 A:middle
leading up to this point was

00:17:08.965 --> 00:17:11.586 A:middle
done entirely on this iPad.

00:17:12.205 --> 00:17:13.286 A:middle
This was a lot of fun.

00:17:13.536 --> 00:17:15.076 A:middle
My family had a great kick out

00:17:15.076 --> 00:17:15.286 A:middle
of it.

00:17:15.806 --> 00:17:17.336 A:middle
I learned more about SpriteKit.

00:17:17.336 --> 00:17:18.746 A:middle
I had a chance to use the new

00:17:18.746 --> 00:17:20.205 A:middle
user module and source file

00:17:20.205 --> 00:17:21.945 A:middle
support in the app to break up

00:17:21.945 --> 00:17:23.306 A:middle
what I was doing into different

00:17:23.306 --> 00:17:23.596 A:middle
pieces.

00:17:23.886 --> 00:17:25.195 A:middle
It was a fantastic experience.

00:17:25.876 --> 00:17:27.366 A:middle
Swift Playgrounds on iPad is a

00:17:27.366 --> 00:17:29.376 A:middle
great scratchpad to try out your

00:17:29.376 --> 00:17:32.136 A:middle
ideas, maybe even look and use

00:17:32.136 --> 00:17:33.636 A:middle
our APIs and see how they work,

00:17:34.306 --> 00:17:35.836 A:middle
or even increase the stress in

00:17:35.836 --> 00:17:36.856 A:middle
your life by building speed

00:17:36.856 --> 00:17:37.886 A:middle
running games to play with your

00:17:37.886 --> 00:17:38.226 A:middle
friends.

00:17:38.966 --> 00:17:40.526 A:middle
And now, I would like to invite

00:17:40.806 --> 00:17:42.716 A:middle
Grace back up to the stage so

00:17:42.716 --> 00:17:44.126 A:middle
that she can talk about how this

00:17:44.126 --> 00:17:45.866 A:middle
stuff works and do a deep dive

00:17:45.866 --> 00:17:47.306 A:middle
into how you can use these new

00:17:47.306 --> 00:17:49.016 A:middle
features to make the most of

00:17:49.016 --> 00:17:50.186 A:middle
Swift Playgrounds 3.

00:17:50.666 --> 00:17:50.896 A:middle
Thank you.

00:17:51.516 --> 00:17:59.046 A:middle
[ Applause and Cheering ]

00:17:59.546 --> 00:18:00.536 A:middle
&gt;&gt; Thanks, Jonathan.

00:17:59.546 --> 00:18:00.536 A:middle
&gt;&gt; Thanks, Jonathan.

00:18:02.216 --> 00:18:03.796 A:middle
So, if you're already familiar

00:18:03.796 --> 00:18:05.136 A:middle
with Swift Playgrounds, you

00:18:05.136 --> 00:18:06.386 A:middle
might have noticed a couple of

00:18:06.386 --> 00:18:07.786 A:middle
new things in Jonathan's demo.

00:18:08.216 --> 00:18:11.156 A:middle
Let's go through those now.

00:18:11.396 --> 00:18:13.356 A:middle
Most notably is the addition of

00:18:13.356 --> 00:18:14.866 A:middle
Modules, which allow you to

00:18:14.866 --> 00:18:16.616 A:middle
separate your code into multiple

00:18:16.696 --> 00:18:17.416 A:middle
Swift files.

00:18:19.146 --> 00:18:20.506 A:middle
Modules are represented as

00:18:20.536 --> 00:18:22.056 A:middle
directories of Swift code that

00:18:22.056 --> 00:18:23.816 A:middle
can be used by any page in a

00:18:23.816 --> 00:18:23.986 A:middle
book.

00:18:24.436 --> 00:18:25.326 A:middle
And you don't need to worry

00:18:25.326 --> 00:18:27.286 A:middle
about setting targets or making

00:18:27.286 --> 00:18:30.046 A:middle
new build settings.

00:18:30.166 --> 00:18:32.046 A:middle
Users can add modules to books

00:18:32.046 --> 00:18:33.656 A:middle
as well as Swift files to any

00:18:33.656 --> 00:18:34.116 A:middle
module.

00:18:35.426 --> 00:18:36.726 A:middle
Be aware though that if you

00:18:36.726 --> 00:18:38.416 A:middle
reset a document, all of the

00:18:38.416 --> 00:18:40.156 A:middle
user edits are reset as well.

00:18:40.396 --> 00:18:42.276 A:middle
And this does include any added

00:18:42.276 --> 00:18:43.416 A:middle
files or modules.

00:18:46.566 --> 00:18:48.286 A:middle
So with the opportunity for all

00:18:48.286 --> 00:18:50.096 A:middle
of these new files, let's go

00:18:50.096 --> 00:18:51.166 A:middle
through the structure of a

00:18:51.266 --> 00:18:51.786 A:middle
Playground.

00:18:52.396 --> 00:18:53.436 A:middle
I'll be using the shapes

00:18:53.436 --> 00:18:54.656 A:middle
template as an example.

00:18:56.436 --> 00:18:58.556 A:middle
Each book has a set of pages,

00:19:00.026 --> 00:19:01.676 A:middle
and each book can also have

00:19:01.676 --> 00:19:02.696 A:middle
multiple modules.

00:19:03.426 --> 00:19:06.176 A:middle
Each of these modules in turn

00:19:06.226 --> 00:19:07.936 A:middle
can have multiple source files.

00:19:09.866 --> 00:19:11.646 A:middle
So, let's quickly talk about the

00:19:11.806 --> 00:19:13.556 A:middle
access levels between all of

00:19:13.556 --> 00:19:14.786 A:middle
these different Swift files.

00:19:16.736 --> 00:19:19.246 A:middle
Code in pages is not shared to

00:19:19.246 --> 00:19:20.516 A:middle
other pages within a book.

00:19:21.136 --> 00:19:22.726 A:middle
That is to say, the code on the

00:19:22.726 --> 00:19:24.726 A:middle
Canvas page is not shared with

00:19:24.776 --> 00:19:26.306 A:middle
the code on the Create page.

00:19:27.606 --> 00:19:29.326 A:middle
However, every module is

00:19:29.386 --> 00:19:31.336 A:middle
automatically imported into each

00:19:31.336 --> 00:19:31.916 A:middle
page.

00:19:32.386 --> 00:19:33.626 A:middle
This means that the code in your

00:19:33.626 --> 00:19:35.606 A:middle
modules is accessible on every

00:19:35.636 --> 00:19:37.196 A:middle
page as long as that code is

00:19:37.196 --> 00:19:40.996 A:middle
marked as public.

00:19:41.096 --> 00:19:42.656 A:middle
Files within the same module

00:19:42.656 --> 00:19:43.916 A:middle
have access to each other

00:19:43.916 --> 00:19:45.566 A:middle
without needing to mark code as

00:19:45.566 --> 00:19:45.896 A:middle
public.

00:19:46.486 --> 00:19:47.956 A:middle
However, if code is marked as

00:19:48.026 --> 00:19:49.526 A:middle
private, it won't be visible to

00:19:49.526 --> 00:19:52.166 A:middle
other files in other modules or

00:19:52.166 --> 00:19:52.666 A:middle
pages.

00:19:52.886 --> 00:19:54.096 A:middle
It'll just be private to that

00:19:54.096 --> 00:19:54.446 A:middle
file.

00:19:57.036 --> 00:19:58.976 A:middle
Code between modules is not

00:19:58.976 --> 00:20:00.046 A:middle
shared by default.

00:19:58.976 --> 00:20:00.046 A:middle
shared by default.

00:20:01.146 --> 00:20:03.226 A:middle
But let's say I have some code

00:20:03.226 --> 00:20:04.786 A:middle
in my Graphics Module that I

00:20:04.786 --> 00:20:05.806 A:middle
want to reference in my

00:20:05.806 --> 00:20:07.736 A:middle
Calculus.swift file which is in

00:20:07.736 --> 00:20:08.756 A:middle
my Math Module.

00:20:09.656 --> 00:20:11.046 A:middle
All I have to do is make sure

00:20:11.046 --> 00:20:12.396 A:middle
the Graphics code is marked as

00:20:12.446 --> 00:20:14.206 A:middle
public, and then import the

00:20:14.206 --> 00:20:15.586 A:middle
Graphics Module into my

00:20:15.586 --> 00:20:19.786 A:middle
Calculus.swift file.

00:20:19.996 --> 00:20:21.526 A:middle
With modules, you'll still have

00:20:21.526 --> 00:20:23.176 A:middle
access to inline results and

00:20:23.176 --> 00:20:24.376 A:middle
step through execution.

00:20:24.526 --> 00:20:25.956 A:middle
So you can watch the path that

00:20:25.956 --> 00:20:27.506 A:middle
your code takes between all of

00:20:27.506 --> 00:20:28.056 A:middle
your files.

00:20:28.936 --> 00:20:30.086 A:middle
As the app steps through your

00:20:30.086 --> 00:20:31.866 A:middle
code, it automatically switches

00:20:31.916 --> 00:20:33.166 A:middle
between the files where your

00:20:33.166 --> 00:20:34.166 A:middle
code is executing.

00:20:36.156 --> 00:20:37.706 A:middle
You can also turn off inline

00:20:37.706 --> 00:20:39.066 A:middle
results which can speed up

00:20:39.066 --> 00:20:40.366 A:middle
execution as we saw in

00:20:40.366 --> 00:20:41.216 A:middle
Jonathan's demo.

00:20:42.156 --> 00:20:43.736 A:middle
You can find this control within

00:20:43.736 --> 00:20:45.636 A:middle
the Execution Control Menu along

00:20:45.636 --> 00:20:47.106 A:middle
with Step Through My Code and

00:20:47.106 --> 00:20:47.806 A:middle
Step Slowly.

00:20:50.596 --> 00:20:52.726 A:middle
The new Issues popover can show

00:20:52.726 --> 00:20:54.116 A:middle
you errors throughout all of

00:20:54.116 --> 00:20:55.736 A:middle
your files in a document and

00:20:55.736 --> 00:20:57.066 A:middle
allow you to easily navigate

00:20:57.096 --> 00:20:58.326 A:middle
between them.

00:20:59.136 --> 00:21:00.926 A:middle
If you tap on any of the errors,

00:20:59.136 --> 00:21:00.926 A:middle
If you tap on any of the errors,

00:21:01.336 --> 00:21:02.486 A:middle
it'll take you right to the

00:21:02.486 --> 00:21:04.336 A:middle
corresponding line, both for

00:21:04.336 --> 00:21:07.726 A:middle
builds and for runtime errors.

00:21:09.676 --> 00:21:11.606 A:middle
Swift Playgrounds support Swift

00:21:11.606 --> 00:21:14.186 A:middle
5 and the iOS 12.2 SDK.

00:21:15.026 --> 00:21:15.766 A:middle
This lets you play with

00:21:15.766 --> 00:21:18.046 A:middle
frameworks like Core ML 2 and

00:21:18.046 --> 00:21:20.526 A:middle
ARKit 2, developing for iOS

00:21:21.016 --> 00:21:23.086 A:middle
right on iOS.

00:21:24.236 --> 00:21:26.256 A:middle
So now, all from a blank

00:21:26.326 --> 00:21:28.936 A:middle
Playground, you can add pages

00:21:28.936 --> 00:21:30.156 A:middle
through the Table of Contents

00:21:30.206 --> 00:21:34.706 A:middle
popover, add modules, and add

00:21:34.866 --> 00:21:36.446 A:middle
Swift source files to those

00:21:36.446 --> 00:21:38.836 A:middle
modules all without ever leaving

00:21:39.616 --> 00:21:39.826 A:middle
the app.

00:21:41.236 --> 00:21:43.646 A:middle
So there are also lots of ways

00:21:43.686 --> 00:21:45.616 A:middle
to customize your content, like

00:21:45.676 --> 00:21:47.416 A:middle
setting module modes, adding

00:21:47.416 --> 00:21:49.266 A:middle
localizable code comments, and

00:21:49.266 --> 00:21:50.676 A:middle
changing what files the user

00:21:50.676 --> 00:21:51.956 A:middle
sees when they open your

00:21:51.956 --> 00:21:52.426 A:middle
document.

00:21:53.046 --> 00:21:54.366 A:middle
So I'd next like to invite my

00:21:54.366 --> 00:21:55.896 A:middle
colleague Joy to the stage to

00:21:55.896 --> 00:21:56.406 A:middle
tell you how.

00:21:57.516 --> 00:22:01.366 A:middle
[ Applause and Cheering ]

00:21:57.516 --> 00:22:01.366 A:middle
[ Applause and Cheering ]

00:22:01.866 --> 00:22:02.426 A:middle
&gt;&gt; Thanks, Grace.

00:22:06.306 --> 00:22:07.606 A:middle
Next, let's talk about all the

00:22:07.606 --> 00:22:09.016 A:middle
new features authors can

00:22:09.016 --> 00:22:10.796 A:middle
customize in Xcode whether

00:22:10.796 --> 00:22:11.766 A:middle
you're sharing your Playground

00:22:11.766 --> 00:22:12.996 A:middle
directly or through a

00:22:13.046 --> 00:22:13.716 A:middle
subscription.

00:22:15.386 --> 00:22:16.496 A:middle
When I'm teaching, it's

00:22:16.496 --> 00:22:17.916 A:middle
important for the tools I give

00:22:17.916 --> 00:22:19.376 A:middle
my students to be leveled

00:22:19.376 --> 00:22:20.916 A:middle
appropriately and as user

00:22:20.986 --> 00:22:22.106 A:middle
friendly as possible.

00:22:23.586 --> 00:22:24.546 A:middle
In order to create the right

00:22:24.546 --> 00:22:26.286 A:middle
tool for your audience at any

00:22:26.286 --> 00:22:28.006 A:middle
level, there's several features

00:22:28.006 --> 00:22:29.586 A:middle
you can take advantage of in

00:22:29.586 --> 00:22:31.696 A:middle
Swift Playgrounds 3 to highlight

00:22:31.696 --> 00:22:32.796 A:middle
the most important parts of your

00:22:32.826 --> 00:22:34.286 A:middle
Playground and remove

00:22:34.286 --> 00:22:35.686 A:middle
unnecessary complexity.

00:22:36.546 --> 00:22:37.876 A:middle
All these new features can help

00:22:37.916 --> 00:22:39.716 A:middle
you create more engaging content

00:22:40.056 --> 00:22:41.036 A:middle
and give your learners a

00:22:41.166 --> 00:22:42.746 A:middle
friendly experience in a real

00:22:42.746 --> 00:22:43.556 A:middle
developer tool.

00:22:45.376 --> 00:22:46.236 A:middle
First, let's dive into the

00:22:46.236 --> 00:22:46.936 A:middle
Module Modes.

00:22:47.416 --> 00:22:48.576 A:middle
Now, you've heard a lot about

00:22:48.576 --> 00:22:50.196 A:middle
Module Modes in the app from

00:22:50.196 --> 00:22:51.316 A:middle
both Jonathan and Grace.

00:22:52.286 --> 00:22:54.116 A:middle
As an author, you can decide

00:22:54.116 --> 00:22:55.496 A:middle
what Module Mode is right for

00:22:55.496 --> 00:22:55.956 A:middle
your book.

00:22:57.066 --> 00:22:58.186 A:middle
Because all modules are an

00:22:58.186 --> 00:23:00.166 A:middle
exciting new feature, not all

00:22:58.186 --> 00:23:00.166 A:middle
exciting new feature, not all

00:23:00.166 --> 00:23:01.386 A:middle
books will benefit from the use

00:23:01.386 --> 00:23:01.926 A:middle
of modules.

00:23:02.526 --> 00:23:03.896 A:middle
And for that purpose, we have

00:23:03.896 --> 00:23:06.066 A:middle
three module modes: None,

00:23:06.166 --> 00:23:07.096 A:middle
Limited, and Full.

00:23:07.656 --> 00:23:08.996 A:middle
The Module Mode you choose will

00:23:08.996 --> 00:23:10.236 A:middle
change the nature of your book

00:23:10.356 --> 00:23:12.086 A:middle
fundamentally, and should be

00:23:12.086 --> 00:23:13.436 A:middle
considered the foundation of

00:23:13.436 --> 00:23:14.486 A:middle
your user experience.

00:23:16.046 --> 00:23:17.376 A:middle
Let's start with the module

00:23:17.476 --> 00:23:18.706 A:middle
called None.

00:23:19.736 --> 00:23:21.536 A:middle
This mode gives your students

00:23:21.586 --> 00:23:22.756 A:middle
the original Playground

00:23:22.756 --> 00:23:24.846 A:middle
experience, not allowing any

00:23:24.916 --> 00:23:26.136 A:middle
access to user modules.

00:23:26.926 --> 00:23:28.466 A:middle
This mode relies completely on

00:23:28.466 --> 00:23:30.106 A:middle
pages and chapters to advance

00:23:30.106 --> 00:23:30.946 A:middle
the story and code.

00:23:31.556 --> 00:23:33.326 A:middle
And each page works completely

00:23:33.326 --> 00:23:35.406 A:middle
independently so no user code is

00:23:35.406 --> 00:23:37.706 A:middle
shared between pages in any way.

00:23:39.316 --> 00:23:41.316 A:middle
In the Module Mode None, all of

00:23:41.316 --> 00:23:42.466 A:middle
the code in your book will go

00:23:42.466 --> 00:23:43.536 A:middle
into the Modules folder.

00:23:44.626 --> 00:23:46.246 A:middle
This will create private modules

00:23:46.606 --> 00:23:47.846 A:middle
that can be referenced in your

00:23:47.886 --> 00:23:49.806 A:middle
Playground book but not editable

00:23:49.806 --> 00:23:50.586 A:middle
by your students.

00:23:51.666 --> 00:23:53.006 A:middle
You can use private modules in

00:23:53.006 --> 00:23:53.976 A:middle
any of the three modes.

00:23:54.406 --> 00:23:55.436 A:middle
However, the difference in the

00:23:55.436 --> 00:23:57.356 A:middle
Module Mode None is that all of

00:23:57.356 --> 00:23:59.226 A:middle
your code will go into private

00:23:59.796 --> 00:24:00.006 A:middle
modules.

00:23:59.796 --> 00:24:00.006 A:middle
modules.

00:24:01.046 --> 00:24:03.036 A:middle
As you build your book, keep in

00:24:03.036 --> 00:24:04.416 A:middle
mind that pages and chapters are

00:24:04.416 --> 00:24:06.046 A:middle
intended to be experienced

00:24:06.046 --> 00:24:06.606 A:middle
linearly.

00:24:07.406 --> 00:24:08.926 A:middle
As the author, you should think

00:24:08.926 --> 00:24:10.276 A:middle
about what the goal is for each

00:24:10.276 --> 00:24:11.716 A:middle
page, and have each page

00:24:11.816 --> 00:24:13.336 A:middle
culminate in something new, you

00:24:13.336 --> 00:24:15.256 A:middle
can do or see in the live view.

00:24:16.246 --> 00:24:17.176 A:middle
This will give your learners a

00:24:17.326 --> 00:24:19.106 A:middle
tight feedback loop ensuring

00:24:19.106 --> 00:24:20.436 A:middle
they know they've completed the

00:24:20.436 --> 00:24:22.076 A:middle
task and they're ready to move

00:24:22.076 --> 00:24:22.376 A:middle
on.

00:24:24.346 --> 00:24:26.096 A:middle
To see examples in our library

00:24:26.096 --> 00:24:28.446 A:middle
of Module Mode-- of this Module

00:24:28.446 --> 00:24:30.006 A:middle
Mode books, you can check out

00:24:30.006 --> 00:24:31.596 A:middle
Learn to Code 1, Learn to Code

00:24:31.676 --> 00:24:33.666 A:middle
2, Lights, Camera, Code, and a

00:24:33.666 --> 00:24:37.676 A:middle
variety of our challenges.

00:24:37.676 --> 00:24:39.146 A:middle
Now, Limited Mode is your first

00:24:39.266 --> 00:24:40.806 A:middle
foray into user modules and

00:24:40.806 --> 00:24:41.466 A:middle
shared files.

00:24:42.356 --> 00:24:43.926 A:middle
Limited Mode allows for a single

00:24:43.926 --> 00:24:44.656 A:middle
user module.

00:24:45.036 --> 00:24:46.376 A:middle
And unlike private modules.

00:24:46.886 --> 00:24:48.616 A:middle
user modules are completely

00:24:48.616 --> 00:24:50.696 A:middle
editable by your students.

00:24:51.916 --> 00:24:53.606 A:middle
The shared files in a user

00:24:53.606 --> 00:24:54.926 A:middle
module persist throughout the

00:24:54.966 --> 00:24:56.496 A:middle
book and they're placed to build

00:24:56.496 --> 00:24:57.246 A:middle
up code over time.

00:24:58.546 --> 00:25:00.156 A:middle
With access to a single module,

00:24:58.546 --> 00:25:00.156 A:middle
With access to a single module,

00:25:00.546 --> 00:25:01.706 A:middle
your students can learn how to

00:25:01.706 --> 00:25:04.186 A:middle
manage multiple files and bugs

00:25:04.256 --> 00:25:05.566 A:middle
coming from files they don't

00:25:05.566 --> 00:25:08.586 A:middle
necessarily have open.

00:25:08.806 --> 00:25:10.606 A:middle
Within your one module, you can

00:25:10.606 --> 00:25:12.266 A:middle
provide as many shared files as

00:25:12.266 --> 00:25:14.586 A:middle
you want and your learners can

00:25:14.586 --> 00:25:16.446 A:middle
edit, create, or delete any of

00:25:16.446 --> 00:25:17.516 A:middle
the shared files within their

00:25:17.516 --> 00:25:18.266 A:middle
user module.

00:25:20.356 --> 00:25:21.806 A:middle
As the author, you can also use

00:25:21.856 --> 00:25:24.916 A:middle
private modules to include API

00:25:25.076 --> 00:25:26.616 A:middle
you don't want to be editable by

00:25:26.616 --> 00:25:28.096 A:middle
your students in the modules

00:25:28.096 --> 00:25:28.576 A:middle
directory.

00:25:29.156 --> 00:25:31.986 A:middle
As you saw in Jonathan's demo,

00:25:32.286 --> 00:25:34.196 A:middle
he did several math functions to

00:25:34.266 --> 00:25:35.846 A:middle
a single Math.swift file.

00:25:36.846 --> 00:25:38.336 A:middle
Adding new shared files is a

00:25:38.546 --> 00:25:40.076 A:middle
great learning opportunity to

00:25:40.076 --> 00:25:41.616 A:middle
teach how to organize code in

00:25:41.616 --> 00:25:42.416 A:middle
logical ways.

00:25:43.616 --> 00:25:44.806 A:middle
You can teach your students to

00:25:44.806 --> 00:25:46.526 A:middle
move code into a shared file

00:25:46.526 --> 00:25:47.676 A:middle
they'll build up over several

00:25:47.676 --> 00:25:49.976 A:middle
pages, or move aside code

00:25:49.976 --> 00:25:51.146 A:middle
they'll change in frequently.

00:25:52.916 --> 00:25:54.676 A:middle
To see examples in our library

00:25:54.676 --> 00:25:56.306 A:middle
of Limited Mode books, you can

00:25:56.306 --> 00:25:57.526 A:middle
check out Blu's Adventure,

00:25:57.686 --> 00:25:59.516 A:middle
Assemble Your Camera, Flashy

00:25:59.516 --> 00:26:00.886 A:middle
Photos, and a variety of the

00:25:59.516 --> 00:26:00.886 A:middle
Photos, and a variety of the

00:26:00.936 --> 00:26:02.276 A:middle
challenges, some of which you

00:26:02.276 --> 00:26:02.716 A:middle
see here.

00:26:03.396 --> 00:26:06.346 A:middle
And if you want all the bells

00:26:06.346 --> 00:26:07.736 A:middle
and whistles, you have Full

00:26:07.736 --> 00:26:08.476 A:middle
Module Mode.

00:26:09.326 --> 00:26:10.696 A:middle
This mode gives you all the

00:26:10.696 --> 00:26:12.166 A:middle
tools available, including

00:26:12.166 --> 00:26:14.476 A:middle
making multiple modules, and new

00:26:14.476 --> 00:26:15.806 A:middle
files within those modules.

00:26:16.436 --> 00:26:18.926 A:middle
This mode is perfect for

00:26:18.926 --> 00:26:20.356 A:middle
teaching code architecture and

00:26:20.356 --> 00:26:21.106 A:middle
organization.

00:26:21.706 --> 00:26:23.826 A:middle
In Full Module Mode, you cannot

00:26:23.826 --> 00:26:25.046 A:middle
only teach how to manage

00:26:25.046 --> 00:26:26.666 A:middle
multiple files, but multiple

00:26:26.666 --> 00:26:28.546 A:middle
modules, and importing those

00:26:28.546 --> 00:26:29.906 A:middle
modules into each other when

00:26:29.906 --> 00:26:30.546 A:middle
necessary.

00:26:32.516 --> 00:26:34.516 A:middle
In Full Module Mode, you can

00:26:34.516 --> 00:26:36.296 A:middle
still use private modules and as

00:26:36.296 --> 00:26:38.206 A:middle
many prebuilt user modules as

00:26:38.246 --> 00:26:38.536 A:middle
you want.

00:26:39.846 --> 00:26:41.396 A:middle
Full Module Mode also gives your

00:26:41.606 --> 00:26:43.676 A:middle
students the freedom to extend

00:26:43.676 --> 00:26:45.916 A:middle
those user modules and make user

00:26:45.916 --> 00:26:46.996 A:middle
modules of their own.

00:26:48.376 --> 00:26:49.296 A:middle
When you're authoring for

00:26:49.296 --> 00:26:50.896 A:middle
modules, you should consider

00:26:51.076 --> 00:26:51.856 A:middle
when you might want to use a

00:26:51.856 --> 00:26:53.786 A:middle
private module versus a user

00:26:53.786 --> 00:26:54.196 A:middle
module.

00:26:54.826 --> 00:26:57.416 A:middle
By putting all the code into a

00:26:57.416 --> 00:26:59.356 A:middle
user module, your students can

00:26:59.356 --> 00:27:01.076 A:middle
go beyond simply just playing in

00:26:59.356 --> 00:27:01.076 A:middle
go beyond simply just playing in

00:27:01.076 --> 00:27:02.896 A:middle
your Playground to seeing how

00:27:02.896 --> 00:27:03.356 A:middle
it's built.

00:27:04.316 --> 00:27:05.756 A:middle
It also gives them complete

00:27:05.756 --> 00:27:07.456 A:middle
control to tinker and remix,

00:27:08.256 --> 00:27:09.676 A:middle
giving your students a chance to

00:27:09.676 --> 00:27:12.826 A:middle
go beyond just being a student

00:27:12.826 --> 00:27:14.556 A:middle
to getting that much closer to

00:27:14.716 --> 00:27:15.886 A:middle
becoming app developers

00:27:15.886 --> 00:27:16.576 A:middle
themselves.

00:27:18.896 --> 00:27:20.436 A:middle
To see examples in our library

00:27:20.436 --> 00:27:22.236 A:middle
of Full Module Mode books, check

00:27:22.236 --> 00:27:23.486 A:middle
out any of the starting points.

00:27:24.556 --> 00:27:26.816 A:middle
And to specify which module mode

00:27:26.816 --> 00:27:27.806 A:middle
you want your book to full

00:27:27.806 --> 00:27:29.486 A:middle
under, you must edit the key

00:27:29.956 --> 00:27:31.816 A:middle
UserModuleMode in the book level

00:27:31.816 --> 00:27:32.256 A:middle
Manifest.

00:27:34.966 --> 00:27:36.936 A:middle
Another customization you can do

00:27:37.146 --> 00:27:39.256 A:middle
when using modules in Limited

00:27:39.256 --> 00:27:41.506 A:middle
and Full Mode is auto-opening

00:27:41.686 --> 00:27:43.606 A:middle
and activating files on a page

00:27:43.636 --> 00:27:44.596 A:middle
by page basis.

00:27:46.676 --> 00:27:47.736 A:middle
Now, that you can expose

00:27:47.736 --> 00:27:49.356 A:middle
multiple files in a tabbed

00:27:49.356 --> 00:27:51.266 A:middle
editor experience, you can

00:27:51.366 --> 00:27:52.786 A:middle
specify which files will be

00:27:52.786 --> 00:27:54.516 A:middle
opened and which one will be

00:27:54.716 --> 00:27:55.636 A:middle
active when you arrive on a

00:27:55.636 --> 00:27:56.076 A:middle
page.

00:27:56.746 --> 00:27:59.846 A:middle
To add open files means that

00:27:59.846 --> 00:28:01.326 A:middle
main.swift will be the active

00:27:59.846 --> 00:28:01.326 A:middle
main.swift will be the active

00:28:01.326 --> 00:28:02.856 A:middle
file, but there may be other

00:28:02.856 --> 00:28:04.566 A:middle
files open as tabs in the

00:28:04.566 --> 00:28:04.856 A:middle
editor.

00:28:05.836 --> 00:28:07.206 A:middle
Providing the user with open

00:28:07.206 --> 00:28:08.476 A:middle
shared files when they arrive on

00:28:08.476 --> 00:28:10.306 A:middle
a page will help them know which

00:28:10.306 --> 00:28:12.236 A:middle
files they'll be editing or need

00:28:12.236 --> 00:28:13.916 A:middle
to reference without having to

00:28:13.916 --> 00:28:15.586 A:middle
locate those files themselves in

00:28:15.586 --> 00:28:16.676 A:middle
the files' popover.

00:28:19.146 --> 00:28:20.706 A:middle
You can specify which files will

00:28:20.756 --> 00:28:23.356 A:middle
be opened on a per page basis in

00:28:23.356 --> 00:28:24.386 A:middle
the page of a Manifest.

00:28:26.396 --> 00:28:28.356 A:middle
In the Manifest, used the key

00:28:28.476 --> 00:28:30.496 A:middle
UserModuleSourceFilesToOpen

00:28:31.746 --> 00:28:33.086 A:middle
followed by an array of shared

00:28:33.126 --> 00:28:33.506 A:middle
files.

00:28:34.346 --> 00:28:35.776 A:middle
The value of each item should be

00:28:35.776 --> 00:28:37.276 A:middle
the relative path to a shared

00:28:37.276 --> 00:28:37.616 A:middle
file.

00:28:38.236 --> 00:28:41.706 A:middle
In any case that you opened

00:28:41.706 --> 00:28:43.686 A:middle
files, the default action is for

00:28:43.686 --> 00:28:45.896 A:middle
main.swift to be the front most

00:28:45.896 --> 00:28:47.326 A:middle
file or the active file.

00:28:48.746 --> 00:28:50.086 A:middle
However, if one of the shared

00:28:50.086 --> 00:28:51.486 A:middle
files is going to be the first

00:28:51.486 --> 00:28:52.736 A:middle
or most prominent place your

00:28:52.736 --> 00:28:54.506 A:middle
user will be working, you can

00:28:54.506 --> 00:28:56.266 A:middle
set this file to be active when

00:28:56.266 --> 00:28:57.276 A:middle
they arrive on a page.

00:28:59.116 --> 00:29:00.486 A:middle
To declare a shared file to be

00:28:59.116 --> 00:29:00.486 A:middle
To declare a shared file to be

00:29:00.676 --> 00:29:02.156 A:middle
active, use the key

00:29:02.596 --> 00:29:04.696 A:middle
UserModuleSourceFileToActivate

00:29:04.956 --> 00:29:05.956 A:middle
again in the page level

00:29:05.956 --> 00:29:06.396 A:middle
Manifest.

00:29:07.436 --> 00:29:08.616 A:middle
The value of this key is the

00:29:08.616 --> 00:29:10.416 A:middle
path to a single shared file.

00:29:11.946 --> 00:29:13.976 A:middle
Now, Code Completion is

00:29:13.976 --> 00:29:14.926 A:middle
something you've always been

00:29:14.926 --> 00:29:16.166 A:middle
able to do in main files.

00:29:16.916 --> 00:29:18.156 A:middle
Now, in Swift Playgrounds, let's

00:29:18.196 --> 00:29:20.496 A:middle
see how Code Completion has been

00:29:20.496 --> 00:29:22.706 A:middle
extended to shared files.

00:29:24.176 --> 00:29:25.686 A:middle
Code Completion Directives

00:29:25.736 --> 00:29:27.646 A:middle
determine what API is exposed in

00:29:27.646 --> 00:29:28.366 A:middle
the Shortcut bar.

00:29:29.256 --> 00:29:30.246 A:middle
The Shortcut bar can be a

00:29:30.246 --> 00:29:31.636 A:middle
helpful tool to keep your

00:29:31.636 --> 00:29:33.506 A:middle
learners on track, minimize the

00:29:33.576 --> 00:29:34.976 A:middle
time they have to type, and

00:29:34.976 --> 00:29:36.216 A:middle
ensure they always know what to

00:29:36.216 --> 00:29:36.516 A:middle
do next.

00:29:37.806 --> 00:29:39.426 A:middle
In the introductory content, you

00:29:39.426 --> 00:29:40.526 A:middle
want to lower the barrier to

00:29:40.586 --> 00:29:42.206 A:middle
entry by enabling your students

00:29:42.206 --> 00:29:43.406 A:middle
to tap through most of their

00:29:43.486 --> 00:29:43.736 A:middle
code.

00:29:44.586 --> 00:29:45.876 A:middle
In more advanced content, you

00:29:46.076 --> 00:29:47.786 A:middle
want to expose API at the right

00:29:47.786 --> 00:29:47.926 A:middle
times.

00:29:49.906 --> 00:29:51.916 A:middle
As the author, you can control

00:29:51.996 --> 00:29:53.376 A:middle
what appears in the Shortcut bar

00:29:53.606 --> 00:29:56.046 A:middle
on a page by page basis in both

00:29:56.096 --> 00:29:57.336 A:middle
main and shared files.

00:29:57.716 --> 00:30:00.706 A:middle
In order to manage these

00:29:57.716 --> 00:30:00.706 A:middle
In order to manage these

00:30:00.776 --> 00:30:02.566 A:middle
completions, Swift Playgrounds

00:30:02.566 --> 00:30:04.636 A:middle
now offers two places you can

00:30:04.636 --> 00:30:05.846 A:middle
provide Code Completion

00:30:05.846 --> 00:30:06.366 A:middle
Directives.

00:30:07.856 --> 00:30:09.006 A:middle
Let's start in a place you might

00:30:09.006 --> 00:30:10.396 A:middle
be familiar with in the

00:30:10.396 --> 00:30:12.876 A:middle
main.swift file.

00:30:14.066 --> 00:30:15.406 A:middle
Now, this is just the start of

00:30:15.406 --> 00:30:16.916 A:middle
what you'll see if you don't

00:30:16.916 --> 00:30:18.066 A:middle
have any Code Completion

00:30:18.066 --> 00:30:19.906 A:middle
Directives in the new content,

00:30:19.906 --> 00:30:20.736 A:middle
Assemble Your Camera.

00:30:22.346 --> 00:30:23.776 A:middle
To ensure you have full control

00:30:23.776 --> 00:30:24.686 A:middle
over what appears in the

00:30:24.686 --> 00:30:26.626 A:middle
Shortcut bar, you want to start

00:30:26.626 --> 00:30:28.006 A:middle
with a directive, everything,

00:30:28.006 --> 00:30:28.336 A:middle
hide.

00:30:29.086 --> 00:30:30.516 A:middle
Just as it sounds, this will

00:30:30.516 --> 00:30:31.496 A:middle
hide everything from the

00:30:31.496 --> 00:30:33.346 A:middle
Shortcut bar giving you a blank

00:30:33.446 --> 00:30:34.966 A:middle
slate to work from.

00:30:35.896 --> 00:30:37.566 A:middle
To start building suggestions

00:30:37.636 --> 00:30:39.396 A:middle
back into the Shortcut bar, you

00:30:39.396 --> 00:30:40.846 A:middle
can use currentmodule, show.

00:30:41.386 --> 00:30:42.996 A:middle
This is a special keyword that

00:30:43.096 --> 00:30:45.076 A:middle
you can use to ensure everything

00:30:45.076 --> 00:30:46.786 A:middle
you or your students create on

00:30:46.786 --> 00:30:48.706 A:middle
the main file is shown.

00:30:50.076 --> 00:30:51.686 A:middle
The directive module show,

00:30:52.116 --> 00:30:53.626 A:middle
followed by comma separated list

00:30:53.626 --> 00:30:55.466 A:middle
of modules will show everything

00:30:55.466 --> 00:30:57.066 A:middle
marked as public in those user

00:30:57.066 --> 00:30:59.356 A:middle
module files, as well as any new

00:30:59.356 --> 00:31:00.536 A:middle
code a user may write while

00:30:59.356 --> 00:31:00.536 A:middle
code a user may write while

00:31:00.616 --> 00:31:01.486 A:middle
playing in your Playground.

00:31:02.886 --> 00:31:04.126 A:middle
This is the same directive you

00:31:04.126 --> 00:31:05.246 A:middle
would have used to expose a

00:31:05.246 --> 00:31:06.596 A:middle
library like UIKit.

00:31:07.666 --> 00:31:08.756 A:middle
For more information about the

00:31:08.756 --> 00:31:10.236 A:middle
various directives, please check

00:31:10.236 --> 00:31:11.866 A:middle
out the documentation for Swift

00:31:12.666 --> 00:31:12.936 A:middle
Playgrounds.

00:31:14.476 --> 00:31:16.056 A:middle
And newly added in Swift

00:31:16.056 --> 00:31:18.226 A:middle
Playgrounds 3 is how to add Code

00:31:18.226 --> 00:31:19.446 A:middle
Completion Directives in a

00:31:19.446 --> 00:31:21.976 A:middle
shared file in the page of a

00:31:21.976 --> 00:31:22.486 A:middle
Manifest.

00:31:23.896 --> 00:31:25.196 A:middle
This means that just like how

00:31:25.196 --> 00:31:26.906 A:middle
you can scaffold what API is

00:31:26.906 --> 00:31:28.616 A:middle
exposed in the main files as

00:31:28.616 --> 00:31:29.586 A:middle
your students move through your

00:31:29.586 --> 00:31:31.526 A:middle
book, you can do this in shared

00:31:31.526 --> 00:31:33.346 A:middle
files as well, ensuring you

00:31:33.346 --> 00:31:34.696 A:middle
won't overload your learners at

00:31:34.696 --> 00:31:35.776 A:middle
the start of their journey.

00:31:36.426 --> 00:31:39.936 A:middle
To do this, you'll use the key

00:31:40.236 --> 00:31:40.976 A:middle
UserModule

00:31:40.976 --> 00:31:42.326 A:middle
CodeCompletionDirectives

00:31:43.086 --> 00:31:44.326 A:middle
followed by an array of Code

00:31:44.326 --> 00:31:46.106 A:middle
Completion Directives similar to

00:31:46.196 --> 00:31:47.376 A:middle
how you would make them in the

00:31:47.376 --> 00:31:47.946 A:middle
main file.

00:31:50.186 --> 00:31:51.696 A:middle
Again, if using everything hide,

00:31:51.946 --> 00:31:53.116 A:middle
you want to use currentmodule

00:31:53.116 --> 00:31:55.656 A:middle
show and module show, to show

00:31:55.656 --> 00:31:57.386 A:middle
everything created on the main

00:31:57.446 --> 00:31:59.466 A:middle
and shared file.

00:31:59.706 --> 00:32:01.026 A:middle
Additionally, you can add

00:31:59.706 --> 00:32:01.026 A:middle
Additionally, you can add

00:32:01.116 --> 00:32:02.786 A:middle
keywords like public and private

00:32:02.786 --> 00:32:05.296 A:middle
as identifiers to show these to

00:32:05.456 --> 00:32:06.696 A:middle
your students as they start new

00:32:06.696 --> 00:32:07.776 A:middle
functions, classes, and structs

00:32:08.086 --> 00:32:08.846 A:middle
in a shared file.

00:32:10.076 --> 00:32:13.056 A:middle
Next, let's talk about making

00:32:13.056 --> 00:32:14.186 A:middle
Cutscenes in Swift.

00:32:16.686 --> 00:32:17.636 A:middle
Several of the books in the

00:32:17.696 --> 00:32:19.236 A:middle
Swift Playground's library use

00:32:19.336 --> 00:32:20.636 A:middle
Cutscenes to introduce a new

00:32:20.716 --> 00:32:22.816 A:middle
skill, engage the user, or

00:32:22.816 --> 00:32:23.836 A:middle
summarize a concept.

00:32:25.266 --> 00:32:27.006 A:middle
What was previously only done in

00:32:27.186 --> 00:32:29.536 A:middle
HTML, you can now also write in

00:32:29.576 --> 00:32:30.046 A:middle
Swift.

00:32:32.516 --> 00:32:36.226 A:middle
[ Applause and Cheering ]

00:32:36.726 --> 00:32:38.406 A:middle
This offers loads of benefits to

00:32:38.466 --> 00:32:39.316 A:middle
you as a developer.

00:32:40.226 --> 00:32:41.576 A:middle
You can leverage frameworks like

00:32:41.726 --> 00:32:42.926 A:middle
SpriteKit, UIKit, and

00:32:42.926 --> 00:32:43.676 A:middle
CoreAnimation.

00:32:44.776 --> 00:32:45.966 A:middle
By using Swift, you don't have

00:32:45.966 --> 00:32:47.106 A:middle
to switch tools to create

00:32:47.106 --> 00:32:50.366 A:middle
Cutscenes which means you can

00:32:50.366 --> 00:32:52.216 A:middle
use the Interface Builder for

00:32:52.216 --> 00:32:53.736 A:middle
storyboards and auto layout.

00:32:55.276 --> 00:32:56.526 A:middle
And you can localize your

00:32:56.526 --> 00:32:58.266 A:middle
Cutscenes using the same tooling

00:32:58.266 --> 00:32:59.356 A:middle
you use to localize your

00:32:59.426 --> 00:32:59.786 A:middle
content.

00:33:02.396 --> 00:33:03.916 A:middle
Using Swift, you'll now add

00:33:03.916 --> 00:33:05.466 A:middle
Cutscenes to your book similar

00:33:05.466 --> 00:33:06.806 A:middle
to how you would a new page.

00:33:08.286 --> 00:33:09.676 A:middle
In the Pages folder, you'll

00:33:09.676 --> 00:33:11.076 A:middle
still need a folder ending in

00:33:11.246 --> 00:33:13.146 A:middle
.cutscenepage, only now you'll

00:33:13.146 --> 00:33:15.006 A:middle
need both a .swift file and a

00:33:15.006 --> 00:33:15.366 A:middle
Manifest.

00:33:16.436 --> 00:33:17.956 A:middle
The .swift file you include

00:33:18.036 --> 00:33:19.586 A:middle
behaves like a liveview.swift

00:33:19.586 --> 00:33:21.436 A:middle
file and should run and present

00:33:21.476 --> 00:33:22.856 A:middle
a live view.

00:33:24.316 --> 00:33:25.776 A:middle
In order for your Cutscene to

00:33:25.776 --> 00:33:27.116 A:middle
appear in the Table of Contents,

00:33:27.526 --> 00:33:28.746 A:middle
you add it to the chapter level

00:33:28.746 --> 00:33:31.186 A:middle
Manifest, just like you would a

00:33:31.266 --> 00:33:32.626 A:middle
new page.

00:33:33.456 --> 00:33:35.996 A:middle
Now, finally, I'm excited to

00:33:35.996 --> 00:33:37.926 A:middle
introduce you to Localized Code

00:33:37.976 --> 00:33:38.396 A:middle
Comments.

00:33:40.546 --> 00:33:41.696 A:middle
If you're distributing your

00:33:41.776 --> 00:33:42.976 A:middle
Playground book to multiple

00:33:42.976 --> 00:33:44.936 A:middle
locales, you can now localize

00:33:45.066 --> 00:33:47.416 A:middle
code comments and strings in any

00:33:47.416 --> 00:33:48.676 A:middle
main or shared files.

00:33:49.466 --> 00:33:50.576 A:middle
This means that your book will

00:33:50.576 --> 00:33:52.346 A:middle
be fully localized to your

00:33:52.346 --> 00:33:52.676 A:middle
students.

00:33:54.516 --> 00:34:00.106 A:middle
[ Applause ]

00:33:54.516 --> 00:34:00.106 A:middle
[ Applause ]

00:34:00.606 --> 00:34:02.226 A:middle
For code comments, you can have

00:34:02.276 --> 00:34:04.416 A:middle
a single or multiline comment in

00:34:04.416 --> 00:34:05.556 A:middle
a localizable-zone.

00:34:06.016 --> 00:34:07.836 A:middle
Each localizable-zone should

00:34:07.836 --> 00:34:09.206 A:middle
have a unique identifier.

00:34:10.746 --> 00:34:11.966 A:middle
You can also use inline

00:34:11.966 --> 00:34:13.846 A:middle
localizable-zones to make string

00:34:13.846 --> 00:34:15.005 A:middle
literals localizable.

00:34:15.576 --> 00:34:18.045 A:middle
The output of your Localized

00:34:18.076 --> 00:34:19.716 A:middle
Code Comments will be stored in

00:34:19.716 --> 00:34:22.166 A:middle
the LocalizableCode.strings file

00:34:22.326 --> 00:34:23.596 A:middle
in the book level Private

00:34:23.596 --> 00:34:24.436 A:middle
Resources folder.

00:34:25.676 --> 00:34:27.656 A:middle
That's a taste for all the

00:34:27.656 --> 00:34:29.126 A:middle
powerful new features in Swift

00:34:29.126 --> 00:34:30.416 A:middle
Playgrounds 3 for authors.

00:34:31.085 --> 00:34:32.146 A:middle
Next, let's see all these new

00:34:32.146 --> 00:34:34.016 A:middle
author and app features come

00:34:34.016 --> 00:34:35.356 A:middle
together with the demo from

00:34:35.356 --> 00:34:35.616 A:middle
Grace.

00:34:37.516 --> 00:34:43.815 A:middle
[ Applause ]

00:34:44.315 --> 00:34:45.706 A:middle
&gt;&gt; So with all of these new

00:34:45.706 --> 00:34:47.246 A:middle
features, I really wanted to

00:34:47.246 --> 00:34:48.775 A:middle
show off that you can create

00:34:48.775 --> 00:34:50.946 A:middle
something super robust and fun

00:34:50.946 --> 00:34:52.376 A:middle
for Swift Playgrounds on the

00:34:52.585 --> 00:34:52.856 A:middle
iPad.

00:34:53.716 --> 00:34:55.666 A:middle
So as you all know, the general

00:34:55.666 --> 00:34:57.176 A:middle
workflow for creating an app

00:34:57.176 --> 00:34:58.926 A:middle
that incorporates the iOS camera

00:34:58.926 --> 00:35:01.146 A:middle
on iPad is to start with a blank

00:34:58.926 --> 00:35:01.146 A:middle
on iPad is to start with a blank

00:35:01.146 --> 00:35:03.136 A:middle
app in Xcode on the Mac, write

00:35:03.186 --> 00:35:05.246 A:middle
some code, run it on your iPad,

00:35:05.366 --> 00:35:06.716 A:middle
see if it worked, and then

00:35:06.716 --> 00:35:08.306 A:middle
iterate back and forth between

00:35:08.306 --> 00:35:09.136 A:middle
your two devices.

00:35:09.916 --> 00:35:11.386 A:middle
But, you can iterate much more

00:35:11.436 --> 00:35:12.766 A:middle
quickly if you're writing the

00:35:12.766 --> 00:35:14.676 A:middle
code right on the iPad itself

00:35:14.676 --> 00:35:15.466 A:middle
with Swift Playgrounds.

00:35:16.346 --> 00:35:18.146 A:middle
So I wanted to use the Vision

00:35:18.146 --> 00:35:19.656 A:middle
framework which does use the

00:35:19.656 --> 00:35:21.796 A:middle
camera along with Core ML to do

00:35:21.796 --> 00:35:23.086 A:middle
object detection and live

00:35:23.256 --> 00:35:23.836 A:middle
capture.

00:35:24.256 --> 00:35:25.376 A:middle
So, Swift Playgrounds was

00:35:25.376 --> 00:35:26.856 A:middle
actually a great place for me to

00:35:26.856 --> 00:35:27.946 A:middle
build this app.

00:35:29.136 --> 00:35:30.726 A:middle
So there is a concept in

00:35:30.726 --> 00:35:32.486 A:middle
American Sign Language of name

00:35:32.486 --> 00:35:34.596 A:middle
signs which are special signs to

00:35:34.596 --> 00:35:35.976 A:middle
uniquely identify a person.

00:35:35.976 --> 00:35:39.116 A:middle
When I was little, my mom gave

00:35:39.116 --> 00:35:41.006 A:middle
me the name sign of this which

00:35:41.006 --> 00:35:42.616 A:middle
is the letter G and a smile.

00:35:43.086 --> 00:35:45.186 A:middle
But that is me on the left not

00:35:45.186 --> 00:35:45.536 A:middle
smiling.

00:35:45.536 --> 00:35:46.546 A:middle
So maybe it should have been

00:35:46.636 --> 00:35:47.786 A:middle
more like this.

00:35:47.936 --> 00:35:50.666 A:middle
So working off of this idea, I

00:35:50.666 --> 00:35:52.216 A:middle
created a piece of content that

00:35:52.216 --> 00:35:54.046 A:middle
incorporates some doodling and

00:35:54.046 --> 00:35:55.636 A:middle
some sign language recognition

00:35:55.886 --> 00:35:56.686 A:middle
which I want to show you now.

00:36:03.856 --> 00:36:04.626 A:middle
All right.

00:36:04.906 --> 00:36:06.406 A:middle
So, here's my piece of content

00:36:06.826 --> 00:36:08.386 A:middle
packaged up into a book that I

00:36:08.386 --> 00:36:09.616 A:middle
call Sign Me Up.

00:36:10.026 --> 00:36:11.516 A:middle
So what I wanted to do was make

00:36:11.566 --> 00:36:13.586 A:middle
something to let Jonathan, Joy

00:36:13.586 --> 00:36:15.286 A:middle
and I create a unique face

00:36:15.376 --> 00:36:17.046 A:middle
painting for ourselves and then

00:36:17.046 --> 00:36:18.776 A:middle
trigger those drawings with sign

00:36:18.776 --> 00:36:19.156 A:middle
language.

00:36:20.016 --> 00:36:21.836 A:middle
So, I'm doing touch recognition

00:36:21.836 --> 00:36:23.926 A:middle
to draw on live video output and

00:36:23.966 --> 00:36:24.996 A:middle
then I'm using the Vision

00:36:24.996 --> 00:36:26.176 A:middle
framework to track those

00:36:26.176 --> 00:36:27.606 A:middle
drawings to detected faces.

00:36:27.606 --> 00:36:30.086 A:middle
And then I'm using Core ML to do

00:36:30.086 --> 00:36:31.426 A:middle
object recognition and live

00:36:31.486 --> 00:36:33.266 A:middle
capture to rotate between those

00:36:33.266 --> 00:36:34.776 A:middle
drawings based on what's being

00:36:35.766 --> 00:36:35.886 A:middle
signed.

00:36:37.196 --> 00:36:39.556 A:middle
So I created my book and I put

00:36:39.556 --> 00:36:41.226 A:middle
it in Limited Mode so I can hide

00:36:41.226 --> 00:36:42.586 A:middle
away some of the implementation

00:36:42.586 --> 00:36:43.146 A:middle
details.

00:36:43.566 --> 00:36:44.806 A:middle
I really just want my users to

00:36:44.806 --> 00:36:46.006 A:middle
focus on a few of the Swift

00:36:46.006 --> 00:36:47.646 A:middle
files I've created in my user

00:36:47.646 --> 00:36:48.056 A:middle
module.

00:36:48.636 --> 00:36:51.766 A:middle
On the Mac, I trained a Core ML

00:36:51.996 --> 00:36:54.296 A:middle
model to recognize three signs.

00:36:54.576 --> 00:36:58.646 A:middle
So G, Y and N, then I imported

00:36:58.646 --> 00:37:01.296 A:middle
the model to my iPad into this

00:36:58.646 --> 00:37:01.296 A:middle
the model to my iPad into this

00:37:01.296 --> 00:37:01.646 A:middle
Playground.

00:37:02.746 --> 00:37:05.026 A:middle
So G is for Grace, and my

00:37:05.026 --> 00:37:07.636 A:middle
co-presenters Jonathan and Joy,

00:37:07.746 --> 00:37:09.086 A:middle
both have the same first two

00:37:09.086 --> 00:37:10.946 A:middle
letters of their names so I

00:37:10.946 --> 00:37:11.916 A:middle
settled for the third.

00:37:11.916 --> 00:37:14.576 A:middle
So Y for joy, and N for

00:37:14.576 --> 00:37:15.176 A:middle
Jonathan.

00:37:15.916 --> 00:37:17.066 A:middle
So I'd like to invite them both

00:37:17.106 --> 00:37:18.356 A:middle
back up now to demonstrate.

00:37:22.516 --> 00:37:30.196 A:middle
[ Applause ]

00:37:30.696 --> 00:37:33.566 A:middle
Alright. So on the first page, I

00:37:33.566 --> 00:37:35.186 A:middle
added some pros instructing the

00:37:35.186 --> 00:37:35.986 A:middle
user what to do.

00:37:35.986 --> 00:37:38.246 A:middle
And when Joy taps in the Source

00:37:38.246 --> 00:37:39.976 A:middle
Editor, you'll see that I've

00:37:39.976 --> 00:37:40.916 A:middle
added a code completion

00:37:40.916 --> 00:37:42.246 A:middle
directive to suggest the

00:37:42.246 --> 00:37:43.446 A:middle
setColors function.

00:37:44.766 --> 00:37:46.266 A:middle
Just by tapping, she can fill

00:37:46.266 --> 00:37:47.786 A:middle
this function out by selecting

00:37:47.786 --> 00:37:49.976 A:middle
color literal placeholders in

00:37:49.976 --> 00:37:50.996 A:middle
the Code Completion bar.

00:37:51.636 --> 00:37:53.206 A:middle
The quick editor for this makes

00:37:53.206 --> 00:37:54.776 A:middle
it super easy to see different

00:37:54.776 --> 00:37:55.766 A:middle
UI colors this way.

00:37:57.236 --> 00:37:58.846 A:middle
The setColors function sets some

00:37:58.846 --> 00:38:00.096 A:middle
of the different drawing colors

00:37:58.846 --> 00:38:00.096 A:middle
of the different drawing colors

00:38:00.096 --> 00:38:01.286 A:middle
that will be available once she

00:38:01.286 --> 00:38:01.946 A:middle
runs the code.

00:38:02.186 --> 00:38:03.126 A:middle
So let's go ahead and do that

00:38:03.126 --> 00:38:03.336 A:middle
now.

00:38:06.446 --> 00:38:06.596 A:middle
Awesome.

00:38:07.096 --> 00:38:08.456 A:middle
And let's expand the live view

00:38:08.456 --> 00:38:09.616 A:middle
to full screen to get a better

00:38:09.616 --> 00:38:10.246 A:middle
perspective.

00:38:11.756 --> 00:38:12.846 A:middle
So she'll cycle through in the

00:38:12.846 --> 00:38:14.526 A:middle
bottom, left-hand corner to set

00:38:14.526 --> 00:38:16.856 A:middle
Y for Joy, and then can tap

00:38:16.906 --> 00:38:18.016 A:middle
through in the right hand color

00:38:18.016 --> 00:38:19.266 A:middle
to pick the color to draw with.

00:38:20.076 --> 00:38:21.566 A:middle
And then she can do some face

00:38:21.566 --> 00:38:21.936 A:middle
painting.

00:38:24.356 --> 00:38:25.746 A:middle
So what she draws is tracking to

00:38:25.746 --> 00:38:26.946 A:middle
her face using the Vision

00:38:26.946 --> 00:38:28.466 A:middle
framework which can return a

00:38:28.466 --> 00:38:30.236 A:middle
bounding box of a face and some

00:38:30.236 --> 00:38:31.036 A:middle
facial landmarks.

00:38:31.126 --> 00:38:33.206 A:middle
So I'm using the left pupil to

00:38:33.206 --> 00:38:34.586 A:middle
map all of these points to their

00:38:34.586 --> 00:38:35.496 A:middle
correct locations.

00:38:36.406 --> 00:38:37.706 A:middle
Once she's satisfied, she'll tap

00:38:37.786 --> 00:38:39.686 A:middle
Done and give Jonathan a turn.

00:38:40.756 --> 00:38:42.666 A:middle
So these drawings are then

00:38:42.666 --> 00:38:44.336 A:middle
represented as a set of colors

00:38:44.336 --> 00:38:46.096 A:middle
and x, y distances to the left

00:38:46.156 --> 00:38:47.456 A:middle
pupil and are then mapped to a

00:38:47.456 --> 00:38:47.746 A:middle
letter.

00:38:48.456 --> 00:38:50.116 A:middle
This information is then saved

00:38:50.116 --> 00:38:51.256 A:middle
to the Playground key value

00:38:51.256 --> 00:38:52.416 A:middle
store of this Playground.

00:38:53.106 --> 00:38:54.296 A:middle
And all of this code for the

00:38:54.296 --> 00:38:56.216 A:middle
mapping is in the FaceView.swift

00:38:56.216 --> 00:38:57.906 A:middle
file and is available for the

00:38:57.906 --> 00:39:00.266 A:middle
user to peruse without messing

00:38:57.906 --> 00:39:00.266 A:middle
user to peruse without messing

00:39:00.266 --> 00:39:01.876 A:middle
up any of the cleanliness of my

00:39:01.876 --> 00:39:02.496 A:middle
main page.

00:39:02.496 --> 00:39:04.306 A:middle
So it looks like Jonathan's

00:39:04.306 --> 00:39:04.516 A:middle
done.

00:39:04.516 --> 00:39:05.866 A:middle
I'll follow suit.

00:39:16.986 --> 00:39:17.396 A:middle
Cool.

00:39:18.516 --> 00:39:22.046 A:middle
[Applause]

00:39:22.546 --> 00:39:23.846 A:middle
Awesome. So let's go to the next

00:39:23.846 --> 00:39:25.566 A:middle
page now which instructs us to

00:39:25.566 --> 00:39:28.226 A:middle
run the code and see what

00:39:28.796 --> 00:39:29.016 A:middle
happens.

00:39:29.166 --> 00:39:30.516 A:middle
And let's bring the live view to

00:39:30.516 --> 00:39:31.496 A:middle
full screen again to get a

00:39:31.496 --> 00:39:32.176 A:middle
better perspective.

00:39:33.206 --> 00:39:34.796 A:middle
So, so far, nothing is happening

00:39:34.796 --> 00:39:36.306 A:middle
except for our face detection.

00:39:36.596 --> 00:39:38.596 A:middle
But try signing the letter Y.

00:39:40.236 --> 00:39:41.966 A:middle
Awesome. So Swift Playgrounds is

00:39:41.966 --> 00:39:44.016 A:middle
recognizing-- [applause] Yeah.

00:39:48.796 --> 00:39:50.396 A:middle
Swift Playgrounds recognizes

00:39:50.396 --> 00:39:51.916 A:middle
that Joy is signing Y and is

00:39:51.956 --> 00:39:53.456 A:middle
projecting her drawing onto her

00:39:53.516 --> 00:39:53.796 A:middle
face.

00:39:54.416 --> 00:39:55.176 A:middle
So let's see if we try a

00:39:55.176 --> 00:39:55.716 A:middle
different letter.

00:39:55.716 --> 00:39:56.486 A:middle
Let's try G.

00:39:57.956 --> 00:39:58.976 A:middle
&gt;&gt; Oh, I don't know.

00:39:59.046 --> 00:39:59.726 A:middle
&gt;&gt; Rotate a little bit.

00:40:01.626 --> 00:40:03.156 A:middle
Oh, we're getting there.

00:40:03.156 --> 00:40:03.976 A:middle
Maybe N for Jonathan.

00:40:04.756 --> 00:40:05.846 A:middle
There we go.

00:40:06.106 --> 00:40:07.326 A:middle
Cool, cool.

00:40:07.576 --> 00:40:08.876 A:middle
And it can even switch between

00:40:08.876 --> 00:40:09.406 A:middle
faces.

00:40:11.786 --> 00:40:12.946 A:middle
Perfect. You've never looked

00:40:12.946 --> 00:40:13.796 A:middle
better [laughs].

00:40:14.516 --> 00:40:18.096 A:middle
[ Applause ]

00:40:18.596 --> 00:40:20.246 A:middle
So, all of this code was written

00:40:20.246 --> 00:40:21.886 A:middle
entirely in Swift Playgrounds

00:40:21.886 --> 00:40:23.376 A:middle
and is running on this iPad.

00:40:23.786 --> 00:40:24.986 A:middle
And you can customize it for

00:40:24.986 --> 00:40:26.596 A:middle
your students, your friends or

00:40:26.596 --> 00:40:28.076 A:middle
fellow developers on the Mac

00:40:28.386 --> 00:40:30.266 A:middle
making for unique and really fun

00:40:30.346 --> 00:40:31.506 A:middle
piece of content that makes

00:40:31.506 --> 00:40:32.646 A:middle
Swift Playgrounds accessible.

00:40:39.036 --> 00:40:40.856 A:middle
So both Jonathan and my

00:40:40.926 --> 00:40:42.026 A:middle
Playgrounds are available for

00:40:42.026 --> 00:40:43.266 A:middle
download online in a

00:40:43.266 --> 00:40:44.116 A:middle
subscription at

00:40:44.216 --> 00:40:44.926 A:middle
wwdcswiftplaygrounds

00:40:44.926 --> 00:40:48.196 A:middle
2019.github.io.

00:40:49.056 --> 00:40:50.146 A:middle
&gt;&gt; And for more information,

00:40:50.146 --> 00:40:50.906 A:middle
please check out our

00:40:50.906 --> 00:40:51.866 A:middle
documentation

00:40:52.056 --> 00:40:53.956 A:middle
developer.apple.com.

00:40:54.386 --> 00:40:56.026 A:middle
And please come to the labs

00:40:56.026 --> 00:40:57.576 A:middle
tomorrow morning, bright and

00:40:57.576 --> 00:40:59.066 A:middle
early at 9:00 a.m. We're going

00:40:59.066 --> 00:41:00.046 A:middle
to be there and we'd love to

00:40:59.066 --> 00:41:00.046 A:middle
to be there and we'd love to

00:41:00.046 --> 00:41:01.136 A:middle
talk with you.

00:41:01.696 --> 00:41:03.086 A:middle
&gt;&gt; Thank you all for coming and

00:41:03.086 --> 00:41:03.886 A:middle
have a great rest of your

00:41:03.886 --> 00:41:04.346 A:middle
conference.

00:41:05.516 --> 00:41:09.500 A:middle
[ Applause and Cheering ]
