WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:08.066 --> 00:00:10.066 A:middle
[ Applause ]

00:00:10.116 --> 00:00:10.476 A:middle
&gt;&gt; Welcome.

00:00:13.656 --> 00:00:15.116 A:middle
Sound has long been an

00:00:15.116 --> 00:00:16.666 A:middle
incredible part of creating a

00:00:16.726 --> 00:00:17.586 A:middle
truly great app.

00:00:18.226 --> 00:00:19.346 A:middle
Whether that's creating an

00:00:19.506 --> 00:00:21.446 A:middle
atmospheric sound bed for your

00:00:21.446 --> 00:00:23.946 A:middle
games or drawing attention to an

00:00:24.006 --> 00:00:25.846 A:middle
important alert or notification.

00:00:26.556 --> 00:00:28.316 A:middle
The addition of haptics adds a

00:00:28.316 --> 00:00:29.586 A:middle
whole new dimension to this

00:00:29.586 --> 00:00:30.966 A:middle
experience -- touch.

00:00:32.336 --> 00:00:33.776 A:middle
Today's session is a story in

00:00:33.776 --> 00:00:35.826 A:middle
two parts, design and

00:00:35.826 --> 00:00:36.326 A:middle
development.

00:00:36.836 --> 00:00:39.076 A:middle
And first, I'd like to start by

00:00:39.076 --> 00:00:41.146 A:middle
introducing Hugo and Camille and

00:00:41.246 --> 00:00:42.666 A:middle
ask them to come to the stage

00:00:42.666 --> 00:00:44.066 A:middle
for their insights and guidance

00:00:44.126 --> 00:00:45.556 A:middle
on designing great haptic

00:00:45.556 --> 00:00:47.076 A:middle
experiences for your apps.

00:00:48.516 --> 00:00:53.500 A:middle
[ Applause ]

00:01:02.516 --> 00:01:07.566 A:middle
[ Cell Phone Vibration ]

00:01:08.066 --> 00:01:09.206 A:middle
&gt;&gt; I'm sure you're familiar with

00:01:09.206 --> 00:01:09.656 A:middle
that sound.

00:01:10.846 --> 00:01:11.976 A:middle
It's been part of our life for

00:01:11.976 --> 00:01:12.326 A:middle
years.

00:01:12.446 --> 00:01:15.256 A:middle
In 2019 though, I think we can

00:01:15.256 --> 00:01:15.656 A:middle
do better.

00:01:16.396 --> 00:01:17.686 A:middle
I'm Camille Moussette,

00:01:18.056 --> 00:01:19.386 A:middle
interaction designer on the

00:01:19.386 --> 00:01:20.266 A:middle
Apple design team.

00:01:21.046 --> 00:01:22.486 A:middle
&gt;&gt; And I'm Hugo Verweij, sound

00:01:22.486 --> 00:01:23.726 A:middle
designer on the design team.

00:01:25.036 --> 00:01:27.756 A:middle
This session is about designing

00:01:27.756 --> 00:01:29.166 A:middle
great audio haptic experiences.

00:01:29.416 --> 00:01:31.586 A:middle
Our goal with this talk is for

00:01:31.586 --> 00:01:34.176 A:middle
you to be inspired and leave you

00:01:34.176 --> 00:01:36.286 A:middle
with practical ideas about how

00:01:36.286 --> 00:01:37.476 A:middle
to design great sound and

00:01:37.476 --> 00:01:39.286 A:middle
haptics when used to together in

00:01:39.286 --> 00:01:41.486 A:middle
the right way can bring a new

00:01:41.486 --> 00:01:43.046 A:middle
dimension to your app.

00:01:45.216 --> 00:01:46.776 A:middle
During the next 30 minutes,

00:01:47.126 --> 00:01:48.626 A:middle
we'll talk about three things.

00:01:49.286 --> 00:01:50.716 A:middle
First, we'll introduce what is

00:01:50.716 --> 00:01:52.476 A:middle
an audio haptic experience.

00:01:53.756 --> 00:01:55.076 A:middle
Then we'll look at three guiding

00:01:55.076 --> 00:01:56.906 A:middle
principles to help you design

00:01:56.906 --> 00:01:57.906 A:middle
those great experiences.

00:01:58.956 --> 00:02:00.236 A:middle
Lastly, we'll look at different

00:01:58.956 --> 00:02:00.236 A:middle
Lastly, we'll look at different

00:02:00.236 --> 00:02:02.986 A:middle
techniques and practical tips to

00:02:02.986 --> 00:02:04.756 A:middle
make those experiences great and

00:02:04.756 --> 00:02:05.516 A:middle
truly compelling.

00:02:07.346 --> 00:02:09.416 A:middle
So, what is an audio haptic

00:02:09.416 --> 00:02:10.036 A:middle
experience?

00:02:10.846 --> 00:02:12.606 A:middle
Well, let's start by listening

00:02:12.606 --> 00:02:13.206 A:middle
to a sound.

00:02:14.176 --> 00:02:16.046 A:middle
[ Beeping Sound ]

00:02:16.046 --> 00:02:17.976 A:middle
Okay. Now let's lower this

00:02:17.976 --> 00:02:18.096 A:middle
sound.

00:02:18.676 --> 00:02:21.626 A:middle
[ Beeping Sound ]

00:02:22.126 --> 00:02:23.426 A:middle
What happens if I lower it even

00:02:23.426 --> 00:02:23.976 A:middle
further?

00:02:24.516 --> 00:02:26.606 A:middle
[ Beeping Sound ]

00:02:27.106 --> 00:02:29.166 A:middle
Whoa. It's so low I can't hear

00:02:29.166 --> 00:02:29.696 A:middle
it anymore.

00:02:30.286 --> 00:02:31.966 A:middle
You know, our ears just don't

00:02:32.236 --> 00:02:33.216 A:middle
register it anymore.

00:02:33.536 --> 00:02:34.986 A:middle
But, if you would put your

00:02:35.066 --> 00:02:36.306 A:middle
finger on the speaker, you could

00:02:36.306 --> 00:02:37.776 A:middle
still feel it move back and

00:02:37.816 --> 00:02:38.106 A:middle
forth.

00:02:38.656 --> 00:02:41.726 A:middle
We designed a taptic engine

00:02:41.726 --> 00:02:44.856 A:middle
specifically to play these low

00:02:44.856 --> 00:02:46.036 A:middle
frequencies that you can only

00:02:46.036 --> 00:02:46.486 A:middle
feel.

00:02:47.926 --> 00:02:50.376 A:middle
Here it is in the iPhone and

00:02:50.376 --> 00:02:52.686 A:middle
next to it the speaker module.

00:02:53.216 --> 00:02:56.866 A:middle
The haptic sensations from the

00:02:56.866 --> 00:02:58.356 A:middle
taptic engine are synchronized

00:02:58.966 --> 00:03:00.296 A:middle
to the sounds coming from the

00:02:58.966 --> 00:03:00.296 A:middle
to the sounds coming from the

00:03:00.296 --> 00:03:03.336 A:middle
speaker, and the result is what

00:03:03.336 --> 00:03:05.316 A:middle
we call an audio haptic

00:03:05.316 --> 00:03:05.936 A:middle
experience.

00:03:06.526 --> 00:03:08.976 A:middle
But haptic sensations are meant

00:03:08.976 --> 00:03:12.016 A:middle
to be felt, so because we are

00:03:12.016 --> 00:03:14.146 A:middle
presenting this on stage, and on

00:03:14.146 --> 00:03:15.876 A:middle
screen we need your help in

00:03:15.876 --> 00:03:17.416 A:middle
imagining what this would feel

00:03:17.416 --> 00:03:17.626 A:middle
like.

00:03:18.456 --> 00:03:21.206 A:middle
We'll do our best to help you by

00:03:21.206 --> 00:03:22.446 A:middle
visualizing the haptics like

00:03:22.446 --> 00:03:22.756 A:middle
this

00:03:26.296 --> 00:03:27.776 A:middle
or by playing a sound that

00:03:27.776 --> 00:03:29.476 A:middle
resembles the haptic, like this.

00:03:31.016 --> 00:03:34.506 A:middle
[ Drumming ]

00:03:35.006 --> 00:03:36.496 A:middle
We will also visualize these

00:03:36.496 --> 00:03:39.006 A:middle
experiences on the timeline, and

00:03:39.006 --> 00:03:40.236 A:middle
Camille will tell you some more

00:03:40.236 --> 00:03:41.856 A:middle
about how that's done in a quick

00:03:42.166 --> 00:03:43.946 A:middle
haptics design primer.

00:03:46.366 --> 00:03:48.766 A:middle
&gt;&gt; IOS 13 introduced a new API

00:03:49.646 --> 00:03:51.026 A:middle
for designing your own custom

00:03:51.026 --> 00:03:51.466 A:middle
haptics.

00:03:52.176 --> 00:03:54.576 A:middle
It's called Core Haptics.

00:03:55.196 --> 00:03:56.976 A:middle
This new API allows you

00:03:57.196 --> 00:03:59.416 A:middle
developers to use the taptic

00:03:59.416 --> 00:04:01.686 A:middle
engine fully in iPhone.

00:03:59.416 --> 00:04:01.686 A:middle
engine fully in iPhone.

00:04:04.496 --> 00:04:06.816 A:middle
The taptic engine is capable of

00:04:06.816 --> 00:04:08.576 A:middle
rendering a wide range of

00:04:08.576 --> 00:04:10.516 A:middle
experiences and can generate a

00:04:10.516 --> 00:04:13.576 A:middle
custom vibration like this, it

00:04:13.576 --> 00:04:14.746 A:middle
looks like this, and it should

00:04:14.746 --> 00:04:16.116 A:middle
sound and feel like this

00:04:17.516 --> 00:04:19.676 A:middle
[beeping sound].

00:04:20.176 --> 00:04:22.055 A:middle
So, as you've seen, we're using

00:04:22.055 --> 00:04:23.626 A:middle
a wave form and sound to

00:04:23.626 --> 00:04:24.516 A:middle
represent haptics.

00:04:24.966 --> 00:04:26.646 A:middle
As Hugo said, you need to

00:04:26.646 --> 00:04:29.176 A:middle
imagine this in your hand as a

00:04:29.176 --> 00:04:30.166 A:middle
silent experience.

00:04:30.996 --> 00:04:32.796 A:middle
This should be felt and not

00:04:32.886 --> 00:04:33.126 A:middle
heard.

00:04:33.486 --> 00:04:36.836 A:middle
So, we can play these continuous

00:04:36.836 --> 00:04:37.446 A:middle
experiences.

00:04:38.586 --> 00:04:39.686 A:middle
We can also have something

00:04:39.686 --> 00:04:41.666 A:middle
that's more shorter and compact.

00:04:42.326 --> 00:04:45.686 A:middle
It's a single cycle, and we call

00:04:45.686 --> 00:04:47.166 A:middle
this experience a transient.

00:04:48.556 --> 00:04:51.906 A:middle
It's much more momentary, and it

00:04:51.906 --> 00:04:54.326 A:middle
feels like an impact or a strike

00:04:54.656 --> 00:04:56.966 A:middle
or a tap.

00:04:57.016 --> 00:04:59.016 A:middle
[ Drumming Sound ]

00:04:59.016 --> 00:05:01.416 A:middle
Very momentary and then we

00:04:59.016 --> 00:05:01.416 A:middle
Very momentary and then we

00:05:01.716 --> 00:05:05.186 A:middle
actually can refine it further.

00:05:05.876 --> 00:05:07.796 A:middle
Moving forward, we'll use basic

00:05:07.796 --> 00:05:09.346 A:middle
shapes to represent haptics in

00:05:09.346 --> 00:05:10.136 A:middle
different patterns.

00:05:10.636 --> 00:05:11.946 A:middle
So, our transient becomes a

00:05:11.946 --> 00:05:14.516 A:middle
simple rectangle, and because

00:05:14.516 --> 00:05:15.816 A:middle
our taptic engine is an

00:05:16.356 --> 00:05:17.686 A:middle
exceptional piece of haptic

00:05:17.686 --> 00:05:19.836 A:middle
engineering, we can modulate the

00:05:19.836 --> 00:05:20.896 A:middle
experience in different ways.

00:05:21.766 --> 00:05:23.236 A:middle
First, we can modulate the

00:05:23.236 --> 00:05:24.976 A:middle
intensity or the amplitude.

00:05:25.476 --> 00:05:28.886 A:middle
We can also make it feel more

00:05:28.886 --> 00:05:30.916 A:middle
round or soft.

00:05:32.346 --> 00:05:33.786 A:middle
At the other extreme, we can

00:05:33.836 --> 00:05:36.816 A:middle
make it more precise and crisp.

00:05:38.026 --> 00:05:39.856 A:middle
So this experience is possible

00:05:40.196 --> 00:05:41.066 A:middle
with the taptic engine.

00:05:45.076 --> 00:05:47.796 A:middle
So, in the end, this completes

00:05:48.126 --> 00:05:49.676 A:middle
our quick introduction to haptic

00:05:49.676 --> 00:05:51.736 A:middle
design and what Core Haptics API

00:05:52.246 --> 00:05:52.926 A:middle
is all about.

00:05:53.786 --> 00:05:55.926 A:middle
We have one intensity you can

00:05:55.926 --> 00:05:57.726 A:middle
modulate and another design

00:05:57.726 --> 00:05:59.126 A:middle
dimension, haptic sharpness,

00:05:59.456 --> 00:06:01.426 A:middle
that you can, you are in control

00:05:59.456 --> 00:06:01.426 A:middle
that you can, you are in control

00:06:01.916 --> 00:06:03.046 A:middle
for two types of event,

00:06:03.286 --> 00:06:06.406 A:middle
continuous and transient.

00:06:06.406 --> 00:06:08.546 A:middle
Now, let's look at the three

00:06:08.546 --> 00:06:10.346 A:middle
guiding principles that we want

00:06:10.346 --> 00:06:13.886 A:middle
to share with you today.

00:06:14.076 --> 00:06:15.876 A:middle
First is causality.

00:06:17.036 --> 00:06:20.606 A:middle
Then we have harmony and lastly

00:06:20.606 --> 00:06:21.886 A:middle
we have utility.

00:06:23.286 --> 00:06:28.146 A:middle
These concepts or approaches are

00:06:28.146 --> 00:06:29.606 A:middle
used throughout the work that we

00:06:29.606 --> 00:06:31.426 A:middle
do at Apple, and we think they

00:06:31.426 --> 00:06:33.446 A:middle
can help you as well in your own

00:06:33.446 --> 00:06:34.146 A:middle
app experience.

00:06:34.636 --> 00:06:36.446 A:middle
For each of them, we'll look at

00:06:36.446 --> 00:06:38.686 A:middle
the concept and explain through

00:06:38.686 --> 00:06:39.476 A:middle
a few examples.

00:06:39.916 --> 00:06:40.636 A:middle
Let's get started.

00:06:42.306 --> 00:06:42.896 A:middle
Causality.

00:06:44.156 --> 00:06:46.036 A:middle
Causality is about for feedback

00:06:46.126 --> 00:06:48.026 A:middle
to be useful it must be obvious

00:06:48.076 --> 00:06:50.826 A:middle
what caused it.

00:06:51.086 --> 00:06:52.916 A:middle
&gt;&gt; So, imagine being a soccer

00:06:52.916 --> 00:06:54.106 A:middle
player kicking this ball.

00:06:54.846 --> 00:06:56.986 A:middle
What would the experience feel

00:06:56.986 --> 00:06:57.276 A:middle
like?

00:06:58.856 --> 00:07:03.596 A:middle
There is a clear, a clear

00:06:58.856 --> 00:07:03.596 A:middle
There is a clear, a clear

00:07:03.596 --> 00:07:04.846 A:middle
relationship, an obvious

00:07:04.846 --> 00:07:06.196 A:middle
relationship between the cause,

00:07:06.996 --> 00:07:08.246 A:middle
the foot colliding with the ball

00:07:08.676 --> 00:07:10.176 A:middle
and the effect, the sound of the

00:07:10.176 --> 00:07:11.246 A:middle
impact and the feel of the

00:07:11.246 --> 00:07:11.546 A:middle
impact.

00:07:12.906 --> 00:07:15.656 A:middle
Now, what this experience sounds

00:07:15.656 --> 00:07:17.756 A:middle
and feels like is determined by

00:07:18.096 --> 00:07:20.566 A:middle
the qualities of the interacting

00:07:20.626 --> 00:07:22.536 A:middle
objects, the material of the

00:07:22.536 --> 00:07:24.226 A:middle
shoe, the material of the ball.

00:07:24.656 --> 00:07:27.956 A:middle
And then the dynamics of the

00:07:27.956 --> 00:07:28.386 A:middle
action.

00:07:29.086 --> 00:07:30.486 A:middle
Is it a hard kick or a soft

00:07:30.486 --> 00:07:30.686 A:middle
kick?

00:07:31.606 --> 00:07:33.236 A:middle
And the environment, the

00:07:33.236 --> 00:07:35.326 A:middle
acoustics of the stadium or the

00:07:35.326 --> 00:07:35.876 A:middle
soccer field.

00:07:36.876 --> 00:07:39.306 A:middle
Because we are so familiar with

00:07:39.306 --> 00:07:41.376 A:middle
these things, it would not make

00:07:41.376 --> 00:07:44.246 A:middle
sense at all to use a sound that

00:07:44.246 --> 00:07:45.056 A:middle
is very different.

00:07:45.746 --> 00:07:47.096 A:middle
Let's try it out and take it way

00:07:47.096 --> 00:07:48.546 A:middle
over the top.

00:07:49.516 --> 00:07:51.546 A:middle
[ Glass Breaking ]

00:07:52.046 --> 00:07:52.816 A:middle
Very strange, that doesn't

00:07:52.816 --> 00:07:53.266 A:middle
really work.

00:07:54.386 --> 00:07:55.956 A:middle
Now when designing sounds for

00:07:55.956 --> 00:07:58.256 A:middle
your experiences, think about

00:07:58.256 --> 00:07:59.806 A:middle
what it would feel and sound

00:07:59.806 --> 00:08:01.626 A:middle
like if what you interact with

00:07:59.806 --> 00:08:01.626 A:middle
like if what you interact with

00:08:01.936 --> 00:08:03.716 A:middle
would be a physical object.

00:08:04.216 --> 00:08:08.736 A:middle
As an example, let's look at the

00:08:08.736 --> 00:08:09.946 A:middle
Apple Pay confirmation.

00:08:11.146 --> 00:08:12.546 A:middle
We wanted the sound and the

00:08:12.546 --> 00:08:14.696 A:middle
haptics to perfectly match the

00:08:14.696 --> 00:08:16.666 A:middle
animation on screen, the

00:08:16.696 --> 00:08:17.166 A:middle
checkmark.

00:08:17.196 --> 00:08:21.516 A:middle
So, where do we start?

00:08:22.846 --> 00:08:24.346 A:middle
Well, what sounds do you

00:08:24.346 --> 00:08:25.966 A:middle
associate with making a payment?

00:08:26.916 --> 00:08:28.456 A:middle
What does money sound like?

00:08:29.356 --> 00:08:30.436 A:middle
And what is the interaction of

00:08:30.476 --> 00:08:32.226 A:middle
making a payment using Apple

00:08:32.265 --> 00:08:32.446 A:middle
Pay?

00:08:32.885 --> 00:08:33.916 A:middle
And of course we have to look at

00:08:34.296 --> 00:08:35.616 A:middle
that animation of the checkmark

00:08:35.616 --> 00:08:36.176 A:middle
on screen.

00:08:37.486 --> 00:08:39.285 A:middle
It should feel positive, like

00:08:40.046 --> 00:08:41.246 A:middle
confirming a successful

00:08:41.246 --> 00:08:41.856 A:middle
transaction.

00:08:42.466 --> 00:08:45.266 A:middle
Here are a few examples of

00:08:45.266 --> 00:08:46.956 A:middle
sounds that were candidates for

00:08:46.956 --> 00:08:48.426 A:middle
this confirmation.

00:08:51.216 --> 00:08:52.326 A:middle
This is the first one [beeping

00:08:52.326 --> 00:08:53.576 A:middle
sound].

00:08:53.576 --> 00:08:55.116 A:middle
This one is very pleasant, but

00:08:55.116 --> 00:08:57.066 A:middle
it sounded a bit too happy and

00:08:57.266 --> 00:08:57.696 A:middle
frivolous.

00:08:58.996 --> 00:09:01.206 A:middle
Now the next one worked really

00:08:58.996 --> 00:09:01.206 A:middle
Now the next one worked really

00:09:01.206 --> 00:09:02.696 A:middle
well with the checkmark of the

00:09:04.056 --> 00:09:04.346 A:middle
animation [beeping sound].

00:09:05.726 --> 00:09:07.356 A:middle
But we felt that its character

00:09:07.356 --> 00:09:08.496 A:middle
wasn't really right.

00:09:08.496 --> 00:09:10.086 A:middle
It was a little too harsh.

00:09:11.186 --> 00:09:12.796 A:middle
And then there is this one, the

00:09:12.796 --> 00:09:14.776 A:middle
one that we chose in the end and

00:09:14.776 --> 00:09:15.696 A:middle
that you all know.

00:09:16.926 --> 00:09:18.236 A:middle
It's not too serious, and it's

00:09:18.326 --> 00:09:21.436 A:middle
clearly a confirmation [beeping

00:09:21.436 --> 00:09:22.116 A:middle
sound].

00:09:22.116 --> 00:09:23.476 A:middle
Okay, so we've got our sound.

00:09:23.856 --> 00:09:25.376 A:middle
Now, onto the haptics.

00:09:26.486 --> 00:09:28.446 A:middle
Our first idea was to mimic the

00:09:28.446 --> 00:09:31.606 A:middle
waveform of the sound because it

00:09:31.606 --> 00:09:33.546 A:middle
matches perfectly, but after

00:09:33.546 --> 00:09:35.886 A:middle
some experimentation, we found

00:09:35.886 --> 00:09:38.336 A:middle
that two simple taps actually

00:09:38.336 --> 00:09:40.226 A:middle
did a better job.

00:09:40.496 --> 00:09:42.456 A:middle
I like to see these as little

00:09:42.456 --> 00:09:44.156 A:middle
mini compositions where we have

00:09:44.256 --> 00:09:45.306 A:middle
two instruments, one that you

00:09:45.306 --> 00:09:47.346 A:middle
can hear and one that you can

00:09:47.456 --> 00:09:48.516 A:middle
feel, the haptics.

00:09:49.676 --> 00:09:51.046 A:middle
They don't always necessarily

00:09:51.046 --> 00:09:53.616 A:middle
have to play the same thing, but

00:09:53.866 --> 00:09:55.146 A:middle
they do have to play in the same

00:09:55.216 --> 00:09:55.706 A:middle
tempo.

00:09:57.166 --> 00:09:58.076 A:middle
Here they are together.

00:09:58.076 --> 00:09:59.836 A:middle
Notice the lower sound

00:09:59.836 --> 00:10:02.976 A:middle
indicating the haptics [beeping

00:09:59.836 --> 00:10:02.976 A:middle
indicating the haptics [beeping

00:10:03.376 --> 00:10:05.376 A:middle
sound].

00:10:05.776 --> 00:10:07.396 A:middle
Okay, and this is then the final

00:10:07.396 --> 00:10:09.166 A:middle
experience with the animation.

00:10:09.886 --> 00:10:11.996 A:middle
Again, imagine feeling the taps

00:10:11.996 --> 00:10:13.916 A:middle
in your hand when you pay.

00:10:17.286 --> 00:10:19.286 A:middle
[ Beeping Sound ]

00:10:19.596 --> 00:10:21.606 A:middle
Next, let's look at our second

00:10:21.606 --> 00:10:23.776 A:middle
guiding principle, harmony.

00:10:24.916 --> 00:10:27.516 A:middle
Harmony is about things should

00:10:27.516 --> 00:10:29.766 A:middle
feel the way they look, the way

00:10:29.766 --> 00:10:30.296 A:middle
they sound.

00:10:30.776 --> 00:10:36.226 A:middle
In the real world, audio haptics

00:10:36.326 --> 00:10:38.156 A:middle
and visuals are naturally in

00:10:38.156 --> 00:10:39.996 A:middle
harmony because of the clear

00:10:39.996 --> 00:10:41.206 A:middle
cause and effect relationship.

00:10:41.746 --> 00:10:45.396 A:middle
In the digital world though, we

00:10:45.396 --> 00:10:47.376 A:middle
have to do this work manually.

00:10:47.966 --> 00:10:50.806 A:middle
New experiences are created in

00:10:51.246 --> 00:10:53.066 A:middle
an additive process.

00:10:53.836 --> 00:10:55.736 A:middle
The input and output need to be

00:10:55.736 --> 00:10:58.076 A:middle
specifically designed by you,

00:10:58.326 --> 00:10:58.966 A:middle
the developer.

00:10:59.716 --> 00:11:01.046 A:middle
Let's start with creating a

00:10:59.716 --> 00:11:01.046 A:middle
Let's start with creating a

00:11:01.046 --> 00:11:03.426 A:middle
simple interface with the

00:11:03.426 --> 00:11:03.876 A:middle
visual.

00:11:04.436 --> 00:11:08.286 A:middle
We have a simple sphere dropping

00:11:08.286 --> 00:11:09.616 A:middle
and colliding with the bottom of

00:11:10.456 --> 00:11:11.686 A:middle
the screen.

00:11:11.876 --> 00:11:13.976 A:middle
Next, let's add audio feedback.

00:11:16.516 --> 00:11:19.806 A:middle
[ Beeping Sound ]

00:11:20.306 --> 00:11:22.946 A:middle
Now, we choose a sound that

00:11:22.946 --> 00:11:24.646 A:middle
corresponds to the physical

00:11:24.646 --> 00:11:26.186 A:middle
impact or the bounds of the

00:11:26.186 --> 00:11:26.576 A:middle
sphere.

00:11:27.726 --> 00:11:29.596 A:middle
It needs to be short and precise

00:11:29.596 --> 00:11:31.716 A:middle
and clear, but we also modulate

00:11:31.716 --> 00:11:32.966 A:middle
the amplitude based on the

00:11:32.966 --> 00:11:35.356 A:middle
velocity of the hit.

00:11:35.446 --> 00:11:36.846 A:middle
Now, let's do additional work

00:11:37.086 --> 00:11:38.636 A:middle
and introduce the third sense,

00:11:39.206 --> 00:11:43.966 A:middle
haptic feedback [beeping sound].

00:11:44.046 --> 00:11:47.216 A:middle
So imagine feeling that hit in

00:11:47.516 --> 00:11:48.096 A:middle
your hand.

00:11:48.966 --> 00:11:50.556 A:middle
Again, we're trying to design in

00:11:50.556 --> 00:11:53.516 A:middle
harmony the sphere hitting the

00:11:53.516 --> 00:11:55.256 A:middle
bottom of the screen, so we

00:11:55.256 --> 00:11:56.906 A:middle
choose a transient event with

00:11:56.906 --> 00:11:57.646 A:middle
high sharpness.

00:11:58.176 --> 00:12:00.166 A:middle
We also modulate the intensity

00:11:58.176 --> 00:12:00.166 A:middle
We also modulate the intensity

00:12:00.236 --> 00:12:03.556 A:middle
to match the velocity of the

00:12:03.556 --> 00:12:03.846 A:middle
bounce.

00:12:03.846 --> 00:12:06.266 A:middle
We're not done yet.

00:12:06.346 --> 00:12:08.036 A:middle
Because it's really important to

00:12:08.036 --> 00:12:09.536 A:middle
think about synchronization

00:12:09.996 --> 00:12:11.496 A:middle
between the three senses.

00:12:13.116 --> 00:12:15.086 A:middle
That's where the magic happens.

00:12:15.356 --> 00:12:16.786 A:middle
That's where the illusion of the

00:12:16.786 --> 00:12:18.256 A:middle
real ball colliding with the

00:12:18.256 --> 00:12:19.506 A:middle
wall takes shape.

00:12:20.386 --> 00:12:21.756 A:middle
So here's an example where we

00:12:21.756 --> 00:12:23.236 A:middle
broke the rules, and we

00:12:23.236 --> 00:12:24.536 A:middle
introduced latency between the

00:12:24.536 --> 00:12:25.516 A:middle
visual and the rest of the

00:12:25.516 --> 00:12:25.896 A:middle
feedback.

00:12:27.471 --> 00:12:29.471 A:middle
[ Beeping Sound ]

00:12:29.766 --> 00:12:31.326 A:middle
It's clearly broken, and the

00:12:31.326 --> 00:12:33.186 A:middle
illusion of a real bouncing ball

00:12:33.336 --> 00:12:34.466 A:middle
is completely not there.

00:12:35.136 --> 00:12:36.976 A:middle
So, harmony requires great care

00:12:36.976 --> 00:12:39.966 A:middle
and attention from you but when

00:12:39.966 --> 00:12:42.336 A:middle
done well can create very

00:12:42.336 --> 00:12:43.426 A:middle
delightful and magical

00:12:43.426 --> 00:12:44.026 A:middle
experiences.

00:12:47.006 --> 00:12:48.306 A:middle
Let's look at different harmony

00:12:48.306 --> 00:12:50.226 A:middle
in terms of the notion between

00:12:50.226 --> 00:12:52.296 A:middle
interaction, visuals, audio and

00:12:52.296 --> 00:12:54.246 A:middle
haptics, in terms of qualities

00:12:54.246 --> 00:12:55.526 A:middle
and overall behaviors.

00:12:56.346 --> 00:12:58.096 A:middle
We'll look at a simple green dot

00:12:58.096 --> 00:13:00.146 A:middle
on screen that will animate and

00:12:58.096 --> 00:13:00.146 A:middle
on screen that will animate and

00:13:00.176 --> 00:13:01.236 A:middle
think through what kind of

00:13:01.236 --> 00:13:02.516 A:middle
audio, what kind of haptics

00:13:02.516 --> 00:13:05.146 A:middle
makes sense with that green dot.

00:13:05.916 --> 00:13:08.866 A:middle
So if we add a snappy pop or a

00:13:08.866 --> 00:13:12.216 A:middle
different pulse, what kind of

00:13:12.356 --> 00:13:14.146 A:middle
audio, what kind of haptics work

00:13:14.146 --> 00:13:15.066 A:middle
with these visuals?

00:13:15.996 --> 00:13:17.606 A:middle
What if we have a large object

00:13:17.606 --> 00:13:18.206 A:middle
on screen?

00:13:18.896 --> 00:13:20.016 A:middle
Does it sound different?

00:13:20.016 --> 00:13:21.336 A:middle
Does it feel different than a

00:13:21.376 --> 00:13:23.086 A:middle
tiny little dot?

00:13:24.376 --> 00:13:26.436 A:middle
If we add different dynamic

00:13:26.436 --> 00:13:27.996 A:middle
behavior, a different energy

00:13:27.996 --> 00:13:32.156 A:middle
level, a pressing, pulsating dot

00:13:32.216 --> 00:13:33.786 A:middle
that really calls for attention

00:13:34.336 --> 00:13:35.326 A:middle
might want a different sound,

00:13:35.326 --> 00:13:35.986 A:middle
different haptics.

00:13:36.166 --> 00:13:37.626 A:middle
And lastly, something that feels

00:13:37.756 --> 00:13:40.306 A:middle
calm or like a heartbeat warrant

00:13:40.306 --> 00:13:41.316 A:middle
different type of feedback.

00:13:41.906 --> 00:13:43.666 A:middle
So, think about the pace, the

00:13:43.666 --> 00:13:45.686 A:middle
energy level, and the different

00:13:45.686 --> 00:13:47.796 A:middle
quality that you're trying to

00:13:47.796 --> 00:13:48.676 A:middle
convey in your app.

00:13:49.266 --> 00:13:51.456 A:middle
Design feedback that tell the

00:13:51.456 --> 00:13:53.386 A:middle
consistent and unified story.

00:13:55.136 --> 00:13:58.686 A:middle
&gt;&gt; Now I'll illustrate how the

00:13:58.686 --> 00:14:01.856 A:middle
harmony principle helped us with

00:13:58.686 --> 00:14:01.856 A:middle
harmony principle helped us with

00:14:01.856 --> 00:14:03.926 A:middle
designing sound and haptics for

00:14:03.926 --> 00:14:04.846 A:middle
the Apple Watch crowd.

00:14:05.656 --> 00:14:07.936 A:middle
We were all used to our phones

00:14:08.246 --> 00:14:09.756 A:middle
and their old school vibes

00:14:09.756 --> 00:14:10.526 A:middle
coming from them.

00:14:10.806 --> 00:14:13.986 A:middle
When the Apple Watch came out as

00:14:13.986 --> 00:14:15.226 A:middle
the first device with a taptic

00:14:15.226 --> 00:14:17.226 A:middle
engine, it was the first device

00:14:17.276 --> 00:14:19.096 A:middle
that could precisely synchronize

00:14:19.096 --> 00:14:20.536 A:middle
sound and haptics.

00:14:22.036 --> 00:14:24.266 A:middle
Now for Series 4, haptics and a

00:14:24.266 --> 00:14:25.876 A:middle
very subtle sound were added to

00:14:25.876 --> 00:14:30.356 A:middle
the rotation of the crown.

00:14:30.526 --> 00:14:32.246 A:middle
Remember the sharp and precise

00:14:32.246 --> 00:14:33.406 A:middle
haptic that Camille described

00:14:33.406 --> 00:14:33.796 A:middle
earlier?

00:14:34.576 --> 00:14:36.106 A:middle
That was the one that we used

00:14:36.106 --> 00:14:36.696 A:middle
for the crown.

00:14:37.896 --> 00:14:40.766 A:middle
But it was scaled down to match

00:14:40.806 --> 00:14:43.296 A:middle
the small size of the crown, and

00:14:43.296 --> 00:14:44.516 A:middle
so the haptics are felt in the

00:14:44.516 --> 00:14:46.886 A:middle
finger touching the crown rather

00:14:46.886 --> 00:14:50.186 A:middle
than on the wrist.

00:14:50.376 --> 00:14:52.136 A:middle
For sound, we looked at the

00:14:52.136 --> 00:14:53.516 A:middle
world of traditional watch

00:14:53.516 --> 00:14:55.046 A:middle
making for inspiration.

00:14:56.046 --> 00:14:58.516 A:middle
We listened to and recorded all

00:14:58.516 --> 00:15:00.056 A:middle
kinds of different watches, some

00:14:58.516 --> 00:15:00.056 A:middle
kinds of different watches, some

00:15:00.216 --> 00:15:01.456 A:middle
of which sounded quite

00:15:01.456 --> 00:15:02.456 A:middle
remarkable, like this one

00:15:02.956 --> 00:15:05.736 A:middle
[clicking sound].

00:15:06.236 --> 00:15:08.056 A:middle
And then there are other

00:15:08.966 --> 00:15:11.116 A:middle
physical mechanical objects in

00:15:11.116 --> 00:15:13.436 A:middle
the real world with a similar

00:15:13.436 --> 00:15:15.946 A:middle
sound like bicycle hubs

00:15:15.946 --> 00:15:16.876 A:middle
[clicking sound].

00:15:16.876 --> 00:15:19.106 A:middle
We wanted to find a sound that

00:15:19.106 --> 00:15:20.696 A:middle
would feel natural coming from a

00:15:20.696 --> 00:15:21.766 A:middle
device like this.

00:15:23.146 --> 00:15:24.026 A:middle
We took these sounds as

00:15:24.026 --> 00:15:26.026 A:middle
inspiration before we started

00:15:26.026 --> 00:15:26.766 A:middle
crafting our own.

00:15:27.326 --> 00:15:29.646 A:middle
And then this is the result.

00:15:29.646 --> 00:15:31.646 A:middle
On your wrist, it sounds very

00:15:31.646 --> 00:15:32.846 A:middle
quiet, just like you would

00:15:33.226 --> 00:15:34.976 A:middle
expect coming from a watch.

00:15:35.516 --> 00:15:41.656 A:middle
[ Clicking Sound ]

00:15:42.156 --> 00:15:43.976 A:middle
The perfect coordination between

00:15:43.976 --> 00:15:47.056 A:middle
sound and haptics creates the

00:15:47.186 --> 00:15:49.286 A:middle
illusion of a mechanical crown,

00:15:49.886 --> 00:15:52.676 A:middle
and then to match this

00:15:52.676 --> 00:15:54.216 A:middle
mechanical sensation, our motion

00:15:54.216 --> 00:15:57.506 A:middle
team changed the animation so it

00:15:57.556 --> 00:15:59.526 A:middle
snaps to the sound and the

00:15:59.526 --> 00:16:00.856 A:middle
haptics when using the crown.

00:15:59.526 --> 00:16:00.856 A:middle
haptics when using the crown.

00:16:01.766 --> 00:16:05.316 A:middle
Let's look at that [clicking

00:16:05.316 --> 00:16:05.466 A:middle
sound].

00:16:05.466 --> 00:16:06.446 A:middle
And I'll play it again.

00:16:06.446 --> 00:16:08.746 A:middle
Look at the crown visualizing

00:16:08.996 --> 00:16:09.956 A:middle
the haptics [clicking sound].

00:16:12.256 --> 00:16:13.996 A:middle
The result is a precise

00:16:14.296 --> 00:16:16.206 A:middle
mechanical feel, which is in

00:16:16.206 --> 00:16:17.696 A:middle
perfect harmony with what you

00:16:17.696 --> 00:16:19.826 A:middle
see and what you hear.

00:16:23.896 --> 00:16:26.466 A:middle
&gt;&gt; Next, let's look at our third

00:16:26.586 --> 00:16:28.246 A:middle
guiding principle, utility.

00:16:29.146 --> 00:16:31.276 A:middle
Utility is about adding audio

00:16:31.276 --> 00:16:32.926 A:middle
and haptic feedback only when

00:16:32.926 --> 00:16:35.186 A:middle
you can provide clear value and

00:16:35.266 --> 00:16:37.866 A:middle
benefit to your app experience.

00:16:37.906 --> 00:16:38.936 A:middle
Use moderation.

00:16:39.686 --> 00:16:41.346 A:middle
Don't add sound and haptics just

00:16:41.346 --> 00:16:43.676 A:middle
because you can.

00:16:43.866 --> 00:16:45.576 A:middle
Let's look at a simple AR kit

00:16:45.666 --> 00:16:47.436 A:middle
app that we made to illustrate

00:16:48.066 --> 00:16:49.056 A:middle
this point.

00:16:49.236 --> 00:16:51.176 A:middle
In this app, we place a virtual

00:16:51.176 --> 00:16:53.446 A:middle
timer in the environment, and

00:16:53.446 --> 00:16:55.156 A:middle
then the interaction is

00:16:55.156 --> 00:16:56.436 A:middle
dependent on the distance of

00:16:56.436 --> 00:16:57.306 A:middle
that virtual timer.

00:16:57.816 --> 00:16:59.416 A:middle
Let's look at the video first.

00:17:02.516 --> 00:17:05.500 A:middle
[ Clicking Sound ]

00:17:08.516 --> 00:17:13.195 A:middle
[ Clicking Sound ]

00:17:13.695 --> 00:17:16.046 A:middle
So, in this app, we purposely

00:17:16.046 --> 00:17:17.425 A:middle
designed audio and haptic

00:17:17.465 --> 00:17:19.185 A:middle
feedback to complement the AR

00:17:19.185 --> 00:17:20.736 A:middle
interaction and the most

00:17:20.736 --> 00:17:23.266 A:middle
significant part of the user

00:17:23.266 --> 00:17:24.665 A:middle
experience, meaning moving

00:17:24.665 --> 00:17:26.626 A:middle
closer to the timer or moving

00:17:26.626 --> 00:17:29.126 A:middle
away from the timer modulate the

00:17:29.126 --> 00:17:30.336 A:middle
audio haptic experience.

00:17:30.746 --> 00:17:33.126 A:middle
The three senses are coherent

00:17:33.126 --> 00:17:33.776 A:middle
and unified.

00:17:34.536 --> 00:17:36.106 A:middle
We refrain from adding other

00:17:36.246 --> 00:17:38.386 A:middle
sound effects or haptic feedback

00:17:38.816 --> 00:17:39.586 A:middle
to interacting with the

00:17:39.586 --> 00:17:40.976 A:middle
different elements or other

00:17:40.976 --> 00:17:44.126 A:middle
minor interaction in the app.

00:17:44.416 --> 00:17:46.356 A:middle
&gt;&gt; It's often a good idea not to

00:17:46.356 --> 00:17:47.696 A:middle
add sound and haptics.

00:17:48.416 --> 00:17:50.096 A:middle
So, start by identifying

00:17:50.096 --> 00:17:51.416 A:middle
possible locations in your app

00:17:52.356 --> 00:17:53.616 A:middle
for audio haptic feedback, and

00:17:53.616 --> 00:17:56.136 A:middle
then focus only on the elements

00:17:56.666 --> 00:17:57.616 A:middle
where it can enhance the

00:17:57.616 --> 00:17:58.856 A:middle
experience or communicate

00:17:58.856 --> 00:17:59.696 A:middle
something important.

00:18:00.946 --> 00:18:02.586 A:middle
And then, are you tempted to add

00:18:02.586 --> 00:18:02.906 A:middle
more?

00:18:03.276 --> 00:18:04.196 A:middle
But maybe don't.

00:18:04.196 --> 00:18:06.016 A:middle
It will overwhelm people, and it

00:18:06.016 --> 00:18:08.966 A:middle
will diminish the value of

00:18:08.966 --> 00:18:09.856 A:middle
what's really important.

00:18:10.466 --> 00:18:15.846 A:middle
So, to recap, here are the

00:18:15.846 --> 00:18:17.096 A:middle
guiding principles one more

00:18:17.096 --> 00:18:17.406 A:middle
time.

00:18:18.276 --> 00:18:20.686 A:middle
We spoke about Causality, how it

00:18:20.686 --> 00:18:21.866 A:middle
can help to think about what

00:18:21.866 --> 00:18:23.876 A:middle
makes the sound and what causes

00:18:23.906 --> 00:18:24.466 A:middle
the haptics.

00:18:25.646 --> 00:18:27.246 A:middle
About Harmony, how sound,

00:18:27.646 --> 00:18:30.026 A:middle
haptics, and visuals work

00:18:30.026 --> 00:18:32.006 A:middle
together in creating a great

00:18:32.006 --> 00:18:32.566 A:middle
experience.

00:18:33.656 --> 00:18:34.446 A:middle
And Utility.

00:18:35.546 --> 00:18:39.156 A:middle
How looking at the experience

00:18:39.156 --> 00:18:40.906 A:middle
from the point of view of the

00:18:40.906 --> 00:18:42.906 A:middle
human using your app.

00:18:45.236 --> 00:18:46.876 A:middle
&gt;&gt; Next, let's look at the

00:18:46.876 --> 00:18:49.676 A:middle
techniques and practical tips

00:18:49.726 --> 00:18:51.586 A:middle
that we can use with these three

00:18:51.586 --> 00:18:53.756 A:middle
guiding principles to create

00:18:53.756 --> 00:18:56.586 A:middle
great audio haptic experience.

00:18:56.586 --> 00:18:58.916 A:middle
First, a small recap about the

00:18:58.916 --> 00:19:00.416 A:middle
primitives available in Core

00:18:58.916 --> 00:19:00.416 A:middle
primitives available in Core

00:19:00.416 --> 00:19:00.826 A:middle
Haptics.

00:19:01.516 --> 00:19:03.906 A:middle
We have two building blocks that

00:19:03.906 --> 00:19:04.596 A:middle
you can work with.

00:19:05.266 --> 00:19:06.436 A:middle
The first one is called

00:19:06.436 --> 00:19:08.416 A:middle
transient, and it is the sharp

00:19:08.926 --> 00:19:12.486 A:middle
compact, haptic experience that

00:19:12.486 --> 00:19:14.096 A:middle
you can feel like a tap or a

00:19:14.096 --> 00:19:14.486 A:middle
strike.

00:19:14.976 --> 00:19:16.626 A:middle
The second one is a continuous

00:19:17.196 --> 00:19:18.676 A:middle
haptic experience that extends

00:19:18.676 --> 00:19:19.256 A:middle
over time.

00:19:19.336 --> 00:19:21.156 A:middle
You can specify the duration how

00:19:21.156 --> 00:19:22.646 A:middle
long it should last.

00:19:23.996 --> 00:19:26.216 A:middle
For transient, there are two

00:19:26.216 --> 00:19:27.986 A:middle
design dimensions that is

00:19:27.986 --> 00:19:29.196 A:middle
available and under your

00:19:29.196 --> 00:19:29.646 A:middle
control.

00:19:30.106 --> 00:19:32.436 A:middle
We have haptic intensity, and we

00:19:32.436 --> 00:19:34.176 A:middle
have haptic sharpness to create

00:19:34.176 --> 00:19:36.626 A:middle
something more round or soft at

00:19:36.626 --> 00:19:38.456 A:middle
the lower value and something

00:19:38.456 --> 00:19:40.596 A:middle
more precise, mechanical, and

00:19:40.596 --> 00:19:41.946 A:middle
crisp at the upper bound.

00:19:42.826 --> 00:19:45.136 A:middle
Intensity changes the amplitude

00:19:45.436 --> 00:19:46.776 A:middle
of the experience as expected.

00:19:47.236 --> 00:19:50.756 A:middle
For continuous, we have the two

00:19:50.936 --> 00:19:52.546 A:middle
similar design dimensions.

00:19:53.196 --> 00:19:54.996 A:middle
We have sharpness and intensity,

00:19:56.086 --> 00:19:58.326 A:middle
and we're able to create more

00:19:58.426 --> 00:20:00.026 A:middle
organic or rumble-like

00:19:58.426 --> 00:20:00.026 A:middle
organic or rumble-like

00:20:00.026 --> 00:20:01.276 A:middle
experience that extends over

00:20:01.276 --> 00:20:02.546 A:middle
time or something that is more

00:20:02.546 --> 00:20:04.346 A:middle
precise and more mechanical at

00:20:04.346 --> 00:20:05.656 A:middle
the upper values of sharpness.

00:20:06.306 --> 00:20:08.806 A:middle
So there are many more details

00:20:08.806 --> 00:20:09.996 A:middle
and capabilities in the Core

00:20:09.996 --> 00:20:10.616 A:middle
Haptics API.

00:20:11.256 --> 00:20:12.796 A:middle
Be sure to check out the online

00:20:12.796 --> 00:20:13.506 A:middle
documentation.

00:20:14.086 --> 00:20:16.796 A:middle
&gt;&gt; Now, when designing sounds,

00:20:17.056 --> 00:20:19.326 A:middle
keep in mind what will work best

00:20:19.466 --> 00:20:20.306 A:middle
with these haptics.

00:20:21.476 --> 00:20:23.686 A:middle
For a sharp transient, a chime

00:20:23.686 --> 00:20:24.696 A:middle
with a sharp attack will

00:20:24.696 --> 00:20:26.906 A:middle
probably work really well

00:20:26.906 --> 00:20:28.316 A:middle
[chiming sound].

00:20:28.316 --> 00:20:29.886 A:middle
But if we have a sound that's

00:20:29.886 --> 00:20:32.516 A:middle
much smoother, using those same

00:20:32.516 --> 00:20:34.346 A:middle
haptics, it's probably not such

00:20:34.346 --> 00:20:37.786 A:middle
a good idea [music].

00:20:38.516 --> 00:20:40.866 A:middle
So, for something like this, a

00:20:40.866 --> 00:20:42.416 A:middle
continuous haptic ramping up and

00:20:42.416 --> 00:20:44.266 A:middle
down probably works better.

00:20:46.206 --> 00:20:48.206 A:middle
[ Music ]

00:20:48.396 --> 00:20:50.446 A:middle
But these are not hard rules.

00:20:50.446 --> 00:20:52.046 A:middle
There is a lot of room to

00:20:52.046 --> 00:20:55.266 A:middle
experiment, and sometimes you

00:20:55.266 --> 00:20:56.816 A:middle
may find out that the opposite

00:20:56.816 --> 00:20:57.956 A:middle
of what you thought would work

00:20:58.506 --> 00:21:00.456 A:middle
is actually better, and this was

00:20:58.506 --> 00:21:00.456 A:middle
is actually better, and this was

00:21:00.456 --> 00:21:03.216 A:middle
the case for the Apple Watch

00:21:03.216 --> 00:21:04.696 A:middle
alarm, that sounds like this.

00:21:06.031 --> 00:21:08.031 A:middle
[ Chiming Sound ]

00:21:08.046 --> 00:21:08.846 A:middle
For a sound like this, you may

00:21:08.846 --> 00:21:10.996 A:middle
want to add a haptic like this

00:21:11.486 --> 00:21:12.606 A:middle
because it pairs together

00:21:12.846 --> 00:21:13.356 A:middle
perfectly

00:21:14.516 --> 00:21:17.506 A:middle
[chiming sound].

00:21:18.006 --> 00:21:18.726 A:middle
But can we make it better?

00:21:19.876 --> 00:21:21.106 A:middle
Can we keep experimenting?

00:21:21.106 --> 00:21:23.636 A:middle
Maybe flip it around and change

00:21:24.736 --> 00:21:25.936 A:middle
the timing?

00:21:26.441 --> 00:21:28.441 A:middle
[ Chiming Sound ]

00:21:28.906 --> 00:21:30.686 A:middle
This creates anticipation by

00:21:31.056 --> 00:21:32.916 A:middle
ramping up the haptics and then

00:21:32.916 --> 00:21:33.956 A:middle
quickly putting it off and

00:21:33.956 --> 00:21:34.736 A:middle
playing the sound.

00:21:35.406 --> 00:21:36.736 A:middle
There was a clear action

00:21:36.976 --> 00:21:38.656 A:middle
reaction, and the sound plays as

00:21:38.656 --> 00:21:40.246 A:middle
an answer to the haptic.

00:21:41.056 --> 00:21:42.556 A:middle
This work really well for the

00:21:42.556 --> 00:21:43.336 A:middle
Apple Watch alarm.

00:21:46.656 --> 00:21:49.186 A:middle
Next, it's pretty common to have

00:21:49.186 --> 00:21:51.296 A:middle
a number of events back to back

00:21:51.296 --> 00:21:52.436 A:middle
to convey a different type of

00:21:52.436 --> 00:21:52.886 A:middle
experience.

00:21:53.786 --> 00:21:55.566 A:middle
In this case, we have four

00:21:56.126 --> 00:21:58.446 A:middle
transient events, and we notice

00:21:58.446 --> 00:21:59.696 A:middle
that when we present this to

00:21:59.696 --> 00:22:01.136 A:middle
different people, they don't

00:21:59.696 --> 00:22:01.136 A:middle
different people, they don't

00:22:01.136 --> 00:22:02.886 A:middle
necessarily feel the first one.

00:22:03.166 --> 00:22:05.476 A:middle
We have a first ghost haptics.

00:22:06.016 --> 00:22:07.886 A:middle
[ Drumming Sound ]

00:22:07.886 --> 00:22:09.496 A:middle
So the sequence of four taps is

00:22:09.496 --> 00:22:11.536 A:middle
actually reported as a triple

00:22:11.536 --> 00:22:12.136 A:middle
tap only.

00:22:13.246 --> 00:22:15.886 A:middle
This could be a problem or an

00:22:15.886 --> 00:22:16.546 A:middle
opportunity.

00:22:17.956 --> 00:22:19.486 A:middle
We could use this effect of

00:22:19.486 --> 00:22:20.786 A:middle
ghost or not perceiving the

00:22:20.786 --> 00:22:22.286 A:middle
first one completely as a

00:22:22.286 --> 00:22:23.066 A:middle
priming effect.

00:22:23.066 --> 00:22:27.066 A:middle
Let's look at the example of a

00:22:27.066 --> 00:22:28.606 A:middle
third-party alert on watchOS.

00:22:29.376 --> 00:22:30.636 A:middle
This is the sound and the

00:22:30.636 --> 00:22:32.476 A:middle
haptics of that third party

00:22:32.476 --> 00:22:32.976 A:middle
notifications.

00:22:34.016 --> 00:22:35.656 A:middle
[ Chiming Sound ]

00:22:35.656 --> 00:22:37.466 A:middle
So this is a really important

00:22:37.466 --> 00:22:38.836 A:middle
notification that we want to

00:22:38.836 --> 00:22:39.776 A:middle
make sure that the user

00:22:39.816 --> 00:22:41.756 A:middle
perceived and acknowledged

00:22:41.756 --> 00:22:42.166 A:middle
clearly.

00:22:42.786 --> 00:22:45.906 A:middle
So in this case, we use our

00:22:45.906 --> 00:22:48.496 A:middle
ghost effect or a primer in this

00:22:48.526 --> 00:22:51.576 A:middle
case to wake up the skin and

00:22:51.576 --> 00:22:53.246 A:middle
make sure that it's completely

00:22:53.546 --> 00:22:55.026 A:middle
ready to feel what's to come.

00:22:56.156 --> 00:22:57.966 A:middle
Let's listen and feel it.

00:22:59.516 --> 00:23:02.866 A:middle
[ Drum and Chiming Sound ]

00:22:59.516 --> 00:23:02.866 A:middle
[ Drum and Chiming Sound ]

00:23:03.366 --> 00:23:05.256 A:middle
So, in this case, we have clear

00:23:05.256 --> 00:23:07.706 A:middle
presentation and recognition of

00:23:07.706 --> 00:23:08.756 A:middle
our main notification

00:23:08.756 --> 00:23:09.236 A:middle
experience.

00:23:09.766 --> 00:23:12.336 A:middle
Next, we can also create

00:23:12.336 --> 00:23:14.776 A:middle
contrast between very similar

00:23:14.776 --> 00:23:15.436 A:middle
experiences.

00:23:16.016 --> 00:23:19.256 A:middle
Here is the sound for the left

00:23:19.256 --> 00:23:20.856 A:middle
navigation cue on watchOS.

00:23:21.776 --> 00:23:24.546 A:middle
It sounds like this

00:23:25.046 --> 00:23:27.576 A:middle
[beeping sound].

00:23:28.076 --> 00:23:30.006 A:middle
With our harmony guiding

00:23:30.006 --> 00:23:32.156 A:middle
principles, we end up with

00:23:32.436 --> 00:23:34.526 A:middle
really nice haptics that pairs

00:23:34.526 --> 00:23:35.746 A:middle
very well with that sound.

00:23:36.346 --> 00:23:37.626 A:middle
So we have a series of double

00:23:37.626 --> 00:23:39.716 A:middle
strikes that sound and feel like

00:23:39.716 --> 00:23:39.826 A:middle
this.

00:23:41.516 --> 00:23:44.916 A:middle
[ Beeping Sound ]

00:23:45.416 --> 00:23:47.406 A:middle
Now if we look at the right cue,

00:23:48.036 --> 00:23:49.856 A:middle
we have a similar sound but

00:23:49.986 --> 00:23:50.736 A:middle
slightly different.

00:23:52.486 --> 00:23:54.486 A:middle
[ Beeping Sound ]

00:23:54.956 --> 00:23:56.276 A:middle
So we can notice the little

00:23:56.596 --> 00:23:58.256 A:middle
difference between the left and

00:23:58.256 --> 00:24:00.526 A:middle
the right on the audio, but if

00:23:58.256 --> 00:24:00.526 A:middle
the right on the audio, but if

00:24:00.526 --> 00:24:02.616 A:middle
we continue to follow our

00:24:02.616 --> 00:24:04.946 A:middle
harmony principle, with the

00:24:04.946 --> 00:24:06.136 A:middle
haptics we end up with an

00:24:06.136 --> 00:24:07.926 A:middle
identical pattern between the

00:24:07.926 --> 00:24:09.246 A:middle
left and the right experience.

00:24:10.606 --> 00:24:13.476 A:middle
In this case, we want to add

00:24:13.476 --> 00:24:14.106 A:middle
haptics.

00:24:14.526 --> 00:24:16.126 A:middle
We double up the haptics from

00:24:16.126 --> 00:24:17.986 A:middle
the double strikes, and then we

00:24:17.986 --> 00:24:19.876 A:middle
have true contrast between left

00:24:19.876 --> 00:24:20.236 A:middle
and right.

00:24:21.366 --> 00:24:25.646 A:middle
Let's listen and feel what, this

00:24:26.016 --> 00:24:28.586 A:middle
experience [beeping sounds].

00:24:30.096 --> 00:24:31.906 A:middle
Again, we have contrast between

00:24:31.906 --> 00:24:33.636 A:middle
the left and the right for very

00:24:33.636 --> 00:24:34.866 A:middle
similar audio experience.

00:24:38.106 --> 00:24:39.456 A:middle
&gt;&gt; So, by now you have quite a

00:24:39.526 --> 00:24:41.106 A:middle
few tools to create your own

00:24:41.216 --> 00:24:42.006 A:middle
experiences.

00:24:42.736 --> 00:24:43.786 A:middle
We would like to show you one

00:24:43.786 --> 00:24:46.136 A:middle
more example illustrating the

00:24:46.136 --> 00:24:46.826 A:middle
points we made.

00:24:47.056 --> 00:24:49.056 A:middle
This is a full screen effect in

00:24:49.056 --> 00:24:49.706 A:middle
messages.

00:24:50.476 --> 00:24:54.236 A:middle
[ Popping and Crackling Sound ]

00:24:54.736 --> 00:24:56.026 A:middle
The sound and haptics are

00:24:56.116 --> 00:24:57.406 A:middle
perfectly synchronized to the

00:24:57.406 --> 00:24:59.236 A:middle
animation, and it's a delightful

00:24:59.236 --> 00:25:00.706 A:middle
moment for a special occasion.

00:24:59.236 --> 00:25:00.706 A:middle
moment for a special occasion.

00:25:01.076 --> 00:25:02.706 A:middle
Let's look at it one more time.

00:25:03.676 --> 00:25:08.206 A:middle
[ Popping and Crackling Sound ]

00:25:08.706 --> 00:25:10.356 A:middle
Now, if you haven't yet, I

00:25:10.356 --> 00:25:12.296 A:middle
encourage you to try this out on

00:25:12.296 --> 00:25:14.166 A:middle
your own iPhone to experience

00:25:14.166 --> 00:25:15.116 A:middle
the haptics yourself.

00:25:15.706 --> 00:25:19.146 A:middle
And now, a few more thoughts to

00:25:19.146 --> 00:25:20.996 A:middle
consider in addition to the

00:25:20.996 --> 00:25:22.216 A:middle
guiding principles that we

00:25:22.216 --> 00:25:22.596 A:middle
shared.

00:25:24.956 --> 00:25:26.566 A:middle
The best results come when

00:25:26.566 --> 00:25:29.036 A:middle
sound, haptics, and visuals are

00:25:29.036 --> 00:25:30.526 A:middle
designed hand in hand.

00:25:31.386 --> 00:25:32.216 A:middle
Are you an animator?

00:25:32.976 --> 00:25:34.396 A:middle
Collaborate with the sound or

00:25:34.396 --> 00:25:35.706 A:middle
interaction designer and vice

00:25:35.706 --> 00:25:36.066 A:middle
versa.

00:25:36.836 --> 00:25:38.176 A:middle
It's the best way to come to a

00:25:38.176 --> 00:25:39.306 A:middle
unified experience.

00:25:41.016 --> 00:25:43.916 A:middle
Imagine using your own app for

00:25:43.916 --> 00:25:45.246 A:middle
the very first time.

00:25:46.746 --> 00:25:48.066 A:middle
What would you like it to sound

00:25:48.106 --> 00:25:49.446 A:middle
like or feel like?

00:25:50.416 --> 00:25:51.596 A:middle
And then imagine using it a

00:25:51.696 --> 00:25:52.596 A:middle
hundred times more.

00:25:53.926 --> 00:25:56.266 A:middle
Does it still help you to hear

00:25:56.266 --> 00:25:58.386 A:middle
and feel these things or are you

00:25:58.386 --> 00:25:58.956 A:middle
overwhelmed?

00:26:00.276 --> 00:26:02.876 A:middle
Experience it and take away all

00:26:02.876 --> 00:26:03.976 A:middle
the things that don't feel

00:26:03.976 --> 00:26:05.616 A:middle
compelling or that are not

00:26:05.616 --> 00:26:05.956 A:middle
useful.

00:26:06.526 --> 00:26:08.716 A:middle
And don't be afraid to

00:26:08.716 --> 00:26:09.316 A:middle
experiment.

00:26:09.816 --> 00:26:10.586 A:middle
Try things out.

00:26:11.026 --> 00:26:11.596 A:middle
Prototype.

00:26:12.656 --> 00:26:13.686 A:middle
We've seen that you may just

00:26:13.686 --> 00:26:15.726 A:middle
come across something amazing by

00:26:15.726 --> 00:26:17.326 A:middle
trying something new.

00:26:18.296 --> 00:26:20.196 A:middle
We're looking forward to seeing,

00:26:20.596 --> 00:26:22.556 A:middle
hearing, and feeling what you

00:26:22.556 --> 00:26:24.056 A:middle
will come up with in your own

00:26:24.056 --> 00:26:24.286 A:middle
apps.

00:26:25.626 --> 00:26:26.506 A:middle
See this URL for more

00:26:26.506 --> 00:26:26.996 A:middle
information.

00:26:27.286 --> 00:26:27.936 A:middle
Thank you very much.

00:26:28.516 --> 00:26:36.926 A:middle
[ Applause ]

00:26:37.426 --> 00:26:37.656 A:middle
&gt;&gt; All right.

00:26:38.276 --> 00:26:39.346 A:middle
Thank you Hugo and Camille.

00:26:39.346 --> 00:26:41.386 A:middle
So, now that we have a better

00:26:41.386 --> 00:26:43.176 A:middle
idea of how to design our haptic

00:26:43.176 --> 00:26:45.496 A:middle
experiences for our apps, now

00:26:45.496 --> 00:26:46.646 A:middle
let's understand how we're going

00:26:46.646 --> 00:26:48.196 A:middle
to take these principles and put

00:26:48.196 --> 00:26:49.726 A:middle
them into practice in code.

00:26:50.196 --> 00:26:52.086 A:middle
And to do that, Michael and Doug

00:26:52.086 --> 00:26:53.676 A:middle
are going to walk through how we

00:26:53.676 --> 00:26:54.936 A:middle
can take advantage of the new

00:26:54.986 --> 00:26:56.336 A:middle
Core Haptic APIs.

00:26:56.336 --> 00:26:58.226 A:middle
And to start that off, I'd like

00:26:58.226 --> 00:26:59.236 A:middle
to introduce Michael to the

00:26:59.236 --> 00:26:59.626 A:middle
stage.

00:27:02.516 --> 00:27:06.586 A:middle
[ Applause ]

00:27:07.086 --> 00:27:07.696 A:middle
&gt;&gt; Good evening.

00:27:08.186 --> 00:27:09.306 A:middle
I'm Michael Diu from the

00:27:09.306 --> 00:27:10.866 A:middle
interactive haptics team, and

00:27:11.076 --> 00:27:12.446 A:middle
I'm looking forward to sharing

00:27:12.446 --> 00:27:14.226 A:middle
the many advances in haptics in

00:27:14.336 --> 00:27:15.816 A:middle
iOS 13 with you.

00:27:16.636 --> 00:27:19.966 A:middle
Let's take a look at our agenda.

00:27:20.046 --> 00:27:21.756 A:middle
First, we'll find out where we

00:27:21.756 --> 00:27:23.786 A:middle
can use Core Haptics, how it

00:27:23.846 --> 00:27:25.616 A:middle
fits in with other audio and

00:27:25.616 --> 00:27:27.566 A:middle
haptic APIs.

00:27:29.036 --> 00:27:30.786 A:middle
We'll talk about the two groups

00:27:30.786 --> 00:27:33.266 A:middle
of classes in the API and the

00:27:33.266 --> 00:27:35.806 A:middle
basic dimensions and descriptors

00:27:36.036 --> 00:27:38.156 A:middle
that we will use to describe our

00:27:38.156 --> 00:27:39.836 A:middle
haptics and audio content.

00:27:40.446 --> 00:27:42.636 A:middle
We're going to walk through the

00:27:42.636 --> 00:27:44.436 A:middle
basic recipe to start playing

00:27:44.436 --> 00:27:47.536 A:middle
out that content, and then we're

00:27:47.536 --> 00:27:49.746 A:middle
going to move onto introducing

00:27:49.836 --> 00:27:51.056 A:middle
dynamic parameters.

00:27:51.256 --> 00:27:53.456 A:middle
And dynamic parameters are a way

00:27:53.456 --> 00:27:55.136 A:middle
that you can customize your

00:27:55.136 --> 00:27:56.866 A:middle
haptic patterns at playback

00:27:56.966 --> 00:27:59.736 A:middle
time, in response to your user

00:27:59.986 --> 00:28:02.736 A:middle
or your app's behavior.

00:27:59.986 --> 00:28:02.736 A:middle
or your app's behavior.

00:28:02.796 --> 00:28:04.676 A:middle
And, we're going to explore a

00:28:04.676 --> 00:28:07.786 A:middle
new way to express, store, and

00:28:07.786 --> 00:28:09.426 A:middle
share your audio haptics

00:28:09.426 --> 00:28:11.146 A:middle
contents, a new file format

00:28:11.346 --> 00:28:12.866 A:middle
we're calling the Apple Haptic

00:28:13.066 --> 00:28:15.466 A:middle
Audio Pattern or AHAP.

00:28:16.156 --> 00:28:22.466 A:middle
So let's get to it.

00:28:22.726 --> 00:28:24.676 A:middle
First, what is Core Haptics?

00:28:26.036 --> 00:28:27.276 A:middle
We can think of it as an

00:28:27.276 --> 00:28:29.786 A:middle
event-based audio and haptic

00:28:29.976 --> 00:28:33.436 A:middle
rendering API or synthesizer for

00:28:33.436 --> 00:28:33.786 A:middle
iPhone.

00:28:34.356 --> 00:28:37.476 A:middle
We can continue to use our other

00:28:37.476 --> 00:28:39.446 A:middle
audio and haptics and feedback

00:28:39.446 --> 00:28:42.396 A:middle
APIs like AV Audio Player and

00:28:42.396 --> 00:28:44.506 A:middle
UIKit's UIFeedback Generator in

00:28:44.506 --> 00:28:46.266 A:middle
parallel with Core Haptics.

00:28:47.616 --> 00:28:49.326 A:middle
You might be wondering, which

00:28:49.676 --> 00:28:53.676 A:middle
iPhones can I use this on.

00:28:53.826 --> 00:28:56.206 A:middle
With just one API and one file

00:28:56.206 --> 00:28:57.806 A:middle
format, we will be able to

00:28:57.896 --> 00:29:00.896 A:middle
access hundreds of millions of

00:28:57.896 --> 00:29:00.896 A:middle
access hundreds of millions of

00:29:00.896 --> 00:29:02.496 A:middle
taptic engine equipped iPhones

00:29:02.726 --> 00:29:04.666 A:middle
starting from iPhone 8 onward.

00:29:05.316 --> 00:29:08.066 A:middle
And we've taken care that your

00:29:08.136 --> 00:29:09.186 A:middle
haptic patterns will have the

00:29:09.186 --> 00:29:11.316 A:middle
same feel across all of these

00:29:11.316 --> 00:29:13.316 A:middle
products, so much so that you're

00:29:13.316 --> 00:29:15.166 A:middle
going to be able to prototype

00:29:15.166 --> 00:29:17.566 A:middle
and release just using one

00:29:17.566 --> 00:29:17.946 A:middle
product.

00:29:18.526 --> 00:29:23.536 A:middle
And these iPhones aren't

00:29:23.536 --> 00:29:25.576 A:middle
equipped with just any old

00:29:25.656 --> 00:29:26.856 A:middle
commodity actuator.

00:29:27.176 --> 00:29:28.836 A:middle
They all have the Apple-designed

00:29:29.006 --> 00:29:30.696 A:middle
taptic engine, which offers you

00:29:30.696 --> 00:29:32.666 A:middle
that unique combination of

00:29:33.666 --> 00:29:35.976 A:middle
power, a wide expressive range,

00:29:36.276 --> 00:29:38.656 A:middle
and an unmatched precision and

00:29:38.656 --> 00:29:40.486 A:middle
control and subtlety.

00:29:40.966 --> 00:29:44.096 A:middle
Next, I'd like to talk about

00:29:44.096 --> 00:29:45.466 A:middle
those of you who have already

00:29:45.466 --> 00:29:47.516 A:middle
started adopting haptics on

00:29:47.596 --> 00:29:49.806 A:middle
iPhone with UIKit's Feedback

00:29:49.806 --> 00:29:51.866 A:middle
Generated APIs.

00:29:53.436 --> 00:29:56.026 A:middle
Now, Core Haptics is not a

00:29:56.026 --> 00:29:58.216 A:middle
replacement for this API.

00:29:59.096 --> 00:30:01.156 A:middle
In most cases, you want to keep

00:29:59.096 --> 00:30:01.156 A:middle
In most cases, you want to keep

00:30:01.156 --> 00:30:03.006 A:middle
on using Feedback Generator

00:30:03.006 --> 00:30:06.096 A:middle
especially for UIKit controls

00:30:06.196 --> 00:30:07.346 A:middle
and adding haptics to that.

00:30:08.196 --> 00:30:11.096 A:middle
With that API, you indicate the

00:30:11.096 --> 00:30:12.626 A:middle
design intent for your event,

00:30:12.626 --> 00:30:14.586 A:middle
whether that's a selection, an

00:30:14.586 --> 00:30:16.836 A:middle
impact, or a notification, and

00:30:16.836 --> 00:30:18.686 A:middle
you let someone else, Apple,

00:30:19.046 --> 00:30:20.456 A:middle
worry about developing a

00:30:20.456 --> 00:30:22.596 A:middle
vocabulary to express that and

00:30:22.716 --> 00:30:25.106 A:middle
mixing the right modalities like

00:30:25.106 --> 00:30:27.086 A:middle
audio, haptics, animation to

00:30:27.086 --> 00:30:28.346 A:middle
communicate that message.

00:30:29.626 --> 00:30:31.076 A:middle
Now this API is also being

00:30:31.076 --> 00:30:32.516 A:middle
improved in iOS 13.

00:30:32.686 --> 00:30:33.626 A:middle
So please check out its

00:30:33.626 --> 00:30:35.196 A:middle
documentation for more details.

00:30:35.956 --> 00:30:40.516 A:middle
In contrast, Core Haptics is

00:30:40.516 --> 00:30:42.226 A:middle
good when you want to be your

00:30:42.226 --> 00:30:44.456 A:middle
own sound and haptic designer.

00:30:45.346 --> 00:30:47.006 A:middle
With it, you developed your own

00:30:47.006 --> 00:30:49.146 A:middle
patterns, and you can have a lot

00:30:49.146 --> 00:30:51.646 A:middle
more control over exactly what

00:30:51.646 --> 00:30:52.896 A:middle
time it gets played, so you can

00:30:52.896 --> 00:30:55.436 A:middle
synchronize with other APIs like

00:30:55.986 --> 00:30:57.736 A:middle
an animation from Core Animation

00:30:58.006 --> 00:31:00.306 A:middle
or a sound event from AV Audio

00:30:58.006 --> 00:31:00.306 A:middle
or a sound event from AV Audio

00:31:00.306 --> 00:31:00.606 A:middle
Engine.

00:31:01.756 --> 00:31:03.256 A:middle
You have a much richer set of

00:31:03.356 --> 00:31:04.446 A:middle
playback and modulation

00:31:04.446 --> 00:31:04.926 A:middle
controls.

00:31:06.116 --> 00:31:08.486 A:middle
Now, UIKit is built on top of

00:31:08.486 --> 00:31:11.816 A:middle
Core Haptics, so both APIs share

00:31:11.816 --> 00:31:13.926 A:middle
the same low latency performance

00:31:13.926 --> 00:31:14.786 A:middle
characteristics.

00:31:15.646 --> 00:31:19.096 A:middle
Now, designing your own haptic

00:31:19.126 --> 00:31:21.316 A:middle
patterns is going to take more

00:31:21.316 --> 00:31:23.666 A:middle
time, but when it allows you to

00:31:23.666 --> 00:31:24.686 A:middle
do something that you couldn't

00:31:24.686 --> 00:31:27.306 A:middle
otherwise do, and when it allows

00:31:27.306 --> 00:31:29.726 A:middle
you to differentiate your app,

00:31:30.286 --> 00:31:31.366 A:middle
then it's worth thinking about.

00:31:32.156 --> 00:31:33.796 A:middle
Now, next I'd like to talk a bit

00:31:33.796 --> 00:31:34.876 A:middle
more about those audio

00:31:34.876 --> 00:31:35.826 A:middle
capabilities.

00:31:37.816 --> 00:31:39.886 A:middle
So, Core Haptics is also an

00:31:39.886 --> 00:31:42.876 A:middle
audio API, and so that allows

00:31:42.876 --> 00:31:45.126 A:middle
you to play short, synthesized,

00:31:45.396 --> 00:31:48.656 A:middle
or custom waveform audio in

00:31:48.656 --> 00:31:50.436 A:middle
synchronization tight sync with

00:31:50.436 --> 00:31:51.206 A:middle
your haptics.

00:31:52.676 --> 00:31:54.246 A:middle
This type of audio haptic

00:31:54.276 --> 00:31:55.986 A:middle
duality has been crucial to many

00:31:55.986 --> 00:31:57.206 A:middle
of Apple's own haptic

00:31:57.206 --> 00:31:59.356 A:middle
experiences like the haptic home

00:31:59.356 --> 00:32:02.536 A:middle
button in iPhone 7, the haptic

00:31:59.356 --> 00:32:02.536 A:middle
button in iPhone 7, the haptic

00:32:02.536 --> 00:32:05.516 A:middle
crown in Series 4 Watch, and the

00:32:05.516 --> 00:32:07.206 A:middle
UIDatePicker, those scrolling

00:32:07.206 --> 00:32:09.236 A:middle
wheels that you use to select

00:32:09.346 --> 00:32:10.976 A:middle
dates and times and alarms and

00:32:10.976 --> 00:32:11.426 A:middle
calendars.

00:32:12.426 --> 00:32:13.956 A:middle
And, you may not have realized

00:32:14.506 --> 00:32:14.636 A:middle
that.

00:32:14.816 --> 00:32:16.066 A:middle
You may not even have noticed

00:32:16.066 --> 00:32:17.056 A:middle
that there was audio in these

00:32:17.056 --> 00:32:18.806 A:middle
experiences, but if you were to

00:32:18.806 --> 00:32:20.696 A:middle
cover up that audio once you

00:32:20.696 --> 00:32:22.226 A:middle
take it away, you'll realize

00:32:22.256 --> 00:32:24.076 A:middle
that it's an inseparable and

00:32:24.076 --> 00:32:24.906 A:middle
integral part of that

00:32:24.906 --> 00:32:25.546 A:middle
experience.

00:32:25.816 --> 00:32:28.606 A:middle
So now, you can do the same with

00:32:28.606 --> 00:32:29.996 A:middle
Core Haptics in your own apps.

00:32:30.276 --> 00:32:31.876 A:middle
And I want to talk about some

00:32:31.876 --> 00:32:34.086 A:middle
categories of apps, one huge

00:32:34.086 --> 00:32:35.656 A:middle
category in particular, where

00:32:35.656 --> 00:32:36.566 A:middle
you might want to think about

00:32:36.566 --> 00:32:40.536 A:middle
Core Haptics, and that's games.

00:32:40.876 --> 00:32:42.336 A:middle
So, imagine we are at the

00:32:42.336 --> 00:32:42.846 A:middle
racetrack.

00:32:43.116 --> 00:32:44.386 A:middle
We want to go into turbo mode.

00:32:44.826 --> 00:32:45.446 A:middle
Let's imagine [rumbling sound].

00:32:46.206 --> 00:32:52.086 A:middle
When you've got the brute force

00:32:52.086 --> 00:32:53.846 A:middle
message to deliver, think about

00:32:53.846 --> 00:32:55.696 A:middle
using synchronized haptics and

00:32:55.696 --> 00:32:57.656 A:middle
audio in your app to generate

00:32:57.656 --> 00:32:59.496 A:middle
those visceral explosions and

00:32:59.496 --> 00:32:59.856 A:middle
rumbles.

00:33:01.566 --> 00:33:03.746 A:middle
Now, another very nice

00:33:03.746 --> 00:33:06.776 A:middle
application is simulate physical

00:33:06.776 --> 00:33:08.226 A:middle
contact, to make your

00:33:08.226 --> 00:33:09.696 A:middle
applications feel more

00:33:09.696 --> 00:33:10.306 A:middle
realistic.

00:33:11.136 --> 00:33:12.166 A:middle
Think about a tennis game.

00:33:13.136 --> 00:33:14.776 A:middle
You could have audio and haptic

00:33:14.776 --> 00:33:17.526 A:middle
components where the pitch of

00:33:17.526 --> 00:33:18.896 A:middle
your audio, the intensity of

00:33:18.896 --> 00:33:20.546 A:middle
your haptics are proportional to

00:33:20.546 --> 00:33:22.456 A:middle
how fast your swing is or how

00:33:22.456 --> 00:33:23.926 A:middle
centered the ball lands in the

00:33:23.926 --> 00:33:24.696 A:middle
middle of the racket.

00:33:25.126 --> 00:33:26.656 A:middle
And you can even control how

00:33:26.656 --> 00:33:28.526 A:middle
long the strings your racket

00:33:28.656 --> 00:33:30.176 A:middle
will resonate for after the

00:33:30.176 --> 00:33:30.526 A:middle
impact.

00:33:32.836 --> 00:33:34.056 A:middle
So, another great area to think

00:33:34.056 --> 00:33:36.016 A:middle
about using Core Haptics is in

00:33:36.046 --> 00:33:38.156 A:middle
augmented reality apps.

00:33:39.436 --> 00:33:41.016 A:middle
And there, if you're working in

00:33:41.016 --> 00:33:42.746 A:middle
this space, you're already

00:33:42.746 --> 00:33:44.366 A:middle
familiar with the benefits of

00:33:44.366 --> 00:33:45.876 A:middle
having high visual fidelity

00:33:46.256 --> 00:33:49.996 A:middle
paired with 3D audio, working in

00:33:49.996 --> 00:33:50.416 A:middle
concert.

00:33:50.736 --> 00:33:52.756 A:middle
Now, we can reach for that next

00:33:52.756 --> 00:33:55.366 A:middle
level of emersion by considering

00:33:55.366 --> 00:33:58.046 A:middle
how custom haptic feedback can

00:33:58.386 --> 00:34:01.316 A:middle
ground our user gestures or

00:33:58.386 --> 00:34:01.316 A:middle
ground our user gestures or

00:34:02.356 --> 00:34:06.386 A:middle
respond to app, device, and AR

00:34:06.386 --> 00:34:07.586 A:middle
object events.

00:34:07.796 --> 00:34:09.545 A:middle
For example, moving your device

00:34:09.545 --> 00:34:13.286 A:middle
around or moving your entire

00:34:13.335 --> 00:34:14.076 A:middle
users around.

00:34:14.636 --> 00:34:18.426 A:middle
As an inspiration, this year

00:34:18.426 --> 00:34:20.666 A:middle
we've enhanced the swish sample

00:34:20.666 --> 00:34:23.626 A:middle
code by using haptics that are

00:34:23.626 --> 00:34:27.005 A:middle
modulated based on how fast you

00:34:27.126 --> 00:34:29.906 A:middle
pull back the sling, how fast

00:34:29.906 --> 00:34:31.275 A:middle
you pull back your phone.

00:34:31.916 --> 00:34:33.275 A:middle
You're going to feel the tension

00:34:33.406 --> 00:34:35.146 A:middle
building up as you stretch it

00:34:35.146 --> 00:34:36.025 A:middle
back, and then the very

00:34:36.025 --> 00:34:38.146 A:middle
satisfying thunk as you release.

00:34:39.326 --> 00:34:40.936 A:middle
I'd like to show you a video of

00:34:40.936 --> 00:34:43.335 A:middle
this, and I'm going to use audio

00:34:43.335 --> 00:34:45.206 A:middle
to represent just the haptics

00:34:45.235 --> 00:34:46.005 A:middle
that you're going to feel.

00:34:46.596 --> 00:34:48.976 A:middle
They're going to sound like this

00:34:49.516 --> 00:34:51.596 A:middle
[chiming sound].

00:34:52.096 --> 00:34:53.556 A:middle
Now, we're going to see the

00:34:53.556 --> 00:34:55.596 A:middle
whole thing together, visuals

00:34:55.746 --> 00:34:58.446 A:middle
and haptics, no regular audio.

00:34:59.758 --> 00:35:01.758 A:middle
[ Chiming Sound ]

00:34:59.758 --> 00:35:01.758 A:middle
[ Chiming Sound ]

00:35:03.686 --> 00:35:05.516 A:middle
So that was an example of how we

00:35:05.516 --> 00:35:09.216 A:middle
can use haptics, sound, and

00:35:09.216 --> 00:35:10.976 A:middle
visuals all synchronized

00:35:10.976 --> 00:35:12.546 A:middle
together to enhance our AR

00:35:12.546 --> 00:35:13.556 A:middle
experience.

00:35:13.846 --> 00:35:14.756 A:middle
Now, these are just a few

00:35:14.756 --> 00:35:17.016 A:middle
categories of apps, games, and

00:35:17.016 --> 00:35:18.696 A:middle
AR that are ripe for creative

00:35:18.696 --> 00:35:20.826 A:middle
explorations with haptics and

00:35:20.826 --> 00:35:21.846 A:middle
their corresponding sounds.

00:35:22.586 --> 00:35:23.616 A:middle
I'm sure you're going to think

00:35:23.616 --> 00:35:24.876 A:middle
of many, many more.

00:35:25.456 --> 00:35:30.986 A:middle
So, now let's get into how we

00:35:30.986 --> 00:35:32.986 A:middle
can start expressing our content

00:35:33.466 --> 00:35:35.036 A:middle
with Core Haptics.

00:35:36.536 --> 00:35:38.446 A:middle
There are just two groups of

00:35:38.446 --> 00:35:39.976 A:middle
classes in Core Haptics.

00:35:40.046 --> 00:35:41.856 A:middle
There's those to represent your

00:35:41.856 --> 00:35:44.196 A:middle
content and those to play back

00:35:44.196 --> 00:35:44.806 A:middle
that content.

00:35:45.506 --> 00:35:48.486 A:middle
Let's take a closer look at the

00:35:48.486 --> 00:35:50.166 A:middle
content side first.

00:35:50.896 --> 00:35:54.336 A:middle
The basic indivisible content

00:35:54.336 --> 00:35:56.476 A:middle
element in Core Haptics is

00:35:56.476 --> 00:35:57.846 A:middle
called a CH Haptic Event.

00:35:58.756 --> 00:36:02.146 A:middle
Now each event has a type and a

00:35:58.756 --> 00:36:02.146 A:middle
Now each event has a type and a

00:36:02.146 --> 00:36:04.456 A:middle
time, and optionally parameters

00:36:04.696 --> 00:36:06.566 A:middle
that will customized its feel.

00:36:08.306 --> 00:36:10.366 A:middle
These events can overlap each

00:36:10.366 --> 00:36:11.646 A:middle
other, and when they do, they

00:36:11.646 --> 00:36:12.116 A:middle
mix.

00:36:13.476 --> 00:36:15.996 A:middle
And all events are grouped into

00:36:16.426 --> 00:36:16.876 A:middle
a pattern.

00:36:18.206 --> 00:36:19.606 A:middle
Next, I'd like to talk about

00:36:19.896 --> 00:36:21.626 A:middle
those types of events.

00:36:21.626 --> 00:36:25.856 A:middle
Our first type is called the

00:36:25.906 --> 00:36:26.746 A:middle
Haptic Transient.

00:36:27.506 --> 00:36:29.366 A:middle
The Haptic Transient, I think of

00:36:29.366 --> 00:36:31.676 A:middle
it as a gavel, it's a tricking

00:36:31.676 --> 00:36:32.186 A:middle
motion.

00:36:32.366 --> 00:36:33.516 A:middle
It's momentary and

00:36:33.516 --> 00:36:34.216 A:middle
instantaneous.

00:36:35.036 --> 00:36:37.076 A:middle
And then we have two continuous

00:36:37.076 --> 00:36:37.686 A:middle
types.

00:36:38.736 --> 00:36:40.536 A:middle
We have Haptic Continuous and

00:36:40.536 --> 00:36:41.616 A:middle
Audio Continuous.

00:36:42.006 --> 00:36:43.326 A:middle
And there, I think of, for

00:36:43.326 --> 00:36:45.256 A:middle
example, bowing a stringed

00:36:45.256 --> 00:36:45.796 A:middle
instrument.

00:36:46.346 --> 00:36:49.096 A:middle
It is longer than a transient.

00:36:49.386 --> 00:36:50.746 A:middle
It can be, for example, used as

00:36:50.746 --> 00:36:52.306 A:middle
a background texture, and you

00:36:52.306 --> 00:36:54.296 A:middle
have a much richer set of knobs

00:36:54.296 --> 00:36:55.266 A:middle
that you can use, for example,

00:36:55.266 --> 00:36:56.976 A:middle
to modulate the resonance of it.

00:36:58.446 --> 00:37:01.246 A:middle
Lastly, we have the Audio Custom

00:36:58.446 --> 00:37:01.246 A:middle
Lastly, we have the Audio Custom

00:37:01.246 --> 00:37:03.876 A:middle
type, and the Audio Custom, as I

00:37:03.876 --> 00:37:05.866 A:middle
mentioned earlier, is where you

00:37:05.866 --> 00:37:08.316 A:middle
can provide your own audio to be

00:37:08.616 --> 00:37:11.526 A:middle
played back in sync with the

00:37:11.566 --> 00:37:12.056 A:middle
haptics.

00:37:13.576 --> 00:37:15.216 A:middle
Next, let's talk about some of

00:37:15.216 --> 00:37:17.396 A:middle
those optional parameters.

00:37:17.906 --> 00:37:22.636 A:middle
Our first event parameter is

00:37:22.636 --> 00:37:25.286 A:middle
called haptic intensity, and it

00:37:25.286 --> 00:37:28.086 A:middle
has an audio analog, audio

00:37:28.086 --> 00:37:29.126 A:middle
volume, which you're probably

00:37:29.126 --> 00:37:30.066 A:middle
already familiar with.

00:37:31.416 --> 00:37:33.716 A:middle
Now, with this parameter, you go

00:37:33.716 --> 00:37:35.936 A:middle
from no output as you turn, and

00:37:35.936 --> 00:37:37.906 A:middle
as you turn the knob from 0 all

00:37:37.906 --> 00:37:39.306 A:middle
the way up to 1, you go to

00:37:39.306 --> 00:37:42.506 A:middle
maximum output of the system.

00:37:42.506 --> 00:37:43.996 A:middle
Our next parameter is called

00:37:43.996 --> 00:37:45.536 A:middle
haptic sharpness.

00:37:45.836 --> 00:37:48.046 A:middle
Now, haptic sharpness is a new

00:37:48.046 --> 00:37:48.546 A:middle
concept.

00:37:48.916 --> 00:37:50.826 A:middle
There's no physical analog to

00:37:50.826 --> 00:37:52.486 A:middle
this, and there's also no audio

00:37:52.486 --> 00:37:52.986 A:middle
analog.

00:37:53.506 --> 00:37:58.136 A:middle
In this world, I want you to

00:37:58.136 --> 00:38:00.176 A:middle
instead think of moving along in

00:37:58.136 --> 00:38:00.176 A:middle
instead think of moving along in

00:38:00.176 --> 00:38:03.636 A:middle
a perceptual space from a very

00:38:03.636 --> 00:38:07.966 A:middle
round and organic feel at 0 all

00:38:07.966 --> 00:38:09.296 A:middle
the way to a more crisp and

00:38:09.296 --> 00:38:11.126 A:middle
precise feel at 1.

00:38:11.636 --> 00:38:13.576 A:middle
And to help ground that a bit

00:38:13.576 --> 00:38:15.526 A:middle
further, I'm going to use some

00:38:15.526 --> 00:38:17.366 A:middle
examples from iOS 12.

00:38:18.856 --> 00:38:20.846 A:middle
The flashlight button on your

00:38:20.846 --> 00:38:22.366 A:middle
lock screen is an example of a

00:38:22.366 --> 00:38:25.726 A:middle
very high sharpness haptic, and

00:38:27.016 --> 00:38:30.826 A:middle
the app switcher, that swipe up,

00:38:30.826 --> 00:38:33.206 A:middle
that's an example of a more

00:38:33.206 --> 00:38:34.926 A:middle
round, a lower sharpness haptic.

00:38:35.456 --> 00:38:39.216 A:middle
As for the why, why were those

00:38:39.556 --> 00:38:42.326 A:middle
two types of experiences, you

00:38:42.326 --> 00:38:44.086 A:middle
know, sharp and not sharp, I'm

00:38:44.086 --> 00:38:45.696 A:middle
going to refer you to our talk

00:38:45.696 --> 00:38:48.176 A:middle
on audio haptic design.

00:38:48.686 --> 00:38:51.556 A:middle
Now, we have several more types

00:38:51.556 --> 00:38:53.456 A:middle
of event parameters, for

00:38:53.456 --> 00:38:55.806 A:middle
example, that apply to audio,

00:38:55.806 --> 00:38:58.116 A:middle
like pitch and pan, and for

00:38:58.156 --> 00:38:59.846 A:middle
haptics, we have things that let

00:38:59.846 --> 00:39:01.296 A:middle
you change those resonance and

00:38:59.846 --> 00:39:01.296 A:middle
you change those resonance and

00:39:01.296 --> 00:39:01.736 A:middle
so forth.

00:39:02.126 --> 00:39:04.766 A:middle
But these two, intensity and

00:39:04.766 --> 00:39:07.086 A:middle
sharpness, will be enough to get

00:39:07.656 --> 00:39:09.196 A:middle
us going.

00:39:09.376 --> 00:39:11.506 A:middle
Now, to develop a feel for that

00:39:11.606 --> 00:39:14.346 A:middle
dynamic range and precision of

00:39:14.676 --> 00:39:17.036 A:middle
intensity and sharpness, we've

00:39:17.036 --> 00:39:19.646 A:middle
got a sample code, the Palette,

00:39:19.986 --> 00:39:21.416 A:middle
which allows you to try out

00:39:22.876 --> 00:39:24.306 A:middle
these experiences for yourself.

00:39:24.626 --> 00:39:26.616 A:middle
As you move, as you tap or you

00:39:26.616 --> 00:39:29.156 A:middle
drag your finger around, you'll

00:39:29.366 --> 00:39:31.186 A:middle
be accessing the sharpness axis

00:39:31.846 --> 00:39:33.486 A:middle
as well as the intensity axis,

00:39:33.486 --> 00:39:34.506 A:middle
and it's going to play out the

00:39:34.506 --> 00:39:36.586 A:middle
corresponding continuous or

00:39:36.586 --> 00:39:38.406 A:middle
transient haptic, as you do

00:39:38.406 --> 00:39:38.606 A:middle
that.

00:39:39.636 --> 00:39:41.676 A:middle
This will help you get that

00:39:41.676 --> 00:39:42.556 A:middle
intuition.

00:39:46.636 --> 00:39:48.866 A:middle
So, that was an introduction

00:39:49.496 --> 00:39:51.426 A:middle
about where we can use Core

00:39:51.426 --> 00:39:53.946 A:middle
Haptics and also how to specify

00:39:53.946 --> 00:39:54.556 A:middle
our content.

00:39:55.056 --> 00:39:56.946 A:middle
Now, let's invite Doug Scott,

00:39:56.946 --> 00:39:58.876 A:middle
our Core Haptics architect, to

00:39:58.876 --> 00:40:01.586 A:middle
get us started with playing back

00:39:58.876 --> 00:40:01.586 A:middle
get us started with playing back

00:40:01.746 --> 00:40:03.896 A:middle
Core Haptics, playing back those

00:40:03.896 --> 00:40:05.896 A:middle
patterns, and integrating Core

00:40:05.896 --> 00:40:07.066 A:middle
Haptics into our apps.

00:40:07.516 --> 00:40:08.266 A:middle
Please welcome Doug.

00:40:09.516 --> 00:40:11.536 A:middle
[ Applause ]

00:40:12.036 --> 00:40:12.536 A:middle
&gt;&gt; Thank you, Michael.

00:40:13.586 --> 00:40:14.586 A:middle
Good evening everyone.

00:40:14.746 --> 00:40:16.996 A:middle
I am thrilled to be here to talk

00:40:16.996 --> 00:40:18.156 A:middle
to you about integrating the

00:40:18.156 --> 00:40:20.176 A:middle
Core Haptics API into your

00:40:20.176 --> 00:40:20.936 A:middle
applications.

00:40:22.436 --> 00:40:25.106 A:middle
Before I show a demo and dive

00:40:25.106 --> 00:40:26.526 A:middle
into the code, let's walk

00:40:26.526 --> 00:40:27.746 A:middle
through the basic steps that

00:40:27.746 --> 00:40:29.286 A:middle
your application will follow

00:40:29.286 --> 00:40:30.406 A:middle
when you want to play a haptic

00:40:30.446 --> 00:40:30.856 A:middle
pattern.

00:40:34.046 --> 00:40:35.516 A:middle
Creating your content is the

00:40:35.516 --> 00:40:37.466 A:middle
first good step because this can

00:40:37.466 --> 00:40:39.266 A:middle
be done at any point prior to

00:40:39.266 --> 00:40:40.556 A:middle
the point where you need to use

00:40:40.556 --> 00:40:40.716 A:middle
it.

00:40:41.366 --> 00:40:44.296 A:middle
In this example, with load an NS

00:40:44.296 --> 00:40:45.556 A:middle
dictionary into a haptic

00:40:45.556 --> 00:40:45.936 A:middle
pattern.

00:40:46.066 --> 00:40:47.056 A:middle
The dictionary might have been

00:40:47.056 --> 00:40:48.266 A:middle
something that we stored in our

00:40:48.266 --> 00:40:49.476 A:middle
application as part of our

00:40:49.476 --> 00:40:50.146 A:middle
resources.

00:40:51.196 --> 00:40:53.246 A:middle
As we will see later, patterns

00:40:53.246 --> 00:40:55.146 A:middle
can also be created right before

00:40:55.146 --> 00:40:56.546 A:middle
they are to be played if they

00:40:56.546 --> 00:40:58.486 A:middle
need to vary interactively in

00:40:58.486 --> 00:40:59.806 A:middle
response to changes in your

00:40:59.806 --> 00:41:00.426 A:middle
application.

00:40:59.806 --> 00:41:00.426 A:middle
application.

00:41:01.036 --> 00:41:04.556 A:middle
The next step is to create an

00:41:04.556 --> 00:41:05.906 A:middle
instance of the haptic engine.

00:41:06.836 --> 00:41:08.106 A:middle
This should be done as soon as

00:41:08.106 --> 00:41:09.646 A:middle
your application knows that it

00:41:09.646 --> 00:41:13.436 A:middle
will be making use of haptics.

00:41:13.576 --> 00:41:15.436 A:middle
Next, you create a haptic player

00:41:15.436 --> 00:41:16.396 A:middle
for your haptic pattern.

00:41:16.986 --> 00:41:18.836 A:middle
Each player is associated with a

00:41:18.836 --> 00:41:20.846 A:middle
single pattern and a particular

00:41:20.846 --> 00:41:21.606 A:middle
haptic engine.

00:41:22.106 --> 00:41:26.176 A:middle
Starting the haptic engine tells

00:41:26.176 --> 00:41:27.726 A:middle
the system to initialize the

00:41:27.726 --> 00:41:29.456 A:middle
audio and haptic hardware in

00:41:29.456 --> 00:41:31.356 A:middle
preparation for a request to

00:41:31.356 --> 00:41:32.246 A:middle
play the pattern.

00:41:32.816 --> 00:41:35.516 A:middle
At the moment that your

00:41:35.516 --> 00:41:36.916 A:middle
application wants the pattern to

00:41:36.996 --> 00:41:38.646 A:middle
play, you start the player.

00:41:39.296 --> 00:41:41.036 A:middle
This can be done in two modes.

00:41:41.336 --> 00:41:43.666 A:middle
The first, which we could call

00:41:43.666 --> 00:41:45.586 A:middle
immediate mode, tells the system

00:41:45.586 --> 00:41:47.606 A:middle
that you wish this pattern to

00:41:47.606 --> 00:41:49.046 A:middle
play at the soonest possible

00:41:49.046 --> 00:41:50.516 A:middle
moment with minimal latency.

00:41:51.466 --> 00:41:53.336 A:middle
The second, in scheduled mode,

00:41:53.336 --> 00:41:55.876 A:middle
you handed a absolute timestamp,

00:41:56.006 --> 00:41:57.236 A:middle
which tells the system that you

00:41:57.236 --> 00:41:58.576 A:middle
want to synchronize this event

00:41:58.826 --> 00:42:00.316 A:middle
with some other system, such as

00:41:58.826 --> 00:42:00.316 A:middle
with some other system, such as

00:42:00.316 --> 00:42:02.666 A:middle
another audio player or a game

00:42:02.926 --> 00:42:05.786 A:middle
event or a graphics event.

00:42:08.936 --> 00:42:10.186 A:middle
If you want to know when your

00:42:10.186 --> 00:42:12.086 A:middle
pattern is finished playing, you

00:42:12.086 --> 00:42:13.276 A:middle
can have the haptic engine

00:42:13.276 --> 00:42:15.116 A:middle
notify you via callback when

00:42:15.116 --> 00:42:17.076 A:middle
your player or players are done.

00:42:17.436 --> 00:42:20.506 A:middle
Here, the engine calls back to

00:42:20.506 --> 00:42:22.736 A:middle
the application, and the

00:42:22.736 --> 00:42:24.126 A:middle
application can now choose to

00:42:24.126 --> 00:42:26.216 A:middle
stop the haptic engine or can

00:42:26.216 --> 00:42:27.706 A:middle
turn you on with the next haptic

00:42:27.706 --> 00:42:28.076 A:middle
pattern.

00:42:29.906 --> 00:42:31.206 A:middle
Those are the basic steps.

00:42:31.456 --> 00:42:33.266 A:middle
Now, let's see and example of an

00:42:33.266 --> 00:42:34.576 A:middle
application which uses this

00:42:34.576 --> 00:42:35.006 A:middle
system.

00:42:35.996 --> 00:42:39.546 A:middle
But before we do, we need to let

00:42:39.546 --> 00:42:41.206 A:middle
you in on a secret.

00:42:41.446 --> 00:42:43.306 A:middle
Demonstrating the use of an API,

00:42:43.406 --> 00:42:45.116 A:middle
which generates tactile feedback

00:42:45.526 --> 00:42:47.726 A:middle
presents a unique problem.

00:42:48.366 --> 00:42:49.576 A:middle
You in the audience can't feel

00:42:49.576 --> 00:42:49.676 A:middle
it.

00:42:50.356 --> 00:42:51.986 A:middle
The way we handled this was by

00:42:51.986 --> 00:42:53.766 A:middle
adding an audio equivalent for

00:42:53.766 --> 00:42:54.856 A:middle
each haptic event into the

00:42:54.856 --> 00:42:56.776 A:middle
output, which will let you hear

00:42:56.776 --> 00:43:01.236 A:middle
the effect of the haptics.

00:42:56.776 --> 00:43:01.236 A:middle
the effect of the haptics.

00:43:01.796 --> 00:43:03.816 A:middle
This application uses a simple

00:43:03.816 --> 00:43:05.486 A:middle
physics engine to move the ball

00:43:05.486 --> 00:43:06.966 A:middle
around the screen in response to

00:43:06.966 --> 00:43:07.836 A:middle
the accelerometer.

00:43:08.246 --> 00:43:11.756 A:middle
It generates haptic and audio

00:43:11.756 --> 00:43:13.286 A:middle
feedback when the ball impacts

00:43:13.286 --> 00:43:14.616 A:middle
the edges of the screen.

00:43:15.096 --> 00:43:16.436 A:middle
The user has the sense they are

00:43:16.436 --> 00:43:17.716 A:middle
feeling the impacts through the

00:43:17.716 --> 00:43:19.176 A:middle
edges of the game wall as well

00:43:19.176 --> 00:43:19.696 A:middle
as hearing them.

00:43:20.046 --> 00:43:21.376 A:middle
The harder the ball hits the

00:43:21.376 --> 00:43:22.786 A:middle
edge, the more intense the

00:43:22.786 --> 00:43:24.696 A:middle
haptic and the louder the audio.

00:43:25.256 --> 00:43:29.196 A:middle
Okay. Let's look at the code for

00:43:29.196 --> 00:43:30.876 A:middle
this example to see how to

00:43:30.876 --> 00:43:32.176 A:middle
integrate the Core Haptics API

00:43:32.176 --> 00:43:33.396 A:middle
into your application.

00:43:33.786 --> 00:43:35.696 A:middle
We'll see how event parameters

00:43:35.736 --> 00:43:37.836 A:middle
are used to produce changes in

00:43:37.836 --> 00:43:38.886 A:middle
haptics and audio.

00:43:39.906 --> 00:43:41.686 A:middle
The example here, all this code

00:43:41.686 --> 00:43:43.096 A:middle
is taken from the sample code on

00:43:43.096 --> 00:43:44.496 A:middle
the website, but it's been

00:43:44.496 --> 00:43:45.936 A:middle
edited down to show the

00:43:45.936 --> 00:43:47.526 A:middle
important points.

00:43:48.656 --> 00:43:51.036 A:middle
First, we important the Core

00:43:51.036 --> 00:43:52.556 A:middle
Haptics module along with the

00:43:52.556 --> 00:43:53.866 A:middle
other modules we need for the

00:43:53.866 --> 00:43:54.536 A:middle
application.

00:43:55.136 --> 00:43:59.986 A:middle
The CHHaptic Engine is declared

00:43:59.986 --> 00:44:01.396 A:middle
as a member variable of our view

00:43:59.986 --> 00:44:01.396 A:middle
as a member variable of our view

00:44:01.396 --> 00:44:02.826 A:middle
controller, because we want to

00:44:02.826 --> 00:44:04.246 A:middle
be able to control its lifetime

00:44:04.246 --> 00:44:05.296 A:middle
and have it exist for the

00:44:05.296 --> 00:44:06.646 A:middle
lifetime of the application.

00:44:07.216 --> 00:44:10.556 A:middle
As discussed in our flow chart

00:44:10.556 --> 00:44:12.296 A:middle
earlier, we set up the haptic

00:44:12.296 --> 00:44:13.766 A:middle
engine in advance of when we

00:44:13.766 --> 00:44:14.526 A:middle
want to use it.

00:44:14.816 --> 00:44:16.786 A:middle
Here, we call a helper method at

00:44:16.786 --> 00:44:18.026 A:middle
the point that the view has

00:44:18.026 --> 00:44:18.426 A:middle
loaded.

00:44:18.986 --> 00:44:22.666 A:middle
In the helper method, we began

00:44:22.966 --> 00:44:24.676 A:middle
by creating the instance of the

00:44:24.676 --> 00:44:26.226 A:middle
haptic engine and check for

00:44:26.226 --> 00:44:27.196 A:middle
possible errors.

00:44:27.886 --> 00:44:29.096 A:middle
The engine is assigned to our

00:44:29.096 --> 00:44:30.646 A:middle
member variable so we can keep

00:44:30.646 --> 00:44:31.156 A:middle
it around.

00:44:31.796 --> 00:44:35.436 A:middle
It is optional but extremely

00:44:35.436 --> 00:44:37.666 A:middle
useful to assign a closure to

00:44:37.666 --> 00:44:39.326 A:middle
the engine's stop handler

00:44:39.326 --> 00:44:39.866 A:middle
property.

00:44:40.386 --> 00:44:41.396 A:middle
This will be called if the

00:44:41.396 --> 00:44:43.186 A:middle
engine is stopped by some action

00:44:43.236 --> 00:44:45.016 A:middle
other than the application

00:44:45.016 --> 00:44:46.286 A:middle
itself asking it to.

00:44:46.746 --> 00:44:48.026 A:middle
Some possible reasons that this

00:44:48.026 --> 00:44:49.386 A:middle
might happen are an audio

00:44:49.386 --> 00:44:50.996 A:middle
session interruption or the

00:44:50.996 --> 00:44:52.566 A:middle
application being suspended.

00:44:53.016 --> 00:44:56.476 A:middle
We finish this method by

00:44:56.476 --> 00:44:57.996 A:middle
starting the haptic engine and

00:44:57.996 --> 00:44:59.396 A:middle
checking for possible errors.

00:45:00.276 --> 00:45:01.816 A:middle
The engine will continue to run

00:45:01.886 --> 00:45:03.276 A:middle
until the application or a

00:45:03.276 --> 00:45:05.396 A:middle
possible outside action stops

00:45:05.396 --> 00:45:05.476 A:middle
it.

00:45:06.786 --> 00:45:08.666 A:middle
Note that the application tracks

00:45:08.746 --> 00:45:10.096 A:middle
whether or not the engine needs

00:45:10.096 --> 00:45:10.946 A:middle
to be restated.

00:45:12.186 --> 00:45:13.836 A:middle
Typically, you might leave the

00:45:13.836 --> 00:45:15.216 A:middle
engine running for the entire

00:45:15.216 --> 00:45:17.016 A:middle
time that you have any view

00:45:17.316 --> 00:45:19.156 A:middle
visible on the screen, which has

00:45:19.156 --> 00:45:20.316 A:middle
haptic interaction.

00:45:25.036 --> 00:45:26.386 A:middle
Here's the location in the

00:45:26.386 --> 00:45:27.726 A:middle
application where the simple

00:45:27.726 --> 00:45:29.366 A:middle
physics engine let's us know

00:45:29.366 --> 00:45:30.746 A:middle
that the ball has collided with

00:45:30.746 --> 00:45:31.236 A:middle
the wall.

00:45:31.816 --> 00:45:33.016 A:middle
In this example, we want to

00:45:33.016 --> 00:45:34.506 A:middle
generate our haptic and audio

00:45:34.506 --> 00:45:36.766 A:middle
pattern to interactively track

00:45:36.876 --> 00:45:38.156 A:middle
the velocity of the ball.

00:45:38.326 --> 00:45:39.686 A:middle
So the pattern player and its

00:45:39.686 --> 00:45:41.036 A:middle
pattern are created at the

00:45:41.036 --> 00:45:42.116 A:middle
moment they are needed.

00:45:44.616 --> 00:45:46.306 A:middle
This method is responsible for

00:45:46.306 --> 00:45:47.716 A:middle
creating the pattern to be

00:45:47.716 --> 00:45:49.166 A:middle
played in response to the ball

00:45:49.166 --> 00:45:49.626 A:middle
collision.

00:45:50.486 --> 00:45:51.776 A:middle
In here, we will create a

00:45:51.776 --> 00:45:53.706 A:middle
pattern with two events, one

00:45:53.736 --> 00:45:55.316 A:middle
haptic and one audio.

00:45:55.766 --> 00:45:59.116 A:middle
We create a haptic event of type

00:45:59.176 --> 00:46:01.396 A:middle
haptic transient to produce that

00:45:59.176 --> 00:46:01.396 A:middle
haptic transient to produce that

00:46:01.396 --> 00:46:05.906 A:middle
impactful feel, and we give it

00:46:05.906 --> 00:46:07.106 A:middle
two event parameters, which

00:46:07.106 --> 00:46:08.606 A:middle
configure the event's sharpness

00:46:08.606 --> 00:46:09.806 A:middle
and intensity, which you've

00:46:09.806 --> 00:46:12.166 A:middle
heard about already, based upon

00:46:12.166 --> 00:46:13.526 A:middle
the velocity of the ball.

00:46:15.876 --> 00:46:17.926 A:middle
Then, we create the audio event,

00:46:18.026 --> 00:46:21.736 A:middle
we type audio continuous, with a

00:46:21.736 --> 00:46:23.376 A:middle
set of event parameters for

00:46:23.376 --> 00:46:25.826 A:middle
volume and envelop decay, also

00:46:25.826 --> 00:46:27.066 A:middle
calculated from the ball's

00:46:27.066 --> 00:46:27.696 A:middle
velocity.

00:46:28.356 --> 00:46:29.946 A:middle
The sustained parameter here

00:46:30.076 --> 00:46:32.346 A:middle
assures us that the intensity of

00:46:32.396 --> 00:46:34.616 A:middle
this event will die off to zero

00:46:34.976 --> 00:46:37.056 A:middle
instead of continuing on for the

00:46:37.056 --> 00:46:40.586 A:middle
length of the event.

00:46:40.676 --> 00:46:42.146 A:middle
We create a pattern containing

00:46:42.146 --> 00:46:44.236 A:middle
these two events, synchronized

00:46:45.196 --> 00:46:46.646 A:middle
in time.

00:46:46.836 --> 00:46:48.436 A:middle
Finally, we create the pattern

00:46:48.436 --> 00:46:50.016 A:middle
player from this pattern and

00:46:50.016 --> 00:46:53.406 A:middle
return it to this layer, back in

00:46:53.406 --> 00:46:54.696 A:middle
the method that responds to the

00:46:54.696 --> 00:46:55.216 A:middle
collision.

00:46:56.336 --> 00:46:58.316 A:middle
The final step is to start the

00:46:58.316 --> 00:46:59.976 A:middle
pattern player at time

00:46:59.976 --> 00:47:02.536 A:middle
CHHapticTimeImmediate, which

00:46:59.976 --> 00:47:02.536 A:middle
CHHapticTimeImmediate, which

00:47:02.536 --> 00:47:04.156 A:middle
indicates to play it back as

00:47:04.156 --> 00:47:05.596 A:middle
soon as possible with minimal

00:47:05.596 --> 00:47:05.976 A:middle
latency.

00:47:08.006 --> 00:47:09.086 A:middle
Notice that the app does not

00:47:09.086 --> 00:47:10.616 A:middle
hold onto the instance of this

00:47:10.656 --> 00:47:11.186 A:middle
player.

00:47:12.206 --> 00:47:13.716 A:middle
Its pattern is guaranteed to

00:47:13.716 --> 00:47:15.456 A:middle
continue playing until it is

00:47:15.456 --> 00:47:17.346 A:middle
finished so the application can

00:47:17.346 --> 00:47:18.996 A:middle
simply fire and forget it.

00:47:19.096 --> 00:47:23.326 A:middle
And that's the basic recipe for

00:47:23.326 --> 00:47:24.526 A:middle
playing your content using a

00:47:24.526 --> 00:47:25.816 A:middle
pattern that is created

00:47:25.816 --> 00:47:26.896 A:middle
programmatically within your

00:47:26.896 --> 00:47:27.556 A:middle
app's code.

00:47:28.716 --> 00:47:29.976 A:middle
Again, because this app is

00:47:29.976 --> 00:47:31.846 A:middle
continuously interactive, we

00:47:31.846 --> 00:47:33.356 A:middle
don't stop the haptic engineer

00:47:33.546 --> 00:47:35.016 A:middle
until the game screen is not

00:47:35.016 --> 00:47:35.816 A:middle
longer visible.

00:47:35.816 --> 00:47:40.696 A:middle
Now, let's take a moment to talk

00:47:40.696 --> 00:47:41.876 A:middle
about one of the most powerful

00:47:41.876 --> 00:47:43.536 A:middle
capabilities of Core Haptics,

00:47:43.926 --> 00:47:45.186 A:middle
Dynamic Parameters.

00:47:45.636 --> 00:47:49.196 A:middle
Dynamic Parameters let's you

00:47:49.196 --> 00:47:51.036 A:middle
increase and decrease the value

00:47:51.106 --> 00:47:52.876 A:middle
of the existing event parameters

00:47:53.126 --> 00:47:55.306 A:middle
for all active and upcoming

00:47:55.306 --> 00:47:59.336 A:middle
events in a pattern as it plays.

00:47:59.506 --> 00:48:01.266 A:middle
Dynamic Parameters take effect

00:47:59.506 --> 00:48:01.266 A:middle
Dynamic Parameters take effect

00:48:01.266 --> 00:48:02.776 A:middle
at the time stamp you provide.

00:48:03.646 --> 00:48:04.976 A:middle
You can adjust multiple

00:48:04.976 --> 00:48:06.626 A:middle
different parameters at the same

00:48:06.626 --> 00:48:09.116 A:middle
time or with any arbitrary time

00:48:09.236 --> 00:48:09.926 A:middle
relationship.

00:48:10.376 --> 00:48:13.236 A:middle
You can include dynamic

00:48:13.236 --> 00:48:14.556 A:middle
parameters when you create your

00:48:14.556 --> 00:48:16.806 A:middle
pattern or send them to your

00:48:16.806 --> 00:48:18.486 A:middle
player in real time during

00:48:18.486 --> 00:48:19.746 A:middle
playback.

00:48:20.496 --> 00:48:22.886 A:middle
This allows you to use a single

00:48:22.886 --> 00:48:24.886 A:middle
pattern to generate an infinite

00:48:24.886 --> 00:48:27.316 A:middle
number of haptic and audio

00:48:27.316 --> 00:48:29.176 A:middle
variations by adjusting the

00:48:29.176 --> 00:48:30.426 A:middle
pattern dynamically.

00:48:30.986 --> 00:48:34.446 A:middle
Let's take a look at an example.

00:48:35.066 --> 00:48:36.626 A:middle
In this diagram on the bottom we

00:48:36.626 --> 00:48:38.076 A:middle
have a haptic pattern that was

00:48:38.076 --> 00:48:40.576 A:middle
designed with all haptic event

00:48:40.576 --> 00:48:42.386 A:middle
intensities set to their maximum

00:48:42.386 --> 00:48:42.876 A:middle
value.

00:48:43.386 --> 00:48:44.966 A:middle
First half are haptic

00:48:44.966 --> 00:48:45.636 A:middle
transients.

00:48:45.776 --> 00:48:46.946 A:middle
Second half is a haptic

00:48:46.946 --> 00:48:47.626 A:middle
continuous.

00:48:48.916 --> 00:48:49.816 A:middle
We'd like to reduce the

00:48:49.816 --> 00:48:51.306 A:middle
intensity of all the game's

00:48:51.306 --> 00:48:52.956 A:middle
haptics temporarily, for

00:48:52.956 --> 00:48:55.206 A:middle
example, if a character was

00:48:55.206 --> 00:48:58.966 A:middle
speaking in the game.

00:48:59.166 --> 00:49:00.686 A:middle
I send a dynamic parameter for

00:48:59.166 --> 00:49:00.686 A:middle
I send a dynamic parameter for

00:49:00.686 --> 00:49:03.416 A:middle
intensity with a value of 0.3

00:49:03.586 --> 00:49:05.536 A:middle
that takes effect at time 0.5

00:49:05.536 --> 00:49:05.976 A:middle
seconds.

00:49:06.756 --> 00:49:08.296 A:middle
You can see that it reduced the

00:49:08.296 --> 00:49:09.806 A:middle
intensity of the event at that

00:49:09.806 --> 00:49:11.276 A:middle
time significantly to about a

00:49:11.276 --> 00:49:13.276 A:middle
third of what it was unmodified.

00:49:17.076 --> 00:49:19.296 A:middle
Finally, let's look at another

00:49:19.296 --> 00:49:23.516 A:middle
way to create patterns.

00:49:23.516 --> 00:49:26.826 A:middle
So, what exactly is AHAP.

00:49:28.476 --> 00:49:31.466 A:middle
The Apple Haptic Audio Pattern

00:49:31.586 --> 00:49:32.926 A:middle
is a specification for

00:49:32.926 --> 00:49:34.286 A:middle
describing a Core Haptics

00:49:34.286 --> 00:49:36.686 A:middle
pattern in a text-based format.

00:49:37.306 --> 00:49:38.986 A:middle
It is built from nested key

00:49:38.986 --> 00:49:41.426 A:middle
value pairs, which become quite

00:49:41.426 --> 00:49:44.016 A:middle
familiar to you once you start

00:49:44.016 --> 00:49:45.326 A:middle
working with the classes which

00:49:45.326 --> 00:49:46.876 A:middle
make up the Core Haptics API.

00:49:47.756 --> 00:49:50.966 A:middle
It is the schema for the widely

00:49:50.966 --> 00:49:53.276 A:middle
established JSON file format,

00:49:53.476 --> 00:49:56.016 A:middle
which means you have already

00:49:56.016 --> 00:49:57.076 A:middle
quite a number of different

00:49:57.076 --> 00:49:58.316 A:middle
frameworks, which can read,

00:49:58.316 --> 00:50:00.226 A:middle
write, and edit these, including

00:49:58.316 --> 00:50:00.226 A:middle
write, and edit these, including

00:50:00.296 --> 00:50:02.096 A:middle
such things as the Swift Codable

00:50:02.096 --> 00:50:02.526 A:middle
Framework.

00:50:02.946 --> 00:50:07.506 A:middle
AHAP makes it easy to share and

00:50:07.506 --> 00:50:09.356 A:middle
edit haptic patterns because it

00:50:09.356 --> 00:50:11.136 A:middle
is a format that all developers

00:50:11.246 --> 00:50:14.366 A:middle
can agree on.

00:50:14.926 --> 00:50:16.076 A:middle
Loading your haptic patterns

00:50:16.076 --> 00:50:18.116 A:middle
from external AHAP files allows

00:50:18.116 --> 00:50:19.696 A:middle
you to separate your content

00:50:19.986 --> 00:50:24.746 A:middle
from your application code.

00:50:24.956 --> 00:50:26.506 A:middle
Using the magic of a slide deck,

00:50:26.986 --> 00:50:28.136 A:middle
we're going to create a simple

00:50:28.136 --> 00:50:29.466 A:middle
AHAP file here.

00:50:30.136 --> 00:50:33.606 A:middle
We start with a version string,

00:50:34.056 --> 00:50:35.896 A:middle
which indicates which version of

00:50:35.896 --> 00:50:37.856 A:middle
the system this pattern was

00:50:38.296 --> 00:50:39.986 A:middle
designed for.

00:50:40.196 --> 00:50:41.816 A:middle
Next, we add the key for our

00:50:41.816 --> 00:50:43.616 A:middle
pattern, which will be an array

00:50:43.616 --> 00:50:44.516 A:middle
of dictionaries.

00:50:45.216 --> 00:50:48.476 A:middle
We add our first event

00:50:48.476 --> 00:50:50.026 A:middle
dictionary to our pattern array.

00:50:50.606 --> 00:50:52.956 A:middle
This event has two required key

00:50:52.956 --> 00:50:55.166 A:middle
value pairs, a time in seconds

00:50:55.166 --> 00:50:56.386 A:middle
at which the event should happen

00:50:57.646 --> 00:50:58.766 A:middle
relative to the start of the

00:50:58.766 --> 00:51:00.516 A:middle
pattern and the type of event.

00:50:58.766 --> 00:51:00.516 A:middle
pattern and the type of event.

00:51:01.316 --> 00:51:02.876 A:middle
This is a haptic transient event

00:51:02.876 --> 00:51:04.286 A:middle
starting as soon as the pattern

00:51:04.286 --> 00:51:04.886 A:middle
starts.

00:51:05.496 --> 00:51:09.066 A:middle
To this event, we add event

00:51:09.066 --> 00:51:10.466 A:middle
parameters, which will effect

00:51:10.466 --> 00:51:11.426 A:middle
only this event.

00:51:12.116 --> 00:51:13.486 A:middle
These are stored in their own

00:51:13.486 --> 00:51:14.736 A:middle
array of dictionaries.

00:51:16.086 --> 00:51:17.576 A:middle
We add an event parameter to

00:51:17.576 --> 00:51:19.376 A:middle
control the intensity of the

00:51:19.376 --> 00:51:20.916 A:middle
event and another to control its

00:51:20.916 --> 00:51:21.626 A:middle
sharpness.

00:51:25.086 --> 00:51:26.456 A:middle
We can add a second event in the

00:51:26.456 --> 00:51:27.186 A:middle
same fashion.

00:51:27.886 --> 00:51:29.376 A:middle
This one starts at an offset of

00:51:29.376 --> 00:51:31.186 A:middle
0.5 seconds from the first and

00:51:31.186 --> 00:51:33.026 A:middle
is of type Haptic Continuous.

00:51:33.766 --> 00:51:35.356 A:middle
For the event parameters, we use

00:51:35.356 --> 00:51:37.216 A:middle
the same as we had for the first

00:51:37.216 --> 00:51:37.526 A:middle
event.

00:51:40.036 --> 00:51:41.866 A:middle
Events of type Haptic Continuous

00:51:41.866 --> 00:51:44.166 A:middle
and Audio Continuous require an

00:51:44.166 --> 00:51:46.176 A:middle
event duration in addition to

00:51:46.176 --> 00:51:47.546 A:middle
the time and event type.

00:51:47.906 --> 00:51:49.376 A:middle
This duration value is always

00:51:49.376 --> 00:51:53.296 A:middle
specified in seconds.

00:51:53.396 --> 00:51:55.366 A:middle
Here is a visual representation

00:51:55.366 --> 00:51:57.036 A:middle
of the pattern we just created.

00:51:57.446 --> 00:51:58.576 A:middle
You can see the two type of

00:51:58.576 --> 00:52:01.706 A:middle
events, the Haptic Transient at

00:51:58.576 --> 00:52:01.706 A:middle
events, the Haptic Transient at

00:52:01.706 --> 00:52:03.016 A:middle
the very beginning, the

00:52:03.016 --> 00:52:04.676 A:middle
continuous later, with their

00:52:04.676 --> 00:52:06.546 A:middle
relative timing and duration and

00:52:06.546 --> 00:52:08.046 A:middle
their intensity and sharpness

00:52:08.126 --> 00:52:09.026 A:middle
parameter values.

00:52:09.506 --> 00:52:14.406 A:middle
That was a quick tour of AHAP.

00:52:14.406 --> 00:52:16.316 A:middle
This diagram shows a summary of

00:52:16.316 --> 00:52:18.186 A:middle
the AHAP file structure, a

00:52:18.186 --> 00:52:20.056 A:middle
single pattern consisting of an

00:52:20.056 --> 00:52:21.436 A:middle
array of event dictionaries,

00:52:22.806 --> 00:52:25.486 A:middle
optional dynamic parameters, and

00:52:25.486 --> 00:52:27.156 A:middle
optional use of parameter

00:52:27.156 --> 00:52:28.816 A:middle
curves, which are an extension

00:52:29.036 --> 00:52:31.086 A:middle
of dynamic parameters, which you

00:52:31.086 --> 00:52:32.886 A:middle
can read about more with the

00:52:32.886 --> 00:52:34.386 A:middle
information we have on the

00:52:34.386 --> 00:52:34.876 A:middle
website.

00:52:36.166 --> 00:52:37.886 A:middle
You can find a full link to the

00:52:37.886 --> 00:52:39.526 A:middle
AHAP specification on our

00:52:39.526 --> 00:52:43.356 A:middle
sessions page.

00:52:43.836 --> 00:52:45.126 A:middle
Also, on our sessions page,

00:52:45.126 --> 00:52:46.756 A:middle
you'll find a code example that

00:52:46.756 --> 00:52:48.526 A:middle
shows how to create, load, and

00:52:48.526 --> 00:52:50.086 A:middle
play the patterns described by

00:52:50.086 --> 00:52:50.786 A:middle
AHAP files.

00:52:51.216 --> 00:52:53.296 A:middle
This haptic sampler app includes

00:52:53.296 --> 00:52:54.716 A:middle
a range of patterns that

00:52:54.716 --> 00:52:56.756 A:middle
highlight the subtlety, dynamic

00:52:56.756 --> 00:52:58.526 A:middle
range, and audio haptic sync

00:52:58.796 --> 00:53:00.056 A:middle
that's possible with the Core

00:52:58.796 --> 00:53:00.056 A:middle
that's possible with the Core

00:53:00.056 --> 00:53:00.766 A:middle
Haptics API.

00:53:01.596 --> 00:53:03.656 A:middle
Thank you very much and now I'd

00:53:03.656 --> 00:53:05.096 A:middle
like to return the stage to my

00:53:05.096 --> 00:53:05.976 A:middle
colleague, Michael.

00:53:06.516 --> 00:53:13.416 A:middle
[ Applause ]

00:53:13.916 --> 00:53:14.406 A:middle
&gt;&gt; Thanks Doug.

00:53:15.286 --> 00:53:17.106 A:middle
So, although we covered a lot of

00:53:17.106 --> 00:53:19.336 A:middle
ground today, there is still

00:53:19.396 --> 00:53:21.186 A:middle
much more to discover with Core

00:53:21.186 --> 00:53:21.646 A:middle
Haptics.

00:53:22.996 --> 00:53:24.726 A:middle
Check out the online reference

00:53:24.726 --> 00:53:25.226 A:middle
for details.

00:53:25.916 --> 00:53:28.466 A:middle
Once you're up and running with

00:53:28.466 --> 00:53:29.856 A:middle
the basics of specifying

00:53:29.856 --> 00:53:31.506 A:middle
contents and playing that

00:53:31.506 --> 00:53:32.806 A:middle
content, you'll probably be

00:53:32.806 --> 00:53:34.606 A:middle
wondering about the design

00:53:34.606 --> 00:53:35.956 A:middle
principles for these joint

00:53:35.996 --> 00:53:36.916 A:middle
haptic audio patterns.

00:53:37.726 --> 00:53:40.636 A:middle
You'll be wondering, do the

00:53:40.636 --> 00:53:42.706 A:middle
rules, the guidelines for sound

00:53:42.706 --> 00:53:44.336 A:middle
design carry over to haptic

00:53:44.336 --> 00:53:44.786 A:middle
design?

00:53:45.086 --> 00:53:46.586 A:middle
What are some common pitfalls I

00:53:46.586 --> 00:53:47.286 A:middle
should be aware of?

00:53:48.256 --> 00:53:51.346 A:middle
The good news is that our audio

00:53:51.576 --> 00:53:52.996 A:middle
and haptic design teams have

00:53:52.996 --> 00:53:54.776 A:middle
been doing this for years, and

00:53:54.776 --> 00:53:56.156 A:middle
they've helped put together some

00:53:56.226 --> 00:53:57.776 A:middle
advice and guidance in an

00:53:57.776 --> 00:53:59.316 A:middle
updated human interface

00:53:59.316 --> 00:54:01.486 A:middle
guidelines or HIG for Haptics as

00:53:59.316 --> 00:54:01.486 A:middle
guidelines or HIG for Haptics as

00:54:01.486 --> 00:54:03.916 A:middle
well as in the accompanying talk

00:54:04.046 --> 00:54:05.886 A:middle
in WWDC this year.

00:54:06.646 --> 00:54:09.286 A:middle
Check it out.

00:54:09.546 --> 00:54:10.746 A:middle
So, let's recap.

00:54:11.026 --> 00:54:12.686 A:middle
Today we talked about where

00:54:12.686 --> 00:54:14.066 A:middle
haptics can help you reach for

00:54:14.066 --> 00:54:16.446 A:middle
that next level of emersion and

00:54:16.446 --> 00:54:18.346 A:middle
make your app interactions more

00:54:18.346 --> 00:54:18.796 A:middle
effortless.

00:54:20.136 --> 00:54:21.596 A:middle
Having synchronized and

00:54:21.596 --> 00:54:24.336 A:middle
complementary audio and haptics

00:54:24.366 --> 00:54:26.616 A:middle
together is a particularly

00:54:26.616 --> 00:54:29.376 A:middle
effective combination, but there

00:54:29.376 --> 00:54:31.136 A:middle
haven't been APIs that allows

00:54:31.136 --> 00:54:32.446 A:middle
you to actually do this.

00:54:32.756 --> 00:54:35.486 A:middle
With iOS 13, we now have the

00:54:35.486 --> 00:54:37.656 A:middle
necessary ingredients to create

00:54:37.656 --> 00:54:39.196 A:middle
these rich multimodal

00:54:39.196 --> 00:54:39.946 A:middle
experiences.

00:54:40.776 --> 00:54:42.836 A:middle
We have the vocabulary to

00:54:42.836 --> 00:54:44.396 A:middle
describe haptics and audio

00:54:44.396 --> 00:54:47.716 A:middle
events and a file format, AHAP.

00:54:48.926 --> 00:54:51.016 A:middle
We've got a new performant API,

00:54:51.016 --> 00:54:53.486 A:middle
Core Haptics, which is designed

00:54:53.486 --> 00:54:55.376 A:middle
for low latency and real-time

00:54:55.376 --> 00:54:55.986 A:middle
modulation.

00:54:56.556 --> 00:54:59.976 A:middle
We've put together sample code,

00:55:00.306 --> 00:55:02.736 A:middle
sample patterns, design

00:55:02.736 --> 00:55:04.196 A:middle
guidelines and support from

00:55:04.196 --> 00:55:04.506 A:middle
Apple.

00:55:05.386 --> 00:55:07.216 A:middle
And lastly, you've got an

00:55:07.216 --> 00:55:09.346 A:middle
incredible audience, incredible

00:55:09.346 --> 00:55:11.046 A:middle
hardware, where you can feel

00:55:11.046 --> 00:55:12.466 A:middle
your haptics as you intended.

00:55:12.956 --> 00:55:15.756 A:middle
A huge installed base of taptic

00:55:15.756 --> 00:55:17.476 A:middle
engines that give you the most

00:55:17.576 --> 00:55:20.016 A:middle
powerful, expressive, and

00:55:20.016 --> 00:55:21.506 A:middle
precise haptics hardware

00:55:21.506 --> 00:55:21.996 A:middle
available.

00:55:22.586 --> 00:55:25.846 A:middle
So, please come on down to the

00:55:25.846 --> 00:55:27.296 A:middle
labs on Thursday and Friday

00:55:27.396 --> 00:55:29.056 A:middle
where you can check out some of

00:55:29.056 --> 00:55:31.356 A:middle
these haptics samples that we

00:55:31.356 --> 00:55:34.066 A:middle
showed today and discuss your

00:55:34.066 --> 00:55:35.156 A:middle
own ideas for your apps.

00:55:35.856 --> 00:55:37.446 A:middle
You'll also find all of these

00:55:38.596 --> 00:55:40.386 A:middle
guidelines and reference online

00:55:40.446 --> 00:55:41.446 A:middle
at our sessions page.

00:55:41.936 --> 00:55:44.366 A:middle
I know you're going to have a

00:55:44.366 --> 00:55:47.186 A:middle
lot of fun creating and using

00:55:47.186 --> 00:55:48.346 A:middle
these haptic patterns in your

00:55:48.346 --> 00:55:48.596 A:middle
apps.

00:55:49.136 --> 00:55:50.736 A:middle
We can't wait to hear and feel

00:55:50.836 --> 00:55:51.516 A:middle
what you come up with.

00:55:52.176 --> 00:55:52.976 A:middle
Thank you and good night.

00:55:53.516 --> 00:56:03.390 A:middle
[ Applause ]
