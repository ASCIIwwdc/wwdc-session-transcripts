WEBVTT

00:00:01.176 --> 00:00:04.500 A:middle
[ Music ]

00:00:07.516 --> 00:00:13.686 A:middle
[ Applause ]

00:00:14.186 --> 00:00:14.836 A:middle
&gt;&gt; Good afternoon.

00:00:15.616 --> 00:00:16.926 A:middle
My name is Anders, and I work on

00:00:16.996 --> 00:00:17.356 A:middle
Xcode.

00:00:18.376 --> 00:00:19.696 A:middle
In this session, I and my

00:00:19.696 --> 00:00:20.806 A:middle
colleague, Balraj, will be

00:00:20.806 --> 00:00:22.246 A:middle
talking about how to use Swift

00:00:22.316 --> 00:00:23.946 A:middle
Packages from Xcode Projects.

00:00:26.106 --> 00:00:27.526 A:middle
The Swift Package Manager is

00:00:27.576 --> 00:00:28.866 A:middle
part of the Open Source Swift

00:00:28.866 --> 00:00:29.396 A:middle
tool chain.

00:00:29.656 --> 00:00:31.536 A:middle
It was introduced in Swift 3.

00:00:32.296 --> 00:00:34.286 A:middle
And since then, a lot of Swift

00:00:34.336 --> 00:00:35.486 A:middle
Packages have been created.

00:00:36.686 --> 00:00:38.506 A:middle
Also, a lot of Open Source

00:00:38.506 --> 00:00:40.216 A:middle
libraries that were written for

00:00:40.216 --> 00:00:41.736 A:middle
other package managers have been

00:00:41.736 --> 00:00:42.986 A:middle
adapted to be compatible with

00:00:42.986 --> 00:00:43.956 A:middle
the Swift Package Manager.

00:00:44.426 --> 00:00:48.126 A:middle
Swift Packages let you manage

00:00:48.126 --> 00:00:49.546 A:middle
your versions of your

00:00:49.546 --> 00:00:51.496 A:middle
dependencies, making sure that

00:00:51.496 --> 00:00:53.176 A:middle
you get bug fixes without

00:00:53.176 --> 00:00:54.596 A:middle
subjecting your code to

00:00:54.596 --> 00:00:56.116 A:middle
source-breaking changes as the

00:00:56.116 --> 00:00:57.706 A:middle
packages you depend on update.

00:00:59.066 --> 00:01:00.466 A:middle
Swift Packages are also a great

00:00:59.066 --> 00:01:00.466 A:middle
Swift Packages are also a great

00:01:00.466 --> 00:01:02.516 A:middle
way for your own -- to share

00:01:02.516 --> 00:01:03.736 A:middle
code among your own apps,

00:01:04.105 --> 00:01:05.146 A:middle
whether that's within a small

00:01:05.146 --> 00:01:07.556 A:middle
team, a large organization, or

00:01:07.556 --> 00:01:08.996 A:middle
maybe just among apps that

00:01:08.996 --> 00:01:10.486 A:middle
you're working on by yourself.

00:01:12.966 --> 00:01:15.736 A:middle
And now in Xcode 11, you can

00:01:15.736 --> 00:01:17.356 A:middle
access Swift Packages directly

00:01:17.356 --> 00:01:18.456 A:middle
from Xcode projects.

00:01:20.516 --> 00:01:22.666 A:middle
[ Applause ]

00:01:23.166 --> 00:01:23.826 A:middle
We're excited too.

00:01:26.096 --> 00:01:27.336 A:middle
So in this session, we're going

00:01:27.336 --> 00:01:28.816 A:middle
to start by talking about how to

00:01:28.816 --> 00:01:30.336 A:middle
use a package, how to extend the

00:01:30.336 --> 00:01:31.846 A:middle
functionality of an app by using

00:01:31.846 --> 00:01:32.376 A:middle
a package.

00:01:32.806 --> 00:01:34.066 A:middle
We're then going to talk a bit

00:01:34.066 --> 00:01:35.486 A:middle
about what exactly is in a

00:01:35.486 --> 00:01:37.016 A:middle
package, how they construct it,

00:01:37.016 --> 00:01:38.636 A:middle
what's in the data store -- in

00:01:38.636 --> 00:01:39.756 A:middle
the file format of a package.

00:01:40.846 --> 00:01:41.856 A:middle
When we talk about package

00:01:41.856 --> 00:01:43.846 A:middle
resolution, how Xcode fetches

00:01:43.846 --> 00:01:45.296 A:middle
the right versions of packages

00:01:45.296 --> 00:01:46.416 A:middle
and incorporates them into your

00:01:46.416 --> 00:01:46.626 A:middle
app.

00:01:46.666 --> 00:01:48.396 A:middle
We're going to talk then a

00:01:48.396 --> 00:01:49.586 A:middle
little bit about updating

00:01:49.586 --> 00:01:50.806 A:middle
packages, what happens when a

00:01:50.806 --> 00:01:52.146 A:middle
new version of a package's

00:01:52.146 --> 00:01:53.656 A:middle
update is published, and how you

00:01:53.656 --> 00:01:55.706 A:middle
can take advantage of that.

00:01:55.706 --> 00:01:57.176 A:middle
And we're going to talk about

00:01:57.176 --> 00:01:59.376 A:middle
resolving any version conflicts

00:01:59.376 --> 00:02:01.446 A:middle
that might happen as you update

00:01:59.376 --> 00:02:01.446 A:middle
that might happen as you update

00:02:01.446 --> 00:02:02.036 A:middle
the packages.

00:02:03.396 --> 00:02:04.796 A:middle
So let's get started by

00:02:04.796 --> 00:02:06.786 A:middle
extending NAP functionality to

00:02:06.786 --> 00:02:07.976 A:middle
take advantage of packages.

00:02:18.126 --> 00:02:19.226 A:middle
Here, we have a little iPhone

00:02:19.226 --> 00:02:22.486 A:middle
app that simply shows the, some

00:02:22.486 --> 00:02:24.146 A:middle
of the lunch menu offerings of

00:02:24.146 --> 00:02:26.956 A:middle
some of the cafes around where I

00:02:26.956 --> 00:02:27.046 A:middle
work.

00:02:27.046 --> 00:02:28.386 A:middle
We see that there are two here,

00:02:28.386 --> 00:02:29.346 A:middle
entries.

00:02:29.346 --> 00:02:30.906 A:middle
It's a SwiftUI app.

00:02:30.906 --> 00:02:32.196 A:middle
So I can see the preview and

00:02:32.196 --> 00:02:33.586 A:middle
Xcode without having to run my

00:02:33.586 --> 00:02:33.826 A:middle
app.

00:02:35.676 --> 00:02:37.196 A:middle
So we see that the lunch menu

00:02:37.256 --> 00:02:38.686 A:middle
from two different places are

00:02:38.686 --> 00:02:39.856 A:middle
showing up.

00:02:39.966 --> 00:02:41.576 A:middle
In the real version of this app,

00:02:41.686 --> 00:02:42.806 A:middle
we would fetch this data over

00:02:42.806 --> 00:02:43.256 A:middle
the network.

00:02:44.056 --> 00:02:45.616 A:middle
But in this demo app here, I

00:02:45.616 --> 00:02:47.076 A:middle
just have them as local files

00:02:47.076 --> 00:02:48.136 A:middle
among my source.

00:02:48.176 --> 00:02:49.606 A:middle
So you could say that this menu

00:02:49.606 --> 00:02:50.456 A:middle
is locally sourced.

00:02:51.286 --> 00:02:53.286 A:middle
[ Laughter ]

00:02:53.556 --> 00:02:55.996 A:middle
So these two JSON files are

00:02:55.996 --> 00:02:57.226 A:middle
showing up just fine.

00:02:57.326 --> 00:02:59.596 A:middle
But this cafe here is a bit more

00:02:59.596 --> 00:03:00.856 A:middle
modern and upscale.

00:02:59.596 --> 00:03:00.856 A:middle
modern and upscale.

00:03:00.856 --> 00:03:02.046 A:middle
And so they have a YAML menu,

00:03:02.176 --> 00:03:02.376 A:middle
right?

00:03:02.376 --> 00:03:04.346 A:middle
So we're not able to parse that.

00:03:04.346 --> 00:03:05.246 A:middle
And we're not seeing that.

00:03:05.756 --> 00:03:06.516 A:middle
So let's take a look at the

00:03:06.516 --> 00:03:07.906 A:middle
source code that loads this

00:03:08.066 --> 00:03:08.616 A:middle
data.

00:03:09.246 --> 00:03:10.636 A:middle
We see here that we handle JSON,

00:03:10.636 --> 00:03:11.926 A:middle
but we don't handle YAML.

00:03:12.146 --> 00:03:14.126 A:middle
So now fortunately, I know of a

00:03:14.126 --> 00:03:15.826 A:middle
library that can parse YAML

00:03:15.996 --> 00:03:16.326 A:middle
great.

00:03:16.506 --> 00:03:17.576 A:middle
And it has a nice Swift

00:03:17.576 --> 00:03:18.066 A:middle
interface.

00:03:18.316 --> 00:03:20.126 A:middle
So it's called Yams.

00:03:20.126 --> 00:03:21.176 A:middle
And I'm going to go and use

00:03:21.176 --> 00:03:21.456 A:middle
that.

00:03:22.666 --> 00:03:24.006 A:middle
And to do that I bring down to

00:03:24.006 --> 00:03:24.786 A:middle
file menu.

00:03:25.056 --> 00:03:27.286 A:middle
I go to this new Swift Packages

00:03:27.286 --> 00:03:29.746 A:middle
submenu, and Add Package

00:03:29.746 --> 00:03:30.366 A:middle
Dependency.

00:03:30.366 --> 00:03:31.606 A:middle
Now this submenu has a couple of

00:03:31.606 --> 00:03:33.226 A:middle
other menu commands to deal with

00:03:33.226 --> 00:03:34.656 A:middle
packages once they're in your

00:03:34.656 --> 00:03:34.836 A:middle
app.

00:03:35.736 --> 00:03:37.696 A:middle
But you said Package Dependency.

00:03:38.246 --> 00:03:40.226 A:middle
And here, I see, because I added

00:03:40.276 --> 00:03:42.006 A:middle
my GitHub accounts to Swift --

00:03:42.006 --> 00:03:44.136 A:middle
to Xcode's preferences, I see

00:03:44.136 --> 00:03:45.406 A:middle
here all of the package

00:03:45.406 --> 00:03:47.146 A:middle
repositories in that account.

00:03:47.546 --> 00:03:48.676 A:middle
And I also see any other

00:03:48.676 --> 00:03:50.006 A:middle
repositories that I've starred.

00:03:51.086 --> 00:03:52.326 A:middle
In this case, I've starred Yams

00:03:52.326 --> 00:03:52.566 A:middle
here.

00:03:53.246 --> 00:03:55.376 A:middle
But I could also, if I had a URL

00:03:55.376 --> 00:03:57.066 A:middle
for a package, I could enter it

00:03:57.066 --> 00:03:57.286 A:middle
here.

00:03:58.506 --> 00:04:00.146 A:middle
In this case, I'm going to click

00:03:58.506 --> 00:04:00.146 A:middle
In this case, I'm going to click

00:04:00.146 --> 00:04:01.696 A:middle
on the readme link here and go

00:04:01.736 --> 00:04:03.506 A:middle
to the homepage for the Yams

00:04:03.546 --> 00:04:04.056 A:middle
projects.

00:04:04.056 --> 00:04:04.716 A:middle
That that looks good.

00:04:05.836 --> 00:04:07.486 A:middle
I'm going to go take a look here

00:04:07.486 --> 00:04:07.826 A:middle
at the API.

00:04:07.826 --> 00:04:10.606 A:middle
That looks like what I need.

00:04:11.126 --> 00:04:11.956 A:middle
Now, of course, when you're

00:04:11.956 --> 00:04:13.626 A:middle
using an Open Source library,

00:04:13.626 --> 00:04:14.716 A:middle
you're bringing somebody else's

00:04:14.716 --> 00:04:15.656 A:middle
code into your app.

00:04:15.736 --> 00:04:16.745 A:middle
So there are a lot of things you

00:04:16.745 --> 00:04:17.586 A:middle
want to be careful with.

00:04:17.586 --> 00:04:18.636 A:middle
You want to make sure you trust

00:04:18.676 --> 00:04:19.815 A:middle
the source of that package.

00:04:20.546 --> 00:04:21.536 A:middle
You want to make sure that you

00:04:21.536 --> 00:04:22.686 A:middle
know exactly what this library

00:04:22.686 --> 00:04:23.766 A:middle
is doing, so you don't have any

00:04:23.766 --> 00:04:24.526 A:middle
surprises.

00:04:24.966 --> 00:04:26.206 A:middle
And you want to make sure that

00:04:26.206 --> 00:04:27.966 A:middle
the license for this Open Source

00:04:27.966 --> 00:04:29.396 A:middle
library is compatible with your

00:04:29.396 --> 00:04:30.126 A:middle
app's license.

00:04:31.226 --> 00:04:32.516 A:middle
So I've done all that.

00:04:32.566 --> 00:04:33.526 A:middle
And so I'm going to go back to

00:04:33.526 --> 00:04:34.086 A:middle
Xcode.

00:04:34.086 --> 00:04:35.696 A:middle
And I'm going to just click Next

00:04:35.696 --> 00:04:36.016 A:middle
here.

00:04:36.016 --> 00:04:37.126 A:middle
And we're going to add a

00:04:37.126 --> 00:04:38.956 A:middle
reference, a dependency on yams.

00:04:40.396 --> 00:04:41.976 A:middle
Now Xcode shows me the versions

00:04:41.976 --> 00:04:42.796 A:middle
that are available.

00:04:42.926 --> 00:04:44.486 A:middle
And it automatically sets me up

00:04:44.556 --> 00:04:46.556 A:middle
to use the latest version of the

00:04:46.556 --> 00:04:46.966 A:middle
package.

00:04:46.966 --> 00:04:47.826 A:middle
We're going to talk a little bit

00:04:47.856 --> 00:04:49.206 A:middle
more about the details of these

00:04:49.206 --> 00:04:50.766 A:middle
options later on in the talk.

00:04:51.566 --> 00:04:52.856 A:middle
But most often, the default

00:04:52.856 --> 00:04:54.246 A:middle
option here is the one you want.

00:04:54.246 --> 00:04:57.486 A:middle
It's using version 2.0 anyway,

00:04:57.486 --> 00:04:59.636 A:middle
up to, but not including, the

00:04:59.636 --> 00:05:00.586 A:middle
next major version.

00:04:59.636 --> 00:05:00.586 A:middle
next major version.

00:05:00.746 --> 00:05:02.746 A:middle
I'm going to click Next.

00:05:04.136 --> 00:05:05.156 A:middle
Now Xcode is fetching the

00:05:05.156 --> 00:05:06.956 A:middle
contents of the Yams package.

00:05:07.476 --> 00:05:10.516 A:middle
And it preselects for me the

00:05:10.516 --> 00:05:11.466 A:middle
single product here.

00:05:11.466 --> 00:05:12.556 A:middle
Some packages can have more than

00:05:12.556 --> 00:05:13.116 A:middle
one product.

00:05:13.116 --> 00:05:14.226 A:middle
In this case, there's one.

00:05:14.226 --> 00:05:14.896 A:middle
It's a library.

00:05:15.356 --> 00:05:16.556 A:middle
Same name as the package.

00:05:17.136 --> 00:05:18.106 A:middle
And if you have more than one

00:05:18.106 --> 00:05:19.366 A:middle
app in your project, you can

00:05:19.366 --> 00:05:20.336 A:middle
choose where you want to link

00:05:20.336 --> 00:05:20.476 A:middle
it.

00:05:20.476 --> 00:05:21.666 A:middle
And in this case, it's just the

00:05:21.666 --> 00:05:22.706 A:middle
one, so I'm going to link it to

00:05:22.706 --> 00:05:23.186 A:middle
the Lunch app.

00:05:23.766 --> 00:05:25.566 A:middle
And I hit finish.

00:05:27.026 --> 00:05:27.956 A:middle
Now we see a couple of things

00:05:27.956 --> 00:05:28.176 A:middle
here.

00:05:28.296 --> 00:05:30.126 A:middle
For one, Xcode has added a

00:05:30.126 --> 00:05:32.526 A:middle
reference to the Yams Package

00:05:32.656 --> 00:05:34.546 A:middle
Dependency to the new Swift

00:05:34.546 --> 00:05:35.876 A:middle
Packages tab in my Project

00:05:35.876 --> 00:05:36.206 A:middle
Editor.

00:05:37.706 --> 00:05:38.926 A:middle
We also see that the Yams

00:05:38.926 --> 00:05:40.546 A:middle
Package has shown up down here

00:05:41.126 --> 00:05:43.126 A:middle
in Swift Package Dependency

00:05:43.126 --> 00:05:43.576 A:middle
section.

00:05:45.356 --> 00:05:46.386 A:middle
We're not going to look in that

00:05:46.386 --> 00:05:47.916 A:middle
package right -- just now.

00:05:47.916 --> 00:05:48.606 A:middle
We're going to take a look in a

00:05:48.606 --> 00:05:48.986 A:middle
moment.

00:05:48.986 --> 00:05:50.086 A:middle
What we're going to do now,

00:05:50.086 --> 00:05:51.556 A:middle
though, is to go into the food

00:05:51.556 --> 00:05:52.246 A:middle
menu again.

00:05:52.346 --> 00:05:53.286 A:middle
And now, we're going to make use

00:05:53.286 --> 00:05:54.496 A:middle
of this from within our code.

00:05:54.496 --> 00:05:56.866 A:middle
So I'm going to type import Yams

00:05:56.866 --> 00:05:57.056 A:middle
here.

00:05:57.186 --> 00:05:58.306 A:middle
And we see we have code

00:05:58.306 --> 00:05:59.736 A:middle
completion against the import

00:05:59.736 --> 00:06:00.046 A:middle
name.

00:05:59.736 --> 00:06:00.046 A:middle
name.

00:06:00.316 --> 00:06:02.356 A:middle
And I can also Command-Click on

00:06:02.356 --> 00:06:04.316 A:middle
this import statement here.

00:06:04.316 --> 00:06:05.886 A:middle
I can jump to the definition.

00:06:05.886 --> 00:06:07.046 A:middle
And here I see the rendered

00:06:07.046 --> 00:06:09.766 A:middle
version of the documentation for

00:06:09.766 --> 00:06:10.896 A:middle
the interface for the Yams

00:06:11.166 --> 00:06:11.496 A:middle
Project.

00:06:12.706 --> 00:06:13.736 A:middle
And all of this comes from the

00:06:13.736 --> 00:06:14.936 A:middle
documentation comments in the

00:06:14.936 --> 00:06:16.246 A:middle
source that was included in the

00:06:16.246 --> 00:06:16.686 A:middle
package.

00:06:16.686 --> 00:06:19.306 A:middle
So I go back to my code.

00:06:19.306 --> 00:06:21.766 A:middle
I'm going to add another case

00:06:22.336 --> 00:06:22.436 A:middle
here.

00:06:22.646 --> 00:06:25.226 A:middle
Case, YAML.

00:06:26.516 --> 00:06:29.806 A:middle
I'm going to type -- just type

00:06:30.146 --> 00:06:30.956 A:middle
YAML decoder.

00:06:30.956 --> 00:06:33.246 A:middle
I have code completion for all

00:06:33.246 --> 00:06:34.356 A:middle
of the library methods.

00:06:34.356 --> 00:06:35.696 A:middle
And I have Quick Help, because

00:06:35.746 --> 00:06:36.716 A:middle
the package includes that.

00:06:36.716 --> 00:06:38.656 A:middle
So this looks and feels just

00:06:38.656 --> 00:06:40.516 A:middle
like the built-in APIs in terms

00:06:40.516 --> 00:06:42.196 A:middle
of the quality of the support

00:06:42.196 --> 00:06:42.466 A:middle
you get.

00:06:42.946 --> 00:06:44.856 A:middle
I'm going to use this method.

00:06:45.236 --> 00:06:46.836 A:middle
I'm going to be using the same

00:06:47.266 --> 00:06:48.666 A:middle
first parameters for the JSON

00:06:48.666 --> 00:06:49.036 A:middle
case.

00:06:49.766 --> 00:06:51.126 A:middle
Now this API happens to take a

00:06:51.126 --> 00:06:52.256 A:middle
string instead of data.

00:06:52.406 --> 00:06:53.486 A:middle
So I'm going to be using that.

00:06:53.836 --> 00:06:54.786 A:middle
And I don't need the third

00:06:54.786 --> 00:06:56.326 A:middle
parameter here, because I'll

00:06:56.326 --> 00:06:57.476 A:middle
just use the default value.

00:06:58.426 --> 00:07:00.356 A:middle
So now, we can go back again to

00:06:58.426 --> 00:07:00.356 A:middle
So now, we can go back again to

00:07:00.356 --> 00:07:01.236 A:middle
the list view.

00:07:01.866 --> 00:07:02.936 A:middle
And because this is a pretty big

00:07:02.936 --> 00:07:04.406 A:middle
change, importing a new module,

00:07:04.406 --> 00:07:05.846 A:middle
I'm going to hit resume.

00:07:05.846 --> 00:07:07.216 A:middle
Xcode is going to rebuild the

00:07:07.216 --> 00:07:08.306 A:middle
application in the background.

00:07:08.306 --> 00:07:09.816 A:middle
And I'm going to see the preview

00:07:09.816 --> 00:07:10.006 A:middle
here.

00:07:10.616 --> 00:07:11.866 A:middle
And now we see that I see the

00:07:11.866 --> 00:07:13.716 A:middle
contents from the YAML data file

00:07:13.716 --> 00:07:13.976 A:middle
as well.

00:07:14.516 --> 00:07:20.056 A:middle
[ Applause ]

00:07:20.556 --> 00:07:21.666 A:middle
All right, so now I can commit

00:07:21.696 --> 00:07:22.886 A:middle
this to my repository.

00:07:24.356 --> 00:07:26.786 A:middle
And we see here what we expect.

00:07:26.786 --> 00:07:28.406 A:middle
We see the source changes.

00:07:28.406 --> 00:07:29.346 A:middle
Let me make that a bit bigger.

00:07:30.186 --> 00:07:31.356 A:middle
We see the source changes that I

00:07:31.356 --> 00:07:32.736 A:middle
made, of course and it's part of

00:07:32.736 --> 00:07:33.416 A:middle
the commit sheets.

00:07:33.786 --> 00:07:34.906 A:middle
We also see that the project

00:07:34.906 --> 00:07:35.826 A:middle
file has changed, because I've

00:07:35.826 --> 00:07:37.466 A:middle
added the reference to the Yams

00:07:37.466 --> 00:07:37.896 A:middle
Package.

00:07:38.286 --> 00:07:39.756 A:middle
And we see one more thing here,

00:07:39.756 --> 00:07:42.236 A:middle
which is Xcode has created a

00:07:42.236 --> 00:07:44.146 A:middle
directory called SwiftPM, that's

00:07:44.146 --> 00:07:45.376 A:middle
for the Swift Package Manager,

00:07:45.806 --> 00:07:46.926 A:middle
underneath the shared data,

00:07:46.926 --> 00:07:48.146 A:middle
underneath the workspace.

00:07:48.146 --> 00:07:49.266 A:middle
And you want to check that in,

00:07:49.266 --> 00:07:50.786 A:middle
because we'll talk about what

00:07:50.786 --> 00:07:52.316 A:middle
exactly is in there later on in

00:07:52.316 --> 00:07:52.736 A:middle
the talk.

00:07:52.866 --> 00:07:54.756 A:middle
But Xcode stores information

00:07:54.756 --> 00:07:56.056 A:middle
about the package versions that

00:07:56.056 --> 00:07:56.536 A:middle
resolved.

00:07:56.536 --> 00:07:58.156 A:middle
And you want to check that in so

00:07:58.156 --> 00:07:59.646 A:middle
that everybody on your team gets

00:07:59.676 --> 00:08:00.466 A:middle
the same versions.

00:07:59.676 --> 00:08:00.466 A:middle
the same versions.

00:08:00.996 --> 00:08:05.456 A:middle
All right, so now I can check

00:08:05.456 --> 00:08:09.126 A:middle
this in and say useYAML.

00:08:10.506 --> 00:08:14.596 A:middle
And use. All right, go back to

00:08:14.596 --> 00:08:14.976 A:middle
slides.

00:08:18.686 --> 00:08:20.096 A:middle
All right, so we saw quickly how

00:08:20.096 --> 00:08:21.536 A:middle
to use an Open Source Package

00:08:21.536 --> 00:08:22.416 A:middle
from within a project.

00:08:22.466 --> 00:08:23.386 A:middle
Let's take a closer look at

00:08:23.386 --> 00:08:24.986 A:middle
what's in the YAML Package.

00:08:26.206 --> 00:08:30.006 A:middle
The Package is a directory that

00:08:30.006 --> 00:08:32.226 A:middle
contains a Swift Package

00:08:32.476 --> 00:08:33.076 A:middle
manifest.

00:08:33.515 --> 00:08:35.436 A:middle
The manifest is a file called

00:08:35.436 --> 00:08:37.436 A:middle
Package.swift, and it identifies

00:08:37.436 --> 00:08:38.856 A:middle
that directory as a Swift

00:08:38.916 --> 00:08:39.366 A:middle
Package.

00:08:39.706 --> 00:08:42.556 A:middle
It also contains sources and of

00:08:42.556 --> 00:08:43.856 A:middle
course, it contains unit tests

00:08:43.856 --> 00:08:44.896 A:middle
to make sure that those sources

00:08:44.896 --> 00:08:45.896 A:middle
continue functioning well.

00:08:47.366 --> 00:08:48.666 A:middle
Underneath the sources is a

00:08:48.666 --> 00:08:49.946 A:middle
subdirectory for each of the

00:08:49.946 --> 00:08:51.396 A:middle
separate targets in the package.

00:08:51.396 --> 00:08:52.406 A:middle
These are the separately

00:08:52.406 --> 00:08:53.436 A:middle
buildable components of the

00:08:53.436 --> 00:08:53.896 A:middle
package.

00:08:55.176 --> 00:08:56.396 A:middle
And similarly, under the test

00:08:56.396 --> 00:08:57.936 A:middle
directory, there's a separate

00:08:57.936 --> 00:08:59.336 A:middle
subdirectory for every test

00:08:59.336 --> 00:08:59.586 A:middle
suite.

00:09:01.496 --> 00:09:02.916 A:middle
So let's take a closer look at

00:09:03.036 --> 00:09:04.266 A:middle
what's in one of the target

00:09:04.266 --> 00:09:04.836 A:middle
directories.

00:09:05.486 --> 00:09:07.296 A:middle
Each of the targets can have

00:09:07.406 --> 00:09:09.126 A:middle
implementation that's either one

00:09:09.126 --> 00:09:11.266 A:middle
of the C-based languages or

00:09:11.336 --> 00:09:11.776 A:middle
Swift.

00:09:11.776 --> 00:09:13.636 A:middle
So in the case of YAML, there's

00:09:13.636 --> 00:09:15.976 A:middle
a core CYAML parser that's

00:09:15.976 --> 00:09:16.916 A:middle
written in C.

00:09:17.716 --> 00:09:18.756 A:middle
It could also contain

00:09:18.956 --> 00:09:20.316 A:middle
Objective-C++ files.

00:09:21.036 --> 00:09:22.256 A:middle
And then there's a Swift

00:09:22.256 --> 00:09:24.516 A:middle
interface in a separate target

00:09:24.516 --> 00:09:25.986 A:middle
on -- in addition to that, that

00:09:25.986 --> 00:09:27.556 A:middle
calls down into the CYAML code.

00:09:28.416 --> 00:09:30.476 A:middle
And then the unit tests here are

00:09:30.476 --> 00:09:30.976 A:middle
written in Swift.

00:09:34.306 --> 00:09:35.636 A:middle
So if we look at the contents of

00:09:35.636 --> 00:09:38.516 A:middle
the Swift Package Manifests, the

00:09:38.516 --> 00:09:40.796 A:middle
first line here is a declaration

00:09:40.796 --> 00:09:42.596 A:middle
of what the tool version the

00:09:42.596 --> 00:09:43.756 A:middle
package needs.

00:09:43.756 --> 00:09:45.456 A:middle
So this says the minimum version

00:09:45.456 --> 00:09:46.726 A:middle
that can parse this package

00:09:46.726 --> 00:09:47.766 A:middle
manifest at all.

00:09:48.966 --> 00:09:52.596 A:middle
The package description API is a

00:09:52.596 --> 00:09:54.346 A:middle
declarative API that is provided

00:09:54.346 --> 00:09:55.946 A:middle
by the Package Manager's package

00:09:55.946 --> 00:09:56.946 A:middle
description library.

00:09:57.366 --> 00:09:59.296 A:middle
And by importing that, then the

00:09:59.296 --> 00:10:00.746 A:middle
rest of the contents of this

00:09:59.296 --> 00:10:00.746 A:middle
rest of the contents of this

00:10:00.806 --> 00:10:02.446 A:middle
file can declare the

00:10:02.446 --> 00:10:04.436 A:middle
characteristics of the package.

00:10:05.806 --> 00:10:07.426 A:middle
That includes the name of the

00:10:07.426 --> 00:10:07.986 A:middle
package.

00:10:09.426 --> 00:10:10.816 A:middle
It also includes a section that

00:10:10.816 --> 00:10:12.076 A:middle
lists the products that the

00:10:12.076 --> 00:10:13.616 A:middle
package vends to the clients.

00:10:14.316 --> 00:10:15.936 A:middle
So the Package can control which

00:10:15.986 --> 00:10:17.606 A:middle
parts of its code can be

00:10:17.606 --> 00:10:18.936 A:middle
directly imported by the client.

00:10:18.936 --> 00:10:20.096 A:middle
And in this case, there is one

00:10:20.096 --> 00:10:22.516 A:middle
library with the same name as

00:10:22.516 --> 00:10:24.456 A:middle
the package, so called Yams.

00:10:25.166 --> 00:10:26.616 A:middle
We'll talk in a moment about the

00:10:26.616 --> 00:10:27.716 A:middle
targets part there.

00:10:27.996 --> 00:10:30.016 A:middle
It basically says that this

00:10:30.016 --> 00:10:32.356 A:middle
library publishes the Yams

00:10:32.356 --> 00:10:34.956 A:middle
target to clients as a library.

00:10:36.976 --> 00:10:38.736 A:middle
The target section lists the

00:10:38.736 --> 00:10:40.156 A:middle
individually buildable parts of

00:10:40.156 --> 00:10:40.856 A:middle
the package.

00:10:41.106 --> 00:10:42.566 A:middle
And as we see here, there is a

00:10:42.566 --> 00:10:43.726 A:middle
one-to-one correspondence

00:10:43.726 --> 00:10:46.646 A:middle
between the source folders and

00:10:46.876 --> 00:10:47.486 A:middle
the targets.

00:10:48.096 --> 00:10:49.396 A:middle
Each of those source folders can

00:10:49.396 --> 00:10:50.676 A:middle
have other subfolders for

00:10:50.676 --> 00:10:51.916 A:middle
organizational purposes, but the

00:10:51.916 --> 00:10:54.316 A:middle
top level under sources is one

00:10:54.596 --> 00:10:55.936 A:middle
folder per packet, per target.

00:10:58.146 --> 00:10:59.866 A:middle
In this case, we see the CYAML

00:10:59.866 --> 00:11:01.126 A:middle
target listed without any

00:10:59.866 --> 00:11:01.126 A:middle
target listed without any

00:11:01.126 --> 00:11:01.786 A:middle
dependencies.

00:11:02.226 --> 00:11:04.706 A:middle
And the Yams target is listed as

00:11:04.706 --> 00:11:06.626 A:middle
depending on the CYAML target.

00:11:06.886 --> 00:11:08.606 A:middle
This means that when the product

00:11:08.866 --> 00:11:10.466 A:middle
refers to Yams, that will, in

00:11:10.466 --> 00:11:12.236 A:middle
turn, indirectly bring in CYAML

00:11:12.236 --> 00:11:12.516 A:middle
as well.

00:11:13.306 --> 00:11:15.076 A:middle
And then there's one test target

00:11:15.076 --> 00:11:17.146 A:middle
here for the unit tests.

00:11:17.496 --> 00:11:18.616 A:middle
This code won't actually be

00:11:18.616 --> 00:11:19.636 A:middle
linked into the client.

00:11:20.036 --> 00:11:21.766 A:middle
But it's necessary to make sure

00:11:21.766 --> 00:11:23.206 A:middle
your library keeps running

00:11:23.206 --> 00:11:23.596 A:middle
properly.

00:11:24.316 --> 00:11:26.506 A:middle
And in this case, the Yams

00:11:26.876 --> 00:11:28.726 A:middle
Package Manifest also lists some

00:11:28.796 --> 00:11:30.106 A:middle
older Swift versions that the

00:11:30.106 --> 00:11:31.226 A:middle
code is compatible with.

00:11:31.766 --> 00:11:33.716 A:middle
There are also other

00:11:33.716 --> 00:11:34.756 A:middle
characteristics that you can

00:11:34.756 --> 00:11:36.476 A:middle
specify and in this declarative

00:11:36.476 --> 00:11:38.856 A:middle
language, and we'll get to some

00:11:38.856 --> 00:11:39.326 A:middle
of those later.

00:11:39.926 --> 00:11:42.526 A:middle
So how is this then linked into

00:11:42.526 --> 00:11:44.416 A:middle
your app when you actually build

00:11:44.416 --> 00:11:45.286 A:middle
and run your app?

00:11:45.316 --> 00:11:46.656 A:middle
So your project consists of

00:11:46.656 --> 00:11:47.456 A:middle
source files.

00:11:47.786 --> 00:11:48.786 A:middle
So it could be Swift.

00:11:48.786 --> 00:11:49.896 A:middle
It could be other languages.

00:11:50.836 --> 00:11:52.156 A:middle
And the packages you depend on,

00:11:52.156 --> 00:11:53.436 A:middle
they're also source files.

00:11:54.116 --> 00:11:55.776 A:middle
And so what Xcode does is it

00:11:55.776 --> 00:11:56.966 A:middle
takes all of these source files,

00:11:56.966 --> 00:11:59.276 A:middle
and it compiles them and

00:11:59.456 --> 00:12:00.846 A:middle
particularly compiles the

00:11:59.456 --> 00:12:00.846 A:middle
particularly compiles the

00:12:00.846 --> 00:12:02.286 A:middle
package code in a way that is

00:12:02.286 --> 00:12:04.586 A:middle
compatible with the app code in

00:12:04.586 --> 00:12:05.126 A:middle
your project.

00:12:05.746 --> 00:12:07.056 A:middle
So this includes architectures,

00:12:07.096 --> 00:12:08.176 A:middle
platforms, those things.

00:12:08.906 --> 00:12:09.936 A:middle
It will recompile it multiple

00:12:09.936 --> 00:12:12.246 A:middle
times, if needed, depending on

00:12:12.306 --> 00:12:13.306 A:middle
what your apps need.

00:12:13.996 --> 00:12:16.356 A:middle
Then it links it in and combines

00:12:16.356 --> 00:12:17.976 A:middle
all of that into the

00:12:17.976 --> 00:12:18.596 A:middle
application.

00:12:19.716 --> 00:12:21.166 A:middle
Package libraries are static by

00:12:21.166 --> 00:12:21.606 A:middle
default.

00:12:22.036 --> 00:12:23.146 A:middle
And so all the code is linked

00:12:23.146 --> 00:12:23.526 A:middle
together.

00:12:24.836 --> 00:12:26.696 A:middle
And this is repeated for the

00:12:26.696 --> 00:12:28.756 A:middle
various apps in your project

00:12:28.756 --> 00:12:30.256 A:middle
that use the same package.

00:12:30.256 --> 00:12:32.086 A:middle
So if you have an iOS app and

00:12:32.086 --> 00:12:33.586 A:middle
WatchOS app, they use the same

00:12:33.586 --> 00:12:34.076 A:middle
package.

00:12:34.316 --> 00:12:35.436 A:middle
Xcode might build the code

00:12:35.436 --> 00:12:37.326 A:middle
multiple times as needed for

00:12:37.326 --> 00:12:37.976 A:middle
each of those apps.

00:12:41.526 --> 00:12:43.076 A:middle
Now, we saw a case where a

00:12:43.076 --> 00:12:44.766 A:middle
project can depend on a package.

00:12:45.306 --> 00:12:47.376 A:middle
And we saw that is shown in the

00:12:47.506 --> 00:12:50.326 A:middle
Package Dependencies part of the

00:12:50.326 --> 00:12:51.016 A:middle
target editor.

00:12:51.556 --> 00:12:53.396 A:middle
But a package can also depend on

00:12:53.396 --> 00:12:54.246 A:middle
other packages.

00:12:54.456 --> 00:12:55.616 A:middle
And this is done through the

00:12:55.616 --> 00:12:56.556 A:middle
package manifest.

00:12:57.596 --> 00:12:58.926 A:middle
So one of the sections of the

00:12:58.926 --> 00:13:00.506 A:middle
package manifest the Yams didn't

00:12:58.926 --> 00:13:00.506 A:middle
package manifest the Yams didn't

00:13:00.506 --> 00:13:02.466 A:middle
have was a Dependencies section.

00:13:02.466 --> 00:13:03.516 A:middle
It didn't have that because it

00:13:03.516 --> 00:13:04.576 A:middle
doesn't actually depend on other

00:13:04.576 --> 00:13:05.176 A:middle
packages.

00:13:05.696 --> 00:13:06.906 A:middle
But some Packages that you have

00:13:06.986 --> 00:13:07.296 A:middle
might.

00:13:07.416 --> 00:13:08.606 A:middle
And so the Package Dependency

00:13:08.606 --> 00:13:10.286 A:middle
graph can include both direct

00:13:10.286 --> 00:13:10.966 A:middle
and indirect dependencies.

00:13:14.846 --> 00:13:16.356 A:middle
Now, I mentioned before that you

00:13:16.356 --> 00:13:18.096 A:middle
can manage your versions with

00:13:18.246 --> 00:13:19.886 A:middle
pack -- the Package Manager.

00:13:20.296 --> 00:13:21.346 A:middle
And this uses something called

00:13:21.346 --> 00:13:22.136 A:middle
semantic versioning.

00:13:22.136 --> 00:13:23.896 A:middle
And that's a fairly widely used

00:13:23.896 --> 00:13:25.576 A:middle
strategy that assigns semantic

00:13:25.626 --> 00:13:26.596 A:middle
meaning to each of the

00:13:26.596 --> 00:13:27.776 A:middle
components of a three-part

00:13:27.776 --> 00:13:27.976 A:middle
version.

00:13:31.076 --> 00:13:32.426 A:middle
So in this case, for example,

00:13:32.486 --> 00:13:35.816 A:middle
the major version is incremented

00:13:35.816 --> 00:13:36.776 A:middle
whenever there are breaking

00:13:36.776 --> 00:13:37.796 A:middle
changes to the API.

00:13:38.476 --> 00:13:39.686 A:middle
So this is anything that would

00:13:39.686 --> 00:13:41.326 A:middle
cause the clients to have to be

00:13:41.326 --> 00:13:41.936 A:middle
modified.

00:13:41.936 --> 00:13:43.466 A:middle
For example, if you rename a

00:13:43.466 --> 00:13:45.806 A:middle
method or remove a method or if

00:13:45.806 --> 00:13:47.046 A:middle
a package makes a met -- a

00:13:47.046 --> 00:13:49.006 A:middle
semantically meaningful change

00:13:49.006 --> 00:13:51.206 A:middle
that will cause existing clients

00:13:51.206 --> 00:13:52.016 A:middle
to have to adapt.

00:13:53.046 --> 00:13:54.456 A:middle
This is the reason why the

00:13:54.456 --> 00:13:56.076 A:middle
initial version of restriction

00:13:56.076 --> 00:13:57.406 A:middle
goes up to, but not including,

00:13:57.406 --> 00:13:58.846 A:middle
the next major version number.

00:14:01.346 --> 00:14:02.636 A:middle
The minor version number of a

00:14:02.636 --> 00:14:04.566 A:middle
package is incremented when

00:14:04.616 --> 00:14:06.146 A:middle
functionality is added in a way

00:14:06.146 --> 00:14:07.296 A:middle
that doesn't break existing

00:14:07.296 --> 00:14:07.886 A:middle
clients.

00:14:08.146 --> 00:14:09.056 A:middle
So this could be adding a

00:14:09.056 --> 00:14:09.916 A:middle
method, for example.

00:14:12.046 --> 00:14:14.056 A:middle
And finally, the patch version

00:14:14.056 --> 00:14:15.786 A:middle
here is when there are bug fixes

00:14:15.786 --> 00:14:17.026 A:middle
that don't have any semantic

00:14:17.116 --> 00:14:18.576 A:middle
changes, semantic meaning

00:14:18.576 --> 00:14:18.996 A:middle
changes.

00:14:19.506 --> 00:14:22.236 A:middle
And packages can be safely

00:14:22.236 --> 00:14:25.856 A:middle
updated to bug fixes, to

00:14:25.856 --> 00:14:27.586 A:middle
incorporate bug fixes without

00:14:27.586 --> 00:14:28.676 A:middle
changing the semantics of the

00:14:28.676 --> 00:14:28.836 A:middle
app.

00:14:31.446 --> 00:14:32.586 A:middle
Okay, so we've seen how to use

00:14:32.586 --> 00:14:33.246 A:middle
the package.

00:14:33.296 --> 00:14:34.716 A:middle
And we've taken a closer look at

00:14:34.716 --> 00:14:35.476 A:middle
that package.

00:14:35.476 --> 00:14:36.766 A:middle
And now I'd like to invite my

00:14:36.766 --> 00:14:38.096 A:middle
colleague, Balraj, on the stage

00:14:38.096 --> 00:14:39.496 A:middle
to talk about Package Resolution

00:14:39.496 --> 00:14:39.976 A:middle
in more detail.

00:14:40.516 --> 00:14:45.846 A:middle
[ Applause ]

00:14:46.346 --> 00:14:47.096 A:middle
&gt;&gt; Thank you, Anders.

00:14:47.996 --> 00:14:49.116 A:middle
Package resolution is the

00:14:49.116 --> 00:14:51.116 A:middle
process Xcode goes through when

00:14:51.116 --> 00:14:52.126 A:middle
selecting the versions of

00:14:52.126 --> 00:14:54.146 A:middle
Packages to use inside of your

00:14:54.146 --> 00:14:54.766 A:middle
workspace.

00:14:55.226 --> 00:14:56.486 A:middle
Let's go into a little bit more

00:14:56.486 --> 00:14:58.116 A:middle
detail in how that was working

00:14:58.116 --> 00:14:59.696 A:middle
with -- and how that was working

00:14:59.976 --> 00:15:01.846 A:middle
in the Lunch project Anders was

00:14:59.976 --> 00:15:01.846 A:middle
in the Lunch project Anders was

00:15:01.846 --> 00:15:02.616 A:middle
demoing earlier.

00:15:05.336 --> 00:15:07.286 A:middle
So here in the Project Editor in

00:15:07.286 --> 00:15:09.126 A:middle
the Swift Packages tab, we can

00:15:09.126 --> 00:15:10.966 A:middle
see our dependency on -- our

00:15:11.006 --> 00:15:12.516 A:middle
Lunch's dependency on Yams.

00:15:12.816 --> 00:15:14.686 A:middle
Using the Version Rule 2 to up

00:15:14.686 --> 00:15:15.776 A:middle
to the next major version,

00:15:16.306 --> 00:15:18.366 A:middle
meaning any version of Yams from

00:15:18.366 --> 00:15:21.366 A:middle
2 up to, but not including 3.

00:15:21.706 --> 00:15:24.436 A:middle
Then, in the Swift Package

00:15:24.436 --> 00:15:25.516 A:middle
Dependencies section of the

00:15:25.516 --> 00:15:27.306 A:middle
Project Navigator, we can see

00:15:27.306 --> 00:15:29.156 A:middle
Yams at version 2.0.

00:15:30.446 --> 00:15:31.656 A:middle
Let's look a little deeper into

00:15:31.656 --> 00:15:31.866 A:middle
this.

00:15:34.086 --> 00:15:35.886 A:middle
Lunch is selecting Yams at

00:15:35.886 --> 00:15:37.506 A:middle
Version 2, because of its

00:15:37.506 --> 00:15:38.886 A:middle
version requirement, 2 up to the

00:15:38.886 --> 00:15:39.856 A:middle
next major version.

00:15:40.886 --> 00:15:43.266 A:middle
If a version 2.1 existed, Xcode

00:15:43.266 --> 00:15:44.206 A:middle
would have selected that

00:15:44.206 --> 00:15:46.676 A:middle
instead, as 2.1 is the latest

00:15:46.676 --> 00:15:48.276 A:middle
version matching our version

00:15:48.276 --> 00:15:48.876 A:middle
requirement.

00:15:49.886 --> 00:15:52.316 A:middle
However, if a version 3 existed,

00:15:52.316 --> 00:15:53.696 A:middle
Xcode would not have selected

00:15:53.696 --> 00:15:55.596 A:middle
it, as it doesn't fit into the

00:15:55.596 --> 00:15:57.396 A:middle
constraints that we specified.

00:15:58.746 --> 00:16:00.686 A:middle
In this case 2.1 and 3 are

00:15:58.746 --> 00:16:00.686 A:middle
In this case 2.1 and 3 are

00:16:00.686 --> 00:16:01.876 A:middle
hypothetical examples.

00:16:02.066 --> 00:16:03.986 A:middle
And you'll see Yams continue to

00:16:03.986 --> 00:16:05.706 A:middle
resolve at Version 2 throughout

00:16:05.706 --> 00:16:06.976 A:middle
the rest of this presentation.

00:16:08.416 --> 00:16:10.226 A:middle
In this example, there's one

00:16:10.226 --> 00:16:11.516 A:middle
package with one version to

00:16:11.566 --> 00:16:12.086 A:middle
choose from.

00:16:12.686 --> 00:16:14.136 A:middle
So let's go into a few more

00:16:14.136 --> 00:16:15.936 A:middle
interesting cases, where package

00:16:15.936 --> 00:16:17.206 A:middle
resolution can get a little bit

00:16:17.206 --> 00:16:17.976 A:middle
more complicated.

00:16:20.396 --> 00:16:22.096 A:middle
So here is the Lunch app that we

00:16:22.096 --> 00:16:22.746 A:middle
have today.

00:16:23.596 --> 00:16:25.316 A:middle
It has a very basic UI and is

00:16:25.316 --> 00:16:27.026 A:middle
only using one package, as we

00:16:27.026 --> 00:16:28.146 A:middle
just said.

00:16:29.596 --> 00:16:31.736 A:middle
My team, over time, adds more

00:16:31.736 --> 00:16:33.496 A:middle
packages to our application and

00:16:33.496 --> 00:16:35.216 A:middle
they use these packages to show

00:16:35.216 --> 00:16:37.036 A:middle
common design themes across all

00:16:37.036 --> 00:16:38.636 A:middle
the applications that my team

00:16:38.636 --> 00:16:38.966 A:middle
owns.

00:16:39.046 --> 00:16:41.386 A:middle
So when we go back to the Lunch

00:16:41.386 --> 00:16:43.116 A:middle
application, after a few weeks,

00:16:43.386 --> 00:16:46.616 A:middle
we can see that the UI has been

00:16:46.616 --> 00:16:47.976 A:middle
updated, and there are three

00:16:47.976 --> 00:16:49.886 A:middle
additional packages inside of

00:16:49.886 --> 00:16:50.676 A:middle
our workspace.

00:16:51.806 --> 00:16:53.436 A:middle
These three packages are

00:16:53.436 --> 00:16:55.626 A:middle
DesignFont, DesignTheme, and

00:16:55.626 --> 00:16:56.326 A:middle
DesignColor.

00:16:57.316 --> 00:16:58.746 A:middle
All resolving at their own

00:16:58.746 --> 00:17:00.006 A:middle
respective versions.

00:16:58.746 --> 00:17:00.006 A:middle
respective versions.

00:17:00.586 --> 00:17:03.696 A:middle
So Xcode did a lot of the work

00:17:03.696 --> 00:17:05.376 A:middle
for us in terms of selecting the

00:17:05.376 --> 00:17:06.465 A:middle
versions of these packages.

00:17:06.776 --> 00:17:08.626 A:middle
But I want to understand why

00:17:08.685 --> 00:17:10.256 A:middle
these packages are resolving at

00:17:10.256 --> 00:17:10.935 A:middle
these versions.

00:17:11.336 --> 00:17:14.336 A:middle
So in order to do so, I go back

00:17:14.376 --> 00:17:14.976 A:middle
to the Project Editor.

00:17:18.656 --> 00:17:19.915 A:middle
Here in the Swift Package

00:17:19.915 --> 00:17:21.685 A:middle
Dependency section, we can see

00:17:21.826 --> 00:17:23.185 A:middle
our new dependency on

00:17:23.185 --> 00:17:24.925 A:middle
DesignTheme, with a Version Rule

00:17:24.925 --> 00:17:26.096 A:middle
1 one up to the next major

00:17:26.096 --> 00:17:26.476 A:middle
version.

00:17:28.415 --> 00:17:31.316 A:middle
Xcode, in this case, selects

00:17:31.316 --> 00:17:32.866 A:middle
DesignTheme at Version 1,

00:17:33.086 --> 00:17:35.116 A:middle
because it's resolving from 1 to

00:17:35.116 --> 00:17:35.976 A:middle
the next major version.

00:17:39.216 --> 00:17:40.386 A:middle
And so we also see our

00:17:40.386 --> 00:17:42.016 A:middle
dependency on Yams is still the

00:17:42.016 --> 00:17:42.316 A:middle
same.

00:17:43.056 --> 00:17:44.456 A:middle
And you might be wondering.

00:17:44.976 --> 00:17:46.536 A:middle
Where are DesignFont and

00:17:46.536 --> 00:17:47.976 A:middle
DesignColor in this case?

00:17:48.206 --> 00:17:49.126 A:middle
We're looking in the Project

00:17:49.126 --> 00:17:50.816 A:middle
Editor, but we don't see them

00:17:50.856 --> 00:17:51.516 A:middle
inside of there.

00:17:51.986 --> 00:17:53.586 A:middle
Well, the reason for this is the

00:17:53.586 --> 00:17:55.746 A:middle
Project Editor shows us all of

00:17:55.746 --> 00:17:57.256 A:middle
the direct dependencies between

00:17:57.256 --> 00:17:59.406 A:middle
the Lunch application and its

00:17:59.406 --> 00:18:00.386 A:middle
direct packages.

00:17:59.406 --> 00:18:00.386 A:middle
direct packages.

00:18:02.016 --> 00:18:04.556 A:middle
So in order to look at our

00:18:04.556 --> 00:18:06.426 A:middle
package's dependencies, we want

00:18:06.426 --> 00:18:07.706 A:middle
to go and look at the

00:18:07.706 --> 00:18:08.686 A:middle
DesignTheme package.

00:18:09.066 --> 00:18:10.456 A:middle
This is because it's the newest

00:18:10.456 --> 00:18:11.436 A:middle
package that was added to our

00:18:11.436 --> 00:18:11.986 A:middle
workspace.

00:18:12.296 --> 00:18:13.466 A:middle
And it's safe to assume that

00:18:13.466 --> 00:18:14.626 A:middle
they're not coming from Yams.

00:18:15.296 --> 00:18:16.956 A:middle
So in order to do so, we go back

00:18:16.956 --> 00:18:18.356 A:middle
to the high-level view of Xcode,

00:18:18.696 --> 00:18:20.476 A:middle
and look under the Swift Package

00:18:20.476 --> 00:18:21.376 A:middle
Dependencies section.

00:18:21.676 --> 00:18:23.256 A:middle
Here we see our package

00:18:23.256 --> 00:18:23.856 A:middle
DesignTheme.

00:18:24.396 --> 00:18:26.806 A:middle
We disclose the package and see

00:18:26.846 --> 00:18:28.496 A:middle
all the content available inside

00:18:28.496 --> 00:18:28.826 A:middle
of there.

00:18:28.826 --> 00:18:30.476 A:middle
And in this case, we want to

00:18:30.476 --> 00:18:31.706 A:middle
look at the Package.swift

00:18:31.706 --> 00:18:32.506 A:middle
manifest file.

00:18:33.246 --> 00:18:36.366 A:middle
This is because it is where we

00:18:36.366 --> 00:18:37.696 A:middle
will find all of our dependency

00:18:37.696 --> 00:18:39.326 A:middle
information for this package.

00:18:40.446 --> 00:18:41.426 A:middle
So we go to this file.

00:18:41.426 --> 00:18:43.086 A:middle
And in the dependencies array,

00:18:43.336 --> 00:18:44.896 A:middle
we see DesignFont and

00:18:44.896 --> 00:18:46.396 A:middle
DesignColor, and their version

00:18:46.396 --> 00:18:47.086 A:middle
requirements.

00:18:50.036 --> 00:18:52.076 A:middle
DesignFont is being resolved how

00:18:52.076 --> 00:18:54.006 A:middle
we've seen before, 1 up to the

00:18:54.006 --> 00:18:54.916 A:middle
next major version.

00:18:55.446 --> 00:18:56.846 A:middle
And so Xcode will select version

00:18:56.846 --> 00:18:59.166 A:middle
1.2 as it's the latest version

00:18:59.356 --> 00:18:59.976 A:middle
of the package.

00:19:03.176 --> 00:19:05.226 A:middle
DesignColor is resolved a little

00:19:05.226 --> 00:19:05.806 A:middle
bit differently.

00:19:06.136 --> 00:19:08.166 A:middle
This is using 1 up to the next

00:19:08.246 --> 00:19:10.536 A:middle
minor version, meaning any

00:19:10.536 --> 00:19:13.316 A:middle
version of designs color from 1,

00:19:13.876 --> 00:19:15.286 A:middle
and up to, but not including,

00:19:15.286 --> 00:19:15.946 A:middle
1.1.

00:19:16.556 --> 00:19:18.416 A:middle
This is typically used when

00:19:18.486 --> 00:19:19.746 A:middle
packages want to be a little bit

00:19:19.746 --> 00:19:21.106 A:middle
more conservative with the new

00:19:21.106 --> 00:19:22.356 A:middle
versions that they take during

00:19:22.356 --> 00:19:22.746 A:middle
updates.

00:19:23.256 --> 00:19:25.776 A:middle
And so Xcode selects Version

00:19:25.776 --> 00:19:28.176 A:middle
1.0.1 of the DesignColor

00:19:28.176 --> 00:19:28.716 A:middle
package.

00:19:29.646 --> 00:19:31.036 A:middle
So now this is the full view of

00:19:31.036 --> 00:19:32.136 A:middle
the new packages that have been

00:19:32.176 --> 00:19:33.206 A:middle
added and why they're being

00:19:33.206 --> 00:19:34.856 A:middle
resolved at the versions they

00:19:37.436 --> 00:19:37.516 A:middle
are.

00:19:37.786 --> 00:19:39.296 A:middle
You'll remember the last step

00:19:39.296 --> 00:19:40.766 A:middle
Anders did in the previous demo

00:19:40.956 --> 00:19:42.546 A:middle
was importing Yams and then

00:19:42.546 --> 00:19:43.506 A:middle
using its APIs.

00:19:43.906 --> 00:19:45.306 A:middle
Let's talk about how this works

00:19:45.426 --> 00:19:46.666 A:middle
and how it relates to package

00:19:46.666 --> 00:19:46.976 A:middle
resolution.

00:19:50.046 --> 00:19:50.936 A:middle
All of our packages are

00:19:50.936 --> 00:19:52.716 A:middle
producing libraries of the same

00:19:52.716 --> 00:19:52.976 A:middle
name.

00:19:55.046 --> 00:19:56.686 A:middle
And we can see that Lunch is

00:19:56.686 --> 00:19:57.626 A:middle
importing content from

00:19:57.626 --> 00:19:59.156 A:middle
DesignTheme and it's also

00:19:59.156 --> 00:20:00.376 A:middle
importing content from Yams.

00:19:59.156 --> 00:20:00.376 A:middle
importing content from Yams.

00:20:00.976 --> 00:20:03.176 A:middle
And then the DesignTheme library

00:20:03.176 --> 00:20:04.656 A:middle
is also importing content from

00:20:04.656 --> 00:20:05.966 A:middle
DesignFont and DesignColor.

00:20:08.116 --> 00:20:09.426 A:middle
When we look at the full graph

00:20:09.426 --> 00:20:11.316 A:middle
here, we can see this is very

00:20:11.316 --> 00:20:12.356 A:middle
similar to how package

00:20:12.356 --> 00:20:13.336 A:middle
resolution is working.

00:20:13.686 --> 00:20:15.076 A:middle
And that is intentional.

00:20:15.556 --> 00:20:16.786 A:middle
When we added our direct

00:20:16.786 --> 00:20:19.726 A:middle
dependencies on our packages, we

00:20:19.726 --> 00:20:21.226 A:middle
also ended up importing their

00:20:21.226 --> 00:20:22.786 A:middle
content and actually using the

00:20:22.786 --> 00:20:24.106 A:middle
APIs in our application.

00:20:24.446 --> 00:20:27.026 A:middle
But what happens when I want to

00:20:27.026 --> 00:20:28.536 A:middle
import content from a sub

00:20:28.536 --> 00:20:30.576 A:middle
dependency into our project?

00:20:31.766 --> 00:20:33.086 A:middle
So let's talk about how we would

00:20:33.086 --> 00:20:33.616 A:middle
do this.

00:20:36.046 --> 00:20:37.416 A:middle
We have our Lunch project, which

00:20:37.416 --> 00:20:38.606 A:middle
is depending on DesignTheme.

00:20:39.376 --> 00:20:40.776 A:middle
And DesignTheme is depending on

00:20:40.776 --> 00:20:42.096 A:middle
the DesignFont package.

00:20:42.886 --> 00:20:44.496 A:middle
The DesignFont package is

00:20:44.496 --> 00:20:45.906 A:middle
producing a library of the same

00:20:45.906 --> 00:20:46.186 A:middle
name.

00:20:46.976 --> 00:20:48.686 A:middle
In this context, we don't want

00:20:48.686 --> 00:20:50.226 A:middle
to immediately import content

00:20:50.406 --> 00:20:52.186 A:middle
from DesignFont into Lunch,

00:20:52.516 --> 00:20:56.126 A:middle
because if DesignTheme loses its

00:20:56.126 --> 00:20:57.526 A:middle
dependency on DesignFont and

00:20:57.526 --> 00:20:59.336 A:middle
Update, Xcode will lose its

00:20:59.336 --> 00:21:00.446 A:middle
reference to DesignFont.

00:20:59.336 --> 00:21:00.446 A:middle
reference to DesignFont.

00:21:00.446 --> 00:21:02.986 A:middle
And now, we won't be able to use

00:21:02.986 --> 00:21:04.106 A:middle
the DesignFont library.

00:21:05.136 --> 00:21:07.036 A:middle
So a better approach of doing

00:21:07.036 --> 00:21:08.216 A:middle
this, and we'll go back to the

00:21:08.216 --> 00:21:10.126 A:middle
beginning of our example, is to

00:21:10.126 --> 00:21:11.696 A:middle
create a direct depend -- direct

00:21:11.696 --> 00:21:13.246 A:middle
package dependency between the

00:21:13.246 --> 00:21:15.216 A:middle
Lunch project and the DesignFont

00:21:15.216 --> 00:21:15.666 A:middle
package.

00:21:16.106 --> 00:21:18.276 A:middle
And then we can import content

00:21:18.276 --> 00:21:19.696 A:middle
from DesignFont into Lunch,

00:21:20.086 --> 00:21:21.776 A:middle
because if DesignTheme loses its

00:21:21.776 --> 00:21:24.006 A:middle
dependency on DesignFont in an

00:21:24.006 --> 00:21:26.276 A:middle
update, we still retain the

00:21:26.276 --> 00:21:28.586 A:middle
reference to that library inside

00:21:28.586 --> 00:21:28.976 A:middle
of Xcode.

00:21:32.176 --> 00:21:33.916 A:middle
So that is how Xcode selects

00:21:33.916 --> 00:21:35.026 A:middle
different versions of your

00:21:35.026 --> 00:21:35.556 A:middle
packages.

00:21:36.286 --> 00:21:39.536 A:middle
Let's go into an -- into how you

00:21:39.536 --> 00:21:40.456 A:middle
can go about getting new

00:21:40.456 --> 00:21:41.656 A:middle
versions of those packages,

00:21:41.916 --> 00:21:43.446 A:middle
which provide API improvements

00:21:43.446 --> 00:21:43.976 A:middle
and bug fixes.

00:21:46.106 --> 00:21:47.946 A:middle
So one day, I'm at team with --

00:21:48.246 --> 00:21:49.756 A:middle
I'm at lunch with the team

00:21:49.756 --> 00:21:51.036 A:middle
maintaining DesignFont.

00:21:51.336 --> 00:21:52.936 A:middle
And they tell me about a new

00:21:52.936 --> 00:21:54.216 A:middle
version of the DesignFont

00:21:54.216 --> 00:21:55.556 A:middle
package, which has a few small

00:21:55.556 --> 00:21:58.206 A:middle
bug fixes, Version 1.2.1.

00:21:58.206 --> 00:22:01.276 A:middle
When I get back to my desk, I

00:21:58.206 --> 00:22:01.276 A:middle
When I get back to my desk, I

00:22:01.276 --> 00:22:03.276 A:middle
see DesignFont is using version

00:22:03.276 --> 00:22:03.966 A:middle
1.2.

00:22:04.086 --> 00:22:06.066 A:middle
The Lunch project is using

00:22:06.066 --> 00:22:07.716 A:middle
DesignFont at Version 1.2.

00:22:09.216 --> 00:22:10.536 A:middle
And so I want to update this

00:22:10.536 --> 00:22:11.016 A:middle
package.

00:22:11.446 --> 00:22:14.186 A:middle
In order to do so, I click File,

00:22:14.936 --> 00:22:15.806 A:middle
Swift Packages.

00:22:16.066 --> 00:22:17.066 A:middle
And here, I'm brought with

00:22:17.066 --> 00:22:18.636 A:middle
multiple options regarding Swift

00:22:18.636 --> 00:22:19.146 A:middle
Packages.

00:22:19.786 --> 00:22:21.966 A:middle
In this case, I want to update

00:22:21.966 --> 00:22:23.336 A:middle
to the latest package versions.

00:22:24.836 --> 00:22:26.706 A:middle
So go ahead and click that, and

00:22:26.706 --> 00:22:27.986 A:middle
the update operation occurs.

00:22:29.176 --> 00:22:30.856 A:middle
We're now using DesignFont

00:22:30.856 --> 00:22:32.296 A:middle
Version 1.2.1.

00:22:32.886 --> 00:22:35.876 A:middle
So what exactly does updating

00:22:35.876 --> 00:22:36.776 A:middle
package version do?

00:22:37.016 --> 00:22:38.506 A:middle
What happened during that update

00:22:38.506 --> 00:22:38.936 A:middle
operation?

00:22:42.086 --> 00:22:43.686 A:middle
So there exists a file called

00:22:43.686 --> 00:22:44.956 A:middle
Package.resolved, which is

00:22:44.956 --> 00:22:45.596 A:middle
central to this.

00:22:46.876 --> 00:22:48.906 A:middle
Package.resolved records version

00:22:48.906 --> 00:22:50.006 A:middle
information about all the

00:22:50.006 --> 00:22:51.176 A:middle
packages inside of your

00:22:51.176 --> 00:22:51.676 A:middle
workspace.

00:22:52.176 --> 00:22:53.296 A:middle
And when you go through the

00:22:53.296 --> 00:22:55.446 A:middle
update operation, this file gets

00:22:55.496 --> 00:22:56.976 A:middle
updated, and then Xcode will

00:22:56.976 --> 00:22:58.176 A:middle
select -- pull down the new

00:22:58.176 --> 00:22:58.976 A:middle
versions for you.

00:23:03.046 --> 00:23:04.536 A:middle
This file exists inside of

00:23:04.536 --> 00:23:06.426 A:middle
xcsharedata, which is typically

00:23:06.426 --> 00:23:08.126 A:middle
shared with your team and source

00:23:08.126 --> 00:23:08.526 A:middle
control.

00:23:08.956 --> 00:23:10.156 A:middle
So an important thing to note

00:23:10.156 --> 00:23:11.286 A:middle
here is that that update

00:23:11.286 --> 00:23:13.466 A:middle
operation we just did is a local

00:23:13.466 --> 00:23:14.116 A:middle
operation.

00:23:14.576 --> 00:23:15.876 A:middle
In order to share this update

00:23:15.876 --> 00:23:18.576 A:middle
across my team, I have to commit

00:23:18.576 --> 00:23:20.106 A:middle
and push my changes to the

00:23:20.106 --> 00:23:20.906 A:middle
Package.resolved file.

00:23:23.066 --> 00:23:24.366 A:middle
And then if you want to look for

00:23:24.366 --> 00:23:25.586 A:middle
all of this yourself, it's

00:23:25.586 --> 00:23:27.006 A:middle
inside of the Xcode Project

00:23:27.006 --> 00:23:27.346 A:middle
file.

00:23:27.846 --> 00:23:29.296 A:middle
But please note that you don't

00:23:29.296 --> 00:23:30.376 A:middle
actually have to edit the

00:23:30.376 --> 00:23:32.026 A:middle
Package.resolved file yourself.

00:23:32.456 --> 00:23:33.746 A:middle
Xcode should be doing all of the

00:23:33.746 --> 00:23:34.596 A:middle
work for you.

00:23:38.066 --> 00:23:40.156 A:middle
So as I said before, we actually

00:23:40.156 --> 00:23:41.516 A:middle
haven't shared this update with

00:23:41.516 --> 00:23:41.996 A:middle
our team.

00:23:42.216 --> 00:23:43.236 A:middle
So let's do that.

00:23:43.656 --> 00:23:45.176 A:middle
We can do all of this within

00:23:45.296 --> 00:23:46.576 A:middle
Xcode by going to the Source

00:23:46.576 --> 00:23:47.586 A:middle
Control Menu and clicking

00:23:47.586 --> 00:23:47.936 A:middle
Commit.

00:23:51.226 --> 00:23:52.906 A:middle
Inside of here, we'll see all

00:23:52.906 --> 00:23:53.946 A:middle
the changes that were made to

00:23:53.946 --> 00:23:55.636 A:middle
the Package.resolved file and

00:23:55.636 --> 00:23:57.606 A:middle
how it updated from Version 1.2,

00:23:58.096 --> 00:23:59.396 A:middle
what we were previously using,

00:24:00.036 --> 00:24:02.146 A:middle
to 1.2.1, the new version.

00:24:02.876 --> 00:24:04.386 A:middle
Because I want to push, I go

00:24:04.386 --> 00:24:05.536 A:middle
ahead and click the lower-left

00:24:05.856 --> 00:24:07.146 A:middle
checkbox, push to remote.

00:24:07.576 --> 00:24:09.136 A:middle
And then I can commit and push

00:24:09.136 --> 00:24:09.696 A:middle
my changes.

00:24:10.276 --> 00:24:11.926 A:middle
We've now successfully shared

00:24:11.926 --> 00:24:13.756 A:middle
this update across our team.

00:24:14.956 --> 00:24:16.136 A:middle
So all of this begs the

00:24:16.136 --> 00:24:17.646 A:middle
question, why do we need a

00:24:17.646 --> 00:24:19.376 A:middle
Package.resolved file?

00:24:20.396 --> 00:24:22.476 A:middle
This file exists to make sure

00:24:22.476 --> 00:24:23.676 A:middle
that when people are using --

00:24:23.876 --> 00:24:25.316 A:middle
people across my team are using

00:24:25.536 --> 00:24:27.186 A:middle
the Lunch project at the same

00:24:27.186 --> 00:24:28.636 A:middle
commit, that they're all getting

00:24:28.636 --> 00:24:30.276 A:middle
the same version of DesignFont.

00:24:30.976 --> 00:24:31.856 A:middle
If this file -- if the

00:24:31.856 --> 00:24:33.476 A:middle
Package.resolved file didn't

00:24:33.476 --> 00:24:35.996 A:middle
exist, you might end up in a

00:24:35.996 --> 00:24:37.516 A:middle
situation where multiple people

00:24:37.516 --> 00:24:39.966 A:middle
on your team are using the same

00:24:39.966 --> 00:24:41.746 A:middle
version of your project, but

00:24:41.746 --> 00:24:44.456 A:middle
without consistency across the

00:24:44.456 --> 00:24:45.646 A:middle
versions of packages that you're

00:24:45.646 --> 00:24:45.956 A:middle
using.

00:24:48.326 --> 00:24:49.476 A:middle
So an incredibly important thing

00:24:49.476 --> 00:24:50.906 A:middle
to note is to check in your

00:24:50.906 --> 00:24:52.166 A:middle
Package.resolved file.

00:24:52.606 --> 00:24:54.146 A:middle
Otherwise, you might end up

00:24:54.196 --> 00:24:55.796 A:middle
using inconsistent versions of

00:24:55.796 --> 00:24:57.326 A:middle
packages across your team.

00:24:57.606 --> 00:24:58.666 A:middle
So it's incredibly important

00:24:58.666 --> 00:24:59.776 A:middle
that this file is checked in.

00:25:02.046 --> 00:25:03.756 A:middle
And then be sure to look out for

00:25:03.756 --> 00:25:05.136 A:middle
new versions of your packages.

00:25:05.996 --> 00:25:08.716 A:middle
And then, update with intent.

00:25:09.016 --> 00:25:10.676 A:middle
Otherwise, you might miss out on

00:25:10.676 --> 00:25:12.526 A:middle
a few key bug fixes and API

00:25:12.526 --> 00:25:14.036 A:middle
improvements that your packages

00:25:14.036 --> 00:25:14.806 A:middle
are providing for you.

00:25:16.276 --> 00:25:17.626 A:middle
So that's how you update

00:25:17.626 --> 00:25:18.106 A:middle
packages.

00:25:18.806 --> 00:25:20.166 A:middle
Let's go into a little bit more

00:25:20.166 --> 00:25:21.706 A:middle
of an advanced example on how to

00:25:21.706 --> 00:25:22.856 A:middle
resolve package conflict, which

00:25:23.086 --> 00:25:24.376 A:middle
will bring together a lot of the

00:25:24.376 --> 00:25:25.496 A:middle
different topics we've talked

00:25:25.496 --> 00:25:25.976 A:middle
about today.

00:25:29.046 --> 00:25:31.296 A:middle
So I launch a project to change

00:25:31.296 --> 00:25:33.496 A:middle
the font that we're using for

00:25:33.496 --> 00:25:35.186 A:middle
our price inside of the Lunch

00:25:35.186 --> 00:25:35.826 A:middle
application.

00:25:37.236 --> 00:25:39.096 A:middle
The system font that I want to

00:25:39.096 --> 00:25:41.206 A:middle
use is available in DesignFont

00:25:41.206 --> 00:25:42.656 A:middle
at Version 2, and this helps

00:25:42.656 --> 00:25:43.836 A:middle
keep a consistent version of the

00:25:43.836 --> 00:25:46.226 A:middle
fonts we're using consistent

00:25:46.356 --> 00:25:48.766 A:middle
across the applications our team

00:25:48.766 --> 00:25:49.066 A:middle
owns.

00:25:49.686 --> 00:25:50.686 A:middle
So let's do this.

00:25:51.456 --> 00:25:52.926 A:middle
In order to use the DesignFont

00:25:53.346 --> 00:25:55.326 A:middle
package, we need to create a

00:25:55.326 --> 00:25:56.836 A:middle
direct dependency between Lunch

00:25:57.086 --> 00:25:57.846 A:middle
and DesignFont.

00:25:58.646 --> 00:26:00.356 A:middle
And then, because DesignFont at

00:25:58.646 --> 00:26:00.356 A:middle
And then, because DesignFont at

00:26:00.356 --> 00:26:02.006 A:middle
Version 2 is what released this

00:26:02.006 --> 00:26:04.356 A:middle
new font, we want to use that

00:26:04.356 --> 00:26:04.976 A:middle
version specifically.

00:26:07.076 --> 00:26:08.576 A:middle
So we go to Xcode, and we go

00:26:08.576 --> 00:26:09.316 A:middle
through the Add Package

00:26:09.316 --> 00:26:09.776 A:middle
workflow.

00:26:10.436 --> 00:26:11.686 A:middle
We click DesignFont as it's in

00:26:11.686 --> 00:26:13.696 A:middle
our favorite accounts.

00:26:13.996 --> 00:26:14.756 A:middle
And we say Next.

00:26:15.156 --> 00:26:16.456 A:middle
We choose to up to the next

00:26:16.456 --> 00:26:17.936 A:middle
major version, because we want

00:26:17.936 --> 00:26:20.016 A:middle
to be open to any updates or new

00:26:20.016 --> 00:26:21.206 A:middle
versions that DesignFont

00:26:21.206 --> 00:26:21.686 A:middle
releases.

00:26:21.686 --> 00:26:23.776 A:middle
And then we click Next.

00:26:24.606 --> 00:26:26.036 A:middle
Here, we run into a package

00:26:26.036 --> 00:26:28.186 A:middle
resolution error, because of our

00:26:28.186 --> 00:26:29.726 A:middle
new dependency requirement on

00:26:29.726 --> 00:26:31.516 A:middle
DesignFont from 2 to the next

00:26:31.516 --> 00:26:31.976 A:middle
major version.

00:26:35.826 --> 00:26:37.266 A:middle
So let's look into what's

00:26:37.266 --> 00:26:39.116 A:middle
happening here and debug what's

00:26:39.116 --> 00:26:39.626 A:middle
going on.

00:26:40.856 --> 00:26:41.906 A:middle
One thing that's really

00:26:41.906 --> 00:26:43.206 A:middle
important to remember when

00:26:43.206 --> 00:26:45.046 A:middle
debugging package resolution is

00:26:45.046 --> 00:26:46.256 A:middle
to look at the full picture.

00:26:47.486 --> 00:26:49.716 A:middle
We want to think of every

00:26:49.716 --> 00:26:51.096 A:middle
requirement that is that is

00:26:51.096 --> 00:26:52.856 A:middle
affecting our packages and not

00:26:52.856 --> 00:26:53.656 A:middle
just narrow in on what we've

00:26:53.656 --> 00:26:53.976 A:middle
just added.

00:26:56.046 --> 00:26:57.546 A:middle
So we take a step back to how

00:26:57.546 --> 00:26:58.656 A:middle
this was working before.

00:26:59.226 --> 00:27:00.756 A:middle
Lunch had a great dependency on

00:26:59.226 --> 00:27:00.756 A:middle
Lunch had a great dependency on

00:27:00.756 --> 00:27:02.466 A:middle
DesignTheme at Version 1.

00:27:02.946 --> 00:27:04.316 A:middle
And DesignTheme had a direct

00:27:04.316 --> 00:27:06.056 A:middle
dependency on DesignFont at

00:27:06.056 --> 00:27:08.616 A:middle
Version 1.2.1, using the version

00:27:08.616 --> 00:27:10.686 A:middle
requirement 1 to the next major

00:27:10.686 --> 00:27:10.976 A:middle
version.

00:27:14.286 --> 00:27:16.276 A:middle
And then when we added our

00:27:16.276 --> 00:27:17.656 A:middle
direct dependency between Lunch

00:27:17.706 --> 00:27:19.486 A:middle
and DesignFont from 2 up to the

00:27:19.486 --> 00:27:21.306 A:middle
next major version, we ran into

00:27:21.306 --> 00:27:22.746 A:middle
the package resolution conflict.

00:27:24.336 --> 00:27:26.726 A:middle
You'll notice that DesignTheme's

00:27:26.726 --> 00:27:29.016 A:middle
requirement on DesignFont 1, up

00:27:29.016 --> 00:27:30.316 A:middle
to, but not including, 2.

00:27:30.596 --> 00:27:31.956 A:middle
And Lunch's requirement on

00:27:31.956 --> 00:27:34.086 A:middle
DesignFont 2, but not in -- up

00:27:34.086 --> 00:27:36.026 A:middle
to, but not including 3, can't

00:27:36.026 --> 00:27:37.706 A:middle
select one version that matches

00:27:37.786 --> 00:27:38.916 A:middle
both of those requirements.

00:27:39.996 --> 00:27:42.546 A:middle
And so in SwiftPMs integration

00:27:42.546 --> 00:27:44.286 A:middle
into Xcode, you can only have

00:27:44.416 --> 00:27:46.066 A:middle
one version of a package in a

00:27:46.066 --> 00:27:46.626 A:middle
workspace.

00:27:47.646 --> 00:27:48.926 A:middle
And this is explaining why we're

00:27:48.926 --> 00:27:50.366 A:middle
seeing the package resolution

00:27:50.366 --> 00:27:51.126 A:middle
error here.

00:27:51.716 --> 00:27:54.016 A:middle
Xcode can't possibly pick one

00:27:54.016 --> 00:27:55.566 A:middle
version that satisfies both

00:27:55.566 --> 00:27:56.776 A:middle
version requirements.

00:27:58.026 --> 00:27:59.526 A:middle
Going about fixing this is

00:27:59.566 --> 00:28:00.786 A:middle
really situation specific.

00:27:59.566 --> 00:28:00.786 A:middle
really situation specific.

00:28:01.326 --> 00:28:02.626 A:middle
But typically, when I run into

00:28:02.626 --> 00:28:03.926 A:middle
package resolution errors like

00:28:03.966 --> 00:28:05.466 A:middle
this, I want to look at the

00:28:05.466 --> 00:28:06.936 A:middle
newer versions of packages that

00:28:06.936 --> 00:28:07.716 A:middle
are available to me.

00:28:08.196 --> 00:28:09.476 A:middle
And then I can see if those

00:28:09.476 --> 00:28:11.776 A:middle
newer versions have provided any

00:28:11.776 --> 00:28:12.536 A:middle
updates to their sub

00:28:12.536 --> 00:28:12.976 A:middle
dependencies.

00:28:15.046 --> 00:28:16.026 A:middle
In this case, I noticed that

00:28:16.026 --> 00:28:17.066 A:middle
there's a Version 2 of

00:28:17.066 --> 00:28:19.206 A:middle
DesignTheme that we haven't

00:28:19.206 --> 00:28:19.966 A:middle
really looked at yet.

00:28:20.596 --> 00:28:23.006 A:middle
So let's go to GitHub and look

00:28:23.006 --> 00:28:25.016 A:middle
at our DesignTheme's version

00:28:25.016 --> 00:28:25.726 A:middle
requirements.

00:28:27.356 --> 00:28:29.106 A:middle
When we go to GitHub, we can

00:28:29.106 --> 00:28:30.386 A:middle
look in the dependencies array

00:28:30.386 --> 00:28:31.636 A:middle
of the Swift Package Manifest.

00:28:32.036 --> 00:28:32.936 A:middle
And here, we see that

00:28:32.936 --> 00:28:34.916 A:middle
DesignFont's version requirement

00:28:35.076 --> 00:28:37.336 A:middle
has updated from 2 -- from 1 to

00:28:37.336 --> 00:28:39.036 A:middle
the next major version to be 2

00:28:39.036 --> 00:28:40.116 A:middle
to the next major version.

00:28:41.066 --> 00:28:42.266 A:middle
This matches with the version

00:28:42.266 --> 00:28:43.696 A:middle
requirement that we were trying

00:28:43.696 --> 00:28:44.806 A:middle
to add between Lunch and

00:28:44.806 --> 00:28:45.506 A:middle
DesignFont.

00:28:45.976 --> 00:28:47.966 A:middle
So if we can update

00:28:48.526 --> 00:28:49.446 A:middle
DesignTheme's version

00:28:49.446 --> 00:28:51.166 A:middle
requirement to be resolving at

00:28:51.166 --> 00:28:53.116 A:middle
Version 2, we can now

00:28:53.116 --> 00:28:55.036 A:middle
satisfiably add a direct

00:28:55.036 --> 00:28:56.706 A:middle
dependency between Lunch and

00:28:56.706 --> 00:28:57.336 A:middle
DesignFont.

00:28:58.746 --> 00:29:00.366 A:middle
So let's go about doing that and

00:28:58.746 --> 00:29:00.366 A:middle
So let's go about doing that and

00:29:00.366 --> 00:29:01.876 A:middle
update the major version of

00:29:01.876 --> 00:29:02.426 A:middle
DesignTheme.

00:29:03.206 --> 00:29:04.736 A:middle
Previously, Lunch was using

00:29:05.026 --> 00:29:06.786 A:middle
DesignTheme up from 1 to the

00:29:06.786 --> 00:29:07.676 A:middle
next major version.

00:29:07.916 --> 00:29:09.136 A:middle
We want to change that so that

00:29:09.136 --> 00:29:11.126 A:middle
it's now using 2 up to the next

00:29:11.126 --> 00:29:11.766 A:middle
major version.

00:29:14.286 --> 00:29:15.376 A:middle
So we go back to Xcode.

00:29:15.466 --> 00:29:17.346 A:middle
And now, we just click on the

00:29:17.346 --> 00:29:20.036 A:middle
DesignTheme package inside of

00:29:20.236 --> 00:29:21.046 A:middle
the Project Editor.

00:29:21.046 --> 00:29:23.296 A:middle
And then we're back to an edit

00:29:23.296 --> 00:29:24.076 A:middle
version rule sheet.

00:29:24.536 --> 00:29:25.596 A:middle
Here, we were previously

00:29:25.596 --> 00:29:27.166 A:middle
specifying 1 up to the next

00:29:27.166 --> 00:29:27.936 A:middle
major version.

00:29:28.586 --> 00:29:30.126 A:middle
But now we want to change that

00:29:30.276 --> 00:29:31.806 A:middle
to be 2 to the next major

00:29:31.806 --> 00:29:32.266 A:middle
version.

00:29:33.346 --> 00:29:35.986 A:middle
So we simply change our 1 to a 2

00:29:36.236 --> 00:29:36.956 A:middle
and then click Done.

00:29:37.996 --> 00:29:40.036 A:middle
And now, the update operation

00:29:40.036 --> 00:29:40.476 A:middle
occurs.

00:29:40.746 --> 00:29:43.266 A:middle
And we can see that DesignTheme

00:29:43.266 --> 00:29:45.086 A:middle
is at Version 2, and DesignFont

00:29:45.086 --> 00:29:45.856 A:middle
is at Version 2.

00:29:49.056 --> 00:29:50.456 A:middle
But one important thing happens

00:29:50.456 --> 00:29:50.626 A:middle
here.

00:29:50.926 --> 00:29:52.246 A:middle
When we update from one major

00:29:52.246 --> 00:29:55.036 A:middle
version to another, we run into

00:29:55.036 --> 00:29:55.806 A:middle
a build failure.

00:29:56.146 --> 00:29:57.746 A:middle
And this is because when going

00:29:57.746 --> 00:29:59.006 A:middle
from one major version of a

00:29:59.006 --> 00:30:01.016 A:middle
package to another, there can be

00:29:59.006 --> 00:30:01.016 A:middle
package to another, there can be

00:30:01.016 --> 00:30:01.916 A:middle
API changes.

00:30:02.156 --> 00:30:03.696 A:middle
And this can potentially cause

00:30:03.696 --> 00:30:05.016 A:middle
breaking changes inside of your

00:30:05.016 --> 00:30:05.496 A:middle
project.

00:30:07.316 --> 00:30:09.076 A:middle
This means that when you update

00:30:09.076 --> 00:30:10.036 A:middle
from one major version to

00:30:10.036 --> 00:30:11.566 A:middle
another, you should be prepared

00:30:11.686 --> 00:30:14.086 A:middle
to change some APIs, or change

00:30:14.086 --> 00:30:15.606 A:middle
however the APIs are working

00:30:15.606 --> 00:30:16.806 A:middle
inside of the new version of the

00:30:16.806 --> 00:30:16.956 A:middle
package.

00:30:19.326 --> 00:30:21.306 A:middle
This can be very small changes,

00:30:21.306 --> 00:30:22.346 A:middle
or it can be a little bit more

00:30:22.346 --> 00:30:22.716 A:middle
involved.

00:30:23.336 --> 00:30:24.776 A:middle
In this case, we've done all the

00:30:24.776 --> 00:30:26.146 A:middle
work for you to spend more time

00:30:26.146 --> 00:30:26.756 A:middle
on packages.

00:30:27.006 --> 00:30:28.466 A:middle
So when we go back to the Lunch

00:30:28.466 --> 00:30:30.106 A:middle
application, our build errors

00:30:30.106 --> 00:30:30.696 A:middle
are resolved.

00:30:30.696 --> 00:30:32.206 A:middle
And we're using the DesignTheme

00:30:32.206 --> 00:30:33.906 A:middle
at Version 2 successfully.

00:30:36.046 --> 00:30:37.316 A:middle
So our build is now succeeding.

00:30:37.666 --> 00:30:38.886 A:middle
And we want to add a direct

00:30:38.886 --> 00:30:40.536 A:middle
dependency between Lunch and

00:30:40.536 --> 00:30:41.396 A:middle
DesignFont.

00:30:41.986 --> 00:30:43.286 A:middle
Because now that we're at

00:30:43.546 --> 00:30:45.766 A:middle
Version 2 of DesignTheme, we can

00:30:45.766 --> 00:30:47.086 A:middle
add the version requirement we

00:30:47.086 --> 00:30:47.596 A:middle
wanted to.

00:30:50.056 --> 00:30:51.456 A:middle
So we go back to Xcode, and we

00:30:51.456 --> 00:30:53.036 A:middle
go through Add Package workflow.

00:30:53.476 --> 00:30:54.966 A:middle
We pick DesignFont.

00:30:55.266 --> 00:30:56.576 A:middle
We select 2 to the next major

00:30:56.576 --> 00:30:57.116 A:middle
version.

00:30:58.026 --> 00:30:59.216 A:middle
And now, we can link the

00:30:59.216 --> 00:31:00.516 A:middle
DesignFont library with our

00:30:59.216 --> 00:31:00.516 A:middle
DesignFont library with our

00:31:00.516 --> 00:31:01.096 A:middle
application.

00:31:01.606 --> 00:31:02.856 A:middle
And now inside of the Project

00:31:02.856 --> 00:31:04.416 A:middle
Editor, we can see that we're

00:31:04.416 --> 00:31:05.936 A:middle
successfully using DesignFont

00:31:05.936 --> 00:31:06.616 A:middle
from 2 to the next major

00:31:06.616 --> 00:31:06.926 A:middle
version.

00:31:10.176 --> 00:31:11.576 A:middle
Now that we've done this, we can

00:31:11.576 --> 00:31:13.146 A:middle
now import the content inside of

00:31:13.146 --> 00:31:17.146 A:middle
DesignFont, successfully use its

00:31:17.146 --> 00:31:19.096 A:middle
library, and then with a few

00:31:19.096 --> 00:31:20.816 A:middle
small code changes, to update

00:31:20.816 --> 00:31:21.976 A:middle
the font of the price.

00:31:25.046 --> 00:31:26.116 A:middle
So we've now successfully done

00:31:26.116 --> 00:31:27.416 A:middle
that and resolved our package

00:31:27.416 --> 00:31:27.896 A:middle
conflict.

00:31:28.506 --> 00:31:29.486 A:middle
We've updated our package

00:31:29.486 --> 00:31:31.236 A:middle
versions, and we've successfully

00:31:31.236 --> 00:31:32.756 A:middle
went over how to debug package

00:31:32.756 --> 00:31:33.956 A:middle
resolution inside of Xcode.

00:31:37.146 --> 00:31:38.716 A:middle
So we went over a lot of things

00:31:38.756 --> 00:31:39.016 A:middle
today.

00:31:40.086 --> 00:31:41.116 A:middle
We talked about how you can

00:31:41.116 --> 00:31:42.826 A:middle
start using Open Source packages

00:31:42.826 --> 00:31:44.356 A:middle
inside of your projects and

00:31:44.386 --> 00:31:45.986 A:middle
quickly start using its APIs.

00:31:47.496 --> 00:31:48.856 A:middle
We took a closer look at what a

00:31:48.856 --> 00:31:51.436 A:middle
package is, what -- and how the

00:31:51.436 --> 00:31:53.226 A:middle
Package.swift manifest brings it

00:31:53.226 --> 00:31:53.726 A:middle
all together.

00:31:55.146 --> 00:31:56.966 A:middle
We went over how Xcode selects

00:31:56.966 --> 00:31:58.766 A:middle
the versions of packages to use

00:31:58.796 --> 00:32:00.066 A:middle
inside of your project.

00:31:58.796 --> 00:32:00.066 A:middle
inside of your project.

00:32:01.636 --> 00:32:02.756 A:middle
And then we went over how you

00:32:02.756 --> 00:32:03.776 A:middle
can keep those versions

00:32:03.776 --> 00:32:05.596 A:middle
up-to-date and keep getting new

00:32:05.596 --> 00:32:06.736 A:middle
updates for your packages.

00:32:08.256 --> 00:32:09.386 A:middle
We then took a look at a more

00:32:09.386 --> 00:32:11.226 A:middle
advanced example of how to

00:32:11.226 --> 00:32:12.916 A:middle
resolve package conflicts, which

00:32:12.916 --> 00:32:14.326 A:middle
taught us how to debug packages,

00:32:14.556 --> 00:32:15.706 A:middle
and how to update package

00:32:15.746 --> 00:32:15.976 A:middle
versions.

00:32:18.136 --> 00:32:19.916 A:middle
There are a ton of packages

00:32:20.046 --> 00:32:21.686 A:middle
already available on GitHub

00:32:21.756 --> 00:32:22.086 A:middle
today.

00:32:22.996 --> 00:32:24.366 A:middle
And we recommend that you will

00:32:24.366 --> 00:32:25.736 A:middle
look through these packages and

00:32:25.736 --> 00:32:27.076 A:middle
see where you can incorporate

00:32:27.076 --> 00:32:28.366 A:middle
them in your existing

00:32:28.366 --> 00:32:28.976 A:middle
applications.

00:32:31.096 --> 00:32:31.876 A:middle
But we're not done there.

00:32:32.196 --> 00:32:33.376 A:middle
There's a session tomorrow that

00:32:33.376 --> 00:32:34.706 A:middle
my colleagues, Ankit and Boris,

00:32:35.106 --> 00:32:36.276 A:middle
are presenting on, on how to

00:32:36.276 --> 00:32:37.446 A:middle
create Swift Packages.

00:32:37.996 --> 00:32:39.466 A:middle
This session will go into even

00:32:39.466 --> 00:32:41.966 A:middle
more detail about what a package

00:32:42.016 --> 00:32:45.206 A:middle
is, how to edit packages, the

00:32:45.206 --> 00:32:47.246 A:middle
SwiftPM Open Source tool, and

00:32:47.876 --> 00:32:48.666 A:middle
much, much more.

00:32:49.606 --> 00:32:50.746 A:middle
This session will help you

00:32:50.746 --> 00:32:52.316 A:middle
become even more of an expert on

00:32:52.446 --> 00:32:53.786 A:middle
how packages work inside of

00:32:53.786 --> 00:32:55.826 A:middle
Xcode, and you won't want to

00:32:55.826 --> 00:32:56.156 A:middle
miss it.

00:32:56.336 --> 00:32:58.216 A:middle
And then if you have any more

00:32:58.216 --> 00:33:00.506 A:middle
questions for the SwiftPM team,

00:32:58.216 --> 00:33:00.506 A:middle
questions for the SwiftPM team,

00:33:00.716 --> 00:33:01.956 A:middle
we'll be at the Swift Open Hours

00:33:01.956 --> 00:33:03.646 A:middle
Lab right after this session.

00:33:04.186 --> 00:33:05.276 A:middle
And then also, there are two

00:33:05.276 --> 00:33:06.296 A:middle
more sessions throughout the

00:33:06.296 --> 00:33:08.316 A:middle
week, one on Thursday at 12:00

00:33:08.316 --> 00:33:09.716 A:middle
in the Swift Packages Lab, and

00:33:09.716 --> 00:33:11.096 A:middle
another of the same name at

00:33:11.096 --> 00:33:11.976 A:middle
Friday at 12:00.

00:33:12.976 --> 00:33:13.816 A:middle
Thank you so much for coming

00:33:13.816 --> 00:33:14.596 A:middle
today, and we hope you have a

00:33:14.596 --> 00:33:15.406 A:middle
great rest of your week.

00:33:15.556 --> 00:33:15.896 A:middle
Thank you.

00:33:16.516 --> 00:33:20.500 A:middle
[ Applause ]
