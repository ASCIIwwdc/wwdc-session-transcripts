WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[ Music ]

00:00:09.516 --> 00:00:16.096 A:middle
[ Applause ]

00:00:16.596 --> 00:00:17.216 A:middle
&gt;&gt; Good morning.

00:00:18.406 --> 00:00:21.606 A:middle
I'm Alex Brown, an Engineer in

00:00:21.606 --> 00:00:22.146 A:middle
Core ML.

00:00:23.206 --> 00:00:24.736 A:middle
And today, we are going to

00:00:24.736 --> 00:00:26.816 A:middle
present Create ML for Object

00:00:26.816 --> 00:00:27.366 A:middle
Detection.

00:00:27.786 --> 00:00:30.726 A:middle
In the What's New in Machine

00:00:30.726 --> 00:00:32.235 A:middle
Learning session, you were

00:00:32.235 --> 00:00:34.666 A:middle
introduced to the new Create ML

00:00:34.936 --> 00:00:35.003 A:middle
app.

00:00:36.076 --> 00:00:37.206 A:middle
It provides a really

00:00:37.206 --> 00:00:39.296 A:middle
approachable way to build custom

00:00:39.296 --> 00:00:40.786 A:middle
machine learning models to add

00:00:41.286 --> 00:00:42.466 A:middle
to your applications.

00:00:43.496 --> 00:00:45.906 A:middle
In this session, we're going to

00:00:45.906 --> 00:00:47.756 A:middle
dig a little deeper into two

00:00:47.756 --> 00:00:49.086 A:middle
specific templates.

00:00:49.886 --> 00:00:51.796 A:middle
Object detection, which works

00:00:51.796 --> 00:00:53.606 A:middle
with images, and sound

00:00:53.606 --> 00:00:54.456 A:middle
classification.

00:00:55.056 --> 00:00:59.456 A:middle
Let's get started with object

00:00:59.456 --> 00:01:00.046 A:middle
detection.

00:00:59.456 --> 00:01:00.046 A:middle
detection.

00:01:02.506 --> 00:01:05.506 A:middle
Object detection enables your

00:01:05.506 --> 00:01:07.316 A:middle
application to identify

00:01:07.316 --> 00:01:09.076 A:middle
real-world objects captured by

00:01:09.076 --> 00:01:10.856 A:middle
your device's camera, and

00:01:10.856 --> 00:01:13.226 A:middle
respond based on their presence,

00:01:13.806 --> 00:01:16.246 A:middle
position, and relationship.

00:01:17.116 --> 00:01:19.406 A:middle
You can download object

00:01:19.406 --> 00:01:21.026 A:middle
detectors from the web which

00:01:21.026 --> 00:01:22.176 A:middle
know the difference between

00:01:22.176 --> 00:01:23.756 A:middle
broad categories of objects.

00:01:25.386 --> 00:01:27.086 A:middle
But by training a custom machine

00:01:27.086 --> 00:01:29.046 A:middle
learning model on your own data,

00:01:29.636 --> 00:01:31.166 A:middle
you can teach your application

00:01:31.166 --> 00:01:32.506 A:middle
about the subtle differences

00:01:33.046 --> 00:01:35.306 A:middle
between individual animals, hand

00:01:35.306 --> 00:01:38.146 A:middle
gestures, street signs, or game

00:01:38.146 --> 00:01:38.816 A:middle
tokens.

00:01:39.396 --> 00:01:43.056 A:middle
If you've used machine learning

00:01:43.316 --> 00:01:45.086 A:middle
with Apple before, you may

00:01:45.086 --> 00:01:47.036 A:middle
already be familiar with image

00:01:47.036 --> 00:01:47.936 A:middle
classification.

00:01:49.456 --> 00:01:51.896 A:middle
With image classification, you

00:01:51.896 --> 00:01:53.636 A:middle
build a model which can provide

00:01:53.636 --> 00:01:55.596 A:middle
a single simple description of

00:01:55.596 --> 00:01:56.146 A:middle
an image.

00:01:57.656 --> 00:01:59.626 A:middle
This image we might describe as

00:02:00.166 --> 00:02:02.976 A:middle
outdoors or park, or for a

00:02:02.976 --> 00:02:05.476 A:middle
particular application, dog.

00:02:08.056 --> 00:02:10.346 A:middle
But what if we're interested in

00:02:10.346 --> 00:02:11.526 A:middle
more than one object in the

00:02:11.526 --> 00:02:11.936 A:middle
scene?

00:02:12.306 --> 00:02:16.286 A:middle
In this case, object detection

00:02:16.466 --> 00:02:18.086 A:middle
can come to the rescue.

00:02:18.586 --> 00:02:20.616 A:middle
It can identify multiple objects

00:02:20.826 --> 00:02:22.596 A:middle
within your photograph, and

00:02:22.596 --> 00:02:25.456 A:middle
provide the location, size, and

00:02:25.456 --> 00:02:26.726 A:middle
label for each one.

00:02:27.646 --> 00:02:29.966 A:middle
This can enable your application

00:02:29.966 --> 00:02:31.806 A:middle
to do more sophisticated things

00:02:32.096 --> 00:02:34.436 A:middle
using your camera, but in order

00:02:34.436 --> 00:02:36.136 A:middle
to do that, we need to go into

00:02:36.136 --> 00:02:37.776 A:middle
more detail when teaching the

00:02:37.776 --> 00:02:39.676 A:middle
model about your images.

00:02:41.756 --> 00:02:45.296 A:middle
To train an object detector, you

00:02:45.296 --> 00:02:47.796 A:middle
need to annotate each image with

00:02:47.796 --> 00:02:49.326 A:middle
labeled regions that you would

00:02:49.326 --> 00:02:50.836 A:middle
like the model to recognize.

00:02:51.606 --> 00:02:53.786 A:middle
The bounding box for your

00:02:53.786 --> 00:02:56.266 A:middle
annotated objects starting at

00:02:56.266 --> 00:02:57.576 A:middle
the center of each object of

00:02:57.576 --> 00:03:00.116 A:middle
interest and having a size,

00:02:57.576 --> 00:03:00.116 A:middle
interest and having a size,

00:03:00.206 --> 00:03:03.066 A:middle
height, and width, this is

00:03:03.156 --> 00:03:05.376 A:middle
measured in pixels from the top

00:03:05.376 --> 00:03:07.306 A:middle
left-hand corner of your image

00:03:08.136 --> 00:03:11.066 A:middle
to the center of each object of

00:03:11.956 --> 00:03:12.436 A:middle
interest.

00:03:12.886 --> 00:03:14.806 A:middle
You bundle together all of these

00:03:14.806 --> 00:03:17.736 A:middle
annotations, label, position,

00:03:17.736 --> 00:03:20.356 A:middle
and size, in a JSON file in the

00:03:20.356 --> 00:03:21.226 A:middle
following format.

00:03:21.946 --> 00:03:26.986 A:middle
You can download tools from the

00:03:26.986 --> 00:03:29.176 A:middle
web to help you build these, but

00:03:29.466 --> 00:03:31.016 A:middle
make sure they use the same

00:03:31.016 --> 00:03:33.206 A:middle
coordinate system the Create ML

00:03:34.506 --> 00:03:35.646 A:middle
app expects.

00:03:35.966 --> 00:03:37.216 A:middle
Once you've assembled your

00:03:37.256 --> 00:03:40.256 A:middle
annotations, simply drop them

00:03:40.256 --> 00:03:41.716 A:middle
into the same folder as the

00:03:41.776 --> 00:03:44.446 A:middle
images they describe, and that's

00:03:44.446 --> 00:03:44.686 A:middle
it.

00:03:45.896 --> 00:03:50.176 A:middle
Your training data is ready.

00:03:50.336 --> 00:03:52.576 A:middle
So now we know how to create

00:03:52.576 --> 00:03:53.886 A:middle
training data for object

00:03:53.886 --> 00:03:54.436 A:middle
detection.

00:03:55.176 --> 00:03:56.656 A:middle
Let's consider a real case.

00:03:58.266 --> 00:03:59.736 A:middle
My colleague, Scott, has got a

00:03:59.736 --> 00:04:01.876 A:middle
great idea for building a math

00:03:59.736 --> 00:04:01.876 A:middle
great idea for building a math

00:04:01.876 --> 00:04:03.786 A:middle
game that is really engaging for

00:04:03.786 --> 00:04:06.676 A:middle
kids, and uses real-world dice

00:04:07.066 --> 00:04:08.376 A:middle
to provide the questions.

00:04:10.116 --> 00:04:11.346 A:middle
You can hear more about this

00:04:11.346 --> 00:04:13.546 A:middle
application in session 228,

00:04:14.046 --> 00:04:16.616 A:middle
Creating Great Apps Using Core

00:04:16.616 --> 00:04:18.685 A:middle
ML and AR Kit.

00:04:19.236 --> 00:04:21.106 A:middle
So, Scott asked me to help build

00:04:21.106 --> 00:04:23.436 A:middle
a model for his game, and I

00:04:23.436 --> 00:04:25.576 A:middle
suggested using Apple's Create

00:04:25.576 --> 00:04:27.716 A:middle
ML application to train an

00:04:27.716 --> 00:04:28.546 A:middle
object detector.

00:04:29.136 --> 00:04:33.316 A:middle
Scott has already sent me the

00:04:33.316 --> 00:04:34.036 A:middle
training data.

00:04:35.346 --> 00:04:36.706 A:middle
He took a bunch of images of

00:04:36.736 --> 00:04:38.816 A:middle
dice from different angles and

00:04:38.816 --> 00:04:39.776 A:middle
with different values on the

00:04:39.776 --> 00:04:41.976 A:middle
top, and he's annotated them,

00:04:42.406 --> 00:04:44.636 A:middle
drawing bounding boxes around

00:04:44.636 --> 00:04:47.056 A:middle
the top face and adding a label,

00:04:47.056 --> 00:04:48.766 A:middle
counting the number of pips on

00:04:50.016 --> 00:04:51.816 A:middle
each dice.

00:04:52.476 --> 00:04:54.066 A:middle
So, now we've got our data

00:04:54.066 --> 00:04:54.336 A:middle
ready.

00:04:54.906 --> 00:04:56.266 A:middle
Let's take a look at how we can

00:04:56.266 --> 00:04:57.866 A:middle
use the Create ML application to

00:04:57.866 --> 00:04:58.566 A:middle
build our model.

00:05:07.056 --> 00:05:10.146 A:middle
So first of all, let's just

00:05:10.146 --> 00:05:10.796 A:middle
check the data.

00:05:12.326 --> 00:05:13.646 A:middle
You can see we've put all of our

00:05:13.646 --> 00:05:18.766 A:middle
images in a folder, and each one

00:05:18.856 --> 00:05:22.236 A:middle
contains multiple dice, and

00:05:23.286 --> 00:05:24.416 A:middle
we've gathered together the

00:05:24.416 --> 00:05:26.176 A:middle
annotations in a single JSON

00:05:26.176 --> 00:05:26.486 A:middle
file.

00:05:28.276 --> 00:05:30.626 A:middle
So now, I'll open the Create ML

00:05:30.626 --> 00:05:31.286 A:middle
application.

00:05:31.836 --> 00:05:33.786 A:middle
I can do this from inside X

00:05:33.786 --> 00:05:35.766 A:middle
code's menu, or I can just use

00:05:35.766 --> 00:05:36.286 A:middle
Spotlight.

00:05:40.696 --> 00:05:42.106 A:middle
When the Create ML application

00:05:42.106 --> 00:05:44.226 A:middle
opens, it gives us the option to

00:05:44.226 --> 00:05:45.446 A:middle
access documents we already

00:05:45.446 --> 00:05:45.976 A:middle
created.

00:05:46.586 --> 00:05:50.666 A:middle
Here, we want a new project.

00:05:50.756 --> 00:05:52.376 A:middle
First, you'll see the template

00:05:52.376 --> 00:05:54.076 A:middle
picker, which give you a

00:05:54.076 --> 00:05:55.586 A:middle
collection of machine learning

00:05:55.586 --> 00:05:57.056 A:middle
model types to select from.

00:05:57.646 --> 00:05:59.756 A:middle
In this case, we want an image

00:06:00.006 --> 00:06:01.596 A:middle
object detector.

00:06:04.476 --> 00:06:06.156 A:middle
I give it a name, so we can

00:06:06.156 --> 00:06:08.116 A:middle
identify it later on, and fill

00:06:08.116 --> 00:06:09.246 A:middle
in a few details.

00:06:15.666 --> 00:06:17.976 A:middle
Here, you can see the main

00:06:17.976 --> 00:06:20.196 A:middle
window with the training view on

00:06:20.196 --> 00:06:20.956 A:middle
the right-hand side.

00:06:20.956 --> 00:06:22.706 A:middle
It has already selected the

00:06:22.706 --> 00:06:24.516 A:middle
input tab, ready for our

00:06:24.516 --> 00:06:25.196 A:middle
training data.

00:06:25.926 --> 00:06:27.816 A:middle
I can drag that straight into

00:06:27.816 --> 00:06:30.606 A:middle
the training data well.

00:06:31.166 --> 00:06:32.676 A:middle
Even before training the model,

00:06:33.266 --> 00:06:34.686 A:middle
the application takes a look at

00:06:34.686 --> 00:06:36.416 A:middle
the data, and checks it's in the

00:06:36.416 --> 00:06:38.566 A:middle
right format, contains images

00:06:38.656 --> 00:06:40.236 A:middle
rather than sound, for instance,

00:06:40.506 --> 00:06:41.886 A:middle
and has a JSON file, which

00:06:41.886 --> 00:06:43.626 A:middle
correctly describes them.

00:06:43.926 --> 00:06:45.536 A:middle
It also provides some initial

00:06:45.536 --> 00:06:46.376 A:middle
statistics.

00:06:46.916 --> 00:06:48.226 A:middle
Here, we can see we have around

00:06:48.226 --> 00:06:51.526 A:middle
1,000 images, and there are six

00:06:51.526 --> 00:06:54.236 A:middle
classes, six, for the six sides

00:06:54.236 --> 00:06:55.476 A:middle
of a six-sided dice.

00:06:56.556 --> 00:06:57.356 A:middle
That's perfect.

00:06:59.576 --> 00:07:00.716 A:middle
We can do some other things on

00:06:59.576 --> 00:07:00.716 A:middle
We can do some other things on

00:07:00.716 --> 00:07:01.296 A:middle
this screen.

00:07:01.446 --> 00:07:03.006 A:middle
For instance, we can supply

00:07:03.006 --> 00:07:04.786 A:middle
testing data, to allow us to

00:07:04.786 --> 00:07:06.226 A:middle
compare the performance of two

00:07:06.226 --> 00:07:07.036 A:middle
different models.

00:07:07.686 --> 00:07:09.816 A:middle
Also, we can set some advanced

00:07:09.816 --> 00:07:11.276 A:middle
parameters, tuning the way the

00:07:11.276 --> 00:07:12.216 A:middle
model trains.

00:07:12.716 --> 00:07:13.956 A:middle
But we don't need to worry about

00:07:13.956 --> 00:07:15.266 A:middle
any of that right now, we're

00:07:15.266 --> 00:07:16.296 A:middle
actually ready to train.

00:07:17.466 --> 00:07:19.036 A:middle
Let's hit the play button, and

00:07:19.036 --> 00:07:19.856 A:middle
see what happens.

00:07:21.616 --> 00:07:22.976 A:middle
Training has begun.

00:07:23.826 --> 00:07:25.546 A:middle
It takes us instantly to the

00:07:25.546 --> 00:07:28.086 A:middle
Training tab, where we can see

00:07:28.086 --> 00:07:29.216 A:middle
the progress of the model

00:07:29.216 --> 00:07:29.706 A:middle
training.

00:07:30.006 --> 00:07:32.316 A:middle
This is a graph of loss.

00:07:32.506 --> 00:07:34.426 A:middle
Loss decreases as the model gets

00:07:34.426 --> 00:07:35.136 A:middle
better and better.

00:07:35.486 --> 00:07:36.936 A:middle
So we should see this converge

00:07:37.076 --> 00:07:41.226 A:middle
down to the bottom of the graph.

00:07:42.016 --> 00:07:43.906 A:middle
Object detection takes a lot

00:07:43.906 --> 00:07:45.136 A:middle
longer to train than image

00:07:45.136 --> 00:07:45.896 A:middle
classification.

00:07:46.506 --> 00:07:47.776 A:middle
I estimate this is probably

00:07:47.776 --> 00:07:49.336 A:middle
going to take an hour or more.

00:07:49.726 --> 00:07:51.466 A:middle
We don't want to wait for that,

00:07:51.466 --> 00:07:53.236 A:middle
so I've already trained a model

00:07:53.346 --> 00:07:53.976 A:middle
using this data.

00:08:03.496 --> 00:08:05.486 A:middle
Here we are, and I can jump to

00:08:05.486 --> 00:08:06.966 A:middle
the same training tab that we

00:08:06.966 --> 00:08:07.636 A:middle
just looked at.

00:08:08.706 --> 00:08:10.396 A:middle
You can see that the loss has

00:08:10.396 --> 00:08:11.996 A:middle
neatly declined, showing the

00:08:11.996 --> 00:08:13.106 A:middle
performance of the model has

00:08:13.106 --> 00:08:14.706 A:middle
really increased over the time

00:08:14.706 --> 00:08:15.466 A:middle
it took to train.

00:08:16.506 --> 00:08:17.636 A:middle
There's a couple of other things

00:08:17.636 --> 00:08:18.416 A:middle
that you should really have a

00:08:18.416 --> 00:08:19.546 A:middle
look at on this screen.

00:08:20.416 --> 00:08:22.546 A:middle
First of all, the overall

00:08:22.546 --> 00:08:23.336 A:middle
performance.

00:08:23.686 --> 00:08:25.396 A:middle
Ninety-two percent, which is a

00:08:25.396 --> 00:08:26.606 A:middle
really great number for an

00:08:26.606 --> 00:08:27.436 A:middle
object detector.

00:08:29.116 --> 00:08:30.746 A:middle
We also want to have a look and

00:08:30.746 --> 00:08:32.456 A:middle
check that we have consistent

00:08:32.456 --> 00:08:33.946 A:middle
performance across all of the

00:08:33.946 --> 00:08:34.676 A:middle
classes.

00:08:35.746 --> 00:08:38.446 A:middle
The classes, 1 to 6, each here

00:08:38.546 --> 00:08:41.015 A:middle
has 90% or more, and they're

00:08:41.015 --> 00:08:42.056 A:middle
about the same value.

00:08:42.645 --> 00:08:45.036 A:middle
This is important because it

00:08:45.036 --> 00:08:46.096 A:middle
shows that it is performing

00:08:46.096 --> 00:08:47.486 A:middle
equally well on the six sides of

00:08:47.486 --> 00:08:48.076 A:middle
the dice.

00:08:48.806 --> 00:08:50.086 A:middle
For a game of dice, where

00:08:50.086 --> 00:08:51.826 A:middle
fairness is important, that's

00:08:51.826 --> 00:08:52.586 A:middle
pretty important.

00:08:53.136 --> 00:08:57.796 A:middle
So, the model has told us

00:08:57.946 --> 00:08:59.396 A:middle
mathematically that it's pretty

00:08:59.396 --> 00:09:00.696 A:middle
good, but how do we get

00:08:59.396 --> 00:09:00.696 A:middle
good, but how do we get

00:09:00.696 --> 00:09:01.886 A:middle
confidence that it's going to

00:09:01.886 --> 00:09:03.446 A:middle
work for our cases?

00:09:04.316 --> 00:09:06.266 A:middle
Well, we can use the output tab.

00:09:07.816 --> 00:09:09.416 A:middle
Scott sent me a test image to

00:09:09.416 --> 00:09:11.106 A:middle
try out before I send the model

00:09:11.106 --> 00:09:12.746 A:middle
back to him, so let's drag that

00:09:12.746 --> 00:09:12.976 A:middle
in now.

00:09:20.036 --> 00:09:21.256 A:middle
That's looking pretty great.

00:09:21.896 --> 00:09:22.766 A:middle
You can see that it is

00:09:22.766 --> 00:09:24.546 A:middle
identified, the five dice in the

00:09:24.546 --> 00:09:24.966 A:middle
scene.

00:09:25.196 --> 00:09:27.146 A:middle
It has correctly drawn the box

00:09:27.146 --> 00:09:29.746 A:middle
around their top faces, and by

00:09:29.746 --> 00:09:34.526 A:middle
clicking through, 6, 1, 5, we

00:09:34.526 --> 00:09:36.386 A:middle
can see each label, and the

00:09:36.386 --> 00:09:37.546 A:middle
confidence is assigned.

00:09:39.456 --> 00:09:41.086 A:middle
That's performing really well.

00:09:41.786 --> 00:09:43.726 A:middle
So, if I was building my own

00:09:44.556 --> 00:09:46.436 A:middle
app, I could go ahead and drag

00:09:46.466 --> 00:09:47.756 A:middle
the model that has been produced

00:09:48.136 --> 00:09:49.456 A:middle
and use it within Xcode.

00:09:50.316 --> 00:09:51.926 A:middle
I think Scott is probably

00:09:51.926 --> 00:09:53.196 A:middle
waiting for this model to build

00:09:53.196 --> 00:09:53.976 A:middle
his application.

00:09:55.306 --> 00:09:57.396 A:middle
But before we go there, there's

00:09:57.396 --> 00:09:58.336 A:middle
something I want to try.

00:10:00.556 --> 00:10:01.816 A:middle
While I was preparing for this

00:10:01.846 --> 00:10:03.936 A:middle
demo, playing with dice, and a

00:10:03.936 --> 00:10:06.146 A:middle
camera, and my computer, my son,

00:10:06.146 --> 00:10:07.886 A:middle
who is 9, came over and asked

00:10:07.886 --> 00:10:09.116 A:middle
what I was doing.

00:10:10.276 --> 00:10:11.826 A:middle
Once I'd explained it, he got

00:10:11.826 --> 00:10:13.226 A:middle
pretty excited, and already

00:10:13.226 --> 00:10:14.586 A:middle
started coming up with an idea

00:10:14.586 --> 00:10:17.056 A:middle
for a game which had animals,

00:10:17.056 --> 00:10:18.446 A:middle
bears, and bats, and they

00:10:18.686 --> 00:10:20.456 A:middle
cooperate to collect bolts to

00:10:20.456 --> 00:10:21.226 A:middle
build a space ship.

00:10:21.476 --> 00:10:23.586 A:middle
And they use dice, colored dice,

00:10:23.586 --> 00:10:24.836 A:middle
to level up for each different

00:10:24.836 --> 00:10:25.436 A:middle
kind of monster.

00:10:26.946 --> 00:10:28.716 A:middle
So we got his dice, and I

00:10:28.716 --> 00:10:30.506 A:middle
decided to try them with Scott's

00:10:30.506 --> 00:10:30.786 A:middle
model.

00:10:31.236 --> 00:10:33.806 A:middle
So the dice he's using are a

00:10:33.806 --> 00:10:34.636 A:middle
little bit different.

00:10:35.206 --> 00:10:36.506 A:middle
They're role-playing dice,

00:10:36.896 --> 00:10:40.556 A:middle
so let's see how the model

00:10:40.556 --> 00:10:41.196 A:middle
performs.

00:10:42.126 --> 00:10:43.816 A:middle
Using the Max Continuity Camera

00:10:43.816 --> 00:10:46.336 A:middle
feature, I can import an image

00:10:47.316 --> 00:10:49.036 A:middle
directly from my phone.

00:10:49.436 --> 00:10:50.546 A:middle
This is really great because it

00:10:50.596 --> 00:10:52.186 A:middle
means it's using the same glass,

00:10:52.296 --> 00:10:53.536 A:middle
the same camera that your

00:10:53.536 --> 00:10:54.736 A:middle
application will use.

00:10:57.176 --> 00:10:59.286 A:middle
I take the photo and click Use

00:10:59.286 --> 00:10:59.796 A:middle
Photo.

00:11:00.346 --> 00:11:04.716 A:middle
And it's instantly analyzed it.

00:11:04.876 --> 00:11:06.276 A:middle
So let's take a moment to have a

00:11:06.376 --> 00:11:07.556 A:middle
look at what is going on here.

00:11:08.216 --> 00:11:11.876 A:middle
It has correctly spotted the two

00:11:12.026 --> 00:11:15.376 A:middle
six-sided dice with pips, and it

00:11:15.376 --> 00:11:18.056 A:middle
has given them the right labels.

00:11:18.476 --> 00:11:20.966 A:middle
It has ignored most of the other

00:11:20.966 --> 00:11:23.306 A:middle
dice in the picture, except for

00:11:23.306 --> 00:11:24.246 A:middle
a couple over here.

00:11:28.156 --> 00:11:29.596 A:middle
It has given those the wrong

00:11:29.596 --> 00:11:30.206 A:middle
numbers.

00:11:30.436 --> 00:11:31.986 A:middle
So why is this?

00:11:32.336 --> 00:11:34.806 A:middle
The problem here is a difference

00:11:34.806 --> 00:11:35.726 A:middle
in expectation.

00:11:36.596 --> 00:11:37.896 A:middle
Scott knows the dice that are

00:11:37.896 --> 00:11:39.726 A:middle
going to be used are six-sided

00:11:39.806 --> 00:11:41.036 A:middle
white dice with pips.

00:11:41.686 --> 00:11:43.226 A:middle
My son's idea of dice is quite

00:11:43.226 --> 00:11:43.636 A:middle
different.

00:11:44.006 --> 00:11:44.956 A:middle
They're colored.

00:11:44.956 --> 00:11:46.406 A:middle
They don't just have six sides.

00:11:47.266 --> 00:11:49.246 A:middle
So how might we address this in

00:11:49.246 --> 00:11:50.006 A:middle
our application?

00:11:51.006 --> 00:11:52.926 A:middle
Well, either we can insist on

00:11:52.926 --> 00:11:54.206 A:middle
using the dice that maybe are

00:11:54.206 --> 00:11:56.316 A:middle
supplied with the game in the

00:11:56.316 --> 00:11:58.806 A:middle
classroom, or we can train the

00:11:58.806 --> 00:12:00.536 A:middle
model with these dice.

00:11:58.806 --> 00:12:00.536 A:middle
model with these dice.

00:12:00.836 --> 00:12:02.016 A:middle
There are two ways we can

00:12:02.016 --> 00:12:02.766 A:middle
approach this.

00:12:03.366 --> 00:12:05.166 A:middle
Either we can decide that only

00:12:05.166 --> 00:12:06.726 A:middle
the six-sided dice with pips are

00:12:06.726 --> 00:12:08.556 A:middle
valid, but we want to exclude

00:12:08.556 --> 00:12:11.026 A:middle
the other dice, in which case,

00:12:11.276 --> 00:12:13.096 A:middle
we just need to take photographs

00:12:13.096 --> 00:12:14.666 A:middle
containing both kinds of dice,

00:12:15.326 --> 00:12:16.836 A:middle
and just label the six-sided

00:12:16.836 --> 00:12:17.286 A:middle
ones.

00:12:18.246 --> 00:12:20.466 A:middle
Or if we were building a bear

00:12:20.776 --> 00:12:23.516 A:middle
and bat game, we might like to

00:12:23.516 --> 00:12:25.096 A:middle
add the other kinds of dice into

00:12:25.096 --> 00:12:26.546 A:middle
our model, and label those too,

00:12:27.386 --> 00:12:28.916 A:middle
either just using their numbers

00:12:29.236 --> 00:12:30.946 A:middle
or adding extra labels to

00:12:30.946 --> 00:12:32.076 A:middle
distinguish the colors.

00:12:32.806 --> 00:12:35.576 A:middle
Red 6, black 4, etc.

00:12:38.466 --> 00:12:40.626 A:middle
So let's send this model on to

00:12:40.626 --> 00:12:42.656 A:middle
Scott, so he can build his demo.

00:12:43.266 --> 00:12:45.556 A:middle
I can use the Share button to

00:12:45.556 --> 00:12:47.000 A:middle
simply mail the model.

00:12:54.226 --> 00:12:55.176 A:middle
And there we have it.

00:12:57.516 --> 00:13:01.500 A:middle
[ Applause ]

00:12:57.516 --> 00:13:01.500 A:middle
[ Applause ]

00:13:07.256 --> 00:13:08.396 A:middle
&gt;&gt; So, we've seen how you can

00:13:08.396 --> 00:13:10.696 A:middle
use the Create ML application to

00:13:10.696 --> 00:13:12.726 A:middle
train your object detector on

00:13:12.726 --> 00:13:13.776 A:middle
training data that you've

00:13:13.776 --> 00:13:14.336 A:middle
collected.

00:13:14.746 --> 00:13:16.526 A:middle
There are some things I'd like

00:13:16.526 --> 00:13:17.896 A:middle
you to consider when building

00:13:17.896 --> 00:13:18.726 A:middle
that training data.

00:13:19.626 --> 00:13:21.496 A:middle
Firstly, you should have a

00:13:21.496 --> 00:13:23.376 A:middle
balanced number of images with

00:13:23.376 --> 00:13:25.116 A:middle
annotations for each class.

00:13:26.416 --> 00:13:28.266 A:middle
This tells the algorithm that

00:13:28.266 --> 00:13:29.646 A:middle
you consider each of these to be

00:13:29.646 --> 00:13:31.276 A:middle
equally important, and we can

00:13:31.276 --> 00:13:32.556 A:middle
build a model which performs

00:13:32.556 --> 00:13:35.106 A:middle
equally well on all of the

00:13:35.146 --> 00:13:35.746 A:middle
classes.

00:13:37.456 --> 00:13:39.196 A:middle
Secondly, you are going to need

00:13:39.196 --> 00:13:40.096 A:middle
a bunch of images.

00:13:40.266 --> 00:13:42.036 A:middle
I recommend you start with 30

00:13:42.036 --> 00:13:44.206 A:middle
images with annotations for each

00:13:44.246 --> 00:13:45.346 A:middle
class you want the model to

00:13:45.346 --> 00:13:47.546 A:middle
recognize, and increase that

00:13:47.546 --> 00:13:49.256 A:middle
number if you find performance

00:13:49.256 --> 00:13:51.086 A:middle
isn't good enough, or if your

00:13:51.086 --> 00:13:52.236 A:middle
subjects are particularly

00:13:52.236 --> 00:13:52.906 A:middle
complicated.

00:13:53.186 --> 00:13:54.196 A:middle
For instance, they look

00:13:54.196 --> 00:13:56.000 A:middle
different on different sides.

00:13:59.376 --> 00:14:00.566 A:middle
What about the issue we

00:13:59.376 --> 00:14:00.566 A:middle
What about the issue we

00:14:00.566 --> 00:14:01.626 A:middle
encountered with the different

00:14:01.626 --> 00:14:02.376 A:middle
colored dice?

00:14:02.946 --> 00:14:04.716 A:middle
Well, that's not the only way

00:14:04.716 --> 00:14:05.626 A:middle
pictures might differ.

00:14:06.696 --> 00:14:09.036 A:middle
We recommend you consider how

00:14:09.036 --> 00:14:10.406 A:middle
the application will be used in

00:14:10.406 --> 00:14:11.086 A:middle
the real world.

00:14:11.776 --> 00:14:13.696 A:middle
Your users may not have studio

00:14:13.696 --> 00:14:15.656 A:middle
lighting, standard dice, and a

00:14:15.656 --> 00:14:16.956 A:middle
beautiful wooden desk to work

00:14:16.956 --> 00:14:17.126 A:middle
with.

00:14:18.176 --> 00:14:20.486 A:middle
Perhaps ask your friends to

00:14:20.486 --> 00:14:21.956 A:middle
collect additional data in

00:14:21.956 --> 00:14:23.896 A:middle
different scenarios, such as

00:14:24.226 --> 00:14:26.296 A:middle
indoor lighting, outdoors in the

00:14:26.296 --> 00:14:28.826 A:middle
sun, different backgrounds, and

00:14:28.906 --> 00:14:30.406 A:middle
add in different objects that

00:14:30.406 --> 00:14:31.956 A:middle
you aren't using for your model.

00:14:32.796 --> 00:14:34.336 A:middle
This helps the model generalize

00:14:34.336 --> 00:14:34.856 A:middle
really well.

00:14:39.046 --> 00:14:40.146 A:middle
Something that may be surprising

00:14:40.146 --> 00:14:42.326 A:middle
to you, if you've used an image

00:14:42.326 --> 00:14:44.376 A:middle
classifier before, is that one

00:14:44.376 --> 00:14:45.156 A:middle
label is enough.

00:14:46.316 --> 00:14:48.186 A:middle
This is because by explaining a

00:14:48.186 --> 00:14:49.686 A:middle
part of your image that is a

00:14:49.686 --> 00:14:51.676 A:middle
dog, you're also saying that the

00:14:51.676 --> 00:14:53.516 A:middle
rest of it isn't, and the model

00:14:53.516 --> 00:14:54.416 A:middle
trains accordingly.

00:14:55.506 --> 00:14:57.506 A:middle
So, for example, if you were

00:14:57.506 --> 00:14:59.156 A:middle
building an application to count

00:14:59.156 --> 00:15:00.576 A:middle
the number of pickle jars in

00:14:59.156 --> 00:15:00.576 A:middle
the number of pickle jars in

00:15:00.576 --> 00:15:02.366 A:middle
your fridge, you don't need to

00:15:02.366 --> 00:15:03.166 A:middle
label all of the other

00:15:03.166 --> 00:15:03.816 A:middle
condiments.

00:15:03.986 --> 00:15:05.476 A:middle
It automatically infers that

00:15:05.476 --> 00:15:06.616 A:middle
they're not pickle jars.

00:15:08.656 --> 00:15:12.646 A:middle
Once you've built your model,

00:15:12.646 --> 00:15:14.616 A:middle
and you want to add the

00:15:14.616 --> 00:15:15.716 A:middle
functionality into your

00:15:15.716 --> 00:15:18.326 A:middle
application, we recommend you

00:15:18.326 --> 00:15:19.416 A:middle
use the vision framework.

00:15:20.216 --> 00:15:21.926 A:middle
The vision framework can

00:15:21.926 --> 00:15:24.016 A:middle
seamlessly integrate live camera

00:15:24.396 --> 00:15:26.566 A:middle
as well as video into your model

00:15:26.566 --> 00:15:27.000 A:middle
flow.

00:15:29.346 --> 00:15:30.996 A:middle
And that's all there is to

00:15:30.996 --> 00:15:32.446 A:middle
training object detectors.

00:15:33.516 --> 00:15:39.960 A:middle
[ Applause ]
