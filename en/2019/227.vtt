WEBVTT

00:00:01.176 --> 00:00:04.500 A:middle
[ Music ]

00:00:10.516 --> 00:00:15.556 A:middle
[ Applause ]

00:00:16.056 --> 00:00:16.476 A:middle
&gt;&gt; Good morning.

00:00:16.936 --> 00:00:18.146 A:middle
My name is Julio Gonzalez.

00:00:18.436 --> 00:00:19.766 A:middle
I manage the Type Engineering

00:00:19.826 --> 00:00:21.206 A:middle
Team and it's great to be here

00:00:21.206 --> 00:00:22.606 A:middle
with you today to share with you

00:00:22.886 --> 00:00:24.326 A:middle
all the new advances that we

00:00:24.326 --> 00:00:26.896 A:middle
have for text and fonts in iOS.

00:00:28.346 --> 00:00:30.326 A:middle
We have a full agenda today.

00:00:31.136 --> 00:00:33.166 A:middle
I'll start by showing you some

00:00:33.166 --> 00:00:34.736 A:middle
access to some new system fonts

00:00:34.906 --> 00:00:36.456 A:middle
for your apps.

00:00:37.216 --> 00:00:39.126 A:middle
I will then continue by showing

00:00:39.126 --> 00:00:40.956 A:middle
you what it takes to build an

00:00:40.956 --> 00:00:42.346 A:middle
app that can make fonts

00:00:42.346 --> 00:00:44.316 A:middle
available systemwide as well as

00:00:44.356 --> 00:00:46.266 A:middle
how to make an app access those

00:00:46.266 --> 00:00:47.136 A:middle
very same fonts.

00:00:48.466 --> 00:00:49.696 A:middle
Then, we'll talk about some new

00:00:49.696 --> 00:00:51.316 A:middle
mechanisms that we have for apps

00:00:51.396 --> 00:00:52.146 A:middle
to select fonts.

00:00:53.336 --> 00:00:55.176 A:middle
And we'll end up by talking

00:00:55.176 --> 00:00:56.576 A:middle
about some text scaling

00:00:56.576 --> 00:00:58.936 A:middle
considerations that you may have

00:00:59.076 --> 00:01:00.696 A:middle
as you bring your iPad apps to

00:00:59.076 --> 00:01:00.696 A:middle
as you bring your iPad apps to

00:01:00.696 --> 00:01:01.026 A:middle
the Mac.

00:01:02.326 --> 00:01:03.306 A:middle
Let's get started.

00:01:04.146 --> 00:01:05.816 A:middle
We'll be making available three

00:01:05.816 --> 00:01:07.676 A:middle
new system fonts in all the new

00:01:07.676 --> 00:01:08.116 A:middle
releases.

00:01:09.166 --> 00:01:10.786 A:middle
The first one is a rounded

00:01:10.786 --> 00:01:12.616 A:middle
system font which you can see

00:01:12.616 --> 00:01:14.886 A:middle
here being used by the schedule

00:01:14.886 --> 00:01:16.296 A:middle
label at the very top of the

00:01:16.296 --> 00:01:17.086 A:middle
Reminders app.

00:01:18.276 --> 00:01:20.296 A:middle
There is also a serif system

00:01:20.296 --> 00:01:21.466 A:middle
font that we're making available

00:01:22.026 --> 00:01:23.666 A:middle
which you see here being used in

00:01:23.666 --> 00:01:25.766 A:middle
multiple places in the Books

00:01:25.766 --> 00:01:26.386 A:middle
application.

00:01:27.336 --> 00:01:29.216 A:middle
Finally, we're making available

00:01:29.306 --> 00:01:31.036 A:middle
the monospaced system font which

00:01:31.036 --> 00:01:32.966 A:middle
you may have seen before used in

00:01:32.966 --> 00:01:33.686 A:middle
Swift Playgrounds.

00:01:34.556 --> 00:01:36.176 A:middle
I encourage you to consult the

00:01:36.176 --> 00:01:38.176 A:middle
Human Interface Guidelines to

00:01:38.176 --> 00:01:39.786 A:middle
see what are the best uses of

00:01:39.786 --> 00:01:41.386 A:middle
these system fonts in your

00:01:41.386 --> 00:01:42.336 A:middle
application UIs.

00:01:43.876 --> 00:01:45.376 A:middle
You can get access to the system

00:01:45.376 --> 00:01:47.436 A:middle
fonts by new APIs in

00:01:47.436 --> 00:01:48.506 A:middle
UIFontDescriptor.

00:01:49.386 --> 00:01:50.576 A:middle
We've defined four new

00:01:50.576 --> 00:01:51.076 A:middle
constants.

00:01:51.796 --> 00:01:53.536 A:middle
The first one, the default is

00:01:53.596 --> 00:01:55.086 A:middle
the standard system sans serif

00:01:55.086 --> 00:01:57.346 A:middle
system font that you've all used

00:01:57.346 --> 00:01:58.046 A:middle
throughout the years.

00:01:58.476 --> 00:01:59.596 A:middle
And then, we've defined a

00:01:59.646 --> 00:02:01.246 A:middle
constant for each of the new

00:01:59.646 --> 00:02:01.246 A:middle
constant for each of the new

00:02:01.466 --> 00:02:02.676 A:middle
system fonts that we're making

00:02:02.676 --> 00:02:03.056 A:middle
available.

00:02:04.226 --> 00:02:05.646 A:middle
You can use these constants with

00:02:05.646 --> 00:02:07.146 A:middle
a new method called withDesign

00:02:07.546 --> 00:02:09.816 A:middle
whose purpose is to transform a

00:02:09.816 --> 00:02:11.616 A:middle
font descriptor from one design

00:02:11.656 --> 00:02:12.086 A:middle
to another.

00:02:12.726 --> 00:02:14.416 A:middle
It's fairly simple to use.

00:02:14.736 --> 00:02:15.386 A:middle
You start with a font

00:02:15.386 --> 00:02:15.906 A:middle
descriptor.

00:02:15.906 --> 00:02:16.976 A:middle
In this case, we're getting a

00:02:17.036 --> 00:02:19.556 A:middle
font descriptor from a bold

00:02:19.556 --> 00:02:20.566 A:middle
system font that we've

00:02:20.566 --> 00:02:21.496 A:middle
instantiated.

00:02:22.166 --> 00:02:24.046 A:middle
And then, what we want to do is

00:02:24.046 --> 00:02:25.796 A:middle
actually obtain a rounded system

00:02:25.796 --> 00:02:26.046 A:middle
font.

00:02:26.286 --> 00:02:28.826 A:middle
So, we make the withDesign call

00:02:29.086 --> 00:02:30.706 A:middle
with the rounded constant.

00:02:31.136 --> 00:02:32.796 A:middle
And if that's successful, we're

00:02:32.796 --> 00:02:34.476 A:middle
able to instantiate our rounded

00:02:34.556 --> 00:02:35.386 A:middle
bold system font.

00:02:35.946 --> 00:02:37.946 A:middle
Notice we instantiated the

00:02:38.006 --> 00:02:39.876 A:middle
system font using a high-level

00:02:39.876 --> 00:02:40.046 A:middle
API.

00:02:40.366 --> 00:02:41.716 A:middle
We did not instantiate the

00:02:41.756 --> 00:02:43.526 A:middle
system font by using its name

00:02:44.166 --> 00:02:45.246 A:middle
which leads me to the next

00:02:45.296 --> 00:02:45.646 A:middle
topic.

00:02:46.886 --> 00:02:48.636 A:middle
We've noticed that many apps

00:02:49.286 --> 00:02:51.406 A:middle
still today instantiate system

00:02:51.406 --> 00:02:52.206 A:middle
fonts by name.

00:02:52.946 --> 00:02:53.816 A:middle
This is something that in the

00:02:53.816 --> 00:02:55.526 A:middle
past we've strongly discouraged

00:02:55.526 --> 00:02:56.356 A:middle
apps to do.

00:02:56.906 --> 00:02:58.526 A:middle
So, it's starting with the new

00:02:58.526 --> 00:03:00.506 A:middle
releases, any such font

00:02:58.526 --> 00:03:00.506 A:middle
releases, any such font

00:03:00.506 --> 00:03:01.876 A:middle
instantiation will fail.

00:03:02.306 --> 00:03:03.886 A:middle
You need to use one of the

00:03:03.886 --> 00:03:06.206 A:middle
high-level system calls to

00:03:06.396 --> 00:03:07.756 A:middle
instantiate such fonts.

00:03:08.436 --> 00:03:09.106 A:middle
You know that you're

00:03:09.106 --> 00:03:10.576 A:middle
instantiating a system font by

00:03:10.576 --> 00:03:13.336 A:middle
name because if you look at the

00:03:13.336 --> 00:03:14.726 A:middle
name that you're passing with if

00:03:14.726 --> 00:03:16.166 A:middle
it starts with a dot, you're

00:03:16.166 --> 00:03:19.716 A:middle
using a, an Apple private name.

00:03:20.526 --> 00:03:21.876 A:middle
Now, there are many good reasons

00:03:21.876 --> 00:03:23.206 A:middle
to instantiate fonts by name.

00:03:23.826 --> 00:03:25.206 A:middle
That's how you get access to

00:03:25.326 --> 00:03:26.826 A:middle
custom system fonts in your apps

00:03:27.316 --> 00:03:29.226 A:middle
as well as if you are parsing a

00:03:29.226 --> 00:03:30.366 A:middle
document, that's how you would

00:03:30.986 --> 00:03:32.036 A:middle
instantiate a font that the

00:03:32.036 --> 00:03:32.706 A:middle
document needs.

00:03:33.496 --> 00:03:34.916 A:middle
Now, we've also noticed that

00:03:34.916 --> 00:03:37.496 A:middle
many apps are not handling

00:03:37.546 --> 00:03:39.266 A:middle
properly font instantiation by

00:03:39.266 --> 00:03:39.536 A:middle
name.

00:03:40.916 --> 00:03:41.946 A:middle
Sometimes, they crash.

00:03:41.946 --> 00:03:43.226 A:middle
And the reason is, is because

00:03:43.226 --> 00:03:44.856 A:middle
they don't actually look at the

00:03:44.856 --> 00:03:46.896 A:middle
return of the instantiation.

00:03:46.896 --> 00:03:47.986 A:middle
They assume that it's always

00:03:47.986 --> 00:03:48.596 A:middle
going to succeed.

00:03:49.406 --> 00:03:51.496 A:middle
As we change fonts in the OS for

00:03:51.496 --> 00:03:53.526 A:middle
some of our fonts, or we remove

00:03:53.586 --> 00:03:55.456 A:middle
fonts from the OS, those, those

00:03:55.456 --> 00:03:56.646 A:middle
fonts are no longer present.

00:03:56.706 --> 00:03:58.256 A:middle
So, your apps cannot assume that

00:03:58.256 --> 00:04:00.626 A:middle
a font that isn't in one version

00:03:58.256 --> 00:04:00.626 A:middle
a font that isn't in one version

00:04:00.626 --> 00:04:01.886 A:middle
of the OS will be in another.

00:04:02.426 --> 00:04:03.956 A:middle
You need to pay attention to the

00:04:03.956 --> 00:04:05.816 A:middle
result of the instantiation and

00:04:05.816 --> 00:04:07.206 A:middle
take appropriate action in the

00:04:07.206 --> 00:04:08.706 A:middle
app and substitute that with

00:04:08.706 --> 00:04:10.026 A:middle
another font if necessary.

00:04:10.626 --> 00:04:13.616 A:middle
With that, I'd like to switch

00:04:13.616 --> 00:04:15.346 A:middle
subjects to something that I as

00:04:15.346 --> 00:04:16.896 A:middle
a user and as a developer of

00:04:16.896 --> 00:04:17.906 A:middle
fonts have been waiting for a

00:04:17.906 --> 00:04:18.516 A:middle
long time.

00:04:18.875 --> 00:04:20.926 A:middle
And that is the ability for apps

00:04:20.995 --> 00:04:22.246 A:middle
to be able to install fonts

00:04:22.246 --> 00:04:24.866 A:middle
systemwide in the OS.

00:04:25.156 --> 00:04:26.976 A:middle
So, we call these apps Font

00:04:26.976 --> 00:04:27.736 A:middle
Provider Apps.

00:04:28.256 --> 00:04:30.406 A:middle
And basically, they are apps

00:04:30.406 --> 00:04:31.576 A:middle
that you submit to the Store

00:04:31.876 --> 00:04:33.166 A:middle
which can make fonts available

00:04:33.166 --> 00:04:34.466 A:middle
systemwide in the OS.

00:04:35.036 --> 00:04:36.276 A:middle
Along with those apps, we've

00:04:36.386 --> 00:04:39.146 A:middle
created a very simple UI setting

00:04:39.846 --> 00:04:41.196 A:middle
in which users can browse the

00:04:41.256 --> 00:04:43.456 A:middle
fonts that applications have

00:04:43.456 --> 00:04:44.826 A:middle
installed as well as remove

00:04:44.866 --> 00:04:46.006 A:middle
fonts that they no longer want

00:04:46.006 --> 00:04:46.446 A:middle
to use.

00:04:47.686 --> 00:04:48.856 A:middle
To create one of these apps,

00:04:48.886 --> 00:04:50.556 A:middle
there are two things that the

00:04:50.556 --> 00:04:51.286 A:middle
app needs to do.

00:04:51.486 --> 00:04:52.426 A:middle
First, it must obtain

00:04:52.426 --> 00:04:53.046 A:middle
entitlement.

00:04:53.766 --> 00:04:55.656 A:middle
And second, as the app gets

00:04:55.656 --> 00:04:57.386 A:middle
submitted to the store, it needs

00:04:57.386 --> 00:04:58.956 A:middle
to be submitted with all the

00:04:58.956 --> 00:05:00.356 A:middle
fonts that the app can make

00:04:58.956 --> 00:05:00.356 A:middle
fonts that the app can make

00:05:00.356 --> 00:05:01.436 A:middle
available to the OS.

00:05:02.176 --> 00:05:02.946 A:middle
This is important.

00:05:02.946 --> 00:05:05.006 A:middle
The fonts need to be part of

00:05:05.006 --> 00:05:06.386 A:middle
your bundle, or they could be

00:05:06.526 --> 00:05:07.946 A:middle
part of an asset catalog.

00:05:08.686 --> 00:05:10.706 A:middle
The key thing is that the OS

00:05:10.776 --> 00:05:12.356 A:middle
will not let a font provider

00:05:12.356 --> 00:05:15.156 A:middle
application install any

00:05:15.156 --> 00:05:15.966 A:middle
arbitrary fonts.

00:05:16.616 --> 00:05:18.486 A:middle
As you submit your fonts to the

00:05:18.486 --> 00:05:20.386 A:middle
store for validation, it'll run

00:05:20.386 --> 00:05:21.676 A:middle
through a similar validation

00:05:21.676 --> 00:05:23.606 A:middle
that like what we do in, in

00:05:23.796 --> 00:05:24.656 A:middle
macOS in Font Book.

00:05:25.096 --> 00:05:26.276 A:middle
One of the things we do is we

00:05:26.276 --> 00:05:28.346 A:middle
check for the type of the format

00:05:28.346 --> 00:05:29.466 A:middle
of the, of the font.

00:05:30.116 --> 00:05:31.296 A:middle
We support all the modern

00:05:31.296 --> 00:05:34.476 A:middle
formats; ttf, otf, ttc, and all

00:05:34.476 --> 00:05:35.486 A:middle
of its modern variants.

00:05:35.876 --> 00:05:38.026 A:middle
What we do not support are old

00:05:38.026 --> 00:05:39.426 A:middle
font formats such as suitcase

00:05:39.426 --> 00:05:41.336 A:middle
fonts or postscript fonts.

00:05:42.676 --> 00:05:44.166 A:middle
To obtain the entitlement is

00:05:44.356 --> 00:05:45.106 A:middle
fairly easy.

00:05:45.376 --> 00:05:46.666 A:middle
In Xcode, now there's a new

00:05:46.666 --> 00:05:47.906 A:middle
capability called Fonts.

00:05:48.616 --> 00:05:49.556 A:middle
Once you select it, you're

00:05:49.556 --> 00:05:51.766 A:middle
presented with two options.

00:05:52.106 --> 00:05:54.466 A:middle
The first option is to install

00:05:54.586 --> 00:05:55.046 A:middle
fonts.

00:05:55.546 --> 00:05:56.756 A:middle
And that gives the app the

00:05:56.756 --> 00:05:59.326 A:middle
ability to make fonts available

00:05:59.326 --> 00:06:00.046 A:middle
systemwide.

00:05:59.326 --> 00:06:00.046 A:middle
systemwide.

00:06:00.796 --> 00:06:03.126 A:middle
The second option is to use

00:06:03.126 --> 00:06:03.866 A:middle
installed fonts.

00:06:04.336 --> 00:06:05.946 A:middle
And why do we need this option?

00:06:06.396 --> 00:06:08.986 A:middle
Well, by default, apps do not

00:06:08.986 --> 00:06:11.066 A:middle
get access to user installed

00:06:11.066 --> 00:06:11.476 A:middle
fonts.

00:06:11.996 --> 00:06:13.496 A:middle
The app needs to opt in by

00:06:13.496 --> 00:06:15.916 A:middle
selecting this capability to be

00:06:15.916 --> 00:06:18.556 A:middle
able to see those fonts.

00:06:18.986 --> 00:06:22.336 A:middle
Now, clients of or users of

00:06:22.336 --> 00:06:23.516 A:middle
these applications will have

00:06:23.516 --> 00:06:24.556 A:middle
some expectations.

00:06:24.826 --> 00:06:27.096 A:middle
The first one will be that the

00:06:27.206 --> 00:06:28.656 A:middle
app should provide a meaningful

00:06:28.656 --> 00:06:30.386 A:middle
UI where users can browse fonts,

00:06:31.036 --> 00:06:32.536 A:middle
install, and remove fonts.

00:06:32.876 --> 00:06:34.106 A:middle
That's necessary because, in

00:06:34.216 --> 00:06:35.786 A:middle
iOS, we do not have an

00:06:35.786 --> 00:06:37.116 A:middle
application that can install

00:06:37.186 --> 00:06:38.966 A:middle
fonts in the OS like we have in

00:06:39.076 --> 00:06:39.346 A:middle
macOS.

00:06:41.056 --> 00:06:42.646 A:middle
Also, the application should

00:06:42.646 --> 00:06:44.246 A:middle
respond to system font change

00:06:44.246 --> 00:06:45.116 A:middle
notifications.

00:06:45.616 --> 00:06:47.006 A:middle
And the reason it needs to do so

00:06:47.006 --> 00:06:48.886 A:middle
is because the user is able to

00:06:48.886 --> 00:06:50.366 A:middle
remove fonts in the settings app

00:06:50.756 --> 00:06:52.446 A:middle
and the app should notice when

00:06:52.446 --> 00:06:54.076 A:middle
that happens and update its UI.

00:06:55.026 --> 00:06:56.336 A:middle
And finally, if you're a font

00:06:56.336 --> 00:06:57.756 A:middle
provider application that plans

00:06:57.796 --> 00:06:59.546 A:middle
to make a large set of fonts

00:06:59.546 --> 00:07:01.306 A:middle
available to the, to the user, a

00:06:59.546 --> 00:07:01.306 A:middle
available to the, to the user, a

00:07:01.416 --> 00:07:02.496 A:middle
large library of fonts.

00:07:03.186 --> 00:07:04.586 A:middle
We highly recommend that you use

00:07:04.666 --> 00:07:06.436 A:middle
On-Demand resources and package

00:07:06.436 --> 00:07:07.926 A:middle
your fonts in an asset catalog.

00:07:08.716 --> 00:07:10.486 A:middle
That's a far more effective way

00:07:10.486 --> 00:07:11.986 A:middle
to deliver fonts that your users

00:07:11.986 --> 00:07:13.776 A:middle
need because the users will only

00:07:13.776 --> 00:07:14.916 A:middle
download the fonts that they

00:07:14.996 --> 00:07:15.956 A:middle
actually are going to use.

00:07:16.236 --> 00:07:17.826 A:middle
Instead of downloading a huge

00:07:17.876 --> 00:07:19.296 A:middle
font library that may be sitting

00:07:19.556 --> 00:07:21.126 A:middle
where they only use a handful of

00:07:21.126 --> 00:07:21.396 A:middle
fonts.

00:07:22.706 --> 00:07:24.756 A:middle
So, let me walk over to the demo

00:07:24.756 --> 00:07:26.696 A:middle
machine and show you how this

00:07:26.696 --> 00:07:27.556 A:middle
feature works.

00:07:28.976 --> 00:07:30.746 A:middle
So, let's assume that the user

00:07:30.746 --> 00:07:32.406 A:middle
has downloaded from the store an

00:07:32.406 --> 00:07:34.566 A:middle
application that browses

00:07:34.906 --> 00:07:35.456 A:middle
documents.

00:07:36.016 --> 00:07:37.696 A:middle
And this is one such app.

00:07:37.836 --> 00:07:39.266 A:middle
I call it the Font Consumer app.

00:07:40.126 --> 00:07:41.676 A:middle
And here on the left, it has a

00:07:41.676 --> 00:07:42.916 A:middle
set of documents that I can

00:07:42.916 --> 00:07:43.366 A:middle
display.

00:07:43.776 --> 00:07:45.146 A:middle
On the right, it just shows the

00:07:45.146 --> 00:07:46.256 A:middle
contents of the document.

00:07:46.906 --> 00:07:48.016 A:middle
Let's go ahead and reload this

00:07:48.016 --> 00:07:48.486 A:middle
document.

00:07:48.976 --> 00:07:50.216 A:middle
Notice the sheet comes up.

00:07:50.436 --> 00:07:51.846 A:middle
This sheet is not put up by the

00:07:51.846 --> 00:07:52.016 A:middle
app.

00:07:52.446 --> 00:07:53.686 A:middle
It is put up by the OS.

00:07:54.486 --> 00:07:56.426 A:middle
And it does so because it

00:07:56.426 --> 00:07:58.056 A:middle
noticed that this app is trying

00:07:58.056 --> 00:08:01.106 A:middle
to access three fonts that have

00:07:58.056 --> 00:08:01.106 A:middle
to access three fonts that have

00:08:01.106 --> 00:08:02.466 A:middle
not been made available to this

00:08:02.466 --> 00:08:03.176 A:middle
application.

00:08:03.666 --> 00:08:06.316 A:middle
So, this application is just

00:08:06.756 --> 00:08:08.336 A:middle
substituting the fonts and

00:08:08.396 --> 00:08:09.496 A:middle
showing the contents of this

00:08:09.496 --> 00:08:10.556 A:middle
document in Helvetica.

00:08:11.376 --> 00:08:12.926 A:middle
So, what's left for the user to

00:08:12.926 --> 00:08:15.206 A:middle
do but to go ahead and try to

00:08:15.586 --> 00:08:17.606 A:middle
get an app that can make those

00:08:17.606 --> 00:08:19.016 A:middle
fonts available to the OS?

00:08:19.596 --> 00:08:20.656 A:middle
So, let's assume that they've

00:08:20.656 --> 00:08:21.946 A:middle
gone to the store and downloaded

00:08:21.946 --> 00:08:23.026 A:middle
such an app.

00:08:23.026 --> 00:08:24.486 A:middle
I call it the Font Provider App.

00:08:24.746 --> 00:08:26.006 A:middle
On the left, it has a set of

00:08:26.056 --> 00:08:27.336 A:middle
fonts that I can make available.

00:08:27.416 --> 00:08:28.666 A:middle
On the right, it shows just a

00:08:28.706 --> 00:08:30.336 A:middle
simple preview of the fonts.

00:08:30.696 --> 00:08:32.025 A:middle
Let's go ahead and register all

00:08:32.025 --> 00:08:32.346 A:middle
the fonts.

00:08:32.846 --> 00:08:34.186 A:middle
Notice again, this sheet comes

00:08:34.186 --> 00:08:34.616 A:middle
up.

00:08:34.895 --> 00:08:36.155 A:middle
This is not put up by the app.

00:08:36.275 --> 00:08:37.376 A:middle
It is put up by the OS.

00:08:37.456 --> 00:08:39.956 A:middle
And this is necessary because we

00:08:39.956 --> 00:08:42.096 A:middle
do not allow in the OS apps to

00:08:42.096 --> 00:08:44.035 A:middle
install fonts silently on the

00:08:44.035 --> 00:08:44.816 A:middle
user's behalf.

00:08:45.116 --> 00:08:47.226 A:middle
The user must provide consent.

00:08:47.226 --> 00:08:48.756 A:middle
And this is what this dialog

00:08:48.756 --> 00:08:49.026 A:middle
does.

00:08:49.516 --> 00:08:50.636 A:middle
So, let's go ahead and provide

00:08:50.636 --> 00:08:51.176 A:middle
the consent.

00:08:52.736 --> 00:08:54.726 A:middle
Notice the UI, the all the font

00:08:54.726 --> 00:08:56.416 A:middle
names went from red to black.

00:08:56.616 --> 00:08:57.976 A:middle
It's a simple way for the app

00:08:57.976 --> 00:08:59.036 A:middle
indicate that the fonts are

00:08:59.036 --> 00:08:59.666 A:middle
registered.

00:09:00.016 --> 00:09:01.036 A:middle
Let's make sure that they are

00:09:01.036 --> 00:09:01.556 A:middle
registered.

00:09:01.976 --> 00:09:03.456 A:middle
I can now go to the Settings app

00:09:04.066 --> 00:09:06.506 A:middle
and in General, Fonts.

00:09:06.656 --> 00:09:07.626 A:middle
It's a new setting here.

00:09:08.346 --> 00:09:09.466 A:middle
You have a list of fonts that

00:09:09.466 --> 00:09:10.936 A:middle
all font provider apps have made

00:09:10.936 --> 00:09:11.366 A:middle
available.

00:09:12.176 --> 00:09:13.316 A:middle
So, we see the fonts that the

00:09:13.366 --> 00:09:14.286 A:middle
Font Provider app made

00:09:14.286 --> 00:09:14.716 A:middle
available.

00:09:14.916 --> 00:09:16.016 A:middle
I can go browse one of the

00:09:16.016 --> 00:09:16.296 A:middle
fonts.

00:09:16.746 --> 00:09:17.826 A:middle
Century Schoolbook.

00:09:18.396 --> 00:09:19.846 A:middle
And you can see here different

00:09:19.846 --> 00:09:20.866 A:middle
previews of the fonts.

00:09:21.586 --> 00:09:23.166 A:middle
I will just at this stage, just

00:09:23.826 --> 00:09:25.096 A:middle
attempt to remove this font.

00:09:26.436 --> 00:09:27.516 A:middle
I'll go ahead and do so.

00:09:28.026 --> 00:09:29.266 A:middle
Century Schoolbook will be

00:09:29.266 --> 00:09:29.806 A:middle
removed.

00:09:30.076 --> 00:09:31.866 A:middle
Now, it's no longer in the list.

00:09:31.966 --> 00:09:34.096 A:middle
Now, the expectation is that my

00:09:34.096 --> 00:09:36.146 A:middle
app should have noticed that the

00:09:36.146 --> 00:09:37.056 A:middle
font was removed.

00:09:37.686 --> 00:09:39.556 A:middle
And indeed, it now shows in red

00:09:39.626 --> 00:09:40.596 A:middle
because it listened to font

00:09:40.596 --> 00:09:41.816 A:middle
change notifications and it

00:09:41.816 --> 00:09:42.556 A:middle
updated the UI.

00:09:42.556 --> 00:09:44.746 A:middle
Let's go ahead and reregister

00:09:45.096 --> 00:09:47.426 A:middle
all the fonts.

00:09:47.586 --> 00:09:49.386 A:middle
I'll go walk back to my Font

00:09:49.386 --> 00:09:52.316 A:middle
Consumer app and what I see now

00:09:52.316 --> 00:09:53.476 A:middle
is that the document no longer

00:09:53.476 --> 00:09:54.456 A:middle
displays with Helvetica.

00:09:54.866 --> 00:09:56.256 A:middle
It actually listened to font

00:09:56.256 --> 00:09:57.646 A:middle
change notifications that well

00:09:58.046 --> 00:09:59.586 A:middle
and took notice that all the

00:09:59.586 --> 00:10:00.666 A:middle
fonts have now been made

00:09:59.586 --> 00:10:00.666 A:middle
fonts have now been made

00:10:00.666 --> 00:10:00.966 A:middle
available.

00:10:01.186 --> 00:10:03.616 A:middle
If I look at other documents, I

00:10:03.616 --> 00:10:04.846 A:middle
see that they're not using

00:10:04.846 --> 00:10:05.346 A:middle
Helvetica.

00:10:05.516 --> 00:10:06.766 A:middle
They're using different fonts

00:10:06.826 --> 00:10:08.936 A:middle
that the Font Provider app made

00:10:08.936 --> 00:10:09.376 A:middle
available.

00:10:10.526 --> 00:10:13.036 A:middle
So, now let me show you in code

00:10:13.516 --> 00:10:14.826 A:middle
what it takes to build one of

00:10:14.826 --> 00:10:15.486 A:middle
these apps.

00:10:16.806 --> 00:10:19.786 A:middle
So, in CoreText, in particular

00:10:19.786 --> 00:10:21.696 A:middle
in CTFontManager.h, we've

00:10:21.696 --> 00:10:23.486 A:middle
introduced a brand-new set of

00:10:23.836 --> 00:10:23.956 A:middle
APIs.

00:10:24.116 --> 00:10:25.296 A:middle
And all these APIs are

00:10:25.296 --> 00:10:26.986 A:middle
documented in that header file.

00:10:27.636 --> 00:10:29.016 A:middle
There are three new ways to

00:10:29.016 --> 00:10:29.766 A:middle
register fonts.

00:10:30.406 --> 00:10:32.986 A:middle
One of them is by using the

00:10:32.986 --> 00:10:34.366 A:middle
FontURLs that point to font

00:10:34.406 --> 00:10:34.736 A:middle
files.

00:10:35.596 --> 00:10:36.856 A:middle
The other one is you can

00:10:36.856 --> 00:10:38.026 A:middle
register fonts by using

00:10:38.076 --> 00:10:38.966 A:middle
FontDescriptors.

00:10:39.586 --> 00:10:40.986 A:middle
And the final one is you can

00:10:40.986 --> 00:10:43.136 A:middle
register fonts that are present

00:10:43.216 --> 00:10:44.386 A:middle
in asset catalogs.

00:10:44.386 --> 00:10:45.346 A:middle
And this is the way that you

00:10:45.346 --> 00:10:46.736 A:middle
would use if you have a large

00:10:47.186 --> 00:10:48.066 A:middle
library of fonts.

00:10:48.516 --> 00:10:49.336 A:middle
You would create an asset

00:10:49.386 --> 00:10:50.606 A:middle
catalog and you would use

00:10:50.606 --> 00:10:52.096 A:middle
On-Demand resources to deliver

00:10:52.096 --> 00:10:52.936 A:middle
those to your user.

00:10:53.516 --> 00:10:55.026 A:middle
Please, note that this last API

00:10:55.206 --> 00:10:57.056 A:middle
is not available in the seed

00:10:57.056 --> 00:10:58.506 A:middle
that you have but it will be

00:10:58.506 --> 00:11:00.246 A:middle
available in the next upcoming

00:10:58.506 --> 00:11:00.246 A:middle
available in the next upcoming

00:11:00.816 --> 00:11:00.906 A:middle
seed.

00:11:02.516 --> 00:11:04.606 A:middle
There is also a new API, too,

00:11:04.856 --> 00:11:06.286 A:middle
that Font Provider applications

00:11:06.326 --> 00:11:08.266 A:middle
can use to get access to the

00:11:08.266 --> 00:11:09.116 A:middle
registered fonts.

00:11:09.806 --> 00:11:12.446 A:middle
And finally, an API that any

00:11:12.446 --> 00:11:14.056 A:middle
application can use to see what

00:11:14.136 --> 00:11:15.426 A:middle
fonts have been installed by the

00:11:15.426 --> 00:11:15.826 A:middle
user.

00:11:16.286 --> 00:11:18.126 A:middle
You gain access to this API by

00:11:18.126 --> 00:11:20.046 A:middle
selecting that entitlement of

00:11:20.046 --> 00:11:21.276 A:middle
use fonts that I showed you

00:11:21.276 --> 00:11:21.686 A:middle
earlier.

00:11:22.686 --> 00:11:24.906 A:middle
So, let's look at how these APIs

00:11:24.906 --> 00:11:26.436 A:middle
are used in the two demo apps.

00:11:26.506 --> 00:11:27.346 A:middle
Let's start with the Font

00:11:27.346 --> 00:11:27.916 A:middle
Provider app.

00:11:28.086 --> 00:11:29.446 A:middle
It's a very simple app that has

00:11:29.446 --> 00:11:30.356 A:middle
about 20 fonts.

00:11:31.086 --> 00:11:33.146 A:middle
And you basically register fonts

00:11:33.176 --> 00:11:33.766 A:middle
by family.

00:11:33.876 --> 00:11:35.306 A:middle
So, what we do is we gather all

00:11:35.306 --> 00:11:36.836 A:middle
the font files and the URLs that

00:11:36.916 --> 00:11:37.466 A:middle
points to them.

00:11:38.196 --> 00:11:40.376 A:middle
And once we have them, we call

00:11:40.376 --> 00:11:42.746 A:middle
our registration API and then,

00:11:42.746 --> 00:11:44.496 A:middle
we update our UI as necessary.

00:11:45.256 --> 00:11:46.276 A:middle
Let's start by looking at the

00:11:46.336 --> 00:11:47.496 A:middle
code that updates the UI.

00:11:49.056 --> 00:11:50.476 A:middle
You notice that both the Font

00:11:50.476 --> 00:11:51.586 A:middle
Consumer app and the Font

00:11:51.586 --> 00:11:53.506 A:middle
Provider app leverage font

00:11:53.506 --> 00:11:54.816 A:middle
notifications to update the UI.

00:11:54.816 --> 00:11:56.676 A:middle
We use the same technique when

00:11:56.676 --> 00:11:58.186 A:middle
we register fonts in this demo.

00:11:58.916 --> 00:12:00.476 A:middle
And to listen to one of these

00:11:58.916 --> 00:12:00.476 A:middle
And to listen to one of these

00:12:00.506 --> 00:12:02.046 A:middle
notifications is fairly simple.

00:12:03.396 --> 00:12:05.436 A:middle
We tell the notification service

00:12:05.716 --> 00:12:08.206 A:middle
center to observe KCTFontManager

00:12:08.596 --> 00:12:10.496 A:middle
registration, that's a handful.

00:12:10.706 --> 00:12:11.606 A:middle
RegisterFontsChanged

00:12:11.606 --> 00:12:12.436 A:middle
Notification.

00:12:13.716 --> 00:12:16.126 A:middle
And once we get one of these

00:12:16.186 --> 00:12:18.196 A:middle
notifications, simply in our

00:12:18.196 --> 00:12:20.406 A:middle
selector what we do is we update

00:12:20.406 --> 00:12:21.246 A:middle
the registered fonts.

00:12:21.306 --> 00:12:22.286 A:middle
And I'll show you the code for

00:12:22.286 --> 00:12:23.086 A:middle
that in a second.

00:12:23.476 --> 00:12:25.546 A:middle
And then, we update our UI which

00:12:25.546 --> 00:12:26.696 A:middle
you saw in the Font Provider

00:12:26.696 --> 00:12:26.906 A:middle
app.

00:12:27.336 --> 00:12:28.966 A:middle
Basically, for font families

00:12:28.966 --> 00:12:30.496 A:middle
that are registered, it shows

00:12:30.496 --> 00:12:31.606 A:middle
the names in black and

00:12:31.606 --> 00:12:32.696 A:middle
unregistered in red.

00:12:34.076 --> 00:12:37.386 A:middle
To register the fonts, we gather

00:12:37.386 --> 00:12:39.346 A:middle
the font files that represent

00:12:39.346 --> 00:12:40.436 A:middle
the families that we want to

00:12:40.436 --> 00:12:42.336 A:middle
register, and we call our new

00:12:42.336 --> 00:12:44.326 A:middle
API CTFontManagerRegister

00:12:44.326 --> 00:12:45.076 A:middle
FontURLs.

00:12:45.606 --> 00:12:47.176 A:middle
We pass the list of font URLs

00:12:47.656 --> 00:12:48.946 A:middle
along with a scope, a

00:12:48.946 --> 00:12:50.336 A:middle
registration scope called

00:12:50.336 --> 00:12:50.926 A:middle
persistent.

00:12:50.926 --> 00:12:53.136 A:middle
This is new to iOS 13 which

00:12:53.136 --> 00:12:54.536 A:middle
indicates make the fonts

00:12:54.536 --> 00:12:55.586 A:middle
available systemwide.

00:12:56.126 --> 00:12:58.226 A:middle
And also, a Boolean flag, in

00:12:58.226 --> 00:12:59.956 A:middle
this case, enabled, that we want

00:12:59.956 --> 00:13:01.146 A:middle
to make all those fonts visible

00:12:59.956 --> 00:13:01.146 A:middle
to make all those fonts visible

00:13:01.146 --> 00:13:02.586 A:middle
to the OS.

00:13:02.896 --> 00:13:04.936 A:middle
The API takes a closure.

00:13:05.336 --> 00:13:06.196 A:middle
And the reason it needs a

00:13:06.246 --> 00:13:07.716 A:middle
closure is because it is an

00:13:07.716 --> 00:13:08.676 A:middle
asynchronous API.

00:13:09.326 --> 00:13:10.596 A:middle
As you're registering fonts,

00:13:11.256 --> 00:13:12.706 A:middle
your closure will get called,

00:13:13.156 --> 00:13:15.596 A:middle
maybe multiple times as errors

00:13:15.596 --> 00:13:17.296 A:middle
are getting discovered would be

00:13:17.296 --> 00:13:17.946 A:middle
one example.

00:13:18.496 --> 00:13:19.656 A:middle
When the whole operation is

00:13:19.716 --> 00:13:21.706 A:middle
done, the done parameter in the

00:13:21.706 --> 00:13:22.916 A:middle
closure is set to true.

00:13:23.926 --> 00:13:25.326 A:middle
For this demo, the only thing I

00:13:25.326 --> 00:13:26.876 A:middle
do on the closure is I just look

00:13:26.876 --> 00:13:27.386 A:middle
for errors.

00:13:27.466 --> 00:13:28.576 A:middle
And I just logged into this.

00:13:28.786 --> 00:13:29.786 A:middle
I don't update my UI.

00:13:29.786 --> 00:13:32.696 A:middle
What I update, I use, I rely on

00:13:32.696 --> 00:13:34.376 A:middle
the notification mechanism to

00:13:34.376 --> 00:13:35.226 A:middle
update my UI.

00:13:35.806 --> 00:13:37.436 A:middle
And once I receive that

00:13:37.436 --> 00:13:39.016 A:middle
notification, this is the method

00:13:39.016 --> 00:13:39.696 A:middle
that gets called.

00:13:39.696 --> 00:13:41.576 A:middle
And simply, I call the new API

00:13:42.216 --> 00:13:43.776 A:middle
CTFontManagerCopyRegister

00:13:43.836 --> 00:13:45.716 A:middle
FontDescriptors to know what

00:13:45.766 --> 00:13:46.916 A:middle
fonts have been made available

00:13:46.916 --> 00:13:47.596 A:middle
by my app.

00:13:48.186 --> 00:13:49.686 A:middle
Once I have that, it's very

00:13:49.686 --> 00:13:50.056 A:middle
simple.

00:13:50.056 --> 00:13:51.356 A:middle
I just log my list of font

00:13:51.356 --> 00:13:53.306 A:middle
descriptors, update my model

00:13:53.306 --> 00:13:55.016 A:middle
inside for the families, and

00:13:55.016 --> 00:13:56.296 A:middle
update my UI from there on.

00:13:57.126 --> 00:13:59.366 A:middle
The font consuming app, it's,

00:13:59.836 --> 00:14:01.486 A:middle
it's a very simple app that just

00:13:59.836 --> 00:14:01.486 A:middle
it's a very simple app that just

00:14:01.546 --> 00:14:02.446 A:middle
parses documents.

00:14:03.716 --> 00:14:05.276 A:middle
And the key to this type of apps

00:14:05.316 --> 00:14:08.026 A:middle
that parse documents is to as

00:14:08.096 --> 00:14:09.496 A:middle
the whole document is getting

00:14:09.496 --> 00:14:11.096 A:middle
parsed, you figure out what

00:14:11.166 --> 00:14:12.796 A:middle
fonts can be instantiated and

00:14:12.796 --> 00:14:14.166 A:middle
you keep a list, a running list

00:14:14.166 --> 00:14:16.366 A:middle
of fonts that are essentially

00:14:16.366 --> 00:14:16.726 A:middle
missing.

00:14:17.696 --> 00:14:18.806 A:middle
Now, fonts may be missing

00:14:18.806 --> 00:14:20.256 A:middle
because the user never installed

00:14:20.256 --> 00:14:22.826 A:middle
the fonts, or the fonts have not

00:14:22.876 --> 00:14:24.106 A:middle
yet been made available to the

00:14:24.106 --> 00:14:24.616 A:middle
process.

00:14:25.086 --> 00:14:26.696 A:middle
You actually need to make use of

00:14:26.696 --> 00:14:28.306 A:middle
the new API to request those

00:14:28.306 --> 00:14:29.146 A:middle
fonts from the OS.

00:14:30.026 --> 00:14:31.386 A:middle
Once you have them, you go ahead

00:14:31.386 --> 00:14:32.936 A:middle
and update UI or update the

00:14:32.936 --> 00:14:33.406 A:middle
document.

00:14:33.916 --> 00:14:36.136 A:middle
So, for the app to parse a

00:14:36.136 --> 00:14:37.726 A:middle
document, this is a very simple

00:14:37.756 --> 00:14:39.126 A:middle
rich text format document

00:14:39.126 --> 00:14:40.146 A:middle
expressed as JSON.

00:14:41.136 --> 00:14:42.826 A:middle
And what it does, it just walks

00:14:42.826 --> 00:14:44.536 A:middle
every run, tries to instantiate

00:14:44.536 --> 00:14:44.966 A:middle
a font.

00:14:44.966 --> 00:14:46.776 A:middle
If it can't, it replaces with

00:14:46.776 --> 00:14:47.256 A:middle
Helvetica.

00:14:48.376 --> 00:14:50.386 A:middle
But as it replaces it, it keeps

00:14:50.386 --> 00:14:51.776 A:middle
a running tab of all the font

00:14:51.776 --> 00:14:52.616 A:middle
names that it couldn't

00:14:52.616 --> 00:14:53.316 A:middle
instantiate.

00:14:54.316 --> 00:14:55.886 A:middle
With that in hand, now I can

00:14:55.956 --> 00:14:57.806 A:middle
build a list or an array of font

00:14:57.806 --> 00:14:59.256 A:middle
descriptors that use those names

00:14:59.906 --> 00:15:01.156 A:middle
and pass that array to

00:14:59.906 --> 00:15:01.156 A:middle
and pass that array to

00:15:01.256 --> 00:15:03.036 A:middle
CTFontManagerRequestFont.

00:15:03.036 --> 00:15:05.366 A:middle
And what this new API will do is

00:15:05.366 --> 00:15:07.256 A:middle
it will notice or see if any

00:15:07.316 --> 00:15:08.516 A:middle
fonts have been installed by the

00:15:08.516 --> 00:15:10.646 A:middle
user using Font Provider apps.

00:15:10.846 --> 00:15:12.616 A:middle
And if so, it makes it available

00:15:12.616 --> 00:15:14.656 A:middle
for instantiation on the app.

00:15:15.386 --> 00:15:16.676 A:middle
If any fonts have not been made

00:15:16.676 --> 00:15:18.216 A:middle
available, then those fonts are

00:15:18.216 --> 00:15:19.986 A:middle
displayed using the missing font

00:15:19.986 --> 00:15:20.886 A:middle
dialog that you saw.

00:15:22.036 --> 00:15:23.736 A:middle
The API takes a closure.

00:15:24.096 --> 00:15:25.846 A:middle
And for this app, we simply for

00:15:25.846 --> 00:15:27.856 A:middle
the visible document we just

00:15:27.856 --> 00:15:29.466 A:middle
update all the missing fonts

00:15:29.766 --> 00:15:31.446 A:middle
with whatever fonts have become

00:15:31.446 --> 00:15:31.846 A:middle
available.

00:15:32.536 --> 00:15:33.516 A:middle
So, as you see, it's very

00:15:33.606 --> 00:15:34.876 A:middle
straightforward for an app to

00:15:34.876 --> 00:15:36.746 A:middle
make use of fonts that other

00:15:36.746 --> 00:15:37.916 A:middle
apps make available.

00:15:38.566 --> 00:15:41.566 A:middle
Now, I'd like to share with you

00:15:41.566 --> 00:15:42.946 A:middle
some considerations for font

00:15:42.946 --> 00:15:44.256 A:middle
provider apps that are

00:15:44.256 --> 00:15:44.616 A:middle
important.

00:15:45.956 --> 00:15:48.006 A:middle
First, a font provider app

00:15:48.726 --> 00:15:50.756 A:middle
cannot operate on fonts that

00:15:50.756 --> 00:15:51.766 A:middle
don't belong to it.

00:15:52.126 --> 00:15:54.006 A:middle
For example, it cannot try to

00:15:54.006 --> 00:15:55.656 A:middle
unregister a font that another

00:15:55.736 --> 00:15:57.236 A:middle
font provider app has

00:15:57.286 --> 00:15:57.796 A:middle
registered.

00:15:58.476 --> 00:16:00.546 A:middle
Similarly, a font provider app

00:15:58.476 --> 00:16:00.546 A:middle
Similarly, a font provider app

00:16:00.706 --> 00:16:02.896 A:middle
cannot override a font that

00:16:02.896 --> 00:16:04.376 A:middle
another font provider app has

00:16:04.376 --> 00:16:06.176 A:middle
made available or is installed

00:16:06.176 --> 00:16:06.866 A:middle
with the system.

00:16:08.226 --> 00:16:09.826 A:middle
There's a limit by the OS on how

00:16:09.826 --> 00:16:11.206 A:middle
many fonts can be registered.

00:16:11.826 --> 00:16:13.236 A:middle
There is not like a hard number

00:16:13.306 --> 00:16:13.706 A:middle
for it.

00:16:14.056 --> 00:16:15.866 A:middle
It's basically, it depends on

00:16:15.866 --> 00:16:17.056 A:middle
the type of fonts that have been

00:16:17.056 --> 00:16:18.366 A:middle
installed by the different font

00:16:18.366 --> 00:16:18.806 A:middle
providers.

00:16:19.426 --> 00:16:21.326 A:middle
Each font, it can consume

00:16:21.476 --> 00:16:22.816 A:middle
different amount of resources.

00:16:23.376 --> 00:16:27.026 A:middle
Fonts installed this way do not

00:16:27.026 --> 00:16:28.616 A:middle
participate in font fallback.

00:16:29.616 --> 00:16:31.736 A:middle
Basically, what it means is that

00:16:31.936 --> 00:16:33.906 A:middle
if the system determines that

00:16:33.906 --> 00:16:35.606 A:middle
your font is the only way that

00:16:36.316 --> 00:16:38.166 A:middle
it's possible to display a given

00:16:38.166 --> 00:16:39.806 A:middle
font, it won't be automatically

00:16:39.896 --> 00:16:41.606 A:middle
substituted to be used.

00:16:42.236 --> 00:16:44.366 A:middle
In essence, the only way to use

00:16:44.366 --> 00:16:47.086 A:middle
these fonts is if the font is

00:16:47.146 --> 00:16:47.956 A:middle
referenced by name.

00:16:49.146 --> 00:16:52.386 A:middle
Finally, font provider apps own

00:16:52.386 --> 00:16:53.576 A:middle
the fonts that they install.

00:16:54.636 --> 00:16:55.736 A:middle
What that means is that if the

00:16:55.736 --> 00:16:57.966 A:middle
user deletes an app that has

00:16:57.966 --> 00:17:00.156 A:middle
fonts installed, those fonts are

00:16:57.966 --> 00:17:00.156 A:middle
fonts installed, those fonts are

00:17:00.156 --> 00:17:00.856 A:middle
also removed.

00:17:01.336 --> 00:17:02.676 A:middle
Now, the system does warn the

00:17:02.676 --> 00:17:04.146 A:middle
user, indicates that it's trying

00:17:04.195 --> 00:17:05.586 A:middle
to delete an app that has fonts

00:17:05.586 --> 00:17:05.965 A:middle
installed.

00:17:05.965 --> 00:17:07.746 A:middle
And the user has the opportunity

00:17:07.856 --> 00:17:08.306 A:middle
to back out.

00:17:08.965 --> 00:17:10.695 A:middle
This concludes my section of the

00:17:10.746 --> 00:17:11.016 A:middle
talk.

00:17:11.425 --> 00:17:12.986 A:middle
But before I go, I just want to

00:17:12.986 --> 00:17:14.336 A:middle
share with you how excited we

00:17:14.336 --> 00:17:15.776 A:middle
all are about this feature.

00:17:16.445 --> 00:17:18.116 A:middle
Having the ability to install a

00:17:18.116 --> 00:17:20.116 A:middle
variety of fonts in the OS that

00:17:20.116 --> 00:17:21.715 A:middle
all apps can use at one point in

00:17:21.715 --> 00:17:24.106 A:middle
time, it's essential for great

00:17:24.185 --> 00:17:25.126 A:middle
content creation.

00:17:25.205 --> 00:17:26.836 A:middle
And having this feature in place

00:17:27.266 --> 00:17:29.116 A:middle
will allow us to unlock that

00:17:29.116 --> 00:17:30.226 A:middle
power in the platform,

00:17:30.226 --> 00:17:31.636 A:middle
especially in the iPad platform.

00:17:32.486 --> 00:17:33.666 A:middle
With that, I'd like to invite to

00:17:33.706 --> 00:17:36.376 A:middle
the stage Eric Dudiak, who will

00:17:36.376 --> 00:17:37.596 A:middle
be talking to you about some new

00:17:37.596 --> 00:17:39.756 A:middle
techniques for selecting fonts

00:17:39.756 --> 00:17:40.216 A:middle
in the OS.

00:17:41.516 --> 00:17:46.416 A:middle
[ Applause ]

00:17:46.916 --> 00:17:48.256 A:middle
&gt;&gt; Hi. Thank you, Julio.

00:17:48.966 --> 00:17:50.616 A:middle
So, I'm Eric Dudiak, an engineer

00:17:50.616 --> 00:17:51.616 A:middle
on the UIKit Team.

00:17:52.676 --> 00:17:53.756 A:middle
We've just seen how you can

00:17:53.806 --> 00:17:55.346 A:middle
provide and install custom

00:17:55.346 --> 00:17:55.846 A:middle
fonts.

00:17:56.346 --> 00:17:57.366 A:middle
But your application may also

00:17:57.366 --> 00:17:58.606 A:middle
want to consume those fonts.

00:17:59.116 --> 00:18:00.596 A:middle
So, let's take a look at how you

00:17:59.116 --> 00:18:00.596 A:middle
So, let's take a look at how you

00:18:00.596 --> 00:18:02.816 A:middle
allow users to select and use

00:18:02.816 --> 00:18:03.766 A:middle
the custom fonts that they've

00:18:03.796 --> 00:18:04.356 A:middle
installed.

00:18:04.996 --> 00:18:07.756 A:middle
The first thing an application

00:18:07.976 --> 00:18:10.016 A:middle
might do is try to enumerate all

00:18:10.016 --> 00:18:10.916 A:middle
the fonts available on the

00:18:10.916 --> 00:18:12.516 A:middle
system and simply present that

00:18:12.516 --> 00:18:13.086 A:middle
to the user.

00:18:13.646 --> 00:18:15.216 A:middle
Then, allowing them to pick from

00:18:15.216 --> 00:18:15.866 A:middle
one of those fonts.

00:18:16.946 --> 00:18:18.016 A:middle
However, enumerating all the

00:18:18.016 --> 00:18:19.626 A:middle
fonts on the system will only

00:18:19.676 --> 00:18:21.186 A:middle
provide the list of built-in

00:18:21.216 --> 00:18:21.556 A:middle
fonts.

00:18:21.636 --> 00:18:22.786 A:middle
It will not show any of the

00:18:22.786 --> 00:18:23.826 A:middle
custom fonts.

00:18:24.816 --> 00:18:25.956 A:middle
And this is not allowed out of a

00:18:25.956 --> 00:18:27.426 A:middle
concern for privacy.

00:18:29.436 --> 00:18:30.966 A:middle
So, instead, when your

00:18:30.966 --> 00:18:32.476 A:middle
application wants to allow the

00:18:32.476 --> 00:18:34.356 A:middle
user to select one of their

00:18:34.356 --> 00:18:36.436 A:middle
installed fonts, we've provided

00:18:36.436 --> 00:18:38.266 A:middle
a new View Controller in UIKit.

00:18:38.366 --> 00:18:38.906 A:middle
And that is

00:18:39.176 --> 00:18:41.106 A:middle
UIFontPickerViewController.

00:18:41.446 --> 00:18:44.136 A:middle
Now, it can be presented

00:18:44.136 --> 00:18:45.586 A:middle
modally, and it'll default to

00:18:45.586 --> 00:18:46.996 A:middle
that new sheet presentation that

00:18:46.996 --> 00:18:48.636 A:middle
you've seen in iOS 13.

00:18:49.676 --> 00:18:51.546 A:middle
Alternatively, if you, say a

00:18:51.546 --> 00:18:53.566 A:middle
productivity app with an

00:18:53.736 --> 00:18:55.526 A:middle
inspector, you might want to

00:18:55.526 --> 00:18:56.596 A:middle
embed it in the sidebar.

00:18:56.716 --> 00:18:58.056 A:middle
And that is also supported by

00:18:58.056 --> 00:18:58.616 A:middle
the Font Picker.

00:19:02.156 --> 00:19:03.436 A:middle
So, let's take a look at

00:19:03.436 --> 00:19:04.886 A:middle
UIFontPickerViewController.

00:19:05.876 --> 00:19:07.286 A:middle
So, for security purposes, it

00:19:07.286 --> 00:19:09.016 A:middle
runs entirely out of process

00:19:09.106 --> 00:19:09.976 A:middle
from your application.

00:19:11.726 --> 00:19:13.176 A:middle
And by default, it will also

00:19:13.176 --> 00:19:14.946 A:middle
only show the built-in fonts.

00:19:15.486 --> 00:19:16.136 A:middle
You'll need to use an

00:19:16.136 --> 00:19:17.626 A:middle
entitlement to see those

00:19:18.096 --> 00:19:19.856 A:middle
user-installed fonts.

00:19:20.446 --> 00:19:23.506 A:middle
After a user selects a font in

00:19:23.506 --> 00:19:25.216 A:middle
the Font Picker, that font will

00:19:25.216 --> 00:19:26.586 A:middle
be available to the presenting

00:19:26.586 --> 00:19:28.346 A:middle
application through the normal

00:19:28.466 --> 00:19:31.786 A:middle
font APIs, however, only after

00:19:31.786 --> 00:19:33.446 A:middle
the user selected it and only

00:19:33.446 --> 00:19:34.966 A:middle
the font that the user selected.

00:19:38.276 --> 00:19:39.636 A:middle
So, to facilitate all the

00:19:39.636 --> 00:19:40.596 A:middle
different kinds of apps out

00:19:40.626 --> 00:19:41.916 A:middle
there, there are some great

00:19:41.916 --> 00:19:43.346 A:middle
customization options on

00:19:43.346 --> 00:19:44.946 A:middle
UIFontPickerViewController.

00:19:45.566 --> 00:19:49.836 A:middle
For example, an application

00:19:49.956 --> 00:19:51.206 A:middle
might want to show specific

00:19:51.266 --> 00:19:51.776 A:middle
faces.

00:19:52.016 --> 00:19:53.866 A:middle
Now, by default, the Font Picker

00:19:53.866 --> 00:19:55.496 A:middle
will only show families of

00:19:55.546 --> 00:19:55.826 A:middle
fonts.

00:19:56.336 --> 00:19:57.686 A:middle
This is similar to applications

00:19:57.686 --> 00:19:59.166 A:middle
like Mail and is familiar to

00:19:59.166 --> 00:19:59.876 A:middle
many users.

00:20:00.446 --> 00:20:01.226 A:middle
However, if you have an

00:20:01.226 --> 00:20:02.526 A:middle
application where it makes sense

00:20:02.576 --> 00:20:04.516 A:middle
to show additional weights of

00:20:04.626 --> 00:20:05.746 A:middle
the different fonts, such as

00:20:05.796 --> 00:20:07.846 A:middle
semi-bold or medium, you can

00:20:07.846 --> 00:20:09.016 A:middle
optionally enable that in the

00:20:09.016 --> 00:20:10.406 A:middle
configuration of the Font

00:20:10.406 --> 00:20:10.676 A:middle
Picker.

00:20:11.776 --> 00:20:12.866 A:middle
Additionally, your application

00:20:12.866 --> 00:20:14.356 A:middle
gets to choose whether it gets

00:20:14.356 --> 00:20:15.716 A:middle
the WYSIWYG presentation seen

00:20:15.716 --> 00:20:17.666 A:middle
here or a more default

00:20:17.666 --> 00:20:19.296 A:middle
presentation of every font

00:20:19.296 --> 00:20:21.926 A:middle
displayed in the system font.

00:20:23.366 --> 00:20:24.896 A:middle
Now, your application may also

00:20:24.896 --> 00:20:26.676 A:middle
want to filter down the list of

00:20:26.676 --> 00:20:28.366 A:middle
fonts available to the user.

00:20:29.026 --> 00:20:29.996 A:middle
And you have two different ways

00:20:29.996 --> 00:20:30.526 A:middle
to do this.

00:20:31.726 --> 00:20:33.406 A:middle
First, you can filter by trait.

00:20:34.556 --> 00:20:36.476 A:middle
So, if your application shows

00:20:36.476 --> 00:20:37.926 A:middle
source code, for example, you

00:20:37.926 --> 00:20:40.226 A:middle
may only want to see or may only

00:20:40.226 --> 00:20:41.876 A:middle
want to show monospaced fonts to

00:20:41.876 --> 00:20:43.046 A:middle
the user, since that's going to

00:20:43.046 --> 00:20:44.806 A:middle
be a more natural experience for

00:20:44.806 --> 00:20:45.566 A:middle
seeing source code.

00:20:46.006 --> 00:20:47.276 A:middle
And here, we see filtering by

00:20:47.276 --> 00:20:49.196 A:middle
trait to just monospaced.

00:20:51.936 --> 00:20:53.626 A:middle
Additionally, your application

00:20:53.626 --> 00:20:55.446 A:middle
may need the font to support a

00:20:55.446 --> 00:20:56.976 A:middle
certain language in order to

00:20:56.976 --> 00:20:59.126 A:middle
make sense in the context it's

00:20:59.126 --> 00:20:59.776 A:middle
being used.

00:21:00.226 --> 00:21:01.226 A:middle
And for that, we provide a

00:21:01.336 --> 00:21:03.046 A:middle
Filter Predicate API that lets

00:21:03.046 --> 00:21:04.046 A:middle
you filter down to a single

00:21:04.046 --> 00:21:05.826 A:middle
language or combination of

00:21:05.826 --> 00:21:07.436 A:middle
languages that the font needs to

00:21:07.436 --> 00:21:09.056 A:middle
support in order to be

00:21:09.056 --> 00:21:09.626 A:middle
presented.

00:21:10.486 --> 00:21:11.506 A:middle
And in this case, we see the

00:21:11.506 --> 00:21:12.926 A:middle
Font Picker configured to show

00:21:12.926 --> 00:21:14.946 A:middle
only fonts that support Chinese.

00:21:19.126 --> 00:21:20.946 A:middle
Now, the Font Picker also exists

00:21:21.236 --> 00:21:24.126 A:middle
on macOS for UIKit apps.

00:21:25.476 --> 00:21:27.546 A:middle
If you just present the Font

00:21:27.546 --> 00:21:28.976 A:middle
Picker, instead of that modal

00:21:28.976 --> 00:21:30.096 A:middle
sheet presentation that we saw

00:21:30.096 --> 00:21:31.456 A:middle
earlier, you'll see something

00:21:31.456 --> 00:21:32.136 A:middle
like this.

00:21:32.526 --> 00:21:34.306 A:middle
A more traditional Mac menu.

00:21:34.306 --> 00:21:37.296 A:middle
In order to control the

00:21:37.366 --> 00:21:38.656 A:middle
presentation of where this menu

00:21:38.656 --> 00:21:40.046 A:middle
shows up in your applications

00:21:40.046 --> 00:21:41.356 A:middle
since it should show up over the

00:21:41.356 --> 00:21:42.876 A:middle
button the user just clicked,

00:21:43.466 --> 00:21:43.806 A:middle
use the

00:21:43.876 --> 00:21:46.436 A:middle
UIPopoverPresentationController

00:21:46.436 --> 00:21:48.286 A:middle
off the new controller to select

00:21:48.336 --> 00:21:49.396 A:middle
which view is presenting it.

00:21:51.346 --> 00:21:52.646 A:middle
Beyond that, the semantics of

00:21:52.646 --> 00:21:54.206 A:middle
using the menu are fundamentally

00:21:54.336 --> 00:21:56.736 A:middle
similar to the View Controller.

00:21:58.936 --> 00:22:00.636 A:middle
Clicking away from the menu, for

00:21:58.936 --> 00:22:00.636 A:middle
Clicking away from the menu, for

00:22:00.636 --> 00:22:01.736 A:middle
example, is the same as

00:22:01.766 --> 00:22:02.956 A:middle
dismissing the View Controller.

00:22:03.436 --> 00:22:04.806 A:middle
And when the user does select a

00:22:04.806 --> 00:22:06.686 A:middle
font in the menu, it'll

00:22:06.686 --> 00:22:08.226 A:middle
automatically send the Delegate

00:22:08.226 --> 00:22:09.636 A:middle
APIs just as the View Controller

00:22:09.636 --> 00:22:11.536 A:middle
normally would and will then

00:22:11.536 --> 00:22:12.226 A:middle
close the menu.

00:22:12.856 --> 00:22:15.726 A:middle
This is simply a way to provide

00:22:15.726 --> 00:22:17.286 A:middle
a much more traditional

00:22:17.286 --> 00:22:19.096 A:middle
experience on macOS around font

00:22:19.096 --> 00:22:20.616 A:middle
picking so that your app feels

00:22:20.876 --> 00:22:22.226 A:middle
like what a user expects on a

00:22:22.226 --> 00:22:25.966 A:middle
normal Mac app.

00:22:26.246 --> 00:22:28.186 A:middle
Of course, macOS has additional

00:22:28.256 --> 00:22:29.386 A:middle
font picking options.

00:22:30.416 --> 00:22:31.806 A:middle
And this is in the form of the

00:22:31.806 --> 00:22:33.666 A:middle
macOS Font Panel.

00:22:34.946 --> 00:22:36.786 A:middle
This is supported in UIKit apps

00:22:36.786 --> 00:22:37.876 A:middle
when running on macOS.

00:22:38.396 --> 00:22:40.006 A:middle
It's even part of the default

00:22:40.006 --> 00:22:41.246 A:middle
menu bar options.

00:22:41.596 --> 00:22:42.886 A:middle
So, a user can turn it on and

00:22:42.886 --> 00:22:44.776 A:middle
off at any time and select

00:22:45.146 --> 00:22:46.986 A:middle
different font settings anytime

00:22:46.986 --> 00:22:47.936 A:middle
your application is running.

00:22:51.596 --> 00:22:52.436 A:middle
Now, you can also

00:22:52.496 --> 00:22:54.386 A:middle
programmatically control the

00:22:54.386 --> 00:22:55.856 A:middle
presentation of the Font Panel.

00:22:56.426 --> 00:22:57.756 A:middle
And you can access that through

00:22:57.916 --> 00:22:59.806 A:middle
UITextFormattingCoordinator.

00:23:00.336 --> 00:23:01.256 A:middle
From there, you can see if the

00:23:01.256 --> 00:23:03.196 A:middle
panel is currently displayed as

00:23:03.196 --> 00:23:04.506 A:middle
well as manually toggle its

00:23:04.546 --> 00:23:08.666 A:middle
presentation on and off.

00:23:08.946 --> 00:23:10.416 A:middle
So, because of the nonmodal

00:23:10.416 --> 00:23:11.766 A:middle
nature of the Font Panel,

00:23:12.606 --> 00:23:14.436 A:middle
there's a few considerations for

00:23:14.436 --> 00:23:15.776 A:middle
your application when it's

00:23:15.876 --> 00:23:16.986 A:middle
running on macOS.

00:23:17.926 --> 00:23:18.976 A:middle
Changes that come in from the

00:23:18.976 --> 00:23:20.996 A:middle
Font Panel will go through the

00:23:20.996 --> 00:23:21.966 A:middle
responder chain.

00:23:23.026 --> 00:23:24.346 A:middle
When using standard UIKit

00:23:24.346 --> 00:23:25.826 A:middle
controls, this is handled for

00:23:25.826 --> 00:23:28.006 A:middle
you automatically through the

00:23:28.006 --> 00:23:30.526 A:middle
UITextFormattingCoordinator.

00:23:31.196 --> 00:23:32.296 A:middle
In fact, the shared

00:23:32.296 --> 00:23:34.266 A:middle
UITextFormattingCoordinator can

00:23:34.266 --> 00:23:36.346 A:middle
even be used as a delegate for

00:23:36.346 --> 00:23:37.876 A:middle
the Font Picker we saw earlier

00:23:37.876 --> 00:23:39.776 A:middle
so you can also route those

00:23:40.056 --> 00:23:41.926 A:middle
changes through your responder

00:23:41.926 --> 00:23:42.176 A:middle
chain.

00:23:43.776 --> 00:23:45.066 A:middle
However, if you have custom UI

00:23:45.066 --> 00:23:46.666 A:middle
responders in your application,

00:23:47.516 --> 00:23:48.496 A:middle
you may need to adopt some of

00:23:48.496 --> 00:23:49.066 A:middle
the new

00:23:49.126 --> 00:23:51.326 A:middle
UIResponderStandardEditActions

00:23:51.406 --> 00:23:53.156 A:middle
protocol methods in order to be

00:23:53.156 --> 00:23:55.506 A:middle
notified when changes are made

00:23:55.506 --> 00:23:56.556 A:middle
through the Font Panel.

00:23:58.046 --> 00:23:59.406 A:middle
This will allow your custom

00:23:59.406 --> 00:24:00.446 A:middle
responders to update their

00:23:59.406 --> 00:24:00.446 A:middle
responders to update their

00:24:00.446 --> 00:24:01.836 A:middle
displays accordingly.

00:24:04.636 --> 00:24:06.186 A:middle
Now, let's take a quick look at

00:24:06.186 --> 00:24:07.736 A:middle
a demo of how this all works.

00:24:14.606 --> 00:24:16.076 A:middle
Great. So, here's our Font

00:24:16.076 --> 00:24:17.086 A:middle
Consuming application.

00:24:17.576 --> 00:24:18.486 A:middle
And here we see it's already

00:24:18.486 --> 00:24:19.726 A:middle
using custom fonts.

00:24:19.726 --> 00:24:21.166 A:middle
But one of the great features of

00:24:21.166 --> 00:24:22.636 A:middle
this application is that it also

00:24:22.636 --> 00:24:24.666 A:middle
lets the user select the font

00:24:24.666 --> 00:24:26.136 A:middle
that they want to see rather

00:24:26.136 --> 00:24:27.486 A:middle
than just showing the font.

00:24:27.876 --> 00:24:28.776 A:middle
We can change the font for the

00:24:28.776 --> 00:24:29.596 A:middle
document at any time.

00:24:30.196 --> 00:24:31.496 A:middle
And I can do that simply by just

00:24:31.546 --> 00:24:32.976 A:middle
pushing this say Change Title

00:24:33.026 --> 00:24:33.306 A:middle
button.

00:24:34.426 --> 00:24:36.296 A:middle
And when I do, we see that I get

00:24:36.296 --> 00:24:38.156 A:middle
the Font Picker.

00:24:39.316 --> 00:24:40.946 A:middle
I get the list of recently used

00:24:40.946 --> 00:24:41.846 A:middle
fonts that I've used.

00:24:41.966 --> 00:24:43.476 A:middle
I can also search it and scrub

00:24:43.476 --> 00:24:44.496 A:middle
through it to find exactly the

00:24:44.496 --> 00:24:45.946 A:middle
font that I want.

00:24:46.876 --> 00:24:48.216 A:middle
Now, we've also gone ahead and

00:24:48.216 --> 00:24:50.516 A:middle
customized it to show additional

00:24:50.986 --> 00:24:51.476 A:middle
faces.

00:24:51.916 --> 00:24:53.066 A:middle
So, I can see any number of

00:24:53.096 --> 00:24:55.356 A:middle
faces on a given font and scrub

00:24:55.356 --> 00:24:57.306 A:middle
through it and find exactly the

00:24:57.376 --> 00:24:58.126 A:middle
font that I want.

00:24:59.406 --> 00:25:00.046 A:middle
Let's see.

00:24:59.406 --> 00:25:00.046 A:middle
Let's see.

00:25:00.676 --> 00:25:01.576 A:middle
Let's use Papyrus.

00:25:02.676 --> 00:25:04.286 A:middle
Great. So, I can change the

00:25:04.286 --> 00:25:05.666 A:middle
title just like that.

00:25:06.446 --> 00:25:07.886 A:middle
And you can do that in any

00:25:07.886 --> 00:25:08.486 A:middle
application.

00:25:08.486 --> 00:25:09.636 A:middle
Provides a great standard

00:25:09.636 --> 00:25:11.346 A:middle
control that users will get

00:25:11.346 --> 00:25:12.436 A:middle
accustomed to on iOS.

00:25:12.996 --> 00:25:15.956 A:middle
Of course, of course, since this

00:25:15.956 --> 00:25:17.436 A:middle
is an iPad app, we can also

00:25:17.586 --> 00:25:18.576 A:middle
build it for macOS.

00:25:19.796 --> 00:25:20.516 A:middle
And here, we see that.

00:25:20.646 --> 00:25:22.206 A:middle
This is the same app that I was

00:25:22.246 --> 00:25:23.946 A:middle
just showing you a second ago on

00:25:24.166 --> 00:25:26.886 A:middle
iPadOS, now running on macOS.

00:25:28.276 --> 00:25:29.356 A:middle
Now, since we didn't do much to

00:25:29.356 --> 00:25:30.846 A:middle
customize how we present that

00:25:31.256 --> 00:25:33.916 A:middle
Font Picker off the title menu.

00:25:34.276 --> 00:25:35.926 A:middle
If I go ahead and just push the

00:25:35.926 --> 00:25:37.396 A:middle
exact same button without

00:25:37.396 --> 00:25:39.286 A:middle
changing any of my code in my

00:25:39.286 --> 00:25:41.456 A:middle
app, we see that instead of a

00:25:41.556 --> 00:25:43.666 A:middle
Font Picker ViewController that

00:25:43.666 --> 00:25:44.906 A:middle
I saw when I was running on

00:25:44.906 --> 00:25:46.716 A:middle
iPadOS, I get a menu.

00:25:47.906 --> 00:25:48.856 A:middle
And in that menu, I still get

00:25:48.856 --> 00:25:50.046 A:middle
many of the same functionalities

00:25:50.046 --> 00:25:52.016 A:middle
that I got in the Font Picker

00:25:52.176 --> 00:25:53.026 A:middle
running on iPadOS.

00:25:53.026 --> 00:25:54.316 A:middle
I still see Recents at the top.

00:25:54.756 --> 00:25:55.676 A:middle
And I can still select

00:25:55.676 --> 00:25:56.636 A:middle
individual faces.

00:25:57.196 --> 00:25:58.246 A:middle
I'm also still getting that

00:25:58.246 --> 00:25:59.866 A:middle
WYSIWYG presentation so I get a

00:25:59.866 --> 00:26:01.076 A:middle
good idea of exactly what the

00:25:59.866 --> 00:26:01.076 A:middle
good idea of exactly what the

00:26:01.076 --> 00:26:02.746 A:middle
font that I pick will look like.

00:26:03.596 --> 00:26:04.506 A:middle
In this case, I'll just go ahead

00:26:04.506 --> 00:26:05.976 A:middle
and select Comic Sans.

00:26:06.296 --> 00:26:09.816 A:middle
Now, we've done some additional

00:26:09.816 --> 00:26:11.456 A:middle
customization in our app for

00:26:11.456 --> 00:26:12.576 A:middle
when it's running on macOS.

00:26:13.056 --> 00:26:14.286 A:middle
Since we have that Font Panel

00:26:14.286 --> 00:26:16.056 A:middle
available to us, we've gone

00:26:16.056 --> 00:26:18.326 A:middle
ahead and updated our body here

00:26:18.746 --> 00:26:20.396 A:middle
to go ahead and respond to any

00:26:20.396 --> 00:26:21.506 A:middle
changes coming in from the Font

00:26:21.506 --> 00:26:21.726 A:middle
Panel.

00:26:22.876 --> 00:26:24.096 A:middle
And since we've done that, we've

00:26:24.096 --> 00:26:25.456 A:middle
also made it so that the Change

00:26:25.516 --> 00:26:27.596 A:middle
Body button rather than showing

00:26:27.596 --> 00:26:28.956 A:middle
the Font Picker, when it's

00:26:28.956 --> 00:26:29.976 A:middle
running on macOS, we actually

00:26:29.976 --> 00:26:30.956 A:middle
show the Font Panel.

00:26:32.566 --> 00:26:33.616 A:middle
This lets us do some additional

00:26:33.616 --> 00:26:34.386 A:middle
customization.

00:26:35.296 --> 00:26:36.966 A:middle
So, I can change the font just

00:26:36.966 --> 00:26:38.196 A:middle
like I could in the Font Picker.

00:26:39.056 --> 00:26:40.176 A:middle
But on macOS, I can also make

00:26:40.176 --> 00:26:41.366 A:middle
some additional formatting

00:26:41.366 --> 00:26:42.106 A:middle
changes in here.

00:26:42.696 --> 00:26:44.286 A:middle
Can change, say, the text size

00:26:44.596 --> 00:26:46.156 A:middle
or even the text color.

00:26:46.736 --> 00:26:50.576 A:middle
And this provides a very rich

00:26:50.576 --> 00:26:52.186 A:middle
experience on macOS that users

00:26:52.186 --> 00:26:53.676 A:middle
are accustomed to from Mac apps

00:26:53.716 --> 00:26:54.406 A:middle
over the years.

00:26:54.986 --> 00:26:56.946 A:middle
So, that's great.

00:26:56.946 --> 00:26:58.026 A:middle
That's our sample app.

00:26:58.146 --> 00:26:59.336 A:middle
Let's take a look at how we did

00:26:59.336 --> 00:27:00.626 A:middle
that in our code.

00:26:59.336 --> 00:27:00.626 A:middle
that in our code.

00:27:06.486 --> 00:27:07.406 A:middle
So, first, let's take a look at

00:27:07.406 --> 00:27:08.696 A:middle
how we created the Font Picker.

00:27:08.696 --> 00:27:10.616 A:middle
And the very first step of that

00:27:10.886 --> 00:27:12.496 A:middle
is creating a configuration for

00:27:13.096 --> 00:27:13.176 A:middle
it.

00:27:13.396 --> 00:27:14.566 A:middle
In this case, we initialize the

00:27:14.566 --> 00:27:16.646 A:middle
configuration object and tell it

00:27:16.646 --> 00:27:17.856 A:middle
that we want to include faces

00:27:17.856 --> 00:27:19.306 A:middle
when we're showing the Font

00:27:19.306 --> 00:27:19.576 A:middle
Picker.

00:27:21.516 --> 00:27:23.346 A:middle
With our configuration set up,

00:27:23.556 --> 00:27:24.846 A:middle
we can now create the Font

00:27:24.846 --> 00:27:25.926 A:middle
Picker passing in that

00:27:25.926 --> 00:27:26.546 A:middle
configuration.

00:27:27.486 --> 00:27:28.646 A:middle
The configuration will determine

00:27:28.806 --> 00:27:30.686 A:middle
how the Font Picker behaves over

00:27:30.826 --> 00:27:32.206 A:middle
its entire lifecycle.

00:27:33.626 --> 00:27:34.926 A:middle
We also set ourselves up as the

00:27:34.926 --> 00:27:36.426 A:middle
delegate to the Font Picker so

00:27:36.646 --> 00:27:37.856 A:middle
that we get all the callbacks

00:27:37.856 --> 00:27:40.836 A:middle
when the user selects a font.

00:27:41.026 --> 00:27:42.486 A:middle
And finally, we just go ahead

00:27:42.486 --> 00:27:43.786 A:middle
and present the Font Picker like

00:27:43.786 --> 00:27:44.656 A:middle
we would any other View

00:27:44.656 --> 00:27:45.076 A:middle
Controller.

00:27:45.076 --> 00:27:50.496 A:middle
Now, in the delegate callbacks,

00:27:50.906 --> 00:27:53.576 A:middle
we see that we can get the font

00:27:53.576 --> 00:27:55.606 A:middle
that the user selected directly

00:27:55.606 --> 00:27:56.386 A:middle
off the Font Picker.

00:27:57.256 --> 00:27:58.046 A:middle
Here, we see the delegate

00:27:58.046 --> 00:27:59.246 A:middle
callback for when the user does

00:27:59.246 --> 00:27:59.916 A:middle
select a font.

00:28:00.716 --> 00:28:02.146 A:middle
And in this case, we're taking

00:28:02.146 --> 00:28:03.416 A:middle
the font off the Font Picker

00:28:03.526 --> 00:28:05.346 A:middle
that is the one selected and

00:28:05.346 --> 00:28:06.306 A:middle
sending it to an attributed

00:28:06.536 --> 00:28:07.936 A:middle
string in our application.

00:28:08.566 --> 00:28:11.136 A:middle
Of course, if the user cancels

00:28:11.136 --> 00:28:12.386 A:middle
selecting a font, we're also

00:28:12.386 --> 00:28:13.796 A:middle
notified of that so we can make

00:28:13.866 --> 00:28:14.836 A:middle
any appropriate changes

00:28:14.876 --> 00:28:16.626 A:middle
necessary for the cancelation.

00:28:17.246 --> 00:28:20.686 A:middle
Now, finally, let's look at our

00:28:20.746 --> 00:28:21.846 A:middle
custom responder code.

00:28:21.936 --> 00:28:23.156 A:middle
So, this is how we handled the

00:28:23.156 --> 00:28:24.526 A:middle
Font Panel when running on

00:28:24.526 --> 00:28:25.006 A:middle
macOS.

00:28:25.756 --> 00:28:26.986 A:middle
In this case, it's a single

00:28:26.986 --> 00:28:29.036 A:middle
method that we implemented that

00:28:29.036 --> 00:28:30.276 A:middle
lets us know when the user made

00:28:30.276 --> 00:28:33.266 A:middle
changes to the attributes that

00:28:33.266 --> 00:28:33.856 A:middle
we should be using.

00:28:34.826 --> 00:28:35.706 A:middle
And rather than just getting the

00:28:35.706 --> 00:28:36.896 A:middle
set of attributes that they

00:28:36.896 --> 00:28:38.106 A:middle
changed, we actually get this

00:28:38.106 --> 00:28:40.466 A:middle
convenient closure that takes in

00:28:40.466 --> 00:28:41.196 A:middle
the set of attributes we

00:28:41.196 --> 00:28:42.026 A:middle
currently have.

00:28:42.486 --> 00:28:43.906 A:middle
And passes out the set of

00:28:43.906 --> 00:28:45.266 A:middle
attributes as they should be

00:28:45.266 --> 00:28:46.386 A:middle
after the user change was

00:28:46.386 --> 00:28:46.806 A:middle
applied.

00:28:47.636 --> 00:28:48.856 A:middle
Now, the reason for this is that

00:28:48.996 --> 00:28:50.396 A:middle
current attributes may stay the

00:28:50.456 --> 00:28:52.506 A:middle
same or may change based on what

00:28:52.506 --> 00:28:53.346 A:middle
the user changed.

00:28:53.926 --> 00:28:55.326 A:middle
So, for example, if underlining

00:28:55.326 --> 00:28:57.466 A:middle
is currently in effect, the user

00:28:57.466 --> 00:28:59.346 A:middle
changing the foreground color of

00:28:59.346 --> 00:29:01.076 A:middle
the text shouldn't change that

00:28:59.346 --> 00:29:01.076 A:middle
the text shouldn't change that

00:29:01.076 --> 00:29:01.576 A:middle
underlining.

00:29:02.286 --> 00:29:03.526 A:middle
And in this case, the

00:29:03.526 --> 00:29:05.686 A:middle
conversionHandler will take care

00:29:05.686 --> 00:29:07.186 A:middle
of that for us.

00:29:10.176 --> 00:29:12.116 A:middle
So, let's just do a quick recap

00:29:12.116 --> 00:29:12.876 A:middle
of font selection.

00:29:13.946 --> 00:29:15.066 A:middle
Instead of enumerating through

00:29:15.066 --> 00:29:16.336 A:middle
all the fonts on the system,

00:29:17.216 --> 00:29:19.476 A:middle
when wanting to show user fonts

00:29:19.756 --> 00:29:21.416 A:middle
there's a new View Controller,

00:29:21.696 --> 00:29:23.276 A:middle
UIFontPickerViewController on

00:29:23.386 --> 00:29:26.186 A:middle
iOS, iPadOS, and even macOS.

00:29:27.366 --> 00:29:28.426 A:middle
Additionally, when running your

00:29:28.426 --> 00:29:30.566 A:middle
UIKit app on macOS, the Font

00:29:30.716 --> 00:29:31.546 A:middle
Panel is available.

00:29:32.296 --> 00:29:33.226 A:middle
This has a few additional

00:29:33.226 --> 00:29:35.356 A:middle
considerations as custom

00:29:35.356 --> 00:29:36.766 A:middle
responders may need to handle

00:29:36.766 --> 00:29:37.896 A:middle
attribute changes that can

00:29:37.896 --> 00:29:39.366 A:middle
happen anytime your application

00:29:39.366 --> 00:29:39.746 A:middle
is running.

00:29:41.346 --> 00:29:42.726 A:middle
Standard text views will handle

00:29:42.726 --> 00:29:43.466 A:middle
this automatically.

00:29:43.466 --> 00:29:47.246 A:middle
Now, I'd like to invite Donna up

00:29:47.766 --> 00:29:49.366 A:middle
to talk some about text scaling

00:29:49.366 --> 00:29:50.786 A:middle
across Apple's platforms.

00:29:52.516 --> 00:29:55.466 A:middle
[ Applause ]

00:29:55.966 --> 00:29:57.566 A:middle
&gt;&gt; Thank you, Eric.

00:29:59.916 --> 00:30:01.356 A:middle
So, text scaling is a new

00:29:59.916 --> 00:30:01.356 A:middle
So, text scaling is a new

00:30:01.356 --> 00:30:02.646 A:middle
concept that we're introducing

00:30:02.876 --> 00:30:04.976 A:middle
in iOS 13 and macOS Catalina.

00:30:05.666 --> 00:30:07.006 A:middle
And today, we're going to cover

00:30:07.006 --> 00:30:08.396 A:middle
how to use this new concept to

00:30:08.396 --> 00:30:09.936 A:middle
make sure that the text sizes in

00:30:09.936 --> 00:30:11.226 A:middle
your app look consistent

00:30:11.226 --> 00:30:11.816 A:middle
everywhere.

00:30:12.426 --> 00:30:14.976 A:middle
So, now as iOS developers,

00:30:15.276 --> 00:30:16.336 A:middle
you're probably familiar with

00:30:16.336 --> 00:30:17.456 A:middle
the Human Interface Guidelines.

00:30:18.506 --> 00:30:19.416 A:middle
And this table from the

00:30:19.416 --> 00:30:21.226 A:middle
guidelines shows the font sizes

00:30:21.226 --> 00:30:22.466 A:middle
for the default dynamic

00:30:22.466 --> 00:30:22.836 A:middle
typesetting.

00:30:23.946 --> 00:30:25.386 A:middle
Now, most text in UIKit apps

00:30:25.386 --> 00:30:27.096 A:middle
uses the Body Text Style which

00:30:27.096 --> 00:30:27.846 A:middle
is 17 points.

00:30:27.846 --> 00:30:30.776 A:middle
And here's what that looks like

00:30:30.776 --> 00:30:31.366 A:middle
on an iPad.

00:30:31.766 --> 00:30:32.416 A:middle
It's pretty easy to read.

00:30:32.416 --> 00:30:36.656 A:middle
Right. You look at that same

00:30:36.656 --> 00:30:39.106 A:middle
17-point text on a Mac, it looks

00:30:39.176 --> 00:30:40.046 A:middle
a little bit different.

00:30:40.046 --> 00:30:42.846 A:middle
And when you put the two

00:30:42.876 --> 00:30:44.396 A:middle
side-by-side, you can see that

00:30:44.396 --> 00:30:46.466 A:middle
by comparison, the 17-point text

00:30:46.466 --> 00:30:48.286 A:middle
on the Mac looks a bit big.

00:30:48.286 --> 00:30:52.176 A:middle
And that's because on the Mac

00:30:52.816 --> 00:30:53.906 A:middle
we're more accustomed to a

00:30:53.906 --> 00:30:55.596 A:middle
smaller default font size closer

00:30:55.596 --> 00:30:59.316 A:middle
to 13 points, as shown here.

00:30:59.316 --> 00:31:00.506 A:middle
But again, if we take that same

00:30:59.316 --> 00:31:00.506 A:middle
But again, if we take that same

00:31:00.506 --> 00:31:02.386 A:middle
13-point text and we look at it

00:31:02.386 --> 00:31:06.066 A:middle
on an iPad, it looks very small

00:31:06.066 --> 00:31:07.046 A:middle
and it's difficult to read.

00:31:07.906 --> 00:31:09.316 A:middle
Now, this inconsistency has

00:31:09.316 --> 00:31:10.546 A:middle
existed for a long time.

00:31:10.726 --> 00:31:13.076 A:middle
And we chose 17 points as the

00:31:13.076 --> 00:31:14.856 A:middle
base size for our visual type

00:31:14.926 --> 00:31:17.116 A:middle
scaling in iOS to make text easy

00:31:17.116 --> 00:31:18.916 A:middle
to read and easy to interact

00:31:18.916 --> 00:31:19.726 A:middle
with on touchscreens.

00:31:20.426 --> 00:31:22.896 A:middle
But as we move forward, the

00:31:22.896 --> 00:31:24.256 A:middle
cross-platform user experience

00:31:24.256 --> 00:31:25.396 A:middle
is only going to become more

00:31:25.396 --> 00:31:25.766 A:middle
important.

00:31:25.766 --> 00:31:27.726 A:middle
Now, that you can bring your

00:31:27.976 --> 00:31:29.656 A:middle
iPad apps to the Mac, users will

00:31:29.656 --> 00:31:30.796 A:middle
notice this difference in text

00:31:30.796 --> 00:31:32.206 A:middle
size when running your iPad app

00:31:32.206 --> 00:31:33.646 A:middle
on the Mac alongside an AppKit

00:31:33.646 --> 00:31:34.066 A:middle
app.

00:31:34.326 --> 00:31:35.486 A:middle
When copying and pasting text

00:31:35.656 --> 00:31:37.286 A:middle
between apps and when viewing

00:31:37.286 --> 00:31:38.426 A:middle
documents side-by-side.

00:31:38.476 --> 00:31:41.746 A:middle
And so, how do we make the text

00:31:41.906 --> 00:31:43.836 A:middle
size look consistent everywhere?

00:31:44.546 --> 00:31:45.906 A:middle
Ideally, if we're looking at the

00:31:45.906 --> 00:31:47.666 A:middle
same text in the same font and

00:31:47.706 --> 00:31:49.166 A:middle
size, we would want it to look

00:31:49.206 --> 00:31:50.726 A:middle
something like this where the

00:31:50.726 --> 00:31:51.996 A:middle
visual scaling fits each

00:31:52.096 --> 00:31:52.566 A:middle
platform.

00:31:53.086 --> 00:31:53.966 A:middle
And there are really two

00:31:53.966 --> 00:31:55.116 A:middle
different visual scalings here.

00:31:55.656 --> 00:31:57.786 A:middle
There's the scaling that's used

00:31:57.786 --> 00:32:00.036 A:middle
on iOS and iPadOS where 17

00:31:57.786 --> 00:32:00.036 A:middle
on iOS and iPadOS where 17

00:32:00.036 --> 00:32:01.206 A:middle
points is the default size.

00:32:01.206 --> 00:32:02.616 A:middle
And we will call this the iOS

00:32:02.616 --> 00:32:03.596 A:middle
text scaling.

00:32:03.596 --> 00:32:06.606 A:middle
And then, there's the scaling

00:32:06.606 --> 00:32:07.906 A:middle
used on macOS and other

00:32:07.906 --> 00:32:09.216 A:middle
non-Apple platforms where the

00:32:09.216 --> 00:32:10.956 A:middle
default size is closer to 13

00:32:10.956 --> 00:32:11.216 A:middle
points.

00:32:11.216 --> 00:32:12.816 A:middle
And we'll call this the standard

00:32:12.816 --> 00:32:13.336 A:middle
text scaling.

00:32:13.396 --> 00:32:16.756 A:middle
And we want you as developers to

00:32:16.756 --> 00:32:18.116 A:middle
be aware of these two different

00:32:18.116 --> 00:32:19.876 A:middle
text scalings and to use the

00:32:19.946 --> 00:32:21.186 A:middle
standard text scaling in

00:32:21.246 --> 00:32:22.656 A:middle
situations where it will improve

00:32:22.936 --> 00:32:24.026 A:middle
the cross-platform user

00:32:24.026 --> 00:32:24.516 A:middle
experience.

00:32:25.276 --> 00:32:26.326 A:middle
So, now let's take a look at

00:32:26.326 --> 00:32:27.276 A:middle
some of these situations.

00:32:29.196 --> 00:32:30.726 A:middle
First up, is iPad apps on the

00:32:30.726 --> 00:32:30.836 A:middle
Mac.

00:32:31.346 --> 00:32:34.956 A:middle
And since UITextViews are the

00:32:34.956 --> 00:32:36.716 A:middle
control of choice for displaying

00:32:36.716 --> 00:32:38.296 A:middle
large amounts of text, this is

00:32:38.296 --> 00:32:39.136 A:middle
where you're most likely to

00:32:39.136 --> 00:32:39.906 A:middle
notice the difference.

00:32:39.906 --> 00:32:41.836 A:middle
And we wanted to give you an

00:32:41.836 --> 00:32:45.086 A:middle
easy way to address this.

00:32:45.446 --> 00:32:47.166 A:middle
So, in iOS 13, we've added a new

00:32:47.166 --> 00:32:48.386 A:middle
property to UITextView.

00:32:48.776 --> 00:32:49.196 A:middle
It's called

00:32:49.406 --> 00:32:50.636 A:middle
usesStandardTextScaling.

00:32:50.636 --> 00:32:53.026 A:middle
And when you turn this on, UIKit

00:32:53.026 --> 00:32:54.526 A:middle
will automatically adjust the

00:32:54.526 --> 00:32:56.036 A:middle
rendering of the text inside the

00:32:56.036 --> 00:32:57.366 A:middle
Text View to match the standard

00:32:57.366 --> 00:32:57.786 A:middle
text scaling.

00:32:57.786 --> 00:33:00.826 A:middle
So, we go back to our text here.

00:32:57.786 --> 00:33:00.826 A:middle
So, we go back to our text here.

00:33:00.826 --> 00:33:02.506 A:middle
We can see that the scaling is

00:33:02.506 --> 00:33:03.466 A:middle
looking a little bit off, right.

00:33:03.466 --> 00:33:05.156 A:middle
Well, let's check out what

00:33:05.156 --> 00:33:06.016 A:middle
happens when we turn on

00:33:06.186 --> 00:33:07.326 A:middle
usesStandardTextScaling.

00:33:07.936 --> 00:33:11.456 A:middle
Ah, that's much better.

00:33:13.066 --> 00:33:14.456 A:middle
Using this new property is a

00:33:14.556 --> 00:33:16.076 A:middle
really great way to ensure that

00:33:16.076 --> 00:33:17.586 A:middle
your text displays in the

00:33:17.586 --> 00:33:18.466 A:middle
standard text scaling.

00:33:19.106 --> 00:33:21.206 A:middle
But do take note,

00:33:21.896 --> 00:33:23.216 A:middle
usesStandardTextScaling is

00:33:23.256 --> 00:33:24.236 A:middle
turned off by default.

00:33:24.236 --> 00:33:25.926 A:middle
And that's because code that

00:33:25.926 --> 00:33:27.576 A:middle
uses custom transforms on Text

00:33:27.576 --> 00:33:28.926 A:middle
Views might have unexpected

00:33:28.926 --> 00:33:30.036 A:middle
results when combined with this

00:33:30.096 --> 00:33:30.446 A:middle
property.

00:33:31.316 --> 00:33:32.226 A:middle
And so, if you want to use the

00:33:32.276 --> 00:33:33.466 A:middle
standard text scaling, make sure

00:33:33.466 --> 00:33:34.736 A:middle
you enable this for each of your

00:33:34.736 --> 00:33:35.236 A:middle
Text Views.

00:33:37.446 --> 00:33:38.766 A:middle
Next, let's talk about text

00:33:38.766 --> 00:33:39.776 A:middle
scaling with copy and paste.

00:33:40.886 --> 00:33:42.276 A:middle
Now, since iOS uses a unique

00:33:42.316 --> 00:33:43.796 A:middle
text scaling, you might notice

00:33:44.046 --> 00:33:45.256 A:middle
this visual size difference when

00:33:45.256 --> 00:33:46.856 A:middle
copying and pasting text between

00:33:46.856 --> 00:33:48.156 A:middle
UIKit and AppKit apps.

00:33:48.156 --> 00:33:49.486 A:middle
And if you've ever used the

00:33:49.486 --> 00:33:50.716 A:middle
Universal Clipboard, you might

00:33:50.716 --> 00:33:51.716 A:middle
actually have already noticed

00:33:51.716 --> 00:33:51.816 A:middle
this.

00:33:51.816 --> 00:33:54.746 A:middle
Well, the good news is now you

00:33:54.746 --> 00:33:55.646 A:middle
actually don't have to do

00:33:55.646 --> 00:33:57.336 A:middle
anything to get this.

00:33:57.336 --> 00:33:58.696 A:middle
Starting in the latest OS, you

00:33:58.696 --> 00:34:00.406 A:middle
get visually consistent copy and

00:33:58.696 --> 00:34:00.406 A:middle
get visually consistent copy and

00:34:00.406 --> 00:34:01.226 A:middle
paste for free.

00:34:01.226 --> 00:34:03.566 A:middle
And let's take a look at how

00:34:03.566 --> 00:34:03.956 A:middle
that works.

00:34:03.956 --> 00:34:05.756 A:middle
So, I got my two platforms here.

00:34:05.756 --> 00:34:08.056 A:middle
iOS on the left and macOS on the

00:34:08.056 --> 00:34:08.275 A:middle
right.

00:34:08.275 --> 00:34:11.366 A:middle
And on each of these platforms,

00:34:11.726 --> 00:34:13.346 A:middle
Copy and Paste moves text

00:34:13.346 --> 00:34:14.726 A:middle
between two different layers of

00:34:14.775 --> 00:34:15.116 A:middle
the system.

00:34:15.735 --> 00:34:17.136 A:middle
The runtime layer depicted by

00:34:17.136 --> 00:34:18.726 A:middle
our little runner here, and the

00:34:18.726 --> 00:34:20.286 A:middle
persistence layer represented by

00:34:20.286 --> 00:34:20.606 A:middle
these discs.

00:34:20.606 --> 00:34:24.186 A:middle
Now, text in the Text View

00:34:24.396 --> 00:34:25.956 A:middle
exists in the runtime layer as

00:34:25.956 --> 00:34:26.775 A:middle
an attributed string.

00:34:26.775 --> 00:34:29.255 A:middle
And when you copy that text, it

00:34:29.255 --> 00:34:30.466 A:middle
moves if from the Text View in

00:34:30.466 --> 00:34:31.266 A:middle
the runtime layer to the

00:34:31.266 --> 00:34:32.936 A:middle
PasteBoard in the persistence

00:34:32.936 --> 00:34:33.166 A:middle
layer.

00:34:33.166 --> 00:34:35.116 A:middle
And it's serialized to rich text

00:34:35.116 --> 00:34:36.056 A:middle
format or RTF for storage on the

00:34:36.136 --> 00:34:36.896 A:middle
PasteBoard.

00:34:39.576 --> 00:34:41.226 A:middle
Now, on the latest OS, we've

00:34:41.226 --> 00:34:42.315 A:middle
added a new behavior for

00:34:42.315 --> 00:34:43.516 A:middle
attributed string APIs that

00:34:43.686 --> 00:34:44.356 A:middle
write RTF.

00:34:44.985 --> 00:34:46.716 A:middle
So, now when you create your RTF

00:34:46.716 --> 00:34:48.406 A:middle
from an attributed string it'll

00:34:48.406 --> 00:34:49.966 A:middle
add metadata that indicates

00:34:49.966 --> 00:34:51.286 A:middle
which text scaling it's using.

00:34:51.926 --> 00:34:54.976 A:middle
So, now when text is copied on

00:34:55.196 --> 00:34:56.606 A:middle
iOS it will be automatically

00:34:56.606 --> 00:34:58.066 A:middle
tagged with that metadata this

00:34:58.066 --> 00:35:00.966 A:middle
says it's using, the iOS text

00:34:58.066 --> 00:35:00.966 A:middle
says it's using, the iOS text

00:35:03.216 --> 00:35:03.446 A:middle
scaling.

00:35:03.556 --> 00:35:04.556 A:middle
Now, we've also added new

00:35:04.556 --> 00:35:06.196 A:middle
behavior for the RTF reading

00:35:06.196 --> 00:35:07.616 A:middle
APIs on attributed string.

00:35:07.616 --> 00:35:09.686 A:middle
And so, when you're creating an

00:35:09.686 --> 00:35:10.766 A:middle
attributed string from RTF, the

00:35:11.366 --> 00:35:12.556 A:middle
system will look for that text

00:35:12.556 --> 00:35:13.936 A:middle
scaling metadata and it'll

00:35:13.936 --> 00:35:15.736 A:middle
adjust the font sizes for you if

00:35:15.736 --> 00:35:16.036 A:middle
it's needed.

00:35:16.036 --> 00:35:19.426 A:middle
Going back to our original text,

00:35:19.636 --> 00:35:20.746 A:middle
we have that text that we copied

00:35:20.746 --> 00:35:21.136 A:middle
on iOS.

00:35:21.216 --> 00:35:22.636 A:middle
And when we paste it on the Mac

00:35:23.286 --> 00:35:24.186 A:middle
the system will see that

00:35:24.186 --> 00:35:25.286 A:middle
metadata that says it's using

00:35:25.286 --> 00:35:26.706 A:middle
the iOS text scaling.

00:35:27.346 --> 00:35:28.816 A:middle
And then, the font point sizes

00:35:28.816 --> 00:35:29.586 A:middle
will be adjusted in the

00:35:29.586 --> 00:35:31.116 A:middle
attributes string so that when

00:35:31.116 --> 00:35:32.376 A:middle
the text is displayed on the

00:35:32.376 --> 00:35:34.086 A:middle
Mac, it looks visually similar

00:35:34.086 --> 00:35:35.486 A:middle
in size to that original text in

00:35:35.546 --> 00:35:35.636 A:middle
iOS.

00:35:38.206 --> 00:35:40.456 A:middle
And the end result is a lot like

00:35:40.456 --> 00:35:41.416 A:middle
this example from earlier.

00:35:41.416 --> 00:35:43.526 A:middle
But the font sizes will be

00:35:43.526 --> 00:35:43.876 A:middle
different.

00:35:44.996 --> 00:35:46.356 A:middle
The original text we copied here

00:35:46.496 --> 00:35:48.196 A:middle
on iOS is using a size of 17

00:35:48.196 --> 00:35:48.476 A:middle
points.

00:35:48.656 --> 00:35:51.326 A:middle
And the pasted text on the Mac

00:35:51.576 --> 00:35:52.926 A:middle
is using a size of 13 points.

00:35:53.616 --> 00:35:56.516 A:middle
Now, having different font sizes

00:35:56.566 --> 00:35:57.896 A:middle
between these two platforms is

00:35:57.896 --> 00:35:59.556 A:middle
okay for copy and paste because

00:35:59.556 --> 00:36:00.816 A:middle
that font size information is

00:35:59.556 --> 00:36:00.816 A:middle
that font size information is

00:36:00.816 --> 00:36:01.166 A:middle
transient.

00:36:01.686 --> 00:36:03.066 A:middle
It exists only in the runtime

00:36:03.066 --> 00:36:03.256 A:middle
layer.

00:36:04.246 --> 00:36:05.596 A:middle
But RTF is also a document

00:36:05.596 --> 00:36:07.056 A:middle
format and this isn't a great

00:36:07.056 --> 00:36:08.316 A:middle
solution for the persistence in

00:36:08.316 --> 00:36:08.976 A:middle
the storage layer.

00:36:08.976 --> 00:36:11.746 A:middle
And that leads to our final

00:36:11.786 --> 00:36:13.366 A:middle
situation, working with text

00:36:13.366 --> 00:36:14.306 A:middle
scaling for document

00:36:14.306 --> 00:36:14.846 A:middle
interchange.

00:36:15.006 --> 00:36:17.666 A:middle
And we need to weigh special

00:36:17.666 --> 00:36:18.986 A:middle
considerations here to balance

00:36:19.366 --> 00:36:20.666 A:middle
the desire for cross-platform

00:36:20.666 --> 00:36:23.276 A:middle
visual consistency with the need

00:36:23.276 --> 00:36:24.646 A:middle
for integrity in the document

00:36:24.646 --> 00:36:24.846 A:middle
model.

00:36:25.146 --> 00:36:28.546 A:middle
And so, to have the text look

00:36:28.546 --> 00:36:30.036 A:middle
the same across platforms and

00:36:30.036 --> 00:36:31.426 A:middle
also keep the same font sizes in

00:36:31.426 --> 00:36:32.796 A:middle
the document, what we really

00:36:32.796 --> 00:36:34.666 A:middle
need is the ability to use one

00:36:34.666 --> 00:36:35.706 A:middle
text scaling for viewing the

00:36:35.706 --> 00:36:37.706 A:middle
document and a different scaling

00:36:37.706 --> 00:36:38.176 A:middle
for saving it.

00:36:38.176 --> 00:36:41.216 A:middle
And there's two different ways

00:36:41.276 --> 00:36:42.126 A:middle
that we can approach this.

00:36:42.666 --> 00:36:44.046 A:middle
We can change the document model

00:36:44.046 --> 00:36:45.266 A:middle
and use different font sizes for

00:36:45.266 --> 00:36:46.276 A:middle
viewing versus saving.

00:36:47.056 --> 00:36:48.696 A:middle
Or we can change the document

00:36:48.696 --> 00:36:50.136 A:middle
view by changing the rendering

00:36:50.196 --> 00:36:51.936 A:middle
scale and keep the font size the

00:36:51.996 --> 00:36:52.716 A:middle
same when saving.

00:36:53.476 --> 00:36:55.816 A:middle
We've actually implemented both

00:36:55.816 --> 00:36:56.876 A:middle
of these approaches for RTF

00:36:57.636 --> 00:36:58.866 A:middle
since this is a common format

00:36:58.866 --> 00:37:00.226 A:middle
that we use internally.

00:36:58.866 --> 00:37:00.226 A:middle
that we use internally.

00:37:00.226 --> 00:37:02.286 A:middle
And I'd like to share with you

00:37:02.286 --> 00:37:03.606 A:middle
the fundamental techniques that

00:37:03.606 --> 00:37:04.996 A:middle
we use to do this so that you

00:37:04.996 --> 00:37:06.206 A:middle
can apply some of our techniques

00:37:06.526 --> 00:37:07.546 A:middle
to build support for text

00:37:07.546 --> 00:37:09.096 A:middle
scaling into your own workflows

00:37:09.096 --> 00:37:10.836 A:middle
and document formats.

00:37:11.836 --> 00:37:13.416 A:middle
So, the first thing we did was

00:37:13.416 --> 00:37:15.256 A:middle
we extended our format to tag

00:37:15.256 --> 00:37:16.526 A:middle
documents with that text scaling

00:37:16.526 --> 00:37:17.396 A:middle
metadata.

00:37:17.716 --> 00:37:18.996 A:middle
Document parsers and viewers

00:37:18.996 --> 00:37:20.386 A:middle
will need this information to

00:37:20.386 --> 00:37:21.886 A:middle
understand which text scaling

00:37:21.886 --> 00:37:22.736 A:middle
the document is using.

00:37:23.256 --> 00:37:26.306 A:middle
Since preexisting documents are

00:37:26.306 --> 00:37:27.566 A:middle
not going to have this metadata,

00:37:27.566 --> 00:37:28.816 A:middle
we also needed to migrate them

00:37:28.816 --> 00:37:29.686 A:middle
to use the new format.

00:37:29.686 --> 00:37:31.946 A:middle
And for RTF, this happens

00:37:31.996 --> 00:37:33.556 A:middle
automatically once the documents

00:37:33.556 --> 00:37:35.586 A:middle
are saved with the latest OS.

00:37:37.186 --> 00:37:38.866 A:middle
Now, we also needed to make sure

00:37:38.866 --> 00:37:42.496 A:middle
that our documents have the

00:37:42.496 --> 00:37:49.436 A:middle
correct text scaling associated

00:37:49.436 --> 00:37:50.446 A:middle
with them.

00:37:51.186 --> 00:37:56.126 A:middle
And this is especially important

00:37:56.576 --> 00:37:59.036 A:middle
for that initial migration.

00:37:59.246 --> 00:38:01.846 A:middle
So, we're introducing a new

00:37:59.246 --> 00:38:01.846 A:middle
So, we're introducing a new

00:38:02.096 --> 00:38:04.946 A:middle
attributed string API to help

00:38:04.946 --> 00:38:08.046 A:middle
out with that in the form of new

00:38:08.116 --> 00:38:09.446 A:middle
document attributes.

00:38:12.066 --> 00:38:12.746 A:middle
Now, you can use the text

00:38:12.746 --> 00:38:13.916 A:middle
scaling document attribute to

00:38:13.916 --> 00:38:15.116 A:middle
set the metadata in the document

00:38:15.116 --> 00:38:16.506 A:middle
on Save using attributed string

00:38:16.506 --> 00:38:17.946 A:middle
writing APIs like data from

00:38:17.976 --> 00:38:18.096 A:middle
range.

00:38:18.126 --> 00:38:18.846 A:middle
If you need to, you can also

00:38:18.876 --> 00:38:19.596 A:middle
convert the document to a

00:38:19.626 --> 00:38:20.496 A:middle
particular text scaling when you

00:38:20.526 --> 00:38:20.706 A:middle
save it.

00:38:20.736 --> 00:38:21.516 A:middle
And you do this by specifying

00:38:21.546 --> 00:38:22.206 A:middle
both of the new document

00:38:22.236 --> 00:38:22.506 A:middle
attributes.

00:38:22.536 --> 00:38:23.136 A:middle
Now, for the model-based

00:38:23.166 --> 00:38:23.826 A:middle
approach, we needed a way to

00:38:23.856 --> 00:38:24.756 A:middle
control conversions between text

00:38:24.786 --> 00:38:25.656 A:middle
scalings when opening documents.

00:38:25.686 --> 00:38:26.466 A:middle
And we've introduced even more

00:38:26.496 --> 00:38:27.336 A:middle
attributed string API for that

00:38:27.366 --> 00:38:27.516 A:middle
purpose.

00:38:27.546 --> 00:38:28.326 A:middle
New reading options for target

00:38:28.356 --> 00:38:28.986 A:middle
and source text scaling.

00:38:29.016 --> 00:38:29.856 A:middle
And you can control which text

00:38:29.886 --> 00:38:30.516 A:middle
scaling will be used by

00:38:30.546 --> 00:38:31.326 A:middle
specifying these reading options

00:38:31.356 --> 00:38:32.136 A:middle
when creating your attributed

00:38:32.166 --> 00:38:32.976 A:middle
string from an RTF document.

00:38:35.276 --> 00:38:36.856 A:middle
And finally, for the view-based

00:38:36.856 --> 00:38:38.336 A:middle
approach, we recommend using the

00:38:38.336 --> 00:38:39.356 A:middle
standard text scaling.

00:38:40.266 --> 00:38:41.816 A:middle
Now, for RTF documents, you do

00:38:41.816 --> 00:38:43.046 A:middle
this by combining the new API.

00:38:43.676 --> 00:38:44.846 A:middle
You first set the target text

00:38:44.846 --> 00:38:46.296 A:middle
scaling to standard when you're

00:38:46.296 --> 00:38:47.436 A:middle
reading your RTF into an

00:38:47.486 --> 00:38:48.346 A:middle
attributed string.

00:38:48.346 --> 00:38:50.586 A:middle
And then, you set

00:38:50.586 --> 00:38:52.446 A:middle
usesStandardTextScaling on your

00:38:52.446 --> 00:38:53.826 A:middle
Text View that will display the

00:38:53.826 --> 00:38:54.846 A:middle
document.

00:38:56.116 --> 00:38:57.016 A:middle
Ooh, okay.

00:38:57.876 --> 00:38:58.786 A:middle
We covered a lot of ground

00:38:58.786 --> 00:38:59.026 A:middle
today.

00:38:59.026 --> 00:39:00.946 A:middle
Now, as a reminder, here's what

00:38:59.026 --> 00:39:00.946 A:middle
Now, as a reminder, here's what

00:39:00.946 --> 00:39:01.256 A:middle
you've learned.

00:39:01.256 --> 00:39:03.386 A:middle
IOS apps can now make fonts

00:39:03.386 --> 00:39:04.356 A:middle
available systemwide.

00:39:05.176 --> 00:39:06.826 A:middle
Use name instantiation only for

00:39:06.826 --> 00:39:07.646 A:middle
non-system fonts.

00:39:08.306 --> 00:39:09.706 A:middle
And remember, the name

00:39:09.706 --> 00:39:11.236 A:middle
instantiation is not guaranteed.

00:39:12.266 --> 00:39:13.516 A:middle
Use On-Demand resources to

00:39:13.516 --> 00:39:14.546 A:middle
deliver fonts to the OS.

00:39:14.546 --> 00:39:16.106 A:middle
And use standard text scaling

00:39:16.106 --> 00:39:17.676 A:middle
for the best cross-platform user

00:39:17.676 --> 00:39:18.056 A:middle
experience.

00:39:18.056 --> 00:39:20.946 A:middle
Come visit us at the Text and

00:39:20.946 --> 00:39:22.376 A:middle
Fonts Lab in a couple hours to

00:39:22.376 --> 00:39:23.446 A:middle
learn more about all the topics

00:39:23.446 --> 00:39:24.396 A:middle
that we've covered here today.

00:39:24.396 --> 00:39:26.006 A:middle
And you can also come talk to us

00:39:26.006 --> 00:39:27.336 A:middle
at the Labs for iPad apps and

00:39:27.446 --> 00:39:28.526 A:middle
Mac to learn more about text

00:39:28.646 --> 00:39:28.966 A:middle
scaling.

00:39:30.526 --> 00:39:31.776 A:middle
We're really excited to see what

00:39:31.776 --> 00:39:32.686 A:middle
you'll create with these new

00:39:32.686 --> 00:39:33.296 A:middle
capabilities.

00:39:33.296 --> 00:39:34.496 A:middle
Thank you and enjoy the rest of

00:39:34.496 --> 00:39:34.896 A:middle
the conference.

00:39:35.516 --> 00:39:39.500 A:middle
[ Applause ]
