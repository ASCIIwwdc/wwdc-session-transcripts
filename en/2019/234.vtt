WEBVTT

00:00:01.176 --> 00:00:04.500 A:middle
[ Music ]

00:00:11.516 --> 00:00:16.676 A:middle
[ Applause ]

00:00:17.176 --> 00:00:18.086 A:middle
&gt;&gt; Good afternoon.

00:00:18.366 --> 00:00:19.926 A:middle
My name is Frank Doepke and I'm

00:00:19.926 --> 00:00:21.226 A:middle
going to talk to you about Text

00:00:21.226 --> 00:00:22.546 A:middle
Recognition in the Vision

00:00:22.546 --> 00:00:22.956 A:middle
Framework.

00:00:23.506 --> 00:00:26.686 A:middle
Now, for those of you who are

00:00:26.686 --> 00:00:28.236 A:middle
familiar with Vision, you'll

00:00:28.236 --> 00:00:29.446 A:middle
know that we already had the

00:00:29.446 --> 00:00:32.735 A:middle
VNDetectRectangleRequest that

00:00:32.735 --> 00:00:34.336 A:middle
tells you where there is text in

00:00:34.336 --> 00:00:34.796 A:middle
an image.

00:00:36.176 --> 00:00:38.286 A:middle
For some mysterious reason, we

00:00:38.286 --> 00:00:40.176 A:middle
always got the question, "What

00:00:40.176 --> 00:00:41.086 A:middle
is the text?"

00:00:41.806 --> 00:00:43.496 A:middle
So, we needed a little bit of

00:00:43.696 --> 00:00:44.946 A:middle
extra code.

00:00:45.156 --> 00:00:46.776 A:middle
It arrayed over your results,

00:00:47.916 --> 00:00:50.206 A:middle
and then you need to train

00:00:50.206 --> 00:00:52.456 A:middle
basically a Core ML model that

00:00:52.456 --> 00:00:53.606 A:middle
actually can read this stuff.

00:00:55.076 --> 00:00:57.636 A:middle
Next, you run the Core ML model.

00:00:58.376 --> 00:01:00.126 A:middle
You filter out the bad

00:00:58.376 --> 00:01:00.126 A:middle
You filter out the bad

00:01:00.126 --> 00:01:01.256 A:middle
characterization.

00:01:02.086 --> 00:01:03.156 A:middle
You take all these characters,

00:01:03.156 --> 00:01:05.336 A:middle
put them into a string, and then

00:01:05.336 --> 00:01:06.646 A:middle
come up with some heuristics

00:01:07.056 --> 00:01:08.926 A:middle
that actually form the really

00:01:08.926 --> 00:01:10.536 A:middle
sentences and words out of this.

00:01:11.926 --> 00:01:12.956 A:middle
So now you know why we need a

00:01:12.956 --> 00:01:14.366 A:middle
full session to talk about Text

00:01:14.366 --> 00:01:14.906 A:middle
Recognition.

00:01:15.436 --> 00:01:18.096 A:middle
But today, I want to make this

00:01:18.096 --> 00:01:18.506 A:middle
easier.

00:01:19.756 --> 00:01:21.536 A:middle
And we have something new, and

00:01:21.536 --> 00:01:21.926 A:middle
that is the

00:01:21.926 --> 00:01:23.606 A:middle
VNRecognizedTextRequest.

00:01:24.136 --> 00:01:26.556 A:middle
And just that little bit of text

00:01:26.556 --> 00:01:30.006 A:middle
that you see here [applause],

00:01:30.886 --> 00:01:34.466 A:middle
this allows you to take you from

00:01:34.466 --> 00:01:36.136 A:middle
an image like this into

00:01:36.796 --> 00:01:37.946 A:middle
recognized text like this.

00:01:38.036 --> 00:01:40.036 A:middle
[ Applause ]

00:01:40.056 --> 00:01:41.376 A:middle
Thank you.

00:01:45.516 --> 00:01:46.436 A:middle
Okay, so what are we going to

00:01:46.436 --> 00:01:47.046 A:middle
cover today?

00:01:48.396 --> 00:01:49.256 A:middle
First we're going to talk a

00:01:49.256 --> 00:01:50.846 A:middle
little bit about how Text

00:01:50.846 --> 00:01:51.636 A:middle
Recognition works.

00:01:53.056 --> 00:01:54.266 A:middle
We have a number of example

00:01:54.266 --> 00:01:56.126 A:middle
applications and they're also

00:01:56.126 --> 00:01:57.356 A:middle
all attached to the session so

00:01:57.356 --> 00:01:58.406 A:middle
you can download the sample

00:01:58.406 --> 00:01:58.696 A:middle
code.

00:02:00.156 --> 00:02:01.076 A:middle
And last but not least, we're

00:02:01.076 --> 00:02:01.986 A:middle
going to go over some best

00:02:02.046 --> 00:02:03.756 A:middle
practices on how to use our Text

00:02:03.756 --> 00:02:04.296 A:middle
Recognition.

00:02:04.866 --> 00:02:07.136 A:middle
So, how does Text Recognition

00:02:07.136 --> 00:02:07.746 A:middle
work in Vision?

00:02:08.446 --> 00:02:10.846 A:middle
We have two paths to choose

00:02:10.846 --> 00:02:11.156 A:middle
from.

00:02:11.246 --> 00:02:15.266 A:middle
The fast path, and the accurate

00:02:15.336 --> 00:02:15.626 A:middle
path.

00:02:18.216 --> 00:02:21.446 A:middle
The fast path works just

00:02:21.446 --> 00:02:22.626 A:middle
actually on what Text Detector

00:02:22.626 --> 00:02:24.896 A:middle
did before by finding characters

00:02:25.626 --> 00:02:28.686 A:middle
and then advance a small machine

00:02:28.686 --> 00:02:30.336 A:middle
learning model to actually

00:02:30.336 --> 00:02:31.556 A:middle
recognize those characters,

00:02:31.896 --> 00:02:33.856 A:middle
character by character.

00:02:35.176 --> 00:02:36.796 A:middle
The accurate path, on the other

00:02:36.796 --> 00:02:38.716 A:middle
hand, uses a state-of-the-art

00:02:39.336 --> 00:02:41.976 A:middle
neural network to recognize text

00:02:42.466 --> 00:02:44.056 A:middle
by first finding it in terms of

00:02:44.056 --> 00:02:45.646 A:middle
strings and full lines.

00:02:46.656 --> 00:02:49.646 A:middle
And then recognizing it as words

00:02:49.866 --> 00:02:50.696 A:middle
and sentences.

00:02:52.586 --> 00:02:54.826 A:middle
So, it requires a deep learning

00:02:54.826 --> 00:02:56.966 A:middle
model which will take a little

00:02:56.966 --> 00:02:58.766 A:middle
bit more time to compute, but it

00:02:58.766 --> 00:03:00.536 A:middle
reads much more as we humans

00:02:58.766 --> 00:03:00.536 A:middle
reads much more as we humans

00:03:00.576 --> 00:03:01.716 A:middle
actually read our text.

00:03:02.936 --> 00:03:04.146 A:middle
We don't read character by

00:03:04.146 --> 00:03:04.626 A:middle
character.

00:03:04.626 --> 00:03:05.456 A:middle
We look at words.

00:03:05.456 --> 00:03:08.106 A:middle
And this helps us to get about,

00:03:08.106 --> 00:03:08.836 A:middle
you know, there are certain

00:03:08.836 --> 00:03:10.156 A:middle
characters that might be a bit

00:03:10.156 --> 00:03:12.506 A:middle
like, you know, hard to read.

00:03:12.506 --> 00:03:13.726 A:middle
And this is also the same reason

00:03:13.726 --> 00:03:15.076 A:middle
when we try to proofread our

00:03:15.076 --> 00:03:17.146 A:middle
text, that we don't see typos,

00:03:17.326 --> 00:03:18.876 A:middle
because our brain interpolates

00:03:18.876 --> 00:03:20.126 A:middle
over some of these mistakes.

00:03:20.506 --> 00:03:21.646 A:middle
And we use the same kind of

00:03:21.646 --> 00:03:23.426 A:middle
technique here in the accurate

00:03:23.426 --> 00:03:24.996 A:middle
path to help us get past some of

00:03:25.036 --> 00:03:26.466 A:middle
the recognition errors.

00:03:28.056 --> 00:03:30.716 A:middle
Both stages afterwards can

00:03:30.716 --> 00:03:32.126 A:middle
actually go through a language

00:03:32.126 --> 00:03:33.786 A:middle
correction phase which helps us

00:03:33.836 --> 00:03:35.116 A:middle
to again eliminate some of the

00:03:35.116 --> 00:03:36.246 A:middle
typical misreadings.

00:03:37.536 --> 00:03:39.426 A:middle
And out we get our results.

00:03:40.066 --> 00:03:42.716 A:middle
So, this is a complex machinery,

00:03:42.716 --> 00:03:43.446 A:middle
you might think.

00:03:44.226 --> 00:03:46.686 A:middle
But all of this happens on the

00:03:46.686 --> 00:03:47.066 A:middle
device.

00:03:48.516 --> 00:03:52.500 A:middle
[ Applause ]

00:03:55.096 --> 00:03:56.286 A:middle
So, let's look at what the

00:03:56.286 --> 00:03:57.376 A:middle
difference is between fast

00:03:57.376 --> 00:03:57.976 A:middle
versus accurate.

00:04:00.296 --> 00:04:01.526 A:middle
So, I did a little screen

00:04:01.526 --> 00:04:02.796 A:middle
recording of reading this

00:04:02.796 --> 00:04:03.406 A:middle
document.

00:04:04.286 --> 00:04:05.976 A:middle
And I did this on a relatively

00:04:05.976 --> 00:04:06.816 A:middle
old MacBook Pro.

00:04:06.816 --> 00:04:07.856 A:middle
So, the times that you see are

00:04:07.856 --> 00:04:09.286 A:middle
not necessarily representative,

00:04:09.386 --> 00:04:11.466 A:middle
but I wanted to give you a feel.

00:04:11.466 --> 00:04:13.276 A:middle
So let's look first at how fast

00:04:13.276 --> 00:04:13.876 A:middle
is fast.

00:04:15.696 --> 00:04:18.206 A:middle
And we're done.

00:04:18.416 --> 00:04:19.716 A:middle
Now, let's look at how long does

00:04:19.716 --> 00:04:20.426 A:middle
accurate takes.

00:04:21.245 --> 00:04:22.856 A:middle
And you see the progress?

00:04:22.856 --> 00:04:24.766 A:middle
It took a little bit longer.

00:04:25.346 --> 00:04:26.486 A:middle
And as I said, the numbers are

00:04:26.486 --> 00:04:27.416 A:middle
not representative for

00:04:27.416 --> 00:04:28.236 A:middle
everything, but it gives you a

00:04:28.306 --> 00:04:29.196 A:middle
feel of the delta.

00:04:30.466 --> 00:04:31.846 A:middle
The other part that you see is

00:04:32.726 --> 00:04:34.356 A:middle
that accurate is actually much

00:04:34.406 --> 00:04:35.336 A:middle
better in reading the whole

00:04:35.336 --> 00:04:35.766 A:middle
text.

00:04:35.936 --> 00:04:37.246 A:middle
The fast path has a little bit

00:04:37.246 --> 00:04:39.076 A:middle
of a problem with the stylized

00:04:39.076 --> 00:04:39.836 A:middle
font on the top.

00:04:40.956 --> 00:04:42.146 A:middle
So there are some tradeoffs

00:04:42.146 --> 00:04:45.736 A:middle
between these two paths.

00:04:45.736 --> 00:04:48.686 A:middle
Let's look at these tradeoffs.

00:04:48.756 --> 00:04:50.726 A:middle
The fast path is meant for

00:04:50.726 --> 00:04:52.366 A:middle
real-time reading and it's

00:04:52.366 --> 00:04:53.366 A:middle
optimized for that.

00:04:53.366 --> 00:04:55.106 A:middle
But the accurate path is more

00:04:55.166 --> 00:04:56.676 A:middle
likely to be used in an

00:04:56.676 --> 00:04:57.656 A:middle
asynchronous fashion.

00:04:58.236 --> 00:05:01.416 A:middle
In terms of memory budget, the

00:04:58.236 --> 00:05:01.416 A:middle
In terms of memory budget, the

00:05:01.776 --> 00:05:03.866 A:middle
fast path also uses less memory

00:05:03.866 --> 00:05:05.216 A:middle
because it doesn't need to run a

00:05:05.216 --> 00:05:05.976 A:middle
large neural network.

00:05:09.426 --> 00:05:11.236 A:middle
But when it comes to rotated

00:05:11.236 --> 00:05:13.696 A:middle
text or perspectively misaligned

00:05:13.696 --> 00:05:16.336 A:middle
text, the accurate path gives

00:05:16.336 --> 00:05:17.546 A:middle
you much broader support.

00:05:19.136 --> 00:05:21.256 A:middle
And when it comes to style or

00:05:21.336 --> 00:05:23.556 A:middle
fonts and as you saw already in

00:05:23.556 --> 00:05:25.426 A:middle
the example, when it comes to

00:05:25.426 --> 00:05:26.736 A:middle
stylized text, there's again

00:05:26.736 --> 00:05:28.026 A:middle
much broader support in the

00:05:28.026 --> 00:05:29.306 A:middle
accurate path.

00:05:30.576 --> 00:05:32.196 A:middle
And last but not least, when it

00:05:32.196 --> 00:05:34.306 A:middle
comes to the real reading of

00:05:34.306 --> 00:05:36.646 A:middle
natural language, the accurate

00:05:36.646 --> 00:05:37.816 A:middle
path is what we would recommend

00:05:37.816 --> 00:05:40.026 A:middle
because it performs best on that

00:05:41.716 --> 00:05:41.856 A:middle
part.

00:05:42.046 --> 00:05:43.376 A:middle
So, how do you choose between

00:05:43.376 --> 00:05:44.046 A:middle
those two?

00:05:45.266 --> 00:05:46.926 A:middle
The use cases that you have are

00:05:47.556 --> 00:05:48.766 A:middle
the important part that will

00:05:48.766 --> 00:05:50.256 A:middle
actually drive how you want to

00:05:50.256 --> 00:05:51.366 A:middle
use the request.

00:05:52.516 --> 00:05:53.936 A:middle
You need to think about a few

00:05:53.936 --> 00:05:54.226 A:middle
things.

00:05:54.866 --> 00:05:55.796 A:middle
So, what is my input?

00:05:56.216 --> 00:05:57.686 A:middle
Am I working off a camera or do

00:05:57.686 --> 00:06:00.096 A:middle
I already have images from my

00:05:57.686 --> 00:06:00.096 A:middle
I already have images from my

00:06:00.096 --> 00:06:01.506 A:middle
photo library that I want to

00:06:01.506 --> 00:06:01.806 A:middle
process?

00:06:03.726 --> 00:06:04.676 A:middle
What are my processing

00:06:04.676 --> 00:06:05.376 A:middle
constraints?

00:06:05.876 --> 00:06:07.456 A:middle
So, how much time can I spend on

00:06:07.456 --> 00:06:08.076 A:middle
the request?

00:06:08.266 --> 00:06:09.566 A:middle
And how much memory do I have

00:06:09.566 --> 00:06:10.086 A:middle
available?

00:06:10.586 --> 00:06:11.966 A:middle
Some of the processes might be a

00:06:11.966 --> 00:06:13.056 A:middle
bit more memory constrained.

00:06:13.336 --> 00:06:15.216 A:middle
And last but not least, what am

00:06:15.216 --> 00:06:16.366 A:middle
I going to do with the results?

00:06:16.876 --> 00:06:18.506 A:middle
Am I using them to transcribe?

00:06:18.796 --> 00:06:19.666 A:middle
Or for search?

00:06:20.006 --> 00:06:22.156 A:middle
Or just do a, perform an action

00:06:22.156 --> 00:06:23.256 A:middle
based on what I read through the camera.

00:06:23.256 --> 00:06:26.956 A:middle
So, let's talk about the camera

00:06:26.956 --> 00:06:28.406 A:middle
capture in a few more details.

00:06:29.916 --> 00:06:31.376 A:middle
The camera capture can be used

00:06:31.376 --> 00:06:32.206 A:middle
as a live capture.

00:06:32.236 --> 00:06:33.836 A:middle
So, you actually want to use now

00:06:33.836 --> 00:06:36.146 A:middle
the string reading live and keep

00:06:36.146 --> 00:06:37.076 A:middle
up with the frame rate.

00:06:37.366 --> 00:06:38.946 A:middle
In this case, the fast path is

00:06:38.946 --> 00:06:39.966 A:middle
most likely the one that you

00:06:39.966 --> 00:06:40.446 A:middle
want to use.

00:06:40.946 --> 00:06:43.796 A:middle
But there's also the way of

00:06:43.796 --> 00:06:44.916 A:middle
opportunistic capture.

00:06:45.256 --> 00:06:46.126 A:middle
What do I mean with that?

00:06:46.126 --> 00:06:47.036 A:middle
It's like for instance you take

00:06:47.036 --> 00:06:48.486 A:middle
a photo and there's text

00:06:48.486 --> 00:06:49.366 A:middle
somewhere in the photo and you

00:06:49.366 --> 00:06:50.316 A:middle
want to process that.

00:06:50.316 --> 00:06:51.596 A:middle
So, you don't need to keep up

00:06:51.596 --> 00:06:52.586 A:middle
with the frame rate of the

00:06:52.586 --> 00:06:54.286 A:middle
camera, but you actually want to

00:06:54.286 --> 00:06:55.626 A:middle
use this to read the text and

00:06:55.626 --> 00:06:56.936 A:middle
the accurate path will most

00:06:56.936 --> 00:06:58.236 A:middle
likely give you better results.

00:06:59.856 --> 00:07:01.346 A:middle
One more thing to think about

00:06:59.856 --> 00:07:01.346 A:middle
One more thing to think about

00:07:01.346 --> 00:07:03.876 A:middle
when we talk about camera is I

00:07:03.876 --> 00:07:06.246 A:middle
need to design which resolution

00:07:06.246 --> 00:07:07.326 A:middle
do I want to use in my

00:07:07.326 --> 00:07:09.516 A:middle
application, and the text size

00:07:09.576 --> 00:07:11.626 A:middle
will actually drive this.

00:07:11.626 --> 00:07:12.846 A:middle
If for some mysterious reason

00:07:12.846 --> 00:07:14.006 A:middle
you want to read the fine print

00:07:14.006 --> 00:07:15.756 A:middle
of a legal document where you

00:07:15.756 --> 00:07:17.046 A:middle
might actually have to increase

00:07:17.046 --> 00:07:18.336 A:middle
the resolution of the camera, or

00:07:18.636 --> 00:07:20.356 A:middle
when you read a billboard with

00:07:20.356 --> 00:07:22.016 A:middle
large text, you can actually

00:07:22.016 --> 00:07:23.006 A:middle
turn down the resolution and

00:07:23.006 --> 00:07:24.256 A:middle
work with less memory it

00:07:24.256 --> 00:07:25.906 A:middle
actually will be faster as well.

00:07:28.256 --> 00:07:29.596 A:middle
Now, when it comes to post

00:07:29.596 --> 00:07:30.986 A:middle
processing, so we already have

00:07:31.036 --> 00:07:32.836 A:middle
the image in a file.

00:07:34.196 --> 00:07:35.276 A:middle
Most likely you want to favor

00:07:35.276 --> 00:07:36.796 A:middle
the accurate path, because you

00:07:36.796 --> 00:07:38.856 A:middle
can actually use the better

00:07:38.856 --> 00:07:40.706 A:middle
accuracy and speed is not as

00:07:40.706 --> 00:07:40.976 A:middle
important.

00:07:44.396 --> 00:07:45.546 A:middle
Next, let's talk a little bit

00:07:45.546 --> 00:07:46.416 A:middle
about language processing.

00:07:46.686 --> 00:07:47.946 A:middle
As I mentioned, language

00:07:47.946 --> 00:07:49.166 A:middle
processing is one of the stages

00:07:49.166 --> 00:07:50.426 A:middle
that you can use in the text

00:07:50.426 --> 00:07:51.086 A:middle
recognition.

00:07:52.576 --> 00:07:54.106 A:middle
It helps us to get past some of

00:07:54.106 --> 00:07:56.026 A:middle
the typical missed readings that

00:07:56.026 --> 00:07:57.446 A:middle
can happen when you read the

00:07:57.446 --> 00:08:00.066 A:middle
text, but it can also get in the

00:07:57.446 --> 00:08:00.066 A:middle
text, but it can also get in the

00:08:00.066 --> 00:08:00.456 A:middle
way.

00:08:01.216 --> 00:08:02.956 A:middle
When I want to read codes or a

00:08:02.956 --> 00:08:04.276 A:middle
serial number, think of the

00:08:04.276 --> 00:08:07.356 A:middle
serial number like C001 that can

00:08:07.356 --> 00:08:08.786 A:middle
very easily be misconstructed as

00:08:08.886 --> 00:08:08.976 A:middle
cool.

00:08:12.126 --> 00:08:13.326 A:middle
Also, this language correction

00:08:13.326 --> 00:08:14.416 A:middle
does not come for free.

00:08:14.416 --> 00:08:15.636 A:middle
It does take some processing

00:08:15.636 --> 00:08:17.126 A:middle
time and of course it uses a

00:08:17.126 --> 00:08:17.826 A:middle
little bit of memory.

00:08:20.306 --> 00:08:21.226 A:middle
So now that we have some of the

00:08:21.226 --> 00:08:22.626 A:middle
fundamentals out of the way,

00:08:22.626 --> 00:08:25.126 A:middle
let's talk actually how we can

00:08:25.126 --> 00:08:27.186 A:middle
perform Text Recognition.

00:08:28.896 --> 00:08:32.086 A:middle
Everything in Vision starts with

00:08:32.086 --> 00:08:33.226 A:middle
an image RequestHandler.

00:08:34.586 --> 00:08:35.996 A:middle
Then I create my request.

00:08:36.066 --> 00:08:39.506 A:middle
I set my completionHandler on

00:08:39.506 --> 00:08:40.746 A:middle
it; that's where actually I deal

00:08:40.746 --> 00:08:41.586 A:middle
with the results.

00:08:41.586 --> 00:08:45.266 A:middle
Then I set the recognitionLevel.

00:08:45.526 --> 00:08:47.086 A:middle
As I said, I can switch between

00:08:47.086 --> 00:08:48.976 A:middle
the fast and accurate.

00:08:51.366 --> 00:08:53.516 A:middle
Next, I would recommend that you

00:08:53.516 --> 00:08:54.576 A:middle
actually set the revision.

00:08:55.136 --> 00:08:56.356 A:middle
The revision, of course here

00:08:56.356 --> 00:08:58.736 A:middle
there is only one, but down the

00:08:58.736 --> 00:08:59.876 A:middle
line we will come up with

00:08:59.876 --> 00:09:01.666 A:middle
improved versions and you might

00:08:59.876 --> 00:09:01.666 A:middle
improved versions and you might

00:09:01.736 --> 00:09:03.436 A:middle
have tuned your algorithm to a

00:09:03.436 --> 00:09:05.576 A:middle
specific behavior that we have.

00:09:05.716 --> 00:09:06.976 A:middle
And if you otherwise don't

00:09:06.976 --> 00:09:08.256 A:middle
specify a revision, you will

00:09:08.256 --> 00:09:10.076 A:middle
always get the latest and that

00:09:10.076 --> 00:09:10.976 A:middle
might appear with some

00:09:10.976 --> 00:09:11.726 A:middle
surprises.

00:09:12.796 --> 00:09:14.686 A:middle
So, I would recommend getting to

00:09:14.686 --> 00:09:15.706 A:middle
the behavior of using a

00:09:15.706 --> 00:09:16.096 A:middle
revision.

00:09:16.506 --> 00:09:18.836 A:middle
And I can turn on and off the

00:09:18.836 --> 00:09:22.436 A:middle
language correction and last but

00:09:22.436 --> 00:09:23.926 A:middle
not least, of course, I need to

00:09:23.926 --> 00:09:25.446 A:middle
perform my request.

00:09:27.556 --> 00:09:29.006 A:middle
When we perform it, and we get

00:09:29.006 --> 00:09:29.866 A:middle
our results back.

00:09:31.146 --> 00:09:31.856 A:middle
These come back as

00:09:31.856 --> 00:09:34.076 A:middle
VNRecognizedTextObservations,

00:09:34.316 --> 00:09:35.656 A:middle
and we get them pretty much in

00:09:35.656 --> 00:09:37.096 A:middle
terms of lines and strings that

00:09:37.096 --> 00:09:37.606 A:middle
we find.

00:09:38.616 --> 00:09:39.796 A:middle
So, we need to iterate all of

00:09:39.796 --> 00:09:40.576 A:middle
these results.

00:09:40.876 --> 00:09:44.426 A:middle
And when we want to get the text

00:09:44.426 --> 00:09:46.146 A:middle
out, we actually have multiple

00:09:46.146 --> 00:09:46.656 A:middle
candidates.

00:09:46.656 --> 00:09:47.646 A:middle
We'll talk about some of the

00:09:47.646 --> 00:09:48.746 A:middle
candidates later.

00:09:49.016 --> 00:09:50.466 A:middle
Here to make it simple, I just

00:09:50.466 --> 00:09:52.016 A:middle
get my top candidate and I have

00:09:52.016 --> 00:09:52.646 A:middle
my text.

00:09:52.996 --> 00:09:55.226 A:middle
And I can get to the bounding

00:09:55.226 --> 00:09:56.536 A:middle
box which actually helps me

00:09:56.536 --> 00:09:58.326 A:middle
where all this text is on screen

00:09:58.646 --> 00:10:01.246 A:middle
or in the image, the image

00:09:58.646 --> 00:10:01.246 A:middle
or in the image, the image

00:10:01.246 --> 00:10:01.756 A:middle
onscreen.

00:10:03.616 --> 00:10:04.956 A:middle
But now when I want to use

00:10:04.956 --> 00:10:06.446 A:middle
search, and so for instance the

00:10:06.446 --> 00:10:08.676 A:middle
user types in a word that you

00:10:08.976 --> 00:10:10.126 A:middle
read in the document, and we

00:10:10.126 --> 00:10:11.796 A:middle
want to find actually where is

00:10:11.796 --> 00:10:13.706 A:middle
this again in the image, I can

00:10:13.706 --> 00:10:15.936 A:middle
actually ask the candidate for

00:10:16.116 --> 00:10:17.486 A:middle
where is the bounding box for

00:10:17.486 --> 00:10:19.156 A:middle
this string that I actually see

00:10:19.456 --> 00:10:20.796 A:middle
in my results.

00:10:24.066 --> 00:10:25.446 A:middle
Now, after all this theory,

00:10:25.446 --> 00:10:26.836 A:middle
let's go into some example, and

00:10:26.836 --> 00:10:28.046 A:middle
we want to do some real-time

00:10:28.046 --> 00:10:28.836 A:middle
Text Recognition.

00:10:29.446 --> 00:10:31.596 A:middle
So, that's when we want to use

00:10:31.596 --> 00:10:32.856 A:middle
the fast path.

00:10:33.636 --> 00:10:36.096 A:middle
The use case here is I want to

00:10:36.096 --> 00:10:37.046 A:middle
read something like a serial

00:10:37.046 --> 00:10:38.206 A:middle
number or a code.

00:10:39.096 --> 00:10:40.416 A:middle
The serial number that I'm using

00:10:40.416 --> 00:10:41.526 A:middle
here actually is a phone number

00:10:41.526 --> 00:10:42.466 A:middle
because it's the easiest for

00:10:42.466 --> 00:10:43.846 A:middle
everybody, easiest to understand

00:10:43.846 --> 00:10:44.086 A:middle
here.

00:10:44.086 --> 00:10:45.516 A:middle
And I want to read them really

00:10:45.516 --> 00:10:46.716 A:middle
just like a barcode reader.

00:10:47.126 --> 00:10:49.836 A:middle
With that, I can constrain

00:10:49.836 --> 00:10:50.986 A:middle
actually how the camera should

00:10:50.986 --> 00:10:53.756 A:middle
actually look for the text, but

00:10:53.756 --> 00:10:56.026 A:middle
interactivity is key because it

00:10:56.026 --> 00:10:56.886 A:middle
should be snappy.

00:10:56.886 --> 00:10:57.846 A:middle
It should be fast, so that the

00:10:57.846 --> 00:10:59.516 A:middle
user can be guided, and it reads

00:10:59.516 --> 00:10:59.956 A:middle
the text right away.

00:11:02.576 --> 00:11:04.756 A:middle
So, that's why I'm choosing the

00:11:04.756 --> 00:11:05.376 A:middle
fast path here.

00:11:05.376 --> 00:11:07.706 A:middle
And with that, let's look at the

00:11:07.706 --> 00:11:07.936 A:middle
demo.

00:11:16.596 --> 00:11:16.946 A:middle
All right.

00:11:17.566 --> 00:11:20.136 A:middle
The sample code that I have here

00:11:20.136 --> 00:11:21.306 A:middle
and which as I said is also

00:11:21.306 --> 00:11:24.156 A:middle
attached to this session, allows

00:11:24.156 --> 00:11:25.436 A:middle
me to read phone numbers.

00:11:25.536 --> 00:11:27.126 A:middle
So, when I'm scanning over this

00:11:27.126 --> 00:11:28.476 A:middle
text here, you see a little

00:11:28.476 --> 00:11:28.926 A:middle
white box.

00:11:28.926 --> 00:11:30.856 A:middle
That means I find text, but I'm

00:11:30.856 --> 00:11:32.456 A:middle
not reading it because it's not

00:11:32.456 --> 00:11:33.026 A:middle
a phone number.

00:11:33.026 --> 00:11:34.576 A:middle
Even the zip code here.

00:11:36.156 --> 00:11:37.336 A:middle
But the moment I find a phone

00:11:37.336 --> 00:11:38.816 A:middle
number, it reads it and stops

00:11:38.866 --> 00:11:39.346 A:middle
the scanning.

00:11:39.346 --> 00:11:41.556 A:middle
Let me show that once more.

00:11:42.516 --> 00:11:45.556 A:middle
[ Applause ]

00:11:46.056 --> 00:11:47.466 A:middle
You see it feels interactive.

00:11:47.466 --> 00:11:48.926 A:middle
It's easy for me as a user to

00:11:48.926 --> 00:11:50.176 A:middle
use this, even though my hands

00:11:50.176 --> 00:11:52.516 A:middle
are shaking here.

00:11:53.756 --> 00:11:55.376 A:middle
So, how does this look in code,

00:11:55.376 --> 00:11:56.596 A:middle
because that's what's really

00:11:56.596 --> 00:11:57.496 A:middle
interesting part here.

00:11:59.316 --> 00:12:01.246 A:middle
So, I start by creating my text

00:11:59.316 --> 00:12:01.246 A:middle
So, I start by creating my text

00:12:01.246 --> 00:12:01.796 A:middle
request.

00:12:04.176 --> 00:12:06.076 A:middle
And as I said, I'm going to use

00:12:06.076 --> 00:12:08.396 A:middle
the fast path here.

00:12:08.396 --> 00:12:09.296 A:middle
I disabled the language

00:12:09.326 --> 00:12:10.566 A:middle
correction because I know I'm

00:12:10.566 --> 00:12:11.346 A:middle
looking for codes.

00:12:11.346 --> 00:12:12.366 A:middle
I'm not looking for natural

00:12:12.366 --> 00:12:12.806 A:middle
text.

00:12:12.956 --> 00:12:15.576 A:middle
And then I'm using the

00:12:15.576 --> 00:12:16.466 A:middle
regionOfInterest.

00:12:16.466 --> 00:12:17.376 A:middle
Now, this is a concept

00:12:17.376 --> 00:12:18.236 A:middle
envisioned and generally

00:12:18.236 --> 00:12:18.706 A:middle
available.

00:12:19.176 --> 00:12:21.206 A:middle
You'll notice that in my app I

00:12:21.206 --> 00:12:22.476 A:middle
have this little box that kind

00:12:22.476 --> 00:12:23.866 A:middle
of guides the user of like where

00:12:23.866 --> 00:12:25.206 A:middle
he wants to frame the text, but

00:12:25.206 --> 00:12:27.386 A:middle
I also use this area as my

00:12:27.386 --> 00:12:29.546 A:middle
region of interest which crops

00:12:29.546 --> 00:12:31.126 A:middle
Vision to only work on that

00:12:31.126 --> 00:12:32.256 A:middle
specific subject.

00:12:32.356 --> 00:12:34.966 A:middle
That helps me to A, get rid of

00:12:34.966 --> 00:12:36.276 A:middle
all the noise that's surrounding

00:12:36.276 --> 00:12:38.826 A:middle
it and because it's less data

00:12:38.826 --> 00:12:39.916 A:middle
that I have to process, it

00:12:39.916 --> 00:12:41.196 A:middle
enhances the performance.

00:12:41.786 --> 00:12:44.756 A:middle
So, now I have my request and

00:12:44.756 --> 00:12:46.356 A:middle
I'm using an AVCapture session

00:12:46.356 --> 00:12:46.556 A:middle
here.

00:12:47.576 --> 00:12:48.926 A:middle
So, my capture output, all I

00:12:48.926 --> 00:12:51.186 A:middle
have to do is that I get my

00:12:51.186 --> 00:12:53.316 A:middle
image from the session, create a

00:12:53.316 --> 00:12:56.586 A:middle
RequestHandler, and perform the

00:12:56.586 --> 00:12:57.166 A:middle
request.

00:12:57.166 --> 00:12:59.656 A:middle
And then this is mostly the

00:12:59.656 --> 00:13:00.616 A:middle
drawing of the boxes.

00:12:59.656 --> 00:13:00.616 A:middle
drawing of the boxes.

00:13:00.616 --> 00:13:01.876 A:middle
That's not the interesting part.

00:13:03.026 --> 00:13:04.676 A:middle
The interesting part happens in

00:13:04.676 --> 00:13:05.556 A:middle
our string utils.

00:13:05.666 --> 00:13:09.116 A:middle
As I said, we turned the

00:13:09.116 --> 00:13:10.536 A:middle
language correction off.

00:13:11.256 --> 00:13:12.516 A:middle
So, I'm now left on my own to

00:13:12.516 --> 00:13:13.686 A:middle
kind of correct some of those

00:13:13.686 --> 00:13:15.556 A:middle
results, but I can do this

00:13:15.556 --> 00:13:16.766 A:middle
because I actually have

00:13:16.806 --> 00:13:18.246 A:middle
intrinsic knowledge of what I

00:13:18.246 --> 00:13:19.206 A:middle
need to solve here.

00:13:19.206 --> 00:13:22.216 A:middle
And I know I'm looking for phone

00:13:22.216 --> 00:13:24.426 A:middle
numbers, and this means I know

00:13:24.426 --> 00:13:25.256 A:middle
I'm not looking for any

00:13:25.256 --> 00:13:25.826 A:middle
characters.

00:13:25.826 --> 00:13:27.116 A:middle
I'm only looking for numeric

00:13:27.886 --> 00:13:28.266 A:middle
paths.

00:13:28.266 --> 00:13:29.826 A:middle
So, I can simply say if it reads

00:13:29.826 --> 00:13:31.936 A:middle
something like an S, which would

00:13:31.936 --> 00:13:33.926 A:middle
be a 5, or if I get an L, this

00:13:33.926 --> 00:13:35.576 A:middle
should be a 1, I'm using my

00:13:35.576 --> 00:13:36.876 A:middle
domain knowledge of kind of

00:13:36.876 --> 00:13:37.886 A:middle
correcting for some of the

00:13:37.886 --> 00:13:38.796 A:middle
typical mistakes that can

00:13:38.796 --> 00:13:38.956 A:middle
happen.

00:13:41.176 --> 00:13:42.846 A:middle
So, that's helped us to not

00:13:42.846 --> 00:13:44.556 A:middle
probably get any characters

00:13:44.606 --> 00:13:46.206 A:middle
through, but then comes the next

00:13:46.206 --> 00:13:46.436 A:middle
part.

00:13:47.506 --> 00:13:49.366 A:middle
How did I difference it between

00:13:49.366 --> 00:13:50.546 A:middle
zip code and a phone number?

00:13:50.646 --> 00:13:51.886 A:middle
Well, I knew the structure.

00:13:52.546 --> 00:13:53.646 A:middle
The structure of an American

00:13:53.646 --> 00:13:55.586 A:middle
phone number is very simple, and

00:13:55.626 --> 00:13:57.236 A:middle
I'm using that knowledge again

00:13:57.386 --> 00:13:58.636 A:middle
to filter out results that I

00:13:58.636 --> 00:13:58.976 A:middle
don't want.

00:14:00.896 --> 00:14:03.816 A:middle
Last but not least, let me find

00:14:03.816 --> 00:14:05.786 A:middle
this as well, is our string

00:14:05.786 --> 00:14:06.036 A:middle
tracker.

00:14:06.036 --> 00:14:07.516 A:middle
And now I'm using a little trick

00:14:07.626 --> 00:14:08.076 A:middle
here.

00:14:08.646 --> 00:14:09.936 A:middle
If you ever dealt with reading

00:14:09.936 --> 00:14:11.206 A:middle
something live from a camera

00:14:11.206 --> 00:14:12.656 A:middle
feed, you will realize that very

00:14:12.656 --> 00:14:14.406 A:middle
often from frame to frame you

00:14:14.406 --> 00:14:15.276 A:middle
get different results.

00:14:15.406 --> 00:14:16.816 A:middle
They slightly fluctuate because

00:14:16.816 --> 00:14:19.086 A:middle
of noise, lighting and so on.

00:14:20.036 --> 00:14:21.696 A:middle
But it would be bad if I flicker

00:14:21.696 --> 00:14:23.306 A:middle
out the wrong phone numbers.

00:14:23.776 --> 00:14:25.736 A:middle
So, what I try to avoid is to

00:14:25.736 --> 00:14:27.186 A:middle
show incorrect results.

00:14:27.856 --> 00:14:29.166 A:middle
What I'm using here is a

00:14:29.166 --> 00:14:31.056 A:middle
technique where I actually look

00:14:31.056 --> 00:14:32.596 A:middle
over multiple frames and build

00:14:32.596 --> 00:14:33.716 A:middle
evidence over time.

00:14:34.356 --> 00:14:35.526 A:middle
This building of evidence over

00:14:35.526 --> 00:14:37.136 A:middle
time means I simply store the

00:14:37.136 --> 00:14:39.656 A:middle
phone numbers and at the very

00:14:39.656 --> 00:14:41.006 A:middle
end, all that I'm doing is very

00:14:41.006 --> 00:14:41.406 A:middle
simple.

00:14:42.106 --> 00:14:43.906 A:middle
If the same number showed up in

00:14:43.906 --> 00:14:45.906 A:middle
10 consecutive frames, I know

00:14:45.906 --> 00:14:47.246 A:middle
I've read it and actually

00:14:47.286 --> 00:14:48.496 A:middle
propagated up to the user.

00:14:49.116 --> 00:14:50.746 A:middle
Now, 10 was an empiric number

00:14:50.746 --> 00:14:52.646 A:middle
that we picked, but it worked

00:14:52.646 --> 00:14:53.416 A:middle
really well for us.

00:14:53.576 --> 00:14:56.776 A:middle
And with that, I basically

00:14:56.776 --> 00:14:58.666 A:middle
filter out all the noise that I

00:14:58.666 --> 00:15:00.226 A:middle
would otherwise have.

00:14:58.666 --> 00:15:00.226 A:middle
would otherwise have.

00:15:01.016 --> 00:15:02.636 A:middle
And that is all that we needed

00:15:02.636 --> 00:15:04.446 A:middle
to do to get our demo to run.

00:15:04.446 --> 00:15:05.916 A:middle
Let's go back to the slides.

00:15:10.336 --> 00:15:11.556 A:middle
So, let's quickly recap.

00:15:11.556 --> 00:15:14.936 A:middle
I use the fast path to keep up

00:15:15.566 --> 00:15:16.876 A:middle
with the frame rate of the

00:15:16.876 --> 00:15:17.216 A:middle
camera.

00:15:17.216 --> 00:15:20.376 A:middle
I was able to guide the user how

00:15:20.376 --> 00:15:21.296 A:middle
to use the camera.

00:15:22.216 --> 00:15:23.776 A:middle
I use the region of interest to

00:15:23.776 --> 00:15:25.326 A:middle
crop down to really what I only

00:15:25.326 --> 00:15:26.756 A:middle
want to read to get rid of the

00:15:26.756 --> 00:15:29.136 A:middle
noise surrounding it and enhance

00:15:29.136 --> 00:15:29.986 A:middle
the performance.

00:15:30.736 --> 00:15:31.586 A:middle
I turned off the language

00:15:31.646 --> 00:15:32.776 A:middle
correction because I knew I'm

00:15:32.776 --> 00:15:33.916 A:middle
reading actually code.

00:15:33.916 --> 00:15:36.486 A:middle
And I use my own domain

00:15:36.486 --> 00:15:37.566 A:middle
knowledge, and this is like the

00:15:37.566 --> 00:15:38.636 A:middle
same thing as you as app

00:15:38.636 --> 00:15:40.336 A:middle
developers would do of this

00:15:40.336 --> 00:15:41.696 A:middle
phone numbers to actually read

00:15:41.696 --> 00:15:42.396 A:middle
them correctly.

00:15:42.396 --> 00:15:45.136 A:middle
And last but not least, I use

00:15:45.136 --> 00:15:46.626 A:middle
this building of evidence over

00:15:46.626 --> 00:15:48.656 A:middle
time to actually help to reduce

00:15:48.656 --> 00:15:48.976 A:middle
some of the noise.

00:15:52.386 --> 00:15:53.916 A:middle
Next, I would like to introduce

00:15:54.056 --> 00:15:55.746 A:middle
the Document Camera.

00:15:57.476 --> 00:15:59.956 A:middle
The Document Camera was already

00:15:59.956 --> 00:16:01.316 A:middle
introduced two years ago by

00:15:59.956 --> 00:16:01.316 A:middle
introduced two years ago by

00:16:01.316 --> 00:16:01.786 A:middle
Notes.

00:16:02.066 --> 00:16:02.986 A:middle
And it's a really great

00:16:02.986 --> 00:16:04.686 A:middle
companion when you don't need to

00:16:04.686 --> 00:16:07.006 A:middle
use a live stream to capture.

00:16:07.696 --> 00:16:08.956 A:middle
This year, you've seen it in

00:16:08.956 --> 00:16:11.356 A:middle
Notes, Mail, Files, and

00:16:11.356 --> 00:16:11.916 A:middle
Messages.

00:16:12.296 --> 00:16:14.986 A:middle
And it already is perfect for

00:16:14.986 --> 00:16:15.836 A:middle
reading a document.

00:16:16.066 --> 00:16:17.776 A:middle
Because as you can see here, it

00:16:17.776 --> 00:16:19.826 A:middle
finds the document, crops it

00:16:19.826 --> 00:16:21.626 A:middle
out, and now I could just simply

00:16:21.626 --> 00:16:23.266 A:middle
pipe it into my text recognition

00:16:24.116 --> 00:16:24.346 A:middle
request.

00:16:25.096 --> 00:16:26.516 A:middle
This is a great companion

00:16:26.516 --> 00:16:28.716 A:middle
because what it does is already

00:16:28.716 --> 00:16:30.166 A:middle
just a prospective correction of

00:16:30.166 --> 00:16:32.226 A:middle
these scans for you and it

00:16:32.226 --> 00:16:34.136 A:middle
evenly lights also the image.

00:16:34.876 --> 00:16:36.116 A:middle
That makes it much easier to

00:16:36.116 --> 00:16:37.736 A:middle
process afterwards.

00:16:39.036 --> 00:16:42.356 A:middle
So, how does this look in code?

00:16:42.556 --> 00:16:43.746 A:middle
First, I need to bring in

00:16:43.746 --> 00:16:44.796 A:middle
VisionKit as this is a new

00:16:44.796 --> 00:16:46.506 A:middle
framework and then I create the

00:16:46.506 --> 00:16:48.386 A:middle
VNDocumentCameraView Controller.

00:16:49.366 --> 00:16:51.546 A:middle
I present it on the screen and

00:16:51.546 --> 00:16:52.536 A:middle
my camera is running.

00:16:54.046 --> 00:16:56.006 A:middle
So, once the user is done, in my

00:16:56.006 --> 00:16:58.976 A:middle
delegate I get the results back.

00:16:58.976 --> 00:16:59.926 A:middle
Now, there's one thing to keep

00:16:59.926 --> 00:17:00.436 A:middle
in mind.

00:16:59.926 --> 00:17:00.436 A:middle
in mind.

00:17:01.196 --> 00:17:04.185 A:middle
We can actually scan multiple

00:17:04.185 --> 00:17:05.546 A:middle
documents at once, so they come

00:17:05.546 --> 00:17:06.396 A:middle
back as pages.

00:17:08.036 --> 00:17:09.715 A:middle
From each of them, I simply take

00:17:09.715 --> 00:17:12.256 A:middle
my CG image and pipe them into

00:17:12.256 --> 00:17:14.465 A:middle
my Vision Request, and I get my

00:17:14.465 --> 00:17:15.266 A:middle
results out of it.

00:17:15.695 --> 00:17:18.185 A:middle
And now to get to some of the

00:17:18.185 --> 00:17:19.556 A:middle
best practices, I would like to

00:17:19.556 --> 00:17:20.906 A:middle
introduce my colleague Cedric

00:17:20.906 --> 00:17:22.215 A:middle
Bray onstage, who will give you

00:17:22.215 --> 00:17:23.276 A:middle
some more information about

00:17:23.346 --> 00:17:23.476 A:middle
that.

00:17:23.606 --> 00:17:23.906 A:middle
Thank you.

00:17:24.516 --> 00:17:27.406 A:middle
[ Applause ]

00:17:27.906 --> 00:17:29.466 A:middle
&gt;&gt; Thank you, Frank.

00:17:30.166 --> 00:17:32.766 A:middle
I am super excited that we have

00:17:32.856 --> 00:17:34.426 A:middle
Text Recognition coming into the

00:17:34.426 --> 00:17:35.636 A:middle
Vision Framework this year.

00:17:35.636 --> 00:17:38.016 A:middle
And to help you take best

00:17:38.016 --> 00:17:39.656 A:middle
advantage of this new API, we're

00:17:39.656 --> 00:17:41.946 A:middle
going to talk about best

00:17:41.946 --> 00:17:42.526 A:middle
practices.

00:17:44.696 --> 00:17:47.346 A:middle
So, in this section, you will

00:17:47.346 --> 00:17:49.426 A:middle
learn about language knowledge,

00:17:49.506 --> 00:17:50.466 A:middle
how to leverage language

00:17:50.466 --> 00:17:51.966 A:middle
knowledge for getting the best

00:17:51.966 --> 00:17:52.416 A:middle
results.

00:17:53.016 --> 00:17:54.476 A:middle
You will learn how to tune for

00:17:54.476 --> 00:17:56.466 A:middle
better performance in your

00:17:56.466 --> 00:17:57.126 A:middle
application.

00:17:57.596 --> 00:17:59.626 A:middle
And you will learn a bit more

00:17:59.626 --> 00:18:00.946 A:middle
about how to process your

00:17:59.626 --> 00:18:00.946 A:middle
about how to process your

00:18:00.946 --> 00:18:02.106 A:middle
results in the most effective

00:18:02.106 --> 00:18:02.276 A:middle
way.

00:18:03.366 --> 00:18:07.746 A:middle
So, the image that you are

00:18:07.746 --> 00:18:10.146 A:middle
processing maybe are in a

00:18:10.146 --> 00:18:11.486 A:middle
language that you have

00:18:11.486 --> 00:18:12.196 A:middle
identified.

00:18:12.856 --> 00:18:14.046 A:middle
And if there are, in this

00:18:14.046 --> 00:18:15.486 A:middle
particular language, then you

00:18:15.486 --> 00:18:16.646 A:middle
want to take advantage of this

00:18:16.646 --> 00:18:17.326 A:middle
information.

00:18:17.916 --> 00:18:20.456 A:middle
To do so, you enable

00:18:20.456 --> 00:18:21.716 A:middle
language-based collection.

00:18:22.516 --> 00:18:23.786 A:middle
First you have to set the

00:18:23.786 --> 00:18:25.116 A:middle
language that you are targeting.

00:18:25.466 --> 00:18:26.866 A:middle
For this we will support

00:18:26.866 --> 00:18:27.436 A:middle
English.

00:18:28.116 --> 00:18:28.996 A:middle
And once language-based

00:18:28.996 --> 00:18:31.146 A:middle
correction is enabled, it will

00:18:31.146 --> 00:18:33.026 A:middle
improve the transcription of the

00:18:33.026 --> 00:18:35.416 A:middle
results by using on-device

00:18:35.416 --> 00:18:36.406 A:middle
language models.

00:18:36.856 --> 00:18:38.396 A:middle
On-device language models are

00:18:38.396 --> 00:18:38.656 A:middle
great.

00:18:38.656 --> 00:18:40.196 A:middle
They have large generic

00:18:40.396 --> 00:18:41.066 A:middle
coverage.

00:18:42.046 --> 00:18:44.416 A:middle
But you may have domain-specific

00:18:44.556 --> 00:18:45.786 A:middle
words, domain-specific

00:18:45.786 --> 00:18:49.456 A:middle
vocabulary like medical terms or

00:18:49.986 --> 00:18:52.026 A:middle
business-specific codes or

00:18:52.026 --> 00:18:53.556 A:middle
references that appear in the

00:18:53.556 --> 00:18:54.176 A:middle
documents.

00:18:54.626 --> 00:18:58.526 A:middle
And so we can, you can specify

00:18:58.526 --> 00:19:00.306 A:middle
this information, this

00:18:58.526 --> 00:19:00.306 A:middle
this information, this

00:19:00.376 --> 00:19:03.336 A:middle
vocabulary, by passing a custom

00:19:03.736 --> 00:19:06.736 A:middle
lexicon to the Text Recognition

00:19:06.736 --> 00:19:07.206 A:middle
request.

00:19:08.486 --> 00:19:10.696 A:middle
When you do so, this custom

00:19:10.696 --> 00:19:13.166 A:middle
vocabulary will complement the

00:19:13.166 --> 00:19:14.226 A:middle
language-based correction to

00:19:14.766 --> 00:19:15.766 A:middle
give you the correct

00:19:16.006 --> 00:19:18.566 A:middle
transcription, even in cases

00:19:18.566 --> 00:19:19.756 A:middle
where the images are more

00:19:19.806 --> 00:19:20.286 A:middle
challenging.

00:19:21.596 --> 00:19:23.726 A:middle
So, let's see how this looks in

00:19:23.726 --> 00:19:23.966 A:middle
code.

00:19:25.446 --> 00:19:28.016 A:middle
First, a prerequisite, you need

00:19:28.016 --> 00:19:29.766 A:middle
to check the languages that are

00:19:29.876 --> 00:19:31.176 A:middle
supported by language-based

00:19:31.176 --> 00:19:31.586 A:middle
correction.

00:19:32.796 --> 00:19:35.186 A:middle
And so this list of supported

00:19:35.186 --> 00:19:38.546 A:middle
languages is defined for a

00:19:38.546 --> 00:19:40.956 A:middle
combination of recognition level

00:19:40.956 --> 00:19:44.596 A:middle
and for the API version that you

00:19:44.596 --> 00:19:45.116 A:middle
are targeting.

00:19:46.786 --> 00:19:47.926 A:middle
Enabling language-based

00:19:47.926 --> 00:19:49.756 A:middle
correction is simple.

00:19:50.016 --> 00:19:51.626 A:middle
Just set the corresponding

00:19:51.626 --> 00:19:53.226 A:middle
property to true on the Text

00:19:53.226 --> 00:19:54.436 A:middle
Recognition request.

00:19:55.126 --> 00:19:56.376 A:middle
Initialize custom words.

00:19:56.806 --> 00:19:58.696 A:middle
You can specify this list of

00:19:58.696 --> 00:20:01.636 A:middle
words as an array of strings

00:19:58.696 --> 00:20:01.636 A:middle
words as an array of strings

00:20:02.316 --> 00:20:03.746 A:middle
that you pass to the custom

00:20:03.746 --> 00:20:05.236 A:middle
words property on the text

00:20:05.236 --> 00:20:06.726 A:middle
recognition request.

00:20:08.696 --> 00:20:12.996 A:middle
So, this is great for optimizing

00:20:12.996 --> 00:20:15.336 A:middle
for accuracy, transcription

00:20:15.336 --> 00:20:15.826 A:middle
accuracy.

00:20:15.826 --> 00:20:17.496 A:middle
But what about performance?

00:20:17.906 --> 00:20:20.206 A:middle
And there's a very common case

00:20:20.206 --> 00:20:22.286 A:middle
where you're probably not

00:20:22.286 --> 00:20:23.656 A:middle
interested in smaller

00:20:23.656 --> 00:20:24.586 A:middle
text that is in the

00:20:24.586 --> 00:20:25.396 A:middle
image.

00:20:26.136 --> 00:20:28.876 A:middle
So for that case, we recommend

00:20:28.876 --> 00:20:29.926 A:middle
that you adjust the

00:20:29.926 --> 00:20:30.976 A:middle
minimumTextHeight.

00:20:31.466 --> 00:20:34.496 A:middle
And the way it works is that

00:20:34.496 --> 00:20:35.226 A:middle
when you set up these

00:20:35.226 --> 00:20:37.216 A:middle
minimumTextHeight, all text that

00:20:37.216 --> 00:20:39.096 A:middle
is smaller than the height that

00:20:39.096 --> 00:20:40.836 A:middle
you specify will be ignored.

00:20:40.946 --> 00:20:42.156 A:middle
It won't be processed.

00:20:42.496 --> 00:20:44.436 A:middle
It won't be part of the results.

00:20:44.986 --> 00:20:46.736 A:middle
And the input image will be

00:20:46.736 --> 00:20:50.686 A:middle
downsized, and the execution

00:20:50.686 --> 00:20:51.906 A:middle
time will be smaller.

00:20:51.906 --> 00:20:53.496 A:middle
Recognition will go faster.

00:20:53.496 --> 00:20:55.736 A:middle
And the memory usage will go

00:20:55.736 --> 00:20:55.976 A:middle
down.

00:20:57.456 --> 00:20:59.156 A:middle
One important note about this

00:20:59.706 --> 00:21:03.216 A:middle
property is that it is expressed

00:20:59.706 --> 00:21:03.216 A:middle
property is that it is expressed

00:21:03.556 --> 00:21:05.756 A:middle
as a fraction of the image

00:21:06.126 --> 00:21:06.926 A:middle
height.

00:21:07.436 --> 00:21:08.736 A:middle
As you can see in this example.

00:21:08.736 --> 00:21:12.576 A:middle
If I said 0.5, it means that the

00:21:12.616 --> 00:21:15.086 A:middle
text that is bigger or same size

00:21:15.086 --> 00:21:16.886 A:middle
as half of the height of the

00:21:16.966 --> 00:21:18.886 A:middle
image will be returned.

00:21:19.626 --> 00:21:22.486 A:middle
So, this is a case when you want

00:21:22.486 --> 00:21:24.006 A:middle
to make text recognition faster.

00:21:26.256 --> 00:21:28.256 A:middle
But what if text recognition is

00:21:28.256 --> 00:21:30.086 A:middle
not the highest priority task in

00:21:30.086 --> 00:21:30.756 A:middle
your application?

00:21:31.706 --> 00:21:33.056 A:middle
Maybe you have other higher

00:21:33.056 --> 00:21:36.066 A:middle
priority tasks to run, like an

00:21:36.066 --> 00:21:38.276 A:middle
ARKit view running in foreground

00:21:38.986 --> 00:21:39.886 A:middle
might be the case for you in

00:21:39.886 --> 00:21:40.156 A:middle
your app.

00:21:41.066 --> 00:21:43.676 A:middle
Or Cam AR Frames that you are

00:21:44.056 --> 00:21:48.166 A:middle
running and processing in real

00:21:49.356 --> 00:21:49.466 A:middle
time.

00:21:49.676 --> 00:21:51.706 A:middle
So, in the case of background

00:21:51.736 --> 00:21:56.396 A:middle
task, we allow you to run text

00:21:56.396 --> 00:21:59.026 A:middle
recognition on the CPU only, so

00:21:59.026 --> 00:22:01.656 A:middle
you can leave GPU resources and

00:21:59.026 --> 00:22:01.656 A:middle
you can leave GPU resources and

00:22:01.656 --> 00:22:03.726 A:middle
optionally the neural engine, to

00:22:03.726 --> 00:22:05.586 A:middle
higher priority tasks for your

00:22:05.626 --> 00:22:06.196 A:middle
application.

00:22:08.186 --> 00:22:09.476 A:middle
You do that using the

00:22:09.476 --> 00:22:10.996 A:middle
usesCPUOnly property.

00:22:10.996 --> 00:22:12.246 A:middle
It's a property that is

00:22:12.246 --> 00:22:14.866 A:middle
available for other VN requests,

00:22:14.866 --> 00:22:16.916 A:middle
for all other VN requests and

00:22:17.186 --> 00:22:18.486 A:middle
Text Recognition support that as

00:22:18.486 --> 00:22:18.646 A:middle
well.

00:22:19.996 --> 00:22:21.086 A:middle
So, that's the case when you

00:22:21.086 --> 00:22:22.256 A:middle
will have Text Recognition

00:22:22.256 --> 00:22:25.256 A:middle
running slower on purpose.

00:22:25.406 --> 00:22:28.166 A:middle
But there are also cases where

00:22:28.166 --> 00:22:29.796 A:middle
the image is just very big and

00:22:29.796 --> 00:22:32.206 A:middle
there's a lot of text and Text

00:22:32.206 --> 00:22:34.346 A:middle
Recognition will be, will take

00:22:34.346 --> 00:22:36.756 A:middle
longer and your user might be

00:22:36.756 --> 00:22:39.966 A:middle
confused unless you provide

00:22:40.166 --> 00:22:41.046 A:middle
progress management.

00:22:41.716 --> 00:22:44.076 A:middle
And we highly recommend that you

00:22:45.416 --> 00:22:47.226 A:middle
focus on progress management in

00:22:47.226 --> 00:22:47.946 A:middle
your application.

00:22:48.826 --> 00:22:50.846 A:middle
This is a new concept in Vision

00:22:51.576 --> 00:22:54.056 A:middle
for this year and Text

00:22:54.056 --> 00:22:55.266 A:middle
Recognition fully implement

00:22:55.266 --> 00:22:55.436 A:middle
that.

00:22:56.056 --> 00:22:57.186 A:middle
It comes in two ways.

00:22:58.086 --> 00:23:00.456 A:middle
First, you can set a

00:22:58.086 --> 00:23:00.456 A:middle
First, you can set a

00:23:00.526 --> 00:23:02.466 A:middle
progressHandler on your request.

00:23:03.886 --> 00:23:06.326 A:middle
And when you do so, you get the

00:23:06.376 --> 00:23:08.356 A:middle
progress ratio as in true

00:23:08.356 --> 00:23:10.366 A:middle
parameter in the progress

00:23:10.426 --> 00:23:10.776 A:middle
handler.

00:23:12.336 --> 00:23:14.226 A:middle
And you can also support

00:23:14.436 --> 00:23:15.616 A:middle
cancellation in your app.

00:23:16.506 --> 00:23:17.836 A:middle
For example, if you want to

00:23:17.836 --> 00:23:19.746 A:middle
provide a button to the user so

00:23:19.746 --> 00:23:21.746 A:middle
they can cancel a Text

00:23:21.746 --> 00:23:22.816 A:middle
Recognition that's running in

00:23:22.816 --> 00:23:23.316 A:middle
front of them.

00:23:24.226 --> 00:23:26.586 A:middle
So, that's a bunch of concepts

00:23:26.586 --> 00:23:29.016 A:middle
and to illustrate them, I would

00:23:29.016 --> 00:23:32.776 A:middle
like to show you a demo of a

00:23:32.776 --> 00:23:34.166 A:middle
sample app that we're making

00:23:34.166 --> 00:23:35.626 A:middle
available with this session as

00:23:35.626 --> 00:23:35.896 A:middle
well.

00:23:36.716 --> 00:23:38.456 A:middle
It's called My First Image

00:23:38.456 --> 00:23:38.866 A:middle
Reader.

00:23:39.566 --> 00:23:42.676 A:middle
So, let me give you a tour of

00:23:42.676 --> 00:23:42.956 A:middle
this app.

00:23:51.826 --> 00:23:53.836 A:middle
So, as you will see with this

00:23:53.836 --> 00:23:56.086 A:middle
sample code, My First Image

00:23:56.086 --> 00:23:58.386 A:middle
Reader as the main window.

00:23:59.206 --> 00:24:01.396 A:middle
As you can see here.

00:23:59.206 --> 00:24:01.396 A:middle
As you can see here.

00:24:01.786 --> 00:24:02.866 A:middle
And a transcript panel.

00:24:03.616 --> 00:24:04.836 A:middle
The main window will show the

00:24:04.926 --> 00:24:06.906 A:middle
image and the geometry of the

00:24:06.906 --> 00:24:07.346 A:middle
results.

00:24:08.016 --> 00:24:10.766 A:middle
The transcript window will show

00:24:10.906 --> 00:24:12.166 A:middle
the text.

00:24:13.036 --> 00:24:16.036 A:middle
If I take a closer look at the

00:24:17.406 --> 00:24:18.756 A:middle
top of this window, at the

00:24:18.826 --> 00:24:20.686 A:middle
toolbar, you'll see that you can

00:24:20.686 --> 00:24:22.616 A:middle
choose between accurate and

00:24:22.666 --> 00:24:23.046 A:middle
fast.

00:24:23.526 --> 00:24:24.836 A:middle
So, that's in fact a very nice,

00:24:24.886 --> 00:24:26.276 A:middle
simple app for you to experiment

00:24:26.346 --> 00:24:26.996 A:middle
with this mode.

00:24:27.476 --> 00:24:29.066 A:middle
But also with other setting that

00:24:29.066 --> 00:24:31.186 A:middle
we have just talked about.

00:24:32.086 --> 00:24:33.766 A:middle
Performance setting, minimum

00:24:33.766 --> 00:24:35.076 A:middle
text height, I'll get back to

00:24:35.076 --> 00:24:38.786 A:middle
that later, and in this view,

00:24:38.786 --> 00:24:40.696 A:middle
you also have access to the

00:24:40.746 --> 00:24:43.576 A:middle
language settings, setting,

00:24:43.796 --> 00:24:45.436 A:middle
enabling the language model,

00:24:45.436 --> 00:24:45.776 A:middle
sorry.

00:24:46.316 --> 00:24:48.106 A:middle
And the custom words.

00:24:48.796 --> 00:24:51.526 A:middle
Let me show you quickly with a

00:24:52.566 --> 00:24:54.406 A:middle
crafted example how this looks

00:24:55.146 --> 00:24:55.246 A:middle
like.

00:24:56.516 --> 00:24:59.646 A:middle
If I take one image that I

00:24:59.646 --> 00:25:02.606 A:middle
created and say that's a book

00:24:59.646 --> 00:25:02.606 A:middle
created and say that's a book

00:25:02.636 --> 00:25:04.776 A:middle
cover and happens to have very

00:25:04.826 --> 00:25:07.786 A:middle
small text and happens to be my

00:25:07.786 --> 00:25:07.876 A:middle
name.

00:25:09.466 --> 00:25:12.196 A:middle
You see that you get very small

00:25:12.236 --> 00:25:15.576 A:middle
text, my name here, located and

00:25:15.576 --> 00:25:16.166 A:middle
recognized.

00:25:16.166 --> 00:25:17.926 A:middle
And same obviously for the very

00:25:17.926 --> 00:25:18.716 A:middle
large text.

00:25:19.826 --> 00:25:21.046 A:middle
Now let's say I have a bunch of

00:25:21.046 --> 00:25:23.396 A:middle
those and I just want to index

00:25:23.706 --> 00:25:25.886 A:middle
the titles of these images.

00:25:26.386 --> 00:25:27.326 A:middle
I wouldn't care so much about

00:25:27.326 --> 00:25:28.396 A:middle
the small print, in particular

00:25:28.396 --> 00:25:29.006 A:middle
my name on it.

00:25:29.266 --> 00:25:31.346 A:middle
So, I will adjust the minimum

00:25:31.346 --> 00:25:33.486 A:middle
text height to make the

00:25:33.486 --> 00:25:34.896 A:middle
recognition run faster.

00:25:35.556 --> 00:25:39.756 A:middle
You can just set it to 0.1, so

00:25:40.436 --> 00:25:44.756 A:middle
the text has to be at least 90

00:25:44.756 --> 00:25:46.276 A:middle
percent of the image height.

00:25:47.046 --> 00:25:47.886 A:middle
And that's the case for the

00:25:47.886 --> 00:25:50.256 A:middle
large text, Desert Dunes, here.

00:25:50.946 --> 00:25:54.346 A:middle
So, setting these back to 0, let

00:25:55.626 --> 00:25:57.396 A:middle
me show you the language

00:25:57.456 --> 00:25:58.956 A:middle
settings, in particular the

00:25:59.006 --> 00:26:00.786 A:middle
impact of custom words.

00:25:59.006 --> 00:26:00.786 A:middle
impact of custom words.

00:26:03.736 --> 00:26:06.736 A:middle
If I drag this flyer here, it's

00:26:06.736 --> 00:26:08.616 A:middle
for a project called Hill Side.

00:26:08.756 --> 00:26:10.496 A:middle
It also has a probable number,

00:26:11.066 --> 00:26:12.546 A:middle
which is a reference number.

00:26:12.796 --> 00:26:16.406 A:middle
It happens to be HI11.

00:26:17.116 --> 00:26:18.566 A:middle
So, there's possible confusion

00:26:18.626 --> 00:26:18.816 A:middle
here.

00:26:18.956 --> 00:26:20.216 A:middle
So, let me show you the

00:26:20.216 --> 00:26:21.196 A:middle
transcription results.

00:26:23.066 --> 00:26:25.926 A:middle
You see that the code is in fact

00:26:26.046 --> 00:26:27.226 A:middle
misrecognized here.

00:26:28.606 --> 00:26:29.526 A:middle
So we're changing.

00:26:30.456 --> 00:26:38.106 A:middle
So if I specify HI11 as custom

00:26:38.106 --> 00:26:39.366 A:middle
word, because it's part of my

00:26:39.366 --> 00:26:42.526 A:middle
known references, then the

00:26:42.526 --> 00:26:43.936 A:middle
custom, the list of custom words

00:26:43.936 --> 00:26:45.166 A:middle
and this one in particular we

00:26:45.166 --> 00:26:46.466 A:middle
complemented by this correction

00:26:46.596 --> 00:26:48.126 A:middle
and give us the correct

00:26:48.276 --> 00:26:49.686 A:middle
transcription for that

00:26:49.686 --> 00:26:50.186 A:middle
reference.

00:26:51.606 --> 00:26:52.296 A:middle
Back to the slide.

00:26:53.016 --> 00:26:54.096 A:middle
[ Applause ]

00:26:54.096 --> 00:26:54.946 A:middle
Thank you.

00:26:55.516 --> 00:26:58.500 A:middle
[ Applause ]

00:27:01.686 --> 00:27:02.886 A:middle
So, quick recap.

00:27:05.356 --> 00:27:06.696 A:middle
You need to choose the

00:27:06.696 --> 00:27:08.996 A:middle
recognition level that is the

00:27:08.996 --> 00:27:10.536 A:middle
best fit for your use case for

00:27:10.536 --> 00:27:11.066 A:middle
your application.

00:27:11.296 --> 00:27:13.516 A:middle
Fast, accurate, it needs to be

00:27:13.516 --> 00:27:14.006 A:middle
the right one.

00:27:14.976 --> 00:27:17.276 A:middle
For the language settings, we

00:27:17.276 --> 00:27:19.616 A:middle
recommend that you check based

00:27:19.616 --> 00:27:21.376 A:middle
on the type of documents that

00:27:21.376 --> 00:27:21.686 A:middle
you have.

00:27:21.746 --> 00:27:22.806 A:middle
If there's an obvious language,

00:27:22.956 --> 00:27:24.376 A:middle
a neighbor languages correction,

00:27:24.376 --> 00:27:25.106 A:middle
and if you have a

00:27:25.106 --> 00:27:26.956 A:middle
domain-specific vocabulary,

00:27:27.546 --> 00:27:29.766 A:middle
enable custom words, specify

00:27:29.766 --> 00:27:30.526 A:middle
your custom words.

00:27:31.616 --> 00:27:33.836 A:middle
And also, very importantly, you

00:27:33.836 --> 00:27:36.156 A:middle
need to support progress update

00:27:36.156 --> 00:27:38.476 A:middle
in your app for the best user

00:27:38.476 --> 00:27:39.726 A:middle
experience.

00:27:41.086 --> 00:27:44.086 A:middle
Now, even if you follow this

00:27:44.086 --> 00:27:46.926 A:middle
recommendation, there's still

00:27:46.926 --> 00:27:49.446 A:middle
one very important aspect to be

00:27:49.446 --> 00:27:49.906 A:middle
aware of.

00:27:51.546 --> 00:27:54.876 A:middle
You need to process your results

00:27:56.136 --> 00:27:57.516 A:middle
and you need to provide a

00:27:57.516 --> 00:28:00.326 A:middle
recipe, have your own recipe for

00:27:57.516 --> 00:28:00.326 A:middle
recipe, have your own recipe for

00:28:00.356 --> 00:28:01.596 A:middle
presenting your results to your

00:28:01.596 --> 00:28:02.236 A:middle
users.

00:28:03.186 --> 00:28:04.846 A:middle
And the recipe you want to have

00:28:05.956 --> 00:28:07.776 A:middle
is probably not alphabet soup.

00:28:09.126 --> 00:28:11.346 A:middle
What I mean by that is that you

00:28:11.346 --> 00:28:13.366 A:middle
need to process your results in

00:28:13.366 --> 00:28:16.946 A:middle
the most effective way for the

00:28:16.946 --> 00:28:18.376 A:middle
best user experience.

00:28:19.376 --> 00:28:24.506 A:middle
So, let's check how to do that.

00:28:25.706 --> 00:28:27.296 A:middle
One very important statement

00:28:27.676 --> 00:28:28.306 A:middle
first.

00:28:29.236 --> 00:28:32.266 A:middle
You should expect ambiguity in

00:28:32.266 --> 00:28:32.686 A:middle
the input.

00:28:34.086 --> 00:28:35.126 A:middle
This is computer vision.

00:28:35.596 --> 00:28:36.856 A:middle
This is an open-ended problem.

00:28:37.526 --> 00:28:38.896 A:middle
And our terms of excellent

00:28:38.896 --> 00:28:40.886 A:middle
parameter that will influence

00:28:41.146 --> 00:28:43.236 A:middle
the content of the images that

00:28:43.236 --> 00:28:43.956 A:middle
you are processing.

00:28:43.986 --> 00:28:47.036 A:middle
In fact, the case of house

00:28:47.036 --> 00:28:48.306 A:middle
number is quite interesting

00:28:48.406 --> 00:28:48.576 A:middle
here.

00:28:49.606 --> 00:28:51.396 A:middle
Because some of them are very

00:28:51.396 --> 00:28:52.106 A:middle
stylized.

00:28:53.016 --> 00:28:54.036 A:middle
And when you run the generate

00:28:54.076 --> 00:28:55.786 A:middle
Text Recognizer on those, it has

00:28:55.846 --> 00:28:57.186 A:middle
no clue that they should be

00:28:57.186 --> 00:28:57.936 A:middle
numbers, right?

00:28:57.936 --> 00:29:02.156 A:middle
And instead of getting 101, you

00:28:57.936 --> 00:29:02.156 A:middle
And instead of getting 101, you

00:29:02.856 --> 00:29:05.576 A:middle
get lol or you might get the

00:29:05.816 --> 00:29:06.586 A:middle
ASCII art for the happy

00:29:06.586 --> 00:29:09.646 A:middle
guy raising hand, meaning this

00:29:09.776 --> 00:29:09.986 A:middle
case.

00:29:10.946 --> 00:29:14.566 A:middle
So, in that case, have you heard

00:29:14.566 --> 00:29:16.576 A:middle
it before but we're insisting on

00:29:16.806 --> 00:29:19.946 A:middle
that you need to leverage the

00:29:19.946 --> 00:29:21.826 A:middle
candidate list, the list of top

00:29:21.856 --> 00:29:23.306 A:middle
candidates that you have for,

00:29:23.936 --> 00:29:25.996 A:middle
from the observations.

00:29:26.616 --> 00:29:28.766 A:middle
So, take this candidate list and

00:29:28.766 --> 00:29:29.766 A:middle
if it makes in for your

00:29:29.766 --> 00:29:31.176 A:middle
application, take a look at this

00:29:31.346 --> 00:29:32.806 A:middle
top one, top two, top three

00:29:32.806 --> 00:29:33.806 A:middle
results or more.

00:29:33.806 --> 00:29:36.006 A:middle
There's a typical example where

00:29:36.006 --> 00:29:38.106 A:middle
you want to index the content of

00:29:38.106 --> 00:29:40.416 A:middle
the images and so if you want to

00:29:40.416 --> 00:29:42.216 A:middle
increase the recall, you can

00:29:42.216 --> 00:29:44.716 A:middle
index more candidates for each

00:29:44.716 --> 00:29:45.396 A:middle
of the results.

00:29:45.686 --> 00:29:47.326 A:middle
Of course, at the cost of

00:29:47.666 --> 00:29:48.076 A:middle
precision.

00:29:48.886 --> 00:29:52.856 A:middle
Right? So, this candidate list,

00:29:52.856 --> 00:29:54.826 A:middle
we need to dive into that, but

00:29:54.826 --> 00:29:56.286 A:middle
that's just one dimension.

00:29:56.286 --> 00:29:58.706 A:middle
That's the scale of prediction

00:29:59.516 --> 00:30:00.306 A:middle
confidence.

00:29:59.516 --> 00:30:00.306 A:middle
confidence.

00:30:00.656 --> 00:30:02.156 A:middle
What about other dimensions?

00:30:02.636 --> 00:30:05.056 A:middle
What about image space?

00:30:06.046 --> 00:30:08.916 A:middle
We recommend that you evaluate

00:30:09.876 --> 00:30:12.136 A:middle
and in fact reconsider using the

00:30:12.136 --> 00:30:14.546 A:middle
geometry to map your results.

00:30:15.586 --> 00:30:17.636 A:middle
You have the salvation bonding

00:30:17.636 --> 00:30:18.126 A:middle
box.

00:30:18.576 --> 00:30:20.176 A:middle
It gives you spatial information

00:30:20.726 --> 00:30:22.056 A:middle
and you can map these results

00:30:22.056 --> 00:30:24.246 A:middle
together using the position, the

00:30:24.246 --> 00:30:26.506 A:middle
scale of the results, but also

00:30:26.506 --> 00:30:27.116 A:middle
the rotation.

00:30:27.346 --> 00:30:29.366 A:middle
And the example that we are

00:30:29.366 --> 00:30:32.006 A:middle
showing here, in case, in the

00:30:32.006 --> 00:30:34.346 A:middle
case of the receipts, you can

00:30:34.346 --> 00:30:38.326 A:middle
probably map the item name to

00:30:39.156 --> 00:30:40.746 A:middle
the price.

00:30:42.896 --> 00:30:45.146 A:middle
So, that's for the geometry.

00:30:45.816 --> 00:30:47.356 A:middle
But for each result in

00:30:47.356 --> 00:30:49.256 A:middle
isolation, you also have the

00:30:49.306 --> 00:30:52.096 A:middle
opportunity to use parsers and

00:30:52.096 --> 00:30:53.286 A:middle
try to make sense of each of

00:30:53.286 --> 00:30:54.476 A:middle
these results in isolation.

00:30:54.476 --> 00:30:58.096 A:middle
And in this case, Data Detector

00:30:58.096 --> 00:31:00.596 A:middle
is your best friend.

00:30:58.096 --> 00:31:00.596 A:middle
is your best friend.

00:31:00.596 --> 00:31:02.536 A:middle
It's initiate NSDataDetector for

00:31:02.536 --> 00:31:03.756 A:middle
the types that you're interested

00:31:03.756 --> 00:31:03.896 A:middle
in.

00:31:04.266 --> 00:31:05.296 A:middle
As you probably know, it

00:31:05.296 --> 00:31:08.236 A:middle
supports addresses, URLs, dates,

00:31:08.336 --> 00:31:09.106 A:middle
phone numbers.

00:31:10.516 --> 00:31:11.746 A:middle
In the example of my business

00:31:11.746 --> 00:31:14.186 A:middle
card, I can use that to make

00:31:14.186 --> 00:31:15.916 A:middle
sense of some of the results.

00:31:16.526 --> 00:31:19.806 A:middle
But if that's not sufficient,

00:31:20.186 --> 00:31:22.136 A:middle
then you can obviously use your

00:31:22.866 --> 00:31:24.446 A:middle
own domain-specific features,

00:31:24.446 --> 00:31:26.316 A:middle
have your own vocabulary that

00:31:26.316 --> 00:31:27.726 A:middle
you match the strings against,

00:31:28.146 --> 00:31:29.306 A:middle
or use your own regular

00:31:29.306 --> 00:31:29.776 A:middle
expression.

00:31:32.856 --> 00:31:34.216 A:middle
So, to illustrate these

00:31:34.276 --> 00:31:36.106 A:middle
principles, we have another

00:31:36.106 --> 00:31:37.866 A:middle
sample app, an iOS app this

00:31:37.906 --> 00:31:39.946 A:middle
time, called Business Companion.

00:31:43.256 --> 00:31:45.776 A:middle
In fact, if you're sitting in

00:31:45.776 --> 00:31:47.396 A:middle
this room because you have the

00:31:47.396 --> 00:31:49.966 A:middle
idea receipt scanner.

00:31:50.506 --> 00:31:51.446 A:middle
Receipt scanner, anyone?

00:31:51.956 --> 00:31:56.136 A:middle
Maybe? Or a business card

00:31:56.136 --> 00:31:56.436 A:middle
reader?

00:31:57.226 --> 00:31:58.146 A:middle
People interested in business

00:31:58.146 --> 00:31:58.306 A:middle
card?

00:31:59.736 --> 00:32:03.356 A:middle
Then this app is something you

00:31:59.736 --> 00:32:03.356 A:middle
Then this app is something you

00:32:03.546 --> 00:32:05.476 A:middle
really take a look at, because

00:32:06.006 --> 00:32:09.036 A:middle
it mixes the two flows into the

00:32:09.136 --> 00:32:09.896 A:middle
same app flow.

00:32:09.896 --> 00:32:13.036 A:middle
Let me show you how.

00:32:14.916 --> 00:32:18.006 A:middle
First, it has document category

00:32:18.006 --> 00:32:18.346 A:middle
picker.

00:32:18.346 --> 00:32:19.866 A:middle
It gives you some - You see soon how it works,

00:32:20.126 --> 00:32:22.036 A:middle
It is just the first screen.

00:32:22.036 --> 00:32:23.106 A:middle
That way you pick the document

00:32:23.106 --> 00:32:24.166 A:middle
type you're interested in.

00:32:24.906 --> 00:32:26.116 A:middle
And from there, you go to the

00:32:26.116 --> 00:32:27.606 A:middle
Document Camera that you heard

00:32:27.606 --> 00:32:28.646 A:middle
about before.

00:32:28.646 --> 00:32:31.166 A:middle
And from the Document Camera, we

00:32:31.266 --> 00:32:34.026 A:middle
run text recognition and from

00:32:34.026 --> 00:32:35.326 A:middle
the recognized result, we

00:32:35.966 --> 00:32:37.366 A:middle
perform some analysis to make

00:32:37.366 --> 00:32:38.496 A:middle
sense of these results, and

00:32:38.496 --> 00:32:39.696 A:middle
that's what really matters here.

00:32:40.366 --> 00:32:42.476 A:middle
Because based on this analysis,

00:32:42.896 --> 00:32:44.106 A:middle
we'll be able to get some data

00:32:44.106 --> 00:32:46.246 A:middle
model for receipt business card.

00:32:46.246 --> 00:32:47.626 A:middle
In this case, we have a fall

00:32:47.626 --> 00:32:49.406 A:middle
back on the type of documents.

00:32:50.326 --> 00:32:52.146 A:middle
And from this results analysis,

00:32:52.146 --> 00:32:54.076 A:middle
given that you make sense of the

00:32:54.076 --> 00:32:57.536 A:middle
data, you can also visualize the

00:32:57.536 --> 00:32:59.346 A:middle
result more appropriately in the

00:32:59.346 --> 00:33:00.626 A:middle
case of the receipt which shows

00:32:59.346 --> 00:33:00.626 A:middle
case of the receipt which shows

00:33:00.626 --> 00:33:01.746 A:middle
to display in a table view.

00:33:02.216 --> 00:33:03.976 A:middle
And if we have a business card,

00:33:04.076 --> 00:33:07.256 A:middle
we show mini contact card.

00:33:07.456 --> 00:33:09.956 A:middle
So, let me show you this app.

00:33:18.436 --> 00:33:20.466 A:middle
Switching to the iOS device

00:33:20.466 --> 00:33:20.936 A:middle
here.

00:33:22.236 --> 00:33:24.336 A:middle
So, this is Business Companion,

00:33:24.836 --> 00:33:26.746 A:middle
and as I was telling you, we

00:33:26.746 --> 00:33:29.136 A:middle
have here a choice between

00:33:29.136 --> 00:33:30.756 A:middle
receipt, card, and other type of

00:33:30.756 --> 00:33:31.216 A:middle
document.

00:33:31.546 --> 00:33:33.386 A:middle
Let's just start with receipts.

00:33:33.696 --> 00:33:37.556 A:middle
And first the Document Camera.

00:33:37.556 --> 00:33:39.306 A:middle
We have some challenging light

00:33:39.306 --> 00:33:39.736 A:middle
in here.

00:33:45.536 --> 00:33:48.166 A:middle
As the document gets captured

00:33:48.166 --> 00:33:53.966 A:middle
and processed, yes, our results

00:33:54.026 --> 00:33:56.026 A:middle
structured.

00:33:56.086 --> 00:33:57.226 A:middle
You see the item name.

00:33:57.696 --> 00:33:59.416 A:middle
You see the category names and

00:33:59.946 --> 00:34:01.826 A:middle
the value for each section.

00:33:59.946 --> 00:34:01.826 A:middle
the value for each section.

00:34:02.656 --> 00:34:07.466 A:middle
Now, if I look at a business

00:34:07.996 --> 00:34:08.126 A:middle
card.

00:34:14.456 --> 00:34:18.686 A:middle
Similarly I get each field of

00:34:18.856 --> 00:34:20.206 A:middle
the business card analyzed

00:34:20.206 --> 00:34:21.235 A:middle
[applause], and this is my mini

00:34:21.235 --> 00:34:21.596 A:middle
business card.

00:34:21.596 --> 00:34:22.775 A:middle
Thank you.

00:34:26.255 --> 00:34:27.516 A:middle
Like I said, this is nice but

00:34:27.516 --> 00:34:29.346 A:middle
look at this front screen.

00:34:29.346 --> 00:34:30.966 A:middle
You still have to choose

00:34:30.966 --> 00:34:33.036 A:middle
manually the document type.

00:34:33.906 --> 00:34:34.766 A:middle
It's not really seamless.

00:34:34.766 --> 00:34:37.065 A:middle
You can make that more seamless,

00:34:37.286 --> 00:34:37.596 A:middle
right?

00:34:37.775 --> 00:34:39.686 A:middle
Actually, we've done that.

00:34:39.686 --> 00:34:42.096 A:middle
And I'm going to show you a

00:34:42.096 --> 00:34:43.996 A:middle
better version of this app.

00:34:43.996 --> 00:34:45.565 A:middle
It's called Better Business

00:34:45.606 --> 00:34:46.036 A:middle
Companion.

00:34:46.156 --> 00:34:50.775 A:middle
And what we've done, in fact, is

00:34:50.775 --> 00:34:53.525 A:middle
that we've trained a classifier

00:34:53.525 --> 00:34:56.446 A:middle
model using Create ML and we're

00:34:56.446 --> 00:34:58.846 A:middle
using this classifier as a first

00:34:58.846 --> 00:35:00.186 A:middle
step so that you don't have to

00:34:58.846 --> 00:35:00.186 A:middle
step so that you don't have to

00:35:00.186 --> 00:35:01.366 A:middle
specify the document type.

00:35:01.956 --> 00:35:03.026 A:middle
It will be selected

00:35:03.026 --> 00:35:04.076 A:middle
automatically.

00:35:04.076 --> 00:35:04.466 A:middle
Enough talking.

00:35:04.466 --> 00:35:04.976 A:middle
Let me show you.

00:35:07.566 --> 00:35:09.716 A:middle
So, very obviously, first

00:35:09.716 --> 00:35:11.506 A:middle
button, big button, very small

00:35:11.506 --> 00:35:11.826 A:middle
button.

00:35:14.516 --> 00:35:16.136 A:middle
You only have the scan button

00:35:16.196 --> 00:35:18.096 A:middle
here and you can see that

00:35:18.096 --> 00:35:21.856 A:middle
similarly I get my receipt here.

00:35:26.856 --> 00:35:29.666 A:middle
Get processed as a receipt

00:35:31.296 --> 00:35:32.256 A:middle
[applause] without having the

00:35:32.306 --> 00:35:36.886 A:middle
user specify the document type.

00:35:38.086 --> 00:35:39.466 A:middle
Just to show you how it works

00:35:39.466 --> 00:35:40.536 A:middle
with business cards, with my

00:35:40.536 --> 00:35:42.846 A:middle
business card again.

00:35:47.506 --> 00:35:50.126 A:middle
And yes, we get the business

00:35:50.126 --> 00:35:50.976 A:middle
card correctly processed.

00:35:51.516 --> 00:35:54.616 A:middle
[ Applause ]

00:35:55.116 --> 00:35:56.656 A:middle
So, I told you we integrated the

00:35:56.656 --> 00:35:58.376 A:middle
Core ML model for this but I

00:35:58.506 --> 00:35:59.456 A:middle
would like to show you how.

00:36:06.156 --> 00:36:09.836 A:middle
So, let's go into Xcode here and

00:36:10.296 --> 00:36:12.716 A:middle
this is the code, in fact this

00:36:12.776 --> 00:36:14.566 A:middle
is the code we modified from

00:36:14.776 --> 00:36:18.586 A:middle
Business Companion.

00:36:18.586 --> 00:36:21.826 A:middle
And we added the insertion of a

00:36:21.826 --> 00:36:24.026 A:middle
Core ML model that is actually

00:36:24.986 --> 00:36:25.396 A:middle
here.

00:36:29.376 --> 00:36:32.246 A:middle
So, we inserted this Core ML

00:36:32.246 --> 00:36:34.826 A:middle
model to set out the request

00:36:35.276 --> 00:36:36.776 A:middle
with a completionHandler.

00:36:36.776 --> 00:36:40.666 A:middle
And as part of the handler, you

00:36:40.666 --> 00:36:42.146 A:middle
see that we processed the top

00:36:42.146 --> 00:36:46.196 A:middle
observation and date of the

00:36:46.196 --> 00:36:47.846 A:middle
identifier, sorry, of this top

00:36:47.846 --> 00:36:48.436 A:middle
observation.

00:36:48.436 --> 00:36:52.266 A:middle
We set up the scan mode for the

00:36:52.266 --> 00:36:53.966 A:middle
application that will determine

00:36:53.966 --> 00:36:55.436 A:middle
the flow for the rest of the

00:36:55.926 --> 00:36:56.906 A:middle
app.

00:36:56.906 --> 00:36:58.916 A:middle
So, we encourage you to think

00:36:58.916 --> 00:37:00.396 A:middle
about how you can improve your

00:36:58.916 --> 00:37:00.396 A:middle
about how you can improve your

00:37:00.396 --> 00:37:02.286 A:middle
application flow using Text

00:37:02.286 --> 00:37:03.916 A:middle
Recognition but, and processing

00:37:03.916 --> 00:37:05.056 A:middle
the results appropriately but

00:37:05.056 --> 00:37:09.426 A:middle
also leveraging ML models, like

00:37:11.876 --> 00:37:12.016 A:middle
this.

00:37:12.206 --> 00:37:12.506 A:middle
All right.

00:37:12.506 --> 00:37:14.696 A:middle
Back to the slides.

00:37:15.206 --> 00:37:18.306 A:middle
Just for a quick recap.

00:37:19.796 --> 00:37:22.396 A:middle
As I mentioned, we encourage you

00:37:22.396 --> 00:37:24.296 A:middle
to use geometry information when

00:37:24.296 --> 00:37:25.026 A:middle
it makes sense.

00:37:25.866 --> 00:37:27.796 A:middle
Parse your results, make sense

00:37:27.796 --> 00:37:29.576 A:middle
of them by using Data Detectors

00:37:29.576 --> 00:37:30.646 A:middle
or your own parsers.

00:37:31.456 --> 00:37:33.416 A:middle
And most importantly, you know

00:37:33.416 --> 00:37:34.266 A:middle
what you're building.

00:37:34.456 --> 00:37:35.736 A:middle
You know what type of data that

00:37:35.736 --> 00:37:36.966 A:middle
you have to look at.

00:37:36.966 --> 00:37:39.326 A:middle
And so we recommend that you

00:37:39.326 --> 00:37:40.926 A:middle
leverage your domain knowledge

00:37:40.926 --> 00:37:42.706 A:middle
for the best user experience.

00:37:45.676 --> 00:37:48.096 A:middle
So, we hope that gave you good

00:37:48.096 --> 00:37:49.376 A:middle
reference point for starting

00:37:49.376 --> 00:37:50.656 A:middle
integrating Text Recognition

00:37:50.656 --> 00:37:51.656 A:middle
into your app.

00:37:51.656 --> 00:37:53.336 A:middle
I can't wait to see all the

00:37:53.696 --> 00:37:54.826 A:middle
fantastic app that you're going

00:37:54.826 --> 00:37:56.686 A:middle
to create using this technology.

00:37:56.896 --> 00:37:59.716 A:middle
If you have question, you can

00:37:59.716 --> 00:38:01.056 A:middle
visit the machine learning lab.

00:37:59.716 --> 00:38:01.056 A:middle
visit the machine learning lab.

00:38:01.056 --> 00:38:02.326 A:middle
There's one more tomorrow.

00:38:02.326 --> 00:38:03.976 A:middle
Thank you very much.

00:38:04.508 --> 00:38:06.508 A:middle
[ Applause ]
