WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:06.516 --> 00:00:10.866 A:middle
[ Applause ]

00:00:11.366 --> 00:00:11.796 A:middle
&gt;&gt; Good morning.

00:00:12.516 --> 00:00:14.656 A:middle
[ Applause ]

00:00:15.156 --> 00:00:16.056 A:middle
My name is Josh.

00:00:16.175 --> 00:00:17.576 A:middle
And I'm part of the Technology

00:00:17.576 --> 00:00:19.136 A:middle
Evangelism team at Apple.

00:00:20.436 --> 00:00:22.246 A:middle
Our team has the incredible

00:00:22.246 --> 00:00:23.396 A:middle
honor of working with

00:00:23.396 --> 00:00:25.856 A:middle
developers, like you, from all

00:00:25.856 --> 00:00:26.476 A:middle
around the world.

00:00:27.596 --> 00:00:29.566 A:middle
And our goal is to help you

00:00:29.686 --> 00:00:31.856 A:middle
create truly great apps.

00:00:32.735 --> 00:00:34.396 A:middle
And in these conversations with

00:00:34.396 --> 00:00:36.116 A:middle
you, we learn so much.

00:00:36.996 --> 00:00:38.166 A:middle
We gain an understanding of the

00:00:38.166 --> 00:00:39.876 A:middle
processes you take; the

00:00:39.876 --> 00:00:40.966 A:middle
challenges, goals, and

00:00:40.966 --> 00:00:42.566 A:middle
aspirations that you have.

00:00:43.516 --> 00:00:44.736 A:middle
We learn about the tricks and

00:00:44.736 --> 00:00:46.716 A:middle
tools that help you out, and

00:00:46.716 --> 00:00:47.726 A:middle
then those that hinder.

00:00:49.006 --> 00:00:50.546 A:middle
And although every story that we

00:00:50.546 --> 00:00:52.286 A:middle
hear is a little different,

00:00:53.376 --> 00:00:54.566 A:middle
there's an incredible number of

00:00:54.566 --> 00:00:56.466 A:middle
common threads no matter which

00:00:56.466 --> 00:00:57.586 A:middle
part of the world the story

00:00:57.586 --> 00:00:58.116 A:middle
comes from.

00:00:59.536 --> 00:01:01.366 A:middle
Now, when you think about craft

00:00:59.536 --> 00:01:01.366 A:middle
Now, when you think about craft

00:01:01.946 --> 00:01:03.106 A:middle
you probably first think about

00:01:03.156 --> 00:01:03.766 A:middle
design.

00:01:04.495 --> 00:01:06.446 A:middle
But as developers and engineers,

00:01:06.686 --> 00:01:07.566 A:middle
we craft, too.

00:01:08.616 --> 00:01:10.606 A:middle
After all, craft is defined as

00:01:10.606 --> 00:01:12.916 A:middle
skill in planning, making, and

00:01:12.916 --> 00:01:13.556 A:middle
executing.

00:01:14.126 --> 00:01:15.466 A:middle
It's to create or produce

00:01:15.516 --> 00:01:18.326 A:middle
something with care, skill, or

00:01:18.326 --> 00:01:18.986 A:middle
ingenuity.

00:01:20.916 --> 00:01:22.366 A:middle
Codes written by hand.

00:01:23.476 --> 00:01:25.206 A:middle
It involves incredible skill.

00:01:25.596 --> 00:01:27.236 A:middle
And there's an ingenuity to the

00:01:27.236 --> 00:01:28.326 A:middle
technique that we take.

00:01:28.556 --> 00:01:30.036 A:middle
The choices that we make when

00:01:30.036 --> 00:01:30.716 A:middle
building an app.

00:01:31.606 --> 00:01:33.226 A:middle
And I want to talk to you today

00:01:33.466 --> 00:01:35.916 A:middle
about that craft and care, to

00:01:35.916 --> 00:01:38.046 A:middle
bring care into your code, into

00:01:38.046 --> 00:01:40.416 A:middle
your storyboards and into your

00:01:40.416 --> 00:01:40.906 A:middle
products.

00:01:41.596 --> 00:01:43.186 A:middle
This might seem easy at first.

00:01:43.346 --> 00:01:44.566 A:middle
But with all of the demands on

00:01:44.566 --> 00:01:46.276 A:middle
us, as developers today, this

00:01:46.276 --> 00:01:48.226 A:middle
can sometimes be quite hard.

00:01:48.996 --> 00:01:51.226 A:middle
Skill with a given craft is

00:01:51.226 --> 00:01:52.236 A:middle
something that develops over

00:01:52.236 --> 00:01:52.696 A:middle
time.

00:01:53.066 --> 00:01:55.106 A:middle
It takes dedication, patience,

00:01:55.106 --> 00:01:55.876 A:middle
and focus.

00:01:56.466 --> 00:01:58.206 A:middle
It's about learning to enjoy the

00:01:58.246 --> 00:02:00.356 A:middle
process of getting there almost

00:01:58.246 --> 00:02:00.356 A:middle
process of getting there almost

00:02:00.356 --> 00:02:01.566 A:middle
as much as the destination

00:02:01.566 --> 00:02:02.116 A:middle
itself.

00:02:02.666 --> 00:02:05.166 A:middle
Now, part of this process is

00:02:05.166 --> 00:02:06.816 A:middle
also about converting those

00:02:06.816 --> 00:02:08.376 A:middle
things that might take intense

00:02:08.485 --> 00:02:10.126 A:middle
and conscious focus at first,

00:02:10.526 --> 00:02:11.166 A:middle
into habits.

00:02:13.036 --> 00:02:14.766 A:middle
Similar to driving, with

00:02:14.766 --> 00:02:16.566 A:middle
experience and practice, the

00:02:16.566 --> 00:02:17.706 A:middle
number of things that we have to

00:02:17.706 --> 00:02:19.536 A:middle
consciously focus on while we're

00:02:19.536 --> 00:02:21.476 A:middle
driving reduces over time

00:02:21.706 --> 00:02:23.106 A:middle
because we convert things to

00:02:23.106 --> 00:02:24.856 A:middle
natural, automatic habits.

00:02:25.266 --> 00:02:26.726 A:middle
And we can do the same thing

00:02:26.946 --> 00:02:28.026 A:middle
with app development.

00:02:28.696 --> 00:02:30.456 A:middle
And to do this, it means

00:02:30.506 --> 00:02:32.236 A:middle
developing great habits, as

00:02:32.236 --> 00:02:33.356 A:middle
opposed to poor ones.

00:02:34.766 --> 00:02:36.536 A:middle
When it comes to building an

00:02:36.536 --> 00:02:38.836 A:middle
app, there's a lot of details to

00:02:38.836 --> 00:02:40.396 A:middle
pay attention to and as a

00:02:40.396 --> 00:02:41.996 A:middle
developer, so many of these

00:02:41.996 --> 00:02:43.526 A:middle
details that we have to care

00:02:43.526 --> 00:02:45.516 A:middle
about, well, they're rarely

00:02:45.516 --> 00:02:46.916 A:middle
actually directly seen by the

00:02:46.916 --> 00:02:48.726 A:middle
customers who use our apps.

00:02:48.886 --> 00:02:50.636 A:middle
And yet, they can be felt in

00:02:50.746 --> 00:02:52.856 A:middle
such significant ways, impacting

00:02:52.856 --> 00:02:55.166 A:middle
performance, reliability, and

00:02:55.166 --> 00:02:55.756 A:middle
stability.

00:02:57.026 --> 00:02:58.026 A:middle
And so, there's a lot of

00:02:58.026 --> 00:02:58.556 A:middle
details.

00:02:58.696 --> 00:03:00.366 A:middle
And there's just not enough time

00:02:58.696 --> 00:03:00.366 A:middle
And there's just not enough time

00:03:00.366 --> 00:03:01.606 A:middle
to focus on them all.

00:03:02.496 --> 00:03:03.886 A:middle
So, I'd like to spend some time

00:03:03.886 --> 00:03:05.886 A:middle
today reviewing some practices

00:03:05.886 --> 00:03:07.376 A:middle
that can hopefully inform and

00:03:07.376 --> 00:03:09.366 A:middle
enrich our work as developers,

00:03:09.766 --> 00:03:11.316 A:middle
things for us to work towards

00:03:11.356 --> 00:03:12.896 A:middle
integrating into our regular

00:03:12.896 --> 00:03:14.566 A:middle
workflows, such that they just

00:03:14.566 --> 00:03:16.576 A:middle
become habit and automatic.

00:03:17.346 --> 00:03:18.666 A:middle
This will save us frustration,

00:03:19.326 --> 00:03:21.056 A:middle
hassle, and waste of time down

00:03:21.056 --> 00:03:21.446 A:middle
the road.

00:03:22.066 --> 00:03:24.026 A:middle
Now, for many of you, I'm sure

00:03:24.026 --> 00:03:25.286 A:middle
you're already doing many of

00:03:25.286 --> 00:03:26.066 A:middle
these things.

00:03:26.296 --> 00:03:27.716 A:middle
But perhaps there are some that

00:03:27.716 --> 00:03:29.306 A:middle
haven't yet fully become habits

00:03:29.306 --> 00:03:29.716 A:middle
for you.

00:03:30.076 --> 00:03:31.826 A:middle
And maybe you'll be inspired to

00:03:31.826 --> 00:03:32.686 A:middle
practice them more.

00:03:33.796 --> 00:03:35.796 A:middle
So, first, let's get organized.

00:03:36.976 --> 00:03:38.206 A:middle
In addition to being an app

00:03:38.246 --> 00:03:39.636 A:middle
developer, I'm also a

00:03:39.636 --> 00:03:40.186 A:middle
woodworker.

00:03:40.636 --> 00:03:41.966 A:middle
I find that it's this great

00:03:41.966 --> 00:03:43.826 A:middle
escape from the modern-day world

00:03:43.886 --> 00:03:44.256 A:middle
for me.

00:03:44.546 --> 00:03:46.526 A:middle
But one thing that's for certain

00:03:46.826 --> 00:03:48.636 A:middle
is that beautiful, well-crafted

00:03:48.636 --> 00:03:50.276 A:middle
furniture, is much easier to

00:03:50.276 --> 00:03:51.986 A:middle
build in a clean shop.

00:03:52.806 --> 00:03:54.646 A:middle
So, if your bench is cluttered

00:03:54.826 --> 00:03:56.626 A:middle
and poorly organized, it's hard

00:03:56.626 --> 00:03:58.046 A:middle
to find the tools and materials

00:03:58.046 --> 00:03:59.526 A:middle
that you need as you work along.

00:04:00.136 --> 00:04:01.016 A:middle
You constantly just have to

00:04:01.016 --> 00:04:02.706 A:middle
shuffle things around to make

00:04:02.746 --> 00:04:03.696 A:middle
room for the work that you're

00:04:03.696 --> 00:04:04.426 A:middle
actually doing.

00:04:04.646 --> 00:04:06.256 A:middle
And, in short, everything takes

00:04:06.256 --> 00:04:08.086 A:middle
so much longer than it should,

00:04:08.416 --> 00:04:10.026 A:middle
and more accidents and mistakes

00:04:10.026 --> 00:04:11.076 A:middle
happen along the way.

00:04:11.616 --> 00:04:13.706 A:middle
Our team sees a lot of Xcode

00:04:13.706 --> 00:04:14.666 A:middle
projects each year.

00:04:14.826 --> 00:04:15.706 A:middle
And there's definitely some

00:04:15.706 --> 00:04:17.176 A:middle
practices that can help you make

00:04:17.176 --> 00:04:18.706 A:middle
sure that your work space is

00:04:18.706 --> 00:04:20.846 A:middle
clean, tidy, and in a great

00:04:20.875 --> 00:04:22.356 A:middle
position to allow you to do your

00:04:22.426 --> 00:04:23.676 A:middle
absolute best work.

00:04:24.206 --> 00:04:27.086 A:middle
Xcode projects benefit from

00:04:27.086 --> 00:04:29.216 A:middle
structure and organization using

00:04:29.216 --> 00:04:29.616 A:middle
groups.

00:04:30.496 --> 00:04:31.996 A:middle
This makes it so much easier at

00:04:31.996 --> 00:04:33.676 A:middle
a glance to see the files

00:04:33.676 --> 00:04:35.126 A:middle
involved in each section of your

00:04:35.126 --> 00:04:35.866 A:middle
application.

00:04:36.116 --> 00:04:37.626 A:middle
It can help you hone in quickly

00:04:37.676 --> 00:04:39.016 A:middle
when you're trying to fix a bug.

00:04:40.146 --> 00:04:42.206 A:middle
Groups are best used to organize

00:04:42.206 --> 00:04:43.996 A:middle
your project functionally in a

00:04:43.996 --> 00:04:45.666 A:middle
way that logically follows how

00:04:45.666 --> 00:04:47.146 A:middle
someone might interact with your

00:04:47.146 --> 00:04:47.856 A:middle
application.

00:04:48.496 --> 00:04:49.756 A:middle
We often see projects that are

00:04:49.936 --> 00:04:52.046 A:middle
organized by file type or maybe

00:04:52.046 --> 00:04:53.556 A:middle
just don't use groups at all.

00:04:53.556 --> 00:04:55.176 A:middle
And that doesn't really help

00:04:55.176 --> 00:04:56.426 A:middle
someone out later when they're

00:04:56.426 --> 00:04:57.876 A:middle
quickly trying to understand how

00:04:57.876 --> 00:04:59.476 A:middle
all of these source files relate

00:04:59.476 --> 00:05:00.026 A:middle
to each other.

00:04:59.476 --> 00:05:00.026 A:middle
to each other.

00:05:01.226 --> 00:05:03.396 A:middle
Furthermore, it can really help

00:05:03.396 --> 00:05:04.646 A:middle
to make sure that your Xcode

00:05:04.646 --> 00:05:06.316 A:middle
project structure and your file

00:05:06.316 --> 00:05:07.956 A:middle
system structure actually match

00:05:07.956 --> 00:05:08.406 A:middle
each other.

00:05:09.286 --> 00:05:11.386 A:middle
Since Xcode 9, when you create a

00:05:11.386 --> 00:05:12.786 A:middle
new group inside of your

00:05:12.786 --> 00:05:14.406 A:middle
project, it actually also

00:05:14.406 --> 00:05:15.866 A:middle
creates a folder on disk to

00:05:15.866 --> 00:05:17.276 A:middle
house the files that you place

00:05:17.276 --> 00:05:18.366 A:middle
inside of that group.

00:05:19.406 --> 00:05:20.626 A:middle
This means when you're looking

00:05:20.626 --> 00:05:21.686 A:middle
at your project in source

00:05:21.686 --> 00:05:23.546 A:middle
control, or just browsing the

00:05:23.546 --> 00:05:25.356 A:middle
file system, the structure is

00:05:25.356 --> 00:05:26.616 A:middle
mirrored, and this will really

00:05:26.616 --> 00:05:28.036 A:middle
help you reduce confusion and

00:05:28.036 --> 00:05:29.876 A:middle
missteps later on.

00:05:30.756 --> 00:05:32.886 A:middle
Storyboards are an incredibly

00:05:32.886 --> 00:05:34.536 A:middle
powerful tool for building out

00:05:34.536 --> 00:05:35.886 A:middle
user interfaces in a visual

00:05:35.886 --> 00:05:36.286 A:middle
manner.

00:05:37.106 --> 00:05:38.676 A:middle
But we do come across a lot of

00:05:38.676 --> 00:05:39.966 A:middle
projects that build out their

00:05:39.966 --> 00:05:41.586 A:middle
entire UI in a single

00:05:41.586 --> 00:05:42.216 A:middle
storyboard.

00:05:42.586 --> 00:05:44.126 A:middle
And there's no reason to do this

00:05:44.296 --> 00:05:45.656 A:middle
thanks to storyboard references.

00:05:46.716 --> 00:05:48.176 A:middle
Use a different storyboard file

00:05:48.176 --> 00:05:49.606 A:middle
for each major section of your

00:05:49.606 --> 00:05:50.976 A:middle
application and then use

00:05:50.976 --> 00:05:52.556 A:middle
references to tie them together.

00:05:52.866 --> 00:05:54.196 A:middle
You'll find it makes it so much

00:05:54.196 --> 00:05:55.896 A:middle
easier to isolate individual

00:05:55.896 --> 00:05:56.376 A:middle
changes.

00:05:56.636 --> 00:05:58.096 A:middle
And it makes it much simpler

00:05:58.176 --> 00:05:59.506 A:middle
when working with larger teams,

00:05:59.706 --> 00:06:00.916 A:middle
as you can avoid the risks of

00:05:59.706 --> 00:06:00.916 A:middle
as you can avoid the risks of

00:06:00.916 --> 00:06:02.826 A:middle
those nasty merge conflicts and

00:06:02.826 --> 00:06:04.446 A:middle
make resolving those that occur

00:06:04.446 --> 00:06:05.236 A:middle
way easier.

00:06:06.556 --> 00:06:07.576 A:middle
Just like you wouldn't put your

00:06:07.576 --> 00:06:09.346 A:middle
entire source code in a single

00:06:09.346 --> 00:06:11.456 A:middle
file, don't put your whole UI in

00:06:11.456 --> 00:06:13.336 A:middle
a single storyboard either.

00:06:15.756 --> 00:06:18.016 A:middle
Keeping your project file modern

00:06:18.416 --> 00:06:19.926 A:middle
is a critical way to make sure

00:06:19.926 --> 00:06:22.276 A:middle
that Xcode can help you out and

00:06:22.276 --> 00:06:23.556 A:middle
avoids the accumulation of

00:06:23.556 --> 00:06:24.026 A:middle
issues.

00:06:24.606 --> 00:06:25.956 A:middle
This is one of those tasks that

00:06:25.956 --> 00:06:27.976 A:middle
can really be a non-issue if you

00:06:27.976 --> 00:06:29.216 A:middle
take care of it regularly.

00:06:29.736 --> 00:06:31.886 A:middle
But it can really cause problems

00:06:31.886 --> 00:06:33.406 A:middle
down the road if you don't keep

00:06:33.406 --> 00:06:33.876 A:middle
up with it.

00:06:35.036 --> 00:06:36.766 A:middle
First, when you're updating to a

00:06:36.766 --> 00:06:38.546 A:middle
new version of Xcode, you'll be

00:06:38.546 --> 00:06:39.656 A:middle
offered the opportunity

00:06:39.656 --> 00:06:41.476 A:middle
sometimes to have Xcode update

00:06:41.556 --> 00:06:43.376 A:middle
the project settings and update

00:06:43.376 --> 00:06:45.016 A:middle
your project file to the latest

00:06:45.016 --> 00:06:45.446 A:middle
format.

00:06:45.926 --> 00:06:46.816 A:middle
So, unless you have some

00:06:46.816 --> 00:06:48.496 A:middle
critical reason not to do this,

00:06:48.826 --> 00:06:49.946 A:middle
we'd recommend that you do it

00:06:49.946 --> 00:06:51.866 A:middle
whenever prompted, or whenever a

00:06:51.866 --> 00:06:53.316 A:middle
warning appears in the issue

00:06:53.316 --> 00:06:53.886 A:middle
navigator.

00:06:55.246 --> 00:06:56.766 A:middle
Second, make sure that your

00:06:56.766 --> 00:06:58.766 A:middle
project is using the new Xcode

00:06:58.766 --> 00:07:00.046 A:middle
build system first released in

00:06:58.766 --> 00:07:00.046 A:middle
build system first released in

00:07:00.046 --> 00:07:01.026 A:middle
2017.

00:07:02.226 --> 00:07:03.206 A:middle
It offers significant

00:07:03.206 --> 00:07:04.706 A:middle
improvements in performance,

00:07:05.596 --> 00:07:07.086 A:middle
dependency management, and it's

00:07:07.136 --> 00:07:08.556 A:middle
absolutely critical to your

00:07:08.556 --> 00:07:10.096 A:middle
adoption of Swift packages.

00:07:10.666 --> 00:07:13.026 A:middle
Now, it's been the default build

00:07:13.026 --> 00:07:14.536 A:middle
system since Xcode 10.

00:07:14.756 --> 00:07:16.036 A:middle
And you can verify the build

00:07:16.036 --> 00:07:17.226 A:middle
system that your project is

00:07:17.226 --> 00:07:18.796 A:middle
using by looking at the project

00:07:18.796 --> 00:07:20.666 A:middle
settings found under the file

00:07:20.666 --> 00:07:21.000 A:middle
menu.

00:07:23.966 --> 00:07:25.266 A:middle
Us woodworkers, we tend to hold

00:07:25.266 --> 00:07:27.956 A:middle
onto small scraps, just in case

00:07:27.956 --> 00:07:30.596 A:middle
we need them someday until that

00:07:30.596 --> 00:07:32.886 A:middle
scrap bin gets so full that we

00:07:32.886 --> 00:07:34.126 A:middle
just can't work around it

00:07:34.126 --> 00:07:35.496 A:middle
anymore and we have to come to

00:07:35.496 --> 00:07:37.306 A:middle
terms with the fact that these

00:07:37.306 --> 00:07:38.726 A:middle
tiny pieces of wood that we've

00:07:38.726 --> 00:07:40.186 A:middle
been holding onto are never

00:07:40.186 --> 00:07:41.336 A:middle
really going to make it into a

00:07:41.336 --> 00:07:41.846 A:middle
project.

00:07:42.666 --> 00:07:43.826 A:middle
As developers, we have this

00:07:43.856 --> 00:07:45.306 A:middle
tendency to hold on to scraps,

00:07:45.306 --> 00:07:45.626 A:middle
too.

00:07:46.856 --> 00:07:48.626 A:middle
But it's a simpler decision for

00:07:49.436 --> 00:07:49.526 A:middle
us.

00:07:50.526 --> 00:07:51.556 A:middle
Since you've got your project

00:07:51.556 --> 00:07:53.516 A:middle
under source control, and you do

00:07:53.516 --> 00:07:54.726 A:middle
have your project under source

00:07:54.726 --> 00:07:55.326 A:middle
control, right?

00:07:56.576 --> 00:07:58.306 A:middle
Get rid of that unneeded and

00:07:58.306 --> 00:07:59.056 A:middle
unused code.

00:08:00.176 --> 00:08:02.946 A:middle
Don't just comment it out just

00:08:02.946 --> 00:08:04.106 A:middle
in case you want to pull it back

00:08:04.106 --> 00:08:04.576 A:middle
someday.

00:08:04.846 --> 00:08:06.486 A:middle
If you ever actually need it,

00:08:06.486 --> 00:08:07.586 A:middle
it's going to be in the history

00:08:07.586 --> 00:08:08.326 A:middle
for that file.

00:08:08.326 --> 00:08:09.826 A:middle
And you can still get it back.

00:08:10.296 --> 00:08:14.456 A:middle
Let go of those scraps.

00:08:14.456 --> 00:08:15.786 A:middle
Another pile that we really

00:08:15.786 --> 00:08:16.936 A:middle
don't want to have grow out of

00:08:16.936 --> 00:08:18.516 A:middle
control are warnings.

00:08:18.786 --> 00:08:20.736 A:middle
And to that end, establish a

00:08:20.736 --> 00:08:22.686 A:middle
zero-warning practice for

00:08:22.686 --> 00:08:24.396 A:middle
yourself and for your team.

00:08:25.236 --> 00:08:26.536 A:middle
Code should never be checked in

00:08:26.536 --> 00:08:27.536 A:middle
that contains warnings.

00:08:28.086 --> 00:08:29.336 A:middle
And you should treat warnings as

00:08:29.376 --> 00:08:30.626 A:middle
errors while you're writing your

00:08:30.626 --> 00:08:30.976 A:middle
code.

00:08:31.166 --> 00:08:32.966 A:middle
Just fix them as you go along.

00:08:34.246 --> 00:08:35.716 A:middle
We've run into projects with

00:08:36.186 --> 00:08:37.525 A:middle
thousands of warnings.

00:08:37.756 --> 00:08:39.226 A:middle
And in most cases, they've just

00:08:39.226 --> 00:08:41.116 A:middle
accumulated for so long that the

00:08:41.116 --> 00:08:43.096 A:middle
developer gave up and just never

00:08:43.096 --> 00:08:44.336 A:middle
had time to go fix them all.

00:08:45.226 --> 00:08:45.936 A:middle
Furthermore, if you're

00:08:45.936 --> 00:08:47.406 A:middle
maintaining a project like this,

00:08:48.246 --> 00:08:49.046 A:middle
you're not going to see new

00:08:49.046 --> 00:08:51.046 A:middle
warnings when they show up.

00:08:53.036 --> 00:08:54.706 A:middle
So, this is getting organized.

00:08:54.886 --> 00:08:56.166 A:middle
Keeping a clean workspace and

00:08:56.166 --> 00:08:57.956 A:middle
project, it's critical to the

00:08:57.956 --> 00:09:00.376 A:middle
long-term health and success of

00:08:57.956 --> 00:09:00.376 A:middle
long-term health and success of

00:09:00.376 --> 00:09:00.716 A:middle
your app.

00:09:01.546 --> 00:09:03.486 A:middle
So, organize your project with

00:09:03.526 --> 00:09:04.016 A:middle
groups.

00:09:04.856 --> 00:09:06.416 A:middle
And have those groups mirror the

00:09:06.416 --> 00:09:07.416 A:middle
file system structure.

00:09:08.176 --> 00:09:09.296 A:middle
Break apart those large

00:09:09.296 --> 00:09:10.806 A:middle
storyboards using references.

00:09:11.516 --> 00:09:13.056 A:middle
And make sure your project file

00:09:13.126 --> 00:09:14.326 A:middle
is up to date.

00:09:14.786 --> 00:09:16.386 A:middle
Clean out that old and abandoned

00:09:16.386 --> 00:09:19.536 A:middle
code and get to the root problem

00:09:19.536 --> 00:09:20.926 A:middle
of warnings, and fix them as

00:09:20.926 --> 00:09:21.686 A:middle
they arise.

00:09:21.976 --> 00:09:23.156 A:middle
Doing these things will make

00:09:23.156 --> 00:09:24.976 A:middle
your project more nimble and

00:09:24.976 --> 00:09:27.116 A:middle
your development workflow way

00:09:27.116 --> 00:09:28.116 A:middle
better throughout the life of

00:09:28.116 --> 00:09:29.286 A:middle
your project.

00:09:31.636 --> 00:09:33.736 A:middle
Speaking of source control, one

00:09:33.736 --> 00:09:34.596 A:middle
of the things that you should

00:09:34.696 --> 00:09:36.876 A:middle
always do when you're setting up

00:09:36.926 --> 00:09:38.526 A:middle
your project, is enable source

00:09:38.526 --> 00:09:38.956 A:middle
control.

00:09:40.516 --> 00:09:42.206 A:middle
We do actually come across a lot

00:09:42.206 --> 00:09:43.666 A:middle
of projects that don't use

00:09:43.666 --> 00:09:45.026 A:middle
source control, especially those

00:09:45.026 --> 00:09:46.346 A:middle
with solo developer teams.

00:09:47.806 --> 00:09:48.836 A:middle
Conveniently, when you're

00:09:48.836 --> 00:09:50.606 A:middle
setting up a new Xcode project,

00:09:51.356 --> 00:09:52.676 A:middle
all it takes is to ensure that a

00:09:52.676 --> 00:09:55.076 A:middle
check box is checked and your

00:09:55.076 --> 00:09:56.196 A:middle
project will be under source

00:09:56.196 --> 00:09:57.126 A:middle
control using Git.

00:09:58.516 --> 00:09:59.866 A:middle
Now, you can always go back and

00:09:59.866 --> 00:10:00.776 A:middle
see what changes you've made in

00:09:59.866 --> 00:10:00.776 A:middle
see what changes you've made in

00:10:00.776 --> 00:10:00.976 A:middle
the past,

00:10:02.146 --> 00:10:03.616 A:middle
what's about to change, when you

00:10:03.616 --> 00:10:04.736 A:middle
commit your current set of

00:10:04.736 --> 00:10:05.236 A:middle
changes.

00:10:05.416 --> 00:10:06.996 A:middle
And more easily catch any sort

00:10:06.996 --> 00:10:07.626 A:middle
of errors.

00:10:08.976 --> 00:10:10.346 A:middle
So, now that you've got Git

00:10:10.346 --> 00:10:12.086 A:middle
enabled, there's a few things

00:10:12.146 --> 00:10:13.526 A:middle
that you should keep in mind in

00:10:13.526 --> 00:10:15.006 A:middle
order to make it more helpful

00:10:15.266 --> 00:10:15.946 A:middle
and effective.

00:10:16.576 --> 00:10:19.936 A:middle
First, keep your commit small.

00:10:20.236 --> 00:10:21.206 A:middle
Check your code into your

00:10:21.206 --> 00:10:22.536 A:middle
working branch regularly in

00:10:22.536 --> 00:10:23.936 A:middle
small increments.

00:10:24.196 --> 00:10:25.356 A:middle
And keep those changes as

00:10:25.356 --> 00:10:27.346 A:middle
localized and self-contained as

00:10:27.376 --> 00:10:27.886 A:middle
possible.

00:10:29.146 --> 00:10:30.176 A:middle
This will give you a path to

00:10:30.176 --> 00:10:32.686 A:middle
look back upon when later on you

00:10:32.686 --> 00:10:33.976 A:middle
need clues or you're trying to

00:10:33.976 --> 00:10:34.916 A:middle
sort out a regression.

00:10:35.676 --> 00:10:37.106 A:middle
And, meanwhile, it's going to

00:10:37.106 --> 00:10:38.626 A:middle
reduce your odds of introducing

00:10:38.626 --> 00:10:39.846 A:middle
a regression because you're

00:10:39.846 --> 00:10:41.346 A:middle
making those smaller changes.

00:10:42.946 --> 00:10:44.756 A:middle
Second, write useful commit

00:10:44.756 --> 00:10:46.596 A:middle
messages because there comes a

00:10:46.596 --> 00:10:48.616 A:middle
day when we all ask the question

00:10:48.616 --> 00:10:49.836 A:middle
that we wish we could answer,

00:10:50.166 --> 00:10:51.616 A:middle
what on earth was I thinking?

00:10:52.906 --> 00:10:54.186 A:middle
Your commit messages are your

00:10:54.186 --> 00:10:56.596 A:middle
notes to future self when you're

00:10:56.596 --> 00:10:58.206 A:middle
trying to recall under what

00:10:58.206 --> 00:10:59.906 A:middle
circumstances some code changed

00:11:00.236 --> 00:11:01.000 A:middle
and the reasons why.

00:11:04.726 --> 00:11:06.616 A:middle
Run your source control, like

00:11:06.616 --> 00:11:07.936 A:middle
you would for a large team.

00:11:07.976 --> 00:11:09.306 A:middle
Even if you were a solo

00:11:09.306 --> 00:11:09.876 A:middle
developer.

00:11:09.876 --> 00:11:11.796 A:middle
It means maybe branching for

00:11:11.796 --> 00:11:13.116 A:middle
bugs and new features.

00:11:13.366 --> 00:11:14.876 A:middle
And then once you wrap those up,

00:11:14.876 --> 00:11:17.186 A:middle
squash them together back into

00:11:17.186 --> 00:11:19.216 A:middle
the main or dev batch, and use a

00:11:19.216 --> 00:11:20.556 A:middle
clean and helpful commit

00:11:20.586 --> 00:11:21.086 A:middle
message.

00:11:21.726 --> 00:11:23.166 A:middle
Now, there are several options

00:11:23.166 --> 00:11:24.316 A:middle
and patterns that you can follow

00:11:24.316 --> 00:11:25.576 A:middle
for your source control.

00:11:25.866 --> 00:11:27.656 A:middle
We recommend checking them out

00:11:27.656 --> 00:11:28.756 A:middle
and finding the one that works

00:11:28.756 --> 00:11:30.296 A:middle
really well for you and just

00:11:30.346 --> 00:11:31.556 A:middle
integrating that into your

00:11:31.556 --> 00:11:32.606 A:middle
developer workflow.

00:11:33.186 --> 00:11:35.136 A:middle
So, that's tracking.

00:11:35.786 --> 00:11:37.326 A:middle
Source control is absolutely

00:11:37.326 --> 00:11:39.686 A:middle
critical to a successful, modern

00:11:39.786 --> 00:11:41.016 A:middle
app development workflow.

00:11:41.266 --> 00:11:42.416 A:middle
So, adopt it as part of your

00:11:42.416 --> 00:11:44.216 A:middle
project and embrace it as part

00:11:44.216 --> 00:11:45.346 A:middle
of your regular practice.

00:11:45.896 --> 00:11:47.966 A:middle
Keep those commits small and

00:11:47.966 --> 00:11:49.476 A:middle
write useful commit messages.

00:11:50.276 --> 00:11:52.376 A:middle
And finally, utilize branches to

00:11:52.376 --> 00:11:53.946 A:middle
help isolate and manage those

00:11:53.946 --> 00:11:56.376 A:middle
changes, bug fixes, and feature

00:11:57.916 --> 00:11:58.000 A:middle
work.

00:12:00.276 --> 00:12:02.126 A:middle
Two of the greatest contributors

00:12:02.126 --> 00:12:04.136 A:middle
to clarity and maintainability,

00:12:04.196 --> 00:12:06.046 A:middle
in my opinion, are code comments

00:12:06.146 --> 00:12:07.176 A:middle
and documentation.

00:12:08.226 --> 00:12:09.316 A:middle
They're a trail of helpful

00:12:09.316 --> 00:12:10.846 A:middle
breadcrumbs for your teammates

00:12:10.966 --> 00:12:11.906 A:middle
or your future self.

00:12:13.136 --> 00:12:14.656 A:middle
Some might say, "I don't need

00:12:14.656 --> 00:12:16.186 A:middle
comments, my code is

00:12:16.186 --> 00:12:17.156 A:middle
self-documenting."

00:12:18.536 --> 00:12:19.486 A:middle
I don't buy this at all.

00:12:20.486 --> 00:12:22.546 A:middle
Well-written code is clear in

00:12:22.546 --> 00:12:23.906 A:middle
what it's doing algorithmically.

00:12:23.906 --> 00:12:26.196 A:middle
And it's self-documenting in

00:12:26.196 --> 00:12:27.016 A:middle
that respect.

00:12:27.606 --> 00:12:29.236 A:middle
But it doesn't convey why.

00:12:29.686 --> 00:12:31.006 A:middle
Why was this code written in the

00:12:31.006 --> 00:12:31.776 A:middle
first place?

00:12:32.366 --> 00:12:34.096 A:middle
How does this code fit into the

00:12:34.096 --> 00:12:35.316 A:middle
larger context?

00:12:36.066 --> 00:12:38.056 A:middle
Nor does it describe the

00:12:38.056 --> 00:12:39.426 A:middle
rationale behind the approach

00:12:39.426 --> 00:12:41.066 A:middle
taken when writing it.

00:12:42.376 --> 00:12:44.086 A:middle
The best developers that I work

00:12:44.166 --> 00:12:46.256 A:middle
with, that not only write

00:12:46.256 --> 00:12:48.226 A:middle
incredible, clear, and concise

00:12:48.226 --> 00:12:49.916 A:middle
code but they take the time to

00:12:49.916 --> 00:12:51.836 A:middle
sprinkle helpful review comments

00:12:51.836 --> 00:12:53.686 A:middle
throughout that code, to guide

00:12:53.726 --> 00:12:54.836 A:middle
the future reader into the

00:12:54.836 --> 00:12:56.356 A:middle
headspace of the original

00:12:56.356 --> 00:12:56.796 A:middle
author.

00:12:58.226 --> 00:12:59.876 A:middle
Junior developers will likely

00:12:59.876 --> 00:13:01.486 A:middle
benefit from this process, even

00:12:59.876 --> 00:13:01.486 A:middle
benefit from this process, even

00:13:01.486 --> 00:13:03.576 A:middle
more because you're experience

00:13:03.576 --> 00:13:05.096 A:middle
at the beginning of a project,

00:13:05.516 --> 00:13:07.436 A:middle
varies so much from at the end.

00:13:07.676 --> 00:13:08.786 A:middle
And the decisions that you make

00:13:08.786 --> 00:13:09.986 A:middle
at the beginning of a project

00:13:10.196 --> 00:13:11.396 A:middle
might actually be at odds with

00:13:11.426 --> 00:13:12.626 A:middle
the decisions made at the end.

00:13:13.806 --> 00:13:15.076 A:middle
So, what makes for a good

00:13:15.076 --> 00:13:15.536 A:middle
comment?

00:13:16.246 --> 00:13:18.276 A:middle
Well, a good comment assumes

00:13:18.276 --> 00:13:19.506 A:middle
that the reader understands the

00:13:19.506 --> 00:13:21.136 A:middle
programming language being used

00:13:21.776 --> 00:13:22.616 A:middle
and can walk through the

00:13:22.616 --> 00:13:24.236 A:middle
sequence and steps being taken

00:13:24.236 --> 00:13:24.916 A:middle
in the code.

00:13:26.516 --> 00:13:27.866 A:middle
And instead, it really focuses

00:13:27.866 --> 00:13:29.346 A:middle
on why that code was written in

00:13:29.346 --> 00:13:30.166 A:middle
the first place.

00:13:30.436 --> 00:13:32.186 A:middle
What's the backing for that?

00:13:32.736 --> 00:13:34.326 A:middle
For example, this is the kind of

00:13:34.326 --> 00:13:36.216 A:middle
comment that just doesn't really

00:13:36.216 --> 00:13:37.216 A:middle
add any value.

00:13:37.216 --> 00:13:38.786 A:middle
And yet, we see it all the time.

00:13:39.186 --> 00:13:40.476 A:middle
I'm assuming that most of you

00:13:40.476 --> 00:13:41.626 A:middle
have written some code in Swift

00:13:41.626 --> 00:13:43.346 A:middle
and could just figure out that

00:13:43.346 --> 00:13:45.116 A:middle
we're creating a string constant

00:13:45.116 --> 00:13:46.516 A:middle
here carrying that value.

00:13:47.326 --> 00:13:49.496 A:middle
But we have no idea what id is,

00:13:49.856 --> 00:13:52.146 A:middle
what it's used for, or why has

00:13:52.146 --> 00:13:54.256 A:middle
this been hard coded into the

00:13:54.886 --> 00:13:54.966 A:middle
app?

00:13:55.246 --> 00:13:56.366 A:middle
So, with a little bit of

00:13:56.366 --> 00:13:57.956 A:middle
commenting, we now understand

00:13:57.956 --> 00:13:59.396 A:middle
why this value exists and where

00:13:59.396 --> 00:14:00.056 A:middle
it came from.

00:13:59.396 --> 00:14:00.056 A:middle
it came from.

00:14:00.246 --> 00:14:01.356 A:middle
But we can take this one step

00:14:01.356 --> 00:14:03.766 A:middle
further; names for constants and

00:14:03.766 --> 00:14:05.546 A:middle
variables offer additional

00:14:05.546 --> 00:14:06.716 A:middle
opportunities for clarity.

00:14:07.256 --> 00:14:08.616 A:middle
So, if you find yourself using

00:14:08.616 --> 00:14:11.376 A:middle
single letters like m or i, or

00:14:11.376 --> 00:14:13.816 A:middle
things like id or idx, it might

00:14:13.816 --> 00:14:15.566 A:middle
be a great opportunity to choose

00:14:15.566 --> 00:14:16.826 A:middle
a more descriptive variable

00:14:16.826 --> 00:14:17.146 A:middle
name.

00:14:18.026 --> 00:14:19.466 A:middle
Autocomplete in Xcode works like

00:14:19.466 --> 00:14:19.886 A:middle
a charm.

00:14:20.056 --> 00:14:20.906 A:middle
So, you don't even really have

00:14:20.906 --> 00:14:21.966 A:middle
to type anything more.

00:14:22.856 --> 00:14:24.126 A:middle
And it will always be clear

00:14:24.316 --> 00:14:26.206 A:middle
throughout your code base what

00:14:26.206 --> 00:14:27.726 A:middle
particular identifier, in this

00:14:27.726 --> 00:14:29.636 A:middle
case, is being used at any point

00:14:30.456 --> 00:14:31.986 A:middle
in time.

00:14:32.786 --> 00:14:34.316 A:middle
The benefits to documentation

00:14:34.556 --> 00:14:35.976 A:middle
are very similar to that of

00:14:36.036 --> 00:14:36.626 A:middle
comments.

00:14:36.866 --> 00:14:38.386 A:middle
But these scale throughout your

00:14:38.386 --> 00:14:39.896 A:middle
application and beyond.

00:14:41.276 --> 00:14:42.596 A:middle
As you write your own apps,

00:14:42.906 --> 00:14:44.556 A:middle
you're creating layers upon

00:14:44.556 --> 00:14:45.876 A:middle
layers of abstraction and

00:14:45.876 --> 00:14:47.566 A:middle
algorithms taking what would be

00:14:47.566 --> 00:14:49.486 A:middle
large and winding passages of

00:14:49.486 --> 00:14:51.356 A:middle
code and breaking them down into

00:14:51.356 --> 00:14:53.646 A:middle
tidy, testable, reusable

00:14:53.646 --> 00:14:54.156 A:middle
functions.

00:14:55.296 --> 00:14:56.256 A:middle
But if you choose not to

00:14:56.256 --> 00:14:57.716 A:middle
document these functions, you're

00:14:57.716 --> 00:14:59.206 A:middle
forcing yourself to actually

00:14:59.256 --> 00:15:00.996 A:middle
rewrite that documentation in

00:14:59.256 --> 00:15:00.996 A:middle
rewrite that documentation in

00:15:00.996 --> 00:15:03.326 A:middle
your mind every single time you

00:15:03.326 --> 00:15:04.396 A:middle
go to use that function.

00:15:04.996 --> 00:15:06.416 A:middle
Typically, by having to go and

00:15:06.416 --> 00:15:07.636 A:middle
revisit the implementation of

00:15:07.636 --> 00:15:09.056 A:middle
the function, look at how each

00:15:09.056 --> 00:15:09.976 A:middle
of the parameters are being

00:15:09.976 --> 00:15:11.416 A:middle
used, and figure out how it's

00:15:11.416 --> 00:15:12.806 A:middle
going to transform them to

00:15:12.806 --> 00:15:13.626 A:middle
provide a result.

00:15:14.356 --> 00:15:16.856 A:middle
In case you aren't aware,

00:15:16.996 --> 00:15:18.936 A:middle
generating a Dock stub in Xcode

00:15:19.016 --> 00:15:20.306 A:middle
is incredibly easy.

00:15:20.516 --> 00:15:21.646 A:middle
Just place your curser on the

00:15:21.686 --> 00:15:22.666 A:middle
first line of the function

00:15:22.666 --> 00:15:24.436 A:middle
signature, press option command

00:15:24.436 --> 00:15:26.406 A:middle
slash and all the placeholder

00:15:26.406 --> 00:15:27.806 A:middle
text you need will be generated

00:15:27.806 --> 00:15:28.526 A:middle
automatically.

00:15:28.786 --> 00:15:31.006 A:middle
Fill in the blanks and you're

00:15:33.356 --> 00:15:33.466 A:middle
done.

00:15:33.676 --> 00:15:35.376 A:middle
Option clicking on any usage of

00:15:35.376 --> 00:15:36.796 A:middle
that function will now bring up

00:15:36.866 --> 00:15:38.446 A:middle
your own documentation in the

00:15:38.446 --> 00:15:40.376 A:middle
same contextual quick help popup

00:15:40.376 --> 00:15:41.346 A:middle
that you've come to know and

00:15:41.346 --> 00:15:43.036 A:middle
love for the native SDK and

00:15:43.216 --> 00:15:44.516 A:middle
Swift standard library.

00:15:44.976 --> 00:15:48.516 A:middle
Comments and documentation:

00:15:49.006 --> 00:15:50.266 A:middle
They're one of these really low

00:15:50.266 --> 00:15:51.656 A:middle
effort but incredibly high

00:15:51.656 --> 00:15:53.576 A:middle
reward investments of your time.

00:15:53.846 --> 00:15:55.156 A:middle
And it pays off repeatedly

00:15:55.156 --> 00:15:56.046 A:middle
throughout the life of your

00:15:56.046 --> 00:15:56.556 A:middle
project.

00:15:56.986 --> 00:15:58.546 A:middle
So, aid future understanding by

00:15:58.546 --> 00:15:59.646 A:middle
sprinkling your code with

00:15:59.646 --> 00:16:00.586 A:middle
helpful comments.

00:15:59.646 --> 00:16:00.586 A:middle
helpful comments.

00:16:01.056 --> 00:16:03.056 A:middle
Bring readers into the headspace

00:16:03.126 --> 00:16:04.566 A:middle
of the original author with

00:16:04.606 --> 00:16:05.316 A:middle
those comments.

00:16:06.006 --> 00:16:07.236 A:middle
Use descriptive names for your

00:16:07.236 --> 00:16:09.116 A:middle
variables, and fully document

00:16:09.116 --> 00:16:10.456 A:middle
your functions, properties,

00:16:10.546 --> 00:16:11.876 A:middle
Structs and Enums.

00:16:12.446 --> 00:16:16.436 A:middle
Next, I'm going to talk about

00:16:16.436 --> 00:16:18.716 A:middle
testing, and specifically, unit

00:16:18.716 --> 00:16:19.156 A:middle
testing.

00:16:19.746 --> 00:16:21.226 A:middle
And to do that, I want to

00:16:21.226 --> 00:16:22.016 A:middle
introduce Marshall.

00:16:22.896 --> 00:16:24.536 A:middle
Marshall is our Swift and

00:16:24.536 --> 00:16:25.896 A:middle
developer tools evangelist.

00:16:26.256 --> 00:16:27.726 A:middle
He's an incredibly brilliant and

00:16:27.766 --> 00:16:28.446 A:middle
kind fellow.

00:16:28.446 --> 00:16:30.306 A:middle
And he also happens to be a

00:16:30.306 --> 00:16:32.616 A:middle
walking, talking Swift-linter.

00:16:33.176 --> 00:16:36.106 A:middle
Every time I submit my code for

00:16:36.106 --> 00:16:38.636 A:middle
review, I brace for the tsunami

00:16:38.636 --> 00:16:40.096 A:middle
of insightful comments and

00:16:40.096 --> 00:16:41.756 A:middle
feedback to help me improve what

00:16:41.756 --> 00:16:42.966 A:middle
I've written in both form and

00:16:42.966 --> 00:16:43.396 A:middle
function.

00:16:43.736 --> 00:16:45.666 A:middle
But the other day, Marshall

00:16:45.666 --> 00:16:47.346 A:middle
nudged me in the right direction

00:16:47.346 --> 00:16:49.316 A:middle
on another topic, unit testing.

00:16:50.516 --> 00:16:52.986 A:middle
Now, I must admit, I don't

00:16:52.986 --> 00:16:54.606 A:middle
exactly have an impeccable track

00:16:54.606 --> 00:16:55.806 A:middle
record in writing unit tests.

00:16:56.626 --> 00:16:58.116 A:middle
It's not that I don't appreciate

00:16:58.116 --> 00:16:59.506 A:middle
the potential value in them or

00:16:59.506 --> 00:17:00.566 A:middle
that I'm necessarily new to

00:16:59.506 --> 00:17:00.566 A:middle
that I'm necessarily new to

00:17:00.566 --> 00:17:00.886 A:middle
them.

00:17:01.386 --> 00:17:02.676 A:middle
It's just I tend to always leave

00:17:02.676 --> 00:17:03.466 A:middle
it to last.

00:17:03.646 --> 00:17:04.846 A:middle
And by the time I've finished

00:17:04.925 --> 00:17:06.356 A:middle
implementing the actual code,

00:17:07.016 --> 00:17:08.376 A:middle
the last thing I feel like doing

00:17:08.376 --> 00:17:09.476 A:middle
is writing a unit test.

00:17:10.066 --> 00:17:11.826 A:middle
Nevertheless, the other day,

00:17:11.965 --> 00:17:13.046 A:middle
while implementing the data

00:17:13.046 --> 00:17:14.415 A:middle
model for the new lab queuing

00:17:14.415 --> 00:17:15.806 A:middle
feature, in the DubDub app,

00:17:16.636 --> 00:17:17.476 A:middle
Marshall piped in.

00:17:18.856 --> 00:17:19.955 A:middle
&gt;&gt; And while you're doing that,

00:17:20.205 --> 00:17:21.116 A:middle
you might as well add a unit

00:17:21.156 --> 00:17:22.465 A:middle
test to make sure that the round

00:17:22.526 --> 00:17:23.705 A:middle
trip between the Struct and the

00:17:23.705 --> 00:17:25.175 A:middle
dictionary representation keeps

00:17:25.175 --> 00:17:25.425 A:middle
working.

00:17:26.906 --> 00:17:29.326 A:middle
&gt;&gt; Now, in my mind, I really

00:17:29.326 --> 00:17:30.196 A:middle
couldn't figure out how this

00:17:30.196 --> 00:17:30.996 A:middle
would be messed up in the

00:17:30.996 --> 00:17:31.416 A:middle
future.

00:17:31.736 --> 00:17:33.176 A:middle
But nevertheless, I listened to

00:17:33.176 --> 00:17:34.756 A:middle
Marshall and I put in a simple

00:17:34.756 --> 00:17:35.776 A:middle
round trip unit test.

00:17:36.886 --> 00:17:37.386 A:middle
I ran it.

00:17:37.386 --> 00:17:39.706 A:middle
And I felt this significant bit

00:17:40.086 --> 00:17:41.566 A:middle
of satisfaction when the green

00:17:41.566 --> 00:17:42.796 A:middle
check mark showed that the test

00:17:42.796 --> 00:17:43.146 A:middle
passed.

00:17:44.576 --> 00:17:45.746 A:middle
So, I submitted my changes for

00:17:45.746 --> 00:17:47.136 A:middle
review and I didn't think about

00:17:47.136 --> 00:17:48.916 A:middle
that test again until a couple

00:17:48.916 --> 00:17:51.326 A:middle
of weeks later, when we wanted

00:17:51.326 --> 00:17:52.756 A:middle
to include some additional data

00:17:52.756 --> 00:17:53.566 A:middle
in that Struct.

00:17:54.626 --> 00:17:56.566 A:middle
So, made the changes to the

00:17:56.566 --> 00:17:56.866 A:middle
Struct.

00:17:56.866 --> 00:17:58.536 A:middle
And I didn't see any issues at

00:17:58.536 --> 00:17:58.806 A:middle
runtime.

00:17:58.806 --> 00:18:00.536 A:middle
I'm done, right?

00:17:58.806 --> 00:18:00.536 A:middle
I'm done, right?

00:18:01.566 --> 00:18:03.306 A:middle
So, went to submit my changes.

00:18:03.846 --> 00:18:05.036 A:middle
And then I remembered to run

00:18:05.036 --> 00:18:05.766 A:middle
that unit test.

00:18:05.986 --> 00:18:08.046 A:middle
And sure enough, I'd forgotten

00:18:08.046 --> 00:18:09.266 A:middle
to change how the dictionary

00:18:09.266 --> 00:18:11.026 A:middle
deserialization was working and

00:18:11.176 --> 00:18:11.956 A:middle
the test caught it.

00:18:12.676 --> 00:18:13.986 A:middle
The bug would have shown up much

00:18:13.986 --> 00:18:15.276 A:middle
later, when we implementing the

00:18:15.276 --> 00:18:15.596 A:middle
UI.

00:18:15.706 --> 00:18:17.046 A:middle
And would have undoubtedly

00:18:17.046 --> 00:18:18.456 A:middle
wasted a fair bit of our time,

00:18:18.456 --> 00:18:19.566 A:middle
trying to figure out what went

00:18:19.566 --> 00:18:19.946 A:middle
wrong.

00:18:21.066 --> 00:18:22.606 A:middle
So, thanks, Marshall, for

00:18:22.606 --> 00:18:24.426 A:middle
reminding me to include unit

00:18:24.426 --> 00:18:25.736 A:middle
tests, as part of my regular

00:18:25.736 --> 00:18:26.256 A:middle
practice.

00:18:27.006 --> 00:18:29.276 A:middle
&gt;&gt; You're welcome, Josh [brief

00:18:29.276 --> 00:18:30.016 A:middle
laughter].

00:18:30.516 --> 00:18:34.866 A:middle
[ Applause ]

00:18:35.366 --> 00:18:36.996 A:middle
&gt;&gt; So, even for sections of code

00:18:37.126 --> 00:18:38.816 A:middle
that seem deceptively simple, as

00:18:39.046 --> 00:18:40.506 A:middle
this particular one did to me at

00:18:40.506 --> 00:18:42.436 A:middle
the time, it's so important to

00:18:42.436 --> 00:18:43.556 A:middle
write those unit tests.

00:18:44.156 --> 00:18:45.746 A:middle
With the malleability of code

00:18:45.916 --> 00:18:47.666 A:middle
comes the potential introduction

00:18:47.796 --> 00:18:48.636 A:middle
of regressions.

00:18:49.366 --> 00:18:50.546 A:middle
And given that we never seem to

00:18:50.546 --> 00:18:52.106 A:middle
have enough time to test things

00:18:52.106 --> 00:18:54.516 A:middle
thoroughly, let's put Xcode to

00:18:54.516 --> 00:18:56.186 A:middle
work as an extra set of eyes.

00:18:56.986 --> 00:18:58.876 A:middle
So, make the implementation of

00:18:58.876 --> 00:19:00.186 A:middle
unit tests a part of your

00:18:58.876 --> 00:19:00.186 A:middle
unit tests a part of your

00:19:00.186 --> 00:19:01.926 A:middle
regular development practice and

00:19:01.926 --> 00:19:03.316 A:middle
run those tests before each

00:19:03.316 --> 00:19:03.666 A:middle
commit.

00:19:05.046 --> 00:19:06.566 A:middle
Also, unit tests are a key

00:19:06.566 --> 00:19:07.856 A:middle
component to continuous

00:19:07.856 --> 00:19:08.416 A:middle
integration.

00:19:08.566 --> 00:19:09.746 A:middle
So, you can get yourself set up

00:19:09.776 --> 00:19:10.806 A:middle
for that.

00:19:11.106 --> 00:19:12.336 A:middle
Tests are another one of these

00:19:12.336 --> 00:19:13.686 A:middle
hidden details that your

00:19:13.686 --> 00:19:15.046 A:middle
customers will never actually

00:19:15.046 --> 00:19:15.566 A:middle
see.

00:19:16.136 --> 00:19:17.016 A:middle
But yet, could mean the

00:19:17.016 --> 00:19:18.546 A:middle
difference between an incredible

00:19:18.546 --> 00:19:20.516 A:middle
experience using your app or a

00:19:20.516 --> 00:19:22.106 A:middle
very frustrating one when some

00:19:22.106 --> 00:19:23.216 A:middle
important piece of their data

00:19:23.216 --> 00:19:24.006 A:middle
has been corrupted.

00:19:26.696 --> 00:19:28.666 A:middle
There's forms of analysis that

00:19:28.666 --> 00:19:29.866 A:middle
you'll want to keep as part of

00:19:29.866 --> 00:19:30.886 A:middle
your regular workflow.

00:19:31.016 --> 00:19:32.866 A:middle
Now, some of these do require

00:19:32.866 --> 00:19:34.176 A:middle
some extra time investment.

00:19:34.426 --> 00:19:35.956 A:middle
But others can happen for you in

00:19:35.956 --> 00:19:37.456 A:middle
the background without you even

00:19:37.456 --> 00:19:39.026 A:middle
having to think about it.

00:19:40.376 --> 00:19:41.486 A:middle
One tool that can be very

00:19:41.486 --> 00:19:42.756 A:middle
helpful is the Network Link

00:19:42.756 --> 00:19:43.266 A:middle
Conditioner.

00:19:43.716 --> 00:19:45.306 A:middle
After all, app development tends

00:19:45.306 --> 00:19:46.826 A:middle
to be performed in homes and

00:19:46.826 --> 00:19:48.346 A:middle
offices with incredible network

00:19:48.406 --> 00:19:49.056 A:middle
performance.

00:19:49.786 --> 00:19:51.086 A:middle
But this really isn't a

00:19:51.086 --> 00:19:52.616 A:middle
representative environment of

00:19:52.666 --> 00:19:53.896 A:middle
where your app is likely to be

00:19:53.896 --> 00:19:54.526 A:middle
used.

00:19:55.056 --> 00:19:56.656 A:middle
So, by enabling the Network Link

00:19:56.656 --> 00:19:57.776 A:middle
Conditioner, you can

00:19:57.776 --> 00:19:59.016 A:middle
artificially constrain your

00:19:59.016 --> 00:20:00.126 A:middle
network performance to one

00:19:59.016 --> 00:20:00.126 A:middle
network performance to one

00:20:00.186 --> 00:20:01.406 A:middle
similar to that of a typical

00:20:01.406 --> 00:20:01.976 A:middle
cellular network.

00:20:02.176 --> 00:20:04.116 A:middle
Or even a poorly performing one.

00:20:04.736 --> 00:20:06.106 A:middle
You'd be amazed at the number of

00:20:06.106 --> 00:20:07.366 A:middle
issues that you'll catch with

00:20:07.366 --> 00:20:08.786 A:middle
loading and race conditions so

00:20:09.146 --> 00:20:10.846 A:middle
that you customers don't.

00:20:12.276 --> 00:20:13.936 A:middle
Inside of your scheme settings,

00:20:14.146 --> 00:20:15.656 A:middle
there's also several sanitizers

00:20:15.656 --> 00:20:16.676 A:middle
and checkers that can help

00:20:16.676 --> 00:20:17.946 A:middle
discover various issues

00:20:17.996 --> 00:20:18.846 A:middle
throughout your development

00:20:18.846 --> 00:20:19.206 A:middle
cycle.

00:20:19.906 --> 00:20:21.646 A:middle
The Address Sanitizer will watch

00:20:21.646 --> 00:20:22.536 A:middle
for things like memory

00:20:22.536 --> 00:20:24.636 A:middle
corruptions and buffer

00:20:24.636 --> 00:20:25.246 A:middle
overflows.

00:20:26.416 --> 00:20:27.676 A:middle
Memory issues are frequently the

00:20:27.676 --> 00:20:28.536 A:middle
cause of security

00:20:28.536 --> 00:20:29.236 A:middle
vulnerabilities.

00:20:29.406 --> 00:20:30.856 A:middle
So, using the Address Sanitize,

00:20:30.856 --> 00:20:32.076 A:middle
will help you make sure that you

00:20:32.076 --> 00:20:33.966 A:middle
don't ship these is the first

00:20:34.736 --> 00:20:34.886 A:middle
place.

00:20:36.116 --> 00:20:37.916 A:middle
By enabling the Thread

00:20:37.916 --> 00:20:39.376 A:middle
Sanitizer, while testing your --

00:20:39.376 --> 00:20:40.626 A:middle
and debugging your app in the

00:20:40.626 --> 00:20:42.446 A:middle
simulator, you can help discover

00:20:42.446 --> 00:20:43.376 A:middle
data races.

00:20:44.476 --> 00:20:46.116 A:middle
Data races are when you have two

00:20:46.276 --> 00:20:47.486 A:middle
threads that are not

00:20:47.486 --> 00:20:49.726 A:middle
synchronized and at least one of

00:20:49.726 --> 00:20:51.006 A:middle
those two threads is attempting

00:20:51.006 --> 00:20:52.746 A:middle
to do a write on the same piece

00:20:52.746 --> 00:20:53.136 A:middle
of data.

00:20:53.806 --> 00:20:56.106 A:middle
Now, these can be particularly

00:20:56.106 --> 00:20:58.086 A:middle
nasty bugs and they can have

00:20:58.186 --> 00:21:00.186 A:middle
programs acting unpredictably.

00:20:58.186 --> 00:21:00.186 A:middle
programs acting unpredictably.

00:21:00.566 --> 00:21:01.726 A:middle
Or they can even result in

00:21:01.726 --> 00:21:02.476 A:middle
memory corruption.

00:21:03.066 --> 00:21:06.756 A:middle
The Undefined Behavior Sanitizer

00:21:07.136 --> 00:21:08.496 A:middle
captures bugs like dividing by

00:21:08.496 --> 00:21:10.416 A:middle
zero, out of range casts between

00:21:10.416 --> 00:21:12.306 A:middle
floating point types, overflows,

00:21:12.306 --> 00:21:13.466 A:middle
and misaligned pointers.

00:21:13.906 --> 00:21:15.326 A:middle
And when a program has undefined

00:21:15.326 --> 00:21:16.446 A:middle
behavior, it might cause a

00:21:16.446 --> 00:21:17.056 A:middle
crash.

00:21:17.536 --> 00:21:18.646 A:middle
It might act in unpredictable

00:21:18.646 --> 00:21:21.246 A:middle
ways, or it might act like it

00:21:21.246 --> 00:21:23.356 A:middle
has no problem at all with

00:21:23.356 --> 00:21:24.616 A:middle
different results at different

00:21:24.616 --> 00:21:26.296 A:middle
times seemingly with no reason.

00:21:27.256 --> 00:21:28.816 A:middle
Incredibly frustrating bugs; the

00:21:28.816 --> 00:21:30.246 A:middle
sanitizer can help you get rid

00:21:30.246 --> 00:21:31.206 A:middle
of them, before they can wreak

00:21:31.206 --> 00:21:32.226 A:middle
havoc on your project.

00:21:33.556 --> 00:21:35.036 A:middle
And finally, there's the Main

00:21:35.036 --> 00:21:36.656 A:middle
Thread Checker which ensures

00:21:36.706 --> 00:21:38.326 A:middle
that you're not performing

00:21:38.326 --> 00:21:40.886 A:middle
invalid usage of appKit, UIKit,

00:21:41.066 --> 00:21:42.666 A:middle
and other API's on background

00:21:42.666 --> 00:21:42.986 A:middle
threads.

00:21:43.386 --> 00:21:44.726 A:middle
For example, if you're updating

00:21:44.726 --> 00:21:46.166 A:middle
the UI on a thread other than

00:21:46.166 --> 00:21:48.096 A:middle
the main thread, it can cause

00:21:48.186 --> 00:21:49.996 A:middle
missed UI updates, visual

00:21:49.996 --> 00:21:51.866 A:middle
defects, data corruptions and

00:21:51.866 --> 00:21:52.356 A:middle
crashes.

00:21:53.376 --> 00:21:54.496 A:middle
Sometimes these bugs can be

00:21:54.566 --> 00:21:55.726 A:middle
really hard to track down

00:21:55.726 --> 00:21:56.836 A:middle
because they might only appear

00:21:56.836 --> 00:21:57.606 A:middle
intermittently.

00:21:58.136 --> 00:21:59.376 A:middle
Now, there's minimal performance

00:21:59.376 --> 00:22:00.766 A:middle
impact by having this enabled.

00:21:59.376 --> 00:22:00.766 A:middle
impact by having this enabled.

00:22:00.966 --> 00:22:02.226 A:middle
So, we just recommend leaving it

00:22:02.226 --> 00:22:03.486 A:middle
enabled whenever possible.

00:22:04.006 --> 00:22:07.836 A:middle
While debugging your apps, keep

00:22:07.836 --> 00:22:08.976 A:middle
an eye on performance and

00:22:08.976 --> 00:22:10.066 A:middle
resource utilization.

00:22:10.196 --> 00:22:11.226 A:middle
And make sure that your app is

00:22:11.276 --> 00:22:12.676 A:middle
being as efficient with system

00:22:12.676 --> 00:22:13.916 A:middle
resources as possible.

00:22:14.746 --> 00:22:16.366 A:middle
The first step is, use the Debug

00:22:16.406 --> 00:22:16.916 A:middle
Gauges.

00:22:17.676 --> 00:22:18.616 A:middle
These are found in the debug

00:22:18.616 --> 00:22:20.296 A:middle
navigator in Xcode anytime

00:22:20.296 --> 00:22:21.156 A:middle
you've built and run your

00:22:21.156 --> 00:22:21.606 A:middle
project.

00:22:22.866 --> 00:22:24.656 A:middle
Here you can check out CPU,

00:22:24.656 --> 00:22:26.126 A:middle
memory, disk, and network

00:22:26.126 --> 00:22:27.346 A:middle
utilization throughout the

00:22:27.346 --> 00:22:29.596 A:middle
lifecycle of your app, quickly

00:22:29.596 --> 00:22:31.006 A:middle
understand if your app is doing

00:22:31.006 --> 00:22:32.106 A:middle
something like connecting to

00:22:32.106 --> 00:22:33.396 A:middle
unexpected servers over the

00:22:33.396 --> 00:22:33.776 A:middle
network.

00:22:34.026 --> 00:22:35.616 A:middle
Or maybe it's constantly pulling

00:22:35.616 --> 00:22:37.326 A:middle
at an end point, and chewing up

00:22:37.326 --> 00:22:39.106 A:middle
a ton of bandwidth and battery.

00:22:39.746 --> 00:22:42.486 A:middle
And finally, you can take this

00:22:42.486 --> 00:22:44.076 A:middle
even further, by clicking in the

00:22:44.126 --> 00:22:45.536 A:middle
profile and instruments button

00:22:45.776 --> 00:22:46.836 A:middle
which will allow you to run an

00:22:46.836 --> 00:22:48.786 A:middle
even more in-depth analysis.

00:22:49.526 --> 00:22:51.106 A:middle
One particular instrument that I

00:22:51.106 --> 00:22:53.176 A:middle
use a lot is the time profiler.

00:22:53.406 --> 00:22:54.816 A:middle
This allows you to ascertain

00:22:54.816 --> 00:22:56.256 A:middle
which passages of your code are

00:22:56.256 --> 00:22:57.966 A:middle
taking up the most cycles and

00:22:58.136 --> 00:22:59.796 A:middle
has allowed us to narrow in on

00:23:00.346 --> 00:23:02.006 A:middle
passages of work that might need

00:23:02.006 --> 00:23:03.316 A:middle
to be made asynchronous.

00:23:03.676 --> 00:23:05.726 A:middle
Or perhaps, I just implemented

00:23:05.726 --> 00:23:09.706 A:middle
in an unscalable manner.

00:23:10.106 --> 00:23:11.386 A:middle
Analysis is a really broad

00:23:11.386 --> 00:23:11.826 A:middle
subject.

00:23:12.536 --> 00:23:13.356 A:middle
But most of the tools I

00:23:13.356 --> 00:23:14.876 A:middle
described here only require that

00:23:14.876 --> 00:23:16.096 A:middle
you remember to turn them on.

00:23:17.086 --> 00:23:18.886 A:middle
So, simulate typical and poor

00:23:18.886 --> 00:23:20.206 A:middle
networks using that Network Link

00:23:20.206 --> 00:23:20.726 A:middle
Conditioner.

00:23:21.446 --> 00:23:22.656 A:middle
Use those sanitizers and

00:23:22.656 --> 00:23:23.566 A:middle
checkers frequently.

00:23:23.676 --> 00:23:25.166 A:middle
And just leave them enabled, if

00:23:25.166 --> 00:23:25.636 A:middle
you can.

00:23:26.486 --> 00:23:27.836 A:middle
Refer to those Debug Gauges

00:23:27.836 --> 00:23:28.486 A:middle
regularly.

00:23:28.486 --> 00:23:29.726 A:middle
And just keep an eye on the

00:23:29.726 --> 00:23:31.016 A:middle
footprint and performance of

00:23:31.016 --> 00:23:31.416 A:middle
your app.

00:23:32.386 --> 00:23:33.996 A:middle
And dig deeper into issues and

00:23:33.996 --> 00:23:34.946 A:middle
address them with great

00:23:34.986 --> 00:23:36.706 A:middle
precision, by analyzing your

00:23:36.706 --> 00:23:37.796 A:middle
app, using instruments.

00:23:38.306 --> 00:23:39.836 A:middle
Turning these small efforts into

00:23:39.836 --> 00:23:42.366 A:middle
habits will go a long way into

00:23:42.366 --> 00:23:43.616 A:middle
improving the performance and

00:23:43.616 --> 00:23:45.446 A:middle
reliability of your apps.

00:23:46.836 --> 00:23:49.206 A:middle
Back when I lived in Toronto, I

00:23:49.866 --> 00:23:52.416 A:middle
had a single car garage that I

00:23:52.416 --> 00:23:53.566 A:middle
had converted into my

00:23:53.566 --> 00:23:54.336 A:middle
woodworking shop.

00:23:55.586 --> 00:23:56.646 A:middle
It was a cozy space.

00:23:57.526 --> 00:23:59.236 A:middle
And I had it entirely to myself.

00:24:00.296 --> 00:24:01.706 A:middle
But since moving to the Bay

00:24:01.706 --> 00:24:03.926 A:middle
Area, I don't have a space to

00:24:03.926 --> 00:24:04.756 A:middle
myself anymore.

00:24:05.076 --> 00:24:06.396 A:middle
And I've been using various

00:24:06.396 --> 00:24:08.136 A:middle
shared and community woodshops

00:24:08.206 --> 00:24:08.796 A:middle
in the area.

00:24:09.526 --> 00:24:11.226 A:middle
Now, doing so can be a bit

00:24:11.226 --> 00:24:13.526 A:middle
frustrating at times because now

00:24:13.526 --> 00:24:14.536 A:middle
I have to share the tools and

00:24:14.536 --> 00:24:15.616 A:middle
the equipment and the space with

00:24:15.616 --> 00:24:16.236 A:middle
others.

00:24:17.106 --> 00:24:18.836 A:middle
But something I hadn't realized

00:24:18.836 --> 00:24:20.626 A:middle
I would appreciate so much is

00:24:20.626 --> 00:24:22.156 A:middle
the opportunity to bounce ideas

00:24:22.156 --> 00:24:23.996 A:middle
off of others in the shop.

00:24:23.996 --> 00:24:25.336 A:middle
And get their opinions on ways

00:24:25.396 --> 00:24:26.486 A:middle
to go about doing things.

00:24:27.886 --> 00:24:29.526 A:middle
I think with app development the

00:24:29.526 --> 00:24:30.906 A:middle
analog here is that of code

00:24:30.906 --> 00:24:31.216 A:middle
review.

00:24:32.266 --> 00:24:33.816 A:middle
So, for many of the apps I've

00:24:33.846 --> 00:24:34.936 A:middle
built over the years, I've been

00:24:34.936 --> 00:24:35.936 A:middle
the solo developer.

00:24:37.156 --> 00:24:38.136 A:middle
And much like having your own

00:24:38.136 --> 00:24:39.996 A:middle
shop, it feels incredibly fast

00:24:39.996 --> 00:24:43.746 A:middle
and nimble because only your own

00:24:43.746 --> 00:24:44.566 A:middle
opinion matters.

00:24:45.396 --> 00:24:46.976 A:middle
But the drawback is that you

00:24:46.976 --> 00:24:48.226 A:middle
don't have that opportunity to

00:24:48.226 --> 00:24:49.766 A:middle
learn from your colleagues and

00:24:49.816 --> 00:24:52.436 A:middle
peers on better ways to use the

00:24:52.436 --> 00:24:54.416 A:middle
language, frameworks, and SDK.

00:24:55.536 --> 00:24:57.066 A:middle
Often, although there's lots of

00:24:57.066 --> 00:24:58.386 A:middle
ways to approach a problem,

00:24:58.786 --> 00:25:00.316 A:middle
there's often a better way.

00:24:58.786 --> 00:25:00.316 A:middle
there's often a better way.

00:25:01.196 --> 00:25:02.496 A:middle
Something that stands out in

00:25:02.496 --> 00:25:03.966 A:middle
terms of being more concise.

00:25:04.476 --> 00:25:06.226 A:middle
Or maybe is more -- has greater

00:25:06.226 --> 00:25:07.886 A:middle
performance, maintainability or

00:25:07.886 --> 00:25:08.596 A:middle
reliability.

00:25:09.096 --> 00:25:10.486 A:middle
Because, after all, just because

00:25:10.486 --> 00:25:12.646 A:middle
it works, doesn't mean that it's

00:25:12.646 --> 00:25:13.606 A:middle
necessarily right.

00:25:14.216 --> 00:25:15.736 A:middle
Or that it could somehow be

00:25:15.736 --> 00:25:16.746 A:middle
significantly improved.

00:25:17.896 --> 00:25:19.796 A:middle
At Apple, all teams have a

00:25:19.796 --> 00:25:21.226 A:middle
policy where no code makes it

00:25:21.226 --> 00:25:22.706 A:middle
into a project without code

00:25:22.746 --> 00:25:23.046 A:middle
review.

00:25:23.496 --> 00:25:25.106 A:middle
Our team has learned so much

00:25:25.106 --> 00:25:26.016 A:middle
from each other through this

00:25:26.016 --> 00:25:26.596 A:middle
process.

00:25:26.836 --> 00:25:27.956 A:middle
And our code is way more

00:25:27.956 --> 00:25:29.796 A:middle
consistent in its style, let

00:25:29.796 --> 00:25:30.936 A:middle
alone the improvements in the

00:25:30.936 --> 00:25:31.636 A:middle
reliability.

00:25:32.326 --> 00:25:33.856 A:middle
It also ensures that our entire

00:25:33.966 --> 00:25:35.846 A:middle
team is more familiar with a

00:25:35.846 --> 00:25:37.316 A:middle
broader set of the code base,

00:25:37.536 --> 00:25:38.836 A:middle
allowing the range of bugs and

00:25:38.836 --> 00:25:40.306 A:middle
features that we can each tackle

00:25:40.586 --> 00:25:41.436 A:middle
to be much wider.

00:25:42.586 --> 00:25:44.386 A:middle
Now, I have this fortune of

00:25:44.386 --> 00:25:46.166 A:middle
being on a great team of

00:25:46.166 --> 00:25:47.766 A:middle
experienced developers, which

00:25:47.766 --> 00:25:48.906 A:middle
makes this much simpler.

00:25:49.426 --> 00:25:50.646 A:middle
But what if you're running a

00:25:50.646 --> 00:25:52.276 A:middle
company on your own or are the

00:25:52.276 --> 00:25:54.036 A:middle
sole developer on your project?

00:25:55.156 --> 00:25:57.236 A:middle
Well, try to find a way to

00:25:57.236 --> 00:25:58.626 A:middle
connect with fellow developers

00:25:58.836 --> 00:26:00.356 A:middle
in your area or from around the

00:25:58.836 --> 00:26:00.356 A:middle
in your area or from around the

00:26:00.356 --> 00:26:00.646 A:middle
world.

00:26:00.876 --> 00:26:02.086 A:middle
And come up with a way to do a

00:26:02.086 --> 00:26:04.936 A:middle
code review exchange with them.

00:26:05.146 --> 00:26:06.536 A:middle
Maybe investigate meet-ups,

00:26:06.676 --> 00:26:07.886 A:middle
local conferences, and

00:26:07.886 --> 00:26:08.836 A:middle
co-working spaces.

00:26:10.116 --> 00:26:11.156 A:middle
So, now that you're going to do

00:26:11.156 --> 00:26:12.396 A:middle
code review, as part of your

00:26:12.396 --> 00:26:14.146 A:middle
development practice, what makes

00:26:14.146 --> 00:26:14.976 A:middle
a great code review?

00:26:15.766 --> 00:26:18.376 A:middle
Well, first, it means taking the

00:26:18.376 --> 00:26:20.266 A:middle
time to understand each changed

00:26:20.266 --> 00:26:21.016 A:middle
line of code.

00:26:21.396 --> 00:26:22.666 A:middle
There's no point in doing a code

00:26:22.666 --> 00:26:23.786 A:middle
review if it's just a quick

00:26:23.786 --> 00:26:24.206 A:middle
skim.

00:26:26.266 --> 00:26:28.666 A:middle
Second, actually build the

00:26:28.666 --> 00:26:29.116 A:middle
project.

00:26:29.816 --> 00:26:32.656 A:middle
Run it. Don't assume that the

00:26:32.716 --> 00:26:34.446 A:middle
original author actually did

00:26:34.526 --> 00:26:34.726 A:middle
this.

00:26:34.796 --> 00:26:36.246 A:middle
Especially if the last commit

00:26:36.246 --> 00:26:37.716 A:middle
you see in the history was a

00:26:37.716 --> 00:26:38.256 A:middle
merge.

00:26:38.736 --> 00:26:42.186 A:middle
Run those tests.

00:26:42.656 --> 00:26:44.796 A:middle
First, doing so reminds you to

00:26:44.846 --> 00:26:46.266 A:middle
check and see that there are

00:26:46.266 --> 00:26:47.276 A:middle
actually tests.

00:26:47.516 --> 00:26:49.426 A:middle
And that the unit tests pass.

00:26:50.266 --> 00:26:51.246 A:middle
Remember, that just because it

00:26:51.306 --> 00:26:53.136 A:middle
builds doesn't mean that it's

00:26:53.136 --> 00:26:54.326 A:middle
not broken somehow.

00:26:54.866 --> 00:26:57.426 A:middle
Read those comments and

00:26:57.426 --> 00:26:58.656 A:middle
documentation thoroughly.

00:26:58.946 --> 00:27:00.196 A:middle
I mean, there are comments and

00:26:58.946 --> 00:27:00.196 A:middle
I mean, there are comments and

00:27:00.196 --> 00:27:01.546 A:middle
documentation, right?

00:27:02.706 --> 00:27:03.946 A:middle
And then look for spelling and

00:27:03.946 --> 00:27:04.926 A:middle
grammatical errors.

00:27:07.086 --> 00:27:08.426 A:middle
Similarly, look for spelling

00:27:08.426 --> 00:27:09.626 A:middle
errors in variable names.

00:27:10.256 --> 00:27:12.486 A:middle
So, as a Canadian, I have this

00:27:12.486 --> 00:27:14.206 A:middle
long-standing habit of including

00:27:14.206 --> 00:27:16.796 A:middle
"u" in words like colour, which

00:27:16.796 --> 00:27:18.976 A:middle
drives my team absolutely nuts,

00:27:18.976 --> 00:27:20.376 A:middle
when they go and search for

00:27:22.456 --> 00:27:22.596 A:middle
color.

00:27:23.086 --> 00:27:24.626 A:middle
Ensuring consistency in the code

00:27:24.626 --> 00:27:26.096 A:middle
base helps with finding and

00:27:26.096 --> 00:27:27.066 A:middle
using these functions and

00:27:27.066 --> 00:27:28.506 A:middle
variables later on.

00:27:28.566 --> 00:27:32.186 A:middle
And again, it just saves time.

00:27:32.406 --> 00:27:33.756 A:middle
So, even though it might feel

00:27:33.756 --> 00:27:35.116 A:middle
like this process is slowing you

00:27:35.116 --> 00:27:36.786 A:middle
down in the short-term, it will

00:27:36.786 --> 00:27:38.226 A:middle
undoubtedly save you time,

00:27:38.456 --> 00:27:40.086 A:middle
money, and customers in the

00:27:40.086 --> 00:27:41.306 A:middle
future through the reduction of

00:27:41.306 --> 00:27:42.916 A:middle
potential errors and issues in

00:27:42.916 --> 00:27:43.506 A:middle
the long-run.

00:27:44.306 --> 00:27:46.166 A:middle
And your skills, as a developer,

00:27:46.316 --> 00:27:48.236 A:middle
will benefit significantly, when

00:27:48.236 --> 00:27:49.996 A:middle
you approach similar patterns or

00:27:49.996 --> 00:27:51.256 A:middle
challenges in the future.

00:27:54.226 --> 00:27:56.226 A:middle
As developers, we're all

00:27:56.226 --> 00:27:58.126 A:middle
endeavoring to create small,

00:27:58.216 --> 00:28:00.736 A:middle
refined, reusable and testable

00:27:58.216 --> 00:28:00.736 A:middle
refined, reusable and testable

00:28:00.736 --> 00:28:01.676 A:middle
sections of code.

00:28:02.496 --> 00:28:04.476 A:middle
After all, we don't want to have

00:28:04.476 --> 00:28:06.336 A:middle
to constantly recreate the same

00:28:06.336 --> 00:28:07.506 A:middle
code over and over.

00:28:09.256 --> 00:28:10.836 A:middle
Packages and frameworks offer an

00:28:10.836 --> 00:28:12.246 A:middle
opportunity to maintain that

00:28:12.326 --> 00:28:14.116 A:middle
code in a more centralized way.

00:28:14.426 --> 00:28:16.256 A:middle
And offer that functionality in

00:28:16.256 --> 00:28:17.216 A:middle
a portable fashion.

00:28:17.596 --> 00:28:18.926 A:middle
Not only through your current

00:28:18.926 --> 00:28:20.816 A:middle
app, but through other apps that

00:28:20.816 --> 00:28:21.966 A:middle
might be able to leverage that

00:28:21.966 --> 00:28:22.206 A:middle
effort.

00:28:23.426 --> 00:28:24.886 A:middle
If your app includes extensions,

00:28:24.986 --> 00:28:26.736 A:middle
by packaging up your shared code

00:28:26.736 --> 00:28:28.776 A:middle
between -- in a framework, your

00:28:28.776 --> 00:28:30.406 A:middle
binary size will actually reduce

00:28:30.406 --> 00:28:32.256 A:middle
because both your main app and

00:28:32.256 --> 00:28:33.396 A:middle
your extensions can actually

00:28:33.396 --> 00:28:34.616 A:middle
share that same framework.

00:28:35.286 --> 00:28:38.266 A:middle
Of course, creating packages

00:28:38.266 --> 00:28:39.736 A:middle
also offers the opportunity to

00:28:39.736 --> 00:28:40.706 A:middle
share your efforts with the

00:28:40.706 --> 00:28:42.156 A:middle
community especially with the

00:28:42.156 --> 00:28:43.556 A:middle
tight integration now found in

00:28:43.666 --> 00:28:44.346 A:middle
Xcode 11.

00:28:44.906 --> 00:28:47.936 A:middle
But even more than the code that

00:28:47.936 --> 00:28:49.666 A:middle
lives in your app, shared

00:28:49.736 --> 00:28:51.316 A:middle
frameworks, packages, and

00:28:51.316 --> 00:28:52.736 A:middle
libraries need to be accompanied

00:28:52.736 --> 00:28:54.846 A:middle
by great documentation, in order

00:28:54.846 --> 00:28:57.866 A:middle
to be useful to others.

00:28:58.296 --> 00:28:59.516 A:middle
So, embrace packages and

00:28:59.516 --> 00:29:01.216 A:middle
frameworks as a way to break

00:28:59.516 --> 00:29:01.216 A:middle
frameworks as a way to break

00:29:01.216 --> 00:29:02.326 A:middle
apart your code base.

00:29:03.476 --> 00:29:04.396 A:middle
This will also allow you to

00:29:04.396 --> 00:29:06.016 A:middle
scale your work across multiple

00:29:06.016 --> 00:29:07.356 A:middle
apps you might be working on and

00:29:07.356 --> 00:29:07.936 A:middle
maintaining.

00:29:08.716 --> 00:29:10.186 A:middle
Frameworks can help you reduce

00:29:10.226 --> 00:29:11.186 A:middle
the binary size.

00:29:11.796 --> 00:29:14.136 A:middle
And then you can, of course,

00:29:14.136 --> 00:29:15.036 A:middle
share your efforts with the

00:29:15.036 --> 00:29:15.516 A:middle
community.

00:29:16.386 --> 00:29:17.896 A:middle
But be sure to include that

00:29:17.896 --> 00:29:18.916 A:middle
great documentation.

00:29:21.916 --> 00:29:23.426 A:middle
The last area that I want to

00:29:23.426 --> 00:29:25.126 A:middle
talk to you about today is

00:29:25.126 --> 00:29:26.866 A:middle
dependencies, and, specifically,

00:29:26.956 --> 00:29:28.336 A:middle
understanding the benefits and

00:29:28.336 --> 00:29:29.696 A:middle
risks of bringing them into your

00:29:29.696 --> 00:29:30.146 A:middle
project.

00:29:32.096 --> 00:29:33.276 A:middle
Using Swift packages,

00:29:33.646 --> 00:29:35.216 A:middle
frameworks, and other libraries,

00:29:35.816 --> 00:29:37.166 A:middle
offers many benefits.

00:29:37.726 --> 00:29:39.886 A:middle
But before you start to use a

00:29:39.886 --> 00:29:41.946 A:middle
given package, it's really

00:29:41.946 --> 00:29:43.066 A:middle
important to know what's inside

00:29:43.066 --> 00:29:43.266 A:middle
of it.

00:29:43.476 --> 00:29:44.576 A:middle
And what could be potentially

00:29:44.576 --> 00:29:45.846 A:middle
coming along for the ride.

00:29:46.506 --> 00:29:49.006 A:middle
Make sure that you understand

00:29:49.006 --> 00:29:50.216 A:middle
what your dependency is doing

00:29:50.216 --> 00:29:50.676 A:middle
with data.

00:29:51.636 --> 00:29:53.256 A:middle
Ultimately, you're responsible

00:29:53.256 --> 00:29:54.446 A:middle
for the contents of your app.

00:29:55.406 --> 00:29:57.096 A:middle
And what it's doing with user

00:29:57.096 --> 00:29:57.356 A:middle
data.

00:29:58.286 --> 00:29:59.276 A:middle
Make sure that the framework

00:29:59.276 --> 00:30:00.646 A:middle
isn't collecting metrics or

00:29:59.276 --> 00:30:00.646 A:middle
isn't collecting metrics or

00:30:00.646 --> 00:30:01.706 A:middle
device information that's

00:30:01.706 --> 00:30:02.456 A:middle
unnecessary.

00:30:03.356 --> 00:30:04.356 A:middle
And make sure that it's

00:30:04.356 --> 00:30:05.796 A:middle
definitely not sending that data

00:30:05.996 --> 00:30:06.796 A:middle
off device.

00:30:07.306 --> 00:30:10.486 A:middle
Note what other dependency, a

00:30:10.486 --> 00:30:12.256 A:middle
giving dependency, depends on.

00:30:12.836 --> 00:30:14.066 A:middle
And research into those, as

00:30:14.066 --> 00:30:14.316 A:middle
well.

00:30:15.156 --> 00:30:16.396 A:middle
After all, including a

00:30:16.396 --> 00:30:18.066 A:middle
dependency with dependencies now

00:30:18.066 --> 00:30:20.106 A:middle
means that your app is actually

00:30:20.106 --> 00:30:21.876 A:middle
riding on the security and

00:30:21.876 --> 00:30:23.536 A:middle
success of that entire chain.

00:30:24.136 --> 00:30:26.486 A:middle
And, finally, there's one other

00:30:26.486 --> 00:30:27.206 A:middle
possibility.

00:30:27.616 --> 00:30:28.826 A:middle
What if the framework breaks on

00:30:28.826 --> 00:30:28.926 A:middle
you?

00:30:29.976 --> 00:30:31.636 A:middle
What if it becomes unmaintained?

00:30:32.306 --> 00:30:36.056 A:middle
Or what if it just disappears?

00:30:36.116 --> 00:30:37.246 A:middle
It's really important to have a

00:30:37.246 --> 00:30:38.616 A:middle
plan on how you're going to deal

00:30:38.616 --> 00:30:40.036 A:middle
with each of these situations

00:30:40.096 --> 00:30:41.866 A:middle
anytime you're introducing a new

00:30:41.866 --> 00:30:43.136 A:middle
dependency into your project.

00:30:43.456 --> 00:30:45.336 A:middle
After all, your applications

00:30:45.336 --> 00:30:47.106 A:middle
future is now dependent on it.

00:30:48.626 --> 00:30:49.946 A:middle
So, are you going to be able to

00:30:49.946 --> 00:30:51.256 A:middle
fix the open bugs yourself?

00:30:51.346 --> 00:30:52.876 A:middle
Are you going to bring that

00:30:52.876 --> 00:30:54.146 A:middle
project in-house and maintain

00:30:54.146 --> 00:30:54.246 A:middle
it?

00:30:54.866 --> 00:30:56.496 A:middle
Or are you going to plan to have

00:30:56.536 --> 00:30:58.106 A:middle
to completely swap out that

00:30:58.106 --> 00:30:58.996 A:middle
dependency later?

00:30:59.296 --> 00:31:00.616 A:middle
With all of the necessary work

00:30:59.296 --> 00:31:00.616 A:middle
With all of the necessary work

00:31:00.666 --> 00:31:02.386 A:middle
that comes with that task?

00:31:03.296 --> 00:31:04.276 A:middle
The use of external

00:31:04.276 --> 00:31:05.326 A:middle
dependencies, such as Swift

00:31:05.326 --> 00:31:06.716 A:middle
packages, can allow you to move

00:31:06.716 --> 00:31:07.816 A:middle
more quickly and avoid

00:31:07.886 --> 00:31:09.136 A:middle
recreating tools that might

00:31:09.136 --> 00:31:10.536 A:middle
already exist in the community.

00:31:12.006 --> 00:31:14.066 A:middle
But be diligent in their use.

00:31:14.966 --> 00:31:16.166 A:middle
Ensure that they only do what

00:31:16.166 --> 00:31:17.166 A:middle
you expect them to.

00:31:17.636 --> 00:31:19.836 A:middle
And absolutely ensure that they

00:31:19.836 --> 00:31:21.446 A:middle
respect the privacy of people

00:31:21.446 --> 00:31:22.386 A:middle
using your apps.

00:31:23.926 --> 00:31:25.056 A:middle
Make sure you establish that

00:31:25.056 --> 00:31:26.616 A:middle
plan of what you're going to do

00:31:26.616 --> 00:31:28.356 A:middle
if they break or otherwise go

00:31:28.356 --> 00:31:29.126 A:middle
away in the future.

00:31:30.116 --> 00:31:31.366 A:middle
If you make answering these

00:31:31.366 --> 00:31:33.506 A:middle
questions a habit when adding a

00:31:33.506 --> 00:31:35.006 A:middle
new dependency to your project,

00:31:35.566 --> 00:31:36.796 A:middle
it's going to payoff in the long

00:31:36.796 --> 00:31:38.416 A:middle
run, and maximize the benefits

00:31:38.416 --> 00:31:39.000 A:middle
of using them.

00:31:42.726 --> 00:31:44.146 A:middle
With app development projects,

00:31:44.856 --> 00:31:46.146 A:middle
it can sometimes feel like the

00:31:46.146 --> 00:31:48.866 A:middle
last 10% of the project takes

00:31:48.896 --> 00:31:51.396 A:middle
just as long as the first 90% of

00:31:51.396 --> 00:31:51.946 A:middle
the project.

00:31:52.616 --> 00:31:53.866 A:middle
But I think that by trying to

00:31:53.866 --> 00:31:55.376 A:middle
convert some of these practices

00:31:55.376 --> 00:31:57.316 A:middle
and principles into habits, you

00:31:57.316 --> 00:31:58.606 A:middle
can help avoid that feeling.

00:31:59.226 --> 00:32:01.726 A:middle
So, by effectively organizing

00:31:59.226 --> 00:32:01.726 A:middle
So, by effectively organizing

00:32:01.726 --> 00:32:03.056 A:middle
your workspace, you can work

00:32:03.056 --> 00:32:04.836 A:middle
faster and more efficiently

00:32:05.116 --> 00:32:07.036 A:middle
keeping focused on the actual

00:32:07.626 --> 00:32:07.726 A:middle
code.

00:32:08.436 --> 00:32:09.896 A:middle
Through the power of source

00:32:09.896 --> 00:32:11.526 A:middle
control, you can track your code

00:32:11.526 --> 00:32:13.446 A:middle
base with precision, reduce the

00:32:13.446 --> 00:32:14.996 A:middle
odds of regressions, and

00:32:14.996 --> 00:32:16.936 A:middle
expedite the investigation of

00:32:16.936 --> 00:32:17.856 A:middle
bugs that might occur.

00:32:19.046 --> 00:32:20.146 A:middle
By writing helpful and

00:32:20.146 --> 00:32:21.606 A:middle
meaningful comments and

00:32:21.606 --> 00:32:23.166 A:middle
documentation, you can reduce

00:32:23.246 --> 00:32:24.956 A:middle
the cognitive burden whenever

00:32:24.956 --> 00:32:26.476 A:middle
you revisit code in the future

00:32:26.656 --> 00:32:27.956 A:middle
and every time you make use of a

00:32:27.956 --> 00:32:29.576 A:middle
class, Struct, or function that

00:32:29.576 --> 00:32:29.966 A:middle
you've built.

00:32:31.356 --> 00:32:33.086 A:middle
Unit tests will save you at the

00:32:33.086 --> 00:32:34.856 A:middle
eleventh hour, from checking

00:32:34.856 --> 00:32:36.126 A:middle
encode that introduces new

00:32:36.126 --> 00:32:36.606 A:middle
regressions.

00:32:38.046 --> 00:32:39.906 A:middle
Sanitizers and checkers offer

00:32:39.906 --> 00:32:41.446 A:middle
ongoing analysis of your code

00:32:41.856 --> 00:32:43.046 A:middle
and they run in the background

00:32:43.046 --> 00:32:44.246 A:middle
without you even having to think

00:32:44.246 --> 00:32:44.646 A:middle
about it.

00:32:45.166 --> 00:32:46.846 A:middle
Gauges and instruments ensure

00:32:46.846 --> 00:32:48.046 A:middle
that you are being efficient

00:32:48.046 --> 00:32:49.096 A:middle
with your use of system

00:32:49.096 --> 00:32:50.796 A:middle
resources and they'll allow you

00:32:50.796 --> 00:32:52.186 A:middle
to chase down performance and

00:32:52.186 --> 00:32:53.506 A:middle
other issues, with precision.

00:32:54.656 --> 00:32:56.716 A:middle
Code review is not only a chance

00:32:56.716 --> 00:32:57.926 A:middle
to evaluate the style and

00:32:57.966 --> 00:32:59.276 A:middle
function of your code, but an

00:32:59.276 --> 00:33:00.836 A:middle
enormous learning opportunity

00:32:59.276 --> 00:33:00.836 A:middle
enormous learning opportunity

00:33:00.886 --> 00:33:02.426 A:middle
for developing -- for evolving

00:33:02.426 --> 00:33:04.266 A:middle
your skills as a developer and

00:33:04.266 --> 00:33:05.506 A:middle
sharing them with your team and

00:33:05.506 --> 00:33:06.096 A:middle
the community.

00:33:07.176 --> 00:33:08.386 A:middle
Breaking your projects into

00:33:08.386 --> 00:33:10.596 A:middle
smaller and reusable packages

00:33:10.596 --> 00:33:12.106 A:middle
and frameworks can help scale

00:33:12.106 --> 00:33:13.186 A:middle
your work across multiple

00:33:13.186 --> 00:33:14.866 A:middle
projects and allow you to share

00:33:14.866 --> 00:33:14.966 A:middle
it.

00:33:15.876 --> 00:33:17.006 A:middle
There's also those benefits to

00:33:17.006 --> 00:33:17.726 A:middle
binary size.

00:33:18.906 --> 00:33:20.516 A:middle
And finally, the use of external

00:33:20.516 --> 00:33:21.936 A:middle
dependencies, such as Swift

00:33:21.936 --> 00:33:23.496 A:middle
packages, can help you move more

00:33:23.496 --> 00:33:25.466 A:middle
quickly and reuse functions that

00:33:25.466 --> 00:33:26.356 A:middle
might already exist in the

00:33:26.356 --> 00:33:26.846 A:middle
community.

00:33:27.176 --> 00:33:28.916 A:middle
But be diligent in their use.

00:33:29.086 --> 00:33:30.946 A:middle
Understand what they do with

00:33:30.976 --> 00:33:31.626 A:middle
user data.

00:33:31.696 --> 00:33:33.256 A:middle
And establish a plan in case

00:33:33.256 --> 00:33:33.886 A:middle
they go away.

00:33:34.856 --> 00:33:36.486 A:middle
Including these practices as

00:33:36.486 --> 00:33:37.866 A:middle
part of your work as an app

00:33:37.916 --> 00:33:40.196 A:middle
developer will only add a small

00:33:40.196 --> 00:33:41.356 A:middle
bit of time to each phase of

00:33:41.356 --> 00:33:41.986 A:middle
your project.

00:33:41.986 --> 00:33:42.886 A:middle
But it will save you an

00:33:42.886 --> 00:33:44.496 A:middle
incredible amount of time, over

00:33:44.496 --> 00:33:45.976 A:middle
the long run, ensuring your app

00:33:45.976 --> 00:33:46.816 A:middle
is built to last.

00:33:47.676 --> 00:33:49.286 A:middle
I hope that this collection of

00:33:49.286 --> 00:33:50.606 A:middle
ideas and suggestions I've

00:33:50.606 --> 00:33:52.106 A:middle
offered you today, has allowed

00:33:52.106 --> 00:33:53.506 A:middle
you to think about how you too

00:33:53.546 --> 00:33:54.876 A:middle
can further improve your craft

00:33:54.876 --> 00:33:55.756 A:middle
as an app developer.

00:33:56.036 --> 00:33:57.516 A:middle
Practices you might incorporate

00:33:57.766 --> 00:33:58.596 A:middle
to allow you to raise the

00:33:58.596 --> 00:34:00.266 A:middle
quality and durability of your

00:33:58.596 --> 00:34:00.266 A:middle
quality and durability of your

00:34:00.266 --> 00:34:02.146 A:middle
work and conscious efforts that

00:34:02.146 --> 00:34:03.486 A:middle
you can turn into automatic

00:34:03.486 --> 00:34:05.176 A:middle
habits, that allow you to direct

00:34:05.176 --> 00:34:06.666 A:middle
your energy to the areas of most

00:34:06.666 --> 00:34:07.296 A:middle
importance.

00:34:07.556 --> 00:34:09.366 A:middle
For the people who engage with

00:34:09.406 --> 00:34:11.786 A:middle
your apps will feel that care

00:34:11.786 --> 00:34:13.386 A:middle
and love that you've poured into

00:34:13.386 --> 00:34:14.896 A:middle
your work even if they can't

00:34:14.896 --> 00:34:16.025 A:middle
exactly say why.

00:34:16.626 --> 00:34:18.826 A:middle
And you can take great pride in

00:34:18.826 --> 00:34:19.696 A:middle
what you have crafted.

00:34:21.016 --> 00:34:21.326 A:middle
Thank you.

00:34:22.516 --> 00:34:29.505 A:middle
[ Applause ]
