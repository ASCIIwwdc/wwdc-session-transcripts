WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:10.886 --> 00:00:11.736 A:middle
&gt;&gt; Good afternoon.

00:00:12.516 --> 00:00:16.046 A:middle
[ Applause ]

00:00:16.546 --> 00:00:17.616 A:middle
So, my name is Jamie

00:00:17.616 --> 00:00:18.106 A:middle
Montgomerie.

00:00:18.256 --> 00:00:19.496 A:middle
I work in the UIKit team.

00:00:19.496 --> 00:00:20.386 A:middle
I'm going to be joined by

00:00:20.466 --> 00:00:22.336 A:middle
colleagues Glen, Nils and Chris.

00:00:23.056 --> 00:00:24.276 A:middle
Together, we're going to tell

00:00:24.276 --> 00:00:25.946 A:middle
you about taking iPad apps on

00:00:26.036 --> 00:00:27.206 A:middle
the Mac to the next level.

00:00:28.086 --> 00:00:30.916 A:middle
In our first talk Introducing

00:00:30.916 --> 00:00:32.526 A:middle
iPad Apps for the Mac, we

00:00:32.526 --> 00:00:33.416 A:middle
covered the basics.

00:00:33.536 --> 00:00:34.486 A:middle
We showed you how to get your

00:00:34.486 --> 00:00:36.096 A:middle
app building and discuss some of

00:00:36.296 --> 00:00:37.896 A:middle
the key API differences that you

00:00:37.896 --> 00:00:38.566 A:middle
should be aware of.

00:00:39.566 --> 00:00:40.696 A:middle
In this talk, we're going to

00:00:40.696 --> 00:00:42.366 A:middle
show how to go further and make

00:00:42.366 --> 00:00:44.316 A:middle
your app better for Mac, cover

00:00:44.316 --> 00:00:46.196 A:middle
multiplatform differences, talk

00:00:46.196 --> 00:00:47.246 A:middle
a little about some design

00:00:47.246 --> 00:00:49.316 A:middle
considerations, talk about how

00:00:49.316 --> 00:00:50.646 A:middle
the application life cycle

00:00:50.796 --> 00:00:52.786 A:middle
differs for Mac and discuss how

00:00:52.786 --> 00:00:54.746 A:middle
you can distribute your app.

00:00:57.146 --> 00:00:58.356 A:middle
So let's talk about making your

00:00:58.356 --> 00:01:00.146 A:middle
UIKit app a better Mac app.

00:00:58.356 --> 00:01:00.146 A:middle
UIKit app a better Mac app.

00:01:01.256 --> 00:01:03.416 A:middle
The first thing to remember is

00:01:03.416 --> 00:01:06.296 A:middle
that better iPad apps are better

00:01:06.296 --> 00:01:06.926 A:middle
Mac apps.

00:01:07.936 --> 00:01:08.896 A:middle
So we'll talk about some of the

00:01:08.896 --> 00:01:10.176 A:middle
things you can do to make your

00:01:10.176 --> 00:01:12.316 A:middle
app better on iPad and on Mac.

00:01:15.866 --> 00:01:17.766 A:middle
On iPad, your app runs in

00:01:17.766 --> 00:01:19.146 A:middle
everything, from Slide Over in

00:01:19.236 --> 00:01:20.796 A:middle
iPad mini to our beautiful

00:01:20.936 --> 00:01:22.706 A:middle
12.9-inch iPad Pros.

00:01:23.936 --> 00:01:25.336 A:middle
But now running on Mac, that's

00:01:25.336 --> 00:01:25.756 A:middle
not all.

00:01:25.926 --> 00:01:27.086 A:middle
Your app could be running full

00:01:27.166 --> 00:01:28.896 A:middle
screen on a 27-inch iMac, and

00:01:29.816 --> 00:01:32.296 A:middle
that's with a 77% skill factor.

00:01:33.676 --> 00:01:35.856 A:middle
In fact, the 27-inch display is

00:01:35.856 --> 00:01:37.446 A:middle
more like a 35-inch iPad.

00:01:38.466 --> 00:01:40.106 A:middle
So you can fit a lot in that

00:01:40.106 --> 00:01:40.446 A:middle
window.

00:01:41.446 --> 00:01:43.156 A:middle
So use best practices, support

00:01:43.156 --> 00:01:44.396 A:middle
dynamic type and use Auto

00:01:44.396 --> 00:01:46.236 A:middle
Layout, and lastly, remember

00:01:46.446 --> 00:01:48.446 A:middle
that on the Mac app resize fast.

00:01:49.516 --> 00:01:51.126 A:middle
Can your layout code run at 60

00:01:51.126 --> 00:01:51.886 A:middle
frames per second?

00:01:52.686 --> 00:01:54.196 A:middle
If not, you should check it out

00:01:54.196 --> 00:01:55.116 A:middle
using our Instruments

00:01:55.116 --> 00:01:55.766 A:middle
performance tool.

00:01:58.816 --> 00:02:00.476 A:middle
Next, implement great keyboard

00:01:58.816 --> 00:02:00.476 A:middle
Next, implement great keyboard

00:02:00.476 --> 00:02:00.876 A:middle
support.

00:02:01.646 --> 00:02:03.466 A:middle
All Macs have a keyboard and Mac

00:02:03.466 --> 00:02:04.766 A:middle
users' hands are always near

00:02:04.766 --> 00:02:04.946 A:middle
them.

00:02:05.646 --> 00:02:06.886 A:middle
It's increasingly common for

00:02:06.886 --> 00:02:08.126 A:middle
iPads to have keyboards too.

00:02:09.186 --> 00:02:10.455 A:middle
You can use our UIKeyCommand

00:02:10.455 --> 00:02:11.856 A:middle
class to respond to keyboard

00:02:11.856 --> 00:02:12.336 A:middle
shortcuts.

00:02:13.456 --> 00:02:14.546 A:middle
You can respond to standard

00:02:14.546 --> 00:02:15.896 A:middle
responder actions in your view

00:02:15.896 --> 00:02:17.556 A:middle
controllers, things like the

00:02:17.556 --> 00:02:19.466 A:middle
cut, copy and paste methods.

00:02:20.786 --> 00:02:22.326 A:middle
And look after your responder

00:02:22.326 --> 00:02:22.596 A:middle
ping.

00:02:23.446 --> 00:02:24.996 A:middle
Set first responder so that key

00:02:24.996 --> 00:02:26.226 A:middle
commands go to the right places.

00:02:26.446 --> 00:02:29.076 A:middle
And this will help at iPad too.

00:02:29.316 --> 00:02:31.046 A:middle
If your app is a game, consider

00:02:31.046 --> 00:02:32.676 A:middle
supporting game controllers that

00:02:32.676 --> 00:02:33.796 A:middle
will make the experience better

00:02:33.796 --> 00:02:35.586 A:middle
for your iOS and your Mac users.

00:02:39.576 --> 00:02:40.966 A:middle
So a couple of years ago, we

00:02:41.106 --> 00:02:42.686 A:middle
introduced some great drag and

00:02:42.686 --> 00:02:43.846 A:middle
drop APIs in UIKit.

00:02:44.466 --> 00:02:46.386 A:middle
IPad users now expect drag and

00:02:46.386 --> 00:02:47.736 A:middle
drop, and Mac users have

00:02:47.736 --> 00:02:49.436 A:middle
expected it for a long time.

00:02:50.826 --> 00:02:52.066 A:middle
Making great use of UI drag

00:02:52.066 --> 00:02:53.226 A:middle
interaction and UI drop

00:02:53.226 --> 00:02:54.636 A:middle
interaction will make your Mac

00:02:54.836 --> 00:02:56.026 A:middle
and your iPad users happy.

00:02:59.936 --> 00:03:01.316 A:middle
Now this one is always good

00:02:59.936 --> 00:03:01.316 A:middle
Now this one is always good

00:03:01.316 --> 00:03:01.786 A:middle
advice.

00:03:02.066 --> 00:03:02.956 A:middle
Use the latest APIs.

00:03:02.956 --> 00:03:05.266 A:middle
If you haven't done it for a

00:03:05.266 --> 00:03:06.976 A:middle
while, now is the time to

00:03:06.976 --> 00:03:08.456 A:middle
examine your app and look at

00:03:08.456 --> 00:03:09.866 A:middle
your use of deprecated APIs.

00:03:10.006 --> 00:03:12.896 A:middle
I said it's always good advice

00:03:12.896 --> 00:03:14.496 A:middle
but it's even better advice this

00:03:14.496 --> 00:03:16.196 A:middle
year as we discussed in our

00:03:16.196 --> 00:03:17.926 A:middle
introductory talk many of the

00:03:17.926 --> 00:03:19.936 A:middle
deprecated iOS APIs are simply

00:03:19.936 --> 00:03:21.186 A:middle
not available on Mac.

00:03:22.206 --> 00:03:24.736 A:middle
So use WKWebView not UIWebView,

00:03:25.136 --> 00:03:26.876 A:middle
use Metal not OpenGL ES.

00:03:27.556 --> 00:03:29.046 A:middle
We've been working hard on these

00:03:29.046 --> 00:03:30.516 A:middle
modern alternatives and using

00:03:30.516 --> 00:03:31.376 A:middle
them enables you to take

00:03:31.376 --> 00:03:32.786 A:middle
advantage of all that work in

00:03:32.886 --> 00:03:34.556 A:middle
iPad and on Mac.

00:03:38.756 --> 00:03:41.326 A:middle
Lastly, support our new iOS 13

00:03:41.326 --> 00:03:41.726 A:middle
features.

00:03:42.936 --> 00:03:44.426 A:middle
For example, if you support

00:03:44.426 --> 00:03:45.926 A:middle
multiple windows in your iPad

00:03:45.926 --> 00:03:47.966 A:middle
app, every UI window scene will

00:03:47.966 --> 00:03:49.806 A:middle
be a window on Mac.

00:03:50.826 --> 00:03:54.006 A:middle
Support Dark Mode on iPad and

00:03:54.006 --> 00:03:55.626 A:middle
you'll support Dark Mode on Mac

00:03:55.626 --> 00:03:55.846 A:middle
too.

00:03:56.746 --> 00:03:58.206 A:middle
I could call it some specific

00:03:58.206 --> 00:03:59.956 A:middle
talks here but there are a lot

00:03:59.956 --> 00:04:00.396 A:middle
this year.

00:03:59.956 --> 00:04:00.396 A:middle
this year.

00:04:00.646 --> 00:04:02.056 A:middle
So go and have a browse and

00:04:02.056 --> 00:04:02.816 A:middle
watch the ones that you're

00:04:02.816 --> 00:04:04.426 A:middle
interested in, remembering

00:04:04.586 --> 00:04:06.316 A:middle
better iPad apps make better Mac

00:04:07.216 --> 00:04:07.306 A:middle
apps.

00:04:10.356 --> 00:04:12.066 A:middle
So, better iPad apps or better

00:04:12.066 --> 00:04:13.706 A:middle
Mac apps but better Mac apps

00:04:13.786 --> 00:04:15.326 A:middle
also contain refinements just

00:04:15.326 --> 00:04:15.786 A:middle
for Mac.

00:04:17.076 --> 00:04:18.245 A:middle
So we'll take a look about what

00:04:18.245 --> 00:04:19.656 A:middle
you can do to make your UIKit

00:04:19.656 --> 00:04:21.755 A:middle
app feel even more at home on

00:04:21.755 --> 00:04:22.046 A:middle
Mac.

00:04:23.366 --> 00:04:24.456 A:middle
There are a whole range of

00:04:24.456 --> 00:04:25.016 A:middle
things here.

00:04:25.236 --> 00:04:27.006 A:middle
They spend the gamut from making

00:04:27.116 --> 00:04:29.446 A:middle
more use of existing UIKit APIs

00:04:29.446 --> 00:04:32.206 A:middle
to enable unique Mac features to

00:04:32.206 --> 00:04:33.626 A:middle
some APIs that are completely

00:04:33.626 --> 00:04:35.216 A:middle
new on Mac, or at least

00:04:35.506 --> 00:04:36.756 A:middle
completely new to UIKit

00:04:36.756 --> 00:04:37.216 A:middle
developers.

00:04:38.726 --> 00:04:39.956 A:middle
We're going to take a quick look

00:04:39.956 --> 00:04:41.396 A:middle
at the breadth of APIs available

00:04:41.396 --> 00:04:43.336 A:middle
to you now.

00:04:43.566 --> 00:04:44.886 A:middle
So what's the first thing that

00:04:44.886 --> 00:04:46.226 A:middle
you think of that's unique to

00:04:46.226 --> 00:04:46.526 A:middle
Mac?

00:04:47.386 --> 00:04:49.596 A:middle
For me, it's the Menu Bar.

00:04:50.956 --> 00:04:52.156 A:middle
Global Menu Bars are unique to

00:04:52.156 --> 00:04:52.446 A:middle
Mac.

00:04:52.706 --> 00:04:54.316 A:middle
They store all the possible

00:04:54.316 --> 00:04:55.686 A:middle
actions your user can take in

00:04:55.686 --> 00:04:57.176 A:middle
one place and neatly tucked away

00:04:57.176 --> 00:04:57.986 A:middle
at the top of the screen.

00:04:58.956 --> 00:05:01.096 A:middle
They're global to the app and

00:04:58.956 --> 00:05:01.096 A:middle
They're global to the app and

00:05:01.096 --> 00:05:03.326 A:middle
the items in them are enabled or

00:05:03.326 --> 00:05:04.776 A:middle
disabled based on what the user

00:05:04.776 --> 00:05:05.096 A:middle
is doing.

00:05:05.866 --> 00:05:08.506 A:middle
So for your iPad app on Mac, you

00:05:08.506 --> 00:05:09.656 A:middle
can just accept the default Menu

00:05:09.656 --> 00:05:09.936 A:middle
Bar.

00:05:09.936 --> 00:05:11.386 A:middle
No extra work is required.

00:05:11.976 --> 00:05:15.106 A:middle
You can also compose a Menu Bar

00:05:15.106 --> 00:05:16.866 A:middle
in Interface Builder as we saw

00:05:16.866 --> 00:05:17.616 A:middle
in our first session.

00:05:18.896 --> 00:05:20.476 A:middle
Or for field control, you can

00:05:20.476 --> 00:05:21.346 A:middle
customize in code.

00:05:21.966 --> 00:05:24.376 A:middle
So I spoke about UIKeyCommand

00:05:24.376 --> 00:05:24.716 A:middle
earlier.

00:05:24.966 --> 00:05:27.076 A:middle
If you're a sharp-eyed API dev

00:05:27.076 --> 00:05:28.316 A:middle
reader, you'll have noticed that

00:05:28.406 --> 00:05:30.206 A:middle
this year has a new UI command

00:05:30.326 --> 00:05:30.886 A:middle
super class.

00:05:32.126 --> 00:05:35.636 A:middle
And this along with UIMenu and

00:05:35.636 --> 00:05:37.796 A:middle
UIMenuBuilder enable you to take

00:05:37.886 --> 00:05:39.496 A:middle
full control over the Mac Menu

00:05:39.496 --> 00:05:39.746 A:middle
Bar.

00:05:40.476 --> 00:05:41.336 A:middle
We're going to see a demo of

00:05:41.336 --> 00:05:41.916 A:middle
this in a moment.

00:05:43.306 --> 00:05:45.476 A:middle
One neat thing about this API is

00:05:45.476 --> 00:05:46.796 A:middle
that UIKeyCommands that you use

00:05:46.796 --> 00:05:48.676 A:middle
in Menus will be available in

00:05:48.676 --> 00:05:49.196 A:middle
iPad too.

00:05:49.396 --> 00:05:50.466 A:middle
They'll be shown in the

00:05:50.466 --> 00:05:51.806 A:middle
discovery builder you get when

00:05:51.806 --> 00:05:52.996 A:middle
you hold on the Command key.

00:05:53.696 --> 00:05:55.716 A:middle
So if you use this API to make

00:05:55.716 --> 00:05:57.156 A:middle
your app a better Mac app,

00:05:57.686 --> 00:05:58.606 A:middle
you'll be making it a better

00:05:58.606 --> 00:06:02.816 A:middle
iPad app too.

00:05:58.606 --> 00:06:02.816 A:middle
iPad app too.

00:06:02.896 --> 00:06:03.756 A:middle
Now, there's another kind of

00:06:03.756 --> 00:06:05.416 A:middle
menu in Mac, the Context Menu.

00:06:05.746 --> 00:06:06.896 A:middle
It's shown in the Control click

00:06:06.896 --> 00:06:07.536 A:middle
or right click.

00:06:07.976 --> 00:06:09.506 A:middle
And unlike the Main Menu, its

00:06:09.506 --> 00:06:10.486 A:middle
contents are dynamic.

00:06:10.826 --> 00:06:11.716 A:middle
They're based on what's under

00:06:11.716 --> 00:06:12.406 A:middle
the mouse pointer.

00:06:13.446 --> 00:06:15.436 A:middle
We have a great new UIKit API

00:06:15.436 --> 00:06:17.156 A:middle
for this available on iOS 2,

00:06:17.516 --> 00:06:18.926 A:middle
UIContextMenuInteraction.

00:06:19.946 --> 00:06:21.506 A:middle
It uses UICommands and its

00:06:21.506 --> 00:06:22.716 A:middle
sibling, UIAction.

00:06:23.346 --> 00:06:25.006 A:middle
UIAction is block base, so maybe

00:06:25.006 --> 00:06:26.076 A:middle
more suitable for this kind of

00:06:26.076 --> 00:06:26.386 A:middle
menu.

00:06:27.176 --> 00:06:28.766 A:middle
And this cross platform API

00:06:28.896 --> 00:06:30.546 A:middle
works uniquely on Mac showing

00:06:30.546 --> 00:06:31.756 A:middle
the context menu that we're all

00:06:31.756 --> 00:06:32.836 A:middle
used to.

00:06:33.396 --> 00:06:34.726 A:middle
To learn more about this API,

00:06:34.726 --> 00:06:36.116 A:middle
you should check out our

00:06:36.316 --> 00:06:38.666 A:middle
Modernizing Your UI for iOS 13

00:06:38.746 --> 00:06:39.096 A:middle
session.

00:06:43.456 --> 00:06:44.706 A:middle
So we've talked about some new

00:06:44.706 --> 00:06:45.706 A:middle
UIKit APIs.

00:06:45.786 --> 00:06:47.426 A:middle
Here's an old UIKit API,

00:06:47.846 --> 00:06:48.816 A:middle
UISplitViewController.

00:06:49.806 --> 00:06:51.706 A:middle
So the familiar sidebars on Mac

00:06:51.706 --> 00:06:53.296 A:middle
are very similar to Split Views

00:06:53.296 --> 00:06:53.966 A:middle
in iOS.

00:06:54.326 --> 00:06:55.386 A:middle
They're often used for master

00:06:55.386 --> 00:06:56.456 A:middle
detail kinds of UI.

00:06:56.456 --> 00:06:59.566 A:middle
On Mac, UISplitViewController

00:06:59.566 --> 00:07:01.026 A:middle
manage views are automatically

00:06:59.566 --> 00:07:01.026 A:middle
manage views are automatically

00:07:01.066 --> 00:07:02.596 A:middle
drag resizable from the minimum

00:07:02.596 --> 00:07:03.656 A:middle
to maximum column width.

00:07:04.156 --> 00:07:05.446 A:middle
And you can use our new

00:07:05.676 --> 00:07:07.156 A:middle
primaryBackgroundStyle property

00:07:07.386 --> 00:07:08.576 A:middle
to have the left-hand column

00:07:08.746 --> 00:07:10.826 A:middle
take on a Mac sidebar look.

00:07:11.536 --> 00:07:12.796 A:middle
When you're using the sidebar

00:07:12.796 --> 00:07:14.726 A:middle
background style, embedded table

00:07:14.726 --> 00:07:16.226 A:middle
views using either of our group

00:07:16.226 --> 00:07:17.696 A:middle
styles will take on a source

00:07:17.696 --> 00:07:18.966 A:middle
list like appearance and look

00:07:18.966 --> 00:07:20.236 A:middle
right at home on Mac.

00:07:20.826 --> 00:07:21.696 A:middle
We're going to see this in a

00:07:21.696 --> 00:07:23.236 A:middle
second in the demo too.

00:07:26.776 --> 00:07:28.776 A:middle
Hover, it doesn't exist on iPad

00:07:29.076 --> 00:07:30.236 A:middle
but it's an instantly familiar

00:07:30.236 --> 00:07:31.386 A:middle
idea to Mac users.

00:07:32.316 --> 00:07:33.716 A:middle
We've added a new easy to use

00:07:33.716 --> 00:07:34.616 A:middle
gesture recognizer,

00:07:34.736 --> 00:07:36.206 A:middle
UIHoverGestureRecognizer.

00:07:36.726 --> 00:07:38.176 A:middle
It allows you to use Hover in

00:07:38.176 --> 00:07:39.216 A:middle
you UIKit apps.

00:07:39.846 --> 00:07:41.646 A:middle
On screen here, you can see our

00:07:41.646 --> 00:07:43.736 A:middle
stocks app making great use of

00:07:43.736 --> 00:07:45.276 A:middle
this to display prices as the

00:07:45.316 --> 00:07:47.266 A:middle
user moves the most plunger over

00:07:47.266 --> 00:07:47.876 A:middle
the price chart.

00:07:54.336 --> 00:07:55.686 A:middle
Now for some things that differ

00:07:55.686 --> 00:07:56.956 A:middle
completely on Mac, we already

00:07:56.956 --> 00:07:58.326 A:middle
have some great Mac APIs.

00:07:59.026 --> 00:08:00.236 A:middle
One example of this is the

00:07:59.026 --> 00:08:00.236 A:middle
One example of this is the

00:08:00.236 --> 00:08:00.686 A:middle
Toolbar.

00:08:01.216 --> 00:08:02.886 A:middle
Mac apps often have Toolbars at

00:08:02.886 --> 00:08:03.856 A:middle
the top of the window.

00:08:05.176 --> 00:08:06.196 A:middle
Because this is a Mac only

00:08:06.196 --> 00:08:07.556 A:middle
feature, we've exposed the

00:08:07.556 --> 00:08:10.316 A:middle
regular Mac only API, NSToolbar.

00:08:11.256 --> 00:08:12.246 A:middle
You can get to it via your

00:08:12.246 --> 00:08:14.236 A:middle
UIWindowScene's titlebar

00:08:14.346 --> 00:08:14.746 A:middle
property.

00:08:15.816 --> 00:08:18.046 A:middle
There's a demo of this coming up

00:08:20.976 --> 00:08:21.316 A:middle
soon too.

00:08:21.316 --> 00:08:22.646 A:middle
Another kind of bar unique to

00:08:22.646 --> 00:08:23.806 A:middle
Mac is the Touch Bar.

00:08:24.386 --> 00:08:25.966 A:middle
Touch Bars are on Mac harder

00:08:25.966 --> 00:08:26.336 A:middle
feature.

00:08:26.546 --> 00:08:27.926 A:middle
On MacBook Pros, they sit just

00:08:27.926 --> 00:08:29.076 A:middle
above the keyboard, unlike

00:08:29.106 --> 00:08:30.926 A:middle
context menus, what's in them

00:08:30.926 --> 00:08:31.856 A:middle
changes based on the what the

00:08:31.856 --> 00:08:32.466 A:middle
user is doing.

00:08:33.846 --> 00:08:34.905 A:middle
To allow you to support Touch

00:08:34.905 --> 00:08:36.556 A:middle
Bar, we've exposed the existing

00:08:36.556 --> 00:08:38.535 A:middle
NSTouchBar class to UIKit apps.

00:08:39.086 --> 00:08:40.356 A:middle
And it's available via new

00:08:40.356 --> 00:08:42.775 A:middle
UIResponder and UIViewController

00:08:43.395 --> 00:08:43.546 A:middle
APIs.

00:08:46.436 --> 00:08:48.506 A:middle
So there are of course the whole

00:08:48.506 --> 00:08:49.566 A:middle
host of other Mac features you

00:08:49.566 --> 00:08:50.066 A:middle
could adopt.

00:08:50.806 --> 00:08:52.236 A:middle
You can have some control over

00:08:52.236 --> 00:08:54.366 A:middle
window sizing, you could use the

00:08:54.366 --> 00:08:56.086 A:middle
iOS printing APIs to implement

00:08:56.086 --> 00:08:58.456 A:middle
print support on Mac, you can

00:08:58.456 --> 00:08:59.626 A:middle
author a Help Book which will

00:08:59.626 --> 00:09:01.066 A:middle
give your users help accessible

00:08:59.626 --> 00:09:01.066 A:middle
give your users help accessible

00:09:01.066 --> 00:09:03.356 A:middle
directly from the Help Menu, and

00:09:03.356 --> 00:09:04.536 A:middle
you can customize your Assets

00:09:04.536 --> 00:09:06.076 A:middle
And Strings to make how your app

00:09:06.076 --> 00:09:07.736 A:middle
looks or what your app says

00:09:08.056 --> 00:09:08.756 A:middle
unique to Mac.

00:09:09.146 --> 00:09:13.396 A:middle
Now, last but not the least, I'd

00:09:13.396 --> 00:09:14.486 A:middle
like to give a mention to the

00:09:14.486 --> 00:09:15.156 A:middle
app icon.

00:09:16.246 --> 00:09:18.026 A:middle
If you do nothing, your icon for

00:09:18.026 --> 00:09:19.116 A:middle
the iPad app will be used for

00:09:19.116 --> 00:09:20.356 A:middle
your Mac app.

00:09:20.356 --> 00:09:21.956 A:middle
But Mac style differs from iPad

00:09:21.956 --> 00:09:23.906 A:middle
style so you can also create an

00:09:23.906 --> 00:09:25.426 A:middle
icon for your app that's just

00:09:25.426 --> 00:09:26.996 A:middle
for Mac.

00:09:27.096 --> 00:09:28.616 A:middle
This may seem pretty trivial but

00:09:28.616 --> 00:09:29.826 A:middle
it's the first thing that your

00:09:29.826 --> 00:09:30.386 A:middle
users see.

00:09:30.716 --> 00:09:31.846 A:middle
So I encourage you to put some

00:09:31.846 --> 00:09:33.026 A:middle
time and effort into it.

00:09:33.026 --> 00:09:37.566 A:middle
Now, I'd like to introduce my

00:09:37.566 --> 00:09:38.366 A:middle
colleague Glen.

00:09:38.536 --> 00:09:40.056 A:middle
He'll show you firsthand how to

00:09:40.056 --> 00:09:41.486 A:middle
make an iPad app into a better

00:09:41.486 --> 00:09:42.766 A:middle
Mac app.

00:09:43.266 --> 00:09:45.766 A:middle
[Applause]

00:09:46.266 --> 00:09:48.566 A:middle
&gt;&gt; Thanks, Jaime.

00:09:49.276 --> 00:09:51.896 A:middle
As my colleague had said, better

00:09:51.896 --> 00:09:53.486 A:middle
iPad apps make for better Mac

00:09:53.486 --> 00:09:53.906 A:middle
apps.

00:09:54.206 --> 00:09:55.816 A:middle
Let's take an example of this.

00:09:56.976 --> 00:09:58.856 A:middle
So here, we have an app called

00:09:58.856 --> 00:09:59.646 A:middle
ChocolateChip.

00:09:59.766 --> 00:10:01.256 A:middle
It's an iPad app that shows

00:09:59.766 --> 00:10:01.256 A:middle
It's an iPad app that shows

00:10:01.536 --> 00:10:02.406 A:middle
yummy recipes.

00:10:03.356 --> 00:10:06.916 A:middle
In previous demos, all we did

00:10:06.916 --> 00:10:11.066 A:middle
was-- OK, let's and wait for it

00:10:11.066 --> 00:10:11.776 A:middle
to load.

00:10:12.276 --> 00:10:13.936 A:middle
In previous demos, we just

00:10:13.966 --> 00:10:16.606 A:middle
checked the Mac-- checkbox here,

00:10:16.606 --> 00:10:19.316 A:middle
fix any build issues and just

00:10:19.316 --> 00:10:22.406 A:middle
built and ran the app like so.

00:10:22.996 --> 00:10:27.426 A:middle
OK. Just taking a while.

00:10:28.836 --> 00:10:30.246 A:middle
As you can see, we have a

00:10:30.246 --> 00:10:32.256 A:middle
brand-new Mac app with all the

00:10:32.256 --> 00:10:33.916 A:middle
niceties you expect for a Mac

00:10:33.916 --> 00:10:34.176 A:middle
app.

00:10:34.766 --> 00:10:36.556 A:middle
For example, all your content

00:10:36.556 --> 00:10:38.246 A:middle
appears in a window that you can

00:10:38.246 --> 00:10:38.846 A:middle
drag around.

00:10:40.046 --> 00:10:41.356 A:middle
And if you have supported

00:10:41.836 --> 00:10:43.996 A:middle
varying screen sizes and

00:10:43.996 --> 00:10:45.896 A:middle
optimize drawing like Jamie

00:10:45.896 --> 00:10:47.816 A:middle
suggested, you will also be able

00:10:47.816 --> 00:10:50.186 A:middle
to get resizing windows fast and

00:10:50.186 --> 00:10:51.956 A:middle
smooth, like so.

00:10:52.526 --> 00:10:55.246 A:middle
Now, if you will implement it,

00:10:55.246 --> 00:10:57.416 A:middle
the existing move callback in

00:10:57.416 --> 00:10:59.156 A:middle
the table view controller, you

00:10:59.156 --> 00:11:01.536 A:middle
can also reorder rows in the

00:10:59.156 --> 00:11:01.536 A:middle
can also reorder rows in the

00:11:01.536 --> 00:11:03.816 A:middle
table view controller like so

00:11:04.686 --> 00:11:06.046 A:middle
without going through a separate

00:11:06.176 --> 00:11:06.846 A:middle
editing mode.

00:11:07.366 --> 00:11:08.426 A:middle
So this is a Mac feature.

00:11:08.986 --> 00:11:12.126 A:middle
Next, we've used the new

00:11:12.126 --> 00:11:14.886 A:middle
UIContextMenuInteraction API

00:11:15.046 --> 00:11:16.306 A:middle
which we introduced this year,

00:11:17.366 --> 00:11:18.446 A:middle
configure it with the right

00:11:18.496 --> 00:11:21.876 A:middle
UIActions and UICommands, then

00:11:21.996 --> 00:11:23.926 A:middle
your context menus carry over to

00:11:23.926 --> 00:11:25.256 A:middle
the Mac seamlessly.

00:11:26.256 --> 00:11:27.636 A:middle
So here I've got Add to

00:11:27.636 --> 00:11:28.326 A:middle
Favorites.

00:11:28.956 --> 00:11:30.636 A:middle
I can make Donuts my favorites

00:11:30.786 --> 00:11:32.166 A:middle
or I can take that away as well.

00:11:32.746 --> 00:11:35.436 A:middle
Now talking about menus.

00:11:36.616 --> 00:11:38.676 A:middle
You also get a default menu bar

00:11:38.676 --> 00:11:41.016 A:middle
that start with all the default

00:11:41.016 --> 00:11:45.196 A:middle
items that you're used to.

00:11:45.346 --> 00:11:47.396 A:middle
For example, cut, copy, past,

00:11:47.396 --> 00:11:48.246 A:middle
undo and redo.

00:11:48.696 --> 00:11:51.176 A:middle
And these items, menu items are

00:11:51.176 --> 00:11:52.676 A:middle
enabled or disabled depending on

00:11:52.676 --> 00:11:54.626 A:middle
what's on the responder chain.

00:11:56.356 --> 00:12:00.316 A:middle
Finally, if you use the new Dark

00:11:56.356 --> 00:12:00.316 A:middle
Finally, if you use the new Dark

00:12:00.316 --> 00:12:04.166 A:middle
Mode API in iOS and specify your

00:12:04.166 --> 00:12:05.646 A:middle
colors using these system

00:12:05.646 --> 00:12:08.896 A:middle
colors, then Dark Mode works

00:12:09.096 --> 00:12:10.236 A:middle
really well as well.

00:12:11.106 --> 00:12:12.746 A:middle
As you can see, everything goes

00:12:12.746 --> 00:12:15.546 A:middle
dark and all your colors are set

00:12:15.546 --> 00:12:16.496 A:middle
and your highlights are set

00:12:16.496 --> 00:12:18.516 A:middle
correctly as well.

00:12:19.346 --> 00:12:20.426 A:middle
And all of this without a single

00:12:20.426 --> 00:12:20.976 A:middle
line of code.

00:12:23.516 --> 00:12:25.666 A:middle
[ Applause ]

00:12:26.166 --> 00:12:26.606 A:middle
Yeah. Thank you.

00:12:30.616 --> 00:12:32.876 A:middle
But what if you want it to

00:12:32.876 --> 00:12:35.046 A:middle
catalyze your app to the next

00:12:35.046 --> 00:12:35.386 A:middle
level?

00:12:36.116 --> 00:12:37.496 A:middle
If you want it to make it look

00:12:37.496 --> 00:12:38.846 A:middle
and feel like it really belongs

00:12:38.846 --> 00:12:41.476 A:middle
in a Mac, what can we do?

00:12:41.586 --> 00:12:44.126 A:middle
Well, let's fix three things

00:12:44.576 --> 00:12:46.756 A:middle
today, sidebars, toolbars and

00:12:46.856 --> 00:12:47.676 A:middle
menu bars.

00:12:48.766 --> 00:12:49.836 A:middle
So it looks like I'll be your

00:12:49.836 --> 00:12:51.836 A:middle
friendly bartender for today.

00:12:52.466 --> 00:12:54.546 A:middle
Yeah, thanks [laughter].

00:12:55.956 --> 00:13:02.346 A:middle
OK. First order of business is

00:12:55.956 --> 00:13:02.346 A:middle
OK. First order of business is

00:13:02.346 --> 00:13:06.126 A:middle
you look at this master view

00:13:06.126 --> 00:13:06.416 A:middle
here.

00:13:06.416 --> 00:13:07.936 A:middle
This is a master view of the

00:13:07.936 --> 00:13:10.296 A:middle
regular Split View controller.

00:13:10.876 --> 00:13:13.066 A:middle
But it really should look like a

00:13:13.066 --> 00:13:13.846 A:middle
Mac toolbar.

00:13:14.346 --> 00:13:16.546 A:middle
So let's set-- Let's figure out

00:13:16.546 --> 00:13:17.886 A:middle
how to set the toolbar style.

00:13:18.426 --> 00:13:20.996 A:middle
First, we go to the

00:13:21.066 --> 00:13:23.156 A:middle
RecipeSplitViewController and we

00:13:23.156 --> 00:13:25.346 A:middle
need to hook on to the

00:13:25.346 --> 00:13:28.976 A:middle
viewDidLoad delegate call.

00:13:29.786 --> 00:13:31.526 A:middle
And here, our call has to be

00:13:31.526 --> 00:13:33.336 A:middle
conditionalized for UIKit for

00:13:33.336 --> 00:13:36.846 A:middle
Mac so that it only applies for

00:13:36.846 --> 00:13:37.546 A:middle
Mac builds.

00:13:38.726 --> 00:13:41.876 A:middle
And we only need to insert a

00:13:42.286 --> 00:13:44.776 A:middle
primaryBackgroundStyle and a

00:13:44.776 --> 00:13:46.366 A:middle
new, you know, enumeration of

00:13:47.046 --> 00:13:47.456 A:middle
sidebar.

00:13:47.456 --> 00:13:49.416 A:middle
So with this single line of

00:13:49.416 --> 00:13:53.946 A:middle
code, we now have a-- and we

00:13:54.176 --> 00:13:55.526 A:middle
have a quick rebuild.

00:13:55.586 --> 00:13:59.346 A:middle
We now have the sidebar style.

00:14:00.336 --> 00:14:02.106 A:middle
So just to show you how it looks

00:14:02.106 --> 00:14:04.496 A:middle
like and to convince you it

00:14:04.496 --> 00:14:06.486 A:middle
really does look like a sidebar.

00:14:06.486 --> 00:14:07.216 A:middle
You can see it has the

00:14:07.216 --> 00:14:09.416 A:middle
translucency of a sidebar as I

00:14:09.416 --> 00:14:10.096 A:middle
move it around.

00:14:11.386 --> 00:14:12.996 A:middle
The other things about sidebars

00:14:12.996 --> 00:14:15.146 A:middle
are you can also set in the

00:14:15.146 --> 00:14:16.906 A:middle
general preferences the sidebar

00:14:16.906 --> 00:14:17.746 A:middle
icon size.

00:14:18.436 --> 00:14:19.986 A:middle
So here I'm setting it to small.

00:14:20.406 --> 00:14:21.406 A:middle
And as you can see, it

00:14:21.406 --> 00:14:22.496 A:middle
dynamically updates.

00:14:22.496 --> 00:14:24.206 A:middle
You can also set it to large.

00:14:25.606 --> 00:14:26.546 A:middle
I will leave it at medium.

00:14:26.876 --> 00:14:30.166 A:middle
And as before, reordering what's

00:14:30.326 --> 00:14:36.676 A:middle
-- just as what I did before.

00:14:36.826 --> 00:14:38.036 A:middle
OK. Sorry.

00:14:38.266 --> 00:14:40.406 A:middle
Back to the app.

00:14:41.736 --> 00:14:43.386 A:middle
Next, we should really put in a

00:14:43.386 --> 00:14:43.746 A:middle
toolbar.

00:14:44.616 --> 00:14:45.586 A:middle
We have various widgets

00:14:45.586 --> 00:14:47.456 A:middle
integrated into the title bar

00:14:47.456 --> 00:14:52.166 A:middle
chrome so that users can click

00:14:52.166 --> 00:14:53.706 A:middle
on their commonly used commands.

00:14:54.476 --> 00:14:56.586 A:middle
Now, this is different from iOS

00:14:56.586 --> 00:14:58.026 A:middle
where toolbars are typically

00:14:58.026 --> 00:15:00.946 A:middle
found at the bottom of the app.

00:14:58.026 --> 00:15:00.946 A:middle
found at the bottom of the app.

00:15:01.286 --> 00:15:03.086 A:middle
We'll have a widget to filter

00:15:03.086 --> 00:15:03.776 A:middle
the recipes.

00:15:04.296 --> 00:15:06.116 A:middle
We'll also have a widget to add

00:15:06.466 --> 00:15:07.206 A:middle
a new recipe.

00:15:07.706 --> 00:15:08.906 A:middle
So let's see how to do that.

00:15:09.406 --> 00:15:12.966 A:middle
We'll go over to the scene

00:15:12.966 --> 00:15:13.386 A:middle
delegate.

00:15:13.386 --> 00:15:15.396 A:middle
And here in the scene delegate,

00:15:15.396 --> 00:15:18.016 A:middle
we're hooking on to the scene

00:15:18.016 --> 00:15:19.416 A:middle
willConnect callback.

00:15:19.746 --> 00:15:22.876 A:middle
And again, we also have to

00:15:22.876 --> 00:15:24.376 A:middle
conditionalize this for

00:15:24.376 --> 00:15:26.066 A:middle
UIKitForMac so that it only

00:15:26.066 --> 00:15:26.806 A:middle
applies in the Mac.

00:15:28.216 --> 00:15:30.176 A:middle
We're digging into the object

00:15:30.176 --> 00:15:32.276 A:middle
model of the scene-- windowScene

00:15:32.846 --> 00:15:32.966 A:middle
here.

00:15:33.106 --> 00:15:35.176 A:middle
And we grab this object called

00:15:35.176 --> 00:15:35.806 A:middle
the titlebar.

00:15:36.026 --> 00:15:37.646 A:middle
The titlebar allows us to set

00:15:38.136 --> 00:15:41.256 A:middle
toolbars as well as change title

00:15:41.256 --> 00:15:44.156 A:middle
bar visibility.

00:15:45.666 --> 00:15:49.716 A:middle
So let's create a new toolbar.

00:15:49.876 --> 00:15:53.576 A:middle
So, notice now that I'm using NS

00:15:53.576 --> 00:15:54.066 A:middle
prefix.

00:15:54.156 --> 00:15:56.016 A:middle
This is actually AppKit object.

00:15:56.016 --> 00:15:59.736 A:middle
And I need to give it identifier

00:16:01.186 --> 00:16:04.076 A:middle
which I have one previously set.

00:16:05.296 --> 00:16:08.486 A:middle
And all I need to do now is a

00:16:08.486 --> 00:16:09.216 A:middle
title bar.

00:16:09.216 --> 00:16:11.516 A:middle
I want to set the toolbar to the

00:16:11.516 --> 00:16:12.646 A:middle
toolbar I just created.

00:16:13.396 --> 00:16:14.616 A:middle
So with these two lines of code,

00:16:14.986 --> 00:16:16.456 A:middle
I've now created a toolbar

00:16:17.116 --> 00:16:18.206 A:middle
that's attached to the title

00:16:18.206 --> 00:16:18.436 A:middle
bar.

00:16:19.276 --> 00:16:21.096 A:middle
But this code is not

00:16:21.176 --> 00:16:22.486 A:middle
particularly interesting, or the

00:16:22.486 --> 00:16:23.756 A:middle
result is not particularly

00:16:23.816 --> 00:16:25.626 A:middle
interesting because we actually

00:16:25.626 --> 00:16:26.726 A:middle
need to configure the toolbar of

00:16:26.726 --> 00:16:27.576 A:middle
the actual items.

00:16:28.026 --> 00:16:28.976 A:middle
So let's see how to do that.

00:16:35.516 --> 00:16:37.006 A:middle
I'll leave you to assign this

00:16:37.006 --> 00:16:37.846 A:middle
code.

00:16:38.206 --> 00:16:39.896 A:middle
First, we're grabbing-- we need

00:16:39.896 --> 00:16:41.746 A:middle
to grab the rootViewController,

00:16:42.416 --> 00:16:44.116 A:middle
and then we pass it to an

00:16:44.116 --> 00:16:45.126 A:middle
initializer of the

00:16:45.126 --> 00:16:47.246 A:middle
ToolbarDelegate which is a class

00:16:47.246 --> 00:16:47.966 A:middle
we've created.

00:16:48.826 --> 00:16:50.516 A:middle
And we set up the delegate.

00:16:51.196 --> 00:16:52.736 A:middle
We want to allow user

00:16:52.736 --> 00:16:54.726 A:middle
customization of the toolbar.

00:16:55.446 --> 00:16:57.336 A:middle
We also want to center the

00:16:57.336 --> 00:16:59.036 A:middle
navigationItem which is the

00:16:59.036 --> 00:17:00.276 A:middle
filter that I talked about.

00:16:59.036 --> 00:17:00.276 A:middle
filter that I talked about.

00:17:01.056 --> 00:17:03.666 A:middle
And finally, I want to set the

00:17:03.666 --> 00:17:06.636 A:middle
titleVisibility to hidden so

00:17:06.636 --> 00:17:09.965 A:middle
that the title doesn't overlap

00:17:10.256 --> 00:17:11.965 A:middle
the navigation item that I've

00:17:12.126 --> 00:17:12.786 A:middle
just created.

00:17:14.106 --> 00:17:18.376 A:middle
So, with a quick recompile and

00:17:18.376 --> 00:17:20.586 A:middle
build, we now have a toolbar.

00:17:21.156 --> 00:17:23.396 A:middle
And you can see the toolbar has

00:17:23.396 --> 00:17:26.665 A:middle
filters for various meals.

00:17:26.726 --> 00:17:29.376 A:middle
So, you know, for breakfast I

00:17:29.376 --> 00:17:30.536 A:middle
think I'm having donuts.

00:17:31.816 --> 00:17:33.466 A:middle
For lunch, I'm having pizzas.

00:17:34.656 --> 00:17:35.506 A:middle
For dinner, I'm having

00:17:35.506 --> 00:17:36.096 A:middle
spaghetti.

00:17:36.716 --> 00:17:37.896 A:middle
Hopefully for desert I'm not

00:17:37.896 --> 00:17:39.016 A:middle
having spaghetti again.

00:17:39.596 --> 00:17:41.666 A:middle
Wow, it's chocolate chip

00:17:41.666 --> 00:17:41.976 A:middle
cookies.

00:17:44.946 --> 00:17:47.486 A:middle
Yes. And we also have a plus

00:17:47.486 --> 00:17:49.296 A:middle
widget or the add item widget

00:17:49.996 --> 00:17:55.336 A:middle
which allows us to add new

00:17:55.446 --> 00:17:55.976 A:middle
recipes.

00:17:56.516 --> 00:18:00.256 A:middle
OK. Finally, we should actually

00:17:56.516 --> 00:18:00.256 A:middle
OK. Finally, we should actually

00:18:00.256 --> 00:18:02.186 A:middle
also customize the menu bar so

00:18:02.186 --> 00:18:04.166 A:middle
that users can find all the

00:18:04.846 --> 00:18:05.966 A:middle
commands they want in a

00:18:05.966 --> 00:18:06.876 A:middle
convenient place.

00:18:07.366 --> 00:18:08.736 A:middle
Now, menu bars are great places

00:18:08.736 --> 00:18:10.366 A:middle
to put all the commands you want

00:18:10.536 --> 00:18:11.716 A:middle
and the system will enable or

00:18:11.716 --> 00:18:13.796 A:middle
disable them accordingly, in

00:18:13.796 --> 00:18:16.026 A:middle
contrast to toolbars where you

00:18:16.026 --> 00:18:17.426 A:middle
might only put commonly used

00:18:17.426 --> 00:18:17.866 A:middle
commands.

00:18:18.396 --> 00:18:21.096 A:middle
In the introduction session, we

00:18:21.096 --> 00:18:22.766 A:middle
showed you how to do this by

00:18:23.146 --> 00:18:25.536 A:middle
dragging out a menu bar in Xcode

00:18:25.536 --> 00:18:26.346 A:middle
Interface Builder.

00:18:27.216 --> 00:18:28.406 A:middle
But sometimes you want to better

00:18:28.406 --> 00:18:30.466 A:middle
control your menus at runtime.

00:18:30.466 --> 00:18:32.426 A:middle
So I'll show you how to do this

00:18:32.486 --> 00:18:32.946 A:middle
in code.

00:18:33.466 --> 00:18:35.686 A:middle
What are we going to do?

00:18:35.686 --> 00:18:36.556 A:middle
We are going to remove the

00:18:36.556 --> 00:18:37.896 A:middle
Format menu because having a

00:18:38.476 --> 00:18:40.666 A:middle
Format menu doesn't make a lot

00:18:40.666 --> 00:18:43.196 A:middle
of sense because this app has no

00:18:43.196 --> 00:18:43.956 A:middle
editable text.

00:18:44.636 --> 00:18:46.426 A:middle
So not a lot of sense to have a

00:18:46.426 --> 00:18:49.136 A:middle
font menu or even text

00:18:49.176 --> 00:18:49.706 A:middle
alignment.

00:18:50.896 --> 00:18:54.126 A:middle
We also want to add two items to

00:18:54.126 --> 00:18:54.896 A:middle
the File menu.

00:18:55.496 --> 00:18:58.346 A:middle
So here, I want to add a new

00:18:58.346 --> 00:19:00.566 A:middle
recipe command which is similar

00:18:58.346 --> 00:19:00.566 A:middle
recipe command which is similar

00:19:00.566 --> 00:19:04.776 A:middle
to the add recipe widget here.

00:19:04.996 --> 00:19:06.716 A:middle
And we also want to add a

00:19:06.716 --> 00:19:08.296 A:middle
command to add or remove

00:19:08.336 --> 00:19:10.306 A:middle
favorite status which is similar

00:19:11.036 --> 00:19:12.916 A:middle
to the context menu here.

00:19:15.056 --> 00:19:15.226 A:middle
All right.

00:19:15.226 --> 00:19:15.976 A:middle
Let's see how to do that.

00:19:20.156 --> 00:19:21.246 A:middle
We'll go over to the app

00:19:21.246 --> 00:19:21.706 A:middle
delegate.

00:19:21.706 --> 00:19:23.436 A:middle
And here in the app delegate, we

00:19:23.436 --> 00:19:25.206 A:middle
need to override a single

00:19:25.206 --> 00:19:25.616 A:middle
method.

00:19:29.896 --> 00:19:32.136 A:middle
And this method is buildCommands

00:19:32.786 --> 00:19:34.736 A:middle
with builder, and it gets passed

00:19:34.736 --> 00:19:35.766 A:middle
a UICommandBuilder.

00:19:36.426 --> 00:19:38.736 A:middle
In subsequent seeds, this will

00:19:38.736 --> 00:19:40.816 A:middle
be called buildMenu and

00:19:41.566 --> 00:19:44.086 A:middle
buildMenu with builder and that

00:19:44.086 --> 00:19:46.006 A:middle
will be passed a UIMenuBuilder.

00:19:46.006 --> 00:19:48.796 A:middle
So be aware of that if you are

00:19:48.796 --> 00:19:50.846 A:middle
working with the current seed.

00:19:51.906 --> 00:19:53.246 A:middle
First thing you need to do is to

00:19:53.246 --> 00:19:54.936 A:middle
make sure that we're actually

00:19:54.936 --> 00:19:56.196 A:middle
building for the Main menu.

00:19:56.916 --> 00:19:58.256 A:middle
So here we're guarding against

00:19:58.966 --> 00:20:00.176 A:middle
checking to see that the system

00:19:58.966 --> 00:20:00.176 A:middle
checking to see that the system

00:20:00.176 --> 00:20:00.976 A:middle
is the main system.

00:20:01.556 --> 00:20:04.036 A:middle
Sometimes you'll get a .context

00:20:04.136 --> 00:20:05.596 A:middle
if you're building for the-- a

00:20:05.596 --> 00:20:06.266 A:middle
context menu.

00:20:06.806 --> 00:20:09.606 A:middle
With that, we need to talk to

00:20:09.606 --> 00:20:09.986 A:middle
the builder.

00:20:10.566 --> 00:20:14.826 A:middle
So builder, I want to remove a

00:20:15.596 --> 00:20:16.666 A:middle
particular menu.

00:20:18.076 --> 00:20:20.066 A:middle
So here, this menu that I wanted

00:20:20.066 --> 00:20:21.156 A:middle
to remove is a Format menu.

00:20:21.156 --> 00:20:22.536 A:middle
So as you can see, code

00:20:22.536 --> 00:20:24.116 A:middle
completion helps you out a lot

00:20:24.636 --> 00:20:28.386 A:middle
and suggests what kinds of menus

00:20:28.386 --> 00:20:31.936 A:middle
you can actually remove.

00:20:32.056 --> 00:20:35.646 A:middle
So quick build and run.

00:20:36.236 --> 00:20:37.586 A:middle
You can see we've removed the

00:20:37.586 --> 00:20:39.096 A:middle
Format menu from between the

00:20:39.096 --> 00:20:39.846 A:middle
Edit and View.

00:20:40.426 --> 00:20:43.866 A:middle
So, let's go back to this.

00:20:44.486 --> 00:20:45.926 A:middle
So the builder is actually

00:20:45.926 --> 00:20:46.666 A:middle
pretty flexible.

00:20:46.666 --> 00:20:47.936 A:middle
You can do anything from

00:20:47.936 --> 00:20:49.386 A:middle
replacing an entire menu

00:20:49.386 --> 00:20:51.416 A:middle
structure to making selective

00:20:51.416 --> 00:20:52.516 A:middle
edits like what I'm doing.

00:20:53.856 --> 00:20:56.536 A:middle
OK. So next thing I want to do

00:20:56.606 --> 00:20:58.606 A:middle
is I actually want to insert the

00:20:58.606 --> 00:20:59.046 A:middle
content.

00:20:59.796 --> 00:21:01.806 A:middle
So let's do a talk to the

00:20:59.796 --> 00:21:01.806 A:middle
So let's do a talk to the

00:21:01.806 --> 00:21:04.196 A:middle
builder and say insert a child

00:21:04.816 --> 00:21:08.486 A:middle
at the start here of the File

00:21:08.586 --> 00:21:08.896 A:middle
menu.

00:21:09.426 --> 00:21:12.976 A:middle
So, what about this content?

00:21:16.776 --> 00:21:21.736 A:middle
I have a little commands here

00:21:21.736 --> 00:21:23.416 A:middle
that will be added.

00:21:23.776 --> 00:21:24.926 A:middle
The first one is

00:21:24.926 --> 00:21:25.846 A:middle
newRecipeCommand.

00:21:26.336 --> 00:21:28.746 A:middle
And this is a key command which

00:21:28.746 --> 00:21:31.606 A:middle
is hooked on to the createRecipe

00:21:32.416 --> 00:21:33.286 A:middle
method.

00:21:33.876 --> 00:21:36.126 A:middle
And it's a key command so it

00:21:36.126 --> 00:21:39.816 A:middle
will take a input of f and a

00:21:39.816 --> 00:21:41.016 A:middle
command and option.

00:21:41.016 --> 00:21:42.406 A:middle
So if you press Command option

00:21:42.406 --> 00:21:44.646 A:middle
f, you'll also be able to invoke

00:21:44.646 --> 00:21:45.656 A:middle
this UIKeyCommand.

00:21:46.186 --> 00:21:47.066 A:middle
The nice thing about having a

00:21:47.066 --> 00:21:50.036 A:middle
UIKeyCommand here is this is

00:21:50.306 --> 00:21:51.526 A:middle
perfectly cross platform.

00:21:51.656 --> 00:21:53.316 A:middle
This will also appear, you know,

00:21:53.476 --> 00:21:55.126 A:middle
discoverability view or

00:21:55.126 --> 00:21:57.386 A:middle
discoverability had that you get

00:21:57.386 --> 00:21:57.916 A:middle
on the iPad.

00:21:58.356 --> 00:22:00.266 A:middle
So without conditionalizing any

00:21:58.356 --> 00:22:00.266 A:middle
So without conditionalizing any

00:22:00.266 --> 00:22:01.076 A:middle
code.

00:22:01.276 --> 00:22:03.146 A:middle
This works on both Mac as well

00:22:03.896 --> 00:22:05.356 A:middle
as iOS.

00:22:05.526 --> 00:22:08.166 A:middle
Next, we can create a

00:22:08.166 --> 00:22:09.106 A:middle
makeFavoriteCommand.

00:22:09.606 --> 00:22:10.606 A:middle
And this is just a regular

00:22:10.606 --> 00:22:12.126 A:middle
command without any key

00:22:12.126 --> 00:22:12.606 A:middle
equivalence.

00:22:13.596 --> 00:22:17.006 A:middle
And this goes to toggleSelected

00:22:17.316 --> 00:22:18.476 A:middle
RecipeFavoriteState.

00:22:19.056 --> 00:22:21.866 A:middle
And finally, we make a menu

00:22:21.866 --> 00:22:24.236 A:middle
which is a construct that groups

00:22:24.776 --> 00:22:25.946 A:middle
both the new command--

00:22:25.946 --> 00:22:27.076 A:middle
newRecipeCommand and the

00:22:27.076 --> 00:22:27.976 A:middle
makeFavoriteCommand.

00:22:28.606 --> 00:22:30.496 A:middle
One thing to highlight here is

00:22:30.496 --> 00:22:32.386 A:middle
we're passing the options of

00:22:32.896 --> 00:22:35.056 A:middle
displayInline so that the menu

00:22:35.056 --> 00:22:37.186 A:middle
will be displayed-- the contents

00:22:37.186 --> 00:22:38.166 A:middle
in the menu will be displayed

00:22:38.166 --> 00:22:40.366 A:middle
together with the parent.

00:22:40.606 --> 00:22:42.296 A:middle
If you omitted these options,

00:22:42.356 --> 00:22:43.956 A:middle
what will happen is the menu

00:22:43.956 --> 00:22:44.976 A:middle
will be displayed as a

00:22:44.976 --> 00:22:46.646 A:middle
hierarchical menu which is what

00:22:46.646 --> 00:22:49.756 A:middle
you might be used to on the Mac.

00:22:49.806 --> 00:22:51.696 A:middle
OK. Let's see what this looks

00:22:51.696 --> 00:22:52.896 A:middle
like here.

00:22:55.046 --> 00:22:56.746 A:middle
So we insert this into the-- at

00:22:56.786 --> 00:22:57.736 A:middle
the beginning of File menu.

00:22:58.356 --> 00:23:01.656 A:middle
OK. We have a quick rebuild and

00:22:58.356 --> 00:23:01.656 A:middle
OK. We have a quick rebuild and

00:23:01.656 --> 00:23:01.906 A:middle
run.

00:23:02.676 --> 00:23:05.876 A:middle
As you can see, it now has a New

00:23:05.876 --> 00:23:08.766 A:middle
Recipe command which does the

00:23:08.766 --> 00:23:10.096 A:middle
same thing as that plus widget.

00:23:10.636 --> 00:23:13.066 A:middle
It also has a Make Favorite

00:23:13.856 --> 00:23:16.596 A:middle
which does-- it gives a love

00:23:16.596 --> 00:23:18.186 A:middle
heart on the chocolate chips.

00:23:18.966 --> 00:23:20.316 A:middle
And we can remove favorites as

00:23:20.346 --> 00:23:20.526 A:middle
well.

00:23:21.276 --> 00:23:23.856 A:middle
In summary, what I've shown you

00:23:23.856 --> 00:23:26.736 A:middle
is how much you get for free

00:23:27.166 --> 00:23:30.316 A:middle
just by rebuilding your iPad app

00:23:30.316 --> 00:23:31.056 A:middle
on the Mac.

00:23:31.546 --> 00:23:34.376 A:middle
I've also shown you sidebars,

00:23:34.666 --> 00:23:37.176 A:middle
toolbars and menu bars to take

00:23:37.176 --> 00:23:38.736 A:middle
you all-- to catalyze your app

00:23:39.056 --> 00:23:39.826 A:middle
to the next level.

00:23:40.486 --> 00:23:42.206 A:middle
So it's over to you, Jamie, for

00:23:42.206 --> 00:23:42.976 A:middle
some design considerations.

00:23:43.516 --> 00:23:46.866 A:middle
[ Applause ]

00:23:47.366 --> 00:23:47.676 A:middle
&gt;&gt; Thanks, Glen.

00:23:52.726 --> 00:23:54.836 A:middle
So, now we've talked about some

00:23:54.836 --> 00:23:55.886 A:middle
of the technical details of

00:23:55.886 --> 00:23:57.496 A:middle
adapting your iPad app for Mac,

00:23:58.136 --> 00:23:59.816 A:middle
let's take a short dip into some

00:23:59.816 --> 00:24:00.876 A:middle
design considerations.

00:23:59.816 --> 00:24:00.876 A:middle
design considerations.

00:24:03.256 --> 00:24:04.906 A:middle
First, Navigation.

00:24:05.686 --> 00:24:07.806 A:middle
Think about how your users find

00:24:07.806 --> 00:24:08.716 A:middle
their way around your app.

00:24:09.596 --> 00:24:10.756 A:middle
If you're not already think

00:24:10.756 --> 00:24:12.606 A:middle
about using a sidebar on Mac and

00:24:12.606 --> 00:24:14.416 A:middle
maybe a Split View on iPad too,

00:24:15.766 --> 00:24:17.466 A:middle
and reconsider your use of tab

00:24:17.506 --> 00:24:17.846 A:middle
bars.

00:24:17.936 --> 00:24:19.356 A:middle
On the Mac, you should consider

00:24:19.356 --> 00:24:20.696 A:middle
using a segmented control in the

00:24:20.696 --> 00:24:21.736 A:middle
toolbar instead.

00:24:26.336 --> 00:24:27.226 A:middle
Next, layout.

00:24:27.886 --> 00:24:29.086 A:middle
We've talked about screen sizes

00:24:29.116 --> 00:24:29.556 A:middle
already.

00:24:29.716 --> 00:24:31.256 A:middle
It should be flexible in your

00:24:31.256 --> 00:24:32.636 A:middle
layout and take advantage of the

00:24:32.636 --> 00:24:33.296 A:middle
big window.

00:24:34.356 --> 00:24:35.876 A:middle
You can reflow and redesign your

00:24:35.876 --> 00:24:37.416 A:middle
user interface and you can sue

00:24:37.416 --> 00:24:39.276 A:middle
custom assets to reword hardware

00:24:39.276 --> 00:24:40.996 A:middle
related content or just to take

00:24:40.996 --> 00:24:41.956 A:middle
advantage of the space.

00:24:46.106 --> 00:24:48.706 A:middle
iPad design is larger than Mac

00:24:48.706 --> 00:24:49.086 A:middle
design.

00:24:49.086 --> 00:24:50.226 A:middle
It's optimized for touch.

00:24:51.076 --> 00:24:52.426 A:middle
So baseline font sizes are not

00:24:52.426 --> 00:24:52.776 A:middle
the same.

00:24:52.976 --> 00:24:55.456 A:middle
On iOS, most text is 17 points

00:24:55.646 --> 00:24:57.456 A:middle
and on Mac it's 13 points.

00:24:58.486 --> 00:25:00.476 A:middle
So we scale UIKit content for

00:24:58.486 --> 00:25:00.476 A:middle
So we scale UIKit content for

00:25:00.476 --> 00:25:02.736 A:middle
you by 77% compared to how it

00:25:02.736 --> 00:25:04.346 A:middle
would appear in an AppKit app.

00:25:05.336 --> 00:25:07.246 A:middle
This means that UIKit points are

00:25:07.246 --> 00:25:08.936 A:middle
smaller than AppKit points on

00:25:08.936 --> 00:25:09.276 A:middle
screen.

00:25:09.876 --> 00:25:11.576 A:middle
Even bitmap graphics in UIKit

00:25:11.576 --> 00:25:14.286 A:middle
apps will be shown at 77% of the

00:25:14.286 --> 00:25:15.416 A:middle
size that they would be in an

00:25:15.416 --> 00:25:16.016 A:middle
AppKit app.

00:25:17.326 --> 00:25:18.346 A:middle
Now because the scaling is

00:25:18.346 --> 00:25:19.816 A:middle
global to the app, in most

00:25:19.816 --> 00:25:20.836 A:middle
cases, you don't need to worry

00:25:20.836 --> 00:25:21.166 A:middle
about it.

00:25:22.366 --> 00:25:23.806 A:middle
If you do want some more direct

00:25:23.806 --> 00:25:25.346 A:middle
control especially over font

00:25:25.346 --> 00:25:27.226 A:middle
scaling, you should look at the

00:25:27.226 --> 00:25:28.906 A:middle
Font Management and Text Scaling

00:25:28.906 --> 00:25:33.526 A:middle
session to learn all about it.

00:25:33.576 --> 00:25:34.516 A:middle
And menu bars.

00:25:35.046 --> 00:25:36.406 A:middle
We talked about the how already,

00:25:36.406 --> 00:25:38.056 A:middle
but what should you put in it?

00:25:39.366 --> 00:25:40.386 A:middle
So I mentioned that the menu

00:25:40.386 --> 00:25:42.246 A:middle
contains all possible actions in

00:25:42.246 --> 00:25:44.086 A:middle
one place that is global to the

00:25:44.086 --> 00:25:45.706 A:middle
app and that items are enabled

00:25:45.706 --> 00:25:47.126 A:middle
or disabled based on what the

00:25:47.126 --> 00:25:47.696 A:middle
user is doing.

00:25:48.546 --> 00:25:49.446 A:middle
This means that what's in the

00:25:49.446 --> 00:25:51.016 A:middle
menus shouldn't change.

00:25:51.016 --> 00:25:53.026 A:middle
You should build it only once at

00:25:53.026 --> 00:25:53.536 A:middle
launch time.

00:25:54.616 --> 00:25:55.626 A:middle
And you really should think

00:25:55.626 --> 00:25:56.946 A:middle
about all the functions your app

00:25:56.946 --> 00:25:58.506 A:middle
has and make sure they're all

00:25:58.506 --> 00:25:59.896 A:middle
available via the menu bar.

00:26:04.166 --> 00:26:05.246 A:middle
And we just talked about how the

00:26:05.246 --> 00:26:06.426 A:middle
iPad is optimized for touch.

00:26:07.206 --> 00:26:08.666 A:middle
One thing that's unique to iPad

00:26:08.666 --> 00:26:09.896 A:middle
is direct multitouch.

00:26:10.606 --> 00:26:12.186 A:middle
The Mac doesn't have this but it

00:26:12.186 --> 00:26:13.886 A:middle
does always have a keyboard and

00:26:13.886 --> 00:26:14.756 A:middle
the mouse or trackpad.

00:26:15.346 --> 00:26:17.066 A:middle
You should think about how you

00:26:17.066 --> 00:26:18.496 A:middle
can map the gestures used in

00:26:18.496 --> 00:26:20.246 A:middle
your app to these input devices,

00:26:20.686 --> 00:26:22.536 A:middle
reimplementing them for mouse

00:26:22.536 --> 00:26:23.206 A:middle
and trackpad on Mac.

00:26:23.206 --> 00:26:23.776 A:middle
And when you're doing this,

00:26:24.576 --> 00:26:25.476 A:middle
remember to consider

00:26:25.476 --> 00:26:25.976 A:middle
accessibility.

00:26:29.356 --> 00:26:31.026 A:middle
Now that really was just a short

00:26:31.026 --> 00:26:32.146 A:middle
dip into design topics.

00:26:32.466 --> 00:26:33.636 A:middle
There's lots of useful

00:26:33.636 --> 00:26:35.296 A:middle
information on device in the Mac

00:26:35.296 --> 00:26:36.496 A:middle
Human Interface Guidelines.

00:26:37.106 --> 00:26:38.086 A:middle
You should look at it while

00:26:38.086 --> 00:26:38.846 A:middle
you're designing your app.

00:26:38.846 --> 00:26:41.046 A:middle
And I encourage you to check out

00:26:41.246 --> 00:26:42.946 A:middle
the Design for iPad Apps on Mac

00:26:42.946 --> 00:26:43.246 A:middle
talk.

00:26:43.786 --> 00:26:45.576 A:middle
It contains lots of great advice

00:26:45.676 --> 00:26:47.036 A:middle
on how to make your UIKit app a

00:26:47.036 --> 00:26:50.726 A:middle
great Mac app.

00:26:50.976 --> 00:26:52.886 A:middle
So now we've talked about making

00:26:53.006 --> 00:26:54.616 A:middle
your iPad app into a better Mac

00:26:54.616 --> 00:26:56.556 A:middle
app, I'd like to introduce Nils

00:26:56.706 --> 00:26:57.846 A:middle
who'll talk about another thing

00:26:57.846 --> 00:26:59.286 A:middle
that's unique to UIKit apps on

00:26:59.286 --> 00:27:01.126 A:middle
Mac, the application lifecycle.

00:26:59.286 --> 00:27:01.126 A:middle
Mac, the application lifecycle.

00:27:02.351 --> 00:27:04.351 A:middle
[ Applause ]

00:27:04.686 --> 00:27:05.226 A:middle
&gt;&gt; Thank you Jamie.

00:27:06.306 --> 00:27:07.256 A:middle
Good afternoon, everyone.

00:27:07.706 --> 00:27:08.716 A:middle
My name is Nils Beck.

00:27:08.856 --> 00:27:10.526 A:middle
I'm an engineer with the AppKit

00:27:10.606 --> 00:27:12.076 A:middle
framework team and I'm excited

00:27:12.136 --> 00:27:13.806 A:middle
to talk to you today about the

00:27:13.806 --> 00:27:15.456 A:middle
application lifecycle of your

00:27:15.456 --> 00:27:17.346 A:middle
iPad app for the Mac.

00:27:18.476 --> 00:27:19.656 A:middle
When we compare the app

00:27:19.656 --> 00:27:21.636 A:middle
lifecycle on iOS to that on

00:27:21.636 --> 00:27:23.376 A:middle
macOS, we find that there are

00:27:23.376 --> 00:27:24.006 A:middle
differences.

00:27:24.546 --> 00:27:26.396 A:middle
In some iOS, specific behaviors

00:27:26.506 --> 00:27:28.066 A:middle
are reflected in the UIKit API.

00:27:29.546 --> 00:27:30.856 A:middle
This presents a challenge when

00:27:30.856 --> 00:27:32.606 A:middle
running iPad apps on the Mac.

00:27:33.666 --> 00:27:36.026 A:middle
How do we map macOS app states

00:27:36.436 --> 00:27:37.506 A:middle
to the iOS API?

00:27:41.316 --> 00:27:42.656 A:middle
Let's start by first reviewing

00:27:42.656 --> 00:27:44.366 A:middle
the app lifecycle states as they

00:27:44.366 --> 00:27:45.326 A:middle
exist on iOS.

00:27:46.146 --> 00:27:47.146 A:middle
You can follow along in the

00:27:47.146 --> 00:27:48.746 A:middle
chart that I'll be showing here

00:27:48.826 --> 00:27:50.796 A:middle
on the right-hand side.

00:27:51.006 --> 00:27:52.466 A:middle
When your app is on screen and

00:27:52.466 --> 00:27:53.396 A:middle
the person is normally

00:27:53.396 --> 00:27:54.736 A:middle
interacting with your app on

00:27:54.776 --> 00:27:56.126 A:middle
iPad, it is both in the

00:27:56.126 --> 00:27:57.496 A:middle
foreground and active.

00:27:58.176 --> 00:28:01.416 A:middle
Your app is inactive but still

00:27:58.176 --> 00:28:01.416 A:middle
Your app is inactive but still

00:28:01.416 --> 00:28:03.016 A:middle
in the foreground when something

00:28:03.016 --> 00:28:04.266 A:middle
is occluding it and it is

00:28:04.266 --> 00:28:05.826 A:middle
therefore not receiving events.

00:28:06.926 --> 00:28:08.706 A:middle
This is usually temporary, for

00:28:08.706 --> 00:28:10.146 A:middle
example when control center is

00:28:10.146 --> 00:28:13.266 A:middle
visible on top of your app.

00:28:14.176 --> 00:28:14.846 A:middle
Once your app is in the

00:28:14.846 --> 00:28:16.646 A:middle
background, the user is not

00:28:16.646 --> 00:28:17.466 A:middle
interacting with it.

00:28:18.246 --> 00:28:19.506 A:middle
For example, they may have used

00:28:19.506 --> 00:28:20.936 A:middle
the task switcher and swiped

00:28:20.936 --> 00:28:23.416 A:middle
sideways to a different app, but

00:28:23.836 --> 00:28:25.326 A:middle
you may still perform background

00:28:25.326 --> 00:28:26.986 A:middle
task completion and your app is

00:28:26.986 --> 00:28:28.416 A:middle
suspended when no background

00:28:28.416 --> 00:28:29.206 A:middle
tasks remain.

00:28:29.716 --> 00:28:32.866 A:middle
Once suspended, your app is

00:28:32.866 --> 00:28:34.486 A:middle
frozen and gets no more CPU

00:28:34.486 --> 00:28:35.016 A:middle
cycles.

00:28:35.706 --> 00:28:37.436 A:middle
At this point, it may be killed

00:28:37.436 --> 00:28:38.766 A:middle
by the system at any moment

00:28:38.816 --> 00:28:40.206 A:middle
without further notification.

00:28:40.836 --> 00:28:43.756 A:middle
And finally, your app is not

00:28:43.756 --> 00:28:45.196 A:middle
running when it is no longer

00:28:45.256 --> 00:28:48.496 A:middle
even in memory.

00:28:49.016 --> 00:28:49.996 A:middle
Putting all of this together,

00:28:50.206 --> 00:28:51.716 A:middle
let's look at the possible state

00:28:51.716 --> 00:28:53.216 A:middle
changes you will see whether

00:28:53.216 --> 00:28:55.256 A:middle
running an iOS or a macOS.

00:28:55.636 --> 00:28:56.956 A:middle
I will walk you through these in

00:28:56.956 --> 00:28:59.206 A:middle
a second but first I'd like to

00:28:59.206 --> 00:29:00.656 A:middle
note that to keep simple--

00:28:59.206 --> 00:29:00.656 A:middle
note that to keep simple--

00:29:00.656 --> 00:29:02.746 A:middle
things simple for you, iPad apps

00:29:02.746 --> 00:29:04.466 A:middle
on the Mac will get the same

00:29:04.466 --> 00:29:06.816 A:middle
delegate calls and notifications

00:29:06.816 --> 00:29:07.676 A:middle
as an iOS.

00:29:08.416 --> 00:29:11.486 A:middle
You may be used to handling

00:29:11.486 --> 00:29:12.806 A:middle
these state changes in app

00:29:12.806 --> 00:29:14.566 A:middle
delegate methods, but they also

00:29:14.566 --> 00:29:16.496 A:middle
existed and NSNotification shown

00:29:16.496 --> 00:29:16.716 A:middle
here.

00:29:18.436 --> 00:29:19.426 A:middle
We recommend using these

00:29:19.426 --> 00:29:21.806 A:middle
notifications as they work even

00:29:21.806 --> 00:29:23.216 A:middle
when you are opted into the new

00:29:23.216 --> 00:29:25.596 A:middle
multi-window API where some app

00:29:25.596 --> 00:29:27.096 A:middle
delegate calls are omitted.

00:29:27.856 --> 00:29:29.196 A:middle
It's the same on iOS by the way.

00:29:30.616 --> 00:29:33.116 A:middle
Also, the overall app state in a

00:29:33.116 --> 00:29:34.816 A:middle
multi-window app depends on the

00:29:34.816 --> 00:29:36.126 A:middle
activation states of the

00:29:36.126 --> 00:29:37.226 A:middle
individual scenes.

00:29:37.786 --> 00:29:39.156 A:middle
So you will likely want to

00:29:39.156 --> 00:29:41.026 A:middle
handle state changes per scene.

00:29:42.106 --> 00:29:43.276 A:middle
But in this talk, we'll just

00:29:43.276 --> 00:29:44.866 A:middle
focus on the overall app

00:29:44.866 --> 00:29:45.486 A:middle
lifecycle.

00:29:46.886 --> 00:29:48.376 A:middle
In addition to the delegate

00:29:48.376 --> 00:29:50.426 A:middle
calls and notifications, on

00:29:50.426 --> 00:29:52.336 A:middle
macOS, the sequences of these

00:29:52.336 --> 00:29:53.976 A:middle
state changes are also the same

00:29:53.976 --> 00:29:54.616 A:middle
as an iPad.

00:29:56.346 --> 00:29:57.926 A:middle
As I promised a second ago,

00:29:58.016 --> 00:29:59.296 A:middle
let's take a closer look at

00:29:59.296 --> 00:30:00.606 A:middle
these sequences of state change

00:29:59.296 --> 00:30:00.606 A:middle
these sequences of state change

00:30:00.606 --> 00:30:00.976 A:middle
notifications.

00:30:03.316 --> 00:30:05.036 A:middle
On the launch, you will see

00:30:05.246 --> 00:30:06.866 A:middle
didFinishLaunching and

00:30:06.866 --> 00:30:07.716 A:middle
didBecomeActive.

00:30:08.416 --> 00:30:12.186 A:middle
On the way out, you will see

00:30:12.186 --> 00:30:13.726 A:middle
willResignActive and

00:30:13.726 --> 00:30:14.646 A:middle
didEnterBackground.

00:30:17.156 --> 00:30:19.116 A:middle
You may also get willTerminate

00:30:19.576 --> 00:30:20.996 A:middle
if we are certain that the app

00:30:20.996 --> 00:30:22.936 A:middle
is exiting and your app is not

00:30:22.936 --> 00:30:23.756 A:middle
already suspended.

00:30:24.426 --> 00:30:27.716 A:middle
And finally, on the way back in

00:30:27.716 --> 00:30:28.856 A:middle
from the background state, you

00:30:28.856 --> 00:30:30.946 A:middle
will see willEnterForeground and

00:30:30.946 --> 00:30:31.816 A:middle
didBecomeActive.

00:30:32.466 --> 00:30:35.666 A:middle
While the notifications and

00:30:35.666 --> 00:30:37.176 A:middle
sequences are the same on both

00:30:37.176 --> 00:30:39.496 A:middle
platforms, we did alter when

00:30:39.586 --> 00:30:40.596 A:middle
these transitions occur on

00:30:40.596 --> 00:30:41.206 A:middle
macOS.

00:30:42.286 --> 00:30:43.156 A:middle
We'll get back to that in a

00:30:43.156 --> 00:30:43.546 A:middle
moment.

00:30:44.286 --> 00:30:48.196 A:middle
Now, back in iOS, we recommend

00:30:48.276 --> 00:30:49.716 A:middle
that your code should respond to

00:30:49.716 --> 00:30:51.266 A:middle
these state changes in certain

00:30:51.266 --> 00:30:51.716 A:middle
ways.

00:30:52.316 --> 00:30:53.846 A:middle
For example, when you learn

00:30:53.846 --> 00:30:55.476 A:middle
about the deactivation of your

00:30:55.646 --> 00:30:56.186 A:middle
app through

00:30:56.186 --> 00:30:57.826 A:middle
willResignActiveNotification,

00:30:58.516 --> 00:31:00.076 A:middle
you're expected to among other

00:30:58.516 --> 00:31:00.076 A:middle
you're expected to among other

00:31:00.076 --> 00:31:02.636 A:middle
things, reduce the frame rate of

00:31:02.636 --> 00:31:05.486 A:middle
on-screen content, stop various

00:31:05.486 --> 00:31:07.006 A:middle
types of nonessential work, for

00:31:07.266 --> 00:31:09.676 A:middle
example, timers, queues and

00:31:09.676 --> 00:31:12.076 A:middle
queries, and there may also be

00:31:12.076 --> 00:31:12.946 A:middle
other side effects.

00:31:13.126 --> 00:31:14.856 A:middle
For example, you may want to

00:31:14.856 --> 00:31:18.546 A:middle
pause game play in your game.

00:31:18.766 --> 00:31:20.466 A:middle
Similarly, when your app enters

00:31:20.466 --> 00:31:21.786 A:middle
the background state through

00:31:21.786 --> 00:31:23.366 A:middle
didEnterBackgroundNotification,

00:31:23.816 --> 00:31:26.096 A:middle
on iOS, your app is expected to

00:31:26.436 --> 00:31:28.706 A:middle
cease all rendering, reduce your

00:31:28.776 --> 00:31:30.626 A:middle
CPU usage to the bare minimum

00:31:30.626 --> 00:31:33.186 A:middle
necessary, and free up as much

00:31:33.186 --> 00:31:34.136 A:middle
memory as possible.

00:31:35.336 --> 00:31:36.596 A:middle
Again, there may also be other

00:31:36.596 --> 00:31:37.296 A:middle
side effects.

00:31:38.156 --> 00:31:39.716 A:middle
For example, if the content

00:31:39.716 --> 00:31:40.796 A:middle
shown on screen should be

00:31:40.796 --> 00:31:42.676 A:middle
private, you may want to obscure

00:31:42.676 --> 00:31:43.826 A:middle
it before the screenshot is

00:31:43.826 --> 00:31:44.126 A:middle
taken.

00:31:44.516 --> 00:31:48.436 A:middle
Now, we don't want you to have

00:31:48.436 --> 00:31:49.706 A:middle
to change all of the state

00:31:49.706 --> 00:31:51.126 A:middle
change handling code when

00:31:51.126 --> 00:31:53.006 A:middle
bringing your iPad app to macOS.

00:31:54.056 --> 00:31:55.656 A:middle
But your iPad app running on

00:31:55.656 --> 00:31:57.506 A:middle
macOS is now a Mac app.

00:31:57.506 --> 00:31:59.556 A:middle
How does that change things?

00:32:00.646 --> 00:32:01.726 A:middle
Here are some Mac specific

00:32:01.726 --> 00:32:02.586 A:middle
considerations.

00:32:03.156 --> 00:32:06.116 A:middle
It is common for many Mac apps

00:32:06.116 --> 00:32:07.416 A:middle
to share the screen at the same

00:32:07.466 --> 00:32:07.756 A:middle
time.

00:32:07.756 --> 00:32:11.476 A:middle
One of those applications is

00:32:11.476 --> 00:32:13.966 A:middle
Frontmost which just means that

00:32:13.966 --> 00:32:16.186 A:middle
it receives key events and its

00:32:16.186 --> 00:32:17.006 A:middle
menu bar is shown.

00:32:17.596 --> 00:32:21.696 A:middle
Many things may affect the

00:32:21.696 --> 00:32:23.696 A:middle
visibility of an app's contents.

00:32:24.136 --> 00:32:26.006 A:middle
For example, a window may be

00:32:26.006 --> 00:32:28.616 A:middle
occluded by another window, or

00:32:28.936 --> 00:32:30.126 A:middle
the window may be minimized to

00:32:30.126 --> 00:32:32.636 A:middle
the dock, or it could even be in

00:32:32.636 --> 00:32:33.906 A:middle
another space entirely.

00:32:36.346 --> 00:32:38.696 A:middle
It is also possible that the app

00:32:38.696 --> 00:32:40.516 A:middle
isn't showing contents on screen

00:32:40.606 --> 00:32:41.386 A:middle
for other reasons.

00:32:42.156 --> 00:32:43.716 A:middle
For example, the whole app could

00:32:43.716 --> 00:32:46.156 A:middle
be hidden, or it might just not

00:32:46.156 --> 00:32:48.776 A:middle
have any windows right now, or

00:32:49.296 --> 00:32:50.926 A:middle
it's even possible that your app

00:32:50.926 --> 00:32:52.056 A:middle
could be running in an

00:32:52.056 --> 00:32:53.766 A:middle
off-screen log in session that

00:32:53.766 --> 00:32:55.756 A:middle
only exists on a virtual screen

00:32:56.136 --> 00:32:57.736 A:middle
which you might be accessing via

00:32:57.736 --> 00:32:59.406 A:middle
VNC during one of those late

00:32:59.406 --> 00:33:00.426 A:middle
night debugging sessions.

00:32:59.406 --> 00:33:00.426 A:middle
night debugging sessions.

00:33:02.866 --> 00:33:04.266 A:middle
Regardless of their frontmost

00:33:04.266 --> 00:33:05.936 A:middle
state and content feasibility,

00:33:06.216 --> 00:33:07.846 A:middle
Mac apps are generally not

00:33:08.036 --> 00:33:09.196 A:middle
expected to change their

00:33:09.196 --> 00:33:13.006 A:middle
behavior as drastically as iOS

00:33:13.646 --> 00:33:13.756 A:middle
apps.

00:33:13.976 --> 00:33:16.076 A:middle
All running apps are expected to

00:33:16.076 --> 00:33:17.406 A:middle
be doing valuable work for the

00:33:17.406 --> 00:33:17.816 A:middle
user.

00:33:19.166 --> 00:33:21.346 A:middle
Also, you want apps that are not

00:33:21.436 --> 00:33:23.126 A:middle
frontmost to still receive

00:33:23.126 --> 00:33:25.156 A:middle
scroll events, click-throughs

00:33:25.366 --> 00:33:26.386 A:middle
and hover events.

00:33:27.716 --> 00:33:29.136 A:middle
And a Mac user would not

00:33:29.136 --> 00:33:30.786 A:middle
necessarily expect game play to

00:33:30.786 --> 00:33:32.096 A:middle
pause when they switch to a

00:33:32.096 --> 00:33:33.936 A:middle
different app, or rendering to

00:33:33.936 --> 00:33:35.796 A:middle
be disabled entirely while

00:33:35.796 --> 00:33:37.376 A:middle
trying to use your app through

00:33:37.376 --> 00:33:38.846 A:middle
one of those VNC sessions on a

00:33:38.846 --> 00:33:40.246 A:middle
virtual screen.

00:33:42.256 --> 00:33:44.616 A:middle
I told you earlier that we had

00:33:44.616 --> 00:33:46.316 A:middle
altered when these state changes

00:33:46.316 --> 00:33:47.976 A:middle
occur compared to iOS.

00:33:48.126 --> 00:33:48.816 A:middle
And here it is.

00:33:49.596 --> 00:33:50.756 A:middle
Based on what I just told you,

00:33:50.756 --> 00:33:52.356 A:middle
we have decided that on macOS,

00:33:52.356 --> 00:33:55.316 A:middle
we will simultaneously keep all

00:33:55.316 --> 00:33:57.496 A:middle
iPad apps foreground and active

00:33:57.876 --> 00:33:58.806 A:middle
almost all the time.

00:33:59.656 --> 00:34:01.196 A:middle
We will only enter the

00:33:59.656 --> 00:34:01.196 A:middle
We will only enter the

00:34:01.256 --> 00:34:02.766 A:middle
foreground inactive and

00:34:02.836 --> 00:34:04.676 A:middle
background states during app

00:34:04.676 --> 00:34:06.276 A:middle
termination and background

00:34:06.276 --> 00:34:06.796 A:middle
launches.

00:34:07.826 --> 00:34:09.626 A:middle
In other words, as long as the

00:34:09.626 --> 00:34:11.196 A:middle
user perceives your app to be

00:34:11.196 --> 00:34:13.396 A:middle
running, it is foreground active

00:34:13.775 --> 00:34:15.786 A:middle
to avoid any unMac like side

00:34:15.786 --> 00:34:16.226 A:middle
effects.

00:34:16.766 --> 00:34:19.016 A:middle
Let me repeat that.

00:34:19.815 --> 00:34:21.085 A:middle
The UIKit state change

00:34:21.085 --> 00:34:22.886 A:middle
notifications are not going to

00:34:22.886 --> 00:34:24.846 A:middle
be called for example when your

00:34:24.846 --> 00:34:26.795 A:middle
app gains or loses the menu bar,

00:34:27.056 --> 00:34:28.315 A:middle
or a window becomes occluded.

00:34:29.005 --> 00:34:33.346 A:middle
That means that your app won't

00:34:33.346 --> 00:34:34.795 A:middle
reduce its resource consumption

00:34:34.866 --> 00:34:36.396 A:middle
as eagerly as on iOS.

00:34:36.926 --> 00:34:38.676 A:middle
However, the AppNap heuristics

00:34:38.676 --> 00:34:40.226 A:middle
are applied to all Mac apps

00:34:40.446 --> 00:34:41.985 A:middle
including your iPad app.

00:34:42.916 --> 00:34:44.295 A:middle
AppNap is a feature of macOS

00:34:44.295 --> 00:34:46.206 A:middle
where the system constantly

00:34:46.206 --> 00:34:47.716 A:middle
observes various properties of

00:34:47.716 --> 00:34:49.396 A:middle
the app for indications that it

00:34:49.396 --> 00:34:50.295 A:middle
is not in use.

00:34:50.295 --> 00:34:52.226 A:middle
For example, whether it is

00:34:52.226 --> 00:34:54.416 A:middle
visible, actively drawing,

00:34:54.656 --> 00:34:56.346 A:middle
playing audio and so on.

00:34:57.966 --> 00:34:59.356 A:middle
AppNap then automatically

00:34:59.356 --> 00:35:01.426 A:middle
applies throttling when it is

00:34:59.356 --> 00:35:01.426 A:middle
applies throttling when it is

00:35:01.426 --> 00:35:02.736 A:middle
deemed safe to do so.

00:35:03.356 --> 00:35:07.146 A:middle
As I mentioned earlier, we do

00:35:07.146 --> 00:35:08.206 A:middle
enter the other app states

00:35:08.246 --> 00:35:09.496 A:middle
during termination and

00:35:09.496 --> 00:35:10.446 A:middle
background launches.

00:35:11.666 --> 00:35:12.556 A:middle
Let's start with app

00:35:12.556 --> 00:35:13.116 A:middle
termination.

00:35:14.656 --> 00:35:16.256 A:middle
Something developers need to be

00:35:16.256 --> 00:35:18.386 A:middle
aware of when moving their iPad

00:35:18.386 --> 00:35:21.246 A:middle
apps to macOS is that switching

00:35:21.246 --> 00:35:23.486 A:middle
between apps in iOS has no

00:35:23.486 --> 00:35:25.656 A:middle
single equivalent on macOS.

00:35:26.536 --> 00:35:28.486 A:middle
For example, switching to

00:35:28.486 --> 00:35:30.126 A:middle
another app in iOS while

00:35:30.126 --> 00:35:31.226 A:middle
background audio is still

00:35:31.226 --> 00:35:33.016 A:middle
playing is like changing a

00:35:33.016 --> 00:35:34.876 A:middle
frontmost Mac app to a different

00:35:34.876 --> 00:35:36.786 A:middle
frontmost Mac app, because your

00:35:36.786 --> 00:35:38.886 A:middle
app continues to be perceived as

00:35:38.886 --> 00:35:39.816 A:middle
running by the user.

00:35:41.296 --> 00:35:42.746 A:middle
But when the user doesn't return

00:35:42.746 --> 00:35:45.306 A:middle
to your app on iOS and no audio

00:35:45.306 --> 00:35:47.166 A:middle
was playing, this might be more

00:35:47.166 --> 00:35:49.116 A:middle
similar to terminating a Mac on

00:35:49.116 --> 00:35:51.166 A:middle
macOS because your app is out of

00:35:51.166 --> 00:35:52.976 A:middle
sight and out of mind and exits

00:35:52.976 --> 00:35:53.556 A:middle
eventually.

00:35:54.156 --> 00:35:59.376 A:middle
On macOS, user initiated app

00:35:59.406 --> 00:36:01.306 A:middle
termination of your iPad app

00:35:59.406 --> 00:36:01.306 A:middle
termination of your iPad app

00:36:01.566 --> 00:36:03.366 A:middle
gets the same state transitions

00:36:03.586 --> 00:36:05.056 A:middle
as switching to a different app

00:36:05.246 --> 00:36:07.446 A:middle
in iOS, for example by using the

00:36:07.446 --> 00:36:08.176 A:middle
task switcher.

00:36:09.796 --> 00:36:11.286 A:middle
The state change notifications

00:36:11.286 --> 00:36:12.856 A:middle
will take you from foreground

00:36:12.856 --> 00:36:14.306 A:middle
active through foreground

00:36:14.306 --> 00:36:15.926 A:middle
inactive to the background.

00:36:17.276 --> 00:36:18.546 A:middle
To the user, however, the app

00:36:18.546 --> 00:36:20.466 A:middle
will immediately appear as no

00:36:20.466 --> 00:36:22.566 A:middle
longer running, the app's

00:36:22.566 --> 00:36:23.656 A:middle
remaining windows are made

00:36:23.656 --> 00:36:26.086 A:middle
invisible, it is no longer in

00:36:26.086 --> 00:36:27.416 A:middle
control of the menu bar, there

00:36:27.846 --> 00:36:29.396 A:middle
will be no indicator light in

00:36:29.396 --> 00:36:32.136 A:middle
the dock, and your app is no

00:36:32.136 --> 00:36:33.926 A:middle
longer available in the macOS

00:36:33.976 --> 00:36:35.556 A:middle
command tab task switcher.

00:36:36.146 --> 00:36:39.716 A:middle
But behind the scenes, we give

00:36:39.786 --> 00:36:41.096 A:middle
background tasks a chance to

00:36:41.096 --> 00:36:42.836 A:middle
finish if they are created

00:36:42.836 --> 00:36:44.396 A:middle
through the usual API on

00:36:44.396 --> 00:36:45.786 A:middle
UIApplication that I've shown

00:36:45.786 --> 00:36:46.316 A:middle
here.

00:36:46.596 --> 00:36:50.366 A:middle
Just like in iOS, end your

00:36:50.366 --> 00:36:52.206 A:middle
background tasks quickly or risk

00:36:52.206 --> 00:36:53.226 A:middle
task expiration.

00:36:54.636 --> 00:36:55.916 A:middle
There is one exception to this

00:36:55.916 --> 00:36:56.146 A:middle
rule.

00:36:57.036 --> 00:36:58.486 A:middle
Background audio plist entries

00:36:58.536 --> 00:36:59.156 A:middle
are ignored.

00:36:59.846 --> 00:37:01.346 A:middle
The process will terminate in

00:36:59.846 --> 00:37:01.346 A:middle
The process will terminate in

00:37:01.346 --> 00:37:02.546 A:middle
spite of background audio

00:37:02.546 --> 00:37:03.086 A:middle
requests.

00:37:03.846 --> 00:37:05.406 A:middle
After all, to the user, the app

00:37:05.406 --> 00:37:06.456 A:middle
already looks terminated.

00:37:07.626 --> 00:37:09.256 A:middle
So your media frameworks will

00:37:09.256 --> 00:37:10.606 A:middle
pause your-- our media

00:37:10.606 --> 00:37:11.836 A:middle
frameworks will pause your

00:37:11.836 --> 00:37:13.496 A:middle
playback for you upon entering

00:37:13.496 --> 00:37:14.266 A:middle
the background state.

00:37:15.496 --> 00:37:17.226 A:middle
However, keep in mind that

00:37:17.226 --> 00:37:18.746 A:middle
background audio is not needed

00:37:18.746 --> 00:37:19.486 A:middle
on macOS.

00:37:20.306 --> 00:37:21.476 A:middle
Your app will remain foreground

00:37:21.476 --> 00:37:23.136 A:middle
active even when the user

00:37:23.136 --> 00:37:24.886 A:middle
switches to a different app.

00:37:26.856 --> 00:37:29.306 A:middle
Additionally, if the user tries

00:37:29.306 --> 00:37:30.566 A:middle
to launch the app while it is

00:37:30.566 --> 00:37:32.406 A:middle
still backgrounded, we simply

00:37:32.406 --> 00:37:33.436 A:middle
return your app to the

00:37:33.436 --> 00:37:34.496 A:middle
foreground active state.

00:37:35.466 --> 00:37:37.086 A:middle
This is similar to returning to

00:37:37.086 --> 00:37:38.706 A:middle
your app in the iOS task

00:37:38.706 --> 00:37:39.126 A:middle
switcher.

00:37:40.086 --> 00:37:42.216 A:middle
This sort of relaunch is only

00:37:42.216 --> 00:37:43.836 A:middle
possible while your app is still

00:37:43.836 --> 00:37:46.346 A:middle
processing background tasks, not

00:37:46.386 --> 00:37:47.856 A:middle
once the synchronous handling of

00:37:47.856 --> 00:37:49.136 A:middle
willTerminate has begun.

00:37:50.116 --> 00:37:51.616 A:middle
So try to minimize this phase

00:37:51.836 --> 00:37:53.396 A:middle
where your app ignores user

00:37:53.396 --> 00:37:54.546 A:middle
attempts to relaunch it.

00:37:54.996 --> 00:37:58.776 A:middle
Once the last background task

00:37:58.776 --> 00:38:00.586 A:middle
completes or expires, the

00:37:58.776 --> 00:38:00.586 A:middle
completes or expires, the

00:38:00.586 --> 00:38:01.936 A:middle
process exits without

00:38:01.936 --> 00:38:02.456 A:middle
suspension.

00:38:03.866 --> 00:38:05.316 A:middle
As mentioned before, you will

00:38:05.316 --> 00:38:06.966 A:middle
get the same delegate calls and

00:38:06.966 --> 00:38:08.906 A:middle
notifications as on iOS.

00:38:10.036 --> 00:38:10.976 A:middle
In thid case, that means you

00:38:10.976 --> 00:38:12.876 A:middle
will see willResignActive,

00:38:13.326 --> 00:38:15.216 A:middle
didEnterBackground, and

00:38:15.216 --> 00:38:17.036 A:middle
willTerminate because we will

00:38:17.036 --> 00:38:18.646 A:middle
exit the process rather than

00:38:18.646 --> 00:38:21.026 A:middle
just suspending it like on iOS.

00:38:22.916 --> 00:38:24.596 A:middle
So, that was iPad app

00:38:24.596 --> 00:38:25.686 A:middle
termination on Mac.

00:38:27.056 --> 00:38:28.416 A:middle
As I mentioned earlier, the

00:38:28.416 --> 00:38:29.766 A:middle
other way for your iPad app on

00:38:29.766 --> 00:38:31.756 A:middle
Mac to enter the background

00:38:31.756 --> 00:38:33.476 A:middle
state is when it is launched

00:38:33.476 --> 00:38:34.766 A:middle
directly into the background.

00:38:36.056 --> 00:38:38.016 A:middle
iOS has quite a few APIs that

00:38:38.016 --> 00:38:40.106 A:middle
allow you to opt into some form

00:38:40.106 --> 00:38:41.536 A:middle
of background launch for your

00:38:42.396 --> 00:38:42.566 A:middle
app.

00:38:42.866 --> 00:38:43.826 A:middle
To learn much more about this

00:38:43.826 --> 00:38:45.416 A:middle
topic, check out the session

00:38:45.776 --> 00:38:47.226 A:middle
Advances in App Background

00:38:47.226 --> 00:38:48.936 A:middle
Execution, also from this year.

00:38:49.516 --> 00:38:53.166 A:middle
The following subset of these

00:38:53.166 --> 00:38:55.566 A:middle
APIs is supported for your iPad

00:38:56.436 --> 00:38:58.306 A:middle
apps for Mac.

00:38:58.306 --> 00:39:00.016 A:middle
URL sessions configured for

00:38:58.306 --> 00:39:00.016 A:middle
URL sessions configured for

00:39:00.016 --> 00:39:03.556 A:middle
background downloads, silent

00:39:03.556 --> 00:39:05.356 A:middle
remote user notifications with

00:39:05.356 --> 00:39:07.226 A:middle
the content available specified

00:39:07.226 --> 00:39:08.426 A:middle
in the APS dictionary.

00:39:08.426 --> 00:39:10.496 A:middle
You could use this, for example,

00:39:10.496 --> 00:39:12.006 A:middle
to update your app's contents

00:39:12.276 --> 00:39:13.196 A:middle
when a new content arrives

00:39:13.196 --> 00:39:17.636 A:middle
server-side, also when our user

00:39:17.636 --> 00:39:18.986 A:middle
invokes a notification action

00:39:18.986 --> 00:39:20.346 A:middle
that does not specify the

00:39:20.346 --> 00:39:21.146 A:middle
foreground option.

00:39:21.766 --> 00:39:23.506 A:middle
For example, they might like a

00:39:23.506 --> 00:39:25.046 A:middle
post thorugh a user notification

00:39:25.636 --> 00:39:27.076 A:middle
and we could background launch

00:39:27.076 --> 00:39:28.586 A:middle
your app to let the server know

00:39:28.586 --> 00:39:29.046 A:middle
about this.

00:39:30.156 --> 00:39:32.506 A:middle
And finally, we also support the

00:39:32.506 --> 00:39:34.166 A:middle
new BackgroundTasks framework

00:39:34.656 --> 00:39:35.706 A:middle
including the new

00:39:35.706 --> 00:39:38.246 A:middle
BGProcessingTask as well as

00:39:38.546 --> 00:39:41.016 A:middle
BGAppRefreshTask for traditional

00:39:41.116 --> 00:39:42.366 A:middle
background app refresh.

00:39:43.416 --> 00:39:45.256 A:middle
Note that for iPad apps for Mac,

00:39:45.416 --> 00:39:47.036 A:middle
the app refresh feature is only

00:39:47.036 --> 00:39:48.636 A:middle
supported through this new API.

00:39:54.416 --> 00:39:55.706 A:middle
The usual restrictions on

00:39:55.706 --> 00:39:57.436 A:middle
background runtime and process

00:39:57.436 --> 00:39:59.766 A:middle
priority apply same as on iOS.

00:40:00.236 --> 00:40:01.576 A:middle
So if your task takes too much

00:40:01.576 --> 00:40:03.096 A:middle
time, your app risks being

00:40:03.096 --> 00:40:04.426 A:middle
suspended or even killed.

00:40:06.086 --> 00:40:07.456 A:middle
If the user attempts to launch

00:40:07.456 --> 00:40:08.756 A:middle
the app while it is already

00:40:08.756 --> 00:40:10.276 A:middle
running in the background, we

00:40:10.526 --> 00:40:11.956 A:middle
will simply transition it to

00:40:11.956 --> 00:40:13.966 A:middle
foreground active similar to the

00:40:13.966 --> 00:40:15.456 A:middle
previously discussed relaunch

00:40:15.906 --> 00:40:16.626 A:middle
during termination.

00:40:18.026 --> 00:40:19.896 A:middle
For background launches as well,

00:40:20.266 --> 00:40:21.676 A:middle
all state transitions will match

00:40:21.676 --> 00:40:22.536 A:middle
those on iOS.

00:40:23.546 --> 00:40:24.666 A:middle
In this case, that means you

00:40:24.666 --> 00:40:26.486 A:middle
will only see didFinishLaunching

00:40:26.856 --> 00:40:28.566 A:middle
and whatever callback was

00:40:28.566 --> 00:40:30.036 A:middle
specific to the background

00:40:30.036 --> 00:40:31.686 A:middle
launch API that was used.

00:40:32.156 --> 00:40:34.726 A:middle
Only during the full launch by

00:40:34.726 --> 00:40:36.476 A:middle
the user will you additionally

00:40:36.476 --> 00:40:37.316 A:middle
see willEnterForeground and

00:40:37.316 --> 00:40:37.976 A:middle
didBecomeActive.

00:40:41.976 --> 00:40:43.176 A:middle
A word on app suspension.

00:40:43.766 --> 00:40:45.586 A:middle
iPad apps are rarely suspended

00:40:45.586 --> 00:40:47.546 A:middle
on macOS compared to iOS.

00:40:48.576 --> 00:40:50.446 A:middle
During regular termination, the

00:40:50.716 --> 00:40:52.566 A:middle
app will exit exclusively

00:40:52.656 --> 00:40:53.506 A:middle
without suspension.

00:40:54.566 --> 00:40:55.676 A:middle
And during app switching on

00:40:55.676 --> 00:40:57.616 A:middle
macOS, this does not cause

00:40:57.616 --> 00:40:58.846 A:middle
backgrounding or suspension.

00:40:59.856 --> 00:41:01.876 A:middle
But you will likely still see it

00:40:59.856 --> 00:41:01.876 A:middle
But you will likely still see it

00:41:01.876 --> 00:41:03.936 A:middle
occur if an app is launched

00:41:03.986 --> 00:41:05.216 A:middle
directly into the background.

00:41:06.886 --> 00:41:09.006 A:middle
Now on iPad, your app may be

00:41:09.006 --> 00:41:10.506 A:middle
terminated when resources are

00:41:10.506 --> 00:41:12.056 A:middle
needed elsewhere especially if

00:41:12.056 --> 00:41:12.976 A:middle
it's already suspended.

00:41:13.516 --> 00:41:15.826 A:middle
But on macOS, if your iPad app

00:41:15.826 --> 00:41:17.906 A:middle
is suspended, it is always

00:41:17.906 --> 00:41:20.206 A:middle
terminated immediately even if

00:41:20.206 --> 00:41:21.566 A:middle
no memory pressure exists.

00:41:23.196 --> 00:41:24.956 A:middle
Speaking of memory, the Mac

00:41:24.956 --> 00:41:27.056 A:middle
memory model applies which means

00:41:27.056 --> 00:41:28.506 A:middle
there are no enforced memory

00:41:28.506 --> 00:41:28.916 A:middle
limits.

00:41:29.576 --> 00:41:31.016 A:middle
Your app won't risk being killed

00:41:31.016 --> 00:41:31.976 A:middle
while doing heavy lifting.

00:41:32.586 --> 00:41:34.896 A:middle
But this is a double-edged

00:41:34.896 --> 00:41:35.266 A:middle
sword.

00:41:36.086 --> 00:41:37.436 A:middle
Because your app runs longer,

00:41:37.876 --> 00:41:40.096 A:middle
user may notice degraded system

00:41:40.096 --> 00:41:41.366 A:middle
performance from leaks piling

00:41:41.366 --> 00:41:42.006 A:middle
up.

00:41:42.726 --> 00:41:44.536 A:middle
This is specially the case if it

00:41:44.536 --> 00:41:46.196 A:middle
causes VM swapping on hard disk

00:41:46.236 --> 00:41:46.926 A:middle
base systems.

00:41:49.366 --> 00:41:51.096 A:middle
So please, use the allocations

00:41:51.126 --> 00:41:52.016 A:middle
profiling template and

00:41:52.016 --> 00:41:53.826 A:middle
instruments to find and fix your

00:41:53.826 --> 00:41:54.236 A:middle
leaks.

00:41:55.076 --> 00:41:56.206 A:middle
This will also benefit your app

00:41:56.206 --> 00:41:56.726 A:middle
on iPad.

00:41:59.516 --> 00:42:00.806 A:middle
Now, that was a lot of

00:41:59.516 --> 00:42:00.806 A:middle
Now, that was a lot of

00:42:00.806 --> 00:42:02.146 A:middle
information, so let's recap.

00:42:03.576 --> 00:42:05.856 A:middle
On macOs, your iPad app will

00:42:05.856 --> 00:42:07.416 A:middle
spend most of its time in the

00:42:07.416 --> 00:42:08.546 A:middle
foreground active state.

00:42:09.096 --> 00:42:11.746 A:middle
App termination and background

00:42:11.746 --> 00:42:13.696 A:middle
launches do allow your app to

00:42:13.696 --> 00:42:15.276 A:middle
get into the foreground inactive

00:42:15.346 --> 00:42:17.146 A:middle
and background states though.

00:42:17.896 --> 00:42:20.176 A:middle
Don't expect audio playback to

00:42:20.176 --> 00:42:21.846 A:middle
continue while your app is

00:42:21.846 --> 00:42:23.026 A:middle
backgrounded even if you

00:42:23.026 --> 00:42:23.926 A:middle
requested it.

00:42:25.036 --> 00:42:26.696 A:middle
And finally, you can just

00:42:26.696 --> 00:42:28.036 A:middle
continue to respond to these

00:42:28.036 --> 00:42:29.796 A:middle
state changes the same way as

00:42:29.796 --> 00:42:30.716 A:middle
you do on iOS.

00:42:31.286 --> 00:42:33.276 A:middle
And now, I'm going to hand it

00:42:33.276 --> 00:42:34.816 A:middle
over to Chris who will talk to

00:42:34.816 --> 00:42:36.436 A:middle
you about distributing your iPad

00:42:36.436 --> 00:42:37.206 A:middle
app to the Mac.

00:42:37.636 --> 00:42:37.976 A:middle
Thank you.

00:42:38.516 --> 00:42:43.726 A:middle
[ Applause ]

00:42:44.226 --> 00:42:44.966 A:middle
&gt;&gt; Thank you, Nils.

00:42:50.066 --> 00:42:51.746 A:middle
You've been building iOS apps

00:42:51.746 --> 00:42:53.336 A:middle
for a while now.

00:42:54.666 --> 00:42:56.296 A:middle
You know how to distribute on

00:42:56.296 --> 00:42:58.326 A:middle
the App Store, how to use

00:42:58.326 --> 00:43:00.906 A:middle
TestFlight, how to distribute

00:42:58.326 --> 00:43:00.906 A:middle
TestFlight, how to distribute

00:43:00.906 --> 00:43:02.386 A:middle
yourself using development

00:43:02.386 --> 00:43:04.576 A:middle
signing, ad hoc or enterprise.

00:43:05.676 --> 00:43:08.126 A:middle
But now, you're going to be

00:43:08.126 --> 00:43:10.196 A:middle
building and selling a second

00:43:10.196 --> 00:43:12.836 A:middle
app on the Mac all from the same

00:43:12.836 --> 00:43:13.496 A:middle
code base.

00:43:14.846 --> 00:43:15.876 A:middle
How are you going to do that?

00:43:15.876 --> 00:43:17.826 A:middle
What will be different about the

00:43:17.826 --> 00:43:18.196 A:middle
Mac?

00:43:19.366 --> 00:43:20.296 A:middle
How will you ensure that your

00:43:20.296 --> 00:43:21.596 A:middle
customers have a seamless

00:43:21.596 --> 00:43:23.596 A:middle
experience using both apps?

00:43:23.596 --> 00:43:25.186 A:middle
That's what we're going to

00:43:25.186 --> 00:43:25.466 A:middle
cover.

00:43:26.786 --> 00:43:27.846 A:middle
Let's go back to the beginning.

00:43:29.076 --> 00:43:30.566 A:middle
You opened up the project editor

00:43:30.566 --> 00:43:31.106 A:middle
in Xcode.

00:43:32.076 --> 00:43:33.196 A:middle
You enabled the Mac support.

00:43:34.016 --> 00:43:35.346 A:middle
You've been working very hard.

00:43:35.346 --> 00:43:36.526 A:middle
You've got your app perfectly

00:43:36.526 --> 00:43:38.596 A:middle
tuned and you think to yourself,

00:43:38.876 --> 00:43:40.106 A:middle
gosh, I haven't had to worry

00:43:40.106 --> 00:43:41.356 A:middle
about code signing once.

00:43:42.476 --> 00:43:43.096 A:middle
Well, that's great.

00:43:43.656 --> 00:43:45.436 A:middle
But when you want to know more

00:43:45.436 --> 00:43:46.766 A:middle
about how signing is working,

00:43:47.236 --> 00:43:48.896 A:middle
you can head over to the Signing

00:43:48.896 --> 00:43:50.016 A:middle
and Capabilities tab.

00:43:50.986 --> 00:43:52.306 A:middle
There you can see there is a lot

00:43:52.336 --> 00:43:54.036 A:middle
going on under the hood to sign

00:43:54.036 --> 00:43:55.356 A:middle
your iOS and Mac app.

00:43:56.206 --> 00:43:57.116 A:middle
Let's take a closer look.

00:43:58.086 --> 00:44:00.366 A:middle
First off, if you enable

00:43:58.086 --> 00:44:00.366 A:middle
First off, if you enable

00:44:00.366 --> 00:44:02.326 A:middle
automatic signing, all of the

00:44:02.326 --> 00:44:03.816 A:middle
maintenance of code signing is

00:44:03.816 --> 00:44:05.156 A:middle
taken care of by Xcode.

00:44:05.266 --> 00:44:06.296 A:middle
It will make this transition

00:44:06.296 --> 00:44:07.106 A:middle
super easy.

00:44:07.506 --> 00:44:08.816 A:middle
I highly recommend using

00:44:08.816 --> 00:44:10.136 A:middle
automatic signing.

00:44:11.606 --> 00:44:13.176 A:middle
Now, using automatic signing,

00:44:13.176 --> 00:44:15.166 A:middle
Xcode will create a necessary

00:44:15.166 --> 00:44:16.696 A:middle
provisioning profile for the Mac

00:44:17.216 --> 00:44:18.386 A:middle
and one for iOS.

00:44:19.436 --> 00:44:20.716 A:middle
And we've modernized things a

00:44:20.716 --> 00:44:20.956 A:middle
bit.

00:44:21.676 --> 00:44:22.996 A:middle
Instead of using an iOs

00:44:22.996 --> 00:44:24.156 A:middle
certificate and a Mac

00:44:24.156 --> 00:44:25.576 A:middle
certificate, we're going to use

00:44:25.576 --> 00:44:27.056 A:middle
one unified Apple developer

00:44:27.056 --> 00:44:27.336 A:middle
certificate.

00:44:27.336 --> 00:44:27.976 A:middle
So, that's a nice improvement.

00:44:28.516 --> 00:44:32.806 A:middle
[ Applause ]

00:44:33.306 --> 00:44:35.066 A:middle
Now, when you add Mac support,

00:44:35.836 --> 00:44:38.526 A:middle
Xcode will use automatic signing

00:44:38.526 --> 00:44:40.496 A:middle
to register a reserved bundle

00:44:40.496 --> 00:44:42.256 A:middle
identifier for your app, for

00:44:42.256 --> 00:44:44.796 A:middle
your Mac app prefixed with UIKit

00:44:44.796 --> 00:44:45.296 A:middle
for Mac.

00:44:45.836 --> 00:44:46.756 A:middle
Now, this is important.

00:44:47.246 --> 00:44:48.786 A:middle
If you have been making use of

00:44:48.786 --> 00:44:50.146 A:middle
your bundle identifier in your

00:44:50.146 --> 00:44:51.926 A:middle
code or in your entitlements,

00:44:52.196 --> 00:44:53.176 A:middle
you need to think about how that

00:44:53.176 --> 00:44:54.996 A:middle
may affect both apps.

00:44:56.416 --> 00:44:58.476 A:middle
The entitlements file which you

00:44:58.476 --> 00:44:59.906 A:middle
have been using for your iOS app

00:45:00.466 --> 00:45:01.776 A:middle
is shared when signing for the

00:45:01.776 --> 00:45:02.066 A:middle
Mac.

00:45:02.066 --> 00:45:02.956 A:middle
So there's no issue there.

00:45:03.516 --> 00:45:06.406 A:middle
And when you enable Mac support,

00:45:07.046 --> 00:45:08.436 A:middle
Xcode will add those

00:45:08.436 --> 00:45:09.916 A:middle
capabilities that are required

00:45:09.916 --> 00:45:12.206 A:middle
on the Mac, Hardened Runtime and

00:45:12.206 --> 00:45:13.116 A:middle
App Sandbox.

00:45:13.706 --> 00:45:14.836 A:middle
So for instance, if you've

00:45:14.876 --> 00:45:17.476 A:middle
provided a usage description for

00:45:17.476 --> 00:45:19.046 A:middle
the camera in your info.plist,

00:45:19.526 --> 00:45:20.646 A:middle
Xcode will update your

00:45:20.646 --> 00:45:22.026 A:middle
entitlements file so that your

00:45:22.066 --> 00:45:23.496 A:middle
app can make use of the camera

00:45:23.496 --> 00:45:26.006 A:middle
on the Mac.

00:45:26.206 --> 00:45:27.416 A:middle
If you're using an iCloud

00:45:27.416 --> 00:45:29.546 A:middle
default container, that is based

00:45:29.546 --> 00:45:30.716 A:middle
on your bundle identifier.

00:45:31.286 --> 00:45:33.406 A:middle
So, Xcode will adjust your

00:45:33.406 --> 00:45:35.026 A:middle
entitlements file so that your

00:45:35.026 --> 00:45:36.716 A:middle
iOS app and your Mac app point

00:45:36.716 --> 00:45:38.196 A:middle
explicitly to your existing

00:45:38.446 --> 00:45:38.926 A:middle
container.

00:45:39.456 --> 00:45:40.456 A:middle
If you've been using the default

00:45:40.456 --> 00:45:41.816 A:middle
container API, you may continue

00:45:41.816 --> 00:45:42.306 A:middle
doing so.

00:45:42.836 --> 00:45:46.456 A:middle
Now, Xcode will migrate a lot

00:45:46.456 --> 00:45:46.826 A:middle
for you.

00:45:47.076 --> 00:45:49.286 A:middle
But if you want to share

00:45:49.286 --> 00:45:50.926 A:middle
functionality between your iOS

00:45:50.926 --> 00:45:52.806 A:middle
app and your Mac app, there may

00:45:52.806 --> 00:45:54.076 A:middle
be some manual steps that you

00:45:54.076 --> 00:45:54.586 A:middle
need to take.

00:45:55.946 --> 00:45:57.776 A:middle
If you're using the Keychain in

00:45:57.776 --> 00:45:59.716 A:middle
your app, you should add the

00:45:59.716 --> 00:46:01.586 A:middle
Keychain Sharing Capability in

00:45:59.716 --> 00:46:01.586 A:middle
Keychain Sharing Capability in

00:46:01.636 --> 00:46:02.056 A:middle
Xcode.

00:46:03.176 --> 00:46:04.226 A:middle
iCloud Keychain is made

00:46:04.226 --> 00:46:06.256 A:middle
available by default on iOS.

00:46:06.706 --> 00:46:07.796 A:middle
But on the Mac, you need to

00:46:07.796 --> 00:46:09.006 A:middle
declare your intent to use it

00:46:09.036 --> 00:46:09.926 A:middle
through this capability.

00:46:11.756 --> 00:46:12.906 A:middle
If you're using push

00:46:12.906 --> 00:46:14.746 A:middle
notifications, continue sending

00:46:14.746 --> 00:46:16.316 A:middle
notifications to your iOS app.

00:46:16.846 --> 00:46:17.946 A:middle
Those notifications will be

00:46:17.946 --> 00:46:20.566 A:middle
received by your iOS and Mac

00:46:21.226 --> 00:46:21.306 A:middle
app.

00:46:21.576 --> 00:46:21.926 A:middle
All right.

00:46:22.266 --> 00:46:23.306 A:middle
That's what you need to know to

00:46:23.306 --> 00:46:24.956 A:middle
get your project set up properly

00:46:24.956 --> 00:46:25.566 A:middle
for development.

00:46:27.176 --> 00:46:28.686 A:middle
Now, when you're ready to share

00:46:28.686 --> 00:46:30.536 A:middle
your app with others, you begin

00:46:30.536 --> 00:46:32.346 A:middle
in Xcode by building an archive.

00:46:33.196 --> 00:46:35.336 A:middle
And on iOS, you use that archive

00:46:35.336 --> 00:46:37.016 A:middle
to export for the store as an

00:46:37.266 --> 00:46:37.836 A:middle
IPA.

00:46:38.556 --> 00:46:39.676 A:middle
But things are a bit different

00:46:39.676 --> 00:46:40.126 A:middle
on the Mac.

00:46:41.156 --> 00:46:43.106 A:middle
When Xcode uploads your app to

00:46:43.106 --> 00:46:44.876 A:middle
the App Store, it sends it as a

00:46:44.876 --> 00:46:47.046 A:middle
Mac package behind the scenes.

00:46:48.256 --> 00:46:49.756 A:middle
Now, uploading to the App Store

00:46:49.756 --> 00:46:51.296 A:middle
is very similar to how it is for

00:46:51.406 --> 00:46:51.856 A:middle
iOS.

00:46:51.856 --> 00:46:52.466 A:middle
Let me show you.

00:46:53.766 --> 00:46:55.106 A:middle
When you have your project open,

00:46:55.346 --> 00:46:57.136 A:middle
you can use the Product menu to

00:46:57.136 --> 00:46:58.536 A:middle
switch your Run Destination to

00:46:58.536 --> 00:46:59.126 A:middle
My Mac.

00:46:59.916 --> 00:47:00.846 A:middle
then you Archive.

00:46:59.916 --> 00:47:00.846 A:middle
then you Archive.

00:47:01.726 --> 00:47:03.256 A:middle
The organizer will open up and

00:47:03.256 --> 00:47:04.676 A:middle
show you your brand-new Mac app

00:47:04.676 --> 00:47:05.136 A:middle
archive.

00:47:06.086 --> 00:47:07.126 A:middle
From there, you can click the

00:47:07.126 --> 00:47:08.936 A:middle
Distribute App button and follow

00:47:08.936 --> 00:47:10.266 A:middle
that same upload workflow that

00:47:10.266 --> 00:47:10.746 A:middle
you're used to.

00:47:11.296 --> 00:47:13.646 A:middle
Of course, you can do all of

00:47:13.646 --> 00:47:14.616 A:middle
this from the command line

00:47:15.706 --> 00:47:17.746 A:middle
including uploading from Xcode

00:47:18.236 --> 00:47:18.366 A:middle
build.

00:47:19.016 --> 00:47:20.666 A:middle
For more on how to automate all

00:47:20.666 --> 00:47:22.346 A:middle
of this, I recommend checking

00:47:22.346 --> 00:47:24.036 A:middle
out the session from 2017,

00:47:24.036 --> 00:47:25.966 A:middle
What's New in Signing for Xcode

00:47:25.966 --> 00:47:26.766 A:middle
and Xcode Server.

00:47:30.536 --> 00:47:32.006 A:middle
OK. So you've built your app,

00:47:32.676 --> 00:47:34.496 A:middle
but there are some steps to take

00:47:34.536 --> 00:47:35.716 A:middle
before sending your app to the

00:47:35.716 --> 00:47:36.276 A:middle
App Store.

00:47:37.166 --> 00:47:39.816 A:middle
First, this is a new Mac app, so

00:47:39.816 --> 00:47:41.736 A:middle
you need to create a new app

00:47:41.736 --> 00:47:43.326 A:middle
record in App Store Connect just

00:47:43.326 --> 00:47:45.116 A:middle
like you did for iOS, then

00:47:45.116 --> 00:47:46.446 A:middle
before and now once more.

00:47:47.946 --> 00:47:49.656 A:middle
Now when you do this, you're

00:47:49.656 --> 00:47:51.386 A:middle
going to associate that App

00:47:51.386 --> 00:47:52.996 A:middle
Record with the app identifier

00:47:52.996 --> 00:47:54.486 A:middle
that Xcode synthesized for you,

00:47:54.686 --> 00:47:56.606 A:middle
the one prefix with UIKit for

00:47:57.316 --> 00:47:57.426 A:middle
Mac.

00:47:58.166 --> 00:47:59.926 A:middle
And whenever you upload to the

00:47:59.926 --> 00:48:00.836 A:middle
App Store, you should always

00:47:59.926 --> 00:48:00.836 A:middle
App Store, you should always

00:48:00.836 --> 00:48:01.866 A:middle
increment your build number.

00:48:01.866 --> 00:48:03.666 A:middle
This is a little different from

00:48:03.786 --> 00:48:04.276 A:middle
iOS.

00:48:04.966 --> 00:48:06.776 A:middle
macOS uses the build number to

00:48:06.776 --> 00:48:07.796 A:middle
determine the order of your

00:48:07.796 --> 00:48:08.326 A:middle
releases.

00:48:09.666 --> 00:48:11.546 A:middle
And if you've done all that, you

00:48:11.546 --> 00:48:13.686 A:middle
can upload from Xcode and

00:48:13.686 --> 00:48:15.646 A:middle
release your app on the App

00:48:17.916 --> 00:48:18.046 A:middle
Store.

00:48:18.266 --> 00:48:20.476 A:middle
Now, a cool thing about the Mac

00:48:20.566 --> 00:48:22.266 A:middle
is that you have more control

00:48:22.266 --> 00:48:23.646 A:middle
over how you install apps.

00:48:24.696 --> 00:48:26.456 A:middle
When a customer downloads your

00:48:26.456 --> 00:48:28.266 A:middle
app from the App Store, it is

00:48:28.316 --> 00:48:29.796 A:middle
perfectly possible to copy that

00:48:29.796 --> 00:48:31.436 A:middle
app to another Mac and run it,

00:48:32.696 --> 00:48:33.946 A:middle
which brings up a few things.

00:48:35.076 --> 00:48:36.576 A:middle
App Thinning isn't used on

00:48:36.576 --> 00:48:37.276 A:middle
macOS.

00:48:38.626 --> 00:48:39.786 A:middle
Your app will always contain the

00:48:39.786 --> 00:48:40.976 A:middle
complete set of resources

00:48:40.976 --> 00:48:43.046 A:middle
necessary to run on any Mac.

00:48:43.846 --> 00:48:45.276 A:middle
And because your app can be

00:48:45.276 --> 00:48:46.596 A:middle
dragged and dropped to any Mac,

00:48:46.986 --> 00:48:48.296 A:middle
it is up to you to add receipt

00:48:48.296 --> 00:48:49.676 A:middle
validation logic to your app.

00:48:50.446 --> 00:48:51.666 A:middle
So whenever your app launches,

00:48:51.666 --> 00:48:52.786 A:middle
it should be checking that it

00:48:52.786 --> 00:48:54.646 A:middle
was legitimately purchased and

00:48:54.646 --> 00:48:56.096 A:middle
is allowed to run.

00:48:56.736 --> 00:48:58.416 A:middle
For more on how to add receipt

00:48:58.416 --> 00:49:00.316 A:middle
validation to your app, I

00:48:58.416 --> 00:49:00.316 A:middle
validation to your app, I

00:49:00.316 --> 00:49:01.346 A:middle
recommend checking out the

00:49:01.346 --> 00:49:02.966 A:middle
Advanced StoreKit talk from

00:49:02.966 --> 00:49:04.526 A:middle
2017.

00:49:05.936 --> 00:49:08.106 A:middle
The good news is that once your

00:49:08.106 --> 00:49:09.966 A:middle
app is on the App Store, you

00:49:09.966 --> 00:49:11.196 A:middle
have access to the same great

00:49:11.226 --> 00:49:13.666 A:middle
tools, like App Store Connect,

00:49:13.666 --> 00:49:14.846 A:middle
App Analytics to track your

00:49:14.846 --> 00:49:17.116 A:middle
sales and marketing efforts, and

00:49:17.116 --> 00:49:18.916 A:middle
the Xcode Crashes Organizer to

00:49:18.916 --> 00:49:20.316 A:middle
triage any crashes that may be

00:49:20.316 --> 00:49:21.436 A:middle
affecting your customers.

00:49:21.936 --> 00:49:23.846 A:middle
Your app can use the same

00:49:23.846 --> 00:49:25.746 A:middle
StoreKit and GameKit APIs.

00:49:26.696 --> 00:49:27.606 A:middle
Now, if you're using those

00:49:27.606 --> 00:49:29.396 A:middle
API's, there is some additional

00:49:29.396 --> 00:49:30.666 A:middle
set up required on App Store

00:49:30.666 --> 00:49:31.016 A:middle
Connect.

00:49:31.926 --> 00:49:33.916 A:middle
If you're using In-App Purchases

00:49:34.266 --> 00:49:36.276 A:middle
or subscriptions, you will need

00:49:36.276 --> 00:49:37.936 A:middle
to recreate those in App Store

00:49:37.936 --> 00:49:39.356 A:middle
Connect for your new Mac app.

00:49:40.366 --> 00:49:41.296 A:middle
And if you want to share the

00:49:41.296 --> 00:49:42.856 A:middle
same purchase history between

00:49:42.856 --> 00:49:44.536 A:middle
both apps, that will require

00:49:44.536 --> 00:49:45.566 A:middle
that you maintain your own

00:49:45.566 --> 00:49:46.916 A:middle
server-side synching solution.

00:49:47.476 --> 00:49:50.666 A:middle
If you have a game, you should

00:49:50.666 --> 00:49:52.286 A:middle
begin using Game Center Groups

00:49:52.416 --> 00:49:53.726 A:middle
to share your leaderboard and

00:49:53.726 --> 00:49:54.946 A:middle
achievement data between both

00:49:54.946 --> 00:49:55.306 A:middle
apps.

00:49:56.226 --> 00:49:57.796 A:middle
And if you have a multiplayer

00:49:57.796 --> 00:49:59.376 A:middle
game, you should update the

00:49:59.376 --> 00:50:00.666 A:middle
Multiplayer Compatibility

00:49:59.376 --> 00:50:00.666 A:middle
Multiplayer Compatibility

00:50:00.666 --> 00:50:02.236 A:middle
section in App Store Connect

00:50:02.696 --> 00:50:03.496 A:middle
that will ensure that your

00:50:03.496 --> 00:50:04.496 A:middle
players are matched with the

00:50:04.496 --> 00:50:05.866 A:middle
appropriate versions of your app

00:50:06.216 --> 00:50:06.956 A:middle
across iOS and Mac.

00:50:09.976 --> 00:50:10.276 A:middle
All right.

00:50:10.276 --> 00:50:11.346 A:middle
So you can begin playing with

00:50:11.346 --> 00:50:12.996 A:middle
all of this now, but a heads-up.

00:50:13.336 --> 00:50:15.406 A:middle
For the time being, the App

00:50:15.406 --> 00:50:16.746 A:middle
Store will not be accepting

00:50:16.856 --> 00:50:18.746 A:middle
uploads with the prefix UIKit

00:50:18.746 --> 00:50:19.206 A:middle
for Mac.

00:50:19.526 --> 00:50:20.906 A:middle
You can still create an App

00:50:20.906 --> 00:50:22.776 A:middle
record and experiment with those

00:50:22.776 --> 00:50:24.386 A:middle
StoreKit and GameKit APIs in the

00:50:24.386 --> 00:50:24.916 A:middle
meantime.

00:50:25.986 --> 00:50:27.456 A:middle
Over the summer, we will begin

00:50:27.456 --> 00:50:28.966 A:middle
accepting uploads and this would

00:50:28.966 --> 00:50:30.046 A:middle
be a good time to practice

00:50:30.046 --> 00:50:30.796 A:middle
uploading your app.

00:50:31.806 --> 00:50:33.676 A:middle
And finally, when Xcode 11 is

00:50:33.676 --> 00:50:35.066 A:middle
released, you can begin

00:50:35.066 --> 00:50:35.876 A:middle
submitting for app review.

00:50:38.566 --> 00:50:40.176 A:middle
And that is distribution on the

00:50:40.176 --> 00:50:40.556 A:middle
App Store.

00:50:42.516 --> 00:50:46.526 A:middle
[Applause]

00:50:47.026 --> 00:50:48.666 A:middle
Now, there are other options if

00:50:48.666 --> 00:50:49.996 A:middle
you'd like to distribute outside

00:50:49.996 --> 00:50:50.706 A:middle
of the App Store.

00:50:51.706 --> 00:50:53.206 A:middle
You can serve you app directly

00:50:53.256 --> 00:50:56.336 A:middle
to your customers if you sign

00:50:56.336 --> 00:50:57.696 A:middle
your app with a developer ID

00:50:57.696 --> 00:50:59.686 A:middle
certificate and get it notarized

00:50:59.686 --> 00:51:00.126 A:middle
by Apple.

00:50:59.686 --> 00:51:00.126 A:middle
by Apple.

00:51:01.806 --> 00:51:03.076 A:middle
Notarized apps are a great

00:51:03.076 --> 00:51:04.316 A:middle
evolution and security for the

00:51:04.316 --> 00:51:04.666 A:middle
Mac.

00:51:05.356 --> 00:51:06.786 A:middle
We can all take comfort that the

00:51:06.786 --> 00:51:08.476 A:middle
apps that we download and run on

00:51:08.476 --> 00:51:10.186 A:middle
our Mac have been signed by the

00:51:10.186 --> 00:51:12.116 A:middle
developer that wrote it and that

00:51:12.116 --> 00:51:13.376 A:middle
signature has been vetted by

00:51:13.376 --> 00:51:13.756 A:middle
Apple.

00:51:14.996 --> 00:51:16.416 A:middle
There's no app review for these

00:51:16.416 --> 00:51:17.906 A:middle
apps, but we enforce good

00:51:17.906 --> 00:51:19.176 A:middle
policies like requiring that

00:51:19.176 --> 00:51:20.506 A:middle
Hardened Runtime be turned on in

00:51:20.506 --> 00:51:21.406 A:middle
your app.

00:51:22.786 --> 00:51:24.146 A:middle
And there's great command line

00:51:24.146 --> 00:51:25.296 A:middle
tool support to sign and

00:51:25.296 --> 00:51:26.646 A:middle
notarize your app.

00:51:27.506 --> 00:51:28.856 A:middle
And sharing a notarized app with

00:51:28.856 --> 00:51:30.086 A:middle
your team is a great alternative

00:51:30.086 --> 00:51:31.136 A:middle
to TestFlight which is not

00:51:31.136 --> 00:51:32.026 A:middle
available on the Mac.

00:51:32.896 --> 00:51:34.666 A:middle
One caveat though, signing this

00:51:34.666 --> 00:51:35.866 A:middle
way doesn't allow you to use

00:51:35.866 --> 00:51:37.316 A:middle
those App Store based features

00:51:37.316 --> 00:51:38.696 A:middle
like GameKit and StoreKit.

00:51:40.936 --> 00:51:43.546 A:middle
Now, signing a notarized app is

00:51:43.546 --> 00:51:44.756 A:middle
not as scary as it sounds.

00:51:44.756 --> 00:51:45.716 A:middle
You can do all of this from

00:51:45.716 --> 00:51:46.066 A:middle
Xcode.

00:51:46.776 --> 00:51:48.716 A:middle
The first step is uploading your

00:51:48.716 --> 00:51:49.366 A:middle
app to Apple.

00:51:50.406 --> 00:51:53.186 A:middle
In this process, Xcode will sign

00:51:53.186 --> 00:51:54.366 A:middle
your app with the developer ID

00:51:54.366 --> 00:51:56.206 A:middle
certificate and Apple will scan

00:51:56.206 --> 00:51:56.816 A:middle
it for malware.

00:51:58.166 --> 00:51:59.726 A:middle
After a few minutes, Xcode will

00:51:59.726 --> 00:52:01.896 A:middle
receive a notification, notarize

00:51:59.726 --> 00:52:01.896 A:middle
receive a notification, notarize

00:52:01.896 --> 00:52:03.316 A:middle
the app, at which point you can

00:52:03.316 --> 00:52:05.476 A:middle
export it, you can zip it up or

00:52:05.476 --> 00:52:07.316 A:middle
put it in a disk image and make

00:52:07.316 --> 00:52:07.976 A:middle
it available on your server.

00:52:11.686 --> 00:52:12.706 A:middle
If you want to know more about

00:52:12.706 --> 00:52:14.046 A:middle
the security model or how to use

00:52:14.046 --> 00:52:15.476 A:middle
it in your app, I recommend

00:52:15.476 --> 00:52:16.426 A:middle
checking out the session from

00:52:16.426 --> 00:52:17.556 A:middle
this year, All About

00:52:17.556 --> 00:52:17.976 A:middle
Notarization.

00:52:20.636 --> 00:52:20.956 A:middle
All right.

00:52:21.096 --> 00:52:22.106 A:middle
Those are your options for

00:52:22.106 --> 00:52:24.236 A:middle
distribution to your customers.

00:52:25.416 --> 00:52:26.526 A:middle
There is a third distribution

00:52:26.526 --> 00:52:28.286 A:middle
option worth mentioning and that

00:52:28.286 --> 00:52:29.516 A:middle
is development signing.

00:52:30.986 --> 00:52:32.216 A:middle
Now, development signing is just

00:52:32.216 --> 00:52:33.296 A:middle
the same as you're used to on

00:52:33.436 --> 00:52:33.916 A:middle
iOS.

00:52:34.426 --> 00:52:36.176 A:middle
It is great for sharing a build

00:52:36.176 --> 00:52:37.246 A:middle
with your team to test.

00:52:37.856 --> 00:52:39.406 A:middle
And remember, when you share

00:52:39.576 --> 00:52:41.456 A:middle
with a new Mac, remember to

00:52:41.456 --> 00:52:42.836 A:middle
register any new devices on the

00:52:42.836 --> 00:52:43.526 A:middle
developer portal.

00:52:44.036 --> 00:52:46.906 A:middle
And development signing is what

00:52:46.906 --> 00:52:48.496 A:middle
you should use to test those

00:52:48.496 --> 00:52:50.116 A:middle
StoreKit and GameKit APIs.

00:52:50.636 --> 00:52:51.506 A:middle
You can-- When you use

00:52:51.506 --> 00:52:53.166 A:middle
development signing, you can use

00:52:53.166 --> 00:52:55.286 A:middle
Sandbox test accounts instead of

00:52:55.286 --> 00:52:56.266 A:middle
spending your own money

00:52:56.266 --> 00:52:57.696 A:middle
exercising receipt validation.

00:53:00.556 --> 00:53:01.556 A:middle
And those are your options for

00:53:01.556 --> 00:53:05.486 A:middle
distribution on the Mac.

00:53:05.686 --> 00:53:08.736 A:middle
Now, to be sure, this has all

00:53:08.736 --> 00:53:09.596 A:middle
been a lot to take in.

00:53:10.776 --> 00:53:13.246 A:middle
But consider if you will how far

00:53:13.246 --> 00:53:13.656 A:middle
we've come.

00:53:14.926 --> 00:53:15.666 A:middle
Maybe you're like me.

00:53:16.816 --> 00:53:17.846 A:middle
You began as an iPhone

00:53:17.846 --> 00:53:18.316 A:middle
developer.

00:53:19.546 --> 00:53:21.076 A:middle
You mastered table views and

00:53:21.076 --> 00:53:23.566 A:middle
screen rotation, then you

00:53:23.566 --> 00:53:24.746 A:middle
graduated to something a bit

00:53:24.816 --> 00:53:25.086 A:middle
bigger.

00:53:26.076 --> 00:53:28.036 A:middle
You sought opportunity on iPad.

00:53:29.366 --> 00:53:30.736 A:middle
You challenged yourself with a

00:53:30.736 --> 00:53:32.486 A:middle
new form factor adding

00:53:32.486 --> 00:53:35.766 A:middle
multitasking and drag and drop.

00:53:35.956 --> 00:53:37.486 A:middle
Your next adventure will be the

00:53:37.486 --> 00:53:37.856 A:middle
Mac.

00:53:38.876 --> 00:53:40.266 A:middle
You'll conquer window resizing

00:53:40.266 --> 00:53:40.916 A:middle
and menu bars.

00:53:42.176 --> 00:53:43.386 A:middle
I am delighted to see what you

00:53:43.386 --> 00:53:44.136 A:middle
bring to the Mac.

00:53:44.756 --> 00:53:46.146 A:middle
We all stand to share greatly in

00:53:46.146 --> 00:53:46.716 A:middle
its growth.

00:53:47.606 --> 00:53:48.836 A:middle
Now, go check that checkbox.

00:53:50.106 --> 00:53:50.976 A:middle
Please, join us in the labs.

00:53:51.016 --> 00:53:52.326 A:middle
[Applause]

00:53:52.326 --> 00:53:53.196 A:middle
Please watch the related

00:53:53.196 --> 00:53:53.616 A:middle
sessions.

00:53:54.106 --> 00:53:55.366 A:middle
Please, have a fantastic WWDC.

00:53:55.366 --> 00:53:55.796 A:middle
Thank you.

00:53:56.516 --> 00:54:00.500 A:middle
[ Applause ]
