WEBVTT

00:00:00.506 --> 00:00:04.516 A:middle
[ Music ]

00:00:05.016 --> 00:00:07.016 A:middle
[ Silence ]

00:00:07.516 --> 00:00:13.416 A:middle
[ Applause ]

00:00:13.916 --> 00:00:14.696 A:middle
&gt;&gt; Good afternoon.

00:00:15.066 --> 00:00:16.946 A:middle
And welcome to Mastering Xcode

00:00:16.996 --> 00:00:17.466 A:middle
Previews.

00:00:17.636 --> 00:00:19.196 A:middle
You have probably seen Xcode

00:00:19.196 --> 00:00:21.626 A:middle
Previews in multiple places

00:00:21.626 --> 00:00:22.356 A:middle
through the week: in the

00:00:22.356 --> 00:00:23.556 A:middle
keynote, in the State of the

00:00:23.556 --> 00:00:24.686 A:middle
Union address, and multiple

00:00:24.686 --> 00:00:25.986 A:middle
sessions focusing on SwiftUI.

00:00:25.986 --> 00:00:27.916 A:middle
But today we are going to focus

00:00:27.916 --> 00:00:29.176 A:middle
on previewing - on Xcode

00:00:29.176 --> 00:00:30.016 A:middle
previews themselves.

00:00:30.946 --> 00:00:31.826 A:middle
My name is Anton.

00:00:31.826 --> 00:00:33.206 A:middle
And a little bit later I will be

00:00:33.206 --> 00:00:34.806 A:middle
joined onstage by my colleague

00:00:34.806 --> 00:00:36.496 A:middle
Nate to talk about what Xcode

00:00:36.496 --> 00:00:38.536 A:middle
previews are, how they work, and

00:00:38.536 --> 00:00:39.866 A:middle
how to configure them to take

00:00:39.866 --> 00:00:41.056 A:middle
advantage of them in your

00:00:41.056 --> 00:00:42.176 A:middle
workflow -- whether you are

00:00:42.176 --> 00:00:43.126 A:middle
working on a brand new

00:00:43.126 --> 00:00:44.536 A:middle
application using SwiftUI or an

00:00:45.096 --> 00:00:47.396 A:middle
existing app using UIKit or

00:00:47.396 --> 00:00:47.766 A:middle
AppKit.

00:00:48.826 --> 00:00:50.186 A:middle
So let me start with a little

00:00:50.186 --> 00:00:50.506 A:middle
story.

00:00:51.226 --> 00:00:53.326 A:middle
Let's say a designer comes to

00:00:53.326 --> 00:00:54.526 A:middle
you and brings a mockup for a

00:00:54.526 --> 00:00:56.246 A:middle
screen that they have been

00:00:56.246 --> 00:00:58.106 A:middle
working on for your Disney

00:00:58.106 --> 00:00:58.646 A:middle
[phonetic] application.

00:00:59.186 --> 00:01:00.766 A:middle
You take this mockup, and you

00:00:59.186 --> 00:01:00.766 A:middle
You take this mockup, and you

00:01:00.766 --> 00:01:01.686 A:middle
take it to your desk, and you

00:01:01.686 --> 00:01:02.146 A:middle
work on it.

00:01:02.146 --> 00:01:02.576 A:middle
You build it.

00:01:03.036 --> 00:01:04.936 A:middle
And you bring it back to show

00:01:04.936 --> 00:01:05.876 A:middle
your designer your work.

00:01:06.626 --> 00:01:07.676 A:middle
You run the code.

00:01:08.146 --> 00:01:09.416 A:middle
You navigate through a bunch of

00:01:09.416 --> 00:01:10.266 A:middle
screens that you have already

00:01:10.266 --> 00:01:11.836 A:middle
built before to this new screen,

00:01:12.256 --> 00:01:12.966 A:middle
show it to them.

00:01:13.076 --> 00:01:15.166 A:middle
And they say, "Hey that looks

00:01:15.166 --> 00:01:15.666 A:middle
pretty good.

00:01:15.976 --> 00:01:18.566 A:middle
But now that I see this thing in

00:01:18.566 --> 00:01:20.816 A:middle
the flesh, that button, that

00:01:20.856 --> 00:01:21.826 A:middle
could be a little bit more

00:01:21.826 --> 00:01:22.336 A:middle
blue."

00:01:23.256 --> 00:01:24.276 A:middle
That - that's no big deal.

00:01:24.276 --> 00:01:25.276 A:middle
You quit the app, you open

00:01:25.326 --> 00:01:26.456 A:middle
Xcode, you make the edit that

00:01:26.456 --> 00:01:27.296 A:middle
you want to make.

00:01:27.366 --> 00:01:29.326 A:middle
You run it again.

00:01:29.326 --> 00:01:30.916 A:middle
You navigate through a bunch of

00:01:30.916 --> 00:01:32.106 A:middle
screens to the new screen that

00:01:32.106 --> 00:01:32.756 A:middle
you have just built.

00:01:32.756 --> 00:01:33.956 A:middle
You show it to your designer.

00:01:33.956 --> 00:01:37.436 A:middle
And they go, "Hey, that's much

00:01:37.476 --> 00:01:37.746 A:middle
better.

00:01:38.086 --> 00:01:41.656 A:middle
But the padding on that text is

00:01:41.656 --> 00:01:42.786 A:middle
- it could be a little tighter,

00:01:42.786 --> 00:01:43.296 A:middle
don't you think?"

00:01:44.546 --> 00:01:45.616 A:middle
You get where I'm going with

00:01:45.616 --> 00:01:46.076 A:middle
this story.

00:01:46.076 --> 00:01:48.036 A:middle
This sort of iteration, this

00:01:48.036 --> 00:01:49.356 A:middle
back-and-forth, is a normal

00:01:49.356 --> 00:01:49.936 A:middle
process.

00:01:49.936 --> 00:01:51.556 A:middle
It happens to all of us.

00:01:51.556 --> 00:01:52.746 A:middle
And this is how we get

00:01:53.196 --> 00:01:54.376 A:middle
great-looking apps.

00:01:54.756 --> 00:01:55.706 A:middle
But this is something that's

00:01:55.706 --> 00:01:58.006 A:middle
also potentially time consuming.

00:01:58.006 --> 00:01:59.626 A:middle
And the time-consuming bit here

00:01:59.896 --> 00:02:01.816 A:middle
is not the iteration itself.

00:01:59.896 --> 00:02:01.816 A:middle
is not the iteration itself.

00:02:01.816 --> 00:02:03.066 A:middle
It's not the making of the small

00:02:03.066 --> 00:02:04.136 A:middle
changes here and there.

00:02:04.136 --> 00:02:05.236 A:middle
And it's not the getting of the

00:02:05.236 --> 00:02:05.756 A:middle
feedback.

00:02:06.126 --> 00:02:08.166 A:middle
It's the building and running

00:02:08.166 --> 00:02:10.145 A:middle
and configuring and navigating

00:02:10.455 --> 00:02:11.586 A:middle
and getting your app to the

00:02:11.586 --> 00:02:13.596 A:middle
state where you can verify that

00:02:13.596 --> 00:02:14.646 A:middle
the changes that you are making

00:02:14.646 --> 00:02:15.806 A:middle
have the results you expect.

00:02:17.796 --> 00:02:20.266 A:middle
So let me give you another

00:02:21.166 --> 00:02:21.406 A:middle
example.

00:02:22.296 --> 00:02:23.746 A:middle
So let's say your designer - you

00:02:23.786 --> 00:02:25.586 A:middle
and your designer are now done,

00:02:25.586 --> 00:02:28.656 A:middle
and you are happy with the view

00:02:28.656 --> 00:02:29.136 A:middle
that you got.

00:02:29.136 --> 00:02:30.496 A:middle
And you take it to your desk.

00:02:30.956 --> 00:02:32.936 A:middle
But your work as a developer

00:02:33.716 --> 00:02:36.276 A:middle
isn't done yet because, as

00:02:36.276 --> 00:02:38.036 A:middle
developers, we want to build

00:02:38.386 --> 00:02:39.386 A:middle
well-behaved apps.

00:02:39.546 --> 00:02:42.066 A:middle
And a well-behaved app means

00:02:42.066 --> 00:02:44.706 A:middle
that your new view, it needs to

00:02:44.706 --> 00:02:45.976 A:middle
look good no matter what

00:02:45.976 --> 00:02:47.206 A:middle
configuration your user is

00:02:47.206 --> 00:02:47.746 A:middle
running it in.

00:02:48.256 --> 00:02:49.406 A:middle
So for example, it needs to look

00:02:49.406 --> 00:02:52.786 A:middle
great in dark mode.

00:02:53.936 --> 00:02:56.016 A:middle
Or at a different dynamic

00:02:56.046 --> 00:02:56.876 A:middle
content size.

00:02:57.426 --> 00:03:00.366 A:middle
Or maybe even on a different

00:02:57.426 --> 00:03:00.366 A:middle
Or maybe even on a different

00:03:00.366 --> 00:03:00.786 A:middle
device.

00:03:02.256 --> 00:03:04.056 A:middle
And there is a real tension

00:03:04.566 --> 00:03:07.496 A:middle
between verifying that your UI

00:03:07.496 --> 00:03:08.996 A:middle
and your app looks as good as it

00:03:08.996 --> 00:03:11.056 A:middle
can possibly look under a

00:03:11.056 --> 00:03:12.396 A:middle
variety of circumstances.

00:03:12.736 --> 00:03:14.656 A:middle
And, you know, actually shipping

00:03:14.656 --> 00:03:16.576 A:middle
your app to the App Store that

00:03:16.576 --> 00:03:18.416 A:middle
we as developers are all

00:03:18.936 --> 00:03:19.586 A:middle
familiar with.

00:03:20.386 --> 00:03:22.416 A:middle
So the Xcode team has thought

00:03:22.416 --> 00:03:23.616 A:middle
about this problem for a while.

00:03:23.956 --> 00:03:25.346 A:middle
And the solution that we got -

00:03:25.386 --> 00:03:27.796 A:middle
came up with is Xcode Previews.

00:03:28.136 --> 00:03:29.426 A:middle
Now Xcode Previews is a new

00:03:29.486 --> 00:03:32.676 A:middle
feature of Xcode that allows you

00:03:33.076 --> 00:03:35.056 A:middle
to - that institute - minimize

00:03:35.056 --> 00:03:36.186 A:middle
the amount of time you spend

00:03:36.326 --> 00:03:37.196 A:middle
building and running and

00:03:37.196 --> 00:03:39.316 A:middle
configuring your views to verify

00:03:39.316 --> 00:03:40.336 A:middle
the changes that you are making.

00:03:40.716 --> 00:03:42.896 A:middle
And to - and lets you focus on

00:03:42.896 --> 00:03:44.586 A:middle
the things that you love doing

00:03:44.586 --> 00:03:46.566 A:middle
best, which is building great

00:03:47.306 --> 00:03:47.566 A:middle
apps.

00:03:48.636 --> 00:03:50.306 A:middle
But the question is, how?

00:03:50.306 --> 00:03:51.506 A:middle
How does this work?

00:03:51.506 --> 00:03:52.136 A:middle
How does it do it?

00:03:53.026 --> 00:03:54.616 A:middle
Well when you enable Previews in

00:03:54.616 --> 00:03:56.706 A:middle
your application, Xcode actually

00:03:56.786 --> 00:03:58.556 A:middle
builds your app in a special

00:03:59.456 --> 00:03:59.523 A:middle
way.

00:04:00.226 --> 00:04:03.166 A:middle
Since Xcode knows what view and

00:04:03.166 --> 00:04:04.356 A:middle
what file you are currently

00:04:04.356 --> 00:04:05.936 A:middle
working on at all times, it can

00:04:05.936 --> 00:04:08.466 A:middle
compile just that file, just

00:04:08.496 --> 00:04:09.906 A:middle
that view, separate from the

00:04:09.906 --> 00:04:12.336 A:middle
rest of your application -- and

00:04:12.336 --> 00:04:14.516 A:middle
then inject that implementation

00:04:15.096 --> 00:04:16.826 A:middle
back into your application using

00:04:16.826 --> 00:04:18.486 A:middle
Swift's dynamic replacement

00:04:18.486 --> 00:04:18.805 A:middle
feature.

00:04:20.255 --> 00:04:21.446 A:middle
And because the amount of code

00:04:21.446 --> 00:04:22.726 A:middle
that needs to be recompiled for

00:04:22.726 --> 00:04:24.126 A:middle
every change is significantly

00:04:24.126 --> 00:04:26.486 A:middle
smaller than the entirety of the

00:04:26.486 --> 00:04:27.936 A:middle
rest of your application, Xcode

00:04:27.936 --> 00:04:29.486 A:middle
can continuously and repeatedly

00:04:29.486 --> 00:04:31.236 A:middle
do this for every change that

00:04:31.236 --> 00:04:31.556 A:middle
you make.

00:04:32.576 --> 00:04:34.886 A:middle
And that means the feedback on

00:04:34.886 --> 00:04:37.056 A:middle
your changes is much, much

00:04:37.056 --> 00:04:37.416 A:middle
quicker.

00:04:38.306 --> 00:04:39.856 A:middle
But there is a whole class of

00:04:39.896 --> 00:04:42.026 A:middle
changes that Xcode can optimize

00:04:42.056 --> 00:04:42.596 A:middle
even further.

00:04:42.966 --> 00:04:45.686 A:middle
So for changes that involve only

00:04:45.686 --> 00:04:47.296 A:middle
the literal values, like strings

00:04:47.296 --> 00:04:49.296 A:middle
or numbers, no recompilation is

00:04:49.296 --> 00:04:49.976 A:middle
required at all.

00:04:51.216 --> 00:04:53.486 A:middle
That - Xcode just injects the

00:04:53.486 --> 00:04:54.526 A:middle
new value into the running

00:04:54.526 --> 00:04:56.896 A:middle
application, and you get instant

00:04:56.896 --> 00:04:58.646 A:middle
feedback much like you get from

00:04:58.646 --> 00:04:59.966 A:middle
a visual editing tool.

00:05:00.596 --> 00:05:04.066 A:middle
And it's important to note here

00:05:04.416 --> 00:05:08.456 A:middle
that the Xcode Previews is not a

00:05:08.456 --> 00:05:09.936 A:middle
representation of what Xcode

00:05:09.936 --> 00:05:12.196 A:middle
thinks your view will look like

00:05:12.266 --> 00:05:13.516 A:middle
when you run the application.

00:05:14.116 --> 00:05:16.256 A:middle
It is actually building and

00:05:16.256 --> 00:05:17.036 A:middle
running your code.

00:05:18.606 --> 00:05:20.446 A:middle
So all the context that is

00:05:20.446 --> 00:05:22.156 A:middle
normally available within your

00:05:22.156 --> 00:05:23.906 A:middle
running application is available

00:05:23.986 --> 00:05:25.616 A:middle
to the view under Previews.

00:05:25.616 --> 00:05:27.506 A:middle
If you have custom assets, you

00:05:27.506 --> 00:05:28.466 A:middle
can use those within your

00:05:28.466 --> 00:05:29.336 A:middle
preview and they will render.

00:05:29.606 --> 00:05:32.046 A:middle
If you have custom logic in your

00:05:32.046 --> 00:05:32.766 A:middle
app that you want to use --

00:05:32.766 --> 00:05:34.006 A:middle
which of course, you know, every

00:05:34.006 --> 00:05:35.836 A:middle
app would have custom logic --

00:05:36.236 --> 00:05:37.216 A:middle
you could use that as well.

00:05:37.216 --> 00:05:39.726 A:middle
And even runtime configuration,

00:05:39.726 --> 00:05:41.116 A:middle
something like "Set user

00:05:41.116 --> 00:05:42.696 A:middle
default," is available to your

00:05:42.696 --> 00:05:43.796 A:middle
views on your Previews as well.

00:05:45.756 --> 00:05:48.626 A:middle
So now the question is, how does

00:05:48.626 --> 00:05:49.976 A:middle
Xcode know what to show you?

00:05:52.826 --> 00:05:55.136 A:middle
Well it turns out all you need

00:05:55.136 --> 00:05:57.016 A:middle
to tell Xcode what view to

00:05:57.016 --> 00:05:58.446 A:middle
preview and how to configure the

00:05:58.446 --> 00:06:01.676 A:middle
data is a little bit of code.

00:05:58.446 --> 00:06:01.676 A:middle
data is a little bit of code.

00:06:01.676 --> 00:06:03.036 A:middle
And all you do is you implement

00:06:03.036 --> 00:06:05.496 A:middle
a small type that conforms to a

00:06:05.556 --> 00:06:07.716 A:middle
PreviewProvider protocol, which

00:06:07.966 --> 00:06:08.996 A:middle
is a part of a SwiftUI

00:06:08.996 --> 00:06:09.436 A:middle
framework.

00:06:10.016 --> 00:06:11.046 A:middle
And that particle has one

00:06:11.046 --> 00:06:12.926 A:middle
requirement, just a Previews

00:06:12.976 --> 00:06:14.026 A:middle
property that you implement.

00:06:14.396 --> 00:06:15.426 A:middle
And then you return some

00:06:15.426 --> 00:06:15.896 A:middle
content.

00:06:15.936 --> 00:06:17.796 A:middle
And really, what your return out

00:06:17.796 --> 00:06:20.616 A:middle
of here is completely up to you.

00:06:21.226 --> 00:06:24.956 A:middle
And because this code lives as a

00:06:25.036 --> 00:06:26.456 A:middle
part of your application as

00:06:26.456 --> 00:06:28.126 A:middle
well, it's compiled alongside

00:06:28.126 --> 00:06:29.086 A:middle
the rest of your application

00:06:29.086 --> 00:06:29.326 A:middle
code.

00:06:29.836 --> 00:06:33.076 A:middle
The same story applies for the

00:06:33.226 --> 00:06:34.786 A:middle
configuration code as it does

00:06:34.786 --> 00:06:35.166 A:middle
for the view.

00:06:35.166 --> 00:06:37.736 A:middle
So you also can use custom logic

00:06:37.736 --> 00:06:40.946 A:middle
in here and custom resources and

00:06:40.946 --> 00:06:42.256 A:middle
even runtime configuration.

00:06:42.646 --> 00:06:44.336 A:middle
There are several advantages

00:06:44.336 --> 00:06:46.616 A:middle
beyond that to using code to

00:06:46.616 --> 00:06:48.216 A:middle
configure your previews.

00:06:48.776 --> 00:06:50.626 A:middle
For instance, since this is just

00:06:50.626 --> 00:06:52.256 A:middle
SwiftUI code, this configuration

00:06:52.256 --> 00:06:53.436 A:middle
code is just SwiftUI.

00:06:53.436 --> 00:06:54.616 A:middle
If you know how to create

00:06:55.006 --> 00:06:56.366 A:middle
SwiftUIView, you already

00:06:56.366 --> 00:06:58.006 A:middle
automatically know how to

00:06:58.006 --> 00:07:00.816 A:middle
configure a preview for it.

00:06:58.006 --> 00:07:00.816 A:middle
configure a preview for it.

00:07:01.416 --> 00:07:03.136 A:middle
Also, you can write a preview

00:07:03.136 --> 00:07:04.716 A:middle
once, put it in your source

00:07:04.716 --> 00:07:05.806 A:middle
control, and share it with your

00:07:05.806 --> 00:07:06.076 A:middle
team.

00:07:06.076 --> 00:07:07.446 A:middle
So that means you write a

00:07:07.446 --> 00:07:08.876 A:middle
preview, and the rest of your

00:07:08.876 --> 00:07:09.736 A:middle
team can benefit.

00:07:10.576 --> 00:07:12.386 A:middle
And then finally, as you make

00:07:12.386 --> 00:07:13.516 A:middle
changes, the - our views are

00:07:13.516 --> 00:07:14.296 A:middle
always evolving.

00:07:14.386 --> 00:07:15.626 A:middle
Our apps are always evolving.

00:07:15.876 --> 00:07:18.346 A:middle
As the view changes, and its API

00:07:18.346 --> 00:07:20.356 A:middle
changes, the compiler can help

00:07:20.356 --> 00:07:21.426 A:middle
you make sure that your preview

00:07:21.426 --> 00:07:23.496 A:middle
stays in sync with the view so

00:07:23.496 --> 00:07:25.476 A:middle
that you always know that you

00:07:25.476 --> 00:07:28.606 A:middle
are previewing the right thing.

00:07:28.946 --> 00:07:31.006 A:middle
So that's a brief introduction

00:07:31.036 --> 00:07:32.556 A:middle
into how previews work.

00:07:33.196 --> 00:07:34.596 A:middle
To tell you more about how to

00:07:34.596 --> 00:07:36.506 A:middle
configure them to take advantage

00:07:36.506 --> 00:07:37.476 A:middle
of them to the fullest, please

00:07:37.476 --> 00:07:37.976 A:middle
welcome Nate.

00:07:38.516 --> 00:07:45.500 A:middle
[ Applause ]

00:07:48.506 --> 00:07:50.016 A:middle
&gt;&gt; Anton told you that previews

00:07:50.016 --> 00:07:50.516 A:middle
are code.

00:07:51.156 --> 00:07:52.066 A:middle
I would like to show you how to

00:07:52.066 --> 00:07:52.556 A:middle
write one.

00:07:53.116 --> 00:07:56.296 A:middle
The Xcode Previews team has

00:07:56.296 --> 00:07:57.906 A:middle
decided to take a trip to the

00:07:58.456 --> 00:07:58.526 A:middle
zoo.

00:08:00.116 --> 00:08:01.316 A:middle
There are a lot of animals at

00:08:01.316 --> 00:08:02.616 A:middle
the zoo, and we want to make

00:08:02.616 --> 00:08:04.376 A:middle
sure not to miss even one.

00:08:05.616 --> 00:08:06.526 A:middle
Naturally, being the app

00:08:06.526 --> 00:08:07.736 A:middle
developers that we are, we

00:08:07.736 --> 00:08:08.996 A:middle
couldn't help ourselves but had

00:08:08.996 --> 00:08:11.056 A:middle
to build an application to track

00:08:11.136 --> 00:08:12.066 A:middle
the animals at the zoo.

00:08:12.636 --> 00:08:14.886 A:middle
I have been working on that

00:08:14.886 --> 00:08:15.606 A:middle
application.

00:08:16.116 --> 00:08:17.846 A:middle
In particular, the main user

00:08:17.846 --> 00:08:20.136 A:middle
interface for it is a list of

00:08:20.136 --> 00:08:20.986 A:middle
animals at the zoo.

00:08:21.776 --> 00:08:24.276 A:middle
In that list is displayed a

00:08:24.276 --> 00:08:25.336 A:middle
number of animal cells.

00:08:26.006 --> 00:08:28.556 A:middle
Let me show you what I have got

00:08:28.556 --> 00:08:28.956 A:middle
so far.

00:08:32.456 --> 00:08:35.246 A:middle
In the canvas, you see a preview

00:08:35.246 --> 00:08:36.166 A:middle
of the animal cell.

00:08:36.645 --> 00:08:39.515 A:middle
Because the run destination of

00:08:39.515 --> 00:08:41.416 A:middle
iPhone 10S is selected, that's

00:08:41.416 --> 00:08:42.696 A:middle
the chrome we see around our

00:08:42.696 --> 00:08:43.476 A:middle
animal cell view.

00:08:43.816 --> 00:08:45.796 A:middle
But we want to make sure that

00:08:45.796 --> 00:08:47.196 A:middle
our app - that our view looks

00:08:47.196 --> 00:08:48.976 A:middle
great on all devices.

00:08:49.216 --> 00:08:51.046 A:middle
In particular, my daily carry is

00:08:51.046 --> 00:08:51.926 A:middle
an iPhone SE.

00:08:52.816 --> 00:08:54.776 A:middle
Now I could change the run

00:08:54.776 --> 00:08:56.686 A:middle
destination to iPhone SE, but

00:08:56.686 --> 00:08:57.706 A:middle
there is another mechanism

00:08:57.706 --> 00:08:59.026 A:middle
provided by the Previews API --

00:08:59.796 --> 00:09:02.026 A:middle
specifically the preview device.

00:08:59.796 --> 00:09:02.026 A:middle
specifically the preview device.

00:09:02.766 --> 00:09:05.746 A:middle
You pass to that method the name

00:09:05.746 --> 00:09:06.806 A:middle
of the device you want to see a

00:09:06.806 --> 00:09:07.416 A:middle
preview on.

00:09:08.206 --> 00:09:09.666 A:middle
And almost immediately in the

00:09:09.666 --> 00:09:11.966 A:middle
canvas, you see the device

00:09:11.966 --> 00:09:13.026 A:middle
displaying your view.

00:09:13.446 --> 00:09:15.826 A:middle
Now as I am looking at the

00:09:15.826 --> 00:09:17.716 A:middle
device, this iPhone SE showing

00:09:17.716 --> 00:09:18.756 A:middle
the animal cell, I am seeing a

00:09:18.756 --> 00:09:19.256 A:middle
problem.

00:09:19.816 --> 00:09:21.796 A:middle
The rightmost text is truncated.

00:09:22.116 --> 00:09:23.986 A:middle
Let's go ahead and fix that.

00:09:24.646 --> 00:09:26.106 A:middle
To do so, I'll change this

00:09:26.106 --> 00:09:28.246 A:middle
HStack into a VStack.

00:09:29.186 --> 00:09:31.196 A:middle
Immediately, the canvas updates,

00:09:31.346 --> 00:09:33.406 A:middle
showing us exactly what we want.

00:09:34.916 --> 00:09:36.386 A:middle
Now Anton's daily carry is an

00:09:36.386 --> 00:09:37.196 A:middle
iPhone 10r.

00:09:37.536 --> 00:09:38.926 A:middle
To make sure that his device

00:09:38.926 --> 00:09:40.966 A:middle
shows this cell well, we could

00:09:41.196 --> 00:09:42.326 A:middle
change the argument that we are

00:09:42.326 --> 00:09:43.626 A:middle
passing to previewDevice.

00:09:44.126 --> 00:09:45.116 A:middle
But there is an easier way.

00:09:45.686 --> 00:09:47.856 A:middle
Specifically, we can embed this

00:09:47.856 --> 00:09:48.876 A:middle
view in a group.

00:09:49.436 --> 00:09:51.056 A:middle
To do so, Command-click on the

00:09:51.056 --> 00:09:53.096 A:middle
AnimalCell and scroll down to

00:09:53.296 --> 00:09:53.986 A:middle
Embed in Group.

00:09:54.936 --> 00:09:57.486 A:middle
Then add a second instance of

00:09:57.486 --> 00:09:59.256 A:middle
the animal cells to it, this

00:09:59.256 --> 00:10:01.936 A:middle
time calling previewDevice with

00:09:59.256 --> 00:10:01.936 A:middle
time calling previewDevice with

00:10:01.936 --> 00:10:02.926 A:middle
iPhone 10r.

00:10:04.666 --> 00:10:06.666 A:middle
Now we see, in the canvas, a

00:10:06.666 --> 00:10:08.216 A:middle
preview for our cell running on

00:10:08.256 --> 00:10:09.016 A:middle
two devices.

00:10:10.436 --> 00:10:11.966 A:middle
Scientific names of animals are

00:10:11.966 --> 00:10:13.386 A:middle
often written in italics.

00:10:13.716 --> 00:10:14.596 A:middle
Let's go ahead and make that

00:10:14.596 --> 00:10:14.976 A:middle
change right now.

00:10:19.896 --> 00:10:21.186 A:middle
Now in the canvas we can

00:10:21.186 --> 00:10:22.936 A:middle
validate that our change looks

00:10:22.966 --> 00:10:25.086 A:middle
correct on both devices.

00:10:25.256 --> 00:10:25.976 A:middle
This is so easy.

00:10:26.516 --> 00:10:33.256 A:middle
[ Applause ]

00:10:33.756 --> 00:10:35.226 A:middle
It's great to be able to see our

00:10:35.226 --> 00:10:37.056 A:middle
views previewed on the devices

00:10:37.056 --> 00:10:38.096 A:middle
that our users are actually

00:10:38.096 --> 00:10:38.806 A:middle
using.

00:10:39.066 --> 00:10:40.256 A:middle
But for smaller views like a

00:10:40.256 --> 00:10:42.526 A:middle
cell, it's also great to be able

00:10:42.526 --> 00:10:43.906 A:middle
to focus in on the details we

00:10:43.906 --> 00:10:45.706 A:middle
really care about and to strip

00:10:45.706 --> 00:10:47.266 A:middle
away that extraneous chrome.

00:10:48.136 --> 00:10:49.716 A:middle
To do so, the Previews API

00:10:49.716 --> 00:10:51.056 A:middle
provides the method "Preview

00:10:51.056 --> 00:10:51.456 A:middle
Layout."

00:10:51.456 --> 00:10:53.986 A:middle
Now the Preview Layout method

00:10:55.226 --> 00:10:56.376 A:middle
can be passed three different

00:10:56.376 --> 00:10:56.986 A:middle
arguments.

00:10:57.196 --> 00:10:59.106 A:middle
First, you can specify the

00:10:59.106 --> 00:10:59.796 A:middle
device.

00:11:00.036 --> 00:11:00.896 A:middle
That's actually what's being

00:11:00.896 --> 00:11:02.316 A:middle
used by default and what's

00:11:02.316 --> 00:11:03.676 A:middle
displayed in the canvas right

00:11:03.676 --> 00:11:03.916 A:middle
now.

00:11:04.256 --> 00:11:07.646 A:middle
Secondly, you can use a specific

00:11:07.646 --> 00:11:09.076 A:middle
size that you want your preview

00:11:09.076 --> 00:11:09.776 A:middle
to be displayed as.

00:11:10.006 --> 00:11:11.636 A:middle
This is super useful if you know

00:11:11.636 --> 00:11:12.496 A:middle
that your view is going to be

00:11:12.496 --> 00:11:14.436 A:middle
embedded in some larger view at

00:11:14.436 --> 00:11:15.466 A:middle
a particular size.

00:11:15.976 --> 00:11:17.856 A:middle
And finally, you can use Size

00:11:17.856 --> 00:11:18.546 A:middle
That Fits.

00:11:18.926 --> 00:11:20.936 A:middle
This is useful if you want your

00:11:20.936 --> 00:11:23.016 A:middle
view to be able to determine the

00:11:23.016 --> 00:11:25.056 A:middle
size of the preview based on its

00:11:25.056 --> 00:11:25.586 A:middle
content.

00:11:26.226 --> 00:11:27.486 A:middle
Since an animal cell is going to

00:11:27.486 --> 00:11:29.366 A:middle
be embedded in a list, and a

00:11:29.366 --> 00:11:32.666 A:middle
list allows its entities -- the

00:11:32.666 --> 00:11:34.596 A:middle
cells displayed within it -- to

00:11:34.596 --> 00:11:36.536 A:middle
be resized vertically according

00:11:36.536 --> 00:11:37.546 A:middle
to their contents, we are going

00:11:37.546 --> 00:11:38.796 A:middle
to go ahead and use "Size That

00:11:39.486 --> 00:11:39.606 A:middle
Fits."

00:11:41.196 --> 00:11:42.776 A:middle
And immediately, the canvas

00:11:42.776 --> 00:11:44.596 A:middle
update, showing us just what we

00:11:44.596 --> 00:11:44.886 A:middle
want.

00:11:44.916 --> 00:11:47.556 A:middle
I am going to go ahead and zoom

00:11:47.556 --> 00:11:48.996 A:middle
in by clicking on the plus sign

00:11:48.996 --> 00:11:49.806 A:middle
in the bottom right of the

00:11:49.806 --> 00:11:50.386 A:middle
canvas.

00:11:51.936 --> 00:11:55.056 A:middle
You know, the two texts, the red

00:11:55.056 --> 00:11:56.706 A:middle
fox and the family name below

00:11:56.706 --> 00:12:00.236 A:middle
it, Canidae, are a little too

00:11:56.706 --> 00:12:00.236 A:middle
it, Canidae, are a little too

00:12:00.236 --> 00:12:00.986 A:middle
indistinct.

00:12:01.386 --> 00:12:02.866 A:middle
I want them to be visually

00:12:02.866 --> 00:12:04.116 A:middle
distinctive, one from the next.

00:12:04.116 --> 00:12:05.186 A:middle
So I am going to go ahead and

00:12:05.186 --> 00:12:06.656 A:middle
make the red fox be bold.

00:12:07.416 --> 00:12:09.016 A:middle
To do that, I'll Command-click

00:12:09.016 --> 00:12:11.056 A:middle
on the Text and scroll down to

00:12:11.056 --> 00:12:13.266 A:middle
the Inspect action, then change

00:12:13.306 --> 00:12:14.886 A:middle
the weight to Bold.

00:12:16.816 --> 00:12:18.796 A:middle
The source editor gets new code

00:12:18.796 --> 00:12:20.826 A:middle
added to it, and the previews

00:12:20.906 --> 00:12:22.186 A:middle
refresh in response.

00:12:23.096 --> 00:12:23.676 A:middle
This looks great.

00:12:24.366 --> 00:12:27.376 A:middle
A lot of users like to take

00:12:27.376 --> 00:12:29.116 A:middle
advantage of dynamic font sizes.

00:12:29.616 --> 00:12:31.196 A:middle
Let's take a look at what our

00:12:31.196 --> 00:12:32.956 A:middle
view will look like when the

00:12:32.956 --> 00:12:35.226 A:middle
user changes dynamic font size

00:12:35.286 --> 00:12:36.466 A:middle
to extra-large.

00:12:37.466 --> 00:12:39.596 A:middle
Because the preview of API is

00:12:39.596 --> 00:12:41.616 A:middle
part of SwiftUI, we can take

00:12:41.616 --> 00:12:43.626 A:middle
advantage of all of SwiftUI when

00:12:43.626 --> 00:12:44.776 A:middle
we are writing our previews.

00:12:45.186 --> 00:12:47.076 A:middle
In particular, in this case we

00:12:47.076 --> 00:12:48.586 A:middle
can use the environment modifier

00:12:48.586 --> 00:12:51.596 A:middle
and specify the value for the

00:12:51.596 --> 00:12:53.506 A:middle
Size category keypath to be

00:12:53.506 --> 00:12:54.246 A:middle
extra-large.

00:12:56.136 --> 00:12:57.726 A:middle
Now it's great to be able to so

00:12:57.726 --> 00:13:00.066 A:middle
easily change the size category

00:12:57.726 --> 00:13:00.066 A:middle
easily change the size category

00:13:00.066 --> 00:13:01.186 A:middle
that we are seeing our view at.

00:13:01.186 --> 00:13:03.086 A:middle
But what would be even better

00:13:03.356 --> 00:13:05.326 A:middle
would be to be able to see our

00:13:05.326 --> 00:13:07.146 A:middle
view displayed at every single

00:13:07.146 --> 00:13:08.866 A:middle
content size category at once.

00:13:08.866 --> 00:13:11.996 A:middle
What we could do is embed this

00:13:11.996 --> 00:13:13.296 A:middle
view in a group and, and for

00:13:13.296 --> 00:13:15.336 A:middle
each different one, create a

00:13:15.336 --> 00:13:16.456 A:middle
different animal cell.

00:13:16.676 --> 00:13:18.166 A:middle
But that's very repetitive, and

00:13:18.366 --> 00:13:19.226 A:middle
there is a better way.

00:13:20.436 --> 00:13:22.736 A:middle
SwiftUI has the for each

00:13:22.736 --> 00:13:23.106 A:middle
feature.

00:13:23.386 --> 00:13:24.296 A:middle
To use it, I am going to

00:13:24.296 --> 00:13:25.596 A:middle
Command-click on the animal

00:13:25.666 --> 00:13:27.876 A:middle
cell, scroll down to Repeat.

00:13:29.016 --> 00:13:30.466 A:middle
And now, for each of the

00:13:30.466 --> 00:13:32.566 A:middle
integers from 0 to 5, we get a

00:13:32.566 --> 00:13:33.186 A:middle
preview.

00:13:33.486 --> 00:13:35.936 A:middle
But what I actually want is for

00:13:35.936 --> 00:13:37.186 A:middle
each of the Content Size

00:13:37.186 --> 00:13:38.676 A:middle
category cases to have a

00:13:38.716 --> 00:13:41.056 A:middle
preview, and for each of those

00:13:41.056 --> 00:13:43.266 A:middle
cases to specify into the

00:13:43.266 --> 00:13:45.086 A:middle
environment the value for the

00:13:45.086 --> 00:13:47.176 A:middle
size category keypath to be that

00:13:47.176 --> 00:13:47.466 A:middle
case.

00:13:49.026 --> 00:13:51.426 A:middle
Just like that, you can see in

00:13:51.426 --> 00:13:53.256 A:middle
the canvas your view displayed

00:13:53.256 --> 00:13:54.976 A:middle
at every Content Size category.

00:13:55.516 --> 00:14:02.216 A:middle
[ Applause ]

00:13:55.516 --> 00:14:02.216 A:middle
[ Applause ]

00:14:02.716 --> 00:14:05.066 A:middle
Now that we have done this, one

00:14:05.096 --> 00:14:06.176 A:middle
problem I am noticing with the

00:14:06.176 --> 00:14:07.506 A:middle
extra-small content size

00:14:07.506 --> 00:14:09.666 A:middle
category is that the title --

00:14:09.736 --> 00:14:11.076 A:middle
the common name -- really isn't

00:14:11.076 --> 00:14:12.376 A:middle
popping out as much as I'd like.

00:14:12.896 --> 00:14:14.176 A:middle
Let's go ahead and bump that up

00:14:14.176 --> 00:14:14.686 A:middle
a notch.

00:14:15.236 --> 00:14:16.456 A:middle
I am going to Command-click on

00:14:16.456 --> 00:14:17.516 A:middle
the view, this time in the

00:14:17.676 --> 00:14:21.136 A:middle
canvas; again select the Inspect

00:14:21.136 --> 00:14:23.416 A:middle
action; and change the font to

00:14:23.416 --> 00:14:23.716 A:middle
Title.

00:14:24.446 --> 00:14:27.566 A:middle
Code is inserted in the source

00:14:27.596 --> 00:14:29.256 A:middle
editor, and we get an update in

00:14:29.256 --> 00:14:29.846 A:middle
the canvas.

00:14:30.296 --> 00:14:31.196 A:middle
This looks great.

00:14:32.086 --> 00:14:33.876 A:middle
One problem you may encounter

00:14:33.946 --> 00:14:35.036 A:middle
when you have a number of

00:14:35.036 --> 00:14:36.676 A:middle
previews in the canvas like this

00:14:37.066 --> 00:14:38.326 A:middle
is that it's difficult to

00:14:38.326 --> 00:14:39.556 A:middle
distinguish between the

00:14:39.556 --> 00:14:40.456 A:middle
different previews.

00:14:40.746 --> 00:14:42.416 A:middle
You need to know which

00:14:42.416 --> 00:14:44.216 A:middle
configuration in your code, in

00:14:44.216 --> 00:14:45.376 A:middle
your implementation of the

00:14:45.376 --> 00:14:46.656 A:middle
Previews static property

00:14:46.936 --> 00:14:49.436 A:middle
correspond to which preview in

00:14:49.436 --> 00:14:49.896 A:middle
the canvas.

00:14:51.336 --> 00:14:52.666 A:middle
To help out with that problem,

00:14:53.376 --> 00:14:54.876 A:middle
the Previews API provides the

00:14:54.876 --> 00:14:56.586 A:middle
method "Preview Display Name."

00:14:57.266 --> 00:14:58.536 A:middle
In this case we want to use the

00:14:58.536 --> 00:15:00.046 A:middle
name of the content size

00:14:58.536 --> 00:15:00.046 A:middle
name of the content size

00:15:00.046 --> 00:15:01.236 A:middle
category we are displaying.

00:15:01.926 --> 00:15:03.706 A:middle
And right below each preview, we

00:15:03.706 --> 00:15:04.976 A:middle
see the content size category.

00:15:05.516 --> 00:15:10.456 A:middle
[ Applause ]

00:15:10.956 --> 00:15:12.016 A:middle
Yeah. This is really great.

00:15:14.116 --> 00:15:16.746 A:middle
The Previews API is concise and

00:15:16.746 --> 00:15:17.836 A:middle
extremely powerful.

00:15:18.576 --> 00:15:19.826 A:middle
To tell you about how to use

00:15:19.866 --> 00:15:21.936 A:middle
Xcode features to make the most

00:15:21.936 --> 00:15:22.956 A:middle
of your previews, here's Anton.

00:15:23.516 --> 00:15:31.106 A:middle
[ Applause ]

00:15:31.606 --> 00:15:33.426 A:middle
&gt;&gt; So I am going to jump in into

00:15:33.426 --> 00:15:35.426 A:middle
this demo and finish building

00:15:35.586 --> 00:15:37.966 A:middle
the animal cell that Nate was

00:15:37.966 --> 00:15:38.416 A:middle
working on.

00:15:38.416 --> 00:15:39.656 A:middle
And the first thing I am going

00:15:39.656 --> 00:15:41.296 A:middle
to do is I am going to focus on

00:15:41.296 --> 00:15:43.596 A:middle
this Red fox image placeholder.

00:15:43.986 --> 00:15:45.236 A:middle
Now when we shipped this

00:15:45.236 --> 00:15:47.696 A:middle
application, we expected data to

00:15:47.696 --> 00:15:49.186 A:middle
come from a network service that

00:15:49.186 --> 00:15:49.926 A:middle
we are going to provide.

00:15:50.436 --> 00:15:51.656 A:middle
But we haven't built the

00:15:51.656 --> 00:15:53.236 A:middle
networking code yet, and so I

00:15:53.236 --> 00:15:54.786 A:middle
don't have the data to populate

00:15:54.816 --> 00:15:55.246 A:middle
my view.

00:15:55.456 --> 00:15:57.256 A:middle
And so I am using placeholder

00:15:57.256 --> 00:15:58.956 A:middle
data here, and it's easy enough

00:15:58.956 --> 00:16:00.866 A:middle
for strings like we do for fox

00:15:58.956 --> 00:16:00.866 A:middle
for strings like we do for fox

00:16:00.866 --> 00:16:01.036 A:middle
here.

00:16:01.336 --> 00:16:02.426 A:middle
But for images the story is a

00:16:02.426 --> 00:16:03.486 A:middle
little bit more complicated.

00:16:03.896 --> 00:16:05.396 A:middle
That's because I could add an

00:16:05.396 --> 00:16:06.976 A:middle
asset that's a placeholder asset

00:16:06.976 --> 00:16:08.356 A:middle
for use in my previews.

00:16:09.156 --> 00:16:11.276 A:middle
But that would mean that I would

00:16:11.276 --> 00:16:12.536 A:middle
have to then ship this asset

00:16:12.576 --> 00:16:13.816 A:middle
with my application to my

00:16:13.816 --> 00:16:14.706 A:middle
customers, and that's not

00:16:14.706 --> 00:16:15.876 A:middle
something I really want to do.

00:16:16.246 --> 00:16:17.706 A:middle
And I don't want to pollute my

00:16:17.706 --> 00:16:18.036 A:middle
buyer [phonetic].

00:16:18.556 --> 00:16:21.406 A:middle
And so this year Xcode has a new

00:16:21.406 --> 00:16:23.536 A:middle
feature that's going to help us

00:16:23.536 --> 00:16:23.986 A:middle
with this.

00:16:24.516 --> 00:16:25.826 A:middle
And it's called "Development

00:16:25.826 --> 00:16:26.406 A:middle
Assets."

00:16:26.786 --> 00:16:28.006 A:middle
And I'll show you this feature

00:16:28.006 --> 00:16:28.226 A:middle
now.

00:16:28.316 --> 00:16:30.386 A:middle
So I will open the Project

00:16:32.126 --> 00:16:32.286 A:middle
Editor.

00:16:32.476 --> 00:16:34.266 A:middle
And under Targets in general I

00:16:34.266 --> 00:16:35.506 A:middle
will scroll down to Development

00:16:35.506 --> 00:16:35.976 A:middle
Assets.

00:16:36.306 --> 00:16:37.266 A:middle
You will notice that I already

00:16:37.266 --> 00:16:39.636 A:middle
preconfigured Preview Assets as

00:16:39.636 --> 00:16:41.186 A:middle
a catalog here which will hold

00:16:41.186 --> 00:16:42.046 A:middle
all my images.

00:16:42.356 --> 00:16:43.596 A:middle
If you are starting from scratch

00:16:43.636 --> 00:16:45.666 A:middle
and you are using one of our new

00:16:45.666 --> 00:16:46.986 A:middle
templates, this will come

00:16:46.986 --> 00:16:47.956 A:middle
preconfigured for you.

00:16:48.326 --> 00:16:49.206 A:middle
But if you are working on an

00:16:49.206 --> 00:16:50.386 A:middle
existing applications, you can

00:16:50.386 --> 00:16:52.096 A:middle
easily add this here.

00:16:52.716 --> 00:16:54.256 A:middle
So now that we know that I have

00:16:54.316 --> 00:16:55.896 A:middle
these preview assets in an asset

00:16:55.896 --> 00:16:57.386 A:middle
catalog, I can show you that

00:16:57.796 --> 00:16:58.776 A:middle
under my Preview Data.

00:16:58.776 --> 00:16:59.846 A:middle
Here's my asset catalog.

00:16:59.906 --> 00:17:01.336 A:middle
And in it I already have an

00:16:59.906 --> 00:17:01.336 A:middle
And in it I already have an

00:17:01.336 --> 00:17:03.256 A:middle
image for the red fox that I was

00:17:03.256 --> 00:17:04.646 A:middle
going to use as a placeholder.

00:17:05.465 --> 00:17:09.705 A:middle
So I will open my animal cell

00:17:10.526 --> 00:17:13.796 A:middle
and - for us to preview.

00:17:14.326 --> 00:17:17.046 A:middle
And since the placeholder here

00:17:17.046 --> 00:17:19.955 A:middle
was using an image name already,

00:17:20.046 --> 00:17:21.826 A:middle
all I need to do is change this

00:17:21.826 --> 00:17:23.146 A:middle
text to Image.

00:17:23.685 --> 00:17:27.306 A:middle
And the image immediately shows

00:17:27.306 --> 00:17:28.425 A:middle
up in all my previews.

00:17:28.956 --> 00:17:29.756 A:middle
This is looking good.

00:17:30.296 --> 00:17:32.116 A:middle
But I would like to give it some

00:17:32.526 --> 00:17:33.866 A:middle
visual treatment to make it

00:17:33.956 --> 00:17:34.846 A:middle
stand out a little bit.

00:17:35.306 --> 00:17:36.786 A:middle
And I can do that with a little

00:17:36.786 --> 00:17:38.256 A:middle
bit of SwiftUI code.

00:17:38.966 --> 00:17:39.906 A:middle
OK, so this looks good.

00:17:39.906 --> 00:17:41.916 A:middle
There is some shadows and some

00:17:42.216 --> 00:17:42.786 A:middle
overlays.

00:17:43.116 --> 00:17:44.076 A:middle
This looks nice, but look what

00:17:44.076 --> 00:17:45.076 A:middle
happened to my code now.

00:17:45.396 --> 00:17:47.706 A:middle
Most of this view for the cell

00:17:47.706 --> 00:17:49.766 A:middle
is now sort of dominated by this

00:17:49.806 --> 00:17:50.806 A:middle
image treatment code.

00:17:51.406 --> 00:17:53.456 A:middle
I am probably done with this

00:17:53.456 --> 00:17:54.546 A:middle
treatment, and I don't really

00:17:54.546 --> 00:17:56.436 A:middle
want to lose the details here.

00:17:56.726 --> 00:17:59.046 A:middle
So I am going to extract this by

00:17:59.156 --> 00:18:00.436 A:middle
Command-clicking on the image.

00:17:59.156 --> 00:18:00.436 A:middle
Command-clicking on the image.

00:18:01.356 --> 00:18:03.056 A:middle
I am clicking on the image and

00:18:03.056 --> 00:18:04.306 A:middle
picking Extracted View.

00:18:04.966 --> 00:18:07.366 A:middle
And Xcode locates a new SwiftUI

00:18:07.366 --> 00:18:08.526 A:middle
view in the same file down

00:18:08.526 --> 00:18:09.866 A:middle
below, so let me rename it.

00:18:09.866 --> 00:18:12.016 A:middle
I will call it "Animal Image."

00:18:12.656 --> 00:18:14.546 A:middle
And I will give it some

00:18:14.546 --> 00:18:16.206 A:middle
argument, which is my image

00:18:16.206 --> 00:18:16.476 A:middle
name.

00:18:16.546 --> 00:18:17.636 A:middle
And if I scroll down here,

00:18:17.636 --> 00:18:18.666 A:middle
here's my animal image.

00:18:19.826 --> 00:18:20.336 A:middle
Easy enough.

00:18:20.336 --> 00:18:22.166 A:middle
I will wire in [phonetic] my

00:18:22.406 --> 00:18:22.726 A:middle
input.

00:18:23.236 --> 00:18:26.976 A:middle
And I have refreshed my preview.

00:18:27.516 --> 00:18:30.756 A:middle
[ Applause ]

00:18:31.256 --> 00:18:31.706 A:middle
Yes, thanks.

00:18:31.706 --> 00:18:32.916 A:middle
I think this looks pretty cool,

00:18:32.916 --> 00:18:32.983 A:middle
too.

00:18:33.576 --> 00:18:34.746 A:middle
So notice the preview really

00:18:34.746 --> 00:18:35.226 A:middle
didn't change.

00:18:35.226 --> 00:18:37.006 A:middle
But if I scroll back up and look

00:18:37.006 --> 00:18:38.176 A:middle
at my - what my animal cell

00:18:38.176 --> 00:18:39.776 A:middle
looks like, it's much clearer

00:18:39.776 --> 00:18:40.786 A:middle
now what's going on here and I

00:18:40.786 --> 00:18:42.886 A:middle
can focus on the details other

00:18:42.886 --> 00:18:44.926 A:middle
than the image treatment.

00:18:44.966 --> 00:18:46.296 A:middle
So now that this looks good,

00:18:46.566 --> 00:18:47.566 A:middle
notice that we have so far

00:18:47.566 --> 00:18:49.706 A:middle
focused on this view just by

00:18:49.706 --> 00:18:50.076 A:middle
itself.

00:18:50.076 --> 00:18:51.626 A:middle
But it never actually appears

00:18:52.126 --> 00:18:53.316 A:middle
this way to our customers.

00:18:53.646 --> 00:18:55.196 A:middle
The only way our customers will

00:18:55.196 --> 00:18:56.726 A:middle
ever see this is in the context

00:18:57.106 --> 00:18:58.746 A:middle
of the list that this will

00:18:58.746 --> 00:18:59.136 A:middle
appear in.

00:18:59.376 --> 00:19:00.516 A:middle
And so I would like to work on

00:18:59.376 --> 00:19:00.516 A:middle
And so I would like to work on

00:19:00.516 --> 00:19:01.036 A:middle
that now.

00:19:01.846 --> 00:19:03.476 A:middle
So I already started working on

00:19:04.076 --> 00:19:05.586 A:middle
that in this animal list file.

00:19:05.756 --> 00:19:06.796 A:middle
And we didn't have the animal

00:19:06.796 --> 00:19:07.426 A:middle
cell before.

00:19:07.696 --> 00:19:09.946 A:middle
So I just created a simple list

00:19:10.326 --> 00:19:12.736 A:middle
that accepts a - some animals --

00:19:12.736 --> 00:19:15.676 A:middle
and for each one displays a cell

00:19:15.676 --> 00:19:15.896 A:middle
here.

00:19:15.896 --> 00:19:16.966 A:middle
So I am just going to replace

00:19:17.006 --> 00:19:18.706 A:middle
this code with a new animal cell

00:19:18.706 --> 00:19:19.296 A:middle
that I just built.

00:19:19.296 --> 00:19:20.596 A:middle
And here it is; that shows up.

00:19:21.476 --> 00:19:22.636 A:middle
That's closer to what our

00:19:22.636 --> 00:19:23.546 A:middle
customers will see.

00:19:24.086 --> 00:19:26.756 A:middle
But there is really not a lot of

00:19:26.836 --> 00:19:28.036 A:middle
zoos around with one animal.

00:19:28.406 --> 00:19:31.326 A:middle
So I'd really like to populate

00:19:31.466 --> 00:19:34.766 A:middle
this list with some data that's

00:19:35.086 --> 00:19:37.106 A:middle
actually closer to what my

00:19:37.106 --> 00:19:37.886 A:middle
customers will see.

00:19:37.886 --> 00:19:39.596 A:middle
So how do I do that?

00:19:40.206 --> 00:19:42.146 A:middle
Well if I scroll down to my

00:19:42.146 --> 00:19:44.746 A:middle
Previews configuration code, you

00:19:44.746 --> 00:19:46.226 A:middle
will see that I am populating my

00:19:46.226 --> 00:19:47.876 A:middle
animal list with just an array

00:19:47.876 --> 00:19:48.786 A:middle
of the one element.

00:19:48.986 --> 00:19:50.326 A:middle
So, you know, one thing I have

00:19:50.326 --> 00:19:51.456 A:middle
to do is simply - you know, I

00:19:51.456 --> 00:19:52.226 A:middle
have this hard-coded [phonetic]

00:19:52.226 --> 00:19:52.606 A:middle
thing here.

00:19:52.606 --> 00:19:53.906 A:middle
I can just add a couple of

00:19:53.906 --> 00:19:54.156 A:middle
these.

00:19:54.626 --> 00:19:56.166 A:middle
And now three cells will show

00:19:56.166 --> 00:19:56.286 A:middle
up.

00:19:56.866 --> 00:19:57.496 A:middle
That's closer.

00:19:57.806 --> 00:19:59.406 A:middle
But then I can keep doing this

00:19:59.406 --> 00:19:59.976 A:middle
to fill it up.

00:20:00.216 --> 00:20:02.626 A:middle
But it's very uniform, and

00:20:02.626 --> 00:20:04.046 A:middle
that's still not exactly what it

00:20:04.046 --> 00:20:05.436 A:middle
will look like to my customers.

00:20:05.466 --> 00:20:07.306 A:middle
Some of the animals' names are

00:20:07.306 --> 00:20:08.496 A:middle
going to be longer and shorter,

00:20:08.496 --> 00:20:09.326 A:middle
and the colors are going to be

00:20:09.326 --> 00:20:09.676 A:middle
different.

00:20:09.676 --> 00:20:12.076 A:middle
I really want to get a good idea

00:20:12.076 --> 00:20:13.106 A:middle
of what it - it's going to look

00:20:13.106 --> 00:20:13.326 A:middle
like.

00:20:14.026 --> 00:20:15.236 A:middle
So what are my other options?

00:20:15.936 --> 00:20:17.156 A:middle
Well one thing I could do is I

00:20:17.156 --> 00:20:19.376 A:middle
could - since this preview code

00:20:19.766 --> 00:20:20.606 A:middle
runs as a part of my

00:20:20.606 --> 00:20:22.666 A:middle
application, I could actually

00:20:22.666 --> 00:20:24.236 A:middle
spin off my networking code, hit

00:20:24.286 --> 00:20:26.036 A:middle
my network, and get some data

00:20:26.036 --> 00:20:27.256 A:middle
and populate my preview.

00:20:27.256 --> 00:20:27.826 A:middle
I could do that.

00:20:28.286 --> 00:20:29.556 A:middle
There is a couple of problems

00:20:29.556 --> 00:20:30.216 A:middle
with that approach.

00:20:30.536 --> 00:20:32.766 A:middle
First, I didn't build the

00:20:32.766 --> 00:20:33.616 A:middle
networking code yet.

00:20:33.616 --> 00:20:34.616 A:middle
So I can't really do that.

00:20:35.106 --> 00:20:37.946 A:middle
Second, if I did, that - still

00:20:37.946 --> 00:20:39.016 A:middle
be a problem because that would

00:20:39.016 --> 00:20:40.656 A:middle
mean every time I work on this

00:20:40.656 --> 00:20:43.066 A:middle
view, I would have to be online

00:20:43.066 --> 00:20:44.236 A:middle
and my service would have to be

00:20:44.236 --> 00:20:44.956 A:middle
available to me.

00:20:45.706 --> 00:20:47.786 A:middle
And that's just not a good way

00:20:47.786 --> 00:20:48.246 A:middle
to work.

00:20:48.246 --> 00:20:49.676 A:middle
What, instead, I want to do is I

00:20:49.676 --> 00:20:53.506 A:middle
want to get some data and cache

00:20:53.506 --> 00:20:55.626 A:middle
it so I can visualize this

00:20:55.656 --> 00:20:57.076 A:middle
without requiring all the rest

00:20:57.076 --> 00:20:57.816 A:middle
of the components in my

00:20:57.816 --> 00:20:58.346 A:middle
application.

00:20:58.446 --> 00:20:59.696 A:middle
So I did this a little bit

00:20:59.696 --> 00:21:00.116 A:middle
earlier.

00:20:59.696 --> 00:21:00.116 A:middle
earlier.

00:21:00.546 --> 00:21:03.156 A:middle
And I created a cache which is

00:21:03.156 --> 00:21:04.136 A:middle
just a JSON file.

00:21:04.136 --> 00:21:04.676 A:middle
Let me show you.

00:21:05.146 --> 00:21:06.926 A:middle
Under Preview Data here is a

00:21:06.926 --> 00:21:08.356 A:middle
simple JSON file that just lists

00:21:08.456 --> 00:21:10.846 A:middle
some animals to populate this

00:21:10.846 --> 00:21:11.176 A:middle
data.

00:21:11.386 --> 00:21:13.096 A:middle
And so what I can do now - what

00:21:13.156 --> 00:21:14.406 A:middle
do I - I don't really want to

00:21:14.406 --> 00:21:15.506 A:middle
ship to the customers either.

00:21:15.506 --> 00:21:16.726 A:middle
So a little bit later I'll go

00:21:16.726 --> 00:21:19.386 A:middle
and add it to my development

00:21:19.386 --> 00:21:19.866 A:middle
assets.

00:21:20.156 --> 00:21:21.226 A:middle
But I'm going to skip that for

00:21:21.226 --> 00:21:21.406 A:middle
now.

00:21:21.406 --> 00:21:22.696 A:middle
So now that I can - that we know

00:21:22.696 --> 00:21:24.456 A:middle
that we - this is here, all I

00:21:24.456 --> 00:21:26.156 A:middle
need to do is just load this.

00:21:26.156 --> 00:21:27.416 A:middle
I am going to add a little bit

00:21:27.416 --> 00:21:28.476 A:middle
of code in my previewing

00:21:28.476 --> 00:21:29.626 A:middle
[phonetic] code to load this

00:21:29.626 --> 00:21:31.946 A:middle
JSON out of my main bundle, and

00:21:31.946 --> 00:21:34.696 A:middle
use a JSON decoder to parse out

00:21:34.696 --> 00:21:35.056 A:middle
my data.

00:21:35.226 --> 00:21:37.256 A:middle
So now I have an array of data

00:21:37.256 --> 00:21:38.596 A:middle
which I can -- let me close this

00:21:38.596 --> 00:21:40.386 A:middle
so you can see -- I can replace

00:21:41.716 --> 00:21:44.706 A:middle
with Self.sampleAnimals.

00:21:45.486 --> 00:21:48.056 A:middle
And when the previews refresh,

00:21:49.096 --> 00:21:50.586 A:middle
here's my UI populated with my

00:21:50.586 --> 00:21:50.976 A:middle
sample animals.

00:21:51.516 --> 00:21:54.946 A:middle
[ Applause ]

00:21:55.446 --> 00:21:58.756 A:middle
Thanks. So this is a lot closer

00:21:58.756 --> 00:21:59.986 A:middle
to what my customers will

00:21:59.986 --> 00:22:01.696 A:middle
actually see, and I immediately

00:21:59.986 --> 00:22:01.696 A:middle
actually see, and I immediately

00:22:01.696 --> 00:22:02.966 A:middle
see a couple of issues with this

00:22:02.966 --> 00:22:03.466 A:middle
layout here.

00:22:03.466 --> 00:22:04.716 A:middle
For instance, the "Snow Leopard"

00:22:04.716 --> 00:22:05.876 A:middle
here is very long, and it's

00:22:05.926 --> 00:22:07.476 A:middle
clear now that I probably should

00:22:07.476 --> 00:22:08.366 A:middle
realign this.

00:22:08.856 --> 00:22:11.316 A:middle
The other thing is, because

00:22:11.316 --> 00:22:12.626 A:middle
these titles are kind of large

00:22:12.626 --> 00:22:13.456 A:middle
-so you look now [inaudible] but

00:22:13.606 --> 00:22:15.226 A:middle
there - it could be a little bit

00:22:15.226 --> 00:22:15.636 A:middle
airier area here.

00:22:15.636 --> 00:22:16.806 A:middle
I want to add some padding on

00:22:16.806 --> 00:22:17.536 A:middle
the top and the bottom.

00:22:17.956 --> 00:22:19.746 A:middle
So all of those changes belong

00:22:19.746 --> 00:22:21.006 A:middle
in the animal cell.

00:22:21.006 --> 00:22:22.246 A:middle
So I am going to navigate there

00:22:22.246 --> 00:22:23.006 A:middle
to make those edits.

00:22:23.546 --> 00:22:25.636 A:middle
And look what happens.

00:22:26.766 --> 00:22:27.696 A:middle
My preview that I was just

00:22:27.696 --> 00:22:28.776 A:middle
looking at disappears.

00:22:29.106 --> 00:22:31.216 A:middle
I am back to the context of the

00:22:31.216 --> 00:22:31.606 A:middle
cell.

00:22:32.126 --> 00:22:34.126 A:middle
And so my list went away.

00:22:34.526 --> 00:22:35.896 A:middle
What I really want to do is I

00:22:35.896 --> 00:22:37.336 A:middle
want to make my edits to the

00:22:37.336 --> 00:22:39.226 A:middle
cell while looking at it in the

00:22:39.226 --> 00:22:40.176 A:middle
context in which it will

00:22:40.176 --> 00:22:41.026 A:middle
actually appear, which is the

00:22:41.026 --> 00:22:41.416 A:middle
list.

00:22:41.976 --> 00:22:43.006 A:middle
One thing I could do is I could

00:22:43.006 --> 00:22:44.546 A:middle
just add another preview here

00:22:44.546 --> 00:22:45.736 A:middle
that just previews the list.

00:22:45.736 --> 00:22:46.946 A:middle
Like I told you before, you

00:22:46.946 --> 00:22:48.976 A:middle
could really provide any content

00:22:48.976 --> 00:22:49.896 A:middle
as a part of your preview.

00:22:50.616 --> 00:22:52.106 A:middle
But that would mean anytime I am

00:22:52.106 --> 00:22:53.786 A:middle
looking at the - at anything

00:22:53.786 --> 00:22:54.576 A:middle
that has to do with this, I

00:22:54.576 --> 00:22:55.696 A:middle
would have to duplicate the same

00:22:55.696 --> 00:22:56.646 A:middle
code over and over again.

00:22:56.646 --> 00:22:57.476 A:middle
So there is a better way.

00:22:58.706 --> 00:23:00.596 A:middle
And let me show you what you can

00:22:58.706 --> 00:23:00.596 A:middle
And let me show you what you can

00:23:00.596 --> 00:23:00.666 A:middle
do.

00:23:00.666 --> 00:23:02.176 A:middle
I will navigate back to Animal

00:23:02.176 --> 00:23:03.346 A:middle
List, and I will see the preview

00:23:03.346 --> 00:23:04.576 A:middle
for my list like I saw before.

00:23:04.616 --> 00:23:06.636 A:middle
And it'll use this little Pin

00:23:06.636 --> 00:23:07.636 A:middle
button in the bottom left

00:23:07.636 --> 00:23:07.966 A:middle
corner.

00:23:08.366 --> 00:23:08.996 A:middle
And I'll click it.

00:23:09.046 --> 00:23:10.946 A:middle
And what this will do is it will

00:23:11.016 --> 00:23:14.896 A:middle
pin the current preview to this

00:23:14.896 --> 00:23:16.506 A:middle
preview; and as I navigate in a

00:23:16.506 --> 00:23:18.086 A:middle
different files, notice what

00:23:18.086 --> 00:23:18.446 A:middle
happens.

00:23:19.046 --> 00:23:20.966 A:middle
This preview stays up.

00:23:21.141 --> 00:23:23.141 A:middle
[ Applause ]

00:23:23.266 --> 00:23:23.586 A:middle
Thank you.

00:23:24.516 --> 00:23:26.736 A:middle
[ Applause ]

00:23:27.236 --> 00:23:28.376 A:middle
There is a little header here

00:23:28.376 --> 00:23:29.986 A:middle
that tells me "Hey, you are not

00:23:29.986 --> 00:23:31.536 A:middle
looking at exactly the preview

00:23:31.536 --> 00:23:32.446 A:middle
that you have from this file

00:23:32.446 --> 00:23:32.706 A:middle
before.

00:23:32.706 --> 00:23:33.906 A:middle
This comes from Animal List."

00:23:33.906 --> 00:23:35.256 A:middle
So just so you know.

00:23:35.466 --> 00:23:36.646 A:middle
And if I wanted to get to my

00:23:36.646 --> 00:23:37.706 A:middle
original previews from this

00:23:37.706 --> 00:23:39.626 A:middle
file, I can just scroll down and

00:23:39.626 --> 00:23:40.606 A:middle
all of them are still here.

00:23:40.606 --> 00:23:41.976 A:middle
So I didn't any context at all.

00:23:42.516 --> 00:23:46.506 A:middle
[ Applause ]

00:23:47.006 --> 00:23:48.456 A:middle
So now that I know what I need

00:23:48.456 --> 00:23:50.006 A:middle
to do, I can Command-click on my

00:23:50.006 --> 00:23:51.756 A:middle
VStack and call Inspect.

00:23:52.126 --> 00:23:54.016 A:middle
And it can inspect and change my

00:23:54.016 --> 00:23:56.106 A:middle
alignment here, give it some

00:23:56.106 --> 00:23:56.546 A:middle
padding.

00:23:57.766 --> 00:23:58.616 A:middle
Let's see what happens.

00:23:59.266 --> 00:24:03.926 A:middle
This - this is a little bit too

00:23:59.266 --> 00:24:03.926 A:middle
This - this is a little bit too

00:24:04.426 --> 00:24:04.896 A:middle
much.

00:24:04.926 --> 00:24:06.986 A:middle
So I am going to get back to

00:24:06.986 --> 00:24:08.466 A:middle
this and give it a little bit

00:24:08.466 --> 00:24:09.346 A:middle
less padding, maybe.

00:24:09.936 --> 00:24:11.906 A:middle
And it looks great.

00:24:11.906 --> 00:24:12.646 A:middle
I like how this looks.

00:24:12.646 --> 00:24:13.426 A:middle
So I am going to keep it this

00:24:13.426 --> 00:24:13.576 A:middle
way.

00:24:13.946 --> 00:24:15.776 A:middle
The next thing I want to work on

00:24:16.056 --> 00:24:17.856 A:middle
is a list of actions that you

00:24:17.856 --> 00:24:19.476 A:middle
can do - that you can use on

00:24:19.506 --> 00:24:21.496 A:middle
each cell when it's selected.

00:24:21.496 --> 00:24:23.596 A:middle
Now I already started working on

00:24:23.596 --> 00:24:25.096 A:middle
the selected cell implementation

00:24:25.096 --> 00:24:27.056 A:middle
in another file called

00:24:27.056 --> 00:24:28.246 A:middle
"SelectableAnimalCell."

00:24:29.146 --> 00:24:30.886 A:middle
Because I don't want to pollute

00:24:30.926 --> 00:24:32.386 A:middle
my data -- my animal cell model

00:24:32.386 --> 00:24:34.006 A:middle
data -- with something that

00:24:34.006 --> 00:24:35.056 A:middle
comes from the - something

00:24:35.056 --> 00:24:36.886 A:middle
that's transient from the UI, I

00:24:36.886 --> 00:24:39.146 A:middle
added a little wrapper that just

00:24:39.146 --> 00:24:41.536 A:middle
wraps any data and gets us - and

00:24:41.536 --> 00:24:42.766 A:middle
adds a selected fit to it.

00:24:42.996 --> 00:24:44.076 A:middle
And I am using this, and it's

00:24:44.076 --> 00:24:45.886 A:middle
another view called "Selected" -

00:24:45.886 --> 00:24:47.136 A:middle
"SelectableAnimalCell."

00:24:47.466 --> 00:24:48.656 A:middle
And all it does is it accepts a

00:24:48.656 --> 00:24:50.596 A:middle
model, displays my animal cell,

00:24:50.596 --> 00:24:51.686 A:middle
and then checks the selected

00:24:51.726 --> 00:24:54.076 A:middle
bits and shows my actions.

00:24:54.406 --> 00:24:55.336 A:middle
And those are, you know, little

00:24:55.336 --> 00:24:56.826 A:middle
icons that will let me get more

00:24:56.826 --> 00:24:58.796 A:middle
information and take a picture.

00:24:59.126 --> 00:25:00.796 A:middle
And if I unpin this preview, you

00:24:59.126 --> 00:25:00.796 A:middle
And if I unpin this preview, you

00:25:01.216 --> 00:25:02.306 A:middle
will see I have already built

00:25:02.396 --> 00:25:04.546 A:middle
two previews for this cell: one

00:25:04.546 --> 00:25:06.146 A:middle
for the selected state and one

00:25:06.146 --> 00:25:07.836 A:middle
for the unselected state - flip:

00:25:07.836 --> 00:25:09.396 A:middle
one for unselected, one for

00:25:09.396 --> 00:25:09.976 A:middle
selected.

00:25:10.886 --> 00:25:13.366 A:middle
So this is a great way to work.

00:25:13.466 --> 00:25:14.676 A:middle
But again, I want to see these

00:25:15.016 --> 00:25:16.066 A:middle
in the context of my list.

00:25:16.066 --> 00:25:18.406 A:middle
So I am going to add Selection

00:25:18.406 --> 00:25:19.826 A:middle
to my list now with - so I am

00:25:19.826 --> 00:25:20.826 A:middle
going to navigate to Animal

00:25:20.826 --> 00:25:21.046 A:middle
List.

00:25:22.806 --> 00:25:25.386 A:middle
And the way SwiftUI handles data

00:25:25.386 --> 00:25:27.756 A:middle
like this is with this - with a

00:25:27.756 --> 00:25:28.386 A:middle
State variable.

00:25:28.386 --> 00:25:29.686 A:middle
So I am just going to add a

00:25:29.686 --> 00:25:32.326 A:middle
space here that stores some data

00:25:32.326 --> 00:25:33.806 A:middle
about what's currently selected

00:25:33.806 --> 00:25:36.216 A:middle
in my table -- and then another

00:25:36.216 --> 00:25:39.406 A:middle
little bit of code to translate,

00:25:39.436 --> 00:25:42.006 A:middle
because this data is specifying

00:25:42.006 --> 00:25:43.626 A:middle
the selected model but each cell

00:25:43.626 --> 00:25:45.056 A:middle
takes a boolean whether that

00:25:45.056 --> 00:25:46.036 A:middle
cell is selected or not.

00:25:46.036 --> 00:25:47.636 A:middle
I am going to add that here as

00:25:47.666 --> 00:25:47.936 A:middle
well.

00:25:49.156 --> 00:25:51.186 A:middle
Now that I did these two things,

00:25:51.626 --> 00:25:52.956 A:middle
I am going to replace my animal

00:25:52.956 --> 00:25:55.656 A:middle
cell with this selectable animal

00:25:55.656 --> 00:25:55.906 A:middle
cell.

00:25:55.906 --> 00:25:58.836 A:middle
And that's really all I need.

00:25:58.836 --> 00:26:01.516 A:middle
I can refresh my previews, and

00:25:58.836 --> 00:26:01.516 A:middle
I can refresh my previews, and

00:26:01.896 --> 00:26:04.366 A:middle
you can see nothing really

00:26:04.366 --> 00:26:04.796 A:middle
changed.

00:26:05.356 --> 00:26:06.476 A:middle
Well why is that?

00:26:06.746 --> 00:26:09.356 A:middle
It's because the selection here

00:26:09.356 --> 00:26:10.116 A:middle
is optional.

00:26:10.366 --> 00:26:12.106 A:middle
By default nothing is selected

00:26:12.106 --> 00:26:14.296 A:middle
in my list, and I can't see the

00:26:14.296 --> 00:26:15.836 A:middle
things that I just did what I

00:26:15.836 --> 00:26:16.016 A:middle
did.

00:26:16.256 --> 00:26:17.396 A:middle
Now of course I can click the

00:26:17.726 --> 00:26:18.676 A:middle
Live Vote [phonetic] button,

00:26:20.076 --> 00:26:20.946 A:middle
take this UI.

00:26:21.556 --> 00:26:24.246 A:middle
And if I click around, the

00:26:24.246 --> 00:26:26.296 A:middle
selection will appear -- just

00:26:26.296 --> 00:26:27.146 A:middle
like I expect.

00:26:28.206 --> 00:26:29.386 A:middle
But what if I wanted to build a

00:26:29.456 --> 00:26:30.656 A:middle
static - thank you.

00:26:30.936 --> 00:26:32.816 A:middle
But what if I wanted to build

00:26:32.816 --> 00:26:35.286 A:middle
some static previews here that -

00:26:35.286 --> 00:26:36.336 A:middle
to remind me that there is such

00:26:36.336 --> 00:26:38.206 A:middle
a thing as a selected state for

00:26:38.206 --> 00:26:39.356 A:middle
the cell, so that when I make

00:26:39.356 --> 00:26:40.726 A:middle
changes to all of this I don't

00:26:40.726 --> 00:26:42.166 A:middle
forget to verify what my

00:26:42.166 --> 00:26:43.316 A:middle
selection looks like with my

00:26:43.316 --> 00:26:43.696 A:middle
changes?

00:26:43.966 --> 00:26:45.606 A:middle
So I could make a static preview

00:26:45.606 --> 00:26:46.856 A:middle
here, but this would require

00:26:46.856 --> 00:26:48.026 A:middle
some changes to my code.

00:26:48.026 --> 00:26:49.766 A:middle
And the reason is because this

00:26:49.766 --> 00:26:50.986 A:middle
bit of data is private.

00:26:51.316 --> 00:26:53.676 A:middle
I can't really modify it from my

00:26:53.676 --> 00:26:54.136 A:middle
preview.

00:26:54.446 --> 00:26:55.436 A:middle
So what can I do here to

00:26:55.436 --> 00:26:56.616 A:middle
actually display this preview?

00:26:56.616 --> 00:26:57.786 A:middle
Well what I am going to do is I

00:26:57.786 --> 00:26:58.796 A:middle
am going to promote this to a

00:26:58.796 --> 00:27:00.096 A:middle
binding that I can then set.

00:26:58.796 --> 00:27:00.096 A:middle
binding that I can then set.

00:27:00.096 --> 00:27:02.056 A:middle
And I am going to do this by

00:27:02.056 --> 00:27:03.316 A:middle
introducing a new view.

00:27:03.316 --> 00:27:04.336 A:middle
I am going to create a private

00:27:04.336 --> 00:27:05.966 A:middle
view inside this animal list.

00:27:05.966 --> 00:27:07.186 A:middle
It's just going to house all of

00:27:07.186 --> 00:27:07.966 A:middle
my implementations.

00:27:07.966 --> 00:27:09.156 A:middle
I am going to call it "Content"

00:27:09.596 --> 00:27:11.176 A:middle
because it's private and it's a

00:27:11.356 --> 00:27:12.746 A:middle
- only available inside this

00:27:12.776 --> 00:27:13.076 A:middle
file.

00:27:13.556 --> 00:27:16.156 A:middle
And then I am going to take all

00:27:16.156 --> 00:27:17.166 A:middle
of this implementation that I

00:27:17.166 --> 00:27:18.936 A:middle
just built, and I am going to

00:27:19.376 --> 00:27:21.416 A:middle
move it inside the view that I

00:27:21.416 --> 00:27:22.026 A:middle
just declared.

00:27:22.186 --> 00:27:23.986 A:middle
And then the final bit is I am

00:27:23.986 --> 00:27:25.766 A:middle
going to add the implementation

00:27:25.766 --> 00:27:27.636 A:middle
of body for my animal list in

00:27:27.636 --> 00:27:28.496 A:middle
terms of the content.

00:27:28.546 --> 00:27:29.436 A:middle
And what this does is just

00:27:29.436 --> 00:27:31.046 A:middle
substantiate the content view

00:27:31.046 --> 00:27:32.596 A:middle
that I just declared - that's

00:27:32.596 --> 00:27:34.136 A:middle
just the animal -- and creates a

00:27:34.136 --> 00:27:35.516 A:middle
binding to the selected state.

00:27:36.346 --> 00:27:37.546 A:middle
Now what I can do is I can

00:27:37.546 --> 00:27:39.236 A:middle
change my previews to instead of

00:27:39.326 --> 00:27:40.456 A:middle
previewing Animal List,

00:27:41.156 --> 00:27:42.836 A:middle
previewing Animal List content.

00:27:43.696 --> 00:27:47.956 A:middle
And when I refresh, you will see

00:27:47.956 --> 00:27:49.036 A:middle
that the selection actually

00:27:49.066 --> 00:27:50.066 A:middle
appears; and I get a static

00:27:50.136 --> 00:27:51.176 A:middle
preview with my selection.

00:27:51.466 --> 00:27:53.306 A:middle
Now I tapped Animal List

00:27:53.306 --> 00:27:54.776 A:middle
Selection - or Animal List

00:27:54.846 --> 00:27:57.126 A:middle
Preview here just so I can also

00:27:57.126 --> 00:27:58.336 A:middle
verify what my list looks like

00:27:58.536 --> 00:27:59.366 A:middle
without the selection.

00:27:59.656 --> 00:28:01.136 A:middle
And also I can still use Live

00:27:59.656 --> 00:28:01.136 A:middle
And also I can still use Live

00:28:01.136 --> 00:28:02.426 A:middle
Vote here to verify my

00:28:02.426 --> 00:28:04.236 A:middle
transitions and animations and

00:28:04.236 --> 00:28:04.976 A:middle
work with my previews that way.

00:28:05.266 --> 00:28:07.266 A:middle
[ Applause ]

00:28:07.516 --> 00:28:07.746 A:middle
Thank you.

00:28:08.516 --> 00:28:11.136 A:middle
[ Applause ]

00:28:11.636 --> 00:28:13.036 A:middle
So, so far we have been looking

00:28:13.036 --> 00:28:14.936 A:middle
at Xcode Previews and how they

00:28:14.936 --> 00:28:15.826 A:middle
work with SwiftUI.

00:28:15.826 --> 00:28:17.826 A:middle
But they can do a lot more for

00:28:17.826 --> 00:28:18.876 A:middle
you for your application.

00:28:19.316 --> 00:28:21.166 A:middle
And to tell you more about that,

00:28:21.166 --> 00:28:21.976 A:middle
please welcome Nate.

00:28:22.516 --> 00:28:27.076 A:middle
[ Applause ]

00:28:27.576 --> 00:28:27.976 A:middle
&gt;&gt; Thank you Anton.

00:28:33.326 --> 00:28:34.396 A:middle
Not all of you are going to be

00:28:34.396 --> 00:28:35.946 A:middle
writing brand new applications

00:28:35.946 --> 00:28:37.076 A:middle
starting this week using

00:28:37.076 --> 00:28:37.676 A:middle
SwiftUI.

00:28:38.496 --> 00:28:39.866 A:middle
Many of you have apps in the App

00:28:39.866 --> 00:28:40.906 A:middle
Store and apps you have been

00:28:40.906 --> 00:28:41.916 A:middle
working on for years.

00:28:42.926 --> 00:28:44.816 A:middle
Because SwiftUI has rich

00:28:44.816 --> 00:28:46.936 A:middle
integration with UIKit, AppKit,

00:28:46.936 --> 00:28:49.016 A:middle
and WatchKit, and because the

00:28:49.016 --> 00:28:50.956 A:middle
Previews API is part of SwiftUI,

00:28:52.036 --> 00:28:54.306 A:middle
Xcode Previews works great with

00:28:54.306 --> 00:28:55.566 A:middle
all of those frameworks as well.

00:28:56.206 --> 00:29:00.186 A:middle
In our zoo application, when you

00:28:56.206 --> 00:29:00.186 A:middle
In our zoo application, when you

00:29:00.186 --> 00:29:02.716 A:middle
tap on the Info button that

00:29:02.716 --> 00:29:04.096 A:middle
Anton added to the bottom of a

00:29:04.096 --> 00:29:06.206 A:middle
cell, we are going to display a

00:29:06.206 --> 00:29:07.506 A:middle
detail screen for the animal

00:29:07.506 --> 00:29:08.096 A:middle
that's selected.

00:29:08.576 --> 00:29:11.226 A:middle
It turns out that that screen is

00:29:11.226 --> 00:29:13.106 A:middle
written as a UIViewController

00:29:14.766 --> 00:29:16.176 A:middle
called "Animal View Controller."

00:29:16.176 --> 00:29:19.146 A:middle
Let me show you the code for it.

00:29:19.396 --> 00:29:20.566 A:middle
First, I am going to go ahead

00:29:20.566 --> 00:29:22.126 A:middle
and close the canvas by pressing

00:29:22.126 --> 00:29:24.186 A:middle
Command-Return and then switch

00:29:24.186 --> 00:29:25.116 A:middle
over to the Animal View

00:29:25.116 --> 00:29:25.596 A:middle
Controller.

00:29:26.176 --> 00:29:28.846 A:middle
I'd like to show you what this

00:29:28.846 --> 00:29:29.886 A:middle
view controller looks like.

00:29:30.276 --> 00:29:31.786 A:middle
But rather than building and

00:29:31.786 --> 00:29:33.246 A:middle
running, I am going to go ahead

00:29:33.246 --> 00:29:34.476 A:middle
and create a preview instead.

00:29:35.496 --> 00:29:37.576 A:middle
Now previews are just code, so

00:29:37.576 --> 00:29:39.516 A:middle
we absolutely could go ahead and

00:29:39.516 --> 00:29:40.596 A:middle
create the preview right

00:29:40.596 --> 00:29:42.346 A:middle
alongside this UIViewController

00:29:42.346 --> 00:29:42.956 A:middle
in this file.

00:29:43.686 --> 00:29:45.426 A:middle
In this case, though, I do want

00:29:45.426 --> 00:29:46.296 A:middle
to create a new file.

00:29:46.436 --> 00:29:48.186 A:middle
I am going to open the project

00:29:48.186 --> 00:29:50.746 A:middle
navigator pressing Command-0 and

00:29:50.746 --> 00:29:53.156 A:middle
then create a new file in the

00:29:53.156 --> 00:29:53.876 A:middle
group that I want,

00:29:54.666 --> 00:29:55.926 A:middle
right-clicking Selecting New

00:29:55.926 --> 00:29:58.396 A:middle
File -- SwiftFile -- and

00:29:58.396 --> 00:29:59.206 A:middle
entering the name I want:

00:29:59.306 --> 00:30:00.856 A:middle
"AnimalViewControllerPreviews."

00:29:59.306 --> 00:30:00.856 A:middle
"AnimalViewControllerPreviews."

00:30:06.336 --> 00:30:08.206 A:middle
The Previews API is part of

00:30:08.206 --> 00:30:08.806 A:middle
SwiftUI.

00:30:08.976 --> 00:30:10.576 A:middle
So to write a preview, you will

00:30:10.576 --> 00:30:11.836 A:middle
need to import that framework.

00:30:12.386 --> 00:30:14.296 A:middle
To create a preview that's

00:30:14.296 --> 00:30:15.826 A:middle
displayed in the canvas, you

00:30:15.826 --> 00:30:17.186 A:middle
need to add a conformant to the

00:30:17.186 --> 00:30:18.446 A:middle
preview provider protocol.

00:30:19.176 --> 00:30:20.216 A:middle
In this case, I am going to

00:30:20.246 --> 00:30:21.566 A:middle
create a brand new type to

00:30:21.566 --> 00:30:22.676 A:middle
conform to that protocol,

00:30:23.146 --> 00:30:23.746 A:middle
namely,

00:30:23.846 --> 00:30:25.156 A:middle
"AnimalViewControllerPreview."

00:30:25.956 --> 00:30:27.466 A:middle
Now the preview provider

00:30:27.466 --> 00:30:28.956 A:middle
protocol has a single

00:30:28.956 --> 00:30:30.146 A:middle
requirement that you must

00:30:30.146 --> 00:30:32.046 A:middle
implement, namely, the Static

00:30:32.156 --> 00:30:33.086 A:middle
Previews Property.

00:30:33.646 --> 00:30:35.276 A:middle
From this property, we need to

00:30:35.276 --> 00:30:36.476 A:middle
return some view.

00:30:36.776 --> 00:30:37.986 A:middle
And in our case we want some

00:30:37.986 --> 00:30:39.676 A:middle
view that embeds a - our

00:30:39.676 --> 00:30:40.666 A:middle
AnimalViewController.

00:30:42.006 --> 00:30:44.366 A:middle
SwiftUI has rich support for

00:30:44.366 --> 00:30:47.596 A:middle
embedding UIViewControllers into

00:30:48.216 --> 00:30:49.646 A:middle
SwiftViews in the form of

00:30:49.646 --> 00:30:50.306 A:middle
Representables.

00:30:50.746 --> 00:30:52.336 A:middle
To learn more about that, check

00:30:52.336 --> 00:30:53.586 A:middle
out the session "Integrating

00:30:53.586 --> 00:30:54.186 A:middle
SwiftUI."

00:30:55.026 --> 00:30:56.906 A:middle
In our case, because we want to

00:30:56.906 --> 00:30:59.406 A:middle
represent a UIViewController, we

00:30:59.406 --> 00:31:01.176 A:middle
want to add a conformant to

00:30:59.406 --> 00:31:01.176 A:middle
want to add a conformant to

00:31:01.176 --> 00:31:02.786 A:middle
UIViewController representable.

00:31:03.566 --> 00:31:05.106 A:middle
And for expediency, I am just

00:31:05.106 --> 00:31:06.366 A:middle
going to go ahead and add that

00:31:06.366 --> 00:31:08.516 A:middle
right alongside PreviewProvider

00:31:08.616 --> 00:31:08.826 A:middle
to the

00:31:08.826 --> 00:31:10.156 A:middle
AnimalViewControllerPreviews

00:31:10.156 --> 00:31:10.386 A:middle
type.

00:31:10.946 --> 00:31:13.976 A:middle
Now for our purposes, the

00:31:13.976 --> 00:31:15.626 A:middle
UIViewController representable

00:31:15.656 --> 00:31:17.386 A:middle
protocol has three requirements

00:31:17.386 --> 00:31:18.976 A:middle
that we need to implement.

00:31:19.376 --> 00:31:22.066 A:middle
The first is to specify the type

00:31:22.116 --> 00:31:23.816 A:middle
of UIViewController that's being

00:31:23.816 --> 00:31:24.466 A:middle
represented.

00:31:25.026 --> 00:31:26.356 A:middle
In our case, that's the

00:31:26.356 --> 00:31:27.316 A:middle
AnimalViewController.

00:31:28.076 --> 00:31:29.976 A:middle
Secondly, we need to describe

00:31:30.176 --> 00:31:31.986 A:middle
how to create one of these

00:31:31.986 --> 00:31:33.336 A:middle
AnimalViewControllers from the

00:31:33.336 --> 00:31:35.096 A:middle
context it exists inside.

00:31:35.586 --> 00:31:37.056 A:middle
That context includes things

00:31:37.336 --> 00:31:38.576 A:middle
like whether the user is running

00:31:38.576 --> 00:31:40.106 A:middle
in light or dark mode and what

00:31:40.106 --> 00:31:41.376 A:middle
the dynamic font size is.

00:31:42.076 --> 00:31:44.996 A:middle
In this case, I have already

00:31:44.996 --> 00:31:46.376 A:middle
added a little wrapper class

00:31:46.376 --> 00:31:47.486 A:middle
[phonetic] around UIStoryBoard;

00:31:47.676 --> 00:31:48.396 A:middle
and I am loading an

00:31:48.396 --> 00:31:50.306 A:middle
AnimalViewController from it.

00:31:51.086 --> 00:31:52.526 A:middle
The third requirement that we

00:31:52.526 --> 00:31:53.916 A:middle
need to implement is

00:31:53.916 --> 00:31:55.296 A:middle
updateUIViewController.

00:31:55.886 --> 00:31:57.996 A:middle
This allows us to change the

00:31:57.996 --> 00:31:58.756 A:middle
appearance of our view

00:31:58.756 --> 00:32:00.796 A:middle
controller based on changes in

00:31:58.756 --> 00:32:00.796 A:middle
controller based on changes in

00:32:00.796 --> 00:32:02.186 A:middle
the environment, among other

00:32:02.186 --> 00:32:02.486 A:middle
things.

00:32:03.406 --> 00:32:04.876 A:middle
In our case, we just want to

00:32:04.876 --> 00:32:05.546 A:middle
create a preview.

00:32:06.146 --> 00:32:07.736 A:middle
So I am going to go ahead and

00:32:07.736 --> 00:32:09.376 A:middle
leave this implementation blank.

00:32:09.926 --> 00:32:12.766 A:middle
Now that we have a conformants

00:32:12.966 --> 00:32:14.366 A:middle
to the UIViewController

00:32:14.366 --> 00:32:15.736 A:middle
representable protocol, we are

00:32:15.976 --> 00:32:18.096 A:middle
ready to implement that Previews

00:32:18.096 --> 00:32:18.466 A:middle
method.

00:32:19.916 --> 00:32:21.666 A:middle
Specifically, we'll return an

00:32:21.666 --> 00:32:23.486 A:middle
instance of the type that

00:32:23.486 --> 00:32:24.886 A:middle
conforms to UIViewController

00:32:24.886 --> 00:32:26.166 A:middle
representable, namely,

00:32:26.556 --> 00:32:28.086 A:middle
AnimalViewController Previews.

00:32:28.986 --> 00:32:30.486 A:middle
With just those few lines of

00:32:30.486 --> 00:32:33.066 A:middle
code, you can see a preview for

00:32:33.066 --> 00:32:34.936 A:middle
your UIViewController in Xcode.

00:32:35.226 --> 00:32:36.076 A:middle
Let's take a look at it.

00:32:36.076 --> 00:32:38.546 A:middle
I am going to close the project

00:32:38.546 --> 00:32:40.506 A:middle
navigator and open the canvas by

00:32:40.506 --> 00:32:42.146 A:middle
pressing Command-Option-Return.

00:32:43.376 --> 00:32:45.976 A:middle
Because we added new methods in

00:32:45.976 --> 00:32:47.696 A:middle
the source editor, we will need

00:32:47.696 --> 00:32:48.246 A:middle
to rebuild.

00:32:48.866 --> 00:32:50.726 A:middle
And there, in the canvas, is a

00:32:50.726 --> 00:32:52.746 A:middle
preview for our UIViewController

00:32:52.826 --> 00:32:53.486 A:middle
written in Swift.

00:32:53.486 --> 00:32:53.856 A:middle
Thank you.

00:32:54.016 --> 00:32:55.096 A:middle
[ Applause ]

00:32:55.096 --> 00:32:57.036 A:middle
Yes. This is really fantastic --

00:32:57.926 --> 00:32:59.046 A:middle
a preview for our

00:32:59.046 --> 00:33:00.506 A:middle
UIViewController written in

00:32:59.046 --> 00:33:00.506 A:middle
UIViewController written in

00:33:00.506 --> 00:33:02.496 A:middle
Swift against UIKit.

00:33:03.046 --> 00:33:07.046 A:middle
But as I am looking at this

00:33:07.046 --> 00:33:08.546 A:middle
ViewController, I am noticing a

00:33:08.546 --> 00:33:09.086 A:middle
problem.

00:33:09.486 --> 00:33:11.416 A:middle
This text is awfully difficult

00:33:11.416 --> 00:33:11.866 A:middle
to read.

00:33:13.046 --> 00:33:14.486 A:middle
There is an underlay view

00:33:14.486 --> 00:33:16.246 A:middle
beneath the text above the

00:33:16.246 --> 00:33:16.926 A:middle
image.

00:33:17.206 --> 00:33:18.866 A:middle
It's semi-opaque, so that the

00:33:18.866 --> 00:33:19.906 A:middle
text should be readable.

00:33:20.376 --> 00:33:22.216 A:middle
But clearly it's not opaque

00:33:22.216 --> 00:33:22.566 A:middle
enough.

00:33:23.106 --> 00:33:25.316 A:middle
So let's go ahead and crank that

00:33:25.316 --> 00:33:26.506 A:middle
opacity up enough.

00:33:26.636 --> 00:33:28.336 A:middle
I am going to pin this preview

00:33:28.726 --> 00:33:29.996 A:middle
so that we can keep looking at

00:33:29.996 --> 00:33:32.126 A:middle
it as we make the change, and

00:33:32.126 --> 00:33:32.876 A:middle
switch over to the

00:33:32.876 --> 00:33:34.056 A:middle
AnimalViewController file.

00:33:37.426 --> 00:33:39.026 A:middle
And in this file I'll change the

00:33:39.026 --> 00:33:40.906 A:middle
alpha of that underlay view to

00:33:40.906 --> 00:33:41.786 A:middle
0.5.

00:33:42.646 --> 00:33:44.556 A:middle
Immediately, the canvas updates,

00:33:44.936 --> 00:33:47.286 A:middle
showing us our preview for our

00:33:47.286 --> 00:33:48.746 A:middle
ViewController with that change.

00:33:49.766 --> 00:33:52.106 A:middle
Previews in Xcode work not just

00:33:52.106 --> 00:33:54.776 A:middle
with SwiftUI but with all Swift

00:33:54.776 --> 00:33:55.136 A:middle
code.

00:33:55.306 --> 00:33:57.576 A:middle
And moreover, we get all of the

00:33:57.576 --> 00:33:59.356 A:middle
hot swapping and incremental

00:33:59.356 --> 00:34:00.916 A:middle
updates without recompilation

00:33:59.356 --> 00:34:00.916 A:middle
updates without recompilation

00:34:00.916 --> 00:34:02.406 A:middle
for literal values that Anton

00:34:02.406 --> 00:34:03.756 A:middle
told you about -- whether you

00:34:03.756 --> 00:34:04.796 A:middle
are working with SwiftUI or

00:34:04.796 --> 00:34:05.976 A:middle
UIAppKit, or WatchKit.

00:34:06.516 --> 00:34:11.005 A:middle
[ Applause ]

00:34:11.505 --> 00:34:11.846 A:middle
Thank you.

00:34:15.116 --> 00:34:15.976 A:middle
Anton showed you the

00:34:15.976 --> 00:34:17.436 A:middle
AnimalActionViewController.

00:34:17.616 --> 00:34:19.576 A:middle
I have been working on that, so

00:34:19.576 --> 00:34:20.936 A:middle
I already added a preview for

00:34:20.936 --> 00:34:21.003 A:middle
it.

00:34:21.545 --> 00:34:22.346 A:middle
Let me show it to you.

00:34:22.446 --> 00:34:24.686 A:middle
I am going to go ahead and unpin

00:34:24.686 --> 00:34:26.076 A:middle
this AnimalViewController

00:34:26.295 --> 00:34:28.056 A:middle
preview, clicking the Pin button

00:34:28.056 --> 00:34:28.866 A:middle
in the bottom left of the

00:34:28.866 --> 00:34:31.216 A:middle
canvas, and then switch over to

00:34:31.216 --> 00:34:32.716 A:middle
the AnimalActionsViewController

00:34:32.716 --> 00:34:33.286 A:middle
representable.

00:34:34.266 --> 00:34:36.146 A:middle
And there is a preview for this

00:34:36.146 --> 00:34:37.416 A:middle
AnimalActionViewController.

00:34:38.295 --> 00:34:39.876 A:middle
The team is discussing the

00:34:39.876 --> 00:34:41.146 A:middle
button on the far right there,

00:34:41.565 --> 00:34:43.896 A:middle
and we feel that IImage is not

00:34:43.985 --> 00:34:45.076 A:middle
quite appropriate.

00:34:45.386 --> 00:34:46.886 A:middle
It's not quite consistent with

00:34:46.886 --> 00:34:47.485 A:middle
the platform.

00:34:47.856 --> 00:34:49.856 A:middle
Let's go ahead and fix that now.

00:34:49.856 --> 00:34:51.686 A:middle
I am going to open the

00:34:51.686 --> 00:34:53.456 A:middle
AnimalActionViewController file.

00:34:54.216 --> 00:34:55.755 A:middle
And, you know, I was taking a

00:34:55.755 --> 00:34:57.286 A:middle
trip down Memory Lane when wrote

00:34:57.286 --> 00:34:58.476 A:middle
this, so I went ahead and did it

00:34:58.476 --> 00:34:58.976 A:middle
in Objective-C.

00:34:59.516 --> 00:35:02.446 A:middle
[ Laughter ]

00:34:59.516 --> 00:35:02.446 A:middle
[ Laughter ]

00:35:02.946 --> 00:35:03.456 A:middle
Thank you.

00:35:03.546 --> 00:35:03.986 A:middle
Thank you.

00:35:03.986 --> 00:35:06.026 A:middle
It's a great language.

00:35:07.106 --> 00:35:09.286 A:middle
And I'll change the system image

00:35:09.286 --> 00:35:10.946 A:middle
that we are populating the Info

00:35:10.946 --> 00:35:12.796 A:middle
button with to info.circle.

00:35:13.416 --> 00:35:16.966 A:middle
And I'll switch back to our

00:35:16.966 --> 00:35:19.326 A:middle
preview and refresh the preview.

00:35:19.796 --> 00:35:20.946 A:middle
Because this is written in

00:35:20.946 --> 00:35:23.426 A:middle
Objective-C and not Swift, we

00:35:23.426 --> 00:35:25.966 A:middle
will have to - Xcode will tell

00:35:25.966 --> 00:35:27.596 A:middle
the build system to kick off a

00:35:27.596 --> 00:35:29.306 A:middle
normal rebuild rather than using

00:35:29.756 --> 00:35:31.166 A:middle
incremental updates or hot

00:35:31.166 --> 00:35:31.616 A:middle
swapping.

00:35:31.896 --> 00:35:33.456 A:middle
But still, that's usually very

00:35:33.456 --> 00:35:33.976 A:middle
fast.

00:35:34.206 --> 00:35:35.796 A:middle
And specifically, it's much

00:35:35.796 --> 00:35:37.796 A:middle
faster than rebuilding and

00:35:37.796 --> 00:35:39.426 A:middle
running and navigating into your

00:35:39.426 --> 00:35:40.076 A:middle
application.

00:35:41.186 --> 00:35:43.176 A:middle
Xcode Previews works not just

00:35:43.176 --> 00:35:44.666 A:middle
with SwiftUI and not just with

00:35:44.666 --> 00:35:46.696 A:middle
Swift files, but even with your

00:35:46.696 --> 00:35:48.706 A:middle
Objective-C code written in

00:35:48.706 --> 00:35:50.156 A:middle
UIKit, AppKit, and WatchKit.

00:35:50.156 --> 00:35:51.786 A:middle
And moreover, it works with all

00:35:51.786 --> 00:35:53.196 A:middle
of the source files that Xcode

00:35:53.196 --> 00:35:53.856 A:middle
understands.

00:35:54.516 --> 00:36:00.500 A:middle
[ Applause ]

00:35:54.516 --> 00:36:00.500 A:middle
[ Applause ]

00:36:04.636 --> 00:36:07.326 A:middle
You have seen how Xcode Previews

00:36:07.326 --> 00:36:09.046 A:middle
can really accelerate your

00:36:09.046 --> 00:36:09.466 A:middle
workflow.

00:36:10.246 --> 00:36:11.116 A:middle
But I would like to talk to you

00:36:11.116 --> 00:36:13.356 A:middle
now about how you could tweak

00:36:13.716 --> 00:36:14.976 A:middle
the application - the

00:36:14.976 --> 00:36:16.496 A:middle
architecture of your application

00:36:17.426 --> 00:36:19.296 A:middle
to make Xcode Previews work even

00:36:19.296 --> 00:36:20.026 A:middle
harder for you.

00:36:20.636 --> 00:36:22.676 A:middle
Specifically, I would like to

00:36:22.676 --> 00:36:24.106 A:middle
talk about one of the types that

00:36:24.106 --> 00:36:25.446 A:middle
appeared in the zoo application,

00:36:25.896 --> 00:36:27.886 A:middle
namely, AnimalCellModel.

00:36:28.416 --> 00:36:30.046 A:middle
What were we doing with that

00:36:30.046 --> 00:36:30.356 A:middle
thing?

00:36:31.666 --> 00:36:33.696 A:middle
Well we were populating our

00:36:33.696 --> 00:36:35.966 A:middle
AnimalView -- our AnimalCell.

00:36:36.846 --> 00:36:39.156 A:middle
Because of SwiftUI's fluent API

00:36:40.306 --> 00:36:44.266 A:middle
and - we are able to implement

00:36:44.266 --> 00:36:46.316 A:middle
this body method very concisely.

00:36:47.506 --> 00:36:49.786 A:middle
And thanks to using a cell

00:36:50.306 --> 00:36:52.946 A:middle
model, it's extremely explicit

00:36:53.216 --> 00:36:55.676 A:middle
what data is going into what

00:36:55.886 --> 00:36:57.766 A:middle
field on the view.

00:36:58.366 --> 00:37:02.576 A:middle
With that said, we could have

00:36:58.366 --> 00:37:02.576 A:middle
With that said, we could have

00:37:02.576 --> 00:37:04.346 A:middle
actually used an animal model

00:37:04.346 --> 00:37:06.106 A:middle
object and passed that directly

00:37:06.106 --> 00:37:06.696 A:middle
into the view.

00:37:07.716 --> 00:37:09.536 A:middle
We didn't, for two big reasons.

00:37:10.236 --> 00:37:14.376 A:middle
The first is that using a view

00:37:14.376 --> 00:37:17.606 A:middle
model makes it way easier to add

00:37:17.606 --> 00:37:18.556 A:middle
new previews.

00:37:19.166 --> 00:37:21.396 A:middle
A good pattern to consider for

00:37:21.396 --> 00:37:22.386 A:middle
your PreviewProvider

00:37:22.386 --> 00:37:25.136 A:middle
implementation is to add a

00:37:25.136 --> 00:37:26.806 A:middle
static array of view model.

00:37:27.356 --> 00:37:29.686 A:middle
And in your implementation of

00:37:29.686 --> 00:37:32.136 A:middle
the Static Previews property, to

00:37:32.136 --> 00:37:33.966 A:middle
iterate over that array of view

00:37:33.966 --> 00:37:35.816 A:middle
model and populate your view.

00:37:36.546 --> 00:37:38.176 A:middle
This is useful when you

00:37:38.176 --> 00:37:39.586 A:middle
encounter a new data

00:37:39.586 --> 00:37:41.546 A:middle
configuration that will result

00:37:41.546 --> 00:37:42.936 A:middle
in a different view layout.

00:37:43.796 --> 00:37:45.496 A:middle
All you need to do is create a

00:37:45.496 --> 00:37:47.556 A:middle
view model and add it to that

00:37:47.556 --> 00:37:48.016 A:middle
array.

00:37:49.196 --> 00:37:50.626 A:middle
Then you'll get a new preview in

00:37:50.626 --> 00:37:52.696 A:middle
the canvas showing your new view

00:37:52.696 --> 00:37:53.036 A:middle
layout.

00:37:54.556 --> 00:37:56.506 A:middle
Before getting to the second big

00:37:56.506 --> 00:37:58.586 A:middle
reason that we decided to use

00:37:58.586 --> 00:37:59.496 A:middle
view models in the zoo

00:37:59.496 --> 00:38:01.716 A:middle
application, I want to wax a

00:37:59.496 --> 00:38:01.716 A:middle
application, I want to wax a

00:38:01.746 --> 00:38:03.226 A:middle
little philosophical for a

00:38:03.226 --> 00:38:06.356 A:middle
moment if you'll bear with me.

00:38:07.876 --> 00:38:09.396 A:middle
The model layer of your

00:38:09.396 --> 00:38:11.436 A:middle
application includes a rich

00:38:11.556 --> 00:38:12.396 A:middle
object draft.

00:38:13.456 --> 00:38:15.456 A:middle
Even in our zoo application, we

00:38:15.456 --> 00:38:16.806 A:middle
have a zoo model object.

00:38:17.556 --> 00:38:19.366 A:middle
And that zoo model object is

00:38:19.366 --> 00:38:21.736 A:middle
only one among many of the

00:38:21.736 --> 00:38:23.086 A:middle
animals in a clade.

00:38:23.086 --> 00:38:26.256 A:middle
On the other side, that animal

00:38:26.256 --> 00:38:28.486 A:middle
model object has within a

00:38:28.486 --> 00:38:28.896 A:middle
genome.

00:38:29.066 --> 00:38:32.006 A:middle
How are you going to display

00:38:32.006 --> 00:38:33.616 A:middle
that information to your users?

00:38:34.926 --> 00:38:40.296 A:middle
Well, not all at once.

00:38:40.436 --> 00:38:41.586 A:middle
For example, you don't want to

00:38:41.586 --> 00:38:44.226 A:middle
add a genome to your animal

00:38:44.226 --> 00:38:44.506 A:middle
cell.

00:38:44.776 --> 00:38:46.046 A:middle
That's too much information.

00:38:47.016 --> 00:38:48.736 A:middle
Instead, you are going to

00:38:48.736 --> 00:38:50.906 A:middle
extract just the most important

00:38:50.906 --> 00:38:53.186 A:middle
pieces of information from your

00:38:53.186 --> 00:38:55.916 A:middle
model object and create your

00:38:55.916 --> 00:38:57.066 A:middle
view using them.

00:38:57.786 --> 00:38:59.356 A:middle
And you won't just extract them

00:38:59.356 --> 00:39:00.696 A:middle
in a one-to-one manner.

00:38:59.356 --> 00:39:00.696 A:middle
in a one-to-one manner.

00:39:01.346 --> 00:39:02.816 A:middle
Often, you'll perform some

00:39:02.816 --> 00:39:04.416 A:middle
transformations on the data.

00:39:05.266 --> 00:39:07.576 A:middle
Here we took two of the fields

00:39:07.576 --> 00:39:09.566 A:middle
from the animal model object and

00:39:09.566 --> 00:39:11.956 A:middle
combined them to create a single

00:39:11.956 --> 00:39:13.646 A:middle
text containing the genus and

00:39:13.646 --> 00:39:14.116 A:middle
species.

00:39:15.226 --> 00:39:18.356 A:middle
That transformation and

00:39:18.356 --> 00:39:20.496 A:middle
extraction process is error

00:39:20.496 --> 00:39:20.806 A:middle
prone.

00:39:21.656 --> 00:39:23.376 A:middle
But using a view model makes it

00:39:23.376 --> 00:39:23.916 A:middle
explicit.

00:39:25.516 --> 00:39:28.226 A:middle
Here is a view model -- our

00:39:28.226 --> 00:39:29.796 A:middle
AnimalCellModel in particular --

00:39:30.226 --> 00:39:32.046 A:middle
being constructed from a model

00:39:32.046 --> 00:39:32.416 A:middle
object.

00:39:33.156 --> 00:39:35.866 A:middle
We can clearly see the data

00:39:35.866 --> 00:39:37.376 A:middle
being pulled out of the model

00:39:37.376 --> 00:39:39.306 A:middle
object and combined so that we

00:39:39.306 --> 00:39:40.896 A:middle
can show exactly what we want

00:39:40.896 --> 00:39:42.276 A:middle
to, to our users.

00:39:43.666 --> 00:39:45.716 A:middle
And having this be explicit is

00:39:45.856 --> 00:39:48.396 A:middle
invaluable because it makes it

00:39:48.396 --> 00:39:50.456 A:middle
so easy to test.

00:39:50.946 --> 00:39:52.616 A:middle
Whenever we encounter a new

00:39:52.706 --> 00:39:54.986 A:middle
flavor of model object that

00:39:54.986 --> 00:39:56.606 A:middle
needs to be represented to our

00:39:56.606 --> 00:39:58.856 A:middle
users in a different manner, all

00:39:58.856 --> 00:39:59.716 A:middle
we need to do is leverage

00:39:59.716 --> 00:39:59.976 A:middle
XCTest.

00:40:00.066 --> 00:40:03.036 A:middle
Add a new test case, and in that

00:40:03.226 --> 00:40:05.856 A:middle
test case create one of our

00:40:05.856 --> 00:40:07.866 A:middle
model objects; create from it a

00:40:07.866 --> 00:40:09.796 A:middle
view model; and validate that

00:40:09.796 --> 00:40:11.756 A:middle
our view model has exactly the

00:40:11.756 --> 00:40:13.176 A:middle
data that we want to show to our

00:40:13.176 --> 00:40:15.196 A:middle
users to represent that model

00:40:15.246 --> 00:40:15.666 A:middle
object.

00:40:16.926 --> 00:40:18.596 A:middle
This is the second major reason

00:40:18.886 --> 00:40:20.636 A:middle
we decided to use view models in

00:40:20.636 --> 00:40:21.586 A:middle
our zoo application.

00:40:23.696 --> 00:40:24.866 A:middle
What does this mean for your

00:40:24.866 --> 00:40:26.226 A:middle
overarching application

00:40:26.226 --> 00:40:26.816 A:middle
architecture?

00:40:30.046 --> 00:40:31.836 A:middle
Well a big part of building

00:40:31.836 --> 00:40:35.066 A:middle
great apps is to take this rich

00:40:35.066 --> 00:40:38.876 A:middle
model object graph that exists

00:40:38.876 --> 00:40:41.266 A:middle
in your model layer and to

00:40:41.266 --> 00:40:43.116 A:middle
represent it to your users,

00:40:43.336 --> 00:40:44.596 A:middle
pulling out just the most

00:40:44.596 --> 00:40:46.196 A:middle
important pieces of information

00:40:46.626 --> 00:40:47.786 A:middle
and showing it to them in a

00:40:47.786 --> 00:40:48.836 A:middle
beautiful fashion.

00:40:50.396 --> 00:40:52.526 A:middle
Using a view model can make this

00:40:52.526 --> 00:40:53.906 A:middle
so much easier.

00:40:55.036 --> 00:40:57.896 A:middle
The reason is that you can use

00:40:57.896 --> 00:41:02.156 A:middle
the following flow: First, for

00:40:57.896 --> 00:41:02.156 A:middle
the following flow: First, for

00:41:02.156 --> 00:41:04.016 A:middle
your model objects construct

00:41:04.196 --> 00:41:04.806 A:middle
view models.

00:41:06.226 --> 00:41:09.116 A:middle
That process is error prone.

00:41:09.326 --> 00:41:11.126 A:middle
So you test, and you test, and

00:41:11.126 --> 00:41:13.456 A:middle
you test, and you make sure that

00:41:13.456 --> 00:41:14.896 A:middle
your view models contain exactly

00:41:14.896 --> 00:41:15.836 A:middle
the data you want to show to

00:41:15.836 --> 00:41:16.576 A:middle
your users.

00:41:16.986 --> 00:41:19.306 A:middle
Second, for each flavor of view

00:41:19.306 --> 00:41:22.396 A:middle
model representing - resulting

00:41:22.686 --> 00:41:24.716 A:middle
in a different view layout, you

00:41:24.716 --> 00:41:25.526 A:middle
add a preview.

00:41:25.966 --> 00:41:27.396 A:middle
And you can verify, just in a

00:41:27.396 --> 00:41:29.306 A:middle
canvas, that your views are

00:41:29.306 --> 00:41:31.146 A:middle
displaying exactly the data your

00:41:31.146 --> 00:41:32.216 A:middle
users want to see.

00:41:32.886 --> 00:41:35.146 A:middle
Finally, you can use XCUI

00:41:35.146 --> 00:41:37.796 A:middle
testing to validate the way that

00:41:37.796 --> 00:41:39.646 A:middle
your application works in

00:41:39.646 --> 00:41:40.156 A:middle
production.

00:41:40.156 --> 00:41:42.976 A:middle
I'd like to take a moment to

00:41:42.976 --> 00:41:44.386 A:middle
talk about performance.

00:41:44.896 --> 00:41:49.986 A:middle
We have told you that previews

00:41:49.986 --> 00:41:50.706 A:middle
are just code.

00:41:51.806 --> 00:41:53.516 A:middle
One consequence of this is that

00:41:53.516 --> 00:41:55.146 A:middle
you don't want to run arbitrary

00:41:55.146 --> 00:41:57.876 A:middle
operations when your previews

00:41:57.876 --> 00:41:58.596 A:middle
are being rendered.

00:41:59.076 --> 00:41:59.916 A:middle
You know, you don't want to

00:41:59.916 --> 00:42:01.386 A:middle
calculate the millionth prime.

00:41:59.916 --> 00:42:01.386 A:middle
calculate the millionth prime.

00:42:02.396 --> 00:42:05.086 A:middle
Similarly, Xcode Previews will

00:42:05.126 --> 00:42:06.496 A:middle
call Applicationdid

00:42:06.496 --> 00:42:07.916 A:middle
/FinishLaunching /WithOptions.

00:42:08.736 --> 00:42:10.276 A:middle
Consequently, you don't want to

00:42:10.276 --> 00:42:11.746 A:middle
do a bunch of extraneous work

00:42:11.786 --> 00:42:12.026 A:middle
there.

00:42:12.516 --> 00:42:14.556 A:middle
And specifically, you don't want

00:42:14.556 --> 00:42:16.816 A:middle
to set up your UI hierarchy when

00:42:16.906 --> 00:42:19.386 A:middle
all you want is to see your - a

00:42:19.386 --> 00:42:21.106 A:middle
preview of your view rendered in

00:42:21.106 --> 00:42:21.606 A:middle
the canvas.

00:42:22.436 --> 00:42:24.586 A:middle
Instead, make your application

00:42:24.586 --> 00:42:26.526 A:middle
scene aware, conform to the

00:42:26.526 --> 00:42:28.496 A:middle
UIWindowSceneDelegate, and

00:42:28.496 --> 00:42:29.516 A:middle
implement the scene

00:42:29.516 --> 00:42:32.216 A:middle
willConnectToOptions method and

00:42:32.416 --> 00:42:34.326 A:middle
set up your UI hierarchy there.

00:42:35.276 --> 00:42:36.676 A:middle
And look: This isn't just

00:42:36.676 --> 00:42:37.676 A:middle
beneficial for you, the

00:42:37.676 --> 00:42:39.386 A:middle
developer, OK, it's faster

00:42:39.386 --> 00:42:40.376 A:middle
previews as a result.

00:42:40.776 --> 00:42:42.256 A:middle
This is also a boon for your

00:42:42.256 --> 00:42:42.876 A:middle
users.

00:42:43.776 --> 00:42:45.006 A:middle
When your application launches

00:42:45.006 --> 00:42:46.836 A:middle
into the background, it won't be

00:42:46.836 --> 00:42:48.036 A:middle
doing a bunch of extra work.

00:42:48.646 --> 00:42:49.956 A:middle
It'll just do exactly what it

00:42:49.956 --> 00:42:51.566 A:middle
needs to and go back to sleep,

00:42:52.136 --> 00:42:53.446 A:middle
avoiding wasting your user's

00:42:53.446 --> 00:42:53.976 A:middle
battery life.

00:42:54.516 --> 00:43:01.986 A:middle
[ Applause ]

00:42:54.516 --> 00:43:01.986 A:middle
[ Applause ]

00:43:02.486 --> 00:43:03.386 A:middle
Let's recap here.

00:43:04.126 --> 00:43:05.456 A:middle
You have seen how to write a

00:43:05.456 --> 00:43:05.936 A:middle
preview.

00:43:06.076 --> 00:43:07.776 A:middle
The preview's API is part of

00:43:07.776 --> 00:43:08.456 A:middle
SwiftUI.

00:43:08.876 --> 00:43:09.976 A:middle
It's really powerful.

00:43:10.546 --> 00:43:12.496 A:middle
And you can use all of SwiftUI

00:43:12.496 --> 00:43:13.246 A:middle
when you are writing your

00:43:13.246 --> 00:43:13.706 A:middle
previews.

00:43:14.396 --> 00:43:16.506 A:middle
You have seen how to use

00:43:16.596 --> 00:43:18.496 A:middle
advanced Xcode workflows, like

00:43:18.566 --> 00:43:19.986 A:middle
preview pinning, to keep your

00:43:19.986 --> 00:43:21.546 A:middle
state when you are switching

00:43:21.546 --> 00:43:22.826 A:middle
between different files.

00:43:23.526 --> 00:43:25.266 A:middle
And you have seen how to use

00:43:25.336 --> 00:43:27.286 A:middle
development assets, allowing you

00:43:27.286 --> 00:43:28.876 A:middle
to have rich and interesting

00:43:28.876 --> 00:43:31.106 A:middle
previews without shipping them -

00:43:31.616 --> 00:43:33.616 A:middle
without shipping test data to

00:43:33.616 --> 00:43:34.386 A:middle
your users.

00:43:35.066 --> 00:43:36.926 A:middle
Finally, you have seen how to

00:43:36.926 --> 00:43:39.566 A:middle
use previews not just with

00:43:39.566 --> 00:43:41.366 A:middle
SwiftUI and not just with Swift,

00:43:41.886 --> 00:43:43.406 A:middle
but with all of the source files

00:43:43.406 --> 00:43:45.026 A:middle
that Xcode understands written

00:43:45.026 --> 00:43:46.706 A:middle
against UIKit, AppKit, and

00:43:46.706 --> 00:43:46.976 A:middle
WatchKit.

00:43:47.516 --> 00:43:54.546 A:middle
[ Applause ]

00:43:55.046 --> 00:43:56.366 A:middle
Well that's Mastering Xcode

00:43:56.366 --> 00:43:56.786 A:middle
Previews.

00:43:57.116 --> 00:43:57.976 A:middle
Thank you all for coming.

00:43:58.516 --> 00:44:01.716 A:middle
[ Applause ]

00:43:58.516 --> 00:44:01.716 A:middle
[ Applause ]

00:44:02.216 --> 00:44:02.976 A:middle
Come see us in the lab.
