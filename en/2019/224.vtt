WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[ Music ]

00:00:10.516 --> 00:00:14.396 A:middle
[ Applause ]

00:00:14.896 --> 00:00:15.806 A:middle
&gt;&gt; Hello everybody.

00:00:16.806 --> 00:00:19.816 A:middle
This is modernizing your UI for

00:00:19.816 --> 00:00:20.796 A:middle
iOS 13.

00:00:22.126 --> 00:00:23.046 A:middle
I'm David Duncan.

00:00:23.666 --> 00:00:25.006 A:middle
I'll be joined on stage shortly

00:00:25.006 --> 00:00:27.486 A:middle
by my colleagues Russell, Kyle,

00:00:28.786 --> 00:00:30.496 A:middle
James, and Mohammed.

00:00:32.026 --> 00:00:34.306 A:middle
In this section, we're going to

00:00:34.306 --> 00:00:35.566 A:middle
talk about six things.

00:00:36.446 --> 00:00:38.076 A:middle
Preparing your applications for

00:00:38.116 --> 00:00:38.736 A:middle
Flexible UI.

00:00:40.156 --> 00:00:41.736 A:middle
Improvements that we've made the

00:00:41.736 --> 00:00:43.166 A:middle
appearance of Bars and

00:00:43.166 --> 00:00:46.006 A:middle
Presentations, new Features

00:00:46.006 --> 00:00:47.466 A:middle
available to your applications

00:00:47.816 --> 00:00:50.806 A:middle
for searching, and new Gestures

00:00:50.806 --> 00:00:53.026 A:middle
that you can adopt to make your

00:00:53.026 --> 00:00:55.936 A:middle
apps more productive and to take

00:00:55.936 --> 00:00:57.036 A:middle
care of cases that you haven't

00:00:57.036 --> 00:00:58.456 A:middle
been able to do before.

00:00:59.306 --> 00:01:00.446 A:middle
And finally, we're going to go

00:00:59.306 --> 00:01:00.446 A:middle
And finally, we're going to go

00:01:00.446 --> 00:01:02.176 A:middle
over those new contextual menu

00:01:02.176 --> 00:01:03.506 A:middle
APIs that were hinted at earlier

00:01:03.506 --> 00:01:03.936 A:middle
this week.

00:01:04.446 --> 00:01:07.116 A:middle
And so with this, let's talk

00:01:07.116 --> 00:01:10.636 A:middle
about Flexible UI.

00:01:11.006 --> 00:01:13.146 A:middle
So, the first step to being

00:01:13.196 --> 00:01:15.656 A:middle
flexible is what your users

00:01:15.656 --> 00:01:17.356 A:middle
first see when they launch your

00:01:17.356 --> 00:01:17.956 A:middle
application.

00:01:19.236 --> 00:01:20.246 A:middle
Storyboards have been the

00:01:20.246 --> 00:01:22.176 A:middle
preferred way to specify your

00:01:22.176 --> 00:01:24.196 A:middle
Launch UI since iOS 8.

00:01:25.516 --> 00:01:26.466 A:middle
But there's also been another

00:01:26.466 --> 00:01:27.336 A:middle
alternative that we've been

00:01:27.336 --> 00:01:28.566 A:middle
supporting since the beginning

00:01:28.566 --> 00:01:31.416 A:middle
of iOS, and that's Launch

00:01:31.416 --> 00:01:31.856 A:middle
Images.

00:01:32.786 --> 00:01:34.316 A:middle
Launch Images require you to

00:01:34.316 --> 00:01:35.746 A:middle
specify an image for every

00:01:35.746 --> 00:01:37.586 A:middle
screen size you support and

00:01:37.586 --> 00:01:39.286 A:middle
revise whenever we introduce new

00:01:39.286 --> 00:01:40.056 A:middle
screen sizes.

00:01:41.176 --> 00:01:42.366 A:middle
And that's not very flexible.

00:01:43.546 --> 00:01:45.996 A:middle
And so, this spring, April 2020,

00:01:46.516 --> 00:01:48.926 A:middle
applications that linked iOS 13

00:01:49.036 --> 00:01:51.456 A:middle
SDK must provide a Launch

00:01:51.456 --> 00:01:52.726 A:middle
Storyboard in order to be

00:01:52.726 --> 00:01:53.666 A:middle
accepted at the app store.

00:01:54.146 --> 00:01:55.416 A:middle
You will no longer be able to

00:01:55.596 --> 00:01:57.326 A:middle
submit with only Launch images.

00:01:58.246 --> 00:01:59.316 A:middle
So, if you haven't adopted

00:01:59.316 --> 00:02:01.076 A:middle
Launch Storyboards yet, now is a

00:01:59.316 --> 00:02:01.076 A:middle
Launch Storyboards yet, now is a

00:02:01.116 --> 00:02:03.496 A:middle
fantastic time to do so, and

00:02:03.496 --> 00:02:05.156 A:middle
that leads on to the next change

00:02:05.206 --> 00:02:06.226 A:middle
that you may have also already

00:02:06.226 --> 00:02:08.906 A:middle
heard of, which is that in the

00:02:08.976 --> 00:02:11.306 A:middle
past if we introduce new

00:02:11.306 --> 00:02:12.866 A:middle
hardware with a new screen size,

00:02:13.306 --> 00:02:14.436 A:middle
your apps were letterboxed.

00:02:15.266 --> 00:02:16.956 A:middle
Well, we're not going to be

00:02:16.956 --> 00:02:17.766 A:middle
doing that anymore either.

00:02:18.556 --> 00:02:20.076 A:middle
So, if you application is built

00:02:20.076 --> 00:02:23.016 A:middle
against the iOS 13 SDK, then it

00:02:23.016 --> 00:02:24.956 A:middle
will always be displayed at the

00:02:24.956 --> 00:02:26.806 A:middle
native full-screen resolution of

00:02:26.806 --> 00:02:27.186 A:middle
the screen.

00:02:28.156 --> 00:02:29.296 A:middle
So we expect that any

00:02:29.296 --> 00:02:30.976 A:middle
application built against iOS13

00:02:31.096 --> 00:02:33.866 A:middle
will use the appropriate APIs to

00:02:33.866 --> 00:02:35.846 A:middle
ensure correct layout at any

00:02:35.846 --> 00:02:36.196 A:middle
size.

00:02:37.446 --> 00:02:39.656 A:middle
Now, for those of you building

00:02:39.656 --> 00:02:42.206 A:middle
iPad applications, this also

00:02:42.206 --> 00:02:43.646 A:middle
applies to split screen

00:02:43.646 --> 00:02:44.416 A:middle
multitasking.

00:02:45.446 --> 00:02:48.096 A:middle
So, we are going to expect that

00:02:48.096 --> 00:02:49.696 A:middle
most applications, unless you

00:02:49.696 --> 00:02:50.606 A:middle
need to provide a truly

00:02:50.606 --> 00:02:52.896 A:middle
immersive experience, are going

00:02:52.896 --> 00:02:53.916 A:middle
to support split screen

00:02:53.916 --> 00:02:55.946 A:middle
multitasking, so that you can

00:02:55.946 --> 00:02:58.056 A:middle
have your app in any size next

00:02:58.056 --> 00:02:59.966 A:middle
to any other application that

00:02:59.966 --> 00:03:01.246 A:middle
might be running that the user

00:02:59.966 --> 00:03:01.246 A:middle
might be running that the user

00:03:01.246 --> 00:03:02.036 A:middle
has chosen.

00:03:03.206 --> 00:03:06.266 A:middle
Now, if you're not certain if

00:03:06.266 --> 00:03:07.186 A:middle
you can support all these

00:03:07.186 --> 00:03:08.696 A:middle
resizing modes and everything

00:03:08.696 --> 00:03:10.136 A:middle
else, another thing you might

00:03:10.136 --> 00:03:11.406 A:middle
want to try, especially if you

00:03:11.406 --> 00:03:12.746 A:middle
have an iPad app, is just

00:03:12.746 --> 00:03:14.026 A:middle
building for the Mac, with new

00:03:14.026 --> 00:03:15.716 A:middle
supports that we're adding in

00:03:15.826 --> 00:03:16.986 A:middle
macOS Catalina.

00:03:17.536 --> 00:03:18.596 A:middle
And you can just do that at your

00:03:18.596 --> 00:03:19.626 A:middle
desk to make sure that you

00:03:19.626 --> 00:03:21.606 A:middle
resize nicely for any size.

00:03:22.526 --> 00:03:25.556 A:middle
So, to sum up all that before,

00:03:26.296 --> 00:03:27.856 A:middle
adopt Launch Storyboards.

00:03:28.026 --> 00:03:29.626 A:middle
They're going to be the way to

00:03:29.626 --> 00:03:31.856 A:middle
get that Launch UI when the user

00:03:31.966 --> 00:03:33.316 A:middle
first launches your application.

00:03:34.156 --> 00:03:35.746 A:middle
Make sure your application

00:03:35.746 --> 00:03:37.726 A:middle
properly lays out to support any

00:03:37.726 --> 00:03:40.346 A:middle
size, whether it is the smallest

00:03:40.346 --> 00:03:42.536 A:middle
iPhone to the largest iPad.

00:03:43.036 --> 00:03:44.686 A:middle
And finally, make sure that your

00:03:44.686 --> 00:03:46.606 A:middle
iPad applications also support

00:03:46.696 --> 00:03:47.936 A:middle
Split Screen Multitasking.

00:03:48.446 --> 00:03:49.566 A:middle
Because all of this is going to

00:03:49.566 --> 00:03:51.636 A:middle
be required by April 2020.

00:03:52.886 --> 00:03:54.886 A:middle
And so with that, let's

00:03:54.886 --> 00:03:56.716 A:middle
transition to Bars.

00:03:58.736 --> 00:04:03.846 A:middle
So, if you look at your phone

00:03:58.736 --> 00:04:03.846 A:middle
So, if you look at your phone

00:04:03.846 --> 00:04:04.886 A:middle
after installing the beta,

00:04:06.056 --> 00:04:08.126 A:middle
you'll see this is how

00:04:08.316 --> 00:04:08.906 A:middle
nav bars now appears.

00:04:09.436 --> 00:04:10.566 A:middle
When you scroll all the way up

00:04:10.566 --> 00:04:12.206 A:middle
to the top, we drop out the

00:04:12.206 --> 00:04:14.196 A:middle
background, and when we scroll

00:04:14.196 --> 00:04:15.556 A:middle
something underneath, we bring

00:04:15.556 --> 00:04:16.836 A:middle
it back in smoothly and

00:04:17.156 --> 00:04:17.946 A:middle
transparently.

00:04:19.505 --> 00:04:22.776 A:middle
Similarly, on iPad, if you have

00:04:22.776 --> 00:04:24.866 A:middle
split view controller, we do

00:04:24.866 --> 00:04:26.256 A:middle
this independently for both

00:04:26.256 --> 00:04:27.906 A:middle
sides regardless of if the

00:04:27.906 --> 00:04:30.226 A:middle
details support large titles or

00:04:30.226 --> 00:04:32.926 A:middle
not, and they independently

00:04:32.926 --> 00:04:33.406 A:middle
respond.

00:04:33.476 --> 00:04:35.016 A:middle
So, one background comes in or

00:04:35.016 --> 00:04:35.956 A:middle
the other, depending on the

00:04:35.956 --> 00:04:36.656 A:middle
scroll position.

00:04:38.256 --> 00:04:40.396 A:middle
Now, you might be asking, how do

00:04:40.396 --> 00:04:41.106 A:middle
I adopt this?

00:04:41.106 --> 00:04:42.076 A:middle
How do I make sure this works

00:04:42.226 --> 00:04:43.686 A:middle
cleanly in my application?

00:04:44.746 --> 00:04:46.236 A:middle
Well, the adoption story is

00:04:46.236 --> 00:04:46.876 A:middle
easy.

00:04:47.126 --> 00:04:49.576 A:middle
You link against iOS 13, you get

00:04:49.576 --> 00:04:50.106 A:middle
this for free.

00:04:51.586 --> 00:04:52.796 A:middle
But how to make that work

00:04:53.016 --> 00:04:54.916 A:middle
beautifully in your application

00:04:54.916 --> 00:04:56.576 A:middle
might require a little work, and

00:04:56.576 --> 00:04:57.916 A:middle
that's where we have new

00:04:57.916 --> 00:04:59.506 A:middle
appearance customization APIs to

00:04:59.976 --> 00:05:00.816 A:middle
help you do this.

00:04:59.976 --> 00:05:00.816 A:middle
help you do this.

00:05:02.086 --> 00:05:03.416 A:middle
So, let's take a look at what it

00:05:03.416 --> 00:05:04.546 A:middle
might look like to customize a

00:05:04.546 --> 00:05:06.146 A:middle
navigation bar in the new

00:05:06.146 --> 00:05:08.566 A:middle
appearance API.

00:05:08.806 --> 00:05:11.076 A:middle
So, first thing we're going to

00:05:11.176 --> 00:05:13.846 A:middle
do is create the object that

00:05:13.846 --> 00:05:14.676 A:middle
actually represents the

00:05:14.676 --> 00:05:15.156 A:middle
appearance,

00:05:15.786 --> 00:05:17.276 A:middle
UINavigationBarAppearance .

00:05:17.536 --> 00:05:19.266 A:middle
This is a subclass of

00:05:19.266 --> 00:05:21.436 A:middle
UIBarAppearance, and it

00:05:21.436 --> 00:05:22.376 A:middle
encapsulates all the

00:05:22.376 --> 00:05:23.556 A:middle
customization options for

00:05:23.556 --> 00:05:24.326 A:middle
UINavigationBar.

00:05:25.156 --> 00:05:26.166 A:middle
In this case, we're going to

00:05:26.166 --> 00:05:27.376 A:middle
actually make the navigation bar

00:05:27.376 --> 00:05:29.576 A:middle
use an opaque color, and so

00:05:29.576 --> 00:05:30.716 A:middle
we're going to use the default

00:05:30.716 --> 00:05:32.006 A:middle
values provided by

00:05:32.006 --> 00:05:33.636 A:middle
configureWithOpaqueBackground.

00:05:33.706 --> 00:05:35.716 A:middle
That will make your navigation

00:05:35.716 --> 00:05:37.576 A:middle
bar's background conform to

00:05:37.626 --> 00:05:38.596 A:middle
light and dark mode with an

00:05:38.596 --> 00:05:40.036 A:middle
appropriate opaque color.

00:05:41.556 --> 00:05:43.836 A:middle
Now, in this particular case, we

00:05:43.836 --> 00:05:45.166 A:middle
also wanted to change the label

00:05:45.166 --> 00:05:45.516 A:middle
color.

00:05:45.966 --> 00:05:47.806 A:middle
And so, we can set

00:05:47.806 --> 00:05:48.976 A:middle
titleTextAttributes and

00:05:48.976 --> 00:05:50.916 A:middle
largeTitleTextAttributes, and

00:05:50.916 --> 00:05:52.686 A:middle
we'll just give them a custom

00:05:52.686 --> 00:05:54.606 A:middle
color that we'll use, another

00:05:54.606 --> 00:05:55.936 A:middle
dynamic color, just so that we

00:05:55.936 --> 00:05:57.126 A:middle
work great in light and dark

00:05:57.186 --> 00:05:57.506 A:middle
modes.

00:05:58.866 --> 00:06:00.676 A:middle
And finally, we will attach the

00:05:58.866 --> 00:06:00.676 A:middle
And finally, we will attach the

00:06:00.806 --> 00:06:02.156 A:middle
navigation bar's standard

00:06:02.156 --> 00:06:02.866 A:middle
appearance.

00:06:03.656 --> 00:06:04.726 A:middle
So, what is that

00:06:04.726 --> 00:06:05.786 A:middle
standardAppearance?

00:06:06.426 --> 00:06:08.166 A:middle
Well, let's take a look.

00:06:09.516 --> 00:06:11.636 A:middle
The navigation bar, when it's in

00:06:11.636 --> 00:06:12.906 A:middle
its size without a large title

00:06:13.176 --> 00:06:14.946 A:middle
is in the standard size, and

00:06:14.946 --> 00:06:16.036 A:middle
that's what standardAppearance

00:06:16.036 --> 00:06:16.616 A:middle
represents.

00:06:17.576 --> 00:06:18.766 A:middle
In addition, if you don't

00:06:18.766 --> 00:06:20.126 A:middle
specify any other appearance

00:06:20.126 --> 00:06:22.386 A:middle
configuration, we'll use that as

00:06:22.386 --> 00:06:24.296 A:middle
the basis to form defaults for

00:06:24.296 --> 00:06:25.846 A:middle
the other two, which I'll talk

00:06:25.846 --> 00:06:29.336 A:middle
about in a moment.

00:06:29.466 --> 00:06:31.226 A:middle
So, if you use a smaller iPhone

00:06:31.226 --> 00:06:32.596 A:middle
in Landscape, you get the

00:06:32.596 --> 00:06:34.716 A:middle
compactAppearance, and that's

00:06:34.716 --> 00:06:36.786 A:middle
what that represents, quantities

00:06:36.786 --> 00:06:37.136 A:middle
for that.

00:06:37.136 --> 00:06:40.736 A:middle
And we saw earlier that in iOS

00:06:40.796 --> 00:06:43.396 A:middle
13 the navigation bar dropped

00:06:43.426 --> 00:06:44.956 A:middle
its background to transparent

00:06:44.956 --> 00:06:46.556 A:middle
when you pull down at the top of

00:06:46.556 --> 00:06:47.066 A:middle
a scroll view.

00:06:47.966 --> 00:06:49.036 A:middle
And so that is the

00:06:49.036 --> 00:06:50.436 A:middle
scrollEdgeAppearance.

00:06:51.076 --> 00:06:52.646 A:middle
Whenever a navigation bar is

00:06:52.646 --> 00:06:53.716 A:middle
associated with a scroll view,

00:06:53.826 --> 00:06:54.896 A:middle
which is pretty common in your

00:06:54.896 --> 00:06:56.576 A:middle
apps, if you're at the top of

00:06:56.576 --> 00:06:58.326 A:middle
that scroll view, then we'll use

00:06:58.326 --> 00:06:59.636 A:middle
the scrollEdgeAppearance instead

00:06:59.636 --> 00:07:00.606 A:middle
of the standard appearance.

00:06:59.636 --> 00:07:00.606 A:middle
of the standard appearance.

00:07:01.016 --> 00:07:02.336 A:middle
The default is to use a

00:07:02.336 --> 00:07:03.616 A:middle
transparent background, and

00:07:03.616 --> 00:07:05.636 A:middle
that's why you get the seamless

00:07:05.636 --> 00:07:07.316 A:middle
appearance that we've got new in

00:07:07.396 --> 00:07:08.636 A:middle
iOS 13.

00:07:09.476 --> 00:07:11.886 A:middle
In addition, you can also

00:07:11.886 --> 00:07:12.996 A:middle
customize the appearance of your

00:07:12.996 --> 00:07:14.446 A:middle
bar button items, and so the

00:07:14.446 --> 00:07:16.286 A:middle
buttonAppearance for plain items

00:07:16.286 --> 00:07:18.406 A:middle
and the doneButtonAppearance for

00:07:18.406 --> 00:07:19.026 A:middle
done items.

00:07:21.016 --> 00:07:22.276 A:middle
Now, we could have stopped

00:07:22.276 --> 00:07:22.436 A:middle
there.

00:07:22.686 --> 00:07:23.796 A:middle
You got your navigation bar.

00:07:23.856 --> 00:07:24.576 A:middle
It's customized.

00:07:24.576 --> 00:07:24.986 A:middle
It's great.

00:07:24.986 --> 00:07:27.656 A:middle
But we decided to also bring

00:07:27.656 --> 00:07:29.236 A:middle
this to Toolbar and TabBar so

00:07:29.386 --> 00:07:30.846 A:middle
that you can customize all your

00:07:30.846 --> 00:07:33.286 A:middle
bars in a very similar way with

00:07:33.286 --> 00:07:34.726 A:middle
each of those classes using

00:07:34.726 --> 00:07:35.736 A:middle
their own subclass of

00:07:35.736 --> 00:07:38.146 A:middle
UIBarAppearance to do their own

00:07:38.146 --> 00:07:39.006 A:middle
customized work.

00:07:39.776 --> 00:07:40.946 A:middle
Now, ToolbarAppearance is

00:07:40.946 --> 00:07:41.806 A:middle
actually just a subset of

00:07:41.806 --> 00:07:42.696 A:middle
properties relative to

00:07:42.696 --> 00:07:44.656 A:middle
navigationBarAppearance, so it's

00:07:44.656 --> 00:07:46.046 A:middle
not too interesting to continue

00:07:46.046 --> 00:07:47.346 A:middle
further with, but

00:07:47.346 --> 00:07:48.706 A:middle
TabBarAppearance is a little bit

00:07:48.706 --> 00:07:49.616 A:middle
different, and that's because

00:07:49.936 --> 00:07:51.066 A:middle
TabBar is also a little

00:07:52.086 --> 00:07:52.296 A:middle
different.

00:07:52.866 --> 00:07:55.036 A:middle
So, with a TabBar, you have

00:07:55.036 --> 00:07:56.846 A:middle
additional customization options

00:07:57.326 --> 00:07:58.616 A:middle
for these three layout

00:07:58.616 --> 00:07:59.136 A:middle
appearance, the

00:07:59.136 --> 00:08:00.956 A:middle
stackedLayoutAppearance, the

00:07:59.136 --> 00:08:00.956 A:middle
stackedLayoutAppearance, the

00:08:00.996 --> 00:08:02.136 A:middle
inlineAppearance, which you'll

00:08:02.136 --> 00:08:04.076 A:middle
see on iPads, and the

00:08:04.076 --> 00:08:05.366 A:middle
compactInlineAppearance, which

00:08:05.366 --> 00:08:06.446 A:middle
you'll see on smaller phones.

00:08:07.206 --> 00:08:09.566 A:middle
And so, you can put all that

00:08:09.566 --> 00:08:12.256 A:middle
together and get new appearance

00:08:12.256 --> 00:08:13.506 A:middle
customization for all of your

00:08:13.506 --> 00:08:13.836 A:middle
bars.

00:08:15.116 --> 00:08:15.746 A:middle
But there's one more thing.

00:08:16.996 --> 00:08:19.466 A:middle
If you look at the new reminders

00:08:19.466 --> 00:08:21.286 A:middle
app, when you navigate into a

00:08:21.286 --> 00:08:24.306 A:middle
list, this title color changes

00:08:24.366 --> 00:08:25.346 A:middle
to match the list.

00:08:26.736 --> 00:08:29.206 A:middle
The way they do this is they use

00:08:29.466 --> 00:08:30.936 A:middle
per navigation item appearance

00:08:30.936 --> 00:08:32.996 A:middle
customization, which allows you

00:08:32.996 --> 00:08:34.466 A:middle
to specify an appearance based

00:08:34.466 --> 00:08:35.966 A:middle
on the navigation item that you

00:08:35.966 --> 00:08:37.426 A:middle
pushed onto the navigationBar.

00:08:37.426 --> 00:08:39.356 A:middle
Navigation items are also

00:08:39.356 --> 00:08:40.506 A:middle
associated with navigation, or

00:08:40.546 --> 00:08:42.025 A:middle
with view controllers, and so

00:08:42.025 --> 00:08:42.936 A:middle
pushing onto a navigation

00:08:42.936 --> 00:08:44.336 A:middle
controller will naturally use

00:08:44.336 --> 00:08:44.566 A:middle
that.

00:08:45.646 --> 00:08:47.266 A:middle
So what does that look like?

00:08:48.076 --> 00:08:50.746 A:middle
Well, the navigation item has

00:08:50.746 --> 00:08:52.756 A:middle
the same properties that the

00:08:52.756 --> 00:08:53.816 A:middle
navigationBar has.

00:08:54.356 --> 00:08:55.956 A:middle
So a common thing to do is to

00:08:55.956 --> 00:08:57.566 A:middle
just take the standard

00:08:57.566 --> 00:08:58.956 A:middle
appearance from a navigationBar,

00:08:59.806 --> 00:09:01.456 A:middle
make a copy of it so that we are

00:08:59.806 --> 00:09:01.456 A:middle
make a copy of it so that we are

00:09:01.576 --> 00:09:02.956 A:middle
disassociated from that

00:09:02.956 --> 00:09:05.446 A:middle
appearance, and make whatever

00:09:05.446 --> 00:09:06.516 A:middle
changes you want.

00:09:06.616 --> 00:09:07.206 A:middle
If you want this to be

00:09:07.206 --> 00:09:08.806 A:middle
transparent, there's a configure

00:09:08.806 --> 00:09:10.226 A:middle
transparency that you can use.

00:09:10.226 --> 00:09:11.916 A:middle
You can change bar button item

00:09:11.916 --> 00:09:15.026 A:middle
appearances, etc., etc. And then

00:09:15.026 --> 00:09:16.256 A:middle
you assign it to the navigation

00:09:16.256 --> 00:09:16.486 A:middle
item.

00:09:16.566 --> 00:09:18.276 A:middle
And once you've done that,

00:09:18.396 --> 00:09:20.186 A:middle
whenever the view controller and

00:09:20.186 --> 00:09:21.646 A:middle
navigation item is current, we

00:09:21.846 --> 00:09:23.346 A:middle
will use that appearance instead

00:09:23.346 --> 00:09:24.476 A:middle
of the navigationBar's base

00:09:24.476 --> 00:09:25.936 A:middle
appearance to make sure that you

00:09:25.936 --> 00:09:27.526 A:middle
can customize your navigationBar

00:09:27.796 --> 00:09:29.596 A:middle
for whatever view controller

00:09:29.596 --> 00:09:30.066 A:middle
gets pushed.

00:09:30.566 --> 00:09:34.656 A:middle
And so with that, I'm going to

00:09:34.656 --> 00:09:36.216 A:middle
bring on Russell to talk about

00:09:36.216 --> 00:09:36.886 A:middle
presentations.

00:09:37.516 --> 00:09:44.466 A:middle
[ Applause ]

00:09:44.966 --> 00:09:46.006 A:middle
&gt;&gt; Thanks David.

00:09:46.976 --> 00:09:47.766 A:middle
Hi everyone.

00:09:48.106 --> 00:09:50.706 A:middle
I'm Russell, and new in iOS 13

00:09:51.036 --> 00:09:52.446 A:middle
we have a standard design for

00:09:52.446 --> 00:09:54.066 A:middle
presentations that I am so

00:09:54.066 --> 00:09:55.186 A:middle
excited to tell you all about.

00:09:56.796 --> 00:09:58.456 A:middle
For example, if I'm here in the

00:09:58.456 --> 00:10:00.866 A:middle
contacts app and I tap plus to

00:09:58.456 --> 00:10:00.866 A:middle
contacts app and I tap plus to

00:10:00.866 --> 00:10:02.976 A:middle
add a new contact, we have a new

00:10:02.976 --> 00:10:04.506 A:middle
presentation style that looks

00:10:04.506 --> 00:10:06.206 A:middle
like this, rather than the full

00:10:06.206 --> 00:10:07.326 A:middle
screen presentation that we had

00:10:07.326 --> 00:10:07.716 A:middle
before.

00:10:08.666 --> 00:10:09.726 A:middle
You can see that the root view

00:10:09.726 --> 00:10:11.786 A:middle
controller's view is not as

00:10:11.866 --> 00:10:13.956 A:middle
scaled down and not removed from

00:10:13.956 --> 00:10:14.576 A:middle
the view hierarchy.

00:10:15.936 --> 00:10:17.296 A:middle
The layering of this design

00:10:17.636 --> 00:10:18.886 A:middle
gives your users a sense of

00:10:18.926 --> 00:10:20.446 A:middle
context about where they are in

00:10:20.446 --> 00:10:22.186 A:middle
your applications, and the

00:10:22.186 --> 00:10:23.856 A:middle
rounded top appearance serves as

00:10:23.856 --> 00:10:25.556 A:middle
a signifier that these

00:10:25.556 --> 00:10:26.806 A:middle
presentations can be

00:10:26.986 --> 00:10:29.436 A:middle
interactively dismissed anywhere

00:10:29.776 --> 00:10:31.886 A:middle
in the system [applause].

00:10:32.116 --> 00:10:32.366 A:middle
Thanks.

00:10:33.516 --> 00:10:37.116 A:middle
[ Applause ]

00:10:37.616 --> 00:10:38.936 A:middle
So what is this new presentation

00:10:38.936 --> 00:10:39.256 A:middle
style?

00:10:40.096 --> 00:10:41.806 A:middle
These presentations are called

00:10:42.586 --> 00:10:45.136 A:middle
Sheets, and Sheets aren't new at

00:10:45.136 --> 00:10:45.576 A:middle
all.

00:10:45.906 --> 00:10:47.226 A:middle
These presentations are just a

00:10:47.226 --> 00:10:49.506 A:middle
new design for the existing

00:10:49.786 --> 00:10:51.436 A:middle
UIModalPresentationStyle

00:10:51.656 --> 00:10:53.286 A:middle
pageSheet and its sibling,

00:10:53.756 --> 00:10:54.166 A:middle
formSheet.

00:10:55.636 --> 00:10:57.426 A:middle
Previously, these styles would

00:10:57.426 --> 00:10:58.416 A:middle
adapt to a full screen

00:10:58.416 --> 00:10:59.926 A:middle
presentation in a compact width

00:10:59.926 --> 00:11:00.466 A:middle
environment.

00:10:59.926 --> 00:11:00.466 A:middle
environment.

00:11:00.666 --> 00:11:03.076 A:middle
And now, they just stay Sheets

00:11:03.276 --> 00:11:04.626 A:middle
with their own special layout

00:11:04.626 --> 00:11:06.426 A:middle
and compact width different from

00:11:06.426 --> 00:11:09.466 A:middle
their regular width layout.

00:11:09.546 --> 00:11:10.546 A:middle
So, let's look at a few examples

00:11:10.546 --> 00:11:11.316 A:middle
of this in action.

00:11:12.436 --> 00:11:13.846 A:middle
In phones and portrait, you get

00:11:13.846 --> 00:11:14.566 A:middle
the appearance that you just

00:11:14.566 --> 00:11:14.886 A:middle
saw.

00:11:15.476 --> 00:11:16.946 A:middle
In phone in landscape, you get a

00:11:16.946 --> 00:11:18.216 A:middle
full screen layout like before.

00:11:18.806 --> 00:11:21.446 A:middle
But iPads aren't left out.

00:11:21.786 --> 00:11:22.936 A:middle
We've rethought Sheets here as

00:11:22.936 --> 00:11:23.196 A:middle
well.

00:11:23.896 --> 00:11:25.526 A:middle
Page Sheets float in a stack in

00:11:25.526 --> 00:11:28.106 A:middle
the middle of the screen, and if

00:11:28.106 --> 00:11:29.386 A:middle
multiple are presented on top of

00:11:29.386 --> 00:11:30.946 A:middle
each other, they'll form a stack

00:11:30.946 --> 00:11:32.146 A:middle
on top the review controller.

00:11:33.536 --> 00:11:36.776 A:middle
And specifically, this new size

00:11:37.026 --> 00:11:38.566 A:middle
follows the readable width, so

00:11:38.566 --> 00:11:39.706 A:middle
it's perfect for textual

00:11:39.706 --> 00:11:40.156 A:middle
content.

00:11:40.836 --> 00:11:42.276 A:middle
And because the readable width

00:11:42.276 --> 00:11:43.366 A:middle
changes with the user's

00:11:43.406 --> 00:11:44.836 A:middle
currently selected dynamic type

00:11:44.836 --> 00:11:46.646 A:middle
size, these page sheets can

00:11:46.646 --> 00:11:48.576 A:middle
change size as well, like this

00:11:49.226 --> 00:11:49.916 A:middle
or even like this.

00:11:50.836 --> 00:11:51.986 A:middle
Or they can take on a stacked

00:11:51.986 --> 00:11:54.016 A:middle
appearance if their preferred

00:11:54.016 --> 00:11:55.126 A:middle
width is wider than the

00:11:55.126 --> 00:11:56.456 A:middle
available width.

00:11:56.886 --> 00:12:00.676 A:middle
So, what do you all need to do

00:11:56.886 --> 00:12:00.676 A:middle
So, what do you all need to do

00:12:00.676 --> 00:12:02.026 A:middle
to get this new appearance in

00:12:02.026 --> 00:12:02.806 A:middle
your app?

00:12:03.086 --> 00:12:04.196 A:middle
Well very little because you've

00:12:04.196 --> 00:12:05.546 A:middle
done a lot of work to make this

00:12:05.586 --> 00:12:08.286 A:middle
transition as easy as possible.

00:12:09.056 --> 00:12:12.106 A:middle
The default UIViewController

00:12:12.106 --> 00:12:13.576 A:middle
ModalPresentationStyle has

00:12:13.576 --> 00:12:15.936 A:middle
changed to a new style called

00:12:15.936 --> 00:12:16.446 A:middle
Automatic.

00:12:17.736 --> 00:12:19.376 A:middle
Automatic is a dynamic

00:12:19.476 --> 00:12:20.956 A:middle
presentation style, which is

00:12:20.956 --> 00:12:22.296 A:middle
resolved at the time of

00:12:22.366 --> 00:12:23.026 A:middle
presentation.

00:12:23.876 --> 00:12:25.006 A:middle
To illustrate its behavior,

00:12:25.416 --> 00:12:26.806 A:middle
let's walk through a few

00:12:26.806 --> 00:12:29.486 A:middle
examples together.

00:12:29.626 --> 00:12:32.026 A:middle
So, here I have a custom view

00:12:32.026 --> 00:12:33.306 A:middle
controller, and it's going to

00:12:33.306 --> 00:12:35.276 A:middle
present UIImagePickerController

00:12:35.486 --> 00:12:36.336 A:middle
showing the user's photo

00:12:36.336 --> 00:12:36.826 A:middle
library.

00:12:36.936 --> 00:12:38.516 A:middle
And note that there's no modal

00:12:38.826 --> 00:12:40.886 A:middle
presentation style set.

00:12:41.196 --> 00:12:42.676 A:middle
This same code that worked on

00:12:42.676 --> 00:12:44.416 A:middle
iOS 12 and presented the image

00:12:44.416 --> 00:12:45.956 A:middle
picker full screen will now

00:12:45.956 --> 00:12:48.106 A:middle
present as a sheet with no code

00:12:48.106 --> 00:12:49.106 A:middle
change required on your part.

00:12:49.796 --> 00:12:53.126 A:middle
On the other hand, if I

00:12:53.126 --> 00:12:53.706 A:middle
configure the

00:12:53.706 --> 00:12:54.856 A:middle
UIImagePickerController to

00:12:54.856 --> 00:12:56.706 A:middle
present in camera mode, this

00:12:56.706 --> 00:12:58.046 A:middle
code will present the camera

00:12:58.336 --> 00:13:00.446 A:middle
full screen in iOS 13, just like

00:12:58.336 --> 00:13:00.446 A:middle
full screen in iOS 13, just like

00:13:00.446 --> 00:13:01.486 A:middle
it did in iOS 12.

00:13:02.506 --> 00:13:03.956 A:middle
This is automatic at work,

00:13:04.176 --> 00:13:05.496 A:middle
resolving to different styles

00:13:05.816 --> 00:13:07.146 A:middle
depending on how a system

00:13:07.146 --> 00:13:08.576 A:middle
provided view controller is

00:13:08.576 --> 00:13:09.866 A:middle
configured so that you don't

00:13:09.866 --> 00:13:10.976 A:middle
have to make any code change.

00:13:11.546 --> 00:13:15.096 A:middle
Now, what about presenting our

00:13:15.096 --> 00:13:16.126 A:middle
own view controllers?

00:13:16.876 --> 00:13:18.456 A:middle
If I simply instantiate and

00:13:18.456 --> 00:13:20.196 A:middle
present a custom subclass of

00:13:20.196 --> 00:13:21.916 A:middle
UIViewController it will present

00:13:21.996 --> 00:13:22.426 A:middle
as a Sheet.

00:13:23.016 --> 00:13:24.796 A:middle
In other words, by default,

00:13:25.256 --> 00:13:27.236 A:middle
automatic resolves to pageSheet.

00:13:27.786 --> 00:13:29.846 A:middle
And this is great because it's

00:13:29.846 --> 00:13:31.226 A:middle
the right style for most

00:13:31.226 --> 00:13:31.886 A:middle
presentations.

00:13:32.916 --> 00:13:34.576 A:middle
Again, no code change required.

00:13:36.366 --> 00:13:38.506 A:middle
But, what about this last case?

00:13:39.196 --> 00:13:40.156 A:middle
If you have a custom view

00:13:40.156 --> 00:13:41.596 A:middle
controller that should be

00:13:41.596 --> 00:13:43.066 A:middle
presented full screen, such as

00:13:43.066 --> 00:13:44.706 A:middle
your own custom camera or other

00:13:44.706 --> 00:13:46.566 A:middle
immersive experience, you may

00:13:46.566 --> 00:13:47.646 A:middle
find that when you build this

00:13:47.646 --> 00:13:49.416 A:middle
code, your immersive experience

00:13:49.416 --> 00:13:50.326 A:middle
has been turned into a Sheet.

00:13:51.096 --> 00:13:52.756 A:middle
But don't worry, all you have to

00:13:52.756 --> 00:13:55.316 A:middle
do to fix it is explicitly set

00:13:55.316 --> 00:13:56.676 A:middle
the modalPresentationStyle of

00:13:56.676 --> 00:13:58.046 A:middle
this view controller to full

00:13:58.046 --> 00:13:58.356 A:middle
screen.

00:13:59.706 --> 00:14:01.476 A:middle
In general, it's good to leave

00:13:59.706 --> 00:14:01.476 A:middle
In general, it's good to leave

00:14:01.476 --> 00:14:02.836 A:middle
properties at their default

00:14:02.836 --> 00:14:04.686 A:middle
values and only specify an

00:14:04.686 --> 00:14:06.056 A:middle
explicit value when you're

00:14:06.056 --> 00:14:07.656 A:middle
intentionally deviating from the

00:14:07.656 --> 00:14:08.376 A:middle
default behavior.

00:14:08.916 --> 00:14:14.066 A:middle
And what about Popovers?

00:14:14.566 --> 00:14:16.246 A:middle
Well, Popovers always adapt to

00:14:16.246 --> 00:14:16.756 A:middle
sheets now.

00:14:17.336 --> 00:14:18.606 A:middle
So, if you want a Popover in

00:14:18.606 --> 00:14:21.036 A:middle
regular width and a Sheet in

00:14:21.036 --> 00:14:23.606 A:middle
compact width, all you have to

00:14:23.606 --> 00:14:24.556 A:middle
do is set your modal

00:14:24.556 --> 00:14:25.646 A:middle
presentation style to be a

00:14:25.646 --> 00:14:27.086 A:middle
Popover, and you're done.

00:14:27.416 --> 00:14:29.366 A:middle
You'll get exactly that

00:14:31.436 --> 00:14:31.656 A:middle
behavior.

00:14:32.136 --> 00:14:35.306 A:middle
Now, what do you all have to do

00:14:35.416 --> 00:14:40.346 A:middle
to support Pull to Dismiss?

00:14:40.476 --> 00:14:41.756 A:middle
In general, nothing.

00:14:42.446 --> 00:14:43.526 A:middle
If you present something as a

00:14:43.526 --> 00:14:45.286 A:middle
Sheet, the ability to pull it

00:14:45.286 --> 00:14:46.566 A:middle
down comes for free.

00:14:47.266 --> 00:14:48.176 A:middle
We will place a gesture

00:14:48.176 --> 00:14:49.476 A:middle
recognizer on your entire

00:14:49.476 --> 00:14:51.156 A:middle
presented view, so pulling down

00:14:51.156 --> 00:14:52.876 A:middle
in any noninteractive area will

00:14:52.876 --> 00:14:54.076 A:middle
trigger a pulldown on a Sheet.

00:14:55.156 --> 00:14:57.086 A:middle
And, if the user pulls down past

00:14:57.266 --> 00:14:58.716 A:middle
the top in any contained

00:14:58.716 --> 00:15:00.636 A:middle
scrollView, that will also pull

00:14:58.716 --> 00:15:00.636 A:middle
scrollView, that will also pull

00:15:00.636 --> 00:15:01.516 A:middle
the sheet down as well

00:15:01.896 --> 00:15:03.446 A:middle
completely for free.

00:15:04.996 --> 00:15:07.996 A:middle
However, there are times when

00:15:07.996 --> 00:15:09.186 A:middle
pulling down a sheet maybe

00:15:09.186 --> 00:15:10.016 A:middle
undesirable.

00:15:10.666 --> 00:15:13.026 A:middle
For example, if we present this

00:15:13.026 --> 00:15:15.006 A:middle
same Sheet and enter some data,

00:15:15.636 --> 00:15:16.676 A:middle
the Sheet should not be allowed

00:15:16.676 --> 00:15:18.056 A:middle
to be pulled down, because it's

00:15:18.106 --> 00:15:19.916 A:middle
unclear if the user intends to

00:15:20.116 --> 00:15:22.336 A:middle
discard or save their changes,

00:15:23.106 --> 00:15:24.526 A:middle
and if the user does attempt to

00:15:24.526 --> 00:15:26.316 A:middle
pull down, the Sheet should

00:15:26.496 --> 00:15:28.096 A:middle
rubber band, and an action sheet

00:15:28.096 --> 00:15:29.446 A:middle
should be presented, showing

00:15:29.446 --> 00:15:31.026 A:middle
what actions the user can take

00:15:31.346 --> 00:15:32.486 A:middle
to escape this context.

00:15:36.226 --> 00:15:37.366 A:middle
So, to create this experience,

00:15:37.676 --> 00:15:39.146 A:middle
we have two new APIs.

00:15:40.056 --> 00:15:41.786 A:middle
The first is modal and

00:15:41.786 --> 00:15:43.946 A:middle
presentation, is a property on

00:15:43.946 --> 00:15:45.666 A:middle
UIViewController, and when you

00:15:45.666 --> 00:15:46.876 A:middle
set this to true on your

00:15:46.876 --> 00:15:48.256 A:middle
presented View Controller, it

00:15:48.696 --> 00:15:51.076 A:middle
will put the Sheet in a modal

00:15:51.076 --> 00:15:52.646 A:middle
state where it cannot be

00:15:53.326 --> 00:15:53.566 A:middle
dismissed,

00:15:54.356 --> 00:15:55.116 A:middle
and you'll get the

00:15:55.116 --> 00:15:56.246 A:middle
rubber-banding effect, just like

00:15:56.246 --> 00:15:56.576 A:middle
you saw.

00:15:57.406 --> 00:15:58.736 A:middle
This property supersedes the

00:15:58.736 --> 00:16:00.406 A:middle
existing isModal and Popover

00:15:58.736 --> 00:16:00.406 A:middle
existing isModal and Popover

00:16:00.406 --> 00:16:02.416 A:middle
property to prevent both Sheets

00:16:02.476 --> 00:16:03.836 A:middle
and Popovers from being

00:16:04.466 --> 00:16:04.686 A:middle
dismissed.

00:16:06.016 --> 00:16:08.286 A:middle
The second is a new

00:16:08.286 --> 00:16:10.186 A:middle
UIAdaptivePresentationController

00:16:10.186 --> 00:16:11.996 A:middle
DelegateMethod called

00:16:11.996 --> 00:16:13.816 A:middle
presentationControllerDidAttempt

00:16:13.846 --> 00:16:14.276 A:middle
ToDismiss.

00:16:15.366 --> 00:16:16.956 A:middle
So if you set the delegate on

00:16:16.956 --> 00:16:17.996 A:middle
the presentation controller

00:16:17.996 --> 00:16:20.076 A:middle
involved, UIKit will call this

00:16:20.076 --> 00:16:22.036 A:middle
method when the user pulls down

00:16:22.036 --> 00:16:23.646 A:middle
while in a modal state, at which

00:16:23.646 --> 00:16:25.226 A:middle
point you can present the action

00:16:25.226 --> 00:16:25.426 A:middle
sheet.

00:16:28.556 --> 00:16:29.866 A:middle
Here, you can see the

00:16:29.866 --> 00:16:31.576 A:middle
relationship between these APIs.

00:16:32.356 --> 00:16:34.066 A:middle
DidAttemptToDismiss is only

00:16:34.066 --> 00:16:36.126 A:middle
called if isModalInPpresentation

00:16:36.126 --> 00:16:38.856 A:middle
is true and the user pulls and

00:16:38.856 --> 00:16:40.286 A:middle
releases with the intent to

00:16:40.286 --> 00:16:41.926 A:middle
dismiss, so with some force or

00:16:41.926 --> 00:16:42.496 A:middle
velocity.

00:16:43.546 --> 00:16:45.306 A:middle
We call this the Modal Flow, and

00:16:45.306 --> 00:16:46.606 A:middle
we have a sample project that

00:16:46.606 --> 00:16:48.136 A:middle
shows exactly how to implement

00:16:48.136 --> 00:16:49.296 A:middle
an example like this.

00:16:50.086 --> 00:16:51.166 A:middle
See the link in the description

00:16:51.336 --> 00:16:53.266 A:middle
for how to download that.

00:16:53.816 --> 00:16:55.356 A:middle
But, we have more.

00:16:56.086 --> 00:16:58.096 A:middle
We also have a few more delegate

00:16:58.096 --> 00:16:58.566 A:middle
callbacks.

00:16:59.096 --> 00:17:00.016 A:middle
PresentationController

00:16:59.096 --> 00:17:00.016 A:middle
PresentationController

00:17:00.016 --> 00:17:01.626 A:middle
ShouldDismiss, which is useful

00:17:01.626 --> 00:17:02.666 A:middle
for preventing dismiss from the

00:17:02.666 --> 00:17:04.925 A:middle
delegate, WillDismiss, which is

00:17:04.925 --> 00:17:06.756 A:middle
a great place to grab one of the

00:17:06.756 --> 00:17:07.925 A:middle
view controller's transition

00:17:07.925 --> 00:17:09.435 A:middle
coordinators, which you can use

00:17:09.435 --> 00:17:11.496 A:middle
to set up alongside animations,

00:17:11.556 --> 00:17:12.415 A:middle
interaction change

00:17:12.415 --> 00:17:13.646 A:middle
notifications, and animation

00:17:13.646 --> 00:17:15.536 A:middle
completion blocks and

00:17:15.536 --> 00:17:17.236 A:middle
DidDismiss, which is great for

00:17:17.236 --> 00:17:18.246 A:middle
cleaning up state because it's

00:17:18.246 --> 00:17:20.486 A:middle
only called once if the user

00:17:20.636 --> 00:17:21.915 A:middle
actually pulls the Sheet down

00:17:21.915 --> 00:17:23.016 A:middle
and completes the transition.

00:17:25.136 --> 00:17:26.715 A:middle
These three callbacks supersede

00:17:26.715 --> 00:17:28.106 A:middle
similarly named UI Popover

00:17:28.106 --> 00:17:29.366 A:middle
presentationControllerDelegate

00:17:29.366 --> 00:17:31.976 A:middle
Callbacks because these APIs are

00:17:31.976 --> 00:17:33.186 A:middle
called for both Sheets and

00:17:33.186 --> 00:17:33.766 A:middle
Popovers.

00:17:34.346 --> 00:17:37.586 A:middle
Now, keep in mind that if a user

00:17:37.636 --> 00:17:39.496 A:middle
were to repeatedly tug on a

00:17:39.496 --> 00:17:41.396 A:middle
Sheet without pulling it down,

00:17:41.716 --> 00:17:43.546 A:middle
the delegate will receive,

00:17:44.646 --> 00:17:46.626 A:middle
Should and WillDismiss multiple

00:17:46.626 --> 00:17:49.076 A:middle
times before calling DidDismiss,

00:17:49.286 --> 00:17:51.606 A:middle
if it receives DidDismiss at

00:17:54.616 --> 00:17:54.716 A:middle
all.

00:17:54.936 --> 00:17:56.406 A:middle
Now, let's shift to Share

00:17:56.406 --> 00:17:57.246 A:middle
Extensions for a moment.

00:17:58.526 --> 00:18:00.166 A:middle
When you build with the iOS 13

00:17:58.526 --> 00:18:00.166 A:middle
When you build with the iOS 13

00:18:00.296 --> 00:18:02.986 A:middle
SDK, your Share Extensions, just

00:18:02.986 --> 00:18:05.176 A:middle
like mail here, will become

00:18:05.176 --> 00:18:07.426 A:middle
Sheets, and Pull to Dismiss will

00:18:07.426 --> 00:18:08.096 A:middle
work here as well.

00:18:09.266 --> 00:18:10.176 A:middle
So, on the principle view

00:18:10.176 --> 00:18:12.406 A:middle
controller of your extension,

00:18:12.406 --> 00:18:13.316 A:middle
which is like the main view

00:18:13.316 --> 00:18:14.526 A:middle
controller you specify in the

00:18:14.526 --> 00:18:17.146 A:middle
Info P List, be sure to set

00:18:17.146 --> 00:18:19.296 A:middle
isModalInPresentation once the

00:18:19.296 --> 00:18:20.706 A:middle
user has started entering data,

00:18:21.566 --> 00:18:23.186 A:middle
and if you make your principle

00:18:23.186 --> 00:18:24.986 A:middle
view controller conform to

00:18:24.986 --> 00:18:26.396 A:middle
UIAdaptivePresentation

00:18:26.396 --> 00:18:28.296 A:middle
ControllerDelegate and implement

00:18:28.736 --> 00:18:30.726 A:middle
DidAttemptToDismiss, we will

00:18:30.726 --> 00:18:32.236 A:middle
call that method when the user

00:18:32.236 --> 00:18:34.076 A:middle
pulls down in this case, but

00:18:34.076 --> 00:18:35.746 A:middle
note that we will not call any

00:18:35.746 --> 00:18:36.866 A:middle
of the other delegate methods.

00:18:37.516 --> 00:18:39.656 A:middle
And this behavior will be

00:18:39.656 --> 00:18:40.726 A:middle
available in a future seed.

00:18:41.276 --> 00:18:45.426 A:middle
Moving right along, I have a few

00:18:45.426 --> 00:18:46.646 A:middle
things for you to consider.

00:18:47.636 --> 00:18:49.096 A:middle
The first has to do with

00:18:49.096 --> 00:18:50.266 A:middle
UIViewController Appearance

00:18:50.266 --> 00:18:50.696 A:middle
Callbacks.

00:18:51.766 --> 00:18:53.576 A:middle
Specifically, the difference

00:18:53.686 --> 00:18:55.156 A:middle
between the appearance callbacks

00:18:55.416 --> 00:18:56.306 A:middle
that the presenting view

00:18:56.306 --> 00:18:58.256 A:middle
controller receives during a

00:18:58.256 --> 00:18:59.936 A:middle
full screen presentation as

00:18:59.936 --> 00:19:00.986 A:middle
compared to a sheet

00:18:59.936 --> 00:19:00.986 A:middle
compared to a sheet

00:19:00.986 --> 00:19:01.596 A:middle
presentation.

00:19:02.996 --> 00:19:03.696 A:middle
During a full screen

00:19:03.696 --> 00:19:05.346 A:middle
presentation, the presenting

00:19:05.346 --> 00:19:06.756 A:middle
view controller's view is

00:19:06.756 --> 00:19:08.376 A:middle
removed from the view hierarchy,

00:19:09.236 --> 00:19:10.926 A:middle
and as a result, it receives

00:19:11.146 --> 00:19:13.476 A:middle
viewWillDisappear when the

00:19:13.536 --> 00:19:15.406 A:middle
presentation transition begins

00:19:15.466 --> 00:19:17.376 A:middle
and then viewDidDisappear when

00:19:17.376 --> 00:19:18.466 A:middle
the presentation transition

00:19:18.466 --> 00:19:18.876 A:middle
finishes.

00:19:19.676 --> 00:19:20.856 A:middle
And similarly, during the

00:19:20.856 --> 00:19:22.246 A:middle
dismissal transition when its

00:19:22.246 --> 00:19:23.486 A:middle
view moves back into the view

00:19:23.486 --> 00:19:25.046 A:middle
hierarchy, it receives viewWill

00:19:25.046 --> 00:19:25.616 A:middle
and DidAppear.

00:19:27.116 --> 00:19:29.296 A:middle
But, for Sheet Presentations,

00:19:30.146 --> 00:19:31.036 A:middle
the presenting view controller's

00:19:31.036 --> 00:19:32.396 A:middle
view is not removed from the

00:19:32.396 --> 00:19:34.496 A:middle
view hierarchy, and so it's

00:19:34.496 --> 00:19:36.126 A:middle
view, or the view controller

00:19:36.126 --> 00:19:37.436 A:middle
does not receive any of these

00:19:37.436 --> 00:19:38.426 A:middle
appearance callbacks.

00:19:39.346 --> 00:19:40.476 A:middle
So, if you have code in these

00:19:40.476 --> 00:19:41.786 A:middle
callbacks that you need to be

00:19:41.786 --> 00:19:43.196 A:middle
executed when a Sheet dismisses,

00:19:43.616 --> 00:19:44.276 A:middle
you should look at the

00:19:44.276 --> 00:19:45.796 A:middle
presentation controller Will and

00:19:45.796 --> 00:19:47.436 A:middle
DidDismiss methods that we just

00:19:47.436 --> 00:19:48.486 A:middle
talked about.

00:19:50.256 --> 00:19:52.556 A:middle
The second thing I want you all

00:19:52.556 --> 00:19:53.946 A:middle
to consider is that we have

00:19:53.996 --> 00:19:55.946 A:middle
inserted some private views in

00:19:55.946 --> 00:19:57.856 A:middle
the view hierarchy in between

00:19:57.856 --> 00:19:59.176 A:middle
UIWindow and its

00:19:59.176 --> 00:20:00.166 A:middle
rootViewController's view.

00:19:59.176 --> 00:20:00.166 A:middle
rootViewController's view.

00:20:01.576 --> 00:20:03.196 A:middle
This change should not affect

00:20:03.196 --> 00:20:03.366 A:middle
you.

00:20:03.896 --> 00:20:04.696 A:middle
We just don't want you to be

00:20:04.696 --> 00:20:05.946 A:middle
surprised when you see these

00:20:05.946 --> 00:20:06.826 A:middle
views it the View Debugger.

00:20:07.906 --> 00:20:08.866 A:middle
The relationship between

00:20:08.866 --> 00:20:10.286 A:middle
UIWindow and it Root View

00:20:10.286 --> 00:20:11.536 A:middle
Controller's View is an

00:20:11.536 --> 00:20:13.166 A:middle
implementation detail of UIKit,

00:20:13.166 --> 00:20:15.056 A:middle
and because it is UIWindow's

00:20:15.056 --> 00:20:17.526 A:middle
responsibility to manage and add

00:20:17.826 --> 00:20:18.926 A:middle
this view to the view hierarchy.

00:20:20.096 --> 00:20:21.686 A:middle
In general, the structure of a

00:20:21.686 --> 00:20:23.396 A:middle
view hierarchy not owned by your

00:20:23.626 --> 00:20:25.256 A:middle
app is liable to change without

00:20:25.256 --> 00:20:26.266 A:middle
notice in any release.

00:20:27.326 --> 00:20:28.856 A:middle
So, always ensure that you're

00:20:28.856 --> 00:20:30.556 A:middle
writing your code in a way that

00:20:30.556 --> 00:20:32.476 A:middle
doesn't make assumptions about

00:20:32.886 --> 00:20:36.626 A:middle
private view hierarchies.

00:20:36.686 --> 00:20:39.526 A:middle
So, use Sheet presentations in

00:20:39.526 --> 00:20:39.926 A:middle
your apps.

00:20:40.546 --> 00:20:41.886 A:middle
They're meant to be used for

00:20:41.886 --> 00:20:45.136 A:middle
most UI with few exceptions, and

00:20:45.136 --> 00:20:46.706 A:middle
implement the modal flow when

00:20:46.706 --> 00:20:48.226 A:middle
pulling down requires the user's

00:20:48.226 --> 00:20:48.596 A:middle
intent.

00:20:49.426 --> 00:20:50.856 A:middle
And remember, there's a sample

00:20:50.856 --> 00:20:52.386 A:middle
project that illustrates exactly

00:20:52.386 --> 00:20:54.196 A:middle
how to do that in more detail in

00:20:54.196 --> 00:20:55.126 A:middle
the session's description.

00:20:57.306 --> 00:20:58.596 A:middle
Thanks everyone, and now I'm

00:20:58.596 --> 00:20:59.706 A:middle
going to hand it off to Kyle to

00:20:59.706 --> 00:21:00.616 A:middle
tell you more about Search.

00:20:59.706 --> 00:21:00.616 A:middle
tell you more about Search.

00:21:01.516 --> 00:21:05.966 A:middle
[ Applause ]

00:21:06.466 --> 00:21:06.766 A:middle
&gt;&gt; Good job.

00:21:08.736 --> 00:21:09.976 A:middle
Thank you, Russell.

00:21:16.066 --> 00:21:16.526 A:middle
Hello everybody.

00:21:16.866 --> 00:21:17.556 A:middle
My name is Kyle.

00:21:17.826 --> 00:21:19.856 A:middle
I work on UIKit, and I'm going

00:21:19.856 --> 00:21:21.436 A:middle
to tell you some new things in

00:21:21.516 --> 00:21:23.206 A:middle
iOS 13 about Search.

00:21:23.906 --> 00:21:25.886 A:middle
Now this isn't new.

00:21:25.886 --> 00:21:28.356 A:middle
This is the existing interface

00:21:28.356 --> 00:21:29.566 A:middle
for searching in the mail

00:21:29.566 --> 00:21:31.916 A:middle
application, and it is provided

00:21:32.176 --> 00:21:32.876 A:middle
by UIKit.

00:21:33.406 --> 00:21:34.206 A:middle
Specifically, the

00:21:34.206 --> 00:21:36.666 A:middle
UISearchController subclass of

00:21:36.756 --> 00:21:37.676 A:middle
UIViewController.

00:21:38.726 --> 00:21:40.146 A:middle
It's familiar to all of our

00:21:40.146 --> 00:21:42.276 A:middle
users, and it's available in

00:21:42.276 --> 00:21:44.396 A:middle
your applications too, and it

00:21:44.526 --> 00:21:46.296 A:middle
consists of a number of parts.

00:21:47.606 --> 00:21:48.656 A:middle
The biggest piece is a

00:21:48.656 --> 00:21:50.606 A:middle
UISearchBar, which you can see

00:21:50.606 --> 00:21:51.676 A:middle
here at the top of the screen.

00:21:53.036 --> 00:21:54.606 A:middle
The search bar has a couple of

00:21:54.606 --> 00:21:56.526 A:middle
components including a Cancel

00:21:56.526 --> 00:21:58.286 A:middle
button and what we call the

00:21:58.286 --> 00:21:59.906 A:middle
Scope Bar, which is that row of

00:21:59.906 --> 00:22:01.206 A:middle
buttons underneath the search

00:21:59.906 --> 00:22:01.206 A:middle
buttons underneath the search

00:22:01.916 --> 00:22:02.046 A:middle
field.

00:22:02.956 --> 00:22:05.266 A:middle
Now, you may notice the updated

00:22:05.466 --> 00:22:07.846 A:middle
visual appearance of the Scope

00:22:07.846 --> 00:22:13.166 A:middle
Bar in iOS 13, but now we're

00:22:13.166 --> 00:22:15.876 A:middle
allowing our application to hide

00:22:15.876 --> 00:22:18.076 A:middle
elements of the Search Bar even

00:22:18.076 --> 00:22:19.156 A:middle
if it's managed by a

00:22:19.156 --> 00:22:20.136 A:middle
UISearchController.

00:22:20.876 --> 00:22:22.446 A:middle
So, if your application doesn't

00:22:22.446 --> 00:22:24.416 A:middle
need a Scope Bar or a Cancel

00:22:24.416 --> 00:22:25.816 A:middle
Button but wants to make them

00:22:25.816 --> 00:22:27.836 A:middle
available perhaps depending on

00:22:27.836 --> 00:22:28.576 A:middle
the UI state.

00:22:29.056 --> 00:22:30.506 A:middle
You can control that directly

00:22:31.096 --> 00:22:31.936 A:middle
with new properties on

00:22:31.936 --> 00:22:32.736 A:middle
UISearchController.

00:22:34.776 --> 00:22:37.856 A:middle
Also, we're exposing the

00:22:37.856 --> 00:22:39.816 A:middle
SearchTextField as a public

00:22:39.816 --> 00:22:42.116 A:middle
property on UISearchBar, which

00:22:42.116 --> 00:22:43.256 A:middle
means that it's really easy to

00:22:43.256 --> 00:22:43.916 A:middle
customize.

00:22:44.516 --> 00:22:52.666 A:middle
[ Applause ]

00:22:53.166 --> 00:22:55.316 A:middle
So to customize the appearance

00:22:55.316 --> 00:22:57.126 A:middle
of your SearchController, set

00:22:57.796 --> 00:22:59.856 A:middle
these properties to false on

00:22:59.856 --> 00:23:01.926 A:middle
UISearchController and use the

00:22:59.856 --> 00:23:01.926 A:middle
UISearchController and use the

00:23:01.926 --> 00:23:02.986 A:middle
existing properties on

00:23:02.986 --> 00:23:04.296 A:middle
UISearchBar to control the

00:23:04.296 --> 00:23:05.936 A:middle
visibility of the Cancel Button

00:23:06.246 --> 00:23:06.936 A:middle
and the Scope Bar.

00:23:08.686 --> 00:23:10.956 A:middle
Use the searchTextField Property

00:23:11.436 --> 00:23:13.146 A:middle
to get a reference to the

00:23:13.216 --> 00:23:15.526 A:middle
UISearchTextField instance and

00:23:15.526 --> 00:23:17.366 A:middle
change all the properties on the

00:23:17.366 --> 00:23:18.466 A:middle
Text Field that you'd like to

00:23:18.466 --> 00:23:18.926 A:middle
change.

00:23:19.206 --> 00:23:20.786 A:middle
It's a subclass of UITextField

00:23:20.976 --> 00:23:21.836 A:middle
and all of the styling

00:23:21.836 --> 00:23:26.226 A:middle
properties are available there.

00:23:27.666 --> 00:23:29.266 A:middle
UISearchController's behavior

00:23:29.266 --> 00:23:30.896 A:middle
extends to the appearance and

00:23:30.896 --> 00:23:32.846 A:middle
dismissal of Search as well, so

00:23:32.846 --> 00:23:35.086 A:middle
the standard behavior is that

00:23:35.086 --> 00:23:36.426 A:middle
when you activate the Search Bar

00:23:36.826 --> 00:23:38.126 A:middle
by tapping on its Search Field,

00:23:39.296 --> 00:23:40.496 A:middle
it gets hoisted to the top of

00:23:40.496 --> 00:23:42.596 A:middle
the screen, but the content that

00:23:42.596 --> 00:23:44.186 A:middle
was visible on the screen before

00:23:44.806 --> 00:23:45.606 A:middle
remains visible.

00:23:46.216 --> 00:23:49.526 A:middle
As you type, in this case the

00:23:49.526 --> 00:23:51.316 A:middle
photos application displays

00:23:51.316 --> 00:23:53.056 A:middle
results that match your partial

00:23:53.056 --> 00:23:55.956 A:middle
search term, and this is

00:23:56.066 --> 00:23:57.206 A:middle
implemented with a

00:23:57.206 --> 00:23:58.446 A:middle
UIViewController that your

00:23:58.446 --> 00:24:00.346 A:middle
application provides called the

00:23:58.446 --> 00:24:00.346 A:middle
application provides called the

00:24:00.346 --> 00:24:01.366 A:middle
Search Results Controller.

00:24:01.806 --> 00:24:05.336 A:middle
Not every application behaves

00:24:05.336 --> 00:24:05.726 A:middle
this way.

00:24:06.406 --> 00:24:07.336 A:middle
For example, the mail

00:24:07.336 --> 00:24:09.246 A:middle
application, as soon as you tap

00:24:09.246 --> 00:24:11.436 A:middle
on the Search Field provides a

00:24:11.436 --> 00:24:12.826 A:middle
list of suggested searches.

00:24:15.336 --> 00:24:16.346 A:middle
This is still a

00:24:16.346 --> 00:24:17.886 A:middle
UISearchController's Search

00:24:17.886 --> 00:24:19.726 A:middle
Results Controller, and we're

00:24:19.726 --> 00:24:20.756 A:middle
making this functionality

00:24:20.756 --> 00:24:22.916 A:middle
available to you in iOS 13 as

00:24:22.916 --> 00:24:23.216 A:middle
well.

00:24:24.516 --> 00:24:29.396 A:middle
[ Applause ]

00:24:29.896 --> 00:24:30.456 A:middle
Just set the

00:24:30.456 --> 00:24:32.016 A:middle
showsSearchResultsController

00:24:32.016 --> 00:24:34.216 A:middle
property on your Search

00:24:34.216 --> 00:24:36.326 A:middle
Controller to true, and you can

00:24:36.326 --> 00:24:37.746 A:middle
manage the automatic behavior

00:24:38.016 --> 00:24:39.296 A:middle
with automatically shows search

00:24:39.296 --> 00:24:40.316 A:middle
results controller property.

00:24:42.356 --> 00:24:43.996 A:middle
There's another big feature in

00:24:43.996 --> 00:24:44.496 A:middle
Search.

00:24:46.576 --> 00:24:48.536 A:middle
In Mail and Photos and other

00:24:48.536 --> 00:24:49.886 A:middle
applications on the system,

00:24:50.546 --> 00:24:53.146 A:middle
these suggested searches result

00:24:54.066 --> 00:24:56.066 A:middle
in what we call a token, which

00:24:56.066 --> 00:24:58.756 A:middle
is a visual representation of a

00:24:58.756 --> 00:25:00.176 A:middle
more complicated search query.

00:24:58.756 --> 00:25:00.176 A:middle
more complicated search query.

00:25:00.766 --> 00:25:04.136 A:middle
This functionality is available

00:25:04.136 --> 00:25:05.986 A:middle
in your application on any

00:25:05.986 --> 00:25:07.526 A:middle
instance of UISearchTextField

00:25:08.316 --> 00:25:10.296 A:middle
via the new UISearchTokenAPI.

00:25:10.296 --> 00:25:12.836 A:middle
And these tokens support Copy

00:25:12.836 --> 00:25:14.856 A:middle
and Paste and Drag and Drop.

00:25:15.376 --> 00:25:16.686 A:middle
It's the same implementation

00:25:16.776 --> 00:25:18.316 A:middle
that we use for all of our

00:25:18.316 --> 00:25:18.976 A:middle
applications.

00:25:19.516 --> 00:25:24.676 A:middle
[ Applause ]

00:25:25.176 --> 00:25:27.716 A:middle
For example, Photos uses it to

00:25:27.716 --> 00:25:29.956 A:middle
provide saved or predicted

00:25:29.956 --> 00:25:32.816 A:middle
searches for people, places, and

00:25:32.816 --> 00:25:33.366 A:middle
objects.

00:25:34.756 --> 00:25:36.686 A:middle
Tap on any of the entries in the

00:25:36.686 --> 00:25:39.106 A:middle
SearchResultsController, and

00:25:39.106 --> 00:25:41.086 A:middle
Photos transforms even a partial

00:25:41.086 --> 00:25:44.826 A:middle
input into a token.

00:25:45.576 --> 00:25:47.216 A:middle
As this is a subclass of

00:25:47.276 --> 00:25:49.156 A:middle
UITextField, the tokens do

00:25:49.156 --> 00:25:50.596 A:middle
interact with the text.

00:25:51.336 --> 00:25:53.626 A:middle
In fact, they're always prior to

00:25:53.626 --> 00:25:54.296 A:middle
the text.

00:25:55.726 --> 00:25:57.226 A:middle
For example, if I pace the token

00:25:57.616 --> 00:25:59.376 A:middle
into the search field, even

00:25:59.376 --> 00:26:00.856 A:middle
though my insertion point is at

00:25:59.376 --> 00:26:00.856 A:middle
though my insertion point is at

00:26:00.856 --> 00:26:02.626 A:middle
the end of the search field, the

00:26:02.626 --> 00:26:03.906 A:middle
token appears at the beginning,

00:26:05.436 --> 00:26:06.436 A:middle
and as you can see here, the

00:26:06.436 --> 00:26:07.476 A:middle
token is now selected.

00:26:08.716 --> 00:26:10.106 A:middle
And I can extend the selection

00:26:10.576 --> 00:26:13.196 A:middle
to include both the token and

00:26:14.096 --> 00:26:15.936 A:middle
some text.

00:26:16.296 --> 00:26:18.506 A:middle
Creating tokens is pretty easy.

00:26:19.716 --> 00:26:22.476 A:middle
First, grab the selected text

00:26:22.476 --> 00:26:24.076 A:middle
range to figure out what text

00:26:24.076 --> 00:26:25.766 A:middle
you want to convert into a

00:26:26.416 --> 00:26:26.586 A:middle
token.

00:26:26.726 --> 00:26:28.716 A:middle
Create a UISearchToken object,

00:26:30.166 --> 00:26:31.746 A:middle
and call this method on the

00:26:31.746 --> 00:26:33.836 A:middle
SearchTextField to replace the

00:26:33.836 --> 00:26:35.496 A:middle
textual portion of that range

00:26:35.856 --> 00:26:36.436 A:middle
with a token.

00:26:37.706 --> 00:26:39.216 A:middle
Your app is in complete control

00:26:39.446 --> 00:26:41.226 A:middle
over the insertion and removal

00:26:41.226 --> 00:26:43.836 A:middle
of tokens, so you can attach any

00:26:43.996 --> 00:26:48.746 A:middle
meaning to them that you want.

00:26:48.746 --> 00:26:51.096 A:middle
Now, UITextField conforms to a

00:26:51.096 --> 00:26:52.996 A:middle
protocol called UITextInput.

00:26:54.026 --> 00:26:55.026 A:middle
If you're doing programmatic

00:26:55.026 --> 00:26:57.266 A:middle
selection, it's important to

00:26:57.266 --> 00:26:58.576 A:middle
understand some aspects of

00:26:58.576 --> 00:27:01.956 A:middle
UITextInput, namely ranges and

00:26:58.576 --> 00:27:01.956 A:middle
UITextInput, namely ranges and

00:27:01.956 --> 00:27:02.616 A:middle
positions.

00:27:03.986 --> 00:27:05.976 A:middle
In a normal text field, every

00:27:05.976 --> 00:27:07.616 A:middle
character is assigned a

00:27:07.616 --> 00:27:10.266 A:middle
UITextPosition, and these

00:27:10.266 --> 00:27:12.396 A:middle
positions are relative to two

00:27:12.396 --> 00:27:13.846 A:middle
well-known positions at the

00:27:13.846 --> 00:27:16.126 A:middle
beginning and the end of what we

00:27:16.126 --> 00:27:17.546 A:middle
call the document, which is the

00:27:17.546 --> 00:27:18.546 A:middle
search field's content.

00:27:19.136 --> 00:27:22.486 A:middle
And you can use these positions

00:27:22.856 --> 00:27:24.876 A:middle
to create UITextRanges.

00:27:25.396 --> 00:27:26.936 A:middle
For example, to programmatically

00:27:26.936 --> 00:27:28.756 A:middle
select a portion of the field's

00:27:28.756 --> 00:27:29.256 A:middle
content.

00:27:31.316 --> 00:27:33.696 A:middle
Because tokens are selectable,

00:27:34.096 --> 00:27:36.686 A:middle
they too get UITextPositions.

00:27:37.246 --> 00:27:40.996 A:middle
But the length of the text of a

00:27:40.996 --> 00:27:43.546 A:middle
search field is now different

00:27:43.936 --> 00:27:45.556 A:middle
from the distance from the

00:27:45.556 --> 00:27:47.246 A:middle
beginning of the document to the

00:27:47.246 --> 00:27:48.956 A:middle
last character's position.

00:27:50.096 --> 00:27:51.696 A:middle
If this matters to you, for

00:27:51.696 --> 00:27:53.306 A:middle
example, to programmatically

00:27:53.306 --> 00:27:55.046 A:middle
select a portion of the text,

00:27:55.656 --> 00:27:58.166 A:middle
UISearchTextField exports this

00:27:58.166 --> 00:28:00.136 A:middle
new property, textualRange.

00:27:58.166 --> 00:28:00.136 A:middle
new property, textualRange.

00:28:01.516 --> 00:28:02.076 A:middle
The beginning of the

00:28:02.076 --> 00:28:04.046 A:middle
textualRange is the first

00:28:04.416 --> 00:28:06.336 A:middle
nontoken character in the field,

00:28:07.056 --> 00:28:08.436 A:middle
and its end is the end of the

00:28:08.436 --> 00:28:08.866 A:middle
document.

00:28:09.656 --> 00:28:10.986 A:middle
These match up with character

00:28:10.986 --> 00:28:13.056 A:middle
indexes in the text property.

00:28:13.686 --> 00:28:16.196 A:middle
So, to take advantage of all of

00:28:16.196 --> 00:28:17.376 A:middle
this new functionality in your

00:28:17.376 --> 00:28:19.066 A:middle
application, take a look at the

00:28:19.066 --> 00:28:20.836 A:middle
new properties and customization

00:28:20.836 --> 00:28:22.066 A:middle
options available on

00:28:22.066 --> 00:28:22.946 A:middle
UISearchController.

00:28:24.136 --> 00:28:26.316 A:middle
Use UISearchTextField either

00:28:26.316 --> 00:28:27.906 A:middle
inside the UISearchBar or

00:28:27.906 --> 00:28:29.196 A:middle
anywhere else you can use a

00:28:29.196 --> 00:28:31.996 A:middle
UITextField today, and customize

00:28:31.996 --> 00:28:33.246 A:middle
it with all of the customization

00:28:33.246 --> 00:28:34.876 A:middle
options that are available on

00:28:34.876 --> 00:28:35.516 A:middle
UITextField.

00:28:36.696 --> 00:28:39.136 A:middle
Adopt UISearchToken to represent

00:28:39.136 --> 00:28:41.106 A:middle
complicated queries in a concise

00:28:41.106 --> 00:28:42.896 A:middle
editable fashion that supports

00:28:42.896 --> 00:28:44.706 A:middle
Copy and Paste and Drag and

00:28:45.336 --> 00:28:45.466 A:middle
Drop.

00:28:46.176 --> 00:28:47.416 A:middle
There's a lot of advanced

00:28:47.416 --> 00:28:48.696 A:middle
techniques you can do with this,

00:28:49.016 --> 00:28:50.026 A:middle
so we're going to have a sample

00:28:50.026 --> 00:28:51.916 A:middle
project available soon at this

00:28:51.916 --> 00:28:53.246 A:middle
session's website, that

00:28:53.246 --> 00:28:54.586 A:middle
demonstrates how to use tokens

00:28:54.586 --> 00:28:55.146 A:middle
effectively.

00:29:00.026 --> 00:29:00.596 A:middle
Now, I'm going to hand it over

00:29:00.596 --> 00:29:01.276 A:middle
to James, who's going to talk

00:29:01.276 --> 00:29:01.786 A:middle
about Gestures.

00:29:02.516 --> 00:29:08.856 A:middle
[ Applause ]

00:29:09.356 --> 00:29:10.016 A:middle
&gt;&gt; Thanks Kyle.

00:29:10.806 --> 00:29:11.426 A:middle
Hey everybody.

00:29:11.786 --> 00:29:13.836 A:middle
I'm James McGaran, and I'm here

00:29:13.836 --> 00:29:15.186 A:middle
to show you some new Gestures

00:29:15.186 --> 00:29:16.936 A:middle
that we've added in iOS 13

00:29:17.266 --> 00:29:18.636 A:middle
themed around selection,

00:29:18.716 --> 00:29:20.246 A:middle
organization, and some common

00:29:20.246 --> 00:29:21.056 A:middle
editing shortcuts.

00:29:21.846 --> 00:29:24.096 A:middle
So this is everything I'm going

00:29:24.096 --> 00:29:25.226 A:middle
to be talking about today.

00:29:25.576 --> 00:29:26.406 A:middle
The best news you're going to

00:29:26.406 --> 00:29:27.576 A:middle
hear all day is that a lot of

00:29:27.576 --> 00:29:28.696 A:middle
this behavior is actually

00:29:28.696 --> 00:29:29.796 A:middle
automatic, stuff that you're

00:29:29.796 --> 00:29:31.396 A:middle
going to get for free, but I'm

00:29:31.396 --> 00:29:32.376 A:middle
here to tell you about what's

00:29:32.376 --> 00:29:33.766 A:middle
different and what you need to

00:29:33.766 --> 00:29:35.226 A:middle
do in order to take full

00:29:35.226 --> 00:29:36.626 A:middle
advantage of these new features

00:29:36.856 --> 00:29:37.906 A:middle
inside of your application.

00:29:38.736 --> 00:29:39.696 A:middle
So, let's start with some new

00:29:39.696 --> 00:29:41.336 A:middle
features regarding text

00:29:41.336 --> 00:29:42.916 A:middle
selection gestures in custom

00:29:42.916 --> 00:29:43.546 A:middle
text views.

00:29:44.266 --> 00:29:46.606 A:middle
So, as you know, there's a lot

00:29:46.606 --> 00:29:48.326 A:middle
of really great existing ways to

00:29:48.326 --> 00:29:50.496 A:middle
select text on iOS using

00:29:50.496 --> 00:29:50.956 A:middle
Gestures.

00:29:51.726 --> 00:29:53.286 A:middle
You can tap and hold to start

00:29:53.286 --> 00:29:54.846 A:middle
highlighting right away, that's

00:29:54.846 --> 00:29:56.066 A:middle
a new thing in iOS 13.

00:29:56.796 --> 00:29:57.936 A:middle
You can long press to get the

00:29:57.936 --> 00:29:59.206 A:middle
selection loop and move the

00:29:59.206 --> 00:30:01.036 A:middle
insertion point around, and you

00:29:59.206 --> 00:30:01.036 A:middle
insertion point around, and you

00:30:01.036 --> 00:30:02.886 A:middle
can triple tap on a paragraph to

00:30:02.886 --> 00:30:04.066 A:middle
select the entire paragraph all

00:30:04.066 --> 00:30:04.706 A:middle
at once.

00:30:06.216 --> 00:30:08.086 A:middle
So, these Gestures work great in

00:30:08.086 --> 00:30:09.736 A:middle
native text widgets like

00:30:09.876 --> 00:30:11.776 A:middle
UITextView and UITextField.

00:30:12.096 --> 00:30:12.846 A:middle
You already get those.

00:30:14.346 --> 00:30:16.576 A:middle
But, there might be some cases

00:30:16.906 --> 00:30:18.636 A:middle
where you need to go beyond what

00:30:18.636 --> 00:30:19.996 A:middle
TextView and TextField are

00:30:19.996 --> 00:30:20.596 A:middle
capable of.

00:30:21.226 --> 00:30:22.256 A:middle
Some of you need to implement

00:30:22.386 --> 00:30:24.066 A:middle
highly customized text drawing

00:30:24.236 --> 00:30:24.746 A:middle
in your apps.

00:30:26.156 --> 00:30:27.396 A:middle
So, here's books as an example,

00:30:27.396 --> 00:30:28.696 A:middle
where they use a completely

00:30:28.696 --> 00:30:30.326 A:middle
customed text view to control

00:30:30.326 --> 00:30:32.126 A:middle
the margins, character spacing,

00:30:32.126 --> 00:30:36.196 A:middle
etc. So, currently, in order to

00:30:36.196 --> 00:30:37.766 A:middle
get selection behavior like this

00:30:38.006 --> 00:30:40.166 A:middle
in a custom text view, you had

00:30:40.166 --> 00:30:41.736 A:middle
to manually add all of the

00:30:42.006 --> 00:30:43.586 A:middle
system text selection Gestures

00:30:43.776 --> 00:30:45.496 A:middle
to your app just to get parity

00:30:45.496 --> 00:30:46.506 A:middle
with the native text widgets.

00:30:47.916 --> 00:30:48.846 A:middle
Many of you also had to

00:30:48.846 --> 00:30:49.986 A:middle
implement you own UI for

00:30:50.206 --> 00:30:51.886 A:middle
selection, like the selection

00:30:51.886 --> 00:30:53.146 A:middle
rectangles, the blue selection

00:30:53.146 --> 00:30:54.536 A:middle
rectangles or the selection

00:30:54.536 --> 00:30:56.176 A:middle
handles just to offer this

00:30:56.216 --> 00:30:56.706 A:middle
behavior.

00:30:57.326 --> 00:30:59.586 A:middle
So, I'm pleased to announce in

00:30:59.586 --> 00:31:01.956 A:middle
iOS 13 this can be accomplished

00:30:59.586 --> 00:31:01.956 A:middle
iOS 13 this can be accomplished

00:31:01.956 --> 00:31:03.796 A:middle
much easier with a new type of

00:31:03.796 --> 00:31:05.276 A:middle
UIInteraction called

00:31:05.276 --> 00:31:06.326 A:middle
UITextInteraction.

00:31:07.736 --> 00:31:08.616 A:middle
So, in case you're not familiar

00:31:08.616 --> 00:31:10.106 A:middle
with UIInteractions, you can

00:31:10.106 --> 00:31:10.856 A:middle
think of them as a way to

00:31:10.856 --> 00:31:12.496 A:middle
encapsulate sort of a set of

00:31:12.656 --> 00:31:14.786 A:middle
behaviors and Gestures related

00:31:14.786 --> 00:31:15.916 A:middle
to UIKit widgets.

00:31:16.386 --> 00:31:17.256 A:middle
Think of Drag and Drop

00:31:17.256 --> 00:31:18.516 A:middle
interactions, similar to that.

00:31:19.676 --> 00:31:21.166 A:middle
So it's only three lines of code

00:31:21.846 --> 00:31:23.216 A:middle
to add all of the system test

00:31:23.216 --> 00:31:24.766 A:middle
selection Gestures to your app,

00:31:25.146 --> 00:31:26.106 A:middle
the ones that your users are

00:31:26.106 --> 00:31:26.936 A:middle
already familiar with.

00:31:27.966 --> 00:31:30.066 A:middle
We provide a set of Gestures for

00:31:30.066 --> 00:31:32.346 A:middle
editable and noneditable text

00:31:32.346 --> 00:31:34.726 A:middle
interactions, and you can use

00:31:34.726 --> 00:31:37.096 A:middle
the UITextInputProtocol to get

00:31:37.096 --> 00:31:39.326 A:middle
more fine grain control over the

00:31:39.326 --> 00:31:40.786 A:middle
selection UI, like the

00:31:40.876 --> 00:31:42.686 A:middle
rectangles and the handles that

00:31:42.686 --> 00:31:43.526 A:middle
I was mentioning before.

00:31:44.106 --> 00:31:47.176 A:middle
So here's what you need to do to

00:31:47.176 --> 00:31:48.236 A:middle
get started with

00:31:48.456 --> 00:31:50.266 A:middle
UITextInteraction in your Custom

00:31:50.266 --> 00:31:50.686 A:middle
Text View.

00:31:51.566 --> 00:31:52.656 A:middle
So, as I said, it's only three

00:31:52.656 --> 00:31:53.946 A:middle
lines of code to do this, minus

00:31:53.946 --> 00:31:54.406 A:middle
the comments.

00:31:55.676 --> 00:31:56.796 A:middle
So you create the interaction

00:31:56.866 --> 00:31:58.956 A:middle
using UITextInteraction 4, and

00:31:58.956 --> 00:31:59.926 A:middle
let us know if you want the set

00:31:59.926 --> 00:32:01.376 A:middle
of Gestures for editable or

00:31:59.926 --> 00:32:01.376 A:middle
of Gestures for editable or

00:32:01.376 --> 00:32:02.636 A:middle
noneditable text fields.

00:32:04.006 --> 00:32:05.506 A:middle
Then assign the text input

00:32:05.506 --> 00:32:06.946 A:middle
property to your view that

00:32:07.006 --> 00:32:07.646 A:middle
implements the

00:32:07.646 --> 00:32:09.116 A:middle
UITextInputProtocol.

00:32:09.666 --> 00:32:11.176 A:middle
We keep this separate in case

00:32:11.176 --> 00:32:12.296 A:middle
you want Gestures to work on a

00:32:12.296 --> 00:32:13.656 A:middle
container view, like a scroll

00:32:13.656 --> 00:32:15.236 A:middle
view, but you want all of the

00:32:15.236 --> 00:32:17.616 A:middle
text selection behavior to get

00:32:17.616 --> 00:32:19.176 A:middle
handled by some contained view,

00:32:19.226 --> 00:32:20.056 A:middle
like the one that's actually

00:32:20.056 --> 00:32:20.986 A:middle
drawing the text.

00:32:22.276 --> 00:32:23.206 A:middle
And finally, just add the

00:32:23.206 --> 00:32:24.706 A:middle
interaction to your view with

00:32:24.936 --> 00:32:25.596 A:middle
Add Interaction.

00:32:26.166 --> 00:32:29.966 A:middle
Well, take a trip--

00:32:30.516 --> 00:32:32.966 A:middle
[ Applause ]

00:32:33.466 --> 00:32:34.526 A:middle
Take a trip with me over to this

00:32:34.526 --> 00:32:35.376 A:middle
side of the stage, and we'll

00:32:35.376 --> 00:32:37.256 A:middle
talk about multiple selection

00:32:37.386 --> 00:32:39.186 A:middle
Gestures in TableViews and

00:32:39.186 --> 00:32:39.716 A:middle
CollectionViews.

00:32:40.526 --> 00:32:44.616 A:middle
So we've long supported Multiple

00:32:44.616 --> 00:32:45.916 A:middle
Selection Mode in

00:32:45.916 --> 00:32:47.146 A:middle
UICollectionView and

00:32:47.146 --> 00:32:47.896 A:middle
UITableView.

00:32:48.726 --> 00:32:50.226 A:middle
Apps like Notes here have a

00:32:50.226 --> 00:32:51.876 A:middle
Select button on the top right

00:32:51.876 --> 00:32:54.166 A:middle
corner where users can tap it to

00:32:54.166 --> 00:32:55.676 A:middle
enter multiple selection mode

00:32:56.096 --> 00:32:57.466 A:middle
and then individually select

00:32:57.736 --> 00:32:59.436 A:middle
each individual note one by one

00:32:59.656 --> 00:33:01.706 A:middle
to group them together and then

00:32:59.656 --> 00:33:01.706 A:middle
to group them together and then

00:33:01.836 --> 00:33:03.276 A:middle
organize them with Drag and Drop

00:33:03.276 --> 00:33:04.556 A:middle
or one of those action buttons

00:33:04.556 --> 00:33:05.236 A:middle
at the bottom there.

00:33:05.766 --> 00:33:07.616 A:middle
Well, I'm pleased to announce in

00:33:07.616 --> 00:33:09.106 A:middle
iOS 13 we're introducing a

00:33:09.106 --> 00:33:11.316 A:middle
totally new way of quickly

00:33:11.316 --> 00:33:13.056 A:middle
selecting a contiguous batch of

00:33:13.056 --> 00:33:14.636 A:middle
items in collection views and

00:33:14.636 --> 00:33:15.016 A:middle
table views.

00:33:15.976 --> 00:33:16.606 A:middle
So, let me show you what that

00:33:16.606 --> 00:33:17.776 A:middle
looks like here on this giant

00:33:17.776 --> 00:33:18.006 A:middle
iPad.

00:33:19.026 --> 00:33:20.646 A:middle
So now, users will be able to

00:33:20.696 --> 00:33:22.576 A:middle
instantly jump into multiple

00:33:22.576 --> 00:33:24.376 A:middle
selection mode by simply placing

00:33:24.376 --> 00:33:25.996 A:middle
two fingers down anywhere on a

00:33:25.996 --> 00:33:28.066 A:middle
table or collection view and pan

00:33:28.066 --> 00:33:30.246 A:middle
across to start selecting right

00:33:30.246 --> 00:33:30.456 A:middle
away.

00:33:34.316 --> 00:33:36.296 A:middle
Thanks, that's really awesome.

00:33:36.296 --> 00:33:37.646 A:middle
So, here you can see taking two

00:33:37.646 --> 00:33:38.876 A:middle
fingers and sliding down the

00:33:38.876 --> 00:33:40.026 A:middle
list view in files will

00:33:40.076 --> 00:33:41.386 A:middle
instantly put it into edit mode

00:33:41.386 --> 00:33:42.436 A:middle
and start selecting cells.

00:33:43.916 --> 00:33:45.496 A:middle
Even cooler, the same works for

00:33:45.496 --> 00:33:46.576 A:middle
a grid of items in a

00:33:46.576 --> 00:33:48.596 A:middle
UICollectionView flow layout, so

00:33:48.596 --> 00:33:49.996 A:middle
your users will be able to pan

00:33:49.996 --> 00:33:51.376 A:middle
two fingers across a grid of

00:33:51.376 --> 00:33:52.656 A:middle
items and select a bunch of

00:33:52.656 --> 00:33:53.796 A:middle
things all at once.

00:33:54.446 --> 00:33:55.726 A:middle
This is absolutely a dream come

00:33:55.726 --> 00:33:56.716 A:middle
true for Drag and Drop.

00:33:57.226 --> 00:34:01.316 A:middle
Not to mention, if your users

00:33:57.226 --> 00:34:01.316 A:middle
Not to mention, if your users

00:34:01.316 --> 00:34:02.266 A:middle
have a hardware keyboard

00:34:02.266 --> 00:34:03.966 A:middle
attached, they can also hold the

00:34:03.966 --> 00:34:05.956 A:middle
shift or command key to tap on

00:34:05.956 --> 00:34:07.416 A:middle
other items, and it behaves just

00:34:07.416 --> 00:34:08.966 A:middle
like it does on macOS.

00:34:10.246 --> 00:34:10.396 A:middle
Thanks.

00:34:11.516 --> 00:34:14.656 A:middle
[ Applause ]

00:34:15.156 --> 00:34:16.556 A:middle
And now especially that your

00:34:16.556 --> 00:34:18.106 A:middle
iPad apps can run on the Mac,

00:34:18.346 --> 00:34:19.966 A:middle
your table views can feel right

00:34:20.696 --> 00:34:22.406 A:middle
at home.

00:34:22.626 --> 00:34:24.326 A:middle
So, these awesome new behaviors

00:34:24.326 --> 00:34:26.216 A:middle
are currently opt in, and the

00:34:26.216 --> 00:34:27.576 A:middle
reason why is because your app

00:34:27.666 --> 00:34:29.216 A:middle
might need to adapt around the

00:34:29.216 --> 00:34:30.786 A:middle
fact that your user intends to

00:34:30.786 --> 00:34:32.216 A:middle
enter multiple selection mode.

00:34:33.036 --> 00:34:33.876 A:middle
For instance, you might want to

00:34:33.876 --> 00:34:35.696 A:middle
change the select or edit button

00:34:35.696 --> 00:34:37.335 A:middle
to say cancel or done instead.

00:34:38.146 --> 00:34:39.136 A:middle
You might want to show action

00:34:39.136 --> 00:34:40.076 A:middle
buttons at the bottom of the

00:34:40.076 --> 00:34:41.826 A:middle
screen for stuff to do with the

00:34:41.826 --> 00:34:43.085 A:middle
things that your user selected,

00:34:43.735 --> 00:34:44.886 A:middle
or you might to disable some UI

00:34:44.886 --> 00:34:46.676 A:middle
like the add not button in this

00:34:46.716 --> 00:34:47.005 A:middle
case.

00:34:47.786 --> 00:34:50.216 A:middle
So, to account for this, we're

00:34:50.216 --> 00:34:51.626 A:middle
adding just a couple of new APIs

00:34:51.766 --> 00:34:53.186 A:middle
to help you adapt to these new

00:34:53.186 --> 00:34:53.726 A:middle
behaviors.

00:34:54.516 --> 00:34:55.376 A:middle
It's really easy.

00:34:55.446 --> 00:34:56.516 A:middle
There's only two delegate

00:34:56.516 --> 00:34:57.736 A:middle
methods to implement, and

00:34:57.996 --> 00:34:59.296 A:middle
there's roughly equivalent

00:34:59.296 --> 00:35:01.186 A:middle
versions on both Table View and

00:34:59.296 --> 00:35:01.186 A:middle
versions on both Table View and

00:35:01.186 --> 00:35:01.826 A:middle
Collection View.

00:35:02.406 --> 00:35:04.546 A:middle
So here they are.

00:35:05.656 --> 00:35:06.956 A:middle
The first one to implement is

00:35:06.956 --> 00:35:08.256 A:middle
just Should Begin Multiple

00:35:08.256 --> 00:35:09.756 A:middle
Selection Interaction at Index

00:35:09.756 --> 00:35:10.346 A:middle
Path.

00:35:10.346 --> 00:35:11.836 A:middle
Or you can return true if you

00:35:11.836 --> 00:35:12.886 A:middle
would like to allow the gesture

00:35:12.886 --> 00:35:13.346 A:middle
to begin.

00:35:14.196 --> 00:35:15.456 A:middle
And we give you the index path

00:35:15.456 --> 00:35:17.066 A:middle
here in case you'd like to

00:35:17.066 --> 00:35:18.366 A:middle
prevent the selection from

00:35:18.366 --> 00:35:19.486 A:middle
beginning on a part of your

00:35:19.486 --> 00:35:20.336 A:middle
table view that's not

00:35:20.336 --> 00:35:21.686 A:middle
selectable, in which case you

00:35:21.686 --> 00:35:22.746 A:middle
can just return false.

00:35:23.336 --> 00:35:25.576 A:middle
And the second method to

00:35:25.576 --> 00:35:27.106 A:middle
implement is did begin multiple

00:35:27.106 --> 00:35:28.546 A:middle
selection interaction at index

00:35:28.546 --> 00:35:30.566 A:middle
path, where you can adapt your

00:35:30.566 --> 00:35:32.046 A:middle
surrounding UI to account for

00:35:32.046 --> 00:35:34.256 A:middle
the fact that the TableView was

00:35:34.256 --> 00:35:35.806 A:middle
automatically put into Multiple

00:35:35.806 --> 00:35:37.086 A:middle
Selection Mode, just like we're

00:35:37.086 --> 00:35:38.496 A:middle
talking about on the previous

00:35:38.976 --> 00:35:39.106 A:middle
slide.

00:35:41.736 --> 00:35:43.636 A:middle
So moving on, the last thing I

00:35:43.636 --> 00:35:44.526 A:middle
want to talk about is just

00:35:44.526 --> 00:35:46.176 A:middle
briefly cover some enhancements

00:35:46.176 --> 00:35:47.606 A:middle
that we've made to some common

00:35:47.606 --> 00:35:49.256 A:middle
editing tasks using some new

00:35:49.256 --> 00:35:49.726 A:middle
gestures.

00:35:50.486 --> 00:35:53.776 A:middle
So, in iOS 13, we're introducing

00:35:53.776 --> 00:35:55.446 A:middle
a standard set of Gestures to

00:35:55.446 --> 00:35:56.746 A:middle
make it easier to do some common

00:35:56.746 --> 00:35:57.626 A:middle
editing tasks.

00:35:58.316 --> 00:35:59.806 A:middle
For example, using three

00:35:59.806 --> 00:36:01.466 A:middle
fingers, users can now swipe

00:35:59.806 --> 00:36:01.466 A:middle
fingers, users can now swipe

00:36:01.616 --> 00:36:04.346 A:middle
back to undo and then swipe the

00:36:04.346 --> 00:36:05.936 A:middle
other way to redo.

00:36:07.876 --> 00:36:10.036 A:middle
Pinching three fingers in will

00:36:10.036 --> 00:36:12.856 A:middle
copy, and then pinching them out

00:36:13.236 --> 00:36:14.506 A:middle
will paste.

00:36:17.676 --> 00:36:19.526 A:middle
So, we're bringing this standard

00:36:19.526 --> 00:36:21.346 A:middle
set of productivity gestures to

00:36:21.346 --> 00:36:22.716 A:middle
the system so that you don't

00:36:22.716 --> 00:36:24.006 A:middle
have to worry about implementing

00:36:24.006 --> 00:36:25.446 A:middle
UI for these common editing

00:36:25.446 --> 00:36:25.936 A:middle
commands.

00:36:26.566 --> 00:36:27.866 A:middle
It's unified across the whole

00:36:27.866 --> 00:36:29.746 A:middle
system so your customers will be

00:36:29.746 --> 00:36:31.176 A:middle
able to discover right away

00:36:31.176 --> 00:36:32.416 A:middle
within your app, and they'll be

00:36:32.416 --> 00:36:33.456 A:middle
instantly familiar with it.

00:36:34.176 --> 00:36:35.376 A:middle
It's really great for drawing

00:36:35.376 --> 00:36:36.496 A:middle
apps because you don't need to

00:36:36.496 --> 00:36:38.076 A:middle
show any floating panels or

00:36:38.076 --> 00:36:39.446 A:middle
Toolbars in order to offer this

00:36:39.446 --> 00:36:39.936 A:middle
behavior.

00:36:40.626 --> 00:36:42.356 A:middle
And best of all, it's completely

00:36:42.356 --> 00:36:43.976 A:middle
free if you're already using

00:36:43.976 --> 00:36:46.216 A:middle
undo manager or NS undo manager.

00:36:47.616 --> 00:36:49.536 A:middle
So, my call to action here is

00:36:49.536 --> 00:36:51.516 A:middle
for you to try these gestures in

00:36:51.516 --> 00:36:53.156 A:middle
your app when you get a chance

00:36:53.156 --> 00:36:54.136 A:middle
and make sure that they work

00:36:54.136 --> 00:36:54.746 A:middle
really well.

00:36:56.036 --> 00:36:57.966 A:middle
But just in case, I can see some

00:36:57.966 --> 00:36:59.506 A:middle
of you are nervous, so just in

00:36:59.506 --> 00:37:01.516 A:middle
case they conflict with other

00:36:59.506 --> 00:37:01.516 A:middle
case they conflict with other

00:37:01.516 --> 00:37:02.736 A:middle
three-finger gestures that you

00:37:02.736 --> 00:37:03.746 A:middle
might have within your app,

00:37:04.516 --> 00:37:06.096 A:middle
we're offering an escape hatch

00:37:06.096 --> 00:37:07.186 A:middle
via some new API.

00:37:07.966 --> 00:37:10.656 A:middle
It's just a simple property that

00:37:10.656 --> 00:37:12.396 A:middle
you override on UIResponder

00:37:12.606 --> 00:37:12.956 A:middle
called

00:37:12.956 --> 00:37:14.446 A:middle
EditingInteractionConfiguration,

00:37:14.966 --> 00:37:16.286 A:middle
where you can return none if

00:37:16.286 --> 00:37:17.586 A:middle
you'd like to opt out of these

00:37:17.586 --> 00:37:18.016 A:middle
gestures.

00:37:19.456 --> 00:37:21.166 A:middle
So here's the takeaway, I hope,

00:37:21.366 --> 00:37:21.866 A:middle
for today.

00:37:22.486 --> 00:37:24.116 A:middle
Finally offer system-wide

00:37:24.186 --> 00:37:25.766 A:middle
standard text selection gestures

00:37:26.316 --> 00:37:27.626 A:middle
in your customized text widgets.

00:37:28.076 --> 00:37:29.836 A:middle
Change the way your users

00:37:29.836 --> 00:37:31.516 A:middle
organize information in your app

00:37:31.946 --> 00:37:33.076 A:middle
using multiple selection

00:37:33.076 --> 00:37:33.456 A:middle
gestures.

00:37:33.456 --> 00:37:34.576 A:middle
I really hope you adopt that

00:37:34.576 --> 00:37:34.776 A:middle
one.

00:37:36.236 --> 00:37:37.546 A:middle
And finally, allow your users to

00:37:37.546 --> 00:37:39.296 A:middle
stop shaking their iPad and

00:37:39.296 --> 00:37:41.316 A:middle
control the undo stack with a

00:37:41.316 --> 00:37:42.376 A:middle
standard set of gestures.

00:37:43.336 --> 00:37:45.336 A:middle
[ Applause ]

00:37:45.696 --> 00:37:47.216 A:middle
Yeah, it hurts.

00:37:48.136 --> 00:37:49.026 A:middle
So, thanks.

00:37:49.026 --> 00:37:49.916 A:middle
Now I'd like to hand it off to

00:37:49.916 --> 00:37:51.326 A:middle
Mohammed to talk about menus.

00:37:52.516 --> 00:37:57.726 A:middle
[ Applause ]

00:37:58.226 --> 00:37:58.456 A:middle
&gt;&gt; All right.

00:37:58.456 --> 00:37:59.086 A:middle
Thanks James.

00:38:00.946 --> 00:38:01.826 A:middle
Hi everyone.

00:38:01.826 --> 00:38:03.556 A:middle
I'm Mohammed, and I'm excited to

00:38:03.556 --> 00:38:05.196 A:middle
talk to you about some powerful

00:38:05.196 --> 00:38:06.956 A:middle
new APIs we're introducing in

00:38:07.106 --> 00:38:09.546 A:middle
iOS 13 that allow you to present

00:38:09.896 --> 00:38:12.236 A:middle
fluid interactive menus with

00:38:12.236 --> 00:38:14.436 A:middle
rich previews in your apps.

00:38:15.696 --> 00:38:17.706 A:middle
The first of these APIs is

00:38:17.706 --> 00:38:19.616 A:middle
UIContextMenuInteraction.

00:38:21.936 --> 00:38:24.076 A:middle
UIContextMenuInteraction is a

00:38:24.076 --> 00:38:26.266 A:middle
UIInteraction that lets you

00:38:26.266 --> 00:38:28.246 A:middle
present menus with rich previews

00:38:28.546 --> 00:38:30.146 A:middle
and complex hierarchies.

00:38:31.076 --> 00:38:32.166 A:middle
These hierarchies can have

00:38:32.196 --> 00:38:34.436 A:middle
nested sub-menus and in-line

00:38:34.436 --> 00:38:35.066 A:middle
sections.

00:38:35.216 --> 00:38:36.346 A:middle
We'll see what that means later

00:38:37.076 --> 00:38:37.146 A:middle
on.

00:38:38.416 --> 00:38:40.046 A:middle
The menu presented by the center

00:38:40.046 --> 00:38:41.676 A:middle
action is highly adaptive,

00:38:42.386 --> 00:38:44.086 A:middle
meaning it'll do the right thing

00:38:44.086 --> 00:38:45.416 A:middle
depending on the context in

00:38:45.416 --> 00:38:46.156 A:middle
which it's presented.

00:38:47.216 --> 00:38:48.976 A:middle
So, here we see it on an iPhone

00:38:48.976 --> 00:38:49.536 A:middle
in portrait.

00:38:49.756 --> 00:38:51.226 A:middle
We have the preview and the

00:38:51.226 --> 00:38:52.436 A:middle
actions kind of vertically

00:38:52.436 --> 00:38:53.646 A:middle
stacked above one another.

00:38:54.216 --> 00:38:57.526 A:middle
On an iPhone in landscape, we

00:38:57.526 --> 00:38:58.866 A:middle
get the preview and the action

00:38:58.866 --> 00:39:00.596 A:middle
side by side to better take

00:38:58.866 --> 00:39:00.596 A:middle
side by side to better take

00:39:00.596 --> 00:39:01.656 A:middle
advantage of the available

00:39:01.656 --> 00:39:02.216 A:middle
space.

00:39:02.666 --> 00:39:06.796 A:middle
And on an iPad, it reconfigures

00:39:06.796 --> 00:39:08.376 A:middle
itself depending on the

00:39:08.376 --> 00:39:10.166 A:middle
available space and size of its

00:39:10.216 --> 00:39:11.536 A:middle
preview and actions list.

00:39:12.026 --> 00:39:15.026 A:middle
And since this is a

00:39:15.026 --> 00:39:16.996 A:middle
cross-platform API, if you're

00:39:16.996 --> 00:39:19.366 A:middle
running your app on the Mac, it

00:39:19.366 --> 00:39:21.046 A:middle
turns into a familiar macOS

00:39:21.246 --> 00:39:21.916 A:middle
context menu.

00:39:25.616 --> 00:39:27.066 A:middle
The interaction provides a

00:39:27.066 --> 00:39:29.586 A:middle
consistent experience by

00:39:29.756 --> 00:39:31.556 A:middle
presenting the menu using the

00:39:31.556 --> 00:39:33.816 A:middle
same gesture throughout iOS.

00:39:35.156 --> 00:39:36.556 A:middle
So users will come to expect

00:39:36.636 --> 00:39:38.436 A:middle
that this gesture brings up a

00:39:38.436 --> 00:39:41.846 A:middle
menu anywhere in the system.

00:39:41.976 --> 00:39:43.726 A:middle
The gesture will adapt to the

00:39:43.726 --> 00:39:44.866 A:middle
device's capabilities.

00:39:45.596 --> 00:39:48.026 A:middle
So, on phones with 3D touch, we

00:39:48.026 --> 00:39:49.306 A:middle
will use 3D touch to bring up

00:39:49.306 --> 00:39:50.896 A:middle
the menu quickly and provide

00:39:50.896 --> 00:39:51.596 A:middle
some nice feedback.

00:39:52.356 --> 00:39:54.736 A:middle
On phones without 3D touch

00:39:54.736 --> 00:39:56.136 A:middle
capability, we'll use Haptic

00:39:56.206 --> 00:39:57.806 A:middle
Touch, and we'll keep that nice

00:39:57.836 --> 00:39:59.156 A:middle
feedback whenever the menu pops

00:39:59.876 --> 00:39:59.946 A:middle
up.

00:40:00.496 --> 00:40:02.586 A:middle
On other iOS devices, we'll use

00:40:02.586 --> 00:40:05.086 A:middle
a long press, and on the Mac,

00:40:05.256 --> 00:40:06.736 A:middle
it'll be your user's secondary

00:40:06.736 --> 00:40:07.466 A:middle
click setting.

00:40:07.466 --> 00:40:09.336 A:middle
So, a right click or a command

00:40:09.336 --> 00:40:12.946 A:middle
click or two-finger tap.

00:40:15.636 --> 00:40:17.366 A:middle
The interaction is automatically

00:40:17.366 --> 00:40:18.756 A:middle
integrated with other system

00:40:18.756 --> 00:40:20.536 A:middle
behaviors like Drag and Drop.

00:40:21.516 --> 00:40:22.476 A:middle
So if you've adopted

00:40:22.526 --> 00:40:24.616 A:middle
UIDragInteraction in your app

00:40:24.786 --> 00:40:26.036 A:middle
and you choose to adopt

00:40:26.036 --> 00:40:27.666 A:middle
UIContextMenuInteraction

00:40:27.806 --> 00:40:30.286 A:middle
alongside it, users will be able

00:40:30.286 --> 00:40:32.136 A:middle
to transition into dragging at

00:40:32.186 --> 00:40:32.696 A:middle
any point.

00:40:33.886 --> 00:40:35.926 A:middle
So, here we see as soon as that

00:40:35.926 --> 00:40:37.476 A:middle
initial threshold for dragging

00:40:37.476 --> 00:40:39.436 A:middle
is met, you're able to move your

00:40:39.436 --> 00:40:42.126 A:middle
finger to drag the photo over to

00:40:42.126 --> 00:40:43.386 A:middle
the files app.

00:40:44.336 --> 00:40:45.986 A:middle
However, if you wait a little

00:40:45.986 --> 00:40:47.726 A:middle
bit longer under the menu is

00:40:47.766 --> 00:40:49.676 A:middle
presented, you're still able to

00:40:49.896 --> 00:40:51.936 A:middle
transition smoothly into a drag

00:40:52.376 --> 00:40:53.746 A:middle
without removing your finger

00:40:53.746 --> 00:40:54.396 A:middle
from the screen.

00:40:55.536 --> 00:40:57.356 A:middle
So users have this nice fluid

00:40:57.356 --> 00:40:58.536 A:middle
continuous experience.

00:40:59.056 --> 00:41:03.856 A:middle
The second part of our API

00:40:59.056 --> 00:41:03.856 A:middle
The second part of our API

00:41:03.936 --> 00:41:06.306 A:middle
package today is UIMenu and

00:41:06.306 --> 00:41:07.186 A:middle
UIAction.

00:41:08.866 --> 00:41:11.666 A:middle
UIMenu and UIAction are a

00:41:12.096 --> 00:41:14.076 A:middle
hierarchical menu construction

00:41:14.176 --> 00:41:16.936 A:middle
system that allows us to define

00:41:17.086 --> 00:41:18.496 A:middle
and describe the menu

00:41:18.496 --> 00:41:20.536 A:middle
hierarchies that we're going to

00:41:21.106 --> 00:41:22.876 A:middle
want to display.

00:41:22.876 --> 00:41:24.116 A:middle
UIMenus are composable.

00:41:24.176 --> 00:41:25.456 A:middle
They're basically like building

00:41:25.456 --> 00:41:26.856 A:middle
blocks that we can put together

00:41:27.116 --> 00:41:28.456 A:middle
in different configurations to

00:41:28.456 --> 00:41:29.736 A:middle
describe different menu

00:41:29.736 --> 00:41:30.366 A:middle
hierarchies.

00:41:33.486 --> 00:41:35.166 A:middle
So, in a simple example here,

00:41:35.166 --> 00:41:37.796 A:middle
I've created a two action menu

00:41:38.036 --> 00:41:40.646 A:middle
by creating a UIMenu and passing

00:41:40.646 --> 00:41:43.386 A:middle
it to UIAction children, a share

00:41:43.386 --> 00:41:45.156 A:middle
action and a delete action.

00:41:45.156 --> 00:41:47.776 A:middle
If I want to add a little bit

00:41:47.816 --> 00:41:49.576 A:middle
more functionality to my menu by

00:41:49.576 --> 00:41:51.676 A:middle
say adding a sub-menu, all I

00:41:51.676 --> 00:41:54.056 A:middle
need to do is create another

00:41:54.056 --> 00:41:56.656 A:middle
UIMenu, give it some descriptive

00:41:56.706 --> 00:41:58.726 A:middle
title to display at the previous

00:41:58.756 --> 00:42:01.176 A:middle
level in the hierarchy, and pass

00:41:58.756 --> 00:42:01.176 A:middle
level in the hierarchy, and pass

00:42:01.176 --> 00:42:02.456 A:middle
it the desired children.

00:42:02.536 --> 00:42:04.166 A:middle
So here I've chose to include a

00:42:04.216 --> 00:42:06.226 A:middle
copy and a duplicate action.

00:42:09.326 --> 00:42:10.986 A:middle
So, when we present it, the menu

00:42:10.986 --> 00:42:11.996 A:middle
looks something like this.

00:42:12.586 --> 00:42:16.346 A:middle
We have a Share action at the

00:42:16.346 --> 00:42:18.686 A:middle
top, our edit action for our

00:42:18.686 --> 00:42:21.176 A:middle
sub-menu in the middle, and a

00:42:21.176 --> 00:42:22.796 A:middle
delete action at the bottom.

00:42:23.506 --> 00:42:26.676 A:middle
When the user taps edit, our

00:42:26.676 --> 00:42:28.176 A:middle
sub-menu is presented, and our

00:42:28.226 --> 00:42:30.686 A:middle
copy and duplicate actions pop

00:42:33.256 --> 00:42:33.356 A:middle
in.

00:42:33.576 --> 00:42:34.796 A:middle
Adopting the interaction in your

00:42:34.796 --> 00:42:36.036 A:middle
app is pretty straightforward.

00:42:37.266 --> 00:42:39.136 A:middle
If you've adopted other

00:42:39.136 --> 00:42:40.616 A:middle
UIInteractions in your app like

00:42:40.616 --> 00:42:42.386 A:middle
UIDragInteraction or some of the

00:42:42.386 --> 00:42:43.686 A:middle
TextInteractions that are being

00:42:43.686 --> 00:42:45.056 A:middle
introduced this year, this

00:42:45.056 --> 00:42:46.096 A:middle
pattern should be really

00:42:46.096 --> 00:42:46.776 A:middle
familiar to you.

00:42:46.776 --> 00:42:48.856 A:middle
The first thing well need to do

00:42:48.856 --> 00:42:49.866 A:middle
is just create a

00:42:49.866 --> 00:42:51.806 A:middle
UIContextMenuInteraction with

00:42:51.806 --> 00:42:53.486 A:middle
some object as its delegate.

00:42:53.836 --> 00:42:54.706 A:middle
So, this could be our View

00:42:54.706 --> 00:42:55.626 A:middle
Controller, for example.

00:42:57.126 --> 00:42:58.576 A:middle
Then we'll need to attach it to

00:42:58.576 --> 00:43:00.486 A:middle
some view using UIView's

00:42:58.576 --> 00:43:00.486 A:middle
some view using UIView's

00:43:00.486 --> 00:43:02.226 A:middle
addInteraction method.

00:43:04.056 --> 00:43:05.566 A:middle
Once we've done that, we'll need

00:43:05.566 --> 00:43:07.076 A:middle
to conform to the interaction's

00:43:07.146 --> 00:43:07.976 A:middle
delegate protocol.

00:43:08.536 --> 00:43:10.866 A:middle
The protocol has a single

00:43:10.866 --> 00:43:12.776 A:middle
required method that is called

00:43:12.776 --> 00:43:14.306 A:middle
when the interaction is about to

00:43:14.306 --> 00:43:14.676 A:middle
begin.

00:43:15.886 --> 00:43:17.316 A:middle
It's the app's job at this point

00:43:17.366 --> 00:43:19.416 A:middle
to either return a configuration

00:43:19.466 --> 00:43:21.376 A:middle
to start the interaction or

00:43:21.376 --> 00:43:23.516 A:middle
return nil to indicate that

00:43:23.516 --> 00:43:25.116 A:middle
there's no menu to be presented

00:43:25.166 --> 00:43:26.296 A:middle
for the current location.

00:43:30.196 --> 00:43:31.886 A:middle
The configuration object is how

00:43:31.886 --> 00:43:32.846 A:middle
we're going to describe our

00:43:32.846 --> 00:43:33.206 A:middle
menu.

00:43:34.216 --> 00:43:36.476 A:middle
It has an identifier.

00:43:36.916 --> 00:43:38.166 A:middle
The identifier is optional.

00:43:38.166 --> 00:43:39.936 A:middle
It's for you to use to be able

00:43:39.936 --> 00:43:42.516 A:middle
to identify the interaction

00:43:42.576 --> 00:43:43.746 A:middle
throughout its lifecycle,

00:43:44.716 --> 00:43:46.616 A:middle
throughout the various delegate

00:43:46.616 --> 00:43:48.266 A:middle
callbacks that you might get.

00:43:49.326 --> 00:43:51.586 A:middle
It also has a previewProvider

00:43:51.586 --> 00:43:52.946 A:middle
and action provider closure.

00:43:53.726 --> 00:43:55.486 A:middle
Both of these are called when

00:43:55.486 --> 00:43:56.396 A:middle
the menu is about to be

00:43:56.396 --> 00:43:56.866 A:middle
presented.

00:43:57.406 --> 00:43:58.916 A:middle
This allows us to defer the

00:43:58.916 --> 00:44:00.626 A:middle
potentially expensive work of

00:43:58.916 --> 00:44:00.626 A:middle
potentially expensive work of

00:44:00.626 --> 00:44:01.976 A:middle
actually building up the menu

00:44:01.976 --> 00:44:03.496 A:middle
and the preview until they're

00:44:03.496 --> 00:44:04.846 A:middle
actually needed.

00:44:06.666 --> 00:44:07.886 A:middle
So, in the example that we just

00:44:07.886 --> 00:44:10.206 A:middle
looked at, our menu doesn't have

00:44:10.206 --> 00:44:11.346 A:middle
that large rich preview.

00:44:11.346 --> 00:44:13.276 A:middle
It just has some actions, so

00:44:13.276 --> 00:44:15.636 A:middle
we're going to focus on creating

00:44:15.636 --> 00:44:16.606 A:middle
an actionProvider in our

00:44:16.606 --> 00:44:17.706 A:middle
implementation of the delegate

00:44:17.706 --> 00:44:18.006 A:middle
method.

00:44:18.626 --> 00:44:22.906 A:middle
So the actionProvider, when

00:44:22.906 --> 00:44:26.316 A:middle
called, has a list of suggested

00:44:26.316 --> 00:44:27.676 A:middle
actions that are passed to it by

00:44:27.676 --> 00:44:28.186 A:middle
the system.

00:44:28.706 --> 00:44:32.486 A:middle
This can be a mix of UIMenus and

00:44:32.486 --> 00:44:34.646 A:middle
UIActions, so potentially a

00:44:34.646 --> 00:44:36.536 A:middle
fully constructed hierarchy that

00:44:36.536 --> 00:44:38.156 A:middle
are picked up from the system.

00:44:38.626 --> 00:44:40.006 A:middle
These could be things that you

00:44:40.006 --> 00:44:41.476 A:middle
defined in your responder chain

00:44:41.476 --> 00:44:43.166 A:middle
using the new UI command API

00:44:43.306 --> 00:44:46.196 A:middle
being introduced in iOS 13 or

00:44:46.196 --> 00:44:47.856 A:middle
things that are offered by other

00:44:47.856 --> 00:44:48.906 A:middle
system components.

00:44:49.466 --> 00:44:52.696 A:middle
So we're doing a fully custom

00:44:52.696 --> 00:44:53.976 A:middle
menu here, so we're going to put

00:44:53.976 --> 00:44:55.236 A:middle
the suggested actions aside.

00:44:56.746 --> 00:44:58.276 A:middle
First, we'll create our edit

00:44:58.276 --> 00:44:58.716 A:middle
menu.

00:44:58.956 --> 00:45:01.286 A:middle
We'll just create a UIMenu with

00:44:58.956 --> 00:45:01.286 A:middle
We'll just create a UIMenu with

00:45:01.286 --> 00:45:03.146 A:middle
the title Edit, and we'll pass

00:45:03.146 --> 00:45:05.076 A:middle
the two children that want it to

00:45:05.076 --> 00:45:07.306 A:middle
have, a UIAction, with the title

00:45:07.306 --> 00:45:09.046 A:middle
Copy, and a UIAction with the

00:45:09.046 --> 00:45:09.776 A:middle
title Duplicate.

00:45:12.836 --> 00:45:15.826 A:middle
Then we'll define our root menu.

00:45:16.876 --> 00:45:18.996 A:middle
It often doesn't make sense for

00:45:19.196 --> 00:45:20.846 A:middle
a root menu to have a title, so

00:45:20.846 --> 00:45:21.966 A:middle
we'll skip it here.

00:45:22.846 --> 00:45:24.146 A:middle
However, if you do want to pass

00:45:24.146 --> 00:45:25.726 A:middle
it a title, it'll be displayed

00:45:25.726 --> 00:45:27.146 A:middle
as a header above the actions

00:45:27.146 --> 00:45:27.556 A:middle
list.

00:45:28.006 --> 00:45:30.806 A:middle
And we'll pass it three children

00:45:30.806 --> 00:45:33.246 A:middle
here, a share action, the edit

00:45:33.246 --> 00:45:34.866 A:middle
menu that we just created, and

00:45:34.916 --> 00:45:36.736 A:middle
finally a delete action with a

00:45:36.736 --> 00:45:38.736 A:middle
destructive style to indicate to

00:45:38.736 --> 00:45:40.696 A:middle
our users that the action has

00:45:40.726 --> 00:45:41.866 A:middle
destructive consequences.

00:45:44.076 --> 00:45:45.626 A:middle
Finally, we'll create a

00:45:45.626 --> 00:45:47.146 A:middle
configuration with some

00:45:47.146 --> 00:45:49.036 A:middle
identifier and pass it our

00:45:49.036 --> 00:45:49.746 A:middle
action provider.

00:45:49.746 --> 00:45:51.436 A:middle
And that's it.

00:45:51.436 --> 00:45:53.806 A:middle
That's really all it takes to

00:45:53.806 --> 00:45:56.006 A:middle
create and display menus using

00:45:56.006 --> 00:45:57.606 A:middle
UIContextMenuInteraction.

00:45:58.186 --> 00:46:02.066 A:middle
But with a little bit more work,

00:45:58.186 --> 00:46:02.066 A:middle
But with a little bit more work,

00:46:03.346 --> 00:46:04.846 A:middle
we can take advantage of some of

00:46:04.846 --> 00:46:06.606 A:middle
the animation customization APIs

00:46:07.376 --> 00:46:08.616 A:middle
offered by the interaction

00:46:08.616 --> 00:46:10.596 A:middle
delegate to build some really

00:46:10.596 --> 00:46:11.806 A:middle
great, highly polished

00:46:11.806 --> 00:46:13.486 A:middle
animations that really

00:46:13.486 --> 00:46:14.526 A:middle
communicate meaning to our

00:46:14.526 --> 00:46:15.066 A:middle
users.

00:46:18.296 --> 00:46:19.786 A:middle
So, in this example here, I've

00:46:19.786 --> 00:46:21.116 A:middle
taken the same menu that we had

00:46:21.116 --> 00:46:23.356 A:middle
earlier, and I've used the

00:46:23.356 --> 00:46:24.746 A:middle
source presentation

00:46:24.826 --> 00:46:27.176 A:middle
customization API to make the

00:46:27.176 --> 00:46:30.016 A:middle
menu appear from the cell's icon

00:46:30.016 --> 00:46:32.626 A:middle
instead of from the entire cell,

00:46:32.626 --> 00:46:34.886 A:middle
and I've even customized the

00:46:34.886 --> 00:46:36.486 A:middle
background color and even given

00:46:36.756 --> 00:46:38.896 A:middle
the preview a nice circular

00:46:39.806 --> 00:46:39.906 A:middle
shape.

00:46:41.276 --> 00:46:43.276 A:middle
These customization APIs are

00:46:43.276 --> 00:46:45.426 A:middle
built on a UITargetedPreview.

00:46:45.796 --> 00:46:47.366 A:middle
This is a new API that's being

00:46:47.366 --> 00:46:49.386 A:middle
introduced in iOS 13.

00:46:50.066 --> 00:46:50.866 A:middle
Now, if you've adopted

00:46:50.866 --> 00:46:52.066 A:middle
UIDragInteraction and

00:46:52.066 --> 00:46:53.796 A:middle
UIDropInteraction, and you built

00:46:53.796 --> 00:46:55.386 A:middle
some custom Drag or Drop

00:46:55.436 --> 00:46:57.046 A:middle
Previews in your app, then this

00:46:57.046 --> 00:46:58.196 A:middle
is probably very familiar.

00:46:59.316 --> 00:47:00.276 A:middle
We've essentially taken

00:46:59.316 --> 00:47:00.276 A:middle
We've essentially taken

00:47:00.276 --> 00:47:02.106 A:middle
UITargetedDragPreview and

00:47:02.106 --> 00:47:03.756 A:middle
generalized it into a more

00:47:04.136 --> 00:47:05.836 A:middle
general API that can be used by

00:47:05.896 --> 00:47:06.856 A:middle
other interactions.

00:47:08.326 --> 00:47:10.096 A:middle
UITargetedDragPreview is now a

00:47:10.156 --> 00:47:12.136 A:middle
subclass of UITargetedPreview.

00:47:12.416 --> 00:47:14.096 A:middle
So, if you already have

00:47:14.416 --> 00:47:16.416 A:middle
meaningful drag previews that

00:47:16.526 --> 00:47:17.756 A:middle
make sense for your menus

00:47:17.756 --> 00:47:19.236 A:middle
because they're triggered from

00:47:19.236 --> 00:47:21.116 A:middle
the same item, then you can

00:47:21.116 --> 00:47:22.426 A:middle
reuse that code without doing

00:47:22.426 --> 00:47:23.786 A:middle
any extra work.

00:47:27.176 --> 00:47:29.106 A:middle
To make adopting this in your

00:47:29.106 --> 00:47:30.656 A:middle
apps even easier, to make it

00:47:30.656 --> 00:47:31.986 A:middle
easier for you to bring up menus

00:47:31.986 --> 00:47:32.796 A:middle
in some of the most common

00:47:32.796 --> 00:47:34.656 A:middle
cases, we're also introducing

00:47:34.656 --> 00:47:36.176 A:middle
some convenience API for

00:47:36.176 --> 00:47:37.346 A:middle
UICollectionView and

00:47:37.346 --> 00:47:38.246 A:middle
UITableView.

00:47:39.436 --> 00:47:40.816 A:middle
All that's needed to bring up a

00:47:40.816 --> 00:47:42.916 A:middle
menu from your app, from your

00:47:42.916 --> 00:47:45.706 A:middle
Table View on all the platforms

00:47:45.706 --> 00:47:47.056 A:middle
that your app runs on is to

00:47:47.056 --> 00:47:48.766 A:middle
implement a single extra method

00:47:48.766 --> 00:47:49.526 A:middle
on its delegate.

00:47:50.556 --> 00:47:52.296 A:middle
Here, you'll once again return a

00:47:52.296 --> 00:47:53.566 A:middle
configuration if you have a menu

00:47:53.566 --> 00:47:56.246 A:middle
to display or return nil to

00:47:56.246 --> 00:47:57.216 A:middle
indicate that there's nothing to

00:47:57.216 --> 00:47:57.586 A:middle
be shown.

00:47:59.416 --> 00:48:00.946 A:middle
So, out of the box, these

00:47:59.416 --> 00:48:00.946 A:middle
So, out of the box, these

00:48:00.946 --> 00:48:02.366 A:middle
convenience APIs give you some

00:48:02.366 --> 00:48:04.956 A:middle
polished default animations with

00:48:04.956 --> 00:48:06.766 A:middle
menus presenting from Table or

00:48:06.766 --> 00:48:07.896 A:middle
Collection View cells and then

00:48:07.896 --> 00:48:09.116 A:middle
returning back to them when

00:48:09.116 --> 00:48:09.646 A:middle
dismissed.

00:48:10.266 --> 00:48:11.736 A:middle
We're also providing the same

00:48:11.736 --> 00:48:12.866 A:middle
custom presentation and

00:48:12.866 --> 00:48:14.366 A:middle
dismissal hooks so you could

00:48:14.366 --> 00:48:17.336 A:middle
build your custom appearance and

00:48:17.336 --> 00:48:18.756 A:middle
disappearance animations.

00:48:21.406 --> 00:48:22.346 A:middle
Now, you're probably thinking to

00:48:22.346 --> 00:48:24.136 A:middle
yourself, this sounds a lot like

00:48:24.216 --> 00:48:25.566 A:middle
Peek and Pop in some ways.

00:48:26.656 --> 00:48:29.926 A:middle
Well, we noticed that too.

00:48:32.546 --> 00:48:33.856 A:middle
However, since this new API

00:48:34.186 --> 00:48:35.856 A:middle
provides a much larger feature

00:48:35.856 --> 00:48:37.606 A:middle
set and works on multiple

00:48:37.606 --> 00:48:40.486 A:middle
platforms, we are deprecating

00:48:40.486 --> 00:48:41.926 A:middle
UIViewController previewing in

00:48:42.096 --> 00:48:42.806 A:middle
iOS 13.

00:48:43.676 --> 00:48:45.046 A:middle
So, go and replace your

00:48:45.046 --> 00:48:46.526 A:middle
implementation of Peek and Pop

00:48:46.526 --> 00:48:48.346 A:middle
with UIContextMenuInteraction

00:48:48.966 --> 00:48:50.566 A:middle
and give your users a consistent

00:48:50.566 --> 00:48:53.366 A:middle
experience in your app across

00:48:53.366 --> 00:48:54.256 A:middle
all devices.

00:48:54.796 --> 00:48:58.326 A:middle
You might also want to consider

00:48:58.326 --> 00:48:59.986 A:middle
replacing any long-press driven

00:48:59.986 --> 00:49:02.606 A:middle
menus in your apps with this new

00:48:59.986 --> 00:49:02.606 A:middle
menus in your apps with this new

00:49:02.606 --> 00:49:04.826 A:middle
interaction to take advantage of

00:49:04.826 --> 00:49:06.286 A:middle
the new feature set.

00:49:07.316 --> 00:49:09.556 A:middle
And if you have menus that

00:49:09.556 --> 00:49:10.616 A:middle
you're currently displaying

00:49:10.616 --> 00:49:12.736 A:middle
alongside Drag and Drop, this is

00:49:12.736 --> 00:49:15.576 A:middle
a great fluid solution that has

00:49:15.576 --> 00:49:17.566 A:middle
coordinated gestures and a fully

00:49:17.566 --> 00:49:18.926 A:middle
integrated experience that your

00:49:19.456 --> 00:49:20.566 A:middle
users are going to come to

00:49:20.566 --> 00:49:24.636 A:middle
expect starting in iOS 13.

00:49:25.086 --> 00:49:26.156 A:middle
All right, so now that you're

00:49:26.266 --> 00:49:27.776 A:middle
equipped with all this great new

00:49:27.776 --> 00:49:29.196 A:middle
knowledge, you should go and get

00:49:29.196 --> 00:49:30.986 A:middle
your apps ready for iOS 13.

00:49:31.616 --> 00:49:32.706 A:middle
Ensure that they're ready for

00:49:32.706 --> 00:49:33.726 A:middle
the future by making them

00:49:33.726 --> 00:49:35.986 A:middle
flexible, take advantage of the

00:49:35.986 --> 00:49:37.126 A:middle
new bar appearance and

00:49:37.126 --> 00:49:39.046 A:middle
presentation APIs to give your

00:49:39.386 --> 00:49:41.336 A:middle
apps that polished modern look

00:49:41.336 --> 00:49:42.306 A:middle
that users are going to come to

00:49:42.306 --> 00:49:42.566 A:middle
expect.

00:49:43.856 --> 00:49:45.596 A:middle
Go build the search experience

00:49:45.596 --> 00:49:46.876 A:middle
you've always wanted to build

00:49:47.176 --> 00:49:48.706 A:middle
using the great new search APIs,

00:49:48.706 --> 00:49:51.256 A:middle
and give your apps some great

00:49:51.256 --> 00:49:52.466 A:middle
features with the new

00:49:52.466 --> 00:49:53.836 A:middle
productivity gestures and

00:49:53.836 --> 00:49:54.666 A:middle
context menus.

00:49:55.216 --> 00:49:57.826 A:middle
If you have any questions about

00:49:57.866 --> 00:50:00.466 A:middle
these topics or anything else

00:49:57.866 --> 00:50:00.466 A:middle
these topics or anything else

00:50:00.466 --> 00:50:02.246 A:middle
related to UIKit, please come to

00:50:02.246 --> 00:50:03.966 A:middle
the labs tomorrow, and for

00:50:03.966 --> 00:50:04.946 A:middle
additional information about the

00:50:05.006 --> 00:50:07.156 A:middle
session, you can find it at the

00:50:07.156 --> 00:50:07.916 A:middle
session's website.

00:50:08.936 --> 00:50:09.936 A:middle
Thanks for coming by, and I hope

00:50:09.936 --> 00:50:10.636 A:middle
you enjoy the rest of the

00:50:10.636 --> 00:50:10.936 A:middle
conference.

00:50:11.516 --> 00:50:20.560 A:middle
[ Applause ]
