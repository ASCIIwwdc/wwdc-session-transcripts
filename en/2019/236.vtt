WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:08.031 --> 00:00:10.031 A:middle
[ Applause ]

00:00:10.046 --> 00:00:10.866 A:middle
&gt;&gt; Hi, everyone.

00:00:10.866 --> 00:00:13.136 A:middle
Thank you for coming to this

00:00:13.136 --> 00:00:13.506 A:middle
session.

00:00:13.866 --> 00:00:15.056 A:middle
I know it's been a long day.

00:00:15.796 --> 00:00:17.236 A:middle
My name is Alexander Jakobsen

00:00:17.236 --> 00:00:18.176 A:middle
and I'm an engineer on the

00:00:18.176 --> 00:00:18.976 A:middle
MapKit team.

00:00:21.486 --> 00:00:23.436 A:middle
Apple Maps helps millions of

00:00:23.436 --> 00:00:25.436 A:middle
people around the world to

00:00:25.436 --> 00:00:27.386 A:middle
navigate and explore the world

00:00:27.536 --> 00:00:28.406 A:middle
every single day.

00:00:29.096 --> 00:00:31.616 A:middle
And thousands of developers like

00:00:31.616 --> 00:00:34.206 A:middle
you are using MapKit to

00:00:34.206 --> 00:00:36.086 A:middle
integrate Apple Maps in your

00:00:36.086 --> 00:00:38.146 A:middle
apps where you help your users

00:00:38.526 --> 00:00:40.556 A:middle
with all kinds of amazing

00:00:40.556 --> 00:00:41.666 A:middle
location services.

00:00:42.796 --> 00:00:44.646 A:middle
And last year, we introduced

00:00:44.646 --> 00:00:47.146 A:middle
MapKit JS allowing you to bring

00:00:47.146 --> 00:00:49.066 A:middle
Apple Maps to your websites as

00:00:49.066 --> 00:00:49.356 A:middle
well.

00:00:50.896 --> 00:00:52.256 A:middle
Hopefully you watched the

00:00:52.346 --> 00:00:54.526 A:middle
keynote this Monday and saw all

00:00:54.526 --> 00:00:56.016 A:middle
the great new features we're

00:00:56.016 --> 00:00:58.246 A:middle
adding to Maps in iOS 13.

00:00:59.296 --> 00:01:00.676 A:middle
We're very excited about where

00:00:59.296 --> 00:01:00.676 A:middle
We're very excited about where

00:01:00.676 --> 00:01:01.606 A:middle
Maps is going.

00:01:02.226 --> 00:01:04.096 A:middle
But on top of everything you saw

00:01:04.196 --> 00:01:05.736 A:middle
in the keynote, we have been

00:01:05.736 --> 00:01:07.696 A:middle
very busy this year building a

00:01:07.696 --> 00:01:09.976 A:middle
number of new features in MapKit

00:01:09.976 --> 00:01:11.796 A:middle
and MapKit JS that you have been

00:01:11.796 --> 00:01:12.396 A:middle
asking for.

00:01:13.306 --> 00:01:15.606 A:middle
So, I'm very excited to finally

00:01:15.606 --> 00:01:17.286 A:middle
be able to tell you what's new

00:01:17.286 --> 00:01:19.766 A:middle
in MapKit and MapKit JS.

00:01:20.376 --> 00:01:21.636 A:middle
But before we get into all the

00:01:21.636 --> 00:01:23.406 A:middle
new features, I want to take a

00:01:23.406 --> 00:01:25.016 A:middle
moment and talk about our

00:01:25.016 --> 00:01:27.006 A:middle
brand-new base map.

00:01:28.026 --> 00:01:30.746 A:middle
As mentioned in the keynote, we

00:01:30.746 --> 00:01:32.616 A:middle
have rebuilt our map from the

00:01:32.616 --> 00:01:35.046 A:middle
ground up covering more than 4

00:01:35.116 --> 00:01:37.556 A:middle
million miles of road so far in

00:01:37.556 --> 00:01:39.756 A:middle
our fleet of custom cars and

00:01:39.756 --> 00:01:40.126 A:middle
planes.

00:01:41.666 --> 00:01:43.176 A:middle
The new map is incredibly

00:01:43.176 --> 00:01:44.886 A:middle
detailed and you'll see more

00:01:44.886 --> 00:01:47.756 A:middle
features than ever before like

00:01:48.966 --> 00:01:51.196 A:middle
baseball fields, running tracks,

00:01:51.426 --> 00:01:53.076 A:middle
walking paths and swimming

00:01:53.106 --> 00:01:53.596 A:middle
pools.

00:01:54.086 --> 00:01:56.266 A:middle
And you will see major

00:01:56.266 --> 00:01:58.276 A:middle
improvements to the richness and

00:01:58.276 --> 00:02:00.996 A:middle
details in parks, greenways,

00:01:58.276 --> 00:02:00.996 A:middle
details in parks, greenways,

00:02:01.396 --> 00:02:04.636 A:middle
beaches and rural areas, as well

00:02:04.636 --> 00:02:06.816 A:middle
as improved roads, buildings,

00:02:07.086 --> 00:02:09.006 A:middle
city parks and so much more.

00:02:11.096 --> 00:02:12.636 A:middle
And we've also improved the

00:02:12.636 --> 00:02:14.996 A:middle
address detail a lot, which

00:02:14.996 --> 00:02:17.086 A:middle
means more accurate search and

00:02:17.366 --> 00:02:18.486 A:middle
direction results.

00:02:18.766 --> 00:02:21.496 A:middle
And the best part is as we roll

00:02:21.496 --> 00:02:23.026 A:middle
out these improvements to Apple

00:02:23.026 --> 00:02:25.016 A:middle
Maps, they become automatically

00:02:25.016 --> 00:02:26.876 A:middle
available to you through MapKit

00:02:26.966 --> 00:02:28.686 A:middle
and MapKit JS.

00:02:29.296 --> 00:02:30.686 A:middle
The updated map will be

00:02:30.686 --> 00:02:32.636 A:middle
available in the entire US at

00:02:32.636 --> 00:02:35.226 A:middle
the end of 2019 and we're adding

00:02:35.226 --> 00:02:38.366 A:middle
additional countries in 2020.

00:02:38.716 --> 00:02:40.096 A:middle
We're also making the map

00:02:40.096 --> 00:02:43.026 A:middle
available to you in Dark Mode on

00:02:43.136 --> 00:02:48.256 A:middle
iOS, tvOS, macOS and the web.

00:02:48.956 --> 00:02:52.616 A:middle
And in this session, we will be

00:02:52.616 --> 00:02:54.336 A:middle
using a fictitious WWDC

00:02:54.336 --> 00:02:57.406 A:middle
companion app to demonstrate

00:02:57.406 --> 00:02:58.476 A:middle
some of the topics we're going

00:02:58.476 --> 00:02:58.826 A:middle
to cover.

00:03:00.086 --> 00:03:01.266 A:middle
This app will be available as

00:03:01.266 --> 00:03:02.996 A:middle
sample code from the session web

00:03:02.996 --> 00:03:06.136 A:middle
page, but let's take a quick

00:03:06.136 --> 00:03:08.716 A:middle
look at what this app is all

00:03:08.716 --> 00:03:09.096 A:middle
about.

00:03:09.886 --> 00:03:11.626 A:middle
There are three main features

00:03:11.856 --> 00:03:13.676 A:middle
intended to bring additional

00:03:13.676 --> 00:03:15.546 A:middle
value to conference attendees

00:03:15.636 --> 00:03:16.426 A:middle
like yourself.

00:03:17.766 --> 00:03:19.036 A:middle
The first feature is the

00:03:19.036 --> 00:03:20.596 A:middle
accommodation feature or

00:03:20.596 --> 00:03:22.566 A:middle
accommodation finder where

00:03:22.566 --> 00:03:24.836 A:middle
attendees can find accommodation

00:03:24.836 --> 00:03:25.746 A:middle
for the duration of the

00:03:25.746 --> 00:03:27.766 A:middle
conference through the companion

00:03:27.766 --> 00:03:28.616 A:middle
app partners.

00:03:29.356 --> 00:03:32.166 A:middle
This view is simply a map with a

00:03:32.166 --> 00:03:33.916 A:middle
number of annotations added to

00:03:34.576 --> 00:03:34.646 A:middle
it.

00:03:35.576 --> 00:03:36.986 A:middle
The second feature is called

00:03:36.986 --> 00:03:37.936 A:middle
After Hours.

00:03:38.296 --> 00:03:39.546 A:middle
And it's a feature where

00:03:39.546 --> 00:03:41.686 A:middle
attendees can find a restaurant

00:03:41.686 --> 00:03:43.646 A:middle
or a bar where they're meeting

00:03:43.646 --> 00:03:45.256 A:middle
up with other attendees after

00:03:45.256 --> 00:03:46.146 A:middle
conference hours.

00:03:47.516 --> 00:03:49.306 A:middle
As the user types in the search

00:03:49.306 --> 00:03:51.696 A:middle
field, relevant suggestions on

00:03:51.696 --> 00:03:53.846 A:middle
restaurants and bars are shown

00:03:53.846 --> 00:03:56.076 A:middle
us suggestions and search

00:03:56.076 --> 00:03:57.416 A:middle
results are displayed as

00:03:57.416 --> 00:03:58.836 A:middle
annotation views on the map.

00:03:59.436 --> 00:04:02.626 A:middle
And the last feature is the

00:03:59.436 --> 00:04:02.626 A:middle
And the last feature is the

00:04:02.626 --> 00:04:03.326 A:middle
event view.

00:04:04.496 --> 00:04:06.716 A:middle
The event view shows a simple

00:04:06.716 --> 00:04:08.836 A:middle
map of the companion app event

00:04:08.836 --> 00:04:09.896 A:middle
that takes place the evening

00:04:09.896 --> 00:04:11.746 A:middle
before the official WWDC Bash.

00:04:12.766 --> 00:04:14.386 A:middle
This feature focuses the map

00:04:14.386 --> 00:04:16.176 A:middle
view on the location of the

00:04:16.176 --> 00:04:18.555 A:middle
event and renders a number of

00:04:18.555 --> 00:04:20.676 A:middle
annotations and overlays to

00:04:20.676 --> 00:04:22.216 A:middle
represent the food and drinks

00:04:22.216 --> 00:04:23.866 A:middle
tents, as well as the stage.

00:04:24.426 --> 00:04:28.046 A:middle
So, for the remainder of this

00:04:28.046 --> 00:04:30.186 A:middle
session, we'll go through a

00:04:30.186 --> 00:04:31.966 A:middle
little bit more details on the

00:04:31.966 --> 00:04:33.506 A:middle
most exciting new features in

00:04:33.506 --> 00:04:34.586 A:middle
MapKit and MapKit JS.

00:04:34.586 --> 00:04:37.586 A:middle
And we have a lot of things to

00:04:37.586 --> 00:04:39.096 A:middle
cover today like our new

00:04:39.096 --> 00:04:41.386 A:middle
snapshot service, new APIs for

00:04:41.386 --> 00:04:44.156 A:middle
filtering and increased map view

00:04:44.156 --> 00:04:45.156 A:middle
camera control.

00:04:46.226 --> 00:04:47.916 A:middle
So, let's start out with talking

00:04:47.916 --> 00:04:48.986 A:middle
about snapshots.

00:04:49.726 --> 00:04:52.086 A:middle
Snapshots are simply static

00:04:52.086 --> 00:04:54.636 A:middle
images of the map and you may be

00:04:54.636 --> 00:04:55.676 A:middle
familiar with the map

00:04:55.676 --> 00:04:56.996 A:middle
snapshotter that has been

00:04:56.996 --> 00:04:59.436 A:middle
available in MapKit for a number

00:04:59.436 --> 00:04:59.916 A:middle
of years.

00:05:01.126 --> 00:05:03.656 A:middle
We use snapshots in our apps but

00:05:03.656 --> 00:05:05.686 A:middle
we don't need user interaction

00:05:05.826 --> 00:05:08.166 A:middle
in our maps, like in contacts,

00:05:08.706 --> 00:05:10.356 A:middle
and messages, and calendar.

00:05:10.926 --> 00:05:13.566 A:middle
But since the snapshotter is

00:05:13.566 --> 00:05:15.626 A:middle
part of MapKit, you can only

00:05:15.626 --> 00:05:18.106 A:middle
create the snapshots in native

00:05:18.106 --> 00:05:18.626 A:middle
apps.

00:05:19.366 --> 00:05:20.936 A:middle
But this week, we announced a

00:05:20.936 --> 00:05:22.886 A:middle
new service that lets you create

00:05:22.886 --> 00:05:25.506 A:middle
and use snapshots in other

00:05:25.506 --> 00:05:26.616 A:middle
environments as well.

00:05:27.556 --> 00:05:28.946 A:middle
And this new service is called

00:05:29.726 --> 00:05:31.586 A:middle
Maps Web Snapshots.

00:05:32.406 --> 00:05:34.766 A:middle
To fetch a Maps Web Snapshot,

00:05:35.146 --> 00:05:36.916 A:middle
all you need is a URL.

00:05:37.696 --> 00:05:39.486 A:middle
And the parameters of that URL

00:05:39.776 --> 00:05:42.056 A:middle
dictates the characteristics of

00:05:42.056 --> 00:05:44.416 A:middle
the image such as its center

00:05:44.416 --> 00:05:46.696 A:middle
coordinate, its size.

00:05:47.306 --> 00:05:48.866 A:middle
And if you want this same

00:05:48.866 --> 00:05:50.736 A:middle
snapshots but with the map in

00:05:50.736 --> 00:05:54.386 A:middle
Dark Mode, you can add the color

00:05:54.386 --> 00:05:55.946 A:middle
scheme parameter with the value

00:05:55.946 --> 00:05:56.366 A:middle
dark.

00:05:58.716 --> 00:06:01.546 A:middle
All snapshot URLs requires a

00:05:58.716 --> 00:06:01.546 A:middle
All snapshot URLs requires a

00:06:01.546 --> 00:06:03.856 A:middle
signature which you can generate

00:06:03.856 --> 00:06:06.346 A:middle
after obtaining a MapKit JS API

00:06:06.346 --> 00:06:08.186 A:middle
key through the apple developer

00:06:08.186 --> 00:06:08.636 A:middle
program.

00:06:09.206 --> 00:06:12.466 A:middle
As part of the MapKit JS beta,

00:06:13.436 --> 00:06:15.956 A:middle
you can now request 25,000

00:06:15.956 --> 00:06:18.316 A:middle
snapshots per day, which we're

00:06:18.316 --> 00:06:19.386 A:middle
hoping it will be more than

00:06:19.386 --> 00:06:20.676 A:middle
enough to cover the needs of

00:06:20.796 --> 00:06:21.416 A:middle
people out there.

00:06:21.996 --> 00:06:26.066 A:middle
You can use map snapshots any

00:06:26.066 --> 00:06:27.926 A:middle
place where you would use a URL

00:06:27.926 --> 00:06:29.726 A:middle
to display an image like in an

00:06:29.726 --> 00:06:32.366 A:middle
email, in a URL preview and of

00:06:32.366 --> 00:06:33.956 A:middle
course web pages.

00:06:34.806 --> 00:06:37.776 A:middle
And to help you get started with

00:06:37.776 --> 00:06:39.386 A:middle
generating snapshot URLS, we

00:06:39.386 --> 00:06:41.356 A:middle
have built this tool for you and

00:06:41.356 --> 00:06:43.126 A:middle
you can find that one and more

00:06:43.126 --> 00:06:44.956 A:middle
information about the MapKit JS

00:06:44.996 --> 00:06:47.566 A:middle
beta program on the MapKit JS

00:06:47.566 --> 00:06:48.486 A:middle
developer page.

00:06:52.196 --> 00:06:53.846 A:middle
So, that's how you can create

00:06:53.846 --> 00:06:55.326 A:middle
Maps Web Snapshots.

00:06:56.696 --> 00:06:57.806 A:middle
So, let's move on and talk a

00:06:57.806 --> 00:06:59.706 A:middle
little bit more about the map in

00:06:59.706 --> 00:07:00.276 A:middle
Dark Mode.

00:06:59.706 --> 00:07:00.276 A:middle
Dark Mode.

00:07:01.296 --> 00:07:02.896 A:middle
Last year, we introduced the map

00:07:02.896 --> 00:07:05.286 A:middle
in Dark Mode for-- on macOS.

00:07:05.666 --> 00:07:06.776 A:middle
And this year, we're bringing it

00:07:06.776 --> 00:07:09.486 A:middle
to iOS, tvOS and the web.

00:07:10.446 --> 00:07:11.966 A:middle
So, what do you need to do to

00:07:11.966 --> 00:07:13.616 A:middle
use the map in Dark Mode in your

00:07:14.576 --> 00:07:14.676 A:middle
apps?

00:07:15.606 --> 00:07:17.916 A:middle
Well, MKMapView will

00:07:17.916 --> 00:07:20.086 A:middle
automatically adapt to the user

00:07:20.086 --> 00:07:22.006 A:middle
interface style in the trait

00:07:22.006 --> 00:07:23.636 A:middle
collection applied to its view

00:07:23.636 --> 00:07:24.176 A:middle
hierarchy.

00:07:25.566 --> 00:07:28.876 A:middle
So, if your view is dark, the

00:07:28.876 --> 00:07:29.826 A:middle
map view will adapt

00:07:30.166 --> 00:07:30.896 A:middle
automatically.

00:07:31.396 --> 00:07:33.526 A:middle
And this should be familiar to

00:07:33.526 --> 00:07:35.186 A:middle
you if you have used MapKit on

00:07:35.186 --> 00:07:36.506 A:middle
tvOS in the past.

00:07:37.266 --> 00:07:38.116 A:middle
And for those of you who are

00:07:38.116 --> 00:07:40.426 A:middle
wondering, yes, this improved

00:07:40.426 --> 00:07:42.326 A:middle
map will replace the old one

00:07:42.326 --> 00:07:42.866 A:middle
automatically.

00:07:46.416 --> 00:07:48.176 A:middle
As I mentioned before, if you

00:07:48.176 --> 00:07:49.906 A:middle
don't need user interaction in

00:07:49.906 --> 00:07:52.416 A:middle
your maps, the right tool to use

00:07:52.466 --> 00:07:53.966 A:middle
is the snapshotter.

00:07:54.816 --> 00:07:56.946 A:middle
But unlike the map view, the

00:07:56.946 --> 00:07:59.566 A:middle
snapshotter is not aware of the

00:07:59.566 --> 00:08:01.286 A:middle
view hierarchy in your apps.

00:07:59.566 --> 00:08:01.286 A:middle
view hierarchy in your apps.

00:08:01.816 --> 00:08:03.796 A:middle
It's therefore important that

00:08:03.796 --> 00:08:05.906 A:middle
you configure your snapshotter

00:08:06.416 --> 00:08:08.356 A:middle
to ensure that the snapshot

00:08:08.466 --> 00:08:10.886 A:middle
matches the user interface style

00:08:10.886 --> 00:08:11.696 A:middle
of your view hierarchy.

00:08:12.136 --> 00:08:13.346 A:middle
And you do this using the

00:08:13.346 --> 00:08:14.456 A:middle
snapshotter options.

00:08:15.076 --> 00:08:16.206 A:middle
So, let's look an example of how

00:08:16.206 --> 00:08:16.766 A:middle
to do this.

00:08:18.186 --> 00:08:19.316 A:middle
First, you need to create your

00:08:19.316 --> 00:08:21.616 A:middle
snapshotter options and you need

00:08:21.616 --> 00:08:23.066 A:middle
to configure what area of the

00:08:23.066 --> 00:08:24.636 A:middle
world you want to snapshot.

00:08:25.936 --> 00:08:27.276 A:middle
You also need to provide the

00:08:27.366 --> 00:08:28.776 A:middle
size of the snapshots.

00:08:30.536 --> 00:08:33.515 A:middle
Similar to a view, you configure

00:08:33.515 --> 00:08:35.076 A:middle
the appearance of your snapshot

00:08:35.326 --> 00:08:38.015 A:middle
using a user interface style in

00:08:38.015 --> 00:08:38.956 A:middle
a trait collection.

00:08:39.796 --> 00:08:41.086 A:middle
So, if you have a view where you

00:08:41.086 --> 00:08:42.986 A:middle
intend to present your snapshot,

00:08:42.986 --> 00:08:44.866 A:middle
the easiest way to configure

00:08:44.866 --> 00:08:46.666 A:middle
your options is to grab the

00:08:46.666 --> 00:08:48.676 A:middle
trait collection of that target

00:08:48.766 --> 00:08:48.996 A:middle
view.

00:08:49.946 --> 00:08:51.596 A:middle
This will ensure that the

00:08:51.706 --> 00:08:53.736 A:middle
snapshot you create actually

00:08:53.736 --> 00:08:56.006 A:middle
matches a user interface style

00:08:56.006 --> 00:08:56.986 A:middle
of your view hierarchy.

00:08:58.316 --> 00:08:59.686 A:middle
But remember that users can

00:08:59.686 --> 00:09:02.036 A:middle
switch in or out of iOS's Dark

00:08:59.686 --> 00:09:02.036 A:middle
switch in or out of iOS's Dark

00:09:02.036 --> 00:09:03.586 A:middle
Mode as they're using your app.

00:09:04.286 --> 00:09:05.526 A:middle
So, make sure that you observe

00:09:05.526 --> 00:09:07.396 A:middle
changes to the trait collection

00:09:07.396 --> 00:09:08.746 A:middle
in your view hierarchy so you

00:09:08.746 --> 00:09:11.586 A:middle
can regenerate your snapshot if

00:09:11.586 --> 00:09:12.686 A:middle
the user interface style

00:09:12.686 --> 00:09:13.306 A:middle
changes.

00:09:16.176 --> 00:09:17.956 A:middle
In some cases, you may not

00:09:17.956 --> 00:09:20.166 A:middle
actually have a target view for

00:09:20.166 --> 00:09:21.746 A:middle
your snapshot, maybe because

00:09:21.746 --> 00:09:23.276 A:middle
you're sharing it to another

00:09:23.276 --> 00:09:23.916 A:middle
device.

00:09:25.086 --> 00:09:26.156 A:middle
In that case, you can instead

00:09:26.156 --> 00:09:27.976 A:middle
just create a UITraitCollection

00:09:28.276 --> 00:09:29.526 A:middle
with the appropriate user

00:09:29.526 --> 00:09:30.416 A:middle
interface style.

00:09:32.356 --> 00:09:33.936 A:middle
And once you have configured

00:09:33.936 --> 00:09:35.726 A:middle
your options, you simply path

00:09:35.726 --> 00:09:36.956 A:middle
into your snapshotter at

00:09:37.006 --> 00:09:39.116 A:middle
creation time and then you tell

00:09:39.116 --> 00:09:40.836 A:middle
your snapshotter to create that

00:09:40.836 --> 00:09:41.636 A:middle
snapshot for you.

00:09:46.286 --> 00:09:48.486 A:middle
And that's how easy it is to use

00:09:48.576 --> 00:09:50.366 A:middle
the map in Dark Mode in your

00:09:50.366 --> 00:09:50.816 A:middle
apps.

00:09:51.366 --> 00:09:53.726 A:middle
So, the next thing I want to

00:09:53.726 --> 00:09:56.806 A:middle
talk about is a set of new APIs

00:09:56.856 --> 00:09:59.386 A:middle
in MapKit and MapKit JS that

00:09:59.386 --> 00:10:00.796 A:middle
lets you take control over the

00:09:59.386 --> 00:10:00.796 A:middle
lets you take control over the

00:10:00.856 --> 00:10:02.376 A:middle
point of interest icons that are

00:10:02.376 --> 00:10:03.976 A:middle
shown in your map views.

00:10:06.126 --> 00:10:07.276 A:middle
If you've ever looked at our

00:10:07.276 --> 00:10:08.806 A:middle
maps, you've probably seen that

00:10:08.806 --> 00:10:10.296 A:middle
apart from all the roads,

00:10:10.296 --> 00:10:12.456 A:middle
buildings, parks and water,

00:10:12.746 --> 00:10:14.236 A:middle
there's all these little icons

00:10:14.236 --> 00:10:16.566 A:middle
representing restaurants,

00:10:16.966 --> 00:10:19.466 A:middle
museums, parking and so on.

00:10:20.106 --> 00:10:21.676 A:middle
And this information is great

00:10:21.746 --> 00:10:24.126 A:middle
for users to better understand

00:10:24.126 --> 00:10:25.516 A:middle
what the area they're looking at

00:10:25.516 --> 00:10:27.046 A:middle
is all about.

00:10:28.296 --> 00:10:30.016 A:middle
But if you're building a feature

00:10:30.326 --> 00:10:32.596 A:middle
where you're promoting hotels

00:10:32.596 --> 00:10:35.346 A:middle
and hostels for example, you

00:10:35.346 --> 00:10:36.916 A:middle
probably have your own data that

00:10:36.916 --> 00:10:38.106 A:middle
you will be adding to the map

00:10:38.106 --> 00:10:39.526 A:middle
view as annotation views.

00:10:40.376 --> 00:10:41.606 A:middle
And in that case, you may not

00:10:41.606 --> 00:10:43.526 A:middle
want these built-in icons to

00:10:43.526 --> 00:10:45.566 A:middle
show either because they're

00:10:45.566 --> 00:10:47.236 A:middle
duplicating the information

00:10:47.236 --> 00:10:49.476 A:middle
you're adding or because you

00:10:49.476 --> 00:10:50.836 A:middle
don't want to show businesses

00:10:50.836 --> 00:10:52.026 A:middle
that are not connected to your

00:10:52.026 --> 00:10:52.796 A:middle
service.

00:10:54.466 --> 00:10:56.186 A:middle
In the past, your only option

00:10:56.186 --> 00:10:58.376 A:middle
has been to turn off all the

00:10:58.376 --> 00:11:00.546 A:middle
point of interest icons but that

00:10:58.376 --> 00:11:00.546 A:middle
point of interest icons but that

00:11:00.546 --> 00:11:03.166 A:middle
means that your users are losing

00:11:03.166 --> 00:11:04.416 A:middle
out on a lot of valuable

00:11:04.416 --> 00:11:05.026 A:middle
context.

00:11:06.066 --> 00:11:07.436 A:middle
So what you want to do instead

00:11:07.836 --> 00:11:09.356 A:middle
is to filter those point of

00:11:09.356 --> 00:11:11.086 A:middle
interest icons based on their

00:11:11.086 --> 00:11:11.976 A:middle
categories.

00:11:13.336 --> 00:11:15.856 A:middle
So, MapKit and MapKit JS now

00:11:15.856 --> 00:11:18.736 A:middle
expose a list of categories that

00:11:18.736 --> 00:11:20.036 A:middle
we think you will find useful

00:11:20.036 --> 00:11:22.026 A:middle
when you're building your apps

00:11:22.526 --> 00:11:26.126 A:middle
[applause].

00:11:26.626 --> 00:11:28.356 A:middle
And this is obviously not an

00:11:28.356 --> 00:11:29.676 A:middle
all-inclusive list.

00:11:29.886 --> 00:11:31.176 A:middle
So if you see one that is

00:11:31.176 --> 00:11:32.946 A:middle
missing, come by our lab

00:11:32.946 --> 00:11:34.886 A:middle
tomorrow or send us your

00:11:34.886 --> 00:11:37.266 A:middle
feedback and most importantly,

00:11:37.266 --> 00:11:39.356 A:middle
tell us about your use case.

00:11:39.906 --> 00:11:43.576 A:middle
So, you use these categories to

00:11:43.576 --> 00:11:45.846 A:middle
create a pointOfInterestFilter.

00:11:46.396 --> 00:11:47.906 A:middle
And when you create your filter,

00:11:47.906 --> 00:11:49.346 A:middle
you can configure it to either

00:11:49.376 --> 00:11:51.736 A:middle
include categories or exclude

00:11:51.736 --> 00:11:52.426 A:middle
categories.

00:11:53.206 --> 00:11:54.066 A:middle
So let's take a look at a few

00:11:54.066 --> 00:11:55.846 A:middle
examples of this.

00:11:56.476 --> 00:11:58.506 A:middle
By default, the map view does

00:11:58.506 --> 00:12:00.746 A:middle
not apply any filter at all.

00:11:58.506 --> 00:12:00.746 A:middle
not apply any filter at all.

00:12:00.746 --> 00:12:01.836 A:middle
So, all the point of interest

00:12:01.836 --> 00:12:03.256 A:middle
icons are showing.

00:12:04.236 --> 00:12:05.926 A:middle
But in our case, we wanted

00:12:05.926 --> 00:12:07.646 A:middle
hotels and hostel and the like

00:12:07.806 --> 00:12:09.556 A:middle
to not actually show.

00:12:10.396 --> 00:12:11.576 A:middle
And you can achieve this by

00:12:11.576 --> 00:12:13.936 A:middle
creating an exclusion filter

00:12:14.136 --> 00:12:15.506 A:middle
with the category hotel.

00:12:16.726 --> 00:12:18.206 A:middle
This ensures that no hotels or

00:12:18.206 --> 00:12:19.736 A:middle
hostels are shown but the rest

00:12:19.736 --> 00:12:21.186 A:middle
of the context is preserved.

00:12:21.816 --> 00:12:23.966 A:middle
If you instead know which

00:12:23.966 --> 00:12:25.866 A:middle
categories are relevant in your

00:12:25.866 --> 00:12:27.756 A:middle
use case, you can create an

00:12:27.826 --> 00:12:29.866 A:middle
inclusion filter with those

00:12:29.866 --> 00:12:30.626 A:middle
categories.

00:12:31.426 --> 00:12:33.866 A:middle
So, this filter for example will

00:12:33.866 --> 00:12:36.366 A:middle
filter out the courthouse, and

00:12:36.366 --> 00:12:37.536 A:middle
the beauty and barber shop

00:12:37.536 --> 00:12:40.046 A:middle
around the corner and only show

00:12:40.046 --> 00:12:41.056 A:middle
point of interest from the

00:12:41.056 --> 00:12:42.216 A:middle
selected categories,

00:12:42.346 --> 00:12:44.416 A:middle
restaurants, night life, and

00:12:44.476 --> 00:12:45.816 A:middle
parking and cafés.

00:12:46.346 --> 00:12:48.826 A:middle
And if you do want to turn off

00:12:48.826 --> 00:12:50.046 A:middle
all the point of interest icons,

00:12:50.046 --> 00:12:52.066 A:middle
you can still do that using an

00:12:52.066 --> 00:12:52.976 A:middle
excluding all filter.

00:12:56.676 --> 00:12:57.836 A:middle
Point of interest filtering

00:12:57.836 --> 00:13:01.046 A:middle
support is also coming to MapKit

00:12:57.836 --> 00:13:01.046 A:middle
support is also coming to MapKit

00:13:01.046 --> 00:13:03.006 A:middle
JS this fall, and it works in a

00:13:03.006 --> 00:13:04.046 A:middle
very similar way.

00:13:04.606 --> 00:13:05.416 A:middle
We're adding a

00:13:05.416 --> 00:13:06.976 A:middle
pointOfInterestFilter to the

00:13:06.976 --> 00:13:09.926 A:middle
MapKit object and you create a

00:13:09.926 --> 00:13:12.296 A:middle
filter using a list of point of

00:13:12.296 --> 00:13:14.426 A:middle
interest category values.

00:13:15.066 --> 00:13:16.576 A:middle
Once you've created your filter,

00:13:16.846 --> 00:13:18.126 A:middle
you apply it to the

00:13:18.126 --> 00:13:19.846 A:middle
pointOfInterestFilter property

00:13:19.986 --> 00:13:21.346 A:middle
on your map.

00:13:23.876 --> 00:13:26.236 A:middle
So, the map view is definitely

00:13:26.236 --> 00:13:28.416 A:middle
MapKit and MapKit JS's most

00:13:28.526 --> 00:13:29.466 A:middle
prominent feature.

00:13:30.236 --> 00:13:31.356 A:middle
But another important

00:13:31.846 --> 00:13:34.676 A:middle
cornerstone is the support for

00:13:34.676 --> 00:13:36.606 A:middle
search and autocompletion.

00:13:37.746 --> 00:13:38.856 A:middle
So, the next thing I'm going to

00:13:38.856 --> 00:13:40.766 A:middle
talk about is how you can

00:13:40.766 --> 00:13:42.896 A:middle
improve the results from search

00:13:42.896 --> 00:13:44.076 A:middle
and autocompletion using

00:13:44.076 --> 00:13:44.556 A:middle
filtering.

00:13:45.136 --> 00:13:50.106 A:middle
The companion app uses search

00:13:50.106 --> 00:13:51.316 A:middle
and autocompletion support from

00:13:51.316 --> 00:13:52.826 A:middle
MapKit for its After Hours

00:13:52.826 --> 00:13:53.206 A:middle
feature.

00:13:54.316 --> 00:13:56.726 A:middle
So, as the user is typing, the

00:13:56.726 --> 00:13:58.046 A:middle
autosuggest-- autocompletion

00:13:58.046 --> 00:13:59.566 A:middle
suggestions are coming from

00:13:59.906 --> 00:14:01.246 A:middle
MKLocalSearchCompleter.

00:13:59.906 --> 00:14:01.246 A:middle
MKLocalSearchCompleter.

00:14:02.636 --> 00:14:04.086 A:middle
And the results shown on the map

00:14:04.086 --> 00:14:06.286 A:middle
are fetched using MKLocalSearch.

00:14:07.396 --> 00:14:09.436 A:middle
But if we take a step back and

00:14:09.436 --> 00:14:10.796 A:middle
look at those suggestions again,

00:14:10.796 --> 00:14:12.966 A:middle
we realize that in a feature

00:14:12.966 --> 00:14:14.426 A:middle
where we expect our users to

00:14:14.426 --> 00:14:16.676 A:middle
search for bars and restaurants,

00:14:17.226 --> 00:14:19.416 A:middle
a middle school is not a very

00:14:19.476 --> 00:14:20.366 A:middle
relevant suggestion.

00:14:21.306 --> 00:14:22.776 A:middle
Fortunately, the

00:14:22.776 --> 00:14:24.836 A:middle
pointOfInterestFilter we used to

00:14:24.836 --> 00:14:26.956 A:middle
filter our map view before also

00:14:26.956 --> 00:14:28.796 A:middle
works both for search and

00:14:28.796 --> 00:14:29.666 A:middle
autocompletion.

00:14:30.236 --> 00:14:33.166 A:middle
So, you can create your filter

00:14:33.166 --> 00:14:35.816 A:middle
for your search feature and

00:14:35.816 --> 00:14:37.016 A:middle
apply it to your

00:14:37.016 --> 00:14:39.546 A:middle
MKLocalSearhCompleter and apply

00:14:39.546 --> 00:14:39.916 A:middle
it to your

00:14:39.916 --> 00:14:41.216 A:middle
MKLocalSearch.Request.

00:14:42.416 --> 00:14:43.526 A:middle
And this will narrow down your

00:14:43.526 --> 00:14:45.226 A:middle
results to a much more relevant

00:14:45.226 --> 00:14:45.566 A:middle
set.

00:14:46.206 --> 00:14:49.066 A:middle
But there's still addresses

00:14:49.116 --> 00:14:50.066 A:middle
showing in this list.

00:14:50.516 --> 00:14:52.316 A:middle
And that's because addresses are

00:14:52.316 --> 00:14:54.446 A:middle
distinctly different from point

00:14:54.446 --> 00:14:55.936 A:middle
of interest, which generally

00:14:55.936 --> 00:14:57.576 A:middle
represents landmarks or

00:14:57.576 --> 00:14:58.396 A:middle
businesses.

00:14:59.426 --> 00:15:00.626 A:middle
So, to further improve the

00:14:59.426 --> 00:15:00.626 A:middle
So, to further improve the

00:15:00.626 --> 00:15:02.426 A:middle
results in this list, we want to

00:15:02.426 --> 00:15:03.826 A:middle
focus the search and

00:15:03.826 --> 00:15:05.796 A:middle
autocompletion results to just

00:15:05.906 --> 00:15:06.576 A:middle
point of interest.

00:15:07.276 --> 00:15:10.756 A:middle
Up until now, MapKit has only

00:15:10.756 --> 00:15:12.776 A:middle
supported result type filtering

00:15:12.826 --> 00:15:14.656 A:middle
for MKLocalSearchCompleter.

00:15:15.526 --> 00:15:16.956 A:middle
And you did this using the

00:15:16.956 --> 00:15:18.116 A:middle
filterType property.

00:15:19.466 --> 00:15:21.566 A:middle
But the value locations only

00:15:21.736 --> 00:15:22.976 A:middle
still meant that you will get

00:15:23.126 --> 00:15:24.926 A:middle
both addresses and point of

00:15:24.926 --> 00:15:26.826 A:middle
interest, which is not enough to

00:15:26.826 --> 00:15:27.396 A:middle
help us here.

00:15:28.146 --> 00:15:30.186 A:middle
So to address this, we have

00:15:30.186 --> 00:15:32.196 A:middle
introduced two new option sets

00:15:32.346 --> 00:15:33.516 A:middle
called ResultType.

00:15:34.546 --> 00:15:36.946 A:middle
And you use these option sets to

00:15:36.946 --> 00:15:38.406 A:middle
configure the type of results

00:15:38.406 --> 00:15:40.806 A:middle
you want from both search and

00:15:40.806 --> 00:15:41.556 A:middle
autocompletion.

00:15:42.156 --> 00:15:45.436 A:middle
So the option set for

00:15:45.436 --> 00:15:47.396 A:middle
MKLocalSearchCompleter that you

00:15:47.396 --> 00:15:49.146 A:middle
pick any combination you want

00:15:49.206 --> 00:15:50.876 A:middle
from addresses, points of

00:15:50.876 --> 00:15:52.686 A:middle
interests and queries.

00:15:52.976 --> 00:15:55.716 A:middle
And for MKLocalSearch.Request

00:15:56.286 --> 00:15:57.466 A:middle
you can pick and choose between

00:15:57.466 --> 00:15:58.696 A:middle
addresses and point of

00:15:58.696 --> 00:15:59.356 A:middle
interests.

00:15:59.866 --> 00:16:02.706 A:middle
So you can now easily just

00:15:59.866 --> 00:16:02.706 A:middle
So you can now easily just

00:16:02.706 --> 00:16:05.746 A:middle
configure your completer and

00:16:05.746 --> 00:16:07.396 A:middle
your request to only request

00:16:07.396 --> 00:16:07.976 A:middle
point of interests.

00:16:11.086 --> 00:16:12.956 A:middle
And the result you get back from

00:16:12.956 --> 00:16:16.296 A:middle
MKLocalSearch is an array of

00:16:16.456 --> 00:16:17.806 A:middle
MKMapItems.

00:16:18.646 --> 00:16:20.096 A:middle
And MapItems contain a lot of

00:16:20.096 --> 00:16:21.856 A:middle
useful information like the

00:16:21.856 --> 00:16:23.146 A:middle
location coordinate of that

00:16:23.146 --> 00:16:24.876 A:middle
result, and address.

00:16:25.136 --> 00:16:26.326 A:middle
And in some cases, you can also

00:16:26.326 --> 00:16:27.766 A:middle
have a name for that place, a

00:16:27.766 --> 00:16:29.586 A:middle
phone number, or even a URL.

00:16:31.006 --> 00:16:32.546 A:middle
To make it easier for you to

00:16:32.546 --> 00:16:34.376 A:middle
reason about the type of results

00:16:34.376 --> 00:16:35.846 A:middle
you're getting, we have added a

00:16:35.846 --> 00:16:37.606 A:middle
new property called point of

00:16:37.676 --> 00:16:38.916 A:middle
interest category.

00:16:40.316 --> 00:16:42.756 A:middle
So if you make a search for ABC,

00:16:42.756 --> 00:16:45.776 A:middle
if you make a search for ABC,

00:16:45.776 --> 00:16:49.266 A:middle
you might get the results Al's

00:16:49.416 --> 00:16:51.446 A:middle
Beet Canteen and ABC Brewing,

00:16:51.616 --> 00:16:52.216 A:middle
for example.

00:16:53.166 --> 00:16:54.286 A:middle
And if you inspect the point of

00:16:54.286 --> 00:16:55.476 A:middle
interest categories of these

00:16:55.476 --> 00:16:57.126 A:middle
results, you will see that they

00:16:57.126 --> 00:16:59.126 A:middle
are a restaurant and a brewery

00:16:59.126 --> 00:16:59.806 A:middle
respectively.

00:17:00.996 --> 00:17:03.666 A:middle
If you would apply an inclusion

00:17:03.666 --> 00:17:05.086 A:middle
filter with the category

00:17:05.086 --> 00:17:07.086 A:middle
brewery, Al's Beet Canteen will

00:17:07.086 --> 00:17:08.685 A:middle
no longer show up.

00:17:08.976 --> 00:17:12.316 A:middle
However, ABC Brewing also runs a

00:17:12.346 --> 00:17:13.606 A:middle
restaurant as part of their

00:17:13.606 --> 00:17:16.316 A:middle
business, which means if we

00:17:16.316 --> 00:17:18.516 A:middle
apply an inclusion filter with

00:17:18.516 --> 00:17:20.646 A:middle
the category restaurant, we may

00:17:20.646 --> 00:17:22.955 A:middle
still see ABC Brewing in our

00:17:22.955 --> 00:17:23.776 A:middle
search results.

00:17:24.746 --> 00:17:25.726 A:middle
And if we inspect the point of

00:17:25.726 --> 00:17:27.596 A:middle
interest category, it will still

00:17:27.596 --> 00:17:29.706 A:middle
be brewery because that's ABC

00:17:29.706 --> 00:17:31.396 A:middle
breweries-- ABC Brewing's

00:17:31.796 --> 00:17:32.856 A:middle
primary category.

00:17:35.356 --> 00:17:36.826 A:middle
The same search and

00:17:36.826 --> 00:17:38.686 A:middle
autocompletion filtering support

00:17:38.686 --> 00:17:40.106 A:middle
is coming to MapKit JS this

00:17:40.106 --> 00:17:40.596 A:middle
fall.

00:17:41.336 --> 00:17:43.106 A:middle
And you filter the point of

00:17:43.106 --> 00:17:44.586 A:middle
interests by applying your

00:17:44.586 --> 00:17:46.476 A:middle
pointOfInterest filter directly

00:17:46.476 --> 00:17:47.496 A:middle
to the search object.

00:17:48.616 --> 00:17:50.246 A:middle
And to narrow down the type of

00:17:50.246 --> 00:17:51.926 A:middle
results you're getting, you use

00:17:51.926 --> 00:17:53.066 A:middle
the new properties

00:17:53.176 --> 00:17:54.406 A:middle
includeAddresses,

00:17:54.526 --> 00:17:56.356 A:middle
includePointOfInterest, and

00:17:56.356 --> 00:17:58.566 A:middle
includeQueries also found on the

00:17:58.566 --> 00:17:59.246 A:middle
search object.

00:17:59.756 --> 00:18:01.796 A:middle
All right.

00:17:59.756 --> 00:18:01.796 A:middle
All right.

00:18:02.046 --> 00:18:03.106 A:middle
And with that I will hand it

00:18:03.106 --> 00:18:04.816 A:middle
over to my colleague Nalini, who

00:18:04.816 --> 00:18:06.426 A:middle
will show you how quick and easy

00:18:06.426 --> 00:18:08.166 A:middle
it is to improve the relevance

00:18:08.166 --> 00:18:09.566 A:middle
of your search results using

00:18:09.566 --> 00:18:10.516 A:middle
these new APIs.

00:18:11.516 --> 00:18:16.546 A:middle
[ Applause ]

00:18:17.046 --> 00:18:17.936 A:middle
&gt;&gt; Thank you, Alexander.

00:18:18.676 --> 00:18:20.116 A:middle
Hi. I'm Nalini and I'm a

00:18:20.116 --> 00:18:21.336 A:middle
software engineer in the MapKit

00:18:21.336 --> 00:18:22.006 A:middle
Framework team.

00:18:22.506 --> 00:18:24.256 A:middle
Alexander already showed the

00:18:24.256 --> 00:18:25.776 A:middle
WWDC companion app we'll be

00:18:25.776 --> 00:18:26.956 A:middle
building throughout the session.

00:18:27.606 --> 00:18:29.146 A:middle
We already have a version of the

00:18:29.146 --> 00:18:30.806 A:middle
application that implement some

00:18:30.806 --> 00:18:32.496 A:middle
of the functionality but isn't

00:18:32.496 --> 00:18:33.196 A:middle
quite there yet.

00:18:33.606 --> 00:18:34.956 A:middle
Let me show it to you.

00:18:35.456 --> 00:18:36.426 A:middle
Here, we are looking at the

00:18:36.426 --> 00:18:38.026 A:middle
After Hours feature where we'll

00:18:38.026 --> 00:18:39.386 A:middle
be exploring places around San

00:18:39.386 --> 00:18:39.756 A:middle
Jose.

00:18:40.996 --> 00:18:42.586 A:middle
We have a map view set up with a

00:18:42.586 --> 00:18:43.096 A:middle
search bar.

00:18:43.576 --> 00:18:44.496 A:middle
The search bar uses

00:18:44.496 --> 00:18:46.456 A:middle
MKLocalSearchCompleter and

00:18:46.456 --> 00:18:48.406 A:middle
MKLocalSearch to search Apple

00:18:48.406 --> 00:18:48.966 A:middle
Maps later.

00:18:49.776 --> 00:18:51.166 A:middle
This functionality has existed

00:18:51.166 --> 00:18:52.586 A:middle
since iOS 9.3.

00:18:52.626 --> 00:18:54.546 A:middle
Let's go ahead and search for

00:18:54.546 --> 00:18:54.946 A:middle
something.

00:18:59.226 --> 00:19:00.916 A:middle
As I'm typing we receive

00:18:59.226 --> 00:19:00.916 A:middle
As I'm typing we receive

00:19:00.916 --> 00:19:02.306 A:middle
autocomplete suggestions.

00:19:02.656 --> 00:19:04.246 A:middle
As an attendee at the

00:19:04.246 --> 00:19:05.956 A:middle
conference, we are not

00:19:05.956 --> 00:19:07.316 A:middle
interested in some of these

00:19:07.316 --> 00:19:07.856 A:middle
results.

00:19:08.986 --> 00:19:10.396 A:middle
Let's go ahead and issue a

00:19:10.396 --> 00:19:10.956 A:middle
search.

00:19:13.686 --> 00:19:14.866 A:middle
We observed a similar

00:19:14.866 --> 00:19:15.706 A:middle
experience.

00:19:16.066 --> 00:19:17.956 A:middle
We get back results that are not

00:19:17.986 --> 00:19:19.416 A:middle
relevant for our use case.

00:19:20.026 --> 00:19:22.016 A:middle
Let's see how to improve this

00:19:22.016 --> 00:19:23.396 A:middle
experience using

00:19:23.396 --> 00:19:25.166 A:middle
pointOfInterestFilter and result

00:19:25.166 --> 00:19:25.976 A:middle
types APIs.

00:19:28.576 --> 00:19:30.096 A:middle
Here we are looking at the After

00:19:30.096 --> 00:19:31.396 A:middle
Hours view controller where

00:19:31.396 --> 00:19:32.756 A:middle
autocompletion and search are

00:19:32.756 --> 00:19:33.146 A:middle
set up.

00:19:34.126 --> 00:19:34.766 A:middle
We'll declare a

00:19:34.766 --> 00:19:38.316 A:middle
pointOfInterestFilter that we

00:19:38.546 --> 00:19:40.336 A:middle
will leverage for both

00:19:40.336 --> 00:19:42.086 A:middle
autocompletion and search.

00:19:42.706 --> 00:19:44.116 A:middle
The categories we are interested

00:19:44.116 --> 00:19:46.536 A:middle
in are night life and restaurant

00:19:46.826 --> 00:19:47.926 A:middle
for our use case.

00:19:49.186 --> 00:19:49.936 A:middle
We'll apply the

00:19:49.936 --> 00:19:51.326 A:middle
pointOfInterestFilter to the

00:19:51.326 --> 00:19:51.976 A:middle
searchCompleter.

00:19:58.706 --> 00:20:00.396 A:middle
Address results are not relevant

00:19:58.706 --> 00:20:00.396 A:middle
Address results are not relevant

00:20:00.396 --> 00:20:01.316 A:middle
for our use case.

00:20:01.726 --> 00:20:03.556 A:middle
We limit the result types to

00:20:03.556 --> 00:20:04.506 A:middle
pointOfInterest.

00:20:08.356 --> 00:20:10.266 A:middle
The changes we just did affect

00:20:10.266 --> 00:20:11.556 A:middle
autocompletion.

00:20:12.126 --> 00:20:14.026 A:middle
Let's see how to apply the same

00:20:14.026 --> 00:20:16.906 A:middle
filter to search.

00:20:17.106 --> 00:20:19.216 A:middle
When user issues a search, we

00:20:19.216 --> 00:20:20.536 A:middle
form a local search request.

00:20:21.326 --> 00:20:21.976 A:middle
We'll apply the

00:20:21.976 --> 00:20:23.626 A:middle
pointOfInterestFilter to the

00:20:23.626 --> 00:20:24.946 A:middle
search request.

00:20:28.056 --> 00:20:29.336 A:middle
We limit the result types to

00:20:29.336 --> 00:20:29.976 A:middle
pointOfInterest.

00:20:35.276 --> 00:20:36.346 A:middle
Now that we have

00:20:36.346 --> 00:20:38.186 A:middle
pointOfInterestFilter and result

00:20:38.186 --> 00:20:39.816 A:middle
types applied to both

00:20:39.816 --> 00:20:41.846 A:middle
autocompletion and search, let's

00:20:41.846 --> 00:20:42.976 A:middle
execute our application.

00:20:48.616 --> 00:20:49.956 A:middle
Looking at the After Hours

00:20:49.956 --> 00:20:51.396 A:middle
feature, we'll go ahead and

00:20:51.396 --> 00:20:52.306 A:middle
search for the same source

00:20:52.306 --> 00:20:52.626 A:middle
string.

00:20:53.236 --> 00:20:57.366 A:middle
As you can see, we get results

00:20:57.366 --> 00:20:58.826 A:middle
relevant to our use case.

00:21:01.596 --> 00:21:03.326 A:middle
And when we issue a search, we

00:21:03.326 --> 00:21:05.126 A:middle
also get relevant results which

00:21:05.126 --> 00:21:06.746 A:middle
are displayed as annotations on

00:21:06.746 --> 00:21:07.256 A:middle
the map view.

00:21:07.936 --> 00:21:09.686 A:middle
We just saw how to improve the

00:21:09.686 --> 00:21:11.106 A:middle
autocompletion and search

00:21:11.106 --> 00:21:12.576 A:middle
experience using

00:21:12.576 --> 00:21:14.526 A:middle
pointOfInterestFilter and result

00:21:14.526 --> 00:21:15.396 A:middle
types APIs.

00:21:15.606 --> 00:21:17.026 A:middle
With that, I hand over back to

00:21:17.026 --> 00:21:17.526 A:middle
Alexander.

00:21:18.516 --> 00:21:20.586 A:middle
[ Applause ]

00:21:21.086 --> 00:21:25.656 A:middle
&gt;&gt; OK. So that was five lines of

00:21:25.706 --> 00:21:27.476 A:middle
code to get rid of all those

00:21:27.476 --> 00:21:28.676 A:middle
irrelevant results.

00:21:28.886 --> 00:21:30.786 A:middle
So if you're using search for

00:21:30.786 --> 00:21:31.976 A:middle
autocompletion in your apps

00:21:31.976 --> 00:21:33.696 A:middle
today, I strongly recommend you

00:21:33.696 --> 00:21:35.396 A:middle
to try out these new APIs.

00:21:35.856 --> 00:21:38.436 A:middle
And that's all we're going to

00:21:38.436 --> 00:21:40.146 A:middle
cover for search and

00:21:40.146 --> 00:21:43.156 A:middle
autocompletion filtering today.

00:21:43.666 --> 00:21:44.996 A:middle
So next I want to tell you about

00:21:44.996 --> 00:21:46.456 A:middle
some really nice improvements we

00:21:46.456 --> 00:21:48.906 A:middle
have made to our overlay APIs in

00:21:48.906 --> 00:21:49.346 A:middle
MapKit.

00:21:50.386 --> 00:21:52.246 A:middle
Overlays are used to layer

00:21:52.496 --> 00:21:54.766 A:middle
custom content over a wider area

00:21:54.766 --> 00:21:56.706 A:middle
of your map view and they

00:21:56.706 --> 00:21:58.406 A:middle
generally represent geometric

00:21:58.406 --> 00:22:00.976 A:middle
shapes like lines or polygons.

00:21:58.406 --> 00:22:00.976 A:middle
shapes like lines or polygons.

00:22:01.526 --> 00:22:03.166 A:middle
And to show you these

00:22:03.166 --> 00:22:04.236 A:middle
improvements we're going to take

00:22:04.236 --> 00:22:06.006 A:middle
a quick look at the event view

00:22:06.156 --> 00:22:07.096 A:middle
of the companion app.

00:22:08.426 --> 00:22:10.846 A:middle
So for this feature we want to

00:22:10.876 --> 00:22:12.966 A:middle
render this simple event map in

00:22:12.966 --> 00:22:13.556 A:middle
our map view.

00:22:14.796 --> 00:22:16.466 A:middle
And we'll use overlays to

00:22:16.466 --> 00:22:18.256 A:middle
represent the food and drinks

00:22:18.256 --> 00:22:19.876 A:middle
tents and the stage.

00:22:20.476 --> 00:22:21.826 A:middle
As these-- they're all

00:22:21.826 --> 00:22:23.546 A:middle
rectangular in shape we can

00:22:23.546 --> 00:22:25.866 A:middle
model them using MKPolygons.

00:22:26.756 --> 00:22:28.736 A:middle
And so this map is so simple and

00:22:28.736 --> 00:22:29.736 A:middle
we're kind of short on time in

00:22:29.736 --> 00:22:31.566 A:middle
this session, we will style them

00:22:31.566 --> 00:22:32.346 A:middle
all the same way.

00:22:33.346 --> 00:22:35.256 A:middle
But for every overlay that you

00:22:35.256 --> 00:22:37.056 A:middle
add to your map view, you need

00:22:37.056 --> 00:22:40.836 A:middle
to provide a render object in

00:22:40.836 --> 00:22:41.756 A:middle
your delegate method.

00:22:42.066 --> 00:22:43.896 A:middle
If you're adding a lot of

00:22:44.036 --> 00:22:45.666 A:middle
similar styled overlays like

00:22:45.696 --> 00:22:47.586 A:middle
this, that means you will be

00:22:47.586 --> 00:22:49.586 A:middle
creating a lot of render objects

00:22:49.586 --> 00:22:51.006 A:middle
that are configured exactly the

00:22:51.006 --> 00:22:52.206 A:middle
same way, and that's kind of

00:22:52.206 --> 00:22:52.676 A:middle
wasteful.

00:22:53.566 --> 00:22:55.926 A:middle
This will obviously not lead to

00:22:55.926 --> 00:22:57.486 A:middle
any noticeable performance

00:22:57.486 --> 00:22:59.176 A:middle
impact in an app with seven

00:22:59.176 --> 00:22:59.766 A:middle
overlays.

00:23:00.066 --> 00:23:01.856 A:middle
But if you are like adding a lot

00:23:02.296 --> 00:23:04.106 A:middle
of a large number of overlays,

00:23:04.736 --> 00:23:05.876 A:middle
you can actually notice the

00:23:05.876 --> 00:23:08.776 A:middle
performance impact of this.

00:23:08.976 --> 00:23:10.166 A:middle
So to address this, we have

00:23:10.166 --> 00:23:11.926 A:middle
introduced a few new classes in

00:23:11.926 --> 00:23:12.446 A:middle
MapKit.

00:23:12.776 --> 00:23:14.186 A:middle
There are two new overlay

00:23:14.186 --> 00:23:17.346 A:middle
classes, MKMultiPolygon and

00:23:17.376 --> 00:23:19.896 A:middle
MKMultiPolyline that you can use

00:23:19.896 --> 00:23:22.336 A:middle
to group polygons and polylines

00:23:22.336 --> 00:23:22.946 A:middle
respectively.

00:23:22.946 --> 00:23:26.716 A:middle
And as I said before, every time

00:23:26.716 --> 00:23:28.046 A:middle
you add an overlay you need to

00:23:28.046 --> 00:23:29.666 A:middle
provide a render object.

00:23:30.116 --> 00:23:31.376 A:middle
So we have introduced two new

00:23:31.376 --> 00:23:32.896 A:middle
matching render classes,

00:23:33.276 --> 00:23:35.636 A:middle
MKMultiPolygonRenderer and

00:23:35.636 --> 00:23:37.346 A:middle
MKMultiPolylineRenderer.

00:23:38.756 --> 00:23:40.296 A:middle
Using these classes, you can

00:23:40.296 --> 00:23:42.056 A:middle
dramatically reduce the number

00:23:42.056 --> 00:23:43.396 A:middle
of render objects need-- that

00:23:43.396 --> 00:23:44.586 A:middle
you need to create in your apps

00:23:44.876 --> 00:23:45.786 A:middle
and thereby improve the

00:23:45.786 --> 00:23:46.506 A:middle
performance.

00:23:47.366 --> 00:23:48.176 A:middle
So let's look at a simple

00:23:48.176 --> 00:23:48.986 A:middle
example of this.

00:23:50.446 --> 00:23:51.746 A:middle
So here we're creating the

00:23:51.746 --> 00:23:53.826 A:middle
polygon for the stage using the

00:23:53.826 --> 00:23:54.926 A:middle
coordinates above.

00:23:55.446 --> 00:23:56.796 A:middle
And after creating all the other

00:23:56.796 --> 00:23:58.126 A:middle
polygons, we're adding them

00:23:58.126 --> 00:24:00.106 A:middle
straight to the map view.

00:23:58.126 --> 00:24:00.106 A:middle
straight to the map view.

00:24:00.266 --> 00:24:02.276 A:middle
But this means, like I said

00:24:02.276 --> 00:24:03.516 A:middle
before, the delegate will be

00:24:03.516 --> 00:24:05.576 A:middle
asked to create seven renderers.

00:24:06.306 --> 00:24:07.796 A:middle
So what you instead want to do

00:24:07.796 --> 00:24:09.456 A:middle
is to take all those polygons

00:24:09.506 --> 00:24:11.016 A:middle
and group them into an

00:24:11.016 --> 00:24:13.606 A:middle
MKMultiPolygon and then simply

00:24:13.606 --> 00:24:16.076 A:middle
add that MultiPolygon to your

00:24:16.666 --> 00:24:17.846 A:middle
map view.

00:24:18.046 --> 00:24:19.246 A:middle
Once you have updated your code

00:24:19.246 --> 00:24:21.136 A:middle
to add MultiPolygons instead,

00:24:21.426 --> 00:24:22.396 A:middle
you also need to update your

00:24:22.396 --> 00:24:24.636 A:middle
delegate method to expect

00:24:24.916 --> 00:24:25.936 A:middle
MultiPolygons.

00:24:26.646 --> 00:24:27.956 A:middle
And when you get one you need to

00:24:27.956 --> 00:24:30.746 A:middle
create a MKMultiPolygonRenderer

00:24:30.746 --> 00:24:31.096 A:middle
object.

00:24:31.596 --> 00:24:32.766 A:middle
And this is done the exact the

00:24:32.766 --> 00:24:34.546 A:middle
same way as the old

00:24:34.546 --> 00:24:35.536 A:middle
MKPolygonRenderer.

00:24:36.026 --> 00:24:39.426 A:middle
Apart from saving memory by

00:24:39.426 --> 00:24:41.256 A:middle
creating a fewer number of

00:24:41.256 --> 00:24:43.026 A:middle
render objects, this also

00:24:43.026 --> 00:24:44.336 A:middle
improves the rendering

00:24:44.336 --> 00:24:46.086 A:middle
performance because MapKit can

00:24:46.086 --> 00:24:47.916 A:middle
now be smarter and batch up the

00:24:47.916 --> 00:24:49.286 A:middle
rendering of those polygons for

00:24:49.286 --> 00:24:49.426 A:middle
you.

00:24:50.946 --> 00:24:52.506 A:middle
Another improvement we have made

00:24:52.696 --> 00:24:54.526 A:middle
is that MapKit will now

00:24:54.526 --> 00:24:56.536 A:middle
automatically render all your

00:24:57.296 --> 00:24:59.496 A:middle
overlays that you create using

00:24:59.496 --> 00:25:01.056 A:middle
the built-in MapKit render

00:24:59.496 --> 00:25:01.056 A:middle
the built-in MapKit render

00:25:01.056 --> 00:25:03.266 A:middle
objects as vector graphics

00:25:03.446 --> 00:25:04.576 A:middle
instead of bitmaps.

00:25:05.126 --> 00:25:07.546 A:middle
And vector rendering greatly

00:25:07.546 --> 00:25:08.906 A:middle
improves the look of your

00:25:08.906 --> 00:25:11.586 A:middle
overlays when the user interacts

00:25:11.586 --> 00:25:13.196 A:middle
with the map because they scale

00:25:13.196 --> 00:25:15.046 A:middle
much more nicely when the user

00:25:15.046 --> 00:25:17.236 A:middle
zooms in and out in the map

00:25:17.236 --> 00:25:17.456 A:middle
view.

00:25:18.426 --> 00:25:21.306 A:middle
If you're adding very large and

00:25:21.306 --> 00:25:22.666 A:middle
complex overlays and they're for

00:25:22.666 --> 00:25:24.266 A:middle
some reason not looking quite

00:25:24.266 --> 00:25:25.716 A:middle
right when rendered as vector

00:25:25.716 --> 00:25:27.886 A:middle
graphics, you can opt out of

00:25:27.886 --> 00:25:30.256 A:middle
vector rendering using the

00:25:30.256 --> 00:25:32.166 A:middle
shouldRasterize property on the

00:25:32.166 --> 00:25:32.616 A:middle
renderer.

00:25:33.206 --> 00:25:36.726 A:middle
And that's how you use the new

00:25:36.726 --> 00:25:37.976 A:middle
overlay APIs in MapKit.

00:25:38.516 --> 00:25:43.526 A:middle
[ Applause ]

00:25:44.026 --> 00:25:44.916 A:middle
So the next thing I want to

00:25:44.916 --> 00:25:46.766 A:middle
cover is MapKit's new support

00:25:46.766 --> 00:25:48.216 A:middle
for GeoJSON.

00:25:49.096 --> 00:25:52.066 A:middle
GeoJSON is a widely used storage

00:25:52.066 --> 00:25:54.406 A:middle
and wire format for representing

00:25:54.406 --> 00:25:56.216 A:middle
geometric objects like points,

00:25:56.326 --> 00:25:57.906 A:middle
lines and polygons.

00:25:58.576 --> 00:26:00.246 A:middle
And a lot of vendors publish

00:25:58.576 --> 00:26:00.246 A:middle
And a lot of vendors publish

00:26:00.246 --> 00:26:02.136 A:middle
their data as GeoJSON.

00:26:02.566 --> 00:26:03.726 A:middle
So some of you may already have

00:26:03.726 --> 00:26:05.496 A:middle
written code to parse that

00:26:05.496 --> 00:26:08.556 A:middle
GeoJSON, create annotations and

00:26:08.556 --> 00:26:09.876 A:middle
overlays that you're adding to

00:26:10.106 --> 00:26:11.226 A:middle
your map view.

00:26:11.626 --> 00:26:13.606 A:middle
So with these new APIs, we're

00:26:13.606 --> 00:26:15.866 A:middle
hoping that working with GeoJSON

00:26:15.866 --> 00:26:17.606 A:middle
will be easier than ever and

00:26:17.606 --> 00:26:18.946 A:middle
maybe you can even delete some

00:26:18.946 --> 00:26:19.976 A:middle
of that code you have written.

00:26:20.516 --> 00:26:24.166 A:middle
[ Applause ]

00:26:24.666 --> 00:26:26.046 A:middle
For those of you who are not

00:26:26.046 --> 00:26:28.426 A:middle
familiar with GeoJSON, here's a

00:26:28.426 --> 00:26:30.006 A:middle
very simple example of how it

00:26:30.006 --> 00:26:31.786 A:middle
can represent a location.

00:26:32.166 --> 00:26:35.096 A:middle
At the top level there's the

00:26:35.456 --> 00:26:37.176 A:middle
type member that lets us know

00:26:37.176 --> 00:26:40.416 A:middle
that this is a feature and a

00:26:40.456 --> 00:26:42.016 A:middle
feature can have an optional

00:26:42.016 --> 00:26:43.796 A:middle
identifier which you can use to

00:26:43.796 --> 00:26:45.366 A:middle
uniquely identify this feature

00:26:45.396 --> 00:26:46.116 A:middle
among others.

00:26:46.636 --> 00:26:49.926 A:middle
And this feature is defined by a

00:26:49.926 --> 00:26:52.756 A:middle
single geometry, a point, but a

00:26:52.756 --> 00:26:53.966 A:middle
feature can also have multiple

00:26:53.966 --> 00:26:54.666 A:middle
geometries.

00:26:55.416 --> 00:26:57.406 A:middle
And in addition to the geometry

00:26:57.806 --> 00:26:59.496 A:middle
there's the properties member

00:26:59.946 --> 00:27:01.376 A:middle
which in this case just contains

00:26:59.946 --> 00:27:01.376 A:middle
which in this case just contains

00:27:01.376 --> 00:27:03.306 A:middle
the name of this location, the

00:27:03.306 --> 00:27:03.896 A:middle
stage.

00:27:04.906 --> 00:27:07.816 A:middle
So to represent this feature in

00:27:07.816 --> 00:27:09.306 A:middle
MapKits, we have introduced a

00:27:09.306 --> 00:27:11.116 A:middle
new class called

00:27:11.116 --> 00:27:12.216 A:middle
MKGeoJSONFeature.

00:27:13.176 --> 00:27:14.606 A:middle
And this class is simply a data

00:27:14.606 --> 00:27:15.756 A:middle
container that holds the

00:27:15.756 --> 00:27:18.946 A:middle
identifier, the decoded geometry

00:27:19.316 --> 00:27:20.696 A:middle
and the properties.

00:27:22.036 --> 00:27:25.526 A:middle
So to get from your GeoJSON to

00:27:25.656 --> 00:27:27.296 A:middle
actual MapKit classes, we have

00:27:27.296 --> 00:27:29.446 A:middle
introduced another class called

00:27:29.446 --> 00:27:30.846 A:middle
MKGeoJSONDecoder.

00:27:31.546 --> 00:27:34.066 A:middle
If you've ever used Swift's JSON

00:27:34.066 --> 00:27:36.646 A:middle
decoder, MKGeoJSONDecoder should

00:27:36.646 --> 00:27:37.906 A:middle
feel pretty familiar to you.

00:27:38.976 --> 00:27:40.556 A:middle
You simply create your decoder,

00:27:41.266 --> 00:27:43.436 A:middle
you passage your data and it

00:27:43.436 --> 00:27:45.396 A:middle
will return an array of either

00:27:45.396 --> 00:27:51.656 A:middle
MKGeoJSONFeatures or MapKit's

00:27:51.736 --> 00:27:54.756 A:middle
geometry such as MKPolygon or

00:27:54.756 --> 00:27:56.236 A:middle
MKPolylines and so on.

00:27:56.936 --> 00:27:58.366 A:middle
And this depends on how your

00:27:58.366 --> 00:28:00.016 A:middle
GeoJSON is structured because

00:27:58.366 --> 00:28:00.016 A:middle
GeoJSON is structured because

00:28:00.016 --> 00:28:01.846 A:middle
you can either have features in

00:28:01.846 --> 00:28:03.706 A:middle
your top level or geometry in

00:28:03.706 --> 00:28:05.276 A:middle
your top level GeoJSON.

00:28:05.276 --> 00:28:08.346 A:middle
So if you take a look at how

00:28:08.346 --> 00:28:10.436 A:middle
this example GeoJSON from before

00:28:10.436 --> 00:28:11.426 A:middle
would be decoded by the

00:28:11.426 --> 00:28:14.576 A:middle
MKGeoJSONDecoder, we can realize

00:28:14.576 --> 00:28:16.156 A:middle
that since this one has a single

00:28:16.156 --> 00:28:18.606 A:middle
feature, our resulting array

00:28:18.606 --> 00:28:19.816 A:middle
will just have one item.

00:28:20.656 --> 00:28:22.556 A:middle
But the decoder also decodes the

00:28:22.556 --> 00:28:24.876 A:middle
geometry into MapKit classes.

00:28:25.146 --> 00:28:28.086 A:middle
So the point location here will

00:28:28.086 --> 00:28:29.526 A:middle
be decoded as an

00:28:29.526 --> 00:28:32.126 A:middle
MKPointAnnotation and the

00:28:32.126 --> 00:28:33.536 A:middle
feature itself will be decoded

00:28:33.536 --> 00:28:36.136 A:middle
as an MKGeoJSONFeature with a

00:28:36.136 --> 00:28:37.226 A:middle
reference to that

00:28:37.226 --> 00:28:37.976 A:middle
MKPointAnnotation.

00:28:40.556 --> 00:28:41.896 A:middle
So with the introduction of

00:28:41.976 --> 00:28:44.206 A:middle
MKMultiPolygon and MultiPolyline

00:28:44.206 --> 00:28:45.466 A:middle
that I've talked about before,

00:28:46.026 --> 00:28:47.486 A:middle
MapKit now has a complete

00:28:47.486 --> 00:28:49.566 A:middle
mapping from GeoJSON geometry

00:28:49.946 --> 00:28:51.086 A:middle
into MapKit classes.

00:28:51.916 --> 00:28:53.156 A:middle
And this means that once you

00:28:53.156 --> 00:28:55.266 A:middle
have decoded your GeoJSON, you

00:28:55.266 --> 00:28:56.886 A:middle
will have annotations and

00:28:56.886 --> 00:28:58.206 A:middle
overlays that are more or less

00:28:58.206 --> 00:28:59.626 A:middle
ready to be added to your map

00:28:59.626 --> 00:28:59.946 A:middle
views.

00:29:00.786 --> 00:29:02.356 A:middle
So let's look at a simple

00:29:02.356 --> 00:29:04.506 A:middle
example of this.

00:29:04.686 --> 00:29:05.996 A:middle
First, you create your decoder

00:29:07.126 --> 00:29:08.166 A:middle
and you passage your data.

00:29:08.866 --> 00:29:11.156 A:middle
And as I said, depending on how

00:29:11.156 --> 00:29:12.716 A:middle
your GeoJSON is structured, you

00:29:12.716 --> 00:29:14.206 A:middle
can then either work with your

00:29:14.206 --> 00:29:17.066 A:middle
top level features or your

00:29:17.136 --> 00:29:17.926 A:middle
geometries.

00:29:18.476 --> 00:29:20.436 A:middle
If you're doing additional

00:29:20.436 --> 00:29:23.096 A:middle
parsing of a feature, you use

00:29:23.626 --> 00:29:25.216 A:middle
the geometry property to get

00:29:25.216 --> 00:29:26.806 A:middle
access to those polygons and

00:29:26.806 --> 00:29:27.376 A:middle
polylines.

00:29:28.216 --> 00:29:29.526 A:middle
In our example, we knew that the

00:29:29.526 --> 00:29:31.486 A:middle
GeoJSON would only have a single

00:29:31.486 --> 00:29:34.236 A:middle
feature and a point geometry.

00:29:34.236 --> 00:29:35.706 A:middle
So this code is making some

00:29:35.706 --> 00:29:36.356 A:middle
assumptions.

00:29:37.726 --> 00:29:38.896 A:middle
In most cases, you would want

00:29:38.896 --> 00:29:40.336 A:middle
this part of your code to also

00:29:40.336 --> 00:29:43.186 A:middle
take MKPolygons, MultiPolylines

00:29:43.186 --> 00:29:44.466 A:middle
and so on into consideration.

00:29:45.036 --> 00:29:48.366 A:middle
In the GeoJSON specification,

00:29:48.696 --> 00:29:51.726 A:middle
the properties member can be any

00:29:51.726 --> 00:29:53.396 A:middle
valid JSON or even null.

00:29:53.746 --> 00:29:55.596 A:middle
And this means that MapKit

00:29:55.636 --> 00:29:56.766 A:middle
cannot really make any

00:29:56.766 --> 00:29:58.726 A:middle
assumptions about how to parse

00:29:58.806 --> 00:29:59.226 A:middle
this data.

00:30:00.436 --> 00:30:03.296 A:middle
So MKGeoJSONFeature exposes its

00:30:03.346 --> 00:30:05.296 A:middle
properties as the data type.

00:30:06.436 --> 00:30:08.396 A:middle
So if you know the structure of

00:30:08.396 --> 00:30:11.396 A:middle
your properties, you can use the

00:30:11.396 --> 00:30:15.426 A:middle
JSON decoder to map up data into

00:30:15.426 --> 00:30:16.746 A:middle
an appropriate model class.

00:30:17.546 --> 00:30:18.696 A:middle
In our case we know that the

00:30:18.696 --> 00:30:19.976 A:middle
properties contained a string

00:30:19.976 --> 00:30:20.926 A:middle
mapping to a string.

00:30:21.606 --> 00:30:23.016 A:middle
So we will simply map it to a

00:30:23.016 --> 00:30:24.506 A:middle
dictionary, which makes it

00:30:24.506 --> 00:30:26.116 A:middle
really for us to read out the

00:30:26.116 --> 00:30:27.316 A:middle
value for the name key.

00:30:27.866 --> 00:30:30.586 A:middle
But in some cases, you may not

00:30:30.586 --> 00:30:31.946 A:middle
be in control over your

00:30:31.946 --> 00:30:32.736 A:middle
GeoJSONs.

00:30:32.736 --> 00:30:33.896 A:middle
You may not actually know the

00:30:33.896 --> 00:30:35.776 A:middle
structure of your properties.

00:30:36.276 --> 00:30:37.636 A:middle
In that case, you can instead

00:30:37.706 --> 00:30:39.836 A:middle
use the JSON serialization API

00:30:40.506 --> 00:30:42.796 A:middle
to dynamically explore the

00:30:42.796 --> 00:30:43.886 A:middle
properties depending on its

00:30:43.886 --> 00:30:43.976 A:middle
type.

00:30:48.296 --> 00:30:49.936 A:middle
So what about MapKit JS?

00:30:50.196 --> 00:30:51.566 A:middle
We actually already support

00:30:51.686 --> 00:30:53.936 A:middle
GeoJSON in MapKit JS.

00:30:54.436 --> 00:30:56.776 A:middle
So you can map your GeoJSON into

00:30:56.776 --> 00:30:59.496 A:middle
an existing MapKit JS item such

00:30:59.496 --> 00:31:01.456 A:middle
as annotations, overlays and

00:30:59.496 --> 00:31:01.456 A:middle
as annotations, overlays and

00:31:01.456 --> 00:31:02.506 A:middle
ItemCollections.

00:31:02.896 --> 00:31:04.546 A:middle
And let's have a look at a quick

00:31:04.546 --> 00:31:05.546 A:middle
example of that.

00:31:06.026 --> 00:31:08.406 A:middle
So you simply pass either a URL

00:31:08.406 --> 00:31:11.466 A:middle
or a valid GeoJSON object to the

00:31:11.466 --> 00:31:13.106 A:middle
import GeoJSON function on the

00:31:13.106 --> 00:31:13.846 A:middle
MapKit object.

00:31:14.916 --> 00:31:16.766 A:middle
This function will return an

00:31:16.766 --> 00:31:18.306 A:middle
item collection that contains

00:31:18.306 --> 00:31:20.656 A:middle
one or many MapKit JS items

00:31:21.316 --> 00:31:22.756 A:middle
which you can then easily add to

00:31:22.756 --> 00:31:25.276 A:middle
your map object using either add

00:31:25.276 --> 00:31:26.756 A:middle
items or show items.

00:31:28.646 --> 00:31:30.736 A:middle
All right, and I will now hand

00:31:30.736 --> 00:31:31.946 A:middle
it back over to Nalini one more

00:31:31.946 --> 00:31:32.256 A:middle
time.

00:31:32.366 --> 00:31:33.396 A:middle
And now she's going to show us

00:31:33.396 --> 00:31:35.596 A:middle
how you can get that event map

00:31:35.736 --> 00:31:36.826 A:middle
rendered in the map view.

00:31:37.516 --> 00:31:41.500 A:middle
[ Applause ]

00:31:44.896 --> 00:31:46.286 A:middle
&gt;&gt; Let's continue building the

00:31:46.286 --> 00:31:47.776 A:middle
WWDC Companion app.

00:31:48.566 --> 00:31:49.566 A:middle
Here we are looking at the

00:31:49.566 --> 00:31:50.896 A:middle
Concert in The Park feature

00:31:51.326 --> 00:31:52.626 A:middle
where we have a map you set up

00:31:52.626 --> 00:31:53.716 A:middle
for the concert area.

00:31:54.656 --> 00:31:56.076 A:middle
What concert would be complete

00:31:56.076 --> 00:31:57.186 A:middle
without food and drinks?

00:31:57.576 --> 00:31:59.336 A:middle
We need tents for these food and

00:31:59.336 --> 00:31:59.796 A:middle
drinks.

00:32:00.026 --> 00:32:01.816 A:middle
We'll be rendering these tents

00:32:02.016 --> 00:32:03.776 A:middle
as overlays and annotations on

00:32:03.776 --> 00:32:04.276 A:middle
the map view.

00:32:04.886 --> 00:32:06.496 A:middle
Our data is provided to us in

00:32:06.496 --> 00:32:07.606 A:middle
GeoJSON format.

00:32:07.916 --> 00:32:08.816 A:middle
Let's have a quick look at the

00:32:08.816 --> 00:32:08.936 A:middle
data.

00:32:14.316 --> 00:32:15.566 A:middle
In our JSON we have two

00:32:15.566 --> 00:32:16.076 A:middle
features.

00:32:16.696 --> 00:32:18.386 A:middle
The top level is grouped in

00:32:18.386 --> 00:32:19.226 A:middle
feature collection.

00:32:19.466 --> 00:32:21.456 A:middle
Our first feature is event

00:32:21.456 --> 00:32:21.796 A:middle
tents.

00:32:21.796 --> 00:32:24.126 A:middle
We'll be rendering many tents,

00:32:24.286 --> 00:32:25.526 A:middle
which means more options for

00:32:25.526 --> 00:32:26.296 A:middle
food and drinks.

00:32:27.156 --> 00:32:28.826 A:middle
The geometry of our tent is

00:32:28.826 --> 00:32:29.826 A:middle
MultiPolygon.

00:32:30.886 --> 00:32:31.716 A:middle
These are the different

00:32:31.716 --> 00:32:33.276 A:middle
coordinates of the tents.

00:32:33.996 --> 00:32:35.646 A:middle
We'll be using this data to

00:32:35.646 --> 00:32:37.246 A:middle
render overlays on the map view

00:32:37.426 --> 00:32:38.876 A:middle
which will represent the tent

00:32:38.996 --> 00:32:39.726 A:middle
outlines.

00:32:40.256 --> 00:32:43.406 A:middle
Our second feature is point,

00:32:43.906 --> 00:32:45.436 A:middle
which describes the names of the

00:32:45.436 --> 00:32:47.166 A:middle
various food and drink tents.

00:32:48.036 --> 00:32:49.756 A:middle
We'll be using this data to

00:32:49.756 --> 00:32:51.256 A:middle
render annotations on the map

00:32:51.256 --> 00:32:53.216 A:middle
view, which will represent the

00:32:53.216 --> 00:32:54.156 A:middle
tent labels.

00:32:55.086 --> 00:32:57.136 A:middle
Let's see how to parse these two

00:32:57.136 --> 00:32:57.976 A:middle
features in code.

00:33:02.216 --> 00:33:03.096 A:middle
Here, we are looking at the

00:33:03.096 --> 00:33:05.176 A:middle
event data source where we will

00:33:05.176 --> 00:33:06.846 A:middle
load the JSON and subsequently

00:33:06.846 --> 00:33:07.286 A:middle
parse it.

00:33:07.846 --> 00:33:08.826 A:middle
Let's go ahead and load the

00:33:08.826 --> 00:33:08.976 A:middle
JSON.

00:33:12.176 --> 00:33:15.426 A:middle
Once the JSON is loaded, we will

00:33:15.476 --> 00:33:17.326 A:middle
use the MKGeoJSONDecoder to

00:33:17.326 --> 00:33:19.436 A:middle
decode this into an array of

00:33:19.466 --> 00:33:21.066 A:middle
MKGeoJSON objections.

00:33:22.046 --> 00:33:23.676 A:middle
We'll subsequently parse these

00:33:23.676 --> 00:33:24.216 A:middle
objects.

00:33:24.686 --> 00:33:25.626 A:middle
Let's go ahead and implement the

00:33:25.626 --> 00:33:25.976 A:middle
parse function.

00:33:32.096 --> 00:33:34.476 A:middle
We'll iterate through the

00:33:34.476 --> 00:33:35.706 A:middle
GeoJSON objects.

00:33:36.286 --> 00:33:38.676 A:middle
We saw in our JSON that the top

00:33:38.676 --> 00:33:40.186 A:middle
level is feature, so we will

00:33:40.186 --> 00:33:41.456 A:middle
treat this object as

00:33:41.456 --> 00:33:42.716 A:middle
MKGeoJSONFeature.

00:33:43.306 --> 00:33:44.686 A:middle
In a generic parser, we would

00:33:44.686 --> 00:33:46.126 A:middle
want to handle other geometry

00:33:46.126 --> 00:33:46.896 A:middle
objects as well.

00:33:47.746 --> 00:33:48.646 A:middle
We'll iterate through the

00:33:48.646 --> 00:33:50.666 A:middle
feature.geometry and we'll

00:33:50.666 --> 00:33:52.546 A:middle
filter this into native MapKit

00:33:52.576 --> 00:33:54.606 A:middle
types, which is MKMultiPolygon.

00:33:55.466 --> 00:33:57.376 A:middle
We will add this to an array of

00:33:57.436 --> 00:33:58.056 A:middle
overlays.

00:33:58.676 --> 00:33:59.756 A:middle
This is the array we will

00:33:59.756 --> 00:34:02.256 A:middle
leverage to add the overlays to

00:33:59.756 --> 00:34:02.256 A:middle
leverage to add the overlays to

00:34:02.256 --> 00:34:02.786 A:middle
the map view.

00:34:03.086 --> 00:34:04.536 A:middle
So let's go to the event view

00:34:04.536 --> 00:34:06.276 A:middle
controller where the map view is

00:34:06.276 --> 00:34:06.976 A:middle
set up and add the overlays.

00:34:11.876 --> 00:34:13.886 A:middle
For every overlay that we add to

00:34:13.886 --> 00:34:15.626 A:middle
the map view, we need to provide

00:34:15.626 --> 00:34:16.966 A:middle
a renderer in the map view's

00:34:16.966 --> 00:34:17.706 A:middle
delegate method.

00:34:18.536 --> 00:34:19.545 A:middle
Let's go ahead and set up the

00:34:19.545 --> 00:34:19.976 A:middle
delegate method.

00:34:24.666 --> 00:34:26.946 A:middle
We are past the MKOverlay in the

00:34:26.946 --> 00:34:28.536 A:middle
delegate method and we are

00:34:28.536 --> 00:34:29.696 A:middle
expected to return our

00:34:29.696 --> 00:34:30.966 A:middle
MKOverlayRenderer.

00:34:31.315 --> 00:34:32.466 A:middle
So let's go ahead and set up the

00:34:32.466 --> 00:34:32.876 A:middle
renderer.

00:34:37.936 --> 00:34:40.315 A:middle
We saw that our geometry of our

00:34:40.396 --> 00:34:42.216 A:middle
tent is MultiPolygon.

00:34:42.255 --> 00:34:44.045 A:middle
So we'll treat this overlay as

00:34:44.156 --> 00:34:45.255 A:middle
MKMultiPolygon.

00:34:46.045 --> 00:34:47.556 A:middle
Here we specify the visual

00:34:47.556 --> 00:34:49.476 A:middle
representation of the polygon

00:34:49.476 --> 00:34:51.786 A:middle
overlay and we specify how we

00:34:51.786 --> 00:34:53.456 A:middle
want our tents to be rendered.

00:34:53.456 --> 00:34:55.956 A:middle
So now that we have the overlays

00:34:55.956 --> 00:34:57.306 A:middle
added and the visual

00:34:57.306 --> 00:34:58.786 A:middle
representation specified for the

00:34:58.786 --> 00:35:00.566 A:middle
same, let's go ahead and execute

00:34:58.786 --> 00:35:00.566 A:middle
same, let's go ahead and execute

00:35:00.566 --> 00:35:00.976 A:middle
our application.

00:35:05.266 --> 00:35:06.506 A:middle
Looking at the Concert in the

00:35:06.506 --> 00:35:08.006 A:middle
Park, and there you go.

00:35:08.426 --> 00:35:10.796 A:middle
We now see the tent outlines

00:35:11.076 --> 00:35:12.676 A:middle
rendered as overlays on the map

00:35:12.676 --> 00:35:12.926 A:middle
view.

00:35:13.426 --> 00:35:15.576 A:middle
It would be helpful to display

00:35:15.576 --> 00:35:17.826 A:middle
the tent labels so we know where

00:35:17.826 --> 00:35:18.746 A:middle
we can get the food and the

00:35:18.746 --> 00:35:19.396 A:middle
drinks from.

00:35:20.226 --> 00:35:21.776 A:middle
We'll be displaying these labels

00:35:21.776 --> 00:35:23.476 A:middle
as annotations on the map view.

00:35:23.866 --> 00:35:25.376 A:middle
So let's go back to the event

00:35:25.376 --> 00:35:26.186 A:middle
data source.

00:35:29.116 --> 00:35:30.596 A:middle
The way the map view handles

00:35:30.596 --> 00:35:32.026 A:middle
annotations is different than

00:35:32.026 --> 00:35:32.686 A:middle
overlays.

00:35:32.856 --> 00:35:34.326 A:middle
So we'll separate the

00:35:34.326 --> 00:35:35.746 A:middle
annotations from the overlays.

00:35:41.516 --> 00:35:43.456 A:middle
The names of the annotations is

00:35:43.506 --> 00:35:45.136 A:middle
parsed in feature.properties.

00:35:45.956 --> 00:35:47.896 A:middle
This is the data we will use to

00:35:47.896 --> 00:35:49.176 A:middle
configure the annotation.

00:35:49.776 --> 00:35:50.876 A:middle
So let's go ahead and implement

00:35:50.876 --> 00:35:51.896 A:middle
the configure function.

00:35:57.636 --> 00:35:59.766 A:middle
The properties of our points is

00:35:59.766 --> 00:36:01.396 A:middle
a dictionary mapping of string

00:35:59.766 --> 00:36:01.396 A:middle
a dictionary mapping of string

00:36:01.536 --> 00:36:02.056 A:middle
to string.

00:36:03.166 --> 00:36:05.216 A:middle
We will use Swift's JSONDecoder

00:36:05.796 --> 00:36:07.936 A:middle
to decode this into a dictionary

00:36:07.936 --> 00:36:08.556 A:middle
of strings.

00:36:09.676 --> 00:36:11.326 A:middle
We'll add this configured data

00:36:11.836 --> 00:36:13.336 A:middle
to an array of annotations.

00:36:13.336 --> 00:36:15.276 A:middle
This is the array we will

00:36:15.276 --> 00:36:17.136 A:middle
leverage to add the annotations

00:36:17.136 --> 00:36:17.736 A:middle
to the map view.

00:36:18.646 --> 00:36:19.686 A:middle
So let's go to the event view

00:36:19.686 --> 00:36:21.076 A:middle
controller and add the

00:36:21.076 --> 00:36:22.706 A:middle
annotations to the map view.

00:36:26.666 --> 00:36:28.216 A:middle
Let's set up the view for the

00:36:28.216 --> 00:36:28.886 A:middle
annotation.

00:36:33.196 --> 00:36:34.126 A:middle
We will use the

00:36:34.126 --> 00:36:37.036 A:middle
MKMapViewDefaultAnnotation

00:36:37.036 --> 00:36:39.376 A:middle
ViewReuseIdentifier constant to

00:36:39.376 --> 00:36:41.116 A:middle
register our custom annotation.

00:36:41.826 --> 00:36:44.156 A:middle
Now that we have the model and

00:36:44.156 --> 00:36:45.546 A:middle
the view set up for our

00:36:45.546 --> 00:36:46.526 A:middle
annotations, let's execute our

00:36:46.526 --> 00:36:46.946 A:middle
application.

00:36:54.906 --> 00:36:57.116 A:middle
So we now see the tent labels

00:36:57.856 --> 00:36:58.586 A:middle
which are rendered as

00:36:58.586 --> 00:37:00.016 A:middle
annotations on the map view.

00:36:58.586 --> 00:37:00.016 A:middle
annotations on the map view.

00:37:00.796 --> 00:37:02.676 A:middle
We just saw how to render

00:37:02.786 --> 00:37:04.436 A:middle
annotations and overlays from

00:37:04.436 --> 00:37:05.626 A:middle
GeoJSON data.

00:37:06.916 --> 00:37:08.666 A:middle
However, in our map view, we've

00:37:08.666 --> 00:37:10.146 A:middle
seen numerous points of interest

00:37:10.146 --> 00:37:11.446 A:middle
which are displayed which are

00:37:11.446 --> 00:37:12.506 A:middle
interfering with our map.

00:37:13.386 --> 00:37:15.026 A:middle
Let's leverage the

00:37:15.026 --> 00:37:16.546 A:middle
exclude all point of interest filter that

00:37:16.546 --> 00:37:18.116 A:middle
Alexander was talking about to

00:37:18.116 --> 00:37:18.976 A:middle
turn these off.

00:37:24.886 --> 00:37:25.946 A:middle
Now that we have the

00:37:25.946 --> 00:37:27.316 A:middle
pointOfInterestFilter applied,

00:37:27.486 --> 00:37:28.906 A:middle
let's execute our application.

00:37:35.186 --> 00:37:37.986 A:middle
And we just saw how easy it is

00:37:38.446 --> 00:37:40.506 A:middle
to enable users to focus on

00:37:40.506 --> 00:37:42.866 A:middle
information relevant to our use

00:37:42.866 --> 00:37:43.246 A:middle
case.

00:37:43.616 --> 00:37:45.036 A:middle
With that, I hand over back to

00:37:45.036 --> 00:37:45.556 A:middle
Alexander.

00:37:46.516 --> 00:37:50.756 A:middle
[ Applause ]

00:37:51.256 --> 00:37:53.136 A:middle
&gt;&gt; As you saw in this demo, the

00:37:53.136 --> 00:37:55.446 A:middle
new MKGeoJSONDecoder can make it

00:37:55.446 --> 00:37:56.726 A:middle
a lot easier for you when

00:37:56.726 --> 00:37:57.656 A:middle
working with GeoJSON.

00:37:57.656 --> 00:38:00.876 A:middle
So it was pretty straightforward

00:37:57.656 --> 00:38:00.876 A:middle
So it was pretty straightforward

00:38:00.876 --> 00:38:03.236 A:middle
to get this event map rendered

00:38:03.236 --> 00:38:03.926 A:middle
in the map view.

00:38:04.506 --> 00:38:07.446 A:middle
But in some use cases like when

00:38:07.446 --> 00:38:08.806 A:middle
you're dealing with indoor data

00:38:09.056 --> 00:38:11.406 A:middle
for large venues, your data is

00:38:11.406 --> 00:38:12.746 A:middle
much more complex.

00:38:15.406 --> 00:38:17.336 A:middle
So, to standardize and simplify

00:38:17.336 --> 00:38:19.416 A:middle
work with this kind of complex

00:38:19.416 --> 00:38:21.226 A:middle
indoor data, we have developed

00:38:21.276 --> 00:38:23.186 A:middle
the indoor mapping data format,

00:38:23.636 --> 00:38:24.146 A:middle
IMDF.

00:38:24.886 --> 00:38:28.236 A:middle
The IMDF specification is built

00:38:28.236 --> 00:38:30.076 A:middle
on top of GeoJSON that we just

00:38:30.236 --> 00:38:32.756 A:middle
talked about and it provides a

00:38:32.756 --> 00:38:34.906 A:middle
comprehensive model for indoor

00:38:34.906 --> 00:38:36.606 A:middle
data that lets you deal with any

00:38:36.606 --> 00:38:38.856 A:middle
conforming JSON in a generalized

00:38:38.856 --> 00:38:39.126 A:middle
way.

00:38:39.706 --> 00:38:42.116 A:middle
And to learn more about how to

00:38:42.116 --> 00:38:43.976 A:middle
render rich indoor data in your

00:38:43.976 --> 00:38:45.576 A:middle
maps, I strongly recommend

00:38:45.576 --> 00:38:47.096 A:middle
watching this session, Adding

00:38:47.096 --> 00:38:48.556 A:middle
Indoor Maps to your App and

00:38:48.556 --> 00:38:51.076 A:middle
Website, which is tomorrow at 2

00:38:51.076 --> 00:38:53.696 A:middle
p.m. And that session will cover

00:38:53.696 --> 00:38:55.376 A:middle
the IMDF specification in much

00:38:55.376 --> 00:38:55.836 A:middle
more detail.

00:38:56.436 --> 00:38:59.956 A:middle
And that's all I'm going to talk

00:38:59.956 --> 00:39:03.116 A:middle
about the new GeoJSON support in

00:38:59.956 --> 00:39:03.116 A:middle
about the new GeoJSON support in

00:39:04.036 --> 00:39:04.436 A:middle
MapKit.

00:39:04.856 --> 00:39:06.386 A:middle
So the last big topic I want to

00:39:06.386 --> 00:39:08.546 A:middle
cover is a set of new APIs in

00:39:08.546 --> 00:39:10.736 A:middle
MapKit and MapKit JS that lets

00:39:10.736 --> 00:39:12.146 A:middle
you really take control over the

00:39:12.146 --> 00:39:13.436 A:middle
map view's camera.

00:39:14.206 --> 00:39:16.076 A:middle
And to show you this, we'll take

00:39:16.076 --> 00:39:17.886 A:middle
another look at the event view

00:39:18.086 --> 00:39:19.706 A:middle
in the companion app.

00:39:20.536 --> 00:39:23.166 A:middle
So this view is intended to show

00:39:23.166 --> 00:39:24.516 A:middle
this event map.

00:39:24.826 --> 00:39:26.296 A:middle
There's very little reason for

00:39:26.296 --> 00:39:28.116 A:middle
users to pan away to San

00:39:28.116 --> 00:39:29.226 A:middle
Francisco, for example.

00:39:29.766 --> 00:39:32.676 A:middle
So, to focus the map view on the

00:39:32.676 --> 00:39:34.516 A:middle
region that matters, you can add

00:39:34.516 --> 00:39:37.216 A:middle
a boundary that limits the area

00:39:37.216 --> 00:39:38.336 A:middle
where the user can pan.

00:39:38.956 --> 00:39:41.766 A:middle
So we introduced a new class

00:39:41.766 --> 00:39:44.026 A:middle
called Camera Boundary that

00:39:44.026 --> 00:39:46.076 A:middle
defines a region within which

00:39:46.076 --> 00:39:47.586 A:middle
the center point of your map

00:39:47.706 --> 00:39:49.416 A:middle
view always needs to remain.

00:39:52.336 --> 00:39:54.006 A:middle
There are two ways to create a

00:39:54.006 --> 00:39:56.146 A:middle
camera boundary, either using a

00:39:56.146 --> 00:39:58.576 A:middle
coordinate region or a MapRect.

00:39:59.146 --> 00:40:00.226 A:middle
Now once you've created your

00:39:59.146 --> 00:40:00.226 A:middle
Now once you've created your

00:40:00.226 --> 00:40:02.396 A:middle
camera boundary, you apply it to

00:40:02.396 --> 00:40:03.306 A:middle
the map view's new

00:40:03.376 --> 00:40:04.686 A:middle
cameraBoundary property.

00:40:06.456 --> 00:40:08.796 A:middle
But before you do, make sure

00:40:08.796 --> 00:40:10.486 A:middle
that your map view is centered

00:40:10.486 --> 00:40:12.126 A:middle
over a location inside that

00:40:12.126 --> 00:40:12.936 A:middle
camera boundary.

00:40:14.096 --> 00:40:15.336 A:middle
You know your apps better than

00:40:15.336 --> 00:40:17.316 A:middle
anyone else and if your map view

00:40:17.316 --> 00:40:19.026 A:middle
is located outside of the camera

00:40:19.026 --> 00:40:20.276 A:middle
boundary that you're applying,

00:40:20.756 --> 00:40:22.596 A:middle
the map view will update to a

00:40:22.596 --> 00:40:24.166 A:middle
location inside the boundary.

00:40:24.746 --> 00:40:26.156 A:middle
And in most cases this will not

00:40:26.206 --> 00:40:27.476 A:middle
be the location you would have

00:40:27.476 --> 00:40:28.686 A:middle
chosen for your users.

00:40:29.196 --> 00:40:32.156 A:middle
And once the cameraBoundary has

00:40:32.156 --> 00:40:34.696 A:middle
been applied, the map view will

00:40:34.696 --> 00:40:35.906 A:middle
strictly enforce it.

00:40:36.826 --> 00:40:38.346 A:middle
This means that if you call

00:40:38.706 --> 00:40:42.516 A:middle
setRegion for example with a

00:40:42.516 --> 00:40:43.656 A:middle
location that would force the

00:40:43.656 --> 00:40:45.506 A:middle
map view to move outside of the

00:40:45.506 --> 00:40:47.696 A:middle
camera boundary it will instead

00:40:47.696 --> 00:40:49.836 A:middle
move as close as it can but it

00:40:49.836 --> 00:40:51.456 A:middle
will not violate its camera

00:40:51.456 --> 00:40:51.836 A:middle
boundary.

00:40:52.416 --> 00:40:54.616 A:middle
And this is of course not just

00:40:54.616 --> 00:40:57.006 A:middle
true for setRegion but any API

00:40:57.346 --> 00:40:59.086 A:middle
that modifies the center point

00:40:59.126 --> 00:41:00.026 A:middle
of your map views.

00:40:59.126 --> 00:41:00.026 A:middle
of your map views.

00:41:00.526 --> 00:41:03.856 A:middle
And we've also added support for

00:41:03.856 --> 00:41:06.226 A:middle
camera boundaries in MapKit JS

00:41:07.266 --> 00:41:08.696 A:middle
and there's a slight difference

00:41:08.696 --> 00:41:09.516 A:middle
in how it works.

00:41:09.706 --> 00:41:10.756 A:middle
You use either a

00:41:10.756 --> 00:41:13.356 A:middle
CoordinateRegion or a MapRect as

00:41:13.356 --> 00:41:14.326 A:middle
your camera boundary.

00:41:14.866 --> 00:41:17.076 A:middle
So you simply apply either your

00:41:17.076 --> 00:41:18.426 A:middle
CoordinateRegion or your MapRect

00:41:18.586 --> 00:41:19.766 A:middle
to the new cameraBoundary

00:41:19.766 --> 00:41:21.696 A:middle
property on your map object.

00:41:24.076 --> 00:41:26.156 A:middle
So we now have a mechanism for

00:41:26.516 --> 00:41:28.126 A:middle
keeping our map views in the

00:41:28.126 --> 00:41:29.176 A:middle
region that matters.

00:41:30.016 --> 00:41:31.866 A:middle
But users can still zoom out to

00:41:31.866 --> 00:41:33.086 A:middle
the point where that region is

00:41:33.086 --> 00:41:33.926 A:middle
no longer visible.

00:41:34.426 --> 00:41:36.446 A:middle
And that's possible because the

00:41:36.446 --> 00:41:38.206 A:middle
camera boundary only ensures

00:41:38.306 --> 00:41:39.476 A:middle
that the center point of the map

00:41:39.976 --> 00:41:41.086 A:middle
is inside that region.

00:41:41.656 --> 00:41:43.366 A:middle
And we're still centered over

00:41:43.366 --> 00:41:44.436 A:middle
that park.

00:41:44.716 --> 00:41:46.036 A:middle
We're just really, really zoomed

00:41:46.036 --> 00:41:46.216 A:middle
out.

00:41:47.606 --> 00:41:49.306 A:middle
So we also need a way to limit

00:41:49.376 --> 00:41:51.066 A:middle
the zoom in the map views.

00:41:51.576 --> 00:41:54.226 A:middle
And the map view zoom is

00:41:54.226 --> 00:41:55.446 A:middle
controlled by its camera.

00:41:56.346 --> 00:41:57.986 A:middle
And if you use the MKMapCamera

00:41:57.986 --> 00:41:59.446 A:middle
in your apps in the past, you've

00:41:59.446 --> 00:42:00.546 A:middle
probably worked with the

00:41:59.446 --> 00:42:00.546 A:middle
probably worked with the

00:42:00.546 --> 00:42:01.386 A:middle
altitude API.

00:42:02.656 --> 00:42:04.226 A:middle
However, if you work with pitch

00:42:04.226 --> 00:42:05.776 A:middle
cameras, it's much more

00:42:05.776 --> 00:42:07.396 A:middle
intuitive to think about the

00:42:07.396 --> 00:42:08.666 A:middle
distance from the center

00:42:08.666 --> 00:42:10.356 A:middle
coordinate of your map up to the

00:42:10.356 --> 00:42:10.746 A:middle
camera.

00:42:11.906 --> 00:42:13.346 A:middle
And this is also the distance

00:42:13.346 --> 00:42:14.636 A:middle
that controls the zoom in your

00:42:14.636 --> 00:42:15.166 A:middle
map views.

00:42:16.456 --> 00:42:18.396 A:middle
So for this reason we have

00:42:18.396 --> 00:42:20.146 A:middle
introduced a new property on

00:42:20.186 --> 00:42:21.846 A:middle
MKMapCamera called Center

00:42:21.846 --> 00:42:25.536 A:middle
Coordinate Distance.

00:42:25.626 --> 00:42:28.176 A:middle
And I would like to encourage

00:42:28.176 --> 00:42:29.856 A:middle
you to move away from thinking

00:42:29.856 --> 00:42:32.166 A:middle
about altitude and instead

00:42:32.286 --> 00:42:34.476 A:middle
thinking about the distance from

00:42:34.476 --> 00:42:35.546 A:middle
the center coordinate up to the

00:42:35.546 --> 00:42:35.936 A:middle
camera.

00:42:36.836 --> 00:42:37.746 A:middle
And when you make this

00:42:37.746 --> 00:42:39.696 A:middle
transition in your code, there's

00:42:39.696 --> 00:42:40.756 A:middle
one important thing to keep in

00:42:40.756 --> 00:42:41.126 A:middle
mind.

00:42:41.696 --> 00:42:44.856 A:middle
In an altitude centric model

00:42:44.856 --> 00:42:46.816 A:middle
like we've used in the past, a

00:42:46.816 --> 00:42:48.356 A:middle
change to the pitch of the

00:42:48.356 --> 00:42:50.296 A:middle
camera has meant that the camera

00:42:50.296 --> 00:42:51.736 A:middle
moves farther away from the

00:42:51.736 --> 00:42:53.386 A:middle
center point while preserving

00:42:53.386 --> 00:42:54.076 A:middle
its altitude.

00:42:55.546 --> 00:42:57.376 A:middle
But in a distance centric model,

00:42:57.726 --> 00:42:58.716 A:middle
when you change the pitch of

00:42:58.716 --> 00:43:00.396 A:middle
your camera, the expectation is

00:42:58.716 --> 00:43:00.396 A:middle
your camera, the expectation is

00:43:00.396 --> 00:43:02.856 A:middle
instead that the distance will

00:43:02.856 --> 00:43:05.446 A:middle
be preserved and as a result the

00:43:05.536 --> 00:43:07.326 A:middle
altitude will change.

00:43:08.636 --> 00:43:11.076 A:middle
MKMapCamera has now been updated

00:43:11.076 --> 00:43:13.076 A:middle
so the behavior of the pitch

00:43:13.126 --> 00:43:16.646 A:middle
property will change if you set

00:43:16.706 --> 00:43:18.726 A:middle
a Center Coordinate Distance.

00:43:19.606 --> 00:43:21.946 A:middle
So you now know that the Center

00:43:21.946 --> 00:43:23.176 A:middle
Coordinate Distance is what

00:43:23.276 --> 00:43:24.656 A:middle
controls the zoom of your map

00:43:24.706 --> 00:43:24.956 A:middle
view.

00:43:25.226 --> 00:43:26.066 A:middle
But how do you actually

00:43:26.066 --> 00:43:26.526 A:middle
constrain it?

00:43:27.086 --> 00:43:28.686 A:middle
For this purpose we've

00:43:28.686 --> 00:43:29.956 A:middle
introduced another new class

00:43:29.956 --> 00:43:31.676 A:middle
called CameraZoomRange.

00:43:32.206 --> 00:43:34.966 A:middle
And the CameraZoomRange defines

00:43:34.966 --> 00:43:37.526 A:middle
a minimum and a maximum Center

00:43:37.526 --> 00:43:38.496 A:middle
Coordinate Distance.

00:43:38.796 --> 00:43:39.566 A:middle
And when you apply the

00:43:39.566 --> 00:43:40.736 A:middle
CameraZoomRange to your map

00:43:40.736 --> 00:43:43.046 A:middle
view, the camera will be forced

00:43:43.216 --> 00:43:44.386 A:middle
to stay in that range.

00:43:46.116 --> 00:43:47.376 A:middle
So you simply create your

00:43:47.376 --> 00:43:49.686 A:middle
CameraZoomRange with a minimum

00:43:49.686 --> 00:43:51.716 A:middle
and a maximum distance and then

00:43:51.716 --> 00:43:52.806 A:middle
you apply it to the new

00:43:52.806 --> 00:43:54.426 A:middle
CameraZoomRange property on your

00:43:54.426 --> 00:43:54.916 A:middle
map view.

00:43:55.896 --> 00:43:57.226 A:middle
And if you want, you can also

00:43:57.226 --> 00:43:58.546 A:middle
create a CameraZoomRange with

00:43:58.546 --> 00:44:00.536 A:middle
only a minimum or only a maximum

00:43:58.546 --> 00:44:00.536 A:middle
only a minimum or only a maximum

00:44:00.536 --> 00:44:00.956 A:middle
distance.

00:44:03.246 --> 00:44:05.446 A:middle
As you've probably noticed in

00:44:05.446 --> 00:44:07.076 A:middle
the past, even without the

00:44:07.076 --> 00:44:08.646 A:middle
CameraZoomRange there are

00:44:08.646 --> 00:44:10.206 A:middle
restrictions on how far in and

00:44:10.206 --> 00:44:11.756 A:middle
out you can zoom in a map view.

00:44:12.646 --> 00:44:14.076 A:middle
And these restrictions may

00:44:14.076 --> 00:44:15.506 A:middle
change depending on what region

00:44:15.506 --> 00:44:16.666 A:middle
of the world you're viewing or

00:44:16.666 --> 00:44:17.966 A:middle
what map type you're using.

00:44:19.036 --> 00:44:20.246 A:middle
In some cases there are

00:44:20.246 --> 00:44:21.886 A:middle
technical limitations for these

00:44:21.886 --> 00:44:23.346 A:middle
restrictions but in some cases

00:44:23.346 --> 00:44:24.566 A:middle
there are legal reasons.

00:44:25.506 --> 00:44:27.626 A:middle
What this means is even if you

00:44:27.626 --> 00:44:29.696 A:middle
apply a CameraZoomRange with a

00:44:29.696 --> 00:44:32.166 A:middle
minimum distance that is shorter

00:44:32.166 --> 00:44:33.956 A:middle
than the default of the MapView,

00:44:34.586 --> 00:44:36.196 A:middle
your users will not be able to

00:44:36.196 --> 00:44:37.396 A:middle
zoom in any farther.

00:44:38.096 --> 00:44:40.396 A:middle
And similarly a larger max

00:44:40.396 --> 00:44:41.706 A:middle
distance will not allow your

00:44:41.706 --> 00:44:43.306 A:middle
users to zoom out any farther.

00:44:43.846 --> 00:44:48.296 A:middle
And if your camera is outside of

00:44:48.296 --> 00:44:49.216 A:middle
the CameraZoomRange you're

00:44:49.216 --> 00:44:50.996 A:middle
applying, the MapView will

00:44:50.996 --> 00:44:52.386 A:middle
update the Center Coordinate

00:44:52.386 --> 00:44:53.436 A:middle
Distance of your camera.

00:44:54.156 --> 00:44:54.896 A:middle
So just like with the

00:44:54.896 --> 00:44:56.556 A:middle
cameraBoundary, the map view

00:44:56.556 --> 00:44:57.896 A:middle
will strictly enforce the

00:44:57.896 --> 00:44:59.946 A:middle
CameraZoomRange once you're

00:45:00.186 --> 00:45:01.426 A:middle
adding it.

00:45:02.766 --> 00:45:04.366 A:middle
And we've also added support for

00:45:04.366 --> 00:45:06.386 A:middle
camera zoom ranges in MapKit JS.

00:45:06.386 --> 00:45:08.586 A:middle
So there's a new CameraZoomRange

00:45:08.586 --> 00:45:10.426 A:middle
object added to the MapKit

00:45:10.426 --> 00:45:10.796 A:middle
object.

00:45:11.426 --> 00:45:12.746 A:middle
And in the same way you can

00:45:12.746 --> 00:45:14.116 A:middle
create it with a minimum and a

00:45:14.116 --> 00:45:16.186 A:middle
maximum or just one of the two.

00:45:16.996 --> 00:45:18.026 A:middle
You then apply it to the new

00:45:18.026 --> 00:45:19.576 A:middle
CameraZoomRange property on your

00:45:19.576 --> 00:45:19.976 A:middle
map object.

00:45:23.576 --> 00:45:25.326 A:middle
All right, and I will now hand

00:45:25.326 --> 00:45:26.776 A:middle
it back one more time to my

00:45:26.776 --> 00:45:27.496 A:middle
colleague Nalini.

00:45:27.596 --> 00:45:28.716 A:middle
And this time she will show you

00:45:28.716 --> 00:45:30.376 A:middle
how to use these camera zoom

00:45:30.376 --> 00:45:32.316 A:middle
ranges and camera boundaries to

00:45:32.316 --> 00:45:33.606 A:middle
improve the experience in your

00:45:33.606 --> 00:45:33.976 A:middle
map views.

00:45:34.516 --> 00:45:39.326 A:middle
[ Applause ]

00:45:39.826 --> 00:45:40.576 A:middle
&gt;&gt; Here we are looking at the

00:45:40.576 --> 00:45:42.416 A:middle
concept map where we just

00:45:42.416 --> 00:45:43.526 A:middle
rendered annotations and

00:45:43.526 --> 00:45:44.076 A:middle
overlays.

00:45:47.566 --> 00:45:49.296 A:middle
I'm zooming out of the concept

00:45:49.296 --> 00:45:51.336 A:middle
area and users can zoom out to

00:45:51.336 --> 00:45:53.266 A:middle
San Jose and all of California.

00:45:54.206 --> 00:45:55.886 A:middle
We want to control the zoom

00:45:55.886 --> 00:45:56.816 A:middle
range of the map view.

00:45:57.486 --> 00:45:58.586 A:middle
Let's leverage the

00:45:58.586 --> 00:45:59.956 A:middle
CameraZoomRange API that

00:46:00.126 --> 00:46:00.926 A:middle
Alexander was talking about.

00:46:10.596 --> 00:46:12.196 A:middle
The min and the max are

00:46:12.196 --> 00:46:13.386 A:middle
specified in meters.

00:46:14.146 --> 00:46:15.926 A:middle
By applying a CameraZoomRange to

00:46:15.926 --> 00:46:17.836 A:middle
the map view, we restrict how

00:46:17.836 --> 00:46:20.046 A:middle
far in and out users can zoom in

00:46:20.046 --> 00:46:20.526 A:middle
the map view.

00:46:22.036 --> 00:46:23.606 A:middle
Let's execute our application

00:46:23.606 --> 00:46:24.716 A:middle
with the CameraZoomRange

00:46:24.716 --> 00:46:24.976 A:middle
applied.

00:46:31.446 --> 00:46:33.126 A:middle
I'm trying to zoom out again.

00:46:33.396 --> 00:46:34.416 A:middle
OK, I cannot zoom out.

00:46:34.796 --> 00:46:36.266 A:middle
Let's try to zoom in.

00:46:38.846 --> 00:46:39.986 A:middle
I'm zooming in.

00:46:40.496 --> 00:46:42.696 A:middle
I can get to the stage.

00:46:42.986 --> 00:46:44.896 A:middle
I can get to the different tents

00:46:44.896 --> 00:46:45.656 A:middle
in the concert area.

00:46:46.276 --> 00:46:47.886 A:middle
So this zoom range is perfect

00:46:47.886 --> 00:46:49.606 A:middle
for our use case.

00:46:50.316 --> 00:46:53.226 A:middle
However, as you can see, users

00:46:53.226 --> 00:46:54.006 A:middle
can pan away.

00:46:54.846 --> 00:46:57.166 A:middle
We want users to focus on the

00:46:57.166 --> 00:46:57.896 A:middle
concert area.

00:46:58.656 --> 00:46:59.846 A:middle
Let's leverage the

00:46:59.846 --> 00:47:01.726 A:middle
cameraBoundary API that

00:46:59.846 --> 00:47:01.726 A:middle
cameraBoundary API that

00:47:01.726 --> 00:47:02.976 A:middle
Alexander was talking about.

00:47:11.476 --> 00:47:13.626 A:middle
We set up our MKCoordinateRegion

00:47:13.736 --> 00:47:15.086 A:middle
with the eventCenter as its

00:47:15.086 --> 00:47:16.456 A:middle
center point and a span of

00:47:16.516 --> 00:47:19.546 A:middle
latitudinalMeters: 20 and

00:47:19.546 --> 00:47:20.896 A:middle
longitudinalMeters: 10.

00:47:21.656 --> 00:47:23.606 A:middle
We use this coordinateRegion to

00:47:23.676 --> 00:47:25.096 A:middle
apply the CameraBoundary.

00:47:25.856 --> 00:47:27.326 A:middle
By applying a CameraBoundary to

00:47:27.326 --> 00:47:29.176 A:middle
the map view, we ensure the

00:47:29.176 --> 00:47:30.536 A:middle
center point of the map view

00:47:30.736 --> 00:47:31.846 A:middle
lies within this region.

00:47:32.626 --> 00:47:34.206 A:middle
Let's execute our application

00:47:34.206 --> 00:47:34.976 A:middle
with the CameraBoundary applied.

00:47:41.626 --> 00:47:42.956 A:middle
I'm going to try to pan away.

00:47:43.646 --> 00:47:44.896 A:middle
As you can see I cannot pan

00:47:44.896 --> 00:47:45.156 A:middle
away.

00:47:46.296 --> 00:47:47.976 A:middle
Let's try zooming in.

00:47:50.396 --> 00:47:51.636 A:middle
I really want to get to that

00:47:51.636 --> 00:47:52.766 A:middle
fancy stage area.

00:47:53.546 --> 00:47:55.076 A:middle
Rumor has it Lady Gaga may be

00:47:55.076 --> 00:47:57.066 A:middle
performing but it seems I cannot

00:47:57.066 --> 00:47:57.536 A:middle
get to it.

00:47:58.166 --> 00:47:59.306 A:middle
Let's try with some updated

00:47:59.306 --> 00:47:59.816 A:middle
numbers.

00:48:00.566 --> 00:48:01.736 A:middle
Let's try with

00:48:01.736 --> 00:48:04.516 A:middle
latitudinalMeters: 100 and

00:48:04.516 --> 00:48:07.456 A:middle
longitudinalMeters: 80 and let's

00:48:07.456 --> 00:48:09.136 A:middle
execute our application with

00:48:09.136 --> 00:48:09.926 A:middle
these updated numbers.

00:48:14.866 --> 00:48:16.506 A:middle
OK, I'm going to zoom in again

00:48:16.626 --> 00:48:17.786 A:middle
and try to get to the stage

00:48:17.786 --> 00:48:17.976 A:middle
area.

00:48:21.336 --> 00:48:23.216 A:middle
And as you can see I can get to

00:48:23.216 --> 00:48:25.256 A:middle
the stage area, I can get to the

00:48:25.256 --> 00:48:25.836 A:middle
restrooms.

00:48:26.766 --> 00:48:29.286 A:middle
We just saw how to leverage the

00:48:29.286 --> 00:48:30.696 A:middle
cameraBoundary and the

00:48:30.696 --> 00:48:33.166 A:middle
CameraZoomRange APIs and ensure

00:48:33.556 --> 00:48:34.886 A:middle
that users can focus on

00:48:34.886 --> 00:48:36.816 A:middle
information relevant to our use

00:48:36.816 --> 00:48:37.106 A:middle
case.

00:48:37.506 --> 00:48:38.806 A:middle
With that, I hand it back to

00:48:38.806 --> 00:48:39.286 A:middle
Alexander.

00:48:40.516 --> 00:48:44.556 A:middle
[ Applause ]

00:48:45.056 --> 00:48:47.156 A:middle
&gt;&gt; So, once again, just a few

00:48:47.156 --> 00:48:48.856 A:middle
lines of code change and you get

00:48:48.856 --> 00:48:50.636 A:middle
a completely different map view

00:48:50.636 --> 00:48:51.326 A:middle
experience.

00:48:51.916 --> 00:48:53.906 A:middle
So, try this out in your apps.

00:48:54.666 --> 00:48:56.596 A:middle
And that was actually the last

00:48:56.596 --> 00:48:58.316 A:middle
thing we wanted to cover for the

00:48:58.666 --> 00:49:00.336 A:middle
map view in camera APIs.

00:48:58.666 --> 00:49:00.336 A:middle
map view in camera APIs.

00:49:01.486 --> 00:49:03.036 A:middle
But like I said before we have

00:49:03.036 --> 00:49:04.086 A:middle
covered quite a lot of stuff

00:49:04.086 --> 00:49:04.446 A:middle
today.

00:49:04.916 --> 00:49:07.456 A:middle
So before we wrap up I want to

00:49:07.666 --> 00:49:09.276 A:middle
summarize the key points we have

00:49:09.276 --> 00:49:10.686 A:middle
talked about today that I hope

00:49:10.686 --> 00:49:11.686 A:middle
you will bring with you from

00:49:11.686 --> 00:49:12.216 A:middle
this session.

00:49:13.246 --> 00:49:15.206 A:middle
So with the introduction of the

00:49:15.206 --> 00:49:21.386 A:middle
new snapshot service you can now

00:49:21.386 --> 00:49:22.966 A:middle
create snapshots and use them on

00:49:22.966 --> 00:49:23.976 A:middle
the web as well.

00:49:24.426 --> 00:49:25.816 A:middle
So if you don't need user

00:49:25.816 --> 00:49:28.216 A:middle
interaction in your maps don't

00:49:28.216 --> 00:49:30.006 A:middle
waste resources loading a full

00:49:30.006 --> 00:49:31.406 A:middle
blown map.

00:49:33.066 --> 00:49:35.716 A:middle
And every app is unique and

00:49:35.716 --> 00:49:37.566 A:middle
different data is relevant in

00:49:37.566 --> 00:49:38.466 A:middle
different context.

00:49:38.966 --> 00:49:41.386 A:middle
So tailor your map views to your

00:49:41.386 --> 00:49:42.986 A:middle
needs in your apps using the new

00:49:42.986 --> 00:49:44.276 A:middle
pointOfInterestFilters.

00:49:44.766 --> 00:49:48.036 A:middle
And make sure that your search

00:49:48.036 --> 00:49:49.626 A:middle
and autocompletion results are

00:49:49.626 --> 00:49:51.046 A:middle
as relevant as possible for your

00:49:51.046 --> 00:49:52.726 A:middle
users using the new

00:49:52.726 --> 00:49:54.026 A:middle
pointOfInterestFilters and the

00:49:54.056 --> 00:49:54.846 A:middle
result type filters.

00:49:58.396 --> 00:50:00.586 A:middle
And if you're adding a lot of

00:49:58.396 --> 00:50:00.586 A:middle
And if you're adding a lot of

00:50:00.586 --> 00:50:02.136 A:middle
polygons and polylines in your

00:50:02.136 --> 00:50:04.216 A:middle
map views, group them using the

00:50:04.216 --> 00:50:05.536 A:middle
new multipolygons and

00:50:05.536 --> 00:50:05.976 A:middle
multipolylines.

00:50:09.266 --> 00:50:11.086 A:middle
And if you're working with

00:50:11.086 --> 00:50:13.586 A:middle
GeoJSON, take advantage of the

00:50:13.586 --> 00:50:16.056 A:middle
new support in MapKit and in

00:50:16.056 --> 00:50:18.026 A:middle
MapKit JS, that way you will

00:50:18.026 --> 00:50:19.486 A:middle
need to write less code and

00:50:19.526 --> 00:50:22.696 A:middle
maintain less code.

00:50:22.886 --> 00:50:27.296 A:middle
And if your map view is really

00:50:27.356 --> 00:50:31.176 A:middle
all about a fenced off area, try

00:50:31.176 --> 00:50:32.526 A:middle
out the new camera boundaries

00:50:32.526 --> 00:50:34.036 A:middle
and camera zoom ranges to really

00:50:34.116 --> 00:50:35.646 A:middle
focus your map views on the

00:50:35.696 --> 00:50:36.836 A:middle
region that matters.

00:50:37.336 --> 00:50:41.226 A:middle
And for more information and

00:50:41.226 --> 00:50:43.016 A:middle
sample code for both MapKits and

00:50:43.016 --> 00:50:45.096 A:middle
MapKit JS, visit this session's

00:50:45.096 --> 00:50:45.706 A:middle
web page.

00:50:45.886 --> 00:50:48.086 A:middle
And if you have any questions,

00:50:48.156 --> 00:50:50.046 A:middle
come by our lab tomorrow at 3

00:50:50.046 --> 00:50:52.516 A:middle
p.m. And with that, I will--

00:50:52.696 --> 00:50:54.126 A:middle
want to thank you for coming and

00:50:54.126 --> 00:50:55.326 A:middle
I hope you will have a very nice

00:50:55.326 --> 00:50:56.786 A:middle
evening and enjoy the last day

00:50:56.786 --> 00:50:57.626 A:middle
of Dub Dub tomorrow.

00:50:58.516 --> 00:51:03.500 A:middle
[ Applause ]
