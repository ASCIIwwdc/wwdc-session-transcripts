WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:11.176 --> 00:00:13.196 A:middle
&gt;&gt; Good afternoon.

00:00:13.306 --> 00:00:16.335 A:middle
Welcome to our session on

00:00:16.335 --> 00:00:17.236 A:middle
Working with USD.

00:00:17.926 --> 00:00:19.186 A:middle
It's great to be here.

00:00:19.926 --> 00:00:21.386 A:middle
My name is Denis Kovacs and I'm

00:00:21.386 --> 00:00:22.976 A:middle
going to be joined on stage by

00:00:22.976 --> 00:00:23.486 A:middle
Chloe Moore.

00:00:24.436 --> 00:00:26.316 A:middle
Last year, we introduced AR

00:00:26.316 --> 00:00:27.536 A:middle
Quick Look on iOS.

00:00:27.976 --> 00:00:30.266 A:middle
It's the simplest way to explore

00:00:30.266 --> 00:00:32.345 A:middle
3D content in AR on your

00:00:32.345 --> 00:00:32.906 A:middle
devices.

00:00:35.476 --> 00:00:37.806 A:middle
For instance, you can view the

00:00:37.806 --> 00:00:39.166 A:middle
model of a product you'd like to

00:00:39.166 --> 00:00:39.476 A:middle
buy.

00:00:40.066 --> 00:00:41.026 A:middle
You can place it in your own

00:00:41.026 --> 00:00:42.676 A:middle
space and get a real sense for

00:00:42.676 --> 00:00:43.486 A:middle
its true size.

00:00:44.666 --> 00:00:45.966 A:middle
As you move your device around,

00:00:46.256 --> 00:00:47.046 A:middle
the model appears firmly

00:00:47.046 --> 00:00:47.976 A:middle
grounded in your environment.

00:00:51.966 --> 00:00:53.316 A:middle
And you can also get a good

00:00:53.316 --> 00:00:54.686 A:middle
sense of how the real object

00:00:55.106 --> 00:00:56.566 A:middle
would look in your home because

00:00:56.896 --> 00:00:58.586 A:middle
the model is rendered using real

00:00:58.586 --> 00:00:59.636 A:middle
lighting conditions of your

00:00:59.636 --> 00:01:00.056 A:middle
space.

00:00:59.636 --> 00:01:00.056 A:middle
space.

00:01:01.106 --> 00:01:02.346 A:middle
Shiny materials like the

00:01:02.346 --> 00:01:03.416 A:middle
polished chrome on this lamp

00:01:03.916 --> 00:01:05.226 A:middle
even reflect your environment.

00:01:08.776 --> 00:01:10.706 A:middle
And AR is simply fun.

00:01:11.576 --> 00:01:13.246 A:middle
It's a really intuitive way to

00:01:13.246 --> 00:01:15.066 A:middle
explore and interact with your

00:01:15.066 --> 00:01:15.976 A:middle
beautiful 3D content.

00:01:21.286 --> 00:01:22.566 A:middle
Underneath all these AR

00:01:22.566 --> 00:01:24.586 A:middle
experiences is a file format we

00:01:24.586 --> 00:01:26.316 A:middle
introduced last year to our

00:01:26.316 --> 00:01:27.976 A:middle
platforms, USDZ.

00:01:30.306 --> 00:01:32.556 A:middle
USDZ support is deeply

00:01:32.556 --> 00:01:34.026 A:middle
integrated into our apps and

00:01:34.026 --> 00:01:36.096 A:middle
frameworks, so you can share AR

00:01:36.096 --> 00:01:37.316 A:middle
experiences with your friends

00:01:37.316 --> 00:01:39.776 A:middle
over Messages and Mail, you can

00:01:39.776 --> 00:01:41.766 A:middle
experience interactive news with

00:01:41.766 --> 00:01:44.336 A:middle
content coming to life in AR, or

00:01:44.336 --> 00:01:45.676 A:middle
you can find new experiences on

00:01:45.676 --> 00:01:47.636 A:middle
the web, and take them directly

00:01:47.636 --> 00:01:48.986 A:middle
into AR through Safari.

00:01:50.246 --> 00:01:51.766 A:middle
And you can build your own

00:01:51.766 --> 00:01:53.226 A:middle
beautiful apps that take

00:01:53.226 --> 00:01:54.456 A:middle
advantage of USDZ.

00:01:59.236 --> 00:02:02.496 A:middle
The technology behind USDZ is

00:01:59.236 --> 00:02:02.496 A:middle
The technology behind USDZ is

00:02:02.496 --> 00:02:05.046 A:middle
USD and it is the main topic of

00:02:05.086 --> 00:02:05.596 A:middle
this session.

00:02:09.096 --> 00:02:11.816 A:middle
So here's our agenda for today.

00:02:12.386 --> 00:02:14.056 A:middle
First, we will look at what USD

00:02:14.056 --> 00:02:14.256 A:middle
is.

00:02:14.256 --> 00:02:16.776 A:middle
We'll discuss some workflows

00:02:16.776 --> 00:02:18.186 A:middle
related to creating and

00:02:18.236 --> 00:02:20.426 A:middle
converting to USDZ.

00:02:20.576 --> 00:02:22.066 A:middle
The rest of the talk, we will

00:02:22.066 --> 00:02:24.146 A:middle
spend building an intuition for

00:02:24.146 --> 00:02:24.496 A:middle
USD.

00:02:25.556 --> 00:02:26.966 A:middle
Starting with some essentials

00:02:27.036 --> 00:02:28.716 A:middle
common to most 3D file formats

00:02:29.496 --> 00:02:30.636 A:middle
and we will end with some

00:02:30.636 --> 00:02:33.906 A:middle
features that are unique to USD.

00:02:34.176 --> 00:02:34.976 A:middle
So, what is USD?

00:02:38.206 --> 00:02:40.266 A:middle
USD stands for Universal Scene

00:02:40.266 --> 00:02:40.786 A:middle
Description.

00:02:42.086 --> 00:02:44.496 A:middle
It's a 3D file format and a

00:02:44.726 --> 00:02:46.856 A:middle
supporting C++ library with

00:02:46.856 --> 00:02:48.906 A:middle
Python bindings developed by

00:02:49.496 --> 00:02:49.666 A:middle
Pixar.

00:02:50.616 --> 00:02:53.516 A:middle
The library can read and write

00:02:54.236 --> 00:02:55.606 A:middle
USD files.

00:02:55.786 --> 00:02:57.226 A:middle
It contains a powerful

00:02:57.226 --> 00:02:58.846 A:middle
composition engine and much,

00:02:58.916 --> 00:02:59.476 A:middle
much more.

00:03:00.186 --> 00:03:02.416 A:middle
The focus of this library is on

00:03:02.416 --> 00:03:05.696 A:middle
speed, scalability and

00:03:05.696 --> 00:03:06.406 A:middle
collaboration.

00:03:07.196 --> 00:03:08.546 A:middle
There are three file extensions

00:03:08.836 --> 00:03:10.766 A:middle
associated with USD, a plain

00:03:10.766 --> 00:03:12.546 A:middle
text version, USDA, that is

00:03:12.976 --> 00:03:16.496 A:middle
designed to be as easy to read

00:03:16.856 --> 00:03:19.156 A:middle
and understand as possible.

00:03:20.006 --> 00:03:22.656 A:middle
A binary version, USDC, that is

00:03:22.746 --> 00:03:25.046 A:middle
as efficient as possible to read

00:03:25.046 --> 00:03:25.456 A:middle
and write.

00:03:26.176 --> 00:03:28.566 A:middle
And the extension USD, that can

00:03:28.566 --> 00:03:30.716 A:middle
be either plain text or binary.

00:03:31.336 --> 00:03:33.856 A:middle
You can go back and forth

00:03:33.856 --> 00:03:34.976 A:middle
between these file types.

00:03:38.386 --> 00:03:40.656 A:middle
And then there is USDZ.

00:03:41.636 --> 00:03:43.506 A:middle
Let's take a closer look at

00:03:45.016 --> 00:03:45.126 A:middle
that.

00:03:45.246 --> 00:03:47.216 A:middle
So what is USDZ?

00:03:47.216 --> 00:03:48.796 A:middle
USDZ is the distribution format

00:03:48.796 --> 00:03:49.456 A:middle
for USD.

00:03:50.216 --> 00:03:51.766 A:middle
It contains all the data related

00:03:51.766 --> 00:03:54.046 A:middle
to a 3D scene packaged up in a

00:03:54.136 --> 00:03:55.366 A:middle
single compact file.

00:03:56.666 --> 00:03:58.406 A:middle
It's optimized for sharing and

00:03:58.406 --> 00:04:00.476 A:middle
it's the basis of AR Quick Look.

00:03:58.406 --> 00:04:00.476 A:middle
it's the basis of AR Quick Look.

00:04:00.986 --> 00:04:04.216 A:middle
USDZ is supported on iOS, macOS

00:04:04.216 --> 00:04:04.496 A:middle
and tvOS.

00:04:04.496 --> 00:04:08.966 A:middle
If you look at the anatomy of a

00:04:09.286 --> 00:04:10.336 A:middle
USDZ file we'll see that it's an

00:04:10.336 --> 00:04:13.176 A:middle
uncompressed zip archive where

00:04:13.176 --> 00:04:15.076 A:middle
all the contained files are

00:04:15.076 --> 00:04:17.696 A:middle
aligned to 64-byte boundaries

00:04:18.315 --> 00:04:20.185 A:middle
for most efficient memory

00:04:20.185 --> 00:04:20.565 A:middle
mapping.

00:04:21.966 --> 00:04:23.906 A:middle
There's two types of files

00:04:23.906 --> 00:04:25.536 A:middle
contained in a USDZ archive.

00:04:26.876 --> 00:04:28.296 A:middle
The scene description files in

00:04:28.626 --> 00:04:33.316 A:middle
USDA, USD, or USDC or even USDZ

00:04:33.316 --> 00:04:34.916 A:middle
format so you can have nested

00:04:35.016 --> 00:04:37.866 A:middle
archives, and a set of textures

00:04:38.266 --> 00:04:40.906 A:middle
currently in PNG or JPEG format.

00:04:46.826 --> 00:04:49.036 A:middle
Let's take a rough comparison of

00:04:49.366 --> 00:04:52.726 A:middle
current file formats out there.

00:04:52.926 --> 00:04:54.416 A:middle
The basic-- The most basic

00:04:54.416 --> 00:04:56.486 A:middle
format is obj, which essentially

00:04:56.486 --> 00:04:58.206 A:middle
contains a single 3D model.

00:04:59.346 --> 00:05:00.926 A:middle
It has a limited material

00:04:59.346 --> 00:05:00.926 A:middle
It has a limited material

00:05:00.926 --> 00:05:03.066 A:middle
support and no animations.

00:05:03.626 --> 00:05:06.806 A:middle
Then there's a large group of

00:05:06.876 --> 00:05:08.676 A:middle
different more modern file

00:05:08.716 --> 00:05:09.226 A:middle
formats.

00:05:09.736 --> 00:05:11.056 A:middle
They usually can contain

00:05:11.056 --> 00:05:13.386 A:middle
multiple models that can be laid

00:05:13.386 --> 00:05:15.056 A:middle
out in a scene graph, they can

00:05:15.056 --> 00:05:16.546 A:middle
support different sets of

00:05:17.066 --> 00:05:19.596 A:middle
material descriptions, and also

00:05:19.596 --> 00:05:20.176 A:middle
animation.

00:05:22.376 --> 00:05:25.026 A:middle
USD supports all of this, but

00:05:25.666 --> 00:05:27.646 A:middle
additionally it was designed to

00:05:27.646 --> 00:05:29.556 A:middle
be scalable, Pixar invented the

00:05:29.556 --> 00:05:30.816 A:middle
format for its large movie

00:05:30.816 --> 00:05:31.176 A:middle
scenes.

00:05:31.956 --> 00:05:33.566 A:middle
And it also supports

00:05:33.626 --> 00:05:35.396 A:middle
collaboration, which allows many

00:05:35.396 --> 00:05:37.196 A:middle
artists to work together on a

00:05:37.196 --> 00:05:38.556 A:middle
single scene without getting in

00:05:38.556 --> 00:05:39.266 A:middle
each other's way.

00:05:44.186 --> 00:05:46.926 A:middle
USDZ, as the archive package

00:05:47.676 --> 00:05:49.226 A:middle
inherits most of these features

00:05:49.226 --> 00:05:49.556 A:middle
as well.

00:05:53.296 --> 00:05:55.466 A:middle
Next, let's take a look at

00:05:55.466 --> 00:05:56.106 A:middle
workflows.

00:05:56.686 --> 00:05:59.466 A:middle
We can group these in two

00:05:59.466 --> 00:06:02.196 A:middle
categories, converting existing

00:05:59.466 --> 00:06:02.196 A:middle
categories, converting existing

00:06:02.196 --> 00:06:04.636 A:middle
assets and creating new ones.

00:06:05.206 --> 00:06:07.856 A:middle
Let's start with converting

00:06:08.016 --> 00:06:08.966 A:middle
existing assets.

00:06:13.486 --> 00:06:16.046 A:middle
So let's imagine you have your

00:06:16.116 --> 00:06:18.526 A:middle
assets on this in some of these

00:06:18.526 --> 00:06:20.316 A:middle
other formats, maybe FBX or

00:06:20.316 --> 00:06:22.416 A:middle
gltf, and you want to convert

00:06:22.416 --> 00:06:24.886 A:middle
them to use USDZ to explore--

00:06:24.886 --> 00:06:27.536 A:middle
deploy them to your app or AR

00:06:27.536 --> 00:06:28.546 A:middle
Quick Look.

00:06:31.216 --> 00:06:33.016 A:middle
Today, we introduced a new

00:06:33.016 --> 00:06:34.506 A:middle
command line tool called

00:06:34.506 --> 00:06:35.386 A:middle
usdzconvert.

00:06:36.106 --> 00:06:37.996 A:middle
It supersedes last year's Xcode

00:06:37.996 --> 00:06:41.566 A:middle
converter and it allows you to

00:06:41.566 --> 00:06:43.646 A:middle
convert many more file formats

00:06:43.716 --> 00:06:46.676 A:middle
such as FBX and gltf.

00:06:47.086 --> 00:06:48.236 A:middle
It also performs asset

00:06:48.236 --> 00:06:48.886 A:middle
validation.

00:06:49.546 --> 00:06:50.606 A:middle
So you can be sure that there

00:06:50.606 --> 00:06:52.086 A:middle
are no issues with the generated

00:06:52.086 --> 00:06:52.906 A:middle
USDZ files.

00:06:53.696 --> 00:06:56.746 A:middle
And it is Python based so it's

00:06:56.776 --> 00:06:57.756 A:middle
platform independent.

00:06:58.506 --> 00:06:59.486 A:middle
So it's easy for you to

00:06:59.486 --> 00:07:02.306 A:middle
integrate this converter into

00:06:59.486 --> 00:07:02.306 A:middle
integrate this converter into

00:07:02.306 --> 00:07:05.176 A:middle
your existing content pipelines

00:07:05.456 --> 00:07:06.576 A:middle
that might be on other platforms

00:07:06.576 --> 00:07:06.956 A:middle
in macOS.

00:07:11.216 --> 00:07:12.156 A:middle
Here are couple of sample

00:07:12.156 --> 00:07:12.656 A:middle
sessions.

00:07:13.016 --> 00:07:14.686 A:middle
Let's say you have a gltf file,

00:07:14.686 --> 00:07:16.386 A:middle
you can pass the file to

00:07:16.386 --> 00:07:18.176 A:middle
usdzconvert and it converts it

00:07:18.176 --> 00:07:18.796 A:middle
into USDZ.

00:07:18.796 --> 00:07:21.496 A:middle
You can also see that it

00:07:21.556 --> 00:07:22.736 A:middle
performs asset validation

00:07:22.736 --> 00:07:22.976 A:middle
afterwards.

00:07:26.736 --> 00:07:28.006 A:middle
If you want to know all the

00:07:28.006 --> 00:07:29.586 A:middle
command line options, you can

00:07:29.636 --> 00:07:30.466 A:middle
use this -h.

00:07:31.116 --> 00:07:36.136 A:middle
And you can also provide rich

00:07:36.136 --> 00:07:38.416 A:middle
material descriptions directly

00:07:38.416 --> 00:07:39.276 A:middle
from the command line.

00:07:39.276 --> 00:07:41.056 A:middle
This is especially handy for

00:07:41.056 --> 00:07:42.356 A:middle
file formats like obj that do

00:07:42.646 --> 00:07:43.926 A:middle
not have a rich material

00:07:43.926 --> 00:07:45.096 A:middle
definition.

00:07:47.556 --> 00:07:50.366 A:middle
Usdzconvert is a part of a

00:07:50.366 --> 00:07:51.656 A:middle
broader package that we are

00:07:51.656 --> 00:07:52.806 A:middle
providing to developers.

00:07:53.496 --> 00:07:55.286 A:middle
It also includes the precompiled

00:07:55.376 --> 00:07:57.186 A:middle
binaries of the USD library for

00:07:57.186 --> 00:07:59.416 A:middle
macOS and some other things as

00:07:59.416 --> 00:07:59.626 A:middle
well.

00:07:59.836 --> 00:08:04.426 A:middle
For example, the USD command

00:07:59.836 --> 00:08:04.426 A:middle
For example, the USD command

00:08:04.426 --> 00:08:05.056 A:middle
line tools.

00:08:05.266 --> 00:08:08.696 A:middle
Usdcat, for example, is great to

00:08:09.156 --> 00:08:10.656 A:middle
output a plain text

00:08:10.656 --> 00:08:13.376 A:middle
representation of your USDZ

00:08:14.816 --> 00:08:14.946 A:middle
file.

00:08:15.106 --> 00:08:17.416 A:middle
Usdtree is useful to see a

00:08:17.416 --> 00:08:19.036 A:middle
high-level structure of the

00:08:19.036 --> 00:08:19.786 A:middle
model hierarchy.

00:08:20.896 --> 00:08:24.966 A:middle
And usdchecker is USDZ's asset

00:08:25.016 --> 00:08:25.616 A:middle
validator.

00:08:26.196 --> 00:08:29.726 A:middle
We're also including a little

00:08:29.726 --> 00:08:31.266 A:middle
script called fixed capacity.

00:08:31.776 --> 00:08:33.086 A:middle
If you offered models with the

00:08:33.086 --> 00:08:34.525 A:middle
transparent materials for AR

00:08:34.576 --> 00:08:36.446 A:middle
Quick Look last year and those

00:08:36.446 --> 00:08:38.746 A:middle
materials look opaque in iOS 13,

00:08:38.946 --> 00:08:43.576 A:middle
use a script to fix that.

00:08:43.726 --> 00:08:45.576 A:middle
OK. For a little demo of all of

00:08:45.576 --> 00:08:47.316 A:middle
these, I'd like to invite Chloe

00:08:47.316 --> 00:08:47.776 A:middle
on stage.

00:08:48.516 --> 00:08:53.746 A:middle
[ Applause ]

00:08:54.246 --> 00:08:54.996 A:middle
&gt;&gt; Thank you, Denis.

00:08:55.976 --> 00:08:57.706 A:middle
As we have seen before, we

00:08:57.706 --> 00:09:00.056 A:middle
provide a precompiled USD Python

00:08:57.706 --> 00:09:00.056 A:middle
provide a precompiled USD Python

00:09:00.056 --> 00:09:01.846 A:middle
library that's available for

00:09:01.846 --> 00:09:02.466 A:middle
download here.

00:09:03.606 --> 00:09:05.286 A:middle
I have already downloaded and

00:09:05.286 --> 00:09:05.916 A:middle
unpacked it.

00:09:07.266 --> 00:09:08.976 A:middle
The USD folder contains the

00:09:08.976 --> 00:09:10.886 A:middle
precompiled USD Python library,

00:09:11.206 --> 00:09:12.876 A:middle
as well as a suite of a command

00:09:12.876 --> 00:09:15.246 A:middle
line tools such as usdtree and

00:09:15.246 --> 00:09:16.906 A:middle
usdcat provided by Pixar.

00:09:18.296 --> 00:09:20.586 A:middle
The usdzconvert folder contains

00:09:20.586 --> 00:09:22.566 A:middle
the usdzconvert tool and the fix

00:09:22.566 --> 00:09:23.326 A:middle
opacity tool.

00:09:24.536 --> 00:09:26.276 A:middle
We also provide a USD command

00:09:26.536 --> 00:09:27.976 A:middle
which sets up some environmental

00:09:27.976 --> 00:09:28.746 A:middle
variables for you.

00:09:28.746 --> 00:09:31.316 A:middle
When you double click it opens

00:09:31.316 --> 00:09:31.976 A:middle
up a terminal window.

00:09:36.176 --> 00:09:38.226 A:middle
Let's start with usdzconvert.

00:09:39.026 --> 00:09:40.816 A:middle
If you just run usdzconvert by

00:09:40.816 --> 00:09:43.476 A:middle
itself, it outputs our argument.

00:09:44.966 --> 00:09:46.596 A:middle
Now suppose you have some gltf

00:09:46.596 --> 00:09:47.736 A:middle
file that you want to convert.

00:10:03.346 --> 00:10:05.206 A:middle
You can simply run usdzconvert

00:10:05.206 --> 00:10:05.956 A:middle
with your file name.

00:10:06.316 --> 00:10:08.376 A:middle
Now, let's take a look at a

00:10:08.376 --> 00:10:09.926 A:middle
generated asset.

00:10:11.256 --> 00:10:13.216 A:middle
To generate to the file contains

00:10:13.216 --> 00:10:15.416 A:middle
all materials and animation.

00:10:18.936 --> 00:10:21.996 A:middle
As we can see here, usdzconvert

00:10:21.996 --> 00:10:23.466 A:middle
also performs additional asset

00:10:23.466 --> 00:10:23.976 A:middle
validation.

00:10:27.566 --> 00:10:29.116 A:middle
Next, let's say you have some

00:10:29.116 --> 00:10:31.326 A:middle
obj file without material, like

00:10:31.896 --> 00:10:32.976 A:middle
this tetrahedron model.

00:10:36.706 --> 00:10:38.316 A:middle
You can simply add the material

00:10:38.536 --> 00:10:40.056 A:middle
with additional arguments, for

00:10:40.056 --> 00:10:40.966 A:middle
instance constant color.

00:10:45.246 --> 00:10:46.726 A:middle
Here you can see material is

00:10:46.726 --> 00:10:46.966 A:middle
applied.

00:10:51.796 --> 00:10:53.496 A:middle
To see the high-level structure

00:10:53.496 --> 00:10:55.946 A:middle
of your model, you can use

00:10:56.276 --> 00:10:56.546 A:middle
usdtree.

00:10:58.096 --> 00:11:00.856 A:middle
Here, see the material and the

00:10:58.096 --> 00:11:00.856 A:middle
Here, see the material and the

00:11:00.856 --> 00:11:01.276 A:middle
mesh.

00:11:05.236 --> 00:11:06.836 A:middle
To see the full plain text

00:11:06.836 --> 00:11:08.186 A:middle
representation of your model,

00:11:08.606 --> 00:11:09.666 A:middle
you can use usdcat.

00:11:17.356 --> 00:11:18.666 A:middle
Here's another common use case.

00:11:19.656 --> 00:11:25.476 A:middle
You have a obj file here

00:11:25.696 --> 00:11:27.206 A:middle
together with a rich set of

00:11:27.206 --> 00:11:27.976 A:middle
material textures.

00:11:34.016 --> 00:11:35.776 A:middle
Assigning textures to a material

00:11:35.856 --> 00:11:37.386 A:middle
is as simple as assigning

00:11:37.386 --> 00:11:37.896 A:middle
constants.

00:11:43.756 --> 00:11:46.726 A:middle
A USDZ file is an uncompressed

00:11:46.726 --> 00:11:47.446 A:middle
zip archive.

00:11:47.936 --> 00:11:49.396 A:middle
So a quick way to examine its

00:11:49.396 --> 00:11:51.196 A:middle
content is to use a zip info.

00:11:51.486 --> 00:11:55.916 A:middle
Here we can see the USDZ archive

00:11:55.976 --> 00:11:58.356 A:middle
contains a USDZ file and all

00:11:58.356 --> 00:11:59.116 A:middle
above textures.

00:12:03.536 --> 00:12:05.176 A:middle
Here you can see all material

00:12:05.176 --> 00:12:06.266 A:middle
textures are applied to the

00:12:06.266 --> 00:12:06.586 A:middle
model.

00:12:07.186 --> 00:12:10.866 A:middle
So to summarize, converting your

00:12:10.866 --> 00:12:13.596 A:middle
existing asset to USDZ is easy

00:12:13.636 --> 00:12:14.776 A:middle
with usdzconvert.

00:12:15.606 --> 00:12:17.826 A:middle
And there is a set of additional

00:12:17.826 --> 00:12:19.466 A:middle
tools that would help you to

00:12:19.466 --> 00:12:21.306 A:middle
examine your generated assets.

00:12:22.406 --> 00:12:23.196 A:middle
Back to you, Denis.

00:12:24.516 --> 00:12:28.196 A:middle
[ Applause ]

00:12:28.696 --> 00:12:29.976 A:middle
Thank you, Chloe.

00:12:35.636 --> 00:12:38.536 A:middle
So that covers the conversion

00:12:38.536 --> 00:12:39.056 A:middle
stage.

00:12:39.506 --> 00:12:41.046 A:middle
Now let's take a look at how to

00:12:41.046 --> 00:12:42.976 A:middle
create USDZ files from scratch.

00:12:46.516 --> 00:12:48.616 A:middle
You can of course start creating

00:12:48.616 --> 00:12:49.866 A:middle
your assets with your favorite

00:12:49.866 --> 00:12:50.646 A:middle
authoring tool.

00:12:50.966 --> 00:12:53.416 A:middle
And it will likely be able to

00:12:53.416 --> 00:12:55.536 A:middle
export to a format like FBX

00:12:55.536 --> 00:12:57.476 A:middle
already that you can then

00:12:57.476 --> 00:12:59.366 A:middle
convert to USDZ with the

00:12:59.366 --> 00:13:00.916 A:middle
usdzconvert tool that we just

00:12:59.366 --> 00:13:00.916 A:middle
usdzconvert tool that we just

00:13:00.916 --> 00:13:00.983 A:middle
saw.

00:13:04.046 --> 00:13:05.936 A:middle
But there's a growing number of

00:13:05.996 --> 00:13:07.406 A:middle
content creation applications

00:13:07.546 --> 00:13:09.506 A:middle
that support direct USD export.

00:13:10.756 --> 00:13:12.186 A:middle
That allows you to integrate

00:13:12.186 --> 00:13:13.946 A:middle
your content creation step more

00:13:13.946 --> 00:13:15.806 A:middle
easily into a USD pipeline.

00:13:16.536 --> 00:13:19.536 A:middle
And the conversion step with all

00:13:19.536 --> 00:13:20.706 A:middle
these potential translation

00:13:20.706 --> 00:13:22.476 A:middle
complications turns into a much

00:13:22.526 --> 00:13:24.506 A:middle
simpler archiving step.

00:13:27.026 --> 00:13:29.356 A:middle
Here are two examples of content

00:13:29.356 --> 00:13:32.196 A:middle
creation tools that support USD

00:13:32.196 --> 00:13:32.626 A:middle
export.

00:13:33.776 --> 00:13:35.116 A:middle
This one is Substance Painter by

00:13:35.116 --> 00:13:38.076 A:middle
Adobe, a great tool for creating

00:13:38.076 --> 00:13:39.916 A:middle
photorealistic materials for

00:13:39.916 --> 00:13:40.856 A:middle
your 3D objects.

00:13:41.426 --> 00:13:45.646 A:middle
It supports USD and USDZ export.

00:13:46.186 --> 00:13:49.836 A:middle
And here is Autodesk Maya, one

00:13:49.836 --> 00:13:51.536 A:middle
of the leading 3D modeling and

00:13:51.536 --> 00:13:52.436 A:middle
animation tools.

00:13:52.986 --> 00:13:57.716 A:middle
It supports USD and USDZ export

00:13:57.956 --> 00:14:00.106 A:middle
through a plugin that's written

00:13:57.956 --> 00:14:00.106 A:middle
through a plugin that's written

00:14:00.106 --> 00:14:01.516 A:middle
and maintained by Pixar.

00:14:02.126 --> 00:14:05.826 A:middle
So as we've seen, a lot of these

00:14:05.896 --> 00:14:08.496 A:middle
applications even support direct

00:14:08.496 --> 00:14:11.556 A:middle
USDZ export further simplifying

00:14:11.776 --> 00:14:13.816 A:middle
your USDZ creation step.

00:14:14.406 --> 00:14:18.836 A:middle
And because of USD's Python

00:14:18.836 --> 00:14:20.786 A:middle
bindings you can also create

00:14:20.786 --> 00:14:23.616 A:middle
your own custom Python pipelines

00:14:23.686 --> 00:14:25.066 A:middle
that are tailored to your

00:14:25.066 --> 00:14:25.956 A:middle
particular content.

00:14:27.366 --> 00:14:29.996 A:middle
Next, we're making exporting

00:14:29.996 --> 00:14:32.466 A:middle
USDZ from SceneKit super easy.

00:14:33.336 --> 00:14:35.176 A:middle
All you have to do is to create

00:14:35.176 --> 00:14:37.036 A:middle
or load your SCNScene just as

00:14:37.036 --> 00:14:37.466 A:middle
before.

00:14:37.996 --> 00:14:39.216 A:middle
And when you're ready to export

00:14:39.216 --> 00:14:41.976 A:middle
to USDZ, all you need is one API

00:14:41.976 --> 00:14:45.516 A:middle
call, write to, and make sure

00:14:45.516 --> 00:14:46.976 A:middle
that the file extension is usdz.

00:14:51.816 --> 00:14:54.496 A:middle
In fact, we've integrated USDZ

00:14:54.496 --> 00:14:56.946 A:middle
export into Xcode's SceneKit

00:14:56.946 --> 00:14:57.776 A:middle
editor as well.

00:14:58.556 --> 00:15:00.606 A:middle
So, you can also export directly

00:14:58.556 --> 00:15:00.606 A:middle
So, you can also export directly

00:15:00.866 --> 00:15:02.826 A:middle
through a command-- through a

00:15:02.826 --> 00:15:03.846 A:middle
user interface as well.

00:15:04.626 --> 00:15:07.316 A:middle
OK. So that covers the

00:15:07.316 --> 00:15:07.956 A:middle
workflows.

00:15:09.486 --> 00:15:12.326 A:middle
Now, we want to take a look at

00:15:12.696 --> 00:15:13.966 A:middle
USD's features.

00:15:14.666 --> 00:15:16.226 A:middle
Now, as we've mentioned in the

00:15:16.226 --> 00:15:18.446 A:middle
introduction, USD has a very

00:15:18.446 --> 00:15:19.316 A:middle
large feature set.

00:15:19.786 --> 00:15:21.766 A:middle
And it is impossible to even

00:15:21.766 --> 00:15:22.596 A:middle
mention all of them in this

00:15:22.796 --> 00:15:22.976 A:middle
talk.

00:15:26.536 --> 00:15:28.606 A:middle
But there are a few key concepts

00:15:28.876 --> 00:15:32.846 A:middle
that are easy to grasp.

00:15:32.996 --> 00:15:34.806 A:middle
So let's focus on those first.

00:15:40.056 --> 00:15:41.306 A:middle
We will talk about four

00:15:41.306 --> 00:15:43.636 A:middle
concepts, the File Structure,

00:15:44.806 --> 00:15:48.366 A:middle
the Scene Graph, Mesh Data, and

00:15:48.366 --> 00:15:48.976 A:middle
Materials.

00:15:49.546 --> 00:15:53.506 A:middle
A key differentiator of USD is

00:15:53.506 --> 00:15:54.726 A:middle
that its plain text form is

00:15:54.726 --> 00:15:56.916 A:middle
designed to be readable and

00:15:56.916 --> 00:15:57.676 A:middle
understandable.

00:15:59.006 --> 00:16:00.296 A:middle
So the format becomes less

00:15:59.006 --> 00:16:00.296 A:middle
So the format becomes less

00:16:00.296 --> 00:16:02.566 A:middle
mysterious and more transparent.

00:16:03.376 --> 00:16:05.236 A:middle
And when things go wrong, you

00:16:05.236 --> 00:16:07.006 A:middle
can more quickly pinpoint where

00:16:07.006 --> 00:16:07.466 A:middle
and why.

00:16:11.936 --> 00:16:12.876 A:middle
So let's focus on the file

00:16:12.876 --> 00:16:13.676 A:middle
structure first.

00:16:17.676 --> 00:16:22.056 A:middle
So this is an excerpt of a USDA

00:16:22.196 --> 00:16:22.556 A:middle
file.

00:16:23.446 --> 00:16:24.996 A:middle
The first thing you will notice

00:16:25.426 --> 00:16:27.556 A:middle
is that it contains these nested

00:16:27.656 --> 00:16:28.376 A:middle
containers.

00:16:29.096 --> 00:16:30.616 A:middle
In USD they're called prims.

00:16:33.156 --> 00:16:35.586 A:middle
These prims contain properties

00:16:35.956 --> 00:16:37.516 A:middle
that store the actual data.

00:16:38.136 --> 00:16:42.126 A:middle
And there's a set of metadata

00:16:42.586 --> 00:16:45.906 A:middle
attached to file level, prim

00:16:45.906 --> 00:16:48.746 A:middle
level, or property level.

00:16:49.266 --> 00:16:51.526 A:middle
Because of the nested structure,

00:16:52.156 --> 00:16:54.216 A:middle
every object can be accessed

00:16:54.646 --> 00:16:55.596 A:middle
through an object path.

00:16:56.416 --> 00:16:59.566 A:middle
In this case, the prim cube is

00:16:59.566 --> 00:17:01.606 A:middle
nested under simple mesh, so its

00:16:59.566 --> 00:17:01.606 A:middle
nested under simple mesh, so its

00:17:01.646 --> 00:17:03.916 A:middle
path becomes /simpleMesh/cube.

00:17:06.396 --> 00:17:09.256 A:middle
This also works with properties,

00:17:09.685 --> 00:17:10.596 A:middle
with the dot notation.

00:17:14.996 --> 00:17:16.376 A:middle
Now that we have seen the basic

00:17:16.376 --> 00:17:17.915 A:middle
file structure, let's take a

00:17:17.915 --> 00:17:19.596 A:middle
look at how it is used to store

00:17:19.596 --> 00:17:20.146 A:middle
scene data.

00:17:20.806 --> 00:17:24.665 A:middle
A scene graph defines the object

00:17:24.665 --> 00:17:25.175 A:middle
hierarchy.

00:17:26.195 --> 00:17:28.386 A:middle
Transforms on a parent also

00:17:28.386 --> 00:17:29.186 A:middle
affect its children.

00:17:29.836 --> 00:17:31.876 A:middle
In this case, we have a cube and

00:17:31.876 --> 00:17:35.096 A:middle
a sphere parented to the cube.

00:17:35.206 --> 00:17:37.556 A:middle
If you move the cube, the sphere

00:17:37.556 --> 00:17:38.146 A:middle
comes along.

00:17:38.726 --> 00:17:42.656 A:middle
If you move the sphere, the cube

00:17:42.656 --> 00:17:43.866 A:middle
stays put.

00:17:44.476 --> 00:17:47.396 A:middle
A scene graph is easy to store

00:17:47.516 --> 00:17:48.906 A:middle
with a nested prim structure of

00:17:48.906 --> 00:17:48.996 A:middle
USD.

00:17:48.996 --> 00:17:51.886 A:middle
You can see the ultra prim of

00:17:51.936 --> 00:17:54.526 A:middle
the parents with the two child

00:17:54.526 --> 00:17:56.166 A:middle
prims, cube and sphere.

00:17:56.736 --> 00:18:00.496 A:middle
You can also see that there are

00:17:56.736 --> 00:18:00.496 A:middle
You can also see that there are

00:18:00.496 --> 00:18:02.726 A:middle
other prims such as materials or

00:18:02.726 --> 00:18:04.706 A:middle
maybe animations that don't

00:18:05.016 --> 00:18:05.976 A:middle
belong to the scene graph.

00:18:09.516 --> 00:18:11.026 A:middle
So that covers scene graphs.

00:18:11.926 --> 00:18:16.286 A:middle
Now let's take a look at mesh

00:18:16.346 --> 00:18:16.496 A:middle
data.

00:18:16.496 --> 00:18:18.276 A:middle
Mesh data can be grouped roughly

00:18:18.276 --> 00:18:19.216 A:middle
in two categories.

00:18:19.826 --> 00:18:21.206 A:middle
Mesh attributes such as

00:18:21.206 --> 00:18:23.196 A:middle
positions, normals, and texture

00:18:23.196 --> 00:18:23.756 A:middle
coordinates.

00:18:25.366 --> 00:18:28.046 A:middle
And mesh connectivity, such as

00:18:28.416 --> 00:18:30.836 A:middle
the numbers of vertices per face

00:18:31.186 --> 00:18:33.036 A:middle
or which vertex indices belong

00:18:33.036 --> 00:18:36.866 A:middle
to a face.

00:18:37.076 --> 00:18:38.616 A:middle
Let's look at that at the simple

00:18:38.616 --> 00:18:40.076 A:middle
example of a tetrahedron.

00:18:40.736 --> 00:18:42.556 A:middle
We start with a set of points,

00:18:42.756 --> 00:18:44.116 A:middle
four points for the tetrahedron.

00:18:44.816 --> 00:18:48.936 A:middle
And each face contains three

00:18:48.936 --> 00:18:50.476 A:middle
vertices, so there are four

00:18:50.476 --> 00:18:51.076 A:middle
triangles.

00:18:51.636 --> 00:18:54.666 A:middle
And for each face, we will also

00:18:54.666 --> 00:18:56.416 A:middle
store the vertex indices.

00:18:56.896 --> 00:19:01.236 A:middle
Next, we'll store normals.

00:18:56.896 --> 00:19:01.236 A:middle
Next, we'll store normals.

00:19:01.326 --> 00:19:02.486 A:middle
And in this case we choose to

00:19:02.486 --> 00:19:03.756 A:middle
store the normals per face.

00:19:04.506 --> 00:19:07.186 A:middle
So there are four normals.

00:19:08.066 --> 00:19:11.006 A:middle
And the USD language for

00:19:11.006 --> 00:19:12.666 A:middle
per-face attributes is uniform.

00:19:12.666 --> 00:19:14.656 A:middle
So the metadata is set to

00:19:14.656 --> 00:19:15.336 A:middle
uniform.

00:19:17.796 --> 00:19:19.266 A:middle
That's also store texture

00:19:19.266 --> 00:19:19.876 A:middle
coordinates.

00:19:20.546 --> 00:19:21.856 A:middle
These are going to be sort as

00:19:21.856 --> 00:19:25.286 A:middle
indexed, mesh attributes, and

00:19:25.286 --> 00:19:26.716 A:middle
the indices are per-face,

00:19:27.106 --> 00:19:30.326 A:middle
per-vertex, and in USDs language

00:19:30.326 --> 00:19:36.466 A:middle
studies face bearing.

00:19:36.626 --> 00:19:38.146 A:middle
Lastly, we'll make sure that

00:19:38.146 --> 00:19:40.306 A:middle
this tetrahedron is rendered as

00:19:40.306 --> 00:19:41.786 A:middle
a polygon and not as a

00:19:41.786 --> 00:19:42.776 A:middle
subdivision surface.

00:19:43.276 --> 00:19:46.496 A:middle
We'll come back to that later.

00:19:46.726 --> 00:19:47.616 A:middle
So now we've seen the scene

00:19:47.616 --> 00:19:49.026 A:middle
graph, and the mesh data, let's

00:19:49.026 --> 00:19:50.526 A:middle
take a look at how materials are

00:19:50.526 --> 00:19:50.966 A:middle
defined.

00:19:54.966 --> 00:19:56.786 A:middle
USD's material definition is

00:19:56.786 --> 00:19:57.346 A:middle
very rich.

00:19:57.766 --> 00:19:59.966 A:middle
It is meant for movie quality

00:20:00.206 --> 00:20:00.886 A:middle
output.

00:20:01.586 --> 00:20:02.606 A:middle
For realistic real-time

00:20:02.606 --> 00:20:04.236 A:middle
rendering, there's a smaller

00:20:04.236 --> 00:20:06.376 A:middle
subset called UsdPreviewSurface.

00:20:07.156 --> 00:20:08.626 A:middle
It's a physically-based material

00:20:08.626 --> 00:20:10.706 A:middle
description and it supports two

00:20:10.706 --> 00:20:12.646 A:middle
workflows, metallic-roughness

00:20:13.176 --> 00:20:14.246 A:middle
and specular-roughness.

00:20:14.246 --> 00:20:15.736 A:middle
We will focus on

00:20:15.736 --> 00:20:16.696 A:middle
metallic-roughness here.

00:20:17.306 --> 00:20:20.406 A:middle
So in this example, the same

00:20:20.406 --> 00:20:21.546 A:middle
gramophone that we saw in

00:20:21.546 --> 00:20:24.906 A:middle
Chloe's demo, we'll first assign

00:20:25.006 --> 00:20:26.576 A:middle
a constant, white color.

00:20:27.106 --> 00:20:32.866 A:middle
Next, we will set normal and

00:20:32.866 --> 00:20:35.716 A:middle
occlusion maps to bring out the

00:20:35.716 --> 00:20:36.626 A:middle
fine details.

00:20:40.916 --> 00:20:43.386 A:middle
Next, let's crank up the

00:20:43.956 --> 00:20:45.606 A:middle
metallic level so it becomes

00:20:45.816 --> 00:20:46.446 A:middle
really shiny.

00:20:47.776 --> 00:20:51.576 A:middle
And we will also add a roughness

00:20:51.576 --> 00:20:55.316 A:middle
map to dull out parts of the

00:20:57.286 --> 00:20:57.476 A:middle
object.

00:20:57.626 --> 00:21:00.966 A:middle
Lastly, we will also set diffuse

00:20:57.626 --> 00:21:00.966 A:middle
Lastly, we will also set diffuse

00:21:00.966 --> 00:21:04.536 A:middle
color and metallic textures.

00:21:04.866 --> 00:21:07.316 A:middle
So with these five textures, we

00:21:07.316 --> 00:21:09.006 A:middle
get the final beautiful

00:21:09.006 --> 00:21:10.306 A:middle
photorealistic look of this

00:21:10.306 --> 00:21:10.496 A:middle
mesh.

00:21:11.146 --> 00:21:13.886 A:middle
So let's see how this is

00:21:14.336 --> 00:21:16.596 A:middle
described in USD.

00:21:16.596 --> 00:21:18.736 A:middle
USD uses a shader node graph

00:21:19.076 --> 00:21:21.146 A:middle
that has separate shader nodes

00:21:21.386 --> 00:21:23.346 A:middle
that are connected to each

00:21:25.906 --> 00:21:26.016 A:middle
other.

00:21:26.216 --> 00:21:28.536 A:middle
UsdPreviewSurface has a very

00:21:28.586 --> 00:21:30.256 A:middle
simple shader node graph

00:21:30.256 --> 00:21:32.506 A:middle
structure, with only four node

00:21:32.506 --> 00:21:32.936 A:middle
types.

00:21:34.246 --> 00:21:35.626 A:middle
The main shader node that

00:21:35.626 --> 00:21:37.416 A:middle
defines all the PBR attributes,

00:21:37.416 --> 00:21:38.606 A:middle
we've seen five of them before.

00:21:39.936 --> 00:21:41.526 A:middle
A texture sampler that tells you

00:21:41.526 --> 00:21:44.996 A:middle
which texture to use, a mesh

00:21:44.996 --> 00:21:47.256 A:middle
attribute reader for example for

00:21:47.516 --> 00:21:51.036 A:middle
the texture coordinates, and a

00:21:51.766 --> 00:21:53.686 A:middle
UV transformed node that allows

00:21:53.686 --> 00:21:57.126 A:middle
you to scale or rotate your

00:21:57.126 --> 00:21:57.956 A:middle
texture coordinates.

00:21:58.456 --> 00:21:59.326 A:middle
Let's take a look at the

00:21:59.326 --> 00:22:01.766 A:middle
simplest material example with a

00:21:59.326 --> 00:22:01.766 A:middle
simplest material example with a

00:22:01.766 --> 00:22:03.866 A:middle
couple of constant-- constants

00:22:04.226 --> 00:22:05.916 A:middle
for the mesh attributes.

00:22:09.156 --> 00:22:12.736 A:middle
We can see here that the main

00:22:12.736 --> 00:22:15.096 A:middle
shader node's surface output is

00:22:15.096 --> 00:22:16.726 A:middle
wired to the material's surface

00:22:16.726 --> 00:22:17.146 A:middle
output.

00:22:18.376 --> 00:22:20.126 A:middle
Here is what it looks like in

00:22:20.126 --> 00:22:20.306 A:middle
USD.

00:22:20.306 --> 00:22:22.846 A:middle
You have the outer nested

00:22:23.396 --> 00:22:26.886 A:middle
material prim with main shader

00:22:26.886 --> 00:22:31.206 A:middle
node prim inside, and the output

00:22:31.206 --> 00:22:33.416 A:middle
of the shader node is wired to

00:22:33.416 --> 00:22:35.466 A:middle
the output of the material using

00:22:35.466 --> 00:22:36.686 A:middle
these object paths that we've

00:22:36.686 --> 00:22:37.296 A:middle
seen before.

00:22:38.776 --> 00:22:40.256 A:middle
Next, let's take a look at a

00:22:40.256 --> 00:22:41.686 A:middle
slightly more complicated

00:22:42.096 --> 00:22:44.766 A:middle
example of a texture assigned to

00:22:44.766 --> 00:22:46.006 A:middle
the diffuse color channel.

00:22:46.516 --> 00:22:50.426 A:middle
We will need a mesh attribute

00:22:50.466 --> 00:22:51.226 A:middle
reader for the texture

00:22:51.226 --> 00:22:52.896 A:middle
coordinates, that's the red

00:22:52.896 --> 00:22:55.846 A:middle
shader node, a texture sampler

00:22:56.166 --> 00:22:57.276 A:middle
for the texture that we want to

00:22:57.276 --> 00:23:00.166 A:middle
apply, it's the orange one, and

00:22:57.276 --> 00:23:00.166 A:middle
apply, it's the orange one, and

00:23:01.046 --> 00:23:03.636 A:middle
the main PBR shader node with

00:23:03.676 --> 00:23:05.106 A:middle
the diffuse color attributes.

00:23:09.176 --> 00:23:10.956 A:middle
This is what it looks like in

00:23:10.956 --> 00:23:11.126 A:middle
USD.

00:23:11.126 --> 00:23:13.936 A:middle
You have the outer material prim

00:23:13.936 --> 00:23:18.036 A:middle
again and then the three shader

00:23:18.036 --> 00:23:18.496 A:middle
nodes.

00:23:19.016 --> 00:23:22.766 A:middle
And the outputs are wired to

00:23:22.766 --> 00:23:23.866 A:middle
some of the inputs of the next

00:23:23.866 --> 00:23:24.296 A:middle
shader node.

00:23:24.856 --> 00:23:30.506 A:middle
OK. So that covers essentials in

00:23:31.146 --> 00:23:31.406 A:middle
USD.

00:23:31.456 --> 00:23:33.416 A:middle
All of these concepts that we

00:23:33.416 --> 00:23:36.476 A:middle
talked about are in a samples

00:23:36.476 --> 00:23:38.376 A:middle
folder where we provided little

00:23:38.376 --> 00:23:40.416 A:middle
sample scripts to create scene

00:23:40.416 --> 00:23:43.926 A:middle
graphs, mesh data, material and

00:23:43.956 --> 00:23:45.556 A:middle
mesh groups, so that you can

00:23:45.556 --> 00:23:46.726 A:middle
assign multiple materials to

00:23:46.726 --> 00:23:49.336 A:middle
single mesh, and even animations

00:23:49.376 --> 00:23:51.176 A:middle
for transform animations and for

00:23:51.176 --> 00:23:52.276 A:middle
skinning and skeletal

00:23:52.276 --> 00:23:52.866 A:middle
animations.

00:23:57.826 --> 00:23:59.376 A:middle
Now that we covered the basic

00:23:59.376 --> 00:24:01.046 A:middle
structure of USD, let's take a

00:23:59.376 --> 00:24:01.046 A:middle
structure of USD, let's take a

00:24:01.046 --> 00:24:03.256 A:middle
look at the main advantages that

00:24:03.256 --> 00:24:05.116 A:middle
set it apart from other formats.

00:24:06.976 --> 00:24:08.726 A:middle
Scalability to complex scenes

00:24:09.246 --> 00:24:10.756 A:middle
and life composition and

00:24:10.756 --> 00:24:11.426 A:middle
collaboration.

00:24:17.616 --> 00:24:19.796 A:middle
For scalability, we will look at

00:24:19.796 --> 00:24:21.056 A:middle
something called subdivision

00:24:21.056 --> 00:24:21.676 A:middle
surfaces.

00:24:23.216 --> 00:24:25.046 A:middle
And for collaboration, we will

00:24:25.046 --> 00:24:26.546 A:middle
look at the composition engine.

00:24:27.126 --> 00:24:29.566 A:middle
So let's start with subdivision

00:24:29.566 --> 00:24:30.136 A:middle
surfaces.

00:24:32.146 --> 00:24:33.676 A:middle
Subdivision surfaces are an

00:24:33.676 --> 00:24:35.376 A:middle
inefficient representation of

00:24:35.456 --> 00:24:36.466 A:middle
curved surfaces.

00:24:37.506 --> 00:24:40.026 A:middle
In contrast, polygonal surface

00:24:40.026 --> 00:24:41.416 A:middle
descriptions are an

00:24:41.416 --> 00:24:44.276 A:middle
approximation of the real curved

00:24:44.276 --> 00:24:44.806 A:middle
surface.

00:24:44.996 --> 00:24:47.396 A:middle
And that approximation bakes in

00:24:47.396 --> 00:24:49.606 A:middle
some assumptions on what a good

00:24:49.606 --> 00:24:51.566 A:middle
approximation is, for example,

00:24:51.566 --> 00:24:53.856 A:middle
how closely you're going to be

00:24:53.976 --> 00:24:55.186 A:middle
to the actual object.

00:24:55.856 --> 00:24:58.336 A:middle
In contrast, subdivision

00:24:58.336 --> 00:24:59.776 A:middle
surfaces described the true

00:24:59.776 --> 00:25:00.296 A:middle
surface.

00:24:59.776 --> 00:25:00.296 A:middle
surface.

00:25:00.756 --> 00:25:02.106 A:middle
So you can do dynamic

00:25:02.136 --> 00:25:04.306 A:middle
tessellation, for example based

00:25:04.306 --> 00:25:06.636 A:middle
on the distance to the camera to

00:25:06.966 --> 00:25:08.856 A:middle
find a good enough approximation

00:25:09.516 --> 00:25:12.256 A:middle
of the true surface with small

00:25:12.256 --> 00:25:12.836 A:middle
polygons.

00:25:14.996 --> 00:25:16.666 A:middle
Subdivision surfaces are also

00:25:16.666 --> 00:25:18.466 A:middle
great for animated content.

00:25:19.066 --> 00:25:22.486 A:middle
And we have been using

00:25:22.486 --> 00:25:24.596 A:middle
subdivision surfaces in the past

00:25:24.596 --> 00:25:28.076 A:middle
couple years, for example, for

00:25:28.076 --> 00:25:30.316 A:middle
an emoji or memoji.

00:25:30.956 --> 00:25:34.456 A:middle
On the left-hand side, you can

00:25:34.536 --> 00:25:36.276 A:middle
see what the subdivision control

00:25:36.276 --> 00:25:38.016 A:middle
mesh would look like if you

00:25:38.016 --> 00:25:39.576 A:middle
rendered it as a polygonal

00:25:39.576 --> 00:25:40.106 A:middle
surface.

00:25:40.836 --> 00:25:41.956 A:middle
You can see that it's fairly

00:25:41.956 --> 00:25:44.756 A:middle
course, which is great in terms

00:25:44.756 --> 00:25:46.266 A:middle
of the memory footprint.

00:25:47.356 --> 00:25:49.356 A:middle
On the right-hand side, you can

00:25:49.416 --> 00:25:51.026 A:middle
see the final subdivided

00:25:51.026 --> 00:25:52.466 A:middle
surface, and you can see the

00:25:52.466 --> 00:25:54.316 A:middle
beautiful details in there.

00:25:56.036 --> 00:25:57.486 A:middle
The industry standard for

00:25:57.486 --> 00:25:59.056 A:middle
subdivision surfaces is

00:25:59.056 --> 00:26:01.586 A:middle
OpenSubdiv and it is also

00:25:59.056 --> 00:26:01.586 A:middle
OpenSubdiv and it is also

00:26:01.586 --> 00:26:02.506 A:middle
developed by Pixar.

00:26:03.396 --> 00:26:04.816 A:middle
We have been working closely

00:26:04.816 --> 00:26:07.106 A:middle
with Pixar to provide metal

00:26:07.106 --> 00:26:10.626 A:middle
shaders that work optimally on

00:26:10.626 --> 00:26:11.646 A:middle
our platforms.

00:26:11.996 --> 00:26:14.556 A:middle
So the GPU evaluation is as fast

00:26:15.106 --> 00:26:17.116 A:middle
as possible.

00:26:17.216 --> 00:26:19.846 A:middle
And OpenSubdiv is the basis for

00:26:19.846 --> 00:26:21.496 A:middle
subdivision surfaces in

00:26:21.496 --> 00:26:21.866 A:middle
Scenekit.

00:26:22.136 --> 00:26:27.006 A:middle
And of course USD has great

00:26:27.006 --> 00:26:29.086 A:middle
support for subdivision surfaces

00:26:29.456 --> 00:26:30.496 A:middle
and it works beautifully with

00:26:30.496 --> 00:26:31.126 A:middle
OpenSubdiv.

00:26:32.156 --> 00:26:33.646 A:middle
In fact, USD has a unified

00:26:33.646 --> 00:26:35.686 A:middle
description for both polygonal

00:26:35.686 --> 00:26:37.486 A:middle
mesh data and subdivision

00:26:37.486 --> 00:26:38.066 A:middle
surface data.

00:26:39.096 --> 00:26:40.226 A:middle
It also has subdivision

00:26:40.226 --> 00:26:41.786 A:middle
specific-- support for

00:26:41.786 --> 00:26:43.646 A:middle
subdivision-specific properties,

00:26:43.936 --> 00:26:46.686 A:middle
such as creases or corners.

00:26:50.146 --> 00:26:51.726 A:middle
So, that concludes subdivision

00:26:51.726 --> 00:26:53.726 A:middle
surfaces, a great and efficient

00:26:53.766 --> 00:26:56.476 A:middle
way to store high quality

00:26:56.476 --> 00:26:57.176 A:middle
surfaces.

00:26:57.416 --> 00:27:00.846 A:middle
Now let's take a look at the

00:26:57.416 --> 00:27:00.846 A:middle
Now let's take a look at the

00:27:00.846 --> 00:27:01.726 A:middle
composition engine.

00:27:06.096 --> 00:27:07.926 A:middle
The composition engine is a

00:27:08.096 --> 00:27:10.206 A:middle
powerful authoring tool that

00:27:10.206 --> 00:27:12.136 A:middle
enables efficient collaboration

00:27:12.136 --> 00:27:13.006 A:middle
between artists.

00:27:13.786 --> 00:27:15.736 A:middle
And we'll take a look at an

00:27:15.736 --> 00:27:18.046 A:middle
example of references.

00:27:18.536 --> 00:27:21.826 A:middle
Here's again the scene graph

00:27:22.306 --> 00:27:24.816 A:middle
with two child objects parented

00:27:25.226 --> 00:27:26.526 A:middle
under a parent node.

00:27:27.246 --> 00:27:28.856 A:middle
And this is an efficient

00:27:28.856 --> 00:27:30.676 A:middle
representation, as long as those

00:27:30.756 --> 00:27:31.866 A:middle
two objects are different.

00:27:32.406 --> 00:27:36.836 A:middle
But what if you have multiple

00:27:36.836 --> 00:27:39.416 A:middle
copies of the same object in

00:27:39.416 --> 00:27:40.166 A:middle
your scene graph?

00:27:41.066 --> 00:27:43.516 A:middle
Then this nested scene graph

00:27:43.516 --> 00:27:45.236 A:middle
structure becomes inefficient

00:27:45.236 --> 00:27:47.266 A:middle
because it stores duplicate

00:27:47.266 --> 00:27:47.776 A:middle
data.

00:27:52.916 --> 00:27:56.066 A:middle
Most filed formats factor out

00:27:56.126 --> 00:27:58.446 A:middle
the duplicate data and store

00:27:58.446 --> 00:28:01.746 A:middle
references instead, and use the

00:27:58.446 --> 00:28:01.746 A:middle
references instead, and use the

00:28:01.746 --> 00:28:02.696 A:middle
support set as well.

00:28:03.686 --> 00:28:04.986 A:middle
But it goes further.

00:28:06.196 --> 00:28:10.166 A:middle
It also creates virtual objects

00:28:10.516 --> 00:28:12.906 A:middle
inside this nested scene graph

00:28:12.906 --> 00:28:15.586 A:middle
prim structure, and each of

00:28:15.616 --> 00:28:19.676 A:middle
these virtual objects has its

00:28:19.676 --> 00:28:23.276 A:middle
own unique object path, so that

00:28:23.276 --> 00:28:25.916 A:middle
you can go in and override some

00:28:25.916 --> 00:28:28.086 A:middle
of its materials-- some of its

00:28:28.266 --> 00:28:29.226 A:middle
properties.

00:28:29.516 --> 00:28:31.576 A:middle
For example, in this case, I

00:28:32.356 --> 00:28:34.706 A:middle
overrode the second spheres

00:28:35.326 --> 00:28:38.786 A:middle
material color to yellow without

00:28:38.786 --> 00:28:40.016 A:middle
affecting the first spheres

00:28:40.196 --> 00:28:40.616 A:middle
material.

00:28:44.496 --> 00:28:46.626 A:middle
You can also remove whole

00:28:46.626 --> 00:28:49.256 A:middle
subtrees from your scene graph.

00:28:49.826 --> 00:28:51.886 A:middle
And USD stores all of these

00:28:51.886 --> 00:28:55.356 A:middle
edits as efficient overrides to

00:28:55.356 --> 00:28:56.246 A:middle
the original data.

00:28:56.886 --> 00:29:00.126 A:middle
Let's take a look at what artist

00:28:56.886 --> 00:29:00.126 A:middle
Let's take a look at what artist

00:29:00.126 --> 00:29:01.476 A:middle
workflows this enables.

00:29:01.956 --> 00:29:04.416 A:middle
This is the finder in macOS

00:29:04.416 --> 00:29:04.976 A:middle
Catalina.

00:29:06.156 --> 00:29:09.676 A:middle
And you can see here macOS Quick

00:29:09.676 --> 00:29:13.166 A:middle
Look rendering a scene, USD

00:29:13.166 --> 00:29:13.696 A:middle
file.

00:29:13.986 --> 00:29:16.816 A:middle
Let's say now, I'm a layout

00:29:16.816 --> 00:29:19.866 A:middle
artist that places all these

00:29:19.866 --> 00:29:22.446 A:middle
objects in the scene.

00:29:22.916 --> 00:29:26.756 A:middle
And at the same time, there's

00:29:26.756 --> 00:29:28.346 A:middle
another artist working on

00:29:28.346 --> 00:29:30.136 A:middle
refining some of these objects,

00:29:30.176 --> 00:29:32.036 A:middle
for example, this chair.

00:29:32.566 --> 00:29:35.206 A:middle
And this artist replaced this

00:29:35.206 --> 00:29:39.096 A:middle
chair object with this one.

00:29:40.506 --> 00:29:43.596 A:middle
Now, if you go back to the

00:29:43.596 --> 00:29:46.776 A:middle
layout file, you can see that

00:29:46.776 --> 00:29:47.646 A:middle
these objects have been

00:29:47.646 --> 00:29:49.206 A:middle
automatically replaced, the file

00:29:49.206 --> 00:29:51.026 A:middle
itself did not change, it pulled

00:29:51.026 --> 00:29:51.816 A:middle
in the references.

00:29:52.256 --> 00:29:55.106 A:middle
And in fact, I can do my own

00:29:55.106 --> 00:29:55.626 A:middle
edits.

00:29:56.186 --> 00:30:00.626 A:middle
For example, changing the color

00:29:56.186 --> 00:30:00.626 A:middle
For example, changing the color

00:30:00.906 --> 00:30:02.456 A:middle
without affecting the other

00:30:02.456 --> 00:30:03.626 A:middle
artists files.

00:30:04.226 --> 00:30:07.656 A:middle
So this allows us to decouple

00:30:07.656 --> 00:30:08.846 A:middle
our workflows from each other.

00:30:12.636 --> 00:30:15.046 A:middle
So this was a quick sneak peek

00:30:15.366 --> 00:30:17.916 A:middle
on all the new artist workflows

00:30:17.916 --> 00:30:19.616 A:middle
that USD can enable.

00:30:23.616 --> 00:30:26.336 A:middle
We have also included two more

00:30:26.336 --> 00:30:28.346 A:middle
examples of these more advanced

00:30:28.346 --> 00:30:30.726 A:middle
USD features in the samples

00:30:30.726 --> 00:30:31.096 A:middle
folder.

00:30:32.396 --> 00:30:34.036 A:middle
Subdivisions surfaces with

00:30:34.096 --> 00:30:36.786 A:middle
creases and references with

00:30:36.786 --> 00:30:37.446 A:middle
overrides.

00:30:46.046 --> 00:30:48.166 A:middle
So, in summary, we have looked

00:30:48.166 --> 00:30:49.536 A:middle
at universal scene description.

00:30:49.746 --> 00:30:51.496 A:middle
It is a file format and a

00:30:51.496 --> 00:30:54.716 A:middle
powerful library for authoring

00:30:54.716 --> 00:30:56.476 A:middle
all the way to deploying 3D

00:30:56.476 --> 00:30:56.966 A:middle
content.

00:30:58.516 --> 00:31:00.256 A:middle
We have looked at workflows to

00:30:58.516 --> 00:31:00.256 A:middle
We have looked at workflows to

00:31:00.256 --> 00:31:03.116 A:middle
create and convert assets to

00:31:03.116 --> 00:31:03.236 A:middle
USDZ.

00:31:03.236 --> 00:31:06.006 A:middle
We introduced a new tool called

00:31:06.006 --> 00:31:08.246 A:middle
usdxconvert that converts obj,

00:31:08.246 --> 00:31:10.786 A:middle
gltf, fbx and other file formats

00:31:11.106 --> 00:31:11.546 A:middle
to USDZ.

00:31:11.546 --> 00:31:14.936 A:middle
And you can download these

00:31:14.936 --> 00:31:16.966 A:middle
Python USDX tools, which include

00:31:16.966 --> 00:31:19.156 A:middle
usdzconver, a precompiled USD

00:31:19.156 --> 00:31:21.136 A:middle
library and the sample scripts

00:31:21.266 --> 00:31:21.976 A:middle
from our website.

00:31:27.846 --> 00:31:29.626 A:middle
For more information, please

00:31:29.626 --> 00:31:31.486 A:middle
check out the session page.

00:31:32.356 --> 00:31:34.106 A:middle
And we will have a lab on USD

00:31:34.106 --> 00:31:37.496 A:middle
and USDZ tomorrow at 3 p.m. And

00:31:37.496 --> 00:31:39.156 A:middle
also check out the advances in

00:31:39.156 --> 00:31:41.466 A:middle
AR Quick Look on Friday at 9:00

00:31:42.106 --> 00:31:43.976 A:middle
a.m.

00:31:44.176 --> 00:31:44.516 A:middle
Thank you.

00:31:45.516 --> 00:31:50.500 A:middle
[ Applause ]
