WEBVTT

00:00:09.516 --> 00:00:15.556 A:middle
[ Applause ]

00:00:16.056 --> 00:00:16.596 A:middle
&gt;&gt; Hi everyone.

00:00:16.976 --> 00:00:17.966 A:middle
My name is Neil Desai

00:00:17.966 --> 00:00:18.896 A:middle
and I'm a watchOS

00:00:18.896 --> 00:00:20.466 A:middle
frameworks engineer and I am

00:00:20.466 --> 00:00:21.756 A:middle
really excited to talk to you

00:00:21.756 --> 00:00:23.226 A:middle
all about how to create some

00:00:23.226 --> 00:00:26.336 A:middle
great independent watch apps.

00:00:26.576 --> 00:00:28.386 A:middle
We're increasingly seeing people

00:00:28.386 --> 00:00:30.166 A:middle
enjoy being able to go out with

00:00:30.166 --> 00:00:31.546 A:middle
just their Apple Watch.

00:00:31.936 --> 00:00:33.276 A:middle
Users love the quick

00:00:33.276 --> 00:00:34.766 A:middle
interactions and the freedom

00:00:34.766 --> 00:00:35.876 A:middle
Apple Watch gives them.

00:00:36.806 --> 00:00:38.226 A:middle
Whether it's going out with just

00:00:38.226 --> 00:00:39.746 A:middle
their watch while working out,

00:00:40.316 --> 00:00:42.166 A:middle
running an errand, or quickly

00:00:42.166 --> 00:00:46.126 A:middle
answering a call, Apple Watch

00:00:46.126 --> 00:00:47.936 A:middle
helps keep you connected to the

00:00:47.936 --> 00:00:50.296 A:middle
people, information, and apps

00:00:50.296 --> 00:00:51.986 A:middle
you care about most.

00:00:52.656 --> 00:00:54.516 A:middle
And in these moments where the

00:00:54.516 --> 00:00:56.376 A:middle
user is enjoying the freedom of

00:00:56.376 --> 00:00:58.906 A:middle
Apple Watch, users think of

00:00:58.906 --> 00:01:00.346 A:middle
their iPhone as optional.

00:00:58.906 --> 00:01:00.346 A:middle
their iPhone as optional.

00:01:02.336 --> 00:01:04.385 A:middle
And we want our watch apps to

00:01:04.385 --> 00:01:06.876 A:middle
match our user's expectations of

00:01:06.876 --> 00:01:07.616 A:middle
Apple Watch.

00:01:07.946 --> 00:01:09.796 A:middle
And to do so we're introducing a

00:01:09.796 --> 00:01:12.726 A:middle
new concept, a concept we call

00:01:12.876 --> 00:01:14.236 A:middle
independent watch apps.

00:01:15.046 --> 00:01:17.236 A:middle
So now your iPhone app can be an

00:01:17.306 --> 00:01:18.516 A:middle
optional experience.

00:01:20.326 --> 00:01:22.246 A:middle
And a lot of apps already are

00:01:22.246 --> 00:01:23.496 A:middle
independent to some degree.

00:01:23.806 --> 00:01:25.726 A:middle
Outcast is a great example of a

00:01:25.726 --> 00:01:27.626 A:middle
podcast app where I can control

00:01:27.626 --> 00:01:29.716 A:middle
the entire experience directly

00:01:29.716 --> 00:01:30.446 A:middle
from my wrist.

00:01:31.576 --> 00:01:33.056 A:middle
And CARROT Weather is another

00:01:33.056 --> 00:01:34.766 A:middle
great example of an app that I

00:01:34.766 --> 00:01:36.416 A:middle
always check the weather on and

00:01:36.416 --> 00:01:38.086 A:middle
I only do it on my Apple Watch.

00:01:39.096 --> 00:01:40.826 A:middle
And whenever I'm traveling

00:01:40.826 --> 00:01:43.266 A:middle
abroad I always use Elk for

00:01:43.266 --> 00:01:44.376 A:middle
currency conversions.

00:01:45.056 --> 00:01:46.956 A:middle
However, these apps all have an

00:01:47.066 --> 00:01:48.126 A:middle
iPhone app.

00:01:48.646 --> 00:01:50.676 A:middle
And now we're saying that the

00:01:50.676 --> 00:01:52.106 A:middle
iPhone app is optional.

00:01:52.666 --> 00:01:55.266 A:middle
And for the first time, you can

00:01:55.266 --> 00:01:57.266 A:middle
ship a watch only app without

00:01:57.266 --> 00:01:58.976 A:middle
having to ship an iOS app at

00:01:58.976 --> 00:01:59.476 A:middle
all.

00:02:00.246 --> 00:02:00.866 A:middle
[applause] Thank you.

00:02:01.516 --> 00:02:04.846 A:middle
[ Applause ]

00:02:05.346 --> 00:02:07.536 A:middle
And to help your apps become

00:02:07.536 --> 00:02:09.566 A:middle
independent we're introducing a

00:02:09.566 --> 00:02:11.036 A:middle
bunch of new features this year

00:02:11.036 --> 00:02:13.186 A:middle
for watch apps, like being able

00:02:13.186 --> 00:02:14.826 A:middle
to send push notifications

00:02:14.826 --> 00:02:16.746 A:middle
directly to the device, and

00:02:16.746 --> 00:02:18.586 A:middle
helping to make sign on even

00:02:18.586 --> 00:02:20.196 A:middle
easier and a whole bunch of

00:02:20.196 --> 00:02:20.936 A:middle
other features.

00:02:21.656 --> 00:02:23.406 A:middle
But first I want to talk about

00:02:23.406 --> 00:02:24.646 A:middle
how we actually install these

00:02:24.646 --> 00:02:25.456 A:middle
applications.

00:02:27.516 --> 00:02:29.106 A:middle
Now up through the Watch iOS 5,

00:02:29.166 --> 00:02:30.716 A:middle
the Watch App has been embedded

00:02:30.716 --> 00:02:32.246 A:middle
within the iOS app and we

00:02:32.246 --> 00:02:33.766 A:middle
download both of them to the

00:02:33.766 --> 00:02:36.406 A:middle
iPhone, and then the iPhone

00:02:36.406 --> 00:02:38.076 A:middle
handles the task of installing

00:02:38.076 --> 00:02:39.946 A:middle
the Watch App from iPhone to

00:02:39.946 --> 00:02:40.806 A:middle
Apple Watch.

00:02:43.236 --> 00:02:44.866 A:middle
And we're just going to

00:02:44.866 --> 00:02:47.126 A:middle
completely change this in iOS 13

00:02:47.126 --> 00:02:48.226 A:middle
and watchOS 6.

00:02:48.536 --> 00:02:50.826 A:middle
So now the App Store server is

00:02:50.826 --> 00:02:52.366 A:middle
going to install whatever it

00:02:52.366 --> 00:02:54.246 A:middle
needs to install wherever it

00:02:54.246 --> 00:02:55.676 A:middle
needs to install it.

00:02:55.676 --> 00:02:57.266 A:middle
And it's going to apply to all

00:02:57.266 --> 00:02:58.966 A:middle
applications in the store today.

00:03:01.616 --> 00:03:04.726 A:middle
And so this means that the iOS

00:03:04.726 --> 00:03:06.506 A:middle
app no longer includes that

00:03:06.506 --> 00:03:08.646 A:middle
Watch App and some of you may be

00:03:08.646 --> 00:03:10.146 A:middle
happy to hear this, the Watch

00:03:10.146 --> 00:03:11.596 A:middle
App is no longer going to count

00:03:11.726 --> 00:03:13.456 A:middle
against your iOS app cellular

00:03:13.456 --> 00:03:14.196 A:middle
download limit.

00:03:15.486 --> 00:03:16.936 A:middle
And-- [applause] Thank you.

00:03:17.516 --> 00:03:19.806 A:middle
[ Applause ]

00:03:20.306 --> 00:03:22.476 A:middle
And we're able to do this by

00:03:22.476 --> 00:03:24.616 A:middle
bitcode recompiling all the apps

00:03:24.616 --> 00:03:26.366 A:middle
on our App Store servers and

00:03:26.366 --> 00:03:28.836 A:middle
separating out the iOS app from

00:03:28.836 --> 00:03:29.576 A:middle
the Watch App.

00:03:30.646 --> 00:03:32.186 A:middle
And this means that each device

00:03:32.186 --> 00:03:33.606 A:middle
is going to download its own

00:03:33.606 --> 00:03:33.836 A:middle
app.

00:03:34.126 --> 00:03:35.646 A:middle
So the iPhone gets an iPhone

00:03:35.646 --> 00:03:35.936 A:middle
app.

00:03:36.076 --> 00:03:38.166 A:middle
The watch gets a Watch App.

00:03:40.196 --> 00:03:41.756 A:middle
And because of this, because

00:03:41.756 --> 00:03:43.476 A:middle
we're able to install directly

00:03:43.476 --> 00:03:44.946 A:middle
to the device, we're now

00:03:44.946 --> 00:03:46.496 A:middle
enabling asset and variant

00:03:46.496 --> 00:03:47.756 A:middle
thinning for watch apps for the

00:03:47.756 --> 00:03:48.296 A:middle
first time.

00:03:49.156 --> 00:03:51.196 A:middle
So if your user has a Series 4

00:03:51.196 --> 00:03:54.016 A:middle
device, and, then we can install

00:03:54.016 --> 00:03:55.556 A:middle
the appropriate variant and

00:03:55.556 --> 00:03:57.416 A:middle
architecture size specific to

00:03:57.416 --> 00:03:59.266 A:middle
that device and not any other.

00:03:59.696 --> 00:04:01.616 A:middle
And we can apply that same logic

00:03:59.696 --> 00:04:01.616 A:middle
And we can apply that same logic

00:04:01.886 --> 00:04:02.716 A:middle
to assets.

00:04:02.976 --> 00:04:04.266 A:middle
So if you've configured your

00:04:04.266 --> 00:04:07.186 A:middle
asset catalog to have a

00:04:07.236 --> 00:04:09.946 A:middle
particular asset to a particular

00:04:09.946 --> 00:04:11.886 A:middle
device, then we can install just

00:04:11.886 --> 00:04:13.466 A:middle
that asset to that device.

00:04:15.006 --> 00:04:16.906 A:middle
And really this is just a fancy

00:04:16.906 --> 00:04:18.676 A:middle
way of saying downloads are much

00:04:18.676 --> 00:04:20.296 A:middle
smaller and Watch App binary

00:04:20.296 --> 00:04:21.356 A:middle
sizes are much smaller.

00:04:21.356 --> 00:04:23.386 A:middle
And if you're using Swift,

00:04:23.506 --> 00:04:24.996 A:middle
because of Swift 5 and ABI

00:04:25.116 --> 00:04:27.366 A:middle
stability, now the Swift dylibs

00:04:27.446 --> 00:04:28.916 A:middle
aren't included within your app

00:04:28.916 --> 00:04:30.536 A:middle
at all and so the downloads are

00:04:30.536 --> 00:04:32.096 A:middle
going to be even more smaller.

00:04:33.476 --> 00:04:35.256 A:middle
And so that's how we install our

00:04:35.256 --> 00:04:36.016 A:middle
applications.

00:04:36.266 --> 00:04:37.466 A:middle
And let's talk about how our

00:04:37.466 --> 00:04:40.206 A:middle
users are going to get them.

00:04:40.426 --> 00:04:41.536 A:middle
So your apps are still

00:04:41.536 --> 00:04:43.026 A:middle
discoverable in the iOS App

00:04:43.026 --> 00:04:45.806 A:middle
Store, but now new in watchOS 6

00:04:46.156 --> 00:04:47.736 A:middle
we're introducing the App Store

00:04:47.736 --> 00:04:48.836 A:middle
for Apple Watch.

00:04:50.186 --> 00:04:52.146 A:middle
And it is a fully featured App

00:04:52.146 --> 00:04:54.516 A:middle
Store complete with feature

00:04:54.516 --> 00:04:56.716 A:middle
sections, full product detail

00:04:56.716 --> 00:04:59.186 A:middle
pages, search, editorial.

00:04:59.486 --> 00:05:01.186 A:middle
And I got to say, you can even

00:04:59.486 --> 00:05:01.186 A:middle
And I got to say, you can even

00:05:01.186 --> 00:05:02.626 A:middle
purchase an app from your wrist

00:05:02.706 --> 00:05:04.616 A:middle
and when it happens it is so

00:05:04.616 --> 00:05:05.126 A:middle
cool.

00:05:05.186 --> 00:05:06.666 A:middle
I seriously love it.

00:05:07.136 --> 00:05:09.026 A:middle
And, so now let's talk about the

00:05:09.026 --> 00:05:10.496 A:middle
different types of apps and how

00:05:10.496 --> 00:05:12.036 A:middle
they function with this, in this

00:05:12.036 --> 00:05:13.556 A:middle
new Watch App Store.

00:05:15.936 --> 00:05:18.046 A:middle
So all the apps that exist in

00:05:18.046 --> 00:05:19.926 A:middle
the store today are what we call

00:05:19.926 --> 00:05:22.116 A:middle
dependent apps because the Watch

00:05:22.116 --> 00:05:23.946 A:middle
App is considered dependent on

00:05:23.996 --> 00:05:25.396 A:middle
the iPhone app by the system.

00:05:27.536 --> 00:05:29.406 A:middle
And so if I get one of these

00:05:29.406 --> 00:05:30.646 A:middle
dependent apps from the Watch

00:05:30.646 --> 00:05:32.956 A:middle
App Store on my watch, then the

00:05:32.956 --> 00:05:35.086 A:middle
system will kick off a download

00:05:35.086 --> 00:05:36.576 A:middle
of the iPhone app to iPhone.

00:05:37.426 --> 00:05:39.636 A:middle
And until that happens that the

00:05:39.636 --> 00:05:40.986 A:middle
iPhone app is installed, the

00:05:40.986 --> 00:05:42.586 A:middle
watchOS app launch is going to

00:05:42.586 --> 00:05:44.216 A:middle
be blocked because the system

00:05:44.216 --> 00:05:46.296 A:middle
considers that Watch App to be

00:05:46.296 --> 00:05:48.226 A:middle
dependent on the iPhone app.

00:05:49.976 --> 00:05:51.816 A:middle
And now unlike dependent apps,

00:05:52.096 --> 00:05:53.456 A:middle
independent apps are where the

00:05:53.456 --> 00:05:55.776 A:middle
Watch App can fly solo which

00:05:55.776 --> 00:05:57.676 A:middle
means the phone app doesn't need

00:05:57.676 --> 00:05:59.206 A:middle
to be installed to launch the

00:05:59.206 --> 00:06:00.406 A:middle
Watch App.

00:05:59.206 --> 00:06:00.406 A:middle
Watch App.

00:06:02.116 --> 00:06:03.806 A:middle
So that means the Watch App is

00:06:03.906 --> 00:06:05.366 A:middle
installed independently.

00:06:05.686 --> 00:06:07.396 A:middle
And if your user has both an

00:06:07.476 --> 00:06:09.286 A:middle
iPhone and Watch App installed

00:06:09.286 --> 00:06:11.636 A:middle
at the same time, now your user

00:06:11.636 --> 00:06:12.786 A:middle
can actually uninstall the

00:06:12.786 --> 00:06:14.456 A:middle
iPhone app and the Watch App

00:06:14.456 --> 00:06:15.056 A:middle
will remain.

00:06:18.336 --> 00:06:19.556 A:middle
And for those of you that are a

00:06:19.556 --> 00:06:21.376 A:middle
little nervous about, and your

00:06:21.376 --> 00:06:22.386 A:middle
brain's already thinking how

00:06:22.386 --> 00:06:23.756 A:middle
does this affect my app that

00:06:23.756 --> 00:06:25.116 A:middle
exists in the store, you'll be

00:06:25.116 --> 00:06:26.786 A:middle
happy to hear that independent

00:06:26.786 --> 00:06:28.916 A:middle
watchOS apps with an iOS app are

00:06:28.916 --> 00:06:30.576 A:middle
completely backwards compatible

00:06:30.776 --> 00:06:32.766 A:middle
with older OS's.

00:06:32.766 --> 00:06:34.176 A:middle
And those new watch only

00:06:34.176 --> 00:06:34.836 A:middle
applications-- [applause] Thank

00:06:34.836 --> 00:06:34.903 A:middle
you.

00:06:35.516 --> 00:06:37.586 A:middle
[ Applause ]

00:06:38.086 --> 00:06:38.526 A:middle
Thank you.

00:06:38.636 --> 00:06:39.676 A:middle
Those new watch only

00:06:39.676 --> 00:06:41.426 A:middle
applications are supported on

00:06:41.426 --> 00:06:42.636 A:middle
watchOS 6 or later.

00:06:45.326 --> 00:06:46.836 A:middle
And if you need to distribute

00:06:46.836 --> 00:06:48.166 A:middle
your app within an enterprise

00:06:48.166 --> 00:06:49.686 A:middle
for instance, you'll be happy to

00:06:49.686 --> 00:06:51.566 A:middle
hear we have full Xcode support

00:06:51.856 --> 00:06:53.346 A:middle
to also create those different

00:06:53.346 --> 00:06:54.636 A:middle
variants we were talking about

00:06:54.836 --> 00:06:56.646 A:middle
to split out your iPhone and

00:06:56.646 --> 00:06:57.156 A:middle
Watch App.

00:06:58.146 --> 00:06:59.256 A:middle
And new when you go through the

00:06:59.256 --> 00:07:01.406 A:middle
flow with Xcode, in the manifest

00:06:59.256 --> 00:07:01.406 A:middle
flow with Xcode, in the manifest

00:07:01.406 --> 00:07:02.846 A:middle
plist that gets generated,

00:07:03.046 --> 00:07:04.296 A:middle
there's a new platform

00:07:04.296 --> 00:07:06.186 A:middle
identifier key that's added to

00:07:06.186 --> 00:07:08.226 A:middle
tell the system what to install

00:07:08.226 --> 00:07:11.346 A:middle
and where to install it.

00:07:11.626 --> 00:07:13.036 A:middle
So now that we know the

00:07:13.036 --> 00:07:14.706 A:middle
importance of independent Watch

00:07:14.706 --> 00:07:17.226 A:middle
App, let's talk about how to

00:07:17.226 --> 00:07:18.386 A:middle
make your watch apps

00:07:18.386 --> 00:07:19.016 A:middle
independent.

00:07:19.436 --> 00:07:23.936 A:middle
And so let's, by doing so let's

00:07:24.176 --> 00:07:25.516 A:middle
jump into Xcode and now I'm

00:07:25.516 --> 00:07:26.956 A:middle
going to show you how easy it is

00:07:27.086 --> 00:07:28.276 A:middle
to take your existing app and

00:07:28.396 --> 00:07:28.976 A:middle
make it independent.

00:07:37.096 --> 00:07:39.576 A:middle
Cool. So here we are in Xcode

00:07:39.576 --> 00:07:41.156 A:middle
and I have a great Watch App

00:07:41.156 --> 00:07:42.526 A:middle
here that's currently a

00:07:42.526 --> 00:07:42.986 A:middle
dependent app.

00:07:43.676 --> 00:07:45.356 A:middle
And this is-- I've already done

00:07:45.356 --> 00:07:46.826 A:middle
all the work to make this app

00:07:46.826 --> 00:07:48.476 A:middle
independent, and because it's a

00:07:48.476 --> 00:07:50.116 A:middle
great flashcard app that exists

00:07:50.116 --> 00:07:50.716 A:middle
on Watch.

00:07:53.056 --> 00:07:54.306 A:middle
So we can build and run this

00:07:54.306 --> 00:07:56.126 A:middle
application and see that the

00:07:56.126 --> 00:07:57.346 A:middle
phone simulator and the watch

00:07:57.346 --> 00:07:59.036 A:middle
simulator are exactly like we

00:07:59.306 --> 00:08:01.126 A:middle
expect in our normal debugging

00:07:59.306 --> 00:08:01.126 A:middle
expect in our normal debugging

00:08:01.126 --> 00:08:01.626 A:middle
flow.

00:08:04.756 --> 00:08:07.086 A:middle
And so now the Watch App gets

00:08:07.086 --> 00:08:08.556 A:middle
launched and I can immediately

00:08:08.556 --> 00:08:09.726 A:middle
start a debugging session.

00:08:10.146 --> 00:08:11.626 A:middle
But now let's tell the system to

00:08:11.626 --> 00:08:12.776 A:middle
make this app independent.

00:08:13.226 --> 00:08:15.376 A:middle
So let's stop that debug session

00:08:17.276 --> 00:08:20.306 A:middle
and now in the target editor for

00:08:20.306 --> 00:08:22.486 A:middle
our WatchKit extension I see

00:08:22.486 --> 00:08:23.676 A:middle
under deployment target there's

00:08:23.676 --> 00:08:25.446 A:middle
a new checkbox called supports

00:08:25.446 --> 00:08:27.136 A:middle
running without iOS app

00:08:27.136 --> 00:08:27.776 A:middle
installation.

00:08:27.776 --> 00:08:29.776 A:middle
So I'm going to check that off,

00:08:29.826 --> 00:08:31.246 A:middle
and then I'm just going to build

00:08:31.246 --> 00:08:31.646 A:middle
and run.

00:08:31.646 --> 00:08:33.426 A:middle
And by doing so, by checking off

00:08:33.426 --> 00:08:35.106 A:middle
that box, I now told the system

00:08:35.346 --> 00:08:36.096 A:middle
it's independent.

00:08:36.316 --> 00:08:38.046 A:middle
And I was kind of fast so let me

00:08:38.446 --> 00:08:40.145 A:middle
actually show you one cool

00:08:40.145 --> 00:08:40.506 A:middle
thing.

00:08:41.086 --> 00:08:43.655 A:middle
So let's actually close out the

00:08:43.655 --> 00:08:45.686 A:middle
iPhone simulator because this

00:08:45.686 --> 00:08:46.576 A:middle
app's independent.

00:08:46.576 --> 00:08:47.996 A:middle
Why do we need that iPhone SIM

00:08:47.996 --> 00:08:48.406 A:middle
anymore?

00:08:49.056 --> 00:08:50.116 A:middle
Let's just build and run once

00:08:50.116 --> 00:08:52.226 A:middle
more and now I build and run

00:08:52.226 --> 00:08:54.346 A:middle
only to the watch simulator and

00:08:54.346 --> 00:08:55.966 A:middle
it provides a much faster

00:08:55.966 --> 00:08:56.976 A:middle
debugging experience.

00:08:57.516 --> 00:09:00.556 A:middle
[ Applause ]

00:08:57.516 --> 00:09:00.556 A:middle
[ Applause ]

00:09:01.056 --> 00:09:04.146 A:middle
Cool. Great.

00:09:04.146 --> 00:09:05.926 A:middle
So now let's start and build a

00:09:05.926 --> 00:09:07.376 A:middle
watch only application for the

00:09:07.376 --> 00:09:07.866 A:middle
first time.

00:09:08.916 --> 00:09:09.706 A:middle
So I'm going to close out of

00:09:09.706 --> 00:09:11.946 A:middle
this project, and to create a

00:09:11.946 --> 00:09:13.236 A:middle
new application I'm just going

00:09:13.236 --> 00:09:15.686 A:middle
to go to file, new project, and

00:09:17.916 --> 00:09:19.966 A:middle
then under watchOS I see there's

00:09:19.966 --> 00:09:21.046 A:middle
a Watch App and then there's

00:09:21.046 --> 00:09:22.906 A:middle
also an iOS app with a Watch

00:09:22.906 --> 00:09:23.166 A:middle
App.

00:09:23.166 --> 00:09:24.286 A:middle
And I of course only want to

00:09:24.286 --> 00:09:25.326 A:middle
build a watch only app right

00:09:25.326 --> 00:09:25.546 A:middle
now.

00:09:26.716 --> 00:09:27.966 A:middle
So let's select that.

00:09:33.776 --> 00:09:34.326 A:middle
Great.

00:09:35.076 --> 00:09:36.206 A:middle
And then of course let's use

00:09:36.206 --> 00:09:36.676 A:middle
SwiftUI.

00:09:37.606 --> 00:09:38.356 A:middle
It's pretty cool.

00:09:38.486 --> 00:09:39.496 A:middle
I hear a lot of good things.

00:09:40.836 --> 00:09:41.706 A:middle
[laughter] And then let's also

00:09:41.706 --> 00:09:42.706 A:middle
include a complication.

00:09:42.706 --> 00:09:44.256 A:middle
And then let's save that off to

00:09:44.256 --> 00:09:44.976 A:middle
my desktop.

00:09:50.876 --> 00:09:52.816 A:middle
Perfect. Let's just [inaudible]

00:09:52.816 --> 00:09:53.856 A:middle
and now let's just build and

00:09:53.856 --> 00:09:54.226 A:middle
run.

00:09:54.936 --> 00:09:56.756 A:middle
And again, just like the

00:09:56.756 --> 00:09:57.946 A:middle
independent app we were just

00:09:57.946 --> 00:09:59.786 A:middle
talking about, we don't need the

00:09:59.786 --> 00:10:00.936 A:middle
iPhone simulator, we're just

00:09:59.786 --> 00:10:00.936 A:middle
iPhone simulator, we're just

00:10:00.966 --> 00:10:02.316 A:middle
building and running a simple

00:10:02.316 --> 00:10:04.136 A:middle
watch only application directly

00:10:04.136 --> 00:10:05.136 A:middle
to the watch simulator.

00:10:06.466 --> 00:10:06.756 A:middle
Great.

00:10:13.156 --> 00:10:18.816 A:middle
[Applause] Thank you.

00:10:19.256 --> 00:10:20.536 A:middle
So we were able to talk about

00:10:20.536 --> 00:10:22.686 A:middle
how to migrate your existing app

00:10:22.686 --> 00:10:24.976 A:middle
and make it an independent watch

00:10:24.976 --> 00:10:25.166 A:middle
app.

00:10:25.326 --> 00:10:27.226 A:middle
We were also able to build a

00:10:27.226 --> 00:10:29.076 A:middle
watch only application and we

00:10:29.076 --> 00:10:30.456 A:middle
talked about how the simulator

00:10:30.456 --> 00:10:32.086 A:middle
experience is much improved.

00:10:32.766 --> 00:10:34.076 A:middle
And along the same vein as that

00:10:34.076 --> 00:10:35.726 A:middle
simulator experience, let's talk

00:10:35.726 --> 00:10:36.516 A:middle
about debugging.

00:10:37.406 --> 00:10:39.726 A:middle
So debugging on watchOS 6 is--

00:10:40.036 --> 00:10:41.886 A:middle
for simulator is up to 10 times

00:10:41.886 --> 00:10:42.586 A:middle
faster now.

00:10:43.296 --> 00:10:45.926 A:middle
[applause] Thank you.

00:10:46.666 --> 00:10:48.046 A:middle
And device debugging is up to

00:10:48.046 --> 00:10:49.576 A:middle
twice as fast and we've done a

00:10:49.576 --> 00:10:50.866 A:middle
lot of work this year to make

00:10:50.866 --> 00:10:52.326 A:middle
sure it's more reliable than

00:10:52.326 --> 00:10:53.186 A:middle
ever before.

00:10:53.696 --> 00:10:56.526 A:middle
And the debugging experience is

00:10:56.526 --> 00:10:58.666 A:middle
proxied through iPhone but I

00:10:58.666 --> 00:11:00.036 A:middle
wanted to call out one little

00:10:58.666 --> 00:11:00.036 A:middle
wanted to call out one little

00:11:00.036 --> 00:11:00.526 A:middle
pro tip.

00:11:01.056 --> 00:11:02.616 A:middle
So if your devices are on Wifi--

00:11:02.616 --> 00:11:04.556 A:middle
your phone and watch-- then a

00:11:04.556 --> 00:11:06.136 A:middle
faster route will be chosen by

00:11:06.136 --> 00:11:07.706 A:middle
the system and you'll see a much

00:11:07.706 --> 00:11:09.046 A:middle
faster debugging experience.

00:11:10.546 --> 00:11:11.876 A:middle
So let's dive into the different

00:11:11.956 --> 00:11:14.766 A:middle
aspects now of how to make an

00:11:14.766 --> 00:11:15.526 A:middle
app independent.

00:11:16.056 --> 00:11:18.876 A:middle
So to do so we're going to talk

00:11:18.876 --> 00:11:20.256 A:middle
about three major things.

00:11:20.256 --> 00:11:21.746 A:middle
We're going to talk about how do

00:11:21.746 --> 00:11:23.536 A:middle
we get our user data, via

00:11:23.536 --> 00:11:25.286 A:middle
authentication or any private

00:11:25.286 --> 00:11:27.306 A:middle
user data, directly from our

00:11:27.306 --> 00:11:27.686 A:middle
user.

00:11:29.056 --> 00:11:29.966 A:middle
We're going to talk about how to

00:11:29.966 --> 00:11:31.666 A:middle
push information to the device.

00:11:32.376 --> 00:11:33.536 A:middle
And lastly, we're going to talk

00:11:33.536 --> 00:11:35.246 A:middle
about dealing with connectivity

00:11:35.246 --> 00:11:36.206 A:middle
and gathering our own

00:11:36.206 --> 00:11:37.126 A:middle
application data.

00:11:38.426 --> 00:11:39.686 A:middle
So let's first talk about

00:11:39.686 --> 00:11:40.436 A:middle
authentication.

00:11:44.216 --> 00:11:45.926 A:middle
So the primary way to deal with

00:11:45.926 --> 00:11:47.786 A:middle
authentication is via sign in

00:11:47.786 --> 00:11:48.486 A:middle
and sign up.

00:11:48.886 --> 00:11:50.876 A:middle
And now on watchOS 6 you can

00:11:50.876 --> 00:11:52.696 A:middle
build sign up auth directly on

00:11:52.696 --> 00:11:53.266 A:middle
the watch.

00:11:54.386 --> 00:11:55.976 A:middle
And you can support terms and

00:11:55.976 --> 00:11:58.286 A:middle
conditions using the WK alert

00:11:58.286 --> 00:11:58.886 A:middle
action API.

00:12:00.476 --> 00:12:02.446 A:middle
And new on watchOS 6 as well as

00:12:02.446 --> 00:12:03.696 A:middle
all of our other Apple

00:12:03.696 --> 00:12:05.856 A:middle
platforms, will now support Sign

00:12:05.856 --> 00:12:06.616 A:middle
in With Apple.

00:12:07.146 --> 00:12:09.556 A:middle
And we're going to talk a little

00:12:09.556 --> 00:12:11.036 A:middle
bit about how you can build your

00:12:11.036 --> 00:12:13.946 A:middle
own custom password based sign

00:12:13.946 --> 00:12:14.146 A:middle
in.

00:12:15.376 --> 00:12:16.486 A:middle
So let's first talk about Sign

00:12:16.486 --> 00:12:18.756 A:middle
in With Apple.

00:12:18.986 --> 00:12:20.546 A:middle
Sign in With Apple is a simple,

00:12:20.546 --> 00:12:22.506 A:middle
secure, and private way to get

00:12:22.506 --> 00:12:24.056 A:middle
authentication from your user.

00:12:25.266 --> 00:12:26.416 A:middle
And your user doesn't have to

00:12:26.416 --> 00:12:27.516 A:middle
fill out any forms.

00:12:27.826 --> 00:12:29.006 A:middle
There's no new password they

00:12:29.006 --> 00:12:30.086 A:middle
have to think of.

00:12:30.366 --> 00:12:32.966 A:middle
And they can just simply select

00:12:32.966 --> 00:12:34.876 A:middle
an email address and it just

00:12:34.876 --> 00:12:36.736 A:middle
continues signing in.

00:12:39.236 --> 00:12:41.896 A:middle
And each account has two factor

00:12:41.896 --> 00:12:44.166 A:middle
auth built in and there's no

00:12:44.166 --> 00:12:45.836 A:middle
email verification that a user

00:12:45.836 --> 00:12:46.596 A:middle
has to do.

00:12:47.956 --> 00:12:49.436 A:middle
And we support sign in across

00:12:49.436 --> 00:12:50.306 A:middle
all devices.

00:12:50.306 --> 00:12:52.756 A:middle
And there's also a JavaScript

00:12:52.756 --> 00:12:54.456 A:middle
SDK for any other type of

00:12:54.456 --> 00:12:54.826 A:middle
device.

00:12:57.376 --> 00:12:59.266 A:middle
So to use Sign in With Apple,

00:12:59.416 --> 00:13:00.256 A:middle
make sure and use the

00:12:59.416 --> 00:13:00.256 A:middle
make sure and use the

00:13:00.256 --> 00:13:01.456 A:middle
authentication services

00:13:01.456 --> 00:13:03.046 A:middle
framework which is now available

00:13:03.046 --> 00:13:03.866 A:middle
on watchOS.

00:13:06.076 --> 00:13:07.476 A:middle
And if you have any specific UI

00:13:07.476 --> 00:13:09.386 A:middle
you want to build, you can now

00:13:09.386 --> 00:13:11.126 A:middle
use an authorization Apple ID

00:13:11.126 --> 00:13:12.686 A:middle
button and embed that within

00:13:12.686 --> 00:13:13.616 A:middle
your application.

00:13:14.046 --> 00:13:15.506 A:middle
And then once the user actually

00:13:15.626 --> 00:13:17.286 A:middle
taps on that button you'll

00:13:17.286 --> 00:13:19.036 A:middle
receive your ID action and then

00:13:19.036 --> 00:13:20.566 A:middle
you can use the authentication

00:13:20.566 --> 00:13:22.466 A:middle
services framework to display

00:13:22.466 --> 00:13:23.586 A:middle
the appropriate system UI.

00:13:24.336 --> 00:13:26.766 A:middle
And there's a lot of great talks

00:13:26.766 --> 00:13:27.216 A:middle
this week.

00:13:27.216 --> 00:13:28.336 A:middle
If you want to know some more

00:13:28.336 --> 00:13:29.756 A:middle
about Sign in With Apple, I

00:13:29.756 --> 00:13:32.596 A:middle
highly recommend them.

00:13:32.816 --> 00:13:34.296 A:middle
Great. And to enable Sign in

00:13:34.296 --> 00:13:36.346 A:middle
With Apple in your Xcode project

00:13:36.536 --> 00:13:38.486 A:middle
on your WatchKit extension, just

00:13:38.486 --> 00:13:40.296 A:middle
add a new capability and enable

00:13:40.296 --> 00:13:41.216 A:middle
your Sign in With Apple

00:13:41.216 --> 00:13:41.776 A:middle
entitlement.

00:13:42.556 --> 00:13:43.646 A:middle
And that's how to easily get

00:13:43.646 --> 00:13:44.136 A:middle
started.

00:13:46.876 --> 00:13:48.346 A:middle
And now you may have your own

00:13:48.346 --> 00:13:49.786 A:middle
custom password based sign in

00:13:49.786 --> 00:13:51.746 A:middle
and we're introducing a text

00:13:51.746 --> 00:13:53.386 A:middle
field new to watchOS this year.

00:13:54.676 --> 00:13:56.456 A:middle
And so you can embed this text

00:13:56.456 --> 00:13:58.246 A:middle
field from within SwiftUI or

00:13:58.636 --> 00:13:59.426 A:middle
WatchKit.

00:14:01.576 --> 00:14:03.106 A:middle
And so you can build a UI such

00:14:03.106 --> 00:14:04.826 A:middle
as this where we're just asking

00:14:04.826 --> 00:14:06.026 A:middle
our user, hey we just need a

00:14:06.026 --> 00:14:07.686 A:middle
username and password and we're

00:14:07.686 --> 00:14:09.486 A:middle
using the placeholder text to

00:14:09.486 --> 00:14:10.796 A:middle
instruct our user what to

00:14:10.796 --> 00:14:11.956 A:middle
particularly input.

00:14:12.476 --> 00:14:15.456 A:middle
And if you set the appropriate

00:14:15.456 --> 00:14:16.936 A:middle
text content type for that

00:14:16.936 --> 00:14:18.576 A:middle
particular text field, then the

00:14:18.576 --> 00:14:20.266 A:middle
system text input controller

00:14:20.266 --> 00:14:21.756 A:middle
that gets brought up will change

00:14:21.756 --> 00:14:23.656 A:middle
itself for the appropriate text

00:14:23.656 --> 00:14:23.896 A:middle
type.

00:14:26.996 --> 00:14:28.966 A:middle
And so for this flow, say the

00:14:28.966 --> 00:14:31.616 A:middle
user taps on username and then

00:14:31.616 --> 00:14:33.266 A:middle
the system text input controller

00:14:33.446 --> 00:14:34.456 A:middle
gets brought up.

00:14:34.816 --> 00:14:37.336 A:middle
The user can then elect to enter

00:14:37.336 --> 00:14:39.506 A:middle
text via dictation or scribble,

00:14:39.786 --> 00:14:41.426 A:middle
and there's now a new option

00:14:41.646 --> 00:14:43.136 A:middle
called continuity keyboard.

00:14:43.476 --> 00:14:46.456 A:middle
So if a user taps on this, then

00:14:46.456 --> 00:14:48.036 A:middle
the Apple Watch will say, hey

00:14:48.036 --> 00:14:49.466 A:middle
finish entering some text on

00:14:49.466 --> 00:14:51.506 A:middle
your iOS or iPad OS device and

00:14:51.806 --> 00:14:53.496 A:middle
you can see they'll receive a

00:14:53.496 --> 00:14:55.896 A:middle
notification on your iPhone or

00:14:55.896 --> 00:14:57.536 A:middle
iPad if they have the same

00:14:57.536 --> 00:14:58.936 A:middle
iCloud account logged into it.

00:14:58.936 --> 00:15:01.856 A:middle
And if you've ever used tvOS

00:14:58.936 --> 00:15:01.856 A:middle
And if you've ever used tvOS

00:15:01.856 --> 00:15:03.416 A:middle
with text fields, this flow will

00:15:03.416 --> 00:15:04.356 A:middle
look very familiar.

00:15:04.876 --> 00:15:07.766 A:middle
And once the user taps on it,

00:15:07.766 --> 00:15:09.426 A:middle
they can easily enter in text

00:15:09.836 --> 00:15:11.176 A:middle
into their iOS keyboard.

00:15:12.166 --> 00:15:14.026 A:middle
And again, the text content type

00:15:14.026 --> 00:15:15.766 A:middle
like we talked about earlier is

00:15:15.766 --> 00:15:17.316 A:middle
going to inform the auto fill

00:15:17.316 --> 00:15:18.256 A:middle
suggestions here.

00:15:18.256 --> 00:15:20.846 A:middle
And then the user can elect to

00:15:21.286 --> 00:15:22.806 A:middle
select an auto fill suggestion

00:15:22.806 --> 00:15:24.076 A:middle
from either their iCloud

00:15:24.076 --> 00:15:26.186 A:middle
keychain or the user's preferred

00:15:26.186 --> 00:15:27.086 A:middle
password manager.

00:15:30.556 --> 00:15:32.976 A:middle
And now to get your-- you want

00:15:33.086 --> 00:15:34.026 A:middle
to make sure to get your

00:15:34.026 --> 00:15:35.506 A:middle
password auto fill suggestions

00:15:35.666 --> 00:15:36.946 A:middle
elevated by the system.

00:15:37.446 --> 00:15:39.166 A:middle
And so to do that, make sure to

00:15:39.166 --> 00:15:40.696 A:middle
set the correct text content

00:15:40.696 --> 00:15:43.506 A:middle
type and add associated domains

00:15:43.816 --> 00:15:45.146 A:middle
to your WatchKit extension.

00:15:45.856 --> 00:15:47.366 A:middle
Now associated domains are a

00:15:47.366 --> 00:15:49.556 A:middle
great way to tie your app and

00:15:49.556 --> 00:15:51.816 A:middle
website together and in this way

00:15:51.966 --> 00:15:53.846 A:middle
it lets the system know that hey

00:15:53.846 --> 00:15:55.826 A:middle
the credential that might exist

00:15:55.826 --> 00:15:58.036 A:middle
in the user's iCloud keychain

00:15:58.276 --> 00:15:59.826 A:middle
can get elevated and displayed

00:15:59.826 --> 00:16:01.366 A:middle
at the top of the iOS keyboard.

00:15:59.826 --> 00:16:01.366 A:middle
at the top of the iOS keyboard.

00:16:04.216 --> 00:16:06.036 A:middle
And once the user selects on an

00:16:06.036 --> 00:16:08.296 A:middle
auto fill suggestion, then the

00:16:08.296 --> 00:16:10.036 A:middle
system will make its best effort

00:16:10.036 --> 00:16:11.866 A:middle
to auto fill both the username

00:16:11.866 --> 00:16:13.186 A:middle
and password at the same time.

00:16:13.736 --> 00:16:16.596 A:middle
And for password based sign in,

00:16:16.596 --> 00:16:18.156 A:middle
sometimes you may need to

00:16:18.156 --> 00:16:19.586 A:middle
support one time codes.

00:16:20.136 --> 00:16:21.326 A:middle
And so if you set the correct

00:16:21.326 --> 00:16:23.866 A:middle
text content type, then a

00:16:23.866 --> 00:16:25.916 A:middle
one-time code can get auto

00:16:25.916 --> 00:16:28.056 A:middle
filled if you sent it via maybe

00:16:28.056 --> 00:16:29.566 A:middle
an iMessage or a text message,

00:16:29.956 --> 00:16:31.156 A:middle
and then the system text input

00:16:31.156 --> 00:16:32.676 A:middle
controller will show that auto

00:16:32.676 --> 00:16:33.436 A:middle
fill suggestion.

00:16:33.436 --> 00:16:35.226 A:middle
The user can easily select it

00:16:35.516 --> 00:16:37.096 A:middle
and then go about and continue

00:16:37.096 --> 00:16:37.936 A:middle
with authentication.

00:16:38.516 --> 00:16:44.546 A:middle
[ Applause ]

00:16:45.046 --> 00:16:46.006 A:middle
So again, [inaudible] text

00:16:46.006 --> 00:16:47.836 A:middle
field, you can use that from

00:16:47.836 --> 00:16:50.606 A:middle
within SwiftUI or WatchKit.

00:16:51.036 --> 00:16:52.056 A:middle
Make sure to set up your

00:16:52.056 --> 00:16:54.206 A:middle
associated domains to elevate

00:16:54.206 --> 00:16:55.296 A:middle
the appropriate auto fill

00:16:55.296 --> 00:16:57.926 A:middle
suggestion and test out your

00:16:57.926 --> 00:16:59.496 A:middle
flows with continuity keyboard

00:16:59.836 --> 00:17:01.446 A:middle
and build one time code support

00:16:59.836 --> 00:17:01.446 A:middle
and build one time code support

00:17:01.446 --> 00:17:03.566 A:middle
if you need it.

00:17:03.826 --> 00:17:06.006 A:middle
Now, another type of user

00:17:06.006 --> 00:17:07.856 A:middle
information we sometimes need is

00:17:07.945 --> 00:17:10.366 A:middle
private user information and we

00:17:10.366 --> 00:17:12.136 A:middle
want to ask our users for that

00:17:12.136 --> 00:17:13.526 A:middle
information via the different

00:17:13.526 --> 00:17:14.496 A:middle
frameworks available.

00:17:15.685 --> 00:17:17.396 A:middle
Now on watchOS, we've already

00:17:17.396 --> 00:17:19.566 A:middle
supported giving access for

00:17:19.566 --> 00:17:21.546 A:middle
calendar, contacts, motion, and

00:17:21.786 --> 00:17:23.376 A:middle
even other types such as

00:17:23.376 --> 00:17:25.036 A:middle
location directly on Apple

00:17:25.036 --> 00:17:25.546 A:middle
Watch.

00:17:25.955 --> 00:17:28.666 A:middle
And now with watchOS 6, we now

00:17:28.666 --> 00:17:29.846 A:middle
support giving health

00:17:29.846 --> 00:17:31.786 A:middle
authorization directly on Apple

00:17:31.786 --> 00:17:32.266 A:middle
Watch.

00:17:32.316 --> 00:17:37.136 A:middle
[applause] Thank you.

00:17:37.136 --> 00:17:38.966 A:middle
So the user can elect to give

00:17:38.966 --> 00:17:40.476 A:middle
access to all of the data

00:17:40.476 --> 00:17:42.296 A:middle
requested or even just

00:17:42.296 --> 00:17:43.306 A:middle
particular types.

00:17:46.716 --> 00:17:48.066 A:middle
So that's how we deal with

00:17:48.066 --> 00:17:49.516 A:middle
getting user data in an

00:17:49.516 --> 00:17:50.596 A:middle
independent app world.

00:17:51.136 --> 00:17:52.816 A:middle
Let's now talk about how to push

00:17:52.816 --> 00:17:54.086 A:middle
information to a device.

00:17:54.786 --> 00:17:56.786 A:middle
And of course the best way to

00:17:56.786 --> 00:17:58.326 A:middle
push information to a device is

00:17:59.046 --> 00:18:00.356 A:middle
via push notifications.

00:17:59.046 --> 00:18:00.356 A:middle
via push notifications.

00:18:00.916 --> 00:18:03.336 A:middle
And now with watchOS 6 the watch

00:18:03.336 --> 00:18:04.906 A:middle
has become a standalone push

00:18:04.906 --> 00:18:06.926 A:middle
target for the first time.

00:18:07.516 --> 00:18:10.246 A:middle
[applause]

00:18:10.746 --> 00:18:13.196 A:middle
And so this means you can send

00:18:13.196 --> 00:18:15.136 A:middle
user visible notifications and

00:18:15.136 --> 00:18:16.336 A:middle
background notifications

00:18:16.626 --> 00:18:18.216 A:middle
directly to Apple Watch.

00:18:18.806 --> 00:18:20.026 A:middle
And this is based around the

00:18:20.026 --> 00:18:21.996 A:middle
user notifications framework and

00:18:21.996 --> 00:18:23.336 A:middle
we're using the exact same

00:18:23.336 --> 00:18:25.186 A:middle
infrastructure as all other

00:18:25.186 --> 00:18:25.926 A:middle
Apple devices.

00:18:27.576 --> 00:18:29.796 A:middle
So from an overview perspective,

00:18:30.576 --> 00:18:32.256 A:middle
your server will send an APNS

00:18:32.256 --> 00:18:33.706 A:middle
request header and payload

00:18:34.136 --> 00:18:36.566 A:middle
directly to APNS and APNS is our

00:18:36.566 --> 00:18:38.246 A:middle
Apple Push Notification Service.

00:18:38.366 --> 00:18:40.086 A:middle
And then APNS is going to send

00:18:40.176 --> 00:18:41.506 A:middle
that payload down to the

00:18:41.506 --> 00:18:42.506 A:middle
appropriate device.

00:18:43.516 --> 00:18:45.226 A:middle
On watchOS, the payloads are the

00:18:45.226 --> 00:18:47.296 A:middle
same as on all other platforms

00:18:47.296 --> 00:18:47.636 A:middle
we have.

00:18:47.636 --> 00:18:50.276 A:middle
And on the APNS request header,

00:18:50.276 --> 00:18:53.576 A:middle
there's one new key and that new

00:18:53.576 --> 00:18:55.586 A:middle
key is an APNS push type.

00:18:55.586 --> 00:18:59.316 A:middle
And this is supported on all of

00:18:59.316 --> 00:19:01.166 A:middle
our Apple platforms and on all

00:18:59.316 --> 00:19:01.166 A:middle
our Apple platforms and on all

00:19:02.176 --> 00:19:02.286 A:middle
OS's.

00:19:02.816 --> 00:19:04.746 A:middle
And so you can set that key to

00:19:04.746 --> 00:19:07.366 A:middle
be either alert or background.

00:19:07.366 --> 00:19:08.676 A:middle
And the way I like to think

00:19:08.676 --> 00:19:10.556 A:middle
about this is if the user's ever

00:19:10.556 --> 00:19:12.026 A:middle
going to see a notification,

00:19:12.106 --> 00:19:13.316 A:middle
they're going to get alerted to

00:19:13.316 --> 00:19:15.076 A:middle
something, then set alert in the

00:19:15.076 --> 00:19:15.556 A:middle
push type.

00:19:15.686 --> 00:19:17.176 A:middle
And if you need to send a

00:19:17.176 --> 00:19:18.846 A:middle
background notification to just

00:19:18.846 --> 00:19:19.816 A:middle
wake up your app in the

00:19:19.816 --> 00:19:21.776 A:middle
background on the user's device

00:19:22.106 --> 00:19:23.466 A:middle
whenever there's new content

00:19:23.466 --> 00:19:24.736 A:middle
available, you can use the

00:19:24.736 --> 00:19:26.306 A:middle
background push type.

00:19:28.656 --> 00:19:30.496 A:middle
And so for registration and

00:19:30.496 --> 00:19:33.136 A:middle
delivery for-- for registration

00:19:33.136 --> 00:19:34.296 A:middle
we're going to get our tokens

00:19:34.296 --> 00:19:35.006 A:middle
for WatchKit.

00:19:35.846 --> 00:19:37.436 A:middle
And then just like forwarded

00:19:37.436 --> 00:19:39.286 A:middle
notifications in past releases,

00:19:39.526 --> 00:19:41.036 A:middle
your alert notifications will

00:19:41.036 --> 00:19:42.456 A:middle
get delivered to your watch apps

00:19:42.456 --> 00:19:43.936 A:middle
in the same manner as before

00:19:44.186 --> 00:19:45.936 A:middle
using user notifications in

00:19:45.936 --> 00:19:47.056 A:middle
conjunction with WatchKit.

00:19:47.056 --> 00:19:48.926 A:middle
And your background

00:19:48.926 --> 00:19:50.086 A:middle
notifications will now get

00:19:50.086 --> 00:19:51.796 A:middle
delivered on your WK extension

00:19:51.796 --> 00:19:52.246 A:middle
delegate.

00:19:52.246 --> 00:19:54.976 A:middle
And if you encrypt any of your

00:19:54.976 --> 00:19:56.436 A:middle
payloads, we now have full

00:19:56.436 --> 00:19:58.056 A:middle
notification service extension

00:19:58.056 --> 00:19:59.976 A:middle
support on watchOS as well.

00:20:00.836 --> 00:20:02.356 A:middle
And so you can just decrypt that

00:20:02.356 --> 00:20:03.626 A:middle
payload directly on the device,

00:20:03.796 --> 00:20:05.396 A:middle
and then show it to your user.

00:20:07.416 --> 00:20:09.046 A:middle
And in your Xcode project, to

00:20:09.046 --> 00:20:11.186 A:middle
enable push notifications in the

00:20:11.186 --> 00:20:12.746 A:middle
target editor, if you select

00:20:12.746 --> 00:20:14.456 A:middle
your WatchKit extension you can

00:20:14.456 --> 00:20:16.036 A:middle
then just add a new capability

00:20:16.476 --> 00:20:17.846 A:middle
and enable the push

00:20:17.846 --> 00:20:19.166 A:middle
notifications entitlement.

00:20:20.426 --> 00:20:21.466 A:middle
And if you want to support

00:20:21.466 --> 00:20:23.176 A:middle
background notifications, you

00:20:23.176 --> 00:20:25.576 A:middle
can enable background modes and

00:20:25.576 --> 00:20:27.336 A:middle
then just enable the remote

00:20:27.336 --> 00:20:28.716 A:middle
notification checkbox.

00:20:29.586 --> 00:20:31.816 A:middle
So let's dive into some code

00:20:33.286 --> 00:20:33.456 A:middle
now.

00:20:33.616 --> 00:20:35.366 A:middle
So here we are in our extension

00:20:35.366 --> 00:20:37.026 A:middle
delegate and the application did

00:20:37.026 --> 00:20:37.756 A:middle
finish launching.

00:20:38.066 --> 00:20:39.266 A:middle
And the first thing we want to

00:20:39.266 --> 00:20:40.576 A:middle
do when we register for

00:20:40.576 --> 00:20:42.766 A:middle
notifications is first ask our

00:20:42.766 --> 00:20:43.876 A:middle
user if that's okay.

00:20:43.956 --> 00:20:45.116 A:middle
So we're going to request

00:20:45.116 --> 00:20:46.856 A:middle
authorization on our UN user

00:20:46.856 --> 00:20:47.826 A:middle
notification center.

00:20:47.826 --> 00:20:50.336 A:middle
And if the user elects to grant

00:20:50.336 --> 00:20:52.676 A:middle
us access, then we can just call

00:20:52.676 --> 00:20:53.546 A:middle
register for remote

00:20:53.546 --> 00:20:55.666 A:middle
notifications on our WK shared

00:20:55.666 --> 00:20:56.196 A:middle
extension.

00:20:56.616 --> 00:21:00.116 A:middle
And after using so, if we

00:20:56.616 --> 00:21:00.116 A:middle
And after using so, if we

00:21:00.116 --> 00:21:01.586 A:middle
implement our did register for

00:21:01.586 --> 00:21:04.696 A:middle
remote notifications call, then

00:21:04.696 --> 00:21:06.376 A:middle
we can get our device token and

00:21:06.376 --> 00:21:08.336 A:middle
forward that notification over

00:21:08.336 --> 00:21:10.146 A:middle
to our notification provider for

00:21:10.146 --> 00:21:11.366 A:middle
our own server.

00:21:11.466 --> 00:21:13.826 A:middle
And of course we want to make

00:21:13.826 --> 00:21:15.166 A:middle
sure an implement did fail to

00:21:15.166 --> 00:21:16.996 A:middle
register to remote notifications

00:21:17.166 --> 00:21:18.356 A:middle
just in case something failed.

00:21:21.956 --> 00:21:23.176 A:middle
And then for background

00:21:23.176 --> 00:21:24.766 A:middle
notifications, those will get

00:21:24.766 --> 00:21:26.546 A:middle
delivered on did receive remote

00:21:26.546 --> 00:21:28.146 A:middle
notification with a fetch

00:21:28.146 --> 00:21:29.156 A:middle
completion handler and a

00:21:29.156 --> 00:21:30.276 A:middle
background fetch result.

00:21:30.716 --> 00:21:32.326 A:middle
So once you receive this you can

00:21:32.326 --> 00:21:33.296 A:middle
handle your background

00:21:33.296 --> 00:21:35.226 A:middle
notification and then just call

00:21:35.226 --> 00:21:36.506 A:middle
the completion handler with

00:21:36.506 --> 00:21:37.656 A:middle
whatever the appropriate

00:21:37.656 --> 00:21:42.556 A:middle
background fetch result is.

00:21:42.766 --> 00:21:44.636 A:middle
So again, that APNS push type,

00:21:44.636 --> 00:21:46.666 A:middle
that new key on the APNS request

00:21:46.666 --> 00:21:48.946 A:middle
header, is required when sending

00:21:48.946 --> 00:21:50.296 A:middle
pushes to watchOS.

00:21:50.546 --> 00:21:51.826 A:middle
And it's supported on all

00:21:51.826 --> 00:21:52.416 A:middle
platforms.

00:21:52.726 --> 00:21:54.086 A:middle
So really if you're sending any

00:21:54.086 --> 00:21:55.576 A:middle
notifications to any Apple

00:21:55.576 --> 00:21:57.636 A:middle
devices, just make sure to add

00:21:57.636 --> 00:21:58.436 A:middle
the APNS push type.

00:22:00.336 --> 00:22:02.866 A:middle
And your APNS topic key on your

00:22:02.866 --> 00:22:04.566 A:middle
APNS request header is going to

00:22:04.566 --> 00:22:06.176 A:middle
be your WatchKit apps bundle

00:22:06.176 --> 00:22:08.136 A:middle
identifier not your WatchKit

00:22:08.136 --> 00:22:08.776 A:middle
extension.

00:22:08.776 --> 00:22:09.916 A:middle
I just want to quickly mention

00:22:10.296 --> 00:22:10.706 A:middle
that.

00:22:11.376 --> 00:22:13.686 A:middle
And if you have multiple apps

00:22:13.686 --> 00:22:15.016 A:middle
like an iPhone app and a Watch

00:22:15.016 --> 00:22:16.746 A:middle
App, you want to send your

00:22:16.746 --> 00:22:18.556 A:middle
notifications to both devices

00:22:18.556 --> 00:22:19.596 A:middle
simultaneously.

00:22:19.646 --> 00:22:22.686 A:middle
And when you do so, the system

00:22:22.686 --> 00:22:24.436 A:middle
will appropriately de-duplicate

00:22:24.436 --> 00:22:25.816 A:middle
the notifications when they're

00:22:25.816 --> 00:22:26.976 A:middle
sent simultaneously.

00:22:29.536 --> 00:22:31.116 A:middle
And another great way to push

00:22:31.116 --> 00:22:32.426 A:middle
information to a device is via

00:22:32.426 --> 00:22:33.946 A:middle
complication pushes.

00:22:35.036 --> 00:22:36.776 A:middle
So complication pushes are a

00:22:36.776 --> 00:22:39.236 A:middle
great way to update your app if

00:22:39.236 --> 00:22:41.706 A:middle
your complication is enabled on

00:22:41.706 --> 00:22:42.746 A:middle
the active watch face.

00:22:45.096 --> 00:22:47.076 A:middle
And this is done via PushKit

00:22:47.076 --> 00:22:47.966 A:middle
which has not been made

00:22:47.966 --> 00:22:49.236 A:middle
available on watchOS.

00:22:49.806 --> 00:22:51.476 A:middle
And you can use PushKit for both

00:22:51.476 --> 00:22:53.026 A:middle
your registration and delivery.

00:22:54.316 --> 00:22:55.656 A:middle
So if you're using the old

00:22:55.656 --> 00:22:57.116 A:middle
complication push mechanism

00:22:57.286 --> 00:22:59.036 A:middle
that's based on iOS, we

00:22:59.036 --> 00:23:00.376 A:middle
recommend you just send your

00:22:59.036 --> 00:23:00.376 A:middle
recommend you just send your

00:23:00.376 --> 00:23:02.326 A:middle
complication pushes directly to

00:23:02.326 --> 00:23:05.096 A:middle
the watch now.

00:23:05.096 --> 00:23:08.266 A:middle
So in code, we can just register

00:23:08.266 --> 00:23:09.886 A:middle
for complication pushes by

00:23:09.886 --> 00:23:11.756 A:middle
setting up our PK push registry,

00:23:12.116 --> 00:23:14.616 A:middle
set up our delegate, and then

00:23:14.616 --> 00:23:18.896 A:middle
specify some desired push types.

00:23:19.176 --> 00:23:20.936 A:middle
And then once we do so we're

00:23:20.936 --> 00:23:22.036 A:middle
going to get our device token

00:23:22.036 --> 00:23:24.026 A:middle
and we just forward that off to

00:23:24.026 --> 00:23:26.366 A:middle
our server and handle any

00:23:26.366 --> 00:23:27.866 A:middle
invalidations that might occur.

00:23:29.526 --> 00:23:30.966 A:middle
And then when we actually send a

00:23:30.966 --> 00:23:33.596 A:middle
push and deliver one, then we

00:23:33.596 --> 00:23:35.306 A:middle
just implement the appropriate

00:23:35.306 --> 00:23:37.236 A:middle
PushKit method and just handle

00:23:37.236 --> 00:23:38.786 A:middle
receiving that complication push

00:23:39.076 --> 00:23:41.056 A:middle
and then reload our complication

00:23:41.056 --> 00:23:41.526 A:middle
timeline.

00:23:44.146 --> 00:23:44.736 A:middle
So great.

00:23:45.266 --> 00:23:46.746 A:middle
That's how we push information

00:23:46.746 --> 00:23:47.356 A:middle
to a device.

00:23:48.306 --> 00:23:49.646 A:middle
Now let's talk about how to

00:23:49.646 --> 00:23:52.126 A:middle
gather application data and deal

00:23:52.126 --> 00:23:52.876 A:middle
with connectivity.

00:23:54.876 --> 00:23:56.446 A:middle
So in general in terms of

00:23:56.446 --> 00:23:58.786 A:middle
networking, we want to use

00:23:58.786 --> 00:24:00.106 A:middle
URLSession which has been

00:23:58.786 --> 00:24:00.106 A:middle
URLSession which has been

00:24:00.106 --> 00:24:01.616 A:middle
available for quite some time on

00:24:01.616 --> 00:24:02.326 A:middle
watchOS.

00:24:02.986 --> 00:24:06.226 A:middle
And for those that use CloudKit,

00:24:06.356 --> 00:24:07.766 A:middle
we can also use CloudKit to

00:24:07.766 --> 00:24:09.216 A:middle
gather application data.

00:24:11.336 --> 00:24:13.236 A:middle
So if you're using watch

00:24:13.236 --> 00:24:14.766 A:middle
connectivity and depending on

00:24:14.766 --> 00:24:16.186 A:middle
your iPhone app for any

00:24:16.186 --> 00:24:17.746 A:middle
particular data, you're going to

00:24:17.746 --> 00:24:19.356 A:middle
want to migrate all of your

00:24:19.706 --> 00:24:21.626 A:middle
watch connectivity usage over to

00:24:21.716 --> 00:24:22.766 A:middle
NSURLSession.

00:24:22.946 --> 00:24:26.536 A:middle
And again, the watch, a lot of

00:24:26.536 --> 00:24:28.256 A:middle
times users will only use their

00:24:28.256 --> 00:24:29.766 A:middle
Watch App for a couple seconds

00:24:29.766 --> 00:24:30.946 A:middle
and then immediately put their

00:24:30.946 --> 00:24:33.176 A:middle
wrist down, so make sure to use

00:24:33.176 --> 00:24:34.866 A:middle
background sessions to ensure

00:24:34.866 --> 00:24:36.676 A:middle
that your URLSessions will

00:24:36.676 --> 00:24:38.506 A:middle
appropriately complete.

00:24:40.416 --> 00:24:42.486 A:middle
And so watch connectivity is

00:24:42.486 --> 00:24:44.976 A:middle
still available and you can

00:24:44.976 --> 00:24:46.596 A:middle
still use for any companion

00:24:46.596 --> 00:24:48.256 A:middle
app's specific interactions.

00:24:48.256 --> 00:24:50.476 A:middle
But really only use it if you

00:24:50.476 --> 00:24:51.356 A:middle
really need to.

00:24:51.706 --> 00:24:54.736 A:middle
And there's a Boolean property

00:24:54.736 --> 00:24:56.296 A:middle
is companion app installed to

00:24:56.296 --> 00:24:57.986 A:middle
let you know whether or not the

00:24:57.986 --> 00:25:02.506 A:middle
iPhone app is there.

00:24:57.986 --> 00:25:02.506 A:middle
iPhone app is there.

00:25:02.506 --> 00:25:05.066 A:middle
So in CloudKit, if you're

00:25:05.066 --> 00:25:06.696 A:middle
already using it you'll be happy

00:25:06.696 --> 00:25:08.376 A:middle
to hear we have full CK

00:25:08.376 --> 00:25:10.336 A:middle
subscription support now on

00:25:10.336 --> 00:25:13.356 A:middle
watchOS and, which goes hand in

00:25:13.356 --> 00:25:14.746 A:middle
hand with supporting CloudKit

00:25:14.746 --> 00:25:15.636 A:middle
notifications.

00:25:15.896 --> 00:25:16.916 A:middle
So if you don't want to manage

00:25:16.916 --> 00:25:18.886 A:middle
your own server or notification

00:25:18.886 --> 00:25:20.446 A:middle
provider, you can just use

00:25:20.446 --> 00:25:22.346 A:middle
CloudKit to send notifications.

00:25:22.716 --> 00:25:24.636 A:middle
And there's a great talk

00:25:24.636 --> 00:25:26.106 A:middle
available online if you want to

00:25:26.106 --> 00:25:27.556 A:middle
check out some more information

00:25:27.816 --> 00:25:29.226 A:middle
about CloudKit and its best

00:25:29.226 --> 00:25:29.806 A:middle
practices.

00:25:31.076 --> 00:25:33.056 A:middle
And so for CK subscriptions,

00:25:33.936 --> 00:25:35.576 A:middle
they're a great way to subscribe

00:25:35.576 --> 00:25:37.146 A:middle
to database changes that are

00:25:37.146 --> 00:25:38.976 A:middle
occurring on any other devices.

00:25:39.446 --> 00:25:41.716 A:middle
And then you'll get a background

00:25:41.746 --> 00:25:43.396 A:middle
push notification that'll tell

00:25:43.396 --> 00:25:44.476 A:middle
you when to update your

00:25:44.476 --> 00:25:46.166 A:middle
application and then you can

00:25:46.166 --> 00:25:47.946 A:middle
retrieve only what has changed

00:25:48.146 --> 00:25:49.686 A:middle
between your app and your

00:25:49.686 --> 00:25:50.646 A:middle
CloudKit container.

00:25:52.556 --> 00:25:54.696 A:middle
And from a high level look at

00:25:54.696 --> 00:25:57.026 A:middle
it, say your user is using an

00:25:57.216 --> 00:25:58.396 A:middle
iPhone app and they made a

00:25:58.396 --> 00:25:59.336 A:middle
database change.

00:25:59.716 --> 00:26:01.426 A:middle
That database change will get

00:25:59.716 --> 00:26:01.426 A:middle
That database change will get

00:26:01.426 --> 00:26:03.706 A:middle
sent to the CloudKit and then

00:26:03.706 --> 00:26:05.136 A:middle
CloudKit's going to realize, oh

00:26:05.136 --> 00:26:07.556 A:middle
hey, there's a subscription, and

00:26:07.556 --> 00:26:09.106 A:middle
then CloudKit will then tell

00:26:09.106 --> 00:26:11.436 A:middle
APNS to send a background

00:26:11.436 --> 00:26:13.306 A:middle
notification down to any other

00:26:13.306 --> 00:26:15.096 A:middle
device that has a subscription,

00:26:15.436 --> 00:26:18.466 A:middle
in this case, our Watch App.

00:26:19.356 --> 00:26:21.236 A:middle
And then if the Watch App, if

00:26:21.236 --> 00:26:23.126 A:middle
the user makes a change with the

00:26:23.126 --> 00:26:24.506 A:middle
Watch App, then the cycle will

00:26:24.506 --> 00:26:25.506 A:middle
just repeat itself.

00:26:26.246 --> 00:26:29.486 A:middle
And how we send notifications is

00:26:29.486 --> 00:26:31.286 A:middle
governed by the exact same rules

00:26:31.476 --> 00:26:33.096 A:middle
as on all of our other devices.

00:26:33.786 --> 00:26:36.286 A:middle
To set up your CloudKit

00:26:36.286 --> 00:26:37.706 A:middle
subscriptions, you can set up

00:26:37.706 --> 00:26:39.616 A:middle
your notification info and then

00:26:39.616 --> 00:26:41.066 A:middle
make sure and set your should

00:26:41.066 --> 00:26:42.866 A:middle
send content available to be

00:26:42.866 --> 00:26:43.316 A:middle
true.

00:26:43.956 --> 00:26:45.286 A:middle
And then CloudKit's going to

00:26:45.286 --> 00:26:47.286 A:middle
deliver your push on that same

00:26:47.286 --> 00:26:48.306 A:middle
delegate callback we were

00:26:48.306 --> 00:26:49.806 A:middle
talking about earlier, your did

00:26:49.806 --> 00:26:51.256 A:middle
receive remote notification.

00:26:51.496 --> 00:26:52.796 A:middle
So then you can just handle that

00:26:52.796 --> 00:26:54.156 A:middle
and retrieve only what has

00:26:54.156 --> 00:26:56.386 A:middle
changed between your app and the

00:26:56.386 --> 00:26:57.286 A:middle
CloudKit container.

00:26:59.816 --> 00:27:01.526 A:middle
So great. Those are the three

00:26:59.816 --> 00:27:01.526 A:middle
So great. Those are the three

00:27:01.526 --> 00:27:03.646 A:middle
major ways we think about how to

00:27:03.646 --> 00:27:05.336 A:middle
make watch apps independent.

00:27:05.536 --> 00:27:08.076 A:middle
How do we get user data and then

00:27:08.226 --> 00:27:10.266 A:middle
also how do we push information

00:27:10.546 --> 00:27:11.616 A:middle
down to the device?

00:27:11.616 --> 00:27:13.536 A:middle
And lastly, how do we actually

00:27:13.536 --> 00:27:14.656 A:middle
deal with getting our own

00:27:14.656 --> 00:27:19.376 A:middle
application data?

00:27:19.556 --> 00:27:22.026 A:middle
So users love the freedom and

00:27:22.026 --> 00:27:23.236 A:middle
independence that Apple Watch

00:27:23.236 --> 00:27:25.086 A:middle
gives them and now there are a

00:27:25.086 --> 00:27:27.106 A:middle
bunch of system and developer

00:27:27.106 --> 00:27:28.906 A:middle
capabilities at your disposal.

00:27:29.306 --> 00:27:30.886 A:middle
So make sure to make your watch

00:27:30.886 --> 00:27:32.456 A:middle
apps independent because,

00:27:32.996 --> 00:27:34.606 A:middle
honestly, customers probably

00:27:34.606 --> 00:27:35.876 A:middle
already expect their watch apps

00:27:36.196 --> 00:27:38.756 A:middle
to be independent, and now more

00:27:38.756 --> 00:27:39.336 A:middle
than ever.

00:27:39.856 --> 00:27:42.046 A:middle
So there's some great

00:27:42.046 --> 00:27:43.986 A:middle
information available online

00:27:44.386 --> 00:27:46.516 A:middle
with some sessions and labs.

00:27:46.956 --> 00:27:48.456 A:middle
And thank you all everyone for

00:27:48.456 --> 00:27:49.636 A:middle
coming and I hope you all have a

00:27:49.636 --> 00:27:51.636 A:middle
great WWDC.

00:27:51.636 --> 00:27:51.916 A:middle
Thank you.

00:27:52.516 --> 00:27:59.500 A:middle
[ Applause ]
