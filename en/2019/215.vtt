WEBVTT

00:00:00.506 --> 00:00:08.516 A:middle
[ Music ]

00:00:09.516 --> 00:00:13.946 A:middle
[ Applause ]

00:00:14.446 --> 00:00:14.886 A:middle
&gt;&gt; Welcome.

00:00:15.346 --> 00:00:16.346 A:middle
My name is Steve Breen.

00:00:16.346 --> 00:00:17.856 A:middle
I'm engineer on the UIKit team.

00:00:18.446 --> 00:00:19.436 A:middle
And I'm joined today by me

00:00:19.436 --> 00:00:20.966 A:middle
colleagues, Troy Stephens from

00:00:20.966 --> 00:00:22.596 A:middle
the AppKit team; and Dersu

00:00:22.596 --> 00:00:24.036 A:middle
Abolfathi [phonetic] from the

00:00:24.036 --> 00:00:24.716 A:middle
App Store team.

00:00:26.436 --> 00:00:27.436 A:middle
So today we're going to talk a

00:00:27.436 --> 00:00:29.006 A:middle
little bit about advances in

00:00:29.006 --> 00:00:30.646 A:middle
CollectionView layouts.

00:00:30.846 --> 00:00:31.486 A:middle
Now, we're going to break the

00:00:31.486 --> 00:00:32.926 A:middle
talk down into four broad

00:00:32.926 --> 00:00:33.536 A:middle
segments.

00:00:33.536 --> 00:00:34.376 A:middle
First we're going to go over the

00:00:34.376 --> 00:00:35.316 A:middle
current state-of-the-art -- how

00:00:35.316 --> 00:00:35.966 A:middle
do we do this today?

00:00:35.966 --> 00:00:38.076 A:middle
How do we define CollectionView

00:00:38.076 --> 00:00:39.456 A:middle
layout in our applications?

00:00:40.436 --> 00:00:41.326 A:middle
Then we're going to go over a

00:00:41.426 --> 00:00:43.216 A:middle
brand new approach that we're

00:00:43.216 --> 00:00:44.406 A:middle
bringing to all the platforms

00:00:44.406 --> 00:00:46.066 A:middle
this year -- iOS, tvOS, and the

00:00:46.066 --> 00:00:46.256 A:middle
Mac.

00:00:46.896 --> 00:00:48.326 A:middle
And then we're going to go on to

00:00:48.326 --> 00:00:49.956 A:middle
some hands-on demos so you can

00:00:49.956 --> 00:00:51.556 A:middle
see this API in action.

00:00:52.276 --> 00:00:53.526 A:middle
And then we'll do a tour of some

00:00:53.526 --> 00:00:55.136 A:middle
more advanced features of how

00:00:55.136 --> 00:00:56.586 A:middle
you can get the most out of this

00:00:56.586 --> 00:00:56.886 A:middle
API.

00:01:00.236 --> 00:01:01.276 A:middle
All right, we got a ton of

00:01:01.276 --> 00:01:01.746 A:middle
content.

00:01:01.746 --> 00:01:03.346 A:middle
So let's get started.

00:01:04.215 --> 00:01:04.476 A:middle
All right.

00:01:04.476 --> 00:01:06.306 A:middle
So first let's talk a bit about

00:01:06.306 --> 00:01:07.166 A:middle
the current state of UI.

00:01:07.166 --> 00:01:07.876 A:middle
What do we do today?

00:01:07.876 --> 00:01:09.596 A:middle
How do we define CollectionView

00:01:09.596 --> 00:01:10.056 A:middle
layout?

00:01:11.336 --> 00:01:13.176 A:middle
Now, when CollectionView was

00:01:13.176 --> 00:01:15.206 A:middle
introduced back in iOS 6, it has

00:01:15.206 --> 00:01:17.006 A:middle
a really novel concept; it had a

00:01:17.006 --> 00:01:18.426 A:middle
separate abstraction for

00:01:18.426 --> 00:01:19.256 A:middle
defining layout.

00:01:20.156 --> 00:01:21.766 A:middle
So it's really two classes

00:01:21.766 --> 00:01:22.906 A:middle
acting in concert with each

00:01:22.906 --> 00:01:23.686 A:middle
other, where one does a

00:01:23.686 --> 00:01:25.626 A:middle
rendering and one is responsible

00:01:25.626 --> 00:01:27.056 A:middle
for where things go or the

00:01:27.056 --> 00:01:27.966 A:middle
CollectionView layout.

00:01:28.856 --> 00:01:30.256 A:middle
Now, CollectionView layout is an

00:01:30.256 --> 00:01:31.166 A:middle
abstract thing.

00:01:31.166 --> 00:01:32.676 A:middle
So we have to subclass to get

00:01:32.676 --> 00:01:33.306 A:middle
use out of it.

00:01:33.356 --> 00:01:35.416 A:middle
And we shipped a concrete layout

00:01:35.416 --> 00:01:37.336 A:middle
class with iOS 6 called

00:01:37.336 --> 00:01:38.576 A:middle
CollectionView flow layout.

00:01:40.136 --> 00:01:41.696 A:middle
Now, flow layout was really

00:01:41.696 --> 00:01:43.476 A:middle
useful for a ton of different

00:01:43.476 --> 00:01:44.926 A:middle
designs, especially back in the

00:01:44.926 --> 00:01:46.126 A:middle
iOS 6 days where things were

00:01:46.126 --> 00:01:47.176 A:middle
maybe a little bit simpler.

00:01:48.066 --> 00:01:49.576 A:middle
And it did this because it uses

00:01:49.576 --> 00:01:51.306 A:middle
a line-based layout system.

00:01:51.306 --> 00:01:53.606 A:middle
Now, we covered this last year

00:01:54.146 --> 00:01:55.686 A:middle
in a tour of UI CollectionView.

00:01:56.146 --> 00:01:57.826 A:middle
But in summary, a line-based

00:01:57.826 --> 00:01:59.096 A:middle
system allows you to lay out on

00:01:59.096 --> 00:02:00.576 A:middle
the orthogonal axis, of the

00:01:59.096 --> 00:02:00.576 A:middle
the orthogonal axis, of the

00:02:00.576 --> 00:02:02.386 A:middle
layout axis, until you just fill

00:02:02.386 --> 00:02:03.496 A:middle
up the amount of space you have

00:02:03.496 --> 00:02:04.736 A:middle
available and we drop the next

00:02:04.736 --> 00:02:05.026 A:middle
line.

00:02:05.726 --> 00:02:07.726 A:middle
And this is really great, it

00:02:07.726 --> 00:02:09.116 A:middle
works simple, easy to reason

00:02:09.116 --> 00:02:09.446 A:middle
about.

00:02:09.485 --> 00:02:10.376 A:middle
You can get it up and running

00:02:10.376 --> 00:02:10.826 A:middle
pretty quick.

00:02:11.786 --> 00:02:15.736 A:middle
But what about today's apps?

00:02:16.636 --> 00:02:18.906 A:middle
So as devices got more

00:02:18.906 --> 00:02:20.656 A:middle
heterogeneous and screen sizes

00:02:20.656 --> 00:02:21.756 A:middle
got different, things get mother

00:02:21.756 --> 00:02:23.326 A:middle
complex in today's apps.

00:02:23.326 --> 00:02:25.186 A:middle
And here we see the App Store

00:02:25.326 --> 00:02:26.866 A:middle
that we're shipping in iOS 13.

00:02:27.736 --> 00:02:29.236 A:middle
Now, if your designer handed you

00:02:29.236 --> 00:02:30.766 A:middle
this design today, what would

00:02:30.766 --> 00:02:31.116 A:middle
you do?

00:02:31.116 --> 00:02:32.216 A:middle
Well, you'd think, "All right, I

00:02:32.216 --> 00:02:33.346 A:middle
got to choose how I'm going to

00:02:33.346 --> 00:02:33.986 A:middle
design this thing."

00:02:33.986 --> 00:02:35.156 A:middle
And there's a lot of options now

00:02:35.156 --> 00:02:35.716 A:middle
more than never.

00:02:36.806 --> 00:02:38.106 A:middle
And you might settle on

00:02:38.106 --> 00:02:38.656 A:middle
CollectionView.

00:02:38.656 --> 00:02:40.426 A:middle
And if you did that, you would

00:02:40.486 --> 00:02:42.196 A:middle
think to yourself, "Well, can I

00:02:42.196 --> 00:02:43.406 A:middle
really make flow happen here?"

00:02:44.256 --> 00:02:45.396 A:middle
And you'd probably discard that

00:02:45.396 --> 00:02:45.666 A:middle
right away.

00:02:47.196 --> 00:02:47.976 A:middle
So at that point now you're

00:02:47.976 --> 00:02:49.486 A:middle
facing a custom layout.

00:02:49.486 --> 00:02:51.256 A:middle
And, you know, I see what you

00:02:51.256 --> 00:02:52.526 A:middle
guys say on Twitter about custom

00:02:52.526 --> 00:02:52.876 A:middle
layouts.

00:02:52.876 --> 00:02:53.996 A:middle
And they can be complicated.

00:02:53.996 --> 00:02:55.676 A:middle
So last year we talked about

00:02:55.766 --> 00:02:57.616 A:middle
this in a tour of

00:02:57.616 --> 00:02:58.136 A:middle
CollectionView.

00:02:58.716 --> 00:03:00.256 A:middle
And we talked about what's

00:02:58.716 --> 00:03:00.256 A:middle
And we talked about what's

00:03:00.256 --> 00:03:01.656 A:middle
involved with building a custom

00:03:01.656 --> 00:03:02.076 A:middle
layout.

00:03:03.476 --> 00:03:05.016 A:middle
Now, there's a certain amount of

00:03:05.266 --> 00:03:06.536 A:middle
stuff you have to provide in

00:03:06.536 --> 00:03:08.976 A:middle
your concrete layout class, and

00:03:09.336 --> 00:03:10.486 A:middle
we walked through those things.

00:03:10.756 --> 00:03:12.236 A:middle
And we also walked through the

00:03:12.286 --> 00:03:13.566 A:middle
performance considerations you

00:03:13.566 --> 00:03:14.776 A:middle
had to think about when you're

00:03:14.776 --> 00:03:15.976 A:middle
designing a custom layout to

00:03:15.976 --> 00:03:17.386 A:middle
make sure it's fast if you have

00:03:17.386 --> 00:03:18.466 A:middle
a large number of items in your

00:03:18.466 --> 00:03:19.046 A:middle
CollectionView.

00:03:19.576 --> 00:03:20.716 A:middle
But we didn't cover everything,

00:03:20.716 --> 00:03:22.286 A:middle
and there's additional

00:03:22.286 --> 00:03:23.356 A:middle
challenges if you're building

00:03:23.356 --> 00:03:24.296 A:middle
these custom layouts.

00:03:25.436 --> 00:03:26.766 A:middle
And there's a number of those,

00:03:26.766 --> 00:03:27.876 A:middle
but I'll cover a couple here,

00:03:27.916 --> 00:03:29.286 A:middle
you know, supplementaries and

00:03:29.286 --> 00:03:31.246 A:middle
decoration views -- two of the

00:03:31.246 --> 00:03:33.416 A:middle
view types that you can manage

00:03:33.416 --> 00:03:34.816 A:middle
in CollectionView -- are a

00:03:34.816 --> 00:03:36.236 A:middle
little tricky in custom layout.

00:03:36.236 --> 00:03:36.986 A:middle
You're on your own.

00:03:37.566 --> 00:03:39.296 A:middle
And there's also self-sizing

00:03:39.296 --> 00:03:40.326 A:middle
challenges you have to wrestle

00:03:40.326 --> 00:03:40.556 A:middle
with.

00:03:41.016 --> 00:03:42.156 A:middle
And we'll get into that more

00:03:42.156 --> 00:03:42.336 A:middle
later.

00:03:42.606 --> 00:03:44.186 A:middle
So this year we're bringing a

00:03:44.186 --> 00:03:46.796 A:middle
brand-new concrete layout class

00:03:46.796 --> 00:03:48.666 A:middle
to the platforms that sits right

00:03:48.666 --> 00:03:50.676 A:middle
alongside flow as a peer.

00:03:51.286 --> 00:03:53.406 A:middle
And we call this compositional

00:03:53.406 --> 00:03:53.886 A:middle
layout.

00:03:54.986 --> 00:03:55.706 A:middle
Okay. So --

00:03:56.091 --> 00:03:58.091 A:middle
[ Applause ]

00:03:58.166 --> 00:03:59.936 A:middle
Haven't even seen it yet.

00:04:00.566 --> 00:04:02.556 A:middle
So -- so what is compositional

00:04:02.556 --> 00:04:02.686 A:middle
layout?

00:04:02.686 --> 00:04:03.496 A:middle
What does this thing do?

00:04:04.606 --> 00:04:06.356 A:middle
Well, just a little philosophy

00:04:06.356 --> 00:04:06.856 A:middle
right up front.

00:04:06.916 --> 00:04:08.076 A:middle
Hey, what is this built on?

00:04:08.076 --> 00:04:09.656 A:middle
It has three basic tent poles

00:04:09.656 --> 00:04:10.606 A:middle
that we built compositional

00:04:10.606 --> 00:04:10.976 A:middle
layout on.

00:04:10.976 --> 00:04:12.466 A:middle
First, it's composable -- the

00:04:12.466 --> 00:04:13.816 A:middle
idea of making complex things

00:04:13.816 --> 00:04:14.696 A:middle
from simple things.

00:04:15.636 --> 00:04:16.555 A:middle
And it's designed to be

00:04:16.606 --> 00:04:17.086 A:middle
flexible.

00:04:17.555 --> 00:04:19.866 A:middle
You can write any layout with

00:04:19.866 --> 00:04:20.606 A:middle
compositional layout.

00:04:20.606 --> 00:04:21.776 A:middle
It's extremely flexible.

00:04:21.776 --> 00:04:23.496 A:middle
And it's also fast by default.

00:04:23.496 --> 00:04:25.296 A:middle
So we've taken all of the

00:04:25.296 --> 00:04:26.626 A:middle
performance optimizations on

00:04:26.626 --> 00:04:27.966 A:middle
ourselves in the framework so

00:04:27.966 --> 00:04:28.756 A:middle
you don't have to think about

00:04:28.756 --> 00:04:28.836 A:middle
it.

00:04:28.836 --> 00:04:30.276 A:middle
Compositional layout's all about

00:04:30.276 --> 00:04:31.996 A:middle
describing or defining what you

00:04:31.996 --> 00:04:32.376 A:middle
want to do.

00:04:32.376 --> 00:04:33.766 A:middle
It's a declarative kind of API.

00:04:36.346 --> 00:04:37.376 A:middle
All right, so composing --

00:04:37.376 --> 00:04:38.076 A:middle
you're going to hear this word a

00:04:38.076 --> 00:04:39.016 A:middle
lot in this conference.

00:04:39.016 --> 00:04:40.776 A:middle
So how do we do that with this

00:04:40.776 --> 00:04:41.776 A:middle
compositional layout idea?

00:04:41.776 --> 00:04:43.186 A:middle
Well, it's all about taking

00:04:43.186 --> 00:04:44.636 A:middle
small bits of layout, these

00:04:44.636 --> 00:04:46.336 A:middle
little components, and stitching

00:04:46.336 --> 00:04:46.896 A:middle
them all together.

00:04:47.196 --> 00:04:48.556 A:middle
So you're composing larger

00:04:48.556 --> 00:04:49.796 A:middle
layouts from smaller bits of

00:04:49.796 --> 00:04:50.126 A:middle
layout.

00:04:50.516 --> 00:04:51.766 A:middle
And we've learned from the great

00:04:51.766 --> 00:04:52.916 A:middle
lessons of flow layout where we

00:04:52.916 --> 00:04:54.416 A:middle
bring some of those line-based

00:04:54.416 --> 00:04:55.526 A:middle
lessons where you can lay out

00:04:55.526 --> 00:04:56.836 A:middle
along a line.

00:04:56.916 --> 00:04:57.956 A:middle
We may now how many items there

00:04:57.956 --> 00:04:58.506 A:middle
are, we may not.

00:04:58.506 --> 00:04:59.766 A:middle
But we can lay out items on a

00:04:59.766 --> 00:05:00.706 A:middle
line in these little layout

00:04:59.766 --> 00:05:00.706 A:middle
line in these little layout

00:05:00.706 --> 00:05:01.126 A:middle
groups.

00:05:02.626 --> 00:05:03.506 A:middle
And finally, as the name

00:05:03.506 --> 00:05:05.656 A:middle
implies, you don't subclass.

00:05:05.656 --> 00:05:06.496 A:middle
You literally just create a

00:05:06.496 --> 00:05:08.096 A:middle
thing and compose some elements

00:05:08.096 --> 00:05:09.476 A:middle
and then -- and then you're good

00:05:09.476 --> 00:05:09.706 A:middle
to go.

00:05:09.706 --> 00:05:10.346 A:middle
All right.

00:05:10.416 --> 00:05:13.306 A:middle
So that's a lot of talk for no

00:05:13.406 --> 00:05:13.676 A:middle
code.

00:05:13.676 --> 00:05:14.686 A:middle
And we're all about code at a

00:05:14.686 --> 00:05:15.696 A:middle
conference like this, right?

00:05:15.696 --> 00:05:17.586 A:middle
So let's go look at some code.

00:05:18.056 --> 00:05:19.306 A:middle
All right.

00:05:20.176 --> 00:05:22.026 A:middle
So this is a hello, world

00:05:22.376 --> 00:05:23.156 A:middle
compositional layout.

00:05:23.206 --> 00:05:24.676 A:middle
There's five lines of code.

00:05:24.676 --> 00:05:27.036 A:middle
Now, I'm going to switch over to

00:05:27.036 --> 00:05:28.666 A:middle
my device over here.

00:05:30.026 --> 00:05:30.376 A:middle
All right.

00:05:30.426 --> 00:05:33.446 A:middle
So here we see our example app.

00:05:33.446 --> 00:05:34.896 A:middle
And I'm going to go to the list

00:05:35.026 --> 00:05:35.536 A:middle
example.

00:05:35.886 --> 00:05:36.876 A:middle
Wow, that's a boring layout.

00:05:36.876 --> 00:05:37.756 A:middle
Okay, so this looks like a

00:05:37.786 --> 00:05:38.496 A:middle
table, right?

00:05:39.296 --> 00:05:39.706 A:middle
Here we go.

00:05:40.676 --> 00:05:41.436 A:middle
Not much to that.

00:05:41.806 --> 00:05:43.146 A:middle
All right.

00:05:43.146 --> 00:05:46.336 A:middle
So let's focus strictly on the

00:05:46.336 --> 00:05:47.236 A:middle
code for a second.

00:05:47.236 --> 00:05:47.976 A:middle
Let's look at this.

00:05:48.886 --> 00:05:49.246 A:middle
All right.

00:05:49.246 --> 00:05:50.846 A:middle
So there's a couple observations

00:05:50.986 --> 00:05:52.206 A:middle
that will jump out right away.

00:05:52.206 --> 00:05:53.426 A:middle
And the first observation

00:05:53.426 --> 00:05:54.986 A:middle
because I know developers is,

00:05:54.986 --> 00:05:55.896 A:middle
like, "Hey, Steve, I can write

00:05:55.936 --> 00:05:57.576 A:middle
this in two lines of code with

00:05:57.626 --> 00:05:57.956 A:middle
flow.

00:05:57.996 --> 00:05:59.146 A:middle
What is all this nonsense?"

00:05:59.856 --> 00:06:01.476 A:middle
And it's absolutely true, you

00:05:59.856 --> 00:06:01.476 A:middle
And it's absolutely true, you

00:06:01.476 --> 00:06:02.946 A:middle
probably could do something like

00:06:02.946 --> 00:06:03.156 A:middle
that.

00:06:03.156 --> 00:06:05.186 A:middle
But what I want you to anchor in

00:06:05.186 --> 00:06:05.996 A:middle
your mind and think about

00:06:05.996 --> 00:06:07.416 A:middle
throughout the presentation is

00:06:07.416 --> 00:06:08.996 A:middle
that the amount of code as these

00:06:08.996 --> 00:06:10.096 A:middle
layouts get more and more

00:06:10.096 --> 00:06:12.766 A:middle
complex does not grow linear to

00:06:12.766 --> 00:06:14.126 A:middle
the problem size, it just kind

00:06:14.126 --> 00:06:14.686 A:middle
of tapers off.

00:06:14.686 --> 00:06:15.286 A:middle
Because we're just going to

00:06:15.286 --> 00:06:16.806 A:middle
compose in new things to the

00:06:16.806 --> 00:06:18.436 A:middle
layout in very simple,

00:06:18.676 --> 00:06:20.526 A:middle
easy-to-reason about ways to get

00:06:20.526 --> 00:06:21.966 A:middle
very complex layouts.

00:06:22.626 --> 00:06:23.536 A:middle
I'm super excited to show you

00:06:23.536 --> 00:06:23.876 A:middle
this stuff.

00:06:24.636 --> 00:06:26.316 A:middle
The second observation is I want

00:06:26.466 --> 00:06:27.406 A:middle
you to look at the -- there's a

00:06:27.406 --> 00:06:28.606 A:middle
natural progression here of

00:06:28.606 --> 00:06:29.746 A:middle
these types, right?

00:06:29.746 --> 00:06:30.686 A:middle
We got, like, you know, five

00:06:30.686 --> 00:06:31.076 A:middle
types here.

00:06:31.076 --> 00:06:32.226 A:middle
It's kind of -- what's up here?

00:06:33.246 --> 00:06:34.926 A:middle
And the types I want to focus on

00:06:35.136 --> 00:06:36.666 A:middle
first are these four types, and

00:06:36.666 --> 00:06:38.216 A:middle
they have this natural

00:06:38.216 --> 00:06:39.776 A:middle
abstraction where they climb

00:06:39.776 --> 00:06:40.306 A:middle
this ladder.

00:06:40.536 --> 00:06:42.596 A:middle
And we start with an item which

00:06:42.596 --> 00:06:43.716 A:middle
gets folded into a group.

00:06:43.716 --> 00:06:45.366 A:middle
And the group goes into a

00:06:45.366 --> 00:06:45.916 A:middle
section.

00:06:46.366 --> 00:06:48.156 A:middle
And the section goes in our

00:06:48.156 --> 00:06:48.606 A:middle
layout.

00:06:49.856 --> 00:06:51.326 A:middle
Now, let's look at this

00:06:51.326 --> 00:06:51.756 A:middle
visually.

00:06:53.386 --> 00:06:53.596 A:middle
All right.

00:06:53.596 --> 00:06:57.556 A:middle
So here, this big rectangle is

00:06:57.556 --> 00:06:58.016 A:middle
the layout.

00:06:58.016 --> 00:07:01.256 A:middle
And the layout is your entire

00:06:58.016 --> 00:07:01.256 A:middle
And the layout is your entire

00:07:01.256 --> 00:07:01.716 A:middle
layout.

00:07:02.426 --> 00:07:03.676 A:middle
And now we have these blinding

00:07:03.676 --> 00:07:05.206 A:middle
white guys that represent our

00:07:05.426 --> 00:07:06.456 A:middle
sections, right?

00:07:06.806 --> 00:07:08.256 A:middle
And this maps directly onto the

00:07:08.256 --> 00:07:09.966 A:middle
data sources, you know, content

00:07:09.966 --> 00:07:10.726 A:middle
for those sections.

00:07:11.606 --> 00:07:12.316 A:middle
And then we're going to

00:07:12.316 --> 00:07:14.126 A:middle
represent a kind of a grid-style

00:07:14.126 --> 00:07:15.026 A:middle
traditional layout in this

00:07:15.026 --> 00:07:15.766 A:middle
particular example.

00:07:15.766 --> 00:07:17.666 A:middle
We see these groups which

00:07:17.666 --> 00:07:19.026 A:middle
represent our rows.

00:07:19.886 --> 00:07:20.406 A:middle
All right.

00:07:20.486 --> 00:07:22.016 A:middle
So inside that we have items.

00:07:22.906 --> 00:07:24.086 A:middle
So this is basically just

00:07:24.086 --> 00:07:25.136 A:middle
showing off this hierarchy we're

00:07:25.136 --> 00:07:26.296 A:middle
going to see all throughout the

00:07:26.326 --> 00:07:27.706 A:middle
talk, this repeating pattern of

00:07:27.806 --> 00:07:31.106 A:middle
item, group, section, layout.

00:07:33.076 --> 00:07:34.256 A:middle
Okay. So now I want to do a

00:07:34.256 --> 00:07:35.296 A:middle
little bit of talking about some

00:07:35.296 --> 00:07:36.486 A:middle
of the concepts, these core

00:07:36.486 --> 00:07:38.526 A:middle
types in compositional layout.

00:07:38.636 --> 00:07:40.046 A:middle
And once we get through all

00:07:40.046 --> 00:07:41.006 A:middle
this, we can jump over to the

00:07:41.006 --> 00:07:42.486 A:middle
demos to see how it all fits.

00:07:42.526 --> 00:07:45.266 A:middle
So I want to start with talking

00:07:45.266 --> 00:07:46.316 A:middle
about sizing.

00:07:47.236 --> 00:07:48.306 A:middle
So compositional layout has

00:07:48.306 --> 00:07:49.906 A:middle
extended sizing to make it

00:07:49.906 --> 00:07:51.226 A:middle
really easy to reason about how

00:07:51.226 --> 00:07:52.876 A:middle
you size things inside of a

00:07:52.876 --> 00:07:53.866 A:middle
compositional layout.

00:07:54.566 --> 00:07:56.226 A:middle
And everything has an explicit

00:07:56.226 --> 00:07:57.766 A:middle
size, has a strong opinion about

00:07:57.766 --> 00:07:58.696 A:middle
how big it is.

00:08:00.076 --> 00:08:01.836 A:middle
Now, we're in this Euclidian 2D

00:08:01.836 --> 00:08:03.266 A:middle
geometry plane, all right, with

00:08:03.336 --> 00:08:03.856 A:middle
flexion view.

00:08:03.856 --> 00:08:05.916 A:middle
And as such, a size really is

00:08:05.916 --> 00:08:06.756 A:middle
just two properties.

00:08:06.756 --> 00:08:08.076 A:middle
It's a width and a height

00:08:08.176 --> 00:08:08.646 A:middle
dimension.

00:08:09.466 --> 00:08:11.756 A:middle
And here we can see we've got a

00:08:11.756 --> 00:08:12.866 A:middle
stripped-down version of that

00:08:12.896 --> 00:08:13.696 A:middle
type definition.

00:08:13.696 --> 00:08:15.226 A:middle
And it has a width and a height

00:08:15.226 --> 00:08:15.646 A:middle
dimension.

00:08:15.646 --> 00:08:16.686 A:middle
But notice that the width and

00:08:16.686 --> 00:08:17.396 A:middle
the height dimensions, they're

00:08:17.396 --> 00:08:18.366 A:middle
not -- they're not scalar

00:08:18.366 --> 00:08:18.676 A:middle
values.

00:08:18.676 --> 00:08:19.506 A:middle
It's not just a float or

00:08:19.506 --> 00:08:20.846 A:middle
something, it's actually another

00:08:20.896 --> 00:08:22.116 A:middle
type, this

00:08:22.166 --> 00:08:24.046 A:middle
NSCollectionLayoutDimension.

00:08:25.136 --> 00:08:25.506 A:middle
All right.

00:08:25.506 --> 00:08:26.156 A:middle
So what's that?

00:08:26.956 --> 00:08:27.756 A:middle
It's really simple.

00:08:27.896 --> 00:08:29.896 A:middle
This is an axis-independent way

00:08:29.896 --> 00:08:31.346 A:middle
to describe how big a particular

00:08:31.346 --> 00:08:31.966 A:middle
axis is.

00:08:31.966 --> 00:08:32.876 A:middle
And we have four different

00:08:32.876 --> 00:08:34.796 A:middle
variations of how to define this

00:08:34.856 --> 00:08:35.015 A:middle
thing.

00:08:35.775 --> 00:08:36.885 A:middle
And let's walk through these in

00:08:36.885 --> 00:08:38.586 A:middle
a kind of a visual way.

00:08:39.716 --> 00:08:41.395 A:middle
So let's say you have an item

00:08:41.395 --> 00:08:42.296 A:middle
and you want to describe its

00:08:42.296 --> 00:08:44.166 A:middle
size relative to its container.

00:08:44.926 --> 00:08:45.906 A:middle
So the outer-most container will

00:08:45.906 --> 00:08:46.676 A:middle
be your CollectionView.

00:08:47.256 --> 00:08:48.376 A:middle
Here we would just say, hey,

00:08:48.376 --> 00:08:49.976 A:middle
this item's widthDimension is

00:08:49.976 --> 00:08:51.176 A:middle
going to be a fractional width

00:08:51.176 --> 00:08:52.696 A:middle
or 50% of the width of its

00:08:52.856 --> 00:08:53.246 A:middle
container.

00:08:54.656 --> 00:08:56.846 A:middle
And similarly, we can say the

00:08:56.846 --> 00:08:58.056 A:middle
height of something is a

00:08:58.056 --> 00:08:59.566 A:middle
fractional height of its

00:08:59.566 --> 00:09:01.566 A:middle
container, in this case 30%.

00:08:59.566 --> 00:09:01.566 A:middle
container, in this case 30%.

00:09:03.496 --> 00:09:05.266 A:middle
Now, because you can specify

00:09:05.266 --> 00:09:07.656 A:middle
things in this axis-independent

00:09:07.656 --> 00:09:09.616 A:middle
way, we can define something as

00:09:09.616 --> 00:09:11.486 A:middle
having a specific aspect ratio,

00:09:11.486 --> 00:09:12.816 A:middle
in this case an aspect ratio of

00:09:12.816 --> 00:09:15.516 A:middle
1, by defining both the width

00:09:15.666 --> 00:09:18.166 A:middle
and the height as a dimension, a

00:09:18.166 --> 00:09:19.506 A:middle
fraction of the width of its

00:09:19.506 --> 00:09:19.876 A:middle
container.

00:09:20.526 --> 00:09:22.186 A:middle
And we say it's 25% as its

00:09:22.186 --> 00:09:23.496 A:middle
container, and the height

00:09:23.676 --> 00:09:24.326 A:middle
mirrors this.

00:09:25.906 --> 00:09:26.656 A:middle
Okay. So those are the

00:09:26.876 --> 00:09:28.186 A:middle
fractional variants creating a

00:09:28.186 --> 00:09:28.716 A:middle
dimension.

00:09:29.626 --> 00:09:31.006 A:middle
What about point-based values?

00:09:31.736 --> 00:09:32.636 A:middle
Well, we have two.

00:09:33.256 --> 00:09:34.256 A:middle
First one is the simplest,

00:09:34.346 --> 00:09:34.876 A:middle
absolute.

00:09:35.536 --> 00:09:36.296 A:middle
You know you need this thing to

00:09:36.296 --> 00:09:37.246 A:middle
be 200 points because your

00:09:37.246 --> 00:09:39.576 A:middle
designer's emphatic it's got to

00:09:39.576 --> 00:09:40.256 A:middle
be 200 points.

00:09:40.256 --> 00:09:42.076 A:middle
That's what it is, right?

00:09:42.076 --> 00:09:42.796 A:middle
Here we go, we've got an

00:09:42.986 --> 00:09:44.336 A:middle
interesting concept, estimated.

00:09:45.376 --> 00:09:47.246 A:middle
So if you don't know exactly how

00:09:47.246 --> 00:09:48.166 A:middle
big an item is going to be --

00:09:48.166 --> 00:09:49.606 A:middle
and we're going to talk about

00:09:49.736 --> 00:09:50.916 A:middle
this a lot -- you can estimate

00:09:50.916 --> 00:09:51.056 A:middle
it.

00:09:51.056 --> 00:09:52.206 A:middle
Say it's 200 points.

00:09:52.566 --> 00:09:55.226 A:middle
And then over time, it grows as

00:09:55.226 --> 00:09:56.456 A:middle
the item renders and we know a

00:09:56.456 --> 00:09:57.566 A:middle
little bit more about the

00:09:57.566 --> 00:09:59.436 A:middle
content in that item.

00:10:00.506 --> 00:10:00.826 A:middle
All right.

00:10:00.826 --> 00:10:02.986 A:middle
So that's layout dimension and

00:10:03.176 --> 00:10:03.996 A:middle
size.

00:10:05.146 --> 00:10:06.196 A:middle
Next up let's talk a little bit

00:10:06.196 --> 00:10:06.666 A:middle
about item.

00:10:06.666 --> 00:10:07.656 A:middle
This is very simple.

00:10:07.656 --> 00:10:08.746 A:middle
This is a cell or it's a

00:10:08.746 --> 00:10:09.406 A:middle
supplementary.

00:10:09.406 --> 00:10:10.676 A:middle
It's a thing that renders on

00:10:10.676 --> 00:10:11.116 A:middle
screen.

00:10:12.296 --> 00:10:13.506 A:middle
And there's more stuff here

00:10:13.506 --> 00:10:14.886 A:middle
you'll see in the STK, but it's

00:10:14.886 --> 00:10:16.866 A:middle
a taste of that type definition.

00:10:17.586 --> 00:10:18.516 A:middle
We see that when we construct

00:10:18.516 --> 00:10:20.256 A:middle
one of these things, we give it

00:10:20.256 --> 00:10:20.756 A:middle
a size.

00:10:20.996 --> 00:10:22.066 A:middle
Everything's got an opinion

00:10:22.066 --> 00:10:22.566 A:middle
about size.

00:10:23.236 --> 00:10:25.066 A:middle
All right.

00:10:25.066 --> 00:10:25.866 A:middle
So we're going to continue up

00:10:25.916 --> 00:10:27.146 A:middle
that abstraction hierarchy.

00:10:27.146 --> 00:10:28.176 A:middle
We got item, and now we're in

00:10:28.176 --> 00:10:28.536 A:middle
group.

00:10:28.856 --> 00:10:29.536 A:middle
And what's a group?

00:10:29.536 --> 00:10:30.726 A:middle
A group is -- it's the

00:10:30.726 --> 00:10:31.366 A:middle
workhorse.

00:10:31.366 --> 00:10:33.206 A:middle
This is your basic unit of

00:10:33.206 --> 00:10:34.156 A:middle
layout that you're going to

00:10:34.156 --> 00:10:34.756 A:middle
compose together.

00:10:34.756 --> 00:10:37.286 A:middle
We have three forms: We have

00:10:37.426 --> 00:10:38.506 A:middle
horizontal, vertical.

00:10:39.136 --> 00:10:39.976 A:middle
You can think of these as, like,

00:10:39.976 --> 00:10:41.226 A:middle
little mini flow layouts, right?

00:10:41.226 --> 00:10:42.696 A:middle
They lay out on a line on the

00:10:42.696 --> 00:10:44.116 A:middle
horizontal axis and vertical

00:10:44.116 --> 00:10:44.496 A:middle
axis.

00:10:45.426 --> 00:10:46.806 A:middle
But then remember we talked

00:10:46.806 --> 00:10:48.556 A:middle
about before that it's flexible.

00:10:48.696 --> 00:10:50.426 A:middle
Well, if you have something that

00:10:50.426 --> 00:10:51.446 A:middle
doesn't lay along a the line and

00:10:51.446 --> 00:10:52.246 A:middle
there's a lot of layouts that

00:10:52.246 --> 00:10:52.826 A:middle
don't do that.

00:10:53.176 --> 00:10:54.316 A:middle
We have a custom group.

00:10:55.096 --> 00:10:56.166 A:middle
So what is this?

00:10:57.286 --> 00:10:58.726 A:middle
That allows you to specify the

00:10:58.726 --> 00:11:00.876 A:middle
absolute size and position of

00:10:58.726 --> 00:11:00.876 A:middle
absolute size and position of

00:11:00.876 --> 00:11:02.446 A:middle
items in a custom way.

00:11:02.446 --> 00:11:03.436 A:middle
So if you have something where

00:11:03.436 --> 00:11:04.896 A:middle
you have a pre-defined generator

00:11:04.896 --> 00:11:05.906 A:middle
that generates layouts, you can

00:11:05.906 --> 00:11:06.726 A:middle
use a custom group.

00:11:07.286 --> 00:11:08.166 A:middle
Or if you're doing a radial

00:11:08.166 --> 00:11:09.096 A:middle
layout and you want to compute

00:11:09.096 --> 00:11:10.286 A:middle
that, you can do it with a

00:11:10.286 --> 00:11:10.926 A:middle
custom group.

00:11:11.526 --> 00:11:12.896 A:middle
And what's cool is you can

00:11:12.896 --> 00:11:14.066 A:middle
compose custom groups right

00:11:14.066 --> 00:11:15.276 A:middle
alongside vertical and

00:11:15.276 --> 00:11:15.786 A:middle
horizontal.

00:11:15.786 --> 00:11:17.596 A:middle
So we build up the complex from

00:11:17.596 --> 00:11:18.016 A:middle
the simple.

00:11:19.696 --> 00:11:20.086 A:middle
All right.

00:11:20.086 --> 00:11:22.156 A:middle
So that's group, the workhorse.

00:11:23.486 --> 00:11:24.446 A:middle
Next up we have

00:11:24.666 --> 00:11:26.276 A:middle
NSCollectionLayoutSection.

00:11:27.166 --> 00:11:28.666 A:middle
This is just as the name

00:11:28.666 --> 00:11:29.806 A:middle
implies, this is the layout

00:11:29.886 --> 00:11:31.586 A:middle
definition on a per-section

00:11:31.586 --> 00:11:32.936 A:middle
basis of the CollectionView,

00:11:33.066 --> 00:11:34.196 A:middle
maps directly onto the data

00:11:34.196 --> 00:11:35.866 A:middle
source notion of how many items

00:11:36.596 --> 00:11:37.406 A:middle
are in that section.

00:11:37.406 --> 00:11:38.886 A:middle
And we can see, as promised,

00:11:39.466 --> 00:11:40.556 A:middle
that when the initializer here

00:11:40.556 --> 00:11:42.146 A:middle
takes in allow group.

00:11:42.676 --> 00:11:44.156 A:middle
So we've gone from item, group,

00:11:44.686 --> 00:11:45.106 A:middle
section.

00:11:45.916 --> 00:11:47.076 A:middle
All right.

00:11:47.076 --> 00:11:49.076 A:middle
Our final stop on this traversal

00:11:49.076 --> 00:11:51.686 A:middle
of stuff, these are the two

00:11:51.686 --> 00:11:53.486 A:middle
top-level layout classes, right?

00:11:53.566 --> 00:11:56.786 A:middle
So for iOS and tvOS, we had UI

00:11:56.786 --> 00:11:57.436 A:middle
CollectionView

00:11:57.436 --> 00:11:58.296 A:middle
CompositionalLayout.

00:11:59.016 --> 00:12:00.856 A:middle
And on the Mac we have

00:11:59.016 --> 00:12:00.856 A:middle
And on the Mac we have

00:12:01.356 --> 00:12:02.646 A:middle
NSViewCompositionalLayout.

00:12:03.806 --> 00:12:05.026 A:middle
Now, what's interesting here is

00:12:05.116 --> 00:12:06.556 A:middle
the definitions for all these

00:12:06.556 --> 00:12:08.366 A:middle
things are the same, regardless

00:12:08.396 --> 00:12:08.896 A:middle
of platform.

00:12:09.586 --> 00:12:10.236 A:middle
There's just some minor

00:12:10.236 --> 00:12:11.316 A:middle
differences in the top-level

00:12:11.846 --> 00:12:12.896 A:middle
classes.

00:12:13.516 --> 00:12:13.766 A:middle
All right.

00:12:13.766 --> 00:12:15.046 A:middle
And the final thing to note

00:12:15.046 --> 00:12:15.866 A:middle
here, and this is actually

00:12:15.866 --> 00:12:16.546 A:middle
really interesting, which we'll

00:12:16.546 --> 00:12:17.296 A:middle
see a little bit more in the

00:12:17.296 --> 00:12:19.986 A:middle
demos, is the way you construct

00:12:19.986 --> 00:12:20.956 A:middle
a compositional layout.

00:12:21.126 --> 00:12:22.056 A:middle
There's two ways.

00:12:22.556 --> 00:12:24.486 A:middle
And the simplest way is just

00:12:24.486 --> 00:12:25.696 A:middle
specify a layout section's

00:12:25.696 --> 00:12:26.206 A:middle
definition.

00:12:26.416 --> 00:12:27.776 A:middle
So this is very similar to what

00:12:27.776 --> 00:12:29.296 A:middle
we do with flow today, right?

00:12:29.296 --> 00:12:30.696 A:middle
Because flow weighs out every

00:12:30.696 --> 00:12:31.526 A:middle
section like every other

00:12:31.526 --> 00:12:31.926 A:middle
section.

00:12:31.926 --> 00:12:33.206 A:middle
It's homogeneous in that way.

00:12:34.396 --> 00:12:36.206 A:middle
The compositional layout extends

00:12:36.256 --> 00:12:36.946 A:middle
this idea.

00:12:37.526 --> 00:12:38.646 A:middle
Because now we have this great

00:12:38.646 --> 00:12:39.856 A:middle
definition for what a section

00:12:39.856 --> 00:12:42.976 A:middle
is, you can specify a closure

00:12:43.236 --> 00:12:44.856 A:middle
that will be called back and

00:12:44.856 --> 00:12:46.586 A:middle
will ask for those definitions

00:12:46.586 --> 00:12:47.436 A:middle
for the sections on a

00:12:47.516 --> 00:12:48.876 A:middle
per-section basis.

00:12:49.236 --> 00:12:51.126 A:middle
Now, this opens up a lot of

00:12:51.126 --> 00:12:52.306 A:middle
possibilities because now your

00:12:52.736 --> 00:12:53.846 A:middle
layouts can be completely

00:12:53.846 --> 00:12:55.876 A:middle
distinct between sections.

00:12:55.976 --> 00:12:57.886 A:middle
And we have a lot to show you in

00:12:57.886 --> 00:12:59.276 A:middle
the demos of this later on.

00:12:59.276 --> 00:13:02.016 A:middle
And hey, later on is right now.

00:12:59.276 --> 00:13:02.016 A:middle
And hey, later on is right now.

00:13:02.176 --> 00:13:03.926 A:middle
So enough nattling on about

00:13:04.006 --> 00:13:04.896 A:middle
types, we're going to go see

00:13:04.896 --> 00:13:05.626 A:middle
this in action.

00:13:05.626 --> 00:13:06.536 A:middle
And to do that, I'm going to

00:13:06.536 --> 00:13:08.346 A:middle
bring up my colleague, Troy

00:13:08.346 --> 00:13:08.896 A:middle
Stephens.

00:13:08.896 --> 00:13:09.116 A:middle
Troy?

00:13:10.321 --> 00:13:12.321 A:middle
[ Applause ]

00:13:12.626 --> 00:13:13.146 A:middle
&gt;&gt; Troy Stephens: Thank you,

00:13:13.146 --> 00:13:13.266 A:middle
Steve.

00:13:14.776 --> 00:13:16.046 A:middle
As promised, we're going to look

00:13:16.046 --> 00:13:16.676 A:middle
at some code.

00:13:16.676 --> 00:13:17.816 A:middle
We're going to dig right into

00:13:17.816 --> 00:13:19.716 A:middle
the practical mechanics of how

00:13:19.716 --> 00:13:21.416 A:middle
you can build just about any

00:13:21.516 --> 00:13:22.886 A:middle
kind of layout you can dream up

00:13:23.046 --> 00:13:24.366 A:middle
from these simple elements that

00:13:24.366 --> 00:13:25.406 A:middle
Steve just described.

00:13:25.956 --> 00:13:27.016 A:middle
So make sure to download the

00:13:27.016 --> 00:13:28.596 A:middle
sample project for this talk if

00:13:28.596 --> 00:13:29.496 A:middle
you haven't already.

00:13:29.986 --> 00:13:31.306 A:middle
That way you can follow along,

00:13:31.486 --> 00:13:33.156 A:middle
study it at your leisure, and

00:13:33.156 --> 00:13:35.506 A:middle
most importantly, use our code

00:13:35.506 --> 00:13:37.246 A:middle
freely in your own projects.

00:13:37.756 --> 00:13:38.736 A:middle
Whatever kind of layout you

00:13:38.736 --> 00:13:39.656 A:middle
might be thinking about

00:13:39.656 --> 00:13:41.236 A:middle
implementing, there's likely to

00:13:41.236 --> 00:13:42.356 A:middle
be an example we're going to

00:13:42.356 --> 00:13:43.746 A:middle
look at today that is similar.

00:13:44.376 --> 00:13:45.916 A:middle
By taking our code as a basis

00:13:45.916 --> 00:13:46.806 A:middle
for yours, you're going to be

00:13:46.806 --> 00:13:48.266 A:middle
that much closer to your goal

00:13:48.266 --> 00:13:49.056 A:middle
that much more quickly.

00:13:49.096 --> 00:13:50.706 A:middle
We're going to see that it's

00:13:50.796 --> 00:13:52.696 A:middle
really easy to take any existing

00:13:52.696 --> 00:13:54.226 A:middle
compositional layout description

00:13:54.566 --> 00:13:56.246 A:middle
and incrementally refine it to

00:13:56.246 --> 00:13:57.666 A:middle
be exactly what you want.

00:13:59.026 --> 00:13:59.996 A:middle
Now, as we walk through our

00:13:59.996 --> 00:14:01.566 A:middle
examples today, I want to you

00:13:59.996 --> 00:14:01.566 A:middle
examples today, I want to you

00:14:01.566 --> 00:14:03.726 A:middle
notice the same basic pattern at

00:14:03.726 --> 00:14:04.806 A:middle
work in each of them.

00:14:05.076 --> 00:14:06.306 A:middle
This is the pattern that Steve

00:14:06.306 --> 00:14:07.236 A:middle
introduced us to.

00:14:07.916 --> 00:14:09.466 A:middle
Every single compositional

00:14:09.466 --> 00:14:11.346 A:middle
layout description is composed

00:14:11.346 --> 00:14:13.846 A:middle
of the same four basic parts:

00:14:13.976 --> 00:14:15.896 A:middle
Item, group, and section

00:14:15.896 --> 00:14:17.596 A:middle
descriptions wrapped in the

00:14:17.596 --> 00:14:19.146 A:middle
overall containing layout.

00:14:19.496 --> 00:14:20.936 A:middle
So in each of the code examples

00:14:20.936 --> 00:14:21.606 A:middle
we're going to look at, we're

00:14:21.606 --> 00:14:22.836 A:middle
going to see that same

00:14:22.836 --> 00:14:24.346 A:middle
four-layer nested structure.

00:14:24.726 --> 00:14:26.036 A:middle
And in the more advanced topics,

00:14:26.036 --> 00:14:27.056 A:middle
we're going to see how you can

00:14:27.056 --> 00:14:28.776 A:middle
actually nest groups inside of

00:14:28.776 --> 00:14:30.166 A:middle
other groups in order to

00:14:30.206 --> 00:14:32.476 A:middle
construct or compose more

00:14:32.506 --> 00:14:34.306 A:middle
complex, sophisticated layouts

00:14:34.476 --> 00:14:35.956 A:middle
out of simple, easy to

00:14:35.956 --> 00:14:37.026 A:middle
understand parts.

00:14:37.676 --> 00:14:38.686 A:middle
So let's get to the code.

00:14:45.066 --> 00:14:46.286 A:middle
And here we have -- we're going

00:14:46.286 --> 00:14:47.876 A:middle
to start with our list example,

00:14:48.456 --> 00:14:49.266 A:middle
which is the one that Steve

00:14:49.266 --> 00:14:49.646 A:middle
showed us.

00:14:49.646 --> 00:14:51.426 A:middle
So here's -- this is about the

00:14:51.426 --> 00:14:53.696 A:middle
simplest kind of useful layout

00:14:53.696 --> 00:14:54.396 A:middle
we can imagine.

00:14:54.576 --> 00:14:56.456 A:middle
It's a single-column list where

00:14:56.456 --> 00:14:58.226 A:middle
the items span the width of our

00:14:58.226 --> 00:14:58.956 A:middle
CollectionView.

00:14:59.656 --> 00:15:02.316 A:middle
And if I rotate the phone, we

00:14:59.656 --> 00:15:02.316 A:middle
And if I rotate the phone, we

00:15:02.316 --> 00:15:03.646 A:middle
can see that indeed the items

00:15:03.646 --> 00:15:05.206 A:middle
expand to fill the available

00:15:05.206 --> 00:15:06.836 A:middle
width while maintaining the same

00:15:06.836 --> 00:15:07.966 A:middle
constant height.

00:15:08.376 --> 00:15:09.656 A:middle
So how do we implement this

00:15:09.726 --> 00:15:11.016 A:middle
using compositional layout?

00:15:11.566 --> 00:15:12.956 A:middle
I've got our list view

00:15:12.956 --> 00:15:14.946 A:middle
controller source file open

00:15:14.946 --> 00:15:15.836 A:middle
here, which is the one where

00:15:15.836 --> 00:15:16.656 A:middle
there is implemented.

00:15:16.686 --> 00:15:17.856 A:middle
And in each of our examples

00:15:17.856 --> 00:15:19.476 A:middle
today, we've just gone ahead and

00:15:19.476 --> 00:15:20.986 A:middle
declared a create layout

00:15:20.986 --> 00:15:22.346 A:middle
function that neatly

00:15:22.346 --> 00:15:23.936 A:middle
encapsulates our description of

00:15:23.936 --> 00:15:25.686 A:middle
our compositional layout that we

00:15:25.686 --> 00:15:27.456 A:middle
then return back out to be

00:15:27.456 --> 00:15:28.676 A:middle
hooked up to our CollectionView

00:15:28.676 --> 00:15:29.626 A:middle
just like any other

00:15:29.746 --> 00:15:30.906 A:middle
CollectionView layout would be.

00:15:31.836 --> 00:15:33.056 A:middle
So first thing to notice here,

00:15:33.606 --> 00:15:35.606 A:middle
we start, as I promised, by

00:15:35.606 --> 00:15:37.146 A:middle
describing an item and itself

00:15:37.146 --> 00:15:37.656 A:middle
size.

00:15:38.536 --> 00:15:39.906 A:middle
We take that item description

00:15:40.396 --> 00:15:42.036 A:middle
and we use it to describe a

00:15:42.036 --> 00:15:44.626 A:middle
group of items.

00:15:45.156 --> 00:15:46.316 A:middle
Next, we wrap that group in a

00:15:46.316 --> 00:15:46.906 A:middle
section.

00:15:47.636 --> 00:15:49.196 A:middle
And finally, we create and

00:15:49.196 --> 00:15:51.106 A:middle
return our compositional layout.

00:15:51.856 --> 00:15:53.016 A:middle
So there's that item, group,

00:15:53.016 --> 00:15:54.256 A:middle
section layout structure.

00:15:54.596 --> 00:15:55.406 A:middle
The other thing I want you to

00:15:55.446 --> 00:15:56.676 A:middle
pay attention to here and we

00:15:56.676 --> 00:15:57.746 A:middle
should really understand before

00:15:57.746 --> 00:15:59.056 A:middle
we move on to the other examples

00:15:59.356 --> 00:16:01.056 A:middle
is the way that the items are

00:15:59.356 --> 00:16:01.056 A:middle
is the way that the items are

00:16:01.056 --> 00:16:01.996 A:middle
given their size.

00:16:02.766 --> 00:16:04.336 A:middle
In this case it is the group

00:16:04.336 --> 00:16:06.666 A:middle
size that ultimately ends up

00:16:07.306 --> 00:16:08.466 A:middle
determining the item size.

00:16:08.466 --> 00:16:09.446 A:middle
And I'm going to explain how

00:16:09.446 --> 00:16:10.066 A:middle
that works.

00:16:10.506 --> 00:16:12.296 A:middle
So groups might seem a little

00:16:12.296 --> 00:16:13.846 A:middle
superfluous in this simple list

00:16:13.846 --> 00:16:14.396 A:middle
example.

00:16:14.646 --> 00:16:15.896 A:middle
A group in a compositional

00:16:15.896 --> 00:16:17.766 A:middle
layout typically represents some

00:16:17.766 --> 00:16:19.076 A:middle
repeating structure that you're

00:16:19.076 --> 00:16:20.686 A:middle
going to have, a column of items

00:16:20.966 --> 00:16:21.926 A:middle
or a row of items.

00:16:22.196 --> 00:16:23.656 A:middle
In this case it's a row, but we

00:16:23.656 --> 00:16:24.726 A:middle
really have kind of a trivial

00:16:24.726 --> 00:16:26.236 A:middle
case where we only have one item

00:16:26.236 --> 00:16:26.716 A:middle
per row.

00:16:27.166 --> 00:16:29.296 A:middle
So each item is going to get its

00:16:29.296 --> 00:16:29.896 A:middle
own group.

00:16:30.266 --> 00:16:31.576 A:middle
But groups are always there as a

00:16:31.576 --> 00:16:32.906 A:middle
consistent part of the

00:16:32.906 --> 00:16:33.706 A:middle
compositional layout

00:16:33.706 --> 00:16:34.626 A:middle
description, and we're going to

00:16:34.626 --> 00:16:36.256 A:middle
use them to our benefit to help

00:16:36.256 --> 00:16:37.326 A:middle
define the item sizes.

00:16:38.046 --> 00:16:40.076 A:middle
So Steve explained all about

00:16:40.076 --> 00:16:41.466 A:middle
container-relevant sizing.

00:16:42.676 --> 00:16:43.926 A:middle
Let's look first at our group

00:16:43.926 --> 00:16:44.866 A:middle
size description.

00:16:45.856 --> 00:16:48.206 A:middle
We've asked here for our group,

00:16:48.206 --> 00:16:49.836 A:middle
which is our row in this case,

00:16:50.156 --> 00:16:52.326 A:middle
to span 100% the width of its

00:16:52.326 --> 00:16:52.946 A:middle
container.

00:16:53.256 --> 00:16:54.726 A:middle
The group's container is its

00:16:54.726 --> 00:16:56.406 A:middle
section, which in turn spans the

00:16:56.406 --> 00:16:57.656 A:middle
layout or the CollectionView.

00:16:59.586 --> 00:17:01.036 A:middle
Meanwhile, we've asked for each

00:16:59.586 --> 00:17:01.036 A:middle
Meanwhile, we've asked for each

00:17:01.116 --> 00:17:03.116 A:middle
group's height to be an absolute

00:17:03.116 --> 00:17:05.215 A:middle
value of 44 points tall.

00:17:06.336 --> 00:17:07.185 A:middle
Now, notice that this has

00:17:07.185 --> 00:17:09.076 A:middle
basically already defined what

00:17:09.076 --> 00:17:10.376 A:middle
our item box should be -- that's

00:17:10.376 --> 00:17:11.656 A:middle
how we want our item sized, the

00:17:11.656 --> 00:17:12.626 A:middle
width of the CollectionView and

00:17:12.626 --> 00:17:13.646 A:middle
44 points high.

00:17:14.215 --> 00:17:15.326 A:middle
So all we need to do up here

00:17:15.326 --> 00:17:17.346 A:middle
where we specify our item size

00:17:17.896 --> 00:17:18.986 A:middle
is to say that we'd like each

00:17:18.986 --> 00:17:21.396 A:middle
item to be 100% the width and

00:17:21.396 --> 00:17:22.756 A:middle
100% the height of its

00:17:22.756 --> 00:17:24.816 A:middle
container, the item's container

00:17:25.076 --> 00:17:25.896 A:middle
being the group.

00:17:26.695 --> 00:17:28.056 A:middle
So that's all it takes to

00:17:28.056 --> 00:17:29.076 A:middle
implement a list.

00:17:29.076 --> 00:17:30.166 A:middle
But the interesting thing as we

00:17:30.166 --> 00:17:31.186 A:middle
go along, we're going to see

00:17:31.186 --> 00:17:32.316 A:middle
that we don't have to make a lot

00:17:32.316 --> 00:17:33.436 A:middle
of code changes to get some

00:17:33.436 --> 00:17:34.536 A:middle
pretty dramatically different

00:17:34.536 --> 00:17:35.106 A:middle
layouts.

00:17:35.996 --> 00:17:37.006 A:middle
Let's take a look at another

00:17:37.006 --> 00:17:40.016 A:middle
example, that being I'm going to

00:17:40.016 --> 00:17:40.976 A:middle
open up our grid here.

00:17:41.236 --> 00:17:43.196 A:middle
And this is a five-column grid

00:17:43.196 --> 00:17:44.566 A:middle
of edge to edge items.

00:17:46.036 --> 00:17:47.646 A:middle
And we can see if I rotate the

00:17:47.646 --> 00:17:51.046 A:middle
phone, that this layout is

00:17:51.046 --> 00:17:52.466 A:middle
indeed described in such a way

00:17:52.466 --> 00:17:53.886 A:middle
that we always get five columns

00:17:53.886 --> 00:17:54.376 A:middle
across.

00:17:54.376 --> 00:17:56.496 A:middle
The items always remain square,

00:17:56.496 --> 00:17:58.136 A:middle
and they're always sized such

00:17:58.216 --> 00:18:00.136 A:middle
that we get exactly five columns

00:17:58.216 --> 00:18:00.136 A:middle
that we get exactly five columns

00:18:00.136 --> 00:18:00.506 A:middle
wide.

00:18:03.426 --> 00:18:04.626 A:middle
Now, this is an example where

00:18:04.626 --> 00:18:06.376 A:middle
groups actually come in a bit

00:18:06.376 --> 00:18:07.646 A:middle
more handy and it will be easier

00:18:07.646 --> 00:18:08.776 A:middle
to understand what their

00:18:08.776 --> 00:18:09.496 A:middle
function is.

00:18:10.326 --> 00:18:11.576 A:middle
So opening up the grid view

00:18:11.576 --> 00:18:12.706 A:middle
controller source file, looking

00:18:12.706 --> 00:18:13.806 A:middle
at our same create layout

00:18:13.806 --> 00:18:16.056 A:middle
function, again, we have that

00:18:16.106 --> 00:18:20.116 A:middle
item, group, section layout

00:18:20.116 --> 00:18:20.676 A:middle
structure.

00:18:21.496 --> 00:18:22.826 A:middle
Basically looks like our list

00:18:22.826 --> 00:18:23.456 A:middle
layout description.

00:18:23.456 --> 00:18:24.516 A:middle
The only thing that's different

00:18:24.516 --> 00:18:26.466 A:middle
here is the item and group sizes

00:18:26.466 --> 00:18:27.376 A:middle
that we specified.

00:18:27.406 --> 00:18:28.416 A:middle
So let's look at how those

00:18:28.416 --> 00:18:28.716 A:middle
differ.

00:18:29.616 --> 00:18:31.876 A:middle
We still want each group --

00:18:31.876 --> 00:18:33.216 A:middle
since a group represents a row

00:18:33.216 --> 00:18:34.936 A:middle
-- to span the entire width of

00:18:34.936 --> 00:18:35.786 A:middle
the CollectionView.

00:18:35.936 --> 00:18:36.536 A:middle
That's great.

00:18:37.446 --> 00:18:38.976 A:middle
But now we don't want our items

00:18:38.976 --> 00:18:40.406 A:middle
to be the same width of their

00:18:40.536 --> 00:18:41.546 A:middle
group; we want to have five

00:18:41.546 --> 00:18:42.306 A:middle
items across.

00:18:42.306 --> 00:18:43.406 A:middle
And the way that we achieve that

00:18:43.406 --> 00:18:45.566 A:middle
in this example is up here we

00:18:45.566 --> 00:18:48.396 A:middle
specify the item's width to be

00:18:48.396 --> 00:18:50.146 A:middle
20% of the width of itself

00:18:50.146 --> 00:18:50.636 A:middle
container.

00:18:51.106 --> 00:18:52.216 A:middle
The item's container is its

00:18:52.216 --> 00:18:53.916 A:middle
group or row, so we're going to

00:18:53.916 --> 00:18:55.146 A:middle
have -- we're going to be able

00:18:55.146 --> 00:18:57.076 A:middle
to fit exactly five items across

00:18:57.076 --> 00:18:58.246 A:middle
because of this width that we've

00:18:58.246 --> 00:18:58.946 A:middle
specified.

00:18:59.906 --> 00:19:01.226 A:middle
Now, as for the heights, instead

00:18:59.906 --> 00:19:01.226 A:middle
Now, as for the heights, instead

00:19:01.226 --> 00:19:02.626 A:middle
of an absolute point value,

00:19:03.606 --> 00:19:04.826 A:middle
we've declared that we want the

00:19:04.976 --> 00:19:07.236 A:middle
height of each group or row to

00:19:07.236 --> 00:19:10.096 A:middle
be 20% of the width of the

00:19:10.096 --> 00:19:11.076 A:middle
group's containers.

00:19:11.076 --> 00:19:12.236 A:middle
And notice we're using this

00:19:12.746 --> 00:19:15.096 A:middle
ability to specify fractional

00:19:15.096 --> 00:19:17.026 A:middle
widths or heights across axes

00:19:17.026 --> 00:19:17.146 A:middle
here.

00:19:17.146 --> 00:19:18.756 A:middle
And this is really handy because

00:19:18.756 --> 00:19:20.116 A:middle
it's how we make our items

00:19:20.116 --> 00:19:20.706 A:middle
square.

00:19:21.076 --> 00:19:23.286 A:middle
The item width and the group

00:19:23.666 --> 00:19:25.186 A:middle
height are the same.

00:19:26.436 --> 00:19:27.506 A:middle
And since the group's height

00:19:27.506 --> 00:19:28.756 A:middle
sets the item's height, all we

00:19:28.756 --> 00:19:30.096 A:middle
need to do is set our item

00:19:30.096 --> 00:19:32.446 A:middle
height to be 100% of the group's

00:19:32.446 --> 00:19:32.616 A:middle
height.

00:19:33.326 --> 00:19:35.886 A:middle
So that's it, that's pretty

00:19:35.886 --> 00:19:37.306 A:middle
simple for creating a grid.

00:19:37.306 --> 00:19:38.566 A:middle
And we did so without really

00:19:38.566 --> 00:19:39.856 A:middle
fundamentally different code

00:19:39.856 --> 00:19:41.456 A:middle
than we used for implementing a

00:19:41.456 --> 00:19:41.856 A:middle
list.

00:19:42.566 --> 00:19:43.726 A:middle
Now, often if you get a layout

00:19:43.726 --> 00:19:44.626 A:middle
from your designers, usually

00:19:44.626 --> 00:19:45.786 A:middle
you'll want to have some space

00:19:45.786 --> 00:19:46.446 A:middle
between items.

00:19:46.446 --> 00:19:47.766 A:middle
So let's look at how to add that

00:19:47.766 --> 00:19:48.046 A:middle
next.

00:19:48.936 --> 00:19:50.466 A:middle
Bringing up the inset items grid

00:19:50.466 --> 00:19:52.136 A:middle
example, we still have a

00:19:52.136 --> 00:19:54.086 A:middle
five-column grid, but we just

00:19:54.086 --> 00:19:55.866 A:middle
have some space now around and

00:19:55.866 --> 00:19:57.056 A:middle
between the items.

00:19:59.416 --> 00:20:01.206 A:middle
Let's open up our inset items

00:19:59.416 --> 00:20:01.206 A:middle
Let's open up our inset items

00:20:01.206 --> 00:20:01.576 A:middle
view,

00:20:02.376 --> 00:20:04.006 A:middle
InsetItemsGridViewController to

00:20:04.006 --> 00:20:05.726 A:middle
take a look at that.

00:20:06.246 --> 00:20:08.146 A:middle
And here we have, if you compare

00:20:08.146 --> 00:20:09.296 A:middle
this with the previous example,

00:20:09.296 --> 00:20:10.786 A:middle
you'll see that there's only one

00:20:10.836 --> 00:20:12.516 A:middle
line of code different here.

00:20:12.666 --> 00:20:15.006 A:middle
And this is a useful observation

00:20:15.006 --> 00:20:16.016 A:middle
because you can really think

00:20:16.016 --> 00:20:17.966 A:middle
about this layout as being

00:20:17.966 --> 00:20:19.886 A:middle
computed almost exactly like the

00:20:19.886 --> 00:20:21.616 A:middle
previous edge-to-edge layout.

00:20:22.726 --> 00:20:25.016 A:middle
Each item is allocated the same

00:20:25.016 --> 00:20:26.476 A:middle
box that it was given before,

00:20:26.476 --> 00:20:28.256 A:middle
the same edge-to-edge squares.

00:20:28.716 --> 00:20:30.046 A:middle
But in this case we've decided

00:20:30.046 --> 00:20:32.406 A:middle
that instead of sizing our items

00:20:32.406 --> 00:20:33.576 A:middle
to take up the full square

00:20:33.576 --> 00:20:34.886 A:middle
they're allocated, as a last

00:20:34.976 --> 00:20:37.156 A:middle
step we're going to inset the

00:20:37.156 --> 00:20:39.466 A:middle
item's content by five points on

00:20:39.466 --> 00:20:40.096 A:middle
each side.

00:20:40.226 --> 00:20:41.706 A:middle
So item content insets work

00:20:41.706 --> 00:20:42.686 A:middle
usefully in this way.

00:20:42.686 --> 00:20:45.136 A:middle
Sort of a last-stage subtraction

00:20:45.136 --> 00:20:46.376 A:middle
from the layout that was already

00:20:46.376 --> 00:20:46.896 A:middle
computed.

00:20:47.426 --> 00:20:48.066 A:middle
So that's really cool.

00:20:48.066 --> 00:20:49.636 A:middle
We've seen how to do lists and

00:20:49.636 --> 00:20:50.196 A:middle
grids.

00:20:50.436 --> 00:20:51.896 A:middle
And we've achieved our grids

00:20:52.216 --> 00:20:54.726 A:middle
using relative item sizing.

00:20:55.096 --> 00:20:55.896 A:middle
But there's another really

00:20:55.946 --> 00:20:58.306 A:middle
powerful way to be able to

00:20:58.416 --> 00:21:00.086 A:middle
grid-like layouts with rows and

00:20:58.416 --> 00:21:00.086 A:middle
grid-like layouts with rows and

00:21:00.086 --> 00:21:00.596 A:middle
columns.

00:21:01.636 --> 00:21:02.806 A:middle
And I want to show you that so

00:21:02.806 --> 00:21:03.746 A:middle
we can be familiar with it.

00:21:04.366 --> 00:21:05.126 A:middle
So I'm going to pull up our

00:21:05.126 --> 00:21:06.636 A:middle
two-column grid example here.

00:21:07.166 --> 00:21:09.956 A:middle
And superficially this looks

00:21:09.956 --> 00:21:11.016 A:middle
pretty much just like the

00:21:11.016 --> 00:21:12.216 A:middle
five-column grid, we just have

00:21:12.256 --> 00:21:13.366 A:middle
fewer columns, right?

00:21:13.366 --> 00:21:15.446 A:middle
And indeed, if I rotate the

00:21:15.446 --> 00:21:17.056 A:middle
device, it adapts: It's always

00:21:17.056 --> 00:21:18.936 A:middle
two columns and the items expand

00:21:19.426 --> 00:21:20.606 A:middle
to be the appropriate width.

00:21:21.696 --> 00:21:22.886 A:middle
But this is implemented a bit

00:21:22.886 --> 00:21:24.426 A:middle
differently and it's instructive

00:21:24.426 --> 00:21:25.376 A:middle
to take a look at how.

00:21:25.926 --> 00:21:27.016 A:middle
So in our

00:21:27.016 --> 00:21:28.876 A:middle
TwoColumnViewController here,

00:21:29.206 --> 00:21:30.506 A:middle
we're going to look at our

00:21:30.506 --> 00:21:31.556 A:middle
createLayout function.

00:21:33.056 --> 00:21:34.546 A:middle
And so the interesting things to

00:21:34.546 --> 00:21:36.146 A:middle
notice here, again, we have that

00:21:36.146 --> 00:21:38.556 A:middle
item, group, section layout

00:21:38.556 --> 00:21:39.096 A:middle
structure.

00:21:39.096 --> 00:21:39.946 A:middle
But the first thing to pay

00:21:39.946 --> 00:21:42.006 A:middle
attention to that might not be

00:21:42.006 --> 00:21:43.776 A:middle
immediately obvious is that we

00:21:43.776 --> 00:21:45.406 A:middle
are constructing our horizontal

00:21:45.406 --> 00:21:47.246 A:middle
group that represents each row

00:21:47.246 --> 00:21:48.436 A:middle
in a slightly different way.

00:21:49.106 --> 00:21:50.516 A:middle
We're using a different form of

00:21:50.516 --> 00:21:52.276 A:middle
the initializer that takes an

00:21:52.276 --> 00:21:53.926 A:middle
explicit count parameter.

00:21:54.236 --> 00:21:56.066 A:middle
Here we're explicitly specifying

00:21:56.606 --> 00:21:58.676 A:middle
that we want to have exactly two

00:21:58.676 --> 00:22:00.596 A:middle
items per group, two items per

00:21:58.676 --> 00:22:00.596 A:middle
items per group, two items per

00:22:00.636 --> 00:22:01.236 A:middle
row.

00:22:01.816 --> 00:22:02.466 A:middle
Now, this will cause

00:22:02.466 --> 00:22:03.576 A:middle
compositional layout to

00:22:03.656 --> 00:22:05.356 A:middle
automatically figure out what

00:22:05.356 --> 00:22:06.546 A:middle
the item width has to be in

00:22:06.546 --> 00:22:07.446 A:middle
order to make that happen.

00:22:08.406 --> 00:22:10.226 A:middle
We do specify an item width here

00:22:10.226 --> 00:22:11.396 A:middle
because we always have to.

00:22:11.616 --> 00:22:13.506 A:middle
We say 100% of the container.

00:22:14.036 --> 00:22:15.366 A:middle
But that value at the top ends

00:22:15.366 --> 00:22:16.376 A:middle
up effectively getting

00:22:16.376 --> 00:22:17.006 A:middle
overridden.

00:22:17.006 --> 00:22:18.106 A:middle
When you ask for a certain

00:22:18.106 --> 00:22:19.586 A:middle
number of items per group,

00:22:19.976 --> 00:22:21.336 A:middle
compositional layout -- that

00:22:21.626 --> 00:22:22.616 A:middle
compositional layout is going to

00:22:22.616 --> 00:22:24.026 A:middle
take that as kind of an override

00:22:24.326 --> 00:22:25.136 A:middle
and it's going to compute

00:22:25.136 --> 00:22:26.246 A:middle
whatever width is actually

00:22:26.246 --> 00:22:27.686 A:middle
necessary to fulfill our

00:22:27.686 --> 00:22:28.316 A:middle
request.

00:22:28.476 --> 00:22:29.936 A:middle
We're also using a different way

00:22:29.936 --> 00:22:31.216 A:middle
of putting space around and

00:22:31.216 --> 00:22:32.286 A:middle
between the items.

00:22:32.286 --> 00:22:33.446 A:middle
Compositional layout offers a

00:22:33.446 --> 00:22:34.906 A:middle
variety of ways to do this,

00:22:34.906 --> 00:22:36.156 A:middle
which makes it a really flexible

00:22:36.156 --> 00:22:36.486 A:middle
API.

00:22:37.706 --> 00:22:39.666 A:middle
Instead of specifying itemInsets

00:22:39.666 --> 00:22:42.216 A:middle
in this case, we're specifying

00:22:42.826 --> 00:22:44.446 A:middle
contentInsets on the section.

00:22:45.066 --> 00:22:46.306 A:middle
So here we want to have a little

00:22:46.306 --> 00:22:47.456 A:middle
margin on the left and right

00:22:47.456 --> 00:22:47.616 A:middle
side.

00:22:47.616 --> 00:22:48.956 A:middle
And we only have one section, so

00:22:48.956 --> 00:22:50.196 A:middle
this basically applies to our

00:22:50.196 --> 00:22:50.856 A:middle
whole layout.

00:22:51.336 --> 00:22:53.236 A:middle
So we're asking for 10 points of

00:22:53.236 --> 00:22:54.826 A:middle
leading and 10 points of

00:22:54.826 --> 00:22:55.776 A:middle
trailing space.

00:22:56.846 --> 00:22:58.266 A:middle
Notice while we're on this line

00:22:58.266 --> 00:22:59.806 A:middle
of code that compositional

00:22:59.806 --> 00:23:00.836 A:middle
layout is structured to

00:22:59.806 --> 00:23:00.836 A:middle
layout is structured to

00:23:00.836 --> 00:23:02.626 A:middle
encourage you to express your

00:23:02.626 --> 00:23:04.166 A:middle
layouts in layout

00:23:04.196 --> 00:23:05.556 A:middle
direction-agnostic ways.

00:23:05.556 --> 00:23:07.776 A:middle
So instead of left and right

00:23:07.776 --> 00:23:09.526 A:middle
explicitly, we're specifying

00:23:09.526 --> 00:23:10.676 A:middle
leading and trailing.

00:23:10.856 --> 00:23:12.316 A:middle
And this is fantastic because

00:23:12.316 --> 00:23:13.726 A:middle
when you run your app in a right

00:23:13.726 --> 00:23:15.156 A:middle
to left language, you're going

00:23:15.156 --> 00:23:17.146 A:middle
to automatically get the right

00:23:17.146 --> 00:23:18.206 A:middle
layout adaptation.

00:23:19.156 --> 00:23:23.106 A:middle
Here we're also using a property

00:23:23.106 --> 00:23:24.646 A:middle
called interItemSpacing on the

00:23:24.646 --> 00:23:24.896 A:middle
group.

00:23:24.896 --> 00:23:26.416 A:middle
So we can ask for a group to put

00:23:26.416 --> 00:23:27.666 A:middle
a certain amount of space

00:23:27.696 --> 00:23:29.256 A:middle
between its items, in this case

00:23:29.316 --> 00:23:31.516 A:middle
fixed spacing of 10 points.

00:23:31.806 --> 00:23:32.326 A:middle
And that's it.

00:23:32.326 --> 00:23:34.246 A:middle
Everything else is very similar

00:23:34.246 --> 00:23:35.506 A:middle
to the previous examples.

00:23:35.506 --> 00:23:36.776 A:middle
We're just using that ability to

00:23:36.776 --> 00:23:38.456 A:middle
explicitly specify the number of

00:23:38.456 --> 00:23:39.206 A:middle
items per group.

00:23:40.566 --> 00:23:41.586 A:middle
So that's all pretty neat.

00:23:42.356 --> 00:23:43.606 A:middle
But Steve mentioned another

00:23:43.696 --> 00:23:44.916 A:middle
really cool capability that I

00:23:44.916 --> 00:23:45.876 A:middle
want to dive into.

00:23:46.916 --> 00:23:48.326 A:middle
He mentioned that it's possible

00:23:48.326 --> 00:23:49.886 A:middle
to have a different layout for

00:23:49.886 --> 00:23:50.476 A:middle
each section.

00:23:50.476 --> 00:23:51.816 A:middle
So far we've only looked at one

00:23:51.816 --> 00:23:53.586 A:middle
section layout so far, but what

00:23:53.586 --> 00:23:54.546 A:middle
if we want to have multiple

00:23:54.546 --> 00:23:56.456 A:middle
sections, yet have them able to

00:23:56.456 --> 00:23:57.496 A:middle
each have their own distinct

00:23:57.496 --> 00:23:57.856 A:middle
layout?

00:23:58.746 --> 00:23:59.926 A:middle
So let's open up our distinct

00:23:59.926 --> 00:24:00.866 A:middle
sections example.

00:23:59.926 --> 00:24:00.866 A:middle
sections example.

00:24:02.106 --> 00:24:03.616 A:middle
And here we have a layout that's

00:24:03.616 --> 00:24:04.876 A:middle
sort of a composite of some

00:24:04.876 --> 00:24:05.686 A:middle
others that we've done.

00:24:05.936 --> 00:24:07.136 A:middle
So we have three sections in

00:24:07.136 --> 00:24:07.726 A:middle
this layout.

00:24:08.726 --> 00:24:11.446 A:middle
The first section is a simple,

00:24:11.446 --> 00:24:12.886 A:middle
single-column list like we had

00:24:12.886 --> 00:24:13.326 A:middle
before.

00:24:14.126 --> 00:24:16.006 A:middle
The second is a five-column grid

00:24:16.006 --> 00:24:16.806 A:middle
of square items.

00:24:16.806 --> 00:24:18.876 A:middle
And the third is a three-column

00:24:18.876 --> 00:24:20.266 A:middle
grid of rectangular items.

00:24:21.176 --> 00:24:22.976 A:middle
So how do we implement this?

00:24:24.346 --> 00:24:25.076 A:middle
Let's open up our

00:24:25.076 --> 00:24:26.616 A:middle
DistinctSectionsViewController

00:24:26.616 --> 00:24:28.166 A:middle
and look at our createLayout

00:24:28.166 --> 00:24:28.586 A:middle
function.

00:24:30.126 --> 00:24:31.456 A:middle
Now, at first glance this looks

00:24:31.456 --> 00:24:32.406 A:middle
somewhat significantly

00:24:32.406 --> 00:24:33.946 A:middle
different, but it's really just

00:24:33.946 --> 00:24:35.206 A:middle
that the outermost component of

00:24:35.206 --> 00:24:36.386 A:middle
it where we instantiate the

00:24:36.386 --> 00:24:37.486 A:middle
layout, instead of coming at the

00:24:37.486 --> 00:24:38.196 A:middle
end, it's coming at the

00:24:38.196 --> 00:24:38.666 A:middle
beginning.

00:24:39.306 --> 00:24:40.166 A:middle
And here's the reason why.

00:24:40.766 --> 00:24:42.336 A:middle
So we're instantiating the

00:24:42.336 --> 00:24:43.596 A:middle
compositional layout using an

00:24:43.596 --> 00:24:45.356 A:middle
initializer that takes that

00:24:45.356 --> 00:24:47.066 A:middle
section provider closure as its

00:24:47.066 --> 00:24:48.526 A:middle
parameter that Steve mentioned.

00:24:49.286 --> 00:24:50.656 A:middle
So section provider closure, I

00:24:50.656 --> 00:24:51.956 A:middle
mean, this is an arbitrary block

00:24:51.956 --> 00:24:52.406 A:middle
of code.

00:24:52.406 --> 00:24:54.596 A:middle
So as you can imagine, you can

00:24:54.596 --> 00:24:56.756 A:middle
respond to this being invoked by

00:24:56.756 --> 00:24:58.396 A:middle
returning whatever kind of

00:24:58.396 --> 00:24:59.856 A:middle
layout you want for that

00:24:59.856 --> 00:25:00.296 A:middle
section.

00:24:59.856 --> 00:25:00.296 A:middle
section.

00:25:01.096 --> 00:25:02.516 A:middle
Your past two parameters,

00:25:03.206 --> 00:25:04.376 A:middle
section index that tells you

00:25:04.376 --> 00:25:05.186 A:middle
which section -- it's going to

00:25:05.186 --> 00:25:06.606 A:middle
be zero, 1 or 2 in our case.

00:25:07.596 --> 00:25:08.976 A:middle
And a layout environment that

00:25:08.976 --> 00:25:10.106 A:middle
contains various useful

00:25:10.106 --> 00:25:11.326 A:middle
properties you can refer to.

00:25:11.326 --> 00:25:12.666 A:middle
We're going to look at that in a

00:25:12.666 --> 00:25:13.076 A:middle
moment.

00:25:14.536 --> 00:25:16.676 A:middle
So -- but everything else inside

00:25:16.676 --> 00:25:17.796 A:middle
this closure is just the same

00:25:17.796 --> 00:25:18.956 A:middle
code that we wrote before.

00:25:19.026 --> 00:25:20.916 A:middle
We're specifying an item

00:25:20.916 --> 00:25:21.446 A:middle
description.

00:25:22.066 --> 00:25:23.986 A:middle
We're wrapping that in a group

00:25:23.986 --> 00:25:24.576 A:middle
description.

00:25:25.056 --> 00:25:27.026 A:middle
And then lastly, we specify a

00:25:27.026 --> 00:25:28.256 A:middle
section description, and that's

00:25:28.256 --> 00:25:29.166 A:middle
what we returned from the

00:25:29.166 --> 00:25:30.386 A:middle
section provider closure.

00:25:30.996 --> 00:25:32.966 A:middle
Now, compositional layout knows

00:25:32.966 --> 00:25:34.156 A:middle
to automatically invoke this

00:25:34.156 --> 00:25:35.866 A:middle
closure whenever it needs to

00:25:35.866 --> 00:25:38.666 A:middle
requery for a new description of

00:25:38.666 --> 00:25:39.676 A:middle
a particular section.

00:25:40.346 --> 00:25:42.126 A:middle
So the contents are pretty much

00:25:42.126 --> 00:25:43.266 A:middle
very similar to before.

00:25:44.126 --> 00:25:45.466 A:middle
The interesting thing that

00:25:45.466 --> 00:25:46.516 A:middle
differentiates our various

00:25:46.516 --> 00:25:47.886 A:middle
layouts is mainly that we have a

00:25:47.886 --> 00:25:48.826 A:middle
different number of columns,

00:25:48.826 --> 00:25:49.116 A:middle
right?

00:25:49.846 --> 00:25:50.746 A:middle
So we've declared this

00:25:50.746 --> 00:25:52.966 A:middle
SectionLayoutKind type, it's

00:25:52.966 --> 00:25:53.826 A:middle
declared at the top of the

00:25:53.826 --> 00:25:54.376 A:middle
source file.

00:25:54.376 --> 00:25:55.416 A:middle
Let's take a look at.

00:25:55.416 --> 00:25:56.846 A:middle
When we initialize it, we pass

00:25:56.886 --> 00:25:58.506 A:middle
in the section index that's

00:25:58.506 --> 00:25:59.816 A:middle
going to be zero, 1, or 2.

00:26:00.626 --> 00:26:02.666 A:middle
And all it does is map that to

00:26:02.666 --> 00:26:04.476 A:middle
an enum type that tells us the

00:26:04.476 --> 00:26:05.606 A:middle
SectionLayoutKind is going to be

00:26:05.606 --> 00:26:08.306 A:middle
either a list, or grid5, or

00:26:08.306 --> 00:26:08.906 A:middle
grid3.

00:26:09.126 --> 00:26:11.696 A:middle
And we've also added this handy

00:26:11.896 --> 00:26:13.436 A:middle
gettable property, columnCount,

00:26:13.436 --> 00:26:14.636 A:middle
where we can just ask that

00:26:14.636 --> 00:26:16.636 A:middle
SectionLayoutKind value how many

00:26:16.636 --> 00:26:17.816 A:middle
columns we should have in that

00:26:17.816 --> 00:26:18.136 A:middle
layout.

00:26:18.646 --> 00:26:21.056 A:middle
Going back to our createLayout

00:26:21.056 --> 00:26:22.376 A:middle
function we can see where we ask

00:26:22.376 --> 00:26:24.356 A:middle
for that columnCount, and we use

00:26:24.356 --> 00:26:25.556 A:middle
it in two different places.

00:26:25.866 --> 00:26:29.436 A:middle
As in our two-column grid

00:26:29.436 --> 00:26:31.256 A:middle
example, we're explicitly

00:26:31.256 --> 00:26:32.796 A:middle
passing the number of columns

00:26:32.796 --> 00:26:34.836 A:middle
that we want when we instantiate

00:26:34.836 --> 00:26:35.826 A:middle
our horizontal group.

00:26:36.616 --> 00:26:38.026 A:middle
So we're leaving it to

00:26:38.026 --> 00:26:38.866 A:middle
compositional layout to

00:26:38.956 --> 00:26:40.506 A:middle
automatically figure out what

00:26:40.506 --> 00:26:42.006 A:middle
sort of item width that implies.

00:26:42.276 --> 00:26:43.676 A:middle
We're also using the number of

00:26:43.676 --> 00:26:45.716 A:middle
columns here to determine the

00:26:45.716 --> 00:26:46.936 A:middle
group height or the row height

00:26:46.936 --> 00:26:48.006 A:middle
for the layout since we want to

00:26:48.006 --> 00:26:48.416 A:middle
vary it.

00:26:48.416 --> 00:26:50.126 A:middle
So you can do this any way that

00:26:50.126 --> 00:26:50.516 A:middle
you want.

00:26:50.806 --> 00:26:52.816 A:middle
So that's pretty neat.

00:26:52.816 --> 00:26:53.856 A:middle
But what if we want to be able

00:26:53.856 --> 00:26:55.166 A:middle
to have this layout adapt,

00:26:55.736 --> 00:26:56.066 A:middle
right?

00:26:56.066 --> 00:26:58.596 A:middle
What if we rotate the phone and

00:26:59.306 --> 00:27:00.726 A:middle
maybe this isn't making the best

00:26:59.306 --> 00:27:00.726 A:middle
maybe this isn't making the best

00:27:00.726 --> 00:27:01.776 A:middle
use of space?

00:27:02.526 --> 00:27:03.906 A:middle
Maybe we could fit more items.

00:27:04.866 --> 00:27:05.976 A:middle
So let's look at our adaptive

00:27:05.976 --> 00:27:06.836 A:middle
sections layout.

00:27:07.856 --> 00:27:09.276 A:middle
Now, at first glance this looks

00:27:09.276 --> 00:27:10.426 A:middle
exactly like the previous

00:27:10.426 --> 00:27:10.926 A:middle
example.

00:27:11.336 --> 00:27:13.896 A:middle
But when we rotate this one, we

00:27:13.896 --> 00:27:15.216 A:middle
can see that our first section

00:27:15.216 --> 00:27:16.846 A:middle
adapts to show two columns

00:27:16.846 --> 00:27:18.806 A:middle
across; our second shows ten

00:27:18.806 --> 00:27:21.186 A:middle
across; and our third shows six

00:27:21.186 --> 00:27:21.766 A:middle
across.

00:27:22.486 --> 00:27:23.766 A:middle
So how do we implement this in

00:27:23.766 --> 00:27:24.176 A:middle
code?

00:27:24.616 --> 00:27:25.946 A:middle
It's actually quite similar to

00:27:25.946 --> 00:27:26.976 A:middle
our previous example.

00:27:28.586 --> 00:27:29.196 A:middle
Opening up our

00:27:29.356 --> 00:27:31.096 A:middle
AdaptiveSectionsViewController

00:27:31.156 --> 00:27:33.076 A:middle
and looking at the createLayout

00:27:33.076 --> 00:27:35.636 A:middle
function, this is very similar

00:27:35.636 --> 00:27:36.676 A:middle
to the previous example.

00:27:36.786 --> 00:27:37.576 A:middle
The first thing that we'll

00:27:37.576 --> 00:27:39.366 A:middle
notice is different that we've

00:27:39.366 --> 00:27:41.016 A:middle
changed our SectionLayoutKind

00:27:41.176 --> 00:27:41.376 A:middle
type.

00:27:42.026 --> 00:27:42.696 A:middle
So we still have the

00:27:42.696 --> 00:27:43.866 A:middle
SectionLayoutKind.

00:27:44.286 --> 00:27:45.786 A:middle
But columnCount is no longer

00:27:45.786 --> 00:27:47.326 A:middle
just a gettable property, it's a

00:27:47.406 --> 00:27:48.796 A:middle
function that takes a parameter.

00:27:48.796 --> 00:27:52.396 A:middle
And we're passing it a width

00:27:52.556 --> 00:27:54.406 A:middle
that we're getting from that

00:27:54.406 --> 00:27:55.286 A:middle
layoutEnvironment.

00:27:55.286 --> 00:27:56.746 A:middle
So that layoutEnvironment type

00:27:57.056 --> 00:27:58.366 A:middle
contains information such as the

00:27:58.406 --> 00:27:59.806 A:middle
overall container width that

00:28:00.056 --> 00:28:01.386 A:middle
your layout has to work with,

00:28:01.896 --> 00:28:04.046 A:middle
and on iOS it also has trait

00:28:04.046 --> 00:28:05.666 A:middle
collections info inside it.

00:28:05.846 --> 00:28:07.076 A:middle
So you can use all of that

00:28:07.076 --> 00:28:08.906 A:middle
information to figure out what

00:28:08.906 --> 00:28:10.116 A:middle
kind of layout is appropriate

00:28:10.116 --> 00:28:11.336 A:middle
for the current environment.

00:28:11.826 --> 00:28:13.276 A:middle
Here we're just using the width.

00:28:13.276 --> 00:28:16.476 A:middle
And if we look at the top where

00:28:16.476 --> 00:28:18.026 A:middle
we declared SectionLayoutKind,

00:28:18.806 --> 00:28:19.946 A:middle
we can see that columnCount

00:28:19.946 --> 00:28:21.416 A:middle
function that's now a function,

00:28:21.796 --> 00:28:23.296 A:middle
and it takes a width parameter

00:28:23.296 --> 00:28:24.096 A:middle
that we passed in.

00:28:24.096 --> 00:28:25.106 A:middle
That's the width of our

00:28:25.106 --> 00:28:26.266 A:middle
CollectionView basically in this

00:28:26.266 --> 00:28:26.616 A:middle
case.

00:28:26.986 --> 00:28:28.236 A:middle
And we've basically implemented

00:28:28.236 --> 00:28:28.926 A:middle
a layout break.

00:28:29.326 --> 00:28:30.906 A:middle
We decided that if we have more

00:28:30.906 --> 00:28:32.696 A:middle
than 800 points of width to work

00:28:32.696 --> 00:28:34.106 A:middle
with on our device, we're going

00:28:34.106 --> 00:28:35.376 A:middle
to go into what we call

00:28:35.376 --> 00:28:36.126 A:middle
wideMode.

00:28:36.566 --> 00:28:38.896 A:middle
And in wideMode we simply return

00:28:38.896 --> 00:28:40.336 A:middle
a larger number of columns for

00:28:40.336 --> 00:28:40.946 A:middle
each section.

00:28:41.646 --> 00:28:43.266 A:middle
And that's it.

00:28:43.436 --> 00:28:44.566 A:middle
If we go back to our create

00:28:44.566 --> 00:28:45.766 A:middle
layout function, we can see that

00:28:45.766 --> 00:28:47.336 A:middle
after we've got that number of

00:28:47.336 --> 00:28:49.646 A:middle
columns, we pretty much use it

00:28:49.646 --> 00:28:51.416 A:middle
in very much the same way as

00:28:51.446 --> 00:28:51.936 A:middle
before.

00:28:51.936 --> 00:28:53.506 A:middle
So it's very little code change

00:28:53.716 --> 00:28:55.266 A:middle
to get all the way to having an

00:28:55.266 --> 00:28:57.426 A:middle
adaptive rotating layout.

00:28:57.956 --> 00:29:00.396 A:middle
So this is all very neat.

00:28:57.956 --> 00:29:00.396 A:middle
So this is all very neat.

00:29:00.506 --> 00:29:02.006 A:middle
But so far we've only really

00:29:02.006 --> 00:29:03.306 A:middle
talked about items.

00:29:03.306 --> 00:29:05.136 A:middle
We haven't even delved into what

00:29:05.136 --> 00:29:07.516 A:middle
you can do with supplementary

00:29:07.516 --> 00:29:08.836 A:middle
views and decoration views.

00:29:09.056 --> 00:29:09.916 A:middle
And one of the really cool

00:29:09.916 --> 00:29:10.866 A:middle
things I love about

00:29:10.866 --> 00:29:12.776 A:middle
compositional layout is that it

00:29:12.776 --> 00:29:14.926 A:middle
makes it easier than ever to be

00:29:14.926 --> 00:29:17.046 A:middle
able to go beyond just headers

00:29:17.046 --> 00:29:18.136 A:middle
and footers and work with

00:29:18.246 --> 00:29:20.336 A:middle
arbitrary supplementary views of

00:29:20.336 --> 00:29:21.276 A:middle
your own design.

00:29:21.856 --> 00:29:24.336 A:middle
So to tell us a bit more about

00:29:24.336 --> 00:29:25.646 A:middle
that and to take us into some of

00:29:25.646 --> 00:29:26.976 A:middle
the more advanced topics about

00:29:26.976 --> 00:29:28.556 A:middle
other cool stuff you can do with

00:29:28.556 --> 00:29:29.896 A:middle
compositional layout, I'd like

00:29:29.896 --> 00:29:30.986 A:middle
to invite my colleague Steve

00:29:31.036 --> 00:29:31.866 A:middle
back on stage.

00:29:32.016 --> 00:29:32.496 A:middle
Thank you.

00:29:33.516 --> 00:29:37.876 A:middle
[ Applause ]

00:29:38.376 --> 00:29:39.336 A:middle
&gt;&gt; Steve Breen: So now that

00:29:39.336 --> 00:29:40.856 A:middle
we've seen how the basics work,

00:29:41.026 --> 00:29:41.896 A:middle
how you get up and running with

00:29:41.896 --> 00:29:42.806 A:middle
compositional layout, I'm going

00:29:42.806 --> 00:29:44.736 A:middle
to walk through how we deal with

00:29:44.856 --> 00:29:46.106 A:middle
more advanced topics.

00:29:46.106 --> 00:29:47.326 A:middle
Because there's a ton of

00:29:47.326 --> 00:29:48.936 A:middle
different ways you can do custom

00:29:48.936 --> 00:29:49.836 A:middle
layouts with compositional

00:29:49.836 --> 00:29:50.046 A:middle
layout.

00:29:50.806 --> 00:29:51.396 A:middle
All right.

00:29:51.396 --> 00:29:53.926 A:middle
So first I want to talk a bit

00:29:53.926 --> 00:29:55.476 A:middle
about supplementary items.

00:29:56.616 --> 00:29:58.126 A:middle
So CollectionView manages three

00:29:58.126 --> 00:30:00.086 A:middle
basic view class types: Your

00:29:58.126 --> 00:30:00.086 A:middle
basic view class types: Your

00:30:00.086 --> 00:30:01.486 A:middle
cells, the things you interact

00:30:01.486 --> 00:30:02.906 A:middle
with to express your model

00:30:02.906 --> 00:30:04.966 A:middle
objects; it also represents

00:30:05.136 --> 00:30:06.796 A:middle
supplementary items and

00:30:06.796 --> 00:30:07.736 A:middle
decoration items.

00:30:08.446 --> 00:30:10.236 A:middle
Now, these are meant to adorn

00:30:10.236 --> 00:30:11.296 A:middle
other parts of your layout to

00:30:11.296 --> 00:30:12.786 A:middle
give you visual cues about

00:30:12.926 --> 00:30:14.436 A:middle
content information, like maybe

00:30:14.436 --> 00:30:16.106 A:middle
a badge on a cell that says,

00:30:16.106 --> 00:30:17.076 A:middle
"Hey, you got a comment on your

00:30:17.076 --> 00:30:17.816 A:middle
tweet," or whatever.

00:30:18.946 --> 00:30:20.906 A:middle
And we see common uses for these

00:30:20.946 --> 00:30:22.886 A:middle
today with these three examples

00:30:22.966 --> 00:30:24.256 A:middle
-- badges, and headers, and

00:30:24.256 --> 00:30:24.776 A:middle
footers.

00:30:25.186 --> 00:30:26.766 A:middle
And we have support and flow

00:30:26.766 --> 00:30:27.666 A:middle
[inaudible] today with sticky

00:30:27.666 --> 00:30:28.406 A:middle
headers and footers.

00:30:28.406 --> 00:30:29.406 A:middle
And they float above that

00:30:29.406 --> 00:30:29.876 A:middle
content.

00:30:30.176 --> 00:30:32.086 A:middle
But we extend this in

00:30:32.086 --> 00:30:32.946 A:middle
compositional layout, making

00:30:32.946 --> 00:30:34.166 A:middle
this a whole lot easier.

00:30:34.616 --> 00:30:36.776 A:middle
And we can simplify this with

00:30:36.776 --> 00:30:37.836 A:middle
this notion of being able to

00:30:37.836 --> 00:30:41.026 A:middle
anchor content onto an item or

00:30:41.086 --> 00:30:42.036 A:middle
group in your layout.

00:30:42.036 --> 00:30:43.276 A:middle
It simplifies that visual

00:30:43.276 --> 00:30:44.446 A:middle
relationship, how that might

00:30:44.446 --> 00:30:44.536 A:middle
work.

00:30:44.536 --> 00:30:47.006 A:middle
All right, let's look at this

00:30:47.006 --> 00:30:47.496 A:middle
visually.

00:30:47.496 --> 00:30:50.406 A:middle
So here we can see we've got

00:30:50.576 --> 00:30:51.416 A:middle
this new type,

00:30:51.646 --> 00:30:52.876 A:middle
NSCollectionLayoutAnchor.

00:30:53.586 --> 00:30:54.986 A:middle
And here we specify the

00:30:55.186 --> 00:30:56.536 A:middle
relationship between these two

00:30:56.536 --> 00:30:56.896 A:middle
types.

00:30:56.896 --> 00:30:58.066 A:middle
So our supplementary is going to

00:30:58.066 --> 00:31:00.216 A:middle
be anchored relative to the

00:30:58.066 --> 00:31:00.216 A:middle
be anchored relative to the

00:31:00.216 --> 00:31:02.016 A:middle
geometry of a host space, an

00:31:02.016 --> 00:31:03.836 A:middle
item or group in these kinds of

00:31:03.836 --> 00:31:04.326 A:middle
ways.

00:31:04.986 --> 00:31:06.646 A:middle
And it's super easy to reason

00:31:06.646 --> 00:31:06.956 A:middle
about.

00:31:09.466 --> 00:31:11.766 A:middle
Okay. So here we see we have

00:31:11.766 --> 00:31:13.726 A:middle
NSCollectionLayoutAnchor we

00:31:13.726 --> 00:31:14.276 A:middle
create right away.

00:31:14.276 --> 00:31:15.376 A:middle
And we specify the edges.

00:31:15.376 --> 00:31:16.716 A:middle
We want this item to be pinned

00:31:16.716 --> 00:31:19.146 A:middle
to the top trailing side of that

00:31:19.146 --> 00:31:20.156 A:middle
particular cell.

00:31:20.836 --> 00:31:22.656 A:middle
And we want it to poke outside

00:31:23.076 --> 00:31:24.106 A:middle
of that geometry a little bit.

00:31:24.106 --> 00:31:25.056 A:middle
And we see that with fractional

00:31:25.056 --> 00:31:25.276 A:middle
height.

00:31:27.106 --> 00:31:28.836 A:middle
Okay. So here we can see the

00:31:28.836 --> 00:31:29.416 A:middle
device.

00:31:29.416 --> 00:31:30.666 A:middle
So we've got these badges on

00:31:30.666 --> 00:31:31.066 A:middle
there, right?

00:31:31.606 --> 00:31:33.096 A:middle
With my wonderful design skills.

00:31:33.096 --> 00:31:34.396 A:middle
We've got a four-item grid with

00:31:34.846 --> 00:31:36.176 A:middle
those wonderful corn flower blue

00:31:36.176 --> 00:31:36.696 A:middle
cells.

00:31:37.296 --> 00:31:38.476 A:middle
And we see here that some of

00:31:38.476 --> 00:31:39.436 A:middle
these items have these little

00:31:39.436 --> 00:31:40.246 A:middle
notifiers on them, right,

00:31:40.246 --> 00:31:41.146 A:middle
letting them know, "Hey, you got

00:31:41.146 --> 00:31:42.196 A:middle
something to pay attention to

00:31:42.196 --> 00:31:42.396 A:middle
here."

00:31:43.576 --> 00:31:45.626 A:middle
And with this, they kind of poke

00:31:45.626 --> 00:31:47.126 A:middle
outside that geometry a little

00:31:47.126 --> 00:31:47.456 A:middle
bit, right?

00:31:47.676 --> 00:31:48.486 A:middle
They're not really inside the

00:31:48.486 --> 00:31:49.676 A:middle
geometry of the cell itself.

00:31:50.376 --> 00:31:51.486 A:middle
Let's go back to the slides real

00:31:51.486 --> 00:31:52.686 A:middle
quick and walk through this.

00:31:53.076 --> 00:31:54.596 A:middle
All right.

00:31:54.596 --> 00:31:56.156 A:middle
So that fractionalOffset is what

00:31:56.156 --> 00:31:57.636 A:middle
buys us the ability to poke

00:31:57.636 --> 00:31:58.306 A:middle
outside a little bit.

00:31:58.306 --> 00:31:59.096 A:middle
We're going to move over

00:31:59.096 --> 00:32:01.406 A:middle
fractionally 30% in the positive

00:31:59.096 --> 00:32:01.406 A:middle
fractionally 30% in the positive

00:32:01.406 --> 00:32:04.016 A:middle
X and then up in the minus Y 30%

00:32:04.016 --> 00:32:04.436 A:middle
as well.

00:32:04.916 --> 00:32:06.646 A:middle
And then we see we defined the

00:32:06.646 --> 00:32:07.956 A:middle
CollectionLayout

00:32:07.956 --> 00:32:09.566 A:middle
SupplementaryItem with a

00:32:09.566 --> 00:32:11.156 A:middle
badgeSize and elementKind.

00:32:11.156 --> 00:32:12.046 A:middle
So we're going to refer back to

00:32:12.046 --> 00:32:12.766 A:middle
the view class for

00:32:12.766 --> 00:32:13.606 A:middle
CollectionView with that

00:32:13.666 --> 00:32:14.846 A:middle
registered supplementary type.

00:32:15.486 --> 00:32:17.426 A:middle
And then we specify the

00:32:17.426 --> 00:32:18.976 A:middle
container's anchor, specifying

00:32:18.976 --> 00:32:19.796 A:middle
how it's going to relate.

00:32:19.796 --> 00:32:21.456 A:middle
So now that we have this

00:32:21.496 --> 00:32:22.856 A:middle
definition of our supplementary,

00:32:22.856 --> 00:32:24.026 A:middle
we need to associate it with

00:32:24.026 --> 00:32:24.516 A:middle
something.

00:32:24.786 --> 00:32:26.086 A:middle
And that needs to be associated

00:32:26.416 --> 00:32:28.476 A:middle
with an item, a cell.

00:32:29.026 --> 00:32:30.226 A:middle
So in this case we're going to

00:32:30.226 --> 00:32:31.686 A:middle
initialize it with an extended

00:32:31.686 --> 00:32:33.346 A:middle
variant of initializer that

00:32:33.346 --> 00:32:34.456 A:middle
takes an array of

00:32:34.456 --> 00:32:35.566 A:middle
supplementaries.

00:32:35.566 --> 00:32:35.976 A:middle
And that's it.

00:32:39.286 --> 00:32:39.476 A:middle
All right.

00:32:39.476 --> 00:32:40.536 A:middle
So what about headers and

00:32:40.606 --> 00:32:41.146 A:middle
footers?

00:32:41.486 --> 00:32:43.166 A:middle
So headers and footers are just

00:32:43.166 --> 00:32:44.696 A:middle
a tad bit different than

00:32:44.696 --> 00:32:45.886 A:middle
supplementaries for these items.

00:32:45.886 --> 00:32:47.326 A:middle
When you think about the content

00:32:47.326 --> 00:32:48.776 A:middle
that you want to adorn with a

00:32:48.776 --> 00:32:50.566 A:middle
supplementary header and footer,

00:32:51.276 --> 00:32:52.226 A:middle
you really don't want that

00:32:52.226 --> 00:32:53.106 A:middle
supplementary heard and footer

00:32:53.106 --> 00:32:54.726 A:middle
to occlude the content; you want

00:32:54.726 --> 00:32:56.596 A:middle
to extend that content area so

00:32:56.596 --> 00:32:58.096 A:middle
you can see the content itself.

00:32:59.186 --> 00:33:00.466 A:middle
So in this instance we have a

00:32:59.186 --> 00:33:00.466 A:middle
So in this instance we have a

00:33:00.466 --> 00:33:01.666 A:middle
different variation of

00:33:01.666 --> 00:33:02.926 A:middle
supplementary called boundary

00:33:02.926 --> 00:33:03.886 A:middle
supplementaries.

00:33:03.946 --> 00:33:04.936 A:middle
We're going to bin it to the

00:33:04.936 --> 00:33:06.346 A:middle
boundaries of that supplementary

00:33:06.346 --> 00:33:07.426 A:middle
-- of that host geometry.

00:33:08.636 --> 00:33:09.706 A:middle
Now, we can do these boundary

00:33:09.706 --> 00:33:11.136 A:middle
supplementary items for sections

00:33:11.136 --> 00:33:13.316 A:middle
or the entire layout, and we can

00:33:13.316 --> 00:33:14.716 A:middle
pin them to this whole balance,

00:33:14.716 --> 00:33:16.056 A:middle
which do some pretty cool stuff.

00:33:16.726 --> 00:33:17.226 A:middle
All right.

00:33:17.226 --> 00:33:18.196 A:middle
So I'm going to switch back over

00:33:18.196 --> 00:33:19.226 A:middle
to the device here hopefully.

00:33:20.726 --> 00:33:21.856 A:middle
There we go.

00:33:22.106 --> 00:33:22.366 A:middle
All right.

00:33:22.366 --> 00:33:24.586 A:middle
Let's see what this looks like.

00:33:25.146 --> 00:33:26.836 A:middle
So pretty straightforward

00:33:26.836 --> 00:33:27.206 A:middle
example.

00:33:27.206 --> 00:33:29.146 A:middle
Here we have a pinned section

00:33:29.146 --> 00:33:30.136 A:middle
headers and footers.

00:33:30.616 --> 00:33:31.676 A:middle
And we scroll and everything

00:33:31.676 --> 00:33:33.926 A:middle
looks just like we expect.

00:33:34.186 --> 00:33:34.786 A:middle
Look at the code.

00:33:36.156 --> 00:33:37.556 A:middle
All right.

00:33:37.556 --> 00:33:38.416 A:middle
So here's what we got.

00:33:38.716 --> 00:33:40.296 A:middle
So it's similar to what we say

00:33:40.296 --> 00:33:41.096 A:middle
just a minute ago with the

00:33:41.096 --> 00:33:42.326 A:middle
BoundarySupplementaryItems,

00:33:42.786 --> 00:33:44.016 A:middle
except now rather than that

00:33:44.086 --> 00:33:45.636 A:middle
container anchor, we see we have

00:33:45.636 --> 00:33:46.726 A:middle
alignment property.

00:33:47.706 --> 00:33:49.896 A:middle
And here we specify top for the

00:33:49.896 --> 00:33:50.896 A:middle
header and bottom for the

00:33:50.896 --> 00:33:51.116 A:middle
footer.

00:33:51.116 --> 00:33:52.316 A:middle
We want to go to the top and the

00:33:52.316 --> 00:33:53.296 A:middle
bottom of that section of

00:33:53.296 --> 00:33:53.786 A:middle
geometry.

00:33:54.456 --> 00:33:55.806 A:middle
And to make sure that header

00:33:55.806 --> 00:33:57.566 A:middle
kind of floats and stays pinned

00:33:57.616 --> 00:33:58.876 A:middle
to the content area where it's

00:33:58.876 --> 00:34:00.616 A:middle
at in the section, we just

00:33:58.876 --> 00:34:00.616 A:middle
at in the section, we just

00:34:00.616 --> 00:34:02.046 A:middle
specify PinToVisibleBounds.

00:34:02.306 --> 00:34:04.526 A:middle
And then we need to associate

00:34:04.526 --> 00:34:05.516 A:middle
the header and footer with the

00:34:05.516 --> 00:34:06.466 A:middle
geometry it's going to be in,

00:34:06.466 --> 00:34:07.256 A:middle
and that's the section.

00:34:07.446 --> 00:34:08.315 A:middle
We just do that with the

00:34:08.315 --> 00:34:09.806 A:middle
BoundarySupplementaryItems

00:34:09.806 --> 00:34:10.016 A:middle
array.

00:34:11.016 --> 00:34:11.735 A:middle
Pretty straightforward.

00:34:12.886 --> 00:34:13.786 A:middle
All right.

00:34:13.786 --> 00:34:15.196 A:middle
So by now you've played around

00:34:15.196 --> 00:34:17.255 A:middle
with the brand new iOS 13 card

00:34:17.255 --> 00:34:18.766 A:middle
presentation, this whole card

00:34:19.156 --> 00:34:20.416 A:middle
design language all throughout

00:34:20.416 --> 00:34:20.976 A:middle
the system.

00:34:21.936 --> 00:34:23.666 A:middle
And we see this in scrolling

00:34:23.826 --> 00:34:26.156 A:middle
UI's as well where all kinds of

00:34:26.156 --> 00:34:27.306 A:middle
content is grouped together

00:34:27.366 --> 00:34:28.815 A:middle
logically with cards.

00:34:29.136 --> 00:34:30.556 A:middle
And this is a natural fit for

00:34:30.556 --> 00:34:31.426 A:middle
CollectionView because we always

00:34:31.426 --> 00:34:32.556 A:middle
had support for notions of

00:34:32.556 --> 00:34:33.536 A:middle
decoration views.

00:34:33.536 --> 00:34:35.545 A:middle
Well, in the past you had to do

00:34:35.545 --> 00:34:36.446 A:middle
the math yourself.

00:34:36.446 --> 00:34:37.156 A:middle
Well, now we've made it a lot

00:34:37.156 --> 00:34:38.735 A:middle
simpler with compositional

00:34:38.735 --> 00:34:39.056 A:middle
layout.

00:34:39.666 --> 00:34:41.166 A:middle
And we support this with a

00:34:41.196 --> 00:34:42.706 A:middle
CollectionLayoutDecorationItem.

00:34:43.025 --> 00:34:43.696 A:middle
You just create it with an

00:34:43.696 --> 00:34:44.976 A:middle
element kind and you're done.

00:34:45.746 --> 00:34:47.436 A:middle
This is intended to be used to

00:34:47.436 --> 00:34:49.045 A:middle
have a view that's behind the

00:34:49.045 --> 00:34:50.485 A:middle
section content itself to give

00:34:50.485 --> 00:34:51.866 A:middle
you that nice visual grouping.

00:34:52.646 --> 00:34:54.315 A:middle
And to construct it, there's

00:34:54.315 --> 00:34:55.206 A:middle
just one line of code.

00:34:55.206 --> 00:34:55.996 A:middle
And then to add it to the

00:34:55.996 --> 00:34:57.896 A:middle
section, you just want to

00:34:58.116 --> 00:34:59.916 A:middle
specify the items and off you

00:34:59.916 --> 00:35:00.116 A:middle
go.

00:34:59.916 --> 00:35:00.116 A:middle
go.

00:35:01.076 --> 00:35:01.696 A:middle
Here we go.

00:35:02.256 --> 00:35:02.456 A:middle
All right.

00:35:02.456 --> 00:35:03.816 A:middle
So let's take a quick peek and

00:35:03.816 --> 00:35:04.446 A:middle
see what this looks like.

00:35:04.876 --> 00:35:06.236 A:middle
All right.

00:35:06.236 --> 00:35:08.586 A:middle
Pretty straightforward.

00:35:08.976 --> 00:35:09.906 A:middle
So there's our list with

00:35:09.906 --> 00:35:11.196 A:middle
multiple sections, and we have

00:35:11.196 --> 00:35:13.286 A:middle
our decoration views with just a

00:35:13.286 --> 00:35:14.096 A:middle
single line of code.

00:35:14.226 --> 00:35:14.946 A:middle
So pretty simple.

00:35:17.756 --> 00:35:18.536 A:middle
All right.

00:35:18.586 --> 00:35:20.306 A:middle
So here's a topic near and dear

00:35:20.306 --> 00:35:21.356 A:middle
to my heart: Estimated

00:35:21.356 --> 00:35:22.176 A:middle
cell-sizing.

00:35:23.466 --> 00:35:25.436 A:middle
So in iOS 13 we spent a lot of

00:35:25.436 --> 00:35:26.966 A:middle
time making this fast and

00:35:27.016 --> 00:35:27.836 A:middle
accurate.

00:35:29.436 --> 00:35:30.806 A:middle
And compositional layout extends

00:35:30.806 --> 00:35:31.766 A:middle
the notion of estimated

00:35:31.766 --> 00:35:33.896 A:middle
cell-sizing in very specific

00:35:33.966 --> 00:35:34.406 A:middle
ways.

00:35:34.406 --> 00:35:35.806 A:middle
It allows you to do per-axis

00:35:35.806 --> 00:35:36.616 A:middle
cell-sizing.

00:35:36.616 --> 00:35:37.816 A:middle
And this is super important.

00:35:38.496 --> 00:35:39.486 A:middle
Because oftentimes the view

00:35:39.486 --> 00:35:40.366 A:middle
hierarchy that you want to get

00:35:40.366 --> 00:35:41.606 A:middle
the content of when you render

00:35:41.606 --> 00:35:43.086 A:middle
the content, you don't want to

00:35:43.086 --> 00:35:44.736 A:middle
necessarily be fully constrained

00:35:44.866 --> 00:35:47.086 A:middle
and wild on all the axes and

00:35:47.086 --> 00:35:48.546 A:middle
grow on the X and grow on the Y.

00:35:49.066 --> 00:35:50.286 A:middle
You might know how wide the

00:35:50.286 --> 00:35:51.296 A:middle
thing is, for example.

00:35:52.216 --> 00:35:53.716 A:middle
An example of our headers and

00:35:53.716 --> 00:35:55.336 A:middle
footers, we might know that we

00:35:55.336 --> 00:35:57.316 A:middle
want it to be exactly the width

00:35:57.316 --> 00:35:58.106 A:middle
of the CollectionView.

00:35:58.266 --> 00:35:59.546 A:middle
But, you know, we want the

00:35:59.546 --> 00:36:00.756 A:middle
height to vary a little bit.

00:35:59.546 --> 00:36:00.756 A:middle
height to vary a little bit.

00:36:01.386 --> 00:36:02.576 A:middle
So I'm going to show an example

00:36:02.576 --> 00:36:03.466 A:middle
of this real quick.

00:36:03.466 --> 00:36:04.376 A:middle
And we've already been in this

00:36:04.376 --> 00:36:04.996 A:middle
code before.

00:36:05.636 --> 00:36:07.796 A:middle
So here we see our very familiar

00:36:07.796 --> 00:36:10.206 A:middle
sections, headers and footers.

00:36:10.206 --> 00:36:11.216 A:middle
I'm going to pull down here and

00:36:11.216 --> 00:36:13.846 A:middle
go to my text size widget and

00:36:13.846 --> 00:36:14.566 A:middle
ramp it up.

00:36:15.896 --> 00:36:16.286 A:middle
All right.

00:36:16.286 --> 00:36:17.716 A:middle
So here everything's just

00:36:17.716 --> 00:36:18.326 A:middle
adapted.

00:36:18.456 --> 00:36:19.336 A:middle
It's done the right thing,

00:36:19.506 --> 00:36:19.746 A:middle
right?

00:36:20.096 --> 00:36:21.336 A:middle
Now, how do we do this?

00:36:21.406 --> 00:36:21.926 A:middle
All right.

00:36:21.926 --> 00:36:23.756 A:middle
So here we can see that the

00:36:23.756 --> 00:36:25.306 A:middle
height dimension's estimated.

00:36:25.656 --> 00:36:26.616 A:middle
That's all we did differently

00:36:26.616 --> 00:36:26.936 A:middle
here, right?

00:36:26.936 --> 00:36:28.226 A:middle
We specified that we knew

00:36:28.226 --> 00:36:29.606 A:middle
exactly how wide this thing's

00:36:29.606 --> 00:36:31.026 A:middle
going to be, but we don't know

00:36:31.026 --> 00:36:31.676 A:middle
about the height.

00:36:31.676 --> 00:36:32.856 A:middle
We just estimate it to be 44

00:36:32.856 --> 00:36:33.426 A:middle
points.

00:36:34.046 --> 00:36:35.316 A:middle
So as the content's rendered, we

00:36:35.686 --> 00:36:36.436 A:middle
have a better idea.

00:36:36.436 --> 00:36:37.456 A:middle
We can invalidate the layout

00:36:37.456 --> 00:36:38.096 A:middle
automatically.

00:36:38.096 --> 00:36:39.026 A:middle
And this happens all

00:36:39.396 --> 00:36:40.466 A:middle
automatically, makes it really

00:36:40.466 --> 00:36:42.046 A:middle
easy to support dynamic type in

00:36:42.046 --> 00:36:43.356 A:middle
your applications, even with

00:36:43.356 --> 00:36:44.446 A:middle
supplementaries and headers and

00:36:44.446 --> 00:36:44.776 A:middle
footers.

00:36:44.776 --> 00:36:46.336 A:middle
So this is -- this is pretty

00:36:46.336 --> 00:36:46.536 A:middle
great.

00:36:48.906 --> 00:36:49.256 A:middle
All right.

00:36:49.256 --> 00:36:49.926 A:middle
So now we're getting to some

00:36:49.926 --> 00:36:50.636 A:middle
really fun stuff.

00:36:50.636 --> 00:36:52.076 A:middle
So what about nesting things?

00:36:52.186 --> 00:36:53.386 A:middle
So we talked about this notion

00:36:53.386 --> 00:36:54.606 A:middle
of composition early on.

00:36:54.606 --> 00:36:56.066 A:middle
Well, let's talk about how that

00:36:56.066 --> 00:36:56.646 A:middle
works.

00:36:57.436 --> 00:37:00.856 A:middle
So the core layout thing inside

00:36:57.436 --> 00:37:00.856 A:middle
So the core layout thing inside

00:37:00.856 --> 00:37:01.606 A:middle
of compositional layout is

00:37:01.636 --> 00:37:02.226 A:middle
layout group.

00:37:02.766 --> 00:37:04.416 A:middle
And layout group is actually a

00:37:04.416 --> 00:37:05.556 A:middle
subtype of

00:37:05.556 --> 00:37:06.766 A:middle
NSCollectionLayoutItem.

00:37:07.506 --> 00:37:09.006 A:middle
Now, because this is a

00:37:09.086 --> 00:37:11.186 A:middle
relationship, when you specify

00:37:11.186 --> 00:37:12.966 A:middle
the items that are in a layout

00:37:12.966 --> 00:37:14.336 A:middle
group, you can also have other

00:37:14.336 --> 00:37:14.826 A:middle
groups.

00:37:14.826 --> 00:37:15.736 A:middle
So you can nest these.

00:37:15.736 --> 00:37:17.186 A:middle
And there's no limit to this

00:37:17.226 --> 00:37:18.096 A:middle
particular nesting, it's

00:37:18.096 --> 00:37:18.636 A:middle
arbitrary.

00:37:18.786 --> 00:37:21.086 A:middle
And because we have this, it

00:37:21.086 --> 00:37:23.356 A:middle
unlocks a ton of interesting new

00:37:23.486 --> 00:37:24.146 A:middle
designs.

00:37:25.456 --> 00:37:27.076 A:middle
Okay. So in this example we see

00:37:27.326 --> 00:37:29.036 A:middle
a group is compromised of three

00:37:29.036 --> 00:37:29.456 A:middle
items.

00:37:30.156 --> 00:37:32.006 A:middle
And we see this big old monster

00:37:32.006 --> 00:37:33.716 A:middle
on the leading side and it has a

00:37:33.716 --> 00:37:36.326 A:middle
vertical group on the trailing

00:37:36.326 --> 00:37:37.246 A:middle
side, right?

00:37:37.646 --> 00:37:38.676 A:middle
So how would we reason about

00:37:38.676 --> 00:37:39.436 A:middle
this in code?

00:37:43.906 --> 00:37:44.676 A:middle
All right, so this is pretty

00:37:44.676 --> 00:37:45.366 A:middle
straightforward, right?

00:37:45.366 --> 00:37:46.646 A:middle
We had this horizontal group on

00:37:46.646 --> 00:37:47.686 A:middle
the bottom here.

00:37:47.776 --> 00:37:49.546 A:middle
And its subitems are the

00:37:49.546 --> 00:37:52.026 A:middle
leadingItem itself, right, and a

00:37:52.026 --> 00:37:52.966 A:middle
trailingGroup.

00:37:52.966 --> 00:37:54.236 A:middle
So it's very easy to reason

00:37:54.236 --> 00:37:55.186 A:middle
about these kinds of things.

00:37:55.186 --> 00:37:56.226 A:middle
We can see right away what we're

00:37:56.226 --> 00:37:56.786 A:middle
trying to do.

00:37:56.786 --> 00:37:57.856 A:middle
And we just compose in

00:37:57.856 --> 00:37:59.416 A:middle
additional stuff and we get

00:37:59.416 --> 00:38:01.126 A:middle
these great layouts.

00:37:59.416 --> 00:38:01.126 A:middle
these great layouts.

00:38:02.056 --> 00:38:03.136 A:middle
All right.

00:38:03.176 --> 00:38:05.106 A:middle
So nested groups are pretty

00:38:05.106 --> 00:38:05.406 A:middle
cool.

00:38:05.406 --> 00:38:07.256 A:middle
But what about -- what about

00:38:07.256 --> 00:38:08.446 A:middle
nesting CollectionViews?

00:38:08.916 --> 00:38:10.266 A:middle
All right.

00:38:10.266 --> 00:38:14.296 A:middle
So here we see the App Store,

00:38:14.656 --> 00:38:16.756 A:middle
the refresh for iOS 13.

00:38:17.516 --> 00:38:18.396 A:middle
And I don't know about you, but

00:38:18.396 --> 00:38:19.146 A:middle
when I was a third-party

00:38:19.146 --> 00:38:20.116 A:middle
developer, if I saw this

00:38:20.606 --> 00:38:21.826 A:middle
particular design handed to me,

00:38:21.826 --> 00:38:22.776 A:middle
I'd have a heart attack.

00:38:22.846 --> 00:38:24.116 A:middle
This is complicated stuff.

00:38:24.116 --> 00:38:25.916 A:middle
This can be challenging.

00:38:25.916 --> 00:38:26.926 A:middle
There's a lot of bookkeeping

00:38:26.926 --> 00:38:27.496 A:middle
involved.

00:38:27.596 --> 00:38:28.436 A:middle
And -- but it's a common

00:38:28.436 --> 00:38:28.776 A:middle
pattern.

00:38:28.776 --> 00:38:30.376 A:middle
We see it all the time in

00:38:30.526 --> 00:38:32.236 A:middle
today's applications.

00:38:32.656 --> 00:38:34.686 A:middle
And to make this perform well

00:38:34.686 --> 00:38:36.196 A:middle
and look great is a bit of a

00:38:36.196 --> 00:38:36.656 A:middle
challenge.

00:38:36.656 --> 00:38:37.696 A:middle
Well, compositional layout

00:38:37.696 --> 00:38:39.366 A:middle
solves this with one line of

00:38:39.366 --> 00:38:39.456 A:middle
code.

00:38:40.366 --> 00:38:41.316 A:middle
And I want to show you a demo of

00:38:41.316 --> 00:38:41.836 A:middle
this right now.

00:38:42.516 --> 00:38:47.500 A:middle
[ Applause ]

00:38:52.306 --> 00:38:54.246 A:middle
Okay. So here we have the same

00:38:54.246 --> 00:38:55.366 A:middle
group I had from the prior one.

00:38:55.366 --> 00:38:56.146 A:middle
But we notice the group's a

00:38:56.146 --> 00:38:57.126 A:middle
little bit squishier, right?

00:38:57.126 --> 00:38:58.846 A:middle
It's about 80% of the

00:38:58.846 --> 00:38:59.586 A:middle
container's width.

00:38:59.586 --> 00:39:01.376 A:middle
And this is a vertically

00:38:59.586 --> 00:39:01.376 A:middle
And this is a vertically

00:39:01.376 --> 00:39:02.376 A:middle
scrolling CollectionView.

00:39:02.376 --> 00:39:03.706 A:middle
It's got five sections on it.

00:39:04.576 --> 00:39:05.946 A:middle
But each section scrolls

00:39:05.946 --> 00:39:07.456 A:middle
orthogonally with that single

00:39:07.456 --> 00:39:07.876 A:middle
line of code.

00:39:08.516 --> 00:39:15.396 A:middle
[ Applause ]

00:39:15.896 --> 00:39:16.066 A:middle
All right.

00:39:16.066 --> 00:39:17.316 A:middle
And we've got a ton of different

00:39:17.316 --> 00:39:18.086 A:middle
variations of this.

00:39:18.086 --> 00:39:18.646 A:middle
And bear with me.

00:39:18.646 --> 00:39:19.536 A:middle
I'm going to switch around here.

00:39:19.596 --> 00:39:19.836 A:middle
All right.

00:39:19.836 --> 00:39:21.846 A:middle
So we've got five different ways

00:39:21.846 --> 00:39:22.886 A:middle
to do this, right, including the

00:39:22.886 --> 00:39:24.206 A:middle
none case, which I don't want

00:39:24.206 --> 00:39:24.416 A:middle
that.

00:39:24.996 --> 00:39:26.626 A:middle
We have two continuous cases.

00:39:26.876 --> 00:39:28.576 A:middle
And then we have three paging

00:39:28.576 --> 00:39:29.176 A:middle
cases.

00:39:29.626 --> 00:39:30.406 A:middle
All right.

00:39:30.406 --> 00:39:31.166 A:middle
So I'm going to walk through

00:39:31.166 --> 00:39:34.666 A:middle
each one of these in kind here.

00:39:36.256 --> 00:39:37.016 A:middle
All right.

00:39:37.016 --> 00:39:38.396 A:middle
Go to our orthogonal scrolling

00:39:39.136 --> 00:39:40.756 A:middle
section behaviors demo.

00:39:41.396 --> 00:39:42.386 A:middle
And continuous is just like

00:39:42.386 --> 00:39:42.956 A:middle
you'd expect it.

00:39:42.956 --> 00:39:44.696 A:middle
This is a very simple,

00:39:44.696 --> 00:39:46.086 A:middle
straightforward scroll view-like

00:39:46.086 --> 00:39:46.896 A:middle
behavior, you know?

00:39:46.896 --> 00:39:48.236 A:middle
You -- you had me at bounce,

00:39:48.236 --> 00:39:48.376 A:middle
right?

00:39:48.376 --> 00:39:51.446 A:middle
It's got that great -- gosh, I

00:39:51.446 --> 00:39:52.506 A:middle
could do this for hours, right?

00:39:52.986 --> 00:39:54.226 A:middle
All right.

00:39:54.226 --> 00:39:55.466 A:middle
So that's just the normal scroll

00:39:55.466 --> 00:39:56.006 A:middle
view behavior.

00:39:56.006 --> 00:39:57.186 A:middle
But we have an additional one

00:39:57.186 --> 00:39:58.846 A:middle
for this continuous, you know,

00:39:58.846 --> 00:40:00.516 A:middle
fluid kind of scrolling that we

00:39:58.846 --> 00:40:00.516 A:middle
fluid kind of scrolling that we

00:40:00.516 --> 00:40:01.996 A:middle
call continuous group-leading

00:40:01.996 --> 00:40:02.316 A:middle
boundary.

00:40:02.316 --> 00:40:03.356 A:middle
And that's a mouthful but it's

00:40:03.356 --> 00:40:04.066 A:middle
pretty descriptive.

00:40:04.476 --> 00:40:05.696 A:middle
So as we scroll and we impart

00:40:05.696 --> 00:40:07.836 A:middle
volume to it, we naturally come

00:40:07.836 --> 00:40:09.426 A:middle
to rest at that group's

00:40:09.426 --> 00:40:10.976 A:middle
semantic-leading boundary.

00:40:11.516 --> 00:40:15.286 A:middle
[ Applause ]

00:40:15.786 --> 00:40:16.966 A:middle
So you people that clap have

00:40:17.006 --> 00:40:18.496 A:middle
done targeted content offset or

00:40:18.496 --> 00:40:19.716 A:middle
proposed offset before and you

00:40:19.716 --> 00:40:20.356 A:middle
know it's a pain.

00:40:20.566 --> 00:40:21.696 A:middle
All right.

00:40:21.696 --> 00:40:23.016 A:middle
So with the addition of the

00:40:23.016 --> 00:40:24.926 A:middle
continuous behaviors, we have

00:40:24.926 --> 00:40:26.216 A:middle
some paging behaviors.

00:40:26.216 --> 00:40:27.276 A:middle
And this gets really cool.

00:40:27.276 --> 00:40:29.316 A:middle
So this is just like the normal

00:40:29.316 --> 00:40:30.856 A:middle
scroll view paging behavior, and

00:40:30.856 --> 00:40:32.216 A:middle
we named this behavior paging.

00:40:33.266 --> 00:40:33.696 A:middle
Pretty creative.

00:40:34.386 --> 00:40:35.526 A:middle
And here we can see no matter

00:40:35.526 --> 00:40:36.866 A:middle
how much velocity the user

00:40:36.866 --> 00:40:38.716 A:middle
imparts, we just get one page of

00:40:38.716 --> 00:40:39.216 A:middle
content.

00:40:39.216 --> 00:40:40.826 A:middle
And this page is defined as the

00:40:40.826 --> 00:40:42.596 A:middle
default scroll view behavior

00:40:42.596 --> 00:40:44.206 A:middle
where it's the width of the

00:40:44.206 --> 00:40:44.796 A:middle
CollectionView.

00:40:46.776 --> 00:40:48.266 A:middle
We have two more variants to

00:40:48.266 --> 00:40:48.866 A:middle
this, okay?

00:40:48.866 --> 00:40:50.596 A:middle
And as you can probably intuit,

00:40:50.596 --> 00:40:52.016 A:middle
we have this notion of group

00:40:52.106 --> 00:40:52.636 A:middle
paging.

00:40:53.316 --> 00:40:54.526 A:middle
So now we have the semantic

00:40:54.526 --> 00:40:55.906 A:middle
notion of what a group is, we

00:40:55.906 --> 00:40:57.786 A:middle
can make the page size be the

00:40:57.786 --> 00:40:58.606 A:middle
size of the group.

00:40:59.646 --> 00:41:00.486 A:middle
This gives you a really nice

00:40:59.646 --> 00:41:00.486 A:middle
This gives you a really nice

00:41:00.536 --> 00:41:01.056 A:middle
behavior.

00:41:01.566 --> 00:41:01.696 A:middle
Yeah.

00:41:03.121 --> 00:41:05.121 A:middle
[ Applause ]

00:41:05.226 --> 00:41:06.276 A:middle
Where you can automatically get

00:41:06.306 --> 00:41:07.996 A:middle
that no occlusion thing going

00:41:07.996 --> 00:41:08.976 A:middle
on, right, where your content's

00:41:08.976 --> 00:41:10.116 A:middle
always front and centered.

00:41:10.356 --> 00:41:12.446 A:middle
And then the final one is group

00:41:12.446 --> 00:41:13.226 A:middle
paging centered.

00:41:13.226 --> 00:41:14.626 A:middle
It's just like group paging, but

00:41:15.426 --> 00:41:16.506 A:middle
now we've centered that group

00:41:16.506 --> 00:41:16.976 A:middle
for you automatically.

00:41:17.516 --> 00:41:20.546 A:middle
[ Applause ]

00:41:21.046 --> 00:41:21.836 A:middle
Yeah, it's pretty cool, right?

00:41:22.636 --> 00:41:23.756 A:middle
And that gives you that great

00:41:23.756 --> 00:41:24.716 A:middle
peekaboo effect, right, where

00:41:24.716 --> 00:41:25.846 A:middle
you can see the content leading

00:41:25.846 --> 00:41:26.666 A:middle
and trailing on the side, you

00:41:26.666 --> 00:41:29.666 A:middle
know exactly what's going on.

00:41:31.056 --> 00:41:32.576 A:middle
All right, so that's a kind of

00:41:32.576 --> 00:41:33.766 A:middle
an advanced tour of some of the

00:41:33.766 --> 00:41:34.706 A:middle
additional features in

00:41:34.706 --> 00:41:36.156 A:middle
compositional app.

00:41:36.156 --> 00:41:36.536 A:middle
There's a lot more.

00:41:36.536 --> 00:41:38.946 A:middle
Grab the SDK and check it out.

00:41:40.296 --> 00:41:44.606 A:middle
So at Apple, the notion of

00:41:44.606 --> 00:41:46.746 A:middle
dealing with collaboration is

00:41:46.746 --> 00:41:48.026 A:middle
super duper important to us.

00:41:48.026 --> 00:41:49.496 A:middle
We have to work with other teams

00:41:49.496 --> 00:41:51.326 A:middle
all over the company to solve

00:41:51.326 --> 00:41:51.816 A:middle
problems.

00:41:53.036 --> 00:41:56.526 A:middle
And as a framework engineer,

00:41:56.526 --> 00:41:57.846 A:middle
it's super duper important for

00:41:57.916 --> 00:41:59.836 A:middle
us to deal all the different

00:41:59.836 --> 00:42:00.776 A:middle
teams in the company to make

00:41:59.836 --> 00:42:00.776 A:middle
teams in the company to make

00:42:00.776 --> 00:42:01.986 A:middle
sure we know what their needs

00:42:01.986 --> 00:42:04.196 A:middle
are for new framework features.

00:42:05.256 --> 00:42:07.616 A:middle
And one of these teams, the App

00:42:07.616 --> 00:42:09.196 A:middle
Store team had a new redesign

00:42:09.196 --> 00:42:10.526 A:middle
coming up for iOS 13.

00:42:10.526 --> 00:42:11.466 A:middle
They really wanted to simplify

00:42:11.466 --> 00:42:12.566 A:middle
their code base quite a bit.

00:42:12.566 --> 00:42:14.616 A:middle
So as part of that conversation,

00:42:15.256 --> 00:42:16.596 A:middle
we talked about compositional

00:42:16.596 --> 00:42:16.836 A:middle
layout.

00:42:16.836 --> 00:42:18.926 A:middle
And they were real excited about

00:42:18.926 --> 00:42:20.206 A:middle
it, went through a bunch of

00:42:20.436 --> 00:42:20.846 A:middle
code.

00:42:20.846 --> 00:42:22.086 A:middle
So for this, I'm going to bring

00:42:22.086 --> 00:42:23.816 A:middle
up one of our adopters from the

00:42:23.816 --> 00:42:25.906 A:middle
App Store team, Dersu Abolfathi.

00:42:26.276 --> 00:42:26.646 A:middle
Dersu?

00:42:27.516 --> 00:42:32.766 A:middle
[ Applause ]

00:42:33.266 --> 00:42:33.766 A:middle
&gt;&gt; Dersu Abolfathi: Thank you,

00:42:33.766 --> 00:42:34.086 A:middle
Steve.

00:42:35.266 --> 00:42:36.806 A:middle
The App Store is a destination

00:42:36.906 --> 00:42:38.386 A:middle
for millions of customers

00:42:38.486 --> 00:42:39.746 A:middle
looking for apps that help them

00:42:39.746 --> 00:42:40.896 A:middle
get the most out of their

00:42:40.896 --> 00:42:41.506 A:middle
devices.

00:42:42.896 --> 00:42:44.076 A:middle
Many of you will visit the App

00:42:44.076 --> 00:42:45.976 A:middle
Store on a daily basis, so the

00:42:45.976 --> 00:42:47.236 A:middle
content needs to be rich,

00:42:48.046 --> 00:42:50.176 A:middle
engaging, and dynamic.

00:42:51.666 --> 00:42:53.486 A:middle
CollectionView plays a key role

00:42:53.486 --> 00:42:55.646 A:middle
in delivering that experience.

00:42:57.876 --> 00:42:59.606 A:middle
So here's the App Store.

00:43:00.536 --> 00:43:02.586 A:middle
If you wanted to build UI like

00:43:02.646 --> 00:43:05.276 A:middle
this today using just flow

00:43:05.276 --> 00:43:07.396 A:middle
layout, you'd probably start

00:43:07.396 --> 00:43:08.556 A:middle
with a CollectionView that

00:43:08.556 --> 00:43:09.366 A:middle
scrolls in the vertical

00:43:09.366 --> 00:43:09.816 A:middle
direction.

00:43:11.656 --> 00:43:14.046 A:middle
Then for every single section

00:43:14.236 --> 00:43:15.586 A:middle
that scrolls on the horizontal

00:43:15.586 --> 00:43:17.466 A:middle
axis, you'd need an additional

00:43:17.466 --> 00:43:19.846 A:middle
CollectionView, which means more

00:43:19.846 --> 00:43:21.526 A:middle
support code to intermediate the

00:43:21.526 --> 00:43:23.726 A:middle
presentation and behavior of

00:43:23.726 --> 00:43:24.406 A:middle
each collection.

00:43:27.536 --> 00:43:29.576 A:middle
With compositional layout, this

00:43:29.576 --> 00:43:31.596 A:middle
can be done using just a single

00:43:31.596 --> 00:43:32.226 A:middle
CollectionView.

00:43:32.226 --> 00:43:35.816 A:middle
In fact, we've done just that.

00:43:37.086 --> 00:43:39.386 A:middle
In iOS 13, App Store has been

00:43:39.386 --> 00:43:40.806 A:middle
rearchitected using

00:43:40.806 --> 00:43:41.736 A:middle
compositional layout.

00:43:42.286 --> 00:43:45.436 A:middle
Each of the content types you

00:43:45.436 --> 00:43:47.526 A:middle
see on this page are capable of

00:43:47.526 --> 00:43:49.096 A:middle
vending their own layout

00:43:49.096 --> 00:43:49.646 A:middle
description.

00:43:50.146 --> 00:43:52.016 A:middle
And all those layout sections

00:43:52.016 --> 00:43:53.566 A:middle
come together to comprise our

00:43:53.566 --> 00:43:54.906 A:middle
one overall

00:43:54.906 --> 00:43:56.076 A:middle
CollectionViewLayout.

00:43:59.646 --> 00:44:01.996 A:middle
We describe this section using

00:43:59.646 --> 00:44:01.996 A:middle
We describe this section using

00:44:01.996 --> 00:44:03.996 A:middle
just a single layout item which

00:44:03.996 --> 00:44:05.756 A:middle
has a known height and which

00:44:05.756 --> 00:44:07.856 A:middle
occupies 100% of its container's

00:44:07.856 --> 00:44:08.076 A:middle
width.

00:44:10.616 --> 00:44:12.266 A:middle
That layout item sits inside of

00:44:12.266 --> 00:44:14.566 A:middle
a layout group, which itself

00:44:14.566 --> 00:44:16.346 A:middle
occupies half of its container's

00:44:16.346 --> 00:44:16.556 A:middle
width.

00:44:17.056 --> 00:44:19.796 A:middle
And these are really all the

00:44:19.796 --> 00:44:21.216 A:middle
basic building blocks we need to

00:44:21.216 --> 00:44:22.136 A:middle
get this UI working.

00:44:22.696 --> 00:44:26.466 A:middle
We take that layout group, stick

00:44:26.466 --> 00:44:28.556 A:middle
it in a layout section, and to

00:44:28.556 --> 00:44:29.746 A:middle
get that paging behavior we

00:44:29.746 --> 00:44:31.266 A:middle
want, we set our orthogonal

00:44:31.266 --> 00:44:33.426 A:middle
scroll behavior to group paging.

00:44:34.156 --> 00:44:34.976 A:middle
And we're off to the races.

00:44:39.446 --> 00:44:41.676 A:middle
In iOS 13 App Store is also

00:44:41.676 --> 00:44:43.636 A:middle
getting UI support for languages

00:44:43.636 --> 00:44:45.976 A:middle
that read from right to left.

00:44:45.976 --> 00:44:47.256 A:middle
And compositional layout helps

00:44:47.256 --> 00:44:48.436 A:middle
make that possible.

00:44:49.016 --> 00:44:52.456 A:middle
We construct our layouts using

00:44:52.566 --> 00:44:53.656 A:middle
all the same primitives that

00:44:53.656 --> 00:44:55.376 A:middle
you've seen here today, and

00:44:55.376 --> 00:44:56.716 A:middle
compositional layout just takes

00:44:56.716 --> 00:44:57.556 A:middle
care of the rest.

00:44:58.056 --> 00:45:00.236 A:middle
It ensures that the placement of

00:44:58.056 --> 00:45:00.236 A:middle
It ensures that the placement of

00:45:00.236 --> 00:45:01.626 A:middle
our supplementaries and our

00:45:01.626 --> 00:45:03.546 A:middle
cells is appropriate for our

00:45:03.546 --> 00:45:04.526 A:middle
right to left environment.

00:45:05.186 --> 00:45:07.456 A:middle
And furthermore, we don't have

00:45:07.496 --> 00:45:09.326 A:middle
to write a single line of code

00:45:09.486 --> 00:45:10.976 A:middle
to make sure that our paging

00:45:10.976 --> 00:45:13.106 A:middle
behavior also translates for the

00:45:13.106 --> 00:45:14.496 A:middle
right to left layout direction.

00:45:17.496 --> 00:45:20.216 A:middle
So this new API has enabled to

00:45:20.216 --> 00:45:21.946 A:middle
us take all of those scrollable

00:45:21.946 --> 00:45:23.466 A:middle
regions that we were previously

00:45:23.466 --> 00:45:25.746 A:middle
micromanaging and flatten them

00:45:25.936 --> 00:45:27.956 A:middle
into a single CollectionView at

00:45:27.956 --> 00:45:28.576 A:middle
the top level.

00:45:28.576 --> 00:45:31.336 A:middle
All the while, our code has

00:45:31.336 --> 00:45:34.086 A:middle
become more concise, easy to

00:45:34.086 --> 00:45:36.286 A:middle
reason about, as well as easier

00:45:36.286 --> 00:45:37.736 A:middle
to maintain going forward.

00:45:40.016 --> 00:45:41.466 A:middle
Compositional layout has

00:45:41.526 --> 00:45:42.966 A:middle
reimagined the way that we think

00:45:42.966 --> 00:45:44.686 A:middle
about CollectionViews in our own

00:45:44.686 --> 00:45:46.546 A:middle
application, and we can't wait

00:45:46.546 --> 00:45:47.756 A:middle
to see how it enhances the

00:45:47.756 --> 00:45:49.436 A:middle
experience for the apps that all

00:45:49.436 --> 00:45:50.756 A:middle
of you bring to the App Store.

00:45:50.756 --> 00:45:51.936 A:middle
Back to you, Troy.

00:45:52.516 --> 00:45:57.546 A:middle
[ Applause ]

00:45:58.046 --> 00:45:58.556 A:middle
&gt;&gt; Troy Stephens: Thank you so

00:45:58.556 --> 00:45:59.206 A:middle
much, Dersu.

00:45:59.206 --> 00:46:00.386 A:middle
Boy, that is a beautiful

00:45:59.206 --> 00:46:00.386 A:middle
Boy, that is a beautiful

00:46:00.386 --> 00:46:00.996 A:middle
redesign.

00:46:01.376 --> 00:46:02.996 A:middle
And we couldn't be more thrilled

00:46:03.116 --> 00:46:04.406 A:middle
to see compositional layout

00:46:04.436 --> 00:46:05.816 A:middle
already making a difference

00:46:06.236 --> 00:46:07.346 A:middle
simplifying the development

00:46:07.346 --> 00:46:08.926 A:middle
process for one of our prominent

00:46:08.926 --> 00:46:10.446 A:middle
user-facing apps.

00:46:10.446 --> 00:46:13.046 A:middle
And I'm so happy to be making

00:46:13.046 --> 00:46:14.556 A:middle
the same API available to

00:46:14.556 --> 00:46:16.756 A:middle
developers across our platforms.

00:46:17.186 --> 00:46:18.516 A:middle
Speaking of which, I'd like to

00:46:18.516 --> 00:46:19.986 A:middle
show you a real quick demo of

00:46:19.986 --> 00:46:21.396 A:middle
compositional layout working

00:46:21.396 --> 00:46:23.866 A:middle
with NSCollectionView on Mac OS.

00:46:29.596 --> 00:46:31.086 A:middle
So when you open the sample

00:46:31.086 --> 00:46:32.316 A:middle
project that you downloaded in

00:46:32.316 --> 00:46:34.196 A:middle
Xcode, notice that there's a

00:46:34.196 --> 00:46:35.686 A:middle
build scheme and target for the

00:46:35.686 --> 00:46:35.866 A:middle
Mac.

00:46:36.196 --> 00:46:37.596 A:middle
And we're going to build and run

00:46:37.596 --> 00:46:37.976 A:middle
that here.

00:46:42.126 --> 00:46:43.656 A:middle
And let's just open up all of

00:46:43.656 --> 00:46:45.206 A:middle
our layout examples that we

00:46:45.206 --> 00:46:47.016 A:middle
looked at in this talk, and

00:46:47.016 --> 00:46:47.816 A:middle
we'll fan them out.

00:46:51.276 --> 00:46:52.046 A:middle
So here we go.

00:46:52.046 --> 00:46:53.096 A:middle
Here they are, our various

00:46:53.096 --> 00:46:54.376 A:middle
compositional layout examples.

00:46:54.696 --> 00:46:55.876 A:middle
And these are essentially just

00:46:55.876 --> 00:46:57.326 A:middle
the same code that we use.

00:46:57.326 --> 00:46:58.916 A:middle
We're programming to the same

00:46:58.916 --> 00:46:59.356 A:middle
API's.

00:46:59.686 --> 00:47:00.536 A:middle
The only adjustments you're

00:46:59.686 --> 00:47:00.536 A:middle
The only adjustments you're

00:47:00.536 --> 00:47:01.636 A:middle
really going to see are for

00:47:01.636 --> 00:47:03.816 A:middle
metrics where we wanted to apply

00:47:03.816 --> 00:47:05.336 A:middle
more macOS-appropriate metrics

00:47:05.336 --> 00:47:05.896 A:middle
for things.

00:47:05.896 --> 00:47:07.816 A:middle
But we have orthogonal scrolling

00:47:07.816 --> 00:47:08.666 A:middle
working here.

00:47:10.176 --> 00:47:12.786 A:middle
And, of course, on the Mac we

00:47:12.786 --> 00:47:13.836 A:middle
expect things to behave in

00:47:13.836 --> 00:47:14.636 A:middle
Mac-like ways.

00:47:14.636 --> 00:47:15.396 A:middle
And one of the things that can

00:47:15.396 --> 00:47:16.396 A:middle
happen with CollectionViews on

00:47:16.396 --> 00:47:17.636 A:middle
the Mac is they're continually

00:47:17.636 --> 00:47:19.066 A:middle
resizable usually, right?

00:47:19.446 --> 00:47:21.546 A:middle
So we've got -- we've made sure

00:47:21.546 --> 00:47:23.286 A:middle
that resize is nice and fast,

00:47:24.176 --> 00:47:25.296 A:middle
super light-weight, these

00:47:25.506 --> 00:47:27.286 A:middle
layouts reevaluate very quickly.

00:47:27.286 --> 00:47:29.156 A:middle
And our adaptive sections layout

00:47:29.246 --> 00:47:30.556 A:middle
has a layout break just like

00:47:30.556 --> 00:47:31.076 A:middle
before.

00:47:31.076 --> 00:47:32.606 A:middle
And now that you know how this

00:47:32.606 --> 00:47:33.886 A:middle
works, you can easily add

00:47:33.886 --> 00:47:35.126 A:middle
additional layout breaks for

00:47:35.126 --> 00:47:36.876 A:middle
wider window widths and screen

00:47:36.876 --> 00:47:37.546 A:middle
widths if you want.

00:47:38.226 --> 00:47:40.386 A:middle
Of course, we have features like

00:47:40.386 --> 00:47:41.496 A:middle
being able to click items to

00:47:41.496 --> 00:47:42.116 A:middle
select them.

00:47:42.626 --> 00:47:44.626 A:middle
I can use the arrow keys and

00:47:44.626 --> 00:47:45.656 A:middle
navigate around.

00:47:46.446 --> 00:47:47.756 A:middle
I can hold down the shift key

00:47:47.756 --> 00:47:48.736 A:middle
while arrowing around to

00:47:48.736 --> 00:47:49.926 A:middle
accumulate a selection.

00:47:50.516 --> 00:47:53.546 A:middle
[ Applause ]

00:47:54.046 --> 00:47:55.296 A:middle
And, of course, I can drag to

00:47:55.296 --> 00:47:56.026 A:middle
rubber band select.

00:47:56.026 --> 00:47:57.266 A:middle
I can bulk select items.

00:47:57.266 --> 00:47:58.986 A:middle
And this works in any old

00:47:58.986 --> 00:48:00.536 A:middle
compositional layout, including

00:47:58.986 --> 00:48:00.536 A:middle
compositional layout, including

00:48:00.536 --> 00:48:01.976 A:middle
more advanced ones like this.

00:48:02.016 --> 00:48:03.076 A:middle
[ Applause ]

00:48:03.076 --> 00:48:05.906 A:middle
So all the stuff that users

00:48:05.906 --> 00:48:07.386 A:middle
would expect on the Mac.

00:48:07.386 --> 00:48:08.786 A:middle
And we've got all these layouts

00:48:09.236 --> 00:48:09.606 A:middle
running.

00:48:09.896 --> 00:48:11.976 A:middle
And enough of the code down

00:48:11.976 --> 00:48:13.346 A:middle
below, the item section and

00:48:13.346 --> 00:48:15.836 A:middle
group descriptions is in common

00:48:15.836 --> 00:48:17.426 A:middle
in terms of the API that's used.

00:48:17.426 --> 00:48:18.586 A:middle
You could even factor out code

00:48:18.586 --> 00:48:19.816 A:middle
if you want and share code

00:48:19.816 --> 00:48:21.246 A:middle
between your different platform

00:48:21.246 --> 00:48:22.336 A:middle
projects if you want to.

00:48:23.396 --> 00:48:24.846 A:middle
So we can see that compositional

00:48:24.846 --> 00:48:26.796 A:middle
layout is really here to make

00:48:26.796 --> 00:48:29.686 A:middle
our lives a lot easier across

00:48:29.686 --> 00:48:30.896 A:middle
our various platforms.

00:48:31.026 --> 00:48:33.096 A:middle
And it really has a lot to

00:48:33.096 --> 00:48:33.766 A:middle
recommend it.

00:48:34.406 --> 00:48:35.806 A:middle
It's available for you to start

00:48:35.806 --> 00:48:39.156 A:middle
using today on iOS, tvOS, and

00:48:39.156 --> 00:48:39.856 A:middle
macOS.

00:48:39.856 --> 00:48:41.566 A:middle
And it makes it incredibly easy

00:48:41.836 --> 00:48:43.966 A:middle
to create new custom layouts for

00:48:43.966 --> 00:48:46.006 A:middle
CollectionView to use by simply

00:48:46.006 --> 00:48:46.816 A:middle
describing it.

00:48:46.816 --> 00:48:47.756 A:middle
We think this is a big

00:48:47.756 --> 00:48:48.546 A:middle
game-changer.

00:48:49.436 --> 00:48:50.386 A:middle
This in turn makes

00:48:50.386 --> 00:48:51.766 A:middle
CollectionView an even more

00:48:51.846 --> 00:48:53.636 A:middle
versatile tool than ever before

00:48:53.636 --> 00:48:55.816 A:middle
for presenting your content in

00:48:55.816 --> 00:48:57.916 A:middle
arbitrary ways however you want

00:48:57.916 --> 00:48:58.236 A:middle
to.

00:48:58.926 --> 00:49:00.176 A:middle
And the ease with which you can

00:48:58.926 --> 00:49:00.176 A:middle
And the ease with which you can

00:49:00.176 --> 00:49:02.116 A:middle
describe new layouts, and adjust

00:49:02.116 --> 00:49:03.066 A:middle
layouts, and make different

00:49:03.066 --> 00:49:04.216 A:middle
changes, and try different

00:49:04.216 --> 00:49:05.556 A:middle
things, and iterate on them is

00:49:05.606 --> 00:49:08.396 A:middle
going to enable much faster

00:49:08.526 --> 00:49:10.266 A:middle
iteration with your designers.

00:49:10.606 --> 00:49:12.016 A:middle
So we think this is a really big

00:49:12.016 --> 00:49:12.786 A:middle
game-changer.

00:49:14.256 --> 00:49:15.606 A:middle
So go out, take the sample

00:49:15.606 --> 00:49:17.806 A:middle
project, experiment with it, try

00:49:17.846 --> 00:49:19.946 A:middle
changing various things, use our

00:49:19.946 --> 00:49:21.746 A:middle
code as a basis for yours and

00:49:21.746 --> 00:49:23.606 A:middle
start working on the custom

00:49:23.606 --> 00:49:25.266 A:middle
layouts for your next app

00:49:25.266 --> 00:49:25.686 A:middle
versions.

00:49:25.956 --> 00:49:27.026 A:middle
And we can't wait to see the

00:49:27.026 --> 00:49:28.696 A:middle
delightful user experiences that

00:49:28.696 --> 00:49:29.986 A:middle
this is going to empower you to

00:49:29.986 --> 00:49:31.886 A:middle
create in a fraction of the

00:49:31.886 --> 00:49:32.326 A:middle
time.

00:49:33.356 --> 00:49:34.426 A:middle
Now, if you found this talk

00:49:34.426 --> 00:49:35.766 A:middle
exciting, we've got another that

00:49:35.766 --> 00:49:36.616 A:middle
I think you're really going to

00:49:36.616 --> 00:49:37.696 A:middle
love, especially if you work

00:49:37.696 --> 00:49:39.316 A:middle
with collection views or even UI

00:49:39.316 --> 00:49:40.046 A:middle
table views.

00:49:40.286 --> 00:49:42.486 A:middle
In Advances in UI Data Sources

00:49:42.806 --> 00:49:44.816 A:middle
we introduce an entirely new

00:49:45.006 --> 00:49:47.126 A:middle
radically simpler API for

00:49:47.126 --> 00:49:48.806 A:middle
feeding model data to your

00:49:48.806 --> 00:49:50.446 A:middle
CollectionViews and your UI

00:49:50.446 --> 00:49:52.016 A:middle
table views while getting

00:49:52.016 --> 00:49:53.266 A:middle
automatic computation of

00:49:53.266 --> 00:49:54.646 A:middle
differences and automatic

00:49:54.646 --> 00:49:55.596 A:middle
animations for free.

00:49:55.596 --> 00:49:56.666 A:middle
It's going to create delightful

00:49:56.666 --> 00:49:57.666 A:middle
users experiences.

00:49:57.666 --> 00:49:59.276 A:middle
So make sure to check this

00:49:59.276 --> 00:49:59.876 A:middle
session out.

00:50:01.046 --> 00:50:02.546 A:middle
Thank you so much for watching.

00:50:03.508 --> 00:50:05.508 A:middle
[ Applause ]
