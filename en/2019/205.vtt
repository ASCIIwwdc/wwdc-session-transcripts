WEBVTT

00:00:01.516 --> 00:00:04.500 A:middle
[ Music ]

00:00:12.516 --> 00:00:15.186 A:middle
[ Applause ]

00:00:15.686 --> 00:00:15.906 A:middle
&gt;&gt; Thank you.

00:00:16.516 --> 00:00:19.716 A:middle
[ Applause ]

00:00:20.216 --> 00:00:21.496 A:middle
Welcome, great to see you all

00:00:21.496 --> 00:00:22.176 A:middle
here.

00:00:22.746 --> 00:00:24.726 A:middle
My name is Ali Ozer, I along

00:00:24.726 --> 00:00:26.076 A:middle
with my colleagues, Jake and

00:00:26.076 --> 00:00:27.336 A:middle
Jason will be giving you an

00:00:27.336 --> 00:00:29.046 A:middle
overview of iPad apps for Mac

00:00:29.136 --> 00:00:29.356 A:middle
today.

00:00:30.736 --> 00:00:32.086 A:middle
We have two talks for you.

00:00:32.086 --> 00:00:33.466 A:middle
In this first talk, we will

00:00:33.466 --> 00:00:35.206 A:middle
cover the basics, what this

00:00:35.206 --> 00:00:36.786 A:middle
technology is, how to get

00:00:36.826 --> 00:00:38.766 A:middle
started, some things you get for

00:00:38.766 --> 00:00:40.846 A:middle
free, and also some significant

00:00:40.846 --> 00:00:42.426 A:middle
API differences you should be

00:00:42.426 --> 00:00:43.196 A:middle
aware of.

00:00:43.536 --> 00:00:45.186 A:middle
In our second talk, taking iPad

00:00:45.246 --> 00:00:48.046 A:middle
apps for Mac to the next level,

00:00:48.046 --> 00:00:49.776 A:middle
which is later this week, we'll

00:00:49.776 --> 00:00:51.656 A:middle
cover advance topics such as

00:00:51.656 --> 00:00:53.256 A:middle
making your app a better Mac app

00:00:53.256 --> 00:00:55.206 A:middle
and also considerations for

00:00:55.206 --> 00:00:56.586 A:middle
distributing your app.

00:00:57.936 --> 00:00:59.336 A:middle
So, what is iPad apps for Mac

00:00:59.546 --> 00:01:00.026 A:middle
all about?

00:00:59.546 --> 00:01:00.026 A:middle
all about?

00:01:00.656 --> 00:01:02.216 A:middle
Well, it's a technology that

00:01:02.216 --> 00:01:04.876 A:middle
enables you to rebuild and run

00:01:04.876 --> 00:01:06.726 A:middle
iPad apps natively on the Mac.

00:01:07.726 --> 00:01:09.506 A:middle
Let me expand on this.

00:01:10.316 --> 00:01:12.426 A:middle
The Mac is a robust platform for

00:01:12.426 --> 00:01:13.836 A:middle
development that enables all

00:01:13.836 --> 00:01:14.636 A:middle
kinds of apps.

00:01:15.046 --> 00:01:17.236 A:middle
We have powerful desktop apps,

00:01:17.236 --> 00:01:18.866 A:middle
web-based experiences, and also

00:01:18.866 --> 00:01:20.056 A:middle
graphic intensive games.

00:01:20.516 --> 00:01:22.886 A:middle
And these experiences, all have

00:01:22.886 --> 00:01:24.006 A:middle
dedicated frameworks that

00:01:24.046 --> 00:01:24.586 A:middle
support them.

00:01:24.586 --> 00:01:26.296 A:middle
But we've been missing one thing

00:01:26.896 --> 00:01:29.116 A:middle
and that's UIKit, the technology

00:01:29.116 --> 00:01:31.356 A:middle
used by iOS apps today.

00:01:31.786 --> 00:01:34.616 A:middle
With the UIKit as a native peer

00:01:34.616 --> 00:01:36.346 A:middle
to these other frameworks on the

00:01:36.346 --> 00:01:38.476 A:middle
Mac, you're enabling you to

00:01:38.476 --> 00:01:40.356 A:middle
bring your iPad apps to the Mac

00:01:40.356 --> 00:01:42.146 A:middle
as first-class experiences.

00:01:43.046 --> 00:01:45.236 A:middle
Let's talk about how we're doing

00:01:46.716 --> 00:01:46.826 A:middle
this.

00:01:47.046 --> 00:01:49.856 A:middle
We have a rich technology stack

00:01:50.196 --> 00:01:51.846 A:middle
that's shared between iOS and

00:01:51.846 --> 00:01:53.776 A:middle
macOS, and we leverage that as

00:01:53.776 --> 00:01:54.586 A:middle
much as possible.

00:01:56.076 --> 00:01:57.576 A:middle
We also bring in iOS frameworks

00:01:57.606 --> 00:01:58.816 A:middle
that don't exist on the Mac and

00:01:59.256 --> 00:02:01.386 A:middle
integrate them to work well on

00:01:59.256 --> 00:02:01.386 A:middle
integrate them to work well on

00:02:01.386 --> 00:02:02.496 A:middle
the Mac with the Mac

00:02:02.496 --> 00:02:03.846 A:middle
infrastructure and with the Mac

00:02:03.976 --> 00:02:05.246 A:middle
UI design guidelines.

00:02:05.886 --> 00:02:07.786 A:middle
And last but not least, we make

00:02:07.786 --> 00:02:09.485 A:middle
it easy for you to get started.

00:02:09.485 --> 00:02:11.716 A:middle
I'll talk about the first two

00:02:11.716 --> 00:02:13.166 A:middle
then Jake will come on stage to

00:02:13.166 --> 00:02:14.526 A:middle
demo and discuss the third one.

00:02:15.256 --> 00:02:18.446 A:middle
OK. So, let me show you what I

00:02:18.446 --> 00:02:19.716 A:middle
mean by technology stack.

00:02:20.216 --> 00:02:21.476 A:middle
Here is the technology stack for

00:02:21.476 --> 00:02:23.066 A:middle
the Mac, we have macOS apps,

00:02:23.486 --> 00:02:24.986 A:middle
these are built upon frameworks,

00:02:24.986 --> 00:02:26.636 A:middle
UI frameworks and also lower

00:02:26.636 --> 00:02:28.016 A:middle
level frameworks as you can see

00:02:28.016 --> 00:02:28.216 A:middle
here.

00:02:28.696 --> 00:02:29.546 A:middle
Now, these are just some

00:02:29.546 --> 00:02:30.636 A:middle
representative frameworks.

00:02:30.636 --> 00:02:31.726 A:middle
We, of course, have hundreds of

00:02:31.726 --> 00:02:33.076 A:middle
frameworks in that stack.

00:02:33.646 --> 00:02:34.846 A:middle
In addition to frameworks, we

00:02:34.846 --> 00:02:36.186 A:middle
also have databases.

00:02:36.366 --> 00:02:37.826 A:middle
These are things like the user's

00:02:37.826 --> 00:02:39.216 A:middle
photos database, context,

00:02:39.466 --> 00:02:40.636 A:middle
psreferences, and so on.

00:02:41.226 --> 00:02:42.556 A:middle
And now, we have services, this

00:02:42.556 --> 00:02:43.386 A:middle
includes things like the

00:02:43.386 --> 00:02:45.106 A:middle
Clipboard service for a copy

00:02:45.106 --> 00:02:46.946 A:middle
paste and file coordination.

00:02:47.406 --> 00:02:48.586 A:middle
And then we have the granddaddy

00:02:48.656 --> 00:02:50.006 A:middle
service of them all, the Kernel,

00:02:50.006 --> 00:02:51.376 A:middle
which is our Darwin Kernel.

00:02:52.216 --> 00:02:54.046 A:middle
Now, the iOS stack looks very

00:02:54.146 --> 00:02:54.566 A:middle
similar.

00:02:54.906 --> 00:02:56.826 A:middle
On iOS we have iOS apps and then

00:02:56.826 --> 00:02:58.316 A:middle
there is the stack of frameworks

00:02:58.316 --> 00:02:59.686 A:middle
and databases and services

00:02:59.686 --> 00:03:00.156 A:middle
underneath.

00:02:59.686 --> 00:03:00.156 A:middle
underneath.

00:03:00.646 --> 00:03:01.736 A:middle
There are some differences as

00:03:01.736 --> 00:03:02.816 A:middle
you can see here and I'll talk

00:03:02.816 --> 00:03:06.076 A:middle
about this in a minute.

00:03:06.236 --> 00:03:08.336 A:middle
Now, many of you aren't aware

00:03:08.336 --> 00:03:09.996 A:middle
that we have been able to run

00:03:10.076 --> 00:03:12.086 A:middle
iOS apps on the Mac for a while

00:03:12.086 --> 00:03:13.706 A:middle
now in the Simulator.

00:03:14.686 --> 00:03:16.166 A:middle
The Simulator has a distinct

00:03:16.166 --> 00:03:18.586 A:middle
copy of the stack running in an

00:03:18.586 --> 00:03:19.496 A:middle
environment of its own.

00:03:19.616 --> 00:03:21.036 A:middle
So, it got its own copy of

00:03:21.106 --> 00:03:22.426 A:middle
frameworks, databases, and

00:03:22.426 --> 00:03:22.926 A:middle
services.

00:03:23.956 --> 00:03:25.316 A:middle
The main goal of the Simulator

00:03:25.316 --> 00:03:26.826 A:middle
is to replicate the iOS

00:03:26.826 --> 00:03:28.716 A:middle
environment so that you can

00:03:28.716 --> 00:03:30.526 A:middle
debug and test your iOS apps as

00:03:30.636 --> 00:03:32.086 A:middle
if they are running on iOS.

00:03:32.676 --> 00:03:34.116 A:middle
The Simulator does an amazing

00:03:34.116 --> 00:03:34.736 A:middle
job of this.

00:03:35.576 --> 00:03:37.716 A:middle
However, integrating well with

00:03:37.756 --> 00:03:39.866 A:middle
the Mac user experience is not a

00:03:39.866 --> 00:03:41.096 A:middle
goal of the Simulator.

00:03:41.496 --> 00:03:42.616 A:middle
And neither is running in an

00:03:42.616 --> 00:03:43.926 A:middle
optimal fashion for the end

00:03:43.926 --> 00:03:44.256 A:middle
user.

00:03:44.906 --> 00:03:47.836 A:middle
So, as a way to bring iOS apps

00:03:48.126 --> 00:03:50.396 A:middle
to the Mac natively, we augment

00:03:50.396 --> 00:03:52.096 A:middle
it, the frameworks, on the Mac

00:03:52.576 --> 00:03:54.416 A:middle
to support the needs of both

00:03:54.506 --> 00:03:57.396 A:middle
AppKit apps and UIKit apps.

00:03:57.936 --> 00:03:59.526 A:middle
We combine and unify the

00:03:59.526 --> 00:04:01.016 A:middle
functionality of lower level

00:03:59.526 --> 00:04:01.016 A:middle
functionality of lower level

00:04:01.016 --> 00:04:03.126 A:middle
frameworks that exist on both.

00:04:03.336 --> 00:04:04.716 A:middle
Framework such as CoreGraphics,

00:04:04.846 --> 00:04:07.466 A:middle
Foundation, libSystem, to create

00:04:07.466 --> 00:04:08.826 A:middle
single copy that can serve both

00:04:08.826 --> 00:04:08.976 A:middle
stacks.

00:04:11.746 --> 00:04:13.116 A:middle
Now, notice in this picture how

00:04:13.166 --> 00:04:14.956 A:middle
UIKit and AppKit in the

00:04:14.956 --> 00:04:16.146 A:middle
frameworks that depend on them

00:04:16.516 --> 00:04:17.486 A:middle
do not get unified.

00:04:17.926 --> 00:04:18.916 A:middle
Now I'll talk about that in a

00:04:18.916 --> 00:04:19.096 A:middle
bit.

00:04:20.136 --> 00:04:21.766 A:middle
Also note ARKit to the side

00:04:21.815 --> 00:04:22.376 A:middle
there.

00:04:22.376 --> 00:04:23.506 A:middle
Since there is no augmented

00:04:23.506 --> 00:04:24.666 A:middle
reality functionality on the

00:04:24.666 --> 00:04:26.206 A:middle
Mac, we did not bring that

00:04:26.206 --> 00:04:26.866 A:middle
framework over.

00:04:26.866 --> 00:04:28.206 A:middle
So, there it goes.

00:04:28.506 --> 00:04:30.116 A:middle
Now, don't get us wrong, we love

00:04:30.116 --> 00:04:32.626 A:middle
ARKit, just not on the Mac yet.

00:04:33.186 --> 00:04:34.856 A:middle
And, finally, UserNotifications

00:04:34.856 --> 00:04:36.096 A:middle
is in the middle there.

00:04:36.156 --> 00:04:37.396 A:middle
That is an example of a

00:04:37.396 --> 00:04:38.716 A:middle
framework that we not only

00:04:38.716 --> 00:04:40.586 A:middle
brought to the Mac, but we also

00:04:40.586 --> 00:04:42.206 A:middle
made public API on the Mac.

00:04:42.346 --> 00:04:44.686 A:middle
And we did that last year during

00:04:44.686 --> 00:04:45.806 A:middle
the initial bring up of this

00:04:45.856 --> 00:04:47.436 A:middle
technology and we did it on

00:04:47.436 --> 00:04:48.656 A:middle
plain sight as well.

00:04:49.296 --> 00:04:50.716 A:middle
And we also unified services and

00:04:50.716 --> 00:04:52.676 A:middle
databases, so that a single copy

00:04:52.676 --> 00:04:54.246 A:middle
of Photos and Contacts and

00:04:54.246 --> 00:04:55.776 A:middle
Preferences serves both AppKit

00:04:55.776 --> 00:04:57.036 A:middle
apps and UIKit apps.

00:04:57.316 --> 00:04:58.456 A:middle
And same with Services, there's

00:04:58.456 --> 00:05:00.116 A:middle
only a single Copy Paste service

00:04:58.456 --> 00:05:00.116 A:middle
only a single Copy Paste service

00:05:00.116 --> 00:05:01.406 A:middle
single file coordination, and so

00:05:01.406 --> 00:05:01.566 A:middle
on.

00:05:02.416 --> 00:05:03.826 A:middle
So this is how the environment

00:05:03.866 --> 00:05:06.166 A:middle
for iPad apps for Mac looks.

00:05:06.566 --> 00:05:07.656 A:middle
It's very much like the

00:05:07.656 --> 00:05:08.956 A:middle
environment that AppKit apps

00:05:08.956 --> 00:05:11.236 A:middle
enjoy and running with native

00:05:11.396 --> 00:05:12.716 A:middle
performance characteristics.

00:05:14.196 --> 00:05:15.726 A:middle
Now, before I let go, let me

00:05:15.726 --> 00:05:16.626 A:middle
talk a bit about those

00:05:16.626 --> 00:05:18.096 A:middle
frameworks about AppKit and

00:05:18.206 --> 00:05:18.636 A:middle
UIKit.

00:05:19.846 --> 00:05:21.336 A:middle
Of course, it's not just WebKit

00:05:21.336 --> 00:05:21.846 A:middle
and SceneKit.

00:05:21.846 --> 00:05:22.886 A:middle
There are many other frameworks

00:05:22.886 --> 00:05:23.216 A:middle
up there.

00:05:23.686 --> 00:05:24.896 A:middle
And I'm showing you two copies

00:05:24.896 --> 00:05:25.256 A:middle
of these.

00:05:25.786 --> 00:05:26.906 A:middle
And that's indeed the case.

00:05:27.576 --> 00:05:29.256 A:middle
Since AppKit and UIKit are not

00:05:29.256 --> 00:05:30.396 A:middle
unified, the frameworks that

00:05:30.426 --> 00:05:32.106 A:middle
depend on them also remain

00:05:32.176 --> 00:05:33.476 A:middle
separate even if they are

00:05:33.536 --> 00:05:35.086 A:middle
literally called the same thing,

00:05:35.086 --> 00:05:36.516 A:middle
like two WebKits, two SceneKits,

00:05:36.516 --> 00:05:36.976 A:middle
and so on.

00:05:36.976 --> 00:05:38.436 A:middle
And there are number of reasons

00:05:38.436 --> 00:05:38.846 A:middle
for this.

00:05:39.926 --> 00:05:41.736 A:middle
The main one is that classes

00:05:41.786 --> 00:05:43.376 A:middle
such as NSView and UIView are

00:05:43.946 --> 00:05:45.646 A:middle
distinct and have their own

00:05:45.646 --> 00:05:46.676 A:middle
behaviors and support

00:05:46.676 --> 00:05:47.356 A:middle
infrastructure.

00:05:47.676 --> 00:05:48.416 A:middle
So, we have distinct

00:05:48.416 --> 00:05:50.466 A:middle
declarations and implementations

00:05:50.466 --> 00:05:52.266 A:middle
of classes that in turn build

00:05:52.266 --> 00:05:52.716 A:middle
upon them.

00:05:53.286 --> 00:05:54.596 A:middle
So, here is declaration of

00:05:54.596 --> 00:05:57.546 A:middle
MKMapView for instance for -- in

00:05:57.546 --> 00:05:58.986 A:middle
the case of AppKit and the case

00:05:58.986 --> 00:05:59.546 A:middle
of UIKit.

00:05:59.546 --> 00:06:00.886 A:middle
And as you can see these are

00:05:59.546 --> 00:06:00.886 A:middle
And as you can see these are

00:06:00.886 --> 00:06:02.076 A:middle
effectively incompatible

00:06:02.076 --> 00:06:02.716 A:middle
definitions.

00:06:03.976 --> 00:06:06.236 A:middle
So, we really do have two copies

00:06:06.646 --> 00:06:08.036 A:middle
of these frameworks in the

00:06:08.106 --> 00:06:10.076 A:middle
system and also in the developer

00:06:10.356 --> 00:06:10.566 A:middle
SDK.

00:06:11.126 --> 00:06:12.056 A:middle
However, it's not something you

00:06:12.056 --> 00:06:12.816 A:middle
need to worry about.

00:06:13.266 --> 00:06:14.866 A:middle
The Static Linker and the

00:06:14.866 --> 00:06:16.326 A:middle
Dynamic Loader do the right

00:06:16.326 --> 00:06:18.216 A:middle
thing when it comes to finding

00:06:18.216 --> 00:06:19.406 A:middle
the right copy of these

00:06:19.406 --> 00:06:19.976 A:middle
frameworks.

00:06:20.616 --> 00:06:21.686 A:middle
Either at built time during

00:06:21.686 --> 00:06:23.466 A:middle
linking or at run time when

00:06:23.466 --> 00:06:23.746 A:middle
loading.

00:06:25.716 --> 00:06:27.366 A:middle
So, let me shift gears now and

00:06:27.406 --> 00:06:28.916 A:middle
talk about why we're doing this.

00:06:29.046 --> 00:06:31.446 A:middle
Why are we bringing UIKit to the

00:06:31.996 --> 00:06:32.096 A:middle
Mac?

00:06:32.326 --> 00:06:33.456 A:middle
Well, I mean this is part of the

00:06:33.456 --> 00:06:34.626 A:middle
reason, you know, just showing

00:06:34.626 --> 00:06:36.066 A:middle
you of just few of the hundreds

00:06:36.066 --> 00:06:37.776 A:middle
of thousands of iPad apps out

00:06:37.846 --> 00:06:39.076 A:middle
there that you've created.

00:06:39.656 --> 00:06:40.786 A:middle
And we think many of them would

00:06:40.816 --> 00:06:41.826 A:middle
be great on Mac.

00:06:42.916 --> 00:06:43.976 A:middle
And there are also millions of

00:06:43.976 --> 00:06:45.816 A:middle
Mac users out there and many of

00:06:45.816 --> 00:06:46.806 A:middle
them would look great with your

00:06:46.806 --> 00:06:47.236 A:middle
apps.

00:06:47.716 --> 00:06:48.996 A:middle
So this technology provides them

00:06:48.996 --> 00:06:50.416 A:middle
with access to these apps and

00:06:50.416 --> 00:06:51.596 A:middle
creates new opportunities for

00:06:51.596 --> 00:06:52.156 A:middle
you.

00:06:52.156 --> 00:06:55.596 A:middle
Or you may be wondering whether

00:06:55.596 --> 00:06:57.576 A:middle
this technology is appropriate

00:06:57.636 --> 00:06:58.576 A:middle
for your application.

00:06:58.896 --> 00:07:00.416 A:middle
And that's an excellent

00:06:58.896 --> 00:07:00.416 A:middle
And that's an excellent

00:07:00.416 --> 00:07:00.786 A:middle
question.

00:07:03.016 --> 00:07:04.906 A:middle
So, let's say you have an iPad

00:07:04.906 --> 00:07:06.526 A:middle
app and you don't have Mac app

00:07:06.526 --> 00:07:07.586 A:middle
and you want to bring the

00:07:07.586 --> 00:07:09.226 A:middle
functionality of your app to the

00:07:09.226 --> 00:07:09.356 A:middle
Mac.

00:07:10.166 --> 00:07:11.426 A:middle
Well, that's a very good case,

00:07:11.426 --> 00:07:12.636 A:middle
very good time to consider this

00:07:12.636 --> 00:07:13.246 A:middle
technology.

00:07:13.676 --> 00:07:15.386 A:middle
One case of this is, you may

00:07:15.436 --> 00:07:17.596 A:middle
have an iPad app, but maybe on

00:07:17.596 --> 00:07:18.896 A:middle
the desktop the experience is a

00:07:18.896 --> 00:07:19.466 A:middle
web page.

00:07:20.506 --> 00:07:21.616 A:middle
Now, web interfaces can be

00:07:21.616 --> 00:07:22.996 A:middle
pretty great, but they're not

00:07:22.996 --> 00:07:24.396 A:middle
native, you know, native apps

00:07:24.486 --> 00:07:26.286 A:middle
have menu bars, command keys,

00:07:26.286 --> 00:07:27.756 A:middle
access to hardware features,

00:07:27.756 --> 00:07:29.836 A:middle
robust local storage, so much

00:07:29.836 --> 00:07:31.056 A:middle
more complete experience.

00:07:31.536 --> 00:07:33.506 A:middle
In another case, is you may have

00:07:33.506 --> 00:07:35.816 A:middle
an older Mac app, but maybe your

00:07:35.816 --> 00:07:37.096 A:middle
iPad app has features you have

00:07:37.096 --> 00:07:38.786 A:middle
since added and it's come

00:07:38.826 --> 00:07:40.886 A:middle
further, the two have fallen out

00:07:40.886 --> 00:07:41.316 A:middle
of sync.

00:07:41.636 --> 00:07:43.236 A:middle
So, this may be a way to freshen

00:07:43.236 --> 00:07:45.126 A:middle
your Mac app.

00:07:45.256 --> 00:07:47.586 A:middle
One other case is maybe

00:07:47.586 --> 00:07:49.896 A:middle
replacing a Mac app that's using

00:07:49.896 --> 00:07:52.036 A:middle
a non-native, non-optimal third

00:07:52.036 --> 00:07:53.136 A:middle
party porting framework.

00:07:53.596 --> 00:07:55.556 A:middle
If your iPad app is native, this

00:07:55.556 --> 00:07:56.906 A:middle
could be a good way to modernize

00:07:57.026 --> 00:08:00.266 A:middle
your Mac app.

00:07:57.026 --> 00:08:00.266 A:middle
your Mac app.

00:08:00.536 --> 00:08:01.296 A:middle
But, however, there is one

00:08:01.296 --> 00:08:02.606 A:middle
important thing to keep in mind.

00:08:03.806 --> 00:08:04.936 A:middle
If you already have an AppKit

00:08:04.936 --> 00:08:07.236 A:middle
app on your Mac -- on the Mac

00:08:07.296 --> 00:08:08.906 A:middle
that is well-maintained and up

00:08:08.906 --> 00:08:10.446 A:middle
to date with your iOS version,

00:08:11.056 --> 00:08:11.976 A:middle
there is no need to consider

00:08:11.976 --> 00:08:13.436 A:middle
this technology, really, you can

00:08:13.436 --> 00:08:14.586 A:middle
continue using AppKit.

00:08:15.256 --> 00:08:16.436 A:middle
AppKit is a first-class

00:08:16.436 --> 00:08:17.506 A:middle
framework that provides a

00:08:17.506 --> 00:08:18.596 A:middle
complete set of APIs for

00:08:18.726 --> 00:08:19.596 A:middle
developing Mac apps.

00:08:20.336 --> 00:08:21.906 A:middle
In fact, it provides access to a

00:08:21.906 --> 00:08:23.996 A:middle
more complete API set than this

00:08:23.996 --> 00:08:27.206 A:middle
technology provides on the Mac.

00:08:28.126 --> 00:08:29.186 A:middle
Now along those lines, there's

00:08:29.186 --> 00:08:30.386 A:middle
also some apps that are just not

00:08:30.506 --> 00:08:31.836 A:middle
candidates for this technology.

00:08:32.856 --> 00:08:34.446 A:middle
One example is iPhone apps.

00:08:34.446 --> 00:08:35.905 A:middle
iPhone apps are optimized for

00:08:35.905 --> 00:08:37.126 A:middle
the smaller screen, so they're

00:08:37.126 --> 00:08:38.655 A:middle
trying to take advantage of that

00:08:38.655 --> 00:08:39.296 A:middle
small screen.

00:08:39.326 --> 00:08:40.696 A:middle
We really want you to have an

00:08:40.696 --> 00:08:42.936 A:middle
iPad app that's taking advantage

00:08:42.936 --> 00:08:44.256 A:middle
of larger screen sizes before

00:08:44.256 --> 00:08:45.126 A:middle
bringing it to the Mac.

00:08:46.686 --> 00:08:48.266 A:middle
Another case is apps that are

00:08:48.306 --> 00:08:49.716 A:middle
built around mobile features.

00:08:50.656 --> 00:08:52.256 A:middle
Earlier I showed you ARKit is

00:08:52.296 --> 00:08:53.116 A:middle
not being available.

00:08:53.646 --> 00:08:55.306 A:middle
If your app is based on ARKit,

00:08:55.306 --> 00:08:56.716 A:middle
it's not going to run very well

00:08:56.716 --> 00:08:57.226 A:middle
on the Mac.

00:08:58.006 --> 00:08:59.486 A:middle
But if the augmented reality

00:08:59.486 --> 00:09:01.926 A:middle
functionality is not crucial, it

00:08:59.486 --> 00:09:01.926 A:middle
functionality is not crucial, it

00:09:01.926 --> 00:09:03.096 A:middle
may still make sense to bring

00:09:03.096 --> 00:09:04.926 A:middle
the app over and conditionally

00:09:04.926 --> 00:09:07.246 A:middle
remove that functionality on the

00:09:08.276 --> 00:09:08.396 A:middle
Mac.

00:09:08.586 --> 00:09:10.086 A:middle
So, at this stage, before

00:09:10.086 --> 00:09:11.806 A:middle
inviting Jake on stage for his

00:09:11.806 --> 00:09:13.276 A:middle
demo, let me mention the

00:09:13.276 --> 00:09:14.446 A:middle
high-level goals that help us

00:09:14.556 --> 00:09:15.536 A:middle
design and deliver this

00:09:15.626 --> 00:09:16.166 A:middle
technology.

00:09:16.166 --> 00:09:19.786 A:middle
We want this to be easy to get

00:09:19.786 --> 00:09:20.156 A:middle
started.

00:09:21.076 --> 00:09:22.646 A:middle
We have a check box for that,

00:09:22.646 --> 00:09:23.826 A:middle
you saw it yesterday and you'll

00:09:23.826 --> 00:09:26.316 A:middle
also see in a minute.

00:09:26.316 --> 00:09:28.796 A:middle
And we want you to be able to

00:09:28.796 --> 00:09:30.436 A:middle
work with a single source base.

00:09:30.946 --> 00:09:32.366 A:middle
A single source base enables you

00:09:32.366 --> 00:09:33.696 A:middle
to develop without forking your

00:09:33.696 --> 00:09:35.766 A:middle
code and enables carrying both

00:09:35.766 --> 00:09:37.266 A:middle
the iPad and Mac versions of

00:09:37.266 --> 00:09:39.156 A:middle
your app forward simultaneously.

00:09:39.926 --> 00:09:41.636 A:middle
I want you to think of your apps

00:09:41.636 --> 00:09:43.146 A:middle
as iPad apps on the inside.

00:09:43.896 --> 00:09:45.126 A:middle
That's the way you've been

00:09:45.126 --> 00:09:47.176 A:middle
developing them as iOS SDK and

00:09:47.176 --> 00:09:48.426 A:middle
we want you to think -- continue

00:09:48.426 --> 00:09:50.016 A:middle
thinking in terms of the iOS SDK

00:09:50.016 --> 00:09:50.866 A:middle
and concepts.

00:09:51.786 --> 00:09:53.426 A:middle
And finally, we want the app to

00:09:53.426 --> 00:09:55.046 A:middle
come across as a Mac app on the

00:09:55.046 --> 00:09:55.556 A:middle
outside.

00:09:55.906 --> 00:09:57.406 A:middle
So, to the user, it is a

00:09:57.406 --> 00:09:59.276 A:middle
first-class Mac experience.

00:09:59.836 --> 00:10:02.506 A:middle
OK. So with this, let me invite

00:09:59.836 --> 00:10:02.506 A:middle
OK. So with this, let me invite

00:10:02.506 --> 00:10:03.986 A:middle
Jake on stage to show you how

00:10:03.986 --> 00:10:04.566 A:middle
you get started.

00:10:05.516 --> 00:10:10.276 A:middle
[ Applause ]

00:10:10.776 --> 00:10:11.856 A:middle
&gt;&gt; Good afternoon, everyone.

00:10:12.536 --> 00:10:13.766 A:middle
So, now that you've learned a

00:10:13.766 --> 00:10:15.646 A:middle
bit about iPad apps for Mac, I'm

00:10:15.646 --> 00:10:16.586 A:middle
going to show you how you can

00:10:16.586 --> 00:10:18.086 A:middle
bring your apps to the Mac using

00:10:18.126 --> 00:10:18.596 A:middle
Xcode.

00:10:19.266 --> 00:10:20.586 A:middle
Traditionally, you'd have to

00:10:20.586 --> 00:10:21.896 A:middle
learn a completely different UI

00:10:21.896 --> 00:10:23.076 A:middle
framework and write a whole new

00:10:23.076 --> 00:10:23.996 A:middle
app from scratch.

00:10:24.446 --> 00:10:25.946 A:middle
But with Xcode 11, we're making

00:10:25.946 --> 00:10:27.416 A:middle
it possible for you to reuse

00:10:27.416 --> 00:10:29.196 A:middle
your existing project and source

00:10:29.196 --> 00:10:29.436 A:middle
code.

00:10:29.946 --> 00:10:30.736 A:middle
Let's go give it a try.

00:10:41.976 --> 00:10:44.056 A:middle
So, here I've got a small recipe

00:10:44.056 --> 00:10:45.456 A:middle
management iPad app that I've

00:10:45.456 --> 00:10:46.226 A:middle
prepared earlier.

00:10:46.536 --> 00:10:48.116 A:middle
And to get started, we're going

00:10:48.116 --> 00:10:50.386 A:middle
to open our project in Xcode and

00:10:52.736 --> 00:10:54.916 A:middle
we're going to check the Mac

00:10:55.706 --> 00:10:57.496 A:middle
check box under Deployment Info.

00:10:58.516 --> 00:10:59.846 A:middle
Now, note that this will only be

00:10:59.846 --> 00:11:01.206 A:middle
available if your app supports

00:10:59.846 --> 00:11:01.206 A:middle
available if your app supports

00:11:01.206 --> 00:11:01.546 A:middle
iPad.

00:11:02.686 --> 00:11:03.886 A:middle
So, I'm going to go ahead and

00:11:03.886 --> 00:11:06.676 A:middle
click this check box and we're

00:11:06.676 --> 00:11:07.716 A:middle
going to see a sheet pop up

00:11:07.716 --> 00:11:08.936 A:middle
which will explain that Xcode is

00:11:08.936 --> 00:11:10.096 A:middle
going to make some changes to

00:11:10.096 --> 00:11:10.796 A:middle
your project.

00:11:11.206 --> 00:11:12.326 A:middle
So, I'm going to go ahead and

00:11:12.326 --> 00:11:12.956 A:middle
click Enable.

00:11:12.956 --> 00:11:16.436 A:middle
Now, let's take a look at what

00:11:16.436 --> 00:11:17.286 A:middle
that did.

00:11:17.666 --> 00:11:18.976 A:middle
So, one of the first things

00:11:18.976 --> 00:11:20.486 A:middle
you'll notice is that there is a

00:11:20.486 --> 00:11:22.596 A:middle
new My Mac run destination in

00:11:22.596 --> 00:11:23.376 A:middle
the Scheme Selector.

00:11:23.896 --> 00:11:25.656 A:middle
This allows you to build, debug,

00:11:25.706 --> 00:11:30.066 A:middle
and test your app for the Mac.

00:11:30.286 --> 00:11:31.676 A:middle
You'll also see that there's a

00:11:31.676 --> 00:11:33.336 A:middle
new label below the Bundle

00:11:33.336 --> 00:11:34.236 A:middle
Identifier field.

00:11:34.726 --> 00:11:36.986 A:middle
All iPad apps and app extensions

00:11:37.036 --> 00:11:38.226 A:middle
brought to the Mac using this

00:11:38.226 --> 00:11:39.836 A:middle
technology will automatically

00:11:39.836 --> 00:11:41.256 A:middle
get a new bundle identifier by

00:11:41.256 --> 00:11:42.806 A:middle
default which uses a special

00:11:42.806 --> 00:11:43.266 A:middle
prefix.

00:11:43.996 --> 00:11:46.336 A:middle
If you have any hard-coded

00:11:46.336 --> 00:11:47.706 A:middle
references to your app or its

00:11:47.706 --> 00:11:49.026 A:middle
app extensions bundle IDs, you

00:11:49.456 --> 00:11:50.896 A:middle
may need to make some co-changes

00:11:50.896 --> 00:11:51.986 A:middle
to take that into account.

00:11:52.666 --> 00:11:53.966 A:middle
And you can learn more about

00:11:53.996 --> 00:11:55.656 A:middle
this and how it affects signing,

00:11:55.656 --> 00:11:57.476 A:middle
provisioning and distribution in

00:11:57.476 --> 00:11:59.416 A:middle
our next talk, Taking iPad Apps

00:11:59.416 --> 00:12:00.646 A:middle
for Mac to the Next Level.

00:11:59.416 --> 00:12:00.646 A:middle
for Mac to the Next Level.

00:12:01.616 --> 00:12:02.906 A:middle
Next, let's talk about

00:12:02.966 --> 00:12:03.736 A:middle
capabilities.

00:12:04.666 --> 00:12:06.786 A:middle
On iOS, apps need to specify

00:12:06.846 --> 00:12:08.276 A:middle
usage description strings in

00:12:08.276 --> 00:12:10.226 A:middle
their Info.plist, in order to

00:12:10.226 --> 00:12:11.656 A:middle
gain access to certain protected

00:12:11.656 --> 00:12:13.366 A:middle
system resources like the camera

00:12:13.516 --> 00:12:15.016 A:middle
or the user's location.

00:12:15.626 --> 00:12:17.386 A:middle
Xcode will use this information

00:12:17.596 --> 00:12:19.076 A:middle
to automatically add equivalent

00:12:19.076 --> 00:12:20.676 A:middle
entitlements to your Mac app, so

00:12:20.676 --> 00:12:22.036 A:middle
that you get the same behavior

00:12:22.036 --> 00:12:23.116 A:middle
as you had on iOS.

00:12:24.376 --> 00:12:27.546 A:middle
For example, iOS apps get the

00:12:27.546 --> 00:12:29.236 A:middle
ability to make outgoing network

00:12:29.236 --> 00:12:30.826 A:middle
connections by default, whereas

00:12:30.826 --> 00:12:32.386 A:middle
Mac apps need entitlement.

00:12:33.026 --> 00:12:34.306 A:middle
If we go to the Signing and

00:12:34.306 --> 00:12:36.386 A:middle
Capabilities Editor, we can see

00:12:36.386 --> 00:12:37.976 A:middle
that Xcode has automatically

00:12:37.976 --> 00:12:39.266 A:middle
added the network client

00:12:39.266 --> 00:12:40.916 A:middle
entitlement as well as a couple

00:12:40.916 --> 00:12:42.366 A:middle
of others based on the Usage

00:12:42.366 --> 00:12:43.856 A:middle
Description strings in our apps

00:12:43.856 --> 00:12:44.766 A:middle
Info.plist.

00:12:48.296 --> 00:12:50.206 A:middle
Next up are frameworks and app

00:12:50.206 --> 00:12:50.796 A:middle
extensions.

00:12:51.706 --> 00:12:53.016 A:middle
While the majority of the iOS

00:12:53.016 --> 00:12:54.486 A:middle
frameworks are also supported on

00:12:54.486 --> 00:12:55.796 A:middle
macOS, there are still

00:12:55.796 --> 00:12:57.126 A:middle
differences between the two

00:12:57.246 --> 00:12:57.476 A:middle
SDKs.

00:12:57.476 --> 00:13:00.146 A:middle
I'm going to focus primarily on

00:12:57.476 --> 00:13:00.146 A:middle
I'm going to focus primarily on

00:13:00.146 --> 00:13:01.746 A:middle
the Xcode project configuration

00:13:02.046 --> 00:13:03.386 A:middle
and later Jason will tell you

00:13:03.386 --> 00:13:05.016 A:middle
more about the API differences.

00:13:06.486 --> 00:13:07.776 A:middle
Now, when Xcode updates your

00:13:07.776 --> 00:13:09.876 A:middle
project it automatically

00:13:09.876 --> 00:13:11.716 A:middle
excludes any unavailable content

00:13:11.716 --> 00:13:12.516 A:middle
from your Mac build.

00:13:12.716 --> 00:13:14.276 A:middle
This includes unavailable system

00:13:14.276 --> 00:13:16.146 A:middle
SDK frameworks, unavailable app

00:13:16.146 --> 00:13:18.036 A:middle
extension types, and Apple Watch

00:13:18.036 --> 00:13:18.496 A:middle
content.

00:13:19.806 --> 00:13:21.246 A:middle
If we go back to the general tab

00:13:22.836 --> 00:13:24.126 A:middle
you can see in the frameworks

00:13:24.126 --> 00:13:25.386 A:middle
libraries and embedded content

00:13:25.386 --> 00:13:27.886 A:middle
section that Xcode has already

00:13:27.886 --> 00:13:28.846 A:middle
done this for some of our

00:13:28.846 --> 00:13:29.626 A:middle
dependencies.

00:13:30.086 --> 00:13:32.156 A:middle
Both ARKit and our Watch app are

00:13:32.156 --> 00:13:33.976 A:middle
marked as building for iOS only.

00:13:34.566 --> 00:13:39.056 A:middle
So, let's go ahead and try to

00:13:39.156 --> 00:13:42.856 A:middle
build this out for the Mac now.

00:13:43.606 --> 00:13:44.796 A:middle
So, let's see if we've got an

00:13:44.846 --> 00:13:45.216 A:middle
error.

00:13:46.006 --> 00:13:48.066 A:middle
And this error says that one of

00:13:48.066 --> 00:13:50.826 A:middle
our dependent frameworks is not

00:13:50.826 --> 00:13:52.096 A:middle
compatible because it was built

00:13:52.096 --> 00:13:53.196 A:middle
for iOS Simulator.

00:13:54.406 --> 00:13:56.096 A:middle
You may be wondering, both iOS

00:13:56.096 --> 00:13:58.016 A:middle
Simulator and macOS frameworks

00:13:58.016 --> 00:13:59.086 A:middle
are built for x86.

00:13:59.576 --> 00:14:01.256 A:middle
So, can you reuse them in your

00:13:59.576 --> 00:14:01.256 A:middle
So, can you reuse them in your

00:14:01.256 --> 00:14:02.096 A:middle
iPad apps for Mac?

00:14:02.856 --> 00:14:04.316 A:middle
Well, the answer is no.

00:14:05.496 --> 00:14:06.896 A:middle
For any pre-compiled binary

00:14:06.896 --> 00:14:08.036 A:middle
libraries that you may have,

00:14:08.506 --> 00:14:09.416 A:middle
you'll need to reach out to your

00:14:09.416 --> 00:14:10.576 A:middle
vendor to provide a version

00:14:10.576 --> 00:14:12.126 A:middle
specifically compiled for the

00:14:12.126 --> 00:14:13.816 A:middle
iPad apps for Mac environment.

00:14:14.676 --> 00:14:15.986 A:middle
Frameworks built from source as

00:14:15.986 --> 00:14:16.996 A:middle
part of your project on the

00:14:16.996 --> 00:14:18.446 A:middle
other hand are automatically

00:14:18.446 --> 00:14:19.856 A:middle
configured to build for Mac by

00:14:19.856 --> 00:14:20.226 A:middle
default.

00:14:24.396 --> 00:14:26.086 A:middle
You may want to consider using

00:14:26.086 --> 00:14:27.536 A:middle
the platform drop-down if you're

00:14:27.536 --> 00:14:28.826 A:middle
in the frameworks libraries and

00:14:28.826 --> 00:14:30.556 A:middle
embedded content section, to

00:14:30.866 --> 00:14:32.556 A:middle
exclude incompatible libraries

00:14:32.556 --> 00:14:34.266 A:middle
from your Mac build until you're

00:14:34.266 --> 00:14:35.486 A:middle
able to obtain a compatible

00:14:35.486 --> 00:14:37.356 A:middle
version or if the functionality

00:14:37.356 --> 00:14:39.026 A:middle
that it provides isn't suitable

00:14:39.026 --> 00:14:39.726 A:middle
for your Mac app.

00:14:40.646 --> 00:14:42.036 A:middle
However, if you rely on that

00:14:42.036 --> 00:14:42.876 A:middle
framework for critical

00:14:42.876 --> 00:14:44.596 A:middle
functionality, it may be best to

00:14:44.596 --> 00:14:46.176 A:middle
wait for updated libraries from

00:14:46.176 --> 00:14:48.856 A:middle
your vendors before reporting to

00:14:50.856 --> 00:14:50.966 A:middle
Mac.

00:14:51.126 --> 00:14:52.986 A:middle
Now, in this case, I happen to

00:14:52.986 --> 00:14:54.586 A:middle
have an updated copy of this

00:14:54.586 --> 00:14:55.486 A:middle
library available.

00:14:55.936 --> 00:14:56.986 A:middle
So, I'm going to go ahead and

00:14:56.986 --> 00:14:58.166 A:middle
add this to the project.

00:14:59.606 --> 00:15:00.976 A:middle
So, first I'll delete the

00:14:59.606 --> 00:15:00.976 A:middle
So, first I'll delete the

00:15:00.976 --> 00:15:01.886 A:middle
existing framework.

00:15:02.536 --> 00:15:05.046 A:middle
And, now, we'll go ahead and

00:15:05.046 --> 00:15:06.066 A:middle
drag the new one in.

00:15:06.706 --> 00:15:10.266 A:middle
Now, the first thing you may

00:15:10.266 --> 00:15:11.766 A:middle
notice is that this isn't a

00:15:11.766 --> 00:15:12.716 A:middle
regular framework.

00:15:14.186 --> 00:15:15.956 A:middle
This updated library has been

00:15:15.956 --> 00:15:17.476 A:middle
delivered as an XC framework,

00:15:17.836 --> 00:15:19.286 A:middle
which is a new feature in Xcode

00:15:19.286 --> 00:15:20.576 A:middle
11 that allows library

00:15:20.576 --> 00:15:22.126 A:middle
developers to package a library

00:15:22.126 --> 00:15:23.926 A:middle
from multiple platforms into a

00:15:23.926 --> 00:15:25.406 A:middle
single distributable bundle that

00:15:25.406 --> 00:15:26.526 A:middle
you can use in your Xcode

00:15:26.556 --> 00:15:27.166 A:middle
projects.

00:15:28.286 --> 00:15:29.826 A:middle
XC frameworks are not required

00:15:29.826 --> 00:15:30.566 A:middle
when bringing your app to the

00:15:30.566 --> 00:15:32.276 A:middle
Mac, but then they got much more

00:15:32.276 --> 00:15:33.956 A:middle
convenient to manage your

00:15:33.956 --> 00:15:35.356 A:middle
dependencies across multiple

00:15:35.356 --> 00:15:36.066 A:middle
platforms.

00:15:37.356 --> 00:15:38.436 A:middle
You can learn more about them in

00:15:38.436 --> 00:15:39.806 A:middle
binary frameworks in Swift.

00:15:40.346 --> 00:15:42.086 A:middle
And note that they do work for

00:15:42.086 --> 00:15:42.976 A:middle
Objective-C as well.

00:15:46.956 --> 00:15:48.656 A:middle
Next, one of the most important

00:15:48.656 --> 00:15:49.786 A:middle
aspects of bringing your app to

00:15:49.786 --> 00:15:51.356 A:middle
the Mac is, of course, your

00:15:51.356 --> 00:15:51.716 A:middle
code.

00:15:52.666 --> 00:15:54.066 A:middle
Now, I previously showed you how

00:15:54.066 --> 00:15:55.676 A:middle
Xcode will automatically exclude

00:15:55.676 --> 00:15:57.096 A:middle
some unavailable frameworks from

00:15:57.096 --> 00:15:57.536 A:middle
your build.

00:15:58.216 --> 00:15:59.136 A:middle
But you may still need to make

00:15:59.136 --> 00:16:00.476 A:middle
adjustments to your source code

00:15:59.136 --> 00:16:00.476 A:middle
adjustments to your source code

00:16:00.716 --> 00:16:01.866 A:middle
in order to compile out any

00:16:01.896 --> 00:16:03.636 A:middle
references to API as provided by

00:16:03.636 --> 00:16:05.326 A:middle
those frameworks which may be

00:16:05.326 --> 00:16:06.866 A:middle
unavailable due to differences

00:16:06.866 --> 00:16:08.536 A:middle
in hardware or differences in

00:16:08.536 --> 00:16:09.556 A:middle
user experience.

00:16:10.096 --> 00:16:13.016 A:middle
You can conditionally compile

00:16:13.016 --> 00:16:14.296 A:middle
your code using the target

00:16:14.296 --> 00:16:15.606 A:middle
environment platform condition

00:16:15.606 --> 00:16:18.216 A:middle
in Swift or the target OS macros

00:16:18.306 --> 00:16:19.206 A:middle
in Objective-C.

00:16:19.676 --> 00:16:22.096 A:middle
So, let's take a look at that

00:16:22.096 --> 00:16:22.286 A:middle
now.

00:16:22.286 --> 00:16:23.666 A:middle
I'm going to go ahead and try to

00:16:23.666 --> 00:16:24.356 A:middle
build again.

00:16:24.866 --> 00:16:29.556 A:middle
And we can see that ARKit is not

00:16:29.556 --> 00:16:30.006 A:middle
available.

00:16:31.296 --> 00:16:34.336 A:middle
Great. So, I was hoping to add a

00:16:34.336 --> 00:16:36.746 A:middle
way to preview my recipes in

00:16:36.746 --> 00:16:37.636 A:middle
augmented reality.

00:16:38.336 --> 00:16:39.976 A:middle
But we can probably get away

00:16:39.976 --> 00:16:41.846 A:middle
without that, the food is best

00:16:41.846 --> 00:16:43.076 A:middle
experienced in a different kind

00:16:43.076 --> 00:16:44.546 A:middle
of AR, actual reality.

00:16:44.696 --> 00:16:46.146 A:middle
So, let's just go ahead and

00:16:46.236 --> 00:16:46.896 A:middle
comment that out.

00:16:48.246 --> 00:16:49.776 A:middle
So, I've got some sample code

00:16:49.776 --> 00:16:50.946 A:middle
here I can use to do that.

00:16:50.946 --> 00:16:54.076 A:middle
I'm going to go ahead and #ifdef

00:16:54.076 --> 00:16:54.956 A:middle
out ARKit.

00:16:54.956 --> 00:16:58.846 A:middle
And I'm going to #ifdef out the

00:16:58.846 --> 00:17:00.396 A:middle
corresponding API as well.

00:16:58.846 --> 00:17:00.396 A:middle
corresponding API as well.

00:17:00.396 --> 00:17:04.205 A:middle
OK. Let's try to build it one

00:17:04.205 --> 00:17:05.576 A:middle
more time.

00:17:06.915 --> 00:17:07.726 A:middle
Another error.

00:17:08.106 --> 00:17:13.496 A:middle
OK. So, this time this looks

00:17:13.496 --> 00:17:15.346 A:middle
like the StoreKit framework is

00:17:15.346 --> 00:17:16.056 A:middle
available in the Mac.

00:17:16.736 --> 00:17:18.986 A:middle
But the specific API that we're

00:17:18.986 --> 00:17:20.185 A:middle
trying to use here is not.

00:17:21.056 --> 00:17:22.376 A:middle
Now, I'm not sure what my apps

00:17:22.376 --> 00:17:23.576 A:middle
marketing team is trying to do

00:17:23.576 --> 00:17:25.945 A:middle
here, but probably not too

00:17:25.945 --> 00:17:26.296 A:middle
important.

00:17:26.296 --> 00:17:27.836 A:middle
I'm just going to #if this out

00:17:28.496 --> 00:17:28.936 A:middle
as well.

00:17:29.856 --> 00:17:33.816 A:middle
OK. And we can leave it to do

00:17:33.816 --> 00:17:37.956 A:middle
for them, TODO: Something else?

00:17:39.216 --> 00:17:41.396 A:middle
OK. Great.

00:17:42.326 --> 00:17:44.296 A:middle
So, at this point, I could run

00:17:44.296 --> 00:17:44.646 A:middle
the app.

00:17:45.436 --> 00:17:47.096 A:middle
But before I do so, let's

00:17:47.096 --> 00:17:48.866 A:middle
consider one key refinement that

00:17:48.866 --> 00:17:49.876 A:middle
we can make to our Mac app.

00:17:50.806 --> 00:17:53.536 A:middle
By default, UIKit apps will use

00:17:53.686 --> 00:17:55.896 A:middle
the icon from your iPad app, the

00:17:55.896 --> 00:17:58.486 A:middle
same rounded rec design, as you

00:17:58.486 --> 00:18:00.096 A:middle
can see here, this nice little

00:17:58.486 --> 00:18:00.096 A:middle
can see here, this nice little

00:18:00.096 --> 00:18:00.706 A:middle
cookie.

00:18:01.446 --> 00:18:03.566 A:middle
But Mac apps traditionally have

00:18:03.566 --> 00:18:05.276 A:middle
beautiful detailed rich icons,

00:18:05.276 --> 00:18:07.166 A:middle
which can be up to 512 points in

00:18:07.166 --> 00:18:08.676 A:middle
size and make use of

00:18:08.676 --> 00:18:09.946 A:middle
transparency for even more

00:18:09.946 --> 00:18:11.176 A:middle
design and flexibility.

00:18:12.316 --> 00:18:13.396 A:middle
Customizing your app with a

00:18:13.396 --> 00:18:14.806 A:middle
great Mac icon really helps it

00:18:14.806 --> 00:18:16.426 A:middle
to standout and you can learn

00:18:16.426 --> 00:18:17.876 A:middle
more about how to design a great

00:18:17.876 --> 00:18:20.466 A:middle
one in the section, What's New

00:18:20.466 --> 00:18:22.896 A:middle
in iOS and macOS Design.

00:18:23.616 --> 00:18:25.886 A:middle
So, to add a Mac specific icon

00:18:26.306 --> 00:18:27.966 A:middle
we're going to want to navigate

00:18:28.016 --> 00:18:30.156 A:middle
to the Asset Catalog Editor in

00:18:30.206 --> 00:18:32.786 A:middle
Xcode, so select my Asset

00:18:32.846 --> 00:18:35.426 A:middle
Catalog here and I'm going to

00:18:35.426 --> 00:18:37.036 A:middle
select the App Icon Resource.

00:18:37.706 --> 00:18:41.126 A:middle
And I'm going to the Inspector

00:18:41.526 --> 00:18:44.146 A:middle
and I'm going to check the Mac

00:18:44.226 --> 00:18:45.486 A:middle
check box to reveal the new

00:18:45.486 --> 00:18:46.056 A:middle
slots.

00:18:46.606 --> 00:18:48.666 A:middle
And from here, you just need to

00:18:48.666 --> 00:18:49.946 A:middle
drag in your new icons.

00:18:49.996 --> 00:18:51.636 A:middle
So, I'm going to go ahead and

00:18:51.636 --> 00:18:52.766 A:middle
use an icon set that I've

00:18:52.766 --> 00:18:53.676 A:middle
prepared earlier.

00:18:55.216 --> 00:18:57.226 A:middle
I'm going to go ahead and drag

00:18:58.376 --> 00:18:58.916 A:middle
that in.

00:18:59.566 --> 00:19:03.786 A:middle
Oops. There we go.

00:18:59.566 --> 00:19:03.786 A:middle
Oops. There we go.

00:19:04.046 --> 00:19:05.676 A:middle
OK. You can see we got this

00:19:05.706 --> 00:19:06.746 A:middle
great cookie icon.

00:19:08.526 --> 00:19:10.626 A:middle
So, let's go ahead and give this

00:19:10.626 --> 00:19:11.226 A:middle
one more try.

00:19:11.226 --> 00:19:12.556 A:middle
I'm going to go ahead and build

00:19:12.556 --> 00:19:12.926 A:middle
again.

00:19:13.826 --> 00:19:15.056 A:middle
And this may take a moment

00:19:15.056 --> 00:19:16.106 A:middle
because we've switch from

00:19:16.106 --> 00:19:17.666 A:middle
building for iOS to building for

00:19:17.666 --> 00:19:18.056 A:middle
the Mac.

00:19:18.056 --> 00:19:19.116 A:middle
It's going to need to rebuild

00:19:19.116 --> 00:19:21.186 A:middle
all of our source code and our

00:19:21.186 --> 00:19:21.936 A:middle
resources.

00:19:22.036 --> 00:19:25.346 A:middle
I'll give that a moment to come

00:19:25.346 --> 00:19:25.486 A:middle
up.

00:19:27.006 --> 00:19:28.786 A:middle
And we have successfully built

00:19:28.826 --> 00:19:30.286 A:middle
and run for the Mac.

00:19:30.286 --> 00:19:32.346 A:middle
And you can see we've got -- oh,

00:19:32.346 --> 00:19:32.876 A:middle
thank you.

00:19:33.516 --> 00:19:36.896 A:middle
[ Applause ]

00:19:37.396 --> 00:19:38.256 A:middle
And you can see we've got a

00:19:38.256 --> 00:19:40.496 A:middle
title bar, we've got window stop

00:19:40.496 --> 00:19:43.156 A:middle
lights, we've got a menu,

00:19:44.036 --> 00:19:46.446 A:middle
resizable window, and of course

00:19:46.446 --> 00:19:48.656 A:middle
our beautiful Mac cookie icon,

00:19:49.846 --> 00:19:51.386 A:middle
just like you'd expect.

00:19:52.276 --> 00:19:53.746 A:middle
And once you're finished

00:19:53.746 --> 00:19:55.966 A:middle
bringing your app to the Mac you

00:19:55.966 --> 00:19:57.656 A:middle
can click the product archive

00:19:57.656 --> 00:19:59.586 A:middle
Menu item in Xcode to create an

00:19:59.586 --> 00:20:00.976 A:middle
archive and open the organizer.

00:19:59.586 --> 00:20:00.976 A:middle
archive and open the organizer.

00:20:01.726 --> 00:20:02.756 A:middle
And from there, you can

00:20:02.756 --> 00:20:04.286 A:middle
distribute to the Mac App Store

00:20:04.446 --> 00:20:05.936 A:middle
or do so independently using

00:20:05.936 --> 00:20:07.326 A:middle
developer ID.

00:20:08.696 --> 00:20:11.396 A:middle
So, that's how Xcode 11 helps

00:20:11.396 --> 00:20:12.646 A:middle
you bring your iPad apps to the

00:20:12.646 --> 00:20:12.806 A:middle
Mac.

00:20:14.446 --> 00:20:15.836 A:middle
And now, I'd like to invite Ali

00:20:15.836 --> 00:20:17.166 A:middle
back to the stage who's going to

00:20:17.166 --> 00:20:18.366 A:middle
tell you more about the user

00:20:18.366 --> 00:20:19.736 A:middle
experience improvements that you

00:20:19.736 --> 00:20:20.246 A:middle
get for free.

00:20:21.516 --> 00:20:25.476 A:middle
[ Applause ]

00:20:25.976 --> 00:20:26.926 A:middle
&gt;&gt; OK. So, now, I want to talk

00:20:26.976 --> 00:20:28.516 A:middle
to you about things you get for

00:20:28.516 --> 00:20:30.246 A:middle
free and I'm not going to talk

00:20:30.246 --> 00:20:31.796 A:middle
to you about the lunch you got

00:20:31.796 --> 00:20:32.606 A:middle
out on the concourse.

00:20:33.116 --> 00:20:35.176 A:middle
But what you get in your UIKit

00:20:35.246 --> 00:20:36.256 A:middle
for Mac app.

00:20:36.256 --> 00:20:37.586 A:middle
So there are ton of -- frankly

00:20:37.586 --> 00:20:38.446 A:middle
there are tons of things you get

00:20:38.496 --> 00:20:38.976 A:middle
for free.

00:20:39.276 --> 00:20:40.576 A:middle
Large sections of that whole

00:20:40.576 --> 00:20:41.766 A:middle
stack of frameworks, and

00:20:41.766 --> 00:20:43.166 A:middle
database, and services I showed

00:20:43.166 --> 00:20:45.016 A:middle
you earlier works in your Mac

00:20:45.176 --> 00:20:46.146 A:middle
app automatically.

00:20:46.576 --> 00:20:47.516 A:middle
But here, I want to highlight

00:20:47.586 --> 00:20:49.006 A:middle
some things that are not just

00:20:49.146 --> 00:20:51.306 A:middle
free but also automatically

00:20:51.306 --> 00:20:53.406 A:middle
mapped over to Mac paradigms and

00:20:53.406 --> 00:20:54.586 A:middle
Mac way of doing things.

00:20:55.126 --> 00:20:56.156 A:middle
So, let's first take a look at

00:20:56.156 --> 00:20:57.906 A:middle
that tasty recipe app that Jake

00:20:57.906 --> 00:20:58.326 A:middle
used.

00:20:59.126 --> 00:21:00.666 A:middle
So, as you saw on the demo, you

00:20:59.126 --> 00:21:00.666 A:middle
So, as you saw on the demo, you

00:21:00.666 --> 00:21:01.916 A:middle
got the default menu bar.

00:21:02.256 --> 00:21:03.656 A:middle
The app gets a pretty functional

00:21:03.656 --> 00:21:05.066 A:middle
default menu bar that has a lot

00:21:05.066 --> 00:21:06.706 A:middle
of menu items that Mac users

00:21:06.706 --> 00:21:07.046 A:middle
expect.

00:21:09.456 --> 00:21:10.656 A:middle
Next to get window management.

00:21:10.656 --> 00:21:11.836 A:middle
This includes things like window

00:21:11.836 --> 00:21:13.856 A:middle
resizing, full screen, split

00:21:13.906 --> 00:21:15.046 A:middle
view, also what we

00:21:15.046 --> 00:21:16.266 A:middle
affectionately call the window

00:21:16.266 --> 00:21:16.796 A:middle
stoplight.

00:21:16.876 --> 00:21:17.986 A:middle
So there's three buttons in the

00:21:17.986 --> 00:21:18.536 A:middle
title bar.

00:21:19.246 --> 00:21:20.546 A:middle
And one more thing to point out,

00:21:21.976 --> 00:21:23.276 A:middle
if you happen to have your iPad

00:21:23.276 --> 00:21:25.056 A:middle
nearby, you have the ability to

00:21:25.056 --> 00:21:26.876 A:middle
display your iPad app for a Mac

00:21:26.876 --> 00:21:28.336 A:middle
window on your iPad.

00:21:29.516 --> 00:21:33.136 A:middle
[ Applause ]

00:21:33.636 --> 00:21:35.306 A:middle
Dark mode works automatically.

00:21:36.476 --> 00:21:37.796 A:middle
If you go further and adapt any

00:21:37.796 --> 00:21:39.466 A:middle
of the new APIs to make your app

00:21:39.466 --> 00:21:40.826 A:middle
a better iOS dark mode app,

00:21:40.906 --> 00:21:42.106 A:middle
those will also carry over

00:21:42.106 --> 00:21:42.746 A:middle
automatically.

00:21:43.666 --> 00:21:45.316 A:middle
Scrollbars and scrolling also

00:21:45.316 --> 00:21:46.626 A:middle
works as expected on the Mac,

00:21:47.146 --> 00:21:48.636 A:middle
mapping to overlay scrollbar

00:21:48.636 --> 00:21:49.336 A:middle
functionality.

00:21:50.646 --> 00:21:51.746 A:middle
Scrolling also works when the

00:21:51.746 --> 00:21:53.116 A:middle
window is inactive which, of

00:21:53.116 --> 00:21:54.326 A:middle
course is something that users

00:21:54.326 --> 00:21:56.286 A:middle
expect on the Mac with gesture

00:21:56.286 --> 00:21:56.776 A:middle
scrolling.

00:21:57.816 --> 00:21:59.646 A:middle
If the user has scrollbars

00:21:59.646 --> 00:22:01.226 A:middle
always showing, that will also

00:21:59.646 --> 00:22:01.226 A:middle
always showing, that will also

00:22:01.226 --> 00:22:03.446 A:middle
work automatically in your

00:22:03.446 --> 00:22:04.036 A:middle
application.

00:22:05.296 --> 00:22:06.946 A:middle
Now let me talk about settings.

00:22:07.346 --> 00:22:08.546 A:middle
Our recipe app does not have any

00:22:08.626 --> 00:22:10.486 A:middle
settings, so I'll show you the

00:22:10.486 --> 00:22:11.836 A:middle
vice memos app.

00:22:12.956 --> 00:22:14.706 A:middle
On iOS, apps specify setting

00:22:14.776 --> 00:22:16.736 A:middle
bundles and these controls --

00:22:16.736 --> 00:22:18.206 A:middle
these settings controls appear

00:22:18.206 --> 00:22:19.286 A:middle
in the iOS settings app.

00:22:19.766 --> 00:22:20.486 A:middle
For instance, here are the

00:22:20.576 --> 00:22:22.186 A:middle
settings for voice memos, in the

00:22:22.236 --> 00:22:22.826 A:middle
settings apps.

00:22:23.116 --> 00:22:24.416 A:middle
Now, on the Mac, the design

00:22:24.416 --> 00:22:25.646 A:middle
guideline is to access app

00:22:25.886 --> 00:22:27.956 A:middle
preferences through a menu item

00:22:28.056 --> 00:22:29.156 A:middle
in the app like this.

00:22:29.666 --> 00:22:30.876 A:middle
So, when we see that your app

00:22:30.966 --> 00:22:32.676 A:middle
has settings, we give you this

00:22:32.736 --> 00:22:34.566 A:middle
menu item and automatically map

00:22:34.676 --> 00:22:36.406 A:middle
the settings to a Mac prefpane

00:22:36.806 --> 00:22:39.046 A:middle
within the app like so, and you

00:22:39.046 --> 00:22:40.376 A:middle
can see them side by side.

00:22:40.416 --> 00:22:41.236 A:middle
So, this is automatic.

00:22:42.516 --> 00:22:46.916 A:middle
[ Applause ]

00:22:47.416 --> 00:22:49.346 A:middle
Your application gets basic

00:22:49.346 --> 00:22:50.816 A:middle
support for touch bar, the

00:22:50.816 --> 00:22:52.206 A:middle
system touch bar that all apps

00:22:52.266 --> 00:22:52.696 A:middle
get.

00:22:52.956 --> 00:22:54.476 A:middle
But in addition, if you're using

00:22:54.476 --> 00:22:55.386 A:middle
API such as

00:22:55.386 --> 00:22:57.256 A:middle
AVPlayerViewController or

00:22:57.256 --> 00:22:59.346 A:middle
UITextView, they will also

00:22:59.346 --> 00:23:00.706 A:middle
automatically provide access to

00:22:59.346 --> 00:23:00.706 A:middle
automatically provide access to

00:23:00.706 --> 00:23:02.366 A:middle
the media in the text touch bars

00:23:02.436 --> 00:23:03.626 A:middle
in your app, like the ones you

00:23:03.626 --> 00:23:04.046 A:middle
see here.

00:23:06.526 --> 00:23:07.576 A:middle
Another key element that's

00:23:07.576 --> 00:23:08.756 A:middle
automatically mapped is the

00:23:08.756 --> 00:23:09.906 A:middle
Document Picker.

00:23:09.906 --> 00:23:10.326 A:middle
Here is how

00:23:10.326 --> 00:23:12.096 A:middle
UIDocumentPickerViewController

00:23:12.096 --> 00:23:14.626 A:middle
comes across as NSOpenPanel as

00:23:14.626 --> 00:23:17.936 A:middle
the user would expect.

00:23:18.126 --> 00:23:19.676 A:middle
Custom views that you've created

00:23:19.886 --> 00:23:22.096 A:middle
come across as is, as intended.

00:23:22.546 --> 00:23:23.856 A:middle
Here in the voice memos app, the

00:23:23.856 --> 00:23:25.146 A:middle
custom waveform view looks

00:23:25.146 --> 00:23:27.226 A:middle
exactly the same across both

00:23:27.226 --> 00:23:27.786 A:middle
platforms.

00:23:28.126 --> 00:23:32.036 A:middle
Now, let me talk about another

00:23:32.036 --> 00:23:33.296 A:middle
set of things that come across

00:23:33.556 --> 00:23:34.536 A:middle
pretty much as is.

00:23:35.316 --> 00:23:37.216 A:middle
Let's look at a form sheet in

00:23:37.216 --> 00:23:37.806 A:middle
News.

00:23:38.186 --> 00:23:40.196 A:middle
Here's News on the iPad and

00:23:40.196 --> 00:23:41.916 A:middle
here's the form sheet for

00:23:42.356 --> 00:23:43.416 A:middle
managing notifications.

00:23:44.666 --> 00:23:46.916 A:middle
And here's News on the Mac with

00:23:46.916 --> 00:23:48.316 A:middle
the same form sheet displayed.

00:23:48.986 --> 00:23:50.146 A:middle
You can see that that form sheet

00:23:50.146 --> 00:23:52.276 A:middle
comes across as is along with

00:23:52.276 --> 00:23:53.946 A:middle
the UI switches in the content.

00:23:54.506 --> 00:23:56.276 A:middle
Let me show you side by side.

00:23:56.886 --> 00:23:58.296 A:middle
So, here, you're seeing one of

00:23:58.296 --> 00:24:00.066 A:middle
my main goals and that's to

00:23:58.296 --> 00:24:00.066 A:middle
my main goals and that's to

00:24:00.066 --> 00:24:01.776 A:middle
provide a high degree of source

00:24:01.776 --> 00:24:04.896 A:middle
compatibility for your apps

00:24:04.896 --> 00:24:05.506 A:middle
where possible.

00:24:05.986 --> 00:24:07.606 A:middle
Trying to give apps full AppKit

00:24:07.646 --> 00:24:09.246 A:middle
controls and metrics with

00:24:09.246 --> 00:24:10.406 A:middle
represent too much of a

00:24:10.406 --> 00:24:10.916 A:middle
disruption.

00:24:11.526 --> 00:24:13.586 A:middle
So, individually, UIKit controls

00:24:13.586 --> 00:24:15.006 A:middle
and layouts based on them come

00:24:15.006 --> 00:24:17.146 A:middle
across as is providing maximal

00:24:17.146 --> 00:24:19.196 A:middle
compatibility for your app.

00:24:20.996 --> 00:24:22.596 A:middle
Now along the same lines, text

00:24:22.596 --> 00:24:22.986 A:middle
sizes.

00:24:23.846 --> 00:24:25.576 A:middle
On iOS, the base line font size

00:24:25.576 --> 00:24:28.286 A:middle
for controls is 17 points while

00:24:28.496 --> 00:24:30.526 A:middle
on the Mac, it's 13 points.

00:24:30.526 --> 00:24:33.116 A:middle
And as you can see, not the same

00:24:33.116 --> 00:24:34.606 A:middle
size when displayed next to each

00:24:34.606 --> 00:24:36.456 A:middle
other, so two reasons for this

00:24:36.676 --> 00:24:38.226 A:middle
discrepancy is the higher

00:24:38.226 --> 00:24:39.726 A:middle
relative display density of iOS

00:24:39.786 --> 00:24:41.176 A:middle
devices and the need to

00:24:41.176 --> 00:24:42.136 A:middle
accommodate touches.

00:24:42.996 --> 00:24:44.656 A:middle
So, to provide interaction

00:24:44.746 --> 00:24:45.666 A:middle
consistent with Mac

00:24:45.666 --> 00:24:47.656 A:middle
applications, we scale content

00:24:47.656 --> 00:24:49.836 A:middle
areas down to 77%.

00:24:51.176 --> 00:24:52.276 A:middle
So, everything in the window is

00:24:52.356 --> 00:24:53.826 A:middle
scaled uniformly and you don't

00:24:53.826 --> 00:24:55.716 A:middle
have to redesign any of your

00:24:55.716 --> 00:24:56.816 A:middle
windows for the Mac.

00:24:58.016 --> 00:24:59.126 A:middle
We have a Font Management and

00:24:59.166 --> 00:25:00.656 A:middle
Text Scaling talk later in the

00:24:59.166 --> 00:25:00.656 A:middle
Text Scaling talk later in the

00:25:00.656 --> 00:25:02.256 A:middle
week which will cover this and

00:25:02.256 --> 00:25:03.696 A:middle
some related topics in more

00:25:03.696 --> 00:25:03.956 A:middle
depth.

00:25:06.936 --> 00:25:07.926 A:middle
Now, let me talk about a few

00:25:07.926 --> 00:25:09.186 A:middle
more things quickly that you get

00:25:09.236 --> 00:25:10.276 A:middle
for free.

00:25:10.466 --> 00:25:11.846 A:middle
If you implement copy and paste,

00:25:12.106 --> 00:25:14.186 A:middle
drag and drop, printing or take

00:25:14.686 --> 00:25:16.326 A:middle
advantage of the new multiple

00:25:16.326 --> 00:25:18.846 A:middle
window, multitasking APIs in iOS

00:25:18.906 --> 00:25:20.496 A:middle
13, these will carry over to the

00:25:20.496 --> 00:25:22.176 A:middle
Mac free and automatically.

00:25:23.446 --> 00:25:24.736 A:middle
On the Mac, the lifecycle of

00:25:24.736 --> 00:25:25.856 A:middle
your app adjusts to the Mac

00:25:25.936 --> 00:25:27.506 A:middle
paradigms and any call backs you

00:25:27.506 --> 00:25:28.806 A:middle
implement for managing a

00:25:28.806 --> 00:25:30.566 A:middle
lifecycle will also carry over

00:25:30.566 --> 00:25:31.596 A:middle
and work automatically on the

00:25:31.596 --> 00:25:31.756 A:middle
Mac.

00:25:32.296 --> 00:25:33.486 A:middle
You will hear more about this in

00:25:33.486 --> 00:25:35.826 A:middle
our Taking iPad Apps for Mac to

00:25:35.826 --> 00:25:36.726 A:middle
the Next Level talk.

00:25:37.736 --> 00:25:38.826 A:middle
Beyond these things you get for

00:25:38.826 --> 00:25:39.876 A:middle
free, there are things you can

00:25:39.876 --> 00:25:41.206 A:middle
do to make your app a better Mac

00:25:41.206 --> 00:25:43.336 A:middle
app and here are some of these.

00:25:43.756 --> 00:25:44.896 A:middle
Jake already covered the Mac

00:25:45.056 --> 00:25:45.616 A:middle
icon.

00:25:46.236 --> 00:25:47.616 A:middle
The rest we'll be covering in

00:25:47.616 --> 00:25:49.046 A:middle
our advanced session later in

00:25:49.046 --> 00:25:50.676 A:middle
the week and also in the iOS and

00:25:50.676 --> 00:25:52.406 A:middle
macOS design session later this

00:25:52.406 --> 00:25:52.896 A:middle
afternoon.

00:25:54.476 --> 00:25:55.786 A:middle
OK, so thank you.

00:25:55.786 --> 00:25:56.716 A:middle
At this point, I'd like to

00:25:56.716 --> 00:25:57.826 A:middle
invite Jason on stage.

00:25:58.516 --> 00:26:03.386 A:middle
[ Applause ]

00:25:58.516 --> 00:26:03.386 A:middle
[ Applause ]

00:26:03.886 --> 00:26:04.976 A:middle
&gt;&gt; All right, thanks Ali.

00:26:08.616 --> 00:26:09.516 A:middle
Good afternoon.

00:26:09.516 --> 00:26:11.376 A:middle
So, I'd like to dive into some

00:26:11.376 --> 00:26:12.696 A:middle
of the API differences that

00:26:12.696 --> 00:26:13.606 A:middle
you're likely to encounter when

00:26:13.606 --> 00:26:14.706 A:middle
you bring your iPad up to the

00:26:14.706 --> 00:26:15.006 A:middle
Mac.

00:26:15.516 --> 00:26:17.626 A:middle
And there are three categories

00:26:17.626 --> 00:26:18.666 A:middle
of API differences I want to

00:26:18.666 --> 00:26:19.136 A:middle
talk about.

00:26:19.136 --> 00:26:21.596 A:middle
Those APIs that have identical

00:26:21.596 --> 00:26:23.006 A:middle
behavior and the good news is

00:26:23.006 --> 00:26:24.536 A:middle
the majority of the APIs worked

00:26:24.596 --> 00:26:25.386 A:middle
as expected.

00:26:25.926 --> 00:26:28.226 A:middle
Those APIs that are mapped to

00:26:28.226 --> 00:26:29.066 A:middle
macOS functionally--

00:26:29.246 --> 00:26:30.576 A:middle
functionality automatically.

00:26:31.156 --> 00:26:33.176 A:middle
And these utilize the iOS APIs

00:26:33.176 --> 00:26:34.626 A:middle
but they result in macOS

00:26:34.626 --> 00:26:35.416 A:middle
behavior.

00:26:36.426 --> 00:26:38.036 A:middle
And then, finally, APIs that are

00:26:38.036 --> 00:26:39.396 A:middle
unavailable for various reasons

00:26:39.396 --> 00:26:40.556 A:middle
which we'll get into.

00:26:40.826 --> 00:26:41.476 A:middle
Now, we're not going to cover

00:26:41.476 --> 00:26:42.616 A:middle
anything in the first section

00:26:43.396 --> 00:26:44.776 A:middle
and Ali covered many of the

00:26:44.776 --> 00:26:46.016 A:middle
items in the second section.

00:26:46.616 --> 00:26:47.896 A:middle
But there's one additional area

00:26:47.896 --> 00:26:50.036 A:middle
that I like to talk about before

00:26:50.036 --> 00:26:51.306 A:middle
we jump into the third section

00:26:52.306 --> 00:26:53.386 A:middle
and that is mouse and touch

00:26:53.386 --> 00:26:53.956 A:middle
events.

00:26:55.156 --> 00:26:56.676 A:middle
So, iOS is built around a

00:26:56.676 --> 00:26:58.716 A:middle
direct, multi-touch interaction

00:26:58.716 --> 00:26:59.006 A:middle
model.

00:26:59.626 --> 00:27:01.156 A:middle
And macOS is built around an

00:26:59.626 --> 00:27:01.156 A:middle
And macOS is built around an

00:27:01.186 --> 00:27:02.916 A:middle
indirect cursor-based

00:27:02.916 --> 00:27:03.716 A:middle
interaction model.

00:27:03.716 --> 00:27:05.366 A:middle
And there are significant

00:27:05.366 --> 00:27:06.996 A:middle
challenges when trying to bring

00:27:06.996 --> 00:27:08.936 A:middle
a multi-touch application to the

00:27:08.936 --> 00:27:10.216 A:middle
Mac and make it feel at home,

00:27:10.836 --> 00:27:12.006 A:middle
though we do try to map

00:27:12.486 --> 00:27:14.156 A:middle
automatically as much behavior

00:27:14.156 --> 00:27:15.216 A:middle
as we possibly can.

00:27:16.716 --> 00:27:18.366 A:middle
We introduced a new UI Hover

00:27:18.366 --> 00:27:20.226 A:middle
Gesture Recognizer to let you

00:27:20.226 --> 00:27:21.286 A:middle
know when the mouse cursor is

00:27:21.326 --> 00:27:22.596 A:middle
position over your views.

00:27:23.166 --> 00:27:27.106 A:middle
And left mouse button drags are

00:27:27.106 --> 00:27:29.136 A:middle
mapped to a single synthesized

00:27:29.186 --> 00:27:30.716 A:middle
touch sequence that is

00:27:30.716 --> 00:27:32.536 A:middle
automatically recognized by tap,

00:27:33.166 --> 00:27:34.496 A:middle
psn and long-press gesture

00:27:34.496 --> 00:27:35.806 A:middle
recognizers that are set to

00:27:35.806 --> 00:27:36.946 A:middle
recognize a single touch.

00:27:42.776 --> 00:27:45.146 A:middle
Standard system gestures are

00:27:45.146 --> 00:27:46.466 A:middle
recognized at the hardware or

00:27:46.466 --> 00:27:47.556 A:middle
driver-level on the Mac, and

00:27:48.086 --> 00:27:49.636 A:middle
they post high level gesture

00:27:49.636 --> 00:27:50.736 A:middle
events to the system.

00:27:51.866 --> 00:27:52.986 A:middle
When the UIKit application

00:27:52.986 --> 00:27:54.346 A:middle
receives a high-level pinch

00:27:54.346 --> 00:27:56.976 A:middle
rotate gesture, we synthesize a

00:27:56.976 --> 00:27:58.866 A:middle
pair of touches and deliver them

00:27:58.866 --> 00:27:59.716 A:middle
to the view that's under the

00:27:59.716 --> 00:28:01.436 A:middle
cursor and this will

00:27:59.716 --> 00:28:01.436 A:middle
cursor and this will

00:28:01.436 --> 00:28:03.276 A:middle
automatically trigger any pinch

00:28:03.576 --> 00:28:05.356 A:middle
or rotation gesture recognizers

00:28:05.356 --> 00:28:05.976 A:middle
in your application.

00:28:08.856 --> 00:28:09.846 A:middle
If the user performs the

00:28:09.846 --> 00:28:11.726 A:middle
standard system scroll gesture,

00:28:12.176 --> 00:28:13.496 A:middle
in this case we don't synthesize

00:28:13.496 --> 00:28:15.386 A:middle
any touches but UIKit will

00:28:15.386 --> 00:28:17.256 A:middle
automatically scroll in the UI

00:28:17.256 --> 00:28:19.246 A:middle
Scroll Views that are under the

00:28:20.976 --> 00:28:21.116 A:middle
cursor.

00:28:21.286 --> 00:28:22.506 A:middle
Now, one thing we can't map

00:28:22.506 --> 00:28:23.926 A:middle
automatically is custom

00:28:23.926 --> 00:28:24.906 A:middle
multi-touch behavior.

00:28:25.446 --> 00:28:26.536 A:middle
Whether you're dealing with the

00:28:26.536 --> 00:28:27.826 A:middle
UI touches directly or you've

00:28:27.896 --> 00:28:29.046 A:middle
written a custom gesture

00:28:29.046 --> 00:28:30.916 A:middle
recognizer, there's simply no

00:28:30.916 --> 00:28:33.116 A:middle
automatic way to map from all of

00:28:33.116 --> 00:28:34.566 A:middle
the various input devices on the

00:28:34.566 --> 00:28:36.886 A:middle
Mac to your custom gestures.

00:28:37.696 --> 00:28:38.866 A:middle
If you rely on this in your

00:28:38.866 --> 00:28:39.846 A:middle
application, you'll need to

00:28:39.846 --> 00:28:41.616 A:middle
provide an alternate way for the

00:28:41.616 --> 00:28:42.856 A:middle
user to accomplish the same

00:28:42.856 --> 00:28:43.636 A:middle
thing when you bring your

00:28:43.636 --> 00:28:44.466 A:middle
application to the Mac.

00:28:46.736 --> 00:28:47.766 A:middle
So, let's move on to that third

00:28:47.766 --> 00:28:49.386 A:middle
category of API differences and

00:28:49.386 --> 00:28:50.406 A:middle
that's APIs that are

00:28:50.406 --> 00:28:51.006 A:middle
unavailable.

00:28:51.896 --> 00:28:53.016 A:middle
This fall into four general

00:28:53.096 --> 00:28:55.126 A:middle
groups, frameworks that are

00:28:55.126 --> 00:28:57.406 A:middle
deprecated, frameworks that are

00:28:57.406 --> 00:28:59.156 A:middle
unavailable because they're tied

00:28:59.436 --> 00:29:01.316 A:middle
to functionality in iOS that

00:28:59.436 --> 00:29:01.316 A:middle
to functionality in iOS that

00:29:01.316 --> 00:29:02.996 A:middle
doesn't exist in macOS,

00:29:04.536 --> 00:29:05.436 A:middle
frameworks that are tied to

00:29:05.436 --> 00:29:07.236 A:middle
specific hardware functionality

00:29:07.236 --> 00:29:09.256 A:middle
or sensors that don't exist on

00:29:09.256 --> 00:29:09.626 A:middle
the Mac.

00:29:10.666 --> 00:29:11.586 A:middle
And, finally, there are number

00:29:11.586 --> 00:29:12.276 A:middle
of frameworks that have

00:29:12.346 --> 00:29:14.276 A:middle
different behaviors or APIs that

00:29:14.786 --> 00:29:16.196 A:middle
are unavailable on macOS for

00:29:16.196 --> 00:29:17.046 A:middle
various reasons.

00:29:17.746 --> 00:29:18.846 A:middle
These would be annotated to make

00:29:18.846 --> 00:29:19.816 A:middle
this clear and to generate an

00:29:19.816 --> 00:29:20.656 A:middle
error in Xcode.

00:29:21.206 --> 00:29:22.006 A:middle
So, let's delve into this a

00:29:22.006 --> 00:29:22.636 A:middle
little bit deeper.

00:29:24.956 --> 00:29:26.606 A:middle
Deprecated frameworks are often

00:29:26.606 --> 00:29:28.386 A:middle
available for quite some time

00:29:28.736 --> 00:29:29.926 A:middle
after they've been deprecated.

00:29:30.896 --> 00:29:32.946 A:middle
However, this is a new platform

00:29:32.946 --> 00:29:34.046 A:middle
for your iPad apps.

00:29:34.436 --> 00:29:35.576 A:middle
And so, you shouldn't assume

00:29:35.576 --> 00:29:36.766 A:middle
that any of the deprecated

00:29:36.766 --> 00:29:38.376 A:middle
frameworks will be available to

00:29:38.436 --> 00:29:38.706 A:middle
you.

00:29:39.936 --> 00:29:41.656 A:middle
Now is a great time to migrate

00:29:41.656 --> 00:29:42.966 A:middle
off these deprecated frameworks

00:29:42.966 --> 00:29:44.026 A:middle
and on to the replacement.

00:29:44.786 --> 00:29:45.916 A:middle
This will not only allow you to

00:29:45.916 --> 00:29:47.116 A:middle
bring your iPad application to

00:29:47.116 --> 00:29:48.536 A:middle
the Mac, but your iPad app will

00:29:48.536 --> 00:29:49.286 A:middle
benefit as well.

00:29:50.956 --> 00:29:52.326 A:middle
There are also several

00:29:52.326 --> 00:29:53.526 A:middle
frameworks that are tied to

00:29:53.526 --> 00:29:55.316 A:middle
functionality in iOS that does

00:29:55.316 --> 00:29:56.446 A:middle
currently exist on the Mac.

00:29:57.836 --> 00:29:58.826 A:middle
The ClassKit framework is

00:29:58.826 --> 00:29:59.696 A:middle
designed to allow your

00:29:59.696 --> 00:30:00.686 A:middle
application to work with the

00:29:59.696 --> 00:30:00.686 A:middle
application to work with the

00:30:00.686 --> 00:30:01.516 A:middle
Schoolwork app.

00:30:02.046 --> 00:30:02.956 A:middle
But this application doesn't

00:30:02.956 --> 00:30:04.046 A:middle
exist on the Mac, so it wouldn't

00:30:04.046 --> 00:30:04.746 A:middle
make sense.

00:30:05.376 --> 00:30:07.586 A:middle
And HealthKit and HomeKit are

00:30:07.586 --> 00:30:08.646 A:middle
not available at this point

00:30:08.646 --> 00:30:09.886 A:middle
since not all of the underlying

00:30:09.886 --> 00:30:10.986 A:middle
functionality is present.

00:30:12.436 --> 00:30:13.836 A:middle
There are several frameworks

00:30:13.836 --> 00:30:14.806 A:middle
that are tied to specific

00:30:14.926 --> 00:30:16.966 A:middle
sensors on iOS devices for

00:30:16.966 --> 00:30:17.896 A:middle
functionality that can only

00:30:17.896 --> 00:30:18.486 A:middle
exist there.

00:30:19.226 --> 00:30:20.266 A:middle
This will not be available on

00:30:20.266 --> 00:30:20.616 A:middle
the Mac.

00:30:20.616 --> 00:30:21.746 A:middle
So, if your application uses

00:30:21.746 --> 00:30:22.536 A:middle
this, you'll need to

00:30:22.536 --> 00:30:23.966 A:middle
conditionalize their use before

00:30:23.966 --> 00:30:24.726 A:middle
you can bring it over.

00:30:26.906 --> 00:30:28.066 A:middle
Now, some of the frameworks that

00:30:28.066 --> 00:30:29.966 A:middle
are tied to specific hardware on

00:30:29.966 --> 00:30:31.506 A:middle
iOS devices do make sense on the

00:30:31.506 --> 00:30:31.826 A:middle
Mac.

00:30:32.756 --> 00:30:33.706 A:middle
But the availability and

00:30:33.706 --> 00:30:36.436 A:middle
functionality of these APIs will

00:30:36.436 --> 00:30:37.966 A:middle
be somewhat limited because Macs

00:30:38.016 --> 00:30:39.146 A:middle
often don't have comparable

00:30:39.146 --> 00:30:39.806 A:middle
sensors.

00:30:41.756 --> 00:30:42.866 A:middle
In some cases, it's true on

00:30:42.866 --> 00:30:44.396 A:middle
non-cellular iPads as well.

00:30:44.396 --> 00:30:45.926 A:middle
So, your app may already be

00:30:45.926 --> 00:30:46.786 A:middle
doing the right thing.

00:30:47.736 --> 00:30:48.876 A:middle
To give you a sense of the kind

00:30:48.876 --> 00:30:50.246 A:middle
of differences you can expect.

00:30:50.996 --> 00:30:52.966 A:middle
Core Location works but Macs

00:30:52.966 --> 00:30:54.256 A:middle
don't have GPS chips.

00:30:54.636 --> 00:30:55.626 A:middle
And so, you should expect them

00:30:55.626 --> 00:30:57.036 A:middle
to be less sensitive to changes

00:30:57.036 --> 00:30:58.156 A:middle
in location when they're moved.

00:30:59.556 --> 00:31:01.626 A:middle
And if you use Core Motion to

00:30:59.556 --> 00:31:01.626 A:middle
And if you use Core Motion to

00:31:01.626 --> 00:31:03.706 A:middle
control game play in your app,

00:31:04.426 --> 00:31:05.456 A:middle
you should be aware that the Mac

00:31:05.456 --> 00:31:06.396 A:middle
doesn't have the sensors

00:31:06.396 --> 00:31:08.096 A:middle
necessarily to do this nor it

00:31:08.096 --> 00:31:09.056 A:middle
would be a very good user

00:31:09.056 --> 00:31:09.756 A:middle
experience.

00:31:09.946 --> 00:31:10.856 A:middle
And so, you should add an

00:31:10.856 --> 00:31:12.356 A:middle
alternate mechanism to control

00:31:12.486 --> 00:31:14.266 A:middle
your game on the Mac.

00:31:15.356 --> 00:31:17.576 A:middle
There are several media related

00:31:17.576 --> 00:31:18.726 A:middle
frameworks that have differences

00:31:18.726 --> 00:31:19.626 A:middle
you should be aware of.

00:31:20.786 --> 00:31:22.206 A:middle
The Media Player framework gives

00:31:22.206 --> 00:31:23.236 A:middle
you basically the same

00:31:23.236 --> 00:31:24.696 A:middle
functionality it does on the Mac

00:31:25.266 --> 00:31:26.816 A:middle
with access to the Now Playing

00:31:26.816 --> 00:31:28.446 A:middle
Info Center and Remote Command

00:31:28.446 --> 00:31:28.796 A:middle
Center.

00:31:29.546 --> 00:31:30.936 A:middle
But there's no library access or

00:31:30.936 --> 00:31:31.776 A:middle
playback support.

00:31:32.896 --> 00:31:34.166 A:middle
And if you were using the

00:31:34.166 --> 00:31:35.576 A:middle
AVFoundation framework to

00:31:35.576 --> 00:31:38.266 A:middle
capture still images or video on

00:31:38.266 --> 00:31:40.106 A:middle
iOS devices, you can use the

00:31:40.106 --> 00:31:42.216 A:middle
UIImagePickerController in UIKit

00:31:42.256 --> 00:31:43.176 A:middle
to capture them from the

00:31:43.176 --> 00:31:44.806 A:middle
built-in front-facing Mac

00:31:44.806 --> 00:31:44.976 A:middle
camera.

00:31:47.856 --> 00:31:48.896 A:middle
A number of other frameworks

00:31:48.896 --> 00:31:49.936 A:middle
have differences as well and I

00:31:49.936 --> 00:31:51.126 A:middle
want to draw your attention to a

00:31:51.166 --> 00:31:51.876 A:middle
couple of them.

00:31:53.076 --> 00:31:54.706 A:middle
So, Metal is largely the same

00:31:54.706 --> 00:31:56.876 A:middle
across all of our platforms, so

00:31:56.876 --> 00:31:58.566 A:middle
most of you will find that your

00:31:58.566 --> 00:32:00.896 A:middle
iPad Metal apps work without

00:31:58.566 --> 00:32:00.896 A:middle
iPad Metal apps work without

00:32:00.896 --> 00:32:02.146 A:middle
change when you bring them to

00:32:02.146 --> 00:32:02.476 A:middle
the Mac.

00:32:03.416 --> 00:32:05.086 A:middle
For those of you that are using

00:32:05.086 --> 00:32:06.256 A:middle
some of the more advanced

00:32:06.256 --> 00:32:08.386 A:middle
features in our latest GPUs such

00:32:08.386 --> 00:32:09.796 A:middle
as Memoryless Textures.

00:32:11.296 --> 00:32:12.396 A:middle
We've introduced a new GPU

00:32:12.476 --> 00:32:14.436 A:middle
family API that will help you to

00:32:14.436 --> 00:32:16.066 A:middle
conditionalize your code to run

00:32:16.066 --> 00:32:17.916 A:middle
across a range of GPU families.

00:32:18.786 --> 00:32:20.886 A:middle
And in UIKit, UIWebView will not

00:32:20.886 --> 00:32:21.736 A:middle
be present on the Mac.

00:32:22.216 --> 00:32:23.146 A:middle
And so, if you have it already,

00:32:23.146 --> 00:32:24.726 A:middle
now is a great time to migrate

00:32:24.946 --> 00:32:25.746 A:middle
to WKWebView.

00:32:26.486 --> 00:32:29.556 A:middle
So, as you've seen there's a

00:32:29.556 --> 00:32:30.736 A:middle
number of differences in our API

00:32:30.736 --> 00:32:32.066 A:middle
and we don't have time to cover

00:32:32.066 --> 00:32:32.656 A:middle
all of them.

00:32:33.416 --> 00:32:34.286 A:middle
So, I want to take a moment to

00:32:34.286 --> 00:32:35.226 A:middle
talk about how you could

00:32:35.226 --> 00:32:36.526 A:middle
determine for yourselves what

00:32:36.526 --> 00:32:38.766 A:middle
API is and is not available to

00:32:38.766 --> 00:32:39.696 A:middle
you when you bring your iPad

00:32:39.696 --> 00:32:40.266 A:middle
apps to the Mac.

00:32:42.326 --> 00:32:44.356 A:middle
So, iPad apps for the Mac are

00:32:44.356 --> 00:32:46.156 A:middle
built against the macOS SDK.

00:32:47.266 --> 00:32:48.656 A:middle
And so, for frameworks that are

00:32:48.656 --> 00:32:50.626 A:middle
unavailable, they simply are

00:32:50.626 --> 00:32:52.346 A:middle
just not present in the SDK.

00:32:52.346 --> 00:32:54.116 A:middle
And for frameworks that have

00:32:54.116 --> 00:32:55.626 A:middle
differences between iOS and

00:32:55.626 --> 00:32:58.326 A:middle
macOS, we annotate methods as

00:32:58.326 --> 00:32:59.656 A:middle
appropriate to make that clear.

00:33:01.126 --> 00:33:03.116 A:middle
We annotate our APIs with

00:33:03.116 --> 00:33:04.926 A:middle
@available in Swift and API

00:33:04.926 --> 00:33:06.386 A:middle
available in Objective-C.

00:33:07.236 --> 00:33:09.196 A:middle
And for iOS applications, we're

00:33:09.196 --> 00:33:10.316 A:middle
obviously only concerned with

00:33:10.316 --> 00:33:10.756 A:middle
this part.

00:33:10.756 --> 00:33:13.786 A:middle
And the good news is that

00:33:13.786 --> 00:33:15.046 A:middle
availability for iOS

00:33:15.096 --> 00:33:16.466 A:middle
automatically implies

00:33:16.466 --> 00:33:17.916 A:middle
availability for iPad apps for

00:33:17.916 --> 00:33:18.146 A:middle
Mac.

00:33:19.256 --> 00:33:20.146 A:middle
As I've mentioned earlier, the

00:33:20.146 --> 00:33:21.496 A:middle
vast majority of APIs are

00:33:21.496 --> 00:33:22.696 A:middle
available, so this is typically

00:33:22.696 --> 00:33:24.296 A:middle
what you'll see when you look

00:33:24.346 --> 00:33:25.356 A:middle
through the APIs.

00:33:27.046 --> 00:33:28.036 A:middle
When there are differences in

00:33:28.036 --> 00:33:29.206 A:middle
availability, you'll see that

00:33:29.206 --> 00:33:30.546 A:middle
clearly annotated as well.

00:33:31.286 --> 00:33:32.386 A:middle
Here's an example of an API that

00:33:32.386 --> 00:33:34.146 A:middle
only exist for iPad apps on the

00:33:34.146 --> 00:33:34.416 A:middle
Mac.

00:33:35.246 --> 00:33:36.396 A:middle
Now, API such as this, are

00:33:36.396 --> 00:33:37.286 A:middle
fairly rare.

00:33:38.246 --> 00:33:39.466 A:middle
Most of the API differences

00:33:39.466 --> 00:33:40.836 A:middle
you'll find for iPad apps for

00:33:40.836 --> 00:33:43.106 A:middle
Mac are for differences where

00:33:43.106 --> 00:33:45.366 A:middle
the API is available on iOS but

00:33:45.366 --> 00:33:46.126 A:middle
not for the Mac.

00:33:46.946 --> 00:33:48.226 A:middle
In the most cases, you'll see

00:33:48.226 --> 00:33:49.516 A:middle
the API clearly annotated as

00:33:49.516 --> 00:33:51.586 A:middle
unavailable for UIKitForMac.

00:33:54.856 --> 00:33:57.026 A:middle
Ideally, most of your code will

00:33:57.026 --> 00:33:58.426 A:middle
be identical when you bring it

00:33:58.426 --> 00:33:58.826 A:middle
to the Mac.

00:33:59.316 --> 00:34:00.446 A:middle
However, if you have code that

00:33:59.316 --> 00:34:00.446 A:middle
However, if you have code that

00:34:00.446 --> 00:34:01.536 A:middle
shouldn't be included on the

00:34:01.536 --> 00:34:02.686 A:middle
Mac, you can use the

00:34:02.686 --> 00:34:04.306 A:middle
targetEnvironment conditional to

00:34:04.306 --> 00:34:04.986 A:middle
exclude it.

00:34:06.616 --> 00:34:08.085 A:middle
And if using Objective-C, you

00:34:08.085 --> 00:34:09.366 A:middle
can use the Target OS

00:34:09.456 --> 00:34:10.916 A:middle
UIKitForMac, target conditional

00:34:10.916 --> 00:34:11.795 A:middle
to do the same thing.

00:34:13.176 --> 00:34:14.005 A:middle
Of course, you can use this

00:34:14.005 --> 00:34:15.295 A:middle
target conditional to include

00:34:15.295 --> 00:34:18.176 A:middle
code which only relevant to Mac.

00:34:20.396 --> 00:34:21.936 A:middle
Data protection is an iOS

00:34:21.936 --> 00:34:23.545 A:middle
feature that you use to secure

00:34:23.545 --> 00:34:24.946 A:middle
your app's files and prevent

00:34:25.016 --> 00:34:26.396 A:middle
unauthorized access to them.

00:34:27.356 --> 00:34:28.156 A:middle
You can read and write your

00:34:28.156 --> 00:34:29.585 A:middle
files normally, but the system

00:34:29.585 --> 00:34:31.176 A:middle
encrypts and decrypts them

00:34:31.176 --> 00:34:31.826 A:middle
automatically.

00:34:33.315 --> 00:34:34.916 A:middle
This is access by specifying one

00:34:34.916 --> 00:34:36.116 A:middle
of the following four writing

00:34:36.116 --> 00:34:37.356 A:middle
options when writing files to

00:34:37.356 --> 00:34:38.045 A:middle
the file system.

00:34:38.626 --> 00:34:42.216 A:middle
On macOS, these data protection

00:34:42.286 --> 00:34:43.606 A:middle
APIs are not currently

00:34:43.606 --> 00:34:44.106 A:middle
functional.

00:34:44.976 --> 00:34:46.505 A:middle
If you try to use them like in

00:34:46.505 --> 00:34:48.735 A:middle
this example, the code will

00:34:48.735 --> 00:34:51.286 A:middle
compile and execute but the data

00:34:51.286 --> 00:34:52.815 A:middle
is not being stored securely on

00:34:52.815 --> 00:34:53.525 A:middle
the file system.

00:34:54.565 --> 00:34:55.966 A:middle
If you need to store data

00:34:55.966 --> 00:34:57.626 A:middle
securely, there are several

00:34:57.626 --> 00:34:58.746 A:middle
options available to you.

00:34:59.656 --> 00:35:00.966 A:middle
Passwords and related data can

00:34:59.656 --> 00:35:00.966 A:middle
Passwords and related data can

00:35:00.966 --> 00:35:02.186 A:middle
be stored in the Keychain and

00:35:02.906 --> 00:35:04.626 A:middle
FileVault will encrypt all of

00:35:04.626 --> 00:35:05.456 A:middle
the files on the disk

00:35:05.506 --> 00:35:07.956 A:middle
transparently, but if that's not

00:35:07.956 --> 00:35:09.216 A:middle
sufficient for your needs.

00:35:09.216 --> 00:35:11.176 A:middle
You can use the new AES.GCM

00:35:11.176 --> 00:35:14.716 A:middle
encryption API in CryptoKit to

00:35:14.716 --> 00:35:15.806 A:middle
encrypt your content before

00:35:15.806 --> 00:35:16.646 A:middle
writing it to disk.

00:35:17.526 --> 00:35:18.716 A:middle
As you can see in the short code

00:35:18.716 --> 00:35:20.436 A:middle
sample, this API makes it very

00:35:20.436 --> 00:35:21.596 A:middle
straightforward to encrypt your

00:35:21.596 --> 00:35:21.906 A:middle
data.

00:35:22.846 --> 00:35:23.776 A:middle
You then just need to store the

00:35:23.776 --> 00:35:25.296 A:middle
data on the disk and write the

00:35:25.296 --> 00:35:26.796 A:middle
key to the Keychain and you

00:35:26.796 --> 00:35:28.036 A:middle
refer to the documentation for

00:35:28.036 --> 00:35:29.856 A:middle
all the details on how to store

00:35:29.896 --> 00:35:33.616 A:middle
and later decrypt the data.

00:35:34.936 --> 00:35:35.766 A:middle
Another difference I want to

00:35:35.766 --> 00:35:37.216 A:middle
talk about is your application's

00:35:37.276 --> 00:35:37.936 A:middle
Bundle Format.

00:35:39.136 --> 00:35:41.946 A:middle
Application bundles on iOS are

00:35:41.946 --> 00:35:43.326 A:middle
considered flat bundles.

00:35:44.116 --> 00:35:45.276 A:middle
When Xcode builds your

00:35:45.276 --> 00:35:46.776 A:middle
application for iPad for the

00:35:46.776 --> 00:35:49.476 A:middle
Mac, it will build a macOS style

00:35:49.516 --> 00:35:50.906 A:middle
bundle that is deeper than the

00:35:50.906 --> 00:35:52.226 A:middle
flat bundle format that you used

00:35:52.226 --> 00:35:52.956 A:middle
on iOS.

00:35:53.556 --> 00:35:55.746 A:middle
If you're using the NSBundle

00:35:55.746 --> 00:35:57.356 A:middle
APIs to find resources in your

00:35:57.356 --> 00:35:59.336 A:middle
application, then all of this

00:35:59.336 --> 00:36:00.596 A:middle
will be transparent to you.

00:35:59.336 --> 00:36:00.596 A:middle
will be transparent to you.

00:36:01.326 --> 00:36:02.786 A:middle
However, if you've hard-coded

00:36:02.786 --> 00:36:04.236 A:middle
paths relative your app bundle,

00:36:04.716 --> 00:36:06.066 A:middle
you'll need to modify that code

00:36:06.066 --> 00:36:07.536 A:middle
to deal with the macOS bundle

00:36:07.586 --> 00:36:07.956 A:middle
format.

00:36:12.036 --> 00:36:13.476 A:middle
iOS supports a wide variety of

00:36:13.476 --> 00:36:15.296 A:middle
extensions but not all of them

00:36:15.296 --> 00:36:16.876 A:middle
will be available when you work

00:36:17.086 --> 00:36:18.796 A:middle
-- will work when you bring your

00:36:18.796 --> 00:36:19.666 A:middle
iPad app to the Mac.

00:36:20.586 --> 00:36:21.796 A:middle
So, here are set of extensions

00:36:21.796 --> 00:36:23.286 A:middle
which are supported but you may

00:36:23.286 --> 00:36:24.856 A:middle
find some API differences.

00:36:25.946 --> 00:36:26.806 A:middle
These extensions will

00:36:26.806 --> 00:36:28.156 A:middle
automatically work with both

00:36:28.266 --> 00:36:30.766 A:middle
AppKit and UIKit Macs -- apps on

00:36:30.766 --> 00:36:31.086 A:middle
the Mac.

00:36:31.626 --> 00:36:32.716 A:middle
So, for example, a Share

00:36:32.716 --> 00:36:34.196 A:middle
Extension in your application

00:36:34.836 --> 00:36:35.926 A:middle
will appear in the Share menu

00:36:36.056 --> 00:36:37.096 A:middle
right alongside the Share

00:36:37.096 --> 00:36:38.226 A:middle
Extension in an AppKit

00:36:38.226 --> 00:36:38.786 A:middle
application.

00:36:39.416 --> 00:36:42.786 A:middle
There are also a number of ACPI

00:36:42.786 --> 00:36:43.996 A:middle
extension -- or sorry, number of

00:36:43.996 --> 00:36:45.506 A:middle
extensions that do not currently

00:36:45.506 --> 00:36:46.716 A:middle
work on macOS.

00:36:47.526 --> 00:36:49.126 A:middle
Many of this, do not make sense

00:36:49.126 --> 00:36:50.456 A:middle
on macOS today like Sticker

00:36:50.456 --> 00:36:52.516 A:middle
Packs, Custom Keyboards or

00:36:52.516 --> 00:36:54.356 A:middle
iMessage extensions because the

00:36:54.356 --> 00:36:55.406 A:middle
corresponding functionality

00:36:55.406 --> 00:36:57.706 A:middle
doesn't exist on macOS and in

00:36:57.706 --> 00:36:58.876 A:middle
some cases such as the File

00:36:58.876 --> 00:37:00.266 A:middle
Provider, you should switch to

00:36:58.876 --> 00:37:00.266 A:middle
Provider, you should switch to

00:37:00.266 --> 00:37:01.726 A:middle
the macOS File Provider

00:37:02.056 --> 00:37:03.016 A:middle
extension directly.

00:37:04.926 --> 00:37:05.946 A:middle
So, we've seen a number of API

00:37:05.946 --> 00:37:06.896 A:middle
differences that will impact

00:37:06.896 --> 00:37:07.856 A:middle
your iPad apps for Mac.

00:37:08.286 --> 00:37:09.286 A:middle
Let's take a look at the demo of

00:37:09.286 --> 00:37:10.256 A:middle
how you can start to deal with

00:37:10.256 --> 00:37:11.056 A:middle
some of these differences in

00:37:11.056 --> 00:37:11.836 A:middle
your application.

00:37:26.696 --> 00:37:29.146 A:middle
So, our recipe application has

00:37:29.376 --> 00:37:31.306 A:middle
the ability to mark a recipe as

00:37:31.306 --> 00:37:33.516 A:middle
a favorite and you can see one

00:37:33.516 --> 00:37:34.326 A:middle
of the recipes already has a

00:37:34.326 --> 00:37:35.436 A:middle
heart next to it, to show the

00:37:35.436 --> 00:37:35.926 A:middle
state.

00:37:36.446 --> 00:37:38.326 A:middle
Now the app has a custom

00:37:38.326 --> 00:37:39.616 A:middle
multi-touch gesture that will

00:37:39.616 --> 00:37:40.756 A:middle
toggle the favorite state.

00:37:41.366 --> 00:37:43.116 A:middle
But as we discussed that won't

00:37:43.116 --> 00:37:43.696 A:middle
work on the Mac.

00:37:44.166 --> 00:37:45.566 A:middle
So, let's add a custom menu item

00:37:45.566 --> 00:37:46.466 A:middle
to do that instead.

00:37:55.626 --> 00:37:56.656 A:middle
So, first thing we need to do is

00:37:56.726 --> 00:37:59.146 A:middle
disable our Custom Gesture

00:37:59.146 --> 00:37:59.736 A:middle
Recognizer.

00:38:01.156 --> 00:38:01.986 A:middle
We'll do that by wrapping it

00:38:01.986 --> 00:38:03.026 A:middle
with the target conditional that

00:38:03.026 --> 00:38:04.096 A:middle
we talked about before.

00:38:06.106 --> 00:38:07.186 A:middle
Oops, that.

00:38:09.016 --> 00:38:10.296 A:middle
Hang on one second.

00:38:19.426 --> 00:38:22.706 A:middle
OK. And then, the next thing we

00:38:22.706 --> 00:38:27.346 A:middle
need to do is take the method

00:38:27.346 --> 00:38:28.426 A:middle
that that Gesture Recognizer

00:38:28.426 --> 00:38:29.106 A:middle
calls which is

00:38:29.106 --> 00:38:30.016 A:middle
toggleSelectedRecipe

00:38:30.066 --> 00:38:32.216 A:middle
FavoriteState and mark it with

00:38:32.216 --> 00:38:33.656 A:middle
the IBAction annotation.

00:38:34.016 --> 00:38:36.696 A:middle
This is so IB -- or the IB can

00:38:36.696 --> 00:38:37.406 A:middle
see this.

00:38:37.436 --> 00:38:39.626 A:middle
And then, finally, we need to

00:38:40.186 --> 00:38:41.776 A:middle
add a Menu Validation method,

00:38:41.776 --> 00:38:43.456 A:middle
and this will toggle the menu

00:38:43.456 --> 00:38:45.146 A:middle
item between remove favorite and

00:38:45.146 --> 00:38:47.106 A:middle
make favorite based on whether

00:38:47.106 --> 00:38:48.266 A:middle
the currently selective recipe

00:38:48.266 --> 00:38:48.786 A:middle
is favorite.

00:38:49.446 --> 00:38:52.646 A:middle
Now, we just need to add our

00:38:52.646 --> 00:38:53.416 A:middle
custom menu.

00:38:54.166 --> 00:38:59.006 A:middle
So, we'll go to the Storyboard

00:38:59.006 --> 00:39:00.056 A:middle
Editor and we'll drag out the

00:38:59.006 --> 00:39:00.056 A:middle
Editor and we'll drag out the

00:39:00.056 --> 00:39:00.636 A:middle
main menu.

00:39:06.256 --> 00:39:08.906 A:middle
Oops, sorry, I dragged the wrong

00:39:08.906 --> 00:39:09.176 A:middle
thing.

00:39:09.726 --> 00:39:11.616 A:middle
Main menu.

00:39:13.006 --> 00:39:14.636 A:middle
We want to add a new menu item

00:39:14.636 --> 00:39:16.136 A:middle
to the file menu.

00:39:16.996 --> 00:39:18.216 A:middle
So, I'll add an inline menu

00:39:18.216 --> 00:39:18.696 A:middle
section.

00:39:19.916 --> 00:39:21.076 A:middle
We only need one of these items

00:39:21.076 --> 00:39:21.256 A:middle
here.

00:39:21.256 --> 00:39:22.376 A:middle
So, we'll delete the other one.

00:39:23.466 --> 00:39:24.556 A:middle
We'll change this to Make

00:39:24.556 --> 00:39:25.036 A:middle
Favorite.

00:39:27.096 --> 00:39:28.336 A:middle
We'll give this a command key

00:39:28.336 --> 00:39:28.716 A:middle
equivalent.

00:39:35.096 --> 00:39:36.486 A:middle
And then all we need to do is

00:39:36.486 --> 00:39:37.536 A:middle
wire that up to the first

00:39:37.536 --> 00:39:38.116 A:middle
responder.

00:39:39.826 --> 00:39:41.036 A:middle
And have it send that same

00:39:41.036 --> 00:39:41.846 A:middle
method that our Gesture

00:39:41.846 --> 00:39:42.666 A:middle
Recognizer would send.

00:39:43.386 --> 00:39:44.926 A:middle
So, now, let's build and run our

00:39:44.926 --> 00:39:45.486 A:middle
application.

00:39:55.186 --> 00:39:56.936 A:middle
I think that was in the wrong

00:39:56.936 --> 00:39:57.186 A:middle
place.

00:40:07.986 --> 00:40:08.726 A:middle
So, now, you see we have a new

00:40:08.726 --> 00:40:10.036 A:middle
menu item called Make Favorite

00:40:10.036 --> 00:40:11.566 A:middle
and when I click that we see the

00:40:11.566 --> 00:40:13.876 A:middle
Favorite icon and of course

00:40:13.876 --> 00:40:15.166 A:middle
remove -- the changes removed

00:40:15.166 --> 00:40:16.356 A:middle
Favorite Network as well and

00:40:16.356 --> 00:40:17.596 A:middle
we'll just test our menu short

00:40:17.686 --> 00:40:18.996 A:middle
-- clicking shortcut and of

00:40:18.996 --> 00:40:19.826 A:middle
course that works as well.

00:40:20.516 --> 00:40:27.500 A:middle
[ Applause ]

00:40:32.056 --> 00:40:33.186 A:middle
So, you've just seen how easy it

00:40:33.186 --> 00:40:34.686 A:middle
is to bring your iPad apps to

00:40:34.686 --> 00:40:35.116 A:middle
the Mac.

00:40:35.306 --> 00:40:36.106 A:middle
So, if your app's a good

00:40:36.106 --> 00:40:37.756 A:middle
candidate, then check the box

00:40:37.756 --> 00:40:38.716 A:middle
and get your app building and

00:40:38.716 --> 00:40:39.326 A:middle
running on the Mac.

00:40:39.756 --> 00:40:41.716 A:middle
As always consult the docs and

00:40:41.716 --> 00:40:42.596 A:middle
release notes for the latest

00:40:42.596 --> 00:40:44.216 A:middle
information and we'll be in the

00:40:44.216 --> 00:40:45.646 A:middle
labs right after this session to

00:40:45.646 --> 00:40:47.396 A:middle
help you out and please join us

00:40:47.396 --> 00:40:48.696 A:middle
on Thursday afternoon at Taking

00:40:48.696 --> 00:40:50.326 A:middle
iPad Apps for Mac to the next

00:40:50.326 --> 00:40:50.656 A:middle
level.

00:40:51.286 --> 00:40:52.456 A:middle
We we'll cover how you can make

00:40:52.456 --> 00:40:54.196 A:middle
your app feel even more at home

00:40:54.196 --> 00:40:55.766 A:middle
on the Mac by incorporating

00:40:55.766 --> 00:40:57.136 A:middle
platforms specific features.

00:40:58.026 --> 00:40:58.846 A:middle
Please check out the, What's New

00:40:58.846 --> 00:41:00.376 A:middle
in iOS and macOS Design session

00:40:58.846 --> 00:41:00.376 A:middle
in iOS and macOS Design session

00:41:00.376 --> 00:41:02.036 A:middle
later today where we'll discuss

00:41:02.076 --> 00:41:03.366 A:middle
design considerations when

00:41:03.366 --> 00:41:04.366 A:middle
bringing your iPad app to the

00:41:04.366 --> 00:41:06.326 A:middle
Mac, and finally, the Font

00:41:06.326 --> 00:41:07.746 A:middle
Management and Text Scaling

00:41:07.746 --> 00:41:08.806 A:middle
session on Thursday morning.

00:41:08.976 --> 00:41:10.196 A:middle
We'll go into detail about how

00:41:10.196 --> 00:41:11.756 A:middle
new fonts are handled or how

00:41:11.756 --> 00:41:13.086 A:middle
fonts are handled in iPad apps

00:41:13.086 --> 00:41:13.406 A:middle
for Mac.

00:41:13.846 --> 00:41:14.796 A:middle
Thanks. Enjoy the rest of the

00:41:14.796 --> 00:41:14.906 A:middle
show.

00:41:15.516 --> 00:41:19.500 A:middle
[ Applause ]
