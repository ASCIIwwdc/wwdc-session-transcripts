WEBVTT

00:00:07.516 --> 00:00:11.576 A:middle
[ Applause ]

00:00:12.076 --> 00:00:15.196 A:middle
&gt;&gt; I am Yuxin from Core ML.

00:00:15.566 --> 00:00:18.176 A:middle
Today I'm very excited to

00:00:18.176 --> 00:00:20.476 A:middle
introduce a brand-new model in

00:00:20.476 --> 00:00:22.996 A:middle
Create ML this year, Activity

00:00:22.996 --> 00:00:23.856 A:middle
Classification.

00:00:27.596 --> 00:00:30.966 A:middle
We do lots of activities with

00:00:30.966 --> 00:00:34.226 A:middle
our devices every day such as

00:00:34.496 --> 00:00:36.836 A:middle
playing games, doing sports.

00:00:37.626 --> 00:00:39.856 A:middle
And our mobile devices have been

00:00:40.106 --> 00:00:42.156 A:middle
equipped with a very

00:00:42.286 --> 00:00:43.246 A:middle
rich set of sensors.

00:00:44.366 --> 00:00:45.606 A:middle
Such as for motion,

00:00:47.166 --> 00:00:49.916 A:middle
Accelerometer and Gyroscope are

00:00:49.916 --> 00:00:51.056 A:middle
very commonly used.

00:00:52.026 --> 00:00:54.146 A:middle
And they can help us to detect

00:00:54.496 --> 00:00:56.146 A:middle
your device's three-dimensional

00:00:56.196 --> 00:00:59.456 A:middle
acceleration, rotation rate or

00:00:59.456 --> 00:01:00.516 A:middle
device orientation.

00:00:59.456 --> 00:01:00.516 A:middle
device orientation.

00:01:01.796 --> 00:01:05.706 A:middle
And we could just use such sensor data

00:01:05.706 --> 00:01:06.346 A:middle
to represent our activities.

00:01:08.166 --> 00:01:11.146 A:middle
For example, if you are jogging,

00:01:12.066 --> 00:01:14.196 A:middle
your activity data may look very

00:01:14.196 --> 00:01:16.456 A:middle
different when you are standing

00:01:16.776 --> 00:01:16.906 A:middle
still.

00:01:18.276 --> 00:01:21.556 A:middle
Similarly, if you have different

00:01:21.636 --> 00:01:24.886 A:middle
gestures, gaming controls, or

00:01:24.886 --> 00:01:26.296 A:middle
different sports movement.

00:01:26.366 --> 00:01:29.866 A:middle
Your activity data could also be

00:01:29.866 --> 00:01:32.266 A:middle
distinctive enough to be

00:01:32.356 --> 00:01:32.646 A:middle
recognized.

00:01:34.546 --> 00:01:36.856 A:middle
So what is Activity

00:01:36.856 --> 00:01:38.436 A:middle
Classification?

00:01:39.306 --> 00:01:43.096 A:middle
It is a task that allows you to

00:01:43.096 --> 00:01:45.706 A:middle
recognize your pre-defined set

00:01:45.706 --> 00:01:49.026 A:middle
of physical actions that you do

00:01:49.026 --> 00:01:50.586 A:middle
with your devices.

00:01:51.416 --> 00:01:53.606 A:middle
Then what if you have a

00:01:53.676 --> 00:01:55.746 A:middle
different set of activities to

00:01:55.746 --> 00:02:00.006 A:middle
recognize or your app may have a

00:01:55.746 --> 00:02:00.006 A:middle
recognize or your app may have a

00:02:00.006 --> 00:02:00.706 A:middle
different need.

00:02:00.706 --> 00:02:04.896 A:middle
We think it will be really great

00:02:05.036 --> 00:02:07.086 A:middle
if you could customize your own

00:02:07.086 --> 00:02:09.526 A:middle
model for your own purpose and

00:02:10.735 --> 00:02:13.396 A:middle
that's exactly what we are

00:02:13.436 --> 00:02:15.966 A:middle
introducing this year, Activity

00:02:15.966 --> 00:02:19.506 A:middle
Classification in Create ML.

00:02:19.726 --> 00:02:21.146 A:middle
Perhaps, let's start with an

00:02:21.146 --> 00:02:22.126 A:middle
example.

00:02:25.436 --> 00:02:28.426 A:middle
I really love to go out and play

00:02:28.536 --> 00:02:30.696 A:middle
ultimate frisbee with my family

00:02:30.816 --> 00:02:31.436 A:middle
and friends.

00:02:32.716 --> 00:02:36.056 A:middle
So after a whole game, I'm also

00:02:36.056 --> 00:02:38.916 A:middle
very interested to see how well

00:02:38.916 --> 00:02:41.486 A:middle
I might have performed such as

00:02:41.956 --> 00:02:43.646 A:middle
what they types of throwing

00:02:43.646 --> 00:02:46.596 A:middle
techniques and how many of them.

00:02:47.076 --> 00:02:49.106 A:middle
So I trained a Frisbee Motion

00:02:49.106 --> 00:02:51.426 A:middle
Classifier to recognize my moves

00:02:52.206 --> 00:02:54.026 A:middle
and I use it on my watch.

00:02:54.636 --> 00:02:56.886 A:middle
I think it's going to be fine.

00:02:57.246 --> 00:02:58.656 A:middle
Let's see a live demo first.

00:03:00.386 --> 00:03:02.856 A:middle
So this is the screen of my

00:03:02.976 --> 00:03:06.356 A:middle
phone which is paired with my

00:03:06.356 --> 00:03:06.786 A:middle
watch.

00:03:07.816 --> 00:03:09.796 A:middle
So my model is going to run on

00:03:09.796 --> 00:03:10.396 A:middle
my watch.

00:03:11.926 --> 00:03:14.396 A:middle
You can see a Start button here.

00:03:15.886 --> 00:03:18.076 A:middle
So once I hit a Start button, my

00:03:18.076 --> 00:03:19.486 A:middle
watch is going to start

00:03:19.826 --> 00:03:21.076 A:middle
streaming the sensor data.

00:03:22.116 --> 00:03:23.846 A:middle
And then my model is going to

00:03:23.846 --> 00:03:25.676 A:middle
make continuous predictions.

00:03:27.236 --> 00:03:30.516 A:middle
So let's get started.

00:03:30.636 --> 00:03:32.826 A:middle
Now it asks me to try a frisbee

00:03:32.826 --> 00:03:36.336 A:middle
move which means it predicts a

00:03:36.336 --> 00:03:39.306 A:middle
no activity class which is true

00:03:39.306 --> 00:03:39.806 A:middle
for now.

00:03:40.476 --> 00:03:43.066 A:middle
Let me try something simple

00:03:43.776 --> 00:03:43.906 A:middle
first.

00:03:46.786 --> 00:03:48.696 A:middle
Forehand.

00:03:49.516 --> 00:03:53.266 A:middle
[ Applause ]

00:03:53.766 --> 00:03:57.866 A:middle
And next, Backhand.

00:03:58.516 --> 00:04:01.306 A:middle
[ Applause ]

00:03:58.516 --> 00:04:01.306 A:middle
[ Applause ]

00:04:01.806 --> 00:04:03.566 A:middle
And this is my favorite one.

00:04:04.046 --> 00:04:04.976 A:middle
Chicken Wing.

00:04:05.516 --> 00:04:10.026 A:middle
[ Applause ]

00:04:10.526 --> 00:04:13.476 A:middle
I also have a fancier and secret

00:04:13.476 --> 00:04:15.296 A:middle
one to show.

00:04:15.526 --> 00:04:15.956 A:middle
Bowling.

00:04:16.261 --> 00:04:18.261 A:middle
[ Applause ]

00:04:18.505 --> 00:04:20.946 A:middle
It's called Bowler but as if I'm

00:04:20.946 --> 00:04:21.805 A:middle
playing bowling.

00:04:21.805 --> 00:04:23.976 A:middle
Let me try that again.

00:04:24.056 --> 00:04:24.846 A:middle
Bowler.

00:04:28.936 --> 00:04:30.696 A:middle
Yeah, it's machine learning models.

00:04:31.776 --> 00:04:36.746 A:middle
Now, let me hit the Stop button

00:04:36.746 --> 00:04:40.516 A:middle
and see my results.

00:04:41.726 --> 00:04:44.466 A:middle
Looks like pretty okay to me.

00:04:45.586 --> 00:04:48.496 A:middle
For certain classes like Bowler,

00:04:48.496 --> 00:04:50.796 A:middle
I know I can always go back and

00:04:50.796 --> 00:04:51.626 A:middle
collect more data.

00:04:52.546 --> 00:04:54.176 A:middle
So I'm pretty fine with this.

00:04:54.526 --> 00:04:58.396 A:middle
Very good exercise for today.

00:04:58.576 --> 00:05:04.056 A:middle
Now, let's come back and I know

00:04:58.576 --> 00:05:04.056 A:middle
Now, let's come back and I know

00:05:04.306 --> 00:05:07.896 A:middle
you as developers may have lots

00:05:07.896 --> 00:05:10.576 A:middle
of other more creative ideas to

00:05:10.576 --> 00:05:10.916 A:middle
explore.

00:05:13.526 --> 00:05:17.156 A:middle
So now let's see how could we

00:05:17.156 --> 00:05:19.476 A:middle
truly set your model in Create

00:05:19.476 --> 00:05:19.656 A:middle
ML.

00:05:23.056 --> 00:05:26.856 A:middle
Just the three steps.

00:05:26.856 --> 00:05:28.546 A:middle
First, collect some data for

00:05:28.546 --> 00:05:29.536 A:middle
your own activities.

00:05:30.046 --> 00:05:35.306 A:middle
Train the model using Create ML.

00:05:35.556 --> 00:05:38.736 A:middle
And finally, deploy the model to

00:05:38.736 --> 00:05:39.926 A:middle
your app.

00:05:41.516 --> 00:05:44.086 A:middle
Let's get some data first.

00:05:46.396 --> 00:05:48.756 A:middle
The easiest way to access sensor

00:05:48.756 --> 00:05:51.066 A:middle
data is to use Core Motion.

00:05:52.526 --> 00:05:54.586 A:middle
For more information, please

00:05:54.586 --> 00:05:56.836 A:middle
refer to our previous sessions

00:05:57.106 --> 00:05:59.026 A:middle
as well as Apple Developers

00:05:59.026 --> 00:06:00.056 A:middle
Documentation.

00:05:59.026 --> 00:06:00.056 A:middle
Documentation.

00:06:00.566 --> 00:06:04.216 A:middle
But from a high-level point of

00:06:04.666 --> 00:06:06.586 A:middle
view your app could simply

00:06:06.586 --> 00:06:08.686 A:middle
access a list of the sensors.

00:06:09.036 --> 00:06:10.426 A:middle
So Core Motion Framework.

00:06:10.836 --> 00:06:13.736 A:middle
You can also manipulate the

00:06:13.736 --> 00:06:17.106 A:middle
Start, Stop, or Set Update

00:06:17.106 --> 00:06:19.506 A:middle
Intervals from your app for your

00:06:19.506 --> 00:06:20.056 A:middle
recordings.

00:06:20.396 --> 00:06:24.186 A:middle
And you can also use exactly the

00:06:24.266 --> 00:06:26.546 A:middle
same mechanism for both your

00:06:26.546 --> 00:06:28.666 A:middle
training data collection as well

00:06:28.666 --> 00:06:31.786 A:middle
as your later on device

00:06:32.251 --> 00:06:34.251 A:middle
inference.

00:06:34.716 --> 00:06:37.096 A:middle
And here is how my data look

00:06:37.096 --> 00:06:37.346 A:middle
like.

00:06:38.356 --> 00:06:40.086 A:middle
This is one of my Forehand

00:06:40.086 --> 00:06:43.876 A:middle
recordings, which is in a CSV

00:06:43.876 --> 00:06:44.136 A:middle
format.

00:06:45.716 --> 00:06:47.696 A:middle
There's one column of Time

00:06:47.696 --> 00:06:51.026 A:middle
Stamps and several other columns

00:06:51.026 --> 00:06:52.996 A:middle
of the sensor features.

00:06:54.306 --> 00:06:56.446 A:middle
I actually used both User

00:06:56.446 --> 00:06:58.676 A:middle
Acceleration and Rotation Grade

00:06:58.936 --> 00:07:00.796 A:middle
for my frisbee motion example.

00:06:58.936 --> 00:07:00.796 A:middle
for my frisbee motion example.

00:07:01.346 --> 00:07:03.386 A:middle
But here for simplicity only

00:07:03.386 --> 00:07:04.946 A:middle
three are listed.

00:07:06.686 --> 00:07:08.826 A:middle
And if they would like to take

00:07:08.826 --> 00:07:10.886 A:middle
one step further to look into

00:07:10.886 --> 00:07:12.686 A:middle
the data, this is how the

00:07:12.686 --> 00:07:15.326 A:middle
activity patterns may look like.

00:07:16.416 --> 00:07:20.046 A:middle
My Forehand recording has three

00:07:20.046 --> 00:07:22.056 A:middle
back to back moves in the same

00:07:22.056 --> 00:07:22.406 A:middle
class.

00:07:24.346 --> 00:07:27.346 A:middle
And later during training, the

00:07:27.346 --> 00:07:29.046 A:middle
deep learning model is going to

00:07:29.046 --> 00:07:31.576 A:middle
use a sliding window to move

00:07:31.616 --> 00:07:33.496 A:middle
through this time series data.

00:07:34.656 --> 00:07:36.366 A:middle
And in this way, it could

00:07:36.366 --> 00:07:39.526 A:middle
extract both your spatial and

00:07:39.526 --> 00:07:40.946 A:middle
temporal patterns of the

00:07:40.946 --> 00:07:41.646 A:middle
activities.

00:07:43.696 --> 00:07:45.586 A:middle
Now we have the files ready.

00:07:46.376 --> 00:07:48.006 A:middle
You could simply organize your

00:07:48.006 --> 00:07:50.526 A:middle
data in such a hierarchy of data

00:07:50.596 --> 00:07:53.626 A:middle
source, where each folder's name

00:07:53.626 --> 00:07:54.566 A:middle
is a Label name.

00:07:54.566 --> 00:07:57.396 A:middle
And all the files under this

00:07:57.396 --> 00:07:59.186 A:middle
folder belongs to the same

00:07:59.186 --> 00:07:59.836 A:middle
activity.

00:08:00.896 --> 00:08:03.346 A:middle
We support CSV,JSON , and

00:08:03.866 --> 00:08:04.776 A:middle
text formats.

00:08:05.736 --> 00:08:07.116 A:middle
You could choose either one of

00:08:07.196 --> 00:08:10.376 A:middle
them or if you like, you can mix

00:08:10.376 --> 00:08:11.646 A:middle
and match.

00:08:13.736 --> 00:08:15.136 A:middle
There's a data ready.

00:08:15.946 --> 00:08:20.506 A:middle
Now let's start printing.

00:08:20.566 --> 00:08:22.706 A:middle
Simply select Activity Class

00:08:22.706 --> 00:08:24.216 A:middle
from our template from the

00:08:24.216 --> 00:08:27.566 A:middle
Create ML app.

00:08:27.776 --> 00:08:30.016 A:middle
And now this is a standard info

00:08:30.016 --> 00:08:33.265 A:middle
screen where you could drag and

00:08:33.265 --> 00:08:35.946 A:middle
drop your training data into the

00:08:35.946 --> 00:08:36.576 A:middle
window.

00:08:37.356 --> 00:08:39.076 A:middle
For Activity, you can see a

00:08:39.126 --> 00:08:41.866 A:middle
preview of how many files and

00:08:41.936 --> 00:08:43.265 A:middle
how many samples in your

00:08:43.265 --> 00:08:43.946 A:middle
recordings.

00:08:45.516 --> 00:08:47.646 A:middle
The one special step above the

00:08:47.726 --> 00:08:50.326 A:middle
Activity is that you have to

00:08:50.326 --> 00:08:52.436 A:middle
tell Create ML what are the

00:08:52.526 --> 00:08:54.106 A:middle
sensor features you'd like to

00:08:54.106 --> 00:08:54.506 A:middle
try out.

00:08:55.926 --> 00:08:58.736 A:middle
Simply select one or a few from

00:08:58.736 --> 00:08:59.276 A:middle
this list.

00:09:00.746 --> 00:09:02.366 A:middle
And all these sensor features

00:09:02.856 --> 00:09:04.666 A:middle
actually come from your own

00:09:04.666 --> 00:09:07.706 A:middle
files, the headers of your CSV

00:09:08.516 --> 00:09:08.666 A:middle
files.

00:09:11.626 --> 00:09:14.236 A:middle
Optionally, you could choose to

00:09:14.236 --> 00:09:15.796 A:middle
adjust the parameters as well

00:09:16.736 --> 00:09:18.756 A:middle
such as this Prediction Window

00:09:18.816 --> 00:09:22.266 A:middle
Size based on how fast and slow

00:09:22.266 --> 00:09:23.166 A:middle
of your activities.

00:09:23.806 --> 00:09:27.116 A:middle
For my frisbee motion example, I

00:09:27.236 --> 00:09:28.706 A:middle
actually used the two second

00:09:28.786 --> 00:09:31.096 A:middle
window, which is 100 samples.

00:09:31.096 --> 00:09:34.896 A:middle
So I put 100 here and that's

00:09:34.896 --> 00:09:37.126 A:middle
because my data was initially

00:09:37.126 --> 00:09:39.616 A:middle
sampled at a 50 hertz frequency.

00:09:42.516 --> 00:09:44.756 A:middle
Now, let's hit the Train button

00:09:44.756 --> 00:09:48.526 A:middle
and we can start training from

00:09:48.576 --> 00:09:49.066 A:middle
here.

00:09:49.526 --> 00:09:52.146 A:middle
I'm sure you have seen this

00:09:52.146 --> 00:09:53.856 A:middle
whole process several times

00:09:53.916 --> 00:09:54.596 A:middle
during the week.

00:09:54.856 --> 00:09:57.256 A:middle
I'm going to skip this because

00:09:57.516 --> 00:09:59.576 A:middle
the whole workflow from here is

00:09:59.576 --> 00:10:01.716 A:middle
exactly the same as other models

00:09:59.576 --> 00:10:01.716 A:middle
exactly the same as other models

00:10:01.896 --> 00:10:03.216 A:middle
in Create ML.

00:10:06.366 --> 00:10:07.896 A:middle
If you are satisfied with your

00:10:07.896 --> 00:10:10.406 A:middle
accuracies, you could move on

00:10:10.586 --> 00:10:13.056 A:middle
and try some new data to

00:10:13.056 --> 00:10:14.996 A:middle
evaluate the performance of this

00:10:14.996 --> 00:10:15.446 A:middle
model.

00:10:19.046 --> 00:10:21.646 A:middle
This is a standard testing tab.

00:10:22.296 --> 00:10:24.426 A:middle
Just supply your testing data

00:10:24.576 --> 00:10:26.276 A:middle
the same way you just did.

00:10:29.906 --> 00:10:32.506 A:middle
And after the evaluation, you

00:10:32.506 --> 00:10:34.666 A:middle
would see a table of your per

00:10:34.666 --> 00:10:37.876 A:middle
class matrix in terms of

00:10:37.876 --> 00:10:39.396 A:middle
precision and recall.

00:10:42.236 --> 00:10:44.306 A:middle
For my frisbee motion example,

00:10:44.516 --> 00:10:47.336 A:middle
you can see here, Bowler and

00:10:47.466 --> 00:10:49.416 A:middle
Hammer, these certain classes

00:10:49.416 --> 00:10:50.496 A:middle
are not that perfect.

00:10:51.666 --> 00:10:53.206 A:middle
So this perhaps means I need to

00:10:53.206 --> 00:10:55.026 A:middle
go back and collect more data

00:10:55.026 --> 00:10:55.986 A:middle
for these classes.

00:10:55.986 --> 00:10:58.976 A:middle
And iterate again, so we

00:10:58.976 --> 00:11:01.086 A:middle
can improve the performance.

00:10:58.976 --> 00:11:01.086 A:middle
can improve the performance.

00:11:03.196 --> 00:11:05.556 A:middle
And finally, we get a train

00:11:05.556 --> 00:11:08.676 A:middle
model and from this point, you

00:11:08.676 --> 00:11:10.596 A:middle
could choose either save the

00:11:10.596 --> 00:11:12.846 A:middle
model and deploy it to our app

00:11:13.926 --> 00:11:16.276 A:middle
or you can do batch predictions

00:11:16.616 --> 00:11:19.706 A:middle
in Create ML app on your Mac

00:11:19.706 --> 00:11:20.736 A:middle
directly here.

00:11:22.596 --> 00:11:24.296 A:middle
Simply add some new unseen

00:11:24.586 --> 00:11:27.256 A:middle
and unlabeled the data into the

00:11:27.256 --> 00:11:30.746 A:middle
window and you will see

00:11:30.886 --> 00:11:33.356 A:middle
immediate prediction results in

00:11:33.356 --> 00:11:36.256 A:middle
terms of Label Name, Confidence,

00:11:36.896 --> 00:11:38.806 A:middle
and also a preview of your

00:11:38.806 --> 00:11:40.966 A:middle
Activity Data so you could have

00:11:40.966 --> 00:11:42.366 A:middle
a better understanding of your

00:11:42.366 --> 00:11:43.766 A:middle
activities.

00:11:46.106 --> 00:11:48.906 A:middle
And finally, this is my Core ML model.

00:11:50.316 --> 00:11:53.856 A:middle
My Frisbee Motion Example is

00:11:54.096 --> 00:11:55.866 A:middle
a Neural Network classifier.

00:11:56.396 --> 00:11:59.496 A:middle
With only 1.1 megabyte which is

00:11:59.496 --> 00:12:01.906 A:middle
pretty small and very simple for

00:11:59.496 --> 00:12:01.906 A:middle
pretty small and very simple for

00:12:01.906 --> 00:12:03.466 A:middle
mobile devices.

00:12:06.306 --> 00:12:09.246 A:middle
In addition, you could also see

00:12:09.446 --> 00:12:11.766 A:middle
a complete list of all the

00:12:11.766 --> 00:12:13.936 A:middle
sensor features you have used in

00:12:13.936 --> 00:12:16.596 A:middle
training, as well as a

00:12:16.596 --> 00:12:17.836 A:middle
Prediction Window size.

00:12:18.506 --> 00:12:21.156 A:middle
So later for your own device

00:12:21.156 --> 00:12:23.386 A:middle
inference, you could simply use

00:12:23.386 --> 00:12:26.036 A:middle
the same data, same size to keep

00:12:26.036 --> 00:12:27.386 A:middle
consistent.

00:12:29.546 --> 00:12:31.896 A:middle
And this is Create ML app.

00:12:32.446 --> 00:12:34.206 A:middle
We also have the framework in macOS.

00:12:35.546 --> 00:12:37.516 A:middle
So you could automate this whole

00:12:37.516 --> 00:12:40.056 A:middle
process by using Xcode

00:12:40.056 --> 00:12:44.256 A:middle
Playground, Swift Script, or

00:12:44.756 --> 00:12:46.916 A:middle
Command Line Tools.

00:12:47.416 --> 00:12:48.036 A:middle
Like this.

00:12:51.196 --> 00:12:53.156 A:middle
The one special step above

00:12:53.156 --> 00:12:56.046 A:middle
Activity is that you have to

00:12:56.046 --> 00:12:57.996 A:middle
specify the selectedSensors.

00:12:59.136 --> 00:13:01.356 A:middle
And other than this, the rest of

00:12:59.136 --> 00:13:01.356 A:middle
And other than this, the rest of

00:13:01.426 --> 00:13:03.616 A:middle
the workflow is standard and is

00:13:03.726 --> 00:13:05.706 A:middle
the same with other models we

00:13:06.776 --> 00:13:06.896 A:middle
have,

00:13:07.246 --> 00:13:09.806 A:middle
where each training evaluation

00:13:09.806 --> 00:13:12.196 A:middle
and model saving is just a one

00:13:12.196 --> 00:13:13.656 A:middle
line of code for each.

00:13:17.526 --> 00:13:19.476 A:middle
And this is how we view an

00:13:19.476 --> 00:13:21.456 A:middle
activity classifier in Create

00:13:22.176 --> 00:13:22.246 A:middle
ML.

00:13:23.416 --> 00:13:25.676 A:middle
But additionally, I'd also love

00:13:25.676 --> 00:13:27.656 A:middle
to share a few better practices

00:13:27.756 --> 00:13:28.486 A:middle
for this model.

00:13:32.436 --> 00:13:34.316 A:middle
Understand your activities.

00:13:35.486 --> 00:13:38.086 A:middle
Use the relevant sensors, such

00:13:38.086 --> 00:13:40.666 A:middle
as Accelerometer and Gyroscope,

00:13:40.666 --> 00:13:42.906 A:middle
are very common for motion-based

00:13:43.896 --> 00:13:44.046 A:middle
tasks.

00:13:46.526 --> 00:13:49.206 A:middle
It will be also helpful to

00:13:49.206 --> 00:13:51.526 A:middle
collect some data for additional

00:13:51.876 --> 00:13:54.206 A:middle
no activity or other class.

00:13:55.276 --> 00:13:57.466 A:middle
This is especially helpful for

00:13:57.466 --> 00:13:59.046 A:middle
your runtime performance.

00:14:03.016 --> 00:14:05.546 A:middle
Providing balanced classes is

00:14:05.546 --> 00:14:06.816 A:middle
also good practice.

00:14:07.626 --> 00:14:09.886 A:middle
For activity, this is in terms

00:14:09.886 --> 00:14:11.866 A:middle
of both number of recording files and the

00:14:11.866 --> 00:14:14.986 A:middle
recording length for each class.

00:14:16.036 --> 00:14:21.196 A:middle
And finally, Core Motion

00:14:21.396 --> 00:14:23.446 A:middle
provides both raw sensor data

00:14:23.446 --> 00:14:25.876 A:middle
and processed device motion

00:14:25.876 --> 00:14:26.096 A:middle
data.

00:14:27.566 --> 00:14:29.926 A:middle
Device motion is a sensor fusion

00:14:29.926 --> 00:14:32.486 A:middle
under Core Motion Framework, and

00:14:32.486 --> 00:14:34.756 A:middle
it provides some additional

00:14:34.926 --> 00:14:37.906 A:middle
normalization, time alignment,

00:14:38.106 --> 00:14:39.506 A:middle
or bias removal.

00:14:40.506 --> 00:14:42.496 A:middle
So sometimes it could be really

00:14:42.496 --> 00:14:46.086 A:middle
helpful for you to process the

00:14:46.746 --> 00:14:46.866 A:middle
data.

00:14:48.076 --> 00:14:48.946 A:middle
And that's Activity.

00:14:49.516 --> 00:14:54.500 A:middle
[ Applause ]
