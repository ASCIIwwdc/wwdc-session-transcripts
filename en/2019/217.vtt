WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[ Music ]

00:00:10.516 --> 00:00:16.566 A:middle
[ Cheering and Applause ]

00:00:17.066 --> 00:00:19.106 A:middle
&gt;&gt; Hello, everyone, and welcome

00:00:19.276 --> 00:00:21.476 A:middle
to the session ResearchKit and

00:00:21.476 --> 00:00:22.986 A:middle
CareKit reimagined.

00:00:23.686 --> 00:00:24.576 A:middle
My name is Srinath.

00:00:24.866 --> 00:00:26.386 A:middle
And I'm an engineer on the Help

00:00:26.466 --> 00:00:26.806 A:middle
Team.

00:00:27.406 --> 00:00:28.776 A:middle
Now, we have a lot of topics

00:00:28.906 --> 00:00:29.916 A:middle
that we want to cover today.

00:00:30.396 --> 00:00:32.496 A:middle
So let's jump right into it by

00:00:32.555 --> 00:00:34.456 A:middle
looking at the overall flow for

00:00:34.456 --> 00:00:35.266 A:middle
today's session.

00:00:36.436 --> 00:00:37.966 A:middle
As always, we'll get started

00:00:38.186 --> 00:00:39.296 A:middle
with community updates.

00:00:39.896 --> 00:00:41.746 A:middle
We'll then talk about updates we

00:00:41.746 --> 00:00:42.846 A:middle
have made to the ResearchKit

00:00:42.846 --> 00:00:43.376 A:middle
framework.

00:00:44.016 --> 00:00:45.446 A:middle
And then we have some really

00:00:45.446 --> 00:00:47.076 A:middle
exciting news that we want to

00:00:47.076 --> 00:00:47.736 A:middle
share about the CareKit

00:00:47.736 --> 00:00:47.976 A:middle
framework.

00:00:51.096 --> 00:00:53.026 A:middle
Jumping into community updates,

00:00:53.276 --> 00:00:55.256 A:middle
we wanted to highlight some apps

00:00:55.596 --> 00:00:56.846 A:middle
that have been released or

00:00:56.876 --> 00:00:59.026 A:middle
updated in the past year that

00:00:59.156 --> 00:01:00.616 A:middle
leverage the ResearchKit and

00:00:59.156 --> 00:01:00.616 A:middle
leverage the ResearchKit and

00:01:00.616 --> 00:01:01.466 A:middle
CareKit frameworks.

00:01:02.276 --> 00:01:04.046 A:middle
One such example is the

00:01:04.046 --> 00:01:05.536 A:middle
FocalView app, which was

00:01:05.536 --> 00:01:06.916 A:middle
released by Novartis.

00:01:07.136 --> 00:01:08.826 A:middle
And it focuses on running

00:01:08.856 --> 00:01:11.036 A:middle
ophthalmic clinical trials on a

00:01:11.036 --> 00:01:12.076 A:middle
digital platform.

00:01:13.226 --> 00:01:15.276 A:middle
The other notable example is the

00:01:15.276 --> 00:01:16.956 A:middle
FDA MyStudies app.

00:01:18.026 --> 00:01:19.396 A:middle
Now, this app is the

00:01:19.396 --> 00:01:21.116 A:middle
patient-facing part of a

00:01:21.116 --> 00:01:23.206 A:middle
compliant platform that can be

00:01:23.206 --> 00:01:25.806 A:middle
used for clinical trials or

00:01:25.806 --> 00:01:27.386 A:middle
real-world evidence studies.

00:01:28.086 --> 00:01:30.476 A:middle
The FDA went on to Open Source

00:01:30.646 --> 00:01:32.216 A:middle
the MyStudies app for other

00:01:32.216 --> 00:01:34.236 A:middle
organizations to rebrand,

00:01:34.436 --> 00:01:35.606 A:middle
publish, and use.

00:01:37.006 --> 00:01:38.486 A:middle
Now this year, apart from

00:01:38.486 --> 00:01:40.676 A:middle
talking about apps, we also

00:01:40.676 --> 00:01:41.706 A:middle
wanted to talk about

00:01:42.316 --> 00:01:43.096 A:middle
publications.

00:01:43.806 --> 00:01:45.746 A:middle
Now for context, the ResearchKit

00:01:45.746 --> 00:01:47.236 A:middle
and CareKit frameworks were

00:01:47.236 --> 00:01:48.576 A:middle
announced roughly three to four

00:01:48.576 --> 00:01:48.976 A:middle
years back.

00:01:49.516 --> 00:01:50.736 A:middle
And we have reached a point

00:01:50.836 --> 00:01:52.446 A:middle
where we are starting to see an

00:01:52.516 --> 00:01:54.736 A:middle
influx of publications coming

00:01:54.736 --> 00:01:56.266 A:middle
from studies that have been

00:01:56.266 --> 00:01:57.596 A:middle
running for the past few years.

00:01:58.946 --> 00:02:00.536 A:middle
Most of these publications talk

00:01:58.946 --> 00:02:00.536 A:middle
Most of these publications talk

00:02:00.536 --> 00:02:02.416 A:middle
about how successful a

00:02:02.416 --> 00:02:04.496 A:middle
mobile-based study design has

00:02:04.496 --> 00:02:05.786 A:middle
been towards things like

00:02:06.026 --> 00:02:08.056 A:middle
participant enrollment, the

00:02:08.056 --> 00:02:09.856 A:middle
ability to recruit diverse

00:02:09.856 --> 00:02:11.276 A:middle
participants from both a

00:02:11.276 --> 00:02:12.846 A:middle
geographic and demographic

00:02:12.846 --> 00:02:15.036 A:middle
standpoint, as well as the

00:02:15.126 --> 00:02:17.106 A:middle
overall reduction in

00:02:17.166 --> 00:02:19.216 A:middle
per-participant cost as more

00:02:19.216 --> 00:02:20.866 A:middle
participants continue to enroll.

00:02:21.916 --> 00:02:23.436 A:middle
Now let's take a look at a few

00:02:23.436 --> 00:02:24.496 A:middle
of these publications.

00:02:25.176 --> 00:02:28.816 A:middle
The Pride Study talks about how

00:02:28.816 --> 00:02:30.366 A:middle
successful they were in

00:02:30.366 --> 00:02:32.826 A:middle
recruiting and engaging with a

00:02:32.826 --> 00:02:35.406 A:middle
large number of underrepresented

00:02:35.786 --> 00:02:37.536 A:middle
participants for clinical

00:02:37.536 --> 00:02:37.976 A:middle
research.

00:02:43.076 --> 00:02:44.356 A:middle
The Healthy Pregnancy study

00:02:44.696 --> 00:02:46.736 A:middle
talks about low attrition rates

00:02:47.136 --> 00:02:49.026 A:middle
and how they were able to get

00:02:49.026 --> 00:02:50.536 A:middle
their participants to fill out

00:02:50.796 --> 00:02:52.226 A:middle
mobile-based surveys and

00:02:52.226 --> 00:02:53.776 A:middle
questionnaires at a regular

00:02:53.776 --> 00:02:53.956 A:middle
cadence.

00:02:59.116 --> 00:03:00.456 A:middle
The Personal Touch publication

00:02:59.116 --> 00:03:00.456 A:middle
The Personal Touch publication

00:03:00.616 --> 00:03:02.226 A:middle
is interesting, because this

00:03:02.256 --> 00:03:04.276 A:middle
publication went out in May

00:03:04.276 --> 00:03:05.216 A:middle
2019.

00:03:05.576 --> 00:03:06.826 A:middle
And we got to know about it

00:03:06.826 --> 00:03:08.966 A:middle
roughly a week back when one of

00:03:08.966 --> 00:03:10.456 A:middle
the authors submitted a poll

00:03:10.456 --> 00:03:12.656 A:middle
request on GitHub to contribute

00:03:12.686 --> 00:03:14.096 A:middle
some of the active tasks that

00:03:14.096 --> 00:03:15.736 A:middle
they had built to support this

00:03:15.736 --> 00:03:17.516 A:middle
publication back into the

00:03:17.516 --> 00:03:18.816 A:middle
framework so that the rest of

00:03:18.816 --> 00:03:19.816 A:middle
the community can leverage that

00:03:19.816 --> 00:03:19.976 A:middle
as well.

00:03:23.046 --> 00:03:24.926 A:middle
And on that note, all of our

00:03:24.926 --> 00:03:25.656 A:middle
health frameworks --

00:03:26.046 --> 00:03:27.826 A:middle
ResearchKit, CareKit, and

00:03:27.826 --> 00:03:29.796 A:middle
HealthKit -- were introduced to

00:03:29.796 --> 00:03:31.956 A:middle
empower the developers to create

00:03:31.956 --> 00:03:33.786 A:middle
some amazing research and care

00:03:33.786 --> 00:03:34.186 A:middle
apps.

00:03:35.146 --> 00:03:36.566 A:middle
On top of that, we also have

00:03:36.566 --> 00:03:38.046 A:middle
some really powerful devices

00:03:38.286 --> 00:03:40.326 A:middle
that have sensors, starting with

00:03:40.326 --> 00:03:42.386 A:middle
accelerometer and gyroscope, all

00:03:42.386 --> 00:03:43.726 A:middle
the way to electrodes that

00:03:43.726 --> 00:03:45.766 A:middle
allows your users to take an EKG

00:03:45.766 --> 00:03:45.946 A:middle
reading.

00:03:50.046 --> 00:03:51.936 A:middle
And be continued to be amazed by

00:03:51.936 --> 00:03:53.666 A:middle
the work that our community of

00:03:53.756 --> 00:03:55.826 A:middle
developers, researchers, and

00:03:55.826 --> 00:03:57.736 A:middle
health professionals are able to

00:03:57.736 --> 00:03:59.546 A:middle
accomplish by leveraging our

00:03:59.606 --> 00:04:00.916 A:middle
products and platforms.

00:03:59.606 --> 00:04:00.916 A:middle
products and platforms.

00:04:02.506 --> 00:04:04.726 A:middle
But every year, we still receive

00:04:04.826 --> 00:04:07.306 A:middle
a lot of emails asking about a

00:04:07.306 --> 00:04:08.556 A:middle
variety of questions, like,

00:04:08.786 --> 00:04:10.046 A:middle
"What is ResearchKit and

00:04:10.046 --> 00:04:10.486 A:middle
CareKit?

00:04:10.746 --> 00:04:12.746 A:middle
Or how do I create a research or

00:04:12.746 --> 00:04:13.276 A:middle
a care app?"

00:04:13.276 --> 00:04:15.606 A:middle
And we also received proposals

00:04:15.876 --> 00:04:18.386 A:middle
from research institutions for

00:04:18.505 --> 00:04:21.016 A:middle
device grant requests, which is

00:04:21.016 --> 00:04:22.816 A:middle
why this year, we are currently

00:04:22.816 --> 00:04:23.726 A:middle
working on a couple of

00:04:23.726 --> 00:04:24.396 A:middle
initiatives.

00:04:24.806 --> 00:04:26.216 A:middle
And right now, I just want to

00:04:26.216 --> 00:04:28.296 A:middle
give a brief preview about these

00:04:28.296 --> 00:04:28.926 A:middle
initiatives.

00:04:29.556 --> 00:04:32.056 A:middle
The first one is an

00:04:32.116 --> 00:04:33.986 A:middle
investigator's support program

00:04:34.126 --> 00:04:35.086 A:middle
that we are piloting.

00:04:35.646 --> 00:04:37.126 A:middle
We are currently developing this

00:04:37.196 --> 00:04:37.656 A:middle
program.

00:04:37.956 --> 00:04:39.766 A:middle
And this will be live later this

00:04:39.766 --> 00:04:40.086 A:middle
year.

00:04:40.626 --> 00:04:42.266 A:middle
Now, this will be a Limited

00:04:42.266 --> 00:04:44.276 A:middle
Apple Watch Grant Program that

00:04:44.276 --> 00:04:46.536 A:middle
will have a very simple and easy

00:04:46.536 --> 00:04:48.236 A:middle
proposal submission process.

00:04:49.216 --> 00:04:51.976 A:middle
We will prioritize studies that

00:04:51.976 --> 00:04:54.496 A:middle
advance science and help people

00:04:54.686 --> 00:04:57.226 A:middle
to lead healthier lives by

00:04:57.316 --> 00:04:59.076 A:middle
uniquely leveraging our

00:04:59.076 --> 00:04:59.876 A:middle
ecosystem.

00:05:00.416 --> 00:05:03.346 A:middle
The second initiative that we

00:05:03.346 --> 00:05:05.836 A:middle
want to preview right now is a

00:05:05.836 --> 00:05:07.176 A:middle
redesigned website.

00:05:07.986 --> 00:05:09.676 A:middle
Now, this website will contain

00:05:09.676 --> 00:05:11.696 A:middle
clear information for everyone

00:05:11.696 --> 00:05:13.386 A:middle
who wants to learn more about

00:05:13.386 --> 00:05:14.616 A:middle
the ResearchKit and CareKit

00:05:14.616 --> 00:05:15.196 A:middle
frameworks.

00:05:15.856 --> 00:05:17.736 A:middle
You will also be able to gather

00:05:17.736 --> 00:05:19.596 A:middle
insights from other researchers

00:05:19.596 --> 00:05:21.026 A:middle
and developers who are

00:05:21.066 --> 00:05:22.646 A:middle
leveraging these frameworks to

00:05:22.646 --> 00:05:24.696 A:middle
build some amazing research and

00:05:24.696 --> 00:05:25.266 A:middle
care apps.

00:05:25.776 --> 00:05:27.316 A:middle
This website will also have a

00:05:27.316 --> 00:05:29.226 A:middle
lot more information about the

00:05:29.226 --> 00:05:30.836 A:middle
investigator support program.

00:05:31.506 --> 00:05:33.396 A:middle
And both the website and the

00:05:33.396 --> 00:05:34.776 A:middle
investigator support program

00:05:34.776 --> 00:05:37.066 A:middle
itself will be live in Fall of

00:05:37.066 --> 00:05:38.106 A:middle
2019.

00:05:38.306 --> 00:05:39.886 A:middle
And we are really excited about

00:05:39.886 --> 00:05:40.166 A:middle
this.

00:05:41.106 --> 00:05:43.706 A:middle
And now, let's switch gears and

00:05:43.706 --> 00:05:45.126 A:middle
talk about updates that we have

00:05:45.126 --> 00:05:46.236 A:middle
made to the ResearchKit

00:05:46.306 --> 00:05:46.736 A:middle
framework.

00:05:46.736 --> 00:05:48.576 A:middle
We want to cover two main

00:05:48.576 --> 00:05:51.566 A:middle
topics, UI updates, and active

00:05:51.606 --> 00:05:52.186 A:middle
tasks.

00:05:53.436 --> 00:05:54.736 A:middle
Let's get started with UI

00:05:54.736 --> 00:05:55.176 A:middle
updates.

00:05:56.066 --> 00:05:58.536 A:middle
This year, our main focus has

00:05:58.536 --> 00:06:00.406 A:middle
been around refining the user

00:05:58.536 --> 00:06:00.406 A:middle
been around refining the user

00:06:00.406 --> 00:06:02.886 A:middle
experience, around answering

00:06:02.886 --> 00:06:03.896 A:middle
survey questionnaires.

00:06:04.286 --> 00:06:05.706 A:middle
Because we realized that some of

00:06:05.746 --> 00:06:07.006 A:middle
the validated medical

00:06:07.036 --> 00:06:08.756 A:middle
questionnaires and onboarding

00:06:08.806 --> 00:06:09.976 A:middle
flows can be extremely long.

00:06:13.046 --> 00:06:14.236 A:middle
So you can see here that we have

00:06:14.396 --> 00:06:16.586 A:middle
updated the card styling for you

00:06:16.586 --> 00:06:18.496 A:middle
to provide more contextual

00:06:18.496 --> 00:06:19.796 A:middle
information to your users.

00:06:20.686 --> 00:06:22.726 A:middle
This includes an intra step

00:06:22.996 --> 00:06:25.846 A:middle
progress indicator, as well as a

00:06:25.846 --> 00:06:26.656 A:middle
Learn More button.

00:06:27.296 --> 00:06:29.156 A:middle
Now this button can be used for

00:06:29.156 --> 00:06:31.306 A:middle
situations where your questions

00:06:31.306 --> 00:06:33.066 A:middle
or answer choices contain

00:06:33.266 --> 00:06:35.056 A:middle
terminologies but just not quite

00:06:35.056 --> 00:06:36.086 A:middle
self-explanatory.

00:06:36.606 --> 00:06:38.196 A:middle
So in this example, if your

00:06:38.196 --> 00:06:40.146 A:middle
users are unaware of what

00:06:40.146 --> 00:06:42.326 A:middle
narcolepsy actually means, they

00:06:42.326 --> 00:06:43.776 A:middle
can simply tap on the Learn More

00:06:43.776 --> 00:06:45.866 A:middle
button to pull up a sheet that

00:06:45.866 --> 00:06:47.786 A:middle
gives them a lot of information

00:06:47.856 --> 00:06:49.176 A:middle
about the question and the

00:06:49.176 --> 00:06:50.356 A:middle
answer choices themselves.

00:06:51.066 --> 00:06:53.936 A:middle
Now you'll notice that we have

00:06:53.936 --> 00:06:55.636 A:middle
added a Top Content Image view.

00:06:56.136 --> 00:06:57.696 A:middle
And this styling will now be

00:06:57.736 --> 00:06:58.986 A:middle
consistent throughout

00:06:58.986 --> 00:07:01.316 A:middle
ResearchKit, so all of our steps

00:06:58.986 --> 00:07:01.316 A:middle
ResearchKit, so all of our steps

00:07:01.556 --> 00:07:03.536 A:middle
now have the ability to display

00:07:03.586 --> 00:07:05.536 A:middle
rich media content via the Top

00:07:05.536 --> 00:07:06.556 A:middle
Content image view.

00:07:07.096 --> 00:07:09.506 A:middle
And if you scroll further down,

00:07:09.506 --> 00:07:11.176 A:middle
we have added a new object of

00:07:11.246 --> 00:07:12.926 A:middle
type body items, which can be

00:07:12.926 --> 00:07:15.446 A:middle
used to compose lists that will

00:07:15.446 --> 00:07:17.216 A:middle
be automatically formatted for

00:07:17.216 --> 00:07:17.506 A:middle
you.

00:07:17.506 --> 00:07:20.566 A:middle
And now let's take a look at how

00:07:20.566 --> 00:07:21.926 A:middle
you can incorporate these

00:07:21.926 --> 00:07:22.966 A:middle
changes into your existing apps.

00:07:26.276 --> 00:07:27.396 A:middle
So the first thing that you want

00:07:27.396 --> 00:07:28.946 A:middle
to do is create an instance of

00:07:29.036 --> 00:07:31.036 A:middle
ORK learnMoreStep with a unique

00:07:31.036 --> 00:07:31.766 A:middle
identifier.

00:07:32.336 --> 00:07:35.316 A:middle
All of our steps now have this

00:07:35.316 --> 00:07:36.376 A:middle
image property, which will

00:07:36.376 --> 00:07:38.426 A:middle
display as the top content image

00:07:38.426 --> 00:07:38.656 A:middle
view.

00:07:39.276 --> 00:07:40.686 A:middle
You can also customize other

00:07:40.686 --> 00:07:43.406 A:middle
properties, like title and text.

00:07:44.696 --> 00:07:46.106 A:middle
The other thing that you need to

00:07:46.106 --> 00:07:48.096 A:middle
do is create an instance of

00:07:48.206 --> 00:07:49.416 A:middle
ORKBodyItem.

00:07:49.816 --> 00:07:50.946 A:middle
And it accepts the following

00:07:50.946 --> 00:07:52.566 A:middle
parameters, like text, detailed

00:07:52.566 --> 00:07:53.546 A:middle
text, and a style.

00:07:53.976 --> 00:07:55.216 A:middle
You can choose between bullet

00:07:55.256 --> 00:07:57.016 A:middle
point images and just plain

00:07:57.796 --> 00:07:58.246 A:middle
text.

00:07:58.246 --> 00:08:00.626 A:middle
Now all of our steps accept an

00:07:58.246 --> 00:08:00.626 A:middle
Now all of our steps accept an

00:08:00.686 --> 00:08:01.966 A:middle
array of body items.

00:08:02.376 --> 00:08:04.126 A:middle
So let's assign this body item

00:08:04.126 --> 00:08:05.506 A:middle
to the learnMoreStep.

00:08:06.536 --> 00:08:07.436 A:middle
The next thing that you would

00:08:07.436 --> 00:08:09.426 A:middle
want to do is create an instance

00:08:09.706 --> 00:08:12.396 A:middle
of learnMoreItem and bypassing

00:08:12.396 --> 00:08:12.856 A:middle
in the step.

00:08:13.546 --> 00:08:15.436 A:middle
So this is the object that

00:08:15.436 --> 00:08:16.896 A:middle
essentially creates the Detail

00:08:16.896 --> 00:08:18.746 A:middle
Disclosure button on the screen.

00:08:19.466 --> 00:08:21.096 A:middle
We also have another initializer

00:08:21.096 --> 00:08:21.906 A:middle
which accepts text.

00:08:22.386 --> 00:08:23.926 A:middle
So that one will be displayed as

00:08:23.926 --> 00:08:24.936 A:middle
a hyperlink in your step.

00:08:27.156 --> 00:08:28.906 A:middle
We have also added another

00:08:28.906 --> 00:08:31.886 A:middle
initializer to ORK form items in

00:08:31.886 --> 00:08:33.546 A:middle
order to help you customize the

00:08:33.606 --> 00:08:35.436 A:middle
section headers, which allows

00:08:35.486 --> 00:08:37.466 A:middle
you to group multiple form items

00:08:37.525 --> 00:08:38.736 A:middle
under the same section.

00:08:39.285 --> 00:08:41.086 A:middle
Now this accepts properties like

00:08:41.086 --> 00:08:43.366 A:middle
sectionTitle, detailText, the

00:08:43.366 --> 00:08:45.066 A:middle
learnMoreItem, and the toggle to

00:08:45.066 --> 00:08:47.006 A:middle
indicate whether or not you want

00:08:47.006 --> 00:08:48.256 A:middle
to display the intra step

00:08:48.306 --> 00:08:49.276 A:middle
progress indicator.

00:08:50.636 --> 00:08:51.426 A:middle
And now that you have

00:08:51.426 --> 00:08:52.836 A:middle
incorporated these changes into

00:08:52.836 --> 00:08:55.586 A:middle
your apps, your users can make

00:08:55.676 --> 00:08:57.416 A:middle
an informed decision before

00:08:57.416 --> 00:08:58.976 A:middle
answering any of your questions.

00:09:02.326 --> 00:09:04.136 A:middle
Now let's move on to active

00:09:04.136 --> 00:09:04.306 A:middle
tasks.

00:09:05.176 --> 00:09:06.946 A:middle
Now similar to last year, this

00:09:06.946 --> 00:09:08.946 A:middle
year, we will be focusing on our

00:09:08.946 --> 00:09:10.626 A:middle
three main areas of health --

00:09:11.126 --> 00:09:14.626 A:middle
vision, hearing, and speech.

00:09:15.956 --> 00:09:17.156 A:middle
Now when it comes to measuring

00:09:17.156 --> 00:09:19.386 A:middle
visual health, there are two key

00:09:19.386 --> 00:09:21.046 A:middle
metrics that are considered as

00:09:21.086 --> 00:09:23.906 A:middle
the gold standard, visual acuity

00:09:24.436 --> 00:09:25.796 A:middle
and contrast sensitivity.

00:09:27.096 --> 00:09:28.996 A:middle
Visual acuity is essentially

00:09:28.996 --> 00:09:31.796 A:middle
your ability to distinguish and

00:09:31.796 --> 00:09:33.366 A:middle
identify an object along with

00:09:33.366 --> 00:09:33.976 A:middle
its features.

00:09:37.266 --> 00:09:39.456 A:middle
It comes in two stimulis.

00:09:39.696 --> 00:09:41.636 A:middle
One is the Landolt C, and the

00:09:41.636 --> 00:09:43.606 A:middle
other one is a Snellen or

00:09:43.606 --> 00:09:44.196 A:middle
Tumbling E.

00:09:44.716 --> 00:09:46.806 A:middle
Now our first active task in the

00:09:46.806 --> 00:09:48.706 A:middle
visual acuity space is a

00:09:48.706 --> 00:09:50.726 A:middle
contribution by Novartis from

00:09:50.726 --> 00:09:51.566 A:middle
their FocalView app.

00:09:52.506 --> 00:09:54.596 A:middle
Now, this app essentially

00:09:54.596 --> 00:09:56.636 A:middle
requests the user to align the

00:09:56.636 --> 00:09:58.326 A:middle
outer dial with the opening in

00:09:58.326 --> 00:09:59.026 A:middle
the letter C.

00:10:00.536 --> 00:10:01.976 A:middle
Now the Landolt C stimuli

00:10:02.366 --> 00:10:04.276 A:middle
remains in fixed contrast but

00:10:04.276 --> 00:10:06.216 A:middle
keeps decreasing in size and

00:10:06.216 --> 00:10:08.186 A:middle
pops up in random orientations.

00:10:09.026 --> 00:10:10.936 A:middle
Once a user completes this task,

00:10:10.936 --> 00:10:12.846 A:middle
the developer will receive a

00:10:12.846 --> 00:10:14.606 A:middle
visual acuity rating score for

00:10:14.606 --> 00:10:14.976 A:middle
that user.

00:10:18.046 --> 00:10:19.596 A:middle
To incorporate this in your app,

00:10:19.596 --> 00:10:21.026 A:middle
you create an instance of

00:10:21.136 --> 00:10:23.466 A:middle
ORKLandoltCStep with a unique

00:10:23.466 --> 00:10:24.186 A:middle
identifier.

00:10:24.986 --> 00:10:26.876 A:middle
You then set the testType to be

00:10:26.876 --> 00:10:27.466 A:middle
acuity.

00:10:28.306 --> 00:10:29.986 A:middle
And then as always, you can

00:10:29.986 --> 00:10:31.516 A:middle
create an ordered task by

00:10:31.516 --> 00:10:32.926 A:middle
passing in an array of steps,

00:10:33.516 --> 00:10:35.096 A:middle
then pass the task to create a

00:10:35.096 --> 00:10:36.256 A:middle
TaskViewController, which you

00:10:36.256 --> 00:10:36.976 A:middle
can present within your app.

00:10:42.106 --> 00:10:43.946 A:middle
Our second active task in the

00:10:43.946 --> 00:10:46.576 A:middle
visual acuity space leverages

00:10:46.776 --> 00:10:49.386 A:middle
Tumbling E as the stimuli.

00:10:50.276 --> 00:10:51.676 A:middle
Now as part of this task, the

00:10:51.676 --> 00:10:53.296 A:middle
user will be expected to swipe

00:10:53.456 --> 00:10:55.276 A:middle
into the direction of the arms

00:10:55.336 --> 00:10:56.246 A:middle
of the letter E.

00:10:57.196 --> 00:10:58.566 A:middle
Now similar to Landolt C, the

00:10:58.566 --> 00:11:00.966 A:middle
Tumbling E will remain fixed in

00:10:58.566 --> 00:11:00.966 A:middle
Tumbling E will remain fixed in

00:11:00.966 --> 00:11:03.196 A:middle
contrast, will decrease in size,

00:11:03.256 --> 00:11:04.206 A:middle
and pop up in random

00:11:04.206 --> 00:11:04.926 A:middle
orientation.

00:11:05.546 --> 00:11:06.946 A:middle
But the interesting piece here

00:11:07.296 --> 00:11:08.856 A:middle
is that the testing distance,

00:11:09.056 --> 00:11:10.226 A:middle
along with the size of the

00:11:10.226 --> 00:11:12.016 A:middle
stimuli, is controlled by the

00:11:12.066 --> 00:11:12.956 A:middle
TrueDepth camera.

00:11:13.506 --> 00:11:16.086 A:middle
And once the user completes this

00:11:16.086 --> 00:11:18.006 A:middle
task, you will receive a lot

00:11:18.006 --> 00:11:20.306 A:middle
more value, where MAR stands for

00:11:20.306 --> 00:11:22.326 A:middle
Minimum Angle of Resolution.

00:11:24.216 --> 00:11:25.536 A:middle
To incorporate this in your app,

00:11:25.856 --> 00:11:27.236 A:middle
you create an instance of

00:11:27.236 --> 00:11:29.986 A:middle
ORKTumblingEStep with a unique

00:11:29.986 --> 00:11:30.676 A:middle
identifier.

00:11:31.246 --> 00:11:33.146 A:middle
You can also specify the minimum

00:11:33.146 --> 00:11:34.716 A:middle
and maximum viewing distance

00:11:35.036 --> 00:11:36.746 A:middle
that is specific to your trial.

00:11:37.286 --> 00:11:40.086 A:middle
And same as always, you create

00:11:40.086 --> 00:11:41.906 A:middle
an OrderedTask, pass that to the

00:11:41.906 --> 00:11:44.046 A:middle
ViewController, and present it.

00:11:45.396 --> 00:11:47.916 A:middle
Now let's move on to our next

00:11:47.916 --> 00:11:49.846 A:middle
big category ambition, contrast

00:11:49.846 --> 00:11:50.506 A:middle
sensitivity.

00:11:51.046 --> 00:11:52.756 A:middle
This essentially refers to your

00:11:52.756 --> 00:11:54.666 A:middle
ability to distinguish an object

00:11:54.666 --> 00:11:55.726 A:middle
from its background.

00:11:56.466 --> 00:11:58.586 A:middle
And it comes in -- so two

00:11:58.586 --> 00:12:00.986 A:middle
stimuli is most commonly used to

00:11:58.586 --> 00:12:00.986 A:middle
stimuli is most commonly used to

00:12:01.016 --> 00:12:02.446 A:middle
test for this particular

00:12:02.696 --> 00:12:04.116 A:middle
contrast sensitivity feature.

00:12:04.746 --> 00:12:06.906 A:middle
One is Landolt C, and the other

00:12:06.906 --> 00:12:07.926 A:middle
one is a Gabor Patch.

00:12:11.136 --> 00:12:12.206 A:middle
The first active task in

00:12:12.206 --> 00:12:13.826 A:middle
contrast sensitivity is once

00:12:13.826 --> 00:12:15.506 A:middle
again a contribution by Novartis

00:12:15.506 --> 00:12:17.386 A:middle
from their FocalView app.

00:12:17.596 --> 00:12:19.226 A:middle
Now, this is very much in line

00:12:19.226 --> 00:12:20.496 A:middle
with the visual acuity task.

00:12:20.826 --> 00:12:22.446 A:middle
But the key difference here is

00:12:22.446 --> 00:12:24.816 A:middle
that the Landolt C remains fixed

00:12:24.816 --> 00:12:27.286 A:middle
in size but keeps decreasing in

00:12:27.286 --> 00:12:28.756 A:middle
contrast as it is being

00:12:28.756 --> 00:12:29.846 A:middle
presented in random

00:12:29.846 --> 00:12:30.616 A:middle
orientations.

00:12:31.606 --> 00:12:32.986 A:middle
And once the user completes this

00:12:33.036 --> 00:12:34.646 A:middle
task, you will receive the

00:12:34.646 --> 00:12:35.776 A:middle
visual acuity rating score for

00:12:35.776 --> 00:12:35.976 A:middle
the user.

00:12:39.136 --> 00:12:40.806 A:middle
Adding this to your app is

00:12:40.876 --> 00:12:42.596 A:middle
exactly the same as the visual

00:12:42.706 --> 00:12:43.266 A:middle
acuity task.

00:12:43.616 --> 00:12:45.136 A:middle
The only key difference is that

00:12:45.136 --> 00:12:46.116 A:middle
you're going to toggle the test

00:12:46.116 --> 00:12:46.976 A:middle
type to be contrast sensitivity.

00:12:51.066 --> 00:12:52.706 A:middle
As part of our next task, we

00:12:52.706 --> 00:12:54.616 A:middle
will try to generate the

00:12:54.646 --> 00:12:56.496 A:middle
contrast sensitivity function

00:12:56.496 --> 00:12:58.186 A:middle
for a user by presenting them

00:12:58.186 --> 00:12:59.686 A:middle
with the stimuli known as the

00:12:59.686 --> 00:13:00.436 A:middle
Gabor Patch.

00:12:59.686 --> 00:13:00.436 A:middle
Gabor Patch.

00:13:00.966 --> 00:13:02.206 A:middle
And this is what it looks like.

00:13:03.026 --> 00:13:04.136 A:middle
So you'll notice that there are

00:13:04.186 --> 00:13:06.356 A:middle
certain lines on the stimuli

00:13:06.356 --> 00:13:08.796 A:middle
that is leaning to the right,

00:13:09.406 --> 00:13:10.746 A:middle
especially the top tilt.

00:13:11.606 --> 00:13:12.976 A:middle
And in the other stimuli, you

00:13:12.976 --> 00:13:14.576 A:middle
will notice that the top tilt,

00:13:14.786 --> 00:13:16.696 A:middle
or the upward tilt, is leaning

00:13:16.696 --> 00:13:17.216 A:middle
to the left.

00:13:17.756 --> 00:13:19.726 A:middle
Now, your users will be expected

00:13:19.726 --> 00:13:22.036 A:middle
to recognize that leaning of the

00:13:22.036 --> 00:13:23.906 A:middle
tilt and select the appropriate

00:13:23.906 --> 00:13:24.976 A:middle
direction as part of the task.

00:13:29.046 --> 00:13:31.416 A:middle
Now, the Gabor Patch stimuli is

00:13:31.416 --> 00:13:33.646 A:middle
generated programmatically using

00:13:33.646 --> 00:13:35.626 A:middle
an adaptive algorithm that

00:13:35.626 --> 00:13:37.326 A:middle
varies the spatial frequency.

00:13:38.796 --> 00:13:40.166 A:middle
Now the Gabor Patch will be

00:13:40.166 --> 00:13:41.396 A:middle
displayed with random

00:13:41.396 --> 00:13:43.106 A:middle
orientations and different

00:13:43.106 --> 00:13:44.966 A:middle
positions within the screen.

00:13:45.976 --> 00:13:47.716 A:middle
And once again, the testing

00:13:47.716 --> 00:13:49.096 A:middle
distance and the size of the

00:13:49.096 --> 00:13:51.166 A:middle
stimuli itself is controlled

00:13:51.246 --> 00:13:52.996 A:middle
real time by the TrueDepth

00:13:52.996 --> 00:13:53.416 A:middle
camera.

00:13:54.886 --> 00:13:56.176 A:middle
Once the user completes this

00:13:56.216 --> 00:13:58.436 A:middle
task, the developer will be able

00:13:58.436 --> 00:14:00.606 A:middle
to use the results to generate a

00:13:58.436 --> 00:14:00.606 A:middle
to use the results to generate a

00:14:00.696 --> 00:14:02.236 A:middle
sensitivity vs spatial

00:14:02.236 --> 00:14:03.976 A:middle
frequency curve for the user.

00:14:07.056 --> 00:14:08.476 A:middle
To incorporate this in your app,

00:14:08.476 --> 00:14:09.926 A:middle
you create an instance of

00:14:09.996 --> 00:14:12.306 A:middle
ORKCSFStep with a unique

00:14:12.306 --> 00:14:13.176 A:middle
identifier.

00:14:13.996 --> 00:14:15.236 A:middle
Once again, you can set the

00:14:15.236 --> 00:14:16.676 A:middle
minimum and maximum viewing

00:14:16.676 --> 00:14:18.156 A:middle
distance that is specific to

00:14:18.156 --> 00:14:18.816 A:middle
your trial.

00:14:20.146 --> 00:14:21.956 A:middle
You create an OrderedTask, pass

00:14:22.026 --> 00:14:23.546 A:middle
that to the TaskViewController,

00:14:23.546 --> 00:14:24.776 A:middle
and simply present it within

00:14:24.776 --> 00:14:24.976 A:middle
your app.

00:14:29.046 --> 00:14:30.466 A:middle
Now the contrast sensitivity

00:14:30.556 --> 00:14:32.126 A:middle
function and the Tumbling E

00:14:32.126 --> 00:14:34.056 A:middle
active task that leverage the

00:14:34.096 --> 00:14:35.286 A:middle
TrueDepth camera will be

00:14:35.286 --> 00:14:37.626 A:middle
available soon via an Apple

00:14:37.626 --> 00:14:38.936 A:middle
sample code license on

00:14:38.936 --> 00:14:40.446 A:middle
developer.apple.com.

00:14:41.566 --> 00:14:43.066 A:middle
Now let's move on to our next

00:14:43.066 --> 00:14:44.506 A:middle
category, hearing.

00:14:45.306 --> 00:14:47.516 A:middle
So last year, we announced three

00:14:47.516 --> 00:14:49.726 A:middle
new active tasks that focus on

00:14:49.726 --> 00:14:50.306 A:middle
hearing health.

00:14:50.306 --> 00:14:51.966 A:middle
We had to tone audiometry,

00:14:52.086 --> 00:14:53.986 A:middle
speech and noise, and SPL meter.

00:14:54.926 --> 00:14:56.116 A:middle
This year, we are making

00:14:56.116 --> 00:14:58.096 A:middle
across-the-board enhancements to

00:14:58.096 --> 00:14:58.866 A:middle
the algorithms.

00:14:59.366 --> 00:15:01.066 A:middle
And what's even better is that

00:14:59.366 --> 00:15:01.066 A:middle
And what's even better is that

00:15:01.066 --> 00:15:02.786 A:middle
you can now write the results of

00:15:02.786 --> 00:15:04.996 A:middle
these active tasks directly into

00:15:04.996 --> 00:15:05.456 A:middle
HealthKit.

00:15:06.426 --> 00:15:07.796 A:middle
To learn more about these new

00:15:07.796 --> 00:15:09.636 A:middle
data types, I would recommend

00:15:09.636 --> 00:15:10.816 A:middle
you to check out the HealthKit

00:15:10.816 --> 00:15:12.296 A:middle
session that's happening today

00:15:12.296 --> 00:15:12.976 A:middle
at 2:00 p.m.

00:15:16.356 --> 00:15:17.916 A:middle
Now let's move on to speech.

00:15:18.486 --> 00:15:19.986 A:middle
Last year, we introduced a

00:15:19.986 --> 00:15:21.546 A:middle
speech recognition active task.

00:15:21.996 --> 00:15:23.926 A:middle
When a user completes this task,

00:15:24.306 --> 00:15:25.756 A:middle
you will receive a bunch of

00:15:26.006 --> 00:15:27.926 A:middle
information, including the raw

00:15:27.926 --> 00:15:29.876 A:middle
audio file, the transcript, as

00:15:29.876 --> 00:15:31.456 A:middle
well as an SFTranscription

00:15:31.456 --> 00:15:33.146 A:middle
object rendered by the speech

00:15:33.146 --> 00:15:34.126 A:middle
recognition framework.

00:15:34.646 --> 00:15:35.606 A:middle
Well, this year, the Speech

00:15:35.606 --> 00:15:37.766 A:middle
Recognition team has added more

00:15:37.766 --> 00:15:38.856 A:middle
capabilities to the SF

00:15:38.856 --> 00:15:39.916 A:middle
transcription object.

00:15:39.916 --> 00:15:41.576 A:middle
So you will be able to extract

00:15:41.576 --> 00:15:43.046 A:middle
information like speaking rate

00:15:43.046 --> 00:15:44.416 A:middle
and average pause duration.

00:15:44.676 --> 00:15:46.276 A:middle
And on top of that, there's also

00:15:46.276 --> 00:15:47.796 A:middle
a new object called

00:15:47.796 --> 00:15:49.146 A:middle
SFVoiceAnalytics.

00:15:49.376 --> 00:15:50.846 A:middle
And to learn more about these,

00:15:51.206 --> 00:15:52.376 A:middle
please check out the session

00:15:52.376 --> 00:15:54.366 A:middle
titled "Advances in Speech

00:15:54.366 --> 00:15:54.996 A:middle
Recognition."

00:15:55.536 --> 00:15:58.806 A:middle
And those were our overall

00:15:58.806 --> 00:16:00.386 A:middle
updates and additions to our

00:15:58.806 --> 00:16:00.386 A:middle
updates and additions to our

00:16:00.476 --> 00:16:02.976 A:middle
expanding library of active

00:16:03.016 --> 00:16:03.396 A:middle
tasks.

00:16:04.666 --> 00:16:05.926 A:middle
Now, you might have noticed that

00:16:05.926 --> 00:16:07.706 A:middle
some of these tasks leverage

00:16:08.026 --> 00:16:09.746 A:middle
some system frameworks under the

00:16:09.746 --> 00:16:10.076 A:middle
hood.

00:16:11.246 --> 00:16:12.996 A:middle
And we want to remind you that

00:16:12.996 --> 00:16:14.356 A:middle
there are a lot of other

00:16:14.476 --> 00:16:16.426 A:middle
powerful iOS system frameworks

00:16:16.496 --> 00:16:17.726 A:middle
as part of our SDK.

00:16:18.506 --> 00:16:19.846 A:middle
And we would highly encourage

00:16:19.846 --> 00:16:21.866 A:middle
developers to leverage the true

00:16:21.866 --> 00:16:23.976 A:middle
potential of these frameworks as

00:16:23.976 --> 00:16:25.576 A:middle
you're thinking about adding new

00:16:25.576 --> 00:16:27.886 A:middle
active tasks into ResearchKit or

00:16:27.926 --> 00:16:29.126 A:middle
even if you are considering

00:16:29.156 --> 00:16:31.116 A:middle
adding novel experiences that

00:16:31.186 --> 00:16:31.926 A:middle
focus on health.

00:16:34.516 --> 00:16:36.896 A:middle
And with that, let's move on to

00:16:36.896 --> 00:16:38.066 A:middle
updates for CareKit.

00:16:39.306 --> 00:16:40.746 A:middle
Now, the CareKit framework was

00:16:40.746 --> 00:16:43.946 A:middle
introduced back in 2016 as an

00:16:44.006 --> 00:16:45.256 A:middle
Open Source framework.

00:16:45.826 --> 00:16:47.616 A:middle
And we wanted to enable the

00:16:47.616 --> 00:16:49.826 A:middle
developers to perform three main

00:16:49.826 --> 00:16:52.076 A:middle
things -- the ability to be able

00:16:52.076 --> 00:16:53.636 A:middle
to easily digitize a

00:16:53.636 --> 00:16:56.046 A:middle
prescription, the ability to

00:16:56.046 --> 00:16:57.556 A:middle
provide meaningful data and

00:16:57.556 --> 00:16:59.316 A:middle
trends to the user, and to allow

00:16:59.316 --> 00:17:00.986 A:middle
your users to easily connect

00:16:59.316 --> 00:17:00.986 A:middle
your users to easily connect

00:17:01.246 --> 00:17:02.276 A:middle
with their care providers.

00:17:03.556 --> 00:17:05.016 A:middle
And over the past few years,

00:17:05.016 --> 00:17:06.826 A:middle
we've been making incremental

00:17:06.826 --> 00:17:07.976 A:middle
updates to the framework.

00:17:08.675 --> 00:17:11.465 A:middle
And this year, I'm really

00:17:11.465 --> 00:17:14.296 A:middle
excited to announce CareKit 2.0.

00:17:15.146 --> 00:17:16.925 A:middle
And this is what it looks like.

00:17:17.786 --> 00:17:19.086 A:middle
Now you'll see that we have

00:17:19.086 --> 00:17:21.766 A:middle
completely revamped the UI for

00:17:21.766 --> 00:17:22.336 A:middle
the framework.

00:17:23.646 --> 00:17:26.226 A:middle
But what's even better is that

00:17:26.226 --> 00:17:27.465 A:middle
we have fundamentally

00:17:27.536 --> 00:17:29.336 A:middle
rearchitected and rewritten the

00:17:29.366 --> 00:17:31.646 A:middle
framework purely using Swift.

00:17:32.616 --> 00:17:34.196 A:middle
Now, that means that CareKit,

00:17:34.316 --> 00:17:35.856 A:middle
under the hood, can leverage

00:17:35.856 --> 00:17:37.346 A:middle
some of the most powerful Swift

00:17:37.346 --> 00:17:39.316 A:middle
language features, including the

00:17:39.316 --> 00:17:40.886 A:middle
newly announced combined

00:17:40.886 --> 00:17:41.396 A:middle
framework.

00:17:42.886 --> 00:17:44.016 A:middle
Now let's dive into some

00:17:44.016 --> 00:17:44.526 A:middle
details.

00:17:45.376 --> 00:17:47.036 A:middle
The CareKit framework now

00:17:47.036 --> 00:17:48.506 A:middle
comprises of two other

00:17:48.506 --> 00:17:49.736 A:middle
frameworks under the hood --

00:17:50.636 --> 00:17:52.966 A:middle
CareKit UI and CareKit Store.

00:17:54.296 --> 00:17:56.986 A:middle
CareKit UI is a separate project

00:17:57.126 --> 00:17:58.586 A:middle
inside the CareKit repository

00:17:58.906 --> 00:18:00.316 A:middle
that you can independently

00:17:58.906 --> 00:18:00.316 A:middle
that you can independently

00:18:00.316 --> 00:18:02.896 A:middle
compile and expose as a separate

00:18:02.976 --> 00:18:03.446 A:middle
framework.

00:18:04.756 --> 00:18:06.966 A:middle
CareKit UI is all about

00:18:07.136 --> 00:18:09.796 A:middle
pre-packaged sub classes of UI

00:18:09.796 --> 00:18:10.166 A:middle
views.

00:18:10.696 --> 00:18:12.446 A:middle
So what that essentially means

00:18:12.506 --> 00:18:14.606 A:middle
is that every single view that

00:18:14.606 --> 00:18:16.096 A:middle
you see on the screen is

00:18:16.096 --> 00:18:18.056 A:middle
available for you to leverage in

00:18:18.056 --> 00:18:20.066 A:middle
your app using CareKit UI.

00:18:20.946 --> 00:18:22.346 A:middle
And we have categorized them

00:18:22.606 --> 00:18:24.506 A:middle
into three categories or

00:18:24.506 --> 00:18:25.196 A:middle
components.

00:18:25.646 --> 00:18:27.876 A:middle
We call them tasks, charts, and

00:18:27.876 --> 00:18:28.396 A:middle
contacts.

00:18:29.076 --> 00:18:30.606 A:middle
And these are used to reflect

00:18:31.026 --> 00:18:33.006 A:middle
the functionality that each view

00:18:33.006 --> 00:18:35.966 A:middle
is supposed to serve.

00:18:36.186 --> 00:18:37.726 A:middle
Now, as I mentioned, all of the

00:18:37.726 --> 00:18:40.216 A:middle
views in CareKit UI are just

00:18:40.516 --> 00:18:41.896 A:middle
naive UI views and are

00:18:41.896 --> 00:18:43.426 A:middle
essentially sub classes of UI

00:18:43.426 --> 00:18:43.706 A:middle
views.

00:18:44.706 --> 00:18:45.966 A:middle
So I want to start off by

00:18:45.966 --> 00:18:47.466 A:middle
talking about all the views that

00:18:47.466 --> 00:18:48.726 A:middle
are available in tasks.

00:18:48.936 --> 00:18:50.116 A:middle
And there are five of them that

00:18:50.116 --> 00:18:50.976 A:middle
we want to highlight today.

00:18:53.436 --> 00:18:55.076 A:middle
Now here, you can see that we

00:18:55.076 --> 00:18:55.876 A:middle
have a view.

00:18:56.036 --> 00:18:57.836 A:middle
And since it is just a subclass

00:18:57.836 --> 00:18:59.356 A:middle
of a UI view, you can constrain

00:18:59.356 --> 00:19:01.166 A:middle
it anywhere within your app by

00:18:59.356 --> 00:19:01.166 A:middle
it anywhere within your app by

00:19:01.166 --> 00:19:02.256 A:middle
adding it as a sub view.

00:19:03.226 --> 00:19:05.276 A:middle
Now to create this view, all you

00:19:05.276 --> 00:19:07.176 A:middle
have to do is import CareKit UI,

00:19:07.826 --> 00:19:09.046 A:middle
create an instance of

00:19:09.136 --> 00:19:12.196 A:middle
OCKSimpleTaskView, and set some

00:19:12.196 --> 00:19:13.276 A:middle
of the parameters that are

00:19:13.276 --> 00:19:14.596 A:middle
available on this object.

00:19:15.686 --> 00:19:16.586 A:middle
It's that easy.

00:19:17.166 --> 00:19:19.316 A:middle
And now let's take a look at the

00:19:19.316 --> 00:19:21.386 A:middle
remaining four UIs that we said

00:19:21.386 --> 00:19:22.496 A:middle
are available inside the task's

00:19:22.496 --> 00:19:22.796 A:middle
component.

00:19:26.206 --> 00:19:27.526 A:middle
The next one that we want to

00:19:27.526 --> 00:19:29.946 A:middle
cover is the

00:19:29.946 --> 00:19:31.926 A:middle
OCKInstructionsTaskView.

00:19:32.406 --> 00:19:33.766 A:middle
So when you create an object of

00:19:33.806 --> 00:19:35.456 A:middle
this type, you will get a view

00:19:35.456 --> 00:19:36.716 A:middle
that looks somewhat like this.

00:19:37.026 --> 00:19:38.896 A:middle
And all you have to do is add

00:19:38.896 --> 00:19:41.036 A:middle
one additional parameter to set

00:19:41.136 --> 00:19:42.006 A:middle
the right values.

00:19:43.436 --> 00:19:45.826 A:middle
Along those same lines, the next

00:19:45.826 --> 00:19:47.026 A:middle
view that we want to talk about

00:19:47.646 --> 00:19:51.086 A:middle
is the OCKGridTaskView, which

00:19:51.086 --> 00:19:52.326 A:middle
looks somewhat like this.

00:19:52.946 --> 00:19:54.376 A:middle
Now this view is interesting

00:19:54.376 --> 00:19:55.976 A:middle
because all the check marks and

00:19:55.976 --> 00:19:57.016 A:middle
the buttons that you're seeing

00:19:57.016 --> 00:19:58.566 A:middle
here, this is standard for a

00:19:58.566 --> 00:19:59.406 A:middle
medication view.

00:19:59.706 --> 00:20:01.096 A:middle
And as part of this view, we are

00:19:59.706 --> 00:20:01.096 A:middle
And as part of this view, we are

00:20:01.096 --> 00:20:02.826 A:middle
essentially exposing the

00:20:02.826 --> 00:20:04.376 A:middle
collectionView to you directly.

00:20:04.736 --> 00:20:05.836 A:middle
So you could choose to set

00:20:05.836 --> 00:20:07.766 A:middle
yourself up as the delegate and

00:20:07.976 --> 00:20:10.136 A:middle
pass in whatever view you want

00:20:10.136 --> 00:20:11.256 A:middle
into the collectionView.

00:20:11.446 --> 00:20:13.416 A:middle
So you can choose to use an OCK

00:20:13.416 --> 00:20:13.886 A:middle
button.

00:20:13.986 --> 00:20:15.326 A:middle
Or you can even provide any

00:20:15.326 --> 00:20:16.006 A:middle
custom UI.

00:20:16.006 --> 00:20:17.886 A:middle
It is extremely customizable as

00:20:17.886 --> 00:20:17.976 A:middle
well.

00:20:20.526 --> 00:20:23.666 A:middle
Our next view type is an

00:20:23.716 --> 00:20:26.186 A:middle
OCKChecklistTaskView, which

00:20:26.186 --> 00:20:27.306 A:middle
looks somewhat like this.

00:20:28.326 --> 00:20:30.036 A:middle
And all the buttons that you see

00:20:30.036 --> 00:20:31.766 A:middle
on screen are now composed

00:20:31.806 --> 00:20:32.886 A:middle
inside a Stack View.

00:20:33.326 --> 00:20:34.626 A:middle
So by simply calling an

00:20:34.626 --> 00:20:36.126 A:middle
appendItem method, you'll be

00:20:36.126 --> 00:20:38.056 A:middle
able to add a new role into your

00:20:38.096 --> 00:20:39.476 A:middle
checklist as a new item.

00:20:40.016 --> 00:20:43.076 A:middle
Our final view type under the

00:20:43.076 --> 00:20:45.186 A:middle
tasks component is an

00:20:45.186 --> 00:20:46.956 A:middle
OCKSimpleLogTaskView.

00:20:47.626 --> 00:20:48.776 A:middle
It looks somewhat like this.

00:20:48.776 --> 00:20:50.676 A:middle
And it can be used for logging

00:20:50.876 --> 00:20:52.676 A:middle
random events like a headache or

00:20:52.676 --> 00:20:53.206 A:middle
nausea.

00:20:53.446 --> 00:20:55.396 A:middle
And every time the user taps on

00:20:55.396 --> 00:20:56.836 A:middle
the log button, we will show

00:20:56.836 --> 00:20:58.246 A:middle
them a timestamp of when they

00:20:58.306 --> 00:20:59.436 A:middle
logged their last event.

00:21:00.106 --> 00:21:01.476 A:middle
And the timestamps are once

00:21:01.476 --> 00:21:02.826 A:middle
again composed inside the stack

00:21:02.896 --> 00:21:03.126 A:middle
view.

00:21:03.416 --> 00:21:04.566 A:middle
So by simply calling the

00:21:04.566 --> 00:21:05.836 A:middle
appendItem method, you'll be

00:21:05.836 --> 00:21:07.946 A:middle
able to append more logs based

00:21:07.946 --> 00:21:10.366 A:middle
on the action that is generated

00:21:10.366 --> 00:21:12.796 A:middle
by the button.

00:21:12.876 --> 00:21:14.316 A:middle
Now, let's move on to our next

00:21:14.316 --> 00:21:15.836 A:middle
component, charts.

00:21:16.646 --> 00:21:19.366 A:middle
So to create a chart in CareKit

00:21:19.366 --> 00:21:21.466 A:middle
UI, you simply import CareKit

00:21:21.466 --> 00:21:21.876 A:middle
UI.

00:21:22.096 --> 00:21:23.666 A:middle
You create an instance of

00:21:23.666 --> 00:21:26.556 A:middle
OCKCartesianChartCardView and

00:21:26.556 --> 00:21:27.396 A:middle
specify a type.

00:21:27.926 --> 00:21:29.146 A:middle
You can then go on to set the

00:21:29.146 --> 00:21:30.766 A:middle
title, the text, and even the

00:21:30.766 --> 00:21:31.956 A:middle
values as part of the data

00:21:31.956 --> 00:21:32.376 A:middle
series.

00:21:32.946 --> 00:21:34.766 A:middle
And by simply toggling the type,

00:21:35.836 --> 00:21:37.526 A:middle
you'll be able to easily switch

00:21:37.526 --> 00:21:38.566 A:middle
between the different chart

00:21:38.596 --> 00:21:40.476 A:middle
types for that exact same set of

00:21:40.506 --> 00:21:40.976 A:middle
data points.

00:21:43.176 --> 00:21:44.936 A:middle
And our final component which we

00:21:44.936 --> 00:21:47.796 A:middle
want to cover today is contacts.

00:21:48.476 --> 00:21:50.286 A:middle
So you can create an instance of

00:21:50.286 --> 00:21:52.006 A:middle
OCKContactCardView and just

00:21:52.006 --> 00:21:53.516 A:middle
populate it with content.

00:21:53.826 --> 00:21:55.176 A:middle
And we will ensure that all the

00:21:55.176 --> 00:21:56.486 A:middle
constraints are applied in the

00:21:56.586 --> 00:21:56.956 A:middle
right way.

00:22:00.286 --> 00:22:01.766 A:middle
So those were our overall

00:22:01.766 --> 00:22:02.846 A:middle
updates for CareKit UI.

00:22:02.846 --> 00:22:05.646 A:middle
Our real intention here is to

00:22:05.646 --> 00:22:07.456 A:middle
continue to add more views to

00:22:07.456 --> 00:22:09.126 A:middle
each of these components and

00:22:09.126 --> 00:22:10.736 A:middle
also expand the library of

00:22:10.736 --> 00:22:11.856 A:middle
components that we have.

00:22:12.876 --> 00:22:14.136 A:middle
We think that this can be an

00:22:14.136 --> 00:22:15.646 A:middle
extremely powerful tool for

00:22:15.646 --> 00:22:18.186 A:middle
users and makes the CareKit 2.0

00:22:18.186 --> 00:22:20.176 A:middle
framework highly customizable,

00:22:20.416 --> 00:22:22.126 A:middle
because we just give you all the

00:22:22.126 --> 00:22:24.066 A:middle
new sorts of views with all the

00:22:24.066 --> 00:22:24.976 A:middle
constraints taken care of.

00:22:28.086 --> 00:22:29.486 A:middle
Now let's talk about CareKit

00:22:29.486 --> 00:22:29.906 A:middle
Store.

00:22:30.686 --> 00:22:31.886 A:middle
CareKit Store, similar to

00:22:31.886 --> 00:22:34.376 A:middle
CareKit UI, is its own project

00:22:34.466 --> 00:22:35.656 A:middle
inside the CareKit framework.

00:22:36.916 --> 00:22:38.796 A:middle
So you can compile it and export

00:22:38.796 --> 00:22:40.546 A:middle
it as a standalone framework

00:22:40.546 --> 00:22:41.766 A:middle
into your app and use it in a

00:22:41.766 --> 00:22:43.196 A:middle
completely unrelated manner.

00:22:43.866 --> 00:22:45.576 A:middle
CareKit Store is essentially a

00:22:45.576 --> 00:22:47.306 A:middle
wrapper on top of Core Data that

00:22:47.366 --> 00:22:49.826 A:middle
allows you to persist Care Plans

00:22:49.946 --> 00:22:52.736 A:middle
and react to them locally on

00:22:52.736 --> 00:22:53.736 A:middle
device within your app

00:22:53.796 --> 00:22:54.366 A:middle
containers.

00:22:55.256 --> 00:22:56.456 A:middle
And since it's a database

00:22:56.456 --> 00:22:58.916 A:middle
essentially, we have given you a

00:22:58.966 --> 00:23:00.046 A:middle
cookie cutter scheme.

00:22:58.966 --> 00:23:00.046 A:middle
cookie cutter scheme.

00:23:00.226 --> 00:23:01.716 A:middle
And let's take a look at what

00:23:01.716 --> 00:23:02.316 A:middle
that looks like.

00:23:02.866 --> 00:23:05.786 A:middle
So the most fundamental entity

00:23:05.786 --> 00:23:08.866 A:middle
for any Care app is the patient.

00:23:09.746 --> 00:23:11.806 A:middle
Now let's take a look at how you

00:23:11.806 --> 00:23:13.386 A:middle
initialize a CareKit Store,

00:23:14.646 --> 00:23:16.306 A:middle
create a patient object, and

00:23:16.306 --> 00:23:17.726 A:middle
ingest that into the CareKit

00:23:17.726 --> 00:23:18.026 A:middle
Store.

00:23:19.656 --> 00:23:21.626 A:middle
So you start off by importing

00:23:21.756 --> 00:23:23.376 A:middle
CareKitStore as a standalone

00:23:23.416 --> 00:23:23.886 A:middle
framework.

00:23:24.646 --> 00:23:26.086 A:middle
You then create an instance of

00:23:26.086 --> 00:23:27.646 A:middle
OCKStore with a unique

00:23:27.646 --> 00:23:29.606 A:middle
identifier to create the Core

00:23:29.606 --> 00:23:32.206 A:middle
Data database within your app

00:23:32.796 --> 00:23:33.000 A:middle
container.

00:23:33.616 --> 00:23:34.816 A:middle
You then go on to create a

00:23:34.816 --> 00:23:36.756 A:middle
patient object by using one of

00:23:36.756 --> 00:23:37.946 A:middle
our convenience initializers

00:23:37.946 --> 00:23:39.016 A:middle
that accepts some basic

00:23:39.066 --> 00:23:39.676 A:middle
parameters.

00:23:41.066 --> 00:23:42.286 A:middle
You can then call the

00:23:42.326 --> 00:23:44.076 A:middle
addPatientMethod on the Store,

00:23:44.376 --> 00:23:46.816 A:middle
which asynchronously accepts the

00:23:46.816 --> 00:23:48.836 A:middle
object and ingests it into the

00:23:48.836 --> 00:23:49.386 A:middle
database.

00:23:50.306 --> 00:23:52.056 A:middle
And once that is complete, you

00:23:52.056 --> 00:23:53.716 A:middle
will get a completion callback.

00:23:54.316 --> 00:23:55.966 A:middle
And this will return a Swift

00:23:55.966 --> 00:23:56.866 A:middle
result type that you can switch

00:23:56.866 --> 00:23:56.976 A:middle
on.

00:24:00.346 --> 00:24:02.506 A:middle
Now our second key entity in our

00:24:02.506 --> 00:24:04.826 A:middle
Care Plan is the Care Plan

00:24:04.826 --> 00:24:05.336 A:middle
itself.

00:24:05.846 --> 00:24:07.426 A:middle
And every patient can have

00:24:07.426 --> 00:24:09.306 A:middle
multiple Care Plans associated

00:24:09.406 --> 00:24:09.896 A:middle
with them.

00:24:10.756 --> 00:24:12.496 A:middle
So now let's take a look at how

00:24:12.496 --> 00:24:14.596 A:middle
you can create a new Care Plan

00:24:14.936 --> 00:24:16.046 A:middle
and associate it with a

00:24:16.046 --> 00:24:16.976 A:middle
particular patient.

00:24:20.186 --> 00:24:21.686 A:middle
So as always, you create a

00:24:21.686 --> 00:24:22.706 A:middle
reference to the store.

00:24:22.706 --> 00:24:24.386 A:middle
Now one thing to note here is

00:24:24.386 --> 00:24:25.416 A:middle
that if you provide an

00:24:25.456 --> 00:24:26.726 A:middle
identifier that is already

00:24:26.726 --> 00:24:28.776 A:middle
available, we will just take an

00:24:28.776 --> 00:24:30.096 A:middle
existing store with that

00:24:30.096 --> 00:24:30.916 A:middle
identifier and return that to

00:24:30.916 --> 00:24:30.983 A:middle
you.

00:24:34.046 --> 00:24:35.986 A:middle
So then, if you don't have a

00:24:35.986 --> 00:24:37.316 A:middle
reference to the patient object,

00:24:37.316 --> 00:24:38.446 A:middle
the first thing that you need to

00:24:38.446 --> 00:24:40.656 A:middle
do is query the patient object

00:24:40.656 --> 00:24:41.216 A:middle
from the Store.

00:24:42.226 --> 00:24:43.786 A:middle
And once that query completes

00:24:43.826 --> 00:24:45.386 A:middle
asynchronously, you get a

00:24:45.386 --> 00:24:45.946 A:middle
callback.

00:24:45.946 --> 00:24:47.416 A:middle
And inside the callback, you can

00:24:47.416 --> 00:24:49.356 A:middle
go on to create a Care Plan by

00:24:49.356 --> 00:24:50.636 A:middle
providing it parameters like

00:24:50.636 --> 00:24:52.466 A:middle
identifier, the name for the

00:24:52.466 --> 00:24:54.306 A:middle
Care Plan, and most importantly,

00:24:54.306 --> 00:24:55.076 A:middle
the patient ID.

00:24:55.606 --> 00:24:57.086 A:middle
Doing this will essentially help

00:24:57.156 --> 00:24:59.156 A:middle
create the association between

00:24:59.156 --> 00:25:00.656 A:middle
the patient -- the Care Plan and

00:24:59.156 --> 00:25:00.656 A:middle
the patient -- the Care Plan and

00:25:00.656 --> 00:25:01.446 A:middle
the patient itself.

00:25:01.946 --> 00:25:03.116 A:middle
And then you can call the

00:25:03.116 --> 00:25:05.136 A:middle
addCarePlan method to ingest

00:25:05.176 --> 00:25:06.426 A:middle
this new Care Plan into your

00:25:06.426 --> 00:25:06.886 A:middle
database.

00:25:07.316 --> 00:25:11.246 A:middle
Now every Care Plan can have an

00:25:11.386 --> 00:25:13.136 A:middle
array of contacts associated

00:25:13.136 --> 00:25:13.516 A:middle
with them.

00:25:13.886 --> 00:25:15.736 A:middle
Now, these could be contacts for

00:25:15.736 --> 00:25:17.466 A:middle
the primary care providers who

00:25:17.466 --> 00:25:18.636 A:middle
are associated with this

00:25:18.636 --> 00:25:20.226 A:middle
particular Care Plan.

00:25:21.076 --> 00:25:22.966 A:middle
Now, the other thing that's

00:25:23.356 --> 00:25:25.196 A:middle
interesting here is the notion

00:25:25.196 --> 00:25:25.526 A:middle
of tasks.

00:25:26.376 --> 00:25:27.866 A:middle
Now task entities are

00:25:27.866 --> 00:25:29.976 A:middle
essentially action items that

00:25:29.976 --> 00:25:32.566 A:middle
your users are requested to

00:25:32.566 --> 00:25:34.756 A:middle
perform on a daily basis as part

00:25:34.756 --> 00:25:35.716 A:middle
of their Care Plan.

00:25:36.266 --> 00:25:38.526 A:middle
And every task has an associated

00:25:38.526 --> 00:25:40.006 A:middle
schedule object with it.

00:25:40.416 --> 00:25:42.336 A:middle
Now the schedule dictates when

00:25:42.336 --> 00:25:44.136 A:middle
the user is expected to perform

00:25:44.136 --> 00:25:45.956 A:middle
a particular task.

00:25:46.386 --> 00:25:48.536 A:middle
So now let's take a look at how

00:25:48.536 --> 00:25:50.596 A:middle
you can prescribe a particular

00:25:50.596 --> 00:25:52.566 A:middle
medication to your user and

00:25:52.566 --> 00:25:53.806 A:middle
ingest that into your Care

00:25:53.806 --> 00:25:53.926 A:middle
Store.

00:25:58.046 --> 00:25:59.596 A:middle
So here, we are creating a

00:25:59.596 --> 00:26:01.076 A:middle
schedule where you need to take

00:25:59.596 --> 00:26:01.076 A:middle
schedule where you need to take

00:26:01.076 --> 00:26:02.866 A:middle
your medication every day at

00:26:02.916 --> 00:26:05.116 A:middle
7:00 a.m. We are creating

00:26:05.116 --> 00:26:06.806 A:middle
another schedule element that

00:26:06.806 --> 00:26:08.176 A:middle
expects you to take the same

00:26:08.176 --> 00:26:10.326 A:middle
medication every other day at

00:26:10.386 --> 00:26:12.126 A:middle
12:00 p.m. So we are calling the

00:26:12.176 --> 00:26:14.296 A:middle
former one as breakfast dose and

00:26:14.296 --> 00:26:16.036 A:middle
the latter one as the lunch

00:26:16.036 --> 00:26:16.306 A:middle
dose.

00:26:17.156 --> 00:26:18.506 A:middle
And you can simply compose

00:26:18.506 --> 00:26:20.116 A:middle
multiple schedules together to

00:26:20.116 --> 00:26:21.586 A:middle
create one unified schedule

00:26:22.056 --> 00:26:24.066 A:middle
which you can then pass on to

00:26:24.066 --> 00:26:24.316 A:middle
the task.

00:26:25.876 --> 00:26:28.386 A:middle
So the OCKTaskObject accepts

00:26:28.386 --> 00:26:30.026 A:middle
parameters like identifier.

00:26:30.246 --> 00:26:31.896 A:middle
The title here is a Doxylamine

00:26:31.896 --> 00:26:33.886 A:middle
medication, and you can give it

00:26:33.886 --> 00:26:34.806 A:middle
the schedule object.

00:26:34.886 --> 00:26:38.056 A:middle
And you can directly add this

00:26:38.086 --> 00:26:41.826 A:middle
task into your CareKit Store.

00:26:42.036 --> 00:26:43.546 A:middle
Now, every time your user

00:26:43.546 --> 00:26:45.966 A:middle
completes a particular task, we

00:26:45.966 --> 00:26:47.716 A:middle
generate an outcome.

00:26:48.336 --> 00:26:49.826 A:middle
And every outcome has an

00:26:49.866 --> 00:26:51.766 A:middle
associated value with it.

00:26:52.776 --> 00:26:54.476 A:middle
Now let's take a look at how you

00:26:54.476 --> 00:26:56.746 A:middle
can query all the outcomes in

00:26:56.746 --> 00:26:58.266 A:middle
your database to create

00:26:58.266 --> 00:27:00.516 A:middle
meaningful data and trends that

00:26:58.266 --> 00:27:00.516 A:middle
meaningful data and trends that

00:27:00.516 --> 00:27:01.976 A:middle
you can surface to your users.

00:27:06.316 --> 00:27:07.606 A:middle
So here we are creating a

00:27:07.606 --> 00:27:09.366 A:middle
blanket query that will query

00:27:09.366 --> 00:27:10.886 A:middle
all elements in your database

00:27:10.946 --> 00:27:12.046 A:middle
for the past seven days.

00:27:13.116 --> 00:27:14.646 A:middle
We are then calling the

00:27:14.646 --> 00:27:16.626 A:middle
fetchInsights method on the

00:27:16.626 --> 00:27:17.046 A:middle
task.

00:27:17.376 --> 00:27:18.806 A:middle
And we are passing it the

00:27:18.806 --> 00:27:20.746 A:middle
identifier for the particular

00:27:20.796 --> 00:27:22.686 A:middle
tasks whose event you are

00:27:22.686 --> 00:27:23.346 A:middle
interested in.

00:27:23.686 --> 00:27:24.826 A:middle
So in this case, I'm only

00:27:24.826 --> 00:27:26.426 A:middle
interested in events generated

00:27:26.426 --> 00:27:27.926 A:middle
for the doxylamine medication

00:27:27.926 --> 00:27:28.256 A:middle
task.

00:27:29.196 --> 00:27:32.136 A:middle
Now, this API has two blocks

00:27:32.206 --> 00:27:33.196 A:middle
that are very interesting.

00:27:33.736 --> 00:27:35.146 A:middle
The first one is the daily

00:27:35.146 --> 00:27:36.706 A:middle
aggregator block which can be

00:27:36.706 --> 00:27:38.256 A:middle
called multiple times.

00:27:38.606 --> 00:27:40.546 A:middle
And every time, you get an array

00:27:40.546 --> 00:27:42.416 A:middle
of events for that particular

00:27:42.416 --> 00:27:42.766 A:middle
day.

00:27:42.946 --> 00:27:44.456 A:middle
And you can use this to compute

00:27:44.456 --> 00:27:45.476 A:middle
higher-order metrics.

00:27:47.006 --> 00:27:49.336 A:middle
And then you get the completion

00:27:49.336 --> 00:27:50.566 A:middle
block, which is called only

00:27:50.566 --> 00:27:50.916 A:middle
once.

00:27:51.146 --> 00:27:52.886 A:middle
And it gives you an array of

00:27:52.886 --> 00:27:54.946 A:middle
computed values that you can use

00:27:54.946 --> 00:27:56.096 A:middle
for further analysis or simply

00:27:56.156 --> 00:27:56.976 A:middle
for charting.

00:28:00.416 --> 00:28:02.286 A:middle
Now, every single entity in the

00:28:02.286 --> 00:28:03.866 A:middle
CareKit Store can have an

00:28:03.866 --> 00:28:06.236 A:middle
associated note object with it.

00:28:06.756 --> 00:28:08.376 A:middle
Now note objects are essentially

00:28:08.376 --> 00:28:09.126 A:middle
metadata.

00:28:09.456 --> 00:28:11.256 A:middle
So for example, if the care

00:28:11.256 --> 00:28:13.346 A:middle
provider decided to update the

00:28:13.346 --> 00:28:14.796 A:middle
Care Plan for some reason, and

00:28:14.796 --> 00:28:16.226 A:middle
they wanted to provide you with

00:28:16.356 --> 00:28:18.116 A:middle
free form text, you will be able

00:28:18.116 --> 00:28:19.726 A:middle
to add that to the note object.

00:28:21.076 --> 00:28:22.446 A:middle
And the other interesting thing

00:28:22.786 --> 00:28:25.296 A:middle
is that some of our key entities

00:28:25.526 --> 00:28:26.656 A:middle
are now versionable.

00:28:27.576 --> 00:28:30.156 A:middle
So when you update a medication

00:28:30.156 --> 00:28:31.556 A:middle
task, or when you update a

00:28:31.556 --> 00:28:33.056 A:middle
schedule, we will persist that

00:28:33.206 --> 00:28:34.736 A:middle
in the CareKit Store and you can

00:28:34.736 --> 00:28:36.306 A:middle
go back and forth between them.

00:28:36.886 --> 00:28:40.706 A:middle
So those were our quick updates

00:28:40.736 --> 00:28:41.586 A:middle
for the CareKit Store.

00:28:41.836 --> 00:28:43.016 A:middle
There are a lot more powerful

00:28:43.016 --> 00:28:44.616 A:middle
API's that are available in the

00:28:44.616 --> 00:28:45.736 A:middle
CareKit Store framework.

00:28:45.886 --> 00:28:47.016 A:middle
And we would recommend you to

00:28:47.016 --> 00:28:47.626 A:middle
check them out.

00:28:48.646 --> 00:28:50.316 A:middle
So now let's turn our focus to

00:28:50.626 --> 00:28:52.086 A:middle
the CareKit framework itself.

00:28:52.806 --> 00:28:54.886 A:middle
CareKit is all about bringing

00:28:55.006 --> 00:28:57.196 A:middle
synchronization all the way from

00:28:57.196 --> 00:28:58.856 A:middle
the UI level to the underlying

00:28:58.856 --> 00:28:59.356 A:middle
database.

00:29:00.126 --> 00:29:01.686 A:middle
And the way we accomplish this

00:29:02.036 --> 00:29:03.966 A:middle
is by using a synchronizer

00:29:03.966 --> 00:29:04.446 A:middle
object.

00:29:05.046 --> 00:29:07.786 A:middle
Now this object makes heavy use

00:29:07.836 --> 00:29:09.516 A:middle
of the combined framework under

00:29:09.516 --> 00:29:11.716 A:middle
the hood to propagate events

00:29:11.716 --> 00:29:13.636 A:middle
between the UI layer and the

00:29:13.636 --> 00:29:14.546 A:middle
data store layer.

00:29:15.926 --> 00:29:17.536 A:middle
Now, another key functionality

00:29:17.536 --> 00:29:20.056 A:middle
of CareKit is its modularity and

00:29:20.056 --> 00:29:21.016 A:middle
customizability.

00:29:21.656 --> 00:29:23.276 A:middle
So what I mean by that is that

00:29:23.516 --> 00:29:25.606 A:middle
the database here can either be

00:29:25.606 --> 00:29:27.526 A:middle
a CareKit Store, or it can be

00:29:27.726 --> 00:29:29.646 A:middle
any database of your preference,

00:29:29.986 --> 00:29:31.796 A:middle
as long as it conforms to our

00:29:31.826 --> 00:29:33.846 A:middle
OCKStore protocol, which will

00:29:33.846 --> 00:29:35.186 A:middle
enable the synchronizer to

00:29:35.226 --> 00:29:36.656 A:middle
interact with it seamlessly.

00:29:37.606 --> 00:29:39.566 A:middle
And the UI elements that you see

00:29:39.566 --> 00:29:41.086 A:middle
here can either come from

00:29:41.086 --> 00:29:41.576 A:middle
CareKit UI.

00:29:41.576 --> 00:29:43.506 A:middle
Or they could be even your

00:29:43.506 --> 00:29:45.716 A:middle
custom UI views, as long as you

00:29:45.746 --> 00:29:47.896 A:middle
tell us how to bind the views to

00:29:47.896 --> 00:29:48.876 A:middle
a particular object.

00:29:50.166 --> 00:29:52.316 A:middle
So now let's take a look at what

00:29:52.316 --> 00:29:54.426 A:middle
happens when a user interacts

00:29:54.456 --> 00:29:55.596 A:middle
with the UI element on the

00:29:55.596 --> 00:29:56.026 A:middle
screen.

00:29:56.456 --> 00:29:58.186 A:middle
So for this example, let's focus

00:29:58.186 --> 00:29:59.796 A:middle
on the doxylamine medication on

00:29:59.796 --> 00:30:00.696 A:middle
the top-left corner.

00:29:59.796 --> 00:30:00.696 A:middle
the top-left corner.

00:30:01.726 --> 00:30:03.186 A:middle
When the user taps on this

00:30:03.226 --> 00:30:05.356 A:middle
button, an event is propagated

00:30:05.446 --> 00:30:06.286 A:middle
to the synchronizer.

00:30:07.396 --> 00:30:09.016 A:middle
The synchronizer then forwards

00:30:09.016 --> 00:30:10.106 A:middle
the information to the

00:30:10.106 --> 00:30:11.206 A:middle
underlying data store.

00:30:11.936 --> 00:30:13.526 A:middle
And once the database

00:30:13.706 --> 00:30:15.916 A:middle
acknowledges successful receipt

00:30:16.746 --> 00:30:19.716 A:middle
of this object, the synchronizer

00:30:20.036 --> 00:30:21.146 A:middle
takes up the role of a

00:30:21.146 --> 00:30:21.566 A:middle
publisher.

00:30:22.296 --> 00:30:24.196 A:middle
And it propagates the stream to

00:30:24.196 --> 00:30:25.776 A:middle
all the UI elements that are

00:30:25.776 --> 00:30:27.886 A:middle
subscribed to that particular

00:30:27.996 --> 00:30:28.516 A:middle
stream.

00:30:28.976 --> 00:30:30.606 A:middle
And in this example, there are

00:30:30.606 --> 00:30:31.976 A:middle
only three cards that are

00:30:32.056 --> 00:30:34.126 A:middle
subscribed to updates from the

00:30:34.126 --> 00:30:35.066 A:middle
medication task.

00:30:36.026 --> 00:30:37.276 A:middle
And once the stream reaches

00:30:37.326 --> 00:30:38.576 A:middle
them, they will be able to

00:30:38.616 --> 00:30:39.976 A:middle
independently update themselves.

00:30:41.796 --> 00:30:44.576 A:middle
This is really exciting because

00:30:44.576 --> 00:30:46.516 A:middle
the UI views are acting

00:30:46.556 --> 00:30:48.116 A:middle
independently of each other.

00:30:48.336 --> 00:30:50.136 A:middle
And they're also updating in an

00:30:50.176 --> 00:30:51.996 A:middle
asynchronous manner, which can

00:30:51.996 --> 00:30:53.236 A:middle
lead to some really powerful

00:30:53.236 --> 00:30:54.976 A:middle
experiences in your care app.

00:30:58.256 --> 00:30:59.916 A:middle
Now, let's take a look at how

00:30:59.916 --> 00:31:01.976 A:middle
you can incorporate CareKit in

00:30:59.916 --> 00:31:01.976 A:middle
you can incorporate CareKit in

00:31:01.976 --> 00:31:04.086 A:middle
your app end-to-end in code.

00:31:04.866 --> 00:31:06.336 A:middle
So the first thing you do is you

00:31:06.336 --> 00:31:07.246 A:middle
import CareKit.

00:31:07.246 --> 00:31:09.366 A:middle
And doing so will automatically

00:31:09.366 --> 00:31:11.166 A:middle
import the CareKit UI and

00:31:11.166 --> 00:31:12.306 A:middle
CareKit Store frameworks.

00:31:13.486 --> 00:31:15.106 A:middle
Next, as always, you create an

00:31:15.106 --> 00:31:16.636 A:middle
instance of OKCStore.

00:31:17.096 --> 00:31:19.906 A:middle
And then you go on to create an

00:31:19.906 --> 00:31:20.576 A:middle
instance of

00:31:20.576 --> 00:31:23.106 A:middle
OCKSynchronizedStoreManager and

00:31:23.166 --> 00:31:24.056 A:middle
pass it the store.

00:31:24.546 --> 00:31:26.026 A:middle
This will allow the synchronizer

00:31:26.056 --> 00:31:27.526 A:middle
to wrap itself around the

00:31:27.526 --> 00:31:28.146 A:middle
database.

00:31:29.586 --> 00:31:31.596 A:middle
And finally, you can choose to

00:31:31.596 --> 00:31:33.556 A:middle
use one of our prepackaged

00:31:33.826 --> 00:31:35.176 A:middle
standalone view controllers.

00:31:35.786 --> 00:31:36.986 A:middle
In this example, we are

00:31:37.176 --> 00:31:39.496 A:middle
showcasing the OCKTaskListView

00:31:39.496 --> 00:31:41.296 A:middle
controller and it accepts the

00:31:41.296 --> 00:31:43.026 A:middle
storeManager assets parameter.

00:31:44.316 --> 00:31:46.146 A:middle
Doing this will essentially

00:31:46.396 --> 00:31:48.146 A:middle
establish pipelines all the way

00:31:48.146 --> 00:31:49.156 A:middle
from the UI layer to the

00:31:49.156 --> 00:31:50.916 A:middle
underlying database, and all you

00:31:50.916 --> 00:31:52.366 A:middle
have to do after that is present

00:31:52.366 --> 00:31:53.706 A:middle
the view controller, and

00:31:53.706 --> 00:31:55.006 A:middle
depending on what data you

00:31:55.006 --> 00:31:56.456 A:middle
provide to the store, you'll be

00:31:56.456 --> 00:31:57.776 A:middle
able to see a UI that looks

00:31:57.776 --> 00:31:58.546 A:middle
somewhat like this.

00:32:00.006 --> 00:32:01.796 A:middle
And similarly, you can also

00:32:01.796 --> 00:32:03.226 A:middle
leverage some of our other

00:32:03.306 --> 00:32:05.166 A:middle
prepackaged view controllers to

00:32:05.166 --> 00:32:07.756 A:middle
build out views for trends and

00:32:07.756 --> 00:32:08.316 A:middle
contacts.

00:32:09.366 --> 00:32:11.056 A:middle
So as you can see here, CareKit

00:32:11.746 --> 00:32:14.586 A:middle
2.0 makes it really easy to use

00:32:14.866 --> 00:32:15.536 A:middle
the framework.

00:32:16.616 --> 00:32:19.306 A:middle
But that's not all it's all

00:32:19.306 --> 00:32:19.656 A:middle
about.

00:32:20.216 --> 00:32:22.406 A:middle
So, right now, I want to call

00:32:22.406 --> 00:32:24.536 A:middle
Erik onstage for a demo where we

00:32:24.536 --> 00:32:26.246 A:middle
will showcase how you can build

00:32:26.526 --> 00:32:28.846 A:middle
a custom care app using CareKit

00:32:28.846 --> 00:32:29.316 A:middle
2.0.

00:32:30.516 --> 00:32:32.786 A:middle
[ Cheering and Applause ]

00:32:33.286 --> 00:32:33.976 A:middle
&gt;&gt; All right.

00:32:34.016 --> 00:32:35.436 A:middle
[ Cheering and Applause ]

00:32:35.436 --> 00:32:37.436 A:middle
Great. Thank you, Srinath.

00:32:38.586 --> 00:32:39.526 A:middle
Good afternoon, everybody.

00:32:39.526 --> 00:32:40.256 A:middle
My name is Erik.

00:32:40.726 --> 00:32:41.986 A:middle
I'm an engineer on the CareKit

00:32:42.036 --> 00:32:42.276 A:middle
team.

00:32:42.816 --> 00:32:44.006 A:middle
And today I have the privilege

00:32:44.006 --> 00:32:45.026 A:middle
of walking y'all through a

00:32:45.026 --> 00:32:46.606 A:middle
sample app that's going to

00:32:46.606 --> 00:32:47.606 A:middle
demonstrate some of the amazing

00:32:47.606 --> 00:32:49.436 A:middle
new features and capabilities of

00:32:49.436 --> 00:32:51.296 A:middle
CareKit 2.0.

00:32:51.296 --> 00:32:52.006 A:middle
The app that we're going to

00:32:52.006 --> 00:32:53.926 A:middle
build to that -- together today

00:32:53.926 --> 00:32:55.496 A:middle
is going to be built completely

00:32:55.526 --> 00:32:56.186 A:middle
from scratch.

00:32:56.516 --> 00:32:57.406 A:middle
And it's going to be for an

00:32:57.406 --> 00:33:00.356 A:middle
imaginary patient, an expecting

00:32:57.406 --> 00:33:00.356 A:middle
imaginary patient, an expecting

00:33:00.356 --> 00:33:01.746 A:middle
mother who is experiencing

00:33:01.886 --> 00:33:03.656 A:middle
severe symptoms of morning

00:33:03.656 --> 00:33:05.126 A:middle
sickness, namely nausea.

00:33:05.646 --> 00:33:06.426 A:middle
So the app that we're going to

00:33:06.426 --> 00:33:07.776 A:middle
make for her is going to allow

00:33:07.776 --> 00:33:08.956 A:middle
her to track her medications.

00:33:08.956 --> 00:33:11.316 A:middle
It's going to allow her to leave

00:33:11.316 --> 00:33:13.136 A:middle
a log when she feels nauseous.

00:33:13.956 --> 00:33:14.756 A:middle
And we're going to display

00:33:14.756 --> 00:33:16.346 A:middle
charts to her that allow her to

00:33:16.346 --> 00:33:18.006 A:middle
understand the correlation

00:33:18.416 --> 00:33:19.736 A:middle
between her adherence and her

00:33:19.736 --> 00:33:20.256 A:middle
symptoms.

00:33:20.976 --> 00:33:22.166 A:middle
Finally, we're going to give her

00:33:22.546 --> 00:33:24.806 A:middle
quick access to her contacts so

00:33:24.806 --> 00:33:26.076 A:middle
that she can get directions to

00:33:26.076 --> 00:33:27.576 A:middle
the office or make a call to her

00:33:27.576 --> 00:33:28.916 A:middle
doctor if she has an emergency.

00:33:29.506 --> 00:33:31.726 A:middle
Now, when we make a CareKit app,

00:33:32.216 --> 00:33:33.946 A:middle
there's two major steps that we

00:33:33.946 --> 00:33:34.636 A:middle
have to walk through.

00:33:35.146 --> 00:33:36.306 A:middle
The first is that we need to

00:33:36.306 --> 00:33:37.116 A:middle
create the Store.

00:33:37.206 --> 00:33:38.466 A:middle
And we need to populate it with

00:33:38.466 --> 00:33:38.636 A:middle
data.

00:33:38.636 --> 00:33:39.706 A:middle
So that's going to be the first

00:33:39.706 --> 00:33:40.276 A:middle
thing we tackle.

00:33:40.276 --> 00:33:42.176 A:middle
And then after that, we need to

00:33:42.266 --> 00:33:44.226 A:middle
create the UI and tell CareKit

00:33:44.366 --> 00:33:45.426 A:middle
how we want the data to be

00:33:45.426 --> 00:33:45.836 A:middle
displayed.

00:33:46.146 --> 00:33:47.056 A:middle
So we're going to hit that in

00:33:47.056 --> 00:33:47.716 A:middle
the second half.

00:33:48.766 --> 00:33:49.386 A:middle
Let's jump in.

00:33:51.466 --> 00:33:51.646 A:middle
Whoops.

00:33:57.476 --> 00:33:58.686 A:middle
All right.

00:33:59.396 --> 00:34:00.656 A:middle
So you can see here, we've got

00:33:59.396 --> 00:34:00.656 A:middle
So you can see here, we've got

00:34:00.656 --> 00:34:01.216 A:middle
an empty app.

00:34:01.216 --> 00:34:02.206 A:middle
This is going to be our starting

00:34:02.206 --> 00:34:02.476 A:middle
point.

00:34:03.256 --> 00:34:04.376 A:middle
Now when you're using CareKit,

00:34:04.816 --> 00:34:05.846 A:middle
the first thing you need to do

00:34:05.846 --> 00:34:06.436 A:middle
is import it.

00:34:06.546 --> 00:34:08.275 A:middle
If you don't do this, you're not

00:34:08.275 --> 00:34:10.076 A:middle
going to get far.

00:34:10.076 --> 00:34:10.315 A:middle
[Chuckles]

00:34:10.315 --> 00:34:11.656 A:middle
Once it's imported, the next

00:34:11.656 --> 00:34:12.746 A:middle
thing we need to do is create

00:34:12.746 --> 00:34:13.206 A:middle
the Store.

00:34:13.346 --> 00:34:14.606 A:middle
More precisely, the

00:34:14.606 --> 00:34:16.275 A:middle
SynchronizedStoreManager that's

00:34:16.275 --> 00:34:17.585 A:middle
going to perform synchronization

00:34:17.636 --> 00:34:17.916 A:middle
for us.

00:34:18.726 --> 00:34:20.505 A:middle
Now when we do this, we're going

00:34:20.505 --> 00:34:22.016 A:middle
to start off by creating the

00:34:22.056 --> 00:34:22.335 A:middle
OCKStore.

00:34:23.016 --> 00:34:23.866 A:middle
And then we're going to pass

00:34:23.916 --> 00:34:24.926 A:middle
that into the

00:34:24.926 --> 00:34:26.106 A:middle
SynchronizedStoreManager.

00:34:27.065 --> 00:34:27.896 A:middle
I want to pause here for a

00:34:27.896 --> 00:34:28.946 A:middle
second and highlight something

00:34:28.946 --> 00:34:30.146 A:middle
really important about CareKit

00:34:30.206 --> 00:34:30.676 A:middle
2.0.

00:34:32.036 --> 00:34:33.446 A:middle
Here, we're using the OCKStore,

00:34:33.446 --> 00:34:34.476 A:middle
which is our wrapper on top of

00:34:34.516 --> 00:34:34.966 A:middle
Core Data.

00:34:35.366 --> 00:34:36.966 A:middle
But the

00:34:36.966 --> 00:34:38.676 A:middle
OCKSynchronizedStoreManager can

00:34:38.676 --> 00:34:40.886 A:middle
interface with any object that

00:34:40.886 --> 00:34:42.286 A:middle
implements our OCKStore

00:34:42.286 --> 00:34:42.795 A:middle
protocol.

00:34:43.525 --> 00:34:44.766 A:middle
That means it would be possible

00:34:44.766 --> 00:34:47.386 A:middle
for you to wrap a web server, a

00:34:47.386 --> 00:34:49.456 A:middle
third-party database, or even a

00:34:49.505 --> 00:34:51.406 A:middle
simple JSON file, and use that

00:34:51.406 --> 00:34:52.126 A:middle
as your database.

00:34:52.126 --> 00:34:55.016 A:middle
For our purposes today, we're

00:34:55.016 --> 00:34:56.255 A:middle
going to stick with Core Data.

00:34:57.666 --> 00:34:58.856 A:middle
The next thing we need to do is

00:34:58.896 --> 00:35:00.136 A:middle
populate some data in the Store.

00:34:58.896 --> 00:35:00.136 A:middle
populate some data in the Store.

00:35:00.136 --> 00:35:00.956 A:middle
So we're just going to write a

00:35:00.956 --> 00:35:02.256 A:middle
handy extension to take care of

00:35:02.256 --> 00:35:02.726 A:middle
that for us.

00:35:03.586 --> 00:35:04.716 A:middle
In a real situation, you may

00:35:04.716 --> 00:35:05.986 A:middle
pull it down from a web server

00:35:05.986 --> 00:35:06.876 A:middle
or load it in from your app

00:35:06.936 --> 00:35:07.246 A:middle
bundle.

00:35:07.786 --> 00:35:08.676 A:middle
But today, we're just going to

00:35:08.676 --> 00:35:09.446 A:middle
code it up right in here.

00:35:09.446 --> 00:35:12.266 A:middle
Now we're going to create two

00:35:12.266 --> 00:35:13.886 A:middle
tasks, one to take a medication

00:35:14.156 --> 00:35:15.936 A:middle
and one to check -- or one to

00:35:15.936 --> 00:35:16.656 A:middle
log when you're feeling

00:35:16.656 --> 00:35:16.986 A:middle
nauseous.

00:35:17.816 --> 00:35:18.766 A:middle
So to do that, we're going to

00:35:18.766 --> 00:35:19.596 A:middle
need to create a schedule.

00:35:23.086 --> 00:35:23.916 A:middle
We're creating a couple of

00:35:23.916 --> 00:35:24.036 A:middle
dates.

00:35:24.036 --> 00:35:24.586 A:middle
Don't worry too much about

00:35:24.586 --> 00:35:24.786 A:middle
these.

00:35:24.786 --> 00:35:26.166 A:middle
The important part is down here

00:35:26.166 --> 00:35:26.776 A:middle
where we're creating the

00:35:26.776 --> 00:35:27.176 A:middle
schedule.

00:35:27.246 --> 00:35:28.706 A:middle
And we create that schedule by

00:35:28.706 --> 00:35:29.656 A:middle
composing elements.

00:35:30.416 --> 00:35:31.556 A:middle
We've got a breakfast element

00:35:31.616 --> 00:35:32.716 A:middle
that repeats every day.

00:35:32.896 --> 00:35:33.686 A:middle
So every day, we're going to

00:35:33.686 --> 00:35:35.096 A:middle
take our medication at

00:35:35.096 --> 00:35:35.476 A:middle
breakfast.

00:35:35.876 --> 00:35:37.296 A:middle
Another one every day at lunch.

00:35:37.696 --> 00:35:39.176 A:middle
And a third one every other day

00:35:39.176 --> 00:35:39.446 A:middle
at dinner.

00:35:40.006 --> 00:35:41.136 A:middle
You probably wouldn't actually

00:35:41.136 --> 00:35:42.516 A:middle
schedule medication like this.

00:35:42.956 --> 00:35:44.336 A:middle
But CareKit lets us make some

00:35:44.336 --> 00:35:45.556 A:middle
really flexible scheduling.

00:35:45.556 --> 00:35:46.456 A:middle
And we just wanted to show that

00:35:46.456 --> 00:35:47.686 A:middle
off a little bit.

00:35:48.416 --> 00:35:50.356 A:middle
With the schedule in hand, we

00:35:50.356 --> 00:35:51.466 A:middle
can now create our task.

00:35:52.916 --> 00:35:55.056 A:middle
To do that, we need to specify a

00:35:55.056 --> 00:35:56.046 A:middle
unique identifier.

00:35:56.046 --> 00:35:57.246 A:middle
We're going to use doxylamine.

00:35:57.356 --> 00:35:58.556 A:middle
This is a common medication

00:35:58.556 --> 00:36:00.086 A:middle
prescribed for nausea.

00:35:58.556 --> 00:36:00.086 A:middle
prescribed for nausea.

00:36:01.506 --> 00:36:02.846 A:middle
And we'll tack on the schedule,

00:36:02.846 --> 00:36:03.376 A:middle
of course.

00:36:03.776 --> 00:36:04.546 A:middle
And we'll provide some

00:36:04.546 --> 00:36:05.486 A:middle
instruction so that our

00:36:05.486 --> 00:36:07.126 A:middle
imaginary patient knows exactly

00:36:07.126 --> 00:36:07.576 A:middle
what to do.

00:36:10.066 --> 00:36:11.326 A:middle
Let's create one more task, this

00:36:11.326 --> 00:36:11.986 A:middle
one for nausea.

00:36:12.576 --> 00:36:13.816 A:middle
So in this case, we're going to

00:36:13.816 --> 00:36:15.236 A:middle
create a more simple schedule.

00:36:15.646 --> 00:36:17.116 A:middle
This schedule is going to run

00:36:17.116 --> 00:36:19.106 A:middle
every day, all day.

00:36:19.106 --> 00:36:20.146 A:middle
Because there is not any

00:36:20.206 --> 00:36:21.636 A:middle
particular time that you might

00:36:21.696 --> 00:36:22.686 A:middle
feel nauseous, we want you to be

00:36:22.686 --> 00:36:25.406 A:middle
able to log any time.

00:36:25.566 --> 00:36:26.706 A:middle
Finally, we'll create the task

00:36:26.746 --> 00:36:28.036 A:middle
for it very much the same way as

00:36:28.036 --> 00:36:28.636 A:middle
we did before.

00:36:29.206 --> 00:36:30.456 A:middle
The key difference here is that

00:36:30.456 --> 00:36:32.466 A:middle
we're saying that this task's

00:36:32.586 --> 00:36:34.046 A:middle
impact adherence property is

00:36:34.116 --> 00:36:34.486 A:middle
false.

00:36:35.406 --> 00:36:36.606 A:middle
You'll note at the top of most

00:36:36.606 --> 00:36:38.866 A:middle
CareKit apps, you'll see a bunch

00:36:38.866 --> 00:36:40.126 A:middle
of -- like a weekly calendar

00:36:40.176 --> 00:36:41.256 A:middle
with some completion rings in

00:36:41.256 --> 00:36:41.346 A:middle
it.

00:36:42.416 --> 00:36:43.846 A:middle
By setting this flag false,

00:36:43.926 --> 00:36:46.296 A:middle
we'll exclude this nausea task

00:36:46.686 --> 00:36:49.026 A:middle
from impacting those completion

00:36:49.616 --> 00:36:49.766 A:middle
rings.

00:36:52.276 --> 00:36:53.366 A:middle
Now that we have our two task

00:36:53.366 --> 00:36:54.436 A:middle
objects, we need to add them

00:36:54.436 --> 00:36:55.046 A:middle
into the Store.

00:36:55.946 --> 00:36:56.706 A:middle
Pretty straightforward.

00:36:57.436 --> 00:36:58.626 A:middle
And we've made it this far.

00:36:58.626 --> 00:37:00.456 A:middle
So we've got our medication

00:36:58.626 --> 00:37:00.456 A:middle
So we've got our medication

00:37:00.456 --> 00:37:01.436 A:middle
task, and we've got our nausea

00:37:01.436 --> 00:37:01.786 A:middle
task.

00:37:02.286 --> 00:37:03.466 A:middle
We also want to add in a couple

00:37:03.496 --> 00:37:05.056 A:middle
of contacts so that our patient

00:37:05.056 --> 00:37:05.996 A:middle
has somebody that they can

00:37:05.996 --> 00:37:09.606 A:middle
contact if they need help.

00:37:09.796 --> 00:37:11.146 A:middle
Contacts are created very much

00:37:11.146 --> 00:37:12.256 A:middle
the same way as other CareKit

00:37:12.256 --> 00:37:12.516 A:middle
entities.

00:37:12.516 --> 00:37:14.066 A:middle
You have to give them a unique

00:37:14.066 --> 00:37:14.596 A:middle
identifier.

00:37:14.956 --> 00:37:16.066 A:middle
And you can set a number of

00:37:16.066 --> 00:37:16.746 A:middle
properties on them.

00:37:16.866 --> 00:37:18.326 A:middle
In this case, we'll set an

00:37:18.326 --> 00:37:20.446 A:middle
image, a title, and a role.

00:37:20.446 --> 00:37:23.036 A:middle
And then we can also provide

00:37:24.436 --> 00:37:26.046 A:middle
contact information for them.

00:37:26.946 --> 00:37:27.906 A:middle
Here, we'll give them an email

00:37:27.906 --> 00:37:30.546 A:middle
address, a phone number, and a

00:37:32.076 --> 00:37:32.236 A:middle
message.

00:37:32.376 --> 00:37:33.486 A:middle
Finally, we're going to tack on

00:37:33.486 --> 00:37:33.956 A:middle
an address.

00:37:34.096 --> 00:37:35.536 A:middle
And this address will allow our

00:37:35.586 --> 00:37:37.566 A:middle
patient to get directions from

00:37:37.566 --> 00:37:38.626 A:middle
Maps if they need to get into

00:37:38.626 --> 00:37:39.016 A:middle
the office.

00:37:40.066 --> 00:37:43.296 A:middle
We'll add one more contact, very

00:37:43.296 --> 00:37:44.586 A:middle
much the same way as the first.

00:37:45.726 --> 00:37:47.416 A:middle
Finally, we're going to add both

00:37:47.476 --> 00:37:50.596 A:middle
contacts into the Store.

00:37:51.526 --> 00:37:53.266 A:middle
All right, so we've got our two

00:37:53.266 --> 00:37:54.056 A:middle
tasks in the Store.

00:37:54.056 --> 00:37:55.216 A:middle
We've got our two contacts in

00:37:55.216 --> 00:37:55.596 A:middle
the Store.

00:37:56.346 --> 00:37:57.836 A:middle
That brings us to the end of the

00:37:57.836 --> 00:37:58.496 A:middle
first step.

00:37:58.726 --> 00:37:59.696 A:middle
We've made it through creating a

00:37:59.696 --> 00:37:59.976 A:middle
Store.

00:37:59.976 --> 00:38:01.066 A:middle
And we've made it through adding

00:37:59.976 --> 00:38:01.066 A:middle
And we've made it through adding

00:38:01.326 --> 00:38:02.296 A:middle
our data into the Store.

00:38:02.896 --> 00:38:04.996 A:middle
That means the second step is to

00:38:04.996 --> 00:38:05.886 A:middle
generate the UI.

00:38:05.886 --> 00:38:07.796 A:middle
We have to write the code to

00:38:07.796 --> 00:38:09.126 A:middle
tell CareKit how we would like

00:38:09.166 --> 00:38:09.786 A:middle
this displayed.

00:38:10.326 --> 00:38:12.116 A:middle
And the way that we're going to

00:38:12.116 --> 00:38:13.926 A:middle
do that is to write a

00:38:13.926 --> 00:38:14.546 A:middle
ViewController.

00:38:15.146 --> 00:38:17.816 A:middle
So here, we're creating our

00:38:17.916 --> 00:38:18.776 A:middle
careViewController.

00:38:18.846 --> 00:38:19.676 A:middle
We're going to go into this in

00:38:19.676 --> 00:38:20.286 A:middle
just a second.

00:38:20.706 --> 00:38:21.746 A:middle
But you'll note that I'm passing

00:38:21.746 --> 00:38:22.596 A:middle
in the storeManager.

00:38:22.596 --> 00:38:24.106 A:middle
This is going to be used for

00:38:24.106 --> 00:38:24.916 A:middle
synchronization.

00:38:26.456 --> 00:38:27.806 A:middle
Finally, we'll set this

00:38:28.166 --> 00:38:29.516 A:middle
ViewController as our root view,

00:38:29.516 --> 00:38:30.526 A:middle
so that when we run the app,

00:38:31.326 --> 00:38:31.996 A:middle
this is where we're going to

00:38:31.996 --> 00:38:32.216 A:middle
start.

00:38:32.966 --> 00:38:34.606 A:middle
Let's jump in here and see what

00:38:34.606 --> 00:38:35.606 A:middle
we have.

00:38:36.476 --> 00:38:37.916 A:middle
This is presently an empty

00:38:37.916 --> 00:38:38.226 A:middle
class.

00:38:38.676 --> 00:38:40.836 A:middle
You can see that inherits from

00:38:40.836 --> 00:38:42.516 A:middle
OCKDailyPageViewController.

00:38:43.106 --> 00:38:44.106 A:middle
If you're creating a CareKit

00:38:44.106 --> 00:38:45.726 A:middle
app, and you want some serious

00:38:45.786 --> 00:38:46.866 A:middle
customization power,

00:38:47.496 --> 00:38:49.536 A:middle
OCKDailyPageViewController is a

00:38:49.656 --> 00:38:51.066 A:middle
really good starting point.

00:38:52.026 --> 00:38:52.896 A:middle
When you inherit from this

00:38:52.946 --> 00:38:53.976 A:middle
class, what you're going to get

00:38:55.336 --> 00:38:56.916 A:middle
is a viewController that has the

00:38:56.916 --> 00:38:58.386 A:middle
calendar up at the top with the

00:38:58.386 --> 00:38:59.216 A:middle
completion rings in it.

00:38:59.216 --> 00:39:00.946 A:middle
And the user will be able to

00:38:59.216 --> 00:39:00.946 A:middle
And the user will be able to

00:39:00.946 --> 00:39:02.396 A:middle
page through that and select the

00:39:02.396 --> 00:39:03.056 A:middle
date that they like.

00:39:03.456 --> 00:39:04.916 A:middle
And down below that, you'll have

00:39:04.916 --> 00:39:06.306 A:middle
a second pageViewController.

00:39:06.896 --> 00:39:09.096 A:middle
And each time, the user changes

00:39:09.136 --> 00:39:10.676 A:middle
the date either by swiping or

00:39:10.676 --> 00:39:12.076 A:middle
tapping, you're going to get a

00:39:12.076 --> 00:39:12.330 A:middle
callback.

00:39:14.216 --> 00:39:15.846 A:middle
This callback, as a matter of

00:39:16.526 --> 00:39:16.736 A:middle
fact.

00:39:16.736 --> 00:39:18.286 A:middle
And inside of this function,

00:39:18.956 --> 00:39:20.286 A:middle
you're going to receive these

00:39:20.346 --> 00:39:21.126 A:middle
two parameters, a

00:39:21.126 --> 00:39:22.906 A:middle
listViewController and the date.

00:39:23.746 --> 00:39:24.906 A:middle
The date is the date that the

00:39:24.906 --> 00:39:26.086 A:middle
user has just selected.

00:39:26.426 --> 00:39:28.776 A:middle
And the listViewController is an

00:39:28.856 --> 00:39:29.936 A:middle
empty page of content.

00:39:29.936 --> 00:39:32.076 A:middle
And as the developer, your job

00:39:32.076 --> 00:39:33.766 A:middle
is to fill in the content that

00:39:33.766 --> 00:39:34.986 A:middle
you'd like the user to see for

00:39:34.986 --> 00:39:35.816 A:middle
the date they selected.

00:39:35.816 --> 00:39:37.566 A:middle
And doing that is very

00:39:37.566 --> 00:39:37.966 A:middle
straightforward.

00:39:41.056 --> 00:39:42.776 A:middle
Here, we're creating an

00:39:43.106 --> 00:39:44.766 A:middle
OCKChecklistTaskViewController.

00:39:45.366 --> 00:39:47.436 A:middle
And we can append that onto the

00:39:47.436 --> 00:39:48.176 A:middle
listViewController.

00:39:48.176 --> 00:39:49.126 A:middle
That will add it into the

00:39:49.126 --> 00:39:50.366 A:middle
content for the selected day.

00:39:51.596 --> 00:39:52.856 A:middle
So let's take a quick look at

00:39:52.856 --> 00:39:54.356 A:middle
this class, the

00:39:54.406 --> 00:39:56.136 A:middle
OCKChecklistTaskViewController.

00:39:56.656 --> 00:39:57.756 A:middle
Now you'll note from Srinath's

00:39:57.796 --> 00:39:59.406 A:middle
just -- talk just a moment ago

00:39:59.406 --> 00:40:01.616 A:middle
that there's CareKit UI and

00:39:59.406 --> 00:40:01.616 A:middle
that there's CareKit UI and

00:40:01.616 --> 00:40:02.106 A:middle
CareKit.

00:40:02.486 --> 00:40:03.856 A:middle
And in CareKit UI, we had the

00:40:03.896 --> 00:40:05.396 A:middle
tasks views.

00:40:05.986 --> 00:40:07.026 A:middle
And there were four or five of

00:40:07.026 --> 00:40:07.116 A:middle
them.

00:40:07.526 --> 00:40:09.476 A:middle
Well, in CareKit, there's

00:40:09.536 --> 00:40:09.966 A:middle
parity.

00:40:10.396 --> 00:40:11.316 A:middle
And there's a matching view

00:40:11.316 --> 00:40:12.446 A:middle
controller for each of those.

00:40:13.426 --> 00:40:15.246 A:middle
The key difference is that the

00:40:15.246 --> 00:40:17.626 A:middle
views in CareKit UI are naive

00:40:18.056 --> 00:40:19.616 A:middle
and not synchronized, whereas

00:40:19.616 --> 00:40:21.256 A:middle
the view controllers in CareKit

00:40:21.706 --> 00:40:23.046 A:middle
will update automatically.

00:40:24.186 --> 00:40:25.296 A:middle
When we instantiate this, we

00:40:25.296 --> 00:40:26.326 A:middle
need to pass it the Store.

00:40:26.636 --> 00:40:27.506 A:middle
And we need to tell it which

00:40:27.506 --> 00:40:28.746 A:middle
task we'd like it to display the

00:40:28.746 --> 00:40:28.976 A:middle
data for.

00:40:30.116 --> 00:40:31.076 A:middle
Finally, we give it an event

00:40:31.126 --> 00:40:32.396 A:middle
query that specifies that it

00:40:32.396 --> 00:40:33.486 A:middle
should only show the events for

00:40:33.486 --> 00:40:33.776 A:middle
today.

00:40:35.296 --> 00:40:36.516 A:middle
So this is our medication card.

00:40:36.516 --> 00:40:38.996 A:middle
It's going to ask the patient to

00:40:38.996 --> 00:40:40.236 A:middle
take their doxylamine.

00:40:41.016 --> 00:40:41.866 A:middle
We'll add one more.

00:40:43.146 --> 00:40:44.706 A:middle
SimpleLogTaskViewController

00:40:44.736 --> 00:40:46.036 A:middle
takes the exact same arguments.

00:40:46.146 --> 00:40:47.356 A:middle
And this one is going to ask the

00:40:47.356 --> 00:40:48.626 A:middle
user to log when they're feeling

00:40:48.626 --> 00:40:48.986 A:middle
nauseous.

00:40:50.356 --> 00:40:51.256 A:middle
We've written a lot of code.

00:40:51.256 --> 00:40:53.316 A:middle
But we're finally ready to run

00:40:53.316 --> 00:40:54.216 A:middle
the app and see what it looks

00:40:54.216 --> 00:40:54.306 A:middle
like.

00:41:00.206 --> 00:41:00.986 A:middle
All right, so we're up and

00:41:00.986 --> 00:41:01.276 A:middle
running.

00:41:01.666 --> 00:41:03.186 A:middle
This is what we have so far.

00:41:03.516 --> 00:41:04.666 A:middle
You can see we've got both of

00:41:04.666 --> 00:41:05.976 A:middle
the tasks that we've added.

00:41:06.876 --> 00:41:08.206 A:middle
The user can swipe through the

00:41:08.206 --> 00:41:09.176 A:middle
dates on the calendar.

00:41:10.736 --> 00:41:11.896 A:middle
They can get back to today like

00:41:11.896 --> 00:41:12.076 A:middle
this.

00:41:13.116 --> 00:41:15.326 A:middle
You'll also note that on some

00:41:15.326 --> 00:41:16.316 A:middle
days, we have two events.

00:41:16.456 --> 00:41:17.526 A:middle
On other days, we have three

00:41:17.526 --> 00:41:17.786 A:middle
events.

00:41:17.956 --> 00:41:18.846 A:middle
That's due to the way that we

00:41:18.846 --> 00:41:19.736 A:middle
scheduled our task.

00:41:20.936 --> 00:41:22.226 A:middle
And when the user checks off a

00:41:22.226 --> 00:41:24.476 A:middle
task, the completion rings fill

00:41:24.476 --> 00:41:25.206 A:middle
up automatically.

00:41:26.166 --> 00:41:28.616 A:middle
This synchronization between the

00:41:28.616 --> 00:41:30.666 A:middle
tasks, the TaskViewController,

00:41:30.916 --> 00:41:32.146 A:middle
and the CalendarViewController

00:41:32.146 --> 00:41:33.996 A:middle
up at the top happens

00:41:33.996 --> 00:41:35.236 A:middle
automatically through the Store

00:41:35.236 --> 00:41:35.796 A:middle
synchronizer.

00:41:36.986 --> 00:41:38.106 A:middle
You'll also note that when we

00:41:38.106 --> 00:41:40.326 A:middle
log nausea events, they don't

00:41:40.326 --> 00:41:41.626 A:middle
show up in the completion ring

00:41:41.906 --> 00:41:43.176 A:middle
because we explicitly marked

00:41:43.226 --> 00:41:45.226 A:middle
those impacts adherence equals

00:41:45.266 --> 00:41:47.266 A:middle
false when we created our task.

00:41:48.496 --> 00:41:50.126 A:middle
Now before we move on, I want to

00:41:50.126 --> 00:41:52.096 A:middle
hit on two places where we can

00:41:52.096 --> 00:41:53.476 A:middle
really easily customize our

00:41:53.476 --> 00:41:54.006 A:middle
CareKit app.

00:41:54.246 --> 00:41:55.236 A:middle
And I think you guys will really

00:41:55.236 --> 00:41:55.636 A:middle
like these.

00:41:56.926 --> 00:41:59.446 A:middle
The first one, if we have --

00:41:59.626 --> 00:42:01.846 A:middle
hope back to our app delegate is

00:41:59.626 --> 00:42:01.846 A:middle
hope back to our app delegate is

00:42:03.396 --> 00:42:05.156 A:middle
that we can set a tint color on

00:42:05.156 --> 00:42:05.556 A:middle
the window.

00:42:06.196 --> 00:42:07.166 A:middle
And this tint color will

00:42:07.166 --> 00:42:08.316 A:middle
propagate down through our

00:42:08.316 --> 00:42:08.976 A:middle
entire app.

00:42:09.326 --> 00:42:10.546 A:middle
And it's a really easy way to

00:42:10.546 --> 00:42:11.966 A:middle
apply styling or to brand your

00:42:12.686 --> 00:42:12.766 A:middle
app.

00:42:16.056 --> 00:42:17.626 A:middle
The second one is to switch out

00:42:17.666 --> 00:42:19.456 A:middle
the kind of task view that we're

00:42:19.456 --> 00:42:19.826 A:middle
using.

00:42:20.596 --> 00:42:21.446 A:middle
So you remember that there were

00:42:21.446 --> 00:42:22.516 A:middle
a number of different views for

00:42:22.516 --> 00:42:23.686 A:middle
tasks in CareKit UI.

00:42:24.846 --> 00:42:26.446 A:middle
And we can switch to a different

00:42:26.926 --> 00:42:29.536 A:middle
one simply by switching the

00:42:29.536 --> 00:42:30.476 A:middle
ViewController we're using.

00:42:30.596 --> 00:42:31.356 A:middle
They all have the same

00:42:31.356 --> 00:42:32.026 A:middle
initializers.

00:42:33.876 --> 00:42:35.556 A:middle
We'll rerun our app and take a

00:42:35.556 --> 00:42:36.546 A:middle
look at how this changes it.

00:42:37.576 --> 00:42:37.956 A:middle
Awesome.

00:42:38.276 --> 00:42:39.316 A:middle
So you can see the color is

00:42:39.316 --> 00:42:39.846 A:middle
different now.

00:42:40.196 --> 00:42:42.196 A:middle
And we also have an entirely

00:42:43.216 --> 00:42:45.526 A:middle
different task card to look at.

00:42:46.066 --> 00:42:46.886 A:middle
Now, what's really interesting

00:42:46.886 --> 00:42:49.106 A:middle
about this card is that it shows

00:42:49.106 --> 00:42:49.996 A:middle
the time that the user is

00:42:49.996 --> 00:42:50.766 A:middle
supposed to take their

00:42:50.766 --> 00:42:51.346 A:middle
medication.

00:42:51.876 --> 00:42:53.086 A:middle
But when we check one of these

00:42:53.086 --> 00:42:55.306 A:middle
off, the time that it displays

00:42:56.226 --> 00:42:58.366 A:middle
changes to the moment that the

00:42:58.366 --> 00:42:59.316 A:middle
user tapped the button.

00:42:59.546 --> 00:43:00.806 A:middle
This is really useful because it

00:42:59.546 --> 00:43:00.806 A:middle
This is really useful because it

00:43:00.806 --> 00:43:02.026 A:middle
allows our patient to see the

00:43:02.026 --> 00:43:03.366 A:middle
last time that she's taken her

00:43:03.366 --> 00:43:03.966 A:middle
medication.

00:43:08.096 --> 00:43:08.316 A:middle
All right.

00:43:08.316 --> 00:43:09.486 A:middle
I think we're ready to move on

00:43:09.486 --> 00:43:10.636 A:middle
to creating some charts now.

00:43:11.066 --> 00:43:12.676 A:middle
I think what we'll do is try to

00:43:12.676 --> 00:43:13.796 A:middle
put a chart right in between the

00:43:13.836 --> 00:43:14.696 A:middle
two cards that we have.

00:43:14.766 --> 00:43:15.876 A:middle
Maybe we'll make it a bar chart.

00:43:15.876 --> 00:43:17.526 A:middle
And we'll say that it will show

00:43:18.206 --> 00:43:19.866 A:middle
the number of times our patient

00:43:19.866 --> 00:43:20.796 A:middle
is taking their medication

00:43:20.796 --> 00:43:21.496 A:middle
versus the number of times that

00:43:21.496 --> 00:43:21.976 A:middle
she's felt nauseous.

00:43:25.716 --> 00:43:27.286 A:middle
So we'll drop down right here

00:43:27.286 --> 00:43:28.276 A:middle
between the two cards that we've

00:43:28.336 --> 00:43:28.906 A:middle
created already.

00:43:29.436 --> 00:43:30.096 A:middle
And we're going to need to

00:43:30.096 --> 00:43:33.026 A:middle
create two data series, one for

00:43:33.026 --> 00:43:34.386 A:middle
the medication, and one for the

00:43:34.386 --> 00:43:34.646 A:middle
nausea.

00:43:34.646 --> 00:43:35.346 A:middle
So we're going to start with the

00:43:35.346 --> 00:43:35.806 A:middle
nausea one.

00:43:36.456 --> 00:43:37.656 A:middle
When we create this data series,

00:43:38.326 --> 00:43:38.936 A:middle
we have to give it the

00:43:38.936 --> 00:43:39.586 A:middle
identifier.

00:43:39.586 --> 00:43:40.876 A:middle
This is a task whose data we'd

00:43:40.876 --> 00:43:41.536 A:middle
like to display.

00:43:41.746 --> 00:43:43.066 A:middle
We can give it a legend title, a

00:43:43.066 --> 00:43:44.786 A:middle
pair of colors to plot in, and a

00:43:44.786 --> 00:43:46.206 A:middle
marker size, which in this case

00:43:46.206 --> 00:43:47.216 A:middle
will dictate the width of the

00:43:47.216 --> 00:43:47.736 A:middle
bar chart.

00:43:48.506 --> 00:43:49.616 A:middle
And an event aggregator.

00:43:49.916 --> 00:43:51.716 A:middle
The event aggregator determines

00:43:51.876 --> 00:43:53.066 A:middle
the y-axis value.

00:43:53.266 --> 00:43:54.446 A:middle
And in this case, we're simply

00:43:54.446 --> 00:43:55.826 A:middle
going to count the number of

00:43:55.826 --> 00:43:57.136 A:middle
times that our patient has felt

00:43:57.136 --> 00:43:57.536 A:middle
nauseous.

00:43:58.546 --> 00:43:59.856 A:middle
We'll do this once more, this

00:43:59.856 --> 00:44:01.236 A:middle
time for our medication.

00:43:59.856 --> 00:44:01.236 A:middle
time for our medication.

00:44:02.146 --> 00:44:03.086 A:middle
And it's going to be very much

00:44:03.086 --> 00:44:03.466 A:middle
the same.

00:44:04.776 --> 00:44:06.536 A:middle
With both of these in hand, we

00:44:06.536 --> 00:44:07.246 A:middle
can create an

00:44:07.276 --> 00:44:09.666 A:middle
OCKCartesianChartViewController.

00:44:10.236 --> 00:44:12.356 A:middle
The initializer takes the

00:44:12.356 --> 00:44:13.006 A:middle
storeManager.

00:44:13.006 --> 00:44:14.136 A:middle
Again, this is to provide that

00:44:14.186 --> 00:44:15.296 A:middle
synchronization that makes

00:44:15.346 --> 00:44:16.246 A:middle
CareKit so great.

00:44:16.846 --> 00:44:18.186 A:middle
And we also pass in a data

00:44:18.186 --> 00:44:20.586 A:middle
series, one for each series that

00:44:20.586 --> 00:44:21.406 A:middle
we'd like displayed on the

00:44:21.436 --> 00:44:21.666 A:middle
chart.

00:44:22.626 --> 00:44:23.896 A:middle
We also pass in the date that

00:44:23.896 --> 00:44:25.236 A:middle
we'd like the data displayed for

00:44:25.966 --> 00:44:26.786 A:middle
and the plot type.

00:44:27.066 --> 00:44:27.946 A:middle
Here, we're going to use the bar

00:44:27.946 --> 00:44:28.186 A:middle
chart.

00:44:28.186 --> 00:44:29.726 A:middle
But you could just as easily use

00:44:29.726 --> 00:44:31.146 A:middle
the scatter plot or the line

00:44:31.146 --> 00:44:31.436 A:middle
plot.

00:44:32.656 --> 00:44:33.966 A:middle
Finally, before we run our app

00:44:33.966 --> 00:44:35.546 A:middle
again, we're going to set a

00:44:35.546 --> 00:44:38.146 A:middle
couple of labels so that our

00:44:38.146 --> 00:44:39.946 A:middle
patient can understand the data

00:44:39.946 --> 00:44:40.846 A:middle
that we're displaying to her.

00:44:41.236 --> 00:44:43.246 A:middle
Let's run it one more time and

00:44:43.246 --> 00:44:43.976 A:middle
take a look at our chart.

00:44:47.376 --> 00:44:47.666 A:middle
Awesome.

00:44:47.666 --> 00:44:48.806 A:middle
So you can see down here we've

00:44:48.806 --> 00:44:49.386 A:middle
got our chart.

00:44:49.576 --> 00:44:50.686 A:middle
It's got data shown on it.

00:44:51.076 --> 00:44:52.166 A:middle
But what's really fantastic

00:44:52.166 --> 00:44:53.486 A:middle
about this chart is that it

00:44:53.556 --> 00:44:55.526 A:middle
updates in real time with

00:44:55.596 --> 00:44:57.786 A:middle
beautiful animations as we check

00:44:57.786 --> 00:44:58.236 A:middle
off data.

00:44:59.806 --> 00:45:01.486 A:middle
Perhaps on the first day, our

00:44:59.806 --> 00:45:01.486 A:middle
Perhaps on the first day, our

00:45:01.486 --> 00:45:03.046 A:middle
user didn't take her medication.

00:45:04.276 --> 00:45:05.376 A:middle
And she felt really sick.

00:45:06.456 --> 00:45:08.796 A:middle
On the second day, she started

00:45:08.796 --> 00:45:09.246 A:middle
to take it.

00:45:09.886 --> 00:45:12.986 A:middle
So she felt a little bit better.

00:45:13.186 --> 00:45:15.556 A:middle
And on the third day, she took

00:45:15.556 --> 00:45:16.496 A:middle
all of her medication.

00:45:16.496 --> 00:45:18.226 A:middle
And today, she also took all of

00:45:18.226 --> 00:45:19.276 A:middle
it and doesn't feel sick at all.

00:45:20.216 --> 00:45:21.146 A:middle
So you can see we're already

00:45:21.146 --> 00:45:22.196 A:middle
getting a pretty good patient

00:45:22.196 --> 00:45:22.736 A:middle
experience.

00:45:22.786 --> 00:45:24.256 A:middle
But there's another feature that

00:45:24.256 --> 00:45:25.686 A:middle
we can take advantage of that I

00:45:25.686 --> 00:45:26.726 A:middle
think you guys will really like.

00:45:27.736 --> 00:45:29.176 A:middle
CareKit now has the ability to

00:45:29.176 --> 00:45:31.906 A:middle
add arbitrary content anywhere

00:45:31.906 --> 00:45:33.036 A:middle
in this listViewController.

00:45:33.036 --> 00:45:33.846 A:middle
Let me show you how we can do

00:45:33.846 --> 00:45:33.976 A:middle
that.

00:45:37.046 --> 00:45:38.316 A:middle
So up at the very top, I think

00:45:38.316 --> 00:45:39.316 A:middle
we'd like to add a banner.

00:45:40.746 --> 00:45:41.636 A:middle
And we're going to do that by

00:45:41.636 --> 00:45:42.646 A:middle
creating this tipView.

00:45:42.646 --> 00:45:45.556 A:middle
We'll set some text on the

00:45:45.556 --> 00:45:46.056 A:middle
tipView.

00:45:46.056 --> 00:45:47.256 A:middle
And we'll also attach an image

00:45:47.256 --> 00:45:47.566 A:middle
to it.

00:45:48.246 --> 00:45:49.546 A:middle
But what's really important here

00:45:50.116 --> 00:45:52.336 A:middle
is that we simply append it as a

00:45:52.336 --> 00:45:52.606 A:middle
view.

00:45:53.756 --> 00:45:55.386 A:middle
Now what I want you to note is

00:45:55.386 --> 00:45:57.236 A:middle
that this tipView is not part of

00:45:57.286 --> 00:45:57.716 A:middle
CareKit.

00:45:58.276 --> 00:46:01.416 A:middle
We created it just for this

00:45:58.276 --> 00:46:01.416 A:middle
We created it just for this

00:46:01.416 --> 00:46:01.706 A:middle
demo.

00:46:02.026 --> 00:46:03.676 A:middle
And it could just as easily be a

00:46:03.676 --> 00:46:04.836 A:middle
view that came from your

00:46:04.836 --> 00:46:05.736 A:middle
application or a third-party

00:46:05.736 --> 00:46:05.976 A:middle
library.

00:46:11.046 --> 00:46:12.466 A:middle
When we run our app now, you'll

00:46:12.466 --> 00:46:13.546 A:middle
see that we get this beautiful

00:46:13.546 --> 00:46:14.676 A:middle
banner up at the top that

00:46:14.676 --> 00:46:16.156 A:middle
encourages our patient to learn

00:46:16.156 --> 00:46:17.236 A:middle
more about the relationship

00:46:17.276 --> 00:46:18.676 A:middle
between exercise and healthy

00:46:18.676 --> 00:46:19.206 A:middle
pregnancy.

00:46:19.206 --> 00:46:21.016 A:middle
[Chuckles]

00:46:21.516 --> 00:46:25.576 A:middle
[ Cheering and Applause ]

00:46:26.076 --> 00:46:27.286 A:middle
You can imagine that there is a

00:46:27.366 --> 00:46:29.276 A:middle
plethora of ways that this could

00:46:29.276 --> 00:46:29.696 A:middle
be used.

00:46:30.086 --> 00:46:31.296 A:middle
You could populate this data

00:46:31.676 --> 00:46:33.476 A:middle
based on what's already in your

00:46:33.476 --> 00:46:34.846 A:middle
patient's Care Plan Store.

00:46:35.156 --> 00:46:36.216 A:middle
You could pull it down from a

00:46:36.216 --> 00:46:36.606 A:middle
server.

00:46:37.016 --> 00:46:38.296 A:middle
Or you could set it based on the

00:46:38.296 --> 00:46:38.606 A:middle
date.

00:46:39.066 --> 00:46:40.176 A:middle
The possibilities are really

00:46:40.176 --> 00:46:40.696 A:middle
endless here.

00:46:41.766 --> 00:46:42.726 A:middle
Now the last thing that I want

00:46:42.726 --> 00:46:44.076 A:middle
to do before we wrap up our demo

00:46:44.526 --> 00:46:46.426 A:middle
is give our user quick access to

00:46:46.506 --> 00:46:47.246 A:middle
her contacts.

00:46:47.606 --> 00:46:48.596 A:middle
And I think what we'll do is

00:46:48.596 --> 00:46:50.096 A:middle
just add a Care Team button up

00:46:50.096 --> 00:46:52.456 A:middle
here that shows a modal

00:46:52.496 --> 00:46:53.656 A:middle
presentation with all her

00:46:53.656 --> 00:46:54.646 A:middle
contacts in it.

00:46:54.646 --> 00:46:56.186 A:middle
And CareKit makes that really

00:46:56.186 --> 00:46:56.376 A:middle
easy.

00:46:57.036 --> 00:46:59.576 A:middle
Up at the top, we're going to

00:46:59.576 --> 00:47:02.366 A:middle
create our UI Bar Button item.

00:46:59.576 --> 00:47:02.366 A:middle
create our UI Bar Button item.

00:47:02.606 --> 00:47:03.926 A:middle
And we're going to set it to

00:47:03.926 --> 00:47:06.276 A:middle
call this function here, in

00:47:06.276 --> 00:47:08.116 A:middle
which we're going to create an

00:47:08.226 --> 00:47:09.286 A:middle
instance of the

00:47:09.286 --> 00:47:10.746 A:middle
OCKContactsListViewController.

00:47:11.286 --> 00:47:12.386 A:middle
This is a really handy class

00:47:12.386 --> 00:47:13.276 A:middle
that we provide for you.

00:47:13.696 --> 00:47:14.866 A:middle
All you need to do is pass it a

00:47:14.866 --> 00:47:15.816 A:middle
Store manager.

00:47:15.816 --> 00:47:17.666 A:middle
And it will automatically query

00:47:17.666 --> 00:47:18.996 A:middle
all the contacts in your Store

00:47:19.096 --> 00:47:19.976 A:middle
and display them for you.

00:47:24.426 --> 00:47:26.386 A:middle
Run our app one last time to see

00:47:26.386 --> 00:47:27.066 A:middle
what it looks like.

00:47:28.296 --> 00:47:28.716 A:middle
There we go.

00:47:28.876 --> 00:47:30.896 A:middle
So we'll tap on this and out

00:47:30.926 --> 00:47:31.726 A:middle
come our contacts.

00:47:32.386 --> 00:47:33.296 A:middle
Now, if our patient needs

00:47:33.346 --> 00:47:34.526 A:middle
directions into the office,

00:47:35.026 --> 00:47:37.416 A:middle
she's just a tap away from Maps.

00:47:38.246 --> 00:47:40.286 A:middle
It looks like it's about 4.9

00:47:40.286 --> 00:47:40.636 A:middle
miles.

00:47:41.916 --> 00:47:42.706 A:middle
That's not too shabby.

00:47:43.196 --> 00:47:43.586 A:middle
All right.

00:47:44.196 --> 00:47:45.516 A:middle
So we've got our contacts in

00:47:45.516 --> 00:47:45.616 A:middle
there.

00:47:45.616 --> 00:47:47.256 A:middle
And our app is looking pretty

00:47:47.256 --> 00:47:47.526 A:middle
good.

00:47:48.256 --> 00:47:49.686 A:middle
I think I'd like to wind down

00:47:49.686 --> 00:47:50.436 A:middle
the demo right here.

00:47:50.436 --> 00:47:51.586 A:middle
Let's call this complete.

00:47:52.366 --> 00:47:53.346 A:middle
But before we go back to

00:47:53.396 --> 00:47:54.576 A:middle
Srinath, I want to just reflect

00:47:54.576 --> 00:47:55.846 A:middle
for a moment on what we've done.

00:47:57.186 --> 00:47:59.046 A:middle
In what accounts for about 15

00:47:59.046 --> 00:48:00.416 A:middle
minutes and more or less 200

00:47:59.046 --> 00:48:00.416 A:middle
minutes and more or less 200

00:48:00.416 --> 00:48:01.806 A:middle
lines of code, we've been able

00:48:01.806 --> 00:48:03.906 A:middle
to complete a beautiful patient

00:48:03.906 --> 00:48:05.616 A:middle
care application with gorgeous

00:48:05.616 --> 00:48:06.256 A:middle
animations.

00:48:07.366 --> 00:48:08.956 A:middle
But what's most important about

00:48:08.956 --> 00:48:10.576 A:middle
this application is that it's

00:48:10.576 --> 00:48:11.836 A:middle
extremely modular.

00:48:12.466 --> 00:48:13.616 A:middle
None of the views know about

00:48:13.616 --> 00:48:14.016 A:middle
each other.

00:48:15.026 --> 00:48:16.156 A:middle
All of the viewControllers are

00:48:16.156 --> 00:48:17.186 A:middle
completely decoupled.

00:48:17.926 --> 00:48:19.296 A:middle
No delegates are set that tie

00:48:19.336 --> 00:48:19.966 A:middle
things together.

00:48:20.626 --> 00:48:22.606 A:middle
This app can be very easily

00:48:22.696 --> 00:48:25.206 A:middle
updated and changed as the needs

00:48:25.206 --> 00:48:26.546 A:middle
of our users evolve.

00:48:27.196 --> 00:48:30.836 A:middle
We think the possibility for

00:48:30.836 --> 00:48:32.386 A:middle
CareKit 2.0 is boundless.

00:48:32.716 --> 00:48:34.676 A:middle
And we are really excited to see

00:48:34.676 --> 00:48:36.236 A:middle
all the amazing things that our

00:48:36.236 --> 00:48:37.336 A:middle
developers are going to do with

00:48:37.336 --> 00:48:37.416 A:middle
it.

00:48:38.816 --> 00:48:39.016 A:middle
All right.

00:48:39.016 --> 00:48:39.756 A:middle
Back to you, Srinath.

00:48:41.516 --> 00:48:46.546 A:middle
[ Cheering and Applause ]

00:48:47.046 --> 00:48:47.856 A:middle
&gt;&gt; Wow, thank you, Erik, for

00:48:47.856 --> 00:48:48.856 A:middle
that great demo.

00:48:48.856 --> 00:48:49.306 A:middle
[Chuckles]

00:48:49.306 --> 00:48:52.836 A:middle
So now to just summarize the

00:48:52.836 --> 00:48:56.426 A:middle
whole session, CareKit is just a

00:48:56.426 --> 00:48:58.006 A:middle
fundamental rewrite and

00:48:58.006 --> 00:48:59.596 A:middle
rearchitecture of the framework.

00:48:59.896 --> 00:49:01.226 A:middle
It still holds on to its core

00:48:59.896 --> 00:49:01.226 A:middle
It still holds on to its core

00:49:01.226 --> 00:49:01.646 A:middle
values.

00:49:01.686 --> 00:49:03.686 A:middle
But now it makes it extremely

00:49:03.686 --> 00:49:06.046 A:middle
powerful to use, to build like

00:49:06.196 --> 00:49:07.456 A:middle
really amazing Care app

00:49:07.456 --> 00:49:09.136 A:middle
experiences for your user.

00:49:09.136 --> 00:49:12.526 A:middle
So we spoke about ResearchKit,

00:49:12.586 --> 00:49:14.386 A:middle
where we talked about UI updates

00:49:14.386 --> 00:49:15.426 A:middle
that we've made throughout the

00:49:15.426 --> 00:49:17.376 A:middle
framework, as well as new

00:49:17.376 --> 00:49:19.366 A:middle
additions to our existing

00:49:19.366 --> 00:49:21.016 A:middle
library of active tasks.

00:49:21.826 --> 00:49:23.696 A:middle
And finally, we also touched

00:49:23.696 --> 00:49:25.286 A:middle
upon all the updates from our

00:49:25.286 --> 00:49:27.796 A:middle
community, including our two key

00:49:27.796 --> 00:49:29.546 A:middle
initiatives -- the investigator

00:49:29.546 --> 00:49:30.596 A:middle
support program, and our

00:49:30.636 --> 00:49:31.766 A:middle
redesigned website that's coming

00:49:31.766 --> 00:49:31.976 A:middle
this fall.

00:49:35.266 --> 00:49:37.056 A:middle
And as always, ResearchKit and

00:49:37.056 --> 00:49:38.706 A:middle
CareKit are Open Source

00:49:38.706 --> 00:49:39.206 A:middle
frameworks.

00:49:39.246 --> 00:49:40.666 A:middle
That's available right now on

00:49:40.666 --> 00:49:40.976 A:middle
GitHub.

00:49:44.336 --> 00:49:45.716 A:middle
Now over the next few months,

00:49:45.856 --> 00:49:47.106 A:middle
we're going to be working really

00:49:47.106 --> 00:49:48.806 A:middle
hard to add a lot more

00:49:48.806 --> 00:49:49.746 A:middle
capabilities to these

00:49:49.786 --> 00:49:50.286 A:middle
frameworks.

00:49:50.746 --> 00:49:52.126 A:middle
We'll be adding support for Dark

00:49:52.126 --> 00:49:52.436 A:middle
Mode.

00:49:52.576 --> 00:49:54.006 A:middle
We'll be adding accessibility,

00:49:54.006 --> 00:49:55.556 A:middle
localization, as well as more

00:49:55.556 --> 00:49:57.106 A:middle
documentation support as well.

00:49:57.766 --> 00:49:59.606 A:middle
And we would highly encourage

00:49:59.656 --> 00:50:00.676 A:middle
all the developers in our

00:49:59.656 --> 00:50:00.676 A:middle
all the developers in our

00:50:00.676 --> 00:50:02.626 A:middle
community to provide us with

00:50:02.726 --> 00:50:05.036 A:middle
feedback as well as contribute

00:50:05.246 --> 00:50:07.166 A:middle
as we continue to evolve and

00:50:07.166 --> 00:50:08.906 A:middle
expand our amazing frameworks.

00:50:10.696 --> 00:50:12.206 A:middle
For more information about the

00:50:12.206 --> 00:50:13.976 A:middle
session, please visit this link.

00:50:14.576 --> 00:50:15.926 A:middle
We are also holding a

00:50:15.926 --> 00:50:17.316 A:middle
ResearchKit and CareKit lab

00:50:17.366 --> 00:50:19.126 A:middle
tomorrow at noon where all of us

00:50:19.126 --> 00:50:20.886 A:middle
will be there to answer any

00:50:20.886 --> 00:50:21.846 A:middle
questions that you have.

00:50:22.446 --> 00:50:25.616 A:middle
And with that, thank you all for

00:50:25.616 --> 00:50:26.016 A:middle
coming.

00:50:26.236 --> 00:50:28.746 A:middle
And have a great WWDC.

00:50:29.508 --> 00:50:31.508 A:middle
[ Cheering and Applause ]
