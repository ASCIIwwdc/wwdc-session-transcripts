WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:07.716 --> 00:00:09.136 A:middle
&gt;&gt; Hello everyone, and welcome

00:00:09.136 --> 00:00:11.076 A:middle
to our session about user preset

00:00:11.076 --> 00:00:12.566 A:middle
support for audio units.

00:00:13.096 --> 00:00:14.876 A:middle
My name is Bela Balazs, and I'm

00:00:14.876 --> 00:00:16.236 A:middle
an engineer on the Core Audio

00:00:16.236 --> 00:00:17.096 A:middle
software team.

00:00:17.546 --> 00:00:18.726 A:middle
Today we would like to talk

00:00:18.726 --> 00:00:19.886 A:middle
about a some of our new APIs

00:00:19.996 --> 00:00:21.386 A:middle
regarding the handling of audio

00:00:21.386 --> 00:00:22.376 A:middle
unit presets.

00:00:24.096 --> 00:00:25.656 A:middle
First, let's start with this.

00:00:25.906 --> 00:00:27.586 A:middle
What are presets and why are

00:00:27.586 --> 00:00:28.196 A:middle
they useful?

00:00:29.276 --> 00:00:31.186 A:middle
In an audio software context, a

00:00:31.186 --> 00:00:32.586 A:middle
preset is a snapshot of the

00:00:32.586 --> 00:00:33.906 A:middle
state of the audio unit's

00:00:33.906 --> 00:00:35.616 A:middle
parameters at a given time.

00:00:36.466 --> 00:00:38.066 A:middle
This snapshot can be saved and

00:00:38.066 --> 00:00:38.976 A:middle
later restored.

00:00:41.216 --> 00:00:42.506 A:middle
We already support factory

00:00:42.506 --> 00:00:43.096 A:middle
presets.

00:00:43.786 --> 00:00:45.696 A:middle
It's a property on the AU audio

00:00:45.696 --> 00:00:48.136 A:middle
unit class and it's defined as

00:00:48.136 --> 00:00:49.856 A:middle
an array of AU audio unit

00:00:49.896 --> 00:00:50.436 A:middle
presets.

00:00:50.926 --> 00:00:54.546 A:middle
These factory presets are built

00:00:54.546 --> 00:00:55.936 A:middle
into the audio unit by the audio

00:00:55.936 --> 00:00:57.096 A:middle
unit manufacturer.

00:00:57.686 --> 00:00:59.186 A:middle
An audio unit developer might

00:00:59.186 --> 00:01:00.236 A:middle
include a fixed number of

00:00:59.186 --> 00:01:00.236 A:middle
include a fixed number of

00:01:00.236 --> 00:01:02.316 A:middle
presets with the product as a

00:01:02.316 --> 00:01:03.936 A:middle
starting point or to showcase

00:01:03.936 --> 00:01:05.256 A:middle
the capabilities of the audio

00:01:05.256 --> 00:01:05.586 A:middle
unit.

00:01:07.856 --> 00:01:09.266 A:middle
Now we are adding support for

00:01:09.266 --> 00:01:10.166 A:middle
user presets.

00:01:10.786 --> 00:01:12.586 A:middle
These can be accessed by using

00:01:12.586 --> 00:01:14.296 A:middle
this new user presets property

00:01:15.016 --> 00:01:16.226 A:middle
which returns an array of AU

00:01:16.226 --> 00:01:17.626 A:middle
audio unit presets.

00:01:19.966 --> 00:01:21.236 A:middle
These are presets that are

00:01:21.236 --> 00:01:22.846 A:middle
created by the user and can be

00:01:22.846 --> 00:01:23.906 A:middle
modified later on.

00:01:24.466 --> 00:01:26.086 A:middle
The audio unit exposes them to

00:01:26.116 --> 00:01:27.296 A:middle
all audio unit host

00:01:27.296 --> 00:01:28.056 A:middle
applications.

00:01:28.446 --> 00:01:31.836 A:middle
We have a new property called

00:01:31.836 --> 00:01:33.156 A:middle
support user presets.

00:01:33.156 --> 00:01:35.326 A:middle
The audio unit sets this to true

00:01:35.326 --> 00:01:36.376 A:middle
to signal support.

00:01:36.766 --> 00:01:39.156 A:middle
The audio unit host application

00:01:39.156 --> 00:01:40.616 A:middle
has to check it before using the

00:01:40.616 --> 00:01:41.596 A:middle
new functionality.

00:01:41.756 --> 00:01:43.636 A:middle
This is the way to opt in to use

00:01:43.636 --> 00:01:44.456 A:middle
the new features.

00:01:46.786 --> 00:01:48.426 A:middle
We have methods to save and

00:01:48.426 --> 00:01:49.586 A:middle
delete user presets.

00:01:50.036 --> 00:01:51.636 A:middle
The audio unit host application

00:01:51.636 --> 00:01:53.146 A:middle
can call the save user preset

00:01:53.146 --> 00:01:55.186 A:middle
method to save the current state

00:01:55.186 --> 00:01:57.516 A:middle
into a preset, or it can call

00:01:57.516 --> 00:01:59.246 A:middle
the delete user preset method to

00:01:59.246 --> 00:02:00.686 A:middle
delete an existing preset.

00:01:59.246 --> 00:02:00.686 A:middle
delete an existing preset.

00:02:01.246 --> 00:02:02.716 A:middle
The audio unit can override

00:02:02.716 --> 00:02:04.526 A:middle
these to implement custom logic,

00:02:04.766 --> 00:02:05.966 A:middle
or it can use the default

00:02:05.966 --> 00:02:07.576 A:middle
implementations inherited from

00:02:07.576 --> 00:02:09.256 A:middle
the AU audio unit base class.

00:02:11.526 --> 00:02:13.096 A:middle
These default implementations

00:02:13.096 --> 00:02:14.336 A:middle
store the presets in the

00:02:14.336 --> 00:02:15.866 A:middle
application container folder of

00:02:15.866 --> 00:02:17.076 A:middle
the audio unit extension.

00:02:20.246 --> 00:02:21.956 A:middle
You can use the preset state for

00:02:21.956 --> 00:02:23.946 A:middle
user preset method to retrieve

00:02:23.946 --> 00:02:25.276 A:middle
the state stored in the user

00:02:25.276 --> 00:02:25.926 A:middle
preset.

00:02:26.956 --> 00:02:28.436 A:middle
This also has a default

00:02:28.436 --> 00:02:29.286 A:middle
implementation that's

00:02:29.286 --> 00:02:31.046 A:middle
superclass, but it can be

00:02:31.046 --> 00:02:32.686 A:middle
overridden to suit custom needs.

00:02:34.136 --> 00:02:35.786 A:middle
It returns a dictionary that you

00:02:35.786 --> 00:02:37.016 A:middle
can use to restore the state of

00:02:37.016 --> 00:02:38.886 A:middle
the audio unit by simply

00:02:38.886 --> 00:02:40.236 A:middle
assigning it to the full state

00:02:40.236 --> 00:02:41.666 A:middle
for document property of the

00:02:41.666 --> 00:02:42.266 A:middle
audio unit.

00:02:44.716 --> 00:02:46.906 A:middle
In addition to these, we've

00:02:46.906 --> 00:02:48.826 A:middle
added a new property called

00:02:48.826 --> 00:02:51.356 A:middle
isLoadedInProcess that you can

00:02:51.356 --> 00:02:52.746 A:middle
use to check whether the audio

00:02:52.746 --> 00:02:54.236 A:middle
unit is loaded-in process.

00:02:55.346 --> 00:02:57.186 A:middle
Loading in process is a macOS

00:02:57.186 --> 00:02:57.886 A:middle
only feature.

00:02:58.176 --> 00:03:00.106 A:middle
The host can request it but if

00:02:58.176 --> 00:03:00.106 A:middle
The host can request it but if

00:03:00.106 --> 00:03:01.836 A:middle
the audio unit is not packaged

00:03:01.836 --> 00:03:03.656 A:middle
to support it, the fallback

00:03:03.686 --> 00:03:05.276 A:middle
behavior is to load the audio

00:03:05.276 --> 00:03:06.386 A:middle
unit out of process.

00:03:07.916 --> 00:03:09.836 A:middle
Now, the host or the audio unit

00:03:09.836 --> 00:03:11.556 A:middle
can use this property to verify

00:03:11.556 --> 00:03:13.076 A:middle
that this operation succeeded.

00:03:13.076 --> 00:03:15.606 A:middle
And now let's see it in action.

00:03:18.706 --> 00:03:20.856 A:middle
So, here I have the updated AUV

00:03:20.856 --> 00:03:22.466 A:middle
free host sample code, which is

00:03:22.466 --> 00:03:24.506 A:middle
available both on macOS and on

00:03:24.646 --> 00:03:25.026 A:middle
iOS.

00:03:25.716 --> 00:03:27.436 A:middle
In this host application, I have

00:03:27.436 --> 00:03:29.436 A:middle
loaded the AUV free filter demo.

00:03:30.756 --> 00:03:32.746 A:middle
When I press play, we can hear

00:03:32.746 --> 00:03:35.996 A:middle
the filter in action.

00:03:35.996 --> 00:03:36.063 A:middle
[Background music]

00:03:36.063 --> 00:03:38.476 A:middle
I can drag this graph to set the

00:03:38.476 --> 00:03:40.906 A:middle
cutoff and the resonance of the

00:03:40.906 --> 00:03:42.696 A:middle
filter.

00:03:42.696 --> 00:03:45.406 A:middle
And here I have my preset

00:03:45.406 --> 00:03:46.556 A:middle
section on the right side.

00:03:47.736 --> 00:03:49.076 A:middle
We have our factory presets,

00:03:49.076 --> 00:03:51.256 A:middle
which came with the audio unit.

00:03:52.076 --> 00:03:55.056 A:middle
We have warm, bright, and

00:03:55.056 --> 00:03:57.406 A:middle
prominent.

00:03:57.406 --> 00:03:59.616 A:middle
And in the other tab, we have

00:03:59.616 --> 00:04:02.586 A:middle
the user preset section.

00:03:59.616 --> 00:04:02.586 A:middle
the user preset section.

00:04:02.586 --> 00:04:04.736 A:middle
Here we have my previously saved

00:04:04.736 --> 00:04:07.416 A:middle
initial preset and I can save

00:04:07.416 --> 00:04:08.000 A:middle
new ones.

00:04:08.516 --> 00:04:17.875 A:middle
[ Music ]

00:04:18.375 --> 00:04:21.986 A:middle
And I can switch between them.

00:04:21.986 --> 00:04:23.396 A:middle
Once I no longer need one of the

00:04:23.396 --> 00:04:26.000 A:middle
presets, I can simply delete it.

00:04:28.046 --> 00:04:29.216 A:middle
And this is the entire

00:04:29.216 --> 00:04:31.026 A:middle
functionality of the AUV free

00:04:31.026 --> 00:04:31.226 A:middle
host.

00:04:31.226 --> 00:04:32.496 A:middle
I encourage everyone to check it

00:04:32.496 --> 00:04:33.000 A:middle
out.

00:04:36.356 --> 00:04:38.156 A:middle
To summarize, we've added

00:04:38.156 --> 00:04:39.656 A:middle
support for user presets for

00:04:39.656 --> 00:04:41.666 A:middle
audio units to complement the

00:04:41.666 --> 00:04:43.276 A:middle
functionality already provided

00:04:43.276 --> 00:04:44.506 A:middle
by factory presets.

00:04:45.436 --> 00:04:46.836 A:middle
These allow the user to save

00:04:46.836 --> 00:04:48.036 A:middle
their favorite sounds into

00:04:48.036 --> 00:04:50.146 A:middle
presets and access them in each

00:04:50.146 --> 00:04:51.346 A:middle
and every audio unit host

00:04:51.346 --> 00:04:51.996 A:middle
application.

00:04:53.076 --> 00:04:54.506 A:middle
To take advantage of these new

00:04:54.506 --> 00:04:56.116 A:middle
features, the audio unit can

00:04:56.116 --> 00:04:57.746 A:middle
simply opt in and use the

00:04:57.746 --> 00:04:59.286 A:middle
default implementations that we

00:04:59.286 --> 00:05:01.206 A:middle
provide, or it can override the

00:04:59.286 --> 00:05:01.206 A:middle
provide, or it can override the

00:05:01.206 --> 00:05:02.496 A:middle
methods to implement custom

00:05:02.496 --> 00:05:03.216 A:middle
functionality.

00:05:03.986 --> 00:05:05.916 A:middle
The audio unit host application

00:05:05.916 --> 00:05:07.316 A:middle
can query the audio unit for

00:05:07.316 --> 00:05:09.576 A:middle
these presets and can create new

00:05:09.576 --> 00:05:11.136 A:middle
presets or delete the existing

00:05:11.136 --> 00:05:12.206 A:middle
ones by calling the right

00:05:12.206 --> 00:05:13.426 A:middle
methods on the audio unit.

00:05:15.036 --> 00:05:16.826 A:middle
For more information, you can

00:05:16.826 --> 00:05:18.086 A:middle
check out our newly updated

00:05:18.086 --> 00:05:19.636 A:middle
sample code and the resources

00:05:19.636 --> 00:05:21.086 A:middle
attached to this session, which

00:05:21.086 --> 00:05:21.966 A:middle
is available at

00:05:21.966 --> 00:05:23.466 A:middle
developer.apple.com.

00:05:24.366 --> 00:05:25.796 A:middle
That concludes our presentation.

00:05:25.976 --> 00:05:26.366 A:middle
Thank you.
