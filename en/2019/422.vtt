WEBVTT

00:00:01.176 --> 00:00:04.500 A:middle
[ Music ]

00:00:11.696 --> 00:00:12.696 A:middle
&gt;&gt; Good evening, hello.

00:00:14.066 --> 00:00:16.136 A:middle
Welcome to Designing for Adverse

00:00:16.136 --> 00:00:17.156 A:middle
Network and Temperature

00:00:17.156 --> 00:00:17.856 A:middle
Conditions.

00:00:18.716 --> 00:00:19.986 A:middle
Whether you're just starting out

00:00:19.986 --> 00:00:21.536 A:middle
with your first app or if you're

00:00:21.536 --> 00:00:23.336 A:middle
a seasoned app developer, we

00:00:23.336 --> 00:00:25.036 A:middle
want you to design for a world

00:00:25.036 --> 00:00:26.136 A:middle
class experience.

00:00:27.016 --> 00:00:28.366 A:middle
Your apps have the potential to

00:00:28.366 --> 00:00:30.136 A:middle
be used by millions of people in

00:00:30.136 --> 00:00:31.626 A:middle
so many different situations.

00:00:32.566 --> 00:00:34.526 A:middle
Many of those people will not be

00:00:34.526 --> 00:00:37.106 A:middle
on a superfast 4G network, and

00:00:37.106 --> 00:00:38.096 A:middle
others may be in warmer

00:00:38.096 --> 00:00:38.806 A:middle
environments.

00:00:39.966 --> 00:00:41.166 A:middle
Now, we all do some level of

00:00:41.196 --> 00:00:43.346 A:middle
testing, but are you doing

00:00:43.346 --> 00:00:44.806 A:middle
enough to know what it's like to

00:00:44.806 --> 00:00:46.506 A:middle
interact with your app the way

00:00:46.506 --> 00:00:48.346 A:middle
those users would, and if you

00:00:48.346 --> 00:00:50.086 A:middle
are, are you providing the best

00:00:50.086 --> 00:00:51.146 A:middle
experience that you can?

00:00:52.326 --> 00:00:54.266 A:middle
Great apps continue to work well

00:00:54.326 --> 00:00:55.436 A:middle
even under challenging

00:00:55.436 --> 00:00:57.006 A:middle
real-world situations, which

00:00:57.006 --> 00:00:58.216 A:middle
might be difficult to design

00:00:58.286 --> 00:00:58.496 A:middle
for.

00:00:59.046 --> 00:01:00.396 A:middle
That's why we're here to share

00:00:59.046 --> 00:01:00.396 A:middle
That's why we're here to share

00:01:00.396 --> 00:01:02.046 A:middle
some tips with you and brand-new

00:01:02.086 --> 00:01:03.656 A:middle
tools in Xcode to help with

00:01:03.656 --> 00:01:03.856 A:middle
that.

00:01:04.366 --> 00:01:05.215 A:middle
I'm Alex Kara.

00:01:05.596 --> 00:01:06.546 A:middle
&gt;&gt; And I'm Ilya Veygman.

00:01:07.206 --> 00:01:08.446 A:middle
We work in iOS system

00:01:08.446 --> 00:01:10.196 A:middle
performance so that the system

00:01:10.196 --> 00:01:11.626 A:middle
works well and reliably and

00:01:11.626 --> 00:01:13.106 A:middle
consistently in the real world.

00:01:13.826 --> 00:01:15.286 A:middle
IOS reacts to changing network

00:01:15.286 --> 00:01:16.866 A:middle
and temperature conditions, and

00:01:16.866 --> 00:01:18.386 A:middle
we want you to be able to do the

00:01:18.386 --> 00:01:20.036 A:middle
same thing with your app so that

00:01:20.036 --> 00:01:21.156 A:middle
you just can experience your app

00:01:21.376 --> 00:01:22.436 A:middle
the way that you designed it.

00:01:23.856 --> 00:01:24.956 A:middle
&gt;&gt; We have some exciting things

00:01:24.956 --> 00:01:25.806 A:middle
to talk about today.

00:01:26.146 --> 00:01:28.116 A:middle
First, we're going to dive into

00:01:28.116 --> 00:01:29.746 A:middle
real-world device conditions and

00:01:29.746 --> 00:01:31.256 A:middle
where they fit in to your design

00:01:31.256 --> 00:01:31.906 A:middle
process.

00:01:33.066 --> 00:01:34.906 A:middle
Next, we'll show you how to

00:01:34.906 --> 00:01:36.286 A:middle
improve your app's behavior

00:01:36.466 --> 00:01:37.866 A:middle
under different network links

00:01:38.186 --> 00:01:39.736 A:middle
with new and existing developer

00:01:39.736 --> 00:01:40.186 A:middle
tools.

00:01:41.366 --> 00:01:42.846 A:middle
And finally, we'll reveal a

00:01:42.846 --> 00:01:44.506 A:middle
brand-new way to optimize your

00:01:44.506 --> 00:01:46.126 A:middle
app with varying temperature

00:01:46.126 --> 00:01:46.666 A:middle
conditions.

00:01:52.016 --> 00:01:54.166 A:middle
&gt;&gt; I want you to picture how and

00:01:54.166 --> 00:01:55.736 A:middle
where you use iOS.

00:01:56.226 --> 00:01:57.646 A:middle
You don't simply use your

00:01:57.646 --> 00:01:58.686 A:middle
devices at home or at the

00:01:58.686 --> 00:01:59.176 A:middle
office.

00:02:00.156 --> 00:02:00.766 A:middle
You take them with you

00:02:00.766 --> 00:02:01.176 A:middle
everywhere.

00:02:01.636 --> 00:02:04.826 A:middle
To the beach, to the park, on

00:02:04.826 --> 00:02:06.736 A:middle
the subway, in your car on a

00:02:06.736 --> 00:02:07.336 A:middle
long road trip.

00:02:08.716 --> 00:02:09.826 A:middle
These might be places with a lot

00:02:09.826 --> 00:02:12.146 A:middle
of sunlight or heat or with weak

00:02:12.146 --> 00:02:12.926 A:middle
network connectivity.

00:02:14.106 --> 00:02:15.186 A:middle
Now, picture your users.

00:02:15.966 --> 00:02:17.326 A:middle
Chances are, they'll be using

00:02:17.326 --> 00:02:18.586 A:middle
your app in environments just

00:02:18.586 --> 00:02:19.106 A:middle
like these.

00:02:19.606 --> 00:02:20.746 A:middle
It's important for you to

00:02:20.746 --> 00:02:22.356 A:middle
consider how that compares with

00:02:22.356 --> 00:02:23.276 A:middle
your development and test

00:02:23.276 --> 00:02:23.736 A:middle
environment.

00:02:25.106 --> 00:02:26.896 A:middle
Now, you're probably doing most

00:02:26.976 --> 00:02:28.976 A:middle
or all of your development and

00:02:28.976 --> 00:02:30.366 A:middle
testing in your office or in a

00:02:30.366 --> 00:02:31.116 A:middle
lab.

00:02:31.536 --> 00:02:32.796 A:middle
These are all certainly going to

00:02:32.796 --> 00:02:34.066 A:middle
have fast, reliable internet

00:02:34.066 --> 00:02:35.506 A:middle
connectivity and climate

00:02:35.506 --> 00:02:37.066 A:middle
control, and that's a good

00:02:37.066 --> 00:02:37.326 A:middle
thing.

00:02:37.326 --> 00:02:38.746 A:middle
We all want a good controlled

00:02:38.746 --> 00:02:39.216 A:middle
place to work.

00:02:40.526 --> 00:02:41.416 A:middle
But these won't be the same

00:02:41.416 --> 00:02:42.846 A:middle
conditions your users around the

00:02:42.846 --> 00:02:44.376 A:middle
world face when interacting with

00:02:44.376 --> 00:02:45.986 A:middle
your app.

00:02:46.026 --> 00:02:47.176 A:middle
This difference can be a big

00:02:47.176 --> 00:02:48.226 A:middle
reason why you might be seeing

00:02:48.226 --> 00:02:49.736 A:middle
complaints about your app but

00:02:49.736 --> 00:02:51.266 A:middle
dismissing them as one-offs or

00:02:51.266 --> 00:02:51.996 A:middle
corner cases.

00:02:52.556 --> 00:02:55.686 A:middle
In addition to this, these

00:02:55.686 --> 00:02:56.656 A:middle
devices can multitask.

00:02:57.696 --> 00:02:58.996 A:middle
Your users might be in the

00:02:58.996 --> 00:03:00.536 A:middle
passenger seat of a car, getting

00:02:58.996 --> 00:03:00.536 A:middle
passenger seat of a car, getting

00:03:00.536 --> 00:03:01.766 A:middle
turn-by-turn directions while

00:03:01.766 --> 00:03:03.196 A:middle
streaming music even wirelessly

00:03:03.196 --> 00:03:03.756 A:middle
to CarPlay.

00:03:04.706 --> 00:03:05.636 A:middle
They might be at a coffee shop

00:03:06.176 --> 00:03:07.816 A:middle
charging their iPhone and using

00:03:07.816 --> 00:03:09.526 A:middle
it as a hotspot for their Mac.

00:03:10.116 --> 00:03:11.496 A:middle
Or, they might be using ARKit to

00:03:11.496 --> 00:03:12.726 A:middle
recognize objects in your app

00:03:12.726 --> 00:03:14.316 A:middle
through the camera while the app

00:03:14.316 --> 00:03:15.686 A:middle
runs 3D rendering or some other

00:03:15.686 --> 00:03:17.026 A:middle
kind of complicated background

00:03:17.026 --> 00:03:17.506 A:middle
processing.

00:03:18.116 --> 00:03:21.176 A:middle
The point of all this is all of

00:03:21.176 --> 00:03:22.736 A:middle
these scenarios can cause your

00:03:22.736 --> 00:03:24.896 A:middle
device to work harder and get

00:03:24.896 --> 00:03:25.096 A:middle
warm.

00:03:26.486 --> 00:03:27.706 A:middle
While your app's features may

00:03:27.706 --> 00:03:28.906 A:middle
work well in your test weaves

00:03:28.996 --> 00:03:30.976 A:middle
under isolation, are you taking

00:03:30.976 --> 00:03:32.506 A:middle
into account how the performance

00:03:32.506 --> 00:03:33.676 A:middle
of your app might be different

00:03:33.676 --> 00:03:34.636 A:middle
during these very real and

00:03:34.636 --> 00:03:35.496 A:middle
common use cases?

00:03:36.286 --> 00:03:38.326 A:middle
A potential pain point for your

00:03:38.326 --> 00:03:40.536 A:middle
users is when they try to

00:03:40.536 --> 00:03:41.866 A:middle
interact with an app designed

00:03:41.866 --> 00:03:42.996 A:middle
only for the conditions you've

00:03:42.996 --> 00:03:43.556 A:middle
been working in.

00:03:44.456 --> 00:03:45.256 A:middle
How might that look like to

00:03:45.256 --> 00:03:45.426 A:middle
them?

00:03:46.456 --> 00:03:48.806 A:middle
&gt;&gt; Well, we noticed some reviews

00:03:48.806 --> 00:03:50.116 A:middle
on the App Store which mentioned

00:03:50.116 --> 00:03:51.896 A:middle
worsened behavior in certain

00:03:51.896 --> 00:03:52.676 A:middle
situations.

00:03:53.276 --> 00:03:54.686 A:middle
Great apps, which would

00:03:54.686 --> 00:03:55.836 A:middle
sometimes feel short.

00:03:56.586 --> 00:03:57.706 A:middle
Whether it's on the train,

00:03:58.146 --> 00:03:59.956 A:middle
places with a bit of heat, or on

00:03:59.956 --> 00:04:02.076 A:middle
a road trip, this might end up

00:03:59.956 --> 00:04:02.076 A:middle
a road trip, this might end up

00:04:02.076 --> 00:04:03.546 A:middle
being the biggest way your users

00:04:03.546 --> 00:04:04.856 A:middle
remember your app, and they

00:04:04.856 --> 00:04:06.206 A:middle
might not want to come back to

00:04:06.206 --> 00:04:07.266 A:middle
it after an egregious

00:04:07.266 --> 00:04:07.996 A:middle
experience.

00:04:08.636 --> 00:04:10.176 A:middle
Now, we know that people use

00:04:10.176 --> 00:04:11.386 A:middle
their phones in direct sunlight

00:04:11.386 --> 00:04:13.206 A:middle
and that people go into tunnels

00:04:13.206 --> 00:04:14.436 A:middle
and expect your app to continue

00:04:14.436 --> 00:04:16.446 A:middle
to work, and we know that people

00:04:16.446 --> 00:04:17.526 A:middle
aren't always in the best

00:04:17.526 --> 00:04:18.606 A:middle
network situations.

00:04:19.606 --> 00:04:20.896 A:middle
It's easy to overlook this when

00:04:20.896 --> 00:04:22.416 A:middle
your development conditions are

00:04:22.416 --> 00:04:24.076 A:middle
less representative or clean

00:04:24.076 --> 00:04:24.306 A:middle
room.

00:04:25.476 --> 00:04:26.926 A:middle
So we want to take these

00:04:26.956 --> 00:04:28.496 A:middle
conditions into account, and we

00:04:28.496 --> 00:04:30.226 A:middle
want you to provide a consistent

00:04:30.226 --> 00:04:32.266 A:middle
experience, not one that's worse

00:04:32.266 --> 00:04:33.086 A:middle
than it needs to be.

00:04:33.906 --> 00:04:35.246 A:middle
You'll find users connected to

00:04:35.306 --> 00:04:37.226 A:middle
3G networks in your feedback, or

00:04:37.226 --> 00:04:38.456 A:middle
you might find a problem in your

00:04:38.456 --> 00:04:40.266 A:middle
app and notice that your device

00:04:40.266 --> 00:04:41.386 A:middle
was warmer to the touch.

00:04:42.066 --> 00:04:43.246 A:middle
Now you might be tempted to

00:04:43.246 --> 00:04:44.826 A:middle
think of these as expected bad

00:04:44.856 --> 00:04:46.816 A:middle
behavior, but these are not edge

00:04:46.816 --> 00:04:47.316 A:middle
cases.

00:04:47.706 --> 00:04:49.046 A:middle
These are real situations that

00:04:49.046 --> 00:04:51.036 A:middle
you and your users will face.

00:04:51.626 --> 00:04:52.766 A:middle
To be able to handle them

00:04:52.766 --> 00:04:54.476 A:middle
better, you're going to need the

00:04:54.476 --> 00:04:56.096 A:middle
right developer tools and the

00:04:56.176 --> 00:04:57.656 A:middle
process that lets you apply them

00:04:57.656 --> 00:04:57.876 A:middle
well.

00:04:58.186 --> 00:04:59.636 A:middle
So, let's get started with

00:04:59.636 --> 00:05:00.316 A:middle
network link.

00:04:59.636 --> 00:05:00.316 A:middle
network link.

00:05:00.966 --> 00:05:03.256 A:middle
If you're using the network

00:05:03.586 --> 00:05:04.896 A:middle
either for primary functions in

00:05:04.896 --> 00:05:06.406 A:middle
your app or for background work,

00:05:07.186 --> 00:05:08.426 A:middle
you might have made decisions in

00:05:08.426 --> 00:05:10.086 A:middle
your code to act on the type of

00:05:10.086 --> 00:05:11.026 A:middle
network that you're on.

00:05:12.096 --> 00:05:13.266 A:middle
You might be choosing to time

00:05:13.266 --> 00:05:14.846 A:middle
out if network calls take long.

00:05:15.846 --> 00:05:17.766 A:middle
Now, for your users, some of

00:05:17.766 --> 00:05:19.286 A:middle
them might be on 3G networks.

00:05:20.186 --> 00:05:21.786 A:middle
If that's their reality, they

00:05:21.786 --> 00:05:23.096 A:middle
might be happy to wait for a

00:05:23.096 --> 00:05:24.726 A:middle
download to finish even if it

00:05:24.726 --> 00:05:25.306 A:middle
takes longer.

00:05:26.436 --> 00:05:28.046 A:middle
But your decision to timeout

00:05:28.756 --> 00:05:30.546 A:middle
will not respect their wishes,

00:05:31.126 --> 00:05:32.236 A:middle
and they'll be surprised when

00:05:32.236 --> 00:05:33.776 A:middle
the app makes no progress even

00:05:33.776 --> 00:05:34.736 A:middle
when they're happy to wait.

00:05:35.246 --> 00:05:37.066 A:middle
It's these decisions that add up

00:05:37.116 --> 00:05:38.376 A:middle
to become part of your user's

00:05:38.376 --> 00:05:39.066 A:middle
experience.

00:05:42.836 --> 00:05:45.416 A:middle
When users launch your app, they

00:05:45.416 --> 00:05:46.566 A:middle
don't want to see a network

00:05:46.566 --> 00:05:48.026 A:middle
spinner that looks like it's

00:05:48.026 --> 00:05:50.116 A:middle
perpetually downloading or one

00:05:50.116 --> 00:05:51.236 A:middle
that totally stops.

00:05:52.206 --> 00:05:53.566 A:middle
This might be the experience you

00:05:53.566 --> 00:05:55.406 A:middle
provide if you're doing network

00:05:55.406 --> 00:05:56.686 A:middle
calls during your app launch,

00:05:56.936 --> 00:05:58.586 A:middle
but it might look fine to you if

00:05:58.586 --> 00:06:00.416 A:middle
you ran this on LTE or fast

00:05:58.586 --> 00:06:00.416 A:middle
you ran this on LTE or fast

00:06:00.416 --> 00:06:01.906 A:middle
Wi-Fi even if you were doing

00:06:01.906 --> 00:06:02.816 A:middle
performance testing.

00:06:03.296 --> 00:06:04.796 A:middle
After some time, your users

00:06:04.796 --> 00:06:06.296 A:middle
might give up on this screen and

00:06:06.296 --> 00:06:08.166 A:middle
maybe even on your app entirely,

00:06:08.376 --> 00:06:09.766 A:middle
especially if there are other

00:06:09.766 --> 00:06:11.426 A:middle
apps performing under the same

00:06:11.426 --> 00:06:11.976 A:middle
conditions.

00:06:12.796 --> 00:06:13.916 A:middle
Your app should continue to be

00:06:13.916 --> 00:06:15.416 A:middle
launchable even without a

00:06:15.416 --> 00:06:16.206 A:middle
network connection.

00:06:16.746 --> 00:06:19.266 A:middle
And if I'm trying to catch on

00:06:19.316 --> 00:06:21.126 A:middle
important news with an app that

00:06:21.126 --> 00:06:22.966 A:middle
times out early, I might notice

00:06:22.966 --> 00:06:24.636 A:middle
that content fails to load on a

00:06:24.636 --> 00:06:25.916 A:middle
slower network connection.

00:06:26.426 --> 00:06:28.086 A:middle
Now, if I use other apps and

00:06:28.086 --> 00:06:29.546 A:middle
notice that they don't fail in

00:06:29.546 --> 00:06:31.236 A:middle
the same way, I would think that

00:06:31.236 --> 00:06:33.176 A:middle
this app is frozen or that it's

00:06:33.176 --> 00:06:33.566 A:middle
buggy.

00:06:34.406 --> 00:06:35.926 A:middle
This situation could escape your

00:06:35.926 --> 00:06:37.726 A:middle
development or testing if you're

00:06:37.726 --> 00:06:39.486 A:middle
mocking out network calls or

00:06:39.486 --> 00:06:40.976 A:middle
explicitly skipping them in your

00:06:40.976 --> 00:06:41.376 A:middle
tests.

00:06:42.556 --> 00:06:43.756 A:middle
So, you should go and take a

00:06:43.756 --> 00:06:45.236 A:middle
look at Xcode's Scheme Editor

00:06:45.556 --> 00:06:46.526 A:middle
and see if you're setting an

00:06:46.526 --> 00:06:48.006 A:middle
environment variable for unit

00:06:48.006 --> 00:06:48.906 A:middle
testing purposes.

00:06:50.106 --> 00:06:51.066 A:middle
When you're running your app as

00:06:51.066 --> 00:06:52.886 A:middle
a unit test host, you might be

00:06:52.886 --> 00:06:54.506 A:middle
using this to prevent unneeded

00:06:54.506 --> 00:06:55.816 A:middle
work happening during your app's

00:06:55.816 --> 00:06:56.226 A:middle
launch.

00:06:56.816 --> 00:06:58.656 A:middle
For unit tests, it's okay to

00:06:58.656 --> 00:06:59.976 A:middle
skip work such as kicking off

00:06:59.976 --> 00:07:01.716 A:middle
background network requests in

00:06:59.976 --> 00:07:01.716 A:middle
background network requests in

00:07:01.716 --> 00:07:03.206 A:middle
order to optimize for execution

00:07:03.206 --> 00:07:05.006 A:middle
speed, but you need to make sure

00:07:05.006 --> 00:07:05.966 A:middle
you're still covering those

00:07:05.966 --> 00:07:06.886 A:middle
cases elsewhere.

00:07:08.196 --> 00:07:09.866 A:middle
XC tests will wait

00:07:09.866 --> 00:07:11.196 A:middle
until your app delegates did

00:07:11.196 --> 00:07:12.756 A:middle
finish launching method returns

00:07:13.046 --> 00:07:14.666 A:middle
before it begins running tests.

00:07:15.336 --> 00:07:16.386 A:middle
If you're using an environment

00:07:16.386 --> 00:07:18.066 A:middle
variable here, do check that the

00:07:18.066 --> 00:07:19.356 A:middle
code you skip is truly

00:07:19.356 --> 00:07:21.016 A:middle
nonessential for your unit tests

00:07:21.076 --> 00:07:21.926 A:middle
to run properly.

00:07:22.796 --> 00:07:23.666 A:middle
If you're mocking out or

00:07:23.666 --> 00:07:25.166 A:middle
skipping network calls entirely,

00:07:25.486 --> 00:07:26.306 A:middle
you need to make sure you're

00:07:26.306 --> 00:07:27.966 A:middle
covering those cases along with

00:07:27.966 --> 00:07:29.336 A:middle
realistic network types

00:07:29.546 --> 00:07:30.406 A:middle
somewhere else in the

00:07:30.406 --> 00:07:32.226 A:middle
development process, and to do

00:07:32.226 --> 00:07:33.776 A:middle
that, we need to consider what a

00:07:33.776 --> 00:07:35.196 A:middle
good testing model looks like.

00:07:35.596 --> 00:07:39.436 A:middle
Earlier this week in the testing

00:07:39.436 --> 00:07:40.966 A:middle
and Xcode session, we heard

00:07:40.966 --> 00:07:42.336 A:middle
about the Pyramid model as a

00:07:42.336 --> 00:07:43.956 A:middle
guide for how to structure a

00:07:43.956 --> 00:07:45.606 A:middle
maintainable automation test

00:07:45.606 --> 00:07:45.856 A:middle
suite.

00:07:46.966 --> 00:07:48.596 A:middle
A good testing model balances

00:07:48.676 --> 00:07:50.596 A:middle
thoroughness, quality, and

00:07:50.596 --> 00:07:52.886 A:middle
execution speed and consists of

00:07:52.886 --> 00:07:54.456 A:middle
a large number of focused unit

00:07:55.586 --> 00:07:55.766 A:middle
tests.

00:07:56.146 --> 00:07:57.406 A:middle
These are where it's okay to

00:07:57.406 --> 00:07:58.936 A:middle
optimize for fast execution

00:07:58.936 --> 00:08:00.566 A:middle
times, and because we want to

00:07:58.936 --> 00:08:00.566 A:middle
times, and because we want to

00:08:00.566 --> 00:08:02.796 A:middle
isolate features here, it's okay

00:08:02.796 --> 00:08:03.936 A:middle
to run these in clean room

00:08:03.936 --> 00:08:04.516 A:middle
conditions.

00:08:05.346 --> 00:08:06.416 A:middle
You might be using these to look

00:08:06.416 --> 00:08:07.526 A:middle
for functional regressions.

00:08:08.876 --> 00:08:10.196 A:middle
These are complemented by a

00:08:10.196 --> 00:08:11.696 A:middle
smaller number of integration

00:08:11.696 --> 00:08:13.606 A:middle
tests targeting a discrete set

00:08:13.606 --> 00:08:15.676 A:middle
of classes in your app.

00:08:15.846 --> 00:08:17.706 A:middle
Integration tests check that

00:08:17.706 --> 00:08:19.146 A:middle
your app's subsystems work

00:08:19.146 --> 00:08:20.766 A:middle
together from the perspective of

00:08:20.766 --> 00:08:21.176 A:middle
a user.

00:08:22.176 --> 00:08:23.556 A:middle
Since these test results will

00:08:23.556 --> 00:08:25.026 A:middle
more closely reflect real-world

00:08:25.026 --> 00:08:26.766 A:middle
use, they may come with an

00:08:26.766 --> 00:08:27.876 A:middle
increase variance.

00:08:28.196 --> 00:08:29.356 A:middle
So you should be prepared to

00:08:29.356 --> 00:08:30.736 A:middle
triage the failure reasons in

00:08:30.736 --> 00:08:32.596 A:middle
more depth and not just consider

00:08:32.596 --> 00:08:34.166 A:middle
these tests flaky.

00:08:34.746 --> 00:08:38.976 A:middle
And finally, the suite is topped

00:08:38.976 --> 00:08:40.775 A:middle
off with user interface tests or

00:08:40.775 --> 00:08:42.876 A:middle
UI tests, which exercise the app

00:08:42.946 --> 00:08:44.256 A:middle
in a way very similar to how

00:08:44.256 --> 00:08:46.176 A:middle
users would interact with it.

00:08:46.396 --> 00:08:48.226 A:middle
This is your place to validate

00:08:48.226 --> 00:08:49.586 A:middle
that all the pieces of your app

00:08:49.586 --> 00:08:51.346 A:middle
are hooked up and interact

00:08:51.346 --> 00:08:52.496 A:middle
correctly with external

00:08:52.496 --> 00:08:53.696 A:middle
resources like the network.

00:08:54.336 --> 00:08:55.556 A:middle
So this is where your most

00:08:55.556 --> 00:08:56.916 A:middle
representative tests might be.

00:08:57.856 --> 00:08:59.586 A:middle
At the same time, this is where

00:08:59.586 --> 00:09:00.526 A:middle
you might see the highest

00:08:59.586 --> 00:09:00.526 A:middle
you might see the highest

00:09:00.526 --> 00:09:02.456 A:middle
variance in your results, and

00:09:02.456 --> 00:09:04.106 A:middle
because of that, it might feel

00:09:04.226 --> 00:09:06.246 A:middle
tempting to place more focus on

00:09:06.246 --> 00:09:08.826 A:middle
unit tests, and that might lead

00:09:08.826 --> 00:09:10.086 A:middle
you into a false sense of

00:09:10.086 --> 00:09:11.176 A:middle
security about your app's

00:09:11.176 --> 00:09:11.636 A:middle
behavior.

00:09:12.726 --> 00:09:14.406 A:middle
When applied well, this testing

00:09:14.406 --> 00:09:15.306 A:middle
model can provide a

00:09:15.306 --> 00:09:17.026 A:middle
comprehensive picture of how

00:09:17.026 --> 00:09:17.986 A:middle
your app's code base is

00:09:17.986 --> 00:09:18.556 A:middle
functioning.

00:09:19.656 --> 00:09:20.896 A:middle
This is great for the testing

00:09:20.896 --> 00:09:22.376 A:middle
coverage enables you to do, but

00:09:22.596 --> 00:09:24.096 A:middle
you need to be mindful of the

00:09:24.146 --> 00:09:25.356 A:middle
testing you might be leaving out

00:09:25.646 --> 00:09:26.986 A:middle
in your integration and UI

00:09:26.986 --> 00:09:27.526 A:middle
suites.

00:09:28.676 --> 00:09:30.026 A:middle
Putting your focus entirely on

00:09:30.026 --> 00:09:31.286 A:middle
unit testing comes with clean

00:09:31.286 --> 00:09:32.886 A:middle
room conditions, and while that

00:09:32.886 --> 00:09:34.766 A:middle
helps you find regressions, you

00:09:34.766 --> 00:09:36.046 A:middle
might be leaving out real-world

00:09:36.046 --> 00:09:37.316 A:middle
behavior that you can make

00:09:37.356 --> 00:09:38.556 A:middle
progressions under for your

00:09:38.556 --> 00:09:39.016 A:middle
users.

00:09:39.636 --> 00:09:44.556 A:middle
Now, it's easy to fall into the

00:09:44.556 --> 00:09:46.106 A:middle
habit of clean room testing

00:09:46.356 --> 00:09:47.416 A:middle
because it gives us many of the

00:09:47.416 --> 00:09:48.746 A:middle
qualities we like to see,

00:09:48.996 --> 00:09:50.906 A:middle
repeatable results, low

00:09:50.906 --> 00:09:51.586 A:middle
variance.

00:09:51.966 --> 00:09:53.296 A:middle
These translate into reduced

00:09:53.376 --> 00:09:54.416 A:middle
test flakiness.

00:09:55.276 --> 00:09:56.586 A:middle
Now we want your functionality

00:09:56.586 --> 00:09:57.496 A:middle
and performance wins to

00:09:57.496 --> 00:09:58.866 A:middle
translate into the real world,

00:09:58.866 --> 00:10:00.016 A:middle
so you're going to need the

00:09:58.866 --> 00:10:00.016 A:middle
so you're going to need the

00:10:00.056 --> 00:10:01.216 A:middle
right developer tools that also

00:10:01.216 --> 00:10:01.966 A:middle
have these qualities.

00:10:04.216 --> 00:10:05.946 A:middle
Variance can be a consequence of

00:10:05.946 --> 00:10:07.476 A:middle
realism, and it deserves the

00:10:07.476 --> 00:10:09.176 A:middle
same attention you would give to

00:10:09.176 --> 00:10:10.876 A:middle
testing and triaging those tough

00:10:10.876 --> 00:10:12.096 A:middle
edge case in your source.

00:10:13.216 --> 00:10:14.636 A:middle
As you apply the Pyramid model

00:10:14.816 --> 00:10:16.016 A:middle
to different parts of your

00:10:16.016 --> 00:10:17.416 A:middle
development workflow, you'll

00:10:17.416 --> 00:10:19.246 A:middle
find the right places to create

00:10:19.246 --> 00:10:20.676 A:middle
quality checkpoints that work

00:10:20.676 --> 00:10:22.636 A:middle
for you and your team, like

00:10:22.636 --> 00:10:24.106 A:middle
making sure that all unit tests

00:10:24.156 --> 00:10:25.766 A:middle
pass before you merge, so you

00:10:25.766 --> 00:10:26.946 A:middle
can find regressions early.

00:10:28.016 --> 00:10:29.386 A:middle
Now, while integration and UI

00:10:29.386 --> 00:10:30.936 A:middle
tests might not fit in well as

00:10:30.936 --> 00:10:32.286 A:middle
an early checkpoint because of

00:10:32.286 --> 00:10:33.556 A:middle
the variance that's incurred

00:10:33.906 --> 00:10:35.066 A:middle
when you bring in real-world

00:10:35.066 --> 00:10:36.856 A:middle
conditions, they must still have

00:10:36.856 --> 00:10:38.086 A:middle
a place in your process.

00:10:38.906 --> 00:10:40.006 A:middle
If you make sure you're running

00:10:40.006 --> 00:10:41.226 A:middle
them at appropriate times,

00:10:41.556 --> 00:10:42.896 A:middle
you'll be able to characterize

00:10:42.896 --> 00:10:44.356 A:middle
your app's behavior and find

00:10:44.356 --> 00:10:45.916 A:middle
areas of improvement and

00:10:45.916 --> 00:10:47.076 A:middle
behavioral progressions that you

00:10:47.076 --> 00:10:47.976 A:middle
can make.

00:10:48.876 --> 00:10:50.266 A:middle
So, now that we've made room for

00:10:50.266 --> 00:10:51.656 A:middle
real-world conditions, you can

00:10:51.656 --> 00:10:53.016 A:middle
bring back and focus on the

00:10:53.016 --> 00:10:54.186 A:middle
testing you might have skipped

00:10:54.186 --> 00:10:55.836 A:middle
earlier, like those network

00:10:56.396 --> 00:10:56.546 A:middle
ones.

00:10:57.916 --> 00:10:59.376 A:middle
So, we've seen some approaches

00:10:59.376 --> 00:11:02.276 A:middle
to do this like using custom

00:10:59.376 --> 00:11:02.276 A:middle
to do this like using custom

00:11:02.276 --> 00:11:03.446 A:middle
routers that condition the

00:11:03.446 --> 00:11:05.166 A:middle
network infrastructure, and this

00:11:05.166 --> 00:11:06.646 A:middle
can be really successful when

00:11:06.646 --> 00:11:07.156 A:middle
done right.

00:11:08.076 --> 00:11:09.416 A:middle
But this can also be really

00:11:09.416 --> 00:11:11.036 A:middle
difficult to do, especially if

00:11:11.036 --> 00:11:12.256 A:middle
you're a developer just starting

00:11:12.256 --> 00:11:12.476 A:middle
out.

00:11:13.406 --> 00:11:14.676 A:middle
Even with a good testing model

00:11:14.736 --> 00:11:16.636 A:middle
and a strong focus on triage, to

00:11:16.636 --> 00:11:18.086 A:middle
conduct real-world testing,

00:11:18.336 --> 00:11:19.816 A:middle
you'll need good and reliable

00:11:19.816 --> 00:11:20.536 A:middle
developer tools.

00:11:21.526 --> 00:11:23.666 A:middle
So, if you're targeting macOS

00:11:23.666 --> 00:11:24.886 A:middle
with your app, you should

00:11:24.886 --> 00:11:26.316 A:middle
download and use the Network

00:11:26.316 --> 00:11:27.546 A:middle
Link Conditioner Preference

00:11:27.546 --> 00:11:27.866 A:middle
pane.

00:11:28.476 --> 00:11:29.636 A:middle
You can use it to vary the

00:11:29.636 --> 00:11:31.356 A:middle
network type and see how your

00:11:31.356 --> 00:11:32.976 A:middle
app behaves under networks like

00:11:33.056 --> 00:11:34.766 A:middle
3G or EDGE.

00:11:37.636 --> 00:11:39.386 A:middle
The Network Link Conditioner is

00:11:39.386 --> 00:11:41.226 A:middle
available on iOS from the

00:11:41.226 --> 00:11:43.116 A:middle
developer settings menu on

00:11:43.116 --> 00:11:44.226 A:middle
devices that you're using for

00:11:44.226 --> 00:11:44.746 A:middle
development.

00:11:45.336 --> 00:11:46.856 A:middle
From here, you can vary the

00:11:46.856 --> 00:11:48.796 A:middle
network type between contended

00:11:48.796 --> 00:11:50.516 A:middle
or more representative presets

00:11:50.936 --> 00:11:52.196 A:middle
and design your app for them

00:11:52.336 --> 00:11:53.756 A:middle
without the need to set up or

00:11:53.756 --> 00:11:54.576 A:middle
change the network

00:11:54.576 --> 00:11:55.236 A:middle
infrastructure.

00:11:56.176 --> 00:11:57.446 A:middle
This is a reliable and

00:11:57.446 --> 00:11:59.226 A:middle
repeatable device supported way

00:11:59.486 --> 00:12:00.826 A:middle
to run your app under different

00:11:59.486 --> 00:12:00.826 A:middle
to run your app under different

00:12:00.826 --> 00:12:01.316 A:middle
networks.

00:12:02.406 --> 00:12:03.716 A:middle
And if you have custom needs,

00:12:03.926 --> 00:12:05.356 A:middle
you can also create customized

00:12:05.356 --> 00:12:07.236 A:middle
presets for specific types of

00:12:07.296 --> 00:12:09.206 A:middle
bandwidth, packet loss, and

00:12:09.206 --> 00:12:10.306 A:middle
latency that you would like to

00:12:10.306 --> 00:12:10.966 A:middle
design for.

00:12:11.836 --> 00:12:13.146 A:middle
This is great to check how your

00:12:13.146 --> 00:12:14.626 A:middle
app behaves in specific

00:12:14.626 --> 00:12:15.316 A:middle
environments.

00:12:15.856 --> 00:12:18.686 A:middle
In Xcode 11, we've brought the

00:12:18.686 --> 00:12:20.506 A:middle
ability to activate and vary

00:12:20.506 --> 00:12:21.856 A:middle
different network types to the

00:12:21.856 --> 00:12:23.806 A:middle
devices and simulators window so

00:12:23.806 --> 00:12:25.316 A:middle
that you can start easily and

00:12:25.316 --> 00:12:27.226 A:middle
reliably including realism in

00:12:27.226 --> 00:12:28.316 A:middle
your design process.

00:12:28.796 --> 00:12:31.066 A:middle
You'll see a new device

00:12:31.066 --> 00:12:32.826 A:middle
condition section on the lower

00:12:32.826 --> 00:12:33.606 A:middle
part of the window.

00:12:34.256 --> 00:12:35.696 A:middle
From here, you can put your

00:12:35.696 --> 00:12:36.736 A:middle
device into a more

00:12:36.736 --> 00:12:37.636 A:middle
representative state.

00:12:38.846 --> 00:12:40.046 A:middle
If you want a network link,

00:12:40.256 --> 00:12:41.306 A:middle
you'll see all of the network

00:12:41.306 --> 00:12:42.636 A:middle
types from earlier as well as

00:12:42.636 --> 00:12:44.066 A:middle
new profiles to vary the network

00:12:44.066 --> 00:12:45.076 A:middle
quality itself.

00:12:46.436 --> 00:12:47.786 A:middle
This means you can have your

00:12:47.786 --> 00:12:49.706 A:middle
device and your app behave as if

00:12:49.706 --> 00:12:51.686 A:middle
it's running on networks like 2G

00:12:51.686 --> 00:12:54.576 A:middle
or EDGE, 3G or LTE, or different

00:12:54.576 --> 00:12:55.356 A:middle
types of Wi-Fi.

00:12:56.046 --> 00:12:57.396 A:middle
You can even choose the quality

00:12:57.396 --> 00:12:58.896 A:middle
of the network type like a good

00:12:58.896 --> 00:13:00.926 A:middle
EDGE network or an average 3G

00:12:58.896 --> 00:13:00.926 A:middle
EDGE network or an average 3G

00:13:00.926 --> 00:13:01.166 A:middle
one.

00:13:01.846 --> 00:13:03.486 A:middle
Now, people do use connections

00:13:03.486 --> 00:13:05.176 A:middle
like these, so I hope you find

00:13:05.176 --> 00:13:06.866 A:middle
it helpful to see how your apps

00:13:06.866 --> 00:13:08.606 A:middle
work with them too and look for

00:13:08.606 --> 00:13:09.696 A:middle
where you can find behavioral

00:13:09.696 --> 00:13:10.296 A:middle
progressions.

00:13:11.466 --> 00:13:12.546 A:middle
Once you've picked a condition

00:13:12.546 --> 00:13:13.826 A:middle
you want to activate, click

00:13:13.826 --> 00:13:15.176 A:middle
start from the devices window.

00:13:16.116 --> 00:13:18.256 A:middle
Now, these conditions are system

00:13:18.256 --> 00:13:19.946 A:middle
wide, so you can expect

00:13:19.946 --> 00:13:21.156 A:middle
everything to start reacting

00:13:21.156 --> 00:13:23.346 A:middle
differently, including your app.

00:13:24.386 --> 00:13:26.246 A:middle
On devices which have conditions

00:13:26.246 --> 00:13:28.186 A:middle
active, you'll see a new gray

00:13:28.186 --> 00:13:29.266 A:middle
status indicator.

00:13:31.056 --> 00:13:32.626 A:middle
Although activating a network

00:13:32.626 --> 00:13:34.186 A:middle
type affects the whole system,

00:13:34.396 --> 00:13:35.656 A:middle
the UI indicators for your

00:13:35.656 --> 00:13:37.126 A:middle
network will remain unchanged.

00:13:38.276 --> 00:13:39.316 A:middle
You should also know that an

00:13:39.316 --> 00:13:41.106 A:middle
activated network condition is a

00:13:41.106 --> 00:13:43.456 A:middle
ceiling or a cap on your network

00:13:43.556 --> 00:13:45.166 A:middle
type, and it cannot upgrade your

00:13:45.166 --> 00:13:46.376 A:middle
network performance from where

00:13:46.376 --> 00:13:47.456 A:middle
it actually is in the real

00:13:47.456 --> 00:13:47.816 A:middle
world.

00:13:49.516 --> 00:13:50.996 A:middle
From the device, if you tap the

00:13:50.996 --> 00:13:52.706 A:middle
gray status icon, you'll see a

00:13:52.706 --> 00:13:54.046 A:middle
prompt telling you about the

00:13:54.046 --> 00:13:55.726 A:middle
active condition as well as an

00:13:55.726 --> 00:13:57.756 A:middle
option to stop it, and if your

00:13:57.756 --> 00:13:59.496 A:middle
device is disconnected from

00:13:59.496 --> 00:14:00.716 A:middle
Xcode, the condition is

00:13:59.496 --> 00:14:00.716 A:middle
Xcode, the condition is

00:14:00.716 --> 00:14:01.756 A:middle
automatically stopped.

00:14:03.076 --> 00:14:04.426 A:middle
To show you how you can use

00:14:04.426 --> 00:14:06.026 A:middle
network link device conditions

00:14:06.246 --> 00:14:07.696 A:middle
to find areas of progression in

00:14:07.696 --> 00:14:08.936 A:middle
your app, I'm going to bring

00:14:08.936 --> 00:14:09.976 A:middle
Ilya back on stage.

00:14:10.516 --> 00:14:12.656 A:middle
[ Applause ]

00:14:13.156 --> 00:14:14.406 A:middle
&gt;&gt; We often expect our apps to

00:14:14.406 --> 00:14:16.006 A:middle
behave slightly worse on a

00:14:16.006 --> 00:14:17.026 A:middle
slightly worse network link.

00:14:17.056 --> 00:14:18.656 A:middle
But it's important for you to be

00:14:18.656 --> 00:14:19.716 A:middle
asking yourselves whether the

00:14:19.716 --> 00:14:21.136 A:middle
behavior is as bad as it really

00:14:21.136 --> 00:14:21.606 A:middle
needs to be.

00:14:22.156 --> 00:14:23.266 A:middle
Could it be better?

00:14:23.626 --> 00:14:24.616 A:middle
Are there progression we could

00:14:24.616 --> 00:14:25.876 A:middle
make under an adverse or

00:14:25.876 --> 00:14:27.246 A:middle
different network.

00:14:28.436 --> 00:14:30.016 A:middle
Here's a mind-blowing example

00:14:30.576 --> 00:14:30.676 A:middle
app.

00:14:30.936 --> 00:14:31.876 A:middle
We can launch this to look at

00:14:31.876 --> 00:14:33.066 A:middle
baseline behavior for a network

00:14:33.066 --> 00:14:34.386 A:middle
connection with an ideal lab

00:14:34.386 --> 00:14:34.856 A:middle
condition.

00:14:36.016 --> 00:14:38.006 A:middle
This app probes an endpoint we

00:14:38.006 --> 00:14:39.636 A:middle
set up just for this demo to see

00:14:39.636 --> 00:14:40.456 A:middle
how long it takes to make the

00:14:40.456 --> 00:14:40.866 A:middle
connection.

00:14:41.646 --> 00:14:43.956 A:middle
We see that on average this

00:14:43.956 --> 00:14:45.176 A:middle
connection takes around 150

00:14:45.176 --> 00:14:45.786 A:middle
milliseconds.

00:14:46.346 --> 00:14:46.946 A:middle
We can think of this as

00:14:46.946 --> 00:14:48.506 A:middle
analogous to something like

00:14:48.576 --> 00:14:49.756 A:middle
requiring secure login or

00:14:49.756 --> 00:14:50.466 A:middle
streaming content from a

00:14:50.466 --> 00:14:50.866 A:middle
website.

00:14:51.606 --> 00:14:52.636 A:middle
And this looks great.

00:14:52.636 --> 00:14:54.516 A:middle
If we're doing UI testing in our

00:14:54.516 --> 00:14:55.746 A:middle
lab, we would assume that

00:14:55.746 --> 00:14:56.826 A:middle
everything is working smoothly,

00:14:56.826 --> 00:14:57.846 A:middle
and we have no problems.

00:14:58.716 --> 00:15:00.656 A:middle
Now let's see what happens if we

00:14:58.716 --> 00:15:00.656 A:middle
Now let's see what happens if we

00:15:00.656 --> 00:15:01.416 A:middle
turn on the Network Link

00:15:01.416 --> 00:15:02.466 A:middle
Conditioner from the Xcode

00:15:02.466 --> 00:15:03.116 A:middle
devices window.

00:15:04.616 --> 00:15:07.856 A:middle
This is an average 3G network

00:15:07.856 --> 00:15:08.846 A:middle
connection in this example.

00:15:10.266 --> 00:15:11.856 A:middle
Let's see what happens now.

00:15:13.436 --> 00:15:15.886 A:middle
When we run the probe again, we

00:15:15.886 --> 00:15:17.746 A:middle
see it takes longer, in this

00:15:17.746 --> 00:15:19.766 A:middle
case, on average around a little

00:15:19.766 --> 00:15:21.476 A:middle
over 750 milliseconds.

00:15:22.406 --> 00:15:23.226 A:middle
This might not be all that

00:15:23.226 --> 00:15:24.676 A:middle
surprising because after all a

00:15:24.676 --> 00:15:26.326 A:middle
3G network is slower when

00:15:26.326 --> 00:15:27.666 A:middle
compared to something like LTE

00:15:27.666 --> 00:15:28.156 A:middle
or Wi-Fi.

00:15:29.156 --> 00:15:30.456 A:middle
But the important thing to note

00:15:30.456 --> 00:15:32.436 A:middle
is as we said before this is the

00:15:32.536 --> 00:15:34.186 A:middle
actual network many of your

00:15:34.186 --> 00:15:34.826 A:middle
users will see.

00:15:35.526 --> 00:15:36.916 A:middle
What can we do to improve this

00:15:36.916 --> 00:15:38.236 A:middle
experience for them?

00:15:39.216 --> 00:15:41.156 A:middle
So you probably noticed just

00:15:41.156 --> 00:15:42.406 A:middle
above the run probe button we

00:15:42.406 --> 00:15:43.526 A:middle
have these two switches which

00:15:43.526 --> 00:15:45.356 A:middle
are disabled for Optimistic DNS and

00:15:45.356 --> 00:15:46.206 A:middle
TLS 1.3.

00:15:46.886 --> 00:15:47.996 A:middle
Let's turn them on and see what

00:15:47.996 --> 00:15:48.426 A:middle
happens.

00:15:48.916 --> 00:15:53.106 A:middle
And now as we turn them on and

00:15:53.106 --> 00:15:54.426 A:middle
run the probe again, we see an

00:15:54.426 --> 00:15:56.166 A:middle
immediate improvement, around 33

00:15:56.166 --> 00:15:58.776 A:middle
percent faster.

00:15:58.876 --> 00:16:00.826 A:middle
Simply by testing this app with

00:15:58.876 --> 00:16:00.826 A:middle
Simply by testing this app with

00:16:00.826 --> 00:16:01.666 A:middle
the Network Link Conditioner

00:16:01.666 --> 00:16:03.876 A:middle
active, we explicitly noted that

00:16:03.876 --> 00:16:04.816 A:middle
there is a significant

00:16:04.816 --> 00:16:06.036 A:middle
performance loss when we have a

00:16:06.036 --> 00:16:08.266 A:middle
slower network like 3G or when

00:16:08.266 --> 00:16:09.486 A:middle
compared to a faster one like

00:16:09.486 --> 00:16:10.366 A:middle
Wi-Fi or LTE.

00:16:11.716 --> 00:16:13.006 A:middle
This told us that we should take

00:16:13.006 --> 00:16:14.386 A:middle
into account these new features

00:16:14.716 --> 00:16:15.956 A:middle
and use them to proactively

00:16:16.046 --> 00:16:17.646 A:middle
improve performance even under

00:16:17.816 --> 00:16:18.966 A:middle
realistic network conditions.

00:16:21.756 --> 00:16:22.906 A:middle
By running Network Link

00:16:22.906 --> 00:16:24.296 A:middle
Conditioner, you'll notice some

00:16:24.296 --> 00:16:25.306 A:middle
behaviors are worse than they

00:16:25.306 --> 00:16:26.966 A:middle
need to be whereas previously

00:16:26.966 --> 00:16:27.536 A:middle
you might not have.

00:16:28.246 --> 00:16:29.426 A:middle
Here are just a few things you

00:16:29.426 --> 00:16:30.716 A:middle
can do to proactively improve

00:16:30.716 --> 00:16:31.656 A:middle
the overall experience.

00:16:32.756 --> 00:16:34.306 A:middle
First, do set reasonable

00:16:34.306 --> 00:16:34.806 A:middle
timeouts.

00:16:35.726 --> 00:16:37.316 A:middle
That is, timeout when you stop

00:16:37.316 --> 00:16:38.876 A:middle
making progress, not just when

00:16:38.876 --> 00:16:39.776 A:middle
progress takes too long.

00:16:40.366 --> 00:16:42.576 A:middle
As we said before, if your users

00:16:42.576 --> 00:16:44.056 A:middle
are at 3G network, you might be

00:16:44.056 --> 00:16:45.376 A:middle
happy to wait longer for content

00:16:45.376 --> 00:16:45.676 A:middle
to load.

00:16:46.356 --> 00:16:47.576 A:middle
An arbitrary timeout will be a

00:16:47.576 --> 00:16:49.516 A:middle
worse user experience for them.

00:16:49.786 --> 00:16:52.786 A:middle
Additionally, do use HTTP/2 and

00:16:52.786 --> 00:16:53.966 A:middle
do avoid reachability checks

00:16:54.046 --> 00:16:54.796 A:middle
whenever possible.

00:16:55.306 --> 00:16:56.556 A:middle
Instead, just try to use a

00:16:56.556 --> 00:16:57.956 A:middle
network and do what you can to

00:16:57.956 --> 00:16:59.366 A:middle
make sure your app works well

00:16:59.366 --> 00:17:00.406 A:middle
under as many network conditions

00:16:59.366 --> 00:17:00.406 A:middle
under as many network conditions

00:17:00.406 --> 00:17:00.946 A:middle
as possible.

00:17:01.636 --> 00:17:03.096 A:middle
To learn more about what else

00:17:03.096 --> 00:17:04.586 A:middle
you can do, please see these two

00:17:04.586 --> 00:17:06.646 A:middle
sessions from last year's WWDC

00:17:06.646 --> 00:17:07.846 A:middle
as well as Advances in

00:17:07.846 --> 00:17:08.976 A:middle
Networking parts one and two

00:17:09.046 --> 00:17:09.776 A:middle
from earlier this week.

00:17:11.876 --> 00:17:14.096 A:middle
&gt;&gt; So, get conditioning.

00:17:14.126 --> 00:17:16.665 A:middle
You want to start considering

00:17:16.665 --> 00:17:18.136 A:middle
real-world network usage in your

00:17:18.646 --> 00:17:18.713 A:middle
app.

00:17:18.906 --> 00:17:20.076 A:middle
You want to use network link

00:17:20.076 --> 00:17:21.226 A:middle
device conditions to

00:17:21.226 --> 00:17:22.915 A:middle
characterize your app's behavior

00:17:23.026 --> 00:17:24.626 A:middle
under that usage and ask

00:17:24.626 --> 00:17:26.346 A:middle
yourselves, is this acceptable

00:17:26.346 --> 00:17:28.336 A:middle
performance or can it be better.

00:17:29.066 --> 00:17:30.456 A:middle
We recommend that you test with

00:17:30.456 --> 00:17:32.206 A:middle
at least 3G networks and look

00:17:32.206 --> 00:17:33.156 A:middle
for the progressions that you

00:17:33.156 --> 00:17:33.566 A:middle
can make.

00:17:34.216 --> 00:17:35.176 A:middle
You want to vary both the

00:17:35.176 --> 00:17:37.246 A:middle
network type and its quality to

00:17:37.246 --> 00:17:38.626 A:middle
see if you're still providing a

00:17:38.626 --> 00:17:40.326 A:middle
good experience and then you can

00:17:40.326 --> 00:17:41.666 A:middle
lock in those performance wins

00:17:41.876 --> 00:17:43.196 A:middle
by making this a part of your

00:17:43.196 --> 00:17:45.146 A:middle
integration and UI test runs.

00:17:45.506 --> 00:17:49.426 A:middle
Now, I want to talk about

00:17:49.966 --> 00:17:51.136 A:middle
varying temperatures.

00:17:52.216 --> 00:17:53.946 A:middle
People like to go outdoors and

00:17:53.946 --> 00:17:55.146 A:middle
use their devices on a sunny

00:17:55.146 --> 00:17:55.476 A:middle
day.

00:17:56.216 --> 00:17:57.636 A:middle
They might head to coffee shops

00:17:57.636 --> 00:17:59.106 A:middle
and use personal hotspot while

00:17:59.106 --> 00:18:00.546 A:middle
iPhone is wirelessly charging.

00:17:59.106 --> 00:18:00.546 A:middle
iPhone is wirelessly charging.

00:18:01.546 --> 00:18:03.366 A:middle
In these situations, devices

00:18:03.366 --> 00:18:05.056 A:middle
will start to feel warmer, and

00:18:05.056 --> 00:18:05.976 A:middle
that's normal behavior.

00:18:06.536 --> 00:18:08.056 A:middle
Some thermal conditions can

00:18:08.056 --> 00:18:09.996 A:middle
cause iOS devices to change

00:18:09.996 --> 00:18:12.016 A:middle
their behavior or performance in

00:18:12.016 --> 00:18:12.916 A:middle
order to regulate their

00:18:12.916 --> 00:18:13.476 A:middle
temperature.

00:18:14.006 --> 00:18:16.786 A:middle
And temperature can vary for any

00:18:16.786 --> 00:18:18.336 A:middle
number of reasons, whether it's

00:18:18.336 --> 00:18:19.846 A:middle
an increase in work done by the

00:18:19.846 --> 00:18:22.396 A:middle
device or environmental effects

00:18:22.616 --> 00:18:24.186 A:middle
like exposure to direct sunlight

00:18:25.086 --> 00:18:25.756 A:middle
and many more.

00:18:27.156 --> 00:18:28.246 A:middle
All of these are normal

00:18:28.246 --> 00:18:30.846 A:middle
scenarios, and iOS subsystems

00:18:30.846 --> 00:18:32.546 A:middle
react to changing temperatures

00:18:32.836 --> 00:18:34.276 A:middle
to regulate the impact of those

00:18:34.276 --> 00:18:34.816 A:middle
effects.

00:18:35.366 --> 00:18:37.406 A:middle
But what's missing is for your

00:18:37.406 --> 00:18:38.716 A:middle
app to work well under changing

00:18:38.716 --> 00:18:40.706 A:middle
temperatures and how you react

00:18:40.706 --> 00:18:41.296 A:middle
to them too.

00:18:42.836 --> 00:18:44.356 A:middle
Now, when certain thresholds are

00:18:44.356 --> 00:18:45.746 A:middle
exceeded, for example, if the

00:18:45.746 --> 00:18:47.436 A:middle
device is left in a hot car for

00:18:47.436 --> 00:18:49.376 A:middle
a prolonged time, users might

00:18:49.376 --> 00:18:50.586 A:middle
see this temperature warning

00:18:50.586 --> 00:18:50.956 A:middle
screen.

00:18:51.916 --> 00:18:53.546 A:middle
At this point, they can no

00:18:53.546 --> 00:18:55.066 A:middle
longer interact with your apps.

00:18:55.946 --> 00:18:57.496 A:middle
Part of the reason this happens

00:18:57.776 --> 00:18:58.986 A:middle
is to provide users with the

00:18:58.986 --> 00:19:00.676 A:middle
crucial ability to make

00:18:58.986 --> 00:19:00.676 A:middle
crucial ability to make

00:19:00.676 --> 00:19:02.066 A:middle
emergency calls should they need

00:19:02.066 --> 00:19:02.636 A:middle
to do so.

00:19:04.076 --> 00:19:05.856 A:middle
Now, the system is doing what it

00:19:05.856 --> 00:19:07.596 A:middle
can to limit its energy impact,

00:19:07.856 --> 00:19:09.606 A:middle
which effects heat and battery

00:19:09.606 --> 00:19:11.796 A:middle
life, and your app is a resident

00:19:11.796 --> 00:19:13.316 A:middle
of the system as well, and it's

00:19:13.316 --> 00:19:14.576 A:middle
important that you take into

00:19:14.576 --> 00:19:16.396 A:middle
account its energy impact too.

00:19:17.416 --> 00:19:18.886 A:middle
To do this, you can start

00:19:18.886 --> 00:19:20.076 A:middle
changing your app's behavior

00:19:20.076 --> 00:19:21.446 A:middle
dynamically when you're in a

00:19:21.446 --> 00:19:23.106 A:middle
different thermal state.

00:19:23.916 --> 00:19:25.846 A:middle
By designing defensively, you

00:19:25.846 --> 00:19:27.396 A:middle
can reduce your app's energy

00:19:27.396 --> 00:19:29.156 A:middle
impact by turning off background

00:19:29.156 --> 00:19:30.276 A:middle
work, which contributes to

00:19:30.276 --> 00:19:31.416 A:middle
higher thermal states.

00:19:32.446 --> 00:19:33.936 A:middle
You can register for thermal

00:19:33.936 --> 00:19:35.906 A:middle
state change notifications and

00:19:35.906 --> 00:19:37.256 A:middle
look up which state the device

00:19:37.256 --> 00:19:39.916 A:middle
reports to your app and consider

00:19:39.916 --> 00:19:41.646 A:middle
scenarios that are normal like

00:19:41.646 --> 00:19:44.246 A:middle
device warming, because the

00:19:44.246 --> 00:19:45.596 A:middle
system knows how it should react

00:19:45.696 --> 00:19:46.836 A:middle
to an increase in temperature.

00:19:47.696 --> 00:19:49.056 A:middle
But your app knows more details

00:19:49.056 --> 00:19:50.546 A:middle
about the work it's doing and

00:19:50.546 --> 00:19:52.366 A:middle
how that work should react to a

00:19:52.366 --> 00:19:53.726 A:middle
higher thermal state while

00:19:53.726 --> 00:19:55.266 A:middle
maintaining a good experience.

00:19:56.916 --> 00:19:57.886 A:middle
So, let's take a look at these

00:19:57.886 --> 00:19:58.486 A:middle
thermal states that you might

00:19:58.486 --> 00:19:58.976 A:middle
see reported.

00:20:00.156 --> 00:20:02.706 A:middle
At the nominal state, the device

00:20:02.706 --> 00:20:03.676 A:middle
is at normal operating

00:20:03.676 --> 00:20:04.886 A:middle
temperatures, and there's no

00:20:04.886 --> 00:20:06.126 A:middle
need for any corrective action

00:20:06.126 --> 00:20:07.246 A:middle
from your app.

00:20:07.906 --> 00:20:09.966 A:middle
At the first state, we recommend

00:20:10.006 --> 00:20:11.516 A:middle
that you proactively start some

00:20:11.516 --> 00:20:13.116 A:middle
energy saving measures so that

00:20:13.116 --> 00:20:14.226 A:middle
you're not contributing

00:20:14.356 --> 00:20:15.666 A:middle
significantly to an overall

00:20:15.666 --> 00:20:16.216 A:middle
increase.

00:20:17.216 --> 00:20:18.896 A:middle
When iOS sees thermal state

00:20:18.896 --> 00:20:20.446 A:middle
fair, we start to pause

00:20:20.446 --> 00:20:21.806 A:middle
discretionary background work

00:20:22.006 --> 00:20:23.256 A:middle
like photos analysis.

00:20:23.726 --> 00:20:26.406 A:middle
When the device reports a

00:20:26.406 --> 00:20:28.146 A:middle
serious thermal state, system

00:20:28.146 --> 00:20:29.566 A:middle
performance will be impacted,

00:20:29.906 --> 00:20:30.946 A:middle
and your app should start

00:20:30.946 --> 00:20:32.446 A:middle
stronger energy saving measures

00:20:32.656 --> 00:20:34.546 A:middle
and reduce heavy CPU usage,

00:20:34.846 --> 00:20:36.316 A:middle
graphics, and I/O.

00:20:37.056 --> 00:20:38.546 A:middle
At this point, you should use

00:20:38.546 --> 00:20:40.816 A:middle
lower quality visual effects.

00:20:41.536 --> 00:20:43.016 A:middle
Some measures we take on the

00:20:43.016 --> 00:20:44.366 A:middle
system include lowering the

00:20:44.366 --> 00:20:46.126 A:middle
frame rate of ARKit apps and

00:20:46.126 --> 00:20:47.746 A:middle
Facetime so that they're less

00:20:47.746 --> 00:20:48.306 A:middle
intensive.

00:20:48.956 --> 00:20:50.456 A:middle
And if a user is restoring from

00:20:50.456 --> 00:20:52.096 A:middle
an iCloud backup, they'll find

00:20:52.096 --> 00:20:53.166 A:middle
that it will be paused at this

00:20:53.166 --> 00:20:54.536 A:middle
state until the device cools

00:20:54.536 --> 00:20:54.816 A:middle
down.

00:20:55.906 --> 00:20:57.706 A:middle
And at thermal state critical,

00:20:58.076 --> 00:20:59.246 A:middle
your app should stop using

00:20:59.246 --> 00:21:00.536 A:middle
peripherals such as the camera.

00:20:59.246 --> 00:21:00.536 A:middle
peripherals such as the camera.

00:21:01.236 --> 00:21:02.696 A:middle
If you're ending up on the top

00:21:02.696 --> 00:21:03.886 A:middle
of the list on the battery

00:21:03.886 --> 00:21:05.636 A:middle
impact screen, users might even

00:21:05.636 --> 00:21:08.036 A:middle
consider deleting your app.

00:21:08.096 --> 00:21:09.886 A:middle
Together with the system, your

00:21:09.886 --> 00:21:11.556 A:middle
app should dynamically react to

00:21:11.556 --> 00:21:13.116 A:middle
these changes so that you can

00:21:13.116 --> 00:21:14.446 A:middle
continue to maintain a good

00:21:14.446 --> 00:21:16.096 A:middle
experience while keeping your

00:21:16.096 --> 00:21:17.776 A:middle
energy impact low.

00:21:18.796 --> 00:21:20.276 A:middle
To learn more about the state

00:21:20.276 --> 00:21:21.706 A:middle
cases and our recommendations,

00:21:22.076 --> 00:21:22.966 A:middle
you can take a look at our

00:21:22.966 --> 00:21:23.716 A:middle
documentation.

00:21:24.266 --> 00:21:27.276 A:middle
And Ilya is now going to show

00:21:27.276 --> 00:21:28.426 A:middle
you how you can dynamically

00:21:28.426 --> 00:21:29.666 A:middle
react to these states in an

00:21:29.666 --> 00:21:30.116 A:middle
example.

00:21:30.776 --> 00:21:34.106 A:middle
&gt;&gt; I'm going to show you a

00:21:34.106 --> 00:21:35.936 A:middle
sample ARKit app based on a

00:21:35.936 --> 00:21:37.256 A:middle
modified version of our existing

00:21:37.256 --> 00:21:38.836 A:middle
sample code handling 3D

00:21:38.836 --> 00:21:40.326 A:middle
interaction and UI controls in

00:21:40.366 --> 00:21:41.126 A:middle
augmented reality.

00:21:41.126 --> 00:21:43.666 A:middle
I took it for a stroll in Apple Park

00:21:43.666 --> 00:21:44.986 A:middle
and it's performing some heavy

00:21:44.986 --> 00:21:47.116 A:middle
background work too.

00:21:47.346 --> 00:21:48.376 A:middle
Here you'll see the app running

00:21:48.376 --> 00:21:49.506 A:middle
under nominal conditions.

00:21:49.506 --> 00:21:51.146 A:middle
You can see the red focus square

00:21:51.216 --> 00:21:52.906 A:middle
turn solid, finding a

00:21:52.906 --> 00:21:54.966 A:middle
surface, and letting me drop a

00:21:54.966 --> 00:21:56.706 A:middle
nice chair and a lamp for myself

00:21:56.706 --> 00:21:57.796 A:middle
to sit in and do some reading.

00:21:58.676 --> 00:22:01.346 A:middle
Now you can see the camera

00:21:58.676 --> 00:22:01.346 A:middle
Now you can see the camera

00:22:01.346 --> 00:22:02.856 A:middle
movement is quite smooth.

00:22:02.926 --> 00:22:03.446 A:middle
Everything stays in place.

00:22:03.446 --> 00:22:04.456 A:middle
Everything stays in place.

00:22:04.616 --> 00:22:05.996 A:middle
Everything is behaving just like

00:22:05.996 --> 00:22:08.426 A:middle
it should be.

00:22:08.686 --> 00:22:09.656 A:middle
Now, let's look at this same app

00:22:09.656 --> 00:22:11.656 A:middle
again, but now I've been outside

00:22:11.706 --> 00:22:12.796 A:middle
for a long time.

00:22:12.796 --> 00:22:13.856 A:middle
I've been sitting in the sun.

00:22:13.996 --> 00:22:15.406 A:middle
It's warm out, and the device

00:22:15.406 --> 00:22:15.876 A:middle
has warmed up.

00:22:17.356 --> 00:22:18.346 A:middle
You'll notice two things.

00:22:18.656 --> 00:22:20.446 A:middle
First, the frame rate is not

00:22:20.446 --> 00:22:22.146 A:middle
quite as good as before, and

00:22:22.146 --> 00:22:23.896 A:middle
second is that despite the fact

00:22:23.896 --> 00:22:25.216 A:middle
that I'm aiming almost straight

00:22:25.216 --> 00:22:26.756 A:middle
at the ground, the focus square

00:22:26.756 --> 00:22:27.756 A:middle
does not have time to find a

00:22:27.756 --> 00:22:28.246 A:middle
surface.

00:22:28.936 --> 00:22:30.136 A:middle
This would not be a great

00:22:30.136 --> 00:22:31.596 A:middle
experience for your users, and

00:22:31.596 --> 00:22:32.806 A:middle
it might be a little frustrating

00:22:33.386 --> 00:22:33.926 A:middle
for them.

00:22:34.096 --> 00:22:35.156 A:middle
So, what can we do about this?

00:22:36.446 --> 00:22:39.216 A:middle
First, you should register for

00:22:39.216 --> 00:22:40.566 A:middle
the ProcessInfo.theremalStateDid

00:22:40.566 --> 00:22:41.356 A:middle
ChangeNotification.

00:22:42.476 --> 00:22:43.636 A:middle
When you receive a thermal state

00:22:43.636 --> 00:22:46.386 A:middle
change notification, read the

00:22:46.386 --> 00:22:48.576 A:middle
actual thermal state and then

00:22:48.576 --> 00:22:49.396 A:middle
react accordingly.

00:22:50.156 --> 00:22:51.246 A:middle
Depending on your state, you

00:22:51.246 --> 00:22:53.156 A:middle
should enable or disable certain

00:22:53.156 --> 00:22:54.996 A:middle
features to ensure smooth

00:22:54.996 --> 00:22:57.796 A:middle
functionality or whatever metric

00:22:57.796 --> 00:22:58.586 A:middle
you find is important.

00:22:59.046 --> 00:23:02.036 A:middle
Here's an example of how you can

00:22:59.046 --> 00:23:02.036 A:middle
Here's an example of how you can

00:23:02.036 --> 00:23:03.096 A:middle
register for the thermal state

00:23:03.096 --> 00:23:04.516 A:middle
and then read the thermal state.

00:23:04.516 --> 00:23:07.736 A:middle
And here is how you might choose

00:23:07.796 --> 00:23:08.876 A:middle
to react to the thermal state.

00:23:10.156 --> 00:23:11.946 A:middle
In this scenario, under nominal

00:23:11.946 --> 00:23:13.596 A:middle
and fair, I have all my features

00:23:13.596 --> 00:23:13.966 A:middle
enabled.

00:23:14.616 --> 00:23:16.106 A:middle
In this example, I have face

00:23:16.106 --> 00:23:18.046 A:middle
tracking, person segmentation,

00:23:18.176 --> 00:23:19.606 A:middle
and motion blur all turned on.

00:23:19.606 --> 00:23:23.196 A:middle
As the thermal state increases

00:23:23.196 --> 00:23:25.056 A:middle
to serious, I disable face

00:23:25.056 --> 00:23:26.306 A:middle
tracking and frame semantics,

00:23:26.826 --> 00:23:27.736 A:middle
but I leave motion blur on.

00:23:27.736 --> 00:23:31.396 A:middle
And at critical, I turn off

00:23:31.396 --> 00:23:31.716 A:middle
everything.

00:23:32.566 --> 00:23:34.996 A:middle
Now that we actually react to

00:23:34.996 --> 00:23:36.246 A:middle
thermal states, let's see how

00:23:36.246 --> 00:23:37.766 A:middle
this app behaves again in the

00:23:37.766 --> 00:23:38.836 A:middle
same scenario where we've been

00:23:38.836 --> 00:23:41.926 A:middle
outside for a long time, and we

00:23:41.926 --> 00:23:42.746 A:middle
see it's much better now.

00:23:43.496 --> 00:23:44.346 A:middle
The focus square finds a

00:23:44.346 --> 00:23:44.886 A:middle
surface.

00:23:45.016 --> 00:23:46.916 A:middle
I can drop my chair and my lamp

00:23:46.916 --> 00:23:48.486 A:middle
just like before, and I can get

00:23:48.486 --> 00:23:48.996 A:middle
some reading done.

00:23:49.706 --> 00:23:52.496 A:middle
Now, it's good to code

00:23:52.496 --> 00:23:53.986 A:middle
defensively and to react to

00:23:53.986 --> 00:23:55.606 A:middle
thermal state changes, but you

00:23:55.606 --> 00:23:57.036 A:middle
want to know ahead of time if

00:23:57.036 --> 00:23:58.016 A:middle
this works as you expect.

00:23:59.666 --> 00:24:01.826 A:middle
In general, we can do better by

00:23:59.666 --> 00:24:01.826 A:middle
In general, we can do better by

00:24:01.826 --> 00:24:03.516 A:middle
testing how we expect our app to

00:24:03.516 --> 00:24:04.406 A:middle
behave under varying

00:24:04.406 --> 00:24:05.266 A:middle
temperatures ahead of time.

00:24:06.056 --> 00:24:08.006 A:middle
In other words, you should test

00:24:08.006 --> 00:24:08.656 A:middle
your defenses.

00:24:10.096 --> 00:24:12.096 A:middle
But for something like this, how

00:24:12.096 --> 00:24:13.726 A:middle
do we even go about that?

00:24:15.076 --> 00:24:15.966 A:middle
&gt;&gt; Thanks Ilya.

00:24:15.966 --> 00:24:17.806 A:middle
But the thing is, not all of us

00:24:17.806 --> 00:24:18.666 A:middle
are going to have access to

00:24:18.746 --> 00:24:19.416 A:middle
thermal imaging.

00:24:20.616 --> 00:24:22.286 A:middle
So, just like with network

00:24:22.286 --> 00:24:23.716 A:middle
conditions, we recognize the

00:24:23.716 --> 00:24:25.386 A:middle
challenge in trying to verify

00:24:25.386 --> 00:24:26.926 A:middle
your app's behavior and that

00:24:26.926 --> 00:24:28.716 A:middle
there's high variance in

00:24:28.716 --> 00:24:29.766 A:middle
existing approaches.

00:24:30.656 --> 00:24:32.106 A:middle
We've noticed some methods that

00:24:32.106 --> 00:24:33.346 A:middle
people are taking which we would

00:24:33.346 --> 00:24:34.996 A:middle
not recommend like running a

00:24:34.996 --> 00:24:36.456 A:middle
dummy CPU load to warm the

00:24:36.456 --> 00:24:38.226 A:middle
device, throwing away the first

00:24:38.226 --> 00:24:39.566 A:middle
hour of results, and then

00:24:39.566 --> 00:24:41.396 A:middle
profiling app behavior when the

00:24:41.396 --> 00:24:42.126 A:middle
device is hot.

00:24:42.776 --> 00:24:44.526 A:middle
So, we've been hard at work to

00:24:44.526 --> 00:24:45.816 A:middle
provide a developer tool for

00:24:45.816 --> 00:24:47.536 A:middle
this, and we came up with a way

00:24:47.536 --> 00:24:49.306 A:middle
to reliably change the reported

00:24:49.336 --> 00:24:50.676 A:middle
thermal state on the device

00:24:51.056 --> 00:24:52.396 A:middle
without physically warming it

00:24:52.566 --> 00:24:53.836 A:middle
and still keeping it safe to

00:24:53.836 --> 00:24:54.216 A:middle
use.

00:24:54.786 --> 00:24:56.206 A:middle
And we built that way into

00:24:56.206 --> 00:24:58.136 A:middle
device conditions in Xcode 11.

00:24:59.346 --> 00:25:00.806 A:middle
From the same devices and

00:24:59.346 --> 00:25:00.806 A:middle
From the same devices and

00:25:00.806 --> 00:25:02.346 A:middle
simulators window, you can

00:25:02.346 --> 00:25:03.986 A:middle
activate elevated temperature

00:25:03.986 --> 00:25:05.806 A:middle
conditions and have your device

00:25:05.806 --> 00:25:07.416 A:middle
reach different thermal states

00:25:07.646 --> 00:25:08.626 A:middle
without it needing to be

00:25:08.626 --> 00:25:09.406 A:middle
physically warm.

00:25:10.346 --> 00:25:11.816 A:middle
So now, you can quickly and

00:25:11.816 --> 00:25:13.436 A:middle
easily have your device report

00:25:13.436 --> 00:25:15.056 A:middle
the fair state, to test your

00:25:15.056 --> 00:25:16.136 A:middle
proactive energy-saving

00:25:16.136 --> 00:25:16.516 A:middle
measures.

00:25:17.346 --> 00:25:19.156 A:middle
Thermal state serious, to check

00:25:19.156 --> 00:25:20.386 A:middle
that you're reliably lowering

00:25:20.386 --> 00:25:21.776 A:middle
your resource usage and energy

00:25:21.776 --> 00:25:23.886 A:middle
impact, and thermal state

00:25:23.886 --> 00:25:25.586 A:middle
critical, to see that your use

00:25:25.586 --> 00:25:27.526 A:middle
of peripherals do actually stop.

00:25:28.546 --> 00:25:29.876 A:middle
Running one of these causes the

00:25:29.876 --> 00:25:31.676 A:middle
device to behave exactly as if

00:25:31.676 --> 00:25:32.906 A:middle
it were really in that thermal

00:25:32.906 --> 00:25:34.986 A:middle
state, but before you start

00:25:34.986 --> 00:25:36.256 A:middle
using these, there's more you

00:25:36.256 --> 00:25:37.736 A:middle
need to know about how they work

00:25:37.736 --> 00:25:38.306 A:middle
on your device.

00:25:38.606 --> 00:25:39.016 A:middle
Ilya.

00:25:39.566 --> 00:25:40.416 A:middle
&gt;&gt; Thanks Alex.

00:25:40.646 --> 00:25:43.426 A:middle
I'm going to show you more about

00:25:43.426 --> 00:25:44.876 A:middle
how this condition works under

00:25:44.876 --> 00:25:45.196 A:middle
the hood.

00:25:45.196 --> 00:25:47.026 A:middle
You can see a graph here

00:25:47.026 --> 00:25:48.246 A:middle
representing the actual thermal

00:25:48.246 --> 00:25:50.396 A:middle
state of the device, the active

00:25:50.396 --> 00:25:52.656 A:middle
condition if there is any, and

00:25:52.656 --> 00:25:53.836 A:middle
how warm the device actually

00:25:53.836 --> 00:25:55.356 A:middle
feels to the touch, also

00:25:55.356 --> 00:25:56.646 A:middle
represented by a thermometer at

00:25:56.646 --> 00:25:57.116 A:middle
the top right.

00:25:57.116 --> 00:25:59.816 A:middle
Imagine a baseline device on

00:25:59.816 --> 00:26:00.186 A:middle
your desk.

00:25:59.816 --> 00:26:00.186 A:middle
your desk.

00:26:00.726 --> 00:26:01.776 A:middle
It's at room temperature.

00:26:01.776 --> 00:26:03.126 A:middle
You have no condition active,

00:26:03.126 --> 00:26:03.916 A:middle
and you haven't been using it

00:26:03.916 --> 00:26:04.396 A:middle
for a while.

00:26:05.096 --> 00:26:06.526 A:middle
Here, the thermal state is at

00:26:06.526 --> 00:26:06.946 A:middle
nominal.

00:26:07.556 --> 00:26:10.796 A:middle
If you now activate the serious

00:26:10.796 --> 00:26:12.686 A:middle
thermal profile, the device will

00:26:12.686 --> 00:26:14.366 A:middle
ramp up over time to serious

00:26:14.366 --> 00:26:16.956 A:middle
starting from nominal, reaching

00:26:16.956 --> 00:26:19.366 A:middle
fair, and eventually reaching

00:26:19.366 --> 00:26:19.926 A:middle
serious.

00:26:20.676 --> 00:26:21.586 A:middle
This process will take a few

00:26:21.586 --> 00:26:22.056 A:middle
seconds.

00:26:22.876 --> 00:26:24.166 A:middle
Just like in real life, if you

00:26:24.166 --> 00:26:25.256 A:middle
are subscribed to thermal state

00:26:25.256 --> 00:26:26.976 A:middle
notifications, you'll receive a

00:26:26.976 --> 00:26:28.246 A:middle
notification at fair and at

00:26:28.246 --> 00:26:28.816 A:middle
serious.

00:26:29.396 --> 00:26:30.646 A:middle
Now, there are two important

00:26:30.646 --> 00:26:31.986 A:middle
things to note about this.

00:26:32.896 --> 00:26:34.506 A:middle
The first is that your devices

00:26:34.506 --> 00:26:35.796 A:middle
has not actually warmed up or

00:26:35.796 --> 00:26:36.786 A:middle
changed in temperature as a

00:26:36.786 --> 00:26:37.106 A:middle
result.

00:26:37.106 --> 00:26:39.746 A:middle
The second is that this does not

00:26:39.936 --> 00:26:41.606 A:middle
fix your thermal state, but it

00:26:41.606 --> 00:26:42.456 A:middle
rather acts like a floor.

00:26:42.496 --> 00:26:44.776 A:middle
Let me explain what that means.

00:26:45.626 --> 00:26:47.586 A:middle
Imagine you have your device in

00:26:47.586 --> 00:26:49.606 A:middle
this condition, and you ran some

00:26:49.606 --> 00:26:51.376 A:middle
heavy computational load, or you

00:26:51.376 --> 00:26:52.546 A:middle
just left it out in the sun for

00:26:52.546 --> 00:26:52.836 A:middle
a while.

00:26:53.956 --> 00:26:55.666 A:middle
And now the underlying

00:26:55.666 --> 00:26:56.496 A:middle
temperature is actually

00:26:56.496 --> 00:26:56.916 A:middle
increased.

00:26:57.016 --> 00:26:57.816 A:middle
The device feels warm to the

00:26:57.816 --> 00:26:58.096 A:middle
touch.

00:26:59.146 --> 00:27:00.786 A:middle
Regardless of why, the thermal

00:26:59.146 --> 00:27:00.786 A:middle
Regardless of why, the thermal

00:27:00.786 --> 00:27:02.456 A:middle
state will actually also

00:27:02.456 --> 00:27:03.876 A:middle
increase from serious to

00:27:03.876 --> 00:27:04.276 A:middle
critical.

00:27:06.176 --> 00:27:08.026 A:middle
This is a precaution to ensure

00:27:08.026 --> 00:27:09.496 A:middle
your system still behaves safely

00:27:09.976 --> 00:27:10.986 A:middle
even if you do very heavy

00:27:10.986 --> 00:27:11.996 A:middle
testing under the thermal

00:27:11.996 --> 00:27:12.396 A:middle
condition.

00:27:13.046 --> 00:27:14.226 A:middle
If you then stop using your

00:27:14.226 --> 00:27:18.796 A:middle
device or let it cool down, the

00:27:18.796 --> 00:27:20.006 A:middle
thermal state will return back

00:27:20.006 --> 00:27:22.936 A:middle
down to serious and remain there

00:27:23.386 --> 00:27:24.246 A:middle
until you tear down the

00:27:24.246 --> 00:27:26.896 A:middle
condition, at which point, the

00:27:27.026 --> 00:27:28.246 A:middle
device will ramp from serious to

00:27:28.246 --> 00:27:30.116 A:middle
fair and down to nominal.

00:27:30.966 --> 00:27:32.136 A:middle
In all these situations, you

00:27:32.276 --> 00:27:33.846 A:middle
will receive thermal state user

00:27:33.846 --> 00:27:34.546 A:middle
notifications.

00:27:35.076 --> 00:27:38.656 A:middle
In Xcode 11, this thermal state

00:27:38.656 --> 00:27:40.326 A:middle
information is visible in an

00:27:40.326 --> 00:27:41.426 A:middle
energy gauge in the debugging

00:27:41.426 --> 00:27:41.946 A:middle
navigator.

00:27:43.196 --> 00:27:44.826 A:middle
There are two thermal state

00:27:44.826 --> 00:27:46.656 A:middle
tracks here, both located toward

00:27:46.656 --> 00:27:47.776 A:middle
the bottom of the energy impact

00:27:47.776 --> 00:27:48.106 A:middle
section.

00:27:48.596 --> 00:27:50.206 A:middle
The bottommost track shows the

00:27:50.286 --> 00:27:51.206 A:middle
actual thermal state of the

00:27:51.206 --> 00:27:52.916 A:middle
device, color coded for easy

00:27:52.916 --> 00:27:53.596 A:middle
interpretation.

00:27:54.526 --> 00:27:55.596 A:middle
Here, you can see the thermal

00:27:55.596 --> 00:27:57.186 A:middle
state ramping up and then down

00:27:57.236 --> 00:27:59.096 A:middle
in reaction to the active

00:27:59.096 --> 00:27:59.506 A:middle
condition.

00:27:59.506 --> 00:28:01.536 A:middle
You can see in this scenario it

00:27:59.506 --> 00:28:01.536 A:middle
You can see in this scenario it

00:28:01.536 --> 00:28:03.146 A:middle
took around 10 seconds in each

00:28:03.146 --> 00:28:03.486 A:middle
direction.

00:28:04.616 --> 00:28:06.796 A:middle
The top track shows the active

00:28:06.796 --> 00:28:08.146 A:middle
thermal device condition, if

00:28:08.146 --> 00:28:08.536 A:middle
there is one.

00:28:09.766 --> 00:28:11.816 A:middle
To show you more about debugging

00:28:11.816 --> 00:28:13.196 A:middle
and optimizing with Xcode and

00:28:13.196 --> 00:28:13.876 A:middle
what tools you have at your

00:28:13.876 --> 00:28:15.346 A:middle
disposal, I'm going to call Jay

00:28:15.346 --> 00:28:15.836 A:middle
on stage.

00:28:17.516 --> 00:28:25.036 A:middle
[ Applause ]

00:28:25.536 --> 00:28:26.626 A:middle
&gt;&gt; Hi everyone.

00:28:27.136 --> 00:28:29.006 A:middle
I'm Jay. I'm part of the Energy

00:28:29.006 --> 00:28:31.136 A:middle
TechnologyTteam in Core OS, and

00:28:31.136 --> 00:28:32.446 A:middle
I'm here to show you how an app

00:28:32.446 --> 00:28:33.906 A:middle
behaves when the device is

00:28:33.906 --> 00:28:35.336 A:middle
thermally constrained and what

00:28:35.336 --> 00:28:36.166 A:middle
can you do about it.

00:28:37.496 --> 00:28:38.706 A:middle
For the purpose of the demo,

00:28:38.706 --> 00:28:40.036 A:middle
we're going to use a modified

00:28:40.036 --> 00:28:41.926 A:middle
version of the Fox 2 app that's

00:28:41.926 --> 00:28:43.226 A:middle
a publicly released sample for

00:28:43.226 --> 00:28:44.606 A:middle
SceneKit from a few years back.

00:28:45.816 --> 00:28:46.646 A:middle
Let's get started.

00:28:47.056 --> 00:28:48.656 A:middle
I have a device that's running

00:28:48.656 --> 00:28:49.966 A:middle
the app without any thermal

00:28:49.966 --> 00:28:50.786 A:middle
condition active.

00:28:51.356 --> 00:28:52.236 A:middle
Let's see how it loads.

00:28:53.346 --> 00:28:55.106 A:middle
This is how the app looks.

00:28:56.346 --> 00:28:57.616 A:middle
First, let's look at the bottom

00:28:57.616 --> 00:28:58.706 A:middle
left corner of the screen.

00:29:00.026 --> 00:29:01.096 A:middle
That's the FPS.

00:29:01.356 --> 00:29:02.256 A:middle
We can look the FPS is

00:29:02.256 --> 00:29:04.056 A:middle
consistently hitting more than

00:29:04.056 --> 00:29:04.316 A:middle
30.

00:29:04.766 --> 00:29:08.056 A:middle
Let's look at the details on the

00:29:08.056 --> 00:29:08.366 A:middle
app.

00:29:09.296 --> 00:29:11.276 A:middle
There's a nice vignetting around the app for

00:29:11.276 --> 00:29:12.286 A:middle
a cinematic effect.

00:29:12.476 --> 00:29:15.106 A:middle
Let's look at all the details

00:29:15.106 --> 00:29:15.756 A:middle
inside the app.

00:29:15.756 --> 00:29:17.016 A:middle
There's just tons of details.

00:29:18.406 --> 00:29:19.466 A:middle
If you look at the green

00:29:19.466 --> 00:29:20.226 A:middle
gem on the right side,

00:29:20.706 --> 00:29:21.896 A:middle
there's a light source on top of

00:29:21.946 --> 00:29:23.166 A:middle
it, and it's doing a great

00:29:23.166 --> 00:29:23.626 A:middle
shadow.

00:29:24.906 --> 00:29:25.676 A:middle
If you look at the moving

00:29:25.676 --> 00:29:27.286 A:middle
objects, they have light sources

00:29:27.286 --> 00:29:28.776 A:middle
coming out of them, and they're

00:29:28.776 --> 00:29:30.036 A:middle
doing great shadows on the fox

00:29:30.036 --> 00:29:30.356 A:middle
as well.

00:29:30.996 --> 00:29:33.116 A:middle
Let's look at the lava.

00:29:33.236 --> 00:29:34.586 A:middle
There's smoke coming out of it,

00:29:34.586 --> 00:29:35.516 A:middle
and the GPU is doing a

00:29:35.516 --> 00:29:37.066 A:middle
great job of blending in with

00:29:37.066 --> 00:29:37.716 A:middle
the background.

00:29:38.556 --> 00:29:39.856 A:middle
There's a lot of tiny fire

00:29:39.856 --> 00:29:42.466 A:middle
particles coming out as well.

00:29:42.666 --> 00:29:44.416 A:middle
This is a great user experience.

00:29:45.276 --> 00:29:46.726 A:middle
Users really like to use apps

00:29:46.726 --> 00:29:47.206 A:middle
like these.

00:29:48.116 --> 00:29:49.116 A:middle
If you're running performance

00:29:49.146 --> 00:29:51.426 A:middle
tests, they're going to be all

00:29:52.536 --> 00:29:52.666 A:middle
green.

00:29:52.866 --> 00:29:54.176 A:middle
Let's switch gears and see what

00:29:54.176 --> 00:29:55.286 A:middle
happens when you run a thermal

00:29:55.286 --> 00:29:55.836 A:middle
condition.

00:29:56.406 --> 00:29:59.096 A:middle
I have another device running

00:29:59.096 --> 00:30:00.596 A:middle
the same app but with a serious

00:29:59.096 --> 00:30:00.596 A:middle
the same app but with a serious

00:30:00.646 --> 00:30:02.296 A:middle
thermal condition active, and

00:30:02.296 --> 00:30:03.016 A:middle
let's see what happens.

00:30:03.736 --> 00:30:06.156 A:middle
I'm going to switch over to the

00:30:06.156 --> 00:30:06.506 A:middle
device.

00:30:06.506 --> 00:30:12.396 A:middle
Now, if you look at the bottom

00:30:12.396 --> 00:30:14.636 A:middle
left corner of the screen, the

00:30:14.886 --> 00:30:16.436 A:middle
FPS is down to 17.

00:30:16.966 --> 00:30:18.506 A:middle
We lost almost half of our

00:30:18.506 --> 00:30:19.136 A:middle
performance.

00:30:19.696 --> 00:30:21.096 A:middle
If you look at the moving

00:30:21.096 --> 00:30:23.056 A:middle
objects, there aren't as

00:30:23.056 --> 00:30:23.546 A:middle
buttery smooth as they were

00:30:23.546 --> 00:30:24.016 A:middle
before.

00:30:24.336 --> 00:30:25.086 A:middle
If you look at the moving

00:30:25.086 --> 00:30:26.626 A:middle
platforms or the moving rocks,

00:30:27.166 --> 00:30:28.146 A:middle
they aren't as smooth as they

00:30:28.146 --> 00:30:28.636 A:middle
were before.

00:30:29.206 --> 00:30:32.316 A:middle
What can we do to fix this?

00:30:33.606 --> 00:30:34.876 A:middle
We went ahead and we modified

00:30:34.876 --> 00:30:36.076 A:middle
the app to listen for changes in

00:30:36.076 --> 00:30:36.706 A:middle
thermal state.

00:30:37.826 --> 00:30:38.696 A:middle
Whenever the thermal state

00:30:38.696 --> 00:30:40.236 A:middle
changes, the app is going to

00:30:40.236 --> 00:30:41.876 A:middle
respond dynamically and reduce

00:30:41.876 --> 00:30:43.106 A:middle
the features it supports.

00:30:43.566 --> 00:30:45.626 A:middle
Let's see how that works.

00:30:45.946 --> 00:30:48.156 A:middle
I have a small debug UI on the

00:30:48.156 --> 00:30:49.656 A:middle
top that can switch it from

00:30:49.656 --> 00:30:51.256 A:middle
being static or dynamic, and I'm

00:30:51.256 --> 00:30:52.536 A:middle
going to switch it to be dynamic

00:30:52.536 --> 00:30:52.756 A:middle
now.

00:30:59.356 --> 00:31:00.416 A:middle
If you look at the bottom screen

00:30:59.356 --> 00:31:00.416 A:middle
If you look at the bottom screen

00:31:00.416 --> 00:31:03.966 A:middle
now, we're close to 20 FPS

00:31:04.506 --> 00:31:04.636 A:middle
again.

00:31:04.816 --> 00:31:06.196 A:middle
The scene looks similar, but we

00:31:06.196 --> 00:31:07.526 A:middle
got rid of some of the details.

00:31:07.806 --> 00:31:08.936 A:middle
We got rid of the smoke coming

00:31:08.936 --> 00:31:09.706 A:middle
out of the lava.

00:31:10.256 --> 00:31:11.486 A:middle
We reduced the fire particles a

00:31:11.486 --> 00:31:13.906 A:middle
bit, but you can see, the

00:31:13.906 --> 00:31:15.666 A:middle
response of the app is still

00:31:15.666 --> 00:31:15.986 A:middle
great.

00:31:17.216 --> 00:31:18.136 A:middle
That's what we're looking for.

00:31:18.136 --> 00:31:23.176 A:middle
Now, let's look at the code

00:31:23.176 --> 00:31:24.646 A:middle
changes we had to do to make

00:31:24.646 --> 00:31:24.966 A:middle
this happen.

00:31:31.466 --> 00:31:33.046 A:middle
When you're at nominal or fair,

00:31:33.046 --> 00:31:34.086 A:middle
we don't have to do anything.

00:31:34.906 --> 00:31:35.786 A:middle
You can enable all of the

00:31:35.786 --> 00:31:36.556 A:middle
features on the app.

00:31:37.096 --> 00:31:37.436 A:middle
We have HDR.

00:31:37.436 --> 00:31:39.096 A:middle
We have depth of field.

00:31:39.286 --> 00:31:40.546 A:middle
We have soft shadows, and we

00:31:40.546 --> 00:31:41.546 A:middle
also have the post processing

00:31:41.546 --> 00:31:41.976 A:middle
set to high.

00:31:45.836 --> 00:31:47.936 A:middle
As soon as you hit serious, we

00:31:47.936 --> 00:31:48.836 A:middle
start doing something.

00:31:48.836 --> 00:31:51.146 A:middle
We react by disabling HDR.

00:31:51.936 --> 00:31:53.306 A:middle
We also turn the shadows from

00:31:53.306 --> 00:31:54.256 A:middle
soft to blob.

00:31:54.796 --> 00:31:56.156 A:middle
We also set the post-processing

00:31:56.156 --> 00:31:56.746 A:middle
to medium.

00:31:57.246 --> 00:32:00.356 A:middle
When we are at critical, we go

00:31:57.246 --> 00:32:00.356 A:middle
When we are at critical, we go

00:32:00.356 --> 00:32:01.026 A:middle
even further.

00:32:01.026 --> 00:32:02.236 A:middle
Critical is a very high thermal

00:32:02.236 --> 00:32:03.566 A:middle
state, and we disable as many

00:32:03.566 --> 00:32:04.426 A:middle
features as we can.

00:32:04.956 --> 00:32:05.756 A:middle
We disabled HDR.

00:32:05.846 --> 00:32:06.936 A:middle
We disabled depth of field.

00:32:06.936 --> 00:32:08.576 A:middle
We disabled shadows, and we also

00:32:08.576 --> 00:32:09.736 A:middle
turned on post processing.

00:32:10.946 --> 00:32:13.456 A:middle
All of this is going to help to

00:32:13.456 --> 00:32:14.876 A:middle
keep the app responsive at all

00:32:14.876 --> 00:32:15.416 A:middle
times.

00:32:15.936 --> 00:32:18.946 A:middle
Now, let's look at some tools

00:32:18.946 --> 00:32:20.466 A:middle
that we can use for tuning for

00:32:20.466 --> 00:32:21.006 A:middle
thermals.

00:32:23.876 --> 00:32:25.506 A:middle
This is an instrument stack

00:32:25.816 --> 00:32:28.196 A:middle
taken on the same app with and

00:32:28.196 --> 00:32:29.426 A:middle
without any optimizations.

00:32:29.966 --> 00:32:31.346 A:middle
Both have been captured with a

00:32:31.346 --> 00:32:32.286 A:middle
serious thermal condition

00:32:32.286 --> 00:32:32.546 A:middle
active.

00:32:32.606 --> 00:32:36.176 A:middle
Let's look at the FPS track.

00:32:36.176 --> 00:32:39.646 A:middle
This is the time display was

00:32:39.646 --> 00:32:40.596 A:middle
shown in the same frame.

00:32:41.366 --> 00:32:42.396 A:middle
Let's decode it a bit.

00:32:42.886 --> 00:32:43.916 A:middle
When the display is showing one

00:32:43.916 --> 00:32:45.436 A:middle
frame, the GP is working on

00:32:45.436 --> 00:32:47.136 A:middle
rendering the next one, and the

00:32:47.136 --> 00:32:48.556 A:middle
CP is working on creating the

00:32:48.556 --> 00:32:49.786 A:middle
instructions for the one coming

00:32:49.786 --> 00:32:52.276 A:middle
even after that.

00:32:52.276 --> 00:32:54.676 A:middle
What happens is when, and

00:32:55.226 --> 00:32:57.506 A:middle
without any optimizations what

00:32:57.506 --> 00:32:58.576 A:middle
happens is that the GP is not

00:32:58.576 --> 00:32:59.796 A:middle
able to deliver frames in time,

00:33:00.146 --> 00:33:01.226 A:middle
and the display keeps showing

00:33:01.226 --> 00:33:01.956 A:middle
the same frame.

00:33:02.816 --> 00:33:03.776 A:middle
This is what a stutter looks

00:33:03.776 --> 00:33:04.096 A:middle
like.

00:33:04.236 --> 00:33:05.146 A:middle
This is when your app is

00:33:05.146 --> 00:33:05.566 A:middle
lagging.

00:33:05.846 --> 00:33:06.576 A:middle
If you notice, after the

00:33:06.576 --> 00:33:08.756 A:middle
optimizations, the frames are

00:33:08.756 --> 00:33:09.926 A:middle
spaced consistently.

00:33:10.156 --> 00:33:11.516 A:middle
Apart from using instruments,

00:33:11.986 --> 00:33:13.186 A:middle
you should also be using the

00:33:13.186 --> 00:33:14.166 A:middle
Xcode energy gauge.

00:33:14.346 --> 00:33:15.916 A:middle
You should focus your attention

00:33:15.916 --> 00:33:17.086 A:middle
to the average energy impact

00:33:17.086 --> 00:33:17.856 A:middle
your app has.

00:33:18.766 --> 00:33:20.176 A:middle
The higher the energy impact,

00:33:20.286 --> 00:33:21.806 A:middle
the higher the battery drain and

00:33:21.806 --> 00:33:22.966 A:middle
the higher the chances of your

00:33:22.966 --> 00:33:23.866 A:middle
app causing a rise in the

00:33:23.866 --> 00:33:24.526 A:middle
thermal state.

00:33:24.966 --> 00:33:26.306 A:middle
If you look at without

00:33:26.306 --> 00:33:27.456 A:middle
optimizations, we had a very

00:33:27.456 --> 00:33:31.196 A:middle
high energy impact, but with the

00:33:31.196 --> 00:33:32.476 A:middle
optimizations enabled, we were

00:33:32.476 --> 00:33:34.126 A:middle
able to lower the energy impact.

00:33:34.286 --> 00:33:35.496 A:middle
What that means is the app is

00:33:35.496 --> 00:33:36.656 A:middle
not going to contribute to a

00:33:36.656 --> 00:33:38.036 A:middle
rise in the thermal state when

00:33:38.036 --> 00:33:39.746 A:middle
the device is running the app.

00:33:42.676 --> 00:33:44.186 A:middle
Back to Alex and Ilya for a

00:33:44.186 --> 00:33:44.576 A:middle
recap.

00:33:45.516 --> 00:33:49.500 A:middle
[ Applause ]

00:33:52.256 --> 00:33:53.566 A:middle
&gt;&gt; Thank you, Jay.

00:33:56.056 --> 00:33:57.806 A:middle
If you want to learn more about

00:33:57.806 --> 00:33:59.396 A:middle
debugging in Xcode as well as

00:33:59.396 --> 00:34:00.896 A:middle
other things you can do to bring

00:33:59.396 --> 00:34:00.896 A:middle
other things you can do to bring

00:34:00.896 --> 00:34:01.836 A:middle
real-world scenarios to your

00:34:01.836 --> 00:34:03.266 A:middle
development process, such as

00:34:03.266 --> 00:34:04.946 A:middle
environment overrides, please

00:34:04.946 --> 00:34:06.166 A:middle
take a look at this session from

00:34:06.166 --> 00:34:06.806 A:middle
earlier this week.

00:34:08.096 --> 00:34:10.656 A:middle
&gt;&gt; So, we heard about real-world

00:34:10.656 --> 00:34:11.936 A:middle
conditions that people will be

00:34:11.936 --> 00:34:13.985 A:middle
using your apps under, like 3G

00:34:13.985 --> 00:34:15.985 A:middle
networks or elevated temperature

00:34:15.985 --> 00:34:16.485 A:middle
states.

00:34:16.686 --> 00:34:17.795 A:middle
And we heard about the

00:34:17.795 --> 00:34:19.275 A:middle
importance of providing the best

00:34:19.275 --> 00:34:20.966 A:middle
experience truly possible in

00:34:20.966 --> 00:34:21.666 A:middle
those states.

00:34:22.686 --> 00:34:24.235 A:middle
We heard about how a typical

00:34:24.235 --> 00:34:25.815 A:middle
development and testing workflow

00:34:26.045 --> 00:34:27.775 A:middle
might natural steer you towards

00:34:27.775 --> 00:34:29.516 A:middle
clean room in an attempt to

00:34:29.516 --> 00:34:31.516 A:middle
avoid flaky tests and variance.

00:34:31.686 --> 00:34:33.616 A:middle
And we heard about the new

00:34:33.616 --> 00:34:35.536 A:middle
device conditions in Xcode 11,

00:34:35.896 --> 00:34:37.156 A:middle
which lets to you quickly and

00:34:37.156 --> 00:34:39.346 A:middle
easily put your test devices in

00:34:39.346 --> 00:34:40.716 A:middle
adverse network or temperature

00:34:40.716 --> 00:34:41.216 A:middle
states.

00:34:41.985 --> 00:34:43.396 A:middle
That means no more waiting an

00:34:43.396 --> 00:34:44.966 A:middle
hour for devices to actually

00:34:44.966 --> 00:34:46.196 A:middle
warm up and no more throwing

00:34:46.196 --> 00:34:47.186 A:middle
away test results.

00:34:47.565 --> 00:34:49.376 A:middle
This is a great way to ensure

00:34:49.376 --> 00:34:50.516 A:middle
the code that you're designing

00:34:50.686 --> 00:34:52.266 A:middle
and all the great performance

00:34:52.326 --> 00:34:53.565 A:middle
and features that come with it

00:34:53.775 --> 00:34:55.275 A:middle
translate into progression for

00:34:55.275 --> 00:34:56.996 A:middle
your users in the real world.

00:34:58.416 --> 00:35:00.666 A:middle
So, to recap, do use the Test

00:34:58.416 --> 00:35:00.666 A:middle
So, to recap, do use the Test

00:35:00.666 --> 00:35:02.096 A:middle
Pyramid model for organizing

00:35:02.096 --> 00:35:03.896 A:middle
your automation test suites and

00:35:03.896 --> 00:35:05.286 A:middle
be prepared to triage your

00:35:05.286 --> 00:35:06.906 A:middle
results as you introduce

00:35:06.956 --> 00:35:09.286 A:middle
real-world conditions to your

00:35:10.256 --> 00:35:10.666 A:middle
testing.

00:35:11.156 --> 00:35:13.246 A:middle
Only skip truly unnecessary code

00:35:13.246 --> 00:35:14.216 A:middle
in your unit testing.

00:35:14.746 --> 00:35:17.336 A:middle
And there's a call to action

00:35:17.336 --> 00:35:17.576 A:middle
here.

00:35:18.926 --> 00:35:19.856 A:middle
Don't forget to take your

00:35:19.856 --> 00:35:20.686 A:middle
conditioners with you.

00:35:21.316 --> 00:35:22.796 A:middle
Do activate a device condition,

00:35:22.986 --> 00:35:24.766 A:middle
see how your app behaves, and

00:35:24.766 --> 00:35:26.196 A:middle
add test runs to find that

00:35:26.196 --> 00:35:27.576 A:middle
egregious behavior that you

00:35:27.576 --> 00:35:28.256 A:middle
might have missed.

00:35:29.416 --> 00:35:31.056 A:middle
We recommend, again, that you do

00:35:31.056 --> 00:35:32.426 A:middle
test with at least the 3G

00:35:32.426 --> 00:35:34.066 A:middle
network type of varying quality,

00:35:34.446 --> 00:35:36.126 A:middle
see how your app behaves in the

00:35:36.126 --> 00:35:37.406 A:middle
serious thermal state too.

00:35:38.396 --> 00:35:39.816 A:middle
We are really excited to see

00:35:39.816 --> 00:35:41.076 A:middle
what progressions you can make

00:35:41.276 --> 00:35:42.466 A:middle
with the device conditions we've

00:35:42.466 --> 00:35:43.096 A:middle
made available.

00:35:43.756 --> 00:35:45.686 A:middle
And we'd love to hear from you.

00:35:46.126 --> 00:35:47.656 A:middle
Contact developer support or

00:35:47.656 --> 00:35:49.126 A:middle
come to the Xcode labs right

00:35:49.126 --> 00:35:49.966 A:middle
after this session.

00:35:50.356 --> 00:35:52.066 A:middle
And for more information, see

00:35:52.066 --> 00:35:52.876 A:middle
our session link.

00:35:53.526 --> 00:35:54.826 A:middle
Thank you so much and we hope

00:35:54.826 --> 00:35:55.966 A:middle
you have a great WWDC.

00:35:56.516 --> 00:36:03.500 A:middle
[ Applause ]
