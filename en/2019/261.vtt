WEBVTT

00:00:00.506 --> 00:00:05.926 A:middle
[ Music ]

00:00:06.426 --> 00:00:08.396 A:middle
&gt;&gt; Hello. My name is Sommer

00:00:08.396 --> 00:00:09.996 A:middle
Panage and I'm an engineering

00:00:09.996 --> 00:00:11.696 A:middle
manager on the Accessibility

00:00:11.696 --> 00:00:12.976 A:middle
team here at Apple.

00:00:12.976 --> 00:00:15.486 A:middle
I'll be talking about the Large

00:00:15.486 --> 00:00:16.286 A:middle
Content Viewer.

00:00:16.566 --> 00:00:18.426 A:middle
A feature that helps people who

00:00:18.426 --> 00:00:20.106 A:middle
prefer larger text sizes.

00:00:20.836 --> 00:00:22.456 A:middle
In this talk, you'll learn how

00:00:22.456 --> 00:00:24.616 A:middle
to ensure that all parts of your

00:00:24.616 --> 00:00:26.666 A:middle
app are readable for everyone.

00:00:28.216 --> 00:00:30.146 A:middle
We'll first cover what the Large

00:00:30.146 --> 00:00:32.286 A:middle
Content Viewer is and why it's

00:00:32.286 --> 00:00:32.856 A:middle
important.

00:00:33.626 --> 00:00:35.476 A:middle
Next, we'll look at some API

00:00:35.916 --> 00:00:37.226 A:middle
that will allow you to support

00:00:37.226 --> 00:00:38.016 A:middle
it in your app.

00:00:38.876 --> 00:00:41.266 A:middle
Finally, we'll cover examples of

00:00:41.266 --> 00:00:42.826 A:middle
some situations you might

00:00:42.826 --> 00:00:44.956 A:middle
encounter in your app and how to

00:00:44.956 --> 00:00:46.916 A:middle
handle them.

00:00:47.176 --> 00:00:48.556 A:middle
So let's start with some

00:00:48.556 --> 00:00:49.186 A:middle
background.

00:00:51.136 --> 00:00:52.906 A:middle
Before we talk about the Large

00:00:52.906 --> 00:00:55.046 A:middle
Content Viewer, let's review a

00:00:55.046 --> 00:00:57.206 A:middle
related topic, Dynamic Type.

00:00:58.166 --> 00:01:00.366 A:middle
Dynamic Type is a feature that

00:00:58.166 --> 00:01:00.366 A:middle
Dynamic Type is a feature that

00:01:00.366 --> 00:01:02.236 A:middle
allows you to customize the size

00:01:02.236 --> 00:01:03.506 A:middle
of text for the system.

00:01:04.096 --> 00:01:05.946 A:middle
You can make it smaller if you

00:01:05.946 --> 00:01:07.336 A:middle
want to fit more content on

00:01:07.336 --> 00:01:09.486 A:middle
screen, or you can make it

00:01:09.486 --> 00:01:10.866 A:middle
larger and more readable.

00:01:11.246 --> 00:01:13.226 A:middle
By default, you can choose

00:01:13.226 --> 00:01:14.876 A:middle
between seven different sizes.

00:01:16.116 --> 00:01:17.666 A:middle
But if you go into your

00:01:17.666 --> 00:01:19.676 A:middle
Accessibility settings, you can

00:01:19.676 --> 00:01:21.696 A:middle
enable larger sizes and then you

00:01:21.696 --> 00:01:23.246 A:middle
get five additional sizes.

00:01:24.026 --> 00:01:26.026 A:middle
This is important because many

00:01:26.026 --> 00:01:27.426 A:middle
people aren't just using this

00:01:27.426 --> 00:01:28.976 A:middle
feature because they prefer a

00:01:28.976 --> 00:01:29.996 A:middle
different text size.

00:01:30.546 --> 00:01:31.806 A:middle
They're doing it because they

00:01:31.806 --> 00:01:34.046 A:middle
need a larger text size in order

00:01:34.046 --> 00:01:37.226 A:middle
to be able to read the text.

00:01:37.746 --> 00:01:39.216 A:middle
So let's take a look at how

00:01:39.216 --> 00:01:40.716 A:middle
Dynamic Type changes the

00:01:40.716 --> 00:01:42.796 A:middle
behavior of iOS.

00:01:43.016 --> 00:01:44.636 A:middle
Here's how the phone app looks

00:01:44.736 --> 00:01:46.286 A:middle
at the default text size.

00:01:47.886 --> 00:01:49.906 A:middle
Now, if I change my text size to

00:01:49.906 --> 00:01:51.586 A:middle
one of the Accessibility sizes,

00:01:51.886 --> 00:01:53.376 A:middle
the text gets much bigger.

00:01:54.006 --> 00:01:55.816 A:middle
However, you might have noticed

00:01:55.896 --> 00:01:57.606 A:middle
that part of the text on screen

00:01:57.746 --> 00:01:58.846 A:middle
is not getting bigger.

00:02:00.346 --> 00:02:02.776 A:middle
For example, look at the button

00:02:02.926 --> 00:02:04.536 A:middle
in the bottom left.

00:02:04.536 --> 00:02:06.046 A:middle
If the customer has set their

00:02:06.046 --> 00:02:08.175 A:middle
size to be large like we see in

00:02:08.175 --> 00:02:10.045 A:middle
the content area, then they

00:02:10.045 --> 00:02:11.946 A:middle
likely wouldn't see the text

00:02:12.066 --> 00:02:13.326 A:middle
that we see in the tab bar

00:02:13.426 --> 00:02:14.596 A:middle
because it's still small.

00:02:15.466 --> 00:02:17.216 A:middle
You might not be able to make up

00:02:17.216 --> 00:02:18.536 A:middle
the icon above it either in

00:02:18.536 --> 00:02:18.926 A:middle
fact.

00:02:19.606 --> 00:02:21.526 A:middle
However, we don't want to grow

00:02:21.526 --> 00:02:22.946 A:middle
the tab bar because that would

00:02:22.946 --> 00:02:24.286 A:middle
leave very little room for the

00:02:24.286 --> 00:02:26.376 A:middle
main content that you see, in

00:02:26.376 --> 00:02:27.876 A:middle
this case your contact list.

00:02:28.396 --> 00:02:30.856 A:middle
So instead, if you're using

00:02:30.886 --> 00:02:32.856 A:middle
larger text sizes, we allow you

00:02:32.856 --> 00:02:34.536 A:middle
to long press on that button to

00:02:34.536 --> 00:02:35.626 A:middle
see a larger version.

00:02:36.096 --> 00:02:38.256 A:middle
Here's how that looks.

00:02:38.746 --> 00:02:40.226 A:middle
You can now drag your finger

00:02:40.226 --> 00:02:41.646 A:middle
along the bottom bar to see

00:02:41.646 --> 00:02:42.916 A:middle
what's on each of those buttons.

00:02:43.456 --> 00:02:44.716 A:middle
When you finally drag your

00:02:44.716 --> 00:02:46.216 A:middle
finger onto the button that you

00:02:46.216 --> 00:02:48.366 A:middle
want to tap, you can just let go

00:02:48.626 --> 00:02:50.126 A:middle
and the Apple act as though you

00:02:50.126 --> 00:02:50.926 A:middle
tapped the button.

00:02:51.616 --> 00:02:53.366 A:middle
This feature is what we call the

00:02:53.366 --> 00:02:54.576 A:middle
Large Content Viewer.

00:02:55.196 --> 00:02:57.046 A:middle
It allows people with low vision

00:02:57.246 --> 00:02:59.396 A:middle
to use tab bars or any other UI

00:02:59.626 --> 00:03:00.666 A:middle
that has to stay small.

00:02:59.626 --> 00:03:00.666 A:middle
that has to stay small.

00:03:01.566 --> 00:03:02.986 A:middle
It's important for your app to

00:03:02.986 --> 00:03:04.596 A:middle
show the Large Content Viewer

00:03:04.596 --> 00:03:05.466 A:middle
when appropriate.

00:03:06.206 --> 00:03:07.906 A:middle
If you're using standard UIKit

00:03:07.906 --> 00:03:09.446 A:middle
bars, you already showed the

00:03:09.446 --> 00:03:10.386 A:middle
Large Content Viewer.

00:03:10.956 --> 00:03:12.226 A:middle
You might just not have noticed

00:03:12.226 --> 00:03:13.736 A:middle
it before because it's only

00:03:13.736 --> 00:03:15.316 A:middle
enabled for the Accessibility

00:03:15.316 --> 00:03:16.296 A:middle
text sizes.

00:03:16.866 --> 00:03:18.896 A:middle
But if you've got a custom bar

00:03:19.276 --> 00:03:21.256 A:middle
or some other custom UI that has

00:03:21.256 --> 00:03:22.926 A:middle
to stay small, you'll need to

00:03:22.926 --> 00:03:24.846 A:middle
implement some API so that your

00:03:24.846 --> 00:03:26.686 A:middle
UI works just as well as the

00:03:26.686 --> 00:03:28.326 A:middle
standard UIKit controls.

00:03:28.796 --> 00:03:30.596 A:middle
Remember, this is only for the

00:03:30.596 --> 00:03:32.636 A:middle
case when your custom UI cannot

00:03:32.636 --> 00:03:33.346 A:middle
grow in size.

00:03:34.736 --> 00:03:36.876 A:middle
Scaling with dynamic type is

00:03:36.926 --> 00:03:38.586 A:middle
always preferred to showing the

00:03:38.586 --> 00:03:39.616 A:middle
Large Content Viewer.

00:03:40.186 --> 00:03:44.116 A:middle
But sometimes, our bars simply

00:03:44.116 --> 00:03:44.736 A:middle
can't scale.

00:03:45.036 --> 00:03:46.956 A:middle
So let's look at how you can

00:03:46.956 --> 00:03:48.846 A:middle
support the Large Content Viewer

00:03:48.846 --> 00:03:51.226 A:middle
in your app.

00:03:51.446 --> 00:03:53.446 A:middle
Earlier, I said that you already

00:03:53.446 --> 00:03:54.806 A:middle
showed the Large Content Viewer

00:03:54.916 --> 00:03:56.576 A:middle
if you're using standard UIKit

00:03:56.576 --> 00:03:57.096 A:middle
bars.

00:03:57.886 --> 00:03:59.406 A:middle
But you might still need to do

00:03:59.406 --> 00:04:00.796 A:middle
something to make sure that it

00:03:59.406 --> 00:04:00.796 A:middle
something to make sure that it

00:04:00.796 --> 00:04:01.506 A:middle
looks good.

00:04:02.736 --> 00:04:04.166 A:middle
If your bar items use PDF

00:04:04.166 --> 00:04:06.606 A:middle
images, make sure that you check

00:04:06.706 --> 00:04:09.406 A:middle
the Preserve Vector checkbox in

00:04:09.406 --> 00:04:11.306 A:middle
the asset catalog as seen here.

00:04:12.106 --> 00:04:13.466 A:middle
That will ensure that your

00:04:13.466 --> 00:04:15.326 A:middle
images scale smoothly to larger

00:04:15.326 --> 00:04:15.836 A:middle
sizes.

00:04:16.435 --> 00:04:19.305 A:middle
If your image button doesn't

00:04:19.305 --> 00:04:21.555 A:middle
have vector data, for example if

00:04:21.555 --> 00:04:24.246 A:middle
you're using a PNG, then by

00:04:24.246 --> 00:04:25.716 A:middle
default that image will look

00:04:25.766 --> 00:04:27.236 A:middle
blurry when it's shown in the

00:04:27.236 --> 00:04:27.616 A:middle
viewer.

00:04:28.316 --> 00:04:29.686 A:middle
To fix that, you'll need to

00:04:29.686 --> 00:04:31.646 A:middle
provide a larger version of the

00:04:31.646 --> 00:04:32.116 A:middle
image.

00:04:33.366 --> 00:04:35.756 A:middle
Use the large content size image

00:04:35.756 --> 00:04:38.346 A:middle
property on UI bar item to do

00:04:38.346 --> 00:04:38.616 A:middle
that.

00:04:39.286 --> 00:04:41.006 A:middle
If you need to adjust the

00:04:41.006 --> 00:04:42.876 A:middle
positioning, for example, if

00:04:42.876 --> 00:04:44.216 A:middle
your image doesn't look centered

00:04:44.216 --> 00:04:45.466 A:middle
in the viewer the way you wanted

00:04:45.466 --> 00:04:47.616 A:middle
to, then you can adjust the

00:04:47.616 --> 00:04:49.546 A:middle
large content size image in

00:04:50.386 --> 00:04:50.506 A:middle
sets.

00:04:51.416 --> 00:04:53.516 A:middle
So what do you need to do if you

00:04:53.516 --> 00:04:54.276 A:middle
have custom UI?

00:04:55.166 --> 00:04:57.626 A:middle
Well, before iOS 13, you

00:04:57.626 --> 00:04:59.186 A:middle
basically had to make your own

00:04:59.186 --> 00:05:00.276 A:middle
Large Content Viewer from

00:04:59.186 --> 00:05:00.276 A:middle
Large Content Viewer from

00:05:00.276 --> 00:05:00.876 A:middle
scratch.

00:05:01.416 --> 00:05:03.586 A:middle
But now, we've added API that

00:05:03.586 --> 00:05:05.346 A:middle
allows you to show the same UI

00:05:05.446 --> 00:05:06.906 A:middle
that's shown for standard UIKit

00:05:06.906 --> 00:05:07.396 A:middle
bars.

00:05:08.016 --> 00:05:09.556 A:middle
So let's say you have a custom

00:05:09.556 --> 00:05:12.076 A:middle
tab bar, first you'll need to

00:05:12.076 --> 00:05:13.766 A:middle
specify the buttons in your tab

00:05:13.766 --> 00:05:15.776 A:middle
bar as items to be shown in the

00:05:15.776 --> 00:05:16.126 A:middle
viewer.

00:05:17.046 --> 00:05:18.936 A:middle
Then the Large Content Viewer

00:05:18.936 --> 00:05:21.256 A:middle
needs a title and/or an image

00:05:21.256 --> 00:05:22.436 A:middle
for each of those buttons.

00:05:22.776 --> 00:05:24.706 A:middle
If you happened to be using

00:05:24.706 --> 00:05:26.516 A:middle
standard UIKit classes for those

00:05:26.516 --> 00:05:27.746 A:middle
buttons, you'll get those for

00:05:27.746 --> 00:05:28.086 A:middle
free.

00:05:29.126 --> 00:05:31.006 A:middle
Finally, you'll need to set up a

00:05:31.006 --> 00:05:32.316 A:middle
gesture interaction on the

00:05:32.316 --> 00:05:33.596 A:middle
custom tab bar itself.

00:05:35.196 --> 00:05:38.276 A:middle
The new UILargeContentViewerItem

00:05:38.276 --> 00:05:40.746 A:middle
protocol specifies the info that

00:05:40.746 --> 00:05:42.426 A:middle
the Large Content Viewer needs

00:05:42.506 --> 00:05:44.026 A:middle
in order to show your content.

00:05:45.306 --> 00:05:47.006 A:middle
This showsLargeContentViewer

00:05:47.006 --> 00:05:49.186 A:middle
property is what you'll use to

00:05:49.186 --> 00:05:50.726 A:middle
mark your tab bar buttons.

00:05:51.136 --> 00:05:53.496 A:middle
Set it to true on any views that

00:05:53.496 --> 00:05:54.566 A:middle
should present the viewer.

00:05:55.686 --> 00:05:57.206 A:middle
Then you can specify a

00:05:57.206 --> 00:05:59.456 A:middle
largeContentTitle and a

00:05:59.456 --> 00:06:00.626 A:middle
largeContentImage.

00:05:59.456 --> 00:06:00.626 A:middle
largeContentImage.

00:06:00.926 --> 00:06:02.576 A:middle
You can specify either of those

00:06:02.876 --> 00:06:03.616 A:middle
or both of them.

00:06:04.486 --> 00:06:07.226 A:middle
If you want to reuse a PDF image

00:06:07.226 --> 00:06:09.026 A:middle
from a small button, you can set

00:06:09.026 --> 00:06:10.976 A:middle
the scalesLargeContentImage

00:06:10.976 --> 00:06:11.966 A:middle
property to true.

00:06:12.656 --> 00:06:14.546 A:middle
But just as we saw earlier with

00:06:14.546 --> 00:06:16.626 A:middle
UI bar item, make sure that you

00:06:16.626 --> 00:06:18.626 A:middle
preserve the vector data for

00:06:18.626 --> 00:06:19.186 A:middle
your image.

00:06:19.696 --> 00:06:21.566 A:middle
And lastly, if you want to

00:06:21.566 --> 00:06:23.096 A:middle
center your image, you can use

00:06:23.096 --> 00:06:25.116 A:middle
the largeContentImageInsets.

00:06:27.216 --> 00:06:29.226 A:middle
UIView already implements this

00:06:29.226 --> 00:06:31.256 A:middle
protocol and it also provides

00:06:31.256 --> 00:06:31.756 A:middle
setters.

00:06:31.996 --> 00:06:34.116 A:middle
So in many cases, you can just

00:06:34.116 --> 00:06:35.656 A:middle
set the properties rather than

00:06:35.656 --> 00:06:37.396 A:middle
having to subclass and override.

00:06:38.296 --> 00:06:39.966 A:middle
Also, as we mentioned earlier,

00:06:40.306 --> 00:06:42.256 A:middle
certain UIKit classes like UI

00:06:42.256 --> 00:06:44.376 A:middle
button and UI label, return

00:06:44.376 --> 00:06:46.226 A:middle
default values for their title

00:06:46.386 --> 00:06:47.126 A:middle
and image.

00:06:47.636 --> 00:06:50.416 A:middle
So that's how you annotate the

00:06:50.416 --> 00:06:51.586 A:middle
buttons in your tab bar.

00:06:52.496 --> 00:06:54.166 A:middle
Next, you'll need to add a

00:06:54.166 --> 00:06:55.696 A:middle
gesture interaction to the tab

00:06:55.696 --> 00:06:56.446 A:middle
bar itself.

00:06:56.806 --> 00:06:58.756 A:middle
To add the interaction, you'll

00:06:58.756 --> 00:07:00.716 A:middle
use the same addInteraction

00:06:58.756 --> 00:07:00.716 A:middle
use the same addInteraction

00:07:00.846 --> 00:07:02.456 A:middle
method that's used for adding,

00:07:02.526 --> 00:07:03.556 A:middle
drag and drop support.

00:07:03.856 --> 00:07:06.906 A:middle
Here's how the interaction for

00:07:06.906 --> 00:07:08.526 A:middle
the Large Content Viewer works.

00:07:08.846 --> 00:07:10.806 A:middle
It's got a few properties on it.

00:07:11.276 --> 00:07:12.896 A:middle
In the simple case, you can

00:07:12.896 --> 00:07:14.356 A:middle
create an instance of this

00:07:14.356 --> 00:07:15.936 A:middle
interaction with no arguments

00:07:16.156 --> 00:07:17.746 A:middle
and you don't need to touch any

00:07:17.746 --> 00:07:18.896 A:middle
of the other properties here.

00:07:19.416 --> 00:07:21.426 A:middle
But if your app has other

00:07:21.426 --> 00:07:23.206 A:middle
gesture recognizers, you may

00:07:23.206 --> 00:07:24.706 A:middle
need to customize the behavior.

00:07:25.866 --> 00:07:27.676 A:middle
You can provide a delegate to

00:07:27.676 --> 00:07:29.436 A:middle
get fine-grained control over

00:07:29.436 --> 00:07:30.306 A:middle
how it works.

00:07:31.156 --> 00:07:32.396 A:middle
You can also use the

00:07:32.396 --> 00:07:34.516 A:middle
gestureRecognizer property if

00:07:34.516 --> 00:07:36.246 A:middle
you need to set up relationships

00:07:36.246 --> 00:07:37.776 A:middle
with your app's other gesture

00:07:37.776 --> 00:07:38.546 A:middle
recognizers.

00:07:39.206 --> 00:07:41.806 A:middle
Finally, to find out whether the

00:07:41.806 --> 00:07:43.606 A:middle
Large Content Viewer is enabled,

00:07:43.936 --> 00:07:45.456 A:middle
you can check the isEnabled

00:07:45.456 --> 00:07:46.006 A:middle
property.

00:07:46.536 --> 00:07:48.096 A:middle
And of course, you can listen

00:07:48.096 --> 00:07:49.796 A:middle
for the notification to see when

00:07:49.796 --> 00:07:50.536 A:middle
that changes.

00:07:52.356 --> 00:07:53.836 A:middle
There are a few ways to

00:07:53.836 --> 00:07:55.666 A:middle
customize the behavior using the

00:07:55.666 --> 00:07:56.136 A:middle
delegate.

00:07:57.836 --> 00:08:00.026 A:middle
First, you can specify what

00:07:57.836 --> 00:08:00.026 A:middle
First, you can specify what

00:08:00.026 --> 00:08:01.616 A:middle
happens when the user lifts

00:08:01.616 --> 00:08:02.946 A:middle
their finger from an item in

00:08:02.946 --> 00:08:03.756 A:middle
your custom view.

00:08:04.146 --> 00:08:06.206 A:middle
It should act as though the user

00:08:06.206 --> 00:08:07.176 A:middle
tapped on that item.

00:08:07.826 --> 00:08:08.956 A:middle
If you don't implement this

00:08:08.956 --> 00:08:10.436 A:middle
method and you're using a

00:08:10.436 --> 00:08:12.326 A:middle
standard UI control like UI

00:08:12.326 --> 00:08:14.376 A:middle
button, by default it will get

00:08:14.376 --> 00:08:16.306 A:middle
sent a touchup inside event.

00:08:16.926 --> 00:08:18.556 A:middle
But if you got something more

00:08:18.556 --> 00:08:21.086 A:middle
custom there, for example a view

00:08:21.086 --> 00:08:22.376 A:middle
with its own tap gesture

00:08:22.376 --> 00:08:24.136 A:middle
recognizer, you can implement

00:08:24.136 --> 00:08:25.396 A:middle
this method to provide the

00:08:25.396 --> 00:08:26.376 A:middle
behavior you need.

00:08:27.206 --> 00:08:29.316 A:middle
Next, there's an option to

00:08:29.316 --> 00:08:31.026 A:middle
provide the item at a particular

00:08:31.026 --> 00:08:31.426 A:middle
point.

00:08:31.946 --> 00:08:33.706 A:middle
By default, the item will be

00:08:33.706 --> 00:08:35.366 A:middle
found by calling point inside

00:08:35.366 --> 00:08:37.236 A:middle
with event recursively on your

00:08:37.236 --> 00:08:38.106 A:middle
view hierarchy.

00:08:38.765 --> 00:08:40.836 A:middle
But that might not work if you

00:08:40.876 --> 00:08:42.496 A:middle
aren't using views for example.

00:08:42.986 --> 00:08:45.356 A:middle
So, this method lets you return

00:08:45.356 --> 00:08:47.136 A:middle
which item should be shown in

00:08:47.136 --> 00:08:48.386 A:middle
the viewer for a particular

00:08:48.386 --> 00:08:48.816 A:middle
point.

00:08:50.016 --> 00:08:52.346 A:middle
Finally, you can decide which

00:08:52.346 --> 00:08:53.836 A:middle
viewController should house the

00:08:53.836 --> 00:08:54.916 A:middle
Large Content Viewer.

00:08:55.456 --> 00:08:57.446 A:middle
By default, UIKit will try to

00:08:57.446 --> 00:08:58.956 A:middle
pick a viewController that

00:08:58.956 --> 00:09:00.596 A:middle
contains the view that you added

00:08:58.956 --> 00:09:00.596 A:middle
contains the view that you added

00:09:00.596 --> 00:09:01.556 A:middle
the interaction to.

00:09:02.406 --> 00:09:03.796 A:middle
But if that default choice

00:09:03.796 --> 00:09:05.166 A:middle
doesn't work well for your app,

00:09:05.326 --> 00:09:06.536 A:middle
you can specify one here.

00:09:08.556 --> 00:09:10.236 A:middle
So, we've covered the API.

00:09:11.026 --> 00:09:12.616 A:middle
Now let's look at some examples

00:09:12.616 --> 00:09:14.206 A:middle
showing how to use it.

00:09:15.776 --> 00:09:17.696 A:middle
First, let's look at a simple

00:09:17.696 --> 00:09:18.136 A:middle
case.

00:09:18.616 --> 00:09:20.446 A:middle
You've got a custom bar but

00:09:20.446 --> 00:09:22.606 A:middle
inside you've got standard UIKit

00:09:22.606 --> 00:09:23.056 A:middle
views.

00:09:23.426 --> 00:09:25.546 A:middle
Here we've got a bar with a UI

00:09:25.546 --> 00:09:27.096 A:middle
button and a UI label.

00:09:28.816 --> 00:09:30.446 A:middle
Because we're using standard

00:09:30.446 --> 00:09:32.856 A:middle
views, all we need to do is up

00:09:32.856 --> 00:09:35.006 A:middle
to the button and the label in

00:09:35.316 --> 00:09:35.786 A:middle
using the

00:09:35.786 --> 00:09:37.226 A:middle
showsLargeContentViewer

00:09:37.226 --> 00:09:37.786 A:middle
property.

00:09:38.166 --> 00:09:39.876 A:middle
There's no need to specify a

00:09:39.876 --> 00:09:42.076 A:middle
title or an image since those

00:09:42.076 --> 00:09:43.596 A:middle
can be inferred from the views

00:09:43.596 --> 00:09:44.406 A:middle
of the properties.

00:09:45.336 --> 00:09:47.166 A:middle
Finally, we can add the gesture

00:09:47.166 --> 00:09:48.646 A:middle
interaction to the custom bar

00:09:48.906 --> 00:09:50.446 A:middle
with no need to modify any

00:09:50.446 --> 00:09:50.956 A:middle
properties.

00:09:51.296 --> 00:09:52.296 A:middle
That's it.

00:09:53.556 --> 00:09:55.246 A:middle
If your custom bar uses

00:09:55.246 --> 00:09:56.806 A:middle
something else for its buttons,

00:09:57.106 --> 00:09:58.496 A:middle
then you'll need some of the

00:09:58.496 --> 00:09:59.076 A:middle
other API.

00:09:59.826 --> 00:10:01.696 A:middle
Let's say each of your buttons

00:09:59.826 --> 00:10:01.696 A:middle
Let's say each of your buttons

00:10:01.696 --> 00:10:03.836 A:middle
is an instance of a MyButton

00:10:03.836 --> 00:10:04.786 A:middle
custom class.

00:10:05.326 --> 00:10:08.406 A:middle
You can override the UI Large

00:10:08.406 --> 00:10:10.086 A:middle
Content Viewer item properties

00:10:10.176 --> 00:10:11.806 A:middle
on your buttons to return the

00:10:11.806 --> 00:10:12.366 A:middle
right info.

00:10:13.136 --> 00:10:15.166 A:middle
Here we're returning true for

00:10:15.166 --> 00:10:17.596 A:middle
showsLargeContentViewer and

00:10:17.736 --> 00:10:19.236 A:middle
we're returning our text as the

00:10:19.236 --> 00:10:19.606 A:middle
title.

00:10:21.116 --> 00:10:23.226 A:middle
If you have an image with vector

00:10:23.226 --> 00:10:25.466 A:middle
data for each button, then you

00:10:25.466 --> 00:10:27.186 A:middle
can use the exact same image for

00:10:27.186 --> 00:10:28.406 A:middle
the Large Content Viewer.

00:10:29.266 --> 00:10:31.006 A:middle
Just make sure to return true

00:10:31.006 --> 00:10:33.406 A:middle
for scalesLargeContentImage so

00:10:33.406 --> 00:10:34.696 A:middle
that it grows to the correct

00:10:34.696 --> 00:10:35.226 A:middle
size.

00:10:36.656 --> 00:10:38.666 A:middle
Finally, let's look at an

00:10:38.666 --> 00:10:40.436 A:middle
example when you need to deal

00:10:40.436 --> 00:10:42.036 A:middle
with another gesture recognizer.

00:10:42.036 --> 00:10:44.436 A:middle
A classic example from one of

00:10:44.436 --> 00:10:46.126 A:middle
Apple's apps is in Safari.

00:10:46.866 --> 00:10:48.366 A:middle
When you tap on the Back button,

00:10:48.596 --> 00:10:50.326 A:middle
it goes to the previous page.

00:10:50.826 --> 00:10:52.356 A:middle
But when you long press on it,

00:10:52.716 --> 00:10:54.156 A:middle
it brings you to page with your

00:10:54.156 --> 00:10:55.396 A:middle
past browsing history.

00:10:56.166 --> 00:10:57.956 A:middle
The Large Content Viewer also

00:10:57.956 --> 00:10:59.436 A:middle
uses a long press gesture.

00:11:00.056 --> 00:11:02.666 A:middle
So how do you get those to work

00:11:03.936 --> 00:11:04.136 A:middle
together?

00:11:04.436 --> 00:11:06.276 A:middle
You should absolutely allow both

00:11:06.276 --> 00:11:06.936 A:middle
things to work.

00:11:07.546 --> 00:11:09.436 A:middle
In other words, let the Large

00:11:09.436 --> 00:11:11.266 A:middle
Content Viewer show so that

00:11:11.266 --> 00:11:12.426 A:middle
people can see what's on the

00:11:12.426 --> 00:11:12.876 A:middle
button.

00:11:13.486 --> 00:11:15.216 A:middle
But once they've had a chance to

00:11:15.216 --> 00:11:17.006 A:middle
read it, do the thing you would

00:11:17.006 --> 00:11:18.586 A:middle
normally do on long press.

00:11:19.606 --> 00:11:21.386 A:middle
To do that, first, let's

00:11:21.386 --> 00:11:22.786 A:middle
increase our existing

00:11:22.846 --> 00:11:24.866 A:middle
longPressRecognizer's duration.

00:11:25.466 --> 00:11:26.916 A:middle
That way we'll give people some

00:11:26.916 --> 00:11:28.576 A:middle
extra time to show the viewer

00:11:28.576 --> 00:11:30.616 A:middle
first before we do the other

00:11:30.616 --> 00:11:31.106 A:middle
action.

00:11:31.766 --> 00:11:34.036 A:middle
You should also make sure you

00:11:34.036 --> 00:11:35.586 A:middle
update the duration if people's

00:11:35.586 --> 00:11:36.566 A:middle
setting change.

00:11:37.116 --> 00:11:39.026 A:middle
If they start or stop using one

00:11:39.026 --> 00:11:40.766 A:middle
of the Accessibility text sizes,

00:11:41.076 --> 00:11:43.056 A:middle
the duration should also update.

00:11:44.306 --> 00:11:45.676 A:middle
Next, let's set a

00:11:45.676 --> 00:11:47.926 A:middle
UIGestureRecognizer delegate on

00:11:47.926 --> 00:11:48.706 A:middle
the existing

00:11:48.766 --> 00:11:49.886 A:middle
longPressRecognizer.

00:11:51.366 --> 00:11:53.406 A:middle
Now, in your delegate callbacks,

00:11:53.766 --> 00:11:55.386 A:middle
you can make sure that both of

00:11:55.386 --> 00:11:55.966 A:middle
your existing

00:11:55.966 --> 00:11:58.106 A:middle
longPressRecognizer and the

00:11:58.106 --> 00:11:59.576 A:middle
gestureRecognizer from the Large

00:11:59.576 --> 00:12:01.316 A:middle
Content Viewer can recognize at

00:11:59.576 --> 00:12:01.316 A:middle
Content Viewer can recognize at

00:12:01.316 --> 00:12:02.216 A:middle
the same time.

00:12:02.466 --> 00:12:04.446 A:middle
That way, neither one of them

00:12:04.526 --> 00:12:05.766 A:middle
will prevent the other from

00:12:05.766 --> 00:12:06.156 A:middle
working.

00:12:07.456 --> 00:12:09.476 A:middle
Here, we can see the behavior

00:12:09.476 --> 00:12:10.976 A:middle
with our Large Content Viewer

00:12:11.036 --> 00:12:11.866 A:middle
implementation.

00:12:12.606 --> 00:12:14.576 A:middle
If I lift my finger while the

00:12:14.576 --> 00:12:16.156 A:middle
Large Content Viewer is visible,

00:12:16.286 --> 00:12:17.806 A:middle
I go back as expected.

00:12:18.336 --> 00:12:19.936 A:middle
However, if I long press for the

00:12:19.936 --> 00:12:21.676 A:middle
longer duration, I can still get

00:12:21.676 --> 00:12:22.746 A:middle
to that browsing history.

00:12:23.286 --> 00:12:25.836 A:middle
So that's how your app can

00:12:25.836 --> 00:12:27.306 A:middle
accommodate people who prefer

00:12:27.306 --> 00:12:29.426 A:middle
larger text sizes even for UI

00:12:29.656 --> 00:12:30.886 A:middle
that needs to stay small.

00:12:30.886 --> 00:12:33.176 A:middle
Note that you should only use

00:12:33.176 --> 00:12:35.066 A:middle
the Large Content Viewer for UI

00:12:35.236 --> 00:12:36.136 A:middle
that can't scale.

00:12:36.836 --> 00:12:38.436 A:middle
Scaling for Dynamic Type is

00:12:38.436 --> 00:12:39.846 A:middle
always the preferred option.

00:12:40.146 --> 00:12:41.936 A:middle
So if you can do that, don't use

00:12:41.936 --> 00:12:42.386 A:middle
this as API.

00:12:43.396 --> 00:12:45.696 A:middle
Finally, if your custom view has

00:12:45.696 --> 00:12:47.516 A:middle
other interactions, make sure

00:12:47.656 --> 00:12:48.676 A:middle
that those are all still

00:12:48.676 --> 00:12:50.656 A:middle
possible for people who use the

00:12:50.656 --> 00:12:51.606 A:middle
Large Content Viewer.

00:12:52.206 --> 00:12:54.026 A:middle
That way, everyone can use all

00:12:54.026 --> 00:12:55.516 A:middle
of your app's great features.

00:12:55.966 --> 00:12:56.836 A:middle
That's it for now.

00:12:57.156 --> 00:12:57.966 A:middle
Thanks for watching.
