WEBVTT

00:00:01.516 --> 00:00:04.500 A:middle
[ Music ]

00:00:06.516 --> 00:00:09.016 A:middle
[ Applause ]

00:00:09.516 --> 00:00:11.056 A:middle
&gt;&gt; Good morning everyone, my

00:00:11.056 --> 00:00:12.736 A:middle
name is Michael Gorbach and I'll

00:00:12.736 --> 00:00:13.666 A:middle
be presenting today with my

00:00:13.666 --> 00:00:15.226 A:middle
colleague John Nefulda from

00:00:15.226 --> 00:00:18.296 A:middle
Apple's Accessibility team.

00:00:18.506 --> 00:00:20.536 A:middle
I'm sure all of you are excited

00:00:20.576 --> 00:00:22.276 A:middle
about SwiftUI and how it can

00:00:22.276 --> 00:00:24.086 A:middle
help you build better apps

00:00:24.256 --> 00:00:25.886 A:middle
faster and easier.

00:00:27.046 --> 00:00:29.176 A:middle
I am also really excited about

00:00:29.176 --> 00:00:31.436 A:middle
SwiftUI and specifically, I'm

00:00:31.436 --> 00:00:33.916 A:middle
excited about its potential for

00:00:33.916 --> 00:00:34.676 A:middle
Accessibility.

00:00:35.656 --> 00:00:36.566 A:middle
We're going to tell you today

00:00:36.566 --> 00:00:38.476 A:middle
how SwiftUI can help you build

00:00:38.686 --> 00:00:41.316 A:middle
the next generation of apps for

00:00:41.316 --> 00:00:42.676 A:middle
all of your users.

00:00:43.176 --> 00:00:46.496 A:middle
We're going to kick it off with

00:00:46.546 --> 00:00:48.436 A:middle
a quick introduction to

00:00:48.436 --> 00:00:50.506 A:middle
Accessibility and our

00:00:50.506 --> 00:00:51.946 A:middle
Accessibility technologies on

00:00:51.946 --> 00:00:52.716 A:middle
our platforms.

00:00:55.216 --> 00:00:58.426 A:middle
Then talk a little bit about how

00:00:58.426 --> 00:01:00.346 A:middle
SwiftUI make your -- makes your

00:00:58.426 --> 00:01:00.346 A:middle
SwiftUI make your -- makes your

00:01:00.346 --> 00:01:02.676 A:middle
apps more accessible by default.

00:01:03.246 --> 00:01:06.186 A:middle
John is going to come in and

00:01:06.186 --> 00:01:07.266 A:middle
take us through the

00:01:07.266 --> 00:01:09.306 A:middle
Accessibility API that we are

00:01:09.306 --> 00:01:10.546 A:middle
introducing today.

00:01:11.146 --> 00:01:13.616 A:middle
And, also take us through the

00:01:13.616 --> 00:01:15.906 A:middle
Accessibility Tree that SwiftUI

00:01:15.906 --> 00:01:17.446 A:middle
generates for us in our

00:01:17.446 --> 00:01:17.976 A:middle
applications.

00:01:21.556 --> 00:01:23.186 A:middle
So, let's start with that

00:01:23.186 --> 00:01:23.706 A:middle
introduction.

00:01:24.866 --> 00:01:26.896 A:middle
What do we mean when we throw

00:01:26.896 --> 00:01:28.606 A:middle
around this word Accessibility

00:01:28.606 --> 00:01:28.886 A:middle
today?

00:01:30.066 --> 00:01:32.046 A:middle
Well, all of you have put a ton

00:01:32.046 --> 00:01:33.726 A:middle
of work into your applications

00:01:34.246 --> 00:01:36.166 A:middle
to make them fun and functional,

00:01:36.546 --> 00:01:38.416 A:middle
helpful and a joy to use.

00:01:39.766 --> 00:01:42.166 A:middle
Given all of that work you want

00:01:42.166 --> 00:01:43.906 A:middle
your apps to be useable by all

00:01:43.906 --> 00:01:45.606 A:middle
of your potential customers.

00:01:45.796 --> 00:01:46.896 A:middle
Not just some of them.

00:01:48.036 --> 00:01:49.566 A:middle
That's really what Accessibility

00:01:49.566 --> 00:01:50.386 A:middle
is all about.

00:01:50.496 --> 00:01:52.226 A:middle
It's about giving customers with

00:01:52.226 --> 00:01:54.616 A:middle
disabilities full access to the

00:01:54.616 --> 00:01:56.606 A:middle
value that your app provides.

00:01:57.706 --> 00:01:59.076 A:middle
And that means more happy

00:01:59.076 --> 00:02:00.176 A:middle
customers for you.

00:01:59.076 --> 00:02:00.176 A:middle
customers for you.

00:02:01.546 --> 00:02:03.376 A:middle
It is also especially great for

00:02:03.376 --> 00:02:04.486 A:middle
your customers with

00:02:04.556 --> 00:02:05.126 A:middle
disabilities.

00:02:06.386 --> 00:02:08.306 A:middle
On our various devices like Macs

00:02:08.586 --> 00:02:10.626 A:middle
and iPhones, Watches and

00:02:10.626 --> 00:02:12.866 A:middle
HomePods, Apples technologies

00:02:12.916 --> 00:02:14.636 A:middle
enable people with disabilities

00:02:14.846 --> 00:02:16.366 A:middle
to live fuller lives.

00:02:17.626 --> 00:02:19.296 A:middle
They open up possibilities for

00:02:19.296 --> 00:02:21.286 A:middle
them that did not exist just a

00:02:21.286 --> 00:02:22.286 A:middle
few years ago.

00:02:22.866 --> 00:02:25.436 A:middle
A huge part of how that happens

00:02:25.436 --> 00:02:26.936 A:middle
in practice is through your

00:02:26.936 --> 00:02:27.836 A:middle
applications.

00:02:28.416 --> 00:02:30.086 A:middle
Yes, your apps can change

00:02:30.086 --> 00:02:30.766 A:middle
people's lives.

00:02:31.346 --> 00:02:32.556 A:middle
But for that to happen you need

00:02:32.556 --> 00:02:34.376 A:middle
to do a little work to make them

00:02:34.376 --> 00:02:35.416 A:middle
fully accessible.

00:02:38.976 --> 00:02:41.076 A:middle
When folks with disabilities

00:02:41.166 --> 00:02:43.056 A:middle
interact with your applications,

00:02:43.156 --> 00:02:45.286 A:middle
they will generally use Apple's

00:02:45.286 --> 00:02:47.336 A:middle
built in Accessibility features.

00:02:48.066 --> 00:02:49.776 A:middle
We've got a whole array of these

00:02:49.776 --> 00:02:50.966 A:middle
shipping across our many

00:02:50.966 --> 00:02:51.686 A:middle
platforms.

00:02:51.866 --> 00:02:53.426 A:middle
I'm going to focus on one of

00:02:53.426 --> 00:02:54.936 A:middle
them first called VoiceOver.

00:02:57.066 --> 00:02:58.836 A:middle
VoiceOver is a screen reader

00:02:59.096 --> 00:03:00.576 A:middle
available across all our

00:02:59.096 --> 00:03:00.576 A:middle
available across all our

00:03:00.576 --> 00:03:01.166 A:middle
platforms.

00:03:01.626 --> 00:03:03.236 A:middle
It's a product that lets folks

00:03:03.296 --> 00:03:05.176 A:middle
with low to no vision use their

00:03:05.176 --> 00:03:07.026 A:middle
Apple devices without needing to

00:03:07.026 --> 00:03:08.216 A:middle
see their screens.

00:03:09.316 --> 00:03:11.416 A:middle
The way it does this is by

00:03:11.546 --> 00:03:12.186 A:middle
reading to you.

00:03:12.866 --> 00:03:14.336 A:middle
VoiceOver lets you step through

00:03:14.336 --> 00:03:15.496 A:middle
the elements on your screen,

00:03:15.766 --> 00:03:17.166 A:middle
taking each one of them in turn,

00:03:17.736 --> 00:03:19.216 A:middle
and reads information to you

00:03:19.216 --> 00:03:20.726 A:middle
about those elements like the

00:03:20.726 --> 00:03:22.656 A:middle
titles of buttons, the names of

00:03:22.656 --> 00:03:24.796 A:middle
images, and the values of text

00:03:24.796 --> 00:03:25.176 A:middle
fields.

00:03:26.456 --> 00:03:28.406 A:middle
It also lets you use gestures on

00:03:28.566 --> 00:03:30.576 A:middle
iOS or keyboard keys on the Mac

00:03:31.116 --> 00:03:32.906 A:middle
to interact with those elements

00:03:33.086 --> 00:03:34.976 A:middle
and kick off their associated

00:03:35.046 --> 00:03:35.506 A:middle
actions.

00:03:36.256 --> 00:03:37.616 A:middle
Here's VoiceOver on the Mac

00:03:37.896 --> 00:03:39.236 A:middle
interacting with Calculator.

00:03:39.906 --> 00:03:41.516 A:middle
VoiceOver is reading to us here

00:03:41.646 --> 00:03:42.916 A:middle
and it's showing what it's

00:03:42.916 --> 00:03:45.226 A:middle
reading in the bottom right as

00:03:45.976 --> 00:03:46.136 A:middle
well.

00:03:46.876 --> 00:03:49.236 A:middle
There are also two really cool

00:03:49.236 --> 00:03:51.026 A:middle
new items in this long list this

00:03:51.026 --> 00:03:51.226 A:middle
year.

00:03:51.856 --> 00:03:53.536 A:middle
The first is Voice Control.

00:03:53.536 --> 00:03:55.296 A:middle
I'm sure you all have seen the

00:03:55.296 --> 00:03:56.426 A:middle
amazing demos.

00:03:58.556 --> 00:04:00.856 A:middle
The second -- yes, it is

00:03:58.556 --> 00:04:00.856 A:middle
The second -- yes, it is

00:04:00.856 --> 00:04:01.276 A:middle
amazing.

00:04:03.646 --> 00:04:05.306 A:middle
The second is Full Keyboard

00:04:05.476 --> 00:04:05.876 A:middle
Access.

00:04:06.046 --> 00:04:07.996 A:middle
Totally new on iOS this year and

00:04:08.056 --> 00:04:09.306 A:middle
greatly enhanced on the Mac.

00:04:10.216 --> 00:04:11.576 A:middle
Full Keyboard Access lets you

00:04:11.576 --> 00:04:13.646 A:middle
use your Mac of iOS devices

00:04:13.646 --> 00:04:15.946 A:middle
entirely with just a keyboard.

00:04:17.276 --> 00:04:19.326 A:middle
It is a great, fast and fluid

00:04:19.326 --> 00:04:21.136 A:middle
way to get things one on your

00:04:21.136 --> 00:04:21.856 A:middle
Apple devices.

00:04:23.056 --> 00:04:24.446 A:middle
We are confident that this

00:04:24.486 --> 00:04:25.666 A:middle
feature is really going to get

00:04:25.666 --> 00:04:27.746 A:middle
used not just for accessibility

00:04:27.816 --> 00:04:29.906 A:middle
purposes, but also just by folks

00:04:29.906 --> 00:04:31.256 A:middle
looking to be extra productive

00:04:31.526 --> 00:04:32.586 A:middle
on their Apple devices.

00:04:32.826 --> 00:04:34.326 A:middle
Move around screens, kick off

00:04:34.326 --> 00:04:34.776 A:middle
commands.

00:04:35.996 --> 00:04:37.326 A:middle
Here's Full Keyboard Access

00:04:37.326 --> 00:04:38.646 A:middle
interacting with the Calculator

00:04:38.646 --> 00:04:39.116 A:middle
on iOS.

00:04:39.826 --> 00:04:41.436 A:middle
Notice the highlighted 8 key

00:04:41.436 --> 00:04:42.936 A:middle
showing us where the keyboard

00:04:42.936 --> 00:04:44.266 A:middle
focus is.

00:04:45.056 --> 00:04:47.016 A:middle
These two great features are

00:04:47.016 --> 00:04:48.506 A:middle
perfect examples of something

00:04:48.666 --> 00:04:50.596 A:middle
we've learned on our team time

00:04:50.596 --> 00:04:51.166 A:middle
and time again.

00:04:51.976 --> 00:04:53.866 A:middle
Accessibility is for everyone.

00:04:54.336 --> 00:04:55.526 A:middle
Not just for people with

00:04:55.526 --> 00:04:56.146 A:middle
disabilities.

00:04:56.776 --> 00:04:57.996 A:middle
That is why the little bit of

00:04:57.996 --> 00:04:59.416 A:middle
work you do on your app for

00:04:59.416 --> 00:05:01.306 A:middle
Accessibility has such a broad

00:04:59.416 --> 00:05:01.306 A:middle
Accessibility has such a broad

00:05:04.346 --> 00:05:04.536 A:middle
impact.

00:05:04.716 --> 00:05:06.536 A:middle
Now, one of the best things

00:05:06.536 --> 00:05:09.346 A:middle
about our platforms is that many

00:05:09.346 --> 00:05:10.786 A:middle
of the features on this slide,

00:05:10.786 --> 00:05:11.986 A:middle
including all the ones we just

00:05:11.986 --> 00:05:13.626 A:middle
discussed, use the same

00:05:13.726 --> 00:05:15.196 A:middle
underlying technologies.

00:05:16.026 --> 00:05:17.456 A:middle
If you implement Accessibility

00:05:17.456 --> 00:05:18.826 A:middle
in your app well it will work

00:05:18.826 --> 00:05:21.846 A:middle
great with all of them.

00:05:22.056 --> 00:05:23.426 A:middle
All these features ultimately

00:05:23.426 --> 00:05:24.766 A:middle
rely on information that your

00:05:24.996 --> 00:05:26.956 A:middle
app exposes to our platforms.

00:05:27.376 --> 00:05:28.906 A:middle
The better this information, the

00:05:28.906 --> 00:05:29.926 A:middle
better these features are going

00:05:29.926 --> 00:05:30.216 A:middle
to work.

00:05:31.076 --> 00:05:32.696 A:middle
We call this information your

00:05:32.696 --> 00:05:34.496 A:middle
apps Accessibility User

00:05:34.496 --> 00:05:35.246 A:middle
Interface.

00:05:35.766 --> 00:05:38.606 A:middle
What actually goes into one of

00:05:38.606 --> 00:05:38.976 A:middle
these?

00:05:39.146 --> 00:05:40.886 A:middle
Well, let's take a quick look at

00:05:40.886 --> 00:05:42.506 A:middle
Calculator just as a simple

00:05:42.506 --> 00:05:44.286 A:middle
example, and take it apart.

00:05:45.636 --> 00:05:47.816 A:middle
The Accessibility User Interface

00:05:47.816 --> 00:05:49.896 A:middle
your app exposes to us consists

00:05:49.896 --> 00:05:51.526 A:middle
of Accessibility elements.

00:05:52.116 --> 00:05:54.326 A:middle
Each view in Calculator forms

00:05:54.436 --> 00:05:55.936 A:middle
one Accessibility element here.

00:05:56.496 --> 00:05:59.036 A:middle
In this case, most of these

00:05:59.036 --> 00:06:00.276 A:middle
Accessibility elements are

00:05:59.036 --> 00:06:00.276 A:middle
Accessibility elements are

00:06:00.356 --> 00:06:00.616 A:middle
buttons.

00:06:01.176 --> 00:06:02.466 A:middle
So, let's take a look at one of

00:06:02.496 --> 00:06:03.366 A:middle
them in particular.

00:06:04.246 --> 00:06:06.476 A:middle
Here is the X button on the left

00:06:06.836 --> 00:06:08.506 A:middle
and its Accessibility element on

00:06:08.506 --> 00:06:08.816 A:middle
the right.

00:06:10.066 --> 00:06:11.656 A:middle
Notice that it's got a label for

00:06:11.656 --> 00:06:12.456 A:middle
VoiceOver to read.

00:06:13.196 --> 00:06:14.016 A:middle
You're going to want a label

00:06:14.016 --> 00:06:14.996 A:middle
like this for all of your

00:06:14.996 --> 00:06:17.356 A:middle
elements so a VoiceOver knows

00:06:17.496 --> 00:06:19.386 A:middle
where they are in your app.

00:06:19.956 --> 00:06:21.916 A:middle
In this case, the developers of

00:06:21.916 --> 00:06:22.926 A:middle
the Calculator app have

00:06:22.976 --> 00:06:24.386 A:middle
customized the default label

00:06:24.516 --> 00:06:26.216 A:middle
from the simple X to the text

00:06:26.356 --> 00:06:26.876 A:middle
multiply.

00:06:28.176 --> 00:06:29.866 A:middle
This element also has a type.

00:06:30.436 --> 00:06:32.126 A:middle
On iOS that's described using

00:06:32.186 --> 00:06:34.086 A:middle
traits and on macOS it's

00:06:34.086 --> 00:06:35.486 A:middle
described using roles.

00:06:35.976 --> 00:06:37.326 A:middle
That type here is button.

00:06:38.236 --> 00:06:40.286 A:middle
And finally, this button element

00:06:40.286 --> 00:06:41.616 A:middle
has a default action.

00:06:42.156 --> 00:06:45.106 A:middle
Press on macOS or tap on iOS.

00:06:45.456 --> 00:06:47.056 A:middle
A VoiceOver user can use this

00:06:47.056 --> 00:06:49.146 A:middle
action to interact with the

00:06:49.146 --> 00:06:49.586 A:middle
element.

00:06:49.986 --> 00:06:53.616 A:middle
Let's take a look at one more.

00:06:54.226 --> 00:06:55.776 A:middle
This is the display at the top

00:06:55.876 --> 00:06:57.446 A:middle
showing us the results of our

00:06:57.446 --> 00:06:58.136 A:middle
calculation.

00:06:59.136 --> 00:07:00.446 A:middle
We can see that the developers

00:06:59.136 --> 00:07:00.446 A:middle
We can see that the developers

00:07:00.446 --> 00:07:01.896 A:middle
have given it a label named

00:07:01.896 --> 00:07:02.276 A:middle
display.

00:07:03.376 --> 00:07:05.006 A:middle
It is also exposing another

00:07:05.006 --> 00:07:06.736 A:middle
important piece of information

00:07:06.926 --> 00:07:08.716 A:middle
called a value, that holds the

00:07:08.716 --> 00:07:10.156 A:middle
current text its showing.

00:07:11.556 --> 00:07:13.236 A:middle
It has no default action since

00:07:13.236 --> 00:07:14.716 A:middle
you can't right now interact

00:07:14.716 --> 00:07:15.366 A:middle
with this element.

00:07:16.986 --> 00:07:18.786 A:middle
Default actions though are not

00:07:18.786 --> 00:07:20.426 A:middle
the only way your Accessibility

00:07:20.426 --> 00:07:22.026 A:middle
customers are going to interact

00:07:22.406 --> 00:07:24.086 A:middle
with your app and its elements.

00:07:24.686 --> 00:07:27.066 A:middle
You can add custom named actions

00:07:27.266 --> 00:07:28.886 A:middle
to any Accessibility element in

00:07:28.886 --> 00:07:29.116 A:middle
your app.

00:07:29.876 --> 00:07:31.046 A:middle
For example, we could add a

00:07:31.046 --> 00:07:32.456 A:middle
Custom Action on this one called

00:07:32.496 --> 00:07:34.186 A:middle
clear, which would clear the

00:07:34.186 --> 00:07:34.606 A:middle
display.

00:07:34.646 --> 00:07:38.236 A:middle
So that is Calculator's

00:07:38.236 --> 00:07:40.256 A:middle
Accessibility User Interface.

00:07:41.146 --> 00:07:42.566 A:middle
Your app has one too.

00:07:43.286 --> 00:07:44.386 A:middle
A lot of it is going to get

00:07:44.386 --> 00:07:45.796 A:middle
created for you automatically,

00:07:45.796 --> 00:07:46.986 A:middle
but with a little bit of work

00:07:46.986 --> 00:07:49.006 A:middle
you can make it a whole lot

00:07:50.116 --> 00:07:50.256 A:middle
better.

00:07:50.436 --> 00:07:52.746 A:middle
You relentlessly polish the

00:07:52.746 --> 00:07:54.496 A:middle
visual user interfaces on your

00:07:54.706 --> 00:07:54.916 A:middle
apps.

00:07:55.686 --> 00:07:56.906 A:middle
In a similar way you should

00:07:56.906 --> 00:07:58.806 A:middle
polish your Accessibility User

00:07:58.806 --> 00:07:59.936 A:middle
Interface as well.

00:08:00.946 --> 00:08:02.626 A:middle
Here are three key things to

00:08:02.626 --> 00:08:03.496 A:middle
look for which we're going to

00:08:03.496 --> 00:08:04.836 A:middle
show you how to do today.

00:08:06.176 --> 00:08:08.216 A:middle
First, your Accessibility

00:08:08.216 --> 00:08:09.216 A:middle
elements should be

00:08:09.216 --> 00:08:09.986 A:middle
understandable.

00:08:10.546 --> 00:08:11.726 A:middle
They should have reasonable

00:08:11.726 --> 00:08:13.746 A:middle
labels, values, and other

00:08:13.746 --> 00:08:15.006 A:middle
describing information.

00:08:15.176 --> 00:08:16.866 A:middle
An example of this is how

00:08:16.926 --> 00:08:18.626 A:middle
Calculator changed the label of

00:08:18.626 --> 00:08:20.666 A:middle
the X button to multiple so it's

00:08:20.706 --> 00:08:21.626 A:middle
easier to understand.

00:08:22.136 --> 00:08:25.066 A:middle
Your elements should also be

00:08:25.106 --> 00:08:25.826 A:middle
interactable.

00:08:26.416 --> 00:08:28.366 A:middle
That means, appropriate default

00:08:28.366 --> 00:08:30.246 A:middle
actions and Custom Actions

00:08:30.356 --> 00:08:31.496 A:middle
wherever they are needed.

00:08:32.226 --> 00:08:33.736 A:middle
Adding that clear action to the

00:08:33.736 --> 00:08:35.126 A:middle
main display as we just talked

00:08:35.126 --> 00:08:36.756 A:middle
about is an example of this.

00:08:37.996 --> 00:08:39.496 A:middle
And finally, your elements

00:08:39.496 --> 00:08:40.676 A:middle
should be navigable.

00:08:41.296 --> 00:08:42.726 A:middle
Carefully thinking through the

00:08:42.756 --> 00:08:44.216 A:middle
ordering of your Accessibility

00:08:44.216 --> 00:08:45.856 A:middle
elements and grouping them as

00:08:45.856 --> 00:08:47.726 A:middle
needed will really make your app

00:08:47.756 --> 00:08:49.536 A:middle
more useable with our

00:08:49.536 --> 00:08:50.806 A:middle
Accessibility features.

00:08:51.346 --> 00:08:54.486 A:middle
So, if you're interested in how

00:08:54.486 --> 00:08:56.016 A:middle
to do all this fun stuff with

00:08:56.096 --> 00:08:58.186 A:middle
AppKit or UIKit we have some

00:08:58.186 --> 00:09:00.116 A:middle
great sessions for you, but not

00:08:58.186 --> 00:09:00.116 A:middle
great sessions for you, but not

00:09:00.296 --> 00:09:00.676 A:middle
this one.

00:09:01.516 --> 00:09:03.026 A:middle
Today we are going to talk about

00:09:03.136 --> 00:09:03.636 A:middle
SwiftUI.

00:09:04.356 --> 00:09:09.236 A:middle
At Apple we have always deeply

00:09:09.236 --> 00:09:11.056 A:middle
believed in the importance and

00:09:11.176 --> 00:09:12.676 A:middle
power of Accessibility.

00:09:13.496 --> 00:09:14.776 A:middle
That is why we all work

00:09:14.776 --> 00:09:16.066 A:middle
extremely hard to make

00:09:16.066 --> 00:09:17.426 A:middle
frameworks that let you folks

00:09:17.576 --> 00:09:19.596 A:middle
make accessible apps easily and

00:09:19.596 --> 00:09:20.756 A:middle
even automatically wherever

00:09:20.756 --> 00:09:21.226 A:middle
possible.

00:09:22.636 --> 00:09:24.456 A:middle
Today, because of the high level

00:09:24.456 --> 00:09:26.456 A:middle
of declarative nature of SwiftUI

00:09:26.456 --> 00:09:27.916 A:middle
and the way that it understands

00:09:27.916 --> 00:09:30.296 A:middle
your state, we can take

00:09:30.296 --> 00:09:31.896 A:middle
automatic Accessibility to a

00:09:31.896 --> 00:09:33.626 A:middle
whole new level with this new

00:09:33.626 --> 00:09:34.056 A:middle
framework.

00:09:35.206 --> 00:09:36.846 A:middle
SwiftUI can make your apps more

00:09:36.846 --> 00:09:39.446 A:middle
accessible by default and it

00:09:39.446 --> 00:09:40.636 A:middle
also gives us a powerful

00:09:40.636 --> 00:09:42.526 A:middle
foundation to do more of your

00:09:42.526 --> 00:09:44.596 A:middle
Accessibility work for you going

00:09:44.596 --> 00:09:44.976 A:middle
forward.

00:09:47.576 --> 00:09:49.966 A:middle
SwiftUI is going to generate

00:09:49.966 --> 00:09:51.536 A:middle
your Accessibility elements for

00:09:51.536 --> 00:09:53.046 A:middle
you, just like it generates

00:09:53.046 --> 00:09:54.846 A:middle
NSView and UIViews for you.

00:09:55.746 --> 00:09:57.096 A:middle
Let's take a look at this simple

00:09:57.096 --> 00:09:57.966 A:middle
SwiftUI code.

00:09:58.956 --> 00:10:00.306 A:middle
It's creating a vertical stack,

00:09:58.956 --> 00:10:00.306 A:middle
It's creating a vertical stack,

00:10:01.056 --> 00:10:03.736 A:middle
in that stack is a button, and

00:10:03.736 --> 00:10:05.446 A:middle
it is sandwiched between some

00:10:05.446 --> 00:10:05.886 A:middle
text.

00:10:08.346 --> 00:10:10.376 A:middle
SwiftUI is going to create three

00:10:10.376 --> 00:10:12.016 A:middle
Accessibility elements for you

00:10:12.016 --> 00:10:12.366 A:middle
here.

00:10:12.796 --> 00:10:14.386 A:middle
One for each of the two texts

00:10:14.386 --> 00:10:15.756 A:middle
and of course one for the

00:10:15.756 --> 00:10:16.076 A:middle
button.

00:10:17.436 --> 00:10:19.186 A:middle
Keep in mind, the Accessibility

00:10:19.186 --> 00:10:20.856 A:middle
elements that SwiftUI creates

00:10:20.856 --> 00:10:23.586 A:middle
here are not UIViews or NSViews.

00:10:24.276 --> 00:10:26.476 A:middle
Instead, they are SwiftUI's own

00:10:26.546 --> 00:10:27.886 A:middle
Accessibility elements.

00:10:28.396 --> 00:10:31.136 A:middle
We have all worked hard to make

00:10:31.136 --> 00:10:32.856 A:middle
sure that SwiftUI's standard

00:10:32.886 --> 00:10:34.566 A:middle
controls are as Accessible as

00:10:34.636 --> 00:10:36.136 A:middle
possible by default.

00:10:37.106 --> 00:10:38.106 A:middle
Notice that although these

00:10:38.106 --> 00:10:41.246 A:middle
elements are simple, they

00:10:41.246 --> 00:10:42.896 A:middle
already have all the important

00:10:42.896 --> 00:10:43.866 A:middle
information we need.

00:10:44.186 --> 00:10:45.306 A:middle
They're understandable because

00:10:45.346 --> 00:10:45.976 A:middle
they have labels.

00:10:46.936 --> 00:10:48.746 A:middle
They are intractable, the button

00:10:48.746 --> 00:10:49.436 A:middle
has an action.

00:10:49.826 --> 00:10:51.166 A:middle
And they're navigable because

00:10:51.166 --> 00:10:52.396 A:middle
they're in the correct order.

00:10:52.956 --> 00:10:56.246 A:middle
As I mentioned though, SwiftUI

00:10:56.246 --> 00:10:58.066 A:middle
does have an Accessibility API

00:10:58.186 --> 00:10:59.626 A:middle
to customize the elements it

00:10:59.626 --> 00:11:00.446 A:middle
generates for you.

00:10:59.626 --> 00:11:00.446 A:middle
generates for you.

00:11:01.246 --> 00:11:02.656 A:middle
Before we get into that though,

00:11:02.836 --> 00:11:04.086 A:middle
I wanted to talk to you about

00:11:04.086 --> 00:11:05.516 A:middle
the great Accessibility you get

00:11:05.826 --> 00:11:07.836 A:middle
with SwiftUI before you write

00:11:08.006 --> 00:11:11.826 A:middle
any Accessibility specific code.

00:11:12.696 --> 00:11:13.846 A:middle
One thing you get for free in

00:11:13.846 --> 00:11:16.006 A:middle
SwiftUI is notifications to help

00:11:16.006 --> 00:11:17.676 A:middle
keep our Accessibility features

00:11:17.676 --> 00:11:19.836 A:middle
like VoiceOver up to date

00:11:19.836 --> 00:11:21.066 A:middle
regarding what is going on in

00:11:21.066 --> 00:11:22.526 A:middle
your app.

00:11:22.566 --> 00:11:24.016 A:middle
Remember, the Accessibility

00:11:24.016 --> 00:11:25.416 A:middle
features I talked about earlier

00:11:25.416 --> 00:11:26.756 A:middle
are all based on the

00:11:26.756 --> 00:11:28.666 A:middle
Accessibility elements that your

00:11:28.666 --> 00:11:29.696 A:middle
app exposes.

00:11:31.276 --> 00:11:32.876 A:middle
While running, VoiceOver's going

00:11:32.876 --> 00:11:34.436 A:middle
to ask your app for that list of

00:11:34.436 --> 00:11:35.606 A:middle
Accessibility elements.

00:11:36.486 --> 00:11:37.876 A:middle
For example, when the user opens

00:11:37.876 --> 00:11:39.986 A:middle
Calculator it'll ask Calculator

00:11:39.986 --> 00:11:41.676 A:middle
for the elements on screen and

00:11:41.676 --> 00:11:42.906 A:middle
Calculator's going to respond

00:11:42.906 --> 00:11:44.126 A:middle
with those buttons we talked

00:11:44.126 --> 00:11:44.686 A:middle
about earlier.

00:11:45.996 --> 00:11:47.646 A:middle
It's also going to send the

00:11:47.646 --> 00:11:49.426 A:middle
element for the main display.

00:11:49.606 --> 00:11:50.956 A:middle
It'll send a value with that.

00:11:50.956 --> 00:11:54.196 A:middle
In this case, that value is 5.

00:11:54.336 --> 00:11:56.326 A:middle
So, what happens if this

00:11:56.326 --> 00:11:57.536 A:middle
information changes?

00:11:58.086 --> 00:11:59.606 A:middle
For example, what happens when

00:11:59.606 --> 00:12:01.216 A:middle
Calculator has gotten a press of

00:11:59.606 --> 00:12:01.216 A:middle
Calculator has gotten a press of

00:12:01.216 --> 00:12:02.716 A:middle
the equals button and has

00:12:02.716 --> 00:12:04.326 A:middle
updated the value of that main

00:12:04.326 --> 00:12:05.046 A:middle
display?

00:12:05.626 --> 00:12:07.496 A:middle
Let's say that value is now 10.

00:12:08.526 --> 00:12:10.636 A:middle
Well, VoiceOver needs to know

00:12:10.636 --> 00:12:11.766 A:middle
that the value of that element

00:12:11.766 --> 00:12:12.426 A:middle
has changed.

00:12:13.226 --> 00:12:14.336 A:middle
That's why our frameworks

00:12:14.336 --> 00:12:15.586 A:middle
support Accessibility

00:12:15.716 --> 00:12:16.636 A:middle
notifications.

00:12:17.096 --> 00:12:18.326 A:middle
Your app can tell VoiceOver,

00:12:18.506 --> 00:12:20.806 A:middle
hey, the value here has changed.

00:12:23.136 --> 00:12:25.106 A:middle
We have been talking to you all

00:12:25.106 --> 00:12:27.326 A:middle
conference about how SwiftUI is

00:12:27.326 --> 00:12:28.156 A:middle
state driven.

00:12:28.926 --> 00:12:30.296 A:middle
Well, this is where there are

00:12:30.296 --> 00:12:31.716 A:middle
some huge benefits for

00:12:31.716 --> 00:12:32.416 A:middle
Accessibility.

00:12:33.016 --> 00:12:34.346 A:middle
Because SwiftUI really

00:12:34.346 --> 00:12:35.676 A:middle
understands your state and is

00:12:35.796 --> 00:12:38.196 A:middle
tracking when it changes, you

00:12:38.196 --> 00:12:39.446 A:middle
never need to worry about

00:12:39.446 --> 00:12:40.826 A:middle
Accessibility notifications

00:12:41.026 --> 00:12:41.606 A:middle
again.

00:12:41.946 --> 00:12:43.426 A:middle
Not even for custom controls.

00:12:44.886 --> 00:12:45.976 A:middle
Yes, exactly.

00:12:49.066 --> 00:12:50.606 A:middle
SwiftUI will track the state

00:12:50.766 --> 00:12:52.046 A:middle
that you're using for your

00:12:52.046 --> 00:12:53.866 A:middle
Accessibility and send them for

00:12:53.866 --> 00:12:54.136 A:middle
you.

00:12:54.646 --> 00:12:55.606 A:middle
Let's take a look at how this

00:12:55.606 --> 00:12:56.096 A:middle
happens.

00:12:57.066 --> 00:12:58.626 A:middle
We have a toggle here and a

00:12:58.626 --> 00:13:00.166 A:middle
button that are linked to a

00:12:58.626 --> 00:13:00.166 A:middle
button that are linked to a

00:13:00.166 --> 00:13:01.236 A:middle
single piece of state.

00:13:01.646 --> 00:13:02.886 A:middle
It's a Boolean and we've called

00:13:02.886 --> 00:13:03.436 A:middle
it Enabled.

00:13:03.956 --> 00:13:06.786 A:middle
You can see there are two

00:13:06.786 --> 00:13:08.296 A:middle
Accessibility elements created

00:13:08.296 --> 00:13:08.886 A:middle
for us here.

00:13:09.206 --> 00:13:10.236 A:middle
In this case, we'll have an

00:13:10.236 --> 00:13:11.656 A:middle
Accessibility element for that

00:13:11.656 --> 00:13:12.076 A:middle
toggle.

00:13:12.346 --> 00:13:13.656 A:middle
It's got a correct label and

00:13:13.656 --> 00:13:13.876 A:middle
type.

00:13:14.596 --> 00:13:15.886 A:middle
Its value is going to start off

00:13:15.886 --> 00:13:16.556 A:middle
as 0.

00:13:17.086 --> 00:13:19.796 A:middle
When you click the button the

00:13:19.796 --> 00:13:21.386 A:middle
value of that Boolean enabled

00:13:21.386 --> 00:13:22.606 A:middle
state is going to change.

00:13:22.796 --> 00:13:25.656 A:middle
It'll go from 0 to 1 or 1 to 0.

00:13:25.976 --> 00:13:26.946 A:middle
That's why we've called that

00:13:26.946 --> 00:13:28.086 A:middle
button Flip.

00:13:28.756 --> 00:13:30.346 A:middle
So, what happens here with

00:13:30.346 --> 00:13:31.096 A:middle
Accessibility?

00:13:31.876 --> 00:13:33.776 A:middle
Well, the Accessibility value of

00:13:33.776 --> 00:13:35.066 A:middle
that toggle has now changed.

00:13:35.066 --> 00:13:36.606 A:middle
So, we need to let VoiceOver

00:13:36.606 --> 00:13:36.866 A:middle
know.

00:13:37.546 --> 00:13:38.726 A:middle
Because it understands that that

00:13:38.726 --> 00:13:40.316 A:middle
value's changed, SwiftUI will

00:13:40.316 --> 00:13:41.226 A:middle
automatically send a

00:13:41.226 --> 00:13:42.416 A:middle
notification to VoiceOver

00:13:42.686 --> 00:13:43.596 A:middle
telling it exactly what

00:13:43.596 --> 00:13:43.946 A:middle
happened.

00:13:44.656 --> 00:13:46.306 A:middle
Notice, there's no Accessibility

00:13:46.306 --> 00:13:47.896 A:middle
specific code needed here.

00:13:48.286 --> 00:13:49.246 A:middle
You don't need to worry about

00:13:49.246 --> 00:13:50.606 A:middle
Accessibility notifications in

00:13:50.606 --> 00:13:52.566 A:middle
SwiftUI, because we send them

00:13:52.566 --> 00:13:52.946 A:middle
for you.

00:13:55.996 --> 00:13:58.006 A:middle
Another area SwiftUI really

00:13:58.006 --> 00:14:00.036 A:middle
improves on is Custom Controls.

00:13:58.006 --> 00:14:00.036 A:middle
improves on is Custom Controls.

00:14:00.896 --> 00:14:02.896 A:middle
Often when you're designing your

00:14:03.166 --> 00:14:04.506 A:middle
app, you may want to customize

00:14:04.506 --> 00:14:06.376 A:middle
the look and feel of your UI.

00:14:06.656 --> 00:14:08.176 A:middle
Maybe you want your app to have

00:14:08.176 --> 00:14:09.986 A:middle
a unique visual style or you

00:14:09.986 --> 00:14:10.936 A:middle
need to fit with a company

00:14:10.936 --> 00:14:11.256 A:middle
theme.

00:14:12.686 --> 00:14:14.016 A:middle
If you have done Accessibility

00:14:14.016 --> 00:14:15.886 A:middle
work in the past you know that

00:14:15.886 --> 00:14:17.836 A:middle
oftentimes the more custom your

00:14:17.836 --> 00:14:19.466 A:middle
controls in this way, the more

00:14:19.466 --> 00:14:21.006 A:middle
Accessibility work you have to

00:14:21.006 --> 00:14:21.656 A:middle
put into them.

00:14:22.476 --> 00:14:24.846 A:middle
Well, SwiftUI's control styles

00:14:24.846 --> 00:14:26.546 A:middle
let you have complete control

00:14:26.546 --> 00:14:27.946 A:middle
over the look and feel of your

00:14:27.946 --> 00:14:30.026 A:middle
UI while still getting great

00:14:30.026 --> 00:14:31.516 A:middle
accessibility out of the box.

00:14:32.296 --> 00:14:33.636 A:middle
That means you can finally

00:14:33.666 --> 00:14:35.306 A:middle
easily make custom controls that

00:14:35.306 --> 00:14:37.356 A:middle
are beautiful and unique, but

00:14:37.356 --> 00:14:38.956 A:middle
still immediately accessible

00:14:39.146 --> 00:14:40.536 A:middle
just like the system ones.

00:14:40.996 --> 00:14:43.896 A:middle
Here's an example of a custom

00:14:43.896 --> 00:14:45.536 A:middle
button style built using

00:14:45.536 --> 00:14:46.016 A:middle
SwiftUI.

00:14:47.436 --> 00:14:50.256 A:middle
This API is giving us the style

00:14:50.256 --> 00:14:51.476 A:middle
of the button including its

00:14:51.476 --> 00:14:53.466 A:middle
label and whether it is pressed.

00:14:54.366 --> 00:14:55.736 A:middle
Given that, we need to let the

00:14:55.736 --> 00:14:57.426 A:middle
style know how we want this

00:14:57.426 --> 00:14:58.066 A:middle
button to draw.

00:14:59.086 --> 00:15:01.086 A:middle
So, let's go ahead and put that

00:14:59.086 --> 00:15:01.086 A:middle
So, let's go ahead and put that

00:15:01.086 --> 00:15:02.996 A:middle
label within a rounded rectangle

00:15:03.396 --> 00:15:04.546 A:middle
and set some background and

00:15:04.546 --> 00:15:05.746 A:middle
foreground colors that are going

00:15:05.746 --> 00:15:06.926 A:middle
to depend on whether we're

00:15:06.966 --> 00:15:07.306 A:middle
pressed.

00:15:08.486 --> 00:15:09.766 A:middle
We're also going to add a tiny

00:15:09.766 --> 00:15:11.406 A:middle
bit of padding and set a nice

00:15:11.406 --> 00:15:13.456 A:middle
big font and color as well.

00:15:14.996 --> 00:15:16.936 A:middle
So, you can see the result here

00:15:16.936 --> 00:15:17.436 A:middle
on the right.

00:15:18.086 --> 00:15:21.406 A:middle
Now that we've defined this

00:15:21.406 --> 00:15:23.176 A:middle
beautiful custom drawing, we of

00:15:23.176 --> 00:15:24.186 A:middle
course need to use it.

00:15:25.216 --> 00:15:26.766 A:middle
All we need to do is create a

00:15:26.766 --> 00:15:28.576 A:middle
normal button and then use the

00:15:28.576 --> 00:15:30.266 A:middle
button style modifier function

00:15:30.706 --> 00:15:31.926 A:middle
to set the way we want the

00:15:31.926 --> 00:15:32.836 A:middle
button to draw.

00:15:33.856 --> 00:15:34.986 A:middle
This is going to create an

00:15:34.986 --> 00:15:36.706 A:middle
Accessibility element for us,

00:15:36.706 --> 00:15:37.776 A:middle
which you can see in the top

00:15:37.776 --> 00:15:38.216 A:middle
right here.

00:15:38.976 --> 00:15:40.776 A:middle
Notice that despite the totally

00:15:40.776 --> 00:15:42.106 A:middle
custom drawing here this

00:15:42.106 --> 00:15:43.916 A:middle
Accessibility element is good to

00:15:43.916 --> 00:15:44.536 A:middle
go.

00:15:44.766 --> 00:15:46.466 A:middle
It has a label, it's got the

00:15:46.466 --> 00:15:48.246 A:middle
right type, and it has an

00:15:48.246 --> 00:15:48.566 A:middle
action.

00:15:50.336 --> 00:15:51.526 A:middle
Once again, we're doing this

00:15:51.526 --> 00:15:52.536 A:middle
without writing any

00:15:52.626 --> 00:15:54.866 A:middle
Accessibility specific code.

00:15:57.476 --> 00:16:00.196 A:middle
SwiftUI also provides better and

00:15:57.476 --> 00:16:00.196 A:middle
SwiftUI also provides better and

00:16:00.196 --> 00:16:02.236 A:middle
more intuitive Accessibility for

00:16:02.236 --> 00:16:02.996 A:middle
your images.

00:16:03.446 --> 00:16:04.706 A:middle
Specifically, I want to talk to

00:16:04.706 --> 00:16:06.276 A:middle
you about illustrations and

00:16:06.276 --> 00:16:07.496 A:middle
glyphs which often form

00:16:07.496 --> 00:16:08.816 A:middle
important parts of our UI's.

00:16:10.426 --> 00:16:11.926 A:middle
Imagine you have an app with a

00:16:11.926 --> 00:16:13.906 A:middle
sign-up flow that ends in a

00:16:13.906 --> 00:16:17.826 A:middle
green checkmark like this.

00:16:18.026 --> 00:16:19.376 A:middle
Here are some simple SwiftUI

00:16:19.376 --> 00:16:20.576 A:middle
code you might start with to

00:16:20.576 --> 00:16:21.886 A:middle
create such a view.

00:16:21.936 --> 00:16:22.946 A:middle
In this case, it's just a

00:16:22.946 --> 00:16:24.386 A:middle
vertical stack with an image in

00:16:24.936 --> 00:16:25.006 A:middle
it.

00:16:25.706 --> 00:16:27.606 A:middle
After completing this sign up a

00:16:27.606 --> 00:16:29.066 A:middle
sighted customer would look at

00:16:29.066 --> 00:16:30.736 A:middle
this and say, oh sweet, that

00:16:30.736 --> 00:16:31.396 A:middle
means I'm done.

00:16:31.516 --> 00:16:35.146 A:middle
Great. But, a customer with

00:16:35.146 --> 00:16:36.436 A:middle
VoiceOver will hear,

00:16:36.966 --> 00:16:37.796 A:middle
CheckmarkGlyph.

00:16:39.036 --> 00:16:40.706 A:middle
That is not super useful.

00:16:40.826 --> 00:16:42.646 A:middle
That is your developer created

00:16:42.646 --> 00:16:43.606 A:middle
name for the image.

00:16:43.866 --> 00:16:45.906 A:middle
I don't know what a glyph is or

00:16:45.976 --> 00:16:46.916 A:middle
what it's supposed to mean.

00:16:47.236 --> 00:16:48.526 A:middle
As a VoiceOver user I'm

00:16:48.526 --> 00:16:49.046 A:middle
confused.

00:16:49.046 --> 00:16:50.116 A:middle
Am I finished or not?

00:16:50.436 --> 00:16:51.196 A:middle
Was there an error?

00:16:52.616 --> 00:16:54.286 A:middle
This is not understandable for

00:16:54.286 --> 00:16:54.456 A:middle
me.

00:16:55.686 --> 00:16:57.116 A:middle
The reason for that is that this

00:16:57.116 --> 00:16:59.116 A:middle
image is not explicitly labeled.

00:16:59.986 --> 00:17:01.466 A:middle
Here's the Accessibility element

00:16:59.986 --> 00:17:01.466 A:middle
Here's the Accessibility element

00:17:01.466 --> 00:17:03.656 A:middle
that's created by SwiftUI, which

00:17:03.656 --> 00:17:04.876 A:middle
you can see it's got the right

00:17:04.876 --> 00:17:06.086 A:middle
type but no label.

00:17:07.435 --> 00:17:08.906 A:middle
What SwiftUI is going to have to

00:17:08.906 --> 00:17:10.935 A:middle
do here is pull the label from

00:17:11.066 --> 00:17:12.856 A:middle
the filename of the image or the

00:17:12.856 --> 00:17:13.626 A:middle
name of the asset.

00:17:14.556 --> 00:17:15.996 A:middle
That isn't really something we

00:17:15.996 --> 00:17:16.796 A:middle
want to rely on.

00:17:17.006 --> 00:17:19.996 A:middle
Because that name is for you the

00:17:19.996 --> 00:17:21.646 A:middle
developer, not your customers.

00:17:23.316 --> 00:17:25.675 A:middle
With SwiftUI you can label your

00:17:25.675 --> 00:17:27.326 A:middle
images now with localizable

00:17:27.326 --> 00:17:29.216 A:middle
accessibility information right

00:17:29.216 --> 00:17:30.746 A:middle
as you create them, like so.

00:17:30.746 --> 00:17:33.476 A:middle
All we need to do is use the

00:17:33.476 --> 00:17:35.686 A:middle
Label Based Initializer to

00:17:35.686 --> 00:17:36.076 A:middle
image.

00:17:37.036 --> 00:17:38.056 A:middle
That way there's no need to

00:17:38.056 --> 00:17:39.466 A:middle
remember to do this afterwards

00:17:39.706 --> 00:17:40.846 A:middle
in some separate code.

00:17:41.866 --> 00:17:42.756 A:middle
This is going to create an

00:17:42.756 --> 00:17:44.226 A:middle
Accessibility User Interface

00:17:44.226 --> 00:17:45.646 A:middle
that is understandable.

00:17:47.016 --> 00:17:48.366 A:middle
Notice that this updated

00:17:48.366 --> 00:17:49.846 A:middle
Accessibility element is now

00:17:49.936 --> 00:17:50.856 A:middle
properly labeled.

00:17:51.176 --> 00:17:52.596 A:middle
When I land on this image

00:17:52.596 --> 00:17:54.096 A:middle
VoiceOver reads, sign up

00:17:54.126 --> 00:17:54.606 A:middle
complete.

00:17:55.036 --> 00:17:59.586 A:middle
On the other hand, sometimes

00:17:59.816 --> 00:18:01.256 A:middle
your VoiceOver users don't need

00:17:59.816 --> 00:18:01.256 A:middle
your VoiceOver users don't need

00:18:01.256 --> 00:18:02.376 A:middle
to land on an image.

00:18:02.916 --> 00:18:04.266 A:middle
For example, maybe this

00:18:04.266 --> 00:18:05.376 A:middle
checkmark is really just

00:18:05.376 --> 00:18:06.706 A:middle
decoration and you've already

00:18:06.706 --> 00:18:08.566 A:middle
got text below it that says,

00:18:08.666 --> 00:18:09.346 A:middle
sign up complete.

00:18:10.496 --> 00:18:11.806 A:middle
The SwiftUI code might look

00:18:11.806 --> 00:18:12.716 A:middle
something like this.

00:18:13.056 --> 00:18:14.506 A:middle
A vertical stack with an image

00:18:14.506 --> 00:18:15.836 A:middle
and two lines of text.

00:18:17.236 --> 00:18:18.506 A:middle
In this case, the image is

00:18:18.506 --> 00:18:19.576 A:middle
really just decorative.

00:18:20.026 --> 00:18:21.336 A:middle
You could create it like so,

00:18:21.526 --> 00:18:23.116 A:middle
telling SwiftUI that with the

00:18:23.116 --> 00:18:23.966 A:middle
right initializer.

00:18:25.076 --> 00:18:26.686 A:middle
Now, VoiceOver users aren't

00:18:26.686 --> 00:18:28.086 A:middle
going to land on this image.

00:18:28.396 --> 00:18:29.656 A:middle
If we look at the Accessibility

00:18:29.656 --> 00:18:31.126 A:middle
elements, we've got two for the

00:18:31.126 --> 00:18:33.456 A:middle
text, but none for the image.

00:18:34.566 --> 00:18:36.186 A:middle
This is now more navigable

00:18:36.276 --> 00:18:37.856 A:middle
because your VoiceOver users

00:18:37.856 --> 00:18:39.466 A:middle
aren't going to land on useless

00:18:39.646 --> 00:18:40.196 A:middle
elements.

00:18:41.806 --> 00:18:45.026 A:middle
There is one last area where

00:18:45.026 --> 00:18:46.256 A:middle
SwiftUI can make your life

00:18:46.296 --> 00:18:47.496 A:middle
easier with Accessibility.

00:18:47.776 --> 00:18:49.066 A:middle
And that is labels.

00:18:49.646 --> 00:18:50.616 A:middle
Let's take a look at this

00:18:50.616 --> 00:18:52.196 A:middle
control which is actually in our

00:18:52.196 --> 00:18:53.036 A:middle
System Preferences.

00:18:53.646 --> 00:18:55.156 A:middle
Its purpose it to let you pick a

00:18:55.156 --> 00:18:55.606 A:middle
voice.

00:18:56.136 --> 00:18:58.546 A:middle
You can see the Accessibility

00:18:58.546 --> 00:19:00.146 A:middle
element here in the top right.

00:18:58.546 --> 00:19:00.146 A:middle
element here in the top right.

00:19:00.396 --> 00:19:02.196 A:middle
It has no label and a value of

00:19:02.196 --> 00:19:02.796 A:middle
Alex.

00:19:03.946 --> 00:19:05.836 A:middle
So, this is not understandable

00:19:05.836 --> 00:19:07.086 A:middle
to me as a VoiceOver user.

00:19:07.236 --> 00:19:08.216 A:middle
Because VoiceOver is going to

00:19:08.216 --> 00:19:10.496 A:middle
read, Alex, and nothing else.

00:19:10.896 --> 00:19:12.636 A:middle
Who is Alex and why do I care

00:19:12.636 --> 00:19:13.086 A:middle
about him?

00:19:13.086 --> 00:19:14.506 A:middle
If I'm using VoiceOver I don't

00:19:14.506 --> 00:19:14.706 A:middle
know.

00:19:15.286 --> 00:19:16.496 A:middle
I would have to scan around the

00:19:16.526 --> 00:19:17.976 A:middle
rest of this screen to try to

00:19:17.976 --> 00:19:19.076 A:middle
find some context.

00:19:19.556 --> 00:19:22.836 A:middle
Let's take a look at the SwiftUI

00:19:22.836 --> 00:19:24.816 A:middle
code instead for such a control.

00:19:25.656 --> 00:19:27.566 A:middle
Here, we are using a standard

00:19:27.566 --> 00:19:29.436 A:middle
SwiftUI picker which is being

00:19:29.436 --> 00:19:30.776 A:middle
rendered as a popup button.

00:19:32.166 --> 00:19:33.846 A:middle
Now, SwiftUI's picker has a

00:19:33.846 --> 00:19:35.496 A:middle
built in label we can use.

00:19:35.586 --> 00:19:37.076 A:middle
In this case, we've set System

00:19:37.076 --> 00:19:37.536 A:middle
Voice.

00:19:38.436 --> 00:19:40.106 A:middle
Many of SwiftUI's controls have

00:19:40.106 --> 00:19:41.716 A:middle
labels like this and the rest

00:19:41.716 --> 00:19:42.466 A:middle
will soon.

00:19:42.786 --> 00:19:44.426 A:middle
Let's take a look at the

00:19:44.426 --> 00:19:46.286 A:middle
appropriate Accessibility

00:19:46.286 --> 00:19:46.626 A:middle
element.

00:19:47.076 --> 00:19:48.376 A:middle
This time it's got a label.

00:19:48.826 --> 00:19:50.106 A:middle
And if we look at what VoiceOver

00:19:50.106 --> 00:19:52.826 A:middle
reads; we have Alex System Voice

00:19:53.226 --> 00:19:56.786 A:middle
pop up button.

00:19:56.936 --> 00:19:59.076 A:middle
In an upcoming seed of SwiftUI

00:19:59.176 --> 00:20:01.326 A:middle
you'll be able to do even more

00:19:59.176 --> 00:20:01.326 A:middle
you'll be able to do even more

00:20:01.326 --> 00:20:01.546 A:middle
here.

00:20:02.406 --> 00:20:03.796 A:middle
What if you want one single

00:20:03.796 --> 00:20:05.406 A:middle
label to show for all of your

00:20:05.436 --> 00:20:06.736 A:middle
customers, regardless of whether

00:20:06.736 --> 00:20:07.966 A:middle
they're using Accessibility?

00:20:09.056 --> 00:20:10.156 A:middle
Well, you will be able to

00:20:10.156 --> 00:20:11.466 A:middle
configure that label to show

00:20:11.606 --> 00:20:13.186 A:middle
visual -- let's say on the left

00:20:13.186 --> 00:20:15.606 A:middle
here, and when you do so we will

00:20:15.606 --> 00:20:17.376 A:middle
set up Accessibility for you.

00:20:17.896 --> 00:20:19.276 A:middle
Specifically, we will set up a

00:20:19.276 --> 00:20:20.656 A:middle
connection between the label on

00:20:20.656 --> 00:20:22.616 A:middle
the left and the popup button on

00:20:22.616 --> 00:20:22.906 A:middle
the right.

00:20:23.796 --> 00:20:24.996 A:middle
They'll each be their own

00:20:24.996 --> 00:20:26.286 A:middle
Accessibility element, but

00:20:26.346 --> 00:20:27.836 A:middle
VoiceOver will know that they're

00:20:27.836 --> 00:20:28.116 A:middle
linked.

00:20:28.566 --> 00:20:29.716 A:middle
And so, VoiceOver's going to

00:20:29.716 --> 00:20:32.176 A:middle
read, Alex System Voice pop up

00:20:32.176 --> 00:20:32.436 A:middle
button.

00:20:36.396 --> 00:20:39.576 A:middle
So, here is what SwiftUI can do

00:20:39.576 --> 00:20:40.806 A:middle
for you automatically.

00:20:41.496 --> 00:20:42.616 A:middle
There are two things to

00:20:42.616 --> 00:20:43.816 A:middle
highlight about all of these

00:20:43.856 --> 00:20:44.326 A:middle
items.

00:20:44.696 --> 00:20:46.366 A:middle
First, they're all consistent

00:20:46.536 --> 00:20:48.866 A:middle
across SwiftUI's platforms.

00:20:49.646 --> 00:20:51.906 A:middle
And second, to get all of this

00:20:51.976 --> 00:20:53.066 A:middle
you don't need to write any

00:20:53.156 --> 00:20:54.836 A:middle
Accessibility specific code.

00:20:56.186 --> 00:20:57.646 A:middle
Sometimes though, no matter how

00:20:57.686 --> 00:20:59.646 A:middle
good our automatic Accessibility

00:20:59.646 --> 00:21:00.886 A:middle
might be, it might not be

00:20:59.646 --> 00:21:00.886 A:middle
might be, it might not be

00:21:00.886 --> 00:21:01.166 A:middle
enough.

00:21:01.756 --> 00:21:03.036 A:middle
That's why we provide an

00:21:03.036 --> 00:21:04.846 A:middle
Accessibility API for you to

00:21:04.846 --> 00:21:05.246 A:middle
use.

00:21:05.456 --> 00:21:06.686 A:middle
I'm going to hand the show over

00:21:06.686 --> 00:21:08.126 A:middle
to John now to take you through

00:21:08.126 --> 00:21:08.346 A:middle
it.

00:21:08.836 --> 00:21:08.926 A:middle
John.

00:21:09.516 --> 00:21:16.736 A:middle
[ Applause ]

00:21:17.236 --> 00:21:17.666 A:middle
&gt;&gt; Thanks Michael.

00:21:19.166 --> 00:21:20.226 A:middle
So, we've shown you all of the

00:21:20.226 --> 00:21:21.816 A:middle
great built-in Accessibility

00:21:22.176 --> 00:21:23.286 A:middle
that SwiftUI provides.

00:21:23.816 --> 00:21:25.666 A:middle
It was designed to give everyone

00:21:25.746 --> 00:21:26.856 A:middle
a good experience out of the

00:21:26.856 --> 00:21:27.176 A:middle
box.

00:21:28.036 --> 00:21:29.586 A:middle
But we understand that this

00:21:29.586 --> 00:21:31.136 A:middle
alone isn't enough to be a

00:21:31.136 --> 00:21:31.966 A:middle
complete experience.

00:21:33.016 --> 00:21:34.926 A:middle
This SwiftUI Accessibility API

00:21:35.866 --> 00:21:36.836 A:middle
allows you to modify and

00:21:36.836 --> 00:21:38.736 A:middle
ultimately create an even better

00:21:38.736 --> 00:21:39.826 A:middle
experience for everyone.

00:21:43.376 --> 00:21:44.466 A:middle
So, I want to start off by

00:21:44.466 --> 00:21:45.636 A:middle
showing a couple simple use

00:21:45.636 --> 00:21:46.446 A:middle
cases for the API.

00:21:46.446 --> 00:21:48.136 A:middle
And let's go back to the

00:21:48.136 --> 00:21:49.506 A:middle
Calculator example that Michael

00:21:49.506 --> 00:21:49.996 A:middle
showed earlier.

00:21:50.836 --> 00:21:51.766 A:middle
We'll start with the multiply

00:21:51.766 --> 00:21:53.786 A:middle
button, which by default will

00:21:54.166 --> 00:21:55.356 A:middle
read X.

00:21:55.956 --> 00:21:58.136 A:middle
To change the label, I'll use

00:21:58.136 --> 00:21:59.366 A:middle
the Accessibility modifier

00:21:59.406 --> 00:22:00.876 A:middle
function with the label

00:21:59.406 --> 00:22:00.876 A:middle
function with the label

00:22:00.876 --> 00:22:01.296 A:middle
parameter.

00:22:02.066 --> 00:22:04.246 A:middle
And with this change the button

00:22:04.246 --> 00:22:05.596 A:middle
will now read, multiply.

00:22:05.596 --> 00:22:08.936 A:middle
We also want to provide

00:22:08.996 --> 00:22:10.446 A:middle
VoiceOver for the selected state

00:22:10.446 --> 00:22:10.936 A:middle
of the button.

00:22:11.836 --> 00:22:13.256 A:middle
Visually the button becomes

00:22:13.256 --> 00:22:14.256 A:middle
white when selected.

00:22:14.916 --> 00:22:18.016 A:middle
We have an Accessibility trait

00:22:18.106 --> 00:22:19.046 A:middle
that can help out with this.

00:22:19.986 --> 00:22:20.796 A:middle
And if you're not familiar,

00:22:21.046 --> 00:22:22.586 A:middle
traits are a set of things that

00:22:22.586 --> 00:22:23.856 A:middle
describe what your element is

00:22:24.056 --> 00:22:24.716 A:middle
and what it can do.

00:22:26.106 --> 00:22:27.386 A:middle
Buttons for example, will

00:22:27.386 --> 00:22:28.966 A:middle
automatically have the isButton

00:22:28.966 --> 00:22:30.006 A:middle
trait by default.

00:22:31.076 --> 00:22:32.326 A:middle
VoiceOver will read, button,

00:22:32.906 --> 00:22:34.066 A:middle
after reading out the elements

00:22:34.066 --> 00:22:34.326 A:middle
label.

00:22:34.516 --> 00:22:37.296 A:middle
For this example, we can add the

00:22:37.296 --> 00:22:38.996 A:middle
isSelected state using the

00:22:38.996 --> 00:22:40.526 A:middle
Accessibility function and add

00:22:40.526 --> 00:22:41.506 A:middle
traits as the parameter.

00:22:42.526 --> 00:22:43.416 A:middle
VoiceOver will now read,

00:22:43.496 --> 00:22:45.296 A:middle
selected, when the button is in

00:22:46.046 --> 00:22:47.786 A:middle
this state.

00:22:48.016 --> 00:22:48.946 A:middle
So, let's see how we can improve

00:22:48.946 --> 00:22:51.226 A:middle
the Accessibility of the result

00:22:52.106 --> 00:22:52.226 A:middle
view.

00:22:52.676 --> 00:22:54.436 A:middle
We'll change the label to result

00:22:54.836 --> 00:22:56.176 A:middle
and add an Accessibility value.

00:22:57.016 --> 00:22:58.376 A:middle
You can use Accessibility value

00:22:58.436 --> 00:22:59.836 A:middle
to provide VoiceOver with a

00:22:59.836 --> 00:23:00.656 A:middle
readable description.

00:22:59.836 --> 00:23:00.656 A:middle
readable description.

00:23:00.656 --> 00:23:03.366 A:middle
You might choose to include

00:23:03.366 --> 00:23:04.976 A:middle
units or other additional

00:23:04.976 --> 00:23:05.446 A:middle
context.

00:23:06.506 --> 00:23:07.856 A:middle
But for our purposes, the number

00:23:07.856 --> 00:23:09.466 A:middle
itself is sufficient.

00:23:10.956 --> 00:23:12.576 A:middle
Finally, we'll add a Custom

00:23:12.576 --> 00:23:14.136 A:middle
Action using the Accessibility

00:23:14.136 --> 00:23:14.826 A:middle
action function.

00:23:16.246 --> 00:23:17.626 A:middle
Using the name parameter, we'll

00:23:17.626 --> 00:23:19.466 A:middle
create a Custom Action called

00:23:19.596 --> 00:23:19.836 A:middle
Clear.

00:23:21.266 --> 00:23:22.566 A:middle
VoiceOver will read that there

00:23:22.566 --> 00:23:23.756 A:middle
are actions available when

00:23:23.756 --> 00:23:24.726 A:middle
focused on this element.

00:23:25.856 --> 00:23:26.676 A:middle
And this was just a quick

00:23:26.796 --> 00:23:28.066 A:middle
overview of how to add

00:23:28.066 --> 00:23:29.186 A:middle
Accessibility in SwiftUI.

00:23:29.986 --> 00:23:31.526 A:middle
The Accessibility function adds

00:23:31.526 --> 00:23:32.676 A:middle
information and the

00:23:32.676 --> 00:23:34.146 A:middle
Accessibility action function

00:23:34.416 --> 00:23:35.506 A:middle
allows you to add actions.

00:23:36.206 --> 00:23:37.286 A:middle
But I want to talk a little bit

00:23:37.286 --> 00:23:38.826 A:middle
more about when to use this API

00:23:38.826 --> 00:23:40.766 A:middle
and how you can identify the

00:23:40.766 --> 00:23:42.346 A:middle
areas of need within your app.

00:23:42.996 --> 00:23:45.976 A:middle
And this comes back to what your

00:23:45.976 --> 00:23:49.026 A:middle
customers need your apps to be.

00:23:49.306 --> 00:23:52.356 A:middle
Understandable, interactable,

00:23:53.046 --> 00:23:54.796 A:middle
and navigable.

00:23:56.596 --> 00:23:57.786 A:middle
And here are a few questions to

00:23:57.786 --> 00:23:58.746 A:middle
help you evaluate this.

00:24:01.186 --> 00:24:02.766 A:middle
Do the displayed strings provide

00:24:02.766 --> 00:24:03.446 A:middle
enough information?

00:24:07.166 --> 00:24:08.806 A:middle
Will a Custom Action simplify

00:24:08.806 --> 00:24:09.386 A:middle
the interaction?

00:24:13.046 --> 00:24:13.976 A:middle
And can you speed up navigation?

00:24:18.046 --> 00:24:19.146 A:middle
So now I'll show you a video of

00:24:19.146 --> 00:24:20.276 A:middle
VoiceOver moving through an app

00:24:20.276 --> 00:24:20.916 A:middle
that I created.

00:24:21.206 --> 00:24:22.646 A:middle
And as it does, try to keep

00:24:22.686 --> 00:24:23.916 A:middle
these three questions in mind.

00:24:27.436 --> 00:24:28.236 A:middle
So, this is an app that

00:24:28.236 --> 00:24:29.646 A:middle
calculates the contrast ratio

00:24:29.926 --> 00:24:31.386 A:middle
between text and its background

00:24:31.386 --> 00:24:31.646 A:middle
color.

00:24:32.286 --> 00:24:33.236 A:middle
At the top you can see the

00:24:33.236 --> 00:24:35.516 A:middle
current value of the ratio and

00:24:35.516 --> 00:24:36.726 A:middle
at the bottom there are two

00:24:36.726 --> 00:24:38.036 A:middle
areas where you can adjust the

00:24:38.036 --> 00:24:39.816 A:middle
red, green, and blue values of

00:24:39.816 --> 00:24:41.006 A:middle
the background color and the

00:24:41.006 --> 00:24:41.356 A:middle
text color.

00:24:42.666 --> 00:24:43.816 A:middle
I've also added a double tap

00:24:43.816 --> 00:24:45.436 A:middle
gesture on the top view to swap

00:24:45.436 --> 00:24:45.996 A:middle
the two colors.

00:24:47.596 --> 00:24:48.776 A:middle
So, let's see how VoiceOver uses

00:24:48.776 --> 00:24:49.506 A:middle
that by default.

00:24:52.836 --> 00:24:53.086 A:middle
:50

00:24:53.086 --> 00:24:54.146 A:middle
&gt;&gt; 11.7 1.

00:24:54.286 --> 00:25:01.146 A:middle
11.7 1. 11.7 1.

00:24:54.286 --> 00:25:01.146 A:middle
11.7 1. 11.7 1.

00:25:02.896 --> 00:25:04.766 A:middle
Reset colors button.

00:25:05.696 --> 00:25:06.656 A:middle
Background.

00:25:07.556 --> 00:25:11.206 A:middle
Red 76. 30 percent.

00:25:11.486 --> 00:25:12.246 A:middle
Adjustable.

00:25:12.776 --> 00:25:14.946 A:middle
Green 217.

00:25:15.656 --> 00:25:17.096 A:middle
85 percent.

00:25:17.386 --> 00:25:18.136 A:middle
Adjustable.

00:25:18.776 --> 00:25:22.576 A:middle
Blue 100. 39 percent.

00:25:22.876 --> 00:25:23.626 A:middle
Adjustable.

00:25:24.356 --> 00:25:26.796 A:middle
39 -- 100 percent.

00:25:30.376 --> 00:25:31.376 A:middle
&gt;&gt; So, there were a couple of

00:25:31.426 --> 00:25:32.576 A:middle
things in the video that stood

00:25:32.576 --> 00:25:34.766 A:middle
out to me with the label at the

00:25:35.636 --> 00:25:35.746 A:middle
top.

00:25:35.956 --> 00:25:37.616 A:middle
First, there was a symbol that

00:25:37.616 --> 00:25:38.216 A:middle
wasn't read out.

00:25:39.106 --> 00:25:40.136 A:middle
VoiceOver doesn't always read

00:25:40.136 --> 00:25:41.346 A:middle
out your punctuation depending

00:25:41.346 --> 00:25:41.896 A:middle
on settings.

00:25:42.266 --> 00:25:43.566 A:middle
And in a situation like this,

00:25:43.916 --> 00:25:45.146 A:middle
where the punctuation represents

00:25:45.146 --> 00:25:46.556 A:middle
that this is a ratio, we should

00:25:46.556 --> 00:25:47.626 A:middle
pass that information on to

00:25:47.626 --> 00:25:48.096 A:middle
VoiceOver.

00:25:49.136 --> 00:25:51.536 A:middle
So, 11.7 1 should read 11.7 to

00:25:51.566 --> 00:25:51.696 A:middle
1.

00:25:53.126 --> 00:25:54.216 A:middle
And secondly, the numbers were

00:25:54.216 --> 00:25:55.546 A:middle
spoken without any context.

00:25:57.096 --> 00:25:58.186 A:middle
It's probably a good idea to

00:25:58.186 --> 00:25:59.186 A:middle
give this a proper label to

00:25:59.186 --> 00:25:59.986 A:middle
describe its value.

00:26:00.896 --> 00:26:02.346 A:middle
So, we can use contrast ratio.

00:26:04.786 --> 00:26:05.796 A:middle
And we'll do this by calling the

00:26:05.796 --> 00:26:07.536 A:middle
Accessibility function twice on

00:26:07.536 --> 00:26:08.536 A:middle
a contrast ratio view.

00:26:09.176 --> 00:26:11.086 A:middle
Once for the label and another

00:26:11.126 --> 00:26:14.676 A:middle
to add the value.

00:26:15.246 --> 00:26:16.216 A:middle
Another thing that stood out to

00:26:16.216 --> 00:26:17.926 A:middle
me was the information provided

00:26:17.926 --> 00:26:18.506 A:middle
by the slider.

00:26:19.466 --> 00:26:20.846 A:middle
The value of the slider was a

00:26:20.846 --> 00:26:22.826 A:middle
percentage, but in this case, it

00:26:22.826 --> 00:26:24.376 A:middle
actually represents the color

00:26:24.376 --> 00:26:26.646 A:middle
components value from 0 to 255.

00:26:27.496 --> 00:26:30.476 A:middle
We can also hide the label above

00:26:30.476 --> 00:26:32.506 A:middle
the slider and expose that

00:26:32.506 --> 00:26:33.716 A:middle
information through the slider

00:26:33.956 --> 00:26:34.356 A:middle
instead.

00:26:34.896 --> 00:26:35.936 A:middle
So that'll group all the

00:26:35.936 --> 00:26:37.666 A:middle
information into one element.

00:26:39.236 --> 00:26:41.346 A:middle
So first let's hide the label.

00:26:42.286 --> 00:26:43.256 A:middle
We'll call the Accessibility

00:26:43.256 --> 00:26:44.856 A:middle
function with visibility as the

00:26:44.856 --> 00:26:45.286 A:middle
parameter.

00:26:46.236 --> 00:26:47.966 A:middle
Passing in .hidden will hide the

00:26:47.966 --> 00:26:50.566 A:middle
element and any children that it

00:26:53.016 --> 00:26:53.186 A:middle
may have.

00:26:53.346 --> 00:26:54.726 A:middle
Next, we'll add the information

00:26:54.726 --> 00:26:55.946 A:middle
of the label onto the slider.

00:26:56.886 --> 00:26:58.066 A:middle
We'll give it the label of the

00:26:58.096 --> 00:26:59.876 A:middle
color that it will modify and a

00:26:59.876 --> 00:27:04.166 A:middle
proper value between 0 and 255.

00:26:59.876 --> 00:27:04.166 A:middle
proper value between 0 and 255.

00:27:05.826 --> 00:27:06.816 A:middle
We also have a double tap

00:27:06.816 --> 00:27:07.526 A:middle
gesture on the view.

00:27:08.366 --> 00:27:09.606 A:middle
Gestures on iOS can be

00:27:09.606 --> 00:27:10.816 A:middle
challenging to perform for

00:27:10.816 --> 00:27:12.266 A:middle
customers who use our

00:27:12.266 --> 00:27:13.106 A:middle
Accessibility products.

00:27:14.296 --> 00:27:15.586 A:middle
Some of our products have a

00:27:15.586 --> 00:27:17.526 A:middle
built-in gestures menu to help

00:27:17.526 --> 00:27:18.686 A:middle
perform some of the more complex

00:27:18.686 --> 00:27:19.176 A:middle
gestures.

00:27:20.296 --> 00:27:21.156 A:middle
But we can do better here.

00:27:21.926 --> 00:27:23.316 A:middle
An easy simplification for this

00:27:23.546 --> 00:27:24.806 A:middle
is to create a Custom Action for

00:27:24.806 --> 00:27:25.266 A:middle
the gesture.

00:27:26.176 --> 00:27:27.326 A:middle
This helps in two ways.

00:27:28.166 --> 00:27:29.676 A:middle
First, the name of the action

00:27:29.726 --> 00:27:30.606 A:middle
will help describe what will

00:27:30.606 --> 00:27:31.796 A:middle
happen when you activate it.

00:27:32.576 --> 00:27:33.806 A:middle
And second, actions are

00:27:33.806 --> 00:27:35.656 A:middle
available everywhere in iOS and

00:27:35.656 --> 00:27:36.646 A:middle
they're discoverable in all of

00:27:36.646 --> 00:27:37.596 A:middle
our Accessibility products.

00:27:41.216 --> 00:27:42.636 A:middle
So, let's add the swap colors

00:27:42.636 --> 00:27:44.766 A:middle
action to our contrast ratio

00:27:44.766 --> 00:27:45.806 A:middle
view by calling the same

00:27:45.806 --> 00:27:47.306 A:middle
Accessibility action modifier

00:27:47.306 --> 00:27:47.656 A:middle
function.

00:27:48.206 --> 00:27:52.446 A:middle
And finally, can we speed up

00:27:52.446 --> 00:27:53.096 A:middle
navigation here?

00:27:54.596 --> 00:27:55.896 A:middle
Looking at the view it can be

00:27:55.896 --> 00:27:57.716 A:middle
divided into three main spaces;

00:27:58.596 --> 00:28:01.156 A:middle
the contrast ratio, the

00:27:58.596 --> 00:28:01.156 A:middle
the contrast ratio, the

00:28:01.156 --> 00:28:03.976 A:middle
background color, and the text

00:28:03.976 --> 00:28:04.196 A:middle
color.

00:28:05.256 --> 00:28:06.716 A:middle
So, these are good candidates

00:28:06.876 --> 00:28:08.306 A:middle
for the isHeader Accessibility

00:28:08.306 --> 00:28:08.576 A:middle
trait.

00:28:09.296 --> 00:28:10.616 A:middle
This trait's used by VoiceOver

00:28:10.776 --> 00:28:11.966 A:middle
to navigate quickly between

00:28:11.966 --> 00:28:12.996 A:middle
different header elements in

00:28:12.996 --> 00:28:14.926 A:middle
your app.

00:28:15.996 --> 00:28:17.426 A:middle
So, let's add the trait to the

00:28:17.426 --> 00:28:19.366 A:middle
contrast ratio view and the two

00:28:19.366 --> 00:28:20.636 A:middle
text views in each of the color

00:28:20.636 --> 00:28:21.166 A:middle
picker sections.

00:28:25.446 --> 00:28:26.216 A:middle
So, let's take a look at the

00:28:26.216 --> 00:28:27.226 A:middle
results of the changes that we

00:28:27.226 --> 00:28:28.496 A:middle
made, starting off with the top

00:28:28.496 --> 00:28:28.616 A:middle
view.

00:28:31.076 --> 00:28:33.966 A:middle
&gt;&gt; Contrast ratio 11.7 to 1.

00:28:34.256 --> 00:28:34.736 A:middle
Heading.

00:28:35.676 --> 00:28:37.026 A:middle
&gt;&gt; So, the element now provides

00:28:37.026 --> 00:28:38.566 A:middle
context and a proper description

00:28:38.636 --> 00:28:40.556 A:middle
for the value.

00:28:40.696 --> 00:28:41.806 A:middle
Let's move onto the sliders and

00:28:41.806 --> 00:28:42.856 A:middle
we'll adjust the blue sliders

00:28:42.856 --> 00:28:43.106 A:middle
value.

00:28:44.456 --> 00:28:46.306 A:middle
&gt;&gt; Reset colors button.

00:28:47.316 --> 00:28:48.266 A:middle
Background.

00:28:48.556 --> 00:28:52.366 A:middle
Heading. Red 76.

00:28:52.366 --> 00:28:53.086 A:middle
Adjustable.

00:28:53.086 --> 00:28:56.536 A:middle
Swipe or down with one finger to

00:28:56.536 --> 00:28:57.546 A:middle
adjust the value.

00:28:58.616 --> 00:29:00.876 A:middle
Green 217.

00:28:58.616 --> 00:29:00.876 A:middle
Green 217.

00:29:01.186 --> 00:29:01.946 A:middle
Adjustable.

00:29:02.556 --> 00:29:05.136 A:middle
Blue 10. Adjustable.

00:29:05.136 --> 00:29:07.676 A:middle
Swipe -- 100.

00:29:08.116 --> 00:29:11.546 A:middle
255.

00:29:15.076 --> 00:29:16.126 A:middle
&gt;&gt; And finally, let's use the

00:29:16.126 --> 00:29:17.896 A:middle
VoiceOver rotor to navigate by

00:29:17.896 --> 00:29:19.446 A:middle
headings and swap the colors

00:29:19.516 --> 00:29:20.536 A:middle
using the Custom Action that we

00:29:20.536 --> 00:29:20.896 A:middle
created.

00:29:22.086 --> 00:29:23.026 A:middle
&gt;&gt; Adjust value.

00:29:23.276 --> 00:29:26.306 A:middle
Headings. Text.

00:29:26.306 --> 00:29:28.226 A:middle
Heading. Background.

00:29:28.516 --> 00:29:32.996 A:middle
Heading. Contrast ratio 13.0 to

00:29:32.996 --> 00:29:33.426 A:middle
1.

00:29:33.736 --> 00:29:36.076 A:middle
Heading. Actions.

00:29:36.076 --> 00:29:39.516 A:middle
Swap colors.

00:29:43.516 --> 00:29:48.556 A:middle
[ Applause ]

00:29:49.056 --> 00:29:50.366 A:middle
&gt;&gt; So, with just a few tweaks we

00:29:50.366 --> 00:29:51.596 A:middle
were able to greatly improve the

00:29:51.596 --> 00:29:52.806 A:middle
Accessibility experience of this

00:29:52.806 --> 00:29:53.036 A:middle
app.

00:29:53.866 --> 00:29:54.896 A:middle
And these are just the basics of

00:29:54.896 --> 00:29:55.166 A:middle
the API.

00:29:55.166 --> 00:29:56.446 A:middle
But I want to move onto

00:29:56.446 --> 00:29:57.416 A:middle
something a little bit more

00:29:57.416 --> 00:29:57.906 A:middle
conceptual.

00:29:58.796 --> 00:29:59.676 A:middle
The Accessibility Tree.

00:30:01.196 --> 00:30:02.036 A:middle
And you've seen how

00:30:02.036 --> 00:30:03.186 A:middle
Accessibility elements are

00:30:03.186 --> 00:30:04.086 A:middle
created from your views.

00:30:04.556 --> 00:30:05.316 A:middle
But I want to go in a bit

00:30:05.316 --> 00:30:06.626 A:middle
further and talk about this tree

00:30:06.626 --> 00:30:08.336 A:middle
structure of these elements and

00:30:08.336 --> 00:30:09.376 A:middle
how you can manipulate the

00:30:09.376 --> 00:30:11.556 A:middle
structure to provide a better

00:30:11.556 --> 00:30:12.256 A:middle
experience.

00:30:13.146 --> 00:30:14.046 A:middle
So, we'll start with how this

00:30:14.046 --> 00:30:14.616 A:middle
tree's created.

00:30:14.616 --> 00:30:19.126 A:middle
Starts off with your view tree

00:30:19.306 --> 00:30:20.426 A:middle
created directly from your code.

00:30:21.446 --> 00:30:23.006 A:middle
On the left here is SwiftUI code

00:30:23.086 --> 00:30:23.956 A:middle
for a table cell view.

00:30:24.936 --> 00:30:26.926 A:middle
It has one label, a spacer, and

00:30:26.926 --> 00:30:27.386 A:middle
two buttons.

00:30:28.366 --> 00:30:29.806 A:middle
Arranged horizontally inside of

00:30:29.806 --> 00:30:30.216 A:middle
an HStack.

00:30:31.626 --> 00:30:32.996 A:middle
And this directly translates to

00:30:32.996 --> 00:30:33.906 A:middle
the view tree structure on the

00:30:33.906 --> 00:30:35.756 A:middle
right where the HStack is the

00:30:35.756 --> 00:30:37.546 A:middle
parent node and the label,

00:30:37.636 --> 00:30:39.726 A:middle
spacer, and buttons are its

00:30:39.726 --> 00:30:40.056 A:middle
children.

00:30:41.806 --> 00:30:42.526 A:middle
Because of our built in

00:30:42.526 --> 00:30:44.346 A:middle
Accessibility, this view tree

00:30:44.346 --> 00:30:45.846 A:middle
will create three Accessibility

00:30:45.846 --> 00:30:46.336 A:middle
elements.

00:30:46.746 --> 00:30:48.346 A:middle
One from the text and two from

00:30:48.346 --> 00:30:48.786 A:middle
the buttons.

00:30:51.046 --> 00:30:51.936 A:middle
These elements will become

00:30:51.936 --> 00:30:53.116 A:middle
children of your platforms

00:30:53.116 --> 00:30:54.676 A:middle
hosting view and that's passed

00:30:54.676 --> 00:30:55.726 A:middle
on to our Accessibility

00:30:55.726 --> 00:30:56.156 A:middle
products.

00:30:57.526 --> 00:31:00.076 A:middle
This subtree may also be a part

00:30:57.526 --> 00:31:00.076 A:middle
This subtree may also be a part

00:31:00.076 --> 00:31:01.646 A:middle
of a larger Accessibility Tree,

00:31:01.716 --> 00:31:03.666 A:middle
mixed in with UiKit or AppKit

00:31:03.666 --> 00:31:04.146 A:middle
elements.

00:31:04.836 --> 00:31:07.106 A:middle
The SwiftUI tree can even be a

00:31:07.106 --> 00:31:08.346 A:middle
parent of other platform

00:31:08.346 --> 00:31:10.166 A:middle
elements bridged over using a UI

00:31:10.166 --> 00:31:11.406 A:middle
or NSViewRepresentable.

00:31:12.026 --> 00:31:14.506 A:middle
And you'll notice the levels of

00:31:14.506 --> 00:31:15.966 A:middle
hierarchy in this tree and you

00:31:15.966 --> 00:31:17.116 A:middle
might be thinking about how

00:31:17.116 --> 00:31:18.506 A:middle
quickly this can become complex.

00:31:19.296 --> 00:31:20.556 A:middle
But I'll show you how creating

00:31:20.556 --> 00:31:21.576 A:middle
hierarchy in this tree can

00:31:21.576 --> 00:31:23.106 A:middle
actually improve navigation.

00:31:24.166 --> 00:31:24.916 A:middle
So, let's take a look at our

00:31:24.916 --> 00:31:26.286 A:middle
example again.

00:31:28.336 --> 00:31:31.156 A:middle
The table cell itself has three

00:31:31.156 --> 00:31:32.276 A:middle
Accessibility elements.

00:31:32.886 --> 00:31:34.056 A:middle
VoiceOver will navigate these in

00:31:34.056 --> 00:31:35.906 A:middle
order and this works great if

00:31:35.906 --> 00:31:36.856 A:middle
you have only one cell.

00:31:36.856 --> 00:31:39.156 A:middle
But it's more likely that you'll

00:31:39.156 --> 00:31:40.576 A:middle
have hundreds of these in your

00:31:40.576 --> 00:31:40.736 A:middle
app.

00:31:42.086 --> 00:31:43.206 A:middle
And as you can see, there are a

00:31:43.206 --> 00:31:44.316 A:middle
ton of elements in this tree.

00:31:44.846 --> 00:31:46.326 A:middle
And it doesn't seem very useful

00:31:46.326 --> 00:31:47.316 A:middle
to have a lot of repetitive

00:31:47.316 --> 00:31:48.566 A:middle
information with the follow and

00:31:48.566 --> 00:31:49.236 A:middle
share buttons.

00:31:49.996 --> 00:31:50.946 A:middle
If you landed on this follow

00:31:50.946 --> 00:31:52.536 A:middle
button, how would you know if it

00:31:52.536 --> 00:31:54.866 A:middle
was for person 5 or person 6?

00:31:55.306 --> 00:31:56.356 A:middle
There's no context here unless

00:31:56.356 --> 00:31:56.906 A:middle
you look around.

00:31:57.926 --> 00:31:58.766 A:middle
But we can make this a lot

00:31:58.766 --> 00:31:59.056 A:middle
simpler.

00:31:59.726 --> 00:32:02.956 A:middle
And we'll do this by creating an

00:31:59.726 --> 00:32:02.956 A:middle
And we'll do this by creating an

00:32:02.956 --> 00:32:04.376 A:middle
Accessibility element at a

00:32:04.376 --> 00:32:05.456 A:middle
higher level than in the view

00:32:05.456 --> 00:32:05.696 A:middle
tree.

00:32:07.316 --> 00:32:08.556 A:middle
We can find a view that is a

00:32:08.616 --> 00:32:09.836 A:middle
parent of our Accessibility

00:32:09.836 --> 00:32:11.776 A:middle
elements and create a new

00:32:11.776 --> 00:32:12.356 A:middle
element there.

00:32:13.736 --> 00:32:15.986 A:middle
In our case, we'll use the

00:32:19.276 --> 00:32:19.396 A:middle
HStack.

00:32:19.616 --> 00:32:20.756 A:middle
We can use the Accessibility

00:32:20.756 --> 00:32:22.356 A:middle
element function on our HStack

00:32:22.526 --> 00:32:23.446 A:middle
to create a new element.

00:32:24.446 --> 00:32:26.496 A:middle
Specifying .combine will merge

00:32:26.546 --> 00:32:28.166 A:middle
the Accessibility provided by

00:32:28.166 --> 00:32:29.486 A:middle
the children into one element.

00:32:30.596 --> 00:32:32.806 A:middle
In this case, the text view will

00:32:32.806 --> 00:32:34.526 A:middle
provide the elements label and

00:32:34.526 --> 00:32:35.326 A:middle
the two buttons will

00:32:35.326 --> 00:32:36.696 A:middle
automatically be converted into

00:32:36.696 --> 00:32:37.446 A:middle
Custom Actions.

00:32:41.206 --> 00:32:42.706 A:middle
And now, VoiceOver will see just

00:32:42.706 --> 00:32:44.216 A:middle
one element here which will read

00:32:44.216 --> 00:32:46.596 A:middle
the person's name and that there

00:32:46.656 --> 00:32:49.086 A:middle
are actions available.

00:32:50.516 --> 00:32:55.596 A:middle
[ Applause ]

00:32:56.096 --> 00:32:57.026 A:middle
And with these changes we've

00:32:57.026 --> 00:32:58.456 A:middle
significantly reduced the number

00:32:58.456 --> 00:32:59.406 A:middle
of elements in this tree.

00:33:00.136 --> 00:33:01.376 A:middle
You can navigate the cells one

00:33:01.376 --> 00:33:02.456 A:middle
by one as expected.

00:33:03.876 --> 00:33:05.286 A:middle
You can access the buttons

00:33:05.476 --> 00:33:07.126 A:middle
through Custom Actions.

00:33:07.916 --> 00:33:09.606 A:middle
So, grouping related UI like

00:33:09.646 --> 00:33:11.476 A:middle
this is a simple yet great way

00:33:11.626 --> 00:33:14.156 A:middle
to improve navigation in your

00:33:15.266 --> 00:33:15.346 A:middle
app.

00:33:16.036 --> 00:33:17.156 A:middle
Another important component of

00:33:17.156 --> 00:33:18.886 A:middle
navigation and Accessibility is

00:33:18.886 --> 00:33:19.236 A:middle
ordering.

00:33:20.776 --> 00:33:21.856 A:middle
There may be situations where

00:33:21.856 --> 00:33:22.806 A:middle
you find that the default

00:33:22.806 --> 00:33:23.886 A:middle
ordering isn't giving you the

00:33:23.886 --> 00:33:24.976 A:middle
experience that you'd expect.

00:33:26.086 --> 00:33:26.886 A:middle
So, you may have noticed from

00:33:26.886 --> 00:33:28.506 A:middle
the video earlier that the reset

00:33:28.506 --> 00:33:30.076 A:middle
colors button was actually the

00:33:30.076 --> 00:33:31.166 A:middle
second element in the swipe

00:33:31.166 --> 00:33:31.386 A:middle
order.

00:33:32.936 --> 00:33:34.406 A:middle
The two elements are arranged in

00:33:34.406 --> 00:33:36.256 A:middle
a ZStack which orders elements

00:33:36.256 --> 00:33:37.626 A:middle
from back to front by default.

00:33:38.906 --> 00:33:40.176 A:middle
Visually though, the button

00:33:40.176 --> 00:33:41.686 A:middle
appears above the contrast

00:33:41.686 --> 00:33:42.026 A:middle
ratio.

00:33:42.686 --> 00:33:45.246 A:middle
So, in this case we might want

00:33:45.246 --> 00:33:46.566 A:middle
to swap that.

00:33:47.656 --> 00:33:49.056 A:middle
To customize this order, we can

00:33:49.056 --> 00:33:49.876 A:middle
use sortPriority.

00:33:53.386 --> 00:33:54.806 A:middle
So, all elements have a default

00:33:54.806 --> 00:33:55.736 A:middle
sortPriority of 0.

00:33:56.426 --> 00:33:58.156 A:middle
And elements in a container are

00:33:58.156 --> 00:33:59.496 A:middle
sorted from highest to lowest

00:33:59.496 --> 00:33:59.906 A:middle
priority.

00:34:01.216 --> 00:34:02.506 A:middle
So, we can set the sortPriority

00:34:02.826 --> 00:34:03.976 A:middle
by calling the Accessibility

00:34:03.976 --> 00:34:05.966 A:middle
modifier function with the

00:34:05.966 --> 00:34:06.996 A:middle
sortPriority parameter.

00:34:08.966 --> 00:34:09.835 A:middle
So, we'll give our button a

00:34:09.835 --> 00:34:12.315 A:middle
sortPriority of 1 and since the

00:34:12.315 --> 00:34:14.156 A:middle
contrast ratio has a priority of

00:34:14.156 --> 00:34:15.926 A:middle
zero, the button will be scanned

00:34:15.926 --> 00:34:18.186 A:middle
first and the ratio will be

00:34:18.186 --> 00:34:18.746 A:middle
scanned second.

00:34:23.315 --> 00:34:26.246 A:middle
So, the Accessibility API helps

00:34:26.246 --> 00:34:27.326 A:middle
you make your apps more

00:34:27.326 --> 00:34:27.896 A:middle
understandable.

00:34:29.216 --> 00:34:30.646 A:middle
It lets you add context by

00:34:30.646 --> 00:34:32.516 A:middle
adding labels, values, and hints

00:34:32.826 --> 00:34:33.726 A:middle
using the Accessibility

00:34:33.726 --> 00:34:34.126 A:middle
function.

00:34:34.676 --> 00:34:38.166 A:middle
You can use the Accessibility

00:34:38.166 --> 00:34:40.076 A:middle
action function to add actions

00:34:40.076 --> 00:34:40.886 A:middle
and make your apps more

00:34:40.886 --> 00:34:41.386 A:middle
interactable.

00:34:42.065 --> 00:34:45.606 A:middle
And finally, you can use the

00:34:45.606 --> 00:34:47.016 A:middle
Accessibility element function

00:34:47.306 --> 00:34:48.446 A:middle
to group your elements together

00:34:48.706 --> 00:34:49.696 A:middle
and improve navigation.

00:34:50.346 --> 00:34:55.156 A:middle
With built in Accessibility and

00:34:55.156 --> 00:34:56.406 A:middle
simple enhancements with the

00:34:56.406 --> 00:34:59.836 A:middle
Accessibility API, SwiftUI lets

00:34:59.836 --> 00:35:00.966 A:middle
you make your apps accessible,

00:34:59.836 --> 00:35:00.966 A:middle
you make your apps accessible,

00:35:01.236 --> 00:35:02.466 A:middle
faster and easier than ever.

00:35:03.616 --> 00:35:04.466 A:middle
Now, back to Michael.

00:35:05.516 --> 00:35:10.500 A:middle
[ Applause ]

00:35:14.346 --> 00:35:16.626 A:middle
&gt;&gt; All right, so let us close

00:35:16.666 --> 00:35:17.866 A:middle
things up here.

00:35:18.756 --> 00:35:20.086 A:middle
One last thing before we do

00:35:20.086 --> 00:35:20.236 A:middle
that.

00:35:21.196 --> 00:35:22.476 A:middle
If you have put in all of this

00:35:22.476 --> 00:35:24.036 A:middle
work into the Accessibility of

00:35:24.036 --> 00:35:25.616 A:middle
your app, how do you know you're

00:35:25.616 --> 00:35:26.856 A:middle
actually being successful?

00:35:27.796 --> 00:35:29.366 A:middle
Well, we have two pieces of

00:35:29.366 --> 00:35:30.106 A:middle
advice for you here.

00:35:31.006 --> 00:35:32.636 A:middle
First, there is no substitute

00:35:32.746 --> 00:35:34.336 A:middle
for using your app.

00:35:34.416 --> 00:35:35.586 A:middle
That means trying it out with

00:35:35.586 --> 00:35:37.446 A:middle
our real Accessibility features

00:35:37.446 --> 00:35:39.116 A:middle
like VoiceOver, Full Keyboard

00:35:39.116 --> 00:35:40.476 A:middle
Access, and Voice Control.

00:35:41.256 --> 00:35:42.926 A:middle
For example, if you're using

00:35:42.926 --> 00:35:44.586 A:middle
your app with VoiceOver and

00:35:44.586 --> 00:35:45.916 A:middle
there's something you can't do

00:35:45.956 --> 00:35:47.206 A:middle
with just your voice or you --

00:35:47.386 --> 00:35:49.286 A:middle
there's something that you need

00:35:49.286 --> 00:35:51.166 A:middle
to look at the screen for, you

00:35:51.166 --> 00:35:52.416 A:middle
have some work to do.

00:35:52.846 --> 00:35:54.096 A:middle
Or if you're using your app with

00:35:54.096 --> 00:35:55.216 A:middle
Voice Control and there is

00:35:55.216 --> 00:35:56.306 A:middle
something you can't do with your

00:35:56.306 --> 00:35:56.566 A:middle
voice.

00:35:56.966 --> 00:35:58.356 A:middle
Or you're using your app with

00:35:58.356 --> 00:35:59.646 A:middle
Full Keyboard Access and there's

00:35:59.646 --> 00:36:00.976 A:middle
something you can't do with your

00:35:59.646 --> 00:36:00.976 A:middle
something you can't do with your

00:36:00.976 --> 00:36:02.886 A:middle
keyboard; you have some work

00:36:02.886 --> 00:36:05.676 A:middle
left to do.

00:36:05.926 --> 00:36:07.416 A:middle
Second, there is the

00:36:07.416 --> 00:36:08.816 A:middle
Accessibility Inspector.

00:36:09.546 --> 00:36:10.796 A:middle
This is a product that ships

00:36:10.796 --> 00:36:12.316 A:middle
with Xcode and can help you dig

00:36:12.316 --> 00:36:14.126 A:middle
deep into the Accessibility of

00:36:14.126 --> 00:36:14.566 A:middle
your app.

00:36:15.156 --> 00:36:17.346 A:middle
The Accessibility Inspector

00:36:17.346 --> 00:36:19.126 A:middle
doesn't replace testing your app

00:36:19.126 --> 00:36:20.396 A:middle
with our real Accessibility

00:36:20.396 --> 00:36:22.276 A:middle
features, but it can be a

00:36:22.276 --> 00:36:24.186 A:middle
powerful tool to understand your

00:36:24.186 --> 00:36:26.486 A:middle
Accessibility Tree and the debug

00:36:26.536 --> 00:36:27.366 A:middle
when things go wrong.

00:36:28.256 --> 00:36:29.196 A:middle
There are some great sessions

00:36:29.196 --> 00:36:31.746 A:middle
about the inspector on this

00:36:33.316 --> 00:36:33.476 A:middle
slide.

00:36:33.646 --> 00:36:35.566 A:middle
So, a few points to summarize

00:36:35.566 --> 00:36:36.446 A:middle
what we've talked about today.

00:36:37.896 --> 00:36:39.646 A:middle
We have worked super hard at

00:36:39.816 --> 00:36:42.106 A:middle
Apple to build SwiftUI so it can

00:36:42.106 --> 00:36:44.016 A:middle
make your apps as accessible as

00:36:44.076 --> 00:36:45.316 A:middle
possible by default.

00:36:46.466 --> 00:36:48.396 A:middle
And we've designed SwiftUI with

00:36:48.396 --> 00:36:50.086 A:middle
Accessibility in mind from the

00:36:50.086 --> 00:36:50.886 A:middle
very beginning.

00:36:51.396 --> 00:36:54.056 A:middle
We've talked today about what a

00:36:54.056 --> 00:36:55.476 A:middle
great Accessibility User

00:36:55.476 --> 00:36:56.356 A:middle
Interface is.

00:36:56.486 --> 00:36:57.486 A:middle
I know we've been drilling it

00:36:57.486 --> 00:36:58.526 A:middle
into you, but remember,

00:36:58.756 --> 00:37:00.756 A:middle
understandable, interactable,

00:36:58.756 --> 00:37:00.756 A:middle
understandable, interactable,

00:37:01.176 --> 00:37:02.056 A:middle
and navigable.

00:37:04.956 --> 00:37:07.236 A:middle
To go beyond the basics and add

00:37:07.356 --> 00:37:09.486 A:middle
polish, SwiftUI has a powerful

00:37:09.486 --> 00:37:11.326 A:middle
Accessibility API for you to

00:37:11.326 --> 00:37:11.956 A:middle
use.

00:37:12.906 --> 00:37:15.146 A:middle
And that API is now finally

00:37:15.246 --> 00:37:16.696 A:middle
unified across all our

00:37:16.726 --> 00:37:17.236 A:middle
platforms.

00:37:17.236 --> 00:37:18.706 A:middle
So, you only have to learn it

00:37:18.706 --> 00:37:19.126 A:middle
once.

00:37:20.516 --> 00:37:25.546 A:middle
[ Applause ]

00:37:26.046 --> 00:37:27.826 A:middle
Two useful references going

00:37:27.826 --> 00:37:28.286 A:middle
forward.

00:37:28.356 --> 00:37:29.796 A:middle
First, we will be releasing

00:37:29.796 --> 00:37:31.106 A:middle
sample code for the session.

00:37:31.106 --> 00:37:32.596 A:middle
You can find it at the link

00:37:32.596 --> 00:37:33.316 A:middle
above.

00:37:33.746 --> 00:37:35.336 A:middle
And second, we have an

00:37:35.336 --> 00:37:36.786 A:middle
Accessibility lab coming up

00:37:36.786 --> 00:37:38.336 A:middle
immediately after this session.

00:37:38.726 --> 00:37:40.846 A:middle
Come join us to meet us, talk

00:37:40.846 --> 00:37:41.896 A:middle
about SwiftUI, and

00:37:41.896 --> 00:37:42.706 A:middle
Accessibility.

00:37:43.196 --> 00:37:44.046 A:middle
We are looking forward to

00:37:44.046 --> 00:37:46.396 A:middle
meeting all of you.

00:37:46.616 --> 00:37:48.686 A:middle
We're super excited of the new

00:37:48.686 --> 00:37:50.176 A:middle
era of accessible apps that you

00:37:50.176 --> 00:37:51.926 A:middle
folks will create with SwiftUI.

00:37:52.506 --> 00:37:53.416 A:middle
Thank you for listening.

00:37:54.516 --> 00:37:57.500 A:middle
[ Applause ]
