WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[ Music ]

00:00:08.516 --> 00:00:12.226 A:middle
[ Applause ]

00:00:12.726 --> 00:00:13.826 A:middle
&gt;&gt; Good morning, everyone.

00:00:14.816 --> 00:00:16.296 A:middle
Welcome to Getting the Most out

00:00:16.296 --> 00:00:17.026 A:middle
of Simulator.

00:00:17.146 --> 00:00:18.376 A:middle
My name is Russ Bishop.

00:00:18.566 --> 00:00:20.466 A:middle
I'm an engineer on the Simulator

00:00:20.466 --> 00:00:21.066 A:middle
and Devices team.

00:00:21.066 --> 00:00:22.366 A:middle
And let's go ahead and get

00:00:22.366 --> 00:00:23.000 A:middle
started.

00:00:25.026 --> 00:00:26.336 A:middle
Today we're going to tell you a

00:00:26.336 --> 00:00:27.156 A:middle
little bit about what the

00:00:27.156 --> 00:00:28.056 A:middle
Simulator is.

00:00:28.646 --> 00:00:30.926 A:middle
Then Tracy is going to come out

00:00:30.926 --> 00:00:33.156 A:middle
and tell you about some burning

00:00:33.156 --> 00:00:34.436 A:middle
questions and answers and

00:00:34.436 --> 00:00:35.126 A:middle
getting the most out of the

00:00:35.126 --> 00:00:36.296 A:middle
Simulator application.

00:00:36.906 --> 00:00:38.906 A:middle
I'm going to come back and tell

00:00:38.906 --> 00:00:40.126 A:middle
you about using Simulator from

00:00:40.126 --> 00:00:41.756 A:middle
the command line, and then

00:00:41.756 --> 00:00:42.876 A:middle
finally Katelyn's going to come

00:00:42.876 --> 00:00:44.266 A:middle
and tell you all about Metal in

00:00:44.266 --> 00:00:44.786 A:middle
the Simulator.

00:00:46.096 --> 00:00:49.396 A:middle
So what is Simulator?

00:00:49.536 --> 00:00:53.036 A:middle
Well, it is the best way to

00:00:53.036 --> 00:00:55.476 A:middle
simulate iOS, tvOS and watchOS

00:00:55.506 --> 00:00:57.566 A:middle
devices on your Mac.

00:00:57.906 --> 00:01:00.016 A:middle
It can be an amazing tool for

00:00:57.906 --> 00:01:00.016 A:middle
It can be an amazing tool for

00:01:00.016 --> 00:01:00.526 A:middle
development.

00:01:00.986 --> 00:01:02.966 A:middle
Your Mac has more cores, more

00:01:02.966 --> 00:01:03.406 A:middle
memory.

00:01:03.716 --> 00:01:05.306 A:middle
You can run multiple devices in

00:01:05.306 --> 00:01:05.806 A:middle
parallel.

00:01:06.466 --> 00:01:08.886 A:middle
So it is a great tool, but as an

00:01:08.886 --> 00:01:11.456 A:middle
engineer, that explanation might

00:01:11.456 --> 00:01:12.786 A:middle
be a little bit unsatisfying.

00:01:13.556 --> 00:01:16.046 A:middle
So to talk really about what the

00:01:16.046 --> 00:01:17.686 A:middle
Simulator is at a technical

00:01:17.686 --> 00:01:18.876 A:middle
level, we need to talk a little

00:01:18.876 --> 00:01:20.116 A:middle
bit about what an operating

00:01:20.116 --> 00:01:20.686 A:middle
system is.

00:01:20.686 --> 00:01:24.736 A:middle
We have a kernel, manages

00:01:24.736 --> 00:01:26.296 A:middle
hardware resources, allocates

00:01:26.296 --> 00:01:27.646 A:middle
memory, arbitrates between

00:01:27.646 --> 00:01:28.196 A:middle
processes.

00:01:28.286 --> 00:01:29.346 A:middle
That's pretty straightforward.

00:01:29.986 --> 00:01:32.456 A:middle
macOS then on top of that has a

00:01:32.456 --> 00:01:33.256 A:middle
userspace.

00:01:33.816 --> 00:01:36.326 A:middle
We have PID 1, launchd.

00:01:36.666 --> 00:01:38.526 A:middle
We might have some daemons

00:01:38.526 --> 00:01:39.416 A:middle
running on top of that, some

00:01:39.416 --> 00:01:39.796 A:middle
services.

00:01:39.796 --> 00:01:42.076 A:middle
We have some frameworks, and

00:01:42.076 --> 00:01:43.826 A:middle
then we run our applications.

00:01:44.686 --> 00:01:48.196 A:middle
Simulator is essentially a

00:01:48.196 --> 00:01:49.226 A:middle
separate userspace.

00:01:49.936 --> 00:01:52.326 A:middle
It has its own launchd, its own

00:01:52.326 --> 00:01:54.236 A:middle
daemons, its own frameworks and

00:01:54.476 --> 00:01:55.826 A:middle
runs its own applications.

00:01:56.346 --> 00:01:57.466 A:middle
These things are all completely

00:01:57.466 --> 00:01:59.826 A:middle
separate and isolated from your

00:01:59.826 --> 00:02:00.966 A:middle
Mac's userspace.

00:01:59.826 --> 00:02:00.966 A:middle
Mac's userspace.

00:02:01.166 --> 00:02:02.416 A:middle
And if I start another

00:02:02.416 --> 00:02:04.226 A:middle
Simulator, that essentially

00:02:04.226 --> 00:02:06.286 A:middle
brings up another isolated

00:02:06.286 --> 00:02:06.806 A:middle
userspace.

00:02:06.806 --> 00:02:08.416 A:middle
It's isolated not only from the

00:02:08.416 --> 00:02:10.126 A:middle
macOS userspace but also from

00:02:10.126 --> 00:02:11.586 A:middle
any other running Simulators.

00:02:12.506 --> 00:02:14.296 A:middle
So at a technical level, what a

00:02:14.356 --> 00:02:17.666 A:middle
Simulator is is the iOS, watchOS

00:02:17.666 --> 00:02:21.166 A:middle
or tvOS userspace but running on

00:02:21.166 --> 00:02:21.906 A:middle
the Mac kernel.

00:02:22.466 --> 00:02:25.636 A:middle
Has a separate launchd, separate

00:02:25.636 --> 00:02:27.426 A:middle
daemons and services, separate

00:02:27.426 --> 00:02:29.446 A:middle
notifications domains, separate

00:02:29.446 --> 00:02:31.546 A:middle
URL sessions, separate mach

00:02:31.546 --> 00:02:32.666 A:middle
bootstrap.

00:02:33.236 --> 00:02:34.736 A:middle
It does share the same

00:02:34.736 --> 00:02:36.146 A:middle
filesystem but has a separate

00:02:36.146 --> 00:02:36.826 A:middle
Home directory.

00:02:38.336 --> 00:02:41.716 A:middle
From libSystem up, everything is

00:02:41.716 --> 00:02:43.036 A:middle
built for the platform that

00:02:43.036 --> 00:02:44.776 A:middle
we're simulating, so that

00:02:44.776 --> 00:02:46.416 A:middle
includes, at the lowest layers,

00:02:46.416 --> 00:02:47.916 A:middle
you know, libSystem, all the

00:02:47.916 --> 00:02:48.826 A:middle
Syslibs all the way up to

00:02:49.006 --> 00:02:51.096 A:middle
UIKit and other frameworks.

00:02:52.236 --> 00:02:54.336 A:middle
It uses the ABI for that

00:02:54.336 --> 00:02:56.286 A:middle
platform, and it's built

00:02:56.466 --> 00:02:58.136 A:middle
natively for your Mac's

00:02:58.166 --> 00:02:58.766 A:middle
processor.

00:02:59.356 --> 00:03:00.566 A:middle
It's not an emulator.

00:02:59.356 --> 00:03:00.566 A:middle
It's not an emulator.

00:03:01.146 --> 00:03:03.606 A:middle
A couple of more details to

00:03:03.606 --> 00:03:04.000 A:middle
cover.

00:03:06.116 --> 00:03:07.946 A:middle
The memory and CPU limits of

00:03:07.986 --> 00:03:10.526 A:middle
Simulator are -- or rather, the

00:03:10.526 --> 00:03:11.666 A:middle
memory and CPU limits of the

00:03:11.666 --> 00:03:14.526 A:middle
devices are not simulated, so if

00:03:14.526 --> 00:03:16.766 A:middle
your Mac has -- you have one of

00:03:16.766 --> 00:03:18.156 A:middle
the new Mac Pros and you have a

00:03:18.296 --> 00:03:20.006 A:middle
terabyte of memory, your

00:03:20.006 --> 00:03:20.916 A:middle
simulator can allocate a

00:03:20.916 --> 00:03:21.626 A:middle
terabyte of memory.

00:03:22.346 --> 00:03:24.666 A:middle
If you try that on an iPhone X,

00:03:25.216 --> 00:03:26.476 A:middle
that probably isn't going to

00:03:26.866 --> 00:03:27.000 A:middle
work.

00:03:28.956 --> 00:03:30.596 A:middle
Mac also has different number of

00:03:30.596 --> 00:03:31.686 A:middle
cores, different threading

00:03:31.686 --> 00:03:32.196 A:middle
behavior.

00:03:32.536 --> 00:03:33.496 A:middle
That can be a boon.

00:03:33.496 --> 00:03:35.626 A:middle
It can help expose data races or

00:03:35.626 --> 00:03:37.426 A:middle
other threading conditions, but

00:03:37.426 --> 00:03:39.186 A:middle
it is something to be aware of.

00:03:39.896 --> 00:03:41.756 A:middle
The application sandbox is not

00:03:41.756 --> 00:03:44.326 A:middle
enforced, so a process in the

00:03:44.326 --> 00:03:45.676 A:middle
Simulator can write outside of

00:03:45.676 --> 00:03:46.926 A:middle
its sandbox, but, again, if you

00:03:46.926 --> 00:03:48.716 A:middle
try that on the device, it's not

00:03:48.716 --> 00:03:50.716 A:middle
going to work.

00:03:50.906 --> 00:03:52.896 A:middle
However, most people's Macs are

00:03:52.896 --> 00:03:54.736 A:middle
setup with a case-insensitive

00:03:54.736 --> 00:03:56.116 A:middle
file system, but the Simulator

00:03:56.836 --> 00:03:58.076 A:middle
goes ahead and runs in a mode

00:03:58.076 --> 00:04:00.176 A:middle
where all processes are using a

00:03:58.076 --> 00:04:00.176 A:middle
where all processes are using a

00:04:00.176 --> 00:04:01.666 A:middle
case-sensitive file system

00:04:01.666 --> 00:04:02.226 A:middle
accesses.

00:04:03.296 --> 00:04:05.516 A:middle
And then the, last but not

00:04:05.516 --> 00:04:07.326 A:middle
least, the Thread Sanitizer is

00:04:07.406 --> 00:04:08.376 A:middle
supported in the Simulator,

00:04:08.376 --> 00:04:09.626 A:middle
whereas it's not supported on

00:04:09.626 --> 00:04:10.106 A:middle
devices.

00:04:10.106 --> 00:04:11.976 A:middle
So that can be a useful tool.

00:04:11.976 --> 00:04:14.186 A:middle
So now, I'm going to hand this

00:04:14.186 --> 00:04:15.956 A:middle
over to Tracy who's going to

00:04:16.076 --> 00:04:16.836 A:middle
talk about some burning

00:04:16.836 --> 00:04:17.796 A:middle
questions and answers.

00:04:18.636 --> 00:04:19.116 A:middle
Tracy?

00:04:20.516 --> 00:04:24.546 A:middle
[ Applause ]

00:04:25.046 --> 00:04:25.536 A:middle
&gt;&gt; Good morning.

00:04:26.426 --> 00:04:27.656 A:middle
My name is Tracy, and I work for

00:04:27.656 --> 00:04:28.826 A:middle
the Development Technologies

00:04:28.826 --> 00:04:29.096 A:middle
group.

00:04:29.406 --> 00:04:30.946 A:middle
So, you know, we often get

00:04:30.946 --> 00:04:33.876 A:middle
questions in our session and in

00:04:33.876 --> 00:04:35.996 A:middle
labs and through our user forums

00:04:35.996 --> 00:04:36.896 A:middle
and via feedback.

00:04:37.396 --> 00:04:38.806 A:middle
So we thought it might be useful

00:04:38.806 --> 00:04:40.176 A:middle
to go over the answers to some

00:04:40.176 --> 00:04:41.226 A:middle
of those questions.

00:04:41.486 --> 00:04:43.366 A:middle
So my goal is that you'll walk

00:04:43.366 --> 00:04:44.936 A:middle
away knowing at least one thing

00:04:44.936 --> 00:04:46.176 A:middle
you didn't know before about the

00:04:46.176 --> 00:04:46.806 A:middle
Simulator.

00:04:47.536 --> 00:04:48.916 A:middle
But to start off, I'd like to

00:04:48.916 --> 00:04:50.466 A:middle
talk for a bit about why the

00:04:50.466 --> 00:04:51.816 A:middle
Simulator should be important to

00:04:51.816 --> 00:04:52.806 A:middle
your workflow.

00:04:53.506 --> 00:04:54.596 A:middle
Well, if we take into

00:04:54.596 --> 00:04:57.436 A:middle
consideration all of the devices

00:04:57.436 --> 00:04:59.526 A:middle
that are compatible with iOS 13,

00:05:00.086 --> 00:05:01.616 A:middle
and then we add on all of the

00:05:01.616 --> 00:05:02.826 A:middle
other operating systems and

00:05:02.826 --> 00:05:04.586 A:middle
devices, you're looking at

00:05:04.586 --> 00:05:06.446 A:middle
literally hundreds of devices

00:05:06.446 --> 00:05:07.826 A:middle
and operating systems available

00:05:07.826 --> 00:05:08.736 A:middle
to your customers.

00:05:08.916 --> 00:05:10.726 A:middle
And that's just the iPhones and

00:05:10.726 --> 00:05:12.346 A:middle
the iPads, not even including

00:05:12.436 --> 00:05:13.776 A:middle
the Watches and the TVs.

00:05:14.586 --> 00:05:16.016 A:middle
Well, that's a lot of stuff to

00:05:16.016 --> 00:05:16.706 A:middle
be carrying around in your

00:05:16.706 --> 00:05:16.996 A:middle
backpack.

00:05:16.996 --> 00:05:19.466 A:middle
And we thought about, "Well,

00:05:19.466 --> 00:05:20.466 A:middle
what about testing with these

00:05:20.466 --> 00:05:21.756 A:middle
older operating systems?"

00:05:22.206 --> 00:05:24.426 A:middle
So I'm sure you have customers

00:05:24.426 --> 00:05:26.156 A:middle
that are using older devices and

00:05:26.156 --> 00:05:27.086 A:middle
operating systems.

00:05:27.886 --> 00:05:28.576 A:middle
So you might be thinking,

00:05:28.576 --> 00:05:30.166 A:middle
"Tracy, there's no way that I

00:05:30.166 --> 00:05:31.216 A:middle
could test all these

00:05:31.216 --> 00:05:32.266 A:middle
configurations."

00:05:32.706 --> 00:05:33.806 A:middle
Well, that might be true.

00:05:34.316 --> 00:05:35.566 A:middle
And although you may not have

00:05:35.566 --> 00:05:37.076 A:middle
all these physical devices,

00:05:37.736 --> 00:05:38.956 A:middle
through the Simulator, you will

00:05:38.956 --> 00:05:40.746 A:middle
have access to every operating

00:05:40.746 --> 00:05:42.336 A:middle
system and device available.

00:05:43.076 --> 00:05:44.686 A:middle
That makes the Simulator a very

00:05:44.686 --> 00:05:45.956 A:middle
important tool to your everyday

00:05:45.956 --> 00:05:46.456 A:middle
workflow.

00:05:47.176 --> 00:05:48.306 A:middle
All right, let's get on to those

00:05:48.306 --> 00:05:49.236 A:middle
burning questions.

00:05:49.926 --> 00:05:52.046 A:middle
Number one, can I zoom in on the

00:05:52.046 --> 00:05:52.586 A:middle
Simulator?

00:05:53.466 --> 00:05:54.146 A:middle
Yes, you can.

00:05:54.486 --> 00:05:55.726 A:middle
You can simulate the pinch

00:05:55.726 --> 00:05:57.346 A:middle
gesture by click and dragging

00:05:57.346 --> 00:05:58.776 A:middle
while holding down the Option

00:06:01.616 --> 00:06:01.876 A:middle
key.

00:06:02.426 --> 00:06:04.096 A:middle
Another gesture you can simulate

00:06:04.096 --> 00:06:05.446 A:middle
is drag and drop.

00:06:06.246 --> 00:06:07.336 A:middle
First, you grab the app.

00:06:08.556 --> 00:06:09.776 A:middle
Then you want to click down the

00:06:09.776 --> 00:06:12.036 A:middle
Control key to simulate a hold,

00:06:12.726 --> 00:06:14.866 A:middle
drag to where you want to go and

00:06:14.866 --> 00:06:16.726 A:middle
then just let go of the Hold

00:06:16.946 --> 00:06:17.000 A:middle
key.

00:06:19.306 --> 00:06:20.106 A:middle
Oh, that's a good one [laughs].

00:06:22.496 --> 00:06:23.256 A:middle
Next question.

00:06:23.686 --> 00:06:25.506 A:middle
Can I change which audio device

00:06:25.506 --> 00:06:27.246 A:middle
the Simulator uses for input and

00:06:27.246 --> 00:06:27.716 A:middle
output?

00:06:28.366 --> 00:06:29.046 A:middle
Yes, you can.

00:06:29.646 --> 00:06:30.796 A:middle
So that's done through the

00:06:30.796 --> 00:06:31.716 A:middle
hardware menu.

00:06:32.096 --> 00:06:34.326 A:middle
You can select which audio

00:06:34.326 --> 00:06:37.186 A:middle
device you want to route to.

00:06:37.426 --> 00:06:38.596 A:middle
That way you can listen to your

00:06:38.596 --> 00:06:39.846 A:middle
Apple music without

00:06:39.846 --> 00:06:40.476 A:middle
interruption.

00:06:40.976 --> 00:06:43.116 A:middle
Next question.

00:06:43.656 --> 00:06:44.706 A:middle
Does iCloud work in the

00:06:44.706 --> 00:06:45.256 A:middle
Simulator?

00:06:45.866 --> 00:06:46.546 A:middle
Yes, it does.

00:06:47.066 --> 00:06:48.496 A:middle
You can log into iCloud through

00:06:48.496 --> 00:06:49.826 A:middle
the Settings app, and then

00:06:49.826 --> 00:06:51.136 A:middle
you'll have access to all your

00:06:51.136 --> 00:06:52.826 A:middle
Calendars, Contacts and every

00:06:52.826 --> 00:06:53.966 A:middle
other app that's available

00:06:54.206 --> 00:06:55.196 A:middle
through iCloud and in the

00:06:55.196 --> 00:06:55.756 A:middle
Simulator.

00:06:57.136 --> 00:06:58.916 A:middle
You can also trigger an iCloud

00:06:58.956 --> 00:07:00.936 A:middle
sync by using the Debug menu,

00:06:58.956 --> 00:07:00.936 A:middle
sync by using the Debug menu,

00:07:01.246 --> 00:07:02.926 A:middle
Trigger iCloud Sync.

00:07:06.536 --> 00:07:07.956 A:middle
Oh, look. I have a vacation

00:07:07.956 --> 00:07:08.726 A:middle
coming up next week.

00:07:08.776 --> 00:07:08.986 A:middle
Good.

00:07:10.006 --> 00:07:11.536 A:middle
Next question.

00:07:12.116 --> 00:07:13.566 A:middle
Can I use a Shake Gesture?

00:07:14.546 --> 00:07:15.146 A:middle
Yes, you can.

00:07:15.146 --> 00:07:17.296 A:middle
In this example, a colleague

00:07:17.296 --> 00:07:19.216 A:middle
created an app that will

00:07:19.296 --> 00:07:20.716 A:middle
indicate when a shake is

00:07:20.716 --> 00:07:21.226 A:middle
received.

00:07:21.816 --> 00:07:23.206 A:middle
So you go to the Hardware menu,

00:07:23.486 --> 00:07:25.256 A:middle
and you select Shake Gesture.

00:07:25.836 --> 00:07:30.356 A:middle
You can also simulate a memory

00:07:30.356 --> 00:07:32.166 A:middle
warning by going to the Debug

00:07:32.166 --> 00:07:32.516 A:middle
menu.

00:07:39.066 --> 00:07:40.106 A:middle
Next question.

00:07:40.816 --> 00:07:42.806 A:middle
How do I get older simulators to

00:07:42.806 --> 00:07:44.696 A:middle
show up as deployment targets?

00:07:45.576 --> 00:07:46.916 A:middle
So this is all done through the

00:07:46.916 --> 00:07:48.456 A:middle
Devices and Simulator pane.

00:07:49.066 --> 00:07:50.156 A:middle
It's found under the Windows

00:07:50.156 --> 00:07:51.126 A:middle
menu, or you can use the

00:07:51.126 --> 00:07:52.156 A:middle
keyboard shortcut.

00:07:53.436 --> 00:07:55.656 A:middle
Xcode 11 now ships with a

00:07:55.656 --> 00:07:56.996 A:middle
default list of simulators,

00:07:57.036 --> 00:07:57.956 A:middle
which you may have noticed have

00:07:57.956 --> 00:07:59.166 A:middle
been pared down quite a bit.

00:07:59.706 --> 00:08:01.006 A:middle
But you can always install

00:07:59.706 --> 00:08:01.006 A:middle
But you can always install

00:08:01.006 --> 00:08:02.986 A:middle
additional simulators as needed.

00:08:03.886 --> 00:08:04.846 A:middle
How are we going to do that is

00:08:04.846 --> 00:08:05.626 A:middle
we're going to go to the

00:08:05.626 --> 00:08:06.606 A:middle
Simulators tab.

00:08:07.896 --> 00:08:08.886 A:middle
Next thing we're going to do is

00:08:08.926 --> 00:08:10.216 A:middle
click on the Plus button at the

00:08:10.216 --> 00:08:10.846 A:middle
bottom left.

00:08:12.476 --> 00:08:14.426 A:middle
Then you will select your device

00:08:14.486 --> 00:08:17.336 A:middle
type and what operating system

00:08:17.336 --> 00:08:18.156 A:middle
you want to use.

00:08:19.356 --> 00:08:20.586 A:middle
In this case, for the device

00:08:20.656 --> 00:08:22.496 A:middle
type, let's select the iPad mini

00:08:22.496 --> 00:08:23.076 A:middle
simulator.

00:08:23.836 --> 00:08:26.366 A:middle
Xcode 11 now ships with support

00:08:26.366 --> 00:08:28.016 A:middle
for iPad minis going back to

00:08:28.016 --> 00:08:28.806 A:middle
iPad mini 2.

00:08:28.806 --> 00:08:31.826 A:middle
So you're going to give this sim

00:08:31.826 --> 00:08:33.775 A:middle
a name, and then you click

00:08:33.775 --> 00:08:34.246 A:middle
Create.

00:08:35.025 --> 00:08:36.306 A:middle
And now your newly created

00:08:36.306 --> 00:08:38.385 A:middle
simulator target will show up.

00:08:38.976 --> 00:08:40.696 A:middle
And you can run your app to the

00:08:40.696 --> 00:08:42.116 A:middle
new iPad mini simulator.

00:08:42.686 --> 00:08:45.936 A:middle
Let's talk for a minute about

00:08:45.936 --> 00:08:47.106 A:middle
Watch sims.

00:08:47.616 --> 00:08:49.346 A:middle
So preset Watch pairs are

00:08:49.346 --> 00:08:50.676 A:middle
automatically added to the

00:08:50.676 --> 00:08:53.246 A:middle
iPhone X and the Xs Max, but you

00:08:53.246 --> 00:08:54.786 A:middle
can add a new pair by clicking

00:08:54.786 --> 00:08:58.296 A:middle
on the Plus button.

00:08:58.446 --> 00:08:59.686 A:middle
Again, you'll select your

00:08:59.686 --> 00:09:01.026 A:middle
operating system and device

00:08:59.686 --> 00:09:01.026 A:middle
operating system and device

00:09:01.026 --> 00:09:04.066 A:middle
type, and then you click Pair.

00:09:04.726 --> 00:09:09.346 A:middle
So to change the act of pairs,

00:09:09.346 --> 00:09:10.816 A:middle
all we do is click on the Radio

00:09:10.816 --> 00:09:10.976 A:middle
button.

00:09:15.636 --> 00:09:17.526 A:middle
You can also download older

00:09:17.526 --> 00:09:19.826 A:middle
simulator runtimes by going to

00:09:19.826 --> 00:09:21.176 A:middle
the Xcode Preferences and

00:09:21.176 --> 00:09:22.436 A:middle
selecting Components.

00:09:22.846 --> 00:09:23.996 A:middle
You can choose what you need and

00:09:23.996 --> 00:09:24.966 A:middle
then click Install.

00:09:25.276 --> 00:09:26.906 A:middle
Older simulators will install,

00:09:27.056 --> 00:09:27.946 A:middle
and then you will be able to

00:09:27.946 --> 00:09:29.166 A:middle
select them based on the

00:09:29.166 --> 00:09:30.566 A:middle
deployment target settings in

00:09:30.566 --> 00:09:31.286 A:middle
your project.

00:09:31.876 --> 00:09:34.246 A:middle
You can also get older

00:09:34.246 --> 00:09:35.456 A:middle
simulators by using the

00:09:35.456 --> 00:09:37.186 A:middle
Hardware-Device menu, and they

00:09:37.186 --> 00:09:37.976 A:middle
will just launch.

00:09:40.176 --> 00:09:42.186 A:middle
This will allow you to show

00:09:42.626 --> 00:09:43.956 A:middle
newer operating systems and

00:09:43.956 --> 00:09:45.456 A:middle
older operating systems side by

00:09:45.916 --> 00:09:46.000 A:middle
side.

00:09:49.376 --> 00:09:50.986 A:middle
You can hide simulator targets

00:09:51.036 --> 00:09:52.796 A:middle
by deselecting the Show as run

00:09:52.796 --> 00:09:53.596 A:middle
destination.

00:09:54.566 --> 00:09:56.106 A:middle
You can also delete simulator

00:09:56.106 --> 00:09:57.336 A:middle
targets if you don't want them

00:09:57.336 --> 00:09:59.146 A:middle
around anymore, and you can use

00:09:59.146 --> 00:09:59.796 A:middle
the Delete button on your

00:09:59.796 --> 00:09:59.976 A:middle
keyboard.

00:10:00.496 --> 00:10:02.376 A:middle
Or you can use the Contextual

00:10:02.376 --> 00:10:03.936 A:middle
menu, holding down the Control

00:10:03.936 --> 00:10:04.186 A:middle
key.

00:10:04.186 --> 00:10:05.886 A:middle
You can also select these other

00:10:05.886 --> 00:10:06.846 A:middle
items that are shown.

00:10:07.336 --> 00:10:08.426 A:middle
Remember, if you change your

00:10:08.426 --> 00:10:09.506 A:middle
mind, you can always add a

00:10:09.506 --> 00:10:11.216 A:middle
simulator target back again by

00:10:11.216 --> 00:10:11.886 A:middle
creating them.

00:10:12.466 --> 00:10:13.596 A:middle
All right, let's go on to the

00:10:13.596 --> 00:10:14.326 A:middle
next question.

00:10:14.926 --> 00:10:16.306 A:middle
The simulators are overtaking my

00:10:16.306 --> 00:10:16.856 A:middle
screen.

00:10:16.856 --> 00:10:17.896 A:middle
Can I make them smaller?

00:10:19.366 --> 00:10:20.096 A:middle
Yes, you can.

00:10:20.096 --> 00:10:21.796 A:middle
So there are three presets that

00:10:21.796 --> 00:10:22.976 A:middle
are available on the Simulator:

00:10:23.866 --> 00:10:25.946 A:middle
Physical Size, Point Accurate

00:10:25.946 --> 00:10:28.036 A:middle
and Pixel Accurate.

00:10:28.396 --> 00:10:29.456 A:middle
So what do these all mean?

00:10:29.866 --> 00:10:31.336 A:middle
Well, Physical Size is actually

00:10:31.336 --> 00:10:32.726 A:middle
the physical size of the device.

00:10:33.176 --> 00:10:34.346 A:middle
You can hold up your device to

00:10:34.346 --> 00:10:35.316 A:middle
the screen, and it will be the

00:10:35.316 --> 00:10:36.206 A:middle
physical size.

00:10:36.696 --> 00:10:38.046 A:middle
Point Accurate is going to be

00:10:38.046 --> 00:10:39.926 A:middle
one UIKit point will equal one

00:10:39.926 --> 00:10:40.826 A:middle
AppKit point.

00:10:41.466 --> 00:10:43.176 A:middle
And then Pixel Accurate is the

00:10:43.176 --> 00:10:44.826 A:middle
pixel-by-pixel representation

00:10:44.826 --> 00:10:45.816 A:middle
based on your monitor

00:10:45.816 --> 00:10:46.416 A:middle
resolution.

00:10:47.446 --> 00:10:48.826 A:middle
Or as some of you might know,

00:10:48.826 --> 00:10:50.916 A:middle
you can always drag, open the

00:10:50.916 --> 00:10:53.406 A:middle
Simulator and size it however

00:10:53.406 --> 00:10:53.856 A:middle
you want.

00:10:53.856 --> 00:10:55.626 A:middle
So you can size it as large as

00:10:55.626 --> 00:10:56.176 A:middle
your display.

00:10:56.716 --> 00:10:59.666 A:middle
Next question.

00:10:59.826 --> 00:11:02.206 A:middle
Can the Simulator help me debug

00:10:59.826 --> 00:11:02.206 A:middle
Can the Simulator help me debug

00:11:02.206 --> 00:11:03.356 A:middle
UI animations?

00:11:03.946 --> 00:11:04.726 A:middle
Yes, it can.

00:11:04.906 --> 00:11:06.826 A:middle
So that's done through the Slow

00:11:06.826 --> 00:11:08.466 A:middle
Animations under the Debug menu.

00:11:08.916 --> 00:11:10.656 A:middle
Once this is toggled and you

00:11:10.656 --> 00:11:14.056 A:middle
select any app, it will go very

00:11:14.056 --> 00:11:18.446 A:middle
slowly, slowing down the UI

00:11:18.446 --> 00:11:19.156 A:middle
animations.

00:11:19.616 --> 00:11:22.666 A:middle
Next question.

00:11:23.556 --> 00:11:24.826 A:middle
Is Siri available in the

00:11:24.826 --> 00:11:25.276 A:middle
Simulator?

00:11:26.756 --> 00:11:27.496 A:middle
Yes, it is.

00:11:27.496 --> 00:11:28.656 A:middle
As long as you give the

00:11:28.656 --> 00:11:29.826 A:middle
Simulator access to your

00:11:29.826 --> 00:11:31.976 A:middle
microphone, you can invoke Siri

00:11:32.026 --> 00:11:33.986 A:middle
on all Simulator platforms.

00:11:34.636 --> 00:11:36.206 A:middle
Additionally, you can find Siri

00:11:36.206 --> 00:11:37.746 A:middle
in the hardware menu, or you can

00:11:37.746 --> 00:11:39.386 A:middle
use the keyboard shortcuts.

00:11:39.826 --> 00:11:42.896 A:middle
Next question.

00:11:43.196 --> 00:11:44.826 A:middle
How do I control my tvOS

00:11:44.826 --> 00:11:45.966 A:middle
Simulator?

00:11:46.596 --> 00:11:47.566 A:middle
Well, there's a few different

00:11:47.566 --> 00:11:48.706 A:middle
ways you can do this.

00:11:49.006 --> 00:11:51.416 A:middle
One is you can use the Apple TV

00:11:51.416 --> 00:11:52.366 A:middle
software Remote.

00:11:52.916 --> 00:11:53.906 A:middle
So that's located under the

00:11:53.906 --> 00:11:54.636 A:middle
Hardware menu.

00:11:54.786 --> 00:11:55.336 A:middle
Click on it.

00:11:55.816 --> 00:11:57.546 A:middle
And to activate the area, you

00:11:57.546 --> 00:11:59.006 A:middle
just hold down the Option key

00:11:59.346 --> 00:12:00.446 A:middle
while you move the cursor

00:11:59.346 --> 00:12:00.446 A:middle
while you move the cursor

00:12:00.446 --> 00:12:01.000 A:middle
around.

00:12:03.076 --> 00:12:04.266 A:middle
Another way is you can actually

00:12:04.266 --> 00:12:06.276 A:middle
use the hardware Apple TV

00:12:06.276 --> 00:12:06.686 A:middle
Remote.

00:12:06.936 --> 00:12:09.126 A:middle
You pair it holding down the

00:12:09.186 --> 00:12:10.686 A:middle
Plus and the Menu button on your

00:12:10.686 --> 00:12:12.126 A:middle
remote, and then once it's

00:12:12.126 --> 00:12:13.756 A:middle
paired, you'll be able to use

00:12:13.976 --> 00:12:16.226 A:middle
the hardware Apple TV Remote on

00:12:16.226 --> 00:12:17.756 A:middle
your tvOS Simulator.

00:12:20.426 --> 00:12:22.386 A:middle
You can also use game

00:12:22.386 --> 00:12:24.036 A:middle
controllers, and for simple

00:12:24.036 --> 00:12:25.046 A:middle
navigation, just use the

00:12:25.046 --> 00:12:25.536 A:middle
keyboard.

00:12:25.986 --> 00:12:28.676 A:middle
Next question.

00:12:29.376 --> 00:12:32.406 A:middle
Can I use Xcode 10 with iOS 13

00:12:32.406 --> 00:12:33.186 A:middle
Simulators?

00:12:34.246 --> 00:12:34.856 A:middle
Yes, you can.

00:12:35.196 --> 00:12:37.816 A:middle
So as long as you have Xcode 10

00:12:37.816 --> 00:12:40.406 A:middle
running on the same system as

00:12:40.406 --> 00:12:42.446 A:middle
Xcode 11-Beta, first thing you

00:12:42.446 --> 00:12:43.886 A:middle
want to do is launch Xcode 11

00:12:43.886 --> 00:12:45.216 A:middle
and then also launch a

00:12:45.216 --> 00:12:45.736 A:middle
Simulator.

00:12:46.406 --> 00:12:48.726 A:middle
So that'll give you an iOS 13

00:12:48.726 --> 00:12:49.006 A:middle
runtime.

00:12:49.846 --> 00:12:51.436 A:middle
Then you close down Xcode, but

00:12:51.436 --> 00:12:52.736 A:middle
you leave the Simulator.app

00:12:52.846 --> 00:12:53.336 A:middle
open.

00:12:54.486 --> 00:12:55.886 A:middle
Then you'll go into the older

00:12:56.006 --> 00:12:59.626 A:middle
Xcode 10, bring it up, and then

00:12:59.626 --> 00:13:00.836 A:middle
you can build and run to the

00:12:59.626 --> 00:13:00.836 A:middle
you can build and run to the

00:13:00.836 --> 00:13:01.276 A:middle
Simulator.

00:13:02.206 --> 00:13:03.146 A:middle
Let me show you how that's done.

00:13:03.376 --> 00:13:05.106 A:middle
So this is we're running Xcode

00:13:05.106 --> 00:13:05.456 A:middle
10.

00:13:06.906 --> 00:13:07.956 A:middle
So what we're going to do is

00:13:07.956 --> 00:13:09.696 A:middle
we're going to select the iOS

00:13:09.936 --> 00:13:13.816 A:middle
12.2 Sim, run our app to that.

00:13:13.816 --> 00:13:15.756 A:middle
And then we're going to change

00:13:15.756 --> 00:13:18.006 A:middle
over to the iOS 13 Sim, and

00:13:18.586 --> 00:13:19.706 A:middle
we're going to run our app to

00:13:19.706 --> 00:13:20.000 A:middle
that.

00:13:21.996 --> 00:13:23.176 A:middle
Now you can look at the older

00:13:23.176 --> 00:13:24.466 A:middle
and the newer side by side.

00:13:29.466 --> 00:13:32.656 A:middle
Oh, yay. That got a clap

00:13:32.656 --> 00:13:33.346 A:middle
[laughs].

00:13:33.346 --> 00:13:34.146 A:middle
Next question.

00:13:34.146 --> 00:13:35.706 A:middle
Can I copy content into my

00:13:35.706 --> 00:13:36.276 A:middle
Simulator?

00:13:37.106 --> 00:13:38.566 A:middle
There's a couple different ways

00:13:38.566 --> 00:13:39.326 A:middle
to copy content.

00:13:39.326 --> 00:13:40.306 A:middle
One of the ways is through drag

00:13:40.306 --> 00:13:40.746 A:middle
and drop.

00:13:40.746 --> 00:13:42.166 A:middle
So through drag and drop, you

00:13:42.166 --> 00:13:44.576 A:middle
can copy app bundles, locations,

00:13:44.846 --> 00:13:47.646 A:middle
photos and videos and URLs.

00:13:49.416 --> 00:13:51.526 A:middle
So in this example, I can take

00:13:51.746 --> 00:13:54.576 A:middle
my project, grab my app bundle,

00:13:54.726 --> 00:13:56.156 A:middle
just drag and drop it onto the

00:13:56.156 --> 00:13:56.766 A:middle
Simulator.

00:13:57.566 --> 00:13:59.316 A:middle
It will install, and I can run

00:13:59.876 --> 00:13:59.946 A:middle
it.

00:14:03.256 --> 00:14:04.776 A:middle
In this example, we're going to

00:14:04.856 --> 00:14:06.556 A:middle
take some photos and videos.

00:14:07.676 --> 00:14:09.266 A:middle
So I grab them all, and I can

00:14:09.266 --> 00:14:10.546 A:middle
just drag and drop them right

00:14:10.546 --> 00:14:12.036 A:middle
into the Simulator, and they

00:14:12.036 --> 00:14:13.336 A:middle
will automatically go into the

00:14:13.336 --> 00:14:13.956 A:middle
Photos app.

00:14:15.176 --> 00:14:16.486 A:middle
Oh, wait. I drug in four, and I

00:14:16.486 --> 00:14:17.306 A:middle
only got three.

00:14:17.836 --> 00:14:18.366 A:middle
Oh.

00:14:18.856 --> 00:14:20.436 A:middle
That's because the photo and

00:14:20.436 --> 00:14:22.316 A:middle
video file are recombined to

00:14:22.316 --> 00:14:23.366 A:middle
give you a live photo.

00:14:23.946 --> 00:14:28.446 A:middle
Drag and dropping URLs is

00:14:28.446 --> 00:14:28.816 A:middle
simple.

00:14:28.816 --> 00:14:30.646 A:middle
Just open up Safari, grab the

00:14:30.646 --> 00:14:31.906 A:middle
URL, drag and drop it.

00:14:36.636 --> 00:14:38.476 A:middle
And from within Safari, you can

00:14:38.476 --> 00:14:40.556 A:middle
also use a Safari Share Sheet.

00:14:40.836 --> 00:14:42.436 A:middle
The Simulator is a target under

00:14:42.436 --> 00:14:43.416 A:middle
the Safari Share Sheet.

00:14:43.496 --> 00:14:44.216 A:middle
Just select it.

00:14:44.746 --> 00:14:45.946 A:middle
It'll bring up a dialog.

00:14:45.946 --> 00:14:47.576 A:middle
You can select one simulator, or

00:14:47.576 --> 00:14:48.896 A:middle
you can go to all simulators at

00:14:48.896 --> 00:14:50.276 A:middle
the same time.

00:14:56.576 --> 00:14:59.526 A:middle
Also, you can share location via

00:14:59.526 --> 00:15:00.226 A:middle
the Share Sheet.

00:14:59.526 --> 00:15:00.226 A:middle
the Share Sheet.

00:15:00.456 --> 00:15:02.156 A:middle
At the Maps app, you got a

00:15:02.156 --> 00:15:02.896 A:middle
location.

00:15:02.896 --> 00:15:04.616 A:middle
Just click the Simulator, select

00:15:04.616 --> 00:15:06.296 A:middle
your target, and then it will

00:15:06.296 --> 00:15:07.496 A:middle
share that location with the

00:15:07.496 --> 00:15:08.000 A:middle
Sim.

00:15:11.586 --> 00:15:13.016 A:middle
OK, let's go over some other

00:15:13.016 --> 00:15:14.396 A:middle
helpful hints that you might not

00:15:14.396 --> 00:15:14.846 A:middle
have known.

00:15:16.616 --> 00:15:18.286 A:middle
Under the Hardware menu, there

00:15:18.286 --> 00:15:19.516 A:middle
is the Rotate Device

00:15:19.516 --> 00:15:20.246 A:middle
Automatically.

00:15:20.396 --> 00:15:21.986 A:middle
So if you toggle this setting,

00:15:21.986 --> 00:15:23.496 A:middle
it will honor the settings in

00:15:23.496 --> 00:15:24.916 A:middle
your project, and it will rotate

00:15:24.916 --> 00:15:26.376 A:middle
the Sim automatically.

00:15:27.016 --> 00:15:30.716 A:middle
We have a few presets for

00:15:30.906 --> 00:15:32.816 A:middle
simulator locations in the Sim.

00:15:33.176 --> 00:15:34.896 A:middle
One is like a freeway drive, so

00:15:34.896 --> 00:15:36.016 A:middle
you can simulate a freeway

00:15:36.016 --> 00:15:36.426 A:middle
drive.

00:15:37.096 --> 00:15:40.316 A:middle
You can also input your own

00:15:40.316 --> 00:15:42.436 A:middle
custom location by putting in

00:15:42.646 --> 00:15:43.976 A:middle
the longitude and the latitude.

00:15:52.596 --> 00:15:53.706 A:middle
If you want to see what your app

00:15:53.706 --> 00:15:54.876 A:middle
will look like when a call is

00:15:54.876 --> 00:15:56.746 A:middle
received, you can use the Toggle

00:15:56.746 --> 00:15:59.766 A:middle
In-Call Status, or you can use

00:15:59.766 --> 00:16:01.656 A:middle
the keyboard shortcut Command-Y.

00:15:59.766 --> 00:16:01.656 A:middle
the keyboard shortcut Command-Y.

00:16:06.076 --> 00:16:07.986 A:middle
External displays can be used

00:16:07.986 --> 00:16:09.406 A:middle
for a variety of content.

00:16:09.526 --> 00:16:11.056 A:middle
In this example, what we're

00:16:11.056 --> 00:16:12.816 A:middle
doing is we're playing some

00:16:12.816 --> 00:16:14.856 A:middle
video out of Safari, and we're

00:16:14.856 --> 00:16:16.146 A:middle
selecting a couple of different

00:16:16.146 --> 00:16:17.366 A:middle
display resolutions.

00:16:24.056 --> 00:16:25.526 A:middle
Dark mode is also available on

00:16:25.526 --> 00:16:26.146 A:middle
the Simulator.

00:16:26.516 --> 00:16:27.566 A:middle
You'll find that under the

00:16:27.566 --> 00:16:28.456 A:middle
Developer menu.

00:16:28.606 --> 00:16:30.206 A:middle
Just go under Settings, toggle

00:16:30.206 --> 00:16:31.696 A:middle
down to Developer, and you can

00:16:31.696 --> 00:16:33.456 A:middle
click on Dark Appearance.

00:16:40.536 --> 00:16:41.386 A:middle
You can also change the

00:16:41.386 --> 00:16:43.006 A:middle
wallpaper in your Sim if you

00:16:43.316 --> 00:16:43.836 A:middle
want to.

00:16:43.836 --> 00:16:45.316 A:middle
You can just drag a photo into

00:16:45.316 --> 00:16:46.416 A:middle
your Photos app.

00:16:46.416 --> 00:16:47.306 A:middle
Then click on the photo.

00:16:47.306 --> 00:16:49.206 A:middle
Use the Share Sheet, and that'll

00:16:49.206 --> 00:16:50.336 A:middle
bring it up just like it does on

00:16:50.336 --> 00:16:51.226 A:middle
the iOS device.

00:16:51.226 --> 00:16:53.186 A:middle
Select it as the wallpaper, and

00:16:53.186 --> 00:16:55.586 A:middle
the Simulator will also use this

00:16:55.586 --> 00:16:56.816 A:middle
as a wallpaper for your

00:16:56.816 --> 00:16:58.216 A:middle
background, for the lock screen,

00:16:59.166 --> 00:17:00.446 A:middle
and now you have a new

00:16:59.166 --> 00:17:00.446 A:middle
and now you have a new

00:17:00.446 --> 00:17:01.000 A:middle
background.

00:17:03.866 --> 00:17:05.526 A:middle
Dictation also works in the Sim.

00:17:05.945 --> 00:17:06.746 A:middle
So that's found under the

00:17:06.746 --> 00:17:07.425 A:middle
Settings app.

00:17:08.396 --> 00:17:09.685 A:middle
You'll go under the keyboard,

00:17:10.165 --> 00:17:11.826 A:middle
and there is an Enable

00:17:11.826 --> 00:17:12.486 A:middle
Dictation.

00:17:13.726 --> 00:17:14.996 A:middle
So once you have that toggled

00:17:14.996 --> 00:17:17.486 A:middle
on, you just bring up an app

00:17:17.486 --> 00:17:19.036 A:middle
that accepts keyboard input.

00:17:19.915 --> 00:17:21.246 A:middle
Use Command-K to bring up the

00:17:21.286 --> 00:17:22.906 A:middle
software keyboard, and then

00:17:22.906 --> 00:17:24.156 A:middle
you'll see the microphone down

00:17:24.156 --> 00:17:25.086 A:middle
there, and you just start

00:17:25.086 --> 00:17:25.596 A:middle
dictating.

00:17:31.456 --> 00:17:33.036 A:middle
Input language can also be

00:17:33.036 --> 00:17:34.336 A:middle
changed if you didn't know that.

00:17:34.556 --> 00:17:36.506 A:middle
So you can go into the keyboard,

00:17:36.676 --> 00:17:38.586 A:middle
select what input language you

00:17:38.586 --> 00:17:38.956 A:middle
would like.

00:17:39.936 --> 00:17:41.196 A:middle
There's a variety of languages

00:17:41.196 --> 00:17:42.206 A:middle
in there available.

00:17:42.776 --> 00:17:44.856 A:middle
And then again, you're just

00:17:44.856 --> 00:17:45.966 A:middle
going to bring up the software

00:17:45.966 --> 00:17:46.526 A:middle
keyboard.

00:17:46.526 --> 00:17:48.406 A:middle
And you're going to click on the

00:17:48.406 --> 00:17:49.816 A:middle
globe just like you do on your

00:17:49.816 --> 00:17:51.000 A:middle
iOS device.

00:17:53.616 --> 00:17:56.056 A:middle
And speaking of keyboards, the

00:17:56.056 --> 00:17:57.856 A:middle
new QuickPath is also supported

00:17:57.856 --> 00:17:58.526 A:middle
in the Simulator.

00:17:58.716 --> 00:18:00.846 A:middle
Just open up the keyboard, start

00:17:58.716 --> 00:18:00.846 A:middle
Just open up the keyboard, start

00:18:01.756 --> 00:18:02.976 A:middle
your path, and there you go.

00:18:09.586 --> 00:18:11.006 A:middle
You can find more information

00:18:11.006 --> 00:18:12.916 A:middle
also by using the Simulator Help

00:18:12.916 --> 00:18:13.316 A:middle
menu.

00:18:14.756 --> 00:18:16.676 A:middle
Type in what you need, and also

00:18:16.676 --> 00:18:18.216 A:middle
the Search feature will just

00:18:18.246 --> 00:18:19.376 A:middle
point you right where you need

00:18:20.136 --> 00:18:20.816 A:middle
to go.

00:18:20.996 --> 00:18:22.216 A:middle
Well, my time is just about up,

00:18:22.216 --> 00:18:23.796 A:middle
so I hope you learned at least

00:18:23.796 --> 00:18:24.916 A:middle
one thing you didn't know before

00:18:24.916 --> 00:18:25.796 A:middle
about the Simulator.

00:18:26.496 --> 00:18:27.526 A:middle
Now I'm going to turn it over to

00:18:27.526 --> 00:18:28.536 A:middle
Russ who's going to go over

00:18:28.536 --> 00:18:29.686 A:middle
running the Simulator through

00:18:29.686 --> 00:18:30.366 A:middle
the command line.

00:18:30.566 --> 00:18:30.866 A:middle
Thank you.

00:18:31.516 --> 00:18:34.746 A:middle
[ Applause ]

00:18:35.246 --> 00:18:35.956 A:middle
&gt;&gt; Thank you, Tracy.

00:18:37.236 --> 00:18:39.836 A:middle
So let's talk a little bit about

00:18:39.836 --> 00:18:42.736 A:middle
Simulator from the command line.

00:18:43.966 --> 00:18:46.026 A:middle
If I can leave you with one

00:18:46.026 --> 00:18:49.246 A:middle
thing today, it'd be xcrun sim

00:18:49.246 --> 00:18:51.186 A:middle
control or simctl.

00:18:52.206 --> 00:18:54.116 A:middle
But if I could leave you with

00:18:54.116 --> 00:18:55.946 A:middle
two things today, it would be

00:18:55.946 --> 00:18:58.236 A:middle
xcrun simctl help.

00:18:59.726 --> 00:19:01.956 A:middle
Sim control has extensive help.

00:18:59.726 --> 00:19:01.956 A:middle
Sim control has extensive help.

00:19:02.556 --> 00:19:04.206 A:middle
If you run it without a command,

00:19:04.416 --> 00:19:05.436 A:middle
it will tell you all of the

00:19:05.436 --> 00:19:06.526 A:middle
commands that are available.

00:19:07.036 --> 00:19:08.596 A:middle
If you run help and then the

00:19:08.596 --> 00:19:10.476 A:middle
command name, it will give you a

00:19:10.476 --> 00:19:11.806 A:middle
lot more detail about that

00:19:11.806 --> 00:19:12.696 A:middle
specific command.

00:19:14.326 --> 00:19:16.366 A:middle
So I'm going to cover a few

00:19:16.366 --> 00:19:17.706 A:middle
commands that may be useful to

00:19:17.706 --> 00:19:20.126 A:middle
you and then talk briefly about

00:19:20.126 --> 00:19:21.526 A:middle
a few others, and then we'll do

00:19:21.526 --> 00:19:22.146 A:middle
a little demo.

00:19:22.706 --> 00:19:25.546 A:middle
So the first command, the most

00:19:25.816 --> 00:19:27.446 A:middle
basic command, is the list

00:19:28.196 --> 00:19:28.496 A:middle
command.

00:19:28.686 --> 00:19:30.636 A:middle
This will show you the device

00:19:30.706 --> 00:19:32.096 A:middle
types, runtimes, devices that

00:19:32.096 --> 00:19:32.556 A:middle
you have.

00:19:32.946 --> 00:19:34.156 A:middle
I've shortened this list to fit

00:19:34.156 --> 00:19:34.706 A:middle
on a slide.

00:19:34.706 --> 00:19:35.976 A:middle
You'll probably see quite a few

00:19:35.976 --> 00:19:37.006 A:middle
more on your own machine.

00:19:37.706 --> 00:19:40.486 A:middle
We can see here that we have the

00:19:40.486 --> 00:19:42.716 A:middle
device types, both their short

00:19:42.716 --> 00:19:44.826 A:middle
names and their identifiers, the

00:19:44.826 --> 00:19:46.616 A:middle
runtimes, short names and

00:19:46.616 --> 00:19:48.816 A:middle
identifiers, my device, its

00:19:49.606 --> 00:19:51.036 A:middle
identifier and then the current

00:19:51.076 --> 00:19:52.406 A:middle
state, which is Shutdown.

00:19:53.096 --> 00:19:55.696 A:middle
Most of the commands that

00:19:55.696 --> 00:19:57.506 A:middle
accept, for example, a device

00:19:57.576 --> 00:19:58.906 A:middle
type or a runtime will accept

00:19:58.906 --> 00:19:59.916 A:middle
the name, the short name.

00:20:00.266 --> 00:20:02.256 A:middle
It's totally fine to use that

00:20:02.256 --> 00:20:02.856 A:middle
when you're typing at the

00:20:02.856 --> 00:20:04.306 A:middle
terminal, save you a few

00:20:04.306 --> 00:20:04.906 A:middle
keystrokes.

00:20:05.386 --> 00:20:06.696 A:middle
But I do recommend for

00:20:06.696 --> 00:20:08.446 A:middle
automation and scripting that

00:20:08.446 --> 00:20:10.156 A:middle
you go with the full identifier

00:20:10.536 --> 00:20:12.026 A:middle
just to be specific.

00:20:13.386 --> 00:20:15.466 A:middle
The list command accepts a

00:20:15.466 --> 00:20:16.636 A:middle
couple of different categories,

00:20:17.216 --> 00:20:18.656 A:middle
one of which is devices.

00:20:19.056 --> 00:20:21.166 A:middle
So in this case, I'm not looking

00:20:21.166 --> 00:20:23.966 A:middle
for the runtimes or the devices

00:20:23.966 --> 00:20:24.286 A:middle
types.

00:20:24.286 --> 00:20:25.216 A:middle
I just want the devices.

00:20:25.646 --> 00:20:27.936 A:middle
I can specify that, and I can

00:20:27.936 --> 00:20:29.586 A:middle
give a search string as well.

00:20:30.616 --> 00:20:31.906 A:middle
So in this case, I'm just

00:20:32.216 --> 00:20:35.286 A:middle
looking at my iPhone X devices.

00:20:35.636 --> 00:20:37.756 A:middle
So list command also has a json

00:20:37.756 --> 00:20:38.176 A:middle
flag.

00:20:38.446 --> 00:20:39.456 A:middle
This will output a

00:20:39.456 --> 00:20:41.136 A:middle
machine-readable json file that

00:20:41.136 --> 00:20:42.576 A:middle
you can use for automation

00:20:42.576 --> 00:20:43.000 A:middle
purposes.

00:20:47.236 --> 00:20:48.946 A:middle
The next command I want to talk

00:20:48.946 --> 00:20:50.226 A:middle
about is create command.

00:20:50.496 --> 00:20:52.936 A:middle
Some of you may have heard we

00:20:52.936 --> 00:20:53.996 A:middle
have standalone Watch app

00:20:53.996 --> 00:20:54.766 A:middle
support this year.

00:20:54.766 --> 00:20:56.446 A:middle
So I think I would like a

00:20:56.446 --> 00:20:57.926 A:middle
standalone Watch simulator that

00:20:57.986 --> 00:20:59.136 A:middle
I can deploy to.

00:20:59.566 --> 00:21:01.176 A:middle
So I'm going to call this Test

00:20:59.566 --> 00:21:01.176 A:middle
So I'm going to call this Test

00:21:01.246 --> 00:21:04.436 A:middle
Watch, and I'm going to specify

00:21:04.766 --> 00:21:05.906 A:middle
the device that I would like, a

00:21:05.906 --> 00:21:07.556 A:middle
Series 4 - 44mm.

00:21:08.306 --> 00:21:10.096 A:middle
And I would like that to be

00:21:10.096 --> 00:21:11.386 A:middle
running watchOS 6.0.

00:21:12.576 --> 00:21:14.866 A:middle
The output will be the

00:21:14.866 --> 00:21:17.776 A:middle
identifier of the device.

00:21:17.776 --> 00:21:19.476 A:middle
This is so I can capture that in

00:21:19.476 --> 00:21:20.746 A:middle
an environment variable or use

00:21:20.746 --> 00:21:21.646 A:middle
it for scripting purposes.

00:21:21.646 --> 00:21:24.926 A:middle
In this little example, I set

00:21:24.926 --> 00:21:26.736 A:middle
NEW DEVICE to that value, and

00:21:26.736 --> 00:21:28.656 A:middle
then, look the bot echoed the

00:21:29.166 --> 00:21:30.836 A:middle
identifier, the device that was

00:21:30.876 --> 00:21:31.276 A:middle
created.

00:21:32.056 --> 00:21:35.546 A:middle
Most Sim control commands follow

00:21:35.546 --> 00:21:36.516 A:middle
the UNIX convention.

00:21:36.926 --> 00:21:39.446 A:middle
On success, they exit with zero.

00:21:39.446 --> 00:21:40.766 A:middle
On a failure, they exit with a

00:21:40.766 --> 00:21:41.696 A:middle
non-zero code.

00:21:42.176 --> 00:21:44.366 A:middle
Errors are printed to standard

00:21:44.366 --> 00:21:46.376 A:middle
error, and then actual output

00:21:46.376 --> 00:21:48.196 A:middle
such as a device identifier or

00:21:48.196 --> 00:21:50.256 A:middle
the json is output to standard

00:21:51.076 --> 00:21:51.146 A:middle
out.

00:21:53.096 --> 00:21:55.006 A:middle
The next command I want to talk

00:21:55.006 --> 00:21:56.916 A:middle
about is the spawn command.

00:21:57.466 --> 00:21:59.966 A:middle
The spawn command will pause

00:21:59.966 --> 00:22:02.786 A:middle
xspawn a process inside the

00:21:59.966 --> 00:22:02.786 A:middle
xspawn a process inside the

00:22:02.786 --> 00:22:03.816 A:middle
simulated environment.

00:22:04.596 --> 00:22:06.556 A:middle
And you might think, "What use

00:22:06.556 --> 00:22:07.246 A:middle
is that?"

00:22:07.636 --> 00:22:08.706 A:middle
Well, we ship a couple of

00:22:08.706 --> 00:22:10.606 A:middle
utilities in the Simulator that

00:22:10.606 --> 00:22:12.000 A:middle
might be useful to you.

00:22:13.296 --> 00:22:15.066 A:middle
In this case, the default

00:22:15.066 --> 00:22:15.476 A:middle
utility.

00:22:15.476 --> 00:22:16.896 A:middle
So I'm going to specify the

00:22:16.896 --> 00:22:18.926 A:middle
device that I want to target.

00:22:18.926 --> 00:22:19.726 A:middle
In this case, I'm going to use

00:22:19.726 --> 00:22:21.726 A:middle
the alias booted, because I have

00:22:21.726 --> 00:22:23.376 A:middle
one booted simulator, so I don't

00:22:23.376 --> 00:22:24.336 A:middle
need to actually specify which

00:22:24.336 --> 00:22:25.726 A:middle
one it is.

00:22:25.726 --> 00:22:27.116 A:middle
And I'm going to say defaults

00:22:27.116 --> 00:22:29.086 A:middle
write, the bundle ID of my

00:22:29.086 --> 00:22:29.806 A:middle
application.

00:22:30.286 --> 00:22:31.906 A:middle
I want to set the ResetDatabase

00:22:31.946 --> 00:22:33.226 A:middle
key to YES.

00:22:34.146 --> 00:22:35.796 A:middle
So this can be a handy way to

00:22:35.796 --> 00:22:36.966 A:middle
change the user defaults for

00:22:36.966 --> 00:22:38.696 A:middle
your application before it's

00:22:38.696 --> 00:22:39.026 A:middle
running.

00:22:39.586 --> 00:22:42.476 A:middle
I can also run the log stream

00:22:42.476 --> 00:22:42.986 A:middle
utility.

00:22:42.986 --> 00:22:44.696 A:middle
If you haven't seen this before

00:22:44.696 --> 00:22:46.706 A:middle
or haven't run this on your Mac,

00:22:46.706 --> 00:22:48.076 A:middle
you can pass a predicate, and

00:22:48.076 --> 00:22:49.266 A:middle
you can stream the log output.

00:22:49.836 --> 00:22:50.816 A:middle
Well, you can do the same thing

00:22:50.816 --> 00:22:51.416 A:middle
with the Simulator.

00:22:51.416 --> 00:22:54.106 A:middle
In this case, I'm going to say

00:22:54.106 --> 00:22:55.036 A:middle
that the predicate is

00:22:55.256 --> 00:22:57.326 A:middle
senderImagePath CONTAINS

00:22:57.436 --> 00:22:59.716 A:middle
nsurlsessiond, because I want to

00:22:59.716 --> 00:23:01.016 A:middle
debug something that's going

00:22:59.716 --> 00:23:01.016 A:middle
debug something that's going

00:23:01.016 --> 00:23:02.276 A:middle
wrong with my URL sessions.

00:23:02.836 --> 00:23:06.516 A:middle
And then I can see the log

00:23:06.516 --> 00:23:07.236 A:middle
stream output.

00:23:07.806 --> 00:23:09.816 A:middle
You may notice sim control has

00:23:09.816 --> 00:23:10.986 A:middle
detected that I'm using an

00:23:10.986 --> 00:23:12.266 A:middle
interactive terminal that

00:23:12.266 --> 00:23:12.996 A:middle
supports color.

00:23:13.426 --> 00:23:14.466 A:middle
It's passed that information

00:23:14.466 --> 00:23:15.866 A:middle
through, so log stream is giving

00:23:15.866 --> 00:23:18.076 A:middle
me some nice pretty colorized

00:23:18.076 --> 00:23:18.626 A:middle
output.

00:23:19.066 --> 00:23:20.136 A:middle
And here I can see my

00:23:20.136 --> 00:23:21.276 A:middle
dataTaskWithRequest

00:23:21.496 --> 00:23:23.196 A:middle
allowsCellularAccess is set to

00:23:23.196 --> 00:23:23.636 A:middle
1.

00:23:23.636 --> 00:23:25.096 A:middle
That's what I expected, so I'm

00:23:25.766 --> 00:23:25.896 A:middle
happy.

00:23:27.976 --> 00:23:30.596 A:middle
Speaking of logs, the next

00:23:30.596 --> 00:23:32.256 A:middle
command I want to talk to you

00:23:32.256 --> 00:23:34.426 A:middle
about is diagnose.

00:23:34.976 --> 00:23:37.226 A:middle
This is an incredibly useful

00:23:37.226 --> 00:23:37.786 A:middle
command.

00:23:38.546 --> 00:23:39.836 A:middle
The diagnose command will go

00:23:39.836 --> 00:23:41.616 A:middle
through and collect not just

00:23:41.616 --> 00:23:43.196 A:middle
logs on disk, but ephemeral

00:23:43.196 --> 00:23:45.366 A:middle
logging and dump system state

00:23:45.716 --> 00:23:46.806 A:middle
that can be useful in tracking

00:23:46.806 --> 00:23:47.586 A:middle
down a problem.

00:23:48.886 --> 00:23:50.576 A:middle
This a great thing to run in

00:23:50.576 --> 00:23:52.256 A:middle
automated systems if you have a

00:23:52.256 --> 00:23:54.286 A:middle
test failure or some kind of

00:23:54.286 --> 00:23:56.246 A:middle
issue immediately capture

00:23:56.246 --> 00:23:58.506 A:middle
diagnose, control diagnose.

00:23:59.196 --> 00:24:00.856 A:middle
This is also great if you're

00:23:59.196 --> 00:24:00.856 A:middle
This is also great if you're

00:24:00.856 --> 00:24:01.686 A:middle
filing bugs.

00:24:02.616 --> 00:24:05.226 A:middle
So in an automated scenario, I'm

00:24:05.226 --> 00:24:07.216 A:middle
going to pass the -l flag to

00:24:07.216 --> 00:24:08.566 A:middle
skip the privacy warning.

00:24:08.566 --> 00:24:09.796 A:middle
But I do recommend that you read

00:24:09.796 --> 00:24:11.906 A:middle
that before you use this command

00:24:12.316 --> 00:24:13.376 A:middle
and also check out Apple's

00:24:13.376 --> 00:24:14.136 A:middle
privacy policy.

00:24:14.136 --> 00:24:15.226 A:middle
This will tell you the types of

00:24:15.226 --> 00:24:16.226 A:middle
information that this will

00:24:16.226 --> 00:24:17.606 A:middle
collect, could include account

00:24:17.606 --> 00:24:19.246 A:middle
names and things like that.

00:24:20.136 --> 00:24:21.966 A:middle
The diagnose can run.

00:24:21.966 --> 00:24:23.136 A:middle
It'll tell me where it wrote the

00:24:23.136 --> 00:24:23.786 A:middle
file to.

00:24:23.866 --> 00:24:26.146 A:middle
If I'm using this at my desk, I

00:24:26.146 --> 00:24:27.236 A:middle
would also get a Finder window

00:24:27.236 --> 00:24:29.176 A:middle
that pops up, that shows me the

00:24:29.176 --> 00:24:29.916 A:middle
file it produced.

00:24:31.046 --> 00:24:32.566 A:middle
So, please, if you're going to

00:24:32.566 --> 00:24:33.666 A:middle
send in feedback through the new

00:24:33.666 --> 00:24:35.846 A:middle
Feedback Assistant with issues

00:24:35.846 --> 00:24:37.596 A:middle
occurring the Simulator, attach

00:24:37.596 --> 00:24:38.916 A:middle
a sim control diagnose.

00:24:39.416 --> 00:24:41.956 A:middle
That makes it much easier to

00:24:41.956 --> 00:24:42.976 A:middle
figure out what went wrong.

00:24:43.236 --> 00:24:44.816 A:middle
And I do recommend you use it in

00:24:44.816 --> 00:24:46.136 A:middle
your own workflows if you're

00:24:46.136 --> 00:24:47.946 A:middle
going to send a bug to-- For

00:24:47.946 --> 00:24:48.606 A:middle
example, if you're working in

00:24:48.606 --> 00:24:49.576 A:middle
QA, you're going to send a bug

00:24:49.576 --> 00:24:50.156 A:middle
to the engineer.

00:24:50.156 --> 00:24:51.296 A:middle
Hey, the app-- something went

00:24:51.296 --> 00:24:51.686 A:middle
wrong.

00:24:52.426 --> 00:24:53.426 A:middle
Attach a diagnose.

00:24:53.756 --> 00:24:55.006 A:middle
That'll include all the log

00:24:55.006 --> 00:24:56.196 A:middle
output from your application.

00:24:56.936 --> 00:24:59.166 A:middle
The next command that I want to

00:24:59.166 --> 00:25:00.166 A:middle
tell you about is launch

00:24:59.166 --> 00:25:00.166 A:middle
tell you about is launch

00:25:00.206 --> 00:25:00.686 A:middle
command.

00:25:01.976 --> 00:25:03.336 A:middle
Launch command launches an

00:25:03.336 --> 00:25:04.076 A:middle
application.

00:25:05.256 --> 00:25:07.476 A:middle
You might ask, "Well, what is

00:25:07.476 --> 00:25:08.516 A:middle
difference between that and

00:25:08.516 --> 00:25:09.066 A:middle
spawn?"

00:25:09.506 --> 00:25:11.686 A:middle
Well, launch politely asks the

00:25:11.686 --> 00:25:13.266 A:middle
system, "Would you please start

00:25:13.266 --> 00:25:14.666 A:middle
the application with this bundle

00:25:14.666 --> 00:25:14.756 A:middle
ID?"

00:25:15.526 --> 00:25:16.936 A:middle
This is equivalent to tapping on

00:25:16.936 --> 00:25:18.666 A:middle
the icon on the Home screen.

00:25:19.506 --> 00:25:20.656 A:middle
And in fact, this is the only

00:25:20.656 --> 00:25:22.206 A:middle
way a process can display

00:25:22.206 --> 00:25:24.116 A:middle
information on the screen on

00:25:24.286 --> 00:25:27.076 A:middle
iOS, watchOS or tvOS.

00:25:27.076 --> 00:25:28.096 A:middle
So it's incredibly important.

00:25:28.096 --> 00:25:29.086 A:middle
So if you actually want to

00:25:29.086 --> 00:25:30.646 A:middle
launch an installed application,

00:25:31.026 --> 00:25:32.186 A:middle
you'd need to use the launch

00:25:32.186 --> 00:25:32.636 A:middle
command.

00:25:33.796 --> 00:25:36.076 A:middle
So I'm going to specify again

00:25:36.076 --> 00:25:37.736 A:middle
the booted alias, because I only

00:25:37.736 --> 00:25:38.636 A:middle
have one simulator that's

00:25:38.676 --> 00:25:39.026 A:middle
booted.

00:25:39.576 --> 00:25:41.556 A:middle
I'm going to launch my

00:25:41.556 --> 00:25:43.426 A:middle
com.apple.example application,

00:25:44.146 --> 00:25:45.086 A:middle
and I'm going to pass some

00:25:45.086 --> 00:25:45.716 A:middle
arguments.

00:25:46.166 --> 00:25:47.886 A:middle
If you haven't seen this before,

00:25:48.126 --> 00:25:49.326 A:middle
user defaults allows you to

00:25:49.326 --> 00:25:50.716 A:middle
override defaults that you've

00:25:50.716 --> 00:25:52.386 A:middle
set as arguments from the

00:25:52.386 --> 00:25:52.976 A:middle
command line.

00:25:53.856 --> 00:25:55.326 A:middle
Prefix the key with a single

00:25:55.326 --> 00:25:57.626 A:middle
dash, the key name and then

00:25:57.626 --> 00:25:58.586 A:middle
specify the value.

00:25:59.016 --> 00:26:00.486 A:middle
And for that specific launch of

00:25:59.016 --> 00:26:00.486 A:middle
And for that specific launch of

00:26:00.486 --> 00:26:01.966 A:middle
my application, the

00:26:01.966 --> 00:26:03.986 A:middle
-MyDefaultKey will be set to YES

00:26:04.106 --> 00:26:05.536 A:middle
regardless of what's stored on

00:26:05.536 --> 00:26:05.836 A:middle
disk.

00:26:06.706 --> 00:26:07.936 A:middle
The launch can do something else

00:26:07.936 --> 00:26:08.986 A:middle
very interesting for me.

00:26:09.726 --> 00:26:12.206 A:middle
If I pass the -- console-pty

00:26:12.286 --> 00:26:15.896 A:middle
flag, launch will connect my

00:26:15.896 --> 00:26:17.356 A:middle
application's standard input,

00:26:17.356 --> 00:26:19.896 A:middle
output and standard error to the

00:26:19.896 --> 00:26:21.136 A:middle
terminal I'm working with right

00:26:21.136 --> 00:26:21.436 A:middle
now.

00:26:22.566 --> 00:26:23.396 A:middle
So when I launch this

00:26:23.396 --> 00:26:25.776 A:middle
application, I see its standard

00:26:25.776 --> 00:26:27.226 A:middle
output right there in my

00:26:27.226 --> 00:26:27.626 A:middle
terminal.

00:26:28.386 --> 00:26:30.306 A:middle
And more than that, I can hook

00:26:30.306 --> 00:26:31.706 A:middle
up debugging facilities.

00:26:32.216 --> 00:26:34.406 A:middle
In this example, I press Enter,

00:26:34.846 --> 00:26:35.766 A:middle
and it's going to dump some

00:26:35.766 --> 00:26:36.566 A:middle
debugging state.

00:26:36.956 --> 00:26:39.216 A:middle
So in Terminal, I can press

00:26:39.216 --> 00:26:41.246 A:middle
Enter, and I get that debugging

00:26:41.246 --> 00:26:42.046 A:middle
state printed from the

00:26:42.046 --> 00:26:42.726 A:middle
application.

00:26:43.346 --> 00:26:44.726 A:middle
This can be a real useful tool

00:26:44.726 --> 00:26:46.106 A:middle
when you're debugging.

00:26:47.136 --> 00:26:48.316 A:middle
The other thing you might notice

00:26:48.316 --> 00:26:50.076 A:middle
is I press Control-C, which

00:26:50.076 --> 00:26:51.626 A:middle
sends an interrupt signal.

00:26:52.426 --> 00:26:54.846 A:middle
Sim control detects that, grabs

00:26:54.846 --> 00:26:56.126 A:middle
the signal and passes it through

00:26:56.126 --> 00:26:57.006 A:middle
to the application.

00:26:57.616 --> 00:27:00.216 A:middle
That applies not just to signals

00:26:57.616 --> 00:27:00.216 A:middle
That applies not just to signals

00:27:00.216 --> 00:27:01.786 A:middle
like interrupt, but user

00:27:01.786 --> 00:27:04.026 A:middle
signals: user1, user2.

00:27:04.026 --> 00:27:05.556 A:middle
Those are other ways you can set

00:27:05.556 --> 00:27:07.096 A:middle
up your application to include

00:27:07.526 --> 00:27:08.756 A:middle
debugging information.

00:27:09.296 --> 00:27:12.326 A:middle
So there's a couple more

00:27:12.326 --> 00:27:15.536 A:middle
commands that I don't have time

00:27:15.536 --> 00:27:16.546 A:middle
to go into, but I'm just going

00:27:16.546 --> 00:27:18.556 A:middle
to briefly give you an overview.

00:27:19.496 --> 00:27:21.946 A:middle
Boot as you might expect boots a

00:27:21.946 --> 00:27:22.456 A:middle
device.

00:27:23.536 --> 00:27:26.396 A:middle
Shutdown also pretty obvious; it

00:27:26.396 --> 00:27:27.316 A:middle
shuts down the device.

00:27:27.916 --> 00:27:29.426 A:middle
But shutdown accepts a special

00:27:29.426 --> 00:27:29.956 A:middle
alias.

00:27:30.526 --> 00:27:32.126 A:middle
The all alias-- That will just

00:27:32.126 --> 00:27:33.036 A:middle
shut down all running

00:27:33.036 --> 00:27:33.586 A:middle
simulators.

00:27:34.936 --> 00:27:36.366 A:middle
Delete, again-- as you might

00:27:36.366 --> 00:27:37.926 A:middle
expect-- it deletes a device.

00:27:38.626 --> 00:27:40.496 A:middle
But there's another convenient

00:27:40.496 --> 00:27:41.536 A:middle
alias that it accepts--

00:27:42.286 --> 00:27:43.096 A:middle
unavailable.

00:27:43.846 --> 00:27:45.116 A:middle
That will go through and find

00:27:45.116 --> 00:27:47.176 A:middle
all of the simulators that use a

00:27:47.176 --> 00:27:49.006 A:middle
runtime that's not available to

00:27:49.006 --> 00:27:49.676 A:middle
you anymore.

00:27:50.066 --> 00:27:51.136 A:middle
Maybe it's an older version of

00:27:51.136 --> 00:27:52.856 A:middle
Xcode that you've upgraded or

00:27:52.856 --> 00:27:53.926 A:middle
it's a downloaded Simulator

00:27:53.926 --> 00:27:55.106 A:middle
runtime-- like Tracy showed

00:27:55.106 --> 00:27:56.156 A:middle
you-- that you've deleted.

00:27:56.606 --> 00:27:57.646 A:middle
That will go through and clean

00:27:57.646 --> 00:27:58.936 A:middle
all these up and recover that

00:27:58.936 --> 00:28:00.386 A:middle
disk space.

00:27:58.936 --> 00:28:00.386 A:middle
disk space.

00:28:01.896 --> 00:28:03.456 A:middle
The next one, pair.

00:28:03.966 --> 00:28:05.636 A:middle
There's pair and also an

00:28:05.636 --> 00:28:07.126 A:middle
associated unpair and pair

00:28:07.126 --> 00:28:07.576 A:middle
activate.

00:28:07.636 --> 00:28:08.856 A:middle
You can set up watch phone

00:28:08.856 --> 00:28:11.466 A:middle
pairings from the command line.

00:28:11.466 --> 00:28:12.666 A:middle
Addmedia-- that's similar to

00:28:12.666 --> 00:28:14.606 A:middle
what Tracy showed you earlier

00:28:14.956 --> 00:28:16.516 A:middle
dragging, dropping photo and

00:28:16.516 --> 00:28:17.656 A:middle
media into the Simulator.

00:28:17.766 --> 00:28:19.046 A:middle
You can script that as well.

00:28:19.546 --> 00:28:22.006 A:middle
Get app container is an

00:28:22.006 --> 00:28:22.856 A:middle
interesting one.

00:28:22.996 --> 00:28:24.776 A:middle
If something's going wrong with

00:28:24.776 --> 00:28:25.126 A:middle
your app.

00:28:25.176 --> 00:28:27.016 A:middle
Perhaps it's writing a corrupted

00:28:27.066 --> 00:28:28.976 A:middle
file or it's attempting to load

00:28:28.976 --> 00:28:29.746 A:middle
something, and you know it

00:28:29.746 --> 00:28:30.696 A:middle
should be there, but it's not

00:28:30.696 --> 00:28:32.586 A:middle
there, get app container can

00:28:32.586 --> 00:28:34.466 A:middle
give you the path on disk to

00:28:34.466 --> 00:28:35.346 A:middle
your application's data

00:28:35.346 --> 00:28:37.616 A:middle
container or even to a shared

00:28:37.616 --> 00:28:39.226 A:middle
container that perhaps your app

00:28:39.226 --> 00:28:40.396 A:middle
and your app's extension are

00:28:40.396 --> 00:28:40.776 A:middle
using.

00:28:41.196 --> 00:28:43.056 A:middle
And you can go then examine the

00:28:43.056 --> 00:28:44.326 A:middle
actual content, the filesystem

00:28:44.326 --> 00:28:46.286 A:middle
from Finder or from Terminal and

00:28:46.286 --> 00:28:47.126 A:middle
see what's going wrong.

00:28:48.186 --> 00:28:49.886 A:middle
Install. Again, that's very

00:28:49.886 --> 00:28:50.996 A:middle
similar to what Tracy showed you

00:28:50.996 --> 00:28:52.026 A:middle
with dragging dropping app

00:28:52.026 --> 00:28:52.306 A:middle
bundle.

00:28:52.306 --> 00:28:53.536 A:middle
You can install an application

00:28:53.536 --> 00:28:54.256 A:middle
from the command line.

00:28:54.796 --> 00:28:57.296 A:middle
And then the last one I want to

00:28:57.296 --> 00:28:58.676 A:middle
mention is the io command.

00:28:59.086 --> 00:29:00.366 A:middle
Io itself has several

00:28:59.086 --> 00:29:00.366 A:middle
Io itself has several

00:29:00.366 --> 00:29:02.486 A:middle
subcommands, probably the most

00:29:02.486 --> 00:29:03.746 A:middle
important of which is

00:29:03.746 --> 00:29:04.336 A:middle
screenshot.

00:29:04.336 --> 00:29:06.026 A:middle
So that allows you to automate

00:29:06.026 --> 00:29:07.566 A:middle
taking of screenshots in

00:29:07.566 --> 00:29:08.046 A:middle
Simulator.

00:29:08.586 --> 00:29:11.196 A:middle
And then the last command I want

00:29:11.196 --> 00:29:12.516 A:middle
to talk about is the clone

00:29:12.516 --> 00:29:13.000 A:middle
command.

00:29:15.186 --> 00:29:18.256 A:middle
Clone is a very powerful command

00:29:18.396 --> 00:29:20.426 A:middle
that can be used for automation,

00:29:20.426 --> 00:29:21.446 A:middle
for testing, for making

00:29:21.446 --> 00:29:22.216 A:middle
experiments.

00:29:23.196 --> 00:29:24.426 A:middle
Clone allows you to set up a

00:29:24.426 --> 00:29:25.806 A:middle
single simulator exactly how you

00:29:25.806 --> 00:29:27.566 A:middle
want, install your app, set user

00:29:27.566 --> 00:29:28.496 A:middle
defaults, load data.

00:29:28.496 --> 00:29:30.546 A:middle
Then you can shut that simulator

00:29:30.546 --> 00:29:32.066 A:middle
down and then make as many

00:29:32.066 --> 00:29:33.136 A:middle
copies of it as you want.

00:29:34.036 --> 00:29:35.486 A:middle
Then you can run those copies,

00:29:36.286 --> 00:29:37.606 A:middle
perform your experiments and

00:29:37.606 --> 00:29:38.596 A:middle
then throw them away when you're

00:29:38.596 --> 00:29:38.896 A:middle
done.

00:29:38.896 --> 00:29:41.466 A:middle
This can be a great timesaver

00:29:41.886 --> 00:29:43.616 A:middle
and saves a lot of disk space

00:29:43.666 --> 00:29:45.666 A:middle
because clone takes advantage of

00:29:45.666 --> 00:29:47.246 A:middle
APSF file cloning under the

00:29:47.976 --> 00:29:48.686 A:middle
covers.

00:29:48.686 --> 00:29:49.536 A:middle
If your game has a

00:29:49.536 --> 00:29:51.216 A:middle
gigabyte worth of assets and you

00:29:51.216 --> 00:29:52.866 A:middle
want to run multiple tests in

00:29:52.866 --> 00:29:54.206 A:middle
parallel, you can go ahead and

00:29:54.206 --> 00:29:55.316 A:middle
do that without taking up a

00:29:55.316 --> 00:29:56.256 A:middle
bunch of disk space.

00:29:56.966 --> 00:29:58.226 A:middle
So rather than talk more about

00:29:58.226 --> 00:30:00.516 A:middle
that, I'm going to show you with

00:29:58.226 --> 00:30:00.516 A:middle
that, I'm going to show you with

00:30:00.516 --> 00:30:01.306 A:middle
a demo.

00:30:02.796 --> 00:30:03.186 A:middle
OK.

00:30:03.766 --> 00:30:06.746 A:middle
So the first thing that I'm

00:30:06.746 --> 00:30:07.956 A:middle
going to do is I'm going to go

00:30:07.956 --> 00:30:10.236 A:middle
ahead and start the simulator

00:30:10.236 --> 00:30:12.166 A:middle
that I'm going to use as my sort

00:30:12.166 --> 00:30:14.506 A:middle
of baseline for comparison.

00:30:14.976 --> 00:30:16.986 A:middle
So I'm going to start that

00:30:16.986 --> 00:30:17.466 A:middle
simulator.

00:30:17.466 --> 00:30:19.636 A:middle
You can see I have the Simulator

00:30:19.636 --> 00:30:21.266 A:middle
app open, so it automatically

00:30:21.266 --> 00:30:22.606 A:middle
attaches to it.

00:30:24.376 --> 00:30:26.516 A:middle
The next thing I'm going to do

00:30:26.516 --> 00:30:28.466 A:middle
is install my application.

00:30:28.786 --> 00:30:29.986 A:middle
I have my application bundle

00:30:29.986 --> 00:30:31.166 A:middle
here and ready to go.

00:30:31.356 --> 00:30:32.716 A:middle
So like I showed you earlier,

00:30:32.806 --> 00:30:34.516 A:middle
I'm going to run install, booted

00:30:35.106 --> 00:30:37.500 A:middle
in that application.

00:30:38.156 --> 00:30:39.306 A:middle
Well, see, it appeared on the

00:30:39.306 --> 00:30:40.936 A:middle
Home screen, and it's now

00:30:40.936 --> 00:30:41.476 A:middle
installed.

00:30:42.056 --> 00:30:44.486 A:middle
So the next thing I'm going to

00:30:44.486 --> 00:30:45.406 A:middle
go ahead and do is shut this

00:30:45.406 --> 00:30:46.266 A:middle
simulator down.

00:30:46.366 --> 00:30:47.276 A:middle
We do need to shut it down

00:30:47.276 --> 00:30:48.000 A:middle
before we can clone it.

00:30:54.166 --> 00:30:56.476 A:middle
And then once I've shut it down,

00:30:56.826 --> 00:30:59.006 A:middle
I'm going to go ahead and create

00:30:59.006 --> 00:31:00.296 A:middle
a clone called clone-1.

00:30:59.006 --> 00:31:00.296 A:middle
a clone called clone-1.

00:31:04.406 --> 00:31:06.206 A:middle
And now I'm going to run this

00:31:06.206 --> 00:31:06.736 A:middle
command again.

00:31:06.736 --> 00:31:07.426 A:middle
I'm going to create another

00:31:07.426 --> 00:31:08.586 A:middle
clone, clone-2.

00:31:13.476 --> 00:31:15.336 A:middle
Now that I have these two clone

00:31:15.336 --> 00:31:16.496 A:middle
simulators, I'm going to go

00:31:16.496 --> 00:31:17.526 A:middle
ahead and ask them to boot.

00:31:22.076 --> 00:31:23.516 A:middle
And here we can see that both of

00:31:23.516 --> 00:31:25.386 A:middle
them are starting up.

00:31:25.386 --> 00:31:26.246 A:middle
They started up much more

00:31:26.246 --> 00:31:27.896 A:middle
quickly, because I don't have to

00:31:27.896 --> 00:31:30.116 A:middle
pay the first boot cost.

00:31:30.116 --> 00:31:32.156 A:middle
I already paid that cost with

00:31:32.156 --> 00:31:33.356 A:middle
the base simulator when I set it

00:31:33.356 --> 00:31:33.866 A:middle
up.

00:31:33.866 --> 00:31:34.876 A:middle
So that can be a great

00:31:34.916 --> 00:31:35.416 A:middle
timesaver.

00:31:36.876 --> 00:31:39.956 A:middle
And then here's what I could set

00:31:40.406 --> 00:31:42.966 A:middle
up things in place for my demos

00:31:42.966 --> 00:31:44.376 A:middle
or my experiments that I want to

00:31:44.756 --> 00:31:46.636 A:middle
run, and then I would launch the

00:31:46.636 --> 00:31:47.856 A:middle
application on both of these

00:31:47.856 --> 00:31:48.496 A:middle
simulators.

00:31:48.996 --> 00:31:52.226 A:middle
Now, some of you may actually

00:31:52.226 --> 00:31:53.076 A:middle
recognize this code.

00:31:53.076 --> 00:31:53.636 A:middle
This is the Metal

00:31:53.636 --> 00:31:54.706 A:middle
DeferredLighting demo.

00:31:55.266 --> 00:31:56.086 A:middle
This is something that we

00:31:56.086 --> 00:31:57.756 A:middle
weren't able to run in previous

00:31:57.756 --> 00:31:57.966 A:middle
years.

00:31:57.966 --> 00:31:59.836 A:middle
This is new to Xcode 11 when

00:32:00.176 --> 00:32:02.166 A:middle
running on macOS Catalina.

00:32:02.616 --> 00:32:04.936 A:middle
And to tell you all about Metal

00:32:04.936 --> 00:32:07.306 A:middle
in the Simulator, I'm going to

00:32:07.306 --> 00:32:08.086 A:middle
invite Katelyn out.

00:32:08.656 --> 00:32:08.976 A:middle
Katelyn?

00:32:09.516 --> 00:32:14.966 A:middle
[ Applause ]

00:32:15.466 --> 00:32:15.946 A:middle
&gt;&gt; Thank you.

00:32:16.606 --> 00:32:17.836 A:middle
Thank you, Russ.

00:32:18.156 --> 00:32:18.686 A:middle
Good morning.

00:32:18.786 --> 00:32:20.376 A:middle
I'm Katelyn Hicks, and I'm an

00:32:20.376 --> 00:32:21.906 A:middle
engineer on the GPU Software

00:32:21.906 --> 00:32:22.196 A:middle
team.

00:32:22.746 --> 00:32:24.156 A:middle
And today, I'm excited to tell

00:32:24.156 --> 00:32:25.836 A:middle
you about the new Metal support

00:32:25.836 --> 00:32:26.546 A:middle
in Simulator.

00:32:27.216 --> 00:32:28.806 A:middle
So let's dive in to see how to

00:32:28.806 --> 00:32:30.556 A:middle
get the most out of Metal in

00:32:30.596 --> 00:32:31.066 A:middle
Simulator.

00:32:32.696 --> 00:32:35.216 A:middle
While running on macOS Catalina

00:32:35.546 --> 00:32:37.776 A:middle
and Xcode 11, Simulator now

00:32:37.776 --> 00:32:38.606 A:middle
supports Metal.

00:32:38.986 --> 00:32:40.546 A:middle
But what does that mean for your

00:32:40.546 --> 00:32:41.326 A:middle
application?

00:32:42.016 --> 00:32:43.596 A:middle
Well, two things.

00:32:44.456 --> 00:32:46.446 A:middle
Simulator is fully GPU

00:32:46.446 --> 00:32:48.676 A:middle
accelerated for all

00:32:48.676 --> 00:32:49.326 A:middle
applications.

00:32:50.026 --> 00:32:52.476 A:middle
And second, the Metal API is now

00:32:52.476 --> 00:32:54.136 A:middle
available to use in Simulator.

00:32:54.136 --> 00:32:58.016 A:middle
So let's take a look at how fast

00:32:58.176 --> 00:32:59.866 A:middle
Simulator is while running on

00:32:59.866 --> 00:33:02.166 A:middle
macOS Catalina and Xcode 11.

00:32:59.866 --> 00:33:02.166 A:middle
macOS Catalina and Xcode 11.

00:33:02.846 --> 00:33:04.206 A:middle
We'll quickly go through a few

00:33:04.206 --> 00:33:06.846 A:middle
applications to see that, across

00:33:06.846 --> 00:33:08.716 A:middle
the system, animations are much

00:33:08.716 --> 00:33:11.476 A:middle
smoother, and user experience is

00:33:11.476 --> 00:33:12.386 A:middle
more responsive.

00:33:12.976 --> 00:33:16.686 A:middle
This is due to the fact that

00:33:16.686 --> 00:33:18.276 A:middle
Apple frameworks have migrated

00:33:18.336 --> 00:33:20.146 A:middle
to Metal renderers and are now

00:33:20.146 --> 00:33:21.836 A:middle
taking advantage of the GPU.

00:33:22.446 --> 00:33:26.516 A:middle
So if your application is not

00:33:26.556 --> 00:33:28.426 A:middle
using Metal, but instead you're

00:33:28.426 --> 00:33:31.126 A:middle
using an Apple framework for UI

00:33:31.396 --> 00:33:34.036 A:middle
2D or 3D graphics, you will

00:33:34.036 --> 00:33:35.326 A:middle
still get the performance

00:33:35.326 --> 00:33:36.866 A:middle
improvements of GPU

00:33:36.866 --> 00:33:37.666 A:middle
acceleration.

00:33:38.926 --> 00:33:40.926 A:middle
There are no changes necessary

00:33:41.016 --> 00:33:42.936 A:middle
for your application to achieve

00:33:42.936 --> 00:33:45.206 A:middle
GPU acceleration through Metal.

00:33:45.576 --> 00:33:46.816 A:middle
This speedup is free.

00:33:47.516 --> 00:33:48.536 A:middle
Now, I'd like to show you a few

00:33:48.536 --> 00:33:49.116 A:middle
examples.

00:33:49.116 --> 00:33:53.016 A:middle
So on the left, we have a device

00:33:53.326 --> 00:33:54.686 A:middle
that is running on the software

00:33:54.686 --> 00:33:55.136 A:middle
renderer.

00:33:56.076 --> 00:33:57.276 A:middle
And on the right, we have the

00:33:57.276 --> 00:33:59.436 A:middle
newly GPU accelerated simulator.

00:34:00.436 --> 00:34:01.616 A:middle
In this simple graphics

00:34:01.616 --> 00:34:03.196 A:middle
workload, we can see the

00:34:03.196 --> 00:34:04.846 A:middle
improved performance through

00:34:04.846 --> 00:34:06.306 A:middle
scrolling through this Table

00:34:06.306 --> 00:34:08.096 A:middle
View that uses UIKit.

00:34:08.556 --> 00:34:13.616 A:middle
Since the original Simulator, an

00:34:13.786 --> 00:34:15.956 A:middle
iOS device's resolution has

00:34:15.956 --> 00:34:18.376 A:middle
increased 17 times, which has

00:34:18.376 --> 00:34:19.786 A:middle
put extra pressure on the

00:34:19.786 --> 00:34:21.446 A:middle
underlying software renderer.

00:34:22.446 --> 00:34:23.755 A:middle
In this SpriteKit Xcode

00:34:23.755 --> 00:34:25.556 A:middle
template, we see the performance

00:34:25.556 --> 00:34:28.136 A:middle
dipped down to 15 frames per

00:34:28.136 --> 00:34:29.886 A:middle
second in the software renderer,

00:34:30.696 --> 00:34:32.856 A:middle
whereas we're rendering the same

00:34:33.216 --> 00:34:35.696 A:middle
application in Xcode 11 and

00:34:35.755 --> 00:34:37.156 A:middle
macOS Catalina, and we see a

00:34:37.156 --> 00:34:39.696 A:middle
steady 60 frames per second with

00:34:39.735 --> 00:34:41.406 A:middle
more SpriteKit nodes rendering

00:34:41.505 --> 00:34:44.616 A:middle
in the scene.

00:34:44.835 --> 00:34:47.306 A:middle
For more complex 3D scenes like

00:34:47.335 --> 00:34:48.826 A:middle
this Fox demo that uses

00:34:48.826 --> 00:34:50.876 A:middle
SceneKit, we see a dramatic

00:34:50.876 --> 00:34:52.646 A:middle
performance improvement without

00:34:52.646 --> 00:34:54.116 A:middle
any changes to the Fox

00:34:54.116 --> 00:34:55.275 A:middle
application source.

00:34:55.815 --> 00:34:58.616 A:middle
And now it is possible to run

00:34:58.616 --> 00:35:01.116 A:middle
multiple simulator devices in

00:34:58.616 --> 00:35:01.116 A:middle
multiple simulator devices in

00:35:01.326 --> 00:35:02.996 A:middle
parallel with real-time

00:35:02.996 --> 00:35:03.616 A:middle
performance.

00:35:04.456 --> 00:35:06.146 A:middle
In this Badger demo, which also

00:35:06.146 --> 00:35:08.296 A:middle
uses SceneKit, the geometry and

00:35:08.296 --> 00:35:10.026 A:middle
animation was previously too

00:35:10.026 --> 00:35:12.366 A:middle
strenuous for a single software

00:35:12.366 --> 00:35:14.346 A:middle
rendered GL simulator device,

00:35:14.906 --> 00:35:16.096 A:middle
let alone two running in

00:35:16.096 --> 00:35:16.566 A:middle
parallel.

00:35:17.106 --> 00:35:21.426 A:middle
For those of you that use Metal

00:35:21.426 --> 00:35:23.486 A:middle
directly, Metal development is

00:35:23.486 --> 00:35:25.166 A:middle
now possible, and the workload

00:35:25.166 --> 00:35:26.446 A:middle
is fully accelerated.

00:35:26.856 --> 00:35:28.036 A:middle
Let's see how your experience

00:35:28.036 --> 00:35:29.696 A:middle
has changed while running your

00:35:29.696 --> 00:35:31.206 A:middle
application in Simulator.

00:35:31.826 --> 00:35:33.476 A:middle
So previously, you may have seen

00:35:33.476 --> 00:35:34.296 A:middle
a black screen.

00:35:34.756 --> 00:35:36.096 A:middle
But now when you run your

00:35:36.156 --> 00:35:38.006 A:middle
application in Simulator, you'll

00:35:38.276 --> 00:35:39.746 A:middle
be able to run your application

00:35:39.746 --> 00:35:41.456 A:middle
across all simulated devices.

00:35:42.076 --> 00:35:46.266 A:middle
Now that you've seen it in

00:35:46.266 --> 00:35:48.056 A:middle
action, let's dive into more

00:35:48.056 --> 00:35:48.556 A:middle
details.

00:35:50.136 --> 00:35:51.696 A:middle
If you've seen our other Metal

00:35:51.696 --> 00:35:53.466 A:middle
session, you know that this year

00:35:53.466 --> 00:35:54.926 A:middle
we have revamped our feature

00:35:54.926 --> 00:35:56.986 A:middle
query API and have introduced

00:35:56.986 --> 00:35:58.536 A:middle
the Metal GPU Family API.

00:35:59.616 --> 00:36:01.876 A:middle
The Metal GPU Family API makes

00:35:59.616 --> 00:36:01.876 A:middle
The Metal GPU Family API makes

00:36:01.876 --> 00:36:03.566 A:middle
writing cross platform code

00:36:03.566 --> 00:36:05.676 A:middle
simpler by abstracting GPU

00:36:05.676 --> 00:36:07.966 A:middle
capabilities into a few distinct

00:36:07.966 --> 00:36:10.506 A:middle
tiers, and the three families

00:36:10.546 --> 00:36:12.396 A:middle
that are relevant to Simulator

00:36:12.606 --> 00:36:15.086 A:middle
are first common, which includes

00:36:15.136 --> 00:36:16.896 A:middle
all GPU features that are

00:36:16.896 --> 00:36:18.486 A:middle
available cross platform.

00:36:19.516 --> 00:36:21.606 A:middle
And second, macOS, which in

00:36:21.606 --> 00:36:22.676 A:middle
includes the features that are

00:36:22.676 --> 00:36:25.056 A:middle
specific to macOS GPU hardware.

00:36:26.356 --> 00:36:28.356 A:middle
And third, Apple, which includes

00:36:28.356 --> 00:36:30.066 A:middle
the features that are specific

00:36:30.436 --> 00:36:32.996 A:middle
to iOS and tvOS GPU hardware.

00:36:33.316 --> 00:36:34.206 A:middle
So while running your

00:36:34.206 --> 00:36:35.756 A:middle
application in Simulator, your

00:36:35.756 --> 00:36:37.186 A:middle
application can use features

00:36:37.186 --> 00:36:39.826 A:middle
from MTLGPUFamilyApple2, which

00:36:39.826 --> 00:36:40.826 A:middle
includes features that are

00:36:40.826 --> 00:36:43.206 A:middle
included in MTLGPUFamilyCommon1

00:36:43.206 --> 00:36:43.656 A:middle
as well.

00:36:44.966 --> 00:36:46.676 A:middle
This support is common for all

00:36:46.676 --> 00:36:47.816 A:middle
Simulator devices.

00:36:49.396 --> 00:36:50.656 A:middle
So let's take a look how it is

00:36:50.656 --> 00:36:52.106 A:middle
possible to run your iOS

00:36:52.106 --> 00:36:53.476 A:middle
application in Simulator.

00:36:54.306 --> 00:36:56.636 A:middle
Previously, your application

00:36:56.636 --> 00:36:58.256 A:middle
rendered on an OpenGL ES

00:36:58.346 --> 00:36:59.856 A:middle
software renderer for all

00:36:59.856 --> 00:37:02.556 A:middle
applications, and it had no GPU

00:36:59.856 --> 00:37:02.556 A:middle
applications, and it had no GPU

00:37:02.556 --> 00:37:03.666 A:middle
hardware acceleration.

00:37:04.176 --> 00:37:06.366 A:middle
But now in Xcode 11 and macOS

00:37:06.366 --> 00:37:08.516 A:middle
Catalina, the great news is the

00:37:08.516 --> 00:37:11.006 A:middle
Metal API is available to use in

00:37:11.056 --> 00:37:11.616 A:middle
Simulator.

00:37:12.346 --> 00:37:14.466 A:middle
And all of the Apple frameworks

00:37:14.566 --> 00:37:15.976 A:middle
are now using Metal as well.

00:37:17.186 --> 00:37:18.676 A:middle
But not only it is available,

00:37:19.496 --> 00:37:20.706 A:middle
it's GPU-accelerated.

00:37:21.576 --> 00:37:23.096 A:middle
So this means that all commands

00:37:23.096 --> 00:37:24.506 A:middle
that are created by your iOS

00:37:24.506 --> 00:37:27.346 A:middle
application for UI 2D or 3D

00:37:27.346 --> 00:37:29.306 A:middle
graphics are all being

00:37:29.306 --> 00:37:31.486 A:middle
translated from iOS Metal to

00:37:31.486 --> 00:37:32.356 A:middle
macOS Metal.

00:37:32.636 --> 00:37:34.456 A:middle
And this translation allows you

00:37:34.456 --> 00:37:35.896 A:middle
to take advantage of the

00:37:35.896 --> 00:37:37.796 A:middle
underlying Mac GPU on your

00:37:37.796 --> 00:37:38.196 A:middle
system.

00:37:39.326 --> 00:37:40.586 A:middle
But this does come with a few

00:37:40.586 --> 00:37:42.986 A:middle
caveats and one of them being

00:37:43.226 --> 00:37:44.686 A:middle
the performance you see may be

00:37:44.686 --> 00:37:45.596 A:middle
different from the actual

00:37:45.596 --> 00:37:45.966 A:middle
device.

00:37:47.286 --> 00:37:48.826 A:middle
So the graphics you see will be

00:37:48.826 --> 00:37:50.296 A:middle
the performance of your

00:37:50.296 --> 00:37:51.616 A:middle
underlying Mac GPU.

00:37:52.056 --> 00:37:54.446 A:middle
And the Simulator device is not

00:37:54.446 --> 00:37:56.336 A:middle
a true iOS GPU emulator.

00:37:57.356 --> 00:37:59.626 A:middle
So if you run an iPhone success

00:37:59.676 --> 00:38:01.446 A:middle
simulator on your incredibly

00:37:59.676 --> 00:38:01.446 A:middle
simulator on your incredibly

00:38:01.446 --> 00:38:03.586 A:middle
fast Mac Pro, the performance

00:38:03.586 --> 00:38:05.246 A:middle
you see will be different from

00:38:05.246 --> 00:38:07.156 A:middle
running your application on an

00:38:07.156 --> 00:38:08.756 A:middle
actual success device.

00:38:09.566 --> 00:38:11.636 A:middle
So as always, make sure to

00:38:11.636 --> 00:38:13.066 A:middle
profile and optimize your

00:38:13.066 --> 00:38:15.406 A:middle
application directly on devices

00:38:15.486 --> 00:38:16.236 A:middle
before shipping your

00:38:16.236 --> 00:38:16.946 A:middle
application.

00:38:17.476 --> 00:38:19.516 A:middle
One other thing you need to take

00:38:19.516 --> 00:38:20.896 A:middle
into mind is the fact that there

00:38:20.896 --> 00:38:22.136 A:middle
are different storage modes

00:38:22.456 --> 00:38:23.686 A:middle
across macOS and iOS.

00:38:23.916 --> 00:38:26.716 A:middle
iOS has support for private,

00:38:27.246 --> 00:38:29.446 A:middle
shared and memoryless textures,

00:38:30.096 --> 00:38:31.286 A:middle
whereas Mac has support for

00:38:31.286 --> 00:38:33.016 A:middle
private and managed textures.

00:38:34.036 --> 00:38:35.916 A:middle
And while the native macOS

00:38:35.916 --> 00:38:37.766 A:middle
device does not support shared

00:38:37.766 --> 00:38:39.606 A:middle
and memoryless textures, they

00:38:39.606 --> 00:38:41.146 A:middle
are supported in Simulator.

00:38:42.256 --> 00:38:43.636 A:middle
There are a few other special

00:38:43.636 --> 00:38:45.876 A:middle
cases with shared storage, but

00:38:45.876 --> 00:38:47.966 A:middle
first let's revisit how shared

00:38:47.966 --> 00:38:48.766 A:middle
storage works.

00:38:50.226 --> 00:38:52.456 A:middle
So when you create an iOS

00:38:52.456 --> 00:38:54.606 A:middle
texture with Shared Storage

00:38:54.646 --> 00:38:56.446 A:middle
mode, this means that your

00:38:56.446 --> 00:38:58.276 A:middle
texture can be modified both on

00:38:58.276 --> 00:39:00.126 A:middle
the CPU and on the GPU.

00:38:58.276 --> 00:39:00.126 A:middle
the CPU and on the GPU.

00:39:00.736 --> 00:39:02.536 A:middle
And so if your application

00:39:02.536 --> 00:39:03.766 A:middle
wanted to initialize this

00:39:03.816 --> 00:39:06.306 A:middle
texture on the CPU, then bind

00:39:06.306 --> 00:39:08.106 A:middle
your texture to a render or

00:39:08.146 --> 00:39:09.806 A:middle
compute encoder to be read on

00:39:09.806 --> 00:39:10.386 A:middle
the GPU.

00:39:11.106 --> 00:39:12.516 A:middle
You could directly modify this

00:39:12.516 --> 00:39:15.116 A:middle
same texture on the GPU and then

00:39:15.116 --> 00:39:16.966 A:middle
read back those modifications on

00:39:16.966 --> 00:39:19.436 A:middle
the CPU after the command buffer

00:39:19.436 --> 00:39:19.956 A:middle
completes.

00:39:20.336 --> 00:39:21.236 A:middle
And your app does not have to

00:39:21.236 --> 00:39:22.376 A:middle
worry about any memory

00:39:22.376 --> 00:39:25.276 A:middle
synchronization as on iOS it's a

00:39:25.426 --> 00:39:26.786 A:middle
unified memory model.

00:39:29.006 --> 00:39:31.136 A:middle
And so in Simulator, for

00:39:31.136 --> 00:39:33.756 A:middle
multisampled, depth stencil and

00:39:33.756 --> 00:39:36.066 A:middle
linear textures, these texture

00:39:36.066 --> 00:39:38.606 A:middle
types must be created in private

00:39:38.906 --> 00:39:41.236 A:middle
storage, whereas on an actual

00:39:41.346 --> 00:39:43.316 A:middle
iOS device, these types may be

00:39:43.316 --> 00:39:44.226 A:middle
in shared storage.

00:39:45.226 --> 00:39:46.316 A:middle
And so your app may need a

00:39:46.316 --> 00:39:48.936 A:middle
simulator-only path if you need

00:39:49.056 --> 00:39:50.716 A:middle
CPU access to these textures.

00:39:51.526 --> 00:39:53.616 A:middle
For most of you, you will

00:39:53.616 --> 00:39:55.226 A:middle
initialize these texture types

00:39:55.226 --> 00:39:57.056 A:middle
and use them directly in your

00:39:57.056 --> 00:39:59.016 A:middle
GPU commands, and so this won't

00:39:59.086 --> 00:39:59.956 A:middle
affect your application.

00:40:00.086 --> 00:40:02.406 A:middle
They should already be private

00:40:02.406 --> 00:40:02.976 A:middle
textures.

00:40:03.686 --> 00:40:05.816 A:middle
But if you do need CPU access

00:40:06.286 --> 00:40:07.996 A:middle
for one of these textures, let's

00:40:07.996 --> 00:40:09.286 A:middle
go through what changes may be

00:40:09.286 --> 00:40:09.836 A:middle
required.

00:40:10.836 --> 00:40:12.216 A:middle
So as a reminder, if you create

00:40:12.216 --> 00:40:14.536 A:middle
a texture in private memory, the

00:40:14.536 --> 00:40:16.506 A:middle
texture does not have CPU

00:40:16.506 --> 00:40:16.916 A:middle
access.

00:40:17.806 --> 00:40:19.286 A:middle
It only can be modified by the

00:40:19.286 --> 00:40:20.926 A:middle
GPU and read by the GPU.

00:40:21.846 --> 00:40:23.516 A:middle
So if your app reads or writes

00:40:23.516 --> 00:40:24.896 A:middle
to the texture on the CPU, you

00:40:25.196 --> 00:40:26.946 A:middle
need an intermediate shared

00:40:26.946 --> 00:40:28.136 A:middle
resource to do so.

00:40:29.256 --> 00:40:30.786 A:middle
So first we can either create a

00:40:30.786 --> 00:40:32.416 A:middle
shared buffer or a shared

00:40:32.416 --> 00:40:32.896 A:middle
texture.

00:40:33.856 --> 00:40:35.766 A:middle
Then in order to copy this

00:40:35.896 --> 00:40:36.916 A:middle
texture, you create a

00:40:36.916 --> 00:40:38.816 A:middle
BlitCommandEncoder, and you can

00:40:38.816 --> 00:40:40.736 A:middle
copy from the shared buffer in

00:40:40.736 --> 00:40:42.266 A:middle
this case to the private

00:40:42.266 --> 00:40:42.796 A:middle
texture.

00:40:43.246 --> 00:40:44.576 A:middle
Or you can copy from the private

00:40:44.576 --> 00:40:46.786 A:middle
texture to the shared buffer.

00:40:47.726 --> 00:40:48.976 A:middle
So let's take a look at what

00:40:49.026 --> 00:40:50.306 A:middle
this looks like in source code.

00:40:51.656 --> 00:40:53.556 A:middle
So in this code example, we see

00:40:53.856 --> 00:40:55.776 A:middle
that a depth stencil texture is

00:40:55.776 --> 00:40:56.996 A:middle
created, and we want to

00:40:56.996 --> 00:40:58.386 A:middle
initialize it on the CPU.

00:40:58.986 --> 00:41:02.456 A:middle
So first, we set the storage

00:40:58.986 --> 00:41:02.456 A:middle
So first, we set the storage

00:41:02.516 --> 00:41:04.166 A:middle
mode to private only in

00:41:04.196 --> 00:41:04.696 A:middle
Simulator.

00:41:05.406 --> 00:41:06.696 A:middle
While we're not in a simulated

00:41:06.696 --> 00:41:08.516 A:middle
environment, we want to still

00:41:08.516 --> 00:41:10.686 A:middle
use a shared storage mode.

00:41:11.616 --> 00:41:13.346 A:middle
Then we create the texture with

00:41:13.346 --> 00:41:14.706 A:middle
the modified textureDescriptor.

00:41:15.236 --> 00:41:18.926 A:middle
And then while in the simulated

00:41:18.926 --> 00:41:20.446 A:middle
environment, in order to

00:41:20.446 --> 00:41:22.396 A:middle
initialize this private texture,

00:41:22.696 --> 00:41:23.896 A:middle
we will first create a shared

00:41:24.856 --> 00:41:25.366 A:middle
buffer.

00:41:25.496 --> 00:41:26.986 A:middle
For this shared buffer, we will

00:41:26.986 --> 00:41:28.686 A:middle
initialize it on the CPU with

00:41:28.686 --> 00:41:29.836 A:middle
the data that you'd like to see

00:41:29.836 --> 00:41:30.696 A:middle
in your private texture.

00:41:31.286 --> 00:41:33.276 A:middle
And finally, we blit from that

00:41:33.276 --> 00:41:35.196 A:middle
shared resource to the private

00:41:35.246 --> 00:41:35.646 A:middle
texture.

00:41:36.746 --> 00:41:38.346 A:middle
And then in the case that you're

00:41:38.346 --> 00:41:40.506 A:middle
still running on an actual iOS

00:41:40.546 --> 00:41:42.386 A:middle
device, we want to do the exact

00:41:42.386 --> 00:41:43.506 A:middle
same thing you did before and

00:41:43.736 --> 00:41:45.156 A:middle
initialize that texture on the

00:41:45.156 --> 00:41:47.196 A:middle
CPU and avoid this unnecessary

00:41:47.196 --> 00:41:47.466 A:middle
blit.

00:41:49.066 --> 00:41:50.586 A:middle
From this point forward, the use

00:41:50.586 --> 00:41:52.226 A:middle
of this texture is the exact

00:41:52.276 --> 00:41:53.746 A:middle
same, whether you're running on

00:41:53.746 --> 00:41:56.006 A:middle
an actual iOS device or in the

00:41:56.006 --> 00:41:56.596 A:middle
Simulator.

00:41:56.906 --> 00:41:58.646 A:middle
All of your GPU commands can be

00:41:58.646 --> 00:41:59.366 A:middle
the exact same.

00:42:00.726 --> 00:42:02.406 A:middle
And so there are a few other

00:42:02.406 --> 00:42:04.376 A:middle
changes that may be needed for

00:42:04.376 --> 00:42:05.806 A:middle
your application in Simulator,

00:42:05.806 --> 00:42:06.936 A:middle
and for that we have full

00:42:06.936 --> 00:42:08.666 A:middle
documentation for those small

00:42:08.666 --> 00:42:09.116 A:middle
changes.

00:42:09.386 --> 00:42:11.126 A:middle
And we also have a sample code

00:42:11.126 --> 00:42:12.566 A:middle
available for you to download

00:42:12.886 --> 00:42:15.276 A:middle
and to see example of porting an

00:42:15.276 --> 00:42:16.696 A:middle
application to Simulator.

00:42:17.296 --> 00:42:19.796 A:middle
I hope you learned something new

00:42:19.796 --> 00:42:20.916 A:middle
about Simulator today.

00:42:21.566 --> 00:42:23.046 A:middle
We first went over that the iOS,

00:42:23.436 --> 00:42:26.146 A:middle
watchOS and tvOS userspace is

00:42:26.146 --> 00:42:27.876 A:middle
running on the macOS kernel and

00:42:28.236 --> 00:42:29.886 A:middle
that the Simulator is pivotal to

00:42:29.886 --> 00:42:31.816 A:middle
testing your application across

00:42:31.816 --> 00:42:33.306 A:middle
all devices and runtimes.

00:42:34.356 --> 00:42:36.546 A:middle
We saw the power of xcrun simctl

00:42:36.946 --> 00:42:38.456 A:middle
and how you can script all of

00:42:38.456 --> 00:42:40.326 A:middle
your testing through Simulator.

00:42:41.156 --> 00:42:42.996 A:middle
And lastly, we saw that the GPU

00:42:42.996 --> 00:42:44.936 A:middle
acceleration through Metal in

00:42:44.936 --> 00:42:46.426 A:middle
Simulator is for everyone, and

00:42:46.686 --> 00:42:48.076 A:middle
it also enables Metal

00:42:48.076 --> 00:42:49.406 A:middle
development in the Simulator.

00:42:49.406 --> 00:42:51.716 A:middle
And if you have any other

00:42:51.716 --> 00:42:53.416 A:middle
questions, please visit the

00:42:53.506 --> 00:42:54.336 A:middle
session website.

00:42:54.336 --> 00:42:55.856 A:middle
Thank you, and I hope a great

00:42:55.856 --> 00:42:56.536 A:middle
rest of your week.

00:42:57.508 --> 00:42:59.508 A:middle
[ Applause ]
