WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:07.516 --> 00:00:14.026 A:middle
[ Applause ]

00:00:14.526 --> 00:00:15.626 A:middle
&gt;&gt; Hello, everyone.

00:00:15.836 --> 00:00:16.516 A:middle
Good afternoon.

00:00:17.316 --> 00:00:18.456 A:middle
Welcome to the session.

00:00:19.796 --> 00:00:20.836 A:middle
My name is Tao.

00:00:21.246 --> 00:00:22.446 A:middle
I'm from Core ML Team.

00:00:23.276 --> 00:00:25.016 A:middle
Today we're super excited to

00:00:25.016 --> 00:00:26.916 A:middle
talk about a few new features we

00:00:26.916 --> 00:00:28.676 A:middle
added to Create ML this year.

00:00:29.016 --> 00:00:30.136 A:middle
In What's New in Machine

00:00:30.136 --> 00:00:31.536 A:middle
Learning Session, you were

00:00:31.536 --> 00:00:33.286 A:middle
introduced to the brand-new

00:00:33.336 --> 00:00:34.986 A:middle
Create ML app.

00:00:34.986 --> 00:00:36.336 A:middle
It's a great new tool designed

00:00:36.336 --> 00:00:38.226 A:middle
by Apple to guide you through

00:00:38.226 --> 00:00:40.146 A:middle
the essential steps of training

00:00:40.146 --> 00:00:41.206 A:middle
of machine learning models.

00:00:42.226 --> 00:00:43.806 A:middle
We believe this makes your

00:00:43.806 --> 00:00:46.016 A:middle
machine learning workflow easy

00:00:46.016 --> 00:00:46.756 A:middle
and approachable.

00:00:48.206 --> 00:00:49.366 A:middle
Now, let's start with Text

00:00:49.366 --> 00:00:49.976 A:middle
Classification.

00:00:52.546 --> 00:00:53.956 A:middle
What is Text Classification?

00:00:54.536 --> 00:00:55.966 A:middle
It's a machine learning task

00:00:56.346 --> 00:00:58.796 A:middle
that classifies input text to a

00:00:58.886 --> 00:01:00.446 A:middle
set of predefined labels.

00:00:58.886 --> 00:01:00.446 A:middle
set of predefined labels.

00:01:03.136 --> 00:01:04.566 A:middle
You can use it for sentiment

00:01:04.566 --> 00:01:07.626 A:middle
analysis, like classifying text

00:01:07.626 --> 00:01:09.936 A:middle
as positive or negative.

00:01:11.396 --> 00:01:12.756 A:middle
Or doing spam detection.

00:01:12.756 --> 00:01:16.096 A:middle
Or more complicated things like

00:01:16.386 --> 00:01:18.596 A:middle
topic analysis, classifying text

00:01:18.596 --> 00:01:21.786 A:middle
as food, politics, or science.

00:01:23.146 --> 00:01:24.556 A:middle
Now, Text Classification has

00:01:24.556 --> 00:01:25.976 A:middle
been supported since last year,

00:01:26.516 --> 00:01:28.296 A:middle
but this year we're adding the

00:01:28.296 --> 00:01:30.076 A:middle
support for the state of the art

00:01:30.076 --> 00:01:30.776 A:middle
transfer learning.

00:01:31.636 --> 00:01:33.156 A:middle
Today, I'm going to give you a

00:01:33.156 --> 00:01:35.206 A:middle
concrete example of how you can

00:01:35.206 --> 00:01:37.346 A:middle
train a Text Classifier using

00:01:37.346 --> 00:01:38.046 A:middle
Transfer Learning.

00:01:39.446 --> 00:01:41.336 A:middle
To train such a model, the first

00:01:41.336 --> 00:01:42.566 A:middle
thing you'll want to do is

00:01:42.886 --> 00:01:44.616 A:middle
collect some training data.

00:01:46.336 --> 00:01:48.386 A:middle
Once you have the data, you can

00:01:48.386 --> 00:01:50.066 A:middle
organize in an easy way.

00:01:51.116 --> 00:01:53.676 A:middle
I have sports, entertainment and

00:01:53.676 --> 00:01:54.056 A:middle
nature.

00:01:55.166 --> 00:01:56.996 A:middle
Under each folder, I have a few

00:01:56.996 --> 00:01:57.626 A:middle
text files.

00:01:58.236 --> 00:02:00.316 A:middle
And each one of them is a single

00:01:58.236 --> 00:02:00.316 A:middle
And each one of them is a single

00:02:00.316 --> 00:02:02.996 A:middle
training example, and its label

00:02:03.146 --> 00:02:04.996 A:middle
is simply the name of the folder

00:02:04.996 --> 00:02:05.406 A:middle
they are in.

00:02:05.946 --> 00:02:07.786 A:middle
And that's it.

00:02:07.786 --> 00:02:08.806 A:middle
That's all you need to do with

00:02:08.806 --> 00:02:09.186 A:middle
the data.

00:02:10.156 --> 00:02:11.636 A:middle
I'll give you a quick demo to

00:02:11.636 --> 00:02:12.576 A:middle
show how you can do this.

00:02:12.776 --> 00:02:15.606 A:middle
On my desktop, I have a training

00:02:15.606 --> 00:02:15.956 A:middle
data folder.

00:02:20.386 --> 00:02:21.456 A:middle
So, I decided to have a little

00:02:21.456 --> 00:02:22.026 A:middle
bit of fun.

00:02:22.716 --> 00:02:24.356 A:middle
Instead of using plain text as

00:02:24.356 --> 00:02:26.546 A:middle
the label, I used a few emojis.

00:02:27.426 --> 00:02:29.116 A:middle
For example, for entertainment I

00:02:29.116 --> 00:02:30.306 A:middle
use a camcorder.

00:02:31.106 --> 00:02:33.216 A:middle
For sport, I'm using an American

00:02:33.216 --> 00:02:33.836 A:middle
football.

00:02:35.196 --> 00:02:36.836 A:middle
For nature, I'm using this cute

00:02:36.836 --> 00:02:39.486 A:middle
little tent besides a great pine

00:02:40.856 --> 00:02:40.966 A:middle
tree.

00:02:41.186 --> 00:02:42.536 A:middle
You notice there is also this

00:02:42.656 --> 00:02:43.306 A:middle
other folder.

00:02:44.186 --> 00:02:45.686 A:middle
This is the training data that I

00:02:45.686 --> 00:02:46.936 A:middle
actually don't want.

00:02:46.936 --> 00:02:49.466 A:middle
I want my model to learn such

00:02:49.466 --> 00:02:51.326 A:middle
that anything that's not one of

00:02:51.326 --> 00:02:53.416 A:middle
the three intended class, I want

00:02:53.416 --> 00:02:55.756 A:middle
my model to classify them into

00:02:56.726 --> 00:02:58.516 A:middle
this class.

00:02:58.686 --> 00:03:00.286 A:middle
So, let's take a look at a few

00:02:58.686 --> 00:03:00.286 A:middle
So, let's take a look at a few

00:03:00.286 --> 00:03:00.936 A:middle
examples here.

00:03:01.766 --> 00:03:05.186 A:middle
For example if you read this

00:03:05.186 --> 00:03:06.056 A:middle
sentence, there's something

00:03:06.056 --> 00:03:07.586 A:middle
about writer and IMDB.

00:03:07.586 --> 00:03:09.026 A:middle
It's clearly something related

00:03:09.026 --> 00:03:09.806 A:middle
to entertainment.

00:03:13.006 --> 00:03:15.066 A:middle
If I go into other folder, this

00:03:15.926 --> 00:03:19.086 A:middle
is not one of the three intended

00:03:19.856 --> 00:03:20.006 A:middle
class.

00:03:24.536 --> 00:03:25.546 A:middle
That's about data.

00:03:25.796 --> 00:03:32.446 A:middle
Now, I'll go to Create ML app.

00:03:34.436 --> 00:03:36.806 A:middle
To do that, I go to Developer

00:03:36.806 --> 00:03:39.356 A:middle
Tools and find the Create ML.

00:03:42.116 --> 00:03:43.256 A:middle
But I'm going to do a new

00:03:43.256 --> 00:03:48.336 A:middle
document and go to text.

00:03:48.496 --> 00:03:49.496 A:middle
I'll name it like that.

00:03:50.736 --> 00:03:53.906 A:middle
Create. So, I'm sure you have

00:03:53.906 --> 00:03:56.476 A:middle
seen this user interface in the

00:03:56.476 --> 00:03:58.096 A:middle
earlier session, Object

00:03:58.096 --> 00:03:58.776 A:middle
Connection and

00:03:58.846 --> 00:03:59.916 A:middle
Subclassification.

00:04:00.226 --> 00:04:01.466 A:middle
So, I'm just going to drag my

00:04:01.466 --> 00:04:02.826 A:middle
training data in directly here.

00:04:03.446 --> 00:04:05.956 A:middle
So, it gives you some feedback

00:04:05.956 --> 00:04:06.926 A:middle
about your training data.

00:04:07.366 --> 00:04:08.606 A:middle
But what's new about Text

00:04:08.606 --> 00:04:10.306 A:middle
Classifier is this particular

00:04:10.306 --> 00:04:11.236 A:middle
parameter section.

00:04:11.866 --> 00:04:15.026 A:middle
So, for today's demo, I'm going

00:04:15.026 --> 00:04:16.296 A:middle
to select Transfer Learning.

00:04:17.736 --> 00:04:19.065 A:middle
If we take a look at it, the

00:04:19.065 --> 00:04:20.596 A:middle
first two algorithms actually

00:04:20.596 --> 00:04:21.995 A:middle
have been supported since last

00:04:21.995 --> 00:04:22.136 A:middle
year.

00:04:22.776 --> 00:04:23.826 A:middle
And this year we're adding

00:04:23.826 --> 00:04:24.606 A:middle
Transfer Learning.

00:04:25.096 --> 00:04:27.086 A:middle
And for the demo I'm going to

00:04:27.086 --> 00:04:28.546 A:middle
use this feature extractor

00:04:28.546 --> 00:04:29.826 A:middle
called Dynamic Embedding.

00:04:30.156 --> 00:04:32.496 A:middle
I'll go into the detail about

00:04:32.496 --> 00:04:33.946 A:middle
what is Transfer Learning a bit

00:04:33.946 --> 00:04:35.936 A:middle
later after the demo, but all

00:04:35.936 --> 00:04:37.846 A:middle
you need to know now is Transfer

00:04:37.846 --> 00:04:39.256 A:middle
Learning with Dynamic Embedding

00:04:39.676 --> 00:04:41.686 A:middle
is actually an algorithm that

00:04:41.686 --> 00:04:43.096 A:middle
pays attention to the semantic

00:04:43.096 --> 00:04:45.446 A:middle
meaning of your input text.

00:04:47.036 --> 00:04:48.216 A:middle
I'll start training.

00:04:49.346 --> 00:04:50.506 A:middle
So, in general, Transfer

00:04:50.506 --> 00:04:52.326 A:middle
Learning takes a bit longer to

00:04:52.326 --> 00:04:52.726 A:middle
train.

00:04:53.516 --> 00:04:54.716 A:middle
For this particular data set,

00:04:55.176 --> 00:04:57.416 A:middle
it'll take about five minutes on

00:04:57.416 --> 00:04:58.316 A:middle
this particular machine.

00:04:59.376 --> 00:05:01.196 A:middle
So, I'm not going to wait.

00:04:59.376 --> 00:05:01.196 A:middle
So, I'm not going to wait.

00:05:02.666 --> 00:05:04.636 A:middle
Instead, I have my pre-picked

00:05:04.966 --> 00:05:07.116 A:middle
solution here that's trained on

00:05:07.116 --> 00:05:08.386 A:middle
exactly the same data.

00:05:08.956 --> 00:05:12.286 A:middle
Once the model has been trained,

00:05:12.286 --> 00:05:14.996 A:middle
the accuracy test gives you a

00:05:14.996 --> 00:05:16.846 A:middle
good summary about how your

00:05:16.846 --> 00:05:18.786 A:middle
model performs on different

00:05:18.786 --> 00:05:21.266 A:middle
data, broken down into different

00:05:21.266 --> 00:05:21.676 A:middle
classes.

00:05:22.666 --> 00:05:24.216 A:middle
It looks my model has done a

00:05:24.216 --> 00:05:26.246 A:middle
good job on training validation

00:05:26.246 --> 00:05:26.836 A:middle
and testing data.

00:05:27.486 --> 00:05:30.446 A:middle
So, I will directly jump to the

00:05:30.446 --> 00:05:31.196 A:middle
output tab.

00:05:31.946 --> 00:05:34.566 A:middle
This preview pane gives you some

00:05:34.636 --> 00:05:37.116 A:middle
summary about the model as well

00:05:37.116 --> 00:05:38.906 A:middle
as a few different ways for you

00:05:38.906 --> 00:05:40.506 A:middle
to do some quick experiments.

00:05:41.286 --> 00:05:42.836 A:middle
For example, if you go to the

00:05:42.836 --> 00:05:44.576 A:middle
lower right-hand side corner,

00:05:45.246 --> 00:05:47.526 A:middle
you can directly add File to do

00:05:47.526 --> 00:05:50.166 A:middle
a quick test.

00:05:50.336 --> 00:05:56.016 A:middle
Or you can track a folder that

00:05:56.016 --> 00:05:57.756 A:middle
the model will be able to make

00:05:57.756 --> 00:05:59.496 A:middle
prediction of all the text file

00:05:59.526 --> 00:06:00.406 A:middle
within that folder.

00:05:59.526 --> 00:06:00.406 A:middle
within that folder.

00:06:01.256 --> 00:06:02.696 A:middle
The model actually will use the

00:06:02.696 --> 00:06:04.856 A:middle
entire body of the text in each

00:06:04.856 --> 00:06:06.276 A:middle
file to make a single

00:06:06.276 --> 00:06:06.776 A:middle
prediction.

00:06:07.306 --> 00:06:10.336 A:middle
But there is another way for you

00:06:10.336 --> 00:06:12.416 A:middle
to do quick experiment which is

00:06:12.826 --> 00:06:13.626 A:middle
manually typing.

00:06:16.446 --> 00:06:19.356 A:middle
So in this particular text input

00:06:19.506 --> 00:06:22.066 A:middle
section, when you, when I type

00:06:22.376 --> 00:06:25.566 A:middle
each space, or if I stop typing

00:06:25.616 --> 00:06:27.406 A:middle
for a little while, the model

00:06:27.406 --> 00:06:28.436 A:middle
will make a prediction.

00:06:29.186 --> 00:06:30.966 A:middle
So, let's see how that works.

00:06:33.136 --> 00:06:35.336 A:middle
What a comeback win.

00:06:36.076 --> 00:06:40.886 A:middle
Sport. Let's try something

00:06:40.926 --> 00:06:41.546 A:middle
different.

00:06:42.896 --> 00:06:46.796 A:middle
The season finale adds a twist

00:06:47.486 --> 00:06:48.966 A:middle
to the plot.

00:06:49.456 --> 00:06:52.076 A:middle
Which seems about right.

00:06:52.386 --> 00:06:52.966 A:middle
Entertainment.

00:06:53.516 --> 00:06:56.826 A:middle
[ Applause ]

00:06:57.326 --> 00:06:58.516 A:middle
I actually also want to try

00:06:58.516 --> 00:07:00.086 A:middle
something more recent and more

00:06:58.516 --> 00:07:00.086 A:middle
something more recent and more

00:07:00.086 --> 00:07:00.566 A:middle
relevant.

00:07:01.006 --> 00:07:03.166 A:middle
This just came to me last night.

00:07:04.266 --> 00:07:14.356 A:middle
The Raptors are on top of the

00:07:15.616 --> 00:07:15.976 A:middle
mountain.

00:07:18.316 --> 00:07:18.796 A:middle
Nature [laughter].

00:07:20.476 --> 00:07:21.856 A:middle
Well, if I switch context.

00:07:26.016 --> 00:07:27.096 A:middle
[ Applause ]

00:07:27.096 --> 00:07:27.946 A:middle
It predicts sport.

00:07:28.516 --> 00:07:32.926 A:middle
[ Applause ]

00:07:33.426 --> 00:07:35.206 A:middle
So, I'm pretty happy with the

00:07:35.206 --> 00:07:35.966 A:middle
model performance.

00:07:36.766 --> 00:07:38.276 A:middle
Now I'm ready to deploy.

00:07:38.556 --> 00:07:40.186 A:middle
So, I just simply drag it out

00:07:40.536 --> 00:07:42.086 A:middle
and I can put it on my iOS

00:07:42.146 --> 00:07:42.626 A:middle
devices.

00:07:51.556 --> 00:07:53.186 A:middle
That's how you can train a Text

00:07:53.186 --> 00:07:54.876 A:middle
Classifier using Transfer

00:07:54.876 --> 00:07:55.146 A:middle
Learning.

00:07:56.366 --> 00:07:58.286 A:middle
But you might want to ask what

00:07:58.286 --> 00:07:59.856 A:middle
is Transfer Learning?

00:08:02.196 --> 00:08:03.896 A:middle
Transfer Learning is a powerful

00:08:03.896 --> 00:08:05.736 A:middle
machine learning technique where

00:08:05.736 --> 00:08:07.526 A:middle
a model trained on a huge amount

00:08:07.526 --> 00:08:09.516 A:middle
of data for one particular task

00:08:10.086 --> 00:08:11.936 A:middle
can be repurposed for another

00:08:11.936 --> 00:08:15.226 A:middle
task so that you, as developers,

00:08:15.226 --> 00:08:17.226 A:middle
only need to prepare limited

00:08:17.226 --> 00:08:19.486 A:middle
amount of data and still get

00:08:19.486 --> 00:08:20.786 A:middle
your customized machine learning

00:08:20.786 --> 00:08:21.256 A:middle
model.

00:08:21.706 --> 00:08:25.816 A:middle
Create ML actually uses Transfer

00:08:25.816 --> 00:08:26.646 A:middle
Learning for image

00:08:26.646 --> 00:08:27.866 A:middle
classification today.

00:08:28.326 --> 00:08:30.206 A:middle
And now we're bringing it to

00:08:31.166 --> 00:08:31.536 A:middle
text.

00:08:32.426 --> 00:08:34.296 A:middle
Well, to train a good Transfer

00:08:34.296 --> 00:08:36.866 A:middle
Learning model for text, the

00:08:36.866 --> 00:08:37.796 A:middle
problem is a little bit

00:08:37.796 --> 00:08:38.256 A:middle
different.

00:08:39.176 --> 00:08:40.796 A:middle
If you read this sentence, "I

00:08:41.056 --> 00:08:43.856 A:middle
was able to park my car near the

00:08:43.856 --> 00:08:44.806 A:middle
park entrance."

00:08:46.736 --> 00:08:48.936 A:middle
For a model that's trained with

00:08:49.506 --> 00:08:51.776 A:middle
conventional technique or study

00:08:51.776 --> 00:08:54.726 A:middle
embedding, these two parts will

00:08:54.726 --> 00:08:57.586 A:middle
look exactly the same.

00:08:57.766 --> 00:08:59.386 A:middle
But for a model trained with

00:08:59.386 --> 00:09:01.036 A:middle
Transfer Learning with Dynamic

00:08:59.386 --> 00:09:01.036 A:middle
Transfer Learning with Dynamic

00:09:01.036 --> 00:09:03.706 A:middle
Embedding, because it pays

00:09:03.706 --> 00:09:04.916 A:middle
attention to the semantic

00:09:04.916 --> 00:09:06.716 A:middle
meaning of the overall context,

00:09:07.406 --> 00:09:09.826 A:middle
it is able to figure out these

00:09:09.826 --> 00:09:11.216 A:middle
two parts actually mean

00:09:11.216 --> 00:09:12.666 A:middle
different things.

00:09:16.136 --> 00:09:18.206 A:middle
To train such a good model, you

00:09:18.206 --> 00:09:19.586 A:middle
need to do it on many texts.

00:09:20.056 --> 00:09:21.586 A:middle
That's exactly what we did.

00:09:22.566 --> 00:09:26.716 A:middle
We trained on billions of text

00:09:26.876 --> 00:09:28.096 A:middle
and shipped that pretrained

00:09:28.096 --> 00:09:29.586 A:middle
model to your mobile devices.

00:09:30.066 --> 00:09:31.956 A:middle
And more importantly, we

00:09:31.956 --> 00:09:34.446 A:middle
optimized its performance so

00:09:34.446 --> 00:09:38.316 A:middle
that you only need to prepare

00:09:38.466 --> 00:09:40.126 A:middle
your limited amount of raw text,

00:09:40.626 --> 00:09:43.686 A:middle
send it in to Create ML app.

00:09:44.006 --> 00:09:46.286 A:middle
Underneath it, it'll interact

00:09:46.286 --> 00:09:47.736 A:middle
with the model that's already

00:09:47.736 --> 00:09:50.956 A:middle
part of your OS and gives your

00:09:50.956 --> 00:09:52.816 A:middle
customized text classifier.

00:09:55.696 --> 00:09:57.236 A:middle
And you can deploy the same

00:09:57.236 --> 00:09:59.116 A:middle
model on your iOS devices

00:09:59.436 --> 00:10:01.386 A:middle
seamlessly because the

00:09:59.436 --> 00:10:01.386 A:middle
seamlessly because the

00:10:01.386 --> 00:10:03.116 A:middle
pretrained model is already

00:10:03.116 --> 00:10:06.166 A:middle
there for you to use.

00:10:06.476 --> 00:10:09.216 A:middle
Now, that's the workflow to use

00:10:09.216 --> 00:10:11.016 A:middle
the Create ML app to train your

00:10:11.016 --> 00:10:12.116 A:middle
Text Classifier.

00:10:13.216 --> 00:10:14.816 A:middle
If you're also interested in

00:10:15.056 --> 00:10:17.396 A:middle
writing code, it's also very

00:10:17.396 --> 00:10:17.706 A:middle
easy.

00:10:18.816 --> 00:10:20.106 A:middle
To use the Transfer Learning

00:10:20.106 --> 00:10:22.136 A:middle
with Dynamic Embedding, the only

00:10:22.136 --> 00:10:23.496 A:middle
thing you need to specify is

00:10:23.496 --> 00:10:24.816 A:middle
this model parameter.

00:10:25.616 --> 00:10:27.096 A:middle
The rest of the code is exactly

00:10:27.096 --> 00:10:27.976 A:middle
the same as last year.

00:10:32.986 --> 00:10:35.246 A:middle
Now, I've shown you how to train

00:10:35.246 --> 00:10:37.756 A:middle
Text Classifier, but I'd like to

00:10:37.756 --> 00:10:39.866 A:middle
give you a few simple tips to

00:10:39.866 --> 00:10:41.906 A:middle
get the most out of your Text

00:10:41.906 --> 00:10:42.476 A:middle
Classifier.

00:10:45.086 --> 00:10:47.876 A:middle
Now, choose an algorithm which

00:10:47.876 --> 00:10:49.206 A:middle
suits your use case.

00:10:50.296 --> 00:10:51.836 A:middle
Transfer Learning is only one of

00:10:51.836 --> 00:10:53.966 A:middle
the three algorithms that Text

00:10:53.966 --> 00:10:55.256 A:middle
Classifier supports.

00:10:57.656 --> 00:10:58.726 A:middle
Different algorithms have

00:10:58.806 --> 00:10:59.556 A:middle
different tradeoffs.

00:11:00.676 --> 00:11:02.236 A:middle
To find out which one fits your

00:11:02.236 --> 00:11:04.596 A:middle
use case best, please go to the

00:11:04.596 --> 00:11:05.926 A:middle
Natural Language session that

00:11:05.926 --> 00:11:10.156 A:middle
happens after this.

00:11:10.346 --> 00:11:11.816 A:middle
Provide balanced classes.

00:11:12.196 --> 00:11:13.256 A:middle
This is very important.

00:11:14.376 --> 00:11:15.686 A:middle
In the particular example that I

00:11:15.686 --> 00:11:17.606 A:middle
showed you, because each text

00:11:17.606 --> 00:11:19.146 A:middle
file is a single training

00:11:19.146 --> 00:11:19.756 A:middle
example.

00:11:20.526 --> 00:11:22.076 A:middle
So, I roughly kept the same

00:11:22.076 --> 00:11:24.146 A:middle
amount of text files in each of

00:11:24.146 --> 00:11:24.646 A:middle
the folders.

00:11:28.086 --> 00:11:29.126 A:middle
Data consistency.

00:11:29.626 --> 00:11:31.256 A:middle
If you expect your Text

00:11:31.256 --> 00:11:33.226 A:middle
Classifier to mostly work on

00:11:33.226 --> 00:11:35.876 A:middle
short sentences, like I do, your

00:11:35.876 --> 00:11:37.336 A:middle
training data should be mostly

00:11:37.336 --> 00:11:39.026 A:middle
consisting of such examples.

00:11:39.906 --> 00:11:42.876 A:middle
If you expect your Text

00:11:42.876 --> 00:11:44.196 A:middle
Classifier to work on short

00:11:44.196 --> 00:11:47.076 A:middle
words, paragraphs, or even an

00:11:47.076 --> 00:11:49.866 A:middle
entire article, you also want to

00:11:49.866 --> 00:11:51.236 A:middle
make sure your training data

00:11:51.236 --> 00:11:52.626 A:middle
cover these cases as well.

00:11:53.516 --> 00:11:58.506 A:middle
[ Applause ]
