WEBVTT

00:00:00.506 --> 00:00:04.500 A:middle
[ Music ]

00:00:13.166 --> 00:00:13.866 A:middle
Good afternoon.

00:00:14.016 --> 00:00:15.216 A:middle
[ Applause ]

00:00:15.216 --> 00:00:16.826 A:middle
Welcome to session 225.

00:00:17.536 --> 00:00:18.696 A:middle
My name is Brad Ford.

00:00:18.966 --> 00:00:20.266 A:middle
I work on the Camera Software

00:00:20.266 --> 00:00:20.736 A:middle
Team.

00:00:21.396 --> 00:00:22.906 A:middle
Thank you for hanging in there

00:00:22.906 --> 00:00:23.946 A:middle
till the bitter end.

00:00:24.016 --> 00:00:25.216 A:middle
I know it's been a long day.

00:00:25.706 --> 00:00:26.826 A:middle
We appreciate you staying with

00:00:26.826 --> 00:00:28.126 A:middle
us for The Late, Late Show.

00:00:28.126 --> 00:00:30.026 A:middle
And as 5:00 o'clock sessions go,

00:00:30.296 --> 00:00:31.226 A:middle
this is a pretty good one.

00:00:32.726 --> 00:00:33.806 A:middle
We'll be introducing two

00:00:33.806 --> 00:00:35.196 A:middle
exciting additions to the iOS

00:00:35.196 --> 00:00:36.416 A:middle
Camera Stack today.

00:00:36.566 --> 00:00:37.896 A:middle
I'll spend the first 40 minutes

00:00:37.896 --> 00:00:39.996 A:middle
or so talking about Multi-Camera

00:00:39.996 --> 00:00:40.466 A:middle
capture.

00:00:40.786 --> 00:00:42.726 A:middle
And then I'll invite Jacob and

00:00:42.726 --> 00:00:44.386 A:middle
David up to talk about Semantic

00:00:44.386 --> 00:00:45.026 A:middle
Segmentation.

00:00:46.016 --> 00:00:47.936 A:middle
So first up, Multi-Camera

00:00:47.936 --> 00:00:49.906 A:middle
Capture, or as we like to call

00:00:49.906 --> 00:00:50.706 A:middle
it internally.

00:00:51.306 --> 00:00:53.086 A:middle
MultiCam.

00:00:54.096 --> 00:00:56.556 A:middle
MultiCam is our single-most

00:00:56.596 --> 00:00:58.176 A:middle
requested third-party feature.

00:00:58.176 --> 00:00:59.976 A:middle
We hear it year after year in

00:00:59.976 --> 00:01:00.446 A:middle
the labs.

00:00:59.976 --> 00:01:00.446 A:middle
the labs.

00:01:00.446 --> 00:01:02.086 A:middle
So what we're talking about here

00:01:02.086 --> 00:01:04.056 A:middle
is the ability to simultaneously

00:01:04.056 --> 00:01:07.746 A:middle
capture video, audio, Metadata,

00:01:08.026 --> 00:01:10.866 A:middle
depth, and photos from multiple

00:01:10.866 --> 00:01:11.986 A:middle
cameras and microphones

00:01:11.986 --> 00:01:12.886 A:middle
simultaneously.

00:01:13.436 --> 00:01:16.386 A:middle
Third parties aren't the only

00:01:16.386 --> 00:01:17.506 A:middle
ones who benefit from this,

00:01:17.506 --> 00:01:17.756 A:middle
though.

00:01:18.366 --> 00:01:20.616 A:middle
We've had many and repeated

00:01:20.616 --> 00:01:21.766 A:middle
requests from first-party

00:01:21.836 --> 00:01:23.626 A:middle
clients as well for MultiCam

00:01:23.666 --> 00:01:24.116 A:middle
Capture.

00:01:24.616 --> 00:01:26.296 A:middle
Chief among them is ARKit.

00:01:26.656 --> 00:01:28.166 A:middle
And if you heard the keynote,

00:01:28.716 --> 00:01:29.936 A:middle
you heard about the introduction

00:01:29.936 --> 00:01:31.136 A:middle
of ARKit 3.

00:01:31.786 --> 00:01:34.076 A:middle
These APIs use front camera for

00:01:34.166 --> 00:01:36.366 A:middle
face and pose tracking, while

00:01:36.366 --> 00:01:37.856 A:middle
also using the back camera for

00:01:37.856 --> 00:01:39.636 A:middle
World tracking, which helps them

00:01:39.636 --> 00:01:40.886 A:middle
know where to place virtual

00:01:40.886 --> 00:01:42.466 A:middle
characters in the scene by

00:01:42.466 --> 00:01:44.686 A:middle
knowing what you're gazing at.

00:01:45.076 --> 00:01:46.976 A:middle
So we've supported MultiCam on

00:01:46.976 --> 00:01:49.146 A:middle
the Mac since the very first

00:01:49.146 --> 00:01:51.366 A:middle
appearance of AVFoundation, way

00:01:51.366 --> 00:01:52.486 A:middle
the heck back in Lion.

00:01:53.326 --> 00:01:55.646 A:middle
But on iOS, AVFoundation still

00:01:55.646 --> 00:01:57.436 A:middle
limits clients to one active

00:01:57.486 --> 00:01:58.486 A:middle
camera at a time.

00:01:59.106 --> 00:02:00.926 A:middle
And it's not because we're mean.

00:01:59.106 --> 00:02:00.926 A:middle
And it's not because we're mean.

00:02:01.116 --> 00:02:02.576 A:middle
There were good reasons for it.

00:02:02.956 --> 00:02:04.206 A:middle
The first reason is hardware

00:02:04.206 --> 00:02:05.006 A:middle
limitations.

00:02:05.556 --> 00:02:06.996 A:middle
I'm talking about cameras

00:02:07.046 --> 00:02:08.386 A:middle
sharing power rails.

00:02:08.846 --> 00:02:10.746 A:middle
And not physically being able to

00:02:10.746 --> 00:02:12.266 A:middle
provide enough power to power

00:02:12.266 --> 00:02:13.926 A:middle
two cameras simultaneously full

00:02:13.926 --> 00:02:14.316 A:middle
bore.

00:02:14.316 --> 00:02:17.226 A:middle
And the second reason was our

00:02:17.226 --> 00:02:18.966 A:middle
desire to ship a responsible

00:02:18.966 --> 00:02:19.296 A:middle
API.

00:02:19.976 --> 00:02:21.596 A:middle
One that would help you not burn

00:02:21.596 --> 00:02:24.216 A:middle
the phone down when doing all of

00:02:24.216 --> 00:02:25.536 A:middle
this processing power with

00:02:25.596 --> 00:02:27.276 A:middle
multiple cameras simultaneously.

00:02:27.276 --> 00:02:28.346 A:middle
So we wanted to make sure that

00:02:28.346 --> 00:02:29.426 A:middle
we delivered something to you

00:02:29.426 --> 00:02:31.266 A:middle
that would help you deal with

00:02:31.266 --> 00:02:32.816 A:middle
the hardware, thermal, and

00:02:32.816 --> 00:02:34.496 A:middle
bandwidth constraints that are

00:02:34.496 --> 00:02:35.556 A:middle
reality in our world.

00:02:36.606 --> 00:02:36.946 A:middle
All right.

00:02:36.986 --> 00:02:38.836 A:middle
So great news in iOS 13.

00:02:38.836 --> 00:02:40.426 A:middle
We do finally support MultiCam

00:02:40.476 --> 00:02:40.976 A:middle
Capture.

00:02:41.316 --> 00:02:42.686 A:middle
And we do it on all recent

00:02:42.686 --> 00:02:47.076 A:middle
hardware, iPhone XS, XS Max, XR,

00:02:47.396 --> 00:02:48.946 A:middle
and the new iPad Pro.

00:02:49.326 --> 00:02:51.146 A:middle
On all of these platforms, the

00:02:51.146 --> 00:02:51.996 A:middle
aforementioned hardware

00:02:51.996 --> 00:02:53.366 A:middle
limitations have been solved,

00:02:53.566 --> 00:02:53.986 A:middle
thankfully.

00:02:55.376 --> 00:02:57.156 A:middle
So let's dive right into the fun

00:02:57.156 --> 00:02:57.616 A:middle
stuff.

00:02:57.766 --> 00:02:59.916 A:middle
We've got a new set of APIs for

00:02:59.916 --> 00:03:01.786 A:middle
building MultiCamSessions.

00:02:59.916 --> 00:03:01.786 A:middle
building MultiCamSessions.

00:03:03.126 --> 00:03:04.716 A:middle
Now, if you've used AVFoundation

00:03:04.716 --> 00:03:06.056 A:middle
before for Camera Capture, you

00:03:06.056 --> 00:03:07.546 A:middle
know that we have four main

00:03:07.546 --> 00:03:09.396 A:middle
groups of classes: Inputs,

00:03:09.856 --> 00:03:12.556 A:middle
outputs, the session, and

00:03:12.556 --> 00:03:13.246 A:middle
connections.

00:03:13.776 --> 00:03:16.656 A:middle
The AVCaptureSession is the

00:03:16.656 --> 00:03:17.716 A:middle
center of our world.

00:03:17.876 --> 00:03:19.246 A:middle
It's the thing that marshals

00:03:19.246 --> 00:03:19.506 A:middle
data.

00:03:20.046 --> 00:03:21.116 A:middle
It's the thing that you tell to

00:03:21.116 --> 00:03:22.216 A:middle
start or stop running.

00:03:23.766 --> 00:03:25.356 A:middle
You add to it one or more

00:03:25.356 --> 00:03:27.136 A:middle
inputs, AVCaptureInputs.

00:03:27.536 --> 00:03:28.276 A:middle
One such is the

00:03:28.276 --> 00:03:30.436 A:middle
AVCaptureDeviceInput, which is a

00:03:30.436 --> 00:03:32.556 A:middle
wrapper for either a camera or a

00:03:32.556 --> 00:03:33.126 A:middle
microphone.

00:03:34.626 --> 00:03:35.846 A:middle
You also need to add one or more

00:03:35.846 --> 00:03:38.046 A:middle
AVCaptureOutputs to receive the

00:03:38.046 --> 00:03:38.346 A:middle
data.

00:03:38.776 --> 00:03:40.156 A:middle
Otherwise, those producers have

00:03:40.156 --> 00:03:40.846 A:middle
nowhere to put it.

00:03:40.846 --> 00:03:42.606 A:middle
And then the session

00:03:42.606 --> 00:03:43.586 A:middle
automatically creates

00:03:43.586 --> 00:03:44.866 A:middle
connections on your behalf

00:03:45.116 --> 00:03:46.836 A:middle
between inputs and outputs that

00:03:46.836 --> 00:03:48.266 A:middle
have compatible media types.

00:03:49.046 --> 00:03:49.996 A:middle
So note what I'm showing you

00:03:49.996 --> 00:03:51.146 A:middle
here is the traditional

00:03:51.146 --> 00:03:53.496 A:middle
AVCaptureSession, which on iOS

00:03:53.496 --> 00:03:55.886 A:middle
only allows one camera input per

00:03:55.886 --> 00:03:56.296 A:middle
session.

00:03:58.006 --> 00:04:00.316 A:middle
New in iOS 13: We're introducing

00:03:58.006 --> 00:04:00.316 A:middle
New in iOS 13: We're introducing

00:04:00.316 --> 00:04:02.106 A:middle
a subclass of AVCaptureSession

00:04:02.106 --> 00:04:04.686 A:middle
called AVCaptureMultiCamSession.

00:04:04.876 --> 00:04:07.476 A:middle
So this lets you do multiple ins

00:04:07.536 --> 00:04:08.316 A:middle
and outs.

00:04:09.056 --> 00:04:12.276 A:middle
AVCaptureSession is not

00:04:12.466 --> 00:04:13.146 A:middle
deprecated.

00:04:13.146 --> 00:04:14.506 A:middle
It's not going away.

00:04:14.796 --> 00:04:16.435 A:middle
In fact, the existing

00:04:16.435 --> 00:04:17.736 A:middle
AVCaptureSession is still the

00:04:17.736 --> 00:04:18.856 A:middle
preferred class when you're

00:04:18.856 --> 00:04:20.416 A:middle
doing single cam capture.

00:04:20.886 --> 00:04:22.026 A:middle
The reason for that is that

00:04:22.136 --> 00:04:24.166 A:middle
MultiCamSession, while being a

00:04:24.256 --> 00:04:26.646 A:middle
power tool, has some limitations

00:04:26.806 --> 00:04:28.096 A:middle
and I'll address those later.

00:04:29.566 --> 00:04:30.366 A:middle
All right.

00:04:30.366 --> 00:04:31.686 A:middle
So let me give you an example of

00:04:31.686 --> 00:04:33.596 A:middle
a bread and butter use case for

00:04:33.596 --> 00:04:34.236 A:middle
our new

00:04:34.236 --> 00:04:35.546 A:middle
AVCaptureMultiCamSession.

00:04:36.076 --> 00:04:37.406 A:middle
Let's say you want to add two

00:04:37.406 --> 00:04:38.656 A:middle
devices-- one for the front, and

00:04:38.656 --> 00:04:40.756 A:middle
one for the back camera to a

00:04:40.756 --> 00:04:42.966 A:middle
MultiCamSession; and do two to

00:04:42.966 --> 00:04:45.266 A:middle
VideoDataOutputs simultaneously,

00:04:45.266 --> 00:04:46.496 A:middle
one receiving frames from the

00:04:46.496 --> 00:04:47.856 A:middle
back camera, one from the front.

00:04:49.096 --> 00:04:50.876 A:middle
And then let's say, if you want

00:04:50.986 --> 00:04:52.316 A:middle
to do a real time preview, you

00:04:52.316 --> 00:04:53.336 A:middle
can add separate

00:04:53.336 --> 00:04:54.656 A:middle
VideoPreviewLayers; one for the

00:04:54.706 --> 00:04:55.836 A:middle
front, one for the back.

00:04:57.066 --> 00:04:58.166 A:middle
You needn't stop there, though.

00:04:59.106 --> 00:05:02.606 A:middle
You can do simultaneous

00:04:59.106 --> 00:05:02.606 A:middle
You can do simultaneous

00:05:02.836 --> 00:05:04.636 A:middle
MetadataOutputs, if you want to

00:05:04.636 --> 00:05:06.556 A:middle
do simultaneous barcode scanning

00:05:06.866 --> 00:05:07.786 A:middle
or face detection.

00:05:08.776 --> 00:05:10.076 A:middle
You could do multiple

00:05:10.076 --> 00:05:11.576 A:middle
MovieFileOutputs, if you want to

00:05:11.576 --> 00:05:12.846 A:middle
record one for the front and one

00:05:12.846 --> 00:05:13.216 A:middle
for the back.

00:05:13.726 --> 00:05:14.976 A:middle
You could add multiple

00:05:15.166 --> 00:05:17.086 A:middle
PhotoOutputs if you want to do

00:05:17.296 --> 00:05:18.916 A:middle
real-time capture of photos from

00:05:18.916 --> 00:05:19.726 A:middle
different cameras.

00:05:20.126 --> 00:05:21.426 A:middle
So as you can see, these graphs

00:05:21.426 --> 00:05:22.426 A:middle
are starting to look pretty

00:05:22.426 --> 00:05:24.376 A:middle
complicated with a lot of arrows

00:05:24.416 --> 00:05:25.616 A:middle
going from a lot of inputs to a

00:05:25.616 --> 00:05:26.386 A:middle
lot of outputs.

00:05:27.376 --> 00:05:29.116 A:middle
Those little arrows are called

00:05:29.116 --> 00:05:30.756 A:middle
AVCaptureConnections, and they

00:05:30.756 --> 00:05:32.246 A:middle
define the flow of data from an

00:05:32.246 --> 00:05:33.346 A:middle
input to an output.

00:05:33.956 --> 00:05:35.236 A:middle
Let me zoom in for a moment on

00:05:35.236 --> 00:05:37.226 A:middle
the device input to illustrate

00:05:37.226 --> 00:05:38.336 A:middle
the anatomy of connection.

00:05:39.816 --> 00:05:41.756 A:middle
Capture inputs have

00:05:41.926 --> 00:05:45.026 A:middle
AVCaptureInput ports which I

00:05:45.026 --> 00:05:46.426 A:middle
like to think of as little

00:05:46.426 --> 00:05:47.646 A:middle
electrical outlets.

00:05:48.396 --> 00:05:50.746 A:middle
You have one outlet per media

00:05:50.746 --> 00:05:52.496 A:middle
type that the input can produce.

00:05:53.436 --> 00:05:54.736 A:middle
If nothing is plugged into the

00:05:54.736 --> 00:05:56.646 A:middle
port, no data flows from that

00:05:56.716 --> 00:05:57.986 A:middle
port, just like an electrical

00:05:57.986 --> 00:05:58.336 A:middle
outlet.

00:05:58.426 --> 00:05:59.476 A:middle
You have to plug something in to

00:05:59.476 --> 00:06:00.296 A:middle
get the electricity.

00:05:59.476 --> 00:06:00.296 A:middle
get the electricity.

00:06:00.806 --> 00:06:02.256 A:middle
Now, to find out what ports are

00:06:02.256 --> 00:06:03.646 A:middle
available for a particular

00:06:03.646 --> 00:06:05.506 A:middle
input, you can query that

00:06:05.506 --> 00:06:07.616 A:middle
input's ports property and it

00:06:07.616 --> 00:06:09.286 A:middle
will tell you, "I have this

00:06:09.286 --> 00:06:11.056 A:middle
array of AVCaptureInput ports.

00:06:11.396 --> 00:06:13.186 A:middle
So for the Dual Camera, these

00:06:13.186 --> 00:06:14.116 A:middle
are the ports that you would

00:06:14.116 --> 00:06:14.516 A:middle
find.

00:06:14.516 --> 00:06:16.246 A:middle
One for video, one for depth,

00:06:16.816 --> 00:06:18.726 A:middle
one for Metadata objects such as

00:06:18.726 --> 00:06:20.596 A:middle
barcode scanning and faces, and

00:06:20.596 --> 00:06:22.496 A:middle
one for Metadata items, which

00:06:22.496 --> 00:06:23.356 A:middle
can be hooked up to a

00:06:23.356 --> 00:06:24.216 A:middle
MovieFileOutput.

00:06:25.466 --> 00:06:26.706 A:middle
Now whenever you use

00:06:26.706 --> 00:06:28.296 A:middle
AVCaptureSessions addInput

00:06:28.296 --> 00:06:30.026 A:middle
method to add an input to the

00:06:30.026 --> 00:06:33.276 A:middle
session or addOutput to add an

00:06:33.276 --> 00:06:35.276 A:middle
output to the session, the

00:06:35.276 --> 00:06:37.186 A:middle
session will look for compatible

00:06:37.186 --> 00:06:38.986 A:middle
media types and implicitly form

00:06:38.986 --> 00:06:40.136 A:middle
connections if it can.

00:06:40.856 --> 00:06:41.746 A:middle
So here, we had a

00:06:41.746 --> 00:06:42.876 A:middle
VideoDataOutput.

00:06:43.126 --> 00:06:45.186 A:middle
VideoDataOutputs receive video,

00:06:45.186 --> 00:06:45.976 A:middle
accept video.

00:06:45.976 --> 00:06:47.866 A:middle
And we had an electrical plug

00:06:48.116 --> 00:06:49.266 A:middle
that can produce video.

00:06:49.466 --> 00:06:50.746 A:middle
And so the connection was made

00:06:50.746 --> 00:06:51.436 A:middle
automatically.

00:06:52.066 --> 00:06:54.036 A:middle
That is how most of you are

00:06:54.446 --> 00:06:55.686 A:middle
accustomed to working with

00:06:55.686 --> 00:06:56.826 A:middle
AVCaptureSession, if you've

00:06:56.826 --> 00:06:58.106 A:middle
worked with our classes before.

00:06:58.786 --> 00:07:00.516 A:middle
MultiCamSession is a different

00:06:58.786 --> 00:07:00.516 A:middle
MultiCamSession is a different

00:07:00.516 --> 00:07:00.916 A:middle
beast.

00:07:01.696 --> 00:07:03.666 A:middle
That is because inputs and

00:07:03.666 --> 00:07:05.676 A:middle
outputs-- You have multiple

00:07:05.676 --> 00:07:06.866 A:middle
inputs now with multiple

00:07:06.866 --> 00:07:07.286 A:middle
outputs.

00:07:07.286 --> 00:07:08.306 A:middle
You probably want to make sure

00:07:08.306 --> 00:07:09.346 A:middle
that the connections are

00:07:09.346 --> 00:07:11.456 A:middle
happening from A to A and B to

00:07:11.456 --> 00:07:11.936 A:middle
B.

00:07:11.936 --> 00:07:13.176 A:middle
And not crossing where you

00:07:13.176 --> 00:07:14.216 A:middle
didn't intend them to.

00:07:14.686 --> 00:07:16.346 A:middle
So when building a

00:07:16.346 --> 00:07:18.446 A:middle
MultiCamSession, we urge you not

00:07:18.446 --> 00:07:20.206 A:middle
to use implicit connection

00:07:20.356 --> 00:07:20.796 A:middle
forming.

00:07:21.016 --> 00:07:23.456 A:middle
But instead use these special

00:07:23.456 --> 00:07:24.646 A:middle
purpose adders,

00:07:24.836 --> 00:07:27.516 A:middle
addInputWithNoConnections, or

00:07:27.516 --> 00:07:29.486 A:middle
addOutputWithNoConnections.

00:07:30.096 --> 00:07:34.166 A:middle
And there are likewise ones that

00:07:34.166 --> 00:07:34.796 A:middle
you can use for

00:07:34.796 --> 00:07:36.816 A:middle
VideoPreviewLayer, which are

00:07:37.146 --> 00:07:38.916 A:middle
setSessionWithNoConnections.

00:07:39.326 --> 00:07:41.256 A:middle
When you use these, it basically

00:07:41.256 --> 00:07:43.126 A:middle
just tells the session: Here are

00:07:43.126 --> 00:07:44.216 A:middle
these inputs, here these

00:07:44.216 --> 00:07:44.726 A:middle
outputs.

00:07:44.806 --> 00:07:46.686 A:middle
You now know about them but keep

00:07:46.686 --> 00:07:47.456 A:middle
your hands off them.

00:07:47.666 --> 00:07:49.296 A:middle
I'm going to add connections as

00:07:49.296 --> 00:07:50.876 A:middle
I want to later on manually.

00:07:51.126 --> 00:07:53.126 A:middle
And the way you do that is you

00:07:53.126 --> 00:07:54.786 A:middle
create the AVCaptureConnection

00:07:54.786 --> 00:07:56.686 A:middle
yourself by telling it, "I want

00:07:56.686 --> 00:07:58.326 A:middle
you to connect this port or

00:07:58.326 --> 00:07:59.926 A:middle
ports to this output."

00:08:00.256 --> 00:08:01.376 A:middle
And then you tell the session,

00:08:01.586 --> 00:08:02.706 A:middle
"Please add this connection."

00:08:02.996 --> 00:08:03.866 A:middle
And now you're ready to go.

00:08:03.866 --> 00:08:06.316 A:middle
That was very wordy.

00:08:06.626 --> 00:08:08.466 A:middle
It's better shown than talked

00:08:08.466 --> 00:08:08.766 A:middle
about.

00:08:08.766 --> 00:08:09.866 A:middle
So I'd like to bring up Nik

00:08:09.866 --> 00:08:10.336 A:middle
Gallo.

00:08:10.856 --> 00:08:12.036 A:middle
Also from the Camera Software

00:08:12.036 --> 00:08:13.596 A:middle
group, to demonstrate

00:08:13.596 --> 00:08:14.306 A:middle
AVMultiCamPiP.

00:08:14.306 --> 00:08:14.436 A:middle
Nik?

00:08:15.056 --> 00:08:17.056 A:middle
[ Applause ]

00:08:17.096 --> 00:08:17.596 A:middle
&gt;&gt; Thanks, Brad.

00:08:18.626 --> 00:08:20.106 A:middle
AVMultiCampPiP is an app that

00:08:20.106 --> 00:08:21.116 A:middle
demonstrates streaming from the

00:08:21.176 --> 00:08:22.036 A:middle
front and back cameras

00:08:22.036 --> 00:08:22.866 A:middle
simultaneously.

00:08:23.136 --> 00:08:24.306 A:middle
Here, we have two video

00:08:24.306 --> 00:08:25.556 A:middle
previews; one displaying the

00:08:25.556 --> 00:08:26.956 A:middle
front camera and one displaying

00:08:26.956 --> 00:08:27.596 A:middle
the back camera.

00:08:27.596 --> 00:08:28.696 A:middle
And when I double tap the

00:08:28.696 --> 00:08:30.346 A:middle
screen, I can swap which camera

00:08:30.346 --> 00:08:31.926 A:middle
appears full screen and which

00:08:31.926 --> 00:08:33.000 A:middle
camera appears PiP.

00:08:39.515 --> 00:08:42.736 A:middle
[ Applause ]

00:08:43.236 --> 00:08:44.035 A:middle
There we go.

00:08:44.035 --> 00:08:46.396 A:middle
Now, we can see here that Brad

00:08:46.396 --> 00:08:47.796 A:middle
is live at Apple Park.

00:08:47.796 --> 00:08:50.076 A:middle
And before I ask him a few

00:08:50.076 --> 00:08:51.766 A:middle
questions, I will press the

00:08:51.766 --> 00:08:53.046 A:middle
record button here at the bottom

00:08:53.346 --> 00:08:54.426 A:middle
to watch this conversation

00:08:54.426 --> 00:08:54.626 A:middle
later.

00:08:55.636 --> 00:08:56.066 A:middle
Hey, Brad.

00:08:56.606 --> 00:08:57.786 A:middle
So tell me how's it going over

00:08:57.786 --> 00:08:58.286 A:middle
at Apple Park?

00:08:58.886 --> 00:09:00.626 A:middle
&gt;&gt; Nik, it's pandemonium here at

00:08:58.886 --> 00:09:00.626 A:middle
&gt;&gt; Nik, it's pandemonium here at

00:09:00.626 --> 00:09:01.146 A:middle
Apple Park.

00:09:01.236 --> 00:09:02.406 A:middle
As you can see in front of the

00:09:02.406 --> 00:09:03.686 A:middle
reflecting pool, there's all

00:09:03.686 --> 00:09:05.086 A:middle
kinds of activity happening.

00:09:05.466 --> 00:09:06.726 A:middle
I hear a rushing of water.

00:09:07.076 --> 00:09:08.036 A:middle
It sounds like I'm about to be

00:09:08.036 --> 00:09:09.146 A:middle
drenched at any moment.

00:09:09.676 --> 00:09:11.466 A:middle
I hear wild animals behind me,

00:09:11.576 --> 00:09:12.816 A:middle
like ducks or something.

00:09:13.256 --> 00:09:14.936 A:middle
I honestly fear for my life

00:09:14.936 --> 00:09:15.116 A:middle
here.

00:09:15.456 --> 00:09:16.316 A:middle
&gt;&gt; Well, Brad, that seems

00:09:16.316 --> 00:09:17.156 A:middle
absolutely terrifying.

00:09:17.156 --> 00:09:18.066 A:middle
Hope you stay safe out there.

00:09:18.306 --> 00:09:19.106 A:middle
&gt;&gt; Okay, thanks.

00:09:19.486 --> 00:09:19.776 A:middle
&gt;&gt; Got it.

00:09:20.856 --> 00:09:21.866 A:middle
So now that we finished

00:09:21.866 --> 00:09:22.646 A:middle
recording the movie.

00:09:22.736 --> 00:09:23.536 A:middle
Let's go take a look at what we

00:09:23.536 --> 00:09:23.956 A:middle
just recorded.

00:09:27.256 --> 00:09:28.536 A:middle
Here we have the movie.

00:09:29.256 --> 00:09:30.726 A:middle
As you can see, when I swap

00:09:30.726 --> 00:09:33.196 A:middle
between the two cameras, it

00:09:33.446 --> 00:09:35.356 A:middle
swaps just like we did when

00:09:35.576 --> 00:09:36.196 A:middle
using the app.

00:09:36.196 --> 00:09:38.276 A:middle
And that's AVMultiCamPiP.

00:09:38.276 --> 00:09:38.906 A:middle
Back to Brad.

00:09:39.516 --> 00:09:43.736 A:middle
[ Applause ]

00:09:44.236 --> 00:09:44.716 A:middle
&gt;&gt; Thanks, Nik.

00:09:45.036 --> 00:09:45.626 A:middle
Awesome demo.

00:09:47.316 --> 00:09:48.466 A:middle
All right, so let's look at

00:09:48.466 --> 00:09:49.706 A:middle
what's happening under the hood

00:09:49.806 --> 00:09:51.056 A:middle
in AVMultiCamPiP.

00:09:51.676 --> 00:09:53.266 A:middle
So we have two device inputs:

00:09:53.266 --> 00:09:54.876 A:middle
One for the front camera, one

00:09:54.876 --> 00:09:57.696 A:middle
for the back camera, added, with

00:09:57.696 --> 00:09:59.476 A:middle
no connections, as I mentioned

00:09:59.476 --> 00:09:59.866 A:middle
before.

00:10:00.106 --> 00:10:00.776 A:middle
We also have two

00:10:00.776 --> 00:10:02.496 A:middle
VideoDataOutputs, one for each.

00:10:02.856 --> 00:10:04.516 A:middle
And two VideoPreviewLayers.

00:10:04.986 --> 00:10:06.446 A:middle
Now to place them on screen,

00:10:06.676 --> 00:10:07.926 A:middle
it's just a matter of taking

00:10:07.926 --> 00:10:10.616 A:middle
those VideoPreviewLayers and

00:10:10.616 --> 00:10:12.036 A:middle
ordering them so that one is on

00:10:12.036 --> 00:10:13.096 A:middle
top of the other and one is

00:10:13.096 --> 00:10:14.056 A:middle
sized smaller.

00:10:14.056 --> 00:10:15.766 A:middle
And when Nik double tapped on

00:10:15.766 --> 00:10:17.906 A:middle
them, we simply repositioned

00:10:17.906 --> 00:10:18.796 A:middle
them and reversed the Z

00:10:18.796 --> 00:10:18.976 A:middle
ordering.

00:10:19.046 --> 00:10:20.836 A:middle
Now there is some magic

00:10:20.836 --> 00:10:22.176 A:middle
happening in the Metal Shader

00:10:22.386 --> 00:10:23.416 A:middle
compositor code.

00:10:23.796 --> 00:10:25.116 A:middle
There it's taking those two

00:10:25.116 --> 00:10:27.506 A:middle
VideoDataOutputs and compositing

00:10:27.506 --> 00:10:29.756 A:middle
them so that the smaller PiP is

00:10:29.756 --> 00:10:31.586 A:middle
arranged within one frame.

00:10:31.586 --> 00:10:32.736 A:middle
So it's compositing them to a

00:10:32.736 --> 00:10:34.396 A:middle
single video buffer and then

00:10:34.396 --> 00:10:36.126 A:middle
sending them to an AVAssetWriter

00:10:36.366 --> 00:10:38.166 A:middle
where they are recorded to one

00:10:38.166 --> 00:10:39.166 A:middle
video track in a movie.

00:10:39.896 --> 00:10:41.506 A:middle
This sample code is available

00:10:41.746 --> 00:10:42.296 A:middle
right now.

00:10:42.676 --> 00:10:43.686 A:middle
It's associated with this

00:10:43.686 --> 00:10:43.996 A:middle
session.

00:10:43.996 --> 00:10:45.006 A:middle
You can take a look and start

00:10:45.006 --> 00:10:46.566 A:middle
doing your own MultiCam

00:10:46.566 --> 00:10:47.176 A:middle
Captures.

00:10:47.626 --> 00:10:47.786 A:middle
All right.

00:10:48.416 --> 00:10:51.236 A:middle
Time to talk about limitations.

00:10:51.366 --> 00:10:53.846 A:middle
While AVMultiCamSession is a

00:10:53.846 --> 00:10:55.556 A:middle
power tool, it doesn't do

00:10:55.556 --> 00:10:56.136 A:middle
everything.

00:10:56.496 --> 00:10:58.436 A:middle
And let me tell you what it does

00:10:58.436 --> 00:10:58.866 A:middle
not do.

00:11:00.316 --> 00:11:02.016 A:middle
First up, you cannot pretend

00:11:02.116 --> 00:11:04.246 A:middle
that one camera is two cameras.

00:11:04.866 --> 00:11:07.556 A:middle
AVCaptureDeviceInput API will

00:11:07.556 --> 00:11:09.216 A:middle
let you create multiple

00:11:09.216 --> 00:11:11.076 A:middle
instances for say the back

00:11:11.076 --> 00:11:11.476 A:middle
camera.

00:11:11.786 --> 00:11:12.776 A:middle
You could make ten of them if

00:11:12.776 --> 00:11:13.126 A:middle
you want.

00:11:13.526 --> 00:11:15.126 A:middle
But if you try to add all those

00:11:15.126 --> 00:11:16.046 A:middle
instances to one

00:11:16.046 --> 00:11:17.346 A:middle
MultiCamSession, it will say,

00:11:17.346 --> 00:11:17.706 A:middle
uh-uh.

00:11:18.406 --> 00:11:19.916 A:middle
And it will throw an exception.

00:11:20.786 --> 00:11:22.716 A:middle
Please, only one input per

00:11:22.716 --> 00:11:24.036 A:middle
camera in a session.

00:11:25.156 --> 00:11:26.326 A:middle
Also, you're not allowed to

00:11:26.396 --> 00:11:28.916 A:middle
clone a camera to two outputs of

00:11:28.916 --> 00:11:29.646 A:middle
the same type.

00:11:30.246 --> 00:11:32.936 A:middle
Such as taking one camera and

00:11:32.936 --> 00:11:34.336 A:middle
splitting its signal to two

00:11:34.336 --> 00:11:35.316 A:middle
VideoDataOutputs.

00:11:35.846 --> 00:11:37.656 A:middle
You can, of course, add multiple

00:11:37.656 --> 00:11:39.546 A:middle
cameras and connect them to a

00:11:39.546 --> 00:11:41.336 A:middle
VideoDataOutput each, but you

00:11:41.336 --> 00:11:42.976 A:middle
cannot fan out from one to many.

00:11:47.076 --> 00:11:48.806 A:middle
You're also not allowed-- The

00:11:48.806 --> 00:11:50.146 A:middle
opposite holds true as well.

00:11:50.256 --> 00:11:53.026 A:middle
AVCaptureOutputs on iOS do not

00:11:53.026 --> 00:11:54.286 A:middle
support media mixing.

00:11:54.776 --> 00:11:56.916 A:middle
So all the data outputs only can

00:11:56.916 --> 00:11:57.896 A:middle
take a single input.

00:11:58.546 --> 00:11:59.736 A:middle
You can't, for instance, try to

00:11:59.786 --> 00:12:01.436 A:middle
jam two cameras sources into a

00:11:59.786 --> 00:12:01.436 A:middle
jam two cameras sources into a

00:12:01.436 --> 00:12:03.926 A:middle
single data output.

00:12:03.926 --> 00:12:04.986 A:middle
It wouldn't know what to do with

00:12:04.986 --> 00:12:05.996 A:middle
the second video since it

00:12:05.996 --> 00:12:07.406 A:middle
doesn't know how to mix them.

00:12:08.066 --> 00:12:09.996 A:middle
You can, of course, use separate

00:12:09.996 --> 00:12:11.926 A:middle
VideoDataOutputs and then

00:12:12.016 --> 00:12:13.436 A:middle
composite those buffers in your

00:12:13.436 --> 00:12:14.906 A:middle
own code, such as the Metal

00:12:14.906 --> 00:12:16.436 A:middle
Shader Composite that we used in

00:12:16.436 --> 00:12:17.186 A:middle
MultiCamPiP.

00:12:17.856 --> 00:12:18.856 A:middle
You can do that however you

00:12:18.856 --> 00:12:19.066 A:middle
like.

00:12:19.496 --> 00:12:20.686 A:middle
But as far as session building

00:12:20.686 --> 00:12:22.416 A:middle
is concerned, do not try to jam

00:12:22.416 --> 00:12:23.916 A:middle
multiple cameras into a single

00:12:23.916 --> 00:12:24.236 A:middle
output.

00:12:25.726 --> 00:12:26.126 A:middle
All right.

00:12:26.206 --> 00:12:27.486 A:middle
A word about presets.

00:12:28.666 --> 00:12:30.226 A:middle
The traditional AVCaptureSession

00:12:30.296 --> 00:12:31.906 A:middle
has this concept of a session

00:12:31.906 --> 00:12:34.446 A:middle
preset, which dictates a common

00:12:34.446 --> 00:12:36.046 A:middle
quality of service for the whole

00:12:36.046 --> 00:12:36.456 A:middle
session.

00:12:36.726 --> 00:12:39.086 A:middle
And it applies to all inputs and

00:12:39.086 --> 00:12:40.376 A:middle
outputs within that session.

00:12:40.656 --> 00:12:42.216 A:middle
For instance, when you set the

00:12:42.216 --> 00:12:45.146 A:middle
session preset to high, the

00:12:45.146 --> 00:12:46.706 A:middle
session configures the device's

00:12:46.706 --> 00:12:49.186 A:middle
resolution and frame rate, and

00:12:49.266 --> 00:12:50.686 A:middle
all of the outputs so that they

00:12:50.686 --> 00:12:52.396 A:middle
are delivering a high-quality

00:12:52.596 --> 00:12:53.866 A:middle
video experience such as

00:12:53.866 --> 00:12:54.926 A:middle
1080p30.

00:12:58.046 --> 00:12:59.326 A:middle
Presets are a problem for

00:12:59.326 --> 00:13:00.306 A:middle
MultiCamSession.

00:12:59.326 --> 00:13:00.306 A:middle
MultiCamSession.

00:13:01.116 --> 00:13:02.756 A:middle
Think again about something that

00:13:02.756 --> 00:13:03.576 A:middle
looks like this.

00:13:04.306 --> 00:13:06.906 A:middle
MultiCamSession configurations

00:13:06.906 --> 00:13:08.196 A:middle
are hybrid.

00:13:08.266 --> 00:13:09.296 A:middle
They're heterogeneous.

00:13:09.636 --> 00:13:10.846 A:middle
What does it mean to have high

00:13:10.846 --> 00:13:12.146 A:middle
quality for the whole thing?

00:13:12.486 --> 00:13:13.616 A:middle
You might want to do different

00:13:13.616 --> 00:13:15.186 A:middle
qualities of service on

00:13:15.186 --> 00:13:16.666 A:middle
different branches of the graph.

00:13:17.086 --> 00:13:18.606 A:middle
For instance, on the front

00:13:18.606 --> 00:13:19.596 A:middle
camera, you might want to just

00:13:19.596 --> 00:13:21.436 A:middle
do a low res preview, such as

00:13:21.436 --> 00:13:24.296 A:middle
640x480, while also

00:13:24.296 --> 00:13:25.846 A:middle
simultaneously doing something

00:13:26.096 --> 00:13:27.996 A:middle
really high quality, 1080p60,

00:13:27.996 --> 00:13:29.196 A:middle
for instance, on the back.

00:13:29.626 --> 00:13:30.886 A:middle
Well, obviously, we don't have

00:13:30.976 --> 00:13:32.446 A:middle
presets for all of these hybrid

00:13:32.446 --> 00:13:33.146 A:middle
situations.

00:13:34.136 --> 00:13:35.236 A:middle
We've decided to keep things

00:13:35.236 --> 00:13:37.156 A:middle
simple in MultiCamSession.

00:13:37.636 --> 00:13:39.166 A:middle
It does not support presets.

00:13:39.276 --> 00:13:41.716 A:middle
It supports one, and one preset

00:13:41.716 --> 00:13:43.676 A:middle
only, which is input priority.

00:13:44.106 --> 00:13:45.316 A:middle
So that means it leaves the

00:13:45.316 --> 00:13:46.906 A:middle
inputs and outputs alone.

00:13:47.256 --> 00:13:49.086 A:middle
When you add them, you must

00:13:49.086 --> 00:13:50.496 A:middle
configure the active format

00:13:50.496 --> 00:13:51.126 A:middle
yourself.

00:13:51.636 --> 00:13:55.806 A:middle
All right, onto the Cost

00:13:55.806 --> 00:13:56.406 A:middle
Functions.

00:13:57.136 --> 00:13:58.126 A:middle
I mentioned at the beginning

00:13:58.126 --> 00:13:59.506 A:middle
that we took our time with this

00:13:59.576 --> 00:14:01.086 A:middle
MultiCam support because we

00:13:59.576 --> 00:14:01.086 A:middle
MultiCam support because we

00:14:01.086 --> 00:14:02.306 A:middle
wanted to deliver a very

00:14:02.306 --> 00:14:04.596 A:middle
responsible API, one that could

00:14:04.596 --> 00:14:06.306 A:middle
help you account for the various

00:14:06.356 --> 00:14:08.146 A:middle
costs that you incur when

00:14:08.146 --> 00:14:09.456 A:middle
running multiple cameras and

00:14:09.456 --> 00:14:11.146 A:middle
lighting up virtually every

00:14:11.146 --> 00:14:11.956 A:middle
block on the phone.

00:14:16.076 --> 00:14:17.456 A:middle
So this is trite but true.

00:14:18.276 --> 00:14:19.606 A:middle
There is no such thing as a free

00:14:19.606 --> 00:14:20.006 A:middle
lunch.

00:14:20.256 --> 00:14:22.226 A:middle
And so this is the part of the

00:14:22.226 --> 00:14:23.366 A:middle
session where I become your

00:14:23.366 --> 00:14:25.236 A:middle
father and I'm going to give you

00:14:25.236 --> 00:14:25.936 A:middle
the Dad Talk.

00:14:27.156 --> 00:14:28.736 A:middle
In the Dad Talk, I will explain

00:14:28.736 --> 00:14:30.866 A:middle
how credit cards work, and how

00:14:30.866 --> 00:14:31.956 A:middle
you need to be responsible with

00:14:31.956 --> 00:14:33.386 A:middle
your money and live within your

00:14:33.386 --> 00:14:36.626 A:middle
means, and, like, such things.

00:14:37.766 --> 00:14:39.026 A:middle
So it's a fact of life that we

00:14:39.026 --> 00:14:40.886 A:middle
have limited hardware bandwidth

00:14:40.886 --> 00:14:41.686 A:middle
on iOS.

00:14:41.796 --> 00:14:43.696 A:middle
And though we have multiple

00:14:43.696 --> 00:14:44.976 A:middle
cameras-- so we have multiple

00:14:44.976 --> 00:14:48.466 A:middle
sensors-- we only have one ISP,

00:14:48.466 --> 00:14:49.836 A:middle
or image signal processor.

00:14:50.646 --> 00:14:52.646 A:middle
So all of those sensors, all the

00:14:52.646 --> 00:14:55.036 A:middle
pixels being -- going through

00:14:55.036 --> 00:14:56.326 A:middle
those sensors need to be

00:14:56.356 --> 00:14:57.916 A:middle
processed by a single ISP.

00:14:57.916 --> 00:15:00.106 A:middle
And it is limited by how many

00:14:57.916 --> 00:15:00.106 A:middle
And it is limited by how many

00:15:00.446 --> 00:15:02.576 A:middle
pixels it can run per clock at a

00:15:02.576 --> 00:15:03.416 A:middle
given frequency.

00:15:04.346 --> 00:15:06.946 A:middle
So there are limiters to the

00:15:07.036 --> 00:15:08.276 A:middle
number of pixels that you can

00:15:08.276 --> 00:15:08.906 A:middle
run at a time.

00:15:09.756 --> 00:15:10.596 A:middle
The contributors to the

00:15:10.596 --> 00:15:12.316 A:middle
HardwareCosts are, as you would

00:15:12.316 --> 00:15:14.046 A:middle
expect, video resolution.

00:15:14.566 --> 00:15:15.826 A:middle
Higher resolution means more

00:15:15.826 --> 00:15:17.126 A:middle
pixels to cram through there.

00:15:17.896 --> 00:15:19.086 A:middle
The max frame rate.

00:15:19.496 --> 00:15:20.576 A:middle
If you're delivering those

00:15:20.576 --> 00:15:22.376 A:middle
pixels faster, it's got to do

00:15:22.376 --> 00:15:23.836 A:middle
more pixels per clock as well.

00:15:23.876 --> 00:15:26.346 A:middle
And then a third one, which you

00:15:26.346 --> 00:15:27.536 A:middle
may or may not have heard of, is

00:15:27.536 --> 00:15:28.596 A:middle
called Sensor Binning.

00:15:29.716 --> 00:15:31.866 A:middle
Sensor Binning refers to a way

00:15:31.866 --> 00:15:33.456 A:middle
to combine information in

00:15:33.456 --> 00:15:34.936 A:middle
adjacent pixels to reduce

00:15:34.936 --> 00:15:35.426 A:middle
bandwidth.

00:15:35.996 --> 00:15:36.936 A:middle
So for instance, if we have an

00:15:36.936 --> 00:15:39.186 A:middle
image here, and we do a 2x2

00:15:39.186 --> 00:15:41.066 A:middle
binning, it's going to take 4

00:15:41.066 --> 00:15:43.176 A:middle
pixels in squares and sum them

00:15:43.176 --> 00:15:45.406 A:middle
into one so that we get a

00:15:45.406 --> 00:15:47.506 A:middle
reduction in size by 4X.

00:15:48.046 --> 00:15:49.256 A:middle
It gives you a reduction in

00:15:49.256 --> 00:15:49.786 A:middle
noise.

00:15:50.366 --> 00:15:51.636 A:middle
It gives you a reduction in

00:15:51.636 --> 00:15:52.116 A:middle
bandwidth.

00:15:52.596 --> 00:15:54.796 A:middle
It gives you 4X intensity per

00:15:54.796 --> 00:15:55.276 A:middle
pixel.

00:15:55.766 --> 00:15:56.576 A:middle
So there are a lot of great

00:15:56.616 --> 00:15:57.706 A:middle
things about Sensor Binning.

00:15:58.146 --> 00:15:59.676 A:middle
The downside is that you get a

00:15:59.676 --> 00:16:01.256 A:middle
little reduction in image

00:15:59.676 --> 00:16:01.256 A:middle
little reduction in image

00:16:01.256 --> 00:16:01.796 A:middle
quality.

00:16:02.106 --> 00:16:03.566 A:middle
So diagonal lines might look a

00:16:03.566 --> 00:16:04.556 A:middle
little stair stepped.

00:16:05.196 --> 00:16:07.666 A:middle
But their most redeeming quality

00:16:07.666 --> 00:16:09.236 A:middle
is that binned formats are super

00:16:09.236 --> 00:16:09.906 A:middle
low power.

00:16:09.906 --> 00:16:12.696 A:middle
In fact, whenever you use ARKit

00:16:12.696 --> 00:16:14.256 A:middle
with the camera, you are using a

00:16:14.256 --> 00:16:16.306 A:middle
binned format because ARKit uses

00:16:16.306 --> 00:16:17.776 A:middle
binned formats exclusively to

00:16:17.776 --> 00:16:19.246 A:middle
save on that power for all the

00:16:19.246 --> 00:16:20.736 A:middle
interesting AR things that you'd

00:16:20.736 --> 00:16:21.156 A:middle
like to do.

00:16:22.526 --> 00:16:22.856 A:middle
All right.

00:16:23.226 --> 00:16:24.736 A:middle
How do we account for cost?

00:16:24.736 --> 00:16:26.406 A:middle
Or how do we report those costs?

00:16:26.996 --> 00:16:28.486 A:middle
MultiCamSession tallies up your

00:16:28.486 --> 00:16:30.196 A:middle
HardwareCost as you configure

00:16:30.196 --> 00:16:30.726 A:middle
your session.

00:16:31.246 --> 00:16:32.296 A:middle
So each time you change

00:16:32.296 --> 00:16:34.246 A:middle
something, it keeps track of it.

00:16:34.526 --> 00:16:36.106 A:middle
Just like filling up a shopping

00:16:36.106 --> 00:16:38.146 A:middle
cart, or going to an online

00:16:38.146 --> 00:16:39.536 A:middle
store and putting things into

00:16:39.536 --> 00:16:40.696 A:middle
the cart before you pay for

00:16:40.696 --> 00:16:41.746 A:middle
them, you know when you're

00:16:41.746 --> 00:16:43.386 A:middle
getting close to your limit on

00:16:43.386 --> 00:16:43.906 A:middle
your budget.

00:16:43.976 --> 00:16:45.376 A:middle
And you can kind of try things

00:16:45.376 --> 00:16:47.246 A:middle
out, and then put new things in

00:16:47.246 --> 00:16:48.336 A:middle
or move old things out.

00:16:48.586 --> 00:16:49.806 A:middle
You see the costs before you

00:16:49.806 --> 00:16:50.416 A:middle
have to pay.

00:16:50.966 --> 00:16:51.976 A:middle
It's the same with

00:16:51.976 --> 00:16:52.876 A:middle
MultiCamSession.

00:16:53.436 --> 00:16:55.326 A:middle
We have a new property called

00:16:55.976 --> 00:16:56.856 A:middle
HardwareCost.

00:16:57.146 --> 00:16:58.926 A:middle
And this HardwareCost starts at

00:16:58.966 --> 00:17:00.196 A:middle
zero when you make a brand new

00:16:58.966 --> 00:17:00.196 A:middle
zero when you make a brand new

00:17:00.196 --> 00:17:00.666 A:middle
session.

00:17:01.736 --> 00:17:03.656 A:middle
And it increments as you add

00:17:03.656 --> 00:17:05.276 A:middle
more features, more inputs, more

00:17:05.276 --> 00:17:05.786 A:middle
outputs.

00:17:05.826 --> 00:17:07.876 A:middle
And you're fine as long as you

00:17:07.876 --> 00:17:09.016 A:middle
stay under 1.0.

00:17:09.536 --> 00:17:11.526 A:middle
Anything under 1.0 is runnable.

00:17:12.766 --> 00:17:14.556 A:middle
The minute you hit 1.0 or

00:17:14.556 --> 00:17:15.906 A:middle
greater, you're in trouble.

00:17:15.906 --> 00:17:17.576 A:middle
And that's because the ISP

00:17:17.576 --> 00:17:19.276 A:middle
bandwidth limit is hard.

00:17:19.685 --> 00:17:21.965 A:middle
It's not like you can, you know,

00:17:22.086 --> 00:17:23.526 A:middle
deliver every other frame.

00:17:24.296 --> 00:17:24.626 A:middle
No.

00:17:24.675 --> 00:17:25.546 A:middle
This is an all-or-nothing

00:17:25.546 --> 00:17:25.986 A:middle
proposal.

00:17:26.276 --> 00:17:27.675 A:middle
You have to either make it, or

00:17:27.675 --> 00:17:28.016 A:middle
you don't.

00:17:28.425 --> 00:17:30.016 A:middle
So if you're over 1.0, and you

00:17:30.016 --> 00:17:31.356 A:middle
try to run the

00:17:31.356 --> 00:17:32.836 A:middle
AVCaptureMultiCamSession, it

00:17:33.076 --> 00:17:33.856 A:middle
will say, "Uh-uh."

00:17:33.856 --> 00:17:35.936 A:middle
It will give you a notification

00:17:36.246 --> 00:17:38.096 A:middle
of a Runtime error, indicating

00:17:38.096 --> 00:17:39.776 A:middle
that the reason it had to stop

00:17:39.776 --> 00:17:40.796 A:middle
is because of a HardwareCost

00:17:40.796 --> 00:17:40.976 A:middle
overage.

00:17:45.046 --> 00:17:45.766 A:middle
Now, you're probably wondering,

00:17:45.766 --> 00:17:47.246 A:middle
"How do I reduce that cost?"

00:17:47.996 --> 00:17:49.206 A:middle
The most obvious way you can do

00:17:49.206 --> 00:17:50.576 A:middle
it is to pick a lower

00:17:50.576 --> 00:17:51.166 A:middle
resolution.

00:17:51.856 --> 00:17:53.456 A:middle
Another way you can do it is if

00:17:53.456 --> 00:17:54.246 A:middle
you want to keep the same

00:17:54.246 --> 00:17:56.356 A:middle
resolution, if there was a

00:17:56.356 --> 00:17:57.616 A:middle
binned format at the same

00:17:57.616 --> 00:17:58.686 A:middle
resolution, pick that one

00:17:58.686 --> 00:17:59.136 A:middle
instead.

00:17:59.476 --> 00:18:00.756 A:middle
It's a little bit lower quality

00:17:59.476 --> 00:18:00.756 A:middle
It's a little bit lower quality

00:18:00.936 --> 00:18:02.416 A:middle
but way lower in power.

00:18:02.876 --> 00:18:05.576 A:middle
Next, you would think that

00:18:05.576 --> 00:18:06.796 A:middle
lowering the frame rate would

00:18:06.796 --> 00:18:08.946 A:middle
help, but it doesn't.

00:18:10.016 --> 00:18:10.966 A:middle
The reason is that

00:18:10.966 --> 00:18:13.306 A:middle
AVCaptureDevice allows you and

00:18:13.306 --> 00:18:14.846 A:middle
has allowed you since, I think,

00:18:14.846 --> 00:18:17.666 A:middle
iOS 4, to change the frame rate

00:18:17.666 --> 00:18:18.196 A:middle
on the fly.

00:18:18.826 --> 00:18:21.106 A:middle
So if you have a 120 fps format,

00:18:21.826 --> 00:18:24.116 A:middle
and you say, "Set the active

00:18:24.116 --> 00:18:26.646 A:middle
format to 60," you still have to

00:18:26.646 --> 00:18:28.866 A:middle
pay the cost for 120, not 60.

00:18:29.066 --> 00:18:30.136 A:middle
Because at any point while

00:18:30.136 --> 00:18:31.086 A:middle
you're running, you could

00:18:31.086 --> 00:18:32.166 A:middle
increase the frame rate up to

00:18:32.166 --> 00:18:33.016 A:middle
120.

00:18:33.266 --> 00:18:34.816 A:middle
We must assume the worst case.

00:18:35.876 --> 00:18:37.506 A:middle
But good news.

00:18:37.616 --> 00:18:39.056 A:middle
We're now offering an override

00:18:39.146 --> 00:18:40.236 A:middle
property on the

00:18:40.236 --> 00:18:41.506 A:middle
AVCaptureDeviceInput.

00:18:42.326 --> 00:18:45.426 A:middle
By setting it, you can turn a

00:18:45.426 --> 00:18:47.166 A:middle
high frame rate format into a

00:18:47.166 --> 00:18:49.236 A:middle
lower frame rate format by

00:18:49.346 --> 00:18:51.096 A:middle
promising that you will go no

00:18:51.096 --> 00:18:52.716 A:middle
higher than a particular frame

00:18:52.886 --> 00:18:52.976 A:middle
rate.

00:18:56.166 --> 00:18:58.046 A:middle
Now, this is a point of

00:18:58.046 --> 00:18:59.786 A:middle
confusion in our APIs.

00:18:59.846 --> 00:19:01.156 A:middle
We don't talk about frame rates

00:18:59.846 --> 00:19:01.156 A:middle
We don't talk about frame rates

00:19:01.156 --> 00:19:01.796 A:middle
as rates.

00:19:01.826 --> 00:19:02.686 A:middle
We talked about them as

00:19:02.686 --> 00:19:03.276 A:middle
durations.

00:19:03.586 --> 00:19:06.326 A:middle
So to set a frame rate, you set

00:19:06.326 --> 00:19:07.576 A:middle
one over the duration.

00:19:07.736 --> 00:19:08.746 A:middle
That's the same as the frame

00:19:08.746 --> 00:19:08.986 A:middle
rate.

00:19:09.396 --> 00:19:10.906 A:middle
So if you want to take a 60 fps

00:19:10.906 --> 00:19:12.736 A:middle
format and make it into a 30 fps

00:19:12.736 --> 00:19:13.196 A:middle
format.

00:19:13.776 --> 00:19:16.056 A:middle
You do that by making a CMTime

00:19:16.056 --> 00:19:17.546 A:middle
with 1 over 30, which is the

00:19:17.546 --> 00:19:18.146 A:middle
duration.

00:19:18.536 --> 00:19:20.196 A:middle
And then set that deviceInputs

00:19:20.496 --> 00:19:22.646 A:middle
videoMinFrameDuration override

00:19:22.896 --> 00:19:24.076 A:middle
to 30 fps.

00:19:24.466 --> 00:19:25.356 A:middle
Congratulations.

00:19:25.416 --> 00:19:26.606 A:middle
You've just turned a 60 fps

00:19:26.606 --> 00:19:28.326 A:middle
format into a 30 fps format.

00:19:28.326 --> 00:19:29.326 A:middle
And you only pay the hardware

00:19:29.326 --> 00:19:32.416 A:middle
cost for 30.

00:19:32.596 --> 00:19:34.216 A:middle
I should also mention that there

00:19:34.216 --> 00:19:36.606 A:middle
is a great function in the

00:19:36.606 --> 00:19:38.676 A:middle
AVMultiCamPiP app that shows how

00:19:38.676 --> 00:19:40.496 A:middle
to iteratively reduce your cost.

00:19:40.826 --> 00:19:42.046 A:middle
It's a recursive function that

00:19:42.186 --> 00:19:43.236 A:middle
kind of picks things that are

00:19:43.236 --> 00:19:44.946 A:middle
most important to it and it

00:19:45.186 --> 00:19:46.736 A:middle
throttles down things that are

00:19:46.736 --> 00:19:48.096 A:middle
less important until it gets

00:19:48.096 --> 00:19:49.056 A:middle
under the HardwareCost.

00:19:50.006 --> 00:19:51.756 A:middle
Now next up is System Pressure

00:19:51.756 --> 00:19:52.046 A:middle
Costs.

00:19:52.046 --> 00:19:53.866 A:middle
This is the second-big

00:19:53.866 --> 00:19:55.186 A:middle
contributor that we report.

00:19:55.576 --> 00:19:58.466 A:middle
As you're well aware, phones are

00:19:58.466 --> 00:20:00.326 A:middle
extremely powerful computers in

00:19:58.466 --> 00:20:00.326 A:middle
extremely powerful computers in

00:20:00.576 --> 00:20:01.846 A:middle
little, bitty, thermally

00:20:01.846 --> 00:20:03.236 A:middle
challenged packages.

00:20:03.936 --> 00:20:06.546 A:middle
And in iOS 11, we introduced

00:20:06.746 --> 00:20:08.916 A:middle
camera system pressure states.

00:20:09.566 --> 00:20:10.596 A:middle
These help you monitor the

00:20:10.596 --> 00:20:11.996 A:middle
camera's current situation.

00:20:13.246 --> 00:20:14.846 A:middle
Camera system pressure consists

00:20:14.926 --> 00:20:17.136 A:middle
of system temperature.

00:20:17.286 --> 00:20:19.286 A:middle
That is, overall OS thermals.

00:20:20.596 --> 00:20:21.866 A:middle
Peak power demands.

00:20:21.866 --> 00:20:22.876 A:middle
And that has to do with the

00:20:22.876 --> 00:20:23.406 A:middle
battery.

00:20:23.786 --> 00:20:24.836 A:middle
How much charge does it

00:20:24.836 --> 00:20:25.586 A:middle
currently have?

00:20:26.196 --> 00:20:27.936 A:middle
Is it able to ramp up its

00:20:27.936 --> 00:20:29.416 A:middle
voltage fast enough to meet the

00:20:29.416 --> 00:20:31.226 A:middle
demands of running whatever you

00:20:31.226 --> 00:20:31.916 A:middle
want to do right now?

00:20:33.236 --> 00:20:34.996 A:middle
And the infrared projector

00:20:34.996 --> 00:20:35.496 A:middle
temperature.

00:20:36.206 --> 00:20:37.636 A:middle
On devices that support

00:20:37.636 --> 00:20:39.066 A:middle
TrueDepth Camera, we have an

00:20:39.066 --> 00:20:40.346 A:middle
infrared camera as well as an

00:20:40.346 --> 00:20:41.136 A:middle
RGB camera.

00:20:41.326 --> 00:20:42.606 A:middle
Well, that generates its own

00:20:42.656 --> 00:20:42.866 A:middle
heat.

00:20:42.956 --> 00:20:43.886 A:middle
And so that's part of the

00:20:43.886 --> 00:20:45.366 A:middle
contribution to system pressure

00:20:45.366 --> 00:20:45.876 A:middle
states.

00:20:46.416 --> 00:20:49.656 A:middle
We have five of them.

00:20:50.156 --> 00:20:51.346 A:middle
Nominal all the way up to

00:20:51.346 --> 00:20:51.896 A:middle
Shutdown.

00:20:52.526 --> 00:20:53.596 A:middle
When the system pressure state

00:20:53.596 --> 00:20:55.306 A:middle
is nominal, you're in great

00:20:55.306 --> 00:20:55.586 A:middle
shape.

00:20:55.786 --> 00:20:56.676 A:middle
You can do whatever you want.

00:20:57.176 --> 00:20:58.756 A:middle
When it's Fair, you can still

00:20:58.756 --> 00:21:00.086 A:middle
almost do whatever you want.

00:20:58.756 --> 00:21:00.086 A:middle
almost do whatever you want.

00:21:00.536 --> 00:21:01.976 A:middle
But at Serious, you start

00:21:01.976 --> 00:21:03.106 A:middle
getting into a situation where

00:21:03.106 --> 00:21:04.336 A:middle
the system is going to throttle

00:21:04.636 --> 00:21:05.356 A:middle
back.

00:21:05.356 --> 00:21:06.656 A:middle
Meaning you have fewer cycles

00:21:06.656 --> 00:21:07.976 A:middle
for the GPU.

00:21:08.196 --> 00:21:10.526 A:middle
Your quality might be

00:21:10.526 --> 00:21:11.236 A:middle
compromised.

00:21:11.736 --> 00:21:12.956 A:middle
And, at Critical, you are

00:21:12.956 --> 00:21:13.746 A:middle
getting a whole lot of

00:21:13.816 --> 00:21:14.336 A:middle
throttling.

00:21:14.586 --> 00:21:18.036 A:middle
At Shutdown, we cannot run the

00:21:18.036 --> 00:21:20.266 A:middle
camera any longer for fear of

00:21:20.266 --> 00:21:21.046 A:middle
hurting the hardware.

00:21:21.356 --> 00:21:23.226 A:middle
So at Shutdown, we automatically

00:21:23.226 --> 00:21:24.156 A:middle
interrupt your session.

00:21:24.156 --> 00:21:25.846 A:middle
Stop it. Tell you that you're

00:21:25.846 --> 00:21:27.636 A:middle
interrupted because of a system

00:21:27.636 --> 00:21:28.286 A:middle
pressure state.

00:21:28.706 --> 00:21:30.346 A:middle
And then we wait for the device

00:21:30.346 --> 00:21:31.296 A:middle
to go all the way back to

00:21:31.296 --> 00:21:32.796 A:middle
Nominal before we'll let you run

00:21:32.796 --> 00:21:33.546 A:middle
the camera again.

00:21:34.956 --> 00:21:37.376 A:middle
That was all iOS 11.

00:21:37.866 --> 00:21:40.276 A:middle
Now, in iOS 13, we're offering

00:21:40.276 --> 00:21:41.636 A:middle
you a way to account for the

00:21:41.636 --> 00:21:43.566 A:middle
system pressure cost up front,

00:21:43.966 --> 00:21:44.316 A:middle
okay?

00:21:44.846 --> 00:21:46.116 A:middle
Instead of just telling you

00:21:46.116 --> 00:21:47.276 A:middle
what's happening right now,

00:21:47.796 --> 00:21:49.066 A:middle
which may be influenced by the

00:21:49.066 --> 00:21:50.586 A:middle
fact that you played Clash of

00:21:50.616 --> 00:21:52.476 A:middle
Clans before you started the

00:21:53.296 --> 00:21:54.446 A:middle
camera, we now have a way to

00:21:54.446 --> 00:21:56.426 A:middle
tell you what the camera cost as

00:21:56.426 --> 00:21:57.616 A:middle
far as system pressure is,

00:21:57.946 --> 00:21:58.996 A:middle
independent of all other

00:21:58.996 --> 00:21:59.586 A:middle
factors.

00:22:00.156 --> 00:22:02.286 A:middle
So the contributors to this cost

00:22:02.286 --> 00:22:03.516 A:middle
are the same as the ones for

00:22:03.516 --> 00:22:05.096 A:middle
hardware, along with a lot of

00:22:05.096 --> 00:22:05.686 A:middle
other ones.

00:22:06.086 --> 00:22:07.816 A:middle
Such as video image

00:22:07.816 --> 00:22:10.256 A:middle
stabilization, or optical image

00:22:10.256 --> 00:22:10.966 A:middle
stabilization.

00:22:10.966 --> 00:22:12.556 A:middle
All of those cost power.

00:22:12.956 --> 00:22:14.446 A:middle
We have a Smart HDR feature,

00:22:14.446 --> 00:22:16.516 A:middle
etc. All of those things listed

00:22:16.516 --> 00:22:18.246 A:middle
here are contributors to overall

00:22:18.246 --> 00:22:18.976 A:middle
system pressure cost.

00:22:21.236 --> 00:22:23.196 A:middle
MultiCamSession can tally that

00:22:23.196 --> 00:22:24.466 A:middle
score up front, just like it

00:22:24.466 --> 00:22:27.136 A:middle
does for hardware, and it will

00:22:27.136 --> 00:22:28.296 A:middle
only account for the factors

00:22:28.296 --> 00:22:29.266 A:middle
that it knows about.

00:22:29.536 --> 00:22:30.786 A:middle
So if you're going to be doing

00:22:30.786 --> 00:22:32.476 A:middle
some wild GPU processing at the

00:22:32.476 --> 00:22:34.256 A:middle
same time, the score won't

00:22:34.256 --> 00:22:34.956 A:middle
include that.

00:22:35.016 --> 00:22:36.296 A:middle
It will just include what you're

00:22:36.296 --> 00:22:39.256 A:middle
doing with the camera.

00:22:39.256 --> 00:22:40.076 A:middle
Here's how you use it.

00:22:41.356 --> 00:22:42.256 A:middle
By querying the

00:22:42.256 --> 00:22:44.416 A:middle
systemPressureCost, you can find

00:22:44.416 --> 00:22:46.206 A:middle
out how long you would be

00:22:46.416 --> 00:22:48.456 A:middle
runnable in an otherwise

00:22:48.646 --> 00:22:49.656 A:middle
quiescent system.

00:22:50.106 --> 00:22:52.216 A:middle
So if it's less than 1.0, you

00:22:52.216 --> 00:22:53.306 A:middle
can run indefinitely.

00:22:53.446 --> 00:22:54.286 A:middle
You're a cool customer.

00:22:55.086 --> 00:22:56.846 A:middle
If it's between 1.0 and 2.0, you

00:22:56.846 --> 00:22:58.296 A:middle
should be runnable for up to 15

00:22:58.296 --> 00:22:58.756 A:middle
minutes.

00:22:58.756 --> 00:23:01.186 A:middle
2.0 to 3.0, up to 10 minutes.

00:22:58.756 --> 00:23:01.186 A:middle
2.0 to 3.0, up to 10 minutes.

00:23:01.746 --> 00:23:03.696 A:middle
And higher than 3.0, you may be

00:23:03.696 --> 00:23:05.026 A:middle
able to run for a short little

00:23:05.026 --> 00:23:05.316 A:middle
bit.

00:23:05.316 --> 00:23:07.436 A:middle
And, in fact, we will let you

00:23:07.436 --> 00:23:08.786 A:middle
run the camera, even if you're

00:23:08.786 --> 00:23:09.456 A:middle
over 3.

00:23:09.926 --> 00:23:10.946 A:middle
But you have to understand that

00:23:10.946 --> 00:23:12.706 A:middle
it's not going to stay cool very

00:23:12.706 --> 00:23:13.006 A:middle
long.

00:23:13.086 --> 00:23:14.466 A:middle
And once it gets up to a

00:23:14.466 --> 00:23:16.266 A:middle
Critical or Shutdown level, your

00:23:16.266 --> 00:23:17.726 A:middle
session will become interrupted.

00:23:17.996 --> 00:23:19.446 A:middle
So we'll save the hardware, even

00:23:19.446 --> 00:23:20.106 A:middle
if you don't want to.

00:23:20.106 --> 00:23:21.176 A:middle
But hey, it's great.

00:23:21.176 --> 00:23:22.916 A:middle
If you can get what you need to

00:23:23.346 --> 00:23:25.016 A:middle
get done in 30 seconds of

00:23:25.016 --> 00:23:26.346 A:middle
running at a very, very high

00:23:26.576 --> 00:23:28.096 A:middle
system pressure cost, by all

00:23:28.096 --> 00:23:29.486 A:middle
means, do that.

00:23:31.076 --> 00:23:32.276 A:middle
Now how do you reduce your

00:23:32.276 --> 00:23:33.836 A:middle
system pressure while running?

00:23:34.006 --> 00:23:35.166 A:middle
I'm not talking about while

00:23:35.166 --> 00:23:36.196 A:middle
you're configuring your session.

00:23:36.196 --> 00:23:37.676 A:middle
I'm talking about once you're

00:23:37.986 --> 00:23:39.666 A:middle
already running and you notice

00:23:39.666 --> 00:23:40.876 A:middle
that you're starting to elevate

00:23:40.876 --> 00:23:41.756 A:middle
in system pressure.

00:23:41.986 --> 00:23:43.176 A:middle
The quickest and easiest way to

00:23:43.176 --> 00:23:44.236 A:middle
do it is to lower the frame

00:23:44.236 --> 00:23:44.436 A:middle
rate.

00:23:44.866 --> 00:23:45.506 A:middle
Immediately.

00:23:45.656 --> 00:23:47.076 A:middle
That will relieve system

00:23:47.076 --> 00:23:47.466 A:middle
pressure.

00:23:47.966 --> 00:23:49.066 A:middle
Also, if you're doing things

00:23:49.066 --> 00:23:50.326 A:middle
that we don't know about, such

00:23:50.326 --> 00:23:52.706 A:middle
as heavy GPU or CPU work, you

00:23:52.706 --> 00:23:53.696 A:middle
can throttle that back.

00:23:54.326 --> 00:23:57.946 A:middle
As a last resort, you might try

00:23:58.186 --> 00:23:59.266 A:middle
disabling one or more of the

00:23:59.266 --> 00:24:00.326 A:middle
cameras that you're using.

00:23:59.266 --> 00:24:00.326 A:middle
cameras that you're using.

00:24:00.646 --> 00:24:03.496 A:middle
AVMultiCamSession has a neat

00:24:03.886 --> 00:24:06.156 A:middle
little feature that, while

00:24:06.156 --> 00:24:08.196 A:middle
running, you can disable one of

00:24:08.196 --> 00:24:09.686 A:middle
the cameras without affecting

00:24:09.686 --> 00:24:10.706 A:middle
preview on the other.

00:24:10.786 --> 00:24:12.166 A:middle
We don't shut everything down.

00:24:12.556 --> 00:24:13.456 A:middle
So if for instance, you're

00:24:13.456 --> 00:24:14.236 A:middle
running with the front and the

00:24:14.236 --> 00:24:14.536 A:middle
back.

00:24:14.626 --> 00:24:15.836 A:middle
You notice that you're way over

00:24:15.836 --> 00:24:17.386 A:middle
budget, and you're soon going to

00:24:17.386 --> 00:24:19.426 A:middle
go critical, you could choose to

00:24:19.426 --> 00:24:20.646 A:middle
shut down the front camera.

00:24:20.806 --> 00:24:21.846 A:middle
The back camera will keep

00:24:21.846 --> 00:24:22.306 A:middle
previewing.

00:24:22.306 --> 00:24:23.356 A:middle
It won't lose its focus,

00:24:23.356 --> 00:24:24.646 A:middle
exposure, or white balance.

00:24:25.186 --> 00:24:27.536 A:middle
And when you shut down the last

00:24:27.646 --> 00:24:30.756 A:middle
active input port on the camera

00:24:30.756 --> 00:24:32.186 A:middle
that you want to disable by

00:24:32.186 --> 00:24:34.496 A:middle
setting its input ports enabled

00:24:34.496 --> 00:24:36.876 A:middle
property to false, we will stop

00:24:36.876 --> 00:24:38.336 A:middle
that camera streaming and save a

00:24:38.336 --> 00:24:39.806 A:middle
ton of power and give that

00:24:39.806 --> 00:24:41.626 A:middle
system a chance to cool off.

00:24:42.956 --> 00:24:43.546 A:middle
All right.

00:24:43.546 --> 00:24:45.456 A:middle
So I just talked about two very

00:24:45.456 --> 00:24:46.736 A:middle
important costs, hardware and

00:24:46.736 --> 00:24:47.616 A:middle
system pressure.

00:24:48.376 --> 00:24:49.706 A:middle
There are other costs that we

00:24:49.706 --> 00:24:50.516 A:middle
are not reporting.

00:24:50.516 --> 00:24:52.196 A:middle
I didn't want to trick you into

00:24:52.196 --> 00:24:52.986 A:middle
believing that there aren't

00:24:52.986 --> 00:24:54.306 A:middle
other things at work here.

00:24:54.346 --> 00:24:55.256 A:middle
There are, of course, other

00:24:55.256 --> 00:24:56.826 A:middle
costs, such as memory.

00:24:57.306 --> 00:24:58.906 A:middle
But in iOS 13, we are

00:24:58.906 --> 00:25:00.966 A:middle
artificially limiting the device

00:24:58.906 --> 00:25:00.966 A:middle
artificially limiting the device

00:25:00.966 --> 00:25:02.596 A:middle
combinations that we will allow

00:25:02.596 --> 00:25:04.856 A:middle
you to run, the ones that we are

00:25:04.856 --> 00:25:06.496 A:middle
confident will run, and that

00:25:06.496 --> 00:25:07.756 A:middle
will not get you into trouble.

00:25:09.136 --> 00:25:11.326 A:middle
So we have a limited number of

00:25:11.326 --> 00:25:13.056 A:middle
supported device combinations.

00:25:13.366 --> 00:25:14.386 A:middle
Here, I'm listing the ones that

00:25:14.386 --> 00:25:16.346 A:middle
are supported on iPhone XS.

00:25:16.776 --> 00:25:17.846 A:middle
This is kind of an eye chart.

00:25:17.846 --> 00:25:18.976 A:middle
I don't expect you to remember

00:25:18.976 --> 00:25:19.156 A:middle
this.

00:25:19.156 --> 00:25:20.336 A:middle
You can pause the video later.

00:25:20.666 --> 00:25:21.796 A:middle
But there are six supported

00:25:21.796 --> 00:25:22.426 A:middle
configs.

00:25:22.426 --> 00:25:23.756 A:middle
And the simple rule to remember

00:25:23.756 --> 00:25:25.216 A:middle
is that you're allowed to run

00:25:25.216 --> 00:25:26.976 A:middle
two physical cameras at a time.

00:25:27.516 --> 00:25:28.466 A:middle
You might be questioning like,

00:25:28.706 --> 00:25:30.566 A:middle
"Brad, what about config number

00:25:30.566 --> 00:25:30.946 A:middle
one there?

00:25:30.946 --> 00:25:32.346 A:middle
There's only one checkbox."

00:25:32.766 --> 00:25:33.746 A:middle
That's because it's the Dual

00:25:33.746 --> 00:25:34.206 A:middle
Camera.

00:25:34.426 --> 00:25:35.566 A:middle
And the Dual Camera is a

00:25:35.566 --> 00:25:37.146 A:middle
software camera that's actually

00:25:37.146 --> 00:25:38.506 A:middle
comprised of the wide and the

00:25:38.506 --> 00:25:39.076 A:middle
telephoto.

00:25:39.076 --> 00:25:40.586 A:middle
So it is two physical cameras.

00:25:41.976 --> 00:25:43.306 A:middle
How do you find out if MultiCam

00:25:43.306 --> 00:25:43.936 A:middle
is supported?

00:25:44.276 --> 00:25:45.616 A:middle
Like I said, it's only supported

00:25:45.616 --> 00:25:46.526 A:middle
on newer hardware.

00:25:46.936 --> 00:25:48.466 A:middle
So you need to check if

00:25:48.466 --> 00:25:50.016 A:middle
MultiCamSession will let you run

00:25:50.016 --> 00:25:51.766 A:middle
multiple cameras or not on the

00:25:51.766 --> 00:25:52.646 A:middle
device that you have.

00:25:53.206 --> 00:25:54.366 A:middle
There's a class method called

00:25:54.366 --> 00:25:56.026 A:middle
isMultiCamSupported, which you

00:25:56.026 --> 00:25:58.086 A:middle
can right away decide yes or no.

00:25:58.226 --> 00:26:00.106 A:middle
And then further, when you want

00:25:58.226 --> 00:26:00.106 A:middle
And then further, when you want

00:26:00.106 --> 00:26:01.426 A:middle
to decide, "Am I allowed to run

00:26:01.426 --> 00:26:02.756 A:middle
this combination of devices

00:26:02.756 --> 00:26:03.256 A:middle
together?"

00:26:03.676 --> 00:26:04.406 A:middle
You can create an

00:26:04.406 --> 00:26:06.266 A:middle
AVCaptureDeviceDiscoverySession

00:26:06.596 --> 00:26:07.626 A:middle
with the devices that you're

00:26:07.626 --> 00:26:08.216 A:middle
interested in.

00:26:08.216 --> 00:26:09.506 A:middle
And then ask it for its new

00:26:09.506 --> 00:26:10.066 A:middle
property,

00:26:10.436 --> 00:26:12.676 A:middle
supportedMultiCamDeviceSets.

00:26:12.676 --> 00:26:14.456 A:middle
And this will produce an array

00:26:14.456 --> 00:26:16.706 A:middle
of unordered sets that tell you

00:26:16.706 --> 00:26:17.846 A:middle
which ones you're allowed to use

00:26:17.846 --> 00:26:18.186 A:middle
together.

00:26:19.236 --> 00:26:21.216 A:middle
Next up is a way that we are

00:26:21.216 --> 00:26:23.336 A:middle
artificially limiting the

00:26:23.496 --> 00:26:24.586 A:middle
formats that you're allowed to

00:26:24.586 --> 00:26:24.846 A:middle
run.

00:26:25.546 --> 00:26:27.416 A:middle
The supported formats, last I

00:26:27.536 --> 00:26:28.996 A:middle
checked on an iPhone XS, there

00:26:29.566 --> 00:26:31.386 A:middle
were more than 40 formats on the

00:26:31.386 --> 00:26:32.006 A:middle
back camera.

00:26:32.006 --> 00:26:33.216 A:middle
So there are tons to choose

00:26:33.216 --> 00:26:33.466 A:middle
from.

00:26:33.626 --> 00:26:35.016 A:middle
But we are limiting the actual

00:26:35.016 --> 00:26:36.276 A:middle
video formats allowed to run

00:26:36.276 --> 00:26:37.956 A:middle
with MultiCamSession because

00:26:37.956 --> 00:26:39.146 A:middle
these are the ones that we can

00:26:39.146 --> 00:26:41.226 A:middle
comfortably run simultaneously

00:26:41.526 --> 00:26:42.706 A:middle
on end devices.

00:26:43.196 --> 00:26:44.096 A:middle
So, again, this is a bit of an

00:26:44.096 --> 00:26:45.066 A:middle
eye chart, but I'm going to draw

00:26:45.066 --> 00:26:46.346 A:middle
your attention to groups.

00:26:46.966 --> 00:26:48.506 A:middle
First group is the binned

00:26:48.556 --> 00:26:49.136 A:middle
formats.

00:26:49.346 --> 00:26:50.386 A:middle
Remember low power?

00:26:50.386 --> 00:26:51.666 A:middle
Yay. These are our friends.

00:26:51.936 --> 00:26:53.036 A:middle
At the sensor, you're getting

00:26:53.386 --> 00:26:54.496 A:middle
that 2x2 binning.

00:26:54.496 --> 00:26:55.786 A:middle
So you're getting a very low

00:26:55.786 --> 00:26:56.196 A:middle
power.

00:26:57.016 --> 00:26:58.346 A:middle
All of these are available up to

00:26:58.346 --> 00:26:59.166 A:middle
60 fps.

00:26:59.296 --> 00:27:01.336 A:middle
You've got choices from 640x480

00:26:59.296 --> 00:27:01.336 A:middle
You've got choices from 640x480

00:27:01.336 --> 00:27:03.896 A:middle
all the way up to 1920x1440.

00:27:04.006 --> 00:27:07.886 A:middle
Next group is the 1920x1080 at

00:27:07.946 --> 00:27:08.296 A:middle
30.

00:27:08.296 --> 00:27:10.076 A:middle
This is an unbinned format.

00:27:10.416 --> 00:27:11.746 A:middle
And this is the same as the one

00:27:11.746 --> 00:27:12.806 A:middle
you would get if you chose the

00:27:12.806 --> 00:27:14.366 A:middle
high preset on a regular

00:27:14.536 --> 00:27:15.396 A:middle
traditional session.

00:27:15.996 --> 00:27:17.176 A:middle
This one is available for

00:27:17.176 --> 00:27:18.066 A:middle
MultiCam use.

00:27:18.406 --> 00:27:21.606 A:middle
The final one is 1920x1440

00:27:21.606 --> 00:27:22.766 A:middle
unbinned at 30 fps.

00:27:23.256 --> 00:27:24.616 A:middle
This is kind of a good stand-in

00:27:24.616 --> 00:27:25.666 A:middle
for the photo format.

00:27:26.206 --> 00:27:28.726 A:middle
We do not support 12 megapixel

00:27:28.726 --> 00:27:29.886 A:middle
on end cameras.

00:27:30.216 --> 00:27:31.706 A:middle
That would certainly do bad

00:27:31.756 --> 00:27:32.566 A:middle
things to the phone.

00:27:33.026 --> 00:27:34.316 A:middle
But we do allow you to do

00:27:34.316 --> 00:27:36.696 A:middle
1920x1440 at 30 fps.

00:27:36.756 --> 00:27:38.316 A:middle
And notice it still allows you

00:27:38.316 --> 00:27:40.056 A:middle
to do 12 megapixel high res

00:27:40.056 --> 00:27:40.556 A:middle
stills.

00:27:40.926 --> 00:27:43.416 A:middle
So this is a very good proxy for

00:27:43.886 --> 00:27:45.236 A:middle
when you want to do photography

00:27:45.436 --> 00:27:46.466 A:middle
with multiple cameras

00:27:46.466 --> 00:27:47.256 A:middle
simultaneously.

00:27:47.826 --> 00:27:51.026 A:middle
Now, how do you find out if a

00:27:51.026 --> 00:27:52.446 A:middle
format supports MultiCam?

00:27:52.636 --> 00:27:53.446 A:middle
You just ask it.

00:27:53.836 --> 00:27:54.826 A:middle
So while iterating through the

00:27:54.826 --> 00:27:55.336 A:middle
formats.

00:27:55.336 --> 00:27:57.196 A:middle
You can say isMultiCamSupported?

00:27:57.196 --> 00:27:58.636 A:middle
And if it is, you're allowed to

00:27:58.636 --> 00:27:59.036 A:middle
use it.

00:27:59.606 --> 00:28:01.326 A:middle
In this code here, I'm iterating

00:27:59.606 --> 00:28:01.326 A:middle
In this code here, I'm iterating

00:28:01.326 --> 00:28:02.736 A:middle
through the formats on a device

00:28:03.026 --> 00:28:04.916 A:middle
and picking the next lowest one

00:28:04.916 --> 00:28:06.996 A:middle
in resolution that supports

00:28:06.996 --> 00:28:08.656 A:middle
MultiCam, and then setting it as

00:28:08.656 --> 00:28:09.466 A:middle
my active format.

00:28:09.466 --> 00:28:12.666 A:middle
Last way that we're artificially

00:28:12.666 --> 00:28:15.256 A:middle
limiting is because we need to

00:28:15.256 --> 00:28:17.836 A:middle
report costs, and those costs

00:28:17.836 --> 00:28:18.826 A:middle
are reported by the

00:28:18.826 --> 00:28:20.676 A:middle
MultiCamSession, we're

00:28:20.676 --> 00:28:22.386 A:middle
specifically not supporting on

00:28:22.536 --> 00:28:24.966 A:middle
iOS multiple sessions with

00:28:24.966 --> 00:28:26.636 A:middle
multiple cameras in an app.

00:28:26.756 --> 00:28:28.036 A:middle
And we're also not supporting

00:28:28.246 --> 00:28:29.786 A:middle
multiple cameras in multiple

00:28:29.786 --> 00:28:31.186 A:middle
apps simultaneously.

00:28:31.476 --> 00:28:33.496 A:middle
Just be aware that the support

00:28:33.496 --> 00:28:34.946 A:middle
on iOS is still limited to one

00:28:34.946 --> 00:28:35.806 A:middle
session at a time.

00:28:36.136 --> 00:28:37.276 A:middle
But of course, you can do -- run

00:28:37.276 --> 00:28:40.296 A:middle
multiple cameras at a time.

00:28:40.296 --> 00:28:42.096 A:middle
Thus concludes the Dad Talk.

00:28:42.806 --> 00:28:42.986 A:middle
Okay?

00:28:43.066 --> 00:28:43.846 A:middle
Write good code.

00:28:44.506 --> 00:28:45.546 A:middle
Be home by 11:00.

00:28:45.826 --> 00:28:47.246 A:middle
If your plans change, call me.

00:28:47.626 --> 00:28:48.556 A:middle
All right.

00:28:48.946 --> 00:28:50.976 A:middle
All right, now back to the fun

00:28:50.976 --> 00:28:51.376 A:middle
stuff.

00:28:52.656 --> 00:28:53.606 A:middle
Synchronized Streaming.

00:28:54.126 --> 00:28:57.066 A:middle
I talked a little bit about

00:28:57.066 --> 00:28:58.156 A:middle
software cameras.

00:28:59.036 --> 00:29:00.386 A:middle
Dual Camera, for one, was

00:28:59.036 --> 00:29:00.386 A:middle
Dual Camera, for one, was

00:29:00.386 --> 00:29:02.156 A:middle
introduced on iPhone 7 Plus.

00:29:02.566 --> 00:29:03.616 A:middle
And it's now present on the

00:29:03.616 --> 00:29:05.626 A:middle
iPhone XS and XS Max as well.

00:29:05.626 --> 00:29:07.616 A:middle
And the TrueDepth camera is also

00:29:07.616 --> 00:29:08.846 A:middle
another kind of software camera

00:29:08.846 --> 00:29:10.546 A:middle
because it's comprised of an

00:29:10.546 --> 00:29:12.266 A:middle
infrared camera and an RGB

00:29:12.266 --> 00:29:15.086 A:middle
camera that is able to do depth

00:29:15.186 --> 00:29:16.516 A:middle
by taking the disparity between

00:29:16.516 --> 00:29:17.026 A:middle
those two.

00:29:18.296 --> 00:29:20.316 A:middle
Now, we've never given these

00:29:20.546 --> 00:29:22.326 A:middle
special types of cameras a name.

00:29:22.886 --> 00:29:23.896 A:middle
But we're doing that now.

00:29:24.016 --> 00:29:25.486 A:middle
In iOS 13, we're calling them

00:29:25.486 --> 00:29:26.556 A:middle
virtual cameras.

00:29:27.116 --> 00:29:29.566 A:middle
DualCam is one of them.

00:29:29.566 --> 00:29:31.016 A:middle
It presents one video stream at

00:29:31.016 --> 00:29:33.686 A:middle
a time and it switches between

00:29:33.686 --> 00:29:35.536 A:middle
them based on your field -- your

00:29:35.536 --> 00:29:36.226 A:middle
zoom factor.

00:29:36.406 --> 00:29:38.586 A:middle
So as you get closer to a 2X, it

00:29:38.586 --> 00:29:40.146 A:middle
switches over to the telephoto

00:29:40.146 --> 00:29:41.186 A:middle
camera instead of the wide

00:29:41.186 --> 00:29:41.576 A:middle
camera.

00:29:42.036 --> 00:29:43.626 A:middle
It also can do neat tricks with

00:29:43.976 --> 00:29:45.786 A:middle
depth because it has two images

00:29:45.816 --> 00:29:47.036 A:middle
that it can use to generate

00:29:47.036 --> 00:29:48.026 A:middle
disparity between them.

00:29:48.576 --> 00:29:49.296 A:middle
But still, from your

00:29:49.296 --> 00:29:50.266 A:middle
perspective, you've only been

00:29:50.266 --> 00:29:52.906 A:middle
able to get one stream at a

00:29:53.736 --> 00:29:53.846 A:middle
time.

00:29:54.046 --> 00:29:55.766 A:middle
Because we have a name now, they

00:29:55.766 --> 00:29:57.536 A:middle
are also a property in the API,

00:29:57.536 --> 00:29:58.406 A:middle
which you can query.

00:29:58.486 --> 00:29:59.516 A:middle
So as you're looking at your

00:29:59.516 --> 00:30:01.036 A:middle
camera devices, you can find out

00:29:59.516 --> 00:30:01.036 A:middle
camera devices, you can find out

00:30:01.426 --> 00:30:02.996 A:middle
programmatically is this one a

00:30:02.996 --> 00:30:03.846 A:middle
virtual device?

00:30:04.236 --> 00:30:05.856 A:middle
And if it is, you can ask it,

00:30:05.936 --> 00:30:07.066 A:middle
"Well, what are your physical

00:30:07.066 --> 00:30:07.666 A:middle
devices?"

00:30:08.146 --> 00:30:10.096 A:middle
And in the API, we call this its

00:30:10.256 --> 00:30:11.626 A:middle
constituentDevices.

00:30:13.556 --> 00:30:15.256 A:middle
Synchronized streaming is all

00:30:15.256 --> 00:30:17.216 A:middle
about taking those constituent

00:30:17.216 --> 00:30:20.096 A:middle
devices of a virtual device and

00:30:20.096 --> 00:30:21.996 A:middle
running them synchronized.

00:30:22.326 --> 00:30:23.436 A:middle
In other words, for the first

00:30:23.436 --> 00:30:24.916 A:middle
time, we're allowing you to

00:30:24.916 --> 00:30:26.856 A:middle
stream synchronized video from

00:30:26.856 --> 00:30:28.326 A:middle
the wide and the tele at the

00:30:28.326 --> 00:30:30.456 A:middle
same time.

00:30:30.626 --> 00:30:31.506 A:middle
You continue to set the

00:30:31.506 --> 00:30:32.726 A:middle
properties on the virtual

00:30:32.726 --> 00:30:34.196 A:middle
device, not on the constituent

00:30:34.196 --> 00:30:34.796 A:middle
devices.

00:30:35.326 --> 00:30:38.136 A:middle
And there are some rules in

00:30:38.136 --> 00:30:38.626 A:middle
place.

00:30:39.426 --> 00:30:40.826 A:middle
When you run the virtual device,

00:30:41.186 --> 00:30:43.116 A:middle
the constituent devices aren't

00:30:43.116 --> 00:30:44.246 A:middle
allowed to run willy nilly.

00:30:45.116 --> 00:30:46.446 A:middle
They have the same active

00:30:46.446 --> 00:30:47.186 A:middle
resolution.

00:30:47.186 --> 00:30:48.486 A:middle
They have the same frame rate.

00:30:49.066 --> 00:30:50.836 A:middle
And at a hardware level, they

00:30:50.836 --> 00:30:51.866 A:middle
are synchronized.

00:30:52.196 --> 00:30:55.356 A:middle
That means that they are reading

00:30:55.356 --> 00:30:55.616 A:middle
out.

00:30:55.656 --> 00:30:57.226 A:middle
The sensor is reading out those

00:30:57.226 --> 00:30:58.376 A:middle
frames in a synchronized

00:30:58.376 --> 00:30:58.786 A:middle
fashion.

00:30:58.786 --> 00:31:01.056 A:middle
So that the middle of -- middle

00:30:58.786 --> 00:31:01.056 A:middle
So that the middle of -- middle

00:31:01.056 --> 00:31:03.376 A:middle
line of the readout is exactly

00:31:03.376 --> 00:31:04.756 A:middle
at the same clock time.

00:31:05.706 --> 00:31:07.216 A:middle
So, that means that they match

00:31:07.346 --> 00:31:08.306 A:middle
at the frame centers.

00:31:08.596 --> 00:31:10.496 A:middle
It also means that the exposure,

00:31:10.706 --> 00:31:12.536 A:middle
white balance, and focus happen

00:31:12.536 --> 00:31:14.046 A:middle
in tandem, which is really nice.

00:31:14.046 --> 00:31:15.346 A:middle
It makes it look like virtually

00:31:15.346 --> 00:31:16.446 A:middle
it is the same camera.

00:31:16.646 --> 00:31:17.696 A:middle
It just happens to be at two

00:31:17.696 --> 00:31:19.136 A:middle
different fields of view.

00:31:21.836 --> 00:31:23.986 A:middle
This is best shown rather than

00:31:23.986 --> 00:31:24.756 A:middle
talked about.

00:31:24.756 --> 00:31:25.786 A:middle
So, let's do a demo.

00:31:26.006 --> 00:31:27.986 A:middle
This one's called AVDualCam.

00:31:28.546 --> 00:31:29.826 A:middle
There we are.

00:31:31.276 --> 00:31:33.656 A:middle
Okay, AVDualCam lets you see

00:31:34.076 --> 00:31:36.306 A:middle
what a virtual camera sees by

00:31:36.306 --> 00:31:37.926 A:middle
showing you a display of the two

00:31:37.926 --> 00:31:39.446 A:middle
cameras running synchronized.

00:31:39.656 --> 00:31:42.106 A:middle
And it does this by showing you

00:31:42.106 --> 00:31:43.516 A:middle
several different views of those

00:31:43.516 --> 00:31:44.086 A:middle
cameras.

00:31:44.916 --> 00:31:47.346 A:middle
Okay, here I've got the wide and

00:31:47.346 --> 00:31:49.276 A:middle
the tele constituent streams of

00:31:49.276 --> 00:31:50.806 A:middle
the Dual Camera running

00:31:50.806 --> 00:31:51.496 A:middle
synchronized.

00:31:51.856 --> 00:31:53.136 A:middle
On the left is the wide.

00:31:53.476 --> 00:31:54.876 A:middle
And on the right is the tele.

00:31:55.656 --> 00:31:56.406 A:middle
Don't believe me?

00:31:56.406 --> 00:31:56.506 A:middle
Here.

00:31:57.076 --> 00:31:58.186 A:middle
I'm going to put my finger over

00:31:58.186 --> 00:31:58.686 A:middle
one side.

00:31:58.686 --> 00:32:01.076 A:middle
Ooh. I'm going to put my finger

00:31:58.686 --> 00:32:01.076 A:middle
Ooh. I'm going to put my finger

00:32:01.076 --> 00:32:01.596 A:middle
over the other side.

00:32:01.596 --> 00:32:02.976 A:middle
See? They're different cameras.

00:32:03.516 --> 00:32:05.606 A:middle
[ Applause ]

00:32:06.106 --> 00:32:07.736 A:middle
All I've done with the wide is

00:32:07.736 --> 00:32:08.966 A:middle
zoom it so it's at the same

00:32:08.966 --> 00:32:09.956 A:middle
field of view as the tele.

00:32:10.636 --> 00:32:12.516 A:middle
But you can notice that they're

00:32:12.516 --> 00:32:13.986 A:middle
running perfectly synchronized.

00:32:13.986 --> 00:32:15.506 A:middle
There's no tearing.

00:32:15.506 --> 00:32:16.676 A:middle
There's no weirdness in the

00:32:16.676 --> 00:32:17.526 A:middle
vertical blanking.

00:32:18.146 --> 00:32:20.196 A:middle
Their exposures and focuses

00:32:20.196 --> 00:32:21.376 A:middle
change at the same time.

00:32:22.556 --> 00:32:23.396 A:middle
Now we can have a little bit

00:32:23.396 --> 00:32:24.506 A:middle
more fun if we change from the

00:32:24.506 --> 00:32:27.466 A:middle
side-by-side view to the split

00:32:27.466 --> 00:32:27.706 A:middle
view.

00:32:28.246 --> 00:32:29.416 A:middle
Now, this is a little bit hard

00:32:29.416 --> 00:32:29.916 A:middle
to see.

00:32:30.306 --> 00:32:33.136 A:middle
But I'm showing the tele-- the

00:32:33.136 --> 00:32:35.166 A:middle
wide on the left and the tele on

00:32:35.166 --> 00:32:35.496 A:middle
the right.

00:32:35.676 --> 00:32:36.866 A:middle
So I'm only showing you half of

00:32:36.866 --> 00:32:37.376 A:middle
each frame.

00:32:38.506 --> 00:32:40.676 A:middle
Now if I triple tap, I bring up

00:32:40.756 --> 00:32:43.566 A:middle
Distance-o-meter, which lets me

00:32:43.566 --> 00:32:45.846 A:middle
change the plane of depth

00:32:45.936 --> 00:32:47.616 A:middle
convergence for the two images.

00:32:48.246 --> 00:32:50.426 A:middle
This app knows how to register

00:32:50.426 --> 00:32:51.936 A:middle
the two images relative to one

00:32:51.936 --> 00:32:52.336 A:middle
another.

00:32:52.596 --> 00:32:54.456 A:middle
So, it lets me play with the

00:32:54.516 --> 00:32:55.736 A:middle
plane at which the depth

00:32:55.736 --> 00:32:56.256 A:middle
converges.

00:32:56.256 --> 00:32:57.416 A:middle
Kind of like with your eyes.

00:32:57.976 --> 00:32:59.296 A:middle
When you focus on something up

00:32:59.336 --> 00:33:01.186 A:middle
close or far away, you're kind

00:32:59.336 --> 00:33:01.186 A:middle
close or far away, you're kind

00:33:01.186 --> 00:33:02.436 A:middle
of changing that depth plane of

00:33:02.486 --> 00:33:03.126 A:middle
convergence.

00:33:03.516 --> 00:33:05.126 A:middle
So for instance, up close with

00:33:05.126 --> 00:33:07.706 A:middle
my hand, I can find the place

00:33:07.706 --> 00:33:09.886 A:middle
where the depth converges

00:33:09.886 --> 00:33:10.476 A:middle
nicely.

00:33:10.676 --> 00:33:11.156 A:middle
There we go.

00:33:11.156 --> 00:33:12.686 A:middle
Now I've got one hand.

00:33:13.256 --> 00:33:14.986 A:middle
But that's not right for the car

00:33:14.986 --> 00:33:15.526 A:middle
behind me.

00:33:15.526 --> 00:33:17.586 A:middle
So I can keep going further --

00:33:17.756 --> 00:33:18.726 A:middle
be further away.

00:33:20.056 --> 00:33:20.556 A:middle
There we go.

00:33:20.556 --> 00:33:21.976 A:middle
And that's not right for the car

00:33:21.976 --> 00:33:22.766 A:middle
behind it.

00:33:23.536 --> 00:33:25.916 A:middle
So now I can pull that guy back

00:33:25.916 --> 00:33:26.116 A:middle
too.

00:33:26.196 --> 00:33:28.696 A:middle
And that's Dual Camera

00:33:28.696 --> 00:33:30.076 A:middle
streaming-- Synchronized from

00:33:30.076 --> 00:33:30.876 A:middle
the Dual Cameras.

00:33:31.516 --> 00:33:36.500 A:middle
[ Applause ]

00:33:39.256 --> 00:33:40.536 A:middle
Here's a diagram showing

00:33:40.706 --> 00:33:42.166 A:middle
AVDualCam's graph.

00:33:43.296 --> 00:33:44.936 A:middle
Instead of using separate device

00:33:44.936 --> 00:33:46.216 A:middle
inputs, it just has one.

00:33:46.786 --> 00:33:47.856 A:middle
So it's using a single device

00:33:47.856 --> 00:33:49.036 A:middle
input for the Dual Camera.

00:33:49.366 --> 00:33:51.076 A:middle
But it's sourcing wide and tele

00:33:51.076 --> 00:33:53.456 A:middle
frames in a synchronized fashion

00:33:53.906 --> 00:33:55.426 A:middle
to two VideoDataOutputs.

00:33:56.286 --> 00:33:57.346 A:middle
You'll notice that there is a

00:33:57.526 --> 00:33:59.426 A:middle
little object, a little pill at

00:33:59.426 --> 00:34:00.166 A:middle
the bottom called the

00:33:59.426 --> 00:34:00.166 A:middle
the bottom called the

00:34:00.166 --> 00:34:02.046 A:middle
AVCaptureDataOutputSynchronizer.

00:34:02.286 --> 00:34:03.266 A:middle
I don't want to confuse you.

00:34:03.626 --> 00:34:04.816 A:middle
That thing is not doing the

00:34:04.816 --> 00:34:06.036 A:middle
hardware synchronization that I

00:34:06.036 --> 00:34:06.586 A:middle
talked about.

00:34:06.876 --> 00:34:08.795 A:middle
It's just an object that sits at

00:34:08.835 --> 00:34:10.466 A:middle
the bottom of a session if you

00:34:10.466 --> 00:34:12.426 A:middle
desire, which lets you get

00:34:12.656 --> 00:34:14.335 A:middle
multiple callbacks for the same

00:34:14.396 --> 00:34:16.266 A:middle
time in a single callback.

00:34:16.266 --> 00:34:17.666 A:middle
So, instead of getting a

00:34:17.666 --> 00:34:18.835 A:middle
separate VideoDataOutput

00:34:18.835 --> 00:34:19.846 A:middle
callback for the wide and the

00:34:19.846 --> 00:34:21.176 A:middle
tele you can slap a

00:34:21.176 --> 00:34:22.646 A:middle
DataOutputSynchronizer at the

00:34:22.646 --> 00:34:24.216 A:middle
bottom and get both frames for

00:34:24.216 --> 00:34:25.786 A:middle
the same time through a single

00:34:25.786 --> 00:34:26.295 A:middle
callback.

00:34:26.295 --> 00:34:27.746 A:middle
So it's very handy that way.

00:34:28.366 --> 00:34:30.545 A:middle
Now below it, there's a Metal

00:34:30.545 --> 00:34:31.976 A:middle
Shader Filter / Compositor

00:34:31.976 --> 00:34:33.025 A:middle
that's doing some magic.

00:34:33.576 --> 00:34:34.916 A:middle
Like I said, it's knowing how to

00:34:34.916 --> 00:34:36.196 A:middle
blend those frames together.

00:34:36.416 --> 00:34:38.005 A:middle
And it decides where to render

00:34:38.005 --> 00:34:39.126 A:middle
those frames to the correct

00:34:39.126 --> 00:34:40.286 A:middle
places in the preview.

00:34:40.466 --> 00:34:42.436 A:middle
And it also can send them off to

00:34:42.436 --> 00:34:44.016 A:middle
an AVAssetWriter to record into

00:34:44.016 --> 00:34:45.166 A:middle
a video track.

00:34:46.206 --> 00:34:48.335 A:middle
Now recall my earlier diagram.

00:34:50.286 --> 00:34:51.686 A:middle
I showed you a close-up view of

00:34:51.716 --> 00:34:53.166 A:middle
the AVCaptureDeviceInput,

00:34:53.426 --> 00:34:54.735 A:middle
specifically the Dual Camera

00:34:54.735 --> 00:34:55.016 A:middle
one.

00:34:55.815 --> 00:34:57.045 A:middle
The ports property of the Dual

00:34:57.045 --> 00:34:59.936 A:middle
Camera input exposes which ports

00:34:59.936 --> 00:35:00.466 A:middle
you see there.

00:34:59.936 --> 00:35:00.466 A:middle
you see there.

00:35:01.526 --> 00:35:03.016 A:middle
Anybody see two video ports

00:35:03.016 --> 00:35:03.236 A:middle
there?

00:35:03.316 --> 00:35:06.116 A:middle
I don't see two video ports.

00:35:06.146 --> 00:35:07.636 A:middle
So how do we get both wide and

00:35:07.636 --> 00:35:10.446 A:middle
tele out of those input ports

00:35:10.446 --> 00:35:11.226 A:middle
that we see here?

00:35:11.526 --> 00:35:13.166 A:middle
Is that one video port somehow

00:35:13.166 --> 00:35:13.916 A:middle
giving us two?

00:35:14.396 --> 00:35:14.726 A:middle
No.

00:35:14.726 --> 00:35:16.336 A:middle
It's not giving us wide or tele.

00:35:16.446 --> 00:35:18.236 A:middle
It's giving us whatever the Dual

00:35:18.236 --> 00:35:19.946 A:middle
Camera decides is right for the

00:35:19.946 --> 00:35:22.056 A:middle
given zoom factor.

00:35:22.056 --> 00:35:24.626 A:middle
That's not going to help us get

00:35:24.626 --> 00:35:25.916 A:middle
both constituent streams at the

00:35:25.916 --> 00:35:26.506 A:middle
same time.

00:35:26.506 --> 00:35:27.946 A:middle
So how do we do that?

00:35:28.676 --> 00:35:29.806 A:middle
Well, I'll tell you.

00:35:30.396 --> 00:35:31.096 A:middle
But it's a secret.

00:35:31.096 --> 00:35:32.226 A:middle
So you have to promise not to

00:35:32.226 --> 00:35:32.786 A:middle
tell anybody.

00:35:33.536 --> 00:35:33.716 A:middle
Okay?

00:35:34.516 --> 00:35:36.896 A:middle
Virtual devices have secret

00:35:36.966 --> 00:35:37.636 A:middle
ports.

00:35:38.086 --> 00:35:38.286 A:middle
Okay?

00:35:39.576 --> 00:35:42.606 A:middle
These secret ports, previously

00:35:42.636 --> 00:35:44.126 A:middle
unbeknownst to you, are now

00:35:44.126 --> 00:35:44.616 A:middle
available.

00:35:44.616 --> 00:35:45.546 A:middle
But you don't get them out of

00:35:45.546 --> 00:35:46.716 A:middle
the ports array.

00:35:47.126 --> 00:35:49.776 A:middle
You get them by knowing what to

00:35:49.776 --> 00:35:50.416 A:middle
ask for.

00:35:51.106 --> 00:35:53.086 A:middle
So, instead of just getting an

00:35:53.086 --> 00:35:54.836 A:middle
array of every conceivable type

00:35:54.836 --> 00:35:56.396 A:middle
of port including ports that are

00:35:56.396 --> 00:35:58.126 A:middle
not allowed to be used with

00:35:58.126 --> 00:36:00.376 A:middle
Single cam session, you can ask

00:35:58.126 --> 00:36:00.376 A:middle
Single cam session, you can ask

00:36:00.376 --> 00:36:01.286 A:middle
for them by name.

00:36:01.786 --> 00:36:02.606 A:middle
So here we have the

00:36:02.606 --> 00:36:03.566 A:middle
dualCameraInput.

00:36:03.626 --> 00:36:05.986 A:middle
And I'm asking for its ports

00:36:05.986 --> 00:36:07.516 A:middle
with source device type

00:36:07.796 --> 00:36:09.746 A:middle
wide-angle camera and source

00:36:09.746 --> 00:36:11.536 A:middle
device type telephoto camera.

00:36:12.226 --> 00:36:12.876 A:middle
It goes, aha.

00:36:13.066 --> 00:36:14.086 A:middle
Those are the secret ports that

00:36:14.086 --> 00:36:14.546 A:middle
I know about.

00:36:14.546 --> 00:36:15.296 A:middle
I'll give them to you now.

00:36:15.706 --> 00:36:16.966 A:middle
Once you've got those input

00:36:16.966 --> 00:36:17.456 A:middle
ports.

00:36:17.856 --> 00:36:18.836 A:middle
You can hook them up to a

00:36:18.836 --> 00:36:20.426 A:middle
connection the same way that you

00:36:20.426 --> 00:36:22.406 A:middle
would when doing your own manual

00:36:22.476 --> 00:36:23.386 A:middle
connection creation.

00:36:24.006 --> 00:36:25.576 A:middle
Then you're streaming from

00:36:25.576 --> 00:36:27.266 A:middle
either the wide or the tele or

00:36:27.266 --> 00:36:27.526 A:middle
both.

00:36:29.106 --> 00:36:30.966 A:middle
Now in the AVDualCam demo, I was

00:36:30.966 --> 00:36:32.146 A:middle
able to change the depth

00:36:32.196 --> 00:36:34.526 A:middle
convergence plane of the wide

00:36:34.526 --> 00:36:36.106 A:middle
and tele cameras with the

00:36:36.106 --> 00:36:37.056 A:middle
correct perspective.

00:36:37.056 --> 00:36:38.956 A:middle
And you saw that it wasn't kind

00:36:38.956 --> 00:36:40.276 A:middle
of moving and shaking all over.

00:36:40.276 --> 00:36:41.556 A:middle
It was just moving along the

00:36:41.646 --> 00:36:42.786 A:middle
plane that I wanted it to.

00:36:42.786 --> 00:36:44.506 A:middle
It was just along the plane of

00:36:44.506 --> 00:36:45.116 A:middle
the baseline.

00:36:45.256 --> 00:36:46.686 A:middle
And I was able to do that

00:36:46.686 --> 00:36:48.336 A:middle
because AVFoundation offers us

00:36:48.926 --> 00:36:50.216 A:middle
some homography aids.

00:36:50.696 --> 00:36:51.616 A:middle
Homography is, if you're

00:36:51.616 --> 00:36:52.546 A:middle
unfamiliar with the term, it

00:36:52.546 --> 00:36:54.466 A:middle
just relates two images on the

00:36:54.466 --> 00:36:55.146 A:middle
same plane.

00:36:55.886 --> 00:36:57.166 A:middle
They are the basis for computer

00:36:57.166 --> 00:36:57.486 A:middle
vision.

00:36:57.806 --> 00:36:59.996 A:middle
They are common for such tasks

00:36:59.996 --> 00:37:02.276 A:middle
as image rectification, image

00:36:59.996 --> 00:37:02.276 A:middle
as image rectification, image

00:37:02.276 --> 00:37:02.946 A:middle
registration.

00:37:03.546 --> 00:37:05.906 A:middle
Now camera intrinsics are not

00:37:05.906 --> 00:37:06.876 A:middle
new to iOS.

00:37:06.876 --> 00:37:08.606 A:middle
We introduced those in iOS 11.

00:37:09.436 --> 00:37:10.886 A:middle
They're presented as a 3x3

00:37:10.886 --> 00:37:12.486 A:middle
matrix that describes the

00:37:12.486 --> 00:37:13.946 A:middle
geometric properties of a

00:37:14.046 --> 00:37:16.616 A:middle
camera, namely its focal length

00:37:16.986 --> 00:37:19.386 A:middle
and its optical center seen here

00:37:20.196 --> 00:37:22.706 A:middle
using the pinhole camera where

00:37:22.706 --> 00:37:24.156 A:middle
you can see where it enters

00:37:24.156 --> 00:37:25.736 A:middle
through the pinhole and hits the

00:37:25.736 --> 00:37:27.146 A:middle
sensor, and that being the

00:37:27.146 --> 00:37:28.736 A:middle
optical sensor, and the distance

00:37:28.736 --> 00:37:29.966 A:middle
between the two being the focal

00:37:29.966 --> 00:37:30.266 A:middle
length.

00:37:31.696 --> 00:37:33.206 A:middle
Now you can opt-in to receive

00:37:33.206 --> 00:37:35.296 A:middle
per-frame intrinsics by

00:37:35.856 --> 00:37:36.476 A:middle
messaging the

00:37:36.476 --> 00:37:38.156 A:middle
AVCaptureConnection and saying

00:37:38.396 --> 00:37:39.836 A:middle
you want to opt-in for intrinsic

00:37:39.866 --> 00:37:40.346 A:middle
delivery.

00:37:40.776 --> 00:37:42.296 A:middle
Once you've done that, then

00:37:42.356 --> 00:37:43.886 A:middle
every VideoDataOutput buffer

00:37:43.886 --> 00:37:45.536 A:middle
that you receive has this

00:37:45.536 --> 00:37:46.326 A:middle
attachment on it.

00:37:46.746 --> 00:37:48.546 A:middle
CameraIntrinsicMatrix, which

00:37:48.546 --> 00:37:50.686 A:middle
again is an NS data wrapping a

00:37:51.006 --> 00:37:53.626 A:middle
matrix float, 3x3, which is a

00:37:53.626 --> 00:37:54.286 A:middle
SIMDI type.

00:37:54.936 --> 00:37:56.006 A:middle
You'll get -- when you get the

00:37:56.006 --> 00:37:58.106 A:middle
wide frame, it has the matrix

00:37:58.106 --> 00:37:59.076 A:middle
for the wide camera.

00:37:59.386 --> 00:38:01.046 A:middle
When you get the tele frame, it

00:37:59.386 --> 00:38:01.046 A:middle
When you get the tele frame, it

00:38:01.046 --> 00:38:02.616 A:middle
has the matrix for the tele

00:38:04.636 --> 00:38:04.966 A:middle
camera.

00:38:04.966 --> 00:38:06.636 A:middle
Now new in iOS 13, we offer

00:38:06.636 --> 00:38:09.026 A:middle
camera extrinsics at the device

00:38:09.026 --> 00:38:09.306 A:middle
level.

00:38:09.776 --> 00:38:12.556 A:middle
Extrinsics are a rotation matrix

00:38:12.636 --> 00:38:14.146 A:middle
and a translation vector that

00:38:14.296 --> 00:38:17.576 A:middle
are kind of crammed into one

00:38:17.576 --> 00:38:18.426 A:middle
matrix together.

00:38:18.866 --> 00:38:20.156 A:middle
And those describe the camera's

00:38:20.186 --> 00:38:22.356 A:middle
pose compared to a reference

00:38:23.396 --> 00:38:23.656 A:middle
camera.

00:38:23.696 --> 00:38:24.686 A:middle
This helps you if you want to

00:38:24.686 --> 00:38:25.756 A:middle
kind of relate where the two

00:38:25.756 --> 00:38:28.516 A:middle
cameras are, both their tilt and

00:38:28.516 --> 00:38:29.446 A:middle
how far away they are.

00:38:29.886 --> 00:38:32.906 A:middle
So AVDualCam uses the extrinsics

00:38:33.226 --> 00:38:34.886 A:middle
to know how to align the wide

00:38:34.886 --> 00:38:36.986 A:middle
and the tele camera frames with

00:38:36.986 --> 00:38:38.116 A:middle
respect to one another so it's

00:38:38.116 --> 00:38:38.996 A:middle
able to do those neat

00:38:38.996 --> 00:38:40.006 A:middle
perspective shifts.

00:38:40.096 --> 00:38:43.486 A:middle
That was a very, very brief

00:38:43.486 --> 00:38:45.156 A:middle
refresher on intrinsics and

00:38:45.296 --> 00:38:46.126 A:middle
extrinsics.

00:38:46.426 --> 00:38:47.636 A:middle
So I described them in

00:38:47.896 --> 00:38:49.686 A:middle
absolutely excruciating detail

00:38:49.686 --> 00:38:51.856 A:middle
two years ago in session 507.

00:38:52.216 --> 00:38:53.406 A:middle
So I'd invite you to review that

00:38:53.406 --> 00:38:54.436 A:middle
session if you have a very

00:38:54.436 --> 00:38:55.936 A:middle
strong stomach for puns.

00:38:56.071 --> 00:38:58.071 A:middle
[ Chuckling ]

00:38:58.126 --> 00:39:00.706 A:middle
Okay, the last topic of MultiCam

00:38:58.126 --> 00:39:00.706 A:middle
Okay, the last topic of MultiCam

00:39:00.706 --> 00:39:03.366 A:middle
Capture is Multi-Mic Capture.

00:39:03.916 --> 00:39:05.276 A:middle
All right.

00:39:05.506 --> 00:39:06.666 A:middle
Let's review the default

00:39:06.666 --> 00:39:09.286 A:middle
Behaviors of a microphone

00:39:09.286 --> 00:39:10.946 A:middle
capture when using a traditional

00:39:10.946 --> 00:39:11.736 A:middle
AVCaptureSession.

00:39:13.696 --> 00:39:16.036 A:middle
The mic follows the camera.

00:39:16.456 --> 00:39:17.526 A:middle
That's as simple as I can put

00:39:17.526 --> 00:39:17.636 A:middle
it.

00:39:17.906 --> 00:39:19.696 A:middle
So if you have a front-facing

00:39:19.696 --> 00:39:21.236 A:middle
camera attached to your session

00:39:21.486 --> 00:39:24.456 A:middle
and a mic, it will automatically

00:39:24.496 --> 00:39:25.966 A:middle
choose the mic that's pointed

00:39:25.966 --> 00:39:27.086 A:middle
the same direction as the front

00:39:27.086 --> 00:39:27.516 A:middle
camera.

00:39:28.036 --> 00:39:28.846 A:middle
Same goes for the back.

00:39:29.066 --> 00:39:30.766 A:middle
And it will make a nice cardioid

00:39:30.766 --> 00:39:32.836 A:middle
pattern so that it rejects audio

00:39:32.836 --> 00:39:33.886 A:middle
out the side that you don't

00:39:33.886 --> 00:39:34.206 A:middle
want.

00:39:34.756 --> 00:39:35.936 A:middle
That way, you're able to follow

00:39:36.016 --> 00:39:37.256 A:middle
your subject, be it back or

00:39:37.256 --> 00:39:37.576 A:middle
front.

00:39:37.886 --> 00:39:39.196 A:middle
If you have an audio-only

00:39:39.196 --> 00:39:40.256 A:middle
session, we're not really sure

00:39:40.256 --> 00:39:41.466 A:middle
what direction to direct the

00:39:41.466 --> 00:39:41.836 A:middle
audio.

00:39:41.836 --> 00:39:42.656 A:middle
So, we just give you an

00:39:42.656 --> 00:39:43.896 A:middle
omnidirectional field.

00:39:44.036 --> 00:39:46.416 A:middle
And as a power feature, you can

00:39:46.416 --> 00:39:47.876 A:middle
disable all of that by saying,

00:39:48.186 --> 00:39:49.586 A:middle
"Hands off, AVCaptureSession.

00:39:49.646 --> 00:39:51.296 A:middle
I want to use my own AV audio

00:39:51.296 --> 00:39:53.136 A:middle
session and configure my audio

00:39:53.136 --> 00:39:53.716 A:middle
on my own."

00:39:53.926 --> 00:39:56.966 A:middle
And we'll honor that.

00:39:57.236 --> 00:39:58.526 A:middle
So now comes the time for

00:39:58.526 --> 00:39:59.776 A:middle
another dirty little secret.

00:40:02.636 --> 00:40:04.076 A:middle
There is no such thing as a

00:40:04.076 --> 00:40:04.406 A:middle
front mic.

00:40:04.406 --> 00:40:06.376 A:middle
I totally just lied to you.

00:40:07.386 --> 00:40:10.096 A:middle
In actuality, iPhones contain

00:40:10.096 --> 00:40:11.456 A:middle
arrays of microphones.

00:40:11.526 --> 00:40:12.756 A:middle
And there are different numbers

00:40:12.756 --> 00:40:13.916 A:middle
depending on the devices.

00:40:14.316 --> 00:40:15.386 A:middle
Recent iPhones happen to have

00:40:15.466 --> 00:40:16.016 A:middle
four.

00:40:16.016 --> 00:40:17.096 A:middle
iPads have five.

00:40:17.576 --> 00:40:18.416 A:middle
And they are positioned at

00:40:18.416 --> 00:40:20.056 A:middle
different strategic locations.

00:40:20.486 --> 00:40:21.876 A:middle
On recent iPhones, you happen to

00:40:21.876 --> 00:40:23.166 A:middle
have two that point straight out

00:40:23.166 --> 00:40:23.676 A:middle
the bottom.

00:40:23.956 --> 00:40:25.126 A:middle
And at the top, you have one

00:40:25.126 --> 00:40:26.226 A:middle
pointing out each side.

00:40:26.716 --> 00:40:28.116 A:middle
All of them are omnidirectional

00:40:28.116 --> 00:40:28.436 A:middle
mics.

00:40:28.976 --> 00:40:30.166 A:middle
Now, the top ones do get some

00:40:30.166 --> 00:40:31.586 A:middle
acoustic separation because

00:40:31.586 --> 00:40:33.056 A:middle
they've got the body of the

00:40:33.056 --> 00:40:34.266 A:middle
device in between them, which

00:40:34.266 --> 00:40:35.136 A:middle
acts as a baffle.

00:40:35.136 --> 00:40:37.096 A:middle
But it's still not giving a nice

00:40:37.096 --> 00:40:38.386 A:middle
directional pattern like you

00:40:38.416 --> 00:40:39.536 A:middle
would want.

00:40:39.536 --> 00:40:41.826 A:middle
So what do you do to actually

00:40:41.826 --> 00:40:43.316 A:middle
get something approximating a

00:40:43.316 --> 00:40:44.406 A:middle
front or back mic?

00:40:45.596 --> 00:40:46.506 A:middle
What you do, it's called

00:40:46.506 --> 00:40:48.066 A:middle
Microphone Beam Forming.

00:40:48.556 --> 00:40:50.536 A:middle
And this is a way of processing

00:40:50.536 --> 00:40:52.376 A:middle
the raw audio signals to get

00:40:52.376 --> 00:40:53.526 A:middle
them to be directional.

00:40:53.646 --> 00:40:54.866 A:middle
And this is something that Core

00:40:54.866 --> 00:40:56.126 A:middle
Audio does on our behalf.

00:40:56.756 --> 00:40:58.896 A:middle
Here, we've got two blue dots,

00:40:58.896 --> 00:41:00.326 A:middle
which represent two microphones

00:40:58.896 --> 00:41:00.326 A:middle
which represent two microphones

00:41:00.326 --> 00:41:02.256 A:middle
on either side of an iPhone.

00:41:02.586 --> 00:41:04.606 A:middle
And the circles are roughly the

00:41:04.606 --> 00:41:05.796 A:middle
pattern of audio that they are

00:41:05.796 --> 00:41:06.166 A:middle
hearing.

00:41:06.166 --> 00:41:07.416 A:middle
Remember, they're both

00:41:07.416 --> 00:41:08.506 A:middle
omnidirectional mics.

00:41:08.746 --> 00:41:10.176 A:middle
If we take those two signals,

00:41:10.176 --> 00:41:11.336 A:middle
and we just simply subtract

00:41:11.336 --> 00:41:11.596 A:middle
them.

00:41:11.876 --> 00:41:13.096 A:middle
We wind up with a figure eight

00:41:13.096 --> 00:41:14.496 A:middle
pattern, which is cool.

00:41:14.496 --> 00:41:15.756 A:middle
It's not what we want, but it's

00:41:15.756 --> 00:41:16.116 A:middle
cool.

00:41:17.246 --> 00:41:18.456 A:middle
If we want to further shape

00:41:18.456 --> 00:41:20.756 A:middle
that, we can add some gain to

00:41:20.756 --> 00:41:22.296 A:middle
the one that we want to keep

00:41:22.296 --> 00:41:23.366 A:middle
before subtracting them.

00:41:23.516 --> 00:41:24.726 A:middle
And now we wind up with a little

00:41:24.726 --> 00:41:25.686 A:middle
Pac-Man ghost.

00:41:26.016 --> 00:41:26.696 A:middle
And that's good.

00:41:26.696 --> 00:41:27.826 A:middle
Now we've got rejection out the

00:41:27.826 --> 00:41:28.806 A:middle
side that we don't want.

00:41:29.226 --> 00:41:30.626 A:middle
But unfortunately, we've also

00:41:30.626 --> 00:41:31.666 A:middle
attenuated the signal.

00:41:31.666 --> 00:41:33.286 A:middle
So it's much quieter than we

00:41:33.286 --> 00:41:33.596 A:middle
want.

00:41:34.876 --> 00:41:37.926 A:middle
But, if after doing all that, we

00:41:37.926 --> 00:41:39.526 A:middle
apply some gain to that signal,

00:41:39.776 --> 00:41:41.026 A:middle
we get a nice, big Pac-Man

00:41:41.026 --> 00:41:41.406 A:middle
ghost.

00:41:41.516 --> 00:41:42.636 A:middle
And now we've got that beautiful

00:41:42.636 --> 00:41:44.006 A:middle
cardioid pattern that we want,

00:41:44.246 --> 00:41:46.796 A:middle
which rejects out of the side of

00:41:46.796 --> 00:41:47.796 A:middle
the camera that we don't want.

00:41:48.556 --> 00:41:50.526 A:middle
Now, this is extremely over

00:41:50.526 --> 00:41:51.116 A:middle
simplified.

00:41:51.396 --> 00:41:52.516 A:middle
There's a lot of filtering going

00:41:52.516 --> 00:41:53.826 A:middle
on to ensure that white noise

00:41:53.826 --> 00:41:54.586 A:middle
isn't gained up.

00:41:55.126 --> 00:41:56.366 A:middle
But essentially that is what is

00:41:56.366 --> 00:41:56.766 A:middle
happening.

00:41:57.196 --> 00:41:58.676 A:middle
And, up to now, only one

00:41:58.676 --> 00:42:00.006 A:middle
microphone beam form has been

00:41:58.676 --> 00:42:00.006 A:middle
microphone beam form has been

00:42:00.006 --> 00:42:00.986 A:middle
supported at a time.

00:42:01.376 --> 00:42:02.946 A:middle
But the good folks over in Core

00:42:02.946 --> 00:42:04.396 A:middle
Audio land did some great work

00:42:04.396 --> 00:42:06.006 A:middle
for this MultiCam feature.

00:42:06.366 --> 00:42:09.496 A:middle
And as of iOS 13, we now support

00:42:09.736 --> 00:42:11.636 A:middle
multiple simultaneous beam

00:42:11.636 --> 00:42:11.996 A:middle
forming.

00:42:13.516 --> 00:42:17.116 A:middle
[ Applause ]

00:42:17.616 --> 00:42:18.966 A:middle
So going back to the

00:42:18.966 --> 00:42:21.466 A:middle
AVCaptureSession, when you get a

00:42:21.466 --> 00:42:22.976 A:middle
microphone device input, and you

00:42:22.976 --> 00:42:25.886 A:middle
find its audio port, that port

00:42:26.656 --> 00:42:28.006 A:middle
lives many lives.

00:42:28.006 --> 00:42:29.496 A:middle
It can be the front, back, or

00:42:29.496 --> 00:42:30.976 A:middle
omni depending on what cameras

00:42:30.976 --> 00:42:31.926 A:middle
the session finds.

00:42:32.726 --> 00:42:33.446 A:middle
But when you're using the

00:42:33.446 --> 00:42:36.516 A:middle
MultiCamSession, the behavior is

00:42:36.946 --> 00:42:37.406 A:middle
rigid.

00:42:38.166 --> 00:42:39.506 A:middle
The first port, the one -- the

00:42:39.506 --> 00:42:40.706 A:middle
first audio port you find is

00:42:40.706 --> 00:42:41.776 A:middle
always for omni.

00:42:42.336 --> 00:42:43.946 A:middle
And then you can find those

00:42:43.996 --> 00:42:45.266 A:middle
secret ports that I was talking

00:42:45.266 --> 00:42:47.376 A:middle
about to get a dedicated back

00:42:47.456 --> 00:42:49.186 A:middle
beam or dedicated front beam.

00:42:50.086 --> 00:42:53.026 A:middle
The way you do that is by using

00:42:53.486 --> 00:42:56.976 A:middle
those same device input port

00:42:56.976 --> 00:42:58.456 A:middle
getters; this time; by

00:42:58.456 --> 00:42:59.916 A:middle
specifying which position you're

00:42:59.916 --> 00:43:00.486 A:middle
interested in.

00:42:59.916 --> 00:43:00.486 A:middle
interested in.

00:43:01.016 --> 00:43:02.666 A:middle
So you can ask for the front

00:43:02.736 --> 00:43:04.136 A:middle
position or the back position.

00:43:04.306 --> 00:43:05.356 A:middle
And that will give you the ports

00:43:05.356 --> 00:43:06.276 A:middle
that you're interested in.

00:43:06.416 --> 00:43:07.596 A:middle
And you'll get a nice back or

00:43:07.596 --> 00:43:09.000 A:middle
front beam form.

00:43:10.416 --> 00:43:11.456 A:middle
Here's for the front.

00:43:12.786 --> 00:43:15.736 A:middle
And here's for the back.

00:43:15.736 --> 00:43:16.426 A:middle
Now going back to the

00:43:16.426 --> 00:43:18.536 A:middle
MultiCamPiP demonstration we had

00:43:18.536 --> 00:43:18.956 A:middle
with Nik.

00:43:18.956 --> 00:43:21.276 A:middle
We stuck to the video side while

00:43:21.276 --> 00:43:23.276 A:middle
we were showing you the whizzy

00:43:23.276 --> 00:43:24.106 A:middle
part of the graph.

00:43:24.106 --> 00:43:25.656 A:middle
Now I'm going to go back and

00:43:25.656 --> 00:43:26.426 A:middle
tell you what we were doing on

00:43:26.426 --> 00:43:27.176 A:middle
the audio side.

00:43:28.166 --> 00:43:31.646 A:middle
We were running all the time a

00:43:31.646 --> 00:43:33.726 A:middle
single device input with two

00:43:34.186 --> 00:43:35.456 A:middle
beam forms, one for the back and

00:43:35.456 --> 00:43:36.166 A:middle
one for the front.

00:43:36.626 --> 00:43:37.786 A:middle
And we were running those to two

00:43:37.786 --> 00:43:39.326 A:middle
different audio data outputs.

00:43:39.656 --> 00:43:41.096 A:middle
This slide should say audio data

00:43:41.096 --> 00:43:41.556 A:middle
outputs.

00:43:42.066 --> 00:43:43.616 A:middle
And then choosing between them

00:43:44.006 --> 00:43:44.806 A:middle
at Runtime.

00:43:44.886 --> 00:43:46.856 A:middle
So depending on which is the

00:43:46.856 --> 00:43:48.496 A:middle
larger of the two, we would

00:43:48.496 --> 00:43:50.826 A:middle
switch to back or front and give

00:43:50.826 --> 00:43:52.106 A:middle
you the beam form that we

00:43:52.106 --> 00:43:52.526 A:middle
desired.

00:43:54.296 --> 00:43:55.466 A:middle
There are a couple of rules to

00:43:55.466 --> 00:43:57.606 A:middle
know about multi-mic capture.

00:43:58.046 --> 00:43:59.386 A:middle
Beam forming only works with

00:43:59.386 --> 00:44:00.156 A:middle
built-in mics.

00:43:59.386 --> 00:44:00.156 A:middle
built-in mics.

00:44:00.156 --> 00:44:01.606 A:middle
If you've got something external

00:44:01.676 --> 00:44:03.416 A:middle
USB, we don't know what that is.

00:44:03.416 --> 00:44:04.516 A:middle
We don't know how to beam form

00:44:04.516 --> 00:44:05.406 A:middle
with it.

00:44:06.036 --> 00:44:07.626 A:middle
If you do happen to plug in

00:44:07.626 --> 00:44:08.906 A:middle
something else, including

00:44:08.906 --> 00:44:12.446 A:middle
AirPods, we will capture audio

00:44:12.446 --> 00:44:12.886 A:middle
of course.

00:44:13.196 --> 00:44:14.396 A:middle
But we don't know how to beam

00:44:14.396 --> 00:44:14.626 A:middle
form.

00:44:14.626 --> 00:44:15.766 A:middle
So we'll just pipe that

00:44:15.766 --> 00:44:17.336 A:middle
microphone through all of the

00:44:17.336 --> 00:44:18.726 A:middle
inputs that you have connected.

00:44:18.956 --> 00:44:20.086 A:middle
Thus, ensuring that you don't

00:44:20.086 --> 00:44:20.776 A:middle
lose the signal.

00:44:20.906 --> 00:44:24.926 A:middle
And that's the end of the

00:44:24.926 --> 00:44:26.966 A:middle
Multi-Camera Capture part of

00:44:26.966 --> 00:44:28.396 A:middle
today's talk.

00:44:28.466 --> 00:44:29.586 A:middle
Let's do a quick summary.

00:44:31.156 --> 00:44:33.666 A:middle
MultiCam Capture session is the

00:44:33.666 --> 00:44:36.166 A:middle
new way to do multiple cameras

00:44:36.166 --> 00:44:37.656 A:middle
simultaneously on iOS.

00:44:38.686 --> 00:44:39.716 A:middle
It is a power tool.

00:44:39.716 --> 00:44:40.986 A:middle
But it has some limitations.

00:44:40.986 --> 00:44:41.466 A:middle
Know them.

00:44:42.916 --> 00:44:44.476 A:middle
And thoughtfully handle hardware

00:44:44.476 --> 00:44:46.576 A:middle
and system pressure costs as

00:44:46.576 --> 00:44:47.636 A:middle
you're doing your programming.

00:44:47.946 --> 00:44:50.316 A:middle
And if you want to do

00:44:50.316 --> 00:44:51.726 A:middle
synchronized streaming, use

00:44:51.726 --> 00:44:52.936 A:middle
those virtual devices with

00:44:52.976 --> 00:44:54.306 A:middle
constituent device ports.

00:44:54.466 --> 00:44:56.436 A:middle
And lastly, if you want to do

00:44:56.436 --> 00:44:58.116 A:middle
multi-mic capture, be aware that

00:44:58.116 --> 00:44:59.506 A:middle
you can use front or back-beam

00:44:59.506 --> 00:45:00.356 A:middle
formed or omni.

00:44:59.506 --> 00:45:00.356 A:middle
formed or omni.

00:45:00.616 --> 00:45:02.036 A:middle
And with that, I'm going to turn

00:45:02.036 --> 00:45:03.376 A:middle
it over to Jacob to talk about

00:45:03.376 --> 00:45:04.796 A:middle
semantic segmentation mattes.

00:45:04.796 --> 00:45:04.976 A:middle
Thank you.

00:45:05.516 --> 00:45:11.576 A:middle
[ Applause ]

00:45:12.076 --> 00:45:13.516 A:middle
&gt;&gt; Hi, I'm Jacob.

00:45:13.666 --> 00:45:14.946 A:middle
I'm here to tell you about the

00:45:14.946 --> 00:45:16.296 A:middle
semantic segmentation mattes.

00:45:16.626 --> 00:45:18.386 A:middle
So first, I'm going to go

00:45:18.386 --> 00:45:19.576 A:middle
through what are these new types

00:45:19.576 --> 00:45:20.126 A:middle
of mattes.

00:45:20.126 --> 00:45:21.326 A:middle
And then David is going to talk

00:45:21.326 --> 00:45:23.126 A:middle
you through how to leverage Core

00:45:23.126 --> 00:45:24.176 A:middle
Image to work with these new

00:45:24.176 --> 00:45:25.186 A:middle
mattes.

00:45:25.956 --> 00:45:28.736 A:middle
So remember, in iOS 12, we

00:45:28.736 --> 00:45:29.916 A:middle
introduced the portrait effects

00:45:29.916 --> 00:45:30.136 A:middle
matte.

00:45:30.306 --> 00:45:32.276 A:middle
So this was a matte designed

00:45:32.276 --> 00:45:34.366 A:middle
explicitly to provide effects

00:45:34.616 --> 00:45:35.416 A:middle
for portraits.

00:45:35.926 --> 00:45:37.736 A:middle
So we use it internally to

00:45:37.736 --> 00:45:38.946 A:middle
render beautifully looking

00:45:38.946 --> 00:45:40.806 A:middle
portrait mode photos and

00:45:40.806 --> 00:45:41.576 A:middle
portrait lighting photos.

00:45:41.576 --> 00:45:44.936 A:middle
So in taking a closer look at

00:45:44.936 --> 00:45:47.206 A:middle
the portrait effects matte, you

00:45:47.206 --> 00:45:49.276 A:middle
can see how it -- that clearly

00:45:49.276 --> 00:45:50.516 A:middle
delineates the foreground

00:45:50.516 --> 00:45:52.256 A:middle
subject from the background.

00:45:52.646 --> 00:45:53.846 A:middle
So this is beautifully

00:45:53.846 --> 00:45:55.666 A:middle
represented here as a black and

00:45:55.826 --> 00:45:56.566 A:middle
white matte.

00:45:56.866 --> 00:45:58.346 A:middle
So values of one indicating

00:45:58.556 --> 00:46:00.126 A:middle
foreground and values of zero

00:45:58.556 --> 00:46:00.126 A:middle
foreground and values of zero

00:46:00.126 --> 00:46:01.666 A:middle
indicating background.

00:46:02.676 --> 00:46:05.026 A:middle
In iOS 13, we're taking this a

00:46:05.026 --> 00:46:06.086 A:middle
step further with semantic

00:46:06.086 --> 00:46:07.076 A:middle
segmentation mattes.

00:46:08.376 --> 00:46:10.000 A:middle
So we're introducing hair,

00:46:13.046 --> 00:46:15.046 A:middle
-- skin, and teeth.

00:46:15.046 --> 00:46:19.876 A:middle
So taking a closer look at the

00:46:20.046 --> 00:46:21.416 A:middle
hair matte, for instance, you

00:46:21.416 --> 00:46:23.446 A:middle
can see how this is beautifully

00:46:23.696 --> 00:46:25.896 A:middle
separating the hair region from

00:46:25.896 --> 00:46:26.806 A:middle
the non-hair regions.

00:46:27.146 --> 00:46:29.026 A:middle
So we get great hair details

00:46:29.026 --> 00:46:30.016 A:middle
against the background.

00:46:30.206 --> 00:46:31.536 A:middle
And we get great separation

00:46:31.536 --> 00:46:33.326 A:middle
between the non-hair regions and

00:46:33.376 --> 00:46:34.000 A:middle
the hair.

00:46:35.446 --> 00:46:36.866 A:middle
Similarly for the skin regions

00:46:36.866 --> 00:46:38.386 A:middle
where now we have alpha values

00:46:38.386 --> 00:46:40.256 A:middle
indicating how much of a pixel

00:46:40.626 --> 00:46:42.576 A:middle
is of type skin.

00:46:42.576 --> 00:46:44.626 A:middle
So an alpha value of .7, for

00:46:44.626 --> 00:46:45.936 A:middle
instance, would indicate that a

00:46:46.266 --> 00:46:47.946 A:middle
that a pixel is 70% of type

00:46:47.946 --> 00:46:48.286 A:middle
skin.

00:46:49.096 --> 00:46:50.756 A:middle
So we hope these new three types

00:46:50.886 --> 00:46:52.166 A:middle
of -- three new types of mattes

00:46:52.166 --> 00:46:53.556 A:middle
will give you the creative

00:46:53.556 --> 00:46:55.976 A:middle
freedom to render some cool

00:46:55.976 --> 00:46:57.476 A:middle
effects and beautiful-looking

00:46:57.536 --> 00:46:58.000 A:middle
photos.

00:46:59.856 --> 00:47:01.796 A:middle
So a few things to notice-- That

00:46:59.856 --> 00:47:01.796 A:middle
So a few things to notice-- That

00:47:01.856 --> 00:47:03.346 A:middle
the mattes are half size of the

00:47:03.346 --> 00:47:04.126 A:middle
original image.

00:47:04.516 --> 00:47:05.976 A:middle
That means they're half in each

00:47:05.976 --> 00:47:07.306 A:middle
dimension of the original image.

00:47:07.306 --> 00:47:08.266 A:middle
And that means quarter

00:47:08.266 --> 00:47:08.716 A:middle
resolution.

00:47:09.826 --> 00:47:11.436 A:middle
So another thing to remember is

00:47:11.436 --> 00:47:12.886 A:middle
that that these segmentation

00:47:12.886 --> 00:47:13.936 A:middle
mattes can actually overlap.

00:47:14.086 --> 00:47:16.116 A:middle
So this is particularly true for

00:47:16.116 --> 00:47:17.116 A:middle
the portrait effects matte and

00:47:17.116 --> 00:47:17.926 A:middle
the skin matte that will

00:47:17.926 --> 00:47:19.466 A:middle
inherently overlap.

00:47:21.296 --> 00:47:24.036 A:middle
So these mattes do not come for

00:47:24.156 --> 00:47:24.426 A:middle
free.

00:47:24.426 --> 00:47:25.806 A:middle
So we heavily leverage the Apple

00:47:25.806 --> 00:47:27.216 A:middle
Neural Engines for machine

00:47:27.216 --> 00:47:28.476 A:middle
learning spectral graph theory

00:47:28.946 --> 00:47:30.286 A:middle
and looking a bit under the

00:47:30.286 --> 00:47:32.486 A:middle
hood, what we do is we take the

00:47:32.486 --> 00:47:33.446 A:middle
original size image.

00:47:33.516 --> 00:47:34.426 A:middle
We feed it through the Apple

00:47:34.426 --> 00:47:35.066 A:middle
Neural Engine.

00:47:35.346 --> 00:47:36.016 A:middle
And together with the

00:47:36.016 --> 00:47:38.046 A:middle
original-sized image, we render

00:47:38.046 --> 00:47:39.156 A:middle
these high-resolution,

00:47:39.446 --> 00:47:41.096 A:middle
high-quality, and with

00:47:41.096 --> 00:47:42.626 A:middle
high-consistency segmentation

00:47:42.626 --> 00:47:42.936 A:middle
mattes.

00:47:43.316 --> 00:47:44.196 A:middle
These are then ready to be

00:47:44.196 --> 00:47:45.406 A:middle
embedded into the HEIF or JPEG

00:47:45.446 --> 00:47:47.136 A:middle
files as you know them, together

00:47:47.136 --> 00:47:48.116 A:middle
with the original size, the

00:47:48.116 --> 00:47:49.386 A:middle
image, and the depth as you know

00:47:49.386 --> 00:47:50.396 A:middle
from iOS 11.

00:47:51.046 --> 00:47:54.446 A:middle
So there are two distinct ways

00:47:54.446 --> 00:47:56.776 A:middle
to generate these new types of

00:47:56.776 --> 00:47:57.116 A:middle
mattes.

00:47:57.116 --> 00:47:58.686 A:middle
So one is that they're embedded

00:47:58.686 --> 00:47:59.456 A:middle
in the old portrait mode

00:47:59.496 --> 00:48:00.116 A:middle
captures.

00:47:59.496 --> 00:48:00.116 A:middle
captures.

00:48:00.376 --> 00:48:01.496 A:middle
So you can grab them from those

00:48:01.496 --> 00:48:01.926 A:middle
files.

00:48:02.336 --> 00:48:03.716 A:middle
Or even better, you can write

00:48:03.716 --> 00:48:05.276 A:middle
your own capture app and opt-in

00:48:05.276 --> 00:48:06.466 A:middle
to these mattes on capture.

00:48:06.466 --> 00:48:08.406 A:middle
So if you have files with the

00:48:08.406 --> 00:48:10.366 A:middle
segmentation mattes in them, you

00:48:10.366 --> 00:48:11.826 A:middle
can work with them through Core

00:48:11.826 --> 00:48:12.886 A:middle
Image and Image IO.

00:48:13.246 --> 00:48:14.256 A:middle
David is going to talk more

00:48:14.256 --> 00:48:15.506 A:middle
about that.

00:48:15.636 --> 00:48:17.256 A:middle
But first, I'm going to talk you

00:48:17.256 --> 00:48:18.456 A:middle
through how to capture with the

00:48:18.456 --> 00:48:19.330 A:middle
AVFoundation API.

00:48:23.096 --> 00:48:24.416 A:middle
There are four phases we're

00:48:24.416 --> 00:48:25.436 A:middle
going to go through here that

00:48:25.506 --> 00:48:26.536 A:middle
relates to the extension.

00:48:26.596 --> 00:48:28.096 A:middle
So, the first is when we set up

00:48:28.136 --> 00:48:29.316 A:middle
the AVCapturePhotoOutput.

00:48:29.766 --> 00:48:31.206 A:middle
Second is when the capture

00:48:31.206 --> 00:48:32.776 A:middle
request is being initiated in

00:48:32.776 --> 00:48:34.046 A:middle
any point in the life cycle of

00:48:34.096 --> 00:48:35.346 A:middle
your app.

00:48:35.596 --> 00:48:36.866 A:middle
Then two of the callbacks.

00:48:36.936 --> 00:48:38.276 A:middle
So one is when the settings are

00:48:38.276 --> 00:48:39.616 A:middle
resolved for your capture.

00:48:39.986 --> 00:48:41.446 A:middle
And the final one is the one the

00:48:41.526 --> 00:48:43.086 A:middle
photo did finish processing.

00:48:43.456 --> 00:48:45.356 A:middle
So, for full details on this,

00:48:45.566 --> 00:48:47.706 A:middle
please refer to Brad's 2017 talk

00:48:47.706 --> 00:48:49.000 A:middle
on this exact topic.

00:48:51.476 --> 00:48:53.306 A:middle
Yeah, let's go through the how

00:48:53.306 --> 00:48:53.996 A:middle
to set up the

00:48:53.996 --> 00:48:54.856 A:middle
AVCapturePhotoOutput.

00:48:54.856 --> 00:48:56.006 A:middle
So this usually happens when

00:48:56.006 --> 00:48:57.326 A:middle
you're setting or you are

00:48:57.326 --> 00:48:58.256 A:middle
configuring your session.

00:48:58.256 --> 00:49:00.356 A:middle
So you're already, at this

00:48:58.256 --> 00:49:00.356 A:middle
So you're already, at this

00:49:00.386 --> 00:49:01.546 A:middle
point, done session that begin

00:49:01.546 --> 00:49:02.186 A:middle
configuration.

00:49:02.186 --> 00:49:03.306 A:middle
You've set your presets.

00:49:03.306 --> 00:49:04.856 A:middle
You've added your device inputs.

00:49:05.146 --> 00:49:05.926 A:middle
You add your

00:49:05.926 --> 00:49:06.916 A:middle
AVCapturePhotoOutput.

00:49:07.306 --> 00:49:08.796 A:middle
At this point is when you tell

00:49:08.796 --> 00:49:10.956 A:middle
the API what superset of

00:49:10.956 --> 00:49:11.946 A:middle
segmentation mattes are you're

00:49:11.946 --> 00:49:13.236 A:middle
going to ask for at any point in

00:49:13.236 --> 00:49:14.706 A:middle
life cycle of your app.

00:49:15.936 --> 00:49:17.056 A:middle
When you actually want to

00:49:17.056 --> 00:49:18.376 A:middle
initiate your capture requests,

00:49:18.376 --> 00:49:19.236 A:middle
you need to specify the

00:49:19.236 --> 00:49:20.526 A:middle
AVCapturePhotoSettings.

00:49:20.946 --> 00:49:22.816 A:middle
So this is where you tell the

00:49:22.816 --> 00:49:24.646 A:middle
API, "This is what I really want

00:49:24.646 --> 00:49:25.716 A:middle
in this particular capture."

00:49:25.766 --> 00:49:27.656 A:middle
So, here again, you can specify

00:49:28.006 --> 00:49:28.976 A:middle
all the ones that you already

00:49:28.976 --> 00:49:29.366 A:middle
enabled.

00:49:29.756 --> 00:49:31.376 A:middle
Or you can specify a subset, say

00:49:31.476 --> 00:49:32.016 A:middle
hair or skin.

00:49:33.266 --> 00:49:34.866 A:middle
Now you initiate your capture

00:49:34.866 --> 00:49:35.416 A:middle
request.

00:49:35.596 --> 00:49:36.606 A:middle
So you give it the

00:49:36.606 --> 00:49:37.556 A:middle
AVCapturePhotoSettings.

00:49:37.556 --> 00:49:38.566 A:middle
And you give it the delegate

00:49:38.596 --> 00:49:39.576 A:middle
where you want to have your

00:49:39.636 --> 00:49:40.136 A:middle
callbacks.

00:49:41.166 --> 00:49:43.106 A:middle
So time passes.

00:49:43.636 --> 00:49:45.346 A:middle
And soon after, you will get

00:49:45.426 --> 00:49:47.176 A:middle
that -- get a will begin capture

00:49:47.176 --> 00:49:48.066 A:middle
for callback.

00:49:48.136 --> 00:49:50.956 A:middle
This is when the API tells you

00:49:51.436 --> 00:49:52.486 A:middle
you may have asked for

00:49:52.486 --> 00:49:53.316 A:middle
something, but this is what

00:49:53.316 --> 00:49:54.106 A:middle
you're actually going to get.

00:49:54.536 --> 00:49:55.876 A:middle
So this is important for the

00:49:55.966 --> 00:49:56.936 A:middle
portrait effects matte and the

00:49:56.936 --> 00:49:58.036 A:middle
semantic segmentation mattes.

00:49:58.096 --> 00:49:59.336 A:middle
Because if there are no people

00:49:59.336 --> 00:50:00.726 A:middle
in the scene, you'll actually

00:49:59.336 --> 00:50:00.726 A:middle
in the scene, you'll actually

00:50:00.726 --> 00:50:01.476 A:middle
not get a matte here.

00:50:01.856 --> 00:50:03.376 A:middle
So you need to check for the

00:50:03.376 --> 00:50:05.196 A:middle
dimensions of the semantic

00:50:05.196 --> 00:50:05.896 A:middle
segmentation mattes.

00:50:05.896 --> 00:50:07.236 A:middle
There will be zero in such case.

00:50:10.456 --> 00:50:11.486 A:middle
More time passes.

00:50:11.866 --> 00:50:13.216 A:middle
The photo did finish processing.

00:50:13.656 --> 00:50:15.736 A:middle
So this is when you get the --

00:50:15.736 --> 00:50:18.076 A:middle
your AV semantic segmentation

00:50:18.076 --> 00:50:18.546 A:middle
matte back.

00:50:18.546 --> 00:50:19.606 A:middle
This is the variable matte in

00:50:19.606 --> 00:50:20.096 A:middle
this case.

00:50:20.546 --> 00:50:22.696 A:middle
So this new class had the same

00:50:23.106 --> 00:50:24.776 A:middle
type of methods and properties

00:50:24.776 --> 00:50:25.786 A:middle
as you know from the portrait

00:50:25.786 --> 00:50:26.216 A:middle
effects matte.

00:50:26.276 --> 00:50:27.606 A:middle
That means you can rotate

00:50:27.606 --> 00:50:28.546 A:middle
according to EXIF data.

00:50:28.546 --> 00:50:29.386 A:middle
You can get your

00:50:29.386 --> 00:50:30.646 A:middle
CVPixelBuffer reference.

00:50:30.646 --> 00:50:32.446 A:middle
Or you can get a dictionary

00:50:32.446 --> 00:50:36.516 A:middle
representation for easy file IO.

00:50:36.726 --> 00:50:39.416 A:middle
So for full walkthrough of the

00:50:39.416 --> 00:50:41.126 A:middle
lifecycle of how to make these

00:50:41.126 --> 00:50:42.496 A:middle
captures, please refer to the

00:50:42.586 --> 00:50:43.846 A:middle
AVCam sample app.

00:50:43.846 --> 00:50:45.426 A:middle
It has been updated with the

00:50:45.426 --> 00:50:46.686 A:middle
semantic segmentation mattes and

00:50:46.686 --> 00:50:48.276 A:middle
will take you through all these

00:50:48.756 --> 00:50:49.476 A:middle
different steps.

00:50:51.656 --> 00:50:52.876 A:middle
I'm going to hand it over to

00:50:52.876 --> 00:50:53.936 A:middle
David, who going to talk about

00:50:53.936 --> 00:50:54.686 A:middle
the Core Image.

00:50:55.516 --> 00:51:00.546 A:middle
[ Applause ]

00:50:55.516 --> 00:51:00.546 A:middle
[ Applause ]

00:51:01.046 --> 00:51:01.366 A:middle
&gt;&gt; All right.

00:51:01.366 --> 00:51:02.366 A:middle
Thank you very much.

00:51:02.366 --> 00:51:03.366 A:middle
Now that we've learned how to

00:51:03.366 --> 00:51:05.156 A:middle
capture images with semantic

00:51:05.156 --> 00:51:06.596 A:middle
segmentation mattes, we get to

00:51:06.596 --> 00:51:08.166 A:middle
have some fun and learn how we

00:51:08.166 --> 00:51:10.356 A:middle
can leverage Core Image to apply

00:51:10.356 --> 00:51:11.666 A:middle
some fun effects.

00:51:11.826 --> 00:51:13.576 A:middle
Now, I'm going to have a demo

00:51:13.846 --> 00:51:14.396 A:middle
next.

00:51:14.396 --> 00:51:15.586 A:middle
But I should warn you if --

00:51:15.656 --> 00:51:17.286 A:middle
there's clowns in this image.

00:51:17.616 --> 00:51:19.636 A:middle
So if you have any coulrophobia,

00:51:19.966 --> 00:51:21.616 A:middle
or irrational fear of clowns,

00:51:22.026 --> 00:51:23.796 A:middle
you know, avert your eyes.

00:51:24.246 --> 00:51:25.136 A:middle
All right, so here we have an

00:51:25.136 --> 00:51:26.636 A:middle
image that was captured in

00:51:26.636 --> 00:51:28.246 A:middle
portrait mode on a device.

00:51:28.736 --> 00:51:30.306 A:middle
And what we can see in this

00:51:30.306 --> 00:51:32.496 A:middle
application is that we can now

00:51:32.796 --> 00:51:33.996 A:middle
very easily see all the

00:51:33.996 --> 00:51:35.376 A:middle
different semantic segmentation

00:51:35.376 --> 00:51:36.596 A:middle
mattes that are present in this

00:51:36.596 --> 00:51:36.966 A:middle
file.

00:51:37.616 --> 00:51:39.976 A:middle
We can use the traditional

00:51:40.416 --> 00:51:42.276 A:middle
portrait effects matte.

00:51:42.636 --> 00:51:44.496 A:middle
Or we can also see the skin

00:51:45.476 --> 00:51:46.036 A:middle
matte.

00:51:46.036 --> 00:51:47.446 A:middle
Or we can see my-- the hair

00:51:47.446 --> 00:51:49.246 A:middle
matte or the teeth matte.

00:51:49.726 --> 00:51:51.356 A:middle
And it's also possible to use

00:51:51.356 --> 00:51:52.636 A:middle
Core Image to combine these

00:51:52.636 --> 00:51:54.376 A:middle
various mattes into other

00:51:54.376 --> 00:51:55.946 A:middle
mattes, such as this one I've

00:51:55.946 --> 00:51:57.986 A:middle
synthesized by using logical

00:51:57.986 --> 00:52:00.566 A:middle
operations to create a matte of

00:51:57.986 --> 00:52:00.566 A:middle
operations to create a matte of

00:52:00.566 --> 00:52:01.446 A:middle
just eyes and mouth.

00:52:02.016 --> 00:52:03.676 A:middle
If we go back to the main image,

00:52:03.676 --> 00:52:04.896 A:middle
however, we see this is a

00:52:04.896 --> 00:52:06.946 A:middle
picture of me In Apple Park.

00:52:07.236 --> 00:52:08.386 A:middle
And one of the great things you

00:52:08.386 --> 00:52:10.336 A:middle
could do with semantic -- with

00:52:10.336 --> 00:52:12.476 A:middle
portrait effects mattes is you

00:52:12.476 --> 00:52:14.236 A:middle
could add a background very

00:52:14.236 --> 00:52:14.596 A:middle
easily.

00:52:14.596 --> 00:52:16.266 A:middle
And as you can see here, we can

00:52:16.376 --> 00:52:18.486 A:middle
put me in a circus tent.

00:52:18.836 --> 00:52:20.386 A:middle
And while that really does look

00:52:20.386 --> 00:52:22.566 A:middle
like a circus tent, I don't look

00:52:22.566 --> 00:52:23.376 A:middle
like I fit in.

00:52:23.716 --> 00:52:25.476 A:middle
So now we can use some fun

00:52:25.476 --> 00:52:25.986 A:middle
effects.

00:52:26.056 --> 00:52:28.026 A:middle
For example, we can make it look

00:52:28.056 --> 00:52:29.366 A:middle
like I've got some clown makeup

00:52:29.366 --> 00:52:29.606 A:middle
on.

00:52:30.306 --> 00:52:31.376 A:middle
Or if we want to go a little

00:52:31.376 --> 00:52:34.386 A:middle
further, we can give myself some

00:52:34.386 --> 00:52:34.996 A:middle
green hair.

00:52:35.336 --> 00:52:36.616 A:middle
And lastly, we can use some of

00:52:36.616 --> 00:52:37.896 A:middle
these other mattes to give

00:52:37.896 --> 00:52:38.796 A:middle
myself some makeup.

00:52:40.126 --> 00:52:42.486 A:middle
So that's what I'd like to talk

00:52:42.486 --> 00:52:43.786 A:middle
to you about today is how we can

00:52:43.786 --> 00:52:44.926 A:middle
do these kind of fun effects in

00:52:44.926 --> 00:52:45.626 A:middle
your application.

00:52:46.516 --> 00:52:51.546 A:middle
[ Applause ]

00:52:52.046 --> 00:52:54.346 A:middle
All right, so most of the clown

00:52:54.856 --> 00:52:55.826 A:middle
references are gone now.

00:52:55.826 --> 00:52:58.666 A:middle
So it's safe to look back.

00:52:58.666 --> 00:52:59.426 A:middle
All right, so we're going to be

00:52:59.426 --> 00:53:00.466 A:middle
talking about three things

00:52:59.426 --> 00:53:00.466 A:middle
talking about three things

00:53:00.466 --> 00:53:00.836 A:middle
today.

00:53:00.836 --> 00:53:02.666 A:middle
One is how you create matte

00:53:02.736 --> 00:53:05.036 A:middle
images using Core Image, how you

00:53:05.036 --> 00:53:06.336 A:middle
can apply filters to those

00:53:06.336 --> 00:53:08.326 A:middle
images, and lastly, how you can

00:53:08.326 --> 00:53:09.596 A:middle
save these into files.

00:53:10.076 --> 00:53:11.526 A:middle
So firstly, let's talk about

00:53:11.526 --> 00:53:13.846 A:middle
creating matte images using Core

00:53:13.846 --> 00:53:14.106 A:middle
Image.

00:53:14.346 --> 00:53:15.216 A:middle
There are two ways.

00:53:15.516 --> 00:53:16.786 A:middle
One is you can create matte

00:53:16.786 --> 00:53:19.016 A:middle
images by using the

00:53:19.016 --> 00:53:20.516 A:middle
AVCapturePhoto APIs.

00:53:20.996 --> 00:53:22.596 A:middle
And then, from that, you can

00:53:22.836 --> 00:53:24.426 A:middle
create a Core Image.

00:53:24.906 --> 00:53:25.986 A:middle
So, the code for this is very

00:53:25.986 --> 00:53:26.396 A:middle
simple.

00:53:26.396 --> 00:53:27.686 A:middle
What we're going to be doing is

00:53:27.686 --> 00:53:28.016 A:middle
using the

00:53:28.016 --> 00:53:29.866 A:middle
semanticSegmentationMatte API

00:53:30.266 --> 00:53:31.626 A:middle
and specifying that we want to

00:53:31.626 --> 00:53:33.466 A:middle
do the hair or the skin or the

00:53:33.466 --> 00:53:33.766 A:middle
teeth.

00:53:34.356 --> 00:53:35.846 A:middle
And that returns an

00:53:35.846 --> 00:53:38.066 A:middle
AVSemanticSegementMatteObject.

00:53:38.666 --> 00:53:40.256 A:middle
And from that, it's trivial to

00:53:40.256 --> 00:53:41.976 A:middle
create a CIImage where we can

00:53:41.976 --> 00:53:43.936 A:middle
just instantiate a CIImage from

00:53:43.936 --> 00:53:44.586 A:middle
that object.

00:53:45.796 --> 00:53:46.936 A:middle
The other common way you're

00:53:46.936 --> 00:53:47.916 A:middle
going to want to create matte

00:53:48.036 --> 00:53:50.006 A:middle
images is by loading them from a

00:53:50.006 --> 00:53:51.536 A:middle
HEIF or JPEG file.

00:53:52.146 --> 00:53:54.426 A:middle
These files have a main image

00:53:54.486 --> 00:53:55.866 A:middle
you're familiar with, a typical

00:53:56.106 --> 00:53:56.936 A:middle
RGB image.

00:53:57.206 --> 00:53:58.856 A:middle
But they also have auxiliary

00:53:58.856 --> 00:54:00.416 A:middle
images, such as the portrait

00:53:58.856 --> 00:54:00.416 A:middle
images, such as the portrait

00:54:00.416 --> 00:54:02.076 A:middle
effects matte, as well as the

00:54:02.346 --> 00:54:04.416 A:middle
new mattes that we're talking

00:54:04.416 --> 00:54:06.246 A:middle
about, the skin segmentation

00:54:06.246 --> 00:54:07.956 A:middle
matte, and the hair, and the

00:54:07.956 --> 00:54:08.116 A:middle
teeth.

00:54:09.166 --> 00:54:10.206 A:middle
The code for this is very

00:54:10.206 --> 00:54:10.606 A:middle
simple.

00:54:10.986 --> 00:54:12.506 A:middle
The traditional code to create a

00:54:12.506 --> 00:54:14.936 A:middle
CIImage from a HEIF file is just

00:54:14.936 --> 00:54:16.976 A:middle
to say CIImage and specify a

00:54:16.976 --> 00:54:17.216 A:middle
URL.

00:54:17.856 --> 00:54:19.466 A:middle
To create these auxiliary

00:54:19.466 --> 00:54:21.126 A:middle
images, all you do is make the

00:54:21.126 --> 00:54:23.086 A:middle
same call and provide an options

00:54:23.086 --> 00:54:25.036 A:middle
dictionary, specifying which

00:54:25.206 --> 00:54:27.096 A:middle
matte image you want to return.

00:54:27.536 --> 00:54:29.336 A:middle
So we can specify the auxiliary

00:54:29.476 --> 00:54:31.376 A:middle
segmentation hair matte.

00:54:31.946 --> 00:54:33.286 A:middle
Or if we want, we can get the

00:54:33.286 --> 00:54:35.426 A:middle
mattes for the other semantic

00:54:35.426 --> 00:54:36.216 A:middle
segmentations.

00:54:37.446 --> 00:54:39.106 A:middle
So very simple, just a couple

00:54:39.106 --> 00:54:40.326 A:middle
lines of code.

00:54:41.296 --> 00:54:42.906 A:middle
The next thing we want to do is

00:54:42.906 --> 00:54:44.146 A:middle
talk about how you can apply

00:54:44.146 --> 00:54:45.586 A:middle
effects to these images.

00:54:46.106 --> 00:54:47.806 A:middle
So, I showed a bunch of effects.

00:54:47.806 --> 00:54:48.986 A:middle
I'm going to talk about one in a

00:54:48.986 --> 00:54:49.906 A:middle
little bit of detail.

00:54:50.316 --> 00:54:52.076 A:middle
What we're going to do is we're

00:54:52.076 --> 00:54:53.566 A:middle
going to start with a base RGB

00:54:53.566 --> 00:54:55.356 A:middle
image, and then we're going to

00:54:55.356 --> 00:54:56.606 A:middle
apply some effects to that.

00:54:56.606 --> 00:54:58.266 A:middle
Let's say we want to do the

00:54:58.266 --> 00:55:01.086 A:middle
washed-out clown white makeup.

00:54:58.266 --> 00:55:01.086 A:middle
washed-out clown white makeup.

00:55:01.906 --> 00:55:02.776 A:middle
So, I'm going to apply some

00:55:02.776 --> 00:55:03.726 A:middle
adjustments to that.

00:55:04.176 --> 00:55:05.256 A:middle
Those adjustments, however,

00:55:05.256 --> 00:55:06.636 A:middle
apply to the entire image.

00:55:06.636 --> 00:55:08.286 A:middle
So we want those to be limited

00:55:08.286 --> 00:55:09.316 A:middle
to just the skin area.

00:55:09.876 --> 00:55:11.366 A:middle
So, we're going to use the skin

00:55:11.366 --> 00:55:11.626 A:middle
matte.

00:55:12.176 --> 00:55:13.436 A:middle
And then we're going to combine

00:55:13.436 --> 00:55:14.806 A:middle
these three images to produce

00:55:14.806 --> 00:55:15.676 A:middle
the result we want.

00:55:17.006 --> 00:55:18.426 A:middle
Let me walk you through the code

00:55:18.426 --> 00:55:19.396 A:middle
for it because it's actually

00:55:19.396 --> 00:55:19.906 A:middle
quite simple.

00:55:21.156 --> 00:55:22.436 A:middle
But first, I want to talk about

00:55:22.466 --> 00:55:23.656 A:middle
the top feature requests we've

00:55:23.656 --> 00:55:25.196 A:middle
had for Core Image, which is to

00:55:25.196 --> 00:55:26.436 A:middle
make it easier for people to

00:55:26.436 --> 00:55:29.006 A:middle
discover and use the 200-plus

00:55:29.056 --> 00:55:30.286 A:middle
built-in filters we have.

00:55:30.746 --> 00:55:32.116 A:middle
And that is the new header

00:55:32.576 --> 00:55:32.836 A:middle
called

00:55:32.906 --> 00:55:34.856 A:middle
CoreImage.CIFilterBuiltins.

00:55:35.116 --> 00:55:36.766 A:middle
And these allow you to use all

00:55:36.766 --> 00:55:38.006 A:middle
of the built-in filters without

00:55:38.006 --> 00:55:39.736 A:middle
having to remember the names of

00:55:39.736 --> 00:55:40.796 A:middle
the filters or the names of the

00:55:40.796 --> 00:55:40.976 A:middle
inputs.

00:55:41.516 --> 00:55:45.686 A:middle
[ Applause ]

00:55:46.186 --> 00:55:47.016 A:middle
So [chuckles] it's really great.

00:55:47.606 --> 00:55:48.946 A:middle
So let me show you some code

00:55:48.946 --> 00:55:49.956 A:middle
that will use this new header.

00:55:50.626 --> 00:55:51.476 A:middle
So the first thing we're going

00:55:51.476 --> 00:55:52.866 A:middle
to do is create the base image.

00:55:52.936 --> 00:55:53.706 A:middle
And we're just going to call

00:55:53.706 --> 00:55:55.086 A:middle
image with contents of URL.

00:55:55.146 --> 00:55:56.906 A:middle
And that will produce the

00:55:56.906 --> 00:55:58.256 A:middle
traditional RGB image.

00:55:59.076 --> 00:56:00.196 A:middle
Now, we're going to start

00:55:59.076 --> 00:56:00.196 A:middle
Now, we're going to start

00:56:00.196 --> 00:56:01.276 A:middle
applying some effects.

00:56:01.276 --> 00:56:02.386 A:middle
So the first thing I want to do

00:56:02.386 --> 00:56:03.336 A:middle
is I'm going to convert it to

00:56:03.336 --> 00:56:03.976 A:middle
grayscale.

00:56:04.246 --> 00:56:05.606 A:middle
And I'm going to use a filter

00:56:05.606 --> 00:56:06.916 A:middle
called the maximum component.

00:56:07.626 --> 00:56:09.006 A:middle
And I'm going to give that

00:56:09.006 --> 00:56:10.476 A:middle
filter an input image of the

00:56:10.476 --> 00:56:11.116 A:middle
base image.

00:56:11.676 --> 00:56:12.846 A:middle
And then I'm going to ask for

00:56:12.846 --> 00:56:14.736 A:middle
that filters output, and that

00:56:14.736 --> 00:56:16.246 A:middle
produces an image that looks

00:56:16.366 --> 00:56:17.316 A:middle
grayscale like this.

00:56:18.396 --> 00:56:19.616 A:middle
This doesn't look quite bright

00:56:19.616 --> 00:56:20.966 A:middle
enough to look like clown

00:56:20.966 --> 00:56:21.336 A:middle
makeup.

00:56:21.636 --> 00:56:22.536 A:middle
So we're going to apply an

00:56:22.536 --> 00:56:23.296 A:middle
additional filter.

00:56:23.296 --> 00:56:24.826 A:middle
We're going to say use the gamma

00:56:24.826 --> 00:56:25.666 A:middle
adjustment filter.

00:56:26.156 --> 00:56:27.806 A:middle
And the input to this will be

00:56:27.806 --> 00:56:29.576 A:middle
the previous filter's output,

00:56:29.656 --> 00:56:31.286 A:middle
and then we're going to specify

00:56:31.566 --> 00:56:33.036 A:middle
the power for the gamma

00:56:33.036 --> 00:56:35.856 A:middle
function, and ask for the output

00:56:35.856 --> 00:56:36.206 A:middle
image.

00:56:36.896 --> 00:56:38.356 A:middle
And you'll notice it's now very

00:56:38.356 --> 00:56:40.616 A:middle
easy to specify the power for

00:56:40.616 --> 00:56:41.406 A:middle
the gamma filter.

00:56:41.406 --> 00:56:42.986 A:middle
It's a float rather than having

00:56:42.986 --> 00:56:44.446 A:middle
to remember to use an NS number.

00:56:46.946 --> 00:56:48.006 A:middle
So that's the first part of our

00:56:48.006 --> 00:56:48.286 A:middle
effect.

00:56:48.936 --> 00:56:52.046 A:middle
The next thing we want to do is

00:56:52.736 --> 00:56:54.936 A:middle
start by getting the skin

00:56:54.936 --> 00:56:55.676 A:middle
segmentation matte.

00:56:56.176 --> 00:56:57.236 A:middle
So again, as I described

00:56:57.316 --> 00:56:58.186 A:middle
earlier, we're going to start

00:56:58.186 --> 00:56:59.936 A:middle
with a URL to specify that we

00:56:59.936 --> 00:57:01.646 A:middle
want the skin matte.

00:56:59.936 --> 00:57:01.646 A:middle
want the skin matte.

00:57:02.056 --> 00:57:03.446 A:middle
However, when we get this image,

00:57:03.896 --> 00:57:06.126 A:middle
you notice it's smaller than the

00:57:06.126 --> 00:57:06.616 A:middle
other image.

00:57:06.616 --> 00:57:07.616 A:middle
As we mentioned before, these

00:57:07.616 --> 00:57:08.766 A:middle
are half size by default.

00:57:10.666 --> 00:57:11.996 A:middle
So we need to scale that up to

00:57:11.996 --> 00:57:13.526 A:middle
match the image, the main image

00:57:13.526 --> 00:57:13.796 A:middle
size.

00:57:14.096 --> 00:57:15.076 A:middle
So we're going to create a

00:57:15.076 --> 00:57:16.566 A:middle
CGAffineTransform that scales

00:57:16.566 --> 00:57:18.366 A:middle
from the matte size to the base

00:57:18.366 --> 00:57:19.046 A:middle
image size.

00:57:19.466 --> 00:57:21.106 A:middle
And then we're going to apply a

00:57:21.106 --> 00:57:22.306 A:middle
transform to the image.

00:57:22.426 --> 00:57:23.626 A:middle
And that produces a new image,

00:57:23.736 --> 00:57:25.806 A:middle
which, as you expect, matches

00:57:25.806 --> 00:57:26.626 A:middle
the correct size.

00:57:28.116 --> 00:57:29.366 A:middle
The next step we're going to do

00:57:29.646 --> 00:57:31.486 A:middle
is start combining these two.

00:57:32.436 --> 00:57:33.496 A:middle
And we're going to use the

00:57:33.556 --> 00:57:34.836 A:middle
blendWithMask filter.

00:57:34.936 --> 00:57:35.626 A:middle
And this is great.

00:57:35.686 --> 00:57:36.596 A:middle
And we use this throughout the

00:57:36.596 --> 00:57:37.836 A:middle
sample I just showed.

00:57:38.836 --> 00:57:39.866 A:middle
We're going to specify the

00:57:39.866 --> 00:57:41.316 A:middle
background image to be the base

00:57:41.356 --> 00:57:43.286 A:middle
RGB image, which looks like

00:57:43.336 --> 00:57:43.676 A:middle
this.

00:57:44.516 --> 00:57:45.726 A:middle
Next, we're going to specify the

00:57:45.726 --> 00:57:47.406 A:middle
input image, which will be the

00:57:47.406 --> 00:57:49.026 A:middle
foreground image, which is the

00:57:49.026 --> 00:57:51.176 A:middle
image which has the white makeup

00:57:51.176 --> 00:57:51.626 A:middle
applied.

00:57:51.686 --> 00:57:53.326 A:middle
And lastly, we're going to

00:57:53.326 --> 00:57:56.606 A:middle
specify a mask image, which is

00:57:56.836 --> 00:57:58.236 A:middle
the image that I showed

00:57:58.946 --> 00:57:59.396 A:middle
previously.

00:58:00.156 --> 00:58:01.656 A:middle
Given these three inputs, you

00:58:01.656 --> 00:58:03.146 A:middle
can ask the blend filter for its

00:58:03.146 --> 00:58:03.576 A:middle
output.

00:58:04.046 --> 00:58:05.346 A:middle
And the result looks like this.

00:58:06.146 --> 00:58:06.956 A:middle
Now, as you can see, this is

00:58:06.956 --> 00:58:07.796 A:middle
just the starting point.

00:58:07.796 --> 00:58:08.826 A:middle
And you can combine all sorts of

00:58:08.826 --> 00:58:10.936 A:middle
interesting effects to produce

00:58:11.056 --> 00:58:11.856 A:middle
great results in your

00:58:11.856 --> 00:58:12.356 A:middle
application.

00:58:14.916 --> 00:58:16.296 A:middle
Once you're done applying these

00:58:16.296 --> 00:58:17.326 A:middle
effects, you want to save them.

00:58:18.026 --> 00:58:19.826 A:middle
And most typically, you want to

00:58:19.826 --> 00:58:21.946 A:middle
save them as a HEIF or a JPEG

00:58:21.946 --> 00:58:23.376 A:middle
file, which supports saving

00:58:23.646 --> 00:58:25.306 A:middle
auxiliary images as well.

00:58:26.136 --> 00:58:27.096 A:middle
So, in addition to the main

00:58:27.096 --> 00:58:28.906 A:middle
image, you can also store the

00:58:29.046 --> 00:58:30.906 A:middle
semantic segmentation mattes so

00:58:30.906 --> 00:58:32.606 A:middle
that either your application or

00:58:32.606 --> 00:58:34.356 A:middle
other applications can apply

00:58:34.356 --> 00:58:35.266 A:middle
additional effects.

00:58:37.166 --> 00:58:38.116 A:middle
The code for this is very

00:58:38.116 --> 00:58:38.476 A:middle
simple.

00:58:38.686 --> 00:58:40.676 A:middle
You use this Core Image API

00:58:40.676 --> 00:58:43.006 A:middle
writeHEIFRepresentation, and,

00:58:43.166 --> 00:58:45.046 A:middle
typically you specify the main

00:58:45.046 --> 00:58:47.556 A:middle
image, the URL that you want to

00:58:47.556 --> 00:58:48.146 A:middle
save it to.

00:58:48.616 --> 00:58:50.186 A:middle
And then the pixel format that

00:58:50.186 --> 00:58:51.326 A:middle
you want it to be saved as.

00:58:51.686 --> 00:58:52.816 A:middle
And the color space you want it

00:58:52.816 --> 00:58:53.576 A:middle
to be saved as.

00:58:54.126 --> 00:58:55.076 A:middle
And what I want to highlight

00:58:55.076 --> 00:58:57.066 A:middle
today is another set of options

00:58:57.066 --> 00:58:58.406 A:middle
that you can provide when you're

00:58:58.406 --> 00:58:59.226 A:middle
saving the image.

00:58:59.796 --> 00:59:01.446 A:middle
So, for example, you can specify

00:58:59.796 --> 00:59:01.446 A:middle
So, for example, you can specify

00:59:01.446 --> 00:59:03.056 A:middle
the key semantic segmentation

00:59:03.056 --> 00:59:03.656 A:middle
skin matte.

00:59:03.836 --> 00:59:06.456 A:middle
And specify the skin image, or

00:59:06.456 --> 00:59:07.946 A:middle
the hair image, or the teeth

00:59:07.946 --> 00:59:08.286 A:middle
image.

00:59:08.596 --> 00:59:09.936 A:middle
And all four of these images

00:59:09.936 --> 00:59:11.436 A:middle
will be saved into the resulting

00:59:11.966 --> 00:59:13.146 A:middle
HEIF or JPEG file.

00:59:14.386 --> 00:59:15.586 A:middle
Now there's an alternate way of

00:59:15.636 --> 00:59:17.816 A:middle
getting this result, which is if

00:59:17.816 --> 00:59:19.266 A:middle
you want, you can save a main

00:59:19.266 --> 00:59:21.526 A:middle
image and specify the

00:59:21.526 --> 00:59:22.636 A:middle
segmentation mattes as

00:59:22.636 --> 00:59:24.546 A:middle
AVSemanticSegmentationMatte

00:59:24.546 --> 00:59:25.346 A:middle
objects.

00:59:25.556 --> 00:59:26.966 A:middle
This again, the API is very

00:59:26.966 --> 00:59:27.356 A:middle
simple.

00:59:27.656 --> 00:59:30.416 A:middle
You specify the URL, the primary

00:59:30.416 --> 00:59:32.546 A:middle
image, the pixel format, and the

00:59:32.546 --> 00:59:33.206 A:middle
color space.

00:59:33.786 --> 00:59:35.026 A:middle
In this case, if you want to

00:59:35.026 --> 00:59:36.386 A:middle
specify these objects to be

00:59:36.386 --> 00:59:38.676 A:middle
saved in the file, you just say

00:59:38.676 --> 00:59:40.096 A:middle
AVSemanticSegmentationMattes,

00:59:40.096 --> 00:59:41.476 A:middle
and you provide an array of

00:59:41.476 --> 00:59:41.886 A:middle
mattes.

00:59:44.296 --> 00:59:46.576 A:middle
So, that's what you can do using

00:59:46.576 --> 00:59:47.676 A:middle
Core Image with these mattes.

00:59:47.676 --> 00:59:48.876 A:middle
What I've talked about today is

00:59:49.086 --> 00:59:52.096 A:middle
how to create images for mattes,

00:59:52.296 --> 00:59:53.796 A:middle
how to apply filters, and how to

00:59:53.796 --> 00:59:54.336 A:middle
save them.

00:59:54.666 --> 00:59:55.946 A:middle
I will however, mention that the

00:59:56.136 --> 00:59:57.656 A:middle
sample app I showed you has been

00:59:57.656 --> 00:59:59.696 A:middle
written as a Photos app plugin.

01:00:00.116 --> 01:00:01.136 A:middle
And if you want to learn about

01:00:01.136 --> 01:00:02.236 A:middle
how you can do that in your

01:00:02.236 --> 01:00:04.066 A:middle
application so that you can save

01:00:04.066 --> 01:00:05.476 A:middle
these images not just to HEIFs

01:00:05.546 --> 01:00:07.126 A:middle
but also into the user's photo

01:00:07.126 --> 01:00:09.496 A:middle
library, I recommend you consult

01:00:09.496 --> 01:00:11.226 A:middle
these earlier presentations,

01:00:11.476 --> 01:00:12.746 A:middle
especially the introduction to

01:00:12.746 --> 01:00:14.736 A:middle
the photos frameworks from WWDC

01:00:14.736 --> 01:00:16.946 A:middle
in 2014.

01:00:17.556 --> 01:00:18.946 A:middle
All right, and thank you all

01:00:18.946 --> 01:00:19.416 A:middle
very much.

01:00:19.416 --> 01:00:20.506 A:middle
I really look forward to seeing

01:00:20.506 --> 01:00:21.336 A:middle
what you do with these great

01:00:21.336 --> 01:00:21.656 A:middle
features.

01:00:21.656 --> 01:00:21.976 A:middle
Thanks.

01:00:22.516 --> 01:00:25.500 A:middle
[ Applause ]
