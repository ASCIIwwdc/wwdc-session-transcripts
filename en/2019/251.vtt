WEBVTT

00:00:01.516 --> 00:00:05.686 A:middle
[ Music ]

00:00:06.186 --> 00:00:07.966 A:middle
&gt;&gt; Hi, my name is Forest, and

00:00:07.966 --> 00:00:09.166 A:middle
I'm excited to talk to you about

00:00:09.166 --> 00:00:10.916 A:middle
new ways for apps to get runtime

00:00:10.916 --> 00:00:11.726 A:middle
on Apple Watch.

00:00:12.396 --> 00:00:13.406 A:middle
We'll review some of the

00:00:13.406 --> 00:00:15.166 A:middle
existing background modes as

00:00:15.166 --> 00:00:16.686 A:middle
well as the details of a new API

00:00:16.776 --> 00:00:18.506 A:middle
we've added in watchOS 6 to

00:00:18.506 --> 00:00:19.946 A:middle
enable more kinds of apps to get

00:00:19.946 --> 00:00:20.816 A:middle
extended runtime.

00:00:21.176 --> 00:00:22.756 A:middle
Brief interactions are what make

00:00:22.756 --> 00:00:23.796 A:middle
Apple Watch powerful.

00:00:24.636 --> 00:00:25.676 A:middle
You might raise your wrist to

00:00:25.676 --> 00:00:27.526 A:middle
check the time, the temperature,

00:00:27.766 --> 00:00:29.096 A:middle
your calendar or other

00:00:29.096 --> 00:00:30.156 A:middle
information that's clearly

00:00:30.156 --> 00:00:31.446 A:middle
visible on the watch face via

00:00:31.446 --> 00:00:32.415 A:middle
complication.

00:00:33.386 --> 00:00:34.656 A:middle
You might check a notification

00:00:34.656 --> 00:00:36.366 A:middle
from a language learning app.

00:00:36.856 --> 00:00:38.316 A:middle
Beyond that you might launch an

00:00:38.316 --> 00:00:39.896 A:middle
app to track a package, complete

00:00:39.896 --> 00:00:41.236 A:middle
a task or log a meal.

00:00:42.046 --> 00:00:43.216 A:middle
When you lower your wrist after

00:00:43.216 --> 00:00:44.716 A:middle
one of these activities, the app

00:00:44.716 --> 00:00:45.516 A:middle
becomes inactive.

00:00:46.016 --> 00:00:47.336 A:middle
After a short duration the

00:00:47.336 --> 00:00:48.866 A:middle
process is suspended but will

00:00:48.866 --> 00:00:50.426 A:middle
remain frontmost for some time

00:00:50.426 --> 00:00:51.926 A:middle
after meaning that it will

00:00:51.926 --> 00:00:53.286 A:middle
become active if you raise your

00:00:53.286 --> 00:00:54.626 A:middle
wrist during that time.

00:00:55.726 --> 00:00:56.876 A:middle
There are some use cases,

00:00:56.876 --> 00:00:58.566 A:middle
however, where you expect an app

00:00:58.566 --> 00:00:59.856 A:middle
to keep running after you lower

00:00:59.856 --> 00:01:00.646 A:middle
your wrist.

00:00:59.856 --> 00:01:00.646 A:middle
your wrist.

00:01:01.146 --> 00:01:02.596 A:middle
If you start a workout, you

00:01:02.596 --> 00:01:04.056 A:middle
expect Apple Watch to track the

00:01:04.056 --> 00:01:05.116 A:middle
time you've invested in that

00:01:05.116 --> 00:01:06.656 A:middle
workout and you might expect

00:01:06.656 --> 00:01:07.796 A:middle
other data to be collected as

00:01:07.796 --> 00:01:09.536 A:middle
well such as your current heart

00:01:09.536 --> 00:01:11.206 A:middle
rate, distance traveled,

00:01:11.206 --> 00:01:12.906 A:middle
elevation gained, steps per

00:01:12.906 --> 00:01:13.786 A:middle
minute and more.

00:01:14.666 --> 00:01:16.176 A:middle
As a developer, you can create

00:01:16.176 --> 00:01:17.486 A:middle
an app that tracks workouts

00:01:17.486 --> 00:01:18.936 A:middle
using the work API and

00:01:18.936 --> 00:01:19.456 A:middle
HealthKit.

00:01:20.136 --> 00:01:22.096 A:middle
Another obvious reason for an

00:01:22.096 --> 00:01:23.186 A:middle
app to continue running after

00:01:23.386 --> 00:01:24.896 A:middle
you lower your wrist is to play

00:01:24.896 --> 00:01:26.426 A:middle
audio via a connected Bluetooth

00:01:26.426 --> 00:01:26.926 A:middle
device.

00:01:27.646 --> 00:01:28.866 A:middle
You can start an audio session

00:01:28.866 --> 00:01:30.156 A:middle
by calling the background audio

00:01:30.156 --> 00:01:32.626 A:middle
APIs and in watchOS 6 you can

00:01:32.626 --> 00:01:34.446 A:middle
not only play local audio you

00:01:34.446 --> 00:01:36.416 A:middle
can also stream music, podcasts,

00:01:36.416 --> 00:01:37.666 A:middle
sporting events and more.

00:01:38.086 --> 00:01:39.416 A:middle
And, of course when you're

00:01:39.416 --> 00:01:40.996 A:middle
navigating, you need turn by

00:01:40.996 --> 00:01:42.506 A:middle
turn directions to be guided to

00:01:42.506 --> 00:01:43.656 A:middle
your next destination.

00:01:44.166 --> 00:01:45.246 A:middle
If you're building an app that

00:01:45.246 --> 00:01:46.726 A:middle
provides directions, you can

00:01:46.726 --> 00:01:48.046 A:middle
create a navigation session by

00:01:48.046 --> 00:01:49.486 A:middle
using core location APIs.

00:01:49.976 --> 00:01:52.126 A:middle
As we've built APIs around these

00:01:52.126 --> 00:01:53.586 A:middle
background modes over the past

00:01:53.586 --> 00:01:55.206 A:middle
few releases of watchOS, we've

00:01:55.206 --> 00:01:56.506 A:middle
noticed that some apps have

00:01:56.506 --> 00:01:57.996 A:middle
needs for additional runtime but

00:01:57.996 --> 00:01:59.546 A:middle
don't fall into any existing use

00:01:59.546 --> 00:02:00.036 A:middle
cases.

00:01:59.546 --> 00:02:00.036 A:middle
cases.

00:02:01.156 --> 00:02:02.416 A:middle
So now I'd like to hand this

00:02:02.416 --> 00:02:03.766 A:middle
over to Scott Daner to discuss a

00:02:03.766 --> 00:02:05.646 A:middle
new API in watchOS 6, which will

00:02:05.646 --> 00:02:07.196 A:middle
add support for new use cases.

00:02:08.966 --> 00:02:11.106 A:middle
&gt;&gt; Hi, I'm Scott Daner, and I'll

00:02:11.106 --> 00:02:12.436 A:middle
be walking you through the new

00:02:12.436 --> 00:02:13.636 A:middle
extended runtime API.

00:02:14.476 --> 00:02:18.356 A:middle
In watchOS 6, we're enabling new

00:02:18.356 --> 00:02:19.896 A:middle
scenarios through the extended

00:02:19.896 --> 00:02:20.716 A:middle
runtime API.

00:02:21.926 --> 00:02:23.486 A:middle
This API will provide enough

00:02:23.486 --> 00:02:24.906 A:middle
runtime to complete targeted

00:02:24.906 --> 00:02:26.836 A:middle
tasks even after the user lowers

00:02:26.836 --> 00:02:28.236 A:middle
a wrist while preserving

00:02:28.236 --> 00:02:28.716 A:middle
battery.

00:02:29.546 --> 00:02:30.786 A:middle
The extended runtime API

00:02:30.926 --> 00:02:33.816 A:middle
encompasses 5 use cases; self

00:02:33.816 --> 00:02:36.006 A:middle
care, mindfulness, physical

00:02:36.006 --> 00:02:38.416 A:middle
therapy, alarms and health

00:02:38.416 --> 00:02:38.946 A:middle
monitoring.

00:02:39.976 --> 00:02:41.626 A:middle
Each of these use cases has a

00:02:41.626 --> 00:02:42.906 A:middle
corresponding session type.

00:02:43.596 --> 00:02:45.226 A:middle
We've tailored these use cases

00:02:45.226 --> 00:02:46.986 A:middle
to meet the needs of each use

00:02:46.986 --> 00:02:47.326 A:middle
case.

00:02:48.296 --> 00:02:50.606 A:middle
This API is for scenarios that

00:02:50.606 --> 00:02:52.136 A:middle
are not workouts and, thus,

00:02:52.136 --> 00:02:53.366 A:middle
should not impact move and

00:02:53.366 --> 00:02:55.686 A:middle
exercise rings and while some

00:02:55.686 --> 00:02:57.636 A:middle
apps may benefit from monitoring

00:02:57.666 --> 00:02:59.066 A:middle
and reporting on the user's

00:02:59.066 --> 00:03:00.986 A:middle
heart rate, none of the session

00:02:59.066 --> 00:03:00.986 A:middle
heart rate, none of the session

00:03:00.986 --> 00:03:02.596 A:middle
types we're about to talk about

00:03:02.826 --> 00:03:04.336 A:middle
have heart rate monitoring on by

00:03:04.336 --> 00:03:05.746 A:middle
default as workouts do.

00:03:06.866 --> 00:03:07.996 A:middle
We'll go into this in more

00:03:07.996 --> 00:03:09.936 A:middle
detail in a bit but monitoring

00:03:09.936 --> 00:03:11.266 A:middle
user's heart rate is power

00:03:11.266 --> 00:03:13.296 A:middle
intensive so queries for heart

00:03:13.296 --> 00:03:14.536 A:middle
rate should be performed

00:03:14.736 --> 00:03:15.506 A:middle
judiciously.

00:03:16.056 --> 00:03:17.346 A:middle
The first session type we'll

00:03:17.346 --> 00:03:18.896 A:middle
talk about is self care.

00:03:19.726 --> 00:03:21.786 A:middle
Self care apps guide users

00:03:21.786 --> 00:03:23.466 A:middle
through brief activities focused

00:03:23.466 --> 00:03:24.906 A:middle
on the user's health such as

00:03:24.906 --> 00:03:25.516 A:middle
tooth brushing.

00:03:26.756 --> 00:03:28.496 A:middle
A self care session runs for up

00:03:28.496 --> 00:03:30.476 A:middle
to 10 minutes or until the user

00:03:30.476 --> 00:03:32.366 A:middle
exits the app by pressing the

00:03:32.366 --> 00:03:34.016 A:middle
digital crown or switching to

00:03:34.016 --> 00:03:34.576 A:middle
another app.

00:03:34.726 --> 00:03:37.386 A:middle
If the user lowers their wrist,

00:03:37.756 --> 00:03:39.216 A:middle
the screen will turn off, but

00:03:39.216 --> 00:03:40.226 A:middle
the session will continue

00:03:40.226 --> 00:03:41.866 A:middle
running and your process will

00:03:41.866 --> 00:03:42.746 A:middle
not be suspended.

00:03:43.656 --> 00:03:44.836 A:middle
This allows the app to play

00:03:44.836 --> 00:03:46.096 A:middle
sounds and haptics or

00:03:46.096 --> 00:03:46.796 A:middle
communicate with a Bluetooth

00:03:46.826 --> 00:03:46.976 A:middle
device.

00:03:47.046 --> 00:03:50.586 A:middle
Mindfulness apps guide users

00:03:50.586 --> 00:03:51.946 A:middle
through meditation sessions.

00:03:52.626 --> 00:03:54.026 A:middle
Some mindfulness apps are

00:03:54.026 --> 00:03:55.436 A:middle
already getting the runtime they

00:03:55.436 --> 00:03:57.086 A:middle
need by playing audio

00:03:57.086 --> 00:03:58.326 A:middle
continuously throughout the

00:03:58.326 --> 00:04:00.336 A:middle
session and that's fine.

00:03:58.326 --> 00:04:00.336 A:middle
session and that's fine.

00:04:01.216 --> 00:04:02.576 A:middle
The background audio API can be

00:04:02.576 --> 00:04:03.866 A:middle
used for those scenarios.

00:04:04.696 --> 00:04:06.356 A:middle
This use case provides runtime

00:04:06.356 --> 00:04:08.086 A:middle
for meditations where audio is

00:04:08.086 --> 00:04:09.336 A:middle
not played continuously.

00:04:10.926 --> 00:04:12.226 A:middle
Like self care sessions,

00:04:12.556 --> 00:04:14.426 A:middle
mindfulness sessions run until

00:04:14.426 --> 00:04:16.185 A:middle
the user exits the app or the

00:04:16.185 --> 00:04:17.336 A:middle
time limit expires.

00:04:18.185 --> 00:04:19.676 A:middle
For mindfulness sessions the

00:04:19.676 --> 00:04:21.146 A:middle
time limit is 1 hour.

00:04:21.755 --> 00:04:23.956 A:middle
Physical therapy apps guide

00:04:23.956 --> 00:04:25.216 A:middle
users through stretching,

00:04:25.416 --> 00:04:27.176 A:middle
strengthening or range of motion

00:04:27.176 --> 00:04:27.996 A:middle
exercises.

00:04:28.756 --> 00:04:30.286 A:middle
Physical therapy sessions are

00:04:30.286 --> 00:04:31.816 A:middle
designed to give you the runtime

00:04:31.816 --> 00:04:33.456 A:middle
you need to play haptics to

00:04:33.456 --> 00:04:35.026 A:middle
alert the user when it's time to

00:04:35.026 --> 00:04:36.986 A:middle
switch legs, change rotation

00:04:36.986 --> 00:04:38.166 A:middle
direction, et cetera.

00:04:39.706 --> 00:04:41.406 A:middle
These sessions continue to run

00:04:41.406 --> 00:04:42.806 A:middle
in the background if the user

00:04:42.806 --> 00:04:44.426 A:middle
presses the digital crown or

00:04:44.426 --> 00:04:46.526 A:middle
switches to another app to allow

00:04:46.526 --> 00:04:48.016 A:middle
for multitasking when doing

00:04:48.016 --> 00:04:49.196 A:middle
repetitive movements.

00:04:49.776 --> 00:04:51.066 A:middle
This is similar to how workout

00:04:51.066 --> 00:04:51.766 A:middle
sessions behave.

00:04:53.086 --> 00:04:54.616 A:middle
There's a one 1-time limit, but

00:04:54.616 --> 00:04:55.936 A:middle
you should end the session as

00:04:55.936 --> 00:04:57.496 A:middle
soon as the user has finished

00:04:57.496 --> 00:04:58.006 A:middle
the routine.

00:04:59.316 --> 00:05:00.746 A:middle
Remember that physical therapy

00:04:59.316 --> 00:05:00.746 A:middle
Remember that physical therapy

00:05:00.746 --> 00:05:01.916 A:middle
sessions are designed

00:05:01.916 --> 00:05:03.616 A:middle
specifically for activities that

00:05:03.616 --> 00:05:04.626 A:middle
are not workouts.

00:05:05.586 --> 00:05:06.986 A:middle
If your physical therapy app

00:05:06.986 --> 00:05:08.646 A:middle
offers a more strenuous activity

00:05:09.056 --> 00:05:10.706 A:middle
such as riding an exercise bike,

00:05:11.056 --> 00:05:12.566 A:middle
use a workout API for that

00:05:12.566 --> 00:05:13.056 A:middle
activity.

00:05:13.426 --> 00:05:14.936 A:middle
Health monitoring apps get

00:05:14.936 --> 00:05:16.756 A:middle
runtime to monitor the user's

00:05:16.756 --> 00:05:18.456 A:middle
health data such as heart rate

00:05:18.456 --> 00:05:19.066 A:middle
or motion.

00:05:19.716 --> 00:05:21.516 A:middle
Just like today the app must

00:05:21.516 --> 00:05:22.756 A:middle
query for heart rate through

00:05:22.756 --> 00:05:23.806 A:middle
HealthKit APIs.

00:05:24.596 --> 00:05:25.686 A:middle
This will turn on the heart rate

00:05:25.686 --> 00:05:26.706 A:middle
sensor, which will have an

00:05:26.706 --> 00:05:28.576 A:middle
impact on battery life, so

00:05:28.576 --> 00:05:30.516 A:middle
communicating that to your user

00:05:30.516 --> 00:05:31.236 A:middle
is critical.

00:05:31.876 --> 00:05:33.026 A:middle
Because of the potential for

00:05:33.026 --> 00:05:34.936 A:middle
heavy battery impact this type

00:05:34.936 --> 00:05:37.106 A:middle
requires an entitlement and

00:05:37.106 --> 00:05:38.216 A:middle
you'll need to be extra

00:05:38.216 --> 00:05:39.626 A:middle
respectful of the user's

00:05:39.626 --> 00:05:40.006 A:middle
battery.

00:05:41.006 --> 00:05:43.616 A:middle
In order to use this API, you'll

00:05:43.616 --> 00:05:45.036 A:middle
need to add the background modes

00:05:45.036 --> 00:05:46.386 A:middle
capability to your extension

00:05:46.386 --> 00:05:49.826 A:middle
target in Xcode and select an

00:05:49.826 --> 00:05:51.016 A:middle
appropriate session type.

00:05:51.686 --> 00:05:54.586 A:middle
To create a session first create

00:05:54.586 --> 00:05:56.376 A:middle
a WKExtendedRuntimeSession

00:05:56.376 --> 00:05:56.876 A:middle
object.

00:05:57.496 --> 00:05:58.836 A:middle
This will create a session, but

00:05:58.836 --> 00:05:59.836 A:middle
it won't start it yet.

00:06:00.836 --> 00:06:02.906 A:middle
To do that you must set a

00:06:02.906 --> 00:06:04.626 A:middle
delegate on the session and call

00:06:04.626 --> 00:06:05.156 A:middle
start.

00:06:05.816 --> 00:06:07.326 A:middle
Calling start must be done while

00:06:07.326 --> 00:06:08.256 A:middle
the app is active.

00:06:08.416 --> 00:06:10.456 A:middle
After calling start the session

00:06:10.456 --> 00:06:12.066 A:middle
will start immediately and you

00:06:12.066 --> 00:06:13.906 A:middle
will receive a call back noting

00:06:13.906 --> 00:06:15.266 A:middle
that it began successfully.

00:06:16.526 --> 00:06:18.166 A:middle
Finally, you can end the session

00:06:18.166 --> 00:06:19.276 A:middle
by calling invalidate.

00:06:21.276 --> 00:06:23.236 A:middle
And now to talk about alarms I'd

00:06:23.236 --> 00:06:23.976 A:middle
like to bring Forest back.

00:06:24.046 --> 00:06:26.786 A:middle
&gt;&gt; In most cases if an app needs

00:06:26.786 --> 00:06:28.246 A:middle
to alert a user at a specific

00:06:28.246 --> 00:06:29.876 A:middle
time, the best way to do this is

00:06:29.876 --> 00:06:30.776 A:middle
through a notification.

00:06:31.536 --> 00:06:33.066 A:middle
However, there are cases where a

00:06:33.066 --> 00:06:34.566 A:middle
notification is not sufficient

00:06:34.566 --> 00:06:35.736 A:middle
such as waking the user from

00:06:35.736 --> 00:06:36.066 A:middle
sleep.

00:06:36.996 --> 00:06:39.296 A:middle
In this case, the app might want

00:06:39.296 --> 00:06:40.576 A:middle
to get runtime to monitor the

00:06:40.576 --> 00:06:42.676 A:middle
user's heart rate or motion to

00:06:42.676 --> 00:06:43.936 A:middle
determine an optimal time to

00:06:43.936 --> 00:06:44.776 A:middle
play an alarm.

00:06:45.476 --> 00:06:46.756 A:middle
To enable this, we've added the

00:06:46.756 --> 00:06:47.776 A:middle
alarm session type.

00:06:48.586 --> 00:06:50.576 A:middle
Smart alarm sessions allow apps

00:06:50.576 --> 00:06:52.166 A:middle
to schedule a window in which to

00:06:52.166 --> 00:06:53.676 A:middle
begin monitoring for changes in

00:06:53.676 --> 00:06:54.766 A:middle
heart rate or movement.

00:06:55.516 --> 00:06:57.186 A:middle
Alarm sessions are the only type

00:06:57.186 --> 00:06:58.306 A:middle
of session that can be scheduled

00:06:58.306 --> 00:07:00.456 A:middle
in advance up to 36 hours and

00:06:58.306 --> 00:07:00.456 A:middle
in advance up to 36 hours and

00:07:00.456 --> 00:07:01.936 A:middle
can run for up to 30 minutes

00:07:02.046 --> 00:07:02.726 A:middle
once started.

00:07:03.426 --> 00:07:04.716 A:middle
You must play a haptic at least

00:07:04.716 --> 00:07:05.916 A:middle
one time during the course of

00:07:05.916 --> 00:07:07.246 A:middle
the session as your purpose is

00:07:07.246 --> 00:07:08.296 A:middle
to act as an alarm.

00:07:09.596 --> 00:07:11.066 A:middle
If your application is using the

00:07:11.066 --> 00:07:12.446 A:middle
alarm session type, there's one

00:07:12.446 --> 00:07:13.466 A:middle
key difference about how the

00:07:13.466 --> 00:07:14.226 A:middle
session works.

00:07:14.586 --> 00:07:15.826 A:middle
These sessions are scheduled in

00:07:15.826 --> 00:07:16.386 A:middle
advance.

00:07:17.196 --> 00:07:18.646 A:middle
To schedule an alarm session

00:07:18.726 --> 00:07:20.676 A:middle
instead of calling start, call

00:07:20.676 --> 00:07:21.376 A:middle
startAtDate.

00:07:22.066 --> 00:07:23.336 A:middle
This will schedule the alarm to

00:07:23.336 --> 00:07:24.746 A:middle
begin running at a later date.

00:07:25.496 --> 00:07:27.086 A:middle
Also, just as you must call

00:07:27.086 --> 00:07:28.206 A:middle
start when the application is

00:07:28.206 --> 00:07:30.076 A:middle
active startAtDate must also be

00:07:30.076 --> 00:07:31.046 A:middle
called while active.

00:07:31.846 --> 00:07:34.036 A:middle
Later at the time specified the

00:07:34.036 --> 00:07:36.246 A:middle
session will begin and the app

00:07:36.246 --> 00:07:37.246 A:middle
will be launched if it's not

00:07:37.246 --> 00:07:37.556 A:middle
running.

00:07:37.856 --> 00:07:40.196 A:middle
Upon launching the app will

00:07:40.196 --> 00:07:41.356 A:middle
receive a call back on the

00:07:41.356 --> 00:07:42.826 A:middle
extension delegate which passes

00:07:42.826 --> 00:07:43.966 A:middle
the app the running session.

00:07:44.616 --> 00:07:46.056 A:middle
The app must set a delegate on

00:07:46.056 --> 00:07:47.386 A:middle
the session before returning

00:07:47.386 --> 00:07:48.026 A:middle
from this function.

00:07:48.976 --> 00:07:50.516 A:middle
After doing this the app will

00:07:50.516 --> 00:07:51.646 A:middle
receive a call back on the

00:07:51.646 --> 00:07:53.196 A:middle
delegate object saying that the

00:07:53.196 --> 00:07:54.026 A:middle
session has started.

00:07:54.616 --> 00:07:55.956 A:middle
During the time the session is

00:07:55.956 --> 00:07:57.916 A:middle
actively running the app must

00:07:57.916 --> 00:07:58.616 A:middle
play a haptic.

00:07:59.516 --> 00:08:00.896 A:middle
When your app plays a haptic

00:07:59.516 --> 00:08:00.896 A:middle
When your app plays a haptic

00:08:00.896 --> 00:08:02.756 A:middle
during an alarm session if it is

00:08:02.756 --> 00:08:04.536 A:middle
not active, we will show a

00:08:04.536 --> 00:08:05.826 A:middle
system alert indicating that

00:08:05.826 --> 00:08:07.136 A:middle
your app is playing alarm.

00:08:07.736 --> 00:08:09.596 A:middle
If your app fails to play a

00:08:09.596 --> 00:08:10.926 A:middle
haptic during an alarm session,

00:08:10.926 --> 00:08:12.156 A:middle
we will warn the user with this

00:08:12.156 --> 00:08:13.646 A:middle
alert offering to disable the

00:08:13.646 --> 00:08:14.776 A:middle
app's ability to schedule

00:08:14.776 --> 00:08:15.726 A:middle
sessions in the future.

00:08:16.336 --> 00:08:17.556 A:middle
Make sure you're being a good

00:08:17.556 --> 00:08:18.796 A:middle
citizen on the platform.

00:08:19.606 --> 00:08:20.986 A:middle
If you are, your users will

00:08:20.986 --> 00:08:21.716 A:middle
never see this.

00:08:22.076 --> 00:08:23.246 A:middle
We've put a lot of thought into

00:08:23.246 --> 00:08:24.166 A:middle
the parameters of these use

00:08:24.166 --> 00:08:24.656 A:middle
cases.

00:08:24.756 --> 00:08:26.116 A:middle
So please pick a use case that's

00:08:26.116 --> 00:08:27.046 A:middle
appropriate for your app.

00:08:28.006 --> 00:08:29.036 A:middle
Be considerate of the user's

00:08:29.036 --> 00:08:29.696 A:middle
battery life.

00:08:30.136 --> 00:08:31.526 A:middle
End sessions as soon as the user

00:08:31.526 --> 00:08:33.155 A:middle
is done with the activity and be

00:08:33.155 --> 00:08:34.576 A:middle
judicious about querying heart

00:08:34.576 --> 00:08:34.826 A:middle
rate.

00:08:35.166 --> 00:08:36.385 A:middle
This will ensure great battery

00:08:36.385 --> 00:08:37.466 A:middle
life for your users.

00:08:38.426 --> 00:08:40.336 A:middle
For more information, check out

00:08:40.336 --> 00:08:41.206 A:middle
the documentation

00:08:41.366 --> 00:08:42.976 A:middle
@developer.apple.com.
