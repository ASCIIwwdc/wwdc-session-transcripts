WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[ Music ]

00:00:11.516 --> 00:00:16.500 A:middle
[ Applause ]

00:00:20.726 --> 00:00:21.896 A:middle
&gt;&gt; Good afternoon, everyone.

00:00:22.516 --> 00:00:23.706 A:middle
Welcome to the session.

00:00:24.886 --> 00:00:26.446 A:middle
Today, I would like to talk

00:00:26.446 --> 00:00:28.966 A:middle
about multiuser AR in ARKit 3.

00:00:30.056 --> 00:00:31.086 A:middle
My name is Kuen-han.

00:00:31.506 --> 00:00:32.566 A:middle
I'm a ARKit engineer.

00:00:33.166 --> 00:00:35.056 A:middle
I would like to show you all the

00:00:35.056 --> 00:00:36.926 A:middle
enhancement we made in ARKit 3,

00:00:37.326 --> 00:00:39.406 A:middle
so building a multiuser AR app

00:00:39.406 --> 00:00:41.276 A:middle
becomes easy and intuitive.

00:00:42.726 --> 00:00:43.736 A:middle
So, you can focus on all the

00:00:43.736 --> 00:00:45.126 A:middle
amazing content within your app.

00:00:46.386 --> 00:00:47.676 A:middle
Are you interested in bringing

00:00:47.676 --> 00:00:49.096 A:middle
more people to the AR world?

00:00:49.746 --> 00:00:51.176 A:middle
Then, this talk is for you.

00:00:52.246 --> 00:00:52.766 A:middle
Let's begin.

00:00:57.116 --> 00:00:59.286 A:middle
Building a shared AR experience

00:00:59.526 --> 00:01:00.706 A:middle
is about synchronization.

00:00:59.526 --> 00:01:00.706 A:middle
is about synchronization.

00:01:01.546 --> 00:01:03.056 A:middle
Like the SwiftStrike video you

00:01:03.056 --> 00:01:05.236 A:middle
are seeing here, not only we

00:01:05.236 --> 00:01:06.386 A:middle
need to keep tracking the

00:01:06.386 --> 00:01:08.436 A:middle
location of the bowling pin but,

00:01:08.436 --> 00:01:09.686 A:middle
also, we need to track the

00:01:09.686 --> 00:01:11.006 A:middle
location of the user and their

00:01:11.006 --> 00:01:12.116 A:middle
interaction with the ball.

00:01:13.016 --> 00:01:14.856 A:middle
But sometimes, track that

00:01:14.856 --> 00:01:16.986 A:middle
information can be tricky and

00:01:16.986 --> 00:01:18.386 A:middle
complicated to make it right.

00:01:19.146 --> 00:01:21.686 A:middle
And that is what ARKit 3 want to

00:01:21.686 --> 00:01:22.286 A:middle
solve for you.

00:01:23.386 --> 00:01:25.156 A:middle
In ARKit 3, we introduce

00:01:25.236 --> 00:01:26.706 A:middle
collaborative session, which

00:01:26.706 --> 00:01:28.466 A:middle
makes sharing 3D content

00:01:28.466 --> 00:01:29.336 A:middle
location easy.

00:01:29.856 --> 00:01:32.566 A:middle
And with RealityKit, all the

00:01:32.716 --> 00:01:33.966 A:middle
game setups and physics

00:01:33.966 --> 00:01:35.596 A:middle
simulation can be synchronized

00:01:35.596 --> 00:01:36.766 A:middle
automatically under hood.

00:01:37.176 --> 00:01:38.396 A:middle
So, you can focus on your

00:01:38.396 --> 00:01:38.856 A:middle
content.

00:01:39.816 --> 00:01:41.076 A:middle
Let's look at today's agenda.

00:01:43.616 --> 00:01:45.726 A:middle
First, we're going to introduce

00:01:45.896 --> 00:01:47.816 A:middle
the collaborative session, a new

00:01:47.816 --> 00:01:50.156 A:middle
way to build multiuser app in

00:01:50.156 --> 00:01:50.606 A:middle
ARKit 3.

00:01:51.586 --> 00:01:53.436 A:middle
Next, we're going to dive into

00:01:53.506 --> 00:01:55.216 A:middle
some best practices for using

00:01:55.216 --> 00:01:57.436 A:middle
ARAnchors, especially in the

00:01:57.436 --> 00:01:59.236 A:middle
context of multiuser AR.

00:02:00.176 --> 00:02:01.886 A:middle
Last, David is going to

00:02:01.886 --> 00:02:03.376 A:middle
introduce you the SwiftStrike.

00:02:04.246 --> 00:02:06.896 A:middle
By utilizing ARKit 3 and

00:02:07.076 --> 00:02:09.526 A:middle
RealityKit, SwiftStrike provide

00:02:09.526 --> 00:02:11.536 A:middle
a new level of multiuser AR game

00:02:11.536 --> 00:02:12.106 A:middle
experience.

00:02:12.726 --> 00:02:14.436 A:middle
Let's start from collaborative

00:02:14.506 --> 00:02:14.876 A:middle
session.

00:02:17.116 --> 00:02:19.446 A:middle
To begin with, let's recap last

00:02:19.476 --> 00:02:21.216 A:middle
year's multiuser AR feature we

00:02:21.216 --> 00:02:23.946 A:middle
delivered in ARKit 2, Map Save

00:02:24.566 --> 00:02:25.456 A:middle
and Load.

00:02:25.656 --> 00:02:27.256 A:middle
In ARKit 2, we delivered Map

00:02:27.296 --> 00:02:28.926 A:middle
Save and Load which is designed

00:02:29.006 --> 00:02:30.946 A:middle
for persistent AR experience.

00:02:31.376 --> 00:02:33.316 A:middle
The user can record their

00:02:33.316 --> 00:02:34.866 A:middle
current AR experience and

00:02:34.866 --> 00:02:36.516 A:middle
recontinue after loading the

00:02:37.086 --> 00:02:37.246 A:middle
map.

00:02:37.556 --> 00:02:39.126 A:middle
The same feature can also be

00:02:39.126 --> 00:02:40.866 A:middle
used for multiuser AR.

00:02:41.896 --> 00:02:42.796 A:middle
Within this feature, we

00:02:42.796 --> 00:02:43.936 A:middle
introduced a data structure

00:02:43.936 --> 00:02:45.826 A:middle
called the ARWorldMap which

00:02:45.826 --> 00:02:47.796 A:middle
contains map of 3D landmarks

00:02:48.146 --> 00:02:49.566 A:middle
that are used for camera

00:02:49.626 --> 00:02:50.476 A:middle
position tracking.

00:02:50.986 --> 00:02:53.226 A:middle
And also, a list of ARAnchors

00:02:53.506 --> 00:02:55.516 A:middle
which represents the 3D corners

00:02:55.796 --> 00:02:56.886 A:middle
of your virtual content.

00:02:57.706 --> 00:02:59.266 A:middle
Within this example, we have a

00:02:59.356 --> 00:03:01.266 A:middle
tabletop scene and we load the

00:02:59.356 --> 00:03:01.266 A:middle
tabletop scene and we load the

00:03:01.266 --> 00:03:02.576 A:middle
ARWorldMap on top of it.

00:03:02.906 --> 00:03:04.406 A:middle
So, we have several three

00:03:04.406 --> 00:03:05.756 A:middle
landmarks on the table and two

00:03:05.756 --> 00:03:06.476 A:middle
ARAnchors.

00:03:08.196 --> 00:03:10.586 A:middle
When you use this feature for

00:03:10.586 --> 00:03:13.496 A:middle
multiuser AR, each user loaded

00:03:13.616 --> 00:03:15.046 A:middle
from the same ARWorldMap.

00:03:15.796 --> 00:03:17.776 A:middle
Then, ARKit will use the three

00:03:17.776 --> 00:03:19.576 A:middle
landmarks within the ARWorldMap,

00:03:19.806 --> 00:03:21.276 A:middle
try to localize the device

00:03:21.276 --> 00:03:22.856 A:middle
itself against to the map.

00:03:24.006 --> 00:03:25.786 A:middle
Once ARKit managed to do that,

00:03:26.276 --> 00:03:27.986 A:middle
the user can start to see the

00:03:27.986 --> 00:03:29.236 A:middle
same virtual content at the

00:03:29.236 --> 00:03:30.336 A:middle
right physical location.

00:03:31.796 --> 00:03:33.586 A:middle
This feature provides a good

00:03:33.586 --> 00:03:35.076 A:middle
multiuser AR experience.

00:03:35.426 --> 00:03:36.786 A:middle
If you already pre-map the

00:03:36.786 --> 00:03:38.546 A:middle
environment and also have all

00:03:38.546 --> 00:03:40.136 A:middle
the anchors you need saved in

00:03:40.136 --> 00:03:40.916 A:middle
the ARWorldMap.

00:03:41.926 --> 00:03:44.226 A:middle
However, any new information

00:03:44.226 --> 00:03:45.886 A:middle
that ARKit gathered afterwards

00:03:45.966 --> 00:03:47.406 A:middle
won't be shared.

00:03:48.116 --> 00:03:50.106 A:middle
For instance, one of the user

00:03:50.106 --> 00:03:51.896 A:middle
may keep exploring the table on

00:03:51.896 --> 00:03:54.666 A:middle
one side and putting one extra

00:03:54.666 --> 00:03:56.636 A:middle
anchor while the other user

00:03:56.636 --> 00:03:57.256 A:middle
doing the same.

00:03:58.316 --> 00:03:59.956 A:middle
Those newly learned map

00:03:59.956 --> 00:04:01.786 A:middle
information and ARAnchors won't

00:03:59.956 --> 00:04:01.786 A:middle
information and ARAnchors won't

00:04:01.786 --> 00:04:03.306 A:middle
be visible to all the users.

00:04:03.956 --> 00:04:05.836 A:middle
So, that makes this feature as a

00:04:05.836 --> 00:04:07.756 A:middle
one-time sharing AR experience

00:04:08.176 --> 00:04:09.936 A:middle
and is not optimized for unseen

00:04:09.936 --> 00:04:11.686 A:middle
environment beyond the pre-map

00:04:11.686 --> 00:04:12.056 A:middle
area.

00:04:12.146 --> 00:04:15.076 A:middle
And that is what collaborative

00:04:15.076 --> 00:04:16.446 A:middle
session want to solve for you.

00:04:19.516 --> 00:04:21.435 A:middle
Collaborative session is mainly

00:04:21.435 --> 00:04:23.386 A:middle
designed for the live multiuser

00:04:23.386 --> 00:04:24.086 A:middle
AR experience.

00:04:24.776 --> 00:04:26.446 A:middle
All the learned map information

00:04:26.446 --> 00:04:27.746 A:middle
and anchors are shared

00:04:27.746 --> 00:04:29.076 A:middle
continuously throughout the full

00:04:29.076 --> 00:04:29.446 A:middle
session.

00:04:30.086 --> 00:04:32.076 A:middle
That means any user can add

00:04:32.076 --> 00:04:33.876 A:middle
anchor at any point of time and

00:04:33.876 --> 00:04:35.046 A:middle
that will reflect on all the

00:04:35.046 --> 00:04:35.686 A:middle
users' screen.

00:04:35.956 --> 00:04:38.666 A:middle
And also, every user exploring

00:04:38.666 --> 00:04:40.396 A:middle
the map together, that means

00:04:40.496 --> 00:04:42.056 A:middle
they are benefit each other to

00:04:42.056 --> 00:04:44.446 A:middle
have the best tracking and also

00:04:44.446 --> 00:04:45.656 A:middle
most consistent tracking

00:04:45.656 --> 00:04:46.196 A:middle
experience.

00:04:46.686 --> 00:04:48.846 A:middle
That means this feature is

00:04:48.936 --> 00:04:50.656 A:middle
friendly for unseen environment.

00:04:51.026 --> 00:04:52.356 A:middle
You can also use this feature

00:04:52.356 --> 00:04:55.106 A:middle
with or without the map.

00:04:55.106 --> 00:04:57.356 A:middle
In addition, this feature use a

00:04:57.356 --> 00:04:58.896 A:middle
decentralized design with

00:04:58.896 --> 00:05:00.266 A:middle
peer-to-peer communication

00:04:58.896 --> 00:05:00.266 A:middle
peer-to-peer communication

00:05:00.266 --> 00:05:01.566 A:middle
pattern, similar to

00:05:01.566 --> 00:05:02.946 A:middle
MultipeerConnectivity.

00:05:03.416 --> 00:05:05.276 A:middle
Therefore, there is not host

00:05:05.496 --> 00:05:06.876 A:middle
user within the session.

00:05:07.796 --> 00:05:09.436 A:middle
Any user can come join the

00:05:09.496 --> 00:05:11.426 A:middle
session or leave the session at

00:05:11.426 --> 00:05:13.126 A:middle
any point of time without

00:05:13.206 --> 00:05:15.316 A:middle
interrupting others' user AR

00:05:15.316 --> 00:05:16.126 A:middle
experiences.

00:05:17.186 --> 00:05:18.336 A:middle
Let's see one example.

00:05:20.376 --> 00:05:23.426 A:middle
Here, we have two users running

00:05:23.426 --> 00:05:24.916 A:middle
in collaborative sessions.

00:05:25.926 --> 00:05:27.456 A:middle
They both start their own AR

00:05:27.456 --> 00:05:28.126 A:middle
experiences.

00:05:28.226 --> 00:05:30.716 A:middle
At the beginning, they both do a

00:05:30.776 --> 00:05:32.516 A:middle
small world exploration and put

00:05:32.516 --> 00:05:33.646 A:middle
in one ARAnchor.

00:05:33.646 --> 00:05:36.696 A:middle
As the user keeps exploring the

00:05:36.696 --> 00:05:38.456 A:middle
environment, once they start

00:05:38.546 --> 00:05:40.136 A:middle
seeing the area other use have

00:05:40.136 --> 00:05:42.376 A:middle
explored before, the user can

00:05:42.376 --> 00:05:44.216 A:middle
start seeing the ARAnchors added

00:05:44.266 --> 00:05:44.766 A:middle
by others.

00:05:45.236 --> 00:05:46.566 A:middle
In this case, the first user

00:05:46.566 --> 00:05:47.996 A:middle
starts seeing the yellow cube,

00:05:48.166 --> 00:05:49.366 A:middle
while the second user starts

00:05:49.366 --> 00:05:50.386 A:middle
seeing the purple cube.

00:05:50.386 --> 00:05:53.276 A:middle
Afterwards, any anchors that

00:05:53.276 --> 00:05:54.746 A:middle
added by the users will

00:05:54.746 --> 00:05:56.176 A:middle
immediately shows up on the

00:05:56.176 --> 00:05:56.836 A:middle
other's screen.

00:05:58.016 --> 00:06:00.126 A:middle
Because the sharing happens live

00:05:58.016 --> 00:06:00.126 A:middle
Because the sharing happens live

00:06:00.126 --> 00:06:02.006 A:middle
continuously, so there is no

00:06:02.006 --> 00:06:03.736 A:middle
interruption for the users' AR

00:06:03.736 --> 00:06:04.226 A:middle
experience.

00:06:04.346 --> 00:06:06.766 A:middle
And also, even most of the

00:06:06.766 --> 00:06:08.616 A:middle
existing multiuser AR app

00:06:08.616 --> 00:06:10.096 A:middle
requires a host user within the

00:06:10.136 --> 00:06:10.446 A:middle
session.

00:06:11.196 --> 00:06:13.216 A:middle
With collaborative session, now

00:06:13.216 --> 00:06:14.946 A:middle
it enables the new possibility

00:06:14.946 --> 00:06:16.336 A:middle
to build a decentralized

00:06:16.336 --> 00:06:18.336 A:middle
multiuser AR app.

00:06:18.766 --> 00:06:20.626 A:middle
Next, I'm going to dive into

00:06:20.626 --> 00:06:22.116 A:middle
more about this decentralized

00:06:22.116 --> 00:06:23.776 A:middle
design and how does it affect

00:06:24.016 --> 00:06:25.586 A:middle
the current systems within

00:06:25.586 --> 00:06:26.406 A:middle
collaborative session.

00:06:30.236 --> 00:06:31.646 A:middle
In this decentralized design,

00:06:32.206 --> 00:06:34.136 A:middle
there is no host user within the

00:06:34.136 --> 00:06:34.516 A:middle
session.

00:06:34.846 --> 00:06:36.926 A:middle
That means each user can start

00:06:36.966 --> 00:06:38.976 A:middle
their own AR experiences before

00:06:39.306 --> 00:06:41.016 A:middle
they start to receiving each

00:06:41.016 --> 00:06:41.346 A:middle
other.

00:06:41.836 --> 00:06:43.176 A:middle
So, that means each user can

00:06:43.176 --> 00:06:44.026 A:middle
have their own AR world

00:06:44.026 --> 00:06:44.826 A:middle
coordinates.

00:06:45.386 --> 00:06:46.736 A:middle
In this example, we have two

00:06:46.736 --> 00:06:48.256 A:middle
user running collaborative

00:06:48.256 --> 00:06:48.676 A:middle
session.

00:06:49.136 --> 00:06:51.436 A:middle
Each user start doing the small

00:06:51.436 --> 00:06:52.536 A:middle
world exploration and putting

00:06:52.536 --> 00:06:53.976 A:middle
one Anchor on each side of the

00:06:53.976 --> 00:06:54.306 A:middle
table.

00:06:55.516 --> 00:06:58.166 A:middle
Then, within the collaborative

00:06:58.166 --> 00:07:00.726 A:middle
session the ARKit will transmit

00:06:58.166 --> 00:07:00.726 A:middle
session the ARKit will transmit

00:07:00.726 --> 00:07:02.156 A:middle
the so-called the collaboration

00:07:02.156 --> 00:07:03.996 A:middle
data pushes a piece of your

00:07:03.996 --> 00:07:05.506 A:middle
ARWorldMap information to all

00:07:05.506 --> 00:07:07.366 A:middle
the other users and save it as

00:07:07.366 --> 00:07:09.526 A:middle
external maps.

00:07:09.526 --> 00:07:11.816 A:middle
Then, as the user keep exploring

00:07:11.816 --> 00:07:13.806 A:middle
the environment, once they start

00:07:13.806 --> 00:07:15.586 A:middle
to see the same area others have

00:07:15.586 --> 00:07:18.366 A:middle
seen before, ARKit will utilize

00:07:18.946 --> 00:07:21.066 A:middle
those 3D landmarks in the common

00:07:21.066 --> 00:07:23.336 A:middle
area and try to localize itself

00:07:23.336 --> 00:07:24.676 A:middle
against the external map.

00:07:25.306 --> 00:07:26.856 A:middle
When they succeed, those

00:07:26.856 --> 00:07:29.196 A:middle
external maps will merge locally

00:07:29.236 --> 00:07:30.726 A:middle
into each user's local

00:07:30.726 --> 00:07:31.086 A:middle
coordinate.

00:07:32.056 --> 00:07:34.306 A:middle
Note that at this point, user

00:07:34.306 --> 00:07:36.106 A:middle
still have different world

00:07:36.106 --> 00:07:36.496 A:middle
coordinate.

00:07:36.846 --> 00:07:39.286 A:middle
But because ARAnchors is

00:07:39.376 --> 00:07:41.316 A:middle
attached to the map so the user

00:07:41.316 --> 00:07:43.596 A:middle
can still see the virtual object

00:07:43.596 --> 00:07:44.956 A:middle
at the right physical location.

00:07:45.256 --> 00:07:47.926 A:middle
And that is why it is important

00:07:48.096 --> 00:07:50.336 A:middle
to use ARAnchor in collaborative

00:07:50.336 --> 00:07:50.716 A:middle
session.

00:07:52.086 --> 00:07:53.976 A:middle
So, let's take a look how to use

00:07:53.976 --> 00:07:55.996 A:middle
collaborative session in ARKit

00:07:58.116 --> 00:07:58.226 A:middle
3.

00:07:58.436 --> 00:07:59.826 A:middle
In order to use collaborative

00:07:59.826 --> 00:08:01.666 A:middle
session, first you need to make

00:07:59.826 --> 00:08:01.666 A:middle
session, first you need to make

00:08:01.666 --> 00:08:03.176 A:middle
sure all the users are in the

00:08:03.256 --> 00:08:04.366 A:middle
same networking layer.

00:08:05.016 --> 00:08:06.526 A:middle
This networking layer can be

00:08:06.606 --> 00:08:08.866 A:middle
either MultipeerConnectivity or

00:08:08.866 --> 00:08:10.476 A:middle
any other alternative solution

00:08:10.696 --> 00:08:12.186 A:middle
that provides reliable

00:08:12.186 --> 00:08:12.766 A:middle
communication.

00:08:13.916 --> 00:08:15.456 A:middle
Once they are in the same

00:08:15.456 --> 00:08:17.076 A:middle
networking layer, they can

00:08:17.076 --> 00:08:18.346 A:middle
transmit information to each

00:08:18.346 --> 00:08:18.676 A:middle
other.

00:08:19.176 --> 00:08:21.156 A:middle
Then, you simply need to enable

00:08:21.226 --> 00:08:23.006 A:middle
collaboration in your own AR

00:08:23.006 --> 00:08:23.446 A:middle
session.

00:08:24.146 --> 00:08:26.146 A:middle
Once that is enabled, your AR

00:08:26.196 --> 00:08:28.126 A:middle
session will periodically

00:08:28.126 --> 00:08:29.436 A:middle
generate the collaboration data

00:08:29.436 --> 00:08:30.376 A:middle
as I mentioned before.

00:08:30.706 --> 00:08:31.816 A:middle
Then, it is the app's

00:08:31.876 --> 00:08:33.796 A:middle
responsibility to transmit this

00:08:33.796 --> 00:08:35.306 A:middle
data to all the other users.

00:08:35.366 --> 00:08:39.135 A:middle
That is the only new code you

00:08:39.135 --> 00:08:41.366 A:middle
need to add in ARKit 3 in order

00:08:41.366 --> 00:08:42.655 A:middle
to use collaborative session.

00:08:43.126 --> 00:08:44.346 A:middle
Let's take a look.

00:08:46.116 --> 00:08:47.906 A:middle
To begin with, you need to

00:08:47.906 --> 00:08:49.076 A:middle
create a AR world tracking

00:08:49.076 --> 00:08:49.706 A:middle
configuration.

00:08:50.176 --> 00:08:51.806 A:middle
Then, you simply set the

00:08:51.806 --> 00:08:53.936 A:middle
isCollaborationEnabled to true.

00:08:54.636 --> 00:08:57.286 A:middle
Then, you just run a session.run

00:08:57.376 --> 00:08:58.866 A:middle
to run your AR session.

00:08:59.356 --> 00:09:02.006 A:middle
If you are using RealityKit,

00:08:59.356 --> 00:09:02.006 A:middle
If you are using RealityKit,

00:09:02.126 --> 00:09:03.446 A:middle
this is the only new code you

00:09:03.446 --> 00:09:04.766 A:middle
need to add to use collaborative

00:09:04.766 --> 00:09:05.116 A:middle
session.

00:09:05.606 --> 00:09:07.256 A:middle
If you are not using RealityKit,

00:09:07.546 --> 00:09:08.866 A:middle
then you need to implement

00:09:09.386 --> 00:09:10.726 A:middle
additional two delegate

00:09:10.726 --> 00:09:11.926 A:middle
functions to transmit the

00:09:11.926 --> 00:09:12.676 A:middle
collaboration data.

00:09:13.406 --> 00:09:15.396 A:middle
The first delegate function is

00:09:15.396 --> 00:09:15.906 A:middle
ARSession

00:09:15.906 --> 00:09:18.356 A:middle
didOutputcollaborationData.

00:09:18.356 --> 00:09:19.736 A:middle
When your own AR session create

00:09:19.736 --> 00:09:20.696 A:middle
this collaboration data, you

00:09:20.696 --> 00:09:21.856 A:middle
need to transmit to all the

00:09:21.856 --> 00:09:22.526 A:middle
other users.

00:09:22.986 --> 00:09:25.186 A:middle
Here, we have one example using

00:09:25.186 --> 00:09:26.286 A:middle
MultipeerConnectivity.

00:09:27.216 --> 00:09:28.756 A:middle
If your networking solution

00:09:28.936 --> 00:09:30.666 A:middle
replies a failure to transmit

00:09:30.666 --> 00:09:33.026 A:middle
this data, then it is your app's

00:09:33.076 --> 00:09:34.556 A:middle
responsibility to transmit this

00:09:34.556 --> 00:09:36.546 A:middle
data again to make sure the data

00:09:36.546 --> 00:09:37.116 A:middle
is delivered.

00:09:38.316 --> 00:09:40.756 A:middle
Then, once you receive this

00:09:40.756 --> 00:09:43.036 A:middle
data, you simply need to call

00:09:43.096 --> 00:09:44.936 A:middle
arSession.update delegate

00:09:44.936 --> 00:09:47.036 A:middle
function to pass this received

00:09:47.036 --> 00:09:48.896 A:middle
data to your underlying AR

00:09:48.896 --> 00:09:49.256 A:middle
session.

00:09:50.266 --> 00:09:51.536 A:middle
By implementing these two

00:09:51.536 --> 00:09:53.146 A:middle
delegate functions, you complete

00:09:53.146 --> 00:09:54.436 A:middle
the flow to transmit

00:09:54.716 --> 00:09:55.576 A:middle
collaboration data.

00:09:58.316 --> 00:09:59.886 A:middle
Once the collaboration data

00:09:59.886 --> 00:10:01.436 A:middle
transmission is running in the

00:09:59.886 --> 00:10:01.436 A:middle
transmission is running in the

00:10:01.436 --> 00:10:03.076 A:middle
background, the transmission

00:10:03.076 --> 00:10:04.526 A:middle
will happens throughout the

00:10:04.526 --> 00:10:04.926 A:middle
whole session.

00:10:05.896 --> 00:10:07.706 A:middle
Then, for each user, they just

00:10:07.706 --> 00:10:09.196 A:middle
start their own AR experience,

00:10:09.196 --> 00:10:09.766 A:middle
as before.

00:10:09.816 --> 00:10:12.696 A:middle
As I mentioned earlier, the

00:10:12.696 --> 00:10:15.046 A:middle
shared AR experience will begin

00:10:15.046 --> 00:10:16.626 A:middle
after the user can localize

00:10:16.686 --> 00:10:18.426 A:middle
itself against the other user's

00:10:18.426 --> 00:10:18.686 A:middle
map.

00:10:19.546 --> 00:10:21.606 A:middle
When that happen, your own AR

00:10:21.606 --> 00:10:23.066 A:middle
session will start to receive

00:10:23.126 --> 00:10:25.086 A:middle
the first ARAnchors added by

00:10:25.086 --> 00:10:27.226 A:middle
others which can be served as

00:10:27.226 --> 00:10:28.896 A:middle
indication of the beginning of

00:10:28.896 --> 00:10:30.376 A:middle
your shared AR experiences.

00:10:31.496 --> 00:10:32.806 A:middle
Let's look at some new

00:10:32.806 --> 00:10:34.686 A:middle
properties for ARAnchors in

00:10:34.686 --> 00:10:35.506 A:middle
collaborative session.

00:10:35.966 --> 00:10:40.336 A:middle
Within collaborative session,

00:10:40.986 --> 00:10:42.936 A:middle
all the user created ARAnchors

00:10:43.086 --> 00:10:44.656 A:middle
are lifetime are synchronized.

00:10:45.196 --> 00:10:46.736 A:middle
That means the user can add or

00:10:46.736 --> 00:10:48.416 A:middle
remove the anchors at any point

00:10:48.416 --> 00:10:50.076 A:middle
of time and that will reflect to

00:10:50.076 --> 00:10:50.966 A:middle
all the other users.

00:10:50.966 --> 00:10:53.486 A:middle
And also, we add a session

00:10:53.486 --> 00:10:55.686 A:middle
identifier to each ARAnchor

00:10:55.986 --> 00:10:57.976 A:middle
which can be used as a indicator

00:10:57.976 --> 00:11:00.386 A:middle
who is the original creator of

00:10:57.976 --> 00:11:00.386 A:middle
who is the original creator of

00:11:00.426 --> 00:11:02.486 A:middle
this ARAnchor, so your app can

00:11:02.486 --> 00:11:03.426 A:middle
react accordingly.

00:11:03.426 --> 00:11:06.986 A:middle
Last, only the user created

00:11:06.986 --> 00:11:08.106 A:middle
ARAnchors are shared.

00:11:08.166 --> 00:11:10.256 A:middle
That excludes all the subclass

00:11:10.256 --> 00:11:11.706 A:middle
ARAnchors, including

00:11:11.956 --> 00:11:14.166 A:middle
ARImageAnchor, ARPlaneAnchor,

00:11:14.286 --> 00:11:15.346 A:middle
and ARObjectAnchor.

00:11:15.346 --> 00:11:17.746 A:middle
That also excludes the user

00:11:17.746 --> 00:11:19.486 A:middle
subclass ARAnchor which were

00:11:19.486 --> 00:11:21.886 A:middle
used to attach user data within

00:11:21.886 --> 00:11:22.626 A:middle
Map Save and Load.

00:11:22.756 --> 00:11:25.316 A:middle
At the beginning, you may think

00:11:25.436 --> 00:11:27.176 A:middle
this is the drawback of this, of

00:11:27.226 --> 00:11:28.906 A:middle
this collaborative session

00:11:28.906 --> 00:11:29.316 A:middle
design.

00:11:29.586 --> 00:11:30.216 A:middle
But don't worry.

00:11:30.936 --> 00:11:31.996 A:middle
This is where collaborative

00:11:31.996 --> 00:11:33.976 A:middle
session and RealityKit plays

00:11:34.016 --> 00:11:36.346 A:middle
well hand-in-hand.

00:11:36.346 --> 00:11:38.666 A:middle
By using RealityKit, you can

00:11:38.666 --> 00:11:40.446 A:middle
attach your user data to

00:11:40.446 --> 00:11:41.976 A:middle
corresponding entity component.

00:11:42.546 --> 00:11:44.176 A:middle
Once you attach your user entity

00:11:44.216 --> 00:11:45.576 A:middle
to the corresponding ARAnchor,

00:11:45.916 --> 00:11:47.046 A:middle
all those information will be

00:11:47.046 --> 00:11:48.106 A:middle
synchronized under hood,

00:11:48.256 --> 00:11:49.626 A:middle
including all the physical

00:11:50.136 --> 00:11:51.636 A:middle
simulation, scene change, and

00:11:51.636 --> 00:11:52.166 A:middle
sound effects.

00:11:53.156 --> 00:11:54.246 A:middle
For more information, you may

00:11:54.246 --> 00:11:55.826 A:middle
want to check Introducing

00:11:55.826 --> 00:11:57.666 A:middle
RealityKit and Reality Composer

00:11:57.906 --> 00:11:59.356 A:middle
that we present in Tuesday.

00:11:59.836 --> 00:12:03.266 A:middle
So, let's take a look about the

00:11:59.836 --> 00:12:03.266 A:middle
So, let's take a look about the

00:12:03.266 --> 00:12:05.836 A:middle
code, how to use ARAnchor in

00:12:05.836 --> 00:12:09.446 A:middle
collaborative session.

00:12:09.476 --> 00:12:10.706 A:middle
Now, within collaborative

00:12:10.706 --> 00:12:12.116 A:middle
session, when you receive

00:12:12.326 --> 00:12:14.586 A:middle
ARSession didAdd anchor

00:12:14.586 --> 00:12:16.526 A:middle
function, you may want to check

00:12:16.746 --> 00:12:18.326 A:middle
the session identifier to see

00:12:18.326 --> 00:12:20.056 A:middle
whether this anchor is added by

00:12:20.056 --> 00:12:21.636 A:middle
yourself or added by others.

00:12:22.526 --> 00:12:24.476 A:middle
Same thing when you receive the

00:12:24.476 --> 00:12:26.366 A:middle
ARSession didRemove anchor.

00:12:26.676 --> 00:12:27.866 A:middle
You may also want to check

00:12:27.866 --> 00:12:29.176 A:middle
whether it's removed by yourself

00:12:29.176 --> 00:12:31.606 A:middle
or by others, so your app can

00:12:31.606 --> 00:12:32.536 A:middle
react accordingly.

00:12:32.536 --> 00:12:35.716 A:middle
So, that summarize the ARAnchor

00:12:36.146 --> 00:12:37.386 A:middle
which represents the 3D

00:12:37.386 --> 00:12:38.406 A:middle
[inaudible] existence of your

00:12:38.406 --> 00:12:39.056 A:middle
virtual object.

00:12:40.006 --> 00:12:41.516 A:middle
Further, in collaborative

00:12:41.516 --> 00:12:43.646 A:middle
session it's also important to

00:12:43.646 --> 00:12:45.556 A:middle
know other users' position.

00:12:46.126 --> 00:12:47.776 A:middle
For that, we introduce a new

00:12:47.776 --> 00:12:48.676 A:middle
anchor called

00:12:49.216 --> 00:12:50.786 A:middle
ARParticipantAnchor.

00:12:52.136 --> 00:12:54.576 A:middle
ARParticipantAnchor represents

00:12:54.576 --> 00:12:56.486 A:middle
other users' location within

00:12:56.486 --> 00:12:57.696 A:middle
your own world coordinates.

00:12:58.606 --> 00:13:00.566 A:middle
It has a high frame rate update

00:12:58.606 --> 00:13:00.566 A:middle
It has a high frame rate update

00:13:00.566 --> 00:13:02.366 A:middle
rate, same as other users' AR

00:13:02.366 --> 00:13:02.776 A:middle
frame rate.

00:13:04.046 --> 00:13:05.936 A:middle
This ARParticipantAnchor is

00:13:05.936 --> 00:13:08.056 A:middle
ultimately created by your own

00:13:08.056 --> 00:13:09.866 A:middle
AR session when it managed to

00:13:09.866 --> 00:13:11.296 A:middle
localize itself against the

00:13:11.296 --> 00:13:13.516 A:middle
other user's map which means you

00:13:13.516 --> 00:13:14.836 A:middle
can also use this

00:13:14.836 --> 00:13:16.266 A:middle
ARParticipantAnchor as

00:13:16.266 --> 00:13:18.406 A:middle
indication of the beginning of

00:13:18.436 --> 00:13:19.886 A:middle
your shared AR experience.

00:13:21.356 --> 00:13:23.196 A:middle
By using ARAnchor and

00:13:23.196 --> 00:13:25.106 A:middle
ARParticipantAnchor, you can

00:13:25.106 --> 00:13:26.846 A:middle
correctly visualize other users'

00:13:26.926 --> 00:13:28.786 A:middle
3D content in your own world

00:13:28.786 --> 00:13:29.176 A:middle
coordinate.

00:13:29.746 --> 00:13:32.826 A:middle
So, that is how you would use

00:13:32.876 --> 00:13:34.246 A:middle
collaborative session in ARKit

00:13:34.246 --> 00:13:34.516 A:middle
3.

00:13:35.186 --> 00:13:36.646 A:middle
Let's look at some practical

00:13:36.646 --> 00:13:38.916 A:middle
advice how to start a shared AR

00:13:38.916 --> 00:13:40.106 A:middle
experience using collaborative

00:13:40.106 --> 00:13:40.466 A:middle
session.

00:13:43.046 --> 00:13:45.456 A:middle
As I mentioned before, a shared

00:13:45.456 --> 00:13:47.376 A:middle
AR experience will begin after

00:13:47.376 --> 00:13:49.236 A:middle
each users localize their self

00:13:49.236 --> 00:13:50.246 A:middle
in other users' map.

00:13:50.466 --> 00:13:52.026 A:middle
That means they have to see the

00:13:52.026 --> 00:13:53.416 A:middle
area other user have seen

00:13:53.416 --> 00:13:53.776 A:middle
before.

00:13:54.366 --> 00:13:56.146 A:middle
But sometimes, depends on users'

00:13:56.196 --> 00:13:57.806 A:middle
motion, this could take time.

00:13:58.586 --> 00:13:59.826 A:middle
If you want the user to have

00:14:00.146 --> 00:14:01.716 A:middle
shared experience faster, we

00:14:01.716 --> 00:14:02.576 A:middle
have two advice.

00:14:03.766 --> 00:14:05.956 A:middle
First, it is recommended to have

00:14:05.956 --> 00:14:07.626 A:middle
one of the user approach to the

00:14:07.626 --> 00:14:09.076 A:middle
other user to have the same

00:14:09.076 --> 00:14:09.936 A:middle
camera perspective.

00:14:10.616 --> 00:14:12.096 A:middle
For instance, in this example,

00:14:12.336 --> 00:14:13.536 A:middle
we have two users seeing the

00:14:13.596 --> 00:14:15.126 A:middle
table but they are seeing in

00:14:15.126 --> 00:14:15.876 A:middle
cross direction.

00:14:16.336 --> 00:14:19.026 A:middle
Then, it's not likely for ARKit

00:14:19.026 --> 00:14:20.806 A:middle
to localize them self to begin

00:14:20.806 --> 00:14:21.886 A:middle
the shared AR experience.

00:14:22.526 --> 00:14:24.476 A:middle
However, if you have two users

00:14:24.476 --> 00:14:25.766 A:middle
stand side-by-side and looking

00:14:25.766 --> 00:14:27.596 A:middle
at the same direction, then it

00:14:27.596 --> 00:14:29.256 A:middle
is more likely for ARKit to

00:14:29.256 --> 00:14:31.406 A:middle
localize and also to start a

00:14:31.406 --> 00:14:32.866 A:middle
shared AR experience.

00:14:34.016 --> 00:14:36.026 A:middle
Second, while you are doing

00:14:36.026 --> 00:14:38.396 A:middle
this, it is the best to have one

00:14:38.396 --> 00:14:40.316 A:middle
your user stay in map-tracking

00:14:40.376 --> 00:14:40.766 A:middle
status.

00:14:41.136 --> 00:14:42.266 A:middle
That is, ARFrame

00:14:42.266 --> 00:14:43.426 A:middle
WorldMappingStatus mapped.

00:14:44.396 --> 00:14:46.546 A:middle
By doing this, you make sure one

00:14:46.546 --> 00:14:48.206 A:middle
of the user is actually seeing

00:14:48.206 --> 00:14:49.956 A:middle
the 3D landmarks that are stored

00:14:49.956 --> 00:14:51.256 A:middle
inside the ARWorldMap,

00:14:51.636 --> 00:14:53.006 A:middle
therefore, when the other user

00:14:53.006 --> 00:14:55.056 A:middle
approach it is more likely they

00:14:55.056 --> 00:14:56.936 A:middle
can use those three landmarks to

00:14:56.936 --> 00:14:58.376 A:middle
localize them self and start a

00:14:58.376 --> 00:14:59.596 A:middle
shared AR experience.

00:15:00.916 --> 00:15:02.726 A:middle
Let's see one example.

00:15:04.156 --> 00:15:06.526 A:middle
Here, we have two users running

00:15:06.526 --> 00:15:07.556 A:middle
in collaborative session.

00:15:08.036 --> 00:15:10.236 A:middle
The first user simply do a small

00:15:10.236 --> 00:15:12.006 A:middle
world exploration and adding one

00:15:12.006 --> 00:15:13.296 A:middle
ARAnchor and stay in

00:15:13.566 --> 00:15:15.056 A:middle
map-tracking status.

00:15:15.746 --> 00:15:17.516 A:middle
While the other user simply

00:15:17.516 --> 00:15:19.116 A:middle
approach the first user and see

00:15:19.116 --> 00:15:20.636 A:middle
the same view, then they will

00:15:20.636 --> 00:15:22.236 A:middle
start seeing the same anchors

00:15:22.566 --> 00:15:24.696 A:middle
which is used to also indicate

00:15:24.886 --> 00:15:26.506 A:middle
the beginning of your shared AR

00:15:26.506 --> 00:15:27.056 A:middle
experience.

00:15:28.256 --> 00:15:30.546 A:middle
This device is also applicable

00:15:30.546 --> 00:15:32.296 A:middle
for last year Map Save and Load.

00:15:32.616 --> 00:15:34.006 A:middle
So, you may want to put this

00:15:34.006 --> 00:15:35.656 A:middle
advice in your app to recommend

00:15:36.246 --> 00:15:38.106 A:middle
the motion of two user so user

00:15:38.106 --> 00:15:39.656 A:middle
can start their shared AR

00:15:39.656 --> 00:15:41.176 A:middle
experience faster.

00:15:42.096 --> 00:15:43.956 A:middle
So, that summarize our

00:15:43.956 --> 00:15:45.736 A:middle
introduction and suggestion for

00:15:45.736 --> 00:15:47.246 A:middle
using collaborative session.

00:15:47.746 --> 00:15:50.616 A:middle
Our API is simple and intuitive.

00:15:51.376 --> 00:15:53.036 A:middle
With RealityKit, you only need

00:15:53.036 --> 00:15:54.556 A:middle
to add a few lines to enable the

00:15:54.556 --> 00:15:55.116 A:middle
experience.

00:15:55.596 --> 00:15:57.266 A:middle
I encourage you to give it a try

00:15:57.326 --> 00:15:59.606 A:middle
and see the new multiuser AR

00:15:59.606 --> 00:16:00.856 A:middle
experience in ARKit 3.

00:15:59.606 --> 00:16:00.856 A:middle
experience in ARKit 3.

00:16:02.186 --> 00:16:05.216 A:middle
Next, I would like to talk about

00:16:05.276 --> 00:16:07.236 A:middle
the best practices for using

00:16:07.266 --> 00:16:07.956 A:middle
ARAnchors.

00:16:07.956 --> 00:16:12.686 A:middle
As I mentioned before, ARAnchors

00:16:12.836 --> 00:16:14.356 A:middle
are the main way to share

00:16:14.356 --> 00:16:15.816 A:middle
virtual content within

00:16:15.816 --> 00:16:16.646 A:middle
collaborative session.

00:16:17.656 --> 00:16:19.916 A:middle
Here, we have three simple but

00:16:19.916 --> 00:16:22.346 A:middle
effective suggestions for using

00:16:22.346 --> 00:16:22.906 A:middle
ARAnchor.

00:16:23.686 --> 00:16:25.836 A:middle
To begin with, let's look back

00:16:25.836 --> 00:16:27.306 A:middle
the ARWorldMap.

00:16:28.856 --> 00:16:31.116 A:middle
As I mentioned before, each

00:16:31.176 --> 00:16:33.556 A:middle
ARWorldMap consists collection

00:16:33.556 --> 00:16:36.276 A:middle
with 3D map landmarks and, also,

00:16:36.276 --> 00:16:37.546 A:middle
list of ARAnchors.

00:16:38.276 --> 00:16:39.696 A:middle
In addition, we also save

00:16:39.696 --> 00:16:41.536 A:middle
collection of camera poses.

00:16:42.126 --> 00:16:43.806 A:middle
Those camera poses represent the

00:16:43.806 --> 00:16:45.646 A:middle
camera view when three landmarks

00:16:45.706 --> 00:16:46.506 A:middle
are first observed.

00:16:47.116 --> 00:16:48.606 A:middle
For instance, in this example,

00:16:48.606 --> 00:16:50.816 A:middle
we have five camera poses where

00:16:51.016 --> 00:16:52.286 A:middle
they are created when the three

00:16:52.286 --> 00:16:53.966 A:middle
landmarks are first created.

00:16:55.116 --> 00:16:57.676 A:middle
So, with this camera view we can

00:16:57.736 --> 00:16:59.516 A:middle
segment the three landmarks into

00:16:59.516 --> 00:17:00.966 A:middle
different groups to present

00:16:59.516 --> 00:17:00.966 A:middle
different groups to present

00:17:00.966 --> 00:17:03.046 A:middle
different parts of the map.

00:17:03.916 --> 00:17:06.126 A:middle
Once you have those views, when

00:17:06.126 --> 00:17:09.886 A:middle
the user added one ARAnchor, the

00:17:09.886 --> 00:17:11.326 A:middle
user will provide a global

00:17:11.326 --> 00:17:12.816 A:middle
position of this ARAnchor

00:17:13.026 --> 00:17:14.175 A:middle
respect to the world coordinate.

00:17:14.886 --> 00:17:16.856 A:middle
However, what is actually save

00:17:17.036 --> 00:17:19.046 A:middle
within our ARWorldMap is the

00:17:19.046 --> 00:17:20.546 A:middle
relative position of this

00:17:20.546 --> 00:17:22.256 A:middle
ARAnchor to the one of the

00:17:22.256 --> 00:17:22.935 A:middle
nearest view.

00:17:23.596 --> 00:17:26.536 A:middle
It is this relative positions

00:17:26.606 --> 00:17:27.986 A:middle
we're keeping inside the

00:17:27.986 --> 00:17:30.346 A:middle
ARWorldMap and also transmit in

00:17:30.346 --> 00:17:31.446 A:middle
the collaborative session.

00:17:31.726 --> 00:17:33.756 A:middle
To make sure, even if issues are

00:17:33.756 --> 00:17:34.996 A:middle
have different world coordinate,

00:17:35.296 --> 00:17:36.896 A:middle
they still can see the ARAnchor

00:17:37.006 --> 00:17:38.306 A:middle
at the right physical location.

00:17:39.196 --> 00:17:40.666 A:middle
So, once again, that is why it

00:17:40.666 --> 00:17:43.016 A:middle
is important to use ARAnchors in

00:17:43.016 --> 00:17:43.786 A:middle
collaborative session.

00:17:45.286 --> 00:17:46.776 A:middle
With this knowledge in mind,

00:17:47.046 --> 00:17:48.666 A:middle
let's look at our best practices

00:17:48.666 --> 00:17:50.296 A:middle
for using ARAnchor.

00:17:52.476 --> 00:17:55.586 A:middle
First, always respond to the

00:17:55.586 --> 00:17:56.656 A:middle
ARAnchor update.

00:17:56.706 --> 00:17:59.546 A:middle
As AR [inaudible] exploring the

00:17:59.546 --> 00:18:01.246 A:middle
map more and more, it will

00:17:59.546 --> 00:18:01.246 A:middle
map more and more, it will

00:18:01.356 --> 00:18:02.686 A:middle
optimize the 3D landmarks

00:18:02.766 --> 00:18:04.546 A:middle
position by fine-tune the camera

00:18:04.546 --> 00:18:05.346 A:middle
pose location.

00:18:05.896 --> 00:18:08.036 A:middle
When that happen, your ARAnchor

00:18:08.036 --> 00:18:09.426 A:middle
position will change as well

00:18:09.856 --> 00:18:11.116 A:middle
because it is attached to the

00:18:11.116 --> 00:18:11.376 A:middle
view.

00:18:12.216 --> 00:18:14.346 A:middle
So, you need to react to those

00:18:14.346 --> 00:18:15.926 A:middle
anchor update function so you

00:18:15.926 --> 00:18:18.076 A:middle
can change your virtual object

00:18:18.456 --> 00:18:19.426 A:middle
position accordingly.

00:18:20.406 --> 00:18:22.616 A:middle
Second, when you place your

00:18:22.616 --> 00:18:24.116 A:middle
virtual object, it is the best

00:18:24.226 --> 00:18:25.886 A:middle
to place virtual object near to

00:18:25.886 --> 00:18:27.766 A:middle
the ARAnchor but not far away

00:18:27.766 --> 00:18:29.576 A:middle
from the ARAnchor.

00:18:29.576 --> 00:18:30.846 A:middle
The reasoning is the same as

00:18:30.926 --> 00:18:31.366 A:middle
before.

00:18:31.736 --> 00:18:33.146 A:middle
When the anchor update happens,

00:18:33.346 --> 00:18:34.716 A:middle
if you have virtual object far

00:18:34.716 --> 00:18:36.296 A:middle
away from the ARAnchor, then you

00:18:36.296 --> 00:18:37.516 A:middle
could experience a large and

00:18:37.516 --> 00:18:38.866 A:middle
spatial update to your virtual

00:18:38.866 --> 00:18:40.576 A:middle
object which is not desirable.

00:18:41.006 --> 00:18:42.676 A:middle
So, it is the best to place your

00:18:42.676 --> 00:18:44.326 A:middle
virtual object near to the

00:18:44.326 --> 00:18:46.176 A:middle
ARAnchor, so you can represent

00:18:46.176 --> 00:18:47.726 A:middle
the tracking quality correctly.

00:18:47.726 --> 00:18:52.016 A:middle
Last, if you have multiple

00:18:52.016 --> 00:18:53.446 A:middle
independent virtual objects,

00:18:53.906 --> 00:18:55.816 A:middle
then it is recommended to use

00:18:55.816 --> 00:18:57.906 A:middle
multiple ARAnchors so they will

00:18:57.906 --> 00:18:59.326 A:middle
attach to different parts of the

00:18:59.326 --> 00:18:59.676 A:middle
maps.

00:19:00.026 --> 00:19:01.716 A:middle
Therefore, make sure virtual

00:19:01.716 --> 00:19:03.446 A:middle
object to corresponding ARAnchor

00:19:03.446 --> 00:19:04.456 A:middle
distance is small.

00:19:05.576 --> 00:19:07.586 A:middle
However, if you have a scenario

00:19:07.616 --> 00:19:09.306 A:middle
where you have multiple virtual

00:19:09.306 --> 00:19:10.486 A:middle
objects that you want to

00:19:10.486 --> 00:19:12.366 A:middle
maintain their relative

00:19:12.396 --> 00:19:12.836 A:middle
distance.

00:19:13.276 --> 00:19:15.386 A:middle
Then, it is legitimate to use

00:19:15.456 --> 00:19:17.666 A:middle
one single ARAnchor to represent

00:19:17.666 --> 00:19:19.616 A:middle
them all as long as they are not

00:19:19.616 --> 00:19:20.916 A:middle
far away from the anchors.

00:19:21.466 --> 00:19:25.176 A:middle
So, that summarize our best

00:19:25.246 --> 00:19:26.946 A:middle
practices for using ARAnchors.

00:19:27.996 --> 00:19:29.016 A:middle
By following those best

00:19:29.096 --> 00:19:30.956 A:middle
practices, you can utilize the

00:19:30.956 --> 00:19:32.956 A:middle
best tracking quality that ARKit

00:19:32.956 --> 00:19:34.386 A:middle
provides to your app.

00:19:36.496 --> 00:19:38.026 A:middle
Next, we're going to move to

00:19:38.026 --> 00:19:39.486 A:middle
David to talk about SwiftStrike.

00:19:40.411 --> 00:19:42.411 A:middle
[ Applause ]

00:19:42.806 --> 00:19:43.026 A:middle
&gt;&gt; Thanks.

00:19:43.226 --> 00:19:43.456 A:middle
Well done.

00:19:45.136 --> 00:19:45.796 A:middle
Hi, everyone.

00:19:45.876 --> 00:19:47.396 A:middle
I'm David and I'm here to talk

00:19:47.396 --> 00:19:48.926 A:middle
to you about SwiftStrike which

00:19:48.926 --> 00:19:50.426 A:middle
is the new multiplayer AR

00:19:50.426 --> 00:19:52.176 A:middle
experience that we developed for

00:19:52.176 --> 00:19:54.276 A:middle
the show here at WWDC 2019.

00:19:55.136 --> 00:19:56.306 A:middle
We were inspired by the work we

00:19:56.306 --> 00:19:58.196 A:middle
did last year with SwiftShot and

00:19:58.196 --> 00:19:59.666 A:middle
we wanted to build something new

00:19:59.786 --> 00:20:01.446 A:middle
that leveraged RealityKit and

00:19:59.786 --> 00:20:01.446 A:middle
that leveraged RealityKit and

00:20:01.446 --> 00:20:02.676 A:middle
ARKit 3 to deliver an all-new

00:20:02.676 --> 00:20:02.976 A:middle
experience.

00:20:03.246 --> 00:20:05.676 A:middle
We have a Tabletop version

00:20:05.676 --> 00:20:06.826 A:middle
that's available as sample code

00:20:06.826 --> 00:20:07.076 A:middle
now.

00:20:07.476 --> 00:20:08.586 A:middle
And we're working on releasing

00:20:08.586 --> 00:20:09.846 A:middle
the full version as sample code

00:20:09.846 --> 00:20:10.296 A:middle
in the future.

00:20:11.206 --> 00:20:13.656 A:middle
If you want to, you can also go

00:20:13.776 --> 00:20:15.006 A:middle
look at last year's session

00:20:15.006 --> 00:20:15.846 A:middle
about SwiftShot.

00:20:15.846 --> 00:20:16.906 A:middle
I'm going to talk a little bit

00:20:16.906 --> 00:20:18.086 A:middle
about a couple of things we did

00:20:18.086 --> 00:20:20.156 A:middle
in SwiftShot and compare and

00:20:20.156 --> 00:20:21.236 A:middle
contrast what we're doing this

00:20:21.236 --> 00:20:21.396 A:middle
year.

00:20:21.396 --> 00:20:22.226 A:middle
So, you may want to take a look

00:20:22.326 --> 00:20:24.296 A:middle
at that.

00:20:24.296 --> 00:20:25.356 A:middle
Now, there's a lot that goes

00:20:25.356 --> 00:20:26.336 A:middle
into building a game like

00:20:26.336 --> 00:20:26.956 A:middle
SwiftStrike.

00:20:26.986 --> 00:20:28.316 A:middle
There's sound design, asset

00:20:28.316 --> 00:20:30.716 A:middle
design, animations, all kinds of

00:20:30.716 --> 00:20:31.006 A:middle
things.

00:20:31.506 --> 00:20:32.536 A:middle
I'm really going to focus on

00:20:32.536 --> 00:20:33.466 A:middle
three areas here.

00:20:34.266 --> 00:20:35.996 A:middle
How we use RealityKit networking

00:20:36.146 --> 00:20:37.466 A:middle
to get the shared experience up

00:20:37.466 --> 00:20:37.916 A:middle
and running.

00:20:38.406 --> 00:20:40.286 A:middle
The physics simulation to make

00:20:40.286 --> 00:20:41.346 A:middle
sure that the game played and

00:20:41.346 --> 00:20:41.796 A:middle
was fun.

00:20:42.266 --> 00:20:45.206 A:middle
And also, a little bit about how

00:20:45.206 --> 00:20:46.626 A:middle
we designed the game around the

00:20:46.626 --> 00:20:49.216 A:middle
new capabilities of RealityKit

00:20:49.216 --> 00:20:51.376 A:middle
and ARKit 3.

00:20:51.586 --> 00:20:52.666 A:middle
So, first, RealityKit

00:20:52.666 --> 00:20:53.086 A:middle
networking.

00:20:53.756 --> 00:20:55.186 A:middle
RealityKit networking is based

00:20:55.186 --> 00:20:56.176 A:middle
on the entity-component

00:20:56.176 --> 00:20:57.496 A:middle
architecture that's built into

00:20:57.496 --> 00:20:58.126 A:middle
RealityKit.

00:20:58.726 --> 00:20:59.776 A:middle
As you write and change

00:20:59.776 --> 00:21:00.636 A:middle
components, they're

00:20:59.776 --> 00:21:00.636 A:middle
components, they're

00:21:00.636 --> 00:21:01.836 A:middle
automatically synchronized

00:21:01.936 --> 00:21:03.026 A:middle
across the network for you

00:21:03.406 --> 00:21:04.666 A:middle
including all the physics state.

00:21:04.986 --> 00:21:06.126 A:middle
You don't have to do any of that

00:21:06.126 --> 00:21:06.736 A:middle
code yourself.

00:21:07.956 --> 00:21:09.136 A:middle
You can also define custom

00:21:09.136 --> 00:21:12.146 A:middle
components for your own apps,

00:21:12.146 --> 00:21:13.746 A:middle
application, or game, game

00:21:13.746 --> 00:21:14.036 A:middle
logic.

00:21:14.036 --> 00:21:14.926 A:middle
And it will take care of the

00:21:14.926 --> 00:21:15.916 A:middle
synchronization for you, as

00:21:15.916 --> 00:21:16.076 A:middle
well.

00:21:17.146 --> 00:21:18.956 A:middle
It used MultipeerConnectivity as

00:21:18.956 --> 00:21:19.746 A:middle
the network layer.

00:21:19.746 --> 00:21:21.176 A:middle
This is built into all iOS and

00:21:21.176 --> 00:21:22.136 A:middle
macOS devices.

00:21:22.136 --> 00:21:23.606 A:middle
It's easy to set up and get

00:21:23.606 --> 00:21:23.816 A:middle
going.

00:21:25.046 --> 00:21:26.646 A:middle
And it, all you have to do is

00:21:26.646 --> 00:21:27.806 A:middle
create that network session,

00:21:28.106 --> 00:21:29.676 A:middle
hand it to the ARView object,

00:21:29.676 --> 00:21:31.286 A:middle
and it takes care of the rest.

00:21:31.666 --> 00:21:33.076 A:middle
That includes moving the

00:21:33.076 --> 00:21:34.566 A:middle
collaborative mapping data that

00:21:34.566 --> 00:21:35.966 A:middle
Kuen-han talked about with the

00:21:35.966 --> 00:21:37.506 A:middle
new ARKit 3 collaborative

00:21:37.506 --> 00:21:37.766 A:middle
mapping.

00:21:37.946 --> 00:21:42.016 A:middle
And so, in SwiftStrike, we

00:21:42.016 --> 00:21:43.276 A:middle
discovered that the best way to

00:21:43.276 --> 00:21:45.186 A:middle
get things working you know,

00:21:45.586 --> 00:21:46.636 A:middle
MultipeerConnectivity,

00:21:46.636 --> 00:21:49.226 A:middle
RealityKit are all hostless,

00:21:49.426 --> 00:21:51.336 A:middle
true peer-to-peer systems.

00:21:51.706 --> 00:21:52.876 A:middle
We discovered that for our game

00:21:52.876 --> 00:21:53.976 A:middle
to really get things working we

00:21:53.976 --> 00:21:55.436 A:middle
needed to define one device as

00:21:55.466 --> 00:21:55.906 A:middle
the host.

00:21:56.466 --> 00:21:58.216 A:middle
It's the one that keeps track of

00:21:58.216 --> 00:21:59.526 A:middle
what the state of the game is

00:21:59.956 --> 00:22:01.256 A:middle
and how the physics is working.

00:21:59.956 --> 00:22:01.256 A:middle
and how the physics is working.

00:22:01.856 --> 00:22:03.346 A:middle
The other devices participate

00:22:03.346 --> 00:22:05.266 A:middle
and provide input and also

00:22:05.266 --> 00:22:06.576 A:middle
receive the information from the

00:22:06.576 --> 00:22:07.846 A:middle
host about where the game is

00:22:08.486 --> 00:22:08.676 A:middle
running.

00:22:09.996 --> 00:22:11.256 A:middle
So, again, about custom

00:22:11.256 --> 00:22:12.456 A:middle
components in RealityKit.

00:22:12.776 --> 00:22:13.886 A:middle
They're really easy to set up.

00:22:14.436 --> 00:22:17.186 A:middle
You define a struct.

00:22:17.496 --> 00:22:18.476 A:middle
You register the components

00:22:18.476 --> 00:22:19.806 A:middle
before you instantiate the

00:22:19.806 --> 00:22:20.216 A:middle
ARView.

00:22:20.716 --> 00:22:22.096 A:middle
And you comply with the Swift

00:22:22.146 --> 00:22:22.986 A:middle
Codable protocol.

00:22:23.366 --> 00:22:24.226 A:middle
That provides all the

00:22:24.226 --> 00:22:26.146 A:middle
information RealityKit needs to

00:22:26.146 --> 00:22:27.596 A:middle
serialize your structure and

00:22:27.596 --> 00:22:28.506 A:middle
send it across the network.

00:22:29.066 --> 00:22:32.246 A:middle
So, here's one way we use that

00:22:32.246 --> 00:22:34.106 A:middle
in the game.

00:22:34.946 --> 00:22:35.756 A:middle
We've discovered through

00:22:35.756 --> 00:22:37.256 A:middle
playtesting in SwiftStrike, it

00:22:37.256 --> 00:22:38.236 A:middle
was really important to make

00:22:38.236 --> 00:22:39.906 A:middle
sure that both players were

00:22:39.906 --> 00:22:40.916 A:middle
positioned in their starting

00:22:40.916 --> 00:22:42.416 A:middle
spot when the game starts.

00:22:42.786 --> 00:22:43.906 A:middle
Otherwise, it was possible for

00:22:43.906 --> 00:22:44.996 A:middle
one player to get an advantage,

00:22:44.996 --> 00:22:46.566 A:middle
be closer to the ball, and kind

00:22:46.566 --> 00:22:47.936 A:middle
of get around the other user.

00:22:48.926 --> 00:22:50.296 A:middle
So, we have an object we call

00:22:50.296 --> 00:22:50.986 A:middle
the Match object.

00:22:50.986 --> 00:22:52.676 A:middle
It keeps track of whether or not

00:22:52.676 --> 00:22:54.016 A:middle
each player is in the starting

00:22:54.016 --> 00:22:56.096 A:middle
space or not and then, decides

00:22:56.096 --> 00:22:56.866 A:middle
when to launch the ball.

00:22:56.866 --> 00:22:59.316 A:middle
That state is also synchronized

00:22:59.316 --> 00:23:01.026 A:middle
over the clients so that we can

00:22:59.316 --> 00:23:01.026 A:middle
over the clients so that we can

00:23:01.026 --> 00:23:02.546 A:middle
present instructions to them

00:23:02.546 --> 00:23:04.386 A:middle
using UIKit as to where they

00:23:04.386 --> 00:23:04.866 A:middle
need to stand.

00:23:06.056 --> 00:23:07.776 A:middle
The component also maintains a

00:23:07.776 --> 00:23:08.966 A:middle
log of all those states.

00:23:09.356 --> 00:23:10.436 A:middle
There's not many that it goes

00:23:10.436 --> 00:23:11.566 A:middle
through, and it helps ensure

00:23:11.566 --> 00:23:13.236 A:middle
that every client will see every

00:23:13.236 --> 00:23:14.276 A:middle
state as it occurs.

00:23:14.826 --> 00:23:18.126 A:middle
So, here's an example of that in

00:23:18.126 --> 00:23:18.296 A:middle
work.

00:23:19.676 --> 00:23:21.196 A:middle
We wait until both players have

00:23:21.196 --> 00:23:22.656 A:middle
gotten into position before we

00:23:22.656 --> 00:23:23.196 A:middle
launch the ball.

00:23:23.926 --> 00:23:25.786 A:middle
Once they have, the ball

00:23:25.786 --> 00:23:27.896 A:middle
launches and the game begins.

00:23:28.496 --> 00:23:32.256 A:middle
Here's the code that we used to

00:23:32.256 --> 00:23:32.566 A:middle
do that.

00:23:33.256 --> 00:23:34.446 A:middle
First, is the component we

00:23:34.446 --> 00:23:34.766 A:middle
define.

00:23:34.906 --> 00:23:35.856 A:middle
The MatchStateComponent.

00:23:36.416 --> 00:23:38.636 A:middle
It conforms to both the

00:23:38.636 --> 00:23:40.486 A:middle
RealityKit component protocol

00:23:41.296 --> 00:23:42.956 A:middle
and the Swift Codable protocol.

00:23:43.556 --> 00:23:47.126 A:middle
We define a transition within

00:23:47.126 --> 00:23:47.276 A:middle
it.

00:23:47.276 --> 00:23:48.006 A:middle
And there's an array of

00:23:48.006 --> 00:23:48.636 A:middle
transitions.

00:23:48.916 --> 00:23:50.686 A:middle
So, each device gets a full log

00:23:50.776 --> 00:23:52.396 A:middle
of all the Match states as they

00:23:52.396 --> 00:23:52.916 A:middle
go forward.

00:23:53.256 --> 00:23:54.436 A:middle
You can respond appropriately.

00:23:56.396 --> 00:23:58.176 A:middle
Before we get started, we

00:23:58.176 --> 00:24:00.026 A:middle
register our component with AR,

00:23:58.176 --> 00:24:00.026 A:middle
register our component with AR,

00:24:00.106 --> 00:24:01.906 A:middle
with RealityKit so that it is

00:24:01.906 --> 00:24:03.196 A:middle
ready to start synchronizing it.

00:24:03.906 --> 00:24:04.926 A:middle
That's all we need to do.

00:24:05.176 --> 00:24:06.986 A:middle
Now, changes to the component on

00:24:06.986 --> 00:24:08.706 A:middle
the host are automatically

00:24:08.776 --> 00:24:09.816 A:middle
synchronized over to the

00:24:09.816 --> 00:24:10.176 A:middle
clients.

00:24:10.636 --> 00:24:13.936 A:middle
On the client, we, we then use

00:24:13.936 --> 00:24:14.596 A:middle
that.

00:24:14.596 --> 00:24:16.366 A:middle
We create a, a MatchObserver

00:24:16.366 --> 00:24:18.046 A:middle
object that watches that

00:24:18.046 --> 00:24:19.736 A:middle
component for changes and then,

00:24:19.736 --> 00:24:20.876 A:middle
broadcasts them out to all

00:24:20.876 --> 00:24:21.736 A:middle
interested parties.

00:24:22.556 --> 00:24:23.466 A:middle
We're using the combined

00:24:23.506 --> 00:24:24.256 A:middle
framework for this.

00:24:24.336 --> 00:24:25.406 A:middle
It's a great alternative to

00:24:25.406 --> 00:24:27.526 A:middle
using delegation and really

00:24:27.526 --> 00:24:28.826 A:middle
gives you a lot of flexibility.

00:24:29.106 --> 00:24:30.446 A:middle
I'd recommend looking in on some

00:24:30.446 --> 00:24:31.966 A:middle
of the combined sessions from

00:24:31.966 --> 00:24:32.236 A:middle
this year.

00:24:36.046 --> 00:24:37.076 A:middle
So, when we were doing

00:24:37.076 --> 00:24:38.596 A:middle
SwiftStrike, we kind of started

00:24:38.596 --> 00:24:39.636 A:middle
by bringing over a lot of the

00:24:39.636 --> 00:24:40.576 A:middle
code from SwiftShot.

00:24:40.576 --> 00:24:42.646 A:middle
And if you watched the session

00:24:42.646 --> 00:24:43.786 A:middle
from last year, we spent a lot

00:24:43.786 --> 00:24:45.496 A:middle
of time talking about how we

00:24:45.496 --> 00:24:46.746 A:middle
synchronized the physics data,

00:24:46.746 --> 00:24:48.586 A:middle
how we encoded it, how we really

00:24:48.586 --> 00:24:50.016 A:middle
compressed it and made it tight

00:24:50.086 --> 00:24:51.196 A:middle
to limit our network usage.

00:24:51.946 --> 00:24:54.036 A:middle
So, here's a list of most of the

00:24:54.036 --> 00:24:56.176 A:middle
classes or types that we had to

00:24:56.176 --> 00:24:57.766 A:middle
implement that.

00:24:57.766 --> 00:24:59.516 A:middle
Well, RealityKit does the

00:24:59.516 --> 00:25:01.406 A:middle
Physics, PhysicsSync for us.

00:24:59.516 --> 00:25:01.406 A:middle
Physics, PhysicsSync for us.

00:25:01.406 --> 00:25:04.216 A:middle
And using custom components, it

00:25:04.216 --> 00:25:05.596 A:middle
can also synchronize game state

00:25:05.596 --> 00:25:05.976 A:middle
for us.

00:25:07.176 --> 00:25:09.946 A:middle
So, we deleted all of that.

00:25:09.946 --> 00:25:11.266 A:middle
Didn't need it, anymore.

00:25:11.356 --> 00:25:13.306 A:middle
And then, we took a look at the

00:25:13.306 --> 00:25:15.156 A:middle
messages that were left, which

00:25:15.156 --> 00:25:16.536 A:middle
were really only about deciding

00:25:16.536 --> 00:25:17.536 A:middle
whether to use collaborative

00:25:17.536 --> 00:25:18.736 A:middle
mapping or world map sharing to

00:25:18.736 --> 00:25:19.826 A:middle
get the game started.

00:25:19.826 --> 00:25:21.216 A:middle
It only gets set once.

00:25:21.926 --> 00:25:22.676 A:middle
So, they don't need to be

00:25:22.676 --> 00:25:23.646 A:middle
tightly encoded.

00:25:24.396 --> 00:25:27.286 A:middle
So, sad to say, I deleted the

00:25:27.286 --> 00:25:29.366 A:middle
BitStream code.

00:25:29.826 --> 00:25:32.856 A:middle
That's about 1500 lines of code

00:25:33.316 --> 00:25:34.496 A:middle
that we were able to get rid of

00:25:34.496 --> 00:25:36.036 A:middle
and that's lines of code that

00:25:36.036 --> 00:25:36.986 A:middle
you won't have to write,

00:25:36.986 --> 00:25:38.836 A:middle
anymore, thanks to RealityKit

00:25:38.836 --> 00:25:40.336 A:middle
networking, to get your shared

00:25:40.336 --> 00:25:41.846 A:middle
AR experience up and running.

00:25:42.516 --> 00:25:46.500 A:middle
[ Applause ]

00:25:48.046 --> 00:25:49.206 A:middle
Next, let's talk about the

00:25:49.206 --> 00:25:51.756 A:middle
physics simulation itself.

00:25:51.856 --> 00:25:53.376 A:middle
That synchronization, as I said,

00:25:53.376 --> 00:25:55.346 A:middle
is handled by RealityKit using

00:25:55.346 --> 00:25:56.466 A:middle
its built-in physics engine.

00:25:57.436 --> 00:25:58.496 A:middle
On any of these, you can

00:25:58.496 --> 00:26:00.096 A:middle
configure the physics properties

00:25:58.496 --> 00:26:00.096 A:middle
configure the physics properties

00:26:00.146 --> 00:26:02.216 A:middle
by setting up components.

00:26:02.686 --> 00:26:03.836 A:middle
We set up the rigid body.

00:26:03.956 --> 00:26:05.136 A:middle
That defines the shape of the

00:26:05.136 --> 00:26:06.116 A:middle
object in the scene.

00:26:06.606 --> 00:26:08.546 A:middle
You define collision masks that

00:26:08.696 --> 00:26:10.276 A:middle
configure which device, which

00:26:10.276 --> 00:26:11.306 A:middle
objects in your scene can

00:26:11.306 --> 00:26:12.456 A:middle
collide with which other

00:26:12.456 --> 00:26:12.996 A:middle
objects.

00:26:12.996 --> 00:26:15.006 A:middle
And then, also, the additional

00:26:15.006 --> 00:26:16.156 A:middle
physical properties of the

00:26:16.156 --> 00:26:16.526 A:middle
object.

00:26:16.936 --> 00:26:18.376 A:middle
The mass, the friction, the

00:26:18.376 --> 00:26:19.196 A:middle
restitution.

00:26:19.466 --> 00:26:21.726 A:middle
All of those play into getting

00:26:21.726 --> 00:26:22.656 A:middle
that right to get a great

00:26:22.656 --> 00:26:23.366 A:middle
experience.

00:26:23.876 --> 00:26:27.236 A:middle
In SwiftStrike, the host device

00:26:27.266 --> 00:26:28.346 A:middle
owns the simulation.

00:26:28.786 --> 00:26:30.556 A:middle
But the client devices provide

00:26:30.556 --> 00:26:31.866 A:middle
information about where each

00:26:31.866 --> 00:26:33.586 A:middle
individual player is to make the

00:26:33.586 --> 00:26:34.166 A:middle
game happen.

00:26:34.166 --> 00:26:35.086 A:middle
And I'll talk about how that

00:26:35.086 --> 00:26:35.646 A:middle
works, later on.

00:26:35.746 --> 00:26:38.736 A:middle
Now, in SwiftStrike, most of the

00:26:38.736 --> 00:26:39.846 A:middle
objects are pretty simple.

00:26:39.996 --> 00:26:42.206 A:middle
The ball is the sphere, the, the

00:26:42.346 --> 00:26:44.306 A:middle
you know, the play surface is a

00:26:44.356 --> 00:26:44.796 A:middle
plane.

00:26:45.106 --> 00:26:46.516 A:middle
We put walls on the sides to

00:26:46.516 --> 00:26:47.556 A:middle
make sure the ball doesn't fly

00:26:47.556 --> 00:26:47.826 A:middle
out.

00:26:48.766 --> 00:26:50.706 A:middle
But there's one object that we

00:26:50.706 --> 00:26:51.816 A:middle
really needed to get right,

00:26:51.816 --> 00:26:52.566 A:middle
that's a little bit more

00:26:52.566 --> 00:26:53.416 A:middle
complicated than that.

00:26:53.416 --> 00:26:54.756 A:middle
And that's the bowling pin.

00:26:56.276 --> 00:26:57.346 A:middle
You know, really needed this to

00:26:57.346 --> 00:26:58.826 A:middle
bounce true and sound right for

00:26:58.826 --> 00:27:00.296 A:middle
the game to be compelling.

00:26:58.826 --> 00:27:00.296 A:middle
the game to be compelling.

00:27:01.366 --> 00:27:04.216 A:middle
This is the just the wire frame

00:27:04.216 --> 00:27:05.916 A:middle
of the 3D model our technical

00:27:05.916 --> 00:27:07.066 A:middle
art has provided for us.

00:27:07.926 --> 00:27:09.066 A:middle
And this is then updated to make

00:27:09.066 --> 00:27:10.116 A:middle
it really look great when it

00:27:10.116 --> 00:27:10.696 A:middle
renders.

00:27:11.336 --> 00:27:12.686 A:middle
But really, it's far too much

00:27:12.686 --> 00:27:14.166 A:middle
data for the physics simulation.

00:27:14.896 --> 00:27:16.486 A:middle
We wanted to take this and make

00:27:16.486 --> 00:27:18.316 A:middle
it a lot simpler while still

00:27:18.316 --> 00:27:19.946 A:middle
maintaining a great bowling pin

00:27:19.946 --> 00:27:20.446 A:middle
kind of feel.

00:27:21.046 --> 00:27:23.696 A:middle
So, here's kind of what we did

00:27:23.696 --> 00:27:24.666 A:middle
with that.

00:27:24.666 --> 00:27:26.236 A:middle
We used a combination of the

00:27:26.236 --> 00:27:28.006 A:middle
primitive shapes as that's part

00:27:28.006 --> 00:27:28.876 A:middle
of RealityKit because it's

00:27:28.876 --> 00:27:30.326 A:middle
networking the spheres at the

00:27:30.366 --> 00:27:31.156 A:middle
top and in the middle.

00:27:31.656 --> 00:27:33.916 A:middle
And then, we also built convex

00:27:33.916 --> 00:27:36.936 A:middle
hulls around the pin to give it

00:27:37.106 --> 00:27:39.326 A:middle
a base to stand on and, and the

00:27:39.326 --> 00:27:40.506 A:middle
neck to bounce of off other

00:27:40.506 --> 00:27:40.766 A:middle
things.

00:27:41.346 --> 00:27:42.356 A:middle
You know, when you're doing a

00:27:42.356 --> 00:27:43.986 A:middle
physics simulation, you want to

00:27:43.986 --> 00:27:45.256 A:middle
be careful to use primitives

00:27:45.256 --> 00:27:46.136 A:middle
whenever you can.

00:27:46.566 --> 00:27:47.676 A:middle
If you can't, make sure that

00:27:47.676 --> 00:27:49.086 A:middle
your convex hulls are relatively

00:27:49.136 --> 00:27:49.406 A:middle
simple.

00:27:49.636 --> 00:27:50.616 A:middle
This will give you the best

00:27:50.616 --> 00:27:51.246 A:middle
performance.

00:27:52.156 --> 00:27:53.746 A:middle
So, we spent a lot of time

00:27:53.746 --> 00:27:54.616 A:middle
tuning this to get the right

00:27:54.616 --> 00:27:55.176 A:middle
combination.

00:27:55.806 --> 00:27:58.286 A:middle
So here's what that looked like

00:27:58.286 --> 00:27:59.356 A:middle
all together in the data.

00:28:00.326 --> 00:28:02.136 A:middle
But of course, on the court, you

00:28:02.136 --> 00:28:04.306 A:middle
just see the great looking pin

00:28:04.416 --> 00:28:04.846 A:middle
itself.

00:28:05.536 --> 00:28:07.796 A:middle
RealityKit's physically based

00:28:07.796 --> 00:28:09.256 A:middle
rendering really gives a good

00:28:09.256 --> 00:28:11.446 A:middle
shine on it and makes it looks

00:28:11.446 --> 00:28:11.636 A:middle
great.

00:28:12.176 --> 00:28:12.716 A:middle
Thank you.

00:28:13.516 --> 00:28:16.796 A:middle
[ Applause ]

00:28:17.296 --> 00:28:18.496 A:middle
So, last thing, let's talk a

00:28:18.496 --> 00:28:20.206 A:middle
little bit about the game

00:28:20.206 --> 00:28:20.576 A:middle
design.

00:28:20.836 --> 00:28:22.366 A:middle
And that has three areas.

00:28:22.526 --> 00:28:23.736 A:middle
You know, designing for People

00:28:23.736 --> 00:28:26.216 A:middle
Occlusion, building an on-site

00:28:26.216 --> 00:28:28.046 A:middle
experience, and defining a

00:28:28.046 --> 00:28:29.666 A:middle
control mechanism for the game

00:28:29.666 --> 00:28:30.006 A:middle
itself.

00:28:31.536 --> 00:28:33.436 A:middle
When we learned about ARKit 3's

00:28:33.436 --> 00:28:35.026 A:middle
Person Occlusion, we knew right

00:28:35.026 --> 00:28:36.586 A:middle
away that we wanted this year's

00:28:36.586 --> 00:28:38.046 A:middle
game to be a full-size

00:28:38.046 --> 00:28:38.746 A:middle
experience.

00:28:39.106 --> 00:28:40.796 A:middle
And we designed it so that you

00:28:40.896 --> 00:28:42.426 A:middle
see Person Occlusion happening

00:28:42.656 --> 00:28:43.506 A:middle
right from the start.

00:28:44.156 --> 00:28:45.526 A:middle
When you're in starting position

00:28:45.716 --> 00:28:46.836 A:middle
you see the ball in front of

00:28:46.836 --> 00:28:48.556 A:middle
you, you see the other player,

00:28:48.556 --> 00:28:50.196 A:middle
and you see the pins behind the

00:28:50.196 --> 00:28:50.696 A:middle
other player.

00:28:51.136 --> 00:28:52.686 A:middle
Right away, Person Occlusion is

00:28:52.686 --> 00:28:53.516 A:middle
a big part of the game.

00:28:54.556 --> 00:28:56.586 A:middle
Previously, building an AR

00:28:56.586 --> 00:28:58.246 A:middle
experience, you had to kind of

00:28:58.246 --> 00:28:59.476 A:middle
make sure that you didn't get a

00:28:59.476 --> 00:29:01.436 A:middle
person between the camera and

00:28:59.476 --> 00:29:01.436 A:middle
person between the camera and

00:29:01.436 --> 00:29:01.926 A:middle
the content.

00:29:02.236 --> 00:29:03.546 A:middle
And then, so SwiftShot pretty

00:29:03.546 --> 00:29:04.976 A:middle
much had to be a Tabletop game

00:29:04.976 --> 00:29:05.426 A:middle
last year.

00:29:06.836 --> 00:29:08.296 A:middle
With SwiftStrike and Person

00:29:08.296 --> 00:29:10.246 A:middle
Occlusion, now you've got a lot

00:29:10.246 --> 00:29:11.866 A:middle
more possibilities as to how you

00:29:11.866 --> 00:29:12.886 A:middle
want to include the virtual

00:29:12.926 --> 00:29:15.006 A:middle
content in your, in your game.

00:29:15.586 --> 00:29:20.116 A:middle
Now, a full-size game requires a

00:29:20.116 --> 00:29:21.656 A:middle
full-size space to play it in.

00:29:22.266 --> 00:29:22.946 A:middle
So, we worked with the

00:29:22.946 --> 00:29:25.436 A:middle
facilities team and had a custom

00:29:25.436 --> 00:29:26.556 A:middle
floor installed here at the

00:29:26.556 --> 00:29:28.226 A:middle
Convention Center for people to

00:29:28.226 --> 00:29:28.646 A:middle
play on.

00:29:29.386 --> 00:29:31.156 A:middle
The wood flooring not only

00:29:31.156 --> 00:29:33.346 A:middle
evokes a bowling alley but also

00:29:33.346 --> 00:29:34.776 A:middle
provides lots of great feature

00:29:34.776 --> 00:29:36.286 A:middle
points for the ARKit tracking.

00:29:36.876 --> 00:29:38.366 A:middle
So, you get a nice stable

00:29:38.616 --> 00:29:39.066 A:middle
display.

00:29:40.656 --> 00:29:42.536 A:middle
We also used the image on the

00:29:42.536 --> 00:29:43.986 A:middle
logo in the center of the court

00:29:44.346 --> 00:29:45.466 A:middle
to position the gameboard

00:29:45.466 --> 00:29:46.566 A:middle
property properly.

00:29:47.166 --> 00:29:49.856 A:middle
ARKit image anchors are used to

00:29:49.856 --> 00:29:51.326 A:middle
find that location, put the

00:29:51.326 --> 00:29:51.886 A:middle
board there.

00:29:52.016 --> 00:29:53.436 A:middle
So, every time it starts the

00:29:53.436 --> 00:29:55.156 A:middle
game is correctly positioned and

00:29:55.156 --> 00:29:55.976 A:middle
people are ready to go.

00:29:57.376 --> 00:30:00.386 A:middle
Now, for the AR localization,

00:29:57.376 --> 00:30:00.386 A:middle
Now, for the AR localization,

00:30:00.656 --> 00:30:02.276 A:middle
we're using a combination of

00:30:02.276 --> 00:30:04.066 A:middle
ARKit world maps and

00:30:04.106 --> 00:30:04.906 A:middle
collaborative data.

00:30:05.716 --> 00:30:06.976 A:middle
The players start with a world

00:30:06.976 --> 00:30:08.446 A:middle
map on their device that they

00:30:08.446 --> 00:30:09.906 A:middle
load and get localized very

00:30:09.906 --> 00:30:10.316 A:middle
quickly.

00:30:10.636 --> 00:30:12.466 A:middle
And then, they start sharing

00:30:12.466 --> 00:30:14.956 A:middle
collaborative data after that.

00:30:14.956 --> 00:30:17.256 A:middle
So, they get up fast with the

00:30:17.256 --> 00:30:18.836 A:middle
Quick Start and then, maintain

00:30:18.836 --> 00:30:20.586 A:middle
that over time as the devices

00:30:20.586 --> 00:30:22.136 A:middle
share the data about the world

00:30:22.676 --> 00:30:25.376 A:middle
around them.

00:30:25.556 --> 00:30:26.716 A:middle
Finally, let's talk about the

00:30:26.716 --> 00:30:27.496 A:middle
control mechanism.

00:30:28.216 --> 00:30:29.516 A:middle
With SwiftShot last year, we

00:30:29.516 --> 00:30:30.566 A:middle
thought we had a pretty simple

00:30:30.566 --> 00:30:31.366 A:middle
control mechanism.

00:30:31.526 --> 00:30:34.666 A:middle
Right. Just tap to grab, pull to

00:30:34.666 --> 00:30:34.976 A:middle
release.

00:30:36.226 --> 00:30:37.536 A:middle
We made it even simpler this

00:30:37.536 --> 00:30:37.726 A:middle
year.

00:30:37.876 --> 00:30:38.716 A:middle
You don't have to touch the

00:30:38.716 --> 00:30:40.456 A:middle
screen; you just move it to push

00:30:40.506 --> 00:30:40.806 A:middle
the ball.

00:30:41.916 --> 00:30:42.756 A:middle
We discovered through game

00:30:42.756 --> 00:30:44.396 A:middle
playtesting that it was great if

00:30:44.396 --> 00:30:47.126 A:middle
the faster push, faster movement

00:30:47.436 --> 00:30:48.556 A:middle
would mean a bigger push on the

00:30:48.556 --> 00:30:48.866 A:middle
ball.

00:30:48.866 --> 00:30:50.356 A:middle
Give it a kick and make it

00:30:50.356 --> 00:30:51.426 A:middle
really bounce past the other

00:30:51.426 --> 00:30:51.626 A:middle
player.

00:30:52.236 --> 00:30:54.886 A:middle
The other thing we discovered

00:30:54.886 --> 00:30:56.106 A:middle
though in our playtesting was

00:30:56.106 --> 00:30:57.546 A:middle
every once in a while, the ball

00:30:57.546 --> 00:30:58.426 A:middle
would roll right through you.

00:30:58.826 --> 00:30:59.696 A:middle
And that wasn't great.

00:31:00.636 --> 00:31:01.586 A:middle
So, instead, we added an

00:31:01.586 --> 00:31:03.576 A:middle
invisible physics body located

00:31:03.576 --> 00:31:04.386 A:middle
where the player is.

00:31:04.386 --> 00:31:06.916 A:middle
And then, we discovered that we

00:31:06.916 --> 00:31:07.966 A:middle
could just win the game by

00:31:07.966 --> 00:31:09.186 A:middle
running around and knocking over

00:31:09.186 --> 00:31:10.376 A:middle
all the, all the other players'

00:31:10.376 --> 00:31:10.646 A:middle
pins.

00:31:11.836 --> 00:31:13.156 A:middle
So, instead, we're using

00:31:13.156 --> 00:31:14.996 A:middle
collision masks to filter that

00:31:14.996 --> 00:31:15.186 A:middle
out.

00:31:16.076 --> 00:31:17.536 A:middle
The ball will collide with the

00:31:17.576 --> 00:31:19.596 A:middle
pins and with a person, but the

00:31:19.596 --> 00:31:20.976 A:middle
pins and the person won't

00:31:20.976 --> 00:31:21.846 A:middle
collide with each other.

00:31:21.846 --> 00:31:24.386 A:middle
That was some of the ways that

00:31:24.386 --> 00:31:25.946 A:middle
we used the networking system

00:31:25.946 --> 00:31:27.676 A:middle
and the physics to really get,

00:31:27.676 --> 00:31:30.166 A:middle
get a great, great experience.

00:31:31.576 --> 00:31:32.876 A:middle
Now, one of the things that we

00:31:32.876 --> 00:31:34.396 A:middle
needed to solve then, is how do

00:31:34.396 --> 00:31:36.016 A:middle
we get the input from this

00:31:36.016 --> 00:31:38.216 A:middle
device moving around onto the

00:31:38.216 --> 00:31:40.406 A:middle
device while maintaining control

00:31:40.406 --> 00:31:42.086 A:middle
over when the paddle is active

00:31:42.296 --> 00:31:43.986 A:middle
and how much force it's applying

00:31:44.296 --> 00:31:45.076 A:middle
on the host.

00:31:45.296 --> 00:31:47.436 A:middle
And so, we solved this using the

00:31:47.436 --> 00:31:49.136 A:middle
ownership support within

00:31:49.136 --> 00:31:49.806 A:middle
RealityKit.

00:31:50.386 --> 00:31:53.556 A:middle
When the host starts the AR

00:31:53.556 --> 00:31:55.906 A:middle
session, it creates a

00:31:56.106 --> 00:31:58.386 A:middle
AnchorEntity as all content

00:31:58.516 --> 00:32:00.546 A:middle
within RealityKit is all

00:31:58.516 --> 00:32:00.546 A:middle
within RealityKit is all

00:32:00.546 --> 00:32:02.426 A:middle
parented to an AnchorEntity that

00:32:02.426 --> 00:32:03.616 A:middle
the host maintains ownership

00:32:03.616 --> 00:32:03.906 A:middle
over.

00:32:04.956 --> 00:32:07.306 A:middle
When the Client joins, it adds

00:32:07.306 --> 00:32:09.896 A:middle
another entity to the scene that

00:32:09.896 --> 00:32:10.286 A:middle
we call the

00:32:10.286 --> 00:32:12.436 A:middle
PlayerLocationEntity, using the

00:32:12.436 --> 00:32:14.806 A:middle
subclassing support with

00:32:14.806 --> 00:32:15.416 A:middle
RealityKit.

00:32:16.866 --> 00:32:18.436 A:middle
This maintains ownership by the

00:32:18.546 --> 00:32:20.596 A:middle
Client, so the Client can update

00:32:20.596 --> 00:32:22.106 A:middle
its location with every frame.

00:32:22.546 --> 00:32:24.176 A:middle
And that's parented to the

00:32:24.176 --> 00:32:25.616 A:middle
AnchorEntity so it appears in

00:32:25.616 --> 00:32:26.236 A:middle
all the devices.

00:32:26.486 --> 00:32:29.336 A:middle
As a child of that, we add the

00:32:29.396 --> 00:32:30.146 A:middle
PaddleEntity.

00:32:30.246 --> 00:32:33.156 A:middle
And it's parented to the

00:32:33.156 --> 00:32:34.266 A:middle
PlayerLocationEntity.

00:32:34.496 --> 00:32:36.476 A:middle
So, as the player moves around,

00:32:36.896 --> 00:32:38.306 A:middle
the PlayerLocationEntity

00:32:38.306 --> 00:32:39.456 A:middle
location gets updated.

00:32:39.736 --> 00:32:41.366 A:middle
And that moves the PaddleEntity

00:32:41.366 --> 00:32:43.336 A:middle
that the host maintains control

00:32:43.336 --> 00:32:45.296 A:middle
over what, what actions the

00:32:45.296 --> 00:32:46.466 A:middle
PaddleEntity takes.

00:32:46.806 --> 00:32:48.456 A:middle
It can turn it on and off and

00:32:48.456 --> 00:32:49.576 A:middle
make sure that the gameplay

00:32:50.086 --> 00:32:51.256 A:middle
remains fun for everybody.

00:32:52.736 --> 00:32:56.256 A:middle
So, let's look at that, that,

00:32:56.256 --> 00:32:58.556 A:middle
how all that came together with

00:32:58.606 --> 00:33:00.286 A:middle
ARKit 3 and RealityKit to make a

00:32:58.606 --> 00:33:00.286 A:middle
ARKit 3 and RealityKit to make a

00:33:00.286 --> 00:33:01.916 A:middle
great gameplay experience.

00:33:07.176 --> 00:33:08.606 A:middle
Here again, is part of the video

00:33:09.056 --> 00:33:12.216 A:middle
from the State of the Union on

00:33:14.476 --> 00:33:15.556 A:middle
Monday showing everyone playing

00:33:15.556 --> 00:33:15.856 A:middle
the game.

00:33:16.146 --> 00:33:18.006 A:middle
And Adam is, once again, the

00:33:19.056 --> 00:33:19.206 A:middle
winner.

00:33:19.376 --> 00:33:22.546 A:middle
Now, when we, we're building

00:33:22.546 --> 00:33:25.096 A:middle
this, we started to learn about

00:33:25.096 --> 00:33:25.876 A:middle
the other things that were

00:33:25.876 --> 00:33:26.776 A:middle
coming out this year.

00:33:27.086 --> 00:33:28.326 A:middle
And one of those was Dark Mode

00:33:28.326 --> 00:33:28.776 A:middle
in iOS.

00:33:28.866 --> 00:33:31.216 A:middle
And we decided we needed to take

00:33:31.216 --> 00:33:32.026 A:middle
that a step further.

00:33:32.396 --> 00:33:34.736 A:middle
And so, we implemented Cosmic

00:33:34.776 --> 00:33:35.916 A:middle
Mode in SwiftStrike.

00:33:36.596 --> 00:33:37.826 A:middle
We swapped out the assets,

00:33:38.096 --> 00:33:40.136 A:middle
darkened the video feed, and

00:33:40.136 --> 00:33:42.226 A:middle
used some cards with

00:33:42.226 --> 00:33:43.666 A:middle
billboarding effect to really

00:33:43.666 --> 00:33:44.476 A:middle
give a glow effect.

00:33:44.916 --> 00:33:45.976 A:middle
Let's take a look at that.

00:33:50.216 --> 00:33:51.006 A:middle
Here we go.

00:33:51.646 --> 00:33:54.826 A:middle
Took me a few tries to get the

00:33:54.826 --> 00:33:55.596 A:middle
winner on the first try.

00:33:57.516 --> 00:34:02.500 A:middle
[ Applause ]

00:33:57.516 --> 00:34:02.500 A:middle
[ Applause ]

00:34:04.056 --> 00:34:05.036 A:middle
So, that's SwiftStrike.

00:34:06.026 --> 00:34:07.326 A:middle
So, in summary of what we talked

00:34:07.326 --> 00:34:09.255 A:middle
about today, Kuen-han covered

00:34:09.346 --> 00:34:10.735 A:middle
the new collaborative session

00:34:10.735 --> 00:34:13.946 A:middle
sharing feature in ARKit 3 and

00:34:13.946 --> 00:34:15.646 A:middle
how that enables much easier

00:34:15.646 --> 00:34:17.386 A:middle
localization and new shared

00:34:17.386 --> 00:34:18.096 A:middle
experiences.

00:34:18.556 --> 00:34:19.755 A:middle
We talked about the best ways to

00:34:19.755 --> 00:34:21.585 A:middle
use ARAnchors to position

00:34:21.585 --> 00:34:22.896 A:middle
content within your AR

00:34:22.896 --> 00:34:23.436 A:middle
experience.

00:34:23.815 --> 00:34:25.016 A:middle
And then, we talked about

00:34:25.016 --> 00:34:26.656 A:middle
SwiftStrike, our new game for,

00:34:26.726 --> 00:34:27.585 A:middle
for 2019.

00:34:28.966 --> 00:34:30.396 A:middle
We've done a Tabletop version

00:34:30.396 --> 00:34:32.076 A:middle
using Reality Composer and the

00:34:32.076 --> 00:34:33.235 A:middle
source for that is available

00:34:33.235 --> 00:34:33.436 A:middle
now.

00:34:33.436 --> 00:34:35.795 A:middle
You can get more information

00:34:35.795 --> 00:34:37.136 A:middle
about that by looking at the

00:34:37.136 --> 00:34:38.766 A:middle
''Building AR Experiences with

00:34:38.766 --> 00:34:39.926 A:middle
Reality Composer'' session.

00:34:39.926 --> 00:34:41.636 A:middle
And we're planning to release

00:34:41.706 --> 00:34:43.005 A:middle
the codes, the source for the

00:34:43.005 --> 00:34:45.045 A:middle
full version of SwiftStrike with

00:34:45.045 --> 00:34:46.346 A:middle
the features seen.

00:34:47.206 --> 00:34:48.616 A:middle
For more information, you can

00:34:48.616 --> 00:34:49.696 A:middle
look at our URL for this

00:34:49.696 --> 00:34:50.065 A:middle
session.

00:34:50.716 --> 00:34:52.806 A:middle
Kuen-han and I will both be at

00:34:52.806 --> 00:34:54.676 A:middle
the ARKit and RealityKit labs,

00:34:54.676 --> 00:34:55.946 A:middle
immediately after the session at

00:34:55.946 --> 00:34:56.446 A:middle
3:00.

00:34:56.446 --> 00:34:58.316 A:middle
And also, for those of you who

00:34:58.316 --> 00:34:59.376 A:middle
have gotten really good as

00:34:59.376 --> 00:35:00.786 A:middle
SwiftStrike, we're having a

00:34:59.376 --> 00:35:00.786 A:middle
SwiftStrike, we're having a

00:35:00.786 --> 00:35:02.936 A:middle
tournament on Friday at 12:30.

00:35:03.536 --> 00:35:05.076 A:middle
So, we hope you all come and

00:35:05.146 --> 00:35:06.966 A:middle
participate and see that.

00:35:06.966 --> 00:35:07.386 A:middle
Thank you.

00:35:08.516 --> 00:35:11.506 A:middle
[ Applause ]
