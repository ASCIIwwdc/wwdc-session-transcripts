WEBVTT

00:00:01.176 --> 00:00:04.500 A:middle
[ Music ]

00:00:09.516 --> 00:00:15.546 A:middle
[ Applause ]

00:00:16.046 --> 00:00:16.816 A:middle
&gt;&gt; Thank you for joining the

00:00:16.816 --> 00:00:17.246 A:middle
session.

00:00:17.326 --> 00:00:18.356 A:middle
My name is Duy Phan.

00:00:18.526 --> 00:00:19.916 A:middle
I'm here with Yilok and Meghna

00:00:20.306 --> 00:00:21.326 A:middle
to talk to you about what's new

00:00:21.326 --> 00:00:21.936 A:middle
in Core Bluetooth.

00:00:22.496 --> 00:00:24.946 A:middle
I'll start with an introduction.

00:00:25.466 --> 00:00:28.136 A:middle
Then LE 2 Mbps and advertising

00:00:28.136 --> 00:00:28.696 A:middle
extension.

00:00:29.256 --> 00:00:30.586 A:middle
Then provide an overview for

00:00:30.586 --> 00:00:32.136 A:middle
Core Bluetooth for BR/EDR

00:00:32.136 --> 00:00:32.716 A:middle
devices.

00:00:32.946 --> 00:00:33.806 A:middle
Then Core Bluetooth for

00:00:33.806 --> 00:00:35.686 A:middle
dual-mode, user privacy,

00:00:35.786 --> 00:00:37.316 A:middle
developer tools, then wrap up

00:00:37.316 --> 00:00:38.396 A:middle
with a summary.

00:00:38.966 --> 00:00:41.116 A:middle
Let's start with the

00:00:41.116 --> 00:00:41.806 A:middle
introduction.

00:00:42.366 --> 00:00:44.866 A:middle
For those in the audience that's

00:00:44.866 --> 00:00:46.726 A:middle
new to Core Bluetooth, the Core

00:00:46.726 --> 00:00:48.316 A:middle
Bluetooth framework is our

00:00:48.316 --> 00:00:49.856 A:middle
abstraction of the Bluetooth low

00:00:49.856 --> 00:00:51.576 A:middle
energy specification and

00:00:51.576 --> 00:00:52.006 A:middle
hardware.

00:00:52.536 --> 00:00:54.116 A:middle
We provide our developers an

00:00:54.116 --> 00:00:57.196 A:middle
easy and robust way to develop

00:00:57.196 --> 00:00:58.746 A:middle
applications that can interact

00:00:58.746 --> 00:01:00.966 A:middle
with Bluetooth low energy

00:00:58.746 --> 00:01:00.966 A:middle
with Bluetooth low energy

00:01:00.966 --> 00:01:02.396 A:middle
devices, and since the

00:01:02.396 --> 00:01:04.056 A:middle
introduction of the framework,

00:01:04.516 --> 00:01:05.966 A:middle
we've seen an amazing number of

00:01:05.966 --> 00:01:07.306 A:middle
accessories and applications.

00:01:08.586 --> 00:01:09.736 A:middle
We've seen everything from

00:01:09.736 --> 00:01:12.046 A:middle
health and fitness devices to

00:01:12.096 --> 00:01:14.016 A:middle
indoor locationing and item

00:01:14.016 --> 00:01:17.776 A:middle
finding to creative tools, toys

00:01:17.776 --> 00:01:20.366 A:middle
and accessories for kids, things

00:01:20.366 --> 00:01:22.526 A:middle
for the home, appliances, and

00:01:22.526 --> 00:01:23.956 A:middle
even everyday items like

00:01:24.226 --> 00:01:25.146 A:middle
Bluetooth controlled water

00:01:25.146 --> 00:01:25.926 A:middle
bottles and mugs.

00:01:26.406 --> 00:01:27.806 A:middle
Our developers' creativity and

00:01:27.806 --> 00:01:29.396 A:middle
hard work have really made the

00:01:29.396 --> 00:01:30.246 A:middle
Bluetooth low everything

00:01:30.246 --> 00:01:32.466 A:middle
ecosystem a very vibrant and

00:01:32.466 --> 00:01:34.056 A:middle
innovative space, thank you.

00:01:35.516 --> 00:01:38.926 A:middle
[ Applause ]

00:01:39.426 --> 00:01:40.656 A:middle
But there's more.

00:01:41.996 --> 00:01:43.796 A:middle
There exists an entire class of

00:01:43.796 --> 00:01:45.536 A:middle
Bluetooth devices that are also

00:01:45.536 --> 00:01:47.166 A:middle
thriving and growing, but we

00:01:47.166 --> 00:01:48.636 A:middle
often don't talk about them here

00:01:48.706 --> 00:01:49.876 A:middle
because they don't support the

00:01:49.876 --> 00:01:50.876 A:middle
Core Bluetooth framework.

00:01:51.576 --> 00:01:53.076 A:middle
These are Bluetooth BR/EDR

00:01:53.076 --> 00:01:55.706 A:middle
devices, and they include

00:01:56.046 --> 00:01:57.316 A:middle
accessories like your favorite

00:01:57.316 --> 00:01:59.326 A:middle
audio streaming devices, in-car

00:01:59.326 --> 00:02:00.386 A:middle
entertainment systems with

00:01:59.326 --> 00:02:00.386 A:middle
entertainment systems with

00:02:00.386 --> 00:02:03.326 A:middle
hands-free calling and various

00:02:03.326 --> 00:02:04.436 A:middle
accessories like mouse and

00:02:04.436 --> 00:02:05.406 A:middle
keyboards and game pads.

00:02:06.176 --> 00:02:07.766 A:middle
What's been missing is a way for

00:02:07.766 --> 00:02:09.376 A:middle
our Core Bluetooth developers to

00:02:09.376 --> 00:02:11.236 A:middle
develop applications that can

00:02:11.236 --> 00:02:14.266 A:middle
interact with these devices.

00:02:14.356 --> 00:02:15.486 A:middle
Until now.

00:02:16.046 --> 00:02:17.306 A:middle
This year we are adding Core

00:02:17.306 --> 00:02:18.596 A:middle
Bluetooth support for BR/EDR

00:02:18.596 --> 00:02:18.976 A:middle
devices.

00:02:19.366 --> 00:02:21.366 A:middle
[ Applause ]

00:02:21.716 --> 00:02:21.976 A:middle
Thank you.

00:02:22.491 --> 00:02:24.491 A:middle
[ Applause ]

00:02:24.966 --> 00:02:26.676 A:middle
This means that Core Bluetooth

00:02:26.676 --> 00:02:29.186 A:middle
can now reach out and interact

00:02:29.186 --> 00:02:30.186 A:middle
with all of your favorite

00:02:30.296 --> 00:02:32.026 A:middle
Bluetooth devices regardless of

00:02:32.026 --> 00:02:32.876 A:middle
what transport they run.

00:02:33.786 --> 00:02:35.196 A:middle
In addition, we added various

00:02:35.196 --> 00:02:37.006 A:middle
dual-mode features, so the two

00:02:37.006 --> 00:02:38.456 A:middle
transport works even better when

00:02:38.456 --> 00:02:38.966 A:middle
they're together.

00:02:39.326 --> 00:02:42.526 A:middle
We hope that our developers will

00:02:42.526 --> 00:02:43.626 A:middle
take advantage of these

00:02:43.626 --> 00:02:45.526 A:middle
features, and we look forward to

00:02:45.526 --> 00:02:46.316 A:middle
seeing all of the new

00:02:46.676 --> 00:02:48.026 A:middle
accessories and applications you

00:02:48.026 --> 00:02:48.296 A:middle
build.

00:02:48.946 --> 00:02:52.366 A:middle
So, this year we really have

00:02:52.466 --> 00:02:53.726 A:middle
three major driving themes.

00:02:54.516 --> 00:02:56.286 A:middle
The first is, as always, to

00:02:56.286 --> 00:02:58.596 A:middle
improve our core technology but

00:02:58.596 --> 00:03:00.436 A:middle
also to protect our user privacy

00:02:58.596 --> 00:03:00.436 A:middle
also to protect our user privacy

00:03:01.476 --> 00:03:03.056 A:middle
and enable our developers with

00:03:03.056 --> 00:03:03.736 A:middle
better tools.

00:03:05.086 --> 00:03:07.216 A:middle
Let's get started with

00:03:07.366 --> 00:03:08.176 A:middle
improvements to our core

00:03:08.176 --> 00:03:11.426 A:middle
technology and LE 2 megabits.

00:03:12.236 --> 00:03:16.366 A:middle
LE 2 Mbps is a new feature in

00:03:16.366 --> 00:03:17.336 A:middle
Bluetooth 5.0.

00:03:18.516 --> 00:03:20.576 A:middle
The physical layer rate or radio

00:03:20.576 --> 00:03:22.646 A:middle
rate can increase now from 1 to

00:03:22.646 --> 00:03:24.126 A:middle
2 Mbps between compatible

00:03:24.126 --> 00:03:24.596 A:middle
devices.

00:03:26.286 --> 00:03:27.956 A:middle
This means that with the same

00:03:27.956 --> 00:03:29.186 A:middle
amount of airtime, Core

00:03:29.186 --> 00:03:30.626 A:middle
Bluetooth can now transmit twice

00:03:30.666 --> 00:03:31.936 A:middle
the number of bits, so your

00:03:31.936 --> 00:03:33.036 A:middle
connections are not only faster,

00:03:33.036 --> 00:03:33.666 A:middle
they're also more power

00:03:33.666 --> 00:03:33.936 A:middle
efficient.

00:03:37.016 --> 00:03:39.336 A:middle
This is better yet transparent

00:03:39.336 --> 00:03:40.086 A:middle
to the application.

00:03:40.436 --> 00:03:41.636 A:middle
We will handle all of the link

00:03:41.636 --> 00:03:43.136 A:middle
layer negotiations for you based

00:03:43.136 --> 00:03:44.846 A:middle
on the platform you're on.

00:03:45.456 --> 00:03:46.546 A:middle
But remember, if you're

00:03:46.546 --> 00:03:48.056 A:middle
developing an accessory, your

00:03:48.056 --> 00:03:50.446 A:middle
accessory must also support LE 2

00:03:50.546 --> 00:03:51.646 A:middle
Mbps for this to work.

00:03:52.796 --> 00:03:54.596 A:middle
This is available now starting

00:03:54.596 --> 00:03:56.706 A:middle
with iPhone 8, 8 Plus, iPhone X,

00:03:57.046 --> 00:03:59.606 A:middle
Apple TV 4K, and the Apple Watch

00:03:59.606 --> 00:04:00.146 A:middle
Series 4.

00:03:59.606 --> 00:04:00.146 A:middle
Series 4.

00:04:00.626 --> 00:04:04.446 A:middle
And here I have an illustration

00:04:04.526 --> 00:04:07.546 A:middle
of Bluetooth 1 Mbps in various

00:04:07.546 --> 00:04:07.816 A:middle
modes.

00:04:08.506 --> 00:04:13.006 A:middle
And I've added LE 2 Mbps to show

00:04:13.006 --> 00:04:15.436 A:middle
the [applause], thank you, to

00:04:15.956 --> 00:04:17.466 A:middle
show the leap forward in

00:04:17.466 --> 00:04:17.935 A:middle
performance.

00:04:23.356 --> 00:04:24.466 A:middle
Also new for this year we've

00:04:24.466 --> 00:04:25.886 A:middle
added advertising extension.

00:04:27.676 --> 00:04:29.596 A:middle
Advertising extension is a

00:04:29.596 --> 00:04:30.916 A:middle
Bluetooth 5.0 feature.

00:04:32.096 --> 00:04:33.536 A:middle
It essentially improves upon

00:04:33.536 --> 00:04:35.816 A:middle
three main points for

00:04:35.816 --> 00:04:36.466 A:middle
advertising.

00:04:36.626 --> 00:04:37.806 A:middle
The first is it eases the

00:04:37.806 --> 00:04:39.296 A:middle
congestion on the three

00:04:39.506 --> 00:04:41.366 A:middle
advertising channel by sending a

00:04:41.366 --> 00:04:43.046 A:middle
smaller payload on the

00:04:43.046 --> 00:04:45.566 A:middle
advertising channel, then

00:04:45.566 --> 00:04:46.976 A:middle
jumping to the more spacious

00:04:46.976 --> 00:04:48.526 A:middle
data channel to transmit a much

00:04:48.526 --> 00:04:49.316 A:middle
larger payload.

00:04:49.946 --> 00:04:53.666 A:middle
Up now from 31 to 255 bytes, and

00:04:53.666 --> 00:04:55.076 A:middle
the transmission rate itself can

00:04:55.076 --> 00:04:57.506 A:middle
now be in LE 2 Mbps.

00:04:59.536 --> 00:05:01.056 A:middle
Core Bluetooth will support

00:04:59.536 --> 00:05:01.056 A:middle
Core Bluetooth will support

00:05:01.056 --> 00:05:02.076 A:middle
extended scan this year.

00:05:03.726 --> 00:05:05.006 A:middle
This means that we can scan now

00:05:05.006 --> 00:05:06.466 A:middle
for the extended advertisements

00:05:06.466 --> 00:05:09.396 A:middle
that I've just mentioned, but we

00:05:09.606 --> 00:05:12.126 A:middle
will only scan for our extended

00:05:12.126 --> 00:05:13.006 A:middle
advertisements that are

00:05:13.006 --> 00:05:14.946 A:middle
transmitted in LE 2 Mbps.

00:05:15.596 --> 00:05:16.836 A:middle
So, if you're developing an

00:05:16.836 --> 00:05:18.356 A:middle
accessory, your accessory must

00:05:18.356 --> 00:05:19.636 A:middle
also support extended

00:05:19.636 --> 00:05:21.776 A:middle
advertisement with LE 2 Mbps.

00:05:24.116 --> 00:05:26.206 A:middle
We now support extended

00:05:26.206 --> 00:05:28.436 A:middle
advertisement payloads up to 124

00:05:29.326 --> 00:05:29.456 A:middle
bytes.

00:05:30.296 --> 00:05:32.516 A:middle
This is four times the amount of

00:05:32.516 --> 00:05:33.856 A:middle
advertisement data that an

00:05:33.856 --> 00:05:37.746 A:middle
accessory can send us today.

00:05:37.946 --> 00:05:38.966 A:middle
This is again transparent to

00:05:38.966 --> 00:05:39.606 A:middle
your application.

00:05:40.206 --> 00:05:41.516 A:middle
You can use the same scan API,

00:05:41.776 --> 00:05:42.576 A:middle
scan filters.

00:05:43.326 --> 00:05:45.276 A:middle
We would scan for both legacy

00:05:45.276 --> 00:05:46.386 A:middle
and extended advertisements.

00:05:46.956 --> 00:05:50.096 A:middle
There's a new API for you to

00:05:50.096 --> 00:05:51.876 A:middle
programmatically query for

00:05:51.876 --> 00:05:54.386 A:middle
platform support, and this is

00:05:54.386 --> 00:05:57.026 A:middle
now supported on iPhone XS and

00:05:57.426 --> 00:06:00.526 A:middle
the new iPad Pro.

00:05:57.426 --> 00:06:00.526 A:middle
the new iPad Pro.

00:06:01.056 --> 00:06:02.676 A:middle
Also new for this year we're

00:06:02.676 --> 00:06:03.746 A:middle
going to support extended

00:06:03.746 --> 00:06:04.266 A:middle
connections.

00:06:05.946 --> 00:06:07.026 A:middle
This means that we can make

00:06:07.026 --> 00:06:08.306 A:middle
connections to connectable,

00:06:08.306 --> 00:06:08.976 A:middle
extended advertisements.

00:06:11.996 --> 00:06:13.536 A:middle
Extended connections improve

00:06:13.536 --> 00:06:14.716 A:middle
upon the existing connection

00:06:14.716 --> 00:06:16.286 A:middle
exchange protocol, and I'll

00:06:16.286 --> 00:06:16.896 A:middle
explain how.

00:06:17.636 --> 00:06:20.266 A:middle
Today with Legacy Connections,

00:06:20.796 --> 00:06:22.276 A:middle
the advertiser would advertise a

00:06:22.276 --> 00:06:23.386 A:middle
connectable advertisement.

00:06:24.796 --> 00:06:26.036 A:middle
The scanner would send a

00:06:26.036 --> 00:06:27.096 A:middle
connection identification if it

00:06:27.096 --> 00:06:29.256 A:middle
wants to connect.

00:06:29.366 --> 00:06:30.246 A:middle
There's no ACK for this.

00:06:32.116 --> 00:06:33.446 A:middle
The scanner assumes that the

00:06:33.446 --> 00:06:34.806 A:middle
connection indication reaches

00:06:34.806 --> 00:06:35.536 A:middle
the advertiser.

00:06:36.266 --> 00:06:37.266 A:middle
It then wakes up the host

00:06:37.266 --> 00:06:38.586 A:middle
processor to tell it there's a

00:06:38.586 --> 00:06:39.196 A:middle
new connection.

00:06:39.766 --> 00:06:42.956 A:middle
But the connection indication

00:06:42.956 --> 00:06:43.986 A:middle
may actually not reach the

00:06:43.986 --> 00:06:45.836 A:middle
advertiser because the RF

00:06:45.836 --> 00:06:47.256 A:middle
characteristic of the scanner

00:06:47.256 --> 00:06:49.036 A:middle
and advertiser can differ, and

00:06:49.036 --> 00:06:51.486 A:middle
the RF environment is very

00:06:52.176 --> 00:06:52.526 A:middle
dynamic.

00:06:52.746 --> 00:06:54.316 A:middle
So, because of this, throughout

00:06:54.316 --> 00:06:57.026 A:middle
your day, your whole processor

00:06:57.026 --> 00:06:59.566 A:middle
can be unnecessarily woken up,

00:07:00.136 --> 00:07:02.366 A:middle
training your phone's battery

00:07:02.366 --> 00:07:04.426 A:middle
more while you're using, your

00:07:04.496 --> 00:07:06.066 A:middle
user is using your application

00:07:06.066 --> 00:07:06.716 A:middle
or accessory.

00:07:07.586 --> 00:07:09.296 A:middle
But extended connections improve

00:07:10.036 --> 00:07:11.006 A:middle
upon this.

00:07:11.206 --> 00:07:13.376 A:middle
With extended connections, the

00:07:13.376 --> 00:07:15.306 A:middle
advertiser would advertise a

00:07:15.306 --> 00:07:16.256 A:middle
connectable extended

00:07:16.256 --> 00:07:16.986 A:middle
advertisement.

00:07:17.536 --> 00:07:19.466 A:middle
The scanner would send a

00:07:19.466 --> 00:07:20.296 A:middle
connection request.

00:07:21.646 --> 00:07:23.056 A:middle
The advertiser would send an

00:07:23.056 --> 00:07:24.446 A:middle
explicit connection response,

00:07:25.026 --> 00:07:26.106 A:middle
and only when the scanner

00:07:26.106 --> 00:07:27.256 A:middle
receives this connection

00:07:27.256 --> 00:07:30.076 A:middle
response it will wake the host

00:07:30.076 --> 00:07:31.406 A:middle
processor to tell it there's the

00:07:31.406 --> 00:07:32.006 A:middle
new connection.

00:07:32.576 --> 00:07:35.056 A:middle
In addition, your connection can

00:07:35.056 --> 00:07:36.476 A:middle
also start in LE 2 Mbps,

00:07:37.106 --> 00:07:38.356 A:middle
skipping some of the link layer

00:07:38.356 --> 00:07:38.996 A:middle
negotiation.

00:07:39.586 --> 00:07:43.506 A:middle
And because of this, extended

00:07:43.506 --> 00:07:45.126 A:middle
Connection is more robust and

00:07:45.126 --> 00:07:45.716 A:middle
power efficient.

00:07:46.416 --> 00:07:48.666 A:middle
It is again transparent to your

00:07:48.666 --> 00:07:49.826 A:middle
application if you can call the

00:07:49.826 --> 00:07:50.596 A:middle
same connect API.

00:07:50.706 --> 00:07:52.676 A:middle
It will connect to both Legacy

00:07:52.676 --> 00:07:54.626 A:middle
and Extended Advertisements.

00:07:55.246 --> 00:07:58.446 A:middle
But remember if you're

00:07:58.446 --> 00:07:59.706 A:middle
developing an accessory, your

00:07:59.706 --> 00:08:00.946 A:middle
accessory must also support

00:07:59.706 --> 00:08:00.946 A:middle
accessory must also support

00:08:01.426 --> 00:08:02.286 A:middle
connectable extended

00:08:02.286 --> 00:08:02.996 A:middle
advertisements.

00:08:03.496 --> 00:08:06.916 A:middle
There's a new API for you to

00:08:06.916 --> 00:08:09.226 A:middle
programmatically query for

00:08:09.226 --> 00:08:10.136 A:middle
platform support.

00:08:10.676 --> 00:08:12.026 A:middle
This is also available now with

00:08:12.106 --> 00:08:16.096 A:middle
iPhone XS and the new iPad Pro.

00:08:16.526 --> 00:08:17.856 A:middle
I'd like to now hand it off to

00:08:17.886 --> 00:08:18.966 A:middle
Yilok to talk about Core

00:08:18.966 --> 00:08:20.456 A:middle
Bluetooth support for BR/EDR.

00:08:21.206 --> 00:08:21.436 A:middle
Thank you.

00:08:22.176 --> 00:08:24.500 A:middle
[ Applause ]

00:08:27.616 --> 00:08:28.336 A:middle
&gt;&gt; Thanks, Duy.

00:08:28.886 --> 00:08:29.786 A:middle
Hi everyone.

00:08:29.786 --> 00:08:31.036 A:middle
I'm Yilok, and I'm here to

00:08:31.036 --> 00:08:32.246 A:middle
introduce you to you the new

00:08:32.246 --> 00:08:33.176 A:middle
things we've added to Core

00:08:33.176 --> 00:08:35.316 A:middle
Bluetooth for BR/EDR devices.

00:08:36.126 --> 00:08:37.696 A:middle
When we first introduced Core

00:08:37.696 --> 00:08:39.785 A:middle
Bluetooth back in 2012, we

00:08:39.785 --> 00:08:41.306 A:middle
wanted to create an abstraction

00:08:41.306 --> 00:08:42.525 A:middle
layer for you to use what's

00:08:42.525 --> 00:08:43.686 A:middle
called GATT.

00:08:43.976 --> 00:08:45.546 A:middle
Now GATT is a Bluetooth SIG

00:08:45.546 --> 00:08:47.306 A:middle
protocol that is

00:08:47.306 --> 00:08:49.436 A:middle
hierarchy-based, and it consists

00:08:49.436 --> 00:08:50.856 A:middle
if services and characteristics,

00:08:51.176 --> 00:08:52.836 A:middle
and it makes it very easy to

00:08:52.836 --> 00:08:54.576 A:middle
read, write, and be notified of

00:08:54.576 --> 00:08:55.326 A:middle
changes on these

00:08:55.326 --> 00:08:56.096 A:middle
characteristics.

00:08:56.876 --> 00:08:57.946 A:middle
You've shown us that it's

00:08:58.066 --> 00:08:59.616 A:middle
exceptionally easy to make great

00:08:59.616 --> 00:09:00.766 A:middle
products such as heart rate

00:08:59.616 --> 00:09:00.766 A:middle
products such as heart rate

00:09:00.766 --> 00:09:03.946 A:middle
monitors, toys, and a bunch of

00:09:03.946 --> 00:09:05.246 A:middle
accessories in the world.

00:09:05.706 --> 00:09:07.016 A:middle
And it's been wonderful seeing

00:09:07.016 --> 00:09:08.516 A:middle
what you've been able to do with

00:09:08.516 --> 00:09:09.516 A:middle
the Core Bluetooth apps that you

00:09:09.516 --> 00:09:11.076 A:middle
build to interface with these

00:09:11.216 --> 00:09:11.916 A:middle
accessories.

00:09:12.816 --> 00:09:14.126 A:middle
Now, this year, as Duy has

00:09:14.126 --> 00:09:15.936 A:middle
mentioned, we're adding support

00:09:16.266 --> 00:09:18.496 A:middle
for Core Bluetooth over BR/EDR

00:09:18.496 --> 00:09:20.346 A:middle
devices or classic devices.

00:09:21.236 --> 00:09:22.586 A:middle
Now these devices range from

00:09:22.586 --> 00:09:24.386 A:middle
things such as car head units,

00:09:24.906 --> 00:09:27.056 A:middle
speakers, and headphones.

00:09:27.916 --> 00:09:29.486 A:middle
So, how do we do this?

00:09:30.356 --> 00:09:32.626 A:middle
Well, our stack from last year

00:09:32.876 --> 00:09:35.876 A:middle
consisted of two different

00:09:35.876 --> 00:09:36.506 A:middle
transports.

00:09:36.676 --> 00:09:37.976 A:middle
Essentially, we were running the

00:09:37.976 --> 00:09:39.806 A:middle
system profiles or things such

00:09:39.806 --> 00:09:43.046 A:middle
as audio, A2DP, HFP, and

00:09:43.206 --> 00:09:46.326 A:middle
remote-control profiles in the

00:09:46.326 --> 00:09:46.696 A:middle
system.

00:09:47.516 --> 00:09:48.446 A:middle
On the other side, for low

00:09:48.446 --> 00:09:50.056 A:middle
energy, we were running Core

00:09:50.056 --> 00:09:51.736 A:middle
Bluetooth over GATT, and that

00:09:51.736 --> 00:09:52.596 A:middle
was the framework that you were

00:09:52.596 --> 00:09:53.876 A:middle
using to interface with your

00:09:53.876 --> 00:09:54.516 A:middle
accessories.

00:09:55.396 --> 00:09:56.946 A:middle
This year, we've merged the two

00:09:56.946 --> 00:09:59.006 A:middle
layers together, and now, you

00:09:59.006 --> 00:10:00.746 A:middle
have transparent access to both

00:09:59.006 --> 00:10:00.746 A:middle
have transparent access to both

00:10:01.146 --> 00:10:04.406 A:middle
BR/EDR and low energy without

00:10:04.406 --> 00:10:04.916 A:middle
doing anything.

00:10:05.296 --> 00:10:09.536 A:middle
Now, what this means for you is

00:10:10.426 --> 00:10:12.106 A:middle
without much changes in the API,

00:10:12.106 --> 00:10:15.446 A:middle
you can now work with both the

00:10:15.446 --> 00:10:16.726 A:middle
classic devices and the low

00:10:16.726 --> 00:10:17.566 A:middle
energy devices.

00:10:18.906 --> 00:10:19.926 A:middle
So let's go and look into the

00:10:19.926 --> 00:10:21.516 A:middle
details of Core Bluetooth for

00:10:21.516 --> 00:10:22.156 A:middle
BR/EDR.

00:10:22.726 --> 00:10:26.236 A:middle
This now will allow transparent

00:10:26.236 --> 00:10:27.686 A:middle
use of GATT with the BR/EDR

00:10:27.686 --> 00:10:28.176 A:middle
devices.

00:10:29.266 --> 00:10:30.326 A:middle
It's still running the exact

00:10:30.326 --> 00:10:31.716 A:middle
same Bluetooth SIG protocol.

00:10:32.116 --> 00:10:33.546 A:middle
There's no changes to that, and

00:10:33.546 --> 00:10:34.526 A:middle
so you can look at this

00:10:34.866 --> 00:10:36.836 A:middle
specification online on the

00:10:36.836 --> 00:10:38.306 A:middle
Bluetooth SIG website.

00:10:39.276 --> 00:10:41.016 A:middle
To your application and to the

00:10:41.016 --> 00:10:42.986 A:middle
developer, the CBPeripheral APIs

00:10:42.986 --> 00:10:43.866 A:middle
are exactly the same.

00:10:44.196 --> 00:10:45.236 A:middle
You can still do the same

00:10:45.236 --> 00:10:47.016 A:middle
service discovery and be

00:10:47.016 --> 00:10:48.086 A:middle
notified of changes to

00:10:48.086 --> 00:10:48.906 A:middle
characteristics.

00:10:49.396 --> 00:10:52.176 A:middle
There is a new change in the

00:10:52.246 --> 00:10:53.126 A:middle
CBCentralManager.

00:10:53.756 --> 00:10:55.006 A:middle
We've added a way for you to be

00:10:55.006 --> 00:10:56.796 A:middle
notified when a device is

00:10:56.796 --> 00:10:59.676 A:middle
connected with a service IUD or

00:10:59.676 --> 00:11:00.656 A:middle
a known peripheral UID.

00:10:59.676 --> 00:11:00.656 A:middle
a known peripheral UID.

00:11:00.656 --> 00:11:01.946 A:middle
And I'll go more into detail

00:11:01.946 --> 00:11:04.476 A:middle
about that later.

00:11:04.706 --> 00:11:06.466 A:middle
Core Bluetooth for BR/EDR is

00:11:06.466 --> 00:11:08.796 A:middle
available with iOS 13, the

00:11:08.796 --> 00:11:10.216 A:middle
watchOS, and tvOS that we

00:11:10.216 --> 00:11:10.896 A:middle
released this week.

00:11:11.346 --> 00:11:14.856 A:middle
And finally, because GATT is a

00:11:14.856 --> 00:11:16.986 A:middle
software layer protocol, you can

00:11:16.986 --> 00:11:18.126 A:middle
add support to your accessory

00:11:18.126 --> 00:11:19.526 A:middle
without the need for new

00:11:19.526 --> 00:11:19.876 A:middle
hardware.

00:11:20.096 --> 00:11:21.666 A:middle
This means only a software or

00:11:21.666 --> 00:11:22.986 A:middle
firmware update.

00:11:23.936 --> 00:11:27.866 A:middle
Now let's look at the new API.

00:11:27.956 --> 00:11:29.516 A:middle
To register for connection events,

00:11:29.896 --> 00:11:31.516 A:middle
you'll register by either a

00:11:31.516 --> 00:11:33.066 A:middle
known service or a known

00:11:33.066 --> 00:11:33.936 A:middle
peripheral UID.

00:11:34.646 --> 00:11:35.756 A:middle
This would be akin to something

00:11:35.756 --> 00:11:39.146 A:middle
like the heart rate service.

00:11:39.306 --> 00:11:39.796 A:middle
You'll call

00:11:39.796 --> 00:11:41.556 A:middle
registerForConnectionEvents, and

00:11:41.556 --> 00:11:42.346 A:middle
you'll pass to the

00:11:42.346 --> 00:11:44.706 A:middle
CBCentralManager a type for

00:11:44.706 --> 00:11:46.406 A:middle
either a service UID or a

00:11:46.406 --> 00:11:46.976 A:middle
peripheral UID.

00:11:49.636 --> 00:11:51.656 A:middle
When we find a matching option,

00:11:52.546 --> 00:11:53.306 A:middle
we'll send you a delegate

00:11:53.306 --> 00:11:56.006 A:middle
callback, and this delegate

00:11:56.006 --> 00:11:57.626 A:middle
callback will include the CB

00:11:57.626 --> 00:11:58.976 A:middle
peripheral and the type of

00:11:58.976 --> 00:11:59.606 A:middle
connection event.

00:12:00.116 --> 00:12:02.056 A:middle
It's pretty simple.

00:12:03.136 --> 00:12:04.216 A:middle
So, what does the incoming

00:12:04.216 --> 00:12:05.616 A:middle
connection look like from your

00:12:05.616 --> 00:12:09.146 A:middle
app's point of view?

00:12:09.296 --> 00:12:11.106 A:middle
Your app will have instantiated

00:12:11.106 --> 00:12:14.426 A:middle
a CBCentralManager, passed us a

00:12:14.596 --> 00:12:18.066 A:middle
known service UID, and in the

00:12:18.306 --> 00:12:20.566 A:middle
case of a BR/EDR or classic

00:12:20.566 --> 00:12:22.586 A:middle
device, your user will go to the

00:12:22.586 --> 00:12:23.776 A:middle
Bluetooth settings and search

00:12:23.776 --> 00:12:25.506 A:middle
for the device, in this case

00:12:25.506 --> 00:12:26.596 A:middle
let's say it's a headset running

00:12:26.596 --> 00:12:27.626 A:middle
heart rate.

00:12:28.176 --> 00:12:29.516 A:middle
They'll discover the device,

00:12:29.766 --> 00:12:33.426 A:middle
find it, and attempt to connect.

00:12:33.546 --> 00:12:35.266 A:middle
Pairing will be triggered, and

00:12:35.616 --> 00:12:36.436 A:middle
then afterwards when we're

00:12:36.436 --> 00:12:37.606 A:middle
connected, we'll run a service

00:12:37.606 --> 00:12:39.306 A:middle
discovery of the GATT services.

00:12:39.696 --> 00:12:40.926 A:middle
If we find a service that you

00:12:40.926 --> 00:12:42.026 A:middle
want, then you'll get the

00:12:42.026 --> 00:12:42.716 A:middle
delegate callback.

00:12:43.906 --> 00:12:45.176 A:middle
And this will now look extremely

00:12:45.176 --> 00:12:46.646 A:middle
similar to those who have

00:12:46.646 --> 00:12:47.556 A:middle
already used Core Bluetooth.

00:12:48.406 --> 00:12:49.716 A:middle
With your delegate callback,

00:12:49.886 --> 00:12:50.786 A:middle
you'll then handle the

00:12:50.786 --> 00:12:52.216 A:middle
connection event, and so you

00:12:52.216 --> 00:12:53.556 A:middle
might call connect on that given

00:12:53.556 --> 00:12:53.976 A:middle
peripheral.

00:12:53.976 --> 00:12:57.936 A:middle
So, all this code looks like so.

00:12:58.296 --> 00:12:59.936 A:middle
You'll do initialization first,

00:13:00.276 --> 00:13:02.726 A:middle
register for your connection

00:13:02.726 --> 00:13:04.636 A:middle
event with the CBCentralManager,

00:13:05.186 --> 00:13:08.206 A:middle
and finally handle the delegate

00:13:08.206 --> 00:13:08.626 A:middle
callback.

00:13:09.396 --> 00:13:10.096 A:middle
If you're interested in the

00:13:10.096 --> 00:13:12.106 A:middle
device, call connect, and then

00:13:12.106 --> 00:13:13.306 A:middle
you can clear the registration

00:13:13.466 --> 00:13:14.046 A:middle
for filters.

00:13:14.586 --> 00:13:17.116 A:middle
Now, what about outgoing

00:13:17.116 --> 00:13:17.686 A:middle
connections.

00:13:17.876 --> 00:13:18.896 A:middle
Let's say you have a known

00:13:18.896 --> 00:13:20.176 A:middle
peripheral already and you're

00:13:20.176 --> 00:13:21.286 A:middle
paired to it and you want to

00:13:21.286 --> 00:13:21.606 A:middle
connect.

00:13:22.676 --> 00:13:24.506 A:middle
You can now connect out to a

00:13:24.506 --> 00:13:25.456 A:middle
BR/EDR device.

00:13:26.506 --> 00:13:27.896 A:middle
To do so, you'll do the same

00:13:27.896 --> 00:13:29.036 A:middle
thing, instantiate your

00:13:29.156 --> 00:13:32.576 A:middle
CBCentralManager and call

00:13:32.576 --> 00:13:32.796 A:middle
connect.

00:13:33.866 --> 00:13:34.826 A:middle
This is not a new API.

00:13:34.886 --> 00:13:35.926 A:middle
This has existed in

00:13:36.176 --> 00:13:39.746 A:middle
CBCentralManager for a while

00:13:39.746 --> 00:13:39.813 A:middle
now.

00:13:39.946 --> 00:13:42.176 A:middle
And so if you're calling connect

00:13:42.176 --> 00:13:45.456 A:middle
on a BR/EDR device, if your app

00:13:45.456 --> 00:13:47.406 A:middle
is in foreground, then we'll try

00:13:47.406 --> 00:13:48.626 A:middle
to make a connection out to that

00:13:48.626 --> 00:13:49.216 A:middle
device for you.

00:13:50.086 --> 00:13:51.806 A:middle
We'll page the device, and if

00:13:51.806 --> 00:13:53.086 A:middle
it's connected, then you'll get

00:13:53.656 --> 00:13:54.956 A:middle
a delegate callback.

00:13:56.096 --> 00:13:56.686 A:middle
It's that simple.

00:13:57.236 --> 00:14:00.546 A:middle
So, now that we've gone through

00:13:57.236 --> 00:14:00.546 A:middle
So, now that we've gone through

00:14:00.546 --> 00:14:02.506 A:middle
the new APIs for BR/EDR devices,

00:14:03.636 --> 00:14:04.996 A:middle
let's continue on to the other

00:14:04.996 --> 00:14:06.826 A:middle
improvements we've made for Core

00:14:06.826 --> 00:14:07.796 A:middle
Bluetooth dual-mode.

00:14:08.076 --> 00:14:09.316 A:middle
This means when you're using low

00:14:09.316 --> 00:14:11.646 A:middle
energy and BR/EDR together.

00:14:12.256 --> 00:14:16.826 A:middle
One common thing we've seen with

00:14:17.856 --> 00:14:19.786 A:middle
dual-mode devices, as you've

00:14:19.786 --> 00:14:20.436 A:middle
developed more and more

00:14:20.436 --> 00:14:21.766 A:middle
accessories and apps on top of

00:14:21.766 --> 00:14:24.356 A:middle
it, is that generally when users

00:14:24.356 --> 00:14:26.296 A:middle
use your device, they see two

00:14:26.296 --> 00:14:27.256 A:middle
entries in the Bluetooth

00:14:27.256 --> 00:14:27.696 A:middle
settings.

00:14:28.146 --> 00:14:29.676 A:middle
There's a low energy one, and

00:14:29.676 --> 00:14:31.316 A:middle
there's a BR/EDR or classic one.

00:14:31.416 --> 00:14:32.476 A:middle
And it's sometimes confusing to

00:14:32.476 --> 00:14:32.976 A:middle
users.

00:14:33.546 --> 00:14:35.946 A:middle
So, we worked really hard this

00:14:35.946 --> 00:14:37.436 A:middle
year to alleviate this

00:14:37.436 --> 00:14:37.856 A:middle
confusion.

00:14:38.426 --> 00:14:40.966 A:middle
So, this year we're introducing

00:14:41.666 --> 00:14:43.196 A:middle
adoption of what's called Cross

00:14:43.196 --> 00:14:44.466 A:middle
Transport Key Derivation.

00:14:45.476 --> 00:14:47.586 A:middle
This is a Bluetooth 4.2 SIG

00:14:47.586 --> 00:14:49.836 A:middle
specification, and basically

00:14:49.836 --> 00:14:51.496 A:middle
what this means is through a

00:14:51.556 --> 00:14:53.396 A:middle
single pairing we will derive

00:14:53.456 --> 00:14:54.706 A:middle
link keys for the other

00:14:54.706 --> 00:14:55.176 A:middle
transport.

00:14:56.836 --> 00:14:59.016 A:middle
To you, it means that the device

00:14:59.016 --> 00:15:00.236 A:middle
will now have a single

00:14:59.016 --> 00:15:00.236 A:middle
will now have a single

00:15:00.236 --> 00:15:01.946 A:middle
CBPeripheral identifier, so you

00:15:01.946 --> 00:15:02.806 A:middle
don't need to care about the

00:15:02.806 --> 00:15:03.776 A:middle
transport of the device.

00:15:04.936 --> 00:15:06.176 A:middle
This is completely transparent

00:15:06.176 --> 00:15:09.096 A:middle
to your application, and now

00:15:09.326 --> 00:15:11.656 A:middle
that we have the single pairing

00:15:11.656 --> 00:15:13.156 A:middle
for two devices, it means your

00:15:13.156 --> 00:15:14.786 A:middle
app can seamlessly use both low

00:15:14.786 --> 00:15:19.066 A:middle
energy and BR/EDR together.

00:15:19.186 --> 00:15:20.926 A:middle
So before when users of your

00:15:20.926 --> 00:15:23.316 A:middle
device or application, if they

00:15:23.316 --> 00:15:25.786 A:middle
were seeing two devices, now

00:15:26.546 --> 00:15:27.846 A:middle
they'll just see one, which is

00:15:27.846 --> 00:15:27.976 A:middle
merged.

00:15:28.516 --> 00:15:33.006 A:middle
[ Applause ]

00:15:33.506 --> 00:15:33.756 A:middle
Thank you.

00:15:34.336 --> 00:15:37.156 A:middle
And we can further take

00:15:37.156 --> 00:15:38.816 A:middle
advantage of Cross Transport Key

00:15:38.816 --> 00:15:41.556 A:middle
Derivation, or CTKD, to improve

00:15:41.556 --> 00:15:42.246 A:middle
the pairing process.

00:15:42.716 --> 00:15:43.936 A:middle
So let's say you want to control

00:15:43.936 --> 00:15:45.756 A:middle
the entire discovery and pairing

00:15:46.126 --> 00:15:47.226 A:middle
experience for your user.

00:15:47.926 --> 00:15:48.956 A:middle
Instead of having the user go

00:15:48.956 --> 00:15:50.146 A:middle
into Bluetooth settings and do

00:15:50.146 --> 00:15:51.856 A:middle
an inquiry scan, which leaves

00:15:51.856 --> 00:15:53.916 A:middle
your app experience, you can now

00:15:53.916 --> 00:15:54.906 A:middle
look for low energy

00:15:54.906 --> 00:15:56.596 A:middle
advertisements from your

00:15:57.076 --> 00:15:57.696 A:middle
accessory.

00:15:59.056 --> 00:16:01.506 A:middle
If you find the device, you can

00:15:59.056 --> 00:16:01.506 A:middle
If you find the device, you can

00:16:01.506 --> 00:16:03.626 A:middle
then Call Connect and connect

00:16:03.626 --> 00:16:05.216 A:middle
over LE and access the

00:16:05.216 --> 00:16:06.126 A:middle
protective characteristic.

00:16:07.256 --> 00:16:09.696 A:middle
Once you're paired, because of

00:16:09.826 --> 00:16:13.036 A:middle
CTKD, we'll take the LE key, and

00:16:13.036 --> 00:16:15.036 A:middle
we'll also derive the BR/EDR

00:16:15.036 --> 00:16:15.306 A:middle
key.

00:16:15.806 --> 00:16:19.656 A:middle
And this means you can now make

00:16:19.656 --> 00:16:21.456 A:middle
a BR/EDR connection without

00:16:21.456 --> 00:16:22.946 A:middle
having to trigger more pairing

00:16:23.186 --> 00:16:24.676 A:middle
to confuse the user, and it

00:16:24.816 --> 00:16:26.336 A:middle
stays in the app for the entire

00:16:26.336 --> 00:16:26.936 A:middle
experience.

00:16:30.756 --> 00:16:32.616 A:middle
Great. Now that we've talked

00:16:32.616 --> 00:16:34.066 A:middle
about improving pairing, let's

00:16:34.066 --> 00:16:34.926 A:middle
talk about how we improve

00:16:34.926 --> 00:16:35.806 A:middle
dual-mode connections.

00:16:36.606 --> 00:16:38.086 A:middle
Let's consider a new product

00:16:38.086 --> 00:16:40.056 A:middle
that you want to plan, and it's

00:16:40.056 --> 00:16:41.246 A:middle
a home audio device.

00:16:41.866 --> 00:16:42.946 A:middle
And it would be great if your

00:16:42.946 --> 00:16:44.966 A:middle
user could be using your app and

00:16:44.966 --> 00:16:46.236 A:middle
have it trigger some sort of

00:16:46.576 --> 00:16:48.106 A:middle
connection to use media, such as

00:16:48.106 --> 00:16:49.906 A:middle
music or podcast when the user

00:16:50.476 --> 00:16:51.716 A:middle
becomes in proximity of the

00:16:51.716 --> 00:16:51.976 A:middle
device.

00:16:55.786 --> 00:16:57.086 A:middle
So, you'd want the user to bring

00:16:57.086 --> 00:16:58.546 A:middle
up something like music or

00:16:59.446 --> 00:17:01.276 A:middle
podcasts, which this would mean

00:16:59.446 --> 00:17:01.276 A:middle
podcasts, which this would mean

00:17:01.276 --> 00:17:02.786 A:middle
that iOS would have to bring up

00:17:02.856 --> 00:17:04.746 A:middle
what's called a BR/EDR channels

00:17:04.746 --> 00:17:04.996 A:middle
for you.

00:17:05.786 --> 00:17:07.036 A:middle
We've done so this year by

00:17:07.036 --> 00:17:08.496 A:middle
introducing a new concept called

00:17:08.496 --> 00:17:08.896 A:middle
bridging.

00:17:11.455 --> 00:17:13.346 A:middle
Bridging works by taking

00:17:13.346 --> 00:17:14.626 A:middle
advantage of low energy

00:17:14.626 --> 00:17:16.836 A:middle
proximity to bring up BR/EDR

00:17:16.836 --> 00:17:18.836 A:middle
profiles such as A2DP, HFP,

00:17:18.836 --> 00:17:19.266 A:middle
AVRCP.

00:17:19.486 --> 00:17:22.736 A:middle
This will work on all devices

00:17:22.736 --> 00:17:25.516 A:middle
that support CTKD and to take

00:17:25.516 --> 00:17:26.316 A:middle
advantage of it in your

00:17:26.316 --> 00:17:27.826 A:middle
application, it's extremely

00:17:27.826 --> 00:17:28.066 A:middle
easy.

00:17:29.316 --> 00:17:32.236 A:middle
You'll use a new key in the

00:17:32.786 --> 00:17:33.996 A:middle
CBManagerConnect, and it's

00:17:33.996 --> 00:17:36.396 A:middle
called the TransportBridgingKey.

00:17:37.816 --> 00:17:38.626 A:middle
You add it in the option

00:17:38.626 --> 00:17:39.156 A:middle
dictionary.

00:17:39.706 --> 00:17:42.506 A:middle
And so when you pass that to us,

00:17:43.066 --> 00:17:44.246 A:middle
we'll try to connect over low

00:17:44.246 --> 00:17:45.326 A:middle
energy to your device.

00:17:45.636 --> 00:17:47.586 A:middle
If we find it, then we'll

00:17:47.586 --> 00:17:49.936 A:middle
immediately page out over BR/EDR

00:17:49.936 --> 00:17:51.686 A:middle
and connect as many profiles as

00:17:51.686 --> 00:17:52.616 A:middle
we can.

00:17:53.576 --> 00:17:55.756 A:middle
The result is that your user can

00:17:55.756 --> 00:17:57.406 A:middle
now seamlessly use all the

00:17:57.406 --> 00:17:59.016 A:middle
multimedia profiles without

00:17:59.016 --> 00:17:59.776 A:middle
having to do anything.

00:18:01.516 --> 00:18:06.846 A:middle
[ Applause ]

00:18:07.346 --> 00:18:09.116 A:middle
Great. So, now we've covered all

00:18:09.116 --> 00:18:10.276 A:middle
the core technology improvements

00:18:10.276 --> 00:18:10.906 A:middle
we've made this year.

00:18:11.216 --> 00:18:12.316 A:middle
I'd like to now hand it over to

00:18:12.316 --> 00:18:13.956 A:middle
Meghna to talk at Core Bluetooth

00:18:14.016 --> 00:18:14.366 A:middle
privacy.

00:18:15.066 --> 00:18:15.656 A:middle
&gt;&gt; Thank you, Yilok.

00:18:16.486 --> 00:18:18.036 A:middle
In the last year alone, there

00:18:18.036 --> 00:18:19.666 A:middle
have been an increasing number

00:18:19.666 --> 00:18:21.756 A:middle
of instances where applications

00:18:21.756 --> 00:18:24.386 A:middle
made the news or we're pulled

00:18:24.386 --> 00:18:25.246 A:middle
from the App Store for not

00:18:25.246 --> 00:18:26.826 A:middle
respecting user privacy.

00:18:27.606 --> 00:18:29.626 A:middle
I'm here today to help you avoid

00:18:29.626 --> 00:18:31.276 A:middle
that situation for your Core

00:18:31.276 --> 00:18:32.326 A:middle
Bluetooth applications.

00:18:34.216 --> 00:18:34.886 A:middle
Hello everyone.

00:18:35.096 --> 00:18:37.096 A:middle
My name is Meghna Lav, and over

00:18:37.096 --> 00:18:38.406 A:middle
the next few minutes, I'd like

00:18:38.406 --> 00:18:40.026 A:middle
to talk you through the privacy

00:18:40.026 --> 00:18:41.856 A:middle
update for Core Bluetooth APIs.

00:18:47.046 --> 00:18:49.526 A:middle
Privacy matters, and it is more

00:18:49.526 --> 00:18:51.286 A:middle
important today than ever

00:18:51.286 --> 00:18:51.686 A:middle
before.

00:18:52.266 --> 00:18:54.396 A:middle
Our users are more aware of it

00:18:54.396 --> 00:18:56.176 A:middle
today than ever before.

00:18:57.306 --> 00:18:59.056 A:middle
At Apple, we believe that

00:18:59.056 --> 00:19:01.006 A:middle
privacy is a fundamental human

00:18:59.056 --> 00:19:01.006 A:middle
privacy is a fundamental human

00:19:01.006 --> 00:19:02.906 A:middle
right, and as Tim Cook has

00:19:02.906 --> 00:19:04.806 A:middle
mentioned, it is our collective

00:19:04.806 --> 00:19:07.316 A:middle
responsibility to safeguard and

00:19:07.316 --> 00:19:09.036 A:middle
protect the fundamental human

00:19:09.036 --> 00:19:10.196 A:middle
right to privacy.

00:19:10.676 --> 00:19:13.746 A:middle
As developers in the Apple

00:19:13.746 --> 00:19:15.616 A:middle
ecosystem, you all have a

00:19:15.736 --> 00:19:17.886 A:middle
profound impact on user's lives

00:19:17.886 --> 00:19:18.506 A:middle
every day.

00:19:19.386 --> 00:19:21.436 A:middle
As such, users trust you with

00:19:21.436 --> 00:19:23.296 A:middle
their data, and together with

00:19:23.296 --> 00:19:24.586 A:middle
us, you shoulder the

00:19:24.586 --> 00:19:26.806 A:middle
responsibility to uphold that

00:19:26.806 --> 00:19:26.976 A:middle
trust.

00:19:30.076 --> 00:19:31.526 A:middle
This year, we've made

00:19:31.526 --> 00:19:33.596 A:middle
enhancements to two major areas

00:19:33.596 --> 00:19:36.556 A:middle
for Core Bluetooth privacy, user

00:19:36.556 --> 00:19:38.726 A:middle
authorization, and accessory

00:19:38.726 --> 00:19:39.556 A:middle
notifications.

00:19:40.156 --> 00:19:42.406 A:middle
Let's start by talking about

00:19:42.636 --> 00:19:44.616 A:middle
user authorization and how it

00:19:44.616 --> 00:19:45.376 A:middle
currently works.

00:19:46.676 --> 00:19:49.336 A:middle
In iOS 12, if your application

00:19:49.336 --> 00:19:50.256 A:middle
instantiated a

00:19:50.256 --> 00:19:52.766 A:middle
CBPeripheralManager and wanted

00:19:52.766 --> 00:19:54.086 A:middle
to advertise when in the

00:19:54.086 --> 00:19:56.256 A:middle
background, we required that you

00:19:56.256 --> 00:19:57.686 A:middle
obtain user authorization.

00:19:58.236 --> 00:20:01.936 A:middle
New for this year, if your

00:19:58.236 --> 00:20:01.936 A:middle
New for this year, if your

00:20:01.936 --> 00:20:03.666 A:middle
application uses any Core

00:20:03.666 --> 00:20:05.966 A:middle
Bluetooth APIs, we'll require

00:20:05.966 --> 00:20:06.906 A:middle
you to obtain user

00:20:06.906 --> 00:20:07.726 A:middle
authorization.

00:20:08.266 --> 00:20:11.036 A:middle
It is important to note that

00:20:11.036 --> 00:20:12.676 A:middle
this applies to applications

00:20:13.056 --> 00:20:15.056 A:middle
that are built on older SDKs as

00:20:15.056 --> 00:20:15.366 A:middle
well.

00:20:15.366 --> 00:20:17.536 A:middle
And when a user makes this

00:20:17.536 --> 00:20:19.466 A:middle
decision, they can modify it in

00:20:19.466 --> 00:20:21.376 A:middle
the settings app either in the

00:20:21.376 --> 00:20:23.276 A:middle
Bluetooth privacy pane or even

00:20:23.276 --> 00:20:24.696 A:middle
in your application specific

00:20:24.696 --> 00:20:25.136 A:middle
settings.

00:20:25.796 --> 00:20:29.536 A:middle
And this is required on iOS,

00:20:29.756 --> 00:20:32.026 A:middle
watchOS, and tvOS.

00:20:32.716 --> 00:20:34.616 A:middle
So what does user authorization

00:20:34.616 --> 00:20:35.826 A:middle
mean on watchOS.

00:20:36.746 --> 00:20:38.446 A:middle
If your application runs as an

00:20:38.446 --> 00:20:40.946 A:middle
extension on watchOS, then the

00:20:40.946 --> 00:20:43.036 A:middle
permission is shared between iOS

00:20:43.036 --> 00:20:45.476 A:middle
and watchOS, and the user only

00:20:45.476 --> 00:20:46.726 A:middle
has to grant this permission

00:20:46.726 --> 00:20:46.996 A:middle
once.

00:20:48.356 --> 00:20:49.856 A:middle
This of course is not true for

00:20:49.856 --> 00:20:50.776 A:middle
stand-alone watchOS

00:20:50.776 --> 00:20:51.386 A:middle
applications.

00:20:52.106 --> 00:20:55.156 A:middle
So, how would you adopt user

00:20:55.156 --> 00:20:56.456 A:middle
authorizations in your

00:20:56.456 --> 00:20:57.166 A:middle
application?

00:20:58.476 --> 00:21:00.706 A:middle
The first thing to do is to open

00:20:58.476 --> 00:21:00.706 A:middle
The first thing to do is to open

00:21:00.706 --> 00:21:03.226 A:middle
the info.plist of your app and

00:21:03.226 --> 00:21:04.736 A:middle
add this new usage description

00:21:04.736 --> 00:21:05.086 A:middle
string.

00:21:06.256 --> 00:21:07.496 A:middle
There are three reasons why you

00:21:07.496 --> 00:21:08.576 A:middle
should add this usage

00:21:08.576 --> 00:21:09.396 A:middle
description string.

00:21:10.376 --> 00:21:12.066 A:middle
First, you can use this to

00:21:12.066 --> 00:21:14.086 A:middle
convey to users why your

00:21:14.086 --> 00:21:15.696 A:middle
application requires access to

00:21:15.696 --> 00:21:16.136 A:middle
Bluetooth.

00:21:17.436 --> 00:21:19.586 A:middle
Second it is a mandatory string

00:21:19.586 --> 00:21:21.436 A:middle
and failure to adopt it would

00:21:21.436 --> 00:21:22.956 A:middle
lead to a crash upon launch for

00:21:22.956 --> 00:21:23.736 A:middle
your application.

00:21:24.446 --> 00:21:25.666 A:middle
And you see an error like this

00:21:25.666 --> 00:21:26.296 A:middle
in console.

00:21:26.706 --> 00:21:29.456 A:middle
And thirdly, the app review

00:21:29.456 --> 00:21:31.626 A:middle
process reviews all usage

00:21:31.626 --> 00:21:33.526 A:middle
description strings to ensure

00:21:33.636 --> 00:21:35.396 A:middle
that they are nonempty and

00:21:35.476 --> 00:21:36.006 A:middle
meaningful.

00:21:36.006 --> 00:21:40.446 A:middle
So let's take a look at some

00:21:40.446 --> 00:21:40.896 A:middle
code now.

00:21:41.666 --> 00:21:42.916 A:middle
We've created a new property

00:21:42.916 --> 00:21:43.876 A:middle
this year that is the

00:21:43.876 --> 00:21:46.276 A:middle
authorization property, and this

00:21:46.276 --> 00:21:48.526 A:middle
will tell you whether a user has

00:21:48.526 --> 00:21:50.526 A:middle
allowed or denied access to your

00:21:50.526 --> 00:21:52.786 A:middle
application and whether you

00:21:52.786 --> 00:21:54.046 A:middle
check for this authorization

00:21:54.046 --> 00:21:54.806 A:middle
property.

00:21:55.316 --> 00:21:57.326 A:middle
In order to under that, let's

00:21:57.326 --> 00:21:58.996 A:middle
take a look the flow of a Core

00:21:58.996 --> 00:21:59.966 A:middle
Bluetooth application.

00:22:00.406 --> 00:22:02.446 A:middle
In your Core Bluetooth

00:22:02.446 --> 00:22:04.336 A:middle
application, the first thing you

00:22:04.336 --> 00:22:06.586 A:middle
probably do is instantiate a

00:22:06.586 --> 00:22:08.506 A:middle
CBCentralManager or a

00:22:08.506 --> 00:22:09.516 A:middle
CBPeripheralManager.

00:22:10.116 --> 00:22:11.336 A:middle
And so the first delegate

00:22:11.336 --> 00:22:12.716 A:middle
callbacks that you will receive

00:22:12.926 --> 00:22:14.316 A:middle
from Bluetooth will be the

00:22:14.316 --> 00:22:15.916 A:middle
ManagerDidUpdateState callback.

00:22:16.816 --> 00:22:18.536 A:middle
In this, you can look at the

00:22:18.536 --> 00:22:20.786 A:middle
value of state to see if the

00:22:20.786 --> 00:22:22.026 A:middle
manager is ready to be used.

00:22:23.316 --> 00:22:24.636 A:middle
Now if the value of state is

00:22:24.636 --> 00:22:26.446 A:middle
CBManagerstate.unauthorized,

00:22:26.976 --> 00:22:28.106 A:middle
then you can look at a new

00:22:28.106 --> 00:22:30.236 A:middle
authorization property to see if

00:22:30.236 --> 00:22:31.726 A:middle
the user has denied access to

00:22:31.726 --> 00:22:32.616 A:middle
your application.

00:22:35.876 --> 00:22:37.606 A:middle
So if your code looks like this

00:22:37.646 --> 00:22:39.886 A:middle
today, where you only look at

00:22:39.886 --> 00:22:41.606 A:middle
one or two values of manager

00:22:41.606 --> 00:22:44.216 A:middle
state, I urge you to please take

00:22:44.216 --> 00:22:45.896 A:middle
ten minutes aside today and

00:22:45.896 --> 00:22:47.546 A:middle
update your code so it looks a

00:22:47.546 --> 00:22:49.516 A:middle
little more like this where you

00:22:49.516 --> 00:22:51.146 A:middle
look at all the possible values

00:22:51.196 --> 00:22:53.306 A:middle
of manager state, and this also

00:22:53.306 --> 00:22:55.146 A:middle
give you a really smooth path to

00:22:55.146 --> 00:22:56.266 A:middle
start adopting user

00:22:56.266 --> 00:22:57.426 A:middle
authorization in your

00:22:57.426 --> 00:22:58.036 A:middle
application.

00:22:58.036 --> 00:23:00.706 A:middle
All of this code will be

00:22:58.036 --> 00:23:00.706 A:middle
All of this code will be

00:23:00.706 --> 00:23:02.336 A:middle
available in the sample project,

00:23:02.476 --> 00:23:03.456 A:middle
details of which will be

00:23:03.456 --> 00:23:04.516 A:middle
provided in the more info

00:23:04.516 --> 00:23:06.786 A:middle
session, section, sorry.

00:23:09.146 --> 00:23:11.006 A:middle
Let's now move onto accessory

00:23:11.006 --> 00:23:11.696 A:middle
notifications.

00:23:15.236 --> 00:23:18.406 A:middle
Apple implements ANCS, or Apple

00:23:18.406 --> 00:23:19.886 A:middle
Notification Center Service,

00:23:20.496 --> 00:23:21.976 A:middle
which is a GATT server service

00:23:22.446 --> 00:23:24.466 A:middle
that allows your accessories to

00:23:24.466 --> 00:23:27.126 A:middle
get system and app notifications

00:23:27.496 --> 00:23:29.086 A:middle
from the iOS Notification

00:23:29.086 --> 00:23:29.546 A:middle
Center.

00:23:30.876 --> 00:23:32.286 A:middle
If you want to learn more about

00:23:32.286 --> 00:23:34.086 A:middle
ANCS, then the detailed

00:23:34.086 --> 00:23:35.826 A:middle
documentation is available on

00:23:35.826 --> 00:23:39.546 A:middle
developer.apple.com.

00:23:39.746 --> 00:23:41.676 A:middle
The privacy update for ANCS is

00:23:41.726 --> 00:23:44.176 A:middle
that user authorization will now

00:23:44.176 --> 00:23:45.926 A:middle
be required in order to share

00:23:45.926 --> 00:23:47.856 A:middle
notifications with accessories.

00:23:48.806 --> 00:23:50.806 A:middle
And so if a user updates to iOS

00:23:50.866 --> 00:23:53.466 A:middle
13, when your accessory connects

00:23:53.466 --> 00:23:54.416 A:middle
in and registers for

00:23:54.416 --> 00:23:56.116 A:middle
notifications, we'll show this

00:23:56.116 --> 00:23:57.656 A:middle
permission prompt to users.

00:23:58.826 --> 00:24:00.616 A:middle
Once users make this decision,

00:23:58.826 --> 00:24:00.616 A:middle
Once users make this decision,

00:24:00.796 --> 00:24:02.106 A:middle
they can modify it under the

00:24:02.106 --> 00:24:04.106 A:middle
device-specific settings in

00:24:04.106 --> 00:24:04.786 A:middle
Bluetooth settings.

00:24:04.846 --> 00:24:07.926 A:middle
Now, we know that this flow

00:24:07.926 --> 00:24:09.636 A:middle
could be a lot better for users

00:24:10.096 --> 00:24:11.556 A:middle
if the permission prompt was

00:24:11.556 --> 00:24:12.976 A:middle
shown at a time when it was more

00:24:12.976 --> 00:24:15.956 A:middle
contextually relevant and in

00:24:15.956 --> 00:24:16.806 A:middle
your application.

00:24:17.496 --> 00:24:19.396 A:middle
And so we've created new ANCS

00:24:19.396 --> 00:24:21.716 A:middle
privacy APIs to help you enable

00:24:21.716 --> 00:24:22.866 A:middle
this experience.

00:24:24.496 --> 00:24:27.336 A:middle
From your CBCentralManager, if

00:24:27.336 --> 00:24:28.636 A:middle
you know that the peripheral

00:24:28.636 --> 00:24:29.806 A:middle
that you are connecting to

00:24:29.926 --> 00:24:32.086 A:middle
supports ANCS, you can use this

00:24:32.086 --> 00:24:33.436 A:middle
new CBConnect option.

00:24:34.796 --> 00:24:36.656 A:middle
If you do this, then upon

00:24:36.656 --> 00:24:38.166 A:middle
successful connection and

00:24:38.236 --> 00:24:39.746 A:middle
pairing, we'll show the

00:24:39.746 --> 00:24:41.126 A:middle
permission alert to the user

00:24:41.466 --> 00:24:42.706 A:middle
while the user is in your

00:24:42.706 --> 00:24:44.986 A:middle
application, and when they

00:24:44.986 --> 00:24:46.136 A:middle
respond to this permission

00:24:46.136 --> 00:24:47.936 A:middle
alert, your application will

00:24:47.936 --> 00:24:49.916 A:middle
receive a delegate callback that

00:24:49.916 --> 00:24:51.586 A:middle
tells you that ANCS

00:24:51.586 --> 00:24:53.046 A:middle
authorization has changed.

00:24:54.146 --> 00:24:55.356 A:middle
And you can fetch the value of

00:24:55.426 --> 00:24:56.556 A:middle
that using the getter

00:24:56.556 --> 00:24:57.666 A:middle
ancsAuthorized.

00:25:00.616 --> 00:25:02.596 A:middle
So, we spoke about user

00:25:02.596 --> 00:25:04.556 A:middle
authorization and accessory

00:25:04.556 --> 00:25:05.336 A:middle
notifications.

00:25:06.106 --> 00:25:07.586 A:middle
But apart from this, there's a

00:25:07.586 --> 00:25:09.046 A:middle
lot more that your application

00:25:09.046 --> 00:25:11.256 A:middle
can do to be a good custodian of

00:25:11.286 --> 00:25:12.116 A:middle
user privacy.

00:25:13.106 --> 00:25:14.136 A:middle
So let's take a look at some

00:25:14.136 --> 00:25:16.026 A:middle
best practices for your Core

00:25:16.026 --> 00:25:16.936 A:middle
Bluetooth applications.

00:25:20.996 --> 00:25:23.316 A:middle
First and foremost, invoke Core

00:25:23.316 --> 00:25:25.106 A:middle
Bluetooth APIs only when

00:25:25.106 --> 00:25:26.936 A:middle
required and at a time that it

00:25:26.936 --> 00:25:28.356 A:middle
is contextually relevant to

00:25:28.356 --> 00:25:28.796 A:middle
users.

00:25:30.736 --> 00:25:33.366 A:middle
Next, scan and advertise for a

00:25:33.366 --> 00:25:34.936 A:middle
limited duration only.

00:25:35.276 --> 00:25:36.356 A:middle
When your application is

00:25:36.356 --> 00:25:38.426 A:middle
advertising, it is essentially

00:25:38.426 --> 00:25:39.766 A:middle
sharing information from the

00:25:39.766 --> 00:25:41.646 A:middle
user's phone and limiting the

00:25:41.646 --> 00:25:43.346 A:middle
duration for which you do this

00:25:43.416 --> 00:25:44.736 A:middle
helps foster user trust.

00:25:47.616 --> 00:25:48.716 A:middle
Keep your scan filters as

00:25:48.716 --> 00:25:51.656 A:middle
specific as possible and look

00:25:51.656 --> 00:25:53.596 A:middle
only for the UUIDs that your

00:25:53.596 --> 00:25:55.836 A:middle
application is invested in.

00:25:57.256 --> 00:25:59.846 A:middle
And lastly, be transparent with

00:25:59.846 --> 00:26:01.676 A:middle
users about why your application

00:25:59.846 --> 00:26:01.676 A:middle
users about why your application

00:26:01.676 --> 00:26:02.986 A:middle
requires access to Core

00:26:02.986 --> 00:26:03.376 A:middle
Bluetooth.

00:26:03.476 --> 00:26:05.746 A:middle
If you do this, then users are

00:26:05.746 --> 00:26:06.896 A:middle
more likely to make the right

00:26:06.896 --> 00:26:07.386 A:middle
decision.

00:26:08.876 --> 00:26:10.486 A:middle
If you want to learn more about

00:26:10.806 --> 00:26:12.256 A:middle
designing your applications for

00:26:12.256 --> 00:26:14.066 A:middle
privacy, I invite you all to

00:26:14.066 --> 00:26:15.416 A:middle
look at the recorded sessions

00:26:15.496 --> 00:26:17.266 A:middle
for the privacy talks from this

00:26:17.266 --> 00:26:19.056 A:middle
year's and previous years' WWDC

00:26:19.146 --> 00:26:19.546 A:middle
sessions.

00:26:20.236 --> 00:26:24.436 A:middle
So let's all be proactive in

00:26:24.436 --> 00:26:26.116 A:middle
thinking about and safeguarding

00:26:26.116 --> 00:26:28.626 A:middle
user privacy as we design and

00:26:28.626 --> 00:26:30.036 A:middle
implement our Core Bluetooth

00:26:30.036 --> 00:26:30.676 A:middle
applications.

00:26:32.066 --> 00:26:33.296 A:middle
I'd now like to hand it over to

00:26:33.296 --> 00:26:34.476 A:middle
Duy to walk you through

00:26:34.476 --> 00:26:35.216 A:middle
developer tools.

00:26:35.686 --> 00:26:35.976 A:middle
Thank you.

00:26:36.516 --> 00:26:39.616 A:middle
[ Applause ]

00:26:40.116 --> 00:26:40.346 A:middle
&gt;&gt; Thanks.

00:26:40.836 --> 00:26:42.436 A:middle
I'd like to talk to you a little

00:26:42.436 --> 00:26:44.476 A:middle
bit about a new feature we've

00:26:44.476 --> 00:26:45.546 A:middle
added to the Core Bluetooth

00:26:45.616 --> 00:26:46.166 A:middle
PacketLogger.

00:26:47.186 --> 00:26:48.886 A:middle
For those that's not familiar

00:26:48.886 --> 00:26:49.676 A:middle
with the Core Bluetooth

00:26:49.676 --> 00:26:50.996 A:middle
PacketLogger, this is our

00:26:50.996 --> 00:26:52.326 A:middle
Bluetooth packet analysis

00:26:52.326 --> 00:26:53.936 A:middle
application built for Apple

00:26:53.936 --> 00:26:54.586 A:middle
developers.

00:26:56.016 --> 00:26:57.346 A:middle
Today, when you install a login

00:26:57.346 --> 00:26:59.346 A:middle
profile on your iOS device and

00:26:59.346 --> 00:27:00.596 A:middle
trigger sys diagnose, this is

00:26:59.346 --> 00:27:00.596 A:middle
trigger sys diagnose, this is

00:27:00.636 --> 00:27:02.446 A:middle
the application that can open up

00:27:02.446 --> 00:27:04.216 A:middle
the small PacketLogger file

00:27:04.286 --> 00:27:05.346 A:middle
that's inside.

00:27:05.996 --> 00:27:08.256 A:middle
The application can decode all

00:27:08.256 --> 00:27:09.396 A:middle
protocols defined by the

00:27:09.446 --> 00:27:10.586 A:middle
Bluetooth SIG and by Apple.

00:27:10.586 --> 00:27:12.796 A:middle
And because it can understand

00:27:12.796 --> 00:27:13.986 A:middle
all of these protocols, it will

00:27:13.986 --> 00:27:15.366 A:middle
also highlight errors to warn

00:27:15.366 --> 00:27:16.466 A:middle
you of potential problems.

00:27:17.536 --> 00:27:19.276 A:middle
It has rich filtering options.

00:27:19.736 --> 00:27:21.036 A:middle
You can filter by trust

00:27:21.036 --> 00:27:22.356 A:middle
connections or protocol.

00:27:23.836 --> 00:27:25.246 A:middle
You can search by text or regex,

00:27:26.526 --> 00:27:27.836 A:middle
comment and flag individual

00:27:27.836 --> 00:27:30.696 A:middle
packets, and even export raw

00:27:30.696 --> 00:27:31.916 A:middle
data for later analysis.

00:27:34.056 --> 00:27:36.566 A:middle
This is what the top level looks

00:27:37.116 --> 00:27:42.786 A:middle
like in dark mode, and in this

00:27:42.786 --> 00:27:44.456 A:middle
example, I have filtered only

00:27:44.456 --> 00:27:46.426 A:middle
for the ACI and ATT protocols.

00:27:47.656 --> 00:27:49.696 A:middle
But you can also click down,

00:27:50.016 --> 00:27:52.246 A:middle
click on each of the packets and

00:27:52.246 --> 00:27:54.426 A:middle
drill down to view the full

00:27:54.456 --> 00:27:58.566 A:middle
protocol hierarchy and examine

00:27:58.616 --> 00:27:59.676 A:middle
each of the protocols

00:27:59.826 --> 00:28:03.126 A:middle
individually down to the lowest

00:27:59.826 --> 00:28:03.126 A:middle
individually down to the lowest

00:28:03.126 --> 00:28:03.936 A:middle
layer in raw bytes.

00:28:07.996 --> 00:28:09.256 A:middle
And new for this year, we've

00:28:09.256 --> 00:28:10.666 A:middle
added a feature which we think

00:28:10.736 --> 00:28:11.606 A:middle
you're really going to like.

00:28:11.916 --> 00:28:12.876 A:middle
It's called Live Capture.

00:28:13.516 --> 00:28:17.326 A:middle
[ Applause ]

00:28:17.826 --> 00:28:19.476 A:middle
This means that you can now

00:28:19.746 --> 00:28:21.426 A:middle
install a login profile on your

00:28:21.426 --> 00:28:23.326 A:middle
iOS device, connect it to your

00:28:23.326 --> 00:28:26.286 A:middle
Mac, launch PacketLogger, and

00:28:26.286 --> 00:28:27.856 A:middle
capture live Bluetooth traffic

00:28:28.216 --> 00:28:29.976 A:middle
from your iOS device to an

00:28:29.976 --> 00:28:30.476 A:middle
accessory.

00:28:30.866 --> 00:28:33.696 A:middle
[applause] Thank you.

00:28:34.508 --> 00:28:36.508 A:middle
[ Applause ]

00:28:38.616 --> 00:28:40.436 A:middle
You can also connect multiple

00:28:40.436 --> 00:28:42.176 A:middle
iOS devices and capture live

00:28:42.176 --> 00:28:42.526 A:middle
traffic.

00:28:43.406 --> 00:28:44.496 A:middle
We hope that this will give you

00:28:44.496 --> 00:28:46.036 A:middle
more context when you debug.

00:28:46.036 --> 00:28:47.246 A:middle
It will make your debug more

00:28:47.246 --> 00:28:49.336 A:middle
interactive and hopefully help

00:28:49.336 --> 00:28:50.676 A:middle
you resolve your problems more

00:28:50.676 --> 00:28:50.976 A:middle
quickly.

00:28:53.416 --> 00:28:55.076 A:middle
And now that you're excited, how

00:28:55.076 --> 00:28:57.216 A:middle
do you set up Live Capture?

00:28:57.646 --> 00:28:59.196 A:middle
You can install the iOS 13

00:28:59.196 --> 00:29:00.526 A:middle
developer beta on your iOS

00:28:59.196 --> 00:29:00.526 A:middle
developer beta on your iOS

00:29:00.526 --> 00:29:03.506 A:middle
device, install the developer

00:29:03.506 --> 00:29:05.966 A:middle
logging profile, launch

00:29:05.966 --> 00:29:08.926 A:middle
PacketLogger, connect your iOS

00:29:08.956 --> 00:29:12.186 A:middle
device to your Mac, select file

00:29:12.186 --> 00:29:13.426 A:middle
New iOS Trace on your

00:29:13.426 --> 00:29:14.926 A:middle
PacketLogger application, and

00:29:14.926 --> 00:29:15.236 A:middle
that's it.

00:29:15.616 --> 00:29:16.346 A:middle
You're live capturing.

00:29:18.096 --> 00:29:19.496 A:middle
Thank you.

00:29:21.666 --> 00:29:22.836 A:middle
There's also an indicator in

00:29:22.836 --> 00:29:24.836 A:middle
your iOS device to tell that

00:29:24.836 --> 00:29:26.086 A:middle
Live Capture is in progress.

00:29:26.616 --> 00:29:29.666 A:middle
And how do you get PacketLogger?

00:29:30.546 --> 00:29:31.876 A:middle
You can download PacketLogger

00:29:31.876 --> 00:29:33.406 A:middle
inside the additional tools for

00:29:33.406 --> 00:29:34.246 A:middle
Xcode package.

00:29:34.246 --> 00:29:36.376 A:middle
The link will be provided in the

00:29:36.376 --> 00:29:37.366 A:middle
more information page.

00:29:38.306 --> 00:29:39.656 A:middle
PacketLogger is inside the

00:29:39.656 --> 00:29:41.106 A:middle
hardware folder of this package.

00:29:41.626 --> 00:29:44.066 A:middle
For best performance, run with

00:29:44.066 --> 00:29:44.976 A:middle
MacOS Catalina.

00:29:48.676 --> 00:29:50.146 A:middle
Let's wrap up now with a

00:29:50.146 --> 00:29:50.556 A:middle
summary.

00:29:56.036 --> 00:29:57.586 A:middle
When developing your accessory

00:29:57.586 --> 00:29:59.076 A:middle
use the chipset with the latest

00:29:59.076 --> 00:30:00.396 A:middle
Bluetooth stand to take

00:29:59.076 --> 00:30:00.396 A:middle
Bluetooth stand to take

00:30:00.396 --> 00:30:01.896 A:middle
advantage of all of the new

00:30:02.286 --> 00:30:03.906 A:middle
performance and power

00:30:03.906 --> 00:30:05.906 A:middle
optimizations like LE 2 Mbps and

00:30:05.906 --> 00:30:06.916 A:middle
Advertising Extension.

00:30:07.476 --> 00:30:10.156 A:middle
You can now build Core Bluetooth

00:30:10.156 --> 00:30:11.866 A:middle
apps for Bluetooth BR/EDR

00:30:11.866 --> 00:30:12.366 A:middle
devices.

00:30:12.516 --> 00:30:13.696 A:middle
We look forward to seeing all of

00:30:13.696 --> 00:30:14.826 A:middle
the new applications and

00:30:14.826 --> 00:30:15.746 A:middle
accessories you build.

00:30:17.896 --> 00:30:19.166 A:middle
And always protect your user

00:30:19.166 --> 00:30:20.806 A:middle
privacy and protect their trust

00:30:20.806 --> 00:30:21.766 A:middle
in your brand and product.

00:30:22.436 --> 00:30:25.116 A:middle
And take advantage of the

00:30:25.116 --> 00:30:25.976 A:middle
developer beta.

00:30:26.576 --> 00:30:27.586 A:middle
Download the beta and test

00:30:27.586 --> 00:30:27.906 A:middle
today.

00:30:28.506 --> 00:30:29.946 A:middle
IOS has very good adoption

00:30:29.946 --> 00:30:30.196 A:middle
rates.

00:30:30.626 --> 00:30:32.146 A:middle
You don't want your users to run

00:30:32.146 --> 00:30:33.516 A:middle
into problems when they upgrade.

00:30:34.176 --> 00:30:35.746 A:middle
We usually have a small window

00:30:35.746 --> 00:30:36.086 A:middle
to help.

00:30:36.086 --> 00:30:37.816 A:middle
So if you discover a problem

00:30:37.816 --> 00:30:39.006 A:middle
early enough, you can work with

00:30:39.006 --> 00:30:40.206 A:middle
us to resolve the issues.

00:30:40.746 --> 00:30:43.266 A:middle
And refer to the accessory

00:30:43.366 --> 00:30:44.866 A:middle
design guidelines for Apple

00:30:44.866 --> 00:30:45.406 A:middle
devices.

00:30:45.936 --> 00:30:46.806 A:middle
We have a great set of

00:30:46.806 --> 00:30:48.196 A:middle
guidelines there to tell you how

00:30:48.196 --> 00:30:49.596 A:middle
to develop the best accessory.

00:30:50.146 --> 00:30:52.996 A:middle
And finally, Apple is here to

00:30:52.996 --> 00:30:53.226 A:middle
help.

00:30:53.956 --> 00:30:55.346 A:middle
Use the feedback app, reach out

00:30:55.346 --> 00:30:56.686 A:middle
to us so we can work together in

00:30:56.686 --> 00:30:57.526 A:middle
your accessories and

00:30:57.526 --> 00:30:58.126 A:middle
applications.

00:30:58.776 --> 00:31:01.046 A:middle
And if you have more questions,

00:30:58.776 --> 00:31:01.046 A:middle
And if you have more questions,

00:31:01.046 --> 00:31:02.286 A:middle
come to the Core Bluetooth lab

00:31:02.286 --> 00:31:02.746 A:middle
at 4.

00:31:02.746 --> 00:31:03.826 A:middle
Thank you.

00:31:04.516 --> 00:31:08.500 A:middle
[ Applause ]
