WEBVTT

00:00:01.516 --> 00:00:06.546 A:middle
[ Music ]

00:00:07.046 --> 00:00:07.626 A:middle
&gt;&gt; Good afternoon, ladies and

00:00:07.626 --> 00:00:07.966 A:middle
gentlemen.

00:00:08.786 --> 00:00:10.206 A:middle
Please welcome Vice President of

00:00:10.206 --> 00:00:12.366 A:middle
Software Sebastien Marineau-Mes.

00:00:13.516 --> 00:00:23.756 A:middle
[ Applause ]

00:00:24.256 --> 00:00:25.626 A:middle
&gt;&gt; Good afternoon, everyone, and

00:00:25.626 --> 00:00:28.046 A:middle
welcome to WWDC.

00:00:28.046 --> 00:00:29.536 A:middle
Did we love the morning keynote?

00:00:30.161 --> 00:00:32.161 A:middle
[ Applause ]

00:00:32.305 --> 00:00:32.886 A:middle
There you go.

00:00:33.016 --> 00:00:34.556 A:middle
[ Applause ]

00:00:34.556 --> 00:00:36.206 A:middle
Now this year is one of our

00:00:36.256 --> 00:00:38.156 A:middle
biggest for developers and we're

00:00:38.156 --> 00:00:39.366 A:middle
really excited to show you what

00:00:39.366 --> 00:00:40.926 A:middle
we've been working on and see

00:00:40.926 --> 00:00:41.816 A:middle
what you think.

00:00:42.636 --> 00:00:44.126 A:middle
This morning's keynote was just

00:00:44.176 --> 00:00:45.656 A:middle
a taste of what's happening this

00:00:45.756 --> 00:00:45.986 A:middle
year.

00:00:46.406 --> 00:00:47.836 A:middle
There is so much more that we

00:00:47.836 --> 00:00:49.026 A:middle
want to share, and this

00:00:49.026 --> 00:00:50.076 A:middle
afternoon we're going to focus

00:00:50.116 --> 00:00:51.506 A:middle
on the areas that matter most to

00:00:51.586 --> 00:00:52.956 A:middle
you as developers.

00:00:53.516 --> 00:00:54.586 A:middle
Are you ready to hear more?

00:00:55.016 --> 00:00:56.386 A:middle
[ Applause ]

00:00:56.386 --> 00:00:56.626 A:middle
There we go.

00:00:58.046 --> 00:00:59.616 A:middle
Now we've taken a huge step in

00:00:59.616 --> 00:01:01.036 A:middle
terms of developer experience

00:00:59.616 --> 00:01:01.036 A:middle
terms of developer experience

00:01:01.036 --> 00:01:03.136 A:middle
this year with the new SwiftUI

00:01:03.416 --> 00:01:05.096 A:middle
framework as well as great

00:01:05.146 --> 00:01:07.176 A:middle
interactive tools in Xcode.

00:01:08.316 --> 00:01:09.696 A:middle
And we've really seen each of

00:01:09.696 --> 00:01:11.976 A:middle
our platforms get even deeper at

00:01:11.976 --> 00:01:12.916 A:middle
what they do best.

00:01:13.326 --> 00:01:14.366 A:middle
We have powerful new pro

00:01:14.366 --> 00:01:16.326 A:middle
capabilities for Mac, and new

00:01:16.326 --> 00:01:18.256 A:middle
Dark Mode and rich updates --

00:01:18.836 --> 00:01:20.526 A:middle
sorry, independence for watchOS.

00:01:21.546 --> 00:01:23.776 A:middle
On iOS, a new Dark Mode and

00:01:23.776 --> 00:01:24.636 A:middle
great app updates.

00:01:25.906 --> 00:01:27.806 A:middle
And finally, on iPadOS, a

00:01:27.806 --> 00:01:29.476 A:middle
powerful operating system that

00:01:29.476 --> 00:01:30.626 A:middle
now stands on its own.

00:01:31.176 --> 00:01:33.036 A:middle
Sorry, the monitors aren't

00:01:33.036 --> 00:01:33.576 A:middle
working down here.

00:01:34.516 --> 00:01:36.856 A:middle
[ Laughter ]

00:01:37.356 --> 00:01:37.746 A:middle
There we go.

00:01:38.016 --> 00:01:38.986 A:middle
One of those is working, so I

00:01:38.986 --> 00:01:39.866 A:middle
will go over to the left.

00:01:40.606 --> 00:01:42.096 A:middle
Now these platforms represent a

00:01:42.276 --> 00:01:44.246 A:middle
diverse range of devices and

00:01:44.246 --> 00:01:45.416 A:middle
building great support for them

00:01:45.416 --> 00:01:47.176 A:middle
is easy, thanks to a choice of

00:01:47.176 --> 00:01:48.666 A:middle
many tools and APIs like

00:01:49.166 --> 00:01:51.616 A:middle
AutoLayout, Size Classes and

00:01:51.676 --> 00:01:52.076 A:middle
SwiftUI.

00:01:53.026 --> 00:01:54.416 A:middle
So no more letterbox.

00:01:54.416 --> 00:01:55.606 A:middle
Your users get the best

00:01:55.606 --> 00:01:57.266 A:middle
experience when your app works

00:01:57.386 --> 00:01:59.096 A:middle
well on a wide range of device

00:01:59.166 --> 00:01:59.626 A:middle
sizes.

00:02:00.166 --> 00:02:01.586 A:middle
And starting next spring, it

00:02:01.676 --> 00:02:03.126 A:middle
will be an app store requirement

00:02:03.126 --> 00:02:05.196 A:middle
to deliver UI that adapts to

00:02:05.196 --> 00:02:06.126 A:middle
different screen sizes.

00:02:06.706 --> 00:02:09.876 A:middle
Now tvOS is offering cool new

00:02:09.876 --> 00:02:10.316 A:middle
capabilities --

00:02:12.016 --> 00:02:14.016 A:middle
[ Laughter ]

00:02:14.016 --> 00:02:15.566 A:middle
[ Applause ]

00:02:15.566 --> 00:02:15.776 A:middle
There we go.

00:02:17.516 --> 00:02:20.776 A:middle
[ Applause ]

00:02:21.276 --> 00:02:22.646 A:middle
Now tvOS is offering cool new

00:02:22.646 --> 00:02:24.126 A:middle
capabilities for developers this

00:02:24.226 --> 00:02:25.946 A:middle
year, including multi-user

00:02:26.016 --> 00:02:27.726 A:middle
support for third-party apps,

00:02:27.856 --> 00:02:29.316 A:middle
new UI elements and options,

00:02:29.716 --> 00:02:31.946 A:middle
SwiftUI and of course support

00:02:31.946 --> 00:02:34.126 A:middle
for Xbox and PlayStation game

00:02:34.126 --> 00:02:34.936 A:middle
controllers.

00:02:35.191 --> 00:02:37.191 A:middle
[ Applause ]

00:02:37.366 --> 00:02:39.146 A:middle
Now this morning we announced an

00:02:39.146 --> 00:02:41.196 A:middle
incredible new hardware platform

00:02:41.196 --> 00:02:42.336 A:middle
with the new Mac Pro.

00:02:42.336 --> 00:02:42.976 A:middle
Do we love it?

00:02:43.516 --> 00:02:45.546 A:middle
[ Applause ]

00:02:46.046 --> 00:02:47.346 A:middle
It is incredible, and it will

00:02:47.346 --> 00:02:49.036 A:middle
really unlock amazing new kinds

00:02:49.036 --> 00:02:49.396 A:middle
of apps.

00:02:50.846 --> 00:02:52.316 A:middle
And we also built technologies

00:02:52.626 --> 00:02:54.436 A:middle
that span all of our platforms,

00:02:54.436 --> 00:02:56.006 A:middle
and we'll have a look at a few

00:02:56.006 --> 00:02:58.066 A:middle
of these areas today, including

00:02:58.066 --> 00:03:00.646 A:middle
accessibility, privacy, machine

00:02:58.066 --> 00:03:00.646 A:middle
accessibility, privacy, machine

00:03:00.646 --> 00:03:02.666 A:middle
learning, Siri, augmented

00:03:02.666 --> 00:03:04.756 A:middle
reality and finally Metal.

00:03:06.166 --> 00:03:07.576 A:middle
Now we want to focus on these

00:03:07.576 --> 00:03:08.986 A:middle
three big areas this afternoon,

00:03:08.986 --> 00:03:09.926 A:middle
and we're going to start with

00:03:09.926 --> 00:03:11.046 A:middle
developer productivity.

00:03:11.956 --> 00:03:13.836 A:middle
Now everyone in this room knows

00:03:13.836 --> 00:03:15.186 A:middle
that great tools can

00:03:15.186 --> 00:03:16.366 A:middle
dramatically improve your

00:03:16.366 --> 00:03:17.036 A:middle
productivity.

00:03:17.596 --> 00:03:19.466 A:middle
Great tools give you more time

00:03:19.516 --> 00:03:21.136 A:middle
to be creative and they let you

00:03:21.136 --> 00:03:22.376 A:middle
build better apps.

00:03:23.296 --> 00:03:24.316 A:middle
And the foundation of that

00:03:24.316 --> 00:03:26.106 A:middle
experience is the programming

00:03:26.106 --> 00:03:26.606 A:middle
language.

00:03:27.256 --> 00:03:29.226 A:middle
Over the last five years, Swift

00:03:29.226 --> 00:03:31.326 A:middle
has matured and is built into

00:03:31.326 --> 00:03:32.706 A:middle
every Apple platform.

00:03:33.256 --> 00:03:34.386 A:middle
And Swift gives us the

00:03:34.386 --> 00:03:36.156 A:middle
foundation for SwiftUI.

00:03:37.226 --> 00:03:39.446 A:middle
And Xcode is so much more than a

00:03:39.446 --> 00:03:41.456 A:middle
code debugger -- sorry, code

00:03:41.456 --> 00:03:42.646 A:middle
editor and debugger.

00:03:43.176 --> 00:03:44.456 A:middle
It includes everything that you

00:03:44.456 --> 00:03:46.736 A:middle
need to build an app, including

00:03:47.036 --> 00:03:48.186 A:middle
support for continuous

00:03:48.186 --> 00:03:49.486 A:middle
integration and testing.

00:03:49.736 --> 00:03:52.166 A:middle
And it gives you tools that let

00:03:52.166 --> 00:03:54.026 A:middle
you explore new technologies

00:03:54.396 --> 00:03:55.906 A:middle
such as machine learning and

00:03:55.906 --> 00:03:56.826 A:middle
augmented reality.

00:03:57.766 --> 00:03:59.536 A:middle
And finally, built on the strong

00:03:59.606 --> 00:04:01.416 A:middle
foundation of our platforms, the

00:03:59.606 --> 00:04:01.416 A:middle
foundation of our platforms, the

00:04:01.516 --> 00:04:02.826 A:middle
SwiftUI framework will

00:04:02.826 --> 00:04:04.996 A:middle
revolutionize how you build user

00:04:04.996 --> 00:04:05.656 A:middle
interfaces.

00:04:05.836 --> 00:04:07.116 A:middle
And together, these three

00:04:07.116 --> 00:04:08.716 A:middle
elements deliver a whole new

00:04:08.716 --> 00:04:10.486 A:middle
level of productivity and they

00:04:10.486 --> 00:04:12.546 A:middle
will fundamentally transform how

00:04:12.546 --> 00:04:14.006 A:middle
all of you build apps.

00:04:14.926 --> 00:04:16.755 A:middle
Now, are you ready to dive right

00:04:16.755 --> 00:04:17.446 A:middle
into SwiftUI?

00:04:18.036 --> 00:04:20.036 A:middle
[ Applause ]

00:04:20.055 --> 00:04:21.786 A:middle
Let's have Josh come up and tell

00:04:21.786 --> 00:04:22.186 A:middle
us more.

00:04:22.266 --> 00:04:22.506 A:middle
Josh?

00:04:23.516 --> 00:04:25.806 A:middle
[ Applause ]

00:04:26.306 --> 00:04:27.116 A:middle
&gt;&gt; Thanks, Sebastien.

00:04:27.916 --> 00:04:31.336 A:middle
Okay, so SwiftUI, as you saw

00:04:31.336 --> 00:04:32.536 A:middle
this morning, is a brand-new

00:04:32.536 --> 00:04:33.926 A:middle
user interface framework built

00:04:34.016 --> 00:04:36.526 A:middle
from the ground up in Swift for

00:04:36.526 --> 00:04:36.876 A:middle
Swift.

00:04:37.756 --> 00:04:38.816 A:middle
We designed it to let you write

00:04:38.976 --> 00:04:40.696 A:middle
less code and have the code that

00:04:40.696 --> 00:04:42.346 A:middle
you do write be better code,

00:04:42.886 --> 00:04:44.186 A:middle
while letting you use more of

00:04:44.186 --> 00:04:46.046 A:middle
that code across all Apple

00:04:46.046 --> 00:04:46.576 A:middle
platforms.

00:04:47.646 --> 00:04:49.086 A:middle
Now first of all, there's so

00:04:49.086 --> 00:04:50.436 A:middle
much functionality built into

00:04:50.436 --> 00:04:52.056 A:middle
each individual line that you

00:04:52.106 --> 00:04:53.286 A:middle
write that you're just going to

00:04:53.286 --> 00:04:54.636 A:middle
write way less code.

00:04:55.516 --> 00:04:56.356 A:middle
So let's take the app for

00:04:56.466 --> 00:04:57.806 A:middle
choosing macOS release names

00:04:57.806 --> 00:04:58.796 A:middle
that we looked at this morning,

00:04:59.246 --> 00:05:00.026 A:middle
but without the animated

00:04:59.246 --> 00:05:00.026 A:middle
but without the animated

00:05:00.026 --> 00:05:00.556 A:middle
transitions.

00:05:01.476 --> 00:05:02.376 A:middle
If you've written an app with

00:05:02.376 --> 00:05:04.276 A:middle
UIKit before, you know the types

00:05:04.276 --> 00:05:05.896 A:middle
of pieces that you need in order

00:05:05.896 --> 00:05:06.786 A:middle
to build this interface.

00:05:07.606 --> 00:05:09.476 A:middle
It's not a lot of views, but

00:05:09.476 --> 00:05:10.686 A:middle
there are many individual

00:05:10.686 --> 00:05:11.836 A:middle
details that you need to get

00:05:11.836 --> 00:05:12.016 A:middle
right.

00:05:12.886 --> 00:05:15.136 A:middle
With SwiftUI, it is way less

00:05:15.236 --> 00:05:15.536 A:middle
code.

00:05:16.156 --> 00:05:18.256 A:middle
Fewer than 20 lines focused on

00:05:18.256 --> 00:05:19.706 A:middle
just three key things.

00:05:20.666 --> 00:05:22.636 A:middle
First, a few lines to define the

00:05:22.696 --> 00:05:23.766 A:middle
structure and layout of your

00:05:23.766 --> 00:05:24.126 A:middle
views.

00:05:24.766 --> 00:05:27.456 A:middle
Then some image and text views

00:05:27.866 --> 00:05:28.836 A:middle
to display your content.

00:05:30.346 --> 00:05:31.726 A:middle
And finally, parameters and

00:05:31.726 --> 00:05:33.366 A:middle
modifiers to adjust how it all

00:05:33.366 --> 00:05:33.506 A:middle
looks.

00:05:34.636 --> 00:05:35.706 A:middle
Now let' stake a look a little

00:05:35.706 --> 00:05:36.896 A:middle
bit more closely at just a few

00:05:36.896 --> 00:05:37.456 A:middle
of these lines.

00:05:38.456 --> 00:05:39.726 A:middle
The scrolling list itself is

00:05:39.786 --> 00:05:41.536 A:middle
barely any code at all.

00:05:41.846 --> 00:05:43.556 A:middle
You just declare the list and

00:05:43.666 --> 00:05:45.076 A:middle
then describe the model objects

00:05:45.076 --> 00:05:46.476 A:middle
to be used in each row.

00:05:46.796 --> 00:05:48.146 A:middle
There's no setup, there's no

00:05:48.146 --> 00:05:49.656 A:middle
configuration and there's no

00:05:49.656 --> 00:05:50.116 A:middle
callbacks.

00:05:50.116 --> 00:05:52.596 A:middle
Now the image at the top is just

00:05:52.596 --> 00:05:53.106 A:middle
as simple.

00:05:53.456 --> 00:05:54.896 A:middle
You display an image, clip it to

00:05:54.896 --> 00:05:56.416 A:middle
a circle and add a shadow.

00:05:56.416 --> 00:05:58.906 A:middle
And it's not just less code.

00:05:59.026 --> 00:05:59.846 A:middle
It's better code.

00:06:00.656 --> 00:06:02.716 A:middle
We designed the API to make the

00:06:02.716 --> 00:06:04.336 A:middle
obvious approach be the right

00:06:04.336 --> 00:06:04.846 A:middle
approach.

00:06:05.796 --> 00:06:07.096 A:middle
The right way to create this

00:06:07.096 --> 00:06:09.036 A:middle
label is exactly the one line of

00:06:09.086 --> 00:06:09.986 A:middle
code that you would think to

00:06:09.986 --> 00:06:10.186 A:middle
write.

00:06:10.786 --> 00:06:12.506 A:middle
It supports dynamic type, Dark

00:06:12.506 --> 00:06:13.216 A:middle
Mode and more.

00:06:13.856 --> 00:06:15.006 A:middle
In fact, even the string

00:06:15.006 --> 00:06:16.826 A:middle
interpolation used here is fully

00:06:16.826 --> 00:06:17.516 A:middle
localizable.

00:06:18.706 --> 00:06:19.906 A:middle
This simplicity eliminates

00:06:19.906 --> 00:06:21.576 A:middle
entire categories of errors.

00:06:22.436 --> 00:06:23.646 A:middle
Looking at our list again, its

00:06:23.646 --> 00:06:25.476 A:middle
rows update automatically if the

00:06:25.476 --> 00:06:27.256 A:middle
model changes, ensuring that

00:06:27.256 --> 00:06:28.996 A:middle
your UI is always up to date and

00:06:28.996 --> 00:06:30.276 A:middle
never displaying out-of-date

00:06:30.276 --> 00:06:30.396 A:middle
data.

00:06:30.526 --> 00:06:33.496 A:middle
And it's easy to read too.

00:06:33.596 --> 00:06:34.676 A:middle
The code for this image with a

00:06:34.676 --> 00:06:36.336 A:middle
corner radius of three says

00:06:36.366 --> 00:06:37.226 A:middle
exactly that.

00:06:38.296 --> 00:06:39.946 A:middle
Reading SwiftUI is like having

00:06:39.976 --> 00:06:41.306 A:middle
someone explain that interface

00:06:41.416 --> 00:06:41.776 A:middle
to you.

00:06:42.556 --> 00:06:44.296 A:middle
And SwiftUi's code is available

00:06:44.296 --> 00:06:46.626 A:middle
everywhere, helping you reuse

00:06:46.626 --> 00:06:48.156 A:middle
more of your code across all

00:06:48.156 --> 00:06:48.886 A:middle
Apple platforms.

00:06:48.886 --> 00:06:50.586 A:middle
Now you've long been able to

00:06:50.586 --> 00:06:52.116 A:middle
share your model and low-level

00:06:52.196 --> 00:06:53.556 A:middle
drawing and compositing code,

00:06:54.256 --> 00:06:55.596 A:middle
but higher-level UI code has

00:06:55.596 --> 00:06:56.306 A:middle
remained mostly

00:06:56.306 --> 00:06:57.106 A:middle
platform-specific.

00:06:57.926 --> 00:06:59.306 A:middle
With SwiftUI, we're raising that

00:06:59.336 --> 00:07:01.076 A:middle
bar, enabling you to share far

00:06:59.336 --> 00:07:01.076 A:middle
bar, enabling you to share far

00:07:01.076 --> 00:07:01.416 A:middle
more.

00:07:02.046 --> 00:07:03.116 A:middle
Now of course you're still going

00:07:03.116 --> 00:07:04.076 A:middle
to want to tailor your

00:07:04.076 --> 00:07:05.776 A:middle
interfaces for each individual

00:07:05.776 --> 00:07:07.606 A:middle
platform to ensure that your app

00:07:07.606 --> 00:07:09.116 A:middle
feels great everywhere that you

00:07:09.116 --> 00:07:10.436 A:middle
deploy it.

00:07:10.556 --> 00:07:12.106 A:middle
But with SwiftUI's common set of

00:07:12.106 --> 00:07:13.756 A:middle
API patterns, you can learn

00:07:13.756 --> 00:07:15.636 A:middle
those tools once and then apply

00:07:15.636 --> 00:07:17.326 A:middle
them everywhere, getting you a

00:07:17.326 --> 00:07:18.896 A:middle
native interface on each

00:07:18.956 --> 00:07:19.926 A:middle
platform you deploy to.

00:07:20.946 --> 00:07:22.206 A:middle
SwiftUI is designed with a

00:07:22.446 --> 00:07:24.086 A:middle
strong set of four core

00:07:24.086 --> 00:07:24.566 A:middle
principles.

00:07:25.346 --> 00:07:27.336 A:middle
First, a declarative syntax

00:07:27.336 --> 00:07:29.146 A:middle
shifts UI programming away from

00:07:29.296 --> 00:07:31.096 A:middle
how to update the screen and

00:07:31.096 --> 00:07:32.556 A:middle
instead lets you just focus on

00:07:32.556 --> 00:07:33.466 A:middle
what you want to display.

00:07:34.566 --> 00:07:35.626 A:middle
For example, let's say that you

00:07:35.626 --> 00:07:36.586 A:middle
want to build a label with a

00:07:36.626 --> 00:07:38.366 A:middle
headline font and a gray color.

00:07:39.096 --> 00:07:40.856 A:middle
Describing how to get that is a

00:07:40.856 --> 00:07:42.816 A:middle
multi-step process with many

00:07:42.816 --> 00:07:44.086 A:middle
steps having to happen in a

00:07:44.156 --> 00:07:44.916 A:middle
specific order.

00:07:45.646 --> 00:07:48.146 A:middle
But describing what you want

00:07:48.236 --> 00:07:49.466 A:middle
requires no translation.

00:07:50.046 --> 00:07:52.776 A:middle
Text that says Done with a font

00:07:52.776 --> 00:07:54.186 A:middle
for a headline that's colored

00:07:54.226 --> 00:07:54.506 A:middle
gray.

00:07:55.316 --> 00:07:57.106 A:middle
SwiftUI lets you say exactly

00:07:57.106 --> 00:07:58.606 A:middle
that with a great new

00:07:58.606 --> 00:07:59.616 A:middle
declarative syntax.

00:07:59.616 --> 00:08:01.326 A:middle
And it's the minimum code

00:07:59.616 --> 00:08:01.326 A:middle
And it's the minimum code

00:08:01.326 --> 00:08:03.106 A:middle
necessary to describe exactly

00:08:03.106 --> 00:08:03.616 A:middle
your idea.

00:08:03.616 --> 00:08:05.396 A:middle
And iteration becomes

00:08:05.396 --> 00:08:06.846 A:middle
significantly faster as well.

00:08:07.316 --> 00:08:08.776 A:middle
If you later need to change that

00:08:08.826 --> 00:08:10.516 A:middle
label to become a button, that's

00:08:10.516 --> 00:08:11.536 A:middle
a one-line change.

00:08:12.081 --> 00:08:14.081 A:middle
[ Applause ]

00:08:14.146 --> 00:08:15.026 A:middle
I know, it's pretty great.

00:08:16.516 --> 00:08:19.546 A:middle
[ Applause ]

00:08:20.046 --> 00:08:20.626 A:middle
All right, so our second

00:08:20.626 --> 00:08:21.846 A:middle
principle is that we should

00:08:21.846 --> 00:08:23.246 A:middle
provide automatic functionality

00:08:23.246 --> 00:08:24.316 A:middle
whenever it's possible.

00:08:24.816 --> 00:08:25.996 A:middle
This eliminates the need for a

00:08:26.126 --> 00:08:27.106 A:middle
huge amount of code that you

00:08:27.166 --> 00:08:28.456 A:middle
used to have to write by hand.

00:08:29.316 --> 00:08:30.456 A:middle
Our app for naming macOS

00:08:30.456 --> 00:08:32.066 A:middle
releases is pretty simple, yet

00:08:32.066 --> 00:08:34.015 A:middle
it does include a huge amount of

00:08:34.015 --> 00:08:35.186 A:middle
automatic functionality.

00:08:35.885 --> 00:08:37.645 A:middle
We get default handling of

00:08:37.706 --> 00:08:39.756 A:middle
spacing and safe area insets.

00:08:40.186 --> 00:08:41.826 A:middle
Localizability and layout

00:08:41.895 --> 00:08:43.116 A:middle
adjustments for right-to-left

00:08:43.116 --> 00:08:43.676 A:middle
languages.

00:08:44.226 --> 00:08:47.206 A:middle
Dynamic type, Dark Mode and so

00:08:47.206 --> 00:08:48.986 A:middle
much more, all from that one

00:08:48.986 --> 00:08:49.776 A:middle
minimal description.

00:08:50.376 --> 00:08:51.796 A:middle
It's an incredible amount of

00:08:51.796 --> 00:08:53.106 A:middle
automatic functionality for a

00:08:53.216 --> 00:08:54.776 A:middle
small amount of code, but there

00:08:54.776 --> 00:08:56.476 A:middle
is one more thing that is just

00:08:56.716 --> 00:08:57.936 A:middle
so important that it really

00:08:57.936 --> 00:08:59.106 A:middle
deserves special attention.

00:09:00.036 --> 00:09:01.396 A:middle
Our modern interfaces are

00:09:01.396 --> 00:09:02.606 A:middle
interactive and they're

00:09:02.606 --> 00:09:03.146 A:middle
animated.

00:09:03.506 --> 00:09:05.026 A:middle
And with SwiftUI, that same

00:09:05.026 --> 00:09:06.936 A:middle
interface declaration is also

00:09:06.936 --> 00:09:08.776 A:middle
automatically fully animatable.

00:09:09.876 --> 00:09:11.106 A:middle
Animations can be enabled for

00:09:11.106 --> 00:09:12.856 A:middle
the entire hierarchy with just

00:09:12.926 --> 00:09:13.786 A:middle
one line of code.

00:09:14.406 --> 00:09:15.906 A:middle
There's no bookkeeping, there's

00:09:15.906 --> 00:09:17.486 A:middle
no preparation and there's never

00:09:17.486 --> 00:09:18.006 A:middle
any cleanup.

00:09:18.636 --> 00:09:19.876 A:middle
If you've used Keynote Magic

00:09:19.876 --> 00:09:21.766 A:middle
Move animations before, SwiftUI

00:09:21.906 --> 00:09:24.126 A:middle
animations are that easy and

00:09:24.126 --> 00:09:25.036 A:middle
even more powerful.

00:09:26.556 --> 00:09:27.706 A:middle
And for views that are added and

00:09:27.706 --> 00:09:29.726 A:middle
removed, you can specify how

00:09:29.726 --> 00:09:31.166 A:middle
they transition in and out with

00:09:31.166 --> 00:09:34.086 A:middle
just one more line of code.

00:09:34.306 --> 00:09:35.086 A:middle
While animations are in

00:09:35.126 --> 00:09:36.866 A:middle
progress, your app remains fully

00:09:36.866 --> 00:09:38.386 A:middle
interactive and responsive and

00:09:38.386 --> 00:09:39.756 A:middle
ready to handle user input at

00:09:39.756 --> 00:09:40.366 A:middle
any time.

00:09:40.816 --> 00:09:41.996 A:middle
And if the user ever interrupts

00:09:41.996 --> 00:09:43.546 A:middle
one of those animations or if

00:09:43.546 --> 00:09:44.716 A:middle
you need to move to a new

00:09:44.716 --> 00:09:46.846 A:middle
location, SwiftUI handles all of

00:09:46.846 --> 00:09:47.986 A:middle
that automatically too.

00:09:49.506 --> 00:09:51.956 A:middle
Now our third principle is that

00:09:51.956 --> 00:09:53.906 A:middle
compositional APIs are easier to

00:09:53.906 --> 00:09:55.676 A:middle
learn and let you iterate a lot

00:09:55.786 --> 00:09:56.236 A:middle
faster.

00:09:57.276 --> 00:09:58.086 A:middle
We've looked at how we can

00:09:58.086 --> 00:09:59.526 A:middle
declare an individual view like

00:09:59.526 --> 00:10:00.246 A:middle
this text label.

00:09:59.526 --> 00:10:00.246 A:middle
this text label.

00:10:00.676 --> 00:10:02.146 A:middle
But declaring more complex views

00:10:02.146 --> 00:10:02.956 A:middle
is just as easy.

00:10:03.176 --> 00:10:04.336 A:middle
You just compose together

00:10:04.426 --> 00:10:05.466 A:middle
multiple smaller pieces.

00:10:06.386 --> 00:10:07.716 A:middle
Containers like horizontal and

00:10:07.716 --> 00:10:09.516 A:middle
vertical stacks let you easily

00:10:09.516 --> 00:10:11.006 A:middle
build powerful layouts by just

00:10:11.006 --> 00:10:12.476 A:middle
combining together multiple

00:10:12.546 --> 00:10:13.256 A:middle
simple pieces.

00:10:14.286 --> 00:10:16.196 A:middle
And SwiftUI applies composition

00:10:16.196 --> 00:10:17.596 A:middle
to view properties as well,

00:10:17.906 --> 00:10:19.026 A:middle
using a standard modifier

00:10:19.026 --> 00:10:19.596 A:middle
syntax.

00:10:20.186 --> 00:10:21.636 A:middle
A common set of modifiers can be

00:10:21.696 --> 00:10:23.886 A:middle
applied to any view, like color

00:10:23.886 --> 00:10:25.046 A:middle
applied here to make this text

00:10:25.106 --> 00:10:25.416 A:middle
gray.

00:10:26.446 --> 00:10:27.786 A:middle
This compositional approach lets

00:10:27.786 --> 00:10:29.696 A:middle
you learn a small set of views

00:10:29.696 --> 00:10:31.436 A:middle
and modifiers and then combine

00:10:31.436 --> 00:10:32.536 A:middle
them together to create

00:10:32.536 --> 00:10:33.956 A:middle
progressively more powerful

00:10:33.956 --> 00:10:34.486 A:middle
interfaces.

00:10:35.466 --> 00:10:37.456 A:middle
And our final principle is that

00:10:37.456 --> 00:10:39.306 A:middle
your interface should always be

00:10:39.306 --> 00:10:40.406 A:middle
in a consistent state.

00:10:41.266 --> 00:10:42.556 A:middle
Your UI is a reflection of your

00:10:42.866 --> 00:10:44.136 A:middle
app's data, so the two should

00:10:44.136 --> 00:10:45.856 A:middle
always be in synch at all times.

00:10:46.666 --> 00:10:48.276 A:middle
With traditional APIs, this can

00:10:48.276 --> 00:10:49.026 A:middle
be error-prone.

00:10:49.026 --> 00:10:51.216 A:middle
But with SwiftUI, your interface

00:10:51.216 --> 00:10:53.096 A:middle
updates automatically any time

00:10:53.096 --> 00:10:53.996 A:middle
the data changes.

00:10:55.196 --> 00:10:56.696 A:middle
Now there are two common places

00:10:56.696 --> 00:10:57.856 A:middle
that your data might likely come

00:10:57.856 --> 00:10:58.106 A:middle
from.

00:10:58.496 --> 00:10:59.876 A:middle
Now the first are your model

00:10:59.876 --> 00:11:00.246 A:middle
objects.

00:10:59.876 --> 00:11:00.246 A:middle
objects.

00:11:00.616 --> 00:11:01.856 A:middle
And you can use your existing

00:11:01.856 --> 00:11:03.706 A:middle
model objects directly by simply

00:11:03.706 --> 00:11:04.746 A:middle
conforming them to a new

00:11:04.746 --> 00:11:06.266 A:middle
bindable object protocol.

00:11:06.776 --> 00:11:08.206 A:middle
Its only requirement is that you

00:11:08.256 --> 00:11:09.496 A:middle
specify when the data in your

00:11:09.496 --> 00:11:10.116 A:middle
model changes.

00:11:10.116 --> 00:11:12.016 A:middle
Now the second place is

00:11:12.016 --> 00:11:13.786 A:middle
temporary UI state, like whether

00:11:13.786 --> 00:11:15.006 A:middle
the view is currently in editing

00:11:15.006 --> 00:11:15.256 A:middle
mode.

00:11:15.876 --> 00:11:16.816 A:middle
These are declared using a

00:11:16.916 --> 00:11:18.806 A:middle
simple state wrapper applied to

00:11:18.806 --> 00:11:19.956 A:middle
any property on your view.

00:11:20.816 --> 00:11:22.406 A:middle
We're all used to every property

00:11:22.406 --> 00:11:24.586 A:middle
on every view being mutable, but

00:11:25.096 --> 00:11:26.156 A:middle
once you start using SwiftUI,

00:11:26.156 --> 00:11:27.886 A:middle
you're going to be shocked to

00:11:27.886 --> 00:11:29.616 A:middle
realize how little mutable state

00:11:29.616 --> 00:11:31.596 A:middle
your app actually needs.

00:11:32.356 --> 00:11:34.586 A:middle
Now whenever your model or state

00:11:34.586 --> 00:11:36.616 A:middle
changes, that UI is going to

00:11:36.616 --> 00:11:37.696 A:middle
update automatically.

00:11:38.226 --> 00:11:39.456 A:middle
And because it's all Swift code,

00:11:39.696 --> 00:11:40.696 A:middle
you get this behavior while

00:11:40.766 --> 00:11:41.856 A:middle
still being able to use your

00:11:41.856 --> 00:11:43.746 A:middle
model objects directly within

00:11:43.746 --> 00:11:44.866 A:middle
that interface declaration.

00:11:45.776 --> 00:11:46.886 A:middle
You can even transform and

00:11:46.946 --> 00:11:48.936 A:middle
format values in line with no

00:11:48.936 --> 00:11:50.136 A:middle
additional indirection needed.

00:11:51.026 --> 00:11:51.976 A:middle
For example, this string

00:11:51.976 --> 00:11:53.016 A:middle
interpolation can be used to

00:11:53.016 --> 00:11:54.546 A:middle
format a date, resulting in

00:11:54.706 --> 00:11:58.256 A:middle
fully localized formatted text.

00:11:58.416 --> 00:11:59.466 A:middle
All of this means that with

00:11:59.536 --> 00:12:01.116 A:middle
Swift UI, you're going to write

00:11:59.536 --> 00:12:01.116 A:middle
Swift UI, you're going to write

00:12:01.116 --> 00:12:02.566 A:middle
less code and get a more

00:12:02.566 --> 00:12:03.216 A:middle
consistent UI.

00:12:04.616 --> 00:12:05.666 A:middle
Those are the four core

00:12:05.666 --> 00:12:06.666 A:middle
principles of SwiftUI.

00:12:07.296 --> 00:12:08.946 A:middle
A powerful declarative syntax

00:12:09.306 --> 00:12:10.506 A:middle
enabling a huge amount of

00:12:10.506 --> 00:12:12.336 A:middle
automatic functionality with a

00:12:12.336 --> 00:12:14.086 A:middle
compositional API that ensures

00:12:14.086 --> 00:12:15.636 A:middle
your interface is always in a

00:12:15.636 --> 00:12:16.536 A:middle
consistent state.

00:12:17.806 --> 00:12:19.006 A:middle
And a great new framework

00:12:19.086 --> 00:12:20.906 A:middle
deserves incredible tools.

00:12:21.196 --> 00:12:22.306 A:middle
And we've created a whole

00:12:22.306 --> 00:12:23.726 A:middle
brand-new workflow within Xcode

00:12:23.726 --> 00:12:25.476 A:middle
designed from the ground up for

00:12:25.476 --> 00:12:25.956 A:middle
SwiftUI.

00:12:26.946 --> 00:12:27.966 A:middle
You get the power and

00:12:28.006 --> 00:12:29.946 A:middle
flexibility of code combined

00:12:30.036 --> 00:12:31.676 A:middle
with the ease of use and rapid

00:12:31.676 --> 00:12:33.346 A:middle
iteration of a UI tool.

00:12:34.266 --> 00:12:35.346 A:middle
You always have access to both

00:12:35.346 --> 00:12:36.796 A:middle
at all times, so you'll never

00:12:36.796 --> 00:12:37.876 A:middle
have to choose between them

00:12:37.876 --> 00:12:38.086 A:middle
again.

00:12:39.026 --> 00:12:40.346 A:middle
And because the tools work on

00:12:40.346 --> 00:12:41.676 A:middle
your actual existing source

00:12:41.676 --> 00:12:43.816 A:middle
code, you have a truly live

00:12:43.876 --> 00:12:44.936 A:middle
development experience.

00:12:45.796 --> 00:12:47.196 A:middle
Now to really understand how

00:12:47.196 --> 00:12:48.456 A:middle
amazing this workflow is, you

00:12:48.456 --> 00:12:49.826 A:middle
just need to see it again live.

00:12:49.826 --> 00:12:51.516 A:middle
And to show it to you now, I'll

00:12:51.516 --> 00:12:52.516 A:middle
invite Kevin up to give you a

00:12:52.516 --> 00:12:52.796 A:middle
demo.

00:12:53.516 --> 00:12:58.696 A:middle
[ Applause ]

00:12:59.196 --> 00:12:59.816 A:middle
&gt;&gt; Thanks, Josh.

00:13:00.666 --> 00:13:02.156 A:middle
You guys ready to have some fun?

00:13:02.376 --> 00:13:03.446 A:middle
All right, so I'm building a

00:13:03.446 --> 00:13:04.736 A:middle
hiking app and I want to add a

00:13:04.856 --> 00:13:06.586 A:middle
view to my table view cell that

00:13:06.586 --> 00:13:08.376 A:middle
tells me how difficult a trail

00:13:08.376 --> 00:13:08.566 A:middle
is.

00:13:08.626 --> 00:13:10.616 A:middle
So we're going to start in the

00:13:10.616 --> 00:13:11.206 A:middle
library.

00:13:11.206 --> 00:13:12.196 A:middle
We're going to have some text.

00:13:12.196 --> 00:13:14.206 A:middle
And as I'm dragging, Xcode is

00:13:14.206 --> 00:13:15.986 A:middle
suggesting layouts for me.

00:13:16.336 --> 00:13:17.446 A:middle
Now I just tell Xcode where I

00:13:17.446 --> 00:13:19.056 A:middle
want it and Xcode figures out

00:13:19.116 --> 00:13:20.476 A:middle
the layout for me.

00:13:21.336 --> 00:13:22.226 A:middle
And now we can edit the

00:13:22.226 --> 00:13:23.226 A:middle
properties of this view.

00:13:23.226 --> 00:13:24.556 A:middle
So I'm just going to command

00:13:24.556 --> 00:13:26.156 A:middle
click in the canvas here and get

00:13:26.226 --> 00:13:28.116 A:middle
custom-tailored inspectors right

00:13:28.176 --> 00:13:28.456 A:middle
here.

00:13:28.926 --> 00:13:30.056 A:middle
Let's make this text a little

00:13:30.056 --> 00:13:30.616 A:middle
bit smaller.

00:13:30.616 --> 00:13:32.256 A:middle
Now watch -- watch the code

00:13:32.256 --> 00:13:33.296 A:middle
while I do this.

00:13:33.476 --> 00:13:35.006 A:middle
You'll see it writes the code

00:13:35.006 --> 00:13:35.556 A:middle
for me.

00:13:37.136 --> 00:13:39.086 A:middle
Now, we can do the same thing

00:13:39.086 --> 00:13:40.706 A:middle
over here in the source editor

00:13:40.706 --> 00:13:42.656 A:middle
by just editing the code.

00:13:42.656 --> 00:13:44.406 A:middle
And you can see Xcode builds and

00:13:44.406 --> 00:13:45.906 A:middle
runs my code and updates the

00:13:45.906 --> 00:13:47.236 A:middle
canvas on the right.

00:13:48.726 --> 00:13:50.046 A:middle
Now no matter where I'm working,

00:13:50.326 --> 00:13:52.396 A:middle
I get access to all of my design

00:13:52.396 --> 00:13:52.616 A:middle
tools.

00:13:53.116 --> 00:13:54.046 A:middle
So I'm just going to command

00:13:54.046 --> 00:13:55.596 A:middle
click on this V stack, going to

00:13:55.596 --> 00:13:56.586 A:middle
open up the inspectors.

00:13:56.826 --> 00:13:58.326 A:middle
And again I can just modify the

00:13:58.326 --> 00:13:59.576 A:middle
properties that I want.

00:13:59.826 --> 00:14:02.046 A:middle
It's just so fast to iterate.

00:13:59.826 --> 00:14:02.046 A:middle
It's just so fast to iterate.

00:14:02.726 --> 00:14:05.116 A:middle
Now, you might notice that this

00:14:05.116 --> 00:14:06.656 A:middle
view has a couple inputs like

00:14:06.706 --> 00:14:08.756 A:middle
this title and this difficulty.

00:14:08.996 --> 00:14:11.396 A:middle
So how does Xcode know what data

00:14:11.716 --> 00:14:13.066 A:middle
to show in the preview?

00:14:13.066 --> 00:14:13.916 A:middle
This has always been one of the

00:14:13.916 --> 00:14:15.286 A:middle
challenges with UI development:

00:14:15.366 --> 00:14:17.156 A:middle
what data do we show during

00:14:17.156 --> 00:14:17.826 A:middle
design time?

00:14:18.166 --> 00:14:19.906 A:middle
And this is why we invented

00:14:20.046 --> 00:14:21.296 A:middle
Xcode previews.

00:14:21.296 --> 00:14:22.346 A:middle
What is a preview?

00:14:22.346 --> 00:14:23.106 A:middle
I'll show you.

00:14:23.526 --> 00:14:24.676 A:middle
So let me scroll down here.

00:14:25.866 --> 00:14:27.256 A:middle
This snippet of code here -- a

00:14:27.336 --> 00:14:28.846 A:middle
preview is just a snippet of

00:14:28.846 --> 00:14:30.506 A:middle
code in my application that

00:14:30.506 --> 00:14:32.306 A:middle
configures it for design time.

00:14:32.846 --> 00:14:34.216 A:middle
Because it's in my application,

00:14:34.216 --> 00:14:36.236 A:middle
I get access to all the code in

00:14:36.236 --> 00:14:36.926 A:middle
my project.

00:14:37.056 --> 00:14:38.296 A:middle
And because it's in my project,

00:14:38.296 --> 00:14:40.266 A:middle
I can check it in and share it

00:14:40.266 --> 00:14:41.146 A:middle
with my team members.

00:14:41.646 --> 00:14:42.696 A:middle
And it's so easy to try

00:14:42.696 --> 00:14:43.526 A:middle
different data.

00:14:43.526 --> 00:14:44.926 A:middle
Now actually here Half Dome is

00:14:44.976 --> 00:14:45.546 A:middle
pretty hard.

00:14:45.546 --> 00:14:46.986 A:middle
So let's see what it looks like

00:14:46.986 --> 00:14:47.456 A:middle
at hard.

00:14:47.456 --> 00:14:49.156 A:middle
And that's because it's 16

00:14:49.156 --> 00:14:50.466 A:middle
miles, not 6.

00:14:50.566 --> 00:14:51.806 A:middle
And that's really compiling

00:14:51.896 --> 00:14:52.516 A:middle
code.

00:14:53.806 --> 00:14:54.956 A:middle
Now because this is SwiftUI

00:14:54.956 --> 00:14:57.276 A:middle
code, I get access to all the

00:14:57.276 --> 00:14:58.736 A:middle
modifiers that I would use for

00:14:58.736 --> 00:15:00.436 A:middle
the rest of my UI development.

00:14:58.736 --> 00:15:00.436 A:middle
the rest of my UI development.

00:15:01.056 --> 00:15:02.276 A:middle
So we can see what it looks like

00:15:02.426 --> 00:15:03.436 A:middle
in Dark Mode.

00:15:04.406 --> 00:15:05.886 A:middle
And I also have preview-specific

00:15:05.886 --> 00:15:06.796 A:middle
modifiers as well.

00:15:06.796 --> 00:15:08.636 A:middle
So by default previews are the

00:15:08.726 --> 00:15:10.596 A:middle
size of a device, but since

00:15:10.596 --> 00:15:11.546 A:middle
we're working on a table view

00:15:11.546 --> 00:15:13.346 A:middle
cell, let's just focus in on

00:15:13.466 --> 00:15:13.846 A:middle
that content.

00:15:13.846 --> 00:15:15.746 A:middle
So I'll just make that the size

00:15:15.986 --> 00:15:16.516 A:middle
that fits.

00:15:17.326 --> 00:15:18.546 A:middle
Okay, now here is the really

00:15:18.546 --> 00:15:19.496 A:middle
cool thing about previews.

00:15:19.846 --> 00:15:21.506 A:middle
You can have as many as you

00:15:21.506 --> 00:15:21.846 A:middle
want.

00:15:22.546 --> 00:15:24.156 A:middle
So let's add a second preview

00:15:24.696 --> 00:15:26.216 A:middle
with completely different data.

00:15:26.216 --> 00:15:28.346 A:middle
But let's not stop there.

00:15:28.936 --> 00:15:31.146 A:middle
Let's command click, repeat it a

00:15:31.146 --> 00:15:31.886 A:middle
couple of times.

00:15:32.526 --> 00:15:34.786 A:middle
Let's enumerate over some common

00:15:34.836 --> 00:15:36.756 A:middle
dynamic type sizes and then

00:15:36.756 --> 00:15:38.606 A:middle
let's configure our cell to use

00:15:38.606 --> 00:15:39.536 A:middle
that dynamic type size.

00:15:39.536 --> 00:15:41.106 A:middle
And there at a glance I can see

00:15:41.106 --> 00:15:42.726 A:middle
my cell with light mode, Dark

00:15:42.726 --> 00:15:44.186 A:middle
Mode, multiple different dynamic

00:15:44.186 --> 00:15:44.956 A:middle
type sizes all at the same time.

00:15:45.516 --> 00:15:55.566 A:middle
[ Applause ]

00:15:56.066 --> 00:15:57.256 A:middle
Now when I tap on this cell, I

00:15:57.256 --> 00:15:58.666 A:middle
want to go to a detailed view.

00:15:59.186 --> 00:16:00.106 A:middle
So let's switch over to that

00:15:59.186 --> 00:16:00.106 A:middle
So let's switch over to that

00:16:00.106 --> 00:16:02.146 A:middle
file now and take a look.

00:16:02.796 --> 00:16:04.796 A:middle
Now I've learned through the

00:16:04.796 --> 00:16:05.966 A:middle
years of hiking that you should

00:16:05.966 --> 00:16:08.896 A:middle
never judge a trail by its name.

00:16:08.896 --> 00:16:10.276 A:middle
So it's really important to me

00:16:10.276 --> 00:16:12.726 A:middle
that we can configure our detail

00:16:12.726 --> 00:16:14.586 A:middle
view to make that image really

00:16:14.586 --> 00:16:15.036 A:middle
large.

00:16:15.036 --> 00:16:16.356 A:middle
And I've already done that with

00:16:16.356 --> 00:16:18.056 A:middle
some SwiftUI state here.

00:16:18.056 --> 00:16:19.566 A:middle
So when we tap the banner, we

00:16:19.856 --> 00:16:21.626 A:middle
want to toggle that expansion

00:16:21.626 --> 00:16:21.986 A:middle
state.

00:16:22.546 --> 00:16:24.206 A:middle
Now I can test that right here

00:16:24.206 --> 00:16:26.106 A:middle
in the UI just by clicking this

00:16:26.196 --> 00:16:26.676 A:middle
play button.

00:16:27.446 --> 00:16:28.666 A:middle
This takes any preview that I

00:16:28.746 --> 00:16:30.326 A:middle
have and makes it fully

00:16:30.326 --> 00:16:30.946 A:middle
interactive.

00:16:31.856 --> 00:16:33.406 A:middle
So I can just click and test out

00:16:33.986 --> 00:16:35.106 A:middle
those different expansion

00:16:35.106 --> 00:16:35.436 A:middle
states.

00:16:36.056 --> 00:16:38.176 A:middle
Now we can really polish this up

00:16:38.176 --> 00:16:38.956 A:middle
with an animation.

00:16:38.956 --> 00:16:39.866 A:middle
It's so easy.

00:16:40.416 --> 00:16:41.726 A:middle
So I can just wrap my state

00:16:41.726 --> 00:16:43.706 A:middle
change in a whip animation

00:16:43.706 --> 00:16:46.896 A:middle
block, and now I get a beautiful

00:16:46.896 --> 00:16:47.936 A:middle
default animation.

00:16:50.516 --> 00:16:56.546 A:middle
[ Applause ]

00:16:57.046 --> 00:16:58.346 A:middle
And it's just as easy to

00:16:58.346 --> 00:16:59.346 A:middle
customize that.

00:16:59.566 --> 00:17:01.126 A:middle
So let's slow it down for some

00:16:59.566 --> 00:17:01.126 A:middle
So let's slow it down for some

00:17:01.126 --> 00:17:03.806 A:middle
dramatic effect, and now I get a

00:17:03.806 --> 00:17:05.136 A:middle
beautiful animation opening it

00:17:05.136 --> 00:17:05.306 A:middle
up.

00:17:05.955 --> 00:17:07.296 A:middle
Now what's so cool about SwiftUI

00:17:07.406 --> 00:17:09.036 A:middle
is that every animation is

00:17:09.066 --> 00:17:10.546 A:middle
cancellable and reversible,

00:17:10.675 --> 00:17:11.715 A:middle
leaving my application

00:17:11.715 --> 00:17:13.356 A:middle
responsive the whole time.

00:17:14.766 --> 00:17:16.205 A:middle
Okay, so we have a table view

00:17:16.236 --> 00:17:17.996 A:middle
cell and we have a detail view.

00:17:18.175 --> 00:17:19.816 A:middle
So let's put it all together.

00:17:19.816 --> 00:17:21.656 A:middle
So I'm going to switch over to

00:17:21.656 --> 00:17:23.876 A:middle
my last value here, which has a

00:17:23.876 --> 00:17:25.486 A:middle
bunch of different trails and a

00:17:25.486 --> 00:17:25.746 A:middle
list.

00:17:26.736 --> 00:17:27.996 A:middle
So what I want to do is I

00:17:27.996 --> 00:17:29.066 A:middle
actually want to see what this

00:17:29.126 --> 00:17:30.476 A:middle
looks like on a real device.

00:17:31.166 --> 00:17:32.346 A:middle
So with the click of a button --

00:17:32.346 --> 00:17:33.466 A:middle
let's click this -- Xcode is

00:17:33.466 --> 00:17:34.866 A:middle
going to build my project for

00:17:34.866 --> 00:17:35.246 A:middle
the device.

00:17:35.246 --> 00:17:36.476 A:middle
It's going to install it and

00:17:36.476 --> 00:17:38.066 A:middle
it's going to launch my preview

00:17:38.066 --> 00:17:38.906 A:middle
right here on the device.

00:17:38.906 --> 00:17:39.996 A:middle
And you can see it's fully

00:17:39.996 --> 00:17:41.316 A:middle
interactive right here.

00:17:41.796 --> 00:17:43.776 A:middle
So first let's use that cell

00:17:43.776 --> 00:17:44.296 A:middle
that we built.

00:17:44.876 --> 00:17:46.376 A:middle
So I'll just change this text to

00:17:46.376 --> 00:17:48.596 A:middle
be a trail cell.

00:17:49.366 --> 00:17:50.446 A:middle
Now you can see we're seeing our

00:17:50.446 --> 00:17:51.596 A:middle
trails show up there.

00:17:51.596 --> 00:17:53.496 A:middle
And now when I tap on this, I

00:17:53.496 --> 00:17:54.646 A:middle
want it to go to our detail view

00:17:54.646 --> 00:17:55.096 A:middle
that we built.

00:17:55.396 --> 00:17:56.796 A:middle
This is so easy with SwiftUI.

00:17:56.796 --> 00:17:58.836 A:middle
It's just going to wrap this in

00:17:58.836 --> 00:18:00.816 A:middle
a navigation button, and that

00:17:58.836 --> 00:18:00.816 A:middle
a navigation button, and that

00:18:00.816 --> 00:18:02.106 A:middle
tells us to go to our detailed

00:18:02.106 --> 00:18:02.396 A:middle
view.

00:18:02.396 --> 00:18:03.786 A:middle
And now you can see the chevron

00:18:03.836 --> 00:18:04.186 A:middle
shows up.

00:18:04.186 --> 00:18:05.486 A:middle
So let's check out Snow Creek

00:18:05.486 --> 00:18:07.026 A:middle
and let's move in on that

00:18:07.026 --> 00:18:07.766 A:middle
picture.

00:18:07.766 --> 00:18:10.346 A:middle
And okay, snowy and difficult.

00:18:10.346 --> 00:18:11.536 A:middle
That does not sound like a fun

00:18:11.536 --> 00:18:11.896 A:middle
trail.

00:18:12.476 --> 00:18:13.546 A:middle
So what I'm going to do with

00:18:13.546 --> 00:18:15.516 A:middle
just one line of SwiftUI code is

00:18:15.516 --> 00:18:16.816 A:middle
add swipe to delete.

00:18:16.816 --> 00:18:19.266 A:middle
And now we can say, "We don't

00:18:19.266 --> 00:18:20.636 A:middle
want to do that trail."

00:18:20.636 --> 00:18:23.476 A:middle
And now lastly, let's see what

00:18:23.476 --> 00:18:24.756 A:middle
it looks like in Dark Mode.

00:18:24.946 --> 00:18:27.026 A:middle
Without any work, it's going to

00:18:27.026 --> 00:18:28.406 A:middle
put my preview in Dark Mode and

00:18:28.406 --> 00:18:29.916 A:middle
you can see it looks beautiful.

00:18:30.516 --> 00:18:38.696 A:middle
[ Applause ]

00:18:39.196 --> 00:18:41.226 A:middle
We can tap on our valley floor,

00:18:41.226 --> 00:18:41.916 A:middle
zoom in.

00:18:42.036 --> 00:18:44.056 A:middle
And that looks like a great way

00:18:44.106 --> 00:18:44.876 A:middle
to end the week.

00:18:45.036 --> 00:18:46.176 A:middle
So we just built an app with

00:18:46.176 --> 00:18:47.836 A:middle
navigation, dynamic type size,

00:18:47.916 --> 00:18:49.386 A:middle
light mode, Dark Mode, multiple

00:18:49.386 --> 00:18:51.126 A:middle
different data and saw on the

00:18:51.206 --> 00:18:53.246 A:middle
real device all without ever

00:18:53.246 --> 00:18:54.006 A:middle
building and running.

00:18:54.346 --> 00:18:55.156 A:middle
Now that's fun.

00:18:55.156 --> 00:18:56.746 A:middle
All right, Josh, back to you.

00:18:57.516 --> 00:19:04.706 A:middle
[ Applause ]

00:18:57.516 --> 00:19:04.706 A:middle
[ Applause ]

00:19:05.206 --> 00:19:05.576 A:middle
&gt;&gt; Thanks, Kevin.

00:19:06.206 --> 00:19:07.266 A:middle
All right, this is really an

00:19:07.266 --> 00:19:08.626 A:middle
incredible new workflow for

00:19:08.706 --> 00:19:09.476 A:middle
fully native code.

00:19:10.016 --> 00:19:10.776 A:middle
What you do in the tool is

00:19:10.776 --> 00:19:12.596 A:middle
always debuggable, diffable,

00:19:12.796 --> 00:19:14.556 A:middle
searchable, and understandable.

00:19:15.036 --> 00:19:16.296 A:middle
And because you can always edit

00:19:16.296 --> 00:19:17.726 A:middle
the code directly, you get

00:19:17.726 --> 00:19:19.226 A:middle
incredible flexibility in your

00:19:19.226 --> 00:19:19.776 A:middle
workflow.

00:19:20.116 --> 00:19:21.786 A:middle
And SwiftUI is deeply integrated

00:19:21.786 --> 00:19:23.076 A:middle
in all of our operating systems,

00:19:23.136 --> 00:19:25.046 A:middle
so using it results in a fully

00:19:25.046 --> 00:19:26.356 A:middle
native app for whichever

00:19:26.416 --> 00:19:27.226 A:middle
platforms you target.

00:19:27.756 --> 00:19:28.756 A:middle
You get the same performance,

00:19:28.996 --> 00:19:30.596 A:middle
the same behavior and the same

00:19:30.596 --> 00:19:32.086 A:middle
controls as any other native

00:19:32.086 --> 00:19:32.596 A:middle
app.

00:19:33.056 --> 00:19:34.406 A:middle
And you can adopt SwiftUI at

00:19:34.596 --> 00:19:35.296 A:middle
your own pace.

00:19:35.846 --> 00:19:36.776 A:middle
You can use it for anything,

00:19:36.776 --> 00:19:38.576 A:middle
from just one view in your app

00:19:38.576 --> 00:19:39.866 A:middle
all the way up to the entire

00:19:39.866 --> 00:19:40.546 A:middle
application.

00:19:41.066 --> 00:19:42.416 A:middle
It works seamlessly with all of

00:19:42.416 --> 00:19:44.146 A:middle
your existing UIKit, AppKit and

00:19:44.146 --> 00:19:45.906 A:middle
WatchKit code so you don't need

00:19:45.906 --> 00:19:47.116 A:middle
to rewrite anything.

00:19:47.116 --> 00:19:48.856 A:middle
And to get you up to speed

00:19:48.856 --> 00:19:50.346 A:middle
quickly, our documentation team

00:19:50.346 --> 00:19:51.926 A:middle
has developed a brand-new style

00:19:51.926 --> 00:19:53.296 A:middle
of interactive documentation.

00:19:53.816 --> 00:19:54.616 A:middle
It quickly takes you

00:19:54.686 --> 00:19:56.596 A:middle
step-by-step from creating a new

00:19:56.596 --> 00:19:57.846 A:middle
project all the way up to

00:19:57.846 --> 00:19:59.086 A:middle
building a fully interactive

00:19:59.086 --> 00:19:59.516 A:middle
interface.

00:20:00.036 --> 00:20:00.876 A:middle
So you'll be up to speed in no

00:20:00.876 --> 00:20:00.976 A:middle
time.

00:20:01.516 --> 00:20:07.946 A:middle
[ Applause ]

00:20:08.446 --> 00:20:09.856 A:middle
So that's SwiftUI and some of

00:20:09.856 --> 00:20:11.086 A:middle
the new tools in Xcode.

00:20:11.526 --> 00:20:13.166 A:middle
Of course, this is a huge year

00:20:13.166 --> 00:20:15.116 A:middle
for Swift and Xcode, so there's

00:20:15.116 --> 00:20:16.166 A:middle
even more to this story.

00:20:16.436 --> 00:20:17.416 A:middle
And to tell you more about it,

00:20:17.416 --> 00:20:18.576 A:middle
I'll hand things off to Matthew.

00:20:19.066 --> 00:20:19.296 A:middle
Thanks.

00:20:20.516 --> 00:20:24.866 A:middle
[ Applause ]

00:20:25.366 --> 00:20:26.016 A:middle
&gt;&gt; Thank you, Josh.

00:20:26.806 --> 00:20:28.106 A:middle
Our tools released this year

00:20:28.106 --> 00:20:29.526 A:middle
bring together innovations in

00:20:29.636 --> 00:20:32.236 A:middle
Swift and Xcode to deliver some

00:20:32.236 --> 00:20:32.966 A:middle
awesome results.

00:20:33.876 --> 00:20:34.796 A:middle
So let's start with Swift.

00:20:36.106 --> 00:20:38.016 A:middle
Now in our fifth year, Swift has

00:20:38.016 --> 00:20:39.686 A:middle
matured and is continuing to

00:20:39.686 --> 00:20:40.326 A:middle
leap forward.

00:20:40.696 --> 00:20:42.096 A:middle
Where our newest and flagship

00:20:42.176 --> 00:20:43.636 A:middle
technologies, from machine

00:20:43.636 --> 00:20:45.116 A:middle
learning to augmented reality

00:20:45.496 --> 00:20:46.906 A:middle
are possible only because of

00:20:46.906 --> 00:20:48.896 A:middle
Swift and it now being part of

00:20:48.896 --> 00:20:49.126 A:middle
our OS.

00:20:50.446 --> 00:20:51.576 A:middle
To achieve this, earlier this

00:20:51.576 --> 00:20:53.226 A:middle
spring we introduced ABI

00:20:53.536 --> 00:20:55.356 A:middle
stability which reduces the size

00:20:55.356 --> 00:20:56.956 A:middle
of your apps by using a single

00:20:57.106 --> 00:20:57.946 A:middle
shared Swift runtime.

00:20:58.516 --> 00:21:04.546 A:middle
[ Applause ]

00:20:58.516 --> 00:21:04.546 A:middle
[ Applause ]

00:21:05.046 --> 00:21:05.836 A:middle
And we are following that up

00:21:05.836 --> 00:21:07.936 A:middle
today with module stability

00:21:08.006 --> 00:21:09.146 A:middle
which ensures compatibility --

00:21:09.196 --> 00:21:09.316 A:middle
yes.

00:21:10.516 --> 00:21:14.046 A:middle
[ Applause ]

00:21:14.546 --> 00:21:15.626 A:middle
This completes the picture by

00:21:15.626 --> 00:21:17.266 A:middle
ensuring compatibility for your

00:21:17.266 --> 00:21:18.846 A:middle
binaries with the current and

00:21:18.846 --> 00:21:20.176 A:middle
future versions of the Swift

00:21:20.176 --> 00:21:20.626 A:middle
compiler.

00:21:21.656 --> 00:21:22.726 A:middle
And these come alongside a

00:21:22.726 --> 00:21:24.066 A:middle
number of other language

00:21:24.066 --> 00:21:26.116 A:middle
features, tools editions and

00:21:26.116 --> 00:21:27.706 A:middle
performance and code size

00:21:27.776 --> 00:21:29.236 A:middle
improvements, all which further

00:21:29.236 --> 00:21:30.566 A:middle
extend the potential Swift

00:21:30.566 --> 00:21:31.936 A:middle
brings to your projects.

00:21:33.436 --> 00:21:35.276 A:middle
So Swift is already the language

00:21:35.276 --> 00:21:37.106 A:middle
for your apps and now more than

00:21:37.106 --> 00:21:38.836 A:middle
ever for common code to share

00:21:38.836 --> 00:21:40.416 A:middle
across all Apple platforms.

00:21:41.616 --> 00:21:42.906 A:middle
In fact, sharing is the reason

00:21:42.906 --> 00:21:45.016 A:middle
we created Swift Packages which

00:21:45.016 --> 00:21:46.426 A:middle
are the best way to develop and

00:21:46.426 --> 00:21:48.346 A:middle
share your own code and reuse

00:21:48.346 --> 00:21:49.096 A:middle
code from others.

00:21:49.776 --> 00:21:51.436 A:middle
And today we have two big

00:21:51.436 --> 00:21:51.776 A:middle
announcements.

00:21:53.636 --> 00:21:54.896 A:middle
GitHub will be adding support

00:21:54.896 --> 00:21:56.556 A:middle
for Swift packages to the GitHub

00:21:56.556 --> 00:21:57.876 A:middle
Package Registry.

00:21:58.516 --> 00:22:05.546 A:middle
[ Applause ]

00:21:58.516 --> 00:22:05.546 A:middle
[ Applause ]

00:22:06.046 --> 00:22:07.396 A:middle
Which is perfect because Xcode

00:22:07.396 --> 00:22:08.946 A:middle
now seamlessly supports Swift

00:22:09.066 --> 00:22:10.216 A:middle
packages for apps on iOS, iPadOS

00:22:10.216 --> 00:22:11.876 A:middle
and all of our platforms.

00:22:12.516 --> 00:22:19.736 A:middle
[ Applause ]

00:22:20.236 --> 00:22:21.446 A:middle
Swift packages are top-level

00:22:21.446 --> 00:22:23.346 A:middle
items in your workspaces, always

00:22:23.346 --> 00:22:25.576 A:middle
visible, always accessible, and

00:22:25.576 --> 00:22:26.556 A:middle
deeply integrated.

00:22:27.386 --> 00:22:28.796 A:middle
Packages from the community and

00:22:28.796 --> 00:22:30.376 A:middle
those packages you create get

00:22:30.376 --> 00:22:32.176 A:middle
instant access to all of Xcode's

00:22:32.176 --> 00:22:33.716 A:middle
work flows for source control,

00:22:33.766 --> 00:22:35.836 A:middle
debugging, testing, the works.

00:22:36.806 --> 00:22:38.176 A:middle
So Swift packages built into

00:22:38.176 --> 00:22:40.716 A:middle
Xcode, it's sharing code the way

00:22:40.716 --> 00:22:41.436 A:middle
you've always wanted.

00:22:43.076 --> 00:22:44.386 A:middle
Now that's just the start of our

00:22:44.486 --> 00:22:45.846 A:middle
Xcode release this year, which

00:22:45.846 --> 00:22:47.726 A:middle
is focused on maximizing your

00:22:47.726 --> 00:22:48.326 A:middle
productivity.

00:22:48.956 --> 00:22:49.726 A:middle
And we have a number of

00:22:49.726 --> 00:22:50.796 A:middle
improvements today to share with

00:22:50.826 --> 00:22:53.396 A:middle
you as we take Xcode up to 11.

00:22:54.506 --> 00:22:56.896 A:middle
So let's get started with one of

00:22:56.896 --> 00:22:58.556 A:middle
our biggest changes which is the

00:22:58.556 --> 00:22:59.356 A:middle
Xcode Workspace.

00:23:00.086 --> 00:23:02.006 A:middle
We are giving you full editorial

00:23:02.006 --> 00:23:02.526 A:middle
control.

00:23:02.826 --> 00:23:04.106 A:middle
You can now create and manage

00:23:04.106 --> 00:23:05.996 A:middle
editors however you like.

00:23:06.896 --> 00:23:08.296 A:middle
Whatever your preferred style

00:23:08.296 --> 00:23:09.716 A:middle
and layout is, you can simply

00:23:09.716 --> 00:23:11.676 A:middle
add and remove editors whenever

00:23:11.816 --> 00:23:13.476 A:middle
and wherever you see fit.

00:23:14.516 --> 00:23:19.826 A:middle
[ Applause ]

00:23:20.326 --> 00:23:22.886 A:middle
And even better, your workspaces

00:23:22.886 --> 00:23:24.246 A:middle
can now focus too.

00:23:24.246 --> 00:23:28.116 A:middle
So you can take any editor and

00:23:28.166 --> 00:23:32.246 A:middle
maximize it, and then when

00:23:32.246 --> 00:23:33.136 A:middle
you're done, just put it back

00:23:33.136 --> 00:23:34.176 A:middle
and it will go right back to

00:23:34.176 --> 00:23:34.936 A:middle
where you started.

00:23:35.516 --> 00:23:40.606 A:middle
[ Applause ]

00:23:41.106 --> 00:23:41.916 A:middle
So whether you're working on the

00:23:41.976 --> 00:23:43.766 A:middle
smallest of laptops or with the

00:23:43.766 --> 00:23:45.436 A:middle
largest of displays, your

00:23:45.436 --> 00:23:47.176 A:middle
workspace now works for you.

00:23:49.396 --> 00:23:50.886 A:middle
Now the related content in our

00:23:50.886 --> 00:23:53.146 A:middle
editors, the smart selections

00:23:53.146 --> 00:23:54.676 A:middle
like counterparts, are also

00:23:54.676 --> 00:23:55.866 A:middle
getting a huge boost.

00:23:57.246 --> 00:23:58.536 A:middle
There are new options like

00:23:58.646 --> 00:24:01.236 A:middle
previews, canvas, live views and

00:23:58.646 --> 00:24:01.236 A:middle
previews, canvas, live views and

00:24:01.236 --> 00:24:01.476 A:middle
more.

00:24:02.356 --> 00:24:03.736 A:middle
You can use the related content

00:24:03.736 --> 00:24:05.586 A:middle
in any editor in your workspace.

00:24:06.546 --> 00:24:07.626 A:middle
And you'll like this one best of

00:24:07.626 --> 00:24:07.996 A:middle
all.

00:24:08.126 --> 00:24:09.596 A:middle
When there is no content, they

00:24:09.596 --> 00:24:11.466 A:middle
automatically disappear so you

00:24:11.466 --> 00:24:12.706 A:middle
no longer need to manager their

00:24:12.706 --> 00:24:13.276 A:middle
visibility.

00:24:14.516 --> 00:24:18.686 A:middle
[ Applause ]

00:24:19.186 --> 00:24:20.446 A:middle
Now once you get your workspace

00:24:20.506 --> 00:24:22.146 A:middle
set up, it's all about the

00:24:22.146 --> 00:24:23.306 A:middle
editing, and I'd like to show

00:24:23.306 --> 00:24:24.596 A:middle
you a quick demonstration of

00:24:24.596 --> 00:24:25.626 A:middle
some of the new source editing

00:24:25.626 --> 00:24:26.706 A:middle
features we have for you this

00:24:26.706 --> 00:24:26.846 A:middle
year.

00:24:39.046 --> 00:24:39.956 A:middle
To help you configure each

00:24:39.956 --> 00:24:41.596 A:middle
editor the way you like, there's

00:24:41.596 --> 00:24:43.106 A:middle
a new Options menu in the upper

00:24:43.106 --> 00:24:43.276 A:middle
right.

00:24:44.186 --> 00:24:45.426 A:middle
You can see here I can enable

00:24:45.426 --> 00:24:46.456 A:middle
the assistants or any of the

00:24:46.456 --> 00:24:47.226 A:middle
related content.

00:24:47.856 --> 00:24:49.076 A:middle
I could turn on code coverage or

00:24:49.126 --> 00:24:50.106 A:middle
source control authors.

00:24:50.106 --> 00:24:51.616 A:middle
I'm going to turn on our newest

00:24:51.616 --> 00:24:52.806 A:middle
feature, Mini map.

00:24:54.676 --> 00:24:55.646 A:middle
So the mini map gives you a

00:24:55.646 --> 00:24:57.776 A:middle
structural overview of your file

00:24:57.926 --> 00:24:58.726 A:middle
to help you navigate.

00:24:59.326 --> 00:25:00.586 A:middle
You can see documentations,

00:24:59.326 --> 00:25:00.586 A:middle
You can see documentations,

00:25:00.586 --> 00:25:01.656 A:middle
method and functions.

00:25:02.226 --> 00:25:03.256 A:middle
It makes it really easy to move

00:25:03.256 --> 00:25:04.176 A:middle
about the file.

00:25:05.216 --> 00:25:06.216 A:middle
If you'd like to leave yourself

00:25:06.256 --> 00:25:07.476 A:middle
some other landmarks, you can

00:25:07.476 --> 00:25:09.216 A:middle
use the mark syntax to add

00:25:09.216 --> 00:25:10.826 A:middle
labels and horizontal dividers

00:25:11.126 --> 00:25:12.586 A:middle
that show up in your source and

00:25:12.586 --> 00:25:13.496 A:middle
in the mini map.

00:25:15.516 --> 00:25:19.756 A:middle
[ Applause ]

00:25:20.256 --> 00:25:21.536 A:middle
Now if I hover over the mini

00:25:21.536 --> 00:25:22.806 A:middle
map, you'll see the symbolic

00:25:22.806 --> 00:25:24.256 A:middle
landmarks for the file.

00:25:24.996 --> 00:25:26.606 A:middle
Here's a pro tip: hold down the

00:25:26.606 --> 00:25:28.166 A:middle
command key and you'll see all

00:25:28.166 --> 00:25:29.646 A:middle
of the landmarks for the file to

00:25:29.676 --> 00:25:30.846 A:middle
make it really easy to navigate

00:25:30.846 --> 00:25:31.826 A:middle
to exactly where you want to go.

00:25:32.516 --> 00:25:36.546 A:middle
[ Applause ]

00:25:37.046 --> 00:25:37.836 A:middle
And the mini map will show you

00:25:37.876 --> 00:25:39.736 A:middle
issues, test failures, even

00:25:39.736 --> 00:25:40.836 A:middle
in-file find results.

00:25:41.396 --> 00:25:42.386 A:middle
And we've made it fully

00:25:42.386 --> 00:25:42.846 A:middle
accessible.

00:25:44.366 --> 00:25:45.366 A:middle
You'll find our source editor

00:25:45.366 --> 00:25:46.756 A:middle
now pops and your code is more

00:25:46.756 --> 00:25:47.906 A:middle
vivid as we've deepened our

00:25:47.906 --> 00:25:48.686 A:middle
syntax coloring.

00:25:49.506 --> 00:25:50.236 A:middle
You'll also see that we've

00:25:50.236 --> 00:25:51.386 A:middle
increased our documentation

00:25:51.426 --> 00:25:53.766 A:middle
support here with italics, bold

00:25:53.766 --> 00:25:54.686 A:middle
and code voice in the

00:25:54.686 --> 00:25:55.416 A:middle
documentation.

00:25:56.326 --> 00:25:57.296 A:middle
You'll also see that when you

00:25:57.296 --> 00:25:58.646 A:middle
add documentation, it

00:25:58.646 --> 00:25:59.906 A:middle
automatically adds in missing

00:25:59.906 --> 00:26:00.856 A:middle
parameters that you may have

00:25:59.906 --> 00:26:00.856 A:middle
parameters that you may have

00:26:00.856 --> 00:26:02.546 A:middle
added after you typed your

00:26:02.546 --> 00:26:02.976 A:middle
documentation.

00:26:03.516 --> 00:26:09.556 A:middle
[ Applause ]

00:26:10.056 --> 00:26:10.926 A:middle
And what's even better is to

00:26:10.926 --> 00:26:12.056 A:middle
help you keep your documentation

00:26:12.056 --> 00:26:12.826 A:middle
and code in synch.

00:26:13.066 --> 00:26:14.126 A:middle
You'll find Edit All and Scope

00:26:14.126 --> 00:26:15.676 A:middle
now changes both, all at the

00:26:15.676 --> 00:26:15.976 A:middle
same time.

00:26:16.516 --> 00:26:21.626 A:middle
[ Applause ]

00:26:22.126 --> 00:26:23.206 A:middle
Now we also wanted to add some

00:26:23.206 --> 00:26:24.336 A:middle
additional help to help you keep

00:26:24.336 --> 00:26:25.376 A:middle
track of your changes.

00:26:26.166 --> 00:26:27.476 A:middle
If I'd like to review all of the

00:26:27.476 --> 00:26:29.286 A:middle
changes for this file, I can

00:26:29.286 --> 00:26:30.596 A:middle
open up the new Source Control

00:26:30.596 --> 00:26:32.126 A:middle
History Inspector which shows me

00:26:32.156 --> 00:26:33.196 A:middle
all the changes that have been

00:26:33.196 --> 00:26:34.406 A:middle
made to this file, and I can

00:26:34.406 --> 00:26:35.626 A:middle
quickly jump to any commit.

00:26:35.626 --> 00:26:37.066 A:middle
And because it's in the

00:26:37.066 --> 00:26:38.336 A:middle
inspector, this now works for

00:26:38.336 --> 00:26:39.816 A:middle
any file type in your project.

00:26:40.866 --> 00:26:42.776 A:middle
To help you review local

00:26:42.776 --> 00:26:44.376 A:middle
changes, we've also improved the

00:26:44.376 --> 00:26:45.076 A:middle
change bar.

00:26:45.846 --> 00:26:46.746 A:middle
When I hover over the change

00:26:46.746 --> 00:26:47.836 A:middle
bar, it shows me the local

00:26:47.836 --> 00:26:48.356 A:middle
changes.

00:26:48.666 --> 00:26:49.756 A:middle
But I can now have it show me

00:26:49.756 --> 00:26:51.626 A:middle
the code before the change that

00:26:51.626 --> 00:26:52.926 A:middle
I made to get a quick snippet.

00:26:53.516 --> 00:26:58.916 A:middle
[ Applause ]

00:26:59.416 --> 00:27:01.176 A:middle
And of course it's live, so as I

00:26:59.416 --> 00:27:01.176 A:middle
And of course it's live, so as I

00:27:01.266 --> 00:27:04.226 A:middle
start typing, it will update to

00:27:04.226 --> 00:27:04.976 A:middle
keep me up-to-date.

00:27:05.796 --> 00:27:07.006 A:middle
So those are just some of the

00:27:07.006 --> 00:27:08.286 A:middle
many source editing features

00:27:08.286 --> 00:27:09.696 A:middle
you'll find in Xcode 11.

00:27:11.516 --> 00:27:17.836 A:middle
[ Applause ]

00:27:18.336 --> 00:27:20.106 A:middle
Okay, so testing is another key

00:27:20.106 --> 00:27:21.046 A:middle
development workflow.

00:27:21.536 --> 00:27:23.346 A:middle
And Xcode already has great

00:27:23.346 --> 00:27:25.086 A:middle
support for writing tests, which

00:27:25.086 --> 00:27:26.716 A:middle
of course you all already know

00:27:26.976 --> 00:27:27.906 A:middle
because you're writing lots of

00:27:27.936 --> 00:27:28.346 A:middle
them, right?

00:27:28.346 --> 00:27:28.546 A:middle
&gt;&gt; Yep.

00:27:28.816 --> 00:27:28.976 A:middle
&gt;&gt; Yeah.

00:27:30.046 --> 00:27:30.686 A:middle
&gt;&gt; Excellent.

00:27:30.686 --> 00:27:31.886 A:middle
That's what we like to hear.

00:27:32.536 --> 00:27:33.846 A:middle
Now what you may not know is

00:27:33.846 --> 00:27:35.356 A:middle
that Xcode can do even more with

00:27:35.356 --> 00:27:37.016 A:middle
your tests by using fantastic

00:27:37.016 --> 00:27:38.386 A:middle
tools like runtime issues,

00:27:38.776 --> 00:27:40.336 A:middle
sanitizers, localization

00:27:40.336 --> 00:27:40.846 A:middle
simulation.

00:27:41.246 --> 00:27:42.376 A:middle
And we add more of these every

00:27:42.376 --> 00:27:42.566 A:middle
year.

00:27:43.486 --> 00:27:44.886 A:middle
With so many options, what's

00:27:44.886 --> 00:27:46.296 A:middle
been missing is a way to combine

00:27:46.296 --> 00:27:48.576 A:middle
them all in one place to be used

00:27:48.576 --> 00:27:49.176 A:middle
in parallel.

00:27:49.906 --> 00:27:51.466 A:middle
And for that we are adding test

00:27:51.576 --> 00:27:51.736 A:middle
plans.

00:27:53.486 --> 00:27:54.526 A:middle
Now the power of test plans

00:27:54.626 --> 00:27:56.396 A:middle
comes from running your tests in

00:27:56.396 --> 00:27:57.496 A:middle
many configurations.

00:27:58.556 --> 00:27:59.876 A:middle
With a few simple selections,

00:27:59.876 --> 00:28:01.656 A:middle
you can instantly test for your

00:27:59.876 --> 00:28:01.656 A:middle
you can instantly test for your

00:28:01.656 --> 00:28:02.266 A:middle
global audience.

00:28:03.266 --> 00:28:04.386 A:middle
And this configuration is also

00:28:04.456 --> 00:28:05.596 A:middle
perfect for capturing

00:28:05.596 --> 00:28:07.266 A:middle
screenshots for the App Store or

00:28:07.266 --> 00:28:08.316 A:middle
collecting details for your

00:28:08.316 --> 00:28:09.036 A:middle
localizers.

00:28:10.056 --> 00:28:11.226 A:middle
Yeah, it's okay to applaud for

00:28:11.226 --> 00:28:11.386 A:middle
that.

00:28:11.386 --> 00:28:11.886 A:middle
This is a big deal.

00:28:12.516 --> 00:28:16.706 A:middle
[ Applause ]

00:28:17.206 --> 00:28:18.566 A:middle
You can then see your app from

00:28:18.566 --> 00:28:20.196 A:middle
every angle by adding in other

00:28:20.196 --> 00:28:21.796 A:middle
diagnostics, tools and

00:28:21.796 --> 00:28:22.356 A:middle
parameters.

00:28:23.356 --> 00:28:24.786 A:middle
And your coverage increases even

00:28:24.856 --> 00:28:25.986 A:middle
further when you run your test

00:28:26.086 --> 00:28:28.066 A:middle
plans against many devices and

00:28:28.066 --> 00:28:30.036 A:middle
OS combinations to get a fully

00:28:30.036 --> 00:28:31.516 A:middle
comprehensive view of how your

00:28:31.626 --> 00:28:32.006 A:middle
app is doing.

00:28:32.006 --> 00:28:34.576 A:middle
Now for testing at this scale,

00:28:34.616 --> 00:28:36.196 A:middle
test plans work perfectly with

00:28:36.196 --> 00:28:38.026 A:middle
Xcode Server which can take full

00:28:38.026 --> 00:28:40.366 A:middle
advantage of the new Mac Pro and

00:28:40.366 --> 00:28:41.226 A:middle
with Xcode's new parallel

00:28:41.316 --> 00:28:43.026 A:middle
testing on simulators and

00:28:43.026 --> 00:28:43.356 A:middle
devices.

00:28:44.436 --> 00:28:45.756 A:middle
The result with test plans is

00:28:45.756 --> 00:28:47.326 A:middle
you now have one command that

00:28:47.326 --> 00:28:48.906 A:middle
does all of the testing for your

00:28:48.906 --> 00:28:49.196 A:middle
apps.

00:28:49.896 --> 00:28:51.096 A:middle
So this is a major advancement.

00:28:52.516 --> 00:28:58.556 A:middle
[ Applause ]

00:28:59.056 --> 00:28:59.866 A:middle
Now often when testing and

00:28:59.866 --> 00:29:01.376 A:middle
debugging, it's necessary to

00:28:59.866 --> 00:29:01.376 A:middle
debugging, it's necessary to

00:29:01.376 --> 00:29:02.696 A:middle
replicate user scenarios.

00:29:03.106 --> 00:29:04.286 A:middle
And our new Device Conditions

00:29:04.676 --> 00:29:05.276 A:middle
answers the call.

00:29:06.296 --> 00:29:07.276 A:middle
You can now set varied

00:29:07.276 --> 00:29:08.426 A:middle
conditions for network

00:29:08.426 --> 00:29:10.046 A:middle
throughput and thermal states on

00:29:10.046 --> 00:29:11.656 A:middle
your devices and see how your

00:29:11.656 --> 00:29:12.316 A:middle
apps respond.

00:29:13.216 --> 00:29:14.226 A:middle
Now rest assured these are

00:29:14.226 --> 00:29:15.636 A:middle
actually just simulations.

00:29:15.816 --> 00:29:16.696 A:middle
We're not actually going to make

00:29:16.696 --> 00:29:17.856 A:middle
your devices get super-hot here.

00:29:19.006 --> 00:29:20.726 A:middle
You can enable the conditions in

00:29:20.726 --> 00:29:21.926 A:middle
Xcode's Devices window.

00:29:22.276 --> 00:29:23.376 A:middle
And the devices will display

00:29:23.376 --> 00:29:24.596 A:middle
banners when the conditions are

00:29:24.736 --> 00:29:24.946 A:middle
active.

00:29:25.816 --> 00:29:26.766 A:middle
You can tap the banner to

00:29:26.766 --> 00:29:28.976 A:middle
disable the conditions and Xcode

00:29:28.976 --> 00:29:30.166 A:middle
will automatically terminate the

00:29:30.166 --> 00:29:31.536 A:middle
conditions when you disconnect

00:29:31.676 --> 00:29:32.076 A:middle
the devices.

00:29:33.976 --> 00:29:34.976 A:middle
Now for all the testing you're

00:29:34.976 --> 00:29:36.576 A:middle
going to be doing, we've also

00:29:36.576 --> 00:29:37.776 A:middle
improved our result bundles

00:29:37.866 --> 00:29:39.256 A:middle
which are now standalone.

00:29:39.826 --> 00:29:41.066 A:middle
Whether you create them in Xcode

00:29:41.066 --> 00:29:42.416 A:middle
or from the command line, you

00:29:42.416 --> 00:29:43.786 A:middle
can share them via email, attach

00:29:43.786 --> 00:29:45.056 A:middle
them to bugs and then just

00:29:45.056 --> 00:29:46.236 A:middle
double-click on them to open

00:29:46.236 --> 00:29:48.246 A:middle
them back in Xcode to review all

00:29:48.246 --> 00:29:48.706 A:middle
of the details.

00:29:49.516 --> 00:29:56.176 A:middle
[ Applause ]

00:29:56.676 --> 00:29:57.786 A:middle
Now to help you improve your

00:29:57.786 --> 00:29:59.176 A:middle
apps even further, we are

00:29:59.176 --> 00:30:01.046 A:middle
introducing two new feedback

00:29:59.176 --> 00:30:01.046 A:middle
introducing two new feedback

00:30:01.096 --> 00:30:01.276 A:middle
tools.

00:30:02.246 --> 00:30:04.336 A:middle
First, app performance metrics

00:30:04.366 --> 00:30:06.816 A:middle
for iOS and iPadOS App Store

00:30:06.816 --> 00:30:06.966 A:middle
apps.

00:30:08.426 --> 00:30:09.766 A:middle
When users opt into sharing

00:30:09.766 --> 00:30:11.176 A:middle
analytics, you'll received

00:30:11.176 --> 00:30:13.226 A:middle
anonymized metrics for battery

00:30:13.226 --> 00:30:15.056 A:middle
life, launch time, memory use

00:30:15.316 --> 00:30:15.886 A:middle
and more.

00:30:16.806 --> 00:30:18.106 A:middle
These metrics are aggregated and

00:30:18.106 --> 00:30:19.376 A:middle
displayed in the organizer

00:30:19.656 --> 00:30:21.436 A:middle
alongside the crash and energy

00:30:21.536 --> 00:30:22.706 A:middle
logs, and are a great way to

00:30:22.706 --> 00:30:23.916 A:middle
monitor and improve the

00:30:23.916 --> 00:30:25.256 A:middle
performance of your app with

00:30:25.256 --> 00:30:25.726 A:middle
each build.

00:30:27.226 --> 00:30:28.776 A:middle
These aggregated metrics, we

00:30:28.776 --> 00:30:29.876 A:middle
started collecting them in the

00:30:29.966 --> 00:30:32.396 A:middle
spring with iOS 12.2.

00:30:32.506 --> 00:30:33.556 A:middle
So many of your apps will

00:30:33.556 --> 00:30:35.136 A:middle
already have data to review.

00:30:36.626 --> 00:30:37.636 A:middle
Now another great source of

00:30:37.636 --> 00:30:39.016 A:middle
feedback is directly from your

00:30:39.016 --> 00:30:40.816 A:middle
users, and Test Flight will now

00:30:40.816 --> 00:30:42.416 A:middle
let users share what they think.

00:30:43.936 --> 00:30:45.286 A:middle
Test Flight apps automatically

00:30:45.286 --> 00:30:46.756 A:middle
enable user feedback.

00:30:47.796 --> 00:30:49.316 A:middle
When a user takes a screenshot

00:30:49.316 --> 00:30:50.156 A:middle
in your app, they will have a

00:30:50.156 --> 00:30:52.066 A:middle
new option to share it as beta

00:30:52.066 --> 00:30:53.576 A:middle
feedback, optionally adding in

00:30:53.576 --> 00:30:53.976 A:middle
their comments.

00:30:54.516 --> 00:31:00.876 A:middle
[ Applause ]

00:30:54.516 --> 00:31:00.876 A:middle
[ Applause ]

00:31:01.376 --> 00:31:02.866 A:middle
You can review all the feedback

00:31:02.866 --> 00:31:04.286 A:middle
on App Store Connect and

00:31:04.286 --> 00:31:05.616 A:middle
download all the details for

00:31:05.616 --> 00:31:06.526 A:middle
your bug tracking systems.

00:31:08.746 --> 00:31:10.286 A:middle
So all these features today are

00:31:10.366 --> 00:31:12.086 A:middle
just a small taste of our Xcode

00:31:12.086 --> 00:31:13.326 A:middle
release, which brings together

00:31:13.326 --> 00:31:14.966 A:middle
innovations in Swift, the SDK

00:31:14.966 --> 00:31:16.756 A:middle
and across all of our tools.

00:31:17.546 --> 00:31:18.646 A:middle
All this to help you do your

00:31:18.646 --> 00:31:20.296 A:middle
best work faster than ever.

00:31:20.996 --> 00:31:21.976 A:middle
And that is Xcode 11.

00:31:22.516 --> 00:31:30.906 A:middle
[ Applause ]

00:31:31.406 --> 00:31:32.086 A:middle
&gt;&gt; And now I'd like to invite

00:31:32.156 --> 00:31:33.476 A:middle
Sebastien back to tell us more

00:31:33.476 --> 00:31:34.406 A:middle
about Apple's platforms.

00:31:34.876 --> 00:31:35.276 A:middle
Sebastien?

00:31:36.121 --> 00:31:38.121 A:middle
[ Applause ]

00:31:38.226 --> 00:31:39.096 A:middle
&gt;&gt; Thank you, Matthew.

00:31:39.796 --> 00:31:41.106 A:middle
Wasn't that amazing?

00:31:42.436 --> 00:31:43.956 A:middle
Really, really great features to

00:31:43.956 --> 00:31:45.896 A:middle
help all of you build better

00:31:45.896 --> 00:31:46.556 A:middle
apps.

00:31:46.906 --> 00:31:47.806 A:middle
So now let's switch to our

00:31:47.806 --> 00:31:48.446 A:middle
platforms.

00:31:48.866 --> 00:31:49.886 A:middle
And of course our platforms

00:31:49.886 --> 00:31:51.356 A:middle
themselves are tailored to

00:31:51.356 --> 00:31:53.276 A:middle
provide great experiences and

00:31:53.276 --> 00:31:54.536 A:middle
they really reflect the unique

00:31:54.536 --> 00:31:55.926 A:middle
way in which each of them is

00:31:55.926 --> 00:31:56.306 A:middle
used.

00:31:56.946 --> 00:31:58.186 A:middle
So some of what we're doing this

00:31:58.186 --> 00:31:59.536 A:middle
year is unique to each of them,

00:31:59.896 --> 00:32:00.836 A:middle
and what we're going to do now

00:31:59.896 --> 00:32:00.836 A:middle
and what we're going to do now

00:32:01.186 --> 00:32:03.366 A:middle
is dive right in to macOS and

00:32:03.366 --> 00:32:05.226 A:middle
tell you what we're doing there.

00:32:05.786 --> 00:32:09.126 A:middle
macOS Catalina is a great

00:32:09.126 --> 00:32:10.616 A:middle
release with a rich set of

00:32:10.616 --> 00:32:12.476 A:middle
compelling new features such as

00:32:12.536 --> 00:32:14.176 A:middle
screen time and the new Music

00:32:14.176 --> 00:32:14.386 A:middle
app.

00:32:14.386 --> 00:32:16.616 A:middle
And the Mac takes another great

00:32:16.716 --> 00:32:17.986 A:middle
step forward with amazing

00:32:18.086 --> 00:32:19.926 A:middle
productivity features such as

00:32:19.926 --> 00:32:20.936 A:middle
Sidecar.

00:32:20.936 --> 00:32:22.036 A:middle
We're going to love Sidecar,

00:32:22.886 --> 00:32:22.976 A:middle
right?

00:32:23.516 --> 00:32:26.566 A:middle
[ Applause ]

00:32:27.066 --> 00:32:27.216 A:middle
All right.

00:32:27.606 --> 00:32:28.696 A:middle
Well, with an active installed

00:32:28.726 --> 00:32:30.916 A:middle
base of over 100 million users,

00:32:31.256 --> 00:32:33.176 A:middle
the Mac is a vibrant platform

00:32:33.276 --> 00:32:34.636 A:middle
with a rich app ecosystem.

00:32:34.746 --> 00:32:37.006 A:middle
And the Mac ecosystem is full of

00:32:37.006 --> 00:32:38.646 A:middle
powerful native apps that you

00:32:38.646 --> 00:32:40.376 A:middle
have created using our AppKit

00:32:40.446 --> 00:32:40.856 A:middle
framework.

00:32:40.856 --> 00:32:42.886 A:middle
And a great example of this is

00:32:42.976 --> 00:32:43.876 A:middle
Pixelmator Pro.

00:32:44.946 --> 00:32:46.076 A:middle
Now AppKit is the powerful

00:32:46.186 --> 00:32:47.716 A:middle
framework that enables the full

00:32:47.716 --> 00:32:48.626 A:middle
capabilities of the Mac.

00:32:48.896 --> 00:32:50.766 A:middle
But we also recognize that there

00:32:50.766 --> 00:32:52.146 A:middle
are a number of apps available

00:32:52.146 --> 00:32:53.906 A:middle
for iPad that would be great to

00:32:53.986 --> 00:32:55.886 A:middle
run on the Mac, but you have not

00:32:55.886 --> 00:32:57.786 A:middle
always had time to use AppKit to

00:32:57.786 --> 00:32:58.476 A:middle
bring that to the Mac.

00:32:59.226 --> 00:33:01.096 A:middle
And so this year we're adding an

00:32:59.226 --> 00:33:01.096 A:middle
And so this year we're adding an

00:33:01.096 --> 00:33:02.826 A:middle
additional way to create native

00:33:02.826 --> 00:33:04.426 A:middle
Mac apps with the technology

00:33:04.426 --> 00:33:05.756 A:middle
that allows you to take an

00:33:05.756 --> 00:33:07.116 A:middle
iPadOS app and bring it to the

00:33:07.116 --> 00:33:08.696 A:middle
Mac with minimal effort.

00:33:09.736 --> 00:33:09.976 A:middle
We --

00:33:15.086 --> 00:33:16.256 A:middle
Can you go back two slides?

00:33:16.446 --> 00:33:16.646 A:middle
Sorry.

00:33:20.046 --> 00:33:21.506 A:middle
One more. All right.

00:33:22.466 --> 00:33:23.936 A:middle
This is a huge opportunity for

00:33:23.936 --> 00:33:26.086 A:middle
the Mac to tap into the world's

00:33:26.086 --> 00:33:27.556 A:middle
largest app ecosystem.

00:33:28.186 --> 00:33:29.716 A:middle
There are over a million iPad

00:33:29.716 --> 00:33:31.806 A:middle
apps out there and we think many

00:33:31.806 --> 00:33:33.386 A:middle
of them would be really great on

00:33:33.386 --> 00:33:34.306 A:middle
the Mac as well.

00:33:35.606 --> 00:33:37.176 A:middle
Now to achieve this, we've

00:33:37.176 --> 00:33:38.566 A:middle
ported more than 40 frameworks

00:33:38.566 --> 00:33:39.966 A:middle
and libraries from iOS to the

00:33:39.966 --> 00:33:40.176 A:middle
Mac.

00:33:40.346 --> 00:33:42.556 A:middle
And if you're an existing iOS

00:33:42.666 --> 00:33:43.876 A:middle
developer that doesn't have a

00:33:44.136 --> 00:33:45.376 A:middle
Mac app yet, you're going to

00:33:45.376 --> 00:33:47.006 A:middle
love having the same APIs

00:33:47.246 --> 00:33:48.946 A:middle
available on both platforms.

00:33:49.496 --> 00:33:50.426 A:middle
In fact, we've made available

00:33:50.426 --> 00:33:53.516 A:middle
almost the entire iOS API set

00:33:53.516 --> 00:33:54.686 A:middle
with only a small number of

00:33:54.686 --> 00:33:56.606 A:middle
exceptions for unique mobile

00:33:56.606 --> 00:33:57.066 A:middle
features.

00:33:58.066 --> 00:34:00.016 A:middle
Now we achieved this by adapting

00:33:58.066 --> 00:34:00.016 A:middle
Now we achieved this by adapting

00:34:00.016 --> 00:34:01.556 A:middle
UI Kit as a native framework.

00:34:01.896 --> 00:34:03.596 A:middle
That enables iPad apps to run on

00:34:03.596 --> 00:34:05.746 A:middle
the Mac and feel just as fast

00:34:05.746 --> 00:34:07.486 A:middle
and fluid as other apps on the

00:34:07.576 --> 00:34:08.065 A:middle
platform.

00:34:09.335 --> 00:34:10.795 A:middle
And by integrating UI Kit

00:34:10.795 --> 00:34:13.085 A:middle
directly into macOS, many of the

00:34:13.085 --> 00:34:14.835 A:middle
fundamentals are automatic.

00:34:15.585 --> 00:34:16.775 A:middle
So many Mac desktop and

00:34:16.775 --> 00:34:18.386 A:middle
windowing features are added

00:34:18.656 --> 00:34:20.156 A:middle
without any work on your part,

00:34:21.096 --> 00:34:22.335 A:middle
and we adapt platform-unique

00:34:22.335 --> 00:34:24.275 A:middle
elements like touch controls to

00:34:24.275 --> 00:34:26.326 A:middle
keyboard and mouse input, saving

00:34:26.326 --> 00:34:28.166 A:middle
you a ton of work and giving you

00:34:28.166 --> 00:34:29.376 A:middle
a huge head start in your

00:34:29.376 --> 00:34:29.846 A:middle
development.

00:34:30.505 --> 00:34:32.326 A:middle
Now we've been working on this

00:34:32.396 --> 00:34:33.815 A:middle
technology for a number of years

00:34:33.815 --> 00:34:35.065 A:middle
and we're using it for our own

00:34:35.065 --> 00:34:36.666 A:middle
apps, which has allowed us to

00:34:36.766 --> 00:34:37.826 A:middle
prove out and refine the

00:34:37.876 --> 00:34:39.565 A:middle
technology before we make it

00:34:39.565 --> 00:34:41.446 A:middle
available to you in macOS

00:34:41.446 --> 00:34:42.295 A:middle
Catalina this year.

00:34:43.376 --> 00:34:45.266 A:middle
If you have an iPadOS app,

00:34:45.266 --> 00:34:47.186 A:middle
targeting the Mac is super easy.

00:34:47.656 --> 00:34:49.346 A:middle
There are basically three steps.

00:34:50.525 --> 00:34:52.916 A:middle
First, click the checkbox in

00:34:52.916 --> 00:34:53.646 A:middle
Xcode -- here we go.

00:34:54.031 --> 00:34:56.031 A:middle
[ Laughter ]

00:34:56.045 --> 00:34:56.286 A:middle
That easy.

00:34:56.946 --> 00:34:58.556 A:middle
In Xcode's Project Editor, and

00:34:58.556 --> 00:34:59.886 A:middle
turn on Mac support for your

00:34:59.886 --> 00:35:00.306 A:middle
project.

00:34:59.886 --> 00:35:00.306 A:middle
project.

00:35:00.406 --> 00:35:00.786 A:middle
There you go.

00:35:00.876 --> 00:35:02.036 A:middle
As easy as that.

00:35:02.146 --> 00:35:02.916 A:middle
And here's the magic.

00:35:03.376 --> 00:35:04.786 A:middle
That single project and target

00:35:04.786 --> 00:35:06.566 A:middle
builds apps for all three

00:35:06.646 --> 00:35:07.176 A:middle
platforms.

00:35:07.736 --> 00:35:08.716 A:middle
And when you make a change to

00:35:08.716 --> 00:35:10.716 A:middle
your source, all three apps

00:35:10.716 --> 00:35:12.056 A:middle
update automatically.

00:35:13.446 --> 00:35:14.766 A:middle
The second step is to ensure

00:35:14.766 --> 00:35:16.626 A:middle
that your app is great on the

00:35:16.626 --> 00:35:17.296 A:middle
iPad.

00:35:18.196 --> 00:35:20.546 A:middle
Better iPad apps make better Mac

00:35:20.586 --> 00:35:21.076 A:middle
apps as well.

00:35:21.076 --> 00:35:23.056 A:middle
So the work that you put in to

00:35:23.056 --> 00:35:24.616 A:middle
adopting the newest technologies

00:35:24.946 --> 00:35:26.756 A:middle
and optimizing for larger iPad

00:35:26.806 --> 00:35:28.626 A:middle
screens translates wonderfully

00:35:28.626 --> 00:35:29.016 A:middle
to the Mac.

00:35:31.316 --> 00:35:32.816 A:middle
Just following best practices

00:35:33.216 --> 00:35:34.376 A:middle
such as supporting external

00:35:34.466 --> 00:35:36.496 A:middle
keyboards will also result in

00:35:36.496 --> 00:35:38.036 A:middle
richer Mac experiences.

00:35:39.596 --> 00:35:41.146 A:middle
The third step is to take

00:35:41.146 --> 00:35:42.646 A:middle
advantage of specific Mac

00:35:42.696 --> 00:35:43.356 A:middle
capabilities.

00:35:44.186 --> 00:35:45.036 A:middle
And this is where you make

00:35:45.036 --> 00:35:47.026 A:middle
customizations that take full

00:35:47.066 --> 00:35:48.166 A:middle
advantage of typical

00:35:49.086 --> 00:35:50.436 A:middle
Mac-specific user interface

00:35:50.436 --> 00:35:52.076 A:middle
elements like full menus and

00:35:52.076 --> 00:35:52.626 A:middle
toolbars.

00:35:52.626 --> 00:35:55.306 A:middle
And if applicable, sidebars and

00:35:55.306 --> 00:35:56.326 A:middle
their special materials.

00:35:56.996 --> 00:35:58.196 A:middle
Now to show you how easy this

00:35:58.266 --> 00:35:59.806 A:middle
is, I'd like to invite Matthew

00:35:59.806 --> 00:36:01.356 A:middle
back onstage for a demo.

00:35:59.806 --> 00:36:01.356 A:middle
back onstage for a demo.

00:36:01.666 --> 00:36:01.976 A:middle
Matthew?

00:36:02.516 --> 00:36:07.946 A:middle
[ Applause ]

00:36:08.446 --> 00:36:09.106 A:middle
&gt;&gt; Thank you, Sebastien.

00:36:10.246 --> 00:36:11.186 A:middle
Here we have our travel

00:36:11.186 --> 00:36:12.586 A:middle
application running in the iPad

00:36:12.886 --> 00:36:13.306 A:middle
Simulator.

00:36:13.886 --> 00:36:15.306 A:middle
It's a list view of locations.

00:36:15.886 --> 00:36:17.116 A:middle
When I select a location, the

00:36:17.116 --> 00:36:17.846 A:middle
globe will rotate.

00:36:18.646 --> 00:36:19.866 A:middle
And we have a logging area where

00:36:19.866 --> 00:36:21.006 A:middle
I can start keeping track of my

00:36:21.116 --> 00:36:22.246 A:middle
trips in a journal.

00:36:23.266 --> 00:36:24.336 A:middle
Let's follow Sebastien's three

00:36:24.336 --> 00:36:25.666 A:middle
steps and bring this app to the

00:36:25.666 --> 00:36:25.756 A:middle
Mac.

00:36:26.756 --> 00:36:28.416 A:middle
Step one, check the box.

00:36:29.436 --> 00:36:31.236 A:middle
I'll quit the simulator and here

00:36:31.236 --> 00:36:32.976 A:middle
in the target editor I'll check

00:36:32.976 --> 00:36:34.766 A:middle
the box for Mac support to

00:36:34.766 --> 00:36:35.216 A:middle
enable it.

00:36:36.756 --> 00:36:37.686 A:middle
That's it.

00:36:37.686 --> 00:36:38.836 A:middle
I can now build and run my

00:36:38.836 --> 00:36:39.616 A:middle
application for the Mac.

00:36:40.626 --> 00:36:41.846 A:middle
By checking the box, we added

00:36:41.846 --> 00:36:43.156 A:middle
the Mac as a destination.

00:36:43.606 --> 00:36:44.786 A:middle
So just like I can pick between

00:36:44.786 --> 00:36:46.286 A:middle
devices and simulators for my

00:36:46.286 --> 00:36:47.706 A:middle
app, I can now choose the Mac.

00:36:48.816 --> 00:36:49.546 A:middle
And here's the Mac app.

00:36:50.346 --> 00:36:52.486 A:middle
List View on the left, select

00:36:52.486 --> 00:36:54.536 A:middle
the location and log in.

00:36:55.516 --> 00:37:02.066 A:middle
[ Applause ]

00:36:55.516 --> 00:37:02.066 A:middle
[ Applause ]

00:37:02.566 --> 00:37:03.356 A:middle
I know, pretty powerful

00:37:03.356 --> 00:37:03.716 A:middle
checkbox.

00:37:03.716 --> 00:37:06.826 A:middle
All right, let's move on to step

00:37:06.886 --> 00:37:08.266 A:middle
two, make a great iPad app.

00:37:09.376 --> 00:37:10.786 A:middle
I've not implemented any actions

00:37:10.786 --> 00:37:12.426 A:middle
from my List View, things like

00:37:12.426 --> 00:37:13.776 A:middle
Adding to Favorites or to Share.

00:37:14.686 --> 00:37:15.636 A:middle
When I implement those for the

00:37:15.846 --> 00:37:16.656 A:middle
iPad, they'll show up as a

00:37:16.736 --> 00:37:17.896 A:middle
context menu on the Mac.

00:37:18.666 --> 00:37:19.326 A:middle
It's a double win.

00:37:20.376 --> 00:37:22.076 A:middle
So I'll quit the Mac app and

00:37:22.076 --> 00:37:23.606 A:middle
change to my sidebar controller

00:37:23.606 --> 00:37:25.246 A:middle
here, and I'll just add a table

00:37:25.246 --> 00:37:26.676 A:middle
view delegate method that sets

00:37:26.676 --> 00:37:27.796 A:middle
up those menus for each item.

00:37:29.216 --> 00:37:30.526 A:middle
Okay. Let's move on to step

00:37:30.616 --> 00:37:30.846 A:middle
three.

00:37:31.956 --> 00:37:33.556 A:middle
I'd like the sidebar on my Mac

00:37:33.556 --> 00:37:34.676 A:middle
app to be vibrant.

00:37:35.586 --> 00:37:36.626 A:middle
Now this change doesn't happen

00:37:36.666 --> 00:37:37.666 A:middle
automatically because it's

00:37:37.666 --> 00:37:38.926 A:middle
something you should review to

00:37:38.926 --> 00:37:39.886 A:middle
make sure it's appropriate.

00:37:40.746 --> 00:37:41.856 A:middle
When you do find it's what you'd

00:37:41.856 --> 00:37:43.526 A:middle
like, it's a simple one-line

00:37:43.526 --> 00:37:44.846 A:middle
change to set the background

00:37:45.046 --> 00:37:45.906 A:middle
style to sidebar.

00:37:47.536 --> 00:37:48.916 A:middle
Okay, for our final change, I'd

00:37:48.916 --> 00:37:50.356 A:middle
like to add a menu bar to our

00:37:50.356 --> 00:37:50.906 A:middle
application.

00:37:51.806 --> 00:37:53.706 A:middle
So here in the storyboard I'll

00:37:53.706 --> 00:37:55.646 A:middle
bring up the library and I'll

00:37:55.706 --> 00:37:56.376 A:middle
search for a menu.

00:37:57.246 --> 00:37:58.516 A:middle
I'll grab a main menu and I'll

00:37:58.516 --> 00:38:00.036 A:middle
drag it out into my storyboard

00:37:58.516 --> 00:38:00.036 A:middle
drag it out into my storyboard

00:38:00.716 --> 00:38:01.966 A:middle
and we'll open up the file menu.

00:38:03.306 --> 00:38:04.476 A:middle
I'd like to add a menu command

00:38:04.476 --> 00:38:06.126 A:middle
in here for the login action.

00:38:06.746 --> 00:38:07.626 A:middle
So we'll call this Login.

00:38:08.366 --> 00:38:09.416 A:middle
We'll give it a key equivalent

00:38:09.416 --> 00:38:10.046 A:middle
of Command-L.

00:38:10.856 --> 00:38:12.066 A:middle
And I just now need to connect

00:38:12.146 --> 00:38:14.156 A:middle
the menu item up to the action

00:38:14.426 --> 00:38:15.596 A:middle
that I'm already using for

00:38:15.596 --> 00:38:15.836 A:middle
Login.

00:38:16.886 --> 00:38:18.146 A:middle
Okay? That's it.

00:38:18.436 --> 00:38:19.726 A:middle
Let's build and run our changes.

00:38:20.656 --> 00:38:22.006 A:middle
I'm going to go up and hide

00:38:22.246 --> 00:38:23.696 A:middle
Xcode for the moment so we can

00:38:23.806 --> 00:38:24.906 A:middle
see our application.

00:38:25.936 --> 00:38:27.616 A:middle
Okay, so now we have the vibrant

00:38:27.666 --> 00:38:28.116 A:middle
sidebar.

00:38:28.656 --> 00:38:29.856 A:middle
When I select an item, I can

00:38:29.856 --> 00:38:32.026 A:middle
bring up a context menu and up

00:38:32.056 --> 00:38:34.216 A:middle
here in the File menu I now have

00:38:34.496 --> 00:38:35.186 A:middle
the Login action.

00:38:36.046 --> 00:38:37.306 A:middle
So just like that, three easy

00:38:37.356 --> 00:38:37.806 A:middle
steps.

00:38:38.516 --> 00:38:45.266 A:middle
[ Applause ]

00:38:45.766 --> 00:38:46.856 A:middle
Three easy steps to bring our

00:38:46.856 --> 00:38:48.666 A:middle
app to the Mac and make a great

00:38:48.666 --> 00:38:49.656 A:middle
user experience for all our

00:38:49.656 --> 00:38:49.996 A:middle
users.

00:38:50.446 --> 00:38:51.206 A:middle
Back to you, Sebastien.

00:38:52.041 --> 00:38:54.041 A:middle
[ Applause ]

00:38:54.066 --> 00:38:54.646 A:middle
&gt;&gt; Thank you, Matthew.

00:38:55.266 --> 00:38:56.246 A:middle
That was really amazing.

00:38:56.486 --> 00:38:57.706 A:middle
Doesn't this make you want to go

00:38:57.706 --> 00:38:58.616 A:middle
and try it out?

00:38:59.396 --> 00:39:01.336 A:middle
Yes. All right, in fact, over

00:38:59.396 --> 00:39:01.336 A:middle
Yes. All right, in fact, over

00:39:01.336 --> 00:39:02.786 A:middle
the last few weeks we invited a

00:39:02.786 --> 00:39:04.226 A:middle
number of developers to take

00:39:04.226 --> 00:39:05.256 A:middle
this for a spin.

00:39:05.456 --> 00:39:06.576 A:middle
And the progress that they have

00:39:06.636 --> 00:39:08.406 A:middle
made in a few short weeks is

00:39:08.466 --> 00:39:09.276 A:middle
truly impressive.

00:39:09.746 --> 00:39:11.116 A:middle
Here's a sample of the iPad apps

00:39:11.116 --> 00:39:12.856 A:middle
that they already have running

00:39:13.036 --> 00:39:13.436 A:middle
on the Mac.

00:39:14.606 --> 00:39:17.316 A:middle
Now once you've built a Mac app,

00:39:17.316 --> 00:39:18.456 A:middle
the best way to distribute it to

00:39:18.456 --> 00:39:19.776 A:middle
your users is through the Mac

00:39:19.776 --> 00:39:20.346 A:middle
App Store.

00:39:21.216 --> 00:39:22.736 A:middle
It features the biggest catalog

00:39:22.736 --> 00:39:23.686 A:middle
of Mac Apps.

00:39:23.846 --> 00:39:25.986 A:middle
It's available in 155 countries

00:39:26.146 --> 00:39:28.186 A:middle
throughout the world and the Mac

00:39:28.246 --> 00:39:29.486 A:middle
App Store allows you to reach

00:39:29.646 --> 00:39:31.206 A:middle
every single Mac user.

00:39:31.906 --> 00:39:34.156 A:middle
Now we also built Gatekeeper to

00:39:34.156 --> 00:39:35.556 A:middle
give users flexibility and

00:39:35.556 --> 00:39:36.726 A:middle
choice on how they get their

00:39:36.726 --> 00:39:38.336 A:middle
apps while helping protect them

00:39:38.336 --> 00:39:39.336 A:middle
from malicious software.

00:39:39.856 --> 00:39:41.056 A:middle
And in macOS Catalina,

00:39:41.526 --> 00:39:42.656 A:middle
Gatekeeper will validate the

00:39:42.656 --> 00:39:43.576 A:middle
apps that you run from the

00:39:43.576 --> 00:39:45.426 A:middle
internet both at first launch

00:39:45.656 --> 00:39:47.496 A:middle
and periodically thereafter to

00:39:47.496 --> 00:39:48.966 A:middle
confirm that they're free of

00:39:48.966 --> 00:39:49.596 A:middle
known malware.

00:39:50.556 --> 00:39:51.536 A:middle
This is accomplished by

00:39:51.536 --> 00:39:52.816 A:middle
requiring developers to use the

00:39:52.816 --> 00:39:54.556 A:middle
notarization service that we

00:39:54.556 --> 00:39:56.866 A:middle
announced last year for both new

00:39:56.866 --> 00:39:57.716 A:middle
and updated apps.

00:39:58.286 --> 00:40:00.336 A:middle
So now you and your users can

00:39:58.286 --> 00:40:00.336 A:middle
So now you and your users can

00:40:00.336 --> 00:40:01.816 A:middle
safely get apps from both the

00:40:01.816 --> 00:40:03.716 A:middle
Mac App Store and the internet.

00:40:04.736 --> 00:40:06.236 A:middle
Notarization has already seen

00:40:06.236 --> 00:40:07.076 A:middle
broad adoption.

00:40:07.636 --> 00:40:09.416 A:middle
It's simple and fast with over

00:40:09.416 --> 00:40:11.836 A:middle
98% of submissions completing

00:40:11.836 --> 00:40:12.936 A:middle
within 15 minutes.

00:40:13.956 --> 00:40:15.656 A:middle
Now speaking of security, we're

00:40:15.656 --> 00:40:16.836 A:middle
continuing to invest in the

00:40:16.896 --> 00:40:18.726 A:middle
foundations of macOS and I'd

00:40:18.726 --> 00:40:20.486 A:middle
like to focus on three areas.

00:40:21.696 --> 00:40:23.106 A:middle
First, a new technology called

00:40:23.106 --> 00:40:24.746 A:middle
Driver Kit which allows you to

00:40:24.746 --> 00:40:26.106 A:middle
move your kernel extensions out

00:40:26.106 --> 00:40:27.696 A:middle
of the kernel and into user

00:40:27.696 --> 00:40:28.056 A:middle
space.

00:40:28.666 --> 00:40:31.116 A:middle
And by running these drivers and

00:40:31.116 --> 00:40:33.336 A:middle
extensions as user processes, we

00:40:33.336 --> 00:40:35.256 A:middle
improve the stability of macOS

00:40:35.256 --> 00:40:36.156 A:middle
for all of our users.

00:40:37.266 --> 00:40:38.586 A:middle
We identified the most common

00:40:38.586 --> 00:40:39.976 A:middle
use cases that have required

00:40:39.976 --> 00:40:41.206 A:middle
kernel extensions in the past,

00:40:41.206 --> 00:40:42.756 A:middle
and now we have a user space

00:40:42.786 --> 00:40:45.376 A:middle
alternative for over 75% of them

00:40:45.626 --> 00:40:46.706 A:middle
in macOS Catalina.

00:40:47.616 --> 00:40:48.926 A:middle
We encourage you to adopt Driver

00:40:49.006 --> 00:40:50.746 A:middle
Kit as future versions of macOS

00:40:50.746 --> 00:40:52.676 A:middle
will no longer run these types

00:40:52.766 --> 00:40:53.716 A:middle
of kernel extensions.

00:40:54.216 --> 00:40:57.106 A:middle
Next, we're improving the

00:40:57.106 --> 00:40:58.886 A:middle
stability of macOS by making the

00:40:58.986 --> 00:41:00.736 A:middle
system volume read-only.

00:40:58.986 --> 00:41:00.736 A:middle
system volume read-only.

00:41:01.596 --> 00:41:02.426 A:middle
Here's how it works.

00:41:03.146 --> 00:41:04.726 A:middle
Today there's a single volume

00:41:04.726 --> 00:41:06.416 A:middle
that includes user data, apps

00:41:06.816 --> 00:41:07.836 A:middle
and the operating system.

00:41:08.526 --> 00:41:09.706 A:middle
And to further isolate macOS

00:41:09.706 --> 00:41:11.726 A:middle
from changes, the Mac will now

00:41:11.726 --> 00:41:13.226 A:middle
be divided into two logical

00:41:13.226 --> 00:41:13.616 A:middle
volumes.

00:41:14.576 --> 00:41:15.806 A:middle
One for the operating system

00:41:15.876 --> 00:41:17.746 A:middle
files which will be read-only,

00:41:18.006 --> 00:41:20.056 A:middle
and the other for user data and

00:41:20.056 --> 00:41:20.286 A:middle
apps.

00:41:21.051 --> 00:41:23.051 A:middle
[ Applause ]

00:41:23.086 --> 00:41:23.296 A:middle
There you go.

00:41:24.126 --> 00:41:26.126 A:middle
[ Applause ]

00:41:26.236 --> 00:41:27.306 A:middle
This will further protect the

00:41:27.306 --> 00:41:28.736 A:middle
operating system from changes,

00:41:29.006 --> 00:41:30.956 A:middle
increase stability and set us up

00:41:30.956 --> 00:41:32.266 A:middle
to deliver future security

00:41:32.266 --> 00:41:32.706 A:middle
benefits.

00:41:33.286 --> 00:41:34.716 A:middle
Now some of you may have made

00:41:34.716 --> 00:41:36.476 A:middle
assumptions in your app or your

00:41:36.476 --> 00:41:37.826 A:middle
installer, and you'll want to

00:41:37.826 --> 00:41:39.786 A:middle
check that it works seamlessly

00:41:39.786 --> 00:41:40.896 A:middle
on macOS Catalina.

00:41:42.286 --> 00:41:44.436 A:middle
Finally, enhancements to app and

00:41:44.436 --> 00:41:45.136 A:middle
data protection.

00:41:45.816 --> 00:41:47.816 A:middle
We have spent the last few years

00:41:47.816 --> 00:41:48.996 A:middle
adding additional data

00:41:48.996 --> 00:41:50.646 A:middle
protection categories so that

00:41:50.646 --> 00:41:52.186 A:middle
users are in control of which

00:41:52.186 --> 00:41:54.676 A:middle
apps can access important files

00:41:54.676 --> 00:41:57.246 A:middle
like your photos or sensitive

00:41:57.336 --> 00:41:59.246 A:middle
sensors like your camera and

00:41:59.246 --> 00:42:01.046 A:middle
microphone on your Mac.

00:41:59.246 --> 00:42:01.046 A:middle
microphone on your Mac.

00:42:01.596 --> 00:42:03.496 A:middle
In macOS Catalina, we're

00:42:03.496 --> 00:42:05.116 A:middle
continuing this work by ensuring

00:42:05.116 --> 00:42:06.736 A:middle
that apps seek permission before

00:42:06.736 --> 00:42:08.356 A:middle
capturing input events, so

00:42:08.356 --> 00:42:09.896 A:middle
things like key presses or

00:42:09.896 --> 00:42:10.786 A:middle
screen recordings.

00:42:14.046 --> 00:42:15.636 A:middle
And we're also going to protect

00:42:15.636 --> 00:42:17.266 A:middle
user data on your Mac, so apps

00:42:17.266 --> 00:42:18.546 A:middle
will now have to seek permission

00:42:18.786 --> 00:42:20.116 A:middle
before accessing the files that

00:42:20.116 --> 00:42:22.256 A:middle
users keep on their desktop,

00:42:22.256 --> 00:42:24.636 A:middle
downloads, documents, iCloud

00:42:24.636 --> 00:42:26.316 A:middle
drive and external drives.

00:42:27.056 --> 00:42:27.126 A:middle
Yeah.

00:42:28.516 --> 00:42:31.576 A:middle
[ Applause ]

00:42:32.076 --> 00:42:33.196 A:middle
We are really excited about all

00:42:33.196 --> 00:42:34.116 A:middle
the enhancements that we're

00:42:34.116 --> 00:42:35.476 A:middle
bringing in macOS Catalina.

00:42:36.296 --> 00:42:37.766 A:middle
Now another platform that's got

00:42:37.836 --> 00:42:39.046 A:middle
some really big changes this

00:42:39.076 --> 00:42:40.326 A:middle
year is watchOS.

00:42:40.886 --> 00:42:42.366 A:middle
And to tell you more, I'd like

00:42:42.366 --> 00:42:44.006 A:middle
to invite Lori up on stage.

00:42:44.056 --> 00:42:44.336 A:middle
Lori?

00:42:45.516 --> 00:42:47.666 A:middle
[ Applause ]

00:42:48.166 --> 00:42:48.786 A:middle
&gt;&gt; Thanks, Sebastien.

00:42:50.056 --> 00:42:52.056 A:middle
[ Applause ]

00:42:52.096 --> 00:42:53.126 A:middle
This morning we introduced a

00:42:53.186 --> 00:42:54.656 A:middle
bunch of cool new features in

00:42:54.656 --> 00:42:56.496 A:middle
watchOS 6, including new health

00:42:56.496 --> 00:42:57.976 A:middle
apps like noise and cycle

00:42:58.036 --> 00:42:59.436 A:middle
tracking, activity trends,

00:42:59.606 --> 00:43:00.606 A:middle
audiobooks and more.

00:42:59.606 --> 00:43:00.606 A:middle
audiobooks and more.

00:43:01.286 --> 00:43:03.236 A:middle
But the real story for watchOS 6

00:43:03.466 --> 00:43:04.956 A:middle
is that it's now possible to

00:43:04.956 --> 00:43:07.386 A:middle
declare independence from the

00:43:07.456 --> 00:43:08.766 A:middle
phone and build fully

00:43:08.766 --> 00:43:10.956 A:middle
watch-focused experiences.

00:43:11.516 --> 00:43:15.606 A:middle
[ Applause ]

00:43:16.106 --> 00:43:17.186 A:middle
Thanks to cellular connectivity,

00:43:17.186 --> 00:43:18.326 A:middle
customers are increasingly

00:43:18.326 --> 00:43:19.766 A:middle
leaving their phones behind and

00:43:19.766 --> 00:43:21.366 A:middle
enjoying the freedom using just

00:43:21.516 --> 00:43:22.516 A:middle
their Apple Watch to stay

00:43:22.516 --> 00:43:23.006 A:middle
connected.

00:43:23.566 --> 00:43:25.116 A:middle
From running errands to running

00:43:25.166 --> 00:43:26.596 A:middle
workouts, from listening to

00:43:26.596 --> 00:43:27.696 A:middle
music to chatting with friends,

00:43:28.146 --> 00:43:29.996 A:middle
we want all users to enjoy great

00:43:29.996 --> 00:43:31.566 A:middle
Apple Watch experiences without

00:43:31.566 --> 00:43:32.206 A:middle
limitations.

00:43:32.606 --> 00:43:34.206 A:middle
And independent watch apps make

00:43:34.296 --> 00:43:34.956 A:middle
that possible.

00:43:36.606 --> 00:43:38.106 A:middle
We've taken a good look at the

00:43:38.146 --> 00:43:39.326 A:middle
challenges of developing for

00:43:39.456 --> 00:43:41.016 A:middle
Apple Watch and worked hard not

00:43:41.116 --> 00:43:42.916 A:middle
only to bring you new APIs that

00:43:42.916 --> 00:43:44.066 A:middle
make it possible to support

00:43:44.066 --> 00:43:46.056 A:middle
independent experiences, but

00:43:46.056 --> 00:43:47.616 A:middle
also to completely revamp the

00:43:47.666 --> 00:43:48.896 A:middle
experience of being an Apple

00:43:48.896 --> 00:43:49.716 A:middle
Watch developer.

00:43:52.156 --> 00:43:53.866 A:middle
What if I told you it was

00:43:53.866 --> 00:43:55.786 A:middle
possible to create a watch app

00:43:56.026 --> 00:43:57.246 A:middle
that's only a watch app?

00:43:59.286 --> 00:44:00.316 A:middle
If you've got an idea for a

00:43:59.286 --> 00:44:00.316 A:middle
If you've got an idea for a

00:44:00.376 --> 00:44:01.926 A:middle
great watch-only experience,

00:44:02.066 --> 00:44:03.426 A:middle
Xcode now makes it simple to

00:44:03.426 --> 00:44:04.896 A:middle
create a watch app that's just a

00:44:04.896 --> 00:44:05.366 A:middle
watch app.

00:44:05.366 --> 00:44:07.306 A:middle
So you can pursue your idea

00:44:07.336 --> 00:44:08.626 A:middle
without also having to build an

00:44:08.776 --> 00:44:09.186 A:middle
iOS app.

00:44:11.506 --> 00:44:13.056 A:middle
And if you already have an iOS

00:44:13.176 --> 00:44:14.776 A:middle
app, you can still build your

00:44:14.776 --> 00:44:16.846 A:middle
app to be completely independent

00:44:16.846 --> 00:44:18.266 A:middle
of its companion thanks to a

00:44:18.266 --> 00:44:19.836 A:middle
couple key changes we made in

00:44:19.836 --> 00:44:21.506 A:middle
watchOS 6 to support watch-only

00:44:21.506 --> 00:44:24.196 A:middle
apps, including making Apple

00:44:24.196 --> 00:44:25.626 A:middle
Watch a standalone push target.

00:44:26.236 --> 00:44:27.306 A:middle
You now have the option of

00:44:27.356 --> 00:44:28.536 A:middle
sending notifications directly

00:44:28.656 --> 00:44:30.346 A:middle
to the watch so you can update

00:44:30.426 --> 00:44:31.866 A:middle
both your users and your apps

00:44:31.946 --> 00:44:33.256 A:middle
data without relying on the

00:44:33.346 --> 00:44:34.096 A:middle
phone to mediate.

00:44:35.516 --> 00:44:39.796 A:middle
[ Applause ]

00:44:40.296 --> 00:44:41.596 A:middle
We're also supporting Cloud Kit

00:44:41.636 --> 00:44:43.406 A:middle
subscriptions and complication

00:44:43.406 --> 00:44:44.766 A:middle
pushes to help you keep your app

00:44:44.766 --> 00:44:45.296 A:middle
up-to-date.

00:44:46.576 --> 00:44:48.056 A:middle
And since asking users to sign

00:44:48.056 --> 00:44:49.696 A:middle
in on iPhone is not an option

00:44:49.816 --> 00:44:50.716 A:middle
when you don't have an iPhone

00:44:50.906 --> 00:44:52.786 A:middle
app, in watchOS 6 we're giving

00:44:52.786 --> 00:44:54.386 A:middle
you text fields so you can offer

00:44:54.386 --> 00:44:55.746 A:middle
account creation and sign-in

00:44:55.746 --> 00:44:57.366 A:middle
options directly on Apple Watch.

00:45:01.046 --> 00:45:01.806 A:middle
If you want to make account

00:45:01.836 --> 00:45:03.376 A:middle
creation really easy, you can

00:45:03.376 --> 00:45:04.696 A:middle
even add an Assign with Apple

00:45:04.696 --> 00:45:05.986 A:middle
button to your app to let your

00:45:05.986 --> 00:45:07.776 A:middle
users set up an account and sign

00:45:07.776 --> 00:45:08.746 A:middle
in with the Apple ID they

00:45:08.786 --> 00:45:09.236 A:middle
already have.

00:45:09.976 --> 00:45:11.736 A:middle
No new passwords or text entry

00:45:11.736 --> 00:45:12.226 A:middle
required.

00:45:13.306 --> 00:45:14.536 A:middle
With watchOS 6 we're also

00:45:14.536 --> 00:45:15.826 A:middle
addressing a common watch-only

00:45:15.866 --> 00:45:17.596 A:middle
use case by bringing streaming

00:45:17.596 --> 00:45:18.826 A:middle
audio to watchOS.

00:45:19.966 --> 00:45:21.206 A:middle
We introduced background audio

00:45:21.256 --> 00:45:23.106 A:middle
playback in watchOS 5 for local

00:45:23.106 --> 00:45:23.246 A:middle
files.

00:45:24.226 --> 00:45:26.056 A:middle
And now in watchOS 6, we've

00:45:26.056 --> 00:45:27.536 A:middle
brought three ways to stream

00:45:27.536 --> 00:45:29.436 A:middle
audio directly to Apple Watch by

00:45:29.436 --> 00:45:30.636 A:middle
making Network,framework,

00:45:31.156 --> 00:45:33.496 A:middle
NSURLsessionStreamTask and even

00:45:33.496 --> 00:45:35.186 A:middle
more of AVFoundation available

00:45:35.186 --> 00:45:35.486 A:middle
to you.

00:45:36.836 --> 00:45:38.046 A:middle
We also recognize that there are

00:45:38.046 --> 00:45:39.616 A:middle
use cases beyond audio playback,

00:45:39.916 --> 00:45:41.906 A:middle
workouts and navigation where

00:45:41.906 --> 00:45:43.336 A:middle
you need to keep your app

00:45:43.516 --> 00:45:44.286 A:middle
running order to complete a

00:45:44.286 --> 00:45:44.436 A:middle
task.

00:45:45.046 --> 00:45:46.556 A:middle
For example, a meditation

00:45:46.556 --> 00:45:46.856 A:middle
session.

00:45:47.756 --> 00:45:49.406 A:middle
In watchOS 6, we're introducing

00:45:49.406 --> 00:45:51.406 A:middle
a new extended runtime API that

00:45:51.686 --> 00:45:53.416 A:middle
gives more apps a way to stay

00:45:53.416 --> 00:45:54.816 A:middle
running even after the user

00:45:54.816 --> 00:45:55.496 A:middle
lowers their wrist.

00:45:56.896 --> 00:45:58.546 A:middle
This enables new app experiences

00:45:58.546 --> 00:46:00.586 A:middle
in self-care, mindfulness,

00:45:58.546 --> 00:46:00.586 A:middle
in self-care, mindfulness,

00:46:01.076 --> 00:46:03.406 A:middle
physical therapy, smart alarms

00:46:03.976 --> 00:46:04.936 A:middle
and health monitoring.

00:46:05.866 --> 00:46:07.396 A:middle
That's a lot of new APIs and

00:46:07.446 --> 00:46:08.056 A:middle
capabilities.

00:46:08.626 --> 00:46:10.446 A:middle
If only you had more options for

00:46:10.506 --> 00:46:11.556 A:middle
creating a compelling user

00:46:11.556 --> 00:46:12.646 A:middle
interface, right?

00:46:13.946 --> 00:46:15.156 A:middle
We know you've been asking for a

00:46:15.156 --> 00:46:17.016 A:middle
more advanced UI framework on

00:46:17.016 --> 00:46:17.936 A:middle
the watch for years.

00:46:18.616 --> 00:46:20.546 A:middle
And in watchOS 6 we finally have

00:46:20.616 --> 00:46:21.626 A:middle
one with SwiftUI.

00:46:23.516 --> 00:46:27.546 A:middle
[ Applause ]

00:46:28.046 --> 00:46:29.286 A:middle
You've already seen SwiftUI on

00:46:29.626 --> 00:46:29.816 A:middle
iOS.

00:46:30.396 --> 00:46:31.876 A:middle
That same declarative language

00:46:31.876 --> 00:46:33.196 A:middle
for defining beautiful user

00:46:33.196 --> 00:46:34.666 A:middle
interfaces is available for

00:46:34.666 --> 00:46:36.506 A:middle
watchOS as well, expanding

00:46:36.506 --> 00:46:37.806 A:middle
what's possible on the platform.

00:46:38.926 --> 00:46:40.466 A:middle
From lists with swipe to delete,

00:46:40.866 --> 00:46:42.836 A:middle
reordering and carousel filing,

00:46:43.166 --> 00:46:44.826 A:middle
to direct access, the digital

00:46:44.826 --> 00:46:46.626 A:middle
crown, it's easier than ever to

00:46:46.676 --> 00:46:47.626 A:middle
create a compelling watch

00:46:47.626 --> 00:46:48.156 A:middle
experience.

00:46:50.086 --> 00:46:51.096 A:middle
Let me show you how to start

00:46:51.096 --> 00:46:52.876 A:middle
making use of some of the new

00:46:52.876 --> 00:46:54.446 A:middle
independent app features with

00:46:54.526 --> 00:46:54.916 A:middle
SwiftUI.

00:47:06.196 --> 00:47:07.826 A:middle
Okay, so I've got my travel app

00:47:07.826 --> 00:47:08.926 A:middle
running here in the Simulator

00:47:08.926 --> 00:47:09.776 A:middle
and I've already started

00:47:09.776 --> 00:47:11.686 A:middle
updating it using SwiftUI, so

00:47:11.686 --> 00:47:12.906 A:middle
it's starting to look great.

00:47:13.246 --> 00:47:14.446 A:middle
But I still have some work to do

00:47:14.446 --> 00:47:16.306 A:middle
beyond layout because my Sign In

00:47:16.306 --> 00:47:17.686 A:middle
button currently just asks users

00:47:17.716 --> 00:47:18.526 A:middle
to sign in on iPhone.

00:47:19.116 --> 00:47:20.256 A:middle
And my users have told me that

00:47:20.256 --> 00:47:21.116 A:middle
is not what they want.

00:47:21.116 --> 00:47:21.776 A:middle
They want to be able to do

00:47:21.776 --> 00:47:22.956 A:middle
everything right on their wrist.

00:47:23.896 --> 00:47:24.436 A:middle
So I'm going to quit the

00:47:24.476 --> 00:47:25.806 A:middle
simulator and go over to my

00:47:25.806 --> 00:47:26.576 A:middle
project file.

00:47:27.106 --> 00:47:28.406 A:middle
And I'll move to my travel watch

00:47:28.406 --> 00:47:30.436 A:middle
extension target and declare

00:47:30.436 --> 00:47:32.356 A:middle
independence from phone by

00:47:32.426 --> 00:47:33.556 A:middle
checking the Supports Running

00:47:33.646 --> 00:47:35.356 A:middle
Without iOS App Installation

00:47:35.356 --> 00:47:35.626 A:middle
box.

00:47:37.136 --> 00:47:38.406 A:middle
Next I'm going to go to the Sign

00:47:38.406 --> 00:47:39.176 A:middle
In view that I've already

00:47:39.176 --> 00:47:39.646 A:middle
started.

00:47:40.346 --> 00:47:41.406 A:middle
I'll resume my previews.

00:47:42.516 --> 00:47:43.786 A:middle
Great. And you can see I have a

00:47:43.846 --> 00:47:44.856 A:middle
Sign In button here and two

00:47:44.916 --> 00:47:45.556 A:middle
previews.

00:47:45.716 --> 00:47:47.266 A:middle
The top one is for English which

00:47:47.266 --> 00:47:48.806 A:middle
is the language that I speak and

00:47:48.806 --> 00:47:50.006 A:middle
the bottom one I'm starting to

00:47:50.006 --> 00:47:51.466 A:middle
experiment with localizing my

00:47:51.466 --> 00:47:52.666 A:middle
app into Arabic which is a

00:47:52.666 --> 00:47:53.566 A:middle
right-to-left language.

00:47:54.736 --> 00:47:55.736 A:middle
So the first thing I'm going to

00:47:55.736 --> 00:47:56.916 A:middle
do is add a field for my

00:47:56.916 --> 00:47:57.616 A:middle
Username button.

00:47:58.036 --> 00:48:00.936 A:middle
And I'm going to bind this to my

00:47:58.036 --> 00:48:00.936 A:middle
And I'm going to bind this to my

00:48:00.976 --> 00:48:01.126 A:middle
-- oops.

00:48:03.216 --> 00:48:04.726 A:middle
To my username state so that the

00:48:04.726 --> 00:48:06.146 A:middle
field updates as the value

00:48:06.146 --> 00:48:06.606 A:middle
changes.

00:48:07.436 --> 00:48:08.756 A:middle
Notice I've set the placeholder

00:48:08.756 --> 00:48:10.086 A:middle
text to username so I give the

00:48:10.086 --> 00:48:11.406 A:middle
user a chance to figure out what

00:48:11.476 --> 00:48:12.226 A:middle
to do with this field.

00:48:12.596 --> 00:48:13.916 A:middle
And I've also set the content

00:48:13.966 --> 00:48:15.506 A:middle
type to username so that

00:48:15.616 --> 00:48:17.016 A:middle
password and username autofill

00:48:17.216 --> 00:48:19.356 A:middle
works when using continuity

00:48:19.356 --> 00:48:19.656 A:middle
keyboard.

00:48:20.796 --> 00:48:21.906 A:middle
Next I'm going to add a password

00:48:21.966 --> 00:48:23.206 A:middle
field, and for this I want to

00:48:23.206 --> 00:48:24.566 A:middle
use a secure field so that

00:48:24.676 --> 00:48:27.166 A:middle
people can't spy on me when I'm

00:48:27.166 --> 00:48:27.916 A:middle
typing my password.

00:48:28.016 --> 00:48:28.916 A:middle
And again, I'm going to bind

00:48:28.916 --> 00:48:30.676 A:middle
this to my password state.

00:48:31.756 --> 00:48:34.286 A:middle
I've got a password placeholder

00:48:34.286 --> 00:48:35.646 A:middle
text and again I'm using the

00:48:35.706 --> 00:48:37.346 A:middle
content type of Password for

00:48:37.346 --> 00:48:37.966 A:middle
autofill purposes.

00:48:37.966 --> 00:48:39.826 A:middle
So that looks great in both

00:48:39.826 --> 00:48:40.676 A:middle
English and Arabic.

00:48:40.676 --> 00:48:41.806 A:middle
And for Arabic it's pulling the

00:48:41.806 --> 00:48:42.726 A:middle
strings right out of my

00:48:42.726 --> 00:48:43.886 A:middle
localizable strings file.

00:48:43.946 --> 00:48:45.256 A:middle
This is not placeholder content.

00:48:46.626 --> 00:48:48.676 A:middle
Okay. Above this, what I want to

00:48:48.676 --> 00:48:50.526 A:middle
do is add a Sign In With Apple

00:48:50.526 --> 00:48:51.486 A:middle
button because I think that's

00:48:51.486 --> 00:48:52.376 A:middle
how users are really going to

00:48:52.376 --> 00:48:53.036 A:middle
want to sign in.

00:48:54.716 --> 00:48:55.636 A:middle
So now I put that right at the

00:48:55.696 --> 00:48:57.356 A:middle
top and then add a separator so

00:48:57.356 --> 00:48:58.706 A:middle
it's clear that users have an

00:48:58.706 --> 00:48:59.606 A:middle
option of signing in with their

00:48:59.606 --> 00:49:01.926 A:middle
Apple ID or creating a customer

00:48:59.606 --> 00:49:01.926 A:middle
Apple ID or creating a customer

00:49:01.926 --> 00:49:03.066 A:middle
username and password for my

00:49:03.066 --> 00:49:03.196 A:middle
app.

00:49:03.716 --> 00:49:04.226 A:middle
That looks great.

00:49:05.286 --> 00:49:06.396 A:middle
So the last step is to go over

00:49:06.396 --> 00:49:08.826 A:middle
to my hosting controller and

00:49:08.826 --> 00:49:10.476 A:middle
change my destination for my

00:49:10.546 --> 00:49:13.466 A:middle
presentation button to the Sign

00:49:13.466 --> 00:49:14.526 A:middle
In view that I just created

00:49:14.526 --> 00:49:16.006 A:middle
instead of the Sign In on iPhone

00:49:16.006 --> 00:49:16.136 A:middle
view.

00:49:16.136 --> 00:49:19.236 A:middle
So I got that going and now I

00:49:19.236 --> 00:49:20.996 A:middle
want to turn on Live Preview, so

00:49:20.996 --> 00:49:21.696 A:middle
all my buttons become

00:49:21.696 --> 00:49:22.006 A:middle
interactive.

00:49:22.076 --> 00:49:24.726 A:middle
And then when I click on my Sign

00:49:24.726 --> 00:49:26.026 A:middle
In button, I get my form.

00:49:26.796 --> 00:49:28.426 A:middle
Sign In With Apple, or sign in

00:49:28.426 --> 00:49:29.416 A:middle
with a username and password.

00:49:29.626 --> 00:49:30.606 A:middle
That looks great.

00:49:31.126 --> 00:49:32.576 A:middle
And that is creating a sign-in

00:49:32.646 --> 00:49:33.766 A:middle
form on the Apple Watch with

00:49:33.766 --> 00:49:33.976 A:middle
SwiftUI.

00:49:34.516 --> 00:49:41.546 A:middle
[ Applause ]

00:49:42.046 --> 00:49:43.906 A:middle
Okay. So you've got the tools to

00:49:43.906 --> 00:49:45.156 A:middle
build a great independent Apple

00:49:45.156 --> 00:49:46.076 A:middle
Watch experience.

00:49:46.666 --> 00:49:47.526 A:middle
How are you going to get your

00:49:47.526 --> 00:49:50.146 A:middle
app in front of customers with

00:49:51.006 --> 00:49:52.606 A:middle
the least friction possible?

00:49:54.286 --> 00:49:55.246 A:middle
The App Store and Apple Watch

00:49:55.386 --> 00:49:56.516 A:middle
will be highlighting great

00:49:56.516 --> 00:49:58.026 A:middle
independent apps through curated

00:49:58.026 --> 00:49:59.256 A:middle
collections and editorial

00:49:59.306 --> 00:50:00.886 A:middle
selections at the top level of

00:49:59.306 --> 00:50:00.886 A:middle
selections at the top level of

00:50:00.886 --> 00:50:01.456 A:middle
the App Store.

00:50:02.196 --> 00:50:03.696 A:middle
We're emphasizing independent

00:50:03.696 --> 00:50:05.166 A:middle
apps here so users can get the

00:50:05.166 --> 00:50:06.706 A:middle
instant gratification of being

00:50:06.706 --> 00:50:08.176 A:middle
able to download and start using

00:50:08.296 --> 00:50:10.376 A:middle
your awesome apps right away,

00:50:10.596 --> 00:50:11.636 A:middle
whether they have the phone with

00:50:11.636 --> 00:50:12.926 A:middle
them or not.

00:50:15.046 --> 00:50:15.826 A:middle
And when you dive into

00:50:15.826 --> 00:50:17.016 A:middle
individual product pages, you'll

00:50:17.086 --> 00:50:18.336 A:middle
see that this isn't just a pared

00:50:18.336 --> 00:50:19.086 A:middle
down experience.

00:50:19.496 --> 00:50:21.046 A:middle
Users will see full featured app

00:50:21.226 --> 00:50:22.366 A:middle
descriptions, screenshots,

00:50:22.546 --> 00:50:23.546 A:middle
reviews and more.

00:50:25.306 --> 00:50:26.636 A:middle
They can search for apps with

00:50:26.636 --> 00:50:27.656 A:middle
dictation or scribble.

00:50:28.956 --> 00:50:30.336 A:middle
And they'll be able to download

00:50:30.536 --> 00:50:32.306 A:middle
your apps directly to their

00:50:32.306 --> 00:50:34.356 A:middle
wrists, thanks to app and asset

00:50:34.356 --> 00:50:35.936 A:middle
thinning which make it possible

00:50:35.936 --> 00:50:37.516 A:middle
to deliver a small bundle with

00:50:37.516 --> 00:50:39.566 A:middle
only the architecture and assets

00:50:39.566 --> 00:50:40.836 A:middle
that makes sense for the current

00:50:40.836 --> 00:50:41.276 A:middle
watch.

00:50:42.186 --> 00:50:43.776 A:middle
If you have both an iOS and a

00:50:43.776 --> 00:50:45.266 A:middle
watchOS app, this will make your

00:50:45.406 --> 00:50:47.556 A:middle
iOS app smaller too, as we're no

00:50:47.556 --> 00:50:48.666 A:middle
longer downloading the watch

00:50:48.756 --> 00:50:50.226 A:middle
bundle to the phone and then

00:50:50.226 --> 00:50:50.956 A:middle
shuttling it over.

00:50:52.316 --> 00:50:53.846 A:middle
This is truly a whole new era

00:50:53.996 --> 00:50:55.526 A:middle
for Apple Watch apps to be more

00:50:55.596 --> 00:50:57.476 A:middle
functional, more beautiful and

00:50:57.476 --> 00:50:58.686 A:middle
more independent than ever.

00:50:59.186 --> 00:51:00.426 A:middle
We think both you and your

00:50:59.186 --> 00:51:00.426 A:middle
We think both you and your

00:51:00.506 --> 00:51:01.646 A:middle
customers are going to love

00:51:01.706 --> 00:51:01.806 A:middle
this.

00:51:03.226 --> 00:51:04.386 A:middle
And now to talk about the

00:51:04.386 --> 00:51:05.546 A:middle
platform that we just declared

00:51:05.546 --> 00:51:07.216 A:middle
independence from, I'd like to

00:51:07.216 --> 00:51:08.276 A:middle
welcome Cindy to the stage.

00:51:09.516 --> 00:51:15.556 A:middle
[ Applause ]

00:51:16.056 --> 00:51:16.866 A:middle
&gt;&gt; Thank you, Lori.

00:51:17.086 --> 00:51:20.236 A:middle
iOS 13 is a big release.

00:51:21.476 --> 00:51:22.636 A:middle
You saw this morning that we

00:51:22.636 --> 00:51:24.186 A:middle
have a ton of new features and

00:51:24.486 --> 00:51:26.946 A:middle
enhancements like a redesigned

00:51:26.946 --> 00:51:28.506 A:middle
share sheet, a Quick Type

00:51:28.646 --> 00:51:30.606 A:middle
keyboard and a brand-new CarPlay

00:51:30.606 --> 00:51:31.066 A:middle
experience.

00:51:32.426 --> 00:51:34.156 A:middle
In addition to all of that, we

00:51:34.156 --> 00:51:35.586 A:middle
took a good long look at our UI

00:51:36.216 --> 00:51:38.696 A:middle
and gave iOS 13 a brand new

00:51:38.696 --> 00:51:38.796 A:middle
look.

00:51:39.956 --> 00:51:41.346 A:middle
This new look includes Dark

00:51:41.426 --> 00:51:44.196 A:middle
Mode, cards, contextual actions

00:51:44.196 --> 00:51:44.856 A:middle
and symbols.

00:51:46.056 --> 00:51:47.466 A:middle
Let's dive into the incredibly

00:51:47.576 --> 00:51:48.686 A:middle
cool new Dark Mode.

00:51:50.456 --> 00:51:51.596 A:middle
Dark mode keeps the brightness

00:51:51.676 --> 00:51:53.436 A:middle
down and gets Chrome out of the

00:51:53.436 --> 00:51:55.146 A:middle
way so you can focus on just

00:51:55.426 --> 00:51:55.956 A:middle
content.

00:51:56.786 --> 00:51:58.276 A:middle
The entire system has been

00:51:58.276 --> 00:51:59.726 A:middle
really thoughtfully updated and

00:51:59.726 --> 00:52:00.856 A:middle
refined to look amazing.

00:51:59.726 --> 00:52:00.856 A:middle
refined to look amazing.

00:52:00.856 --> 00:52:03.336 A:middle
Your users are definitely going

00:52:03.336 --> 00:52:03.876 A:middle
to want this.

00:52:04.406 --> 00:52:05.906 A:middle
And to help you bring these same

00:52:05.906 --> 00:52:08.106 A:middle
refinements to your apps, we've

00:52:08.106 --> 00:52:10.206 A:middle
created some new APIs designed

00:52:10.286 --> 00:52:11.706 A:middle
specifically with Dark Mode in

00:52:11.706 --> 00:52:11.976 A:middle
mind.

00:52:13.326 --> 00:52:15.266 A:middle
But first it's semantic colors.

00:52:16.626 --> 00:52:17.646 A:middle
There are new colors for

00:52:17.646 --> 00:52:19.586 A:middle
backgrounds, fills and text.

00:52:20.426 --> 00:52:21.686 A:middle
And in Dark Mode, they have

00:52:21.686 --> 00:52:23.686 A:middle
multiple variants to give your

00:52:23.686 --> 00:52:25.126 A:middle
app a visual hierarchy.

00:52:25.916 --> 00:52:26.806 A:middle
Now what does that mean?

00:52:27.626 --> 00:52:28.686 A:middle
Well, when your app is

00:52:28.796 --> 00:52:30.376 A:middle
full-screen, its background is

00:52:30.546 --> 00:52:30.966 A:middle
pure black.

00:52:31.896 --> 00:52:33.346 A:middle
To ensure sufficient contrast,

00:52:34.016 --> 00:52:36.066 A:middle
UI presented above it takes on a

00:52:36.156 --> 00:52:37.166 A:middle
brighter color palette.

00:52:38.136 --> 00:52:40.126 A:middle
When multitasking on iPad, the

00:52:40.216 --> 00:52:42.146 A:middle
slide-over app and side-by-side

00:52:42.356 --> 00:52:43.626 A:middle
apps also render in these

00:52:43.626 --> 00:52:44.976 A:middle
lighter layer colors.

00:52:46.286 --> 00:52:47.686 A:middle
There is a lot of nuance to this

00:52:47.786 --> 00:52:49.276 A:middle
design, but you'll get it

00:52:49.356 --> 00:52:50.556 A:middle
automatically with semantic

00:52:50.556 --> 00:52:50.786 A:middle
colors.

00:52:52.686 --> 00:52:54.156 A:middle
And for when you need a pop,

00:52:54.156 --> 00:52:55.086 A:middle
there's a bright palette of

00:52:55.236 --> 00:52:56.776 A:middle
system colors that all have

00:52:56.776 --> 00:52:58.106 A:middle
variants for the increased

00:52:58.106 --> 00:53:00.076 A:middle
contrast accessibility mode as

00:52:58.106 --> 00:53:00.076 A:middle
contrast accessibility mode as

00:53:00.076 --> 00:53:01.706 A:middle
well variants for Dark Mode.

00:53:05.046 --> 00:53:07.326 A:middle
There's also a brand-new set of

00:53:07.326 --> 00:53:09.276 A:middle
materials and vibrant content

00:53:09.366 --> 00:53:10.946 A:middle
filters with varying levels of

00:53:10.946 --> 00:53:12.936 A:middle
transparency so you can create

00:53:12.936 --> 00:53:14.576 A:middle
UI that looks great over any

00:53:14.636 --> 00:53:14.866 A:middle
content.

00:53:15.596 --> 00:53:17.116 A:middle
And just like semantic colors,

00:53:17.586 --> 00:53:19.116 A:middle
these materials support both

00:53:19.246 --> 00:53:20.936 A:middle
light and dark variants.

00:53:21.886 --> 00:53:23.246 A:middle
And they will automatically

00:53:23.426 --> 00:53:24.996 A:middle
update based on changes to the

00:53:25.046 --> 00:53:26.336 A:middle
UI Kit trait collection.

00:53:27.676 --> 00:53:29.126 A:middle
Adopting semantic colors and

00:53:29.126 --> 00:53:30.696 A:middle
adaptive materials will help you

00:53:30.696 --> 00:53:32.496 A:middle
provide a unified look that

00:53:32.496 --> 00:53:33.986 A:middle
automatically adapts to your

00:53:33.986 --> 00:53:34.416 A:middle
environment.

00:53:36.826 --> 00:53:38.736 A:middle
Another component of iOS 13's

00:53:38.736 --> 00:53:39.836 A:middle
new look is cards.

00:53:41.496 --> 00:53:43.196 A:middle
Since the original SDK, the

00:53:43.196 --> 00:53:45.286 A:middle
default presentation style on

00:53:45.286 --> 00:53:46.346 A:middle
iPhone has covered the full

00:53:46.426 --> 00:53:46.846 A:middle
screen.

00:53:47.696 --> 00:53:49.286 A:middle
We're changing that default to a

00:53:49.286 --> 00:53:50.526 A:middle
much more fluid card

00:53:50.576 --> 00:53:51.286 A:middle
presentation.

00:53:52.326 --> 00:53:54.086 A:middle
Cards provide a visual stack so

00:53:54.086 --> 00:53:55.416 A:middle
you can see at a glance that

00:53:55.416 --> 00:53:56.606 A:middle
you're in a presentation.

00:53:56.926 --> 00:53:58.006 A:middle
And even better, they're

00:53:58.006 --> 00:53:59.416 A:middle
dismissible with just a single

00:53:59.416 --> 00:53:59.956 A:middle
downward swipe.

00:54:03.196 --> 00:54:05.196 A:middle
[ Applause ]

00:54:05.376 --> 00:54:08.386 A:middle
Yeah. Swiping.

00:54:08.656 --> 00:54:10.276 A:middle
We've also updated the Peek and

00:54:10.276 --> 00:54:11.256 A:middle
Pop experience.

00:54:12.106 --> 00:54:14.196 A:middle
It's now quicker and easier to

00:54:14.196 --> 00:54:15.726 A:middle
access contextual actions

00:54:15.816 --> 00:54:16.666 A:middle
throughout the system.

00:54:17.306 --> 00:54:18.136 A:middle
And they're backed by a

00:54:18.196 --> 00:54:20.126 A:middle
brand-new API designed to work

00:54:20.126 --> 00:54:21.276 A:middle
across all devices.

00:54:21.616 --> 00:54:22.636 A:middle
So not only are they better than

00:54:22.636 --> 00:54:24.616 A:middle
ever on iPhone, but they look

00:54:24.666 --> 00:54:25.816 A:middle
great on iPad as well.

00:54:26.836 --> 00:54:28.036 A:middle
And when you bring your iPad app

00:54:28.456 --> 00:54:29.806 A:middle
to macOS, they'll look great

00:54:29.806 --> 00:54:29.976 A:middle
there to.

00:54:33.516 --> 00:54:36.506 A:middle
[ Applause ]

00:54:37.006 --> 00:54:38.146 A:middle
Yeah. While we were going

00:54:38.146 --> 00:54:39.316 A:middle
through the system, making all

00:54:39.316 --> 00:54:41.276 A:middle
those thoughtful refinements, we

00:54:41.276 --> 00:54:42.496 A:middle
started thinking about symbols.

00:54:44.556 --> 00:54:45.756 A:middle
Most apps use symbols.

00:54:46.276 --> 00:54:47.556 A:middle
They are a really useful way to

00:54:47.556 --> 00:54:48.626 A:middle
convey information.

00:54:48.626 --> 00:54:50.966 A:middle
And symbols are very often used

00:54:50.966 --> 00:54:51.286 A:middle
with text.

00:54:51.536 --> 00:54:53.176 A:middle
But text has some great

00:54:53.256 --> 00:54:54.856 A:middle
properties that in iOS 12 our

00:54:54.976 --> 00:54:55.846 A:middle
symbols just didn't have.

00:54:57.566 --> 00:54:59.536 A:middle
So as you can see here, the text

00:54:59.796 --> 00:55:01.566 A:middle
is scaling nicely as the dynamic

00:54:59.796 --> 00:55:01.566 A:middle
is scaling nicely as the dynamic

00:55:01.566 --> 00:55:03.316 A:middle
type size increases, but the

00:55:03.316 --> 00:55:04.436 A:middle
symbols stayed the same.

00:55:05.276 --> 00:55:06.666 A:middle
Ideally, we'd want the symbols

00:55:06.716 --> 00:55:07.996 A:middle
to scale along with the text.

00:55:09.906 --> 00:55:11.246 A:middle
So we created SF Symbols.

00:55:12.766 --> 00:55:13.916 A:middle
SF Symbols have all the

00:55:13.916 --> 00:55:15.646 A:middle
expressiveness and behavior of a

00:55:15.796 --> 00:55:17.786 A:middle
font but packaged up as a UI

00:55:17.996 --> 00:55:19.136 A:middle
image so they're really easy to

00:55:19.136 --> 00:55:19.896 A:middle
use in your apps.

00:55:20.616 --> 00:55:23.326 A:middle
iOS 13 includes an absolutely

00:55:23.596 --> 00:55:25.966 A:middle
massive catalog of over 1,500 SF

00:55:26.086 --> 00:55:27.076 A:middle
Symbols for you to use.

00:55:27.076 --> 00:55:29.136 A:middle
And they're easily searchable

00:55:29.266 --> 00:55:31.796 A:middle
right within Xcode and using

00:55:31.796 --> 00:55:33.396 A:middle
standalone SF Symbols app on

00:55:33.396 --> 00:55:33.636 A:middle
your Mac.

00:55:35.516 --> 00:55:43.106 A:middle
[ Applause ]

00:55:43.606 --> 00:55:45.316 A:middle
Symbols. [Laughs] So now you can

00:55:45.316 --> 00:55:47.206 A:middle
see the symbols scale along with

00:55:47.316 --> 00:55:49.576 A:middle
the text for better legibility

00:55:49.576 --> 00:55:51.246 A:middle
and a more consistent layout at

00:55:51.246 --> 00:55:51.906 A:middle
larger sizes.

00:55:51.906 --> 00:55:54.696 A:middle
And because they behave just

00:55:54.696 --> 00:55:56.286 A:middle
like a font, they're available

00:55:56.286 --> 00:55:57.656 A:middle
in all of these weights as well.

00:56:00.516 --> 00:56:03.586 A:middle
[ Applause ]

00:56:04.086 --> 00:56:05.206 A:middle
All of this just scratches the

00:56:05.286 --> 00:56:06.486 A:middle
surface of what's available in

00:56:06.666 --> 00:56:07.476 A:middle
iOS 13.

00:56:08.026 --> 00:56:09.786 A:middle
There's a new share sheet API to

00:56:09.786 --> 00:56:11.116 A:middle
let apps have recipient

00:56:11.236 --> 00:56:11.556 A:middle
suggestions.

00:56:11.996 --> 00:56:13.596 A:middle
A new compositional layout API

00:56:13.896 --> 00:56:15.066 A:middle
to make collection views easier

00:56:15.066 --> 00:56:15.906 A:middle
to work with than ever.

00:56:15.906 --> 00:56:17.976 A:middle
And a screenshot enhancement so

00:56:18.136 --> 00:56:19.946 A:middle
apps can provide full page views

00:56:19.946 --> 00:56:20.846 A:middle
of long content.

00:56:21.086 --> 00:56:22.046 A:middle
And so much more.

00:56:24.686 --> 00:56:26.916 A:middle
And in addition to all of that,

00:56:27.556 --> 00:56:28.866 A:middle
we really wanted to bring iOS

00:56:29.016 --> 00:56:29.746 A:middle
forward this year.

00:56:31.486 --> 00:56:32.716 A:middle
So we gave it its own operating

00:56:32.796 --> 00:56:34.336 A:middle
system complete with major

00:56:34.336 --> 00:56:36.296 A:middle
enhancements to multitasking, a

00:56:36.296 --> 00:56:38.086 A:middle
new PencilKit framework and a

00:56:38.086 --> 00:56:39.876 A:middle
whole suite of productivity

00:56:39.876 --> 00:56:40.336 A:middle
gestures.

00:56:42.416 --> 00:56:43.926 A:middle
Let's start with multitasking.

00:56:45.176 --> 00:56:47.586 A:middle
At iPadOS, your app can be open

00:56:47.586 --> 00:56:49.346 A:middle
in multiple spaces at the same

00:56:49.346 --> 00:56:50.946 A:middle
time, as well as in the

00:56:51.006 --> 00:56:52.786 A:middle
slide-over stack, and display

00:56:52.786 --> 00:56:54.516 A:middle
different content in each space.

00:56:56.466 --> 00:56:57.726 A:middle
To enable this, we're

00:56:57.726 --> 00:56:59.226 A:middle
introducing a new UI window

00:56:59.226 --> 00:57:00.066 A:middle
scene API.

00:56:59.226 --> 00:57:00.066 A:middle
scene API.

00:57:01.286 --> 00:57:02.796 A:middle
Each window scene represents a

00:57:02.896 --> 00:57:04.416 A:middle
single instance of your app's

00:57:04.416 --> 00:57:04.536 A:middle
UI.

00:57:06.266 --> 00:57:08.016 A:middle
Prior to iPadOS, your app

00:57:08.236 --> 00:57:09.656 A:middle
delegate was responsible for

00:57:09.656 --> 00:57:11.356 A:middle
both its process and UI

00:57:11.586 --> 00:57:12.236 A:middle
lifecycle.

00:57:13.246 --> 00:57:14.136 A:middle
With window scene, we're

00:57:14.136 --> 00:57:15.856 A:middle
splitting out the UI portion of

00:57:15.856 --> 00:57:17.706 A:middle
that into a new scene delegate

00:57:17.826 --> 00:57:19.416 A:middle
object so it can be managed

00:57:19.506 --> 00:57:20.316 A:middle
independently.

00:57:21.236 --> 00:57:22.516 A:middle
And since they're completely

00:57:22.516 --> 00:57:23.796 A:middle
independent, your app can now

00:57:23.796 --> 00:57:25.506 A:middle
manage multiple at the same

00:57:26.416 --> 00:57:26.526 A:middle
time.

00:57:27.056 --> 00:57:30.276 A:middle
Your users can even use drag and

00:57:30.276 --> 00:57:32.156 A:middle
drop to allow individual items

00:57:32.156 --> 00:57:33.726 A:middle
from your apps such as a single

00:57:33.726 --> 00:57:35.466 A:middle
window or message to be opened

00:57:35.466 --> 00:57:36.816 A:middle
in a brand-new window scene.

00:57:38.966 --> 00:57:40.866 A:middle
With this new capability, it's

00:57:40.866 --> 00:57:42.506 A:middle
really important that your users

00:57:42.656 --> 00:57:43.806 A:middle
can resume whatever they were

00:57:43.806 --> 00:57:46.066 A:middle
doing in any scene at any time.

00:57:46.926 --> 00:57:48.226 A:middle
To make this easy, we've built a

00:57:48.226 --> 00:57:49.836 A:middle
new state restoration system

00:57:49.946 --> 00:57:51.566 A:middle
based on NSUserActivity.

00:57:52.786 --> 00:57:54.116 A:middle
You're probably already familiar

00:57:54.116 --> 00:57:55.386 A:middle
with this versatile API.

00:57:55.936 --> 00:57:57.766 A:middle
It's used for handoff, search,

00:57:57.906 --> 00:58:00.636 A:middle
indexing, Siri, and now for

00:57:57.906 --> 00:58:00.636 A:middle
indexing, Siri, and now for

00:58:00.636 --> 00:58:02.386 A:middle
window scene state restoration.

00:58:06.326 --> 00:58:07.456 A:middle
One of the things that really

00:58:07.456 --> 00:58:09.886 A:middle
sets -- you can clap, it's fine.

00:58:10.516 --> 00:58:15.546 A:middle
[ Applause ]

00:58:16.046 --> 00:58:16.746 A:middle
One of the things that really

00:58:16.746 --> 00:58:18.286 A:middle
sets iPads apart is Apple

00:58:18.356 --> 00:58:18.806 A:middle
Pencil.

00:58:20.136 --> 00:58:21.336 A:middle
We're introducing PencilKit

00:58:21.486 --> 00:58:22.686 A:middle
which allows you to easily add

00:58:23.076 --> 00:58:24.866 A:middle
smooth low-latency drawing to

00:58:24.926 --> 00:58:25.706 A:middle
your apps.

00:58:26.696 --> 00:58:28.436 A:middle
This is the same engine used in

00:58:28.436 --> 00:58:30.696 A:middle
Apple apps like Notes, Markup

00:58:30.696 --> 00:58:31.476 A:middle
and Screenshots.

00:58:31.476 --> 00:58:33.106 A:middle
So you get all of those same

00:58:33.146 --> 00:58:34.566 A:middle
features and tools right in your

00:58:36.116 --> 00:58:36.226 A:middle
apps.

00:58:36.616 --> 00:58:38.276 A:middle
You can even use the canvas and

00:58:38.276 --> 00:58:39.996 A:middle
palette functionality separately

00:58:40.316 --> 00:58:41.476 A:middle
and just pick and choose which

00:58:41.516 --> 00:58:43.146 A:middle
pieces make sense for your use

00:58:44.226 --> 00:58:44.326 A:middle
case.

00:58:45.076 --> 00:58:47.046 A:middle
Finally, let's talk about

00:58:47.046 --> 00:58:48.396 A:middle
productivity gestures.

00:58:50.266 --> 00:58:51.596 A:middle
We've made text selection much

00:58:51.596 --> 00:58:52.026 A:middle
easier.

00:58:52.506 --> 00:58:53.596 A:middle
You can now just drag your

00:58:53.656 --> 00:58:55.336 A:middle
finger along text to select it.

00:58:56.286 --> 00:58:57.716 A:middle
Text views and web views are

00:58:57.766 --> 00:58:59.406 A:middle
automatically updated with this

00:58:59.406 --> 00:59:00.976 A:middle
new selection gesture.

00:58:59.406 --> 00:59:00.976 A:middle
new selection gesture.

00:59:03.006 --> 00:59:04.356 A:middle
And there are new three-finger

00:59:04.486 --> 00:59:05.646 A:middle
gestures for undo and redo.

00:59:07.056 --> 00:59:08.226 A:middle
Swipe three fingers left for

00:59:08.356 --> 00:59:09.666 A:middle
undo and right for redo.

00:59:10.436 --> 00:59:11.866 A:middle
These new gestures use the

00:59:11.956 --> 00:59:13.546 A:middle
existing NSUndoManager so you

00:59:13.546 --> 00:59:14.766 A:middle
don't have to do anything at all

00:59:14.766 --> 00:59:14.976 A:middle
to adopt.

00:59:19.046 --> 00:59:20.046 A:middle
If you'd like easy text

00:59:20.156 --> 00:59:21.796 A:middle
selection outside of text or web

00:59:21.796 --> 00:59:23.796 A:middle
views, or if your app already

00:59:23.796 --> 00:59:25.226 A:middle
uses three-finger gestures and

00:59:25.226 --> 00:59:26.906 A:middle
you have a conflict, you can use

00:59:26.906 --> 00:59:29.016 A:middle
the UITexInteraction API to fix

00:59:29.066 --> 00:59:29.756 A:middle
up those issues.

00:59:32.276 --> 00:59:33.466 A:middle
And for scroll views, you can

00:59:33.466 --> 00:59:35.156 A:middle
now drag the scroll indicator to

00:59:35.156 --> 00:59:36.916 A:middle
jump directly to a location in

00:59:36.916 --> 00:59:37.526 A:middle
the scroll view.

00:59:38.736 --> 00:59:40.006 A:middle
To enable this behavior, just

00:59:40.046 --> 00:59:41.796 A:middle
turn on Show Scroll Indicators.

00:59:42.396 --> 00:59:43.476 A:middle
For this one it's really

00:59:43.476 --> 00:59:44.676 A:middle
important that your scrolling is

00:59:44.766 --> 00:59:46.196 A:middle
performant as we might have to

00:59:46.196 --> 00:59:48.076 A:middle
load all of the cells in a frame

00:59:48.076 --> 00:59:50.186 A:middle
at the same time.

00:59:50.956 --> 00:59:52.246 A:middle
We think our users are going to

00:59:52.246 --> 00:59:53.796 A:middle
love the powerful new things

00:59:53.796 --> 00:59:56.236 A:middle
iPadOS gives them, and we cannot

00:59:56.236 --> 00:59:57.566 A:middle
wait to see what you do with it.

00:59:58.536 --> 00:59:59.756 A:middle
So I'd like to welcome Sebastien

00:59:59.756 --> 01:00:00.576 A:middle
back to the stage.

00:59:59.756 --> 01:00:00.576 A:middle
back to the stage.

01:00:01.516 --> 01:00:06.666 A:middle
[ Applause ]

01:00:07.166 --> 01:00:07.966 A:middle
&gt;&gt; Thank you, Cindy.

01:00:08.676 --> 01:00:10.146 A:middle
Now as you've seen, each of our

01:00:10.146 --> 01:00:11.546 A:middle
platforms has incredible new

01:00:11.616 --> 01:00:13.036 A:middle
features that refine the

01:00:13.036 --> 01:00:14.866 A:middle
experience that each offers and

01:00:14.866 --> 01:00:15.696 A:middle
gives them great new

01:00:15.696 --> 01:00:16.436 A:middle
capabilities.

01:00:16.816 --> 01:00:18.336 A:middle
And across all of our platforms

01:00:18.686 --> 01:00:20.226 A:middle
we build a range of technologies

01:00:20.226 --> 01:00:21.186 A:middle
that are designed to give your

01:00:21.186 --> 01:00:23.746 A:middle
apps a huge head start so that

01:00:23.746 --> 01:00:24.846 A:middle
you can build the latest

01:00:24.846 --> 01:00:26.956 A:middle
technologies right into your

01:00:26.956 --> 01:00:27.206 A:middle
app.

01:00:28.156 --> 01:00:28.936 A:middle
There are a few of these that

01:00:28.936 --> 01:00:29.946 A:middle
we'd like to focus on this

01:00:29.986 --> 01:00:31.426 A:middle
afternoon and they cover a

01:00:31.426 --> 01:00:32.206 A:middle
pretty wide range of

01:00:32.246 --> 01:00:34.096 A:middle
capabilities from how we open

01:00:34.096 --> 01:00:36.216 A:middle
our platforms and apps to all

01:00:36.216 --> 01:00:37.936 A:middle
users to how we combine the

01:00:37.936 --> 01:00:39.386 A:middle
virtual and real-world with

01:00:39.386 --> 01:00:40.296 A:middle
augmented reality.

01:00:40.876 --> 01:00:41.596 A:middle
And so we start with

01:00:41.596 --> 01:00:43.026 A:middle
accessibility, and to do that

01:00:43.026 --> 01:00:44.456 A:middle
I'd like to welcome Eric Seymour

01:00:44.676 --> 01:00:45.156 A:middle
on stage.

01:00:45.156 --> 01:00:45.586 A:middle
Eric?

01:00:46.516 --> 01:00:48.596 A:middle
[ Applause ]

01:00:49.096 --> 01:00:49.826 A:middle
&gt;&gt; Thank you, Sebastien.

01:00:52.646 --> 01:00:54.156 A:middle
So we all know that technology

01:00:54.246 --> 01:00:55.636 A:middle
plays a powerful role in

01:00:55.636 --> 01:00:55.936 A:middle
people's lives.

01:00:55.936 --> 01:00:59.696 A:middle
But this is especially true for

01:00:59.696 --> 01:01:00.936 A:middle
people with disabilities.

01:00:59.696 --> 01:01:00.936 A:middle
people with disabilities.

01:01:01.456 --> 01:01:03.126 A:middle
Technology can be instrumental

01:01:03.126 --> 01:01:04.456 A:middle
in fostering independence,

01:01:04.456 --> 01:01:06.176 A:middle
employment and empowerment.

01:01:06.176 --> 01:01:08.026 A:middle
At Apple, we're guided by a few

01:01:08.026 --> 01:01:09.866 A:middle
key principles for accessibility

01:01:09.866 --> 01:01:11.396 A:middle
and it begins with accessibility

01:01:11.396 --> 01:01:12.226 A:middle
being built in.

01:01:12.816 --> 01:01:14.066 A:middle
People should be able to use our

01:01:14.066 --> 01:01:15.926 A:middle
products out of the box, and

01:01:15.926 --> 01:01:17.296 A:middle
that includes people of all

01:01:17.296 --> 01:01:17.826 A:middle
abilities.

01:01:19.276 --> 01:01:20.206 A:middle
Accessibility should be

01:01:20.256 --> 01:01:20.986 A:middle
comprehensive.

01:01:21.366 --> 01:01:23.336 A:middle
People should have access to the

01:01:23.336 --> 01:01:25.836 A:middle
whole platform, every corner of

01:01:25.836 --> 01:01:26.736 A:middle
the OS, every corner of your

01:01:26.736 --> 01:01:27.216 A:middle
apps.

01:01:28.006 --> 01:01:30.176 A:middle
And perhaps most important, we

01:01:30.176 --> 01:01:32.216 A:middle
want to surprise and delight all

01:01:32.216 --> 01:01:34.036 A:middle
users regardless of ability.

01:01:34.136 --> 01:01:35.586 A:middle
And so this is more than just

01:01:35.626 --> 01:01:37.426 A:middle
about fixing accessibility bugs.

01:01:37.466 --> 01:01:39.276 A:middle
This is about using your

01:01:39.276 --> 01:01:41.016 A:middle
features with accessibility and

01:01:41.016 --> 01:01:42.366 A:middle
striving for an experience

01:01:42.366 --> 01:01:43.736 A:middle
that's great, that's just as

01:01:43.736 --> 01:01:44.976 A:middle
inspired as your original

01:01:44.976 --> 01:01:45.386 A:middle
design.

01:01:45.386 --> 01:01:48.366 A:middle
When we think about

01:01:49.176 --> 01:01:51.126 A:middle
accessibility, we're really

01:01:51.126 --> 01:01:53.226 A:middle
talking about a broad continuum

01:01:53.226 --> 01:01:53.886 A:middle
of abilities.

01:01:54.646 --> 01:01:56.696 A:middle
Hearing, vision, physical,

01:01:56.696 --> 01:01:57.726 A:middle
learning.

01:01:57.836 --> 01:01:59.606 A:middle
And within each of these areas,

01:01:59.606 --> 01:02:00.446 A:middle
we're focused on different

01:01:59.606 --> 01:02:00.446 A:middle
we're focused on different

01:02:00.446 --> 01:02:01.196 A:middle
conditions.

01:02:02.116 --> 01:02:03.796 A:middle
So for example, for vision, we

01:02:03.836 --> 01:02:05.906 A:middle
of course have Voiceover, our

01:02:05.906 --> 01:02:06.966 A:middle
screen reader for people who

01:02:06.966 --> 01:02:07.846 A:middle
can't see the screen.

01:02:07.846 --> 01:02:11.586 A:middle
But we also have over a dozen

01:02:11.586 --> 01:02:13.096 A:middle
vision-related features from

01:02:13.096 --> 01:02:15.116 A:middle
zoom to large text.

01:02:15.696 --> 01:02:17.156 A:middle
And when we take this approach

01:02:17.366 --> 01:02:18.866 A:middle
and we apply it to that broad

01:02:18.866 --> 01:02:20.846 A:middle
continuum of abilities, we're

01:02:20.846 --> 01:02:22.676 A:middle
talking about dozens of

01:02:22.676 --> 01:02:23.776 A:middle
accessibility features.

01:02:23.776 --> 01:02:24.956 A:middle
And it really underscores the

01:02:24.956 --> 01:02:28.396 A:middle
notion that accessibility is for

01:02:28.396 --> 01:02:29.006 A:middle
everyone.

01:02:30.456 --> 01:02:32.036 A:middle
Probably most of you use at

01:02:32.036 --> 01:02:33.706 A:middle
least one accessibility feature.

01:02:33.706 --> 01:02:34.666 A:middle
And if you don't already,

01:02:35.136 --> 01:02:36.196 A:middle
there's a good chance you will

01:02:36.196 --> 01:02:36.786 A:middle
eventually.

01:02:37.306 --> 01:02:40.836 A:middle
This year we're introducing

01:02:40.916 --> 01:02:42.076 A:middle
several new accessibility

01:02:42.076 --> 01:02:43.476 A:middle
features and enhancements, and

01:02:43.476 --> 01:02:44.616 A:middle
today I'm going to talk about

01:02:44.616 --> 01:02:46.036 A:middle
two, starting with

01:02:46.526 --> 01:02:47.466 A:middle
discoverability.

01:02:48.026 --> 01:02:49.636 A:middle
In the spirit of accessibility

01:02:49.636 --> 01:02:51.116 A:middle
being for everyone, we wanted to

01:02:51.116 --> 01:02:52.426 A:middle
make it easier to find.

01:02:52.986 --> 01:02:55.156 A:middle
And so to that end we've added

01:02:55.206 --> 01:02:56.976 A:middle
accessibility to iOS Quick

01:02:56.976 --> 01:02:58.646 A:middle
Start, making the out-of-box

01:02:58.646 --> 01:03:00.886 A:middle
experience even more accessible.

01:02:58.646 --> 01:03:00.886 A:middle
experience even more accessible.

01:03:01.686 --> 01:03:04.566 A:middle
Also we've moved accessibility

01:03:04.566 --> 01:03:06.726 A:middle
to the top level of settings.

01:03:07.516 --> 01:03:12.606 A:middle
[ Applause ]

01:03:13.106 --> 01:03:14.576 A:middle
And we've reorganized it to make

01:03:14.576 --> 01:03:15.796 A:middle
things easier to find.

01:03:16.236 --> 01:03:17.216 A:middle
We think it's going to go a long

01:03:17.216 --> 01:03:18.576 A:middle
way to help people discover and

01:03:18.576 --> 01:03:19.756 A:middle
use these great features.

01:03:19.756 --> 01:03:23.216 A:middle
Now let's talk about voice

01:03:23.216 --> 01:03:23.916 A:middle
control, right?

01:03:24.026 --> 01:03:25.256 A:middle
We saw this this morning during

01:03:25.256 --> 01:03:25.836 A:middle
the keynote.

01:03:26.196 --> 01:03:27.606 A:middle
Voice control is this full voice

01:03:27.606 --> 01:03:29.556 A:middle
experience from macOS, iOS and

01:03:29.556 --> 01:03:31.476 A:middle
iPadOS and we think it's going

01:03:31.476 --> 01:03:33.596 A:middle
to be really helpful for people

01:03:33.596 --> 01:03:34.856 A:middle
with physical challenges.

01:03:35.656 --> 01:03:36.596 A:middle
Voice control provides

01:03:36.746 --> 01:03:38.406 A:middle
comprehensive platform access.

01:03:38.636 --> 01:03:40.556 A:middle
You can speak to items by name.

01:03:40.556 --> 01:03:41.866 A:middle
You can refer to items by

01:03:41.866 --> 01:03:42.266 A:middle
number.

01:03:42.426 --> 01:03:43.846 A:middle
You can even speak to regions of

01:03:43.846 --> 01:03:46.306 A:middle
the screen using a grid.

01:03:46.916 --> 01:03:48.216 A:middle
Voice control has got great text

01:03:48.216 --> 01:03:48.516 A:middle
editing.

01:03:48.516 --> 01:03:50.016 A:middle
So of course I can dictate text

01:03:50.276 --> 01:03:51.986 A:middle
but I can also make selections

01:03:51.986 --> 01:03:53.756 A:middle
and corrections using only my

01:03:53.756 --> 01:03:54.206 A:middle
voice.

01:03:54.926 --> 01:03:56.896 A:middle
And it also has awareness.

01:03:57.296 --> 01:03:59.036 A:middle
So effectively even when I'm

01:03:59.166 --> 01:04:00.756 A:middle
dictating text, it hears

01:03:59.166 --> 01:04:00.756 A:middle
dictating text, it hears

01:04:00.756 --> 01:04:02.196 A:middle
commands and it doesn't make me

01:04:02.196 --> 01:04:03.166 A:middle
manage that distinction.

01:04:03.166 --> 01:04:05.066 A:middle
I can just talk to it.

01:04:05.066 --> 01:04:06.646 A:middle
And using the true depth camera,

01:04:06.886 --> 01:04:08.926 A:middle
if I look away, it knows that it

01:04:08.926 --> 01:04:09.546 A:middle
can ignore me.

01:04:10.976 --> 01:04:12.516 A:middle
Voice control's got great spoken

01:04:12.516 --> 01:04:13.506 A:middle
gestures so of course I can do

01:04:13.506 --> 01:04:15.036 A:middle
simple things like taps and

01:04:15.036 --> 01:04:15.486 A:middle
swipes.

01:04:15.886 --> 01:04:17.906 A:middle
But I can also pre-record more

01:04:17.906 --> 01:04:19.216 A:middle
complex gestures that I might

01:04:19.216 --> 01:04:20.596 A:middle
want to use in an app or a game,

01:04:20.596 --> 01:04:21.846 A:middle
like this rotate gesture.

01:04:23.326 --> 01:04:25.196 A:middle
And of course voice control

01:04:25.196 --> 01:04:27.486 A:middle
speech recognition runs fully on

01:04:27.486 --> 01:04:28.106 A:middle
device.

01:04:28.716 --> 01:04:30.576 A:middle
And so now I'd like to show you

01:04:30.576 --> 01:04:31.596 A:middle
voice control in action.

01:04:32.516 --> 01:04:37.786 A:middle
[ Applause ]

01:04:38.286 --> 01:04:39.476 A:middle
And for this demo I'm going to

01:04:39.476 --> 01:04:41.996 A:middle
be talking to my iPhone.

01:04:47.566 --> 01:04:48.446 A:middle
Open messages.

01:04:49.016 --> 01:04:53.436 A:middle
Hey Chris, let's grab dinner

01:04:54.506 --> 01:04:55.406 A:middle
tonight.

01:04:56.256 --> 01:04:57.976 A:middle
I'm thinking pizza.

01:04:58.086 --> 01:04:59.306 A:middle
Pizza emoji.

01:05:00.466 --> 01:05:03.206 A:middle
Change tonight to this weekend.

01:05:04.956 --> 01:05:06.286 A:middle
Tap send.

01:05:09.516 --> 01:05:10.476 A:middle
Undo that.

01:05:11.576 --> 01:05:12.486 A:middle
Tap send.

01:05:15.016 --> 01:05:16.136 A:middle
[ Laughter ]

01:05:16.136 --> 01:05:17.156 A:middle
Undo that.

01:05:20.376 --> 01:05:21.436 A:middle
Tap send.

01:05:23.516 --> 01:05:25.576 A:middle
[ Applause ]

01:05:26.076 --> 01:05:26.516 A:middle
Open Maps.

01:05:30.166 --> 01:05:31.066 A:middle
Tap search field.

01:05:31.786 --> 01:05:35.366 A:middle
San Pedro Square.

01:05:36.826 --> 01:05:37.606 A:middle
Show numbers.

01:05:39.196 --> 01:05:43.666 A:middle
Five. Show grid continuously.

01:05:44.616 --> 01:05:49.516 A:middle
15. Zoom at one.

01:05:49.716 --> 01:05:50.886 A:middle
Repeat four times.

01:05:53.516 --> 01:06:02.546 A:middle
[ Applause ]

01:05:53.516 --> 01:06:02.546 A:middle
[ Applause ]

01:06:03.046 --> 01:06:05.916 A:middle
Swipe up at 27.

01:06:05.916 --> 01:06:06.696 A:middle
Hide grid.

01:06:08.116 --> 01:06:09.106 A:middle
Tap share.

01:06:09.626 --> 01:06:12.266 A:middle
Tap Chris Adams.

01:06:13.026 --> 01:06:17.446 A:middle
Lots of options around here,

01:06:17.926 --> 01:06:18.106 A:middle
period.

01:06:18.916 --> 01:06:20.816 A:middle
See you later.

01:06:21.476 --> 01:06:22.406 A:middle
Peace emoji.

01:06:24.286 --> 01:06:26.926 A:middle
Ah, look at that.

01:06:27.476 --> 01:06:28.776 A:middle
Undo that.

01:06:30.076 --> 01:06:30.976 A:middle
Peace emoji.

01:06:31.706 --> 01:06:32.846 A:middle
Tap send.

01:06:35.516 --> 01:06:39.546 A:middle
[ Laughter ]

01:06:40.046 --> 01:06:40.866 A:middle
Undo that.

01:06:43.016 --> 01:06:43.736 A:middle
Tap send.

01:06:46.516 --> 01:06:53.976 A:middle
[ Applause ]

01:06:54.476 --> 01:06:55.906 A:middle
Go home. Go to sleep.

01:06:56.936 --> 01:06:59.186 A:middle
Okay. So that's voice control.

01:07:00.296 --> 01:07:00.616 A:middle
Now --

01:07:02.516 --> 01:07:05.546 A:middle
[ Applause ]

01:07:06.046 --> 01:07:07.306 A:middle
Now we can also use voice

01:07:07.306 --> 01:07:09.246 A:middle
control as developers to test

01:07:09.246 --> 01:07:10.856 A:middle
the accessibility of our apps.

01:07:11.036 --> 01:07:12.246 A:middle
And so let's do that now with

01:07:12.246 --> 01:07:13.276 A:middle
the travel app that you saw

01:07:13.276 --> 01:07:13.676 A:middle
earlier.

01:07:14.406 --> 01:07:17.946 A:middle
Wake up. Open Travel.

01:07:21.456 --> 01:07:23.006 A:middle
Tap San Francisco.

01:07:23.746 --> 01:07:26.526 A:middle
Tap San Francisco.

01:07:26.636 --> 01:07:27.666 A:middle
Show names.

01:07:28.956 --> 01:07:33.246 A:middle
All right, here's the problem.

01:07:33.576 --> 01:07:35.166 A:middle
So I'm trying to tap on San

01:07:35.166 --> 01:07:37.286 A:middle
Francisco, this element, but it

01:07:37.286 --> 01:07:38.066 A:middle
doesn't have a good

01:07:38.066 --> 01:07:39.516 A:middle
accessibility label yet and it's

01:07:39.516 --> 01:07:40.646 A:middle
a really common problem.

01:07:40.646 --> 01:07:41.906 A:middle
It means I can't speak to this

01:07:41.906 --> 01:07:43.446 A:middle
element with voice control, and

01:07:43.446 --> 01:07:44.966 A:middle
even worse, if I couldn't see

01:07:44.966 --> 01:07:46.516 A:middle
the screen and Voiceover were

01:07:46.516 --> 01:07:48.086 A:middle
reading this to me, I'd be

01:07:48.086 --> 01:07:49.496 A:middle
completely out of luck, stopped

01:07:49.496 --> 01:07:50.056 A:middle
in my tracks.

01:07:50.056 --> 01:07:51.376 A:middle
I would not be able to use this

01:07:51.376 --> 01:07:51.696 A:middle
app.

01:07:52.046 --> 01:07:55.276 A:middle
So fortunately these things are

01:07:55.326 --> 01:07:56.266 A:middle
pretty easy to fix.

01:07:56.266 --> 01:07:57.786 A:middle
And so let's talk about what you

01:07:57.786 --> 01:07:59.426 A:middle
can do to make your apps more

01:07:59.426 --> 01:07:59.966 A:middle
accessible.

01:08:04.046 --> 01:08:05.596 A:middle
The good news is, most

01:08:05.596 --> 01:08:07.166 A:middle
accessibility features just

01:08:07.236 --> 01:08:07.546 A:middle
work.

01:08:08.046 --> 01:08:09.056 A:middle
But some of them, indeed the

01:08:09.056 --> 01:08:10.326 A:middle
most transformative features

01:08:10.326 --> 01:08:11.576 A:middle
like Voice Control and Switch

01:08:11.576 --> 01:08:14.046 A:middle
Control and Voiceover, they need

01:08:14.046 --> 01:08:14.676 A:middle
your support.

01:08:14.676 --> 01:08:16.345 A:middle
And so here's what you can do.

01:08:16.345 --> 01:08:18.515 A:middle
First, do what we just did.

01:08:18.515 --> 01:08:19.265 A:middle
Just try it.

01:08:19.395 --> 01:08:21.386 A:middle
Use your apps with accessibility

01:08:21.386 --> 01:08:21.916 A:middle
features.

01:08:22.216 --> 01:08:23.426 A:middle
You might actually be surprised

01:08:23.426 --> 01:08:24.336 A:middle
at what already works.

01:08:24.406 --> 01:08:25.876 A:middle
But more importantly, you're

01:08:25.876 --> 01:08:27.376 A:middle
going to gain valuable insight

01:08:27.376 --> 01:08:30.426 A:middle
into how some users actually

01:08:30.426 --> 01:08:31.406 A:middle
experience your app.

01:08:31.406 --> 01:08:32.716 A:middle
And you're probably going to

01:08:32.716 --> 01:08:33.856 A:middle
want to make some changes.

01:08:34.725 --> 01:08:37.145 A:middle
Next, use the tools.

01:08:37.145 --> 01:08:38.716 A:middle
Xcode's got great built-in

01:08:38.716 --> 01:08:39.786 A:middle
accessibility support for

01:08:39.786 --> 01:08:40.426 A:middle
developers.

01:08:40.426 --> 01:08:41.636 A:middle
You can edit accessibility

01:08:41.685 --> 01:08:43.055 A:middle
properties right in the Xcode

01:08:43.055 --> 01:08:43.845 A:middle
inspector.

01:08:44.036 --> 01:08:45.156 A:middle
And with new Environment

01:08:45.156 --> 01:08:47.036 A:middle
Overrides, you can preview

01:08:47.036 --> 01:08:48.345 A:middle
visual accessibility

01:08:48.345 --> 01:08:49.456 A:middle
accommodations during your

01:08:49.456 --> 01:08:51.475 A:middle
development lifecycle right in

01:08:51.475 --> 01:08:52.326 A:middle
your app.

01:08:52.716 --> 01:08:53.636 A:middle
It's really cool.

01:08:54.515 --> 01:08:56.606 A:middle
Finally, implement the

01:08:56.606 --> 01:08:57.786 A:middle
Accessibility API.

01:08:57.786 --> 01:08:59.986 A:middle
It's the best way to ensure an

01:08:59.986 --> 01:09:01.326 A:middle
accessible experience.

01:08:59.986 --> 01:09:01.326 A:middle
accessible experience.

01:09:01.326 --> 01:09:02.606 A:middle
It's the essential way.

01:09:02.966 --> 01:09:04.816 A:middle
Doing this well is like putting

01:09:04.816 --> 01:09:06.216 A:middle
out a welcome mat to your app

01:09:06.506 --> 01:09:08.386 A:middle
for users of all abilities.

01:09:08.526 --> 01:09:09.975 A:middle
It's how Voiceover and Switch

01:09:09.975 --> 01:09:11.316 A:middle
Control and the rest talk to

01:09:11.316 --> 01:09:12.716 A:middle
your app to offer an adapted

01:09:12.716 --> 01:09:13.456 A:middle
experience.

01:09:14.196 --> 01:09:15.586 A:middle
The Accessibility APIs work on

01:09:15.586 --> 01:09:17.265 A:middle
all platform, and while they're

01:09:17.265 --> 01:09:18.796 A:middle
easy to implement, they're super

01:09:18.796 --> 01:09:19.326 A:middle
powerful.

01:09:19.326 --> 01:09:20.776 A:middle
So even the most sophisticated

01:09:20.776 --> 01:09:22.845 A:middle
apps and experiences can be made

01:09:22.845 --> 01:09:23.765 A:middle
fully accessible.

01:09:24.406 --> 01:09:26.916 A:middle
And of course, SwiftUI has great

01:09:26.916 --> 01:09:28.696 A:middle
accessibility support built

01:09:28.756 --> 01:09:29.196 A:middle
right in.

01:09:29.986 --> 01:09:31.265 A:middle
And so that's our accessibility

01:09:31.265 --> 01:09:32.265 A:middle
update today.

01:09:32.616 --> 01:09:34.416 A:middle
Now another thing we care deeply

01:09:34.416 --> 01:09:35.895 A:middle
about at Apple is privacy.

01:09:35.996 --> 01:09:37.036 A:middle
And so to tell you more about

01:09:37.036 --> 01:09:38.206 A:middle
that, I'd like to hand things

01:09:38.206 --> 01:09:39.395 A:middle
over to Katie.

01:09:39.395 --> 01:09:39.975 A:middle
Thanks very much.

01:09:40.515 --> 01:09:47.046 A:middle
[ Applause ]

01:09:47.546 --> 01:09:48.456 A:middle
&gt;&gt; Thanks, Eric.

01:09:48.616 --> 01:09:50.386 A:middle
Privacy is a topic that isn't

01:09:50.386 --> 01:09:51.046 A:middle
going away.

01:09:51.046 --> 01:09:52.805 A:middle
And it's something that everyone

01:09:52.805 --> 01:09:53.935 A:middle
needs to pay attention to.

01:09:53.935 --> 01:09:56.316 A:middle
It's something you have to

01:09:56.316 --> 01:09:59.096 A:middle
design in from the beginning and

01:09:59.096 --> 01:10:00.656 A:middle
it shapes how your product

01:09:59.096 --> 01:10:00.656 A:middle
it shapes how your product

01:10:00.706 --> 01:10:01.076 A:middle
works.

01:10:02.086 --> 01:10:03.276 A:middle
When you're designing a new

01:10:03.276 --> 01:10:05.086 A:middle
feature, here are a few steps

01:10:05.086 --> 01:10:07.776 A:middle
that you can take to design for

01:10:07.846 --> 01:10:08.426 A:middle
privacy.

01:10:09.866 --> 01:10:11.366 A:middle
Process on the user's device.

01:10:12.096 --> 01:10:14.226 A:middle
Wherever you can keep user data

01:10:14.226 --> 01:10:16.136 A:middle
on-device, do it.

01:10:16.946 --> 01:10:19.016 A:middle
And this helps you to collect as

01:10:19.016 --> 01:10:20.586 A:middle
little data as you can.

01:10:21.196 --> 01:10:22.996 A:middle
If you don't have the data, it

01:10:23.446 --> 01:10:25.696 A:middle
can't be abused or stolen.

01:10:26.366 --> 01:10:27.206 A:middle
Ask first.

01:10:27.416 --> 01:10:32.356 A:middle
Ask permission from your user

01:10:32.536 --> 01:10:34.276 A:middle
for the data and how you plan to

01:10:34.386 --> 01:10:34.916 A:middle
use it.

01:10:35.276 --> 01:10:38.066 A:middle
And if you do collect data, use

01:10:38.116 --> 01:10:39.236 A:middle
random identifiers.

01:10:39.976 --> 01:10:41.466 A:middle
And scope them down from an

01:10:41.686 --> 01:10:43.976 A:middle
account to a device, to a

01:10:44.136 --> 01:10:45.506 A:middle
session where possible.

01:10:46.036 --> 01:10:49.136 A:middle
And encrypt to keep your users'

01:10:49.136 --> 01:10:50.126 A:middle
data secure.

01:10:51.506 --> 01:10:53.266 A:middle
Applying these principles in

01:10:53.266 --> 01:10:55.356 A:middle
your design process will help

01:10:55.356 --> 01:10:57.746 A:middle
you build great features and

01:10:57.916 --> 01:10:58.626 A:middle
great privacy.

01:10:58.626 --> 01:11:01.676 A:middle
I want to talk about two areas

01:10:58.626 --> 01:11:01.676 A:middle
I want to talk about two areas

01:11:01.676 --> 01:11:04.026 A:middle
where we've made it easier for

01:11:04.026 --> 01:11:06.276 A:middle
you to take these steps.

01:11:06.456 --> 01:11:08.316 A:middle
First, location.

01:11:10.786 --> 01:11:12.876 A:middle
Where you go can reveal a lot

01:11:12.876 --> 01:11:13.736 A:middle
about your life.

01:11:14.606 --> 01:11:16.536 A:middle
Where you live, where you work,

01:11:17.276 --> 01:11:18.576 A:middle
what doctor's office you might

01:11:18.576 --> 01:11:21.166 A:middle
go to, or how often you're

01:11:21.166 --> 01:11:23.476 A:middle
hitting the gym versus maybe the

01:11:23.476 --> 01:11:23.896 A:middle
bar.

01:11:25.656 --> 01:11:27.356 A:middle
Because of this, some users are

01:11:27.486 --> 01:11:29.686 A:middle
hesitant to share location with

01:11:29.686 --> 01:11:30.866 A:middle
you and your apps.

01:11:31.846 --> 01:11:33.366 A:middle
So they might miss out on some

01:11:33.366 --> 01:11:34.836 A:middle
of your key features.

01:11:35.826 --> 01:11:37.606 A:middle
So this year, we're adding a new

01:11:37.606 --> 01:11:40.156 A:middle
option: Allow Once.

01:11:41.876 --> 01:11:43.646 A:middle
This provides location access

01:11:43.646 --> 01:11:45.946 A:middle
for just that session and will

01:11:45.946 --> 01:11:49.516 A:middle
ask the user again next time.

01:11:49.736 --> 01:11:51.986 A:middle
But let's say your app is even

01:11:51.986 --> 01:11:53.546 A:middle
better with Always Allow

01:11:53.546 --> 01:11:54.526 A:middle
Location permission.

01:11:55.456 --> 01:11:57.136 A:middle
Here's how this will now work.

01:11:58.506 --> 01:11:59.866 A:middle
First the user needs to select

01:12:00.366 --> 01:12:00.996 A:middle
While In Use.

01:12:02.586 --> 01:12:05.246 A:middle
Then you request location while

01:12:05.246 --> 01:12:06.846 A:middle
your app is in the background.

01:12:07.996 --> 01:12:09.296 A:middle
Then the user will be presented

01:12:09.296 --> 01:12:11.766 A:middle
with an alert, letting them know

01:12:11.766 --> 01:12:13.646 A:middle
that you're requesting location

01:12:13.996 --> 01:12:16.506 A:middle
in the background.

01:12:16.506 --> 01:12:18.276 A:middle
If they change to Always Allow,

01:12:19.056 --> 01:12:20.446 A:middle
you'll have background location

01:12:20.776 --> 01:12:22.186 A:middle
access moving forward.

01:12:22.816 --> 01:12:26.196 A:middle
Finally, we're giving users more

01:12:26.196 --> 01:12:28.236 A:middle
transparency into how their

01:12:28.236 --> 01:12:29.576 A:middle
location is being accessed.

01:12:30.876 --> 01:12:32.486 A:middle
For all apps with background

01:12:32.486 --> 01:12:34.556 A:middle
location permission, from time

01:12:34.556 --> 01:12:36.356 A:middle
to time we'll show them where

01:12:36.356 --> 01:12:37.866 A:middle
your app accessed their

01:12:37.866 --> 01:12:38.606 A:middle
location.

01:12:39.516 --> 01:12:47.546 A:middle
[ Applause ]

01:12:48.046 --> 01:12:48.726 A:middle
With these changes to

01:12:48.726 --> 01:12:50.256 A:middle
permissions, users will feel

01:12:50.256 --> 01:12:52.456 A:middle
more comfortable in how they're

01:12:52.546 --> 01:12:54.566 A:middle
sharing location with you.

01:12:55.726 --> 01:12:57.766 A:middle
Now, let's talk about login.

01:13:00.276 --> 01:13:01.886 A:middle
We've all seen or maybe

01:13:01.886 --> 01:13:03.416 A:middle
implemented buttons like these.

01:13:03.416 --> 01:13:05.496 A:middle
And they can be really

01:13:05.496 --> 01:13:07.186 A:middle
convenient, but they can come at

01:13:07.186 --> 01:13:09.326 A:middle
the cost of your user's privacy.

01:13:10.586 --> 01:13:11.826 A:middle
They also might share more

01:13:11.826 --> 01:13:14.116 A:middle
information about your company's

01:13:14.186 --> 01:13:16.236 A:middle
business than you really want to

01:13:16.236 --> 01:13:17.116 A:middle
be disclosing.

01:13:18.416 --> 01:13:20.166 A:middle
So we want to offer a better

01:13:20.166 --> 01:13:20.586 A:middle
option.

01:13:20.586 --> 01:13:23.676 A:middle
And it's called Sign In With

01:13:23.836 --> 01:13:23.976 A:middle
Apple.

01:13:24.516 --> 01:13:31.026 A:middle
[ Applause ]

01:13:31.526 --> 01:13:33.606 A:middle
It offers fast, easy sign-in

01:13:33.816 --> 01:13:35.076 A:middle
without all the tracking.

01:13:35.996 --> 01:13:37.936 A:middle
This isn't just about privacy

01:13:37.936 --> 01:13:40.756 A:middle
for our users, but also for your

01:13:40.756 --> 01:13:41.306 A:middle
company.

01:13:42.456 --> 01:13:44.036 A:middle
It's not our business to know

01:13:44.036 --> 01:13:45.706 A:middle
how users engage with your app,

01:13:46.676 --> 01:13:48.446 A:middle
so Apple simply won't track

01:13:49.706 --> 01:13:49.806 A:middle
that.

01:13:50.516 --> 01:13:56.546 A:middle
[ Applause ]

01:13:57.046 --> 01:13:58.546 A:middle
It's easy to add a Sign In With

01:13:58.546 --> 01:14:00.026 A:middle
Apple button to your app with a

01:13:58.546 --> 01:14:00.026 A:middle
Apple button to your app with a

01:14:00.126 --> 01:14:00.776 A:middle
simple API.

01:14:01.916 --> 01:14:03.986 A:middle
Users can set up an account and

01:14:04.016 --> 01:14:05.676 A:middle
sign into your app with a tap

01:14:06.026 --> 01:14:08.806 A:middle
and a quick Face ID.

01:14:09.036 --> 01:14:11.786 A:middle
So why is this great for all of

01:14:13.026 --> 01:14:13.093 A:middle
you?

01:14:13.486 --> 01:14:15.836 A:middle
First off, more trust and less

01:14:15.966 --> 01:14:18.006 A:middle
friction equals more engaged

01:14:18.006 --> 01:14:18.616 A:middle
users.

01:14:19.776 --> 01:14:21.246 A:middle
Sign In With Apple can shorten

01:14:21.246 --> 01:14:24.366 A:middle
the distance between a user

01:14:24.606 --> 01:14:27.686 A:middle
considering your application and

01:14:27.686 --> 01:14:29.466 A:middle
really embracing it.

01:14:31.396 --> 01:14:33.736 A:middle
Second, verify email addresses.

01:14:34.836 --> 01:14:36.976 A:middle
Apple has already done the work

01:14:37.436 --> 01:14:39.546 A:middle
of verifying email addresses for

01:14:39.546 --> 01:14:40.176 A:middle
you.

01:14:41.516 --> 01:14:47.596 A:middle
[ Applause ]

01:14:48.096 --> 01:14:49.046 A:middle
And we're removing the incentive

01:14:49.046 --> 01:14:51.686 A:middle
for users to share made-up email

01:14:51.796 --> 01:14:54.096 A:middle
addresses by offering a private

01:14:54.196 --> 01:14:55.596 A:middle
email relay service.

01:14:55.676 --> 01:14:59.436 A:middle
So even if a user chooses to

01:14:59.606 --> 01:15:01.406 A:middle
hide their email address when

01:14:59.606 --> 01:15:01.406 A:middle
hide their email address when

01:15:01.406 --> 01:15:03.006 A:middle
setting up an account, your

01:15:03.006 --> 01:15:04.626 A:middle
email will arrive in their

01:15:04.626 --> 01:15:07.886 A:middle
verified account, their verified

01:15:07.886 --> 01:15:08.346 A:middle
inbox.

01:15:08.836 --> 01:15:12.036 A:middle
And then there's security.

01:15:12.036 --> 01:15:14.546 A:middle
With Sign Into Apple, you don't

01:15:14.546 --> 01:15:15.746 A:middle
need to deal with storing

01:15:15.746 --> 01:15:18.796 A:middle
passwords or password reset

01:15:18.796 --> 01:15:19.286 A:middle
issues.

01:15:19.636 --> 01:15:21.796 A:middle
And every single account is

01:15:21.796 --> 01:15:23.836 A:middle
protected with two-factor

01:15:23.886 --> 01:15:24.756 A:middle
authentication.

01:15:27.516 --> 01:15:31.546 A:middle
[ Applause ]

01:15:32.046 --> 01:15:33.346 A:middle
This can really improve your

01:15:33.346 --> 01:15:34.146 A:middle
security.

01:15:35.536 --> 01:15:36.886 A:middle
We've also integrated some

01:15:36.976 --> 01:15:39.096 A:middle
interesting innovations around

01:15:40.946 --> 01:15:42.006 A:middle
anti-fraud.

01:15:42.206 --> 01:15:44.096 A:middle
We all know that along with some

01:15:44.096 --> 01:15:46.286 A:middle
real users, sometimes you get

01:15:46.346 --> 01:15:48.296 A:middle
some not so real users.

01:15:49.676 --> 01:15:51.566 A:middle
Nobody wants bots or farmed

01:15:51.566 --> 01:15:52.016 A:middle
accounts.

01:15:52.716 --> 01:15:54.326 A:middle
And we work hard to filter them

01:15:54.396 --> 01:15:55.706 A:middle
out of our systems.

01:15:56.106 --> 01:15:58.636 A:middle
And we want to help you do the

01:15:58.716 --> 01:15:59.066 A:middle
same.

01:15:59.826 --> 01:16:03.136 A:middle
So we built what we call a real

01:15:59.826 --> 01:16:03.136 A:middle
So we built what we call a real

01:16:03.216 --> 01:16:04.166 A:middle
user indicator.

01:16:04.166 --> 01:16:06.516 A:middle
It can tell you if an incoming

01:16:06.516 --> 01:16:09.676 A:middle
account is a real user or if you

01:16:09.676 --> 01:16:11.116 A:middle
might want to do some additional

01:16:11.116 --> 01:16:12.006 A:middle
verification.

01:16:13.286 --> 01:16:15.276 A:middle
So how does this work?

01:16:16.396 --> 01:16:17.926 A:middle
First off, the whole system is

01:16:17.926 --> 01:16:19.686 A:middle
built from the ground up to

01:16:19.686 --> 01:16:21.396 A:middle
maintain user privacy.

01:16:21.396 --> 01:16:24.326 A:middle
It uses on-device intelligence

01:16:24.566 --> 01:16:26.786 A:middle
to determine if the originating

01:16:26.786 --> 01:16:28.966 A:middle
device is behaving in a normal

01:16:29.906 --> 01:16:29.973 A:middle
way.

01:16:30.686 --> 01:16:32.206 A:middle
The device generates a value

01:16:32.306 --> 01:16:33.626 A:middle
without sharing any specifics

01:16:33.626 --> 01:16:35.026 A:middle
with Apple.

01:16:36.126 --> 01:16:38.156 A:middle
This is combined with select

01:16:38.156 --> 01:16:39.656 A:middle
account information and then

01:16:39.656 --> 01:16:41.646 A:middle
boiled down into a single value

01:16:42.166 --> 01:16:46.586 A:middle
that's shared with your app at

01:16:46.876 --> 01:16:48.236 A:middle
account setup time.

01:16:48.236 --> 01:16:49.696 A:middle
Then depending on the value that

01:16:49.806 --> 01:16:50.866 A:middle
you receive, you can be

01:16:50.866 --> 01:16:52.596 A:middle
confident that your new user is

01:16:52.596 --> 01:16:55.166 A:middle
a real user or get a signal that

01:16:55.166 --> 01:16:56.706 A:middle
you might want to take a second

01:16:56.706 --> 01:16:56.826 A:middle
look.

01:17:00.296 --> 01:17:01.916 A:middle
And all of this comes with great

01:17:01.916 --> 01:17:03.226 A:middle
cross-platform support.

01:17:03.996 --> 01:17:05.796 A:middle
It's available on iOS, iPadOS,

01:17:05.966 --> 01:17:12.016 A:middle
macOS, watchOS, tvOS and it even

01:17:12.016 --> 01:17:12.956 A:middle
works on the web.

01:17:14.106 --> 01:17:16.196 A:middle
So it can work on Android and

01:17:16.196 --> 01:17:17.306 A:middle
Windows devices.

01:17:18.516 --> 01:17:26.926 A:middle
[ Applause ]

01:17:27.426 --> 01:17:27.976 A:middle
So there you go.

01:17:29.286 --> 01:17:31.276 A:middle
A super-fast and easy way to

01:17:31.276 --> 01:17:33.836 A:middle
engage new users, two-factor

01:17:33.986 --> 01:17:36.236 A:middle
authentication and anti-fraud

01:17:36.576 --> 01:17:37.406 A:middle
built in.

01:17:38.286 --> 01:17:39.686 A:middle
You can implement it virtually

01:17:39.846 --> 01:17:42.266 A:middle
anywhere, and most importantly,

01:17:42.936 --> 01:17:45.066 A:middle
it respects everyone's privacy.

01:17:46.286 --> 01:17:48.506 A:middle
So this is a solution both you

01:17:48.506 --> 01:17:50.706 A:middle
and your users can trust.

01:17:56.046 --> 01:17:57.076 A:middle
We've already had a number of

01:17:57.076 --> 01:17:59.016 A:middle
developers working with us and

01:17:59.016 --> 01:18:01.026 A:middle
we're excited to see many more

01:17:59.016 --> 01:18:01.026 A:middle
we're excited to see many more

01:18:01.076 --> 01:18:02.096 A:middle
of you adopt.

01:18:02.096 --> 01:18:06.346 A:middle
So that's Sign In With Apple.

01:18:07.516 --> 01:18:15.696 A:middle
[ Applause ]

01:18:16.196 --> 01:18:18.106 A:middle
As I mentioned earlier, a great

01:18:18.106 --> 01:18:20.046 A:middle
way to preserve user privacy is

01:18:20.046 --> 01:18:21.306 A:middle
to work with the users' data

01:18:21.756 --> 01:18:22.376 A:middle
on-device.

01:18:22.376 --> 01:18:24.886 A:middle
And we've built some great

01:18:24.886 --> 01:18:27.146 A:middle
technologies for doing just

01:18:28.216 --> 01:18:28.326 A:middle
that.

01:18:28.486 --> 01:18:30.136 A:middle
To tell you more about machine

01:18:30.136 --> 01:18:31.816 A:middle
learning, I'd like to hand it

01:18:31.816 --> 01:18:32.676 A:middle
over to Bill.

01:18:34.516 --> 01:18:36.546 A:middle
[ Applause ]

01:18:37.046 --> 01:18:37.516 A:middle
&gt;&gt; Thank you, Katie.

01:18:38.516 --> 01:18:40.906 A:middle
[ Applause ]

01:18:41.406 --> 01:18:42.696 A:middle
Machine learning is a key

01:18:42.696 --> 01:18:44.356 A:middle
technology for so many of the

01:18:44.356 --> 01:18:46.316 A:middle
experiences in your apps.

01:18:46.746 --> 01:18:48.846 A:middle
And at Apple, we use on-device

01:18:48.946 --> 01:18:50.086 A:middle
machine learning to power

01:18:50.086 --> 01:18:52.046 A:middle
features from stunning camera

01:18:52.236 --> 01:18:54.456 A:middle
and photos capabilities to AR

01:18:54.456 --> 01:18:55.526 A:middle
Kit and more.

01:18:55.526 --> 01:18:57.756 A:middle
And we can do this because of

01:18:57.756 --> 01:18:58.806 A:middle
our cutting-edge silicon.

01:19:00.106 --> 01:19:01.926 A:middle
With powerful CPUs, GPUs and

01:19:01.926 --> 01:19:04.746 A:middle
dedicated ML processors like the

01:19:04.746 --> 01:19:06.686 A:middle
Neural Engine, we can deliver

01:19:06.686 --> 01:19:08.256 A:middle
incredible real-time

01:19:08.256 --> 01:19:09.196 A:middle
experiences.

01:19:10.576 --> 01:19:12.276 A:middle
The Neural Engine is optimized

01:19:12.366 --> 01:19:13.856 A:middle
to accelerate convolutional

01:19:13.856 --> 01:19:14.846 A:middle
neural networks with

01:19:14.846 --> 01:19:16.766 A:middle
multi-precision support and a

01:19:16.916 --> 01:19:18.036 A:middle
Smart Compute system.

01:19:19.456 --> 01:19:20.576 A:middle
What does that mean?

01:19:21.106 --> 01:19:24.196 A:middle
It means it's an absolute beast.

01:19:24.876 --> 01:19:27.496 A:middle
In fact, the Neural Engine is

01:19:27.646 --> 01:19:29.646 A:middle
capable of up to 5 trillion

01:19:29.696 --> 01:19:31.536 A:middle
operations per second.

01:19:31.926 --> 01:19:33.346 A:middle
Best of all, we've built our

01:19:33.346 --> 01:19:35.106 A:middle
machine learning APIs on top of

01:19:35.106 --> 01:19:37.976 A:middle
this so that your apps can take

01:19:38.096 --> 01:19:40.146 A:middle
full advantage of this blazing

01:19:40.146 --> 01:19:40.786 A:middle
performance.

01:19:41.796 --> 01:19:43.286 A:middle
And we have some great updates,

01:19:43.466 --> 01:19:45.536 A:middle
starting with our out-of-the-box

01:19:45.536 --> 01:19:47.746 A:middle
APIs like Vision, Natural

01:19:47.746 --> 01:19:49.156 A:middle
Language, and Speech.

01:19:50.266 --> 01:19:51.886 A:middle
Today these APIs deliver rich

01:19:51.946 --> 01:19:53.766 A:middle
features such as face detection,

01:19:54.156 --> 01:19:56.066 A:middle
object tracking and named entity

01:19:56.066 --> 01:19:56.696 A:middle
recognition.

01:19:57.316 --> 01:19:59.466 A:middle
And this year, we're adding even

01:19:59.466 --> 01:19:59.846 A:middle
more.

01:20:00.586 --> 01:20:01.446 A:middle
Let's have a look at a few of

01:20:01.446 --> 01:20:03.436 A:middle
these, starting with image

01:20:03.436 --> 01:20:05.216 A:middle
saliency which gives you a

01:20:05.216 --> 01:20:06.546 A:middle
heatmap for an image,

01:20:06.876 --> 01:20:08.496 A:middle
highlighting important objects

01:20:08.496 --> 01:20:10.306 A:middle
and where users are likely to

01:20:10.366 --> 01:20:11.316 A:middle
focus their attention.

01:20:12.416 --> 01:20:14.126 A:middle
We use this today in photos to

01:20:14.126 --> 01:20:16.016 A:middle
help intelligently crop images

01:20:16.016 --> 01:20:17.176 A:middle
as part of the curation

01:20:17.176 --> 01:20:17.796 A:middle
experience.

01:20:18.486 --> 01:20:20.776 A:middle
We're also releasing text

01:20:20.776 --> 01:20:22.606 A:middle
recognition where you can search

01:20:22.606 --> 01:20:24.836 A:middle
text from images like posters,

01:20:25.136 --> 01:20:25.976 A:middle
signs and documents.

01:20:26.516 --> 01:20:33.546 A:middle
[ Applause ]

01:20:34.046 --> 01:20:35.456 A:middle
And take advantage of the

01:20:35.456 --> 01:20:37.106 A:middle
document camera capability we

01:20:37.106 --> 01:20:37.706 A:middle
use in Notes.

01:20:38.686 --> 01:20:40.466 A:middle
For Natural Language, you can

01:20:40.466 --> 01:20:42.156 A:middle
make use of word embeddings

01:20:42.516 --> 01:20:44.186 A:middle
which help to identify words or

01:20:44.296 --> 01:20:46.246 A:middle
sentences with similar meanings.

01:20:47.106 --> 01:20:49.106 A:middle
We use this today for search in

01:20:49.176 --> 01:20:50.646 A:middle
photos so that if you search for

01:20:50.646 --> 01:20:52.326 A:middle
an unknown term like musician,

01:20:52.736 --> 01:20:54.386 A:middle
we can suggest alternatives like

01:20:54.386 --> 01:20:55.876 A:middle
entertainer or singer.

01:20:57.386 --> 01:20:59.826 A:middle
And this year, our Speech API is

01:20:59.826 --> 01:21:02.246 A:middle
now on-device and works on

01:20:59.826 --> 01:21:02.246 A:middle
now on-device and works on

01:21:02.246 --> 01:21:04.916 A:middle
iPhone, iPad and Mac with

01:21:04.986 --> 01:21:06.686 A:middle
support for 10 languages.

01:21:07.516 --> 01:21:12.546 A:middle
[ Applause ]

01:21:13.046 --> 01:21:13.946 A:middle
And with features like Speech

01:21:13.986 --> 01:21:15.656 A:middle
Saliency, you can understand the

01:21:15.656 --> 01:21:18.076 A:middle
pronunciation, pitch and the

01:21:18.076 --> 01:21:19.346 A:middle
cadence of speech.

01:21:21.086 --> 01:21:22.206 A:middle
Now for those of you who want to

01:21:22.206 --> 01:21:23.716 A:middle
go deeper with machine learning,

01:21:24.266 --> 01:21:26.346 A:middle
you can make use of Core ML, our

01:21:26.346 --> 01:21:28.646 A:middle
on-device technology designed to

01:21:28.646 --> 01:21:30.316 A:middle
run machine learning models with

01:21:30.416 --> 01:21:32.746 A:middle
high performance and privacy.

01:21:34.266 --> 01:21:36.146 A:middle
Today Core ML has great support

01:21:36.146 --> 01:21:37.176 A:middle
for many machine learning

01:21:37.176 --> 01:21:39.176 A:middle
models, from neural networks to

01:21:39.176 --> 01:21:40.866 A:middle
boosted trees and more.

01:21:41.836 --> 01:21:42.726 A:middle
But as you know, the field of

01:21:42.726 --> 01:21:44.416 A:middle
machine learning is constantly

01:21:44.416 --> 01:21:45.116 A:middle
evolving.

01:21:45.466 --> 01:21:46.756 A:middle
And so this year we set out to

01:21:46.756 --> 01:21:48.586 A:middle
support the most advanced neural

01:21:48.586 --> 01:21:50.536 A:middle
networks by adding more layer

01:21:50.536 --> 01:21:52.136 A:middle
types than ever before.

01:21:52.976 --> 01:21:55.066 A:middle
In fact, Core ML now supports

01:21:55.066 --> 01:21:57.676 A:middle
over 100 model layer types.

01:21:59.006 --> 01:22:00.216 A:middle
This enables you to run some of

01:21:59.006 --> 01:22:00.216 A:middle
This enables you to run some of

01:22:00.216 --> 01:22:01.906 A:middle
the most cutting-edge machine

01:22:01.906 --> 01:22:03.336 A:middle
learning models on Apple

01:22:03.376 --> 01:22:03.906 A:middle
devices.

01:22:04.916 --> 01:22:07.526 A:middle
Models like ELMO or WaveNet or

01:22:07.526 --> 01:22:08.886 A:middle
some very recently published

01:22:08.886 --> 01:22:11.096 A:middle
ones like BERT, bringing

01:22:11.096 --> 01:22:12.496 A:middle
breakthrough natural language

01:22:12.536 --> 01:22:14.236 A:middle
processing to your apps.

01:22:16.226 --> 01:22:18.126 A:middle
Now running models like these in

01:22:18.126 --> 01:22:19.936 A:middle
your apps is only part of the

01:22:19.936 --> 01:22:20.246 A:middle
story.

01:22:21.166 --> 01:22:22.106 A:middle
There are times when you may

01:22:22.106 --> 01:22:23.656 A:middle
want to update the models in

01:22:23.656 --> 01:22:26.006 A:middle
your apps on-device based on

01:22:26.006 --> 01:22:26.776 A:middle
user data.

01:22:27.876 --> 01:22:29.056 A:middle
We do this today for features

01:22:29.056 --> 01:22:31.156 A:middle
like Face ID where a user's

01:22:31.156 --> 01:22:32.956 A:middle
appearance may be evolving over

01:22:33.016 --> 01:22:33.286 A:middle
time.

01:22:33.906 --> 01:22:35.396 A:middle
They change their hair, wear a

01:22:35.396 --> 01:22:35.606 A:middle
hat.

01:22:36.436 --> 01:22:37.996 A:middle
Or for features like our Siri

01:22:37.996 --> 01:22:40.096 A:middle
Watch Face where the set of

01:22:40.096 --> 01:22:41.706 A:middle
recommendations is constantly

01:22:41.706 --> 01:22:42.956 A:middle
evolving to deliver a

01:22:42.956 --> 01:22:44.646 A:middle
personalized experience for each

01:22:44.646 --> 01:22:45.006 A:middle
user.

01:22:45.006 --> 01:22:48.096 A:middle
To achieve these experiences, we

01:22:48.096 --> 01:22:49.726 A:middle
use on-device personalization.

01:22:50.426 --> 01:22:51.826 A:middle
And this year we're bringing

01:22:51.826 --> 01:22:53.766 A:middle
that capability to Core ML.

01:22:55.466 --> 01:22:56.666 A:middle
This means you can update the

01:22:56.666 --> 01:22:59.156 A:middle
Core ML models in your app with

01:22:59.156 --> 01:23:01.046 A:middle
data from individual users.

01:22:59.156 --> 01:23:01.046 A:middle
data from individual users.

01:23:02.106 --> 01:23:02.956 A:middle
This creates --

01:23:03.516 --> 01:23:07.716 A:middle
[ Applause ]

01:23:08.216 --> 01:23:09.736 A:middle
This creates an updated and

01:23:09.786 --> 01:23:11.796 A:middle
personalized model for the user.

01:23:12.786 --> 01:23:14.576 A:middle
With model personalization, your

01:23:14.576 --> 01:23:16.196 A:middle
apps can now update models in

01:23:16.196 --> 01:23:17.586 A:middle
the background without

01:23:17.686 --> 01:23:19.086 A:middle
compromising user privacy.

01:23:20.886 --> 01:23:22.206 A:middle
Core ML delivers the most

01:23:22.206 --> 01:23:23.976 A:middle
advanced platform for machine

01:23:23.976 --> 01:23:25.836 A:middle
learning models, and building

01:23:25.836 --> 01:23:27.386 A:middle
Core ML models has never been

01:23:27.386 --> 01:23:30.256 A:middle
easier with Create ML, our

01:23:30.256 --> 01:23:31.956 A:middle
framework designed to help all

01:23:31.956 --> 01:23:34.036 A:middle
of you build models with just a

01:23:34.096 --> 01:23:35.156 A:middle
few lines of code.

01:23:36.086 --> 01:23:36.976 A:middle
And this year we're taking

01:23:36.976 --> 01:23:38.506 A:middle
Create ML even further.

01:23:39.036 --> 01:23:41.026 A:middle
It's now a macOS app that lets

01:23:41.026 --> 01:23:42.416 A:middle
you build models with zero code

01:23:42.416 --> 01:23:42.926 A:middle
right from your Mac.

01:23:45.516 --> 01:23:50.586 A:middle
[ Applause ]

01:23:51.086 --> 01:23:51.956 A:middle
You can choose from many

01:23:51.956 --> 01:23:53.746 A:middle
different model templates to fit

01:23:53.746 --> 01:23:54.196 A:middle
your data.

01:23:54.456 --> 01:23:55.936 A:middle
You can build multiple models

01:23:55.936 --> 01:23:57.556 A:middle
with different datasets and

01:23:57.556 --> 01:23:59.086 A:middle
define the parameters for each

01:23:59.176 --> 01:24:00.236 A:middle
of them.

01:23:59.176 --> 01:24:00.236 A:middle
of them.

01:24:00.566 --> 01:24:02.306 A:middle
You get real-time feedback on

01:24:02.306 --> 01:24:03.126 A:middle
model training.

01:24:04.116 --> 01:24:06.046 A:middle
And Create ML supports transfer

01:24:06.046 --> 01:24:07.756 A:middle
learning for tasks like image

01:24:07.756 --> 01:24:09.846 A:middle
classification or text analysis.

01:24:10.496 --> 01:24:12.056 A:middle
This speeds up training since

01:24:12.056 --> 01:24:13.646 A:middle
you need very little data and

01:24:13.646 --> 01:24:15.506 A:middle
can leverage Apple's optimized

01:24:15.506 --> 01:24:17.296 A:middle
and heavily pre-trained models.

01:24:18.816 --> 01:24:20.946 A:middle
And you get to experiment and

01:24:20.986 --> 01:24:21.916 A:middle
preview the models.

01:24:22.476 --> 01:24:23.626 A:middle
So for example, you can get

01:24:23.626 --> 01:24:25.376 A:middle
predictions for images by using

01:24:25.376 --> 01:24:26.976 A:middle
your iPhone's camera with

01:24:27.056 --> 01:24:29.826 A:middle
continuity on your Mac.

01:24:30.116 --> 01:24:31.786 A:middle
Or you can use the microphone on

01:24:31.786 --> 01:24:33.126 A:middle
your Mac to test your sound

01:24:33.186 --> 01:24:34.216 A:middle
classification model.

01:24:35.646 --> 01:24:37.486 A:middle
So that's a ton of new stuff and

01:24:37.486 --> 01:24:39.166 A:middle
we're super excited to see what

01:24:39.166 --> 01:24:40.846 A:middle
you can do with all these

01:24:40.846 --> 01:24:42.016 A:middle
awesome new machine learning

01:24:42.076 --> 01:24:42.676 A:middle
capabilities.

01:24:43.546 --> 01:24:45.046 A:middle
In fact, we invited a few

01:24:45.046 --> 01:24:46.426 A:middle
developers to try out all the

01:24:46.426 --> 01:24:47.776 A:middle
new stuff and we've seen some

01:24:47.776 --> 01:24:49.426 A:middle
amazing results.

01:24:50.256 --> 01:24:53.686 A:middle
One in particular was so cool we

01:24:53.686 --> 01:24:54.816 A:middle
decided we had to share it with

01:24:54.816 --> 01:24:55.096 A:middle
you.

01:24:55.556 --> 01:24:57.386 A:middle
So please welcome Ben Harroway

01:24:57.616 --> 01:24:59.366 A:middle
from Lumen Digital to give you a

01:24:59.366 --> 01:25:00.916 A:middle
preview of his new app

01:24:59.366 --> 01:25:00.916 A:middle
preview of his new app

01:25:00.916 --> 01:25:01.706 A:middle
NoisyBook.

01:25:02.516 --> 01:25:06.686 A:middle
[ Applause ]

01:25:07.186 --> 01:25:07.746 A:middle
&gt;&gt; Thanks, Bill.

01:25:08.296 --> 01:25:10.026 A:middle
Hi, everyone, I'm Ben from Lumen

01:25:10.026 --> 01:25:11.586 A:middle
Digital and I've been working on

01:25:11.586 --> 01:25:14.286 A:middle
a brand-new app, NoisyBook.

01:25:18.156 --> 01:25:21.116 A:middle
Let me tell you a story.

01:25:21.306 --> 01:25:24.856 A:middle
Once upon a time, on a beautiful

01:25:24.856 --> 01:25:27.536 A:middle
meadow lived a boy called Jack

01:25:27.946 --> 01:25:31.576 A:middle
and his cow Daisy.

01:25:31.756 --> 01:25:32.446 A:middle
Daisy.

01:25:34.016 --> 01:25:35.046 A:middle
[ Cow mooing ]

01:25:35.046 --> 01:25:37.006 A:middle
A mysterious man gave them some

01:25:37.006 --> 01:25:39.116 A:middle
magic beans which grew into a

01:25:39.116 --> 01:25:41.436 A:middle
giant beanstalk, high into the

01:25:41.436 --> 01:25:41.796 A:middle
clouds.

01:25:44.016 --> 01:25:45.286 A:middle
[ Mystical music ]

01:25:45.286 --> 01:25:46.396 A:middle
Okay, I think everybody knows

01:25:46.396 --> 01:25:47.266 A:middle
this story.

01:25:47.266 --> 01:25:48.666 A:middle
Let's try something really

01:25:48.666 --> 01:25:49.116 A:middle
different.

01:25:50.306 --> 01:25:53.086 A:middle
Suddenly an exploding chicken

01:25:55.126 --> 01:25:56.946 A:middle
and his friend the golden tiger

01:25:56.946 --> 01:26:00.516 A:middle
[growling] jumped into their

01:25:56.946 --> 01:26:00.516 A:middle
[growling] jumped into their

01:26:00.516 --> 01:26:04.406 A:middle
helicopter [whirring] and flew

01:26:04.406 --> 01:26:06.976 A:middle
into the forest.

01:26:07.016 --> 01:26:08.046 A:middle
[ Crickets and bird sounds ]

01:26:08.046 --> 01:26:09.376 A:middle
And of course, guess what?

01:26:09.886 --> 01:26:11.446 A:middle
They all lived happily ever

01:26:12.666 --> 01:26:12.976 A:middle
after.

01:26:13.016 --> 01:26:14.126 A:middle
[ Music ]

01:26:14.126 --> 01:26:14.193 A:middle
&gt;&gt; Yay.

01:26:15.086 --> 01:26:16.516 A:middle
&gt;&gt; Can you make animal noises

01:26:16.516 --> 01:26:19.056 A:middle
you heard in the story?

01:26:19.146 --> 01:26:20.136 A:middle
&gt;&gt; Okay, we've had some fun.

01:26:20.326 --> 01:26:22.446 A:middle
Now NoisyBook wants us to repeat

01:26:22.446 --> 01:26:23.666 A:middle
some of the animal noises that

01:26:23.666 --> 01:26:25.336 A:middle
we heard during the story.

01:26:25.866 --> 01:26:27.416 A:middle
I think we heard a cow in this

01:26:27.466 --> 01:26:28.536 A:middle
story, so let's try this.

01:26:29.566 --> 01:26:32.336 A:middle
Moo. There he is.

01:26:32.726 --> 01:26:34.076 A:middle
I really cannot believe I'm

01:26:34.076 --> 01:26:35.876 A:middle
standing here making animal

01:26:35.876 --> 01:26:37.666 A:middle
noises in front of all of these

01:26:37.666 --> 01:26:38.306 A:middle
people.

01:26:39.126 --> 01:26:41.016 A:middle
Mad. But how amazing, the app

01:26:41.206 --> 01:26:43.056 A:middle
has used a sound classification

01:26:43.056 --> 01:26:45.336 A:middle
model to actually recognize that

01:26:45.336 --> 01:26:46.636 A:middle
noise and acknowledge it.

01:26:48.326 --> 01:26:49.656 A:middle
You likely also noticed

01:26:50.036 --> 01:26:51.526 A:middle
NoisyBook was able to work with

01:26:51.566 --> 01:26:53.556 A:middle
both traditional stories and

01:26:53.686 --> 01:26:55.486 A:middle
stories straight from our own

01:26:55.486 --> 01:26:56.396 A:middle
imaginations.

01:26:56.766 --> 01:26:57.716 A:middle
It's super powerful.

01:26:58.516 --> 01:27:00.026 A:middle
And thanks to the new features

01:26:58.516 --> 01:27:00.026 A:middle
And thanks to the new features

01:27:00.026 --> 01:27:02.906 A:middle
of speech, sound and Core ML in

01:27:02.906 --> 01:27:06.516 A:middle
iOS 13 and Create ML, this is

01:27:06.516 --> 01:27:08.166 A:middle
all happening entirely

01:27:08.196 --> 01:27:08.766 A:middle
on-device.

01:27:09.766 --> 01:27:11.086 A:middle
It's all happening in real time

01:27:11.416 --> 01:27:12.306 A:middle
and it's running through a

01:27:12.306 --> 01:27:13.706 A:middle
natural language model that I've

01:27:13.866 --> 01:27:16.036 A:middle
trained on over 90,000 lines of

01:27:16.036 --> 01:27:16.206 A:middle
text.

01:27:17.146 --> 01:27:19.886 A:middle
And thanks to these features,

01:27:20.506 --> 01:27:21.716 A:middle
I've been able to take an idea

01:27:21.716 --> 01:27:22.866 A:middle
that I've struggled with for

01:27:22.866 --> 01:27:24.666 A:middle
around two years and really

01:27:24.666 --> 01:27:26.146 A:middle
implement some of these magical

01:27:26.146 --> 01:27:27.596 A:middle
new features in just a couple of

01:27:27.656 --> 01:27:27.936 A:middle
days.

01:27:29.136 --> 01:27:30.696 A:middle
I'm super proud of it and I do

01:27:30.696 --> 01:27:31.896 A:middle
hope that you'll remember to

01:27:31.896 --> 01:27:33.256 A:middle
check out NoisyBook when it

01:27:33.256 --> 01:27:34.896 A:middle
lands on the App Store later

01:27:34.896 --> 01:27:35.706 A:middle
this year.

01:27:35.706 --> 01:27:35.976 A:middle
Thank you.

01:27:36.516 --> 01:27:43.686 A:middle
[ Applause ]

01:27:44.186 --> 01:27:44.636 A:middle
&gt;&gt; Thanks, Ben.

01:27:45.366 --> 01:27:46.596 A:middle
That was really cool.

01:27:46.596 --> 01:27:48.556 A:middle
I know my kids are going to love

01:27:49.426 --> 01:27:49.493 A:middle
it.

01:27:50.256 --> 01:27:52.266 A:middle
Now one of the biggest uses of

01:27:52.266 --> 01:27:54.216 A:middle
machine learning at Apple is

01:27:54.296 --> 01:27:54.826 A:middle
Siri.

01:27:55.556 --> 01:27:57.916 A:middle
Siri is by far the world's most

01:27:57.916 --> 01:27:59.586 A:middle
popular intelligent assistant

01:27:59.976 --> 01:28:02.176 A:middle
with over 500 million monthly

01:27:59.976 --> 01:28:02.176 A:middle
with over 500 million monthly

01:28:02.176 --> 01:28:05.156 A:middle
active devices, making over 15

01:28:05.156 --> 01:28:06.666 A:middle
billion requests.

01:28:07.286 --> 01:28:09.176 A:middle
These are staggering numbers.

01:28:09.766 --> 01:28:11.636 A:middle
And Siri works across all of

01:28:11.636 --> 01:28:12.686 A:middle
Apple's devices.

01:28:13.396 --> 01:28:15.226 A:middle
With Siri, your users can

01:28:15.226 --> 01:28:17.076 A:middle
interact with your apps in new

01:28:17.076 --> 01:28:17.596 A:middle
ways.

01:28:18.166 --> 01:28:19.566 A:middle
On the go, with Air Pods,

01:28:20.266 --> 01:28:22.296 A:middle
hands-free from across the room,

01:28:22.626 --> 01:28:24.396 A:middle
or even while in the car.

01:28:25.046 --> 01:28:27.066 A:middle
And thousands of apps are now

01:28:27.116 --> 01:28:29.146 A:middle
integrated with Siri through

01:28:29.486 --> 01:28:30.416 A:middle
Siri Shortcuts.

01:28:31.466 --> 01:28:33.196 A:middle
We built Siri Shortcuts to allow

01:28:33.356 --> 01:28:35.136 A:middle
you to expose the capabilities

01:28:35.136 --> 01:28:37.196 A:middle
you already have in your apps

01:28:37.666 --> 01:28:39.746 A:middle
with very little work and in a

01:28:39.746 --> 01:28:41.936 A:middle
discoverable way for your users.

01:28:43.026 --> 01:28:44.186 A:middle
You can make your shortcuts

01:28:44.226 --> 01:28:46.016 A:middle
discoverable using the Add to

01:28:46.106 --> 01:28:48.016 A:middle
Siri button, educating your

01:28:48.016 --> 01:28:49.726 A:middle
users on how they can use your

01:28:49.966 --> 01:28:50.676 A:middle
app with voice.

01:28:51.766 --> 01:28:52.936 A:middle
That matters because voice

01:28:52.936 --> 01:28:54.436 A:middle
functionality can otherwise be

01:28:54.436 --> 01:28:55.926 A:middle
really hard to discover.

01:28:56.906 --> 01:28:58.396 A:middle
And we've simplified setup so

01:28:58.396 --> 01:29:00.216 A:middle
that the user no longer needs to

01:28:58.396 --> 01:29:00.216 A:middle
that the user no longer needs to

01:29:00.216 --> 01:29:01.326 A:middle
record a phrase.

01:29:01.326 --> 01:29:03.726 A:middle
You suggest a phrase and they

01:29:03.726 --> 01:29:05.036 A:middle
add it with a tap.

01:29:06.516 --> 01:29:11.556 A:middle
[ Applause ]

01:29:12.056 --> 01:29:12.906 A:middle
And the biggest request we had

01:29:12.906 --> 01:29:14.236 A:middle
this year was to support

01:29:14.236 --> 01:29:16.016 A:middle
parameters in Shortcuts.

01:29:16.586 --> 01:29:20.566 A:middle
So we've made Shortcuts

01:29:20.916 --> 01:29:22.906 A:middle
conversational which allows

01:29:22.966 --> 01:29:24.596 A:middle
users to interact with your app

01:29:24.966 --> 01:29:26.766 A:middle
through questions in Siri.

01:29:27.606 --> 01:29:28.816 A:middle
So for example, if I'm choosing

01:29:28.816 --> 01:29:29.986 A:middle
what to cook, I could run a

01:29:29.986 --> 01:29:31.936 A:middle
Shortcut with Pana, my recipes

01:29:31.936 --> 01:29:33.736 A:middle
app, and see a list of all my

01:29:33.736 --> 01:29:34.296 A:middle
favorites.

01:29:34.946 --> 01:29:36.476 A:middle
When I choose from the list, it

01:29:36.476 --> 01:29:37.966 A:middle
takes me to the recipe and

01:29:37.966 --> 01:29:38.746 A:middle
starts playing.

01:29:39.386 --> 01:29:42.306 A:middle
And this year the Shortcuts app

01:29:42.306 --> 01:29:45.376 A:middle
is built into iOS and iPadOS,

01:29:46.326 --> 01:29:47.896 A:middle
which means that every user will

01:29:47.896 --> 01:29:49.286 A:middle
have an opportunity to try it

01:29:49.286 --> 01:29:49.466 A:middle
out.

01:29:49.466 --> 01:29:52.566 A:middle
And the app is now the home for

01:29:52.566 --> 01:29:54.446 A:middle
shortcuts from your apps too.

01:29:55.816 --> 01:29:57.906 A:middle
And by popular request, we're

01:29:57.906 --> 01:29:59.976 A:middle
adding support for automation.

01:30:00.516 --> 01:30:05.976 A:middle
[ Applause ]

01:30:06.476 --> 01:30:08.146 A:middle
Which allows users to set

01:30:08.146 --> 01:30:09.906 A:middle
specific triggers for when to

01:30:09.906 --> 01:30:11.286 A:middle
run any shortcut.

01:30:12.106 --> 01:30:13.726 A:middle
And there's plenty of options to

01:30:13.726 --> 01:30:14.536 A:middle
choose from.

01:30:14.806 --> 01:30:16.016 A:middle
You can trigger a shortcut based

01:30:16.016 --> 01:30:18.056 A:middle
on time of day, when you start a

01:30:18.056 --> 01:30:19.646 A:middle
workout on your Apple Watch,

01:30:19.956 --> 01:30:21.456 A:middle
when you connect to CarPlay and

01:30:21.516 --> 01:30:22.346 A:middle
many more.

01:30:24.006 --> 01:30:26.086 A:middle
And the editor now enables full

01:30:26.086 --> 01:30:27.586 A:middle
configuration of your app's

01:30:27.616 --> 01:30:29.416 A:middle
actions, including the ability

01:30:29.416 --> 01:30:32.026 A:middle
to pass information in or out of

01:30:32.026 --> 01:30:33.936 A:middle
your action through parameters.

01:30:34.866 --> 01:30:36.436 A:middle
With this, your app's actions

01:30:36.486 --> 01:30:38.016 A:middle
can be combined with actions

01:30:38.016 --> 01:30:39.956 A:middle
from other apps in multi-step

01:30:39.956 --> 01:30:40.606 A:middle
shortcuts.

01:30:42.726 --> 01:30:43.836 A:middle
Let's say you need to get dinner

01:30:43.836 --> 01:30:44.626 A:middle
for the family.

01:30:44.946 --> 01:30:46.726 A:middle
The kids are hungry, you need it

01:30:46.726 --> 01:30:47.366 A:middle
fast.

01:30:47.986 --> 01:30:48.996 A:middle
You could have a shortcut that

01:30:48.996 --> 01:30:50.666 A:middle
uses the Caviar app that lets

01:30:50.666 --> 01:30:52.586 A:middle
you choose a restaurant, choose

01:30:53.516 --> 01:30:59.766 A:middle
a meal, place the order and then

01:30:59.766 --> 01:31:02.046 A:middle
text the whole family with

01:30:59.766 --> 01:31:02.046 A:middle
text the whole family with

01:31:02.046 --> 01:31:03.556 A:middle
what's for dinner and when it

01:31:03.556 --> 01:31:04.246 A:middle
will arrive.

01:31:05.246 --> 01:31:06.786 A:middle
That's combining the power of

01:31:06.786 --> 01:31:09.106 A:middle
your apps with Siri Shortcuts to

01:31:09.106 --> 01:31:11.736 A:middle
make everyday tasks really easy.

01:31:13.466 --> 01:31:13.976 A:middle
And of course --

01:31:14.516 --> 01:31:18.636 A:middle
[ Applause ]

01:31:19.136 --> 01:31:20.416 A:middle
And of course Shortcuts work

01:31:20.416 --> 01:31:23.416 A:middle
across iPhone, iPad, Apple Watch

01:31:23.736 --> 01:31:25.096 A:middle
and HomePod too.

01:31:25.616 --> 01:31:27.716 A:middle
And that's our update for Siri.

01:31:28.516 --> 01:31:34.546 A:middle
[ Applause ]

01:31:35.046 --> 01:31:35.746 A:middle
Now I'd like to invite Jeff to

01:31:35.746 --> 01:31:36.566 A:middle
tell you about the latest

01:31:36.566 --> 01:31:38.416 A:middle
advances in augmented reality.

01:31:38.946 --> 01:31:39.316 A:middle
Thank you.

01:31:40.516 --> 01:31:42.606 A:middle
[ Applause ]

01:31:43.106 --> 01:31:43.546 A:middle
&gt;&gt; Thanks, Bill.

01:31:43.546 --> 01:31:44.886 A:middle
I am thrilled to be here today

01:31:44.886 --> 01:31:46.246 A:middle
to talk about augmented reality.

01:31:47.276 --> 01:31:49.136 A:middle
AR helps you visualize things

01:31:49.136 --> 01:31:51.496 A:middle
that are difficult, expensive or

01:31:51.496 --> 01:31:53.056 A:middle
impossible to do otherwise.

01:31:53.686 --> 01:31:55.516 A:middle
And since introducing AR Kit,

01:31:55.836 --> 01:31:57.846 A:middle
we've seen amazing growth in

01:31:58.026 --> 01:31:58.746 A:middle
applications.

01:31:59.296 --> 01:32:02.296 A:middle
One may think of AR as only for

01:31:59.296 --> 01:32:02.296 A:middle
One may think of AR as only for

01:32:02.336 --> 01:32:04.736 A:middle
entertainment, but we've seen

01:32:04.736 --> 01:32:06.576 A:middle
great applications in education,

01:32:06.986 --> 01:32:09.636 A:middle
enterprise, commerce and more.

01:32:11.106 --> 01:32:13.026 A:middle
Commerce is a particularly

01:32:13.426 --> 01:32:15.546 A:middle
impressive use case with Home

01:32:15.546 --> 01:32:17.126 A:middle
Depot, Target and Wayfair all

01:32:17.126 --> 01:32:19.856 A:middle
having tens of thousands of

01:32:19.856 --> 01:32:21.476 A:middle
products available to preview in

01:32:21.476 --> 01:32:21.756 A:middle
AR.

01:32:21.756 --> 01:32:26.206 A:middle
AR Kit hosts the USDZ file

01:32:26.306 --> 01:32:28.926 A:middle
format and Quick Look together,

01:32:29.846 --> 01:32:31.596 A:middle
make the world's first mass

01:32:31.846 --> 01:32:33.436 A:middle
market augmented reality

01:32:33.536 --> 01:32:34.476 A:middle
commerce solution.

01:32:34.766 --> 01:32:37.156 A:middle
In fact, Wayfair is seeing more

01:32:37.156 --> 01:32:39.226 A:middle
than a threefold increase in

01:32:39.276 --> 01:32:41.476 A:middle
purchasing when folks view their

01:32:41.476 --> 01:32:43.486 A:middle
products in augmented reality.

01:32:45.316 --> 01:32:46.806 A:middle
And we love that this is a real

01:32:46.806 --> 01:32:47.566 A:middle
business use case.

01:32:47.566 --> 01:32:48.716 A:middle
This is a great real business

01:32:48.716 --> 01:32:50.536 A:middle
use case for augmented reality

01:32:50.536 --> 01:32:51.046 A:middle
in commerce.

01:32:52.476 --> 01:32:53.386 A:middle
We'd like to continue this

01:32:53.386 --> 01:32:55.006 A:middle
momentum by announcing that

01:32:55.166 --> 01:32:56.316 A:middle
Apple Pay will be integrated

01:32:56.316 --> 01:32:58.806 A:middle
directly with AR Quick Look this

01:32:58.836 --> 01:32:59.356 A:middle
fall.

01:32:59.606 --> 01:33:00.866 A:middle
This makes it easier for

01:32:59.606 --> 01:33:00.866 A:middle
This makes it easier for

01:33:00.946 --> 01:33:03.636 A:middle
consumers to try on and buy

01:33:04.276 --> 01:33:05.486 A:middle
items like these glasses,

01:33:05.976 --> 01:33:07.406 A:middle
directly from augmented reality.

01:33:07.506 --> 01:33:12.366 A:middle
AR Kit for iOS and iPadOS are

01:33:12.916 --> 01:33:16.896 A:middle
the world's largest augmented

01:33:16.896 --> 01:33:18.746 A:middle
reality platform with hundreds

01:33:18.746 --> 01:33:20.986 A:middle
of millions of enabled devices.

01:33:21.046 --> 01:33:22.946 A:middle
And we've heard from many

01:33:22.946 --> 01:33:24.016 A:middle
developers, they love to take

01:33:24.016 --> 01:33:25.196 A:middle
advantage of this great

01:33:25.196 --> 01:33:27.236 A:middle
opportunity but may not be sure

01:33:27.236 --> 01:33:27.746 A:middle
where to start.

01:33:28.376 --> 01:33:29.806 A:middle
Or 3D can be a little bit

01:33:29.806 --> 01:33:31.096 A:middle
intimidating if you've never

01:33:31.156 --> 01:33:31.676 A:middle
used it before.

01:33:31.676 --> 01:33:33.646 A:middle
Well, we've been listening and

01:33:33.816 --> 01:33:35.576 A:middle
we're really excited to announce

01:33:36.346 --> 01:33:38.376 A:middle
three technologies that make it

01:33:38.376 --> 01:33:40.726 A:middle
much easier to develop augmented

01:33:40.726 --> 01:33:41.806 A:middle
reality applications.

01:33:42.846 --> 01:33:45.916 A:middle
AR Kit, RealityKit and Reality

01:33:45.916 --> 01:33:47.816 A:middle
Composer together provide the

01:33:48.026 --> 01:33:50.336 A:middle
frameworks and tools you need to

01:33:50.336 --> 01:33:51.646 A:middle
quickly and easily develop

01:33:51.946 --> 01:33:53.786 A:middle
augmented reality applications

01:33:55.206 --> 01:33:57.136 A:middle
and experiences.

01:33:57.136 --> 01:33:58.526 A:middle
Starting with Reality Composer,

01:33:59.036 --> 01:34:00.656 A:middle
you can create compelling AR

01:33:59.036 --> 01:34:00.656 A:middle
you can create compelling AR

01:34:00.656 --> 01:34:02.456 A:middle
experiences even if you've never

01:34:02.456 --> 01:34:03.706 A:middle
worked with 3D before.

01:34:03.966 --> 01:34:05.766 A:middle
It provides an intuitive, what

01:34:05.766 --> 01:34:06.626 A:middle
you see is what you get

01:34:06.626 --> 01:34:08.856 A:middle
interface that integrates

01:34:09.226 --> 01:34:11.166 A:middle
seamlessly with Xcode.

01:34:12.336 --> 01:34:13.326 A:middle
And to show you Reality

01:34:13.326 --> 01:34:14.796 A:middle
Composer, I'd like to invite one

01:34:14.796 --> 01:34:16.276 A:middle
of my colleagues, Shrudi, up to

01:34:16.276 --> 01:34:16.736 A:middle
the stage.

01:34:17.516 --> 01:34:22.636 A:middle
[ Applause ]

01:34:23.136 --> 01:34:23.956 A:middle
&gt;&gt; Thank you, Jeff.

01:34:24.426 --> 01:34:25.206 A:middle
Happy to be here.

01:34:25.206 --> 01:34:27.656 A:middle
I have this great travel app

01:34:27.656 --> 01:34:29.376 A:middle
which shows some activities

01:34:29.636 --> 01:34:30.826 A:middle
offered on the main island of

01:34:30.826 --> 01:34:31.326 A:middle
Hawaii.

01:34:31.976 --> 01:34:33.696 A:middle
If the user opts for helicopter

01:34:33.696 --> 01:34:36.356 A:middle
tours, the app shows the path of

01:34:36.356 --> 01:34:37.136 A:middle
the helicopter.

01:34:37.136 --> 01:34:40.226 A:middle
How about we use AR to provide

01:34:40.226 --> 01:34:41.736 A:middle
users a better sense of the

01:34:41.736 --> 01:34:42.746 A:middle
actual tour?

01:34:42.746 --> 01:34:44.846 A:middle
I can do that by adding a button

01:34:44.846 --> 01:34:46.626 A:middle
to the existing app to launch my

01:34:46.696 --> 01:34:47.396 A:middle
AR experience.

01:34:47.946 --> 01:34:48.976 A:middle
Let's see how to do that.

01:34:49.776 --> 01:34:52.146 A:middle
First, we create a button using

01:34:52.146 --> 01:34:52.566 A:middle
SwiftUI.

01:34:53.626 --> 01:34:55.616 A:middle
Followed by adding that button

01:34:55.876 --> 01:34:57.016 A:middle
to my existing view.

01:34:58.006 --> 01:34:59.356 A:middle
Then I open an empty project

01:34:59.416 --> 01:35:01.286 A:middle
file in Reality Composer and

01:34:59.416 --> 01:35:01.286 A:middle
file in Reality Composer and

01:35:01.286 --> 01:35:02.946 A:middle
integrate it to my Xcode project

01:35:03.296 --> 01:35:05.296 A:middle
by simply dragging and dropping

01:35:05.296 --> 01:35:06.216 A:middle
it in Xcode.

01:35:06.856 --> 01:35:09.946 A:middle
To load my AR scene from this

01:35:09.946 --> 01:35:11.886 A:middle
Reality Composer project file, I

01:35:12.106 --> 01:35:14.796 A:middle
import RealityKit and then

01:35:14.796 --> 01:35:17.526 A:middle
create a new view for AR.

01:35:18.016 --> 01:35:18.886 A:middle
Oops. Sorry.

01:35:19.116 --> 01:35:21.746 A:middle
Create a new view for AR using

01:35:21.746 --> 01:35:22.186 A:middle
SwiftUI.

01:35:22.356 --> 01:35:25.736 A:middle
And that's all the code you need

01:35:26.206 --> 01:35:30.746 A:middle
to add an AR experience to your

01:35:31.136 --> 01:35:31.706 A:middle
existing app.

01:35:31.706 --> 01:35:33.166 A:middle
Moving on to the fun part of

01:35:33.166 --> 01:35:34.576 A:middle
creating my AR scene with

01:35:34.576 --> 01:35:35.496 A:middle
Reality Composer.

01:35:36.106 --> 01:35:37.926 A:middle
I open my empty Reality project

01:35:38.986 --> 01:35:40.836 A:middle
and start by loading a custom

01:35:40.836 --> 01:35:42.536 A:middle
USTZ of the Hawaii model.

01:35:47.046 --> 01:35:49.676 A:middle
Sweet. Next I'd like to mark the

01:35:49.676 --> 01:35:51.256 A:middle
beginning of my helicopter tour.

01:35:51.506 --> 01:35:53.366 A:middle
For that I can use Reality

01:35:53.366 --> 01:35:54.956 A:middle
Composer's built-in content

01:35:54.956 --> 01:35:57.536 A:middle
library which offers hundreds of

01:35:57.536 --> 01:35:58.996 A:middle
professional-grade 3D content to

01:35:58.996 --> 01:35:59.476 A:middle
developers.

01:35:59.476 --> 01:36:02.976 A:middle
I'll use a simple sphere.

01:35:59.476 --> 01:36:02.976 A:middle
I'll use a simple sphere.

01:36:08.046 --> 01:36:09.356 A:middle
I can change the content's look,

01:36:09.776 --> 01:36:11.276 A:middle
by applying a different material

01:36:11.276 --> 01:36:12.206 A:middle
to it.

01:36:14.086 --> 01:36:16.736 A:middle
As you can see, placing content

01:36:16.736 --> 01:36:18.306 A:middle
in 3D is pretty simple and

01:36:18.306 --> 01:36:20.246 A:middle
intuitive with Reality Composer.

01:36:21.616 --> 01:36:24.106 A:middle
Let's see what else we can do

01:36:24.106 --> 01:36:24.196 A:middle
here.

01:36:24.196 --> 01:36:25.646 A:middle
How about adding a cool fading

01:36:25.646 --> 01:36:26.746 A:middle
effect to the scene when the

01:36:26.926 --> 01:36:27.446 A:middle
scene starts.

01:36:27.526 --> 01:36:29.886 A:middle
I can do that by opening the

01:36:29.886 --> 01:36:31.986 A:middle
Behaviors panel and creating a

01:36:31.986 --> 01:36:34.336 A:middle
custom behavior which gets

01:36:34.336 --> 01:36:35.956 A:middle
triggered when the scene starts.

01:36:35.956 --> 01:36:39.806 A:middle
I first add an action to hide

01:36:39.806 --> 01:36:41.216 A:middle
all the content in the scene.

01:36:41.706 --> 01:36:45.666 A:middle
Then the scene starts, and then

01:36:45.666 --> 01:36:47.316 A:middle
add another action to make all

01:36:47.316 --> 01:36:49.286 A:middle
the content appear after a

01:36:49.286 --> 01:36:50.096 A:middle
certain duration.

01:36:50.096 --> 01:36:52.286 A:middle
How about we preview it right

01:36:52.286 --> 01:36:52.916 A:middle
here?

01:36:53.286 --> 01:36:58.086 A:middle
Awesome. Developing AR on Mac is

01:36:58.086 --> 01:37:01.116 A:middle
convenient, but it poses the

01:36:58.086 --> 01:37:01.116 A:middle
convenient, but it poses the

01:37:01.166 --> 01:37:02.626 A:middle
challenge of guessing the

01:37:02.626 --> 01:37:05.086 A:middle
content scale and look when

01:37:05.086 --> 01:37:06.176 A:middle
placed in real world.

01:37:06.726 --> 01:37:08.016 A:middle
That's why we created Reality

01:37:08.016 --> 01:37:11.956 A:middle
Composer for macOS as well as

01:37:11.956 --> 01:37:13.266 A:middle
iPadOS and iOS to remove the

01:37:13.266 --> 01:37:14.186 A:middle
guesswork out of development.

01:37:14.186 --> 01:37:17.226 A:middle
So I'll hand this off to Jeff to

01:37:17.226 --> 01:37:18.976 A:middle
see what we have so far on an

01:37:18.976 --> 01:37:19.176 A:middle
iPad.

01:37:20.866 --> 01:37:21.896 A:middle
&gt;&gt; Thanks very much, Shrudi.

01:37:22.426 --> 01:37:25.006 A:middle
So this is Reality Composer for

01:37:25.006 --> 01:37:25.386 A:middle
the iPad.

01:37:27.146 --> 01:37:29.236 A:middle
It has the same great features

01:37:29.236 --> 01:37:30.456 A:middle
that you see in the Reality

01:37:30.506 --> 01:37:31.256 A:middle
Composer for the Mac.

01:37:31.426 --> 01:37:32.376 A:middle
And we can take the seen that

01:37:32.376 --> 01:37:33.936 A:middle
Shrudi handed off and finish it

01:37:33.936 --> 01:37:34.996 A:middle
out with our final artwork.

01:37:35.466 --> 01:37:37.066 A:middle
So we've had someone create with

01:37:37.066 --> 01:37:39.736 A:middle
Adobe Arrow our final file or

01:37:39.736 --> 01:37:41.116 A:middle
our final artwork, and we'll put

01:37:41.116 --> 01:37:41.986 A:middle
it into the scene.

01:37:41.986 --> 01:37:43.206 A:middle
So I'm going to take the proxy

01:37:43.206 --> 01:37:43.996 A:middle
art that Shrudi had.

01:37:43.996 --> 01:37:46.176 A:middle
I'm going to replace that with

01:37:46.176 --> 01:37:46.846 A:middle
our new artwork.

01:37:46.846 --> 01:37:48.036 A:middle
Let me check to see if that's

01:37:48.036 --> 01:37:48.666 A:middle
the right thing.

01:37:48.736 --> 01:37:49.316 A:middle
Fantastic.

01:37:49.366 --> 01:37:51.346 A:middle
That is our final helicopter.

01:37:51.566 --> 01:37:52.906 A:middle
And I also want to bring in the

01:37:52.936 --> 01:37:54.396 A:middle
animation that goes with that.

01:37:54.466 --> 01:37:55.256 A:middle
That's super easy.

01:37:55.256 --> 01:37:56.266 A:middle
If you remember, she created

01:37:56.266 --> 01:37:57.826 A:middle
that behavior, so we're going to

01:37:57.826 --> 01:37:58.796 A:middle
look at that behavior and all

01:37:58.796 --> 01:37:59.646 A:middle
we're going to do is add an

01:37:59.646 --> 01:38:01.406 A:middle
additional action.

01:37:59.646 --> 01:38:01.406 A:middle
additional action.

01:38:03.136 --> 01:38:05.396 A:middle
So we look for USDZ animation

01:38:05.396 --> 01:38:06.186 A:middle
which is bringing in the

01:38:06.186 --> 01:38:07.046 A:middle
animation that went with the

01:38:07.096 --> 01:38:07.466 A:middle
file.

01:38:08.876 --> 01:38:09.646 A:middle
Fantastic.

01:38:09.796 --> 01:38:10.286 A:middle
Looks good.

01:38:10.286 --> 01:38:12.226 A:middle
Let's preview that.

01:38:12.956 --> 01:38:15.496 A:middle
Great. So hide our Behaviors

01:38:15.496 --> 01:38:15.966 A:middle
tab.

01:38:16.086 --> 01:38:17.346 A:middle
That looks like what we want.

01:38:19.216 --> 01:38:20.786 A:middle
Perfect. Let's preview this in

01:38:20.786 --> 01:38:22.326 A:middle
AR, but you can do it with the

01:38:22.496 --> 01:38:22.816 A:middle
iPad.

01:38:25.166 --> 01:38:27.356 A:middle
Wow. Let's try that again.

01:38:34.046 --> 01:38:34.396 A:middle
Fantastic.

01:38:34.396 --> 01:38:35.536 A:middle
That's exactly what I wanted it

01:38:35.536 --> 01:38:36.026 A:middle
to look like.

01:38:36.026 --> 01:38:37.276 A:middle
And we can also play that.

01:38:39.766 --> 01:38:40.916 A:middle
Perfect. We have the animation

01:38:40.916 --> 01:38:42.176 A:middle
of the helicopter touring the

01:38:42.176 --> 01:38:42.376 A:middle
island.

01:38:42.636 --> 01:38:43.636 A:middle
That will look great in our

01:38:43.706 --> 01:38:44.656 A:middle
travel application.

01:38:49.456 --> 01:38:50.526 A:middle
So that's Reality Composer for

01:38:50.526 --> 01:38:50.836 A:middle
the iPad.

01:38:51.926 --> 01:38:53.606 A:middle
And you're going to love how you

01:38:53.606 --> 01:38:55.736 A:middle
can have the same great ease of

01:38:55.736 --> 01:38:57.466 A:middle
use and seamless experience

01:38:57.606 --> 01:38:59.476 A:middle
between macOS, iPadOS and iOS

01:38:59.616 --> 01:39:00.766 A:middle
with Reality Composer.

01:38:59.616 --> 01:39:00.766 A:middle
with Reality Composer.

01:39:01.516 --> 01:39:08.576 A:middle
[ Applause ]

01:39:09.076 --> 01:39:09.836 A:middle
Now RealityKit.

01:39:10.066 --> 01:39:11.146 A:middle
RealityKit is a modern

01:39:11.296 --> 01:39:12.856 A:middle
high-performance 3D engine

01:39:12.856 --> 01:39:15.076 A:middle
designed from the ground up for

01:39:15.076 --> 01:39:16.606 A:middle
augmented reality rendering and

01:39:16.606 --> 01:39:17.176 A:middle
simulation.

01:39:18.056 --> 01:39:19.236 A:middle
And because it's delivered as a

01:39:19.376 --> 01:39:20.916 A:middle
framework, it's very easy for

01:39:20.916 --> 01:39:22.606 A:middle
all of you to take your 2D apps

01:39:22.606 --> 01:39:24.536 A:middle
and extend them into 3D.

01:39:25.546 --> 01:39:26.876 A:middle
RealityKit uses modern

01:39:26.966 --> 01:39:28.296 A:middle
visibly-based rendering and

01:39:28.296 --> 01:39:28.736 A:middle
materials.

01:39:29.536 --> 01:39:30.816 A:middle
It is a data-driven rendering

01:39:30.876 --> 01:39:31.996 A:middle
system and a fully

01:39:31.996 --> 01:39:35.456 A:middle
multi-threaded renderer that's

01:39:35.456 --> 01:39:37.116 A:middle
highly optimized for Apple's

01:39:37.116 --> 01:39:37.666 A:middle
GPUs.

01:39:39.466 --> 01:39:41.426 A:middle
And also, really importantly,

01:39:41.466 --> 01:39:43.046 A:middle
we've integrated AR Kit scene

01:39:43.046 --> 01:39:45.236 A:middle
understanding into RealityKit.

01:39:45.936 --> 01:39:48.486 A:middle
Which means as AR Kit leans more

01:39:48.486 --> 01:39:49.736 A:middle
about the environment, it

01:39:49.856 --> 01:39:50.986 A:middle
synchronizes this to your

01:39:50.986 --> 01:39:52.596 A:middle
virtual scene automatically.

01:39:52.686 --> 01:39:55.996 A:middle
We saw RealityKit in action this

01:39:55.996 --> 01:39:56.366 A:middle
morning.

01:39:57.116 --> 01:39:58.166 A:middle
Let's take a closer look.

01:39:59.586 --> 01:40:00.436 A:middle
Let's see what's really going

01:39:59.586 --> 01:40:00.436 A:middle
Let's see what's really going

01:40:00.436 --> 01:40:00.676 A:middle
on.

01:40:01.876 --> 01:40:03.996 A:middle
The reality you see is based on

01:40:03.996 --> 01:40:05.086 A:middle
things like image-based

01:40:05.086 --> 01:40:07.416 A:middle
lighting, motion blur and camera

01:40:07.416 --> 01:40:09.376 A:middle
effects like depth of field and

01:40:09.376 --> 01:40:11.076 A:middle
camera noise that really blur

01:40:11.076 --> 01:40:13.016 A:middle
the line between what is reality

01:40:13.016 --> 01:40:14.096 A:middle
and what is virtual.

01:40:14.876 --> 01:40:15.956 A:middle
And you get these features with

01:40:15.956 --> 01:40:17.736 A:middle
RealityKit automatically.

01:40:20.006 --> 01:40:21.546 A:middle
You access RealityKit through a

01:40:21.546 --> 01:40:22.906 A:middle
new framework which is a native

01:40:22.906 --> 01:40:23.386 A:middle
Swift API.

01:40:23.386 --> 01:40:25.186 A:middle
It takes many advantages of the

01:40:25.186 --> 01:40:26.936 A:middle
key features of Swift to allow

01:40:26.936 --> 01:40:28.096 A:middle
you to write clear, compact

01:40:28.326 --> 01:40:28.686 A:middle
code.

01:40:30.536 --> 01:40:31.866 A:middle
Concepts Log and Rally are

01:40:31.926 --> 01:40:33.766 A:middle
directly integrated.

01:40:33.916 --> 01:40:35.596 A:middle
For example, it's easy to load

01:40:35.706 --> 01:40:37.646 A:middle
your AR assets and directly

01:40:38.006 --> 01:40:40.326 A:middle
attach them to anchors.

01:40:40.996 --> 01:40:43.146 A:middle
Protocol extensions provide easy

01:40:43.236 --> 01:40:44.606 A:middle
access to entity property which

01:40:44.606 --> 01:40:46.666 A:middle
allow you to quickly access

01:40:46.726 --> 01:40:48.696 A:middle
components such as lights or

01:40:48.696 --> 01:40:50.706 A:middle
shadows in this case and reduce

01:40:50.706 --> 01:40:51.776 A:middle
the need for runtime checks.

01:40:53.296 --> 01:40:54.366 A:middle
This also means that you're able

01:40:54.366 --> 01:40:55.726 A:middle
to work with entities in a

01:40:55.726 --> 01:40:57.006 A:middle
strongly-typed manner.

01:40:57.446 --> 01:40:58.856 A:middle
Here we're applying an angular

01:40:58.966 --> 01:41:00.156 A:middle
force to an entity that

01:40:58.966 --> 01:41:00.156 A:middle
force to an entity that

01:41:00.156 --> 01:41:00.966 A:middle
participates in physics.

01:41:00.966 --> 01:41:03.386 A:middle
And that's all the code you need

01:41:03.386 --> 01:41:03.976 A:middle
for this scene.

01:41:08.226 --> 01:41:09.496 A:middle
Last but definitely not least

01:41:09.566 --> 01:41:11.836 A:middle
today is a new version of our

01:41:11.836 --> 01:41:13.186 A:middle
augmented reality framework AR

01:41:13.436 --> 01:41:14.406 A:middle
Kit 3.

01:41:15.666 --> 01:41:17.236 A:middle
We've taken the most capable AR

01:41:17.356 --> 01:41:18.686 A:middle
platform in the world and made

01:41:18.686 --> 01:41:20.756 A:middle
it even more powerful with new

01:41:20.756 --> 01:41:22.126 A:middle
in-depth reverse features.

01:41:24.036 --> 01:41:26.076 A:middle
Since introducing AR Kit, we've

01:41:26.076 --> 01:41:27.306 A:middle
had many developers ask to be

01:41:27.306 --> 01:41:28.346 A:middle
able to use the front and back

01:41:28.486 --> 01:41:29.896 A:middle
cameras simultaneously.

01:41:30.326 --> 01:41:32.346 A:middle
Well, in AR Kit 3 you can.

01:41:32.436 --> 01:41:34.776 A:middle
So you can -- that's right, both

01:41:34.776 --> 01:41:35.966 A:middle
cameras at the same time.

01:41:36.186 --> 01:41:38.186 A:middle
[ Applause ]

01:41:38.356 --> 01:41:39.666 A:middle
This allows you to use face

01:41:39.666 --> 01:41:41.406 A:middle
tracking to drive your augmented

01:41:41.406 --> 01:41:42.936 A:middle
reality experiences directly.

01:41:44.356 --> 01:41:45.416 A:middle
And as Craig talked about this

01:41:45.416 --> 01:41:47.176 A:middle
morning, properly occluding

01:41:47.176 --> 01:41:49.506 A:middle
people in an AR scene is an

01:41:49.606 --> 01:41:50.846 A:middle
extremely tough problem.

01:41:51.076 --> 01:41:52.296 A:middle
You see it every time someone

01:41:52.296 --> 01:41:53.226 A:middle
walks in front of a virtual

01:41:53.226 --> 01:41:53.586 A:middle
object.

01:41:55.636 --> 01:41:56.816 A:middle
To solve this, we've built an

01:41:56.816 --> 01:41:57.946 A:middle
advanced machine-learning

01:41:57.946 --> 01:41:59.726 A:middle
algorithm that figures out which

01:41:59.796 --> 01:42:01.606 A:middle
pixels are a person, the depth

01:41:59.796 --> 01:42:01.606 A:middle
pixels are a person, the depth

01:42:01.736 --> 01:42:03.326 A:middle
of that person in the scene and

01:42:03.326 --> 01:42:05.826 A:middle
uses its information to allow us

01:42:05.826 --> 01:42:07.806 A:middle
to properly render the scene in

01:42:07.806 --> 01:42:08.606 A:middle
the virtual objects.

01:42:09.236 --> 01:42:10.546 A:middle
With people occlusion, entirely

01:42:10.546 --> 01:42:12.526 A:middle
new experiences like Minecraft

01:42:12.526 --> 01:42:13.706 A:middle
Earth Demo you saw this morning

01:42:13.776 --> 01:42:15.976 A:middle
are possible.

01:42:16.516 --> 01:42:20.546 A:middle
[ Applause ]

01:42:21.046 --> 01:42:21.666 A:middle
Absolutely amazing.

01:42:22.366 --> 01:42:23.696 A:middle
And finally, we built a system

01:42:23.696 --> 01:42:24.916 A:middle
that allows humans to interact

01:42:25.026 --> 01:42:27.066 A:middle
with virtual content.

01:42:27.066 --> 01:42:28.506 A:middle
AR Kit 3 is able to capture a

01:42:28.566 --> 01:42:30.786 A:middle
person's motion in real time

01:42:31.256 --> 01:42:33.176 A:middle
with just the single RGB camera

01:42:33.396 --> 01:42:34.966 A:middle
in an iPad or iPhone.

01:42:35.906 --> 01:42:37.426 A:middle
We again use a machine learned

01:42:37.846 --> 01:42:39.226 A:middle
algorithm to track the person,

01:42:39.226 --> 01:42:42.246 A:middle
building a 2D stick figure and

01:42:42.586 --> 01:42:44.706 A:middle
take that figure and then infer

01:42:44.706 --> 01:42:47.356 A:middle
a 3D motion from them or lift it

01:42:47.356 --> 01:42:48.366 A:middle
into 3D.

01:42:49.256 --> 01:42:50.796 A:middle
Both the 2D skeleton and the 3D

01:42:50.796 --> 01:42:51.536 A:middle
skeleton are available to

01:42:51.536 --> 01:42:52.146 A:middle
developers.

01:42:52.656 --> 01:42:54.436 A:middle
The 3D has over 90 articulated

01:42:54.436 --> 01:42:55.566 A:middle
joints and provides the same

01:42:55.566 --> 01:42:57.946 A:middle
ease of use as Face Kit.

01:43:01.046 --> 01:43:01.546 A:middle
So those are our new

01:43:01.546 --> 01:43:02.206 A:middle
technologies.

01:43:02.206 --> 01:43:05.836 A:middle
AR Kit 3, RealityKit, and

01:43:05.836 --> 01:43:08.436 A:middle
Reality Composer are tools and

01:43:08.486 --> 01:43:10.226 A:middle
frameworks that make it easy for

01:43:10.306 --> 01:43:14.366 A:middle
anyone, anyone, to build amazing

01:43:14.366 --> 01:43:15.226 A:middle
AR experiences.

01:43:15.226 --> 01:43:18.346 A:middle
And we'd like to do something

01:43:18.396 --> 01:43:19.656 A:middle
fun today, so we have a fun new

01:43:19.726 --> 01:43:20.786 A:middle
application at the conference.

01:43:21.396 --> 01:43:22.146 A:middle
You may have seen it,

01:43:22.146 --> 01:43:22.706 A:middle
SwiftStrike.

01:43:23.696 --> 01:43:25.036 A:middle
We're making a tabletop version

01:43:25.036 --> 01:43:26.396 A:middle
of this as a developer sample

01:43:26.396 --> 01:43:27.116 A:middle
available today.

01:43:27.206 --> 01:43:30.906 A:middle
It uses RealityKit, AR Kit 3 and

01:43:30.906 --> 01:43:32.206 A:middle
Reality Composer and provides a

01:43:32.246 --> 01:43:33.606 A:middle
great starting point for your

01:43:33.606 --> 01:43:35.476 A:middle
applications.

01:43:36.516 --> 01:43:39.116 A:middle
[ Music ]

01:43:39.616 --> 01:43:40.976 A:middle
Lots of fun.

01:43:41.516 --> 01:43:44.036 A:middle
[ Applause ]

01:43:44.536 --> 01:43:44.976 A:middle
Thank you.

01:43:45.516 --> 01:43:47.546 A:middle
[ Applause ]

01:43:48.046 --> 01:43:49.286 A:middle
And of course Metal powers a lot

01:43:49.286 --> 01:43:51.176 A:middle
of what we do in AR on our

01:43:51.176 --> 01:43:51.686 A:middle
devices.

01:43:51.686 --> 01:43:52.706 A:middle
And to tell you more about

01:43:52.706 --> 01:43:54.216 A:middle
what's new in Metal, I'd like to

01:43:54.216 --> 01:43:55.576 A:middle
welcome Jeremy to the stage.

01:43:56.516 --> 01:43:58.836 A:middle
[ Applause ]

01:43:59.336 --> 01:44:01.556 A:middle
&gt;&gt; Thank you, Jeff.

01:43:59.336 --> 01:44:01.556 A:middle
&gt;&gt; Thank you, Jeff.

01:44:02.446 --> 01:44:04.096 A:middle
So Metal is Apple's modern

01:44:04.346 --> 01:44:06.176 A:middle
high-performance GPU programming

01:44:06.176 --> 01:44:08.056 A:middle
API for graphics and compute.

01:44:08.186 --> 01:44:09.586 A:middle
It's also incredibly easy to

01:44:09.586 --> 01:44:11.416 A:middle
use, both for beginners and

01:44:11.416 --> 01:44:12.106 A:middle
experts alike.

01:44:12.106 --> 01:44:14.156 A:middle
And it brings stunning

01:44:14.316 --> 01:44:15.356 A:middle
performance increases,

01:44:15.416 --> 01:44:17.226 A:middle
supporting up to 100 times more

01:44:17.226 --> 01:44:18.896 A:middle
draw calls than OpenGL and

01:44:18.896 --> 01:44:20.606 A:middle
enabling a whole new generation

01:44:20.656 --> 01:44:21.856 A:middle
of advanced graphics

01:44:21.956 --> 01:44:22.476 A:middle
performance.

01:44:23.696 --> 01:44:25.006 A:middle
This is because Metal gives your

01:44:25.186 --> 01:44:27.746 A:middle
app direct control over the GPUs

01:44:27.746 --> 01:44:29.516 A:middle
that are at the core of Apple's

01:44:29.516 --> 01:44:30.046 A:middle
products.

01:44:30.526 --> 01:44:33.116 A:middle
And those GPUs now power over

01:44:33.116 --> 01:44:35.856 A:middle
1.4 billion Metal-capable system

01:44:36.206 --> 01:44:38.396 A:middle
from iPhones to iPads to the

01:44:38.396 --> 01:44:39.786 A:middle
all-new Mac Pro.

01:44:40.536 --> 01:44:41.606 A:middle
In fact, all of Apple's

01:44:41.666 --> 01:44:42.986 A:middle
platforms now run on Metal.

01:44:43.546 --> 01:44:45.006 A:middle
From our smooth user interface

01:44:45.006 --> 01:44:47.026 A:middle
to the latest 3D rendering in

01:44:47.026 --> 01:44:48.856 A:middle
RealityKit, to our advanced

01:44:48.856 --> 01:44:50.126 A:middle
camera processing pipeline,

01:44:50.436 --> 01:44:51.906 A:middle
we're using Metal everywhere.

01:44:52.446 --> 01:44:53.196 A:middle
And you can too.

01:44:53.196 --> 01:44:56.006 A:middle
To help you do just that, this

01:44:56.006 --> 01:44:57.496 A:middle
year we focused on three key

01:44:57.496 --> 01:44:57.946 A:middle
areas.

01:44:58.496 --> 01:44:59.926 A:middle
We've made Metal even easier to

01:44:59.926 --> 01:45:00.446 A:middle
use.

01:44:59.926 --> 01:45:00.446 A:middle
use.

01:45:00.996 --> 01:45:02.766 A:middle
We've enabled all-new levels of

01:45:02.766 --> 01:45:04.986 A:middle
high-performance GPU compute.

01:45:05.256 --> 01:45:07.036 A:middle
And we've enhanced Metal for our

01:45:07.036 --> 01:45:08.286 A:middle
most demanding pro app

01:45:08.356 --> 01:45:10.046 A:middle
developers and customers.

01:45:10.986 --> 01:45:13.386 A:middle
First, with Metal's incredibly

01:45:13.386 --> 01:45:15.606 A:middle
approachable API and GPU shading

01:45:15.606 --> 01:45:17.276 A:middle
language, you can get started

01:45:17.276 --> 01:45:18.476 A:middle
with our powerful suite of

01:45:18.476 --> 01:45:19.866 A:middle
developer tools for GPU

01:45:19.866 --> 01:45:21.996 A:middle
debugging, profiling and

01:45:21.996 --> 01:45:23.156 A:middle
performance optimizing.

01:45:23.576 --> 01:45:25.326 A:middle
And we've made those tools even

01:45:25.326 --> 01:45:25.886 A:middle
better.

01:45:26.516 --> 01:45:28.356 A:middle
We have added full Metal support

01:45:28.356 --> 01:45:30.626 A:middle
to the iOS Simulator in Xcode.

01:45:31.041 --> 01:45:33.041 A:middle
[ Applause ]

01:45:33.066 --> 01:45:34.286 A:middle
We're glad you're excited about

01:45:34.286 --> 01:45:34.366 A:middle
it.

01:45:34.366 --> 01:45:35.256 A:middle
We're really excited about it

01:45:35.316 --> 01:45:35.546 A:middle
too.

01:45:35.906 --> 01:45:37.186 A:middle
You can now use Metal directly

01:45:37.186 --> 01:45:38.476 A:middle
in the simulator and you

01:45:38.476 --> 01:45:39.736 A:middle
automatically get major

01:45:39.736 --> 01:45:41.236 A:middle
performance improvements when

01:45:41.236 --> 01:45:43.726 A:middle
using UI Kits, Maps and all of

01:45:43.726 --> 01:45:45.216 A:middle
those system frameworks built on

01:45:45.216 --> 01:45:45.676 A:middle
Metal.

01:45:45.676 --> 01:45:46.896 A:middle
And this is because the iOS

01:45:46.946 --> 01:45:48.436 A:middle
Simulator is now using the

01:45:48.436 --> 01:45:50.216 A:middle
native Metal support built right

01:45:50.216 --> 01:45:50.836 A:middle
into your Mac.

01:45:52.506 --> 01:45:53.976 A:middle
We've also added an all-new

01:45:53.976 --> 01:45:55.096 A:middle
Metal memory debugger.

01:45:55.446 --> 01:45:56.966 A:middle
You can now identify exactly how

01:45:56.966 --> 01:45:58.666 A:middle
much memory your app is using

01:45:58.666 --> 01:46:00.656 A:middle
for Metal textures, buffers and

01:45:58.666 --> 01:46:00.656 A:middle
for Metal textures, buffers and

01:46:00.656 --> 01:46:02.436 A:middle
heats and you can optimize your

01:46:02.436 --> 01:46:04.196 A:middle
games and apps to use every last

01:46:04.196 --> 01:46:05.876 A:middle
byte for even more advanced

01:46:05.926 --> 01:46:06.516 A:middle
graphics.

01:46:07.936 --> 01:46:08.986 A:middle
Now over the past few years,

01:46:09.026 --> 01:46:10.336 A:middle
Metal has grown to support the

01:46:10.336 --> 01:46:12.006 A:middle
advanced features of dozens of

01:46:12.006 --> 01:46:13.566 A:middle
GPUs, each with their own

01:46:13.566 --> 01:46:15.806 A:middle
hardware from every major GPU

01:46:15.806 --> 01:46:17.566 A:middle
vendor and across all of our

01:46:17.566 --> 01:46:19.516 A:middle
platforms and OS releases.

01:46:19.746 --> 01:46:20.496 A:middle
And as a developer you

01:46:20.496 --> 01:46:21.726 A:middle
previously had to manage all of

01:46:21.726 --> 01:46:22.746 A:middle
this complexity of these

01:46:22.746 --> 01:46:23.916 A:middle
different hardware feature sets

01:46:24.066 --> 01:46:24.646 A:middle
yourself.

01:46:26.116 --> 01:46:26.986 A:middle
Well this year we've made it

01:46:26.986 --> 01:46:28.706 A:middle
much simpler with just three

01:46:28.706 --> 01:46:29.756 A:middle
Metal GPU families.

01:46:30.056 --> 01:46:31.526 A:middle
A Metal common GPU family,

01:46:31.746 --> 01:46:33.346 A:middle
identifying the vast majority of

01:46:33.586 --> 01:46:34.666 A:middle
Metal features that you can use

01:46:34.666 --> 01:46:36.096 A:middle
across all of our platforms.

01:46:36.546 --> 01:46:38.216 A:middle
A second family for the advanced

01:46:38.216 --> 01:46:40.706 A:middle
unique features of our Apple

01:46:40.706 --> 01:46:43.426 A:middle
Design GPUs and our iOS, iPadOS

01:46:43.426 --> 01:46:44.716 A:middle
and tvOS products.

01:46:44.716 --> 01:46:47.216 A:middle
And a third family for the

01:46:47.216 --> 01:46:48.746 A:middle
powerful GPUs on our Mac

01:46:48.996 --> 01:46:49.566 A:middle
systems.

01:46:50.326 --> 01:46:51.776 A:middle
And it makes it that much easier

01:46:51.776 --> 01:46:54.406 A:middle
to bring your apps from iOS to

01:46:54.406 --> 01:46:56.086 A:middle
macOS or the other way around.

01:46:57.486 --> 01:46:59.076 A:middle
Now, in addition to enabling

01:46:59.076 --> 01:47:00.426 A:middle
immersive games and advanced

01:46:59.076 --> 01:47:00.426 A:middle
immersive games and advanced

01:47:00.426 --> 01:47:02.046 A:middle
graphics, Metal also gives your

01:47:02.046 --> 01:47:03.616 A:middle
app the ability to harness the

01:47:03.616 --> 01:47:05.366 A:middle
GPU for compute.

01:47:05.986 --> 01:47:07.516 A:middle
So what is GPU compute?

01:47:08.116 --> 01:47:09.176 A:middle
Well, GPUs were originally

01:47:09.176 --> 01:47:10.586 A:middle
designed to process large

01:47:10.586 --> 01:47:12.106 A:middle
numbers of pixels requiring the

01:47:12.106 --> 01:47:13.466 A:middle
execution of complex

01:47:13.466 --> 01:47:15.096 A:middle
mathematical computations in a

01:47:15.096 --> 01:47:16.566 A:middle
massively parallel fashion.

01:47:16.966 --> 01:47:18.526 A:middle
And it turns out we can apply

01:47:18.526 --> 01:47:20.136 A:middle
that computational horsepower to

01:47:20.136 --> 01:47:22.556 A:middle
a wide variety of tasks besides

01:47:22.646 --> 01:47:23.546 A:middle
traditional graphics.

01:47:24.306 --> 01:47:25.676 A:middle
So Metal provides all of the

01:47:25.676 --> 01:47:27.086 A:middle
building blocks that you need

01:47:27.086 --> 01:47:28.726 A:middle
for general purpose computation

01:47:28.926 --> 01:47:29.976 A:middle
on the GPU.

01:47:30.206 --> 01:47:32.706 A:middle
A familiar C++ based GPU

01:47:32.706 --> 01:47:34.716 A:middle
programming language, compute

01:47:34.716 --> 01:47:35.966 A:middle
command encoding, API and

01:47:35.966 --> 01:47:38.256 A:middle
runtime, a full-feature compiler

01:47:38.256 --> 01:47:40.036 A:middle
and debugger and a rich library

01:47:40.036 --> 01:47:41.526 A:middle
of shaders and kernels called

01:47:41.526 --> 01:47:42.766 A:middle
the Metal performance shaders.

01:47:44.336 --> 01:47:45.876 A:middle
This MPS library provides you

01:47:45.876 --> 01:47:48.296 A:middle
valuable compute functions all

01:47:48.656 --> 01:47:50.306 A:middle
pre-optimized for all of those

01:47:50.306 --> 01:47:51.786 A:middle
GPUs and all of those Apple

01:47:51.786 --> 01:47:52.816 A:middle
systems and it's all fully

01:47:52.816 --> 01:47:54.506 A:middle
integrated right into your Metal

01:47:54.506 --> 01:47:54.756 A:middle
code.

01:47:56.436 --> 01:47:58.086 A:middle
And on our Apple Design GPUs,

01:47:58.236 --> 01:47:59.646 A:middle
Metal also provides advanced

01:47:59.726 --> 01:48:01.076 A:middle
compute features like tile

01:47:59.726 --> 01:48:01.076 A:middle
compute features like tile

01:48:01.076 --> 01:48:02.806 A:middle
shading, enabling you to combine

01:48:02.806 --> 01:48:04.006 A:middle
your compute shaders and your

01:48:04.066 --> 01:48:05.686 A:middle
fragment processing into one

01:48:05.856 --> 01:48:07.236 A:middle
simple, highly-efficient render

01:48:08.316 --> 01:48:08.426 A:middle
pass.

01:48:09.666 --> 01:48:12.106 A:middle
And this year we're also

01:48:12.106 --> 01:48:13.526 A:middle
introducing Metal indirect

01:48:13.526 --> 01:48:14.736 A:middle
compute command encoding.

01:48:14.736 --> 01:48:16.156 A:middle
It allows you to build your GPU

01:48:16.156 --> 01:48:17.566 A:middle
compute commands right on the

01:48:17.566 --> 01:48:19.486 A:middle
GPU itself, unlocking all-new

01:48:19.486 --> 01:48:20.456 A:middle
algorithms for compute

01:48:20.456 --> 01:48:22.096 A:middle
efficiency and freeing the CPU

01:48:22.096 --> 01:48:23.516 A:middle
for other activities in your

01:48:24.596 --> 01:48:24.666 A:middle
app.

01:48:25.306 --> 01:48:27.676 A:middle
And with the Radeon Pro Vega II,

01:48:27.676 --> 01:48:30.386 A:middle
the new Mac Pro is a GPU compute

01:48:30.386 --> 01:48:33.916 A:middle
monster, capable of up to 56

01:48:33.916 --> 01:48:35.786 A:middle
teraflops of GPU compute all

01:48:35.786 --> 01:48:38.026 A:middle
made available to you via Metal.

01:48:38.116 --> 01:48:39.226 A:middle
Now that's a heck of a lot of

01:48:39.226 --> 01:48:39.666 A:middle
flops.

01:48:39.666 --> 01:48:40.876 A:middle
I mean, look at them all.

01:48:41.486 --> 01:48:42.876 A:middle
They barely fit on the screen.

01:48:43.166 --> 01:48:45.166 A:middle
[ Applause ]

01:48:45.316 --> 01:48:45.726 A:middle
That's a lot.

01:48:46.016 --> 01:48:47.676 A:middle
[ Applause ]

01:48:47.676 --> 01:48:49.086 A:middle
So what can you do with all of

01:48:49.086 --> 01:48:50.616 A:middle
those flops of GPU compute?

01:48:51.456 --> 01:48:52.276 A:middle
Well, with Metal you can use

01:48:52.276 --> 01:48:53.346 A:middle
them for advanced compute

01:48:53.346 --> 01:48:53.996 A:middle
processing.

01:48:54.256 --> 01:48:55.816 A:middle
For your videos, you can improve

01:48:55.816 --> 01:48:57.276 A:middle
the quality of your photos.

01:48:57.646 --> 01:48:59.806 A:middle
You can train your ML models and

01:48:59.806 --> 01:49:01.526 A:middle
you can use them to accelerate

01:48:59.806 --> 01:49:01.526 A:middle
you can use them to accelerate

01:49:01.526 --> 01:49:02.956 A:middle
interactive ray tracing.

01:49:04.016 --> 01:49:05.096 A:middle
So we have further improved

01:49:05.096 --> 01:49:06.386 A:middle
Metal support for ray tracing

01:49:06.386 --> 01:49:08.366 A:middle
this year, now enabling dynamic

01:49:08.496 --> 01:49:10.036 A:middle
scenes by moving the bounding

01:49:10.036 --> 01:49:11.346 A:middle
volume hierarchy construction

01:49:11.346 --> 01:49:13.536 A:middle
from the CPU to the GPU, and

01:49:13.536 --> 01:49:15.206 A:middle
added all-new optimized MPS

01:49:15.206 --> 01:49:17.086 A:middle
de-noising filters to further

01:49:17.086 --> 01:49:18.146 A:middle
improve image quality.

01:49:18.146 --> 01:49:21.376 A:middle
Now ray tracing, it uses the GPU

01:49:21.376 --> 01:49:23.046 A:middle
to computationally model the

01:49:23.136 --> 01:49:24.746 A:middle
physical properties of lights

01:49:25.116 --> 01:49:27.166 A:middle
and surfaces and reflections and

01:49:27.166 --> 01:49:28.796 A:middle
it can be so complex, people

01:49:28.796 --> 01:49:30.206 A:middle
actually earn PhD's in this

01:49:30.266 --> 01:49:30.576 A:middle
topic.

01:49:31.306 --> 01:49:32.596 A:middle
So to show you how you can use

01:49:32.596 --> 01:49:35.396 A:middle
Metal and GPU Compute for ray

01:49:35.396 --> 01:49:36.886 A:middle
tracing, we decided to put

01:49:36.886 --> 01:49:37.966 A:middle
together a pretty simple

01:49:37.966 --> 01:49:38.686 A:middle
example.

01:49:38.776 --> 01:49:39.966 A:middle
And I'd now like to invite Rav

01:49:39.966 --> 01:49:41.356 A:middle
to the stage to give you a quick

01:49:41.386 --> 01:49:42.006 A:middle
demonstration.

01:49:42.496 --> 01:49:42.686 A:middle
Rav?

01:49:43.516 --> 01:49:48.716 A:middle
[ Applause ]

01:49:49.216 --> 01:49:49.926 A:middle
&gt;&gt; Thank you, Jeremy.

01:49:51.266 --> 01:49:53.096 A:middle
So we built a prototype hybrid

01:49:53.096 --> 01:49:54.666 A:middle
ray tracing engine to see what

01:49:54.666 --> 01:49:56.316 A:middle
we could do with Metal Compute

01:49:56.506 --> 01:49:58.296 A:middle
on the powerful new Mac Pro.

01:50:00.106 --> 01:50:03.056 A:middle
Now this toy city that we built

01:50:03.146 --> 01:50:04.466 A:middle
looks simple, but we're using

01:50:04.466 --> 01:50:06.876 A:middle
Metal to process over 1 billion

01:50:06.876 --> 01:50:08.876 A:middle
rays per second at 4K

01:50:08.876 --> 01:50:09.536 A:middle
resolution.

01:50:10.336 --> 01:50:11.366 A:middle
Let me walk you through what

01:50:11.366 --> 01:50:11.976 A:middle
we're doing here.

01:50:13.396 --> 01:50:15.446 A:middle
So we start by using Metal draw

01:50:15.446 --> 01:50:17.616 A:middle
commands to render the geometry

01:50:17.616 --> 01:50:18.936 A:middle
and material information that

01:50:18.936 --> 01:50:21.736 A:middle
we're going to use later, and

01:50:21.736 --> 01:50:23.086 A:middle
then switch to using Metal

01:50:23.126 --> 01:50:25.566 A:middle
Compute and the MPS ray triangle

01:50:25.566 --> 01:50:28.056 A:middle
intersection APIs to do all the

01:50:28.056 --> 01:50:28.756 A:middle
heavy lifting.

01:50:29.366 --> 01:50:30.716 A:middle
This includes calculating

01:50:30.806 --> 01:50:32.316 A:middle
ambient light at every surface

01:50:32.356 --> 01:50:33.656 A:middle
point, as you can see in this

01:50:33.656 --> 01:50:33.886 A:middle
image.

01:50:34.406 --> 01:50:36.086 A:middle
But also to simulate light

01:50:36.166 --> 01:50:37.836 A:middle
bouncing between objects in our

01:50:37.836 --> 01:50:40.466 A:middle
scene at increasing ray depth to

01:50:40.466 --> 01:50:44.146 A:middle
generate shadows, reflections

01:50:44.866 --> 01:50:46.616 A:middle
and even reflections within

01:50:46.616 --> 01:50:47.596 A:middle
those reflections.

01:50:48.256 --> 01:50:49.606 A:middle
And then we end by using the

01:50:49.606 --> 01:50:51.636 A:middle
optimized MPS or optimize

01:50:51.676 --> 01:50:53.376 A:middle
compute kernels in the new MPS

01:50:53.376 --> 01:50:56.556 A:middle
de-noiser to produce this really

01:50:56.556 --> 01:50:57.746 A:middle
high-quality image.

01:50:58.776 --> 01:51:00.976 A:middle
So traditional CPU renderers

01:50:58.776 --> 01:51:00.976 A:middle
So traditional CPU renderers

01:51:01.506 --> 01:51:02.916 A:middle
would take over a minute to

01:51:02.916 --> 01:51:04.236 A:middle
generate a frame like this.

01:51:04.726 --> 01:51:06.046 A:middle
With Metal, we've been able to

01:51:06.046 --> 01:51:07.946 A:middle
reduce this to under 30

01:51:07.946 --> 01:51:09.516 A:middle
milliseconds, which is a

01:51:09.746 --> 01:51:12.016 A:middle
staggering 1,000 times faster.

01:51:13.746 --> 01:51:15.376 A:middle
So pro app developers -- thank

01:51:15.376 --> 01:51:15.566 A:middle
you.

01:51:15.786 --> 01:51:16.976 A:middle
We think it's pretty great too.

01:51:17.516 --> 01:51:20.776 A:middle
[ Applause ]

01:51:21.276 --> 01:51:22.906 A:middle
So pro app developers can now

01:51:23.026 --> 01:51:25.446 A:middle
use Metal Compute to build new

01:51:25.446 --> 01:51:27.676 A:middle
interactive tools to visualize

01:51:27.676 --> 01:51:29.136 A:middle
these physically accurate

01:51:29.136 --> 01:51:30.936 A:middle
lighting effects like these

01:51:30.996 --> 01:51:33.856 A:middle
dramatic shadows that are cast

01:51:33.856 --> 01:51:36.936 A:middle
by the buildings and also by

01:51:36.936 --> 01:51:37.776 A:middle
that fire escape.

01:51:41.106 --> 01:51:42.586 A:middle
Or if we pan over here to this

01:51:42.586 --> 01:51:45.266 A:middle
roof, the realistic way that

01:51:45.376 --> 01:51:47.466 A:middle
green light bounces onto this

01:51:47.466 --> 01:51:48.606 A:middle
neighboring building.

01:51:50.646 --> 01:51:51.616 A:middle
That just looks great.

01:51:51.736 --> 01:51:51.956 A:middle
Thank you.

01:51:52.516 --> 01:51:56.696 A:middle
[ Applause ]

01:51:57.196 --> 01:51:58.666 A:middle
Another great effect that we can

01:51:58.956 --> 01:52:00.956 A:middle
simulate or model is accurate

01:51:58.956 --> 01:52:00.956 A:middle
simulate or model is accurate

01:52:00.956 --> 01:52:02.336 A:middle
reflections, as you can see in

01:52:02.336 --> 01:52:03.836 A:middle
the windshields of this bus.

01:52:04.046 --> 01:52:06.086 A:middle
In fact, you can see the shadows

01:52:06.176 --> 01:52:07.846 A:middle
moving in that windshield or in

01:52:07.846 --> 01:52:09.656 A:middle
those reflections as I change

01:52:09.656 --> 01:52:10.666 A:middle
the position of the sun.

01:52:10.786 --> 01:52:14.426 A:middle
So that looks great, but

01:52:14.476 --> 01:52:16.246 A:middle
animating objects in a ray trace

01:52:16.246 --> 01:52:17.776 A:middle
scene can be very

01:52:17.776 --> 01:52:19.146 A:middle
computationally expensive

01:52:19.426 --> 01:52:20.936 A:middle
because we have to update the

01:52:20.936 --> 01:52:22.536 A:middle
bounding volume hierarchy that's

01:52:22.686 --> 01:52:24.156 A:middle
associated with the geometry.

01:52:25.376 --> 01:52:27.496 A:middle
Fortunately, with Metal Compute

01:52:27.496 --> 01:52:29.776 A:middle
and the MPS APIs, we're able to

01:52:29.776 --> 01:52:32.306 A:middle
move all of this work onto the

01:52:32.476 --> 01:52:33.476 A:middle
GPUs and achieve this great

01:52:33.576 --> 01:52:34.186 A:middle
animation.

01:52:35.546 --> 01:52:36.636 A:middle
And there go our trains.

01:52:37.466 --> 01:52:40.666 A:middle
So that was just an example of

01:52:40.746 --> 01:52:42.476 A:middle
what's possible when you use

01:52:42.476 --> 01:52:44.086 A:middle
Metal Compute for accelerated

01:52:44.136 --> 01:52:46.646 A:middle
ray tracing on the new Mac Pro.

01:52:46.646 --> 01:52:47.286 A:middle
It's a beast.

01:52:47.396 --> 01:52:48.016 A:middle
Thank you.

01:52:48.186 --> 01:52:49.456 A:middle
Back to you, Jeremy.

01:52:50.516 --> 01:52:52.636 A:middle
[ Applause ]

01:52:53.136 --> 01:52:53.696 A:middle
&gt;&gt; Thank you, Rav.

01:52:54.456 --> 01:52:56.516 A:middle
So that's what we did in just a

01:52:56.516 --> 01:52:57.436 A:middle
short bit of time.

01:52:57.666 --> 01:52:59.416 A:middle
But high-performance ray tracing

01:52:59.416 --> 01:53:00.776 A:middle
can be even more powerful in the

01:52:59.416 --> 01:53:00.776 A:middle
can be even more powerful in the

01:53:00.776 --> 01:53:02.536 A:middle
hands of our most expert

01:53:02.776 --> 01:53:03.816 A:middle
third-party developers.

01:53:03.816 --> 01:53:05.876 A:middle
Which is why we are so excited

01:53:05.876 --> 01:53:07.496 A:middle
that OTOY has announced they're

01:53:07.496 --> 01:53:09.426 A:middle
using Metal Compute to build

01:53:09.426 --> 01:53:11.756 A:middle
OctaneX, an all-new version of

01:53:11.756 --> 01:53:12.946 A:middle
Octane Renderer, their

01:53:12.946 --> 01:53:14.606 A:middle
interactive path tracing engine

01:53:14.716 --> 01:53:16.376 A:middle
optimized for Metal and the

01:53:16.376 --> 01:53:17.186 A:middle
Apple platforms.

01:53:18.556 --> 01:53:20.386 A:middle
And we are incredibly thrilled

01:53:20.386 --> 01:53:21.766 A:middle
to be working with Maxon who's

01:53:21.806 --> 01:53:22.976 A:middle
bringing their powerful

01:53:22.976 --> 01:53:24.356 A:middle
GPU-accelerated renderer

01:53:24.356 --> 01:53:26.196 A:middle
Redshift to the Mac with an

01:53:26.316 --> 01:53:28.766 A:middle
all-new version optimized for

01:53:28.766 --> 01:53:30.716 A:middle
Metal and the new Mac Pro.

01:53:30.716 --> 01:53:33.106 A:middle
So with advanced Metal Compute

01:53:33.106 --> 01:53:34.916 A:middle
APIs and incredibly powerful

01:53:34.916 --> 01:53:37.016 A:middle
hardware, we've built Metal to

01:53:37.286 --> 01:53:38.526 A:middle
power the most advanced

01:53:38.526 --> 01:53:40.116 A:middle
professional content creation

01:53:40.116 --> 01:53:40.666 A:middle
tools.

01:53:41.256 --> 01:53:42.286 A:middle
And we've been working really

01:53:42.286 --> 01:53:43.886 A:middle
closely with the leading app

01:53:43.886 --> 01:53:45.186 A:middle
developers who have all

01:53:45.186 --> 01:53:46.216 A:middle
announced that the upcoming

01:53:46.216 --> 01:53:48.246 A:middle
versions of these professional

01:53:48.356 --> 01:53:50.096 A:middle
content creation tools and apps

01:53:50.436 --> 01:53:51.946 A:middle
will be fully optimized for

01:53:51.946 --> 01:53:53.726 A:middle
Metal and the Apple platforms.

01:53:55.116 --> 01:53:57.066 A:middle
For instance, Serif has just

01:53:57.066 --> 01:53:58.856 A:middle
announced an all-new version of

01:53:58.856 --> 01:54:00.766 A:middle
Affinity Photo for Mac using

01:53:58.856 --> 01:54:00.766 A:middle
Affinity Photo for Mac using

01:54:00.766 --> 01:54:02.726 A:middle
Metal's graphics and Compute

01:54:02.956 --> 01:54:04.356 A:middle
APIs to hypercharge their

01:54:04.356 --> 01:54:06.006 A:middle
advanced photo processing engine

01:54:06.406 --> 01:54:07.906 A:middle
in achieving stunning

01:54:08.056 --> 01:54:09.066 A:middle
performance increases.

01:54:09.346 --> 01:54:10.656 A:middle
More than 10 times better

01:54:10.656 --> 01:54:12.686 A:middle
performance and jaw-dropping

01:54:12.686 --> 01:54:14.436 A:middle
increases of 50 times better

01:54:14.436 --> 01:54:16.096 A:middle
performance using Metal with

01:54:16.096 --> 01:54:18.126 A:middle
multiple GPUs on the new Mac

01:54:18.206 --> 01:54:18.756 A:middle
Pro.

01:54:20.016 --> 01:54:21.346 A:middle
So to enable these kinds of pro

01:54:21.346 --> 01:54:22.236 A:middle
apps and this kind of

01:54:22.236 --> 01:54:23.716 A:middle
performance, we work really

01:54:23.716 --> 01:54:25.476 A:middle
closely with our GPU hardware

01:54:25.476 --> 01:54:26.986 A:middle
and software partner teams to

01:54:26.986 --> 01:54:28.536 A:middle
add all-new features to Metal.

01:54:28.956 --> 01:54:30.766 A:middle
To support the new AMD Infinity

01:54:30.766 --> 01:54:32.626 A:middle
Fabric link in the new Mac Pro,

01:54:32.626 --> 01:54:33.966 A:middle
we added the Metal Peer Group

01:54:33.966 --> 01:54:34.306 A:middle
API.

01:54:35.136 --> 01:54:36.206 A:middle
So what does this do?

01:54:36.446 --> 01:54:37.786 A:middle
Well, previously sharing

01:54:37.786 --> 01:54:40.076 A:middle
workloads across multiple GPUs

01:54:40.076 --> 01:54:41.416 A:middle
would require moving large

01:54:41.416 --> 01:54:43.636 A:middle
amounts of data in a round trip

01:54:43.636 --> 01:54:44.766 A:middle
across the PCI bus.

01:54:44.766 --> 01:54:46.896 A:middle
But with the Metal Peer Group

01:54:46.896 --> 01:54:49.506 A:middle
API, apps can use multiple GPUs

01:54:49.506 --> 01:54:51.286 A:middle
much more efficiently, directly

01:54:51.286 --> 01:54:52.836 A:middle
sharing data across the Infinity

01:54:52.836 --> 01:54:54.426 A:middle
Fabric link and without taking

01:54:54.426 --> 01:54:56.096 A:middle
that long and scenic route

01:54:56.276 --> 01:54:57.086 A:middle
through system memory.

01:54:58.536 --> 01:55:00.446 A:middle
Now finally, you've seen how you

01:54:58.536 --> 01:55:00.446 A:middle
Now finally, you've seen how you

01:55:00.446 --> 01:55:02.876 A:middle
can use Metal Compute and the

01:55:02.876 --> 01:55:05.726 A:middle
new Mac Pro to process a whole

01:55:05.726 --> 01:55:06.936 A:middle
lot more pixels.

01:55:06.936 --> 01:55:09.026 A:middle
But we also want you to produce

01:55:09.026 --> 01:55:10.406 A:middle
even more beautiful pixels.

01:55:10.476 --> 01:55:11.946 A:middle
So we've introduced the gorgeous

01:55:12.006 --> 01:55:15.376 A:middle
new Pro Display XDR with all-new

01:55:15.376 --> 01:55:17.706 A:middle
HDR software support in macOS.

01:55:18.396 --> 01:55:19.356 A:middle
You can now use the AV

01:55:19.356 --> 01:55:21.826 A:middle
Foundation APIs to decode HDR

01:55:21.826 --> 01:55:24.226 A:middle
videos or you can render native

01:55:24.226 --> 01:55:25.976 A:middle
HDR content directly with Metal.

01:55:26.626 --> 01:55:28.266 A:middle
You can manage the HDR display

01:55:28.266 --> 01:55:29.966 A:middle
tone mapping yourself or you can

01:55:29.966 --> 01:55:31.536 A:middle
let the window system and our

01:55:31.536 --> 01:55:33.306 A:middle
advanced display system software

01:55:33.546 --> 01:55:34.796 A:middle
handle it all for you.

01:55:34.946 --> 01:55:37.046 A:middle
And with these same APIs, you

01:55:37.046 --> 01:55:38.536 A:middle
can also access a far greater

01:55:38.536 --> 01:55:40.676 A:middle
range of brightness levels on

01:55:40.676 --> 01:55:41.826 A:middle
many of our existing Mac

01:55:41.866 --> 01:55:42.706 A:middle
displays as well.

01:55:43.366 --> 01:55:45.476 A:middle
So that's our Metal update for

01:55:45.476 --> 01:55:45.846 A:middle
today.

01:55:45.846 --> 01:55:47.576 A:middle
It's even easier to use Metal

01:55:47.576 --> 01:55:48.986 A:middle
across all of our platforms with

01:55:48.986 --> 01:55:50.596 A:middle
Metal in the iOS Simulator and

01:55:50.706 --> 01:55:52.356 A:middle
simplified GPU families.

01:55:52.406 --> 01:55:53.706 A:middle
We have all-new features and

01:55:53.756 --> 01:55:55.746 A:middle
powerful hardware to unleash

01:55:55.806 --> 01:55:57.356 A:middle
all-new levels of GPU compute

01:55:57.356 --> 01:55:57.926 A:middle
performance.

01:55:58.426 --> 01:55:59.856 A:middle
And we built Metal to be the

01:55:59.966 --> 01:56:02.076 A:middle
best GPU programming API to

01:55:59.966 --> 01:56:02.076 A:middle
best GPU programming API to

01:56:02.076 --> 01:56:03.346 A:middle
drive modern professional

01:56:03.446 --> 01:56:05.576 A:middle
content creation tools and apps.

01:56:06.276 --> 01:56:07.186 A:middle
So thank you very much.

01:56:07.486 --> 01:56:08.736 A:middle
I'll hand it back to Sebastien

01:56:08.736 --> 01:56:08.916 A:middle
now.

01:56:09.146 --> 01:56:09.436 A:middle
Thank you.

01:56:10.516 --> 01:56:13.546 A:middle
[ Applause ]

01:56:14.046 --> 01:56:15.436 A:middle
&gt;&gt; Thank you, Jeremy.

01:56:15.436 --> 01:56:16.596 A:middle
Don't you love Metal?

01:56:16.756 --> 01:56:17.736 A:middle
Don't you love the power of

01:56:17.736 --> 01:56:18.066 A:middle
Metal?

01:56:18.446 --> 01:56:19.506 A:middle
Really, really amazing.

01:56:20.226 --> 01:56:21.726 A:middle
Now what you've seen this

01:56:21.726 --> 01:56:23.536 A:middle
afternoon is a huge amount of

01:56:23.576 --> 01:56:25.236 A:middle
new technology that's new for

01:56:25.276 --> 01:56:26.896 A:middle
all of you as developers.

01:56:27.486 --> 01:56:28.936 A:middle
And what we've shown covering

01:56:28.936 --> 01:56:30.486 A:middle
developer tools, the Apple

01:56:30.596 --> 01:56:32.486 A:middle
platforms and core technologies

01:56:32.856 --> 01:56:34.546 A:middle
is just some of the highlights.

01:56:34.896 --> 01:56:36.336 A:middle
We actually have so much more to

01:56:36.336 --> 01:56:37.136 A:middle
show you this week.

01:56:37.336 --> 01:56:39.516 A:middle
And so ahead of us are 109

01:56:39.746 --> 01:56:40.466 A:middle
different sessions.

01:56:40.466 --> 01:56:42.156 A:middle
And it turns out that that

01:56:42.156 --> 01:56:43.476 A:middle
wasn't enough to cover

01:56:43.476 --> 01:56:44.106 A:middle
everything.

01:56:44.496 --> 01:56:45.886 A:middle
So this year we added an

01:56:45.886 --> 01:56:48.286 A:middle
additional 27 video-only

01:56:48.356 --> 01:56:48.726 A:middle
sessions.

01:56:50.016 --> 01:56:51.146 A:middle
And when you want to dive even

01:56:51.146 --> 01:56:53.346 A:middle
deeper, you could sit down with

01:56:53.426 --> 01:56:55.106 A:middle
some of the over 1,000 Apple

01:56:55.106 --> 01:56:56.746 A:middle
engineers that are here at WWDC

01:56:56.846 --> 01:57:00.566 A:middle
in 229 different lab sessions

01:56:56.846 --> 01:57:00.566 A:middle
in 229 different lab sessions

01:57:00.886 --> 01:57:01.676 A:middle
throughout the week.

01:57:03.266 --> 01:57:05.426 A:middle
So get out there and prepare to

01:57:05.496 --> 01:57:06.526 A:middle
have your minds blown.

01:57:06.526 --> 01:57:07.816 A:middle
It's going to be a great week.

01:57:07.816 --> 01:57:08.526 A:middle
Thank you.

01:57:09.516 --> 01:57:16.500 A:middle
[ Applause ]
