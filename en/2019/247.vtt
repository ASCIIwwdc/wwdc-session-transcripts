WEBVTT

00:00:00.506 --> 00:00:05.500 A:middle
[ Music ]

00:00:07.046 --> 00:00:08.456 A:middle
&gt;&gt; Hello, welcome to what's new

00:00:08.456 --> 00:00:09.186 A:middle
in ClassKit.

00:00:09.676 --> 00:00:11.016 A:middle
My name is John Calhoun.

00:00:11.286 --> 00:00:12.496 A:middle
I'm an iOS Engineer on the

00:00:12.496 --> 00:00:13.886 A:middle
ClassKit and Schoolwork Team.

00:00:15.236 --> 00:00:16.646 A:middle
In case you are new to ClassKit,

00:00:17.036 --> 00:00:18.266 A:middle
I'll begin with an introduction

00:00:18.266 --> 00:00:19.486 A:middle
to give you some context for

00:00:19.486 --> 00:00:20.216 A:middle
what follows.

00:00:20.656 --> 00:00:21.976 A:middle
And what follows are the new

00:00:21.976 --> 00:00:23.716 A:middle
features for ClassKit as well as

00:00:23.716 --> 00:00:25.366 A:middle
a brief discussion of best

00:00:25.366 --> 00:00:26.796 A:middle
coding practices that you might

00:00:26.796 --> 00:00:27.546 A:middle
want to consider.

00:00:29.406 --> 00:00:30.836 A:middle
Let's begin with what ClassKit

00:00:30.836 --> 00:00:31.156 A:middle
is.

00:00:32.686 --> 00:00:34.146 A:middle
ClassKit is a framework that

00:00:34.146 --> 00:00:36.466 A:middle
Apple introduced in iOS 11.3.

00:00:37.756 --> 00:00:39.056 A:middle
It's a core part of Apple's

00:00:39.056 --> 00:00:40.516 A:middle
education ecosystem.

00:00:41.036 --> 00:00:42.516 A:middle
So if you consider your app to

00:00:42.516 --> 00:00:44.546 A:middle
also target education, then you

00:00:44.546 --> 00:00:45.636 A:middle
should become familiar with the

00:00:45.636 --> 00:00:47.246 A:middle
ClassKit framework and what it

00:00:47.246 --> 00:00:47.946 A:middle
can do for your app.

00:00:49.736 --> 00:00:51.996 A:middle
The whole purpose of ClassKit is

00:00:51.996 --> 00:00:53.076 A:middle
to allow your app to share a

00:00:53.076 --> 00:00:54.156 A:middle
student's progress with a

00:00:54.156 --> 00:00:54.646 A:middle
teacher.

00:00:55.126 --> 00:00:56.446 A:middle
I'll discuss what this means in

00:00:56.446 --> 00:00:57.666 A:middle
more detail in a bit.

00:00:59.586 --> 00:01:01.126 A:middle
And because student data is so

00:00:59.586 --> 00:01:01.126 A:middle
And because student data is so

00:01:01.126 --> 00:01:03.056 A:middle
important, ClassKit exists to

00:01:03.056 --> 00:01:04.245 A:middle
ensure that the data remains

00:01:04.245 --> 00:01:06.246 A:middle
secure and is only accessible to

00:01:06.246 --> 00:01:08.476 A:middle
specific users like the teachers

00:01:08.476 --> 00:01:09.776 A:middle
who have been granted privileges

00:01:09.956 --> 00:01:11.086 A:middle
to access that data.

00:01:11.416 --> 00:01:13.186 A:middle
But let's move on to an example.

00:01:14.206 --> 00:01:15.436 A:middle
I'm going to use an imaginary

00:01:15.436 --> 00:01:17.266 A:middle
application as an example today.

00:01:17.966 --> 00:01:19.236 A:middle
This will be a simple app that

00:01:19.236 --> 00:01:20.606 A:middle
introduces the user to writing

00:01:20.606 --> 00:01:20.966 A:middle
code.

00:01:21.706 --> 00:01:23.126 A:middle
It contains a number of sections

00:01:23.126 --> 00:01:24.236 A:middle
that the student works through.

00:01:25.156 --> 00:01:26.796 A:middle
There are exercises and quizzes

00:01:26.796 --> 00:01:28.246 A:middle
along the way that check to see

00:01:28.246 --> 00:01:29.236 A:middle
how well the student is

00:01:29.236 --> 00:01:30.456 A:middle
understanding the material.

00:01:31.036 --> 00:01:32.246 A:middle
So it already has the notion of

00:01:32.246 --> 00:01:33.886 A:middle
activities and it will be nice

00:01:33.886 --> 00:01:35.256 A:middle
to share the student's progress

00:01:35.256 --> 00:01:35.936 A:middle
with a teacher.

00:01:36.476 --> 00:01:37.906 A:middle
In short, it's a good candidate

00:01:37.906 --> 00:01:38.586 A:middle
for ClassKit.

00:01:41.046 --> 00:01:42.596 A:middle
Here's the student using the

00:01:42.876 --> 00:01:42.956 A:middle
app.

00:01:44.206 --> 00:01:45.796 A:middle
And somehow the app would like

00:01:45.796 --> 00:01:47.056 A:middle
to share the student's progress

00:01:47.056 --> 00:01:48.606 A:middle
with the teacher and do so in a

00:01:48.606 --> 00:01:50.006 A:middle
way that protects the student's

00:01:50.006 --> 00:01:50.556 A:middle
privacy.

00:01:52.186 --> 00:01:53.646 A:middle
This is the role that ClassKit

00:01:53.646 --> 00:01:54.486 A:middle
facilitates.

00:01:55.186 --> 00:01:56.446 A:middle
ClassKit insures that the

00:01:56.446 --> 00:01:57.886 A:middle
student data stored on the

00:01:57.886 --> 00:01:59.776 A:middle
device, sent to the Cloud, and

00:01:59.776 --> 00:02:01.496 A:middle
stored in the Cloud is always

00:01:59.776 --> 00:02:01.496 A:middle
stored in the Cloud is always

00:02:01.496 --> 00:02:01.936 A:middle
secure.

00:02:02.656 --> 00:02:04.436 A:middle
And ClassKit insures that access

00:02:04.436 --> 00:02:06.386 A:middle
to this data is available only

00:02:06.386 --> 00:02:07.316 A:middle
to users with the right

00:02:07.316 --> 00:02:07.966 A:middle
privileges.

00:02:08.096 --> 00:02:09.246 A:middle
For example, the student's

00:02:09.246 --> 00:02:09.696 A:middle
teacher.

00:02:10.656 --> 00:02:12.116 A:middle
So how does a teacher or the

00:02:12.116 --> 00:02:13.616 A:middle
student for that matter, see

00:02:13.616 --> 00:02:15.316 A:middle
their progress in a ClassKit

00:02:15.316 --> 00:02:16.106 A:middle
enabled app?

00:02:17.776 --> 00:02:19.226 A:middle
Apple provides an application

00:02:19.226 --> 00:02:21.076 A:middle
called Schoolwork for iOS.

00:02:22.156 --> 00:02:23.816 A:middle
It's a free app for the iPad.

00:02:24.066 --> 00:02:25.116 A:middle
It's been available since

00:02:25.116 --> 00:02:26.196 A:middle
ClassKit debuted.

00:02:26.456 --> 00:02:27.546 A:middle
You can download it today.

00:02:28.896 --> 00:02:30.526 A:middle
It's been used by schools not

00:02:30.526 --> 00:02:31.866 A:middle
only in the United States, but

00:02:31.866 --> 00:02:32.996 A:middle
in other countries as well.

00:02:33.666 --> 00:02:34.766 A:middle
Teachers use Schoolwork to

00:02:34.766 --> 00:02:36.096 A:middle
create assignments called

00:02:36.096 --> 00:02:37.976 A:middle
handouts and students receive

00:02:37.976 --> 00:02:39.176 A:middle
these handouts from within

00:02:39.176 --> 00:02:39.726 A:middle
Schoolwork.

00:02:41.126 --> 00:02:42.696 A:middle
When your application in

00:02:42.696 --> 00:02:44.436 A:middle
response to a handout activity

00:02:44.646 --> 00:02:46.856 A:middle
records progress, it is within

00:02:46.856 --> 00:02:48.506 A:middle
Schoolwork that the teacher and

00:02:48.506 --> 00:02:49.956 A:middle
student both can track this

00:02:49.956 --> 00:02:50.586 A:middle
progress.

00:02:51.606 --> 00:02:53.116 A:middle
Let's briefly look at Schoolwork

00:02:53.446 --> 00:02:54.386 A:middle
so you can understand the

00:02:54.386 --> 00:02:55.136 A:middle
workflow.

00:02:56.256 --> 00:02:57.466 A:middle
The first time you launch

00:02:57.466 --> 00:02:59.096 A:middle
Schoolwork as a developer, you

00:02:59.096 --> 00:03:00.356 A:middle
may see a screen like this.

00:02:59.096 --> 00:03:00.356 A:middle
may see a screen like this.

00:03:01.016 --> 00:03:02.666 A:middle
Schoolwork requires a managed

00:03:02.666 --> 00:03:03.166 A:middle
Apple ID.

00:03:03.166 --> 00:03:05.286 A:middle
These are the type of Apple IDs

00:03:05.286 --> 00:03:06.646 A:middle
that schools use in order to

00:03:06.646 --> 00:03:07.956 A:middle
assign them to students and

00:03:07.956 --> 00:03:08.456 A:middle
teachers.

00:03:09.036 --> 00:03:10.596 A:middle
Since most of us don't have a

00:03:10.596 --> 00:03:12.786 A:middle
managed Apple ID, we've provided

00:03:12.786 --> 00:03:14.846 A:middle
a useful switch in iOS under

00:03:14.846 --> 00:03:16.366 A:middle
Settings in the Developer's

00:03:16.366 --> 00:03:16.866 A:middle
Section.

00:03:19.086 --> 00:03:20.026 A:middle
You'll need the Developer

00:03:20.026 --> 00:03:21.226 A:middle
Install of iOS.

00:03:21.676 --> 00:03:23.186 A:middle
This adds additional developer

00:03:23.186 --> 00:03:24.696 A:middle
options in the Settings app.

00:03:26.376 --> 00:03:27.706 A:middle
One of the settings is labeled

00:03:27.706 --> 00:03:28.666 A:middle
ClassKit API.

00:03:30.046 --> 00:03:31.686 A:middle
Here you can emulate the role of

00:03:31.686 --> 00:03:32.946 A:middle
either a user with teacher

00:03:32.946 --> 00:03:34.796 A:middle
privileges, or a user with

00:03:34.796 --> 00:03:35.836 A:middle
student privileges.

00:03:36.426 --> 00:03:37.676 A:middle
Initially it is off.

00:03:39.046 --> 00:03:41.126 A:middle
But select Teacher and when you

00:03:41.126 --> 00:03:42.516 A:middle
launch Schoolwork, you'll have

00:03:42.516 --> 00:03:44.196 A:middle
the ability to create handouts

00:03:44.196 --> 00:03:45.416 A:middle
and assign them to a student.

00:03:46.166 --> 00:03:48.186 A:middle
Go back into Settings and switch

00:03:48.186 --> 00:03:50.256 A:middle
the ClassKit API role to Student

00:03:51.216 --> 00:03:52.616 A:middle
and when you return to

00:03:52.616 --> 00:03:54.176 A:middle
Schoolwork, you're now your

00:03:54.176 --> 00:03:55.846 A:middle
student persona and you can

00:03:55.846 --> 00:03:57.316 A:middle
complete that handout that you

00:03:57.316 --> 00:03:58.706 A:middle
just assigned from your teacher

00:03:58.706 --> 00:03:59.196 A:middle
persona.

00:04:00.016 --> 00:04:01.526 A:middle
If you're still with me, you can

00:04:01.526 --> 00:04:03.026 A:middle
then switch back to the teacher

00:04:03.026 --> 00:04:04.736 A:middle
role and see your student

00:04:04.736 --> 00:04:06.116 A:middle
persona's progress.

00:04:07.476 --> 00:04:09.236 A:middle
Okay, if you've never used

00:04:09.236 --> 00:04:10.876 A:middle
Schoolwork, here's an example of

00:04:10.876 --> 00:04:12.146 A:middle
what a handout looks like.

00:04:12.606 --> 00:04:14.376 A:middle
The handout recipients displayed

00:04:14.376 --> 00:04:15.586 A:middle
at the top of the card are

00:04:15.586 --> 00:04:16.716 A:middle
chosen by the teacher.

00:04:16.986 --> 00:04:18.486 A:middle
The title and instructions for

00:04:18.486 --> 00:04:19.666 A:middle
the handout just below the

00:04:19.666 --> 00:04:21.286 A:middle
recipients are created by the

00:04:21.286 --> 00:04:22.065 A:middle
teacher as well.

00:04:23.426 --> 00:04:25.506 A:middle
But the activity, the icon

00:04:25.506 --> 00:04:26.926 A:middle
representation of what you can

00:04:26.926 --> 00:04:28.886 A:middle
see here, could be an activity

00:04:28.886 --> 00:04:30.706 A:middle
in your ClassKit enabled app.

00:04:31.456 --> 00:04:33.086 A:middle
So how do we get from your code,

00:04:33.436 --> 00:04:35.206 A:middle
your app, to a handout?

00:04:36.316 --> 00:04:37.726 A:middle
By adopting ClassKit.

00:04:37.726 --> 00:04:40.126 A:middle
And there's an entire

00:04:40.126 --> 00:04:43.246 A:middle
presentation from WWDC 2018 that

00:04:43.246 --> 00:04:44.926 A:middle
covers ClassKit and it's full

00:04:44.926 --> 00:04:45.686 A:middle
feature set.

00:04:46.126 --> 00:04:47.596 A:middle
But for brevity, I'll give you a

00:04:47.596 --> 00:04:49.176 A:middle
primer on one specific and

00:04:49.176 --> 00:04:52.016 A:middle
important class in ClassKit, the

00:04:52.016 --> 00:04:53.196 A:middle
CLSContext.

00:04:54.096 --> 00:04:55.856 A:middle
If you're not familiar with the

00:04:55.856 --> 00:04:57.626 A:middle
whole of ClassKit, understanding

00:04:57.626 --> 00:04:59.146 A:middle
at least the CLSContext will

00:04:59.146 --> 00:05:00.666 A:middle
give you insight into how

00:04:59.146 --> 00:05:00.666 A:middle
give you insight into how

00:05:00.666 --> 00:05:02.116 A:middle
exactly your app can appear in

00:05:02.116 --> 00:05:03.656 A:middle
Schoolwork and be added to a

00:05:03.656 --> 00:05:04.246 A:middle
handout.

00:05:04.806 --> 00:05:05.866 A:middle
It is through the use of

00:05:05.866 --> 00:05:07.836 A:middle
CLSContexts that you're app can

00:05:07.836 --> 00:05:09.206 A:middle
surface the activities that it

00:05:09.206 --> 00:05:09.796 A:middle
supports.

00:05:10.436 --> 00:05:12.296 A:middle
If your app teaches coding, each

00:05:12.296 --> 00:05:13.556 A:middle
lesson might be an individual

00:05:13.556 --> 00:05:15.526 A:middle
activity and so each lesson

00:05:15.526 --> 00:05:16.756 A:middle
would have a corresponding

00:05:16.886 --> 00:05:18.006 A:middle
CLSContext.

00:05:18.876 --> 00:05:20.566 A:middle
And when a student is using your

00:05:20.566 --> 00:05:22.896 A:middle
app, those same CLSContexts

00:05:23.066 --> 00:05:24.456 A:middle
provide the scaffolding upon

00:05:24.456 --> 00:05:25.696 A:middle
which you hang the progress

00:05:25.696 --> 00:05:25.966 A:middle
data.

00:05:26.806 --> 00:05:28.356 A:middle
In the example app, I mentioned

00:05:28.356 --> 00:05:29.836 A:middle
we can keep track of time spent

00:05:29.836 --> 00:05:31.986 A:middle
within a given lesson, or if

00:05:31.986 --> 00:05:33.176 A:middle
there is a quiz in the app, we

00:05:33.176 --> 00:05:34.486 A:middle
can record the quiz score for

00:05:34.486 --> 00:05:36.076 A:middle
that student as progress data.

00:05:36.606 --> 00:05:39.476 A:middle
And as I alluded to, your

00:05:39.476 --> 00:05:41.196 A:middle
application can create as many

00:05:41.196 --> 00:05:43.216 A:middle
CLSContexts as there are

00:05:43.216 --> 00:05:44.636 A:middle
activities within your app.

00:05:44.986 --> 00:05:46.266 A:middle
As many as makes sense.

00:05:46.986 --> 00:05:48.516 A:middle
ClassKit has your organize them

00:05:48.516 --> 00:05:49.876 A:middle
in a tree structure with

00:05:49.986 --> 00:05:51.536 A:middle
child-parent relationships.

00:05:53.646 --> 00:05:54.886 A:middle
So let's take a look at what is

00:05:54.886 --> 00:05:56.526 A:middle
mean by your app's Context Tree.

00:05:57.256 --> 00:05:58.246 A:middle
It begins with the one

00:05:58.246 --> 00:06:00.276 A:middle
CLSContext that your app doesn't

00:05:58.246 --> 00:06:00.276 A:middle
CLSContext that your app doesn't

00:06:00.276 --> 00:06:00.736 A:middle
create.

00:06:01.186 --> 00:06:02.786 A:middle
This is the main app context.

00:06:03.386 --> 00:06:05.236 A:middle
The main app context is created

00:06:05.236 --> 00:06:06.606 A:middle
for you by ClassKit when you

00:06:06.606 --> 00:06:08.526 A:middle
request it and it is this

00:06:08.526 --> 00:06:11.046 A:middle
context that all CLSContext that

00:06:11.046 --> 00:06:12.406 A:middle
you will create will descend

00:06:12.406 --> 00:06:13.736 A:middle
from, will be children of.

00:06:14.646 --> 00:06:16.006 A:middle
It's the root node of the tree.

00:06:17.426 --> 00:06:18.806 A:middle
So before you do anything at all

00:06:18.806 --> 00:06:20.366 A:middle
with ClassKit in your app, you

00:06:20.366 --> 00:06:21.836 A:middle
need to request your main app

00:06:21.836 --> 00:06:23.336 A:middle
context from ClassKit.

00:06:23.916 --> 00:06:25.206 A:middle
You do this with a simple call

00:06:25.206 --> 00:06:27.626 A:middle
to the CLSDatastore singleton as

00:06:27.626 --> 00:06:28.226 A:middle
shown here.

00:06:28.916 --> 00:06:31.096 A:middle
But, before we go on to creating

00:06:31.096 --> 00:06:32.726 A:middle
contexts and adding them to our

00:06:32.726 --> 00:06:34.746 A:middle
main app context, we need to

00:06:34.746 --> 00:06:37.326 A:middle
step back and ask, what contexts

00:06:37.436 --> 00:06:39.536 A:middle
or activities does our app want

00:06:39.536 --> 00:06:40.066 A:middle
to present?

00:06:41.996 --> 00:06:43.246 A:middle
I'll stick with the example of

00:06:43.246 --> 00:06:44.536 A:middle
an app that is an introduction

00:06:44.536 --> 00:06:45.456 A:middle
on how to code.

00:06:46.026 --> 00:06:47.546 A:middle
For our example, I'll imagine

00:06:47.546 --> 00:06:48.526 A:middle
that there are three major

00:06:48.526 --> 00:06:49.546 A:middle
sections in the app.

00:06:50.096 --> 00:06:52.156 A:middle
An Intro section, a section on

00:06:52.156 --> 00:06:54.066 A:middle
Variables and Datatypes, and

00:06:54.066 --> 00:06:55.526 A:middle
then one on Conditionals.

00:06:56.096 --> 00:06:57.836 A:middle
We could consider each of these

00:06:57.836 --> 00:06:59.866 A:middle
an activity but ask yourself, if

00:06:59.866 --> 00:07:01.306 A:middle
a teacher might want to assign

00:06:59.866 --> 00:07:01.306 A:middle
a teacher might want to assign

00:07:01.306 --> 00:07:02.996 A:middle
one of these sections as part of

00:07:02.996 --> 00:07:03.576 A:middle
a handout.

00:07:04.296 --> 00:07:05.506 A:middle
These are large sections and

00:07:05.506 --> 00:07:06.806 A:middle
might cover a little too much

00:07:06.806 --> 00:07:07.756 A:middle
for a single handout.

00:07:07.756 --> 00:07:09.836 A:middle
It might be too large in scope.

00:07:11.056 --> 00:07:12.546 A:middle
But digging deeper into our app,

00:07:12.766 --> 00:07:14.866 A:middle
within each section our app has

00:07:14.896 --> 00:07:15.976 A:middle
individual lessons.

00:07:16.926 --> 00:07:18.586 A:middle
The lessons are smaller, more

00:07:18.586 --> 00:07:19.846 A:middle
bite-sized if you will.

00:07:20.326 --> 00:07:21.826 A:middle
It makes more sense to expose

00:07:21.826 --> 00:07:23.876 A:middle
these instead at the activities.

00:07:24.986 --> 00:07:26.216 A:middle
Since the sections were rather

00:07:26.216 --> 00:07:28.066 A:middle
broad, I'm going to assume no

00:07:28.066 --> 00:07:29.586 A:middle
teacher would assign an entire

00:07:29.586 --> 00:07:30.136 A:middle
section.

00:07:30.466 --> 00:07:31.966 A:middle
So I've removed them from

00:07:31.966 --> 00:07:32.806 A:middle
consideration.

00:07:33.256 --> 00:07:34.476 A:middle
We're left with these seven

00:07:34.476 --> 00:07:35.066 A:middle
lessons.

00:07:36.096 --> 00:07:38.126 A:middle
Oh, additionally in our app,

00:07:38.276 --> 00:07:39.466 A:middle
some of the lessons are followed

00:07:39.466 --> 00:07:40.966 A:middle
by a quiz to see how well the

00:07:40.966 --> 00:07:42.416 A:middle
student understood the lesson.

00:07:43.016 --> 00:07:44.496 A:middle
These would make nice activities

00:07:44.496 --> 00:07:45.836 A:middle
with which our app can provide

00:07:45.836 --> 00:07:47.306 A:middle
meaningful progress data to the

00:07:47.306 --> 00:07:49.356 A:middle
teacher like what score the

00:07:49.356 --> 00:07:50.656 A:middle
student gets on a quiz.

00:07:51.506 --> 00:07:52.566 A:middle
So where does that leave us?

00:07:53.186 --> 00:07:54.546 A:middle
We decide to take advantage of

00:07:54.546 --> 00:07:55.926 A:middle
the tree structure that ClassKit

00:07:55.926 --> 00:07:56.446 A:middle
allows.

00:07:56.786 --> 00:07:58.296 A:middle
The quizzes then can be children

00:07:58.296 --> 00:07:59.736 A:middle
activities of the lessons that

00:07:59.736 --> 00:08:00.256 A:middle
they cover.

00:07:59.736 --> 00:08:00.256 A:middle
they cover.

00:08:01.016 --> 00:08:03.416 A:middle
Okay, each item here makes sense

00:08:03.656 --> 00:08:05.476 A:middle
as an individual, progress

00:08:05.476 --> 00:08:06.826 A:middle
trackable activity.

00:08:07.296 --> 00:08:08.276 A:middle
They're not too broad.

00:08:08.676 --> 00:08:10.376 A:middle
But now let's see how an app can

00:08:10.376 --> 00:08:11.666 A:middle
go about representing these

00:08:11.666 --> 00:08:14.046 A:middle
activities as CLSContexts.

00:08:15.716 --> 00:08:17.716 A:middle
So I've depicted the activities

00:08:17.716 --> 00:08:19.556 A:middle
now in a tree like arrangement.

00:08:19.826 --> 00:08:21.296 A:middle
At the top of the tree is not

00:08:21.296 --> 00:08:22.966 A:middle
surprisingly, the main app

00:08:22.966 --> 00:08:24.646 A:middle
content that ClassKit provides

00:08:24.646 --> 00:08:25.046 A:middle
our app.

00:08:25.216 --> 00:08:26.916 A:middle
And descending from the main app

00:08:26.916 --> 00:08:28.556 A:middle
context are the first level of

00:08:28.556 --> 00:08:29.076 A:middle
children.

00:08:29.796 --> 00:08:31.146 A:middle
These are the seven lessons that

00:08:31.146 --> 00:08:31.876 A:middle
I described.

00:08:32.416 --> 00:08:33.826 A:middle
Or a lesson had a quiz, of

00:08:33.826 --> 00:08:35.606 A:middle
course we have a child seal as

00:08:35.606 --> 00:08:37.296 A:middle
context that represents that

00:08:37.296 --> 00:08:37.726 A:middle
quiz.

00:08:38.525 --> 00:08:39.996 A:middle
The labels I'm showing here for

00:08:39.996 --> 00:08:42.706 A:middle
each app created CLSContext is

00:08:42.706 --> 00:08:45.086 A:middle
the CLSContexts identifier

00:08:45.086 --> 00:08:45.686 A:middle
property.

00:08:46.016 --> 00:08:48.606 A:middle
The identifier is any string you

00:08:48.606 --> 00:08:50.776 A:middle
wish to assign to a CLSContext.

00:08:51.186 --> 00:08:52.526 A:middle
It's never seen by the teacher

00:08:52.526 --> 00:08:53.666 A:middle
or student so you can use

00:08:53.666 --> 00:08:54.916 A:middle
whatever nomenclature makes

00:08:54.916 --> 00:08:55.606 A:middle
sense for you.

00:08:55.906 --> 00:08:57.686 A:middle
For this example, I came up with

00:08:57.686 --> 00:08:59.346 A:middle
something fairly compact but

00:08:59.346 --> 00:08:59.876 A:middle
descriptive.

00:09:01.176 --> 00:09:03.396 A:middle
CLSContexts have a title

00:09:03.396 --> 00:09:04.356 A:middle
property as well.

00:09:04.476 --> 00:09:05.686 A:middle
And this is what the teacher and

00:09:05.686 --> 00:09:07.256 A:middle
student will see as I will soon

00:09:07.256 --> 00:09:07.816 A:middle
demonstrate.

00:09:08.486 --> 00:09:09.706 A:middle
I'm showing only a portion of

00:09:09.706 --> 00:09:11.176 A:middle
the context tree here with their

00:09:11.176 --> 00:09:12.576 A:middle
titles because of how much

00:09:12.576 --> 00:09:14.006 A:middle
visual space they would take up

00:09:14.006 --> 00:09:14.606 A:middle
on the slide.

00:09:15.816 --> 00:09:17.146 A:middle
But let's return to the

00:09:17.146 --> 00:09:17.946 A:middle
identifiers.

00:09:18.276 --> 00:09:19.586 A:middle
From the software side, we deal

00:09:19.586 --> 00:09:20.846 A:middle
with the identifier property

00:09:20.846 --> 00:09:21.606 A:middle
exclusively.

00:09:22.526 --> 00:09:24.486 A:middle
Once a CLSContext with a give

00:09:24.486 --> 00:09:25.966 A:middle
identifier is added to your

00:09:25.966 --> 00:09:28.396 A:middle
context tree, it will have an

00:09:28.396 --> 00:09:30.176 A:middle
implied identifier path.

00:09:31.196 --> 00:09:32.966 A:middle
ClassKit API often make

00:09:32.966 --> 00:09:34.906 A:middle
reference to this path so it is

00:09:34.906 --> 00:09:36.616 A:middle
worthwhile briefly explaining

00:09:36.926 --> 00:09:36.993 A:middle
it.

00:09:37.266 --> 00:09:38.916 A:middle
An identifier path is an array

00:09:38.916 --> 00:09:40.766 A:middle
of strings, an array of

00:09:40.766 --> 00:09:43.466 A:middle
identifiers of CLSContexts from

00:09:43.466 --> 00:09:45.286 A:middle
the root of your context tree to

00:09:45.286 --> 00:09:47.196 A:middle
the CLSContext in question.

00:09:47.876 --> 00:09:49.436 A:middle
I begin at any child of the main

00:09:49.436 --> 00:09:50.886 A:middle
app context and grab it's

00:09:50.886 --> 00:09:51.606 A:middle
identifier.

00:09:51.986 --> 00:09:53.696 A:middle
Append the identifiers of the

00:09:53.696 --> 00:09:55.606 A:middle
children as you descend the tree

00:09:55.836 --> 00:09:57.196 A:middle
until you arrive at some

00:09:57.346 --> 00:09:58.976 A:middle
intended CLSContext.

00:09:59.626 --> 00:10:01.296 A:middle
You have the identifier path now

00:09:59.626 --> 00:10:01.296 A:middle
You have the identifier path now

00:10:01.296 --> 00:10:02.876 A:middle
for that CLSContext.

00:10:04.136 --> 00:10:05.556 A:middle
Just to give you a single

00:10:05.556 --> 00:10:07.056 A:middle
example, consider the

00:10:07.056 --> 00:10:08.796 A:middle
highlighted CLSContext.

00:10:09.246 --> 00:10:11.776 A:middle
The identifier path that looks

00:10:11.776 --> 00:10:14.036 A:middle
like 4 underscore structs and 4

00:10:14.036 --> 00:10:16.126 A:middle
underscore quiz uniquely refers

00:10:16.126 --> 00:10:18.636 A:middle
to this one CLSContext and is

00:10:18.636 --> 00:10:20.466 A:middle
this quiz context's identifier

00:10:20.466 --> 00:10:20.816 A:middle
path.

00:10:21.926 --> 00:10:24.376 A:middle
Now having examined our app and

00:10:24.376 --> 00:10:25.666 A:middle
considered the activities we

00:10:25.666 --> 00:10:26.946 A:middle
want to support and their

00:10:26.946 --> 00:10:29.166 A:middle
hierarchy, we've arrived at this

00:10:29.166 --> 00:10:30.506 A:middle
tree representation of

00:10:30.506 --> 00:10:31.796 A:middle
CLSContexts.

00:10:32.426 --> 00:10:34.046 A:middle
If you want to see code examples

00:10:34.046 --> 00:10:36.076 A:middle
on how to create CLSContexts,

00:10:36.396 --> 00:10:37.866 A:middle
there are resources associated

00:10:37.866 --> 00:10:38.966 A:middle
with this presentation.

00:10:39.686 --> 00:10:40.986 A:middle
To stay within the scope of this

00:10:40.986 --> 00:10:42.796 A:middle
presentation, I want to go back

00:10:42.796 --> 00:10:44.206 A:middle
briefly to Schoolwork so we can

00:10:44.206 --> 00:10:45.266 A:middle
tie this discussion of

00:10:45.266 --> 00:10:47.326 A:middle
CLSContexts back into the

00:10:47.326 --> 00:10:48.666 A:middle
teacher-student workflow.

00:10:50.156 --> 00:10:51.526 A:middle
You'll recall that in Settings

00:10:51.576 --> 00:10:52.586 A:middle
you could select a teacher

00:10:52.586 --> 00:10:53.106 A:middle
persona.

00:10:53.576 --> 00:10:55.086 A:middle
If you select this and then you

00:10:55.086 --> 00:10:57.556 A:middle
launch Schoolwork, there is a

00:10:57.556 --> 00:10:59.196 A:middle
plus button in the top right

00:10:59.196 --> 00:11:00.716 A:middle
corner of the Dashboard that

00:10:59.196 --> 00:11:00.716 A:middle
corner of the Dashboard that

00:11:00.716 --> 00:11:02.196 A:middle
allows the teacher to create a

00:11:02.196 --> 00:11:02.906 A:middle
new handout.

00:11:03.836 --> 00:11:06.476 A:middle
Tapping on that, presents this

00:11:06.476 --> 00:11:06.736 A:middle
view.

00:11:07.296 --> 00:11:08.666 A:middle
It allows you to create a new

00:11:08.666 --> 00:11:09.216 A:middle
handout.

00:11:10.106 --> 00:11:11.876 A:middle
As I mentioned earlier, the

00:11:11.876 --> 00:11:13.596 A:middle
teacher determines who to assign

00:11:13.596 --> 00:11:15.196 A:middle
the handout to, gives the

00:11:15.196 --> 00:11:16.476 A:middle
handout a title, and

00:11:16.476 --> 00:11:17.196 A:middle
instructions.

00:11:17.916 --> 00:11:19.566 A:middle
But more interesting to us, is

00:11:19.566 --> 00:11:21.876 A:middle
the blue plus button, labeled

00:11:22.256 --> 00:11:23.246 A:middle
Add Activity.

00:11:24.056 --> 00:11:25.696 A:middle
Tapping on that brings up a list

00:11:25.696 --> 00:11:26.416 A:middle
of activities.

00:11:27.316 --> 00:11:28.316 A:middle
There are a number of different

00:11:28.316 --> 00:11:29.826 A:middle
options for adding various

00:11:29.826 --> 00:11:31.526 A:middle
document types, but we want to

00:11:31.526 --> 00:11:33.046 A:middle
pay attention to the top item,

00:11:33.606 --> 00:11:34.106 A:middle
Apps.

00:11:34.946 --> 00:11:36.926 A:middle
Tapping that brings up a list of

00:11:36.926 --> 00:11:39.056 A:middle
App activities, and there,

00:11:39.406 --> 00:11:40.896 A:middle
second on the list, is our

00:11:40.896 --> 00:11:41.696 A:middle
application.

00:11:42.346 --> 00:11:44.246 A:middle
That our app appears at all

00:11:44.356 --> 00:11:45.636 A:middle
indicates that our app has

00:11:45.636 --> 00:11:47.716 A:middle
created a CLSContext tree.

00:11:49.276 --> 00:11:51.066 A:middle
The disclosure chevron to the

00:11:51.066 --> 00:11:52.666 A:middle
right tells the teacher to drill

00:11:52.666 --> 00:11:54.086 A:middle
in for the activities for this

00:11:54.086 --> 00:11:54.346 A:middle
app.

00:11:55.346 --> 00:11:56.946 A:middle
And having tapped to drill in,

00:11:57.336 --> 00:11:58.456 A:middle
guess what is presented to the

00:11:58.456 --> 00:11:58.926 A:middle
teacher?

00:11:59.416 --> 00:12:01.426 A:middle
The CLSContexts that are the

00:11:59.416 --> 00:12:01.426 A:middle
The CLSContexts that are the

00:12:01.426 --> 00:12:03.346 A:middle
first descendants of our app's

00:12:03.346 --> 00:12:04.616 A:middle
main app context.

00:12:05.076 --> 00:12:06.646 A:middle
Here of course we are displaying

00:12:06.646 --> 00:12:08.796 A:middle
the titles for each CLSContext,

00:12:08.796 --> 00:12:10.026 A:middle
not the identifiers.

00:12:10.466 --> 00:12:11.876 A:middle
That's why their human readable.

00:12:12.286 --> 00:12:15.286 A:middle
Notice that the last five have a

00:12:15.286 --> 00:12:16.436 A:middle
disclosure chevron.

00:12:17.286 --> 00:12:18.576 A:middle
It should surprise you that

00:12:18.576 --> 00:12:20.396 A:middle
these are the CLSContexts that

00:12:20.396 --> 00:12:21.546 A:middle
had a quiz as well.

00:12:22.466 --> 00:12:25.506 A:middle
For example, if the teacher taps

00:12:25.506 --> 00:12:27.336 A:middle
into the third item down, "What

00:12:27.336 --> 00:12:30.086 A:middle
is a variable?", there's the

00:12:30.086 --> 00:12:30.626 A:middle
quiz.

00:12:31.066 --> 00:12:32.376 A:middle
But let's say that the teacher

00:12:32.376 --> 00:12:33.736 A:middle
is creating a handout that

00:12:33.736 --> 00:12:34.716 A:middle
introduces Swift.

00:12:34.996 --> 00:12:36.196 A:middle
The class is not yet for

00:12:36.196 --> 00:12:38.016 A:middle
variables so instead, the

00:12:38.016 --> 00:12:39.546 A:middle
teacher backs up by tapping the

00:12:39.546 --> 00:12:40.556 A:middle
button to return.

00:12:41.326 --> 00:12:42.856 A:middle
The teacher then taps the Select

00:12:42.856 --> 00:12:44.746 A:middle
button in the upper right and

00:12:44.746 --> 00:12:46.006 A:middle
selects the "What is Swift?"

00:12:46.006 --> 00:12:48.176 A:middle
activity. This is how you add an

00:12:48.176 --> 00:12:49.326 A:middle
activity to a handout.

00:12:50.486 --> 00:12:52.036 A:middle
So now, we're back on the

00:12:52.036 --> 00:12:53.276 A:middle
handout editing view.

00:12:53.436 --> 00:12:54.856 A:middle
And at this point, the teacher

00:12:54.856 --> 00:12:56.446 A:middle
can tap Post in the upper right

00:12:56.446 --> 00:12:58.056 A:middle
corner and the handout will then

00:12:58.056 --> 00:12:59.466 A:middle
be sent to the assignees.

00:12:59.596 --> 00:13:02.736 A:middle
And as we saw before, a handout

00:12:59.596 --> 00:13:02.736 A:middle
And as we saw before, a handout

00:13:02.736 --> 00:13:04.366 A:middle
card with the activity displayed

00:13:04.366 --> 00:13:05.836 A:middle
will appear in Schoolwork on

00:13:05.836 --> 00:13:06.816 A:middle
everyone's device.

00:13:07.916 --> 00:13:08.736 A:middle
There is more to learn in

00:13:08.736 --> 00:13:10.416 A:middle
ClassKit regarding what happens

00:13:10.416 --> 00:13:11.476 A:middle
when the student taps on the

00:13:11.476 --> 00:13:13.226 A:middle
activity and your app launches

00:13:13.506 --> 00:13:14.866 A:middle
and how you report progress

00:13:14.866 --> 00:13:16.656 A:middle
data, but that is outside of the

00:13:16.656 --> 00:13:17.816 A:middle
scope of this session.

00:13:17.816 --> 00:13:19.946 A:middle
I would refer you instead to the

00:13:19.946 --> 00:13:21.796 A:middle
many resources associated with

00:13:21.796 --> 00:13:23.536 A:middle
this session in particular, the

00:13:23.536 --> 00:13:26.596 A:middle
ClassKit session from WWDC 2018.

00:13:28.036 --> 00:13:29.636 A:middle
But with that somewhat focused

00:13:29.636 --> 00:13:31.606 A:middle
background on ClassKit, let's go

00:13:31.606 --> 00:13:32.896 A:middle
now to the new features.

00:13:34.206 --> 00:13:35.046 A:middle
The features I'm going to

00:13:35.046 --> 00:13:36.496 A:middle
describe were introduced in

00:13:36.496 --> 00:13:39.156 A:middle
ClassKit for iOS version 12.2,

00:13:39.436 --> 00:13:40.766 A:middle
so these are already available

00:13:40.766 --> 00:13:41.186 A:middle
today.

00:13:42.096 --> 00:13:43.486 A:middle
We've added a new context

00:13:43.486 --> 00:13:45.436 A:middle
provider extension, added a new

00:13:45.436 --> 00:13:46.936 A:middle
function you can call to mark an

00:13:46.936 --> 00:13:49.106 A:middle
activity as complete and added a

00:13:49.106 --> 00:13:50.346 A:middle
new progress value.

00:13:51.256 --> 00:13:52.606 A:middle
The first feature I'll discuss

00:13:52.686 --> 00:13:53.846 A:middle
is the Context Provider

00:13:53.846 --> 00:13:54.476 A:middle
Extension.

00:13:55.236 --> 00:13:55.866 A:middle
The name might be

00:13:55.866 --> 00:13:56.986 A:middle
self-explanatory.

00:13:57.276 --> 00:13:58.786 A:middle
It is a new extension you can

00:13:58.786 --> 00:14:00.236 A:middle
create for your app that will be

00:13:58.786 --> 00:14:00.236 A:middle
create for your app that will be

00:14:00.236 --> 00:14:01.666 A:middle
called upon to create your

00:14:01.666 --> 00:14:03.636 A:middle
CLSContext tree to provide

00:14:03.636 --> 00:14:04.386 A:middle
contexts.

00:14:05.506 --> 00:14:06.846 A:middle
But before I explain how it

00:14:06.846 --> 00:14:08.326 A:middle
works, I want to show you how

00:14:08.326 --> 00:14:09.666 A:middle
you would initially create this

00:14:09.666 --> 00:14:10.246 A:middle
extension.

00:14:10.356 --> 00:14:12.296 A:middle
Here is the most recent Xcode.

00:14:12.586 --> 00:14:13.986 A:middle
If you go to the File menu and

00:14:13.986 --> 00:14:15.526 A:middle
select New and then Target, for

00:14:15.916 --> 00:14:18.036 A:middle
the iOS application Extensions

00:14:18.076 --> 00:14:20.506 A:middle
Templates, there is a new

00:14:20.506 --> 00:14:22.716 A:middle
template for ClassKit Context

00:14:22.716 --> 00:14:23.226 A:middle
Provider.

00:14:24.106 --> 00:14:25.366 A:middle
When you add this target to your

00:14:25.366 --> 00:14:26.896 A:middle
app, it creates a single new

00:14:26.896 --> 00:14:27.766 A:middle
file for you.

00:14:28.446 --> 00:14:29.846 A:middle
Let me explain how the Context

00:14:29.846 --> 00:14:31.646 A:middle
Provider Extension works by

00:14:31.646 --> 00:14:33.066 A:middle
showing you boilerplate code

00:14:33.066 --> 00:14:33.996 A:middle
that you might implement.

00:14:34.306 --> 00:14:35.566 A:middle
I'll show you after how it will

00:14:35.566 --> 00:14:37.126 A:middle
likely be used by Schoolwork.

00:14:39.056 --> 00:14:40.846 A:middle
So, I said that a context

00:14:40.846 --> 00:14:42.496 A:middle
provider extension adds a single

00:14:42.496 --> 00:14:43.026 A:middle
file.

00:14:43.266 --> 00:14:44.586 A:middle
It's in fact just a single

00:14:44.586 --> 00:14:45.176 A:middle
class.

00:14:45.516 --> 00:14:48.196 A:middle
CLSContextProvider is the super

00:14:48.196 --> 00:14:50.146 A:middle
class where you must override

00:14:50.346 --> 00:14:51.526 A:middle
just one function,

00:14:52.196 --> 00:14:54.726 A:middle
updateDescendants of context

00:14:54.866 --> 00:14:55.546 A:middle
completion.

00:14:56.336 --> 00:14:57.306 A:middle
ClassKit will call your

00:14:57.306 --> 00:14:58.876 A:middle
extensions updateDescendants

00:14:58.876 --> 00:14:59.216 A:middle
call.

00:14:59.776 --> 00:15:01.296 A:middle
When called, your extension is

00:14:59.776 --> 00:15:01.296 A:middle
When called, your extension is

00:15:01.296 --> 00:15:02.936 A:middle
being asked to add a minimum,

00:15:03.146 --> 00:15:04.846 A:middle
update or provide the children's

00:15:04.846 --> 00:15:07.686 A:middle
CLSContexts, of the CLSContext

00:15:07.686 --> 00:15:08.716 A:middle
being passed in.

00:15:09.536 --> 00:15:10.826 A:middle
You don't return these children

00:15:10.826 --> 00:15:11.886 A:middle
in the function, mind you.

00:15:12.226 --> 00:15:13.956 A:middle
Your extension is being asked to

00:15:13.956 --> 00:15:15.736 A:middle
add or update just a specific

00:15:15.736 --> 00:15:17.456 A:middle
part of your app's context tree

00:15:17.636 --> 00:15:18.966 A:middle
and to save those changes.

00:15:20.326 --> 00:15:21.896 A:middle
And for reasons I'll explain

00:15:22.236 --> 00:15:23.366 A:middle
your code in this function

00:15:23.366 --> 00:15:24.806 A:middle
should be as performant as

00:15:24.806 --> 00:15:25.356 A:middle
possible.

00:15:27.376 --> 00:15:28.556 A:middle
I'll go back to our earlier

00:15:28.556 --> 00:15:30.146 A:middle
example to give you an idea of

00:15:30.146 --> 00:15:31.386 A:middle
how this all might work.

00:15:31.966 --> 00:15:33.236 A:middle
Imagine your extension being

00:15:33.236 --> 00:15:34.996 A:middle
called updateDescendants of

00:15:34.996 --> 00:15:36.756 A:middle
context completion being called.

00:15:37.026 --> 00:15:39.226 A:middle
And the CLSContext passed in is

00:15:39.226 --> 00:15:40.876 A:middle
your app's main app context.

00:15:41.036 --> 00:15:42.656 A:middle
How does your code know it's the

00:15:42.656 --> 00:15:43.706 A:middle
main app context?

00:15:43.836 --> 00:15:45.536 A:middle
The simplest check is to see if

00:15:45.536 --> 00:15:47.536 A:middle
the CLSContext passed in has a

00:15:47.536 --> 00:15:48.016 A:middle
parent.

00:15:48.356 --> 00:15:50.156 A:middle
Only the main app context is

00:15:50.156 --> 00:15:50.896 A:middle
parentless.

00:15:51.596 --> 00:15:53.676 A:middle
So, your contract is to update

00:15:53.676 --> 00:15:55.666 A:middle
your context tree to provide at

00:15:55.666 --> 00:15:57.516 A:middle
least the first tier, that is,

00:15:57.516 --> 00:15:58.936 A:middle
the immediate children

00:15:58.996 --> 00:16:00.966 A:middle
CLSContext of your main app

00:15:58.996 --> 00:16:00.966 A:middle
CLSContext of your main app

00:16:00.966 --> 00:16:01.646 A:middle
context.

00:16:02.406 --> 00:16:03.906 A:middle
If you recall from our example,

00:16:04.096 --> 00:16:05.166 A:middle
this would correspond to the

00:16:05.166 --> 00:16:07.966 A:middle
CLSContext what is an IDE, what

00:16:07.966 --> 00:16:09.806 A:middle
is Swift, what is a variable, et

00:16:09.806 --> 00:16:10.216 A:middle
cetera.

00:16:10.566 --> 00:16:12.596 A:middle
Those seven top level lessons,

00:16:13.056 --> 00:16:14.776 A:middle
or since we've been referring to

00:16:14.776 --> 00:16:16.136 A:middle
them by their identifiers,

00:16:16.516 --> 00:16:16.956 A:middle
these.

00:16:19.386 --> 00:16:20.796 A:middle
If these children are all there,

00:16:21.406 --> 00:16:23.146 A:middle
exist already in your context

00:16:23.146 --> 00:16:24.246 A:middle
tree, do not need to be

00:16:24.246 --> 00:16:25.996 A:middle
modified, then your code need do

00:16:25.996 --> 00:16:26.676 A:middle
nothing at all.

00:16:27.126 --> 00:16:28.016 A:middle
You can simply call the

00:16:28.016 --> 00:16:29.636 A:middle
completion block and pass no

00:16:29.636 --> 00:16:31.386 A:middle
error to indicate all is well.

00:16:32.216 --> 00:16:33.456 A:middle
But the extension exists to

00:16:33.456 --> 00:16:34.976 A:middle
allow you to create this portion

00:16:34.976 --> 00:16:36.466 A:middle
of your tree in the event that

00:16:36.466 --> 00:16:37.636 A:middle
the teacher had never yet

00:16:37.636 --> 00:16:39.236 A:middle
visited this portion of your

00:16:39.236 --> 00:16:39.556 A:middle
app.

00:16:39.756 --> 00:16:41.276 A:middle
Maybe they have never launched

00:16:41.276 --> 00:16:41.916 A:middle
your app at all.

00:16:42.776 --> 00:16:44.156 A:middle
I want to add though that your

00:16:44.156 --> 00:16:45.906 A:middle
extension is free to populate

00:16:45.906 --> 00:16:47.686 A:middle
more of your app's context tree.

00:16:48.106 --> 00:16:49.606 A:middle
In fact, could populate the

00:16:49.606 --> 00:16:51.396 A:middle
entire tree as long as it can be

00:16:51.396 --> 00:16:52.076 A:middle
done quickly.

00:16:52.836 --> 00:16:54.116 A:middle
You'll see why this is important

00:16:54.116 --> 00:16:54.616 A:middle
in a minute.

00:16:54.966 --> 00:16:56.636 A:middle
For this example, I'll stick to

00:16:56.636 --> 00:16:58.146 A:middle
the bare minimum and imagine

00:16:58.146 --> 00:16:59.296 A:middle
that we only create the

00:16:59.296 --> 00:17:00.926 A:middle
immediate descendants of the

00:16:59.296 --> 00:17:00.926 A:middle
immediate descendants of the

00:17:00.926 --> 00:17:02.596 A:middle
CLSContext passed in.

00:17:03.246 --> 00:17:05.226 A:middle
And so, we create those seven

00:17:05.226 --> 00:17:07.026 A:middle
descendants, and our context

00:17:07.026 --> 00:17:08.256 A:middle
tree should look like this.

00:17:09.816 --> 00:17:11.526 A:middle
Let me give one more example and

00:17:11.526 --> 00:17:12.685 A:middle
I think it will be clearer how

00:17:12.685 --> 00:17:13.296 A:middle
this works.

00:17:13.886 --> 00:17:15.526 A:middle
Consider now your extension is

00:17:15.526 --> 00:17:16.246 A:middle
called again.

00:17:16.596 --> 00:17:18.566 A:middle
But this time, the CLSContext

00:17:18.566 --> 00:17:20.685 A:middle
with the identifier 3 underscore

00:17:20.685 --> 00:17:23.266 A:middle
datatypes is the CLSContext

00:17:23.266 --> 00:17:24.366 A:middle
passed to the function.

00:17:25.106 --> 00:17:27.286 A:middle
The expectation is that your

00:17:27.286 --> 00:17:29.446 A:middle
code will add or update at least

00:17:29.446 --> 00:17:31.606 A:middle
the immediate descendants of 3

00:17:31.606 --> 00:17:32.886 A:middle
underscore datatypes.

00:17:33.746 --> 00:17:35.346 A:middle
And you may recall, this was

00:17:35.346 --> 00:17:36.376 A:middle
simply a quiz.

00:17:36.576 --> 00:17:38.156 A:middle
And so, we have added it here.

00:17:40.476 --> 00:17:41.686 A:middle
What is the purpose of the

00:17:41.686 --> 00:17:43.326 A:middle
context provider extension?

00:17:44.056 --> 00:17:45.406 A:middle
I essentially laid it out for

00:17:45.406 --> 00:17:46.766 A:middle
you, it's to give your app an

00:17:46.766 --> 00:17:48.196 A:middle
opportunity to create your

00:17:48.196 --> 00:17:50.666 A:middle
CLSContext tree to, in effect,

00:17:50.936 --> 00:17:52.966 A:middle
advertise your app's activities,

00:17:53.116 --> 00:17:54.576 A:middle
and the teacher will not have

00:17:54.576 --> 00:17:56.046 A:middle
needed to have even launched

00:17:56.046 --> 00:17:56.556 A:middle
your app.

00:17:57.686 --> 00:17:59.446 A:middle
Of course, the teacher will have

00:17:59.446 --> 00:18:01.126 A:middle
had to have downloaded your app.

00:17:59.446 --> 00:18:01.126 A:middle
had to have downloaded your app.

00:18:01.326 --> 00:18:02.976 A:middle
But the very act of downloading

00:18:02.976 --> 00:18:04.096 A:middle
will cause your ClassKit

00:18:04.096 --> 00:18:05.516 A:middle
extension to be registered with

00:18:05.706 --> 00:18:07.706 A:middle
iOS, such as the ClassKit, and

00:18:07.746 --> 00:18:09.346 A:middle
more specifically, Schoolwork

00:18:09.466 --> 00:18:10.486 A:middle
will be aware of those

00:18:10.486 --> 00:18:11.696 A:middle
activities available.

00:18:15.376 --> 00:18:17.146 A:middle
Some of your apps may support a

00:18:17.146 --> 00:18:18.876 A:middle
bevy of activities and have a

00:18:18.876 --> 00:18:20.876 A:middle
tree that may be broad or deep.

00:18:21.366 --> 00:18:22.876 A:middle
To create this entire tree when

00:18:22.876 --> 00:18:24.216 A:middle
your app launches might cause a

00:18:24.216 --> 00:18:25.166 A:middle
performance issue.

00:18:25.166 --> 00:18:27.456 A:middle
So, this extension is designed

00:18:27.456 --> 00:18:29.056 A:middle
to allow you to dole out

00:18:29.056 --> 00:18:31.566 A:middle
CLSContexts in smaller batches.

00:18:32.646 --> 00:18:34.686 A:middle
Some ClassKit apps require user

00:18:34.686 --> 00:18:36.206 A:middle
interaction before they can

00:18:36.206 --> 00:18:37.616 A:middle
begin to create their context

00:18:37.616 --> 00:18:37.906 A:middle
tree.

00:18:38.626 --> 00:18:40.376 A:middle
Unfortunately, the extension is

00:18:40.376 --> 00:18:41.986 A:middle
not going to be useful in those

00:18:41.986 --> 00:18:42.536 A:middle
cases.

00:18:42.726 --> 00:18:44.306 A:middle
The extension is called without

00:18:44.306 --> 00:18:45.386 A:middle
an option for your app to

00:18:45.386 --> 00:18:46.276 A:middle
display any UI.

00:18:47.886 --> 00:18:50.246 A:middle
Finally, I want to present to

00:18:50.246 --> 00:18:51.776 A:middle
you how your Context Provider

00:18:51.776 --> 00:18:53.326 A:middle
Extension fits in with the

00:18:53.326 --> 00:18:54.206 A:middle
teacher workflow.

00:18:54.876 --> 00:18:56.176 A:middle
Recall the example that I gave

00:18:56.176 --> 00:18:57.456 A:middle
earlier, where a teacher was

00:18:57.456 --> 00:18:58.806 A:middle
creating a handout and was

00:18:58.806 --> 00:18:59.676 A:middle
navigating through the

00:18:59.676 --> 00:19:00.866 A:middle
activities available.

00:18:59.676 --> 00:19:00.866 A:middle
activities available.

00:19:01.636 --> 00:19:02.846 A:middle
If your app has a context

00:19:02.846 --> 00:19:04.306 A:middle
provider extension, you can

00:19:04.306 --> 00:19:05.606 A:middle
expect it to be called before

00:19:05.606 --> 00:19:07.246 A:middle
the teacher gets to this screen

00:19:07.246 --> 00:19:07.996 A:middle
in Schoolwork.

00:19:08.536 --> 00:19:09.636 A:middle
Your extension should have been

00:19:09.636 --> 00:19:10.636 A:middle
called with the main app

00:19:10.636 --> 00:19:12.186 A:middle
context, so that your app can be

00:19:12.186 --> 00:19:13.646 A:middle
presented here as having

00:19:13.786 --> 00:19:14.926 A:middle
available activities.

00:19:15.636 --> 00:19:16.766 A:middle
And should the teacher begin

00:19:16.766 --> 00:19:18.186 A:middle
drilling down into your app's

00:19:18.186 --> 00:19:20.886 A:middle
activity hierarchy, you can

00:19:20.886 --> 00:19:22.606 A:middle
expect repeated calls to your

00:19:22.606 --> 00:19:24.466 A:middle
extension to provide more depth

00:19:24.466 --> 00:19:26.006 A:middle
to your CLSContext tree.

00:19:26.936 --> 00:19:28.586 A:middle
Since it is possible that your

00:19:28.586 --> 00:19:30.236 A:middle
tree is being created in more or

00:19:30.236 --> 00:19:32.166 A:middle
less real time, live as the

00:19:32.166 --> 00:19:34.156 A:middle
teacher is drilling in, this is

00:19:34.156 --> 00:19:35.686 A:middle
why it is important that your

00:19:35.686 --> 00:19:37.576 A:middle
extension code work quickly to

00:19:37.576 --> 00:19:40.176 A:middle
create and save the CLSContext

00:19:40.326 --> 00:19:41.146 A:middle
being asked for.

00:19:42.206 --> 00:19:43.896 A:middle
I think you can see now how all

00:19:43.896 --> 00:19:44.866 A:middle
the pieces of this work

00:19:44.866 --> 00:19:46.776 A:middle
together, the extension, your

00:19:46.776 --> 00:19:48.566 A:middle
app's tree of activities and

00:19:48.566 --> 00:19:49.116 A:middle
Schoolwork.

00:19:50.426 --> 00:19:52.106 A:middle
The next feature new to ClassKit

00:19:52.356 --> 00:19:53.846 A:middle
is an API that allows your app

00:19:53.846 --> 00:19:54.936 A:middle
to mark an activity as

00:19:54.936 --> 00:19:55.456 A:middle
completed.

00:19:55.616 --> 00:19:57.416 A:middle
That is, to make it easier for

00:19:57.416 --> 00:19:58.936 A:middle
the student to let the teacher

00:19:58.936 --> 00:20:00.446 A:middle
know that the activity that was

00:19:58.936 --> 00:20:00.446 A:middle
know that the activity that was

00:20:00.446 --> 00:20:02.786 A:middle
assigned is done.

00:20:03.046 --> 00:20:04.486 A:middle
To understand why this is a nice

00:20:04.486 --> 00:20:06.576 A:middle
new feature, let me revisit

00:20:06.576 --> 00:20:08.546 A:middle
Schoolwork but briefly show you

00:20:08.546 --> 00:20:09.446 A:middle
the student side.

00:20:10.116 --> 00:20:11.046 A:middle
We've seen a bit about the

00:20:11.046 --> 00:20:12.576 A:middle
teacher workflow for assigning

00:20:12.576 --> 00:20:13.186 A:middle
activities.

00:20:13.436 --> 00:20:14.446 A:middle
What's it like to be on the

00:20:14.446 --> 00:20:15.146 A:middle
receiving end?

00:20:15.806 --> 00:20:17.356 A:middle
This is the handout card that I

00:20:17.356 --> 00:20:18.046 A:middle
showed earlier.

00:20:18.396 --> 00:20:19.746 A:middle
It's how the student sees it in

00:20:19.746 --> 00:20:20.316 A:middle
Schoolwork.

00:20:21.166 --> 00:20:25.426 A:middle
When they tap on it, they see

00:20:25.426 --> 00:20:27.116 A:middle
the handout with the activities,

00:20:27.526 --> 00:20:28.836 A:middle
just the one activity in this

00:20:28.836 --> 00:20:29.166 A:middle
case.

00:20:29.516 --> 00:20:31.056 A:middle
Tapping on the activity takes

00:20:31.056 --> 00:20:31.856 A:middle
them to your app.

00:20:32.216 --> 00:20:33.776 A:middle
But after completing the

00:20:33.776 --> 00:20:35.776 A:middle
activity, the students still has

00:20:35.776 --> 00:20:37.846 A:middle
to come back to Schoolwork and

00:20:37.846 --> 00:20:39.206 A:middle
tap the complete button.

00:20:40.246 --> 00:20:41.816 A:middle
If your app adopts a new

00:20:41.816 --> 00:20:43.906 A:middle
ClassKit API, you can make this

00:20:43.906 --> 00:20:45.256 A:middle
last step unnecessary.

00:20:45.256 --> 00:20:47.536 A:middle
From within your app, you can

00:20:47.536 --> 00:20:49.266 A:middle
mark the activity complete by

00:20:49.266 --> 00:20:50.576 A:middle
calling a new API.

00:20:52.016 --> 00:20:54.186 A:middle
The CLSDataStore has a new

00:20:54.186 --> 00:20:54.976 A:middle
function called

00:20:55.246 --> 00:20:57.166 A:middle
completeAllAssignedActivities

00:20:57.406 --> 00:20:58.956 A:middle
matching contextPath.

00:20:59.306 --> 00:21:01.266 A:middle
The path is, of course, an

00:20:59.306 --> 00:21:01.266 A:middle
The path is, of course, an

00:21:01.326 --> 00:21:02.606 A:middle
identifier path to the

00:21:02.606 --> 00:21:04.926 A:middle
CLSContext or activity that the

00:21:04.926 --> 00:21:06.016 A:middle
student just completed.

00:21:06.706 --> 00:21:08.186 A:middle
If, for example, the student

00:21:08.186 --> 00:21:09.666 A:middle
just completed the, what is a

00:21:09.666 --> 00:21:11.466 A:middle
variable quiz within this app,

00:21:12.146 --> 00:21:13.516 A:middle
we can indicate it is complete

00:21:13.516 --> 00:21:14.156 A:middle
by calling

00:21:14.156 --> 00:21:16.036 A:middle
completeAllAssignedActivities

00:21:16.186 --> 00:21:18.036 A:middle
for the CLSContext with the path

00:21:18.306 --> 00:21:20.596 A:middle
2 underscore vars, 2 underscore

00:21:20.596 --> 00:21:21.086 A:middle
quiz.

00:21:21.806 --> 00:21:23.136 A:middle
The next time the student

00:21:23.136 --> 00:21:25.516 A:middle
returns to Schoolwork, it will

00:21:25.516 --> 00:21:27.186 A:middle
indicate the activity complete.

00:21:27.516 --> 00:21:28.946 A:middle
Further, the teacher who

00:21:28.946 --> 00:21:30.586 A:middle
assigned the handout will also

00:21:30.586 --> 00:21:31.936 A:middle
find the activity marked as

00:21:31.936 --> 00:21:33.096 A:middle
complete for that student.

00:21:33.886 --> 00:21:35.286 A:middle
If your app adapts this new

00:21:35.286 --> 00:21:36.756 A:middle
call, the student's workflow

00:21:36.756 --> 00:21:37.866 A:middle
will be much smoother.

00:21:39.406 --> 00:21:42.806 A:middle
Finally, ClassKit and iOS 12.2

00:21:42.886 --> 00:21:45.236 A:middle
adds a new activity item type, a

00:21:45.236 --> 00:21:46.776 A:middle
correct/incorrect type.

00:21:48.396 --> 00:21:49.736 A:middle
In my ClassKit overview, I

00:21:49.736 --> 00:21:51.766 A:middle
didn't describe the CLS activity

00:21:51.766 --> 00:21:53.796 A:middle
class, but for purposes of

00:21:53.796 --> 00:21:55.216 A:middle
introducing this new feature,

00:21:55.216 --> 00:21:56.956 A:middle
I'll just mention that each

00:21:56.956 --> 00:21:59.156 A:middle
CLSContext can have an activity

00:21:59.156 --> 00:22:01.196 A:middle
in the form of a CLS activity

00:21:59.156 --> 00:22:01.196 A:middle
in the form of a CLS activity

00:22:01.196 --> 00:22:01.856 A:middle
object.

00:22:02.286 --> 00:22:05.046 A:middle
And, a CLS activity can have any

00:22:05.046 --> 00:22:07.456 A:middle
number of CLS activity items.

00:22:08.846 --> 00:22:11.396 A:middle
Now, CLSActivityItem is a parent

00:22:11.396 --> 00:22:12.766 A:middle
class to a handful of other

00:22:12.766 --> 00:22:13.356 A:middle
classes.

00:22:13.526 --> 00:22:14.916 A:middle
And I'll call out one, in

00:22:14.916 --> 00:22:18.106 A:middle
particular, the CLSBinaryItem.

00:22:18.646 --> 00:22:22.016 A:middle
A CLSBinaryItem can only

00:22:22.016 --> 00:22:23.666 A:middle
represent progress in one of two

00:22:23.666 --> 00:22:25.326 A:middle
states, the flavors of which are

00:22:25.326 --> 00:22:25.856 A:middle
shown here.

00:22:26.646 --> 00:22:27.816 A:middle
Maybe the progress you want to

00:22:27.816 --> 00:22:28.946 A:middle
report is simply whether the

00:22:28.946 --> 00:22:30.246 A:middle
student passed or failed.

00:22:30.616 --> 00:22:33.156 A:middle
And CLSBinaryItem has an ENUM to

00:22:33.156 --> 00:22:33.996 A:middle
indicate this.

00:22:34.536 --> 00:22:36.196 A:middle
Additionally, you can indicate

00:22:36.196 --> 00:22:38.416 A:middle
true versus false or yes versus

00:22:38.416 --> 00:22:38.746 A:middle
no.

00:22:39.596 --> 00:22:41.036 A:middle
But we heard from developers

00:22:41.036 --> 00:22:41.976 A:middle
that felt as though we were

00:22:41.976 --> 00:22:43.736 A:middle
missing another binary flavor.

00:22:45.496 --> 00:22:46.956 A:middle
So, ClassKit has defined the

00:22:46.956 --> 00:22:49.006 A:middle
correct/incorrect enumeration to

00:22:49.006 --> 00:22:50.716 A:middle
describe this new type of binary

00:22:50.716 --> 00:22:51.306 A:middle
activity.

00:22:51.986 --> 00:22:53.376 A:middle
Consider the quiz example that I

00:22:53.376 --> 00:22:54.746 A:middle
mentioned for our sample app.

00:22:55.066 --> 00:22:56.656 A:middle
It consists of ten questions.

00:22:56.866 --> 00:22:58.626 A:middle
We'll probably not use a binary

00:22:58.626 --> 00:23:00.176 A:middle
activity type for the primary

00:22:58.626 --> 00:23:00.176 A:middle
activity type for the primary

00:23:00.176 --> 00:23:01.856 A:middle
activity item, because we want

00:23:01.856 --> 00:23:02.926 A:middle
to represent the score as a

00:23:02.926 --> 00:23:03.626 A:middle
quantity.

00:23:03.726 --> 00:23:05.266 A:middle
So, the teacher sees that the

00:23:05.266 --> 00:23:07.526 A:middle
student got 70%, for example.

00:23:08.916 --> 00:23:11.126 A:middle
But as a bonus, our app can add

00:23:11.126 --> 00:23:12.706 A:middle
additional activity items.

00:23:12.786 --> 00:23:14.216 A:middle
For example, one for each

00:23:14.216 --> 00:23:16.156 A:middle
question, and indicate correct

00:23:16.156 --> 00:23:17.696 A:middle
or incorrect for those so that

00:23:17.696 --> 00:23:18.726 A:middle
the teacher can see which

00:23:18.726 --> 00:23:20.076 A:middle
questions the student missed,

00:23:20.346 --> 00:23:21.706 A:middle
which ones they got correct.

00:23:22.246 --> 00:23:23.906 A:middle
I just offer that as one example

00:23:23.906 --> 00:23:25.376 A:middle
of how this type might be used.

00:23:26.756 --> 00:23:29.246 A:middle
So, finally, let's talk about

00:23:29.246 --> 00:23:31.416 A:middle
ClassKit coding best practices.

00:23:33.676 --> 00:23:35.036 A:middle
I've already described that it

00:23:35.116 --> 00:23:36.556 A:middle
is an error to add to your

00:23:36.556 --> 00:23:39.306 A:middle
context tree, a CLSContext whose

00:23:39.366 --> 00:23:41.296 A:middle
identifier path is not unique.

00:23:41.496 --> 00:23:43.546 A:middle
At first blush, this sounds sort

00:23:43.546 --> 00:23:44.796 A:middle
of like an error that's hard to

00:23:44.796 --> 00:23:45.206 A:middle
make.

00:23:45.576 --> 00:23:46.656 A:middle
But consider the following

00:23:46.656 --> 00:23:48.856 A:middle
scenario, your app launches for

00:23:48.856 --> 00:23:50.446 A:middle
the very first time, and you

00:23:50.446 --> 00:23:52.586 A:middle
dutifully create a CLSContext

00:23:52.586 --> 00:23:54.276 A:middle
tree in order to make available

00:23:54.276 --> 00:23:55.426 A:middle
your app's activities.

00:23:55.856 --> 00:23:57.516 A:middle
A portion of that original tree

00:23:57.516 --> 00:23:58.166 A:middle
is shown here.

00:23:59.646 --> 00:24:01.676 A:middle
On your app's second launch, you

00:23:59.646 --> 00:24:01.676 A:middle
On your app's second launch, you

00:24:01.676 --> 00:24:03.026 A:middle
should not create your

00:24:03.026 --> 00:24:04.946 A:middle
CLSContext tree again.

00:24:06.296 --> 00:24:08.366 A:middle
This would be adding CLSContext

00:24:08.506 --> 00:24:10.256 A:middle
that have identifier paths that

00:24:10.256 --> 00:24:11.826 A:middle
conflict with the existing ones.

00:24:12.236 --> 00:24:13.716 A:middle
You should always check that a

00:24:13.716 --> 00:24:15.936 A:middle
CLSContext does not exist first

00:24:15.936 --> 00:24:17.516 A:middle
in your tree before adding it.

00:24:18.936 --> 00:24:20.576 A:middle
There are a few ways to check to

00:24:20.576 --> 00:24:22.736 A:middle
see if a CLSContext is already

00:24:22.736 --> 00:24:23.556 A:middle
part of your tree.

00:24:23.996 --> 00:24:24.956 A:middle
One way is to call the

00:24:24.956 --> 00:24:27.486 A:middle
CLSDataStore function contexts

00:24:27.486 --> 00:24:28.906 A:middle
matchingIdentifierPath.

00:24:29.086 --> 00:24:30.636 A:middle
And when your completion block

00:24:30.636 --> 00:24:32.566 A:middle
is called, a note that the call

00:24:32.566 --> 00:24:34.896 A:middle
is asynchronous, an empty array

00:24:34.896 --> 00:24:36.606 A:middle
for the CLSContext returned

00:24:36.776 --> 00:24:38.196 A:middle
would indicate the context with

00:24:38.196 --> 00:24:40.086 A:middle
that path does not yet exist.

00:24:40.226 --> 00:24:41.866 A:middle
So, it would be correct to now

00:24:41.866 --> 00:24:43.276 A:middle
create it.

00:24:43.276 --> 00:24:44.906 A:middle
Or, instead there was a

00:24:44.906 --> 00:24:47.126 A:middle
CLSContext function descendant's

00:24:47.126 --> 00:24:49.146 A:middle
matchingIdentifierPath that you

00:24:49.146 --> 00:24:49.706 A:middle
could call.

00:24:50.226 --> 00:24:51.656 A:middle
It also is asynchronous.

00:24:51.656 --> 00:24:53.096 A:middle
And like the previous example,

00:24:53.396 --> 00:24:55.046 A:middle
if no context is passed to your

00:24:55.046 --> 00:24:56.926 A:middle
completion block, then again, it

00:24:56.926 --> 00:24:58.236 A:middle
is safe for your app to create

00:24:58.236 --> 00:25:00.036 A:middle
and add the new CLSContext.

00:24:58.236 --> 00:25:00.036 A:middle
and add the new CLSContext.

00:25:00.036 --> 00:25:01.786 A:middle
There are going to be numerous

00:25:01.786 --> 00:25:03.126 A:middle
places within your app where

00:25:03.126 --> 00:25:04.336 A:middle
you're going to have to make one

00:25:04.336 --> 00:25:05.176 A:middle
of these checks.

00:25:05.826 --> 00:25:08.096 A:middle
And if you adopt the new Context

00:25:08.096 --> 00:25:09.666 A:middle
Provider Extension, you're

00:25:09.666 --> 00:25:11.076 A:middle
adding even more vectors from

00:25:11.076 --> 00:25:12.106 A:middle
which you will need to test

00:25:12.106 --> 00:25:14.286 A:middle
whether a CLSContext has already

00:25:14.286 --> 00:25:15.976 A:middle
been added to your tree or not.

00:25:17.406 --> 00:25:18.906 A:middle
So I wanted you to be aware of

00:25:18.906 --> 00:25:19.886 A:middle
what might be an elegant

00:25:19.886 --> 00:25:21.666 A:middle
solution, which is to implement

00:25:21.666 --> 00:25:23.086 A:middle
the CLSDataStore Delegate

00:25:23.086 --> 00:25:24.746 A:middle
function, createContext

00:25:24.746 --> 00:25:26.976 A:middle
forIdentifier, parentContext,

00:25:26.976 --> 00:25:28.366 A:middle
parentIdentifierPath.

00:25:28.876 --> 00:25:30.316 A:middle
If you make one of the classes

00:25:30.316 --> 00:25:31.896 A:middle
in your app, the CLSDataStore

00:25:31.896 --> 00:25:33.676 A:middle
Delegate, then when you call one

00:25:33.676 --> 00:25:35.076 A:middle
of the previous functions like

00:25:35.076 --> 00:25:36.776 A:middle
CLSDataStore context

00:25:36.776 --> 00:25:38.866 A:middle
matchingIdentifierPath, this

00:25:38.866 --> 00:25:40.426 A:middle
delegate function will only be

00:25:40.426 --> 00:25:42.416 A:middle
called if the context has never

00:25:42.416 --> 00:25:44.636 A:middle
been created, implementing the

00:25:44.636 --> 00:25:46.296 A:middle
delegate sort of bottlenecks

00:25:46.296 --> 00:25:48.196 A:middle
then all context creation to

00:25:48.196 --> 00:25:49.636 A:middle
just one place in your app.

00:25:50.716 --> 00:25:52.106 A:middle
In my experience, the actual

00:25:52.106 --> 00:25:53.786 A:middle
implementation of creating a

00:25:53.786 --> 00:25:55.766 A:middle
CLSContext is pretty app

00:25:55.766 --> 00:25:56.356 A:middle
specific.

00:25:56.356 --> 00:25:57.646 A:middle
So I've left the code empty

00:25:57.646 --> 00:25:57.986 A:middle
here.

00:25:58.316 --> 00:25:59.996 A:middle
If you are adding ClassKit

00:25:59.996 --> 00:26:01.576 A:middle
support for the first time, the

00:25:59.996 --> 00:26:01.576 A:middle
support for the first time, the

00:26:01.576 --> 00:26:05.046 A:middle
2018 WWDC session on ClassKit or

00:26:05.046 --> 00:26:06.906 A:middle
the available sample code is an

00:26:06.906 --> 00:26:08.086 A:middle
excellent place to start.

00:26:09.396 --> 00:26:11.346 A:middle
Here's an example of a simple

00:26:11.346 --> 00:26:12.856 A:middle
helper function that might exist

00:26:12.856 --> 00:26:13.426 A:middle
in your app.

00:26:13.806 --> 00:26:14.956 A:middle
This function we'll call

00:26:15.066 --> 00:26:17.056 A:middle
beginActivity, can be called to

00:26:17.056 --> 00:26:19.296 A:middle
make a specific CLSContext the

00:26:19.296 --> 00:26:20.436 A:middle
active context.

00:26:20.946 --> 00:26:22.626 A:middle
We pass in only an identifier

00:26:22.626 --> 00:26:23.026 A:middle
path.

00:26:24.086 --> 00:26:25.026 A:middle
The function calls the

00:26:25.026 --> 00:26:27.126 A:middle
CLSContext query to find the

00:26:27.126 --> 00:26:28.256 A:middle
descendant that matches the

00:26:28.256 --> 00:26:29.906 A:middle
identifier path passed in.

00:26:30.536 --> 00:26:32.226 A:middle
Again, since we have elsewhere

00:26:32.226 --> 00:26:33.866 A:middle
in this application set up the

00:26:33.866 --> 00:26:36.226 A:middle
CLSDataStore Delegate, we can be

00:26:36.226 --> 00:26:37.586 A:middle
sure that if the specified

00:26:37.586 --> 00:26:40.156 A:middle
CLSContext was never created, it

00:26:40.156 --> 00:26:42.036 A:middle
will be in the delegate function

00:26:42.036 --> 00:26:43.886 A:middle
and therefore a CLSContext

00:26:44.046 --> 00:26:45.096 A:middle
should be returned from the

00:26:45.096 --> 00:26:45.506 A:middle
query.

00:26:47.026 --> 00:26:48.496 A:middle
We make the context return to

00:26:48.496 --> 00:26:50.456 A:middle
active, create a new activity

00:26:50.456 --> 00:26:52.056 A:middle
for it and start that activity.

00:26:52.616 --> 00:26:54.076 A:middle
These series of calls indicates

00:26:54.076 --> 00:26:55.696 A:middle
we want to record progress in

00:26:55.696 --> 00:26:57.306 A:middle
the form of time spent for a

00:26:57.306 --> 00:26:59.046 A:middle
specific CLSContext.

00:26:59.896 --> 00:27:02.326 A:middle
And finally, we call save on the

00:26:59.896 --> 00:27:02.326 A:middle
And finally, we call save on the

00:27:02.326 --> 00:27:04.336 A:middle
CLSDataStore to initiate these

00:27:04.336 --> 00:27:05.796 A:middle
series of calls that we've made.

00:27:06.696 --> 00:27:07.916 A:middle
Likely, you will create plenty

00:27:07.916 --> 00:27:09.326 A:middle
of other helper functions like

00:27:09.326 --> 00:27:10.866 A:middle
this one, but the context

00:27:10.866 --> 00:27:12.236 A:middle
creation code need to live in

00:27:12.236 --> 00:27:13.726 A:middle
only one place, in your

00:27:13.726 --> 00:27:15.776 A:middle
CLSDataStore Delegate function.

00:27:17.246 --> 00:27:18.906 A:middle
If you are new to ClassKit, I

00:27:18.906 --> 00:27:20.366 A:middle
hope this brief introduction has

00:27:20.366 --> 00:27:21.366 A:middle
given you a taste of its

00:27:21.366 --> 00:27:22.236 A:middle
capabilities.

00:27:22.426 --> 00:27:24.006 A:middle
And if you think students and

00:27:24.006 --> 00:27:25.476 A:middle
teachers would benefit from

00:27:25.476 --> 00:27:26.926 A:middle
using your app in the education

00:27:26.926 --> 00:27:28.046 A:middle
realm, you should give

00:27:28.046 --> 00:27:29.506 A:middle
consideration to adopting

00:27:29.506 --> 00:27:30.196 A:middle
ClassKit.

00:27:30.376 --> 00:27:32.376 A:middle
If you are already familiar with

00:27:32.376 --> 00:27:33.726 A:middle
ClassKit, I hope you take

00:27:33.726 --> 00:27:35.146 A:middle
advantage of the new features we

00:27:35.146 --> 00:27:36.616 A:middle
added for 2019.

00:27:36.856 --> 00:27:38.336 A:middle
All of these were the result of

00:27:38.336 --> 00:27:39.996 A:middle
feedback from developers like

00:27:39.996 --> 00:27:40.596 A:middle
yourselves.

00:27:41.956 --> 00:27:43.026 A:middle
Take a look at the links that

00:27:43.026 --> 00:27:44.556 A:middle
accompany this presentation.

00:27:45.276 --> 00:27:46.566 A:middle
You'll find links to sample

00:27:46.566 --> 00:27:48.846 A:middle
code, documentation and to other

00:27:48.846 --> 00:27:50.456 A:middle
presentations that take a deeper

00:27:50.456 --> 00:27:51.706 A:middle
dive into ClassKit.

00:27:52.456 --> 00:27:52.866 A:middle
Thank you.
