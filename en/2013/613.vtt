WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:10.076 --> 00:00:11.276 A:middle
&gt;&gt; Nathan de Vries:
Good afternoon everyone.

00:00:12.176 --> 00:00:14.866 A:middle
My name's Nathan de Vries
[phonetic] and today I'm going

00:00:14.866 --> 00:00:18.036 A:middle
to be talking to you about iAd
Integration into your Apps.

00:00:18.726 --> 00:00:21.576 A:middle
Now there are two major
opportunities the iAd presents

00:00:21.576 --> 00:00:22.696 A:middle
to developers.

00:00:23.216 --> 00:00:25.556 A:middle
The first is promoting
your applications

00:00:25.596 --> 00:00:28.546 A:middle
with the new iAd
Workbench feature

00:00:28.546 --> 00:00:29.806 A:middle
that was announced this week.

00:00:30.326 --> 00:00:34.326 A:middle
And the second thing is
a revenue opportunity

00:00:34.326 --> 00:00:35.296 A:middle
for your applications.

00:00:35.296 --> 00:00:39.066 A:middle
So using application to generate
revenue through advertising,

00:00:39.066 --> 00:00:41.216 A:middle
and that's what we're going
to be talking about today.

00:00:41.586 --> 00:00:44.106 A:middle
How to integrate iAds
into your applications

00:00:44.306 --> 00:00:45.396 A:middle
to generate revenue.

00:00:45.396 --> 00:00:49.016 A:middle
Now we're going to be doing
that by going through this flow.

00:00:49.246 --> 00:00:51.296 A:middle
We're going to start by talking

00:00:51.296 --> 00:00:53.946 A:middle
about the developer
benefits of iAd specifically.

00:00:54.366 --> 00:00:56.686 A:middle
Why it might be a
good choice for you

00:00:56.686 --> 00:00:58.616 A:middle
to generate revenue
in your applications.

00:00:59.116 --> 00:01:01.536 A:middle
Then we're going to look at some
core concepts that are critical

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:01.536 --> 00:01:05.706 A:middle
in understanding why your
application is generating

00:01:05.706 --> 00:01:08.756 A:middle
revenue in the way it is, how
you can improve on that revenue

00:01:08.756 --> 00:01:10.916 A:middle
by making adjustments
to your application,

00:01:11.436 --> 00:01:12.266 A:middle
and we're also going to go

00:01:12.266 --> 00:01:14.996 A:middle
into a little bit more detail
beyond those core concepts

00:01:15.276 --> 00:01:17.486 A:middle
and talk about specific
things that you can do

00:01:17.486 --> 00:01:19.686 A:middle
to optimize ad performance
in your applications.

00:01:20.286 --> 00:01:23.306 A:middle
Next we're going to briefly look
at how to join the iAd network.

00:01:23.306 --> 00:01:24.356 A:middle
It's very easy.

00:01:24.746 --> 00:01:28.006 A:middle
And lastly, which is the major
chunk of the presentation

00:01:28.006 --> 00:01:30.846 A:middle
which you're all here
for, is to look at some

00:01:30.846 --> 00:01:34.526 A:middle
of the developer API's
for integrating iAds

00:01:34.526 --> 00:01:35.536 A:middle
into your application.

00:01:36.266 --> 00:01:38.966 A:middle
So let's start with
the developer benefits.

00:01:39.796 --> 00:01:43.496 A:middle
First and foremost,
ignoring ads all together,

00:01:43.596 --> 00:01:46.396 A:middle
you put huge amount of effort
into your applications,

00:01:46.396 --> 00:01:49.636 A:middle
which they mix with applications
that have won the design awards,

00:01:50.636 --> 00:01:53.046 A:middle
blood, sweat and tears get
poured into your applications.

00:01:53.046 --> 00:01:56.026 A:middle
So you really want experiences
within your application

00:01:56.276 --> 00:01:58.386 A:middle
that match the amount of
effort that you put in.

00:01:58.816 --> 00:02:02.196 A:middle
So first and foremost, we really
want to delight your customers.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:02.776 --> 00:02:05.776 A:middle
So that's why the advertisements

00:02:05.776 --> 00:02:08.996 A:middle
with iAd have very
high production values.

00:02:08.996 --> 00:02:11.926 A:middle
We put a lot of attention
to detail into the ads

00:02:12.006 --> 00:02:16.436 A:middle
so that your users get the same
beautiful enriched experiences

00:02:16.436 --> 00:02:18.266 A:middle
that they expect from your app.

00:02:18.946 --> 00:02:24.106 A:middle
As part of this rich experience,
iAd support media, playback,

00:02:24.106 --> 00:02:27.726 A:middle
and game-type experiences,
really adding

00:02:27.726 --> 00:02:30.836 A:middle
to the features of
your application.

00:02:32.686 --> 00:02:35.206 A:middle
Like your application that
has access to amazing API's

00:02:35.206 --> 00:02:38.976 A:middle
on the platform like Gyroscope
and Cameran and so on,

00:02:39.256 --> 00:02:41.906 A:middle
ads also have access
to these API's.

00:02:41.906 --> 00:02:45.336 A:middle
The ads are seamlessly
integrated with iOS' software

00:02:45.336 --> 00:02:48.906 A:middle
and as hardware, so there's
not this sandboxed limited

00:02:48.906 --> 00:02:50.346 A:middle
experience inside an ad.

00:02:50.666 --> 00:02:53.186 A:middle
It's just an app.

00:02:53.446 --> 00:02:54.426 A:middle
And this creates this kind

00:02:54.426 --> 00:02:56.696 A:middle
of immersive experience
for the user.

00:02:56.916 --> 00:02:58.606 A:middle
If they choose to
engage with an ad,

00:02:59.016 --> 00:03:01.266 A:middle
it feels like this amazing
experience for them.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:01.266 --> 00:03:02.936 A:middle
And that's what we're
really trying to achieve.

00:03:03.486 --> 00:03:06.686 A:middle
And you can see here the
types of examples of ads

00:03:06.686 --> 00:03:09.346 A:middle
where you can really shake
the app and it interacts

00:03:09.346 --> 00:03:11.196 A:middle
with the ad, or you
can play music

00:03:11.196 --> 00:03:13.206 A:middle
or a game, watch move trailers.

00:03:13.536 --> 00:03:14.616 A:middle
These are all the
kinds of things

00:03:14.616 --> 00:03:16.576 A:middle
that advertisers are
providing in their ads.

00:03:17.436 --> 00:03:21.416 A:middle
And lastly, even though when the
user engages in an ad and their

00:03:21.416 --> 00:03:24.166 A:middle
in this [inaudible] experience,
their still in your app.

00:03:24.266 --> 00:03:27.106 A:middle
So as soon as I dismiss
the ad, they're right back

00:03:27.176 --> 00:03:28.946 A:middle
in your app where they left off.

00:03:28.946 --> 00:03:31.296 A:middle
Just seamlessly in and
straight out again.

00:03:31.886 --> 00:03:38.236 A:middle
So because the ad is inside
your app, we value the privacy

00:03:38.236 --> 00:03:40.556 A:middle
of the users of your
application.

00:03:40.556 --> 00:03:43.326 A:middle
This is why we request
permission before asking

00:03:43.326 --> 00:03:47.586 A:middle
for contact access in your
application, or photo access,

00:03:47.626 --> 00:03:49.306 A:middle
because we really
value the privacy

00:03:49.306 --> 00:03:51.576 A:middle
of the users of your
application.

00:03:51.846 --> 00:03:54.456 A:middle
Likewise, with advertising,
we also have

00:03:54.456 --> 00:03:57.316 A:middle
that same approach to privacy.

00:03:57.316 --> 00:04:00.266 A:middle
So we handle the privacy, so you
don't need to worry about it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:00.676 --> 00:04:01.816 A:middle
Users start using ads

00:04:01.816 --> 00:04:05.476 A:middle
within your application have
the same privacy thought

00:04:05.476 --> 00:04:07.706 A:middle
about that we do for your app.

00:04:09.576 --> 00:04:11.886 A:middle
The world's best
brands are using iAd.

00:04:12.116 --> 00:04:16.786 A:middle
So all around the world we have
agencies working with brands,

00:04:16.786 --> 00:04:19.156 A:middle
winning design awards
for advertising,

00:04:19.416 --> 00:04:20.906 A:middle
using the iAd platform.

00:04:21.286 --> 00:04:25.496 A:middle
So all creating is, these brands
are very familiar to your users,

00:04:25.496 --> 00:04:28.116 A:middle
so their much more likely to
engage in the advertising,

00:04:28.536 --> 00:04:32.796 A:middle
and that really drives
the immersive experience

00:04:32.796 --> 00:04:33.566 A:middle
for the users.

00:04:35.046 --> 00:04:38.196 A:middle
Every year we're
expanding so far.

00:04:38.286 --> 00:04:41.476 A:middle
We started in the U.S. We've
recently rolled out into Mexico.

00:04:41.476 --> 00:04:43.466 A:middle
There's 11 countries
now that we support.

00:04:43.496 --> 00:04:48.706 A:middle
So there's a great opportunity,
not just to advertise locally,

00:04:48.996 --> 00:04:50.386 A:middle
but also broadly,
and we'll speak

00:04:50.386 --> 00:04:54.076 A:middle
about that a little bit later.

00:04:54.076 --> 00:04:56.846 A:middle
It's also a menu
here to work out how

00:04:56.846 --> 00:04:58.456 A:middle
to monetize your application.

00:04:58.636 --> 00:05:00.076 A:middle
It's a great path to revenue.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:00.656 --> 00:05:02.836 A:middle
When your application
displays an advertisement,

00:05:03.336 --> 00:05:06.536 A:middle
the advertising revenue that's
generated from the display,

00:05:06.536 --> 00:05:10.266 A:middle
and the interaction with those
ads, 70% of that revenue goes

00:05:10.266 --> 00:05:11.566 A:middle
to you as a developer.

00:05:11.766 --> 00:05:14.516 A:middle
So we think that's a really
great way for you to make money

00:05:14.516 --> 00:05:15.546 A:middle
with your applications.

00:05:16.706 --> 00:05:20.356 A:middle
And lastly, as developers, it's
incredibly easy to implement.

00:05:20.706 --> 00:05:22.426 A:middle
You'll be able to jump to
that later on when we go

00:05:22.426 --> 00:05:25.496 A:middle
into the developer
details, but we really feel

00:05:25.536 --> 00:05:27.886 A:middle
like we've made it as
easy as possible for you

00:05:27.886 --> 00:05:29.526 A:middle
to integrate ads into
your application.

00:05:31.056 --> 00:05:33.846 A:middle
There's no need to link
against additional SDK's,

00:05:33.846 --> 00:05:37.536 A:middle
so no need to maintain
and download other SDK's.

00:05:37.536 --> 00:05:42.556 A:middle
You can be up and running in
really small amount of code.

00:05:42.556 --> 00:05:44.816 A:middle
We also have some great sample
code which you'll notice

00:05:44.816 --> 00:05:47.896 A:middle
on the developer@apple.com
website, which I'll link

00:05:47.896 --> 00:05:48.846 A:middle
to a little bit later.

00:05:49.196 --> 00:05:52.636 A:middle
This provides the iAd
Suite sample code,

00:05:52.636 --> 00:05:54.346 A:middle
as well as developer
documentation.

00:05:54.576 --> 00:05:57.396 A:middle
If you were to really dive
in and see examples of how

00:05:57.396 --> 00:05:59.276 A:middle
to integrate ads into
your application.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:00.036 --> 00:06:03.146 A:middle
And lastly, we think that's
always been pretty easy

00:06:03.146 --> 00:06:05.686 A:middle
to integrate ads, but we've
made it even easier this year

00:06:05.686 --> 00:06:06.806 A:middle
with iOS 7.

00:06:06.806 --> 00:06:08.796 A:middle
So we're looking
forward to your feedback

00:06:08.796 --> 00:06:09.796 A:middle
on some of the new stuff.

00:06:11.496 --> 00:06:13.836 A:middle
Next let's have a look
at some core concepts.

00:06:14.556 --> 00:06:16.746 A:middle
Integrating iAds
into your application

00:06:16.746 --> 00:06:18.946 A:middle
from a developer point of
view is incredibly easy.

00:06:19.046 --> 00:06:21.386 A:middle
You'll get up and
running very quickly.

00:06:21.896 --> 00:06:25.396 A:middle
But there are some core
concepts related to advertising

00:06:25.396 --> 00:06:28.316 A:middle
and iAds specifically that
are useful to have in the back

00:06:28.316 --> 00:06:30.266 A:middle
of your mind when you're
integrating the ads

00:06:30.566 --> 00:06:32.176 A:middle
because once you've
shipped your application,

00:06:32.176 --> 00:06:34.276 A:middle
it's in the app store, and
customers are using your app,

00:06:34.686 --> 00:06:36.466 A:middle
you're going to need
to track the progress

00:06:36.466 --> 00:06:38.866 A:middle
of revenue generated
by your app.

00:06:39.386 --> 00:06:41.816 A:middle
So some of these core concepts
are going to keep coming

00:06:41.816 --> 00:06:45.406 A:middle
up in your sales reports and
changes that you need to make

00:06:45.406 --> 00:06:46.896 A:middle
to your application
to improve some

00:06:46.896 --> 00:06:48.956 A:middle
of the ad performance,
so we'll start there.

00:06:49.996 --> 00:06:53.146 A:middle
First of all, what is
the iAd App Network?

00:06:53.146 --> 00:06:56.066 A:middle
Well we mentioned briefly
that there's the two things

00:06:56.066 --> 00:06:58.456 A:middle
that that the iAd network
really provides to developers;

00:06:58.766 --> 00:07:00.936 A:middle
the path to revenue, which
we're talking about today,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:01.296 --> 00:07:04.276 A:middle
and also the promotional
aspect promoting your app.

00:07:05.166 --> 00:07:09.426 A:middle
So the iAd App Network is the
Apple business team working

00:07:09.426 --> 00:07:12.796 A:middle
with advertisers to produce
inventory and delivering them

00:07:12.796 --> 00:07:15.126 A:middle
to you, the developer
that's integrating iAds.

00:07:16.176 --> 00:07:17.986 A:middle
So what does this look like?

00:07:18.216 --> 00:07:22.626 A:middle
You've linked your application
against the iAd framework.

00:07:23.296 --> 00:07:26.416 A:middle
What this means is that
the iAd framework is going

00:07:26.416 --> 00:07:28.806 A:middle
to send requests to
the iAd App Network

00:07:28.806 --> 00:07:31.126 A:middle
on your behalf asking ads.

00:07:31.746 --> 00:07:35.326 A:middle
So we send ad requests to the
App Network, which replies,

00:07:35.716 --> 00:07:37.426 A:middle
as you'd expect, with ads.

00:07:37.936 --> 00:07:42.286 A:middle
So this combination of two
things: The requests being sent

00:07:42.286 --> 00:07:46.186 A:middle
to the network and the ads being
sent back form this concept

00:07:46.186 --> 00:07:46.986 A:middle
called the Fill Rate.

00:07:47.086 --> 00:07:48.136 A:middle
Those of you that are familiar

00:07:48.136 --> 00:07:50.826 A:middle
with advertising probably
have heard of this before,

00:07:51.176 --> 00:07:54.866 A:middle
but this is the measure of
performance of requests sent

00:07:54.866 --> 00:07:57.466 A:middle
by all of your applications,
versus the ads

00:07:57.466 --> 00:07:59.546 A:middle
that are delivered
by the network.

00:07:59.666 --> 00:08:01.076 A:middle
And we'll come back to
that when we're talking

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:01.076 --> 00:08:03.346 A:middle
about improving app performance.

00:08:04.946 --> 00:08:08.286 A:middle
Once you've been delivered an
ad, you still have to display it

00:08:08.286 --> 00:08:10.406 A:middle
on the screen, so just
getting an ad isn't enough,

00:08:10.406 --> 00:08:11.496 A:middle
you have to show it to the user.

00:08:11.766 --> 00:08:13.186 A:middle
That's the point of this.

00:08:13.606 --> 00:08:15.296 A:middle
So that's called an impression.

00:08:15.596 --> 00:08:17.636 A:middle
As soon as you display
an ad to a user,

00:08:18.096 --> 00:08:21.476 A:middle
it's called an impression,
and a certain percentage

00:08:21.476 --> 00:08:24.496 A:middle
of those impressions will
hopefully turn into Tap Throughs

00:08:24.496 --> 00:08:26.036 A:middle
when the user engages
with the ad.

00:08:26.676 --> 00:08:30.286 A:middle
And these two concepts combined
are called the Tap Through rate.

00:08:30.286 --> 00:08:33.986 A:middle
So the number of Tap Throughs,
versus the number of impressions

00:08:33.986 --> 00:08:35.226 A:middle
that you're shown in your app.

00:08:35.226 --> 00:08:38.756 A:middle
And you'll see these
as well in your reports

00:08:38.756 --> 00:08:41.466 A:middle
when you're measuring the
performance of your app.

00:08:42.336 --> 00:08:44.056 A:middle
So that's a few of
the core concepts.

00:08:44.056 --> 00:08:46.846 A:middle
We'll refer back to them
later on in the presentation.

00:08:47.376 --> 00:08:49.986 A:middle
Next let's look at some
tangible things that you can do

00:08:50.336 --> 00:08:52.136 A:middle
to improve the ad performance

00:08:52.136 --> 00:08:54.966 A:middle
of your application before you
even get started with the code.

00:08:58.046 --> 00:09:03.316 A:middle
So first and foremost, it
all starts with a great app.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:03.376 --> 00:09:04.786 A:middle
You need to focus
on the customer.

00:09:05.766 --> 00:09:08.516 A:middle
Your app needs to have
utility and be useful,

00:09:08.626 --> 00:09:12.216 A:middle
so ignoring the advertising side
of things, your app just has

00:09:12.216 --> 00:09:14.586 A:middle
to be something that you
want lots of people to use.

00:09:14.936 --> 00:09:16.206 A:middle
They find it really useful.

00:09:16.476 --> 00:09:17.676 A:middle
They come back to it.

00:09:18.136 --> 00:09:20.116 A:middle
There's loyalty associated
with your app.

00:09:20.196 --> 00:09:22.066 A:middle
People just really have
to want to use our app.

00:09:22.386 --> 00:09:24.606 A:middle
I'm recommending going
to some of the sessions

00:09:24.606 --> 00:09:28.336 A:middle
on design during the conference,
or watching them on the videos,

00:09:28.656 --> 00:09:30.266 A:middle
because honing is
part of your app.

00:09:30.266 --> 00:09:31.826 A:middle
It is going to be a
key to the success

00:09:31.826 --> 00:09:33.746 A:middle
of advertising in your app.

00:09:34.726 --> 00:09:36.946 A:middle
Having a great app, or
something that's worth talking

00:09:36.946 --> 00:09:38.826 A:middle
about will generate
network effects.

00:09:38.866 --> 00:09:40.836 A:middle
So you'll start getting
reviews on the app store,

00:09:40.836 --> 00:09:42.086 A:middle
people will talk about your app,

00:09:42.586 --> 00:09:45.676 A:middle
and all of these things
result in more ad requests.

00:09:46.156 --> 00:09:49.816 A:middle
So as a side effect of focusing
on the customer and your app,

00:09:50.396 --> 00:09:52.876 A:middle
you're immediately going
to get more ad requests,

00:09:53.286 --> 00:09:57.266 A:middle
more ads served, which
is better for your app.

00:09:58.336 --> 00:10:02.076 A:middle
The next thing that you can
do is to place ads smartly.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:02.686 --> 00:10:04.666 A:middle
Key here is not place
ads everywhere.

00:10:04.846 --> 00:10:08.116 A:middle
You have to really
consider user context,

00:10:08.816 --> 00:10:12.036 A:middle
as well as recognizing high
use areas in your application,

00:10:12.136 --> 00:10:14.646 A:middle
so when you're looking
at a holistic view

00:10:14.646 --> 00:10:15.576 A:middle
of your application,

00:10:15.576 --> 00:10:17.986 A:middle
really consider is
this view appropriate

00:10:17.986 --> 00:10:20.626 A:middle
to advertising how
many users are entering

00:10:20.626 --> 00:10:22.866 A:middle
into this part of my app.

00:10:23.206 --> 00:10:25.296 A:middle
You want to avoid
accidental taps.

00:10:25.536 --> 00:10:27.656 A:middle
So placing ads in spots

00:10:27.656 --> 00:10:31.856 A:middle
where users might accidently
tap the ad isn't a good thing

00:10:31.856 --> 00:10:33.186 A:middle
because it might
be an impression,

00:10:33.186 --> 00:10:35.976 A:middle
but if people are tapping on the
ad and immediately dismissing it

00:10:35.976 --> 00:10:37.066 A:middle
because it was a mistake?

00:10:37.446 --> 00:10:39.686 A:middle
That's not going to be very
good for your ad performance.

00:10:41.036 --> 00:10:43.116 A:middle
And really keep in
the back of your mind

00:10:43.116 --> 00:10:45.466 A:middle
when you're designing your
apps and integration of ads

00:10:45.466 --> 00:10:48.786 A:middle
into your apps, that user
context is incredibly important.

00:10:49.196 --> 00:10:52.626 A:middle
So you really need to weigh up
the benefit of an impression

00:10:52.956 --> 00:10:55.226 A:middle
versus what the user
was trying to do

00:10:55.226 --> 00:10:56.486 A:middle
when you were showing that ad.

00:10:56.696 --> 00:10:59.576 A:middle
So things like showing
advertisements

00:10:59.576 --> 00:11:00.616 A:middle
during registration.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:00.616 --> 00:11:02.246 A:middle
Maybe you want to
show advertisements

00:11:02.246 --> 00:11:04.306 A:middle
after registration
because the success

00:11:04.306 --> 00:11:07.056 A:middle
of your app is predicated
on someone signing up,

00:11:07.376 --> 00:11:09.346 A:middle
enjoying the app, and
coming back to the app,

00:11:09.726 --> 00:11:12.406 A:middle
which will produce more
advertising revenue for you.

00:11:13.216 --> 00:11:15.496 A:middle
You should also consider
customer location.

00:11:16.036 --> 00:11:19.346 A:middle
I mentioned that we support
11 different countries

00:11:19.346 --> 00:11:19.916 A:middle
at the moment.

00:11:20.696 --> 00:11:22.666 A:middle
So you should take
this into account

00:11:22.666 --> 00:11:24.526 A:middle
when you're planning
your marketing strategy.

00:11:25.096 --> 00:11:28.826 A:middle
If you're only serving your
app to, say, the states,

00:11:29.136 --> 00:11:31.706 A:middle
then maybe you should consider
serving to other regions

00:11:31.766 --> 00:11:35.516 A:middle
because these regions will
also be sending ad requests,

00:11:35.786 --> 00:11:37.326 A:middle
but not getting anything back.

00:11:37.326 --> 00:11:39.676 A:middle
Or they might not even have
the app available in the store.

00:11:39.886 --> 00:11:41.946 A:middle
So really consider where
you're submitting your app,

00:11:42.016 --> 00:11:43.636 A:middle
to which stores, and take

00:11:43.636 --> 00:11:46.326 A:middle
into account these iAd
App Network countries.

00:11:47.546 --> 00:11:48.496 A:middle
One thing that you can do

00:11:48.496 --> 00:11:51.456 A:middle
with this is target your
marketing to those countries.

00:11:51.746 --> 00:11:54.376 A:middle
So if you've never thought
about advertising specifically

00:11:54.376 --> 00:11:57.126 A:middle
to a particular country, maybe
you should try doing that?

00:11:57.126 --> 00:11:59.556 A:middle
That will increase the number
of customers in that country,

00:11:59.776 --> 00:12:01.756 A:middle
and really drive up
those ad requests,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:01.966 --> 00:12:04.456 A:middle
and assist with optimizing
the ad performance

00:12:04.456 --> 00:12:05.366 A:middle
of your application.

00:12:06.126 --> 00:12:08.096 A:middle
You could even consider
going a step further

00:12:08.096 --> 00:12:10.446 A:middle
and localizing your
applications.

00:12:10.866 --> 00:12:12.446 A:middle
The last country that we rolled

00:12:12.446 --> 00:12:15.476 A:middle
out the iAd App Network
to was Mexico.

00:12:15.986 --> 00:12:19.106 A:middle
It's right next door and
you could localize our app

00:12:19.106 --> 00:12:22.676 A:middle
in Spanish, and immediately
get access to a whole bunch

00:12:22.676 --> 00:12:25.296 A:middle
of customers that you would
never have had access to before.

00:12:25.736 --> 00:12:29.016 A:middle
Driving up ad requests,
impressions, Tap Throughs,

00:12:29.336 --> 00:12:31.186 A:middle
and improving your
app performance.

00:12:33.406 --> 00:12:34.386 A:middle
Another thing that you need

00:12:34.386 --> 00:12:38.006 A:middle
to consider is the
seasonality of advertising.

00:12:38.516 --> 00:12:40.816 A:middle
Consumer spending throughout
the year fluctuates,

00:12:41.136 --> 00:12:44.776 A:middle
so as does advertising spending.

00:12:44.856 --> 00:12:48.176 A:middle
Advertising spending kind of
tracks consumer spending, right?

00:12:48.866 --> 00:12:50.866 A:middle
So you should also
market accordingly.

00:12:51.056 --> 00:12:53.646 A:middle
If you know that there's going
to be a holiday period coming

00:12:53.646 --> 00:12:55.716 A:middle
up where spending is
going to be increased,

00:12:55.986 --> 00:12:58.266 A:middle
maybe you should focus
your marketing attention

00:12:58.456 --> 00:12:59.706 A:middle
to that time of the year.

00:12:59.706 --> 00:13:01.466 A:middle
Increase a little bit of
your marketing budget,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:02.086 --> 00:13:05.346 A:middle
get some more customers into
your apps at that point in time,

00:13:05.686 --> 00:13:10.846 A:middle
and then you'll get more
requests at that time.

00:13:10.886 --> 00:13:13.546 A:middle
And, I guess the one
thing to take away

00:13:13.546 --> 00:13:16.516 A:middle
from this is it's a very,
it's a feedback loop.

00:13:17.656 --> 00:13:20.416 A:middle
As you drive more customers
to your app, you're going

00:13:20.416 --> 00:13:23.546 A:middle
to get more ad requests, which
are going to result in more ads,

00:13:24.246 --> 00:13:26.986 A:middle
which in turn turns into
impressions, and Tap Throughs,

00:13:27.086 --> 00:13:29.716 A:middle
and the iAd App Network
will use all of these things

00:13:29.716 --> 00:13:32.386 A:middle
to decide should I send
more ads to this app?

00:13:32.776 --> 00:13:34.416 A:middle
How many ads should
I send to this app?

00:13:34.816 --> 00:13:38.486 A:middle
So a really healthy
app is one that works

00:13:38.486 --> 00:13:41.776 A:middle
with this feedback loop that
really drives as many customers

00:13:41.776 --> 00:13:45.636 A:middle
as possible, creates
loyalty, and gets more ads.

00:13:46.276 --> 00:13:49.676 A:middle
So that's a little bit about
optimizing ad performance.

00:13:49.676 --> 00:13:53.316 A:middle
You might be wondering, well how
do I join the iAd App Network?

00:13:53.936 --> 00:13:55.906 A:middle
It's pretty easy.

00:13:56.556 --> 00:13:59.766 A:middle
If you've submitted an app
before, you would have gone

00:13:59.766 --> 00:14:01.396 A:middle
to the iTunes Connect website,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:01.396 --> 00:14:05.936 A:middle
so the iAd preferences
configured in the same place.

00:14:06.526 --> 00:14:09.526 A:middle
All you need to do is
complete the iAd contract once.

00:14:09.526 --> 00:14:11.596 A:middle
And then on a per app basis,

00:14:11.596 --> 00:14:15.416 A:middle
you need to enable iAd
specifically for that app.

00:14:15.716 --> 00:14:17.276 A:middle
One thing to bear in
mind is that you need

00:14:17.276 --> 00:14:18.996 A:middle
to do this before
you submit your app.

00:14:19.316 --> 00:14:22.526 A:middle
So before you've finished
developing your app

00:14:22.526 --> 00:14:25.466 A:middle
and maybe you want to
create the descriptions

00:14:25.466 --> 00:14:28.836 A:middle
and the screenshots, and so
on, the App Store details

00:14:28.836 --> 00:14:32.126 A:middle
for your app, make sure you
enable iAd before you submit the

00:14:32.126 --> 00:14:33.516 A:middle
binary for our application.

00:14:34.086 --> 00:14:39.266 A:middle
So that's a little bit about
joining the iAd App Network.

00:14:39.816 --> 00:14:41.626 A:middle
Let's dig in to some of
the developer details

00:14:41.626 --> 00:14:45.136 A:middle
about integrating apps
into your application.

00:14:45.916 --> 00:14:47.626 A:middle
And to start with,
what we're going

00:14:47.626 --> 00:14:50.856 A:middle
to do is talk about banners.

00:14:51.806 --> 00:14:55.616 A:middle
The banner ad is a
slim device with view.

00:14:56.046 --> 00:14:57.726 A:middle
Sits at the bottom
of your content view.

00:14:58.676 --> 00:14:59.836 A:middle
And you can see one here.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.986 --> 00:15:03.386 A:middle
It's typically a place at
the bottom of your content,

00:15:03.386 --> 00:15:06.886 A:middle
but remember back to the smart
placement bit of the talk

00:15:06.886 --> 00:15:10.476 A:middle
where you can adjust this
depending on music context

00:15:10.476 --> 00:15:14.026 A:middle
to avoid accidental
taps, but our guidance is

00:15:14.106 --> 00:15:16.286 A:middle
that it generally goes to
the bottom of the content.

00:15:16.796 --> 00:15:21.976 A:middle
As new ads become available,
the banner continuously loads,

00:15:22.056 --> 00:15:26.146 A:middle
so if your user passes out of
network access and comes back

00:15:26.146 --> 00:15:29.536 A:middle
into network access, these
banners will automatically bring

00:15:29.536 --> 00:15:32.256 A:middle
in new ads, and roll on and
off the screen automatically.

00:15:32.256 --> 00:15:35.526 A:middle
When you tap one
of these banners,

00:15:35.526 --> 00:15:37.966 A:middle
you get a full screen
immersive ad experience.

00:15:38.456 --> 00:15:41.716 A:middle
And lastly these
banner ads are supported

00:15:41.716 --> 00:15:43.386 A:middle
on both iPhone and iPad.

00:15:43.576 --> 00:15:45.696 A:middle
So you can use them
in both contexts.

00:15:46.536 --> 00:15:49.446 A:middle
To integrate these banners,
there's three easy steps.

00:15:49.736 --> 00:15:53.826 A:middle
First you need to link the iAd
framework, which is pretty easy.

00:15:53.826 --> 00:15:55.586 A:middle
We're going to get a
demonstration of that soon.

00:15:56.486 --> 00:15:58.936 A:middle
You need to import the iAd
header from the framework.

00:15:59.906 --> 00:16:02.916 A:middle
And lastly, you need to
choose the view controllers

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:02.956 --> 00:16:07.106 A:middle
in your application that are
appropriate for advertising.

00:16:07.966 --> 00:16:11.476 A:middle
So what I mentioned
before, that you had an app

00:16:11.476 --> 00:16:12.906 A:middle
with the banner view
across the bottom,

00:16:13.556 --> 00:16:16.196 A:middle
you should consider each
screen of your application

00:16:16.646 --> 00:16:21.016 A:middle
as being appropriate or
inappropriate to the banner ads.

00:16:21.316 --> 00:16:23.966 A:middle
And we've got this new API
and iOS 7 that allows you

00:16:23.966 --> 00:16:26.746 A:middle
to set a flag on any of your
View Controllers to say,

00:16:26.746 --> 00:16:28.606 A:middle
I would like banner
ads to be displayed

00:16:29.056 --> 00:16:30.046 A:middle
in this View Controller.

00:16:30.916 --> 00:16:34.946 A:middle
So we set the canDislayBannerAds
property to yes.

00:16:35.446 --> 00:16:39.096 A:middle
And what this does is
it takes the root view,

00:16:39.336 --> 00:16:42.886 A:middle
or the top level view
of your View Controller,

00:16:43.376 --> 00:16:45.866 A:middle
and it becomes the
originalContentView.

00:16:46.026 --> 00:16:47.306 A:middle
It becomes a mute property.

00:16:48.366 --> 00:16:52.176 A:middle
This allows us to wrap
your View Controller's view

00:16:52.636 --> 00:16:56.056 A:middle
in a Framework View which
allows us to animate the banner

00:16:56.206 --> 00:16:57.216 A:middle
on and off the screen.

00:16:58.136 --> 00:17:01.536 A:middle
So when you sent the
canDisplayBannerAds property

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:01.536 --> 00:17:04.935 A:middle
to yes, we wrap your
view in another view.

00:17:05.806 --> 00:17:09.136 A:middle
We start sending ad requests
to the network saying we would

00:17:09.136 --> 00:17:12.596 A:middle
like banner ads for
this particular device.

00:17:13.746 --> 00:17:16.906 A:middle
When the banner loads, so we
get an ad back from the network,

00:17:17.776 --> 00:17:20.396 A:middle
the banner moves on
screen, adjusting the size

00:17:20.396 --> 00:17:21.886 A:middle
of your original content view.

00:17:22.695 --> 00:17:24.665 A:middle
So the one thing you
need to keep in mind is

00:17:24.665 --> 00:17:28.006 A:middle
if you're referring to that
original view, you now need

00:17:28.006 --> 00:17:30.646 A:middle
to change all of your calls to
view on your View Controller

00:17:30.646 --> 00:17:32.096 A:middle
to originalContentView.

00:17:32.546 --> 00:17:33.696 A:middle
And you also need to make sure

00:17:33.696 --> 00:17:37.076 A:middle
that your originalContentView
respects Relay Out,

00:17:37.626 --> 00:17:39.826 A:middle
accommodating a new banner ad.

00:17:41.306 --> 00:17:42.976 A:middle
Once the banner is
on the screen,

00:17:43.156 --> 00:17:46.166 A:middle
the user has an opportunity
to tap on it.

00:17:46.356 --> 00:17:49.096 A:middle
So we get that full screen
ad experience on tap.

00:17:49.916 --> 00:17:51.526 A:middle
When the ad appears
on the screen,

00:17:51.526 --> 00:17:54.466 A:middle
you get the usual appearance
and disappearance callbacks

00:17:54.466 --> 00:17:55.456 A:middle
on your View Controller.

00:17:55.986 --> 00:17:57.456 A:middle
So what you should do

00:17:57.546 --> 00:18:01.186 A:middle
in the viewWillDisappear
callback is poise

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:01.186 --> 00:18:05.016 A:middle
and intensive media
activities, sounds, and so on,

00:18:05.166 --> 00:18:07.166 A:middle
that would interrupt
with the ad experience.

00:18:07.306 --> 00:18:10.766 A:middle
Because your goal is to have the
user enjoy the ad experience,

00:18:10.766 --> 00:18:14.176 A:middle
and not feel like the
app is using up CPU,

00:18:14.176 --> 00:18:17.156 A:middle
slowing things down, because
that disrupts the ad experience.

00:18:18.126 --> 00:18:22.136 A:middle
When the full screen
advertisement is dismissed,

00:18:22.746 --> 00:18:26.176 A:middle
then this is a good time to
resume any immediate activity

00:18:26.486 --> 00:18:28.526 A:middle
that you had running
in your app.

00:18:28.776 --> 00:18:31.036 A:middle
So now we've got
an ad on screen.

00:18:31.036 --> 00:18:34.326 A:middle
The user passes out of
network connectivity,

00:18:34.546 --> 00:18:36.846 A:middle
or there's no longer
ad Inventory available

00:18:36.846 --> 00:18:39.566 A:middle
to your app, the ad unloads.

00:18:40.236 --> 00:18:41.426 A:middle
So when the ad unloads,

00:18:41.426 --> 00:18:44.646 A:middle
the banner is moved off-screen
automatically by the framework,

00:18:45.226 --> 00:18:48.456 A:middle
and your original content view
is resized much in the same way

00:18:48.456 --> 00:18:53.586 A:middle
as it was resized when it
was bought on the screen.

00:18:53.586 --> 00:18:54.976 A:middle
So you've got these
View Controllers

00:18:54.976 --> 00:18:57.296 A:middle
and they're all configured,
or some of them are configured

00:18:57.296 --> 00:18:58.876 A:middle
with canDislayBannerAds.

00:18:59.116 --> 00:19:00.426 A:middle
There are certain circumstances

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.426 --> 00:19:03.236 A:middle
where you want a
temporarily disable banner ads

00:19:03.236 --> 00:19:05.836 A:middle
on a particular View Controller.

00:19:06.096 --> 00:19:07.406 A:middle
So we support that as well.

00:19:08.496 --> 00:19:11.046 A:middle
You simply need to set
the property back to No.

00:19:11.706 --> 00:19:14.136 A:middle
And when you're finished
with the app context,

00:19:14.136 --> 00:19:17.696 A:middle
where it's inappropriate for
a banner ad to be displayed,

00:19:18.156 --> 00:19:22.256 A:middle
or not ideal for a banner ad to
be displayed, then you can set

00:19:22.256 --> 00:19:23.936 A:middle
that property back to Yes.

00:19:24.426 --> 00:19:26.496 A:middle
Don't forget to re-enable.

00:19:26.836 --> 00:19:33.726 A:middle
Yes. We provide some great tools
for testing during development.

00:19:33.726 --> 00:19:36.406 A:middle
In the Developer Settings
pane on the device,

00:19:36.806 --> 00:19:39.326 A:middle
we have these two
great facilities

00:19:39.686 --> 00:19:41.046 A:middle
for adjusting the Fill Rate,

00:19:41.336 --> 00:19:43.156 A:middle
which we mentioned
in the core concepts.

00:19:43.666 --> 00:19:46.716 A:middle
This allows you to
configure your application

00:19:46.716 --> 00:19:48.256 A:middle
so that it never gets ads.

00:19:48.256 --> 00:19:51.066 A:middle
It always gets ads or
some variation in between.

00:19:51.366 --> 00:19:54.516 A:middle
This is as this was with
testing of your app.

00:19:54.726 --> 00:19:57.076 A:middle
You can also adjust
the Refresh Rate.

00:19:57.526 --> 00:20:01.136 A:middle
So this is how quickly ads cycle
in and out of your application.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:02.266 --> 00:20:03.526 A:middle
One thing to bear in mind is

00:20:03.526 --> 00:20:05.536 A:middle
that this only affects
your apps.

00:20:05.856 --> 00:20:08.226 A:middle
So if you're carrying
a development device

00:20:08.226 --> 00:20:11.166 A:middle
and you total these Fill Rate
and Refresh Rate settings,

00:20:11.806 --> 00:20:15.266 A:middle
and then you run another
person's app from the store

00:20:15.266 --> 00:20:17.896 A:middle
that has iAds, it's not
going to affect the Fill Rate

00:20:17.896 --> 00:20:19.276 A:middle
and Refresh Rate of that app.

00:20:19.276 --> 00:20:23.156 A:middle
It's only apps that are
installed by you as a developer.

00:20:23.676 --> 00:20:27.916 A:middle
I'd like to bring
up David Wilson

00:20:27.916 --> 00:20:29.596 A:middle
to give us a demonstration
of how

00:20:29.596 --> 00:20:31.346 A:middle
to integrate banner ads
into our application.

00:20:31.826 --> 00:20:33.846 A:middle
&gt;&gt; David Wilson: So now that
we've talked about banner ads,

00:20:33.986 --> 00:20:36.696 A:middle
we're going to take a quick look
at a demo, just how easy it is

00:20:36.696 --> 00:20:38.326 A:middle
to take an existing application

00:20:38.606 --> 00:20:40.086 A:middle
and add this functionality
to it.

00:20:40.586 --> 00:20:42.746 A:middle
To do that, we're going to start
off with a simple application.

00:20:42.746 --> 00:20:44.136 A:middle
It's just two View Controllers.

00:20:44.136 --> 00:20:45.926 A:middle
It's a master detail.

00:20:45.996 --> 00:20:48.456 A:middle
The first one's going to show
a list of article headlines,

00:20:48.756 --> 00:20:50.976 A:middle
and when you tap on one of those
article headlines, you're going

00:20:50.976 --> 00:20:53.296 A:middle
to go into New View
Controller that shows

00:20:53.296 --> 00:20:54.706 A:middle
that article in a web view.

00:20:54.706 --> 00:20:58.176 A:middle
What we want to do in the
first part of this demo is

00:20:58.176 --> 00:21:02.516 A:middle
to add a banner view to the
bottom of the list of articles.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:02.956 --> 00:21:07.396 A:middle
So I'm going to go ahead and
pop open the iOS Simulator here,

00:21:07.396 --> 00:21:10.456 A:middle
and this is the application
before we started doing anything

00:21:10.456 --> 00:21:10.806 A:middle
to it.

00:21:11.256 --> 00:21:14.596 A:middle
We've got top news here,
a list of quick articles.

00:21:14.596 --> 00:21:17.316 A:middle
We can click on one of these and
we've got ourselves an article.

00:21:17.446 --> 00:21:19.276 A:middle
So let's see what we need to do

00:21:19.276 --> 00:21:21.746 A:middle
to add iAd Support
to this application.

00:21:22.206 --> 00:21:23.986 A:middle
We're going to hide
this, go back,

00:21:23.986 --> 00:21:26.206 A:middle
to Xcode to bring
up our project.

00:21:26.206 --> 00:21:28.486 A:middle
And the first thing that
we need to do is link

00:21:28.486 --> 00:21:29.736 A:middle
against the iAd framework.

00:21:29.736 --> 00:21:32.066 A:middle
So we're going to make sure
we've got our project selected.

00:21:32.456 --> 00:21:34.036 A:middle
Select the appropriate
target here.

00:21:34.076 --> 00:21:35.676 A:middle
And go over the Build
Phases Tab.

00:21:36.656 --> 00:21:37.806 A:middle
Click the Plus Button.

00:21:38.106 --> 00:21:40.356 A:middle
We can find the iAd Framework.

00:21:41.316 --> 00:21:42.916 A:middle
And go ahead and add
that to our project.

00:21:43.176 --> 00:21:46.196 A:middle
The next thing that
we need to do is go

00:21:46.196 --> 00:21:52.786 A:middle
into our Master View Controller
here and Import the iAd Header.

00:21:52.866 --> 00:21:54.306 A:middle
That gives us access to the API,

00:21:54.506 --> 00:21:57.076 A:middle
specifically the
CanDislayBannerAds Property

00:21:57.436 --> 00:21:58.426 A:middle
on View Controller.

00:21:59.056 --> 00:22:02.116 A:middle
Once we've done that, all we
need to do is set that property

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:02.406 --> 00:22:04.746 A:middle
on the View Controller
when it wakes up.

00:22:05.536 --> 00:22:08.196 A:middle
We can go ahead and save.

00:22:09.096 --> 00:22:12.526 A:middle
We can re-run our demo here.

00:22:16.336 --> 00:22:18.576 A:middle
Now you'll see that
automatically.

00:22:18.576 --> 00:22:21.496 A:middle
An ad pops in from the bottom as
soon as the ad request is made,

00:22:21.496 --> 00:22:24.556 A:middle
and a new ad has loaded
into your application.

00:22:24.696 --> 00:22:29.406 A:middle
If we were to lose network
connectivity and this were

00:22:29.406 --> 00:22:32.436 A:middle
to cycle back out, you'd see it
just animate out smoothly just

00:22:32.436 --> 00:22:34.086 A:middle
as well as it animated in.

00:22:34.856 --> 00:22:38.836 A:middle
And with that, I'll bring Nathan
back up to continue the slides.

00:22:39.046 --> 00:22:39.806 A:middle
&gt;&gt; Nathan de Vries:
Thanks, David.

00:22:40.236 --> 00:22:43.216 A:middle
As you can see, it's pretty
easy to enable banner ads.

00:22:43.286 --> 00:22:45.206 A:middle
Just a simple property.

00:22:45.206 --> 00:22:46.246 A:middle
Very easy to do.

00:22:46.766 --> 00:22:47.756 A:middle
Pretty cool.

00:22:47.756 --> 00:22:49.276 A:middle
This is new in iOS 7.

00:22:49.666 --> 00:22:52.246 A:middle
So next we're going to talk
about a different type of ad.

00:22:52.326 --> 00:22:54.656 A:middle
We've seen a banner
ad which when tapped,

00:22:54.776 --> 00:22:56.816 A:middle
presents a full screen
advertisement.

00:22:57.266 --> 00:22:58.896 A:middle
The Interstitial is a
little bit different,

00:22:58.896 --> 00:22:59.826 A:middle
in that it doesn't have

00:22:59.826 --> 00:23:02.326 A:middle
that intermediary
view that you tap on.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:02.726 --> 00:23:06.376 A:middle
It immediately launches into
a full-screen advertisement.

00:23:07.166 --> 00:23:09.826 A:middle
So what usually happens
is, as you're transitioning

00:23:09.826 --> 00:23:12.806 A:middle
from one part of your
application into another part,

00:23:13.316 --> 00:23:16.496 A:middle
you get this full-screen
advertisement up here.

00:23:16.626 --> 00:23:18.946 A:middle
So this is pretty cool.

00:23:19.626 --> 00:23:24.426 A:middle
This has been available since
iOS 4.3 on iPad, as of iOS 7,

00:23:24.426 --> 00:23:26.966 A:middle
this is all also
available on the iPhone,

00:23:27.556 --> 00:23:30.236 A:middle
so you can start using
this today on iPhone too.

00:23:31.636 --> 00:23:35.076 A:middle
Now when I talk about
automatic presentation

00:23:35.076 --> 00:23:37.496 A:middle
of a full-screen view,
when does that happen?

00:23:37.646 --> 00:23:40.716 A:middle
As of iOS 7, we now
have this new property

00:23:40.716 --> 00:23:42.966 A:middle
on View Controller
similar to the property

00:23:43.156 --> 00:23:46.836 A:middle
on the banner ads
called the Interstitial

00:23:46.836 --> 00:23:48.096 A:middle
Presentation Policy.

00:23:48.446 --> 00:23:52.376 A:middle
And what the iAd framework is
now able to do for you is watch

00:23:52.376 --> 00:23:54.696 A:middle
for View Controllers
to become visible,

00:23:55.126 --> 00:23:57.556 A:middle
and then present an
interstitial ad automatically

00:23:57.886 --> 00:23:59.336 A:middle
when that view becomes visible.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:00.316 --> 00:24:02.586 A:middle
So if you've got
a view controller,

00:24:02.586 --> 00:24:04.166 A:middle
we can say there's two
View Controllers here;

00:24:04.166 --> 00:24:07.086 A:middle
one is off-screen, the current
View Controller on-screen,

00:24:07.156 --> 00:24:08.866 A:middle
and the next View
Controller off-screen.

00:24:09.456 --> 00:24:12.136 A:middle
We want to configure the
Interstitial Presentation Policy

00:24:12.206 --> 00:24:14.886 A:middle
of the next View
Controller to be automatic.

00:24:15.156 --> 00:24:16.356 A:middle
We want the iAd framework

00:24:16.356 --> 00:24:18.926 A:middle
to automatically manage
presentation of an interstitial

00:24:19.276 --> 00:24:24.066 A:middle
when it's appropriate based
on inventory and minimum time

00:24:24.066 --> 00:24:25.776 A:middle
between interstitial
presentations.

00:24:26.706 --> 00:24:29.426 A:middle
Now when we call
pushViewController to present

00:24:29.426 --> 00:24:31.426 A:middle
that View Controller,

00:24:32.006 --> 00:24:34.306 A:middle
an interstitial is
automatically presented on top.

00:24:35.246 --> 00:24:38.886 A:middle
When the user dismisses the
full-screen interstitial,

00:24:39.236 --> 00:24:40.916 A:middle
they're back to that
next View Controller.

00:24:40.916 --> 00:24:43.326 A:middle
They're back into the app.

00:24:43.586 --> 00:24:46.466 A:middle
There's also another option for
applications that are doing,

00:24:46.686 --> 00:24:49.366 A:middle
maybe single View
Controller style,

00:24:49.436 --> 00:24:51.456 A:middle
have the single View
Controller architecture.

00:24:51.866 --> 00:24:55.266 A:middle
Things like games, where
you need to have control

00:24:55.266 --> 00:24:56.806 A:middle
over the presentation
of the interstitial

00:24:56.806 --> 00:25:00.006 A:middle
because there's no View
Controller transitions.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:00.036 --> 00:25:02.126 A:middle
So what you need to
do there is instead

00:25:02.126 --> 00:25:04.366 A:middle
of setting an automatic
Interstitial Presentation

00:25:04.366 --> 00:25:07.316 A:middle
Policy, you set a Manual
Presentation Policy.

00:25:07.936 --> 00:25:10.476 A:middle
And what this does, is it
still enables interstitials

00:25:10.476 --> 00:25:13.286 A:middle
to present automatically
and seamlessly, but you need

00:25:13.286 --> 00:25:15.106 A:middle
to request the presentation.

00:25:15.676 --> 00:25:18.556 A:middle
So if you're building a
game style application,

00:25:19.006 --> 00:25:22.186 A:middle
when you transition
from, say, the game back

00:25:22.186 --> 00:25:24.476 A:middle
into the menu would
be one example.

00:25:24.696 --> 00:25:27.036 A:middle
You can call Request
Interstitial Presentation,

00:25:27.036 --> 00:25:31.936 A:middle
and if an ad is available,
it will present.

00:25:31.936 --> 00:25:34.396 A:middle
One thing to bear in mind
with interstitial ads is

00:25:34.396 --> 00:25:38.176 A:middle
that when you're setting this
property on View Controllers

00:25:38.176 --> 00:25:40.146 A:middle
that might happen quite a while

00:25:40.146 --> 00:25:42.006 A:middle
after the user has
launched the application.

00:25:42.546 --> 00:25:45.226 A:middle
Setting the property on a View
Controller is really the only

00:25:45.226 --> 00:25:47.356 A:middle
way for the iAd framework
to know

00:25:47.356 --> 00:25:49.706 A:middle
that ad requests
should stop being sent

00:25:49.776 --> 00:25:51.116 A:middle
to the iAd App Network.

00:25:51.616 --> 00:25:54.336 A:middle
So what you can do
to improve on this is

00:25:54.336 --> 00:25:57.976 A:middle
to call Prepare Interstitial
Ads early

00:25:57.976 --> 00:25:59.786 A:middle
on in your application's
lifecycle

00:25:59.786 --> 00:26:02.216 A:middle
so that you don't miss
those early impressions.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:02.876 --> 00:26:05.546 A:middle
And with that, I'm going

00:26:05.546 --> 00:26:07.516 A:middle
to bring David back
up to do a demo.

00:26:07.796 --> 00:26:08.066 A:middle
&gt;&gt; David Wilson: Okay.

00:26:08.066 --> 00:26:08.766 A:middle
So we're going to go back

00:26:08.866 --> 00:26:10.606 A:middle
to the application we
just took a look at,

00:26:10.606 --> 00:26:13.016 A:middle
and we added a banner view
to the bottom of the list

00:26:13.016 --> 00:26:15.846 A:middle
of articles, and now we want to
add interstitial presentation

00:26:16.206 --> 00:26:18.586 A:middle
when the user taps on one
of those articles to go

00:26:18.586 --> 00:26:19.986 A:middle
into the actual article view.

00:26:20.356 --> 00:26:22.966 A:middle
We can go back, remember, and
this is what our app looked

00:26:22.966 --> 00:26:24.556 A:middle
like when we last left it.

00:26:24.556 --> 00:26:26.226 A:middle
We've got ads at the
bottom, and you can see

00:26:26.226 --> 00:26:27.186 A:middle
that they're cycling there.

00:26:27.746 --> 00:26:29.876 A:middle
We can go back to Xcode.

00:26:30.426 --> 00:26:33.386 A:middle
Now as Nathan mentioned,
it's important to tell iAd

00:26:33.386 --> 00:26:37.286 A:middle
that you're going to want to
present interstitial as early

00:26:37.286 --> 00:26:39.036 A:middle
as possible in the
app's lifecycle.

00:26:39.486 --> 00:26:43.576 A:middle
That allows iAd to go ahead and
make ad requests on your behalf

00:26:43.576 --> 00:26:46.976 A:middle
so that an interstitial is ready
when the user takes the action

00:26:46.976 --> 00:26:48.756 A:middle
that would present it.

00:26:49.256 --> 00:26:51.316 A:middle
So the first thing we're going
to do is we're going to go

00:26:51.316 --> 00:26:53.076 A:middle
over to our app delegate.

00:26:54.386 --> 00:26:57.536 A:middle
We're going to import
the iAd Header here,

00:26:57.536 --> 00:27:00.866 A:middle
and then inside our app
delegates did finish launching

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:01.036 --> 00:27:02.186 A:middle
with Options Call.

00:27:02.566 --> 00:27:04.836 A:middle
We want to go ahead and
call UIViewController,

00:27:04.836 --> 00:27:06.626 A:middle
Prepare Interstitial Ads.

00:27:07.276 --> 00:27:10.926 A:middle
This allows iAd to begin
making those ad requests

00:27:11.196 --> 00:27:12.626 A:middle
at the beginning of
your application.

00:27:12.626 --> 00:27:14.936 A:middle
That means the moment
the user takes action,

00:27:15.176 --> 00:27:16.876 A:middle
we're going to have
ads available for you.

00:27:18.216 --> 00:27:19.846 A:middle
Once we've done that,
we can go back

00:27:19.846 --> 00:27:21.356 A:middle
to our Master View
Controller here,

00:27:21.356 --> 00:27:23.586 A:middle
and we've already
imported the iAd Header,

00:27:23.656 --> 00:27:24.746 A:middle
which was the important bit.

00:27:24.746 --> 00:27:29.326 A:middle
And we go down to the bottom
of this to prepare for segue.

00:27:29.616 --> 00:27:32.026 A:middle
Here we've set up our
Detail View Controller.

00:27:32.136 --> 00:27:34.176 A:middle
We've set the Article URL on it.

00:27:34.606 --> 00:27:36.546 A:middle
And once we've done
that, we just also need

00:27:36.546 --> 00:27:37.926 A:middle
to set one more property,

00:27:37.966 --> 00:27:40.686 A:middle
which is the Interstitial
Presentation Policy.

00:27:41.576 --> 00:27:44.026 A:middle
And once we've done
that, we can save again.

00:27:44.126 --> 00:27:46.916 A:middle
We can go ahead and Run.

00:27:52.046 --> 00:27:54.076 A:middle
Okay. So we've got our
application back up.

00:27:54.206 --> 00:27:57.066 A:middle
Give it a second and the
banner should kick in here.

00:27:57.666 --> 00:27:59.646 A:middle
And then behind the scenes,

00:27:59.646 --> 00:28:01.176 A:middle
we're also making
interstitial requests

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:01.176 --> 00:28:04.216 A:middle
which we'll be loading
an ad for us.

00:28:04.406 --> 00:28:09.136 A:middle
Note that the default
fill rate for development

00:28:09.136 --> 00:28:10.606 A:middle
of the application is 80%.

00:28:10.606 --> 00:28:13.946 A:middle
You will want to change
that again as Nathan pointed

00:28:13.946 --> 00:28:17.596 A:middle
out if you want to test things
work all the time, versus never,

00:28:18.346 --> 00:28:19.856 A:middle
go ahead and click on one

00:28:19.856 --> 00:28:26.626 A:middle
of the articles here,
and not get an ad.

00:28:26.906 --> 00:28:29.616 A:middle
We got one down there.

00:28:29.806 --> 00:28:30.196 A:middle
There we go.

00:28:30.316 --> 00:28:32.556 A:middle
So the user's tapped on
the article headline.

00:28:32.616 --> 00:28:33.696 A:middle
They've gone in the
article view,

00:28:33.696 --> 00:28:37.286 A:middle
and the full-screen ad has
presented over the article view.

00:28:37.846 --> 00:28:40.476 A:middle
Once the user has finished
engaging with this ad,

00:28:40.516 --> 00:28:45.276 A:middle
they can go ahead and close that
ad, and they're back immediately

00:28:45.276 --> 00:28:46.276 A:middle
into your View Controller.

00:28:47.076 --> 00:28:50.086 A:middle
And with that, I'll bring Nathan
back up to continue the slides.

00:28:50.086 --> 00:28:51.416 A:middle
&gt;&gt; Nathan de Vries: So simply,

00:28:51.416 --> 00:28:53.546 A:middle
setting the Interstitial
Presentation Policy

00:28:53.546 --> 00:28:54.696 A:middle
on your View Controllers,

00:28:54.696 --> 00:28:57.146 A:middle
and you get this
automatic view controller

00:28:57.146 --> 00:28:58.486 A:middle
interstitial presentation.

00:28:58.806 --> 00:28:59.566 A:middle
It's pretty easy.

00:28:59.566 --> 00:29:01.316 A:middle
Pretty easy to get started.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:01.886 --> 00:29:04.286 A:middle
So next we're going to look

00:29:04.286 --> 00:29:09.416 A:middle
at this ad type called the IAB
Medium Rectangle Advertisement.

00:29:10.346 --> 00:29:12.286 A:middle
So what is this?

00:29:12.286 --> 00:29:16.406 A:middle
It's a view that's very similar
to a banner view, except instead

00:29:16.406 --> 00:29:18.496 A:middle
of being positioned at the
bottom of your content,

00:29:18.496 --> 00:29:20.466 A:middle
it's positioned in-line
with your content.

00:29:21.186 --> 00:29:24.586 A:middle
The size of this
view is prescribed

00:29:24.666 --> 00:29:27.596 A:middle
by the Interactive
Advertising Viewer,

00:29:27.626 --> 00:29:30.726 A:middle
which is why it's called the
Medium Rectangle Advertisement.

00:29:30.726 --> 00:29:32.536 A:middle
You might have seen
this on websites.

00:29:33.086 --> 00:29:36.306 A:middle
It's 250 points by 300 points.

00:29:37.276 --> 00:29:40.336 A:middle
It also has a similar cycling
behavior as the banner view,

00:29:40.336 --> 00:29:44.556 A:middle
so as new ads become available,
the ad cycle in the view.

00:29:45.766 --> 00:29:49.446 A:middle
And, again, like
the banner content,

00:29:49.856 --> 00:29:53.066 A:middle
you also get full
screen ads on tap.

00:29:53.736 --> 00:29:56.636 A:middle
This was introduced
in iOS 6 [inaudible],

00:29:56.636 --> 00:29:59.406 A:middle
and it's available only on iPad.

00:29:59.936 --> 00:30:01.896 A:middle
So how do we create
one of these things?

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:02.376 --> 00:30:04.496 A:middle
As you noticed, it
was positioned in-line

00:30:04.846 --> 00:30:07.686 A:middle
in the content, so you have
this greater flexibility

00:30:07.686 --> 00:30:10.706 A:middle
and positioning of the
view within your content.

00:30:10.766 --> 00:30:15.076 A:middle
So to do that, we need to
create this banner view

00:30:15.446 --> 00:30:17.366 A:middle
of type medium rectangle.

00:30:17.796 --> 00:30:20.976 A:middle
So here you can see after we've
imported the headers like we did

00:30:20.976 --> 00:30:23.806 A:middle
for the banner view, we
created this new banner view

00:30:23.806 --> 00:30:25.546 A:middle
of type medium rectangle.

00:30:25.956 --> 00:30:30.526 A:middle
And this is going to create
nearly unloaded medium

00:30:30.526 --> 00:30:31.626 A:middle
rectangle view.

00:30:32.606 --> 00:30:35.316 A:middle
So we also need to configure
ourselves as the delegate

00:30:35.316 --> 00:30:38.146 A:middle
of this view because
as ads become available

00:30:38.326 --> 00:30:43.376 A:middle
and unavailable inside this
banner view, we need to be told

00:30:43.376 --> 00:30:45.916 A:middle
so we know when to
present the view onscreen

00:30:46.006 --> 00:30:46.956 A:middle
and take it off screen.

00:30:47.456 --> 00:30:49.006 A:middle
So we set ourselves
as the delegate,

00:30:49.006 --> 00:30:51.706 A:middle
and the protocol
that's used to talk

00:30:51.706 --> 00:30:54.996 A:middle
to that delegate is the 80
Banner View Delegate protocol.

00:30:55.156 --> 00:30:57.816 A:middle
So whichever object you've
assigned as the delegate needs

00:30:57.816 --> 00:31:00.366 A:middle
to conform to the 80 Banner
View Delegate protocol.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:00.696 --> 00:31:01.596 A:middle
So we do that as well.

00:31:03.406 --> 00:31:05.356 A:middle
When the banner is
ready to load,

00:31:05.426 --> 00:31:06.886 A:middle
so we get this Delegate
Callback.

00:31:07.426 --> 00:31:10.126 A:middle
That callback is called the
Banner View Did Load Callback.

00:31:10.426 --> 00:31:11.316 A:middle
Called on the delegate.

00:31:12.086 --> 00:31:14.916 A:middle
And when this happens,
that's an opportunity for you

00:31:14.916 --> 00:31:17.286 A:middle
to present the ad on screen.

00:31:17.286 --> 00:31:18.686 A:middle
We now have an ad
fulfilled by an ad request.

00:31:18.686 --> 00:31:21.016 A:middle
We now have an ad
fulfilled by an ad request.

00:31:21.316 --> 00:31:23.096 A:middle
We now need to turn
that into an impression.

00:31:23.906 --> 00:31:27.186 A:middle
So to do that, you can do your
custom layout however you would

00:31:27.186 --> 00:31:29.326 A:middle
like to present that view.

00:31:29.326 --> 00:31:32.926 A:middle
You could cross-fade it in,
readjust your other views,

00:31:33.156 --> 00:31:36.146 A:middle
and present that medium
rectangle ad in-line

00:31:36.146 --> 00:31:36.916 A:middle
with your content.

00:31:39.496 --> 00:31:43.886 A:middle
Similarly to banner ads, when
the medium rectangle is tapped,

00:31:44.136 --> 00:31:45.636 A:middle
you get the full-screen ad.

00:31:46.316 --> 00:31:48.846 A:middle
You also need to use
the view will disappear

00:31:48.846 --> 00:31:52.826 A:middle
and view will appear callbacks
to pause any activity and sounds

00:31:52.826 --> 00:31:57.326 A:middle
in your application to prevent
them clashing with any sounds

00:31:57.326 --> 00:32:01.126 A:middle
and media that are
being played in the ad.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:01.396 --> 00:32:04.406 A:middle
When it comes time to unload
that medium rectangle,

00:32:04.816 --> 00:32:06.186 A:middle
the next callback you'll receive

00:32:06.186 --> 00:32:09.586 A:middle
on our Delegate is called the
bannerviewdidFailToReceiveAd

00:32:09.586 --> 00:32:10.846 A:middle
with Error Callback.

00:32:11.536 --> 00:32:14.486 A:middle
And this is an opportunity for
you to remove due to the reverse

00:32:14.586 --> 00:32:16.836 A:middle
of adding the view to the
view hierarchy, and you want

00:32:16.836 --> 00:32:18.106 A:middle
to move it off screen.

00:32:18.866 --> 00:32:20.126 A:middle
It's important to
keep in mind here

00:32:20.126 --> 00:32:25.736 A:middle
that you shouldn't just throw
away the medium rects ad view

00:32:26.186 --> 00:32:27.446 A:middle
because you can just
keep it around.

00:32:27.446 --> 00:32:29.546 A:middle
It'll continue to
cycle with new ads.

00:32:29.836 --> 00:32:32.576 A:middle
So as those new ads
become available,

00:32:32.576 --> 00:32:36.636 A:middle
you can simply add the same
medium rectangle ad view back

00:32:36.636 --> 00:32:38.496 A:middle
to your views hierarchy.

00:32:40.176 --> 00:32:44.146 A:middle
So much like banner
ads, we have some tools

00:32:44.146 --> 00:32:46.486 A:middle
for testing medium rectangles.

00:32:46.926 --> 00:32:48.916 A:middle
We still have the
adjustments to fill rate.

00:32:48.916 --> 00:32:50.746 A:middle
They also work with
these medium recs.

00:32:51.126 --> 00:32:52.766 A:middle
We have adjustments
to refresh rate.

00:32:52.986 --> 00:32:54.386 A:middle
Same as we discussed before.

00:32:54.386 --> 00:32:59.216 A:middle
But there's another additional
toggle that you can flip used

00:32:59.216 --> 00:33:02.446 A:middle
for medium rectangles because
you're positioning them often

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:02.446 --> 00:33:04.666 A:middle
in very specific ways
in line with content,

00:33:05.096 --> 00:33:09.316 A:middle
and what that switch does is
it helps you avoid any clipping

00:33:09.316 --> 00:33:10.416 A:middle
of that ad view.

00:33:10.946 --> 00:33:13.416 A:middle
So we really want to
avoid clipping the ad view

00:33:13.416 --> 00:33:16.256 A:middle
because that can prevent the
user from being able to see it

00:33:16.256 --> 00:33:17.566 A:middle
or the user being
able to tap it,

00:33:17.706 --> 00:33:20.456 A:middle
so by flipping the
highlight clipped banners,

00:33:20.766 --> 00:33:24.336 A:middle
you get these overlaid
red or green views on top

00:33:24.336 --> 00:33:27.126 A:middle
of your medium rects to show
whether it's being clipped

00:33:27.126 --> 00:33:27.406 A:middle
or not.

00:33:27.726 --> 00:33:31.016 A:middle
So make sure that you
run your application

00:33:31.016 --> 00:33:32.996 A:middle
with this flag enabled
in Settings

00:33:33.266 --> 00:33:36.406 A:middle
to make sure your medium
rects aren't being clipped.

00:33:37.236 --> 00:33:39.676 A:middle
So let's get a demo of that.

00:33:40.506 --> 00:33:40.896 A:middle
&gt;&gt; David Wilson: Okay.

00:33:41.296 --> 00:33:44.716 A:middle
So to enter it medium rectangles

00:33:44.716 --> 00:33:49.326 A:middle
into an application is a
little more complicated,

00:33:49.326 --> 00:33:50.246 A:middle
as Nathan mentioned.

00:33:50.636 --> 00:33:52.966 A:middle
So to do that, we're going to
start with a new application,

00:33:52.966 --> 00:33:55.646 A:middle
and this is sort of a
bit of a game simulation.

00:33:56.236 --> 00:33:59.736 A:middle
Most of the screen is going to
be taken up by the simulation.

00:33:59.736 --> 00:34:00.766 A:middle
There's some text at the bottom

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.766 --> 00:34:03.756 A:middle
that has some wasted white
space, and we're going to try

00:34:03.756 --> 00:34:05.426 A:middle
to take advantage of
some of that white space,

00:34:05.426 --> 00:34:06.696 A:middle
to include a medium rect

00:34:06.696 --> 00:34:08.456 A:middle
in the bottom left
corner of our screen.

00:34:08.896 --> 00:34:12.025 A:middle
Okay. So, anyway, you just
have to trust me that we have

00:34:12.025 --> 00:34:14.835 A:middle
as a simulation at the top, and
we have some text at the bottom,

00:34:14.835 --> 00:34:18.045 A:middle
and we've got a medium rectangle
that we're going to want to put

00:34:18.045 --> 00:34:19.846 A:middle
on the bottom left
corner of the screen.

00:34:20.456 --> 00:34:23.896 A:middle
So to do that, as we did
in our previous project,

00:34:23.896 --> 00:34:25.606 A:middle
the first thing we're
going to need to do is link

00:34:25.606 --> 00:34:27.406 A:middle
against the iAd framework.

00:34:27.696 --> 00:34:31.315 A:middle
So click on our project
here, go over to Build Phases

00:34:31.315 --> 00:34:33.166 A:middle
for the appropriate target.

00:34:33.166 --> 00:34:35.846 A:middle
Link binary with Libraries.

00:34:35.846 --> 00:34:39.656 A:middle
And we're going to link
in the iAd framework.

00:34:40.136 --> 00:34:42.926 A:middle
Remember this is an
iPad only feature,

00:34:42.926 --> 00:34:46.606 A:middle
so we can't actually demo
it with the iOS 7 STK today.

00:34:46.846 --> 00:34:51.356 A:middle
But you can build applications
to run against iOS 6.1,

00:34:51.356 --> 00:34:54.396 A:middle
and they will work with
the next seed for iOS 7.

00:34:55.146 --> 00:34:57.126 A:middle
Once we've linked
against the iAd framework,

00:34:57.556 --> 00:35:00.526 A:middle
the next thing we need to do
is go to our View Controller.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:01.446 --> 00:35:03.616 A:middle
We're going to go ahead and
Import the iAd framework here

00:35:03.616 --> 00:35:05.676 A:middle
to give us access
to these API's.

00:35:06.496 --> 00:35:08.506 A:middle
And because we need
to have a delegate

00:35:08.506 --> 00:35:10.676 A:middle
for the medium rect banner view,

00:35:10.676 --> 00:35:12.596 A:middle
we're going to make
our View Controller

00:35:12.706 --> 00:35:16.326 A:middle
that 80 Banner View Delegate,
and then we're going to set

00:35:16.326 --> 00:35:21.266 A:middle
up a couple properties to hold
the new 80 Banner View Medium

00:35:21.266 --> 00:35:24.216 A:middle
Rect that we're going to create,
and to keep track of whether

00:35:24.216 --> 00:35:26.396 A:middle
or not the ad is
currently visible on screen.

00:35:26.756 --> 00:35:29.046 A:middle
We're going to need this so that
we can do the appropriate layout

00:35:29.046 --> 00:35:31.656 A:middle
as the banner view
loads and unloads.

00:35:32.466 --> 00:35:35.926 A:middle
So once we have those
properties inside Load View,

00:35:35.926 --> 00:35:39.156 A:middle
we can go ahead and
instantiate that.

00:35:39.666 --> 00:35:41.946 A:middle
Note that all we have to
do is alloc initWithAd:

00:35:42.076 --> 00:35:45.146 A:middle
ADAdTypeMediumRectangle,
and then remember

00:35:45.146 --> 00:35:48.216 A:middle
to set the delegate to
the View Controller.

00:35:49.056 --> 00:35:50.776 A:middle
Once we've done that, we need

00:35:50.776 --> 00:35:53.526 A:middle
to update our
viewDidLayoutSubviews method

00:35:53.526 --> 00:35:56.486 A:middle
so that we can include the
medium rect inside our layout.

00:35:57.316 --> 00:36:01.526 A:middle
So all we need to do here is
do some frame calculations

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:01.526 --> 00:36:03.136 A:middle
for the medium rect,
which puts it,

00:36:03.936 --> 00:36:06.446 A:middle
with the calculations
here we're doing is layout

00:36:06.446 --> 00:36:09.016 A:middle
out the medium rect in the
bottom left of the screen

00:36:09.016 --> 00:36:11.226 A:middle
if it's loaded, and
just off-screen

00:36:11.226 --> 00:36:13.066 A:middle
in the bottom left,
if it's not loaded.

00:36:13.416 --> 00:36:16.636 A:middle
That allows us to do smooth
animated transitions on

00:36:16.636 --> 00:36:19.046 A:middle
and off screen, as
the loaded property

00:36:19.046 --> 00:36:20.416 A:middle
of this banner view changes.

00:36:20.856 --> 00:36:23.676 A:middle
To do that, we're also going
to need to adjust the origin

00:36:23.676 --> 00:36:25.066 A:middle
of the frame that's next to it.

00:36:25.206 --> 00:36:27.816 A:middle
Once we've done that,
then we need

00:36:27.816 --> 00:36:30.656 A:middle
to actually start implementing
the delegate method callbacks

00:36:30.656 --> 00:36:33.236 A:middle
that will tell us when things
happen with this banner view.

00:36:33.976 --> 00:36:37.066 A:middle
So the first thing we're going
to do is go down to the bottom

00:36:37.616 --> 00:36:40.516 A:middle
and hide the rest of this.

00:36:40.686 --> 00:36:43.366 A:middle
Then we go to first start

00:36:43.366 --> 00:36:46.186 A:middle
out by implementing
bannerViewDidLoadAd.

00:36:46.286 --> 00:36:50.296 A:middle
This is our cue to move
the banner onscreen

00:36:50.406 --> 00:36:51.736 A:middle
if it's not already there.

00:36:52.256 --> 00:36:55.396 A:middle
This is iAd telling us that
there's a new ad that's in place

00:36:55.396 --> 00:36:57.196 A:middle
in the view and we should
display it to the user.

00:36:58.016 --> 00:36:59.376 A:middle
If it's already visible,
that's fine.

00:36:59.376 --> 00:37:01.226 A:middle
We don't need to
take any action.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:01.226 --> 00:37:03.636 A:middle
If it's not, we're going
to set our property here

00:37:03.636 --> 00:37:06.316 A:middle
and then we're just going
to do a quick animation

00:37:06.316 --> 00:37:09.556 A:middle
to move this thing onscreen by
just calling setNeedsLayout,

00:37:09.816 --> 00:37:12.286 A:middle
layoutIfNeeded, and letting
the layout code that we did

00:37:12.286 --> 00:37:14.096 A:middle
up above handle this for us.

00:37:15.176 --> 00:37:17.316 A:middle
Now once the banner's been
onscreen for a little while,

00:37:17.316 --> 00:37:20.336 A:middle
we're going to have to move it
back off screen if it unloads,

00:37:20.936 --> 00:37:23.296 A:middle
say the user moves out
of network connectivity,

00:37:23.296 --> 00:37:25.176 A:middle
or we just run out of inventory.

00:37:25.266 --> 00:37:26.746 A:middle
So we're going to implement

00:37:26.746 --> 00:37:29.276 A:middle
in this case the
bannerViewDidFailToLoadAd

00:37:29.276 --> 00:37:30.776 A:middle
with error method.

00:37:30.776 --> 00:37:34.276 A:middle
This is almost identical
to moving it onscreen,

00:37:34.276 --> 00:37:36.346 A:middle
except we're going to
change our property to No,

00:37:37.016 --> 00:37:39.626 A:middle
and then we're going to
again do an animation based

00:37:39.626 --> 00:37:41.786 A:middle
on setNeedsLayout,
layoutIfNeeded.

00:37:42.196 --> 00:37:44.506 A:middle
So that'll move the
thing on and off screen,

00:37:44.506 --> 00:37:46.306 A:middle
but there's one more thing
we need to take care of,

00:37:46.306 --> 00:37:47.986 A:middle
and that's pausing our game

00:37:47.986 --> 00:37:49.886 A:middle
when the user actually
interacts with this ad.

00:37:50.196 --> 00:37:51.506 A:middle
We've got a simulation running.

00:37:51.506 --> 00:37:52.776 A:middle
It's taking up CPU.

00:37:53.046 --> 00:37:54.876 A:middle
Maybe the user is actually
interested in watching

00:37:54.876 --> 00:37:57.236 A:middle
that simulation, and we
don't want to let it just go

00:37:57.236 --> 00:38:00.606 A:middle
on behind the scenes while the
user's interacting with the ad.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:01.226 --> 00:38:02.636 A:middle
So to do that, we're
going to go ahead

00:38:02.636 --> 00:38:05.496 A:middle
and implement view did
appear, view did disappear

00:38:05.496 --> 00:38:08.466 A:middle
on our view controller, and
all we need to do here is start

00:38:08.466 --> 00:38:11.066 A:middle
and stop timers that are
running our simulation.

00:38:11.066 --> 00:38:14.136 A:middle
If you had media, this would
also be your cure to pause

00:38:14.136 --> 00:38:15.506 A:middle
and then resume the media.

00:38:16.196 --> 00:38:17.356 A:middle
Once we've done that,

00:38:17.806 --> 00:38:19.856 A:middle
if our demo machine were
working we could run it again,

00:38:20.076 --> 00:38:22.636 A:middle
but that's pretty much
all you need to do

00:38:22.636 --> 00:38:25.056 A:middle
to get medium rects
integrated into your app.

00:38:25.656 --> 00:38:27.126 A:middle
And with that I'll
bring Nathan back out.

00:38:27.306 --> 00:38:29.626 A:middle
&gt;&gt; Nathan de Vries: So the next
ad type which we're excited

00:38:29.626 --> 00:38:32.576 A:middle
to talk about today, is
the pre-roll video ad.

00:38:32.856 --> 00:38:36.006 A:middle
We've had a lot of requests for
this, and it's new to iOS 7,

00:38:36.506 --> 00:38:39.586 A:middle
and what this lets you do
is integrate seamlessly

00:38:39.586 --> 00:38:41.276 A:middle
with the media player API's

00:38:41.506 --> 00:38:45.616 A:middle
to request playback all the
video before your video content.

00:38:46.376 --> 00:38:48.586 A:middle
So as I said, it's
brand new in iOS 7.

00:38:49.136 --> 00:38:52.036 A:middle
It's integrated with
the media player API's.

00:38:52.036 --> 00:38:54.486 A:middle
So the way you would
normally play back media

00:38:54.486 --> 00:38:56.476 A:middle
with the MP movie
player controller API,

00:38:57.076 --> 00:38:59.286 A:middle
you can now just
use a different API

00:38:59.406 --> 00:39:03.576 A:middle
to play a pre-roll
ad before that media.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:03.786 --> 00:39:05.426 A:middle
When the pre-roll
starts playing,

00:39:05.716 --> 00:39:08.846 A:middle
this happens before the
media content starts playing,

00:39:08.926 --> 00:39:11.826 A:middle
your primary media
content starts playing,

00:39:12.216 --> 00:39:13.916 A:middle
and when the advertisement
finishes,

00:39:14.216 --> 00:39:17.406 A:middle
you get this seamless transition
to the main content video.

00:39:18.056 --> 00:39:21.736 A:middle
If the user engages with the
video while it's displayed

00:39:21.736 --> 00:39:22.846 A:middle
with this pre-roll video,

00:39:23.196 --> 00:39:26.356 A:middle
they get that standard
full-screen immersive ad

00:39:26.356 --> 00:39:27.546 A:middle
experience as well.

00:39:27.546 --> 00:39:29.816 A:middle
Just like all of the other
advertisements we support.

00:39:30.856 --> 00:39:33.186 A:middle
We also support Inline playback.

00:39:33.376 --> 00:39:34.656 A:middle
So if you've got an application

00:39:34.656 --> 00:39:37.716 A:middle
that doesn't assume
full-screen media playback,

00:39:38.036 --> 00:39:40.776 A:middle
then you can also use
pre-roll video in that scenario

00:39:40.776 --> 00:39:43.556 A:middle
by using the embedded style
for MP movie player controller,

00:39:43.556 --> 00:39:47.676 A:middle
and this is supported
on both iPhone and iPad.

00:39:48.156 --> 00:39:50.806 A:middle
So let's take a look
at how to create one

00:39:50.806 --> 00:39:52.626 A:middle
of these MP movie
player controllers.

00:39:53.506 --> 00:39:56.436 A:middle
In addition to the usual iAd
framework import that you need

00:39:56.436 --> 00:39:57.826 A:middle
to do for the other ad types,

00:39:58.236 --> 00:40:00.516 A:middle
the MP movie player
controller functionality is

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:00.516 --> 00:40:03.006 A:middle
in the media player framework.

00:40:03.276 --> 00:40:04.756 A:middle
So you'll need to
link media player

00:40:05.216 --> 00:40:07.576 A:middle
and also import the
media player headers.

00:40:09.086 --> 00:40:11.906 A:middle
We then need to create a new
MP movie player controller,

00:40:12.116 --> 00:40:14.106 A:middle
or an MP movie player
view controller,

00:40:14.196 --> 00:40:17.516 A:middle
depending on your application,
and set the content URL

00:40:17.706 --> 00:40:19.176 A:middle
of that movie player controller.

00:40:19.526 --> 00:40:21.416 A:middle
This is the usual video content

00:40:21.416 --> 00:40:23.296 A:middle
that you would have been
playing before you started

00:40:23.296 --> 00:40:24.576 A:middle
integrating iAd.

00:40:24.756 --> 00:40:28.046 A:middle
After we've done that, instead
of calling the play method

00:40:28.046 --> 00:40:29.506 A:middle
on the movie player controller,

00:40:29.756 --> 00:40:33.456 A:middle
iAd has this new category
method called playPrerollAdWith

00:40:33.456 --> 00:40:35.406 A:middle
CompletionHandler,
which allows you

00:40:35.406 --> 00:40:37.916 A:middle
to provide a completion
block that gets called

00:40:38.136 --> 00:40:41.726 A:middle
after the ad finishes, or if
there was no other ad available

00:40:41.726 --> 00:40:44.606 A:middle
at the time of requesting
a pre-roll ad.

00:40:44.786 --> 00:40:47.646 A:middle
Once you've called this API,
you can immediately add,

00:40:48.126 --> 00:40:52.676 A:middle
so inside that handler, once
the playback has finished,

00:40:52.856 --> 00:40:54.916 A:middle
or if there wasn't a
pre-roll available,

00:40:55.366 --> 00:40:57.896 A:middle
that's your opportunity
to call the play API

00:40:57.896 --> 00:41:01.826 A:middle
and play your original
video content.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:03.426 --> 00:41:04.936 A:middle
Once you've called
this Play Pre-Roll Ad

00:41:04.936 --> 00:41:06.236 A:middle
with Completion Handler API,

00:41:06.786 --> 00:41:09.066 A:middle
you can then add the movie
player controllers view

00:41:09.096 --> 00:41:10.266 A:middle
to your view hierarchy,

00:41:10.566 --> 00:41:13.166 A:middle
or you can present the
movie player view controller

00:41:13.376 --> 00:41:14.466 A:middle
in your application.

00:41:15.076 --> 00:41:19.226 A:middle
If you've got an app that has
a scenario where you would

00:41:19.226 --> 00:41:22.136 A:middle
like to conditionally play
pre-roll for some users

00:41:22.166 --> 00:41:25.426 A:middle
and not others, or maybe you've
got some time based logic as to

00:41:25.426 --> 00:41:28.806 A:middle
when you want to show pre-roll
ads, you can do that too.

00:41:29.316 --> 00:41:32.706 A:middle
All you need to do is
call the play API instead

00:41:32.706 --> 00:41:36.236 A:middle
of calling the Play Pre-Roll
Ad with Completion Handler API.

00:41:36.236 --> 00:41:38.966 A:middle
And you can come up with your
own logic for when you do

00:41:38.966 --> 00:41:40.726 A:middle
and you don't, display
pre-roll ads,

00:41:40.776 --> 00:41:44.566 A:middle
and which situations are
optimal for your app.

00:41:46.056 --> 00:41:49.136 A:middle
Much like interstitial ads,
you also need to prepare early.

00:41:49.206 --> 00:41:50.696 A:middle
You need to tell
the ad framework

00:41:50.696 --> 00:41:53.006 A:middle
that it should start
sending requests as soon

00:41:53.006 --> 00:41:55.586 A:middle
as the application launches,
so that the first time

00:41:55.586 --> 00:41:57.086 A:middle
that a user taps on a video,

00:41:57.416 --> 00:42:00.046 A:middle
a pre-roll ad is more
likely to be available.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:00.546 --> 00:42:02.856 A:middle
It's all about not missing
those early impressions.

00:42:03.396 --> 00:42:05.806 A:middle
So similarly to the
UIViewController,

00:42:05.806 --> 00:42:07.446 A:middle
preparing [inaudible]
ads called,

00:42:08.076 --> 00:42:13.376 A:middle
we now swap that with an MP
movie player controller prepare

00:42:13.376 --> 00:42:14.626 A:middle
pre-roll ads [inaudible].

00:42:14.716 --> 00:42:16.676 A:middle
And this will do the
same effective thing.

00:42:16.676 --> 00:42:18.356 A:middle
It's sending off
ad requests as soon

00:42:18.356 --> 00:42:20.706 A:middle
as your application
becomes available.

00:42:21.326 --> 00:42:25.626 A:middle
So there are a couple of gotchas

00:42:25.626 --> 00:42:28.166 A:middle
with the movie player
controller API.

00:42:28.916 --> 00:42:32.046 A:middle
Those of you that are already
using MP movie player controller

00:42:32.046 --> 00:42:34.456 A:middle
will need to keep in
mind that you may need

00:42:34.456 --> 00:42:37.546 A:middle
to adjust your application
to accommodate pre-roll ads.

00:42:38.516 --> 00:42:40.826 A:middle
The first thing that you
need to make sure of is

00:42:40.826 --> 00:42:45.026 A:middle
that if you're ever explicitly
playing your MP movie player

00:42:45.426 --> 00:42:48.166 A:middle
controller, you need to make
sure that that doesn't happen

00:42:48.166 --> 00:42:50.046 A:middle
until the completion
handler is pulled.

00:42:50.536 --> 00:42:54.106 A:middle
This is because it's the main
content starts playing while the

00:42:54.106 --> 00:42:54.936 A:middle
pre-roll is playing,

00:42:55.196 --> 00:42:57.406 A:middle
we'll immediately skip
to the main content.

00:42:57.996 --> 00:42:59.376 A:middle
So bear that in mind.

00:42:59.906 --> 00:43:02.686 A:middle
There's two slightly indirect
times that this can happen.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:03.056 --> 00:43:06.756 A:middle
Many people will observe
these two notifications

00:43:06.756 --> 00:43:10.096 A:middle
on MP movie player controller,
when the video becomes available

00:43:10.096 --> 00:43:12.496 A:middle
for playback, and also
when the first frame

00:43:12.496 --> 00:43:14.406 A:middle
of the video is available
for display.

00:43:15.066 --> 00:43:18.146 A:middle
A lot of developers use
these and rightly so,

00:43:18.146 --> 00:43:20.446 A:middle
for playing back the media
content, but you need

00:43:20.446 --> 00:43:23.006 A:middle
to be aware that if you
call play in response

00:43:23.006 --> 00:43:26.656 A:middle
to these notifications, you
may skip the pre-roll adds,

00:43:26.656 --> 00:43:28.826 A:middle
so make sure that you don't
handle these notifications

00:43:28.826 --> 00:43:33.646 A:middle
until after the callback
handler is called, and likewise

00:43:33.646 --> 00:43:35.196 A:middle
if your customizing the UI

00:43:35.196 --> 00:43:37.746 A:middle
of the MP movie player
controller, which is supported.

00:43:37.746 --> 00:43:42.396 A:middle
You also need to hold off on
inserting any custom views

00:43:42.396 --> 00:43:45.196 A:middle
into the view controller's
view until after

00:43:45.196 --> 00:43:46.676 A:middle
that completion handler
is called

00:43:46.736 --> 00:43:50.186 A:middle
because you don't want your
views colliding with any

00:43:50.186 --> 00:43:51.216 A:middle
of the pre-roll content.

00:43:53.226 --> 00:43:55.566 A:middle
And let's bring David
up for a demo of that.

00:43:55.856 --> 00:43:57.686 A:middle
&gt;&gt;David: To start off with
to demonstrate pre-roll adds,

00:43:57.686 --> 00:44:01.456 A:middle
we're going to start with this
very simple collection view

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:01.456 --> 00:44:02.746 A:middle
application on the phone.

00:44:02.746 --> 00:44:05.466 A:middle
Just has one view controller
that's a collection of views,

00:44:05.466 --> 00:44:09.346 A:middle
and hold a set of thumbnails for
videos, and the user can tap one

00:44:09.346 --> 00:44:11.766 A:middle
of those thumbnails
to go into the video.

00:44:12.016 --> 00:44:12.436 A:middle
That's great.

00:44:12.436 --> 00:44:14.206 A:middle
We can go ahead and see
what that looks like.

00:44:14.786 --> 00:44:17.506 A:middle
We have a few short videos here.

00:44:17.506 --> 00:44:21.146 A:middle
We can tap one of them,
and the video plays.

00:44:21.146 --> 00:44:22.636 A:middle
What we want to do is instead

00:44:22.636 --> 00:44:24.166 A:middle
of just having the
video play immediately,

00:44:24.166 --> 00:44:26.626 A:middle
we want to put a pre-roll
in front of that video

00:44:26.816 --> 00:44:28.396 A:middle
so we can monetize
our application.

00:44:28.576 --> 00:44:31.136 A:middle
So let's take a look
at what that takes.

00:44:31.166 --> 00:44:34.526 A:middle
So we're going to
pull up Xcode again.

00:44:34.526 --> 00:44:36.926 A:middle
The first thing we need to do,

00:44:37.326 --> 00:44:39.566 A:middle
as we did in the previous
two demos, is to go ahead

00:44:39.566 --> 00:44:41.576 A:middle
and make sure we link
against the iAd framework.

00:44:41.756 --> 00:44:43.896 A:middle
We'll go ahead and
click on our project,

00:44:44.046 --> 00:44:47.246 A:middle
make sure the right target
is selected, build phases,

00:44:47.696 --> 00:44:50.676 A:middle
and link against
the iAd framework.

00:44:52.076 --> 00:44:55.246 A:middle
Once we've done that, just
as with the interstitials,

00:44:55.246 --> 00:44:58.906 A:middle
it's important to tell iAd early
in the application's lifecycle

00:44:58.906 --> 00:45:00.486 A:middle
that you want pre-roll ads.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:00.546 --> 00:45:03.596 A:middle
This allows it to go ahead
and make requests early,

00:45:03.806 --> 00:45:05.606 A:middle
so that a pre-roll is available

00:45:05.696 --> 00:45:08.276 A:middle
when the user takes an
action that should show one.

00:45:08.886 --> 00:45:10.536 A:middle
So to do that, we're
going to again go

00:45:10.536 --> 00:45:15.176 A:middle
to our app delegate application
didFinishLaunchingWithOptions.

00:45:15.176 --> 00:45:18.326 A:middle
We're going to go ahead
and import the iAd header

00:45:18.726 --> 00:45:19.986 A:middle
and the media player header.

00:45:20.466 --> 00:45:24.886 A:middle
This gives us access to both the
MP movie player controller class

00:45:24.886 --> 00:45:29.276 A:middle
and the prepared pre-roll ads
category that iAd adds to that.

00:45:29.276 --> 00:45:32.136 A:middle
So inside
didFinishLaunchingWithOptions,

00:45:32.136 --> 00:45:37.026 A:middle
we're just going to call MP
movie player controller prepare

00:45:37.026 --> 00:45:39.376 A:middle
pre-roll adds, and that
kicks off the ad requests

00:45:39.406 --> 00:45:41.686 A:middle
so that we can have a pre-roll
ready when the user taps

00:45:41.686 --> 00:45:42.806 A:middle
on one of our thumbnails.

00:45:43.516 --> 00:45:47.656 A:middle
Speaking of that, we next need
to take care of actually doing

00:45:47.656 --> 00:45:49.676 A:middle
that when the user taps
on one of the thumbnails.

00:45:49.716 --> 00:45:52.686 A:middle
So to do that, we're going
to go to our view controller.

00:45:52.686 --> 00:45:54.996 A:middle
We're going to go back up to
the top first, and we're going

00:45:54.996 --> 00:45:58.216 A:middle
to import the iAd
header here as well.

00:45:58.216 --> 00:46:00.436 A:middle
We've already imported
the media player framework

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:00.436 --> 00:46:02.026 A:middle
since we're playing the videos.

00:46:02.586 --> 00:46:04.256 A:middle
And then we're going to go down
to the bottom and we're going

00:46:04.256 --> 00:46:04.476 A:middle
to go

00:46:04.476 --> 00:46:07.676 A:middle
to our collectionViewdidSelect
ItemAtIndexPath.

00:46:07.746 --> 00:46:12.476 A:middle
This is where we handled that
tap and begin playing the movie.

00:46:13.086 --> 00:46:16.476 A:middle
All we're doing at the moment is
instantiating an MP movie player

00:46:16.476 --> 00:46:18.926 A:middle
view controller and
setting the content URL,

00:46:19.306 --> 00:46:20.326 A:middle
and then presenting it.

00:46:21.006 --> 00:46:24.806 A:middle
The only change we need to
make here is to insert a call

00:46:24.806 --> 00:46:27.556 A:middle
to play pre-roll ad
with completion handler.

00:46:28.166 --> 00:46:31.896 A:middle
A note that we're calling MPV
controller movie player play

00:46:32.256 --> 00:46:33.826 A:middle
inside the completion handler.

00:46:33.826 --> 00:46:37.206 A:middle
So once the pre-roll has
finished or has failed to play,

00:46:38.166 --> 00:46:39.436 A:middle
we'll go ahead and
play our content.

00:46:40.376 --> 00:46:44.666 A:middle
Once we've done that, we can
go ahead and run this again.

00:46:48.196 --> 00:46:50.436 A:middle
We've launched application.

00:46:50.436 --> 00:46:52.006 A:middle
You see we've changed
almost nothing here.

00:46:52.006 --> 00:46:54.276 A:middle
We still got our
collection of videos.

00:46:54.436 --> 00:46:57.696 A:middle
And this time when the user
taps on one of these videos,

00:46:57.726 --> 00:47:00.706 A:middle
if an ad is available, a
pre-roll should play before it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:01.936 --> 00:47:02.656 A:middle
And here we go.

00:47:02.656 --> 00:47:06.056 A:middle
We've got these are tapped,
we've got the ad coming up,

00:47:06.146 --> 00:47:10.346 A:middle
the ad is playing, a few seconds
later, the user will be able

00:47:10.346 --> 00:47:13.766 A:middle
to either watch this ad to
completion or skip through.

00:47:14.356 --> 00:47:15.416 A:middle
And when that finishes,

00:47:15.846 --> 00:47:17.306 A:middle
the video immediately
begins playing.

00:47:18.816 --> 00:47:21.216 A:middle
And that's all it takes
to integrate pre-rolls

00:47:21.216 --> 00:47:22.106 A:middle
into your application.

00:47:22.296 --> 00:47:24.366 A:middle
With that, I'll bring
Nathan back up.

00:47:24.366 --> 00:47:25.536 A:middle
&gt;&gt; Nathan de Vries:
So as you can see,

00:47:25.536 --> 00:47:28.046 A:middle
if you've already got a
movie player application,

00:47:28.046 --> 00:47:31.446 A:middle
it's very easy to port it
across the playing pre-roll ads.

00:47:32.006 --> 00:47:33.326 A:middle
If you don't, then
it's very easy

00:47:33.326 --> 00:47:35.146 A:middle
to add these experiences
to your app.

00:47:35.536 --> 00:47:36.976 A:middle
So wrapping up a little bit,

00:47:38.416 --> 00:47:41.446 A:middle
we have these brand new
pre-roll ads available in iOS 7.

00:47:41.576 --> 00:47:44.346 A:middle
Some great new opportunities
for video apps

00:47:44.346 --> 00:47:46.526 A:middle
to produce more revenue

00:47:46.576 --> 00:47:48.476 A:middle
from their application
with pre-roll ads.

00:47:49.266 --> 00:47:51.656 A:middle
We have those medium rectangle
ads that are supported

00:47:51.656 --> 00:47:54.656 A:middle
on the iPad that can
be positioned in-line

00:47:54.656 --> 00:47:57.636 A:middle
with your content for a
more integrated experience.

00:47:58.516 --> 00:48:01.446 A:middle
We have new interstitial
support for iPhone,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:01.776 --> 00:48:03.966 A:middle
which is new in iOS 7.

00:48:04.176 --> 00:48:07.386 A:middle
They're also supported on iPad.

00:48:07.386 --> 00:48:11.976 A:middle
And lastly we have these new
banner controller API's similar

00:48:11.976 --> 00:48:14.016 A:middle
to the interstitial
API's that allow you

00:48:14.016 --> 00:48:17.506 A:middle
to simply toggle a switch on
your view controllers to opt

00:48:17.506 --> 00:48:20.256 A:middle
in to advertising for
those content views.

00:48:21.236 --> 00:48:22.916 A:middle
And lastly, we spoke
a little bit

00:48:22.916 --> 00:48:26.656 A:middle
about optimizing your ad
performance, so when you go away

00:48:26.656 --> 00:48:30.476 A:middle
and you're thinking about
integrating these advertisements

00:48:30.476 --> 00:48:33.426 A:middle
into your application,
think back to these tips

00:48:33.426 --> 00:48:36.516 A:middle
for optimizing ad performance,
placing ads smartly,

00:48:36.936 --> 00:48:39.336 A:middle
looking at specific
regions and locales

00:48:39.336 --> 00:48:42.546 A:middle
for the way you might want
to optimize your marketing,

00:48:42.976 --> 00:48:46.106 A:middle
and lastly, make sure that
it all starts with the app.

00:48:46.486 --> 00:48:48.676 A:middle
Really focus on pleasing
your customers

00:48:48.926 --> 00:48:51.656 A:middle
and you'll generate far more
revenue from your applications.

00:48:52.096 --> 00:48:52.466 A:middle
Thank you.

00:48:53.666 --> 00:48:58.006 A:middle
For more information
about these slides

00:48:58.006 --> 00:49:02.056 A:middle
and iAd-related questions, you
should speak to our director

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:02.056 --> 00:49:04.876 A:middle
of technology evangelism,
John, or you should jump

00:49:04.876 --> 00:49:07.186 A:middle
onto the forums and
ask questions there.

00:49:07.276 --> 00:49:09.636 A:middle
We have a whole bunch of
us that answer questions.

00:49:10.026 --> 00:49:12.196 A:middle
To develop documentation
as I mentioned is part

00:49:12.196 --> 00:49:13.266 A:middle
of the developed benefits.

00:49:13.266 --> 00:49:14.846 A:middle
Is incredibly thorough.

00:49:15.406 --> 00:49:18.636 A:middle
So there's the iAd Sample Suite
that you want to check out,

00:49:18.636 --> 00:49:21.116 A:middle
and also the new
develop a documentation

00:49:21.116 --> 00:49:23.596 A:middle
for these new API's that
we're launching this release.

00:49:24.436 --> 00:49:27.616 A:middle
There's some related sessions if
you're interested in promotion

00:49:27.616 --> 00:49:30.716 A:middle
of your application, as
well as making revenue

00:49:30.716 --> 00:49:32.106 A:middle
from your application.

00:49:32.276 --> 00:49:35.886 A:middle
You should check out the videos
of the iAd workbench session.

00:49:36.406 --> 00:49:38.816 A:middle
And if you're interested
in content creation

00:49:38.816 --> 00:49:42.886 A:middle
for advertising, then there's
also two sessions related

00:49:42.886 --> 00:49:45.056 A:middle
to producing the ads themselves.

00:49:45.476 --> 00:49:46.556 A:middle
Thank you very much.

00:49:47.016 --> 00:49:48.000 A:middle
[ Applause ]

