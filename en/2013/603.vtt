WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:10.686 A:middle
[ Silence ]

00:00:11.186 --> 00:00:12.266 A:middle
&gt;&gt; Well, hello again.

00:00:12.466 --> 00:00:14.906 A:middle
For those who have been here
in the previous session,

00:00:15.326 --> 00:00:16.856 A:middle
this is the second session

00:00:16.856 --> 00:00:20.016 A:middle
of our two-part Web
Inspectors extravaganza today.

00:00:20.736 --> 00:00:23.656 A:middle
My name is Antoine, I'm
an engineer on the Safari

00:00:23.656 --> 00:00:27.286 A:middle
and WebKit teams and I work
specifically on Web Inspector.

00:00:28.226 --> 00:00:31.146 A:middle
And so, for those who have been
here in the previous session,

00:00:31.546 --> 00:00:35.736 A:middle
this is a more advanced session
but we will cover some ground

00:00:35.736 --> 00:00:37.286 A:middle
that you may have seen
from the previous session.

00:00:37.286 --> 00:00:40.056 A:middle
We'll try to reduce to overlap
so don't worry, but make sure

00:00:40.056 --> 00:00:42.896 A:middle
that even if some of the content
seems familiar, we always going

00:00:42.896 --> 00:00:44.946 A:middle
to go in much greater
detail than what we've seen

00:00:44.946 --> 00:00:45.776 A:middle
on the previous session.

00:00:47.416 --> 00:00:50.536 A:middle
So Web Inspector is the
Safari developer tool.

00:00:51.676 --> 00:00:56.106 A:middle
It's the one stop shop for you
to inspect, tweak, analyze,

00:00:56.156 --> 00:00:58.816 A:middle
and debug any problem you
may have with your web page.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:00.156 --> 00:01:04.385 A:middle
And it's a tool that runs
on the Mac as part of Safari

00:01:05.016 --> 00:01:07.346 A:middle
and surely enough, you can
use it to inspect pages

00:01:07.346 --> 00:01:08.466 A:middle
and Safari on your Mac.

00:01:09.166 --> 00:01:11.926 A:middle
But we've set it up so that
with remote web inspection,

00:01:12.166 --> 00:01:15.516 A:middle
you can always inspect content
running on your iOS device

00:01:15.516 --> 00:01:20.086 A:middle
and iOS Safari, or even
your own app that you wrote

00:01:20.086 --> 00:01:22.366 A:middle
for iOS that uses UIWebView.

00:01:22.926 --> 00:01:28.136 A:middle
And the first thing I'd like
to do is to go through some

00:01:28.136 --> 00:01:29.466 A:middle
of the changes we've made

00:01:29.466 --> 00:01:31.536 A:middle
into the user interface
across last year.

00:01:32.796 --> 00:01:35.376 A:middle
And to get a sense of our
progress, let's turn back

00:01:35.376 --> 00:01:38.166 A:middle
to a year ago when on this
stage my colleague team Hatcher

00:01:38.166 --> 00:01:40.846 A:middle
introduced Web Inspector
for Safari 6.

00:01:41.896 --> 00:01:44.276 A:middle
And remember that at the time,

00:01:44.586 --> 00:01:47.626 A:middle
the banner feature Web Inspector
was that for the first time,

00:01:47.656 --> 00:01:49.596 A:middle
we added support for
remote web inspection.

00:01:50.076 --> 00:01:54.516 A:middle
And what that meant is that
you could finally inspect your

00:01:54.516 --> 00:01:58.446 A:middle
content loading-- loaded,
sorry, on iOS devices.

00:01:58.766 --> 00:02:00.386 A:middle
That was really a
massive breakthrough.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.776 --> 00:02:04.616 A:middle
And we thought that while doing
this would probably gather a

00:02:04.616 --> 00:02:09.045 A:middle
whole set of new users that will
be a lot more used to Xcode,

00:02:09.416 --> 00:02:12.736 A:middle
you know, people that develop
app on iOS are using Xcode.

00:02:12.876 --> 00:02:16.686 A:middle
So we took the cue of the
design lead of Xcode 4

00:02:16.986 --> 00:02:18.786 A:middle
to change the complete
appearance

00:02:18.786 --> 00:02:20.656 A:middle
of web inspector in Safari 6.

00:02:21.466 --> 00:02:27.416 A:middle
So, that is Web Inspector looked
up until Safari 7 is coming out,

00:02:28.096 --> 00:02:31.266 A:middle
and we heard a lot of feedback
about this user interface.

00:02:31.566 --> 00:02:35.686 A:middle
More specifically, we heard that
the organization of icons to--

00:02:35.686 --> 00:02:39.216 A:middle
on the left sidebars and on the
right sidebars was a little bit

00:02:39.216 --> 00:02:42.226 A:middle
confusing and that they
were also a little bit small

00:02:42.226 --> 00:02:43.756 A:middle
and lacked a little
bit of color.

00:02:44.016 --> 00:02:49.516 A:middle
It wasn't just super easy
to learn about the interface

00:02:49.516 --> 00:02:52.216 A:middle
if you weren't already familiar
with Xcode or Web Inspector.

00:02:52.646 --> 00:02:54.836 A:middle
So we took that comments--
those comments to heart

00:02:54.836 --> 00:02:57.746 A:middle
and we worked hard to
improve the user interface

00:02:57.746 --> 00:02:59.216 A:middle
of Web Inspector in Safari 7.

00:02:59.996 --> 00:03:02.816 A:middle
And so, I'd like to walk
you through one major change

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:02.816 --> 00:03:05.476 A:middle
that we've made and
those changes were made

00:03:05.476 --> 00:03:06.086 A:middle
to the tool bar.

00:03:06.146 --> 00:03:08.976 A:middle
And the tool bar is
completely new in Safari 7.

00:03:09.106 --> 00:03:10.936 A:middle
And the first thing
you'll notice is

00:03:10.936 --> 00:03:13.966 A:middle
that to control the display
of your navigation sidebars

00:03:13.966 --> 00:03:16.906 A:middle
to the left with those
three icons, resources,

00:03:16.906 --> 00:03:17.846 A:middle
timelines, and debugger.

00:03:18.096 --> 00:03:20.776 A:middle
Console is a different panel
that we'll go back to later.

00:03:21.476 --> 00:03:24.766 A:middle
And these are icons
that you can control,

00:03:24.766 --> 00:03:28.036 A:middle
you can fully customize
them, they're nice and big

00:03:28.036 --> 00:03:29.286 A:middle
and have a label by default.

00:03:29.706 --> 00:03:32.546 A:middle
We can turn the labels
up, put them to the side,

00:03:32.796 --> 00:03:35.556 A:middle
make the icon smaller, and you
can fully customize the tool bar

00:03:35.666 --> 00:03:36.636 A:middle
to your hearts content.

00:03:36.846 --> 00:03:39.756 A:middle
And you can just do that like
you would in any other Mac app

00:03:40.206 --> 00:03:43.326 A:middle
by just come and click on the
tool bar and customize it.

00:03:43.516 --> 00:03:44.216 A:middle
It's really simple.

00:03:44.596 --> 00:03:46.376 A:middle
OK. Let's move on
to the activity

00:03:46.376 --> 00:03:48.836 A:middle
to your another brand new
thing as part of the tool bar.

00:03:49.196 --> 00:03:51.446 A:middle
I've already talked about
this in the previous session

00:03:51.446 --> 00:03:54.156 A:middle
but let me refresh you memory
or introduce it to people

00:03:54.156 --> 00:03:55.236 A:middle
who may not have been here.

00:03:56.016 --> 00:03:58.216 A:middle
To the left, you have
the first two items,

00:03:58.336 --> 00:04:00.976 A:middle
we'll give you information about
your resources on your page,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:01.186 --> 00:04:04.446 A:middle
the number of resources
and the aggregate size

00:04:04.446 --> 00:04:05.926 A:middle
for all those resources
put together.

00:04:05.926 --> 00:04:08.026 A:middle
And these are not
just informational.

00:04:08.056 --> 00:04:10.206 A:middle
You can just click on
those and jump straight

00:04:10.206 --> 00:04:12.846 A:middle
to the resources sidebar
and start digging into them

00:04:12.846 --> 00:04:13.876 A:middle
to find out more details.

00:04:15.406 --> 00:04:18.416 A:middle
Likewise, you can track
the low time of your page,

00:04:18.505 --> 00:04:21.315 A:middle
the time up to the load
events in a rolling counter

00:04:21.315 --> 00:04:24.136 A:middle
from the page below to the time
the load even fired and click

00:04:24.136 --> 00:04:26.556 A:middle
on that to jump to the
timeline and find out more

00:04:26.556 --> 00:04:29.256 A:middle
about your network load time.

00:04:30.206 --> 00:04:31.286 A:middle
And finally, to the right,

00:04:31.286 --> 00:04:33.526 A:middle
we have three icons
devoted to the console.

00:04:33.626 --> 00:04:36.926 A:middle
You can try plugs,
errors, and warnings,

00:04:37.486 --> 00:04:39.996 A:middle
and this obviously would take
you to the console by clicking

00:04:39.996 --> 00:04:42.146 A:middle
on them, and what's
even cooler is

00:04:42.146 --> 00:04:45.136 A:middle
that since we added filtering
support to the console

00:04:45.136 --> 00:04:48.246 A:middle
in Safari 7 and Web
Inspector, clicking on either

00:04:48.246 --> 00:04:51.136 A:middle
of those items will
take you to the console

00:04:51.136 --> 00:04:54.536 A:middle
and filter the content to match
where you just clicked on.

00:04:54.536 --> 00:04:56.196 A:middle
So for example if you
click on a warning,

00:04:56.416 --> 00:04:58.006 A:middle
you'll see only warnings
in the console.

00:04:58.006 --> 00:04:59.806 A:middle
If you click an error,
you'll see only errors.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:00.006 --> 00:05:02.046 A:middle
And of course you can
filter back to all messages

00:05:02.046 --> 00:05:03.456 A:middle
from the console very easily.

00:05:03.756 --> 00:05:06.416 A:middle
And the last item to
the right is something

00:05:06.416 --> 00:05:10.466 A:middle
that is actually specific to
when you're inspecting Safari

00:05:10.466 --> 00:05:14.286 A:middle
on the Mac because it's
controlling the docking mode

00:05:14.286 --> 00:05:15.216 A:middle
of Web Inspector.

00:05:15.426 --> 00:05:18.286 A:middle
Web Inspector can run in a
stand-alone window like this

00:05:18.586 --> 00:05:20.796 A:middle
or it can be docked to
the bottom of your page.

00:05:20.796 --> 00:05:22.166 A:middle
We've always supported this.

00:05:22.966 --> 00:05:25.726 A:middle
But something we heard
a lot of feature request

00:05:25.726 --> 00:05:29.896 A:middle
for is the addition of a mode
where the inspector is docked

00:05:30.016 --> 00:05:31.166 A:middle
to the side of the page.

00:05:31.196 --> 00:05:33.096 A:middle
So this is something
new in Safari 7.

00:05:33.396 --> 00:05:36.586 A:middle
You ask for it and
you've got it.

00:05:36.856 --> 00:05:41.676 A:middle
So, now let's move on to or the
real meat of our presentation.

00:05:42.236 --> 00:05:44.916 A:middle
And I wanted to show you
a lot of new features.

00:05:45.106 --> 00:05:47.916 A:middle
And to do that, I'll ask two
colleagues of mine to come up--

00:05:48.136 --> 00:05:50.356 A:middle
come up on stage and show
you some great demos,

00:05:50.356 --> 00:05:51.266 A:middle
really compelling.

00:05:51.586 --> 00:05:55.116 A:middle
They will put a lot of our new
features at work in three tasks.

00:05:55.286 --> 00:05:56.456 A:middle
And if you've been here before,

00:05:56.646 --> 00:05:58.236 A:middle
you'll be familiar
with those tasks.

00:05:58.516 --> 00:06:01.176 A:middle
The first one would be
inspection tweaking then we'll

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:01.176 --> 00:06:03.886 A:middle
go and take a look
at the performance

00:06:03.886 --> 00:06:05.076 A:middle
of our page and analyze it.

00:06:05.126 --> 00:06:07.526 A:middle
In this case, it will be
layout and rendering specific

00:06:07.926 --> 00:06:09.716 A:middle
and we'll finish with
some JavaScript debugging.

00:06:09.986 --> 00:06:12.846 A:middle
And again, this sounds like the
outline of the previous session

00:06:13.226 --> 00:06:16.066 A:middle
because we think these are core
tasks for you as developers

00:06:16.066 --> 00:06:18.816 A:middle
but the content in this
session is completely different

00:06:18.936 --> 00:06:20.476 A:middle
and we'll be looking
at different features.

00:06:21.696 --> 00:06:24.956 A:middle
So let's start by taking a
look at inspection tweaking.

00:06:25.666 --> 00:06:28.636 A:middle
And to me, inspection
tweaking is about experimenting

00:06:28.636 --> 00:06:29.676 A:middle
with the content of my page.

00:06:29.676 --> 00:06:32.286 A:middle
It's about experimenting with
the DOM structure, the HTML,

00:06:32.286 --> 00:06:33.766 A:middle
but I think most importantly,

00:06:34.056 --> 00:06:36.796 A:middle
it's about interacting
with the styles.

00:06:37.386 --> 00:06:41.666 A:middle
And the style is
really, to me, the bread

00:06:41.666 --> 00:06:42.676 A:middle
and butter of Web Inspector.

00:06:42.676 --> 00:06:44.066 A:middle
It's usually the first
thing I want to do

00:06:44.066 --> 00:06:46.806 A:middle
with Web Inspector is tweak
the appearance of my page

00:06:46.806 --> 00:06:48.536 A:middle
and make sure it's
pixel perfect,

00:06:48.536 --> 00:06:52.256 A:middle
matches the design I want to
achieve, and it's really kind

00:06:52.256 --> 00:06:53.896 A:middle
of the stable feature
of Web Inspector.

00:06:55.296 --> 00:06:58.646 A:middle
But that didn't let us rest
on our laurels and we want

00:06:58.646 --> 00:07:01.376 A:middle
to make sure that we had
the best experience possible

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:01.376 --> 00:07:04.146 A:middle
for styles editing and we have
a completely refreshed styles

00:07:04.146 --> 00:07:06.436 A:middle
sidebar in Web Inspector
in Safari 7.

00:07:07.396 --> 00:07:09.746 A:middle
So, we still support things
that we've always supporting.

00:07:10.136 --> 00:07:11.506 A:middle
We still has syntax
highlighting,

00:07:11.756 --> 00:07:13.626 A:middle
we still have great
auto completion

00:07:13.836 --> 00:07:16.026 A:middle
where we know exactly what
counts the CSS properties

00:07:16.026 --> 00:07:19.086 A:middle
supported by WebKit since
Web Inspector talks directly

00:07:19.086 --> 00:07:19.616 A:middle
to WebKit.

00:07:20.446 --> 00:07:23.076 A:middle
We got some awesome
great new features.

00:07:23.796 --> 00:07:26.936 A:middle
The first thing, and you'll
see that in great details

00:07:26.936 --> 00:07:29.656 A:middle
in the demos, is that you can
just start clicking anywhere

00:07:29.726 --> 00:07:32.296 A:middle
where you see CSS code
and just start typing.

00:07:32.616 --> 00:07:35.316 A:middle
And as you type, you have auto
completion, syntax highlighting,

00:07:35.566 --> 00:07:36.946 A:middle
and it just behaves just

00:07:36.946 --> 00:07:38.616 A:middle
like you would expect
a great text editor

00:07:38.616 --> 00:07:41.176 A:middle
to behave except now
you're in Web Inspector.

00:07:41.416 --> 00:07:44.726 A:middle
It's just a series of many
text editors one for each rule.

00:07:44.726 --> 00:07:45.806 A:middle
It's just so awesome.

00:07:46.886 --> 00:07:49.926 A:middle
And another thing that we
found was commonly used but not

00:07:49.926 --> 00:07:52.626 A:middle
as accessible as it should
be from the user interface

00:07:52.626 --> 00:07:55.696 A:middle
of our previous version is
the ability to add a new rule.

00:07:55.976 --> 00:07:57.386 A:middle
So we've made that a lot easier.

00:07:57.386 --> 00:07:59.136 A:middle
There's a big button
in the style sidebar,

00:07:59.136 --> 00:08:02.406 A:middle
you can't miss it, and what it--
and we've also made it better

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:02.406 --> 00:08:05.436 A:middle
such that when you press
that button, it will look

00:08:05.436 --> 00:08:07.286 A:middle
at the currently selected
element and it will try

00:08:07.286 --> 00:08:10.826 A:middle
to generate a CSS selector
for the new rule that is

00:08:10.826 --> 00:08:12.476 A:middle
as specific as it can.

00:08:12.546 --> 00:08:14.566 A:middle
So for example, if your
element as an idea on it,

00:08:14.806 --> 00:08:16.986 A:middle
we'll generate a rule
for that specific idea.

00:08:17.046 --> 00:08:18.266 A:middle
It's really, really useful.

00:08:19.146 --> 00:08:22.476 A:middle
And finally, at the top of the
styles sidebar, we added a way

00:08:22.476 --> 00:08:24.856 A:middle
for you to force
some pseudo-classes

00:08:25.126 --> 00:08:26.526 A:middle
to be applied to our element.

00:08:26.846 --> 00:08:29.146 A:middle
And one that I think is
tremendously useful is being

00:08:29.146 --> 00:08:32.916 A:middle
able to turn on the hover
pseudo-class which is something

00:08:33.106 --> 00:08:35.546 A:middle
that if you wanted to tweak the
hover style of your element,

00:08:35.546 --> 00:08:38.476 A:middle
you'd probably have to
go back through the page,

00:08:38.756 --> 00:08:40.706 A:middle
roll over the element
in question,

00:08:41.096 --> 00:08:43.416 A:middle
and then see what it
does and then go back

00:08:43.416 --> 00:08:46.636 A:middle
into the inspector changes,
roll over back and so forth.

00:08:46.636 --> 00:08:47.756 A:middle
It's just not very convenient.

00:08:47.966 --> 00:08:48.916 A:middle
We've made that a lot better.

00:08:48.916 --> 00:08:51.156 A:middle
And again, we'll see
that in demo right away.

00:08:51.866 --> 00:08:56.356 A:middle
Another thing that I think is
really cool about styles in CSS

00:08:56.356 --> 00:08:59.786 A:middle
and Web Inspector is that
we've made it so that style

00:08:59.786 --> 00:09:03.986 A:middle
that may look great in Web
Inspector was actually something

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:03.986 --> 00:09:06.206 A:middle
that came through
looking horrible before.

00:09:06.206 --> 00:09:07.856 A:middle
And the way we make
it look good is

00:09:07.856 --> 00:09:10.326 A:middle
that we support pretty
printing and this littler button

00:09:10.326 --> 00:09:13.416 A:middle
at the right and it's a button
you may not even have to use

00:09:13.416 --> 00:09:15.936 A:middle
in practice because we
automatically identify

00:09:15.936 --> 00:09:18.756 A:middle
when we download minified
CSS content like this

00:09:19.206 --> 00:09:24.306 A:middle
so that we can display it in
a much nicer way like that.

00:09:24.516 --> 00:09:27.266 A:middle
And so, to walk you through some
of those great new features,

00:09:27.266 --> 00:09:29.116 A:middle
I'd like to invite on
stage my colleague Brian

00:09:29.116 --> 00:09:32.326 A:middle
who will give you a great
demo of advanced styling

00:09:32.326 --> 00:09:35.086 A:middle
and experimentation
in a web page.

00:09:35.586 --> 00:09:39.416 A:middle
[ Applause ]

00:09:39.916 --> 00:09:40.856 A:middle
&gt;&gt; Thank you Antoine.

00:09:41.936 --> 00:09:42.456 A:middle
Check, check.

00:09:43.946 --> 00:09:46.156 A:middle
Good. So I'm actually
really excited

00:09:46.156 --> 00:09:47.056 A:middle
to show you these demos today

00:09:47.056 --> 00:09:49.556 A:middle
because Antoine spends
the entire day working

00:09:49.556 --> 00:09:51.536 A:middle
at web content, allow
these features go along

00:09:51.536 --> 00:09:53.266 A:middle
with my job a lot easier.

00:09:54.366 --> 00:09:56.386 A:middle
So to show you, let's
pop up in demos

00:09:56.386 --> 00:09:57.296 A:middle
that we've been working on.

00:09:57.756 --> 00:10:00.286 A:middle
As you can see, it's a
very simple photo gallery.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:01.056 --> 00:10:03.086 A:middle
I have pictures of
me and my very close,

00:10:03.086 --> 00:10:04.186 A:middle
very great looking friends.

00:10:05.226 --> 00:10:08.096 A:middle
And as I look at this
side, there's a few things

00:10:08.096 --> 00:10:09.796 A:middle
that I think I can improve
on that I didn't think

00:10:09.796 --> 00:10:10.846 A:middle
about when I was
actually building

00:10:10.846 --> 00:10:11.746 A:middle
and it in my text editor.

00:10:11.986 --> 00:10:13.436 A:middle
Friends and I think of that.

00:10:13.816 --> 00:10:16.096 A:middle
This header sits up to top
as I scroll through the page.

00:10:16.746 --> 00:10:18.036 A:middle
And also this feels very static.

00:10:18.036 --> 00:10:20.076 A:middle
I mean that there is a
cool little hover effect

00:10:20.076 --> 00:10:21.506 A:middle
as I now search of
these thumbnails.

00:10:22.476 --> 00:10:24.206 A:middle
So, let's focus first
on the header.

00:10:24.716 --> 00:10:27.016 A:middle
So to get started let's
open up the Web Inspector

00:10:27.076 --> 00:10:28.456 A:middle
and it causes the event session.

00:10:28.456 --> 00:10:31.026 A:middle
We're going to use the keyboard
command, Command-Option-I.

00:10:31.886 --> 00:10:33.556 A:middle
So this should look
familiar to you.

00:10:34.346 --> 00:10:35.306 A:middle
Now the first thing
I'm going to do

00:10:35.306 --> 00:10:37.636 A:middle
as I reminded you was I
want to fix the header.

00:10:38.006 --> 00:10:39.746 A:middle
So let's zoom in here
into the DOM sheet mode

00:10:39.816 --> 00:10:42.266 A:middle
and let's use the
arrow keys to drill

00:10:42.266 --> 00:10:44.946 A:middle
down into the document
and get our header.

00:10:45.866 --> 00:10:47.006 A:middle
But go over to the
right, you'll notice

00:10:47.006 --> 00:10:49.026 A:middle
that we have some
preexisting styles associated

00:10:49.026 --> 00:10:49.466 A:middle
with the header.

00:10:49.986 --> 00:10:51.026 A:middle
But I want to add a new one.

00:10:52.136 --> 00:10:54.826 A:middle
So let's zoom in closer and
see how we can use the styles

00:10:54.826 --> 00:10:55.376 A:middle
detail bar.

00:10:56.256 --> 00:10:58.706 A:middle
Now because it says a
free-form CSS editor,

00:10:58.956 --> 00:11:02.676 A:middle
I can click anywhere, press
Enter and start typing.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:03.486 --> 00:11:05.026 A:middle
So because you want to
just stick to the top,

00:11:05.026 --> 00:11:06.846 A:middle
we're going to adjust
the position property.

00:11:07.306 --> 00:11:07.846 A:middle
So let's start.

00:11:08.706 --> 00:11:09.926 A:middle
You'll notice the
autocomplete format.

00:11:11.056 --> 00:11:13.316 A:middle
Now, instead of guessing
what the value is

00:11:14.076 --> 00:11:16.896 A:middle
because this has WebKit under
a hood, I can press Escape

00:11:17.076 --> 00:11:18.896 A:middle
and so bring up all the
options available to me.

00:11:19.466 --> 00:11:20.606 A:middle
So, I can go through
it when I want.

00:11:20.606 --> 00:11:22.846 A:middle
And in this case, you
want to use WebKit sticky.

00:11:23.936 --> 00:11:25.486 A:middle
But there's something
you might have missed.

00:11:25.616 --> 00:11:27.376 A:middle
So I'm going to press
command Z to undo this

00:11:27.646 --> 00:11:28.676 A:middle
and I'm going to zoom out.

00:11:29.536 --> 00:11:31.466 A:middle
I want to scroll down to
the middle of the page

00:11:32.216 --> 00:11:33.986 A:middle
so that the header is invisible.

00:11:34.746 --> 00:11:36.976 A:middle
And now, watch what happens
when I click Escape again.

00:11:37.516 --> 00:11:48.296 A:middle
[ Pause ]

00:11:48.796 --> 00:11:49.476 A:middle
There you go.

00:11:50.036 --> 00:11:52.886 A:middle
So as soon I press Escape, it's
going to immediately apply the--

00:11:52.886 --> 00:11:55.356 A:middle
immediately apply the
change of value to the DOM.

00:11:55.696 --> 00:11:58.866 A:middle
So I can move through all these
options and quickly see how each

00:11:58.866 --> 00:12:00.236 A:middle
of this property is
going to fit the layout.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:00.726 --> 00:12:02.196 A:middle
So this is the a lot
better than going back

00:12:02.196 --> 00:12:03.076 A:middle
and forth reaching your editor.

00:12:03.376 --> 00:12:05.376 A:middle
So I can nearly get in-- I
can get immediate feedback

00:12:05.376 --> 00:12:06.576 A:middle
on what the changes
going to look like.

00:12:07.046 --> 00:12:09.686 A:middle
So in this case, I want
to use WebKit sticky,

00:12:10.206 --> 00:12:12.486 A:middle
press Enter to create the
change and we're done.

00:12:13.336 --> 00:12:16.016 A:middle
Something else, I want to
fix is I also have a footer

00:12:16.016 --> 00:12:17.556 A:middle
at the bottom of the page.

00:12:17.776 --> 00:12:20.066 A:middle
Now, I want the footer to have
the same style as the header,

00:12:20.306 --> 00:12:22.106 A:middle
so let's go back into
our style detail bar.

00:12:23.336 --> 00:12:24.906 A:middle
And you notice that I
have shared style which is

00:12:24.906 --> 00:12:25.926 A:middle
in my header and footer below.

00:12:25.926 --> 00:12:29.766 A:middle
So I'm going to go ahead and
cut this because I can do this

00:12:30.036 --> 00:12:33.816 A:middle
since it's free-form, click
anywhere, paste it in,

00:12:33.816 --> 00:12:35.526 A:middle
and let's zoom out
and take a look.

00:12:36.626 --> 00:12:38.526 A:middle
So now we had the footer stick
into the bottom of the page

00:12:38.526 --> 00:12:39.636 A:middle
and the headers stick
on to the top.

00:12:40.976 --> 00:12:42.246 A:middle
So it's looking much
better already.

00:12:43.896 --> 00:12:45.306 A:middle
The second thing I
want to do is I want

00:12:45.306 --> 00:12:47.676 A:middle
to have a nice hover effect when
I roll over one of the images.

00:12:47.866 --> 00:12:50.546 A:middle
So to do that, let's
flat one of the images.

00:12:51.076 --> 00:12:53.366 A:middle
And I want to inspect the image
element that's on the page.

00:12:53.366 --> 00:12:55.696 A:middle
So to do that, I can right
click on the image element

00:12:56.396 --> 00:12:58.126 A:middle
and choose the inspect
element option.

00:12:58.646 --> 00:13:00.896 A:middle
You'll see this fit in directly

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:00.986 --> 00:13:03.656 A:middle
into that note in
the content view.

00:13:04.866 --> 00:13:05.806 A:middle
Now, if we go over to the right,

00:13:05.806 --> 00:13:09.456 A:middle
we'll see we have some
associate styles to this image.

00:13:09.796 --> 00:13:13.236 A:middle
Now, when tweaking styles,
I like using detail bar.

00:13:13.686 --> 00:13:16.326 A:middle
But I like writing new styles
directly in the CSS file.

00:13:16.766 --> 00:13:18.936 A:middle
And I can get that easily
in Web Inspector by clicking

00:13:18.936 --> 00:13:19.756 A:middle
on this link to the right.

00:13:20.256 --> 00:13:25.756 A:middle
And this is going to be directly
to the area in the style sheet

00:13:25.756 --> 00:13:26.836 A:middle
that I actually find that style.

00:13:27.406 --> 00:13:29.226 A:middle
So now I can go ahead and then
I can start adding to this.

00:13:29.696 --> 00:13:32.226 A:middle
So just like one of text
editor, I can start typing,

00:13:32.756 --> 00:13:36.916 A:middle
just add a hover
effect for the image,

00:13:37.406 --> 00:13:40.886 A:middle
and notice as I type is
going to autocomplete

00:13:40.886 --> 00:13:42.256 A:middle
and also syntax highlight
for me.

00:13:42.866 --> 00:13:44.816 A:middle
So for this, let's add
a little zoom animation.

00:13:46.286 --> 00:13:49.346 A:middle
So, I added WebKit transform,
we're going to do scale,

00:13:49.676 --> 00:13:52.446 A:middle
and let's make it
three for 300 percent.

00:13:52.496 --> 00:13:55.426 A:middle
So as you roll over the images
to the left we can see that.

00:13:56.186 --> 00:13:57.306 A:middle
Let's go over there.

00:13:57.966 --> 00:13:59.126 A:middle
We can see that it's
starting to work.

00:13:59.126 --> 00:14:00.806 A:middle
But this is a little,
a little jumpy.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:01.076 --> 00:14:03.216 A:middle
So let's go back to our style
sheet and add a transition.

00:14:03.756 --> 00:14:06.726 A:middle
And notice the autocomplete
as well

00:14:06.726 --> 00:14:08.496 A:middle
and let's do it for
WebKit transform.

00:14:09.396 --> 00:14:12.616 A:middle
Let's take it 1.5 seconds
and let's make it nice

00:14:12.616 --> 00:14:16.526 A:middle
and smooth ease in our curve.

00:14:17.246 --> 00:14:18.886 A:middle
So you notice that
as I roll over this,

00:14:18.976 --> 00:14:21.376 A:middle
I get immediate feedback on the
changes that I made directly

00:14:21.466 --> 00:14:22.966 A:middle
in the style sheet resources.

00:14:24.056 --> 00:14:26.476 A:middle
But I think this could
be tweaked a little more

00:14:26.476 --> 00:14:28.316 A:middle
and it's really hard for
me to go back and forth

00:14:28.346 --> 00:14:30.786 A:middle
between the style sheet
and then rolling over.

00:14:31.176 --> 00:14:33.146 A:middle
I want a better way
to build with a subtly

00:14:33.146 --> 00:14:34.936 A:middle
and finest this animation.

00:14:35.206 --> 00:14:38.896 A:middle
So, let's go back to the
viewer where before we're able

00:14:38.896 --> 00:14:40.206 A:middle
to see the style details.

00:14:40.326 --> 00:14:41.656 A:middle
To do that, I'm going to
use the navigation bar

00:14:41.656 --> 00:14:43.476 A:middle
on the top here to go back.

00:14:44.496 --> 00:14:47.296 A:middle
And as you can see it brought us
to area where I work previously.

00:14:48.646 --> 00:14:52.056 A:middle
So now what I can do is I could
use a new hover pseudo-class

00:14:52.056 --> 00:14:52.626 A:middle
on the top.

00:14:53.326 --> 00:14:55.936 A:middle
And you notice that when I click
on this, the animation is going

00:14:55.936 --> 00:14:57.136 A:middle
to be applied to the
image that I select.

00:14:57.726 --> 00:14:59.516 A:middle
So I can click on and
off to see the effect

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.066 --> 00:15:02.986 A:middle
but even better I can now see
the hover styles that I added

00:15:02.986 --> 00:15:05.806 A:middle
in my resource directly
in the detail sidebar.

00:15:07.176 --> 00:15:09.946 A:middle
So now I can go ahead and tweak
this through where I want it.

00:15:10.956 --> 00:15:13.076 A:middle
So let's make it a little
faster, maybe a quarter

00:15:13.076 --> 00:15:15.576 A:middle
of a second, and
also, just the scale.

00:15:15.676 --> 00:15:18.456 A:middle
So let's go back,
that's a little too big,

00:15:18.456 --> 00:15:24.326 A:middle
a little too small to, more
point to, that looks just right.

00:15:24.836 --> 00:15:28.036 A:middle
Let's click off and take a look.

00:15:28.666 --> 00:15:32.216 A:middle
So it's looking a
lot better already.

00:15:33.366 --> 00:15:35.326 A:middle
Now, one thing I want to point
out to you is that the changes

00:15:35.326 --> 00:15:39.006 A:middle
that I made to the CSS
in the sidebar are going

00:15:39.346 --> 00:15:40.696 A:middle
to be reflected in
the source code.

00:15:40.696 --> 00:15:43.736 A:middle
So let's click through back
to our CSS file and notice

00:15:43.736 --> 00:15:46.046 A:middle
that these new properties,
the quarter of a second

00:15:46.046 --> 00:15:49.236 A:middle
and the scale, all
reflected in the CSS file.

00:15:50.116 --> 00:15:53.296 A:middle
So, this is looking pretty
good, but what do we do now?

00:15:54.196 --> 00:15:55.096 A:middle
How do we save this?

00:15:55.276 --> 00:15:57.346 A:middle
Typically, we have to go back
to our editor, copy the changes

00:15:57.346 --> 00:15:59.056 A:middle
that we made, and
then start over.

00:15:59.846 --> 00:16:02.896 A:middle
But now in Safari 7, I can
simply press Command S,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:04.366 --> 00:16:05.776 A:middle
save the file up to my disk.

00:16:06.256 --> 00:16:10.766 A:middle
And to show you that it works,
I'm going to refresh the page.

00:16:10.946 --> 00:16:14.996 A:middle
You can see that all things
I made have now been saved

00:16:15.136 --> 00:16:16.166 A:middle
and I'm ready to continue.

00:16:16.166 --> 00:16:17.986 A:middle
And viola, there you go.

00:16:18.466 --> 00:16:20.846 A:middle
And speaking of viola,
back to Antoine.

00:16:21.516 --> 00:16:27.066 A:middle
[ Applause ]

00:16:27.566 --> 00:16:28.306 A:middle
&gt;&gt; Thanks Brian.

00:16:29.956 --> 00:16:33.336 A:middle
So let's recap what Brian
just showed us on the stage.

00:16:34.236 --> 00:16:36.806 A:middle
Using the new styles
sidebar easier than ever

00:16:36.986 --> 00:16:38.766 A:middle
to make any changes
you want to your page.

00:16:38.766 --> 00:16:41.426 A:middle
We have the great new
free-form CSS editing,

00:16:41.716 --> 00:16:44.476 A:middle
syntax highlighting,
all of this instant,

00:16:44.886 --> 00:16:47.676 A:middle
any change you made just
gets reflected on you page,

00:16:47.966 --> 00:16:49.716 A:middle
and that's just really
amazing I think.

00:16:50.186 --> 00:16:52.566 A:middle
And adding the neurals
just easier than ever

00:16:52.596 --> 00:16:54.046 A:middle
with this big Neural button.

00:16:54.716 --> 00:16:57.526 A:middle
And what I think is extremely
compelling especially in a kind

00:16:57.576 --> 00:17:00.736 A:middle
of demo like this when we
want to tune the transition

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:00.966 --> 00:17:03.676 A:middle
and the transformer applied to
an element when it's hovered,

00:17:04.016 --> 00:17:07.486 A:middle
we can just control that so much
easier in a much easier manner

00:17:07.715 --> 00:17:11.256 A:middle
by just using the hover
checkbox in the pseudo-class bar

00:17:11.256 --> 00:17:12.616 A:middle
at the top of the
styles sidebar.

00:17:13.175 --> 00:17:20.076 A:middle
I think of a future that
might seem just so natural now

00:17:20.076 --> 00:17:24.116 A:middle
that you see it but if you
didn't have it, it would just be

00:17:24.116 --> 00:17:27.276 A:middle
so much more painful is your
ability to just save files

00:17:27.276 --> 00:17:29.956 A:middle
that you've been editing
locally so that it get taken

00:17:29.956 --> 00:17:32.096 A:middle
into account when you
reload, and more importantly,

00:17:32.346 --> 00:17:35.526 A:middle
they just apply directly
and you can just, you know,

00:17:35.526 --> 00:17:37.996 A:middle
those change are done, you
do it all in Web Inspector.

00:17:38.326 --> 00:17:42.066 A:middle
And so, by just pressing Command
S, you can save your file

00:17:42.066 --> 00:17:43.996 A:middle
and it's just save
right where it was

00:17:43.996 --> 00:17:46.716 A:middle
or it can even save a copy
somewhere else if you prefer.

00:17:46.716 --> 00:17:51.196 A:middle
So I think that really
is a good summary

00:17:51.196 --> 00:17:53.796 A:middle
of what Web Inspector
lets you do in terms

00:17:53.796 --> 00:17:56.576 A:middle
of CSS experimentation,
inspection and tweaking.

00:17:56.576 --> 00:18:00.686 A:middle
So now let's move on to the next
section, performance analysis.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:01.606 --> 00:18:04.486 A:middle
And we're going to focus
on layout and rendering.

00:18:05.456 --> 00:18:09.146 A:middle
And I think the greatest leap
forward ever made in a browser

00:18:09.146 --> 00:18:10.876 A:middle
for performance in
terms of layout

00:18:10.876 --> 00:18:14.926 A:middle
and rendering was something
that WebKit pioneered as soon

00:18:15.216 --> 00:18:19.696 A:middle
as early as iOS 2 in the
former hardware compositing

00:18:19.976 --> 00:18:21.926 A:middle
and the ability to
have composited layers

00:18:21.926 --> 00:18:22.976 A:middle
in your document.

00:18:25.116 --> 00:18:28.056 A:middle
So, let me take a step
back for a minute.

00:18:28.176 --> 00:18:29.796 A:middle
Let's get out of the
floor representation

00:18:29.936 --> 00:18:32.576 A:middle
and let's discuss briefly
what composited layers are.

00:18:33.096 --> 00:18:34.286 A:middle
You may not be familiar
with them.

00:18:35.666 --> 00:18:39.406 A:middle
Composite layers is a way
for your document instead

00:18:39.406 --> 00:18:43.446 A:middle
of being a flat surface in terms
of rendering to be a collection

00:18:43.446 --> 00:18:47.186 A:middle
of smaller layers stacked on top
of one another and composited

00:18:47.186 --> 00:18:50.116 A:middle
in a very efficient
way both in performance

00:18:50.116 --> 00:18:52.336 A:middle
and power consumption
by the GPU.

00:18:52.826 --> 00:18:56.066 A:middle
And so, let's take for
example a simple video player.

00:18:56.486 --> 00:18:59.436 A:middle
Imagine that a backdrop
image here is a live video

00:18:59.796 --> 00:19:01.356 A:middle
and we have controls
that we want

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:01.356 --> 00:19:03.216 A:middle
to customize on top
of our video.

00:19:03.946 --> 00:19:08.186 A:middle
So, to make sure that
video playback is a smooth

00:19:08.246 --> 00:19:11.446 A:middle
and power-efficient as possible
in Safari, both on the Mac

00:19:11.446 --> 00:19:14.676 A:middle
and on iOS, we're
making video elements

00:19:14.746 --> 00:19:17.786 A:middle
in WebKit always be hardware
accelerated and hosted

00:19:17.786 --> 00:19:18.766 A:middle
in a composited layer.

00:19:19.906 --> 00:19:23.406 A:middle
So our video is playing and
it's kind of on its own space

00:19:23.786 --> 00:19:25.376 A:middle
above the rest of the web page.

00:19:25.916 --> 00:19:28.316 A:middle
Now, let's imagine that
you hover over the video

00:19:28.516 --> 00:19:30.146 A:middle
and you want the
controls to appear.

00:19:30.306 --> 00:19:33.506 A:middle
So you're probably state a great
little WebKit transition on them

00:19:33.886 --> 00:19:36.566 A:middle
and make sure they start
appearing on top of the video.

00:19:37.036 --> 00:19:39.686 A:middle
So, as soon as something
is animated with opacity

00:19:39.686 --> 00:19:42.446 A:middle
or transform, WebKit will
automatically create a

00:19:42.446 --> 00:19:45.726 A:middle
composited layer for you so
that we have the best possible

00:19:45.726 --> 00:19:47.696 A:middle
performance as the
animation is performed.

00:19:47.846 --> 00:19:51.246 A:middle
But in the end results of that
video control hovering the--

00:19:51.246 --> 00:19:54.716 A:middle
being laid out over the
video, it means that we have

00:19:54.716 --> 00:19:57.276 A:middle
to create a layer for
that control as well.

00:19:57.576 --> 00:19:59.846 A:middle
Obviously, if you have
something displayed in a layer,

00:19:59.846 --> 00:20:02.516 A:middle
in this case are video, and
something else drawn on top

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:02.516 --> 00:20:04.856 A:middle
of it, that piece
of content laid

00:20:04.856 --> 00:20:07.726 A:middle
out over the video will
itself need a layer.

00:20:08.376 --> 00:20:10.476 A:middle
And what's kind of cool
about layer is not just--

00:20:10.476 --> 00:20:12.486 A:middle
it's not just about
animations and transforms.

00:20:12.836 --> 00:20:18.266 A:middle
It's also that when we have a
smaller logical piece of content

00:20:18.266 --> 00:20:21.606 A:middle
to render in this layer for
example or controls up here,

00:20:21.606 --> 00:20:24.386 A:middle
if we have to make a change
that requires a redraw,

00:20:24.386 --> 00:20:27.576 A:middle
for example pressing the button,
it might turns to button green

00:20:27.576 --> 00:20:29.986 A:middle
or something, then we
can make those changes

00:20:29.986 --> 00:20:33.646 A:middle
in a much small region and make
a much more efficient redraw

00:20:33.646 --> 00:20:35.376 A:middle
cycle in WebKit.

00:20:36.296 --> 00:20:38.686 A:middle
And so, I'm telling you
a lot of information here

00:20:38.686 --> 00:20:41.026 A:middle
and it might seem a little
bit more little abstract.

00:20:41.556 --> 00:20:44.166 A:middle
But there was a great session
on this topic last year.

00:20:44.166 --> 00:20:47.346 A:middle
It's called Optimizing
Web Content in UIWebViews

00:20:47.346 --> 00:20:49.646 A:middle
and Websites on iOS,
I really urge you

00:20:49.646 --> 00:20:50.576 A:middle
to look at that session.

00:20:50.576 --> 00:20:53.086 A:middle
It has so much detail
information about how layout

00:20:53.086 --> 00:20:54.526 A:middle
and rendering happens in WebKit.

00:20:54.526 --> 00:20:58.686 A:middle
Section 601, WWDC 2012, you can
just watch it from the iOS app

00:20:58.686 --> 00:21:00.486 A:middle
as soon as you exit this room.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:01.826 --> 00:21:03.816 A:middle
OK, so let's go back
to our presentation.

00:21:05.176 --> 00:21:08.626 A:middle
Composited layers, like
I said, they're created

00:21:08.626 --> 00:21:10.376 A:middle
and managed automatically
by WebKit.

00:21:10.376 --> 00:21:12.616 A:middle
It's a great optimization
made by WebKit

00:21:12.676 --> 00:21:13.996 A:middle
and it was such a breakthrough.

00:21:13.996 --> 00:21:16.786 A:middle
I don't even think of other
browsers are quite caught

00:21:16.786 --> 00:21:17.376 A:middle
up with this.

00:21:18.186 --> 00:21:21.326 A:middle
And they pose their
own kinds of challenges

00:21:21.606 --> 00:21:23.796 A:middle
as for you as a web developer.

00:21:24.506 --> 00:21:26.756 A:middle
Who think things in
layers are not for free?

00:21:26.896 --> 00:21:29.416 A:middle
In fact, almost anytime
you gain something

00:21:29.416 --> 00:21:33.256 A:middle
in performance is always an
associated cost often times

00:21:33.256 --> 00:21:33.826 A:middle
in memory.

00:21:34.126 --> 00:21:36.326 A:middle
And layers will be the same.

00:21:36.986 --> 00:21:39.716 A:middle
Something it gets drawn
into a layer requires memory

00:21:39.716 --> 00:21:41.166 A:middle
to match the content
of that layer.

00:21:41.676 --> 00:21:43.796 A:middle
So how do you find out when--

00:21:44.056 --> 00:21:46.266 A:middle
having things in layers
might be a problem?

00:21:46.746 --> 00:21:49.256 A:middle
Well, this is almost
impossible up to now.

00:21:49.686 --> 00:21:51.046 A:middle
We have a brand new sidebar

00:21:51.046 --> 00:21:53.046 A:middle
in Safari 7 called
the layer sidebar

00:21:53.326 --> 00:21:56.116 A:middle
and it provides you all the
detail information you need

00:21:56.116 --> 00:21:57.436 A:middle
about layers in your document.

00:21:57.496 --> 00:21:59.806 A:middle
So let's take a look at what
information is contained here.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:00.416 --> 00:22:02.896 A:middle
At the top, we have
any information

00:22:03.116 --> 00:22:04.736 A:middle
for a layer associated

00:22:04.736 --> 00:22:06.826 A:middle
to the currently selected
element in the DOM.

00:22:06.986 --> 00:22:09.786 A:middle
So, of course, you may not have
a layer for this element and in

00:22:09.786 --> 00:22:13.766 A:middle
that case that panel will be
empty at the top, that's fine.

00:22:14.556 --> 00:22:18.096 A:middle
And your elements might have
a lot of layers associated

00:22:18.096 --> 00:22:21.096 A:middle
to descendants-- descendant
nodes of that element.

00:22:21.096 --> 00:22:24.926 A:middle
So, we can just list all the
layers associated to any element

00:22:25.186 --> 00:22:27.386 A:middle
in that selected element
subtree right there

00:22:27.386 --> 00:22:28.506 A:middle
in the style sidebar panel.

00:22:28.886 --> 00:22:30.636 A:middle
And that gives you
a great overview

00:22:30.836 --> 00:22:32.786 A:middle
of what actually ends
up being in layers.

00:22:33.156 --> 00:22:36.046 A:middle
And for each of those things
you can track the number

00:22:36.046 --> 00:22:37.926 A:middle
of time those layers are painted

00:22:37.926 --> 00:22:39.726 A:middle
and the associated
memory for that layer.

00:22:40.066 --> 00:22:40.966 A:middle
And what's really cool is

00:22:40.966 --> 00:22:43.306 A:middle
that since we display this
information in the table,

00:22:43.526 --> 00:22:47.226 A:middle
you can sort by memory use
or by paints and keep track

00:22:47.226 --> 00:22:48.616 A:middle
of the things that
might be painting

00:22:48.986 --> 00:22:51.356 A:middle
or using too much
memory in real-time

00:22:51.606 --> 00:22:54.576 A:middle
as this list gets updated as
you interact with the web page.

00:22:55.366 --> 00:22:59.016 A:middle
And we summarize the layer
count as well as the memory

00:22:59.016 --> 00:23:00.106 A:middle
at the bottom of the panel.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:00.106 --> 00:23:02.496 A:middle
So you can just take
a look at that number

00:23:02.746 --> 00:23:05.626 A:middle
and see exactly how much
memory is consumed by layers

00:23:05.846 --> 00:23:07.006 A:middle
on your web page or in

00:23:07.006 --> 00:23:08.526 A:middle
that specific subtree
you're selecting.

00:23:10.206 --> 00:23:13.886 A:middle
OK, so, layers are--

00:23:13.886 --> 00:23:16.376 A:middle
can be associated to all
kinds of different content.

00:23:16.536 --> 00:23:19.506 A:middle
The most obvious one
may be an HTML element,

00:23:19.606 --> 00:23:22.416 A:middle
to which maybe a CSS
transform is applied.

00:23:23.226 --> 00:23:25.526 A:middle
But there are other kinds
of content in your web page

00:23:25.816 --> 00:23:27.326 A:middle
that you can't even
see in the DOM

00:23:27.546 --> 00:23:28.736 A:middle
that might still create a layer.

00:23:28.826 --> 00:23:31.546 A:middle
And one of those things
are pseudo-classes.

00:23:31.756 --> 00:23:35.996 A:middle
And you might have used
before ::after or ::before

00:23:36.256 --> 00:23:38.766 A:middle
or first letter first line,
those types of things.

00:23:39.386 --> 00:23:42.916 A:middle
And what this lets you do purely
in CSS is actually something

00:23:42.916 --> 00:23:44.846 A:middle
that we call generated content.

00:23:45.596 --> 00:23:48.756 A:middle
And for example, I love
to use an after rule

00:23:49.026 --> 00:23:52.156 A:middle
such that I can add and
overlay over an image

00:23:52.246 --> 00:23:57.056 A:middle
that might be semi-transparent
when the mouse is not

00:23:57.056 --> 00:23:59.846 A:middle
on the element and removes
itself when the mouse is over.

00:23:59.846 --> 00:24:02.376 A:middle
So I can create interesting
effect without having

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:02.376 --> 00:24:03.536 A:middle
to change the DOM structure.

00:24:04.036 --> 00:24:06.026 A:middle
But imagine that
this content and that

00:24:06.026 --> 00:24:09.316 A:middle
after selector is
actually composited itself.

00:24:09.316 --> 00:24:10.386 A:middle
Well, that creates a layer.

00:24:10.386 --> 00:24:14.176 A:middle
And you can identify it very
easily by looking for any layer

00:24:14.176 --> 00:24:16.086 A:middle
that has a P icon next to it.

00:24:16.376 --> 00:24:17.546 A:middle
P stands for pseudo-class.

00:24:18.336 --> 00:24:19.526 A:middle
And what about reflections?

00:24:19.936 --> 00:24:23.156 A:middle
Well, reflections themselves
do not require a layer

00:24:23.156 --> 00:24:23.966 A:middle
to be generated.

00:24:24.166 --> 00:24:27.476 A:middle
But imagine you're implying
a reflection to a video.

00:24:27.476 --> 00:24:29.136 A:middle
A video is always
hosting a layer.

00:24:29.466 --> 00:24:31.796 A:middle
So, in order to provide a
reflection for that video,

00:24:32.016 --> 00:24:33.936 A:middle
we need to create a layer
for that reflection.

00:24:34.326 --> 00:24:37.026 A:middle
And again, those things live
completely outside the DOM.

00:24:37.076 --> 00:24:38.956 A:middle
And if it weren't for
the layer sidebar panel,

00:24:39.076 --> 00:24:41.886 A:middle
there would be no way for you
to find out about those layers

00:24:41.886 --> 00:24:45.126 A:middle
and diagnose any
issue laid to them.

00:24:45.126 --> 00:24:48.426 A:middle
So what about jumping from a
layer to the actual element

00:24:48.466 --> 00:24:50.706 A:middle
that this layer is
associated with?

00:24:50.906 --> 00:24:53.016 A:middle
Well, we did something
that's just very intuitive.

00:24:53.016 --> 00:24:56.026 A:middle
You can just hover over
the layer in the sidebar

00:24:56.436 --> 00:24:59.036 A:middle
and a little Go To arrow will
pop up, you'll see them all

00:24:59.036 --> 00:25:00.576 A:middle
over the place in
Web Inspector to jump

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:00.576 --> 00:25:03.346 A:middle
to the associated content and
clicking on it will take you

00:25:03.616 --> 00:25:05.436 A:middle
to that element and
regulate in the DOM.

00:25:05.596 --> 00:25:07.596 A:middle
And then you can maybe change
the stuff for the element

00:25:07.866 --> 00:25:10.746 A:middle
or do whatever you want that
may change this behavior,

00:25:10.746 --> 00:25:12.506 A:middle
use less memory,
or what have you.

00:25:13.246 --> 00:25:16.846 A:middle
And the final thing that I think
is just incredible is that,

00:25:17.406 --> 00:25:20.106 A:middle
like I said,, WebKit has
its own set of reasons

00:25:20.146 --> 00:25:23.486 A:middle
and it does the best it
can to generate layers

00:25:23.486 --> 00:25:26.106 A:middle
when they're needed is not
something you have control

00:25:26.106 --> 00:25:28.766 A:middle
over directly is just a great
optimization by WebKit .

00:25:29.216 --> 00:25:31.666 A:middle
But the reason why something
might be composited can be

00:25:31.666 --> 00:25:32.536 A:middle
very obscure.

00:25:32.536 --> 00:25:35.026 A:middle
But what's great about
this sidebar panel is

00:25:35.026 --> 00:25:36.676 A:middle
that if you select
one of those layers,

00:25:37.136 --> 00:25:41.096 A:middle
it will show you right
away why we composited

00:25:41.096 --> 00:25:42.406 A:middle
that layer in WebKit.

00:25:42.746 --> 00:25:44.916 A:middle
So for example, here are
fairly obscure reason

00:25:44.916 --> 00:25:47.546 A:middle
that have probably would not
have worked out by myself.

00:25:47.916 --> 00:25:51.346 A:middle
The layer associated
to that element, well,

00:25:51.396 --> 00:25:54.606 A:middle
the element overlaps another
element that's being composited

00:25:54.606 --> 00:25:55.126 A:middle
in a layer.

00:25:55.376 --> 00:25:58.986 A:middle
And so, just like I explained in
the overview, because it's laid

00:25:58.986 --> 00:26:00.936 A:middle
out over another element
that's in a layer,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.976 --> 00:26:02.176 A:middle
it needs to be in its own layer.

00:26:02.416 --> 00:26:05.016 A:middle
How could I found that out if--
without that sidebar panel?

00:26:05.366 --> 00:26:07.386 A:middle
Well, this is exactly what
the layer sidebar is for.

00:26:07.766 --> 00:26:11.106 A:middle
And so to find out more about
the layer sidebar and more

00:26:11.106 --> 00:26:14.326 A:middle
about diagnosing and fixing
issues related to performance

00:26:14.326 --> 00:26:16.946 A:middle
of layout and rendering, I'd
like to invite on stage Andreas

00:26:16.946 --> 00:26:18.246 A:middle
to give us a great demo.

00:26:18.746 --> 00:26:24.976 A:middle
[ Applause ]

00:26:25.476 --> 00:26:26.236 A:middle
&gt;&gt; Thank you Antoine.

00:26:26.706 --> 00:26:28.986 A:middle
I'm going to ahead and
reopen the photo gallery

00:26:28.986 --> 00:26:30.306 A:middle
that Brian was just showing us.

00:26:30.766 --> 00:26:32.036 A:middle
And here we go.

00:26:32.766 --> 00:26:35.066 A:middle
So thanks to the latest
enhancements Brian has made.

00:26:35.336 --> 00:26:36.956 A:middle
This is really starting
to come together.

00:26:37.436 --> 00:26:39.346 A:middle
But we got to remember
this is a website.

00:26:39.756 --> 00:26:42.066 A:middle
So not only it's going to be
viewed on different screen sizes

00:26:42.066 --> 00:26:45.036 A:middle
like an iPhone or an iPad
but in case of the desktop,

00:26:45.286 --> 00:26:47.256 A:middle
a user might even choose
to resize the window.

00:26:47.936 --> 00:26:50.726 A:middle
So for that and in order to
have a great user experience,

00:26:50.876 --> 00:26:53.466 A:middle
we want to had and build
this photo gallery using a

00:26:53.466 --> 00:26:54.286 A:middle
responsive layout.

00:26:54.536 --> 00:26:55.496 A:middle
So let's take a look at that.

00:26:56.626 --> 00:26:59.796 A:middle
As you'll notice, as I resized
the window, the layout does

00:26:59.796 --> 00:27:01.626 A:middle
in fact adjust to
the new screen size.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:02.326 --> 00:27:03.826 A:middle
But in terms of performance,

00:27:03.916 --> 00:27:05.596 A:middle
things are not looking
really good.

00:27:05.956 --> 00:27:07.706 A:middle
Things are laggy and in fact,

00:27:07.706 --> 00:27:09.356 A:middle
I wouldn't say this is
a responsive layout.

00:27:10.086 --> 00:27:11.686 A:middle
So let's go ahead
and try to fix that.

00:27:12.206 --> 00:27:14.046 A:middle
But instead of me trying to
get what's wrong with that,

00:27:14.046 --> 00:27:16.156 A:middle
I'm going to go ahead
and open the inspector.

00:27:17.096 --> 00:27:19.736 A:middle
I'm going to go and jump
right into the timelines view.

00:27:20.736 --> 00:27:22.596 A:middle
For those of you who are
not familiar with timelines,

00:27:22.986 --> 00:27:25.036 A:middle
they allow you to record
any activity that's going

00:27:25.036 --> 00:27:27.756 A:middle
on while you're interacting
or loading your website.

00:27:28.426 --> 00:27:31.536 A:middle
These include stuff like network
requests, layout and rendering,

00:27:32.026 --> 00:27:33.116 A:middle
and JavaScript events.

00:27:33.576 --> 00:27:35.746 A:middle
So let's go ahead and start
recording a new timeline

00:27:35.746 --> 00:27:37.266 A:middle
by clicking on this
button right here.

00:27:37.526 --> 00:27:41.656 A:middle
Now that we're recording, let's
switch back to our photo gallery

00:27:42.126 --> 00:27:43.176 A:middle
and resize the window.

00:27:43.836 --> 00:27:46.116 A:middle
So notice, immediately
as I start interacting

00:27:46.116 --> 00:27:48.406 A:middle
with my website,
the time is updated

00:27:48.406 --> 00:27:49.836 A:middle
with any activity
that was recorded.

00:27:50.396 --> 00:27:51.066 A:middle
Let's go ahead.

00:27:51.066 --> 00:27:52.826 A:middle
I can continue interacting
with this page

00:27:53.086 --> 00:27:54.656 A:middle
but I think I got
enough data for now.

00:27:54.756 --> 00:27:56.386 A:middle
So let's go ahead
and stop recording.

00:27:57.276 --> 00:27:58.956 A:middle
Again, using the same
button I use to start,

00:27:58.956 --> 00:28:01.696 A:middle
I'm going to go ahead and
hide the timeline side panel

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:01.696 --> 00:28:03.046 A:middle
so we get a little
bit more room here.

00:28:03.046 --> 00:28:06.376 A:middle
And you immediately notice
on the top part of this view,

00:28:06.756 --> 00:28:09.516 A:middle
we get a graphical
timeline and really easy

00:28:09.516 --> 00:28:11.836 A:middle
to quickly visualize
everything that was going on.

00:28:12.216 --> 00:28:17.156 A:middle
In the bottom part, we get
additional details of all

00:28:17.156 --> 00:28:19.966 A:middle
of the events that were
recorded for-- while we are--

00:28:19.966 --> 00:28:21.936 A:middle
of all the events
that are recorded.

00:28:22.126 --> 00:28:24.626 A:middle
These include stuff like
start time, duration,

00:28:24.626 --> 00:28:26.576 A:middle
and in case your
event was triggered

00:28:26.576 --> 00:28:30.046 A:middle
by your JavaScript code, you
even get the function name,

00:28:30.326 --> 00:28:32.446 A:middle
the line number, and if
I hover over one of this,

00:28:32.816 --> 00:28:34.726 A:middle
we even get the entire
call stack that led

00:28:34.726 --> 00:28:35.806 A:middle
to this event being trigger.

00:28:36.166 --> 00:28:38.336 A:middle
Isn't this really cool?

00:28:38.876 --> 00:28:41.886 A:middle
[ Applause ]

00:28:42.386 --> 00:28:44.506 A:middle
So, let's go ahead and take
a look at the different types

00:28:44.506 --> 00:28:45.666 A:middle
of events was going on.

00:28:45.666 --> 00:28:48.806 A:middle
And something that
immediately pops out to me is

00:28:48.806 --> 00:28:52.066 A:middle
that the single function,
this called layout photos,

00:28:52.496 --> 00:28:54.636 A:middle
that seems to be trigging
most of these events.

00:28:54.966 --> 00:28:58.416 A:middle
When I see some stuff like
layout here, some style going

00:28:58.416 --> 00:29:01.326 A:middle
on against some layout, but
let's go ahead and focus

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:01.326 --> 00:29:02.716 A:middle
on what's going on with styles.

00:29:02.716 --> 00:29:05.086 A:middle
And to do this, I'm going
to go ahead and at the top

00:29:05.086 --> 00:29:07.906 A:middle
of this table, we got
these awesome controls here

00:29:07.906 --> 00:29:10.256 A:middle
that allow us to filter
the data in this table.

00:29:10.676 --> 00:29:12.826 A:middle
So I'm going to ahead and
select invalidate styles.

00:29:13.656 --> 00:29:15.796 A:middle
While holding the command
key, I'm also going to click

00:29:15.796 --> 00:29:16.776 A:middle
on Recalculate Styles.

00:29:16.776 --> 00:29:20.116 A:middle
So as you can see, the
table immediately updated

00:29:20.116 --> 00:29:22.056 A:middle
to just show me those
two types of events.

00:29:23.086 --> 00:29:24.666 A:middle
So again, let's browse
through data

00:29:24.756 --> 00:29:27.266 A:middle
and we can immediately
detect a pattern here.

00:29:27.576 --> 00:29:29.866 A:middle
And it seems that the
layout photos is constantly

00:29:30.226 --> 00:29:32.806 A:middle
invalidating styles and
recalculating styles.

00:29:32.806 --> 00:29:35.456 A:middle
And this seems to be
happening over and over again.

00:29:35.816 --> 00:29:39.096 A:middle
And as I mention before, we can
even see the exact line number

00:29:39.096 --> 00:29:40.086 A:middle
that this is happening on.

00:29:40.516 --> 00:29:43.006 A:middle
In this case, it seems that
line 58 is triggering the

00:29:43.006 --> 00:29:46.636 A:middle
recalculation, and line 64 is
triggering the invalidation.

00:29:46.876 --> 00:29:49.226 A:middle
So let's go ahead and click
on the layout photo right here

00:29:49.406 --> 00:29:50.576 A:middle
to jump right into the code.

00:29:51.726 --> 00:29:56.236 A:middle
And here we go, let me zoom in.

00:29:56.426 --> 00:30:00.336 A:middle
So you'll notice, line 58,
let's go ahead, and it seems

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:00.336 --> 00:30:01.616 A:middle
that I'm inquiring
an offsetWidth.

00:30:02.096 --> 00:30:04.586 A:middle
So this is clearly what's
triggering the recalculation.

00:30:05.346 --> 00:30:08.206 A:middle
And if we jump back to line
64, if you remember correctly,

00:30:08.786 --> 00:30:10.186 A:middle
in here we're setting a style.

00:30:10.526 --> 00:30:13.086 A:middle
So when we set a style,
the browser has to go ahead

00:30:13.086 --> 00:30:14.756 A:middle
and invalidate any cache styles.

00:30:14.756 --> 00:30:16.276 A:middle
So if you look closely,

00:30:16.276 --> 00:30:18.096 A:middle
all of this is happening
inside of for loop.

00:30:18.376 --> 00:30:20.326 A:middle
So the next time I
go into this for loop

00:30:20.526 --> 00:30:23.346 A:middle
and hit this offsetWidth, the
browser is going to have to,

00:30:23.346 --> 00:30:24.936 A:middle
again, recalculate the side.

00:30:25.556 --> 00:30:27.976 A:middle
So clearly, this is what
we were seeing in that--

00:30:27.976 --> 00:30:31.186 A:middle
in the timelines where over and
over we're calculating styles

00:30:31.186 --> 00:30:32.366 A:middle
and invalidation styles.

00:30:33.786 --> 00:30:36.186 A:middle
But before I go ahead
and make any changes,

00:30:36.666 --> 00:30:38.956 A:middle
wouldn't it be great if we
had a concrete measurement

00:30:39.476 --> 00:30:42.126 A:middle
that could tell me how long this
function is taking to execute?

00:30:42.716 --> 00:30:44.466 A:middle
That way, when we
do make changes,

00:30:44.956 --> 00:30:46.696 A:middle
we can have an actual metric

00:30:46.696 --> 00:30:49.526 A:middle
to validate whether those
changes improve things

00:30:49.736 --> 00:30:50.646 A:middle
or made things worse.

00:30:51.586 --> 00:30:52.506 A:middle
So let's go ahead.

00:30:52.506 --> 00:30:55.046 A:middle
And I'm going to use a really
handy Console API I use all

00:30:55.046 --> 00:30:55.616 A:middle
the time.

00:30:56.396 --> 00:30:58.976 A:middle
And what I'm going to do is
I'm going to type console time

00:30:58.976 --> 00:31:00.246 A:middle
at the beginning
of the function.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:00.816 --> 00:31:05.306 A:middle
I'm going to put
a console timeEnd

00:31:05.306 --> 00:31:08.016 A:middle
at the end of the function.

00:31:08.016 --> 00:31:11.156 A:middle
As you might have guess,

00:31:11.326 --> 00:31:13.906 A:middle
what these APIs do is
they measure the time

00:31:13.906 --> 00:31:16.466 A:middle
between the two calls and
print that out to a console.

00:31:17.226 --> 00:31:19.366 A:middle
But something you might
have notice is I didn't have

00:31:19.366 --> 00:31:22.676 A:middle
to go back to my text editor,
find the corresponding file,

00:31:23.016 --> 00:31:25.536 A:middle
find this layout photo
function and edit my code there.

00:31:25.936 --> 00:31:28.246 A:middle
I did all of this directly
from the web inspector.

00:31:28.656 --> 00:31:31.026 A:middle
And just like with
CSS files when working

00:31:31.026 --> 00:31:34.286 A:middle
up the local file system,
not only can I edit the files

00:31:34.286 --> 00:31:36.656 A:middle
in line but I can go
ahead and Command S

00:31:36.656 --> 00:31:39.186 A:middle
and save the file back
to my file system.

00:31:39.276 --> 00:31:41.136 A:middle
I think this is a
really awesome feature.

00:31:41.136 --> 00:31:44.076 A:middle
So let's go ahead
and save our file.

00:31:44.076 --> 00:31:46.176 A:middle
And I know I'm going to
print some to the console

00:31:46.176 --> 00:31:47.566 A:middle
so let's go ahead and switch

00:31:47.566 --> 00:31:50.906 A:middle
to the console using the keyword
Shortcut Option Command C,

00:31:52.076 --> 00:31:55.396 A:middle
that's the way in here, and
let's go ahead and reload

00:31:55.396 --> 00:31:56.516 A:middle
that page using Command R.

00:31:57.086 --> 00:32:01.656 A:middle
As you'll notice, we immediately
get that timing function

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:01.656 --> 00:32:04.826 A:middle
so we can see that the
layouts photos is taking

00:32:04.826 --> 00:32:06.936 A:middle
around 210 milliseconds
to execute.

00:32:08.166 --> 00:32:10.976 A:middle
This might not seem like a
lot to some people but we got

00:32:10.976 --> 00:32:12.316 A:middle
to remember we should always try

00:32:12.316 --> 00:32:14.476 A:middle
to minimize our JavaScript
execution time.

00:32:14.736 --> 00:32:17.206 A:middle
And in fact, I'm pretty
confident we can bring this

00:32:17.206 --> 00:32:17.716 A:middle
number down.

00:32:17.716 --> 00:32:20.056 A:middle
And let's go back
and jump to our code,

00:32:20.056 --> 00:32:22.356 A:middle
and to do this I'm going to use
the navigation bars up here.

00:32:22.356 --> 00:32:23.946 A:middle
[ Inaudible ]

00:32:23.946 --> 00:32:26.816 A:middle
Let me use a console.

00:32:27.396 --> 00:32:32.556 A:middle
So here we're back to our
code and let's go ahead

00:32:32.556 --> 00:32:33.676 A:middle
and analyze what's going on.

00:32:34.006 --> 00:32:37.046 A:middle
If you remember, we're
querying the offsetWidth

00:32:37.046 --> 00:32:40.356 A:middle
and if you look closely,
we're using the offsetWidth

00:32:40.946 --> 00:32:44.196 A:middle
to determine how many
photos we can put fair well.

00:32:44.196 --> 00:32:46.056 A:middle
And base on that, we go ahead

00:32:46.456 --> 00:32:48.246 A:middle
and determine the photo
width and the height.

00:32:48.716 --> 00:32:52.546 A:middle
But if you look closely, we're
not relying on any photo's data

00:32:52.616 --> 00:32:54.426 A:middle
to do these calculations.

00:32:54.746 --> 00:32:56.826 A:middle
In fact, these are
pretty static calculations

00:32:57.206 --> 00:32:59.566 A:middle
that can just go ahead and
move out of the for loop.

00:32:59.616 --> 00:33:01.966 A:middle
So I'm going to just do that.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:03.826 --> 00:33:08.316 A:middle
And by doing this,
we're no longer going

00:33:08.316 --> 00:33:10.576 A:middle
to recalculate style
on every loop.

00:33:11.026 --> 00:33:13.696 A:middle
So let's go ahead
and save this, again,

00:33:13.696 --> 00:33:15.796 A:middle
Command S, reload our page.

00:33:15.796 --> 00:33:17.916 A:middle
But before I do that, switch
back to the console again,

00:33:18.406 --> 00:33:20.906 A:middle
zoom in, and let's
reload our page.

00:33:21.456 --> 00:33:23.446 A:middle
And there you have it.

00:33:23.716 --> 00:33:27.116 A:middle
That minor change actually
made a huge improvement,

00:33:27.386 --> 00:33:29.226 A:middle
not only that we make
that optimization

00:33:29.226 --> 00:33:32.536 A:middle
but we have a concrete data
that can help us validate this.

00:33:32.656 --> 00:33:36.446 A:middle
So we went from 200 milliseconds
to just under 10 milliseconds.

00:33:36.626 --> 00:33:37.536 A:middle
So that's good.

00:33:37.796 --> 00:33:39.466 A:middle
But let's go back
to the resizing,

00:33:39.466 --> 00:33:40.856 A:middle
but that's what we're
trying to solve here.

00:33:41.096 --> 00:33:42.686 A:middle
I'm going to zoom
out a little bit,

00:33:42.686 --> 00:33:44.146 A:middle
let's go to the Inspector
for now.

00:33:44.146 --> 00:33:48.056 A:middle
And I'm going to resize the
window and see what happens.

00:33:48.396 --> 00:33:50.966 A:middle
As you'll notice, things
might be a little bit better

00:33:51.346 --> 00:33:52.696 A:middle
but they're still
not [inaudible].

00:33:53.556 --> 00:33:56.126 A:middle
So let's go ahead and see what
other optimizations we can make.

00:33:57.036 --> 00:33:59.936 A:middle
And as you know, we're working
with a lot of images here,

00:33:59.936 --> 00:34:01.976 A:middle
when we're doing
some CSS transforms.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:02.086 --> 00:34:04.956 A:middle
And in fact, to do all
the layouts of the photos,

00:34:05.396 --> 00:34:07.036 A:middle
we're using CSS transforms
as well.

00:34:07.606 --> 00:34:11.096 A:middle
So I'm a little bit concern
about in terms of memory

00:34:11.096 --> 00:34:14.216 A:middle
and in case the browser might
be creating in the layers.

00:34:14.216 --> 00:34:17.146 A:middle
So I'm going to go ahead and
make use of a brand new feature

00:34:17.146 --> 00:34:20.626 A:middle
in Safari 7 that allows me
to quickly visualize all

00:34:20.626 --> 00:34:21.755 A:middle
of the layers in my page.

00:34:22.386 --> 00:34:26.775 A:middle
To do this, let me bring
up the Inspector again.

00:34:26.916 --> 00:34:28.946 A:middle
And let's switch over
to the Resources tab.

00:34:28.946 --> 00:34:32.216 A:middle
And in the DOM tree,
there's a brand new button

00:34:32.335 --> 00:34:33.396 A:middle
in the upper right corner.

00:34:34.416 --> 00:34:35.795 A:middle
But instead of me
explaining what it does,

00:34:35.795 --> 00:34:38.516 A:middle
let me zoom out and
show you exactly.

00:34:38.676 --> 00:34:42.275 A:middle
So I'm going to toggle it and
I know it's a little bit hard

00:34:42.275 --> 00:34:43.326 A:middle
to see so let me zoom in.

00:34:44.136 --> 00:34:46.616 A:middle
What this does, it actually
drag borders around all

00:34:46.616 --> 00:34:48.376 A:middle
of the layers within your page.

00:34:49.045 --> 00:34:50.466 A:middle
So this is a really cool way

00:34:50.466 --> 00:34:52.246 A:middle
that you can quickly
visualize all

00:34:52.246 --> 00:34:54.376 A:middle
of the layers within
your document.

00:34:54.576 --> 00:34:56.246 A:middle
In this case, if
you look closely,

00:34:56.616 --> 00:34:57.876 A:middle
it seems that we're generating,

00:34:57.986 --> 00:35:01.136 A:middle
there are being layers
composited for each photos.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:01.986 --> 00:35:03.376 A:middle
This is sort of unexpected.

00:35:03.476 --> 00:35:06.066 A:middle
At least it wasn't
my intention, sorry.

00:35:07.006 --> 00:35:10.166 A:middle
So, before I go ahead
and make any changes,

00:35:10.456 --> 00:35:11.966 A:middle
I think it would be
great if we can go

00:35:11.966 --> 00:35:14.016 A:middle
and analyze how many
layers we have

00:35:14.016 --> 00:35:15.666 A:middle
and why the things
are being composited.

00:35:16.096 --> 00:35:17.766 A:middle
So for that, I'm going
to go ahead and open

00:35:17.766 --> 00:35:19.036 A:middle
up the layer side panel,

00:35:19.376 --> 00:35:21.066 A:middle
this brand new layer
side panel over here.

00:35:21.136 --> 00:35:24.086 A:middle
And we can immediately
see the list of all

00:35:24.086 --> 00:35:26.696 A:middle
of the layers for this document.

00:35:26.696 --> 00:35:29.296 A:middle
And as expected, we can see
all the photo wrappers are

00:35:29.296 --> 00:35:30.126 A:middle
being composited.

00:35:30.656 --> 00:35:31.926 A:middle
We go all the way to the bottom.

00:35:32.806 --> 00:35:35.456 A:middle
We can even see then the
exact layer kind of layers.

00:35:35.456 --> 00:35:36.716 A:middle
In this case we have Nighty

00:35:36.716 --> 00:35:39.426 A:middle
and they're consuming a
total of 11 megabytes.

00:35:40.006 --> 00:35:42.286 A:middle
This might not seem like a
lot but we got to remember

00:35:42.286 --> 00:35:44.696 A:middle
that in mobile devices,
memory is restricted.

00:35:44.946 --> 00:35:46.466 A:middle
So we should always
try to memorize--

00:35:47.306 --> 00:35:48.776 A:middle
minimize our memory footprint.

00:35:49.146 --> 00:35:52.876 A:middle
So, now that we've seen how many
layers we have, let's go ahead

00:35:52.876 --> 00:35:56.536 A:middle
and see exactly why layers are
being composited for each photo.

00:35:56.846 --> 00:35:58.616 A:middle
So to do that, I'm going
to go ahead and select one

00:35:58.616 --> 00:35:59.796 A:middle
of the photo wrappers here.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:00.496 --> 00:36:03.756 A:middle
You immediately see that the
reason this is being composited

00:36:03.756 --> 00:36:06.116 A:middle
is because the element
has a 3D transform.

00:36:06.116 --> 00:36:08.306 A:middle
So now that I know why this is,

00:36:08.606 --> 00:36:09.926 A:middle
let's go back to
our photo gallery.

00:36:09.926 --> 00:36:13.736 A:middle
And as I mentioned before,
we think 3D transforms

00:36:13.736 --> 00:36:16.196 A:middle
or transforms to position
all of these photos

00:36:16.196 --> 00:36:18.996 A:middle
because we have a feature
of the photo gallery

00:36:18.996 --> 00:36:20.366 A:middle
that we haven't shown you yet.

00:36:20.976 --> 00:36:23.196 A:middle
So you might have noticed that
in the upper right corner,

00:36:24.036 --> 00:36:25.086 A:middle
we have a shuffle button.

00:36:25.376 --> 00:36:27.386 A:middle
And instead of me explaining
what it does, let's go ahead

00:36:27.386 --> 00:36:29.086 A:middle
and click it and see,
see them in action.

00:36:30.526 --> 00:36:32.756 A:middle
As you'll notice, as
I click this button,

00:36:33.726 --> 00:36:36.416 A:middle
the layout of the photos is
rearranged and they are animated

00:36:36.416 --> 00:36:37.326 A:middle
to their new position.

00:36:37.496 --> 00:36:40.016 A:middle
So this is why we're
using CSS transforms.

00:36:40.436 --> 00:36:42.686 A:middle
But you'll notice we're
not doing anything fancy.

00:36:43.476 --> 00:36:45.126 A:middle
I don't know what's going
on with the performance here

00:36:45.126 --> 00:36:49.036 A:middle
but we're not doing anything
pretty of anything fancy.

00:36:49.106 --> 00:36:51.456 A:middle
So I think it's safe
to go ahead and remove

00:36:51.456 --> 00:36:53.716 A:middle
that 3D transformation
and convert them

00:36:53.716 --> 00:36:55.226 A:middle
to just use 2D transforms.

00:36:55.676 --> 00:36:57.936 A:middle
So I wrote this code and I
know exactly what file need

00:36:57.936 --> 00:36:58.356 A:middle
to change.

00:36:58.356 --> 00:37:00.076 A:middle
So I'm going to go
ahead in the Resources,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:00.076 --> 00:37:03.406 A:middle
Open photo.js, and here we go.

00:37:03.406 --> 00:37:06.876 A:middle
This is the line of code that's
setting up that 3D transform,

00:37:06.876 --> 00:37:08.456 A:middle
so I'm going to go
ahead and convert this

00:37:08.456 --> 00:37:09.706 A:middle
to a regular translate.

00:37:11.456 --> 00:37:14.926 A:middle
And again, I'm editing right in
the Web Inspector so Command S

00:37:14.926 --> 00:37:19.496 A:middle
to save, save this file,
and let's reload the page.

00:37:19.636 --> 00:37:24.136 A:middle
And you'll notice something
you can immediately see is

00:37:24.136 --> 00:37:27.306 A:middle
that there are no longer borders
being drawn around each photo.

00:37:27.606 --> 00:37:28.966 A:middle
So this means we did something.

00:37:29.326 --> 00:37:32.276 A:middle
And layers are no longer being
composited for each photo.

00:37:32.506 --> 00:37:34.126 A:middle
But just to be absolutely sure,

00:37:34.126 --> 00:37:36.786 A:middle
let's reopen this layer
side panel once again.

00:37:38.276 --> 00:37:41.576 A:middle
And sure enough as
expected, we went down from,

00:37:41.576 --> 00:37:44.536 A:middle
I think it was 90 layers to just
two layers and let's see how

00:37:44.536 --> 00:37:45.506 A:middle
that deal with memory.

00:37:46.646 --> 00:37:49.106 A:middle
And we went down from, I
think, it was 13 megabytes

00:37:49.106 --> 00:37:50.366 A:middle
to just 300 kilobytes.

00:37:50.366 --> 00:37:51.056 A:middle
So this is great.

00:37:51.876 --> 00:37:55.226 A:middle
But before I go and see how
that affected the resizing,

00:37:55.426 --> 00:37:58.006 A:middle
let's make sure we didn't
break any system functionality.

00:37:58.376 --> 00:38:00.246 A:middle
Let's go ahead and
try to shuffle again

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.786 --> 00:38:03.156 A:middle
and make sure that's still
running as smooth as before.

00:38:03.156 --> 00:38:06.326 A:middle
So I'm going to click
on it, and you'll notice

00:38:06.386 --> 00:38:07.906 A:middle
that things are still
looking pretty good.

00:38:07.906 --> 00:38:10.806 A:middle
And I know it's a
little bit fast here,

00:38:10.806 --> 00:38:13.846 A:middle
but if you notice closely,
as an animation is happening,

00:38:14.436 --> 00:38:16.796 A:middle
WebKit is smart enough to
composite layers for all

00:38:16.796 --> 00:38:18.926 A:middle
of these elements so
that animation still runs

00:38:18.926 --> 00:38:19.826 A:middle
as smooth as before.

00:38:20.226 --> 00:38:20.876 A:middle
So this is good.

00:38:21.586 --> 00:38:24.846 A:middle
So, let's go ahead
and resize the page

00:38:24.846 --> 00:38:27.146 A:middle
and hopefully this would
fix our performance stages.

00:38:27.826 --> 00:38:30.006 A:middle
So I'm going to go ahead
and resize the page.

00:38:30.006 --> 00:38:32.276 A:middle
Notice, things are
immediately better.

00:38:32.546 --> 00:38:34.446 A:middle
In fact, I would
say that this is now

00:38:34.446 --> 00:38:36.136 A:middle
in fact a responsive layout.

00:38:36.556 --> 00:38:38.356 A:middle
So with that, I'm going to
hand it back to Antoine.

00:38:38.596 --> 00:38:38.976 A:middle
Thank you.

00:38:39.516 --> 00:38:44.536 A:middle
[ Applause ]

00:38:45.036 --> 00:38:45.956 A:middle
&gt;&gt; Thanks Andreas.

00:38:46.396 --> 00:38:48.856 A:middle
I think this is the coolest
demo we've made today

00:38:49.406 --> 00:38:52.646 A:middle
because it puts together so many
of the new features we've had

00:38:52.646 --> 00:38:55.406 A:middle
in Web Inspector and
let's us do things

00:38:55.406 --> 00:38:56.936 A:middle
that would be virtually
impossible

00:38:56.936 --> 00:38:58.746 A:middle
to make with any other tool.

00:38:58.746 --> 00:39:00.146 A:middle
Web Inspector is the only tool

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:00.146 --> 00:39:04.586 A:middle
that let's you check
performance-related issues

00:39:04.686 --> 00:39:08.816 A:middle
that might be originated
due to the use of layers.

00:39:09.566 --> 00:39:11.546 A:middle
So let's recap what we just saw.

00:39:11.996 --> 00:39:14.196 A:middle
The great new layer
sidebar something completely

00:39:14.196 --> 00:39:18.236 A:middle
in Safari 7 let's us inspect at
a glance list of layers we have

00:39:18.516 --> 00:39:21.046 A:middle
and we can even use the new
composited borders button

00:39:21.046 --> 00:39:24.056 A:middle
in the navigation bar
to turn on borders

00:39:24.116 --> 00:39:26.376 A:middle
on any composited
element in the page.

00:39:27.346 --> 00:39:30.716 A:middle
And only to drill into more
information, the layer sidebar

00:39:31.116 --> 00:39:33.926 A:middle
which lets us find out
about the number of panes

00:39:33.926 --> 00:39:36.216 A:middle
or the memory used and even find

00:39:36.216 --> 00:39:39.376 A:middle
out why specific layer was
composited in the first place,

00:39:39.746 --> 00:39:42.466 A:middle
such that if it were
in unexpected behavior,

00:39:42.726 --> 00:39:48.336 A:middle
we could go about fixing
it using the style sidebar.

00:39:48.896 --> 00:39:52.746 A:middle
And in this demo, Andreas
managed to bring the tool number

00:39:52.746 --> 00:39:55.706 A:middle
of layers from 90 to just
two layers just suing those

00:39:55.706 --> 00:39:56.396 A:middle
great techniques.

00:39:57.006 --> 00:40:01.436 A:middle
And Andreas also showcased some
great improvements we've made

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:01.436 --> 00:40:01.956 A:middle
to the timelines panel.

00:40:02.756 --> 00:40:05.476 A:middle
Recording all this information
about layout and rendering,

00:40:05.656 --> 00:40:07.996 A:middle
it might be a lot, so the first
thing you can do is filter

00:40:07.996 --> 00:40:11.966 A:middle
down to just the types of
layout and rendering operations

00:40:12.256 --> 00:40:13.526 A:middle
that are of concern to you.

00:40:14.056 --> 00:40:17.836 A:middle
And then as you select a
specific row in that DataGrid,

00:40:18.076 --> 00:40:22.716 A:middle
you immediately can figure out
what kind of JavaScript code led

00:40:22.716 --> 00:40:24.886 A:middle
to the execution of that layout.

00:40:24.886 --> 00:40:29.736 A:middle
So for example here, we know
that it came from the AppInit

00:40:29.736 --> 00:40:32.086 A:middle
and we can just start drilling
down through those functions

00:40:32.316 --> 00:40:34.986 A:middle
to figure out why we eventually
call it layout photos.

00:40:35.406 --> 00:40:36.446 A:middle
Such a great feature.

00:40:36.956 --> 00:40:38.136 A:middle
You can just jump straight

00:40:38.286 --> 00:40:39.846 A:middle
to where the performance
issue might be.

00:40:40.366 --> 00:40:46.546 A:middle
I think since we're in the
advance session and I'm talking

00:40:46.546 --> 00:40:49.926 A:middle
to a group of developers,
I think everybody are going

00:40:49.926 --> 00:40:52.916 A:middle
to be interested in ways you can
boost your productivity while

00:40:52.916 --> 00:40:53.846 A:middle
using Web Inspector.

00:40:54.636 --> 00:40:57.496 A:middle
And a great way to do that is to
learn more about a Console API.

00:40:57.966 --> 00:41:01.266 A:middle
Andreas used a console time
and console.timeEnd methods

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:01.626 --> 00:41:02.696 A:middle
to time a code segment.

00:41:02.696 --> 00:41:03.496 A:middle
This is really cool.

00:41:03.896 --> 00:41:05.916 A:middle
There are other methods
you can call on console

00:41:05.916 --> 00:41:07.896 A:middle
that could make your
life easier when dealing

00:41:07.896 --> 00:41:09.046 A:middle
with performance analysis.

00:41:09.116 --> 00:41:11.356 A:middle
For example, console
that mark timeline.

00:41:11.756 --> 00:41:15.086 A:middle
What it lets you do is add
a green vertical dash line

00:41:15.316 --> 00:41:18.096 A:middle
to the timeline recording
so that you can visually see

00:41:18.096 --> 00:41:19.596 A:middle
when your piece of
code is being run.

00:41:20.466 --> 00:41:22.636 A:middle
Another great thing we
could have done in this demo

00:41:22.766 --> 00:41:26.126 A:middle
but we didn't is that instead
of calling time and timeEnd,

00:41:26.366 --> 00:41:28.316 A:middle
we're going to call it
profile and profileEnd.

00:41:28.316 --> 00:41:32.256 A:middle
And what this would have done is
start an instrumentation process

00:41:32.506 --> 00:41:35.076 A:middle
where it keep track of all the
JavaScript calls made during

00:41:35.346 --> 00:41:38.796 A:middle
that specific interaction and
present it in a great DataGrid

00:41:38.796 --> 00:41:40.036 A:middle
within the timeline sidebar.

00:41:40.456 --> 00:41:42.476 A:middle
We didn't have time to
feature profiling too much

00:41:42.476 --> 00:41:44.706 A:middle
in this session this year,
but if you come to the lab,

00:41:44.916 --> 00:41:46.106 A:middle
we'll be able to
show you a lot more

00:41:46.106 --> 00:41:47.536 A:middle
about profiling if
you're interested.

00:41:48.056 --> 00:41:51.496 A:middle
OK. So I think that
we did a good job

00:41:51.496 --> 00:41:54.296 A:middle
of showing how we can deal
with performance analysis

00:41:54.296 --> 00:41:56.466 A:middle
and fix those kinds of
performance-related issues

00:41:56.696 --> 00:41:58.436 A:middle
in Web Inspector
in this section.

00:41:58.926 --> 00:42:00.856 A:middle
Now let's wrap this
up by taking a look

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:00.856 --> 00:42:03.366 A:middle
at debugging in Web Inspector.

00:42:03.446 --> 00:42:05.636 A:middle
I'm going to invite on
the stage, again, Brian,

00:42:05.636 --> 00:42:06.806 A:middle
to show you the final demo.

00:42:07.516 --> 00:42:12.476 A:middle
[ Pause ]

00:42:12.976 --> 00:42:14.236 A:middle
&gt;&gt; Thank you, Antoine.

00:42:14.576 --> 00:42:17.606 A:middle
So, Andreas did a really awesome
job showing you how you can use

00:42:17.606 --> 00:42:21.046 A:middle
a timeline to help profile
of [inaudible] in performance

00:42:21.046 --> 00:42:22.876 A:middle
and layout associated with
their JavaScript code.

00:42:23.436 --> 00:42:25.716 A:middle
But sometime, their JavaScript
code just doesn't work,

00:42:26.126 --> 00:42:27.466 A:middle
at least mine quite often.

00:42:28.026 --> 00:42:29.246 A:middle
So, let's take a look

00:42:29.246 --> 00:42:30.766 A:middle
at the previous example
we're working at.

00:42:31.786 --> 00:42:34.626 A:middle
This is looking pretty good
so far but one feature I want

00:42:34.626 --> 00:42:36.846 A:middle
to add is that when you click
on a photo, it just zoom

00:42:36.846 --> 00:42:38.746 A:middle
in full screen like a
nice photo gallery should.

00:42:39.486 --> 00:42:41.156 A:middle
And I went ahead and
I added some code

00:42:41.156 --> 00:42:42.556 A:middle
to do this but it doesn't work.

00:42:42.646 --> 00:42:43.816 A:middle
And you'll notice
that when I click

00:42:43.816 --> 00:42:46.506 A:middle
on the photos, nothing happens.

00:42:47.396 --> 00:42:49.436 A:middle
So usually when something
goes wrong,

00:42:49.876 --> 00:42:51.876 A:middle
the first thing I do
is I blame Antoine.

00:42:52.576 --> 00:42:55.356 A:middle
The second thing I do is I open
up Web Inspector and take a look

00:42:55.356 --> 00:42:57.106 A:middle
and see if there's any
information to tell me

00:42:57.316 --> 00:42:58.356 A:middle
that something has gone wrong.

00:42:58.886 --> 00:43:01.346 A:middle
So let's do just that.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:01.556 --> 00:43:02.626 A:middle
Now you'll notice
in the top right,

00:43:02.696 --> 00:43:05.596 A:middle
in the top of the activity there
is a pretty obvious glaring

00:43:05.596 --> 00:43:06.146 A:middle
red error.

00:43:06.146 --> 00:43:09.556 A:middle
And this tells me that indeed
something is going-- gone wrong.

00:43:09.876 --> 00:43:12.546 A:middle
And as I click on a photo,
it'll increment that count.

00:43:12.546 --> 00:43:12.936 A:middle
[ Inaudible ]

00:43:12.936 --> 00:43:20.586 A:middle
So as I click on a photo, it's
going to increment that number.

00:43:20.586 --> 00:43:22.996 A:middle
So that tells me that
there's obviously a problem

00:43:23.366 --> 00:43:25.206 A:middle
with the Java that's
being called as a result

00:43:25.206 --> 00:43:26.136 A:middle
of clicking on a photo.

00:43:26.876 --> 00:43:28.916 A:middle
So let's zoom out and let's--

00:43:28.916 --> 00:43:31.566 A:middle
and we already have
console open.

00:43:31.566 --> 00:43:34.596 A:middle
I can also get to that by
clicking on the red icon.

00:43:34.746 --> 00:43:38.126 A:middle
And if I zoom in here, you'll
notice that we have an error

00:43:38.126 --> 00:43:40.456 A:middle
and it's telling me
that we're trying

00:43:40.456 --> 00:43:41.756 A:middle
to call an undefined function.

00:43:42.556 --> 00:43:43.556 A:middle
So let's go straight
into the code

00:43:43.556 --> 00:43:44.666 A:middle
and take a look at
what's going on.

00:43:44.756 --> 00:43:48.206 A:middle
I do that by clicking a
link on the bottom right.

00:43:48.756 --> 00:43:51.846 A:middle
I'm going to zoom out a
little bit and take a look.

00:43:52.736 --> 00:43:54.716 A:middle
So, let's take a look
at code here and see

00:43:54.716 --> 00:43:56.336 A:middle
if we can get an
idea of just looking

00:43:56.336 --> 00:43:58.116 A:middle
at the code what's
trying to happen here.

00:43:58.616 --> 00:44:01.036 A:middle
So clearly we add eventless near
to the element before you click

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:01.036 --> 00:44:04.216 A:middle
on it, and in the function
handler, we're trying

00:44:04.216 --> 00:44:06.486 A:middle
to call a method that notifies
that a photo was selected.

00:44:07.586 --> 00:44:10.886 A:middle
But this doesn't give me a lot
of information so let's set turn

00:44:10.886 --> 00:44:14.626 A:middle
out the debugger
which you can get too

00:44:14.626 --> 00:44:15.956 A:middle
by toggling on the top here.

00:44:17.316 --> 00:44:19.666 A:middle
And let's set term
breakpoints on and let's do it

00:44:19.666 --> 00:44:21.106 A:middle
for all uncaught exceptions.

00:44:21.566 --> 00:44:22.946 A:middle
Now, if you had exceptions
that were

00:44:22.946 --> 00:44:24.766 A:middle
at in a try/catch statements,
you would also be able

00:44:24.766 --> 00:44:25.946 A:middle
to use the all-exceptions.

00:44:26.766 --> 00:44:28.946 A:middle
So without reloading the
page, I'm first going

00:44:28.946 --> 00:44:30.606 A:middle
to press command K to
clear this error count.

00:44:31.506 --> 00:44:32.916 A:middle
I'm going to click
on another image.

00:44:33.396 --> 00:44:37.016 A:middle
And as you can see, the
debugger braked right

00:44:37.016 --> 00:44:39.046 A:middle
at the area where we expected.

00:44:39.936 --> 00:44:42.976 A:middle
So now that the debugger
stopped at the point

00:44:43.096 --> 00:44:46.156 A:middle
where the error is being thrown,
we have the opportunity to look

00:44:46.156 --> 00:44:48.046 A:middle
at the context and see
what's happening here.

00:44:48.436 --> 00:44:50.826 A:middle
So when you look at the top
right, we have a scope chain

00:44:51.246 --> 00:44:52.916 A:middle
which provides information
about the variables

00:44:52.916 --> 00:44:54.456 A:middle
and arguments in the method.

00:44:55.006 --> 00:44:56.676 A:middle
But nothing looks
obviously wrong here.

00:44:56.676 --> 00:44:58.076 A:middle
There's no neular undefined.

00:44:58.486 --> 00:45:01.176 A:middle
So, I can't really get a sense
about what the problem is.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:01.766 --> 00:45:04.016 A:middle
So let's close this.

00:45:04.016 --> 00:45:06.306 A:middle
Safari 7 is a much better
way to go about doing this.

00:45:07.136 --> 00:45:08.146 A:middle
I can simply roll over--

00:45:08.216 --> 00:45:11.256 A:middle
I can simply roll
over any element here.

00:45:11.256 --> 00:45:12.926 A:middle
And I'm going to
get information,

00:45:12.926 --> 00:45:14.166 A:middle
let me zoom out of it.

00:45:14.166 --> 00:45:18.096 A:middle
I can get information about
any variable here live.

00:45:18.746 --> 00:45:20.866 A:middle
This is a really great way to
visualize the code and walk

00:45:20.866 --> 00:45:22.606 A:middle
through it and see what kind
of information we're getting

00:45:22.606 --> 00:45:24.376 A:middle
and see where the error happens.

00:45:24.846 --> 00:45:26.196 A:middle
So as you can see,
this is the event

00:45:26.196 --> 00:45:27.406 A:middle
that triggered the function.

00:45:28.026 --> 00:45:29.776 A:middle
I can roll over the idea
and see that we're going

00:45:29.776 --> 00:45:31.796 A:middle
to get the correct
idea of the photo.

00:45:32.316 --> 00:45:33.966 A:middle
This is the information
about the photo.

00:45:34.526 --> 00:45:38.726 A:middle
But as we expect, the
notify method is undefined.

00:45:39.476 --> 00:45:40.726 A:middle
So let's keep it going
through the left here

00:45:40.866 --> 00:45:41.836 A:middle
and roll over this.

00:45:42.846 --> 00:45:44.196 A:middle
And we zoom out and we see

00:45:44.196 --> 00:45:46.366 A:middle
that this keyword
represents the element.

00:45:47.136 --> 00:45:49.166 A:middle
So, this is a very subtle
JavaScript [inaudible]

00:45:49.166 --> 00:45:50.966 A:middle
that I ran into all the time.

00:45:51.446 --> 00:45:53.396 A:middle
And we know that a
function is called--

00:45:53.396 --> 00:45:55.556 A:middle
an event list in our function
is called in a context

00:45:55.886 --> 00:45:57.246 A:middle
of the object that
triggered the event.

00:45:57.736 --> 00:46:00.086 A:middle
So in this case, this
keyword refers to the element

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:00.546 --> 00:46:03.066 A:middle
that we clicked on, not the
object that contains the method.

00:46:04.216 --> 00:46:07.186 A:middle
So let's go ahead and continue
the-- let's play through.

00:46:07.766 --> 00:46:10.386 A:middle
And we can have-- let's
do a simple fix for this.

00:46:11.386 --> 00:46:16.936 A:middle
So I'm going to use bind which
is going to bind this scope

00:46:16.936 --> 00:46:18.306 A:middle
of the method to the object

00:46:18.306 --> 00:46:20.516 A:middle
that contains the notify
what's selected method.

00:46:20.516 --> 00:46:23.306 A:middle
I'm going to save
it, use a command S.

00:46:27.176 --> 00:46:28.526 A:middle
And let's refresh the page.

00:46:28.896 --> 00:46:35.406 A:middle
So now when I click on the
photo, boom, it zooms in.

00:46:36.116 --> 00:46:37.876 A:middle
So it's looking pretty
good so far.

00:46:38.906 --> 00:46:39.586 A:middle
But you'll notice that some

00:46:39.586 --> 00:46:41.936 A:middle
of these photos have
comment icons on a corner.

00:46:42.406 --> 00:46:45.116 A:middle
So when I click on it, we
shall load in some comments.

00:46:45.646 --> 00:46:48.746 A:middle
But you'll notice we're
not quite safe yet.

00:46:48.746 --> 00:46:50.026 A:middle
We have another problem
run into.

00:46:50.946 --> 00:46:52.596 A:middle
So clearly, what's
happening here?

00:46:52.946 --> 00:46:55.246 A:middle
So we have four comments
but they're all showing

00:46:55.246 --> 00:46:56.376 A:middle
up with undefined data.

00:46:57.376 --> 00:46:58.866 A:middle
So my hypothesis here is

00:46:58.866 --> 00:47:00.706 A:middle
that we're either not
getting the right data

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:00.886 --> 00:47:02.196 A:middle
or not running it correctly.

00:47:02.686 --> 00:47:04.046 A:middle
So let's look at
how we can inspect--

00:47:04.046 --> 00:47:05.516 A:middle
how we can debug this problem.

00:47:06.396 --> 00:47:09.356 A:middle
Now, what I want to do is I
want to see the associated data

00:47:09.896 --> 00:47:12.586 A:middle
that this-- that's being used
to render these comments.

00:47:13.346 --> 00:47:16.426 A:middle
So to do that, I'm going
to right click on one

00:47:16.426 --> 00:47:19.946 A:middle
of these elements and
click on inspect elements.

00:47:20.406 --> 00:47:23.536 A:middle
That's going to bring up these
comments in the-- in a DOM tree.

00:47:23.536 --> 00:47:29.796 A:middle
And let me scale
this a little bit

00:47:29.796 --> 00:47:32.416 A:middle
so you can see what
I'm going to do.

00:47:32.416 --> 00:47:34.976 A:middle
Now, I'm going to bring
up the quick console

00:47:34.976 --> 00:47:35.866 A:middle
and show you shorthand.

00:47:36.756 --> 00:47:37.706 A:middle
Let's clear this out.

00:47:38.366 --> 00:47:40.926 A:middle
Now I can use dollar sign 0 and
what this does, this is going

00:47:40.926 --> 00:47:42.956 A:middle
to reference the currently
selected element in the DOM.

00:47:43.536 --> 00:47:48.736 A:middle
So if I press Enter, you'll see
that this comment is the same

00:47:48.736 --> 00:47:49.876 A:middle
as the comment that I selected.

00:47:50.566 --> 00:47:53.666 A:middle
Now, as a debugging
technique, I actually associated

00:47:53.876 --> 00:47:57.356 A:middle
in JavaScript the info, the data
model that this comment used

00:47:57.356 --> 00:47:59.356 A:middle
to surrender itself
on the element itself.

00:47:59.986 --> 00:48:01.386 A:middle
So as I start autocompleting,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:01.706 --> 00:48:03.516 A:middle
you'll see there's info
object associated with it.

00:48:04.786 --> 00:48:05.896 A:middle
So inspect this object,

00:48:06.796 --> 00:48:09.056 A:middle
we'll see that we are actually
getting valid data here.

00:48:09.326 --> 00:48:12.066 A:middle
So we have the avatar URL,
we have a comment text,

00:48:12.066 --> 00:48:13.306 A:middle
and we also have a date.

00:48:13.306 --> 00:48:15.586 A:middle
But for some reasons, it's
not showing up in the code.

00:48:16.306 --> 00:48:18.136 A:middle
So, let's take a look
at our JavaScript file.

00:48:18.236 --> 00:48:21.286 A:middle
I'm going to use the search
here in the top and I want

00:48:21.286 --> 00:48:23.306 A:middle
to search for comment code.

00:48:23.366 --> 00:48:23.976 A:middle
So let's see.

00:48:24.746 --> 00:48:28.226 A:middle
I think it's called Comment,
and you see the search bar,

00:48:28.226 --> 00:48:30.676 A:middle
such a nice list of
wherever the word Comment was

00:48:30.676 --> 00:48:32.576 A:middle
in our entire working directory.

00:48:33.176 --> 00:48:34.656 A:middle
So in this case, I want
to go to this method,

00:48:35.146 --> 00:48:36.906 A:middle
Comment, Prototype, Set Info.

00:48:37.466 --> 00:48:41.526 A:middle
And this [inaudible] is really
great because we can see--

00:48:41.736 --> 00:48:43.306 A:middle
we can compare to a
data that we're getting

00:48:43.376 --> 00:48:44.596 A:middle
and a data that we're expecting.

00:48:45.596 --> 00:48:48.436 A:middle
So seeing the top, we're
sending the image here

00:48:48.436 --> 00:48:50.666 A:middle
and we're sending the
text from the data,

00:48:50.666 --> 00:48:52.126 A:middle
and we're sending the timestamp.

00:48:53.206 --> 00:48:55.196 A:middle
But in reality, these
are the wrong variables.

00:48:55.896 --> 00:48:56.886 A:middle
Here is this avatar.

00:48:57.126 --> 00:48:58.996 A:middle
Up there is its image and so on.

00:48:59.686 --> 00:49:00.946 A:middle
So, this is a common scenario

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:00.946 --> 00:49:02.786 A:middle
where sometimes data might
change in the backend

00:49:03.066 --> 00:49:04.646 A:middle
and you're not trying to
update it on the front end.

00:49:04.646 --> 00:49:07.126 A:middle
So let's quickly go in
and make these changes

00:49:07.126 --> 00:49:08.116 A:middle
and see if it works.

00:49:08.576 --> 00:49:13.676 A:middle
This should be comment
and this should be date.

00:49:13.676 --> 00:49:16.556 A:middle
Again, I'm going to
press Command S to save.

00:49:16.636 --> 00:49:23.886 A:middle
I want to zoom back
out and take a look.

00:49:25.966 --> 00:49:26.736 A:middle
Refresh the page.

00:49:27.616 --> 00:49:29.056 A:middle
Let's click on the same image.

00:49:29.396 --> 00:49:32.806 A:middle
And there we go, the
color is showing up.

00:49:33.846 --> 00:49:36.096 A:middle
OK, so I think we're
almost done.

00:49:36.096 --> 00:49:37.446 A:middle
And let's take a look at
some more photos here.

00:49:38.956 --> 00:49:41.096 A:middle
Let's take a look at
our trip to Thailand.

00:49:42.386 --> 00:49:43.096 A:middle
How about this guy?

00:49:44.126 --> 00:49:45.406 A:middle
So again, the color
is looking good.

00:49:45.756 --> 00:49:46.446 A:middle
Let's scroll down.

00:49:47.216 --> 00:49:54.906 A:middle
So we'll notice that
something else is wrong.

00:49:54.906 --> 00:49:56.156 A:middle
So, just when we
thought we were done,

00:49:56.766 --> 00:49:59.416 A:middle
obviously another bug pops up,
that happens once in a while.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:00.316 --> 00:50:02.496 A:middle
So the previous problem
was specific--

00:50:02.636 --> 00:50:05.576 A:middle
was happen to all the comments,
but this problem is specific

00:50:05.816 --> 00:50:06.906 A:middle
to an individual comments.

00:50:07.286 --> 00:50:08.916 A:middle
Now, we can use a [inaudible]
technique that we used

00:50:08.916 --> 00:50:11.726 A:middle
in the last demo, but let me
show something that much cooler.

00:50:12.036 --> 00:50:15.746 A:middle
So I'm going to go to
the search my resources

00:50:16.096 --> 00:50:17.566 A:middle
for a method called
render comments.

00:50:17.856 --> 00:50:19.526 A:middle
Now this is a method
that I wrote,

00:50:19.526 --> 00:50:21.036 A:middle
so I know what it's called.

00:50:21.036 --> 00:50:22.446 A:middle
So let's search for it.

00:50:24.196 --> 00:50:26.396 A:middle
So let's click the
right using the search.

00:50:26.486 --> 00:50:29.776 A:middle
I'm going to escape
out the quick console.

00:50:30.476 --> 00:50:32.336 A:middle
And let's take a
look at this method.

00:50:32.446 --> 00:50:35.746 A:middle
So this method is called when
the full screen view shows up

00:50:35.786 --> 00:50:37.846 A:middle
and it loops through
all the comment data,

00:50:38.866 --> 00:50:42.526 A:middle
it creates a new comment which
renders the HTML content.

00:50:42.976 --> 00:50:44.096 A:middle
And I will set the info on it

00:50:44.226 --> 00:50:45.606 A:middle
which the data we're
getting from server.

00:50:46.446 --> 00:50:48.556 A:middle
So what I want to do is I
want to click on the debugger

00:50:49.186 --> 00:50:52.446 A:middle
and I want to set a
breakpoints right at the point

00:50:52.446 --> 00:50:53.586 A:middle
when the data is being set.

00:50:53.896 --> 00:50:56.586 A:middle
This way I can inspect the
data right before it get sent

00:50:56.586 --> 00:50:57.516 A:middle
to the comments and rendered.

00:50:58.436 --> 00:51:01.976 A:middle
But the problem here is
that I don't want to have

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:51:01.976 --> 00:51:04.876 A:middle
to run this debugger for
every single comment.

00:51:05.516 --> 00:51:08.016 A:middle
So I have to go to the first
comment, the second comment

00:51:08.016 --> 00:51:09.926 A:middle
and so on until I
got to this one here.

00:51:10.966 --> 00:51:11.946 A:middle
So this is a great usage

00:51:11.946 --> 00:51:13.526 A:middle
of something called
conditional breakpoints.

00:51:13.816 --> 00:51:15.006 A:middle
And let me show you
how that works.

00:51:15.896 --> 00:51:21.136 A:middle
Let me turn on breakpoints here.

00:51:21.336 --> 00:51:22.846 A:middle
Zoom out a little bit.

00:51:25.636 --> 00:51:29.056 A:middle
So you see that, the breakpoint
that I click, that I use,

00:51:29.056 --> 00:51:31.656 A:middle
that I add by clicking
on the gutter here is

00:51:31.656 --> 00:51:33.146 A:middle
on the debug panel on the left.

00:51:33.866 --> 00:51:36.896 A:middle
So if I right click on this,
I can go to edit breakpoint.

00:51:37.586 --> 00:51:39.926 A:middle
Now, this allows me to add
a conditional expression

00:51:39.926 --> 00:51:42.586 A:middle
that will be evaluated right
before this method is reached

00:51:42.586 --> 00:51:44.796 A:middle
and-- the debugger
will only break on it

00:51:44.936 --> 00:51:46.856 A:middle
if this condition is
evaluated to be true.

00:51:47.236 --> 00:51:48.926 A:middle
So a conditional expression
could be anything that you put

00:51:48.926 --> 00:51:49.936 A:middle
and stuff in If statements.

00:51:50.666 --> 00:51:51.996 A:middle
So in this case, let's try

00:51:51.996 --> 00:51:54.226 A:middle
to find an identifiable
characteristic

00:51:54.226 --> 00:51:57.706 A:middle
about these comments that we
can use to add a condition.

00:51:58.496 --> 00:52:00.986 A:middle
So in this case we have
text "Too Much Fun".

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:52:01.446 --> 00:52:04.456 A:middle
So let's select that.

00:52:04.586 --> 00:52:07.606 A:middle
We'll just type in instead.

00:52:07.776 --> 00:52:09.336 A:middle
So let's use a regular
expression match

00:52:09.336 --> 00:52:10.226 A:middle
to see how this works.

00:52:11.166 --> 00:52:19.076 A:middle
So, toomuchfun.test, and we want
to test it against this line,

00:52:19.246 --> 00:52:19.966 A:middle
so let's try this again.

00:52:20.356 --> 00:52:23.556 A:middle
So we want to test it against
the data and the comment.

00:52:24.046 --> 00:52:27.726 A:middle
So let's do
commentinfo.comments,

00:52:27.996 --> 00:52:30.756 A:middle
remember the correct variable
name from the last mistake,

00:52:31.816 --> 00:52:33.936 A:middle
press Enter, then we're good.

00:52:33.936 --> 00:52:35.626 A:middle
So let's see how this works.

00:52:36.146 --> 00:52:39.226 A:middle
Let's click off this again.

00:52:39.436 --> 00:52:41.476 A:middle
And let's click on
the same photo here.

00:52:43.866 --> 00:52:46.146 A:middle
Now you notice that it correctly
stopped at the breakpoint,

00:52:46.746 --> 00:52:48.716 A:middle
but we zoom out you see that
it actually rendered all the

00:52:48.716 --> 00:52:49.676 A:middle
comments beforehand.

00:52:50.036 --> 00:52:52.386 A:middle
So this stop only at the
comment that was in question

00:52:52.826 --> 00:52:53.636 A:middle
which is really a great way.

00:52:53.636 --> 00:52:55.986 A:middle
If there was a thousand comments
here, that'll be a real pain

00:52:55.986 --> 00:52:57.026 A:middle
to go through each one of them.

00:52:57.356 --> 00:52:59.226 A:middle
So using conditional
breakpoints, you can easily get

00:52:59.226 --> 00:53:02.066 A:middle
to only the problem that
specific that you want to find.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:53:02.786 --> 00:53:06.176 A:middle
So, using the popovers, we can
now easily go over the code

00:53:06.176 --> 00:53:07.096 A:middle
and see what's going on.

00:53:08.316 --> 00:53:09.756 A:middle
So here I have our
comments arrived.

00:53:09.756 --> 00:53:12.476 A:middle
I don't know about you but
this is the coolest thing ever.

00:53:13.296 --> 00:53:14.516 A:middle
Could I get some
applause for this?

00:53:14.626 --> 00:53:15.176 A:middle
This is great.

00:53:15.176 --> 00:53:15.896 A:middle
[ Applause ]

00:53:15.896 --> 00:53:16.196 A:middle
Thank you.

00:53:16.196 --> 00:53:17.496 A:middle
[ Applause ]

00:53:17.496 --> 00:53:20.356 A:middle
I mean, I can visually
go through the code

00:53:20.356 --> 00:53:22.196 A:middle
and just-- it's just so natural.

00:53:22.986 --> 00:53:26.586 A:middle
Let me get back to the info,
and as you can see, you know,

00:53:26.696 --> 00:53:30.956 A:middle
James wrote these comment, added
some rogue HTML into the comment

00:53:30.956 --> 00:53:32.406 A:middle
which is why it's getting
rendered in correctly.

00:53:33.106 --> 00:53:34.706 A:middle
Now, this is a really
serious issue.

00:53:34.896 --> 00:53:36.766 A:middle
This-- the sites won't allow
me to cross scription--

00:53:36.766 --> 00:53:39.016 A:middle
scripting attacks and this
is something that we'd have

00:53:39.016 --> 00:53:41.626 A:middle
to taught to our server about
to try to sanitize the content.

00:53:42.126 --> 00:53:44.006 A:middle
So, this is a serious issue

00:53:44.006 --> 00:53:46.156 A:middle
that using conditional
breakpoints helped us out.

00:53:46.926 --> 00:53:48.476 A:middle
And with that, back to Antoine.

00:53:49.516 --> 00:53:53.816 A:middle
[ Applause ]

00:53:54.316 --> 00:53:55.446 A:middle
&gt;&gt; Hey, thanks Brian.

00:53:56.446 --> 00:54:01.526 A:middle
So, the debugger sidebar is
the way you can always track

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:54:01.896 --> 00:54:05.676 A:middle
where your breakpoints are,
what this data's recall stack is

00:54:05.676 --> 00:54:07.286 A:middle
when you're breaking
into the debugger,

00:54:07.476 --> 00:54:09.426 A:middle
and using the scope
chain, you can always find

00:54:09.426 --> 00:54:11.846 A:middle
out these different values
of the local variables

00:54:12.066 --> 00:54:12.856 A:middle
and their occurring call.

00:54:14.216 --> 00:54:15.836 A:middle
And with conditional
breakpoints,

00:54:16.186 --> 00:54:20.106 A:middle
you can pinpoint specific
instance within a loop

00:54:20.166 --> 00:54:23.696 A:middle
or any kind of other condition
to just break what it matters.

00:54:23.956 --> 00:54:26.216 A:middle
And what I think is really
cool about this feature is

00:54:26.216 --> 00:54:28.796 A:middle
that imagine you're actually
debugging content that's not

00:54:28.796 --> 00:54:29.536 A:middle
even local.

00:54:29.536 --> 00:54:32.166 A:middle
It's content from the server,
there's no way you can edit,

00:54:32.686 --> 00:54:36.326 A:middle
edit the file to tweak the
breakpoint and just break

00:54:36.326 --> 00:54:38.156 A:middle
under certain conditions,
this is really

00:54:38.156 --> 00:54:39.516 A:middle
where the edit breakpoint,

00:54:39.906 --> 00:54:43.016 A:middle
conditional breakpoint setting
is just really vital 'cause

00:54:43.296 --> 00:54:45.356 A:middle
there would be no other
way to do it otherwise.

00:54:46.456 --> 00:54:50.696 A:middle
And the popovers, they just work
whether you're hovering a simple

00:54:51.166 --> 00:54:53.486 A:middle
property or even a
chain of properties,

00:54:53.976 --> 00:54:56.576 A:middle
it's just really fantastic
for real-time debugging.

00:54:57.526 --> 00:55:00.416 A:middle
And again, taking a
look at productivity,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:55:00.696 --> 00:55:01.766 A:middle
there are some Command Line APIs

00:55:01.766 --> 00:55:03.256 A:middle
that would be really
useful to you.

00:55:03.356 --> 00:55:05.966 A:middle
So, for example, there are
0 currently selected node,

00:55:05.966 --> 00:55:08.796 A:middle
there are 124 last,
second to last,

00:55:08.796 --> 00:55:11.556 A:middle
and et cetera selected
node, comma and underscore,

00:55:11.766 --> 00:55:13.866 A:middle
dollar underscore, the
value of the last expression

00:55:13.866 --> 00:55:16.776 A:middle
in the debugger in the
console and even short hands

00:55:16.776 --> 00:55:20.206 A:middle
for often used methods
such as querySelector

00:55:20.206 --> 00:55:21.856 A:middle
and querySelectorAll
which you can go

00:55:21.856 --> 00:55:23.256 A:middle
with dollar or dollar-dollar.

00:55:24.216 --> 00:55:26.706 A:middle
And we have a whole list of
those in the documentation

00:55:26.866 --> 00:55:28.716 A:middle
which you should
really go and check out.

00:55:28.946 --> 00:55:32.486 A:middle
So this was it, the new style
sidebar panel made inspection

00:55:32.486 --> 00:55:35.446 A:middle
tweaking a breeze, performance
analysis with the new layouts,

00:55:35.506 --> 00:55:37.006 A:middle
layer sidebar as well

00:55:37.006 --> 00:55:39.986 A:middle
as the great timelines
view just made it so easy

00:55:39.986 --> 00:55:42.406 A:middle
to identify what went
wrong, get to the initiator,

00:55:42.606 --> 00:55:44.916 A:middle
look at the call stack,
and find exactly what piece

00:55:44.916 --> 00:55:47.656 A:middle
of JavaScript calls the
performance issue, and finally,

00:55:47.946 --> 00:55:50.936 A:middle
popovers, conditional
breakpoints, all new features

00:55:50.936 --> 00:55:54.396 A:middle
in Safari 7 that makes debugging
JavaScript code so much easier.

00:55:56.016 --> 00:55:58.236 A:middle
So you can keep up-to-date
with our development

00:55:58.236 --> 00:56:00.876 A:middle
with Web Inspector by
going to nightly.webkit.org

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:56:00.876 --> 00:56:02.986 A:middle
and you can download the
WebKit nightly and build

00:56:02.986 --> 00:56:05.386 A:middle
with the snapshot
of WebKit everyday.

00:56:06.366 --> 00:56:08.016 A:middle
And race bug as you
encounter them,

00:56:08.016 --> 00:56:10.156 A:middle
go to
bugs.webkit.org/new-inspector-

00:56:10.156 --> 00:56:11.786 A:middle
bug will always track
in them and trying

00:56:11.786 --> 00:56:13.086 A:middle
to fix them as soon as possible.

00:56:13.746 --> 00:56:16.266 A:middle
And if you have any issue you
want to discuss in person--

00:56:16.556 --> 00:56:20.616 A:middle
not exactly in person but live,
you can just connect to IRC

00:56:20.616 --> 00:56:22.496 A:middle
and freenode.net and go

00:56:22.496 --> 00:56:25.866 A:middle
to the #webkit-inspector
channel and find us there.

00:56:26.306 --> 00:56:29.526 A:middle
And finally, because we have
open source Web Inspector today,

00:56:29.946 --> 00:56:32.426 A:middle
you can contribute directly
to the features and the code

00:56:32.426 --> 00:56:34.406 A:middle
of Web Inspector to make it
just a little bit better.

00:56:34.766 --> 00:56:36.956 A:middle
And so, for more information,
you can type [inaudible]

00:56:36.956 --> 00:56:40.126 A:middle
or documentation again, you
will have to check it out,

00:56:40.386 --> 00:56:41.936 A:middle
developer.apple.com/mac,

00:56:41.936 --> 00:56:45.736 A:middle
look for the Safari Web
Inspector Guide, webkit.org,

00:56:45.916 --> 00:56:47.506 A:middle
[inaudible], great places
to find more information

00:56:47.506 --> 00:56:48.676 A:middle
and get answers to
your question.

00:56:49.786 --> 00:56:53.256 A:middle
These are some related sessions
about performance, CSS features,

00:56:53.766 --> 00:56:56.836 A:middle
and introductory talk to Web
Inspector if you miss that.

00:56:57.156 --> 00:56:57.786 A:middle
Thanks very much.

00:56:58.176 --> 00:57:00.000 A:middle
[ Applause ]

