WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:09.516 A:middle
[ Silence ]

00:00:10.016 --> 00:00:13.000 A:middle
[ Applause ]

00:00:13.816 --> 00:00:14.756 A:middle
&gt;&gt; Kevin Lindeman:
Good morning everyone.

00:00:14.996 --> 00:00:17.046 A:middle
Welcome to understanding
Source Control in Xcode.

00:00:17.476 --> 00:00:19.696 A:middle
My name's Kevin Lindeman, I'm
an Xcode Software Engineer.

00:00:20.366 --> 00:00:26.176 A:middle
So first off we have so
much new stuff in Xcode 5

00:00:26.446 --> 00:00:28.876 A:middle
that we want you to take a look
at our session from last year,

00:00:29.096 --> 00:00:32.016 A:middle
Source Control Management in
Xcode, to learn about some

00:00:32.016 --> 00:00:35.246 A:middle
of the more basic integration
of Source Control in Xcode.

00:00:35.866 --> 00:00:37.436 A:middle
It's all the same in Xcode 5.

00:00:37.956 --> 00:00:39.746 A:middle
And that session in conjunction

00:00:39.746 --> 00:00:43.206 A:middle
with this year's session will
give you the full picture of how

00:00:43.206 --> 00:00:45.016 A:middle
to use Source Control in Xcode.

00:00:45.606 --> 00:00:49.146 A:middle
So I'm going to start
off talking

00:00:49.146 --> 00:00:51.396 A:middle
about the three C's
in Source Control.

00:00:52.496 --> 00:00:54.456 A:middle
The first one is Confidence.

00:00:54.796 --> 00:00:57.726 A:middle
Using Source Control in Xcode
gives you the confidence

00:00:57.726 --> 00:00:59.506 A:middle
that you're committing
the right code.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:00.396 --> 00:01:01.766 A:middle
It also gives you the confidence

00:01:01.766 --> 00:01:03.066 A:middle
that when you're
using branching,

00:01:03.286 --> 00:01:05.166 A:middle
you're committing
to the right branch.

00:01:06.616 --> 00:01:08.606 A:middle
Now using Source
Control also allows you

00:01:08.606 --> 00:01:11.556 A:middle
to commit your changes
in smaller chunks

00:01:11.786 --> 00:01:15.116 A:middle
so that you can go back in
history using the version editor

00:01:15.116 --> 00:01:18.546 A:middle
or blame and see exactly
why a change happened,

00:01:18.866 --> 00:01:23.656 A:middle
when it happened and by who
and maybe go back and run

00:01:23.656 --> 00:01:27.076 A:middle
that version of the code instead
to try to find regressions.

00:01:27.636 --> 00:01:32.646 A:middle
It also helps with
compartmentalization.

00:01:33.416 --> 00:01:36.306 A:middle
Xcode has excellent
branch management

00:01:36.506 --> 00:01:39.496 A:middle
so when you're working on a
potentially large feature,

00:01:39.856 --> 00:01:44.656 A:middle
you can branch off of your main
code and iterate on that branch

00:01:44.846 --> 00:01:49.906 A:middle
over time until you're ready
to make that your main branch

00:01:49.906 --> 00:01:52.936 A:middle
and merge all of that
code into your main line.

00:01:57.076 --> 00:01:59.456 A:middle
The third C is Collaboration.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.086 --> 00:02:02.906 A:middle
Now especially with our
integration with OS X server,

00:02:03.706 --> 00:02:06.296 A:middle
Source Control becomes
an easy two-way street

00:02:06.296 --> 00:02:09.476 A:middle
of pushing changes back and
forth to your coworkers so that

00:02:09.476 --> 00:02:12.366 A:middle
when you make a change you
can give those changes easily

00:02:12.366 --> 00:02:15.856 A:middle
to your coworkers so that you're
all always building the latest

00:02:15.986 --> 00:02:17.516 A:middle
stuff in your project.

00:02:21.036 --> 00:02:24.646 A:middle
So we've added a lot to
Source Control in Xcode 5.

00:02:25.656 --> 00:02:28.636 A:middle
And the first thing is we're now
shipping the latest Subversion

00:02:28.636 --> 00:02:33.166 A:middle
client, Subversion 1.7.

00:02:33.246 --> 00:02:36.226 A:middle
We also have a much
improved checkout workflow

00:02:36.466 --> 00:02:37.716 A:middle
that I think you'll really love.

00:02:38.366 --> 00:02:43.506 A:middle
We've also got brand new
workspace centric workflows

00:02:43.756 --> 00:02:46.656 A:middle
so there's no more running back
and forth between the workspace

00:02:47.076 --> 00:02:48.446 A:middle
and the repository organizer.

00:02:49.016 --> 00:02:53.776 A:middle
We also have deep integration
with the Xcode service

00:02:53.776 --> 00:02:58.036 A:middle
on OS X server making really
easy so that when you start off

00:02:58.036 --> 00:03:01.036 A:middle
with a new project, putting
that project under Git

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:01.036 --> 00:03:05.086 A:middle
and automatically pushing that
project to your OS X server.

00:03:07.556 --> 00:03:11.186 A:middle
We also have greater
customization using a new Source

00:03:11.186 --> 00:03:13.146 A:middle
Control preference
pane allowing you

00:03:13.146 --> 00:03:14.866 A:middle
to make Source Control
work with you.

00:03:14.866 --> 00:03:19.676 A:middle
So let's talk about
Subversion 1.7.

00:03:20.376 --> 00:03:23.756 A:middle
One of the key differences
compared to Subversion 1.6

00:03:23.756 --> 00:03:27.336 A:middle
which we shipped in Xcode 4,
is that when you have a project

00:03:27.496 --> 00:03:30.586 A:middle
like you see here
every folder inside

00:03:30.586 --> 00:03:33.906 A:middle
of that project has
a .svn folder in it.

00:03:34.026 --> 00:03:36.136 A:middle
Now if you're looking at that
project in Terminal or something

00:03:36.136 --> 00:03:39.026 A:middle
that really clutters up
your folder structure.

00:03:40.276 --> 00:03:43.776 A:middle
Subversion 1.7 when you
upgrade to it, it takes all

00:03:43.856 --> 00:03:50.126 A:middle
of the .svn folders lower down
your file system and puts them

00:03:50.126 --> 00:03:53.446 A:middle
up into the top level .svn
folder for your project.

00:03:54.296 --> 00:03:56.236 A:middle
This makes it much more
similar to how a Git works.

00:03:56.886 --> 00:04:01.126 A:middle
Now the first time
you open a project

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:01.126 --> 00:04:03.416 A:middle
in Xcode 5 you'll
see this dialogue.

00:04:04.196 --> 00:04:07.616 A:middle
It's asking you to upgrade
your project to Subversion 1.7.

00:04:07.616 --> 00:04:11.126 A:middle
Now this will be handled
entirely by Xcode,

00:04:11.126 --> 00:04:12.306 A:middle
you don't have to do anything.

00:04:12.646 --> 00:04:14.906 A:middle
It's also entirely client side.

00:04:15.166 --> 00:04:17.565 A:middle
It doesn't change
anything on your server.

00:04:17.976 --> 00:04:20.536 A:middle
And each individual
team member can opt

00:04:20.536 --> 00:04:23.026 A:middle
into upgrading to
Subversion 1.7.

00:04:23.816 --> 00:04:25.476 A:middle
Now this is an important
distinction

00:04:25.726 --> 00:04:29.426 A:middle
because Xcode 4 only
supports Subversion 1.6.

00:04:29.756 --> 00:04:31.226 A:middle
So when you're going back

00:04:31.226 --> 00:04:34.046 A:middle
and forth during the
developer previews of Xcode 5,

00:04:34.666 --> 00:04:38.546 A:middle
you'll need to be using
Subversion 1.6 if you want

00:04:38.546 --> 00:04:40.106 A:middle
to use Source Control
in Xcode 4.

00:04:41.036 --> 00:04:45.056 A:middle
But we really do urge you to try
to upgrade because there's a lot

00:04:45.056 --> 00:04:47.606 A:middle
of really great enhancements
in Xcode 5

00:04:47.746 --> 00:04:51.196 A:middle
when you use Subversion 1.7.

00:04:51.366 --> 00:04:53.376 A:middle
The first of those is
improved performance.

00:04:53.676 --> 00:04:58.796 A:middle
Operations such as SV
and up are a lot faster.

00:04:59.046 --> 00:05:01.616 A:middle
We've also added support for
blame for modified files.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:01.996 --> 00:05:06.646 A:middle
I'm sure you've been working in
Xcode, modified a file, haven't

00:05:06.646 --> 00:05:08.506 A:middle
yet committed it yet
but then wondered,

00:05:08.506 --> 00:05:10.936 A:middle
well who changed this line
over there and noticed

00:05:10.936 --> 00:05:13.536 A:middle
that you couldn't look at
your locally modified version

00:05:13.536 --> 00:05:14.986 A:middle
of that file in blame.

00:05:15.396 --> 00:05:17.216 A:middle
Well now you can
with Subversion 1.7.

00:05:17.916 --> 00:05:21.996 A:middle
That also has always
worked with Git.

00:05:22.396 --> 00:05:25.376 A:middle
We also have this great new
feature called blame for line.

00:05:25.506 --> 00:05:27.386 A:middle
It's a shortcut in
the standard editor.

00:05:27.736 --> 00:05:29.686 A:middle
You don't even have to
go to the Version Editor

00:05:29.726 --> 00:05:32.996 A:middle
into the blame submode to see
blame for your whole file.

00:05:33.326 --> 00:05:36.446 A:middle
You can just say I'm curious
about what this line is,

00:05:36.596 --> 00:05:40.586 A:middle
right click it in Git and
a great popover a view

00:05:40.586 --> 00:05:43.886 A:middle
of who changed that line,
when it was changed, why,

00:05:44.256 --> 00:05:46.956 A:middle
with quick shortcuts for opening
it in the full blame editor

00:05:47.266 --> 00:05:48.586 A:middle
or into the comparison editor

00:05:48.586 --> 00:05:50.456 A:middle
so you can see all the
changes in that file.

00:05:51.046 --> 00:05:55.416 A:middle
It also highlights all of the
other lines in that source file

00:05:55.416 --> 00:05:58.286 A:middle
that were modified
with the same commit.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:01.076 --> 00:06:03.366 A:middle
And also the command
line integration.

00:06:03.926 --> 00:06:06.676 A:middle
When you install the Xcode 5
version of command line tools,

00:06:07.556 --> 00:06:10.426 A:middle
all you will have access
to is Subversion 1.7.

00:06:11.056 --> 00:06:15.606 A:middle
Subversion 1.7 cannot talk to
a Subversion 1.6 working copy

00:06:15.656 --> 00:06:19.266 A:middle
until you upgrade and vice
versa, 1.6 cannot talk

00:06:19.266 --> 00:06:20.596 A:middle
to a 1.7 working copy.

00:06:20.946 --> 00:06:23.386 A:middle
But like I said, this
is entirely client side

00:06:23.676 --> 00:06:25.606 A:middle
so you don't have to upgrade all

00:06:25.606 --> 00:06:27.936 A:middle
of your working copies
right now.

00:06:30.776 --> 00:06:33.326 A:middle
So moving onto this new
workspace Source Control.

00:06:36.296 --> 00:06:39.306 A:middle
There's three things that
that takes into account.

00:06:39.436 --> 00:06:41.506 A:middle
First is the new
accounts preference pane.

00:06:41.956 --> 00:06:44.196 A:middle
Instead of setting up a
repository on the organizer,

00:06:44.486 --> 00:06:48.026 A:middle
you can go to the accounts
preference pane and set up any

00:06:48.026 --> 00:06:50.196 A:middle
of your accounts that would
have login credentials

00:06:50.326 --> 00:06:51.366 A:middle
that Xcode will talk to.

00:06:52.146 --> 00:06:55.456 A:middle
And there's also the
new Source Control menu.

00:06:56.726 --> 00:07:00.476 A:middle
We've taken a lot of the
new features of Xcode 5

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:00.546 --> 00:07:02.186 A:middle
and all the old ones
and put them

00:07:02.186 --> 00:07:03.556 A:middle
into a top level menu for you.

00:07:05.276 --> 00:07:08.506 A:middle
We've also got the
new checkout workflow.

00:07:09.036 --> 00:07:12.756 A:middle
And so let's talk about
the accounts preferences.

00:07:13.396 --> 00:07:17.416 A:middle
As I said this is the
single place for doing all

00:07:17.416 --> 00:07:18.486 A:middle
of your credential management.

00:07:19.226 --> 00:07:21.346 A:middle
You can set up Apple
IDs for setting

00:07:21.346 --> 00:07:22.716 A:middle
up provisioning of your devices.

00:07:23.936 --> 00:07:26.706 A:middle
You can also set up
Subversion servers and any

00:07:26.706 --> 00:07:31.216 A:middle
of the credentials used
for those, Git remotes

00:07:31.766 --> 00:07:36.366 A:middle
and OS X server accounts so
that you can get the OS X server

00:07:36.366 --> 00:07:37.306 A:middle
integration in Xcode.

00:07:37.306 --> 00:07:41.306 A:middle
Now let's talk about
the Source Control menu.

00:07:41.856 --> 00:07:44.456 A:middle
This is great because we've
taken all the working copies

00:07:44.456 --> 00:07:47.046 A:middle
that are part of your workspace
and put them at the top

00:07:47.046 --> 00:07:49.046 A:middle
of the menu because
we know you want

00:07:49.046 --> 00:07:52.586 A:middle
to know what Source Control
working copies you're using

00:07:52.586 --> 00:07:53.366 A:middle
in your project.

00:07:54.426 --> 00:07:58.336 A:middle
We've also added the ability to
show the current branch for each

00:07:58.336 --> 00:08:00.256 A:middle
of those working
copies right there

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:00.256 --> 00:08:02.466 A:middle
so you know what you
are committing to

00:08:02.466 --> 00:08:03.476 A:middle
and what you're building.

00:08:03.476 --> 00:08:09.096 A:middle
Under each of those
working copies is our branch

00:08:09.096 --> 00:08:09.996 A:middle
management tools.

00:08:10.536 --> 00:08:16.116 A:middle
You can also do on demand
upgrades here if you opted not

00:08:16.116 --> 00:08:17.406 A:middle
to upgrade on workspace open.

00:08:17.986 --> 00:08:23.866 A:middle
Then there's some of more
top level items like checkout

00:08:24.006 --> 00:08:30.876 A:middle
for getting new Source Code,
commit, push, pull and update

00:08:31.536 --> 00:08:35.816 A:middle
and a new workspace wide
history view which will take all

00:08:35.816 --> 00:08:39.846 A:middle
of the working copies in your
project, show you the logs all

00:08:39.846 --> 00:08:41.866 A:middle
in one list that
is also searchable.

00:08:41.866 --> 00:08:45.786 A:middle
So now let's talk
about Checkout.

00:08:47.066 --> 00:08:50.596 A:middle
As I said brand new look, a
lot easier to use as well.

00:08:51.436 --> 00:08:53.206 A:middle
But it's also a lot
more powerful.

00:08:54.506 --> 00:08:59.026 A:middle
We show recent projects that you
have open or checked out as well

00:08:59.026 --> 00:09:00.726 A:middle
as recent repositories
that you have checked

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:00.726 --> 00:09:02.016 A:middle
out from right there.

00:09:03.276 --> 00:09:04.776 A:middle
We also have favorites.

00:09:05.036 --> 00:09:10.836 A:middle
You can now star a repository or
project and have it always show

00:09:10.836 --> 00:09:12.196 A:middle
up under the favorites tab.

00:09:14.756 --> 00:09:17.706 A:middle
There's also the repositories
tab which will take all

00:09:17.706 --> 00:09:20.816 A:middle
of the repositories you have set
up in the accounts preferences

00:09:21.156 --> 00:09:25.036 A:middle
and list them here as well as
any repository that is hosted

00:09:25.036 --> 00:09:28.446 A:middle
on your OS X server using
its Git integration.

00:09:29.036 --> 00:09:35.786 A:middle
It will also show you browsing
a subversion repository

00:09:35.966 --> 00:09:36.846 A:middle
when necessary.

00:09:38.256 --> 00:09:41.396 A:middle
Xcode 5's checkout is way smart

00:09:41.466 --> 00:09:44.986 A:middle
so it actually does subversion
branch auto discovery.

00:09:45.496 --> 00:09:49.156 A:middle
So if you type in the
URL the Xcode can figure

00:09:49.156 --> 00:09:51.956 A:middle
out what you might be checking
out, whether it's a branch

00:09:51.996 --> 00:09:54.736 A:middle
or it knows that there's a
bunch of branches in there,

00:09:54.736 --> 00:09:56.646 A:middle
it will just show you
that, you don't even need

00:09:56.646 --> 00:09:57.806 A:middle
to browse your repository.

00:09:57.806 --> 00:10:00.496 A:middle
But if you put in a URL
that's a little ambiguous

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.956 --> 00:10:03.766 A:middle
such as sometimes if you have
a multiple projects hosted

00:10:03.766 --> 00:10:06.666 A:middle
in a single repository and
you just give it the root URL

00:10:06.666 --> 00:10:09.836 A:middle
to your repository, we can't
really tell exactly what you

00:10:09.836 --> 00:10:12.866 A:middle
wanted to checkout just yet so
it will allow you to browse.

00:10:13.386 --> 00:10:15.916 A:middle
Let's take a quick look
at this in the demo.

00:10:17.896 --> 00:10:21.986 A:middle
So we have here the
Welcome window Xcode 5.

00:10:22.726 --> 00:10:26.136 A:middle
First I wanted to show how to
easily create a new project

00:10:26.616 --> 00:10:29.136 A:middle
or a new repository
account in Xcode.

00:10:29.886 --> 00:10:32.646 A:middle
So I'm going to click the Xcode
menu and click preferences.

00:10:33.586 --> 00:10:36.516 A:middle
And we see here I already have
a number of repositories set

00:10:36.516 --> 00:10:38.256 A:middle
up as well as my OS X server.

00:10:39.086 --> 00:10:41.176 A:middle
But I'm going to add a new
repository so I'm going

00:10:41.176 --> 00:10:43.776 A:middle
to hit the plus button
and say add repository.

00:10:44.176 --> 00:10:47.096 A:middle
It's asking me for the
address, I have a snippet

00:10:47.296 --> 00:10:53.246 A:middle
that has a Git hub account in it
and so I'm going to click next.

00:10:53.366 --> 00:10:56.046 A:middle
And now Xcode is verifying my
credentials to this repository

00:10:56.366 --> 00:10:59.486 A:middle
and is now added as a repository
that I can checkout from.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:00.746 --> 00:11:02.796 A:middle
Now when I go back
to the Welcome window

00:11:02.906 --> 00:11:04.766 A:middle
and select checkout
an existing project,

00:11:05.356 --> 00:11:08.856 A:middle
we see that that repository
has now been added.

00:11:08.896 --> 00:11:13.026 A:middle
I can also star any of these
repositories and have them show

00:11:13.026 --> 00:11:14.086 A:middle
up in the favorite section.

00:11:15.326 --> 00:11:17.456 A:middle
For now, I'm going to
check out a copy of WebKit.

00:11:18.456 --> 00:11:20.476 A:middle
Now this is the root
URL to the repository

00:11:21.816 --> 00:11:24.486 A:middle
but since there's only one
project on here it was able

00:11:24.486 --> 00:11:27.606 A:middle
to automatically
discover the chunk folder,

00:11:27.606 --> 00:11:29.446 A:middle
the branches folder
and the tags folder

00:11:29.876 --> 00:11:32.476 A:middle
and just showed me the list of
branches I can checkout from.

00:11:33.416 --> 00:11:34.476 A:middle
So I want to check out chunk.

00:11:35.466 --> 00:11:39.876 A:middle
So I'm going to click next and
check that out to my desktop.

00:11:41.216 --> 00:11:43.766 A:middle
So now Xcode is checking
out that working copy

00:11:45.096 --> 00:11:49.886 A:middle
and when it's done it will
search through the Checkout

00:11:50.306 --> 00:11:52.916 A:middle
and find automatically
any Xcode projects

00:11:52.916 --> 00:11:54.626 A:middle
or workspaces and opens them.

00:11:54.896 --> 00:11:57.526 A:middle
If there are more than
one, it'll let you choose

00:11:57.526 --> 00:11:58.476 A:middle
which one you want to open.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:00.426 --> 00:12:03.376 A:middle
So since there's only one it
just showed me the workspace.

00:12:03.886 --> 00:12:04.856 A:middle
And now we can take a look

00:12:04.856 --> 00:12:07.106 A:middle
at the brand new Source
Control menu at the top here.

00:12:08.246 --> 00:12:11.786 A:middle
When I click Source Control
we see the one working copy

00:12:11.916 --> 00:12:14.836 A:middle
that is part of this workspace
and that I just checked

00:12:14.836 --> 00:12:17.346 A:middle
out chunk and so the
current branch is chunk.

00:12:18.656 --> 00:12:21.316 A:middle
All of our branching
operations such as new branch,

00:12:21.416 --> 00:12:25.336 A:middle
switching to branches, merging
branches are all in here.

00:12:25.996 --> 00:12:29.326 A:middle
You can also configure a couple
of options on a working copy.

00:12:29.646 --> 00:12:30.676 A:middle
I'll talk about that later.

00:12:32.216 --> 00:12:36.196 A:middle
There's also a way to get to
checkout from in here as well

00:12:36.196 --> 00:12:38.866 A:middle
as the workspace wide
operations like commit, push,

00:12:39.126 --> 00:12:40.896 A:middle
update, refreshing status.

00:12:41.546 --> 00:12:43.586 A:middle
You can discard all
of the changes and all

00:12:43.586 --> 00:12:46.656 A:middle
of the working copies in
your workspace using Xcode 5.

00:12:47.256 --> 00:12:51.466 A:middle
You can do file, specific
operations like adding,

00:12:51.526 --> 00:12:53.376 A:middle
discarding changes
in a specific file

00:12:53.376 --> 00:12:54.816 A:middle
or marking files
as resolved here.

00:12:55.486 --> 00:12:59.096 A:middle
Let's take a look at this
new history option now.

00:12:59.236 --> 00:13:02.726 A:middle
So I click that and Xcode has
now loaded all the history

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:02.726 --> 00:13:04.326 A:middle
for this workspace.

00:13:04.756 --> 00:13:07.086 A:middle
There's only one working
copy in this workspace

00:13:07.336 --> 00:13:09.696 A:middle
so this is a very simple
view of just that one.

00:13:09.896 --> 00:13:11.876 A:middle
Eric will show you a more
complex example later.

00:13:11.876 --> 00:13:13.826 A:middle
So you can scroll
through all these.

00:13:14.046 --> 00:13:16.806 A:middle
But I know that I have a
specific commit message

00:13:16.806 --> 00:13:17.616 A:middle
that I'm looking for.

00:13:17.976 --> 00:13:20.546 A:middle
So there's now a search
field up here at the top.

00:13:20.546 --> 00:13:22.476 A:middle
I'm curious about
searching for stuff

00:13:22.796 --> 00:13:24.626 A:middle
that touched the CSS support.

00:13:25.226 --> 00:13:28.886 A:middle
So I type in CSS and now
Xcode searched the subversion

00:13:28.886 --> 00:13:33.046 A:middle
repository for commit
messages referencing CSS.

00:13:33.296 --> 00:13:34.916 A:middle
So there's a particular
commit down here

00:13:34.916 --> 00:13:36.126 A:middle
that I was interested in.

00:13:36.996 --> 00:13:38.366 A:middle
So let's take a look
at this one.

00:13:38.706 --> 00:13:41.626 A:middle
We see who committed it,
when it was committed,

00:13:43.356 --> 00:13:47.356 A:middle
the revision number,
the commit message

00:13:47.356 --> 00:13:50.516 A:middle
for this particular commit
and there's also this option

00:13:50.516 --> 00:13:53.546 A:middle
to show the modified
files for this commit.

00:13:54.146 --> 00:13:58.956 A:middle
So when I click that, we now see
a sheet that has all the files

00:13:58.956 --> 00:14:01.296 A:middle
that were changed as part
of that commit and allows me

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:01.296 --> 00:14:02.526 A:middle
to look at the changes.

00:14:02.996 --> 00:14:05.816 A:middle
On the right side here we have
the version of this file prior

00:14:06.066 --> 00:14:10.266 A:middle
to the commit and then on the
left what was actually changed.

00:14:10.876 --> 00:14:13.116 A:middle
So you can just go
through all of these files

00:14:13.416 --> 00:14:17.066 A:middle
and see exactly what
changed in a commit.

00:14:17.066 --> 00:14:20.616 A:middle
So we just took a look at how
to set up an account as well

00:14:20.616 --> 00:14:24.146 A:middle
as a little preview of the
Source Control menu, checkout

00:14:25.536 --> 00:14:29.276 A:middle
and how it can auto
discover branches

00:14:29.276 --> 00:14:30.626 A:middle
for a subversion repository.

00:14:32.516 --> 00:14:37.036 A:middle
And also when you go to set
up in Checkout a new URL

00:14:37.036 --> 00:14:39.356 A:middle
that you've never checked out
from, it'll automatically set

00:14:39.356 --> 00:14:42.036 A:middle
up the account for you,
asking credentials if needed.

00:14:42.566 --> 00:14:46.906 A:middle
But that was a really simple
case for checking out.

00:14:46.906 --> 00:14:50.876 A:middle
Let's talk about more advanced
setups, multiple working copies.

00:14:52.306 --> 00:14:55.346 A:middle
Many projects aggregate
multiple working copies

00:14:55.496 --> 00:14:56.946 A:middle
into a single workspace.

00:14:57.416 --> 00:15:00.246 A:middle
You'll have a repository
for your main app

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.246 --> 00:15:03.666 A:middle
and you may be using some Open
Source tools as part of your app

00:15:04.266 --> 00:15:06.116 A:middle
and those come from
different repositories.

00:15:06.636 --> 00:15:09.826 A:middle
Well we want to make
it really easy to set

00:15:09.826 --> 00:15:11.306 A:middle
up new developers on your team.

00:15:11.876 --> 00:15:15.506 A:middle
And we also want to help
you move away from things

00:15:15.506 --> 00:15:18.616 A:middle
like subversion externals
and Git submodules.

00:15:18.616 --> 00:15:21.966 A:middle
Now those work great when
you're always using Git

00:15:21.966 --> 00:15:25.116 A:middle
or always using Subversion but
you might be trying to mix those

00:15:25.116 --> 00:15:28.586 A:middle
and it's hard to have one talk
to the other automatically.

00:15:30.476 --> 00:15:33.116 A:middle
So Xcode's in this
unique position

00:15:33.306 --> 00:15:34.726 A:middle
where it knows all
this information

00:15:34.966 --> 00:15:36.646 A:middle
and can package it
all up for you.

00:15:41.256 --> 00:15:42.376 A:middle
So how's this work?

00:15:42.376 --> 00:15:45.906 A:middle
So when you first open your
project, it contains all

00:15:45.906 --> 00:15:49.906 A:middle
of the working copies into this
metadata that Xcode will use.

00:15:50.816 --> 00:15:54.046 A:middle
You can manage this via the
Source Control menu telling it

00:15:54.046 --> 00:15:56.286 A:middle
to include certain
working copies or not

00:15:56.556 --> 00:15:58.866 A:middle
and whether those are
required to build your project.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:00.436 --> 00:16:03.866 A:middle
So this metadata is
called Source Control data

00:16:03.956 --> 00:16:04.606 A:middle
when committing.

00:16:05.696 --> 00:16:08.676 A:middle
It lives in your workspace
in your shared data folder

00:16:09.056 --> 00:16:11.036 A:middle
as your project name
.xccheckout.

00:16:11.366 --> 00:16:13.866 A:middle
You're going to want to be
committing this so that all

00:16:13.946 --> 00:16:16.736 A:middle
of your other developers
can take advantage

00:16:16.736 --> 00:16:18.526 A:middle
of this new functionality
in Xcode 5.

00:16:19.116 --> 00:16:24.626 A:middle
You can access this new
functionality from the recents

00:16:24.936 --> 00:16:26.426 A:middle
on checking out a
particular project

00:16:26.426 --> 00:16:27.456 A:middle
that you've checkout recently

00:16:27.826 --> 00:16:32.216 A:middle
or when you open a
workspace it sees

00:16:32.946 --> 00:16:34.876 A:middle
that there are missing
working copies

00:16:35.586 --> 00:16:37.676 A:middle
and gives you a dialogue
asking you

00:16:37.676 --> 00:16:40.176 A:middle
to checkout other
working copies.

00:16:40.176 --> 00:16:43.686 A:middle
So let's take a quick
look at this.

00:16:45.136 --> 00:16:48.906 A:middle
All right, so let's go back
to Xcode and we're going

00:16:48.906 --> 00:16:50.516 A:middle
to click checkout an
existing project again.

00:16:51.776 --> 00:16:55.616 A:middle
Now I have a project that's
hosted on our OS X server

00:16:55.616 --> 00:16:59.146 A:middle
and I'm going to check that out.

00:16:59.446 --> 00:17:02.586 A:middle
This particular project
only had one branch

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:02.626 --> 00:17:04.756 A:middle
so it didn't even ask me which
branch I wanted to checkout.

00:17:05.476 --> 00:17:07.006 A:middle
I'm going to check that
out to the desktop.

00:17:07.935 --> 00:17:10.955 A:middle
And we see Xcode has now
opened the workspace for this

00:17:11.516 --> 00:17:12.816 A:middle
and we can see over
here on the left,

00:17:12.906 --> 00:17:15.386 A:middle
there's another project
reference that is read.

00:17:16.816 --> 00:17:18.526 A:middle
We won't be able to build
unless we have that.

00:17:19.286 --> 00:17:23.516 A:middle
So since I committed the Source
Control data, Xcode is asking me

00:17:23.516 --> 00:17:25.636 A:middle
if I want to checkout
additional working copies

00:17:25.636 --> 00:17:27.226 A:middle
that are required
for this project.

00:17:27.226 --> 00:17:28.676 A:middle
So I'll click checkout

00:17:28.676 --> 00:17:33.066 A:middle
and it found exactly
one that I was missing.

00:17:33.386 --> 00:17:35.206 A:middle
That's the one that contains
this missing project.

00:17:36.386 --> 00:17:40.226 A:middle
So it tells me the name
of the working copy,

00:17:40.706 --> 00:17:43.986 A:middle
where to get it from, allows
me to uncheck it if I decide

00:17:43.986 --> 00:17:45.756 A:middle
that I don't want to actually
check this out right now

00:17:46.806 --> 00:17:50.076 A:middle
and lets me see all of the
branches, this one only has one

00:17:50.076 --> 00:17:51.106 A:middle
so I'm going to keep Master.

00:17:51.666 --> 00:17:54.296 A:middle
When I click next,
it checks it out.

00:17:55.046 --> 00:17:58.256 A:middle
But if we see here on the finder
we have this JogR application

00:17:58.256 --> 00:18:01.936 A:middle
which you may have seen in some
of the other tools sessions,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:02.766 --> 00:18:05.556 A:middle
and now there is this libraries
folder next to it that appeared

00:18:05.556 --> 00:18:08.366 A:middle
after I checked out
additional working copies.

00:18:09.076 --> 00:18:11.976 A:middle
So if I look in there,
there's that working copy.

00:18:12.766 --> 00:18:14.316 A:middle
Xcode knew that as part

00:18:14.316 --> 00:18:19.416 A:middle
of the workspace the
other project was relative

00:18:19.616 --> 00:18:23.946 A:middle
to the main project inside of
a library folder and recreated

00:18:23.946 --> 00:18:25.816 A:middle
that file system
structure for me.

00:18:26.176 --> 00:18:28.596 A:middle
I didn't have to tell it
where to check it out from

00:18:28.816 --> 00:18:33.146 A:middle
or where to check it out to.

00:18:33.276 --> 00:18:36.676 A:middle
So now if I go back to
Xcode, I know that I'm going

00:18:36.676 --> 00:18:38.976 A:middle
to be adding some
more functionality

00:18:38.976 --> 00:18:41.616 A:middle
to this Jogging application
particularly I want

00:18:41.616 --> 00:18:42.606 A:middle
to add swimming support.

00:18:42.606 --> 00:18:44.876 A:middle
I'm not sure why you would want
to go swimming with your phone

00:18:45.036 --> 00:18:46.006 A:middle
but maybe someone will.

00:18:46.006 --> 00:18:51.656 A:middle
So I'm going to go into
my documents folder

00:18:51.746 --> 00:18:53.786 A:middle
where I have this
new SwimKit library.

00:18:53.856 --> 00:18:57.306 A:middle
I'm going to drag it into
the libraries folder,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:01.356 --> 00:19:04.306 A:middle
look at the project and add
that project into Xcode.

00:19:04.306 --> 00:19:08.506 A:middle
Now Xcode's asking me if I want
to share this working copy.

00:19:08.766 --> 00:19:11.056 A:middle
It realizes that this
is a new working copy

00:19:11.056 --> 00:19:13.986 A:middle
that I didn't have before in
my workspace and wants to know

00:19:13.986 --> 00:19:15.776 A:middle
if I want to add it to
my Source Control data.

00:19:16.496 --> 00:19:20.836 A:middle
I do, so I'm going to click yes.

00:19:20.836 --> 00:19:23.776 A:middle
Now if I look in the Source
Control menu there's now

00:19:24.036 --> 00:19:27.226 A:middle
yet another working copy and it
also says what branch it's on.

00:19:28.596 --> 00:19:31.636 A:middle
Now I want to configure a couple
of options on this working copy

00:19:31.756 --> 00:19:33.976 A:middle
so I'm going to click configure.

00:19:34.776 --> 00:19:38.666 A:middle
Now we see here a
sheet that has a path

00:19:38.666 --> 00:19:41.486 A:middle
to the local working copy,
where it is on my disc,

00:19:41.746 --> 00:19:45.216 A:middle
as well as where it came from,
now that's the information

00:19:45.216 --> 00:19:47.586 A:middle
that we're going to use as
part of the Source Control data

00:19:47.876 --> 00:19:50.606 A:middle
to tell other developers
where to check this out from.

00:19:51.406 --> 00:19:54.376 A:middle
And we have a checkbox to
include this working copy

00:19:54.476 --> 00:19:56.216 A:middle
in that new checkout workflow.

00:19:57.126 --> 00:20:00.116 A:middle
Currently it's set to optional
but I know that we're going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.116 --> 00:20:00.876 A:middle
to soon require this to build.

00:20:01.136 --> 00:20:03.196 A:middle
So I'm going to select required.

00:20:05.436 --> 00:20:07.386 A:middle
There's also a couple
of other options in here

00:20:07.496 --> 00:20:11.596 A:middle
such as configuring remotes
for my Git repository as well

00:20:11.596 --> 00:20:13.816 A:middle
as branches where I can
add and remove branches.

00:20:14.506 --> 00:20:17.916 A:middle
It also shows all of the
remote branches in the remotes.

00:20:20.476 --> 00:20:24.206 A:middle
So now since I just changed
that Source Control data file,

00:20:24.206 --> 00:20:26.896 A:middle
I know that I need to commit
the changes that I did to it

00:20:27.076 --> 00:20:29.256 A:middle
so that all of my coworkers
can take advantage of this.

00:20:29.256 --> 00:20:34.056 A:middle
So I'm going to go to Source
Control, commit and we see

00:20:34.056 --> 00:20:36.176 A:middle
that indeed I did
change that file

00:20:36.426 --> 00:20:38.326 A:middle
and I also changed the
workspace settings file

00:20:38.536 --> 00:20:41.076 A:middle
because I added a new
project to the workspace.

00:20:41.626 --> 00:20:45.676 A:middle
So I'm going to drag
[inaudible] commit message

00:20:46.286 --> 00:20:48.946 A:middle
and we can also push to
remotes automatically

00:20:48.946 --> 00:20:49.696 A:middle
since I'm using Git.

00:20:49.696 --> 00:20:52.896 A:middle
So I'm going to select
push to remotes and then

00:20:53.416 --> 00:20:55.286 A:middle
when I commit two files in push,

00:20:55.536 --> 00:20:57.116 A:middle
it asks me which remotes
I want to push to.

00:20:57.776 --> 00:20:59.686 A:middle
Now pushing it to the
remote makes it so that all

00:20:59.686 --> 00:21:01.496 A:middle
of my coworkers can
get access to it

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:01.496 --> 00:21:03.226 A:middle
when they update their
local working copies.

00:21:04.446 --> 00:21:09.066 A:middle
So I'm going to commit
and push and now

00:21:09.146 --> 00:21:11.396 A:middle
that that Source Control
data file is updated

00:21:11.616 --> 00:21:14.186 A:middle
so other developers will be
able to automatically checkout

00:21:14.186 --> 00:21:15.656 A:middle
that SwimKit from within Xcode.

00:21:16.706 --> 00:21:19.936 A:middle
First though, I know that since
we're going to be doing a lot

00:21:19.936 --> 00:21:24.956 A:middle
of work on the SwimKit, I'm
going to be adding a new branch

00:21:24.996 --> 00:21:29.256 A:middle
to JogR so that I don't impact
the main line of my code.

00:21:29.256 --> 00:21:31.186 A:middle
So I'm going to select
new branch,

00:21:32.386 --> 00:21:34.066 A:middle
and it asks me what I
want to name my branch.

00:21:34.596 --> 00:21:36.066 A:middle
Since we're adding
swimming support to this,

00:21:36.176 --> 00:21:40.916 A:middle
I think I'll call
it Surf and Turf.

00:21:40.916 --> 00:21:43.826 A:middle
Now when you create a new
branch it automatically branches

00:21:43.976 --> 00:21:45.706 A:middle
from your current branch.

00:21:46.286 --> 00:21:48.646 A:middle
So I'll click create.

00:21:49.186 --> 00:21:55.536 A:middle
So it created the branch and
also as part of creating it,

00:21:55.836 --> 00:21:57.976 A:middle
it automatically switched
to it which I can see here

00:21:57.976 --> 00:21:58.966 A:middle
in the Source Control menu.

00:21:59.606 --> 00:22:02.706 A:middle
Now since I just created
this branch locally in Git,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:03.046 --> 00:22:04.976 A:middle
I know that all my coworkers
are going to be wanting

00:22:04.976 --> 00:22:06.916 A:middle
to make changes to it
as well so I'm going

00:22:06.916 --> 00:22:08.266 A:middle
to push this new branch.

00:22:08.746 --> 00:22:10.686 A:middle
When I go to push we see

00:22:10.686 --> 00:22:14.476 A:middle
that the JogR working
copy now has a new branch

00:22:14.476 --> 00:22:16.646 A:middle
that does not exist
on the remote

00:22:16.646 --> 00:22:18.066 A:middle
and gives me the
option to create it.

00:22:18.746 --> 00:22:23.256 A:middle
So I want to do that and
I'll push that new branch.

00:22:23.716 --> 00:22:27.026 A:middle
Now, since I just added
yet another working copy

00:22:27.096 --> 00:22:32.396 A:middle
to this workspace I know
that any new developers

00:22:32.396 --> 00:22:35.256 A:middle
on our team might want to be
checking that out as well.

00:22:35.256 --> 00:22:37.986 A:middle
So I'm going to actually
switch to my bosses account.

00:22:38.136 --> 00:22:40.716 A:middle
I happen to have his password
although that's not very secure.

00:22:42.216 --> 00:22:46.526 A:middle
So I'll switch to his
account and Xcode's launched

00:22:46.776 --> 00:22:47.926 A:middle
and so I'm going
to click checkout.

00:22:48.916 --> 00:22:51.596 A:middle
He has his OS X server
set up and so it shows all

00:22:51.596 --> 00:22:54.236 A:middle
of the repositories hosted on
his OS X server automatically.

00:22:54.436 --> 00:22:58.116 A:middle
I'm going to click the JogR
repository and check that out.

00:22:58.896 --> 00:23:01.506 A:middle
Now we see because I have
two branches that asks me

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:01.506 --> 00:23:02.536 A:middle
which one I want to check out.

00:23:03.086 --> 00:23:04.656 A:middle
He's not working on
any new features just

00:23:04.656 --> 00:23:06.716 A:middle
yet so I'm just going
to checkout Master.

00:23:07.316 --> 00:23:10.416 A:middle
It asks me to where I want
to check it out and I'm going

00:23:10.416 --> 00:23:12.946 A:middle
to check it out to my desktop
and it has checked it out.

00:23:12.946 --> 00:23:16.386 A:middle
And it as well has
now asked me to check

00:23:16.386 --> 00:23:17.746 A:middle
out additional working copies

00:23:17.966 --> 00:23:21.156 A:middle
because now there are two
read references to projects

00:23:21.156 --> 00:23:23.836 A:middle
that aren't part of
this workspace just yet.

00:23:24.306 --> 00:23:25.416 A:middle
So I'm going to click checkout

00:23:25.936 --> 00:23:30.586 A:middle
and now it found
those working copies.

00:23:30.586 --> 00:23:33.236 A:middle
And we see here because
I made SwimKit required,

00:23:33.436 --> 00:23:35.826 A:middle
I actually don't have
the option to uncheck it.

00:23:37.336 --> 00:23:40.706 A:middle
When I click next it created
that library folder next to JogR

00:23:41.456 --> 00:23:46.516 A:middle
and has all of those
files ready to go.

00:23:46.566 --> 00:23:50.736 A:middle
All right, so we just saw the
brand new Checkout workflow

00:23:51.556 --> 00:23:53.086 A:middle
and how it's much
more streamlined.

00:23:54.356 --> 00:23:57.396 A:middle
We also saw the branch
integration

00:23:57.396 --> 00:24:01.646 A:middle
in the new checkout workflow
including our multiple working

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:01.646 --> 00:24:02.366 A:middle
copy support.

00:24:02.366 --> 00:24:06.586 A:middle
We also talked about the
single point to manage accounts

00:24:06.636 --> 00:24:07.836 A:middle
in the accounts preferences.

00:24:08.746 --> 00:24:11.836 A:middle
And the great new Source
Control menu which takes all

00:24:11.836 --> 00:24:14.276 A:middle
of your working copies and
puts them right at the top

00:24:14.276 --> 00:24:19.156 A:middle
of that menu so that you
can easily see them and all

00:24:19.156 --> 00:24:20.696 A:middle
of the branching
workflows as part

00:24:20.696 --> 00:24:23.686 A:middle
of those working copies
are up there as well.

00:24:24.906 --> 00:24:27.436 A:middle
And also showing
the current branch

00:24:27.516 --> 00:24:28.656 A:middle
which I think is really great.

00:24:30.216 --> 00:24:32.376 A:middle
We also showed the new
history with search

00:24:32.926 --> 00:24:35.746 A:middle
and the new Subversion
1.7 support.

00:24:37.756 --> 00:24:39.836 A:middle
So now I'd like to invite
Eric Dudiak up to talk

00:24:39.836 --> 00:24:40.976 A:middle
about collaborating
with OS X server.

00:24:41.516 --> 00:24:45.636 A:middle
[ Applause ]

00:24:46.136 --> 00:24:47.726 A:middle
&gt;&gt; Eric Dudiak: My name is Eric
Dudiak and I'm going to talk

00:24:47.726 --> 00:24:49.446 A:middle
about some of the great
new features we've added

00:24:49.446 --> 00:24:51.816 A:middle
to Xcode 5 and OS X server.

00:24:52.396 --> 00:24:59.146 A:middle
So the Xcode service on OS X
server is a great end-to-end

00:24:59.146 --> 00:25:00.136 A:middle
collaboration tool.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:00.666 --> 00:25:03.226 A:middle
We've added one of the most
requested features to Xcode

00:25:04.166 --> 00:25:07.246 A:middle
which is the hosting of
Git remote repositories.

00:25:07.606 --> 00:25:11.096 A:middle
It has never been easier
to set up a new project

00:25:11.096 --> 00:25:14.156 A:middle
and have both the Git repository
created locally for your project

00:25:14.156 --> 00:25:15.356 A:middle
as well as up on the server.

00:25:16.196 --> 00:25:18.196 A:middle
This is a great way to make
sure your codes always backed

00:25:18.196 --> 00:25:20.016 A:middle
up so there's no
single point of failure

00:25:20.016 --> 00:25:22.426 A:middle
where if you lost a machine,
all your code would be gone.

00:25:22.596 --> 00:25:26.666 A:middle
One of the other great
features of OS X server

00:25:26.666 --> 00:25:29.036 A:middle
and the Xcode service on
it is automated testing.

00:25:29.116 --> 00:25:31.016 A:middle
I'm sure you've seen a lot
about this earlier this week,

00:25:31.866 --> 00:25:35.526 A:middle
is a great feature where you
can see all your unit tests run

00:25:35.526 --> 00:25:36.706 A:middle
continuously on the server.

00:25:37.266 --> 00:25:40.236 A:middle
This gives you a great way to
see when code might regress

00:25:40.386 --> 00:25:42.496 A:middle
and you can use Source
Control to then figure

00:25:42.496 --> 00:25:45.026 A:middle
out what change might have
actually caused that regression.

00:25:45.806 --> 00:25:47.946 A:middle
So every bot when it's run

00:25:47.946 --> 00:25:50.746 A:middle
and does an integration will
show you a list of the commits

00:25:50.746 --> 00:25:51.886 A:middle
that were part of
that integration.

00:25:52.206 --> 00:25:53.706 A:middle
You can then, since
we're integrated

00:25:53.706 --> 00:25:57.256 A:middle
into the ID see exactly what
source changes were made

00:25:57.256 --> 00:25:59.456 A:middle
in the version editor as
part of those commits.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.486 --> 00:26:02.916 A:middle
Finally one of the
other great features

00:26:02.986 --> 00:26:06.296 A:middle
of the OS X server is
the archive of releases.

00:26:06.526 --> 00:26:10.016 A:middle
We highly recommend doing
this as a nightly build bot.

00:26:10.566 --> 00:26:12.506 A:middle
And what that will give
you is a great history

00:26:12.506 --> 00:26:14.226 A:middle
of your application as
it's been developed.

00:26:14.916 --> 00:26:15.746 A:middle
Every morning when you come

00:26:15.746 --> 00:26:18.026 A:middle
into work you'll have
a newly built version

00:26:18.026 --> 00:26:20.526 A:middle
of your application that
shows you what's been worked

00:26:20.526 --> 00:26:21.416 A:middle
on in the past day.

00:26:21.806 --> 00:26:24.016 A:middle
This also allows you to
easily track regressions.

00:26:24.116 --> 00:26:26.756 A:middle
You can go back and see previous
versions of your application,

00:26:26.756 --> 00:26:28.386 A:middle
run it on a device and figure

00:26:28.386 --> 00:26:29.816 A:middle
out when a regression
was introduced.

00:26:30.946 --> 00:26:32.836 A:middle
You can then use Source
Control to figure out exactly

00:26:32.836 --> 00:26:33.746 A:middle
which commit caused

00:26:33.746 --> 00:26:36.106 A:middle
that regression once
you've found what day

00:26:36.366 --> 00:26:39.126 A:middle
that roughly happened in.

00:26:39.716 --> 00:26:43.306 A:middle
So for more information about
OS X server and Xcode 5,

00:26:43.356 --> 00:26:45.856 A:middle
I highly recommend reviewing
the Continuous integration

00:26:45.856 --> 00:26:48.046 A:middle
with Xcode 5 session
from earlier this week.

00:26:48.336 --> 00:26:51.486 A:middle
It provided a lot of information
about how to create a bot,

00:26:51.486 --> 00:26:53.476 A:middle
how to set up server
and just a lot of things

00:26:53.476 --> 00:26:55.626 A:middle
that we're not going to have
time to talk about today.

00:26:55.626 --> 00:26:57.036 A:middle
We're going to talk mostly
about the Source Control

00:26:57.036 --> 00:26:58.336 A:middle
and interaction with the server.

00:26:58.336 --> 00:27:03.436 A:middle
So let's look back at those
3 C's of Source Control

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:03.436 --> 00:27:05.856 A:middle
that Kevin was talking
about earlier, confidence,

00:27:05.856 --> 00:27:08.306 A:middle
compartmentalization
and collaboration.

00:27:09.396 --> 00:27:10.926 A:middle
One of the key features
of Source Control

00:27:10.926 --> 00:27:13.096 A:middle
that really brings all
these together is branching.

00:27:14.536 --> 00:27:16.046 A:middle
So I know we've all
been in this position

00:27:16.046 --> 00:27:18.966 A:middle
where maybe you've been
working on your code for a while

00:27:18.966 --> 00:27:21.146 A:middle
and you realize that this
change is really, really big

00:27:21.146 --> 00:27:23.196 A:middle
and you don't ever feel like
you're ready to commit it

00:27:23.196 --> 00:27:24.206 A:middle
into your mainline code.

00:27:24.206 --> 00:27:25.886 A:middle
And then you're in
this situation

00:27:25.886 --> 00:27:27.376 A:middle
where you have all
these changes locally,

00:27:27.376 --> 00:27:28.936 A:middle
either they're committed locally
and you haven't pushed them

00:27:28.936 --> 00:27:30.896 A:middle
to your remote or they're
not even committed.

00:27:32.176 --> 00:27:33.806 A:middle
This is a really bad idea

00:27:33.806 --> 00:27:35.926 A:middle
because now all those
changes are in one place

00:27:35.926 --> 00:27:37.426 A:middle
and you don't have
any backup of them.

00:27:37.886 --> 00:27:40.296 A:middle
Branching is a great
way to get around that.

00:27:40.296 --> 00:27:43.396 A:middle
You can create a branch and then
it's not in your mainline code

00:27:43.396 --> 00:27:44.576 A:middle
and you can work
on it separately.

00:27:44.956 --> 00:27:47.726 A:middle
This gives you the confidence
that your code is always backed

00:27:47.726 --> 00:27:51.196 A:middle
up when you push it to a remote
server or commit to subversion.

00:27:52.416 --> 00:27:55.776 A:middle
This is obviously a key
feature of compartmentalization

00:27:55.776 --> 00:27:58.606 A:middle
because now you can work
on your branch separately

00:27:58.606 --> 00:27:59.536 A:middle
from your mainline code.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:00.176 --> 00:28:01.806 A:middle
Let's say you have an app
already in the App Store

00:28:02.446 --> 00:28:03.926 A:middle
and that's your Master
branch now.

00:28:03.926 --> 00:28:07.796 A:middle
If you want to start working
on version 2.0 of that app,

00:28:08.006 --> 00:28:09.796 A:middle
you'd probably want to
start creating or start

00:28:09.796 --> 00:28:13.316 A:middle
by creating a branch for new
features which aren't going

00:28:13.316 --> 00:28:14.846 A:middle
to be committed to
your mainline code.

00:28:14.846 --> 00:28:17.156 A:middle
So this way if you have to do a
bot update while you're working

00:28:17.156 --> 00:28:19.326 A:middle
on a big feature, you
can quickly switch back

00:28:19.326 --> 00:28:22.506 A:middle
to your mainline branch and
make those small changes

00:28:22.506 --> 00:28:24.736 A:middle
and submit it to the App
Store, then go right back

00:28:24.736 --> 00:28:29.656 A:middle
to your feature branch and
start working on that again.

00:28:30.996 --> 00:28:33.656 A:middle
Finally, branching
is a great way

00:28:33.746 --> 00:28:34.996 A:middle
to collaborate with
your coworkers.

00:28:35.716 --> 00:28:38.416 A:middle
It allows you to be
insulated from all the changes

00:28:38.416 --> 00:28:40.326 A:middle
that they're making while
you're working on a feature.

00:28:40.326 --> 00:28:42.766 A:middle
So you're not constantly dealing
with changes of your coworkers,

00:28:43.006 --> 00:28:45.876 A:middle
you can focus on your feature
and deal with their changes

00:28:45.876 --> 00:28:47.806 A:middle
at the end when you want to
merge it or if you decide

00:28:47.806 --> 00:28:50.696 A:middle
to pull their changes
in at specific points.

00:28:51.766 --> 00:28:53.656 A:middle
It also gives you a great
way to do code reviews.

00:28:54.086 --> 00:28:56.726 A:middle
So if you do all this work
on a branch, when it's time

00:28:56.726 --> 00:28:57.846 A:middle
to merge it you can
simply have one

00:28:57.846 --> 00:28:59.806 A:middle
of your coworkers
actually take a look

00:28:59.806 --> 00:29:00.966 A:middle
at the code and do the merge.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:02.556 --> 00:29:04.656 A:middle
Make sure that you're always
checking each other's code

00:29:04.656 --> 00:29:07.216 A:middle
and that everything works
the way you expect it to.

00:29:08.616 --> 00:29:11.646 A:middle
So as I was saying branches
are great for working in teams.

00:29:12.056 --> 00:29:12.626 A:middle
You don't always want

00:29:12.626 --> 00:29:13.866 A:middle
to see every change
your coworker is making

00:29:13.866 --> 00:29:15.476 A:middle
as you're working
on a big feature,

00:29:15.476 --> 00:29:17.726 A:middle
you want to be somewhat
insulated from that.

00:29:18.276 --> 00:29:21.366 A:middle
So we highly recommend
in Xcode using branches

00:29:21.466 --> 00:29:22.466 A:middle
for developing features.

00:29:23.106 --> 00:29:25.196 A:middle
This is going to keep
your mainline code

00:29:25.426 --> 00:29:27.556 A:middle
from ever getting impacted
by feature development

00:29:27.556 --> 00:29:30.926 A:middle
and so you can quickly release
small updates as needed.

00:29:32.976 --> 00:29:35.736 A:middle
Also with OS X server, that
automated testing I was talking

00:29:35.736 --> 00:29:38.146 A:middle
about and you've heard
about earlier this week is

00:29:38.146 --> 00:29:39.706 A:middle
on a per branch basis.

00:29:39.986 --> 00:29:41.726 A:middle
This means that each
bot is aware

00:29:41.726 --> 00:29:43.206 A:middle
of which branch it's
currently testing

00:29:43.206 --> 00:29:45.886 A:middle
and you can create a new bot
as you create new branches.

00:29:46.456 --> 00:29:49.256 A:middle
This way is unit test
change, you can verify

00:29:49.256 --> 00:29:51.376 A:middle
that each branch
is in a good state.

00:29:52.176 --> 00:29:54.606 A:middle
This is a great way to make
sure that before you merge,

00:29:55.236 --> 00:29:57.146 A:middle
all your code is in the state
that you expect it to be in

00:29:57.146 --> 00:29:58.806 A:middle
and all your unit tests
are running successfully.

00:29:58.886 --> 00:30:02.906 A:middle
So let's look at a
high level concept

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:02.906 --> 00:30:04.216 A:middle
of what exactly is a branch.

00:30:05.046 --> 00:30:07.496 A:middle
So if we have a single
branch here, Master,

00:30:07.596 --> 00:30:10.346 A:middle
represented by two dots,
representing a few commits,

00:30:11.626 --> 00:30:13.756 A:middle
this might be sort of
the existing version

00:30:13.756 --> 00:30:15.166 A:middle
of your app in the App Store.

00:30:15.756 --> 00:30:18.246 A:middle
Now the first thing we're going
to do is create a new branch.

00:30:19.356 --> 00:30:21.706 A:middle
Right now that branch has
nothing different from Master.

00:30:22.616 --> 00:30:23.786 A:middle
It has the exact same code,

00:30:23.986 --> 00:30:26.016 A:middle
it's just essentially a
different name right now.

00:30:26.986 --> 00:30:29.166 A:middle
But the big power
to branching is

00:30:29.166 --> 00:30:30.336 A:middle
that we can commit separately.

00:30:30.876 --> 00:30:34.366 A:middle
So as we start to make
commits to this branch we see

00:30:34.366 --> 00:30:36.686 A:middle
that those changes are only
in orange, they're only

00:30:36.686 --> 00:30:38.746 A:middle
on the branch, they're
not in the Master branch.

00:30:39.266 --> 00:30:41.976 A:middle
And the other great part
is we can still commit

00:30:42.146 --> 00:30:45.536 A:middle
to the Master branch
independently of our new branch.

00:30:45.966 --> 00:30:48.246 A:middle
So we can make features
while still making those

00:30:48.246 --> 00:30:49.206 A:middle
small updates.

00:30:49.866 --> 00:30:51.436 A:middle
And this goes on,
we can continue

00:30:51.436 --> 00:30:53.396 A:middle
to keep these branches
separate up until the point

00:30:53.396 --> 00:30:55.716 A:middle
that we're actually ready to
integrate this great new feature

00:30:55.716 --> 00:30:56.956 A:middle
into our mainline code.

00:30:56.956 --> 00:31:01.366 A:middle
And at that point we'll go ahead
and merge it and now everything

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:01.366 --> 00:31:02.696 A:middle
that was on that branch is now

00:31:02.696 --> 00:31:05.126 A:middle
in the Master branch
or our mainline code.

00:31:05.126 --> 00:31:09.576 A:middle
But let's take a look at
this in a bigger picture.

00:31:09.576 --> 00:31:12.326 A:middle
Let's look at this with OS X
server and working with a team.

00:31:12.716 --> 00:31:14.706 A:middle
So here on the left
this represents sort

00:31:14.706 --> 00:31:17.556 A:middle
of a normal user working
on code on their machine.

00:31:17.666 --> 00:31:19.096 A:middle
They currently have
the Master branch.

00:31:19.566 --> 00:31:21.686 A:middle
And one of their
coworkers has made a branch

00:31:21.686 --> 00:31:23.306 A:middle
on the server and
pushed that up.

00:31:23.306 --> 00:31:25.746 A:middle
So let's talk about
branching with Git.

00:31:26.726 --> 00:31:29.416 A:middle
Git has both local branches
and remote branches.

00:31:29.806 --> 00:31:33.256 A:middle
So in this case the user on
the left does not actually have

00:31:33.376 --> 00:31:36.226 A:middle
that branch yet, it's only
available on the server.

00:31:36.966 --> 00:31:39.176 A:middle
Actually they're also
a little bit behind

00:31:39.176 --> 00:31:41.116 A:middle
on even changes to
the Master branch.

00:31:41.786 --> 00:31:43.996 A:middle
Now since Git is a distributed
Source Control system,

00:31:43.996 --> 00:31:45.476 A:middle
you have to push
and pull in order

00:31:45.476 --> 00:31:48.146 A:middle
to synchronize your local
machine with the server.

00:31:48.146 --> 00:31:51.536 A:middle
So here we're going to
do a pull and we see

00:31:51.536 --> 00:31:55.186 A:middle
that what's happened is we
got the changes on Master

00:31:55.186 --> 00:31:56.146 A:middle
and are now up to date.

00:31:56.146 --> 00:31:59.736 A:middle
And we can continue to make
changes to Master simply

00:31:59.736 --> 00:32:00.816 A:middle
by making a commit locally.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:01.206 --> 00:32:03.596 A:middle
Now committing locally in
Git does not push that change

00:32:03.596 --> 00:32:06.566 A:middle
up to the server unless you
specifically tell us to in Xcode

00:32:06.566 --> 00:32:08.236 A:middle
or later push separately.

00:32:09.196 --> 00:32:12.186 A:middle
This is an important distinction
for anyone using Subversion.

00:32:12.946 --> 00:32:14.806 A:middle
But notice that even
though we did a pull,

00:32:14.806 --> 00:32:16.396 A:middle
we still don't have
that branch locally.

00:32:17.346 --> 00:32:20.366 A:middle
In Xcode 5 we've introduced
automatic tracking branches.

00:32:20.366 --> 00:32:22.856 A:middle
A tracking branch is
simply a local branch

00:32:22.926 --> 00:32:24.086 A:middle
that tracks a remote branch.

00:32:24.856 --> 00:32:28.376 A:middle
In this case when I switch
to the branch in Xcode,

00:32:28.906 --> 00:32:31.736 A:middle
I get an automatic local
copy of the same name

00:32:32.006 --> 00:32:35.446 A:middle
that I can start working
with and can merge locally.

00:32:36.056 --> 00:32:38.286 A:middle
Now again all those changes

00:32:38.316 --> 00:32:40.406 A:middle
because Git is distributed
are just local.

00:32:40.406 --> 00:32:42.576 A:middle
And if I want to share all
this work with my coworkers,

00:32:42.816 --> 00:32:45.206 A:middle
I'm going to have to do a push.

00:32:45.696 --> 00:32:48.926 A:middle
A push takes all those changes
and puts them up on the server.

00:32:49.276 --> 00:32:51.206 A:middle
And of course since we all
have unit testing continuous

00:32:51.206 --> 00:32:54.576 A:middle
integration running when the
server sees new commits as part

00:32:54.576 --> 00:32:56.536 A:middle
of a push, it will go ahead
and run the integration

00:32:56.676 --> 00:32:58.206 A:middle
and because I checked
this beforehand,

00:32:58.466 --> 00:32:59.886 A:middle
all those unit tests
will succeed.

00:32:59.886 --> 00:33:04.296 A:middle
So let's take a look at
this in a quick little demo.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:05.286 --> 00:33:10.726 A:middle
So I'm going to login to my
account and I'm also working

00:33:10.726 --> 00:33:11.946 A:middle
on the JogR application.

00:33:12.396 --> 00:33:19.186 A:middle
Now let's open it up and
just as we saw before

00:33:19.186 --> 00:33:22.286 A:middle
since Kevin added a new project
to it with a new working copy,

00:33:22.286 --> 00:33:23.466 A:middle
I also need to check that out.

00:33:23.466 --> 00:33:25.276 A:middle
So let's get that taken
care of real quick.

00:33:25.276 --> 00:33:27.806 A:middle
And we see that it's
automatically used my user name

00:33:27.806 --> 00:33:29.846 A:middle
instead of Kevin's
to check it out.

00:33:30.696 --> 00:33:32.766 A:middle
So great and I have
all the sources.

00:33:33.056 --> 00:33:33.916 A:middle
I can verify that.

00:33:33.916 --> 00:33:37.596 A:middle
I can totally build this project
right now and have no problems.

00:33:38.096 --> 00:33:42.526 A:middle
But I made a deal with Kevin
before we came up on stage here

00:33:42.526 --> 00:33:45.626 A:middle
that if he came up first I
would take a look at his branch

00:33:45.626 --> 00:33:47.946 A:middle
and merge it in with
the Master branch.

00:33:48.136 --> 00:33:48.986 A:middle
So I'm going to go ahead

00:33:48.986 --> 00:33:53.466 A:middle
into the Source Control
menu and look at JogR.

00:33:54.386 --> 00:33:55.966 A:middle
And I'm going to
switch to a branch.

00:33:56.136 --> 00:33:58.346 A:middle
Now the only branch I
have locally is Master

00:33:58.346 --> 00:34:00.446 A:middle
and since I'm already on
that I can't switch to it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.916 --> 00:34:03.026 A:middle
However, we see that there are
two branches on the server,

00:34:03.536 --> 00:34:04.696 A:middle
Master and Surf and Turf.

00:34:04.696 --> 00:34:07.256 A:middle
So I'm going to switch to
Surf and Turf and take a look

00:34:07.256 --> 00:34:10.366 A:middle
at Kevin's branch and do
a quick code review of it.

00:34:12.376 --> 00:34:14.735 A:middle
This is creating an automatic
tracking branch locally

00:34:14.735 --> 00:34:15.866 A:middle
and switching to Surf and Turf.

00:34:16.266 --> 00:34:19.616 A:middle
If we go back into the Source
Control menu we see that I'm now

00:34:19.616 --> 00:34:20.735 A:middle
on the Surf and Turf branch.

00:34:20.735 --> 00:34:27.926 A:middle
So let's take a look and
rather than doing a really,

00:34:27.926 --> 00:34:29.346 A:middle
looking through all his code,

00:34:29.346 --> 00:34:30.786 A:middle
I'm going to do something
simple.

00:34:31.096 --> 00:34:32.706 A:middle
We wrote a few unit
tests for JogR.

00:34:32.706 --> 00:34:35.436 A:middle
So I'm going to go to the
test navigator and I see

00:34:35.436 --> 00:34:38.505 A:middle
that JogR has four unit tests
and I'm just going to run them.

00:34:38.856 --> 00:34:40.896 A:middle
Easy way to make sure that
Kevin didn't break anything.

00:34:42.485 --> 00:34:43.876 A:middle
Set the build failed.

00:34:44.446 --> 00:34:46.886 A:middle
All right, well let's take
a look at what's happened.

00:34:47.476 --> 00:34:52.106 A:middle
All right, so this is a
normal failure in a unit test.

00:34:52.106 --> 00:34:54.646 A:middle
It looks like something is
probably changed around here

00:34:54.646 --> 00:34:57.466 A:middle
and we can no longer
even build our unit test.

00:34:58.586 --> 00:35:01.606 A:middle
It looks like there's not
this particular initialization

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:01.606 --> 00:35:02.506 A:middle
method anymore.

00:35:03.186 --> 00:35:05.076 A:middle
So let's take a look
at the run data class

00:35:05.076 --> 00:35:05.896 A:middle
and see what's happen.

00:35:05.896 --> 00:35:09.486 A:middle
So I'm going to hold down
command and select run data

00:35:09.486 --> 00:35:12.896 A:middle
which is going to take me right
to the run data header file

00:35:12.896 --> 00:35:13.906 A:middle
where run data is declared.

00:35:13.906 --> 00:35:16.676 A:middle
And I'll take a look here at
this initialization method.

00:35:17.826 --> 00:35:19.246 A:middle
Pretty sure it looks
a little different

00:35:19.246 --> 00:35:21.286 A:middle
than what I saw before
in the test.

00:35:21.286 --> 00:35:26.666 A:middle
So let's open up the contextual
menu and do show blame for line.

00:35:27.986 --> 00:35:32.146 A:middle
And here we see that it was
indeed changed by Kevin recently

00:35:32.816 --> 00:35:34.796 A:middle
and it seems to be adding
support for Swimming

00:35:34.796 --> 00:35:37.206 A:middle
so it's probably on this
branch that he was playing

00:35:37.206 --> 00:35:40.216 A:middle
around with things and changed
this initialization method.

00:35:41.236 --> 00:35:43.826 A:middle
Now also importantly I can
see that Kevin committed this

00:35:43.826 --> 00:35:45.736 A:middle
at 3:30 a.m. so I'm
going to want

00:35:45.736 --> 00:35:47.196 A:middle
to take a little
closer look at this.

00:35:47.606 --> 00:35:50.936 A:middle
I'm going to go ahead
and show all the files

00:35:50.936 --> 00:35:53.536 A:middle
that he modified this
morning after the Bash.

00:35:54.426 --> 00:35:57.416 A:middle
So I can see that indeed he did
change the initialization method

00:35:57.416 --> 00:36:00.056 A:middle
to support Swimming and
it looks like it now takes

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:00.056 --> 00:36:02.476 A:middle
in an extra boolean that
it didn't have before

00:36:02.476 --> 00:36:03.256 A:middle
in our unit tests.

00:36:03.256 --> 00:36:06.596 A:middle
The rest of this looks
like pretty normal changes.

00:36:07.456 --> 00:36:12.776 A:middle
So I'm going to go ahead
and fix that unit test

00:36:12.776 --> 00:36:15.026 A:middle
by just updating the
use of the initializer.

00:36:15.376 --> 00:36:18.436 A:middle
So now I can go back to
the testing navigator

00:36:18.436 --> 00:36:20.606 A:middle
and run all those unit tests.

00:36:21.526 --> 00:36:23.956 A:middle
This time they succeed
at building

00:36:23.956 --> 00:36:26.066 A:middle
and we're running
in the simulator.

00:36:26.806 --> 00:36:32.166 A:middle
Ah, but I still don't have
green light to cross the board.

00:36:32.166 --> 00:36:36.716 A:middle
Looks like two of them are fine
but two still need a little work

00:36:36.716 --> 00:36:42.286 A:middle
and have changed as a result of
the changes in Surf and Turf.

00:36:43.086 --> 00:36:45.546 A:middle
So looks like a lot of these
are just the result of some

00:36:45.546 --> 00:36:47.226 A:middle
of the assumptions we
were making and some

00:36:47.226 --> 00:36:50.036 A:middle
of our test data has changes
involving Kevin adding new test

00:36:50.036 --> 00:36:51.806 A:middle
data for the Surf
and Turf branch.

00:36:52.596 --> 00:36:54.066 A:middle
Now I can go through
and fix all these

00:36:54.326 --> 00:36:58.966 A:middle
but luckily I have a great
little snippet of code

00:36:59.226 --> 00:37:00.196 A:middle
that just fixes all of them.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:00.196 --> 00:37:02.366 A:middle
So let's rerun the two unit
tests that were failing.

00:37:02.686 --> 00:37:04.736 A:middle
And I can of course with our
new testing support run them one

00:37:04.736 --> 00:37:04.976 A:middle
at a time.

00:37:10.046 --> 00:37:13.146 A:middle
So I can take a look at the two
that failed, run the first one

00:37:13.146 --> 00:37:15.346 A:middle
and now the second one,
all four are green.

00:37:15.456 --> 00:37:17.406 A:middle
I have a lot of confidence
that this is now

00:37:17.406 --> 00:37:18.356 A:middle
in a much better state.

00:37:19.276 --> 00:37:20.626 A:middle
Now since I made
a couple changes,

00:37:20.776 --> 00:37:21.936 A:middle
I need to go ahead
and commit those.

00:37:21.936 --> 00:37:25.096 A:middle
So I'm going to go to the
Source Control menu and commit.

00:37:25.166 --> 00:37:28.836 A:middle
And we see these are just my
updates to the unit tests.

00:37:30.216 --> 00:37:33.076 A:middle
Give it a commit message
and commit the one file.

00:37:34.526 --> 00:37:36.096 A:middle
But now the whole point
of this is I was supposed

00:37:36.096 --> 00:37:37.256 A:middle
to merge Kevin's branch.

00:37:37.256 --> 00:37:42.366 A:middle
So let's go to the Source
Control menu and where I'm

00:37:42.366 --> 00:37:45.326 A:middle
on the Surf and Turf branch
in JogR now, I want to merge

00:37:45.326 --> 00:37:47.106 A:middle
that into the Master branch.

00:37:47.466 --> 00:37:48.916 A:middle
So I'm going to go
to Surf and Turf

00:37:49.516 --> 00:37:51.446 A:middle
and select merge into branch.

00:37:51.926 --> 00:37:54.336 A:middle
There's only one branch that
I can possibly merge this into

00:37:54.336 --> 00:37:55.826 A:middle
and we're discovered
that that's Master.

00:37:56.496 --> 00:37:59.756 A:middle
Xcode will only ever show you
valid branches for merging.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.546 --> 00:38:03.166 A:middle
I can go ahead and select that
and it's going to go ahead

00:38:03.166 --> 00:38:05.236 A:middle
and determine all the
potential conflicts and issues

00:38:05.236 --> 00:38:08.836 A:middle
that may come up and it looks
like we might actually have one.

00:38:09.636 --> 00:38:10.276 A:middle
What are the odds?

00:38:10.276 --> 00:38:13.686 A:middle
So actually this happened
in a project file.

00:38:13.686 --> 00:38:15.236 A:middle
Now this is scary.

00:38:15.236 --> 00:38:18.116 A:middle
I don't want to have to
deal with doing a merge

00:38:18.116 --> 00:38:20.246 A:middle
in a project file, that
can't possibly be done.

00:38:20.756 --> 00:38:22.556 A:middle
So it looks like it's
actually not that bad.

00:38:23.196 --> 00:38:25.136 A:middle
It looks like what's happened
is something that happens a lot

00:38:25.136 --> 00:38:27.766 A:middle
which is something, a
resource file was added

00:38:28.146 --> 00:38:30.716 A:middle
on both the Master
branch and Kevin's branch.

00:38:30.716 --> 00:38:33.756 A:middle
So we have a couple of ways we
can resolve the conflict here

00:38:34.286 --> 00:38:35.866 A:middle
and these are all
displayed at the bottom.

00:38:36.076 --> 00:38:38.326 A:middle
I can either select
left and then right.

00:38:38.326 --> 00:38:42.276 A:middle
So this is going to take all
the changes on the left side

00:38:42.906 --> 00:38:46.476 A:middle
which is the Master
branch, take all those

00:38:46.476 --> 00:38:48.046 A:middle
and then take the
changes from Surf and Turf

00:38:48.046 --> 00:38:49.596 A:middle
on the right side after them.

00:38:50.046 --> 00:38:52.286 A:middle
So in this case I'll end up
with both resource files.

00:38:52.706 --> 00:38:54.076 A:middle
This is actually what I
want but let's just look

00:38:54.076 --> 00:38:55.136 A:middle
at the other merge options.

00:38:55.266 --> 00:38:57.576 A:middle
I could take just the left side

00:38:57.676 --> 00:38:59.336 A:middle
which would only give
me the resource file

00:38:59.336 --> 00:39:01.746 A:middle
from the Master branch
and discard the changes

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:01.746 --> 00:39:04.266 A:middle
that were conflicting from
the Surf and Turf branch.

00:39:05.066 --> 00:39:07.026 A:middle
I could also take just
the Surf and Turf changes

00:39:07.496 --> 00:39:10.296 A:middle
or I can take both changes
in the opposite order.

00:39:10.906 --> 00:39:12.996 A:middle
Now in most cases for
project files when dealing

00:39:12.996 --> 00:39:15.046 A:middle
with multiple files being
added, it doesn't matter

00:39:15.046 --> 00:39:17.326 A:middle
which order they're in
but we probably want both.

00:39:17.326 --> 00:39:19.476 A:middle
So I'm just going to
go ahead and take both

00:39:19.476 --> 00:39:21.976 A:middle
of those resource files and make
sure they're in the project.

00:39:22.886 --> 00:39:24.676 A:middle
And it looks like that was
the only conflict we had

00:39:24.676 --> 00:39:26.756 A:middle
so I can go ahead
and select merge.

00:39:27.586 --> 00:39:30.066 A:middle
And since I have Source Control
turned on in a remote server,

00:39:30.066 --> 00:39:35.056 A:middle
I'm not going to bother
with a Snapshot right now.

00:39:35.296 --> 00:39:38.856 A:middle
So now we've done the merge
and we can see that one

00:39:38.856 --> 00:39:39.756 A:middle
of the other things I've set

00:39:39.756 --> 00:39:42.436 A:middle
up for the Master
branch is this JogR bot.

00:39:42.636 --> 00:39:44.376 A:middle
And this JogR bot
will run integrations

00:39:44.726 --> 00:39:46.896 A:middle
so since I already ran the
unit test on the other branch,

00:39:47.196 --> 00:39:51.656 A:middle
I'm reasonably confident
that I can go ahead

00:39:51.656 --> 00:39:52.946 A:middle
and just commit and push this.

00:39:54.116 --> 00:39:58.816 A:middle
So I'm going to go to commit
and we see that I basically had

00:39:58.816 --> 00:40:00.186 A:middle
to resolve that conflict
in addition

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:00.186 --> 00:40:01.976 A:middle
to the normal merge
commit that was added.

00:40:02.916 --> 00:40:04.516 A:middle
So I resolved the
conflict and now

00:40:04.516 --> 00:40:06.496 A:middle
that I've made all the
changes that I need to make

00:40:06.496 --> 00:40:08.516 A:middle
to land Kevin's branch,
I'm going to ahead

00:40:08.516 --> 00:40:09.946 A:middle
and push that to the remote.

00:40:10.416 --> 00:40:15.526 A:middle
I'm pushing now to Master
because I've merged onto Master.

00:40:15.606 --> 00:40:17.196 A:middle
So I'm going to do
a commit and push.

00:40:17.246 --> 00:40:20.106 A:middle
It's going to take all my
working copies and push them

00:40:20.106 --> 00:40:22.946 A:middle
up to the remote server
and I can now go ahead

00:40:22.946 --> 00:40:26.386 A:middle
and fire off an integration
to just double check

00:40:26.756 --> 00:40:29.096 A:middle
that everything I
did commit is good.

00:40:29.096 --> 00:40:31.536 A:middle
Now if we go to the
Source Control menu

00:40:31.536 --> 00:40:33.296 A:middle
as Kevin was saying, we
have this history view.

00:40:34.176 --> 00:40:38.616 A:middle
And I can see that as a result
of the changes that were made,

00:40:38.616 --> 00:40:43.086 A:middle
I have now taken all the support
for Swimming and the merge

00:40:43.086 --> 00:40:44.696 A:middle
and it's now all in
the Master branch.

00:40:45.096 --> 00:40:47.636 A:middle
And here we see an example of
looking at the history sheet

00:40:47.636 --> 00:40:49.056 A:middle
across several working copies.

00:40:49.056 --> 00:40:51.286 A:middle
I can look at all of
them integrated together

00:40:51.286 --> 00:40:52.916 A:middle
so we can get a full
history of the project

00:40:53.336 --> 00:40:55.206 A:middle
or I can see just one at a time.

00:40:55.206 --> 00:40:57.396 A:middle
And again, the search
works across all of them

00:40:57.396 --> 00:40:58.746 A:middle
or whichever ones are selected.

00:40:58.746 --> 00:41:03.746 A:middle
So that's Source
Control in Xcode 5

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:03.776 --> 00:41:05.386 A:middle
with the Continuous
integration Server.

00:41:06.556 --> 00:41:08.436 A:middle
So just to recap
what we saw there

00:41:08.436 --> 00:41:10.046 A:middle
since it can be a
little confusing

00:41:10.046 --> 00:41:12.676 A:middle
to follow what's happening
in branching and merging,

00:41:14.066 --> 00:41:18.426 A:middle
on the left side we see the JogR
branch and we see Kevin's Surf

00:41:18.426 --> 00:41:22.586 A:middle
and Turf branch committed before
a couple changes were made

00:41:22.586 --> 00:41:24.296 A:middle
on the JogR branch but
it's all on the server.

00:41:24.296 --> 00:41:26.606 A:middle
So what I did was I went
ahead and pulled it down

00:41:26.606 --> 00:41:28.636 A:middle
and created a local
tracking branch.

00:41:29.156 --> 00:41:33.806 A:middle
From there I then made
a small commit in order

00:41:33.806 --> 00:41:34.976 A:middle
to fix those unit tests.

00:41:35.636 --> 00:41:36.756 A:middle
This was all local still.

00:41:37.416 --> 00:41:39.516 A:middle
And then I merged it.

00:41:39.516 --> 00:41:42.976 A:middle
Now in order for everyone else
to get the code and I went ahead

00:41:42.976 --> 00:41:44.146 A:middle
and pushed it up to the server.

00:41:44.226 --> 00:41:46.696 A:middle
And then we saw that it fired
a continuous integration

00:41:47.486 --> 00:41:49.456 A:middle
and we can verify the code,
it worked on the server.

00:41:50.056 --> 00:41:52.666 A:middle
So this is very powerful
tool for making sure

00:41:52.666 --> 00:41:54.256 A:middle
that your code's
always in a great state.

00:41:56.456 --> 00:41:58.656 A:middle
So let's review some of
the great new features

00:41:58.656 --> 00:42:01.396 A:middle
of Source Control in Xcode
5 that we've seen today.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:02.486 --> 00:42:04.896 A:middle
We've seen how the new
workflow driven Source Control

00:42:04.896 --> 00:42:07.006 A:middle
interaction is primarily
now accessed

00:42:07.006 --> 00:42:08.576 A:middle
through the top level
Source Control menu

00:42:08.576 --> 00:42:11.016 A:middle
where we have access to
the every working copy

00:42:11.016 --> 00:42:13.256 A:middle
that a project or
workspace is currently using

00:42:13.296 --> 00:42:15.726 A:middle
and what branch we're
currently on in each one.

00:42:15.726 --> 00:42:17.186 A:middle
So this is a great easy way

00:42:17.576 --> 00:42:20.876 A:middle
to quickly see what code
you're working on and be sure

00:42:20.876 --> 00:42:21.436 A:middle
that what you're working

00:42:21.436 --> 00:42:22.486 A:middle
on is what you think
you're working on.

00:42:22.926 --> 00:42:26.786 A:middle
We've also seen some of the
great new server integration

00:42:26.786 --> 00:42:29.566 A:middle
with OS X server and the
Xcode service providing

00:42:29.566 --> 00:42:32.556 A:middle
for the first time
end-to-end solution for Xcode

00:42:33.016 --> 00:42:36.256 A:middle
with one click, get
remote repository creation

00:42:36.376 --> 00:42:37.136 A:middle
with a new project.

00:42:37.396 --> 00:42:40.926 A:middle
And we've seen how we can
automatically manage multiple

00:42:40.926 --> 00:42:42.936 A:middle
working copies so we're
not dealing with a mess

00:42:42.936 --> 00:42:45.626 A:middle
of subversion externals
or get submodules.

00:42:45.836 --> 00:42:49.296 A:middle
We can easily take all this
data, put in a manifest file

00:42:49.296 --> 00:42:51.896 A:middle
in Xcode and share it with
our teammates to make sure

00:42:51.896 --> 00:42:54.136 A:middle
that everyone knows exactly
what they have to have checked

00:42:54.136 --> 00:42:55.946 A:middle
out in order to build
our projects.

00:42:56.356 --> 00:42:59.936 A:middle
This is a very powerful tool
and it just makes getting setup

00:42:59.936 --> 00:43:02.616 A:middle
with a new project for a new
team member so much easier.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:03.006 --> 00:43:04.206 A:middle
Or if you're working
with a large team

00:43:04.206 --> 00:43:05.566 A:middle
and someone adds
something that you need

00:43:05.566 --> 00:43:07.696 A:middle
and they didn't tell
you, it's all automatic.

00:43:08.006 --> 00:43:13.236 A:middle
For more information about Xcode
Source Control or OS X server,

00:43:13.696 --> 00:43:16.136 A:middle
please contact Dave Delong,
he's the app framework

00:43:16.136 --> 00:43:18.916 A:middle
and developer tools
evangelist or ask a question

00:43:18.916 --> 00:43:20.236 A:middle
on the Apple Developer forums.

00:43:20.316 --> 00:43:21.976 A:middle
I'd like to thank you very
much for coming today.

00:43:22.516 --> 00:43:27.516 A:middle
[ Applause ]

00:43:28.016 --> 00:43:37.356 A:middle
[ Silence ]

