WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:09.926 A:middle
[ Silence ]

00:00:10.426 --> 00:00:12.096 A:middle
&gt;&gt; Welcome to Accessibility
in iOS.

00:00:12.096 --> 00:00:13.976 A:middle
My name is Sam White, I am one

00:00:13.976 --> 00:00:15.986 A:middle
of the iOS Accessibility
Engineers here at Apple.

00:00:16.616 --> 00:00:17.576 A:middle
Today, I want to talk to you

00:00:17.576 --> 00:00:20.296 A:middle
about developing great
applications for everyone.

00:00:20.646 --> 00:00:21.816 A:middle
And I want to show you how to do

00:00:21.816 --> 00:00:23.636 A:middle
that by implementing
a little bit

00:00:23.636 --> 00:00:25.326 A:middle
of Accessibility in
your applications.

00:00:25.966 --> 00:00:29.676 A:middle
So before we get
started, what do we mean

00:00:29.676 --> 00:00:32.026 A:middle
when we say Accessibility
in this context?

00:00:32.296 --> 00:00:34.796 A:middle
Well, in iOS, Accessibility
is really

00:00:34.796 --> 00:00:37.196 A:middle
about supporting different
abilities and more broadly

00:00:37.196 --> 00:00:38.776 A:middle
than that, supporting
different users.

00:00:39.176 --> 00:00:41.496 A:middle
So, if you look at the
iPad and the iPhone,

00:00:41.496 --> 00:00:44.366 A:middle
you see these amazing
devices, you know, they help--

00:00:44.366 --> 00:00:46.576 A:middle
they let you communicate
with your friends,

00:00:46.576 --> 00:00:48.076 A:middle
watch movies, browse
the internet.

00:00:48.416 --> 00:00:51.786 A:middle
But the user experience of these
devices is very much one size

00:00:51.786 --> 00:00:52.336 A:middle
fits all.

00:00:53.316 --> 00:00:56.566 A:middle
And so, if we look at, you know,
two users of these devices,

00:00:56.726 --> 00:00:58.486 A:middle
no two users are
the same, you know,

00:00:58.486 --> 00:00:59.626 A:middle
so this is the problem we have.

00:00:59.966 --> 00:01:01.206 A:middle
And more specifically,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:01.556 --> 00:01:04.775 A:middle
no two users have the exact
same abilities so this is

00:01:04.775 --> 00:01:06.336 A:middle
where Accessibility
comes in on iOS.

00:01:06.816 --> 00:01:10.166 A:middle
Accessibility is the thin
layer that sits between you

00:01:10.166 --> 00:01:13.136 A:middle
and your device and it
transforms your input

00:01:13.236 --> 00:01:15.906 A:middle
into something more appropriate
for the device and similarly,

00:01:15.906 --> 00:01:17.796 A:middle
it transforms the
device's output

00:01:17.796 --> 00:01:19.536 A:middle
into something more
appropriate for you.

00:01:20.206 --> 00:01:24.076 A:middle
So today's talk is broken
into two main parts,

00:01:24.076 --> 00:01:27.856 A:middle
I'm going to start by giving
you a brief introduction to some

00:01:28.036 --> 00:01:30.406 A:middle
of the Accessibility
features that we offer on iOS.

00:01:30.826 --> 00:01:32.256 A:middle
And this should give you an idea

00:01:32.256 --> 00:01:35.226 A:middle
of how users will experience
your accessible application.

00:01:35.896 --> 00:01:37.416 A:middle
And while we're at
it, I'm really excited

00:01:37.416 --> 00:01:40.606 A:middle
to say we're adding a brand new
Accessibility feature in iOS 7

00:01:40.876 --> 00:01:42.206 A:middle
so I'm really excited
to show you that.

00:01:42.206 --> 00:01:44.946 A:middle
And then for the remainder
of our time and really,

00:01:44.946 --> 00:01:46.276 A:middle
the bulk of the talk,

00:01:46.276 --> 00:01:48.376 A:middle
we're going to be doing some
Accessibility development.

00:01:48.616 --> 00:01:49.786 A:middle
So, I've brought an
application with me

00:01:49.786 --> 00:01:51.396 A:middle
that has some Accessibility
issues.

00:01:51.756 --> 00:01:53.516 A:middle
So, we're going to fix
them kind of from--

00:01:53.876 --> 00:01:55.536 A:middle
starting with the most
basic, working our way

00:01:55.536 --> 00:01:57.516 A:middle
up to the advanced
issues then I'm going

00:01:57.516 --> 00:01:59.616 A:middle
to use some brand new
API on this application

00:01:59.886 --> 00:02:02.536 A:middle
that we've added in this release
to do some really cool stuff

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:02.536 --> 00:02:04.056 A:middle
that was never before
possible and it's going

00:02:04.056 --> 00:02:05.646 A:middle
to let you do some cool
stuff in your applications.

00:02:05.646 --> 00:02:08.376 A:middle
And then, we're going to
wrap up the day by looking

00:02:08.376 --> 00:02:10.205 A:middle
at some brand new
API we've added

00:02:10.256 --> 00:02:11.826 A:middle
to Guided Access
in this release.

00:02:11.826 --> 00:02:14.106 A:middle
And I'm going to show you
how you can use that API

00:02:14.686 --> 00:02:16.366 A:middle
to really customize
the user experience

00:02:16.486 --> 00:02:17.756 A:middle
of your application on the fly.

00:02:18.576 --> 00:02:20.506 A:middle
So, iOS Accessibility features.

00:02:20.886 --> 00:02:23.316 A:middle
One of our most powerful
features is called VoiceOver

00:02:23.626 --> 00:02:27.496 A:middle
and VoiceOver is a screen reader
application that lets blind

00:02:27.596 --> 00:02:30.376 A:middle
and low vision users
use iOS in the same way

00:02:30.376 --> 00:02:31.366 A:middle
that everyone else does.

00:02:31.736 --> 00:02:35.286 A:middle
And so, VoiceOver works
by intercepting all touch

00:02:35.336 --> 00:02:38.956 A:middle
and Multi-Touch gestures and
transforming those into commands

00:02:38.956 --> 00:02:40.886 A:middle
that drive a cursor
around the screen,

00:02:41.166 --> 00:02:42.426 A:middle
the cursor you see
in this image.

00:02:43.666 --> 00:02:45.916 A:middle
And so, what that does
is it allows a blind

00:02:45.916 --> 00:02:49.966 A:middle
or low vision user to explore
an interface and have it spoken

00:02:49.966 --> 00:02:53.226 A:middle
to them to learn about it before
they chose to interact with it.

00:02:54.566 --> 00:02:57.866 A:middle
We also added a feature in
iOS 6 called Guided Access.

00:02:58.226 --> 00:03:00.316 A:middle
So we introduce Guided
Access to deal

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:00.316 --> 00:03:01.996 A:middle
with the problem
of distractions.

00:03:02.246 --> 00:03:04.906 A:middle
So if we return to, looking
at the iPhone and the iPad,

00:03:05.266 --> 00:03:07.586 A:middle
we realized these devices
have a great number

00:03:07.586 --> 00:03:09.116 A:middle
of distractions associated
with them.

00:03:09.326 --> 00:03:11.876 A:middle
If we look at the hardware,
they have many hardware buttons,

00:03:11.876 --> 00:03:13.296 A:middle
you know, volume
buttons, lock buttons

00:03:13.296 --> 00:03:16.756 A:middle
and the interface itself
responds to, you know,

00:03:16.756 --> 00:03:18.616 A:middle
a variety of touch and
Multi-Touch gestures.

00:03:18.976 --> 00:03:21.606 A:middle
And what this means is, if
you're a user who, you know,

00:03:21.606 --> 00:03:23.396 A:middle
maybe has trouble
focusing or a child,

00:03:23.726 --> 00:03:25.436 A:middle
these distractions can
really get in your way.

00:03:25.726 --> 00:03:30.106 A:middle
And so, what Guided Access does
is it gives you a setup screen

00:03:30.106 --> 00:03:31.506 A:middle
that allows you to remove many

00:03:31.506 --> 00:03:33.476 A:middle
of these distractions
on a per app basis.

00:03:33.846 --> 00:03:36.816 A:middle
So, you can really focus in on
exactly the content you want to.

00:03:39.316 --> 00:03:42.106 A:middle
Also in iOS 6, we added Made
for iPhone hearing aids.

00:03:42.576 --> 00:03:44.976 A:middle
And so, Made for iPhone hearing
aids let you control your

00:03:44.976 --> 00:03:46.776 A:middle
hearing aids right
from your iOS device

00:03:46.776 --> 00:03:48.126 A:middle
which you likely
already have with you.

00:03:48.386 --> 00:03:51.026 A:middle
And so, this let you do
things like adjust the volume

00:03:51.026 --> 00:03:53.156 A:middle
or adjust the balance
between your hearing aids

00:03:53.156 --> 00:03:54.106 A:middle
if you have more than one.

00:03:54.476 --> 00:03:56.046 A:middle
I mean it even lets
you quickly select

00:03:56.046 --> 00:03:59.926 A:middle
from multiple audiologist
tuned presets that you have

00:03:59.926 --> 00:04:01.816 A:middle
in your hearing aid
and on your device.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:02.116 --> 00:04:04.716 A:middle
So, if you walk into say a noisy
environment like a restaurant,

00:04:04.716 --> 00:04:06.876 A:middle
you know, you can quickly
change your hearing aid

00:04:06.916 --> 00:04:08.596 A:middle
to an equalizer setting
more appropriate

00:04:08.596 --> 00:04:09.276 A:middle
for that environment.

00:04:09.276 --> 00:04:11.946 A:middle
And similarly, maybe if
you walk into a movie,

00:04:11.946 --> 00:04:14.536 A:middle
a very quiet environment, you
can again pull out your iPhone

00:04:14.536 --> 00:04:16.716 A:middle
and quickly choose a
preset more appropriate

00:04:16.716 --> 00:04:17.375 A:middle
for that environment.

00:04:17.896 --> 00:04:20.516 A:middle
And the last Accessibility
feature,

00:04:20.606 --> 00:04:22.246 A:middle
I wanted to give you kind
of a brief introduction

00:04:22.246 --> 00:04:24.176 A:middle
to today is called
Assistive Touch.

00:04:24.636 --> 00:04:28.216 A:middle
So, we added a Assistive
Touch to iOS in iOS 5.

00:04:28.626 --> 00:04:34.626 A:middle
And really, the goal of
Assistive Touch is to help users

00:04:34.666 --> 00:04:38.346 A:middle
with physical and mobility
impairments perform the complex

00:04:38.346 --> 00:04:40.536 A:middle
Multi-Touch gestures and
hardware button presses

00:04:40.756 --> 00:04:43.406 A:middle
that are really necessarily
to use iOS effectively.

00:04:43.686 --> 00:04:44.896 A:middle
And so, Assistive
Touch does this

00:04:44.896 --> 00:04:48.106 A:middle
by giving you a single
on-screen menu

00:04:48.436 --> 00:04:51.506 A:middle
that contains all these gestures
and hardware button options.

00:04:51.846 --> 00:04:53.966 A:middle
And can be activated
by just a single touch.

00:04:54.446 --> 00:04:57.536 A:middle
And also, Assistive Touch can
be driven using an external

00:04:57.536 --> 00:04:59.636 A:middle
Accessibility device
such as a joystick.

00:04:59.636 --> 00:05:03.106 A:middle
So, I want to return
to this idea

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:03.106 --> 00:05:04.776 A:middle
of supporting different
abilities

00:05:04.776 --> 00:05:06.276 A:middle
with Accessibility for a moment.

00:05:06.646 --> 00:05:07.966 A:middle
Now that we've seen some

00:05:07.966 --> 00:05:09.876 A:middle
of the more visible
Accessibility features,

00:05:10.256 --> 00:05:11.436 A:middle
this starts to make
sense, right?

00:05:11.436 --> 00:05:15.516 A:middle
We introduced Guided Access to
offer some cognitive support,

00:05:15.706 --> 00:05:18.026 A:middle
we have VoiceOver that
offers visual support

00:05:18.336 --> 00:05:20.866 A:middle
and so the question arises,
you know, where do we go next?

00:05:20.866 --> 00:05:21.676 A:middle
Over the years, we've built

00:05:21.676 --> 00:05:24.616 A:middle
up a pretty rich
Accessibility environment on iOS

00:05:24.616 --> 00:05:25.746 A:middle
and it's really second to none.

00:05:26.166 --> 00:05:27.906 A:middle
And so, to answer that
question of where we go next,

00:05:28.166 --> 00:05:30.066 A:middle
I want to explain the picture
you see in front of you.

00:05:30.396 --> 00:05:34.766 A:middle
And what you're seeing is
what's known as a Switch User

00:05:35.166 --> 00:05:39.246 A:middle
and switch software is designed
to allow a user to interface

00:05:39.246 --> 00:05:41.936 A:middle
with the computing device
using just a single switch.

00:05:42.326 --> 00:05:44.786 A:middle
And so, this is accomplish
by scanning

00:05:44.786 --> 00:05:47.696 A:middle
through the interface
automatically and listening

00:05:47.766 --> 00:05:50.496 A:middle
for those switch presses
from a user, you know,

00:05:50.496 --> 00:05:53.526 A:middle
when the thing they are
interested in, you know,

00:05:53.526 --> 00:05:55.736 A:middle
becomes selected via
the scanning process.

00:05:56.486 --> 00:05:59.096 A:middle
And so, as you may have guessed,
I'm really excited to say

00:05:59.096 --> 00:06:01.086 A:middle
that we've worked really
hard, you know, day and night

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:01.576 --> 00:06:03.956 A:middle
and we've gone ahead and baked
a complete switch software

00:06:03.956 --> 00:06:05.986 A:middle
solution right into
iOS in this release.

00:06:06.646 --> 00:06:09.146 A:middle
And so rather than talk
about it, you know,

00:06:09.146 --> 00:06:10.226 A:middle
a picture is worth
a thousand words,

00:06:10.486 --> 00:06:12.146 A:middle
I'd love to just give you
a quick demo right now.

00:06:12.846 --> 00:06:16.266 A:middle
As with all of our Accessibility
features, you can find them

00:06:16.266 --> 00:06:20.466 A:middle
by opening up the Settings
application, go into General

00:06:21.986 --> 00:06:23.856 A:middle
and then to Accessibility.

00:06:24.806 --> 00:06:26.266 A:middle
And so, as I mentioned before,

00:06:26.266 --> 00:06:28.246 A:middle
you can see that the
Accessibility features

00:06:28.246 --> 00:06:29.916 A:middle
on iOS are really
grouped by needs.

00:06:30.186 --> 00:06:32.336 A:middle
So, we see the vision
heading followed

00:06:32.336 --> 00:06:34.636 A:middle
by the vision related
Accessibility features,

00:06:34.926 --> 00:06:36.836 A:middle
similarly hearing
and hearing features.

00:06:37.036 --> 00:06:38.956 A:middle
And if we scroll all the way
down, we see physical and motor

00:06:39.126 --> 00:06:40.706 A:middle
and that's where
switch control lives.

00:06:41.546 --> 00:06:44.016 A:middle
And so, before I turn it on, I
just want to scroll down a bit

00:06:44.016 --> 00:06:47.536 A:middle
and give you an idea of how
customizable this feature is.

00:06:47.866 --> 00:06:50.516 A:middle
Again, we think it's really
important for each user

00:06:50.516 --> 00:06:53.836 A:middle
to be able to tune this feature
to really meet their abilities

00:06:53.836 --> 00:06:55.326 A:middle
and work with-- work
well with them.

00:06:55.716 --> 00:06:57.876 A:middle
And so again, we've built
in an incredible amount

00:06:57.876 --> 00:07:01.266 A:middle
of customization here so users
can really set it up in a way

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:01.266 --> 00:07:02.116 A:middle
that works well for them.

00:07:02.706 --> 00:07:06.206 A:middle
And so, if I go ahead and
turn Switch control on,

00:07:06.756 --> 00:07:09.516 A:middle
you can see a cursor that begins
scanning through the interface.

00:07:09.826 --> 00:07:12.016 A:middle
And so, this in itself
is pretty amazing, right?

00:07:12.796 --> 00:07:14.886 A:middle
If you've seen Switch
software before, usually,

00:07:15.186 --> 00:07:18.876 A:middle
the solution is to, you know,
drive-- if you're on a desktop,

00:07:18.876 --> 00:07:21.276 A:middle
it's to drive a mouse
cursor around the interface.

00:07:21.596 --> 00:07:23.196 A:middle
And, you know, if
you're on mobile device,

00:07:23.476 --> 00:07:26.336 A:middle
maybe you drive some false
finger around the interface.

00:07:26.726 --> 00:07:29.376 A:middle
But because of your help in
years passed and, you know,

00:07:29.376 --> 00:07:32.426 A:middle
our work on the OS end, we've
already marked up the interfaces

00:07:32.426 --> 00:07:34.456 A:middle
with this great Accessibility
API.

00:07:34.456 --> 00:07:36.556 A:middle
And so, we can just jump
in and leverage to that API

00:07:36.816 --> 00:07:38.276 A:middle
and build this feature
on top of it

00:07:38.276 --> 00:07:39.596 A:middle
because we know these
elements exist.

00:07:39.876 --> 00:07:40.986 A:middle
And so, that's how we were able

00:07:40.986 --> 00:07:43.536 A:middle
to build an element
scanning switch solution.

00:07:44.726 --> 00:07:46.666 A:middle
And so now, this
cursor is scanning

00:07:46.666 --> 00:07:48.316 A:middle
through the interface
waiting for switch presses.

00:07:48.616 --> 00:07:50.266 A:middle
And so, ahead of
time, I've gone ahead

00:07:50.266 --> 00:07:54.556 A:middle
and paired my external Bluetooth
switch with this device

00:07:54.776 --> 00:07:56.336 A:middle
and right out-- right
off the bat,

00:07:56.336 --> 00:08:00.176 A:middle
we're supporting a large
number of external switches

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:00.176 --> 00:08:01.056 A:middle
that will work for you.

00:08:01.246 --> 00:08:05.466 A:middle
And so, as this cursor scans the
interface, I wait for, you know,

00:08:05.466 --> 00:08:07.146 A:middle
what I'm interested
in to be selected,

00:08:07.336 --> 00:08:10.746 A:middle
and then I can press my switch
to bring up a context menu.

00:08:11.136 --> 00:08:13.056 A:middle
And so if I bring up the
context menu here, you can see,

00:08:13.056 --> 00:08:14.986 A:middle
I'm presented with options

00:08:14.986 --> 00:08:16.636 A:middle
that are appropriate
for this element.

00:08:16.986 --> 00:08:18.816 A:middle
And in this case, I'm
just going to wait

00:08:18.816 --> 00:08:21.286 A:middle
until the Home button group
becomes selected and I'm going

00:08:21.286 --> 00:08:22.936 A:middle
to drill into it with
a single switch press.

00:08:23.486 --> 00:08:27.396 A:middle
And then again, press
right on the Home button

00:08:27.396 --> 00:08:29.186 A:middle
and you can see it's
the equivalent

00:08:29.186 --> 00:08:30.596 A:middle
of just pressing the
Home button yourself.

00:08:31.406 --> 00:08:34.446 A:middle
And so, let's say we want
to take a look at, you know,

00:08:34.446 --> 00:08:35.686 A:middle
how Apple stock is doing today.

00:08:35.806 --> 00:08:39.736 A:middle
And so again, we'll just wait
until the group with stocks

00:08:39.736 --> 00:08:45.346 A:middle
in it is selected and there
it is and now, I'll just wait

00:08:45.346 --> 00:08:47.436 A:middle
for stocks to be
highlighted and press again.

00:08:47.486 --> 00:08:49.466 A:middle
And again, you can see
this context menu pops

00:08:49.466 --> 00:08:52.456 A:middle
up with anything I might
be interested in, you know,

00:08:52.456 --> 00:08:54.636 A:middle
for this element, anything
this element responds to.

00:08:54.936 --> 00:08:57.506 A:middle
And so, I'm going to wait
until touch is selected

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:01.426 --> 00:09:03.456 A:middle
and maybe I want to see
the graph associated

00:09:03.456 --> 00:09:04.846 A:middle
with Apple stock.

00:09:07.826 --> 00:09:10.786 A:middle
And so again, I'm going to
walk down to the Apple stock

00:09:12.406 --> 00:09:13.826 A:middle
and use touch to drill in.

00:09:13.926 --> 00:09:16.336 A:middle
I can see how you get the
graph related to Apple stock.

00:09:16.666 --> 00:09:19.296 A:middle
And so again, this is a
really powerful feature

00:09:19.296 --> 00:09:21.846 A:middle
and we think it's going to open
up iOS to a whole new group

00:09:21.846 --> 00:09:23.946 A:middle
of users and we're really
excited to get it in your hands

00:09:24.146 --> 00:09:25.446 A:middle
and to get feedback from you.

00:09:27.026 --> 00:09:28.016 A:middle
And so, that's Switch control.

00:09:30.036 --> 00:09:32.356 A:middle
OK. So as I said before,
the rest of today,

00:09:32.356 --> 00:09:34.256 A:middle
we're really just going to
dive in and do some development

00:09:34.256 --> 00:09:35.576 A:middle
and fix some Accessibility
problems.

00:09:36.026 --> 00:09:39.056 A:middle
So before we do that, I want to
give you a brief introduction

00:09:39.056 --> 00:09:41.716 A:middle
to how UIAccessibility
works under the hood to try

00:09:41.716 --> 00:09:43.306 A:middle
and give you a better
understanding of that process.

00:09:43.626 --> 00:09:45.916 A:middle
After that, we're going to
do an Accessibility audit

00:09:45.916 --> 00:09:48.046 A:middle
of the application I brought
today and this will allow us

00:09:48.046 --> 00:09:50.956 A:middle
to quickly find any
Accessibility issues we have

00:09:50.956 --> 00:09:53.436 A:middle
in our application so we
can kind of get a game plan

00:09:53.436 --> 00:09:54.446 A:middle
of how we're going to fix them.

00:09:55.306 --> 00:09:57.326 A:middle
And then once we've
identified these bugs,

00:09:57.626 --> 00:10:00.206 A:middle
we're going to use the
UIAccessibility API

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.676 --> 00:10:03.116 A:middle
to fix them again, you know,
starting with the most basic

00:10:03.116 --> 00:10:05.416 A:middle
and we'll see how far we can
get just using those basic

00:10:05.416 --> 00:10:06.466 A:middle
Accessibility attributes.

00:10:06.776 --> 00:10:09.296 A:middle
And then we'll work up to
some more advanced problems,

00:10:09.296 --> 00:10:11.126 A:middle
use a little bit
of advanced API.

00:10:11.756 --> 00:10:13.486 A:middle
And again, the brand
new API is going

00:10:13.486 --> 00:10:15.966 A:middle
to let us do some some cool
stuff that we're excited to see

00:10:15.966 --> 00:10:17.686 A:middle
where you guys take that
and then we'll finish

00:10:17.686 --> 00:10:21.046 A:middle
up by looking at Guided Access.

00:10:21.236 --> 00:10:23.176 A:middle
So, how does UIAccessibility
work?

00:10:23.176 --> 00:10:26.176 A:middle
The easiest way to
explain this is to look

00:10:26.176 --> 00:10:28.156 A:middle
at an Accessibility
feature in action.

00:10:28.596 --> 00:10:31.446 A:middle
So here, you can see
VoiceOver is on the far left,

00:10:31.516 --> 00:10:33.366 A:middle
the Calculator application
is on the far right,

00:10:33.646 --> 00:10:36.726 A:middle
and we see UIAccessibility
in the center tied

00:10:36.726 --> 00:10:39.186 A:middle
to the UIKit stack as it is.

00:10:39.186 --> 00:10:41.626 A:middle
And so, as I said before,
when VoiceOver is on,

00:10:41.626 --> 00:10:43.896 A:middle
it is intercepting
all of the touch

00:10:43.896 --> 00:10:45.286 A:middle
and Multi-Touch gestures
on the screen.

00:10:45.576 --> 00:10:47.346 A:middle
And what it's doing when
it intercepts those is it's

00:10:47.556 --> 00:10:49.136 A:middle
transforming them into questions

00:10:49.136 --> 00:10:52.586 A:middle
that it can ask your application
using UIAccessibility.

00:10:53.106 --> 00:10:55.796 A:middle
And so, if a user were to
touch on a Calculator app say

00:10:55.796 --> 00:11:01.076 A:middle
in the center of the screen,
VoiceOver then internally,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:01.076 --> 00:11:02.296 A:middle
you know, computes
this question,

00:11:02.296 --> 00:11:03.876 A:middle
what is the element
at this point?

00:11:04.256 --> 00:11:06.716 A:middle
And so, VoiceOver goes over
through UIAccessibility

00:11:06.716 --> 00:11:07.656 A:middle
to answer this question.

00:11:07.936 --> 00:11:11.046 A:middle
And if your application has
correctly implemented, you know,

00:11:11.046 --> 00:11:13.526 A:middle
the appropriate UIAccessibility
methods,

00:11:14.086 --> 00:11:17.286 A:middle
VoiceOver can then pull things
like the accessibilityLabel

00:11:17.286 --> 00:11:20.266 A:middle
and the accessibilityFrame right
from your application and back

00:11:20.266 --> 00:11:21.656 A:middle
over through UIAccessibility.

00:11:21.916 --> 00:11:25.706 A:middle
And so once VoiceOver has this
information, it can transform it

00:11:25.706 --> 00:11:27.416 A:middle
into output that's
appropriate for the user

00:11:27.676 --> 00:11:31.506 A:middle
so that output may be
speech or possibly Braille.

00:11:33.536 --> 00:11:36.106 A:middle
Great. So now, we have
kind of a general idea

00:11:36.106 --> 00:11:39.466 A:middle
of how Accessibility features
will query our application.

00:11:40.766 --> 00:11:44.186 A:middle
So, how can we make sure our
application correctly responds

00:11:44.186 --> 00:11:44.756 A:middle
to these queries?

00:11:44.756 --> 00:11:46.256 A:middle
How can we make sure
we are playing well

00:11:46.456 --> 00:11:47.776 A:middle
with these Accessibility
features?

00:11:48.556 --> 00:11:51.376 A:middle
Well, as I said before, really,
the easiest way to do this is

00:11:51.376 --> 00:11:53.676 A:middle
to do an Accessibility
audit of our application.

00:11:54.186 --> 00:11:56.176 A:middle
And so, if you're working in
a simulator, we have a tool

00:11:56.176 --> 00:11:58.216 A:middle
for you called the
Accessibility Inspector.

00:11:58.666 --> 00:12:00.236 A:middle
But even better, if
you're on the device,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:00.236 --> 00:12:01.766 A:middle
we can just use the
Accessibility features

00:12:01.766 --> 00:12:03.116 A:middle
themselves and this
is really going

00:12:03.116 --> 00:12:04.396 A:middle
to give us a great understanding

00:12:04.606 --> 00:12:06.316 A:middle
of how our app works
with Accessibility.

00:12:06.676 --> 00:12:08.176 A:middle
Both of these features
can be found

00:12:08.176 --> 00:12:09.176 A:middle
in the Settings application

00:12:09.496 --> 00:12:12.576 A:middle
under General Accessibility
as we saw before.

00:12:13.586 --> 00:12:16.936 A:middle
And it's worth noting that we
also have a great extra feature

00:12:16.936 --> 00:12:18.246 A:middle
called the Accessibility
Shortcut,

00:12:18.526 --> 00:12:22.186 A:middle
some of you may know it as its
former name, just triple-click.

00:12:22.546 --> 00:12:26.146 A:middle
Accessibility Shortcut lets you
tie an Accessibility feature

00:12:26.256 --> 00:12:29.536 A:middle
or more than one feature to
three clicks of the Home button.

00:12:29.756 --> 00:12:32.066 A:middle
And so, this lets you quickly
click the Home button three

00:12:32.066 --> 00:12:34.116 A:middle
times, turn something
like VoiceOver on,

00:12:34.116 --> 00:12:35.916 A:middle
do an audit of your application,

00:12:35.996 --> 00:12:38.536 A:middle
click the Home button three
times to turn VoiceOver off.

00:12:38.586 --> 00:12:40.336 A:middle
So, it's really handy
for this audit process.

00:12:41.236 --> 00:12:42.466 A:middle
And so now, let's dive in

00:12:42.466 --> 00:12:44.516 A:middle
and find our accessibility
bugs today,

00:12:44.516 --> 00:12:46.036 A:middle
let's see what we
have to deal with.

00:12:46.386 --> 00:12:49.336 A:middle
Okay, as we said, we're going to
open the Settings application,

00:12:50.266 --> 00:12:52.416 A:middle
General Accessibility,
same as last time.

00:12:52.496 --> 00:12:54.396 A:middle
I'm going to scroll all
the way to the bottom

00:12:54.486 --> 00:12:56.216 A:middle
and I see the Accessibility
Shortcut.

00:12:57.156 --> 00:12:58.926 A:middle
So again, I'm going
to pair VoiceOver

00:12:59.026 --> 00:13:00.256 A:middle
with my Accessibility Shortcut

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:00.656 --> 00:13:02.416 A:middle
and I really recommend
you use VoiceOver.

00:13:02.416 --> 00:13:04.426 A:middle
I mean, you know, you
can use Switch Control

00:13:04.426 --> 00:13:06.866 A:middle
if you're feeling courageous.

00:13:06.866 --> 00:13:10.166 A:middle
But VoiceOver has the
easiest learning curve

00:13:10.456 --> 00:13:13.106 A:middle
and it's really a, you can turn
it on, and just hear what's

00:13:13.106 --> 00:13:14.886 A:middle
under your finger,
navigate around.

00:13:14.886 --> 00:13:16.096 A:middle
It's really a quick and easy way

00:13:16.096 --> 00:13:17.696 A:middle
to do a great accessibility
audit.

00:13:18.006 --> 00:13:19.376 A:middle
And so now, if I
click three times--

00:13:21.806 --> 00:13:23.326 A:middle
&gt;&gt; VoiceOver on, settings.

00:13:23.846 --> 00:13:25.646 A:middle
&gt;&gt; VoiceOver comes on
and it reads what's

00:13:25.646 --> 00:13:26.906 A:middle
under the cursor as expected.

00:13:27.096 --> 00:13:28.256 A:middle
And if I click three
times again-- -

00:13:28.256 --> 00:13:28.796 A:middle
&gt;&gt; VoiceOver off.

00:13:29.126 --> 00:13:31.456 A:middle
&gt;&gt; VoiceOver turns off
so it's really easy.

00:13:33.176 --> 00:13:34.496 A:middle
And so now, let's
open our application

00:13:34.496 --> 00:13:35.426 A:middle
and see what we're
working on today.

00:13:36.256 --> 00:13:37.736 A:middle
So the application we're going

00:13:37.736 --> 00:13:40.886 A:middle
to be making accessible
today is a floor--

00:13:40.886 --> 00:13:42.756 A:middle
a series of floor plans
of the convention center.

00:13:42.996 --> 00:13:45.546 A:middle
And so, let's exam it before
we turn accessibility on

00:13:45.546 --> 00:13:46.456 A:middle
and see what-- and, you know,

00:13:46.656 --> 00:13:48.106 A:middle
see what we're going
to have to fix.

00:13:48.186 --> 00:13:51.246 A:middle
So if we look across
the top, we have a label

00:13:51.246 --> 00:13:53.706 A:middle
of the convention center and
it looks like an indicator

00:13:53.706 --> 00:13:54.936 A:middle
of what floor we're looking at.

00:13:55.306 --> 00:13:58.796 A:middle
On the left hand side, I
see an Elevator control

00:13:59.026 --> 00:14:01.616 A:middle
that as expected,
let us increment

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:01.616 --> 00:14:02.856 A:middle
or decrement the
floor we're seeing.

00:14:03.196 --> 00:14:06.626 A:middle
And at the very bottom,
a control called Coffee

00:14:06.626 --> 00:14:08.306 A:middle
and if I swipe it, it
shows us, you know,

00:14:08.306 --> 00:14:10.296 A:middle
where you can find Coffee in
the convention center right now.

00:14:10.526 --> 00:14:12.276 A:middle
And so, if we triple click
to turn VoiceOver on-- -

00:14:12.336 --> 00:14:13.566 A:middle
&gt;&gt; VoiceOver on.

00:14:13.566 --> 00:14:14.066 A:middle
Landscape.

00:14:14.836 --> 00:14:14.966 A:middle
&gt;&gt; Great.

00:14:15.366 --> 00:14:17.426 A:middle
&gt;&gt; Home button to the
left, top and center.

00:14:18.216 --> 00:14:20.736 A:middle
&gt;&gt; So it comes on as
expected and it lands

00:14:20.736 --> 00:14:23.596 A:middle
on the first thing it finds and
in this case, it finds a label

00:14:23.596 --> 00:14:24.446 A:middle
at the top of the screen

00:14:24.976 --> 00:14:27.586 A:middle
and that label is already
accessible so that's great.

00:14:27.846 --> 00:14:30.736 A:middle
Let's try and touch the floor
value next to the label.

00:14:31.306 --> 00:14:32.996 A:middle
So, it looks like I'm
not getting anything

00:14:32.996 --> 00:14:35.966 A:middle
when I touch the floor
number next to the--

00:14:35.966 --> 00:14:36.906 A:middle
or next to the heading,

00:14:36.906 --> 00:14:39.006 A:middle
I'm going to try touching the
control on the left hand side.

00:14:40.446 --> 00:14:42.516 A:middle
Again, I don't see anything
VoiceOver doesn't know anything

00:14:42.516 --> 00:14:47.376 A:middle
is there, the control at the
bottom, nothing and as expected,

00:14:47.376 --> 00:14:49.936 A:middle
the map in the center,
again, not accessible at all.

00:14:49.936 --> 00:14:51.926 A:middle
So, it looks like we've got
our work cut out for us.

00:14:51.926 --> 00:14:53.046 A:middle
This is going to be, you know,

00:14:53.046 --> 00:14:55.146 A:middle
you think this might be a
tough job but you're going

00:14:55.146 --> 00:14:56.816 A:middle
to be amazed that
just in a few minutes,

00:14:56.816 --> 00:14:58.786 A:middle
we're going to take this
completely inaccessible

00:14:58.786 --> 00:15:01.036 A:middle
application and make a great
accessibility experience.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:05.596 --> 00:15:09.796 A:middle
Okay, so we have an idea of the
bugs we need to start tackling,

00:15:10.116 --> 00:15:11.616 A:middle
you know, how are we
going to fix these bugs,

00:15:11.616 --> 00:15:12.606 A:middle
what API are we going to use?

00:15:12.936 --> 00:15:15.456 A:middle
So as I said, we're going to
start with the basic API first

00:15:15.456 --> 00:15:17.446 A:middle
and work our way up, pick off
the low hanging fruit, take,

00:15:17.446 --> 00:15:18.986 A:middle
you know, take off--
take down the easy bugs.

00:15:18.986 --> 00:15:22.146 A:middle
So, the two most important
accessibility attributes we're

00:15:22.146 --> 00:15:24.656 A:middle
going to be working with
are isAccessibilityElement

00:15:24.656 --> 00:15:25.966 A:middle
and accessibilityLabel.

00:15:26.886 --> 00:15:29.636 A:middle
So, for isAccessibilityElement,
you want to return yes

00:15:29.876 --> 00:15:32.656 A:middle
for any element that you
want VoiceOver to see.

00:15:32.926 --> 00:15:34.346 A:middle
When we were using
our application,

00:15:34.346 --> 00:15:36.216 A:middle
we saw that VoiceOver
wasn't even aware of most

00:15:36.216 --> 00:15:37.126 A:middle
of the elements on screen.

00:15:37.396 --> 00:15:40.256 A:middle
And so to fix this, this would
be the appropriate piece of API.

00:15:40.866 --> 00:15:43.476 A:middle
And it's worth noting that if
you're using standard UIKit

00:15:43.476 --> 00:15:47.426 A:middle
controls or labels like
UILabel, this is on by default,

00:15:47.426 --> 00:15:48.796 A:middle
VoiceOver knows about
these by default.

00:15:48.796 --> 00:15:50.696 A:middle
You really get a lot of
accessibility for free

00:15:50.696 --> 00:15:52.036 A:middle
when you use the
built-in classes.

00:15:53.286 --> 00:15:55.486 A:middle
And second, as I said
is accessibilityLabel.

00:15:55.836 --> 00:15:58.856 A:middle
Here, we want to return
a textual representation

00:15:59.226 --> 00:16:01.396 A:middle
of the element and in
the case of VoiceOver,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:01.396 --> 00:16:02.826 A:middle
this is the first thing
VoiceOver is going

00:16:02.826 --> 00:16:03.676 A:middle
to speak to the user.

00:16:04.206 --> 00:16:08.576 A:middle
And the last three pieces of
easy API we're going to need

00:16:08.576 --> 00:16:11.466 A:middle
to use are accessibilityHint,
accessibilityValue,

00:16:11.466 --> 00:16:12.646 A:middle
and accessibilityTraits.

00:16:13.046 --> 00:16:15.546 A:middle
So, for accessibilityHint,
we're going to want

00:16:15.546 --> 00:16:17.646 A:middle
to provide some additional
usage information

00:16:17.966 --> 00:16:20.086 A:middle
to the accessibility
features like VoiceOver.

00:16:20.276 --> 00:16:22.286 A:middle
And we're going to want
to do this in cases

00:16:22.286 --> 00:16:27.256 A:middle
where maybe the implications of
using this control or element

00:16:27.256 --> 00:16:28.876 A:middle
as it were are non obvious.

00:16:28.926 --> 00:16:31.016 A:middle
So in the case of our Coffee
control if we think back,

00:16:31.436 --> 00:16:33.496 A:middle
you know, when you use
the Coffee control,

00:16:33.656 --> 00:16:35.206 A:middle
it changes something
somewhere else.

00:16:35.436 --> 00:16:37.006 A:middle
So this would be a great
place to add a hint

00:16:37.046 --> 00:16:38.596 A:middle
to let the user know, you
know, what's happening.

00:16:38.796 --> 00:16:41.456 A:middle
Coffee is, you know, the--
activating the switch will show

00:16:41.456 --> 00:16:42.886 A:middle
or hide Coffee in a
different location.

00:16:43.496 --> 00:16:46.846 A:middle
We also have accessibilityValue
so the--

00:16:46.846 --> 00:16:48.986 A:middle
usually, an elements
label is quite static

00:16:49.326 --> 00:16:51.466 A:middle
but a value is meant
to be changed.

00:16:51.466 --> 00:16:54.346 A:middle
So, if we think back to
the header across the top

00:16:54.346 --> 00:16:57.266 A:middle
of the application, we
remember we had a static label

00:16:57.266 --> 00:17:00.566 A:middle
that said Moscone West but
we also had a floor value.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:00.766 --> 00:17:03.486 A:middle
And so again, this is a great
place to use accessibilityValue.

00:17:03.486 --> 00:17:04.726 A:middle
That floor can change

00:17:04.776 --> 00:17:07.306 A:middle
as we adjust the elevator
control up or down.

00:17:07.306 --> 00:17:09.175 A:middle
We can view a different
floor and we always want

00:17:09.175 --> 00:17:11.506 A:middle
to make sure we're returning the
correct information to VoiceOver

00:17:11.736 --> 00:17:13.415 A:middle
because it's going to call
into these APIs a lot.

00:17:14.606 --> 00:17:15.675 A:middle
And so, the very last piece

00:17:15.675 --> 00:17:18.356 A:middle
of basic API we need
is accessibilityTraits.

00:17:18.715 --> 00:17:22.116 A:middle
So accessibilityTraits are a
bit mask of unsigned integers

00:17:22.116 --> 00:17:25.675 A:middle
that you can or together to
really convey the behavior

00:17:25.675 --> 00:17:27.566 A:middle
and intended use
of that element.

00:17:28.046 --> 00:17:31.636 A:middle
And so, traits are a little
tricky, you know, a little hard

00:17:31.636 --> 00:17:33.366 A:middle
to wrap your head around
if this is your first time.

00:17:33.606 --> 00:17:36.406 A:middle
So, let's take a look at an
application that's already

00:17:36.406 --> 00:17:37.986 A:middle
in iOS and see how the
traits are applied.

00:17:39.286 --> 00:17:41.966 A:middle
Well first, we see this
header across the top

00:17:41.966 --> 00:17:44.296 A:middle
of the application, you know,
it really contains the city

00:17:44.426 --> 00:17:47.246 A:middle
and the temperature of that
city and this really conveys,

00:17:47.246 --> 00:17:50.086 A:middle
you know, the most information
for this application.

00:17:50.366 --> 00:17:51.696 A:middle
And so here, it would
be appropriate

00:17:51.696 --> 00:17:52.756 A:middle
to use the header trait.

00:17:53.946 --> 00:17:56.636 A:middle
Similarly further down, we
some static text, you know,

00:17:56.636 --> 00:17:58.046 A:middle
these days of the
week do not change,

00:17:58.306 --> 00:18:00.806 A:middle
so the static text trait
would be appropriate here

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:00.946 --> 00:18:02.376 A:middle
and it would give
VoiceOver an indication

00:18:02.376 --> 00:18:03.266 A:middle
of how to speak this item.

00:18:04.316 --> 00:18:06.506 A:middle
Further down, we see
a Standard button

00:18:06.506 --> 00:18:08.556 A:middle
and the button trait
will be appropriate here

00:18:08.556 --> 00:18:12.806 A:middle
and it's worth noting that since
this is, you know, built on top

00:18:12.806 --> 00:18:15.356 A:middle
of a standard UIButton,
a UIKit class,

00:18:15.716 --> 00:18:18.196 A:middle
it already has this
UIAccessibility trait of button,

00:18:18.196 --> 00:18:19.196 A:middle
we don't actually
need to add it.

00:18:19.466 --> 00:18:21.746 A:middle
And again, this is the case for
a lot of these built-in classes,

00:18:21.996 --> 00:18:24.396 A:middle
you know, they have the
isAccessibilityElement yes,

00:18:24.426 --> 00:18:25.476 A:middle
they're visible to VoiceOver,

00:18:25.476 --> 00:18:26.726 A:middle
they have the appropriate
traits.

00:18:26.726 --> 00:18:29.096 A:middle
If you've assigned a
name to your button,

00:18:29.096 --> 00:18:31.426 A:middle
if you're just using a
standard round rect button,

00:18:31.666 --> 00:18:33.176 A:middle
VoiceOver will use
that as the label.

00:18:33.176 --> 00:18:34.306 A:middle
So, VoiceOver is
very intelligent

00:18:34.306 --> 00:18:35.416 A:middle
about these standard classes.

00:18:35.686 --> 00:18:37.766 A:middle
So, it's a good way to
get the most accessibility

00:18:37.766 --> 00:18:38.966 A:middle
for your buck.

00:18:40.036 --> 00:18:43.106 A:middle
And then lastly, we have this
page control across the bottom

00:18:43.106 --> 00:18:48.076 A:middle
and again, by default, this page
control is an adjustable item.

00:18:48.336 --> 00:18:51.766 A:middle
And if you are rolling
one yourself, you know,

00:18:51.766 --> 00:18:54.386 A:middle
a selector type control,
here is where you'd want

00:18:54.386 --> 00:18:56.456 A:middle
to use adjustable and this
really will lend itself well

00:18:56.456 --> 00:18:58.396 A:middle
to that elevator control we
saw on the left hand side

00:18:58.396 --> 00:19:00.706 A:middle
of the screen because it is
basically just an increment

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.706 --> 00:19:02.476 A:middle
or decrement or up and down
the change of the floor.

00:19:04.596 --> 00:19:07.356 A:middle
Great. So now, we know what
pieces of API we need to use

00:19:07.556 --> 00:19:10.096 A:middle
to get us most of the way
there, how do we use them?

00:19:11.146 --> 00:19:13.936 A:middle
Well, if your interface is
quite static and you are working

00:19:13.936 --> 00:19:16.246 A:middle
in Interface Builder, the good
news is you can handle most

00:19:16.246 --> 00:19:16.986 A:middle
of it right there.

00:19:17.756 --> 00:19:19.996 A:middle
So, we have an Accessibility
enabled check box

00:19:20.046 --> 00:19:22.116 A:middle
that corresponds to
isAccessibilityElement.

00:19:23.136 --> 00:19:27.786 A:middle
Similarly, we have a
text field that is--

00:19:27.786 --> 00:19:30.086 A:middle
that corresponds to
accessibilityLabel.

00:19:30.446 --> 00:19:33.876 A:middle
A text field that corresponds
to accessibilityHint

00:19:35.006 --> 00:19:37.526 A:middle
and then you see a series
of check boxes below

00:19:37.696 --> 00:19:39.146 A:middle
that correspond to
accessibilityTraits

00:19:39.436 --> 00:19:41.376 A:middle
and you're going to want
to select all the traits

00:19:41.636 --> 00:19:43.696 A:middle
and they are, you know,
under the hood or together

00:19:43.886 --> 00:19:47.196 A:middle
to really convey the behavior
and usage of this element

00:19:47.196 --> 00:19:49.176 A:middle
to VoiceOver or any
Accessibility feature.

00:19:49.746 --> 00:19:52.296 A:middle
So, what if you're
working in code?

00:19:52.546 --> 00:19:54.416 A:middle
Well again, if your
interface is quite static,

00:19:54.626 --> 00:19:57.526 A:middle
we can set these attributes,
we don't have to override them.

00:19:57.746 --> 00:20:00.426 A:middle
And so, you know, we find
an appropriate place to do

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.426 --> 00:20:03.726 A:middle
that like awakeFromNib
our header is created

00:20:03.826 --> 00:20:06.956 A:middle
and then we're going to set the
isAccessibilityElement value

00:20:06.956 --> 00:20:07.466 A:middle
to yes.

00:20:07.646 --> 00:20:09.526 A:middle
We're going to set
our accessibilityLabel

00:20:09.726 --> 00:20:10.606 A:middle
to something appropriate.

00:20:10.606 --> 00:20:12.846 A:middle
And then, we're going to
set our accessibilityTraits

00:20:12.846 --> 00:20:13.706 A:middle
to something appropriate.

00:20:13.706 --> 00:20:15.446 A:middle
And again, in this case
maybe the header trait was

00:20:15.446 --> 00:20:16.096 A:middle
most appropriate.

00:20:16.626 --> 00:20:20.496 A:middle
But your interface isn't
always static, right?

00:20:20.496 --> 00:20:22.576 A:middle
I mean our interface that we're
working on today is not static

00:20:22.576 --> 00:20:24.286 A:middle
so what do you do in
these dynamic cases?

00:20:24.446 --> 00:20:25.416 A:middle
Well, here is where
you're going to want

00:20:25.416 --> 00:20:26.736 A:middle
to override these methods

00:20:26.996 --> 00:20:30.266 A:middle
and make sure you're always
returning the appropriate value

00:20:30.266 --> 00:20:31.236 A:middle
at the appropriate time.

00:20:31.536 --> 00:20:34.086 A:middle
And so here, we've
overridden accessibilityValue

00:20:34.246 --> 00:20:37.086 A:middle
and we're always returning
the actual floor number

00:20:37.086 --> 00:20:37.716 A:middle
that we're on.

00:20:37.996 --> 00:20:39.746 A:middle
And so again, we're going
to use accessibilityValue

00:20:39.746 --> 00:20:42.006 A:middle
in our application for
exactly this purpose.

00:20:43.706 --> 00:20:45.456 A:middle
Great. So now that
we have an idea

00:20:45.456 --> 00:20:47.576 A:middle
of the basic API we're
going to use, let's go ahead

00:20:47.576 --> 00:20:49.486 A:middle
and see how well
we can do with just

00:20:49.486 --> 00:20:51.596 A:middle
that in our application, OK?

00:20:51.596 --> 00:20:54.316 A:middle
So, let's start by taking
a look at this, you know,

00:20:54.826 --> 00:20:57.216 A:middle
header information across
the top of the application.

00:20:58.086 --> 00:21:02.476 A:middle
So, if I find the class, I
know that is my titleView,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:03.156 --> 00:21:08.296 A:middle
I'm going to go ahead and just
grab the basic accessibility

00:21:08.296 --> 00:21:12.326 A:middle
attribute stubs and drop them in
and just go right down the list.

00:21:14.556 --> 00:21:16.386 A:middle
So first, we want
VoiceOver to see this element

00:21:16.386 --> 00:21:19.526 A:middle
so isAccessibilityElement
YES is absolutely necessary.

00:21:22.086 --> 00:21:25.306 A:middle
Secondly, we need a label
for this element and we saw

00:21:25.306 --> 00:21:29.786 A:middle
that because we have a
standard UILabel as a sub view

00:21:29.786 --> 00:21:32.306 A:middle
of this view, you know,
it was already accessible,

00:21:32.306 --> 00:21:34.696 A:middle
it already had-- it lends
itself well to accessibility.

00:21:34.986 --> 00:21:38.476 A:middle
So, what we're trying to do
here is combine the floor

00:21:38.696 --> 00:21:41.306 A:middle
and the label together because
they really only make sense

00:21:41.366 --> 00:21:43.776 A:middle
together out of context if
you just heard, you know,

00:21:43.846 --> 00:21:45.116 A:middle
two out in the middle
of nowhere,

00:21:45.116 --> 00:21:45.986 A:middle
it really makes no sense.

00:21:46.356 --> 00:21:48.146 A:middle
And so again, we're
combining this information,

00:21:48.146 --> 00:21:49.486 A:middle
we're combining these
sub views together.

00:21:49.486 --> 00:21:52.756 A:middle
And so, we're going to do that
by simply returning the value

00:21:52.756 --> 00:21:56.586 A:middle
that title label was
already giving us,

00:21:56.646 --> 00:22:01.376 A:middle
titleLabel, text, great.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:02.036 --> 00:22:05.586 A:middle
So, this is a pretty
obvious element,

00:22:05.586 --> 00:22:07.526 A:middle
accessibilityHint is not
really necessary here

00:22:08.746 --> 00:22:11.066 A:middle
but we do have a use for value.

00:22:11.596 --> 00:22:13.756 A:middle
And for value, if I
jump to the header,

00:22:13.956 --> 00:22:17.676 A:middle
I can see that this element,
you know, has a representation

00:22:17.676 --> 00:22:18.836 A:middle
of the floor internally.

00:22:19.466 --> 00:22:21.206 A:middle
And so this is a great
place to use that.

00:22:21.706 --> 00:22:27.956 A:middle
[ Pause ]

00:22:28.456 --> 00:22:29.776 A:middle
Okay.

00:22:30.276 --> 00:22:40.656 A:middle
[ Pause ]

00:22:41.156 --> 00:22:43.126 A:middle
And I'll leave traits
out of this one.

00:22:43.406 --> 00:22:46.126 A:middle
It's worth mention that
Accessibility is just

00:22:46.126 --> 00:22:48.006 A:middle
like application
design in general.

00:22:48.336 --> 00:22:50.856 A:middle
You know, there is often
no exact right answer,

00:22:50.856 --> 00:22:52.426 A:middle
just like you're
designing your interface

00:22:52.426 --> 00:22:54.106 A:middle
to convey what you want
to convey to the user,

00:22:54.346 --> 00:22:55.756 A:middle
you do that with
Accessibility as well.

00:22:55.756 --> 00:22:57.536 A:middle
And so, you know, you need

00:22:57.536 --> 00:22:59.146 A:middle
to make these choices
as you progress.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:01.036 --> 00:23:03.186 A:middle
And I should also make note,
you know, we always want

00:23:03.186 --> 00:23:06.016 A:middle
to localize our labels
and use number formatters

00:23:06.016 --> 00:23:06.626 A:middle
as appropriate.

00:23:06.626 --> 00:23:10.016 A:middle
VoiceOver works in a huge number
of languages but for brevity,

00:23:10.426 --> 00:23:14.906 A:middle
we'll leave that out today.

00:23:15.096 --> 00:23:17.086 A:middle
So next, let's take a look
at this Coffee control

00:23:17.206 --> 00:23:18.316 A:middle
on the bottom of the screen.

00:23:18.866 --> 00:23:23.306 A:middle
We're going to start
the same way as before.

00:23:25.016 --> 00:23:28.526 A:middle
The first thing to do is make
sure Accessibility can see

00:23:28.526 --> 00:23:29.156 A:middle
this control.

00:23:31.146 --> 00:23:34.136 A:middle
Again, we need to return a label
for this, something appropriate

00:23:35.096 --> 00:23:37.076 A:middle
and go ahead and call it Coffee.

00:23:37.676 --> 00:23:40.956 A:middle
And as we said before,
you know, the implications

00:23:40.956 --> 00:23:44.956 A:middle
of activating this switch might
not be obvious to all users

00:23:45.216 --> 00:23:49.466 A:middle
so let's go ahead and return
a hint here, maybe something

00:23:49.466 --> 00:23:54.726 A:middle
like show or hide
Coffee locations.

00:23:59.726 --> 00:24:00.626 A:middle
So, what should our value be?

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:00.626 --> 00:24:02.866 A:middle
Well, we do have a value
associated with this control,

00:24:02.866 --> 00:24:04.336 A:middle
right, and that value
is off or on.

00:24:05.426 --> 00:24:09.256 A:middle
And so here, if I jump
to my header again,

00:24:09.306 --> 00:24:11.826 A:middle
I see that it does have
a state of off or on

00:24:12.286 --> 00:24:14.776 A:middle
and so I'll just go
ahead and use that state.

00:24:15.566 --> 00:24:20.106 A:middle
And if it's on, let's return
a string that says on.

00:24:20.636 --> 00:24:22.046 A:middle
And similarly, if it's off,

00:24:22.736 --> 00:24:24.336 A:middle
let's just go ahead
and return off.

00:24:24.876 --> 00:24:29.716 A:middle
And lastly, traits, what
should the traits be for this.

00:24:30.356 --> 00:24:33.996 A:middle
Well, I'm thinking that the
most appropriate trait here

00:24:34.276 --> 00:24:35.026 A:middle
is button.

00:24:35.086 --> 00:24:37.466 A:middle
This really is a
stateful button.

00:24:37.716 --> 00:24:39.546 A:middle
If you, you know, press it,
you can get it to go on,

00:24:39.546 --> 00:24:41.016 A:middle
if you press it again,
you can get it to go off.

00:24:41.896 --> 00:24:43.566 A:middle
And so, we'll see
how button works.

00:24:44.066 --> 00:24:49.716 A:middle
Let's see lastly, let's take a
look at this Elevator control

00:24:50.016 --> 00:24:52.696 A:middle
on the left hand side of the
screen for our, you know,

00:24:52.696 --> 00:24:53.916 A:middle
to see how to use our basic API.

00:24:54.786 --> 00:24:57.196 A:middle
And so, let's find
it, Elevator control.

00:24:58.556 --> 00:24:59.606 A:middle
We'll drop in our stubs.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:02.816 --> 00:25:05.216 A:middle
Again, let's make it
visible to Accessibility,

00:25:05.216 --> 00:25:06.906 A:middle
that's our first step.

00:25:08.746 --> 00:25:12.076 A:middle
We need an appropriate label
for Accessibility features

00:25:12.076 --> 00:25:13.926 A:middle
to speak or use as they need.

00:25:14.396 --> 00:25:18.106 A:middle
And here, let's do Floor.

00:25:19.686 --> 00:25:23.436 A:middle
It, you know, there's really no
need for a hint in this case.

00:25:23.586 --> 00:25:24.656 A:middle
Again, it's pretty obvious.

00:25:28.656 --> 00:25:31.386 A:middle
The same as before, we're
going to need to convey

00:25:31.386 --> 00:25:33.916 A:middle
that floor value and if
we flip to our header,

00:25:33.916 --> 00:25:35.716 A:middle
we see that this control too has

00:25:36.066 --> 00:25:38.926 A:middle
or this element too has a
floor value associated with it.

00:25:40.986 --> 00:25:50.316 A:middle
So, let's go ahead
and return the-- oops.

00:25:50.836 --> 00:25:54.936 A:middle
And lastly, traits,
what traits do we want?

00:25:55.146 --> 00:25:57.496 A:middle
Well, as I said before,
this is really an

00:25:57.496 --> 00:26:00.296 A:middle
incrementor/decrementor and
so, this is one of those times

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.296 --> 00:26:02.086 A:middle
when you as the implementer,
you know,

00:26:02.086 --> 00:26:03.586 A:middle
have to make these
decisions yourself just

00:26:03.586 --> 00:26:05.066 A:middle
like you're designing
your application.

00:26:05.066 --> 00:26:07.236 A:middle
We're going to have to make
some Accessibility choices.

00:26:07.486 --> 00:26:09.946 A:middle
So, we could make the
top button, you know,

00:26:10.176 --> 00:26:11.636 A:middle
an increment button
and the bottom button a

00:26:11.636 --> 00:26:12.276 A:middle
decrement button.

00:26:12.606 --> 00:26:14.806 A:middle
But again, I've decided that, I
think, it would be most useful

00:26:14.976 --> 00:26:16.536 A:middle
if we just made this
an adjustable control

00:26:16.786 --> 00:26:19.486 A:middle
that you could easily
flip up and down.

00:26:20.076 --> 00:26:25.806 A:middle
And so, let's go ahead do
that, I'll try adjustable.

00:26:26.386 --> 00:26:36.726 A:middle
Great. And so now, let's
go ahead and push this

00:26:37.746 --> 00:26:39.046 A:middle
to our device and see how we did

00:26:39.046 --> 00:26:44.306 A:middle
with just a little
bit of accessibility.

00:26:44.366 --> 00:26:44.716 A:middle
&gt;&gt; WWDC maps.

00:26:45.976 --> 00:26:47.496 A:middle
Double tap to open, VoiceOver.

00:26:47.496 --> 00:26:52.896 A:middle
&gt;&gt; VoiceOver is a
little jumpy, anxious.

00:26:53.396 --> 00:26:59.226 A:middle
[ Pause ]

00:26:59.726 --> 00:27:01.956 A:middle
Okay, so if we switch back
over to our application,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:02.176 --> 00:27:03.346 A:middle
let's turn VoiceOver back on.

00:27:03.796 --> 00:27:05.356 A:middle
&gt;&gt; VoiceOver on, landscape.

00:27:06.526 --> 00:27:09.946 A:middle
Home button to the left,
Moscone West, floor two.

00:27:10.416 --> 00:27:12.516 A:middle
&gt;&gt; Great. So if we check
the title or the header

00:27:12.516 --> 00:27:13.456 A:middle
across the top of the screen.

00:27:13.706 --> 00:27:17.096 A:middle
We see that, we've now mashed
all of that information together

00:27:17.096 --> 00:27:19.006 A:middle
into one element and it
really makes sense, you know,

00:27:19.276 --> 00:27:22.436 A:middle
the context and the label are
really all there together.

00:27:22.696 --> 00:27:24.246 A:middle
So let's try the control
on the side of the screen.

00:27:24.336 --> 00:27:26.176 A:middle
&gt;&gt; Floor two, adjustable.

00:27:27.376 --> 00:27:29.546 A:middle
Swipe up or down with one
finger to adjust the value.

00:27:30.496 --> 00:27:32.566 A:middle
&gt;&gt; Great. So VoiceOver can
see this element as well.

00:27:32.686 --> 00:27:34.216 A:middle
And since we've used
the adjustable trait,

00:27:34.216 --> 00:27:37.106 A:middle
it even gives us a hint
on how to use this element

00:27:37.216 --> 00:27:38.576 A:middle
and it's telling you
to swipe up or down

00:27:38.576 --> 00:27:39.436 A:middle
to increment or decrement.

00:27:39.436 --> 00:27:40.866 A:middle
So, I'm going to swipe up.

00:27:41.216 --> 00:27:41.956 A:middle
&gt;&gt; Two.

00:27:42.566 --> 00:27:43.796 A:middle
&gt;&gt; Unfortunately,
we hear the bonk

00:27:43.796 --> 00:27:45.216 A:middle
so there's something
we're missing there.

00:27:45.406 --> 00:27:47.706 A:middle
We're almost there so we'll
have to handle that one again.

00:27:47.706 --> 00:27:49.456 A:middle
And the Coffee control
at the bottom.

00:27:49.756 --> 00:27:51.286 A:middle
&gt;&gt; Coffee, up button.

00:27:52.416 --> 00:27:52.636 A:middle
&gt;&gt; Great.

00:27:52.636 --> 00:27:53.906 A:middle
&gt;&gt; Show or hide Coffee
locations.

00:27:54.396 --> 00:27:56.356 A:middle
&gt;&gt; And we heard the hint which
gave us some more information

00:27:56.356 --> 00:27:59.636 A:middle
about what this control actually
does, you heard it speak button

00:27:59.636 --> 00:28:01.466 A:middle
because we applied the
button trait to this control.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:01.466 --> 00:28:03.046 A:middle
And so now, let's
go ahead and try

00:28:03.046 --> 00:28:04.486 A:middle
and double tap to activate this.

00:28:05.186 --> 00:28:06.146 A:middle
&gt;&gt; Coffee, off.

00:28:07.736 --> 00:28:09.736 A:middle
&gt;&gt; OK. So we still have
an issue there as well.

00:28:10.296 --> 00:28:11.886 A:middle
You know, VoiceOver is
unable to activate it.

00:28:11.886 --> 00:28:14.226 A:middle
By default, when you double
tap, VoiceOver is going

00:28:14.226 --> 00:28:16.336 A:middle
to send a touch to the
center of that element.

00:28:16.336 --> 00:28:19.666 A:middle
And in this case, since
our control is using swipe,

00:28:20.096 --> 00:28:23.576 A:middle
this touch sent to the center is
not going to do what we want it

00:28:23.576 --> 00:28:26.666 A:middle
to do but we're in
great shape, right?

00:28:26.666 --> 00:28:29.306 A:middle
We fixed a huge amount
of the interface

00:28:29.576 --> 00:28:30.806 A:middle
with just a little bit of work.

00:28:31.006 --> 00:28:32.596 A:middle
So, let's see how we can
get the rest the way there.

00:28:38.156 --> 00:28:40.106 A:middle
Well, the elephant in the
room in this application,

00:28:40.396 --> 00:28:43.096 A:middle
the big hurdle we have left
to get over is that map.

00:28:43.536 --> 00:28:46.066 A:middle
How do we convey this
rich spatial information

00:28:46.246 --> 00:28:49.926 A:middle
out of what is essentially
a custom drawn view.

00:28:50.516 --> 00:28:53.036 A:middle
So, the answer to that is
we use something called the

00:28:53.036 --> 00:28:54.856 A:middle
UIAccessibility container
protocol.

00:28:55.206 --> 00:28:57.826 A:middle
And here, we're going to
create Accessibility elements

00:28:58.126 --> 00:29:01.006 A:middle
that represent everything we
want to convey to the user

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:01.246 --> 00:29:05.156 A:middle
and return them using the
UIAccessibility protocol.

00:29:06.236 --> 00:29:07.046 A:middle
And so, the three methods,

00:29:07.046 --> 00:29:08.986 A:middle
we're going to be using are
accessibilityElementCount,

00:29:09.266 --> 00:29:12.356 A:middle
accessibilityElementAtIndex,
and indexOfAccessibilityElement

00:29:12.646 --> 00:29:14.976 A:middle
and you might be thinking
these look like array methods.

00:29:15.196 --> 00:29:15.856 A:middle
Well, that's great.

00:29:15.856 --> 00:29:17.586 A:middle
They line up very
well with an array.

00:29:17.936 --> 00:29:20.606 A:middle
So, what we can do is
create these elements,

00:29:20.686 --> 00:29:23.386 A:middle
put them in an array and I've
called my array rooms here

00:29:23.546 --> 00:29:26.336 A:middle
and I just rely on
those, NSArray methods

00:29:26.336 --> 00:29:27.676 A:middle
to really return
this information

00:29:27.676 --> 00:29:28.836 A:middle
to Accessibility as needed.

00:29:29.326 --> 00:29:32.756 A:middle
And so, let's look at how we
would do that, how do we fill

00:29:32.756 --> 00:29:34.446 A:middle
that array with accessible
elements?

00:29:34.586 --> 00:29:37.036 A:middle
Well, the first thing we need

00:29:37.036 --> 00:29:40.146 A:middle
to do is create an accessibility
element for every room.

00:29:40.266 --> 00:29:44.406 A:middle
And so, this is an example
of us doing it in a loop.

00:29:44.686 --> 00:29:47.796 A:middle
Secondly, accessibility
elements unlike UIView elements.

00:29:48.276 --> 00:29:50.156 A:middle
If, you know, if we're
talking about UIView elements,

00:29:50.156 --> 00:29:53.026 A:middle
they have an accessibleFrame,
an accessibilityFrame rather

00:29:53.236 --> 00:29:55.846 A:middle
by default, and that
accessibilityFrame is just

00:29:55.846 --> 00:29:57.746 A:middle
pulled from the actual
frame of that element.

00:29:57.746 --> 00:29:59.536 A:middle
But we're creating these
elements, you know,

00:29:59.536 --> 00:30:01.056 A:middle
out of thin air so they
don't have a frame,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:01.286 --> 00:30:03.426 A:middle
so we need to figure out what
we want this frame to be.

00:30:04.056 --> 00:30:06.826 A:middle
And so, I have a helper
method that's, you know,

00:30:07.076 --> 00:30:08.656 A:middle
giving me a Frame for each room

00:30:09.036 --> 00:30:14.406 A:middle
and we have a nice convenience
function in UIAccessibility.h

00:30:14.666 --> 00:30:18.376 A:middle
that lets you convert your
frames from view coordinates

00:30:18.376 --> 00:30:20.716 A:middle
to screen coordinates because
all of the accessibility works

00:30:20.716 --> 00:30:21.726 A:middle
in the screen coordinates.

00:30:22.036 --> 00:30:24.126 A:middle
But the great news is you don't
really have to worry about it,

00:30:24.366 --> 00:30:25.846 A:middle
just use this convenient
function.

00:30:26.986 --> 00:30:29.176 A:middle
And the last thing
we need is a label.

00:30:29.726 --> 00:30:32.626 A:middle
So, we need to, you know,
convey a textual representation

00:30:32.746 --> 00:30:34.886 A:middle
of these accessibility
elements to VoiceOver

00:30:34.886 --> 00:30:36.606 A:middle
or whatever the accessibility
feature is.

00:30:37.106 --> 00:30:40.816 A:middle
Another problem we had
was that Coffee control

00:30:40.816 --> 00:30:42.406 A:middle
across the bottom of
the screen, right?

00:30:42.406 --> 00:30:44.556 A:middle
We double-tapped on
it, nothing happened.

00:30:44.556 --> 00:30:48.096 A:middle
And again, you know, our
hypothesis is that that is

00:30:48.096 --> 00:30:50.476 A:middle
because it was only
activatable by swipe.

00:30:50.476 --> 00:30:52.896 A:middle
We-- in this case, we're
using a UIGestureRecognizer

00:30:52.926 --> 00:30:55.006 A:middle
under the hood and it's
just looking for swipe,

00:30:55.006 --> 00:30:56.466 A:middle
it's not handling touch at all.

00:30:56.856 --> 00:30:58.576 A:middle
And so when you get yourself
into cases like this,

00:30:58.866 --> 00:31:01.826 A:middle
we've added some brand new
API in iOS 7 that's going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:01.826 --> 00:31:03.886 A:middle
to allow you to, you know, get
yourself out of this corner.

00:31:04.056 --> 00:31:06.676 A:middle
And the way you can do that is
overriding accessibilityActivate

00:31:06.916 --> 00:31:07.756 A:middle
on any method.

00:31:07.986 --> 00:31:09.426 A:middle
And if you handle Activate,

00:31:09.666 --> 00:31:11.866 A:middle
you simply return yes
after you handled it.

00:31:11.866 --> 00:31:16.016 A:middle
And so here, what we're going
to do is take that default input

00:31:16.016 --> 00:31:19.286 A:middle
from VoiceOver and transform it
into, you know, the equivalent

00:31:19.286 --> 00:31:20.976 A:middle
of a swipe so this
control just works.

00:31:21.476 --> 00:31:24.476 A:middle
And then lastly,
some really cool API

00:31:24.476 --> 00:31:26.486 A:middle
that we've added is
accessibilityPath.

00:31:26.886 --> 00:31:31.046 A:middle
So, in-- historically, VoiceOver
has only worked with, you know,

00:31:31.046 --> 00:31:32.356 A:middle
the cursor has only been a rect.

00:31:32.746 --> 00:31:35.066 A:middle
And the problem with
this is that we're unable

00:31:35.066 --> 00:31:37.976 A:middle
to convey spatial information
to users, you know, if--

00:31:37.976 --> 00:31:41.796 A:middle
you can imagine if this Map used
a rect for every single element,

00:31:42.006 --> 00:31:43.166 A:middle
it wouldn't really help us.

00:31:43.166 --> 00:31:45.556 A:middle
We wouldn't really get any of
that rich spatial information.

00:31:45.966 --> 00:31:50.106 A:middle
But now in iOS 7, we can
override accessibility path

00:31:50.156 --> 00:31:52.806 A:middle
or set accessibility path as
necessary and this is going

00:31:52.806 --> 00:31:53.466 A:middle
to be preferred

00:31:53.466 --> 00:31:55.406 A:middle
over accessibilityFrame
any time it's present.

00:31:55.646 --> 00:31:56.606 A:middle
I mean you can see
what this is--

00:31:56.606 --> 00:32:00.066 A:middle
on the screen, what this
is going to allow us to do.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:00.506 --> 00:32:02.766 A:middle
Great. So, let's now go
back to the application

00:32:03.066 --> 00:32:04.826 A:middle
and implement some of
this more advanced API

00:32:04.826 --> 00:32:06.346 A:middle
and see what we can do.

00:32:06.596 --> 00:32:09.966 A:middle
OK. Again, I'm going to go
ahead and grab my stubs,

00:32:10.996 --> 00:32:17.916 A:middle
I'm going to find my
floorPlanView and drop them in.

00:32:19.156 --> 00:32:21.186 A:middle
As we said, we need
somewhere to cache this.

00:32:21.186 --> 00:32:22.946 A:middle
We don't want to be making these
elements all the time, right?

00:32:23.236 --> 00:32:31.156 A:middle
That would be expensive so let's
create an array to store them in

00:32:31.916 --> 00:32:40.966 A:middle
and I'll call my array,
how about axRooms?

00:32:43.286 --> 00:32:47.456 A:middle
Great. And so now, as we saw
on the slide, we can simply go

00:32:47.456 --> 00:32:51.366 A:middle
through these, use our array,

00:32:53.596 --> 00:32:56.776 A:middle
and fill these in
as appropriate.

00:32:58.006 --> 00:33:00.356 A:middle
So, for
accessibilityElementAtIndex,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:00.836 --> 00:33:05.126 A:middle
we're just going to use the
corresponding method on NSArray.

00:33:08.166 --> 00:33:10.676 A:middle
Similarly for
accessibilityElementCount,

00:33:10.816 --> 00:33:12.076 A:middle
we just go right to the array.

00:33:13.426 --> 00:33:18.926 A:middle
And then as expected lastly,
for indexOfAccessibilityElement,

00:33:18.926 --> 00:33:21.266 A:middle
we can just align that
well with indexOfObject

00:33:21.616 --> 00:33:22.566 A:middle
and pass that element in.

00:33:23.796 --> 00:33:26.996 A:middle
Great. So now, we're returning
these elements as needed

00:33:27.256 --> 00:33:28.836 A:middle
but we still have to
create them, right?

00:33:29.006 --> 00:33:32.026 A:middle
And to do that, let's go ahead

00:33:32.026 --> 00:33:35.086 A:middle
and grab our helper
method and walk through it.

00:33:37.046 --> 00:33:39.836 A:middle
So here, we're lazily
creating an array

00:33:39.836 --> 00:33:43.066 A:middle
to hold these accessibility
rooms and so, this won't happen

00:33:43.096 --> 00:33:46.036 A:middle
until Accessibility asks
us for them, you know,

00:33:46.036 --> 00:33:48.236 A:middle
and at the very last minute
lazily, they will be created.

00:33:48.646 --> 00:33:50.526 A:middle
And then you can see, I
have a helper method here,

00:33:50.566 --> 00:33:51.626 A:middle
floor plan features.

00:33:52.206 --> 00:33:54.436 A:middle
Under the hood, that
is returning to me all

00:33:54.436 --> 00:33:56.336 A:middle
of these paths that
are being drawn

00:33:56.336 --> 00:33:57.716 A:middle
because that's really
what we need.

00:33:58.326 --> 00:34:00.836 A:middle
And so, you might notice that we
are enumerating this backwards

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.836 --> 00:34:02.586 A:middle
and there is a reason
we're doing that.

00:34:02.586 --> 00:34:03.896 A:middle
We're enumerating backwards

00:34:04.326 --> 00:34:09.596 A:middle
because I've ordered my bezier
paths from biggest to smallest.

00:34:09.876 --> 00:34:11.206 A:middle
And so, it's important--

00:34:11.206 --> 00:34:15.045 A:middle
the array of elements that
we're creating are actually used

00:34:15.045 --> 00:34:16.176 A:middle
for hit testing as well.

00:34:16.206 --> 00:34:19.186 A:middle
As a user drags their finger
around the screen, you know,

00:34:19.186 --> 00:34:20.016 A:middle
that's how we're hit testing

00:34:20.016 --> 00:34:22.406 A:middle
for these accessibility
elements that we've created.

00:34:22.585 --> 00:34:25.186 A:middle
And so we have to order these
from smallest to biggest.

00:34:25.186 --> 00:34:27.076 A:middle
We want, you know,
elements that are

00:34:27.076 --> 00:34:29.545 A:middle
above bigger elements
to be hit testable.

00:34:29.706 --> 00:34:32.136 A:middle
If we put the largest
element on top, you know,

00:34:32.136 --> 00:34:34.126 A:middle
none of the smaller sub-elements
would ever be reached.

00:34:34.315 --> 00:34:35.366 A:middle
So, it's important in this case

00:34:35.366 --> 00:34:37.045 A:middle
that we go backwards
through the array.

00:34:37.045 --> 00:34:38.585 A:middle
And then again, at every step,

00:34:38.585 --> 00:34:40.396 A:middle
we're going to create an
accessibility element,

00:34:40.946 --> 00:34:43.096 A:middle
we're going to get an
appropriate accessibility label

00:34:43.096 --> 00:34:45.346 A:middle
for that element and
we're going to get

00:34:45.585 --> 00:34:47.996 A:middle
and set an appropriate
accessibility path

00:34:47.996 --> 00:34:48.585 A:middle
for that element.

00:34:48.585 --> 00:34:50.576 A:middle
And just like we have
a convenience function

00:34:50.876 --> 00:34:53.516 A:middle
for converting frames
to screen coordinates,

00:34:53.596 --> 00:34:55.886 A:middle
we also have the convenience
function for converting paths

00:34:55.886 --> 00:34:57.836 A:middle
to screen coordinates
so it's really helpful.

00:34:59.056 --> 00:35:01.846 A:middle
So, that's not it, we
have one more thing to do.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:02.156 --> 00:35:05.146 A:middle
What happens when we change
floors or show or hide Coffee?

00:35:05.466 --> 00:35:07.796 A:middle
Well we're going to need to
throw this array of elements

00:35:07.796 --> 00:35:09.186 A:middle
out occasionally, right?

00:35:09.186 --> 00:35:10.636 A:middle
If we select a different floor,

00:35:10.846 --> 00:35:13.446 A:middle
those accessibility elements
we created are no longer valid.

00:35:14.036 --> 00:35:17.726 A:middle
And so, anytime we set a floor,

00:35:18.376 --> 00:35:25.006 A:middle
we can just simply
throw those rooms out.

00:35:27.076 --> 00:35:32.466 A:middle
And similarly, if we change
the visibility of Coffee,

00:35:33.126 --> 00:35:34.906 A:middle
we can just, again,
throw the rooms out.

00:35:35.116 --> 00:35:38.076 A:middle
And the next time, VoiceOver or
an Accessibility feature calls

00:35:38.076 --> 00:35:40.636 A:middle
in looking for them, they will
be just created, you know,

00:35:40.766 --> 00:35:42.326 A:middle
with new updated information.

00:35:44.896 --> 00:35:48.106 A:middle
Great. So, two more
problems we had.

00:35:48.106 --> 00:35:49.966 A:middle
One, we still have to
fix our Coffee control,

00:35:49.966 --> 00:35:51.386 A:middle
so let's go ahead
and do that now.

00:35:57.126 --> 00:35:59.276 A:middle
And as I stated, the
new method we're looking

00:35:59.276 --> 00:36:01.586 A:middle
for here is
accessibilityActivate.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:02.766 --> 00:36:05.576 A:middle
And so if we jump to the header,
we again see that on state

00:36:05.736 --> 00:36:08.006 A:middle
and really, all we want to
do is toggle that on state

00:36:08.746 --> 00:36:10.286 A:middle
when VoiceOver double taps.

00:36:11.036 --> 00:36:16.826 A:middle
So we can do self.on
equals not self.isOn

00:36:17.836 --> 00:36:20.426 A:middle
and that should take care of it.

00:36:20.726 --> 00:36:23.966 A:middle
And as I said before,
if we are handling it,

00:36:24.086 --> 00:36:26.416 A:middle
we want to return yes and
in this case, obviously,

00:36:26.416 --> 00:36:27.566 A:middle
we're handling it every time.

00:36:27.566 --> 00:36:28.976 A:middle
Maybe you have some
more complex logic

00:36:29.226 --> 00:36:32.526 A:middle
and this return value
is not constant.

00:36:33.136 --> 00:36:36.616 A:middle
And then lastly, we have
this elevator control.

00:36:37.066 --> 00:36:39.696 A:middle
We need to swipe up and
down to work appropriately.

00:36:40.666 --> 00:36:42.926 A:middle
So, let's go ahead and find
the elevator control again.

00:36:43.536 --> 00:36:49.856 A:middle
And the last two methods we need
to implement are two methods

00:36:49.856 --> 00:36:51.826 A:middle
that work hand in hand
with the adjustable trait

00:36:52.136 --> 00:36:54.856 A:middle
and those methods are
accessibilityDecrement

00:36:56.356 --> 00:37:00.186 A:middle
and similarly,
accessibilityIncrement.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:00.776 --> 00:37:06.276 A:middle
And so, it just so happens,
I have a decrement floor

00:37:06.276 --> 00:37:09.786 A:middle
and increment floor method and
so, this will be really easy.

00:37:10.386 --> 00:37:16.006 A:middle
I can just go ahead and
call decrement floor

00:37:16.176 --> 00:37:19.346 A:middle
in the accessibilityDecrement
method and similarly,

00:37:20.756 --> 00:37:23.086 A:middle
increment floor in the
accessibilityIncrement method.

00:37:24.506 --> 00:37:29.756 A:middle
Great. So let's clean
and go ahead

00:37:29.756 --> 00:37:31.196 A:middle
and build our application
and see how we did.

00:37:31.696 --> 00:37:37.786 A:middle
[ Pause ]

00:37:38.286 --> 00:37:40.176 A:middle
Okay, let's turn VoiceOver on.

00:37:41.666 --> 00:37:43.386 A:middle
&gt;&gt; VoiceOver on landscape.

00:37:44.696 --> 00:37:45.556 A:middle
Home button to the left.

00:37:46.356 --> 00:37:48.636 A:middle
&gt;&gt; So, let's go down and try
the elevator control first.

00:37:48.976 --> 00:37:50.146 A:middle
&gt;&gt; Floor two.

00:37:50.256 --> 00:37:52.606 A:middle
&gt;&gt; I'm going to stop
VoiceOver Speech

00:37:52.606 --> 00:37:54.516 A:middle
by doing just a two
finger tap on the screen.

00:37:55.006 --> 00:37:57.506 A:middle
Now, I remember the VoiceOver
told me to swipe up or down

00:37:57.506 --> 00:37:58.836 A:middle
to adjust this so
let's swipe up.

00:37:59.256 --> 00:37:59.856 A:middle
&gt;&gt; Two.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.266 --> 00:38:04.646 A:middle
&gt;&gt; And it did not
work and that happens.

00:38:05.586 --> 00:38:06.066 A:middle
And so let's-- -

00:38:06.066 --> 00:38:06.466 A:middle
&gt;&gt; Take time.

00:38:06.466 --> 00:38:07.196 A:middle
&gt;&gt; Let's try repushing.

00:38:07.726 --> 00:38:15.446 A:middle
&gt;&gt; Double tap to open.

00:38:15.446 --> 00:38:16.806 A:middle
&gt;&gt; WW-- floor three.

00:38:16.896 --> 00:38:17.546 A:middle
&gt;&gt; Okay, there we go.

00:38:17.546 --> 00:38:20.706 A:middle
We just-- Xcode problem,
it was angry with us

00:38:21.116 --> 00:38:24.726 A:middle
but so we repushed the code,
we can do the swipe up and now,

00:38:24.726 --> 00:38:25.386 A:middle
we get the third floor.

00:38:25.386 --> 00:38:26.166 A:middle
And if we swipe down-- -

00:38:26.366 --> 00:38:26.856 A:middle
&gt;&gt; Two.

00:38:27.076 --> 00:38:27.806 A:middle
&gt;&gt; Second floor.

00:38:28.006 --> 00:38:28.316 A:middle
&gt;&gt; One.

00:38:28.526 --> 00:38:28.976 A:middle
&gt;&gt; First floor.

00:38:28.976 --> 00:38:29.306 A:middle
Great.

00:38:29.826 --> 00:38:30.146 A:middle
&gt;&gt; Coffee--

00:38:30.356 --> 00:38:31.446 A:middle
&gt;&gt; Let's try that
Coffee control.

00:38:31.526 --> 00:38:33.336 A:middle
I'm going to double tap on it.

00:38:33.806 --> 00:38:34.816 A:middle
&gt;&gt; Coffee on.

00:38:34.816 --> 00:38:35.216 A:middle
&gt;&gt; And you can see

00:38:35.216 --> 00:38:37.456 A:middle
that VoiceOver produces
the appropriate noise

00:38:37.456 --> 00:38:38.956 A:middle
to let the user know
that yes, this worked.

00:38:39.166 --> 00:38:41.086 A:middle
Everything is happy,
we now see Coffee.

00:38:41.426 --> 00:38:44.096 A:middle
And now really, the biggest
issue is how did we do

00:38:44.096 --> 00:38:45.216 A:middle
in terms of the path?

00:38:45.686 --> 00:38:47.216 A:middle
So, let's touch in to the lobby.

00:38:47.526 --> 00:38:47.946 A:middle
&gt;&gt; Lobby.

00:38:48.756 --> 00:38:49.836 A:middle
&gt;&gt; Great. So now, we can see

00:38:49.836 --> 00:38:51.256 A:middle
that VoiceOver knows
about the lobby.

00:38:51.526 --> 00:38:54.096 A:middle
And if I move my finger
down, take the escalator.

00:38:54.156 --> 00:38:54.736 A:middle
&gt;&gt; Escalator.

00:38:54.876 --> 00:38:55.656 A:middle
&gt;&gt; I see the escalator.

00:38:55.696 --> 00:38:57.896 A:middle
And now, I can just
kind of move up and I'm

00:38:57.896 --> 00:38:59.436 A:middle
in the lobby, I'm
still moving up.

00:38:59.466 --> 00:38:59.876 A:middle
&gt;&gt; Stairs.

00:38:59.876 --> 00:39:01.286 A:middle
&gt;&gt; And I get to the
stairs eventually.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:01.286 --> 00:39:04.256 A:middle
So you can see that this allows
VoiceOver users to, you know,

00:39:04.256 --> 00:39:06.716 A:middle
move their finger around the
screen and really get a sense

00:39:06.716 --> 00:39:08.316 A:middle
of the spatial nature
of this Map.

00:39:08.836 --> 00:39:11.256 A:middle
&gt;&gt; Hold hot coffee.

00:39:11.556 --> 00:39:12.886 A:middle
&gt;&gt; Thankfully, even
Coffee works.

00:39:14.466 --> 00:39:28.746 A:middle
&gt;&gt; VoiceOver off.

00:39:28.746 --> 00:39:29.556 A:middle
[ Pause ]

00:39:29.556 --> 00:39:30.366 A:middle
[ Applause ]

00:39:30.366 --> 00:39:32.716 A:middle
&gt;&gt; Great. So as I said, you
can see we took this really

00:39:32.716 --> 00:39:35.426 A:middle
inaccessible application
and made it Accessible

00:39:35.616 --> 00:39:36.726 A:middle
with just a little bit of work.

00:39:37.066 --> 00:39:38.496 A:middle
And, you know, I
think you're going

00:39:38.496 --> 00:39:40.306 A:middle
to find that's the
case for you as well.

00:39:41.166 --> 00:39:43.056 A:middle
And so now, let's move
on to Guided Access.

00:39:43.276 --> 00:39:44.666 A:middle
I want to talk about a
few things we learned

00:39:44.756 --> 00:39:47.636 A:middle
from Guided Access since
we introduced it in iOS 6.

00:39:47.936 --> 00:39:50.106 A:middle
And so, the first thing we
learned was hardware buttons

00:39:50.106 --> 00:39:50.646 A:middle
are useful.

00:39:50.966 --> 00:39:53.116 A:middle
Our initial approach
with Guided Access was

00:39:53.116 --> 00:39:54.236 A:middle
when Guided Access is active.

00:39:54.556 --> 00:39:56.876 A:middle
We kind of remove all
hardware buttons, you know,

00:39:56.876 --> 00:39:58.256 A:middle
none of them work,
we really want

00:39:58.256 --> 00:39:59.386 A:middle
to remove all those
distractions.

00:39:59.676 --> 00:40:02.196 A:middle
But we got some feedback and,
you know, it turns out a lot

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:02.196 --> 00:40:03.746 A:middle
of really powerful
great, you know,

00:40:03.746 --> 00:40:05.516 A:middle
camera apps use the
volume buttons

00:40:05.756 --> 00:40:07.806 A:middle
and other apps use more
buttons for different things

00:40:07.806 --> 00:40:10.476 A:middle
so lesson number one,
hardware buttons are useful.

00:40:11.066 --> 00:40:15.146 A:middle
Lesson number two is if you want
to occlude a region from touch

00:40:15.146 --> 00:40:18.096 A:middle
in Guided Access, currently,
you know, you draw an area

00:40:18.096 --> 00:40:19.546 A:middle
around that region on the--

00:40:19.626 --> 00:40:22.236 A:middle
that area becomes grade out
when Guided Access is active.

00:40:22.486 --> 00:40:23.306 A:middle
And so, that works great.

00:40:23.306 --> 00:40:25.286 A:middle
You can disable buttons
as you need to.

00:40:25.286 --> 00:40:28.716 A:middle
The only problem is this doesn't
address the visual distractions

00:40:28.756 --> 00:40:31.106 A:middle
associated with the application
and so, that's the problem

00:40:31.106 --> 00:40:33.476 A:middle
and we think we can do better.

00:40:33.596 --> 00:40:35.616 A:middle
And lastly, developers
are eager to adapt.

00:40:35.786 --> 00:40:38.526 A:middle
A lot of you reached
out to us and, you know,

00:40:38.526 --> 00:40:40.026 A:middle
that's what drove this API.

00:40:40.026 --> 00:40:42.066 A:middle
And so, we're really
happy to show it to you

00:40:42.066 --> 00:40:43.036 A:middle
and see how you use it.

00:40:43.556 --> 00:40:46.776 A:middle
And so, the best way to
explain this is to jump right in

00:40:46.836 --> 00:40:48.896 A:middle
and just give a demo
of Guided Access.

00:40:48.896 --> 00:40:48.963 A:middle
[ Pause ]

00:40:48.963 --> 00:40:58.666 A:middle
So now, I'm going to return to
the Accessibility Settings menu,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:00.056 --> 00:41:01.466 A:middle
to General Accessibility.

00:41:01.536 --> 00:41:06.666 A:middle
I'm going to scroll down, remove
VoiceOver from my shortcut

00:41:06.786 --> 00:41:08.586 A:middle
and instead, add Guided Access.

00:41:09.196 --> 00:41:11.356 A:middle
I'm going to go ahead
and set a passcode

00:41:11.356 --> 00:41:13.866 A:middle
for Guided Access, nobody look.

00:41:14.476 --> 00:41:18.906 A:middle
Great. So we're all setup,
let's open our application.

00:41:24.236 --> 00:41:25.626 A:middle
And so, if I click three times

00:41:26.436 --> 00:41:27.816 A:middle
and enter the Guided
Access workspace.

00:41:28.966 --> 00:41:31.336 A:middle
So, what if we want to share
this application with someone

00:41:31.656 --> 00:41:33.576 A:middle
or maybe we're a
developer that wants

00:41:33.576 --> 00:41:35.776 A:middle
to develop one application
for two purposes?

00:41:36.036 --> 00:41:39.336 A:middle
One application to give to
users of say a conference

00:41:39.336 --> 00:41:43.186 A:middle
at this venue and that same
application to maybe post

00:41:43.186 --> 00:41:45.296 A:middle
around the halls and
just display the floors.

00:41:45.766 --> 00:41:47.576 A:middle
So, maybe you want to
hide certain controls

00:41:47.576 --> 00:41:49.466 A:middle
or really change the user
interface on the fly.

00:41:49.986 --> 00:41:53.686 A:middle
And so up until now, really, the
only option you've had is again,

00:41:54.046 --> 00:41:56.196 A:middle
to circle these controls
you want to occlude

00:41:56.506 --> 00:41:59.356 A:middle
and then VoiceOver or-- and
then Guided Access will disallow

00:41:59.356 --> 00:42:00.866 A:middle
touch from happening
in these places

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:01.066 --> 00:42:02.766 A:middle
and so users won't be able
to change these things.

00:42:02.816 --> 00:42:06.936 A:middle
But again, especially if you're
developing one application

00:42:06.936 --> 00:42:10.486 A:middle
for both users in Kiosk, these
visual distractions still exist

00:42:10.486 --> 00:42:12.026 A:middle
and it, you know, it looks
pretty unprofessional

00:42:12.026 --> 00:42:12.506 A:middle
in that case.

00:42:12.546 --> 00:42:15.636 A:middle
And so, let's go ahead
and remove those regions.

00:42:16.226 --> 00:42:20.306 A:middle
And so now, in Guided Access
in iOS 7, any app that's bought

00:42:20.306 --> 00:42:22.996 A:middle
into this developer API
will have this new option

00:42:23.316 --> 00:42:24.796 A:middle
that we can see in the
bottom right corner

00:42:25.096 --> 00:42:28.186 A:middle
and you're presented with
options button and an icon

00:42:28.186 --> 00:42:29.896 A:middle
of your application and
your application's name.

00:42:30.186 --> 00:42:31.486 A:middle
And so, when I touch
that options button,

00:42:31.866 --> 00:42:35.586 A:middle
up pops this list of
all of the restrictions

00:42:35.666 --> 00:42:37.806 A:middle
that my application wants
to provide to the user.

00:42:38.066 --> 00:42:41.096 A:middle
And so in this case, we see that
we have a controls restriction

00:42:41.306 --> 00:42:43.816 A:middle
and some detail text that kind
of explains the implications

00:42:43.816 --> 00:42:44.696 A:middle
of using this control.

00:42:44.696 --> 00:42:47.666 A:middle
In this case, these
controls adjust the floor

00:42:47.666 --> 00:42:48.356 A:middle
and show Coffee.

00:42:48.356 --> 00:42:50.576 A:middle
And so, if I go ahead and
turn those controls off

00:42:51.156 --> 00:42:54.696 A:middle
and resume Guided Access,
what happens is we call

00:42:54.696 --> 00:42:56.736 A:middle
into your application and
we tell you, you know,

00:42:56.886 --> 00:43:00.486 A:middle
the user wants to make
these changes, you know,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:00.626 --> 00:43:03.086 A:middle
act appropriately, and
then it's your job--

00:43:03.086 --> 00:43:05.786 A:middle
this is your opportunity to
then go into your application

00:43:05.786 --> 00:43:07.416 A:middle
and make the appropriate
visual changes

00:43:07.606 --> 00:43:09.326 A:middle
or respond otherwise
accordingly.

00:43:09.896 --> 00:43:16.006 A:middle
And so similarly, if we go back
in, turn the controls back on

00:43:16.376 --> 00:43:17.756 A:middle
and resume, you can see

00:43:17.756 --> 00:43:20.616 A:middle
that your application is given
another call and, you know,

00:43:20.616 --> 00:43:23.586 A:middle
here is your chance to
re-add those controls

00:43:23.586 --> 00:43:25.086 A:middle
to your view hierarchy.

00:43:25.656 --> 00:43:27.736 A:middle
So that is the new Guided
Access Developer API

00:43:27.916 --> 00:43:29.286 A:middle
so let's take a look
at how it works.

00:43:35.746 --> 00:43:36.826 A:middle
So right off the
bat, the first things

00:43:36.856 --> 00:43:40.526 A:middle
to note are these restrictions
are per application,

00:43:40.526 --> 00:43:43.086 A:middle
they are not per view they
are not per view controller.

00:43:43.086 --> 00:43:45.376 A:middle
And because of that,
the appropriate place

00:43:45.376 --> 00:43:48.566 A:middle
to implement them is on
your UIApplicationDelegate.

00:43:48.566 --> 00:43:51.066 A:middle
So, this protocol exists
there and there alone.

00:43:51.466 --> 00:43:54.046 A:middle
The second thing is we
wanted to make buying

00:43:54.046 --> 00:43:55.436 A:middle
in as easy as possible.

00:43:55.436 --> 00:43:57.406 A:middle
We really wanted to
lower the bar and,

00:43:57.406 --> 00:43:58.586 A:middle
you know, make adaption easy.

00:43:58.876 --> 00:44:01.226 A:middle
And so for that reason,
state persistence comes free.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:01.526 --> 00:44:03.836 A:middle
You don't have to maintain
state in your application

00:44:04.126 --> 00:44:06.646 A:middle
of what the user has currently
set this restriction to.

00:44:06.816 --> 00:44:10.296 A:middle
We do that for you and we simply
call you anytime you need to,

00:44:10.296 --> 00:44:12.866 A:middle
you know, update your
interface as appropriate.

00:44:13.376 --> 00:44:16.646 A:middle
And so, the first three
methods that we're going to look

00:44:16.676 --> 00:44:18.996 A:middle
at are guidedAccessRestriction
Identifiers,

00:44:19.256 --> 00:44:21.226 A:middle
textForGuided
AccessRestrictionWith

00:44:21.226 --> 00:44:23.326 A:middle
Identifier: and detailed
TextForGuided

00:44:23.326 --> 00:44:24.806 A:middle
AccessRestrictionWith
Identifier:.

00:44:24.866 --> 00:44:26.986 A:middle
And so let's start from the top.

00:44:27.276 --> 00:44:29.976 A:middle
In Guided Access restriction
identifiers, you're going

00:44:29.976 --> 00:44:33.806 A:middle
to want to return a unique
restriction identifier

00:44:34.326 --> 00:44:36.006 A:middle
for every restriction that you'd

00:44:36.006 --> 00:44:39.706 A:middle
like to enable the
user to control.

00:44:39.936 --> 00:44:42.456 A:middle
And so in this case, I've just,
you know, made a static string

00:44:42.456 --> 00:44:44.426 A:middle
for this to, again, for
brevity to kind of shorten it.

00:44:44.806 --> 00:44:49.626 A:middle
But the header offers
more on the way to do this

00:44:49.626 --> 00:44:52.726 A:middle
and we really recommend that
you use reversed DNS notation.

00:44:52.726 --> 00:44:55.466 A:middle
These all need to be
unique in your application.

00:44:56.746 --> 00:44:58.846 A:middle
So again, here is where
you would return an array

00:44:58.846 --> 00:44:59.656 A:middle
of these strings.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:00.076 --> 00:45:02.396 A:middle
And then, the other two
methods we're going to call

00:45:02.396 --> 00:45:03.776 A:middle
into your application
when we detect

00:45:04.126 --> 00:45:05.476 A:middle
that you have a restriction
you'd

00:45:05.476 --> 00:45:06.426 A:middle
like to convey to the user.

00:45:06.756 --> 00:45:08.756 A:middle
Then for each restriction
identifier,

00:45:08.956 --> 00:45:10.746 A:middle
we call in your application
and we say, you know,

00:45:10.746 --> 00:45:12.526 A:middle
what is the text you would
like presented to the user

00:45:12.526 --> 00:45:13.736 A:middle
for this restriction identifier?

00:45:14.026 --> 00:45:15.996 A:middle
And similarly, what is
the detail text you would

00:45:15.996 --> 00:45:17.006 A:middle
like presented to the user.

00:45:17.236 --> 00:45:19.206 A:middle
So this is your chance
to give that to us

00:45:19.206 --> 00:45:20.386 A:middle
and we will display
it to the user.

00:45:20.686 --> 00:45:22.626 A:middle
I mean you can see here, I'm
not actually checking the

00:45:22.626 --> 00:45:26.026 A:middle
restriction IDs, we only have
one restriction so, you know,

00:45:26.026 --> 00:45:28.146 A:middle
we can go ahead and safely
just return the values

00:45:28.146 --> 00:45:29.036 A:middle
for our one restriction.

00:45:29.986 --> 00:45:32.866 A:middle
And the last method is mouthful
that we want to take a look at.

00:45:33.176 --> 00:45:36.316 A:middle
guidedAccessRestriction
WithIdentifier:did ChangeState:.

00:45:36.676 --> 00:45:38.216 A:middle
So, this is what I was
talking about before

00:45:38.446 --> 00:45:40.286 A:middle
and the reason you don't
have to maintain state

00:45:40.286 --> 00:45:42.666 A:middle
in your application,
we're doing that for you.

00:45:42.666 --> 00:45:45.846 A:middle
And anytime the state for
restriction identifier changes,

00:45:46.116 --> 00:45:49.296 A:middle
we simply call into this
method with the restriction ID

00:45:49.296 --> 00:45:51.246 A:middle
and with the new state
of that restriction

00:45:51.456 --> 00:45:52.636 A:middle
and this is really your chance

00:45:52.636 --> 00:45:55.026 A:middle
to update your user
interface as appropriate.

00:45:55.266 --> 00:45:58.966 A:middle
And so here, we're doing self--
set control enabled enabled.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:00.116 --> 00:46:02.706 A:middle
And lastly, we do
have a helper function

00:46:02.996 --> 00:46:05.036 A:middle
that will let you check
the state of a restriction

00:46:05.266 --> 00:46:06.756 A:middle
at any time if you need to.

00:46:07.626 --> 00:46:11.346 A:middle
So that's Guided Access and, you
know, we're really happy to get

00:46:11.346 --> 00:46:13.556 A:middle
out there, we're excited to see
what you're going to do with it.

00:46:13.556 --> 00:46:15.486 A:middle
You know, you asked
for it, we delivered it

00:46:15.486 --> 00:46:18.606 A:middle
but there's one more thing that
you asked for over the years

00:46:18.606 --> 00:46:19.816 A:middle
and we're really happy
to give it to you today

00:46:19.816 --> 00:46:22.796 A:middle
and that's a brand new
Text-to-Speech API.

00:46:23.296 --> 00:46:28.926 A:middle
[ Applause ]

00:46:29.426 --> 00:46:30.766 A:middle
So, we know a lot
of applications

00:46:30.876 --> 00:46:33.656 A:middle
in the App Store have some
Text-To-Speech functionality.

00:46:33.656 --> 00:46:36.806 A:middle
And really, up until today,
your only option has been to,

00:46:36.966 --> 00:46:39.306 A:middle
you know, roll your own
Text-To-Speech ability

00:46:39.306 --> 00:46:41.716 A:middle
into your application
and while this works,

00:46:41.716 --> 00:46:43.446 A:middle
it can make your
application quite large.

00:46:43.726 --> 00:46:46.136 A:middle
And so, we have gone
ahead and added this in

00:46:46.216 --> 00:46:48.646 A:middle
and the good news is it's
extremely easy to use,

00:46:48.646 --> 00:46:50.266 A:middle
you can use it in
just three lines,

00:46:50.266 --> 00:46:51.626 A:middle
you can make your
application speak.

00:46:51.626 --> 00:46:53.246 A:middle
And now, you have this,
you know, this option.

00:46:53.726 --> 00:46:57.506 A:middle
First you just allocate and
initialize a synthesizer object.

00:46:58.366 --> 00:47:00.666 A:middle
Second, you make an
utterance out of a string

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:00.736 --> 00:47:01.766 A:middle
that you'd like to speak.

00:47:02.696 --> 00:47:05.776 A:middle
And last, you just speak the
utterance and it's that easy.

00:47:05.776 --> 00:47:07.846 A:middle
You can make your app
speak with just three lines

00:47:08.386 --> 00:47:11.376 A:middle
and it's also worth noting
that this works in Safari.

00:47:12.346 --> 00:47:15.126 A:middle
There are some Web Speech,
there is a Web Speech ability

00:47:15.356 --> 00:47:18.406 A:middle
that you can leverage to get
this to work right from Safari

00:47:18.406 --> 00:47:19.736 A:middle
if you're working on
a web application.

00:47:21.676 --> 00:47:23.856 A:middle
Great. So for more
information, go ahead

00:47:23.856 --> 00:47:25.606 A:middle
and check our documentation.

00:47:25.606 --> 00:47:28.276 A:middle
We have a great wealth of
Accessibility documentation

00:47:28.446 --> 00:47:29.436 A:middle
that should help
you get started.

00:47:30.036 --> 00:47:31.646 A:middle
And if you, you know, you
have deeper questions,

00:47:31.646 --> 00:47:33.176 A:middle
the dev forms are always
a great place to go

00:47:33.176 --> 00:47:35.136 A:middle
for those deeper questions.

00:47:36.206 --> 00:47:40.496 A:middle
For related sessions, there is
a desktop accessibility talk

00:47:40.866 --> 00:47:43.676 A:middle
in this room directly
following this so stick

00:47:43.676 --> 00:47:46.686 A:middle
around if you're interested
in desktop accessibility.

00:47:47.036 --> 00:47:52.216 A:middle
Or if you are interested
in developing, you know,

00:47:52.216 --> 00:47:53.436 A:middle
Made For iPhone hearing aids,

00:47:53.746 --> 00:47:57.276 A:middle
or switches for our Switch
Control feature, you can come

00:47:57.276 --> 00:48:02.206 A:middle
over to the designing
accessories for iOS and OS X.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:02.526 --> 00:48:06.536 A:middle
I mean, that is also directly
following us over in Nob Hill.

00:48:08.556 --> 00:48:11.086 A:middle
So in summary, we saw that
adding accessibility is easy,

00:48:11.376 --> 00:48:15.196 A:middle
I mean, we made this application
accessible with just a few lines

00:48:15.236 --> 00:48:17.206 A:middle
and it was, you know,
virtually inaccessible before.

00:48:17.856 --> 00:48:20.806 A:middle
It's going to get you more
users and great feedback.

00:48:20.806 --> 00:48:21.856 A:middle
We've always found
throughout the years

00:48:21.856 --> 00:48:24.286 A:middle
that the Accessibility
communities provide us

00:48:24.286 --> 00:48:25.326 A:middle
with great feedback.

00:48:25.916 --> 00:48:27.566 A:middle
And then lastly, you know,

00:48:27.566 --> 00:48:29.636 A:middle
we take accessibility
very seriously here.

00:48:30.016 --> 00:48:32.496 A:middle
And so, we want you to too
and it's that partnership

00:48:32.536 --> 00:48:37.066 A:middle
that has made iOS really the
best mobile accessibility

00:48:37.066 --> 00:48:37.716 A:middle
platform out there.

00:48:38.936 --> 00:48:39.846 A:middle
Thank you all for coming.

