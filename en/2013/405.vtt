WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:09.656 A:middle
[ Silence ]

00:00:10.156 --> 00:00:13.896 A:middle
&gt;&gt; Good morning and welcome to
Interface Builder Core Concepts.

00:00:14.186 --> 00:00:16.756 A:middle
My name is Kelly Keenan and
I'm going to be stepping you

00:00:16.846 --> 00:00:18.856 A:middle
through the first
half of this session.

00:00:19.976 --> 00:00:23.226 A:middle
Now, what we're going to be
doing today is talking about how

00:00:23.226 --> 00:00:28.706 A:middle
to get started creating
fantastic user interfaces using

00:00:28.706 --> 00:00:33.956 A:middle
Interface Builder
inside of Xcode.

00:00:35.046 --> 00:00:41.726 A:middle
So, the way that we build
interfaces in Xcode is

00:00:41.726 --> 00:00:45.766 A:middle
by dragging and dropping
actual live controls and views,

00:00:46.436 --> 00:00:50.626 A:middle
and then configuring them
and making connections

00:00:50.626 --> 00:00:53.496 A:middle
between those views and
controls and your code.

00:00:55.216 --> 00:00:59.986 A:middle
So, it's perfectly
normal to write code

00:00:59.986 --> 00:01:04.876 A:middle
to design your user interface,
and this code does just that.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:05.046 --> 00:01:07.466 A:middle
For example, it creates
an image,

00:01:07.536 --> 00:01:11.196 A:middle
and then it creates a button,
and then it adds the image

00:01:11.226 --> 00:01:14.436 A:middle
to the button, it sets the
buttons target in action

00:01:15.076 --> 00:01:16.926 A:middle
and it adds the button
to the window.

00:01:17.906 --> 00:01:20.026 A:middle
Now these are really simple
things that you're going

00:01:20.026 --> 00:01:21.126 A:middle
to do over and over again.

00:01:21.126 --> 00:01:25.466 A:middle
And in this case, what this
code actually does is it creates

00:01:25.466 --> 00:01:27.396 A:middle
that little info button in
the corner of the window

00:01:28.286 --> 00:01:30.066 A:middle
and so we want to
make things like this,

00:01:30.246 --> 00:01:31.676 A:middle
something that you're
going to do over

00:01:31.676 --> 00:01:33.796 A:middle
and over again that's
easily repeatable.

00:01:34.016 --> 00:01:37.266 A:middle
We want to make this easy
for you within Xcode.

00:01:39.066 --> 00:01:42.146 A:middle
So, let's take a little tour
of Xcode and what we're going

00:01:42.146 --> 00:01:44.856 A:middle
to be talking about today just
that we have the same vocabulary

00:01:44.856 --> 00:01:46.916 A:middle
when we're speaking
of these things.

00:01:47.286 --> 00:01:49.376 A:middle
The first thing is
going to be our canvas.

00:01:49.676 --> 00:01:51.976 A:middle
Our canvas is in the center
and this is where we drag

00:01:51.976 --> 00:01:53.276 A:middle
and drop our controls and views.

00:01:53.926 --> 00:01:55.206 A:middle
And we manipulate them

00:01:55.206 --> 00:01:58.726 A:middle
by resizing them or
editing the text.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.256 --> 00:02:02.396 A:middle
Next is the document outline.

00:02:02.736 --> 00:02:05.516 A:middle
Document outline shows you
all of the views and controls

00:02:05.516 --> 00:02:07.386 A:middle
that are in your interface.

00:02:07.786 --> 00:02:11.116 A:middle
Sometimes, you'll notice that
some of your views are obscured

00:02:11.116 --> 00:02:13.076 A:middle
by other views and they
might be hard to just click

00:02:13.076 --> 00:02:14.056 A:middle
on them in the canvas.

00:02:14.366 --> 00:02:17.506 A:middle
Use the document outline to
access these items easily.

00:02:18.176 --> 00:02:20.286 A:middle
The third part are
the inspectors,

00:02:20.286 --> 00:02:22.696 A:middle
and the inspectors
are where you're going

00:02:22.696 --> 00:02:25.506 A:middle
to edit the properties of
your views and controls.

00:02:26.686 --> 00:02:29.026 A:middle
So, there's a lot of step
you can do in a canvas

00:02:29.066 --> 00:02:32.396 A:middle
but this gives you the
fine-grained access to all

00:02:32.396 --> 00:02:34.566 A:middle
of the properties
of those objects.

00:02:35.586 --> 00:02:38.416 A:middle
And lastly is the
library, and the library is

00:02:38.416 --> 00:02:42.536 A:middle
where we give you a bunch of
pre-made views and controls

00:02:42.536 --> 00:02:45.196 A:middle
that you can use and just drag
and drop on to the canvas.

00:02:46.296 --> 00:02:48.886 A:middle
Now the way we work in Xcode is

00:02:49.446 --> 00:02:51.786 A:middle
by using the
Model-View-Controller paradigm.

00:02:52.276 --> 00:02:55.226 A:middle
You've probably mostly familiar
with this and what we're going

00:02:55.226 --> 00:02:57.896 A:middle
to be talking today about
is mainly the view and how

00:02:57.896 --> 00:03:01.896 A:middle
to design your view, but also
the view doesn't do much all

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:01.896 --> 00:03:02.476 A:middle
by itself.

00:03:02.476 --> 00:03:04.696 A:middle
It looks pretty but
there's nothing behind it,

00:03:04.696 --> 00:03:05.986 A:middle
unless you add a controller,

00:03:05.986 --> 00:03:08.996 A:middle
and that controller is your
personal code that's going

00:03:08.996 --> 00:03:13.466 A:middle
to do something when the user
interacts with your interface,

00:03:13.916 --> 00:03:16.346 A:middle
and it's going to be used
to display information back

00:03:16.516 --> 00:03:18.046 A:middle
to the user in your view.

00:03:18.416 --> 00:03:21.346 A:middle
So the other part we need to
talk about is how to connect

00:03:21.346 --> 00:03:23.926 A:middle
to these two, how to connect
the view to the controller

00:03:23.926 --> 00:03:26.226 A:middle
and make your views interactive.

00:03:26.746 --> 00:03:31.976 A:middle
So in Interface Builder,
what we use are storyboards,

00:03:32.336 --> 00:03:35.686 A:middle
and storyboards are a collection
of these views and controls,

00:03:36.466 --> 00:03:39.876 A:middle
and I want to remind you,
these are actual live objects.

00:03:39.876 --> 00:03:43.136 A:middle
These were not writing code
behind that's creating these

00:03:43.136 --> 00:03:43.926 A:middle
objects later.

00:03:44.286 --> 00:03:47.446 A:middle
When this is saved
out and compiled,

00:03:47.446 --> 00:03:49.066 A:middle
they're actual live
objects so that

00:03:49.066 --> 00:03:52.516 A:middle
when you load your
storyboard, you get an instance

00:03:52.596 --> 00:03:55.486 A:middle
of that object and
that's important.

00:03:55.516 --> 00:03:58.466 A:middle
There is no hidden code that
you're going to want to go find.

00:03:58.466 --> 00:04:04.516 A:middle
Now, storyboards are made of two
pieces, the first being scenes.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:04.916 --> 00:04:10.116 A:middle
Now scenes are like a screen
of your iPhone or a portion

00:04:10.116 --> 00:04:11.336 A:middle
of the user interface.

00:04:12.456 --> 00:04:15.456 A:middle
So, these are two
examples of scenes.

00:04:15.456 --> 00:04:16.625 A:middle
We have two scenes here.

00:04:17.166 --> 00:04:19.096 A:middle
And in order for the scenes
to talk to each other,

00:04:19.096 --> 00:04:21.026 A:middle
we have something
called a segue,

00:04:21.166 --> 00:04:25.296 A:middle
and a segue represents
how to move

00:04:25.556 --> 00:04:27.366 A:middle
from one scene to another scene.

00:04:27.906 --> 00:04:33.456 A:middle
It also allows you to say, "OK,
I'm about to move from one scene

00:04:33.456 --> 00:04:35.156 A:middle
to another scene, and I need

00:04:35.156 --> 00:04:36.616 A:middle
that other scene
to get some data.

00:04:36.796 --> 00:04:38.856 A:middle
So now is the time I'm
going to push that data

00:04:38.946 --> 00:04:40.006 A:middle
over to my other scene.

00:04:40.406 --> 00:04:43.966 A:middle
OK. So, what I'd like
to do is go through--

00:04:43.966 --> 00:04:46.506 A:middle
the best thing to do
is a demo application.

00:04:46.946 --> 00:04:50.936 A:middle
So, we're going to just
create a simple user interface

00:04:51.086 --> 00:04:52.666 A:middle
and we're going to
change some properties.

00:04:52.666 --> 00:04:54.956 A:middle
We're going to learn how
to resize and align objects

00:04:54.956 --> 00:04:56.656 A:middle
and hopefully give you
some tips and tricks

00:04:56.656 --> 00:04:58.396 A:middle
that maybe you didn't
know about already.

00:04:59.166 --> 00:05:03.056 A:middle
And we're going to learn how to
make connections between scenes

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:03.246 --> 00:05:05.386 A:middle
and between the scenes
and your code.

00:05:05.386 --> 00:05:09.296 A:middle
And what we're going to make
is this application here.

00:05:09.296 --> 00:05:10.986 A:middle
You've seen it in previous
demos and we're going

00:05:10.986 --> 00:05:12.826 A:middle
to start from scratch with it.

00:05:12.826 --> 00:05:14.306 A:middle
And we're going to do
this welcome screen

00:05:14.306 --> 00:05:17.836 A:middle
with the two buttons,
the timer and the routes,

00:05:18.806 --> 00:05:20.636 A:middle
tomato, it's up to you guys.

00:05:21.106 --> 00:05:23.836 A:middle
We're going to work on the
timer button so I don't have

00:05:23.866 --> 00:05:24.956 A:middle
to pronounce the
other word again.

00:05:25.386 --> 00:05:30.206 A:middle
So, then when you press the
timer button, it's going to go

00:05:30.206 --> 00:05:32.386 A:middle
to this run scene
and show you a timer.

00:05:32.436 --> 00:05:33.516 A:middle
We can hit the pause button.

00:05:33.516 --> 00:05:35.886 A:middle
It's going to change
and we're going to make

00:05:35.886 --> 00:05:36.876 A:middle
that all happen right now.

00:05:37.436 --> 00:05:40.566 A:middle
So, let's get to our demo.

00:05:40.566 --> 00:05:44.056 A:middle
So, we're going to start right
from scratch and we're going

00:05:44.056 --> 00:05:45.686 A:middle
to create a new Xcode project.

00:05:46.836 --> 00:05:51.616 A:middle
Now, in our project, Xcode gives
you some really basic templates

00:05:51.616 --> 00:05:54.716 A:middle
that you can work
with and what we try

00:05:54.716 --> 00:05:57.286 A:middle
to do is give you those
things that you might want

00:05:57.286 --> 00:05:58.826 A:middle
to start your application
of with,

00:05:58.826 --> 00:06:00.476 A:middle
it's like a Master-Detail
Application

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:00.476 --> 00:06:01.556 A:middle
or a Tabbed Application.

00:06:01.806 --> 00:06:04.756 A:middle
But what I want to show you is
if you start with a single view,

00:06:04.926 --> 00:06:07.806 A:middle
how you can create and expand
that into something else.

00:06:08.426 --> 00:06:10.756 A:middle
So let's start with just
a single view application.

00:06:11.396 --> 00:06:15.036 A:middle
And I'm going to just give it
a product name and we're going

00:06:15.036 --> 00:06:19.146 A:middle
to call it Jagger and
this where you're going

00:06:19.146 --> 00:06:20.916 A:middle
to set your company identifier,

00:06:20.916 --> 00:06:22.666 A:middle
your organization,
and the new devices.

00:06:22.666 --> 00:06:25.316 A:middle
In this case we're just going
to use an iPhone app for today.

00:06:26.246 --> 00:06:31.636 A:middle
So, click next and we're just
going to save it on the desktop.

00:06:32.366 --> 00:06:34.376 A:middle
So, the first thing that you see

00:06:34.486 --> 00:06:36.626 A:middle
when you create a new
project is you're going

00:06:36.626 --> 00:06:38.156 A:middle
to see the project settings.

00:06:38.796 --> 00:06:41.406 A:middle
And there are some things in
these settings that are specific

00:06:41.406 --> 00:06:44.436 A:middle
to your user interface, and
I want to point those out.

00:06:45.366 --> 00:06:48.326 A:middle
So, specifically, within
the deployment info--

00:06:48.326 --> 00:06:51.796 A:middle
oops, sorry, within
the deployment info,

00:06:52.736 --> 00:06:55.946 A:middle
you can sub the devices but
the thing I want to point

00:06:55.946 --> 00:06:57.216 A:middle
out is the main interface.

00:06:57.216 --> 00:07:00.486 A:middle
Now you might have wondered
in the past when you start

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:00.486 --> 00:07:03.826 A:middle
up an application on your
phone, how does it know

00:07:04.226 --> 00:07:05.816 A:middle
which storyboard to start with?

00:07:06.236 --> 00:07:08.186 A:middle
That's set here in
the project settings.

00:07:09.006 --> 00:07:11.216 A:middle
So if you had multiple
storyboards, you would be able

00:07:11.216 --> 00:07:12.806 A:middle
to change this to a
different storyboard

00:07:12.806 --> 00:07:15.126 A:middle
if you wanted your
application to launch

00:07:15.176 --> 00:07:17.386 A:middle
with the different
storyboard than the main one

00:07:17.526 --> 00:07:18.996 A:middle
that was created
with the template.

00:07:19.466 --> 00:07:26.466 A:middle
Also, if you might need to load
your storyboards based on code.

00:07:26.886 --> 00:07:29.156 A:middle
You might need to say
is this iOS 6 or 7

00:07:29.156 --> 00:07:31.146 A:middle
or what storyboard do
I want to start with.

00:07:31.466 --> 00:07:34.716 A:middle
And so, if you want to load
your storyboard from code,

00:07:34.716 --> 00:07:37.386 A:middle
you're going to delete this
and just leave it blank.

00:07:38.016 --> 00:07:41.386 A:middle
OK? Now, you can also set
your device orientation,

00:07:41.386 --> 00:07:44.256 A:middle
your status bar style,
and here are the app icon

00:07:44.256 --> 00:07:45.866 A:middle
in the launched images
that are used

00:07:45.866 --> 00:07:47.786 A:middle
when your application
is starting up.

00:07:48.406 --> 00:07:53.176 A:middle
Now speaking of images, we have
an image or asset catalogue

00:07:53.666 --> 00:07:57.336 A:middle
and that app icon in the
launch image are available here

00:07:57.466 --> 00:07:58.636 A:middle
in the catalogue.

00:07:58.916 --> 00:08:03.696 A:middle
Now these are empty and what
I want is my designer actually

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:03.696 --> 00:08:06.326 A:middle
gave me a bunch of images for
me to work with today on stage.

00:08:06.386 --> 00:08:10.346 A:middle
So I'm just going to delete
the empty ones for now and drag

00:08:10.536 --> 00:08:12.806 A:middle
in the images I was given.

00:08:13.296 --> 00:08:15.156 A:middle
Drop them in there.

00:08:15.156 --> 00:08:18.176 A:middle
So now these are images that
we're going to be able work

00:08:18.176 --> 00:08:20.816 A:middle
with today during
our project demo.

00:08:21.726 --> 00:08:26.406 A:middle
So let's go to the
storyboard and I'm going

00:08:26.476 --> 00:08:31.436 A:middle
to bring this full screen and
hide the project navigator

00:08:31.436 --> 00:08:33.256 A:middle
for now because we're not
going to need it for a while.

00:08:34.405 --> 00:08:37.635 A:middle
So, what I said earlier was
that these are live objects.

00:08:37.635 --> 00:08:39.336 A:middle
We can drag them around
and we can move them.

00:08:40.135 --> 00:08:42.756 A:middle
This is a view controller,
this is my first scene.

00:08:43.015 --> 00:08:45.686 A:middle
And the way I know that this
is the scene that's going

00:08:45.686 --> 00:08:50.356 A:middle
to be seen when my app launches
is this error right here

00:08:50.356 --> 00:08:52.366 A:middle
that points to the
RootViewController.

00:08:53.386 --> 00:08:55.686 A:middle
Now, I showed you
already that I'm going

00:08:55.686 --> 00:08:58.096 A:middle
to press the timer button and
I'm going to go to another scene

00:08:58.096 --> 00:09:00.696 A:middle
and I want that scene to be able
to go back to the first scene.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:01.036 --> 00:09:03.396 A:middle
So I'm going to need something
called a navigation controller.

00:09:04.246 --> 00:09:07.836 A:middle
And so, now that I've decided--

00:09:08.376 --> 00:09:10.096 A:middle
oh, I don't just
want single stand,

00:09:10.096 --> 00:09:11.336 A:middle
I want a navigation controller.

00:09:11.646 --> 00:09:15.106 A:middle
I want to be able to embed this
into a navigation controller.

00:09:15.486 --> 00:09:17.426 A:middle
So with my view controller
selected,

00:09:17.426 --> 00:09:18.756 A:middle
I can go to the Editor menu.

00:09:18.756 --> 00:09:21.946 A:middle
Now the Editor menu has all
of these specific actions

00:09:21.946 --> 00:09:24.876 A:middle
that are available
to Interface Builder.

00:09:25.506 --> 00:09:27.116 A:middle
So these changes depending

00:09:27.116 --> 00:09:29.916 A:middle
on what editor you have open
whether it's Interface Builder

00:09:29.916 --> 00:09:31.386 A:middle
or a source editor.

00:09:31.386 --> 00:09:35.866 A:middle
And in this case I want to embed
in a navigation controller.

00:09:36.456 --> 00:09:42.906 A:middle
So, now the scene that we're
going to work with is inside

00:09:42.906 --> 00:09:44.576 A:middle
of this navigation controller

00:09:44.576 --> 00:09:46.906 A:middle
and they are connected
by a relationship.

00:09:47.746 --> 00:09:50.666 A:middle
And if we want to see exactly
what's going and we can open

00:09:50.666 --> 00:09:53.306 A:middle
up the document outline with
the button in the bottom corner,

00:09:53.306 --> 00:09:56.346 A:middle
we can see exactly
the objects that are

00:09:56.346 --> 00:09:58.716 A:middle
in my storyboard at the moment.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.646 --> 00:10:03.856 A:middle
Now, that application had
a really great background

00:10:04.196 --> 00:10:06.416 A:middle
and that was one of
those images I was given.

00:10:06.856 --> 00:10:11.886 A:middle
So, the first thing I want to do
is add that image to our scene

00:10:12.356 --> 00:10:16.236 A:middle
and you can find all of the
images that we have added

00:10:16.236 --> 00:10:18.086 A:middle
to the asset catalog
are available here

00:10:18.086 --> 00:10:19.156 A:middle
in the media library.

00:10:20.766 --> 00:10:23.456 A:middle
So, you'll see these are
all the images that I added.

00:10:24.006 --> 00:10:28.776 A:middle
So, we can easily just drag
out the background and drop it

00:10:28.776 --> 00:10:32.616 A:middle
on to our canvas, move
it around a little bit,

00:10:32.616 --> 00:10:34.216 A:middle
and we also want to add a title.

00:10:34.996 --> 00:10:36.736 A:middle
So I can drag out the
title and I'm just going

00:10:36.736 --> 00:10:37.666 A:middle
to place it here for now.

00:10:37.666 --> 00:10:39.696 A:middle
I'm not going to worry about
placement for the moment.

00:10:39.766 --> 00:10:43.406 A:middle
So the next thing we
needed are two buttons.

00:10:44.206 --> 00:10:47.496 A:middle
So, I'm going to go to
the third library here

00:10:47.886 --> 00:10:50.466 A:middle
which is the object library
and the object library is

00:10:50.466 --> 00:10:52.146 A:middle
where you're going to see
all those controls and views.

00:10:52.636 --> 00:10:55.616 A:middle
So we can scroll through
and look for things that way

00:10:55.616 --> 00:10:57.386 A:middle
or you could just type
in the filer field.

00:10:57.806 --> 00:11:02.756 A:middle
So we can type in "button" and
I see I have my button here.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:02.966 --> 00:11:06.436 A:middle
Now, I can drag my button out
and drop it on to my canvas,

00:11:07.296 --> 00:11:10.406 A:middle
and you'll see I have a
nice little button here.

00:11:10.786 --> 00:11:13.186 A:middle
I can double click it if
I want to edit the title.

00:11:13.656 --> 00:11:17.106 A:middle
So I could change this
to timer if I wanted to.

00:11:17.306 --> 00:11:19.566 A:middle
In this case they don't
actually want a title.

00:11:19.926 --> 00:11:24.806 A:middle
And so, I'm going to delete this
title right now and I want it

00:11:24.806 --> 00:11:27.336 A:middle
to have that image
of the little clock.

00:11:27.906 --> 00:11:30.176 A:middle
So, I can go back to
media library and drag

00:11:30.176 --> 00:11:33.316 A:middle
out the timer button
and drop it in.

00:11:33.316 --> 00:11:36.836 A:middle
So, at this point, I need
a second button as well.

00:11:37.536 --> 00:11:41.666 A:middle
And so, I'm just going to
duplicate this with command D

00:11:41.946 --> 00:11:44.326 A:middle
and create a second
timer button.

00:11:44.836 --> 00:11:46.856 A:middle
And you'll notice
as I move it around,

00:11:47.236 --> 00:11:48.506 A:middle
there are these blue lines.

00:11:49.406 --> 00:11:51.606 A:middle
Maybe I can zoom in a little
more so you can see them.

00:11:51.756 --> 00:11:56.406 A:middle
There are these blue lines
that show up and my button kind

00:11:56.406 --> 00:11:58.136 A:middle
of snaps to them as
I move it around.

00:11:58.386 --> 00:12:01.976 A:middle
These are called guides and
they're really useful to be able

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:01.976 --> 00:12:04.166 A:middle
to get your user
interface elements

00:12:04.456 --> 00:12:05.826 A:middle
in the correct position.

00:12:06.836 --> 00:12:10.086 A:middle
So, this way, I now know these
buttons are properly space.

00:12:10.766 --> 00:12:13.716 A:middle
If I select both of them at
the same time, I can move them

00:12:13.716 --> 00:12:16.806 A:middle
around and now center them.

00:12:17.006 --> 00:12:20.876 A:middle
And another thing is that my
designer said he wanted these

00:12:20.876 --> 00:12:23.756 A:middle
buttons to be 34
points from the bottom.

00:12:25.216 --> 00:12:30.056 A:middle
So, how exactly do I get them
34 points from the bottom?

00:12:30.666 --> 00:12:33.726 A:middle
Well, there's a little secret,
I don't know if you guys know

00:12:33.726 --> 00:12:35.396 A:middle
about this yet but
hopefully you do,

00:12:35.606 --> 00:12:37.906 A:middle
if you hold down the option
key while you have something

00:12:37.906 --> 00:12:40.116 A:middle
selected and move
your mouse around,

00:12:40.116 --> 00:12:43.776 A:middle
it will actually show you
how far your items are

00:12:43.776 --> 00:12:44.766 A:middle
from other items.

00:12:45.156 --> 00:12:49.046 A:middle
So, in this case, we're
48 and I want to be 34.

00:12:49.046 --> 00:12:51.186 A:middle
And so I can use the
arrow keys to just move

00:12:51.846 --> 00:12:55.796 A:middle
down to 34 points, great.

00:12:56.456 --> 00:13:00.076 A:middle
And the last thing is I want
this title to be centered

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:00.076 --> 00:13:01.826 A:middle
and I want it right
above the buttons.

00:13:02.956 --> 00:13:05.966 A:middle
So, that's laid out,
but I haven't changed

00:13:05.966 --> 00:13:09.576 A:middle
that other timer button, it
needs to be a routes button.

00:13:09.776 --> 00:13:11.986 A:middle
So, I can just drag
the image in,

00:13:12.386 --> 00:13:13.916 A:middle
drop that in, and
we're good to go.

00:13:14.466 --> 00:13:16.496 A:middle
So, this is our welcome screen.

00:13:17.446 --> 00:13:19.736 A:middle
Looks great, does
nothing at this point.

00:13:20.136 --> 00:13:22.516 A:middle
And the first thing we want
to be able to do is move

00:13:22.516 --> 00:13:24.776 A:middle
from that timer button
to our new scene.

00:13:25.826 --> 00:13:30.626 A:middle
So, in order to do that, we're
going to need a view controller.

00:13:31.096 --> 00:13:34.156 A:middle
So, if I go to the objects
library, I can just type

00:13:34.156 --> 00:13:38.016 A:middle
in view controller
and I can drag one

00:13:38.016 --> 00:13:39.616 A:middle
out onto my canvas here.

00:13:40.286 --> 00:13:43.446 A:middle
Let's scroll out a little.

00:13:44.716 --> 00:13:48.926 A:middle
So, now I have this new view
controller on my canvas,

00:13:48.926 --> 00:13:51.636 A:middle
that's going to be
that second scene.

00:13:51.746 --> 00:13:55.296 A:middle
And in order to connect from
the timer to this new scene,

00:13:55.296 --> 00:13:59.046 A:middle
the timer button to this
new scene, I'm going hold

00:13:59.046 --> 00:14:01.026 A:middle
down the con-- I'm going
to select the timer

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:01.526 --> 00:14:04.836 A:middle
and then hold the control
key while I'm dragging

00:14:04.836 --> 00:14:05.656 A:middle
to the new scene.

00:14:06.726 --> 00:14:10.736 A:middle
And when I release, what I'll
see is I'm given three choices

00:14:10.736 --> 00:14:14.096 A:middle
for a segue, either a
push, a modal, or a custom.

00:14:14.326 --> 00:14:16.766 A:middle
And I'm going to choose
push and when I do,

00:14:17.736 --> 00:14:19.476 A:middle
we have our segue created.

00:14:19.656 --> 00:14:22.656 A:middle
So now, when I hit that
timer button, there is going

00:14:22.656 --> 00:14:25.726 A:middle
to be a push segue to
bring out this new scene.

00:14:27.086 --> 00:14:28.796 A:middle
So let's design the new scene.

00:14:29.516 --> 00:14:33.816 A:middle
There is some more images I
was given, one of them was

00:14:33.816 --> 00:14:37.186 A:middle
that circle up at the top that
the label for the timer was in.

00:14:37.786 --> 00:14:39.366 A:middle
So, I'm just going to
center that in here

00:14:39.366 --> 00:14:41.106 A:middle
and you can see I'm
using the guides.

00:14:41.766 --> 00:14:45.916 A:middle
I need a button down at the
bottom, so I'm just going

00:14:45.916 --> 00:14:47.516 A:middle
to copy and paste the button

00:14:47.726 --> 00:14:51.226 A:middle
that I have already
and then change it.

00:14:52.536 --> 00:14:53.646 A:middle
So, do paste.

00:14:54.746 --> 00:14:58.626 A:middle
Now, again, I want this
button instead of 34,

00:14:58.856 --> 00:15:01.096 A:middle
the designer said
this one has to be 56.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:01.436 --> 00:15:03.056 A:middle
So again, I can hold
the option key down.

00:15:03.956 --> 00:15:06.386 A:middle
I can-- to make sure
it's centered first.

00:15:06.386 --> 00:15:08.586 A:middle
OK, hold the option
key and I can check,

00:15:08.666 --> 00:15:13.706 A:middle
and I can move it exactly to
where I was told that should be.

00:15:13.946 --> 00:15:18.396 A:middle
And it's not going to be that
button; this one is going

00:15:18.396 --> 00:15:20.656 A:middle
to be a pause button, so
I just drag my image in.

00:15:21.196 --> 00:15:26.966 A:middle
OK, so the next thing I need is
to change the background color.

00:15:27.716 --> 00:15:32.856 A:middle
So, my view, I can't
change the background just

00:15:32.856 --> 00:15:34.656 A:middle
by editing it on the canvas.

00:15:34.656 --> 00:15:36.966 A:middle
So far, everything we've
done has been on the canvas

00:15:36.966 --> 00:15:39.276 A:middle
and just dragging and dropping
and manipulating things.

00:15:39.616 --> 00:15:42.556 A:middle
But I need to change the
background color for this view.

00:15:43.046 --> 00:15:46.816 A:middle
So I'm going to open up the
Attributes Inspector up here.

00:15:47.446 --> 00:15:51.566 A:middle
And when I do, you'll see that
these are all the attributes

00:15:51.566 --> 00:15:53.236 A:middle
that are specific to view.

00:15:53.496 --> 00:15:57.016 A:middle
And in this case, we can
let the tool tip come up.

00:15:57.016 --> 00:15:58.896 A:middle
This is the background color.

00:15:58.896 --> 00:16:01.646 A:middle
The tool tips will give you
some related method information

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:02.026 --> 00:16:04.486 A:middle
which can be useful if you're
just getting used to this.

00:16:05.226 --> 00:16:07.086 A:middle
So, I'm going to click
on the background color.

00:16:07.086 --> 00:16:09.746 A:middle
Now, I've already set
one up and I've left it

00:16:09.746 --> 00:16:12.956 A:middle
in my color swatches,
so, ready there.

00:16:14.026 --> 00:16:17.666 A:middle
And the next thing we
want to do is add a label.

00:16:17.956 --> 00:16:19.816 A:middle
So I'm going to go back
to the object library,

00:16:21.076 --> 00:16:26.826 A:middle
select the Label, and let's
drag this in a little bit

00:16:26.826 --> 00:16:27.666 A:middle
so you can see better.

00:16:28.466 --> 00:16:31.636 A:middle
So, when I drag this out, one of
the nice things is that as soon

00:16:31.636 --> 00:16:34.286 A:middle
as I move the label on
to this dark background,

00:16:34.286 --> 00:16:37.786 A:middle
it's going to change
color to light knowing

00:16:37.786 --> 00:16:39.766 A:middle
that you don't really
want a dark label on top

00:16:39.766 --> 00:16:40.836 A:middle
of a black background.

00:16:41.736 --> 00:16:43.496 A:middle
Now, this label is
really small so I'm going

00:16:43.496 --> 00:16:46.256 A:middle
to make it a lot
bigger right now.

00:16:46.666 --> 00:16:49.966 A:middle
And I need to change
the font size so that,

00:16:49.966 --> 00:16:51.426 A:middle
you know, it's easily seen.

00:16:51.426 --> 00:16:53.226 A:middle
So, I'm going to
go to the inspector

00:16:53.226 --> 00:16:55.186 A:middle
or the Attributes Inspector
again, and now you'll see

00:16:55.186 --> 00:16:57.096 A:middle
in addition to View,
I have Label.

00:16:57.416 --> 00:16:59.796 A:middle
So, all of the controls in
the Attributes Inspector,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:00.066 --> 00:17:03.236 A:middle
all of the properties are
separated by hierarchy.

00:17:03.646 --> 00:17:05.266 A:middle
So you're going to see the
things that are specific

00:17:05.266 --> 00:17:08.846 A:middle
to UILabel first and then
its super class UIView will

00:17:08.846 --> 00:17:10.205 A:middle
come next.

00:17:10.965 --> 00:17:13.945 A:middle
So, in this case, I want to
change the font and I can click

00:17:13.945 --> 00:17:20.256 A:middle
on the font picker, change to
system bold, and I want 36.

00:17:21.616 --> 00:17:22.425 A:middle
OK, great.

00:17:23.205 --> 00:17:30.106 A:middle
Now, I wanted to default
to looking like this,

00:17:30.286 --> 00:17:33.856 A:middle
and I want to center
it inside of my circle.

00:17:34.666 --> 00:17:37.376 A:middle
Now, you'll notice it's not
really centering correctly

00:17:37.456 --> 00:17:40.386 A:middle
and that's because the
label is much bigger

00:17:40.386 --> 00:17:42.476 A:middle
than the text that's inside it.

00:17:43.006 --> 00:17:48.126 A:middle
Now, we could resize by
moving around and trying

00:17:48.126 --> 00:17:49.416 A:middle
to get just the right size,

00:17:49.416 --> 00:17:51.296 A:middle
but I don't really know
what the right size is.

00:17:51.656 --> 00:17:54.496 A:middle
Now, it's possible I
might know how this--

00:17:54.646 --> 00:17:57.876 A:middle
like I might know the
pixels for it, so I could go

00:17:57.876 --> 00:18:01.456 A:middle
to the Size Inspector, and if
I click there, that's going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:01.456 --> 00:18:04.266 A:middle
to show me the position of my
object as well as the width

00:18:04.266 --> 00:18:05.956 A:middle
and the height, and
some other information.

00:18:08.616 --> 00:18:10.756 A:middle
So, I could set it
specifically here,

00:18:11.036 --> 00:18:12.756 A:middle
but one of the things I
really want to tell you

00:18:12.756 --> 00:18:14.886 A:middle
about right now is
in the Editor menu

00:18:16.576 --> 00:18:19.566 A:middle
which is Size to Fit Content.

00:18:19.826 --> 00:18:22.056 A:middle
And I use this all the
time, command equals.

00:18:23.316 --> 00:18:26.046 A:middle
And when I click on that,
it just resizes the label

00:18:26.046 --> 00:18:28.676 A:middle
to fit the title
that's inside of it.

00:18:29.116 --> 00:18:30.326 A:middle
So, now when I drag it around,

00:18:30.326 --> 00:18:33.576 A:middle
it'll center properly
to the actual label.

00:18:35.276 --> 00:18:37.606 A:middle
Great. So now we
have all these--

00:18:38.476 --> 00:18:42.376 A:middle
we have our views laid out,

00:18:42.376 --> 00:18:45.696 A:middle
I think I have all the buttons I
need and the label that we need,

00:18:46.466 --> 00:18:48.006 A:middle
but it's not going
to do anything.

00:18:48.006 --> 00:18:50.256 A:middle
The timer is not going to run,
if I press the Pause button,

00:18:50.256 --> 00:18:52.576 A:middle
nothing is going to happen
unless I've put some code

00:18:52.576 --> 00:18:53.616 A:middle
behind this.

00:18:53.946 --> 00:18:57.456 A:middle
And so, the next thing we
need to do is create a class

00:18:58.036 --> 00:19:02.836 A:middle
to control this view controller,
so, well, to control this view.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:03.356 --> 00:19:06.096 A:middle
So right now, if I click
on the view controller,

00:19:06.866 --> 00:19:09.936 A:middle
I can go up here to
the Identity Inspector,

00:19:12.236 --> 00:19:16.276 A:middle
you'll see that this view
controller is a UIViewController

00:19:16.336 --> 00:19:18.246 A:middle
but we really want
our own subclass

00:19:18.246 --> 00:19:20.716 A:middle
where we can do our
custom work inside of it.

00:19:21.786 --> 00:19:26.576 A:middle
So, back in, I'm going to
close the document outlines

00:19:26.576 --> 00:19:31.276 A:middle
so we have a little RIM, and
back in the project navigator,

00:19:31.596 --> 00:19:34.446 A:middle
I'm going to go ahead I'm
going to add a new file,

00:19:35.026 --> 00:19:40.166 A:middle
and in this case, I want to
add an Objective-C class,

00:19:41.016 --> 00:19:44.776 A:middle
we're going to call it
RunViewController and it's going

00:19:44.776 --> 00:19:45.716 A:middle
to be a subclass

00:19:45.716 --> 00:19:47.796 A:middle
of UIViewController
'cause we just want to add

00:19:47.796 --> 00:19:49.276 A:middle
on to the UIViewController.

00:19:49.786 --> 00:19:56.196 A:middle
I click Next, and I want
to make sure that it ends

00:19:56.196 --> 00:19:59.416 A:middle
up in the target for my
project and I can create.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:01.156 --> 00:20:06.666 A:middle
So now you'll see I have some--
when I create this new file,

00:20:06.666 --> 00:20:08.756 A:middle
I've given-- I've been
given some code to start

00:20:08.756 --> 00:20:11.136 A:middle
with specifically and
it wouldn't have name.

00:20:11.516 --> 00:20:15.766 A:middle
So, when you-- the nib that's
created when you compile,

00:20:16.236 --> 00:20:19.606 A:middle
this is where you do any
custom initialization.

00:20:20.066 --> 00:20:23.456 A:middle
You can also access viewDidLoad
and didReceiveMemoryWarning.

00:20:23.456 --> 00:20:26.336 A:middle
So these are places where if
you needed, you custom things,

00:20:26.336 --> 00:20:27.736 A:middle
you can do them right here.

00:20:28.016 --> 00:20:30.836 A:middle
So I'm going to leave that
and go back to our storyboard.

00:20:32.216 --> 00:20:36.056 A:middle
Close the project navigator
'cause we don't need

00:20:36.986 --> 00:20:38.766 A:middle
that any longer.

00:20:38.766 --> 00:20:43.556 A:middle
And-- sorry, this view
controller, I want to make sure

00:20:43.556 --> 00:20:45.766 A:middle
that instead of a
UIViewController,

00:20:46.096 --> 00:20:48.026 A:middle
I want it to be a
run view controller.

00:20:49.046 --> 00:20:52.216 A:middle
So now, when this object is
archived out when we save it,

00:20:52.796 --> 00:20:55.166 A:middle
when it's instantiated later
it's going to come back

00:20:55.166 --> 00:20:58.776 A:middle
as an actual run view
controller instance.

00:20:58.876 --> 00:21:06.976 A:middle
So, I can open up my Assistant
Editor now and we're going

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:07.596 --> 00:21:09.136 A:middle
to make a little
RIM for our code

00:21:09.136 --> 00:21:11.036 A:middle
and then show just our view.

00:21:12.476 --> 00:21:15.316 A:middle
Now, I want to be able access
this user interface items

00:21:15.316 --> 00:21:17.026 A:middle
within my code itself.

00:21:17.916 --> 00:21:21.076 A:middle
And the first I want to be able
to access is this time label.

00:21:23.026 --> 00:21:26.666 A:middle
So, I need something in my
controller that says, "Hey,

00:21:26.666 --> 00:21:28.636 A:middle
this is a time label, UILabel."

00:21:29.076 --> 00:21:32.826 A:middle
So, I'm going to make a
connection between my view

00:21:32.886 --> 00:21:34.456 A:middle
to my controller,
and to do that,

00:21:34.456 --> 00:21:36.566 A:middle
it's the same way you make
a connection using the segue

00:21:36.976 --> 00:21:38.466 A:middle
to create a segue.

00:21:38.956 --> 00:21:44.496 A:middle
Just hold down the control key
and drag over to your code.

00:21:44.496 --> 00:21:50.006 A:middle
And when I drop, what you'll see
is I'm creating a new outlet,

00:21:50.006 --> 00:21:55.386 A:middle
I can name it time
label, and connect it.

00:21:55.386 --> 00:21:59.576 A:middle
And when I do, what I get is I
get a property that's a UILabel

00:21:59.776 --> 00:22:00.706 A:middle
named time label.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:01.146 --> 00:22:03.846 A:middle
So now in my controller,
anytime I want to access

00:22:03.846 --> 00:22:09.116 A:middle
that time label I
just use time label,

00:22:09.696 --> 00:22:11.676 A:middle
the time label property
to access it.

00:22:11.856 --> 00:22:15.236 A:middle
For the same thing, I want
to do with the pause button.

00:22:15.906 --> 00:22:22.796 A:middle
So I'm going to control-drag
in, call this Pause/Run button,

00:22:25.516 --> 00:22:30.596 A:middle
and now I have a UIButton
called Pause/Run button

00:22:30.596 --> 00:22:31.426 A:middle
that I can access.

00:22:31.896 --> 00:22:34.646 A:middle
The same thing when I
click the Pause button,

00:22:34.916 --> 00:22:37.576 A:middle
I want the Pause button to
change to a different image.

00:22:37.926 --> 00:22:40.456 A:middle
I also want the circle to
change to a different image.

00:22:41.626 --> 00:22:44.926 A:middle
So I can control-drag
from that image over here

00:22:44.926 --> 00:22:47.676 A:middle
and call this Pause/Run image.

00:22:49.196 --> 00:22:53.166 A:middle
So now I have a connection
to that UIImageView so that

00:22:53.166 --> 00:22:58.936 A:middle
when my action happens, I can
actually change that image.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:00.486 --> 00:23:02.666 A:middle
Now, there's a couple other
properties that I need

00:23:02.666 --> 00:23:04.206 A:middle
that aren't specific to my demo,

00:23:05.106 --> 00:23:07.746 A:middle
and I've created the
code for it already.

00:23:07.746 --> 00:23:10.396 A:middle
And what I've done is
I've stored it down here

00:23:10.396 --> 00:23:12.596 A:middle
in the Code Snippet library.

00:23:14.296 --> 00:23:19.616 A:middle
So down here, we have--
I have demo properties.

00:23:19.616 --> 00:23:21.956 A:middle
Now, I've dragged
and drop to this code

00:23:21.956 --> 00:23:25.346 A:middle
into the Code Snippet library
given it some information,

00:23:25.346 --> 00:23:28.106 A:middle
and then anytime I want this
code I can just drag it right

00:23:28.106 --> 00:23:30.496 A:middle
out and drop it into
my document.

00:23:32.256 --> 00:23:39.086 A:middle
So, one of the other things I
want to do is we want to be able

00:23:39.086 --> 00:23:42.316 A:middle
to deal with the action of
hitting the pause button.

00:23:42.316 --> 00:23:43.546 A:middle
So we really need a method.

00:23:43.546 --> 00:23:46.846 A:middle
We need something where
we can make things happen

00:23:46.846 --> 00:23:50.306 A:middle
like change the Pause/Run
button, stop the timer

00:23:50.306 --> 00:23:51.526 A:middle
and change that circle.

00:23:51.986 --> 00:23:54.316 A:middle
So I'm going to make
a connection again

00:23:54.506 --> 00:23:58.786 A:middle
from the Pause button
down here and this time,

00:23:59.186 --> 00:24:03.416 A:middle
instead of an outlet, I'm going
to make an action connection

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:03.416 --> 00:24:06.116 A:middle
which will connect to a
method and I'm going to call

00:24:06.116 --> 00:24:12.366 A:middle
that method "Pause or Run".

00:24:12.506 --> 00:24:16.996 A:middle
Now, you'll see I have a
step for my new method.

00:24:16.996 --> 00:24:20.776 A:middle
And once again, I have
a pause or run method.

00:24:21.036 --> 00:24:23.126 A:middle
I have the code for
it, all ready to go.

00:24:23.126 --> 00:24:26.746 A:middle
So I'm just going to drag
that in and close the library.

00:24:29.036 --> 00:24:34.176 A:middle
Now, what this method
is doing is we're going

00:24:34.176 --> 00:24:38.126 A:middle
to determine whether or not
we need to set the image

00:24:38.126 --> 00:24:40.196 A:middle
to the pause button or that--

00:24:40.196 --> 00:24:45.146 A:middle
and the circle to the
timer running, or switch it

00:24:45.146 --> 00:24:46.856 A:middle
to the start button
and the timer stop.

00:24:47.656 --> 00:24:50.086 A:middle
Now it also calls a
method called update time

00:24:50.556 --> 00:24:51.846 A:middle
and we don't have that yet.

00:24:51.846 --> 00:24:53.056 A:middle
I'm going to add it in here.

00:24:53.506 --> 00:24:54.266 A:middle
One of the cool things

00:24:54.266 --> 00:24:56.756 A:middle
about Code Snippets is you
can give it a shortcut,

00:24:57.236 --> 00:24:58.806 A:middle
so I can just type in "Helpers"

00:24:59.366 --> 00:25:02.406 A:middle
and it'll add my code
right in there for me.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:03.446 --> 00:25:04.956 A:middle
It's great for like
reusable code

00:25:04.956 --> 00:25:07.146 A:middle
that you write all the
time and use all the time.

00:25:07.866 --> 00:25:11.436 A:middle
So, in update time, what we're
actually doing is setting the

00:25:11.436 --> 00:25:14.226 A:middle
time label, so that
property, we're using it

00:25:14.276 --> 00:25:18.586 A:middle
to update the time, and we're
getting that from time string

00:25:18.586 --> 00:25:21.726 A:middle
for interval which is up here
which really just a setting,

00:25:21.726 --> 00:25:24.336 A:middle
creating a formatted
string for us.

00:25:25.346 --> 00:25:28.416 A:middle
And in view will up here we're
determining whether we're going

00:25:28.416 --> 00:25:32.866 A:middle
to show the Pause or the Run
buttons when we load this view.

00:25:34.846 --> 00:25:39.736 A:middle
So, with any luck, I believe
we're done with this part

00:25:39.736 --> 00:25:42.096 A:middle
of the demo so let's try
it and see if it works.

00:25:42.546 --> 00:25:46.736 A:middle
So we're going to
run, filled in Run

00:25:47.006 --> 00:25:52.956 A:middle
and we should see those images
that were pre-populated.

00:25:53.106 --> 00:25:57.836 A:middle
We'll see that launch
image that shows up

00:25:57.836 --> 00:25:59.596 A:middle
and then we should see
our Welcome screen.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:02.146 --> 00:26:04.426 A:middle
So launch image or
welcome screen.

00:26:04.956 --> 00:26:06.566 A:middle
And now as I click
on the timer button,

00:26:07.166 --> 00:26:08.736 A:middle
we'll see that the timer starts.

00:26:09.236 --> 00:26:11.526 A:middle
We click the Pause button
and because we have access

00:26:11.686 --> 00:26:15.726 A:middle
to those elements in our
user interface from our code,

00:26:15.726 --> 00:26:18.766 A:middle
we can change the buttons
based on the action

00:26:18.766 --> 00:26:21.596 A:middle
that happens from the user, OK?

00:26:23.866 --> 00:26:33.206 A:middle
So, let's stop this
and go back to slides.

00:26:33.326 --> 00:26:37.336 A:middle
One thing that I want
to be more specific

00:26:37.336 --> 00:26:38.726 A:middle
about is making outlets.

00:26:39.616 --> 00:26:42.866 A:middle
Now, I showed you how to
make an outlet from your view

00:26:42.866 --> 00:26:46.586 A:middle
to your code and create a
new property when you did it.

00:26:46.816 --> 00:26:49.136 A:middle
Now, you might already
have code that you want

00:26:49.206 --> 00:26:51.156 A:middle
to connect to your views.

00:26:51.986 --> 00:26:55.996 A:middle
And in this case, we have a
special keyword that we use

00:26:56.046 --> 00:26:58.616 A:middle
because in your user interface
when you're designing it,

00:26:58.616 --> 00:27:00.726 A:middle
you don't want all of your
properties to show up.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:00.726 --> 00:27:03.096 A:middle
You might have a lot of
properties in your project

00:27:03.336 --> 00:27:04.406 A:middle
and you don't need to see all

00:27:04.406 --> 00:27:07.106 A:middle
of them 'cause they're not
all relevant to your view.

00:27:07.636 --> 00:27:09.856 A:middle
So what we use is
the keyword IBOutlet

00:27:10.146 --> 00:27:12.706 A:middle
and what this says
is this is relevant

00:27:12.706 --> 00:27:16.006 A:middle
to my user interface
design and I want you

00:27:16.006 --> 00:27:18.096 A:middle
to show this property
when I'm designing.

00:27:18.416 --> 00:27:20.596 A:middle
I want to be able to
have access to it.

00:27:21.096 --> 00:27:23.886 A:middle
Now, the same thing is
happens with actions.

00:27:24.256 --> 00:27:26.876 A:middle
So with an action, this is
really just a connection

00:27:27.146 --> 00:27:30.306 A:middle
from your controls to your
methods and you'll have a lot

00:27:30.306 --> 00:27:32.876 A:middle
of methods in your
projects and not all

00:27:32.876 --> 00:27:34.436 A:middle
of them are relevant
to your views.

00:27:34.976 --> 00:27:37.986 A:middle
So what you're going to use is a
special keyword called IBAction,

00:27:38.856 --> 00:27:44.776 A:middle
and those actions are going to--
that's going to let Xcode know

00:27:44.776 --> 00:27:47.956 A:middle
that this is relevant
to your user interface.

00:27:48.776 --> 00:27:56.436 A:middle
So, with that, I would like
to invite Alex up to talk more

00:27:56.486 --> 00:27:57.976 A:middle
about what's next
with storyboards.

00:27:58.016 --> 00:27:59.996 A:middle
[applause]

00:27:59.996 --> 00:28:00.766 A:middle
&gt;&gt; Thank you Kelly.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:01.396 --> 00:28:02.156 A:middle
Hello everyone.

00:28:02.416 --> 00:28:05.246 A:middle
So, Kelly gave us a good
introduction to how to set

00:28:05.246 --> 00:28:07.676 A:middle
up your project and do some
of the basic interactions

00:28:07.676 --> 00:28:08.606 A:middle
with interface builder.

00:28:09.006 --> 00:28:10.266 A:middle
But what do you need to do next?

00:28:10.526 --> 00:28:13.056 A:middle
Well, the interface is
really your first step

00:28:13.206 --> 00:28:14.496 A:middle
but there's a lot of ways

00:28:14.526 --> 00:28:17.006 A:middle
that those user interface
elements may want to interact

00:28:17.006 --> 00:28:18.786 A:middle
with your application
and you're going to need

00:28:18.786 --> 00:28:20.016 A:middle
to write some code to do that.

00:28:20.256 --> 00:28:22.246 A:middle
So I want to show you
some of that special code

00:28:22.466 --> 00:28:24.856 A:middle
that you're going to be writing
on a fairly regular basis.

00:28:25.526 --> 00:28:27.386 A:middle
To do that, I'm going
to add a couple

00:28:27.386 --> 00:28:28.826 A:middle
of views to our application.

00:28:29.116 --> 00:28:31.836 A:middle
First, I'm going to add a map
view and on that map view,

00:28:31.836 --> 00:28:34.476 A:middle
I'm going to put some route
information about your runs.

00:28:35.146 --> 00:28:37.816 A:middle
I'm then going to have a
segue to a detail view,

00:28:38.266 --> 00:28:41.956 A:middle
and importantly, I have some
data inside of my map view

00:28:41.956 --> 00:28:45.036 A:middle
and I want to pass that
data through the map view

00:28:45.126 --> 00:28:46.226 A:middle
and into the detail view.

00:28:46.226 --> 00:28:48.466 A:middle
And I'm going to show you how
you can take that little pocket

00:28:48.466 --> 00:28:51.486 A:middle
of data pass it through and
have the detail view show up.

00:28:52.656 --> 00:28:55.546 A:middle
So, what I want to
do is show you how

00:28:55.546 --> 00:28:57.896 A:middle
to use gesture recognizers,
this is how we're going

00:28:57.896 --> 00:28:59.246 A:middle
to do interactions from the map.

00:28:59.246 --> 00:29:02.606 A:middle
I want to show you how to
activate segues from code rather

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:02.606 --> 00:29:04.426 A:middle
than just from user
interface elements.

00:29:04.806 --> 00:29:06.556 A:middle
I'm going to talk
about how to pass data

00:29:06.556 --> 00:29:08.916 A:middle
from one view controller to
the next view controller.

00:29:08.916 --> 00:29:11.926 A:middle
I also want to talk about
two special connections

00:29:11.926 --> 00:29:15.096 A:middle
that many views have called
a delegate and a data source.

00:29:15.826 --> 00:29:18.616 A:middle
And finally, I want to show you
how to use reusable table cells

00:29:18.836 --> 00:29:21.346 A:middle
and how to add custom UI
elements to your application.

00:29:25.356 --> 00:29:27.946 A:middle
So, with that, let me
give you a quick demo.

00:29:28.146 --> 00:29:31.766 A:middle
So, unlike Kelly who was
starting off showing you how

00:29:31.766 --> 00:29:34.786 A:middle
to create an application
from scratch, I didn't want

00:29:34.786 --> 00:29:37.046 A:middle
to spend a lot of time up
here copying and pasting code

00:29:37.046 --> 00:29:39.636 A:middle
around just to get the
underlying behavior

00:29:39.636 --> 00:29:40.406 A:middle
that we desire.

00:29:40.636 --> 00:29:42.826 A:middle
So, I-- before the
demo, I wrote a number

00:29:42.826 --> 00:29:45.096 A:middle
of additional view controller
classes that we can use.

00:29:45.396 --> 00:29:47.536 A:middle
Now, I'm not going to show
you every method in those

00:29:47.536 --> 00:29:49.976 A:middle
but I'm going to show you some
of the more important methods

00:29:49.976 --> 00:29:50.876 A:middle
that you'll need to implement.

00:29:52.836 --> 00:29:55.096 A:middle
So to start off, let's
go to our storyboard

00:29:55.636 --> 00:29:59.206 A:middle
and here you'll see the
storyboard pretty much

00:29:59.236 --> 00:30:00.236 A:middle
where Kelly left it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:01.586 --> 00:30:03.906 A:middle
And the first thing I'm
going to do is set up so

00:30:03.906 --> 00:30:06.166 A:middle
that we can show the map.

00:30:06.236 --> 00:30:08.286 A:middle
So like Kelly did, I'll
use the object library,

00:30:08.876 --> 00:30:10.356 A:middle
filter down to the map view,

00:30:10.636 --> 00:30:12.616 A:middle
of course I'm getting
ahead of myself.

00:30:12.936 --> 00:30:14.186 A:middle
First I need to add
a view controller

00:30:14.186 --> 00:30:15.316 A:middle
to put the map view into.

00:30:17.116 --> 00:30:20.236 A:middle
So I'll drag that
out here and I'll go

00:30:20.236 --> 00:30:23.706 A:middle
to the identity inspector
as Kelly did up here

00:30:23.706 --> 00:30:26.946 A:middle
and I will set this to be a
map's route view controller.

00:30:28.496 --> 00:30:30.246 A:middle
Now, I can down to
my object library,

00:30:30.936 --> 00:30:35.586 A:middle
filter down to a
map, and add that in.

00:30:36.516 --> 00:30:39.606 A:middle
I also want to be able to
make a segue so I'm going

00:30:39.606 --> 00:30:43.566 A:middle
to control drag from my
routes button and I'm going

00:30:43.566 --> 00:30:46.696 A:middle
to add a push segue just like
Kelly did for the timer button.

00:30:48.496 --> 00:30:50.276 A:middle
Now you'll notice
when I did that,

00:30:50.886 --> 00:30:53.496 A:middle
it shrunk down my map
view, and with iOS 7,

00:30:53.496 --> 00:30:55.836 A:middle
I really want my map
view to be hinting

00:30:55.836 --> 00:30:57.336 A:middle
through the top navigation bar.

00:30:57.966 --> 00:31:00.266 A:middle
To do that, I'm going to
select the MyViewController,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:00.656 --> 00:31:03.926 A:middle
I'm going to go to its
properties, and over here,

00:31:04.216 --> 00:31:06.656 A:middle
you'll see that there's a
section called extend edges.

00:31:06.876 --> 00:31:08.586 A:middle
And on this case, I want
to be able to extend

00:31:08.586 --> 00:31:10.506 A:middle
under the top bars
and bottom bars.

00:31:10.796 --> 00:31:12.636 A:middle
And even though I don't
have bottom bars now,

00:31:12.636 --> 00:31:14.826 A:middle
if I were to add one, I'd
want to extend underneath it.

00:31:15.736 --> 00:31:18.046 A:middle
And you'll see now that my
map view extends all the way

00:31:18.046 --> 00:31:19.436 A:middle
up to the top of
the view controller.

00:31:22.306 --> 00:31:25.066 A:middle
Now, I need to make a couple
of connections and you saw

00:31:25.066 --> 00:31:26.576 A:middle
that I changed my
view controller

00:31:26.576 --> 00:31:29.036 A:middle
from a UIViewController to
our map route view controller.

00:31:29.496 --> 00:31:32.066 A:middle
So now I can just control
drag from my little mini doc

00:31:32.186 --> 00:31:35.876 A:middle
to my map view and I can
connect to the map view outlet.

00:31:37.636 --> 00:31:40.246 A:middle
But just as important of
that connection is I need

00:31:40.246 --> 00:31:43.366 A:middle
to make a connection from the
map view and drag down back

00:31:43.366 --> 00:31:44.586 A:middle
to my view controller.

00:31:45.176 --> 00:31:46.836 A:middle
In here, you'll see
that there's an outlet

00:31:46.836 --> 00:31:48.296 A:middle
on the map view called
the delegate.

00:31:49.586 --> 00:31:51.736 A:middle
So, what is a delegate?

00:31:52.556 --> 00:31:56.056 A:middle
A delegate for a user
interface item is an object

00:31:56.056 --> 00:31:58.106 A:middle
that can get special
notifications

00:31:58.106 --> 00:32:01.126 A:middle
from that user interface element
and it can also intervene

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:01.126 --> 00:32:03.636 A:middle
at special times for the
user interface element

00:32:03.756 --> 00:32:06.486 A:middle
and make decisions on how
data should be presented.

00:32:06.886 --> 00:32:09.506 A:middle
So, for example, a map
view can send notifications

00:32:09.506 --> 00:32:10.896 A:middle
when it's starting
to load map data

00:32:10.896 --> 00:32:12.406 A:middle
and when it's done
loading map data.

00:32:13.146 --> 00:32:15.836 A:middle
In our case, since we're
going to be adding overlays

00:32:15.836 --> 00:32:18.806 A:middle
to the map view, we want the map
view to tell us when it's ready

00:32:18.806 --> 00:32:20.126 A:middle
to receive those overlays.

00:32:20.306 --> 00:32:22.686 A:middle
And with that-- and we'll do
that via the delegate outlet.

00:32:23.156 --> 00:32:32.206 A:middle
So, at this point, we
could run the application,

00:32:32.206 --> 00:32:34.226 A:middle
tap the routes button
and we could see

00:32:34.226 --> 00:32:35.296 A:middle
that we'd load a map view.

00:32:35.486 --> 00:32:38.066 A:middle
But we want to do
a little bit more.

00:32:38.066 --> 00:32:40.626 A:middle
We want to be able to interact
with the map view as well.

00:32:40.936 --> 00:32:43.046 A:middle
And to do that, I'm going

00:32:43.046 --> 00:32:47.416 A:middle
to use a object called
the gesture recognizer.

00:32:48.036 --> 00:32:49.266 A:middle
A gesture recognizer is a way

00:32:49.266 --> 00:32:51.026 A:middle
that you can add
additional interaction

00:32:51.026 --> 00:32:52.946 A:middle
to controls especially controls

00:32:52.946 --> 00:32:54.536 A:middle
that don't necessarily
support the type

00:32:54.536 --> 00:32:56.016 A:middle
of interaction you
need to start with.

00:32:56.616 --> 00:32:59.356 A:middle
So on this case, I'm going to
drag a tap gesture recognizer

00:32:59.596 --> 00:33:00.906 A:middle
and drop it on to my map view.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:00.906 --> 00:33:04.236 A:middle
What this will allow me to
do is that when the user taps

00:33:04.236 --> 00:33:07.946 A:middle
into the map view, I'll be able
to take that tap and send it

00:33:07.946 --> 00:33:08.936 A:middle
to my view Vontroller.

00:33:09.126 --> 00:33:13.136 A:middle
And to do that, you'll see that
it added down here in my doc,

00:33:13.136 --> 00:33:16.386 A:middle
the tap gesture recognizer, I
can control drag between that

00:33:16.386 --> 00:33:18.576 A:middle
and my view controller,
and you'll see that one

00:33:18.576 --> 00:33:21.456 A:middle
of my sent actions I can
do is tap in map view.

00:33:23.836 --> 00:33:25.376 A:middle
So let's take a quick
look at some

00:33:25.376 --> 00:33:26.606 A:middle
of the code that backs this up.

00:33:27.516 --> 00:33:32.926 A:middle
[ Pause ]

00:33:33.426 --> 00:33:36.686 A:middle
So, the first method we have
here is a method you get

00:33:36.686 --> 00:33:38.036 A:middle
with every view controller.

00:33:38.066 --> 00:33:39.256 A:middle
Kelly showed at you briefly

00:33:39.256 --> 00:33:40.786 A:middle
when she created a
new view controller

00:33:41.056 --> 00:33:42.556 A:middle
and what is, is the ViewDidLoad.

00:33:43.026 --> 00:33:45.236 A:middle
ViewDidLoad is called
immediately

00:33:45.236 --> 00:33:47.726 A:middle
after the view controller
loads its interface

00:33:47.726 --> 00:33:49.456 A:middle
but before it's displayed
to the user.

00:33:49.846 --> 00:33:51.356 A:middle
Because of that,
it's a great place

00:33:51.356 --> 00:33:52.476 A:middle
where you can do
some initial set

00:33:52.476 --> 00:33:55.656 A:middle
up with your view controllers
before the user sees anything.

00:33:56.356 --> 00:33:58.326 A:middle
In this case, I'm actually going

00:33:58.326 --> 00:34:00.686 A:middle
to call the center
home region method

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.686 --> 00:34:01.816 A:middle
that I implemented earlier.

00:34:02.156 --> 00:34:04.926 A:middle
By default, the map would have
come up and displayed a map

00:34:04.926 --> 00:34:07.996 A:middle
of the entire world and
I'm certainly not that good

00:34:07.996 --> 00:34:10.376 A:middle
of a runner that I want to
see things on a global scale.

00:34:10.656 --> 00:34:13.456 A:middle
So, by calling this method,
I'll actually center the map

00:34:13.456 --> 00:34:14.846 A:middle
on the San Francisco Bay Area.

00:34:15.926 --> 00:34:17.306 A:middle
Likewise, I'm going to go ahead

00:34:17.306 --> 00:34:20.106 A:middle
and create my track overlays
here so that they'll be ready

00:34:20.106 --> 00:34:23.056 A:middle
when the map asks for them.

00:34:23.216 --> 00:34:26.085 A:middle
Next, you'll see that I
have my action method,

00:34:27.376 --> 00:34:30.005 A:middle
right here called
tap and map view.

00:34:30.565 --> 00:34:32.396 A:middle
This will be called by
the gesture recognizer

00:34:32.396 --> 00:34:33.985 A:middle
when the user touches
in to the map.

00:34:34.396 --> 00:34:36.036 A:middle
And you'll see here that
the first thing I'm going

00:34:36.036 --> 00:34:38.376 A:middle
to do is ask the
gesture recognizer

00:34:38.376 --> 00:34:40.466 A:middle
where in the view
the user touched.

00:34:41.606 --> 00:34:43.246 A:middle
I can then call a
method I wrote earlier

00:34:43.246 --> 00:34:45.426 A:middle
that will return the
correct map overlay for me

00:34:45.426 --> 00:34:49.036 A:middle
for that touch point,
and in this If block,

00:34:49.036 --> 00:34:52.255 A:middle
if I actually returned a route,
I'm going to go ahead and save

00:34:52.255 --> 00:34:54.996 A:middle
that selected route so I
can use it in just a moment.

00:34:55.126 --> 00:34:56.976 A:middle
And then I'm going
to call this method

00:34:56.976 --> 00:35:00.236 A:middle
performSegueWithIdentifier
runs for route.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:01.276 --> 00:35:03.176 A:middle
Now, I haven't shown you
the segue yet, I'll show you

00:35:03.176 --> 00:35:04.136 A:middle
that in just a moment.

00:35:04.336 --> 00:35:07.246 A:middle
But the important thing
here is that you don't have

00:35:07.286 --> 00:35:11.426 A:middle
to initiates segues from just
other views in your higher

00:35:11.426 --> 00:35:13.076 A:middle
and your view controller.

00:35:13.076 --> 00:35:16.636 A:middle
You can in fact initiate a
segue whenever you need to

00:35:16.756 --> 00:35:21.786 A:middle
and you can get to that segue
by giving it an identifier.

00:35:22.206 --> 00:35:23.896 A:middle
So let's see how to
give it that identifier.

00:35:27.916 --> 00:35:30.816 A:middle
So I'm going to ahead and drag
out my next view controller

00:35:31.766 --> 00:35:33.736 A:middle
and it's giving me a
detail of view controller.

00:35:33.736 --> 00:35:36.546 A:middle
So it's common to have
detail views that are

00:35:36.546 --> 00:35:40.286 A:middle
in fact table views,
and like I did before,

00:35:40.286 --> 00:35:42.996 A:middle
I'm going to give
it a special class.

00:35:44.466 --> 00:35:45.836 A:middle
And now I want to create a segue

00:35:46.296 --> 00:35:48.886 A:middle
from my first my
map view controller

00:35:48.886 --> 00:35:51.956 A:middle
into my detail view
controller but because I'm going

00:35:51.956 --> 00:35:54.966 A:middle
to call this segue from my view
controller, Is'm actually going

00:35:54.966 --> 00:35:58.446 A:middle
to link from the view
controller to my next segue

00:35:58.446 --> 00:36:02.246 A:middle
and do my standard push
segment-- my push segue.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:02.246 --> 00:36:04.936 A:middle
But this time, I'm going
to select the segue,

00:36:04.936 --> 00:36:07.406 A:middle
I'm going to come up to
its attribute and I'm going

00:36:07.406 --> 00:36:11.076 A:middle
to give it an identifier
runs for route.

00:36:12.256 --> 00:36:14.256 A:middle
And now this segue
can be identified

00:36:15.176 --> 00:36:17.526 A:middle
from my view controller
as we saw.

00:36:19.176 --> 00:36:21.786 A:middle
Now, I'm not quite ready
to show you this running

00:36:21.786 --> 00:36:25.346 A:middle
because for the detail view
controller to be useful,

00:36:25.406 --> 00:36:27.026 A:middle
it needs to have some
information in it.

00:36:28.526 --> 00:36:30.186 A:middle
And so there's two things
we're going to need to do

00:36:30.186 --> 00:36:31.526 A:middle
to display that information.

00:36:31.996 --> 00:36:34.336 A:middle
First, we're going to need
to come to the table view

00:36:34.406 --> 00:36:36.546 A:middle
and we're going to select
the table view cell.

00:36:37.286 --> 00:36:40.446 A:middle
Now, I want to be able to
reuse the table view cell over

00:36:40.446 --> 00:36:41.906 A:middle
and over again and to do that,

00:36:41.906 --> 00:36:46.806 A:middle
I'm going to give it an
identifier called run summary.

00:36:48.456 --> 00:36:50.426 A:middle
And now for my code,
I'm going to be able

00:36:50.426 --> 00:36:53.406 A:middle
to populate multiple cells
using that identifier.

00:36:53.846 --> 00:36:56.566 A:middle
But let's go back first
for a moment and look

00:36:56.566 --> 00:36:58.566 A:middle
at the map routes
view controller.

00:36:59.176 --> 00:37:01.856 A:middle
You see this one more method
that's very important.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:02.076 --> 00:37:03.756 A:middle
This method is called
prepareForSegue.

00:37:03.756 --> 00:37:07.026 A:middle
prepareForSegue is a
method that is implemented

00:37:07.026 --> 00:37:10.446 A:middle
by every view controller and it
will be called whenever a view--

00:37:10.446 --> 00:37:13.256 A:middle
whenever a segue is about
to initiate an action

00:37:13.696 --> 00:37:14.996 A:middle
on the current view controller.

00:37:15.296 --> 00:37:17.866 A:middle
This is a great place
where you can then interact

00:37:17.866 --> 00:37:18.816 A:middle
with the segue.

00:37:19.496 --> 00:37:21.106 A:middle
You'll have both ends
of the connection.

00:37:21.106 --> 00:37:23.086 A:middle
The source-- the
source view controller

00:37:23.086 --> 00:37:25.866 A:middle
and the destination view
controller, and because of that,

00:37:25.866 --> 00:37:28.536 A:middle
I can pass information
from one view controller

00:37:28.536 --> 00:37:29.826 A:middle
into the next view controller.

00:37:30.286 --> 00:37:33.656 A:middle
And so you'll see here with the
code, I'm doing exactly that.

00:37:34.236 --> 00:37:36.296 A:middle
I check the segue
that's been invoked

00:37:36.296 --> 00:37:39.426 A:middle
and I checked its identifier
to see if it runs for route.

00:37:39.996 --> 00:37:43.506 A:middle
Now, in this example, I actually
only have one segue coming

00:37:43.506 --> 00:37:44.476 A:middle
out on my view controller.

00:37:44.756 --> 00:37:47.826 A:middle
So strictly speaking, I don't
need to check its identifier,

00:37:48.176 --> 00:37:49.786 A:middle
but it's good practice
to always do

00:37:49.786 --> 00:37:53.386 A:middle
so because you'll probably find
in many scenes, you're going

00:37:53.386 --> 00:37:55.376 A:middle
to add additional
segues and you don't what

00:37:55.376 --> 00:37:57.276 A:middle
to be crossing your
segues and finding

00:37:57.276 --> 00:37:59.346 A:middle
that you're performing
the wrong thing just

00:37:59.346 --> 00:38:03.256 A:middle
because you didn't check
the identifier of the segue.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:03.366 --> 00:38:05.236 A:middle
As I mentioned, the
segue has access

00:38:05.236 --> 00:38:07.706 A:middle
to the destination view
controller, in this case,

00:38:07.706 --> 00:38:09.726 A:middle
we know because of the segue
identifier that it's going

00:38:09.726 --> 00:38:11.446 A:middle
to be a route details
view controller.

00:38:11.446 --> 00:38:13.906 A:middle
And so I'm going to go
ahead and set the title

00:38:13.906 --> 00:38:17.006 A:middle
for the next view
controller and where we grab

00:38:17.006 --> 00:38:19.306 A:middle
that selection earlier when
these are tapped in the map,

00:38:19.476 --> 00:38:21.276 A:middle
we're going to go ahead
and set the route data

00:38:21.276 --> 00:38:22.706 A:middle
and the detail view controller

00:38:22.886 --> 00:38:24.436 A:middle
from the route data
in our selection.

00:38:24.826 --> 00:38:28.216 A:middle
And one last thing
I want to touch

00:38:28.216 --> 00:38:30.196 A:middle
on before we should
see this running is

00:38:31.096 --> 00:38:34.966 A:middle
that when I created the
detail view controller,

00:38:34.966 --> 00:38:36.586 A:middle
I created a table
view controller.

00:38:37.766 --> 00:38:40.256 A:middle
That table view controller
automatically gets a couple

00:38:40.256 --> 00:38:41.316 A:middle
of special connections.

00:38:41.316 --> 00:38:44.016 A:middle
First, it gets a delegate
connection, and in this case,

00:38:44.016 --> 00:38:46.376 A:middle
I don't actually need to
intervene in the table view

00:38:46.376 --> 00:38:49.116 A:middle
in anyway where I'll need
the delegate connection,

00:38:49.356 --> 00:38:51.416 A:middle
but it also gets a
data source connection.

00:38:51.746 --> 00:38:53.816 A:middle
The data source connection
is important to a number

00:38:53.816 --> 00:38:56.056 A:middle
of views because, you
know, for example,

00:38:56.086 --> 00:38:59.256 A:middle
a table view has no idea what
data you want to display in it.

00:38:59.256 --> 00:39:01.776 A:middle
So it's going to need
to ask some other object

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:01.776 --> 00:39:03.546 A:middle
and in this case that would
be the view controller,

00:39:03.726 --> 00:39:05.236 A:middle
what data needs to be displayed.

00:39:06.256 --> 00:39:08.056 A:middle
Because I have a fairly
simple table view,

00:39:08.056 --> 00:39:09.516 A:middle
I just need to implement
two methods.

00:39:09.996 --> 00:39:12.306 A:middle
The first method is
number of rows in a section

00:39:12.416 --> 00:39:14.986 A:middle
and since I only have one
section, I know I just need

00:39:14.986 --> 00:39:17.826 A:middle
to return the route
data runs dot count.

00:39:18.276 --> 00:39:23.176 A:middle
Next, I need to implement
a method called tableView:

00:39:23.176 --> 00:39:25.156 A:middle
cellForRowAtIndexPath.

00:39:25.916 --> 00:39:29.546 A:middle
This is the actual method that
will provide table view cells

00:39:29.546 --> 00:39:32.656 A:middle
to the table view to be
displayed to the user interface.

00:39:33.086 --> 00:39:36.386 A:middle
And you'll see the first
method I call here is tableView

00:39:36.386 --> 00:39:38.596 A:middle
dequeueReusableCell
WithIdentifier.

00:39:39.226 --> 00:39:41.646 A:middle
And I asked for the
identifier run summary

00:39:41.836 --> 00:39:44.506 A:middle
and we saw it made that, I
selected my table view cell

00:39:44.506 --> 00:39:46.276 A:middle
and I gave it the
identifier run summary

00:39:46.566 --> 00:39:49.546 A:middle
and what the Table View is going
to do is it's going to say,

00:39:49.856 --> 00:39:51.936 A:middle
"Hey, do I already have a
cell named run summary?"

00:39:51.996 --> 00:39:55.246 A:middle
And if I don't, it's going--
I'll look in it a new one

00:39:55.246 --> 00:39:56.316 A:middle
and return that to me.

00:39:57.036 --> 00:39:59.576 A:middle
But it's only going to
do this for enough cells

00:39:59.576 --> 00:40:02.576 A:middle
to actually show what needs
to be displayed on screen.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:03.046 --> 00:40:04.656 A:middle
You can certainly imagine
having a Table View

00:40:04.656 --> 00:40:05.886 A:middle
with 10,000 rows in it.

00:40:05.886 --> 00:40:09.336 A:middle
I mean, who would want to
create 10,000 cells upfront,

00:40:09.686 --> 00:40:11.616 A:middle
be a horrible ways to
memory for something

00:40:11.616 --> 00:40:12.946 A:middle
that the user might
not even see.

00:40:13.516 --> 00:40:16.246 A:middle
And then, as you scroll
through the Table View,

00:40:16.716 --> 00:40:19.096 A:middle
as cells are scrolled
of the top,

00:40:19.096 --> 00:40:21.616 A:middle
they're put into the reuse
queue inside of the Table View

00:40:22.136 --> 00:40:23.796 A:middle
and those will be recycled

00:40:23.796 --> 00:40:25.646 A:middle
to show new data coming
in from the bottom.

00:40:26.046 --> 00:40:32.736 A:middle
So at this point, we
should have enough--

00:40:33.486 --> 00:40:38.176 A:middle
have done enough that we can go
ahead and run our application.

00:40:39.516 --> 00:40:44.146 A:middle
[ Pause ]

00:40:44.646 --> 00:40:46.916 A:middle
It'll launch, I can connect
the routes buttons now.

00:40:47.686 --> 00:40:49.696 A:middle
You'll see my map view
comes up and it's centered

00:40:49.696 --> 00:40:53.086 A:middle
on the San Francisco Bay Area
and I have a route highlighted.

00:40:54.126 --> 00:40:56.856 A:middle
If I go and tap on that
route, I go to a detail view

00:40:57.036 --> 00:41:02.296 A:middle
and here you see a detail
of when I run that route.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:02.536 --> 00:41:04.966 A:middle
So, what else can we do?

00:41:04.966 --> 00:41:07.336 A:middle
Well, I told you that I
was going to show you how

00:41:07.336 --> 00:41:09.806 A:middle
to do some custom
content, and to do that,

00:41:09.806 --> 00:41:11.916 A:middle
I'm going to go ahead and
add one more view controller.

00:41:14.976 --> 00:41:18.846 A:middle
This time, I'm going to connect
a segue from the table view cell

00:41:19.306 --> 00:41:22.296 A:middle
because table view cells
can certainly invoke segues,

00:41:22.296 --> 00:41:24.306 A:middle
and I'm going to
do a push again.

00:41:24.806 --> 00:41:26.776 A:middle
Because I'm going to want

00:41:26.776 --> 00:41:29.426 A:middle
to pass some additional
information just like I did

00:41:29.426 --> 00:41:32.006 A:middle
in the map view controller
to the detai view controller,

00:41:32.406 --> 00:41:36.776 A:middle
I'm going to give this view
controller an identifier

00:41:36.776 --> 00:41:38.956 A:middle
as well called Run Details.

00:41:39.266 --> 00:41:42.936 A:middle
And just because
our designer did

00:41:42.936 --> 00:41:44.826 A:middle
such a great job
creating images for us,

00:41:44.826 --> 00:41:46.306 A:middle
I'm going to add an
image to this view.

00:41:48.466 --> 00:41:54.356 A:middle
But now, I'm going to come into
my object library and I'm going

00:41:54.356 --> 00:41:56.456 A:middle
to add just a UIView object.

00:41:57.866 --> 00:42:01.016 A:middle
Now, normally, just
adding a UIView

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:01.326 --> 00:42:03.876 A:middle
to your user interface
would be kind of boring.

00:42:04.296 --> 00:42:06.576 A:middle
Now, they are useful
as a great way

00:42:06.576 --> 00:42:09.856 A:middle
to collect other views together
by there's going to be times

00:42:09.856 --> 00:42:12.166 A:middle
when you're going to want
to do some custom display.

00:42:12.166 --> 00:42:13.716 A:middle
You're going to have
custom controls.

00:42:14.066 --> 00:42:16.006 A:middle
You're going to have
custom drawing.

00:42:16.006 --> 00:42:18.106 A:middle
You're going to show
special statuses to the user.

00:42:18.496 --> 00:42:20.286 A:middle
In this case, I want
to show a graph.

00:42:21.286 --> 00:42:23.026 A:middle
So just like we do
with view controllers,

00:42:23.026 --> 00:42:26.526 A:middle
I can go to the identity
inspector, expand it down,

00:42:26.526 --> 00:42:29.886 A:middle
and you'll see here that I have
an object called GraphView.

00:42:29.886 --> 00:42:33.326 A:middle
And I'm going to go ahead and
make this view a GraphView.

00:42:33.716 --> 00:42:36.206 A:middle
And so, when your
program is running

00:42:36.206 --> 00:42:37.786 A:middle
and this view is instantiated,

00:42:38.086 --> 00:42:40.696 A:middle
rather than instantiating
just a generic UIView,

00:42:40.696 --> 00:42:42.016 A:middle
it's going to know
to go on there

00:42:42.246 --> 00:42:44.306 A:middle
and instantiate a
GraphView object for me.

00:42:44.306 --> 00:42:47.256 A:middle
Now I'm not going to show you
the draw methods and things

00:42:47.256 --> 00:42:51.466 A:middle
like that, that's all
more UIKit information,

00:42:51.996 --> 00:42:54.176 A:middle
but I've already implemented
some background information

00:42:54.176 --> 00:42:57.326 A:middle
for this so we can
actually display something.

00:42:57.586 --> 00:42:58.816 A:middle
But of course I'm
going to want to come

00:42:58.816 --> 00:43:01.256 A:middle
down to my view controller
and drag a connection

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:01.256 --> 00:43:04.466 A:middle
up to the GraphView and it's
good I did that 'cause it shows

00:43:04.466 --> 00:43:07.346 A:middle
that I forgot to set
my custom class name

00:43:09.056 --> 00:43:12.746 A:middle
for my view controller and now
I can drag up to my GraphView

00:43:12.966 --> 00:43:14.686 A:middle
and I can make an
outlet to my GraphView.

00:43:15.166 --> 00:43:16.426 A:middle
And we'll use that just

00:43:16.426 --> 00:43:18.056 A:middle
like Kelly was doing
with her controls.

00:43:19.366 --> 00:43:25.136 A:middle
So now if I run again, I
can go to the routes again,

00:43:25.656 --> 00:43:28.576 A:middle
click through the map quickly,
and I can click on a detail

00:43:29.406 --> 00:43:32.306 A:middle
and here you see instead
of just a generic view,

00:43:32.516 --> 00:43:35.266 A:middle
I get this nice graph that was
designed by our designer again.

00:43:36.356 --> 00:43:38.806 A:middle
So with that, that's all
I've got to demo for you

00:43:39.126 --> 00:43:40.516 A:middle
and let's return to the slides.

00:43:41.156 --> 00:43:43.976 A:middle
So, what are some the important
methods that we talked about?

00:43:44.506 --> 00:43:48.996 A:middle
So, with the UIViewController,
a UIViewController is going

00:43:48.996 --> 00:43:51.246 A:middle
to be the base of every
scene in your storyboard.

00:43:51.546 --> 00:43:53.176 A:middle
So certainly it's a
very important object.

00:43:53.616 --> 00:43:56.896 A:middle
And every UIViewController has
a property called storyboard.

00:43:57.476 --> 00:43:59.986 A:middle
You can use storyboard
to access the storyboard

00:43:59.986 --> 00:44:01.916 A:middle
from which your view
controller was created.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:02.826 --> 00:44:05.496 A:middle
This is important because
you might want to go to--

00:44:06.086 --> 00:44:08.866 A:middle
you may want to skip a scene and
you could-- with this method,

00:44:08.866 --> 00:44:09.976 A:middle
you can ask the storyboard

00:44:09.976 --> 00:44:12.696 A:middle
for another scene via
identifier in your storyboard.

00:44:13.626 --> 00:44:14.826 A:middle
We also saw the importance

00:44:14.826 --> 00:44:17.876 A:middle
of the
performSegueWithIdentifier

00:44:17.876 --> 00:44:18.266 A:middle
method.

00:44:18.596 --> 00:44:23.326 A:middle
This allows you to pick out
a segue from your storyboard

00:44:23.326 --> 00:44:25.546 A:middle
and then have that
segue invoke its action

00:44:25.546 --> 00:44:26.746 A:middle
to its next view controller.

00:44:27.666 --> 00:44:29.436 A:middle
We showed a fairly
simple case of this

00:44:29.436 --> 00:44:32.696 A:middle
but you might do something
like build a generic menu,

00:44:32.826 --> 00:44:35.576 A:middle
and in that menu, you
can put segue identifiers

00:44:35.576 --> 00:44:37.926 A:middle
and then you could have a
bunch connections coming

00:44:37.926 --> 00:44:39.066 A:middle
up from your view controller

00:44:39.226 --> 00:44:41.226 A:middle
and you could invoke the
correct segue depending

00:44:41.226 --> 00:44:43.816 A:middle
on which menu button was
tapped on by the user.

00:44:45.136 --> 00:44:46.746 A:middle
And finally, we saw
the importance

00:44:46.746 --> 00:44:49.236 A:middle
of the prepareForSegue
command, our method.

00:44:49.696 --> 00:44:53.676 A:middle
This method allows us to-- or
is given to us by the segue

00:44:53.676 --> 00:44:56.006 A:middle
to notify us that it
is about to transition

00:44:56.006 --> 00:44:58.316 A:middle
to a new view controller
and it lets us

00:44:58.316 --> 00:45:00.406 A:middle
to do some additional
work such as past data

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:00.406 --> 00:45:01.536 A:middle
between view controllers.

00:45:02.486 --> 00:45:05.466 A:middle
So, what are some of the other
problems you might encounter

00:45:05.466 --> 00:45:06.216 A:middle
on storyboards?

00:45:06.476 --> 00:45:09.986 A:middle
Well, one, as you
build your application,

00:45:10.316 --> 00:45:11.876 A:middle
you'll find out that
you start off with kind

00:45:11.876 --> 00:45:14.606 A:middle
of a simple storyboard, and
as you work, it gets more,

00:45:14.816 --> 00:45:16.566 A:middle
and more, and more complicated.

00:45:16.996 --> 00:45:19.516 A:middle
Well, you might for
organizational purposes want

00:45:19.516 --> 00:45:22.776 A:middle
to break your storyboard up
into two or three storyboards.

00:45:23.126 --> 00:45:25.996 A:middle
In our case here, we
might actually want to--

00:45:26.776 --> 00:45:29.786 A:middle
instead of having one storyboard
doing both the timer path

00:45:29.876 --> 00:45:31.466 A:middle
and the routes path,
we could divide

00:45:31.466 --> 00:45:32.676 A:middle
that into two storyboards.

00:45:33.016 --> 00:45:35.396 A:middle
Not only does it make it
a little easier to scroll

00:45:35.396 --> 00:45:37.986 A:middle
around your storyboard, but
if you're using something

00:45:37.986 --> 00:45:40.346 A:middle
like version control, it
means one developer can work

00:45:40.346 --> 00:45:42.756 A:middle
on the timer path while
another developer works

00:45:42.756 --> 00:45:46.946 A:middle
on the route path, and if
they do separate check ins,

00:45:46.946 --> 00:45:49.626 A:middle
they are less likely to cause
conflicts in the source control.

00:45:51.096 --> 00:45:53.026 A:middle
There's another important
time when you might want

00:45:53.026 --> 00:45:54.846 A:middle
to use additional
storyboards as well.

00:45:55.426 --> 00:45:57.186 A:middle
For example, say you're doing--

00:45:57.186 --> 00:45:59.386 A:middle
we add social media
to our application.

00:45:59.606 --> 00:46:01.366 A:middle
And when we do that, we're
going to want some kind

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:01.366 --> 00:46:03.546 A:middle
of a login panel for the user.

00:46:03.996 --> 00:46:05.536 A:middle
But in our storyboard,
we don't want

00:46:05.536 --> 00:46:07.976 A:middle
to hang a login panel scene off

00:46:07.976 --> 00:46:09.806 A:middle
of every single scene
in the storyboard.

00:46:10.036 --> 00:46:12.026 A:middle
Our storyboard will
quickly get ridiculous.

00:46:12.636 --> 00:46:15.066 A:middle
So instead, I can
create a small storyboard

00:46:15.066 --> 00:46:18.886 A:middle
that implements a reusable
piece of logic, in this case,

00:46:18.886 --> 00:46:21.266 A:middle
a login panel and I can
call that from anywhere.

00:46:22.236 --> 00:46:24.076 A:middle
So, how do you create
a storyboard?

00:46:24.476 --> 00:46:26.396 A:middle
Well, there's a UIStoryboard
object

00:46:26.846 --> 00:46:28.366 A:middle
and it implements a few methods.

00:46:28.586 --> 00:46:30.876 A:middle
The important-- the first
important one is storyboard

00:46:30.876 --> 00:46:31.466 A:middle
with name.

00:46:31.916 --> 00:46:34.456 A:middle
This allows you to identify
a storyboard you'll save

00:46:34.456 --> 00:46:35.616 A:middle
and add it to your project.

00:46:36.186 --> 00:46:39.416 A:middle
The method-- the second
argument bundle and almost all

00:46:39.416 --> 00:46:41.906 A:middle
of your cases will be
your application bundle,

00:46:41.906 --> 00:46:44.006 A:middle
so you'll just pass an
NSBundle mainBundle.

00:46:44.546 --> 00:46:48.086 A:middle
And as I said, this will create
and return a storyboard object.

00:46:48.426 --> 00:46:49.996 A:middle
Once you have a storyboard
object,

00:46:50.266 --> 00:46:51.936 A:middle
you have a method
instantiateInitial

00:46:51.936 --> 00:46:52.666 A:middle
ViewController.

00:46:53.696 --> 00:46:57.626 A:middle
The initial view controller in
a storyboard is that that scene

00:46:57.626 --> 00:47:00.316 A:middle
that had the large
arrow pointing to it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:00.316 --> 00:47:02.886 A:middle
And so calling this method
means you'll create one

00:47:02.886 --> 00:47:05.986 A:middle
of those view controllers, load
its interface and display it.

00:47:07.476 --> 00:47:10.106 A:middle
But if you don't want to go
to the initial view controller

00:47:10.106 --> 00:47:12.726 A:middle
and in fact want to go to
a different view controller

00:47:12.726 --> 00:47:14.456 A:middle
in your storyboard
or different scene,

00:47:14.766 --> 00:47:16.476 A:middle
you can do
instantiateViewController

00:47:17.036 --> 00:47:18.216 A:middle
WithIdentifier.

00:47:18.656 --> 00:47:22.286 A:middle
So, a view controller just
like we did with our segues

00:47:22.286 --> 00:47:25.036 A:middle
and our table view cell
can be given an identifier

00:47:25.186 --> 00:47:27.516 A:middle
and this allows you
to jump right

00:47:27.726 --> 00:47:29.986 A:middle
to the view controller
without identifier.

00:47:30.336 --> 00:47:31.856 A:middle
For example, you might have--

00:47:32.666 --> 00:47:34.446 A:middle
and when doing a
login connection,

00:47:34.446 --> 00:47:36.976 A:middle
you may have too
slightly different scenes.

00:47:37.246 --> 00:47:39.136 A:middle
One might be for
doing an initial login

00:47:39.136 --> 00:47:41.906 A:middle
for a new user the first
time and another one might be

00:47:41.906 --> 00:47:45.686 A:middle
to just re-login the second time
you started the application.

00:47:46.056 --> 00:47:48.276 A:middle
This would allow you to use
one storyboard but start

00:47:48.276 --> 00:47:49.926 A:middle
from two different
points in the storyboard.

00:47:51.356 --> 00:47:54.916 A:middle
So, up to this point,
we've always been talking

00:47:54.916 --> 00:47:56.606 A:middle
about storyboard files.

00:47:56.806 --> 00:47:58.436 A:middle
And the storyboard
files are great

00:47:58.436 --> 00:48:00.936 A:middle
because they let
you see a large flow

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:00.936 --> 00:48:02.826 A:middle
of your application
in one place.

00:48:02.826 --> 00:48:05.716 A:middle
It really helps you visualize
how the user is going to move

00:48:05.716 --> 00:48:07.446 A:middle
to your application
and how data is going

00:48:07.446 --> 00:48:08.826 A:middle
to flow to the application.

00:48:09.446 --> 00:48:12.246 A:middle
But Interface Builder also
lets you edit what's called the

00:48:12.246 --> 00:48:12.936 A:middle
XIB File.

00:48:14.046 --> 00:48:17.916 A:middle
Now, in this case, I'm
showing an application--

00:48:17.916 --> 00:48:20.946 A:middle
an AppKit application rather
than an iOS Application

00:48:21.236 --> 00:48:23.696 A:middle
because if you're going to
do any AppKit development,

00:48:23.896 --> 00:48:26.386 A:middle
you're going to be using XIB
Files and not storyboards.

00:48:26.706 --> 00:48:27.806 A:middle
And in this case though,

00:48:27.806 --> 00:48:30.736 A:middle
I showed that you can store
much the similar objects.

00:48:30.776 --> 00:48:33.856 A:middle
For example, this shows you the
main menu of the application

00:48:34.256 --> 00:48:36.716 A:middle
as well as an app--
simple application window.

00:48:37.206 --> 00:48:39.686 A:middle
In XIB Files, you'll still
use view controllers.

00:48:39.686 --> 00:48:42.736 A:middle
You'll still make connections
from view controllers to windows

00:48:42.736 --> 00:48:45.746 A:middle
and views inside and connections
from the controls back

00:48:45.746 --> 00:48:46.846 A:middle
into the view controllers.

00:48:47.686 --> 00:48:50.526 A:middle
Except that you're going to
do a-- when you need to move,

00:48:50.816 --> 00:48:52.026 A:middle
say load a new window,

00:48:52.256 --> 00:48:54.376 A:middle
you'll actually explicitly
load a XIB file

00:48:54.476 --> 00:48:55.996 A:middle
like you would load
a second storyboard.

00:48:59.096 --> 00:49:01.726 A:middle
So, there's two last
objects that I want to talk

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:01.726 --> 00:49:04.926 A:middle
about real quick and these
objects are called NSNib

00:49:05.036 --> 00:49:05.906 A:middle
and UINib.

00:49:06.426 --> 00:49:08.726 A:middle
Now, you're probably going
to ask, what's nib file?

00:49:08.726 --> 00:49:11.426 A:middle
Everything we've talked about
has been a XIB or a storyboard.

00:49:11.936 --> 00:49:15.646 A:middle
Well, a XIB and storyboard
are actually just descriptions

00:49:15.646 --> 00:49:20.436 A:middle
of your interface and well they
are archive representations

00:49:20.436 --> 00:49:23.006 A:middle
of the objects, they're not
objects that are ready to load

00:49:23.006 --> 00:49:24.816 A:middle
like right in the
memory and start using.

00:49:25.496 --> 00:49:28.316 A:middle
Instead, when you
compile your application,

00:49:28.456 --> 00:49:32.676 A:middle
we compile the XIB Files and
storyboards into nib objects.

00:49:32.966 --> 00:49:35.076 A:middle
And in fact, when we
compile your storyboard,

00:49:35.356 --> 00:49:37.926 A:middle
rather than having to
load the entire storyboard

00:49:37.926 --> 00:49:40.316 A:middle
at launch time, we
compile the storyboard

00:49:40.316 --> 00:49:43.336 A:middle
into smaller nib files and
then as you've navigate

00:49:43.336 --> 00:49:44.656 A:middle
through your view controllers,

00:49:44.816 --> 00:49:46.856 A:middle
we'll instantiate those
individual nib files.

00:49:47.056 --> 00:49:48.406 A:middle
That way we don't have
to have everything

00:49:48.406 --> 00:49:49.616 A:middle
in memory again at one time.

00:49:50.546 --> 00:49:54.046 A:middle
And so, when is a place
where you might need to that?

00:49:54.416 --> 00:49:58.746 A:middle
Well, storyboards also use nibs
when you're using table views.

00:49:59.136 --> 00:50:01.226 A:middle
And as you do those--
load those prototypes,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:01.226 --> 00:50:02.726 A:middle
it's actually loading
the nib to load

00:50:02.726 --> 00:50:04.346 A:middle
that table view prototype
in for me.

00:50:05.066 --> 00:50:06.736 A:middle
But what if you wanted
to share table view cells

00:50:06.736 --> 00:50:07.956 A:middle
across multiple nibs?

00:50:08.426 --> 00:50:09.786 A:middle
Well, you could do that.

00:50:09.916 --> 00:50:12.396 A:middle
You can have a simple nib
and every time you wanted

00:50:12.396 --> 00:50:14.196 A:middle
to load those, you
could ask the nib, "Hey,

00:50:14.196 --> 00:50:15.716 A:middle
instantiate your objects

00:50:15.716 --> 00:50:18.436 A:middle
and then object return
would be a table view cell

00:50:18.556 --> 00:50:21.506 A:middle
and you could now take that
table view cell and register it

00:50:21.506 --> 00:50:24.326 A:middle
with a table view to be used
in a reusable fashion just

00:50:24.326 --> 00:50:26.876 A:middle
like we saw the storyboard do.

00:50:27.396 --> 00:50:30.776 A:middle
So with that, if you have
any more technical questions

00:50:30.776 --> 00:50:33.126 A:middle
about the information
that was presented here,

00:50:33.356 --> 00:50:35.536 A:middle
you can contact our
evangelist, Dave DeLong.

00:50:35.736 --> 00:50:37.736 A:middle
I also appointed you to a couple

00:50:37.736 --> 00:50:39.836 A:middle
of useful links here
in the documentation.

00:50:40.116 --> 00:50:42.436 A:middle
The first one is the human
interface guidelines.

00:50:42.666 --> 00:50:45.496 A:middle
If you're going to be developing
applications, you're going

00:50:45.496 --> 00:50:46.776 A:middle
to certainly want
to reference those,

00:50:47.156 --> 00:50:49.716 A:middle
and also to the interface
builder help documentation.

00:50:50.006 --> 00:50:54.936 A:middle
Some related sessions, if you
missed it, you're going to want

00:50:54.936 --> 00:50:57.076 A:middle
to watch the S code
core concepts video.

00:50:57.676 --> 00:51:00.496 A:middle
And very important
and very much related

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:51:00.496 --> 00:51:02.776 A:middle
to how interface builder
work is auto layout.

00:51:03.086 --> 00:51:05.636 A:middle
Now, Kelly and I didn't show
auto layout because in fact,

00:51:05.636 --> 00:51:08.546 A:middle
there's a full hour session on
how to use auto layout coming

00:51:08.546 --> 00:51:09.726 A:middle
up immediately after this.

00:51:10.016 --> 00:51:12.216 A:middle
So we'd like to invite you
to go upstairs to Presidio

00:51:12.476 --> 00:51:13.506 A:middle
and attend that session.

00:51:13.716 --> 00:51:16.766 A:middle
So, just to quickly
summarize, we showed you how

00:51:16.766 --> 00:51:19.146 A:middle
to create a simple project,
we showed you how to work

00:51:19.146 --> 00:51:21.866 A:middle
with storyboards, we showed
you how to make connections

00:51:21.866 --> 00:51:24.426 A:middle
to outlets and actions, we
showed you the importance

00:51:24.426 --> 00:51:27.746 A:middle
of delegates and data source
methods, we showed you how

00:51:27.746 --> 00:51:30.296 A:middle
to manually invoke segues,
and finally, we showed you how

00:51:30.296 --> 00:51:31.676 A:middle
to load storyboards and code.

00:51:32.176 --> 00:51:33.826 A:middle
With that, I'd like to
thank you for all attending.

