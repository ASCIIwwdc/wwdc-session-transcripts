WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:09.466 A:middle
[ Applause ]

00:00:09.966 --> 00:00:11.926 A:middle
&gt;&gt; Good morning and welcome.

00:00:12.066 --> 00:00:13.016 A:middle
My name is Filip.

00:00:13.016 --> 00:00:15.566 A:middle
I'm the opening act for
Bill Nye the Science Guy.

00:00:15.566 --> 00:00:16.315 A:middle
[ Laughter ]

00:00:16.315 --> 00:00:17.466 A:middle
Just kidding.

00:00:17.706 --> 00:00:19.916 A:middle
I lead the mobile apps
engineering team at Apple

00:00:19.916 --> 00:00:22.286 A:middle
and we build iOS apps
just like you guys.

00:00:22.836 --> 00:00:25.686 A:middle
Our apps get built and
submitted to the App Store.

00:00:26.066 --> 00:00:28.286 A:middle
They get approved and they
get downloaded by users

00:00:28.496 --> 00:00:29.646 A:middle
and they can get deleted too.

00:00:29.936 --> 00:00:33.516 A:middle
Of all the teams at Apple
and of all the teams

00:00:33.556 --> 00:00:36.036 A:middle
that have presented to
you at WWDC this week,

00:00:36.386 --> 00:00:37.656 A:middle
we're the most like you guys.

00:00:38.666 --> 00:00:41.806 A:middle
What we'd like to share with you
today is some situations we come

00:00:41.956 --> 00:00:43.656 A:middle
across in developing our apps.

00:00:44.346 --> 00:00:46.526 A:middle
These situations have
given rise to opportunities

00:00:46.856 --> 00:00:49.016 A:middle
where we could harness
some key iOS technologies

00:00:49.376 --> 00:00:50.356 A:middle
and create truly unique

00:00:50.556 --> 00:00:52.696 A:middle
and compelling experiences
for our users.

00:00:53.266 --> 00:00:55.216 A:middle
I'm going to show you the
features that we built

00:00:55.556 --> 00:00:57.186 A:middle
and the technologies
behind them.

00:00:57.596 --> 00:00:59.476 A:middle
As I talk about our apps,
I want you guys to think

00:00:59.476 --> 00:01:02.836 A:middle
about your own apps and
find some parallels.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:02.836 --> 00:01:04.275 A:middle
And I know you can
identify with a lot

00:01:04.275 --> 00:01:06.206 A:middle
of the opportunities
we'll see today

00:01:06.206 --> 00:01:08.306 A:middle
and use these technologies
in your own apps.

00:01:08.976 --> 00:01:11.666 A:middle
We'll talk also about tips,
tricks, and best practices.

00:01:12.066 --> 00:01:14.366 A:middle
And finally, we'll end
with a demo on iBeacons.

00:01:14.366 --> 00:01:15.996 A:middle
So let's get started.

00:01:17.266 --> 00:01:19.296 A:middle
First, I'd like to
introduce the Apple Store app.

00:01:19.536 --> 00:01:21.806 A:middle
It's going to be the reference
app for this presentation.

00:01:22.246 --> 00:01:24.566 A:middle
This is an app my team builds
and you can download it

00:01:24.566 --> 00:01:28.566 A:middle
from the App Store anytime,
maybe even right now.

00:01:28.566 --> 00:01:30.466 A:middle
Let me see, who has
the app on their phone?

00:01:30.566 --> 00:01:32.586 A:middle
Oh wow, good.

00:01:32.746 --> 00:01:33.776 A:middle
Who doesn't have it?

00:01:33.776 --> 00:01:36.266 A:middle
Who is downloading right now?

00:01:36.266 --> 00:01:36.826 A:middle
[ Laughter ]

00:01:36.826 --> 00:01:39.726 A:middle
A lot of you don't
put up your hand.

00:01:39.726 --> 00:01:40.896 A:middle
Maybe you're shy.

00:01:40.896 --> 00:01:43.466 A:middle
If you're shy, you can come
on the stage with me in front

00:01:43.466 --> 00:01:46.286 A:middle
of all of you, you'll lose
your shyness very fast.

00:01:46.756 --> 00:01:49.296 A:middle
OK. So, Apple Store app
is a great way to learn

00:01:49.296 --> 00:01:51.536 A:middle
about Apple products, to
browse Apple products.

00:01:51.716 --> 00:01:52.886 A:middle
You can customize and buy.

00:01:53.226 --> 00:01:55.946 A:middle
You can also find out
about Apple retail stores,

00:01:56.266 --> 00:01:58.276 A:middle
what events are going on,
maybe book an appointment

00:01:58.276 --> 00:02:00.376 A:middle
like Genius Bar or pick
up an order you made

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.376 --> 00:02:01.946 A:middle
on the Apple Store
app at the store.

00:02:01.946 --> 00:02:05.776 A:middle
And it's this key characteristic
of the Apple Store app,

00:02:05.776 --> 00:02:07.826 A:middle
this integration with the
physical Apple Stores,

00:02:08.175 --> 00:02:10.666 A:middle
and this by the way is the Upper
West Side Store in New York.

00:02:10.666 --> 00:02:14.196 A:middle
It's going to be our
reference store for the talk.

00:02:14.396 --> 00:02:17.196 A:middle
This intersection between the
online with the Apple Store app

00:02:17.646 --> 00:02:20.426 A:middle
and the physical with the Apple
retail store gives rise to a lot

00:02:20.426 --> 00:02:22.476 A:middle
of the opportunities
we'll talk about today.

00:02:22.996 --> 00:02:25.956 A:middle
When I talk about our app in
the store, I'd like you to think

00:02:25.956 --> 00:02:27.356 A:middle
about your own situations.

00:02:27.356 --> 00:02:29.176 A:middle
So, maybe you have a
Movie app and you want

00:02:29.176 --> 00:02:30.596 A:middle
to think about movie theaters.

00:02:31.006 --> 00:02:33.586 A:middle
Maybe you have Dinner
Reservation app and you want

00:02:33.586 --> 00:02:35.806 A:middle
to think about restaurants.

00:02:36.216 --> 00:02:39.036 A:middle
Maybe you have a Travel app, you
want to think about airports.

00:02:39.286 --> 00:02:42.206 A:middle
Amusement Park app, you want--
or Museum app, you want to think

00:02:42.206 --> 00:02:43.786 A:middle
about museums and
amusement parks

00:02:43.786 --> 00:02:46.706 A:middle
or maybe your own Retail app
and your own retail stores.

00:02:48.136 --> 00:02:50.276 A:middle
For those of you who don't
have locations of interest

00:02:50.326 --> 00:02:51.416 A:middle
in your app, don't worry,

00:02:51.726 --> 00:02:54.186 A:middle
a lot of the technology we'll
talk today will still be

00:02:54.186 --> 00:02:55.236 A:middle
applicable for you guys.

00:02:56.636 --> 00:02:59.566 A:middle
So, this is my agenda
slide, it's a timeline.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:00.176 --> 00:03:01.996 A:middle
And it all centers around--

00:03:02.176 --> 00:03:03.906 A:middle
and we're going to use this
timeline through the talk.

00:03:04.286 --> 00:03:06.246 A:middle
It all centers around the
fact that there's an event.

00:03:06.936 --> 00:03:07.966 A:middle
OK, it can be anything.

00:03:07.966 --> 00:03:08.916 A:middle
Dinner is on tonight.

00:03:09.226 --> 00:03:10.626 A:middle
There's a movie playing.

00:03:10.626 --> 00:03:13.856 A:middle
You're traveling
tomorrow to go on a trip.

00:03:13.996 --> 00:03:15.006 A:middle
You can even be in a game

00:03:15.006 --> 00:03:17.776 A:middle
like all the players are getting
together to play a game online.

00:03:18.226 --> 00:03:20.956 A:middle
Or it could be a sale or
a new product is launched.

00:03:21.716 --> 00:03:23.916 A:middle
So, there's this time
before the event,

00:03:23.916 --> 00:03:25.126 A:middle
what can we do in that time?

00:03:25.836 --> 00:03:28.076 A:middle
There's the event itself
when people are arriving

00:03:28.076 --> 00:03:29.956 A:middle
at your event, what
opportunities are there?

00:03:30.556 --> 00:03:32.436 A:middle
And finally, when
people are at your event

00:03:32.736 --> 00:03:33.676 A:middle
and they're spending time,

00:03:34.146 --> 00:03:35.876 A:middle
how can we enrich
the experience there?

00:03:37.206 --> 00:03:39.046 A:middle
Before we get fully started,

00:03:39.046 --> 00:03:41.236 A:middle
I want to mention the
technologies we're going to use.

00:03:41.236 --> 00:03:42.736 A:middle
We're going to start
pretty basic

00:03:42.736 --> 00:03:44.186 A:middle
and get a little more complex.

00:03:45.246 --> 00:03:46.766 A:middle
First of is Calendar Events.

00:03:47.666 --> 00:03:49.396 A:middle
Then we've got Push
Notifications,

00:03:50.416 --> 00:03:51.536 A:middle
then Core Location.

00:03:51.596 --> 00:03:53.356 A:middle
And a specific feature
of Core Location,

00:03:53.356 --> 00:03:54.446 A:middle
we call Region Monitoring.

00:03:54.756 --> 00:03:56.346 A:middle
This is also known
as Geofencing.

00:03:56.476 --> 00:03:57.366 A:middle
You might know it like that.

00:03:57.906 --> 00:04:00.836 A:middle
And finally, we're going to talk
about a new technology on iOS 7,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:00.936 --> 00:04:03.096 A:middle
iBeacons and that's the
demo we'll show you.

00:04:04.496 --> 00:04:06.676 A:middle
OK. So, it's the time
before the event,

00:04:06.886 --> 00:04:08.826 A:middle
the event is coming
up, what do you do?

00:04:09.806 --> 00:04:10.936 A:middle
You tell your users about it.

00:04:11.616 --> 00:04:13.786 A:middle
To remind ourselves in the
timeline, we are now here,

00:04:14.136 --> 00:04:15.086 A:middle
right before the event.

00:04:16.226 --> 00:04:18.456 A:middle
So this is an event,
hopefully our users really care

00:04:18.456 --> 00:04:19.116 A:middle
about this.

00:04:19.206 --> 00:04:19.796 A:middle
They're excited.

00:04:19.796 --> 00:04:21.745 A:middle
When you told them about it,
they are looking forward to it.

00:04:22.216 --> 00:04:24.756 A:middle
What can you do in your apps
to keep that excitement alive

00:04:24.756 --> 00:04:27.466 A:middle
and what can you do to
remind them of the event?

00:04:28.606 --> 00:04:29.286 A:middle
I'll show you.

00:04:29.736 --> 00:04:31.936 A:middle
Through a feature in the Apple
Store app we called iPhone

00:04:31.936 --> 00:04:33.016 A:middle
upgrade notification.

00:04:33.446 --> 00:04:34.456 A:middle
Let me just set the scene.

00:04:34.766 --> 00:04:38.056 A:middle
I will have to guess that pretty
much all of you have an iPhone

00:04:38.056 --> 00:04:39.256 A:middle
or have access to an iPhone.

00:04:39.606 --> 00:04:42.276 A:middle
Those of you that have
bought it in the US,

00:04:42.276 --> 00:04:45.096 A:middle
you know that US carriers
like Sprint, AT&amp;T, Verizon,

00:04:45.096 --> 00:04:47.586 A:middle
they subsidized the
cost of your phone

00:04:47.676 --> 00:04:49.316 A:middle
if you sign a contract
like two years.

00:04:50.036 --> 00:04:51.326 A:middle
When you want to
upgrade your phone,

00:04:51.586 --> 00:04:53.596 A:middle
depending on where you are in
that period, maybe at the end

00:04:53.596 --> 00:04:57.186 A:middle
of the two years, you get a
full discount again of 199

00:04:57.186 --> 00:04:58.696 A:middle
and the carrier will
subsidize that.

00:04:58.696 --> 00:04:59.806 A:middle
Maybe if you're midway through,

00:04:59.806 --> 00:05:01.886 A:middle
you get a partial
discount like 449.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:02.116 --> 00:05:03.936 A:middle
And if you're early, maybe
you don't get a discount.

00:05:04.716 --> 00:05:07.306 A:middle
So, as a user, you might want to
get the iPhone at the best price

00:05:07.306 --> 00:05:10.766 A:middle
so you got to keep track
where you are in that contract

00:05:10.766 --> 00:05:14.016 A:middle
and when you're eligible
for that best price.

00:05:14.186 --> 00:05:15.696 A:middle
OK, so that's your event.

00:05:15.776 --> 00:05:18.916 A:middle
The event is the fact that
you can get this new product,

00:05:18.916 --> 00:05:20.476 A:middle
this iPhone at the best price.

00:05:21.346 --> 00:05:22.676 A:middle
OK, so you got to keep
track of that date

00:05:22.676 --> 00:05:24.726 A:middle
and the worse thing
is it's dynamic.

00:05:24.776 --> 00:05:25.736 A:middle
Carriers can change it.

00:05:25.896 --> 00:05:27.486 A:middle
They can pull in
the date, you know,

00:05:27.836 --> 00:05:29.716 A:middle
maybe to incentivize
you to buy early.

00:05:30.416 --> 00:05:32.616 A:middle
So what can we do in the Apple
Store app to remind users

00:05:32.616 --> 00:05:34.836 A:middle
of this event and make
this process even better?

00:05:36.236 --> 00:05:38.146 A:middle
This is the iPhone
page in our app.

00:05:38.146 --> 00:05:39.406 A:middle
You can learn about the iPhone.

00:05:39.796 --> 00:05:42.346 A:middle
You can choose the model and
the color and you can buy.

00:05:43.366 --> 00:05:45.716 A:middle
When you buy, we're going
to auto detect your carrier

00:05:45.906 --> 00:05:47.166 A:middle
and we're going to
tell you, "Hey,

00:05:47.166 --> 00:05:49.966 A:middle
we need to go query the
carrier on your behalf to find

00:05:49.966 --> 00:05:50.876 A:middle
out what your price is."

00:05:51.576 --> 00:05:53.996 A:middle
We take some info from you
that the carrier needs.

00:05:54.156 --> 00:05:56.956 A:middle
We're going to encrypt this and
we're going to send it securely.

00:05:56.956 --> 00:05:58.536 A:middle
And then, we're going
to come back

00:05:58.856 --> 00:05:59.916 A:middle
with the price for your phone.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:00.366 --> 00:06:03.096 A:middle
In this case, you're eligible
for a partial discount

00:06:03.096 --> 00:06:05.416 A:middle
of 449 for the 16 gigabyte.

00:06:05.746 --> 00:06:09.496 A:middle
On April 15th, you can get
the full discount of 199

00:06:09.806 --> 00:06:11.216 A:middle
and that's all the
features used to be.

00:06:11.346 --> 00:06:13.456 A:middle
And it would be up to you
if you don't want to buy now

00:06:13.456 --> 00:06:15.916 A:middle
to come back later and go
through this process again.

00:06:16.686 --> 00:06:18.046 A:middle
Then we added Notify Me.

00:06:18.736 --> 00:06:20.906 A:middle
That's your way to say, "Hey,
Apple Store app, I don't care

00:06:20.906 --> 00:06:22.656 A:middle
about this to think
about this stuff.

00:06:22.656 --> 00:06:23.886 A:middle
You tell me when I'm eligible."

00:06:24.426 --> 00:06:25.416 A:middle
OK, we can do that.

00:06:25.866 --> 00:06:28.226 A:middle
The first way we did this
was through Calendar Events.

00:06:28.466 --> 00:06:30.886 A:middle
And we-- you tap there, we just
put an event on your calendar.

00:06:31.336 --> 00:06:32.676 A:middle
You don't have to
think about it anymore

00:06:32.676 --> 00:06:33.886 A:middle
and they'll be there for you.

00:06:34.386 --> 00:06:36.126 A:middle
Or remember, it's a dynamic date

00:06:36.196 --> 00:06:37.816 A:middle
and if the carrier
changes the date,

00:06:38.476 --> 00:06:39.796 A:middle
the Calendar Event is static.

00:06:40.596 --> 00:06:42.636 A:middle
So then we built it
using Push Notifications.

00:06:43.806 --> 00:06:46.156 A:middle
And so, if you swipe
that toggle to on,

00:06:46.926 --> 00:06:48.686 A:middle
we're going to do is we're
going to schedule a job

00:06:48.686 --> 00:06:52.636 A:middle
on our service side and query
the carrier on a regular basis

00:06:52.636 --> 00:06:55.356 A:middle
and in intelligent way and we'll
notify you the first moment

00:06:55.616 --> 00:06:56.306 A:middle
that you're eligible.

00:06:57.396 --> 00:07:00.526 A:middle
So then, on April 15th, maybe
the app is on the background,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:00.526 --> 00:07:03.556 A:middle
your phone is on your pocket,
or whatever that date is,

00:07:03.726 --> 00:07:04.826 A:middle
you're going to get
something like this.

00:07:04.826 --> 00:07:07.746 A:middle
It's a push notification from
our app, "Hey, good news,

00:07:07.746 --> 00:07:10.106 A:middle
you can get the phone at
the best price right now."

00:07:10.216 --> 00:07:12.476 A:middle
You swipe in, we'll
take you to the app,

00:07:12.696 --> 00:07:15.236 A:middle
we'll show you the best price,
and you just tap to buy,

00:07:15.236 --> 00:07:17.486 A:middle
and it can ship to your house
or pick it up at the store.

00:07:18.496 --> 00:07:20.666 A:middle
And that's iPhone
upgrade notification.

00:07:20.966 --> 00:07:23.186 A:middle
So we've taken this
event, get this iPhone

00:07:23.186 --> 00:07:26.066 A:middle
and we've reminded users about
it and made the process easier.

00:07:27.326 --> 00:07:29.506 A:middle
So, we're going to talk about
the example then we talk

00:07:29.506 --> 00:07:30.786 A:middle
about the technology behind it.

00:07:31.696 --> 00:07:33.006 A:middle
First is Calendar Events.

00:07:34.226 --> 00:07:36.516 A:middle
This is simple to use
but pretty effective.

00:07:36.966 --> 00:07:38.396 A:middle
And I'm not going to
spend too much time here.

00:07:38.396 --> 00:07:40.216 A:middle
Pretty much all the
skeleton code is here.

00:07:40.576 --> 00:07:43.396 A:middle
Innermost block is where you
create the event and save it.

00:07:43.736 --> 00:07:45.456 A:middle
The outermost stuff is
little more interesting.

00:07:45.526 --> 00:07:46.796 A:middle
It handles the privacy alert.

00:07:47.196 --> 00:07:50.136 A:middle
Your app has to ask user
permission to use the calendar

00:07:50.396 --> 00:07:53.336 A:middle
and that code is going
to take care of that.

00:07:53.546 --> 00:07:56.396 A:middle
OK. Now, a little
more sophisticated,

00:07:56.636 --> 00:07:57.566 A:middle
Push Notifications.

00:07:58.126 --> 00:08:00.706 A:middle
This is the richer way to
inform users and it's dynamic.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:00.706 --> 00:08:02.666 A:middle
You can have those dynamic
events 'cause your server is

00:08:02.666 --> 00:08:04.556 A:middle
going to decide when
to inform users.

00:08:05.056 --> 00:08:07.106 A:middle
It's pretty straightforward.

00:08:07.106 --> 00:08:09.946 A:middle
You register pushes-- you
register for Push with this API.

00:08:10.686 --> 00:08:12.616 A:middle
You then take the
Token with this API.

00:08:12.726 --> 00:08:15.566 A:middle
Now the token uniquely
represents your app

00:08:15.836 --> 00:08:16.706 A:middle
on this device.

00:08:17.786 --> 00:08:20.036 A:middle
Send that Token to the
server-side where you store it.

00:08:20.506 --> 00:08:22.736 A:middle
When your server decides,
"Hey, it's time to do a push,

00:08:22.736 --> 00:08:27.136 A:middle
the event is here," you send
the push to APNS via the Token

00:08:27.436 --> 00:08:30.346 A:middle
and then APNS, that's the Apple
Push Notifications Service,

00:08:30.926 --> 00:08:33.756 A:middle
they're going to target
that user by that Token.

00:08:34.556 --> 00:08:36.635 A:middle
They'll get an alert and
then if they swipe in,

00:08:36.635 --> 00:08:38.616 A:middle
your app will get woken up
and you're going to have

00:08:38.616 --> 00:08:41.346 A:middle
to handle this did receive
remote notification method.

00:08:41.996 --> 00:08:43.806 A:middle
And that's it, pretty
straightforward

00:08:43.926 --> 00:08:45.926 A:middle
but pretty powerful
way to inform users.

00:08:47.126 --> 00:08:49.226 A:middle
So we talk about the
technology behind the example.

00:08:49.896 --> 00:08:52.006 A:middle
Now, we'll do some tips, tricks,

00:08:52.006 --> 00:08:53.536 A:middle
and best practices
to use this stuff.

00:08:54.196 --> 00:08:59.456 A:middle
First one is the big no,
no and there's X over there

00:08:59.456 --> 00:09:00.336 A:middle
in case you're wondering.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:00.676 --> 00:09:02.246 A:middle
And it's the red X.

00:09:02.246 --> 00:09:04.676 A:middle
And it's the only red X that
I have but it's very important

00:09:04.676 --> 00:09:07.246 A:middle
because of this kind of stuff.

00:09:07.426 --> 00:09:09.986 A:middle
How many of you can identify
what this, you know, "Hey,

00:09:09.986 --> 00:09:11.866 A:middle
you haven't used me in
two weeks or five days.

00:09:12.096 --> 00:09:12.796 A:middle
Please open me up."

00:09:13.486 --> 00:09:14.086 A:middle
Pretty annoying.

00:09:14.746 --> 00:09:18.266 A:middle
So, notify users of
events they care about,

00:09:18.266 --> 00:09:20.346 A:middle
only of events they care about.

00:09:20.906 --> 00:09:22.796 A:middle
'Cause if you don't, if you
bought at them like this,

00:09:23.046 --> 00:09:24.866 A:middle
they going to turn off,
pushes globally for your app

00:09:24.866 --> 00:09:26.186 A:middle
and you can't notify them again.

00:09:26.426 --> 00:09:28.956 A:middle
Or worse, you're going to
hold down on your app icon.

00:09:28.996 --> 00:09:30.466 A:middle
And your app icons
start jiggling.

00:09:30.926 --> 00:09:32.296 A:middle
You guys know why it
starts jiggling, right?

00:09:32.906 --> 00:09:41.186 A:middle
'Cause they're scared,
they're going to get deleted.

00:09:41.186 --> 00:09:41.331 A:middle
[ Laughter ]

00:09:41.331 --> 00:09:41.476 A:middle
[ Applause ]

00:09:41.476 --> 00:09:43.556 A:middle
And then they're going to
click that X and they're going

00:09:43.556 --> 00:09:45.966 A:middle
to delete it and never
to download it again.

00:09:45.966 --> 00:09:47.046 A:middle
So don't let it happen to you.

00:09:47.516 --> 00:09:48.336 A:middle
How do you do it?

00:09:48.806 --> 00:09:49.486 A:middle
It's so simple.

00:09:49.586 --> 00:09:51.286 A:middle
Provide an opt-in method.

00:09:51.776 --> 00:09:54.416 A:middle
Tell them or explain the value
of this feature and let them opt

00:09:54.416 --> 00:09:55.676 A:middle
in like we did with our toggle.

00:09:56.226 --> 00:09:58.066 A:middle
You might be scared, "Oh then
nobody is going to use it."

00:09:58.126 --> 00:10:00.146 A:middle
Believe me, if you explain
the value, people don't want

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.146 --> 00:10:01.036 A:middle
to think about these things.

00:10:01.036 --> 00:10:01.976 A:middle
They want to be reminded.

00:10:02.466 --> 00:10:03.986 A:middle
So, explain the value
and they'll opt

00:10:03.986 --> 00:10:05.016 A:middle
in then you know they want it.

00:10:05.566 --> 00:10:07.886 A:middle
Provide this with the
correct moment in the flow.

00:10:07.886 --> 00:10:10.796 A:middle
In our flow, remember, you
just checked your eligibility,

00:10:10.796 --> 00:10:13.256 A:middle
you gave us all the information
then we asked you to opt in.

00:10:13.446 --> 00:10:14.436 A:middle
It's a good time.

00:10:15.006 --> 00:10:17.816 A:middle
And provide some settings where
users can turn this on or off

00:10:17.996 --> 00:10:19.816 A:middle
and we'll talk more about
that in the next slide.

00:10:20.396 --> 00:10:21.016 A:middle
So do not spam.

00:10:21.656 --> 00:10:21.916 A:middle
Thank you.

00:10:22.836 --> 00:10:27.036 A:middle
OK. So, In-App Notification
settings, I'm not talking

00:10:27.036 --> 00:10:28.116 A:middle
about the settings app here,

00:10:28.116 --> 00:10:30.056 A:middle
I'm talking about settings
inside your own app.

00:10:30.606 --> 00:10:33.186 A:middle
For example, in the Apple
Store app, in our More tab,

00:10:33.226 --> 00:10:34.716 A:middle
we've got this notification
section.

00:10:34.886 --> 00:10:37.346 A:middle
You tap that, you're going
to see something like this.

00:10:37.656 --> 00:10:39.206 A:middle
This is all the notifications
we do.

00:10:39.656 --> 00:10:42.816 A:middle
The upgrade ones, we talk about
on top, then order status,

00:10:42.816 --> 00:10:45.016 A:middle
when does your order ship,
when is it delivering.

00:10:45.526 --> 00:10:47.576 A:middle
Reservations, when is your
Genius Bar reservation

00:10:47.576 --> 00:10:47.966 A:middle
coming up?

00:10:48.436 --> 00:10:51.146 A:middle
And then location-based
alerts which we'll talk

00:10:51.146 --> 00:10:53.196 A:middle
about in the next section
in Storefront Pickup.

00:10:54.046 --> 00:10:55.736 A:middle
So, this is great if
you have many types

00:10:55.736 --> 00:10:56.806 A:middle
of Push Notifications.

00:10:56.806 --> 00:10:59.496 A:middle
If you have only one,
maybe you don't need this.

00:10:59.496 --> 00:11:01.906 A:middle
But if you have many types, this
is a great way to handle it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:02.476 --> 00:11:08.236 A:middle
Why? Because it reduces
the chance

00:11:08.546 --> 00:11:10.066 A:middle
that a user will
completely turn off Push.

00:11:10.066 --> 00:11:12.616 A:middle
If they're annoyed by one
of this, they might turn

00:11:12.616 --> 00:11:14.106 A:middle
that one off and keep
the other ones on.

00:11:14.106 --> 00:11:15.736 A:middle
So, it's pretty obvious,
pretty simple,

00:11:15.736 --> 00:11:18.416 A:middle
a lot of people don't do it
but this will be the best way

00:11:18.416 --> 00:11:23.166 A:middle
to keep those pushes
that people want on.

00:11:23.426 --> 00:11:26.926 A:middle
OK. Also, consider the time
of day, very important.

00:11:28.066 --> 00:11:30.056 A:middle
So, don't send the push in
the middle of the night,

00:11:30.056 --> 00:11:31.076 A:middle
don't wake somebody up.

00:11:31.136 --> 00:11:31.866 A:middle
Don't disturb them.

00:11:32.916 --> 00:11:34.226 A:middle
Be polite basically.

00:11:34.226 --> 00:11:36.266 A:middle
This is also going
to feel like spamming

00:11:36.266 --> 00:11:37.516 A:middle
if you send it at
the wrong time.

00:11:37.926 --> 00:11:40.736 A:middle
So, consider the time of
day, consider when is best

00:11:40.736 --> 00:11:43.256 A:middle
to send this, and also,
think about time zones.

00:11:43.256 --> 00:11:45.306 A:middle
If you have a worldwide
app, you want to think

00:11:45.306 --> 00:11:46.856 A:middle
about time zones there
or even in the US,

00:11:46.856 --> 00:11:47.886 A:middle
you have multiple time zones.

00:11:49.236 --> 00:11:50.096 A:middle
One thing I recommend you

00:11:50.096 --> 00:11:52.946 A:middle
to do is create a Do Not Disturb
Time window on your server-side.

00:11:53.046 --> 00:11:54.346 A:middle
Maybe put it in your
Push Engine.

00:11:54.946 --> 00:11:57.786 A:middle
Users have the do not
disturb setting on their phone

00:11:58.226 --> 00:12:00.296 A:middle
but they might not use that
so you cannot rely on it.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:00.726 --> 00:12:04.246 A:middle
So in this way, maybe in your
Push Engine, if there's a bug

00:12:04.246 --> 00:12:06.816 A:middle
or something and a request comes
in your push engine at 3 a.m.,

00:12:07.156 --> 00:12:08.006 A:middle
"Hey, send this push."

00:12:08.406 --> 00:12:10.286 A:middle
Your Push Engine can be inactive

00:12:10.286 --> 00:12:12.366 A:middle
and queue those requests
using some queuing system.

00:12:13.006 --> 00:12:14.546 A:middle
Then when it's time
to send pushes again,

00:12:14.846 --> 00:12:16.156 A:middle
the Push Engine becomes active

00:12:16.596 --> 00:12:18.236 A:middle
and it starts consuming
from the queue.

00:12:18.476 --> 00:12:20.096 A:middle
It's kind of a last
minute safety check

00:12:20.336 --> 00:12:21.146 A:middle
on your server-side.

00:12:21.316 --> 00:12:23.186 A:middle
Just the recommendation
we found pretty useful.

00:12:24.596 --> 00:12:27.286 A:middle
Final tip and trick I
wanted to talk about is

00:12:27.286 --> 00:12:31.046 A:middle
to be a good citizen and please
clean up the dead push tokens.

00:12:31.376 --> 00:12:33.836 A:middle
Users might wipe the phone,
they might delete your app,

00:12:33.896 --> 00:12:36.486 A:middle
they might turn off
pushes for your app

00:12:36.616 --> 00:12:38.686 A:middle
so then these tokens
are no longer valid.

00:12:39.346 --> 00:12:41.686 A:middle
OK? And you can send pushes
to them, nothing is going

00:12:41.686 --> 00:12:44.716 A:middle
to happen except you're going to
clog the system for valid pushes

00:12:44.716 --> 00:12:45.636 A:middle
and valid push tokens.

00:12:46.386 --> 00:12:47.756 A:middle
So please clean up.

00:12:47.756 --> 00:12:50.846 A:middle
Very easy, query the Apple Push
Notification Feedback Service

00:12:51.366 --> 00:12:53.566 A:middle
as there's where you'll
query it using SSL.

00:12:53.956 --> 00:12:55.506 A:middle
You'll get a list
of push tokens.

00:12:56.196 --> 00:12:57.466 A:middle
The list will be
cleared when you get it.

00:12:57.466 --> 00:13:01.846 A:middle
And then you parse the list
and just stop using them.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:01.986 --> 00:13:03.306 A:middle
Usually that means
you delete them

00:13:03.306 --> 00:13:05.086 A:middle
on your data store or whatever.

00:13:05.406 --> 00:13:07.046 A:middle
So please, be a good citizen.

00:13:07.626 --> 00:13:11.016 A:middle
And that's it, that's the
time before the event.

00:13:11.516 --> 00:13:13.816 A:middle
And now, the events arrived,
it's here, it's today

00:13:13.816 --> 00:13:15.256 A:middle
and users are arriving.

00:13:15.726 --> 00:13:16.296 A:middle
What do you do?

00:13:16.786 --> 00:13:17.436 A:middle
Welcome them.

00:13:17.966 --> 00:13:22.026 A:middle
And in our timeline, we
are now at the event.

00:13:22.256 --> 00:13:23.446 A:middle
We're going to welcome
our users.

00:13:24.686 --> 00:13:26.866 A:middle
When I say welcome them,
I don't mean just roll

00:13:26.866 --> 00:13:27.686 A:middle
out the welcome mat.

00:13:28.746 --> 00:13:30.286 A:middle
I mean roll out the red carpet.

00:13:30.626 --> 00:13:31.896 A:middle
Make them feel like a star.

00:13:33.206 --> 00:13:34.406 A:middle
How do you do that?

00:13:35.196 --> 00:13:38.316 A:middle
I'll show you with the feature
we call Storefront Pickup.

00:13:38.416 --> 00:13:39.576 A:middle
No setting the scene now,

00:13:39.576 --> 00:13:41.066 A:middle
I'm just going straight
into this one.

00:13:42.686 --> 00:13:45.256 A:middle
Back to the Upper West Side
Apple Store and meet John.

00:13:46.136 --> 00:13:47.816 A:middle
John made an order with
the Apple Store app.

00:13:48.056 --> 00:13:50.346 A:middle
He's going to pick it up in
the Upper West Side store.

00:13:50.346 --> 00:13:51.596 A:middle
He wanted to pick
it up in the store.

00:13:52.746 --> 00:13:53.666 A:middle
When he made this order,

00:13:54.116 --> 00:13:56.746 A:middle
the Apple Store app created a
virtual perimeter, virtual fence

00:13:56.746 --> 00:13:59.016 A:middle
or region around the
Upper West Side store.

00:13:59.926 --> 00:14:01.666 A:middle
And we told iOS Core
Location, "Hey,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:01.666 --> 00:14:04.556 A:middle
when John crosses this
region even if our app is

00:14:04.556 --> 00:14:07.506 A:middle
in the background or the phone
is in the pocket, wake us up,

00:14:07.696 --> 00:14:08.476 A:middle
we want to do something."

00:14:09.266 --> 00:14:11.736 A:middle
So when John crosses it,
Core Location detects that,

00:14:12.366 --> 00:14:14.986 A:middle
wakes us up, we take a
look if John has an order

00:14:15.286 --> 00:14:16.836 A:middle
and then we pop an alert.

00:14:17.356 --> 00:14:19.416 A:middle
And John sees this says "Hey
John, you're near the store,

00:14:19.776 --> 00:14:20.706 A:middle
there's an order for you here.

00:14:20.706 --> 00:14:21.696 A:middle
Do you want to pick it up?"

00:14:22.636 --> 00:14:23.526 A:middle
John says, "Yes."

00:14:24.406 --> 00:14:25.866 A:middle
And then we tell him, "OK,

00:14:25.906 --> 00:14:27.916 A:middle
one of our employees is
getting your order ready.

00:14:28.476 --> 00:14:29.186 A:middle
Just come on over."

00:14:29.596 --> 00:14:31.276 A:middle
And we send a signal to
the back of the house

00:14:31.556 --> 00:14:33.556 A:middle
where they start putting it
in a bag and getting it ready.

00:14:34.816 --> 00:14:36.436 A:middle
As John approaches
right on the front,

00:14:36.966 --> 00:14:38.316 A:middle
he's going to get
another notification.

00:14:38.636 --> 00:14:40.906 A:middle
And it's going to say, "Hey,
one of our employees, Hillary,

00:14:41.406 --> 00:14:44.986 A:middle
has your product, has your
order, and she wants to meet you

00:14:44.986 --> 00:14:47.076 A:middle
up at some location
like the entrance."

00:14:47.466 --> 00:14:50.806 A:middle
And right as John--
and so John swipes that

00:14:51.106 --> 00:14:52.086 A:middle
and goes into the app.

00:14:52.086 --> 00:14:53.256 A:middle
We'll show him a
picture of Hillary.

00:14:53.256 --> 00:14:55.456 A:middle
So, you know who she is
and can recognize her.

00:14:56.066 --> 00:14:59.156 A:middle
And then as John enters
right around the entrance,

00:14:59.696 --> 00:15:01.086 A:middle
Hillary will materialize.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:01.086 --> 00:15:02.186 A:middle
More importantly, John's

00:15:02.186 --> 00:15:02.776 A:middle
[ Laughter ]

00:15:02.776 --> 00:15:04.926 A:middle
order will materialize, OK?

00:15:05.436 --> 00:15:06.876 A:middle
And it's there for John.

00:15:06.876 --> 00:15:08.556 A:middle
Now John didn't have
to go in line.

00:15:08.556 --> 00:15:09.846 A:middle
He didn't have to ask for help.

00:15:09.846 --> 00:15:11.166 A:middle
He didn't have to be bothered.

00:15:11.166 --> 00:15:14.706 A:middle
He was just coming to the store,
he got welcomed and he's there

00:15:14.706 --> 00:15:16.056 A:middle
for his important event to pick

00:15:16.056 --> 00:15:17.746 A:middle
up that phone he got
at the best price.

00:15:18.666 --> 00:15:20.486 A:middle
And there it is, that
Storefront Pickup.

00:15:21.676 --> 00:15:23.436 A:middle
So think about in
your-- thank you.

00:15:23.936 --> 00:15:27.746 A:middle
[ Applause ]

00:15:28.246 --> 00:15:30.636 A:middle
So, think about in your own
apps what you can do here.

00:15:30.636 --> 00:15:32.626 A:middle
Maybe you have a
restaurant, you can say, "Hey,

00:15:32.626 --> 00:15:34.846 A:middle
we've detected you've come
to the restaurant, welcome.

00:15:34.976 --> 00:15:36.806 A:middle
Go to the bar, we're going
to get your table ready."

00:15:36.806 --> 00:15:38.876 A:middle
And then we'll buzz you
when your table is ready

00:15:38.876 --> 00:15:40.206 A:middle
and your phone can
buzz them again.

00:15:41.036 --> 00:15:42.376 A:middle
You can eliminate those plastic,

00:15:42.376 --> 00:15:44.546 A:middle
you know those pager things
they have at the restaurant,

00:15:44.546 --> 00:15:46.006 A:middle
you can eliminate
that with your app.

00:15:46.386 --> 00:15:48.616 A:middle
So, pretty cool stuff
you can do with it.

00:15:48.816 --> 00:15:50.896 A:middle
You can welcome people to
the airport and say, "Hey,

00:15:50.896 --> 00:15:52.406 A:middle
you know-- " I don't
know if you've ever flown

00:15:52.716 --> 00:15:54.586 A:middle
from an airport like
SFO like on Friday

00:15:54.586 --> 00:15:56.346 A:middle
at 5 or 6, it's very bad."

00:15:56.526 --> 00:15:58.196 A:middle
So, you can tell him, "Hey,
here are the security lines

00:15:58.196 --> 00:15:59.806 A:middle
that are open and
here is the wait time

00:15:59.806 --> 00:16:01.016 A:middle
in each line," for example.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:01.596 --> 00:16:03.376 A:middle
So, a lot of useful things
you can do with this.

00:16:04.596 --> 00:16:05.986 A:middle
What is the technology
behind this?

00:16:06.386 --> 00:16:07.626 A:middle
It's called Region Monitoring.

00:16:07.626 --> 00:16:11.426 A:middle
This is a feature
of Core Location.

00:16:11.626 --> 00:16:14.046 A:middle
You basically create regions,
latitude and longitude

00:16:14.416 --> 00:16:16.206 A:middle
and you give it a radius, right?

00:16:16.206 --> 00:16:19.066 A:middle
And then you call this API,
start monitoring for region

00:16:19.366 --> 00:16:21.296 A:middle
and then your app can
go in the background.

00:16:21.296 --> 00:16:24.786 A:middle
Core Location will monitor
in a very low power mode.

00:16:26.266 --> 00:16:29.076 A:middle
When Core Location detects
that you've crossed a boundary,

00:16:29.076 --> 00:16:30.886 A:middle
you're at the region,
you're then--

00:16:31.206 --> 00:16:32.306 A:middle
your app will wake
up and you're going

00:16:32.306 --> 00:16:34.056 A:middle
to handle these delegates
that it will call.

00:16:35.516 --> 00:16:37.266 A:middle
Finally, if you find the
reason, there's a reason

00:16:37.266 --> 00:16:39.926 A:middle
to wake the user up, they
have an order or whatever,

00:16:40.576 --> 00:16:42.426 A:middle
you then post the local
notification using these

00:16:42.426 --> 00:16:42.886 A:middle
two methods.

00:16:42.886 --> 00:16:45.226 A:middle
You can schedule one for
later, on the bottom one,

00:16:45.226 --> 00:16:46.726 A:middle
you can present one right now.

00:16:47.536 --> 00:16:48.176 A:middle
That's it.

00:16:48.856 --> 00:16:51.756 A:middle
That's all you need to do for a
pretty magical feature, right?

00:16:52.146 --> 00:16:53.376 A:middle
So, Region Monitoring.

00:16:55.036 --> 00:16:59.436 A:middle
Now, tips, tricks, and best
practices, very important.

00:16:59.436 --> 00:17:03.556 A:middle
We want to keep the battery
full so minimize battery drain.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:04.286 --> 00:17:05.846 A:middle
When you're woken
up by Core Location,

00:17:05.846 --> 00:17:08.786 A:middle
you're running in
the background.

00:17:08.786 --> 00:17:10.996 A:middle
And you know and it's
not a secret that running

00:17:10.996 --> 00:17:13.396 A:middle
in the background and especially
calling the server-side,

00:17:13.596 --> 00:17:15.455 A:middle
network call is going
to use up power.

00:17:15.776 --> 00:17:17.726 A:middle
If you do this too
much, users will notice.

00:17:17.726 --> 00:17:19.896 A:middle
They will notice your battery--
They will isolate your app

00:17:19.896 --> 00:17:21.185 A:middle
and they will do that thing,

00:17:21.185 --> 00:17:23.915 A:middle
that story I told you
deleting it, right?

00:17:24.326 --> 00:17:25.866 A:middle
So, what to do?

00:17:26.016 --> 00:17:28.866 A:middle
Just-- you know, it's obvious
but minimize the background code

00:17:28.866 --> 00:17:30.816 A:middle
and wait and you employ
some safety checks.

00:17:31.536 --> 00:17:33.396 A:middle
I'll give you an example
or/and caching as well.

00:17:33.396 --> 00:17:34.336 A:middle
I'll give you an example.

00:17:34.876 --> 00:17:37.136 A:middle
You have a restaurant at the
mall or at the shop or whatever

00:17:37.136 --> 00:17:39.206 A:middle
and the user walk-in
in the mall,

00:17:39.206 --> 00:17:41.376 A:middle
it keeps crossing your fence
and the app is waking up,

00:17:41.376 --> 00:17:43.916 A:middle
he doesn't even know
it's waking up.

00:17:44.256 --> 00:17:47.416 A:middle
If you've woken up, call the
server, you got the server data

00:17:47.416 --> 00:17:50.016 A:middle
and you woken up 5, 10 minutes
later, even an hour later,

00:17:50.416 --> 00:17:52.076 A:middle
maybe that data is still
fresh and you don't need

00:17:52.076 --> 00:17:53.716 A:middle
to call again so
you save on that.

00:17:54.156 --> 00:17:57.336 A:middle
And then employ some time
stamps and things like that.

00:17:57.336 --> 00:17:59.856 A:middle
Maybe if you were
woken up 5 minutes ago

00:17:59.896 --> 00:18:02.676 A:middle
or 5 minutes before that, you
don't need to do anything again.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:02.676 --> 00:18:04.156 A:middle
You've done the work you
need to do for the day

00:18:04.156 --> 00:18:05.806 A:middle
and you can just
shut down right away.

00:18:06.286 --> 00:18:09.156 A:middle
And maybe have some upper limit
of how long you can be awake

00:18:09.496 --> 00:18:11.996 A:middle
within a given day and
enforce that to make sure

00:18:11.996 --> 00:18:14.966 A:middle
that the battery doesn't drain.

00:18:15.136 --> 00:18:17.896 A:middle
Finally, I know you love
to do this, but finally,

00:18:17.896 --> 00:18:19.716 A:middle
you need to do significant
testing on features

00:18:19.716 --> 00:18:22.346 A:middle
like this both in instruments
and automated testing

00:18:22.866 --> 00:18:25.216 A:middle
but also realize nothing
will replace this --

00:18:25.476 --> 00:18:27.686 A:middle
so, load you apps up on the
phone, put in your pocket,

00:18:27.686 --> 00:18:30.086 A:middle
walk around the mall or
whatever your use case is

00:18:30.276 --> 00:18:31.266 A:middle
and actually test this.

00:18:31.706 --> 00:18:34.126 A:middle
Make sure it's not draining.

00:18:34.256 --> 00:18:37.216 A:middle
OK, related topic is privacy.

00:18:37.916 --> 00:18:39.746 A:middle
When you're monitoring
location or regions,

00:18:40.086 --> 00:18:41.326 A:middle
this arrow is going
to appear, right?

00:18:41.356 --> 00:18:42.596 A:middle
The Core Location arrow appears

00:18:42.596 --> 00:18:44.216 A:middle
on the top right
of users' devices.

00:18:44.986 --> 00:18:45.766 A:middle
They notice this thing.

00:18:46.336 --> 00:18:49.736 A:middle
And when they notice that
they think often two things.

00:18:50.176 --> 00:18:51.556 A:middle
"Hey, Mr. App, you
know where I am."

00:18:51.706 --> 00:18:52.966 A:middle
Why? Why do you need to know?

00:18:53.806 --> 00:18:56.976 A:middle
Or you're draining
my battery, right?

00:18:56.976 --> 00:18:58.506 A:middle
You're constantly
monitoring locations

00:18:58.506 --> 00:18:59.736 A:middle
so you're probably
draining my battery.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.506 --> 00:19:01.536 A:middle
So what do you do about this?

00:19:02.726 --> 00:19:05.026 A:middle
First one is simple, be
upfront with your users,

00:19:05.026 --> 00:19:08.206 A:middle
just like the opt-in method we
did with Push Notifications.

00:19:08.736 --> 00:19:09.846 A:middle
Ask them to opt in to this.

00:19:09.896 --> 00:19:11.606 A:middle
Tell them why you're
monitoring location,

00:19:11.606 --> 00:19:12.966 A:middle
explain the value of this.

00:19:13.386 --> 00:19:15.916 A:middle
And believe me, if you
explain the value well,

00:19:15.916 --> 00:19:16.736 A:middle
they will opt in.

00:19:17.026 --> 00:19:18.896 A:middle
So they're not surprised
when they see that arrow.

00:19:19.856 --> 00:19:22.716 A:middle
And then other than the other
battery savings stuff we talked

00:19:22.716 --> 00:19:25.496 A:middle
about, monitor location
only as needed.

00:19:25.496 --> 00:19:26.766 A:middle
Minimize that arrow.

00:19:26.966 --> 00:19:28.936 A:middle
If you don't need to
monitor locations, do not.

00:19:29.676 --> 00:19:30.716 A:middle
There are three things
you can do.

00:19:30.716 --> 00:19:32.496 A:middle
First one is the solid arrow.

00:19:33.106 --> 00:19:35.326 A:middle
That means you're monitoring
a significant location change

00:19:35.326 --> 00:19:36.726 A:middle
when your app is in background.

00:19:37.396 --> 00:19:38.926 A:middle
It means if a user
moved all the way

00:19:38.926 --> 00:19:40.776 A:middle
over there significantly,
you'll wake up.

00:19:40.776 --> 00:19:42.246 A:middle
And so you'll wake
up quite often.

00:19:42.576 --> 00:19:44.426 A:middle
If you really need
to do that, do that.

00:19:44.426 --> 00:19:45.526 A:middle
Maybe you're a Sports app

00:19:45.526 --> 00:19:46.996 A:middle
and you're tracking how
far they're running,

00:19:47.336 --> 00:19:48.106 A:middle
you might need to do that.

00:19:48.296 --> 00:19:49.146 A:middle
But if you don't need to,

00:19:49.146 --> 00:19:50.896 A:middle
if you're just monitoring
static locations

00:19:50.896 --> 00:19:53.976 A:middle
like we are then use a fence
and that will use less power.

00:19:54.486 --> 00:19:56.736 A:middle
And then if you don't
need to monitor it, don't.

00:19:57.376 --> 00:20:00.576 A:middle
So if you don't have an order
with the Apple Store app,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:01.016 --> 00:20:02.056 A:middle
we're not going to
fence anything

00:20:02.116 --> 00:20:04.196 A:middle
and you won't see any
arrow, and users notice this

00:20:04.706 --> 00:20:07.196 A:middle
and they appreciate that you
monitor location as needed.

00:20:07.596 --> 00:20:11.786 A:middle
Finally, a tip for you guys
who have many locations,

00:20:11.786 --> 00:20:13.096 A:middle
maybe have a chain of stores.

00:20:13.596 --> 00:20:17.036 A:middle
Remember, Core Location allows
you only 20 regions to monitor.

00:20:17.736 --> 00:20:19.676 A:middle
So you might want to be smart
about how you monitor them,

00:20:19.866 --> 00:20:22.766 A:middle
if you need to monitor
all at the same time.

00:20:22.766 --> 00:20:25.706 A:middle
So, when you start, check the
current location of the user,

00:20:25.936 --> 00:20:27.356 A:middle
monitor those around the user.

00:20:27.916 --> 00:20:29.496 A:middle
Maybe provide some
kind of zip code

00:20:29.496 --> 00:20:32.816 A:middle
or address thing they can input,
and then if they're traveling,

00:20:32.816 --> 00:20:34.126 A:middle
you can fence another area.

00:20:35.106 --> 00:20:36.266 A:middle
Then you're going to
need to update this.

00:20:36.326 --> 00:20:37.696 A:middle
For example, if they moved house

00:20:37.696 --> 00:20:40.586 A:middle
or if they're traveling
somewhere you update

00:20:40.586 --> 00:20:42.346 A:middle
and you update when
the app is awake.

00:20:42.616 --> 00:20:44.416 A:middle
When the app is awake
battery is being used anyway,

00:20:44.416 --> 00:20:45.746 A:middle
that's screen is
being used, right?

00:20:45.746 --> 00:20:48.246 A:middle
So you can do it then and
not use much more battery.

00:20:48.246 --> 00:20:50.846 A:middle
And if you really need
to, when the app is

00:20:50.846 --> 00:20:52.756 A:middle
in the background you
can update your regions

00:20:52.756 --> 00:20:54.246 A:middle
on a significant
location change.

00:20:54.416 --> 00:20:57.056 A:middle
But remember, that's the solid
arrow and you only do this

00:20:57.056 --> 00:21:00.486 A:middle
if you need to do this.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:01.046 --> 00:21:03.256 A:middle
OK, so we've talked
about, you know,

00:21:03.256 --> 00:21:04.436 A:middle
telling users about events.

00:21:04.536 --> 00:21:06.616 A:middle
We've talked about
welcoming users to events.

00:21:07.676 --> 00:21:10.166 A:middle
Now the users at your event,
at your location enjoying

00:21:10.646 --> 00:21:12.526 A:middle
and spending time at your
event, what can you do

00:21:12.726 --> 00:21:13.816 A:middle
to enrich the experience?

00:21:14.216 --> 00:21:17.556 A:middle
We're coming towards the
end now of our timeline

00:21:17.846 --> 00:21:21.246 A:middle
and the user is spending
time at the location.

00:21:21.246 --> 00:21:23.996 A:middle
So, let's give them something
they will never forget.

00:21:24.846 --> 00:21:28.536 A:middle
Let's make them-- so,
OK, don't scare them

00:21:29.006 --> 00:21:31.116 A:middle
but I'm saying give them
a memorable experience

00:21:31.116 --> 00:21:33.476 A:middle
and let them get immersed
in your environment.

00:21:33.476 --> 00:21:35.136 A:middle
How you're going to do that?

00:21:36.136 --> 00:21:37.456 A:middle
I'll show you with
another feature

00:21:37.456 --> 00:21:38.326 A:middle
from the Apple Store app.

00:21:38.416 --> 00:21:40.286 A:middle
We call this In-Store Mode.

00:21:41.696 --> 00:21:45.506 A:middle
So, this is the Apple Store app
on a normal day, featured tab,

00:21:45.506 --> 00:21:46.646 A:middle
you got your featured product,

00:21:46.646 --> 00:21:49.886 A:middle
some marketing maybe
Father's Day, alright?

00:21:50.796 --> 00:21:54.276 A:middle
But when you approach a retail
store, the Upper West Side,

00:21:54.516 --> 00:21:56.156 A:middle
when you approach the
retail store with the app on

00:21:56.156 --> 00:21:58.176 A:middle
or you turn that-- bring the app

00:21:58.226 --> 00:22:02.146 A:middle
to foreground inside the retail
store, we're going to detect

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:02.206 --> 00:22:03.886 A:middle
that you're there
through Core Location

00:22:03.886 --> 00:22:05.126 A:middle
and will bring up this other UI.

00:22:05.996 --> 00:22:08.086 A:middle
We call this In-Store
Mode and it takes over.

00:22:09.486 --> 00:22:11.606 A:middle
And it tells you what's
happening now and it's all

00:22:11.606 --> 00:22:12.926 A:middle
about that location you're at.

00:22:13.326 --> 00:22:14.586 A:middle
On the top, it tells
you where you are

00:22:14.586 --> 00:22:16.686 A:middle
in case you didn't
know, Upper West Side.

00:22:17.276 --> 00:22:19.566 A:middle
And then from the bottom,
just got some useful things,

00:22:19.566 --> 00:22:23.216 A:middle
first is the current marketing
or events that are going on,

00:22:23.216 --> 00:22:24.196 A:middle
you can swipe through those.

00:22:24.196 --> 00:22:26.796 A:middle
You can get in to the
virtual queue, get help,

00:22:26.796 --> 00:22:29.016 A:middle
you can see who was in-- how
many people are in the queue.

00:22:29.886 --> 00:22:32.666 A:middle
You can also get support in book
a Genius Bar Appointment right

00:22:32.666 --> 00:22:35.366 A:middle
there and probably
you can use EasyPay,

00:22:35.366 --> 00:22:37.106 A:middle
a service that's only
available in the store

00:22:37.366 --> 00:22:38.696 A:middle
where you take a
product from the shelf,

00:22:39.296 --> 00:22:41.276 A:middle
with your Apple Store
app, you scan the barcode

00:22:41.276 --> 00:22:43.786 A:middle
with your camera, put in
your Apple ID password

00:22:44.096 --> 00:22:44.886 A:middle
and you bought the product.

00:22:44.886 --> 00:22:46.896 A:middle
And you walk out with
a product in your hand

00:22:46.896 --> 00:22:48.136 A:middle
and the receipt on your phone.

00:22:49.396 --> 00:22:53.126 A:middle
So, these are some very useful
services and information

00:22:53.276 --> 00:22:56.076 A:middle
that we offer right at the
store and our In-Store Mode

00:22:56.076 --> 00:22:57.666 A:middle
to enhance the user's
experience there.

00:22:58.196 --> 00:23:01.486 A:middle
The technology behind this,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:01.546 --> 00:23:03.986 A:middle
this In-Location Mode
is again Core Location

00:23:04.356 --> 00:23:06.306 A:middle
and we're using it now when
the app is in the foreground

00:23:06.616 --> 00:23:08.276 A:middle
and we just trying to
get the current location.

00:23:08.616 --> 00:23:09.826 A:middle
It's an asynchronous process

00:23:09.826 --> 00:23:12.746 A:middle
so your call start updating
location and you get a callback

00:23:12.746 --> 00:23:14.626 A:middle
"did update locations"
and then you handle that.

00:23:15.356 --> 00:23:17.206 A:middle
So now, you know where
the user is and you know

00:23:17.206 --> 00:23:18.656 A:middle
where your location
of interest is.

00:23:19.206 --> 00:23:20.126 A:middle
Compare the distance.

00:23:20.936 --> 00:23:22.976 A:middle
And if it's within a
threshold, some kind of radius

00:23:22.976 --> 00:23:25.846 A:middle
where you consider someone
in the location, you pop open

00:23:25.846 --> 00:23:28.836 A:middle
that the special UI,
that's where that location.

00:23:29.446 --> 00:23:31.096 A:middle
It's that simple.

00:23:31.836 --> 00:23:33.186 A:middle
One thing I do want
to also point out,

00:23:33.306 --> 00:23:36.646 A:middle
when you use Core Location you
can adjust the desired accuracy.

00:23:36.646 --> 00:23:38.486 A:middle
This is being a good
citizen again.

00:23:38.486 --> 00:23:39.456 A:middle
So, if you're miles and miles

00:23:39.456 --> 00:23:42.216 A:middle
and miles away maybe tell Core
Location, "Hey, you don't need

00:23:42.216 --> 00:23:44.056 A:middle
to monitor with such
high accuracy.

00:23:44.646 --> 00:23:48.866 A:middle
You can monitor less accurately
and when it comes close maybe

00:23:48.866 --> 00:23:50.106 A:middle
to the mall where
your restaurant is,

00:23:50.486 --> 00:23:52.006 A:middle
start monitoring
with more accuracy.

00:23:52.516 --> 00:23:53.916 A:middle
So, it saves a little
battery with that.

00:23:55.026 --> 00:23:59.066 A:middle
So, In-Location Mode, now to
talk about some tips, tricks,

00:23:59.826 --> 00:24:01.096 A:middle
and best practices for this.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:02.356 --> 00:24:04.936 A:middle
The UI is going to depend
largely on your use case,

00:24:05.006 --> 00:24:06.446 A:middle
depends on your locations,
right?

00:24:06.996 --> 00:24:08.386 A:middle
So this is the one
that's relevant to us

00:24:08.386 --> 00:24:10.966 A:middle
but there are some generic
guidelines you should follow.

00:24:11.946 --> 00:24:14.266 A:middle
First, be distinctive,
be obvious.

00:24:14.506 --> 00:24:16.966 A:middle
This UI should catch their
eye and it should be different

00:24:16.966 --> 00:24:17.896 A:middle
in your day-to-day app.

00:24:18.416 --> 00:24:20.196 A:middle
Like this, you can't
miss this, right?

00:24:21.336 --> 00:24:22.986 A:middle
And then, focus the user.

00:24:22.986 --> 00:24:26.136 A:middle
Bring front and center, those
features and that information

00:24:26.136 --> 00:24:27.806 A:middle
that matters at that location.

00:24:28.296 --> 00:24:31.476 A:middle
So, we just really fo-- we take
everything else away and focus,

00:24:31.476 --> 00:24:33.856 A:middle
you know, what's happening
now and all the services

00:24:34.056 --> 00:24:35.476 A:middle
that are offered at the store.

00:24:36.806 --> 00:24:39.616 A:middle
Finally, make sure this
UI can be dismissed

00:24:39.916 --> 00:24:42.056 A:middle
and users can access the
normal functions of your app.

00:24:43.136 --> 00:24:44.886 A:middle
For us, there's the
top right corner,

00:24:45.026 --> 00:24:47.476 A:middle
there's the small white
arrow thing, you can see it?

00:24:47.726 --> 00:24:50.046 A:middle
If you tap that,
the UI will minimize

00:24:50.136 --> 00:24:51.826 A:middle
and then you can access
the other functions

00:24:52.136 --> 00:24:53.396 A:middle
of the store-- of the app.

00:24:54.586 --> 00:24:56.086 A:middle
And just to compare the UIs,

00:24:57.276 --> 00:24:58.726 A:middle
you can see just how
different they are

00:24:59.506 --> 00:25:02.886 A:middle
when you're in that location.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:03.006 --> 00:25:05.476 A:middle
Next up, remember,

00:25:05.476 --> 00:25:09.896 A:middle
your In-Location UI is probably
only relevant in your location.

00:25:10.436 --> 00:25:12.516 A:middle
Imagine if we expose,
get help, you know,

00:25:12.696 --> 00:25:16.086 A:middle
or the EasyPay stuff
at your house.

00:25:16.086 --> 00:25:18.776 A:middle
It's confusing and it
can result in bugs too.

00:25:18.996 --> 00:25:20.406 A:middle
So make sure your
UI is only there

00:25:20.406 --> 00:25:21.416 A:middle
when you're at the location.

00:25:22.796 --> 00:25:25.606 A:middle
So you get a monitor for
exit events and watch

00:25:25.606 --> 00:25:27.886 A:middle
and it'll have-- listen-- keep
listening to Core Location.

00:25:27.886 --> 00:25:30.066 A:middle
When the user has left the
location, dismiss the UI.

00:25:30.836 --> 00:25:35.456 A:middle
If the user is looking at your
In-Location UI and puts the app

00:25:35.456 --> 00:25:38.796 A:middle
to background, when they
start the app up again,

00:25:38.796 --> 00:25:40.656 A:middle
do a quick check, are
they still there or not

00:25:40.656 --> 00:25:42.426 A:middle
and then you can dismiss
the UI if they're gone.

00:25:43.086 --> 00:25:44.506 A:middle
There's one thing
to be very careful

00:25:44.506 --> 00:25:46.586 A:middle
about here, boundary conditions.

00:25:47.106 --> 00:25:49.866 A:middle
So, if that table is my
center of my location

00:25:49.866 --> 00:25:52.526 A:middle
and this is the boundary,
right, where I'm in store.

00:25:52.906 --> 00:25:54.576 A:middle
Maybe I'm right here
in Core Location says,

00:25:54.576 --> 00:25:57.046 A:middle
you're in the location,
I pop-up in the UI

00:25:57.046 --> 00:25:59.556 A:middle
and maybe I slightly move
and now I'm out the location.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.456 --> 00:26:01.996 A:middle
I close the UI, I slightly move,

00:26:01.996 --> 00:26:04.546 A:middle
I open the UI, it's
annoying, right?

00:26:04.916 --> 00:26:07.806 A:middle
So, you don't want to do
that flashing UI to the user.

00:26:07.806 --> 00:26:08.526 A:middle
So be careful.

00:26:09.036 --> 00:26:12.476 A:middle
The big tip I give you here
is when you detect user is

00:26:12.476 --> 00:26:16.426 A:middle
in that location, maybe you have
a 50-meter radius or something.

00:26:17.096 --> 00:26:18.396 A:middle
Relax those conditions.

00:26:18.586 --> 00:26:20.306 A:middle
Increase them, make
it 100 meters.

00:26:20.476 --> 00:26:23.306 A:middle
Or maybe it's also employed
with some minimum time that has

00:26:23.306 --> 00:26:26.246 A:middle
to pass or minimum distance
they have to move for you

00:26:26.246 --> 00:26:28.406 A:middle
to dismiss this In-Location
Mode.

00:26:29.006 --> 00:26:31.396 A:middle
What you've done is you made
the In-Location feature pretty

00:26:31.396 --> 00:26:35.286 A:middle
sticky and so when--
so that you are sure

00:26:35.356 --> 00:26:38.956 A:middle
that they have left the location
when they do, otherwise,

00:26:38.956 --> 00:26:40.006 A:middle
you'll get that flashing UI.

00:26:40.476 --> 00:26:42.066 A:middle
Anyway, if you can relax
it just a little bit,

00:26:42.126 --> 00:26:43.256 A:middle
it's not going to be a problem.

00:26:43.466 --> 00:26:45.366 A:middle
You're still not going to
pop this UI at the house

00:26:45.526 --> 00:26:46.316 A:middle
or something like that.

00:26:47.276 --> 00:26:51.616 A:middle
So important tips
to remember here.

00:26:51.836 --> 00:26:56.346 A:middle
OK, we talked about Core
Location and Region Monitoring

00:26:56.346 --> 00:27:00.036 A:middle
to welcome the user to an event
and to enrich their experience.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:00.936 --> 00:27:01.446 A:middle
What's next?

00:27:02.616 --> 00:27:03.486 A:middle
OK, you know, what's next but--

00:27:03.966 --> 00:27:06.096 A:middle
How can we take this to
the next level, right?

00:27:07.216 --> 00:27:07.746 A:middle
I'll show you.

00:27:07.946 --> 00:27:11.616 A:middle
With the new technology
from-- available in iOS 7,

00:27:11.756 --> 00:27:14.186 A:middle
it's a Core Location technology
and we call this iBeacons.

00:27:14.186 --> 00:27:17.236 A:middle
I'm going to show you some
examples where we use iBeacons.

00:27:17.736 --> 00:27:20.726 A:middle
I'm going to show you a little
bit about the technology.

00:27:21.716 --> 00:27:23.546 A:middle
And then we're going to show
you how to do this thing

00:27:23.546 --> 00:27:25.426 A:middle
for real in code in a demo.

00:27:27.076 --> 00:27:28.456 A:middle
Two things I want to talk about.

00:27:28.456 --> 00:27:29.626 A:middle
First is Region Monitoring,

00:27:29.626 --> 00:27:33.686 A:middle
the essence is the same except
there's one key difference

00:27:33.686 --> 00:27:35.836 A:middle
with iBeacons region
monitoring, accuracy.

00:27:36.926 --> 00:27:39.216 A:middle
See, instead of using the
traditional Cell Tower

00:27:39.216 --> 00:27:43.786 A:middle
Triangulation, GPS, and Wi-Fi,
when Core Location used to use

00:27:43.786 --> 00:27:46.176 A:middle
that to figure out if
you cross the region.

00:27:46.506 --> 00:27:48.976 A:middle
Now, Core Location tries
to look beacon signals.

00:27:49.776 --> 00:27:52.416 A:middle
Beacons are just hardware
you put out in your location

00:27:52.936 --> 00:27:54.786 A:middle
and they emit-- in
our case Bluetooth LE,

00:27:54.786 --> 00:27:55.946 A:middle
Bluetooth Low Energy.

00:27:56.866 --> 00:27:59.686 A:middle
And we quote-- and those
Bluetooth Low Energy signals can

00:27:59.686 --> 00:28:00.596 A:middle
have specific IDs.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:00.946 --> 00:28:04.226 A:middle
Your app can tell Core Location,
"Hey I'm interested in ID XYZ

00:28:04.226 --> 00:28:07.136 A:middle
or 123 this Bluetooth LE ID."

00:28:07.136 --> 00:28:09.806 A:middle
When Core Location senses
that ID, it wakes your app up

00:28:10.236 --> 00:28:12.826 A:middle
and you can do something.

00:28:12.936 --> 00:28:15.496 A:middle
So, let's see how these
works in one of our examples.

00:28:15.566 --> 00:28:17.376 A:middle
I want to put aside
the Apple Store app

00:28:17.376 --> 00:28:18.916 A:middle
and I wanted to use a museum.

00:28:19.166 --> 00:28:20.226 A:middle
We're now in Paris, France.

00:28:20.366 --> 00:28:22.716 A:middle
This is the Louvre
Museum in Paris,

00:28:22.716 --> 00:28:24.386 A:middle
France and we put
beacons on the entrance.

00:28:25.316 --> 00:28:30.096 A:middle
So, when a user approaches one
of these beacons with the phone

00:28:30.096 --> 00:28:32.396 A:middle
and our app is there, Core
Location detects that,

00:28:32.516 --> 00:28:35.446 A:middle
tells our app and we can throw
up an alert and say, "Hey,

00:28:35.446 --> 00:28:36.406 A:middle
welcome to the museum.

00:28:36.636 --> 00:28:37.876 A:middle
Your guide is ready
to meet you."

00:28:38.506 --> 00:28:42.246 A:middle
User swipes in and we
show pertinent information

00:28:42.246 --> 00:28:43.716 A:middle
and tell them where
the guide is.

00:28:44.766 --> 00:28:47.266 A:middle
Now, it's similar to the other
thing we talked about, right,

00:28:47.266 --> 00:28:50.256 A:middle
the other region monitoring but
the accuracy is the difference.

00:28:50.256 --> 00:28:51.616 A:middle
You can do this right
at the door.

00:28:52.176 --> 00:28:54.856 A:middle
Maybe if you have many
entrances to the museum

00:28:54.856 --> 00:28:56.296 A:middle
or whatever big location
you have,

00:28:56.646 --> 00:28:58.066 A:middle
each one can have
its own iBeacon

00:28:58.066 --> 00:29:00.276 A:middle
and it's a much tighter
accuracy.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:00.276 --> 00:29:01.966 A:middle
And you can know which
entrance the user is

00:29:02.516 --> 00:29:03.496 A:middle
for the guide to meet them.

00:29:04.406 --> 00:29:05.206 A:middle
Pretty powerful.

00:29:05.206 --> 00:29:08.236 A:middle
Now, you get see them
more interesting.

00:29:08.236 --> 00:29:11.386 A:middle
Let's talk about ranging.

00:29:12.136 --> 00:29:15.536 A:middle
In ranging, iBeacons
ranging enables the use cases

00:29:15.536 --> 00:29:16.846 A:middle
around micro-location.

00:29:17.446 --> 00:29:19.516 A:middle
We've cracked the nut on
macro-location, right?

00:29:19.886 --> 00:29:21.956 A:middle
We know you're in this room
maybe or in this building.

00:29:21.956 --> 00:29:22.916 A:middle
We know you're in a restaurant.

00:29:23.366 --> 00:29:25.296 A:middle
We know you're in
a movie theater.

00:29:25.296 --> 00:29:26.176 A:middle
We know you're in store.

00:29:26.176 --> 00:29:27.286 A:middle
We know you're in a museum.

00:29:28.046 --> 00:29:30.156 A:middle
But how cool would it
be if we know you're

00:29:30.156 --> 00:29:31.906 A:middle
at that table versus at the bar?

00:29:31.906 --> 00:29:35.286 A:middle
We know you're at that departure
gate versus this departure gate.

00:29:35.686 --> 00:29:36.956 A:middle
We know you're, you know,

00:29:37.026 --> 00:29:38.856 A:middle
in front of this shelf
instead of that shelf.

00:29:39.116 --> 00:29:42.136 A:middle
We know you're in front of this
painting instead of that statue.

00:29:42.756 --> 00:29:46.056 A:middle
And you can open up a bunch
of use cases there and only

00:29:46.056 --> 00:29:48.336 A:middle
and show some great
features that are pertinent

00:29:48.506 --> 00:29:50.596 A:middle
to the user's immediate
surroundings.

00:29:51.506 --> 00:29:52.746 A:middle
This is very powerful
and I'm going

00:29:52.746 --> 00:29:54.826 A:middle
to show you a very
simple example now.

00:29:55.806 --> 00:29:57.176 A:middle
But what's behind this is

00:29:57.176 --> 00:29:59.646 A:middle
that Core Location
not only sees a signal

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:00.096 --> 00:30:01.576 A:middle
but it can tell you how far away

00:30:02.026 --> 00:30:03.796 A:middle
from a signal you are
and that's the power.

00:30:04.186 --> 00:30:06.156 A:middle
This is estimated based
on signal strength

00:30:07.206 --> 00:30:09.836 A:middle
and you can get a range
basically immediate range,

00:30:09.986 --> 00:30:13.506 A:middle
10 centimeters away or so
or near range about two

00:30:13.506 --> 00:30:16.646 A:middle
to three meters away or far
range, and then you react--

00:30:16.736 --> 00:30:18.766 A:middle
your app react based on that.

00:30:19.496 --> 00:30:22.716 A:middle
So, at the museum, we've
heard of this painting right,

00:30:22.716 --> 00:30:23.906 A:middle
and we want to go
and look at it.

00:30:24.616 --> 00:30:27.556 A:middle
And we're there with our
Museum app exploring the museum

00:30:28.186 --> 00:30:31.456 A:middle
and we're constantly querying
Core Location ranging to see

00:30:31.456 --> 00:30:32.816 A:middle
if we're near an artwork

00:30:32.816 --> 00:30:35.146 A:middle
and we've put some
beacons at the artwork.

00:30:35.146 --> 00:30:38.136 A:middle
We put a Mona Lisa beacon
right on near the painting,

00:30:38.136 --> 00:30:40.886 A:middle
it's hidden, you can't see it
but it is emitting Bluetooth LE.

00:30:41.686 --> 00:30:44.776 A:middle
And as you approach with your
app, Core Location tells us

00:30:44.776 --> 00:30:47.206 A:middle
and we'll pop a special UI
to do with the Mona Lisa

00:30:47.206 --> 00:30:50.566 A:middle
and we'll tell information about
the Mona Lisa and the artist.

00:30:50.566 --> 00:30:53.286 A:middle
And whatever makes
sense for your use case,

00:30:53.286 --> 00:30:55.236 A:middle
we can expose some features
like, "Hey, do you want to buy,"

00:30:55.236 --> 00:30:57.746 A:middle
I don't know, "A print
or a Mona Lisa calendar?

00:30:58.046 --> 00:30:58.906 A:middle
Ship it to your house?"

00:30:59.506 --> 00:31:00.806 A:middle
Anything like that.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:01.556 --> 00:31:04.666 A:middle
So, pretty powerful stuff
right at the Mona Lisa.

00:31:04.666 --> 00:31:09.926 A:middle
And then if you walk away,
we'll dismiss that UI.

00:31:09.926 --> 00:31:13.736 A:middle
And you maybe you walk to the
Winged Victory statue also

00:31:13.736 --> 00:31:16.266 A:middle
at the Louvre Museum, and
when you're near by there,

00:31:16.266 --> 00:31:19.526 A:middle
you detect that beacon and you
show them a different UI to do

00:31:19.526 --> 00:31:21.886 A:middle
with the Winged Victory and you
show that information there.

00:31:22.386 --> 00:31:24.976 A:middle
Have you ever been
to the museum, right?

00:31:24.976 --> 00:31:26.076 A:middle
Have you ever had
those audio tours,

00:31:26.076 --> 00:31:27.566 A:middle
have you ever had
those Walkman things?

00:31:28.276 --> 00:31:30.616 A:middle
You know what, so you don't need
that anymore, no more Walkman.

00:31:30.976 --> 00:31:33.226 A:middle
You can just use your
app as a museum guide

00:31:33.696 --> 00:31:34.536 A:middle
with this kind of stuff.

00:31:35.226 --> 00:31:37.246 A:middle
A little bit about
the technology.

00:31:37.246 --> 00:31:38.516 A:middle
[ Applause ]

00:31:38.516 --> 00:31:38.886 A:middle
Thank you.

00:31:42.706 --> 00:31:43.576 A:middle
Thank you, I appreciate that.

00:31:43.646 --> 00:31:44.876 A:middle
A little bit about
the technology.

00:31:46.046 --> 00:31:48.246 A:middle
As I said at the basis
of this is Core Location,

00:31:48.246 --> 00:31:50.056 A:middle
monitoring Bluetooth LE signals

00:31:50.456 --> 00:31:53.156 A:middle
and it can just do
Region Monitoring as well

00:31:53.156 --> 00:31:55.506 A:middle
as it can do ranging
and detect distance.

00:31:55.736 --> 00:31:57.536 A:middle
And Region Monitoring
is when your app is

00:31:57.536 --> 00:31:58.886 A:middle
in the background usually.

00:31:59.526 --> 00:32:01.586 A:middle
But for ranging, your app
needs to be in the foreground

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:01.766 --> 00:32:04.296 A:middle
or you can do it scan
on wake which means

00:32:04.296 --> 00:32:06.356 A:middle
when you wake your phone up
even if your app is not on,

00:32:06.896 --> 00:32:08.436 A:middle
Core Location can do
a scan for you there.

00:32:09.046 --> 00:32:11.236 A:middle
It's pretty powerful and you
can bring up a notification.

00:32:11.686 --> 00:32:14.496 A:middle
What's a beacon, you might ask?

00:32:14.786 --> 00:32:15.696 A:middle
It can be a lot of things.

00:32:16.066 --> 00:32:17.866 A:middle
Various hardware
can act as a beacon.

00:32:17.986 --> 00:32:20.776 A:middle
You can buy this third
party program, program them

00:32:20.776 --> 00:32:24.346 A:middle
to emit whatever
Bluetooth signal but also,

00:32:24.396 --> 00:32:26.206 A:middle
your iOS devices can be beacons.

00:32:26.686 --> 00:32:30.496 A:middle
So your iPads, your iPhones with
the new iOS 7 SDK, Public SDK,

00:32:30.496 --> 00:32:33.346 A:middle
you can program them to emit
whatever signal you want

00:32:33.946 --> 00:32:36.276 A:middle
and you can do that
dynamically and programatically

00:32:36.746 --> 00:32:38.366 A:middle
and vary depending
on what's happening.

00:32:38.806 --> 00:32:40.116 A:middle
So, imagine at the
museum, the painting

00:32:40.156 --> 00:32:44.296 A:middle
or the statue has a sign
like an iPad is the sign,

00:32:44.296 --> 00:32:46.916 A:middle
like a smart sign, like we have
in our retail stores maybe,

00:32:47.476 --> 00:32:49.366 A:middle
and you could tell the
information about the painting

00:32:49.696 --> 00:32:51.906 A:middle
but if it's crowded, it's
still emitting Bluetooth LE

00:32:51.906 --> 00:32:55.866 A:middle
in on your app, we can detect
that and show them whatever UI.

00:32:56.506 --> 00:32:59.296 A:middle
So, pretty powerful that you can
use iOS devices for this too.

00:32:59.746 --> 00:33:02.076 A:middle
You can try it out right now.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:02.296 --> 00:33:05.256 A:middle
Finally, to remind you the big
advantage here is the accuracy

00:33:05.256 --> 00:33:07.036 A:middle
and that range that
distance awareness

00:33:07.326 --> 00:33:09.486 A:middle
that lets you do things
you could never do before.

00:33:10.446 --> 00:33:13.726 A:middle
And also worth mentioning,
one Beacon ID, you can have,

00:33:13.726 --> 00:33:15.816 A:middle
maybe have a chain and
you do want to fen--

00:33:15.846 --> 00:33:17.836 A:middle
you know, you want to fence
more than 20 locations.

00:33:18.316 --> 00:33:21.206 A:middle
Once Beacon ID can
represent-- can be one--

00:33:21.266 --> 00:33:22.286 A:middle
the beacons can be deployed

00:33:22.286 --> 00:33:23.916 A:middle
in all these locations
with the same ID.

00:33:23.916 --> 00:33:26.136 A:middle
So, one beacon ID
represents all your location

00:33:26.466 --> 00:33:28.596 A:middle
and you're no longer
bound by that limit of 20.

00:33:29.496 --> 00:33:30.866 A:middle
So, that's pretty powerful too.

00:33:31.366 --> 00:33:32.766 A:middle
Thank you.

00:33:33.266 --> 00:33:37.136 A:middle
[ Applause ]

00:33:37.636 --> 00:33:41.106 A:middle
All right, so, I'm not going to
keep talking about this stuff.

00:33:41.236 --> 00:33:41.976 A:middle
I've talked enough.

00:33:42.566 --> 00:33:43.846 A:middle
Rather than talk, what we

00:33:43.846 --> 00:33:45.776 A:middle
like to do is show you
a demo on this now.

00:33:46.206 --> 00:33:47.996 A:middle
And I want to invite
Yingfeng Su.

00:33:47.996 --> 00:33:49.536 A:middle
He is the Engineering
Manager on my team.

00:33:49.966 --> 00:33:51.946 A:middle
He leads the team that actually
built all the features you

00:33:51.946 --> 00:33:52.506 A:middle
saw today.

00:33:53.026 --> 00:33:54.656 A:middle
And one of his

00:33:54.656 --> 00:33:55.716 A:middle
[ Applause ]

00:33:55.716 --> 00:33:55.946 A:middle
Thank you.

00:33:56.121 --> 00:33:58.121 A:middle
[ Applause ]

00:33:58.296 --> 00:34:00.356 A:middle
And Mathieu Roig is an
engineer on his team.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.536 --> 00:34:03.076 A:middle
They've actually built this
Museum app, this demo app

00:34:03.076 --> 00:34:05.126 A:middle
that I showed you and they're
going to show you how this works

00:34:05.126 --> 00:34:06.576 A:middle
in code and do a demo for you.

00:34:07.176 --> 00:34:08.766 A:middle
Take it away.

00:34:08.766 --> 00:34:09.436 A:middle
&gt;&gt; Thank you, Filip.

00:34:10.186 --> 00:34:12.136 A:middle
Hello everyone, my
name is Yingfeng.

00:34:12.706 --> 00:34:15.216 A:middle
I'm here to show you
two exciting demos.

00:34:15.866 --> 00:34:19.346 A:middle
Both are related to the iBeacons
technology newly introduced

00:34:19.346 --> 00:34:20.346 A:middle
in iOS 7.

00:34:21.275 --> 00:34:23.426 A:middle
I'll do code walkthrough
in Xcode.

00:34:23.876 --> 00:34:26.686 A:middle
Then I'll also show you how they
actually work on a real device.

00:34:27.706 --> 00:34:29.856 A:middle
So, the first demo I'm
going to show you --

00:34:30.186 --> 00:34:33.565 A:middle
how to welcome your
customer when they arrive

00:34:33.565 --> 00:34:35.326 A:middle
at the entrance of
your location.

00:34:36.056 --> 00:34:38.966 A:middle
So, you probably think this
feature sounds complicated.

00:34:38.966 --> 00:34:41.216 A:middle
It must take a lot to
time and effort to build.

00:34:41.956 --> 00:34:43.616 A:middle
That's not necessarily the case.

00:34:44.326 --> 00:34:46.606 A:middle
So, please look-- take
a look at the screen

00:34:47.016 --> 00:34:49.616 A:middle
where I'm showing you my
Geofence Manager class.

00:34:50.016 --> 00:34:53.356 A:middle
This is where I grouped all the
Region Monitoring related code

00:34:53.356 --> 00:34:54.286 A:middle
in a one place.

00:34:54.876 --> 00:34:57.676 A:middle
There're only two methods you
need to implement in order

00:34:57.676 --> 00:35:00.476 A:middle
to make this entire thing
work, so let's take a look.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:01.576 --> 00:35:03.946 A:middle
The first one is called
Register Beacon Region.

00:35:04.516 --> 00:35:07.916 A:middle
This is where you tell
iOS, "Please monitor region

00:35:07.916 --> 00:35:10.146 A:middle
for me even if my
app is not running."

00:35:11.186 --> 00:35:15.026 A:middle
So, let's take a look at
the commented code first.

00:35:15.426 --> 00:35:17.666 A:middle
So this, the commented code
shows how you are going

00:35:17.666 --> 00:35:20.526 A:middle
to do it today with iOS
6 Region Monitoring.

00:35:21.146 --> 00:35:23.926 A:middle
You need to use a latitude
and a longitude and a radius,

00:35:24.326 --> 00:35:25.656 A:middle
then you monitor that region.

00:35:26.536 --> 00:35:29.226 A:middle
What I want to show you is that
by just replacing two lines

00:35:29.226 --> 00:35:33.136 A:middle
of code, you can easily
convert a regular region

00:35:33.376 --> 00:35:36.336 A:middle
into a Beacon region which
gives you more accuracy.

00:35:36.756 --> 00:35:39.106 A:middle
And other than that,
everything else works the same.

00:35:39.106 --> 00:35:40.946 A:middle
You don't have to touch
any of your other code.

00:35:41.676 --> 00:35:42.446 A:middle
So, let's take a look.

00:35:42.966 --> 00:35:45.406 A:middle
The first line, you
need to create a UUID.

00:35:45.986 --> 00:35:49.386 A:middle
This is your way to tell
iOS just monitor signals

00:35:49.436 --> 00:35:50.286 A:middle
from my beacons.

00:35:50.336 --> 00:35:52.116 A:middle
Don't monitor someone
else's beacon.

00:35:52.616 --> 00:35:54.456 A:middle
You can use tools
like the UUIDGen

00:35:54.456 --> 00:35:56.716 A:middle
to generate a random
unique identifier.

00:35:57.916 --> 00:36:01.806 A:middle
Next line, you create a CL
Beacon Region object using

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:01.806 --> 00:36:03.676 A:middle
that UUID you just created.

00:36:04.806 --> 00:36:06.886 A:middle
And next, of course you need

00:36:06.886 --> 00:36:09.976 A:middle
to create the location manager
itself and assign a delegate

00:36:09.976 --> 00:36:12.196 A:middle
in order to receive
the callback.

00:36:13.156 --> 00:36:14.966 A:middle
And the last, this
is a real deal,

00:36:15.156 --> 00:36:18.026 A:middle
where you call the location
manager start monitoring API

00:36:18.766 --> 00:36:21.076 A:middle
to tell iOS to monitor
this region for you.

00:36:21.726 --> 00:36:25.296 A:middle
iOS is smart enough
to look at the type

00:36:25.296 --> 00:36:27.006 A:middle
of the region object you pass in

00:36:27.336 --> 00:36:29.596 A:middle
and determine what
technology should be used

00:36:29.596 --> 00:36:30.516 A:middle
to monitor that for you.

00:36:30.826 --> 00:36:34.646 A:middle
If you pass in a beacon type,
it will use Beacon technology

00:36:34.926 --> 00:36:37.346 A:middle
but the API is exactly the
same as you have today.

00:36:38.396 --> 00:36:39.836 A:middle
So, that's the method.

00:36:40.106 --> 00:36:43.966 A:middle
I would call this method only
at the most relevant time.

00:36:44.346 --> 00:36:46.886 A:middle
So, when user made a dinner
reservation at your restaurant,

00:36:47.276 --> 00:36:50.646 A:middle
they just reserved the
guided tour at your museum

00:36:50.846 --> 00:36:53.246 A:middle
or they placed an order and
will pick up at your store.

00:36:53.686 --> 00:36:56.836 A:middle
Those are the perfect time to
start such monitoring process.

00:36:57.216 --> 00:36:58.336 A:middle
You don't want to
do it too early.

00:36:58.336 --> 00:37:01.456 A:middle
You don't want to do it blindly
at every startup and have

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:01.456 --> 00:37:03.346 A:middle
that arrow show up
unnecessarily.

00:37:03.896 --> 00:37:08.306 A:middle
So now, your customer finally
comes to your location.

00:37:08.866 --> 00:37:10.836 A:middle
At the entrance, iOS detects

00:37:10.836 --> 00:37:13.736 A:middle
that the user crossed the
boundary of this region.

00:37:14.286 --> 00:37:17.406 A:middle
So, this location manager did
enter region callback will

00:37:17.406 --> 00:37:17.986 A:middle
be invoked.

00:37:18.546 --> 00:37:21.496 A:middle
Before I expand this
method, let's take a minute

00:37:21.696 --> 00:37:23.626 A:middle
to think what we are
trying to do here.

00:37:24.246 --> 00:37:26.036 A:middle
So, the ultimate
decision we want

00:37:26.036 --> 00:37:28.586 A:middle
to make is whether
it's appropriate

00:37:28.936 --> 00:37:31.146 A:middle
to post the welcome
notification to the user.

00:37:31.556 --> 00:37:33.736 A:middle
If the user's order is not
ready, it's not the time

00:37:33.736 --> 00:37:35.386 A:middle
for their dinner,
there's probably no point

00:37:35.476 --> 00:37:36.486 A:middle
to show anything to them.

00:37:37.446 --> 00:37:40.926 A:middle
However, in most of the systems
this decision can only be made

00:37:40.926 --> 00:37:43.946 A:middle
on the server-side because
the user's order status,

00:37:44.266 --> 00:37:47.316 A:middle
their reservation information,
their guided tour schedule,

00:37:47.316 --> 00:37:49.186 A:middle
those are all stored
in the server database.

00:37:49.476 --> 00:37:51.706 A:middle
Your app doesn't have that
information right away.

00:37:52.526 --> 00:37:54.956 A:middle
That does mean your
app will need

00:37:54.956 --> 00:37:57.926 A:middle
to make a server call
potentially in background

00:37:58.056 --> 00:38:00.176 A:middle
because this will wake
up your app in background

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.176 --> 00:38:01.496 A:middle
when your app is not running.

00:38:02.236 --> 00:38:03.966 A:middle
That will involve another
technology called the

00:38:03.966 --> 00:38:05.146 A:middle
Background Execution.

00:38:05.526 --> 00:38:08.536 A:middle
It's part of the iOS
multitasking and there are lots

00:38:08.536 --> 00:38:10.616 A:middle
of documentations and
sessions about that

00:38:11.096 --> 00:38:12.566 A:middle
so I won't get into the details.

00:38:12.566 --> 00:38:15.376 A:middle
I'll just show you how we use
it in our particular example.

00:38:16.166 --> 00:38:17.946 A:middle
Now, let's expand the code.

00:38:18.516 --> 00:38:20.646 A:middle
The first line is
just a sanity check

00:38:21.286 --> 00:38:24.576 A:middle
to make sure my Geofence
manager is the right object

00:38:24.926 --> 00:38:26.256 A:middle
to respond to this event.

00:38:26.956 --> 00:38:30.276 A:middle
Because the region events
are delivered to all

00:38:30.276 --> 00:38:33.996 A:middle
of the Core Location delegates
of your app, not only the one

00:38:33.996 --> 00:38:35.566 A:middle
that registers for this region.

00:38:36.066 --> 00:38:37.236 A:middle
So, you need to keep
that in mind.

00:38:38.126 --> 00:38:40.476 A:middle
The second line is just my
way of telling you, "Hey,

00:38:40.476 --> 00:38:42.586 A:middle
I'm only demonstrating
the background case."

00:38:42.916 --> 00:38:45.486 A:middle
Once you understand this,
you can easily figure

00:38:45.486 --> 00:38:47.506 A:middle
out the foreground
case on your own.

00:38:47.506 --> 00:38:48.346 A:middle
It's even simpler.

00:38:49.536 --> 00:38:52.326 A:middle
The next one is the safety
check I'm talking about.

00:38:52.856 --> 00:38:56.726 A:middle
So, imagine your location
is in the middle--

00:38:56.786 --> 00:38:58.306 A:middle
in the middle of a busy area.

00:38:58.476 --> 00:39:00.486 A:middle
Your restaurant is in
the middle of a mall.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:01.196 --> 00:39:02.656 A:middle
It's totally possible
for the user

00:39:02.656 --> 00:39:05.316 A:middle
to cross the region multiple
times in a short period.

00:39:05.876 --> 00:39:08.216 A:middle
If you blindly start your app

00:39:08.216 --> 00:39:10.226 A:middle
and do all these
resource-intensive things

00:39:10.226 --> 00:39:13.746 A:middle
like making server calls every
single time the user crosses the

00:39:13.746 --> 00:39:16.146 A:middle
region, for sure
the user will notice

00:39:16.146 --> 00:39:18.336 A:middle
that their battery
drains faster than usual.

00:39:18.786 --> 00:39:19.956 A:middle
You don't want that to happen.

00:39:19.956 --> 00:39:20.876 A:middle
You want to prevent that.

00:39:21.326 --> 00:39:23.826 A:middle
So you can-- what you can
do is to use information

00:39:23.826 --> 00:39:29.106 A:middle
such as the timestamp of the
past location events to see

00:39:29.106 --> 00:39:30.686 A:middle
if enough time has elapsed

00:39:30.686 --> 00:39:32.286 A:middle
since the last time
they crossed the region.

00:39:32.696 --> 00:39:34.536 A:middle
If that's not the case,
you should tell your app

00:39:34.636 --> 00:39:37.986 A:middle
to just go back to sleep without
consuming any more resource.

00:39:38.286 --> 00:39:39.676 A:middle
That's key to saving battery.

00:39:40.916 --> 00:39:45.076 A:middle
Now, we finally enter
the real business.

00:39:45.406 --> 00:39:47.986 A:middle
First thing you need to do
is call UIApplication begin

00:39:47.986 --> 00:39:51.896 A:middle
background task API to request
additional background time

00:39:51.896 --> 00:39:53.456 A:middle
because you are going
to do a server call

00:39:53.456 --> 00:39:54.916 A:middle
and it might take a few seconds.

00:39:55.636 --> 00:39:58.086 A:middle
So, there's a lot of the
documentation for that.

00:39:58.216 --> 00:39:59.816 A:middle
There's only one thing
I want to call out is

00:39:59.856 --> 00:40:03.886 A:middle
that be a good citizen when
your app is in the background.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:04.286 --> 00:40:07.736 A:middle
Implement a meaningful
expiration handler block

00:40:08.186 --> 00:40:10.956 A:middle
so that iOS can invoke
to do the cleanup work

00:40:11.446 --> 00:40:13.196 A:middle
in case your task
runs for too long.

00:40:13.556 --> 00:40:17.146 A:middle
If you don't do that iOS will
eventually terminate your app.

00:40:17.816 --> 00:40:20.456 A:middle
Now, you requested the
additional background time,

00:40:20.916 --> 00:40:22.606 A:middle
you can actually
start the server call.

00:40:22.606 --> 00:40:24.506 A:middle
This would be exactly
the same if you wanted

00:40:24.506 --> 00:40:25.466 A:middle
to do it in a foreground.

00:40:26.046 --> 00:40:29.466 A:middle
Here I'm using my Service
Manager Object to take care

00:40:29.466 --> 00:40:33.086 A:middle
of all the URL connection,
HTTP details for me.

00:40:33.546 --> 00:40:36.736 A:middle
So, what I'm doing here is
providing a completion block

00:40:37.116 --> 00:40:39.466 A:middle
that will be invoked
by my Service Manager

00:40:39.816 --> 00:40:41.976 A:middle
when the server data has
been received by the app.

00:40:42.796 --> 00:40:43.906 A:middle
So, let's take a
look on what we do.

00:40:44.406 --> 00:40:46.516 A:middle
Rule number one, for
any client-server app,

00:40:46.636 --> 00:40:49.166 A:middle
check against the error,
never ignore an error, OK.

00:40:49.606 --> 00:40:52.346 A:middle
And if you get no error and
you actually get meaningful

00:40:52.346 --> 00:40:55.566 A:middle
information from the server such
as the user's order is ready

00:40:55.566 --> 00:40:58.616 A:middle
for pick up or dinner-- the
table is ready for their dinner,

00:40:59.206 --> 00:41:01.666 A:middle
you create the
UILocalNotification object.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:02.186 --> 00:41:04.966 A:middle
You fill in the details using
the information you received

00:41:04.966 --> 00:41:07.366 A:middle
from your server,
and it's very easy,

00:41:07.366 --> 00:41:08.956 A:middle
you just call this
Present method

00:41:09.416 --> 00:41:11.976 A:middle
to UIApplication
object to present that.

00:41:12.386 --> 00:41:16.826 A:middle
Also you can optionally put
a private user info where--

00:41:17.256 --> 00:41:18.766 A:middle
to your Local Notification.

00:41:19.026 --> 00:41:20.486 A:middle
So later, when you
user opens it,

00:41:20.486 --> 00:41:23.846 A:middle
you know what notification it is
and how your app should react.

00:41:24.916 --> 00:41:27.526 A:middle
That's pretty much--
we're pretty much done.

00:41:27.526 --> 00:41:28.946 A:middle
There's one last
thing you need to do.

00:41:29.056 --> 00:41:31.656 A:middle
Remember you began a
Background Task earlier.

00:41:32.056 --> 00:41:32.776 A:middle
You need to end it.

00:41:33.226 --> 00:41:35.736 A:middle
If you don't do this, your
app will be terminated

00:41:36.326 --> 00:41:37.896 A:middle
by iOS eventually.

00:41:38.646 --> 00:41:40.436 A:middle
So that's all the
code you need to add

00:41:40.436 --> 00:41:41.466 A:middle
in order to make this work.

00:41:42.016 --> 00:41:44.356 A:middle
Now, let me show you
how this actually works

00:41:44.356 --> 00:41:45.476 A:middle
on the real device.

00:41:46.346 --> 00:41:47.366 A:middle
So, I'm the visitor.

00:41:48.596 --> 00:41:53.446 A:middle
I have a guided tour booked at
the Louvre Museum for today.

00:41:54.676 --> 00:41:57.086 A:middle
As I approach-- my phone
has been in my pocket.

00:41:57.086 --> 00:41:58.806 A:middle
It's still in the locked mode

00:41:59.346 --> 00:42:02.086 A:middle
and I'm expecting a
welcome message to tell me

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:02.086 --> 00:42:03.746 A:middle
where I should meet
my tour guide.

00:42:04.486 --> 00:42:07.056 A:middle
So, in order to do this demo--

00:42:07.346 --> 00:42:09.816 A:middle
because I cannot move around
with this cable attached,

00:42:10.346 --> 00:42:12.756 A:middle
so I'm going to get help
from our engineer Mathieu.

00:42:13.266 --> 00:42:15.516 A:middle
Mathieu is holding an
iPhone that is programmed

00:42:15.566 --> 00:42:17.696 A:middle
to be a beacon transmitter.

00:42:18.096 --> 00:42:20.286 A:middle
He's got this little
app where he can turn on

00:42:20.286 --> 00:42:22.456 A:middle
and off different
beacon signals.

00:42:22.876 --> 00:42:26.856 A:middle
So, when he turns on the Region
Beacon it will be exactly the

00:42:26.906 --> 00:42:30.786 A:middle
same effect as if user
crossed boundary of the region.

00:42:31.246 --> 00:42:32.276 A:middle
So, let's see how it works.

00:42:32.816 --> 00:42:34.956 A:middle
Mathieu, can you tun
on the region for me?

00:42:35.496 --> 00:42:39.386 A:middle
As we can see, as soon
as Mathieu turns it on,

00:42:39.906 --> 00:42:41.826 A:middle
the notification is posted

00:42:41.826 --> 00:42:44.176 A:middle
on the user's Welcome
screen that says.

00:42:44.176 --> 00:42:44.243 A:middle
[ Applause ]

00:42:44.243 --> 00:42:45.666 A:middle
Thank you.

00:42:47.716 --> 00:42:49.376 A:middle
It gives you some
meaningful information.

00:42:49.376 --> 00:42:52.856 A:middle
If as a user, I swipe and
open, the app is launched

00:42:52.856 --> 00:42:55.886 A:middle
in foreground and you have the
freedom to do whatever you want.

00:42:56.516 --> 00:43:02.236 A:middle
So, again, this is at the
entrance of your location, OK.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:03.016 --> 00:43:05.816 A:middle
So comparing to the regular
Geofence where you have today,

00:43:06.056 --> 00:43:08.276 A:middle
it probably notified
the user at parking lot.

00:43:08.636 --> 00:43:11.066 A:middle
Now with this, you can
notify them at the entrance.

00:43:11.786 --> 00:43:13.456 A:middle
So, that's my first demo.

00:43:13.456 --> 00:43:16.056 A:middle
Only two methods, it really
couldn't be any simpler.

00:43:16.576 --> 00:43:19.596 A:middle
Let's move on to the next demo.

00:43:20.216 --> 00:43:22.556 A:middle
The next demo is about
ranging use case.

00:43:23.506 --> 00:43:26.746 A:middle
So, imagine, you are the
owner of a large museum.

00:43:27.056 --> 00:43:29.806 A:middle
You have hundreds or
thousands of artwork pods

00:43:29.806 --> 00:43:31.536 A:middle
in your exhibition area.

00:43:32.246 --> 00:43:36.496 A:middle
What you can do is to attach a
beacon to each of the artworks

00:43:37.046 --> 00:43:40.356 A:middle
such that when user
is in your museum

00:43:40.676 --> 00:43:42.076 A:middle
and they're running
your Museum app,

00:43:42.676 --> 00:43:44.386 A:middle
they can get additional
information

00:43:44.426 --> 00:43:46.916 A:middle
about the artwork
they are closest to.

00:43:47.886 --> 00:43:49.876 A:middle
So, let me show you
how to do it in code.

00:43:50.636 --> 00:43:51.606 A:middle
Again, two methods.

00:43:52.196 --> 00:43:55.656 A:middle
First method is to start
to the ranging process.

00:43:55.656 --> 00:43:58.526 A:middle
This tells iOS, "I'm
ready to receive signals.

00:43:58.526 --> 00:44:00.726 A:middle
Please, monitor beacon
signals around me

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:00.726 --> 00:44:02.156 A:middle
and report them back to me."

00:44:02.916 --> 00:44:04.416 A:middle
So, 3 lines of code.

00:44:05.136 --> 00:44:07.006 A:middle
First thing first,
you create a UUID.

00:44:08.086 --> 00:44:12.446 A:middle
You need to use the same
UUID between your app and all

00:44:12.446 --> 00:44:14.446 A:middle
of the artwork beacons
in your museum.

00:44:14.446 --> 00:44:15.756 A:middle
Maybe you have 500 of them.

00:44:15.756 --> 00:44:16.476 A:middle
It doesn't matter.

00:44:16.476 --> 00:44:19.796 A:middle
You use all the UUID-- you used
the same UUID on all of them.

00:44:20.356 --> 00:44:22.826 A:middle
So, there's really no
practical limit for you.

00:44:23.556 --> 00:44:25.846 A:middle
And then you create a
CL Beacon Region object.

00:44:26.286 --> 00:44:28.086 A:middle
It's very similar with
the previous demo.

00:44:28.816 --> 00:44:32.236 A:middle
And the last is this time we're
calling the Start Ranging API

00:44:32.416 --> 00:44:34.656 A:middle
instead of a Start
Monitoring API because we want

00:44:34.656 --> 00:44:36.206 A:middle
to do active scanning.

00:44:37.086 --> 00:44:37.796 A:middle
So, that is it.

00:44:37.836 --> 00:44:42.266 A:middle
From now on, iOS will start
monitoring the signals

00:44:42.266 --> 00:44:43.736 A:middle
around you and then
report them back to you.

00:44:44.096 --> 00:44:46.706 A:middle
I would call this method
whenever my app goes

00:44:46.706 --> 00:44:49.586 A:middle
to the foreground and the
user is confirmed to be

00:44:49.586 --> 00:44:51.646 A:middle
within the range of
my exhibition area.

00:44:52.996 --> 00:44:55.376 A:middle
So let's take a look at the
Core Location delegate callback.

00:44:55.986 --> 00:44:58.886 A:middle
Location manager did
range Beacons in region.

00:44:59.536 --> 00:45:01.926 A:middle
This is where iOS
tells you, "I found one

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:01.926 --> 00:45:03.376 A:middle
or more beacons around you."

00:45:04.206 --> 00:45:07.346 A:middle
Notice that the beacons
parameter is an array

00:45:07.416 --> 00:45:10.066 A:middle
because at anytime, you can see
multiple beacons around you.

00:45:10.826 --> 00:45:14.906 A:middle
They are sorted by the
perceived distance.

00:45:15.256 --> 00:45:17.856 A:middle
So, the one that's believed
to be the closest is

00:45:17.856 --> 00:45:19.036 A:middle
at the top of the array.

00:45:19.666 --> 00:45:21.706 A:middle
So, let's expand the method
and see what we do here.

00:45:22.796 --> 00:45:27.206 A:middle
First line, I'm just trying to
use utility method to inspect

00:45:27.296 --> 00:45:31.996 A:middle
if the closest beacon is
within a desired threshold.

00:45:32.496 --> 00:45:35.656 A:middle
Here, I'm using CL
proximity near as my threshold

00:45:36.046 --> 00:45:39.136 A:middle
which represents a distance
of roughly three meters.

00:45:39.616 --> 00:45:42.396 A:middle
So, this entire line
basically means try

00:45:42.396 --> 00:45:46.006 A:middle
to find the closest beacon
that is within three meters.

00:45:47.376 --> 00:45:50.126 A:middle
If one-- the reason I make
it into utility method is

00:45:50.126 --> 00:45:52.256 A:middle
because I may want to use
it somewhere else in my app

00:45:52.376 --> 00:45:53.996 A:middle
and it makes unit test easier.

00:45:54.366 --> 00:45:58.156 A:middle
But, inside it this is really
just objectAtIndex zero,

00:45:58.156 --> 00:46:01.576 A:middle
casted back to the region and
check the proximity property.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:02.816 --> 00:46:08.366 A:middle
And if one is found, I can
inspect the major value property

00:46:08.366 --> 00:46:10.876 A:middle
on the Beacon to tell
whether it's the painting

00:46:10.876 --> 00:46:11.816 A:middle
or it's a sculpture.

00:46:12.336 --> 00:46:15.796 A:middle
So, we programmed all the
artwork beacons using the

00:46:15.796 --> 00:46:16.676 A:middle
same UUID.

00:46:16.676 --> 00:46:18.906 A:middle
So you might ask, "How do I
tell whether it's a painting

00:46:18.906 --> 00:46:19.546 A:middle
or sculpture?"

00:46:20.226 --> 00:46:22.866 A:middle
There are other customizable
values on the Beacon.

00:46:22.866 --> 00:46:25.226 A:middle
They are called major
and the minor properties.

00:46:25.646 --> 00:46:28.456 A:middle
Each of them is a
16-bit integer.

00:46:28.456 --> 00:46:30.206 A:middle
So you can define
the value of them.

00:46:30.776 --> 00:46:34.236 A:middle
So, in my case I specify one
to be the Mona Lisa paining

00:46:34.656 --> 00:46:37.596 A:middle
and I used two for the
Winged Victory statue.

00:46:38.706 --> 00:46:42.726 A:middle
So, by reading the major value,
I can give a hint to my UI code,

00:46:42.726 --> 00:46:43.946 A:middle
"OK, this is Mona Lisa.

00:46:43.946 --> 00:46:45.406 A:middle
That is the Winged Victory."

00:46:45.406 --> 00:46:47.326 A:middle
So you can show different pages.

00:46:47.736 --> 00:46:52.326 A:middle
And of course if user has walked
away from the exhibition area,

00:46:52.626 --> 00:46:54.006 A:middle
this method will return nil

00:46:54.266 --> 00:46:56.986 A:middle
and we'll just dismiss the
information page we just

00:46:56.986 --> 00:46:57.536 A:middle
showed earlier.

00:46:58.136 --> 00:47:00.996 A:middle
So let me show you how this
actually works on a device.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:01.536 --> 00:47:03.546 A:middle
So, I'm running my
Museum Guide app.

00:47:04.266 --> 00:47:06.866 A:middle
OK, it's the same app
and it's in foreground.

00:47:06.986 --> 00:47:10.386 A:middle
So, the ranging process
is already working.

00:47:10.986 --> 00:47:14.326 A:middle
So again, I'm going to get
help from Mathieu to turn on

00:47:14.326 --> 00:47:16.336 A:middle
and off different
artwork beacons

00:47:16.776 --> 00:47:20.506 A:middle
which is exactly the same
as if user approaches

00:47:20.506 --> 00:47:22.006 A:middle
or leaves certain artwork.

00:47:22.576 --> 00:47:26.046 A:middle
So, Mathieu, can you please turn
on the Mona Lisa beacon for me?

00:47:26.596 --> 00:47:32.256 A:middle
As we can see as soon as Mathieu
turns on the Mona Lisa beacon--

00:47:33.016 --> 00:47:34.236 A:middle
I'm not touching the
phone by the way.

00:47:34.236 --> 00:47:35.286 A:middle
[ Laughs ]

00:47:35.286 --> 00:47:37.486 A:middle
So, we are showing
an information page

00:47:37.486 --> 00:47:40.176 A:middle
about the author and
what year it was made.

00:47:40.176 --> 00:47:42.206 A:middle
You can do whatever you
like that's relevant

00:47:42.286 --> 00:47:43.566 A:middle
to this particular artwork.

00:47:44.256 --> 00:47:46.946 A:middle
Mathieu, can you please switch
to the Winged Victory statue?

00:47:48.286 --> 00:47:50.276 A:middle
So now, I walk away
from Mona Lisa

00:47:50.276 --> 00:47:53.236 A:middle
and I walk towards the
Winged Victory statue.

00:47:53.646 --> 00:47:55.216 A:middle
You can see the app
is smart enough

00:47:55.316 --> 00:47:57.056 A:middle
to swap the information page.

00:47:57.556 --> 00:47:59.436 A:middle
Now, can you turn
off everything?

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:00.366 --> 00:48:03.936 A:middle
So, when Mathieu turns off
everything, we are dismissing

00:48:03.936 --> 00:48:05.066 A:middle
that information page.

00:48:05.506 --> 00:48:09.666 A:middle
And the app is still ranging as
long as you are in the museum.

00:48:10.886 --> 00:48:14.346 A:middle
So, that is the end
of my both demos.

00:48:14.806 --> 00:48:17.606 A:middle
We are very excited about
these new technologies.

00:48:17.826 --> 00:48:21.066 A:middle
Everyday, we keep thinking how
we can use these technologies

00:48:21.066 --> 00:48:24.866 A:middle
to further enrich the
customer experience in our app.

00:48:25.586 --> 00:48:30.176 A:middle
I hope you like them as well and
think about how you can use them

00:48:30.176 --> 00:48:33.986 A:middle
to deliver more personalized
services to your customers.

00:48:34.486 --> 00:48:38.196 A:middle
Thank you and I'm going to
give this back to Filip.

00:48:38.196 --> 00:48:38.263 A:middle
[ Applause ]

00:48:38.263 --> 00:48:41.006 A:middle
&gt;&gt; OK. Hope you guys
enjoyed that demo.

00:48:41.506 --> 00:48:43.306 A:middle
It was live and you're
one of the first people

00:48:43.306 --> 00:48:45.676 A:middle
to actually see iBeacons
in action for real.

00:48:46.306 --> 00:48:48.796 A:middle
So, like Yingfeng said,
we're really excited

00:48:48.796 --> 00:48:49.686 A:middle
about this on our side.

00:48:49.686 --> 00:48:51.736 A:middle
So, I hope you guys are
too and just go out there

00:48:51.736 --> 00:48:53.156 A:middle
and build some magic
with this feature.

00:48:53.586 --> 00:48:56.786 A:middle
I'm going to summarize things up
now and as we talked about this,

00:48:56.786 --> 00:48:58.836 A:middle
some key iOS technologies,
calendar,

00:48:59.016 --> 00:49:01.566 A:middle
push calendar events
pushes Region Monitoring,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:01.566 --> 00:49:03.106 A:middle
Core Location, and iBeacons.

00:49:03.546 --> 00:49:05.456 A:middle
And they're simple to
use but so effective

00:49:05.726 --> 00:49:07.886 A:middle
and you guys can make some truly
great experience with these.

00:49:08.366 --> 00:49:09.456 A:middle
So, go out there and use them

00:49:09.796 --> 00:49:11.616 A:middle
but use them wisely,
use them properly.

00:49:11.876 --> 00:49:13.626 A:middle
That's how we have tips
and tricks here for you.

00:49:14.366 --> 00:49:16.036 A:middle
Finally, if you have
been done it already,

00:49:17.116 --> 00:49:19.546 A:middle
download the Apple Store app,
you can see all this in practice

00:49:19.796 --> 00:49:22.066 A:middle
and you can pull along and
see what we do in future.

00:49:23.356 --> 00:49:26.146 A:middle
For more information, our
evangelist is Paul Marcos.

00:49:26.306 --> 00:49:27.936 A:middle
This is the Apple Store
app, the Reference app.

00:49:27.936 --> 00:49:30.076 A:middle
You can find it here or
download on the App Store

00:49:30.736 --> 00:49:33.006 A:middle
and as always the Apple
Developer Forums are there

00:49:33.006 --> 00:49:33.346 A:middle
for you.

00:49:34.796 --> 00:49:37.536 A:middle
There are some related sessions
I want to point you guys too,

00:49:37.586 --> 00:49:39.666 A:middle
Yingfeng talked about
running in the background.

00:49:40.026 --> 00:49:41.476 A:middle
You're going to find
a lot all about that

00:49:41.476 --> 00:49:42.896 A:middle
and what's new with
multitasking.

00:49:43.016 --> 00:49:46.026 A:middle
I really recommend that one
then Integrating Passbook

00:49:46.026 --> 00:49:48.406 A:middle
in Your Ecosystem, that's
another session by my team.

00:49:48.776 --> 00:49:51.176 A:middle
Well, again we approach
it from your perspective.

00:49:51.176 --> 00:49:54.096 A:middle
We've implemented the
Apple Store gift card pass.

00:49:54.136 --> 00:49:56.076 A:middle
Pretty complex pass and
we talked about how we did

00:49:56.076 --> 00:49:57.396 A:middle
that in the tips
and tricks there

00:49:57.666 --> 00:49:59.446 A:middle
so you guys can implement
your own passes.

00:49:59.676 --> 00:50:02.296 A:middle
And then, of course what's
new in Core Location.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:02.646 --> 00:50:05.116 A:middle
Here, you can find out a
lot more about the iBeacons

00:50:05.116 --> 00:50:07.516 A:middle
and all the other Core Location
technology we've talked about.

00:50:08.096 --> 00:50:10.666 A:middle
With that, I want to thank you
guys for coming to this talk.

00:50:10.926 --> 00:50:11.326 A:middle
Thank you

00:50:11.326 --> 00:50:11.456 A:middle
[ Applause ]

00:50:11.456 --> 00:50:12.386 A:middle
for coming to WWDC.

00:50:12.446 --> 00:50:13.676 A:middle
Hope you had fun.

