WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:10.156 --> 00:00:11.816 A:middle
&gt;&gt; Good morning.

00:00:12.316 --> 00:00:16.326 A:middle
[ Applause ]

00:00:16.826 --> 00:00:18.196 A:middle
Good very early morning.

00:00:19.156 --> 00:00:22.346 A:middle
My name is Katie Skinner
and I work with teams all

00:00:22.346 --> 00:00:24.306 A:middle
across Apple on user privacy.

00:00:25.026 --> 00:00:30.246 A:middle
This includes iOS, OS X,
iCloud, iWork, iTunes,

00:00:30.246 --> 00:00:33.366 A:middle
and along with David
Stites, David give a wave.

00:00:33.366 --> 00:00:35.586 A:middle
We're going be to talking

00:00:35.586 --> 00:00:38.646 A:middle
about protecting your user's
privacy for the next hour.

00:00:39.276 --> 00:00:41.846 A:middle
I'm going to start out talking

00:00:41.846 --> 00:00:44.966 A:middle
about the part privacy
plays in your reputation.

00:00:46.196 --> 00:00:48.266 A:middle
Then we're going to do an
update on changes coming

00:00:48.266 --> 00:00:50.266 A:middle
to identifiers in iOS 7.

00:00:51.716 --> 00:00:53.816 A:middle
David will talk about
new data types

00:00:53.816 --> 00:00:57.166 A:middle
for data isolation this year,
and for the new developers

00:00:57.166 --> 00:01:00.056 A:middle
in the room, walk
through an example on how

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:00.056 --> 00:01:02.026 A:middle
to take advantage
of data isolation.

00:01:03.326 --> 00:01:04.775 A:middle
Then, I'll finish off talking

00:01:04.775 --> 00:01:08.146 A:middle
about some privacy best
practices, both policies

00:01:08.146 --> 00:01:10.336 A:middle
and some techniques
that you can apply.

00:01:14.576 --> 00:01:19.646 A:middle
So reputation, your users
are your be-all, end-all.

00:01:20.146 --> 00:01:21.986 A:middle
They're your most
important thing.

00:01:23.156 --> 00:01:25.916 A:middle
They're the people
who download your app,

00:01:26.096 --> 00:01:28.086 A:middle
launch your app 2
o'clock in the afternoon

00:01:28.086 --> 00:01:29.236 A:middle
when they're bored at work.

00:01:30.156 --> 00:01:33.686 A:middle
Or alternately stop
launching your app,

00:01:33.686 --> 00:01:35.056 A:middle
even delete it of their device.

00:01:36.186 --> 00:01:40.676 A:middle
So maintaining a good
relationship with them is key,

00:01:40.676 --> 00:01:43.606 A:middle
and privacy is a
big part of that.

00:01:44.376 --> 00:01:46.676 A:middle
In the next hour, we're
going to talking about ways

00:01:46.676 --> 00:01:50.006 A:middle
that you can maintain that
reputation and keep it strong.

00:01:53.936 --> 00:01:58.346 A:middle
So last year WWDC, we talked
about long-lived identifiers.

00:01:58.746 --> 00:02:00.186 A:middle
We talked about the UDID,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.186 --> 00:02:03.436 A:middle
and then we introduced
purpose-scoped [phonetic]

00:02:03.626 --> 00:02:04.926 A:middle
replacement APIs.

00:02:05.626 --> 00:02:09.526 A:middle
Now, I will go over the
replacement APIs again,

00:02:10.265 --> 00:02:11.706 A:middle
but first I want
to make a point.

00:02:11.706 --> 00:02:15.636 A:middle
iOS as a platform has
continued to grow.

00:02:15.636 --> 00:02:19.406 A:middle
Apps can and are doing
amazing new things.

00:02:20.316 --> 00:02:22.976 A:middle
They're filling new purposes
that maybe even last year,

00:02:22.976 --> 00:02:23.956 A:middle
we hadn't even thought of.

00:02:24.576 --> 00:02:26.586 A:middle
It's really thanks to
all of you here today

00:02:26.586 --> 00:02:29.956 A:middle
that we really have that.

00:02:29.956 --> 00:02:32.216 A:middle
And as the platform grows,

00:02:33.756 --> 00:02:37.116 A:middle
we feel like a single long-lived
identifier should not be

00:02:37.116 --> 00:02:38.706 A:middle
absorbing all of that growth.

00:02:40.086 --> 00:02:41.326 A:middle
That's why we think

00:02:41.326 --> 00:02:45.156 A:middle
that purpose-scoped
identifiers are the future.

00:02:45.696 --> 00:02:51.806 A:middle
So now, I'm going to go through
the UDID replacement APIs.

00:02:52.256 --> 00:02:55.996 A:middle
There are three, the first one
is the Application Identifier

00:02:56.416 --> 00:02:58.266 A:middle
and it is scoped
per application.

00:02:59.496 --> 00:03:01.756 A:middle
The second is the
Vendor Identifier

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:01.846 --> 00:03:04.116 A:middle
and it scoped per developer.

00:03:05.526 --> 00:03:09.006 A:middle
The third is the Advertising
identifier used for advertising.

00:03:09.536 --> 00:03:13.926 A:middle
Now before we go any further, I
want to clarify the difference

00:03:13.926 --> 00:03:16.916 A:middle
between the UDID and a UUID.

00:03:17.246 --> 00:03:19.116 A:middle
They sound very, very similar.

00:03:19.816 --> 00:03:23.676 A:middle
So a UDID stands for
Unique Device Identifier

00:03:24.296 --> 00:03:27.166 A:middle
and is unique hardware-based
identifier.

00:03:28.456 --> 00:03:32.056 A:middle
Now, the UUID stands for
Universally Unique Identifier

00:03:32.056 --> 00:03:34.846 A:middle
and is unique random identifier.

00:03:35.336 --> 00:03:37.056 A:middle
So, the key takeaway here is

00:03:37.326 --> 00:03:41.356 A:middle
for single device,
there is one UDID.

00:03:41.876 --> 00:03:44.766 A:middle
But on that same device,
there are more UUIDs

00:03:44.766 --> 00:03:46.736 A:middle
on that device than
apps installed.

00:03:50.256 --> 00:03:53.316 A:middle
As I'm sure as many of
you know, as of May 1st,

00:03:53.316 --> 00:03:56.226 A:middle
apps and app updates
that reference

00:03:56.276 --> 00:03:59.666 A:middle
to UDID are no longer being
accepted to the App Store.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:00.796 --> 00:04:03.306 A:middle
In iOS 7, the API is removed.

00:04:04.446 --> 00:04:06.696 A:middle
If you have an existing
app in the Apps Store

00:04:06.696 --> 00:04:08.396 A:middle
that still references UDID,

00:04:08.396 --> 00:04:11.276 A:middle
it will now be returned
the Vendor Identifier.

00:04:12.936 --> 00:04:15.156 A:middle
So, let's go through
this change to behavior.

00:04:16.036 --> 00:04:19.086 A:middle
Up top, we have what you
would recognize as the UDID.

00:04:19.935 --> 00:04:24.036 A:middle
So in iOS 7, now your old
app will receive a series

00:04:24.036 --> 00:04:26.616 A:middle
of Fs [phonetic] followed
by the Vendor Identifier

00:04:27.216 --> 00:04:28.476 A:middle
with the dashes removed.

00:04:29.866 --> 00:04:31.346 A:middle
So, let's build one.

00:04:31.346 --> 00:04:36.326 A:middle
Here we have the Fs then
the Vendor identifier

00:04:36.646 --> 00:04:37.806 A:middle
without the spaces.

00:04:39.126 --> 00:04:41.156 A:middle
Now, you can see the top value

00:04:41.156 --> 00:04:42.906 A:middle
and the bottom value
are very different.

00:04:43.916 --> 00:04:47.836 A:middle
So, if you have an old app
that references the UDID,

00:04:47.836 --> 00:04:50.086 A:middle
you must test on iOS 7.

00:04:51.146 --> 00:04:53.766 A:middle
Understand the impact
that this has to your app

00:04:53.766 --> 00:04:56.086 A:middle
and insure this will not have
any impact on your users.

00:04:57.496 --> 00:05:01.076 A:middle
If you required changes, once
you test, you can find out

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:01.196 --> 00:05:05.036 A:middle
and then update your app
before iOS 7 hits wide release.

00:05:07.556 --> 00:05:11.686 A:middle
Now, you may have tried
updating your app but it failed

00:05:11.686 --> 00:05:15.926 A:middle
and was rejected from the App
Store due to UDID references.

00:05:16.996 --> 00:05:18.306 A:middle
If this has happened to you,

00:05:18.616 --> 00:05:19.806 A:middle
this slide is are
great reference.

00:05:20.276 --> 00:05:24.036 A:middle
It goes through steps explaining
how you can find the references

00:05:24.036 --> 00:05:25.386 A:middle
within your code.

00:05:25.676 --> 00:05:29.256 A:middle
Now, the most common place
that references are found is

00:05:29.256 --> 00:05:30.556 A:middle
in a third-party library.

00:05:31.606 --> 00:05:36.076 A:middle
So, if this happened to you, go
through these steps, find it,

00:05:36.076 --> 00:05:41.246 A:middle
take it out and then
resubmit to the Apps Store.

00:05:41.426 --> 00:05:43.436 A:middle
Now, the Vendor Identifier
is one

00:05:43.436 --> 00:05:45.356 A:middle
of the purpose-scoped
replacements.

00:05:47.396 --> 00:05:51.626 A:middle
We introduced it in
iOS 6 and it is a UUID.

00:05:51.626 --> 00:05:56.546 A:middle
It provides a device,
unique mapping per team ID.

00:05:57.756 --> 00:05:59.946 A:middle
Now, your team ID, that's
the same as developer

00:05:59.946 --> 00:06:03.756 A:middle
and you can find what your
team ID is on iTunes Connect.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:04.416 --> 00:06:08.086 A:middle
This mapping is stored
and managed by iOS.

00:06:08.636 --> 00:06:12.096 A:middle
The value will be maintained,
it will stay around as long

00:06:12.096 --> 00:06:16.696 A:middle
as at least one app for
your team ID is installed

00:06:16.696 --> 00:06:18.596 A:middle
on the device.

00:06:18.696 --> 00:06:22.246 A:middle
If all apps are deleted,
this value is also erased.

00:06:23.916 --> 00:06:25.886 A:middle
Now this mapping
table is backed up

00:06:25.886 --> 00:06:29.016 A:middle
but it will not be
restored across devices.

00:06:29.186 --> 00:06:32.476 A:middle
Now, what is restore
across devices mean?

00:06:33.646 --> 00:06:38.756 A:middle
If a user takes the backup on
device one and then installs it

00:06:38.756 --> 00:06:41.996 A:middle
on device two, that's
restoring it across devices.

00:06:42.686 --> 00:06:46.506 A:middle
The most common case of this is
when users purchase a new device

00:06:46.506 --> 00:06:49.116 A:middle
and they want to take their
existing data with them.

00:06:49.686 --> 00:06:53.726 A:middle
Now, I'm going to walk
through an example

00:06:55.096 --> 00:06:57.886 A:middle
that shows a little bit more
clearly what the lifetime

00:06:57.936 --> 00:06:59.196 A:middle
of the Vendor Identifier is.

00:06:59.896 --> 00:07:02.126 A:middle
So, in this case we
have two apps, app one

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:02.126 --> 00:07:03.636 A:middle
and app two for developer foo.

00:07:04.166 --> 00:07:05.746 A:middle
As you can see, they're
currently mapped

00:07:05.746 --> 00:07:08.616 A:middle
to the same value for
identifier for vendor.

00:07:09.476 --> 00:07:11.216 A:middle
So let's delete app one.

00:07:12.006 --> 00:07:15.186 A:middle
There is no change to
the mapping for app two.

00:07:15.426 --> 00:07:18.836 A:middle
But let's say the user
decides to delete app two.

00:07:19.746 --> 00:07:22.066 A:middle
Now, the value for vendor
identifier is also erased.

00:07:23.656 --> 00:07:27.106 A:middle
If the user decides they
want to reinstall app two,

00:07:27.106 --> 00:07:30.896 A:middle
they like it now, then
a new value is created.

00:07:30.896 --> 00:07:34.906 A:middle
And any further apps for that
developer will now be mapped

00:07:35.126 --> 00:07:36.156 A:middle
to the new value.

00:07:40.476 --> 00:07:44.026 A:middle
The advertising identifier is a
second one of the replacements.

00:07:44.886 --> 00:07:46.066 A:middle
It's used for advertising.

00:07:46.066 --> 00:07:49.836 A:middle
Note, you may not handle the
advertising identifier yourself.

00:07:50.596 --> 00:07:53.416 A:middle
It may be handled by a
third party ad library.

00:07:53.896 --> 00:07:58.096 A:middle
But if you do any advertising
yourself within your app,

00:07:58.096 --> 00:08:00.166 A:middle
you must check the value

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:01.226 --> 00:08:04.446 A:middle
of limit ad tracking
before using the

00:08:04.576 --> 00:08:05.666 A:middle
Advertising Identifier.

00:08:06.196 --> 00:08:12.306 A:middle
If the value is set no, you
can only use the Advertising

00:08:12.306 --> 00:08:14.826 A:middle
Identifier for the
reasons outlined

00:08:14.826 --> 00:08:16.416 A:middle
in the Program License
Agreement.

00:08:16.726 --> 00:08:19.336 A:middle
Now, these include things
like frequency capping,

00:08:19.636 --> 00:08:21.686 A:middle
estimating the total
number of unique users.

00:08:21.736 --> 00:08:26.286 A:middle
This value is backed up,

00:08:26.756 --> 00:08:29.186 A:middle
but it will not be
restored across devices.

00:08:29.636 --> 00:08:35.426 A:middle
New in iOS 7, Limit
Ad Tracking is moving

00:08:35.426 --> 00:08:36.775 A:middle
under Settings Privacy.

00:08:37.486 --> 00:08:39.586 A:middle
It can also now be
controlled by restrictions.

00:08:39.586 --> 00:08:43.385 A:middle
And David will talk more
later more about restrictions.

00:08:43.746 --> 00:08:48.136 A:middle
Remember do not cache the
Advertising Identifier

00:08:49.196 --> 00:08:52.996 A:middle
as it can be reset by users
using the Reset button

00:08:52.996 --> 00:08:53.806 A:middle
in advertising.

00:08:54.236 --> 00:08:58.456 A:middle
Now this slide is
a good reference.

00:08:58.986 --> 00:09:00.836 A:middle
If you're trying to understand
what are the differences

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:00.836 --> 00:09:04.236 A:middle
between the identifiers, maybe
compare scope or lifetime.

00:09:04.456 --> 00:09:07.246 A:middle
This is a great tool, a
great slide to look at later

00:09:07.876 --> 00:09:09.076 A:middle
to understand more clearly.

00:09:10.956 --> 00:09:13.766 A:middle
So now, I'm going through
a couple other changes

00:09:13.766 --> 00:09:15.886 A:middle
in iOS coming to identifiers.

00:09:17.036 --> 00:09:20.006 A:middle
The first one is
the MAC address.

00:09:20.866 --> 00:09:24.426 A:middle
Access the MAC, the device's MAC
address will now be restricted.

00:09:25.346 --> 00:09:30.266 A:middle
The API is not being
deprecated but sysclt

00:09:30.266 --> 00:09:33.186 A:middle
and ioclt will now
return a consistent value

00:09:33.186 --> 00:09:34.636 A:middle
across all devices.

00:09:34.806 --> 00:09:38.616 A:middle
And this applies
to existing apps.

00:09:38.696 --> 00:09:42.006 A:middle
If you use the MAC address
today, make sure to test

00:09:42.006 --> 00:09:45.366 A:middle
on iOS 7 and understand
the impact to your users.

00:09:47.316 --> 00:09:50.516 A:middle
gethostuuid() is
removed in iOS 7.

00:09:51.886 --> 00:09:54.306 A:middle
Existing apps will receive
the Vendor Identifier.

00:09:56.556 --> 00:10:01.196 A:middle
In iOS 7, push tokens are
now scoped per application.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:01.716 --> 00:10:06.306 A:middle
The Push token was never
guaranteed to be a stable value.

00:10:06.306 --> 00:10:09.926 A:middle
So please, do never,
never cache it.

00:10:09.926 --> 00:10:12.396 A:middle
Always use the value provided
application:didRegisterFor

00:10:12.396 --> 00:10:14.956 A:middle
RemoteNotifications
WithDeviceToken:.

00:10:16.026 --> 00:10:23.206 A:middle
So, the Pasteboard in iOS 7 is
also being scoped per team ID.

00:10:23.956 --> 00:10:26.996 A:middle
There's no change to
existing system Pasteboards.

00:10:27.826 --> 00:10:31.096 A:middle
But also note in iOS
7 any data stored

00:10:31.096 --> 00:10:34.016 A:middle
on the Pasteboard
will be inaccessible

00:10:34.016 --> 00:10:39.716 A:middle
when users upgrades to iOS 7.

00:10:39.886 --> 00:10:42.766 A:middle
Now, I've gone through a
whole bunch different updates

00:10:42.766 --> 00:10:43.896 A:middle
to identifiers and new changes.

00:10:44.206 --> 00:10:45.036 A:middle
But what I want to leave you

00:10:45.036 --> 00:10:47.626 A:middle
with in this section is
make sure to test your apps

00:10:47.626 --> 00:10:51.136 A:middle
on iOS 7 especially
your older apps.

00:10:51.136 --> 00:10:53.686 A:middle
You want to understand the
impact and insure that none

00:10:53.686 --> 00:10:55.996 A:middle
of that impact affects
your users.

00:10:56.486 --> 00:10:59.496 A:middle
Now, I'm going to
pass it over to David

00:10:59.496 --> 00:11:01.346 A:middle
to talk more about
data isolation.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:01.776 --> 00:11:02.596 A:middle
David? [Applause]

00:11:03.186 --> 00:11:10.256 A:middle
&gt;&gt; Okay. Thanks Katie.

00:11:10.746 --> 00:11:14.096 A:middle
So I'm going to take you
guys through data isolation,

00:11:14.376 --> 00:11:18.546 A:middle
what it is and how you
can take advantage of it?

00:11:20.446 --> 00:11:23.646 A:middle
So, just like any
successful peanut butter

00:11:23.646 --> 00:11:26.116 A:middle
and jelly sandwich, there
are two key ingredients,

00:11:26.116 --> 00:11:27.186 A:middle
peanut butter and jelly.

00:11:28.246 --> 00:11:33.496 A:middle
And similarly in any successful
data isolation scheme,

00:11:33.976 --> 00:11:38.196 A:middle
there are two key elements,
consent and transparency.

00:11:39.126 --> 00:11:42.016 A:middle
So, what do I mean by that?

00:11:42.326 --> 00:11:46.656 A:middle
Well, consent is something
that the user is going

00:11:47.056 --> 00:11:50.616 A:middle
to give to your application.

00:11:51.446 --> 00:11:53.786 A:middle
It's usually permission
to do something

00:11:53.786 --> 00:11:56.756 A:middle
such as accessing their
user data classes.

00:11:57.156 --> 00:12:00.646 A:middle
In this particular example,
we see that Camera would

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:00.646 --> 00:12:02.056 A:middle
like to access your location

00:12:02.096 --> 00:12:04.426 A:middle
so that it can geotag
photos and videos.

00:12:05.876 --> 00:12:09.306 A:middle
Transparency is the
other key ingredient.

00:12:09.976 --> 00:12:12.236 A:middle
It makes it clear to
the user what is going

00:12:12.236 --> 00:12:14.166 A:middle
to happen with their data.

00:12:14.226 --> 00:12:17.916 A:middle
It helps create clear
mental models for the user

00:12:17.916 --> 00:12:20.776 A:middle
to understand and also
sets expectations.

00:12:21.386 --> 00:12:25.276 A:middle
Here, we can see that there's
a purpose string that explains

00:12:25.276 --> 00:12:28.066 A:middle
that photos and videos will
be tagged with the location

00:12:28.066 --> 00:12:30.826 A:middle
that they were taken,
potentially,

00:12:30.826 --> 00:12:35.586 A:middle
so that we can display
them on a map perhaps.

00:12:35.966 --> 00:12:38.446 A:middle
So you should be thinking
about both these concepts--

00:12:38.446 --> 00:12:39.956 A:middle
transparency and consent

00:12:40.196 --> 00:12:42.016 A:middle
when you're designing
your applications.

00:12:42.916 --> 00:12:45.396 A:middle
Now, we've made this easy
and consistent for you

00:12:45.396 --> 00:12:47.856 A:middle
by building it in to
the operating system.

00:12:48.416 --> 00:12:51.676 A:middle
So, those of you who are not
familiar with data isolation,

00:12:51.966 --> 00:12:55.726 A:middle
it's a technical design where by
the operating system intervenes

00:12:55.896 --> 00:12:59.276 A:middle
between an application
and the user's data

00:12:59.436 --> 00:13:00.636 A:middle
on behalf of the user.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:02.416 --> 00:13:05.246 A:middle
While this intervention
happens completely outside

00:13:05.246 --> 00:13:07.226 A:middle
of the address space
of your process,

00:13:08.216 --> 00:13:10.986 A:middle
it's completely transparent
to your application.

00:13:12.576 --> 00:13:17.796 A:middle
So, if the user decides to allow
you access their user data then

00:13:17.796 --> 00:13:18.976 A:middle
you will receive data back.

00:13:18.976 --> 00:13:22.026 A:middle
And if a user declines
to allow you access,

00:13:22.026 --> 00:13:24.036 A:middle
then you won't receive
any data back.

00:13:25.536 --> 00:13:28.776 A:middle
So, this screen should look
somewhat familiar to you.

00:13:29.436 --> 00:13:33.226 A:middle
This is how you manage your data
isolation on both iOS and OS X.

00:13:33.226 --> 00:13:37.586 A:middle
And you get there on iOS by
going to Settings Privacy

00:13:37.686 --> 00:13:40.136 A:middle
and then choosing the category
that you want to manage

00:13:40.916 --> 00:13:43.686 A:middle
and on OS X on System
Preferences and going

00:13:43.686 --> 00:13:47.616 A:middle
to Security and Privacy.

00:13:48.426 --> 00:13:52.656 A:middle
So, there's a number of classes
that we support already on OS X

00:13:52.656 --> 00:13:55.476 A:middle
and we're adding some new
support in OS X Mavericks.

00:13:56.716 --> 00:13:59.536 A:middle
In Mountain Lion we supported
Contacts and Location

00:13:59.536 --> 00:14:03.116 A:middle
and in Mavericks we're adding
Calendars and Reminders.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:03.796 --> 00:14:09.856 A:middle
On the social side of things
for OS X, we're adding support

00:14:09.856 --> 00:14:12.156 A:middle
for LinkedIn and Tencent Weibo.

00:14:12.156 --> 00:14:14.546 A:middle
And for those of you who are
not familiar with Tencent Weibo,

00:14:14.816 --> 00:14:20.396 A:middle
it's a microblogging
service in China.

00:14:21.596 --> 00:14:24.996 A:middle
We support all of the same
data classes that we do on OS X

00:14:24.996 --> 00:14:30.626 A:middle
with the addition of some such
as Photos and Bluetooth on iOS.

00:14:31.896 --> 00:14:36.516 A:middle
And in iOS 7 we're going to be
adding two new data classes,

00:14:36.736 --> 00:14:39.826 A:middle
Microphone and Camera
in some regions only.

00:14:39.876 --> 00:14:44.096 A:middle
And for the social
side of things in iOS,

00:14:44.446 --> 00:14:48.336 A:middle
we support all the same classes
as OS X, Facebook, Twitter,

00:14:48.636 --> 00:14:54.136 A:middle
Sina Weibo, and we're adding
support for Tencent Weibo.

00:14:54.796 --> 00:14:58.666 A:middle
So, you're already shipping on
either Mountain Lion or iOS 6,

00:14:58.946 --> 00:15:01.196 A:middle
that's great, congratulations.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:01.886 --> 00:15:04.686 A:middle
You're already taking
advantage of data isolation.

00:15:05.696 --> 00:15:09.606 A:middle
So, as before on iOS 6, this
data isolation will apply

00:15:09.606 --> 00:15:13.066 A:middle
to all existing applications,
there's absolutely no need

00:15:13.066 --> 00:15:16.736 A:middle
to recompile or resubmit your
application to the App Store.

00:15:17.056 --> 00:15:17.986 A:middle
You're going to be ready

00:15:17.986 --> 00:15:21.246 A:middle
from a data isolation
perspective on day one.

00:15:22.726 --> 00:15:25.326 A:middle
However, there are certain
changes you can make

00:15:25.326 --> 00:15:26.936 A:middle
to improve the user experience.

00:15:27.496 --> 00:15:30.716 A:middle
For example, you can add purpose
strings to your application

00:15:30.716 --> 00:15:33.626 A:middle
which we'll talk about
later to make it clear

00:15:33.626 --> 00:15:37.076 A:middle
to the user why you want
to access their user data.

00:15:37.726 --> 00:15:41.926 A:middle
Also, you can design a robust
fallback behavior in the case

00:15:41.926 --> 00:15:44.826 A:middle
that the user declines
to give you access

00:15:45.076 --> 00:15:46.116 A:middle
to their personal data.

00:15:47.516 --> 00:15:52.996 A:middle
So, let's talk about
privacy support in OS X.

00:15:53.236 --> 00:15:57.606 A:middle
It's really easy to get consent
from the user and all you have

00:15:57.606 --> 00:15:59.676 A:middle
to do is call the
purpose-specific APIs

00:15:59.676 --> 00:16:01.286 A:middle
that have been provided to you.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:02.046 --> 00:16:05.906 A:middle
Now, as I said before you should
already been getting consent

00:16:06.326 --> 00:16:07.156 A:middle
from your user.

00:16:07.536 --> 00:16:11.666 A:middle
We've just made this easier and
consistent for you as an aid

00:16:11.666 --> 00:16:14.416 A:middle
to you by building it
into the operating system.

00:16:15.376 --> 00:16:20.586 A:middle
Now, note that calls on
OS X are synchronous.

00:16:21.066 --> 00:16:22.686 A:middle
So, you're going to
want to wrap them

00:16:22.686 --> 00:16:26.956 A:middle
in a dispatch block using GCD
or put them in NSOperation

00:16:26.956 --> 00:16:30.536 A:middle
to keep UI responsive so
that you can update the user.

00:16:31.616 --> 00:16:34.266 A:middle
Note that after the user
makes their initial choice,

00:16:34.636 --> 00:16:36.916 A:middle
all of the calls will
return immediately

00:16:37.116 --> 00:16:38.676 A:middle
because there's no
reason to block.

00:16:38.846 --> 00:16:41.686 A:middle
The user's already made
their decision as far

00:16:41.686 --> 00:16:43.706 A:middle
as what they want to
allow you to access.

00:16:44.336 --> 00:16:49.986 A:middle
As I said before, if the user
wants to grant you access

00:16:49.986 --> 00:16:52.286 A:middle
to the particular data
category, then you're going

00:16:52.286 --> 00:16:53.966 A:middle
to receive a populated
object back.

00:16:53.966 --> 00:16:57.046 A:middle
If the user decides
to not allow access

00:16:57.046 --> 00:16:59.726 A:middle
to a particular data category,
then you're either going

00:16:59.726 --> 00:17:03.036 A:middle
to get a nil value back
or an empty object.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:05.076 --> 00:17:08.756 A:middle
And for applications that
access systems services

00:17:08.756 --> 00:17:13.036 A:middle
such as AppleScript or
Spotlight to get to user data,

00:17:13.455 --> 00:17:16.876 A:middle
then the operating system will
prompt on behalf of the user

00:17:17.386 --> 00:17:24.756 A:middle
when your application
uses those services.

00:17:24.756 --> 00:17:26.326 A:middle
[ Pause ]

00:17:26.326 --> 00:17:30.676 A:middle
On OS X, applications can
participate in the App Sandbox.

00:17:30.676 --> 00:17:34.116 A:middle
And if you're shipping on the
Mac App Store, you're required

00:17:34.116 --> 00:17:36.626 A:middle
to participate in
the Apps Sandbox.

00:17:37.356 --> 00:17:39.196 A:middle
So, for those of you
who are unfamiliar

00:17:39.196 --> 00:17:42.696 A:middle
with what the App Sandbox
is, is a security design

00:17:42.876 --> 00:17:45.906 A:middle
that isolates your process
from other processes

00:17:46.166 --> 00:17:47.476 A:middle
and the operating system.

00:17:48.026 --> 00:17:51.066 A:middle
Typically, this Sandbox
processes have a tight set

00:17:51.066 --> 00:17:54.496 A:middle
of restrictions on the set of
resources that they can access.

00:17:55.126 --> 00:18:00.006 A:middle
For example, if the address book
is initially outside the Sandbox

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:00.046 --> 00:18:04.276 A:middle
for your process then you
won't be able to access it.

00:18:04.466 --> 00:18:06.596 A:middle
So, if you're going to
ship on the Mac App Store,

00:18:07.076 --> 00:18:09.366 A:middle
there's an additional set of
things that you're going to have

00:18:09.366 --> 00:18:12.526 A:middle
to do to get these
consent dialogs to show up.

00:18:12.526 --> 00:18:15.676 A:middle
And we'll talk about that in
a second that all you have

00:18:15.676 --> 00:18:18.316 A:middle
to do is add entitlements
to your application.

00:18:18.316 --> 00:18:23.096 A:middle
Now, if the permission set ever
changes for your application,

00:18:23.496 --> 00:18:27.546 A:middle
you'll be notified and the
OS may kill your application.

00:18:28.036 --> 00:18:31.916 A:middle
Now, the reason I say, "May", is
because it's the user's choice.

00:18:31.956 --> 00:18:34.816 A:middle
They can either decide to kill
the application immediately

00:18:35.576 --> 00:18:37.356 A:middle
or they can wait
until a later point.

00:18:37.906 --> 00:18:40.336 A:middle
This is to keep the
App Sandbox consistent

00:18:40.966 --> 00:18:44.516 A:middle
with the user's desires for
what in-application can access

00:18:44.516 --> 00:18:45.756 A:middle
as far as their user data.

00:18:46.466 --> 00:18:50.916 A:middle
So, the last point
I want to make is

00:18:50.916 --> 00:18:53.566 A:middle
that you should only build
with the entitlements

00:18:53.566 --> 00:18:54.906 A:middle
that you absolutely need.

00:18:55.166 --> 00:18:57.466 A:middle
This goes to least privilege.

00:18:57.466 --> 00:19:00.196 A:middle
You shouldn't be collecting
data or accessing data

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.196 --> 00:19:02.886 A:middle
that you don't truly need.

00:19:05.016 --> 00:19:08.146 A:middle
So, as I said before,
it's very easy

00:19:08.206 --> 00:19:10.126 A:middle
to add entitlements on OS X.

00:19:10.896 --> 00:19:15.556 A:middle
All you have to do is select
the target, go to capabilities,

00:19:15.556 --> 00:19:18.096 A:middle
and turn the App Sandbox on.

00:19:18.146 --> 00:19:21.456 A:middle
And then from there, you
can add the categories

00:19:21.506 --> 00:19:22.476 A:middle
that you want to access.

00:19:22.606 --> 00:19:25.336 A:middle
This particular example is
accessing Contacts and Calendar.

00:19:26.096 --> 00:19:29.596 A:middle
Now really, the UI for
this is simply a front-end

00:19:30.146 --> 00:19:32.106 A:middle
for editing the
entitlements.plist.

00:19:32.376 --> 00:19:36.186 A:middle
So, if you want to not use
the UI, you can always choose

00:19:36.186 --> 00:19:39.076 A:middle
to edit the plist
manually if you desire.

00:19:40.116 --> 00:19:41.746 A:middle
You can find more
information about this

00:19:42.056 --> 00:19:43.146 A:middle
on the Developer Center.

00:19:43.786 --> 00:19:53.926 A:middle
So now that we've talked about
OS X, let's talk about iOS.

00:19:54.616 --> 00:19:56.326 A:middle
So there are numbers
of similarities

00:19:56.326 --> 00:20:00.716 A:middle
and a few differences
on iOS from OS X.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:01.086 --> 00:20:05.306 A:middle
On iOS, applications are built
on top of the App Sandbox.

00:20:05.836 --> 00:20:08.816 A:middle
So therefore, participation
in it is obligatory

00:20:09.356 --> 00:20:13.776 A:middle
and you do not need to add
entitlements as you did on OS X.

00:20:14.616 --> 00:20:20.776 A:middle
However, unlike OS X, if the
permission set ever changes,

00:20:21.436 --> 00:20:24.746 A:middle
then the OS will immediately
kill your application,

00:20:24.746 --> 00:20:25.836 A:middle
there is no choice.

00:20:27.136 --> 00:20:33.066 A:middle
Also access to these APIs
are asynchronous on iOS

00:20:33.336 --> 00:20:35.796 A:middle
so the consent dialog will
be presented to the user,

00:20:36.486 --> 00:20:38.476 A:middle
and then synchronously return

00:20:38.806 --> 00:20:40.476 A:middle
and the permission
will come later

00:20:40.916 --> 00:20:42.796 A:middle
and data is usually returned

00:20:42.796 --> 00:20:46.456 A:middle
to either a delegate
or a block method.

00:20:46.766 --> 00:20:51.366 A:middle
On iOS, you can register for
Background Change Notifications.

00:20:51.956 --> 00:20:54.616 A:middle
And before the OS
kills your application,

00:20:54.686 --> 00:20:56.946 A:middle
it will call these
change notifications

00:20:57.796 --> 00:21:00.876 A:middle
and you can handle the
change appropriately.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:01.346 --> 00:21:03.546 A:middle
And honestly, this
was a good idea anyway

00:21:03.546 --> 00:21:07.806 A:middle
because when you're working with
user data that sync with iCloud

00:21:07.806 --> 00:21:10.066 A:middle
such as Contacts,
Calendars, Remainders,

00:21:10.366 --> 00:21:12.486 A:middle
that data can be shifting
out from underneath you

00:21:12.486 --> 00:21:15.666 A:middle
as the user could potentially
change them on other devices.

00:21:16.006 --> 00:21:18.756 A:middle
So, it's always good to register
for those change notifications.

00:21:19.326 --> 00:21:21.906 A:middle
So, there are number

00:21:21.906 --> 00:21:25.996 A:middle
of different ways you can
present these consent dialogs

00:21:26.136 --> 00:21:26.786 A:middle
to the user.

00:21:27.796 --> 00:21:34.166 A:middle
Both of these are
applicable on iOS and OS X.

00:21:35.166 --> 00:21:38.306 A:middle
For CLLocationManager, we can
simply trigger the Consent Alert

00:21:38.346 --> 00:21:41.016 A:middle
by calling
startUpdatingLocation.

00:21:42.836 --> 00:21:47.886 A:middle
Differently, we can trigger
Consent Alert for EKEventStore

00:21:48.586 --> 00:21:51.956 A:middle
by calling requestAccessTo
EntityType:completion.

00:21:55.636 --> 00:21:58.046 A:middle
I've highlighted
these APIs in yellow

00:21:58.046 --> 00:22:00.346 A:middle
because they represent
the difference

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:00.436 --> 00:22:02.856 A:middle
between iOS 6 and iOS 7.

00:22:03.916 --> 00:22:05.626 A:middle
You can find this
later on either

00:22:05.626 --> 00:22:10.066 A:middle
on the Dev Center
or on the slide.

00:22:10.616 --> 00:22:13.266 A:middle
So, now that we've talked
about all the different APIs,

00:22:13.266 --> 00:22:17.196 A:middle
let's actually take
you through some codes

00:22:17.196 --> 00:22:19.986 A:middle
since that's what you guys
build your business off of.

00:22:19.986 --> 00:22:25.716 A:middle
So we can see that access to
AVAudioSession is now managed

00:22:25.716 --> 00:22:29.566 A:middle
by the OS and all we have

00:22:29.566 --> 00:22:32.766 A:middle
to do is alloc init a
particular AV audio session.

00:22:32.946 --> 00:22:35.816 A:middle
And when we set the
category of the audio session

00:22:36.126 --> 00:22:39.256 A:middle
that is what's going to
present the dialog to the user.

00:22:39.856 --> 00:22:41.936 A:middle
The two categories
they're going to present,

00:22:42.576 --> 00:22:46.306 A:middle
the dialog to the user, are
AVAudioSessionCategoryRecord

00:22:47.246 --> 00:22:50.306 A:middle
and AVAudioSession
CategoryPlayAndRecord.

00:22:50.306 --> 00:22:54.526 A:middle
Now, if the user declines
to give you access to this,

00:22:55.046 --> 00:22:58.106 A:middle
then your audio stream is going
to be filled with all zeros

00:22:58.106 --> 00:23:02.196 A:middle
or essentially silence.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:02.706 --> 00:23:06.486 A:middle
Another way to trigger the
consent dialog is calling

00:23:06.486 --> 00:23:08.826 A:middle
requestRecordPermission:.

00:23:09.846 --> 00:23:12.846 A:middle
This will allow you
to request consent

00:23:13.316 --> 00:23:14.906 A:middle
from the user ahead of time.

00:23:15.396 --> 00:23:19.036 A:middle
Now, I've shown you two very
different ways attributed

00:23:19.036 --> 00:23:20.056 A:middle
in a consent dialog.

00:23:20.056 --> 00:23:21.066 A:middle
What's the difference?

00:23:21.956 --> 00:23:24.066 A:middle
Well, consider VoIP application.

00:23:24.916 --> 00:23:27.076 A:middle
The wrong time to be
prompting the user

00:23:27.076 --> 00:23:28.896 A:middle
for consent is the first time

00:23:28.896 --> 00:23:31.286 A:middle
that application is
making an outgoing call

00:23:31.286 --> 00:23:32.676 A:middle
or having an incoming call.

00:23:32.676 --> 00:23:36.116 A:middle
The user doesn't want to have to
deal with consent at that point

00:23:36.246 --> 00:23:39.286 A:middle
so you may wish to request
permission from the user ahead

00:23:39.286 --> 00:23:41.736 A:middle
of time using
requestRecordPermission:.

00:23:42.756 --> 00:23:45.866 A:middle
Some apps may like the Set
Category Method better.

00:23:46.126 --> 00:23:51.216 A:middle
I wanted to make a quick
point about routing

00:23:51.336 --> 00:23:55.556 A:middle
because all routes lead to the
microphone and consent dialogs.

00:23:56.496 --> 00:23:59.056 A:middle
So, for those of you
who are interfacing

00:23:59.056 --> 00:24:03.836 A:middle
with external hardware, then
all of the different routes

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:03.836 --> 00:24:06.956 A:middle
that you can interface with
such as the headphones,

00:24:07.556 --> 00:24:11.826 A:middle
the internal mic, and
the lightning connector

00:24:11.826 --> 00:24:15.926 A:middle
and even Bluetooth are going
to trigger that consent dialog.

00:24:15.926 --> 00:24:16.616 A:middle
[ Pause ]

00:24:16.616 --> 00:24:24.726 A:middle
In addition, we've added
support for Tencent Weibo.

00:24:25.156 --> 00:24:26.366 A:middle
So, all we're going to have

00:24:26.366 --> 00:24:28.876 A:middle
to do is alloc init
in account store.

00:24:28.876 --> 00:24:31.936 A:middle
And then we're going
to request access

00:24:31.936 --> 00:24:33.466 A:middle
to the Tencent Weibo account

00:24:34.966 --> 00:24:37.716 A:middle
by calling requestAccessTo
AccountWithType:.

00:24:38.986 --> 00:24:43.326 A:middle
And then the access level will
be returned in a block and the--

00:24:43.586 --> 00:24:46.836 A:middle
we will grant it and even you
can handle either accessing the

00:24:46.836 --> 00:24:49.356 A:middle
account or displaying
a failure to the user.

00:24:50.026 --> 00:24:55.386 A:middle
Note that all ACAccountType's
support the accessGranted:

00:24:55.386 --> 00:24:58.896 A:middle
selector so that you can
test your access levels

00:24:59.136 --> 00:25:02.606 A:middle
and display UI to the user
before you request access.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:06.536 --> 00:25:07.976 A:middle
So how do we test all this?

00:25:07.976 --> 00:25:09.686 A:middle
It's a lot of information.

00:25:10.066 --> 00:25:12.016 A:middle
Well, it's really
easy to test it.

00:25:12.016 --> 00:25:14.636 A:middle
All you have to do is run
your app, pretty easy, huh?

00:25:16.086 --> 00:25:20.276 A:middle
Note that there's no data
isolation currently supported

00:25:20.426 --> 00:25:22.676 A:middle
on the simulator,
however, it is coming

00:25:22.956 --> 00:25:24.716 A:middle
in a future seed of iOS 7.

00:25:25.266 --> 00:25:27.936 A:middle
So, until then, you need
to test on your device.

00:25:28.836 --> 00:25:31.976 A:middle
Note that you can only trigger
the Consent Prompt one time

00:25:32.806 --> 00:25:36.626 A:middle
so if you need to go back and
test this again, you either need

00:25:36.626 --> 00:25:40.456 A:middle
to go to-- on iOS, you need to
go to Settings, General Reset,

00:25:40.516 --> 00:25:44.796 A:middle
Reset Location in Privacy
or in OS X use tccutil

00:25:44.796 --> 00:25:47.866 A:middle
from the command line to reset
that particular data class.

00:25:48.716 --> 00:25:51.716 A:middle
You can also toggle
the switches yourself

00:25:51.946 --> 00:25:56.406 A:middle
to test how your application
will respond in Settings,

00:25:56.746 --> 00:26:01.386 A:middle
Privacy on iOS and
System Preferences,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:01.386 --> 00:26:02.556 A:middle
Security and Privacy.

00:26:03.566 --> 00:26:05.626 A:middle
That you should consider all

00:26:05.626 --> 00:26:08.496 A:middle
of the possible test cases
maybe even build them

00:26:08.496 --> 00:26:11.636 A:middle
into your test suite so you
don't ship any regressions.

00:26:12.056 --> 00:26:14.056 A:middle
There are four different
test cases.

00:26:14.566 --> 00:26:17.026 A:middle
The first one is Permission
Being Sought and Denied.

00:26:18.066 --> 00:26:20.236 A:middle
The second is Permission
Being Sought and Granted.

00:26:21.776 --> 00:26:23.746 A:middle
Third is Permission
Previously Denied.

00:26:24.466 --> 00:26:26.106 A:middle
And the last one is
Permission Restricted.

00:26:26.106 --> 00:26:29.226 A:middle
Now, Permission Restricted
is unique and we'll talk

00:26:29.226 --> 00:26:33.266 A:middle
about that in a second.

00:26:33.376 --> 00:26:36.176 A:middle
So up until this point,
we've been fairly optimistic

00:26:36.176 --> 00:26:39.986 A:middle
and assumed that user will grant
you access to their user data.

00:26:40.586 --> 00:26:44.576 A:middle
That's not always the case and
you should be prepared for that.

00:26:44.836 --> 00:26:47.246 A:middle
So, in some cases such as

00:26:47.246 --> 00:26:49.766 A:middle
when you're using the
UIImagePickerController

00:26:50.146 --> 00:26:53.366 A:middle
or the AddressBook Picker, the
OS will actually help you out

00:26:53.366 --> 00:26:56.326 A:middle
and display a lock page
to the user to remind them

00:26:56.636 --> 00:26:58.476 A:middle
that they have previous
revoked access

00:26:58.476 --> 00:26:59.906 A:middle
to that particular data class.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:01.186 --> 00:27:03.316 A:middle
However, just because
the OS can help you out,

00:27:03.316 --> 00:27:04.976 A:middle
it doesn't mean you
should rely on it

00:27:05.126 --> 00:27:06.786 A:middle
for all the different cases.

00:27:07.366 --> 00:27:09.556 A:middle
You should design a
rich fallback behavior.

00:27:09.556 --> 00:27:12.536 A:middle
Try and keep the user
engaged as much as possible.

00:27:12.866 --> 00:27:17.696 A:middle
Your code should be resilient
to the lack of data returned.

00:27:19.186 --> 00:27:21.086 A:middle
One note I want to
make about this is

00:27:21.086 --> 00:27:23.336 A:middle
that restrictions can
actually prevent users

00:27:23.336 --> 00:27:24.956 A:middle
from changing their
Privacy Settings.

00:27:25.306 --> 00:27:28.276 A:middle
They may actually be
unable to give you access.

00:27:28.556 --> 00:27:32.866 A:middle
So, your fallback behavior
should not be a dialog

00:27:32.866 --> 00:27:37.526 A:middle
that says, "Go flip the switch"
because they won't be able to.

00:27:38.636 --> 00:27:41.646 A:middle
An example of these
restrictions includes enterprise

00:27:41.646 --> 00:27:44.866 A:middle
configuration profiles, as
well as on-device restrictions.

00:27:45.446 --> 00:27:49.476 A:middle
So, it's really easy to test
your code with restrictions.

00:27:49.826 --> 00:27:52.656 A:middle
All you have to do is go to
Settings, General Restrictions

00:27:52.726 --> 00:27:55.716 A:middle
on iOS and from there you
can set up the restrictions

00:27:55.936 --> 00:28:01.816 A:middle
and whatever you'd like to test.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:01.856 --> 00:28:05.166 A:middle
So now that we've talked about
what data isolation, what it is?

00:28:05.166 --> 00:28:06.326 A:middle
How to take advantage of it?

00:28:06.616 --> 00:28:08.626 A:middle
And what's new on iOS and OS X?

00:28:09.156 --> 00:28:12.086 A:middle
Let's talk about how we
convey purpose to the user.

00:28:12.086 --> 00:28:12.806 A:middle
[ Pause ]

00:28:12.806 --> 00:28:19.536 A:middle
So, there are two points
that I want to make.

00:28:21.046 --> 00:28:25.236 A:middle
The first is that we
call these dialogs,

00:28:25.296 --> 00:28:27.976 A:middle
these consent alerts
just-in-time alerts.

00:28:29.076 --> 00:28:31.706 A:middle
This is a key differentiating
feature of our platform

00:28:31.746 --> 00:28:33.876 A:middle
and we believe that
we're truly better

00:28:33.876 --> 00:28:35.486 A:middle
at this than other platforms.

00:28:36.296 --> 00:28:38.886 A:middle
These consent alerts are
only shown to the user

00:28:38.886 --> 00:28:44.336 A:middle
at the exact time when the data
access is occurring not before.

00:28:45.546 --> 00:28:49.366 A:middle
This helps to clarify the
"when" in the user's mind.

00:28:50.476 --> 00:28:51.806 A:middle
It's the least intrusive.

00:28:52.536 --> 00:28:56.116 A:middle
I'm sure we've all
used the applications

00:28:56.466 --> 00:28:58.786 A:middle
that presented a
conga line of alerts

00:28:58.786 --> 00:29:00.336 A:middle
when you start up
the application.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:01.106 --> 00:29:05.316 A:middle
So consider your user interface
and you should delay asking

00:29:05.316 --> 00:29:08.236 A:middle
for the user's permission,
as long as, possible.

00:29:08.896 --> 00:29:12.636 A:middle
The second point that I
want to make about this is

00:29:13.086 --> 00:29:16.246 A:middle
that you should only be
asking the user for permission

00:29:16.246 --> 00:29:18.926 A:middle
to access the data classes
that you truly need.

00:29:19.796 --> 00:29:21.446 A:middle
If the user is confused

00:29:21.446 --> 00:29:24.916 A:middle
about why a particular
application needs to access

00:29:25.066 --> 00:29:28.646 A:middle
to a particular data class, then
they're more likely to question,

00:29:28.646 --> 00:29:30.876 A:middle
"Well, why does this
application need that,"

00:29:30.876 --> 00:29:37.556 A:middle
and potentially disengaged with
your applications as Katie said.

00:29:37.626 --> 00:29:42.376 A:middle
So to help you answer the, "Why
an application needs access

00:29:42.376 --> 00:29:43.646 A:middle
to a particular data class?"

00:29:44.096 --> 00:29:47.866 A:middle
We've given you a dedicated
space to tell the users.

00:29:48.496 --> 00:29:52.776 A:middle
Consider this your value
proposition of telling the user,

00:29:53.346 --> 00:29:56.576 A:middle
how allowing you access

00:29:56.636 --> 00:29:59.596 A:middle
to the particular data category
will enhance their experience.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:00.546 --> 00:30:04.416 A:middle
For example, in this particular
slide, we see that Camera would

00:30:04.416 --> 00:30:07.876 A:middle
like to access location so that
we can geotag photos and videos

00:30:08.186 --> 00:30:09.246 A:middle
with the current location,

00:30:09.246 --> 00:30:12.116 A:middle
perhaps to display
it on the map.

00:30:12.816 --> 00:30:17.826 A:middle
Also, for Aperture, we
can see that it wants

00:30:17.826 --> 00:30:21.686 A:middle
to access our Contacts so that
as we're using the Faces feature

00:30:21.686 --> 00:30:28.046 A:middle
in Aperture, it can suggest
contacts that we know.

00:30:28.596 --> 00:30:32.676 A:middle
So, each consent dialog
supports purpose strings.

00:30:34.266 --> 00:30:37.686 A:middle
However, you can only have one
purpose string per data class.

00:30:38.746 --> 00:30:40.066 A:middle
Now, you guys are
going to be coming

00:30:40.066 --> 00:30:42.616 A:middle
up with the purpose
strings and they're optional

00:30:42.616 --> 00:30:44.726 A:middle
but they're highly recommended

00:30:44.726 --> 00:30:46.986 A:middle
because it makes it
extremely transparent

00:30:46.986 --> 00:30:50.986 A:middle
to the user why you want to
access a particular data class.

00:30:52.236 --> 00:30:54.586 A:middle
For those of you who are
shipping internationally,

00:30:55.016 --> 00:30:57.956 A:middle
you can localize your purpose
strings for your native users

00:30:58.306 --> 00:31:01.466 A:middle
by simply putting the purpose
string in localizable.strings.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:02.666 --> 00:31:05.146 A:middle
And to add this purpose
strings, it couldn't be easier.

00:31:05.646 --> 00:31:10.226 A:middle
All you have to do is use Xcode
and edit the Info.plist and look

00:31:10.226 --> 00:31:15.366 A:middle
for the "Privacy -" whatever
data class you want to access.

00:31:15.426 --> 00:31:17.326 A:middle
So, we can see here,
I have an application,

00:31:18.126 --> 00:31:20.746 A:middle
Restaurant application,
and we're telling the user

00:31:20.746 --> 00:31:22.456 A:middle
that we want to access
their Calendars

00:31:22.456 --> 00:31:24.786 A:middle
so that we can put their
restaurant reservations

00:31:24.786 --> 00:31:25.256 A:middle
on there.

00:31:25.256 --> 00:31:26.726 A:middle
We want to access
their contacts.

00:31:26.726 --> 00:31:29.676 A:middle
We can automatically add
their name to the reservation.

00:31:29.826 --> 00:31:31.146 A:middle
We want to access their photos

00:31:31.146 --> 00:31:33.636 A:middle
so they can upload all
those great pictures of food

00:31:33.636 --> 00:31:36.136 A:middle
that they ate after they
complete the reservation.

00:31:36.136 --> 00:31:41.966 A:middle
And note that just like
before with the Entitlements,

00:31:42.236 --> 00:31:46.786 A:middle
the Xcode UI is simply a
front-end for the info.plist.

00:31:46.786 --> 00:31:48.076 A:middle
So, you could always edit

00:31:48.076 --> 00:31:50.666 A:middle
that info.plist manually
if you so choose.

00:31:52.336 --> 00:31:56.286 A:middle
Here are all the different
purpose string keys

00:31:56.286 --> 00:31:56.996 A:middle
that we support.

00:31:57.376 --> 00:31:59.076 A:middle
Some of these are iOS only.

00:31:59.516 --> 00:32:00.996 A:middle
So, make sure you pay
attention to that.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:01.926 --> 00:32:04.856 A:middle
You can always find this
information again in the slides

00:32:05.546 --> 00:32:08.496 A:middle
or on the Dev Center
after this talk.

00:32:09.276 --> 00:32:14.266 A:middle
We have some great sample
code out there for iOS.

00:32:15.486 --> 00:32:19.436 A:middle
It's available today and you can
find it on the Developer Center,

00:32:19.436 --> 00:32:21.946 A:middle
just search for PrivacyPrompts
Project

00:32:22.926 --> 00:32:25.306 A:middle
or you could find the link
in the related materials

00:32:25.306 --> 00:32:26.266 A:middle
at the end of this talk.

00:32:27.306 --> 00:32:30.976 A:middle
Use it in your app, go ahead,
or just experiment see with--

00:32:31.226 --> 00:32:35.046 A:middle
to see what it happens and
how you use data isolation.

00:32:38.156 --> 00:32:42.066 A:middle
So, there are some key points
that I want to live you

00:32:42.066 --> 00:32:43.446 A:middle
at before Katie comes back.

00:32:44.266 --> 00:32:48.686 A:middle
The first thing is, build
privacy into your application.

00:32:49.276 --> 00:32:51.516 A:middle
Spend as much time
thinking about privacy

00:32:52.036 --> 00:32:56.296 A:middle
as you do other aspects of
your application such as colors

00:32:56.296 --> 00:32:59.346 A:middle
or what animations you're going
to be presenting to the user.

00:32:59.886 --> 00:33:01.516 A:middle
Start today.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:01.966 --> 00:33:06.236 A:middle
After this talk, spend one
hour adjusting your application

00:33:06.496 --> 00:33:07.916 A:middle
to use purpose strings.

00:33:08.406 --> 00:33:09.756 A:middle
In fact, we're having a lab.

00:33:09.756 --> 00:33:11.716 A:middle
Right after this talk at 10:15,

00:33:11.986 --> 00:33:14.726 A:middle
down in Core OS,
Lab A, come to it.

00:33:15.766 --> 00:33:16.516 A:middle
We'll help you out.

00:33:16.516 --> 00:33:17.816 A:middle
We'll answer your questions.

00:33:17.816 --> 00:33:23.166 A:middle
There are three new data
categories for data isolation

00:33:23.596 --> 00:33:27.756 A:middle
on iOS on OS X, Microphone,
Tencent Weibo,

00:33:27.756 --> 00:33:30.266 A:middle
and Camera in some reasons only.

00:33:31.736 --> 00:33:33.816 A:middle
Note that data isolation
applies to all

00:33:33.816 --> 00:33:36.566 A:middle
of Apple's platforms
both iOS in OS X.

00:33:36.906 --> 00:33:40.616 A:middle
have you-- if you're shipping
in the Mac App Store for OS X,

00:33:40.896 --> 00:33:42.996 A:middle
there's additional work that
you're going to have to do

00:33:42.996 --> 00:33:45.756 A:middle
to get those consent
dialogs to show up.

00:33:46.306 --> 00:33:48.746 A:middle
And remember that purpose
strings are your friends.

00:33:49.316 --> 00:33:51.616 A:middle
They help explain
the value proposition

00:33:51.616 --> 00:33:55.116 A:middle
to the user making them
more likely to engage

00:33:55.116 --> 00:33:55.996 A:middle
with your application.

00:33:55.996 --> 00:34:00.476 A:middle
And then lastly, make sure you
understand all the implications

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.476 --> 00:34:03.216 A:middle
of data isolation
on iOS 7, OS X.

00:34:03.566 --> 00:34:05.186 A:middle
So, test your app thoroughly.

00:34:06.156 --> 00:34:08.706 A:middle
So, with that, I'm going to give
it back to Katie to take you

00:34:08.706 --> 00:34:10.476 A:middle
through some privacy
best practices.

00:34:10.476 --> 00:34:11.246 A:middle
[Applause]

00:34:11.246 --> 00:34:15.996 A:middle
&gt;&gt; Thanks David.

00:34:16.516 --> 00:34:19.016 A:middle
So, now we're going
to finish off talking

00:34:19.016 --> 00:34:22.366 A:middle
about some privacy best
practices that you can apply

00:34:22.366 --> 00:34:24.396 A:middle
to help maintain
trust with your users.

00:34:24.666 --> 00:34:28.775 A:middle
We're going to touch on
transparency, control,

00:34:28.775 --> 00:34:32.346 A:middle
talk about and walkthrough
examples

00:34:32.346 --> 00:34:35.206 A:middle
for applying data
collection techniques.

00:34:36.295 --> 00:34:40.966 A:middle
Talk about fingerprinting and
the built-in tools you can use

00:34:41.016 --> 00:34:42.045 A:middle
to apply data protection.

00:34:42.045 --> 00:34:45.576 A:middle
So, we're going to
start with transparency.

00:34:45.576 --> 00:34:46.156 A:middle
What is that?

00:34:46.585 --> 00:34:48.096 A:middle
Transparency is being clear

00:34:48.096 --> 00:34:51.106 A:middle
to your users what is actually
going on, what's happening.

00:34:52.216 --> 00:34:55.916 A:middle
One way that you can do this is

00:34:56.136 --> 00:34:59.656 A:middle
if you collect data then
show that to your users.

00:34:59.686 --> 00:35:02.256 A:middle
Allow them a way to
examine what the data is.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:02.656 --> 00:35:07.206 A:middle
Your privacy policy is another
great way to be transparent

00:35:07.206 --> 00:35:09.576 A:middle
and privacy policies
are very important.

00:35:09.856 --> 00:35:13.006 A:middle
Your privacy policy should
include what data you plan

00:35:13.006 --> 00:35:18.436 A:middle
to collect, what you plan to do
with that data, and if you plan

00:35:18.436 --> 00:35:19.826 A:middle
to share with any third parties.

00:35:21.246 --> 00:35:24.816 A:middle
We make it easy to make your
privacy policy available

00:35:24.816 --> 00:35:25.426 A:middle
for users.

00:35:25.836 --> 00:35:28.766 A:middle
You can submit your
link in iTunes Connect

00:35:28.876 --> 00:35:31.336 A:middle
and then it will
automatically show up across all

00:35:31.336 --> 00:35:32.476 A:middle
of the App Store clients.

00:35:33.976 --> 00:35:36.876 A:middle
So, here is iTunes Connect

00:35:36.876 --> 00:35:41.516 A:middle
and you can enter your
URL right underneath the

00:35:41.516 --> 00:35:43.706 A:middle
description section.

00:35:46.756 --> 00:35:49.396 A:middle
Then, automatically it'll show

00:35:49.396 --> 00:35:53.396 A:middle
up across all App Store
clients on the Details pane.

00:35:53.846 --> 00:35:58.916 A:middle
So, David talked a lot about
control and there's two pieces

00:35:58.916 --> 00:36:00.296 A:middle
that I just want to
quickly highlight.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:00.926 --> 00:36:05.036 A:middle
When you're asking for
permission do it in context

00:36:06.296 --> 00:36:08.446 A:middle
and do it at the
time you need it.

00:36:09.026 --> 00:36:11.636 A:middle
This is the best way to drive
engagement with your users,

00:36:11.636 --> 00:36:13.446 A:middle
when they clearly
understand what's happening

00:36:14.146 --> 00:36:15.186 A:middle
and they feel in control.

00:36:15.656 --> 00:36:21.776 A:middle
So, data collection is a great
tool to improve your app.

00:36:22.696 --> 00:36:23.956 A:middle
It's very powerful.

00:36:24.536 --> 00:36:26.726 A:middle
Understand what your usage
pattern is for users.

00:36:26.726 --> 00:36:28.206 A:middle
What are your popular features.

00:36:29.346 --> 00:36:33.906 A:middle
Where users running into
issues, errors, crashing.

00:36:34.846 --> 00:36:37.896 A:middle
But all data collection
should be decision driven.

00:36:38.696 --> 00:36:42.606 A:middle
You should have an engineering
or business decision that made

00:36:42.736 --> 00:36:45.136 A:middle
from the data you collect.

00:36:45.276 --> 00:36:47.446 A:middle
As soon as the data
flows in, you'll be able

00:36:47.446 --> 00:36:48.466 A:middle
to make that decision.

00:36:49.426 --> 00:36:51.876 A:middle
I really feel like
data collection,

00:36:51.936 --> 00:36:56.106 A:middle
all data collection impacts
privacy to a certain extent.

00:36:56.846 --> 00:36:58.726 A:middle
Now, this doesn't mean

00:36:58.786 --> 00:37:00.556 A:middle
that I think all data
collection is bad.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:02.296 --> 00:37:06.476 A:middle
But you should weigh the
positives and the risks

00:37:07.156 --> 00:37:12.186 A:middle
and make sure that
they balance out.

00:37:12.386 --> 00:37:15.966 A:middle
So, we've all heard about
data breaches in our industry

00:37:16.366 --> 00:37:18.916 A:middle
and you want to make sure
that the data that you collect

00:37:19.376 --> 00:37:22.766 A:middle
if released you have a solid
explanation of what you're going

00:37:22.766 --> 00:37:25.486 A:middle
to do with that data and
how it improves your app

00:37:25.756 --> 00:37:26.566 A:middle
for your users.

00:37:27.636 --> 00:37:31.466 A:middle
If not, that will only
further impact your reputation.

00:37:31.986 --> 00:37:35.816 A:middle
So now, the first
technique we're going

00:37:35.816 --> 00:37:37.486 A:middle
to apply, its anonymization.

00:37:38.446 --> 00:37:40.226 A:middle
This is removing traces

00:37:40.226 --> 00:37:43.646 A:middle
that will tie this log
back to the originator.

00:37:44.626 --> 00:37:48.006 A:middle
So, here we have a log
for an illegal token

00:37:48.006 --> 00:37:49.376 A:middle
and you can see we
have a path in it.

00:37:50.316 --> 00:37:52.146 A:middle
Now, paths are very,
very sensitive.

00:37:52.846 --> 00:37:56.576 A:middle
We've have a proposed user
name, Johnny Appleseed a neat --

00:37:56.656 --> 00:37:58.176 A:middle
code name, Project Zanzibar.

00:37:59.046 --> 00:38:00.516 A:middle
And we know that
something is happening

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.516 --> 00:38:02.976 A:middle
for Project Zanzibar probably
in this financial year.

00:38:03.836 --> 00:38:05.796 A:middle
So, what's the first
thing we should do?

00:38:06.026 --> 00:38:06.636 A:middle
Remove the path.

00:38:08.076 --> 00:38:11.866 A:middle
But file names can still
contain a lot of user data.

00:38:11.866 --> 00:38:14.746 A:middle
People put their names in
it and even code names.

00:38:15.556 --> 00:38:20.626 A:middle
So, what's much better is to
eliminate all user strings.

00:38:21.326 --> 00:38:25.146 A:middle
Only log the type of file that
this error happened within.

00:38:25.596 --> 00:38:28.606 A:middle
It gives you enough information
to be able to track down

00:38:28.606 --> 00:38:32.436 A:middle
and start debugging without
deanonymizing the log.

00:38:34.496 --> 00:38:36.316 A:middle
The second one is aggregation,

00:38:36.696 --> 00:38:41.316 A:middle
and this is grouping together
different logs over time.

00:38:41.966 --> 00:38:46.056 A:middle
You can do this over different
time periods 24 hours a week.

00:38:46.676 --> 00:38:50.266 A:middle
So, let's start out with the
same log that we had last time.

00:38:51.406 --> 00:38:53.786 A:middle
Now, we have grouped it together

00:38:53.786 --> 00:38:56.236 A:middle
under keynote file
errors and others.

00:38:57.166 --> 00:38:59.906 A:middle
So here we still have the
ability to see trends,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:00.666 --> 00:39:01.976 A:middle
understand the frequency,

00:39:02.096 --> 00:39:08.986 A:middle
but without having
all of the raw events.

00:39:08.986 --> 00:39:10.456 A:middle
Sampling is another technique.

00:39:11.416 --> 00:39:16.136 A:middle
This is only gathering, logging
a portion of either the events

00:39:16.586 --> 00:39:19.176 A:middle
or gathering data from only
a portion of your users.

00:39:19.176 --> 00:39:23.876 A:middle
So, let's start out with
the log that we deanonymize.

00:39:25.456 --> 00:39:29.686 A:middle
What would be better,
log from only 1 in 10,

00:39:29.686 --> 00:39:31.936 A:middle
1 in 100, 1 in 10,000 machines.

00:39:32.446 --> 00:39:36.786 A:middle
Now here, we still
have the distribution

00:39:36.786 --> 00:39:38.726 A:middle
so we can still make
conclusions.

00:39:39.496 --> 00:39:42.616 A:middle
But we don't need to collect
data from every single user.

00:39:43.136 --> 00:39:47.286 A:middle
So, depending on the
decision that is driving you

00:39:47.286 --> 00:39:50.886 A:middle
to collect this data, you
also may be able to collect 1

00:39:50.886 --> 00:39:52.946 A:middle
in 10, 1 in 100 events.

00:39:54.416 --> 00:39:57.166 A:middle
This makes it so you don't
have a complete picture

00:39:57.706 --> 00:39:58.746 A:middle
for a single user.

00:39:59.296 --> 00:40:00.776 A:middle
You still have the
same amount of data,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:01.216 --> 00:40:02.696 A:middle
you'll still have
your distribution

00:40:03.096 --> 00:40:05.406 A:middle
but you eliminate
the full picture.

00:40:09.276 --> 00:40:13.116 A:middle
Deresolution is a technique
that eliminates the number

00:40:13.116 --> 00:40:22.996 A:middle
of significant figures you can
apply it mostly to time, size,

00:40:24.046 --> 00:40:25.996 A:middle
and a duration metrics.

00:40:27.356 --> 00:40:30.796 A:middle
So, here we have a full
timestamp and a size

00:40:30.966 --> 00:40:32.336 A:middle
and it looks pretty anonymous.

00:40:32.566 --> 00:40:35.946 A:middle
If I look at this I think,
pretty good, but the things

00:40:35.946 --> 00:40:39.196 A:middle
to think about is if I have
logged this type of information

00:40:39.196 --> 00:40:43.676 A:middle
on the client and this type
of information on the server.

00:40:44.176 --> 00:40:48.196 A:middle
By recombining the two we may
be deanonymizing our client logs

00:40:48.196 --> 00:40:52.076 A:middle
that we worked so hard, applied
other techniques to deanonymize.

00:40:53.746 --> 00:40:55.436 A:middle
So, what should we do?

00:40:55.436 --> 00:40:58.576 A:middle
Let's eliminate minutes,
let's eliminate seconds,

00:40:59.766 --> 00:41:03.446 A:middle
and bucket at the size.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:03.446 --> 00:41:05.196 A:middle
But you can do this
in multiple times.

00:41:05.546 --> 00:41:06.656 A:middle
We can go one further.

00:41:07.486 --> 00:41:08.766 A:middle
Let's say the decision
we're trying

00:41:08.766 --> 00:41:13.556 A:middle
to understand is how much
data is being processed

00:41:13.556 --> 00:41:14.556 A:middle
on which day is.

00:41:14.556 --> 00:41:17.116 A:middle
I want to make sure that
our service don't go

00:41:17.116 --> 00:41:18.746 A:middle
down on Fridays versus Sundays.

00:41:19.246 --> 00:41:22.026 A:middle
So, it may not be important to
know this happened to May 4th

00:41:22.736 --> 00:41:25.666 A:middle
but watch the trend of
how much data is processed

00:41:25.666 --> 00:41:27.156 A:middle
on a Friday versus a Sunday.

00:41:27.656 --> 00:41:32.856 A:middle
[ Pause ]

00:41:33.356 --> 00:41:35.646 A:middle
The next technique is decay

00:41:35.646 --> 00:41:39.216 A:middle
and this applying
deresolution over time.

00:41:39.216 --> 00:41:42.116 A:middle
Now, you may have someone
on your team that says, "No,

00:41:42.116 --> 00:41:43.406 A:middle
we can't deres the data.

00:41:43.896 --> 00:41:46.896 A:middle
I need the full timestamp.

00:41:46.896 --> 00:41:47.756 A:middle
I need the full size.

00:41:47.756 --> 00:41:48.776 A:middle
I need to be able to track

00:41:48.776 --> 00:41:51.256 A:middle
down this individual
transaction or event.

00:41:52.266 --> 00:41:55.366 A:middle
Usually, this is because of
security or fraud reasons.

00:41:56.346 --> 00:41:59.536 A:middle
But just because you have a
need for this type of resolution

00:41:59.976 --> 00:42:02.966 A:middle
on day one does not
mean on the day seven

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:02.966 --> 00:42:04.366 A:middle
that you have the same need.

00:42:04.876 --> 00:42:08.816 A:middle
You can apply deresolution
over time.

00:42:09.196 --> 00:42:11.556 A:middle
So, first let's take this
over seven days later.

00:42:11.556 --> 00:42:13.756 A:middle
We're going to eliminate
the timestamp fully.

00:42:13.806 --> 00:42:16.806 A:middle
So, you can do this
more than once.

00:42:16.806 --> 00:42:18.936 A:middle
You can do this after
three months, six months,

00:42:18.936 --> 00:42:22.276 A:middle
a year and you can do it
multiple times on the same file.

00:42:22.566 --> 00:42:26.236 A:middle
So, here after 30 days now we've
eliminated the full date time.

00:42:26.366 --> 00:42:32.646 A:middle
So, I've talked a lot about what
decision is driving the data

00:42:32.646 --> 00:42:36.556 A:middle
and how that helps you choose
what collection technique

00:42:36.556 --> 00:42:37.776 A:middle
to apply.

00:42:38.296 --> 00:42:40.216 A:middle
But if you ask yourself
the question,

00:42:40.816 --> 00:42:43.326 A:middle
why am I collecting this
data and you can think

00:42:43.326 --> 00:42:46.486 A:middle
of a good answer or
maybe you say, "Oh,

00:42:46.486 --> 00:42:48.106 A:middle
I think it'd be really
interesting."

00:42:48.786 --> 00:42:52.176 A:middle
Then the best thing to do is
to not collect the data at all.

00:42:52.176 --> 00:42:52.243 A:middle
[ Pause ]

00:42:52.243 --> 00:43:01.196 A:middle
Now, I've walk through
six different techniques

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:01.196 --> 00:43:04.886 A:middle
that you can apply and you can
apply them all on the same log.

00:43:05.256 --> 00:43:08.036 A:middle
But there are tools in
your tool belt to use

00:43:09.126 --> 00:43:10.326 A:middle
and to apply throughout.

00:43:10.516 --> 00:43:11.976 A:middle
So, this is the things
you should think

00:43:11.976 --> 00:43:14.976 A:middle
about when you're adding
new logging, new features

00:43:15.546 --> 00:43:18.066 A:middle
or take a look back at the
logging you already have

00:43:18.356 --> 00:43:23.846 A:middle
and think which of these can
I use and apply to there.

00:43:23.996 --> 00:43:26.846 A:middle
So, fingerprinting is something
that's coming up more and more

00:43:26.846 --> 00:43:30.746 A:middle
in the news and what is it, what
do they mean by fingerprinting?

00:43:32.136 --> 00:43:34.336 A:middle
This is one of the
large collection

00:43:34.336 --> 00:43:37.496 A:middle
of fairly static
metrics are collected

00:43:37.496 --> 00:43:41.186 A:middle
and then it can form a
unique persistent fingerprint

00:43:41.626 --> 00:43:44.916 A:middle
and this will identify
a specific device.

00:43:46.726 --> 00:43:49.946 A:middle
This doesn't need to contain
any personal information

00:43:50.466 --> 00:43:53.156 A:middle
and it can be done accidentally.

00:43:53.446 --> 00:43:55.276 A:middle
A lot of times, this can
be done when you're trying

00:43:55.276 --> 00:43:57.456 A:middle
to understand, "What
is the configuration

00:43:57.456 --> 00:43:59.596 A:middle
that most users have set up?"

00:43:59.596 --> 00:44:03.706 A:middle
Things like timestamps or what
libraries are in his phone.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:03.706 --> 00:44:07.596 A:middle
But the key thing here is,

00:44:07.906 --> 00:44:10.546 A:middle
you need to apply the
techniques I mentioned to try

00:44:10.546 --> 00:44:11.966 A:middle
and eliminate this risk.

00:44:13.396 --> 00:44:16.006 A:middle
Especially deresolution
is a great one to use

00:44:16.006 --> 00:44:18.166 A:middle
because as the buckets
get bigger,

00:44:18.586 --> 00:44:23.626 A:middle
makes it a smaller chance to
any user will have a unique set

00:44:23.626 --> 00:44:26.416 A:middle
of data across all of
your data collection.

00:44:26.916 --> 00:44:32.426 A:middle
[ Pause ]

00:44:32.926 --> 00:44:37.126 A:middle
So, you're users have trusted
you with a lot of data.

00:44:38.796 --> 00:44:41.296 A:middle
They may have given you their
name or many other things

00:44:41.296 --> 00:44:45.456 A:middle
and it's important to use the
tools that we provide in the OS

00:44:45.536 --> 00:44:48.336 A:middle
to help protect that data.

00:44:48.496 --> 00:44:52.226 A:middle
So, first thing is
application credentials.

00:44:52.486 --> 00:44:54.916 A:middle
You should always be
storing them in the keychain.

00:44:55.396 --> 00:44:59.556 A:middle
Think twice whether you
synchronize the credentials

00:44:59.556 --> 00:45:00.376 A:middle
across devices.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:00.746 --> 00:45:03.676 A:middle
Do you really need to?

00:45:03.906 --> 00:45:05.366 A:middle
Encrypt your traffic.

00:45:06.006 --> 00:45:11.036 A:middle
Use SSL/TLS and really
on this one it's time.

00:45:12.216 --> 00:45:16.076 A:middle
Also, when you're
storing data on disk,

00:45:16.076 --> 00:45:17.826 A:middle
use the built-in
data protection.

00:45:18.156 --> 00:45:20.276 A:middle
There's a great talk
from last year,

00:45:21.056 --> 00:45:24.676 A:middle
Session 706 called
Protecting User's Data

00:45:24.676 --> 00:45:27.756 A:middle
that walks you clearly
through the steps of how

00:45:27.756 --> 00:45:29.146 A:middle
to apply data protection.

00:45:29.646 --> 00:45:34.556 A:middle
[ Pause ]

00:45:35.056 --> 00:45:37.116 A:middle
So, these policies
and techniques

00:45:37.116 --> 00:45:39.246 A:middle
that I mentioned
are all great ways

00:45:39.246 --> 00:45:42.416 A:middle
and great things you can
apply to help maintain

00:45:42.416 --> 00:45:44.656 A:middle
that relationship
with your users.

00:45:44.826 --> 00:45:47.716 A:middle
There are more that we didn't
get today like privacy by design

00:45:47.716 --> 00:45:50.526 A:middle
and there'll be a link in
the more information section

00:45:50.526 --> 00:45:52.116 A:middle
that can point you
to more of these.

00:45:52.626 --> 00:45:56.056 A:middle
But I want to leave you
with one last thing.

00:45:56.176 --> 00:45:57.796 A:middle
It's just an easy trick I use.

00:45:58.586 --> 00:46:01.966 A:middle
I call it "the parent
or grandparent test."

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:01.966 --> 00:46:06.326 A:middle
If I explain in clear language
to my grandmother, what's going

00:46:06.326 --> 00:46:10.286 A:middle
on and why that behavior
is happening.

00:46:10.326 --> 00:46:12.636 A:middle
If she nods, and has understand?

00:46:12.986 --> 00:46:14.936 A:middle
Then good, we're
on the right road.

00:46:15.576 --> 00:46:19.466 A:middle
But if she doesn't
understand, looks confused,

00:46:19.646 --> 00:46:23.636 A:middle
or gives me a not great look
then that's the time to go back,

00:46:23.636 --> 00:46:27.396 A:middle
look at these policies that I
mentioned and apply them again.

00:46:27.956 --> 00:46:32.776 A:middle
So, since its Friday, all the
related sessions have already

00:46:32.776 --> 00:46:36.326 A:middle
happened so, these are
great talks for you

00:46:36.326 --> 00:46:38.036 A:middle
to go look online and watch.

00:46:38.296 --> 00:46:40.636 A:middle
The first one is Protecting
Secrets with the Keychain.

00:46:40.636 --> 00:46:43.556 A:middle
And the second one
is A Practical Guide

00:46:43.556 --> 00:46:44.486 A:middle
to the App Sandbox.

00:46:45.706 --> 00:46:48.656 A:middle
Also, the one I just mentioned
about data protection.

00:46:49.846 --> 00:46:51.626 A:middle
So, if you think of
a question later,

00:46:51.746 --> 00:46:53.916 A:middle
Paul Danbold is a
great resource.

00:46:53.916 --> 00:46:56.356 A:middle
He'll point you or your
questions to the right place.

00:46:56.466 --> 00:47:01.796 A:middle
Also, David created some great
sample code, go check it out.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:02.036 --> 00:47:04.206 A:middle
Use it. Learn from it.

00:47:05.156 --> 00:47:09.096 A:middle
There's also more documentation
under the programming guide

00:47:10.496 --> 00:47:14.716 A:middle
that you can find to
understand more about privacy

00:47:14.716 --> 00:47:17.006 A:middle
and you can dive-in deeper.

00:47:17.106 --> 00:47:18.606 A:middle
You can always find
great information

00:47:18.646 --> 00:47:19.956 A:middle
on Apple Developer Forums.

00:47:21.936 --> 00:47:24.146 A:middle
Now, I know we talked
about a whole bunch

00:47:24.146 --> 00:47:26.016 A:middle
of different things today.

00:47:26.016 --> 00:47:29.746 A:middle
Identifiers, purpose
strings, data protection.

00:47:30.096 --> 00:47:33.656 A:middle
But I want leave you with a
few clear actions to go do.

00:47:34.656 --> 00:47:39.356 A:middle
Test on iOS 7, especially if
you have an app in the App Store

00:47:39.356 --> 00:47:40.396 A:middle
that is several years old.

00:47:40.396 --> 00:47:42.686 A:middle
You want to understand and sure

00:47:42.686 --> 00:47:44.086 A:middle
that you do not have
the user impact.

00:47:45.396 --> 00:47:46.766 A:middle
Test all cases.

00:47:47.786 --> 00:47:49.456 A:middle
Also add purpose strings.

00:47:49.646 --> 00:47:51.946 A:middle
And if you've have not
already added a link

00:47:51.946 --> 00:47:56.126 A:middle
to your privacy policy,
please go add it.

00:47:56.126 --> 00:47:59.246 A:middle
All of your collection should
be driven by decisions.

00:47:59.816 --> 00:48:03.116 A:middle
And lastly, maintain
your relationship

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:03.116 --> 00:48:06.606 A:middle
and strengthen your relationship
with your users by thinking

00:48:06.736 --> 00:48:10.146 A:middle
through privacy implications
throughout everywhere

00:48:10.146 --> 00:48:10.876 A:middle
in your design.

00:48:11.796 --> 00:48:14.976 A:middle
Now, thank you very much both
on behalf of me and David

00:48:15.226 --> 00:48:17.176 A:middle
and have a great rest of WWDC.

00:48:17.676 --> 00:48:25.280 A:middle
[ Applause ]

