WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:06.516 --> 00:00:17.500 A:middle
[ Music ]

00:00:21.516 --> 00:00:24.276 A:middle
[ Applause ]

00:00:24.776 --> 00:00:25.436 A:middle
&gt;&gt; Good afternoon.

00:00:28.346 --> 00:00:30.166 A:middle
Hi. My name is Matthew
Ricketson.

00:00:30.736 --> 00:00:34.106 A:middle
I'm a software engineer working
on UIKit, and today we're going

00:00:34.106 --> 00:00:38.396 A:middle
to talk about Focus
Interaction on tvOS.

00:00:39.016 --> 00:00:42.696 A:middle
Last year we introduced
tvOS, a great new platform

00:00:42.886 --> 00:00:44.556 A:middle
for building apps on Apple TV.

00:00:46.306 --> 00:00:48.796 A:middle
And whether you're building
a brand new app for Apple TV

00:00:49.146 --> 00:00:52.636 A:middle
or looking to port an existing
app over from another platform,

00:00:53.146 --> 00:00:54.276 A:middle
it's immediately obvious

00:00:54.376 --> 00:00:56.926 A:middle
that Apple TV is unlike
other Apple devices.

00:00:58.046 --> 00:01:02.256 A:middle
There's no touchscreen on a TV
or a mouse because these forms


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.046 --> 00:01:02.256 A:middle
There's no touchscreen on a TV
or a mouse because these forms

00:01:02.256 --> 00:01:04.215 A:middle
of user input just
don't make sense

00:01:04.215 --> 00:01:05.546 A:middle
in a living room environment.

00:01:06.186 --> 00:01:10.866 A:middle
Instead, we use this, a
remote, like the Siri Remote,

00:01:11.246 --> 00:01:13.926 A:middle
in order to control
Apple TV from a distance.

00:01:15.056 --> 00:01:18.386 A:middle
The Siri Remote and Apple TV
have been designed together

00:01:18.856 --> 00:01:21.046 A:middle
to provide the best
navigation experience.

00:01:21.566 --> 00:01:26.046 A:middle
But Apple TV also supports
many other input devices,

00:01:26.556 --> 00:01:29.096 A:middle
like game controllers,
Bluetooth keyboards,

00:01:29.096 --> 00:01:31.486 A:middle
and the new remote app.

00:01:32.036 --> 00:01:35.276 A:middle
And sometimes users might feel
more comfortable using one

00:01:35.276 --> 00:01:39.316 A:middle
of these other input devices in
order to control their Apple TV,

00:01:39.926 --> 00:01:42.396 A:middle
and tvOS helps you
support all of these

00:01:42.786 --> 00:01:46.046 A:middle
through a user interaction
model that we call Focus.

00:01:46.386 --> 00:01:51.636 A:middle
With Focus interaction, users
indirectly control the UI

00:01:52.236 --> 00:01:54.616 A:middle
through a single focused
user interface element

00:01:55.226 --> 00:01:56.296 A:middle
and they can move focus

00:01:56.346 --> 00:01:58.946 A:middle
around the screen
using any input device.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.456 --> 00:02:05.006 A:middle
Users will expect that your
apps are optimized toward great

00:02:05.006 --> 00:02:06.016 A:middle
with Focus interaction.

00:02:06.916 --> 00:02:10.566 A:middle
And to help with that, UIKit
provides built-in focus behavior

00:02:10.566 --> 00:02:14.446 A:middle
for all of its standard
controls; however,

00:02:14.476 --> 00:02:17.576 A:middle
you may also want to customize
the focus behavior in your apps

00:02:17.576 --> 00:02:19.086 A:middle
in order to take them
to the next level

00:02:19.086 --> 00:02:21.466 A:middle
and provide an even
better user experience.

00:02:21.966 --> 00:02:24.896 A:middle
And for that, UIKit
exposes a Focus API.

00:02:25.746 --> 00:02:30.016 A:middle
Now today's talk is
about that Focus API

00:02:30.276 --> 00:02:31.936 A:middle
and we split it into two parts.

00:02:32.336 --> 00:02:34.596 A:middle
First, we're going to
dive into what's new

00:02:34.596 --> 00:02:36.656 A:middle
in the Focus API
this year in tvOS 10.

00:02:36.656 --> 00:02:40.926 A:middle
And then in the second part
of the talk, we're going to go

00:02:40.926 --> 00:02:43.736 A:middle
into an extended case study
on how to build a custom,

00:02:44.106 --> 00:02:46.716 A:middle
fully focusable control
completely from scratch.

00:02:47.286 --> 00:02:49.066 A:middle
This is a great demo
that will show you how

00:02:49.066 --> 00:02:51.876 A:middle
to get started building
unique interaction experiences

00:02:51.876 --> 00:02:54.516 A:middle
in your tvOS apps.

00:02:54.516 --> 00:02:55.906 A:middle
Now a quick note
before we get started.

00:02:56.696 --> 00:02:59.576 A:middle
We're going to assume that you
have at least some familiarity

00:02:59.626 --> 00:03:01.836 A:middle
with the Focus API
and the basic concepts


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.626 --> 00:03:01.836 A:middle
with the Focus API
and the basic concepts

00:03:02.156 --> 00:03:04.126 A:middle
of how Focus works on tvOS.

00:03:04.536 --> 00:03:07.416 A:middle
But even if you're new to
the platform, don't worry.

00:03:08.166 --> 00:03:10.416 A:middle
You can still generally
follow along, and at the end

00:03:10.416 --> 00:03:12.736 A:middle
of the talk today, we'll call
out some useful resources

00:03:13.056 --> 00:03:18.286 A:middle
to help you get started with
building apps for Apple TV.

00:03:19.476 --> 00:03:25.256 A:middle
So what's new in tvOS 10 and to
start, we've added some new APIs

00:03:26.126 --> 00:03:28.556 A:middle
to enhance the preferred
focus system.

00:03:28.646 --> 00:03:33.056 A:middle
Now as a quick review, when
we talk about preferred focus,

00:03:33.336 --> 00:03:35.236 A:middle
we mean the process
of determining

00:03:35.236 --> 00:03:38.966 A:middle
where Focus should show
up after a Focus update.

00:03:39.696 --> 00:03:41.256 A:middle
Whenever Focus updates,

00:03:41.326 --> 00:03:44.746 A:middle
for example when your app first
launches, the Focus engine needs

00:03:44.746 --> 00:03:46.646 A:middle
to know where focus
should be directed to.

00:03:47.356 --> 00:03:48.906 A:middle
It does this by asking your app

00:03:49.886 --> 00:03:52.036 A:middle
where it prefers
Focus gets directed.

00:03:52.886 --> 00:03:54.696 A:middle
Let's look at a specific
example.

00:03:55.836 --> 00:03:59.216 A:middle
When your app first launches,
the Focus engine is going to try

00:03:59.216 --> 00:04:01.466 A:middle
to figure out where Focus
should show up by default,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.216 --> 00:04:01.466 A:middle
to figure out where Focus
should show up by default,

00:04:02.016 --> 00:04:05.156 A:middle
and it's going to start by
looking at the focus environment

00:04:05.546 --> 00:04:06.816 A:middle
that we're updating Focus to.

00:04:07.056 --> 00:04:08.826 A:middle
And when our app first
launches, that's the window.

00:04:09.476 --> 00:04:12.936 A:middle
In this case, the Focus engine
will ask the window what's its

00:04:12.966 --> 00:04:14.416 A:middle
preferred Focus view is.

00:04:15.186 --> 00:04:17.055 A:middle
The window delegates
this responsibility

00:04:17.055 --> 00:04:18.326 A:middle
to its root view controller,

00:04:18.886 --> 00:04:22.416 A:middle
which could also return some
other view in the hierarchy

00:04:22.606 --> 00:04:24.086 A:middle
as its preferred Focus view.

00:04:24.956 --> 00:04:26.196 A:middle
The Focus engine will then ask

00:04:26.196 --> 00:04:28.296 A:middle
that view what its
preferred Focus view is

00:04:28.296 --> 00:04:30.286 A:middle
and it will continue
following down this chain

00:04:30.766 --> 00:04:33.296 A:middle
until it reaches the end, which
is the last focusable view

00:04:33.296 --> 00:04:36.776 A:middle
that it found as the new
Focus view on screen.

00:04:37.736 --> 00:04:40.716 A:middle
Leveraging the Preferred
Focus System is important

00:04:40.716 --> 00:04:42.756 A:middle
to provide a good
user experience

00:04:42.936 --> 00:04:44.636 A:middle
in complex apps, especially.

00:04:44.636 --> 00:04:48.176 A:middle
So that focus is directed to
the correct parts of the screen

00:04:48.236 --> 00:04:49.646 A:middle
at the appropriate times.

00:04:50.196 --> 00:04:54.456 A:middle
In tvOS 10, we're
providing a new property

00:04:54.456 --> 00:04:58.376 A:middle
that allows your apps to
easily express complex Focus

00:04:58.446 --> 00:05:01.536 A:middle
preferences and the name of this
property is appropriately called


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:58.446 --> 00:05:01.536 A:middle
preferences and the name of this
property is appropriately called

00:05:01.936 --> 00:05:04.336 A:middle
Preferred Focus Environments
declared

00:05:04.336 --> 00:05:07.806 A:middle
in the UIFocusEnvironment
protocol and it returns an array

00:05:07.806 --> 00:05:09.976 A:middle
of objects that also conform to
the UIFocusEnvironment protocol.

00:05:10.246 --> 00:05:13.876 A:middle
And this property has
two primary benefits.

00:05:14.366 --> 00:05:19.246 A:middle
First, by returning objects that
conform to UIFocusEnvironment,

00:05:20.216 --> 00:05:23.726 A:middle
you can specify that focus be
directed to any environment

00:05:23.726 --> 00:05:26.556 A:middle
on screen, not just views but
also view controllers directly.

00:05:27.766 --> 00:05:29.756 A:middle
The second benefit
of this property is

00:05:29.756 --> 00:05:32.486 A:middle
that it returns an array of
these focus environments,

00:05:32.986 --> 00:05:35.696 A:middle
which allows you to specify
an ordered list of preferences

00:05:36.216 --> 00:05:39.266 A:middle
and this enables complex,
multipart-preferences

00:05:39.266 --> 00:05:41.206 A:middle
to be expressed much
more concisely.

00:05:42.326 --> 00:05:46.286 A:middle
And there's a specific pattern
where we can see this happening

00:05:46.906 --> 00:05:49.146 A:middle
that Preferred Focus
is commonly used

00:05:49.146 --> 00:05:51.556 A:middle
in which is custom
container view controllers.

00:05:51.736 --> 00:05:55.586 A:middle
Let's look at an
example of that.

00:05:56.566 --> 00:05:58.776 A:middle
Say we have an app with a
structure that looks like this.

00:05:59.486 --> 00:06:01.156 A:middle
We have a container
view controller


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.486 --> 00:06:01.156 A:middle
We have a container
view controller

00:06:01.386 --> 00:06:03.466 A:middle
with two child view controllers.

00:06:04.826 --> 00:06:06.966 A:middle
In this example, we want
our container to prefer

00:06:06.966 --> 00:06:09.976 A:middle
that focus show up in the left
child view controller first,

00:06:10.766 --> 00:06:13.396 A:middle
but if that's not possible,
focus should be directed

00:06:13.396 --> 00:06:14.946 A:middle
to its right child
view controller.

00:06:15.796 --> 00:06:19.276 A:middle
And we can express this logic
very concisely using the new

00:06:19.466 --> 00:06:21.236 A:middle
preferredFocusEnvironments
property.

00:06:22.356 --> 00:06:25.726 A:middle
Here, we override
preferredFocusEnvironments

00:06:25.906 --> 00:06:29.026 A:middle
to return an array of both
children with the left child

00:06:29.026 --> 00:06:30.676 A:middle
as the first item in the array.

00:06:32.466 --> 00:06:33.816 A:middle
This is great because
we don't have

00:06:33.816 --> 00:06:36.396 A:middle
to check ourselves whether
the left child view controller

00:06:36.396 --> 00:06:37.986 A:middle
actually contains
anything focusable.

00:06:37.986 --> 00:06:39.186 A:middle
We don't have to know anything

00:06:39.186 --> 00:06:41.116 A:middle
about the contents
of that controller.

00:06:41.846 --> 00:06:44.126 A:middle
We just tell the Focus engine
what our preferences are

00:06:44.336 --> 00:06:47.566 A:middle
and it takes care of
the hard work for us.

00:06:47.686 --> 00:06:49.246 A:middle
So if our left child
view controller

00:06:49.246 --> 00:06:52.356 A:middle
in this example happened to
not contain anything focusable,

00:06:52.726 --> 00:06:54.506 A:middle
the Focus engine will
automatically fall back

00:06:54.906 --> 00:06:56.706 A:middle
to that right child
view controller instead.

00:06:56.706 --> 00:06:59.786 A:middle
And in this example, maybe it
does find something focusable.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:00.346 --> 00:07:03.546 A:middle
So the
preferredFocusEnvironments

00:07:03.576 --> 00:07:06.376 A:middle
property helps us to express
these preferences much more

00:07:06.376 --> 00:07:07.456 A:middle
clearly and concisely,

00:07:08.156 --> 00:07:11.006 A:middle
and if the first item doesn't
produce anything focusable,

00:07:11.006 --> 00:07:16.146 A:middle
we can easily fall back to the
other environments in the list.

00:07:16.146 --> 00:07:17.686 A:middle
Next up, we have
another enhancement

00:07:17.686 --> 00:07:19.836 A:middle
to the Preferred Focus
System and this is

00:07:19.836 --> 00:07:23.496 A:middle
for more specific use case
involving restoring Focus

00:07:23.716 --> 00:07:25.376 A:middle
after view controller
transitions.

00:07:26.726 --> 00:07:30.186 A:middle
So before we introduce the API,
let's first look at an example

00:07:30.186 --> 00:07:33.546 A:middle
to illustrate what exactly
we mean by focus restoration.

00:07:34.016 --> 00:07:38.326 A:middle
Say we have an app
that looks like this.

00:07:38.726 --> 00:07:41.526 A:middle
It's a simple view controller
with a menu of buttons.

00:07:41.906 --> 00:07:44.126 A:middle
And our root view
controller has preferred

00:07:44.126 --> 00:07:46.886 A:middle
that by default we want our
first button to become focused.

00:07:47.066 --> 00:07:49.156 A:middle
It did this using the
preferredFocusEnvironments

00:07:49.156 --> 00:07:51.516 A:middle
property that we just looked at.

00:07:51.866 --> 00:07:54.886 A:middle
Now suppose the user moves to
the last button in the list

00:07:55.296 --> 00:07:56.386 A:middle
and selects that button

00:07:56.796 --> 00:07:58.586 A:middle
to present a detail
view controller.

00:07:59.096 --> 00:08:02.516 A:middle
In that case we're
interested in is


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.096 --> 00:08:02.516 A:middle
In that case we're
interested in is

00:08:02.516 --> 00:08:04.806 A:middle
when this detail view
controller gets dismissed.

00:08:06.326 --> 00:08:09.746 A:middle
After the dismissal, focus
needs to be restored back

00:08:10.246 --> 00:08:11.596 A:middle
to our root view controller.

00:08:13.436 --> 00:08:15.306 A:middle
Now the user would
probably expect

00:08:15.946 --> 00:08:18.126 A:middle
that focus gets restored
back to the button

00:08:18.216 --> 00:08:20.326 A:middle
that was last focused,
before our presentation,

00:08:20.506 --> 00:08:22.636 A:middle
which is the last
button in our list.

00:08:23.926 --> 00:08:26.276 A:middle
However, if we ask our
root view controller

00:08:26.276 --> 00:08:29.136 A:middle
at this time what its preferred
focus environments are,

00:08:29.626 --> 00:08:31.836 A:middle
it would still direct us to
that first default button.

00:08:33.376 --> 00:08:36.316 A:middle
And so instead, the Focus engine
automatically remembers the last

00:08:36.316 --> 00:08:40.645 A:middle
focus item for us so that after
the transition is complete,

00:08:40.686 --> 00:08:43.556 A:middle
it automatically restores
focus to that last button

00:08:43.655 --> 00:08:45.406 A:middle
that the user would expect.

00:08:46.516 --> 00:08:48.996 A:middle
This is behavior that
existed in tvOS 9.

00:08:51.396 --> 00:08:54.236 A:middle
While this is almost always
the behavior that both the user

00:08:54.236 --> 00:08:57.496 A:middle
and often the developer
expects, there are some cases

00:08:57.496 --> 00:08:59.796 A:middle
where you might want to
restore focus to some other part

00:08:59.796 --> 00:09:00.886 A:middle
of your user interface.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.796 --> 00:09:00.886 A:middle
of your user interface.

00:09:02.166 --> 00:09:05.096 A:middle
Suppose for example that while
our detail view is presented,

00:09:05.286 --> 00:09:07.466 A:middle
our app's underlying
data model changed

00:09:07.466 --> 00:09:10.096 A:middle
so that the last button
now represents a completely

00:09:10.096 --> 00:09:12.486 A:middle
different action or data
item that it did previously.

00:09:13.056 --> 00:09:16.446 A:middle
In that case the user might not
expect focus be automatically

00:09:16.446 --> 00:09:18.166 A:middle
restored back to that last item.

00:09:19.526 --> 00:09:21.646 A:middle
In that case, we
want the Focus engine

00:09:22.256 --> 00:09:25.326 A:middle
to use your view controller's
preferred focus environments

00:09:25.866 --> 00:09:28.516 A:middle
in order to determine where
focus should be restored to.

00:09:28.856 --> 00:09:30.576 A:middle
And in tvOS 10, we're
providing an API

00:09:30.876 --> 00:09:33.566 A:middle
that allows you to do just that.

00:09:33.896 --> 00:09:36.636 A:middle
It's called
restoresFocusAfterTransition.

00:09:37.036 --> 00:09:40.706 A:middle
It's a Boolean property
defined on UIViewController

00:09:41.656 --> 00:09:42.936 A:middle
and the way it works
is very simple.

00:09:43.816 --> 00:09:47.126 A:middle
If set to true, the view
controller will use the

00:09:47.126 --> 00:09:47.916 A:middle
default behavior.

00:09:47.916 --> 00:09:49.496 A:middle
It'll tell the Focus engine

00:09:49.736 --> 00:09:53.326 A:middle
to use its default behavior
restoring focus to the last item

00:09:53.326 --> 00:09:55.266 A:middle
that was focused before
the transition occurred.

00:09:56.576 --> 00:09:58.056 A:middle
If set to false, however,

00:09:58.126 --> 00:10:00.736 A:middle
then the Focus engine will
instead consult your view


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.126 --> 00:10:00.736 A:middle
then the Focus engine will
instead consult your view

00:10:00.736 --> 00:10:02.776 A:middle
controller's
preferredFocusEnvironments

00:10:03.436 --> 00:10:05.476 A:middle
giving your app a
chance to control

00:10:05.476 --> 00:10:06.976 A:middle
where focus gets
directed to on screen.

00:10:07.046 --> 00:10:11.966 A:middle
The property is set to
true by default to maintain

00:10:12.166 --> 00:10:13.626 A:middle
that previous default behavior

00:10:14.856 --> 00:10:16.806 A:middle
and it affects view
controller presentation,

00:10:16.806 --> 00:10:17.756 A:middle
like we just talked about,

00:10:18.276 --> 00:10:22.046 A:middle
but other common built-in view
controller transitions as well

00:10:22.666 --> 00:10:26.676 A:middle
such as navigation pops and
moving focus back and forth

00:10:26.676 --> 00:10:28.536 A:middle
between your view
controller and the tab bar.

00:10:29.966 --> 00:10:31.956 A:middle
We recommend that when
using this property,

00:10:32.526 --> 00:10:36.546 A:middle
set it always be true or always
be false so that focus updates

00:10:36.546 --> 00:10:37.616 A:middle
within your view controllers

00:10:37.616 --> 00:10:41.396 A:middle
in a consistent and
predictable way.

00:10:41.826 --> 00:10:43.836 A:middle
We really hope that this
property will help you solve

00:10:43.836 --> 00:10:46.606 A:middle
some of those tricky edge cases
that you found in your app.

00:10:48.956 --> 00:10:50.936 A:middle
To show you how to use
both of these properties

00:10:50.936 --> 00:10:52.876 A:middle
that we just talked
about, I'd like to invite

00:10:52.876 --> 00:10:54.626 A:middle
up my colleague Brandon
for a quick demo.

00:10:56.516 --> 00:10:59.500 A:middle
[ Applause ]


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:06.636 --> 00:11:07.176 A:middle
&gt;&gt; Hi, everyone.

00:11:07.466 --> 00:11:09.446 A:middle
My name is Brandon and I'm
here today to show you how

00:11:09.446 --> 00:11:10.596 A:middle
to take advantage of some

00:11:10.596 --> 00:11:14.006 A:middle
of the new Focus APIs
available in tvOS 10.

00:11:14.756 --> 00:11:17.386 A:middle
So I've been working on
a simple calendar app

00:11:17.386 --> 00:11:19.116 A:middle
and it's coming along
pretty well so far.

00:11:19.896 --> 00:11:23.456 A:middle
You can view your events for a
given week and you can switch

00:11:23.456 --> 00:11:25.546 A:middle
between weeks using the
next and previous buttons.

00:11:26.556 --> 00:11:28.976 A:middle
Now when the app
launches, we initially focus

00:11:28.976 --> 00:11:30.036 A:middle
on the previous button

00:11:30.736 --> 00:11:33.286 A:middle
when I think it would
actually be a better experience

00:11:33.286 --> 00:11:35.186 A:middle
if we focused on the
user's next event.

00:11:35.326 --> 00:11:37.356 A:middle
So let's go modify
our app to do that.

00:11:38.086 --> 00:11:41.756 A:middle
So to direct focus, we need

00:11:41.756 --> 00:11:43.636 A:middle
to override the
preferredFocusEnvironments

00:11:43.636 --> 00:11:44.086 A:middle
property.

00:11:45.336 --> 00:11:47.826 A:middle
This returns an array
of UIFocusEnvironment

00:11:47.826 --> 00:11:49.576 A:middle
for the focus engine
to search to search.

00:11:50.026 --> 00:11:52.816 A:middle
We'll start by adding our
upcoming events for the rest

00:11:52.816 --> 00:11:53.836 A:middle
of the week to our array.

00:11:54.516 --> 00:11:57.246 A:middle
If we have no more upcoming
events, then we want focus

00:11:57.306 --> 00:11:58.686 A:middle
to default to the next button.

00:11:58.986 --> 00:12:00.546 A:middle
So we'll add that to
our array as well.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.986 --> 00:12:00.546 A:middle
So we'll add that to
our array as well.

00:12:01.676 --> 00:12:02.966 A:middle
Now let's run this,
see if it works.

00:12:11.196 --> 00:12:14.116 A:middle
All right, so this time when
the app launched, we're focused

00:12:14.116 --> 00:12:16.446 A:middle
on the super secret party I'm
hosting after this session.

00:12:17.196 --> 00:12:19.846 A:middle
Now, I wonder what would happen
if I canceled this party.

00:12:20.466 --> 00:12:21.826 A:middle
When an event is canceled,

00:12:21.956 --> 00:12:24.136 A:middle
it becomes grayed
out and unfocusable.

00:12:25.106 --> 00:12:27.776 A:middle
So I would expect focus would
just go to our next event,

00:12:27.776 --> 00:12:29.566 A:middle
which is a tvOS lab
tomorrow morning.

00:12:30.206 --> 00:12:31.846 A:middle
But a good developer
always tests their code.

00:12:31.846 --> 00:12:32.936 A:middle
So let's go try this out.

00:12:32.936 --> 00:12:36.546 A:middle
So I'm going to go
to my AppDelegate

00:12:36.586 --> 00:12:40.976 A:middle
and cancel my not-so-secret
party and rerun this app.

00:12:47.776 --> 00:12:51.006 A:middle
All right, just as we
expected, when the app launched,

00:12:51.006 --> 00:12:52.376 A:middle
we're focused on the tvOS lab.

00:12:53.166 --> 00:12:55.406 A:middle
So because our first
preferred focus environment was

00:12:55.676 --> 00:12:57.986 A:middle
unfocusable, the Focus
engine just moved

00:12:57.986 --> 00:12:59.486 A:middle
to our next preferred
focus environment.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:00.006 --> 00:13:02.536 A:middle
We didn't have to modify
any of our code to do that.

00:13:02.536 --> 00:13:04.666 A:middle
The Focus engine
handled it for us.

00:13:05.446 --> 00:13:07.876 A:middle
Now if you want to view
the details for an event,

00:13:07.956 --> 00:13:09.896 A:middle
you can select it to
bring up the Details page.

00:13:10.506 --> 00:13:12.336 A:middle
From here, you can swipe
left to right to go

00:13:12.336 --> 00:13:13.766 A:middle
to the next or previous event.

00:13:13.766 --> 00:13:17.406 A:middle
I received some bug
reports from beta testers

00:13:17.496 --> 00:13:20.766 A:middle
that when they exit this view,
the focus isn't on the event

00:13:20.766 --> 00:13:22.066 A:middle
that was just selected.

00:13:22.396 --> 00:13:24.316 A:middle
So in this case, we've
selected the bash.

00:13:24.666 --> 00:13:26.196 A:middle
So if I menu out, I would expect

00:13:26.196 --> 00:13:29.386 A:middle
that we would be
focused on the bash.

00:13:29.586 --> 00:13:32.106 A:middle
Instead, we're still
focused on the tvOS lab,

00:13:32.236 --> 00:13:34.886 A:middle
which is our first available
preferred focus environment.

00:13:35.626 --> 00:13:38.026 A:middle
So all we need to do is update
our preferredFocusEnvironments

00:13:38.026 --> 00:13:39.916 A:middle
code to return our
selected event

00:13:40.406 --> 00:13:42.606 A:middle
as our preferred
focus environment.

00:13:43.296 --> 00:13:45.646 A:middle
So let's go back to our
CalendarViewController,

00:13:46.086 --> 00:13:49.226 A:middle
and I have the selectedEventView
property here which keeps track

00:13:49.226 --> 00:13:51.466 A:middle
of the selected event when
we're in the Details page.

00:13:52.096 --> 00:13:54.976 A:middle
So if this property
exists, I'll return it

00:13:54.976 --> 00:13:56.846 A:middle
as my first preferred
focus environment.

00:13:56.926 --> 00:13:59.546 A:middle
All right, let's run
this, see if it works.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:05.866 --> 00:14:09.266 A:middle
Okay. So I'll select the
tvOS lab, move the selection

00:14:09.266 --> 00:14:11.266 A:middle
to the bash, and then menu out,

00:14:12.076 --> 00:14:14.146 A:middle
and we're still focused
on the tvOS lab.

00:14:14.206 --> 00:14:17.186 A:middle
And I'm remembering now
that Matt mentioned earlier

00:14:17.186 --> 00:14:18.906 A:middle
in the session that by default,

00:14:18.906 --> 00:14:20.626 A:middle
the Focus engine
does not consult your

00:14:20.626 --> 00:14:23.106 A:middle
preferredFocusEnvironments
when restoring

00:14:23.106 --> 00:14:24.956 A:middle
from a view controller.

00:14:25.546 --> 00:14:26.746 A:middle
So to change that behavior,

00:14:27.146 --> 00:14:29.696 A:middle
we need to set the
restoresFocusAfterTransition

00:14:29.696 --> 00:14:30.786 A:middle
property to false.

00:14:30.936 --> 00:14:34.836 A:middle
So let's go do that in our
[inaudible] coder method

00:14:35.396 --> 00:14:36.946 A:middle
and rerun the app,
see if it works now.

00:14:43.816 --> 00:14:46.436 A:middle
All right, we'll select
our tvOS lab event again,

00:14:47.136 --> 00:14:49.356 A:middle
move our selection to
the bash, and menu out.

00:14:49.916 --> 00:14:52.076 A:middle
Awesome, so now we're
focused on the bash,

00:14:52.076 --> 00:14:53.486 A:middle
which is exactly what we wanted.

00:14:54.796 --> 00:14:56.756 A:middle
So by using the
preferredFocusEnvironments

00:14:56.936 --> 00:14:59.246 A:middle
and restoresFocusAfterTransition
properties,

00:14:59.316 --> 00:15:02.196 A:middle
we're able to provide a much
better experience to our users.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.316 --> 00:15:02.196 A:middle
we're able to provide a much
better experience to our users.

00:15:02.806 --> 00:15:03.976 A:middle
Now I'd like to invite
Matt back up on stage.

00:15:04.516 --> 00:15:09.736 A:middle
[ Applause ]

00:15:10.236 --> 00:15:10.796 A:middle
&gt;&gt; Thanks, Brandon.

00:15:11.616 --> 00:15:12.556 A:middle
That was a really great demo.

00:15:13.276 --> 00:15:14.916 A:middle
Using these two new properties,

00:15:14.916 --> 00:15:17.616 A:middle
we hope that you can reduce the
complexity of code in your apps

00:15:18.206 --> 00:15:20.226 A:middle
and also provide a
better user experience.

00:15:22.276 --> 00:15:26.476 A:middle
Now, next up I'm really
excited to announce

00:15:27.026 --> 00:15:30.096 A:middle
that we're bringing focus
interaction support directly

00:15:30.166 --> 00:15:31.026 A:middle
into SpriteKit.

00:15:32.636 --> 00:15:35.996 A:middle
Prior to tvOS 10,
SpriteKit developers had

00:15:35.996 --> 00:15:38.316 A:middle
to manually implement
focus interaction

00:15:38.396 --> 00:15:41.646 A:middle
in their SpriteKit games
by manually keeping track

00:15:41.646 --> 00:15:45.656 A:middle
of their own state and
handling user events directly.

00:15:46.226 --> 00:15:50.736 A:middle
But now in tvOS 10, we're
extending the Focus API,

00:15:51.576 --> 00:15:53.686 A:middle
the same API you're
used to in UIKit,

00:15:54.066 --> 00:15:57.226 A:middle
to also support your
SpriteKit games.

00:15:58.476 --> 00:16:04.746 A:middle
But first, what would
this be useful for?


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.476 --> 00:16:04.746 A:middle
But first, what would
this be useful for?

00:16:04.856 --> 00:16:08.366 A:middle
Well the first and most obvious
use case for focus interaction

00:16:08.556 --> 00:16:10.996 A:middle
in games is game menus.

00:16:12.156 --> 00:16:16.126 A:middle
Your users will expect
that menus in games feel

00:16:16.126 --> 00:16:19.866 A:middle
and behave similar to
menus in other system apps.

00:16:21.036 --> 00:16:25.106 A:middle
The Focus Interaction model also
makes sense for board games,

00:16:25.596 --> 00:16:28.206 A:middle
where users navigate around
a two-dimensional game board

00:16:28.666 --> 00:16:31.816 A:middle
and select items on that game
board, maybe move those around.

00:16:32.066 --> 00:16:35.146 A:middle
And in fact, Focus Interaction
makes sense for any type of game

00:16:35.756 --> 00:16:38.876 A:middle
where selection is a
core gameplay mechanic.

00:16:39.686 --> 00:16:41.126 A:middle
And in any of this use cases,

00:16:41.196 --> 00:16:44.096 A:middle
again users will expect
navigation and selection

00:16:44.416 --> 00:16:46.686 A:middle
to feel similar to the
system focus behavior.

00:16:47.246 --> 00:16:51.226 A:middle
Otherwise, your app might feel
weird or broken, unintuitive.

00:16:51.766 --> 00:16:57.706 A:middle
And so to help with that, we've
extended the same Focus API

00:16:57.706 --> 00:17:02.196 A:middle
that you're used to in UIKit to
now also work with SpriteKit.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:57.706 --> 00:17:02.196 A:middle
that you're used to in UIKit to
now also work with SpriteKit.

00:17:02.446 --> 00:17:05.096 A:middle
This is a shared API,
and what this means is

00:17:05.096 --> 00:17:09.756 A:middle
that SKNodes are now able to
opt in to becoming focusable

00:17:10.556 --> 00:17:12.195 A:middle
and taking advantage of all

00:17:12.195 --> 00:17:14.546 A:middle
of the Focus engine's
built-in capabilities.

00:17:16.106 --> 00:17:19.346 A:middle
UIKit and SpriteKit have been
integrated to allow focus

00:17:19.346 --> 00:17:21.915 A:middle
to move freely between
your views and your nodes

00:17:21.955 --> 00:17:24.165 A:middle
so you don't have to handle
those use cases yourself.

00:17:26.256 --> 00:17:30.896 A:middle
So how exactly does this work?

00:17:31.086 --> 00:17:34.766 A:middle
First, let's review how
Focus works for UIViews.

00:17:35.386 --> 00:17:39.196 A:middle
Prior to tvOS 10, UIViews were
the only user interface elements

00:17:39.256 --> 00:17:41.016 A:middle
that were capable
of becoming focused,

00:17:41.256 --> 00:17:43.796 A:middle
and they defined their
focus ability using the

00:17:43.796 --> 00:17:45.746 A:middle
canBecomeFocused property.

00:17:47.806 --> 00:17:52.716 A:middle
UIViews also conform to the
UIFocusEnvironment protocol.

00:17:53.526 --> 00:17:56.576 A:middle
And this allows views to get
focus update notifications

00:17:56.576 --> 00:17:58.766 A:middle
and also control the
behavior of focus

00:17:58.766 --> 00:18:00.206 A:middle
within their subview hierarchy.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:58.766 --> 00:18:00.206 A:middle
within their subview hierarchy.

00:18:00.956 --> 00:18:04.986 A:middle
So to support SpriteKit
focus, we're going to want

00:18:04.986 --> 00:18:07.856 A:middle
to bring these same
capabilities to SKNodes

00:18:08.286 --> 00:18:10.106 A:middle
and we've made some
changes to support that.

00:18:10.676 --> 00:18:12.626 A:middle
We're abstracting
these same capabilities

00:18:12.626 --> 00:18:15.686 A:middle
out into their own protocol
that we call UIFocusItem.

00:18:16.206 --> 00:18:20.786 A:middle
This protocol defines both
that canBecomeFocused property

00:18:21.676 --> 00:18:24.566 A:middle
and conformance to the
UIFocusEnvironment protocol.

00:18:26.496 --> 00:18:30.876 A:middle
Next, we refactored
UIView and extended SKNode

00:18:31.056 --> 00:18:32.886 A:middle
to conform to this new protocol.

00:18:33.776 --> 00:18:35.906 A:middle
And this allows both
UIView and SKNode

00:18:35.906 --> 00:18:40.696 A:middle
to share these exact same API
while not requiring any changes

00:18:40.696 --> 00:18:43.046 A:middle
in your existing UIKit code.

00:18:44.356 --> 00:18:46.846 A:middle
We've also made additions to
other parts of the Focus API

00:18:47.066 --> 00:18:50.556 A:middle
in order to take advantage of
this new UIFocusItem protocol.

00:18:51.936 --> 00:18:54.856 A:middle
First, let's look at the
UIFocusUpdateContext class,

00:18:55.396 --> 00:18:58.066 A:middle
which provides contextual
information during focus

00:18:58.066 --> 00:18:59.496 A:middle
update notifications.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.866 --> 00:19:03.546 A:middle
In order to support focus
updates to SpriteKit nodes,

00:19:03.776 --> 00:19:06.816 A:middle
we're introducing two new
UIFocusItem based properties:

00:19:07.476 --> 00:19:10.186 A:middle
previouslyFocusedItem
and nextFocusedItem,

00:19:10.886 --> 00:19:14.016 A:middle
and these tell you which items
are involved in the update.

00:19:14.946 --> 00:19:17.526 A:middle
We've made a similar
change to UIScreen,

00:19:17.896 --> 00:19:21.196 A:middle
introducing a new focusedItem
property that returns an object

00:19:21.196 --> 00:19:23.916 A:middle
to type UIFocusItem and
this allows your app

00:19:24.116 --> 00:19:29.596 A:middle
to query what the current focus
item is at any given time.

00:19:29.936 --> 00:19:32.476 A:middle
Now there's one more API
change worth mentioning

00:19:32.476 --> 00:19:34.156 A:middle
but it requires a little
bit more background.

00:19:34.986 --> 00:19:39.346 A:middle
In tvOS 9, the UIFocusItem
protocol defined the

00:19:39.346 --> 00:19:41.126 A:middle
preferredFocusView property.

00:19:41.126 --> 00:19:46.076 A:middle
And prior to tvOS 10, this was
how apps defined their focus

00:19:46.076 --> 00:19:48.386 A:middle
preferences, like we were
talking about earlier.

00:19:49.536 --> 00:19:51.656 A:middle
But you can probably
see a problem with this,

00:19:51.956 --> 00:19:54.246 A:middle
which is that it
returns a type of UIView.

00:19:54.726 --> 00:19:58.216 A:middle
And if we're going to support
SpriteKit, we're going to need

00:19:58.276 --> 00:20:00.576 A:middle
to define focus preferences
to our SKNodes.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.276 --> 00:20:00.576 A:middle
to define focus preferences
to our SKNodes.

00:20:00.576 --> 00:20:01.976 A:middle
And so this isn't going to work.

00:20:02.176 --> 00:20:07.336 A:middle
But luckily, earlier
in the talk,

00:20:07.816 --> 00:20:10.006 A:middle
we introduced this new
preferredFocusEnvironments

00:20:10.386 --> 00:20:12.196 A:middle
property, which does
the same thing.

00:20:12.516 --> 00:20:15.656 A:middle
But because it returns an array
of UIFocusEnvironment objects

00:20:15.656 --> 00:20:19.316 A:middle
and now SKNode conforms to the
UIFocusEnvironment protocol,

00:20:20.576 --> 00:20:22.836 A:middle
we can now define focus
preferences to views,

00:20:22.976 --> 00:20:26.566 A:middle
view controller, SKNodes,
any object that conforms

00:20:26.566 --> 00:20:27.706 A:middle
to UIFocusEnvironment.

00:20:28.476 --> 00:20:30.506 A:middle
And this makes defining
focus preferences

00:20:30.506 --> 00:20:33.026 A:middle
in your environments
much easier and concise.

00:20:34.256 --> 00:20:36.776 A:middle
And because
preferredFocusEnvironments takes

00:20:36.776 --> 00:20:39.166 A:middle
care of all the use cases
for preferredFocusView does

00:20:39.166 --> 00:20:40.856 A:middle
but also provides
these other benefits

00:20:40.976 --> 00:20:43.446 A:middle
that we've talked about,
in tvOS 10 we're going

00:20:43.446 --> 00:20:44.956 A:middle
to deprecate preferredFocusView.

00:20:45.546 --> 00:20:49.036 A:middle
So if you're currently
using preferredFocusView

00:20:49.036 --> 00:20:52.106 A:middle
in your applications,
we recommend upgrading

00:20:52.106 --> 00:20:54.246 A:middle
to preferredFocusEnvironments
instead.

00:20:55.476 --> 00:20:57.066 A:middle
We think this will really help.

00:20:58.336 --> 00:21:01.336 A:middle
So that's Focus Interaction
support in SpriteKit.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.336 --> 00:21:01.336 A:middle
So that's Focus Interaction
support in SpriteKit.

00:21:02.126 --> 00:21:05.546 A:middle
Focus API now supports generic
focus items using this new

00:21:05.546 --> 00:21:07.036 A:middle
UIFocusItem protocol.

00:21:07.756 --> 00:21:10.626 A:middle
Both UIView and SKNode
conform to this protocol.

00:21:11.516 --> 00:21:13.736 A:middle
And for SpriteKit
developers, you can now opt

00:21:13.736 --> 00:21:15.906 A:middle
in to supporting focus
to take advantage

00:21:16.256 --> 00:21:18.316 A:middle
of all the Focus
engine's capabilities.

00:21:18.986 --> 00:21:22.376 A:middle
For UIKit developers that don't
use SpriteKit in their apps,

00:21:23.076 --> 00:21:24.336 A:middle
there are no changes required.

00:21:24.546 --> 00:21:26.876 A:middle
The view-based API
with the one exception

00:21:26.876 --> 00:21:30.766 A:middle
of preferredFocusView is still
available for your convenience.

00:21:31.586 --> 00:21:34.556 A:middle
We do encourage you, however,
to start using this new API

00:21:34.736 --> 00:21:37.946 A:middle
in your code to take advantage

00:21:38.046 --> 00:21:41.276 A:middle
of more generic and
future features.

00:21:43.216 --> 00:21:46.906 A:middle
For more details on exactly
what you need to do in order opt

00:21:46.906 --> 00:21:48.826 A:middle
in to focus support in
your SpriteKit games,

00:21:49.446 --> 00:21:51.006 A:middle
we recommend watching
the What's New

00:21:51.006 --> 00:21:53.426 A:middle
in SpriteKit session happening
this week, where they go

00:21:53.426 --> 00:21:56.556 A:middle
into more detail on exactly
what you need to do to opt in.

00:21:57.576 --> 00:22:01.086 A:middle
So that's Focus Interaction
support for SpriteKit.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.576 --> 00:22:01.086 A:middle
So that's Focus Interaction
support for SpriteKit.

00:22:01.526 --> 00:22:06.546 A:middle
And that concludes our overview
of what's new in tvOS 10.

00:22:06.546 --> 00:22:10.136 A:middle
And so for the next part of our
talk, we're going to go in-depth

00:22:10.216 --> 00:22:11.486 A:middle
with a case study on how

00:22:11.486 --> 00:22:13.926 A:middle
to build a fully custom,
focusable control.

00:22:15.236 --> 00:22:16.306 A:middle
And for our example today,

00:22:16.306 --> 00:22:19.106 A:middle
we're going to use a
five-star rating control.

00:22:20.716 --> 00:22:23.856 A:middle
Now we've already done some work
and we've built a first draft

00:22:23.856 --> 00:22:27.076 A:middle
of this control and I'd
like to show that to you.

00:22:27.156 --> 00:22:31.206 A:middle
We just used the normal UIButton
class and presented the rating

00:22:31.466 --> 00:22:32.666 A:middle
as the title of the button.

00:22:32.896 --> 00:22:35.536 A:middle
If you select the button,
it'll bump up the rating,

00:22:35.536 --> 00:22:36.776 A:middle
and if you keep selecting
the button,

00:22:36.776 --> 00:22:38.656 A:middle
it'll cycle through all
the available ratings.

00:22:39.166 --> 00:22:42.206 A:middle
Now this is okay.

00:22:43.266 --> 00:22:46.636 A:middle
It gives us the functionality
that we need, but we really want

00:22:46.636 --> 00:22:47.896 A:middle
to take our app to
the next level.

00:22:48.096 --> 00:22:51.126 A:middle
And this control, it's
good but it's not very fun.

00:22:51.126 --> 00:22:52.786 A:middle
It's not very interactive.

00:22:53.426 --> 00:22:56.096 A:middle
And so we thought long and
hard about this and we came

00:22:56.096 --> 00:22:58.846 A:middle
up with a new design and
this is what that looks like.

00:22:59.976 --> 00:23:02.246 A:middle
That's a lot better.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.976 --> 00:23:02.246 A:middle
That's a lot better.

00:23:02.596 --> 00:23:04.656 A:middle
Instead of just saying
one-star or two-star,

00:23:04.866 --> 00:23:07.836 A:middle
we now visually indicate our
rating using actual stars.

00:23:08.376 --> 00:23:10.976 A:middle
When you select the control,
you go into an editing mode,

00:23:10.976 --> 00:23:12.666 A:middle
where you can use
the Focus system

00:23:13.246 --> 00:23:15.696 A:middle
to change our rating
between the stars.

00:23:15.696 --> 00:23:17.766 A:middle
And when we're done, we
just press Select again

00:23:17.836 --> 00:23:19.706 A:middle
and we exit editing mode.

00:23:20.306 --> 00:23:22.996 A:middle
This is a great example of
a control that is optimized

00:23:22.996 --> 00:23:25.066 A:middle
for focus interaction and
we're going to walk you

00:23:25.066 --> 00:23:27.016 A:middle
through building this
control completely

00:23:27.016 --> 00:23:28.706 A:middle
from scratch using
the Focus API.

00:23:29.416 --> 00:23:31.486 A:middle
And for that, I'm going to hand
things back over to Brandon.

00:23:32.516 --> 00:23:35.500 A:middle
[ Applause ]

00:23:42.496 --> 00:23:44.556 A:middle
All right, thanks, Matt.

00:23:44.696 --> 00:23:46.646 A:middle
So I have a project here

00:23:47.106 --> 00:23:50.436 A:middle
which contains our simple button
control, but it doesn't look

00:23:50.796 --> 00:23:52.326 A:middle
as nice as the one
Matt just showed us.

00:23:52.416 --> 00:23:53.396 A:middle
So let's just delete that.

00:23:54.516 --> 00:23:56.156 A:middle
Let's go ahead and
drag in a view

00:23:56.956 --> 00:23:59.896 A:middle
to represent our new control.

00:23:59.896 --> 00:24:04.216 A:middle
We'll set up some constraints
on it quickly, so 100 points


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:59.896 --> 00:24:04.216 A:middle
We'll set up some constraints
on it quickly, so 100 points

00:24:04.216 --> 00:24:07.956 A:middle
from the top, a width
of 650, a height of 150,

00:24:09.576 --> 00:24:14.246 A:middle
and we'll center it
horizontally in our container.

00:24:14.466 --> 00:24:17.726 A:middle
Great. Now I've already
created a rating control class

00:24:17.836 --> 00:24:20.046 A:middle
to represent this
control, so let's assign

00:24:20.046 --> 00:24:21.136 A:middle
that as a views class.

00:24:21.946 --> 00:24:25.926 A:middle
And let's go check out
this rating control class.

00:24:27.856 --> 00:24:29.816 A:middle
We chose a subclass
from UIControl

00:24:29.816 --> 00:24:32.306 A:middle
because it provides a lot of
functionality to us for free.

00:24:32.306 --> 00:24:35.836 A:middle
For example, it determines if
the control can become focused

00:24:35.836 --> 00:24:39.206 A:middle
or not based on its
enabled state; however,

00:24:39.336 --> 00:24:41.686 A:middle
it doesn't have a
focus/unfocused appearance.

00:24:41.686 --> 00:24:42.986 A:middle
We have to provide
that ourselves.

00:24:42.986 --> 00:24:45.846 A:middle
So let's go do that.

00:24:45.986 --> 00:24:48.696 A:middle
We'll start by adding a corner
radius and a background color

00:24:49.356 --> 00:24:52.836 A:middle
and then we'll override
didUpdateFocus in context

00:24:52.836 --> 00:24:54.996 A:middle
with coordinator to
provide both a focus

00:24:54.996 --> 00:24:55.986 A:middle
and unfocused appearance.

00:24:55.986 --> 00:24:59.476 A:middle
So if the next focus
item is our control,

00:24:59.476 --> 00:25:02.426 A:middle
then we'll configure the focus
appearance, which just consists


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.476 --> 00:25:02.426 A:middle
then we'll configure the focus
appearance, which just consists

00:25:02.426 --> 00:25:04.366 A:middle
of scaling the view,
adding a shadow,

00:25:04.366 --> 00:25:05.816 A:middle
and changing the
background color.

00:25:06.846 --> 00:25:09.166 A:middle
If the previously focused
item is our control,

00:25:09.596 --> 00:25:12.006 A:middle
then we'll configure the
unfocused view or appearance,

00:25:12.466 --> 00:25:14.276 A:middle
which just rests all
of our properties.

00:25:14.976 --> 00:25:16.386 A:middle
Now before I run this,

00:25:16.626 --> 00:25:18.626 A:middle
I also want to add motion
effects to our control.

00:25:19.286 --> 00:25:22.076 A:middle
Motion effects makes your
app feel more responsive

00:25:22.386 --> 00:25:24.906 A:middle
and helps the user find
the focus item on screen.

00:25:25.546 --> 00:25:28.646 A:middle
So to do that, I'll
create a motionEffectGroup

00:25:28.646 --> 00:25:31.956 A:middle
to add horizontal and vertical
motion when I move my finger

00:25:31.956 --> 00:25:32.866 A:middle
around the touch surface.

00:25:34.166 --> 00:25:36.836 A:middle
Now I need to go back, and when
our control becomes focused,

00:25:37.596 --> 00:25:41.116 A:middle
I will add the motion effect,
and when it becomes unfocused,

00:25:41.226 --> 00:25:43.216 A:middle
I will remove the motion effect.

00:25:43.966 --> 00:25:45.156 A:middle
Now I make all these changes

00:25:45.196 --> 00:25:47.466 A:middle
within addCoordinatedAnimations
block.

00:25:47.816 --> 00:25:51.206 A:middle
This way, our property
changes are in sync

00:25:51.206 --> 00:25:52.516 A:middle
with our focus animations.

00:25:52.516 --> 00:25:54.976 A:middle
So let's see how this looks.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:04.186 --> 00:26:07.126 A:middle
All right, so what we've done

00:26:07.126 --> 00:26:10.576 A:middle
so far is create a very basic
control which has both a focus

00:26:10.576 --> 00:26:13.266 A:middle
and unfocused appearance
and has motion effects.

00:26:13.266 --> 00:26:15.526 A:middle
So it moves when I move my
finger on the touch surface.

00:26:16.376 --> 00:26:18.936 A:middle
But this is supposed to be
a five-star rating control

00:26:18.936 --> 00:26:20.336 A:middle
and we don't have any stars yet.

00:26:20.936 --> 00:26:25.326 A:middle
So let's go add those.

00:26:25.556 --> 00:26:27.186 A:middle
So first we need to
add some properties

00:26:27.296 --> 00:26:28.406 A:middle
to store our control state.

00:26:29.476 --> 00:26:31.466 A:middle
And then in our awakeFromNib
function,

00:26:33.196 --> 00:26:37.616 A:middle
we'll add a horizontal stackView
and add five stars to that.

00:26:37.616 --> 00:26:41.356 A:middle
I've already created the star
classes to save some time,

00:26:41.396 --> 00:26:42.506 A:middle
but if you're following along,

00:26:42.506 --> 00:26:45.126 A:middle
I configured their focus
appearance using the same

00:26:45.126 --> 00:26:46.366 A:middle
process that we just saw.

00:26:46.366 --> 00:26:50.596 A:middle
Now when the user selects the
control, I want them to be able

00:26:50.596 --> 00:26:51.666 A:middle
to edit the current rating.

00:26:52.376 --> 00:26:54.546 A:middle
So I'll add a
selectGestureRecognizer

00:26:54.946 --> 00:26:55.876 A:middle
to our control.

00:26:55.876 --> 00:26:59.226 A:middle
And when that's triggered,
I'll toggle the editing state

00:26:59.226 --> 00:27:00.426 A:middle
and request a focus update.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.226 --> 00:27:00.426 A:middle
and request a focus update.

00:27:01.686 --> 00:27:02.956 A:middle
When a focus update happens,

00:27:02.996 --> 00:27:04.796 A:middle
it consults our
preferredFocusEnvironments.

00:27:05.016 --> 00:27:06.286 A:middle
So we'll override that property.

00:27:06.696 --> 00:27:09.986 A:middle
And if we're editing,
we'll return our starViews

00:27:09.986 --> 00:27:11.486 A:middle
as our
preferredFocusEnvironments.

00:27:12.276 --> 00:27:14.706 A:middle
Otherwise, we'll just return
our super implementation.

00:27:14.706 --> 00:27:17.566 A:middle
Let's run this, see
how it looks.

00:27:22.326 --> 00:27:26.876 A:middle
Okay, so this time
when our app launched,

00:27:26.876 --> 00:27:29.516 A:middle
we have some stars
in our control.

00:27:29.516 --> 00:27:32.406 A:middle
And when I select the control,
focus moves to the first star

00:27:32.406 --> 00:27:35.296 A:middle
within the control; however,
I'm not actually able

00:27:35.296 --> 00:27:37.466 A:middle
to move focus to
the other stars.

00:27:38.296 --> 00:27:40.686 A:middle
This is because there's some
space between the stars.

00:27:40.686 --> 00:27:43.636 A:middle
So when we try to move focus
to the right, we actually end

00:27:43.636 --> 00:27:46.626 A:middle
up focusing on our control,
which just directs focus back

00:27:46.626 --> 00:27:49.106 A:middle
to our first star using
preferredFocusEnvironments.

00:27:49.636 --> 00:27:52.916 A:middle
So to fix this, we want to
make sure our control is not

00:27:52.916 --> 00:27:54.546 A:middle
focusable when we're editing.

00:27:55.146 --> 00:27:58.416 A:middle
So let's override
canBecomeFocused

00:27:58.486 --> 00:28:02.126 A:middle
and we'll return false if our
control is currently editing.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.486 --> 00:28:02.126 A:middle
and we'll return false if our
control is currently editing.

00:28:02.126 --> 00:28:05.946 A:middle
So let's run this, see
if that fixes things.

00:28:11.516 --> 00:28:13.006 A:middle
All right, that's much better.

00:28:13.316 --> 00:28:15.426 A:middle
So now I'll able to move
focus between the stars.

00:28:16.436 --> 00:28:19.526 A:middle
But it's difficult to tell
what the current rating is

00:28:19.526 --> 00:28:21.536 A:middle
because we don't provide
any visual feedback.

00:28:22.126 --> 00:28:25.226 A:middle
So to do that, we need to
update the current rating

00:28:25.226 --> 00:28:26.516 A:middle
when our focus changes.

00:28:27.466 --> 00:28:30.986 A:middle
So let's go back to our
didUpdateFocus function,

00:28:31.726 --> 00:28:33.776 A:middle
and at the bottom,
if we're editing,

00:28:34.486 --> 00:28:36.476 A:middle
we'll set the current
rating based on the index

00:28:36.696 --> 00:28:38.166 A:middle
of the currently
focused starView.

00:28:38.616 --> 00:28:42.376 A:middle
And let's go back up to
our current rating property

00:28:42.956 --> 00:28:46.466 A:middle
and we'll tie that directly

00:28:46.466 --> 00:28:48.896 A:middle
to the isSelected
property on the starViews.

00:28:49.156 --> 00:28:51.866 A:middle
And this property just sets the
background color on the stars.

00:28:51.866 --> 00:28:53.976 A:middle
So let's see how that looks.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:02.096 --> 00:29:07.076 A:middle
Okay, so now when I select
the control, it's easy to tell

00:29:07.076 --> 00:29:08.146 A:middle
that the first star is selected.

00:29:08.146 --> 00:29:11.926 A:middle
And when I move focus, all the
star select remain selected.

00:29:12.006 --> 00:29:14.056 A:middle
So it's easy to tell what
the current rating is.

00:29:15.066 --> 00:29:17.226 A:middle
So this is pretty good
but it's not great yet.

00:29:18.346 --> 00:29:20.776 A:middle
Right now I'm able to move
focus outside the control,

00:29:21.606 --> 00:29:22.686 A:middle
and I don't want
to be able to do

00:29:22.686 --> 00:29:24.496 A:middle
that when I'm editing
the current rating.

00:29:25.446 --> 00:29:27.646 A:middle
Also, when I select the control,

00:29:27.886 --> 00:29:30.266 A:middle
we always reset the current
rating back to one star.

00:29:30.266 --> 00:29:32.946 A:middle
I think it would be better
if we kept the current rating

00:29:32.946 --> 00:29:35.046 A:middle
and just focused on
the last selected star.

00:29:35.796 --> 00:29:37.416 A:middle
So let's go make those changes.

00:29:40.436 --> 00:29:44.616 A:middle
So we'll start by overriding
the shouldUpdateFocus

00:29:44.716 --> 00:29:45.936 A:middle
to restrict focus movement.

00:29:46.626 --> 00:29:50.266 A:middle
So if we're editing and the
next focus item is not one

00:29:50.266 --> 00:29:52.386 A:middle
of our star views,
then we'll return false

00:29:52.386 --> 00:29:56.156 A:middle
to say no, focus can't move.

00:29:56.386 --> 00:29:59.476 A:middle
Also, in our
preferredFocusEnvironments code,

00:29:59.476 --> 00:30:05.336 A:middle
we want to return our last
selected star if we're editing


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.476 --> 00:30:05.336 A:middle
we want to return our last
selected star if we're editing

00:30:05.336 --> 00:30:07.326 A:middle
and the current rating
is greater than zero.

00:30:07.906 --> 00:30:09.916 A:middle
So this way we don't reset
the current rating every time.

00:30:11.636 --> 00:30:12.956 A:middle
Let's run this one more
time, see how it looks.

00:30:20.716 --> 00:30:22.606 A:middle
Okay, now I'm no longer able

00:30:22.606 --> 00:30:24.656 A:middle
to move focus outside
of the control.

00:30:24.656 --> 00:30:28.336 A:middle
And when I select a control, the
current rating stays the same

00:30:28.716 --> 00:30:30.686 A:middle
and we just focus on
the last selected star.

00:30:31.816 --> 00:30:33.706 A:middle
So that completes
our custom control.

00:30:34.006 --> 00:30:36.606 A:middle
By utilizing the Focus
APIs, we were able

00:30:36.606 --> 00:30:39.116 A:middle
to create a pretty complex
yet very useful control.

00:30:39.656 --> 00:30:41.836 A:middle
Now I'd like to invite
Matt back up on stage.

00:30:42.516 --> 00:30:47.676 A:middle
[ Applause ]

00:30:48.176 --> 00:30:48.776 A:middle
&gt;&gt; Thanks, Brandon.

00:30:49.436 --> 00:30:51.476 A:middle
I rate that demo
with five stars.

00:30:54.226 --> 00:30:58.966 A:middle
Okay, we chose that demo
because it was a great example

00:30:58.966 --> 00:31:02.096 A:middle
of using many different parts
of the Focus API in order


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:58.966 --> 00:31:02.096 A:middle
of using many different parts
of the Focus API in order

00:31:02.096 --> 00:31:05.126 A:middle
to create a rich focus
interaction experience.

00:31:06.006 --> 00:31:09.116 A:middle
And there are just a couple
parts of the implementation

00:31:09.216 --> 00:31:11.746 A:middle
that Brandon showed us that
I want to highlight again

00:31:11.746 --> 00:31:12.926 A:middle
because they're important

00:31:12.926 --> 00:31:15.036 A:middle
for really creating a
great user experience.

00:31:16.096 --> 00:31:19.316 A:middle
The first tip we have is
to subclass UIControl.

00:31:19.866 --> 00:31:23.436 A:middle
UIControl provides a lot of
basic functionality for free,

00:31:23.786 --> 00:31:26.646 A:middle
for instance, as Brandon said,
defining the focusability

00:31:26.646 --> 00:31:29.756 A:middle
of your controls based on
its IsEnabled property.

00:31:31.096 --> 00:31:33.196 A:middle
So when you're building
custom controls,

00:31:34.296 --> 00:31:36.276 A:middle
you should also subclass
from UIControl.

00:31:38.396 --> 00:31:41.846 A:middle
We also used the focus
animation coordinator in order

00:31:41.846 --> 00:31:45.276 A:middle
to define our focus-related
animation changes

00:31:45.276 --> 00:31:46.976 A:middle
when changing our focus state.

00:31:48.026 --> 00:31:50.296 A:middle
This is also really
important for making sure

00:31:50.296 --> 00:31:52.166 A:middle
that our focus animations
stay in sync

00:31:52.436 --> 00:31:54.966 A:middle
with other focus animations
happening in other parts

00:31:54.966 --> 00:31:55.926 A:middle
of the user interface.

00:31:56.326 --> 00:31:59.706 A:middle
And we do this to make sure
that focus naturally flows

00:31:59.706 --> 00:32:01.926 A:middle
around the screen when
the user is moving


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:59.706 --> 00:32:01.926 A:middle
around the screen when
the user is moving

00:32:01.926 --> 00:32:03.096 A:middle
between different controls.

00:32:03.546 --> 00:32:05.476 A:middle
So when you're defining
animations

00:32:05.476 --> 00:32:06.786 A:middle
for your focus appearance,

00:32:07.136 --> 00:32:09.636 A:middle
please use the focus
animation coordinator.

00:32:10.206 --> 00:32:14.746 A:middle
And the last tip is
to use motion effects.

00:32:15.266 --> 00:32:17.056 A:middle
Brandon showed us how
to use motion effects

00:32:17.476 --> 00:32:19.406 A:middle
to create a little
bit of movement

00:32:19.566 --> 00:32:23.816 A:middle
when you place your thumb on the
Siri Remote and do a little bit

00:32:23.816 --> 00:32:25.896 A:middle
of movement but not enough
to actually move focus.

00:32:27.496 --> 00:32:29.456 A:middle
You can use the UIMotionEffect's
API

00:32:29.836 --> 00:32:32.136 A:middle
to implement this
behavior very easily.

00:32:33.226 --> 00:32:36.046 A:middle
This is important because
it allows your users

00:32:36.046 --> 00:32:38.056 A:middle
to get this direct
connection to your app

00:32:38.336 --> 00:32:40.686 A:middle
so that they get
immediate feedback as soon

00:32:40.686 --> 00:32:42.436 A:middle
as they start using
the Siri Remote.

00:32:43.246 --> 00:32:46.076 A:middle
It also helps the user
locate focus on the screen

00:32:46.076 --> 00:32:48.036 A:middle
so that they can sit down
in front of their TV,

00:32:48.396 --> 00:32:49.816 A:middle
wiggle the remote around,

00:32:50.206 --> 00:32:53.006 A:middle
and immediately the
focus element pops out.

00:32:54.276 --> 00:32:57.206 A:middle
Before we wrap us, just
a few notes on testing.

00:32:57.996 --> 00:33:03.046 A:middle
The first is to point out that
not all input devices have the


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:57.996 --> 00:33:03.046 A:middle
The first is to point out that
not all input devices have the

00:33:03.046 --> 00:33:04.256 A:middle
same capabilities.

00:33:04.256 --> 00:33:06.286 A:middle
And this is definitely
important when it comes

00:33:06.286 --> 00:33:07.796 A:middle
to testing your custom controls.

00:33:08.336 --> 00:33:11.746 A:middle
Now the good news is that
if you use the Focus API

00:33:12.196 --> 00:33:15.076 A:middle
to build your custom controls,
like we did in this demo,

00:33:15.416 --> 00:33:18.346 A:middle
then your control should work
with any of the input devices

00:33:18.346 --> 00:33:20.456 A:middle
that we talked about
earlier: Game controllers,

00:33:20.456 --> 00:33:25.536 A:middle
Bluetooth keyboards, the Siri
Remote, all of those other ones.

00:33:25.696 --> 00:33:28.836 A:middle
But not all these input devices
have the same capabilities

00:33:29.056 --> 00:33:31.126 A:middle
so that if your custom
control relies

00:33:31.226 --> 00:33:34.526 A:middle
on some custom event handling
or gesture recognition,

00:33:34.526 --> 00:33:36.496 A:middle
for example, let's say

00:33:36.756 --> 00:33:40.176 A:middle
for example you're
using the Siri Remote

00:33:40.176 --> 00:33:42.866 A:middle
which generates touch events
from its touch surface

00:33:43.346 --> 00:33:46.526 A:middle
and you're using that
to drive some capability

00:33:46.526 --> 00:33:47.686 A:middle
within your custom control,

00:33:48.176 --> 00:33:50.316 A:middle
well if a user is using
a Bluetooth keyboard,

00:33:50.436 --> 00:33:52.106 A:middle
they can't generate
those touch events.

00:33:52.466 --> 00:33:55.016 A:middle
And so you'll have to do
some extra work to make sure

00:33:55.016 --> 00:33:58.216 A:middle
that your control can behave
correctly and be functional

00:33:58.486 --> 00:34:00.686 A:middle
for all users, in
all situations.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:58.486 --> 00:34:00.686 A:middle
for all users, in
all situations.

00:34:01.226 --> 00:34:03.606 A:middle
And so definitely
test custom controls

00:34:03.606 --> 00:34:08.116 A:middle
that use custom event handling
with different input devices.

00:34:08.356 --> 00:34:11.186 A:middle
Try out a Bluetooth keyboard,
pick up a game controller,

00:34:11.636 --> 00:34:14.315 A:middle
very important to maintaining
a good user experience.

00:34:15.516 --> 00:34:18.696 A:middle
And finally, please,
please test your controls

00:34:18.696 --> 00:34:19.636 A:middle
with accessibility.

00:34:19.886 --> 00:34:23.295 A:middle
The good news here is that the
Focus engine again does some

00:34:23.295 --> 00:34:23.956 A:middle
work for you.

00:34:24.106 --> 00:34:28.606 A:middle
For example, if the user wants
a high-contrast user interface,

00:34:29.036 --> 00:34:31.886 A:middle
the Focus engine will
helpfully put an extra ring

00:34:32.176 --> 00:34:34.545 A:middle
around the currently focused
item to really make it pop

00:34:34.545 --> 00:34:36.856 A:middle
out on the screen and
make it easier to see.

00:34:37.936 --> 00:34:40.815 A:middle
But for other accessibility
features, such as VoiceOver,

00:34:41.216 --> 00:34:43.735 A:middle
you're going to have the do
the same kinds of custom work

00:34:43.735 --> 00:34:45.676 A:middle
that you're used to
on iOS to make sure

00:34:45.676 --> 00:34:47.906 A:middle
that your controls
behave well on tvOS.

00:34:49.016 --> 00:34:53.235 A:middle
And so please test your controls
with features like VoiceOver

00:34:53.636 --> 00:34:56.815 A:middle
to make sure that they behavior
really well in all situations.

00:34:57.986 --> 00:35:01.336 A:middle
So that's our talk today.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:57.986 --> 00:35:01.336 A:middle
So that's our talk today.

00:35:01.656 --> 00:35:03.626 A:middle
We introduced two
new API properties,

00:35:03.626 --> 00:35:07.156 A:middle
preferredFocusEnvironments and
restoresFocusAfterTransition

00:35:07.476 --> 00:35:10.316 A:middle
to help manage preferred
focus in your app.

00:35:10.466 --> 00:35:12.936 A:middle
We also announced the new
focus interaction support

00:35:13.026 --> 00:35:16.516 A:middle
for SpriteKit and we think this
will really help reduce the

00:35:16.516 --> 00:35:18.106 A:middle
complexity of your
SpriteKit games.

00:35:18.106 --> 00:35:21.756 A:middle
And finally, we took you through
an in-depth case study on how

00:35:21.756 --> 00:35:25.036 A:middle
to build a custom focusable
control using our five star

00:35:25.036 --> 00:35:25.746 A:middle
rating control.

00:35:26.676 --> 00:35:28.236 A:middle
Now before we leave today,

00:35:28.706 --> 00:35:30.716 A:middle
we'd like to mention some
great online resources

00:35:30.756 --> 00:35:31.666 A:middle
to help you learn more.

00:35:33.006 --> 00:35:34.516 A:middle
Specifically, you
should definitely check

00:35:34.516 --> 00:35:36.806 A:middle
out the Apple TV
Tech Talks from 2016.

00:35:37.566 --> 00:35:39.976 A:middle
These cover -- these are
our videos available online.

00:35:39.976 --> 00:35:43.586 A:middle
They cover a wide array
of topics that are good

00:35:43.586 --> 00:35:46.296 A:middle
for people getting new to
the platform but also good

00:35:46.296 --> 00:35:48.976 A:middle
if you've had some experience
building for tvOS already.

00:35:49.846 --> 00:35:53.356 A:middle
Specifically, there's one
section, Focus-Driven Interfaces

00:35:53.356 --> 00:35:56.256 A:middle
with UIKit that goes
more in-depth into some

00:35:56.256 --> 00:35:58.216 A:middle
of the more basic
aspects of the Focus API,

00:35:58.976 --> 00:36:02.416 A:middle
some of the basic concepts,
an in-depth overview of some


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:58.976 --> 00:36:02.416 A:middle
some of the basic concepts,
an in-depth overview of some

00:36:02.416 --> 00:36:04.306 A:middle
of the parts of the API
that we didn't cover today.

00:36:05.166 --> 00:36:07.716 A:middle
It talks about some best
practices and also tools

00:36:07.716 --> 00:36:10.326 A:middle
and debugging support, which
we have available to help you

00:36:10.326 --> 00:36:11.246 A:middle
with building your apps.

00:36:11.856 --> 00:36:14.096 A:middle
You can find these
talks here at this URL.

00:36:14.496 --> 00:36:17.996 A:middle
And for more information
on today's session,

00:36:18.526 --> 00:36:20.756 A:middle
you can go to this URL to
get some helpful resources.

00:36:20.826 --> 00:36:23.266 A:middle
There are some other
related sessions this week

00:36:23.266 --> 00:36:24.186 A:middle
that you should check out.

00:36:24.716 --> 00:36:26.916 A:middle
If you're building games
with SpriteKit, definitely go

00:36:26.916 --> 00:36:29.726 A:middle
to the What's New in SpriteKit
session, where we also talk

00:36:29.726 --> 00:36:32.676 A:middle
about how to specifically
opt in your SpriteKit games

00:36:32.776 --> 00:36:36.836 A:middle
for focus support and then also
check out the What's New in tvOS

00:36:36.836 --> 00:36:39.096 A:middle
in Mastering UIKit
on tvOS sessions

00:36:39.426 --> 00:36:41.586 A:middle
to really take your UIKit
apps to the next level.

00:36:42.336 --> 00:36:43.866 A:middle
And of course, have
a great conference.

00:36:43.996 --> 00:36:44.736 A:middle
Thank you for coming today.

