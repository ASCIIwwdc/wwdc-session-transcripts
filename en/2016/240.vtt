WEBVTT

00:00:07.516 --> 00:00:20.516 A:middle
[ Music ]

00:00:21.516 --> 00:00:28.046 A:middle
[ Applause ]

00:00:28.546 --> 00:00:29.536 A:middle
&gt;&gt; Hello, everybody.

00:00:30.046 --> 00:00:32.016 A:middle
Thank you for coming out

00:00:32.016 --> 00:00:34.046 A:middle
and spending your
Friday afternoon with us.

00:00:34.286 --> 00:00:36.676 A:middle
Hopefully you had a
great week at WWDC.

00:00:36.676 --> 00:00:43.596 A:middle
And I'm excited for our talk
now because I think we're going

00:00:43.596 --> 00:00:47.206 A:middle
to discuss something
that all of you want.

00:00:48.326 --> 00:00:50.686 A:middle
Fundamentally, everybody is here

00:00:50.686 --> 00:00:54.006 A:middle
because you love
building great apps,

00:00:54.346 --> 00:00:58.496 A:middle
and you probably want those
great apps to have more users.

00:00:59.206 --> 00:01:04.556 A:middle
Now, the good news is, we want
to figure out opportunities

00:00:59.206 --> 00:01:04.556 A:middle
Now, the good news is, we want
to figure out opportunities

00:01:04.635 --> 00:01:07.686 A:middle
to offer your app at the
right time to our customers,

00:01:07.956 --> 00:01:10.206 A:middle
so that you get more engagement.

00:01:10.586 --> 00:01:14.646 A:middle
And we're going to spend the
entirety of this talk discussing

00:01:14.956 --> 00:01:19.176 A:middle
about different ways
that you can do that.

00:01:19.326 --> 00:01:22.126 A:middle
We promote apps in
various forms,

00:01:22.236 --> 00:01:25.416 A:middle
throughout the operating system
today in many different places.

00:01:26.476 --> 00:01:29.786 A:middle
Siri app suggestions are
available to our customers

00:01:29.786 --> 00:01:31.476 A:middle
when they swipe left from home,

00:01:31.476 --> 00:01:33.646 A:middle
as well as when they
invoke search.

00:01:35.196 --> 00:01:38.056 A:middle
Even after entering a
query, you may get results

00:01:38.116 --> 00:01:41.996 A:middle
from inside other
third party apps.

00:01:43.436 --> 00:01:47.576 A:middle
Handoff is another way we
advertise third party apps,

00:01:47.576 --> 00:01:48.786 A:middle
your apps, as well.

00:01:49.086 --> 00:01:52.996 A:middle
As you start an activity from
one device and more to the next,

00:01:53.366 --> 00:01:57.136 A:middle
we try to anticipate what
you're about to do and offer

00:01:57.136 --> 00:02:01.706 A:middle
that app's icon in the bottom
left hand corner of the screen.

00:01:57.136 --> 00:02:01.706 A:middle
that app's icon in the bottom
left hand corner of the screen.

00:02:01.886 --> 00:02:04.926 A:middle
In certain situations, where
we think what you really want

00:02:04.926 --> 00:02:09.406 A:middle
to do is play a form of media,
we'll promote your app's content

00:02:09.406 --> 00:02:10.886 A:middle
to the lock screen
of the device.

00:02:11.306 --> 00:02:15.776 A:middle
So say after you plug in a
headphone or Bluetooth pair

00:02:15.966 --> 00:02:19.786 A:middle
to your car or your
speakers, if there's an app

00:02:19.786 --> 00:02:21.986 A:middle
that you usually use
in that circumstance,

00:02:22.026 --> 00:02:24.906 A:middle
the system will learn that, and
then offer not only that app,

00:02:24.906 --> 00:02:26.286 A:middle
but that app's content.

00:02:26.286 --> 00:02:27.596 A:middle
And we're going to talk today

00:02:27.836 --> 00:02:33.476 A:middle
about how you can build a great
experience for that environment.

00:02:33.476 --> 00:02:35.616 A:middle
As you're using the
operating system,

00:02:35.616 --> 00:02:39.416 A:middle
say reading a news article,
you can create reminders

00:02:39.416 --> 00:02:42.966 A:middle
that are contextual to the
content you're staring at.

00:02:42.966 --> 00:02:44.836 A:middle
So for example, if
you're reading an article

00:02:44.836 --> 00:02:48.246 A:middle
and you decide that you want to
take another look at it at home

00:02:48.246 --> 00:02:50.616 A:middle
or you want to read it at home
because you're in the middle

00:02:50.616 --> 00:02:54.476 A:middle
of watching a WWDC presentation,
you can invoke Siri.

00:02:55.046 --> 00:02:59.706 A:middle
And Siri will understand
what you mean when you say,

00:02:59.706 --> 00:03:00.976 A:middle
"Remind me about this."

00:02:59.706 --> 00:03:00.976 A:middle
"Remind me about this."

00:03:01.036 --> 00:03:04.956 A:middle
It will have the context of
what's currently on screen.

00:03:05.666 --> 00:03:08.786 A:middle
And this will work in any app
that adopts some of the APIs

00:03:08.786 --> 00:03:10.556 A:middle
that we're going to
discuss later today.

00:03:10.556 --> 00:03:14.206 A:middle
This is particularly exciting
to you because this means

00:03:14.206 --> 00:03:16.956 A:middle
that when customers
open the Reminders app,

00:03:17.496 --> 00:03:20.946 A:middle
they'll be de-blinked right
back into your content.

00:03:21.436 --> 00:03:24.826 A:middle
New in iOS 10 is the promotion

00:03:24.826 --> 00:03:27.856 A:middle
of locations throughout
the system

00:03:28.026 --> 00:03:31.666 A:middle
when we think the customer has
a particular intent to want

00:03:31.666 --> 00:03:34.016 A:middle
to go somewhere, to
want to use a location

00:03:34.276 --> 00:03:35.956 A:middle
that they've been
recently looking at.

00:03:36.206 --> 00:03:37.466 A:middle
We'll be talking later today

00:03:37.466 --> 00:03:42.296 A:middle
about how you can get your app's
data flowing through the system.

00:03:44.696 --> 00:03:47.816 A:middle
Multitasking as well
is another interface

00:03:48.056 --> 00:03:51.506 A:middle
where we will promote locations
we think the customer is

00:03:51.506 --> 00:03:52.166 A:middle
interested in.

00:03:52.166 --> 00:03:56.916 A:middle
You can get your app, your
icon, suggested right there

00:03:56.916 --> 00:03:59.986 A:middle
at the prime real estate
in the Multitasking UI.

00:04:00.696 --> 00:04:06.206 A:middle
New in iOS 10 as
well is our promotion

00:04:06.206 --> 00:04:09.496 A:middle
of your app's contact
information

00:04:09.846 --> 00:04:13.426 A:middle
within the native contact app.

00:04:14.376 --> 00:04:18.706 A:middle
So you notice here, there's
a handle that's been found

00:04:18.706 --> 00:04:19.276 A:middle
in WhatsApp.

00:04:19.276 --> 00:04:21.305 A:middle
And we'll talk later today

00:04:21.305 --> 00:04:24.856 A:middle
about how you can get your
app's content in that interface.

00:04:27.216 --> 00:04:33.566 A:middle
So, to learn when to promote
you, the operating system needs

00:04:33.616 --> 00:04:37.476 A:middle
to learn about your
data and your app.

00:04:37.736 --> 00:04:43.446 A:middle
Now, the good news is that a few
simple APIs will give you much

00:04:43.446 --> 00:04:45.936 A:middle
of the value that I
just described and more.

00:04:47.096 --> 00:04:50.256 A:middle
In addition to having your
app promoted at various times,

00:04:50.366 --> 00:04:53.596 A:middle
you'll also get deeper Siri
integration like I described

00:04:54.426 --> 00:04:56.266 A:middle
with the contextual reminders.

00:04:56.266 --> 00:04:59.896 A:middle
So what we're going to do
today, is we're going to talk

00:04:59.896 --> 00:05:02.586 A:middle
about these APIs and
we're going to walk you

00:04:59.896 --> 00:05:02.586 A:middle
about these APIs and
we're going to walk you

00:05:02.656 --> 00:05:07.006 A:middle
through proper adoption of
them so that all of you end

00:05:07.006 --> 00:05:10.686 A:middle
up getting more engagement
from users due

00:05:10.686 --> 00:05:12.666 A:middle
to promotion throughout the OS.

00:05:12.986 --> 00:05:16.976 A:middle
First, we're going to talk about
NSUserActivity and schema.org.

00:05:17.586 --> 00:05:21.266 A:middle
NSUserActivity is the kind
of the API that is the eyes

00:05:21.266 --> 00:05:22.396 A:middle
of the operating system.

00:05:22.396 --> 00:05:26.376 A:middle
It helps us understand what the
customer is currently staring

00:05:26.376 --> 00:05:27.836 A:middle
at on screen.

00:05:28.036 --> 00:05:33.566 A:middle
And schema.org is somewhat
of an equivalent for the web.

00:05:33.566 --> 00:05:36.126 A:middle
Next, we're going to talk
about some new enhancements

00:05:36.126 --> 00:05:39.146 A:middle
and new APIs around apps
that handle locations.

00:05:39.186 --> 00:05:42.756 A:middle
So if you're an app like
Yelp that's a directory

00:05:43.096 --> 00:05:45.476 A:middle
that offers many different
locations, or conversely,

00:05:45.476 --> 00:05:48.246 A:middle
if you're an app like Uber
that consumes locations,

00:05:48.286 --> 00:05:50.426 A:middle
this will be very
relevant to you.

00:05:51.036 --> 00:05:54.016 A:middle
Then we'll talk about
building a great experience

00:05:54.016 --> 00:05:55.646 A:middle
around media apps suggestions.

00:05:56.006 --> 00:06:00.146 A:middle
I showed you earlier an example
of the type of content promotion

00:05:56.006 --> 00:06:00.146 A:middle
I showed you earlier an example
of the type of content promotion

00:06:00.146 --> 00:06:02.666 A:middle
that will happen, say
after a customer plugs

00:06:02.666 --> 00:06:04.266 A:middle
in their headphones,
and we'll talk

00:06:04.266 --> 00:06:06.566 A:middle
about how you can get
your content front

00:06:06.566 --> 00:06:07.906 A:middle
and center in that interface.

00:06:08.656 --> 00:06:10.446 A:middle
And then, we'll try to overview

00:06:10.476 --> 00:06:12.366 A:middle
about all the different things
we hopefully learn today.

00:06:12.946 --> 00:06:17.846 A:middle
To kick things off with
NSUserActivity and schema.org,

00:06:17.846 --> 00:06:20.106 A:middle
I'd love to invite
Sofiane onto the stage.

00:06:20.286 --> 00:06:20.606 A:middle
Sofiane?

00:06:21.516 --> 00:06:26.696 A:middle
[ Applause ]

00:06:27.196 --> 00:06:27.636 A:middle
&gt;&gt; Thanks, Daniel.

00:06:28.076 --> 00:06:29.636 A:middle
Good afternoon everyone.

00:06:29.866 --> 00:06:30.816 A:middle
My name is Sofiane.

00:06:31.166 --> 00:06:33.346 A:middle
And I'm really excited to
be here today to talk to you

00:06:33.346 --> 00:06:35.666 A:middle
about some of the features
that we've been up to lately.

00:06:37.046 --> 00:06:39.596 A:middle
Now, we just heard Daniel
talk about great ways

00:06:39.596 --> 00:06:42.346 A:middle
to promote the content in your
apps, throughout the system.

00:06:43.116 --> 00:06:44.806 A:middle
Now let's talk about
some of the APIs

00:06:44.876 --> 00:06:47.086 A:middle
that you can adopt
to make this happen.

00:06:47.416 --> 00:06:49.796 A:middle
Throughout this presentation,
we'll talk about features.

00:06:50.716 --> 00:06:53.456 A:middle
Some that you may be already
familiar with, like Handoff

00:06:53.456 --> 00:06:56.506 A:middle
or Spotlight Search, and some
new features we're introducing

00:06:56.506 --> 00:06:59.226 A:middle
in iOS 10, like location
suggestions for instance.

00:07:00.246 --> 00:07:02.216 A:middle
Now all of the features
that you're looking at here,

00:07:02.456 --> 00:07:03.346 A:middle
have something in common.

00:07:03.976 --> 00:07:07.016 A:middle
And it's a single API
called NSUserActivity.

00:07:07.876 --> 00:07:10.146 A:middle
First, some background.

00:07:10.146 --> 00:07:13.576 A:middle
NSUserActivity was introduced
in iOS 8, support Handoff,

00:07:13.996 --> 00:07:15.696 A:middle
which is the amazing
feature that allows you

00:07:15.696 --> 00:07:18.586 A:middle
to start an activity on a
device and pick it up right

00:07:18.586 --> 00:07:19.786 A:middle
where you left off on another.

00:07:20.276 --> 00:07:23.866 A:middle
Last year in iOS
9, we added support

00:07:23.866 --> 00:07:26.476 A:middle
to promote content directly

00:07:26.476 --> 00:07:29.886 A:middle
from NSUserActivity inside
Spotlight Search results.

00:07:30.556 --> 00:07:34.476 A:middle
Now, this year in iOS 10, we
further enhance NSUserActivities

00:07:34.756 --> 00:07:37.906 A:middle
so it can capture locations
viewed inside your app

00:07:38.266 --> 00:07:40.556 A:middle
and promote them in many
places throughout the system.

00:07:41.006 --> 00:07:42.786 A:middle
Even inside other apps.

00:07:43.496 --> 00:07:46.606 A:middle
NSUserActivity now also
provides context to Siri,

00:07:47.116 --> 00:07:50.706 A:middle
so Siri can now help you get
directions, or make a call

00:07:50.706 --> 00:07:53.566 A:middle
to the place you're
looking at inside an app.

00:07:53.846 --> 00:07:54.896 A:middle
Also new in iOS 10,

00:07:55.576 --> 00:07:58.316 A:middle
NSUserActivity enables
your communication app

00:07:58.706 --> 00:08:00.806 A:middle
to be promoted straight
from a contact card,

00:07:58.706 --> 00:08:00.806 A:middle
to be promoted straight
from a contact card,

00:08:00.806 --> 00:08:02.536 A:middle
as an alternate communication
method.

00:08:03.086 --> 00:08:05.556 A:middle
Now, I know what you
guys are thinking.

00:08:06.036 --> 00:08:07.396 A:middle
"That's cool," hopefully.

00:08:08.006 --> 00:08:10.146 A:middle
"But how does this work?"

00:08:10.836 --> 00:08:12.846 A:middle
Well, let me tell you,
it's really straightforward

00:08:12.916 --> 00:08:14.766 A:middle
and we have a lot of great
content to talk about.

00:08:14.766 --> 00:08:15.956 A:middle
So let's dive right in.

00:08:16.896 --> 00:08:20.016 A:middle
We're going to talk about
NSUserActivity and schema.org.

00:08:20.736 --> 00:08:22.386 A:middle
These APIs allow you

00:08:22.386 --> 00:08:24.306 A:middle
to seamlessly integrate
with the system.

00:08:24.766 --> 00:08:28.396 A:middle
NSUserActivity for native apps,
and schema.org for the web.

00:08:29.266 --> 00:08:30.806 A:middle
We'll focus on the
NSUserActivity first.

00:08:32.066 --> 00:08:34.946 A:middle
NSUserActivity is a
lightweight interface

00:08:35.076 --> 00:08:39.285 A:middle
to capture application state
as users move through your app,

00:08:39.376 --> 00:08:41.006 A:middle
in a way that can
be restored later.

00:08:41.806 --> 00:08:44.476 A:middle
So for instance, here we're
looking at the Yelp app

00:08:44.476 --> 00:08:47.736 A:middle
which is a local search app,
and as the user browses the app,

00:08:48.326 --> 00:08:51.126 A:middle
we created an NSUserActivity
capturing the information

00:08:51.126 --> 00:08:53.046 A:middle
that we need to recreate
the state later.

00:08:54.036 --> 00:08:56.396 A:middle
So for instance, when I trigger
a search for a restaurant,

00:08:56.826 --> 00:08:59.066 A:middle
we follow the same pattern
of creating activities.

00:08:59.796 --> 00:09:03.126 A:middle
And again, when I actually
view result from that list.

00:08:59.796 --> 00:09:03.126 A:middle
And again, when I actually
view result from that list.

00:09:04.186 --> 00:09:07.156 A:middle
Now, in this particular case,
we're looking at a location.

00:09:08.006 --> 00:09:11.486 A:middle
In iOS 10, NSUserActivity
is now more aware

00:09:11.486 --> 00:09:14.166 A:middle
about certain concepts
such as locations

00:09:14.166 --> 00:09:15.806 A:middle
or communication interactions.

00:09:16.516 --> 00:09:18.326 A:middle
We'll talk about this in a
minute, but before I wanted

00:09:18.326 --> 00:09:20.176 A:middle
to take a closer
look at this screen.

00:09:21.746 --> 00:09:24.886 A:middle
So here we create an activity
and describe it with information

00:09:24.886 --> 00:09:27.756 A:middle
to recreate the state later,
as well as submitted data.

00:09:27.756 --> 00:09:30.876 A:middle
For instance, the
location's name or address.

00:09:31.656 --> 00:09:32.706 A:middle
Then we inform the system

00:09:32.706 --> 00:09:35.026 A:middle
that this represents
the current user state,

00:09:35.536 --> 00:09:38.646 A:middle
and we decide whether it will
be advertised for Handoff,

00:09:39.816 --> 00:09:41.846 A:middle
available temporarily
throughout the system

00:09:41.846 --> 00:09:42.956 A:middle
for location suggestions.

00:09:43.956 --> 00:09:45.986 A:middle
Or added to the on
device index --

00:09:46.666 --> 00:09:50.466 A:middle
or added to the Spotlight on
device index, so that it appears

00:09:50.466 --> 00:09:51.526 A:middle
in Spotlight Search results.

00:09:51.966 --> 00:09:55.096 A:middle
Now there are a few related
sessions on this topic,

00:09:55.096 --> 00:09:57.876 A:middle
specifically on adoption
of NSUserActivities

00:09:57.876 --> 00:09:59.226 A:middle
for Handoff and App Search.

00:09:59.706 --> 00:10:01.306 A:middle
Really recommend that you
guys go check them out.

00:09:59.706 --> 00:10:01.306 A:middle
Really recommend that you
guys go check them out.

00:10:01.306 --> 00:10:03.966 A:middle
They provide a lot
of great content.

00:10:04.126 --> 00:10:05.546 A:middle
Alright, now let's dig
into the code, shall we?

00:10:05.986 --> 00:10:08.706 A:middle
So, I'm going to show you how
you create these activities.

00:10:09.806 --> 00:10:12.446 A:middle
So here we're extenuating an
instance of NSUserActivity.

00:10:12.926 --> 00:10:15.006 A:middle
And providing it with
an activity type.

00:10:15.006 --> 00:10:16.536 A:middle
That's the string
that you provide.

00:10:16.676 --> 00:10:19.576 A:middle
It's the same string that you
specify in your info plist.

00:10:20.776 --> 00:10:23.186 A:middle
Now we recommend to use a
reverse the NS style notation

00:10:23.186 --> 00:10:24.486 A:middle
here to keep the strings unique.

00:10:24.486 --> 00:10:28.596 A:middle
Next, our activity needs
a title, and we're going

00:10:28.596 --> 00:10:31.416 A:middle
to use a title that describes
the content we're looking

00:10:31.416 --> 00:10:31.796 A:middle
at here.

00:10:32.096 --> 00:10:33.256 A:middle
So here we're looking
at a restaurant.

00:10:33.646 --> 00:10:36.736 A:middle
And something to keep in mind
is that this is the public face

00:10:36.736 --> 00:10:37.746 A:middle
of your user activities.

00:10:38.056 --> 00:10:40.066 A:middle
This is how, for instance,
they're represented

00:10:40.066 --> 00:10:41.206 A:middle
in Spotlight Search results.

00:10:41.586 --> 00:10:42.966 A:middle
So you want to make
sure you use a title

00:10:42.966 --> 00:10:44.686 A:middle
that is descriptive
and meaningful.

00:10:46.096 --> 00:10:49.246 A:middle
Next, we're enabling Handoff,
App Search, and public indexing,

00:10:49.686 --> 00:10:51.356 A:middle
since the content we're
viewing here is public.

00:10:52.016 --> 00:10:55.286 A:middle
And then we're setting
a dictionary

00:10:55.286 --> 00:10:58.016 A:middle
on the userInfo property,
capturing the information

00:10:58.016 --> 00:10:59.886 A:middle
that we need to recreate
the state

00:11:00.086 --> 00:11:01.366 A:middle
when the activity is restored.

00:11:01.946 --> 00:11:04.326 A:middle
Now in that case,
we use the unique ID

00:11:04.326 --> 00:11:07.466 A:middle
of that location we were
working with, and typically,

00:11:07.726 --> 00:11:09.746 A:middle
when the activity is being
restored, for instance,

00:11:09.746 --> 00:11:13.276 A:middle
when it's handed off to another
device, you can fetch back

00:11:13.276 --> 00:11:16.016 A:middle
that ID from the server
and restore the location

00:11:16.236 --> 00:11:17.776 A:middle
as the user would expect.

00:11:18.896 --> 00:11:20.686 A:middle
Now to fully describe
your activity

00:11:20.846 --> 00:11:22.546 A:middle
and for richer search results,

00:11:22.846 --> 00:11:24.756 A:middle
you can use this
class we introduced

00:11:24.756 --> 00:11:27.826 A:middle
in iOS 9 called CSSearchableItem
AttributeSet.

00:11:29.056 --> 00:11:33.186 A:middle
It provides a common language
between your app and the system

00:11:33.216 --> 00:11:35.916 A:middle
to describe your content better.

00:11:36.096 --> 00:11:39.066 A:middle
Now, if you have a website
that mirrors the content

00:11:39.386 --> 00:11:40.936 A:middle
that you're looking
at inside your app,

00:11:41.486 --> 00:11:45.946 A:middle
can provide the web URL so
that if your activity is being

00:11:45.946 --> 00:11:47.986 A:middle
for instance, handed
off to a device

00:11:47.986 --> 00:11:49.256 A:middle
where your app is not installed,

00:11:49.546 --> 00:11:51.516 A:middle
it will be appropriately
launched

00:11:52.026 --> 00:11:53.716 A:middle
in Safari instead,
following that link.

00:11:54.756 --> 00:11:57.786 A:middle
And finally, we call
becomeCurrent on the activity,

00:11:58.136 --> 00:11:59.166 A:middle
indicating to the system

00:11:59.166 --> 00:12:01.216 A:middle
that this represents
the current user state.

00:11:59.166 --> 00:12:01.216 A:middle
that this represents
the current user state.

00:12:01.396 --> 00:12:03.286 A:middle
This is what the user is
seeing on their screen.

00:12:04.986 --> 00:12:07.516 A:middle
Now, what happens when your
app is actually being launched?

00:12:07.516 --> 00:12:09.546 A:middle
When your activity is being
restored, for instance?

00:12:09.846 --> 00:12:12.316 A:middle
Or handed off to another device?

00:12:13.506 --> 00:12:15.756 A:middle
Your application is
launched, which is good,

00:12:16.276 --> 00:12:18.676 A:middle
and a UIApplication
delegate method is called,

00:12:19.016 --> 00:12:21.626 A:middle
called continueUserActivity
restorationHandler.

00:12:22.426 --> 00:12:24.766 A:middle
The first thing we need to do
here is check the activity type

00:12:25.316 --> 00:12:27.456 A:middle
and make sure that it
matches one that we expect.

00:12:27.966 --> 00:12:29.076 A:middle
That case matches the one

00:12:29.076 --> 00:12:30.406 A:middle
that we were just
working with earlier.

00:12:31.066 --> 00:12:32.786 A:middle
And then we can use the
User Input Dictionary

00:12:32.786 --> 00:12:33.956 A:middle
to start restoring the state.

00:12:34.556 --> 00:12:38.026 A:middle
Earlier, we had put the
unique ID of that location.

00:12:38.026 --> 00:12:40.746 A:middle
So typically here, we would
be able to fetch it back

00:12:40.746 --> 00:12:43.166 A:middle
from the server and
then restore it back

00:12:43.166 --> 00:12:46.286 A:middle
and display the right controller
as the user would expect it.

00:12:46.916 --> 00:12:49.916 A:middle
So with minimal code here,
we were able to benefit

00:12:49.916 --> 00:12:52.846 A:middle
from three great features;
Handoff, Spotlight Search,

00:12:52.846 --> 00:12:54.476 A:middle
and contextual Siri reminders.

00:12:55.676 --> 00:12:58.056 A:middle
Now, we'll talk about some of
the other features listed below.

00:12:59.206 --> 00:13:00.286 A:middle
Before, let me ask you this.

00:12:59.206 --> 00:13:00.286 A:middle
Before, let me ask you this.

00:13:00.976 --> 00:13:03.406 A:middle
Have you ever been in a
situation where you're hungry

00:13:03.596 --> 00:13:05.766 A:middle
and you're trying to find
a good restaurant to eat?

00:13:06.516 --> 00:13:08.916 A:middle
So you start in Yelp and
you find the perfect place.

00:13:09.586 --> 00:13:10.596 A:middle
Then you want to
text your friends

00:13:10.596 --> 00:13:11.466 A:middle
so that they can meet you there.

00:13:12.156 --> 00:13:14.306 A:middle
So you switch to
messages, start writing,

00:13:14.556 --> 00:13:15.826 A:middle
"Hey guys, I found this place."

00:13:15.826 --> 00:13:17.726 A:middle
But then you realize you don't
actually have the address

00:13:17.726 --> 00:13:19.666 A:middle
of that place, so you
switch back to Yelp,

00:13:20.166 --> 00:13:22.226 A:middle
you copy the address, then
you switch back to messages.

00:13:22.226 --> 00:13:25.376 A:middle
You paste it in there, and
then you're done finally.

00:13:26.186 --> 00:13:27.956 A:middle
Except you're not,
because at some point,

00:13:28.086 --> 00:13:29.336 A:middle
you're also going to
need to get there.

00:13:29.546 --> 00:13:31.026 A:middle
So you're going to
switch through maps,

00:13:31.376 --> 00:13:32.916 A:middle
and there's probably more
back and forth in there.

00:13:33.336 --> 00:13:34.856 A:middle
And you get the idea.

00:13:34.856 --> 00:13:36.006 A:middle
It's not a great experience.

00:13:38.976 --> 00:13:40.216 A:middle
So in iOS 10, we're trying

00:13:40.216 --> 00:13:42.216 A:middle
to make this experience
much easier.

00:13:43.106 --> 00:13:44.606 A:middle
You still start at a same point.

00:13:44.786 --> 00:13:45.806 A:middle
You're looking at a location,

00:13:45.806 --> 00:13:48.516 A:middle
say a restaurant,
inside your app.

00:13:48.516 --> 00:13:51.916 A:middle
And by adopting NSUserActivity,
your app can promote

00:13:52.016 --> 00:13:54.786 A:middle
that same location in many
different places throughout

00:13:54.786 --> 00:13:55.206 A:middle
the system.

00:13:56.086 --> 00:13:57.426 A:middle
When you switch away
from the app,

00:13:57.996 --> 00:14:00.686 A:middle
the multitasking UI
makes it very easy

00:13:57.996 --> 00:14:00.686 A:middle
the multitasking UI
makes it very easy

00:14:00.686 --> 00:14:03.416 A:middle
and offers this nice proactive
suggesting at the bottom,

00:14:03.866 --> 00:14:06.866 A:middle
offering to get directions
using your favorite routing app

00:14:07.306 --> 00:14:08.566 A:middle
to the place you
were just looking at.

00:14:09.136 --> 00:14:11.896 A:middle
If you go to Messages,
no more back and forth.

00:14:12.316 --> 00:14:14.826 A:middle
You can start writing
something like, "Let's meet at--

00:14:15.396 --> 00:14:17.886 A:middle
" and the QuickType UI
will automatically promote

00:14:17.886 --> 00:14:21.306 A:middle
that location directly into
QuickType from the content

00:14:21.306 --> 00:14:22.006 A:middle
that you're providing.

00:14:22.736 --> 00:14:24.896 A:middle
Same thing with Maps.

00:14:24.896 --> 00:14:27.796 A:middle
Maps promotes these locations
directly in the Maps app.

00:14:28.126 --> 00:14:29.166 A:middle
Not only in the Maps app,

00:14:29.166 --> 00:14:31.426 A:middle
but also in the new
Today View maps widget,

00:14:31.766 --> 00:14:34.366 A:middle
as well as in CarPlay which is
my favorite feature actually.

00:14:34.666 --> 00:14:35.156 A:middle
Imagine that.

00:14:35.556 --> 00:14:38.206 A:middle
Look at your app, get in
your car, tap on your screen,

00:14:38.586 --> 00:14:39.386 A:middle
that's it, you're done.

00:14:39.386 --> 00:14:40.236 A:middle
You can be on your way.

00:14:42.196 --> 00:14:45.196 A:middle
These locations can even be
promoted inside other apps.

00:14:45.436 --> 00:14:49.896 A:middle
So what we're looking at here
is a location provided by Yelp

00:14:49.896 --> 00:14:53.246 A:middle
through NSUserActivity
displayed inside the Uber app,

00:14:53.466 --> 00:14:58.326 A:middle
as the user engages with
a destination text field.

00:14:58.526 --> 00:15:00.456 A:middle
Again, it also provides
context to Siri,

00:14:58.526 --> 00:15:00.456 A:middle
Again, it also provides
context to Siri,

00:15:00.666 --> 00:15:03.326 A:middle
so you can now be looking
at your app and ask Siri

00:15:03.326 --> 00:15:05.776 A:middle
to get you directions
or make a call

00:15:05.776 --> 00:15:07.596 A:middle
to the place you're looking at.

00:15:08.236 --> 00:15:12.626 A:middle
So all of these features with
the adoption of NSUserActivity.

00:15:13.726 --> 00:15:15.936 A:middle
And all of these features
have something in common,

00:15:16.726 --> 00:15:18.156 A:middle
is that they all indicate

00:15:18.446 --> 00:15:21.086 A:middle
where the suggestion is
originally coming from,

00:15:21.496 --> 00:15:22.556 A:middle
in that case from Yelp.

00:15:23.236 --> 00:15:25.046 A:middle
Now imagine if this
were your app.

00:15:25.556 --> 00:15:26.206 A:middle
Wouldn't that be great?

00:15:27.156 --> 00:15:28.566 A:middle
Well, this is possible now.

00:15:29.406 --> 00:15:33.766 A:middle
NSUserActivity now allows you
to do so by capturing locations

00:15:33.766 --> 00:15:35.026 A:middle
that are viewed inside
your apps.

00:15:35.076 --> 00:15:39.036 A:middle
We're introducing new
simple APIs in both MapKit

00:15:39.126 --> 00:15:41.886 A:middle
and Core Spotlight, allowing
you to do that, and integrate

00:15:41.886 --> 00:15:43.996 A:middle
with all of these places
that I just talked about.

00:15:44.486 --> 00:15:48.426 A:middle
In terms of code, we're going
to create an NSUserActivity

00:15:48.486 --> 00:15:50.486 A:middle
and we're going to
reuse the same activity

00:15:50.486 --> 00:15:53.256 A:middle
that we had defined earlier,
and just add on top of it.

00:15:53.256 --> 00:15:55.196 A:middle
We don't have to create
separate activities.

00:15:55.946 --> 00:15:58.996 A:middle
So, for apps using
MapKit, it's as easy

00:15:58.996 --> 00:16:02.746 A:middle
as setting your MKMapItem to
this new MapItem property,

00:15:58.996 --> 00:16:02.746 A:middle
as setting your MKMapItem to
this new MapItem property,

00:16:03.016 --> 00:16:06.076 A:middle
defined as NSUserActivity.

00:16:06.996 --> 00:16:09.396 A:middle
And that's pretty much it.

00:16:09.396 --> 00:16:11.066 A:middle
This also has the
great side effect

00:16:11.186 --> 00:16:14.146 A:middle
of populating the
content attribute sets

00:16:14.146 --> 00:16:16.286 A:middle
for you automatically
so you don't --

00:16:16.286 --> 00:16:19.936 A:middle
so if you want to adopt App
Search, all you have to do is

00:16:19.936 --> 00:16:22.036 A:middle
to specify that you
want opt into App Search

00:16:22.296 --> 00:16:25.426 A:middle
and these locations
will also be indexed.

00:16:25.586 --> 00:16:28.746 A:middle
Now there's another way which is
by adopting App Search actually,

00:16:29.296 --> 00:16:31.266 A:middle
and for those of you who are
already familiar with that,

00:16:31.546 --> 00:16:33.666 A:middle
you can use CSSearchableItem
AttributeSet

00:16:34.076 --> 00:16:35.166 A:middle
and describe the location.

00:16:36.016 --> 00:16:37.326 A:middle
Now, let's break this
down a little bit.

00:16:37.626 --> 00:16:39.556 A:middle
First thing we're doing
here is setting the name

00:16:39.556 --> 00:16:42.296 A:middle
of the location, which
matches what we're looking at.

00:16:42.786 --> 00:16:43.846 A:middle
And that's required for all

00:16:43.846 --> 00:16:45.426 A:middle
of the UIs we just
talked about earlier.

00:16:45.976 --> 00:16:49.386 A:middle
Next, we're specifying the text
representation of the address,

00:16:49.896 --> 00:16:52.236 A:middle
and that's required for
all of the text based UIs,

00:16:52.236 --> 00:16:53.576 A:middle
such as the keyboard,
for instance.

00:16:53.996 --> 00:16:57.506 A:middle
Next, we're specifying the
latitude and longitudes.

00:16:57.806 --> 00:16:59.426 A:middle
That's optional,
but that insures

00:16:59.426 --> 00:17:01.726 A:middle
that your users are
accurately routed

00:16:59.426 --> 00:17:01.726 A:middle
that your users are
accurately routed

00:17:01.726 --> 00:17:04.106 A:middle
to the place you
intend to route them to.

00:17:04.596 --> 00:17:06.866 A:middle
Latitude and longitude is the
most precise representation

00:17:06.866 --> 00:17:08.826 A:middle
that you can use if you
have this information.

00:17:09.276 --> 00:17:12.746 A:middle
Next, we're setting the phone
number, and that allows us

00:17:12.746 --> 00:17:15.476 A:middle
to get access to Siri
so that we can say,

00:17:15.476 --> 00:17:16.616 A:middle
"Call this place," for instance.

00:17:17.675 --> 00:17:19.576 A:middle
And finally, we're indicating

00:17:19.576 --> 00:17:22.726 A:middle
that this content supports
both navigation and phone call.

00:17:23.156 --> 00:17:27.096 A:middle
This way, the results will be
presented in the spotlight UI.

00:17:27.096 --> 00:17:29.196 A:middle
In Spotlight Search results UI,

00:17:29.606 --> 00:17:33.026 A:middle
with the right quick action
icons to make a phone call

00:17:33.266 --> 00:17:35.656 A:middle
or get directions, for instance.

00:17:36.036 --> 00:17:37.696 A:middle
That's how you get
location suggestions.

00:17:37.696 --> 00:17:38.196 A:middle
It's that easy.

00:17:38.586 --> 00:17:41.036 A:middle
Now, your app is going
to be promoted in all

00:17:41.036 --> 00:17:41.876 A:middle
of these different places.

00:17:42.676 --> 00:17:43.856 A:middle
We think this is going

00:17:43.856 --> 00:17:47.226 A:middle
to provide a much richer
experience, both inside

00:17:47.226 --> 00:17:48.376 A:middle
but also outside your app.

00:17:49.186 --> 00:17:52.106 A:middle
Now, your brand can be further
promoted throughout the system.

00:17:52.616 --> 00:17:54.536 A:middle
Not within the confinement
of your apps only.

00:17:55.066 --> 00:17:57.856 A:middle
Let's move on to
contact interactions.

00:17:58.426 --> 00:18:03.606 A:middle
IOS 10 DP integrates
communication apps directly

00:17:58.426 --> 00:18:03.606 A:middle
IOS 10 DP integrates
communication apps directly

00:18:03.826 --> 00:18:04.686 A:middle
from a contact card.

00:18:05.296 --> 00:18:07.936 A:middle
So what we're looking at
here is a contact card

00:18:07.936 --> 00:18:10.346 A:middle
where the WhatsApp handle was
learned and displayed there.

00:18:10.956 --> 00:18:14.516 A:middle
When I go ahead and tap on the
Quick Action button at the top

00:18:14.516 --> 00:18:17.316 A:middle
to send a message, I'm
asked to select what method

00:18:17.316 --> 00:18:18.416 A:middle
of contact I'd like to use.

00:18:19.196 --> 00:18:23.616 A:middle
And if I do so, this choice can
even be remembered and persisted

00:18:23.686 --> 00:18:25.336 A:middle
as a default mean
of communication.

00:18:25.876 --> 00:18:29.656 A:middle
So your app can be promoted
there as a default channel

00:18:29.656 --> 00:18:31.606 A:middle
for messaging for
that specific contact.

00:18:32.776 --> 00:18:35.646 A:middle
That's also supported by
NSUserActivity together

00:18:35.646 --> 00:18:36.996 A:middle
with a new intense framework,

00:18:37.336 --> 00:18:38.746 A:middle
which is the same
framework you use

00:18:39.006 --> 00:18:40.596 A:middle
to get deep Siri integration.

00:18:41.366 --> 00:18:43.456 A:middle
There were two great talks about
this topic earlier this week.

00:18:43.976 --> 00:18:47.856 A:middle
I really recommend that
you guys go check them out.

00:18:47.856 --> 00:18:49.956 A:middle
So here we're looking
at this WhatsApp app,

00:18:50.296 --> 00:18:52.076 A:middle
sending a text message,
and we're going

00:18:52.076 --> 00:18:53.576 A:middle
to work on how this works.

00:18:53.576 --> 00:18:57.136 A:middle
So the first thing we do is
create an INInteraction object

00:18:57.136 --> 00:19:00.226 A:middle
which is a new object we're
defining in the intense API.

00:18:57.136 --> 00:19:00.226 A:middle
which is a new object we're
defining in the intense API.

00:19:01.636 --> 00:19:03.816 A:middle
This contains information
about the intent.

00:19:04.556 --> 00:19:08.366 A:middle
For instance, which
represents the user action.

00:19:08.366 --> 00:19:11.346 A:middle
So for instance, sending a text
message or making a video call,

00:19:12.166 --> 00:19:14.746 A:middle
as well as some other
information about the recipient,

00:19:14.746 --> 00:19:17.486 A:middle
the sender, and some
metadata in creating things

00:19:17.486 --> 00:19:19.866 A:middle
like whether the communication
was successful, for instance.

00:19:21.166 --> 00:19:24.826 A:middle
Next, you call the Donate
Method on your interaction.

00:19:25.216 --> 00:19:27.676 A:middle
This way the system will
learn about this interaction

00:19:27.676 --> 00:19:30.736 A:middle
and promote your app directly
inside a contact card.

00:19:32.036 --> 00:19:35.006 A:middle
Now, when users interact
with your app

00:19:35.126 --> 00:19:37.306 A:middle
through the contact card,
we follow the same pattern.

00:19:37.496 --> 00:19:40.146 A:middle
Create an INInteraction
representing what the user is

00:19:40.146 --> 00:19:40.636 A:middle
trying to do.

00:19:41.116 --> 00:19:43.496 A:middle
And wrap it up inside
an NSUserActivity

00:19:43.836 --> 00:19:45.126 A:middle
which your app is
then launched with.

00:19:45.886 --> 00:19:48.006 A:middle
Now let's see how this
translates into code.

00:19:49.006 --> 00:19:49.786 A:middle
The first thing here,

00:19:49.786 --> 00:19:51.816 A:middle
we're creating the
sender and recipients.

00:19:52.316 --> 00:19:55.126 A:middle
And something to note is
that if your app has access

00:19:55.126 --> 00:19:56.456 A:middle
to the user's address book,

00:19:57.056 --> 00:20:01.336 A:middle
you can specify what contact
identifier you're working

00:19:57.056 --> 00:20:01.336 A:middle
you can specify what contact
identifier you're working

00:20:01.336 --> 00:20:01.766 A:middle
with here.

00:20:02.116 --> 00:20:04.666 A:middle
And this way the system will
be able to better figure

00:20:04.666 --> 00:20:06.816 A:middle
out the right contact
to be augmented.

00:20:08.596 --> 00:20:09.566 A:middle
Next, we're creating intent.

00:20:10.226 --> 00:20:12.116 A:middle
And here we're using
the INSendMessageIntent

00:20:12.116 --> 00:20:13.436 A:middle
since we're sending
a text message.

00:20:14.346 --> 00:20:16.076 A:middle
Now there are three
communication intents available

00:20:16.076 --> 00:20:18.106 A:middle
to you for sending
text messages,

00:20:18.416 --> 00:20:20.016 A:middle
making audio, and video calls.

00:20:21.216 --> 00:20:23.656 A:middle
Now it's important
to note that you want

00:20:23.656 --> 00:20:26.596 A:middle
to also make sure you specify
what intents your app is capable

00:20:26.596 --> 00:20:27.886 A:middle
of handling in your info plist

00:20:28.246 --> 00:20:31.296 A:middle
to that pretty much the same
thing as with activity types,

00:20:31.296 --> 00:20:32.306 A:middle
what we talked about earlier.

00:20:32.756 --> 00:20:35.876 A:middle
Next, we'll provide the
service name we're using.

00:20:35.946 --> 00:20:37.086 A:middle
And here we're using WhatsApp.

00:20:37.086 --> 00:20:39.976 A:middle
And this is particularly
useful if your app deals

00:20:39.976 --> 00:20:41.106 A:middle
with multiple protocols.

00:20:41.276 --> 00:20:46.006 A:middle
So for instance, if you
have multi-client chat app,

00:20:46.136 --> 00:20:48.846 A:middle
which deals with both
Jabber and ICQ for instance,

00:20:49.196 --> 00:20:51.476 A:middle
you'll want to make sure you
use the right service name here.

00:20:51.966 --> 00:20:56.836 A:middle
Next, we create an INInteraction
object which captures all

00:20:56.836 --> 00:20:58.586 A:middle
of the information
we created before.

00:20:59.046 --> 00:21:00.766 A:middle
And some metadata
including things

00:20:59.046 --> 00:21:00.766 A:middle
And some metadata
including things

00:21:00.766 --> 00:21:02.786 A:middle
like directionality
of the communication.

00:21:03.496 --> 00:21:05.106 A:middle
Now since here we're
sending a text message,

00:21:05.436 --> 00:21:06.966 A:middle
we're using the outgoing
direction,

00:21:07.526 --> 00:21:09.866 A:middle
and that's the only
supported direction

00:21:10.056 --> 00:21:11.346 A:middle
for donations of interactions.

00:21:12.356 --> 00:21:14.906 A:middle
And finally, we donate this
interaction to the system.

00:21:15.536 --> 00:21:16.716 A:middle
This way it will be --

00:21:16.816 --> 00:21:18.936 A:middle
the system will be able

00:21:18.936 --> 00:21:24.626 A:middle
to augment the contacts you're
were communicating with.

00:21:24.886 --> 00:21:28.516 A:middle
Now again, like I said, when
users interact with your app

00:21:28.516 --> 00:21:30.886 A:middle
from a contact card, we
follow the same pattern

00:21:31.226 --> 00:21:33.596 A:middle
and use the same UI
application delegate method

00:21:34.066 --> 00:21:34.646 A:middle
to launch your app.

00:21:35.246 --> 00:21:37.226 A:middle
The first thing we're doing
here is check the intent

00:21:37.486 --> 00:21:40.776 A:middle
and interaction from
the NSUserActivity,

00:21:40.836 --> 00:21:42.916 A:middle
and then we can start
communication

00:21:43.256 --> 00:21:44.506 A:middle
with the intended recipients.

00:21:44.876 --> 00:21:47.876 A:middle
And that's how you get
contact interactions.

00:21:48.446 --> 00:21:51.166 A:middle
Now, your app can be promoted
straight from a contact card,

00:21:51.566 --> 00:21:53.256 A:middle
which is the most natural
way of communicating.

00:21:54.576 --> 00:21:55.066 A:middle
So we did it.

00:21:55.066 --> 00:21:56.416 A:middle
We checked everything
in that list.

00:21:56.416 --> 00:21:57.546 A:middle
But we're not done.

00:21:57.756 --> 00:21:59.156 A:middle
We have some more to talk about.

00:21:59.816 --> 00:22:01.826 A:middle
So let's talk about some
best practices to keep

00:21:59.816 --> 00:22:01.826 A:middle
So let's talk about some
best practices to keep

00:22:01.826 --> 00:22:04.156 A:middle
in mind while working
with NSUserActivity.

00:22:04.876 --> 00:22:06.986 A:middle
The first thing is to be lazy.

00:22:07.586 --> 00:22:08.286 A:middle
Okay, now we're talking.

00:22:09.176 --> 00:22:12.446 A:middle
So, imagine you're working in a
Mail client, and you're trying

00:22:12.446 --> 00:22:15.456 A:middle
to adopt Handoff so
that your users are able

00:22:15.456 --> 00:22:19.666 A:middle
to start writing an email on
their Mac and pick it up right

00:22:19.756 --> 00:22:21.726 A:middle
where they left off on
their iPhone, when they're

00:22:21.726 --> 00:22:22.536 A:middle
on the go for instance.

00:22:23.386 --> 00:22:25.156 A:middle
So here what we're doing
is we have a method

00:22:25.456 --> 00:22:28.456 A:middle
that is called every
single time a key is pressed

00:22:28.456 --> 00:22:28.996 A:middle
on the keyboard.

00:22:29.626 --> 00:22:31.706 A:middle
And every single
time, we recompute

00:22:31.766 --> 00:22:33.396 A:middle
and update the userinfo
dictionary.

00:22:34.436 --> 00:22:36.246 A:middle
Now that can be costly
and inefficient.

00:22:36.846 --> 00:22:40.036 A:middle
So instead what you should do is
to use the needsSave property,

00:22:40.406 --> 00:22:43.346 A:middle
indicating to the system
that this activity is dirty.

00:22:43.766 --> 00:22:47.216 A:middle
And then this way, the system
will be able to call you

00:22:47.216 --> 00:22:50.026 A:middle
at an opportune time to update
your userinfo dictionary.

00:22:50.736 --> 00:22:54.026 A:middle
For instance, right before the
activity is being handed off

00:22:54.186 --> 00:22:54.896 A:middle
to another device.

00:22:56.096 --> 00:22:57.396 A:middle
Now here, this is
what we're doing,

00:22:57.436 --> 00:23:01.476 A:middle
and we're implementing the
updateUserActivityState delegate

00:22:57.436 --> 00:23:01.476 A:middle
and we're implementing the
updateUserActivityState delegate

00:23:01.476 --> 00:23:03.176 A:middle
method, and this
is our opportunity

00:23:03.176 --> 00:23:04.986 A:middle
to update the userinfo
dictionary.

00:23:05.836 --> 00:23:07.386 A:middle
This way we can do it only once

00:23:07.386 --> 00:23:10.756 A:middle
and we're way more
efficient like that.

00:23:10.986 --> 00:23:12.856 A:middle
Next, make sure you
keep a strong reference

00:23:12.946 --> 00:23:13.846 A:middle
to the current activity.

00:23:14.696 --> 00:23:17.686 A:middle
So what we're doing here is
extenuating NSUserActivity,

00:23:18.166 --> 00:23:21.566 A:middle
doing a bunch of things to it,
calling becomeCurrent to it.

00:23:21.736 --> 00:23:22.166 A:middle
So that's good.

00:23:22.596 --> 00:23:24.916 A:middle
Except after that, we're not
keeping a strong reference

00:23:24.916 --> 00:23:25.896 A:middle
and exiting the function.

00:23:26.406 --> 00:23:27.796 A:middle
And therefore, the
activity is released

00:23:27.956 --> 00:23:30.546 A:middle
because it goes out of scope.

00:23:30.726 --> 00:23:32.086 A:middle
An activity release
cannot be current

00:23:32.086 --> 00:23:32.896 A:middle
because it doesn't exist.

00:23:33.536 --> 00:23:36.196 A:middle
So instead what you should
do is keep a strong reference

00:23:36.506 --> 00:23:37.496 A:middle
to the current activity.

00:23:38.116 --> 00:23:40.816 A:middle
If you're dealing with
UIViewControllers or anything

00:23:40.816 --> 00:23:42.806 A:middle
that conforms to a UI responder,

00:23:43.226 --> 00:23:45.496 A:middle
can also use the User
Activity Define --

00:23:45.666 --> 00:23:48.346 A:middle
User Activity Property,
defined on UI responder.

00:23:48.816 --> 00:23:50.396 A:middle
And this has the great effect

00:23:50.396 --> 00:23:53.786 A:middle
of having UIKit manage the
activity currentness for you.

00:23:54.096 --> 00:23:57.106 A:middle
So you don't have to call
becomeCurrent of invalidate it.

00:23:57.676 --> 00:23:59.686 A:middle
UIKit does it for you
as your view controller

00:23:59.686 --> 00:24:02.036 A:middle
for instance are linked
to the view hierarchy.

00:23:59.686 --> 00:24:02.036 A:middle
for instance are linked
to the view hierarchy.

00:24:03.456 --> 00:24:05.246 A:middle
Next, transfer a small payload.

00:24:05.246 --> 00:24:08.626 A:middle
So make sure that you keep
only just enough information

00:24:08.626 --> 00:24:10.026 A:middle
in your userinfo dictionary,

00:24:10.266 --> 00:24:12.176 A:middle
to recreate the states,
but not much more.

00:24:12.716 --> 00:24:16.916 A:middle
And remember that these user
info and activities are sent

00:24:17.326 --> 00:24:20.096 A:middle
over the air, by Bluetooth, so
that's why they need to be kept

00:24:20.096 --> 00:24:21.156 A:middle
as lightweight as possible.

00:24:21.726 --> 00:24:25.526 A:middle
So for instance, imagine you're
working on an app that deals

00:24:25.526 --> 00:24:27.976 A:middle
with large photos
downloaded from the internet.

00:24:28.746 --> 00:24:31.526 A:middle
So what we're doing here is
downloading these photos,

00:24:31.836 --> 00:24:33.576 A:middle
serializing them as
data, and putting them

00:24:33.576 --> 00:24:34.606 A:middle
in the userinfo dictionary,

00:24:35.136 --> 00:24:37.496 A:middle
which could be very
easily several megabytes,

00:24:37.606 --> 00:24:38.346 A:middle
which is not efficient.

00:24:39.226 --> 00:24:43.926 A:middle
Instead what you can do is try
to keep a unique item to fire

00:24:43.926 --> 00:24:48.206 A:middle
to that content you're working
with, for instance, the web URL,

00:24:48.566 --> 00:24:50.516 A:middle
this way when you're
restoring the activity,

00:24:50.516 --> 00:24:52.816 A:middle
you can maybe fetch
it back from a server

00:24:53.046 --> 00:24:54.446 A:middle
or obtain it through
other means.

00:24:55.726 --> 00:24:57.466 A:middle
Now if you really have to
deal with large payloads,

00:24:57.466 --> 00:24:59.036 A:middle
you can use continuation
streams,

00:24:59.376 --> 00:25:01.596 A:middle
and these are specifically
designed for that.

00:24:59.376 --> 00:25:01.596 A:middle
and these are specifically
designed for that.

00:25:01.876 --> 00:25:03.236 A:middle
There's a ton of
information on this

00:25:03.586 --> 00:25:05.036 A:middle
in the developer documentation.

00:25:05.986 --> 00:25:08.096 A:middle
Okay, one more.

00:25:08.326 --> 00:25:11.576 A:middle
Make sure you keep your activity
types unique and descriptive.

00:25:12.016 --> 00:25:13.206 A:middle
And that's to avoid collisions.

00:25:13.566 --> 00:25:14.416 A:middle
But it's also important

00:25:14.416 --> 00:25:16.926 A:middle
that they represent the
current user activity,

00:25:17.096 --> 00:25:18.536 A:middle
or the current user actions.

00:25:19.646 --> 00:25:21.596 A:middle
So instead of having a
single activity type here,

00:25:22.126 --> 00:25:23.726 A:middle
that I reuse everywhere
inside my app,

00:25:24.556 --> 00:25:27.456 A:middle
it's good to have multiple
activity types describing the

00:25:27.456 --> 00:25:28.396 A:middle
different parts of my app.

00:25:28.616 --> 00:25:30.956 A:middle
So for instance, one when
I'm viewing a location,

00:25:31.296 --> 00:25:33.066 A:middle
one when I'm searching
for locations,

00:25:34.146 --> 00:25:35.736 A:middle
and what you'll notice
here as well is

00:25:35.736 --> 00:25:40.776 A:middle
that I'm using a reverse DNS
style notation which makes sure

00:25:40.776 --> 00:25:44.326 A:middle
that there's no collision
with other activity types

00:25:44.546 --> 00:25:46.546 A:middle
that might have been
defined inside other apps.

00:25:47.106 --> 00:25:49.126 A:middle
Alright, time for a demo now.

00:25:49.286 --> 00:25:52.066 A:middle
So we're going to use
our Proactive Toolbox app

00:25:52.306 --> 00:25:54.406 A:middle
which is a sample we're
making available to you

00:25:54.406 --> 00:25:55.326 A:middle
on the Developer Library.

00:25:56.086 --> 00:25:59.146 A:middle
And we'll see how we
can adopt NSUserActivity

00:25:59.146 --> 00:26:00.216 A:middle
to promote locations.

00:25:59.146 --> 00:26:00.216 A:middle
to promote locations.

00:26:00.876 --> 00:26:04.266 A:middle
We'll also briefly touch on
Handoff as well as App Search.

00:26:05.246 --> 00:26:05.866 A:middle
Let's get writing.

00:26:16.306 --> 00:26:21.246 A:middle
Alright, so I'm going to launch
the Proactive Toolbox app here

00:26:22.476 --> 00:26:25.976 A:middle
and I have my device
running iOS 10 on the left,

00:26:25.976 --> 00:26:27.456 A:middle
and Xcode here right behind.

00:26:28.316 --> 00:26:30.406 A:middle
So I'm going to give you a
quick tour of the app first

00:26:30.406 --> 00:26:31.516 A:middle
to get an idea of what it does.

00:26:32.416 --> 00:26:35.056 A:middle
So here we have a
list of pizza places.

00:26:35.056 --> 00:26:37.156 A:middle
This is an app that
searches for pizza locally,

00:26:37.756 --> 00:26:41.226 A:middle
and uses core location to get
my current location as well

00:26:41.226 --> 00:26:45.116 A:middle
as MapKit to fetch places
that match the pizza criteria.

00:26:45.506 --> 00:26:47.726 A:middle
So I'm going to look
at the first one here,

00:26:48.246 --> 00:26:50.886 A:middle
and I get a richer page
with more details about it,

00:26:50.886 --> 00:26:54.096 A:middle
like the name, phone
number, address, website,

00:26:54.206 --> 00:26:55.866 A:middle
as well as a map of this place.

00:26:56.456 --> 00:26:59.226 A:middle
Now we're going to work
on how we can go ahead

00:26:59.226 --> 00:27:01.286 A:middle
and implement location
suggestions

00:26:59.226 --> 00:27:01.286 A:middle
and implement location
suggestions

00:27:01.686 --> 00:27:04.066 A:middle
so that this same
location is promoted

00:27:04.066 --> 00:27:04.986 A:middle
in many different places.

00:27:05.036 --> 00:27:07.236 A:middle
But before this, let's do that.

00:27:07.456 --> 00:27:08.436 A:middle
I'm going to time myself.

00:27:08.436 --> 00:27:08.846 A:middle
How about that?

00:27:09.636 --> 00:27:10.756 A:middle
See how long it takes to do so.

00:27:11.756 --> 00:27:13.186 A:middle
Now, I'll start the
timer and let's go.

00:27:13.796 --> 00:27:16.796 A:middle
Alright, so I'm going
to go in Xcode now.

00:27:17.166 --> 00:27:20.156 A:middle
And this is my location view
controller which is the control

00:27:20.156 --> 00:27:23.286 A:middle
that I use to display the
right, richer search --

00:27:23.286 --> 00:27:25.526 A:middle
the richer results
for the pizza place.

00:27:25.956 --> 00:27:26.746 A:middle
And this is the method

00:27:26.746 --> 00:27:29.786 A:middle
that I call every time a map
item is updated inside my app.

00:27:30.156 --> 00:27:34.096 A:middle
So I'm going to go ahead and
drag and drop this right there.

00:27:35.086 --> 00:27:37.116 A:middle
And this is where I'm
creating in NSUserActivity.

00:27:37.866 --> 00:27:41.226 A:middle
So as you can see, I am creating
an activity, providing it

00:27:41.226 --> 00:27:44.736 A:middle
with an activity type that is
meaningfully representing what

00:27:44.736 --> 00:27:45.126 A:middle
I'm doing.

00:27:45.666 --> 00:27:48.326 A:middle
In this case, I'm also using
a reverse DNS style notation

00:27:48.696 --> 00:27:50.846 A:middle
which makes sure that my
activity types are unique.

00:27:51.476 --> 00:27:53.786 A:middle
And I already defined
this activity type

00:27:53.786 --> 00:27:54.896 A:middle
in my info plist earlier.

00:27:55.716 --> 00:27:57.986 A:middle
Next, we're setting the
title and the keywords.

00:27:58.396 --> 00:28:00.216 A:middle
And again, here I'm
using a meaningful title

00:27:58.396 --> 00:28:00.216 A:middle
And again, here I'm
using a meaningful title

00:28:00.446 --> 00:28:01.326 A:middle
because that's what's going

00:28:01.326 --> 00:28:03.576 A:middle
to be the public face
of my user activity.

00:28:05.066 --> 00:28:08.246 A:middle
Next, I'm setting Handoff, App
Search, and Public Indexing,

00:28:08.776 --> 00:28:11.176 A:middle
because the content we're
looking at is public here.

00:28:11.796 --> 00:28:13.716 A:middle
And the more important
part here is this,

00:28:14.226 --> 00:28:16.696 A:middle
which is where I'm setting my
mapItem inside my activity.

00:28:17.646 --> 00:28:20.636 A:middle
Now again, this has
the side effect

00:28:20.636 --> 00:28:23.036 A:middle
of populating the
contentAttributeSets for us.

00:28:23.396 --> 00:28:24.746 A:middle
So that's what I'm
doing right there.

00:28:24.946 --> 00:28:28.386 A:middle
I'm just completing
that by indicating

00:28:28.386 --> 00:28:31.756 A:middle
that this content supports
navigation and phone call.

00:28:32.036 --> 00:28:34.356 A:middle
This way it will have
the right nice icons

00:28:34.486 --> 00:28:35.646 A:middle
in the Spotlight Search results.

00:28:36.646 --> 00:28:38.556 A:middle
Okay now, remember
about being lazy?

00:28:39.136 --> 00:28:40.116 A:middle
That's what I'm doing here.

00:28:40.476 --> 00:28:43.446 A:middle
So, setting needsSave to
True and the delegate method.

00:28:43.976 --> 00:28:48.276 A:middle
This way, the userActivity
delegate will be called

00:28:48.616 --> 00:28:50.826 A:middle
when I need to update
my userinfo dictionary.

00:28:52.066 --> 00:28:56.356 A:middle
And finally, I'm using the
userActivity property defined

00:28:56.356 --> 00:28:58.286 A:middle
by UR Responder in
my UIViewController,

00:28:58.696 --> 00:28:59.966 A:middle
and setting the activity to it

00:29:00.146 --> 00:29:01.556 A:middle
so that I keep a
strong reference

00:29:01.786 --> 00:29:04.276 A:middle
and that UIKit manages
it automatically for me.

00:29:05.536 --> 00:29:08.736 A:middle
Next, I'm going to
implement this UI --

00:29:09.026 --> 00:29:10.866 A:middle
this User Activity
Delegate Method,

00:29:11.286 --> 00:29:12.476 A:middle
updateUser ActivityState.

00:29:13.086 --> 00:29:16.296 A:middle
And this is where I'm going to
update my userinfo dictionary

00:29:16.786 --> 00:29:19.136 A:middle
with the content that I
define in this method below,

00:29:19.356 --> 00:29:22.366 A:middle
which returns the
dictionary of the information,

00:29:22.366 --> 00:29:23.396 A:middle
the relevant information,

00:29:23.396 --> 00:29:25.226 A:middle
that I need to recreate
this state later.

00:29:26.056 --> 00:29:27.816 A:middle
Okay, let's go ahead,
build and run.

00:29:34.046 --> 00:29:37.406 A:middle
Okay, so safe to say
the same place here.

00:29:37.406 --> 00:29:39.556 A:middle
Okay, I didn't break
anything for a change.

00:29:39.916 --> 00:29:42.856 A:middle
So I'm going to go ahead
and double-tap Home,

00:29:43.536 --> 00:29:47.936 A:middle
and now as you can see,
we're seeing this nice banner

00:29:47.936 --> 00:29:50.226 A:middle
at the bottom to get
directions to the place

00:29:50.226 --> 00:29:51.286 A:middle
that I was just looking at.

00:29:51.286 --> 00:29:51.946 A:middle
It's very easy.

00:29:52.216 --> 00:29:52.766 A:middle
Super handy.

00:29:54.066 --> 00:29:56.106 A:middle
Same thing when I go to Maps.

00:29:56.106 --> 00:29:59.986 A:middle
I see that same location
directly here,

00:29:59.986 --> 00:30:01.676 A:middle
even showing my application
icon.

00:29:59.986 --> 00:30:01.676 A:middle
even showing my application
icon.

00:30:02.416 --> 00:30:04.636 A:middle
[Applause] thank you.

00:30:05.516 --> 00:30:08.746 A:middle
[ Applause ]

00:30:09.246 --> 00:30:10.716 A:middle
Alright, let's zoom back out.

00:30:11.286 --> 00:30:16.136 A:middle
Same thing when I go to
Messages, and say something

00:30:16.136 --> 00:30:17.026 A:middle
like "Let's meet at-- ."

00:30:17.326 --> 00:30:21.966 A:middle
You see that I have the same
location right there being

00:30:21.966 --> 00:30:26.246 A:middle
suggested directly inside the
QuickType UI provided by my app,

00:30:26.246 --> 00:30:29.426 A:middle
so I can just tap on it and
both the name of the place

00:30:29.426 --> 00:30:30.766 A:middle
and the address get inserted.

00:30:31.516 --> 00:30:35.626 A:middle
[ Applause ]

00:30:36.126 --> 00:30:37.996 A:middle
But, it even works
with incoming messages.

00:30:37.996 --> 00:30:40.516 A:middle
So here I'm getting a text
message asking me what their

00:30:40.516 --> 00:30:43.256 A:middle
phone number is, and it's
pulling the information right

00:30:43.256 --> 00:30:45.726 A:middle
from my NSUserActivity so
that I can just tap on it

00:30:45.836 --> 00:30:47.056 A:middle
and insert the phone
number as well.

00:30:47.866 --> 00:30:48.416 A:middle
That's really cool.

00:30:49.516 --> 00:30:51.546 A:middle
[ Applause ]

00:30:52.046 --> 00:30:53.256 A:middle
Now let's go check on timing.

00:30:53.966 --> 00:30:54.706 A:middle
Three minutes, forty.

00:30:55.136 --> 00:30:56.586 A:middle
So that's not bad.

00:30:56.586 --> 00:30:58.456 A:middle
All of these location
suggestions features,

00:30:58.896 --> 00:31:00.916 A:middle
provided by my app
with a single API.

00:30:58.896 --> 00:31:00.916 A:middle
provided by my app
with a single API.

00:31:01.746 --> 00:31:02.686 A:middle
Well, I cheated a little bit.

00:31:02.686 --> 00:31:05.446 A:middle
I had some sample codes
but you get the idea.

00:31:05.646 --> 00:31:08.216 A:middle
It's not a tremendous
investment.

00:31:08.376 --> 00:31:12.066 A:middle
So messages, QuickType,
Siri, Maps, multitasking,

00:31:12.066 --> 00:31:13.706 A:middle
all of that, a single API.

00:31:15.206 --> 00:31:18.346 A:middle
Alright, so we had worked
on App Search as well,

00:31:18.346 --> 00:31:19.376 A:middle
indexing this content.

00:31:19.936 --> 00:31:21.446 A:middle
So I'm going to go
back to the app first

00:31:21.446 --> 00:31:23.056 A:middle
and restore it in
its initial state.

00:31:23.656 --> 00:31:25.296 A:middle
Then I'm going to go ahead
and search for pizza.

00:31:26.056 --> 00:31:30.286 A:middle
Pizza. And sure enough, I
see that place right there.

00:31:30.286 --> 00:31:34.026 A:middle
But when I go ahead and tap
on it, my app is launched,

00:31:34.176 --> 00:31:35.436 A:middle
but my app doesn't
do the right thing.

00:31:35.436 --> 00:31:37.506 A:middle
It doesn't restore
the context back

00:31:37.506 --> 00:31:39.096 A:middle
to the user as they
would expect.

00:31:39.286 --> 00:31:41.996 A:middle
It doesn't show the rich
UI of the pizza place.

00:31:41.996 --> 00:31:43.766 A:middle
I'm going to go back
to my code here,

00:31:43.766 --> 00:31:46.016 A:middle
and this is because I
did not implement the

00:31:46.016 --> 00:31:47.716 A:middle
UIApplicationDelegate methods.

00:31:47.716 --> 00:31:51.536 A:middle
So I'm going to go to my
app delegates, drag and drop

00:31:51.536 --> 00:31:55.796 A:middle
that part, and what
I'm doing here is,

00:31:55.796 --> 00:31:58.916 A:middle
I'm implementing the continue
userActivity restorationHandler

00:31:59.166 --> 00:32:02.066 A:middle
UIApplicationDelegate, checking
the activity type first.

00:31:59.166 --> 00:32:02.066 A:middle
UIApplicationDelegate, checking
the activity type first.

00:32:02.236 --> 00:32:04.456 A:middle
This is the one that we
were just working with.

00:32:04.866 --> 00:32:07.006 A:middle
And then calling this method
that I defined right below,

00:32:07.346 --> 00:32:09.866 A:middle
which looks at the userInfo
and restores the state

00:32:09.866 --> 00:32:11.336 A:middle
as the user would expect.

00:32:12.106 --> 00:32:13.286 A:middle
I'm going to build
and run again,

00:32:13.846 --> 00:32:18.256 A:middle
and see that one more time.

00:32:18.386 --> 00:32:23.006 A:middle
So, I'll go back to
Spotlight, tap on this result,

00:32:23.516 --> 00:32:25.706 A:middle
and now we're doing the right
thing and restoring the content

00:32:26.176 --> 00:32:27.186 A:middle
as the user would expect.

00:32:28.126 --> 00:32:31.916 A:middle
So that's a quick tour of how
you can adopt NSUserActivity

00:32:32.196 --> 00:32:34.486 A:middle
for location suggestions,
App Search, and Handoff.

00:32:35.086 --> 00:32:36.756 A:middle
Alright, let's switch back.

00:32:37.516 --> 00:32:42.546 A:middle
[ Applause ]

00:32:43.046 --> 00:32:44.646 A:middle
So again, this sample
is available to you

00:32:44.646 --> 00:32:45.886 A:middle
on the Developer Library.

00:32:46.296 --> 00:32:48.446 A:middle
It actually does a couple
more things over there.

00:32:48.706 --> 00:32:51.996 A:middle
And it helps you test your
integration with NSUserActivity.

00:32:52.376 --> 00:32:55.136 A:middle
So it's a great tool to keep by
your side while you're working,

00:32:55.426 --> 00:32:56.966 A:middle
on the Location Suggestions
feature.

00:32:57.456 --> 00:33:02.716 A:middle
Okay, so we just saw how easy
it was to adopt NSUserActivity,

00:32:57.456 --> 00:33:02.716 A:middle
Okay, so we just saw how easy
it was to adopt NSUserActivity,

00:33:03.116 --> 00:33:06.486 A:middle
and promote your content in many
different parts of the system.

00:33:06.486 --> 00:33:09.636 A:middle
And we'll take a look at how
schema.org can provide some

00:33:09.636 --> 00:33:12.476 A:middle
of these benefits, specifically
for location suggestions.

00:33:13.006 --> 00:33:16.056 A:middle
Now when we design these
feature these location

00:33:16.056 --> 00:33:16.966 A:middle
suggestion features.

00:33:17.486 --> 00:33:19.296 A:middle
We wanted them to
work just as well

00:33:19.716 --> 00:33:21.446 A:middle
with websites you
view in Safari.

00:33:22.726 --> 00:33:26.936 A:middle
And so for this, for instance,
when you're looking at yelp.com

00:33:27.356 --> 00:33:29.686 A:middle
which mirrors the same content
we were looking at earlier

00:33:30.026 --> 00:33:32.916 A:middle
in the Yelp app, when you
switch away from Safari,

00:33:33.316 --> 00:33:35.376 A:middle
you get the same,
nice, handy suggestions

00:33:35.376 --> 00:33:38.306 A:middle
to get directions to this place.

00:33:38.306 --> 00:33:41.856 A:middle
And that's because
yelp.com adopts schema.org

00:33:42.086 --> 00:33:43.666 A:middle
which is the technology
we use for this.

00:33:45.046 --> 00:33:45.856 A:middle
A little bit of background,

00:33:47.086 --> 00:33:50.236 A:middle
schema.org is open web markup
standard that allows you

00:33:50.236 --> 00:33:52.126 A:middle
to semantically annotate
your content

00:33:52.566 --> 00:33:54.086 A:middle
with rich, structured, metadata.

00:33:54.716 --> 00:33:56.596 A:middle
So there are many
schemas providing a bunch

00:33:56.596 --> 00:33:58.676 A:middle
of representations
for various concepts.

00:33:59.146 --> 00:34:01.046 A:middle
And schema.org is also intended

00:33:59.146 --> 00:34:01.046 A:middle
And schema.org is also intended

00:34:01.046 --> 00:34:03.876 A:middle
to provide a rich search
experience to your users,

00:34:04.136 --> 00:34:07.786 A:middle
both inside iOS, but also
with all major search engines.

00:34:08.426 --> 00:34:11.606 A:middle
So these schemas
are all organized

00:34:11.606 --> 00:34:12.556 A:middle
in a tree-like structure.

00:34:13.065 --> 00:34:15.136 A:middle
So for instance,
more specific Schemas

00:34:15.136 --> 00:34:16.616 A:middle
like restaurants inherits

00:34:16.616 --> 00:34:19.246 A:middle
from more generic ones
like local business.

00:34:20.196 --> 00:34:21.876 A:middle
Let's take a look at
restaurant as an example.

00:34:22.976 --> 00:34:25.806 A:middle
So, it inherits from multiple
schemas and therefore,

00:34:25.806 --> 00:34:27.436 A:middle
inherits from all
of their properties,

00:34:27.436 --> 00:34:28.335 A:middle
defining each of these.

00:34:28.846 --> 00:34:31.626 A:middle
And for instance, the name
property which is defined

00:34:31.626 --> 00:34:35.346 A:middle
in the Thing schema would
capture things like the name

00:34:35.346 --> 00:34:36.525 A:middle
of the restaurant in that case.

00:34:37.156 --> 00:34:38.886 A:middle
Same with the address
which is defined

00:34:38.886 --> 00:34:40.696 A:middle
in the Local Business schema.

00:34:40.966 --> 00:34:43.136 A:middle
And things that are more
specific to restaurants,

00:34:43.386 --> 00:34:46.386 A:middle
such as whether it accepts
reservations are defined

00:34:46.386 --> 00:34:48.065 A:middle
directly inside the
Restaurant schema.

00:34:48.886 --> 00:34:51.516 A:middle
So here's an example of
schema.org in action.

00:34:52.056 --> 00:34:54.275 A:middle
On the left, we're seeing the
same websites we were looking

00:34:54.275 --> 00:34:54.755 A:middle
at earlier.

00:34:55.255 --> 00:34:58.346 A:middle
And on the right, content
that's semantically describes it

00:34:58.796 --> 00:35:01.556 A:middle
in a way that can be
understood by Safari.

00:34:58.796 --> 00:35:01.556 A:middle
in a way that can be
understood by Safari.

00:35:02.486 --> 00:35:03.826 A:middle
Creating things like
the phone number,

00:35:04.146 --> 00:35:05.836 A:middle
the name of the restaurant,
address,

00:35:05.836 --> 00:35:07.706 A:middle
rating, website, and more.

00:35:07.706 --> 00:35:08.516 A:middle
It can even do more.

00:35:09.646 --> 00:35:11.076 A:middle
Let's look at a simple example.

00:35:11.626 --> 00:35:14.056 A:middle
Here is a very simple
HTML document,

00:35:14.376 --> 00:35:15.966 A:middle
describing content
about a restaurant.

00:35:17.036 --> 00:35:19.076 A:middle
Now, let's look at how
this page could look like,

00:35:19.516 --> 00:35:23.166 A:middle
with the addition of
JSON-LD schema.org markups.

00:35:23.676 --> 00:35:26.646 A:middle
As you can see, we
haven't changed anything

00:35:26.646 --> 00:35:27.656 A:middle
to the actual content

00:35:27.886 --> 00:35:29.366 A:middle
or the actual structure
of the document.

00:35:29.786 --> 00:35:32.236 A:middle
We've just provided
metadata alongside,

00:35:33.026 --> 00:35:36.056 A:middle
describing the content in a
more machine friendly format.

00:35:36.896 --> 00:35:40.366 A:middle
It includes simple
properties like the telephone,

00:35:40.916 --> 00:35:44.976 A:middle
but also more complex structured
properties, like the address,

00:35:45.116 --> 00:35:47.676 A:middle
which is itself another
schema of type PostalAddress.

00:35:48.476 --> 00:35:52.696 A:middle
If you prefer, you can
also annotate your content

00:35:52.816 --> 00:35:54.556 A:middle
in line with microdata.

00:35:54.556 --> 00:35:56.166 A:middle
So that's what we're doing here.

00:35:56.506 --> 00:35:58.046 A:middle
We're changing the
actual structure

00:35:58.046 --> 00:36:00.906 A:middle
of our initial document
and augmenting it

00:35:58.046 --> 00:36:00.906 A:middle
of our initial document
and augmenting it

00:36:01.366 --> 00:36:03.176 A:middle
with inline microdata markups.

00:36:03.896 --> 00:36:07.656 A:middle
So Safari in iOS 10, it strikes
these location related schemas,

00:36:08.056 --> 00:36:09.266 A:middle
and promotes them much

00:36:09.266 --> 00:36:11.676 A:middle
like a native app would
promote NSUserActivity.

00:36:12.596 --> 00:36:15.016 A:middle
That also gives you some of
these benefits that we talked

00:36:15.016 --> 00:36:16.746 A:middle
about earlier for
location suggestions.

00:36:17.306 --> 00:36:20.536 A:middle
So these are some of the
schemas that safari extracts.

00:36:21.216 --> 00:36:23.696 A:middle
Anything with a PostalAddress,
GeoCoordinate,

00:36:24.036 --> 00:36:26.926 A:middle
or a telephone property, and the
Restaurant schema for instance

00:36:26.926 --> 00:36:29.516 A:middle
that we were working with
earlier, is a perfect example.

00:36:30.076 --> 00:36:33.486 A:middle
You have all of these
properties and you can combine

00:36:34.056 --> 00:36:40.066 A:middle
or specify the ones that you
have available at the time.

00:36:40.066 --> 00:36:42.856 A:middle
Alright, so we talked about
NSUserActivity and schema.org.

00:36:43.756 --> 00:36:46.876 A:middle
Use NSUserActivity,
to promote locations

00:36:47.326 --> 00:36:50.216 A:middle
that users view inside
your app in many places,

00:36:50.216 --> 00:36:51.836 A:middle
throughout the system,
effortlessly.

00:36:53.536 --> 00:36:54.906 A:middle
Also for communication apps.

00:36:55.656 --> 00:36:59.896 A:middle
And also of course for all
cases of Handoff and App Search.

00:37:00.406 --> 00:37:04.896 A:middle
Use schema.org for your website,
to get some of these benefits

00:37:05.266 --> 00:37:07.526 A:middle
for location suggestion,
much like you would get

00:37:07.526 --> 00:37:08.426 A:middle
through NSUserActivity.

00:37:09.776 --> 00:37:10.466 A:middle
Alright, now let's move

00:37:10.466 --> 00:37:12.946 A:middle
on to how your apps can
actually consume these location

00:37:12.946 --> 00:37:14.796 A:middle
suggestions like we
just saw earlier.

00:37:15.666 --> 00:37:16.946 A:middle
So here we're going to talk

00:37:16.946 --> 00:37:18.326 A:middle
about two different
ways to do that.

00:37:18.866 --> 00:37:21.716 A:middle
One through the keyboard, and
one specific to routing apps.

00:37:22.226 --> 00:37:24.326 A:middle
Let's start with Number 1.

00:37:25.896 --> 00:37:29.566 A:middle
So, if your app deals with
addresses and text format,

00:37:30.366 --> 00:37:33.766 A:middle
you can benefit from location
suggestions inside your app

00:37:34.126 --> 00:37:34.916 A:middle
through the QuickType UI.

00:37:34.916 --> 00:37:38.796 A:middle
Now here we're looking
at the Uber app,

00:37:39.406 --> 00:37:42.166 A:middle
which is ride sharing app for
those of you who don't know.

00:37:42.566 --> 00:37:46.086 A:middle
And as the user enters a text
field, which is annotated

00:37:46.086 --> 00:37:50.056 A:middle
as a location text field, we're
promoting content in that place

00:37:50.056 --> 00:37:52.076 A:middle
from Yelp, directly inside Uber.

00:37:53.206 --> 00:37:56.296 A:middle
Now this includes locations
that have been recently promoted

00:37:56.496 --> 00:38:00.186 A:middle
in NSUserActivities by
other apps, or schema.org.

00:37:56.496 --> 00:38:00.186 A:middle
in NSUserActivities by
other apps, or schema.org.

00:38:00.706 --> 00:38:03.046 A:middle
Upcoming locations
based on your calendar.

00:38:04.516 --> 00:38:07.096 A:middle
Locations that you may have
copied in your pasteboard.

00:38:07.096 --> 00:38:09.486 A:middle
So if you receive text message
with an address for instance.

00:38:10.136 --> 00:38:13.836 A:middle
And even, recent places
that you may have interacted

00:38:13.836 --> 00:38:15.056 A:middle
with using Siri.

00:38:15.576 --> 00:38:18.026 A:middle
So for instance, if
you ask to get --

00:38:18.196 --> 00:38:20.296 A:middle
if you ask Siri to show
you restaurants nearby,

00:38:20.296 --> 00:38:23.226 A:middle
and then interact with a
result, you can expect to see it

00:38:23.226 --> 00:38:25.736 A:middle
in there as part of
location suggestions.

00:38:27.766 --> 00:38:30.366 A:middle
So, we're introducing
a new API in UIKit.

00:38:30.366 --> 00:38:34.036 A:middle
So your app can inform the
system what content type your

00:38:34.316 --> 00:38:35.356 A:middle
text fields are expecting.

00:38:35.996 --> 00:38:39.666 A:middle
And in this case, we were
working with locations.

00:38:40.226 --> 00:38:42.306 A:middle
Now based on this hint,
the keyboard will be able

00:38:42.306 --> 00:38:45.296 A:middle
to make the right
proactive suggestions,

00:38:45.566 --> 00:38:50.576 A:middle
if there's any available
at this time in context.

00:38:50.656 --> 00:38:53.396 A:middle
But if there's no proactive
suggestions available,

00:38:53.656 --> 00:38:55.776 A:middle
it still provides a
much richer experience

00:38:55.776 --> 00:38:57.296 A:middle
in terms of auto correction.

00:38:57.646 --> 00:38:59.426 A:middle
Because autocorrect
can now be able to --

00:38:59.686 --> 00:39:02.636 A:middle
is now able to know what
content your app is expecting.

00:38:59.686 --> 00:39:02.636 A:middle
is now able to know what
content your app is expecting.

00:39:04.576 --> 00:39:07.166 A:middle
So, we added a new property

00:39:07.266 --> 00:39:09.756 A:middle
in UITextInputTraits
called text content type,

00:39:10.446 --> 00:39:12.156 A:middle
which allows you
to specify this.

00:39:12.156 --> 00:39:15.456 A:middle
So here, we're working with
a UITextField which conforms

00:39:15.456 --> 00:39:18.506 A:middle
to UITextInputTraits, and
therefore, gets this property.

00:39:19.156 --> 00:39:22.806 A:middle
And we're indicating that
this text field expects a full

00:39:22.806 --> 00:39:24.116 A:middle
street address.

00:39:24.356 --> 00:39:27.236 A:middle
There's a bunch of text content
types that you can work with,

00:39:27.806 --> 00:39:30.726 A:middle
ranging from describing
people to locations

00:39:30.916 --> 00:39:31.736 A:middle
and a bunch of others.

00:39:32.476 --> 00:39:33.966 A:middle
There's a full list
that's available to you

00:39:33.966 --> 00:39:34.976 A:middle
in the Developer Library.

00:39:35.866 --> 00:39:39.506 A:middle
But let's take a closer
look at two in particular.

00:39:39.506 --> 00:39:43.346 A:middle
So these two are both
related to locations,

00:39:44.036 --> 00:39:45.746 A:middle
but they have different
levels of granularity.

00:39:47.016 --> 00:39:48.996 A:middle
So you want to use the one

00:39:48.996 --> 00:39:52.046 A:middle
that represents your
use case the best

00:39:52.706 --> 00:39:54.416 A:middle
with the right level
of granularity.

00:39:54.826 --> 00:39:59.236 A:middle
So for instance, a navigation
app would typically expect a

00:39:59.236 --> 00:40:02.286 A:middle
full street address so that it
can accurately route the user

00:39:59.236 --> 00:40:02.286 A:middle
full street address so that it
can accurately route the user

00:40:02.286 --> 00:40:05.956 A:middle
to their destination, whereas a
weather app may only typically

00:40:05.956 --> 00:40:08.886 A:middle
care about the state and city

00:40:09.426 --> 00:40:12.146 A:middle
because that might just be
enough for a weather use case.

00:40:12.676 --> 00:40:15.276 A:middle
And as you can see here, based
on the different content type

00:40:15.276 --> 00:40:18.486 A:middle
that we specified, we're getting
different content promoted

00:40:18.486 --> 00:40:19.486 A:middle
inside the QuickType bar.

00:40:19.706 --> 00:40:22.206 A:middle
In one case, the full street
address, and in the other case,

00:40:22.206 --> 00:40:23.486 A:middle
just San Francisco, California.

00:40:24.076 --> 00:40:26.226 A:middle
And that's how easy
it is for you

00:40:26.226 --> 00:40:27.936 A:middle
to get suggestions
inside the keyboard.

00:40:28.986 --> 00:40:31.596 A:middle
Now let's look at how your
routing apps can benefit

00:40:31.596 --> 00:40:35.196 A:middle
from these nice direction
banners at the bottom.

00:40:36.066 --> 00:40:38.826 A:middle
Like Daniel said
earlier, routing apps,

00:40:39.086 --> 00:40:41.686 A:middle
third party routing apps
can also be elevated here,

00:40:42.186 --> 00:40:44.906 A:middle
accelerating users
directly into your apps

00:40:45.166 --> 00:40:47.966 A:middle
when we think there is an intent
for the user to get directions.

00:40:49.446 --> 00:40:52.756 A:middle
So we're leveraging an existing
API called MKDirectionsRequest

00:40:53.236 --> 00:40:54.706 A:middle
which was introduced in iOS 6,

00:40:55.386 --> 00:40:57.396 A:middle
and lets your routing
app register as such

00:40:57.456 --> 00:41:00.716 A:middle
and then handle all
directions request.

00:40:57.456 --> 00:41:00.716 A:middle
and then handle all
directions request.

00:41:00.716 --> 00:41:04.876 A:middle
iOS will learn over time what a
user's preferred routing app is

00:41:04.946 --> 00:41:07.866 A:middle
based on various factors, such
as engagement for instance.

00:41:08.366 --> 00:41:09.286 A:middle
And then suggest it

00:41:09.596 --> 00:41:11.556 A:middle
in the Multitasking
UI when appropriate.

00:41:12.466 --> 00:41:18.626 A:middle
So, to do so, you want to make
sure you configure your app

00:41:18.626 --> 00:41:19.966 A:middle
to receive directions requests.

00:41:19.996 --> 00:41:21.696 A:middle
And that's easily
done inside Xcode

00:41:22.226 --> 00:41:23.506 A:middle
through the capabilities panel.

00:41:24.186 --> 00:41:27.736 A:middle
In iOS 10, we're
introducing a new routing mode

00:41:27.736 --> 00:41:29.666 A:middle
which is specifically
for ride sharing apps.

00:41:30.686 --> 00:41:32.566 A:middle
Next, you want to
declare the map regions

00:41:32.566 --> 00:41:34.166 A:middle
where your app is
actually relevant.

00:41:34.446 --> 00:41:37.116 A:middle
So if your app is a local
metro app for instance,

00:41:37.286 --> 00:41:40.946 A:middle
you can specify that your app
is only relevant in this area.

00:41:40.946 --> 00:41:43.436 A:middle
And finally, you
want to make sure

00:41:43.436 --> 00:41:46.396 A:middle
that you take the appropriate
action when your app is launched

00:41:46.396 --> 00:41:47.736 A:middle
within MKDirectionsRequest.

00:41:48.066 --> 00:41:50.746 A:middle
And that is that your app should
automatically start directions,

00:41:51.026 --> 00:41:53.506 A:middle
or populate the UI in a
way that makes it easy

00:41:53.756 --> 00:41:55.676 A:middle
for the user to get directions.

00:41:56.486 --> 00:41:58.686 A:middle
In terms of code,
this is an example

00:41:58.686 --> 00:42:01.106 A:middle
of how you can adopt
MKDirectionsRequest.

00:41:58.686 --> 00:42:01.106 A:middle
of how you can adopt
MKDirectionsRequest.

00:42:01.996 --> 00:42:04.396 A:middle
MKDirectionsRequest
uses a URL theme.

00:42:04.836 --> 00:42:08.096 A:middle
So when your app is launched,
it's launched with a URL.

00:42:08.446 --> 00:42:09.886 A:middle
First thing we're
doing is checking

00:42:09.886 --> 00:42:11.866 A:middle
that the URL we're
getting is actually a

00:42:11.866 --> 00:42:13.266 A:middle
valid MKDirectionsRequest.

00:42:13.916 --> 00:42:17.156 A:middle
An MKDirectionsRequest offers
there is directions request

00:42:17.156 --> 00:42:18.416 A:middle
to your URL for that.

00:42:19.646 --> 00:42:22.906 A:middle
Next, we're extenuating an
instance of MKDirectionsRequest

00:42:23.096 --> 00:42:26.156 A:middle
from the contents of that URL
which will contain information

00:42:26.156 --> 00:42:28.566 A:middle
about the origin
and the destination

00:42:28.776 --> 00:42:30.416 A:middle
that the user is
trying to go to.

00:42:31.716 --> 00:42:34.446 A:middle
And next and new in iOS 10,
something really important,

00:42:34.446 --> 00:42:35.976 A:middle
especially for those of you

00:42:35.976 --> 00:42:38.106 A:middle
who already adopt
MKDirectionsRequest,

00:42:38.746 --> 00:42:41.176 A:middle
is that you can now be
launched with map items

00:42:41.176 --> 00:42:43.086 A:middle
that don't have geo-coordinates.

00:42:43.766 --> 00:42:45.536 A:middle
And in this case,
you'd want to geocode

00:42:45.536 --> 00:42:49.196 A:middle
that address dictionary you
were getting, using CLGeocoders,

00:42:49.506 --> 00:42:53.756 A:middle
geocode AddressDictionary, which
will give you back a place mark

00:42:53.806 --> 00:42:55.686 A:middle
with the right latitude
and longitude,

00:42:56.046 --> 00:42:57.686 A:middle
which will help you
then start directions

00:42:57.686 --> 00:42:58.726 A:middle
to the intended location.

00:42:59.286 --> 00:43:00.336 A:middle
And that's pretty much it.

00:42:59.286 --> 00:43:00.336 A:middle
And that's pretty much it.

00:43:01.186 --> 00:43:03.106 A:middle
That's how your routing app
can be promoted right there

00:43:03.436 --> 00:43:05.726 A:middle
in this prime real estate
of the Multitasking UI.

00:43:07.236 --> 00:43:10.206 A:middle
Now with that, I'd like to
hand it back to Daniel to talk

00:43:10.206 --> 00:43:11.516 A:middle
about media app suggestions.

00:43:11.906 --> 00:43:12.206 A:middle
Thank you.

00:43:13.646 --> 00:43:14.676 A:middle
&gt;&gt; That was awesome.

00:43:14.796 --> 00:43:20.986 A:middle
Alright. Now, let's talk
about media app suggestions.

00:43:21.686 --> 00:43:25.576 A:middle
So, if you're an app that
handles any form of media

00:43:25.576 --> 00:43:32.026 A:middle
like a podcast app or a
Spotify-like app, or even an app

00:43:32.276 --> 00:43:36.876 A:middle
that plays video, you'll
want to stay tuned for this.

00:43:37.066 --> 00:43:41.316 A:middle
iOS today, promotes the app
that we think you're likely

00:43:41.316 --> 00:43:42.986 A:middle
to use based on your behavior.

00:43:43.186 --> 00:43:45.756 A:middle
And we promote that app in
a bunch of different UIs

00:43:45.816 --> 00:43:46.906 A:middle
that I showed you earlier.

00:43:48.376 --> 00:43:51.586 A:middle
We in particular, offer those
suggestions in Spotlight

00:43:51.956 --> 00:43:53.516 A:middle
and in the Today View.

00:43:54.956 --> 00:44:00.976 A:middle
If the act of the suggestion
follows a particular trigger,

00:43:54.956 --> 00:44:00.976 A:middle
If the act of the suggestion
follows a particular trigger,

00:44:01.026 --> 00:44:04.706 A:middle
like for example when you plug
in headphones or Bluetooth pair,

00:44:05.016 --> 00:44:10.586 A:middle
or even arriving at a certain
location, and it's a media app,

00:44:10.796 --> 00:44:12.246 A:middle
we may further elevate that.

00:44:13.106 --> 00:44:14.616 A:middle
So, let's see what
this looks like.

00:44:14.766 --> 00:44:17.116 A:middle
This is what the promotion
in Spotlight looks like.

00:44:17.536 --> 00:44:21.526 A:middle
If say, I always or
frequently listen to podcasts

00:44:21.566 --> 00:44:22.826 A:middle
after plugging in headphones.

00:44:23.536 --> 00:44:25.606 A:middle
Notice, in the upper
left hand side,

00:44:25.606 --> 00:44:28.536 A:middle
the podcast app a suggestion.

00:44:28.536 --> 00:44:32.156 A:middle
In certain situations
though, the promotion

00:44:32.156 --> 00:44:34.806 A:middle
of that will be elevated
to the Lock Screen itself.

00:44:35.076 --> 00:44:39.096 A:middle
And so what you're seeing is,
the UI we'll traditionally use

00:44:39.096 --> 00:44:43.246 A:middle
for Handoff, is now being
used to promote an app

00:44:43.246 --> 00:44:46.056 A:middle
that we think I'm likely to
use because it followed one

00:44:46.056 --> 00:44:47.136 A:middle
of those triggers I mentioned.

00:44:47.916 --> 00:44:52.456 A:middle
Now, this is a pretty good
experience, but it's not as good

00:44:52.456 --> 00:44:55.616 A:middle
as it could be because at the
end of the day, what you have

00:44:55.616 --> 00:44:59.086 A:middle
to do now is you have to
unlock your device and swipe

00:44:59.086 --> 00:45:02.026 A:middle
in the right direction in
order to get to the content

00:44:59.086 --> 00:45:02.026 A:middle
in the right direction in
order to get to the content

00:45:02.026 --> 00:45:04.456 A:middle
that we're predicting, we
think you want to consume.

00:45:05.736 --> 00:45:07.176 A:middle
With a pretty simple API,

00:45:07.926 --> 00:45:11.496 A:middle
you can build a far better
experience for your users.

00:45:12.076 --> 00:45:14.466 A:middle
This is what it looks
like before.

00:45:14.466 --> 00:45:15.396 A:middle
This is what I just showed you.

00:45:15.996 --> 00:45:20.466 A:middle
And this is what it
looks like after.

00:45:20.846 --> 00:45:21.446 A:middle
We're getting it?

00:45:21.576 --> 00:45:22.846 A:middle
This is what it looks
like before.

00:45:24.116 --> 00:45:25.346 A:middle
This is what it looks
like after.

00:45:25.766 --> 00:45:26.906 A:middle
Far, far better.

00:45:27.736 --> 00:45:32.456 A:middle
Not only can the customer engage
on the content without having

00:45:32.456 --> 00:45:36.316 A:middle
to unlock their device, but you
also get your album art front

00:45:36.316 --> 00:45:37.776 A:middle
and center, in front
of the user.

00:45:38.346 --> 00:45:41.536 A:middle
Now, this might be quite
obvious in hindsight,

00:45:41.536 --> 00:45:44.736 A:middle
but this particular interface
offers also far better

00:45:44.736 --> 00:45:48.116 A:middle
conversion if you look
at the actual numbers.

00:45:48.316 --> 00:45:49.816 A:middle
And so, if you're interested

00:45:49.816 --> 00:45:52.346 A:middle
in getting your users
actually playing your content,

00:45:52.346 --> 00:45:55.506 A:middle
which presumably you are,
this is an API for you.

00:45:55.566 --> 00:45:56.816 A:middle
So how do we do this?

00:45:56.996 --> 00:45:58.356 A:middle
I'm going to walk
you through it.

00:45:58.356 --> 00:45:59.876 A:middle
The adoption is pretty simple.

00:46:00.306 --> 00:46:05.896 A:middle
It all boils down to a class
called MPPlayableContentManager.

00:46:06.386 --> 00:46:13.226 A:middle
So let's imagine you've got
a dictionary with a bunch

00:46:13.226 --> 00:46:14.166 A:middle
of different properties.

00:46:14.416 --> 00:46:18.936 A:middle
You know, a title, an artist,
an album, and what you want

00:46:18.936 --> 00:46:21.766 A:middle
to do is you want to get this
elevated to the Lock Screen

00:46:21.766 --> 00:46:24.916 A:middle
of the device when the system
thinks the customer's likely

00:46:24.916 --> 00:46:25.946 A:middle
to engage with it.

00:46:26.816 --> 00:46:28.166 A:middle
Well, you're going
to want to start off

00:46:28.166 --> 00:46:31.926 A:middle
by doing is importing Media
Player and declaring yourself

00:46:32.126 --> 00:46:35.876 A:middle
as conformant as to a
delegate in that class.

00:46:36.036 --> 00:46:37.176 A:middle
And then you're going to want

00:46:37.176 --> 00:46:41.606 A:middle
to implement a method called
playableContentManager.

00:46:42.056 --> 00:46:43.956 A:middle
It's pretty simple.

00:46:44.276 --> 00:46:47.376 A:middle
First, you want to
grab the media item

00:46:47.626 --> 00:46:50.046 A:middle
through whatever means you have.

00:46:50.046 --> 00:46:51.766 A:middle
Now, you'll obviously
want to be prepared,

00:46:51.766 --> 00:46:53.816 A:middle
especially if you're
fetching remote assets

00:46:54.326 --> 00:46:55.366 A:middle
for it not working.

00:46:55.366 --> 00:46:56.646 A:middle
In which case, you're
going to call

00:46:56.646 --> 00:46:59.756 A:middle
that call back handler
you see below as such

00:46:59.756 --> 00:47:04.126 A:middle
and the system will understand,
not to necessarily promote you.

00:46:59.756 --> 00:47:04.126 A:middle
and the system will understand,
not to necessarily promote you.

00:47:05.406 --> 00:47:08.966 A:middle
Next, you're going to want to
populate the NowPlayingInfo

00:47:08.966 --> 00:47:11.536 A:middle
on the Lock Screen
of the device.

00:47:11.906 --> 00:47:14.416 A:middle
This is a method that I
implemented, so I'm going

00:47:14.476 --> 00:47:15.836 A:middle
to show you what's behind it.

00:47:16.606 --> 00:47:19.466 A:middle
The first thing that you
want to do is grab a hold

00:47:19.786 --> 00:47:22.216 A:middle
onto the infoCenter object,

00:47:23.296 --> 00:47:26.936 A:middle
and then if you do
have a particular image

00:47:26.936 --> 00:47:30.356 A:middle
that this media item
has, you can promote

00:47:30.356 --> 00:47:32.536 A:middle
that to the Lock
Screen of the device.

00:47:32.536 --> 00:47:35.166 A:middle
If you have a default image that
you use, this is an opportunity

00:47:35.166 --> 00:47:37.306 A:middle
for you to get your
brand elevated as well.

00:47:37.306 --> 00:47:41.346 A:middle
Then you're going to
translate your representation

00:47:41.876 --> 00:47:43.876 A:middle
to the nowPlayingInfo
representation,

00:47:43.876 --> 00:47:47.946 A:middle
and most importantly, you're
going to set the nowPlayingInfo

00:47:47.946 --> 00:47:51.866 A:middle
on the infoCenter,
before the callback

00:47:51.866 --> 00:47:53.526 A:middle
that I showed you
earlier, completes.

00:47:53.526 --> 00:47:57.846 A:middle
So you want to do this
before your method closes.

00:47:58.526 --> 00:48:04.656 A:middle
If for whatever reason you don't
feel like or your app has a bug

00:47:58.526 --> 00:48:04.656 A:middle
If for whatever reason you don't
feel like or your app has a bug

00:48:04.656 --> 00:48:05.896 A:middle
in preparing playback.

00:48:05.896 --> 00:48:07.636 A:middle
Again, if the phone's
on Airplane Mode.

00:48:07.866 --> 00:48:10.566 A:middle
This is another opportunity
for you to error out early.

00:48:10.686 --> 00:48:12.766 A:middle
Now note, you don't
actually want

00:48:12.766 --> 00:48:14.376 A:middle
to start playback at this point.

00:48:15.046 --> 00:48:16.766 A:middle
You plugged in your
headphones, you want to wait

00:48:16.766 --> 00:48:19.296 A:middle
for the customer to
hit the Play button.

00:48:19.596 --> 00:48:21.226 A:middle
But you want to get
prepared for it,

00:48:21.226 --> 00:48:22.626 A:middle
load into Stream, and so forth.

00:48:23.086 --> 00:48:25.506 A:middle
And that's it.

00:48:26.036 --> 00:48:31.156 A:middle
So again, today, iOS promotes
apps based on your behavior.

00:48:31.606 --> 00:48:35.336 A:middle
If they follow a particular
trigger and they're a media app,

00:48:35.796 --> 00:48:37.426 A:middle
we elevate them to
the Lock Screen.

00:48:38.266 --> 00:48:41.286 A:middle
Through pretty simple adoption
that I just showed you,

00:48:41.286 --> 00:48:45.026 A:middle
you can get a much better
experience and an opportunity

00:48:45.026 --> 00:48:46.986 A:middle
to promote your brand

00:48:47.116 --> 00:48:51.376 A:middle
and whatever gorgeous
album art you have.

00:48:51.436 --> 00:48:55.966 A:middle
Alright, so let's summarize
what we walked through today.

00:48:56.516 --> 00:49:00.716 A:middle
We spoke about a few simple APIs

00:48:56.516 --> 00:49:00.716 A:middle
We spoke about a few simple APIs

00:49:00.756 --> 00:49:02.816 A:middle
that helped you deeply
integrate your app

00:49:02.946 --> 00:49:04.436 A:middle
into the operating system.

00:49:04.876 --> 00:49:08.156 A:middle
We spoke about NSUserActivity,
the kind of eyes

00:49:08.156 --> 00:49:09.396 A:middle
of the operating system.

00:49:09.746 --> 00:49:13.696 A:middle
It helps us understand
semantically what the customer

00:49:13.696 --> 00:49:15.526 A:middle
is currently staring at.

00:49:16.216 --> 00:49:20.406 A:middle
Then we spoke about schema.org,
which is in many ways,

00:49:20.566 --> 00:49:22.806 A:middle
similar to NSUserActivities
for the web.

00:49:23.336 --> 00:49:29.996 A:middle
We spoke about a new use
case in an existing APIs well

00:49:29.996 --> 00:49:35.636 A:middle
as a brand new UIKit API, to
help us as the system understand

00:49:35.636 --> 00:49:37.956 A:middle
when to elevate locations.

00:49:39.876 --> 00:49:43.676 A:middle
Then we spoke about MPContent,
MPPlayableContent Manager.

00:49:43.676 --> 00:49:48.466 A:middle
Which is particularly
relevant if you're a media app.

00:49:48.726 --> 00:49:51.976 A:middle
And hopefully it's been
clear to all of you today

00:49:51.976 --> 00:49:55.606 A:middle
that these APIs are easy
to adopt and easy to test.

00:49:57.536 --> 00:50:00.946 A:middle
There's some more
information available online,

00:49:57.536 --> 00:50:00.946 A:middle
There's some more
information available online,

00:50:01.986 --> 00:50:04.586 A:middle
as well as some great
related sessions

00:50:05.026 --> 00:50:07.706 A:middle
that you should check out,
if you haven't already.

00:50:08.896 --> 00:50:11.256 A:middle
There's a lot of related
work with SiriKit.

00:50:11.256 --> 00:50:15.296 A:middle
A lot of related work around our
search APIs that you saw today,

00:50:15.336 --> 00:50:19.696 A:middle
as well as some previous
sessions from the past two years

00:50:19.746 --> 00:50:23.486 A:middle
around Handoff and
aforementioned search APIs.

00:50:24.206 --> 00:50:29.376 A:middle
Lastly, I wanted to close by
saying that this is an area

00:50:29.376 --> 00:50:32.976 A:middle
that we are going to continue
to invest in as a company.

00:50:34.136 --> 00:50:39.716 A:middle
And what we need from you,
developers, is to inform us

00:50:40.106 --> 00:50:42.186 A:middle
about the capabilities
of your app

00:50:43.066 --> 00:50:45.436 A:middle
in the most detailed
way possible.

00:50:46.486 --> 00:50:49.346 A:middle
Because fundamentally the
more we know about your app,

00:50:49.666 --> 00:50:52.476 A:middle
the more we'll understand
when it's best to promote it.

00:50:53.436 --> 00:50:56.896 A:middle
And so, you saw today, a
lot of different situation

00:50:56.896 --> 00:51:00.536 A:middle
where there was varying levels
of kind of semantic detail

00:50:56.896 --> 00:51:00.536 A:middle
where there was varying levels
of kind of semantic detail

00:51:00.786 --> 00:51:03.956 A:middle
that you could annotate an
activity or a text field in.

00:51:04.576 --> 00:51:08.346 A:middle
I'd encourage you as much
as possible to try to be

00:51:08.346 --> 00:51:10.786 A:middle
as explicit as you
can when you do so,

00:51:10.786 --> 00:51:13.416 A:middle
not only to support the features
that we're discussing today,

00:51:13.686 --> 00:51:15.386 A:middle
but also to put your application

00:51:15.386 --> 00:51:16.946 A:middle
in a good place,
towards the future.

00:51:22.046 --> 00:51:23.136 A:middle
Thank you all for coming today.

00:51:23.136 --> 00:51:26.716 A:middle
I hope you had a great
WWDC and a great Friday.

00:51:27.426 --> 00:51:27.636 A:middle
Bye, bye.

00:51:28.516 --> 00:51:32.500 A:middle
[ Applause ]
