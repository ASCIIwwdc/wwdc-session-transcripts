WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:07.516 --> 00:00:19.516 A:middle
[ Music ]

00:00:20.516 --> 00:00:24.546 A:middle
[ Applause ]

00:00:25.046 --> 00:00:26.476 A:middle
&gt;&gt; Hello everybody.

00:00:26.596 --> 00:00:27.776 A:middle
Hello again if you just came

00:00:27.776 --> 00:00:29.476 A:middle
from the previous session,
thanks for staying.

00:00:29.836 --> 00:00:30.786 A:middle
And hello if you're new.

00:00:30.786 --> 00:00:31.926 A:middle
Hello to everyone downstairs,

00:00:31.926 --> 00:00:33.886 A:middle
and hello to everyone
watching online.

00:00:34.276 --> 00:00:38.036 A:middle
My name is Nick, I'm joined
today by my colleague, Leo,

00:00:38.636 --> 00:00:40.516 A:middle
and we're going to
talk about what's new

00:00:40.766 --> 00:00:42.166 A:middle
with Wallet and Apple Pay.

00:00:44.326 --> 00:00:46.816 A:middle
First of all, we're going to
have an update for Wallet.

00:00:47.376 --> 00:00:49.396 A:middle
We're going to talk
about passes.

00:00:49.396 --> 00:00:51.156 A:middle
We're going to talk
about some new features

00:00:51.156 --> 00:00:52.626 A:middle
for banks and for retailers.

00:00:52.906 --> 00:00:55.186 A:middle
And then we're going
to talk about WatchKit,

00:00:55.456 --> 00:00:58.626 A:middle
now you can use Apple Pay
not just to pay in-store

00:00:58.626 --> 00:01:02.106 A:middle
on Apple Watch, but also
inside WatchKit Apps.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.626 --> 00:01:02.106 A:middle
on Apple Watch, but also
inside WatchKit Apps.

00:01:03.236 --> 00:01:05.525 A:middle
We'll also talk about something
I'm really excited about

00:01:05.606 --> 00:01:11.096 A:middle
and that's the new extensions on
iOS, Siri, maps, and messages.

00:01:11.366 --> 00:01:12.866 A:middle
All of these new
extension points

00:01:13.126 --> 00:01:14.846 A:middle
that can be enabled
with Apple Pay.

00:01:15.206 --> 00:01:18.576 A:middle
And finally we'll talk about
something exciting and new,

00:01:18.576 --> 00:01:21.046 A:middle
I think you're all going
to love, testing Apple Pay

00:01:21.096 --> 00:01:23.036 A:middle
and the new Sandbox environment.

00:01:23.416 --> 00:01:25.416 A:middle
Let's get started.

00:01:26.996 --> 00:01:28.886 A:middle
What's new with PassKit.

00:01:30.276 --> 00:01:31.996 A:middle
So, hopefully you'll be aware

00:01:31.996 --> 00:01:36.346 A:middle
that Wallet isn't just Apple
Pay, it's passes as well.

00:01:36.896 --> 00:01:40.156 A:middle
And there's no better
time to start using passes

00:01:40.526 --> 00:01:43.516 A:middle
because more users are
engaging with Wallet

00:01:43.516 --> 00:01:45.226 A:middle
than ever, due to Apple Pay.

00:01:45.306 --> 00:01:47.126 A:middle
More people are opening
the Wallet App,

00:01:47.126 --> 00:01:48.196 A:middle
more people are using it.

00:01:48.276 --> 00:01:53.336 A:middle
Now, we don't have time today to
run through the pass ecosystem,

00:01:53.756 --> 00:01:55.466 A:middle
but we do have some
resources for you.

00:01:55.956 --> 00:01:57.896 A:middle
I'll tell you a little bit
about them just to remind you,

00:01:58.076 --> 00:01:59.286 A:middle
don't worry, not too much.

00:01:59.736 --> 00:02:03.656 A:middle
Passes enable you to get
gift cards, boarding passes,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:59.736 --> 00:02:03.656 A:middle
Passes enable you to get
gift cards, boarding passes,

00:02:03.826 --> 00:02:07.416 A:middle
rewards cards, event
tickets, membership cards,

00:02:07.816 --> 00:02:12.656 A:middle
and more directly into the
user's iPhone or Apple Watch.

00:02:13.066 --> 00:02:15.286 A:middle
And you can distribute
these passes in many ways,

00:02:15.316 --> 00:02:16.896 A:middle
through an app, through email,

00:02:17.386 --> 00:02:20.086 A:middle
SMS or iMessage,
web link or QR code.

00:02:20.086 --> 00:02:22.926 A:middle
And these passes can
be updated remotely.

00:02:22.926 --> 00:02:25.326 A:middle
And these updates show up
on a user's lock screen.

00:02:26.356 --> 00:02:30.416 A:middle
Things like date changes, for
an airline ticket, or relevancy.

00:02:30.416 --> 00:02:33.146 A:middle
Your passes can be relevant,
if you're near the store,

00:02:33.146 --> 00:02:34.266 A:middle
they'll show up on
the lock screen.

00:02:34.896 --> 00:02:37.096 A:middle
We have a session that talks
a little bit about some

00:02:37.096 --> 00:02:39.356 A:middle
of these passes and provides
you some more resources.

00:02:39.596 --> 00:02:41.216 A:middle
It's the home for
Apple Pay and more,

00:02:41.216 --> 00:02:42.206 A:middle
it was last year's session.

00:02:42.396 --> 00:02:44.186 A:middle
And there's plenty
of great resources

00:02:44.186 --> 00:02:45.636 A:middle
at developer.apple.com.

00:02:46.106 --> 00:02:49.186 A:middle
Let me talk now about
a few new changes.

00:02:49.276 --> 00:02:51.076 A:middle
Some things we've
changed over the past year

00:02:51.236 --> 00:02:52.266 A:middle
that maybe you didn't notice.

00:02:53.346 --> 00:02:54.736 A:middle
One of them was app placement.

00:02:54.736 --> 00:02:56.866 A:middle
We've actually changed the
pass design a little bit,

00:02:56.866 --> 00:02:58.796 A:middle
this happened in iOS 9.3.

00:02:59.336 --> 00:03:02.836 A:middle
Apps are now placed
on the front of passes


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.336 --> 00:03:02.836 A:middle
Apps are now placed
on the front of passes

00:03:03.246 --> 00:03:06.056 A:middle
and these app icons
can deep link directly

00:03:06.056 --> 00:03:07.706 A:middle
into your applications.

00:03:08.036 --> 00:03:11.586 A:middle
So these are great for
things like gift card top-up,

00:03:12.236 --> 00:03:14.966 A:middle
if you're a gift card pass
and you want and easy way

00:03:14.966 --> 00:03:17.586 A:middle
for the user to quickly
top it off, or an airline,

00:03:17.586 --> 00:03:18.776 A:middle
you want to go to the app

00:03:18.776 --> 00:03:20.296 A:middle
for more information
about the flight.

00:03:20.666 --> 00:03:24.546 A:middle
And it's very easy to add this,
you just need to add the pass

00:03:24.956 --> 00:03:30.046 A:middle
to your pass, the apps ID,
it's Adam ID from iTunes,

00:03:30.046 --> 00:03:36.496 A:middle
and also its URL scheme to deep
link in if you want to do that.

00:03:36.496 --> 00:03:39.356 A:middle
Last year we also
introduced a new type of pass,

00:03:39.936 --> 00:03:41.406 A:middle
the value-added services pass.

00:03:41.406 --> 00:03:47.016 A:middle
So passes can now transmit
information securely over NFC.

00:03:47.316 --> 00:03:49.426 A:middle
Things like loyalty
card information,

00:03:49.456 --> 00:03:52.996 A:middle
if you're in the US you might
have used the Walgreens Pass,

00:03:53.206 --> 00:03:54.916 A:middle
which lets you transmit
over NFC.

00:03:54.966 --> 00:03:57.996 A:middle
And support for value-added
passes has grown

00:03:57.996 --> 00:04:00.516 A:middle
over the past year for many
points of sale systems.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:57.996 --> 00:04:00.516 A:middle
over the past year for many
points of sale systems.

00:04:00.836 --> 00:04:03.946 A:middle
Verifone, Ingenico and
many other manufacturers

00:04:03.946 --> 00:04:07.086 A:middle
of payment terminals now
support this protocol.

00:04:07.636 --> 00:04:09.486 A:middle
There's some things
you may not know

00:04:09.486 --> 00:04:11.406 A:middle
about value-added
service passes,

00:04:11.736 --> 00:04:14.826 A:middle
they also support what we
call a one tap experience.

00:04:15.146 --> 00:04:16.286 A:middle
It looks a little like this.

00:04:16.286 --> 00:04:18.346 A:middle
It's where you actually
place the phone

00:04:18.346 --> 00:04:19.586 A:middle
on the payment terminal

00:04:19.856 --> 00:04:22.036 A:middle
and you'll transmit both
your payment information

00:04:22.516 --> 00:04:25.746 A:middle
and your loyalty
information in a single tap.

00:04:26.146 --> 00:04:29.096 A:middle
So it's deeply integrated
into the purchase process.

00:04:29.376 --> 00:04:31.876 A:middle
This also works with
Apple Watch as well.

00:04:35.636 --> 00:04:38.786 A:middle
Now these value-added service
passes can also be distributed

00:04:38.786 --> 00:04:42.766 A:middle
over NFC, and you can even
sign up for loyalty programs

00:04:42.766 --> 00:04:45.536 A:middle
from these NFC distributed
passes directly from Wallet,

00:04:46.006 --> 00:04:47.806 A:middle
to be shared and personalized.

00:04:48.086 --> 00:04:50.856 A:middle
You can actually sign up for
a loyalty program right there.

00:04:56.106 --> 00:04:59.386 A:middle
Now, there are a few caveats to
the value-added service passes.

00:04:59.546 --> 00:05:01.836 A:middle
One of them you might be
aware is that passes need


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.546 --> 00:05:01.836 A:middle
One of them you might be
aware is that passes need

00:05:01.836 --> 00:05:03.956 A:middle
to be signed using a
different certificate.

00:05:04.276 --> 00:05:06.456 A:middle
Regular passes are signed
with a certificate you create

00:05:06.456 --> 00:05:09.356 A:middle
at the developer portal, but
value-added service passes need

00:05:09.356 --> 00:05:12.076 A:middle
to be signed with an
NFC signing certificate.

00:05:12.946 --> 00:05:14.926 A:middle
Now, you need to request
these certificates.

00:05:14.926 --> 00:05:16.536 A:middle
You can contact us
to find out more.

00:05:16.536 --> 00:05:17.746 A:middle
I'm actually going
to have a link

00:05:17.746 --> 00:05:19.236 A:middle
at the end of this presentation.

00:05:19.506 --> 00:05:22.066 A:middle
So you can go and
request more information

00:05:22.066 --> 00:05:23.406 A:middle
about using value-added
service passes.

00:05:23.406 --> 00:05:25.956 A:middle
And we're also going to have
some engineers in the labs.

00:05:25.956 --> 00:05:28.036 A:middle
We got a lab right
after this session,

00:05:28.516 --> 00:05:30.536 A:middle
so if you have any
questions please come down,

00:05:30.606 --> 00:05:31.526 A:middle
we'd love to talk to you.

00:05:31.756 --> 00:05:37.216 A:middle
Let's talk about a few other
new features in PassKit.

00:05:37.216 --> 00:05:39.546 A:middle
Now these are specific
to card issuers,

00:05:39.546 --> 00:05:40.646 A:middle
but I think they're
pretty interesting,

00:05:40.646 --> 00:05:41.996 A:middle
even if you're not
a card issuer,

00:05:41.996 --> 00:05:45.056 A:middle
you might be interested
to know about them.

00:05:45.056 --> 00:05:46.876 A:middle
We offer some unique features

00:05:46.876 --> 00:05:49.056 A:middle
for card issuers
who use Apple Pay.

00:05:50.836 --> 00:05:54.386 A:middle
We also now support store
credit and debit cards.

00:05:54.536 --> 00:05:55.606 A:middle
Here's a Kohl's card.

00:05:55.866 --> 00:05:57.686 A:middle
So if you have a store
card you can add them.

00:05:57.686 --> 00:06:00.366 A:middle
So these aren't just for banks,
they're for retailers as well.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:57.686 --> 00:06:00.366 A:middle
So these aren't just for banks,
they're for retailers as well.

00:06:01.146 --> 00:06:04.356 A:middle
One really great feature
is app provisioning.

00:06:04.576 --> 00:06:06.486 A:middle
Now, we added this
last year and a couple

00:06:06.486 --> 00:06:09.986 A:middle
of apps have already adopted
it, Discover is one of them.

00:06:10.246 --> 00:06:11.586 A:middle
This lets you set up cards

00:06:11.586 --> 00:06:14.436 A:middle
in Apple Pay directly
from your own app.

00:06:14.436 --> 00:06:16.176 A:middle
You never need to leave you app,

00:06:16.176 --> 00:06:18.516 A:middle
to open Wallet, to
open preferences.

00:06:18.926 --> 00:06:22.486 A:middle
And it's available to any
existing Apple Pay issuer.

00:06:22.656 --> 00:06:27.146 A:middle
Now the API is documented
on developers.apple.com.

00:06:27.416 --> 00:06:29.816 A:middle
But you can also contact
us for more information.

00:06:29.856 --> 00:06:31.946 A:middle
We actually have an email
address, which I'll show

00:06:31.946 --> 00:06:35.036 A:middle
at the end, and we're going to
have people in the labs to help.

00:06:35.436 --> 00:06:38.456 A:middle
We also have this
great new button style,

00:06:38.456 --> 00:06:40.946 A:middle
which you can use
both for adding cards,

00:06:40.946 --> 00:06:43.226 A:middle
but also for adding
regular passes.

00:06:43.296 --> 00:06:44.846 A:middle
So if you're just
a pass developer,

00:06:44.846 --> 00:06:47.306 A:middle
you can use the new
PKPaymentButton style I'm

00:06:47.306 --> 00:06:47.936 A:middle
showing you here.

00:06:48.256 --> 00:06:50.696 A:middle
I'll have some codes to show
you how to do that in a minute.

00:06:52.086 --> 00:06:56.276 A:middle
Now something that's new
in iOS 10 is specifically

00:06:56.356 --> 00:06:59.956 A:middle
for card issuers and retailers
who might have partnerships,

00:06:59.956 --> 00:07:03.006 A:middle
either co-branded cards, or
they've got a partnership


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.956 --> 00:07:03.006 A:middle
either co-branded cards, or
they've got a partnership

00:07:03.006 --> 00:07:06.106 A:middle
with a bank, we now
let you enable a new

00:07:06.106 --> 00:07:07.326 A:middle
in-store experience.

00:07:07.386 --> 00:07:10.656 A:middle
You can present your cards
directly from your apps.

00:07:11.016 --> 00:07:15.176 A:middle
A really good use case of
this, you can redeem a coupon

00:07:15.276 --> 00:07:18.006 A:middle
from your app and immediately
present a payment method.

00:07:18.006 --> 00:07:20.956 A:middle
So maybe your app is
enabled with iBeacons,

00:07:20.956 --> 00:07:22.556 A:middle
it's got a great
in-store experience.

00:07:22.556 --> 00:07:25.556 A:middle
So you go into the store, you
redeem a coupon in the app,

00:07:25.816 --> 00:07:28.106 A:middle
you just press a button
and you can immediately pay

00:07:28.106 --> 00:07:28.736 A:middle
with Apple Pay.

00:07:28.926 --> 00:07:30.236 A:middle
The card could be right
there in your app.

00:07:30.756 --> 00:07:32.626 A:middle
It's a really easy API to use.

00:07:33.316 --> 00:07:34.576 A:middle
It's just on the Pass Library.

00:07:36.286 --> 00:07:38.916 A:middle
And you can use the new
PKPaymentButton style

00:07:38.916 --> 00:07:40.176 A:middle
for some consistent branding.

00:07:40.546 --> 00:07:43.166 A:middle
And this is the style .inStore.

00:07:43.616 --> 00:07:46.106 A:middle
We have another style I
just showed you to add it

00:07:46.106 --> 00:07:49.306 A:middle
to different class actually,
it's an Add to Pass Button,

00:07:49.306 --> 00:07:50.116 A:middle
but take a look

00:07:50.116 --> 00:07:51.676 A:middle
at the documentation
for more information.

00:07:52.976 --> 00:07:58.016 A:middle
Another feature that's pretty
interesting is associating your

00:07:58.016 --> 00:07:59.956 A:middle
applications with your cards.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:00.286 --> 00:08:01.956 A:middle
Again, this is great
if you're a retailer

00:08:02.186 --> 00:08:04.516 A:middle
and you have a co-branded
card or you have a partnership

00:08:04.586 --> 00:08:08.366 A:middle
with an issuing bank, you
can associate your app

00:08:08.366 --> 00:08:10.056 A:middle
with your store or
program cards,

00:08:10.336 --> 00:08:13.416 A:middle
which means it can default,
if the user wants to do that.

00:08:13.416 --> 00:08:15.936 A:middle
Here's the screen you'll
get for a VAS pass,

00:08:15.936 --> 00:08:17.946 A:middle
but it's the same
for payment passes.

00:08:18.856 --> 00:08:21.316 A:middle
You can default your card
when paying over NFC,

00:08:21.316 --> 00:08:23.986 A:middle
or new in iOS 10
you can also default

00:08:24.176 --> 00:08:25.956 A:middle
when paying with an application.

00:08:25.956 --> 00:08:28.396 A:middle
And also a website if
you're taking advantage

00:08:28.396 --> 00:08:29.876 A:middle
of the new Apple Pay
on the web stuff.

00:08:30.046 --> 00:08:34.236 A:middle
Now the great thing about most
of this is that no API required.

00:08:34.306 --> 00:08:36.155 A:middle
It's actually built
into the card itself.

00:08:36.496 --> 00:08:40.456 A:middle
All you need to do is get
your app, and its Adam ID

00:08:40.456 --> 00:08:43.775 A:middle
and URL scheme into the pass
when it's added to device.

00:08:44.176 --> 00:08:46.516 A:middle
Now to do that you can
talk to your issuing bank,

00:08:46.516 --> 00:08:48.216 A:middle
or if you're an issuing
bank, you can come talk

00:08:48.216 --> 00:08:50.446 A:middle
to us using the contact
information at the end

00:08:50.446 --> 00:08:53.616 A:middle
of the session, or come
and see us in the labs.

00:08:53.616 --> 00:08:56.726 A:middle
So that's some of the
new stuff in PassKit.

00:08:56.726 --> 00:09:01.466 A:middle
I want to talk now about Apple
Pay and what's new in Apple Pay.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:56.726 --> 00:09:01.466 A:middle
I want to talk now about Apple
Pay and what's new in Apple Pay.

00:09:01.796 --> 00:09:04.706 A:middle
And I also want to tell you
how Apple Pay has been doing.

00:09:05.866 --> 00:09:09.526 A:middle
So Apple Pay is an easy,
secure and private way

00:09:09.526 --> 00:09:14.356 A:middle
to pay both in-store
and within applications.

00:09:14.976 --> 00:09:17.156 A:middle
And it's got amazing
customer satisfaction.

00:09:17.296 --> 00:09:19.566 A:middle
It has one of the highest
customer satisfaction rates

00:09:19.566 --> 00:09:20.576 A:middle
of any payment method.

00:09:21.066 --> 00:09:25.416 A:middle
And Apple Pay is usable
today within applications.

00:09:25.866 --> 00:09:29.656 A:middle
You can pay using Apple
Pay directly from apps.

00:09:30.036 --> 00:09:32.846 A:middle
And thousands of apps have
already adopted worldwide

00:09:33.256 --> 00:09:36.656 A:middle
in the US, in China,
an example here.

00:09:36.966 --> 00:09:38.496 A:middle
We've recently announced
we're launching

00:09:38.496 --> 00:09:40.286 A:middle
in France, also Australia.

00:09:40.286 --> 00:09:42.766 A:middle
We've got many countries
that support Apple Pay.

00:09:42.916 --> 00:09:46.436 A:middle
And millions of users are
enjoying using Apple Pay.

00:09:46.746 --> 00:09:50.376 A:middle
And we've seen incredible growth
of Apple Pay, both in-store

00:09:50.376 --> 00:09:51.626 A:middle
and within applications.

00:09:51.846 --> 00:09:54.716 A:middle
And developers such as
yourselves have seen some great

00:09:54.716 --> 00:09:55.486 A:middle
results too.

00:09:56.276 --> 00:09:58.896 A:middle
Here's two apps that
I want to talk about.

00:09:58.896 --> 00:10:00.016 A:middle
One of them is Chairish.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.896 --> 00:10:00.016 A:middle
One of them is Chairish.

00:10:01.046 --> 00:10:02.216 A:middle
Now the Chairish app, they found

00:10:02.216 --> 00:10:04.996 A:middle
that when they used Apple Pay
their conversion rate tripled

00:10:05.166 --> 00:10:06.526 A:middle
from other payment methods.

00:10:06.856 --> 00:10:08.166 A:middle
That's a huge increase.

00:10:08.376 --> 00:10:09.826 A:middle
I can't think of
another payment method

00:10:09.826 --> 00:10:11.736 A:middle
that has such great results.

00:10:12.266 --> 00:10:15.796 A:middle
And StubHub in their
iOS application found

00:10:15.796 --> 00:10:19.766 A:middle
that Apple Pay was driving
twice as many new users

00:10:19.826 --> 00:10:21.056 A:middle
than any other payment method.

00:10:21.336 --> 00:10:23.576 A:middle
So this isn't just for
your existing customers,

00:10:23.696 --> 00:10:26.776 A:middle
Apple Pay can bring you
new customers as well.

00:10:27.036 --> 00:10:29.336 A:middle
Apple Pay apps are often
highlighted on the app store

00:10:29.336 --> 00:10:30.256 A:middle
in their own sections.

00:10:30.436 --> 00:10:33.466 A:middle
We often run promotions
of Apple Pay apps.

00:10:33.676 --> 00:10:35.466 A:middle
We've also seen some
great results in some

00:10:35.466 --> 00:10:36.906 A:middle
of the new countries
we've launched in.

00:10:37.596 --> 00:10:39.816 A:middle
One country I want to
briefly talk about is China.

00:10:40.756 --> 00:10:43.166 A:middle
We've seen some great
applications in China.

00:10:43.266 --> 00:10:45.686 A:middle
I was so lucky to go to
Beijing a few months ago

00:10:45.686 --> 00:10:47.426 A:middle
and taught some developers
using Apple Pay

00:10:47.726 --> 00:10:49.396 A:middle
and they've seen some
great results too.

00:10:50.086 --> 00:10:52.636 A:middle
Apple Pay in China
offers full support

00:10:52.636 --> 00:10:55.386 A:middle
for China UnionPay
credit and debit cards.

00:10:55.866 --> 00:10:59.686 A:middle
And the Apple Pay API
is accepted by CUP,

00:10:59.966 --> 00:11:04.686 A:middle
that's China Union Pay, PayEase,
Lianlian Pay, YeePay, and UMS.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.966 --> 00:11:04.686 A:middle
that's China Union Pay, PayEase,
Lianlian Pay, YeePay, and UMS.

00:11:04.686 --> 00:11:07.526 A:middle
These are major Chinese
payment processes.

00:11:07.746 --> 00:11:12.286 A:middle
We also have documentation
both interface guidelines

00:11:12.286 --> 00:11:15.716 A:middle
and our Getting Started Guide
are available in Chinese,

00:11:15.936 --> 00:11:18.066 A:middle
they're also now
available in French as well,

00:11:18.066 --> 00:11:19.456 A:middle
now that we're launching
in France.

00:11:19.686 --> 00:11:22.486 A:middle
You can check out our developer
site for links to those.

00:11:22.486 --> 00:11:28.376 A:middle
Now I want to talk about some
new API and if you're developing

00:11:28.376 --> 00:11:30.396 A:middle
for Apple Pay already,

00:11:30.746 --> 00:11:32.326 A:middle
you're probably really
going to love this.

00:11:32.516 --> 00:11:36.306 A:middle
One of the problems with
Apple Pay has been the need

00:11:36.306 --> 00:11:38.466 A:middle
to set your networks upfront.

00:11:39.296 --> 00:11:41.106 A:middle
You need to tell us the
networks you want to use

00:11:41.106 --> 00:11:42.046 A:middle
in your payment request.

00:11:42.046 --> 00:11:44.316 A:middle
So that's hard coded
into your application.

00:11:46.126 --> 00:11:48.596 A:middle
And adding new networks
is difficult.

00:11:48.646 --> 00:11:52.526 A:middle
You either have to perform SDK
availability checks to tell

00:11:52.526 --> 00:11:55.386 A:middle
if the constants are
available, or you have to try

00:11:55.386 --> 00:11:57.716 A:middle
to hack something
together, it's not ideal.

00:11:58.806 --> 00:12:01.886 A:middle
And for those of you who
have Apple Pay apps maybe you


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.806 --> 00:12:01.886 A:middle
And for those of you who
have Apple Pay apps maybe you

00:12:01.886 --> 00:12:04.226 A:middle
remember when we launched
Discover on Apple Pay,

00:12:04.566 --> 00:12:07.986 A:middle
last year, unless you
went and updated your app,

00:12:07.986 --> 00:12:09.496 A:middle
you probably weren't
able to accept them even

00:12:09.496 --> 00:12:10.826 A:middle
if your payment processor could.

00:12:10.826 --> 00:12:14.936 A:middle
So we're introducing something
new in iOS 10 to help with that,

00:12:15.476 --> 00:12:16.996 A:middle
it's dynamic networks
and proxies.

00:12:17.726 --> 00:12:19.996 A:middle
Firstly, we're adding
a new class method

00:12:19.996 --> 00:12:21.426 A:middle
onto PKPaymentRequest.

00:12:21.576 --> 00:12:23.506 A:middle
It's going to tell you
all of the networks

00:12:23.506 --> 00:12:25.066 A:middle
that are available
on that device.

00:12:25.536 --> 00:12:27.836 A:middle
There's PKPaymentRequest
available networks.

00:12:28.306 --> 00:12:30.426 A:middle
We're also going to
enable something else.

00:12:30.666 --> 00:12:33.526 A:middle
You're going to be able
to set payment process

00:12:33.526 --> 00:12:34.876 A:middle
as supported networks.

00:12:35.136 --> 00:12:37.536 A:middle
And these proxy down
to other networks.

00:12:37.536 --> 00:12:40.026 A:middle
So for example, if my payment
processes supports Visa,

00:12:40.026 --> 00:12:43.356 A:middle
MasterCard, AmEx and it's
enabled here, I just put them

00:12:43.356 --> 00:12:45.356 A:middle
in as the supported
network and I'll get all

00:12:45.356 --> 00:12:46.516 A:middle
of the networks automatically.

00:12:46.516 --> 00:12:49.216 A:middle
And perhaps most importantly,
I'll get new networks

00:12:49.286 --> 00:12:51.976 A:middle
as they're added to Apple Pay
without needing to do anything.

00:12:51.976 --> 00:12:55.346 A:middle
So you can check our
developer site for information

00:12:55.346 --> 00:12:57.946 A:middle
about payment processes that are
going to participate in this.

00:12:58.766 --> 00:13:01.306 A:middle
It's a really cool feature,
it's going to save a lot


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:58.766 --> 00:13:01.306 A:middle
It's a really cool feature,
it's going to save a lot

00:13:01.306 --> 00:13:05.196 A:middle
of pain I think for writing
Apple Pay applications.

00:13:06.916 --> 00:13:11.486 A:middle
One other thing we've changed, I
just want to touch on, Swift 3,

00:13:11.756 --> 00:13:15.486 A:middle
maybe you've already seen some
of the big changes in Swift 3.

00:13:15.486 --> 00:13:17.716 A:middle
We have improved our
API for Swift users.

00:13:18.016 --> 00:13:19.976 A:middle
We've actually completely
rewritten our sample code,

00:13:20.136 --> 00:13:21.116 A:middle
talk about that later.

00:13:21.506 --> 00:13:23.776 A:middle
One change that's coming,
didn't make seed one,

00:13:23.776 --> 00:13:24.856 A:middle
but it will be in seed two.

00:13:24.856 --> 00:13:27.766 A:middle
PassKit now uses stringly
typed enumerations.

00:13:28.256 --> 00:13:31.346 A:middle
If you're not sure what those
are, they're a very cool way

00:13:31.346 --> 00:13:33.366 A:middle
in Swift to take string
constants and turn them

00:13:33.366 --> 00:13:35.246 A:middle
into enums, which is
going to make developing

00:13:35.246 --> 00:13:37.186 A:middle
for Apple Pay a lot easier.

00:13:37.186 --> 00:13:43.076 A:middle
Now let's talk about
Apple Pay in general.

00:13:44.376 --> 00:13:47.806 A:middle
This year we've got
three big new places

00:13:48.136 --> 00:13:49.946 A:middle
where we're adding
support for Apple Pay.

00:13:50.906 --> 00:13:54.286 A:middle
We're adding support to
WatchKit for WatchKit apps.

00:13:54.826 --> 00:13:58.506 A:middle
And we're adding support to
new extension points on iOS.

00:13:59.216 --> 00:14:02.126 A:middle
And finally we're
adding support to Safari,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.216 --> 00:14:02.126 A:middle
And finally we're
adding support to Safari,

00:14:02.426 --> 00:14:06.016 A:middle
both on MacOS Sierra
and on iOS 10.

00:14:07.256 --> 00:14:10.256 A:middle
Now we just talked about
Safari in the previous session.

00:14:10.436 --> 00:14:11.526 A:middle
It's online right now.

00:14:11.796 --> 00:14:12.686 A:middle
You can check it out.

00:14:14.056 --> 00:14:18.056 A:middle
Let's focus today, right
now WatchKit and extensions.

00:14:18.716 --> 00:14:20.656 A:middle
I'm going to start
off with WatchKit.

00:14:21.296 --> 00:14:23.986 A:middle
And to talk more about WatchKit
and to show you how easy it is

00:14:23.986 --> 00:14:27.736 A:middle
to integrate Apple Pay on to
Apple Watch, I'd like to ask Leo

00:14:28.036 --> 00:14:29.746 A:middle
from the WatchKit
team to come up.

00:14:29.986 --> 00:14:30.246 A:middle
Leo.

00:14:31.516 --> 00:14:37.546 A:middle
[ Applause ]

00:14:38.046 --> 00:14:38.766 A:middle
&gt;&gt; Thanks, Nick.

00:14:39.006 --> 00:14:39.786 A:middle
Hello everyone.

00:14:40.126 --> 00:14:41.906 A:middle
My name is Leo and I'm
a software engineer

00:14:41.906 --> 00:14:42.946 A:middle
on the Apple Watch team.

00:14:43.646 --> 00:14:45.656 A:middle
I'm really excited to tell
you about what we are doing

00:14:45.656 --> 00:14:47.396 A:middle
with Apple Pay on
the watch this year.

00:14:48.316 --> 00:14:51.336 A:middle
We're adding support for making
payments within WatchKit apps.

00:14:52.296 --> 00:14:54.186 A:middle
We think this is going to
enable a whole new category

00:14:54.236 --> 00:14:55.116 A:middle
of apps on the watch.

00:14:55.476 --> 00:14:56.936 A:middle
And the great news
for you developers,

00:14:57.236 --> 00:14:59.746 A:middle
if you have implemented
Apple Pay on your iOS app,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.376 --> 00:15:02.096 A:middle
the same code with
work on watchOS,

00:15:02.346 --> 00:15:03.526 A:middle
with very minimal changes.

00:15:03.846 --> 00:15:05.996 A:middle
So let's take a look at what
we're going to be covering.

00:15:06.356 --> 00:15:09.446 A:middle
First we're going
to do a quick recap

00:15:09.446 --> 00:15:10.966 A:middle
on how payments work
on the platform.

00:15:11.266 --> 00:15:13.876 A:middle
I'm going to show you how to
create a payment request and how

00:15:13.876 --> 00:15:14.976 A:middle
to present a payment sheet.

00:15:14.976 --> 00:15:17.186 A:middle
And then we're going
to do a quick demo.

00:15:17.266 --> 00:15:19.576 A:middle
So you get an idea of how
easy it is to get started

00:15:19.746 --> 00:15:20.806 A:middle
with Apple Pay on the Watch.

00:15:21.846 --> 00:15:23.576 A:middle
Finally, we're going
to talk about some

00:15:23.576 --> 00:15:25.866 A:middle
of the design considerations
that you should keep in mind

00:15:26.046 --> 00:15:28.096 A:middle
when designing specifically
for the watch.

00:15:28.496 --> 00:15:30.796 A:middle
This is the Apply Pay experience

00:15:30.796 --> 00:15:32.936 A:middle
that your users are
familiar with in iOS.

00:15:33.706 --> 00:15:34.816 A:middle
Now let's bring up the watch.

00:15:35.376 --> 00:15:39.326 A:middle
The first thing you notice is
that the UI is very simple.

00:15:39.976 --> 00:15:41.346 A:middle
We only display the total amount

00:15:41.346 --> 00:15:42.526 A:middle
and the merchant
name at the top.

00:15:42.996 --> 00:15:45.176 A:middle
And users can simply
double press the side button

00:15:45.176 --> 00:15:46.156 A:middle
to pay at any time.

00:15:46.736 --> 00:15:49.086 A:middle
If they want to make
any changes,

00:15:49.086 --> 00:15:50.956 A:middle
or review their information,
they can scroll down.

00:15:50.956 --> 00:15:53.206 A:middle
And they can have access to
their different payment cards,

00:15:53.576 --> 00:15:56.326 A:middle
as well as shipping, billing
and contact information.

00:15:56.976 --> 00:15:59.316 A:middle
And they can see a detail
of what they are paying for.

00:15:59.766 --> 00:16:02.306 A:middle
When they're ready to pay,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:59.766 --> 00:16:02.306 A:middle
When they're ready to pay,

00:16:02.996 --> 00:16:05.676 A:middle
they simply double click the
side button and it's done.

00:16:06.406 --> 00:16:07.416 A:middle
It is that simple.

00:16:08.646 --> 00:16:10.916 A:middle
Now let's take a look
at how payments work

00:16:11.146 --> 00:16:12.356 A:middle
from a developer's
point of view.

00:16:13.596 --> 00:16:16.046 A:middle
We follow the same flow that
we have on iOS right now.

00:16:16.736 --> 00:16:19.986 A:middle
First you create a payment
request and you pass that in

00:16:20.156 --> 00:16:21.766 A:middle
to a payment authorization
controller.

00:16:22.746 --> 00:16:24.576 A:middle
This is the object that
drives the payment sheet

00:16:24.646 --> 00:16:25.456 A:middle
on our platform.

00:16:25.836 --> 00:16:28.216 A:middle
As the user interact
with the UI,

00:16:28.216 --> 00:16:29.936 A:middle
we're going to call
your delegate,

00:16:30.066 --> 00:16:33.756 A:middle
for example in the payment
method, or the shipping address.

00:16:34.376 --> 00:16:37.146 A:middle
And you may use this opportunity
to perform some validations.

00:16:37.486 --> 00:16:39.386 A:middle
For example, you may not
ship certain products

00:16:39.386 --> 00:16:40.126 A:middle
to some countries.

00:16:40.666 --> 00:16:42.306 A:middle
Or you may want to
update the shipping cost

00:16:42.306 --> 00:16:43.746 A:middle
and the total amount on the UI.

00:16:43.746 --> 00:16:47.326 A:middle
When the user confirms
the payment,

00:16:47.566 --> 00:16:49.946 A:middle
we talk to the secure
element in our Apple servers

00:16:50.446 --> 00:16:52.616 A:middle
and we issue a payment
token that you can use

00:16:52.696 --> 00:16:53.626 A:middle
to process the payment.

00:16:55.236 --> 00:16:57.596 A:middle
Now refer everyone to
the code, a quick note,

00:16:58.216 --> 00:16:59.486 A:middle
there is some setup
that you need to do

00:16:59.486 --> 00:17:02.096 A:middle
to enable Apple Pay
on your apps.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.486 --> 00:17:02.096 A:middle
to enable Apple Pay
on your apps.

00:17:02.096 --> 00:17:04.126 A:middle
First, you want to go
to the Developer Portal

00:17:04.126 --> 00:17:06.876 A:middle
and register a merchant
identifier and a certificate.

00:17:07.955 --> 00:17:09.776 A:middle
You may have done this
already for your iOS app.

00:17:11.296 --> 00:17:13.036 A:middle
And then you want
to enable Apple Pay

00:17:13.246 --> 00:17:15.215 A:middle
for your WatchKit
extension separately.

00:17:15.915 --> 00:17:17.336 A:middle
And there are step
by step instructions

00:17:17.336 --> 00:17:20.486 A:middle
on our website on
how to do this.

00:17:20.656 --> 00:17:21.846 A:middle
Now let's take a
look at the code.

00:17:23.046 --> 00:17:25.276 A:middle
This is how you create
a payment request.

00:17:25.856 --> 00:17:28.786 A:middle
We use the same PKPaymentRequest
object that we have on iOS.

00:17:29.606 --> 00:17:32.486 A:middle
You create one of this and
you set it up with a country

00:17:32.486 --> 00:17:34.926 A:middle
and currency code, your
merchant identifier,

00:17:34.926 --> 00:17:37.766 A:middle
and the payment network sync
capabilities that you support.

00:17:38.706 --> 00:17:41.116 A:middle
And then you specify a
list of summary items

00:17:41.296 --> 00:17:42.946 A:middle
that describe what the
user is paying for.

00:17:44.556 --> 00:17:46.276 A:middle
Always remember that
the last item

00:17:46.276 --> 00:17:47.956 A:middle
on the list represents
a total amount.

00:17:48.346 --> 00:17:51.316 A:middle
And we recommend that you use
your merchant name as the label,

00:17:51.496 --> 00:17:56.086 A:middle
since we display that at the
top of the payment sheet.

00:17:56.236 --> 00:17:57.726 A:middle
When you want to
present a payment sheet,

00:17:57.956 --> 00:18:00.136 A:middle
you create a PKPayment
AuthorizationController


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:57.956 --> 00:18:00.136 A:middle
you create a PKPayment
AuthorizationController

00:18:00.316 --> 00:18:02.386 A:middle
and you pass in the request
that we just created.

00:18:03.806 --> 00:18:06.856 A:middle
Then you designate yourself or
some other object as a delegate,

00:18:07.226 --> 00:18:10.806 A:middle
and you simply code present.

00:18:10.806 --> 00:18:12.386 A:middle
Now, since you're
presenting the payment sheet,

00:18:12.386 --> 00:18:14.086 A:middle
you're also responsible
for dismissing it.

00:18:14.556 --> 00:18:16.136 A:middle
So make sure to do
that when we go

00:18:16.136 --> 00:18:18.466 A:middle
to payment authorization
controller DidFinish

00:18:18.606 --> 00:18:19.266 A:middle
in your delegate.

00:18:22.546 --> 00:18:25.336 A:middle
So PKPayment
AuthorizationController.

00:18:25.506 --> 00:18:27.956 A:middle
This is a new controller
class provided

00:18:27.956 --> 00:18:29.066 A:middle
in the PassKit.framework.

00:18:30.286 --> 00:18:31.176 A:middle
It is responsible

00:18:31.176 --> 00:18:32.966 A:middle
for controlling the
payment authorization flow.

00:18:33.566 --> 00:18:35.426 A:middle
And it has the same
API semantics

00:18:35.426 --> 00:18:38.036 A:middle
as of PKPaymentAuthorization
ViewController.

00:18:38.456 --> 00:18:40.396 A:middle
But since it's not
view controller based,

00:18:40.836 --> 00:18:42.626 A:middle
it allows for presentation
of the payment sheet

00:18:42.936 --> 00:18:44.216 A:middle
from your WatchKit extension.

00:18:45.276 --> 00:18:47.736 A:middle
It is supported across
watchOS and iOS,

00:18:47.736 --> 00:18:51.376 A:middle
so you can share your user
code across different apps

00:18:51.476 --> 00:18:53.866 A:middle
and across different platforms.

00:18:53.866 --> 00:18:55.936 A:middle
Now, let's put all of this
together and see a quick demo.

00:18:57.136 --> 00:18:59.136 A:middle
So I have been working on
this app for a coffee shop,

00:18:59.386 --> 00:19:02.076 A:middle
so that users can order and
pay for their drinks right


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.386 --> 00:19:02.076 A:middle
so that users can order and
pay for their drinks right

00:19:02.076 --> 00:19:04.476 A:middle
on their watch and have it
ready when they get to the shop.

00:19:05.336 --> 00:19:07.486 A:middle
Let's take a look at
my interface so far.

00:19:10.956 --> 00:19:14.896 A:middle
Great. So we have a product view
almost done, now we just need

00:19:14.896 --> 00:19:16.806 A:middle
to add a way for
users to pay for this.

00:19:17.336 --> 00:19:20.076 A:middle
I'm going to go to
the Option Library

00:19:20.076 --> 00:19:23.036 A:middle
in the bottom right corner and
search for a payment button.

00:19:23.536 --> 00:19:27.716 A:middle
We provide you with this object
that you can use when you want

00:19:27.716 --> 00:19:28.716 A:middle
to present the payment sheet.

00:19:29.826 --> 00:19:31.906 A:middle
We just need to drag and
drop this into our view.

00:19:33.076 --> 00:19:34.426 A:middle
And now let's add some code.

00:19:35.876 --> 00:19:37.796 A:middle
I'm going to bring up
the assistant editor

00:19:37.796 --> 00:19:40.156 A:middle
so I can have the code
and the UI side by side.

00:19:40.156 --> 00:19:44.746 A:middle
I'm going to control drag from
my button to my interface.

00:19:45.406 --> 00:19:48.476 A:middle
And create a new action
that I'm going to name Buy.

00:19:51.636 --> 00:19:57.906 A:middle
Now let's just focus
on the code.

00:19:58.066 --> 00:19:59.086 A:middle
First of all, since we're going

00:19:59.086 --> 00:20:00.436 A:middle
to be using the PassKit
framework,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.086 --> 00:20:00.436 A:middle
to be using the PassKit
framework,

00:20:00.436 --> 00:20:03.836 A:middle
let's make sure we import that.

00:20:04.046 --> 00:20:06.246 A:middle
And now we're going to implement
the buy method and it's going

00:20:06.246 --> 00:20:08.536 A:middle
to be pretty similar to what
we saw on the slides before.

00:20:09.816 --> 00:20:12.036 A:middle
First, we're going to
create a payment request.

00:20:13.816 --> 00:20:17.266 A:middle
In this case we're
setting it up for the US,

00:20:17.346 --> 00:20:19.206 A:middle
we're going to be charging
this in US dollars.

00:20:20.106 --> 00:20:21.956 A:middle
We specify the merchant
identifier

00:20:21.956 --> 00:20:23.896 A:middle
that we registered
is available portal,

00:20:24.786 --> 00:20:26.956 A:middle
and the payment networks
sync capabilities list

00:20:27.256 --> 00:20:27.956 A:middle
that we support.

00:20:29.046 --> 00:20:31.086 A:middle
And finally a list
of summary items,

00:20:31.086 --> 00:20:36.226 A:middle
in this case we're just using
the total for the coffee.

00:20:36.386 --> 00:20:38.156 A:middle
Now, if you want to
present the payment sheet,

00:20:39.066 --> 00:20:41.636 A:middle
we create a PK Payment
Authorization Controller.

00:20:42.226 --> 00:20:44.566 A:middle
We pass in the request,
we set our self

00:20:44.566 --> 00:20:46.646 A:middle
as a delegate, and
we call present.

00:20:48.066 --> 00:20:50.136 A:middle
Now for seed one we
ask you that you keep

00:20:50.136 --> 00:20:53.676 A:middle
around Payment Controller while
the payment sheet is visible.

00:20:54.236 --> 00:20:58.556 A:middle
Let's define the state
that we're using here.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:00.046 --> 00:21:01.976 A:middle
And then since we're
implementing the delegate

00:21:01.976 --> 00:21:05.546 A:middle
protocol let's conform to that.

00:21:05.736 --> 00:21:07.286 A:middle
And we only have
to implement two

00:21:07.286 --> 00:21:09.176 A:middle
of the required methods
for this to work.

00:21:12.396 --> 00:21:15.166 A:middle
The first one,
PaymentAuthorizationController,

00:21:15.166 --> 00:21:16.196 A:middle
these authorize payment.

00:21:16.776 --> 00:21:20.146 A:middle
It's going to be called when
the user confirms the payment.

00:21:20.276 --> 00:21:22.296 A:middle
And we provide you with all
the information that you need

00:21:22.656 --> 00:21:24.926 A:middle
to send to your payment
processor

00:21:24.926 --> 00:21:27.526 A:middle
and to confirm calling
the completion handler

00:21:27.526 --> 00:21:28.146 A:middle
with a status.

00:21:29.576 --> 00:21:31.276 A:middle
The second one, as
I mentioned earlier,

00:21:31.636 --> 00:21:33.406 A:middle
PaymentAuthorizationController
DidFinish.

00:21:33.796 --> 00:21:35.976 A:middle
It's another opportunity for
you to dismiss the payment sheet

00:21:36.126 --> 00:21:39.636 A:middle
and perhaps present an
order status at the end.

00:21:40.356 --> 00:21:41.626 A:middle
This is all we have to do.

00:21:41.836 --> 00:21:43.736 A:middle
So let's try bill and run this.

00:21:58.056 --> 00:21:59.636 A:middle
Okay, there's our app.

00:21:59.636 --> 00:22:01.826 A:middle
I'm just going to click the
Buy with Apple Pay Button,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:59.636 --> 00:22:01.826 A:middle
I'm just going to click the
Buy with Apple Pay Button,

00:22:02.456 --> 00:22:03.726 A:middle
and there we have
the payment sheet.

00:22:04.366 --> 00:22:06.376 A:middle
It's very simple, we have
different payment cards

00:22:06.376 --> 00:22:07.046 A:middle
that we can try.

00:22:07.696 --> 00:22:08.946 A:middle
And if you went to simulator,

00:22:08.946 --> 00:22:11.176 A:middle
user action of double
clicking the side button,

00:22:11.566 --> 00:22:15.026 A:middle
there's a new option on the
simulator menu, under Hardware,

00:22:15.546 --> 00:22:18.286 A:middle
and it's called Authorize
Apple Pay.

00:22:19.116 --> 00:22:21.406 A:middle
We just click on
this and it's done.

00:22:21.806 --> 00:22:24.816 A:middle
Our payment is confirmed and
the coffee should be ready

00:22:24.896 --> 00:22:26.036 A:middle
pretty soon.

00:22:26.136 --> 00:22:27.496 A:middle
So that's our demo.

00:22:28.516 --> 00:22:33.976 A:middle
[ Applause ]

00:22:34.476 --> 00:22:37.166 A:middle
As you can see it's very
simple to implement Apple Pay.

00:22:37.326 --> 00:22:39.396 A:middle
It only took us just
a few minutes and less

00:22:39.396 --> 00:22:42.386 A:middle
than 50 lines of code.

00:22:42.386 --> 00:22:44.116 A:middle
Now, before we finish
this section,

00:22:44.276 --> 00:22:45.556 A:middle
I want to talk about design.

00:22:46.466 --> 00:22:49.256 A:middle
How do we make something easy
for users of Apple Watch?

00:22:50.716 --> 00:22:54.006 A:middle
Perhaps the most important thing
here is to consider what kind

00:22:54.006 --> 00:22:55.696 A:middle
of experience you want
to bring to the watch.

00:22:56.626 --> 00:22:57.826 A:middle
Users are not going
to spend more

00:22:57.826 --> 00:22:59.786 A:middle
than just a few seconds
interacting with your app.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:01.066 --> 00:23:02.786 A:middle
So try to offer them
something they want,

00:23:02.966 --> 00:23:04.856 A:middle
and direct them quickly
to the payment sheet.

00:23:05.746 --> 00:23:08.566 A:middle
Remember that the interactions
are short and screens are small.

00:23:08.946 --> 00:23:12.866 A:middle
Next, don't request
information that you don't need.

00:23:13.396 --> 00:23:15.506 A:middle
This could be, for example,
a contact email address.

00:23:16.496 --> 00:23:19.076 A:middle
While we offer users the same
options that they have available

00:23:19.076 --> 00:23:21.996 A:middle
for billing and shipping on
the iPhone, there's no way

00:23:21.996 --> 00:23:24.906 A:middle
to enter a new one right on the
watch, so keep that in mind.

00:23:25.436 --> 00:23:28.316 A:middle
And then as we said in the demo,

00:23:28.446 --> 00:23:29.876 A:middle
use the Payment Button
that we provide.

00:23:29.876 --> 00:23:32.036 A:middle
If it's available on
the WatchKit framework,

00:23:32.266 --> 00:23:33.956 A:middle
it is supported on
Interface Builder,

00:23:33.956 --> 00:23:35.116 A:middle
so it is super easy to add.

00:23:35.736 --> 00:23:38.666 A:middle
And please follow the guidelines
that we have on our website.

00:23:39.236 --> 00:23:41.426 A:middle
This is probably more detail
how the Payment Button should be

00:23:41.426 --> 00:23:43.396 A:middle
used in the context of your app.

00:23:44.966 --> 00:23:48.036 A:middle
So to summarize, if
you have an iOS hub

00:23:48.036 --> 00:23:51.016 A:middle
that implements Apple Pay most
of the same code will work.

00:23:51.446 --> 00:23:52.496 A:middle
You just need to make sure

00:23:52.496 --> 00:23:54.926 A:middle
to implement PKPayment
AuthorizationController

00:23:55.306 --> 00:23:57.876 A:middle
and use the present and dismiss
methods that it provides.

00:23:59.266 --> 00:24:00.736 A:middle
When you're designing
apps for the Watch,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:59.266 --> 00:24:00.736 A:middle
When you're designing
apps for the Watch,

00:24:00.816 --> 00:24:02.436 A:middle
remember that the
interactions are short,

00:24:02.436 --> 00:24:03.596 A:middle
and the screens are small.

00:24:04.836 --> 00:24:05.876 A:middle
And use the Payment Button

00:24:05.876 --> 00:24:07.886 A:middle
that we provide following
our guidelines.

00:24:09.436 --> 00:24:12.166 A:middle
If you haven't done so already,
I highly recommend you checking

00:24:12.166 --> 00:24:14.396 A:middle
out last year's session
on Apple Pay We Announce,

00:24:14.826 --> 00:24:16.676 A:middle
which goes into a lot
more detail on how

00:24:16.676 --> 00:24:19.026 A:middle
to create this kind
of experiences,

00:24:19.026 --> 00:24:21.246 A:middle
and how to customize the
payment sheet in different ways.

00:24:21.736 --> 00:24:24.756 A:middle
I'm really excited to
see what you'll create

00:24:24.846 --> 00:24:26.416 A:middle
with Apply Pay on the Watch.

00:24:26.616 --> 00:24:28.386 A:middle
And now I'm going to turn
it back to Nick who's going

00:24:28.386 --> 00:24:29.786 A:middle
to tell you more
about extensions.

00:24:30.136 --> 00:24:30.876 A:middle
Thank you very much.

00:24:31.516 --> 00:24:36.026 A:middle
[ Applause ]

00:24:36.526 --> 00:24:37.126 A:middle
Thank you Leo.

00:24:38.996 --> 00:24:40.826 A:middle
Okay. Extensions.

00:24:41.276 --> 00:24:46.986 A:middle
In previous releases, Apple
Pay hasn't really played

00:24:46.986 --> 00:24:48.316 A:middle
that well with extensions.

00:24:48.646 --> 00:24:51.646 A:middle
It's been difficult to
support in extensions,

00:24:51.716 --> 00:24:53.786 A:middle
probably because we've always
needed a view controller

00:24:53.786 --> 00:24:57.206 A:middle
to present from, and not
all extensions are UI based.

00:24:58.276 --> 00:24:59.756 A:middle
Frankly, there also weren't

00:24:59.756 --> 00:25:01.696 A:middle
that many interesting
places to use it.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.756 --> 00:25:01.696 A:middle
that many interesting
places to use it.

00:25:02.156 --> 00:25:04.736 A:middle
There weren't that many
extension points on iOS 9

00:25:04.736 --> 00:25:08.456 A:middle
and iOS 8 that really lend
themselves to Apple Pay.

00:25:09.206 --> 00:25:11.576 A:middle
But that's changing in iOS 10.

00:25:12.386 --> 00:25:13.816 A:middle
We've got some new
opportunities.

00:25:15.116 --> 00:25:20.296 A:middle
The new extensions, in iOS 10
work really well with Apple Pay

00:25:20.296 --> 00:25:22.526 A:middle
and they have built-in
support for Apple Pay.

00:25:23.306 --> 00:25:25.786 A:middle
And we've solved the
problem of not being able

00:25:25.786 --> 00:25:27.716 A:middle
to display in a non-UI context.

00:25:28.016 --> 00:25:30.506 A:middle
The PKPayment
AuthorizationController API

00:25:30.506 --> 00:25:34.376 A:middle
that Leo showed you on watchOS,
is also available on iOS.

00:25:34.746 --> 00:25:37.986 A:middle
You can actually use it anywhere
in an app, or an extension.

00:25:38.266 --> 00:25:41.436 A:middle
I want to show you some
extensions that use Apple Pay.

00:25:41.876 --> 00:25:47.726 A:middle
We gave the extension's API the
iMessage app API to Fandango

00:25:48.696 --> 00:25:53.166 A:middle
and they use it to
purchase movie tickets.

00:25:53.416 --> 00:25:54.936 A:middle
There's some other
things you can use it for.

00:25:54.936 --> 00:25:57.076 A:middle
You can use it to split
items and purchases,

00:25:57.786 --> 00:26:01.386 A:middle
send gifts to friends,
organize outings.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:57.786 --> 00:26:01.386 A:middle
send gifts to friends,
organize outings.

00:26:01.736 --> 00:26:04.936 A:middle
So here you can see,
Fandango you picked a movie,

00:26:05.156 --> 00:26:07.736 A:middle
suggest with your friends,
bought the tickets,

00:26:07.896 --> 00:26:10.236 A:middle
we never leave messages,
we're still in messages.

00:26:10.856 --> 00:26:11.486 A:middle
And you're done.

00:26:12.306 --> 00:26:13.736 A:middle
It's really easy.

00:26:14.596 --> 00:26:16.626 A:middle
I want to show you
another use of Apple Pay.

00:26:17.246 --> 00:26:21.206 A:middle
It's Apple Pay in Siri and
Maps in the Intents framework.

00:26:21.686 --> 00:26:24.416 A:middle
So there's a new ride
sharing extension point

00:26:24.416 --> 00:26:26.416 A:middle
that works both in
Siri and in Maps.

00:26:26.796 --> 00:26:29.916 A:middle
And you can use Apple Pay
within that extension point,

00:26:29.916 --> 00:26:31.046 A:middle
it's actually built in.

00:26:31.046 --> 00:26:34.026 A:middle
So you can pay directly
from the extension.

00:26:34.526 --> 00:26:35.926 A:middle
I'll show you a short
video of that.

00:26:36.006 --> 00:26:38.046 A:middle
The sample code that
we've developed this year,

00:26:38.146 --> 00:26:41.036 A:middle
actually has a ride
sharing intent.

00:26:42.036 --> 00:26:43.166 A:middle
So here we're asking Siri

00:26:43.166 --> 00:26:44.866 A:middle
to book a ride using
our sample app.

00:26:45.686 --> 00:26:49.426 A:middle
Siri asks us if we want
to get a ride, we say yes.

00:26:50.856 --> 00:26:52.696 A:middle
The Apple Pay sheet's
immediately displayed.

00:26:53.246 --> 00:26:56.876 A:middle
I can touch ID, and
then I can be on my way.

00:26:57.686 --> 00:26:58.496 A:middle
It's that easy.

00:26:58.556 --> 00:27:00.586 A:middle
I never have to leave
Siri, I stayed right there,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.556 --> 00:27:00.586 A:middle
I never have to leave
Siri, I stayed right there,

00:27:00.676 --> 00:27:01.826 A:middle
never have to go to another app,

00:27:01.826 --> 00:27:03.526 A:middle
never have to put any
payment information in.

00:27:03.996 --> 00:27:05.686 A:middle
This is great if the user
never has a relationship

00:27:05.686 --> 00:27:07.686 A:middle
with your app, if they've
never used your app before,

00:27:07.986 --> 00:27:09.316 A:middle
they can still pay for things.

00:27:09.796 --> 00:27:13.606 A:middle
They don't need to
have an account.

00:27:13.606 --> 00:27:15.186 A:middle
And so requesting and
presenting payment

00:27:15.186 --> 00:27:17.756 A:middle
in these extension points
is identical to WatchKit.

00:27:18.726 --> 00:27:19.586 A:middle
There's no difference.

00:27:20.696 --> 00:27:23.476 A:middle
You can use this new PKPayment
AuthorizationController

00:27:23.966 --> 00:27:26.806 A:middle
in both your UI and
your non UI extensions.

00:27:27.206 --> 00:27:29.426 A:middle
And I actually recommend that
you share your payment code.

00:27:29.916 --> 00:27:31.756 A:middle
You can have a centralized
payment class,

00:27:31.966 --> 00:27:33.796 A:middle
and you could share
that between Watch,

00:27:33.936 --> 00:27:35.726 A:middle
iOS app, and iOS extension.

00:27:36.286 --> 00:27:38.746 A:middle
That's actually what we've
done with our sample code.

00:27:38.746 --> 00:27:41.636 A:middle
So we've rewritten the Emporium
sample app we released last

00:27:41.636 --> 00:27:43.416 A:middle
year, it's been rewritten
in Swift 3.

00:27:44.196 --> 00:27:45.426 A:middle
It's been simplified.

00:27:46.206 --> 00:27:47.596 A:middle
So it's a lot easier
to understand.

00:27:48.206 --> 00:27:49.916 A:middle
And it shows a shared
Apple Pay model,

00:27:50.166 --> 00:27:52.536 A:middle
where the actual payment
logic is the same,

00:27:52.536 --> 00:27:53.936 A:middle
regardless of the
platform that you're on.

00:27:55.116 --> 00:27:57.186 A:middle
So, download that
and try it out.

00:27:58.026 --> 00:28:00.566 A:middle
Of course, you might have a
little problem trying it out,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.026 --> 00:28:00.566 A:middle
Of course, you might have a
little problem trying it out,

00:28:00.566 --> 00:28:03.806 A:middle
and that brings me on
to testing Apple Pay.

00:28:04.226 --> 00:28:05.966 A:middle
I saved the best
until last for you.

00:28:06.996 --> 00:28:08.176 A:middle
Testing Apple Pay today

00:28:08.176 --> 00:28:09.786 A:middle
if you've developed
an Apple Pay app,

00:28:10.016 --> 00:28:12.086 A:middle
you'll notice it's
a little tricky.

00:28:12.516 --> 00:28:13.766 A:middle
You can test on the simulator.

00:28:13.766 --> 00:28:15.916 A:middle
And we've actually got
some great new support

00:28:15.916 --> 00:28:16.586 A:middle
in the simulator.

00:28:16.586 --> 00:28:19.746 A:middle
You saw the new authorized Apple
Pay Button on the simulator

00:28:19.746 --> 00:28:23.286 A:middle
for Watch, we're also bringing
that to iPhone in seed two.

00:28:23.786 --> 00:28:27.726 A:middle
And you can test your iOS,
your WatchKit, even Apple Pay

00:28:27.726 --> 00:28:30.446 A:middle
on the web, you can test
on the simulator in Safari.

00:28:30.446 --> 00:28:33.446 A:middle
Now the simulator returns
dummy payment data.

00:28:33.446 --> 00:28:35.066 A:middle
Its payment data
is completely fake.

00:28:35.066 --> 00:28:36.916 A:middle
It's not real and it's
not useable for anything.

00:28:37.826 --> 00:28:41.236 A:middle
So it's really useful for UI
development and quick testing.

00:28:41.586 --> 00:28:44.636 A:middle
But it's not particularly
useful for end-to-end testing.

00:28:45.846 --> 00:28:49.366 A:middle
It's not real card data, and
the simulator is just not

00:28:49.366 --> 00:28:51.126 A:middle
representative of
device behavior.

00:28:51.786 --> 00:28:54.766 A:middle
You know we always tell you,
please don't use the simulator

00:28:54.766 --> 00:28:57.486 A:middle
of your sole way of developing,
you have to test on hardware.

00:28:57.736 --> 00:29:00.206 A:middle
But with Apple Pay that's
not always feasible.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:57.736 --> 00:29:00.206 A:middle
But with Apple Pay that's
not always feasible.

00:29:00.306 --> 00:29:03.116 A:middle
Apple Pay is available
in many countries,

00:29:03.116 --> 00:29:04.176 A:middle
but not all countries.

00:29:04.176 --> 00:29:06.746 A:middle
Maybe your developers
work abroad,

00:29:06.746 --> 00:29:09.076 A:middle
or you don't have a
card that's eligible.

00:29:09.166 --> 00:29:11.996 A:middle
Okay, we're going
to solve that today.

00:29:12.426 --> 00:29:15.596 A:middle
We're going to introduce the
Apple Pay Sandbox environment.

00:29:16.556 --> 00:29:18.616 A:middle
The Sandbox is a brand
new testing environment

00:29:18.616 --> 00:29:22.946 A:middle
for Apple Pay and it lets you
provision test cards directly

00:29:23.146 --> 00:29:25.746 A:middle
onto real devices and the data

00:29:25.746 --> 00:29:29.456 A:middle
that it returns is real payment
data using these test cards.

00:29:30.166 --> 00:29:33.376 A:middle
So it's just like paying for
something with a real credit

00:29:33.376 --> 00:29:34.516 A:middle
or debit card in Apple Pay.

00:29:35.766 --> 00:29:38.616 A:middle
It's really easy to use and
it's really easy to set up.

00:29:38.616 --> 00:29:40.966 A:middle
And you can integrate it
into your QA environments,

00:29:40.966 --> 00:29:43.826 A:middle
where previously perhaps you
couldn't due to restrictions

00:29:43.826 --> 00:29:45.596 A:middle
on production financial data.

00:29:46.836 --> 00:29:49.246 A:middle
Getting set up with the Sandbox
is really straightforward.

00:29:49.726 --> 00:29:52.726 A:middle
All you need to do is create
a testing iCloud account

00:29:52.726 --> 00:29:53.696 A:middle
at iTunes Connect.

00:29:54.126 --> 00:29:56.306 A:middle
Now you can already do this
for various other features,

00:29:56.376 --> 00:29:58.976 A:middle
so this already exists today.

00:29:59.056 --> 00:30:01.646 A:middle
You then just log into that
account on your device.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.056 --> 00:30:01.646 A:middle
You then just log into that
account on your device.

00:30:02.596 --> 00:30:03.586 A:middle
If you're not in a region

00:30:03.586 --> 00:30:06.316 A:middle
that supports Apple Pay you
can change your region to,

00:30:06.316 --> 00:30:08.856 A:middle
say the US, or to Canada.

00:30:09.036 --> 00:30:12.436 A:middle
And then you just use the
test cards that are published

00:30:12.436 --> 00:30:13.906 A:middle
at developer.apple.com.

00:30:13.906 --> 00:30:15.946 A:middle
We have a list of test
numbers that you can input.

00:30:15.946 --> 00:30:17.326 A:middle
There will be provisions

00:30:17.326 --> 00:30:19.336 A:middle
to Apple Wallet just
like regular cards.

00:30:21.176 --> 00:30:23.476 A:middle
There's no developer
setting or switch.

00:30:23.476 --> 00:30:25.386 A:middle
Environment's a switch
automatically,

00:30:26.376 --> 00:30:27.966 A:middle
where you sign in
and out of iCloud.

00:30:28.216 --> 00:30:31.216 A:middle
Now you should still
validate your apps

00:30:31.216 --> 00:30:33.246 A:middle
with production cards
before you launch.

00:30:33.246 --> 00:30:35.576 A:middle
You still should do an
end-to-end transaction.

00:30:35.576 --> 00:30:38.436 A:middle
I think this is going to be
a really great environment,

00:30:38.436 --> 00:30:40.296 A:middle
a really great feature
to help you test.

00:30:40.426 --> 00:30:42.606 A:middle
And actually if you're
using Apple Pay on the web,

00:30:42.846 --> 00:30:44.466 A:middle
which we talked about
in previous session,

00:30:44.686 --> 00:30:47.096 A:middle
initially you're only able
to test it in the Sandbox,

00:30:47.096 --> 00:30:49.066 A:middle
because we're not going to
roll out production support

00:30:49.376 --> 00:30:53.266 A:middle
until later, nearer the
time we actually GM iOS 10.

00:30:53.656 --> 00:30:57.986 A:middle
So the Apple Pay Sandbox
today supports three networks,

00:30:57.986 --> 00:31:00.816 A:middle
it supports American
Express, MasterCard and Visa.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:57.986 --> 00:31:00.816 A:middle
it supports American
Express, MasterCard and Visa.

00:31:01.106 --> 00:31:03.356 A:middle
And more networks will be
coming on board overtime.

00:31:03.926 --> 00:31:06.556 A:middle
We're also hoping that the
Sandbox can be integrated

00:31:06.556 --> 00:31:07.996 A:middle
in various payment processes.

00:31:09.646 --> 00:31:10.706 A:middle
So you can do that,

00:31:10.706 --> 00:31:12.456 A:middle
it's available today
if you're on iOS 10.

00:31:12.456 --> 00:31:16.086 A:middle
So let's have a quick
look at some

00:31:16.166 --> 00:31:17.476 A:middle
of the stuff we talked
about today.

00:31:18.956 --> 00:31:21.676 A:middle
We talked about some new Wallet
and Apple Pay API and features.

00:31:22.116 --> 00:31:23.516 A:middle
Some of the new things
that we've introduced

00:31:23.516 --> 00:31:27.606 A:middle
over the past year and in iOS
10 that help host developers,

00:31:27.856 --> 00:31:29.126 A:middle
card issuers and retailers.

00:31:29.226 --> 00:31:31.106 A:middle
And we talked about
Apple Pay and WatchKit.

00:31:32.046 --> 00:31:33.586 A:middle
I think Apple Pay
WatchKit is really great.

00:31:33.586 --> 00:31:36.926 A:middle
I can't wait to hail a ride
directly from my Apple Watch

00:31:36.926 --> 00:31:38.346 A:middle
without ever needing
to pull out my phone.

00:31:39.236 --> 00:31:41.636 A:middle
We also talked about
Apple Pay in extensions.

00:31:41.696 --> 00:31:43.346 A:middle
I think there's so
much opportunity here

00:31:43.686 --> 00:31:46.466 A:middle
to enable really compelling
experiences, where users can pay

00:31:46.466 --> 00:31:49.486 A:middle
for things without having to go
into an app, straight from Siri,

00:31:49.486 --> 00:31:51.616 A:middle
straight from maps,
straight from messages.

00:31:51.916 --> 00:31:54.236 A:middle
And then we talked about testing

00:31:54.296 --> 00:31:56.036 A:middle
in the Sandbox and
the simulator.

00:31:56.036 --> 00:32:00.036 A:middle
There's one thing we didn't talk
about that's very big this year,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:56.036 --> 00:32:00.036 A:middle
There's one thing we didn't talk
about that's very big this year,

00:32:00.626 --> 00:32:01.636 A:middle
that's Apple Pay on the Web.

00:32:03.056 --> 00:32:05.896 A:middle
So, you can use Apple
Pay as well as in apps,

00:32:05.896 --> 00:32:07.976 A:middle
as well as in extensions,
as well as in WebKit,

00:32:07.976 --> 00:32:12.916 A:middle
you can now use it on mobile
websites and you can use it

00:32:12.916 --> 00:32:14.816 A:middle
on the desktop, on MacOS Sierra.

00:32:15.136 --> 00:32:16.456 A:middle
You can authorize payment

00:32:16.976 --> 00:32:19.156 A:middle
in Safari using your
Apple Pay device,

00:32:19.156 --> 00:32:21.026 A:middle
both iPhone and Apple Watch.

00:32:22.466 --> 00:32:24.286 A:middle
Now, we talked about this
in the previous session.

00:32:24.286 --> 00:32:25.926 A:middle
So if you're interested
you can go

00:32:25.926 --> 00:32:27.226 A:middle
to the website, check
it out now.

00:32:28.626 --> 00:32:30.586 A:middle
And if you want more information
about anything we talked

00:32:30.586 --> 00:32:33.356 A:middle
about today you can check
our sessions microsite.

00:32:35.526 --> 00:32:38.076 A:middle
Now I did promise some
contact information,

00:32:38.376 --> 00:32:39.196 A:middle
and some other things.

00:32:39.196 --> 00:32:42.956 A:middle
I promised you bank and co-brand
private label inquiries.

00:32:42.956 --> 00:32:45.676 A:middle
If you're interested in taking
advantage of in-app provisioning

00:32:45.856 --> 00:32:48.936 A:middle
or any of the features I
talked about for co-brands

00:32:48.936 --> 00:32:50.776 A:middle
and card issuers, you
can email us here.

00:32:50.896 --> 00:32:53.656 A:middle
And if you're interested in
value-added service passes,

00:32:53.816 --> 00:32:55.016 A:middle
you can visit our website,

00:32:55.406 --> 00:32:57.746 A:middle
the links up here,
developer.apple.com/

00:32:57.746 --> 00:32:59.536 A:middle
contact/passkit.

00:32:59.536 --> 00:33:01.516 A:middle
And you can put in a request


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.536 --> 00:33:01.516 A:middle
And you can put in a request

00:33:01.696 --> 00:33:04.876 A:middle
to use the value-added
service signing certificates.

00:33:05.346 --> 00:33:08.696 A:middle
We have some related
sessions, like I said,

00:33:08.696 --> 00:33:09.886 A:middle
we just covered Apple
Pay on the web.

00:33:10.256 --> 00:33:14.266 A:middle
There's also a WatchKit session
tomorrow, upstairs in Presidio,

00:33:14.476 --> 00:33:16.616 A:middle
Designing Great Apple
Watch Experiences.

00:33:16.616 --> 00:33:18.686 A:middle
I think you should
definitely go to that

00:33:18.686 --> 00:33:20.456 A:middle
if you're interested
in WatchKit.

00:33:20.456 --> 00:33:23.156 A:middle
See how you can really enable
WatchKit apps especially

00:33:23.156 --> 00:33:24.966 A:middle
with the new changes
on watchOS3.

00:33:25.506 --> 00:33:27.616 A:middle
So thank you so much for coming.

00:33:28.326 --> 00:33:30.076 A:middle
Thank you for making
Apple Pay great

00:33:30.076 --> 00:33:31.186 A:middle
with your own applications.

00:33:31.566 --> 00:33:32.916 A:middle
And I can't wait to see some

00:33:32.916 --> 00:33:34.536 A:middle
of the amazing things
you're going to build.

00:33:34.536 --> 00:33:36.816 A:middle
And hopefully I'll see you
back here next year to talk

00:33:36.816 --> 00:33:38.396 A:middle
about even more cool
things in Apple Pay.

00:33:38.766 --> 00:33:39.966 A:middle
Have a great WWDC.

