WEBVTT

00:00:07.516 --> 00:00:17.500 A:middle
[ Music ]

00:00:23.516 --> 00:00:30.816 A:middle
[ Applause ]

00:00:31.316 --> 00:00:31.866 A:middle
&gt;&gt; Good morning.

00:00:32.406 --> 00:00:34.546 A:middle
Welcome to Advanced
Notifications.

00:00:35.436 --> 00:00:39.596 A:middle
I'm Michele, and today we will
be talking about a few things

00:00:39.596 --> 00:00:41.736 A:middle
about new notifications
in iOS X.

00:00:42.916 --> 00:00:45.896 A:middle
We'll start with the new
notifications user interface.

00:00:45.896 --> 00:00:47.476 A:middle
We'll go over a little
bit of an overview,

00:00:47.786 --> 00:00:50.806 A:middle
and we'll see what
changed in iOS X.

00:00:51.226 --> 00:00:53.536 A:middle
Then we'll see how to
use media attachments

00:00:53.736 --> 00:00:56.986 A:middle
in the new notifications,
and, last, we'll see how

00:00:56.986 --> 00:01:01.826 A:middle
to customize the user interface
for user notifications in iOS X.

00:00:56.986 --> 00:01:01.826 A:middle
to customize the user interface
for user notifications in iOS X.

00:01:03.206 --> 00:01:05.746 A:middle
Let's start with the overview
of the user interface.

00:01:07.936 --> 00:01:11.576 A:middle
User notifications in iOS X
have a beautiful new design.

00:01:11.866 --> 00:01:13.726 A:middle
You see here the new lock screen

00:01:14.096 --> 00:01:16.416 A:middle
with beautiful animations
and raise to wake.

00:01:18.206 --> 00:01:19.396 A:middle
Here is a banner.

00:01:19.806 --> 00:01:22.096 A:middle
You see they are
much more legible.

00:01:22.096 --> 00:01:23.296 A:middle
They have more content.

00:01:23.486 --> 00:01:27.896 A:middle
They show title, subtitle, and
this is notification center,

00:01:28.076 --> 00:01:31.216 A:middle
and notifications look the same
in all three [inaudible] places.

00:01:35.256 --> 00:01:40.986 A:middle
In iOS 8, we introduced
Actions Notifications

00:01:41.266 --> 00:01:43.896 A:middle
where you can add actions
to your notifications

00:01:43.896 --> 00:01:46.676 A:middle
to make them more interactive
and allow the user to deal

00:01:46.676 --> 00:01:47.746 A:middle
with that much more quickly.

00:01:48.726 --> 00:01:52.356 A:middle
In iOS 9, we introduced
Quick Reply

00:01:52.796 --> 00:01:55.386 A:middle
to enhance actionable
notifications

00:01:55.386 --> 00:01:58.396 A:middle
so you can even allow the
user to respond with text

00:01:58.396 --> 00:02:00.376 A:middle
that they type to
your notifications.

00:01:58.396 --> 00:02:00.376 A:middle
that they type to
your notifications.

00:02:01.156 --> 00:02:04.776 A:middle
In iOS X, notifications
are much more powerful

00:02:04.776 --> 00:02:07.926 A:middle
because notifications now are
more important to our device

00:02:07.926 --> 00:02:09.466 A:middle
as we interact with
them all the time.

00:02:09.466 --> 00:02:12.896 A:middle
They are a very important way
we interact with the device,

00:02:12.946 --> 00:02:15.026 A:middle
and a very important
way the user interacts

00:02:15.026 --> 00:02:16.086 A:middle
with your applications.

00:02:16.646 --> 00:02:21.576 A:middle
So in iOS X, you can
press on notification,

00:02:21.636 --> 00:02:23.236 A:middle
and notification will expand

00:02:23.236 --> 00:02:27.056 A:middle
and show a much more detail
specialized user interface

00:02:27.056 --> 00:02:30.306 A:middle
for your application, and it's
dedicated to your content.

00:02:30.576 --> 00:02:34.116 A:middle
It shows more detail, and
it's more useful to the user.

00:02:35.156 --> 00:02:38.166 A:middle
The user can also
tap on the actions,

00:02:38.266 --> 00:02:41.906 A:middle
and the user interface can
update and show what changed

00:02:41.946 --> 00:02:44.606 A:middle
and the effect of the
action that they just used.

00:02:49.776 --> 00:02:51.536 A:middle
Calendar, which just
a simple example.

00:02:51.916 --> 00:02:54.616 A:middle
We also have Find My
Friends, for example,

00:02:54.616 --> 00:02:57.276 A:middle
that when a friend shares
their location with you,

00:02:57.726 --> 00:03:00.916 A:middle
you see their location
immediately in notification

00:02:57.726 --> 00:03:00.916 A:middle
you see their location
immediately in notification

00:03:00.916 --> 00:03:03.146 A:middle
so you can see how late they're
going to be for your meeting.

00:03:04.976 --> 00:03:08.166 A:middle
We also have notifications
for Photo Sharing.

00:03:08.276 --> 00:03:12.026 A:middle
If you shared a photo on iCloud,
you can see the photo directly

00:03:12.086 --> 00:03:14.106 A:middle
in the notification
without opening the app,

00:03:14.106 --> 00:03:17.656 A:middle
and you can like it or comment
on it without opening the app

00:03:17.706 --> 00:03:19.576 A:middle
to look at the, at the picture.

00:03:19.886 --> 00:03:21.326 A:middle
At last, messages.

00:03:21.326 --> 00:03:22.386 A:middle
This is not all of it.

00:03:23.366 --> 00:03:26.376 A:middle
Messages support Quick
Reply starting in iOS 8,

00:03:26.886 --> 00:03:29.606 A:middle
but you could only
see one message,

00:03:29.606 --> 00:03:31.366 A:middle
and you can only
type one response.

00:03:32.246 --> 00:03:34.386 A:middle
Now you see the entire
conversation

00:03:34.386 --> 00:03:36.756 A:middle
when you open the notification,
and you can respond to it,

00:03:37.056 --> 00:03:39.646 A:middle
you can wait for your friends
to respond, and you type,

00:03:39.646 --> 00:03:40.746 A:middle
can type more responses.

00:03:41.296 --> 00:03:43.996 A:middle
This is the power of new
notifications in iOS X.

00:03:46.146 --> 00:03:52.136 A:middle
But is this was all there was to
it, I wouldn't need to stay here

00:03:52.136 --> 00:03:54.556 A:middle
for half an hour and show
you all the new notifications

00:03:54.556 --> 00:03:55.336 A:middle
in iOS X.

00:03:55.886 --> 00:03:59.836 A:middle
So the most important feature I
want talk to you about today is

00:03:59.836 --> 00:04:02.556 A:middle
that everything I just
showed you is implemented

00:03:59.836 --> 00:04:02.556 A:middle
that everything I just
showed you is implemented

00:04:02.556 --> 00:04:06.326 A:middle
with the new API's that we
are expand, exposing in iOS X

00:04:06.876 --> 00:04:09.576 A:middle
so you can do exactly the
same things that we've done

00:04:09.836 --> 00:04:13.006 A:middle
and add all the same features
to your own applications

00:04:13.006 --> 00:04:14.126 A:middle
and your notifications.

00:04:15.586 --> 00:04:19.236 A:middle
The first thing you can
do is media attachments.

00:04:22.276 --> 00:04:25.556 A:middle
You know, one of the most
frequent notifications I receive

00:04:25.556 --> 00:04:29.506 A:middle
by my friends are pictures
that they're sharing or videos.

00:04:30.116 --> 00:04:33.736 A:middle
So it's really important
that we have the content

00:04:33.736 --> 00:04:35.536 A:middle
that was shared [inaudible]
notifications

00:04:35.536 --> 00:04:37.576 A:middle
so I can see it more
quickly without having

00:04:37.576 --> 00:04:38.946 A:middle
to open the app and download it.

00:04:41.496 --> 00:04:44.126 A:middle
But the problem is
that, as you know,

00:04:44.126 --> 00:04:48.156 A:middle
push notifications are
delivered with push payload,

00:04:49.106 --> 00:04:52.686 A:middle
and even if we increase the
size last year to 4 kilobytes,

00:04:53.036 --> 00:04:56.586 A:middle
that's not nearly enough
to send an entire picture,

00:04:56.586 --> 00:04:59.406 A:middle
even if it's a small one that
we include in the notification.

00:05:00.496 --> 00:05:01.766 A:middle
So how do we do that?

00:05:03.016 --> 00:05:05.006 A:middle
We use the new service
extensions

00:05:05.006 --> 00:05:07.826 A:middle
that we introduced earlier today
in the previous presentation.

00:05:10.086 --> 00:05:13.436 A:middle
So to do, to download
the attachment

00:05:13.846 --> 00:05:17.246 A:middle
in the service extension, you
have to set your notification

00:05:17.246 --> 00:05:21.366 A:middle
to be mutable, as you
see here in the payload.

00:05:21.366 --> 00:05:26.116 A:middle
I send a mutable content flag,
and then you add a reference

00:05:26.146 --> 00:05:28.686 A:middle
to the attachment that you
want to send with notification.

00:05:29.366 --> 00:05:31.326 A:middle
In this case, I use
a simple URL,

00:05:31.956 --> 00:05:33.576 A:middle
but you could also
use a identifier

00:05:33.576 --> 00:05:36.306 A:middle
that your app knows how to
download from your own servers.

00:05:38.216 --> 00:05:40.846 A:middle
After you've done this, and
the notification is delivered

00:05:40.846 --> 00:05:44.326 A:middle
to the device, the system will
run your service extension.

00:05:45.056 --> 00:05:46.126 A:middle
In the service extension,

00:05:46.126 --> 00:05:48.456 A:middle
you can download the
attachment anyway you want.

00:05:49.166 --> 00:05:51.326 A:middle
Perhaps you can use
an URL session

00:05:51.496 --> 00:05:53.956 A:middle
so that the system helps
you manage resources.

00:05:55.566 --> 00:05:57.516 A:middle
And then the notification
is delivered

00:05:57.516 --> 00:05:59.566 A:middle
to the user with the attachment.

00:06:00.856 --> 00:06:04.216 A:middle
Let's see it, a little bit
of code on how to do this.

00:06:06.626 --> 00:06:10.076 A:middle
This is a very basic example
of my service extension.

00:06:11.616 --> 00:06:14.886 A:middle
At the top, I implemented
the didReceive request

00:06:15.466 --> 00:06:18.206 A:middle
withContentHandler,
and this is called

00:06:18.206 --> 00:06:20.066 A:middle
when the notification
is received,

00:06:20.066 --> 00:06:22.206 A:middle
and I have to download
my attachment.

00:06:24.066 --> 00:06:28.286 A:middle
I download my attachment, again,
for maybe using the URL session

00:06:28.286 --> 00:06:30.676 A:middle
or other techniques
that you prefer,

00:06:30.676 --> 00:06:33.526 A:middle
and when I have the
file downloaded locally,

00:06:34.146 --> 00:06:36.506 A:middle
I can create a notification
attachment object.

00:06:38.446 --> 00:06:42.026 A:middle
When I created the object, I
added notification content,

00:06:42.886 --> 00:06:45.726 A:middle
and I pass it onto the system
to be delivered to the user.

00:06:46.236 --> 00:06:50.986 A:middle
After I've done this,
this is my notification

00:06:51.946 --> 00:06:55.506 A:middle
with a beautiful picture
visible immediately to the user

00:06:55.506 --> 00:06:57.056 A:middle
without waiting for
it to download

00:06:57.186 --> 00:06:58.676 A:middle
or without having
to open the app.

00:07:00.306 --> 00:07:04.246 A:middle
And you see the notification
suite attachments support

00:07:04.246 --> 00:07:05.526 A:middle
actionable notifications to.

00:07:05.526 --> 00:07:11.706 A:middle
So you can like or comment this,
this picture directly from here.

00:07:12.686 --> 00:07:15.266 A:middle
So media attachments,
a quick recap.

00:07:15.806 --> 00:07:18.516 A:middle
They support local, every
[inaudible] notifications.

00:07:19.296 --> 00:07:20.946 A:middle
We only talked about local here.

00:07:20.946 --> 00:07:24.386 A:middle
We only talked about remote
because local ones are easier.

00:07:24.386 --> 00:07:27.096 A:middle
You just create the
notification attachment object

00:07:27.386 --> 00:07:29.736 A:middle
when you're scheduling the
notification, and you're done.

00:07:32.306 --> 00:07:35.956 A:middle
Attachments support
images, audio, and video,

00:07:36.656 --> 00:07:39.866 A:middle
and the system will
provide, customize UI

00:07:39.866 --> 00:07:41.726 A:middle
for this three types of content.

00:07:42.816 --> 00:07:46.946 A:middle
You download the attachment
in the service extension,

00:07:47.316 --> 00:07:48.636 A:middle
but you have to remember

00:07:48.886 --> 00:07:52.226 A:middle
that the service extensions
has limited amount of time

00:07:52.336 --> 00:07:57.476 A:middle
that it can run, and file
sizes are also limited

00:07:57.576 --> 00:08:00.726 A:middle
because these are meant to be
sent with the notification.

00:07:57.576 --> 00:08:00.726 A:middle
because these are meant to be
sent with the notification.

00:08:00.726 --> 00:08:03.526 A:middle
They're not meant to deliver
the entire content to the user.

00:08:04.026 --> 00:08:06.446 A:middle
So you may want to send
a scaled-down version

00:08:06.596 --> 00:08:09.766 A:middle
of the image, and then
download the full resolution one

00:08:09.766 --> 00:08:11.476 A:middle
when the user opens the app.

00:08:11.636 --> 00:08:14.216 A:middle
Or you may want to
send a short video clip

00:08:14.416 --> 00:08:17.306 A:middle
if you're sending a video, and
then download the full video

00:08:17.306 --> 00:08:19.966 A:middle
when they open the app.

00:08:21.116 --> 00:08:24.716 A:middle
When you downloaded it, you
add it to the notification,

00:08:25.576 --> 00:08:28.756 A:middle
and at this point,
the system takes over

00:08:29.026 --> 00:08:31.006 A:middle
and manages the file for you.

00:08:31.476 --> 00:08:33.916 A:middle
You don't need to worry
about the file anymore.

00:08:33.916 --> 00:08:37.086 A:middle
The system moves it
to a separate location

00:08:37.706 --> 00:08:38.816 A:middle
and handles all the data.

00:08:39.796 --> 00:08:43.525 A:middle
Oh, yeah, I almost forgot.

00:08:43.996 --> 00:08:45.486 A:middle
Of course, we support GIFs.

00:08:46.516 --> 00:08:55.016 A:middle
[ Applause ]

00:08:55.516 --> 00:08:57.246 A:middle
So attachments are pretty cool,

00:08:57.246 --> 00:09:00.676 A:middle
and they provide a very rich
interface for notifications,

00:08:57.246 --> 00:09:00.676 A:middle
and they provide a very rich
interface for notifications,

00:09:01.396 --> 00:09:04.816 A:middle
but at the beginning I said that
you could implement everything

00:09:04.816 --> 00:09:09.256 A:middle
that I showed you with the new
notifications, and calendar,

00:09:09.256 --> 00:09:12.136 A:middle
messages, and they
were definitely not

00:09:12.136 --> 00:09:13.186 A:middle
using attachments.

00:09:13.756 --> 00:09:15.766 A:middle
They were using custom
user interface,

00:09:16.816 --> 00:09:18.706 A:middle
and this is what we're
talking about now.

00:09:20.226 --> 00:09:21.786 A:middle
To create a custom
user interface,

00:09:24.656 --> 00:09:27.426 A:middle
you use the second
extension point that we added

00:09:27.426 --> 00:09:28.866 A:middle
to our standard notifications,

00:09:29.106 --> 00:09:31.086 A:middle
and it's a
NotificationContentExtension.

00:09:32.656 --> 00:09:35.376 A:middle
The NotificationContentExtension
allows you

00:09:35.416 --> 00:09:38.046 A:middle
to add your own views,
custom views.

00:09:38.226 --> 00:09:41.626 A:middle
You can draw anything
you want, but the main,

00:09:41.716 --> 00:09:43.306 A:middle
most important limitation is

00:09:43.306 --> 00:09:45.066 A:middle
that there is no
interaction with your views.

00:09:45.416 --> 00:09:46.496 A:middle
They don't receive touches.

00:09:46.496 --> 00:09:48.346 A:middle
The user cannot tap on them.

00:09:48.956 --> 00:09:51.046 A:middle
But notifications
are still interactive

00:09:51.096 --> 00:09:53.316 A:middle
because you can use
notification actions,

00:09:53.666 --> 00:09:55.746 A:middle
and the extension can
handle those actions,

00:09:55.746 --> 00:09:58.886 A:middle
and we'll see later
how to do it.

00:10:01.486 --> 00:10:04.906 A:middle
So I said that we can
implement the same things

00:10:04.906 --> 00:10:05.956 A:middle
that the system is doing.

00:10:06.376 --> 00:10:08.786 A:middle
Let's start by seeing
what calendar is doing,

00:10:08.786 --> 00:10:10.386 A:middle
and then we'll see how
to do the same thing.

00:10:11.936 --> 00:10:13.276 A:middle
This is a calendar notification.

00:10:13.276 --> 00:10:16.096 A:middle
You see at the very
top there's a header

00:10:16.096 --> 00:10:18.936 A:middle
with the notification icon that
you can tap to open the app,

00:10:19.746 --> 00:10:22.236 A:middle
the application name,
and the dismiss button.

00:10:22.436 --> 00:10:24.556 A:middle
This is standard UI
that the system provides

00:10:24.686 --> 00:10:25.586 A:middle
to all notifications.

00:10:27.376 --> 00:10:29.746 A:middle
Underneath the header,
there's the custom content,

00:10:30.426 --> 00:10:32.406 A:middle
and this is where your
notification extension

00:10:32.406 --> 00:10:32.586 A:middle
will live.

00:10:32.586 --> 00:10:35.006 A:middle
This is where you
draw your content.

00:10:35.236 --> 00:10:37.906 A:middle
You show all the extra details
that you want to the user.

00:10:39.706 --> 00:10:44.696 A:middle
And underneath these,
there's a default content

00:10:44.696 --> 00:10:45.736 A:middle
that the system shows.

00:10:47.126 --> 00:10:49.856 A:middle
This shows the content that
was delivered with the payload.

00:10:49.856 --> 00:10:54.336 A:middle
This was what was visible until
iOS 9 in the notification.

00:10:56.506 --> 00:11:03.816 A:middle
And at the very bottom, there
are actions that a user can tap

00:10:56.506 --> 00:11:03.816 A:middle
And at the very bottom, there
are actions that a user can tap

00:11:03.816 --> 00:11:05.836 A:middle
and interact in notification.

00:11:06.176 --> 00:11:10.686 A:middle
When the user taps on them,
the user interface can update

00:11:10.996 --> 00:11:13.736 A:middle
and show what happened.

00:11:13.996 --> 00:11:16.386 A:middle
So let's see how to make
one of these ourselves.

00:11:17.956 --> 00:11:21.696 A:middle
We'll start with a party invite.

00:11:22.446 --> 00:11:24.516 A:middle
Parties are fun, and we're
going Thursday, right.

00:11:25.756 --> 00:11:28.846 A:middle
This is the basic notification
that will be displayed

00:11:28.846 --> 00:11:31.096 A:middle
by the user when you just
send a push notification,

00:11:31.586 --> 00:11:34.066 A:middle
and it's pretty similar
to what you expect.

00:11:34.676 --> 00:11:36.236 A:middle
Let's see how to expand this

00:11:36.666 --> 00:11:39.076 A:middle
and show custom user
interface like we wanted.

00:11:40.426 --> 00:11:43.316 A:middle
The first thing you want to
do is to create a new target

00:11:43.516 --> 00:11:47.176 A:middle
in your application, and you
do that by using the template

00:11:47.176 --> 00:11:48.176 A:middle
that Xcode provides,

00:11:48.586 --> 00:11:50.536 A:middle
the NotificationContentExtension
template.

00:11:51.896 --> 00:11:55.536 A:middle
This template will create
three files in a new target.

00:11:56.406 --> 00:11:59.856 A:middle
A view controller, main
interface storyboard,

00:12:00.486 --> 00:12:02.266 A:middle
and the info.plist
where you can set

00:12:02.266 --> 00:12:04.476 A:middle
up customizables
for the extension.

00:12:08.456 --> 00:12:09.496 A:middle
This is the view controller

00:12:10.036 --> 00:12:11.706 A:middle
for the
NotificationContentExtension.

00:12:12.336 --> 00:12:16.406 A:middle
As you see, it's just a UI
view controller subclass.

00:12:16.896 --> 00:12:19.446 A:middle
It's a regular view controller
that you use as you're used to.

00:12:21.156 --> 00:12:23.846 A:middle
It also implements the
NotificationContentExtension

00:12:23.846 --> 00:12:26.866 A:middle
protocol, and this is what
tells the system that you want

00:12:26.866 --> 00:12:29.436 A:middle
to use these view controller
for the notifications.

00:12:30.266 --> 00:12:34.816 A:middle
This protocol has only
one required method.

00:12:35.236 --> 00:12:37.516 A:middle
The required method is
didRreceive notification,

00:12:37.516 --> 00:12:42.586 A:middle
as you see here, and this
method is called together

00:12:42.586 --> 00:12:45.756 A:middle
with the view controller
life cycle method calls

00:12:45.756 --> 00:12:48.306 A:middle
when the notification is
delivered to your notification.

00:12:48.876 --> 00:12:50.006 A:middle
To your extension.

00:12:51.756 --> 00:12:54.476 A:middle
So when the user
expands the notification,

00:12:55.466 --> 00:12:57.566 A:middle
you will receive all the
view controller calls

00:12:57.656 --> 00:12:58.876 A:middle
and these one in addition.

00:12:58.876 --> 00:13:00.966 A:middle
So you can receive the
notification object

00:12:58.876 --> 00:13:00.966 A:middle
So you can receive the
notification object

00:13:01.146 --> 00:13:03.736 A:middle
and update your UI and
show different things.

00:13:06.306 --> 00:13:10.986 A:middle
The, the next thing you want
to do is tell the system how

00:13:10.986 --> 00:13:12.626 A:middle
to find your content extension.

00:13:13.886 --> 00:13:17.836 A:middle
Content extensions, you use the
same notification categories

00:13:17.836 --> 00:13:20.226 A:middle
that you use to register
notifications actions.

00:13:21.176 --> 00:13:22.936 A:middle
In this case, I use
the event invite

00:13:23.376 --> 00:13:25.296 A:middle
for my party invite invitation,

00:13:26.176 --> 00:13:29.236 A:middle
but extensions can
also be associated

00:13:29.236 --> 00:13:31.966 A:middle
with multiple categories in
case you want to use the same UI

00:13:31.966 --> 00:13:33.316 A:middle
for different types

00:13:33.316 --> 00:13:35.016 A:middle
of notifications
that may be similar.

00:13:35.626 --> 00:13:38.446 A:middle
In this case, I'm using the
event-invite or event-update.

00:13:38.766 --> 00:13:40.726 A:middle
They could be very similar UI's.

00:13:40.726 --> 00:13:42.756 A:middle
So I can just use the
same, different categories

00:13:42.756 --> 00:13:44.376 A:middle
because they may have
different actions.

00:13:46.576 --> 00:13:47.756 A:middle
So I set up everything.

00:13:49.096 --> 00:13:50.106 A:middle
I have my view controller.

00:13:50.596 --> 00:13:54.066 A:middle
Now I want to add some custom
views to it to draw my own UI.

00:13:54.176 --> 00:13:55.846 A:middle
It's a very controller.

00:13:55.956 --> 00:13:58.796 A:middle
I added some labels
in my storyboard

00:13:58.796 --> 00:14:01.316 A:middle
that I'm not showing
here, and I'm,

00:13:58.796 --> 00:14:01.316 A:middle
that I'm not showing
here, and I'm,

00:14:02.476 --> 00:14:06.386 A:middle
when I receive the notification,
I'm extracting the content

00:14:07.406 --> 00:14:11.786 A:middle
to have the information I need,
and I'm setting the content

00:14:12.256 --> 00:14:13.756 A:middle
on the labels that
I just created.

00:14:15.156 --> 00:14:18.756 A:middle
You see that I also have some
custom information additional

00:14:18.756 --> 00:14:22.426 A:middle
to the standard one that comes
with the payload because I want

00:14:22.426 --> 00:14:26.226 A:middle
to show something more than the
standard payload for displays.

00:14:26.616 --> 00:14:28.276 A:middle
In this case, I'm
showing the location

00:14:28.276 --> 00:14:31.656 A:middle
because it's pretty important
to know where the party is.

00:14:33.296 --> 00:14:35.696 A:middle
And this is my notification now.

00:14:37.186 --> 00:14:39.736 A:middle
You see that I have
some custom content.

00:14:40.176 --> 00:14:43.636 A:middle
I draw my own UI with my custom
labels, different styles,

00:14:45.166 --> 00:14:47.636 A:middle
but these notifications
has two problems.

00:14:49.506 --> 00:14:52.646 A:middle
The first problem is that
this content is too big.

00:14:53.276 --> 00:14:55.376 A:middle
I don't need all
that extra space.

00:14:55.376 --> 00:14:56.386 A:middle
It's all empty.

00:14:56.676 --> 00:14:58.926 A:middle
I have much smaller
content to display.

00:14:59.356 --> 00:15:03.886 A:middle
The second problem is that the
default content is duplicated.

00:14:59.356 --> 00:15:03.886 A:middle
The second problem is that the
default content is duplicated.

00:15:04.356 --> 00:15:06.966 A:middle
I don't need it because I'm
already displaying the same

00:15:06.966 --> 00:15:09.556 A:middle
information up top
with my custom style.

00:15:10.186 --> 00:15:12.986 A:middle
But we can fix both
of these problems.

00:15:13.886 --> 00:15:15.846 A:middle
Well, let's fix the
first, the second one first

00:15:15.846 --> 00:15:19.466 A:middle
because it's easier, and this
is an additional attribute

00:15:19.676 --> 00:15:23.356 A:middle
in your info.plist, and you can
just set default content hidden

00:15:23.586 --> 00:15:25.976 A:middle
to yes to hide the
default content.

00:15:26.106 --> 00:15:27.786 A:middle
The system will not
add that anymore.

00:15:29.446 --> 00:15:33.296 A:middle
The second problem was the
size of my notification,

00:15:34.086 --> 00:15:36.106 A:middle
but since it's just
the view controller,

00:15:36.386 --> 00:15:39.856 A:middle
I can resize it the way I'm used
to resizing view controllers.

00:15:40.386 --> 00:15:43.216 A:middle
In this case, I'm setting
the preferred content size,

00:15:43.536 --> 00:15:47.406 A:middle
but you can set the
constraints without the layout.

00:15:47.406 --> 00:15:51.756 A:middle
You can use the storyboard,
and they will both work.

00:15:52.846 --> 00:15:54.616 A:middle
And after fixing
these two issues,

00:15:55.866 --> 00:15:56.906 A:middle
this is my notification now.

00:15:58.346 --> 00:15:59.086 A:middle
It looks much better.

00:16:00.186 --> 00:16:01.696 A:middle
It's the right size
that I wanted.

00:16:02.136 --> 00:16:03.666 A:middle
There's no duplicate content,

00:16:04.616 --> 00:16:07.116 A:middle
but did you see there
was another problem now.

00:16:07.936 --> 00:16:09.496 A:middle
When the notification
was presented,

00:16:09.496 --> 00:16:11.356 A:middle
it was not the right size.

00:16:11.626 --> 00:16:16.116 A:middle
So the system had to animate
a resize the notification

00:16:16.116 --> 00:16:17.166 A:middle
to show it the right size.

00:16:17.596 --> 00:16:18.786 A:middle
Let me show it to you again.

00:16:21.336 --> 00:16:24.126 A:middle
See? We could make it better.

00:16:25.286 --> 00:16:28.796 A:middle
The reason this happens
is that the system needs

00:16:28.796 --> 00:16:32.196 A:middle
to know the size of your final
notification when it starts

00:16:32.196 --> 00:16:35.416 A:middle
to display it so you can
do the right animation.

00:16:36.236 --> 00:16:39.096 A:middle
But your extension
is not yet running

00:16:39.296 --> 00:16:41.526 A:middle
when the system starts
presenting the notification.

00:16:42.006 --> 00:16:44.886 A:middle
So you need to tell the
system in advance before any

00:16:44.886 --> 00:16:49.406 A:middle
of your code runs what size
you want to be at the end.

00:16:49.406 --> 00:16:51.616 A:middle
But the problem is that
these notifications run

00:16:51.846 --> 00:16:52.906 A:middle
in different devices

00:16:52.906 --> 00:16:54.806 A:middle
with different sizes
in different context.

00:16:55.776 --> 00:16:59.676 A:middle
So the way we do that is
that we set a content ratio,

00:16:59.786 --> 00:17:00.906 A:middle
content size ratio.

00:16:59.786 --> 00:17:00.906 A:middle
content size ratio.

00:17:02.116 --> 00:17:05.866 A:middle
So these, this defines the
ratio of the height and width

00:17:06.685 --> 00:17:08.046 A:middle
that you want to use
for your content.

00:17:09.836 --> 00:17:12.415 A:middle
Now this may, of course,
not always be possible

00:17:12.546 --> 00:17:14.945 A:middle
because you may have
content of different sizes.

00:17:15.205 --> 00:17:16.746 A:middle
You don't know what
content you're receiving.

00:17:16.746 --> 00:17:18.026 A:middle
You still want to
display all of it.

00:17:18.386 --> 00:17:21.665 A:middle
So sometimes this may not
be possible, but if you can,

00:17:21.826 --> 00:17:24.516 A:middle
figure out a size that works
for your notifications.

00:17:24.906 --> 00:17:27.316 A:middle
This is the way to do it.

00:17:27.596 --> 00:17:32.216 A:middle
And the result after I've done
this is this new notification

00:17:32.216 --> 00:17:33.986 A:middle
that now present it directly

00:17:34.126 --> 00:17:36.076 A:middle
at the right size
from the beginning.

00:17:36.526 --> 00:17:38.016 A:middle
So let's review what
we have done so far.

00:17:39.426 --> 00:17:41.216 A:middle
We wanted to do a
custom notification UI.

00:17:42.186 --> 00:17:44.586 A:middle
We may, we started
with these custom UI.

00:17:45.086 --> 00:17:49.776 A:middle
That's pretty basic, but has all
my custom content has additional

00:17:49.776 --> 00:17:51.286 A:middle
information that was
not in the payload,

00:17:51.286 --> 00:17:53.126 A:middle
but it was the wrong size.

00:17:53.626 --> 00:17:55.736 A:middle
So we fixed the presentation
size

00:17:55.996 --> 00:17:57.726 A:middle
by using the initial
content size ratio.

00:17:58.806 --> 00:18:01.006 A:middle
And then we fixed the
duplicated content

00:17:58.806 --> 00:18:01.006 A:middle
And then we fixed the
duplicated content

00:18:01.536 --> 00:18:04.006 A:middle
by setting the default
content type hidden flag,

00:18:05.176 --> 00:18:07.946 A:middle
and we went from the
beginning to this.

00:18:09.676 --> 00:18:11.486 A:middle
This looks better
than when we started.

00:18:12.046 --> 00:18:14.616 A:middle
Still not great, but I
do have an appointment

00:18:14.616 --> 00:18:18.956 A:middle
that is unlocked
today to fix it.

00:18:21.176 --> 00:18:25.066 A:middle
But I also know another trick to
make notifications look nicer.

00:18:26.026 --> 00:18:27.026 A:middle
We can add pictures.

00:18:27.306 --> 00:18:30.346 A:middle
Pictures are always nice,
especially on party invitations.

00:18:31.466 --> 00:18:34.866 A:middle
So we can use the
same media attachments

00:18:35.156 --> 00:18:39.456 A:middle
that we used earlier also in
NotificationContentExtensions.

00:18:41.036 --> 00:18:43.276 A:middle
Since they're added to
the notification content,

00:18:43.636 --> 00:18:46.306 A:middle
you can access them inside
your content extension.

00:18:46.846 --> 00:18:48.856 A:middle
So when you receive the
notification [inaudible]

00:18:49.316 --> 00:18:54.336 A:middle
notification method, you
can extract the attachments

00:18:54.756 --> 00:18:55.406 A:middle
from your content.

00:18:56.046 --> 00:19:00.726 A:middle
As I mentioned earlier,
the attachment is managed

00:18:56.046 --> 00:19:00.726 A:middle
As I mentioned earlier,
the attachment is managed

00:19:00.726 --> 00:19:03.046 A:middle
by the system, and it's
moved to a separate location.

00:19:03.586 --> 00:19:05.616 A:middle
This means that it's
outside of your sandbox.

00:19:05.946 --> 00:19:08.816 A:middle
So you need to tell the system
that you want to start using it

00:19:09.116 --> 00:19:10.916 A:middle
and tell the system
when you're done.

00:19:12.306 --> 00:19:15.326 A:middle
When you have access, you
just use it as a file.

00:19:15.666 --> 00:19:18.176 A:middle
In this case, I'm adding
it to my image view.

00:19:19.826 --> 00:19:22.476 A:middle
And here's my notification now.

00:19:24.826 --> 00:19:25.976 A:middle
You can tell this
guy's ready to party.

00:19:26.516 --> 00:19:33.196 A:middle
[ Applause ]

00:19:33.696 --> 00:19:36.456 A:middle
This is much nicer than
the one we started with,

00:19:36.946 --> 00:19:38.466 A:middle
and it's our own custom UI.

00:19:38.466 --> 00:19:41.056 A:middle
We want, we wanted to show
additional information

00:19:41.056 --> 00:19:42.816 A:middle
to the user, and we added that.

00:19:43.146 --> 00:19:44.396 A:middle
We wanted to add a picture.

00:19:44.626 --> 00:19:45.516 A:middle
We have that, too.

00:19:47.356 --> 00:19:48.996 A:middle
Well, we missed the next step.

00:19:49.196 --> 00:19:50.726 A:middle
We want to make this
interactive.

00:19:51.066 --> 00:19:53.136 A:middle
We want to implement
the actions.

00:19:55.386 --> 00:19:58.376 A:middle
Let's do that now.

00:20:00.596 --> 00:20:03.616 A:middle
Default actions by
default work the same way

00:20:03.616 --> 00:20:05.966 A:middle
as you're used to since iOS 8.

00:20:07.156 --> 00:20:08.196 A:middle
They are delivered to the app.

00:20:08.426 --> 00:20:09.726 A:middle
When the user taps
on the button,

00:20:10.296 --> 00:20:12.056 A:middle
the app receives the
[inaudible] request,

00:20:13.306 --> 00:20:15.416 A:middle
and the notification gets
dismissed immediately.

00:20:16.456 --> 00:20:18.926 A:middle
This is pretty convenient
because it's a behavior

00:20:18.926 --> 00:20:22.316 A:middle
that you often use, and it's
pretty simple to implement,

00:20:23.026 --> 00:20:26.126 A:middle
but sometimes you want to
show the user the effect

00:20:26.326 --> 00:20:28.546 A:middle
of the action for,
like, in the example

00:20:28.546 --> 00:20:29.736 A:middle
of the calendar invitation.

00:20:30.096 --> 00:20:31.646 A:middle
That when the user
tapped accept,

00:20:32.606 --> 00:20:36.076 A:middle
the content highlighted the
event that I just accepted.

00:20:36.506 --> 00:20:40.376 A:middle
And you can do that in your
NotificationContentExtensions.

00:20:41.216 --> 00:20:43.746 A:middle
You do that by intercepting
the action

00:20:44.076 --> 00:20:45.476 A:middle
in the notification extension.

00:20:46.426 --> 00:20:50.436 A:middle
When you do that, the action
is delivered to the extension

00:20:51.136 --> 00:20:54.406 A:middle
and it can decide to delay the
dismissal of the notification.

00:20:54.526 --> 00:20:57.976 A:middle
So it has time to handle
the action, update the UI,

00:20:58.656 --> 00:20:59.736 A:middle
and dismiss when it's done.

00:21:00.446 --> 00:21:03.646 A:middle
This is very simple,
and you do it

00:21:03.876 --> 00:21:07.046 A:middle
with the second method inside
the NotificationContentExtension

00:21:07.046 --> 00:21:07.516 A:middle
protocol.

00:21:08.696 --> 00:21:10.266 A:middle
This method is optional.

00:21:10.516 --> 00:21:12.236 A:middle
You don't need to implement
it if you don't need

00:21:12.236 --> 00:21:15.146 A:middle
to intercept the actions,
but if you do implement it,

00:21:15.386 --> 00:21:17.506 A:middle
it means that you have
to handle all the actions

00:21:17.536 --> 00:21:18.906 A:middle
that are in that notification.

00:21:19.236 --> 00:21:22.766 A:middle
You cannot handle one and
not look at the other ones.

00:21:24.096 --> 00:21:27.806 A:middle
So when you receive
the notification,

00:21:29.266 --> 00:21:31.436 A:middle
you can send a response
of your server

00:21:31.616 --> 00:21:33.546 A:middle
to update the information
on the server.

00:21:33.666 --> 00:21:35.396 A:middle
When you receive the
response from the server,

00:21:35.826 --> 00:21:38.656 A:middle
you update the UI saying
that the user is going

00:21:38.656 --> 00:21:39.866 A:middle
to the party, of course.

00:21:40.676 --> 00:21:43.286 A:middle
And when it's done, you can
dismiss the notification.

00:21:44.286 --> 00:21:49.056 A:middle
So that the interface was
updated before dismissing it.

00:21:50.326 --> 00:21:53.546 A:middle
In case you want to
still forward the action

00:21:53.546 --> 00:21:55.936 A:middle
to your application,
you can do that, too.

00:21:56.646 --> 00:21:58.636 A:middle
If you want to do
additional handling,

00:21:58.816 --> 00:22:01.366 A:middle
or you want to keep the code
in, all in the same place,

00:21:58.816 --> 00:22:01.366 A:middle
or you want to keep the code
in, all in the same place,

00:22:01.746 --> 00:22:05.526 A:middle
you just call completionHandler
with a different parameter.

00:22:07.626 --> 00:22:11.336 A:middle
And what happens when we do this
is that we receive notification,

00:22:11.756 --> 00:22:13.576 A:middle
we tap on that, and
we can update the UI,

00:22:14.766 --> 00:22:16.066 A:middle
and we dismiss later.

00:22:18.656 --> 00:22:24.836 A:middle
So you saw in my example code
that we implemented the accept

00:22:25.266 --> 00:22:28.576 A:middle
and decline action, and we
have a third one at the bottom.

00:22:29.366 --> 00:22:31.326 A:middle
Because sometimes
when you're responding

00:22:31.326 --> 00:22:33.046 A:middle
to a party invitation,
you want to see,

00:22:33.046 --> 00:22:35.316 A:middle
we want to tell your friends
how excited you are to go

00:22:35.316 --> 00:22:37.636 A:middle
to the party or how upset
you are that you can't go.

00:22:38.416 --> 00:22:39.686 A:middle
So you tap on the
comment action.

00:22:41.736 --> 00:22:44.186 A:middle
The comment action is
a texting production,

00:22:45.146 --> 00:22:48.016 A:middle
like the ones we introduced
in iOS 9, and you use it

00:22:48.016 --> 00:22:52.226 A:middle
in the same way, except with
the new, awesome new framework.

00:22:54.226 --> 00:22:55.976 A:middle
This is a texting production.

00:22:56.596 --> 00:22:58.686 A:middle
A tiny bit of newer PI on this.

00:22:58.856 --> 00:23:01.166 A:middle
You can set the place
holder in the text field,

00:22:58.856 --> 00:23:01.166 A:middle
You can set the place
holder in the text field,

00:23:02.756 --> 00:23:07.216 A:middle
and when you created the action,
you can add it to your category

00:23:07.566 --> 00:23:09.616 A:middle
so that it's displayed
with notifications.

00:23:13.446 --> 00:23:15.926 A:middle
So when the user taps
on the comment button,

00:23:16.606 --> 00:23:17.586 A:middle
the text will display.

00:23:21.056 --> 00:23:25.016 A:middle
Now since this is an
action like the others ones,

00:23:25.186 --> 00:23:26.776 A:middle
you can handle it
in the same way.

00:23:27.026 --> 00:23:29.646 A:middle
So you can intercept it
inside your extension

00:23:29.646 --> 00:23:30.756 A:middle
and handle it there.

00:23:32.086 --> 00:23:32.896 A:middle
Here's how you do that.

00:23:33.516 --> 00:23:34.826 A:middle
You receive the notification.

00:23:37.286 --> 00:23:40.736 A:middle
You check if it's a
text input action.

00:23:42.106 --> 00:23:46.926 A:middle
You extract the text of the user
typed and send it to the server.

00:23:48.066 --> 00:23:50.796 A:middle
And when you're done, you
dismiss the notification.

00:23:53.076 --> 00:23:56.266 A:middle
And this is what happens.

00:23:56.586 --> 00:24:00.876 A:middle
You tap, type, and there's
a problem again here

00:23:56.586 --> 00:24:00.876 A:middle
You tap, type, and there's
a problem again here

00:24:00.876 --> 00:24:01.946 A:middle
with this notification.

00:24:02.656 --> 00:24:06.606 A:middle
I want to respond to the invite,
but there's only a send button,

00:24:07.106 --> 00:24:09.726 A:middle
and I can't say if I want
to accept or decline.

00:24:11.866 --> 00:24:15.696 A:middle
So what we would like to do
is to have the text field

00:24:15.696 --> 00:24:18.466 A:middle
but also two buttons
so I can accept

00:24:18.466 --> 00:24:19.576 A:middle
or decline the invitation.

00:24:20.526 --> 00:24:21.826 A:middle
Something like this.

00:24:23.176 --> 00:24:23.676 A:middle
Would that work?

00:24:25.746 --> 00:24:28.716 A:middle
Well, there's no new API to do
this, and there's no new API

00:24:28.946 --> 00:24:30.276 A:middle
because it already exists.

00:24:30.776 --> 00:24:36.156 A:middle
You can use the existing UIKit
custom input accessory view API

00:24:36.936 --> 00:24:39.976 A:middle
to add your own custom into the
text field to the notification.

00:24:40.516 --> 00:24:48.586 A:middle
[ Applause ]

00:24:49.086 --> 00:24:52.386 A:middle
To do that, the first thing
you want to do is to say

00:24:52.386 --> 00:24:54.456 A:middle
that your controller can
become first responder.

00:24:55.376 --> 00:24:59.686 A:middle
This tells both the UIKit
system that it's part

00:24:59.686 --> 00:25:03.036 A:middle
of the responder chain and
the notification system tells

00:24:59.686 --> 00:25:03.036 A:middle
of the responder chain and
the notification system tells

00:25:03.036 --> 00:25:05.026 A:middle
that you don't want the
standard text field.

00:25:07.706 --> 00:25:11.986 A:middle
Then you create your own
custom inputAccessoryView,

00:25:12.186 --> 00:25:13.506 A:middle
in this case, like mine,

00:25:13.586 --> 00:25:15.216 A:middle
there was a text
field and two buttons.

00:25:16.976 --> 00:25:22.386 A:middle
And then when I receive
the response, the action,

00:25:22.596 --> 00:25:24.036 A:middle
the comment action
from the user,

00:25:24.656 --> 00:25:28.286 A:middle
I can make it first responder
so that the text field

00:25:28.286 --> 00:25:29.486 A:middle
and the keyboard appears.

00:25:29.486 --> 00:25:31.336 A:middle
I need to do both calls here

00:25:31.336 --> 00:25:34.356 A:middle
because the first one makes a
view controller first responder.

00:25:34.356 --> 00:25:35.676 A:middle
So the text field appears,

00:25:36.026 --> 00:25:38.286 A:middle
and the second one makes the
text field first responder

00:25:38.286 --> 00:25:39.526 A:middle
so that the keyboard appears.

00:25:42.446 --> 00:25:45.366 A:middle
You notice that in this case, I
don't really, I'm not interested

00:25:45.366 --> 00:25:47.996 A:middle
in the fact that it's a
textable action or not.

00:25:47.996 --> 00:25:50.736 A:middle
You can use regular
actions because I'm going

00:25:51.546 --> 00:25:54.656 A:middle
to get the text from the user
from my own inputAccessoryView.

00:25:54.846 --> 00:25:56.276 A:middle
So I have access to that UI.

00:25:56.276 --> 00:26:02.556 A:middle
And the result of this is
that when you tap on comment,

00:25:56.276 --> 00:26:02.556 A:middle
And the result of this is
that when you tap on comment,

00:26:03.286 --> 00:26:05.156 A:middle
now you can type your response

00:26:05.876 --> 00:26:07.976 A:middle
and actually respond
to the invitation.

00:26:12.686 --> 00:26:15.986 A:middle
So this was all for
NotificationContentExtensions.

00:26:16.336 --> 00:26:20.756 A:middle
There are some other small bits
of the PI that you can come

00:26:20.756 --> 00:26:22.916 A:middle
and talk to us at the labs
a little later in the week.

00:26:26.386 --> 00:26:31.026 A:middle
And what we learned today is how
to use attachments in custom UI,

00:26:31.576 --> 00:26:34.036 A:middle
in Notification Content
Extensions in iOS X.

00:26:35.256 --> 00:26:40.046 A:middle
We learned how to download and
add attachments to notifications

00:26:40.306 --> 00:26:41.756 A:middle
by using a service extension.

00:26:43.156 --> 00:26:45.716 A:middle
We learned how to do
custom UI, fully custom UI

00:26:45.716 --> 00:26:49.176 A:middle
with your specialized content
with the content extensions

00:26:49.486 --> 00:26:53.566 A:middle
that can use media attachments
and can handle user interaction.

00:26:55.156 --> 00:26:59.056 A:middle
For more information
about all of this,

00:26:59.116 --> 00:27:01.216 A:middle
there's a special
page for this session.

00:26:59.116 --> 00:27:01.216 A:middle
there's a special
page for this session.

00:27:04.186 --> 00:27:07.956 A:middle
We had a session earlier today
that if you missed you can catch

00:27:07.956 --> 00:27:10.546 A:middle
up to learn about the new
user notifications framework

00:27:10.546 --> 00:27:12.996 A:middle
and more details about
the service extension.

00:27:14.776 --> 00:27:15.096 A:middle
Thank you.
