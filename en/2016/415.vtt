WEBVTT

00:00:06.516 --> 00:00:17.500 A:middle
[ Music ]

00:00:21.516 --> 00:00:28.366 A:middle
[ Applause ]

00:00:28.866 --> 00:00:29.206 A:middle
&gt;&gt; Welcome.

00:00:29.356 --> 00:00:32.436 A:middle
My name's Philippe Hausler, and
I work at Apple on Foundation,

00:00:32.646 --> 00:00:35.656 A:middle
and today we're going to
talk about Swift On Servers.

00:00:36.076 --> 00:00:38.406 A:middle
We'll go over why Server-Side
Swift is compelling,

00:00:38.696 --> 00:00:42.526 A:middle
how all the pieces fit together,
what you get out of box,

00:00:42.796 --> 00:00:46.086 A:middle
what you don't, some real-world
examples of Swift running

00:00:46.086 --> 00:00:49.546 A:middle
on the server, and, most
importantly, what you can do

00:00:49.696 --> 00:00:51.896 A:middle
to contribute to making
Swift On Servers awesome.

00:00:53.516 --> 00:00:56.066 A:middle
Modern application
development isn't just building

00:00:56.066 --> 00:00:57.176 A:middle
for one platform.

00:00:57.666 --> 00:00:58.906 A:middle
It's an ecosystem.

00:00:59.206 --> 00:01:01.146 A:middle
You'd be hard pressed
to find an application

00:00:59.206 --> 00:01:01.146 A:middle
You'd be hard pressed
to find an application

00:01:01.506 --> 00:01:03.886 A:middle
that doesn't have some sort
of server-side component,

00:01:04.306 --> 00:01:06.836 A:middle
be it from analytics,
real-time communications,

00:01:07.136 --> 00:01:08.916 A:middle
or shared state being
stored in the Cloud,

00:01:09.346 --> 00:01:10.966 A:middle
servers are an integral
component

00:01:10.966 --> 00:01:12.986 A:middle
in making rich and
compelling apps.

00:01:14.106 --> 00:01:16.206 A:middle
Now building the
next great thing,

00:01:16.406 --> 00:01:19.386 A:middle
often there are contact
switches that have to be made.

00:01:20.706 --> 00:01:23.966 A:middle
You end up humming along,
writing your application,

00:01:24.306 --> 00:01:26.166 A:middle
and the next thing you
know you're writing

00:01:26.166 --> 00:01:27.296 A:middle
in a different language.

00:01:27.436 --> 00:01:30.576 A:middle
This can cause downtime and
repeated implementations,

00:01:30.626 --> 00:01:33.586 A:middle
and we all know how much we
dislike repeating ourselves

00:01:33.586 --> 00:01:34.066 A:middle
in code.

00:01:35.426 --> 00:01:37.916 A:middle
But Swift running on the
server has the potential not

00:01:37.916 --> 00:01:40.646 A:middle
to just provide a seamless
development experience

00:01:40.936 --> 00:01:43.866 A:middle
but also a richer and more
compelling user experience, too.

00:01:44.416 --> 00:01:46.476 A:middle
By sharing the right
parts of your code base,

00:01:46.806 --> 00:01:48.716 A:middle
time can be saved not
just for writing it

00:01:48.806 --> 00:01:51.216 A:middle
but also testing and QA.

00:01:51.816 --> 00:01:53.216 A:middle
But it's not just the language.

00:01:53.466 --> 00:01:54.166 A:middle
It's the API's.

00:01:55.196 --> 00:01:57.996 A:middle
It's often hard to disambiguate
the architecture of the API's

00:01:57.996 --> 00:02:01.246 A:middle
from the construction of
the language with constructs

00:01:57.996 --> 00:02:01.246 A:middle
from the construction of
the language with constructs

00:02:01.246 --> 00:02:04.476 A:middle
like strings, arrays,
dictionaries, concurrency.

00:02:04.916 --> 00:02:06.626 A:middle
They often become a core set

00:02:06.626 --> 00:02:08.866 A:middle
of libraries expressing
that language.

00:02:09.196 --> 00:02:12.086 A:middle
And with that, it brings us
to the architecture of Swift,

00:02:12.146 --> 00:02:15.186 A:middle
not just on the server,
but how Swift fits together

00:02:15.186 --> 00:02:16.486 A:middle
on all platforms.

00:02:17.906 --> 00:02:19.836 A:middle
As in early design
consideration,

00:02:20.226 --> 00:02:23.596 A:middle
Swift wouldn't just be
a Darwin-only language.

00:02:23.746 --> 00:02:27.516 A:middle
It can by its very nature
run on many platforms,

00:02:27.636 --> 00:02:30.756 A:middle
and with the community's help,
that goal has just been started

00:02:30.756 --> 00:02:33.326 A:middle
to be realized with
platforms, support to platforms

00:02:33.326 --> 00:02:36.146 A:middle
like [inaudible] SD,
targets like Raspberry Pi,

00:02:36.146 --> 00:02:38.706 A:middle
and even things like
Windows and Android.

00:02:39.016 --> 00:02:41.206 A:middle
Some pretty exciting stuff.

00:02:42.146 --> 00:02:45.346 A:middle
On all of these, Swift relies
on the system libraries.

00:02:45.706 --> 00:02:48.166 A:middle
Building on top of that, you
have the standard library.

00:02:48.606 --> 00:02:51.366 A:middle
It provides some of those
fundamental basic building

00:02:51.366 --> 00:02:53.566 A:middle
blocks and data structures.

00:02:54.096 --> 00:02:58.266 A:middle
On Darwin, we have an
addendum called the overlay

00:02:58.536 --> 00:03:01.526 A:middle
that aids system frameworks
to interface better in Swift,

00:02:58.536 --> 00:03:01.526 A:middle
that aids system frameworks
to interface better in Swift,

00:03:01.996 --> 00:03:06.096 A:middle
but since there is no foundation
or dispatch shipped with Linux,

00:03:06.376 --> 00:03:08.886 A:middle
a portable interface
was established to fill

00:03:08.886 --> 00:03:10.406 A:middle
in those fundamental pieces.

00:03:10.926 --> 00:03:13.926 A:middle
We started off with an outline
of what needed to be there

00:03:13.926 --> 00:03:16.216 A:middle
and a few initial
implementations,

00:03:16.306 --> 00:03:19.936 A:middle
and with the community, we have
added many of those basic items

00:03:19.936 --> 00:03:21.826 A:middle
that are needed for
any modern development.

00:03:23.256 --> 00:03:25.126 A:middle
So when you application
comes into the mix,

00:03:25.456 --> 00:03:26.786 A:middle
you can see that all

00:03:26.786 --> 00:03:30.356 A:middle
of the pieces just fit together
the same way on both platforms.

00:03:30.766 --> 00:03:33.666 A:middle
With Swift built in this
manner, as a developer,

00:03:33.746 --> 00:03:37.466 A:middle
you can pick the right pieces
out of your application to build

00:03:37.466 --> 00:03:39.816 A:middle
for the server and use
familiar constructs

00:03:39.816 --> 00:03:42.666 A:middle
that you're used to using.

00:03:42.766 --> 00:03:45.446 A:middle
Swift.org is the central place

00:03:45.446 --> 00:03:47.806 A:middle
for getting the most
recent version of Swift.

00:03:47.806 --> 00:03:50.026 A:middle
Signing up for the
mailing list, getting links

00:03:50.026 --> 00:03:53.306 A:middle
for the GitHub repositories or
continuous integration builds,

00:03:53.786 --> 00:03:56.116 A:middle
or a great place to
read the documentation

00:03:56.116 --> 00:03:58.116 A:middle
on the most recent
developments in Swift.

00:03:58.156 --> 00:04:00.726 A:middle
It is the place for
the Swift tool chain.

00:03:58.156 --> 00:04:00.726 A:middle
It is the place for
the Swift tool chain.

00:04:01.596 --> 00:04:04.336 A:middle
So what comes in this toolbox?

00:04:05.316 --> 00:04:07.466 A:middle
Out of the box, you get
support for building

00:04:07.466 --> 00:04:09.176 A:middle
on both Linux and Mac.

00:04:09.846 --> 00:04:13.426 A:middle
So you can develop on your Mac
and deploy to the Linux servers.

00:04:13.616 --> 00:04:16.456 A:middle
There are continuous
integration servers to ensure

00:04:16.456 --> 00:04:21.656 A:middle
that the changes that are made
to the language and API's happen

00:04:21.766 --> 00:04:23.706 A:middle
and continuously integrate

00:04:23.706 --> 00:04:25.856 A:middle
so that everything
works as expected.

00:04:25.856 --> 00:04:28.316 A:middle
You have the standard library.

00:04:28.746 --> 00:04:32.106 A:middle
That gives you those basic
building blocks, protocols,

00:04:32.106 --> 00:04:34.176 A:middle
structures, and types
that you would use

00:04:34.176 --> 00:04:36.096 A:middle
in building any Swift
application,

00:04:36.916 --> 00:04:40.966 A:middle
but you also get Foundation,
Dispatch, and XCTest as projects

00:04:40.966 --> 00:04:43.086 A:middle
within the, the Swift
tool chain.

00:04:43.586 --> 00:04:46.326 A:middle
These give you a cross
section of portable API's

00:04:46.416 --> 00:04:49.476 A:middle
that can keep your code
nearly the same as you build

00:04:49.476 --> 00:04:51.116 A:middle
across multiple platforms.

00:04:52.016 --> 00:04:54.986 A:middle
But you also get a suite of
tools for compiling, packaging,

00:04:55.296 --> 00:04:59.136 A:middle
and debugging Swift apps as well
as the Swift Rebel to complete,

00:04:59.136 --> 00:05:02.346 A:middle
try out some of those new
features, and you get all

00:04:59.136 --> 00:05:02.346 A:middle
try out some of those new
features, and you get all

00:05:02.346 --> 00:05:05.126 A:middle
of these things on
both platforms.

00:05:06.896 --> 00:05:09.806 A:middle
Now there are a few things
that are not included.

00:05:10.046 --> 00:05:12.836 A:middle
There was a design, a design
decision that was made

00:05:12.836 --> 00:05:15.696 A:middle
that some things just
didn't make sense

00:05:15.766 --> 00:05:18.676 A:middle
in a cross platform nature,
or that they were better,

00:05:18.746 --> 00:05:21.886 A:middle
better served to let developers
build their own solutions

00:05:21.966 --> 00:05:23.466 A:middle
since they're highly
specialized.

00:05:24.646 --> 00:05:27.036 A:middle
New platforms are not just code.

00:05:27.556 --> 00:05:30.476 A:middle
They are continuous
integration and verification,

00:05:30.476 --> 00:05:32.036 A:middle
and the champions reporting

00:05:32.036 --> 00:05:36.436 A:middle
to new platforms usually know
the best to implement those.

00:05:38.416 --> 00:05:42.116 A:middle
User interface is a very
platform-specific thing.

00:05:42.586 --> 00:05:44.446 A:middle
On iOS, you have UIKit.

00:05:44.896 --> 00:05:48.866 A:middle
On Mac, you have
AppKit, and even though

00:05:48.866 --> 00:05:51.076 A:middle
that they share a
lot of similarities,

00:05:51.146 --> 00:05:53.636 A:middle
there have to be
two different things

00:05:53.636 --> 00:05:55.556 A:middle
because they're solving
different problems.

00:05:56.426 --> 00:06:00.016 A:middle
For that matter, UI
can be web templates,

00:05:56.426 --> 00:06:00.016 A:middle
For that matter, UI
can be web templates,

00:06:00.016 --> 00:06:04.746 A:middle
and sometimes the user in user
interface isn't a person, and,

00:06:04.746 --> 00:06:06.696 A:middle
instead, it's another
service connection

00:06:06.746 --> 00:06:08.776 A:middle
that is routing a
service protocol.

00:06:09.586 --> 00:06:12.996 A:middle
These are all clearly something
that are very, very specialized.

00:06:13.826 --> 00:06:16.326 A:middle
Now deploying your
applications to the server in

00:06:16.326 --> 00:06:18.166 A:middle
and of itself is a
specialized task.

00:06:18.616 --> 00:06:21.236 A:middle
This way you can pick
the right service

00:06:21.236 --> 00:06:26.086 A:middle
that fits your requirements,
your budget, your scale, and,

00:06:26.086 --> 00:06:27.676 A:middle
of course, your application.

00:06:28.526 --> 00:06:31.806 A:middle
This shouldn't have to be tied
to a specific track in Swift.

00:06:31.916 --> 00:06:34.506 A:middle
Running on the server, you
can have multiple applications

00:06:34.506 --> 00:06:36.406 A:middle
running with multiple
versions of Swift.

00:06:37.826 --> 00:06:41.126 A:middle
It's amazing to see the
enthusiasm to create an open

00:06:41.126 --> 00:06:44.266 A:middle
and sharing community,
and these are just a few

00:06:44.266 --> 00:06:46.296 A:middle
of the great things,
great opportunities

00:06:46.296 --> 00:06:47.926 A:middle
to enrich the Swift ecosystem.

00:06:48.406 --> 00:06:52.926 A:middle
There have already been some
great efforts put forth in all

00:06:52.926 --> 00:06:56.286 A:middle
of these areas and more,
and our fellow contributors

00:06:56.286 --> 00:06:59.856 A:middle
over at IBM have been making
some really pretty neat things.

00:07:00.406 --> 00:07:02.856 A:middle
We've gone over some
abstract overviews.

00:07:02.856 --> 00:07:04.586 A:middle
So let's dive a little
bit deeper.

00:07:04.866 --> 00:07:07.246 A:middle
So here to present some
real-world examples

00:07:07.516 --> 00:07:10.086 A:middle
of how they're, they are
getting involved in Swift

00:07:10.086 --> 00:07:12.566 A:middle
at IBM is John Ponzo
and Patrick Bohrer.

00:07:13.516 --> 00:07:20.336 A:middle
[ Applause ]

00:07:20.836 --> 00:07:21.476 A:middle
&gt;&gt; Thank you, Philippe.

00:07:22.086 --> 00:07:23.626 A:middle
Hi. My name is John Ponzo.

00:07:23.626 --> 00:07:26.226 A:middle
I'm the Technical Leader for
Mobile Cloud Development at IBM,

00:07:26.226 --> 00:07:29.726 A:middle
and I'm thrilled to
be part of WWDC today.

00:07:30.026 --> 00:07:34.936 A:middle
We at IBM are very excited about
Swift community and being part

00:07:34.936 --> 00:07:36.896 A:middle
of the open source, and
we see great potential

00:07:36.896 --> 00:07:37.646 A:middle
for the language.

00:07:38.936 --> 00:07:41.956 A:middle
For those unfamiliar, let me
tell you a little bit about IBM

00:07:41.956 --> 00:07:43.656 A:middle
and our involvement with Swift.

00:07:44.426 --> 00:07:47.046 A:middle
Apple and IBM announced
our partnership focusing

00:07:47.046 --> 00:07:50.436 A:middle
on enterprise apps
and solutions in 2014.

00:07:51.096 --> 00:07:54.486 A:middle
And, subsequently, IBM became
one of the first, early adopters

00:07:54.486 --> 00:07:58.676 A:middle
of Swift when it was announced
here at WWDC just two years ago.

00:07:59.546 --> 00:08:01.346 A:middle
Since that time, we've created

00:07:59.546 --> 00:08:01.346 A:middle
Since that time, we've created

00:08:01.346 --> 00:08:03.906 A:middle
over 100 enterprise
applications,

00:08:04.736 --> 00:08:08.076 A:middle
building those apps and
solutions entirely in Swift,

00:08:08.596 --> 00:08:12.026 A:middle
and we also have one of
the highest concentrations

00:08:12.026 --> 00:08:15.126 A:middle
of Swift developers at IBM
building these apps today.

00:08:16.296 --> 00:08:18.636 A:middle
Our experience building
these enterprise apps

00:08:18.636 --> 00:08:22.216 A:middle
and solutions consistently
points to the importance

00:08:22.216 --> 00:08:25.066 A:middle
of the backend, enabling
a great experience.

00:08:26.166 --> 00:08:29.036 A:middle
As developers, we know
how important it is

00:08:29.316 --> 00:08:33.556 A:middle
to have a backend, to enable
a great mobile experience.

00:08:34.966 --> 00:08:37.446 A:middle
We also know it's
important for us to quickly

00:08:37.446 --> 00:08:40.666 A:middle
and safely deploy the right
code to the right place,

00:08:41.256 --> 00:08:42.596 A:middle
and that's why we're so excited

00:08:42.596 --> 00:08:46.546 A:middle
to help bring Swift
to the server.

00:08:46.956 --> 00:08:48.696 A:middle
We appreciate the
wealth of activity

00:08:48.696 --> 00:08:52.586 A:middle
around Swift.org community,
ranging from the mailing list

00:08:52.786 --> 00:08:55.596 A:middle
to code contributions and
new open source projects

00:08:55.596 --> 00:08:56.246 A:middle
that are forming.

00:08:56.986 --> 00:08:59.756 A:middle
I'd like to highlight some of
the things that we're doing

00:08:59.756 --> 00:09:02.726 A:middle
at IBM to help the open
source community bring Swift

00:08:59.756 --> 00:09:02.726 A:middle
at IBM to help the open
source community bring Swift

00:09:02.726 --> 00:09:03.326 A:middle
to the server.

00:09:04.726 --> 00:09:07.156 A:middle
First, I'll tell you about
community enablements

00:09:07.256 --> 00:09:09.466 A:middle
and tell you about
our Swift Sandbox

00:09:09.606 --> 00:09:12.666 A:middle
and Swift package catalog
services that we created

00:09:12.666 --> 00:09:16.316 A:middle
to help developers to
easily learn, discover,

00:09:16.506 --> 00:09:18.266 A:middle
and share Swift assets.

00:09:19.856 --> 00:09:23.716 A:middle
Next, we are motivated by
consistent developer experience

00:09:24.106 --> 00:09:26.896 A:middle
that links the client and
server, and towards that end,

00:09:27.166 --> 00:09:30.046 A:middle
we created the Kitura web
framework that's helping

00:09:30.046 --> 00:09:32.776 A:middle
to motivate and prioritize
our contributions

00:09:33.036 --> 00:09:36.556 A:middle
into the core libraries of
libdispatch and foundation.

00:09:38.176 --> 00:09:41.296 A:middle
And next, Cloud enablement
is an important part

00:09:41.296 --> 00:09:44.446 A:middle
of the development
process, and we are driven

00:09:44.506 --> 00:09:48.316 A:middle
to make it even easier and fun
to deploy Swift to the Cloud.

00:09:48.786 --> 00:09:51.836 A:middle
Through early support in the
IBM Cloud for Swift runtime

00:09:51.836 --> 00:09:56.736 A:middle
and the introduction of
Xcode companion applications

00:09:56.976 --> 00:10:00.566 A:middle
to help deploy that
code to the Cloud.

00:09:56.976 --> 00:10:00.566 A:middle
to help deploy that
code to the Cloud.

00:10:01.916 --> 00:10:03.896 A:middle
When Swift.org was
released in December,

00:10:04.296 --> 00:10:06.716 A:middle
one of the first things
that we wanted to do was

00:10:06.716 --> 00:10:08.636 A:middle
to help grow the
developer ecosystem.

00:10:09.476 --> 00:10:11.566 A:middle
We saw the value of the
language, and we wanted

00:10:11.566 --> 00:10:14.046 A:middle
to quickly introduce
it to other developers.

00:10:14.586 --> 00:10:18.296 A:middle
We created the Sandbox that
allowed, it allows developers

00:10:18.676 --> 00:10:21.646 A:middle
to easily run and
test code on Linux.

00:10:22.316 --> 00:10:25.346 A:middle
The Sandbox runs in a
browser, and with it,

00:10:25.346 --> 00:10:28.816 A:middle
you can easily start writing
your Swift code, save that code,

00:10:29.016 --> 00:10:30.596 A:middle
and see the execution
on the server.

00:10:31.616 --> 00:10:34.636 A:middle
Since we released the
Sandbox, we've added a number

00:10:34.636 --> 00:10:37.546 A:middle
of enhancements based on
community feedback and requests.

00:10:38.146 --> 00:10:42.916 A:middle
The Sandbox currently supports
a mobile UI, multiple UI themes,

00:10:44.056 --> 00:10:46.336 A:middle
autosaving of code,
and the ability

00:10:46.736 --> 00:10:48.586 A:middle
to select multiple
Swift runtimes.

00:10:49.266 --> 00:10:52.836 A:middle
Also, to help developers to
share questions and solutions

00:10:52.836 --> 00:10:56.796 A:middle
around Swift, we added code
snapshot support that's backed

00:10:56.796 --> 00:10:58.016 A:middle
by a persistent URL.

00:10:58.516 --> 00:11:01.936 A:middle
You could use this to share
code across mailing lists

00:10:58.516 --> 00:11:01.936 A:middle
You could use this to share
code across mailing lists

00:11:02.256 --> 00:11:04.576 A:middle
and developer forums
like stackoverflow.com.

00:11:11.176 --> 00:11:14.816 A:middle
Thank you, and we've seen
over 1.5 million executions

00:11:14.816 --> 00:11:17.286 A:middle
in the Sandbox since we
launched in December,

00:11:17.756 --> 00:11:20.406 A:middle
and this is over
200 percent increase

00:11:20.786 --> 00:11:22.616 A:middle
since just this February.

00:11:24.006 --> 00:11:26.656 A:middle
And the Sandbox is
unlocking access

00:11:26.656 --> 00:11:28.976 A:middle
to Swift from other platforms.

00:11:29.726 --> 00:11:33.496 A:middle
In fact, we're seeing
steady growth and interest

00:11:33.636 --> 00:11:36.126 A:middle
in executions and
sessions coming

00:11:36.126 --> 00:11:37.706 A:middle
from other operating systems.

00:11:38.016 --> 00:11:39.286 A:middle
We're very pleased to see this,

00:11:39.566 --> 00:11:42.176 A:middle
and we'd like to see
Swift grow even more.

00:11:43.736 --> 00:11:46.196 A:middle
We're also seeing usage
from around the globe.

00:11:46.786 --> 00:11:50.456 A:middle
Developers using the Sandbox
to learn Swift and collaborate.

00:11:51.466 --> 00:11:54.336 A:middle
Our intent is to continue
to support the Sandbox

00:11:54.336 --> 00:11:56.566 A:middle
to help grow the community.

00:11:59.016 --> 00:12:03.206 A:middle
A vibrant package ecosystem
is critical to any language.

00:11:59.016 --> 00:12:03.206 A:middle
A vibrant package ecosystem
is critical to any language.

00:12:04.236 --> 00:12:07.706 A:middle
While the Swift Package Manager
specification is an early

00:12:07.706 --> 00:12:10.066 A:middle
technology, everything
that we're doing

00:12:10.066 --> 00:12:13.256 A:middle
on the server is based on
the creation and composition

00:12:13.256 --> 00:12:14.526 A:middle
of Swift-based packages.

00:12:15.516 --> 00:12:18.276 A:middle
Because of this, we found
the need to both discover

00:12:18.736 --> 00:12:20.586 A:middle
and to publish our own packages.

00:12:21.066 --> 00:12:23.806 A:middle
So we created the Swift package
catalog to help with this goal.

00:12:24.556 --> 00:12:26.826 A:middle
We continue to update
the package catalog

00:12:27.106 --> 00:12:30.346 A:middle
as the Swift Package Manager
specification evolves.

00:12:31.286 --> 00:12:36.156 A:middle
And today we have over 1,500
Swift Package Manager compliant

00:12:36.156 --> 00:12:37.936 A:middle
packages on the catalog,

00:12:38.636 --> 00:12:41.366 A:middle
and this is up 400
percent since February.

00:12:43.896 --> 00:12:46.866 A:middle
Next, when we start
thinking about servers,

00:12:47.386 --> 00:12:48.876 A:middle
a foundational requirement

00:12:48.916 --> 00:12:51.256 A:middle
for any server language
is the ability

00:12:51.256 --> 00:12:52.976 A:middle
to stand up web interfaces.

00:12:53.966 --> 00:12:56.406 A:middle
While web frameworks are
responsible for listening

00:12:56.406 --> 00:13:00.086 A:middle
on ports and routing code
to the appropriate logic,

00:12:56.406 --> 00:13:00.086 A:middle
on ports and routing code
to the appropriate logic,

00:13:01.036 --> 00:13:03.576 A:middle
we thought it was very
important for that logic to be

00:13:03.576 --> 00:13:05.176 A:middle
as consistent as possible

00:13:05.176 --> 00:13:06.846 A:middle
with the client-side
programming model.

00:13:07.676 --> 00:13:09.866 A:middle
And towards that end, we
created the Kitura framework.

00:13:10.956 --> 00:13:13.146 A:middle
We open source Kitura
in February.

00:13:13.826 --> 00:13:16.496 A:middle
It's a modular package
based web framework.

00:13:17.786 --> 00:13:21.296 A:middle
It leverages libdispatch and
Foundation for concurrency

00:13:21.526 --> 00:13:23.026 A:middle
and utility library support.

00:13:25.256 --> 00:13:28.686 A:middle
It's also driving IBM's
contributions to Swift.org.

00:13:30.126 --> 00:13:33.626 A:middle
We're using Kitura to build
our service-side applications,

00:13:34.916 --> 00:13:36.836 A:middle
and we're working with the
community and have a number

00:13:36.836 --> 00:13:40.306 A:middle
of committers outside of IBM
working on Kitura actively.

00:13:41.036 --> 00:13:42.946 A:middle
It's an important part
of what we're doing

00:13:42.946 --> 00:13:44.646 A:middle
to server enable Swift.

00:13:45.506 --> 00:13:51.066 A:middle
We're also optimizing our Cloud
for Swift-based workloads.

00:13:51.756 --> 00:13:54.556 A:middle
And I'm pleased to
announce our latest updates

00:13:54.666 --> 00:13:57.616 A:middle
to our Cloud foundry-based
build packs for Bluemix

00:13:58.166 --> 00:13:59.776 A:middle
that includes everything
that you need

00:14:00.146 --> 00:14:03.286 A:middle
to rapidly deploy your
Kitura-based applications

00:14:03.386 --> 00:14:04.356 A:middle
to the IBM Cloud.

00:14:05.396 --> 00:14:08.326 A:middle
These build packs include the
very latest Swift runtimes,

00:14:08.696 --> 00:14:11.956 A:middle
core libraries, and
dependent C libraries.

00:14:12.186 --> 00:14:14.376 A:middle
They're needed to deploy
Kitura to the Cloud.

00:14:16.476 --> 00:14:20.566 A:middle
But in addition, development
is, is key, and we're pleased

00:14:20.566 --> 00:14:23.076 A:middle
to announce IBM Cloud
tools for Swift,

00:14:23.316 --> 00:14:25.906 A:middle
a Mac companion application
to allow you

00:14:25.906 --> 00:14:28.606 A:middle
to easily build end-to-end
applications in Swift.

00:14:29.796 --> 00:14:31.396 A:middle
The tool helps you to quickly

00:14:31.396 --> 00:14:35.056 A:middle
and easily connect
your client-side apps

00:14:35.136 --> 00:14:37.756 A:middle
with service-side Swift
that runs in the IBM Cloud.

00:14:38.636 --> 00:14:41.606 A:middle
Just continue developing
your projects, your client

00:14:41.796 --> 00:14:45.756 A:middle
and service-side projects
in Xcode, and use this tool

00:14:45.816 --> 00:14:49.636 A:middle
to link those projects and
deploy your code to the server.

00:14:50.746 --> 00:14:53.496 A:middle
Now with that introduction, I'd
like to welcome my colleague,

00:14:53.496 --> 00:14:54.896 A:middle
Patrick Bohrer, up to the stage

00:14:54.896 --> 00:14:57.706 A:middle
who will show you
service-side Swift in action.

00:14:58.516 --> 00:15:05.126 A:middle
[ Applause ]

00:14:58.516 --> 00:15:05.126 A:middle
[ Applause ]

00:15:05.626 --> 00:15:06.116 A:middle
&gt;&gt; Thanks, John.

00:15:06.386 --> 00:15:07.146 A:middle
I'm Pat Bohrer.

00:15:07.486 --> 00:15:09.026 A:middle
I'm the Technical Lead for a lot

00:15:09.026 --> 00:15:10.886 A:middle
of the fun stuff we're
doing at IBM around Swift.

00:15:11.346 --> 00:15:14.566 A:middle
So we're thrilled to be
here at WWDC, and I'm going

00:15:14.566 --> 00:15:16.356 A:middle
to be leading what
I call the fun

00:15:16.356 --> 00:15:17.686 A:middle
and exciting part
of the session.

00:15:18.366 --> 00:15:20.926 A:middle
It's fun because I'm going to be
doing some live coding of Swift

00:15:20.926 --> 00:15:23.506 A:middle
on the server, and it's
exciting because both

00:15:23.506 --> 00:15:25.876 A:middle
of my demos are dependent on a
working network to the Cloud.

00:15:25.876 --> 00:15:27.756 A:middle
So wish me luck.

00:15:30.846 --> 00:15:34.366 A:middle
So as we talk about server-side
Swift, it can mean a lot

00:15:34.366 --> 00:15:36.666 A:middle
of things to a lot of
people, but for this audience

00:15:36.666 --> 00:15:37.466 A:middle
and for this session,

00:15:37.466 --> 00:15:39.506 A:middle
we're really talking
about web services.

00:15:41.246 --> 00:15:42.806 A:middle
So what are web services?

00:15:43.276 --> 00:15:45.516 A:middle
In a very simple
level, they're programs

00:15:45.516 --> 00:15:46.906 A:middle
that are off running
in a machine.

00:15:47.916 --> 00:15:48.456 A:middle
They're listening.

00:15:48.996 --> 00:15:50.526 A:middle
They're listening for
incoming requests.

00:15:51.356 --> 00:15:53.056 A:middle
They're responsible for
routing those requests

00:15:53.056 --> 00:15:56.236 A:middle
to some server-side logic,
and return and response.

00:15:56.916 --> 00:15:59.326 A:middle
And now as far as what's out
there, it could be a browser,

00:15:59.326 --> 00:16:00.596 A:middle
it could be another application.

00:15:59.326 --> 00:16:00.596 A:middle
it could be another application.

00:16:01.126 --> 00:16:01.836 A:middle
Who knows?

00:16:01.836 --> 00:16:02.856 A:middle
It could be another service,

00:16:03.266 --> 00:16:05.126 A:middle
but as simple level,
that's what it is.

00:16:05.586 --> 00:16:07.846 A:middle
So to get started, that
sounds simple enough.

00:16:08.756 --> 00:16:14.366 A:middle
Let's go ahead and jump in,
and do a live demo of that.

00:16:15.076 --> 00:16:16.266 A:middle
OK. So as I mentioned,

00:16:17.126 --> 00:16:19.496 A:middle
oftentimes these web
services are running on Linux,

00:16:19.496 --> 00:16:21.926 A:middle
and we've heard about
Swift running on Linux.

00:16:22.236 --> 00:16:23.426 A:middle
So let's go ahead
and do our work

00:16:23.426 --> 00:16:25.346 A:middle
for this first demo
on Linus itself.

00:16:25.486 --> 00:16:27.596 A:middle
Let's go ahead and do that.

00:16:28.546 --> 00:16:29.966 A:middle
So here we have Linux
and running.

00:16:29.966 --> 00:16:31.516 A:middle
Make sure I'm not lying.

00:16:32.466 --> 00:16:34.526 A:middle
So let's go ahead and
create a directory

00:16:34.526 --> 00:16:35.886 A:middle
to do some, to play around.

00:16:35.886 --> 00:16:38.256 A:middle
So we'll very creatively
create a play directory.

00:16:39.456 --> 00:16:40.556 A:middle
You can see we have
nothing in here.

00:16:41.566 --> 00:16:43.446 A:middle
And now we'll use the
Swift Package Manager.

00:16:43.446 --> 00:16:46.206 A:middle
So every, as John mentioned,
everything we're doing

00:16:47.026 --> 00:16:49.146 A:middle
on server-side is
based on packages.

00:16:49.516 --> 00:16:51.296 A:middle
And so we're going to
use, this is a version

00:16:51.296 --> 00:16:54.526 A:middle
of the Swift Package Manager
that, for those watching later,

00:16:54.526 --> 00:16:58.136 A:middle
this syntax changes, but for the
version that we're using today,

00:16:58.186 --> 00:17:00.456 A:middle
it has an initialization step.

00:16:58.186 --> 00:17:00.456 A:middle
it has an initialization step.

00:17:01.226 --> 00:17:02.706 A:middle
And so if we issue this command,

00:17:03.116 --> 00:17:04.826 A:middle
we can see that it's
created a few files.

00:17:05.726 --> 00:17:10.195 A:middle
So based on the structure
and the Package.Swift file,

00:17:11.046 --> 00:17:13.606 A:middle
the Swift Package Manager knows
how to build your application.

00:17:13.945 --> 00:17:17.976 A:middle
And so as you can see here,
we have a Package.Swift,

00:17:18.506 --> 00:17:21.935 A:middle
and it's created a Sources.main,
and that's all we really need

00:17:21.935 --> 00:17:24.146 A:middle
to build a Swift, a
simple Swift package.

00:17:24.806 --> 00:17:26.906 A:middle
So with that said, let's
go ahead and build this.

00:17:27.226 --> 00:17:30.586 A:middle
So we can issue Swift build,
and that was easy enough.

00:17:30.966 --> 00:17:35.386 A:middle
And so it's created a
.build/debug play executable.

00:17:35.386 --> 00:17:38.056 A:middle
So let's run that.

00:17:38.056 --> 00:17:39.396 A:middle
Ah. Hello world.

00:17:44.976 --> 00:17:46.196 A:middle
But we're building web services.

00:17:46.196 --> 00:17:49.776 A:middle
So let's get real.

00:17:49.976 --> 00:17:53.496 A:middle
OK. So here, this is what
our Swift Package Manager has

00:17:53.496 --> 00:17:54.186 A:middle
created for us.

00:17:54.186 --> 00:17:56.956 A:middle
So, again, it's best that
we have a package based

00:17:56.956 --> 00:17:59.296 A:middle
on our directory called Plays.

00:17:59.296 --> 00:18:00.816 A:middle
It's named our executed play,

00:17:59.296 --> 00:18:00.816 A:middle
It's named our executed play,

00:18:00.816 --> 00:18:02.036 A:middle
and so that's why
that got named.

00:18:02.526 --> 00:18:05.536 A:middle
And we want to add one piece
here, and that's a dependency

00:18:05.976 --> 00:18:08.616 A:middle
on Kitura, and that's
all we need to specify.

00:18:10.826 --> 00:18:15.276 A:middle
So now we will go
to our main file.

00:18:15.876 --> 00:18:17.346 A:middle
Let's delete our
old hello world,

00:18:17.386 --> 00:18:20.226 A:middle
and let's add a bit
of code here.

00:18:20.956 --> 00:18:23.926 A:middle
So what this code does
is, again, old faithful.

00:18:23.926 --> 00:18:25.026 A:middle
We're pulling in Foundation.

00:18:25.796 --> 00:18:28.216 A:middle
We're also importing
Kitura and a couple

00:18:28.216 --> 00:18:30.116 A:middle
of Kitura support packages.

00:18:31.406 --> 00:18:33.716 A:middle
Here, we're specifying a
router, as I mentioned,

00:18:33.716 --> 00:18:34.686 A:middle
for incoming requests.

00:18:34.686 --> 00:18:36.106 A:middle
We have to route these
requests somewhere.

00:18:36.736 --> 00:18:38.126 A:middle
And we're going to
specify one route,

00:18:38.126 --> 00:18:40.706 A:middle
right here, that is /hello.

00:18:41.486 --> 00:18:45.726 A:middle
So if any, if any requests
come in, we'll run this code.

00:18:46.046 --> 00:18:46.796 A:middle
Simple enough.

00:18:47.516 --> 00:18:49.436 A:middle
We'll specify some
response headers,

00:18:50.126 --> 00:18:53.086 A:middle
and we'll send back a
string saying hello world.

00:18:53.836 --> 00:18:56.286 A:middle
Now down here we specify
what port we'll listen to,

00:18:56.286 --> 00:19:00.526 A:middle
and it's the 8095, and we
start listening on this port,

00:18:56.286 --> 00:19:00.526 A:middle
and it's the 8095, and we
start listening on this port,

00:19:00.526 --> 00:19:02.086 A:middle
and we specify our
router as a delegate,

00:19:02.086 --> 00:19:03.166 A:middle
and then we start the server.

00:19:03.996 --> 00:19:04.726 A:middle
So it's pretty simple.

00:19:06.086 --> 00:19:10.186 A:middle
Let's go ahead and save that.

00:19:10.746 --> 00:19:15.256 A:middle
Now we're going to build
Kitura for the first time,

00:19:15.786 --> 00:19:17.246 A:middle
and so we've added
some pieces here.

00:19:17.246 --> 00:19:18.026 A:middle
As John mentioned,

00:19:18.026 --> 00:19:20.706 A:middle
we're leveraging
libdispatch and Foundation.

00:19:21.106 --> 00:19:22.656 A:middle
And so what it's doing
is it's pulling down,

00:19:22.656 --> 00:19:25.116 A:middle
the Swift Package Manager's
pulling down everything we need.

00:19:25.366 --> 00:19:26.946 A:middle
So we wrote the code
we care about,

00:19:27.386 --> 00:19:29.626 A:middle
and the Swift Package Manager
is pulling down Kitura,

00:19:29.986 --> 00:19:32.016 A:middle
it's pulling down our
networking, it's pulling

00:19:32.016 --> 00:19:35.046 A:middle
down some system support,
a logger, all the things

00:19:35.046 --> 00:19:39.426 A:middle
that you'd need in a, in a web
service, as well as the ability

00:19:39.426 --> 00:19:41.566 A:middle
to listen on sockets
and everything else.

00:19:41.566 --> 00:19:43.966 A:middle
And so each of these are
discrete packages that are

00:19:43.966 --> 00:19:46.256 A:middle
out on GitHub that
you can pull in.

00:19:47.896 --> 00:19:51.326 A:middle
And it's compiled and built.

00:19:51.986 --> 00:19:56.786 A:middle
So now let's go ahead and
run this executable again.

00:19:57.016 --> 00:19:58.256 A:middle
So we can see that it's now,

00:19:58.786 --> 00:20:01.976 A:middle
it just says it's
listing on port 8095.

00:19:58.786 --> 00:20:01.976 A:middle
it just says it's
listing on port 8095.

00:20:02.206 --> 00:20:07.306 A:middle
So let's go ahead and
take a look at that.

00:20:08.056 --> 00:20:11.126 A:middle
We'll bring up local host 8095
because it's running locally

00:20:11.326 --> 00:20:12.916 A:middle
on our, on our Mac and Linux,

00:20:13.176 --> 00:20:14.836 A:middle
and you can see we
see a Kitura page.

00:20:14.836 --> 00:20:17.216 A:middle
So this basically, if we haven't
defined the default route,

00:20:17.726 --> 00:20:18.916 A:middle
it'll bring up this page

00:20:19.176 --> 00:20:21.236 A:middle
and specify other
ways to get started.

00:20:21.236 --> 00:20:22.546 A:middle
You can always override this,

00:20:22.946 --> 00:20:25.656 A:middle
but for us all we've
specified is hello.

00:20:28.516 --> 00:20:33.526 A:middle
[ Applause ]

00:20:34.026 --> 00:20:36.386 A:middle
And so, of course, the
first thing you have

00:20:36.386 --> 00:20:37.646 A:middle
to do is say hello world, right.

00:20:37.646 --> 00:20:40.626 A:middle
So the first step, but,
really, when you, when you think

00:20:40.626 --> 00:20:42.806 A:middle
about it, let's go back,
we'll do a bit more here.

00:20:43.386 --> 00:20:46.926 A:middle
Let's go back and
edit our main file.

00:20:47.386 --> 00:20:49.646 A:middle
We have a lot of
that we can use here.

00:20:49.916 --> 00:20:50.996 A:middle
So we have Foundation,

00:20:52.196 --> 00:20:54.176 A:middle
and we also have the
ability to generate JSON.

00:20:54.176 --> 00:21:00.116 A:middle
So add a little helper code here
to help us create a JSON string.

00:20:54.176 --> 00:21:00.116 A:middle
So add a little helper code here
to help us create a JSON string.

00:21:00.546 --> 00:21:03.566 A:middle
We'll also add a new
route called today.

00:21:05.366 --> 00:21:09.186 A:middle
So now, again, here's a new
route that if anything comes in,

00:21:09.186 --> 00:21:12.666 A:middle
saying /today, it'll do,
it'll leverage Foundation

00:21:13.006 --> 00:21:14.106 A:middle
to go get the current date.

00:21:14.106 --> 00:21:16.876 A:middle
We'll go ahead and create
an NSDateFormatter just

00:21:16.876 --> 00:21:17.986 A:middle
like we would on the client.

00:21:18.516 --> 00:21:20.836 A:middle
We'll use that DateFormatter
to create a date string,

00:21:20.966 --> 00:21:25.196 A:middle
a time string, and now we'll get
into the meat of our response,

00:21:25.196 --> 00:21:27.816 A:middle
and so here we'll create a
payload which, is a dictionary,

00:21:28.276 --> 00:21:31.536 A:middle
and now because in the Internet,
you know, it's all JSON.

00:21:31.986 --> 00:21:34.976 A:middle
So we specify message is hello
world, our date is our date,

00:21:34.976 --> 00:21:37.086 A:middle
our time is our time,
and, again,

00:21:37.086 --> 00:21:38.256 A:middle
we convert that into a string,

00:21:38.256 --> 00:21:40.106 A:middle
and that's what we
send back this time.

00:21:40.206 --> 00:21:41.736 A:middle
So let's take, see
what that works.

00:21:42.586 --> 00:21:45.826 A:middle
Let's go ahead and rebuild.

00:21:46.756 --> 00:21:47.436 A:middle
Much faster.

00:21:47.496 --> 00:21:48.446 A:middle
All the packages are here.

00:21:48.446 --> 00:21:49.486 A:middle
So that's good.

00:21:50.946 --> 00:21:52.086 A:middle
So, again, we'll run this again.

00:21:52.086 --> 00:21:55.126 A:middle
You can see we're
listing on 8095.

00:21:56.026 --> 00:22:00.176 A:middle
We'll reload and see we're still
responding hello world on hello,

00:21:56.026 --> 00:22:00.176 A:middle
We'll reload and see we're still
responding hello world on hello,

00:22:00.176 --> 00:22:01.826 A:middle
and now let's look at today.

00:22:02.676 --> 00:22:04.606 A:middle
And there we go.

00:22:04.646 --> 00:22:05.776 A:middle
We have our JSON payload.

00:22:11.476 --> 00:22:13.686 A:middle
And now, again, every time
someone comes in here, it's,

00:22:13.686 --> 00:22:15.976 A:middle
it's executing that code,
and it's return and response.

00:22:16.126 --> 00:22:18.856 A:middle
So that's at a very simple
level how to get started.

00:22:26.556 --> 00:22:28.406 A:middle
OK. My wife said to take
off the glasses [inaudible].

00:22:28.566 --> 00:22:32.996 A:middle
So that was pretty fun, but now
let's make this a little bit

00:22:32.996 --> 00:22:33.646 A:middle
more interesting.

00:22:34.826 --> 00:22:36.916 A:middle
So as we go through, first
I'd like to introduce you

00:22:36.916 --> 00:22:39.146 A:middle
to a really interesting sample
that we've made available

00:22:39.146 --> 00:22:40.916 A:middle
to this community, and
it's called BluePic.

00:22:42.306 --> 00:22:45.426 A:middle
So BluePic is a sample
photosharing application

00:22:45.426 --> 00:22:45.996 A:middle
that's social.

00:22:46.876 --> 00:22:51.346 A:middle
It has a rich client interface,
a very beautiful interface

00:22:51.346 --> 00:22:54.406 A:middle
that we've built and provided
as part of this overall sample.

00:22:55.176 --> 00:22:59.106 A:middle
It also has a really
interesting backend.

00:22:59.106 --> 00:23:03.906 A:middle
That is, a Swift server backend,
pure Swift using Kitura,

00:22:59.106 --> 00:23:03.906 A:middle
That is, a Swift server backend,
pure Swift using Kitura,

00:23:03.906 --> 00:23:07.336 A:middle
running the IBM Cloud, and it's
also leveraging some interesting

00:23:07.676 --> 00:23:10.856 A:middle
services that I'll mentioned
like Watson or ObjectStore,

00:23:10.856 --> 00:23:12.636 A:middle
[inaudible] SQL databases,
all that good stuff.

00:23:13.476 --> 00:23:15.686 A:middle
And if you're, if you're
ready to dive deeper,

00:23:17.976 --> 00:23:22.296 A:middle
it even has some use of
IBM's brand-new event driven

00:23:22.296 --> 00:23:23.916 A:middle
programming model
called OpenWhisk

00:23:23.956 --> 00:23:25.406 A:middle
that also supports Swift.

00:23:25.816 --> 00:23:28.696 A:middle
So, again, this package
has a lot going on,

00:23:29.026 --> 00:23:31.046 A:middle
and it's available now
on GitHub for those

00:23:31.046 --> 00:23:31.766 A:middle
who want to get started.

00:23:33.686 --> 00:23:36.006 A:middle
So before we dive
into demo mode here,

00:23:36.006 --> 00:23:37.236 A:middle
I want to spend a little
bit of time talking

00:23:37.236 --> 00:23:38.316 A:middle
about the design pattern here.

00:23:39.566 --> 00:23:42.966 A:middle
So unlike before where we had a
web browser as the client-side,

00:23:43.776 --> 00:23:45.726 A:middle
we, of course, have
an iOS application.

00:23:46.076 --> 00:23:47.636 A:middle
It has our model
view controllers,

00:23:47.886 --> 00:23:49.736 A:middle
and you can see it also
has a networking interface

00:23:49.736 --> 00:23:50.996 A:middle
with requests and responses.

00:23:51.376 --> 00:23:53.716 A:middle
And it's talking to
our Swift middle tier,

00:23:53.926 --> 00:23:55.226 A:middle
which is similar to
what we just did.

00:23:55.226 --> 00:23:57.516 A:middle
It's just a little bit more
interesting, but, again,

00:23:57.516 --> 00:23:59.666 A:middle
accepting an incoming
route request,

00:23:59.716 --> 00:24:01.256 A:middle
routing those to some logic.

00:23:59.716 --> 00:24:01.256 A:middle
routing those to some logic.

00:24:01.256 --> 00:24:04.936 A:middle
And then, finally, we
also have another piece

00:24:04.936 --> 00:24:06.876 A:middle
where we have some interesting
services, which we'll get

00:24:06.876 --> 00:24:10.396 A:middle
into in a bit, for holding all
of this data of our application.

00:24:11.746 --> 00:24:14.166 A:middle
So, again, just to dig
a little bit deeper.

00:24:14.636 --> 00:24:15.866 A:middle
So we have the client-side.

00:24:16.556 --> 00:24:17.276 A:middle
It's responsible.

00:24:17.276 --> 00:24:20.786 A:middle
It's very user specific view
driven for rendering some nice,

00:24:20.786 --> 00:24:23.806 A:middle
you know, interactions
with the, with the user

00:24:23.806 --> 00:24:26.126 A:middle
of the application, and
then we have the midtier.

00:24:26.486 --> 00:24:28.506 A:middle
The midtier is responding
to all of the clients

00:24:28.506 --> 00:24:29.416 A:middle
with the things they have,

00:24:29.806 --> 00:24:31.686 A:middle
but it's also doing some
really interesting things.

00:24:31.906 --> 00:24:36.106 A:middle
So as photos get submitted
into the midtier, it can,

00:24:36.106 --> 00:24:37.396 A:middle
it'll accept those photos.

00:24:37.396 --> 00:24:39.216 A:middle
It'll save them into
ObjectStore.

00:24:39.296 --> 00:24:41.056 A:middle
It'll create some
metadata around them,

00:24:41.056 --> 00:24:43.506 A:middle
but it'll do a few other things
that are pretty interesting.

00:24:43.506 --> 00:24:46.556 A:middle
So it will take those
photos, and submit it

00:24:46.556 --> 00:24:48.686 A:middle
over to Watson's Vision Insights

00:24:49.116 --> 00:24:51.216 A:middle
and extract just tags
about the photos.

00:24:51.346 --> 00:24:53.836 A:middle
Is it mountains and lakes and
all that good stuff, right.

00:24:53.836 --> 00:24:55.366 A:middle
So it's kind of adding
the special sauce

00:24:55.366 --> 00:24:57.216 A:middle
to our application
from the midtier.

00:24:57.606 --> 00:24:59.746 A:middle
It will also notice
where the photo is taken

00:25:00.426 --> 00:25:02.616 A:middle
and call Watson's
Weather Insights,

00:25:02.746 --> 00:25:03.786 A:middle
and pull down information.

00:25:03.786 --> 00:25:05.356 A:middle
What was the weather
like at that location?

00:25:05.486 --> 00:25:06.576 A:middle
So we're adding all of that.

00:25:06.576 --> 00:25:08.556 A:middle
So, again, instead of
making all these round trips

00:25:08.556 --> 00:25:11.036 A:middle
from the client-side, we're
making it from the server-side,

00:25:11.036 --> 00:25:13.416 A:middle
which is always on, always
available to go ahead

00:25:13.416 --> 00:25:14.936 A:middle
and do our service
composition there.

00:25:15.626 --> 00:25:19.056 A:middle
And the fact that this is
end-to-end Swift lets us deploy

00:25:19.056 --> 00:25:22.646 A:middle
the right code to
the right place.

00:25:23.076 --> 00:25:25.436 A:middle
So now here is BluePic
off running in the wild.

00:25:26.266 --> 00:25:27.516 A:middle
It's running on a device.

00:25:27.516 --> 00:25:29.436 A:middle
It's connecting into
the, you know, the Cloud.

00:25:29.916 --> 00:25:31.956 A:middle
The application server,
which is then talking

00:25:31.956 --> 00:25:34.766 A:middle
to all the different services
I mentioned, and that's great.

00:25:35.436 --> 00:25:37.476 A:middle
Now if something comes
up, and we have to debug

00:25:37.476 --> 00:25:40.046 A:middle
or develop this application
further, what do we do?

00:25:40.726 --> 00:25:43.376 A:middle
Right. Well, as iOS developers,
we know exactly what to do.

00:25:43.976 --> 00:25:46.296 A:middle
We pull down the source for
that application onto our Mac,

00:25:46.846 --> 00:25:49.836 A:middle
we load it all up into Xcode,
and we're good to go, right.

00:25:49.836 --> 00:25:50.966 A:middle
We can debug this.

00:25:51.606 --> 00:25:52.876 A:middle
We can debug the application.

00:25:52.876 --> 00:25:54.616 A:middle
You can even be calling
out into the Cloud

00:25:54.616 --> 00:25:55.806 A:middle
and making other requests.

00:25:56.126 --> 00:25:57.856 A:middle
So this is something we
know how to do today,

00:25:58.366 --> 00:26:00.526 A:middle
but now that this midtier
is also running Swift,

00:25:58.366 --> 00:26:00.526 A:middle
but now that this midtier
is also running Swift,

00:26:00.816 --> 00:26:01.336 A:middle
what do we do?

00:26:02.136 --> 00:26:03.016 A:middle
Right. You probably don't want

00:26:03.016 --> 00:26:05.546 A:middle
to be using VI like
I was on Linux.

00:26:06.146 --> 00:26:09.176 A:middle
But, again, we can
do the same thing.

00:26:09.446 --> 00:26:13.076 A:middle
We can pull down the source code
for our server-side code, again,

00:26:13.076 --> 00:26:15.586 A:middle
onto our Mac, load
it up in Xcode,

00:26:16.056 --> 00:26:18.246 A:middle
and now we can also just
do normal development

00:26:18.246 --> 00:26:19.556 A:middle
and debug locally on our Mac.

00:26:19.606 --> 00:26:20.926 A:middle
So we're debugging
and developing.

00:26:20.926 --> 00:26:24.266 A:middle
It's exciting.

00:26:27.256 --> 00:26:30.376 A:middle
So now our development world
got a whole lot bigger, right.

00:26:30.486 --> 00:26:32.806 A:middle
So we actually control
everything from end to end,

00:26:32.806 --> 00:26:34.456 A:middle
from the client to the midtier,

00:26:34.456 --> 00:26:36.156 A:middle
even to the services
that we touch.

00:26:36.536 --> 00:26:38.726 A:middle
So we, we really are
excited about this

00:26:38.756 --> 00:26:41.596 A:middle
because we think it brings
down that development cycle of,

00:26:41.716 --> 00:26:43.576 A:middle
you know, as you're doing things
on the client, and you want

00:26:43.576 --> 00:26:45.396 A:middle
to add some capabilities
on the backend,

00:26:45.736 --> 00:26:47.296 A:middle
it's all in the world
that you understand.

00:26:49.036 --> 00:26:51.076 A:middle
Towards that end, as
developers ourselves,

00:26:51.276 --> 00:26:52.776 A:middle
we thought we can go
a little bit further.

00:26:53.696 --> 00:26:55.536 A:middle
So just like we've done
with the package catalog

00:26:55.536 --> 00:26:56.386 A:middle
and the Swift Sandbox,

00:26:56.746 --> 00:26:59.716 A:middle
we created this application
called IBM Cloud Tools for Swift

00:27:00.366 --> 00:27:03.466 A:middle
as a Mac application to
help us manage this bigger

00:27:03.466 --> 00:27:04.146 A:middle
development world.

00:27:04.796 --> 00:27:08.416 A:middle
So we're really excited
about it.

00:27:08.466 --> 00:27:11.346 A:middle
This application actually
makes it possible for us

00:27:11.346 --> 00:27:15.836 A:middle
to manage this entire stack
end-to-end, and we, you know,

00:27:15.836 --> 00:27:17.966 A:middle
there's a lot of things
that we could do by hand,

00:27:18.626 --> 00:27:20.546 A:middle
but why not have some tools
to help you with this, right.

00:27:22.126 --> 00:27:24.426 A:middle
So we're excited to hear
your feedback on this just

00:27:24.426 --> 00:27:26.336 A:middle
like we have the
Sandbox and the catalog.

00:27:26.986 --> 00:27:29.126 A:middle
And we'll keep, you know,
we're just getting started

00:27:29.126 --> 00:27:32.196 A:middle
with this application, and,
again, as developers ourselves,

00:27:32.196 --> 00:27:33.716 A:middle
we know what we want it to do.

00:27:34.016 --> 00:27:35.916 A:middle
We'll keep adding things, and
we'll listen to this community

00:27:35.916 --> 00:27:37.606 A:middle
as well, but we're
really excited

00:27:37.606 --> 00:27:38.646 A:middle
about the possibilities here.

00:27:39.416 --> 00:27:41.856 A:middle
So our goal is really to
empower this community

00:27:42.256 --> 00:27:45.186 A:middle
to keep creating great
applications, and now powered

00:27:45.186 --> 00:27:48.126 A:middle
by Swift on the server.

00:27:48.316 --> 00:27:50.976 A:middle
So now with all of that
background, let's actually jump

00:27:50.976 --> 00:27:52.116 A:middle
in and do some demos again.

00:27:52.926 --> 00:27:55.296 A:middle
Going to show you just
how bright this future is

00:27:55.296 --> 00:27:55.806 A:middle
with Swift.

00:28:01.806 --> 00:28:05.886 A:middle
OK. So first off, this is the
IBM Cloud Tools for Swift.

00:28:06.306 --> 00:28:08.906 A:middle
If you want to get
started, it presents you

00:28:08.906 --> 00:28:11.986 A:middle
with an interface that's
a nice rich interface,

00:28:12.146 --> 00:28:14.896 A:middle
and for those wanting to
get started with BluePic,

00:28:15.146 --> 00:28:18.126 A:middle
it even has an ability to
create a BluePic project

00:28:18.936 --> 00:28:22.016 A:middle
to create just a Kitura project
or to create an empty project.

00:28:22.506 --> 00:28:23.556 A:middle
Now the part that's interesting

00:28:23.556 --> 00:28:26.276 A:middle
about this is not only is it
doing a clone of these projects

00:28:26.276 --> 00:28:28.086 A:middle
in bringing them down, it's also

00:28:28.086 --> 00:28:30.836 A:middle
under the covers provisioning
resources in the IBM Cloud

00:28:31.166 --> 00:28:34.406 A:middle
to deploy that project when
you're ready, and it will,

00:28:34.766 --> 00:28:37.266 A:middle
in fact, when you create these,
it will go ahead and deploy it

00:28:37.386 --> 00:28:39.526 A:middle
because it knows it's
a working example.

00:28:40.126 --> 00:28:41.866 A:middle
So, again, to get up
and running quickly,

00:28:42.576 --> 00:28:43.556 A:middle
it's a great way to start.

00:28:45.706 --> 00:28:48.406 A:middle
For us, we've already created
a BluePic application here,

00:28:49.406 --> 00:28:52.476 A:middle
and you can see we
have a demo BluePic.

00:28:53.336 --> 00:28:54.296 A:middle
Very cleverly named.

00:28:54.476 --> 00:28:57.166 A:middle
And here you can see we
have a client application,

00:28:57.346 --> 00:29:00.216 A:middle
a binding between a client
application and a Cloud runtime.

00:28:57.346 --> 00:29:00.216 A:middle
a binding between a client
application and a Cloud runtime.

00:29:00.296 --> 00:29:01.466 A:middle
Both of these are in Swift.

00:29:02.056 --> 00:29:06.336 A:middle
Additionally, if we drill in,
here to the server-side code,

00:29:06.656 --> 00:29:09.076 A:middle
you can see it has a reference
to where the code is locally

00:29:09.076 --> 00:29:12.626 A:middle
on our, on my machine as well
as a binding to where it goes

00:29:12.626 --> 00:29:16.446 A:middle
into the Cloud as well as all of
the services that is provisioned

00:29:16.446 --> 00:29:18.266 A:middle
on behalf of this application.

00:29:18.636 --> 00:29:21.946 A:middle
So, again, I can manage all
of this locally on my Mac.

00:29:23.586 --> 00:29:28.566 A:middle
As well as I can go ahead and
launch with one click into Xcode

00:29:28.696 --> 00:29:29.786 A:middle
to look at my client-side.

00:29:30.976 --> 00:29:33.046 A:middle
So here's the BluePic
client-side application.

00:29:33.876 --> 00:29:40.096 A:middle
It is also created, let me zoom
in here a little bit, this file.

00:29:40.226 --> 00:29:41.726 A:middle
It's a Bluemix.plist.

00:29:42.126 --> 00:29:44.476 A:middle
Knowing this development
cycle, being able to run

00:29:44.686 --> 00:29:46.796 A:middle
against your Cloud
services locally

00:29:46.866 --> 00:29:50.236 A:middle
versus remotely it's very
easy to control this.

00:29:50.416 --> 00:29:55.396 A:middle
It'll either listen locally to
8090 or remotely out in Bluemix

00:29:55.396 --> 00:29:57.206 A:middle
and pass in the,
the credentials.

00:29:58.246 --> 00:30:00.426 A:middle
So, again, the thought here
is to make this really simple.

00:29:58.246 --> 00:30:00.426 A:middle
So, again, the thought here
is to make this really simple.

00:30:01.346 --> 00:30:03.916 A:middle
So here we'll go ahead and
run this, and so let's imagine

00:30:03.916 --> 00:30:10.436 A:middle
that somebody's filed a bug
report about the application.

00:30:10.436 --> 00:30:11.806 A:middle
So here's our application.

00:30:12.126 --> 00:30:14.556 A:middle
Again, it's got a
nice pretty interface.

00:30:15.106 --> 00:30:16.026 A:middle
We can scroll through.

00:30:16.026 --> 00:30:17.436 A:middle
We can see some pictures.

00:30:17.506 --> 00:30:18.896 A:middle
If we click on these pictures,

00:30:19.956 --> 00:30:21.326 A:middle
we can see there's
more information.

00:30:21.326 --> 00:30:22.996 A:middle
So the name is nature
of this one.

00:30:23.146 --> 00:30:24.076 A:middle
We can see who took it.

00:30:24.456 --> 00:30:26.536 A:middle
We can see, supposedly,
this was in Austin, Texas,

00:30:26.536 --> 00:30:27.656 A:middle
which we don't have mountains.

00:30:28.246 --> 00:30:31.316 A:middle
So. We can also see what
the weather was like,

00:30:31.446 --> 00:30:33.586 A:middle
and then thanks to
Watson Insight,

00:30:34.096 --> 00:30:35.706 A:middle
we see that there's
a few tags here.

00:30:35.706 --> 00:30:36.576 A:middle
So this is interesting.

00:30:36.576 --> 00:30:38.726 A:middle
If I click on tags, I
can see, OK, here's the,

00:30:38.726 --> 00:30:40.376 A:middle
we have one photo
that has a lake.

00:30:41.186 --> 00:30:43.086 A:middle
If I go back, let's
click on mountain,

00:30:43.086 --> 00:30:46.126 A:middle
and we can see there's a few
photos that have mountains, and,

00:30:46.126 --> 00:30:48.766 A:middle
again, all of this was done
by integration on the backend.

00:30:48.766 --> 00:30:50.446 A:middle
We didn't have users
having to tag this.

00:30:50.446 --> 00:30:51.786 A:middle
This was just auto extracted.

00:30:51.866 --> 00:30:54.166 A:middle
But we heard that
there's some complaint

00:30:54.166 --> 00:30:55.546 A:middle
about when I click cloudy skies.

00:30:55.546 --> 00:30:56.346 A:middle
So let's look at that.

00:30:57.696 --> 00:30:59.736 A:middle
So we click cloudy sky,
and we don't see anything.

00:31:00.126 --> 00:31:02.736 A:middle
So we know what's going on here,

00:31:02.736 --> 00:31:05.786 A:middle
and somehow the server's not
returning the right results.

00:31:06.486 --> 00:31:07.606 A:middle
So now let's switch.

00:31:08.436 --> 00:31:10.776 A:middle
We want to go ahead and figure
out, get to the bottom of this.

00:31:11.326 --> 00:31:13.196 A:middle
And so we'll go over
here, and we'll click

00:31:13.196 --> 00:31:15.226 A:middle
on our server-side code.

00:31:15.226 --> 00:31:18.656 A:middle
It will launch us and
show us the directory

00:31:18.656 --> 00:31:20.176 A:middle
where the server-side code is.

00:31:21.206 --> 00:31:23.426 A:middle
And if I go ahead and
load that into a terminal,

00:31:24.616 --> 00:31:28.416 A:middle
you can see a lot of the
same files as I mentioned,

00:31:28.416 --> 00:31:30.426 A:middle
we're doing Swift
3.0 on the server.

00:31:30.776 --> 00:31:32.096 A:middle
We have our Package.Swift.

00:31:32.346 --> 00:31:33.316 A:middle
We have our sources.

00:31:33.726 --> 00:31:35.366 A:middle
But, additionally,
I went through

00:31:35.366 --> 00:31:37.926 A:middle
and created an Xcode project
of the server-side code.

00:31:37.926 --> 00:31:40.526 A:middle
So let's go ahead and open that.

00:31:40.826 --> 00:31:45.236 A:middle
So here's the code, and, again,
here's a get handler for images.

00:31:45.366 --> 00:31:48.006 A:middle
So we know that when we
want images, our image feed,

00:31:48.006 --> 00:31:51.156 A:middle
we'll call this get
on/images on our server.

00:31:51.826 --> 00:31:54.376 A:middle
So if we look at this, we want
to go through and say, OK, well,

00:31:54.376 --> 00:31:56.046 A:middle
somehow when we pass in a tag,

00:31:56.376 --> 00:31:57.876 A:middle
we're not returning
the right results.

00:31:58.096 --> 00:32:01.426 A:middle
So let's set a break point
here, and we'll run our server.

00:31:58.096 --> 00:32:01.426 A:middle
So let's set a break point
here, and we'll run our server.

00:32:01.546 --> 00:32:08.256 A:middle
And now we can see our server is
listening locally on port 8090.

00:32:09.206 --> 00:32:11.626 A:middle
Now let's switch back.

00:32:14.796 --> 00:32:19.146 A:middle
So here we're going to have our
client application say local is

00:32:19.146 --> 00:32:21.886 A:middle
yes so that it will actually
connect to our local server,

00:32:22.206 --> 00:32:23.976 A:middle
and let's rerun the simulator.

00:32:25.286 --> 00:32:28.966 A:middle
By the way, I'm getting
far too lucky

00:32:28.966 --> 00:32:30.416 A:middle
with all this network
connectivity.

00:32:30.416 --> 00:32:32.306 A:middle
So keep up whatever
you're doing.

00:32:34.096 --> 00:32:36.796 A:middle
OK. So let's just scroll down
to the file we had a little

00:32:36.796 --> 00:32:37.806 A:middle
problems with.

00:32:37.806 --> 00:32:38.626 A:middle
Let's click on here.

00:32:39.356 --> 00:32:41.136 A:middle
Let's click on cloudy skies.

00:32:41.326 --> 00:32:42.126 A:middle
Ah, great.

00:32:43.246 --> 00:32:44.906 A:middle
Here, we hit a break
point in the server.

00:32:45.516 --> 00:32:49.646 A:middle
[ Applause ]

00:32:50.146 --> 00:32:54.456 A:middle
So if we want to get a feel
for what's happening here,

00:32:54.456 --> 00:32:55.636 A:middle
and say we want to print tag.

00:32:55.636 --> 00:33:01.166 A:middle
And we can see, kind
of hard to see that.

00:32:55.636 --> 00:33:01.166 A:middle
And we can see, kind
of hard to see that.

00:33:01.866 --> 00:33:03.126 A:middle
We can see that the
string is coming

00:33:03.126 --> 00:33:05.386 A:middle
in as cloudy percent 20 sky.

00:33:05.876 --> 00:33:06.436 A:middle
That's no good.

00:33:06.436 --> 00:33:07.126 A:middle
We don't want that.

00:33:08.456 --> 00:33:10.046 A:middle
So let's take a look at that.

00:33:10.096 --> 00:33:11.766 A:middle
We also know that we
have Foundation here.

00:33:12.726 --> 00:33:14.366 A:middle
So what if we go ahead
and use Foundation

00:33:15.236 --> 00:33:17.106 A:middle
to clean this up a bit.

00:33:18.796 --> 00:33:20.566 A:middle
We'll remove the
percent in coding.

00:33:21.686 --> 00:33:25.846 A:middle
Oh, this is now a variable
instead of a [inaudible].

00:33:25.846 --> 00:33:30.356 A:middle
Let's go ahead and build this.

00:33:30.576 --> 00:33:31.486 A:middle
We'll run it again.

00:33:32.626 --> 00:33:33.446 A:middle
Rerun the server.

00:33:34.846 --> 00:33:38.156 A:middle
Let's go back to
our application.

00:33:39.106 --> 00:33:41.886 A:middle
Oh. There we go.

00:33:42.566 --> 00:33:43.696 A:middle
Timed out waiting for us.

00:33:44.566 --> 00:33:45.336 A:middle
Let's go back.

00:33:45.336 --> 00:33:50.136 A:middle
Let's click cloudy sky again,
and see if we fixed our problem.

00:33:51.556 --> 00:33:52.266 A:middle
Print to tag.

00:33:53.086 --> 00:33:53.896 A:middle
Ah, much better.

00:33:54.126 --> 00:33:54.986 A:middle
That's what we want.

00:33:54.986 --> 00:34:01.046 A:middle
So let's go ahead and turn off
this break point and continue.

00:33:54.986 --> 00:34:01.046 A:middle
So let's go ahead and turn off
this break point and continue.

00:34:01.136 --> 00:34:07.976 A:middle
And we see we got our result.

00:34:08.516 --> 00:34:14.335 A:middle
[ Applause ]

00:34:14.835 --> 00:34:17.326 A:middle
So now additionally, since
we've fixed this problem,

00:34:18.045 --> 00:34:21.106 A:middle
I can go back into
Cloud Tools for Swift,

00:34:21.516 --> 00:34:25.266 A:middle
and I can do a redeploy of
this state out to the server.

00:34:25.266 --> 00:34:27.446 A:middle
So it will start redeploying
that code right away.

00:34:28.136 --> 00:34:30.686 A:middle
So, again, it's that simple
to work with your client-side

00:34:30.686 --> 00:34:32.976 A:middle
and your server-side and
redeploy to the Cloud.

00:34:33.516 --> 00:34:40.315 A:middle
[ Applause ]

00:34:40.815 --> 00:34:43.766 A:middle
So I hope you really like these
demos, and I got to tell you,

00:34:43.766 --> 00:34:45.946 A:middle
I feel a tremendous amount of
relief that everything worked.

00:34:46.906 --> 00:34:51.406 A:middle
So on behalf of IBM,
John and I would just

00:34:51.406 --> 00:34:53.556 A:middle
like to thank everyone
for their time.

00:34:53.676 --> 00:34:56.596 A:middle
This is a really exciting
time to be a Swift developer,

00:34:57.176 --> 00:35:01.756 A:middle
and we invite you to join us and
the broader community to join in

00:34:57.176 --> 00:35:01.756 A:middle
and we invite you to join us and
the broader community to join in

00:35:02.036 --> 00:35:05.616 A:middle
and bring, to bring the
power of Swift to the server.

00:35:06.206 --> 00:35:08.526 A:middle
And for more information about
anything you've heard here,

00:35:08.916 --> 00:35:10.656 A:middle
about what we're,
what's cooking at IBM,

00:35:11.256 --> 00:35:14.036 A:middle
we have our
developer.IBM.com/Swift Dev

00:35:14.036 --> 00:35:16.436 A:middle
Center that you can go to.

00:35:16.436 --> 00:35:17.576 A:middle
And with that, thanks again.

00:35:17.576 --> 00:35:18.546 A:middle
I'll hand it back to Philippe.

00:35:19.516 --> 00:35:26.796 A:middle
[ Applause ]

00:35:27.296 --> 00:35:30.696 A:middle
&gt;&gt; So as you can see, IBM has
been doing some really awesome

00:35:30.696 --> 00:35:31.626 A:middle
things with Swift.

00:35:31.996 --> 00:35:34.606 A:middle
They've not just been
contributing some great code,

00:35:34.936 --> 00:35:36.746 A:middle
but they've also been
enriching the community

00:35:36.746 --> 00:35:38.726 A:middle
with their vast experience
building services

00:35:38.726 --> 00:35:40.386 A:middle
and streamlining
development flows.

00:35:40.466 --> 00:35:42.606 A:middle
Some of their work
has been integral

00:35:42.916 --> 00:35:44.716 A:middle
in making server-side
Swift possible.

00:35:45.996 --> 00:35:49.126 A:middle
But you, too, can help make
server-side Swift a reality,

00:35:49.246 --> 00:35:50.946 A:middle
and there are a number of things

00:35:50.946 --> 00:35:53.156 A:middle
that definitely you
can contribute with.

00:35:54.366 --> 00:35:56.566 A:middle
Portions of Swift
are not yet finished.

00:35:56.856 --> 00:35:59.806 A:middle
There's a lot of work to be
done, and there are a few things

00:35:59.806 --> 00:36:01.416 A:middle
that are not yet
to be implemented,

00:35:59.806 --> 00:36:01.416 A:middle
that are not yet
to be implemented,

00:36:01.726 --> 00:36:05.086 A:middle
and unimplemented just means
an opportunity to contribute.

00:36:05.576 --> 00:36:07.856 A:middle
There are number of easy ways
that you can help pitch in.

00:36:08.286 --> 00:36:12.266 A:middle
The bug tracker even has a
category for issues tagged

00:36:12.266 --> 00:36:15.856 A:middle
as starter bugs, but code
isn't just implementations.

00:36:16.386 --> 00:36:19.296 A:middle
Designing new API's and
guidelines that will work well

00:36:19.296 --> 00:36:21.406 A:middle
in Swift are something
that are being worked

00:36:21.406 --> 00:36:23.926 A:middle
on on a daily basis
in the e-mail list.

00:36:24.166 --> 00:36:27.516 A:middle
Many of the discussions are
working on the language itself,

00:36:27.596 --> 00:36:29.756 A:middle
and coming from contributors
like you.

00:36:30.726 --> 00:36:34.856 A:middle
And, of course, your packages,
your applications are what going

00:36:34.856 --> 00:36:36.386 A:middle
to make Swift on
the server awesome.

00:36:36.966 --> 00:36:42.066 A:middle
And if you have any questions
as for resources or links

00:36:42.066 --> 00:36:45.876 A:middle
to what we've actually talked
here today, we've got a,

00:36:46.016 --> 00:36:48.306 A:middle
this session, we have
everything culminated together,

00:36:48.976 --> 00:36:52.736 A:middle
and there are number of other
really awesome related sessions

00:36:52.736 --> 00:36:54.626 A:middle
that I would highly
suggest watching.

00:36:54.986 --> 00:36:58.616 A:middle
The API design guidelines
can, goes over some

00:36:58.616 --> 00:37:03.176 A:middle
of our thoughts behind actually
the new naming within Swift 3,

00:36:58.616 --> 00:37:03.176 A:middle
of our thoughts behind actually
the new naming within Swift 3,

00:37:03.786 --> 00:37:07.256 A:middle
and I would highly suggest
that you take a look

00:37:07.256 --> 00:37:09.186 A:middle
at the What's New in
Foundation for Swift.

00:37:09.576 --> 00:37:12.666 A:middle
All of the new value
types and features

00:37:12.666 --> 00:37:15.086 A:middle
that are being added are
going to be available

00:37:15.086 --> 00:37:16.186 A:middle
on the server as well.

00:37:16.776 --> 00:37:19.206 A:middle
Of course, performance is
not just necessarily your

00:37:19.206 --> 00:37:20.216 A:middle
local application.

00:37:20.986 --> 00:37:22.576 A:middle
We all, we need to
be able to make sure

00:37:22.576 --> 00:37:25.186 A:middle
that our servers are going
to be responsive and quick.

00:37:25.516 --> 00:37:29.606 A:middle
So performance, all across the
board, both on Linux and Mac is,

00:37:29.956 --> 00:37:33.716 A:middle
by far, something to look into,
and I would highly suggest

00:37:33.716 --> 00:37:36.886 A:middle
to take a look at the
new, new things in GCD

00:37:36.886 --> 00:37:38.956 A:middle
that are being released
with Swift 3.

00:37:39.536 --> 00:37:41.976 A:middle
And with that, thank
you very much.
