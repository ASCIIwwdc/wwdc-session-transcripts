WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:07.516 --> 00:00:17.500 A:middle
[ Music ]

00:00:20.516 --> 00:00:20.976 A:middle
&gt;&gt; Good morning.

00:00:21.516 --> 00:00:23.566 A:middle
[ Applause ]

00:00:24.066 --> 00:00:24.846 A:middle
Good morning.

00:00:25.146 --> 00:00:27.146 A:middle
[ Applause ]

00:00:27.446 --> 00:00:28.636 A:middle
Thank you so much everybody.

00:00:28.856 --> 00:00:29.906 A:middle
My name is Matt Patenaude.

00:00:29.906 --> 00:00:32.136 A:middle
I'm a software engineer
on the Playgrounds Team.

00:00:32.136 --> 00:00:36.126 A:middle
And welcome to Session 408,
Introducing Swift Playgrounds.

00:00:36.186 --> 00:00:40.776 A:middle
I am absolutely thrilled to be
a part of the team that gets

00:00:40.776 --> 00:00:41.856 A:middle
to show this to you today,

00:00:41.856 --> 00:00:44.256 A:middle
and boy have we got
a lot to show you.

00:00:44.566 --> 00:00:46.766 A:middle
So with that in mind, we
are going to dive right in.

00:00:47.646 --> 00:00:51.036 A:middle
So you've had 48 hours
to play with this by now,

00:00:51.036 --> 00:00:52.886 A:middle
so I'm sure a lot of you
have already seen this.

00:00:53.176 --> 00:00:54.936 A:middle
But if some of you
have somehow managed

00:00:54.936 --> 00:00:56.156 A:middle
to resist the temptation,

00:00:56.376 --> 00:01:00.246 A:middle
Swift Playgrounds is a really
exciting new app for iPad


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:56.376 --> 00:01:00.246 A:middle
Swift Playgrounds is a really
exciting new app for iPad

00:01:00.616 --> 00:01:03.996 A:middle
that allows you to program
in Swift and brings the power

00:01:04.075 --> 00:01:06.666 A:middle
of Swift literally to
the tips of your fingers.

00:01:07.626 --> 00:01:09.506 A:middle
If you aren't that
experienced with programming,

00:01:10.186 --> 00:01:10.926 A:middle
we've got you covered.

00:01:11.316 --> 00:01:14.336 A:middle
We've built a great
learn to code playground

00:01:14.676 --> 00:01:16.276 A:middle
that you can download
right from within the app,

00:01:16.826 --> 00:01:20.186 A:middle
and we've designed it to
be engaging and exciting,

00:01:20.496 --> 00:01:22.426 A:middle
regardless of what level
you're starting at.

00:01:22.726 --> 00:01:25.136 A:middle
And if nothing else, you can
probably get some pretty good

00:01:25.136 --> 00:01:30.326 A:middle
dance moves out of it.

00:01:30.326 --> 00:01:32.336 A:middle
If you are a little
bit more experienced,

00:01:32.336 --> 00:01:34.346 A:middle
we've also given you some
great starting points,

00:01:34.376 --> 00:01:37.466 A:middle
like this shapes template,
which will let you experiment

00:01:37.466 --> 00:01:41.296 A:middle
with things like color and touch
in ways that are unique to iPad

00:01:41.296 --> 00:01:42.926 A:middle
that you couldn't
do anywhere else.

00:01:43.366 --> 00:01:46.166 A:middle
And if you're already used to
building playgrounds in Xcode,

00:01:46.496 --> 00:01:48.296 A:middle
you can take any of
your iOS playgrounds,

00:01:48.556 --> 00:01:52.436 A:middle
and once you update them for
Swift 3, they'll run great

00:01:52.436 --> 00:01:54.036 A:middle
on Swift Playgrounds
and iPad as well.

00:01:54.866 --> 00:01:56.436 A:middle
We think it's a really
exciting product,

00:01:56.616 --> 00:01:57.356 A:middle
and we know you're going

00:01:57.356 --> 00:01:59.006 A:middle
to do some really
amazing things with it.

00:01:59.386 --> 00:02:01.316 A:middle
And as such, we got
a lot to show you.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:59.386 --> 00:02:01.316 A:middle
And as such, we got
a lot to show you.

00:02:01.316 --> 00:02:02.586 A:middle
So we're going to break our talk

00:02:02.866 --> 00:02:05.396 A:middle
into three different
segments today.

00:02:06.206 --> 00:02:08.735 A:middle
First, I'm going to ask my
colleague Max to join me

00:02:08.735 --> 00:02:11.706 A:middle
on stage, and he's going to
show you how to use the app,

00:02:11.706 --> 00:02:14.316 A:middle
including all of the great
touch affordances and gestures

00:02:14.546 --> 00:02:17.046 A:middle
that really make this a
unique experience for iPad.

00:02:17.356 --> 00:02:19.856 A:middle
After that, Jonathan's going
to come up, and he's going

00:02:19.856 --> 00:02:22.416 A:middle
to show you how to build
really engaging content

00:02:22.596 --> 00:02:24.786 A:middle
for Swift Playgrounds, using
all of the new features

00:02:24.786 --> 00:02:25.916 A:middle
of our new document format.

00:02:26.446 --> 00:02:28.296 A:middle
And finally, Izzy's going
to come up, and he's going

00:02:28.296 --> 00:02:30.246 A:middle
to show you some of
the really cool things

00:02:30.246 --> 00:02:32.146 A:middle
that you can do once you've had
a little bit of time to play

00:02:32.146 --> 00:02:32.896 A:middle
around with this thing.

00:02:33.286 --> 00:02:35.936 A:middle
So without further ado, Max.

00:02:36.516 --> 00:02:40.356 A:middle
[ Applause ]

00:02:40.856 --> 00:02:41.256 A:middle
&gt;&gt; Thanks Matt.

00:02:42.876 --> 00:02:44.556 A:middle
Thanks Matt.

00:02:44.656 --> 00:02:47.826 A:middle
So we're going to start off by
having a look at a screenshot

00:02:47.826 --> 00:02:50.076 A:middle
of Swift Playgrounds,
so we can see what all

00:02:50.076 --> 00:02:51.636 A:middle
of the different parts
of the UI are made of.

00:02:51.856 --> 00:02:56.216 A:middle
So up at the left, the
left side of the screen,

00:02:56.216 --> 00:02:57.176 A:middle
we've got the source editor.

00:02:57.176 --> 00:02:58.406 A:middle
On the right, we've
got the live view.

00:02:58.966 --> 00:03:00.826 A:middle
Now the source editor is
made up of a whole bunch


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:58.966 --> 00:03:00.826 A:middle
Now the source editor is
made up of a whole bunch

00:03:00.826 --> 00:03:01.736 A:middle
of different sections.

00:03:02.036 --> 00:03:06.286 A:middle
So one type of section
is the Playground markup,

00:03:06.526 --> 00:03:09.006 A:middle
and you'll see that we've
got rich markup in here.

00:03:09.006 --> 00:03:11.966 A:middle
This can be interspersed
inside of the single page,

00:03:12.406 --> 00:03:14.456 A:middle
and this is the rich text

00:03:14.456 --> 00:03:16.226 A:middle
to help you learn
something about the document.

00:03:16.826 --> 00:03:19.066 A:middle
Underneath, we've got an
example of some source code.

00:03:19.586 --> 00:03:22.686 A:middle
So here, this is where you'll
do all your programming.

00:03:23.446 --> 00:03:26.246 A:middle
Along the bottom of the screen,
we have the shortcuts bar.

00:03:26.956 --> 00:03:28.956 A:middle
In the center of that,
we show code completion,

00:03:29.436 --> 00:03:31.616 A:middle
and this depending on
the code's position.

00:03:32.036 --> 00:03:35.026 A:middle
On the left, we have the
Undo and Redo buttons,

00:03:35.326 --> 00:03:38.316 A:middle
and on the right we have the
two -- a couple of shortcuts.

00:03:38.676 --> 00:03:39.966 A:middle
One is to delete something.

00:03:40.506 --> 00:03:42.336 A:middle
The next is to insert
a new line.

00:03:42.476 --> 00:03:43.886 A:middle
And the third is to
bring up the keyboard.

00:03:44.576 --> 00:03:48.996 A:middle
These buttons will help
you if you want to program

00:03:48.996 --> 00:03:50.236 A:middle
without needing the keyboard.

00:03:50.946 --> 00:03:53.486 A:middle
Along the right side,
you have the live view.

00:03:54.236 --> 00:03:56.236 A:middle
This is where you can see
your code being executed

00:03:56.236 --> 00:04:00.666 A:middle
in real time, and underneath
that, the Run My Code button,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:56.236 --> 00:04:00.666 A:middle
in real time, and underneath
that, the Run My Code button,

00:04:02.106 --> 00:04:03.646 A:middle
which will compile
and execute your code.

00:04:04.716 --> 00:04:08.646 A:middle
Along the top left, we have
the Document button to go back

00:04:08.646 --> 00:04:11.786 A:middle
to your documents, the button to
bring up the table of contents

00:04:11.856 --> 00:04:14.586 A:middle
that shows you all of
the different chapters

00:04:14.586 --> 00:04:15.896 A:middle
and pages inside
of your document.

00:04:16.796 --> 00:04:21.196 A:middle
We have the two buttons for page
navigation, and on the right

00:04:21.196 --> 00:04:25.546 A:middle
of that, the Tools menu, and the
Library menu and the Tools menu.

00:04:26.296 --> 00:04:27.696 A:middle
But let's have a look
at them in detail.

00:04:29.256 --> 00:04:32.766 A:middle
Inside of the Library menu,
we've got a couple of snippets.

00:04:33.576 --> 00:04:37.346 A:middle
Next to that, we have
all the image literals

00:04:37.346 --> 00:04:39.446 A:middle
that could be inside of your
playground or your document.

00:04:40.136 --> 00:04:44.586 A:middle
And thirdly, we have file
literals, which is all the files

00:04:44.586 --> 00:04:47.736 A:middle
that you can drag out of the
library into your document.

00:04:49.046 --> 00:04:51.346 A:middle
And in the Tools menu, this
is where you can find help

00:04:51.546 --> 00:04:53.826 A:middle
about the app, a
glossary of terms provided

00:04:53.826 --> 00:04:57.326 A:middle
with the document, two
buttons to share something

00:04:57.326 --> 00:04:59.586 A:middle
about your document,
such as Record a Movie,

00:04:59.646 --> 00:05:02.736 A:middle
which takes movie of what you're
doing, and the Take Picture,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.646 --> 00:05:02.736 A:middle
which takes movie of what you're
doing, and the Take Picture,

00:05:02.946 --> 00:05:05.346 A:middle
which will save a
picture of the live view.

00:05:05.746 --> 00:05:08.446 A:middle
And finally, the Reset Page
button will reset the page

00:05:08.446 --> 00:05:09.656 A:middle
to the original state.

00:05:10.386 --> 00:05:14.686 A:middle
So here we are in the document
browser, and as you can see,

00:05:14.686 --> 00:05:16.106 A:middle
got a whole bunch of documents.

00:05:16.436 --> 00:05:19.516 A:middle
I'm going to open up the
Shapes Playground template

00:05:19.516 --> 00:05:20.346 A:middle
that I've got here.

00:05:21.296 --> 00:05:23.516 A:middle
So I've only got one
line of code here,

00:05:23.886 --> 00:05:25.386 A:middle
Let rectangle equals value.

00:05:25.976 --> 00:05:28.266 A:middle
I want to draw some
rectangles in the live view,

00:05:28.516 --> 00:05:29.426 A:middle
because I think that'll be fun.

00:05:29.916 --> 00:05:33.876 A:middle
So I'm going to tap on Value,
and you'll see that we bring

00:05:33.876 --> 00:05:35.176 A:middle
up code completion
along the bottom.

00:05:35.176 --> 00:05:36.866 A:middle
Got a whole bunch of
different options here.

00:05:37.546 --> 00:05:42.246 A:middle
So I'm going to find a rectangle
in code completion by tapping

00:05:42.276 --> 00:05:44.736 A:middle
and dragging to the left to
go through code completion.

00:05:44.956 --> 00:05:45.726 A:middle
So there's a rectangle.

00:05:46.516 --> 00:05:47.026 A:middle
Tap on that.

00:05:47.026 --> 00:05:48.776 A:middle
It gets inserted
into the document.

00:05:49.516 --> 00:05:51.836 A:middle
Now notice, there's
an orange circle

00:05:51.966 --> 00:05:52.996 A:middle
in the left side of the screen.

00:05:53.366 --> 00:05:55.526 A:middle
So that's a live issue
about this line of code.

00:05:56.156 --> 00:05:57.196 A:middle
We're going to tap on that.

00:05:57.636 --> 00:05:59.136 A:middle
It tells me there's
something wrong with this.

00:05:59.576 --> 00:06:01.606 A:middle
I needed to add parens
after rectangle.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.576 --> 00:06:01.606 A:middle
I needed to add parens
after rectangle.

00:06:02.036 --> 00:06:03.446 A:middle
So here we provide fix-its.

00:06:03.446 --> 00:06:04.886 A:middle
You can tap on the first one,

00:06:05.046 --> 00:06:06.886 A:middle
and then that will get
inserted into the document.

00:06:07.296 --> 00:06:08.356 A:middle
The orange circle goes away.

00:06:09.226 --> 00:06:13.476 A:middle
Now tap on my code, and we
can see I drew a rectangle.

00:06:14.126 --> 00:06:16.546 A:middle
It's a square, but.

00:06:18.416 --> 00:06:20.156 A:middle
Now notice when we move down,

00:06:20.666 --> 00:06:22.466 A:middle
we've now got Rectangle
in code completion.

00:06:22.906 --> 00:06:25.336 A:middle
So I'm going to tap on
that, and tap on the dot,

00:06:25.336 --> 00:06:27.206 A:middle
and now it's going to list
all the different properties

00:06:27.206 --> 00:06:28.926 A:middle
and functions that I
can use on Rectangle.

00:06:29.686 --> 00:06:32.756 A:middle
Let's make this a
bit easier to see

00:06:32.976 --> 00:06:35.186 A:middle
by changing the border's
color and the width.

00:06:35.566 --> 00:06:37.176 A:middle
So let's start out by
tapping Border Color.

00:06:37.806 --> 00:06:38.936 A:middle
We get an equal operator.

00:06:38.936 --> 00:06:39.946 A:middle
Tap on that.

00:06:40.486 --> 00:06:43.226 A:middle
And we get a placeholder
that's of a type of color.

00:06:43.226 --> 00:06:45.386 A:middle
Now notice the second item

00:06:45.386 --> 00:06:47.626 A:middle
in code completion
here is a gray square.

00:06:48.156 --> 00:06:51.586 A:middle
That means that we can insert
a color literally in line.

00:06:51.656 --> 00:06:55.596 A:middle
So I'm going to tap on that, and
we get a white color literal.

00:06:56.176 --> 00:06:57.466 A:middle
Tapping on that brings

00:06:57.466 --> 00:06:59.666 A:middle
up a quick editor
to change the value.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:00.306 --> 00:07:01.816 A:middle
There's a whole bunch
of quick editors inside

00:07:01.816 --> 00:07:03.976 A:middle
of Swift Playgrounds, and
this is just the color one.

00:07:03.976 --> 00:07:05.946 A:middle
So I'm going to change
it from white to black,

00:07:06.606 --> 00:07:08.106 A:middle
and let's tap Run My Code.

00:07:08.746 --> 00:07:10.656 A:middle
And now it's going
to a black border.

00:07:10.656 --> 00:07:12.286 A:middle
It's not very visible,
so I'm going

00:07:12.286 --> 00:07:14.226 A:middle
to increase the border
width as well.

00:07:14.896 --> 00:07:16.346 A:middle
Tap on Rectangle.

00:07:16.686 --> 00:07:17.796 A:middle
Tap on dot.

00:07:18.286 --> 00:07:22.476 A:middle
Tap on Border Width equals, and
now we've got a number literal,

00:07:22.856 --> 00:07:24.676 A:middle
which also brings
up a quick editor,

00:07:24.956 --> 00:07:26.036 A:middle
so we can punch in a number.

00:07:26.166 --> 00:07:27.816 A:middle
Going to punch in four.

00:07:27.816 --> 00:07:30.726 A:middle
Oops. And tap Run.

00:07:31.346 --> 00:07:33.616 A:middle
And now it's a bit more seeable.

00:07:34.746 --> 00:07:37.556 A:middle
Now I'm going to -- I want
to make a playground here

00:07:37.886 --> 00:07:41.116 A:middle
that will draw a square
everywhere I drag my finger

00:07:41.116 --> 00:07:41.706 A:middle
in the live view.

00:07:41.706 --> 00:07:43.896 A:middle
So I'm going to do a bit
more programming here,

00:07:44.006 --> 00:07:45.796 A:middle
and I want to hide
the live view,

00:07:45.906 --> 00:07:47.406 A:middle
just to give me some
more space to work.

00:07:47.406 --> 00:07:49.726 A:middle
So I'm going to tap and hold
on the center of the screen,

00:07:49.906 --> 00:07:51.626 A:middle
and it's going to split
the screen into two.

00:07:51.876 --> 00:07:53.896 A:middle
Now drag to the right to
dismiss the live view.

00:07:55.366 --> 00:07:57.776 A:middle
Let's tap at the
source of the code.

00:07:58.686 --> 00:08:02.216 A:middle
Now Swift Playgrounds also has a
great keyboard for when you want


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.686 --> 00:08:02.216 A:middle
Now Swift Playgrounds also has a
great keyboard for when you want

00:08:02.216 --> 00:08:03.836 A:middle
to do programming with
the onscreen keyboard.

00:08:04.146 --> 00:08:06.396 A:middle
So I'll tap the Keyboard
Up button to bring that up.

00:08:07.276 --> 00:08:09.676 A:middle
Notice the keys have
alternatives on top of them,

00:08:09.806 --> 00:08:10.546 A:middle
but more on that later.

00:08:11.686 --> 00:08:14.976 A:middle
Let's start by using the canvas
object that I know is inside

00:08:14.976 --> 00:08:17.606 A:middle
of the shapes playground to
interact with the live view.

00:08:18.026 --> 00:08:19.296 A:middle
So I'll type C-a-n.

00:08:19.756 --> 00:08:21.156 A:middle
Gives us a canvas object.

00:08:21.716 --> 00:08:25.316 A:middle
Type Shared to get
the shared canvas.

00:08:25.746 --> 00:08:27.056 A:middle
And now I'll type Drag.

00:08:27.756 --> 00:08:31.456 A:middle
Notice that Swift Playgrounds
fuzzily matches the untouched

00:08:31.456 --> 00:08:34.056 A:middle
drag handler from
just typing Drag.

00:08:34.446 --> 00:08:38.236 A:middle
So I'll tap on that, and we get
this placeholder for a function.

00:08:38.645 --> 00:08:41.145 A:middle
If I type Return, it'll
expand the placeholder

00:08:41.395 --> 00:08:42.206 A:middle
so we can do some coding.

00:08:43.296 --> 00:08:46.386 A:middle
Now I want it to create a
rectangle every time I drag

00:08:46.386 --> 00:08:46.836 A:middle
my finger.

00:08:47.566 --> 00:08:50.706 A:middle
So all I have to do is what I
was doing before, every time.

00:08:51.286 --> 00:08:55.026 A:middle
So let's tap on the closing
brace here, and tap on Hold,

00:08:55.026 --> 00:08:58.076 A:middle
and drag it down to encompass
the code we were doing before.

00:08:59.806 --> 00:09:00.966 A:middle
One more thing I
have to do though.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.806 --> 00:09:00.966 A:middle
One more thing I
have to do though.

00:09:00.966 --> 00:09:02.456 A:middle
I have to change the center

00:09:02.456 --> 00:09:04.276 A:middle
of the rectangle to
be wherever I tap.

00:09:05.186 --> 00:09:07.036 A:middle
So let's add that
line of code now

00:09:07.416 --> 00:09:11.346 A:middle
by setting the rectangle's
center position to be equal

00:09:11.346 --> 00:09:15.816 A:middle
to the canvas shared
current touch points,

00:09:16.326 --> 00:09:18.526 A:middle
which I know is in array.

00:09:19.376 --> 00:09:22.096 A:middle
If I tap and hold on the H,
and drag it to the right,

00:09:22.096 --> 00:09:23.696 A:middle
it gives me an array's
subscript.

00:09:24.686 --> 00:09:27.486 A:middle
Now I can tap and hold on the
P to get the zero element.

00:09:28.826 --> 00:09:31.506 A:middle
Now let's dismiss that,
and bring in the live view,

00:09:32.236 --> 00:09:35.626 A:middle
and tap Run My Code,
and we can draw.

00:09:36.996 --> 00:09:37.596 A:middle
Yeah.

00:09:38.516 --> 00:09:44.546 A:middle
[ Applause ]

00:09:45.046 --> 00:09:47.066 A:middle
Now I'll tap and hold on
the center of this screen.

00:09:47.626 --> 00:09:48.306 A:middle
Drag it to the left.

00:09:48.306 --> 00:09:48.976 A:middle
Dismiss the code.

00:09:48.976 --> 00:09:50.416 A:middle
Now I can draw everywhere.

00:09:52.106 --> 00:09:53.916 A:middle
Now, I like my little
bit of art here,

00:09:53.916 --> 00:09:54.886 A:middle
so I'm going to send it to Matt.

00:09:54.886 --> 00:09:57.556 A:middle
So I'm going to tap
on the Tools menu.

00:09:57.786 --> 00:10:02.426 A:middle
You just take a picture to
save a copy of the live view.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:57.786 --> 00:10:02.426 A:middle
You just take a picture to
save a copy of the live view.

00:10:04.036 --> 00:10:05.686 A:middle
Now, a lot was going on here,

00:10:06.616 --> 00:10:08.526 A:middle
and there's a lot
behind the scenes

00:10:08.806 --> 00:10:10.036 A:middle
to make a playground
work this way.

00:10:10.436 --> 00:10:11.846 A:middle
So I'm going to bring
up Jonathan,

00:10:11.966 --> 00:10:16.386 A:middle
who's going to show us
exactly what is inside of each

00:10:16.386 --> 00:10:21.546 A:middle
of the playgrounds in
order to make them work.

00:10:22.406 --> 00:10:23.376 A:middle
So, Jonathan.

00:10:24.516 --> 00:10:30.616 A:middle
[ Applause ]

00:10:31.116 --> 00:10:33.656 A:middle
&gt;&gt; Thank you Matt and Max.

00:10:33.836 --> 00:10:37.586 A:middle
So Swift Playgrounds on iPad
lets you use the same Swift 3

00:10:37.586 --> 00:10:39.696 A:middle
Playground documents that
you created on your Mac,

00:10:39.696 --> 00:10:41.446 A:middle
and you can make
them on the iPad too.

00:10:42.136 --> 00:10:43.966 A:middle
You can use AirDrop,
iCloud Drive,

00:10:44.126 --> 00:10:47.126 A:middle
or other document providers
to transfer and work on them

00:10:47.126 --> 00:10:48.056 A:middle
in either environment.

00:10:48.056 --> 00:10:49.156 A:middle
And don't forget to have fun.

00:10:49.966 --> 00:10:50.716 A:middle
But in addition

00:10:50.716 --> 00:10:52.866 A:middle
to the traditional
Playground document format,

00:10:53.286 --> 00:10:56.366 A:middle
Swift Playgrounds for iPad
introduces a new document format

00:10:56.366 --> 00:10:58.306 A:middle
that takes advantage
of the new environment.

00:10:59.266 --> 00:11:01.996 A:middle
Playground Books provide
some more building blocks


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.266 --> 00:11:01.996 A:middle
Playground Books provide
some more building blocks

00:11:01.996 --> 00:11:04.796 A:middle
to construct an interactive
story in the course of something

00:11:04.796 --> 00:11:06.756 A:middle
that you want other
people to explore.

00:11:06.756 --> 00:11:07.796 A:middle
You want to show them something.

00:11:08.316 --> 00:11:11.246 A:middle
So in these next moments, I'd
like to show you an overview

00:11:11.246 --> 00:11:13.596 A:middle
of what's new, and then
demonstrate how you can put

00:11:13.596 --> 00:11:15.606 A:middle
these new things to good use.

00:11:16.276 --> 00:11:20.766 A:middle
So first off, Playground Books
are made up of pages grouped

00:11:20.766 --> 00:11:23.736 A:middle
into chapters, and a table
of contents is generated

00:11:23.736 --> 00:11:25.366 A:middle
from this for easy navigation.

00:11:25.766 --> 00:11:31.756 A:middle
Playground Books provide a new
type of page called a cutscene,

00:11:32.036 --> 00:11:33.456 A:middle
and this can be useful
if you want

00:11:33.456 --> 00:11:36.766 A:middle
to stage a full-screen
illustration in the course

00:11:36.766 --> 00:11:38.226 A:middle
of a story that you're
trying to tell.

00:11:38.346 --> 00:11:41.236 A:middle
You can see how our content
team has put this to good use,

00:11:41.236 --> 00:11:43.376 A:middle
trying to demonstrate
big ideas in a fun way.

00:11:43.906 --> 00:11:47.986 A:middle
And as you introduce concepts,
you can use the glossary feature

00:11:48.146 --> 00:11:50.226 A:middle
to link terms with their
definitions at the tap

00:11:50.226 --> 00:11:53.906 A:middle
of a finger, and all these terms
and definitions are gathered

00:11:53.906 --> 00:11:55.996 A:middle
up to provide a reference
in one place.

00:11:56.646 --> 00:12:01.176 A:middle
A Playground page full of Swift
code can be a bit daunting


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:56.646 --> 00:12:01.176 A:middle
A Playground page full of Swift
code can be a bit daunting

00:12:01.176 --> 00:12:02.396 A:middle
to just jump into.

00:12:02.636 --> 00:12:04.536 A:middle
Sometimes you don't
want to distract

00:12:04.536 --> 00:12:06.436 A:middle
from the finer point
you're trying to present.

00:12:06.866 --> 00:12:08.326 A:middle
So Playground Books
give you the ability

00:12:08.326 --> 00:12:11.336 A:middle
to focus the learner
using editable regions.

00:12:11.856 --> 00:12:14.856 A:middle
You annotate your Swift
code with special comments.

00:12:15.456 --> 00:12:17.776 A:middle
They become blanks that
the learner then fills in.

00:12:18.316 --> 00:12:19.806 A:middle
This lets you reduce
distraction,

00:12:20.006 --> 00:12:21.746 A:middle
especially at an early
stage when you're trying

00:12:21.746 --> 00:12:23.406 A:middle
to demonstrate a
complex concept.

00:12:23.846 --> 00:12:27.726 A:middle
And Playground Books
lets you mark code

00:12:27.726 --> 00:12:29.476 A:middle
that you don't want
to show up at all.

00:12:30.326 --> 00:12:33.456 A:middle
Hidden code blocks give you
the flexibility to run, set up,

00:12:33.556 --> 00:12:36.686 A:middle
and tear down code around some
kind of workspace in the middle.

00:12:37.006 --> 00:12:39.136 A:middle
It's a great way to hide
the details at first,

00:12:39.136 --> 00:12:40.876 A:middle
and then you can pull
back the curtain,

00:12:40.876 --> 00:12:45.696 A:middle
and expose this setup magic
when you're ready to do so.

00:12:46.196 --> 00:12:48.546 A:middle
Playground Books lets you
configure the shortcuts

00:12:48.546 --> 00:12:50.196 A:middle
that show up it the
completion bar here.

00:12:50.586 --> 00:12:53.806 A:middle
You can specify or exclude
identifiers, modules, keywords,

00:12:53.806 --> 00:12:56.356 A:middle
etcetera, customizing what
shows up above the comments.

00:12:57.036 --> 00:13:01.316 A:middle
And with the new
document format,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:57.036 --> 00:13:01.316 A:middle
And with the new
document format,

00:13:01.316 --> 00:13:05.236 A:middle
you can configure the live
view to be always on as soon

00:13:05.236 --> 00:13:06.416 A:middle
as the page is loaded.

00:13:06.836 --> 00:13:10.196 A:middle
It runs Swift code in a separate
process, completely independent

00:13:10.196 --> 00:13:12.386 A:middle
of the code that is typed
and run in the editor.

00:13:12.896 --> 00:13:16.056 A:middle
This editor code on the left and
the live view code on the right,

00:13:16.056 --> 00:13:18.806 A:middle
they talk to each other with
a special XPC mechanism.

00:13:19.056 --> 00:13:21.926 A:middle
We're actually going to see how
that works, and you can watch

00:13:22.356 --> 00:13:24.226 A:middle
through my demonstration and so

00:13:24.226 --> 00:13:25.296 A:middle
that you can take
advantage of this.

00:13:25.526 --> 00:13:28.166 A:middle
It's a great way to do
interactive visualizations,

00:13:28.316 --> 00:13:30.986 A:middle
building up with each successive
run of the code in the editor.

00:13:31.726 --> 00:13:36.046 A:middle
And if you've chosen to
progressively explore an idea

00:13:36.046 --> 00:13:38.256 A:middle
and guide through the
steps to build something,

00:13:38.656 --> 00:13:41.226 A:middle
you can analyze what was
typed, and then provide hints

00:13:41.426 --> 00:13:43.536 A:middle
that the learner can bring up
by tapping the Hint button.

00:13:44.096 --> 00:13:48.526 A:middle
And if they succeed in their
task, you can let them know

00:13:48.956 --> 00:13:49.976 A:middle
with a success message.

00:13:51.516 --> 00:13:54.846 A:middle
And Playground Books will
remember your assessment

00:13:54.876 --> 00:13:57.446 A:middle
of each page, and the learner
can see what they've completed

00:13:57.446 --> 00:13:58.676 A:middle
in the table of contents.

00:13:59.226 --> 00:14:01.526 A:middle
Use these Hint and
Assessment mechanisms as a part


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.226 --> 00:14:01.526 A:middle
Use these Hint and
Assessment mechanisms as a part

00:14:01.526 --> 00:14:02.766 A:middle
of your own motivational design.

00:14:03.336 --> 00:14:07.826 A:middle
You have access to a
simple key/value store

00:14:07.826 --> 00:14:09.116 A:middle
that is kept with the document.

00:14:09.556 --> 00:14:12.876 A:middle
This lets you track preferences
or even more advanced forms

00:14:12.876 --> 00:14:17.426 A:middle
of progress as the learner moves
through the book page to page.

00:14:17.866 --> 00:14:19.676 A:middle
And Playground Books
are resettable.

00:14:20.356 --> 00:14:23.666 A:middle
Every change made is kept
in a separate place away

00:14:23.666 --> 00:14:25.086 A:middle
from the main document content.

00:14:25.196 --> 00:14:28.706 A:middle
And if the learner so chooses,
they can reset the page back

00:14:28.816 --> 00:14:32.056 A:middle
to the state it was when
they first opened it.

00:14:32.456 --> 00:14:34.446 A:middle
The entire document
can be reset too.

00:14:34.886 --> 00:14:36.256 A:middle
Every page will be pristine.

00:14:36.416 --> 00:14:37.966 A:middle
The key/value store
will be cleared out.

00:14:38.156 --> 00:14:39.186 A:middle
Assessments reset.

00:14:39.556 --> 00:14:43.116 A:middle
And they're ready
to start again.

00:14:43.336 --> 00:14:46.816 A:middle
And last, but certainly not
least, on developer.apple.com,

00:14:46.816 --> 00:14:48.956 A:middle
you can see the documentation
of the format.

00:14:48.956 --> 00:14:50.756 A:middle
We want to make sure that
you know how it works

00:14:50.756 --> 00:14:53.796 A:middle
so that you can work on your
own custom content production

00:14:53.796 --> 00:14:55.256 A:middle
workflows to make
the magic happen.

00:14:55.676 --> 00:14:57.656 A:middle
Start with the examples
and the references.

00:14:57.656 --> 00:15:00.676 A:middle
Dig into all that, and even
take apart the Playground Books


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:57.656 --> 00:15:00.676 A:middle
Dig into all that, and even
take apart the Playground Books

00:15:00.676 --> 00:15:02.836 A:middle
produced by our content
team to learn more.

00:15:05.146 --> 00:15:08.536 A:middle
There you go.

00:15:10.016 --> 00:15:13.356 A:middle
So now I'd like to
introduce a Playground Book

00:15:13.356 --> 00:15:16.676 A:middle
that I have created to show
you what you would experience

00:15:16.676 --> 00:15:17.886 A:middle
from an author's perspective.

00:15:18.476 --> 00:15:21.136 A:middle
So my audience for this
book that I made just

00:15:21.136 --> 00:15:23.826 A:middle
for you is someone
who's used Swift before

00:15:23.826 --> 00:15:26.696 A:middle
and even used Playgrounds
as they were on the Mac,

00:15:26.696 --> 00:15:29.586 A:middle
but now they're new to the
Playground Book format,

00:15:29.686 --> 00:15:31.596 A:middle
and they'd like to know
more about how it works.

00:15:31.936 --> 00:15:33.676 A:middle
My goal with this
Playground Book is

00:15:33.676 --> 00:15:37.276 A:middle
to build a living reference
demonstrating how the new

00:15:37.276 --> 00:15:40.546 A:middle
always-on live view works
and how you can talk to it.

00:15:40.686 --> 00:15:42.056 A:middle
So let's get started.

00:15:42.266 --> 00:15:46.456 A:middle
What better way to
demonstrate the new features

00:15:46.456 --> 00:15:48.916 A:middle
of Playground Books than
with a Playground Book

00:15:48.916 --> 00:15:50.886 A:middle
that demonstrates the new
features of Playground Books?

00:15:53.256 --> 00:15:55.276 A:middle
We're very self-referential
around here.

00:15:55.276 --> 00:15:55.856 A:middle
All right.

00:15:55.856 --> 00:15:57.956 A:middle
So let's get started.

00:15:57.956 --> 00:15:59.486 A:middle
Now we have here the
document browser.

00:15:59.486 --> 00:16:01.776 A:middle
I'm going to bring up my
Playground Book called "Talking


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:59.486 --> 00:16:01.776 A:middle
I'm going to bring up my
Playground Book called "Talking

00:16:01.776 --> 00:16:03.126 A:middle
to the Live View"
by tapping on it.

00:16:03.996 --> 00:16:07.206 A:middle
And you can see immediately
the live view starts running.

00:16:07.606 --> 00:16:08.376 A:middle
Notice that the code

00:16:08.376 --> 00:16:11.096 A:middle
on the editor has not even been
compiled, and it's not running

00:16:11.096 --> 00:16:13.186 A:middle
at all, yet we have
a separate process

00:16:13.186 --> 00:16:14.136 A:middle
with the code I've written

00:16:14.136 --> 00:16:17.466 A:middle
for the always-on live view
getting us this beautiful little

00:16:17.466 --> 00:16:17.996 A:middle
face here.

00:16:18.316 --> 00:16:19.246 A:middle
I'd like you to meet Em.

00:16:19.936 --> 00:16:22.476 A:middle
My helper here is a
Swift program that loves

00:16:22.476 --> 00:16:24.096 A:middle
to recognize knock, knock jokes.

00:16:25.296 --> 00:16:27.686 A:middle
So we can see here on
this introduction page,

00:16:27.996 --> 00:16:30.096 A:middle
our goal is to just play around.

00:16:30.526 --> 00:16:32.866 A:middle
I don't want to burden the
learner with all the details

00:16:32.866 --> 00:16:35.476 A:middle
of how we're actually
going to send messages

00:16:35.476 --> 00:16:36.426 A:middle
over to the live view.

00:16:36.426 --> 00:16:38.486 A:middle
I just want you to
experience it for fun

00:16:38.776 --> 00:16:40.796 A:middle
with this fun little
story attached to it.

00:16:41.236 --> 00:16:42.536 A:middle
What we're going to
do is we're going

00:16:42.536 --> 00:16:45.756 A:middle
to send messages using this
Say function down below.

00:16:46.576 --> 00:16:48.686 A:middle
These strings will be passed
over to the other side,

00:16:48.686 --> 00:16:51.186 A:middle
and they'll advance the
conversation state machine

00:16:51.186 --> 00:16:53.956 A:middle
that is running for Em
that will keep going

00:16:53.956 --> 00:16:55.626 A:middle
as the jokes continue.

00:16:55.626 --> 00:16:56.306 A:middle
So we'll start here.

00:16:56.406 --> 00:16:57.526 A:middle
We have a string already filled

00:16:57.526 --> 00:16:58.746 A:middle
out for us called
"knock, knock."

00:16:58.746 --> 00:17:02.636 A:middle
I'll just tap Run My Code, and
Em responds, "Who's there?"


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.746 --> 00:17:02.636 A:middle
I'll just tap Run My Code, and
Em responds, "Who's there?"

00:17:02.846 --> 00:17:05.286 A:middle
The code on the left
was compiled, executed.

00:17:05.596 --> 00:17:08.586 A:middle
The special magic happened
with the Say function,

00:17:08.586 --> 00:17:10.175 A:middle
and the string was
passed to the other side.

00:17:10.175 --> 00:17:12.165 A:middle
And we'll brush away the
magic dust here in a moment.

00:17:12.506 --> 00:17:13.766 A:middle
So let's continue.

00:17:13.766 --> 00:17:16.296 A:middle
I'm going to say, "Boo."

00:17:16.296 --> 00:17:18.266 A:middle
And I'm using the
external keyboard to type,

00:17:18.266 --> 00:17:19.886 A:middle
because I don't want
to cover up the screen

00:17:19.945 --> 00:17:21.056 A:middle
with the on-screen keyboard.

00:17:21.596 --> 00:17:23.925 A:middle
I will send this string
over by tapping Run My Code.

00:17:24.806 --> 00:17:25.695 A:middle
"Boo! Who?"

00:17:27.486 --> 00:17:28.876 A:middle
"Are you crying?"

00:17:30.576 --> 00:17:31.496 A:middle
Tap Run My Code.

00:17:32.516 --> 00:17:36.866 A:middle
[ Laughter ]

00:17:37.366 --> 00:17:39.396 A:middle
And Em has correctly
identified this knock,

00:17:39.396 --> 00:17:40.696 A:middle
knock joke as a classic.

00:17:40.696 --> 00:17:43.056 A:middle
Let's try one more to see
how this continues to work.

00:17:43.056 --> 00:17:45.706 A:middle
I need to restart Em's
conversation state machine.

00:17:45.706 --> 00:17:47.656 A:middle
So I'm going to start by
saying, "Knock, knock."

00:17:47.896 --> 00:17:51.306 A:middle
I'll tap Run My Code to compile
and run this, send the string

00:17:51.306 --> 00:17:52.696 A:middle
over the wire to the other side.

00:17:53.276 --> 00:17:53.856 A:middle
"Who's there?"

00:17:54.696 --> 00:17:57.856 A:middle
UInt, which is Swift's
type for unsigned integer.

00:17:59.656 --> 00:18:00.396 A:middle
"UInt who?"


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.656 --> 00:18:00.396 A:middle
"UInt who?"

00:18:01.536 --> 00:18:04.706 A:middle
"UInterested in my
clever jokes?"

00:18:05.516 --> 00:18:12.596 A:middle
[ Laughter ]

00:18:13.096 --> 00:18:15.176 A:middle
That sounds like some
of you agree with Em

00:18:15.176 --> 00:18:16.186 A:middle
on this assessment here.

00:18:16.986 --> 00:18:17.626 A:middle
That's unfortunate.

00:18:17.976 --> 00:18:22.936 A:middle
But what we have here is a way
to experiment with the idea.

00:18:22.936 --> 00:18:25.426 A:middle
And when you're ready, you
can go to the very next page,

00:18:25.426 --> 00:18:28.256 A:middle
where the magic dust
is brushed away,

00:18:28.666 --> 00:18:30.946 A:middle
and you can see exactly how
the Say function is written.

00:18:30.946 --> 00:18:32.716 A:middle
This is all it takes
to send a string

00:18:32.716 --> 00:18:36.156 A:middle
over to the live view process,
and well unpack this a bit more

00:18:36.156 --> 00:18:36.866 A:middle
in a few minutes here.

00:18:37.626 --> 00:18:39.606 A:middle
But here, what we have
is a Playground Book

00:18:39.606 --> 00:18:42.996 A:middle
that progressively explores
the always-on live view API

00:18:43.256 --> 00:18:44.636 A:middle
from the author's perspective.

00:18:44.986 --> 00:18:47.396 A:middle
You can continue on to further
pages, where you learn how

00:18:47.396 --> 00:18:50.216 A:middle
to send more complex
commands over to Em.

00:18:50.386 --> 00:18:52.596 A:middle
You can configure it
to recognize new setup

00:18:52.596 --> 00:18:53.926 A:middle
and punch line joke patterns.

00:18:54.206 --> 00:18:57.056 A:middle
You can even save these joke
patterns to the key value store

00:18:57.436 --> 00:18:59.536 A:middle
to load them when you
want to have fun later,

00:18:59.776 --> 00:19:01.456 A:middle
after the next time you
open the Playground Book.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.776 --> 00:19:01.456 A:middle
after the next time you
open the Playground Book.

00:19:02.346 --> 00:19:05.956 A:middle
So this Playground Book
is available for download

00:19:06.056 --> 00:19:07.286 A:middle
with our session materials.

00:19:07.286 --> 00:19:09.016 A:middle
I encourage you to check
it out after the session.

00:19:09.016 --> 00:19:11.166 A:middle
But right now, we're going
to kind of unpack this,

00:19:11.166 --> 00:19:19.626 A:middle
and see how this thing works
from an author's perspective.

00:19:20.536 --> 00:19:24.246 A:middle
So Playground Books are a
special document format geared

00:19:24.246 --> 00:19:27.446 A:middle
towards teaching these
concepts on a touch environment

00:19:27.786 --> 00:19:28.706 A:middle
that we have on the iPad.

00:19:29.906 --> 00:19:32.546 A:middle
They're a folder with the
extension .playgroundbook

00:19:32.796 --> 00:19:35.816 A:middle
that is treated as a document
package by the operating system.

00:19:36.186 --> 00:19:39.646 A:middle
You edit these on your Mac with
whatever you would like to use.

00:19:39.646 --> 00:19:41.336 A:middle
You can use Xcode, your
favorite text editor.

00:19:41.676 --> 00:19:43.416 A:middle
Use your version control system,

00:19:43.416 --> 00:19:46.256 A:middle
build your own custom
content management workflow

00:19:46.256 --> 00:19:47.186 A:middle
if you need to, to be able

00:19:47.186 --> 00:19:49.336 A:middle
to produce content
in Playground Books.

00:19:50.376 --> 00:19:52.136 A:middle
And we're going to walk
through how this package is

00:19:52.136 --> 00:19:52.996 A:middle
assembled together.

00:19:53.356 --> 00:19:55.536 A:middle
The package contains
the files and folders,

00:19:55.536 --> 00:19:57.966 A:middle
and Swift code assets
configuration

00:19:57.966 --> 00:19:58.906 A:middle
that make everything work.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.446 --> 00:20:02.076 A:middle
And here's an overview
of these pieces.

00:20:02.206 --> 00:20:04.676 A:middle
We're going to refer back to
this as we go, so we can kind

00:20:04.676 --> 00:20:06.466 A:middle
of see how everything
gets assembled together.

00:20:07.646 --> 00:20:09.586 A:middle
At the very root of
this document package,

00:20:09.586 --> 00:20:11.146 A:middle
you have a folder
called contents,

00:20:11.146 --> 00:20:12.786 A:middle
and as you would guess, this is

00:20:12.786 --> 00:20:15.026 A:middle
where you put your
authored content.

00:20:16.146 --> 00:20:18.656 A:middle
Moving inside, you will
recognize these two folders

00:20:18.656 --> 00:20:20.326 A:middle
if you've authored
playgrounds before.

00:20:20.966 --> 00:20:23.846 A:middle
Sources is where you put the
global Swift files that you want

00:20:23.846 --> 00:20:26.306 A:middle
to have compiled and made
available to every page

00:20:26.336 --> 00:20:27.416 A:middle
in your Playground Book.

00:20:28.166 --> 00:20:30.466 A:middle
You don't even have to import
anything to make this work.

00:20:30.666 --> 00:20:33.166 A:middle
Anything that's declared as
public will be ready to go

00:20:33.166 --> 00:20:34.426 A:middle
as soon as you open the page.

00:20:35.166 --> 00:20:40.766 A:middle
And then Resources holds the
assets used by your pages.

00:20:40.986 --> 00:20:43.366 A:middle
Place your images, your
sound files, any other assets

00:20:43.366 --> 00:20:44.926 A:middle
that you need to
load by file name,

00:20:45.246 --> 00:20:46.716 A:middle
and they'd be pulled
out of this folder.

00:20:47.376 --> 00:20:50.276 A:middle
Note that these two folders
right now are in the root

00:20:50.346 --> 00:20:52.706 A:middle
of this document
package, so everything

00:20:52.706 --> 00:20:55.946 A:middle
in them is made available to
every page in the entire book.

00:20:56.396 --> 00:20:59.356 A:middle
If you choose to, you can
scope things to just chapters

00:20:59.476 --> 00:21:01.756 A:middle
by putting a Sources and
Resources folder in there,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.476 --> 00:21:01.756 A:middle
by putting a Sources and
Resources folder in there,

00:21:02.126 --> 00:21:03.506 A:middle
or even individual pages.

00:21:03.506 --> 00:21:04.836 A:middle
You don't have to
share all of this stuff

00:21:04.836 --> 00:21:05.886 A:middle
across every other page.

00:21:05.886 --> 00:21:06.486 A:middle
It's up to you.

00:21:06.786 --> 00:21:08.156 A:middle
Customization there,
for your uses.

00:21:08.736 --> 00:21:12.086 A:middle
The next folder we're visiting
here is named Chapters,

00:21:12.216 --> 00:21:14.806 A:middle
and as you would expect,
it contains chapters,

00:21:15.126 --> 00:21:18.726 A:middle
which are themselves folders
containing one or more pages,

00:21:19.346 --> 00:21:24.346 A:middle
and each page is a folder
that contains the content

00:21:24.346 --> 00:21:27.266 A:middle
that you interact with when
the Playground Book is used

00:21:27.266 --> 00:21:28.676 A:middle
in the app.

00:21:28.676 --> 00:21:29.806 A:middle
This first file we're going

00:21:29.806 --> 00:21:32.416 A:middle
to see here is called
Manifest.plist.

00:21:32.846 --> 00:21:34.936 A:middle
It's a special configuration
file that sets

00:21:34.996 --> 00:21:36.586 A:middle
up how the page will work.

00:21:36.986 --> 00:21:39.326 A:middle
If you open this file, it
will look something like this.

00:21:39.636 --> 00:21:40.516 A:middle
We'll go through
it, don't worry.

00:21:41.316 --> 00:21:44.506 A:middle
Now, manifest files are property
lists, dictionaries of keys

00:21:44.506 --> 00:21:47.786 A:middle
and values that Swift Playground
uses to determine how this page

00:21:47.786 --> 00:21:49.456 A:middle
with a document is
supposed to behave.

00:21:50.056 --> 00:21:52.226 A:middle
These manifest files
are used at the chapter

00:21:52.636 --> 00:21:55.066 A:middle
and the document level as
well to configure behavior,

00:21:55.106 --> 00:21:57.406 A:middle
like the order of things
in the table of contents.

00:21:57.856 --> 00:22:00.046 A:middle
We're just going to focus
on the page manifest today,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.856 --> 00:22:00.046 A:middle
We're just going to focus
on the page manifest today,

00:22:00.046 --> 00:22:03.066 A:middle
because it has the most
impact with what you just saw

00:22:03.066 --> 00:22:04.886 A:middle
in the demonstration,
and we'll see how each

00:22:04.886 --> 00:22:08.036 A:middle
of these configuration
mechanisms alter what happens

00:22:08.036 --> 00:22:08.676 A:middle
on the page.

00:22:10.026 --> 00:22:14.646 A:middle
The first key in the property
list is name, as you can tell.

00:22:15.016 --> 00:22:18.066 A:middle
It sets the name at the top of
the document, and it's also used

00:22:18.066 --> 00:22:19.806 A:middle
in the table of contents.

00:22:21.056 --> 00:22:24.946 A:middle
The next key, LiveViewMode,
controls how the live view works

00:22:24.946 --> 00:22:26.196 A:middle
when the page is first opened.

00:22:26.636 --> 00:22:30.166 A:middle
Usually, the live view is
hidden until it's either invoked

00:22:30.166 --> 00:22:32.466 A:middle
in code or the learner
brings it back on screen.

00:22:32.706 --> 00:22:35.316 A:middle
In this case, I want it to show
up as soon as the page opens.

00:22:35.636 --> 00:22:38.396 A:middle
So by setting the string
value of this key to visible

00:22:38.396 --> 00:22:41.286 A:middle
by default, I get
the behavior I want.

00:22:42.436 --> 00:22:47.576 A:middle
PosterReference is a key that
a string value used to look

00:22:47.576 --> 00:22:49.606 A:middle
up a file name in the
Resources directory.

00:22:50.476 --> 00:22:53.056 A:middle
That file becomes a
poster that covers

00:22:53.056 --> 00:22:56.596 A:middle
up the live view area before
the live view process has had a

00:22:56.596 --> 00:22:59.016 A:middle
chance to run right
after the page opens.

00:22:59.326 --> 00:23:02.376 A:middle
And as you can see here, as soon
as the live view process begins


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.326 --> 00:23:02.376 A:middle
And as you can see here, as soon
as the live view process begins

00:23:02.376 --> 00:23:04.576 A:middle
to run, the poster
image is faded away,

00:23:05.286 --> 00:23:08.126 A:middle
and we can see the live
view content underneath.

00:23:08.896 --> 00:23:12.766 A:middle
The LiveViewEdgetoEdge
key has a Boolean value

00:23:12.766 --> 00:23:15.976 A:middle
that determines whether
or not the content area

00:23:15.976 --> 00:23:19.086 A:middle
of the live view extends
to the entire boundaries

00:23:19.086 --> 00:23:21.526 A:middle
of the viewport, and also
underneath the Run My Code

00:23:21.526 --> 00:23:22.586 A:middle
button, as you see here.

00:23:22.586 --> 00:23:25.376 A:middle
I wanted to that in my
case, so I set it to Yes.

00:23:25.656 --> 00:23:29.046 A:middle
If you set LiveViewEdgetoEdge
to No,

00:23:29.046 --> 00:23:31.056 A:middle
and you gave the live
view a background color,

00:23:31.156 --> 00:23:32.076 A:middle
this is what you'd see.

00:23:32.556 --> 00:23:34.956 A:middle
Note how it's inset
all the way around.

00:23:35.486 --> 00:23:37.486 A:middle
It's not covered up by
the Run My Code button.

00:23:37.726 --> 00:23:40.456 A:middle
It's up to you which
mode you want,

00:23:40.456 --> 00:23:41.996 A:middle
depending on the
content that you have.

00:23:42.496 --> 00:23:44.876 A:middle
For instance, if you
needed to have a view

00:23:44.876 --> 00:23:47.216 A:middle
that had full control
of the touch area,

00:23:47.216 --> 00:23:49.386 A:middle
then setting LiveViewEdgetoEdge

00:23:49.386 --> 00:23:53.146 A:middle
to No would give
you what you want.

00:23:53.726 --> 00:23:57.136 A:middle
Playground logging mode controls
the inline results that you see

00:23:57.136 --> 00:23:59.006 A:middle
on the right side of every line

00:23:59.006 --> 00:24:00.486 A:middle
in the editor that
returns a value.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:59.006 --> 00:24:00.486 A:middle
in the editor that
returns a value.

00:24:01.196 --> 00:24:04.736 A:middle
In my case, my live view does
all the results reporting

00:24:04.736 --> 00:24:05.266 A:middle
that I need.

00:24:05.266 --> 00:24:07.736 A:middle
So I decided to set the
PlaygroundLoggingMode

00:24:07.736 --> 00:24:09.026 A:middle
to the string value Off,

00:24:09.376 --> 00:24:11.636 A:middle
which turns off the
inline results completely.

00:24:11.716 --> 00:24:16.106 A:middle
Now we've reached
the interactive bits

00:24:16.106 --> 00:24:17.456 A:middle
of the Playground
document format.

00:24:17.456 --> 00:24:20.096 A:middle
This is where all
the fun happens.

00:24:20.516 --> 00:24:24.026 A:middle
Let's take a look at this first
one called Contents.swift.

00:24:24.756 --> 00:24:29.126 A:middle
Now, all of you have interacted
with Contents.swift before.

00:24:29.826 --> 00:24:32.386 A:middle
Whether it's full screen
or on the left-hand side

00:24:32.576 --> 00:24:33.936 A:middle
of the live view, as seen here,

00:24:34.506 --> 00:24:37.986 A:middle
whatever is in the editor
comes from Contents.swift.

00:24:37.986 --> 00:24:40.966 A:middle
And when you tap the Run
button, everything in this file

00:24:40.966 --> 00:24:43.276 A:middle
and everything it
references is executed.

00:24:43.816 --> 00:24:46.126 A:middle
In my introduction page,

00:24:46.396 --> 00:24:48.566 A:middle
Contents.swift looks
something like this.

00:24:48.976 --> 00:24:51.836 A:middle
At the top is Playground
Markup prose written

00:24:51.836 --> 00:24:53.426 A:middle
to help describe
what you can do.

00:24:53.426 --> 00:24:56.766 A:middle
Your objectives, goals,
instructions that are read

00:24:56.766 --> 00:24:58.326 A:middle
by the person going
through the page

00:24:58.596 --> 00:25:00.246 A:middle
to understand how they're
supposed to interact.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:58.596 --> 00:25:00.246 A:middle
to understand how they're
supposed to interact.

00:25:01.356 --> 00:25:03.206 A:middle
Those of you who've authored
Playgrounds before will

00:25:03.206 --> 00:25:03.926 A:middle
recognize this.

00:25:04.196 --> 00:25:06.596 A:middle
It's the standard
Playground Markup comments.

00:25:07.196 --> 00:25:10.776 A:middle
And here, I have a few lines
of code that are used to set

00:25:10.776 --> 00:25:13.456 A:middle
up the page so that the real
action can happen down below,

00:25:14.096 --> 00:25:15.606 A:middle
but I don't want this
part to be visible,

00:25:15.606 --> 00:25:16.846 A:middle
at least not on this page.

00:25:17.466 --> 00:25:20.376 A:middle
So I use these special magic
comments to mark the start

00:25:20.376 --> 00:25:21.766 A:middle
and end of a hidden code block.

00:25:22.306 --> 00:25:24.586 A:middle
Everything between these
two lines is tucked away.

00:25:25.216 --> 00:25:27.356 A:middle
It's executed along
with everything else,

00:25:27.676 --> 00:25:30.076 A:middle
but it is not visible
when you open this page

00:25:30.116 --> 00:25:31.666 A:middle
in Swift Playgrounds on iPad.

00:25:33.506 --> 00:25:35.896 A:middle
And the real work of the
Playground page is kicked off

00:25:35.896 --> 00:25:38.316 A:middle
with this statement, a
call to the Say function

00:25:38.316 --> 00:25:40.036 A:middle
that was written above
in the hidden code.

00:25:40.646 --> 00:25:43.706 A:middle
Now I wanted to ensure that
as the learner was sitting

00:25:43.706 --> 00:25:45.436 A:middle
down with this page
and filling things

00:25:45.436 --> 00:25:46.876 A:middle
into this function parameter

00:25:47.176 --> 00:25:49.086 A:middle
that they wouldn't accidentally
cause a compiler error.

00:25:49.816 --> 00:25:53.176 A:middle
So I'm using editable code
regions to be able to set

00:25:53.176 --> 00:25:55.836 A:middle
up with these special magic
comments the beginning

00:25:55.836 --> 00:25:57.956 A:middle
and ending of an
editable code block,

00:25:58.346 --> 00:26:00.226 A:middle
and they can only
type in this spot.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.346 --> 00:26:00.226 A:middle
and they can only
type in this spot.

00:26:01.026 --> 00:26:03.176 A:middle
You can have as many of these
as you want on the page.

00:26:03.576 --> 00:26:05.106 A:middle
And the first time
you introduce one,

00:26:05.346 --> 00:26:08.196 A:middle
only these areas can be
typed in, and it works great

00:26:08.196 --> 00:26:10.496 A:middle
for what I need, and the
learner can type away,

00:26:10.496 --> 00:26:11.926 A:middle
and they're just
affecting the string.

00:26:12.476 --> 00:26:16.206 A:middle
And experienced Playground
authors will notice this

00:26:16.206 --> 00:26:17.126 A:middle
placeholder syntax.

00:26:17.556 --> 00:26:21.066 A:middle
These angle brackets and
pound signs cause a bubble

00:26:21.066 --> 00:26:22.326 A:middle
to show up in the editor.

00:26:22.886 --> 00:26:24.846 A:middle
The learner can tap on the
bubble, and then as soon

00:26:24.846 --> 00:26:26.686 A:middle
as they start typing,
it replaces the contents

00:26:26.686 --> 00:26:27.556 A:middle
with whatever they wanted.

00:26:27.976 --> 00:26:29.946 A:middle
This is a great way to give
a clue of what is supposed

00:26:29.946 --> 00:26:31.786 A:middle
to go in a certain spot.

00:26:33.296 --> 00:26:36.846 A:middle
So that's a good summary of what
goes on inside Contents.swift,

00:26:37.236 --> 00:26:39.146 A:middle
a quick summary on
the left-hand side.

00:26:39.146 --> 00:26:40.876 A:middle
But now we're going
to turn our attention

00:26:40.876 --> 00:26:43.116 A:middle
over to the right-hand
side and what goes

00:26:43.116 --> 00:26:45.486 A:middle
on in the always-on live view.

00:26:47.096 --> 00:26:51.096 A:middle
This introduction page has
a file named LiveView.swift.

00:26:52.626 --> 00:26:53.676 A:middle
This is what it looks like.

00:26:54.406 --> 00:26:56.556 A:middle
First we import
PlaygroundSupport.

00:26:56.956 --> 00:26:59.216 A:middle
Now, those of you who've
authored Playgrounds before are

00:26:59.216 --> 00:27:02.426 A:middle
familiar with XE Playground, the
framework that gives you access


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.216 --> 00:27:02.426 A:middle
familiar with XE Playground, the
framework that gives you access

00:27:02.426 --> 00:27:03.656 A:middle
to the page environment.

00:27:04.106 --> 00:27:04.876 A:middle
That's been renamed.

00:27:04.966 --> 00:27:06.086 A:middle
It's been new and improved.

00:27:06.086 --> 00:27:07.576 A:middle
It's called Playground Support,

00:27:07.576 --> 00:27:09.046 A:middle
and this is what you
use going forward.

00:27:10.666 --> 00:27:13.246 A:middle
So we ask, for the
current Playground page,

00:27:13.766 --> 00:27:18.506 A:middle
and then we set the live
view property on that page

00:27:18.506 --> 00:27:22.136 A:middle
to be a fresh instance of this
thing called FaceViewController.

00:27:22.766 --> 00:27:24.596 A:middle
Where did this
FaceViewController come from?

00:27:25.156 --> 00:27:26.886 A:middle
Well, it's part of
the Swift code stored

00:27:26.886 --> 00:27:29.366 A:middle
in the Sources directory at
the root of the document.

00:27:29.876 --> 00:27:32.696 A:middle
This is the library of code
that I built up to be able

00:27:32.696 --> 00:27:34.496 A:middle
to share across all the pages.

00:27:34.766 --> 00:27:36.746 A:middle
Anything I put in here,
I can reference as long

00:27:36.746 --> 00:27:37.716 A:middle
as it's marked as public.

00:27:39.266 --> 00:27:41.026 A:middle
Now, you could, if you want to,

00:27:41.126 --> 00:27:45.456 A:middle
write all of your live view code
inside the LiveView.swift file.

00:27:45.456 --> 00:27:46.936 A:middle
There's nothing stopping
you from doing that.

00:27:47.466 --> 00:27:49.556 A:middle
But then you have
to copy that file

00:27:49.556 --> 00:27:51.836 A:middle
to any other Playground
Book page that needs

00:27:51.836 --> 00:27:53.666 A:middle
to share the same
live view behavior.

00:27:53.976 --> 00:27:56.006 A:middle
Every page in my Playground
Book document does,

00:27:56.306 --> 00:27:58.946 A:middle
so I'm just using these
three lines as, like,

00:27:58.946 --> 00:28:01.496 A:middle
setup that make the
Playground --


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.946 --> 00:28:01.496 A:middle
setup that make the
Playground --

00:28:01.636 --> 00:28:03.556 A:middle
make the always-on
live view run.

00:28:03.556 --> 00:28:05.256 A:middle
They're all sharing
the FaceViewController,

00:28:05.256 --> 00:28:06.786 A:middle
and I just have to
copy this file

00:28:07.006 --> 00:28:09.546 A:middle
across to any other page
that needs to use it.

00:28:10.596 --> 00:28:13.466 A:middle
Those of you who've authored
Playgrounds before may feel

00:28:13.466 --> 00:28:15.856 A:middle
like you're looking at something
familiar with this code.

00:28:16.416 --> 00:28:18.336 A:middle
Isn't this how you would
set up the live view

00:28:18.336 --> 00:28:20.676 A:middle
if you were doing it from
within Contents.swift?

00:28:21.816 --> 00:28:24.416 A:middle
Yes, it is, and you can
still do it this way.

00:28:24.836 --> 00:28:27.926 A:middle
If you choose to, it runs
inside the main process,

00:28:28.606 --> 00:28:30.946 A:middle
where all the code in the
editor is run as well.

00:28:31.116 --> 00:28:33.846 A:middle
That is really useful,
since you have full access

00:28:33.846 --> 00:28:35.376 A:middle
to the live view object.

00:28:35.626 --> 00:28:39.596 A:middle
You can take page.liveview,
cast it to FaceViewController,

00:28:39.796 --> 00:28:41.306 A:middle
and manipulate it
like anything else.

00:28:41.496 --> 00:28:43.186 A:middle
Call methods on it,
change properties.

00:28:43.186 --> 00:28:44.836 A:middle
It's right there
inside your process.

00:28:45.756 --> 00:28:48.246 A:middle
But that means that the live
view is only active as long

00:28:48.246 --> 00:28:50.086 A:middle
as the code in the
editor is running.

00:28:50.456 --> 00:28:53.596 A:middle
It will not start until the
learner taps Run My Code.

00:28:53.596 --> 00:28:56.936 A:middle
It will stop as soon as
the learner taps Stop

00:28:56.936 --> 00:28:58.536 A:middle
or starts typing
into the editor.

00:28:58.916 --> 00:29:02.366 A:middle
And it can't run if there's
a compiler error in the code


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:58.916 --> 00:29:02.366 A:middle
And it can't run if there's
a compiler error in the code

00:29:02.506 --> 00:29:04.226 A:middle
that is currently being
typed into the editor.

00:29:05.116 --> 00:29:09.546 A:middle
So that is where the
always-on live view

00:29:09.746 --> 00:29:11.636 A:middle
and LiveView.swift comes in.

00:29:11.636 --> 00:29:15.146 A:middle
If this file -- if a file with
the name LiveView.swift is

00:29:15.146 --> 00:29:16.646 A:middle
in your Playground Book page,

00:29:17.166 --> 00:29:19.736 A:middle
you automatically have
an always-on live view.

00:29:20.006 --> 00:29:22.486 A:middle
This file is executed as
soon as the page is opened,

00:29:22.966 --> 00:29:25.026 A:middle
and that makes it run
in a separate process,

00:29:25.026 --> 00:29:28.216 A:middle
which is awesome, because that
means it's running all the time.

00:29:29.636 --> 00:29:32.456 A:middle
Even if the code in the editor
isn't running or can't compile.

00:29:33.316 --> 00:29:36.746 A:middle
The trade-off is that you
can't just cast the live view

00:29:36.746 --> 00:29:39.056 A:middle
to an instance of
FaceViewController and talk

00:29:39.056 --> 00:29:40.326 A:middle
to it like you were
doing before.

00:29:40.736 --> 00:29:43.606 A:middle
You have to use some sort
of cross process mechanism

00:29:43.606 --> 00:29:46.026 A:middle
to send messages back and
forth, and we're going

00:29:46.026 --> 00:29:48.416 A:middle
to look into that next here.

00:29:48.656 --> 00:29:50.956 A:middle
Say we have this code
in the main process

00:29:51.406 --> 00:29:54.036 A:middle
from Contents.swift,
the main process

00:29:54.036 --> 00:29:55.126 A:middle
of the code running
in the editor.

00:29:56.586 --> 00:29:58.576 A:middle
We want to send the
string "knock,

00:29:58.576 --> 00:29:59.686 A:middle
knock" to the other side.

00:29:59.686 --> 00:30:01.836 A:middle
So first thing we do is
import PlaygroundSupport.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.686 --> 00:30:01.836 A:middle
So first thing we do is
import PlaygroundSupport.

00:30:02.656 --> 00:30:04.296 A:middle
We get access to
the current page.

00:30:04.846 --> 00:30:07.596 A:middle
And when we ask for the
live view of the page,

00:30:07.716 --> 00:30:10.176 A:middle
we don't cast it to
FaceViewController.

00:30:10.616 --> 00:30:12.356 A:middle
We cast it to this
special class called

00:30:12.356 --> 00:30:14.346 A:middle
PlaygroundRemoteLiveViewProxy.

00:30:15.296 --> 00:30:17.436 A:middle
The instance of this class
is what does the work

00:30:17.886 --> 00:30:20.896 A:middle
to hand things across the wire
between the two processes.

00:30:21.236 --> 00:30:23.666 A:middle
And if this conditional
cast succeeds,

00:30:23.946 --> 00:30:26.646 A:middle
then that is your queue
inside the code that would run

00:30:26.646 --> 00:30:29.746 A:middle
in the main process that you
have an always-on live view

00:30:29.796 --> 00:30:30.536 A:middle
for this page.

00:30:30.746 --> 00:30:31.756 A:middle
Use this as that signal.

00:30:32.406 --> 00:30:34.906 A:middle
So assuming this all
worked, we've casted it.

00:30:34.946 --> 00:30:37.596 A:middle
We actually have a live view
running, and we have the proxy.

00:30:38.516 --> 00:30:39.496 A:middle
We craft a message.

00:30:40.876 --> 00:30:43.606 A:middle
The message-sending mechanism
uses PlaygroundValue,

00:30:43.606 --> 00:30:46.826 A:middle
an enum that we'll kind of talk
about a bit more in a moment.

00:30:47.086 --> 00:30:49.256 A:middle
But as you can probably guess
by looking at this line,

00:30:49.256 --> 00:30:52.876 A:middle
we're casting a string case with
the associated string literal

00:30:52.876 --> 00:30:55.326 A:middle
"knock, knock," and then
we take that message,

00:30:55.326 --> 00:30:57.216 A:middle
and hand it over to the proxy,

00:30:57.736 --> 00:30:59.666 A:middle
calling the send
method passing it in.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:00.246 --> 00:31:05.376 A:middle
So the Contents.swift code
hands that string value

00:31:05.376 --> 00:31:09.776 A:middle
over to the live view proxy, and
then the live view proxy passes

00:31:09.776 --> 00:31:14.106 A:middle
that over to something
listening on the other side.

00:31:14.266 --> 00:31:16.136 A:middle
We need to wire up
the FaceViewController

00:31:16.136 --> 00:31:19.366 A:middle
so we can receive this message.

00:31:19.696 --> 00:31:21.396 A:middle
Somewhere in our
library of code,

00:31:22.146 --> 00:31:24.116 A:middle
we've extended the
FaceViewController,

00:31:24.236 --> 00:31:25.956 A:middle
and we've said that
it will conform

00:31:25.956 --> 00:31:28.396 A:middle
to the
PlaygroundLiveViewMessageHandler

00:31:28.396 --> 00:31:28.956 A:middle
protocol.

00:31:29.366 --> 00:31:31.906 A:middle
That means we must
implement the received method

00:31:32.166 --> 00:31:33.376 A:middle
that takes a PlaygroundValue.

00:31:33.946 --> 00:31:38.516 A:middle
This will be called, because
this FaceViewController is the

00:31:38.516 --> 00:31:40.686 A:middle
live view, because
we assigned this

00:31:40.686 --> 00:31:42.506 A:middle
to the page.liveview property.

00:31:42.796 --> 00:31:45.556 A:middle
That's what the live view
proxy knows as the queue

00:31:45.976 --> 00:31:47.696 A:middle
that this thing needs
to receive the message.

00:31:48.836 --> 00:31:51.786 A:middle
Inside this message, we
take the message parameter,

00:31:51.786 --> 00:31:53.946 A:middle
and check to see
what enum case it is,

00:31:53.946 --> 00:31:55.416 A:middle
extracting any associated
values.

00:31:55.776 --> 00:31:58.166 A:middle
I only care about strings right
now, so we'll just use the

00:31:58.166 --> 00:32:02.256 A:middle
if case let syntax, and then
once we do that, if true,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.166 --> 00:32:02.256 A:middle
if case let syntax, and then
once we do that, if true,

00:32:02.496 --> 00:32:05.316 A:middle
the value of this enum is
bound to the identifier text.

00:32:06.136 --> 00:32:08.356 A:middle
And now, inside the if
clause, we have a string.

00:32:08.916 --> 00:32:09.866 A:middle
Do something with it.

00:32:10.216 --> 00:32:11.816 A:middle
And in this case, we pass it off

00:32:11.816 --> 00:32:14.066 A:middle
to this function
processConversationLine

00:32:14.436 --> 00:32:16.976 A:middle
that then advances Em's
conversation state machine.

00:32:17.546 --> 00:32:21.926 A:middle
So what if we want to
send data the other way,

00:32:21.926 --> 00:32:22.876 A:middle
from the live view?

00:32:23.186 --> 00:32:25.286 A:middle
Say we set up something
where you tap on the face,

00:32:25.286 --> 00:32:27.586 A:middle
and we get the string
"hello" sent back?

00:32:28.196 --> 00:32:31.156 A:middle
How do we do that?

00:32:31.506 --> 00:32:34.036 A:middle
Well first, in the live view
process, you need a mechanism

00:32:34.036 --> 00:32:36.486 A:middle
that actually triggers the
sending, and I've chosen

00:32:36.836 --> 00:32:39.766 A:middle
to have a tap gesture
recognizer set up on the face

00:32:39.836 --> 00:32:41.816 A:middle
that will call us back
on this tapped method.

00:32:42.456 --> 00:32:43.676 A:middle
Once you tap on the face,

00:32:43.676 --> 00:32:47.866 A:middle
we craft the PlaygroundValue
message we want to send a string

00:32:47.866 --> 00:32:51.876 A:middle
with the associated literal
"hello," and then we call send

00:32:52.006 --> 00:32:55.996 A:middle
on self, passing this
message to the other side.

00:32:55.996 --> 00:32:57.716 A:middle
Now, where did the
send method come from?

00:32:58.326 --> 00:33:00.846 A:middle
Well, by declaring
that we conform


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.326 --> 00:33:00.846 A:middle
Well, by declaring
that we conform

00:33:00.846 --> 00:33:02.846 A:middle
to this
PlaygroundLiveViewMessageHandler

00:33:02.846 --> 00:33:05.016 A:middle
protocol, it was
bolted on to our class

00:33:05.016 --> 00:33:06.536 A:middle
as a convenience, automatically.

00:33:07.366 --> 00:33:09.516 A:middle
Send is defined in
the protocol extension

00:33:09.586 --> 00:33:10.996 A:middle
with a default implementation,

00:33:10.996 --> 00:33:14.966 A:middle
and because this class is
the live view, calling send

00:33:14.966 --> 00:33:17.676 A:middle
like this will just pass it
right to the live view proxy,

00:33:17.886 --> 00:33:21.946 A:middle
and it will make its way over
to the other side, like so.

00:33:22.496 --> 00:33:23.576 A:middle
You tap on the face.

00:33:24.266 --> 00:33:26.796 A:middle
"Hello" is crafted, sent
to the live view proxy,

00:33:27.626 --> 00:33:30.276 A:middle
and now then live view
proxy has to deliver

00:33:30.276 --> 00:33:33.216 A:middle
that to something
listening on the other side.

00:33:33.736 --> 00:33:35.326 A:middle
Let's see how we could
wire that up next.

00:33:36.426 --> 00:33:39.906 A:middle
There's a bit of set up we
have to do, because by default,

00:33:40.236 --> 00:33:41.276 A:middle
code that you write

00:33:41.276 --> 00:33:43.936 A:middle
in Contents.swift will
stop executing as soon

00:33:43.936 --> 00:33:45.416 A:middle
as it reaches the
last statement.

00:33:45.736 --> 00:33:47.566 A:middle
That's not what we
want in this case.

00:33:47.946 --> 00:33:50.936 A:middle
We're waiting for some sort of
asynchronous message to come

00:33:50.936 --> 00:33:52.216 A:middle
at some later point in time,

00:33:52.616 --> 00:33:54.836 A:middle
so we need to first grab
the Playground page,

00:33:54.886 --> 00:33:57.366 A:middle
and then tell it that
we don't want it to stop

00:33:57.836 --> 00:33:59.796 A:middle
by setting the
needsIndefiniteExecution

00:33:59.796 --> 00:34:00.676 A:middle
property to true.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.796 --> 00:34:00.676 A:middle
property to true.

00:34:02.166 --> 00:34:04.716 A:middle
We asked for the live view
proxy, just like we did before,

00:34:05.136 --> 00:34:07.016 A:middle
and now we need to have
something that acts

00:34:07.016 --> 00:34:09.946 A:middle
as the delegate of that proxy
that can receive the message.

00:34:09.985 --> 00:34:11.835 A:middle
I'm just going to make
something up here.

00:34:12.166 --> 00:34:13.565 A:middle
A class right in line.

00:34:14.525 --> 00:34:15.516 A:middle
Notice that it conforms

00:34:15.516 --> 00:34:18.366 A:middle
to the PlaygroundRemote
LiveViewProxyDelegate protocol,

00:34:18.616 --> 00:34:21.596 A:middle
which means I have to implement
the remoteLiveViewProxy

00:34:21.596 --> 00:34:22.456 A:middle
received method.

00:34:23.286 --> 00:34:23.876 A:middle
And that's it.

00:34:24.255 --> 00:34:26.456 A:middle
This will be called
by the live view proxy

00:34:26.456 --> 00:34:30.376 A:middle
with the Playground value that
we can take apart using the

00:34:30.376 --> 00:34:31.596 A:middle
if case let statement,

00:34:32.005 --> 00:34:34.166 A:middle
and inside we do
something with the text.

00:34:35.826 --> 00:34:37.696 A:middle
That defines the delegate.

00:34:37.696 --> 00:34:38.726 A:middle
Now we have to wire it up.

00:34:38.936 --> 00:34:41.056 A:middle
So we'll instantiate
it, and then assign it

00:34:41.436 --> 00:34:44.036 A:middle
to the proxy's delegate
parameter, or delegate property,

00:34:44.496 --> 00:34:45.676 A:middle
and that completes the circle.

00:34:46.446 --> 00:34:48.286 A:middle
So now we have the
FaceViewController.

00:34:48.496 --> 00:34:49.525 A:middle
You tap on the face.

00:34:49.846 --> 00:34:52.466 A:middle
"Hello" is wrapped up
as a PlaygroundValue,

00:34:52.466 --> 00:34:55.516 A:middle
passed into the live view
proxy, where it passes it off

00:34:55.556 --> 00:34:58.176 A:middle
to the delegate, that
class that we just created,

00:34:58.346 --> 00:35:01.336 A:middle
and it receives the message, and
then you make the magic happen.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:58.346 --> 00:35:01.336 A:middle
and it receives the message, and
then you make the magic happen.

00:35:02.056 --> 00:35:07.416 A:middle
I want to quickly point out this
PlaygroundValue enum gives us a

00:35:07.416 --> 00:35:11.066 A:middle
lot of options to statically
declare primitive values

00:35:11.066 --> 00:35:12.976 A:middle
that we want to be able
to send back and forth

00:35:13.006 --> 00:35:14.346 A:middle
between these two processes.

00:35:14.996 --> 00:35:17.736 A:middle
You can use these enum cases
directly, like we've seen

00:35:17.846 --> 00:35:18.796 A:middle
in the last few slides.

00:35:19.326 --> 00:35:21.536 A:middle
Or you can define
conversion operations

00:35:21.956 --> 00:35:25.896 A:middle
into Playground values from
your own data structures.

00:35:26.346 --> 00:35:30.416 A:middle
As an added bonus, the key
value store uses Playground

00:35:30.416 --> 00:35:31.236 A:middle
values too.

00:35:31.236 --> 00:35:34.356 A:middle
So the work done to get
your data into and out

00:35:34.356 --> 00:35:38.066 A:middle
of this model can be used both
for cross process communication

00:35:38.476 --> 00:35:40.006 A:middle
and for saving statement.

00:35:41.576 --> 00:35:45.976 A:middle
So remember, Contents.swift
is in a process running

00:35:45.976 --> 00:35:47.346 A:middle
on the left-hand side.

00:35:47.346 --> 00:35:49.306 A:middle
It's what we call
the main process.

00:35:49.906 --> 00:35:52.776 A:middle
And if you have a
LiveView.swift file

00:35:52.776 --> 00:35:56.136 A:middle
in your Playground Book page,
it will be executed and run

00:35:56.136 --> 00:35:58.776 A:middle
in the separate always-on
live view

00:35:59.116 --> 00:36:01.146 A:middle
in the process you
see here on the right.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.116 --> 00:36:01.146 A:middle
in the process you
see here on the right.

00:36:01.146 --> 00:36:04.586 A:middle
It's a different mechanism that
we had before, so please dig

00:36:04.586 --> 00:36:07.096 A:middle
into our reference
examples and documentation

00:36:07.096 --> 00:36:08.126 A:middle
to see how this thing works

00:36:08.126 --> 00:36:12.116 A:middle
so you can take advantage
of the new goodies.

00:36:12.116 --> 00:36:13.996 A:middle
Before we reach the
end of our discussion

00:36:13.996 --> 00:36:16.506 A:middle
about authoring Playground
Books, I want to point

00:36:16.506 --> 00:36:18.916 A:middle
out one last detail
that you will notice

00:36:18.946 --> 00:36:20.676 A:middle
as an author of content.

00:36:21.386 --> 00:36:24.946 A:middle
When you play with your
great idea on your iPad,

00:36:25.476 --> 00:36:27.936 A:middle
and then you sync it back to
your Mac and take a look at it,

00:36:27.936 --> 00:36:31.206 A:middle
you'll notice at the top
level a new folder will show

00:36:31.206 --> 00:36:32.886 A:middle
up at the sibling
level with Contents.

00:36:33.446 --> 00:36:35.646 A:middle
This is where all
the changes typed

00:36:35.756 --> 00:36:37.316 A:middle
into the editor are stored.

00:36:37.586 --> 00:36:41.056 A:middle
So don't be shocked when you
go and play with your content

00:36:41.056 --> 00:36:44.126 A:middle
on your iPad, typing furiously
and changing a bunch of things

00:36:44.126 --> 00:36:47.026 A:middle
in the editor, and you think
it goes into Contents.swift,

00:36:47.026 --> 00:36:49.036 A:middle
but when you bring it back
to look at it on your Mac,

00:36:49.486 --> 00:36:51.556 A:middle
the Contents.swift
file looks just

00:36:51.556 --> 00:36:52.646 A:middle
like you authored it before.

00:36:52.646 --> 00:36:54.036 A:middle
Where's all the changes
you made?

00:36:54.526 --> 00:36:55.686 A:middle
That's by design.

00:36:56.846 --> 00:36:59.206 A:middle
The authored content
is never changed

00:36:59.306 --> 00:37:00.756 A:middle
by Swift Playgrounds
on the iPad.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:59.306 --> 00:37:00.756 A:middle
by Swift Playgrounds
on the iPad.

00:37:01.676 --> 00:37:04.176 A:middle
Swift Playgrounds stores a
dif of the learner's changes

00:37:04.176 --> 00:37:06.556 A:middle
in this Edits folder, and
we reapply it when we can,

00:37:06.996 --> 00:37:08.886 A:middle
and this keeps the
content pristine,

00:37:08.886 --> 00:37:11.066 A:middle
and it's how the Playground
Books are resettable.

00:37:11.686 --> 00:37:17.036 A:middle
So that is a very
brief overview,

00:37:17.266 --> 00:37:19.286 A:middle
a subset of the underlying
bits that make

00:37:19.286 --> 00:37:21.216 A:middle
up the new Playground
Book format.

00:37:21.646 --> 00:37:24.676 A:middle
As mentioned, please go
to developer.apple.com,

00:37:25.196 --> 00:37:26.896 A:middle
grab the reference
documentation,

00:37:26.896 --> 00:37:29.426 A:middle
the examples we have, take apart
the Playground Books produced

00:37:29.426 --> 00:37:30.366 A:middle
by our content team.

00:37:30.366 --> 00:37:31.216 A:middle
It's all there, and we want

00:37:31.216 --> 00:37:33.576 A:middle
to make sure you have
the resources you need

00:37:33.576 --> 00:37:34.826 A:middle
to make awesome stuff.

00:37:36.086 --> 00:37:39.606 A:middle
Now I've led you through
a part of the experience

00:37:39.606 --> 00:37:42.306 A:middle
that an author has when they're
crafting these Playground Books.

00:37:42.986 --> 00:37:46.176 A:middle
But as you'd expect, this app
is just plain fun to doodle

00:37:46.176 --> 00:37:48.356 A:middle
with on your own as
some sort of scratchpad.

00:37:48.416 --> 00:37:49.336 A:middle
It's great stuff.

00:37:49.966 --> 00:37:53.216 A:middle
And next, I'd like to invite
my colleague Izzy to show some

00:37:53.216 --> 00:37:54.836 A:middle
of the things that
he has been exploring

00:37:54.836 --> 00:37:56.026 A:middle
with Swift Playgrounds.

00:37:56.406 --> 00:37:56.706 A:middle
Izzy.

00:37:57.061 --> 00:37:59.061 A:middle
[ Applause ]

00:37:59.106 --> 00:37:59.896 A:middle
Thank you Jonathan.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:02.596 --> 00:38:03.256 A:middle
Thank you Jonathan.

00:38:03.306 --> 00:38:03.836 A:middle
That was awesome.

00:38:05.056 --> 00:38:07.876 A:middle
Now, we're going to jump
straight into our demo.

00:38:11.976 --> 00:38:16.036 A:middle
So like all of you, I've
just been so excited by all

00:38:16.036 --> 00:38:17.066 A:middle
of the features and
all of the APIs

00:38:17.066 --> 00:38:18.856 A:middle
that have been announced
since Monday.

00:38:19.506 --> 00:38:23.436 A:middle
And in particular,
one area of coding

00:38:23.436 --> 00:38:26.116 A:middle
that I was really interested
in, as long as I can remember,

00:38:26.116 --> 00:38:27.806 A:middle
is procedural content
generation.

00:38:28.116 --> 00:38:30.696 A:middle
The idea that a computer can
generate something that is

00:38:30.696 --> 00:38:33.876 A:middle
like a real world is
just fascinating to me.

00:38:34.156 --> 00:38:37.516 A:middle
So when I saw that GameKit
added API specifically for this,

00:38:37.516 --> 00:38:40.596 A:middle
I wanted to jump right in and
get my hands dirty, so I did.

00:38:40.996 --> 00:38:45.076 A:middle
I wasn't quite sure what
I needed, but I looked

00:38:45.936 --> 00:38:48.026 A:middle
at the new APIs, and I saw

00:38:48.026 --> 00:38:50.726 A:middle
that they added this function
called GKPerlinNoiseSource,

00:38:50.786 --> 00:38:52.606 A:middle
and we have help in the app

00:38:52.726 --> 00:38:54.826 A:middle
that shows us all of
the documentation.

00:38:54.826 --> 00:38:55.956 A:middle
So if I tap Help here,

00:38:56.456 --> 00:39:00.956 A:middle
we can see that
GKPerlinNoiseSource has features


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:56.456 --> 00:39:00.956 A:middle
we can see that
GKPerlinNoiseSource has features

00:39:00.956 --> 00:39:03.926 A:middle
that make it good for
generating natural phenomenon,

00:39:03.926 --> 00:39:05.016 A:middle
such as clouds and terrains.

00:39:05.016 --> 00:39:07.926 A:middle
That sounds like
exactly what I wanted.

00:39:07.926 --> 00:39:10.246 A:middle
So I took this, and I just
wrote a couple lines of code,

00:39:10.466 --> 00:39:11.796 A:middle
and I turned it into an image.

00:39:12.066 --> 00:39:13.636 A:middle
So I wanted to look at my image.

00:39:14.606 --> 00:39:17.066 A:middle
So if we run our playground --
for those of you who are used

00:39:17.066 --> 00:39:19.466 A:middle
to Playgrounds on the
desktop, you'll notice

00:39:19.746 --> 00:39:21.486 A:middle
on the right-hand side,
we have a result sidebar.

00:39:21.486 --> 00:39:23.476 A:middle
For those of you who
haven't seen this before,

00:39:23.666 --> 00:39:27.796 A:middle
as your playground executes,
each lines generates a result.

00:39:28.006 --> 00:39:29.456 A:middle
And we can tap on this,

00:39:29.856 --> 00:39:33.486 A:middle
and it'll show a little
popover with our content.

00:39:33.486 --> 00:39:37.306 A:middle
Now this a little bit small, so
I wrote a few more lines just

00:39:37.596 --> 00:39:40.756 A:middle
to zoom in a little bit and
keep it pixely, because I want

00:39:40.756 --> 00:39:41.696 A:middle
to think about the pixels.

00:39:41.696 --> 00:39:43.236 A:middle
We're going to talk
about that in a minute.

00:39:43.786 --> 00:39:47.046 A:middle
So now, I have a much bigger
image, and we can add this

00:39:47.046 --> 00:39:50.606 A:middle
in line with the Add
Viewer button, and it stays

00:39:50.746 --> 00:39:52.306 A:middle
with our code as we scroll.

00:39:53.576 --> 00:39:56.166 A:middle
So now that this is
large, we want to reason

00:39:56.166 --> 00:39:57.526 A:middle
about our image a little bit.

00:39:57.526 --> 00:39:58.596 A:middle
So we generated our noise,

00:39:58.596 --> 00:40:00.976 A:middle
and we want to generate
some 3D terrain with this.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:58.596 --> 00:40:00.976 A:middle
and we want to generate
some 3D terrain with this.

00:40:01.196 --> 00:40:04.346 A:middle
So what we're going to do is
we're going to go pixel by pixel

00:40:04.406 --> 00:40:08.326 A:middle
through this image, and
when the image is dark,

00:40:08.326 --> 00:40:10.826 A:middle
we want it to be a very
low area in our 3D terrain.

00:40:10.826 --> 00:40:12.066 A:middle
And when the image is bright,

00:40:12.066 --> 00:40:14.626 A:middle
we want that to be a very
high image in our terrain.

00:40:14.886 --> 00:40:16.816 A:middle
So you can see in the
upper right-hand corner,

00:40:16.816 --> 00:40:19.506 A:middle
it's a very sort of dark area,
and that's going to be low.

00:40:19.506 --> 00:40:21.196 A:middle
And in the bottom left
corner, it's bright,

00:40:21.196 --> 00:40:22.656 A:middle
so it's going to be high.

00:40:22.886 --> 00:40:27.906 A:middle
So I wrote a just little
small extension on UI image.

00:40:28.246 --> 00:40:31.256 A:middle
It takes an 8-bit grayscale
image, and it just iterates

00:40:31.256 --> 00:40:33.806 A:middle
through the rows and the
columns, and it calls a block

00:40:33.806 --> 00:40:38.426 A:middle
for every position with the
8-bit value at that position,

00:40:38.776 --> 00:40:40.416 A:middle
which we're going to
convert into our height.

00:40:41.236 --> 00:40:45.686 A:middle
Now, because we have a very
small image, it's just 10 by 10,

00:40:45.686 --> 00:40:50.616 A:middle
255 for the full range of 8-bit
images sounds a little bit high.

00:40:50.616 --> 00:40:52.506 A:middle
So I wrote a small bucket
function right here,

00:40:52.806 --> 00:40:55.456 A:middle
and just to prove to myself
that worked, I iterated all

00:40:55.456 --> 00:41:00.226 A:middle
of the possible values of
my bucket, of my integer,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:55.456 --> 00:41:00.226 A:middle
of the possible values of
my bucket, of my integer,

00:41:00.606 --> 00:41:05.406 A:middle
and you can see with our
popover here that it clamps

00:41:05.446 --> 00:41:06.806 A:middle
to a nice stair step function.

00:41:07.146 --> 00:41:12.066 A:middle
So we just get a range from
0 to 4, instead of 0 to 255.

00:41:12.066 --> 00:41:15.326 A:middle
And then we can go over
our image with our block,

00:41:15.666 --> 00:41:18.206 A:middle
and then we end up with a graph
that looks kind of like this.

00:41:19.176 --> 00:41:20.856 A:middle
And this is interesting.

00:41:20.856 --> 00:41:25.206 A:middle
It's kind of cool looking, but
it's not really 3D terrain.

00:41:25.206 --> 00:41:27.056 A:middle
Like, you can see each point

00:41:27.056 --> 00:41:29.466 A:middle
in our image now has an
associated height value,

00:41:29.856 --> 00:41:33.446 A:middle
but it's not exactly
what I wanted to.

00:41:33.446 --> 00:41:35.866 A:middle
And normally, I would
be pretty stuck here.

00:41:35.866 --> 00:41:40.006 A:middle
I don't have the deep knowledge
of 3D APIs to really generate

00:41:40.346 --> 00:41:42.416 A:middle
from scratch the
terrain that I wanted,

00:41:42.526 --> 00:41:47.226 A:middle
and I don't have the 3D skills
as an artist to do this by hand,

00:41:47.616 --> 00:41:48.836 A:middle
but I happen to know
that the Learn

00:41:48.836 --> 00:41:53.136 A:middle
to Code playground has a
Build Your World page in it

00:41:53.136 --> 00:41:56.986 A:middle
that I can use to progress
my experiment here.

00:41:57.106 --> 00:41:59.306 A:middle
So I'm going to move over into
the Learn to Code playground,

00:41:59.736 --> 00:42:01.836 A:middle
and we're going to already
be on the page that I want.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.736 --> 00:42:01.836 A:middle
and we're going to already
be on the page that I want.

00:42:02.416 --> 00:42:04.136 A:middle
So this is the Create
Your World page,

00:42:04.566 --> 00:42:06.236 A:middle
and if I just run
this really quickly,

00:42:07.046 --> 00:42:09.826 A:middle
you can see that we're just
floating in the clouds here.

00:42:10.916 --> 00:42:13.196 A:middle
So I'm going to paste the
code that I wrote before,

00:42:14.136 --> 00:42:16.176 A:middle
and I want to type for a
minute, so I'm just going

00:42:16.176 --> 00:42:16.996 A:middle
to hide the live view.

00:42:17.576 --> 00:42:20.806 A:middle
And here, where we have our --

00:42:21.346 --> 00:42:24.826 A:middle
where we just echoing
our value before,

00:42:24.826 --> 00:42:28.846 A:middle
we want to turn this
into a 3D world.

00:42:29.326 --> 00:42:33.886 A:middle
So what we want to do is our
Create Your World page provides

00:42:33.886 --> 00:42:34.616 A:middle
us with a world.

00:42:35.076 --> 00:42:42.566 A:middle
So in our world, we want
to place blocks at the x

00:42:42.646 --> 00:42:44.006 A:middle
and y value that we're at.

00:42:44.276 --> 00:42:45.966 A:middle
And we're not taking
into account value,

00:42:46.086 --> 00:42:47.996 A:middle
so we need to make a height,

00:42:48.146 --> 00:42:54.826 A:middle
and we want to call our
bucket function on our value,

00:42:56.126 --> 00:43:05.206 A:middle
and then for our height, we
want to place our blocks.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:56.126 --> 00:43:05.206 A:middle
and then for our height, we
want to place our blocks.

00:43:06.516 --> 00:43:08.836 A:middle
And I just love this
animation, so I'm going

00:43:08.836 --> 00:43:09.546 A:middle
to do it one more time.

00:43:10.706 --> 00:43:11.776 A:middle
Then if we run this

00:43:17.736 --> 00:43:21.936 A:middle
oh. We forgot to add
our parens, like Max.

00:43:23.276 --> 00:43:27.876 A:middle
So if we run this, you can see

00:43:27.876 --> 00:43:30.886 A:middle
that we're putting
blocks in our world.

00:43:31.776 --> 00:43:32.716 A:middle
And I can see pretty quickly

00:43:32.716 --> 00:43:34.176 A:middle
that this isn't quite
what I expected.

00:43:34.176 --> 00:43:37.206 A:middle
There's these weird
blanks spots in my world,

00:43:37.796 --> 00:43:38.886 A:middle
and I don't want that.

00:43:38.886 --> 00:43:41.216 A:middle
I'm not generating a fantasy
world of flying islands.

00:43:41.216 --> 00:43:42.806 A:middle
I want to generate something
that looks like Earth.

00:43:43.306 --> 00:43:45.026 A:middle
So let's stop that
really quickly.

00:43:45.176 --> 00:43:48.636 A:middle
So these blank spots didn't
really make sense to me

00:43:48.636 --> 00:43:50.586 A:middle
at first, but after a
little bit of thinking,

00:43:51.056 --> 00:43:53.856 A:middle
it's clear that when our height
is 0, because your range is

00:43:53.856 --> 00:43:55.706 A:middle
from 0 to 4 and not 1 to 5,

00:43:55.926 --> 00:43:57.576 A:middle
we're just not putting
a block in.

00:43:57.886 --> 00:44:00.456 A:middle
So our 0 spot seemed like a
good place to put some water.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:57.886 --> 00:44:00.456 A:middle
So our 0 spot seemed like a
good place to put some water.

00:44:01.406 --> 00:44:08.806 A:middle
So if our height is less
than 1 in our world,

00:44:09.256 --> 00:44:14.116 A:middle
we want to place water.

00:44:17.476 --> 00:44:21.906 A:middle
And now, if I tap If with our
structured editing helpers,

00:44:21.966 --> 00:44:23.186 A:middle
we can add an L statement,

00:44:23.626 --> 00:44:26.786 A:middle
and just do what we
were doing before.

00:44:27.326 --> 00:44:32.136 A:middle
And this, I want to speed
it up just a little bit.

00:44:32.136 --> 00:44:35.136 A:middle
So my world also
has a command speed,

00:44:36.496 --> 00:44:40.656 A:middle
and I just want to
crank that up.

00:44:40.806 --> 00:44:40.956 A:middle
Let's

00:44:43.956 --> 00:44:45.906 A:middle
Oh, perfect.

00:44:46.286 --> 00:44:54.186 A:middle
All right, so let's run
this and see what happens.

00:44:54.526 --> 00:44:55.956 A:middle
So now you can see
our world has water.

00:44:57.006 --> 00:44:59.646 A:middle
So this is pretty cool.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:00.516 --> 00:45:05.996 A:middle
[ Applause ]

00:45:06.496 --> 00:45:09.776 A:middle
We went from just sketching with
an API and a blank playground,

00:45:10.256 --> 00:45:11.776 A:middle
and then when we
hit a roadblock,

00:45:11.776 --> 00:45:14.296 A:middle
we moved over into the
Learn to Code playground.

00:45:14.666 --> 00:45:17.336 A:middle
So the Learn to Code
playground, while it's a very,

00:45:17.336 --> 00:45:20.176 A:middle
very valuable tool for learners,
it's also a powerful platform

00:45:20.216 --> 00:45:22.776 A:middle
for seasoned developers
who want to explore APIs

00:45:22.776 --> 00:45:24.776 A:middle
and develop ideas against.

00:45:25.206 --> 00:45:27.236 A:middle
So that was pretty cool.

00:45:27.496 --> 00:45:31.686 A:middle
Now you have the spectrum of
iOS APIs available to you,

00:45:31.686 --> 00:45:33.626 A:middle
and that includes things
like Core Bluetooth.

00:45:33.746 --> 00:45:36.226 A:middle
So I'm going to switch over to
this other iPad really quickly.

00:45:36.766 --> 00:45:42.816 A:middle
And here, I have a playground
that uses core Bluetooth

00:45:43.396 --> 00:45:45.256 A:middle
to talk to a peripheral.

00:45:45.866 --> 00:45:55.416 A:middle
I have a Sphero SPRK Plus here,
and what we can do is I'm going

00:45:55.416 --> 00:45:56.476 A:middle
to place this on the ground,

00:45:56.476 --> 00:45:57.856 A:middle
because we need a
little bit of space.

00:45:58.236 --> 00:46:03.326 A:middle
But what we can do,
when I run my code,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:58.236 --> 00:46:03.326 A:middle
But what we can do,
when I run my code,

00:46:03.916 --> 00:46:10.516 A:middle
the Sphero will light
up and start driving.

00:46:11.686 --> 00:46:14.036 A:middle
And it's just moving
in a square right now,

00:46:14.476 --> 00:46:19.756 A:middle
but I'm using Core Bluetooth
to control a third-party robot

00:46:20.176 --> 00:46:22.526 A:middle
from my iPad, and
that's just so fun.

00:46:23.516 --> 00:46:31.026 A:middle
[ Applause ]

00:46:31.526 --> 00:46:34.646 A:middle
I want this to just be just
slightly more engaging,

00:46:34.886 --> 00:46:38.806 A:middle
so I'm going to hide
this for a moment.

00:46:38.806 --> 00:46:44.356 A:middle
And what I'm going to
do is add some colors.

00:46:44.906 --> 00:46:49.776 A:middle
So one of our other
structured editing helpers,

00:46:50.106 --> 00:46:53.976 A:middle
we can just drag our array
out, and add some items.

00:46:54.516 --> 00:46:57.666 A:middle
[ Applause ]

00:46:58.166 --> 00:46:59.746 A:middle
And I'm going to make
these all colors.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:06.676 --> 00:47:09.516 A:middle
You know, these colors right
here seem really familiar,

00:47:09.516 --> 00:47:14.996 A:middle
but I can't quite
place my finger on it.

00:47:15.746 --> 00:47:20.966 A:middle
So in a rest function,
we're just going

00:47:20.966 --> 00:47:21.976 A:middle
to iterate three of these.

00:47:33.176 --> 00:47:35.636 A:middle
And then instead of
setting our color to white,

00:47:36.606 --> 00:47:38.856 A:middle
we're going to set to color.

00:47:46.556 --> 00:47:51.966 A:middle
Let's bring our little
helper back in.

00:47:51.996 --> 00:47:55.936 A:middle
Let's run this.

00:47:56.076 --> 00:48:01.246 A:middle
Now we're changing colors
as we're driving our Sphero.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:56.076 --> 00:48:01.246 A:middle
Now we're changing colors
as we're driving our Sphero.

00:48:02.516 --> 00:48:09.716 A:middle
[ Applause ]

00:48:10.216 --> 00:48:13.326 A:middle
Stop. That was really fun.

00:48:13.326 --> 00:48:17.276 A:middle
Now I'm going to bring Matt
back up to wrap things up.

00:48:18.516 --> 00:48:23.886 A:middle
[ Applause ]

00:48:24.386 --> 00:48:25.606 A:middle
&gt;&gt; Thank you so much Izzy.

00:48:26.146 --> 00:48:28.196 A:middle
That is really cool.

00:48:31.536 --> 00:48:32.556 A:middle
So we've seen a lot today.

00:48:32.866 --> 00:48:36.946 A:middle
We started out with Max, who
showed you how to use all

00:48:36.946 --> 00:48:39.746 A:middle
of the great touch controls that
we have in Swift Playgrounds

00:48:40.066 --> 00:48:41.606 A:middle
to interact with
Swift code in ways

00:48:41.606 --> 00:48:43.056 A:middle
that we've never been
able to do before.

00:48:43.686 --> 00:48:47.616 A:middle
Jonathan showed you how to
build engaging content using all

00:48:47.616 --> 00:48:50.086 A:middle
of the great new features
in Playground Books,

00:48:50.486 --> 00:48:53.326 A:middle
that way you progressively
explore ideas

00:48:53.326 --> 00:48:55.366 A:middle
and disclose content
as you go along.

00:48:55.916 --> 00:48:59.576 A:middle
And Izzy showed you that you're
not limited to the things

00:48:59.576 --> 00:49:02.156 A:middle
that come in Learn to Code,
that you can experiment


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:59.576 --> 00:49:02.156 A:middle
that come in Learn to Code,
that you can experiment

00:49:02.156 --> 00:49:04.736 A:middle
with the iOS SDK and
interact with things

00:49:04.816 --> 00:49:07.886 A:middle
in the physical world or even
build a world of your own.

00:49:08.776 --> 00:49:12.086 A:middle
We think that you're going to
be able to do a lot of really,

00:49:12.436 --> 00:49:15.746 A:middle
really cool things with Swift
Playgrounds, and we can't wait

00:49:15.746 --> 00:49:17.186 A:middle
to see what you do with it.

00:49:17.796 --> 00:49:18.926 A:middle
Thank you.

00:49:19.516 --> 00:49:22.816 A:middle
[ Applause ]

00:49:23.316 --> 00:49:24.806 A:middle
We've got more information
available

00:49:24.806 --> 00:49:26.336 A:middle
on developer.apple.com.

00:49:26.336 --> 00:49:27.546 A:middle
We're session 408.

00:49:28.276 --> 00:49:28.746 A:middle
There are, of course,

00:49:28.746 --> 00:49:31.076 A:middle
some related sessions you might
be interested in checking out.

00:49:31.426 --> 00:49:37.266 A:middle
Thank you so much everybody,
and enjoy the rest of WWDC.

