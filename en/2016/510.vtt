WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:07.516 --> 00:00:17.500 A:middle
[ Music ]

00:00:20.046 --> 00:00:21.486 A:middle
&gt;&gt; Hello. Welcome
to this session

00:00:21.486 --> 00:00:24.026 A:middle
on Validating HTTP Live Streams.

00:00:24.556 --> 00:00:25.536 A:middle
My name is Eryk.

00:00:25.616 --> 00:00:27.316 A:middle
I'm a media engineer at Apple.

00:00:27.526 --> 00:00:28.336 A:middle
Let's get started.

00:00:28.756 --> 00:00:31.766 A:middle
What are we doing when
we validate a stream?

00:00:32.046 --> 00:00:34.206 A:middle
We're trying to ensure
the stream is correct.

00:00:34.436 --> 00:00:35.946 A:middle
At least in terms
of its structure.

00:00:36.766 --> 00:00:39.566 A:middle
Structural checks can't find
all the potential problems,

00:00:39.566 --> 00:00:41.736 A:middle
but it will eliminate
a lot of them.

00:00:42.526 --> 00:00:46.606 A:middle
To be more precise, we first
want the playlist and segments

00:00:46.606 --> 00:00:47.886 A:middle
to be properly formatted.

00:00:48.256 --> 00:00:51.486 A:middle
That is, is the software going
to be able to parse the stream?

00:00:52.526 --> 00:00:54.896 A:middle
Second, we have some
additional requirements.

00:00:55.076 --> 00:00:58.926 A:middle
For example, the HLS spec does
not require I frame playlists.

00:00:59.006 --> 00:01:00.686 A:middle
But we want to require them,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.006 --> 00:01:00.686 A:middle
But we want to require them,

00:01:00.876 --> 00:01:03.006 A:middle
because they improve the
experience for the user.

00:01:03.996 --> 00:01:05.756 A:middle
Third, we want these streams

00:01:05.756 --> 00:01:08.366 A:middle
to reflect established
best practices.

00:01:09.676 --> 00:01:12.336 A:middle
Ultimately, this
is all in service

00:01:12.336 --> 00:01:15.546 A:middle
of making sure the stream
plays well on your devices.

00:01:17.376 --> 00:01:20.236 A:middle
So let's talk about the
specifications we have.

00:01:21.506 --> 00:01:24.756 A:middle
The most important is the
HLS specification itself.

00:01:25.226 --> 00:01:28.136 A:middle
If you've been working with
HLS for any length of time,

00:01:28.216 --> 00:01:30.296 A:middle
you've probably read this
document a time or two.

00:01:31.116 --> 00:01:34.976 A:middle
It is an Internet
Engineering Taskforce --

00:01:35.036 --> 00:01:36.756 A:middle
IETF, internet draft.

00:01:37.506 --> 00:01:39.176 A:middle
You can find it just
by searching

00:01:39.176 --> 00:01:40.966 A:middle
on the web for "draft pantos".

00:01:41.806 --> 00:01:44.266 A:middle
The first version was
published seven years ago.

00:01:45.006 --> 00:01:46.986 A:middle
We updated two or
three times a year.

00:01:47.366 --> 00:01:49.676 A:middle
It details the structure
of playlists.

00:01:49.856 --> 00:01:52.126 A:middle
What kinds of tags
exists, and their format.

00:01:52.586 --> 00:01:54.136 A:middle
And explains the
responsibilities

00:01:54.136 --> 00:01:55.806 A:middle
for the clients and the server.

00:01:57.636 --> 00:02:00.546 A:middle
More recently we
introduced a new document.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:57.636 --> 00:02:00.546 A:middle
More recently we
introduced a new document.

00:02:00.546 --> 00:02:02.266 A:middle
The HLS Authoring Specification.

00:02:03.106 --> 00:02:06.016 A:middle
This is available in
the reference library.

00:02:06.266 --> 00:02:09.506 A:middle
We first published it
last fall just for tvOS.

00:02:09.626 --> 00:02:14.716 A:middle
For WWDC, we've updated it to
cover iOS and OS X as well.

00:02:15.416 --> 00:02:18.886 A:middle
This document tries to cover
what constitutes well-structured

00:02:18.886 --> 00:02:19.746 A:middle
HLS content.

00:02:22.016 --> 00:02:23.876 A:middle
The requirements

00:02:23.876 --> 00:02:26.696 A:middle
in the authoring specification
come from several sources.

00:02:27.436 --> 00:02:30.816 A:middle
Some echo requirements
from the HLS specification.

00:02:30.966 --> 00:02:33.886 A:middle
For example, where
discontinuities should be.

00:02:33.886 --> 00:02:36.336 A:middle
What your playlist
duration should be.

00:02:36.976 --> 00:02:38.756 A:middle
Some have to do with
device support.

00:02:38.876 --> 00:02:42.416 A:middle
For example, that all your
video needs to be H.264.

00:02:42.826 --> 00:02:45.796 A:middle
Or that you can't have more than
60 frame per second content.

00:02:47.006 --> 00:02:49.426 A:middle
Others come from the
desired user experience.

00:02:49.676 --> 00:02:53.356 A:middle
For example, the I-Frame
intervals that we expect.

00:02:53.506 --> 00:02:55.676 A:middle
Or, the fact that we want
you to support trick play.

00:02:56.826 --> 00:03:00.116 A:middle
A number are informed
by the past seven years


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:56.826 --> 00:03:00.116 A:middle
A number are informed
by the past seven years

00:03:00.116 --> 00:03:02.486 A:middle
of our experience
and our analysis.

00:03:02.946 --> 00:03:05.946 A:middle
I'm talking about the
recommendations we have

00:03:05.946 --> 00:03:06.916 A:middle
around delivery.

00:03:07.216 --> 00:03:08.626 A:middle
The bitrates we recommend.

00:03:08.976 --> 00:03:12.016 A:middle
And our recommendations
around privacy and security.

00:03:14.196 --> 00:03:18.106 A:middle
The requirements I've listed
here are just some examples

00:03:18.106 --> 00:03:20.406 A:middle
to give you a flavor of
what's in the document.

00:03:20.576 --> 00:03:24.016 A:middle
The specification itself
is broken into categories.

00:03:24.016 --> 00:03:25.316 A:middle
Like video encoding.

00:03:25.476 --> 00:03:26.076 A:middle
Trick Play.

00:03:26.306 --> 00:03:27.526 A:middle
Media segmentation.

00:03:27.726 --> 00:03:30.906 A:middle
Delivery and so on.

00:03:31.836 --> 00:03:33.226 A:middle
Now of course we
don't expect you

00:03:33.226 --> 00:03:34.926 A:middle
to do this validation by hand.

00:03:35.146 --> 00:03:37.396 A:middle
So let's look at the
tools we provide.

00:03:38.086 --> 00:03:40.876 A:middle
But first, you need
to get the tools.

00:03:41.126 --> 00:03:44.216 A:middle
Everything important about
HLS can be found here

00:03:44.216 --> 00:03:48.646 A:middle
at the developer streaming page,
developer.apple.com/streaming.

00:03:49.746 --> 00:03:51.556 A:middle
Now if we scroll
down a bit, down --

00:03:51.556 --> 00:03:53.706 A:middle
halfway down on the
right, there is a link

00:03:53.706 --> 00:03:54.676 A:middle
to the "Tools" download.

00:03:55.546 --> 00:03:58.596 A:middle
Now please note you
will have to log

00:03:58.596 --> 00:04:00.606 A:middle
in with a developer
enabled Apple ID


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:58.596 --> 00:04:00.606 A:middle
in with a developer
enabled Apple ID

00:04:00.606 --> 00:04:02.236 A:middle
in order to access this page.

00:04:02.586 --> 00:04:05.026 A:middle
But remember that
developer accounts are free.

00:04:05.486 --> 00:04:08.916 A:middle
Now once you've done that, you
end up on the downloads page.

00:04:09.556 --> 00:04:12.106 A:middle
The download itself
is a disk image

00:04:12.106 --> 00:04:13.916 A:middle
which contains an
installer package.

00:04:14.646 --> 00:04:16.736 A:middle
Now the screenshot here
is a little out of date.

00:04:16.736 --> 00:04:21.016 A:middle
You should see a newer disk
image dated June 2016 or later.

00:04:21.716 --> 00:04:24.556 A:middle
We do typically update the
tools several times a year.

00:04:25.396 --> 00:04:27.926 A:middle
Now by the way, if you are
viewing this during WWDC,

00:04:27.926 --> 00:04:31.886 A:middle
the new version may not
have been posted yet.

00:04:32.436 --> 00:04:35.706 A:middle
After you've run the installer,
you end up with sever tools.

00:04:36.136 --> 00:04:39.806 A:middle
And I want to remind you that
these tools run only on OS X.

00:04:40.826 --> 00:04:43.846 A:middle
The first two -- the
validation are what I'll cover

00:04:43.846 --> 00:04:44.986 A:middle
in the rest of this talk.

00:04:45.946 --> 00:04:49.286 A:middle
The next three tools are
segmenters for files,

00:04:49.496 --> 00:04:51.346 A:middle
streams, and subtitles.

00:04:51.766 --> 00:04:54.066 A:middle
And I wanted to mention
as a quick side

00:04:54.066 --> 00:04:57.256 A:middle
that the subtitle segmenter
is useful for breaking

00:04:57.256 --> 00:05:04.526 A:middle
up the large web VTTT into a
set of segmented web VTT's.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:57.256 --> 00:05:04.526 A:middle
up the large web VTTT into a
set of segmented web VTT's.

00:05:05.256 --> 00:05:08.926 A:middle
The last two tools, Variant
Playlist Creator is used

00:05:08.926 --> 00:05:10.756 A:middle
to create master playlists.

00:05:11.546 --> 00:05:16.446 A:middle
And the last one is used
to format timed metadata

00:05:16.676 --> 00:05:19.236 A:middle
that you can then insert
using the segmenters.

00:05:19.806 --> 00:05:21.866 A:middle
Now all of these tools
have manned pages.

00:05:22.316 --> 00:05:25.636 A:middle
And you can pass any of these
attached H option to get help.

00:05:28.366 --> 00:05:30.746 A:middle
But before we talk about
the validation tools,

00:05:30.746 --> 00:05:33.156 A:middle
I want to make a short pitch
for mediafilesegmenter.

00:05:33.926 --> 00:05:36.446 A:middle
It's simple to call, you
just pass it a movie file.

00:05:37.236 --> 00:05:40.456 A:middle
It produces a media
playlist and media segments.

00:05:40.996 --> 00:05:42.736 A:middle
While this tool has
a lot of options,

00:05:42.736 --> 00:05:44.696 A:middle
it's not as complicated
as it might seem.

00:05:45.306 --> 00:05:47.466 A:middle
The options break
into a few categories.

00:05:48.716 --> 00:05:50.616 A:middle
Options having to do
with naming files.

00:05:50.616 --> 00:05:52.146 A:middle
With structuring playlists.

00:05:53.046 --> 00:05:57.916 A:middle
How to do encryption and so on.

00:05:57.916 --> 00:05:59.706 A:middle
Even if you don't use
this introduction,

00:05:59.856 --> 00:06:02.326 A:middle
the mediafilesegmenter
can be a good cross check


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.856 --> 00:06:02.326 A:middle
the mediafilesegmenter
can be a good cross check

00:06:02.326 --> 00:06:04.616 A:middle
on whatever process
you do use to segment.

00:06:07.056 --> 00:06:08.406 A:middle
So on to validation.

00:06:09.306 --> 00:06:11.626 A:middle
Media stream validator
is the core tool.

00:06:12.606 --> 00:06:14.936 A:middle
You can call it with
your master playlist.

00:06:17.186 --> 00:06:21.186 A:middle
And it produces output on the
terminal and the json file.

00:06:21.656 --> 00:06:24.496 A:middle
Now this json contains
everything that was important

00:06:24.496 --> 00:06:27.146 A:middle
in the output, and
more data besides.

00:06:28.336 --> 00:06:32.186 A:middle
A couple of options
that I want to call out.

00:06:32.716 --> 00:06:34.356 A:middle
First of all you
can adjust the path

00:06:34.356 --> 00:06:35.896 A:middle
and the name of the json file.

00:06:36.226 --> 00:06:39.106 A:middle
And you can adjust the timeout.

00:06:39.546 --> 00:06:40.906 A:middle
Well, what's the timeout?

00:06:41.346 --> 00:06:43.226 A:middle
By default, the validator
times out.

00:06:43.226 --> 00:06:45.786 A:middle
That is, it stops
processing after five minutes.

00:06:46.536 --> 00:06:48.036 A:middle
Now this may not be enough time

00:06:48.036 --> 00:06:50.536 A:middle
to process a big video
on demand stream.

00:06:51.116 --> 00:06:54.086 A:middle
And for live content,
while five minutes is fine

00:06:54.086 --> 00:06:56.676 A:middle
for your initial checks,
you'll want to do some checks

00:06:56.676 --> 00:06:58.816 A:middle
over a much longer
period, once you determine

00:06:58.816 --> 00:07:00.646 A:middle
that the stream is
basically correct.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.816 --> 00:07:00.646 A:middle
that the stream is
basically correct.

00:07:03.836 --> 00:07:06.596 A:middle
Here's what the media stream
validator output looks like.

00:07:07.976 --> 00:07:11.456 A:middle
So here we're calling media
stream validator with URL.

00:07:12.666 --> 00:07:15.686 A:middle
And first it tells you
the version number.

00:07:16.006 --> 00:07:17.826 A:middle
And then it outputs some trace

00:07:17.826 --> 00:07:19.986 A:middle
as it's downloading
playlists and files.

00:07:21.356 --> 00:07:26.046 A:middle
And then it outputs information
about every variant, rendition

00:07:26.046 --> 00:07:27.636 A:middle
and I-Frame variant
that it found.

00:07:28.336 --> 00:07:30.936 A:middle
Now this can be hard to digest.

00:07:31.116 --> 00:07:33.866 A:middle
So we created HLS report.

00:07:34.536 --> 00:07:38.126 A:middle
This is a python script
that takes the json

00:07:38.216 --> 00:07:39.986 A:middle
and summarizes and condenses it.

00:07:41.306 --> 00:07:44.056 A:middle
And it produces an
HTML file as output.

00:07:45.316 --> 00:07:47.056 A:middle
The name of that file
is the same as the name

00:07:47.056 --> 00:07:49.846 A:middle
of your json file, except
the extension is changed.

00:07:51.426 --> 00:07:54.056 A:middle
And again, there are some
options I want to call out.

00:07:54.716 --> 00:07:56.936 A:middle
We can change the
name of the HTML file.

00:07:58.046 --> 00:08:02.886 A:middle
The dash I or dash ID option
is helpful when you want


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.046 --> 00:08:02.886 A:middle
The dash I or dash ID option
is helpful when you want

00:08:02.886 --> 00:08:07.096 A:middle
to match HTML output to
portions of the json file.

00:08:07.096 --> 00:08:09.716 A:middle
And I'll give you some more
details about how that works

00:08:09.716 --> 00:08:11.336 A:middle
when I go through the examples.

00:08:12.456 --> 00:08:16.116 A:middle
Now the verbose option
is a very handy option

00:08:16.116 --> 00:08:17.796 A:middle
that gives you a
lot of information

00:08:17.796 --> 00:08:19.886 A:middle
about every variant
and rendition.

00:08:20.286 --> 00:08:21.976 A:middle
Unfortunately, I
don't have time to go

00:08:21.976 --> 00:08:23.486 A:middle
into detail about that output.

00:08:23.786 --> 00:08:26.556 A:middle
But I wanted to call it out as
something that is available.

00:08:28.336 --> 00:08:30.636 A:middle
One quick aside here.

00:08:31.176 --> 00:08:34.515 A:middle
You should validate your
streams before you submit

00:08:34.515 --> 00:08:35.336 A:middle
to the App Store.

00:08:36.126 --> 00:08:38.285 A:middle
And also, when you
submit to the App Store,

00:08:38.566 --> 00:08:42.066 A:middle
you should include a test
stream URL in your notes field

00:08:42.066 --> 00:08:45.326 A:middle
so that the reviewers have a
stream that they can look at.

00:08:47.216 --> 00:08:49.516 A:middle
I'd like to run some demos.

00:08:49.676 --> 00:08:52.986 A:middle
But rather than run all this
on the screen and have you try

00:08:52.986 --> 00:08:55.016 A:middle
to follow along and
squint at tiny text,

00:08:55.266 --> 00:08:59.386 A:middle
I've captured the output and
I'll guide you through it.

00:08:59.706 --> 00:09:01.496 A:middle
First, a little command
line sample.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.706 --> 00:09:01.496 A:middle
First, a little command
line sample.

00:09:03.356 --> 00:09:04.996 A:middle
Run media stream validator.

00:09:05.036 --> 00:09:07.766 A:middle
And notice I'm giving the
name of the json file.

00:09:08.486 --> 00:09:11.596 A:middle
And I've just got a fake URL
here to give you the flavor.

00:09:12.526 --> 00:09:16.256 A:middle
Now we've seen the output
before, so I'll skip that.

00:09:16.456 --> 00:09:19.076 A:middle
But remember that this might
take several minutes to run.

00:09:22.346 --> 00:09:25.496 A:middle
Now once it's completed,
we can run HLS report.

00:09:25.626 --> 00:09:28.476 A:middle
Passing at the json that media
stream validator created.

00:09:30.516 --> 00:09:34.306 A:middle
If HLS report works well,
we don't have any output.

00:09:34.376 --> 00:09:36.086 A:middle
Just the HTML file.

00:09:37.306 --> 00:09:38.966 A:middle
So if we look in our
current directory,

00:09:39.686 --> 00:09:41.476 A:middle
we'll see there are
just two files around.

00:09:41.866 --> 00:09:44.186 A:middle
The json that media
stream validator created.

00:09:44.556 --> 00:09:47.646 A:middle
And the HTML file that
HLS report created.

00:09:49.156 --> 00:09:51.956 A:middle
So let's take a look at
some example reports.

00:09:52.926 --> 00:09:54.566 A:middle
First, I'm going to
start with a playlist

00:09:54.566 --> 00:09:56.416 A:middle
that has several common errors.

00:09:57.856 --> 00:10:00.046 A:middle
This is what a report
looks like.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:57.856 --> 00:10:00.046 A:middle
This is what a report
looks like.

00:10:01.076 --> 00:10:03.746 A:middle
The first thing you want to
examine is the stream type.

00:10:06.296 --> 00:10:09.956 A:middle
Now usually, this is
VOD, or LIVE, or EVENT.

00:10:11.106 --> 00:10:13.016 A:middle
These reflect a three kind --

00:10:13.016 --> 00:10:17.476 A:middle
basic kinds of streams
that HLS supports.

00:10:18.116 --> 00:10:20.446 A:middle
But you could get
the value "UNKNOWN".

00:10:20.446 --> 00:10:24.356 A:middle
And this means that we weren't
able to read the playlists.

00:10:24.406 --> 00:10:27.196 A:middle
Or worse, you could
get the value mixed.

00:10:27.646 --> 00:10:31.316 A:middle
Now this can mean that
you had some unknowns.

00:10:31.346 --> 00:10:35.386 A:middle
That is, that some of the media
playlists couldn't be read.

00:10:35.636 --> 00:10:38.826 A:middle
Or worse, it could be that you
actually have conflicting types.

00:10:38.826 --> 00:10:43.096 A:middle
Like for example, some of your
variants claim to be EVENT,

00:10:43.096 --> 00:10:44.466 A:middle
and some claim to be LIVE.

00:10:47.266 --> 00:10:50.946 A:middle
Now the next item in the report
is the variant overview table.

00:10:51.356 --> 00:10:54.056 A:middle
It has one entry for
each video variant.

00:10:55.156 --> 00:10:59.056 A:middle
Now if we happened to have
our stream type as mixed,

00:10:59.056 --> 00:11:01.386 A:middle
that will be an added
column in this table


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.056 --> 00:11:01.386 A:middle
that will be an added
column in this table

00:11:01.386 --> 00:11:03.136 A:middle
that indicates the
playlist type.

00:11:03.366 --> 00:11:05.186 A:middle
If we look over to the right,

00:11:05.726 --> 00:11:07.716 A:middle
we can see that there
are more columns.

00:11:07.766 --> 00:11:10.396 A:middle
And in particular, if
it's a VOD we're going

00:11:10.396 --> 00:11:12.976 A:middle
to have a percent
processed column.

00:11:13.226 --> 00:11:16.826 A:middle
Now if this is less than 100%,

00:11:16.826 --> 00:11:19.256 A:middle
that means that the
timeout wasn't long enough.

00:11:19.856 --> 00:11:21.946 A:middle
Now if you have live content,

00:11:22.046 --> 00:11:24.396 A:middle
you won't see the
percent process.

00:11:24.396 --> 00:11:25.986 A:middle
Instead you'll see two columns.

00:11:26.316 --> 00:11:28.896 A:middle
Average segment count, and
average playlist duration.

00:11:30.226 --> 00:11:31.096 A:middle
Now the next thing you want

00:11:31.096 --> 00:11:33.686 A:middle
to check is the percent
difference column.

00:11:34.286 --> 00:11:37.256 A:middle
This shows you how much
greater the measured bitrate is

00:11:37.296 --> 00:11:39.906 A:middle
than the value that was
declared in the master playlist.

00:11:40.716 --> 00:11:42.586 A:middle
Now these values
are way too high.

00:11:42.586 --> 00:11:48.236 A:middle
Notice that variant one has a --
is 40% over what it should be.

00:11:48.496 --> 00:11:51.836 A:middle
Now these values
should be in the range

00:11:51.836 --> 00:11:54.686 A:middle
of minus 10% to positive 10%.

00:11:55.466 --> 00:11:57.956 A:middle
If the value here is positive,

00:11:58.306 --> 00:12:00.876 A:middle
that means your declared
value should be increased.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.306 --> 00:12:00.876 A:middle
that means your declared
value should be increased.

00:12:01.306 --> 00:12:02.736 A:middle
And if the value is negative,

00:12:02.926 --> 00:12:05.356 A:middle
your declared value should
probably be decreased.

00:12:05.776 --> 00:12:08.746 A:middle
Now notice we've
actually got two of these.

00:12:08.746 --> 00:12:12.186 A:middle
Because in our playlist we
declared both the bandwidth

00:12:12.186 --> 00:12:13.336 A:middle
and the average bandwidth.

00:12:13.876 --> 00:12:16.396 A:middle
We are able to compare
the declared

00:12:16.396 --> 00:12:17.896 A:middle
and measured values for both.

00:12:18.786 --> 00:12:21.986 A:middle
Now sometimes looking
at this in terms

00:12:21.986 --> 00:12:24.616 A:middle
of percentage can
be a little hard

00:12:24.616 --> 00:12:26.306 A:middle
to see what the real
difference is.

00:12:26.746 --> 00:12:32.146 A:middle
So if you add the -- pl
option, meaning playlist,

00:12:32.746 --> 00:12:38.936 A:middle
to your HLS report command line,
you'll see two new columns.

00:12:39.726 --> 00:12:40.476 A:middle
Playlist rate.

00:12:40.826 --> 00:12:42.326 A:middle
And playlist average rate.

00:12:43.316 --> 00:12:46.596 A:middle
So with this, we can see that
for example, for variant one,

00:12:46.926 --> 00:12:50.036 A:middle
the declared value is
392 kilobits per second.

00:12:50.566 --> 00:12:55.236 A:middle
But the measured value was
551 kilobits per second.

00:12:55.636 --> 00:12:58.336 A:middle
Now let's switch back to a
version without the -p option

00:12:58.336 --> 00:12:59.256 A:middle
and scroll down a bit.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:00.076 --> 00:13:02.466 A:middle
There's another table,
the rendition overview.

00:13:03.796 --> 00:13:07.216 A:middle
In this master playlist we have
audio as a separate stream.

00:13:07.866 --> 00:13:10.356 A:middle
That makes it a rendition,
and so it gets reported here.

00:13:13.516 --> 00:13:17.056 A:middle
Following this, we have
our must fix issues.

00:13:17.736 --> 00:13:19.976 A:middle
Now must fix issues are things

00:13:19.976 --> 00:13:22.416 A:middle
which are essential
for correct playback.

00:13:22.796 --> 00:13:24.766 A:middle
Or things which we
consider so important

00:13:24.766 --> 00:13:26.426 A:middle
that we made them
hard requirements.

00:13:27.946 --> 00:13:33.146 A:middle
You see item #2 and #4 here are
what we were just talking about.

00:13:33.536 --> 00:13:35.716 A:middle
The fact that the peak
and average bit rates,

00:13:36.026 --> 00:13:38.426 A:middle
that the declared and
measured values don't match up.

00:13:40.046 --> 00:13:43.216 A:middle
Now item 3 we'll address
in a later example.

00:13:44.956 --> 00:13:47.936 A:middle
Scrolling down farther, we now
have our should fix issues.

00:13:48.476 --> 00:13:50.026 A:middle
Should fix issues are things

00:13:50.026 --> 00:13:54.046 A:middle
which we strongly
encourage you to do.

00:13:54.256 --> 00:13:57.296 A:middle
Now these are followed lastly
by the report information.

00:13:57.296 --> 00:14:01.716 A:middle
The report information is
so that we can backtrack


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:57.296 --> 00:14:01.716 A:middle
The report information is
so that we can backtrack

00:14:02.116 --> 00:14:04.316 A:middle
to which version of
media stream validator

00:14:04.356 --> 00:14:05.976 A:middle
and HLS report was used.

00:14:06.146 --> 00:14:09.956 A:middle
This is important if you
pass us in a bug report,

00:14:10.126 --> 00:14:13.046 A:middle
the output from HLS report.

00:14:13.576 --> 00:14:16.646 A:middle
Or if you're even going back
and looking at something

00:14:17.196 --> 00:14:20.526 A:middle
after you've downloaded a more
recent version of the tools.

00:14:21.506 --> 00:14:26.116 A:middle
Now item 5 here is telling us
that we don't have any captions

00:14:26.116 --> 00:14:28.916 A:middle
or subtitles in our playlist.

00:14:29.326 --> 00:14:30.956 A:middle
We'll fix this in
our next example.

00:14:31.956 --> 00:14:33.566 A:middle
Let's look at item number 7.

00:14:34.876 --> 00:14:40.286 A:middle
So item number 7 says that our
default video variant is not

00:14:40.286 --> 00:14:42.616 A:middle
what we suggest.

00:14:43.856 --> 00:14:47.186 A:middle
And it's telling us
about variant #8.

00:14:48.816 --> 00:14:51.266 A:middle
So let's scroll back up
to the variant overview.

00:14:51.406 --> 00:14:55.396 A:middle
And we can see that item #8 has
the item number highlighted.

00:14:55.886 --> 00:14:57.736 A:middle
That's how we can tell
it's the default variant.

00:14:57.736 --> 00:15:00.356 A:middle
Now remember the default
variant is the variant


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:57.736 --> 00:15:00.356 A:middle
Now remember the default
variant is the variant

00:15:00.356 --> 00:15:02.076 A:middle
that the client's going
to play initially.

00:15:03.436 --> 00:15:05.606 A:middle
It's the first variant
in the master play list.

00:15:06.376 --> 00:15:10.236 A:middle
And notice that this one, the
max rate is 8 MB per second.

00:15:10.236 --> 00:15:12.636 A:middle
That's way too high
as a default.

00:15:16.186 --> 00:15:20.026 A:middle
Okay. Those are some common
problems that you might have.

00:15:20.106 --> 00:15:23.576 A:middle
In our second example, we've
taken the first example

00:15:23.576 --> 00:15:25.166 A:middle
and fixed the problems
I pointed out.

00:15:26.686 --> 00:15:30.216 A:middle
We've adjusted the
declared values,

00:15:30.216 --> 00:15:33.346 A:middle
so now the percent
difference is nearly zero.

00:15:34.336 --> 00:15:36.036 A:middle
We've fixed the default variant

00:15:36.256 --> 00:15:39.176 A:middle
to be something more reasonable
-- variant #4 in this case --

00:15:39.176 --> 00:15:43.106 A:middle
by moving a different media
play list to the first position

00:15:43.106 --> 00:15:44.286 A:middle
in the master playlist.

00:15:46.026 --> 00:15:47.966 A:middle
And if we look over on
the right-hand side,

00:15:48.196 --> 00:15:51.236 A:middle
we fixed our timeout, so
we're now processing the

00:15:51.236 --> 00:15:52.396 A:middle
entire playlist.

00:15:54.056 --> 00:15:57.736 A:middle
Now we had a should fix
item about captions.

00:15:58.076 --> 00:16:00.516 A:middle
We fixed that by adding
a subtitle playlist.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.076 --> 00:16:00.516 A:middle
We fixed that by adding
a subtitle playlist.

00:16:01.376 --> 00:16:05.146 A:middle
Now notice as a subtitle's
rendition -- rendition #12 --

00:16:05.466 --> 00:16:07.806 A:middle
doesn't have a max
or average rate.

00:16:08.896 --> 00:16:11.986 A:middle
That's because the subtitle
playlist is not processed.

00:16:12.446 --> 00:16:15.656 A:middle
And we put an n/a over in
the percent processed column

00:16:15.656 --> 00:16:17.896 A:middle
to remind us that
this is in process.

00:16:19.466 --> 00:16:22.826 A:middle
But we still have
one big must fix,

00:16:22.986 --> 00:16:25.176 A:middle
and that's no I-Frame playlist.

00:16:27.136 --> 00:16:32.146 A:middle
So how does the report change
when we add I-Frame playlist in?

00:16:32.566 --> 00:16:35.486 A:middle
The first part looks the
same, but let's scroll down.

00:16:36.696 --> 00:16:39.156 A:middle
Now, in addition to the
other overview tables,

00:16:39.156 --> 00:16:41.026 A:middle
there's an I-Frame
variant overview.

00:16:41.746 --> 00:16:43.996 A:middle
Now notice we're a little off

00:16:43.996 --> 00:16:45.836 A:middle
on our percent difference
values here.

00:16:45.836 --> 00:16:47.716 A:middle
But these are well
within the range.

00:16:48.076 --> 00:16:50.096 A:middle
Remember, that's +/- 10%.

00:16:51.646 --> 00:16:54.246 A:middle
Now let's talk about these
two columns over here.

00:16:54.606 --> 00:16:56.446 A:middle
Scaled average and multiplier.

00:16:57.156 --> 00:17:01.276 A:middle
Scaled average is the affective
worst case average data rate


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:57.156 --> 00:17:01.276 A:middle
Scaled average is the affective
worst case average data rate

00:17:01.276 --> 00:17:02.556 A:middle
of the I-Frame playlist.

00:17:03.646 --> 00:17:04.866 A:middle
Yeah, that's kind of a mouthful.

00:17:05.636 --> 00:17:06.866 A:middle
Remember that the measured,

00:17:06.866 --> 00:17:10.046 A:middle
average bit rate
represents the data rate

00:17:10.675 --> 00:17:12.796 A:middle
at a 1 X playback speed.

00:17:13.165 --> 00:17:17.086 A:middle
But the whole point of I-Frames
of Trick Play is to play back

00:17:17.086 --> 00:17:18.996 A:middle
at greater than 1 X speed.

00:17:19.526 --> 00:17:23.705 A:middle
Now the multiplier tells
us the lowest playback rate

00:17:23.925 --> 00:17:26.165 A:middle
at which we will hit
that worst case value.

00:17:27.286 --> 00:17:29.206 A:middle
Higher rates are
going to be no worse,

00:17:29.206 --> 00:17:31.476 A:middle
because we will drop
frames in order

00:17:31.476 --> 00:17:35.266 A:middle
to keep the actual displayed
frame rate at a constant value.

00:17:36.036 --> 00:17:39.496 A:middle
What you should do with these
values is compare the scaled

00:17:39.496 --> 00:17:43.836 A:middle
average data rate here, against
the normal variant data rate

00:17:43.926 --> 00:17:45.316 A:middle
that has the same resolution.

00:17:46.446 --> 00:17:48.166 A:middle
These should be close in value,

00:17:48.166 --> 00:17:51.446 A:middle
or the I-Frame variant
should be lower in value.

00:17:51.996 --> 00:17:55.936 A:middle
Otherwise, Trick Play could
cause a drop in resolution.

00:17:59.216 --> 00:18:02.966 A:middle
Now in this report, I've
also got another new column.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.216 --> 00:18:02.966 A:middle
Now in this report, I've
also got another new column.

00:18:03.446 --> 00:18:07.276 A:middle
That's because I added the
-- id option to HLS report.

00:18:07.876 --> 00:18:10.226 A:middle
Now as I mentioned before,

00:18:10.226 --> 00:18:12.966 A:middle
this helps you find the
same data in the json file.

00:18:13.776 --> 00:18:17.676 A:middle
So let's look for this
first one, data ID 16.

00:18:17.676 --> 00:18:20.346 A:middle
Which is our lowest
resolution I-Frame playlist.

00:18:20.526 --> 00:18:21.936 A:middle
Let's look for that in the json.

00:18:24.296 --> 00:18:27.696 A:middle
So here's an abbreviated
text view of the json.

00:18:27.956 --> 00:18:30.186 A:middle
The top level of the
json is a dictionary.

00:18:30.636 --> 00:18:33.026 A:middle
And we're interested
in the variance value.

00:18:33.386 --> 00:18:35.386 A:middle
Which is an array
of dictionaries.

00:18:38.076 --> 00:18:42.066 A:middle
Now one of those dictionaries
will have data ID 16.

00:18:42.856 --> 00:18:45.926 A:middle
And I want to note here

00:18:45.926 --> 00:18:48.206 A:middle
that these are not
in order by data ID.

00:18:50.506 --> 00:18:53.086 A:middle
Now this one with data ID 16,

00:18:53.086 --> 00:18:57.036 A:middle
that's the json variant entry
whose data matches the row

00:18:57.036 --> 00:18:57.836 A:middle
in the report.

00:18:57.836 --> 00:18:59.786 A:middle
That is the lowest
I-Frame variant.


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.596 --> 00:19:02.146 A:middle
Now, I've skipped
a lot of the data.

00:19:02.436 --> 00:19:05.096 A:middle
There's much more information
than this slide shows.

00:19:06.026 --> 00:19:08.656 A:middle
Use your favorite tool for
digging around json files,

00:19:08.656 --> 00:19:10.686 A:middle
or write yourself some
special purpose tools.

00:19:11.316 --> 00:19:13.516 A:middle
Now, these json's
can get very large.

00:19:13.516 --> 00:19:18.966 A:middle
It's not uncommon for them to
be over 100,000 lines in size.

00:19:19.816 --> 00:19:23.506 A:middle
For our last example,
we took that playlist

00:19:23.506 --> 00:19:26.946 A:middle
and we added multiple
kinds of audio to it.

00:19:27.216 --> 00:19:29.006 A:middle
So the top looks pretty similar.

00:19:29.216 --> 00:19:32.986 A:middle
Let's scroll down and
look at our renditions.

00:19:33.556 --> 00:19:36.026 A:middle
Now, rather than just
that single, stereo audio,

00:19:36.026 --> 00:19:39.646 A:middle
we've added two multi-channel
audio renditions as well.

00:19:40.216 --> 00:19:43.026 A:middle
One is AC-3 that
is Dolby Digital.

00:19:43.236 --> 00:19:44.906 A:middle
That one's called the aud2.

00:19:45.746 --> 00:19:49.276 A:middle
And one is EC-3,
Dolby Digital Plus.

00:19:50.176 --> 00:19:51.176 A:middle
One we call aud3.

00:19:51.596 --> 00:19:53.926 A:middle
So let's go up and look
at our variance section.

00:19:55.926 --> 00:20:02.696 A:middle
Now, notice that because AC-3
and EC-3 are not substitutable,


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:55.926 --> 00:20:02.696 A:middle
Now, notice that because AC-3
and EC-3 are not substitutable,

00:20:03.046 --> 00:20:05.836 A:middle
and neither are they
substitutable with AAC,

00:20:06.236 --> 00:20:09.406 A:middle
each one has its
own default variant.

00:20:10.626 --> 00:20:14.966 A:middle
That is, once we
choose aud2, the AC-3,

00:20:15.046 --> 00:20:17.166 A:middle
we will default to variant #12.

00:20:17.486 --> 00:20:20.756 A:middle
Because that variant is the
first one in the aud2 group

00:20:20.846 --> 00:20:22.466 A:middle
that appears in the
master playlist.

00:20:23.926 --> 00:20:29.486 A:middle
Similarly, if we chose EC-3, we
would default to variant #20.

00:20:30.436 --> 00:20:32.356 A:middle
Now notice there's
a bitrate difference

00:20:32.406 --> 00:20:34.716 A:middle
between the aud2
and aud3 variance.

00:20:34.766 --> 00:20:39.546 A:middle
For example, variant
#9 and variant #17.

00:20:39.906 --> 00:20:42.976 A:middle
This is due to the different
bitrates of the audio.

00:20:43.186 --> 00:20:44.966 A:middle
The bitrate you'll see here

00:20:44.966 --> 00:20:48.666 A:middle
for the variant is the
combined bitrate including

00:20:48.666 --> 00:20:49.496 A:middle
the renditions.

00:20:51.206 --> 00:20:53.616 A:middle
Okay. That's it for my examples.

00:20:54.016 --> 00:20:56.616 A:middle
Where can you find some
examples of your own to look at?

00:20:58.336 --> 00:21:01.046 A:middle
Well, there are three
examples pointed to off


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.336 --> 00:21:01.046 A:middle
Well, there are three
examples pointed to off

00:21:01.046 --> 00:21:02.166 A:middle
of the streaming page.

00:21:02.246 --> 00:21:05.256 A:middle
If you go to
developer.apple.com/streaming,

00:21:05.626 --> 00:21:07.266 A:middle
there's a pointer to
the examples page.

00:21:07.586 --> 00:21:10.396 A:middle
And you could dig the
URLs out of this page.

00:21:11.896 --> 00:21:14.236 A:middle
Or, you could just read
them on this slide.

00:21:15.346 --> 00:21:18.366 A:middle
The first two will have
complaints when you validate.

00:21:18.556 --> 00:21:21.816 A:middle
That's because these streams
were created a long time ago,

00:21:21.816 --> 00:21:23.826 A:middle
and we deliberately
decided not to upgrade them.

00:21:24.286 --> 00:21:26.206 A:middle
But that third variant
is a new one,

00:21:26.206 --> 00:21:27.766 A:middle
and should be almost perfect.

00:21:29.516 --> 00:21:32.096 A:middle
All right, it's time to wrap up.

00:21:33.246 --> 00:21:36.436 A:middle
Here are the only three things I
absolutely want you to remember.

00:21:37.286 --> 00:21:40.566 A:middle
Obey the authoring spec.
Validate, validate,

00:21:40.566 --> 00:21:41.986 A:middle
validate your streams.

00:21:42.586 --> 00:21:48.606 A:middle
And include a test stream
URL when you submit your app.

00:21:49.076 --> 00:21:52.936 A:middle
For more information,
go to the WWDC site,

00:21:52.936 --> 00:21:57.906 A:middle
and use this session's
number, 510.

00:21:58.546 --> 00:22:01.306 A:middle
There's a lot of cool
new stuff this year


WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.546 --> 00:22:01.306 A:middle
There's a lot of cool
new stuff this year

00:22:01.306 --> 00:22:02.806 A:middle
in HTTP live streaming.

00:22:02.806 --> 00:22:07.776 A:middle
So I encourage you to
attend or watch the talk,

00:22:07.776 --> 00:22:10.036 A:middle
What's New in HTTP
Live Streaming.

00:22:10.426 --> 00:22:11.976 A:middle
Thank you, and have
a great conference.

