WEBVTT

00:00:06.516 --> 00:00:18.500 A:middle
[ Music ]

00:00:24.516 --> 00:00:28.546 A:middle
[ Applause ]

00:00:29.046 --> 00:00:31.426 A:middle
&gt;&gt; Hello, everyone.

00:00:32.206 --> 00:00:33.026 A:middle
Thank you for coming.

00:00:33.326 --> 00:00:37.456 A:middle
Welcome. My name is Dennis
Matthews, and I'm part

00:00:37.456 --> 00:00:39.746 A:middle
of the HomeKit engineering
team here at Apple.

00:00:41.576 --> 00:00:44.686 A:middle
So before we get started
with what's new in HomeKit,

00:00:45.416 --> 00:00:49.666 A:middle
we'll spend the first couple of
minutes and talk about HomeKit,

00:00:49.666 --> 00:00:51.816 A:middle
and I want to highlight
some of the key features

00:00:51.816 --> 00:00:52.796 A:middle
of what makes HomeKit.

00:00:55.436 --> 00:00:59.396 A:middle
HomeKit is a framework which
provides a rich set of API's

00:00:59.746 --> 00:01:03.966 A:middle
that allow your applications
to talk to different classes

00:00:59.746 --> 00:01:03.966 A:middle
that allow your applications
to talk to different classes

00:01:03.966 --> 00:01:05.816 A:middle
of HomeKit enabled accessories.

00:01:06.626 --> 00:01:10.506 A:middle
Your applications can use
the same API's to talk

00:01:10.506 --> 00:01:14.036 A:middle
with accessories from
different manufacturers.

00:01:17.256 --> 00:01:23.876 A:middle
HomeKit maintains the user's
home data in a common database.

00:01:24.366 --> 00:01:27.286 A:middle
Now this is great
because all applications

00:01:27.286 --> 00:01:32.466 A:middle
in the system have access
to this exact same home data

00:01:32.646 --> 00:01:35.656 A:middle
and configuration
of the user's home.

00:01:37.906 --> 00:01:41.556 A:middle
And if the user has multiple
devices, all of them signed

00:01:41.556 --> 00:01:44.386 A:middle
in to the same iCloud
account, HomeKit takes care

00:01:44.386 --> 00:01:49.406 A:middle
of synchronizing this home data
over to the different devices

00:01:49.406 --> 00:01:50.376 A:middle
that the user may have.

00:01:50.746 --> 00:01:54.056 A:middle
Now this is great because
without any additional set

00:01:54.056 --> 00:01:56.806 A:middle
up on the user's part, the
user can just pick up any

00:01:56.806 --> 00:01:59.646 A:middle
of their devices and
start communicating

00:01:59.646 --> 00:02:01.426 A:middle
with the HomeKit accessories.

00:01:59.646 --> 00:02:01.426 A:middle
with the HomeKit accessories.

00:02:04.476 --> 00:02:08.746 A:middle
HomeKit also supports for
sharing of a user's home.

00:02:09.476 --> 00:02:13.546 A:middle
So a user can share their
home and allow their family

00:02:13.546 --> 00:02:16.676 A:middle
and friends also to
control the accessories

00:02:16.676 --> 00:02:18.696 A:middle
that the user has
set up in their home.

00:02:19.456 --> 00:02:21.176 A:middle
Sharing is very simple.

00:02:21.336 --> 00:02:26.006 A:middle
All that a user has to do is
invite additional users using

00:02:26.006 --> 00:02:30.816 A:middle
their iCloud account, and once
the user accepts the invitation,

00:02:30.976 --> 00:02:35.086 A:middle
HomeKit automatically takes
care of sharing the home data

00:02:35.086 --> 00:02:37.366 A:middle
across to additional
devices as well

00:02:37.366 --> 00:02:40.046 A:middle
as configuring all the
accessories in the home

00:02:40.326 --> 00:02:43.206 A:middle
so that now the shared
users can have access

00:02:43.486 --> 00:02:45.236 A:middle
and control these accessories.

00:02:46.286 --> 00:02:50.666 A:middle
The owner, of course, can
also revoke this control

00:02:50.666 --> 00:02:55.066 A:middle
at any point in time.

00:02:55.246 --> 00:03:00.416 A:middle
HomeKit supports a common
protocol for all the accessories

00:02:55.246 --> 00:03:00.416 A:middle
HomeKit supports a common
protocol for all the accessories

00:03:00.416 --> 00:03:04.206 A:middle
to securely communicate
with the Apple device.

00:03:05.576 --> 00:03:08.606 A:middle
So all HomeKit accessories,
irrespective

00:03:08.606 --> 00:03:10.856 A:middle
of their underlying
medium of communication,

00:03:11.226 --> 00:03:13.626 A:middle
use the same common protocol.

00:03:14.476 --> 00:03:19.166 A:middle
Now all this protocol Apple
has also defined a rich set

00:03:19.166 --> 00:03:23.476 A:middle
of profiles which describe
many of the common accessories.

00:03:23.976 --> 00:03:27.436 A:middle
Now with this profiles,
Siri support is built in.

00:03:28.396 --> 00:03:32.356 A:middle
This is great and it provides
a very natural way for users

00:03:32.646 --> 00:03:36.156 A:middle
to communicate and control their
accessories just using Siri.

00:03:40.636 --> 00:03:43.616 A:middle
When the user is at
home, communication

00:03:43.616 --> 00:03:45.076 A:middle
between their Apple device

00:03:45.076 --> 00:03:47.856 A:middle
and their HomeKit enabled
accessories is direct.

00:03:48.646 --> 00:03:51.976 A:middle
So all that a user need is their
HomeKit enabled accessories

00:03:52.236 --> 00:03:56.006 A:middle
and their Apple device to
talk to their accessories.

00:03:56.496 --> 00:03:58.716 A:middle
This communication
is either using Wi-Fi

00:03:59.096 --> 00:04:00.486 A:middle
or Bluetooth low energy.

00:03:59.096 --> 00:04:00.486 A:middle
or Bluetooth low energy.

00:04:01.006 --> 00:04:07.916 A:middle
When the user is away from
their home, remote access

00:04:08.086 --> 00:04:12.366 A:middle
to their accessories at home
is provided via the Apple TV,

00:04:12.576 --> 00:04:15.036 A:middle
which acts as a remote
access gateway.

00:04:15.816 --> 00:04:18.796 A:middle
And Apple TV then securely
channels the communication

00:04:18.796 --> 00:04:19.935 A:middle
between the user's device

00:04:20.185 --> 00:04:25.266 A:middle
and their accessories,
which are at home.

00:04:25.476 --> 00:04:30.156 A:middle
Security. We have built
HomeKit with security

00:04:30.156 --> 00:04:32.176 A:middle
in mind right from day one.

00:04:33.496 --> 00:04:37.126 A:middle
All HomeKit communications
are end-to-end secure.

00:04:37.896 --> 00:04:40.076 A:middle
What this means is
the keys that are used

00:04:40.076 --> 00:04:43.226 A:middle
to secure this communication
reside only

00:04:43.226 --> 00:04:44.516 A:middle
on the user's devices.

00:04:46.026 --> 00:04:48.246 A:middle
So even if the communication
flows

00:04:48.246 --> 00:04:50.356 A:middle
through intermediate
devices or services,

00:04:50.716 --> 00:04:52.206 A:middle
they cannot be decrypted.

00:04:52.716 --> 00:04:53.976 A:middle
Not even by Apple.

00:04:59.816 --> 00:05:02.286 A:middle
HomeKit provides for
what's known in the industry

00:04:59.816 --> 00:05:02.286 A:middle
HomeKit provides for
what's known in the industry

00:05:02.286 --> 00:05:04.126 A:middle
as perfect forward secrecy.

00:05:04.996 --> 00:05:07.816 A:middle
What this means is every
communication session

00:05:07.936 --> 00:05:09.726 A:middle
between an Apple user's device

00:05:10.186 --> 00:05:12.326 A:middle
and their HomeKit
enabled accessory,

00:05:12.786 --> 00:05:15.976 A:middle
user's new session keys
which are generated just

00:05:15.976 --> 00:05:18.466 A:middle
for that session, and after
the session is completed,

00:05:18.746 --> 00:05:20.046 A:middle
these keys are then discarded.

00:05:20.826 --> 00:05:25.486 A:middle
Now this is great because
even if in the future any

00:05:25.486 --> 00:05:28.696 A:middle
of the device is compromised and
a long-term key is compromised,

00:05:29.136 --> 00:05:33.276 A:middle
that then cannot be used to
decrypt any communication

00:05:33.516 --> 00:05:38.326 A:middle
that would have happened
in the past.

00:05:38.466 --> 00:05:40.336 A:middle
Home data is private.

00:05:41.076 --> 00:05:44.266 A:middle
We take care of privacy
in our API's as well

00:05:44.266 --> 00:05:48.536 A:middle
as applications have to
explicitly ask user's permission

00:05:48.956 --> 00:05:53.216 A:middle
to get access to
their home data.

00:05:53.376 --> 00:05:55.676 A:middle
HomeKit supports a
variety of accessories.

00:05:56.326 --> 00:05:59.486 A:middle
Working with our accessory
partners, we have a variety

00:05:59.486 --> 00:06:01.046 A:middle
of accessories in
the market today,

00:05:59.486 --> 00:06:01.046 A:middle
of accessories in
the market today,

00:06:01.516 --> 00:06:04.086 A:middle
and many of our partners
are bringing new

00:06:04.086 --> 00:06:05.806 A:middle
and exciting classes
of accessories

00:06:06.126 --> 00:06:07.676 A:middle
to the HomeKit ecosystem.

00:06:10.556 --> 00:06:14.196 A:middle
So that was a very
high-level overview of HomeKit.

00:06:14.456 --> 00:06:17.206 A:middle
With that background,
let's get started

00:06:17.566 --> 00:06:22.146 A:middle
with what's new in HomeKit.

00:06:22.236 --> 00:06:25.216 A:middle
So we're going to cover
three major areas.

00:06:26.576 --> 00:06:27.966 A:middle
First, platform.

00:06:29.326 --> 00:06:31.686 A:middle
We are expanding
HomeKit capabilities

00:06:32.116 --> 00:06:36.766 A:middle
through Apple's platform
for iOS, watchOS, and tvOS.

00:06:37.636 --> 00:06:43.226 A:middle
We are introducing support
for new and exciting classes

00:06:43.226 --> 00:06:45.096 A:middle
of accessories in this release.

00:06:45.646 --> 00:06:51.496 A:middle
And all this new
functionality as well

00:06:51.496 --> 00:06:54.246 A:middle
as several enhancements
are available

00:06:54.586 --> 00:06:57.736 A:middle
to your applications via
updates to the framework,

00:06:57.976 --> 00:07:02.826 A:middle
and we will cover
the details there.

00:06:57.976 --> 00:07:02.826 A:middle
and we will cover
the details there.

00:07:02.996 --> 00:07:07.226 A:middle
First, on platform,
we are really thrilled

00:07:07.696 --> 00:07:11.146 A:middle
to deliver an Apple app
for HomeKit this year.

00:07:12.436 --> 00:07:18.386 A:middle
The home app provides a very
simple interface for users

00:07:18.386 --> 00:07:20.416 A:middle
to control their
accessories as well

00:07:20.416 --> 00:07:22.816 A:middle
as configure their
accessories in their home.

00:07:23.476 --> 00:07:26.586 A:middle
It also enables users
to set up automations

00:07:26.586 --> 00:07:27.646 A:middle
that they have in their home.

00:07:29.996 --> 00:07:34.956 A:middle
Home app is supported on all
iOS devices, iPod Touch, iPhone,

00:07:35.046 --> 00:07:41.346 A:middle
looks beautiful on an iPad,
and, yes, with watchOS 3,

00:07:41.926 --> 00:07:44.836 A:middle
home app is also supported
on the Apple Watch.

00:07:47.716 --> 00:07:50.456 A:middle
We think this is going to be a
great experience for our users.

00:07:53.066 --> 00:07:57.546 A:middle
Not only that, we are also
integrating HomeKit deep

00:07:57.726 --> 00:07:58.626 A:middle
into the system.

00:07:59.206 --> 00:08:03.346 A:middle
Now HomeKit is also available
directly on the control center.

00:07:59.206 --> 00:08:03.346 A:middle
Now HomeKit is also available
directly on the control center.

00:08:04.486 --> 00:08:07.486 A:middle
So the user can configure
their favorite accessories

00:08:07.596 --> 00:08:11.736 A:middle
and can have control of the
accessories as well as control

00:08:11.846 --> 00:08:13.956 A:middle
to [inaudible] directly
from the control center.

00:08:17.376 --> 00:08:22.316 A:middle
Second on platform is remote
access and automation.

00:08:23.566 --> 00:08:28.196 A:middle
With tvOS 10, we are extending
the cable, capabilities

00:08:28.196 --> 00:08:31.336 A:middle
on the Apple TV so that in
addition to remote access,

00:08:31.646 --> 00:08:35.336 A:middle
now the Apple TV runs
all the automations

00:08:35.546 --> 00:08:37.446 A:middle
that the user has set
up for their home.

00:08:38.515 --> 00:08:44.976 A:middle
[ Applause ]

00:08:45.476 --> 00:08:49.946 A:middle
Yeah, that's great because now
no matter where the user is,

00:08:50.696 --> 00:08:53.276 A:middle
the virtual part of the world,
they can be rest assured

00:08:53.686 --> 00:08:55.756 A:middle
that all the automations now run

00:08:56.036 --> 00:08:58.386 A:middle
from their Apple
TV at their homes.

00:09:00.816 --> 00:09:03.006 A:middle
Apple TV also enables

00:09:03.006 --> 00:09:06.406 A:middle
for additional controls
for shared users.

00:09:07.136 --> 00:09:09.336 A:middle
Now it is also possible now

00:09:09.336 --> 00:09:12.716 A:middle
to grant administrative
access to a shared user.

00:09:13.466 --> 00:09:16.736 A:middle
So a shared user with an
administrative access can change

00:09:16.736 --> 00:09:17.876 A:middle
configurations in the home.

00:09:18.476 --> 00:09:20.856 A:middle
So they can add or remove
accessories in the home,

00:09:21.356 --> 00:09:24.656 A:middle
or they, in turn, can also
invite additional users

00:09:25.006 --> 00:09:27.016 A:middle
to the home and give
them control

00:09:27.016 --> 00:09:31.176 A:middle
of the accessories at home.

00:09:31.386 --> 00:09:34.956 A:middle
Now it is also possible to
control per user remote access.

00:09:35.306 --> 00:09:39.606 A:middle
So it is possible to grant or
deny remote access capabilities

00:09:39.906 --> 00:09:42.696 A:middle
to your accessories at home
using this functionality.

00:09:47.616 --> 00:09:48.936 A:middle
It's the same set

00:09:48.936 --> 00:09:55.296 A:middle
of functionality is now
also supported by the iPad.

00:09:55.446 --> 00:10:00.326 A:middle
Not only that, if
the user has multiple

00:09:55.446 --> 00:10:00.326 A:middle
Not only that, if
the user has multiple

00:10:00.326 --> 00:10:02.806 A:middle
of these remote access
capability devices

00:10:02.806 --> 00:10:06.956 A:middle
in their home, like in this
example, an Apple TV and an iPad

00:10:07.266 --> 00:10:09.376 A:middle
or any combination
of these devices,

00:10:09.946 --> 00:10:12.336 A:middle
they will automatically
work together

00:10:12.506 --> 00:10:14.976 A:middle
and extend the HomeKit
network within the home.

00:10:15.606 --> 00:10:17.296 A:middle
And to communicate
with the accessories,

00:10:17.596 --> 00:10:20.446 A:middle
they will automatically select
the part to communicate.

00:10:20.926 --> 00:10:23.206 A:middle
No additional configuration
from the user's part.

00:10:23.496 --> 00:10:26.506 A:middle
This is all just
automatic from HomeKit.

00:10:28.276 --> 00:10:32.516 A:middle
Third update on platform
is on tvOS 10.

00:10:33.566 --> 00:10:38.856 A:middle
We are thrilled to bring the
HomeKit framework to the tvOS.

00:10:39.476 --> 00:10:43.206 A:middle
[ Applause ]

00:10:43.706 --> 00:10:45.206 A:middle
Now with the HomeKit
framework on the tvOS,

00:10:45.206 --> 00:10:49.566 A:middle
your applications can
view home configurations,

00:10:50.666 --> 00:10:53.316 A:middle
control the accessories
in the home as well

00:10:53.316 --> 00:10:58.926 A:middle
as execute scenes
directly from the Apple TV.

00:10:59.116 --> 00:11:03.206 A:middle
This also means that
now Siri is available

00:10:59.116 --> 00:11:03.206 A:middle
This also means that
now Siri is available

00:11:03.206 --> 00:11:04.976 A:middle
for HomeKit on the Apple TV.

00:11:06.676 --> 00:11:09.876 A:middle
[ Applause ]

00:11:10.376 --> 00:11:13.416 A:middle
So directly from your
convenience of your Siri remote,

00:11:13.766 --> 00:11:18.996 A:middle
you can control your
HomeKit accessories at home.

00:11:19.196 --> 00:11:23.016 A:middle
So those were the major
updates on the platform front.

00:11:24.316 --> 00:11:25.436 A:middle
Let's just quickly recap.

00:11:26.286 --> 00:11:28.626 A:middle
First, home app.

00:11:28.876 --> 00:11:32.986 A:middle
An Apple-designed app for
HomeKit that makes setting

00:11:32.986 --> 00:11:36.176 A:middle
up of accessories as well as
controlling common functions

00:11:36.176 --> 00:11:40.526 A:middle
of the accessories very easy.

00:11:40.786 --> 00:11:42.906 A:middle
Second, remote access
and automation.

00:11:43.026 --> 00:11:45.636 A:middle
We're extending the capabilities
provided by the Apple TV

00:11:45.636 --> 00:11:47.096 A:middle
so that it now runs automation,

00:11:47.346 --> 00:11:51.186 A:middle
and it also enables additional
controls for shared users.

00:11:53.256 --> 00:11:58.936 A:middle
And the same capability is
now also extended to the iPad.

00:11:59.026 --> 00:12:02.676 A:middle
And, third, on tvOS, we're
bringing the HomeKit framework.

00:11:59.026 --> 00:12:02.676 A:middle
And, third, on tvOS, we're
bringing the HomeKit framework.

00:12:03.916 --> 00:12:04.826 A:middle
So we are really thrilled

00:12:04.826 --> 00:12:10.936 A:middle
to bring these capabilities
to the platform.

00:12:11.016 --> 00:12:15.206 A:middle
The second area we will
cover is new accessories.

00:12:17.916 --> 00:12:22.796 A:middle
First on new accessories, we
are introducing popular class

00:12:22.796 --> 00:12:25.646 A:middle
of air treatment accessories
to HomeKit this year.

00:12:26.706 --> 00:12:30.676 A:middle
So now HomeKit can support
air conditioners and heaters,

00:12:31.826 --> 00:12:35.726 A:middle
air purifiers as
well as humidifiers.

00:12:36.696 --> 00:12:41.086 A:middle
This is great because our users
can now have these accessories

00:12:41.146 --> 00:12:45.276 A:middle
which are also HomeKit enabled
part of their HomeKit ecosystem

00:12:45.276 --> 00:12:46.826 A:middle
in their home and add it

00:12:46.826 --> 00:12:52.566 A:middle
to their automations
and other things.

00:12:52.756 --> 00:12:58.426 A:middle
Next, we are really thrilled to
bring, to bring a powerful class

00:12:58.526 --> 00:13:01.116 A:middle
of camera accessories
to HomeKit this year.

00:12:58.526 --> 00:13:01.116 A:middle
of camera accessories
to HomeKit this year.

00:13:02.516 --> 00:13:07.886 A:middle
[ Applause ]

00:13:08.386 --> 00:13:09.866 A:middle
Now with camera accessories,

00:13:10.256 --> 00:13:14.016 A:middle
your applications can
display live video streams

00:13:14.016 --> 00:13:14.896 A:middle
from the camera.

00:13:15.746 --> 00:13:18.206 A:middle
Display take and display
still images from the camera.

00:13:19.666 --> 00:13:23.026 A:middle
Control all the settings
on the camera as well

00:13:23.026 --> 00:13:26.116 A:middle
as control the speaker
and microphone settings.

00:13:29.956 --> 00:13:31.936 A:middle
Third, doorbells.

00:13:32.956 --> 00:13:35.426 A:middle
Now doorbell is a
very simple accessory.

00:13:36.296 --> 00:13:41.076 A:middle
It generates and events once
the doorbell is pressed.

00:13:41.286 --> 00:13:42.786 A:middle
Also the doorbell has control

00:13:42.786 --> 00:13:46.176 A:middle
where it can control the volume
settings of the doorbell chime,

00:13:46.816 --> 00:13:49.566 A:middle
and also if the doorbell has
a visual indicator settings,

00:13:49.906 --> 00:13:53.626 A:middle
those can also be controlled
by the doorbell accessory.

00:13:54.856 --> 00:13:58.216 A:middle
Now doorbells we are
seeing are also integrated

00:13:58.216 --> 00:14:00.176 A:middle
with other kinds of accessories.

00:13:58.216 --> 00:14:00.176 A:middle
with other kinds of accessories.

00:14:01.046 --> 00:14:03.366 A:middle
So doorbell camera
is popular category.

00:14:04.106 --> 00:14:07.286 A:middle
Now this configuration is
also supported by HomeKit.

00:14:07.886 --> 00:14:14.426 A:middle
Not only are these powerful
accessories supported

00:14:14.426 --> 00:14:19.266 A:middle
by HomeKit, we are also tightly
integrating the experience

00:14:19.536 --> 00:14:20.436 A:middle
into the system.

00:14:22.476 --> 00:14:29.166 A:middle
So now, for example, if you
have a doorbell, a door lock,

00:14:29.756 --> 00:14:34.826 A:middle
and a camera which are
all configured by the user

00:14:34.826 --> 00:14:38.396 A:middle
to be part of a room, maybe
the user called the room an

00:14:38.396 --> 00:14:43.536 A:middle
entryway, HomeKit will
automatically associate services

00:14:43.846 --> 00:14:45.946 A:middle
from these different
accessories,

00:14:46.756 --> 00:14:50.326 A:middle
and they can provide
contact-sensitive controls

00:14:50.686 --> 00:14:51.306 A:middle
to the user.

00:14:52.596 --> 00:14:55.616 A:middle
This enables for some
magical experiences

00:14:55.616 --> 00:14:57.576 A:middle
like rich notifications.

00:14:58.226 --> 00:15:03.456 A:middle
So, for example, now here,
when the doorbell rings,

00:14:58.226 --> 00:15:03.456 A:middle
So, for example, now here,
when the doorbell rings,

00:15:03.976 --> 00:15:07.386 A:middle
HomeKit will automatically take
a snapshot from the camera,

00:15:07.876 --> 00:15:11.236 A:middle
and the user is presented
with a rich notification.

00:15:13.426 --> 00:15:17.556 A:middle
Also, there are controls
directly on the notification

00:15:17.786 --> 00:15:20.736 A:middle
where the user can press,
touch on the intercom

00:15:20.736 --> 00:15:23.806 A:middle
and start an audio session
with the camera, or if the user

00:15:23.806 --> 00:15:25.616 A:middle
so chooses, unlock the door,

00:15:26.396 --> 00:15:29.956 A:middle
and the notification
displays live video streaming

00:15:30.526 --> 00:15:33.906 A:middle
from the camera.

00:15:33.906 --> 00:15:37.396 A:middle
And, yes, the same
functionality is also available

00:15:37.786 --> 00:15:38.936 A:middle
on the Apple Watch.

00:15:39.706 --> 00:15:41.036 A:middle
And, yes, touching on the,

00:15:41.806 --> 00:15:44.566 A:middle
on the picture there will
start a live video stream

00:15:44.796 --> 00:15:47.826 A:middle
from your HomeKit camera
to your Apple Watch.

00:15:49.696 --> 00:15:53.396 A:middle
And, yeah, you can unlock
your door, if you so choose,

00:15:53.576 --> 00:15:54.776 A:middle
directly from the Apple Watch.

00:15:56.196 --> 00:15:59.856 A:middle
Next, let's look at the updates
to the HomeKit framework.

00:16:01.676 --> 00:16:05.636 A:middle
So we'll start off first
with a, with few simple

00:16:06.006 --> 00:16:08.266 A:middle
but very powerful
enhancements that we have added

00:16:08.306 --> 00:16:11.336 A:middle
to the framework that
gives more context

00:16:11.336 --> 00:16:13.816 A:middle
about the accessory
to your applications.

00:16:14.726 --> 00:16:16.606 A:middle
First up is primary service.

00:16:18.016 --> 00:16:20.216 A:middle
Now this is an example
of an accessory

00:16:20.556 --> 00:16:24.726 A:middle
which has two services - a fan
service and a light service.

00:16:25.066 --> 00:16:27.446 A:middle
So this is what your
application today gets.

00:16:27.786 --> 00:16:29.436 A:middle
Now just by looking
at these services,

00:16:29.726 --> 00:16:34.226 A:middle
it is not clear what the user
perceives this accessory as.

00:16:35.306 --> 00:16:40.236 A:middle
Is this a light with an
exhaust fan, or is this a fan

00:16:40.236 --> 00:16:41.116 A:middle
which also has a light?

00:16:42.906 --> 00:16:45.206 A:middle
Now, with update to
the HomeKit protocol,

00:16:45.206 --> 00:16:48.916 A:middle
the accessory can mark
its primary service,

00:16:49.516 --> 00:16:51.276 A:middle
and this is available back

00:16:51.346 --> 00:16:55.116 A:middle
to your application using
the isPrimaryService property

00:16:55.416 --> 00:16:56.696 A:middle
on the HMService class.

00:16:57.226 --> 00:16:58.646 A:middle
Now this will be great for you

00:16:59.106 --> 00:17:02.816 A:middle
because now you can show
content-sensitive controls

00:16:59.106 --> 00:17:02.816 A:middle
because now you can show
content-sensitive controls

00:17:02.816 --> 00:17:04.866 A:middle
about the accessory
to your users.

00:17:07.915 --> 00:17:10.886 A:middle
Second example is
on linked services.

00:17:11.806 --> 00:17:16.326 A:middle
Here's another example where
an accessory has three outlet

00:17:16.326 --> 00:17:18.366 A:middle
services and a switch service.

00:17:19.476 --> 00:17:21.656 A:middle
Now, again, by just
looking at these services,

00:17:21.656 --> 00:17:24.126 A:middle
it is not clear what
the switch controls.

00:17:24.665 --> 00:17:26.476 A:middle
Does the switch control
one of the outlet

00:17:26.806 --> 00:17:29.256 A:middle
or any other combination
of these outlets?

00:17:30.666 --> 00:17:33.026 A:middle
When a user looks
at the accessory,

00:17:33.496 --> 00:17:37.796 A:middle
it is clear that that switch
controls all the three outlets.

00:17:38.416 --> 00:17:41.216 A:middle
Now with linked services,
services can link

00:17:41.216 --> 00:17:46.136 A:middle
with each other and communicate
back their relationship

00:17:46.356 --> 00:17:50.046 A:middle
to HomeKit, and this is
available back to you.

00:17:50.346 --> 00:17:52.686 A:middle
So in this case, the
switch is linking

00:17:52.686 --> 00:17:55.136 A:middle
to these three outlets
communicating a logical

00:17:55.136 --> 00:17:56.756 A:middle
relationship that the switch has

00:17:57.036 --> 00:17:58.756 A:middle
in controlling these
three outlets.

00:17:59.336 --> 00:18:02.136 A:middle
So now for your users, when
they, when they are looking

00:17:59.336 --> 00:18:02.136 A:middle
So now for your users, when
they, when they are looking

00:18:02.136 --> 00:18:05.546 A:middle
at your UI, which is
showing the outlet,

00:18:05.546 --> 00:18:07.836 A:middle
you can now additionally
show the state of the outlet,

00:18:07.836 --> 00:18:10.776 A:middle
whether it is powered on
or off based on the fact

00:18:10.776 --> 00:18:12.866 A:middle
that it is linked
to, from a switch.

00:18:15.916 --> 00:18:17.866 A:middle
Third is valid values.

00:18:18.346 --> 00:18:21.796 A:middle
To explain valid values, let's
take an example where we want

00:18:21.796 --> 00:18:22.756 A:middle
to build an accessory.

00:18:23.346 --> 00:18:25.646 A:middle
Let's say we're building an
air conditioner accessory,

00:18:26.536 --> 00:18:27.976 A:middle
and as we're building
this accessory,

00:18:27.976 --> 00:18:31.356 A:middle
we want to incorporate the
Apple-defined characteristics

00:18:31.626 --> 00:18:32.526 A:middle
for this accessory.

00:18:32.956 --> 00:18:36.696 A:middle
So we will pick a target and
cooling state for our accessory.

00:18:37.186 --> 00:18:40.786 A:middle
So this is how it is
defined in the specification.

00:18:41.966 --> 00:18:45.886 A:middle
Now the air conditioner that we
are building doesn't support,

00:18:46.016 --> 00:18:46.736 A:middle
let's say, heating.

00:18:47.816 --> 00:18:51.376 A:middle
So the heat and the auto
state here is not valid

00:18:51.376 --> 00:18:52.346 A:middle
for my configuration.

00:18:55.016 --> 00:18:59.456 A:middle
Now it is possible for
accessories to mark enumerations

00:19:00.306 --> 00:19:03.636 A:middle
in Apple-defined characteristics
which are not valid

00:19:03.636 --> 00:19:04.656 A:middle
for its configuration.

00:19:04.976 --> 00:19:08.506 A:middle
So in this case, the accessory
marks the heat and auto

00:19:08.506 --> 00:19:11.846 A:middle
as not supported, and this
information is then, again,

00:19:12.126 --> 00:19:14.116 A:middle
available back to
your applications

00:19:14.406 --> 00:19:17.756 A:middle
through the
HMCharacteristicMetadata valid

00:19:17.756 --> 00:19:18.686 A:middle
values property.

00:19:20.086 --> 00:19:23.336 A:middle
Now you can show controls
that are only valid

00:19:23.666 --> 00:19:28.836 A:middle
to that particular
configuration of the accessory.

00:19:28.936 --> 00:19:31.556 A:middle
Next, setting up of
HomeKit accessories.

00:19:32.916 --> 00:19:36.136 A:middle
Today, to set up a
HomeKit accessories,

00:19:36.216 --> 00:19:39.436 A:middle
which is probably the first
step that your user will do,

00:19:40.046 --> 00:19:41.966 A:middle
involves a few different steps.

00:19:43.236 --> 00:19:46.676 A:middle
First, you will start
browsing for the accessories,

00:19:47.936 --> 00:19:52.506 A:middle
and once a new accessory is
found, which is already part

00:19:52.506 --> 00:19:54.786 A:middle
of your Wi-Fi network, or if
it is a Bluetooth accessory,

00:19:54.786 --> 00:19:57.216 A:middle
which is in range,
this is informed back

00:19:57.216 --> 00:20:01.776 A:middle
to you via the accessory
browser's didFindNewAccessory

00:19:57.216 --> 00:20:01.776 A:middle
to you via the accessory
browser's didFindNewAccessory

00:20:01.776 --> 00:20:02.666 A:middle
delegate callback.

00:20:04.386 --> 00:20:06.136 A:middle
And once you have
that accessory,

00:20:06.356 --> 00:20:10.226 A:middle
you can then call the add
accessory method on HMHome

00:20:10.296 --> 00:20:12.436 A:middle
to start adding this
accessory to the home.

00:20:15.056 --> 00:20:19.396 A:middle
But for Wi-Fi accessories
that are not already part

00:20:19.396 --> 00:20:21.356 A:middle
of the user's Wi-Fi
home network,

00:20:22.586 --> 00:20:24.936 A:middle
you need to do some
additional steps

00:20:24.936 --> 00:20:27.986 A:middle
to get these accessories
added and configured

00:20:27.986 --> 00:20:29.366 A:middle
into the user's Wi-Fi network.

00:20:30.166 --> 00:20:32.466 A:middle
You do that today using
the [inaudible] framework.

00:20:33.166 --> 00:20:36.596 A:middle
So there are some additional
steps required for that.

00:20:36.926 --> 00:20:38.286 A:middle
We thought we can do better.

00:20:39.086 --> 00:20:45.786 A:middle
So now in iOS 10, we
have one simple API,

00:20:46.476 --> 00:20:50.756 A:middle
add and set up accessories
that completely takes care

00:20:50.756 --> 00:20:52.746 A:middle
of all the steps
that are required

00:20:52.856 --> 00:20:56.136 A:middle
to configure the accessory
and add it to the user's home.

00:20:56.916 --> 00:21:00.246 A:middle
So on calling this method,
addAndSetupAccessories,

00:20:56.916 --> 00:21:00.246 A:middle
So on calling this method,
addAndSetupAccessories,

00:21:00.596 --> 00:21:04.606 A:middle
the user is guided
directly using this UI

00:21:04.926 --> 00:21:06.226 A:middle
to select the accessory.

00:21:06.226 --> 00:21:10.126 A:middle
So in this case here, it's
showing all the configured

00:21:10.126 --> 00:21:12.626 A:middle
as well as accessory,
new accessories

00:21:12.626 --> 00:21:13.976 A:middle
that are part of
the Wi-Fi network.

00:21:14.576 --> 00:21:17.486 A:middle
The user can select the
accessories they want to add,

00:21:17.486 --> 00:21:20.716 A:middle
and once it is selected,
if it was not already part

00:21:20.716 --> 00:21:21.916 A:middle
of the user's Wi-Fi network,

00:21:21.916 --> 00:21:24.306 A:middle
it is added to the user's
Wi-Fi network securely.

00:21:25.256 --> 00:21:27.886 A:middle
Then the HomeKit
scan code is scanned,

00:21:29.106 --> 00:21:31.836 A:middle
and HomeKit pairing is
performed on the accessory,

00:21:32.426 --> 00:21:38.166 A:middle
and then the user is prompted
to name the accessory,

00:21:38.536 --> 00:21:40.216 A:middle
select a room for the accessory.

00:21:40.816 --> 00:21:43.366 A:middle
And also in this case,
since it's an outlet

00:21:43.366 --> 00:21:45.126 A:middle
which is generally
kind of an accessory,

00:21:45.396 --> 00:21:49.046 A:middle
the user is also prompt
to associate what kind

00:21:49.046 --> 00:21:50.756 A:middle
of accessory is connected
to this outlet.

00:21:51.126 --> 00:21:53.956 A:middle
So in our example here,
this outlet, let's say,

00:21:53.956 --> 00:21:55.156 A:middle
is being connected to a fan.

00:21:55.566 --> 00:21:57.986 A:middle
So we select the fan as
the associated service

00:21:57.986 --> 00:22:00.076 A:middle
for this accessory,
and, finally,

00:21:57.986 --> 00:22:00.076 A:middle
for this accessory,
and, finally,

00:22:00.076 --> 00:22:03.986 A:middle
the user can also choose to
show this accessory as part

00:22:03.986 --> 00:22:05.796 A:middle
of their favorites, and using,

00:22:05.796 --> 00:22:09.796 A:middle
doing that enables this
accessory to appear as part

00:22:09.796 --> 00:22:11.426 A:middle
of their control
center controls.

00:22:12.516 --> 00:22:13.126 A:middle
So that's it.

00:22:13.516 --> 00:22:16.356 A:middle
Just one simple API,
and user is guided

00:22:16.406 --> 00:22:18.246 A:middle
through this complete
set up flow.

00:22:18.726 --> 00:22:22.466 A:middle
And now all applications
then will also have this

00:22:22.626 --> 00:22:24.036 A:middle
consistent experience.

00:22:24.266 --> 00:22:26.096 A:middle
We think this is going to
be great for our users,

00:22:26.346 --> 00:22:29.836 A:middle
and we really encourage all of
you to start using this API.

00:22:32.516 --> 00:22:39.456 A:middle
[ Applause ]

00:22:39.956 --> 00:22:42.856 A:middle
Next, let's talk about
camera accessories.

00:22:48.456 --> 00:22:53.436 A:middle
So a camera is a rich
and complex accessories.

00:22:53.996 --> 00:22:56.596 A:middle
It has many different
controls and configurations.

00:22:57.866 --> 00:23:00.956 A:middle
So rather than exposing all the
raw services and characteristics

00:22:57.866 --> 00:23:00.956 A:middle
So rather than exposing all the
raw services and characteristics

00:23:00.956 --> 00:23:04.746 A:middle
to your app, we are providing
a very easy way for you

00:23:04.746 --> 00:23:06.966 A:middle
to take advantage of
this powerful accessory

00:23:07.506 --> 00:23:09.456 A:middle
with cameraProfile objects.

00:23:10.586 --> 00:23:14.246 A:middle
A profile is nothing but a
collection of related services

00:23:14.586 --> 00:23:17.256 A:middle
that describe a general
behavior for an accessory.

00:23:18.136 --> 00:23:21.786 A:middle
So cameraProfile objects
provides you all the interfaces

00:23:21.786 --> 00:23:25.556 A:middle
that is needed for you to
control the camera accessories.

00:23:27.876 --> 00:23:31.326 A:middle
So on an accessory, you can
get to the cameraProfile

00:23:31.836 --> 00:23:36.306 A:middle
from the cameraProfile
property on the HM accessory.

00:23:36.306 --> 00:23:40.646 A:middle
An accessory can
support multiple cameras,

00:23:40.976 --> 00:23:42.646 A:middle
and those are all
supported by HomeKit.

00:23:42.966 --> 00:23:44.526 A:middle
So it will be one
of the elements

00:23:44.526 --> 00:23:45.626 A:middle
in this cameraProfile array.

00:23:45.626 --> 00:23:51.356 A:middle
Let's look at what a
cameraProfile provides.

00:23:52.006 --> 00:23:54.436 A:middle
A cameraProfile provides
additional interfaces

00:23:54.436 --> 00:23:57.436 A:middle
that allow you to control
different aspects of the camera.

00:23:57.786 --> 00:24:00.686 A:middle
So you can display and
control the camera stream,

00:23:57.786 --> 00:24:00.686 A:middle
So you can display and
control the camera stream,

00:24:00.966 --> 00:24:03.046 A:middle
which is both the audio and
video stream from the camera;

00:24:04.136 --> 00:24:06.836 A:middle
display, take and display
still images from the camera;

00:24:08.046 --> 00:24:10.926 A:middle
control all the settings
on the camera as well

00:24:10.926 --> 00:24:12.396 A:middle
as control the speaker

00:24:12.396 --> 00:24:14.176 A:middle
and microphone settings
on the camera.

00:24:15.486 --> 00:24:17.956 A:middle
Let's look at the
HMCameraProfileClass

00:24:17.956 --> 00:24:19.476 A:middle
that provides these interfaces.

00:24:20.286 --> 00:24:22.506 A:middle
First is stream control.

00:24:23.536 --> 00:24:25.646 A:middle
Let's look at HMStreamControl.

00:24:25.956 --> 00:24:29.556 A:middle
So HMStreamControl provides
some few simple methods

00:24:29.726 --> 00:24:32.936 A:middle
that allow you to start
and stop streams directly

00:24:32.936 --> 00:24:33.536 A:middle
from the camera.

00:24:34.786 --> 00:24:38.466 A:middle
So you call the startStream
method on the HMCameraStream

00:24:38.696 --> 00:24:41.706 A:middle
to start a live stream
from the camera.

00:24:42.226 --> 00:24:45.226 A:middle
Once the stream starts,
it is informed back

00:24:45.326 --> 00:24:48.616 A:middle
to you using the
StreamControl delegate callback.

00:24:51.676 --> 00:24:53.036 A:middle
So once a stream starts,

00:24:53.186 --> 00:24:56.996 A:middle
the camera stream control
didStartStream informs you back

00:24:57.236 --> 00:24:58.316 A:middle
that the stream has started.

00:24:58.956 --> 00:25:02.336 A:middle
Similarly, to stop the stream,
you call the stopStream method,

00:24:58.956 --> 00:25:02.336 A:middle
Similarly, to stop the stream,
you call the stopStream method,

00:25:02.836 --> 00:25:06.326 A:middle
and, again, using the same
mechanism it is informed back

00:25:06.326 --> 00:25:10.276 A:middle
to you via the camera
stream control didStopStream

00:25:10.276 --> 00:25:11.716 A:middle
with error delegate callback.

00:25:13.916 --> 00:25:18.656 A:middle
Once the stream is started,
your application has a reference

00:25:18.656 --> 00:25:22.446 A:middle
to the stream using via
the cameraStream property.

00:25:23.466 --> 00:25:25.596 A:middle
Let's look at what the
cameraStream looks like.

00:25:26.866 --> 00:25:30.406 A:middle
The cameraStream
represents both the audio

00:25:30.746 --> 00:25:32.536 A:middle
and the video parts
of the stream.

00:25:33.476 --> 00:25:35.366 A:middle
So on the cameraStream class,

00:25:35.776 --> 00:25:38.946 A:middle
you have additional controls
whereby you can control the

00:25:39.216 --> 00:25:41.326 A:middle
audio settings from
the camera stream.

00:25:42.416 --> 00:25:45.456 A:middle
So using this, you can
either mute the stream

00:25:45.906 --> 00:25:47.946 A:middle
or fully allow incoming audio

00:25:48.366 --> 00:25:51.296 A:middle
or allow bidirectional
audio from the camera.

00:25:51.926 --> 00:25:56.356 A:middle
Now that you have a stream,
what do you want to do with it?

00:25:56.876 --> 00:25:59.546 A:middle
Well, you would like to
display it in your app.

00:26:00.426 --> 00:26:03.326 A:middle
How do you do that?

00:26:03.506 --> 00:26:04.736 A:middle
It's simple.

00:26:04.736 --> 00:26:07.456 A:middle
On iOS 10 and tvOS
10, all that you need

00:26:07.516 --> 00:26:10.636 A:middle
to do is create a HMCameraView.

00:26:11.336 --> 00:26:16.316 A:middle
And to the view and on the
view we have a single property,

00:26:16.516 --> 00:26:19.746 A:middle
the camera source, and you
need to just assign the stream

00:26:19.746 --> 00:26:22.066 A:middle
that you just got when
you started the stream

00:26:22.376 --> 00:26:23.096 A:middle
to this property.

00:26:23.386 --> 00:26:23.776 A:middle
That's it.

00:26:24.506 --> 00:26:26.446 A:middle
All that is needed for your app

00:26:26.546 --> 00:26:31.306 A:middle
to show live stream
from the camera.

00:26:31.456 --> 00:26:33.016 A:middle
It's very similar on watch OS.

00:26:33.306 --> 00:26:36.516 A:middle
You just create an
HM WKInterface camera

00:26:36.696 --> 00:26:39.926 A:middle
and call the setCameraSource
method

00:26:40.366 --> 00:26:45.326 A:middle
to show live stream
directly on your Apple Watch.

00:26:45.746 --> 00:26:50.526 A:middle
So those were a few different
objects for you to look

00:26:51.566 --> 00:26:53.616 A:middle
to control your camera
accessory,

00:26:53.956 --> 00:26:55.456 A:middle
but in reality, it's
pretty simple.

00:26:55.456 --> 00:26:57.746 A:middle
Let's look at an example call.

00:27:00.246 --> 00:27:03.726 A:middle
So first we get to our
cameraProfile on our accessory,

00:27:03.896 --> 00:27:06.976 A:middle
and in this case, we're just
picking the first cameraProfile

00:27:06.976 --> 00:27:11.016 A:middle
that is there, and on the
cameraProfile's stream.Control,

00:27:11.426 --> 00:27:12.736 A:middle
we call the startStream method

00:27:12.996 --> 00:27:14.386 A:middle
which will start
a camera stream.

00:27:15.016 --> 00:27:19.956 A:middle
And to display our stream,
we'll create a HMCameraView,

00:27:21.116 --> 00:27:23.186 A:middle
and once our stream is started,

00:27:23.896 --> 00:27:26.636 A:middle
it's informed back via
this delegate callback

00:27:26.766 --> 00:27:28.716 A:middle
cameraStreamControl
didStartStream,

00:27:29.266 --> 00:27:33.416 A:middle
and all that we need to do here
is assign the camera stream

00:27:33.826 --> 00:27:35.836 A:middle
to the camera source
property on the view.

00:27:36.366 --> 00:27:36.786 A:middle
That's it.

00:27:37.226 --> 00:27:40.156 A:middle
Now your view in your
application is showing live

00:27:40.156 --> 00:27:41.326 A:middle
stream from the camera.

00:27:45.336 --> 00:27:47.486 A:middle
Next, let's look
at snapshotControl.

00:27:47.736 --> 00:27:50.366 A:middle
Snapshot control interfaces
are also very similar

00:27:50.366 --> 00:27:52.136 A:middle
to what we saw with
streamControl.

00:27:53.606 --> 00:27:57.476 A:middle
So for snapshotControl we
have one method, takeSnapshot,

00:27:57.976 --> 00:28:01.366 A:middle
which once a snapshot
is taken informed back

00:27:57.976 --> 00:28:01.366 A:middle
which once a snapshot
is taken informed back

00:28:01.446 --> 00:28:05.546 A:middle
to you via the
cameraSnapshotControl didTake

00:28:05.546 --> 00:28:07.156 A:middle
snapshot method callback.

00:28:07.846 --> 00:28:12.166 A:middle
And the most recent snapshot
reference is available to you

00:28:12.536 --> 00:28:14.796 A:middle
in this most recent
snapshot property.

00:28:15.086 --> 00:28:17.726 A:middle
Let's look at the
SnapshotControl.

00:28:17.726 --> 00:28:22.276 A:middle
The SnapshotControl has
just one additional thing

00:28:22.496 --> 00:28:24.056 A:middle
which will show you
the capture date

00:28:24.056 --> 00:28:27.116 A:middle
of when this snapshot
was captured.

00:28:27.116 --> 00:28:28.756 A:middle
It has both the time and date.

00:28:30.116 --> 00:28:35.816 A:middle
And, again, similarly,
to display your snapshot

00:28:35.816 --> 00:28:38.506 A:middle
into a view, all that you
need to do is create a view

00:28:38.806 --> 00:28:41.036 A:middle
and assign it to this snapshot.

00:28:42.816 --> 00:28:44.596 A:middle
So here's an example to take

00:28:44.596 --> 00:28:46.286 A:middle
and display a snapshot
from the camera.

00:28:46.676 --> 00:28:48.956 A:middle
It's very similar, core
structure is very similar.

00:28:49.636 --> 00:28:51.456 A:middle
First we get to our
cameraProfile.

00:28:52.876 --> 00:28:55.346 A:middle
On this cameraProfile's
snapshotControl,

00:28:55.806 --> 00:28:57.616 A:middle
we call the takeSnapshot method.

00:28:58.436 --> 00:29:01.256 A:middle
We create a view to
display our snapshot,

00:28:58.436 --> 00:29:01.256 A:middle
We create a view to
display our snapshot,

00:29:01.926 --> 00:29:05.536 A:middle
and once a delegate is
called back, it comes back

00:29:05.536 --> 00:29:07.506 A:middle
with a reference
of our snapshot.

00:29:07.866 --> 00:29:09.676 A:middle
We just take that and assign it

00:29:09.736 --> 00:29:11.766 A:middle
to the camera's source
property on our view.

00:29:12.136 --> 00:29:12.516 A:middle
That's it.

00:29:13.106 --> 00:29:19.936 A:middle
That's all you need to show
the snapshot from the camera.

00:29:20.256 --> 00:29:21.526 A:middle
Next, let's look
at settingControls.

00:29:21.526 --> 00:29:25.916 A:middle
So settingControl gives you HM
characteristics which allow you

00:29:25.916 --> 00:29:28.786 A:middle
to control all the settings that
are supported by the camera.

00:29:31.756 --> 00:29:35.476 A:middle
So you have interfaces to
control night vision, tilt,

00:29:35.956 --> 00:29:39.856 A:middle
zoom, rotation, and
mirroring on the camera.

00:29:40.186 --> 00:29:43.346 A:middle
So if the cameraSupport does
not support any one of this,

00:29:43.656 --> 00:29:45.076 A:middle
then that property will be nil.

00:29:45.496 --> 00:29:48.286 A:middle
Otherwise, you have full access
to control all the settings

00:29:48.526 --> 00:29:50.866 A:middle
of this camera from your app.

00:29:54.696 --> 00:29:58.876 A:middle
Last, we'll look at camera
audio control, which allows you

00:29:58.876 --> 00:30:00.446 A:middle
to control both the speaker

00:29:58.876 --> 00:30:00.446 A:middle
to control both the speaker

00:30:00.506 --> 00:30:02.476 A:middle
and microphone settings
on the camera.

00:30:03.856 --> 00:30:06.206 A:middle
Again, these are also
HM characteristic

00:30:06.656 --> 00:30:08.926 A:middle
which will allow you to
change the mute settings

00:30:08.926 --> 00:30:12.016 A:middle
on the microphone, change the
mute settings of the speaker,

00:30:12.636 --> 00:30:14.296 A:middle
control the gain
on the microphone,

00:30:14.576 --> 00:30:16.996 A:middle
or control the speaker volume.

00:30:18.006 --> 00:30:21.506 A:middle
So those are all the key API's
that is available for you

00:30:21.846 --> 00:30:27.946 A:middle
to take advantage of
this powerful accessory.

00:30:28.136 --> 00:30:29.126 A:middle
So let's summarize.

00:30:29.766 --> 00:30:32.006 A:middle
We covered three major areas.

00:30:32.986 --> 00:30:34.646 A:middle
First, platform.

00:30:36.376 --> 00:30:40.396 A:middle
We're bringing the home app, an
Apple-designed app for HomeKit.

00:30:42.016 --> 00:30:43.736 A:middle
For remote access
and automation.

00:30:43.736 --> 00:30:46.166 A:middle
We're extending the capabilities
of the Apple TV as well

00:30:46.166 --> 00:30:49.106 A:middle
as adding iPad to
have the remote access

00:30:49.106 --> 00:30:51.956 A:middle
and automation capability
for users' home.

00:30:53.016 --> 00:30:56.626 A:middle
We're bringing HomeKit
to the tvOS framework.

00:30:59.006 --> 00:31:04.106 A:middle
Next area on accessories,
we're adding the popular class

00:30:59.006 --> 00:31:04.106 A:middle
Next area on accessories,
we're adding the popular class

00:31:04.186 --> 00:31:05.646 A:middle
of air treatment accessories.

00:31:07.186 --> 00:31:09.936 A:middle
We're adding powerful
camera accessories

00:31:09.966 --> 00:31:11.096 A:middle
to the HomeKit ecosystem.

00:31:12.396 --> 00:31:15.986 A:middle
And we're also adding doorbells
and combination accessories,

00:31:15.986 --> 00:31:17.546 A:middle
which are doorbell cameras.

00:31:18.116 --> 00:31:23.856 A:middle
On the framework
updates, we covered simple

00:31:24.046 --> 00:31:27.796 A:middle
but powerful capabilities that
allow you to get more context

00:31:27.796 --> 00:31:29.326 A:middle
about your accessory
in your app.

00:31:29.666 --> 00:31:30.666 A:middle
So you can show rich

00:31:30.926 --> 00:31:33.486 A:middle
and context-sensitive
UI to your users.

00:31:34.036 --> 00:31:37.446 A:middle
We have greatly simplified
the accessory setup flow.

00:31:37.776 --> 00:31:39.136 A:middle
Now with just one API call,

00:31:39.196 --> 00:31:42.646 A:middle
all apps get the consistent
experience of guiding the user

00:31:42.986 --> 00:31:46.346 A:middle
through the complete setup for,
for their HomeKit accessories.

00:31:46.876 --> 00:31:50.316 A:middle
And we introduced cam,
camera profile objects

00:31:50.656 --> 00:31:53.756 A:middle
that allow your applications
to take advantage

00:31:53.966 --> 00:32:00.086 A:middle
of this powerful
class of accessories.

00:31:53.966 --> 00:32:00.086 A:middle
of this powerful
class of accessories.

00:32:00.086 --> 00:32:04.706 A:middle
Now before I conclude, I want
to leave you with this thought.

00:32:05.596 --> 00:32:10.516 A:middle
HomeKit accessories and your
applications are changing the

00:32:10.556 --> 00:32:15.766 A:middle
way that our users
interact with their homes.

00:32:15.956 --> 00:32:21.476 A:middle
With system features like Siri,
automations, and notifications,

00:32:22.586 --> 00:32:27.406 A:middle
also combined with the rich
set of accessibility features

00:32:27.406 --> 00:32:30.506 A:middle
on Apple platforms like
voiceover and others,

00:32:31.176 --> 00:32:34.536 A:middle
these accessories are,
for the very first time,

00:32:34.896 --> 00:32:37.076 A:middle
becoming accessible to users

00:32:37.076 --> 00:32:39.236 A:middle
with various kinds
of disabilities.

00:32:40.046 --> 00:32:44.076 A:middle
This is powerful, and it is
a life-changing experience

00:32:44.076 --> 00:32:45.676 A:middle
for many of our users.

00:32:46.476 --> 00:32:50.346 A:middle
So I encourage you to check out
all these different capabilities

00:32:50.346 --> 00:32:52.596 A:middle
that are available to
you on Apple platforms,

00:32:52.896 --> 00:32:56.616 A:middle
and take full advantage
and make your accessories

00:32:56.866 --> 00:32:59.976 A:middle
and applications
accessible to everyone.

00:33:02.716 --> 00:33:05.236 A:middle
For our MFi program members,

00:33:06.186 --> 00:33:09.516 A:middle
a preview of the updated
specifications will become

00:33:09.856 --> 00:33:15.076 A:middle
available to you soon, and for
new accessory manufacturers

00:33:15.076 --> 00:33:16.646 A:middle
who'd like to join the program,

00:33:17.316 --> 00:33:20.576 A:middle
this URL gives you more
information, or please come

00:33:20.576 --> 00:33:24.706 A:middle
and talk to one of us.

00:33:24.976 --> 00:33:28.276 A:middle
More information about this
session as well as HomeKit

00:33:28.636 --> 00:33:31.606 A:middle
and references are
available via this URL.

00:33:33.496 --> 00:33:37.796 A:middle
These are some related sessions
I'll encourage you to watch

00:33:37.796 --> 00:33:39.136 A:middle
on video if you have
missed them.

00:33:39.836 --> 00:33:41.456 A:middle
The first one is
really inspiring.

00:33:44.076 --> 00:33:45.516 A:middle
Thank you very much.

00:33:45.846 --> 00:33:46.766 A:middle
Have a great conference.

00:33:47.516 --> 00:33:56.090 A:middle
[ Applause ]
