WEBVTT

00:00:07.516 --> 00:00:17.500 A:middle
[ Music ]

00:00:26.516 --> 00:00:31.556 A:middle
[ Applause ]

00:00:32.055 --> 00:00:32.326 A:middle
&gt;&gt; All right.

00:00:32.786 --> 00:00:33.676 A:middle
Thanks very much.

00:00:34.266 --> 00:00:37.946 A:middle
So I'm excited to tell you all
about what's new in watchOS 3.

00:00:38.596 --> 00:00:41.926 A:middle
Now, of course we've
really focused in watchOS 3

00:00:42.326 --> 00:00:44.616 A:middle
on optimizing the
performance of the system,

00:00:44.776 --> 00:00:47.426 A:middle
and there's been a ton
of changes in this area

00:00:47.426 --> 00:00:50.766 A:middle
to make sure that all of your
apps run as fast as possible.

00:00:51.986 --> 00:00:54.916 A:middle
We've also spent a bunch of
time optimizing navigation,

00:00:55.486 --> 00:00:58.496 A:middle
and that's really in service
of optimizing performance,

00:00:58.996 --> 00:01:01.346 A:middle
because the faster we can
get a user into your app,

00:00:58.996 --> 00:01:01.346 A:middle
because the faster we can
get a user into your app,

00:01:01.786 --> 00:01:03.196 A:middle
the faster they can
start using it,

00:01:03.196 --> 00:01:04.936 A:middle
and the faster we can
get them to be able

00:01:05.016 --> 00:01:07.436 A:middle
to drop their wrist again,
and move on to the next thing.

00:01:08.696 --> 00:01:11.896 A:middle
Now in addition to all these
enhancements to the system,

00:01:12.266 --> 00:01:15.716 A:middle
we've also spent a bunch of
time optimizing different things

00:01:15.716 --> 00:01:17.156 A:middle
in all of our apps as well.

00:01:19.256 --> 00:01:21.296 A:middle
Now all of those
enhancements really revolve

00:01:21.626 --> 00:01:25.336 A:middle
around three key qualities for
watch apps that I promise you

00:01:25.336 --> 00:01:27.366 A:middle
and warn you you will
continue to hear a lot

00:01:27.366 --> 00:01:29.176 A:middle
about throughout the rest of
the watch sessions [laughter].

00:01:30.286 --> 00:01:33.316 A:middle
So the first one is making
sure that they're glanceable.

00:01:34.256 --> 00:01:37.016 A:middle
Now, being a glanceable
watch app does mean a bunch

00:01:37.016 --> 00:01:40.126 A:middle
of different things, and it
starts right at the watch face,

00:01:40.706 --> 00:01:42.066 A:middle
because having a complication

00:01:42.066 --> 00:01:44.936 A:middle
on the watch face gives you
a really great opportunity

00:01:44.936 --> 00:01:48.356 A:middle
to present the most important
bit of information from your app

00:01:48.476 --> 00:01:50.366 A:middle
to the user at just a glance.

00:01:51.606 --> 00:01:55.076 A:middle
Of course, in watchOS
2, we also had glances.

00:01:55.166 --> 00:01:58.316 A:middle
In watchOS 3, that functionality
has merged into the dock,

00:01:58.786 --> 00:02:01.456 A:middle
which is a great place to
present glanceable information

00:01:58.786 --> 00:02:01.456 A:middle
which is a great place to
present glanceable information

00:02:01.456 --> 00:02:04.166 A:middle
as well, because it's really
quick to get to from anywhere

00:02:04.166 --> 00:02:07.286 A:middle
on the system and gives you
an easy way to get an overview

00:02:07.286 --> 00:02:10.476 A:middle
and summary of the best and
most important information

00:02:10.476 --> 00:02:11.116 A:middle
from your apps.

00:02:11.926 --> 00:02:14.906 A:middle
So in addition to being
glanceable, we wanted all

00:02:14.906 --> 00:02:18.686 A:middle
of our apps to be actionable,
and actionable can mean a number

00:02:18.686 --> 00:02:19.696 A:middle
of different things as well.

00:02:20.806 --> 00:02:23.316 A:middle
It might mean that you take
the action on the watch itself.

00:02:23.926 --> 00:02:25.616 A:middle
You've seen that we've
redesigned a bunch

00:02:25.616 --> 00:02:27.336 A:middle
of our built-in apps
to make sure

00:02:27.336 --> 00:02:30.386 A:middle
that the most common actions
that we take are easy to access

00:02:30.386 --> 00:02:31.706 A:middle
with just a couple of taps.

00:02:32.536 --> 00:02:34.956 A:middle
The Workout app, you can
now get into really quickly

00:02:34.956 --> 00:02:36.486 A:middle
and start a workout
with a single tap.

00:02:37.666 --> 00:02:40.386 A:middle
The timer app now raises
the most common timers

00:02:40.386 --> 00:02:42.206 A:middle
that you'll want to set
right to the top level

00:02:42.566 --> 00:02:43.556 A:middle
so that once you're in it,

00:02:43.556 --> 00:02:46.416 A:middle
with just one tap you can
start really common timers.

00:02:47.486 --> 00:02:49.086 A:middle
And so this kind of
pattern is something

00:02:49.086 --> 00:02:50.796 A:middle
that we definitely would
encourage you to think about,

00:02:50.856 --> 00:02:53.206 A:middle
figure out the things that
are the most common actions

00:02:53.206 --> 00:02:55.906 A:middle
in your apps, and brings
them up to the top level,

00:02:55.906 --> 00:02:57.376 A:middle
and make them really
easy to get to.

00:02:59.176 --> 00:03:01.466 A:middle
Of course, being actionable
doesn't necessarily mean

00:02:59.176 --> 00:03:01.466 A:middle
Of course, being actionable
doesn't necessarily mean

00:03:01.466 --> 00:03:03.936 A:middle
that you have to be able to take
the action on the watch itself.

00:03:04.416 --> 00:03:07.966 A:middle
It might just mean presenting
content that your users want

00:03:07.966 --> 00:03:10.636 A:middle
to act on, even if they're
not ultimately going

00:03:10.636 --> 00:03:12.116 A:middle
to take an action on the watch.

00:03:12.626 --> 00:03:14.956 A:middle
Again, complications are
a great place to do this

00:03:14.956 --> 00:03:16.206 A:middle
and the new dock as well,

00:03:16.446 --> 00:03:18.406 A:middle
presenting the most
important information

00:03:18.406 --> 00:03:21.306 A:middle
that users can then go and act
on outside in the real world.

00:03:21.786 --> 00:03:25.736 A:middle
And then the third quality,
of course, is responsiveness,

00:03:26.046 --> 00:03:29.206 A:middle
making sure that your apps are
up to date and ready to respond

00:03:29.206 --> 00:03:30.646 A:middle
as soon as the users want them.

00:03:31.806 --> 00:03:33.466 A:middle
And a bunch of the
performance work that we've done

00:03:33.466 --> 00:03:36.246 A:middle
in watchOS 3 is really
geared towards this aspect

00:03:36.316 --> 00:03:39.086 A:middle
of making all of the apps
as responsive as possible.

00:03:39.536 --> 00:03:40.866 A:middle
By keeping them in memory,

00:03:40.866 --> 00:03:42.826 A:middle
which we'll talk a little bit
more about, and making sure

00:03:42.826 --> 00:03:45.836 A:middle
that they can resume really
fast, we can make sure

00:03:45.836 --> 00:03:47.486 A:middle
that they're as responsive
as they can be.

00:03:47.946 --> 00:03:49.796 A:middle
And the best thing that you
can do to help make sure

00:03:49.796 --> 00:03:51.246 A:middle
that your apps remain
responsive is

00:03:51.246 --> 00:03:53.486 A:middle
to do adopt the new background
app refresh technologies,

00:03:53.486 --> 00:03:55.686 A:middle
which we'll talk about in
a little bit, to make sure

00:03:55.686 --> 00:03:58.006 A:middle
that your apps already have
the content that they need

00:03:58.006 --> 00:04:03.666 A:middle
to display to the user when
they're ready to be used.

00:03:58.006 --> 00:04:03.666 A:middle
to display to the user when
they're ready to be used.

00:04:03.666 --> 00:04:06.516 A:middle
So thinking about apps,
of course, we can go back

00:04:06.516 --> 00:04:08.566 A:middle
to a full-screen view of an app.

00:04:08.626 --> 00:04:10.776 A:middle
That's what a lot
of people think

00:04:10.776 --> 00:04:12.976 A:middle
about when they first
think of an app,

00:04:13.106 --> 00:04:15.686 A:middle
but that may not be the
most common place for users

00:04:15.686 --> 00:04:17.546 A:middle
to interact with your
apps on Apple Watch,

00:04:18.356 --> 00:04:19.736 A:middle
because to keep interaction
short,

00:04:19.815 --> 00:04:22.756 A:middle
there's some other really great
interfaces that are even faster

00:04:22.756 --> 00:04:25.306 A:middle
to use for a lot of the most
common things that we do.

00:04:26.036 --> 00:04:28.286 A:middle
Of course, there's
complications, which start right

00:04:28.286 --> 00:04:30.056 A:middle
on the watch face,
giving you info you want.

00:04:30.516 --> 00:04:33.026 A:middle
And notifications,
which can pop up info

00:04:33.026 --> 00:04:34.216 A:middle
at the most relevant time.

00:04:35.226 --> 00:04:38.516 A:middle
And notifications on Apple
Watch are great, because you get

00:04:38.516 --> 00:04:41.276 A:middle
to run code to populate the
notification with content

00:04:41.276 --> 00:04:44.876 A:middle
and custom UI to present
just the interface you want.

00:04:45.846 --> 00:04:50.716 A:middle
And of course, with the new dock
in watchOS 3, you can now get

00:04:50.716 --> 00:04:52.936 A:middle
to your apps with just the
tap of the side button,

00:04:53.326 --> 00:04:54.796 A:middle
no matter where you
are in the system.

00:04:55.446 --> 00:04:57.726 A:middle
Now, apps in the doc are great,

00:04:57.796 --> 00:04:59.876 A:middle
because they're immediately
responsive.

00:04:59.976 --> 00:05:02.416 A:middle
As soon as you tap on
one, it comes full-screen,

00:04:59.976 --> 00:05:02.416 A:middle
As soon as you tap on
one, it comes full-screen,

00:05:02.416 --> 00:05:04.046 A:middle
and you can interact
with it right away

00:05:04.046 --> 00:05:05.226 A:middle
without having to wait at all.

00:05:06.356 --> 00:05:09.366 A:middle
The dock is great, not just for
directly interacting with apps,

00:05:09.366 --> 00:05:11.196 A:middle
but also for consuming
information.

00:05:11.676 --> 00:05:14.676 A:middle
Glances in watchOS 2, that
functionality has now moved

00:05:14.676 --> 00:05:17.886 A:middle
into the dock in watchOS
3, so you can quickly slide

00:05:17.886 --> 00:05:20.576 A:middle
through a view of
the information

00:05:20.576 --> 00:05:22.926 A:middle
from your favorite
apps really quickly

00:05:22.926 --> 00:05:25.846 A:middle
to get a high-level overview of
the info from all of those apps.

00:05:26.626 --> 00:05:29.506 A:middle
So the dock combines the best
of what glance has provided

00:05:29.506 --> 00:05:31.176 A:middle
with quick access to your apps

00:05:31.446 --> 00:05:33.176 A:middle
to provide even more
functionality.

00:05:33.746 --> 00:05:36.256 A:middle
So for something like reminders,
it's really great for both.

00:05:36.786 --> 00:05:39.886 A:middle
You can get a quick overview of
the things that you need to do,

00:05:40.426 --> 00:05:42.776 A:middle
and you can tap in to
immediately bring it full screen

00:05:42.776 --> 00:05:44.516 A:middle
and make it interactive,
so you can check them off.

00:05:45.826 --> 00:05:49.076 A:middle
For other kinds of apps, you
may just have functionality.

00:05:49.656 --> 00:05:51.726 A:middle
For example, the Workout app,

00:05:51.726 --> 00:05:53.896 A:middle
we've brought those most
common workouts that you want

00:05:53.896 --> 00:05:56.736 A:middle
to perform right to the top
level, so you can tap on them,

00:05:56.736 --> 00:05:59.996 A:middle
tap in to bring the app full
screen, and with one tap,

00:06:00.106 --> 00:06:01.496 A:middle
be starting your workouts.

00:06:02.526 --> 00:06:04.536 A:middle
But the dock is also,
as we said,

00:06:04.536 --> 00:06:06.506 A:middle
great for just viewing
information.

00:06:06.976 --> 00:06:09.446 A:middle
So an app like the
Activity app is really great

00:06:09.446 --> 00:06:12.326 A:middle
for just getting a summary of
the information from this app.

00:06:12.516 --> 00:06:16.226 A:middle
And with the Activity
rings basically taking

00:06:16.226 --> 00:06:18.836 A:middle
up the full screen, you can
get a great high-level summary

00:06:18.836 --> 00:06:21.336 A:middle
that's really glanceable
and really easy to digest.

00:06:21.866 --> 00:06:25.406 A:middle
The Activity app itself has
also been redesigned when you go

00:06:25.406 --> 00:06:28.016 A:middle
into it to simplify the
navigation in the app.

00:06:28.646 --> 00:06:32.146 A:middle
So where in watchOS 2 it was
four tabs arranged horizontally,

00:06:32.376 --> 00:06:35.016 A:middle
each of which could scroll
vertically, in watchOS 3,

00:06:35.016 --> 00:06:37.056 A:middle
there's just one view,
vertically scrolling,

00:06:37.056 --> 00:06:39.446 A:middle
that has the summary of
the activity at the top

00:06:39.446 --> 00:06:40.686 A:middle
and some of the detail below.

00:06:41.066 --> 00:06:42.886 A:middle
So it's really easy
and even faster

00:06:42.886 --> 00:06:47.346 A:middle
to get the information
you want out of this app.

00:06:47.346 --> 00:06:49.916 A:middle
Now, we want to keep
interactions with the watch

00:06:49.916 --> 00:06:53.766 A:middle
as short as possible, and
so this new navigation model

00:06:53.766 --> 00:06:56.156 A:middle
and the enhancements
to make apps responsive

00:06:56.156 --> 00:06:59.846 A:middle
and live right away
really helped to make sure

00:07:00.046 --> 00:07:02.016 A:middle
that the most tasks
that you want to perform

00:07:02.016 --> 00:07:03.916 A:middle
on Apple Watch can
be accomplished

00:07:03.916 --> 00:07:05.286 A:middle
in just a couple of seconds.

00:07:06.326 --> 00:07:08.546 A:middle
And so as you're thinking about
how you want to update your app

00:07:08.546 --> 00:07:11.916 A:middle
for Apple Watch, for watchOS
3, or if you don't have one yet

00:07:11.916 --> 00:07:13.626 A:middle
and you're contemplating
what to put in it,

00:07:14.016 --> 00:07:16.156 A:middle
I would definitely
encourage you to spend a bunch

00:07:16.156 --> 00:07:19.456 A:middle
of time thinking about how
to shorten your interactions.

00:07:20.006 --> 00:07:23.046 A:middle
Two seconds is obviously a
very short time, but striving

00:07:23.046 --> 00:07:25.346 A:middle
for that can really help
you to figure out the best

00:07:25.346 --> 00:07:29.456 A:middle
to design your apps to make
them as great an experience

00:07:29.456 --> 00:07:30.766 A:middle
on Apple Watch as possible.

00:07:31.366 --> 00:07:35.476 A:middle
So with the rest of our time, I
want to talk about four things.

00:07:36.336 --> 00:07:38.036 A:middle
The first is Background
App Refresh.

00:07:38.276 --> 00:07:41.356 A:middle
As I mentioned, this is a
huge enhancement in watchOS 3

00:07:41.356 --> 00:07:42.736 A:middle
that is Background App
Refresh that is really critical

00:07:42.736 --> 00:07:44.856 A:middle
for building responsive
watch apps, so we're going

00:07:44.856 --> 00:07:47.796 A:middle
to spend a bunch of
time talking about that.

00:07:47.876 --> 00:07:49.326 A:middle
Then I also wanted
to talk a little bit

00:07:49.326 --> 00:07:52.506 A:middle
about simplifying navigation,
because we've done a lot of work

00:07:52.506 --> 00:07:54.206 A:middle
to simplify navigation
on the system,

00:07:54.696 --> 00:07:56.556 A:middle
but the next step is
simplifying navigation

00:07:56.556 --> 00:07:57.716 A:middle
within your apps as well.

00:07:57.856 --> 00:08:00.286 A:middle
And so we've got some ideas of
how we've done that ourselves

00:07:57.856 --> 00:08:00.286 A:middle
And so we've got some ideas of
how we've done that ourselves

00:08:00.286 --> 00:08:03.126 A:middle
that we'll share, and
there's also plenty of ways

00:08:03.126 --> 00:08:05.426 A:middle
that I'm sure you can come up
with to simplify navigation

00:08:05.426 --> 00:08:06.456 A:middle
in your own apps as well.

00:08:07.686 --> 00:08:08.936 A:middle
Then we'll spend
some time talking

00:08:09.036 --> 00:08:10.836 A:middle
about expanding API
availability.

00:08:11.176 --> 00:08:12.486 A:middle
We've brought some
great frameworks

00:08:12.486 --> 00:08:14.126 A:middle
from our platforms,
the watch SDK.

00:08:14.126 --> 00:08:15.956 A:middle
We've got some brand new ones,

00:08:16.286 --> 00:08:17.836 A:middle
and we've got some
great enhancements

00:08:17.836 --> 00:08:20.316 A:middle
to our existing frameworks
as well, so we'll talk

00:08:20.316 --> 00:08:22.706 A:middle
about a bunch of the
high-level points in there

00:08:22.706 --> 00:08:24.976 A:middle
and give you some great
pointers to other sessions

00:08:25.056 --> 00:08:26.346 A:middle
that have even more detail.

00:08:26.906 --> 00:08:28.986 A:middle
And then we'll end by
talking about discoverability

00:08:28.986 --> 00:08:32.076 A:middle
and configuration, because
building your great app is just

00:08:32.076 --> 00:08:32.726 A:middle
the first step.

00:08:33.006 --> 00:08:34.746 A:middle
You also need to get
it in front of users

00:08:34.746 --> 00:08:36.006 A:middle
and configure it on their watch.

00:08:36.895 --> 00:08:39.326 A:middle
So let's get started with
Background App Refresh.

00:08:40.666 --> 00:08:42.976 A:middle
Background App Refresh
is a critical part

00:08:43.206 --> 00:08:45.206 A:middle
of building a responsive
app for Apple Watch.

00:08:46.556 --> 00:08:48.836 A:middle
And before you've
even done any work,

00:08:49.256 --> 00:08:51.456 A:middle
Background App Refresh is
already working for you.

00:08:52.116 --> 00:08:54.446 A:middle
You don't actually
need to adopt any APIs

00:08:54.446 --> 00:08:55.846 A:middle
to get some of its benefits.

00:08:56.736 --> 00:08:58.796 A:middle
So the first thing is that all

00:08:58.796 --> 00:09:01.686 A:middle
of the users favorite
apps are kept in memory.

00:08:58.796 --> 00:09:01.686 A:middle
of the users favorite
apps are kept in memory.

00:09:02.666 --> 00:09:05.296 A:middle
They're launched in the
background, and then suspended,

00:09:05.446 --> 00:09:08.086 A:middle
and kept there ready to go so
that as soon as the user wants

00:09:08.086 --> 00:09:10.876 A:middle
to get them, it's just a short
resume away, and we don't have

00:09:10.876 --> 00:09:12.646 A:middle
to wait for a full
application launch.

00:09:13.966 --> 00:09:15.266 A:middle
Now, I mentioned
that that applies

00:09:15.266 --> 00:09:16.546 A:middle
to the user's favorite apps,

00:09:16.906 --> 00:09:18.786 A:middle
and I do mean something
pretty specific by that.

00:09:19.406 --> 00:09:20.896 A:middle
This is all of the apps that are

00:09:20.896 --> 00:09:23.966 A:middle
on the user's current watch
face, so any complication

00:09:24.176 --> 00:09:25.616 A:middle
on the current watch
face that has an app,

00:09:26.056 --> 00:09:27.436 A:middle
that app is one of
their favorites.

00:09:27.676 --> 00:09:29.676 A:middle
And all of the apps
that the user has placed

00:09:29.676 --> 00:09:31.326 A:middle
in their dock are
their favorite apps.

00:09:32.136 --> 00:09:34.826 A:middle
These apps are the ones that
they're kept in memory and ready

00:09:34.826 --> 00:09:36.576 A:middle
to go as soon as they're needed.

00:09:36.856 --> 00:09:39.406 A:middle
They're the ones that the user
has the easiest access to,

00:09:39.406 --> 00:09:41.406 A:middle
because they're either a
tap away on the watch face

00:09:41.746 --> 00:09:43.526 A:middle
or just an easy scroll
through the dock away.

00:09:43.986 --> 00:09:46.066 A:middle
And so we want them to
be there, ready to go,

00:09:46.066 --> 00:09:47.426 A:middle
and as responsive as possible.

00:09:48.046 --> 00:09:50.046 A:middle
And as I mentioned, you don't
have to do anything to get this.

00:09:50.046 --> 00:09:52.296 A:middle
Even your existing watchOS
2 apps will get this

00:09:52.296 --> 00:09:53.196 A:middle
behavior automatically.

00:09:54.356 --> 00:09:57.816 A:middle
But of course, there
are APIs involved

00:09:57.816 --> 00:09:59.556 A:middle
with Background App
Refresh that you can adopt

00:09:59.906 --> 00:10:02.146 A:middle
to make your apps even more
responsive once they become

00:09:59.906 --> 00:10:02.146 A:middle
to make your apps even more
responsive once they become

00:10:02.146 --> 00:10:03.936 A:middle
to the foreground and
making sure that they're

00:10:03.936 --> 00:10:05.156 A:middle
up to date and ready to go.

00:10:06.716 --> 00:10:08.726 A:middle
And so the first
things that you can do

00:10:08.726 --> 00:10:11.026 A:middle
with this are obviously
updating your complication

00:10:11.026 --> 00:10:12.036 A:middle
and updating your app.

00:10:12.576 --> 00:10:14.616 A:middle
Keeping your app up to date
means updating these things.

00:10:15.516 --> 00:10:17.886 A:middle
But there's another
important aspect to it as well

00:10:18.216 --> 00:10:19.806 A:middle
that might be immediately
obvious,

00:10:20.186 --> 00:10:23.166 A:middle
and that is that you want to
also update your snapshot.

00:10:24.366 --> 00:10:26.176 A:middle
Now you might be wondering
what do I mean by a snapshot,

00:10:26.436 --> 00:10:29.466 A:middle
because you haven't
written code for snapshots.

00:10:29.856 --> 00:10:32.636 A:middle
And this applies specifically
to apps that are in the dock.

00:10:33.476 --> 00:10:36.776 A:middle
Now, when the dock first
comes to the foreground,

00:10:36.776 --> 00:10:39.716 A:middle
all of the apps that are in
the dock are sitting in memory,

00:10:39.716 --> 00:10:41.446 A:middle
but they're suspended and
not currently running.

00:10:42.216 --> 00:10:43.496 A:middle
So what's displayed as soon

00:10:43.496 --> 00:10:46.046 A:middle
as the dock comes forward is a
snapshot of what the app looked

00:10:46.046 --> 00:10:47.226 A:middle
like in its last state.

00:10:48.416 --> 00:10:50.856 A:middle
Once the user settles on
one of the apps in the dock,

00:10:50.996 --> 00:10:52.716 A:middle
it will be resumed
and become live,

00:10:52.716 --> 00:10:54.516 A:middle
even while it's still
shrunk down in the dock.

00:10:54.786 --> 00:10:56.566 A:middle
But in the meantime, we're
displaying a snapshot

00:10:56.566 --> 00:10:58.176 A:middle
of what was there
in the last state.

00:10:58.756 --> 00:11:00.806 A:middle
So it's important that that
snapshot remain up to date

00:10:58.756 --> 00:11:00.806 A:middle
So it's important that that
snapshot remain up to date

00:11:00.806 --> 00:11:03.146 A:middle
as well, so that you're
displaying old information

00:11:03.146 --> 00:11:04.226 A:middle
until the app gets resumed.

00:11:06.056 --> 00:11:08.766 A:middle
Even more importantly, if I
quickly scroll through the dock

00:11:08.766 --> 00:11:10.466 A:middle
and don't land on
any of the apps,

00:11:10.956 --> 00:11:12.356 A:middle
they're not being unsuspended

00:11:12.356 --> 00:11:14.266 A:middle
and resumed the entire
time while I'm scrolling.

00:11:14.266 --> 00:11:16.656 A:middle
So we're just scrolling
through the set

00:11:16.656 --> 00:11:18.286 A:middle
of the last snapshots
that were displayed.

00:11:18.326 --> 00:11:20.976 A:middle
So you definitely want to make
sure that these snapshots are

00:11:20.976 --> 00:11:23.106 A:middle
up to date and displaying
current information,

00:11:23.106 --> 00:11:25.976 A:middle
and the Background App Refresh
APIs make it really easy

00:11:25.976 --> 00:11:26.646 A:middle
to do this.

00:11:27.846 --> 00:11:30.156 A:middle
Starting off, there's actually
some automatic behaviors

00:11:30.156 --> 00:11:32.406 A:middle
that you get from the
system before you even have

00:11:32.406 --> 00:11:34.796 A:middle
to add any new requests
to update things.

00:11:36.696 --> 00:11:38.586 A:middle
Now, the first one is
probably pretty obvious.

00:11:38.836 --> 00:11:40.806 A:middle
If you've actually gone
into the app and used it,

00:11:41.276 --> 00:11:43.886 A:middle
then the user has probably
seen some new information

00:11:43.886 --> 00:11:46.396 A:middle
or performed some action
in there and will want

00:11:46.396 --> 00:11:48.506 A:middle
to update the snapshot that
will be displayed the next time.

00:11:49.466 --> 00:11:50.706 A:middle
So when the user
leaves your app,

00:11:50.846 --> 00:11:53.516 A:middle
the system will automatically
schedule a snapshot update

00:11:53.576 --> 00:11:55.346 A:middle
to happen on your behalf.

00:11:56.356 --> 00:11:57.796 A:middle
Now, it's really
easy to handle this,

00:11:57.796 --> 00:11:59.956 A:middle
because there's one new
Background App Refresh method

00:12:00.306 --> 00:12:02.976 A:middle
that all of the background
refresh activity goes through.

00:12:03.236 --> 00:12:04.926 A:middle
So it's just a simple
method that you add

00:12:04.926 --> 00:12:06.556 A:middle
on your WatchKit
extension delegate,

00:12:06.556 --> 00:12:08.676 A:middle
and it'll get called
back when any

00:12:08.676 --> 00:12:10.096 A:middle
of these refresh
activities occur.

00:12:10.556 --> 00:12:13.686 A:middle
And so the first one is the
automatic snapshot that happens

00:12:13.686 --> 00:12:15.066 A:middle
when your app is suspended.

00:12:16.806 --> 00:12:19.896 A:middle
But there's also other times
that users may see information

00:12:19.896 --> 00:12:23.306 A:middle
from your app, where you'll want
to update the snapshot so often

00:12:23.306 --> 00:12:24.476 A:middle
that we just do it
automatically.

00:12:25.266 --> 00:12:27.076 A:middle
And the other one, which
may not be as obvious,

00:12:27.266 --> 00:12:29.026 A:middle
is after a notification
has been viewed.

00:12:29.736 --> 00:12:32.796 A:middle
So if the user looks at a long
look of your notification,

00:12:32.796 --> 00:12:35.096 A:middle
they may have seen some new
information that informs them

00:12:35.096 --> 00:12:36.276 A:middle
of some new state in your app.

00:12:36.976 --> 00:12:38.126 A:middle
If they then go into the dock

00:12:38.126 --> 00:12:40.246 A:middle
and see something else displayed
there and it's out of date,

00:12:40.306 --> 00:12:41.696 A:middle
that would probably
be surprising.

00:12:42.686 --> 00:12:44.836 A:middle
So when your notification
is dismissed,

00:12:45.066 --> 00:12:47.576 A:middle
the system will automatically
schedule a background snapshot

00:12:47.576 --> 00:12:49.366 A:middle
task for you in that
case as well

00:12:49.366 --> 00:12:51.036 A:middle
so that you can update
your snapshot,

00:12:51.356 --> 00:12:53.856 A:middle
update your complication, and
make sure that everything stays

00:12:53.856 --> 00:12:55.066 A:middle
up to date and in sync.

00:12:55.996 --> 00:12:58.466 A:middle
Of course, there are also
times that you'll want

00:12:58.466 --> 00:13:00.096 A:middle
to schedule updates
on your behalf.

00:12:58.466 --> 00:13:00.096 A:middle
to schedule updates
on your behalf.

00:13:00.446 --> 00:13:03.186 A:middle
You know your users and you know
your data, so there are times

00:13:03.186 --> 00:13:04.136 A:middle
where you actually just want

00:13:04.136 --> 00:13:06.196 A:middle
to proactively be
updating your content,

00:13:06.196 --> 00:13:09.236 A:middle
and there's really
two ways to do this.

00:13:09.646 --> 00:13:11.346 A:middle
The first is going to
be about complications.

00:13:11.846 --> 00:13:14.236 A:middle
The question then becomes, what
do you put in your snapshot?

00:13:14.606 --> 00:13:16.166 A:middle
So the first and most
obvious thing to put

00:13:16.166 --> 00:13:18.046 A:middle
in your snapshot is just
whatever the content

00:13:18.046 --> 00:13:21.406 A:middle
of your app normally is,
that way it looks up to date

00:13:21.406 --> 00:13:23.106 A:middle
and it's showing exactly
what you would want

00:13:23.106 --> 00:13:24.316 A:middle
when a user goes into the app.

00:13:26.176 --> 00:13:27.756 A:middle
But you might also
decide that you want

00:13:27.756 --> 00:13:29.936 A:middle
to provide some custom
information that is different

00:13:29.936 --> 00:13:32.126 A:middle
so that it looks nicer
in the dock and is easier

00:13:32.126 --> 00:13:34.946 A:middle
to glance at and digest.

00:13:35.236 --> 00:13:38.846 A:middle
For example, the Dexcom G5
mobile app, with that app,

00:13:38.846 --> 00:13:40.436 A:middle
the most important
thing that I would care

00:13:40.436 --> 00:13:42.986 A:middle
about is my current
blood glucose level.

00:13:43.736 --> 00:13:44.936 A:middle
So if I look at it in the dock,

00:13:44.936 --> 00:13:47.996 A:middle
I'll see that highlighted really
big in the center of the screen.

00:13:48.546 --> 00:13:52.116 A:middle
But when I actually go
into the app, I might care

00:13:52.116 --> 00:13:54.406 A:middle
about more detail than
just the current reading.

00:13:55.686 --> 00:13:58.146 A:middle
So as I bring the app full
screen, it can transition

00:13:58.146 --> 00:14:01.356 A:middle
and show more information
when I'm actually in the app,

00:13:58.146 --> 00:14:01.356 A:middle
and show more information
when I'm actually in the app,

00:14:01.446 --> 00:14:03.896 A:middle
displaying, in this
case, a historical graph

00:14:03.896 --> 00:14:05.886 A:middle
of more information
going back in time.

00:14:05.886 --> 00:14:09.416 A:middle
Now, you don't necessarily have
to display different information

00:14:09.416 --> 00:14:11.596 A:middle
in the dock snapshot, and a
very common thing would be

00:14:11.596 --> 00:14:14.626 A:middle
to not do that, and just have
it be the content of your app.

00:14:15.166 --> 00:14:16.776 A:middle
But you do have a lot
of flexibility here,

00:14:16.776 --> 00:14:19.286 A:middle
so if it makes sense in your app
to display something different

00:14:19.286 --> 00:14:21.806 A:middle
in the dock snapshot, just
make sure that the transition

00:14:21.806 --> 00:14:24.036 A:middle
as you go into the
app is still smooth

00:14:24.036 --> 00:14:28.146 A:middle
and not really jarring
when it happens.

00:14:30.096 --> 00:14:32.556 A:middle
Okay, so in addition to these
automatic snapshot tasks

00:14:32.556 --> 00:14:34.976 A:middle
and keeping your snapshot up
to date, you may also want

00:14:34.976 --> 00:14:37.746 A:middle
to periodically be able to
update the data behind your app

00:14:37.746 --> 00:14:40.136 A:middle
in the background, and
there's a few different ways

00:14:40.136 --> 00:14:41.276 A:middle
that you would go
about doing that.

00:14:41.276 --> 00:14:43.686 A:middle
Now, you might just
be interested in going

00:14:43.686 --> 00:14:46.726 A:middle
out to the Internet to fetch
some new data, and you can do

00:14:46.776 --> 00:14:49.546 A:middle
that with a NSURLSession
and Watch Connectivity,

00:14:51.286 --> 00:14:53.706 A:middle
but there's plenty of other
ways as well, and the first one

00:14:53.706 --> 00:14:56.126 A:middle
to focus on is complication
updates.

00:14:56.556 --> 00:14:59.176 A:middle
Now, complications are visible
right on the watch face,

00:14:59.536 --> 00:15:01.526 A:middle
so it's even more
important that they stay

00:14:59.536 --> 00:15:01.526 A:middle
so it's even more
important that they stay

00:15:01.526 --> 00:15:02.736 A:middle
as up to date as possible.

00:15:03.136 --> 00:15:05.726 A:middle
So there's a kind of update
that is available just to apps

00:15:05.726 --> 00:15:07.206 A:middle
that are on the current
watch face,

00:15:07.596 --> 00:15:09.736 A:middle
and that's the silent
complication push update.

00:15:10.556 --> 00:15:13.276 A:middle
Now, these types of updates
existed in watchOS 2,

00:15:13.886 --> 00:15:15.556 A:middle
but they were a little
bit difficult to use,

00:15:15.556 --> 00:15:17.036 A:middle
because you couldn't
be guaranteed

00:15:17.036 --> 00:15:19.336 A:middle
of how many you would get
over the course of the day,

00:15:19.336 --> 00:15:22.426 A:middle
so it was a little difficult to
plan for how many you would use

00:15:22.426 --> 00:15:23.256 A:middle
and when you would send them.

00:15:23.946 --> 00:15:26.196 A:middle
In watchOS 3, there's
been a big enhancement

00:15:26.196 --> 00:15:29.096 A:middle
for complication push
updates, and we now guarantee

00:15:29.096 --> 00:15:30.206 A:middle
that over the course of the day,

00:15:30.206 --> 00:15:33.146 A:middle
each app on the watch face
can get 50 push updates.

00:15:34.296 --> 00:15:36.926 A:middle
This is great, because it gives
you the opportunity to plan

00:15:36.926 --> 00:15:38.696 A:middle
for how you want to use them
over the course of the day.

00:15:39.776 --> 00:15:41.836 A:middle
So for example, let's
say we took a stocks app.

00:15:42.726 --> 00:15:44.336 A:middle
If we just did the
most naïve thing

00:15:44.336 --> 00:15:47.376 A:middle
and distributed our 50
updates over the full day,

00:15:47.746 --> 00:15:49.776 A:middle
that would give us about
one every 30 minutes.

00:15:50.666 --> 00:15:53.656 A:middle
And that's not too bad, but we
could do a lot better if we took

00:15:53.656 --> 00:15:56.226 A:middle
into account a little bit
information about the data

00:15:56.226 --> 00:15:59.296 A:middle
that we were displaying and
about our user behavior.

00:16:00.416 --> 00:16:01.836 A:middle
For example, let's
say that we know

00:16:01.836 --> 00:16:04.756 A:middle
that our user generally sleeps
between midnight and 6:00 a.m.

00:16:06.176 --> 00:16:08.896 A:middle
If that's the case, then
we really don't need

00:16:08.896 --> 00:16:11.246 A:middle
to update during
that period of time,

00:16:11.246 --> 00:16:13.506 A:middle
and we can distribute the
updates we would have used then

00:16:13.506 --> 00:16:14.376 A:middle
through the rest of the day.

00:16:15.406 --> 00:16:17.426 A:middle
So that'll increase
our update frequency

00:16:17.426 --> 00:16:20.586 A:middle
to once every 20 minutes, which
is a pretty big improvement

00:16:20.586 --> 00:16:22.176 A:middle
with only a small
amount of effort.

00:16:23.176 --> 00:16:25.516 A:middle
But of course, it we
know a little bit more

00:16:25.516 --> 00:16:28.446 A:middle
about the data itself and
could take that into account,

00:16:29.076 --> 00:16:31.296 A:middle
then we might be able to
do even better than that.

00:16:31.876 --> 00:16:34.306 A:middle
So let's say that we knew
that our stocks were only

00:16:34.306 --> 00:16:35.716 A:middle
from the New York
Stock Exchange.

00:16:36.146 --> 00:16:38.646 A:middle
In that case, we'd only need
to update between 9:00 a.m.

00:16:38.646 --> 00:16:40.366 A:middle
and 4:00 p.m. when
the exchange is open,

00:16:40.366 --> 00:16:42.526 A:middle
and that would increase
our frequency

00:16:42.526 --> 00:16:44.246 A:middle
to once every eight-and-a-half
minutes.

00:16:45.476 --> 00:16:48.046 A:middle
So now, obviously, this
specific example will not apply

00:16:48.046 --> 00:16:50.526 A:middle
to the vast majority of
your apps, but the idea

00:16:50.526 --> 00:16:52.106 A:middle
in general definitely can.

00:16:52.556 --> 00:16:54.906 A:middle
Taking into account a little
bit of extra information

00:16:54.906 --> 00:16:57.576 A:middle
that you have about your user
behavior and the kinds of data

00:16:57.576 --> 00:17:00.516 A:middle
that you're displaying can
give you a lot of opportunity

00:16:57.576 --> 00:17:00.516 A:middle
that you're displaying can
give you a lot of opportunity

00:17:00.616 --> 00:17:03.306 A:middle
to even further enhance
the experience

00:17:03.306 --> 00:17:04.776 A:middle
when using your app
on the watch face.

00:17:06.586 --> 00:17:10.435 A:middle
Okay, but those are just
for complications displayed

00:17:10.435 --> 00:17:11.465 A:middle
on the current watch face.

00:17:12.626 --> 00:17:14.106 A:middle
Now, if you have an
app that's either not

00:17:14.106 --> 00:17:16.396 A:middle
on the current watch
face but in the dock,

00:17:16.806 --> 00:17:17.986 A:middle
or an app on the
current watch face

00:17:17.986 --> 00:17:19.766 A:middle
where push updates maybe
don't make the most sense.

00:17:19.766 --> 00:17:21.996 A:middle
There are other ways to
update your data as well.

00:17:23.116 --> 00:17:24.685 A:middle
In these cases, you'll
probably want

00:17:24.685 --> 00:17:27.656 A:middle
to do some periodic scheduled
updates in the background

00:17:27.656 --> 00:17:32.536 A:middle
over the course of the day.

00:17:32.776 --> 00:17:34.446 A:middle
So there's another
Background App Refresh API

00:17:34.446 --> 00:17:36.846 A:middle
that will let you schedule
the next time that you'd

00:17:36.846 --> 00:17:40.196 A:middle
like to run, and each time
you run, there's a number

00:17:40.196 --> 00:17:41.636 A:middle
of different things that
you could choose to do.

00:17:42.316 --> 00:17:45.106 A:middle
You could start some data
downloads using NSURLSession

00:17:45.106 --> 00:17:46.136 A:middle
or Watch Connectivity.

00:17:47.256 --> 00:17:49.406 A:middle
Or you could just load new
data out of your database

00:17:49.406 --> 00:17:51.796 A:middle
on the watch if you already have
all the information present.

00:17:53.636 --> 00:17:55.616 A:middle
But in addition to that,
you'll also have the ability

00:17:55.616 --> 00:17:57.276 A:middle
to schedule the next
update session.

00:17:57.966 --> 00:18:01.386 A:middle
So it's not a fixed period that
you have to decide on upfront.

00:17:57.966 --> 00:18:01.386 A:middle
So it's not a fixed period that
you have to decide on upfront.

00:18:01.666 --> 00:18:03.306 A:middle
Each time you run, you
have the opportunity

00:18:03.306 --> 00:18:05.506 A:middle
to choose the next best
time to run after it

00:18:05.856 --> 00:18:08.926 A:middle
so that you can optimize
for your data style

00:18:08.926 --> 00:18:11.116 A:middle
and when you know that
it will be updated.

00:18:11.536 --> 00:18:14.906 A:middle
Now, at a minimum,
you'll be guaranteed

00:18:14.906 --> 00:18:17.226 A:middle
that your application can
run at least once an hour,

00:18:18.266 --> 00:18:20.926 A:middle
but there are some other
things can enable you

00:18:20.926 --> 00:18:23.706 A:middle
to run even more
frequently than that.

00:18:23.706 --> 00:18:26.706 A:middle
So the first would be if
your application is backed

00:18:26.706 --> 00:18:27.896 A:middle
by a complication.

00:18:28.276 --> 00:18:30.526 A:middle
So if a complication is
on the current watch face,

00:18:30.816 --> 00:18:32.106 A:middle
then your app will
have the ability

00:18:32.106 --> 00:18:33.916 A:middle
to update more frequently
than once an hour.

00:18:34.976 --> 00:18:37.046 A:middle
But even if you're not on
the current watch face,

00:18:37.196 --> 00:18:39.856 A:middle
you may be able to run more
frequently than this as well.

00:18:41.346 --> 00:18:45.126 A:middle
So the total number of updates
that are available is fixed

00:18:45.126 --> 00:18:47.126 A:middle
for all of the apps that
are currently in the dock.

00:18:47.626 --> 00:18:50.136 A:middle
So if the dock is full, and
all ten apps are present,

00:18:50.386 --> 00:18:51.836 A:middle
then each of the apps
in there will be able

00:18:51.836 --> 00:18:52.906 A:middle
to update once an hour.

00:18:53.486 --> 00:18:55.186 A:middle
But if the user hasn't
filled their dock,

00:18:55.186 --> 00:18:56.536 A:middle
and there are fewer
apps in there,

00:18:57.056 --> 00:18:59.426 A:middle
the updates that would have been
given to the ones that aren't

00:18:59.426 --> 00:19:01.706 A:middle
in use can be distributed
amongst the rest.

00:18:59.426 --> 00:19:01.706 A:middle
in use can be distributed
amongst the rest.

00:19:02.496 --> 00:19:05.266 A:middle
So in that case, you
could end up having more

00:19:05.266 --> 00:19:06.816 A:middle
than one update per hour.

00:19:08.116 --> 00:19:11.186 A:middle
Of course, as you're designed
your app, it's probably easiest

00:19:11.186 --> 00:19:12.586 A:middle
to plan for once an hour,

00:19:12.586 --> 00:19:14.256 A:middle
because that's the
minimum guarantee.

00:19:14.656 --> 00:19:16.536 A:middle
But just keep in mind
that it may be possible

00:19:16.536 --> 00:19:18.316 A:middle
that you could be running
more frequently than that,

00:19:18.406 --> 00:19:19.956 A:middle
depending on these
other situations.

00:19:20.506 --> 00:19:24.726 A:middle
So there's one last thing
that I wanted to mention

00:19:24.726 --> 00:19:26.286 A:middle
about complication pushes.

00:19:27.356 --> 00:19:30.346 A:middle
Complication pushes, when you
think of a push, the first thing

00:19:30.346 --> 00:19:33.426 A:middle
that may come to mind is a push
that's initiated from a server,

00:19:33.906 --> 00:19:35.536 A:middle
and that's definitely
one option.

00:19:35.536 --> 00:19:37.456 A:middle
You can start a complication
silent push update

00:19:37.456 --> 00:19:38.006 A:middle
from the server.

00:19:38.976 --> 00:19:40.586 A:middle
But what you may not
have thought of is

00:19:40.586 --> 00:19:42.746 A:middle
that you can also start
complication pushes

00:19:42.746 --> 00:19:45.096 A:middle
from your iPhone app running
on your iPhone as well.

00:19:46.106 --> 00:19:48.146 A:middle
The push update API
is actually part

00:19:48.146 --> 00:19:49.626 A:middle
of the Watch Connectivity
framework.

00:19:50.036 --> 00:19:53.096 A:middle
So if your app on your iPhone is
running for some other reason,

00:19:53.096 --> 00:19:54.786 A:middle
either the user is
directly using it

00:19:54.786 --> 00:19:57.866 A:middle
or it's using some Background
App Refresh API on the phone,

00:19:58.276 --> 00:20:00.966 A:middle
it can initiate a complication
push update to the watch

00:19:58.276 --> 00:20:00.966 A:middle
it can initiate a complication
push update to the watch

00:20:01.406 --> 00:20:03.396 A:middle
to update the UI on
your complication.

00:20:04.756 --> 00:20:06.716 A:middle
So even if you don't
have a server

00:20:06.716 --> 00:20:08.706 A:middle
that has the knowledge
necessary to do pushing,

00:20:09.346 --> 00:20:11.656 A:middle
you may actually still be
able to take advantage of this

00:20:11.656 --> 00:20:13.346 A:middle
to keep your watch
face up to date.

00:20:13.426 --> 00:20:15.056 A:middle
So just something
to keep in mind

00:20:15.056 --> 00:20:16.586 A:middle
as you're designing
your complications

00:20:16.636 --> 00:20:18.496 A:middle
and your refresh
strategies for your apps.

00:20:19.566 --> 00:20:23.356 A:middle
So that's just a quick summary
of Background App Refresh

00:20:23.356 --> 00:20:27.136 A:middle
and how all this stuff works,
and I really want to reemphasize

00:20:27.136 --> 00:20:30.506 A:middle
that it's really a critical part
of building responsive apps.

00:20:30.856 --> 00:20:32.796 A:middle
So no matter what kind of app
it is that you're building

00:20:32.796 --> 00:20:35.016 A:middle
for Apple Watch, I'd strongly
encourage you to check

00:20:35.016 --> 00:20:38.706 A:middle
out the Keeping Your Watch Up
to Date session to learn more

00:20:38.706 --> 00:20:41.036 A:middle
about Background App Refresh
and how you can use it

00:20:41.036 --> 00:20:43.496 A:middle
to keep your apps live,
responsive, and up to date.

00:20:45.396 --> 00:20:48.456 A:middle
So next, let's talk about
navigation enhancements.

00:20:49.026 --> 00:20:52.516 A:middle
Now, as I've mentioned, we've
already done a whole bunch

00:20:52.516 --> 00:20:56.066 A:middle
of work to optimize navigation
on Apple Watch itself.

00:20:56.416 --> 00:20:59.166 A:middle
So the system is already really
fast to get into your apps.

00:20:59.506 --> 00:21:02.916 A:middle
The next step is optimizing
navigation within your apps

00:20:59.506 --> 00:21:02.916 A:middle
The next step is optimizing
navigation within your apps

00:21:03.116 --> 00:21:05.416 A:middle
so that it's really fast
to get to the information

00:21:05.416 --> 00:21:06.876 A:middle
and actions that the users want.

00:21:07.876 --> 00:21:10.806 A:middle
Now, there's one common
pattern in particular

00:21:10.806 --> 00:21:11.676 A:middle
that I want to start with.

00:21:12.586 --> 00:21:15.456 A:middle
There's many apps that have
a hierarchical organization

00:21:15.456 --> 00:21:16.106 A:middle
to their data.

00:21:16.826 --> 00:21:20.046 A:middle
For example, there's a
top-level view that has a bunch

00:21:20.046 --> 00:21:22.956 A:middle
of information on a
list of top-level items.

00:21:23.086 --> 00:21:25.486 A:middle
In this case, I've written
an app to keep track of all

00:21:25.486 --> 00:21:27.056 A:middle
of the beverages that
I've consumed today.

00:21:28.196 --> 00:21:31.066 A:middle
Now, if you want information
on any one particular item,

00:21:31.266 --> 00:21:33.886 A:middle
you can tap on it, and it'll
slide into a detail page.

00:21:34.126 --> 00:21:35.936 A:middle
So here we can see that
I've had three cups

00:21:35.936 --> 00:21:36.806 A:middle
of coffee so far today.

00:21:38.406 --> 00:21:41.476 A:middle
In watchOS 2, if you wanted to
get more information about one

00:21:41.476 --> 00:21:44.056 A:middle
of those other items, you
would tap the Back button,

00:21:44.056 --> 00:21:46.196 A:middle
find the other item,
and slide into that one.

00:21:46.196 --> 00:21:49.856 A:middle
Now, that may not seem
like a lot of overhead,

00:21:50.376 --> 00:21:54.246 A:middle
but given how short we're trying
to keep these interactions,

00:21:54.456 --> 00:21:56.196 A:middle
that additional time
just moving back

00:21:56.196 --> 00:21:58.726 A:middle
and forth can actually
really add up pretty quickly.

00:21:59.386 --> 00:22:02.116 A:middle
So in watchOS 3, you'll find
that there's a lot of apps

00:21:59.386 --> 00:22:02.116 A:middle
So in watchOS 3, you'll find
that there's a lot of apps

00:22:02.116 --> 00:22:04.646 A:middle
that have this kind of
pattern, where we've now moved

00:22:04.646 --> 00:22:06.636 A:middle
to a new style of
navigation for them,

00:22:06.636 --> 00:22:09.656 A:middle
where you can just use your
finger or the digital crown

00:22:09.916 --> 00:22:12.826 A:middle
to quickly scroll and page
between each of those items

00:22:13.106 --> 00:22:15.696 A:middle
without having to do the back
and forth navigation transition.

00:22:16.996 --> 00:22:19.116 A:middle
So if you look at, for
example, the Stocks app

00:22:19.116 --> 00:22:20.816 A:middle
or the Weather app,
they've been redesigned

00:22:20.816 --> 00:22:23.356 A:middle
to enable this ok
interaction, and we wanted

00:22:23.356 --> 00:22:24.556 A:middle
to make it really easy for you

00:22:24.556 --> 00:22:26.126 A:middle
to adopt this in
your apps as well.

00:22:26.736 --> 00:22:29.696 A:middle
So the WatchKit table interface
control now has an option

00:22:29.696 --> 00:22:34.126 A:middle
to enable this vertical paging
mode when you're navigated

00:22:34.126 --> 00:22:37.356 A:middle
into a detail view, and it's
really easy to opt into it.

00:22:37.356 --> 00:22:38.916 A:middle
There's just a couple of
things you have to do.

00:22:39.316 --> 00:22:41.836 A:middle
First, obviously you can enable
the option on your table.

00:22:42.786 --> 00:22:44.426 A:middle
But then you also
have to make sure

00:22:44.426 --> 00:22:46.386 A:middle
that in your storyboard
you're using segues

00:22:46.386 --> 00:22:48.746 A:middle
to represent the
transitions from your table

00:22:48.746 --> 00:22:49.926 A:middle
into the detail views.

00:22:50.476 --> 00:22:53.256 A:middle
By doing that, you give WatchKit
all the information it needs

00:22:53.256 --> 00:22:56.036 A:middle
to be able to pre-generate
the views above and below,

00:22:56.036 --> 00:22:58.876 A:middle
and place them in a
vertical paging interface

00:22:59.146 --> 00:23:01.786 A:middle
so that it can move
between them.

00:22:59.146 --> 00:23:01.786 A:middle
so that it can move
between them.

00:23:01.896 --> 00:23:04.096 A:middle
So not too much adoption,
and it's really easy.

00:23:04.096 --> 00:23:07.086 A:middle
The only other thing to keep in
mind is that to get the behavior

00:23:07.716 --> 00:23:11.506 A:middle
to match this, you also need
to make sure that the design

00:23:11.506 --> 00:23:13.946 A:middle
of your detail views
fits all the content

00:23:13.946 --> 00:23:16.046 A:middle
of the detail view
onto a single screen.

00:23:16.806 --> 00:23:19.876 A:middle
If the actual detail view
itself is also scrollable,

00:23:20.146 --> 00:23:22.646 A:middle
then that scrolling in the
detail view will take precedence

00:23:22.646 --> 00:23:25.516 A:middle
over the outer paging interface.

00:23:26.026 --> 00:23:27.506 A:middle
So you definitely want to focus

00:23:27.506 --> 00:23:30.236 A:middle
on simplifying the views
for the detail items.

00:23:30.526 --> 00:23:32.706 A:middle
You'll find, again, in the
Stocks and Weather apps

00:23:32.706 --> 00:23:34.216 A:middle
that these views now, while

00:23:34.216 --> 00:23:36.616 A:middle
in watchOS 2 they scrolled
vertically and had a bunch

00:23:36.616 --> 00:23:39.366 A:middle
of information in them, are now
just single-page interfaces,

00:23:39.366 --> 00:23:42.626 A:middle
so that they can easily
transition like this.

00:23:44.636 --> 00:23:47.496 A:middle
Okay, so we've gotten our
users into our app really fast.

00:23:48.126 --> 00:23:50.626 A:middle
We've optimized the background
refresh so that our data is

00:23:50.626 --> 00:23:53.496 A:middle
up to date, and we've
optimized navigation

00:23:53.496 --> 00:23:54.456 A:middle
within our app as well.

00:23:55.246 --> 00:23:58.506 A:middle
The last part of ensuring
that individual interactions

00:23:58.506 --> 00:24:00.926 A:middle
with Apple Watch are short
is to get our users back

00:23:58.506 --> 00:24:00.926 A:middle
with Apple Watch are short
is to get our users back

00:24:00.926 --> 00:24:02.536 A:middle
out of our app as
quickly as we can.

00:24:03.236 --> 00:24:04.496 A:middle
And of course, on Apple Watch,

00:24:04.496 --> 00:24:05.806 A:middle
that means giving
them the confidence

00:24:05.806 --> 00:24:06.886 A:middle
that they can drop their wrists.

00:24:08.256 --> 00:24:10.196 A:middle
So there's a number of ways that
you might go about doing this.

00:24:10.196 --> 00:24:12.046 A:middle
Let's just take one
example here.

00:24:12.656 --> 00:24:16.086 A:middle
Let's say that I've got an app
where I'm purchasing my dinner.

00:24:17.196 --> 00:24:19.396 A:middle
When I tap this Buy
button, I'm going to go

00:24:19.396 --> 00:24:22.036 A:middle
and do some network activity
to a server, which is going

00:24:22.036 --> 00:24:23.906 A:middle
to perform some actions
to decide whether

00:24:23.906 --> 00:24:25.396 A:middle
or not I can actually
make this purchase.

00:24:25.906 --> 00:24:27.036 A:middle
Now, that might take a while.

00:24:27.566 --> 00:24:29.066 A:middle
So my first inclination might be

00:24:29.066 --> 00:24:31.946 A:middle
to display an indeterminate
progress indicator to the user,

00:24:31.946 --> 00:24:33.566 A:middle
letting them know that
something's happening,

00:24:33.836 --> 00:24:35.216 A:middle
but I'm not sure how
long it's going to take.

00:24:35.936 --> 00:24:37.946 A:middle
Now, unfortunately, that means
that they're going to sit there

00:24:37.946 --> 00:24:39.876 A:middle
with their arm up, waiting
for something to happen

00:24:39.876 --> 00:24:41.686 A:middle
until this task finishes.

00:24:42.356 --> 00:24:44.966 A:middle
But if I'm really confident
that the vast majority

00:24:44.966 --> 00:24:46.996 A:middle
of the time the task
is going to succeed,

00:24:47.456 --> 00:24:49.016 A:middle
I'm not actually
getting anything

00:24:49.016 --> 00:24:50.476 A:middle
by having them sit
there and wait for it.

00:24:51.326 --> 00:24:52.826 A:middle
So instead, you could decide

00:24:52.826 --> 00:24:55.706 A:middle
that you could present
some confirmation interface

00:24:56.026 --> 00:24:57.176 A:middle
that really gives
them the confidence

00:24:57.176 --> 00:24:59.426 A:middle
that you're taking care
of the task without having

00:24:59.426 --> 00:25:00.486 A:middle
to wait for it to occur.

00:24:59.426 --> 00:25:00.486 A:middle
to wait for it to occur.

00:25:00.966 --> 00:25:02.516 A:middle
So in this case, I've
just said, "Got it!

00:25:02.766 --> 00:25:03.636 A:middle
We're working on your order."

00:25:04.136 --> 00:25:08.236 A:middle
Once they read that, they have
the confidence they can drop

00:25:08.236 --> 00:25:11.906 A:middle
their wrist, and you can
continue the operation

00:25:11.996 --> 00:25:13.116 A:middle
in the background for up

00:25:13.116 --> 00:25:16.146 A:middle
to 30 seconds using the
background activity APIs

00:25:16.146 --> 00:25:17.366 A:middle
on NSProcessInfo.

00:25:19.156 --> 00:25:21.696 A:middle
Generally, everything
works, and so you don't have

00:25:21.696 --> 00:25:22.686 A:middle
to get their attention back.

00:25:23.106 --> 00:25:25.836 A:middle
Now, of course, sometimes
something may go wrong.

00:25:26.106 --> 00:25:27.556 A:middle
Maybe your server's
not reachable,

00:25:27.556 --> 00:25:28.666 A:middle
or there's some other issue.

00:25:29.266 --> 00:25:33.476 A:middle
In that case, watchOS 3 includes
a brand new User Notification

00:25:33.476 --> 00:25:36.646 A:middle
framework that lets you
schedule local notifications

00:25:36.646 --> 00:25:39.396 A:middle
on the watch itself,
and that's a great way,

00:25:39.436 --> 00:25:40.996 A:middle
during this background
time to be able

00:25:40.996 --> 00:25:42.546 A:middle
to get the user's
attention back,

00:25:42.786 --> 00:25:45.796 A:middle
let them know something went
wrong, and have them be able

00:25:45.796 --> 00:25:46.736 A:middle
to fix it really easily.

00:25:47.956 --> 00:25:49.996 A:middle
So in this case, let's
say that, unfortunately,

00:25:49.996 --> 00:25:51.846 A:middle
my order of chicken
was not available.

00:25:52.216 --> 00:25:54.806 A:middle
I can pop up a notification,
letting them know that happened.

00:25:55.456 --> 00:25:58.076 A:middle
Of course, because notifications
can include actions,

00:25:58.306 --> 00:26:00.156 A:middle
I can have some buttons
right there with options

00:25:58.306 --> 00:26:00.156 A:middle
I can have some buttons
right there with options

00:26:00.156 --> 00:26:02.766 A:middle
to resolve the issue, or I
can get them quickly back

00:26:02.766 --> 00:26:06.796 A:middle
into my app so that they can fix
it themselves in the full app.

00:26:06.796 --> 00:26:09.456 A:middle
The User Notification framework
is a great way to do this,

00:26:09.456 --> 00:26:12.986 A:middle
but of course, it's not just for
letting users know about issues.

00:26:13.476 --> 00:26:15.346 A:middle
Local notifications can
be a great enhancement

00:26:15.346 --> 00:26:16.746 A:middle
for many different
kinds of apps.

00:26:17.536 --> 00:26:19.676 A:middle
And the great thing about the
User Notification framework

00:26:19.676 --> 00:26:21.936 A:middle
in watchOS 3 is that it can work

00:26:21.936 --> 00:26:23.536 A:middle
when the watch is
entirely standalone,

00:26:23.536 --> 00:26:25.076 A:middle
because it's scheduling
the notifications

00:26:25.076 --> 00:26:26.076 A:middle
on the watch itself.

00:26:27.096 --> 00:26:29.246 A:middle
But now you do have a choice
to make with notifications,

00:26:29.276 --> 00:26:32.066 A:middle
because you can either use the
notification framework directly

00:26:32.066 --> 00:26:33.926 A:middle
on the watch to schedule
your notifications,

00:26:34.276 --> 00:26:36.946 A:middle
or you can continue doing what
you were doing in watchOS 2,

00:26:37.376 --> 00:26:38.866 A:middle
sending a message
back to your phone app

00:26:38.866 --> 00:26:41.216 A:middle
with Watch Connectivity and
scheduling a notification there.

00:26:42.076 --> 00:26:44.536 A:middle
These are actually both
totally valid things to do,

00:26:44.536 --> 00:26:45.576 A:middle
and it depends a little bit

00:26:45.576 --> 00:26:46.926 A:middle
on what you're trying
to accomplish.

00:26:48.176 --> 00:26:49.416 A:middle
The important distinction is

00:26:49.416 --> 00:26:50.806 A:middle
where the notifications
will appear.

00:26:51.496 --> 00:26:53.706 A:middle
So if you send a message
back to your phone app

00:26:53.836 --> 00:26:56.046 A:middle
with Watch Connectivity, and
schedule the notification there,

00:26:56.656 --> 00:26:59.256 A:middle
the notification will appear on
both your phone and your watch,

00:26:59.556 --> 00:27:01.726 A:middle
and you'll be notified on
whichever device you're using.

00:26:59.556 --> 00:27:01.726 A:middle
and you'll be notified on
whichever device you're using.

00:27:01.726 --> 00:27:05.116 A:middle
So if you were using your
phone, it would appear there.

00:27:05.176 --> 00:27:07.396 A:middle
If you're using your watch,
it would notify you there.

00:27:08.256 --> 00:27:10.536 A:middle
If you use the new User
Notification framework

00:27:10.536 --> 00:27:14.236 A:middle
on the watch itself, that
notification will only appear

00:27:14.236 --> 00:27:16.736 A:middle
on the watch and will not
propagate back to the phone.

00:27:17.756 --> 00:27:20.376 A:middle
Now, that actually might
be exactly what you want.

00:27:20.376 --> 00:27:22.266 A:middle
There are many cases
where you really do want

00:27:22.266 --> 00:27:24.296 A:middle
to schedule a notification
that would only ever show

00:27:24.296 --> 00:27:27.406 A:middle
up on the watch at all, and
that's now easy and possible

00:27:27.486 --> 00:27:28.986 A:middle
with the new User
Notification framework.

00:27:29.986 --> 00:27:31.516 A:middle
But even better is
you-- [clapping].

00:27:36.836 --> 00:27:37.486 A:middle
Thanks. But even better,

00:27:37.486 --> 00:27:39.356 A:middle
you don't necessarily
have to make the choice.

00:27:39.726 --> 00:27:42.526 A:middle
If your goal is that you want
the notification to appear

00:27:42.526 --> 00:27:43.966 A:middle
in the right spot,
no matter what,

00:27:44.266 --> 00:27:46.806 A:middle
even if the user leaves their
phone behind, you could choose

00:27:46.806 --> 00:27:49.576 A:middle
to schedule it in both places
using Watch Connectivity

00:27:49.576 --> 00:27:51.126 A:middle
to send a message
back to your phone app

00:27:51.126 --> 00:27:54.086 A:middle
and scheduling it there, or
maybe it was just data that was

00:27:54.086 --> 00:27:55.446 A:middle
in your cloud service,
so you just,

00:27:55.516 --> 00:27:56.676 A:middle
by default, schedule it there.

00:27:57.286 --> 00:27:59.906 A:middle
And also scheduling it with the
new User Notification framework

00:27:59.986 --> 00:28:00.706 A:middle
on the watch.

00:27:59.986 --> 00:28:00.706 A:middle
on the watch.

00:28:01.436 --> 00:28:02.526 A:middle
If you do that, as long

00:28:02.526 --> 00:28:05.766 A:middle
as you've used the same
notification identifier both

00:28:05.766 --> 00:28:06.706 A:middle
times that you schedule it,

00:28:07.306 --> 00:28:09.466 A:middle
watchOS will de-duplicate
those notifications

00:28:09.466 --> 00:28:12.476 A:middle
so that you only have it appear
on the watch once, not twice.

00:28:13.026 --> 00:28:16.246 A:middle
So some great new stuff with
the User Notification framework.

00:28:19.416 --> 00:28:21.936 A:middle
Now, while individual
interactions

00:28:21.936 --> 00:28:24.856 A:middle
with the watch are short, there
may be some apps that you want

00:28:24.856 --> 00:28:27.306 A:middle
to use multiple times
over a longer period.

00:28:28.086 --> 00:28:30.226 A:middle
For example, here I've got
my chicken pot pie recipe,

00:28:30.226 --> 00:28:31.276 A:middle
and I'm going to
the store to pick

00:28:31.276 --> 00:28:32.496 A:middle
up all the items
I need to cook it.

00:28:33.886 --> 00:28:37.446 A:middle
Now, in watchOS 3, each time I
raise my wrist, I'm brought back

00:28:37.506 --> 00:28:39.136 A:middle
to the last app that I was used

00:28:39.566 --> 00:28:42.926 A:middle
to that I can really quickly
see the items that I still need

00:28:42.926 --> 00:28:45.136 A:middle
to pick up, and check off the
ones that I've already gotten.

00:28:45.696 --> 00:28:49.676 A:middle
I'll be brought back
to that last app for up

00:28:49.676 --> 00:28:51.566 A:middle
to eight minutes
after I last used it.

00:28:52.466 --> 00:28:54.686 A:middle
This is great, because
it lets you design apps

00:28:54.686 --> 00:28:56.376 A:middle
that have this kind of
interaction pattern,

00:28:56.376 --> 00:28:59.156 A:middle
where you use it for
many brief interactions,

00:28:59.156 --> 00:29:00.716 A:middle
but over a longer
period of time.

00:28:59.156 --> 00:29:00.716 A:middle
but over a longer
period of time.

00:29:01.396 --> 00:29:04.746 A:middle
This is the new user default
for all users in watchOS 3,

00:29:04.746 --> 00:29:06.566 A:middle
so it's to plan for this

00:29:06.786 --> 00:29:09.106 A:middle
and build your apps
and design around it.

00:29:10.516 --> 00:29:13.876 A:middle
These are just a few of the
ways that we've been thinking

00:29:13.876 --> 00:29:16.776 A:middle
about improving app
interactions in watchOS 3,

00:29:17.576 --> 00:29:19.686 A:middle
and there's a ton of other ways.

00:29:19.776 --> 00:29:22.136 A:middle
I'd encourage you to check out
the Quick Interaction Techniques

00:29:22.136 --> 00:29:24.906 A:middle
for watchOS session, where you
can get more detail on a bunch

00:29:24.906 --> 00:29:27.866 A:middle
of these kinds of ideas and
a bunch of others as well.

00:29:28.446 --> 00:29:31.586 A:middle
So that's navigation.

00:29:32.726 --> 00:29:33.896 A:middle
Now let's talk a little bit more

00:29:33.896 --> 00:29:37.156 A:middle
about the enhanced API
availability in watchOS 3.

00:29:41.236 --> 00:29:43.336 A:middle
As I mentioned earlier,
we've brought a bunch

00:29:43.336 --> 00:29:45.646 A:middle
of great frameworks from
some of our other platforms.

00:29:45.886 --> 00:29:47.456 A:middle
We've got some great
new frameworks.

00:29:47.456 --> 00:29:49.316 A:middle
For example, the User
Notification framework,

00:29:49.736 --> 00:29:52.646 A:middle
and we've also added a
whole bunch of APIs to many

00:29:52.646 --> 00:29:55.066 A:middle
of the frameworks that are
already on Apple Watch.

00:29:56.476 --> 00:29:58.616 A:middle
So let's start with one
we've already talked about,

00:29:59.296 --> 00:30:00.346 A:middle
Background App Refresh.

00:29:59.296 --> 00:30:00.346 A:middle
Background App Refresh.

00:30:00.476 --> 00:30:02.146 A:middle
I wanted to bring
it up again just

00:30:02.146 --> 00:30:04.876 A:middle
to reinforce how important
I feel like this stuff is.

00:30:05.466 --> 00:30:08.596 A:middle
And the three key things that
it gives you are the ability

00:30:08.596 --> 00:30:12.856 A:middle
to schedule updates, perform
complication push updates

00:30:12.856 --> 00:30:15.566 A:middle
with that guarantee of 50
over the course of the day,

00:30:16.406 --> 00:30:18.856 A:middle
and make sure that your snapshot
and your doc is up to date

00:30:18.856 --> 00:30:20.996 A:middle
and in sync with
your notifications

00:30:21.286 --> 00:30:22.496 A:middle
and your complications.

00:30:23.926 --> 00:30:26.186 A:middle
Again, definitely check out
the Keeping Your Watch App

00:30:26.186 --> 00:30:31.316 A:middle
Up to Date session as well for
far more information about this.

00:30:31.536 --> 00:30:34.806 A:middle
Now, fitness apps have a unique
need for staying up to date,

00:30:35.246 --> 00:30:37.446 A:middle
because during a workout
it's really important

00:30:37.446 --> 00:30:40.316 A:middle
that they be displaying
current information and up

00:30:40.316 --> 00:30:41.546 A:middle
to date throughout the workout.

00:30:42.166 --> 00:30:45.036 A:middle
So the big enhancement for
workout apps this year is that,

00:30:45.036 --> 00:30:47.506 A:middle
in watchOS 3, they will continue
to run in the background

00:30:47.506 --> 00:30:50.286 A:middle
for the entire duration
of your workout session.

00:30:50.826 --> 00:30:54.816 A:middle
This gives you the opportunity
to monitor workout progress,

00:30:55.136 --> 00:30:58.616 A:middle
watch-- use all of the
sensor API to keep track

00:30:58.616 --> 00:30:59.506 A:middle
of where things are going,

00:30:59.506 --> 00:31:01.806 A:middle
and notify the user
using notifications,

00:30:59.506 --> 00:31:01.806 A:middle
and notify the user
using notifications,

00:31:01.806 --> 00:31:03.296 A:middle
or haptics, or sounds.

00:31:04.576 --> 00:31:07.166 A:middle
And of course, we've enhanced
the access to the heart rate

00:31:07.386 --> 00:31:11.146 A:middle
and accelerometer so they
now provide continuous values

00:31:11.146 --> 00:31:14.476 A:middle
throughout the entire workout,
instead of batching those values

00:31:14.476 --> 00:31:16.616 A:middle
in increments that are
delivered in chunks.

00:31:17.236 --> 00:31:19.926 A:middle
So it makes it really easy to
keep track of the current state

00:31:19.926 --> 00:31:22.856 A:middle
of the workout the entire
time and stay up to date.

00:31:23.776 --> 00:31:26.126 A:middle
Because they're running,
you can also update your UI,

00:31:26.416 --> 00:31:28.996 A:middle
which makes sure that as
the user raises their wrist,

00:31:28.996 --> 00:31:31.326 A:middle
they can very quickly see
the correct current state

00:31:31.326 --> 00:31:33.356 A:middle
of the workout without
any extra delays.

00:31:34.816 --> 00:31:37.526 A:middle
It's a really, really big year,
actually, for fitness apps,

00:31:37.526 --> 00:31:40.226 A:middle
and there's an entire session
just about these and a number

00:31:40.226 --> 00:31:42.766 A:middle
of other enhancements for
these apps, so definitely check

00:31:42.766 --> 00:31:45.646 A:middle
out Building Great Workout
Apps to learn all about how

00:31:45.646 --> 00:31:48.386 A:middle
to make your workout apps
really amazing in watchOS 3.

00:31:50.236 --> 00:31:51.446 A:middle
But there is one
bit I want to focus

00:31:51.446 --> 00:31:52.816 A:middle
on a little bit more here first,

00:31:52.816 --> 00:31:54.176 A:middle
and that's the background
runtime.

00:31:54.736 --> 00:31:57.606 A:middle
Because there's a bit of
a balance to be had here,

00:31:58.086 --> 00:31:59.786 A:middle
you absolutely want
to have your app

00:31:59.786 --> 00:32:01.446 A:middle
up to date during the workout.

00:31:59.786 --> 00:32:01.446 A:middle
up to date during the workout.

00:32:01.996 --> 00:32:03.236 A:middle
But you also want to make sure

00:32:03.236 --> 00:32:04.956 A:middle
that you're preserving
a great experience

00:32:04.956 --> 00:32:07.916 A:middle
for users throughout the rest
of their day by being careful

00:32:07.916 --> 00:32:09.256 A:middle
to preserve their battery life.

00:32:10.616 --> 00:32:12.996 A:middle
And a big components
of that is making sure

00:32:12.996 --> 00:32:14.976 A:middle
that you're keeping track
of the amount of CPU

00:32:14.976 --> 00:32:16.356 A:middle
that you're using
during the workout.

00:32:17.486 --> 00:32:20.176 A:middle
And Xcode now has a great
interface to help you keep track

00:32:20.176 --> 00:32:22.676 A:middle
of that, both how much
you're using at an instant

00:32:23.196 --> 00:32:25.496 A:middle
and the amount that
you're using in aggregate

00:32:25.496 --> 00:32:28.186 A:middle
over a period of time.

00:32:28.386 --> 00:32:30.916 A:middle
So for the first part,
there's a clear view,

00:32:30.916 --> 00:32:33.636 A:middle
right up here near the top, that
will tell you the amount of CPU

00:32:33.636 --> 00:32:36.566 A:middle
that you're currently using,
and then down in the center,

00:32:36.566 --> 00:32:39.666 A:middle
there's a great graph that shows
you some historical information

00:32:40.006 --> 00:32:41.756 A:middle
about the CPU usage over time.

00:32:43.646 --> 00:32:45.566 A:middle
Now, you can clearly
see here the spikes,

00:32:45.566 --> 00:32:46.776 A:middle
where we've been
doing a bunch of work.

00:32:47.416 --> 00:32:49.216 A:middle
But in yellow, in
the center there,

00:32:49.216 --> 00:32:51.526 A:middle
you can see that we've got a
rolling average of the amount

00:32:51.526 --> 00:32:54.266 A:middle
of CPU that's being consumed
by our app in the background

00:32:54.266 --> 00:32:55.366 A:middle
over some period of time.

00:32:55.966 --> 00:32:57.566 A:middle
Now this part is the
one I want to focus on,

00:32:57.566 --> 00:32:58.556 A:middle
and it's the most important,

00:32:59.006 --> 00:33:01.206 A:middle
because while your workout app
is running in the background,

00:32:59.006 --> 00:33:01.206 A:middle
because while your workout app
is running in the background,

00:33:01.626 --> 00:33:04.746 A:middle
there's a cap imposed
on the total amount

00:33:04.746 --> 00:33:06.836 A:middle
of average CPU usage
that it can be using

00:33:06.836 --> 00:33:07.936 A:middle
over this period of time.

00:33:08.446 --> 00:33:10.756 A:middle
And you want to stay below
that cap to make sure

00:33:11.056 --> 00:33:12.906 A:middle
that your app continues
to run in the background,

00:33:12.906 --> 00:33:14.636 A:middle
and preserves the
battery life of the user

00:33:14.636 --> 00:33:15.916 A:middle
over the whole rest of the day.

00:33:17.596 --> 00:33:20.176 A:middle
So that cap here is
indicated clearly by Xcode

00:33:20.176 --> 00:33:22.406 A:middle
by the red dotted
line, and you can watch

00:33:22.406 --> 00:33:24.706 A:middle
as your average approaches
it, and make sure

00:33:24.706 --> 00:33:25.506 A:middle
that you stay below it.

00:33:26.906 --> 00:33:28.916 A:middle
So there's, again,
a ton of information

00:33:28.916 --> 00:33:31.576 A:middle
about the background
fitness workout experience,

00:33:31.576 --> 00:33:32.226 A:middle
improvements.

00:33:32.226 --> 00:33:34.466 A:middle
Definitely go check out more of
that, but this is the one thing

00:33:34.466 --> 00:33:37.186 A:middle
that you really should keep
in mind about CPU usage

00:33:37.376 --> 00:33:38.656 A:middle
as you're developing these apps.

00:33:39.246 --> 00:33:43.096 A:middle
So in addition to the sensor
enhancements for these kinds

00:33:43.096 --> 00:33:44.416 A:middle
of apps with making heart rate

00:33:44.416 --> 00:33:46.486 A:middle
and accelerometer
continuously available,

00:33:46.786 --> 00:33:50.006 A:middle
we've also got a bunch of
great new hardware access APIs.

00:33:50.646 --> 00:33:53.506 A:middle
So crown events give you raw
access to rotation events

00:33:53.506 --> 00:33:54.506 A:middle
from the digital crown.

00:33:55.596 --> 00:33:59.036 A:middle
In watchOS 2, your apps could
use the crown for scrolling

00:33:59.036 --> 00:34:02.446 A:middle
within your interface or for
picking items from a list

00:33:59.036 --> 00:34:02.446 A:middle
within your interface or for
picking items from a list

00:34:02.446 --> 00:34:03.286 A:middle
with the picker control.

00:34:03.916 --> 00:34:07.336 A:middle
But of course, we saw
many innovative uses

00:34:07.336 --> 00:34:10.396 A:middle
of the picker control for
other interesting things,

00:34:10.676 --> 00:34:13.315 A:middle
and we realize that everybody,
obviously, wants raw access

00:34:13.315 --> 00:34:14.326 A:middle
to digital crown events.

00:34:14.556 --> 00:34:16.716 A:middle
So that's now available, and
you can use it for all kinds

00:34:16.716 --> 00:34:18.466 A:middle
of other interactions
in your apps as well.

00:34:19.676 --> 00:34:19.755 A:middle
Now--

00:34:20.516 --> 00:34:24.676 A:middle
[ Applause ]

00:34:25.176 --> 00:34:28.045 A:middle
Now just gesture recognizers
really make it easy

00:34:28.306 --> 00:34:30.755 A:middle
to add touch interactions
to your apps.

00:34:31.156 --> 00:34:32.616 A:middle
There's a whole bunch

00:34:32.616 --> 00:34:37.106 A:middle
of single-finger interactions
available, like tap, swipe, pan,

00:34:37.106 --> 00:34:40.346 A:middle
long-press, and it's really
easy to add these to all

00:34:40.346 --> 00:34:42.136 A:middle
of your different
WatchKit interface elements

00:34:42.436 --> 00:34:43.985 A:middle
so that you can have
different parts

00:34:43.985 --> 00:34:46.346 A:middle
of your app screen
respond in different ways.

00:34:47.246 --> 00:34:49.626 A:middle
And of course, we've also made
the gyroscope accessible now

00:34:49.626 --> 00:34:50.926 A:middle
in addition to the
accelerometer,

00:34:51.235 --> 00:34:53.186 A:middle
so you've got a ton of
information about the motion

00:34:53.186 --> 00:34:56.436 A:middle
of the device available for all
kinds of interesting use cases.

00:34:57.706 --> 00:34:58.726 A:middle
Again, the quick-- oop.

00:34:59.066 --> 00:34:59.816 A:middle
Go for it [clapping].

00:35:02.556 --> 00:35:04.736 A:middle
Again, the quick interaction
technique session has a bunch

00:35:04.736 --> 00:35:07.026 A:middle
of information on this
and other use cases.

00:35:07.526 --> 00:35:09.456 A:middle
I do want to give you a
couple examples of some

00:35:09.456 --> 00:35:11.076 A:middle
of the cool things that you
can do with this though.

00:35:12.006 --> 00:35:15.436 A:middle
So first off, you can see here
Acorns has made use of the crown

00:35:15.926 --> 00:35:18.326 A:middle
to let you quickly scrub
through information

00:35:18.326 --> 00:35:21.986 A:middle
on a graph showing you
the historical information

00:35:22.356 --> 00:35:23.166 A:middle
about your account.

00:35:23.876 --> 00:35:26.146 A:middle
So in a single simple
interface, you can quickly move

00:35:26.146 --> 00:35:28.926 A:middle
through a lot of information,
all visible on one screen.

00:35:31.376 --> 00:35:34.706 A:middle
Here we have Sweat with Kayla,
which has taken advantage

00:35:34.776 --> 00:35:38.566 A:middle
of the swipe gestures to
be able to quickly move

00:35:38.566 --> 00:35:40.066 A:middle
between these different workouts

00:35:40.066 --> 00:35:41.426 A:middle
and choose just the
one that they want.

00:35:41.556 --> 00:35:44.576 A:middle
Of course, you can also use
the digital crown to move

00:35:44.576 --> 00:35:47.086 A:middle
between them, and with just a
tap, you can activate the one

00:35:47.086 --> 00:35:47.876 A:middle
that you're interested in.

00:35:48.936 --> 00:35:50.016 A:middle
Now you'll notice
that there's some kind

00:35:50.016 --> 00:35:51.226 A:middle
of interesting visuals here

00:35:51.226 --> 00:35:54.026 A:middle
that are adding a little
liveliness to the interface.

00:35:54.026 --> 00:35:56.636 A:middle
And to help make that
possible in all your apps,

00:35:56.876 --> 00:35:58.816 A:middle
we've got some great
graphics and media frameworks

00:35:58.816 --> 00:36:00.236 A:middle
that we've bought
over to Apple Watch.

00:35:58.816 --> 00:36:00.236 A:middle
that we've bought
over to Apple Watch.

00:36:00.906 --> 00:36:04.186 A:middle
SpriteKit and SceneKit make
it really easy to add both 2D

00:36:04.186 --> 00:36:06.316 A:middle
and 3D graphics and animations

00:36:06.576 --> 00:36:08.176 A:middle
to enhance different
parts of your apps.

00:36:08.746 --> 00:36:10.006 A:middle
And of course you can use them

00:36:10.006 --> 00:36:13.436 A:middle
in your long look
notifications interfaces as well

00:36:13.756 --> 00:36:16.676 A:middle
to make your notifications
really interesting and lively.

00:36:18.446 --> 00:36:19.816 A:middle
And because we've
been talking a lot

00:36:19.816 --> 00:36:22.776 A:middle
about simplifying navigation, we
also wanted to make it possible

00:36:22.776 --> 00:36:24.216 A:middle
to play back video in line

00:36:24.216 --> 00:36:25.976 A:middle
in your application
interfaces as well.

00:36:26.876 --> 00:36:29.966 A:middle
In watchOS 2, we introduced
video playback in watchOS apps,

00:36:30.476 --> 00:36:32.416 A:middle
but for it to work there,
it actually took you

00:36:32.416 --> 00:36:34.276 A:middle
out into a separate
full-screen interface,

00:36:34.276 --> 00:36:35.276 A:middle
where you watched a video

00:36:35.276 --> 00:36:36.616 A:middle
and then dismissed it
when you were done.

00:36:37.176 --> 00:36:38.826 A:middle
With inline video
playback, you don't have

00:36:38.826 --> 00:36:41.166 A:middle
to leave your application's
primary interface at all,

00:36:41.226 --> 00:36:42.696 A:middle
and you can play it
back right there.

00:36:43.346 --> 00:36:45.376 A:middle
Even better, it supports
autoplay,

00:36:45.656 --> 00:36:48.066 A:middle
so as soon as the video
becomes visible on screen,

00:36:48.066 --> 00:36:50.376 A:middle
it will start playing and
can pause when it goes off.

00:36:50.826 --> 00:36:53.566 A:middle
If you have multiple short
videos on a scrolling list,

00:36:53.566 --> 00:36:55.886 A:middle
the one on screen at any one
time will automatically play

00:36:55.886 --> 00:36:57.306 A:middle
while all the others pause.

00:36:57.816 --> 00:36:58.836 A:middle
It's a really great way

00:36:58.836 --> 00:37:00.666 A:middle
to add some really
short interaction videos

00:36:58.836 --> 00:37:00.666 A:middle
to add some really
short interaction videos

00:37:00.666 --> 00:37:01.496 A:middle
into your apps.

00:37:02.156 --> 00:37:04.966 A:middle
And because apps in the dock are
live while they're in the dock,

00:37:05.586 --> 00:37:07.656 A:middle
the autoplay feature can
actually even work there.

00:37:08.046 --> 00:37:10.766 A:middle
So if you have a quick video
that needs to be displayed

00:37:10.766 --> 00:37:13.116 A:middle
as you scroll through the
dock, when users come to rest

00:37:13.116 --> 00:37:15.666 A:middle
on your app, that video can
start playing right in line

00:37:15.666 --> 00:37:17.256 A:middle
without even taking
your app full screen.

00:37:17.896 --> 00:37:19.216 A:middle
So some really great
enhancements

00:37:19.216 --> 00:37:20.446 A:middle
for video in watchOS 3.

00:37:20.826 --> 00:37:25.596 A:middle
SpriteKit and SceneKit can be
used for all kinds of things.

00:37:25.646 --> 00:37:28.656 A:middle
Here you can see a Seven
Minute Workout has taken great

00:37:28.656 --> 00:37:32.256 A:middle
advantage of SceneKit to bring a
lot of the visuals that they had

00:37:32.256 --> 00:37:34.486 A:middle
on their iPhone app to
Apple Watch as well.

00:37:35.126 --> 00:37:37.286 A:middle
So you can see exactly the
workout that you want to perform

00:37:37.356 --> 00:37:40.736 A:middle
and get a lot of clarity
on how you should do it.

00:37:41.246 --> 00:37:43.986 A:middle
So in addition to adding a
lot of interesting visuals

00:37:43.986 --> 00:37:47.016 A:middle
to your apps, SpriteKit and
SceneKit are obviously great

00:37:47.016 --> 00:37:48.506 A:middle
for short interaction games.

00:37:50.296 --> 00:37:53.226 A:middle
We've also bought GameKit to
Apple Watch and watchOS 3,

00:37:53.726 --> 00:37:55.066 A:middle
which makes it really
easy for you

00:37:55.066 --> 00:37:58.126 A:middle
to add turn-based gaming
to your watch apps.

00:37:59.396 --> 00:38:01.996 A:middle
Because GameKit's turn-based
gaming APIs are built on top

00:37:59.396 --> 00:38:01.996 A:middle
Because GameKit's turn-based
gaming APIs are built on top

00:38:01.996 --> 00:38:04.236 A:middle
of NSURLSession,
they can work even

00:38:04.236 --> 00:38:05.286 A:middle
if your phone is not present,

00:38:05.286 --> 00:38:07.246 A:middle
when your watch is near
known WiFi networks.

00:38:09.586 --> 00:38:12.306 A:middle
The GameKit achievement
APIs can also be used

00:38:12.306 --> 00:38:15.356 A:middle
to earn achievements on Apple
Watch, which can then be viewed

00:38:15.356 --> 00:38:18.506 A:middle
on iPhone, or iPad, or
your other platforms

00:38:18.506 --> 00:38:19.206 A:middle
where you've got your game.

00:38:19.756 --> 00:38:23.156 A:middle
And of course, with AV
foundation, it's not really easy

00:38:23.156 --> 00:38:25.266 A:middle
to play sounds out
of the watch speaker.

00:38:25.866 --> 00:38:30.456 A:middle
Now, gaming on Apple Watch is
really just getting started,

00:38:30.456 --> 00:38:32.796 A:middle
and with some of these new
frameworks, I'm really excited

00:38:32.796 --> 00:38:34.506 A:middle
to see what kinds of
things you guys come up with

00:38:34.856 --> 00:38:37.016 A:middle
for short interaction
games on the watch.

00:38:37.556 --> 00:38:40.036 A:middle
To give you just one idea
of how this can result

00:38:40.036 --> 00:38:41.996 A:middle
in a really interesting game,

00:38:42.326 --> 00:38:46.086 A:middle
I want to show you a quick
video here of a new game

00:38:46.086 --> 00:38:48.216 A:middle
that WoGa is developing
called Fish Time

00:38:49.286 --> 00:38:51.666 A:middle
that lets us go fishing at
short intervals on our watch.

00:38:52.186 --> 00:38:55.116 A:middle
So with just a swipe,
I can go cast my line,

00:38:55.116 --> 00:38:57.646 A:middle
and I can use the digital
crown to drop my lure

00:38:57.646 --> 00:38:59.336 A:middle
down to just the right
depth where I want.

00:38:59.336 --> 00:39:03.146 A:middle
Now, I could leave it there for
a while and wait, or I can tap

00:38:59.336 --> 00:39:03.146 A:middle
Now, I could leave it there for
a while and wait, or I can tap

00:39:03.146 --> 00:39:04.066 A:middle
to go fishing right now.

00:39:04.736 --> 00:39:05.526 A:middle
Looks like I got a bite.

00:39:06.146 --> 00:39:08.226 A:middle
Now you can use the crown
again to reel it in,

00:39:08.606 --> 00:39:10.886 A:middle
but now I actually--
I didn't catch it.

00:39:11.266 --> 00:39:13.126 A:middle
That'll probably make the
fish a little happier,

00:39:13.456 --> 00:39:16.376 A:middle
although our fisherman might
not be so happy about it.

00:39:17.586 --> 00:39:21.636 A:middle
So really cool how you can add
some really interesting graphics

00:39:21.636 --> 00:39:24.996 A:middle
and get some great animations
using SpriteKit on Apple Watch.

00:39:25.336 --> 00:39:27.296 A:middle
Really, really looking
forward to see what kinds

00:39:27.296 --> 00:39:28.986 A:middle
of things you guys do with this.

00:39:30.566 --> 00:39:32.536 A:middle
So next up, I want
to mention CloudKit.

00:39:33.906 --> 00:39:35.856 A:middle
We've brought CloudKit
to the watchOS SDK,

00:39:36.106 --> 00:39:39.346 A:middle
including the new CK Share
APIs, which make it really easy

00:39:40.236 --> 00:39:42.466 A:middle
to share data between
different users.

00:39:42.836 --> 00:39:46.246 A:middle
Again, because it's built on an
NSURLSession, it's really easy

00:39:46.246 --> 00:39:48.326 A:middle
for it to work, even when
your phone isn't present.

00:39:48.326 --> 00:39:51.316 A:middle
There's a whole session on
CloudKit with What's New

00:39:51.316 --> 00:39:55.096 A:middle
in CloudKit that I definitely
encourage you to check out.

00:39:56.576 --> 00:39:58.016 A:middle
And finally, we've
got Apple Pay.

00:39:58.106 --> 00:40:00.956 A:middle
Apple Watch is a great way
to pay for physical goods

00:39:58.106 --> 00:40:00.956 A:middle
Apple Watch is a great way
to pay for physical goods

00:40:00.956 --> 00:40:03.906 A:middle
in stores, and of course with
Apple Pay on Apple Watch,

00:40:04.086 --> 00:40:07.136 A:middle
you can now offer physical goods
for purchase within your apps

00:40:07.406 --> 00:40:09.016 A:middle
with just a double tap
of the side button.

00:40:09.016 --> 00:40:12.186 A:middle
Now, there's many different
ways that you might go

00:40:12.186 --> 00:40:15.846 A:middle
about using this, but for
example, you might choose

00:40:16.206 --> 00:40:19.636 A:middle
to offer for purchase the most
common item that I buy every day

00:40:19.636 --> 00:40:22.626 A:middle
for lunch, so that I can
make that order really easily

00:40:22.626 --> 00:40:24.706 A:middle
at lunchtime every day,
right from my watch.

00:40:25.226 --> 00:40:27.106 A:middle
There's a lot of ways that
you can offer physical goods

00:40:27.106 --> 00:40:28.926 A:middle
for sale within your
watch using Apple Pay.

00:40:29.526 --> 00:40:32.576 A:middle
So that's just some of the APIs

00:40:32.966 --> 00:40:35.166 A:middle
that are a part of
the watchOS 3 SDK.

00:40:35.166 --> 00:40:36.936 A:middle
There's a bunch of
new s tuff in there.

00:40:36.936 --> 00:40:38.876 A:middle
Definitely go check it all out.

00:40:39.716 --> 00:40:41.966 A:middle
I'd like to end by talking
about discoverability

00:40:41.966 --> 00:40:43.956 A:middle
and configuration,
because, again,

00:40:44.016 --> 00:40:46.016 A:middle
building a great watch app
is just the first step.

00:40:46.366 --> 00:40:48.946 A:middle
You also want to make sure
that it's really easy for users

00:40:48.946 --> 00:40:50.736 A:middle
to discover it and
get it installed.

00:40:51.546 --> 00:40:54.226 A:middle
So the first enhancement
for this comes

00:40:54.226 --> 00:40:57.006 A:middle
in the iOS 10 Apple Watch app.

00:40:57.736 --> 00:41:00.556 A:middle
There's a brand new watch face
gallery, which displays all

00:40:57.736 --> 00:41:00.556 A:middle
There's a brand new watch face
gallery, which displays all

00:41:00.556 --> 00:41:02.926 A:middle
of the watch faces that
users can add on their watch.

00:41:03.546 --> 00:41:05.716 A:middle
And even better, right
at the top of the screen,

00:41:05.716 --> 00:41:08.546 A:middle
it includes an entire
section dedicated just to all

00:41:08.546 --> 00:41:11.546 A:middle
of your apps, and getting
in here is really easy

00:41:11.546 --> 00:41:13.136 A:middle
and requires just
a couple of steps.

00:41:14.046 --> 00:41:17.476 A:middle
So first off, you have to
adopt a new ClockKit API.

00:41:18.776 --> 00:41:20.866 A:middle
You already had an
API in watchOS 2

00:41:20.866 --> 00:41:23.016 A:middle
for specifying a template
complication view.

00:41:24.406 --> 00:41:26.546 A:middle
This API has been in
enhanced in watchOS 3

00:41:26.926 --> 00:41:30.856 A:middle
to not just return a string
for your complication data,

00:41:31.166 --> 00:41:33.186 A:middle
but actually the
localization key

00:41:33.436 --> 00:41:35.726 A:middle
to get localized strings
for all languages.

00:41:36.426 --> 00:41:38.396 A:middle
This is important,
because the second step is

00:41:38.396 --> 00:41:40.296 A:middle
to build a complication bundle.

00:41:40.796 --> 00:41:43.126 A:middle
You use the-- you do
this using the simulator.

00:41:43.756 --> 00:41:46.246 A:middle
You run your app, and build
a complication bundle,

00:41:46.246 --> 00:41:48.186 A:middle
and this creates a
static representation

00:41:48.356 --> 00:41:49.626 A:middle
of your complication template

00:41:49.626 --> 00:41:52.706 A:middle
that you can then include
in your iPhone app.

00:41:52.966 --> 00:41:54.896 A:middle
It's really easy to
do, and by doing it,

00:41:54.946 --> 00:41:58.866 A:middle
it gets you into this gallery
section so that you can show up.

00:41:59.976 --> 00:42:01.436 A:middle
We need the static
representation,

00:41:59.976 --> 00:42:01.436 A:middle
We need the static
representation,

00:42:01.436 --> 00:42:03.856 A:middle
because that way we can display
your complication in line

00:42:03.856 --> 00:42:06.066 A:middle
in a watch face here,
even if your app isn't

00:42:06.066 --> 00:42:07.496 A:middle
yet installed on the watch.

00:42:08.446 --> 00:42:11.396 A:middle
So just a couple of steps,
and the payoff is really big.

00:42:11.396 --> 00:42:13.336 A:middle
You'll be right here
in the gallery.

00:42:14.016 --> 00:42:16.506 A:middle
The gallery is the first thing
that new watch owners see

00:42:16.506 --> 00:42:19.496 A:middle
after they've paired, so
it's definitely a place

00:42:19.496 --> 00:42:21.376 A:middle
that you'll want to be.

00:42:21.726 --> 00:42:24.286 A:middle
In addition to the gallery,
we've also made it a lot easier

00:42:24.286 --> 00:42:26.876 A:middle
to customize watch faces
and get your apps onto them.

00:42:27.326 --> 00:42:29.476 A:middle
It was always possible to
configure your watch faces

00:42:29.476 --> 00:42:33.056 A:middle
on the Apple Watch, and in
iOS 10, the Apple Watch app

00:42:33.056 --> 00:42:36.396 A:middle
on iPhone now includes an entire
face configuration UI as well.

00:42:36.786 --> 00:42:38.906 A:middle
Obviously, they're kept in
sync, so any changes you make

00:42:38.906 --> 00:42:42.706 A:middle
in one will be reflected in the
other, and it's not really easy

00:42:42.706 --> 00:42:45.226 A:middle
on your phone to select all
the complications that you'd

00:42:45.226 --> 00:42:48.116 A:middle
like on all your watch
faces on Apple Watch.

00:42:48.626 --> 00:42:50.216 A:middle
And with quick watch
face switching,

00:42:50.506 --> 00:42:53.816 A:middle
there's now even more reason
to have a complication,

00:42:54.096 --> 00:42:56.486 A:middle
because more users will
have more watch faces,

00:42:56.816 --> 00:42:58.426 A:middle
and your apps can
be right on them.

00:42:59.026 --> 00:43:02.736 A:middle
So then the last part of
configuration is the dock,

00:42:59.026 --> 00:43:02.736 A:middle
So then the last part of
configuration is the dock,

00:43:03.176 --> 00:43:05.616 A:middle
and obviously, you
can configure the dock

00:43:05.616 --> 00:43:07.116 A:middle
in the Apple Watch
app on your iPhone.

00:43:07.396 --> 00:43:10.146 A:middle
It's really easy to add and
remove apps from the dock,

00:43:10.146 --> 00:43:11.176 A:middle
and reorder them right there.

00:43:11.866 --> 00:43:14.546 A:middle
But even more importantly, you
can do it on the watch itself.

00:43:14.616 --> 00:43:16.596 A:middle
And there's one feature
in particular

00:43:16.596 --> 00:43:18.596 A:middle
that makes it really
easy to find

00:43:18.596 --> 00:43:20.206 A:middle
that you can add
apps into the dock.

00:43:20.856 --> 00:43:24.086 A:middle
The last app that you used is
always displayed in the dock,

00:43:24.086 --> 00:43:25.836 A:middle
even if you hadn't
chosen to put it there.

00:43:26.286 --> 00:43:29.426 A:middle
So if a user installs your
app and doesn't even yet know

00:43:29.426 --> 00:43:30.786 A:middle
that they can add
things to the dock,

00:43:31.156 --> 00:43:33.396 A:middle
they go to the home screen, they
find the icon and launch it.

00:43:33.736 --> 00:43:35.696 A:middle
The next time they go to the
dock, they'll see your app

00:43:35.696 --> 00:43:38.536 A:middle
in there with a big button
under it that says Keep In Dock,

00:43:38.946 --> 00:43:40.416 A:middle
which, with one tab, will add it

00:43:40.416 --> 00:43:41.956 A:middle
to their permanent list
of apps in the dock.

00:43:42.706 --> 00:43:45.216 A:middle
So it's really easy to discover
that you can add them there,

00:43:45.376 --> 00:43:47.626 A:middle
and also easy to add them
there from the watch itself.

00:43:48.086 --> 00:43:53.426 A:middle
So again, you're going to hear
a lot about building glanceable,

00:43:53.716 --> 00:43:55.596 A:middle
actionable, and responsive apps,

00:43:56.216 --> 00:43:58.256 A:middle
and I really do encourage
you to keep that in mind.

00:43:58.706 --> 00:44:00.736 A:middle
There's a great design
session that Michael gave

00:43:58.706 --> 00:44:00.736 A:middle
There's a great design
session that Michael gave

00:44:00.806 --> 00:44:04.936 A:middle
that you can go check out for
Designing Great Apple Watch

00:44:04.936 --> 00:44:06.946 A:middle
Experiences, where
he'll talk even more

00:44:06.946 --> 00:44:09.176 A:middle
about all these things, so
definitely check that out.

00:44:09.686 --> 00:44:13.316 A:middle
And the responsive part
of this is so important

00:44:13.496 --> 00:44:15.976 A:middle
that there are really two
sessions focused just on this,

00:44:16.156 --> 00:44:18.386 A:middle
with Architecting for
Performance on watchOS 3,

00:44:18.796 --> 00:44:20.186 A:middle
and Keeping Your
Watch App Up to Date.

00:44:20.766 --> 00:44:22.266 A:middle
These are two that you'll
definitely want to check

00:44:22.266 --> 00:44:24.816 A:middle
out to get all the benefits
of Background App Refresh

00:44:25.086 --> 00:44:26.816 A:middle
and making sure that
your apps are up to date

00:44:26.816 --> 00:44:28.466 A:middle
and responsive for watchOS 3.

00:44:28.806 --> 00:44:30.256 A:middle
And there's a whole bunch

00:44:30.256 --> 00:44:32.666 A:middle
of other sessions throughout
the week that have a lot

00:44:32.666 --> 00:44:35.696 A:middle
of information, many focused on
Apple Watch, and a whole bunch

00:44:35.696 --> 00:44:37.576 A:middle
that just include Apple
Watch information.

00:44:38.076 --> 00:44:40.226 A:middle
Thanks so much for coming
and joining, and I can't wait

00:44:40.226 --> 00:44:41.676 A:middle
to see what you do
with Apple Watch.

00:44:42.196 --> 00:44:42.976 A:middle
Enjoy the rest of the week.

00:44:43.516 --> 00:44:46.500 A:middle
[ Applause ]
