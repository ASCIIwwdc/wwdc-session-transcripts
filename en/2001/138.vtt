WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:02.840 align:start position:0%
 
I'm<00:00:01.110><c> mark</c><00:00:01.410><c> Turner</c><00:00:01.709><c> on</c><00:00:01.949><c> the</c><00:00:01.979><c> carbon</c><00:00:02.340><c> technology</c>

00:00:02.840 --> 00:00:02.850 align:start position:0%
I'm mark Turner on the carbon technology
 

00:00:02.850 --> 00:00:07.130 align:start position:0%
I'm mark Turner on the carbon technology
manager<00:00:03.240><c> in</c><00:00:03.480><c> worldwide</c><00:00:03.899><c> developer</c><00:00:04.380><c> relations</c>

00:00:07.130 --> 00:00:07.140 align:start position:0%
 
 

00:00:07.140 --> 00:00:10.299 align:start position:0%
 
corefoundation<00:00:07.919><c> as</c><00:00:08.519><c> the</c><00:00:09.300><c> name</c><00:00:09.450><c> implies</c>

00:00:10.299 --> 00:00:10.309 align:start position:0%
corefoundation as the name implies
 

00:00:10.309 --> 00:00:13.310 align:start position:0%
corefoundation as the name implies
provides<00:00:11.309><c> a</c><00:00:11.400><c> fundamental</c><00:00:11.880><c> set</c><00:00:12.150><c> of</c><00:00:12.360><c> system</c>

00:00:13.310 --> 00:00:13.320 align:start position:0%
provides a fundamental set of system
 

00:00:13.320 --> 00:00:14.780 align:start position:0%
provides a fundamental set of system
services<00:00:13.769><c> that</c><00:00:13.980><c> are</c><00:00:14.099><c> widely</c><00:00:14.429><c> used</c><00:00:14.639><c> throughout</c>

00:00:14.780 --> 00:00:14.790 align:start position:0%
services that are widely used throughout
 

00:00:14.790 --> 00:00:18.140 align:start position:0%
services that are widely used throughout
Mac<00:00:15.089><c> OS</c><00:00:15.389><c> 10</c><00:00:15.420><c> and</c><00:00:16.550><c> they're</c><00:00:17.550><c> available</c><00:00:17.940><c> for</c><00:00:18.090><c> your</c>

00:00:18.140 --> 00:00:18.150 align:start position:0%
Mac OS 10 and they're available for your
 

00:00:18.150 --> 00:00:20.990 align:start position:0%
Mac OS 10 and they're available for your
use<00:00:18.210><c> as</c><00:00:18.570><c> well</c><00:00:19.310><c> through</c><00:00:20.310><c> both</c><00:00:20.520><c> carbon</c><00:00:20.910><c> and</c>

00:00:20.990 --> 00:00:21.000 align:start position:0%
use as well through both carbon and
 

00:00:21.000 --> 00:00:23.210 align:start position:0%
use as well through both carbon and
cocoa<00:00:21.390><c> and</c><00:00:21.660><c> any</c><00:00:22.260><c> other</c><00:00:22.500><c> application</c><00:00:23.070><c> running</c>

00:00:23.210 --> 00:00:23.220 align:start position:0%
cocoa and any other application running
 

00:00:23.220 --> 00:00:25.970 align:start position:0%
cocoa and any other application running
on<00:00:23.340><c> Mac</c><00:00:23.490><c> OS</c><00:00:23.670><c> 10</c><00:00:24.350><c> and</c><00:00:25.350><c> a</c><00:00:25.470><c> subset</c><00:00:25.830><c> of</c><00:00:25.859><c> these</c>

00:00:25.970 --> 00:00:25.980 align:start position:0%
on Mac OS 10 and a subset of these
 

00:00:25.980 --> 00:00:27.769 align:start position:0%
on Mac OS 10 and a subset of these
services<00:00:26.400><c> are</c><00:00:26.460><c> also</c><00:00:26.760><c> available</c><00:00:27.060><c> to</c><00:00:27.480><c> Carbon</c>

00:00:27.769 --> 00:00:27.779 align:start position:0%
services are also available to Carbon
 

00:00:27.779 --> 00:00:30.019 align:start position:0%
services are also available to Carbon
apps<00:00:27.960><c> on</c><00:00:28.349><c> Mac</c><00:00:28.980><c> OS</c><00:00:29.160><c> 8</c><00:00:29.279><c> and</c><00:00:29.429><c> 9</c><00:00:29.580><c> through</c><00:00:29.820><c> carbon</c>

00:00:30.019 --> 00:00:30.029 align:start position:0%
apps on Mac OS 8 and 9 through carbon
 

00:00:30.029 --> 00:00:33.620 align:start position:0%
apps on Mac OS 8 and 9 through carbon
lib<00:00:30.859><c> so</c><00:00:31.859><c> this</c><00:00:32.610><c> morning</c><00:00:32.880><c> we're</c><00:00:32.969><c> going</c><00:00:33.059><c> to</c><00:00:33.149><c> get</c><00:00:33.360><c> a</c>

00:00:33.620 --> 00:00:33.630 align:start position:0%
lib so this morning we're going to get a
 

00:00:33.630 --> 00:00:37.010 align:start position:0%
lib so this morning we're going to get a
great<00:00:34.380><c> overview</c><00:00:34.739><c> of</c><00:00:35.540><c> some</c><00:00:36.540><c> of</c><00:00:36.570><c> the</c><00:00:36.660><c> services</c>

00:00:37.010 --> 00:00:37.020 align:start position:0%
great overview of some of the services
 

00:00:37.020 --> 00:00:38.750 align:start position:0%
great overview of some of the services
that<00:00:37.079><c> you</c><00:00:37.260><c> might</c><00:00:37.469><c> like</c><00:00:37.620><c> to</c><00:00:37.649><c> take</c><00:00:38.129><c> advantage</c><00:00:38.550><c> of</c>

00:00:38.750 --> 00:00:38.760 align:start position:0%
that you might like to take advantage of
 

00:00:38.760 --> 00:00:41.240 align:start position:0%
that you might like to take advantage of
in<00:00:39.030><c> corefoundation</c><00:00:39.480><c> and</c><00:00:40.230><c> to</c><00:00:40.770><c> begin</c><00:00:40.890><c> with</c><00:00:40.980><c> I'd</c>

00:00:41.240 --> 00:00:41.250 align:start position:0%
in corefoundation and to begin with I'd
 

00:00:41.250 --> 00:00:45.470 align:start position:0%
in corefoundation and to begin with I'd
like<00:00:41.280><c> to</c><00:00:41.520><c> introduce</c><00:00:43.040><c> Chris</c><00:00:44.040><c> Kane</c><00:00:44.399><c> from</c><00:00:45.270><c> the</c>

00:00:45.470 --> 00:00:45.480 align:start position:0%
like to introduce Chris Kane from the
 

00:00:45.480 --> 00:00:48.049 align:start position:0%
like to introduce Chris Kane from the
core<00:00:45.629><c> foundation</c><00:00:46.050><c> team</c><00:00:46.260><c> to</c><00:00:47.160><c> start</c><00:00:47.789><c> off</c><00:00:47.910><c> our</c>

00:00:48.049 --> 00:00:48.059 align:start position:0%
core foundation team to start off our
 

00:00:48.059 --> 00:00:58.610 align:start position:0%
core foundation team to start off our
overview<00:00:48.390><c> welcome</c><00:00:49.079><c> Chris</c><00:00:55.520><c> well</c><00:00:56.520><c> welcome</c><00:00:57.620><c> this</c>

00:00:58.610 --> 00:00:58.620 align:start position:0%
overview welcome Chris well welcome this
 

00:00:58.620 --> 00:01:00.110 align:start position:0%
overview welcome Chris well welcome this
session<00:00:58.890><c> will</c><00:00:59.129><c> be</c><00:00:59.160><c> an</c><00:00:59.340><c> overview</c><00:00:59.670><c> of</c><00:00:59.879><c> the</c><00:00:59.940><c> core</c>

00:01:00.110 --> 00:01:00.120 align:start position:0%
session will be an overview of the core
 

00:01:00.120 --> 00:01:02.180 align:start position:0%
session will be an overview of the core
foundation<00:01:00.270><c> framework</c><00:01:01.079><c> it's</c><00:01:01.859><c> going</c><00:01:02.100><c> to</c>

00:01:02.180 --> 00:01:02.190 align:start position:0%
foundation framework it's going to
 

00:01:02.190 --> 00:01:05.329 align:start position:0%
foundation framework it's going to
explain<00:01:02.640><c> what</c><00:01:03.449><c> it</c><00:01:03.629><c> is</c><00:01:03.949><c> describe</c><00:01:04.949><c> some</c><00:01:05.189><c> of</c><00:01:05.220><c> the</c>

00:01:05.329 --> 00:01:05.339 align:start position:0%
explain what it is describe some of the
 

00:01:05.339 --> 00:01:08.300 align:start position:0%
explain what it is describe some of the
functionality<00:01:05.939><c> it</c><00:01:06.000><c> contains</c><00:01:06.390><c> and</c><00:01:07.310><c> review</c>

00:01:08.300 --> 00:01:08.310 align:start position:0%
functionality it contains and review
 

00:01:08.310 --> 00:01:10.160 align:start position:0%
functionality it contains and review
some<00:01:08.490><c> of</c><00:01:08.520><c> the</c><00:01:08.670><c> general</c><00:01:08.970><c> concepts</c><00:01:09.479><c> of</c><00:01:09.630><c> usage</c><00:01:09.990><c> of</c>

00:01:10.160 --> 00:01:10.170 align:start position:0%
some of the general concepts of usage of
 

00:01:10.170 --> 00:01:12.950 align:start position:0%
some of the general concepts of usage of
core<00:01:10.380><c> foundation</c><00:01:11.299><c> I'll</c><00:01:12.299><c> begin</c><00:01:12.540><c> with</c><00:01:12.840><c> an</c>

00:01:12.950 --> 00:01:12.960 align:start position:0%
core foundation I'll begin with an
 

00:01:12.960 --> 00:01:17.930 align:start position:0%
core foundation I'll begin with an
overview

00:01:17.930 --> 00:01:17.940 align:start position:0%
 
 

00:01:17.940 --> 00:01:20.210 align:start position:0%
 
corefoundation<00:01:18.780><c> is</c><00:01:19.230><c> a</c><00:01:19.260><c> low-level</c><00:01:19.500><c> framework</c>

00:01:20.210 --> 00:01:20.220 align:start position:0%
corefoundation is a low-level framework
 

00:01:20.220 --> 00:01:22.640 align:start position:0%
corefoundation is a low-level framework
within<00:01:20.430><c> Mac</c><00:01:20.730><c> os10</c><00:01:21.000><c> it's</c><00:01:21.900><c> used</c><00:01:22.230><c> to</c><00:01:22.380><c> implement</c>

00:01:22.640 --> 00:01:22.650 align:start position:0%
within Mac os10 it's used to implement
 

00:01:22.650 --> 00:01:25.220 align:start position:0%
within Mac os10 it's used to implement
Mac<00:01:23.310><c> OS</c><00:01:23.520><c> 10</c><00:01:23.550><c> and</c><00:01:24.060><c> contains</c><00:01:24.480><c> functionality</c>

00:01:25.220 --> 00:01:25.230 align:start position:0%
Mac OS 10 and contains functionality
 

00:01:25.230 --> 00:01:27.440 align:start position:0%
Mac OS 10 and contains functionality
that<00:01:25.380><c> you</c><00:01:25.440><c> can</c><00:01:25.530><c> also</c><00:01:25.890><c> use</c><00:01:26.310><c> in</c><00:01:26.610><c> your</c><00:01:26.880><c> frameworks</c>

00:01:27.440 --> 00:01:27.450 align:start position:0%
that you can also use in your frameworks
 

00:01:27.450 --> 00:01:30.290 align:start position:0%
that you can also use in your frameworks
and<00:01:27.630><c> applications</c><00:01:28.200><c> as</c><00:01:28.350><c> Mark</c><00:01:28.590><c> said</c><00:01:29.120><c> both</c><00:01:30.120><c> of</c>

00:01:30.290 --> 00:01:30.300 align:start position:0%
and applications as Mark said both of
 

00:01:30.300 --> 00:01:32.360 align:start position:0%
and applications as Mark said both of
the<00:01:30.390><c> higher-level</c><00:01:30.600><c> frameworks</c><00:01:31.500><c> cocoa</c><00:01:32.160><c> and</c>

00:01:32.360 --> 00:01:32.370 align:start position:0%
the higher-level frameworks cocoa and
 

00:01:32.370 --> 00:01:35.450 align:start position:0%
the higher-level frameworks cocoa and
carbon<00:01:33.150><c> used</c><00:01:33.870><c> core</c><00:01:34.170><c> foundation</c><00:01:34.800><c> quite</c><00:01:35.040><c> quite</c>

00:01:35.450 --> 00:01:35.460 align:start position:0%
carbon used core foundation quite quite
 

00:01:35.460 --> 00:01:38.720 align:start position:0%
carbon used core foundation quite quite
a<00:01:35.490><c> bit</c><00:01:36.290><c> part</c><00:01:37.290><c> of</c><00:01:37.380><c> core</c><00:01:37.560><c> foundation</c><00:01:38.190><c> as</c><00:01:38.370><c> Mark</c>

00:01:38.720 --> 00:01:38.730 align:start position:0%
a bit part of core foundation as Mark
 

00:01:38.730 --> 00:01:42.680 align:start position:0%
a bit part of core foundation as Mark
said<00:01:38.790><c> is</c><00:01:39.180><c> also</c><00:01:39.660><c> available</c><00:01:39.840><c> on</c><00:01:40.460><c> Mac</c><00:01:41.460><c> OS</c><00:01:41.700><c> 9</c><00:01:41.730><c> and</c><00:01:41.940><c> 8</c>

00:01:42.680 --> 00:01:42.690 align:start position:0%
said is also available on Mac OS 9 and 8
 

00:01:42.690 --> 00:01:45.590 align:start position:0%
said is also available on Mac OS 9 and 8
via<00:01:43.200><c> carbon</c><00:01:43.530><c> Lib</c><00:01:44.000><c> this</c><00:01:45.000><c> was</c><00:01:45.150><c> done</c><00:01:45.360><c> to</c><00:01:45.390><c> ease</c>

00:01:45.590 --> 00:01:45.600 align:start position:0%
via carbon Lib this was done to ease
 

00:01:45.600 --> 00:01:47.720 align:start position:0%
via carbon Lib this was done to ease
porting<00:01:46.110><c> of</c><00:01:46.170><c> carbonized</c><00:01:46.680><c> apps</c><00:01:47.070><c> to</c><00:01:47.310><c> Mac</c><00:01:47.460><c> OS</c><00:01:47.490><c> 10</c>

00:01:47.720 --> 00:01:47.730 align:start position:0%
porting of carbonized apps to Mac OS 10
 

00:01:47.730 --> 00:01:49.850 align:start position:0%
porting of carbonized apps to Mac OS 10
and<00:01:48.300><c> to</c><00:01:48.930><c> bring</c><00:01:49.110><c> some</c><00:01:49.350><c> of</c><00:01:49.380><c> the</c><00:01:49.500><c> features</c><00:01:49.830><c> of</c>

00:01:49.850 --> 00:01:49.860 align:start position:0%
and to bring some of the features of
 

00:01:49.860 --> 00:01:52.460 align:start position:0%
and to bring some of the features of
core<00:01:50.220><c> foundation</c><00:01:50.880><c> to</c><00:01:51.120><c> the</c><00:01:51.660><c> libraries</c><00:01:52.230><c> and</c>

00:01:52.460 --> 00:01:52.470 align:start position:0%
core foundation to the libraries and
 

00:01:52.470 --> 00:01:56.000 align:start position:0%
core foundation to the libraries and
applications<00:01:53.280><c> on</c><00:01:53.550><c> 8</c><00:01:53.790><c> &amp;</c><00:01:53.970><c> 9</c><00:01:54.650><c> for</c><00:01:55.650><c> similar</c>

00:01:56.000 --> 00:01:56.010 align:start position:0%
applications on 8 &amp; 9 for similar
 

00:01:56.010 --> 00:01:57.740 align:start position:0%
applications on 8 &amp; 9 for similar
reasons<00:01:56.040><c> part</c><00:01:56.670><c> of</c><00:01:56.760><c> core</c><00:01:56.940><c> foundation</c><00:01:57.450><c> is</c><00:01:57.570><c> also</c>

00:01:57.740 --> 00:01:57.750 align:start position:0%
reasons part of core foundation is also
 

00:01:57.750 --> 00:02:01.240 align:start position:0%
reasons part of core foundation is also
available<00:01:58.080><c> from</c><00:01:58.650><c> Darwin</c><00:01:59.160><c> or</c><00:01:59.430><c> within</c><00:01:59.820><c> Darwin</c>

00:02:01.240 --> 00:02:01.250 align:start position:0%
available from Darwin or within Darwin
 

00:02:01.250 --> 00:02:05.450 align:start position:0%
available from Darwin or within Darwin
the<00:02:02.250><c> core</c><00:02:02.430><c> foundation</c><00:02:02.880><c> API</c><00:02:03.180><c> SRC</c><00:02:04.050><c> api's</c><00:02:04.740><c> on</c><00:02:05.220><c> Mac</c>

00:02:05.450 --> 00:02:05.460 align:start position:0%
the core foundation API SRC api's on Mac
 

00:02:05.460 --> 00:02:08.750 align:start position:0%
the core foundation API SRC api's on Mac
OS<00:02:05.760><c> 10</c><00:02:06.350><c> through</c><00:02:07.350><c> carbon</c><00:02:07.650><c> lib</c><00:02:07.979><c> they</c><00:02:08.490><c> are</c><00:02:08.610><c> also</c>

00:02:08.750 --> 00:02:08.760 align:start position:0%
OS 10 through carbon lib they are also
 

00:02:08.760 --> 00:02:10.460 align:start position:0%
OS 10 through carbon lib they are also
available<00:02:09.090><c> in</c><00:02:09.420><c> the</c><00:02:09.479><c> language</c><00:02:09.810><c> is</c><00:02:09.960><c> supported</c>

00:02:10.460 --> 00:02:10.470 align:start position:0%
available in the language is supported
 

00:02:10.470 --> 00:02:11.570 align:start position:0%
available in the language is supported
by<00:02:10.590><c> Carbon</c><00:02:11.130><c> lib</c>

00:02:11.570 --> 00:02:11.580 align:start position:0%
by Carbon lib
 

00:02:11.580 --> 00:02:14.090 align:start position:0%
by Carbon lib
there<00:02:12.210><c> are</c><00:02:12.300><c> also</c><00:02:12.390><c> C++</c><00:02:13.230><c> wrappers</c><00:02:13.680><c> for</c><00:02:13.860><c> core</c>

00:02:14.090 --> 00:02:14.100 align:start position:0%
there are also C++ wrappers for core
 

00:02:14.100 --> 00:02:17.180 align:start position:0%
there are also C++ wrappers for core
foundation<00:02:14.760><c> in</c><00:02:14.910><c> Apple's</c><00:02:15.660><c> C++</c><00:02:16.410><c> frameworks</c><00:02:16.980><c> for</c>

00:02:17.180 --> 00:02:17.190 align:start position:0%
foundation in Apple's C++ frameworks for
 

00:02:17.190 --> 00:02:22.360 align:start position:0%
foundation in Apple's C++ frameworks for
Mac<00:02:17.370><c> OS</c><00:02:17.640><c> 10</c><00:02:19.310><c> finally</c><00:02:20.310><c> I'll</c><00:02:20.790><c> briefly</c><00:02:21.120><c> note</c><00:02:21.420><c> that</c>

00:02:22.360 --> 00:02:22.370 align:start position:0%
Mac OS 10 finally I'll briefly note that
 

00:02:22.370 --> 00:02:25.160 align:start position:0%
Mac OS 10 finally I'll briefly note that
core<00:02:23.370><c> foundation</c><00:02:23.850><c> is</c><00:02:23.970><c> often</c><00:02:24.390><c> simply</c><00:02:24.750><c> just</c>

00:02:25.160 --> 00:02:25.170 align:start position:0%
core foundation is often simply just
 

00:02:25.170 --> 00:02:28.610 align:start position:0%
core foundation is often simply just
called<00:02:25.410><c> CF</c><00:02:26.250><c> and</c><00:02:26.610><c> I'll</c><00:02:27.600><c> probably</c><00:02:28.170><c> slip</c><00:02:28.440><c> up</c>

00:02:28.610 --> 00:02:28.620 align:start position:0%
called CF and I'll probably slip up
 

00:02:28.620 --> 00:02:30.229 align:start position:0%
called CF and I'll probably slip up
during<00:02:29.100><c> my</c><00:02:29.190><c> talk</c><00:02:29.489><c> and</c><00:02:29.790><c> use</c><00:02:29.880><c> that</c><00:02:30.030><c> abbreviation</c>

00:02:30.229 --> 00:02:30.239 align:start position:0%
during my talk and use that abbreviation
 

00:02:30.239 --> 00:02:32.720 align:start position:0%
during my talk and use that abbreviation
myself<00:02:31.170><c> so</c><00:02:31.530><c> it's</c><00:02:32.010><c> good</c><00:02:32.250><c> for</c><00:02:32.370><c> you</c><00:02:32.459><c> to</c><00:02:32.580><c> know</c>

00:02:32.720 --> 00:02:32.730 align:start position:0%
myself so it's good for you to know
 

00:02:32.730 --> 00:02:36.890 align:start position:0%
myself so it's good for you to know
right<00:02:33.300><c> off</c><00:02:33.720><c> the</c><00:02:33.840><c> bat</c><00:02:34.610><c> now</c><00:02:35.610><c> why</c><00:02:36.360><c> did</c><00:02:36.570><c> I</c><00:02:36.660><c> call</c>

00:02:36.890 --> 00:02:36.900 align:start position:0%
right off the bat now why did I call
 

00:02:36.900 --> 00:02:40.960 align:start position:0%
right off the bat now why did I call
core<00:02:37.260><c> foundation</c><00:02:37.980><c> a</c><00:02:38.160><c> low-level</c><00:02:38.870><c> framework</c>

00:02:40.960 --> 00:02:40.970 align:start position:0%
core foundation a low-level framework
 

00:02:40.970 --> 00:02:43.790 align:start position:0%
core foundation a low-level framework
well<00:02:41.970><c> partly</c><00:02:42.630><c> that</c><00:02:42.870><c> is</c><00:02:42.959><c> due</c><00:02:43.140><c> to</c><00:02:43.320><c> where</c><00:02:43.530><c> it</c><00:02:43.620><c> sits</c>

00:02:43.790 --> 00:02:43.800 align:start position:0%
well partly that is due to where it sits
 

00:02:43.800 --> 00:02:45.590 align:start position:0%
well partly that is due to where it sits
in<00:02:43.950><c> the</c><00:02:44.040><c> overall</c><00:02:44.370><c> organizational</c><00:02:45.150><c> structure</c>

00:02:45.590 --> 00:02:45.600 align:start position:0%
in the overall organizational structure
 

00:02:45.600 --> 00:02:48.770 align:start position:0%
in the overall organizational structure
of<00:02:45.720><c> Mac</c><00:02:46.200><c> OS</c><00:02:46.380><c> 10</c><00:02:47.209><c> here</c><00:02:48.209><c> we</c><00:02:48.330><c> see</c><00:02:48.510><c> the</c><00:02:48.630><c> usual</c>

00:02:48.770 --> 00:02:48.780 align:start position:0%
of Mac OS 10 here we see the usual
 

00:02:48.780 --> 00:02:51.020 align:start position:0%
of Mac OS 10 here we see the usual
simplified<00:02:49.650><c> diagram</c><00:02:49.890><c> of</c><00:02:50.519><c> the</c><00:02:50.640><c> structure</c><00:02:51.000><c> of</c>

00:02:51.020 --> 00:02:51.030 align:start position:0%
simplified diagram of the structure of
 

00:02:51.030 --> 00:02:55.190 align:start position:0%
simplified diagram of the structure of
the<00:02:51.120><c> system</c><00:02:51.330><c> frameworks</c><00:02:51.900><c> on</c><00:02:52.110><c> Mac</c><00:02:52.440><c> OS</c><00:02:52.680><c> 10</c><00:02:54.200><c> core</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
the system frameworks on Mac OS 10 core
 

00:02:55.200 --> 00:02:58.040 align:start position:0%
the system frameworks on Mac OS 10 core
foundation<00:02:56.030><c> slips</c><00:02:57.030><c> in</c><00:02:57.209><c> as</c><00:02:57.330><c> part</c><00:02:57.630><c> of</c><00:02:57.780><c> the</c><00:02:57.870><c> core</c>

00:02:58.040 --> 00:02:58.050 align:start position:0%
foundation slips in as part of the core
 

00:02:58.050 --> 00:03:01.420 align:start position:0%
foundation slips in as part of the core
services<00:02:58.080><c> umbrella</c><00:02:58.980><c> frameworks</c><00:03:00.140><c> framework</c>

00:03:01.420 --> 00:03:01.430 align:start position:0%
services umbrella frameworks framework
 

00:03:01.430 --> 00:03:04.070 align:start position:0%
services umbrella frameworks framework
but<00:03:02.430><c> I</c><00:03:02.489><c> also</c><00:03:02.700><c> called</c><00:03:03.090><c> core</c><00:03:03.390><c> foundation</c><00:03:03.959><c> a</c>

00:03:04.070 --> 00:03:04.080 align:start position:0%
but I also called core foundation a
 

00:03:04.080 --> 00:03:06.860 align:start position:0%
but I also called core foundation a
low-level<00:03:04.670><c> framework</c><00:03:05.670><c> because</c><00:03:06.390><c> it</c><00:03:06.690><c> deals</c>

00:03:06.860 --> 00:03:06.870 align:start position:0%
low-level framework because it deals
 

00:03:06.870 --> 00:03:08.960 align:start position:0%
low-level framework because it deals
with<00:03:07.050><c> some</c><00:03:07.380><c> of</c><00:03:07.410><c> the</c><00:03:07.830><c> most</c><00:03:08.070><c> basic</c><00:03:08.310><c> building</c>

00:03:08.960 --> 00:03:08.970 align:start position:0%
with some of the most basic building
 

00:03:08.970 --> 00:03:11.690 align:start position:0%
with some of the most basic building
blocks<00:03:09.269><c> of</c><00:03:09.540><c> your</c><00:03:10.400><c> applications</c><00:03:11.400><c> and</c><00:03:11.640><c> your</c>

00:03:11.690 --> 00:03:11.700 align:start position:0%
blocks of your applications and your
 

00:03:11.700 --> 00:03:14.780 align:start position:0%
blocks of your applications and your
frameworks<00:03:12.920><c> these</c><00:03:13.920><c> are</c><00:03:14.070><c> the</c><00:03:14.160><c> data</c><00:03:14.340><c> structures</c>

00:03:14.780 --> 00:03:14.790 align:start position:0%
frameworks these are the data structures
 

00:03:14.790 --> 00:03:16.610 align:start position:0%
frameworks these are the data structures
that<00:03:14.970><c> you</c><00:03:15.060><c> use</c><00:03:15.269><c> to</c><00:03:15.510><c> store</c><00:03:15.780><c> information</c><00:03:16.080><c> in</c>

00:03:16.610 --> 00:03:16.620 align:start position:0%
that you use to store information in
 

00:03:16.620 --> 00:03:19.880 align:start position:0%
that you use to store information in
your<00:03:16.769><c> application</c><00:03:18.410><c> core</c><00:03:19.410><c> foundation</c>

00:03:19.880 --> 00:03:19.890 align:start position:0%
your application core foundation
 

00:03:19.890 --> 00:03:21.890 align:start position:0%
your application core foundation
provides<00:03:20.220><c> several</c><00:03:20.489><c> basic</c><00:03:21.150><c> opaque</c><00:03:21.570><c> data</c>

00:03:21.890 --> 00:03:21.900 align:start position:0%
provides several basic opaque data
 

00:03:21.900 --> 00:03:23.750 align:start position:0%
provides several basic opaque data
structures<00:03:22.350><c> that</c><00:03:22.500><c> you</c><00:03:22.560><c> can</c><00:03:22.800><c> use</c><00:03:23.010><c> rather</c><00:03:23.550><c> than</c>

00:03:23.750 --> 00:03:23.760 align:start position:0%
structures that you can use rather than
 

00:03:23.760 --> 00:03:26.840 align:start position:0%
structures that you can use rather than
having<00:03:24.120><c> to</c><00:03:24.209><c> write</c><00:03:24.330><c> your</c><00:03:24.540><c> own</c><00:03:24.570><c> and</c><00:03:25.850><c> core</c>

00:03:26.840 --> 00:03:26.850 align:start position:0%
having to write your own and core
 

00:03:26.850 --> 00:03:28.280 align:start position:0%
having to write your own and core
foundation<00:03:27.330><c> also</c><00:03:27.630><c> provides</c><00:03:27.990><c> several</c>

00:03:28.280 --> 00:03:28.290 align:start position:0%
foundation also provides several
 

00:03:28.290 --> 00:03:32.850 align:start position:0%
foundation also provides several
higher-level<00:03:29.040><c> application</c><00:03:29.940><c> services</c>

00:03:32.850 --> 00:03:32.860 align:start position:0%
 
 

00:03:32.860 --> 00:03:34.710 align:start position:0%
 
which<00:03:33.250><c> are</c><00:03:33.400><c> built</c><00:03:33.610><c> upon</c><00:03:33.730><c> the</c><00:03:34.120><c> basic</c><00:03:34.450><c> datatypes</c>

00:03:34.710 --> 00:03:34.720 align:start position:0%
which are built upon the basic datatypes
 

00:03:34.720 --> 00:03:38.790 align:start position:0%
which are built upon the basic datatypes
and<00:03:35.290><c> again</c><00:03:36.240><c> Apple</c><00:03:37.240><c> system</c><00:03:37.540><c> applications</c><00:03:38.500><c> and</c>

00:03:38.790 --> 00:03:38.800 align:start position:0%
and again Apple system applications and
 

00:03:38.800 --> 00:03:42.330 align:start position:0%
and again Apple system applications and
system<00:03:39.430><c> frameworks</c><00:03:39.880><c> within</c><00:03:40.330><c> Mac</c><00:03:41.140><c> OS</c><00:03:41.380><c> 10</c><00:03:41.500><c> use</c>

00:03:42.330 --> 00:03:42.340 align:start position:0%
system frameworks within Mac OS 10 use
 

00:03:42.340 --> 00:03:46.290 align:start position:0%
system frameworks within Mac OS 10 use
these<00:03:42.580><c> facilities</c><00:03:43.180><c> quite</c><00:03:43.780><c> extensively</c><00:03:45.300><c> one</c>

00:03:46.290 --> 00:03:46.300 align:start position:0%
these facilities quite extensively one
 

00:03:46.300 --> 00:03:48.450 align:start position:0%
these facilities quite extensively one
of<00:03:46.390><c> the</c><00:03:46.480><c> key</c><00:03:46.660><c> aspects</c><00:03:47.290><c> of</c><00:03:47.410><c> core</c><00:03:47.650><c> foundation</c><00:03:48.280><c> is</c>

00:03:48.450 --> 00:03:48.460 align:start position:0%
of the key aspects of core foundation is
 

00:03:48.460 --> 00:03:51.240 align:start position:0%
of the key aspects of core foundation is
that<00:03:48.670><c> it</c><00:03:48.790><c> does</c><00:03:48.940><c> not</c><00:03:48.970><c> provide</c><00:03:49.780><c> any</c><00:03:50.140><c> graphics</c><00:03:51.070><c> or</c>

00:03:51.240 --> 00:03:51.250 align:start position:0%
that it does not provide any graphics or
 

00:03:51.250 --> 00:03:54.240 align:start position:0%
that it does not provide any graphics or
media<00:03:51.970><c> related</c><00:03:52.270><c> features</c><00:03:53.100><c> in</c><00:03:54.100><c> the</c>

00:03:54.240 --> 00:03:54.250 align:start position:0%
media related features in the
 

00:03:54.250 --> 00:03:57.120 align:start position:0%
media related features in the
architecture<00:03:54.790><c> of</c><00:03:54.820><c> Mac</c><00:03:55.060><c> OS</c><00:03:55.090><c> 10</c><00:03:55.770><c> graphics</c><00:03:56.770><c> and</c>

00:03:57.120 --> 00:03:57.130 align:start position:0%
architecture of Mac OS 10 graphics and
 

00:03:57.130 --> 00:03:59.370 align:start position:0%
architecture of Mac OS 10 graphics and
fonts<00:03:57.370><c> and</c><00:03:58.030><c> sounds</c><00:03:58.660><c> and</c><00:03:58.870><c> those</c><00:03:59.050><c> sorts</c><00:03:59.320><c> of</c>

00:03:59.370 --> 00:03:59.380 align:start position:0%
fonts and sounds and those sorts of
 

00:03:59.380 --> 00:04:01.950 align:start position:0%
fonts and sounds and those sorts of
things<00:03:59.620><c> are</c><00:04:00.040><c> introduced</c><00:04:01.000><c> in</c><00:04:01.300><c> higher-level</c>

00:04:01.950 --> 00:04:01.960 align:start position:0%
things are introduced in higher-level
 

00:04:01.960 --> 00:04:03.810 align:start position:0%
things are introduced in higher-level
frameworks<00:04:02.560><c> frameworks</c><00:04:02.950><c> at</c><00:04:03.130><c> a</c><00:04:03.160><c> higher</c><00:04:03.370><c> level</c>

00:04:03.810 --> 00:04:03.820 align:start position:0%
frameworks frameworks at a higher level
 

00:04:03.820 --> 00:04:06.199 align:start position:0%
frameworks frameworks at a higher level
than<00:04:04.390><c> core</c><00:04:04.690><c> foundation</c><00:04:05.350><c> within</c><00:04:05.770><c> that</c>

00:04:06.199 --> 00:04:06.209 align:start position:0%
than core foundation within that
 

00:04:06.209 --> 00:04:14.280 align:start position:0%
than core foundation within that
architectural<00:04:07.410><c> diagram</c><00:04:12.180><c> so</c><00:04:13.180><c> let's</c><00:04:13.870><c> begin</c><00:04:13.990><c> by</c>

00:04:14.280 --> 00:04:14.290 align:start position:0%
architectural diagram so let's begin by
 

00:04:14.290 --> 00:04:15.690 align:start position:0%
architectural diagram so let's begin by
looking<00:04:14.440><c> at</c><00:04:14.650><c> some</c><00:04:14.709><c> of</c><00:04:14.950><c> those</c><00:04:15.010><c> basic</c><00:04:15.490><c> data</c>

00:04:15.690 --> 00:04:15.700 align:start position:0%
looking at some of those basic data
 

00:04:15.700 --> 00:04:21.000 align:start position:0%
looking at some of those basic data
types<00:04:16.799><c> we</c><00:04:17.799><c> start</c><00:04:18.100><c> with</c><00:04:18.250><c> CF</c><00:04:18.489><c> string</c><00:04:18.820><c> a</c><00:04:20.010><c> data</c>

00:04:21.000 --> 00:04:21.010 align:start position:0%
types we start with CF string a data
 

00:04:21.010 --> 00:04:23.750 align:start position:0%
types we start with CF string a data
type<00:04:21.390><c> representing</c><00:04:22.390><c> strings</c><00:04:22.780><c> of</c><00:04:22.960><c> characters</c>

00:04:23.750 --> 00:04:23.760 align:start position:0%
type representing strings of characters
 

00:04:23.760 --> 00:04:26.790 align:start position:0%
type representing strings of characters
strings<00:04:24.760><c> tend</c><00:04:25.690><c> to</c><00:04:25.930><c> be</c><00:04:26.080><c> one</c><00:04:26.440><c> of</c><00:04:26.590><c> the</c><00:04:26.680><c> most</c>

00:04:26.790 --> 00:04:26.800 align:start position:0%
strings tend to be one of the most
 

00:04:26.800 --> 00:04:29.490 align:start position:0%
strings tend to be one of the most
common<00:04:27.760><c> data</c><00:04:27.910><c> structures</c><00:04:28.390><c> in</c><00:04:28.660><c> an</c><00:04:28.870><c> application</c>

00:04:29.490 --> 00:04:29.500 align:start position:0%
common data structures in an application
 

00:04:29.500 --> 00:04:32.880 align:start position:0%
common data structures in an application
and<00:04:29.710><c> in</c><00:04:30.669><c> Mac</c><00:04:31.060><c> OS</c><00:04:31.300><c> 10</c><00:04:31.330><c> CF</c><00:04:32.140><c> strings</c><00:04:32.560><c> are</c>

00:04:32.880 --> 00:04:32.890 align:start position:0%
and in Mac OS 10 CF strings are
 

00:04:32.890 --> 00:04:35.040 align:start position:0%
and in Mac OS 10 CF strings are
certainly<00:04:33.460><c> the</c><00:04:33.850><c> most</c><00:04:33.970><c> common</c><00:04:34.600><c> core</c>

00:04:35.040 --> 00:04:35.050 align:start position:0%
certainly the most common core
 

00:04:35.050 --> 00:04:38.790 align:start position:0%
certainly the most common core
foundation<00:04:35.710><c> data</c><00:04:35.890><c> type</c><00:04:36.190><c> in</c><00:04:36.430><c> use</c><00:04:37.800><c> conceptually</c>

00:04:38.790 --> 00:04:38.800 align:start position:0%
foundation data type in use conceptually
 

00:04:38.800 --> 00:04:40.830 align:start position:0%
foundation data type in use conceptually
a<00:04:38.830><c> CF</c><00:04:39.280><c> string</c><00:04:39.610><c> is</c><00:04:39.850><c> an</c><00:04:40.000><c> array</c><00:04:40.060><c> of</c><00:04:40.240><c> unicode</c>

00:04:40.830 --> 00:04:40.840 align:start position:0%
a CF string is an array of unicode
 

00:04:40.840 --> 00:04:44.159 align:start position:0%
a CF string is an array of unicode
characters<00:04:41.820><c> however</c><00:04:43.050><c> because</c><00:04:44.050><c> the</c>

00:04:44.159 --> 00:04:44.169 align:start position:0%
characters however because the
 

00:04:44.169 --> 00:04:46.200 align:start position:0%
characters however because the
implementation<00:04:44.440><c> is</c><00:04:45.130><c> hidden</c><00:04:45.160><c> behind</c><00:04:45.790><c> the</c>

00:04:46.200 --> 00:04:46.210 align:start position:0%
implementation is hidden behind the
 

00:04:46.210 --> 00:04:49.620 align:start position:0%
implementation is hidden behind the
opaque<00:04:46.630><c> CF</c><00:04:47.500><c> string</c><00:04:47.830><c> type</c><00:04:48.130><c> and</c><00:04:48.430><c> its</c><00:04:49.150><c> functions</c>

00:04:49.620 --> 00:04:49.630 align:start position:0%
opaque CF string type and its functions
 

00:04:49.630 --> 00:04:52.500 align:start position:0%
opaque CF string type and its functions
a<00:04:49.930><c> CF</c><00:04:50.860><c> string</c><00:04:51.160><c> can</c><00:04:51.340><c> be</c><00:04:51.370><c> smart</c><00:04:51.850><c> about</c><00:04:52.030><c> how</c><00:04:52.330><c> it</c>

00:04:52.500 --> 00:04:52.510 align:start position:0%
a CF string can be smart about how it
 

00:04:52.510 --> 00:04:55.290 align:start position:0%
a CF string can be smart about how it
stores<00:04:52.870><c> those</c><00:04:53.140><c> characters</c><00:04:53.740><c> and</c><00:04:54.040><c> use</c><00:04:54.820><c> 8-bit</c>

00:04:55.290 --> 00:04:55.300 align:start position:0%
stores those characters and use 8-bit
 

00:04:55.300 --> 00:04:57.870 align:start position:0%
stores those characters and use 8-bit
encodings<00:04:55.390><c> if</c><00:04:56.080><c> possible</c><00:04:56.590><c> or</c><00:04:56.890><c> do</c><00:04:57.280><c> other</c><00:04:57.460><c> tricks</c>

00:04:57.870 --> 00:04:57.880 align:start position:0%
encodings if possible or do other tricks
 

00:04:57.880 --> 00:05:02.330 align:start position:0%
encodings if possible or do other tricks
for<00:04:58.360><c> performance</c><00:04:59.820><c> this</c><00:05:00.820><c> takes</c><00:05:01.210><c> strings</c>

00:05:02.330 --> 00:05:02.340 align:start position:0%
for performance this takes strings
 

00:05:02.340 --> 00:05:05.880 align:start position:0%
for performance this takes strings
beyond<00:05:03.340><c> the</c><00:05:03.610><c> traditional</c><00:05:03.790><c> domain</c><00:05:04.510><c> of</c><00:05:04.750><c> say</c><00:05:05.470><c> a</c>

00:05:05.880 --> 00:05:05.890 align:start position:0%
beyond the traditional domain of say a
 

00:05:05.890 --> 00:05:11.250 align:start position:0%
beyond the traditional domain of say a
an<00:05:06.610><c> array</c><00:05:07.419><c> of</c><00:05:07.620><c> 255</c><00:05:08.620><c> characters</c><00:05:09.360><c> as</c><00:05:10.360><c> in</c><00:05:10.419><c> Pascal</c>

00:05:11.250 --> 00:05:11.260 align:start position:0%
an array of 255 characters as in Pascal
 

00:05:11.260 --> 00:05:15.990 align:start position:0%
an array of 255 characters as in Pascal
in<00:05:11.650><c> some</c><00:05:13.140><c> encoding</c><00:05:14.140><c> that</c><00:05:14.530><c> is</c><00:05:14.860><c> currently</c><00:05:15.850><c> in</c>

00:05:15.990 --> 00:05:16.000 align:start position:0%
in some encoding that is currently in
 

00:05:16.000 --> 00:05:19.290 align:start position:0%
in some encoding that is currently in
use<00:05:16.210><c> in</c><00:05:16.600><c> the</c><00:05:16.810><c> system</c><00:05:17.680><c> or</c><00:05:18.130><c> in</c><00:05:18.430><c> the</c><00:05:18.460><c> application</c>

00:05:19.290 --> 00:05:19.300 align:start position:0%
use in the system or in the application
 

00:05:19.300 --> 00:05:22.110 align:start position:0%
use in the system or in the application
by<00:05:20.229><c> packaging</c><00:05:20.979><c> up</c><00:05:21.100><c> the</c><00:05:21.220><c> characters</c><00:05:21.669><c> the</c>

00:05:22.110 --> 00:05:22.120 align:start position:0%
by packaging up the characters the
 

00:05:22.120 --> 00:05:26.150 align:start position:0%
by packaging up the characters the
length<00:05:22.390><c> and</c><00:05:22.690><c> a</c><00:05:23.410><c> fixed</c><00:05:23.800><c> encoding</c><00:05:24.310><c> in</c><00:05:24.460><c> one</c><00:05:25.330><c> type</c>

00:05:26.150 --> 00:05:26.160 align:start position:0%
length and a fixed encoding in one type
 

00:05:26.160 --> 00:05:29.070 align:start position:0%
length and a fixed encoding in one type
use<00:05:27.160><c> of</c><00:05:27.400><c> strings</c><00:05:27.850><c> in</c><00:05:28.180><c> an</c><00:05:28.270><c> application</c><00:05:28.960><c> is</c>

00:05:29.070 --> 00:05:29.080 align:start position:0%
use of strings in an application is
 

00:05:29.080 --> 00:05:31.620 align:start position:0%
use of strings in an application is
simplified<00:05:29.650><c> and</c><00:05:29.979><c> this</c><00:05:30.940><c> makes</c><00:05:31.180><c> things</c><00:05:31.330><c> like</c>

00:05:31.620 --> 00:05:31.630 align:start position:0%
simplified and this makes things like
 

00:05:31.630 --> 00:05:35.370 align:start position:0%
simplified and this makes things like
internationalization<00:05:32.620><c> easier</c><00:05:33.990><c> plus</c><00:05:34.990><c> by</c>

00:05:35.370 --> 00:05:35.380 align:start position:0%
internationalization easier plus by
 

00:05:35.380 --> 00:05:37.860 align:start position:0%
internationalization easier plus by
making<00:05:35.950><c> the</c><00:05:36.040><c> structure</c><00:05:36.370><c> and</c><00:05:36.729><c> nature</c><00:05:37.510><c> of</c><00:05:37.660><c> a</c>

00:05:37.860 --> 00:05:37.870 align:start position:0%
making the structure and nature of a
 

00:05:37.870 --> 00:05:40.680 align:start position:0%
making the structure and nature of a
string<00:05:38.169><c> more</c><00:05:38.440><c> predictable</c><00:05:39.539><c> passing</c><00:05:40.539><c> and</c>

00:05:40.680 --> 00:05:40.690 align:start position:0%
string more predictable passing and
 

00:05:40.690 --> 00:05:42.540 align:start position:0%
string more predictable passing and
sharing<00:05:41.140><c> strings</c><00:05:41.530><c> among</c><00:05:41.860><c> different</c><00:05:42.220><c> parts</c><00:05:42.490><c> of</c>

00:05:42.540 --> 00:05:42.550 align:start position:0%
sharing strings among different parts of
 

00:05:42.550 --> 00:05:43.280 align:start position:0%
sharing strings among different parts of
an<00:05:42.669><c> application</c>

00:05:43.280 --> 00:05:43.290 align:start position:0%
an application
 

00:05:43.290 --> 00:05:49.010 align:start position:0%
an application
and<00:05:43.730><c> frameworks</c><00:05:44.730><c> is</c><00:05:46.340><c> made</c><00:05:47.340><c> much</c><00:05:47.520><c> simpler</c><00:05:48.030><c> CF</c>

00:05:49.010 --> 00:05:49.020 align:start position:0%
and frameworks is made much simpler CF
 

00:05:49.020 --> 00:05:54.050 align:start position:0%
and frameworks is made much simpler CF
string<00:05:49.350><c> has</c><00:05:49.560><c> become</c><00:05:49.890><c> the</c><00:05:50.280><c> way</c><00:05:50.640><c> to</c><00:05:51.540><c> pass</c><00:05:53.060><c> string</c>

00:05:54.050 --> 00:05:54.060 align:start position:0%
string has become the way to pass string
 

00:05:54.060 --> 00:05:57.980 align:start position:0%
string has become the way to pass string
data<00:05:54.390><c> between</c><00:05:56.180><c> library</c><00:05:57.180><c> api's</c><00:05:57.600><c> framework</c>

00:05:57.980 --> 00:05:57.990 align:start position:0%
data between library api's framework
 

00:05:57.990 --> 00:06:01.210 align:start position:0%
data between library api's framework
api's<00:05:58.500><c> and</c><00:05:58.950><c> applications</c><00:05:59.850><c> in</c><00:06:00.120><c> Mac</c><00:06:00.330><c> OS</c><00:06:00.570><c> 10</c><00:06:00.750><c> and</c>

00:06:01.210 --> 00:06:01.220 align:start position:0%
api's and applications in Mac OS 10 and
 

00:06:01.220 --> 00:06:05.120 align:start position:0%
api's and applications in Mac OS 10 and
it<00:06:02.220><c> is</c><00:06:02.610><c> primarily</c><00:06:03.480><c> a</c><00:06:03.990><c> primary</c><00:06:04.590><c> way</c><00:06:04.830><c> in</c><00:06:05.100><c> which</c>

00:06:05.120 --> 00:06:05.130 align:start position:0%
it is primarily a primary way in which
 

00:06:05.130 --> 00:06:08.150 align:start position:0%
it is primarily a primary way in which
strings<00:06:06.120><c> are</c><00:06:06.420><c> just</c><00:06:06.840><c> simply</c><00:06:07.080><c> stored</c><00:06:07.530><c> within</c><00:06:07.890><c> an</c>

00:06:08.150 --> 00:06:08.160 align:start position:0%
strings are just simply stored within an
 

00:06:08.160 --> 00:06:12.290 align:start position:0%
strings are just simply stored within an
application<00:06:08.760><c> as</c><00:06:08.880><c> well</c><00:06:10.220><c> and</c><00:06:11.220><c> as</c><00:06:11.490><c> new</c><00:06:11.730><c> api's</c><00:06:12.090><c> are</c>

00:06:12.290 --> 00:06:12.300 align:start position:0%
application as well and as new api's are
 

00:06:12.300 --> 00:06:14.600 align:start position:0%
application as well and as new api's are
introduced<00:06:12.810><c> they</c><00:06:13.620><c> are</c><00:06:13.800><c> going</c><00:06:13.980><c> to</c><00:06:14.070><c> use</c><00:06:14.250><c> CF</c>

00:06:14.600 --> 00:06:14.610 align:start position:0%
introduced they are going to use CF
 

00:06:14.610 --> 00:06:17.060 align:start position:0%
introduced they are going to use CF
strings<00:06:15.030><c> as</c><00:06:15.840><c> their</c><00:06:16.200><c> parameters</c><00:06:16.650><c> and</c><00:06:16.770><c> return</c>

00:06:17.060 --> 00:06:17.070 align:start position:0%
strings as their parameters and return
 

00:06:17.070 --> 00:06:19.660 align:start position:0%
strings as their parameters and return
values<00:06:17.490><c> as</c><00:06:17.670><c> well</c>

00:06:19.660 --> 00:06:19.670 align:start position:0%
values as well
 

00:06:19.670 --> 00:06:22.970 align:start position:0%
values as well
now<00:06:20.840><c> CF</c><00:06:21.840><c> string</c><00:06:22.170><c> is</c><00:06:22.290><c> an</c><00:06:22.410><c> abstract</c><00:06:22.830><c> data</c>

00:06:22.970 --> 00:06:22.980 align:start position:0%
now CF string is an abstract data
 

00:06:22.980 --> 00:06:25.880 align:start position:0%
now CF string is an abstract data
structure<00:06:23.460><c> so</c><00:06:23.700><c> in</c><00:06:23.940><c> addition</c><00:06:24.180><c> to</c><00:06:24.540><c> the</c><00:06:25.500><c> opaque</c>

00:06:25.880 --> 00:06:25.890 align:start position:0%
structure so in addition to the opaque
 

00:06:25.890 --> 00:06:28.460 align:start position:0%
structure so in addition to the opaque
data<00:06:26.190><c> type</c><00:06:26.460><c> there</c><00:06:27.030><c> are</c><00:06:27.180><c> of</c><00:06:27.270><c> course</c><00:06:27.330><c> a</c><00:06:27.930><c> bunch</c><00:06:28.320><c> of</c>

00:06:28.460 --> 00:06:28.470 align:start position:0%
data type there are of course a bunch of
 

00:06:28.470 --> 00:06:30.530 align:start position:0%
data type there are of course a bunch of
functions<00:06:28.890><c> a</c><00:06:28.980><c> bunch</c><00:06:29.160><c> of</c><00:06:29.250><c> operations</c><00:06:29.760><c> on</c><00:06:30.180><c> CF</c>

00:06:30.530 --> 00:06:30.540 align:start position:0%
functions a bunch of operations on CF
 

00:06:30.540 --> 00:06:33.860 align:start position:0%
functions a bunch of operations on CF
strings<00:06:31.550><c> first</c><00:06:32.550><c> of</c><00:06:32.700><c> all</c><00:06:32.850><c> there</c><00:06:33.300><c> are</c><00:06:33.330><c> many</c><00:06:33.600><c> ways</c>

00:06:33.860 --> 00:06:33.870 align:start position:0%
strings first of all there are many ways
 

00:06:33.870 --> 00:06:36.140 align:start position:0%
strings first of all there are many ways
to<00:06:34.050><c> create</c><00:06:34.320><c> a</c><00:06:34.350><c> CF</c><00:06:34.680><c> string</c><00:06:35.040><c> you</c><00:06:35.790><c> can</c><00:06:35.850><c> create</c>

00:06:36.140 --> 00:06:36.150 align:start position:0%
to create a CF string you can create
 

00:06:36.150 --> 00:06:38.420 align:start position:0%
to create a CF string you can create
them<00:06:36.330><c> from</c><00:06:36.420><c> a</c><00:06:36.570><c> pascal</c><00:06:37.140><c> string</c><00:06:37.530><c> from</c><00:06:38.070><c> a</c><00:06:38.220><c> c</c>

00:06:38.420 --> 00:06:38.430 align:start position:0%
them from a pascal string from a c
 

00:06:38.430 --> 00:06:41.630 align:start position:0%
them from a pascal string from a c
string<00:06:38.820><c> you</c><00:06:39.540><c> can</c><00:06:39.570><c> create</c><00:06:39.930><c> them</c><00:06:40.110><c> from</c><00:06:40.400><c> an</c><00:06:41.400><c> array</c>

00:06:41.630 --> 00:06:41.640 align:start position:0%
string you can create them from an array
 

00:06:41.640 --> 00:06:45.230 align:start position:0%
string you can create them from an array
of<00:06:41.670><c> bytes</c><00:06:42.000><c> and</c><00:06:42.390><c> an</c><00:06:42.750><c> encoding</c><00:06:43.340><c> you</c><00:06:44.340><c> can</c><00:06:44.850><c> also</c>

00:06:45.230 --> 00:06:45.240 align:start position:0%
of bytes and an encoding you can also
 

00:06:45.240 --> 00:06:49.880 align:start position:0%
of bytes and an encoding you can also
create<00:06:45.720><c> them</c><00:06:46.020><c> from</c><00:06:47.120><c> other</c><00:06:48.120><c> data</c><00:06:48.990><c> if</c><00:06:49.350><c> you</c><00:06:49.710><c> will</c>

00:06:49.880 --> 00:06:49.890 align:start position:0%
create them from other data if you will
 

00:06:49.890 --> 00:06:52.180 align:start position:0%
create them from other data if you will
like<00:06:50.130><c> int</c><00:06:50.460><c> sand</c><00:06:50.730><c> and</c><00:06:50.880><c> what</c><00:06:51.210><c> have</c><00:06:51.360><c> you</c><00:06:51.390><c> using</c>

00:06:52.180 --> 00:06:52.190 align:start position:0%
like int sand and what have you using
 

00:06:52.190 --> 00:06:55.100 align:start position:0%
like int sand and what have you using
formatting<00:06:53.210><c> functionality</c><00:06:54.210><c> similar</c><00:06:54.420><c> similar</c>

00:06:55.100 --> 00:06:55.110 align:start position:0%
formatting functionality similar similar
 

00:06:55.110 --> 00:06:59.990 align:start position:0%
formatting functionality similar similar
to<00:06:55.350><c> the</c><00:06:55.770><c> c</c><00:06:56.010><c> languages</c><00:06:56.550><c> printf</c><00:06:57.090><c> function</c><00:06:59.000><c> there</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
to the c languages printf function there
 

00:07:00.000 --> 00:07:01.610 align:start position:0%
to the c languages printf function there
are<00:07:00.030><c> also</c><00:07:00.180><c> several</c><00:07:00.570><c> ways</c><00:07:00.840><c> to</c><00:07:00.870><c> extract</c><00:07:01.470><c> the</c>

00:07:01.610 --> 00:07:01.620 align:start position:0%
are also several ways to extract the
 

00:07:01.620 --> 00:07:04.880 align:start position:0%
are also several ways to extract the
characters<00:07:02.070><c> of</c><00:07:02.310><c> a</c><00:07:02.370><c> string</c><00:07:02.400><c> and</c><00:07:03.410><c> do</c><00:07:04.410><c> encoding</c>

00:07:04.880 --> 00:07:04.890 align:start position:0%
characters of a string and do encoding
 

00:07:04.890 --> 00:07:10.190 align:start position:0%
characters of a string and do encoding
conversions<00:07:05.400><c> for</c><00:07:05.970><c> example</c><00:07:06.450><c> on</c><00:07:07.670><c> byte</c><00:07:08.670><c> data</c><00:07:09.200><c> and</c>

00:07:10.190 --> 00:07:10.200 align:start position:0%
conversions for example on byte data and
 

00:07:10.200 --> 00:07:13.370 align:start position:0%
conversions for example on byte data and
converting<00:07:11.010><c> them</c><00:07:11.130><c> to</c><00:07:11.340><c> and</c><00:07:11.520><c> from</c><00:07:11.550><c> strings</c><00:07:12.380><c> this</c>

00:07:13.370 --> 00:07:13.380 align:start position:0%
converting them to and from strings this
 

00:07:13.380 --> 00:07:15.890 align:start position:0%
converting them to and from strings this
is<00:07:13.530><c> very</c><00:07:13.710><c> handy</c><00:07:13.920><c> when</c><00:07:14.610><c> you're</c><00:07:15.060><c> getting</c>

00:07:15.890 --> 00:07:15.900 align:start position:0%
is very handy when you're getting
 

00:07:15.900 --> 00:07:17.930 align:start position:0%
is very handy when you're getting
information<00:07:16.170><c> off</c><00:07:16.620><c> the</c><00:07:16.650><c> internet</c><00:07:17.160><c> for</c><00:07:17.400><c> example</c>

00:07:17.930 --> 00:07:17.940 align:start position:0%
information off the internet for example
 

00:07:17.940 --> 00:07:21.400 align:start position:0%
information off the internet for example
and<00:07:18.210><c> need</c><00:07:18.420><c> to</c><00:07:18.540><c> convert</c><00:07:18.810><c> that</c><00:07:19.080><c> win</c><00:07:19.920><c> latin</c><00:07:20.340><c> one</c>

00:07:21.400 --> 00:07:21.410 align:start position:0%
and need to convert that win latin one
 

00:07:21.410 --> 00:07:25.400 align:start position:0%
and need to convert that win latin one
HTML<00:07:22.410><c> page</c><00:07:22.710><c> into</c><00:07:23.900><c> something</c><00:07:24.900><c> you</c><00:07:25.050><c> can</c><00:07:25.080><c> more</c>

00:07:25.400 --> 00:07:25.410 align:start position:0%
HTML page into something you can more
 

00:07:25.410 --> 00:07:28.880 align:start position:0%
HTML page into something you can more
directly<00:07:25.620><c> use</c><00:07:26.660><c> there</c><00:07:27.660><c> are</c><00:07:27.780><c> also</c><00:07:27.930><c> many</c><00:07:28.650><c> other</c>

00:07:28.880 --> 00:07:28.890 align:start position:0%
directly use there are also many other
 

00:07:28.890 --> 00:07:31.700 align:start position:0%
directly use there are also many other
common<00:07:29.490><c> and</c><00:07:29.730><c> useful</c><00:07:30.000><c> operations</c><00:07:30.840><c> I</c><00:07:31.140><c> give</c><00:07:31.500><c> two</c>

00:07:31.700 --> 00:07:31.710 align:start position:0%
common and useful operations I give two
 

00:07:31.710 --> 00:07:34.040 align:start position:0%
common and useful operations I give two
examples<00:07:31.740><c> here</c><00:07:32.580><c> of</c><00:07:32.760><c> a</c><00:07:33.030><c> pending</c><00:07:33.870><c> and</c>

00:07:34.040 --> 00:07:34.050 align:start position:0%
examples here of a pending and
 

00:07:34.050 --> 00:07:36.770 align:start position:0%
examples here of a pending and
concatenation<00:07:34.830><c> and</c><00:07:35.090><c> finding</c><00:07:36.090><c> type</c>

00:07:36.770 --> 00:07:36.780 align:start position:0%
concatenation and finding type
 

00:07:36.780 --> 00:07:40.300 align:start position:0%
concatenation and finding type
operations

00:07:40.300 --> 00:07:40.310 align:start position:0%
 
 

00:07:40.310 --> 00:07:41.650 align:start position:0%
 
in<00:07:40.580><c> addition</c><00:07:40.970><c> to</c><00:07:41.060><c> see</c><00:07:41.210><c> a</c><00:07:41.240><c> string</c>

00:07:41.650 --> 00:07:41.660 align:start position:0%
in addition to see a string
 

00:07:41.660 --> 00:07:43.330 align:start position:0%
in addition to see a string
corefoundation<00:07:42.080><c> provides</c><00:07:42.830><c> a</c><00:07:43.010><c> number</c><00:07:43.280><c> of</c>

00:07:43.330 --> 00:07:43.340 align:start position:0%
corefoundation provides a number of
 

00:07:43.340 --> 00:07:46.060 align:start position:0%
corefoundation provides a number of
other<00:07:43.550><c> basic</c><00:07:43.880><c> datatype</c><00:07:44.800><c> abstractions</c><00:07:45.800><c> and</c>

00:07:46.060 --> 00:07:46.070 align:start position:0%
other basic datatype abstractions and
 

00:07:46.070 --> 00:07:49.140 align:start position:0%
other basic datatype abstractions and
here<00:07:47.030><c> are</c><00:07:47.270><c> some</c><00:07:47.810><c> of</c><00:07:47.990><c> them</c><00:07:48.170><c> not</c><00:07:48.680><c> all</c><00:07:48.710><c> of</c><00:07:48.890><c> them</c>

00:07:49.140 --> 00:07:49.150 align:start position:0%
here are some of them not all of them
 

00:07:49.150 --> 00:07:51.820 align:start position:0%
here are some of them not all of them
these<00:07:50.150><c> are</c><00:07:50.360><c> sometimes</c><00:07:50.570><c> just</c><00:07:50.840><c> simple</c><00:07:51.470><c> wrapper</c>

00:07:51.820 --> 00:07:51.830 align:start position:0%
these are sometimes just simple wrapper
 

00:07:51.830 --> 00:07:54.610 align:start position:0%
these are sometimes just simple wrapper
objects<00:07:52.250><c> for</c><00:07:52.430><c> simple</c><00:07:52.700><c> data</c><00:07:52.880><c> types</c><00:07:53.620><c> for</c>

00:07:54.610 --> 00:07:54.620 align:start position:0%
objects for simple data types for
 

00:07:54.620 --> 00:07:57.130 align:start position:0%
objects for simple data types for
example<00:07:54.680><c> CF</c><00:07:55.340><c> boolean</c><00:07:55.930><c> represents</c><00:07:56.930><c> either</c>

00:07:57.130 --> 00:07:57.140 align:start position:0%
example CF boolean represents either
 

00:07:57.140 --> 00:08:00.610 align:start position:0%
example CF boolean represents either
true<00:07:57.710><c> or</c><00:07:57.740><c> false</c><00:07:58.010><c> and</c><00:07:58.910><c> that's</c><00:07:59.900><c> very</c>

00:08:00.610 --> 00:08:00.620 align:start position:0%
true or false and that's very
 

00:08:00.620 --> 00:08:03.550 align:start position:0%
true or false and that's very
straightforward<00:08:01.420><c> but</c><00:08:02.420><c> in</c><00:08:02.510><c> most</c><00:08:02.720><c> but</c><00:08:03.260><c> most</c><00:08:03.470><c> of</c>

00:08:03.550 --> 00:08:03.560 align:start position:0%
straightforward but in most but most of
 

00:08:03.560 --> 00:08:05.140 align:start position:0%
straightforward but in most but most of
the<00:08:03.620><c> time</c><00:08:03.830><c> these</c><00:08:04.190><c> data</c><00:08:04.490><c> structures</c><00:08:04.730><c> also</c>

00:08:05.140 --> 00:08:05.150 align:start position:0%
the time these data structures also
 

00:08:05.150 --> 00:08:08.140 align:start position:0%
the time these data structures also
provide<00:08:05.690><c> other</c><00:08:05.960><c> useful</c><00:08:06.380><c> operations</c><00:08:07.280><c> as</c><00:08:07.550><c> an</c>

00:08:08.140 --> 00:08:08.150 align:start position:0%
provide other useful operations as an
 

00:08:08.150 --> 00:08:10.720 align:start position:0%
provide other useful operations as an
example<00:08:08.830><c> there</c><00:08:09.830><c> are</c><00:08:09.860><c> a</c><00:08:10.010><c> few</c><00:08:10.220><c> types</c><00:08:10.460><c> to</c>

00:08:10.720 --> 00:08:10.730 align:start position:0%
example there are a few types to
 

00:08:10.730 --> 00:08:13.690 align:start position:0%
example there are a few types to
represent<00:08:11.210><c> dates</c><00:08:11.780><c> and</c><00:08:12.050><c> times</c><00:08:12.610><c> provided</c><00:08:13.610><c> by</c>

00:08:13.690 --> 00:08:13.700 align:start position:0%
represent dates and times provided by
 

00:08:13.700 --> 00:08:15.790 align:start position:0%
represent dates and times provided by
core<00:08:13.940><c> foundation</c><00:08:14.630><c> and</c><00:08:14.840><c> there</c><00:08:15.290><c> are</c><00:08:15.380><c> also</c><00:08:15.500><c> some</c>

00:08:15.790 --> 00:08:15.800 align:start position:0%
core foundation and there are also some
 

00:08:15.800 --> 00:08:17.770 align:start position:0%
core foundation and there are also some
operations<00:08:16.430><c> to</c><00:08:16.670><c> work</c><00:08:16.850><c> with</c><00:08:17.060><c> the</c><00:08:17.180><c> Gregorian</c>

00:08:17.770 --> 00:08:17.780 align:start position:0%
operations to work with the Gregorian
 

00:08:17.780 --> 00:08:19.810 align:start position:0%
operations to work with the Gregorian
calendar<00:08:18.370><c> representation</c><00:08:19.370><c> of</c><00:08:19.490><c> dates</c><00:08:19.700><c> you</c>

00:08:19.810 --> 00:08:19.820 align:start position:0%
calendar representation of dates you
 

00:08:19.820 --> 00:08:25.300 align:start position:0%
calendar representation of dates you
know<00:08:20.000><c> years</c><00:08:20.570><c> months</c><00:08:20.900><c> days</c><00:08:21.050><c> hours</c><00:08:21.790><c> etc</c><00:08:24.310><c> these</c>

00:08:25.300 --> 00:08:25.310 align:start position:0%
know years months days hours etc these
 

00:08:25.310 --> 00:08:27.610 align:start position:0%
know years months days hours etc these
functions<00:08:26.030><c> can</c><00:08:26.150><c> do</c><00:08:26.510><c> things</c><00:08:26.750><c> like</c><00:08:26.960><c> figure</c><00:08:27.560><c> out</c>

00:08:27.610 --> 00:08:27.620 align:start position:0%
functions can do things like figure out
 

00:08:27.620 --> 00:08:31.150 align:start position:0%
functions can do things like figure out
what<00:08:27.860><c> day</c><00:08:28.310><c> of</c><00:08:28.460><c> the</c><00:08:28.550><c> week</c><00:08:28.700><c> it</c><00:08:28.850><c> is</c><00:08:28.880><c> or</c><00:08:29.800><c> what</c><00:08:30.800><c> day</c>

00:08:31.150 --> 00:08:31.160 align:start position:0%
what day of the week it is or what day
 

00:08:31.160 --> 00:08:34.540 align:start position:0%
what day of the week it is or what day
what<00:08:32.120><c> the</c><00:08:32.240><c> date</c><00:08:32.450><c> will</c><00:08:32.660><c> be</c><00:08:32.690><c> say</c><00:08:33.200><c> 90</c><00:08:34.100><c> days</c><00:08:34.280><c> from</c>

00:08:34.540 --> 00:08:34.550 align:start position:0%
what the date will be say 90 days from
 

00:08:34.550 --> 00:08:37.650 align:start position:0%
what the date will be say 90 days from
now<00:08:34.730><c> and</c><00:08:35.680><c> those</c><00:08:36.680><c> are</c><00:08:36.830><c> just</c><00:08:36.920><c> just</c>

00:08:37.650 --> 00:08:37.660 align:start position:0%
now and those are just just
 

00:08:37.660 --> 00:08:40.510 align:start position:0%
now and those are just just
representative<00:08:38.660><c> examples</c><00:08:39.350><c> of</c><00:08:39.590><c> some</c><00:08:40.340><c> of</c><00:08:40.460><c> the</c>

00:08:40.510 --> 00:08:40.520 align:start position:0%
representative examples of some of the
 

00:08:40.520 --> 00:08:41.530 align:start position:0%
representative examples of some of the
functionalities

00:08:41.530 --> 00:08:41.540 align:start position:0%
functionalities
 

00:08:41.540 --> 00:08:44.380 align:start position:0%
functionalities
now<00:08:42.230><c> some</c><00:08:42.740><c> of</c><00:08:42.770><c> these</c><00:08:42.980><c> types</c><00:08:43.340><c> may</c><00:08:43.700><c> seem</c><00:08:43.940><c> to</c><00:08:44.210><c> be</c>

00:08:44.380 --> 00:08:44.390 align:start position:0%
now some of these types may seem to be
 

00:08:44.390 --> 00:08:47.530 align:start position:0%
now some of these types may seem to be
really<00:08:45.020><c> too</c><00:08:45.290><c> simple</c><00:08:45.740><c> to</c><00:08:45.860><c> be</c><00:08:45.890><c> useful</c><00:08:46.340><c> API</c><00:08:46.540><c> but</c>

00:08:47.530 --> 00:08:47.540 align:start position:0%
really too simple to be useful API but
 

00:08:47.540 --> 00:08:49.120 align:start position:0%
really too simple to be useful API but
they<00:08:47.630><c> sometimes</c><00:08:47.870><c> come</c><00:08:48.290><c> in</c><00:08:48.440><c> handy</c><00:08:48.860><c> when</c>

00:08:49.120 --> 00:08:49.130 align:start position:0%
they sometimes come in handy when
 

00:08:49.130 --> 00:08:52.030 align:start position:0%
they sometimes come in handy when
dealing<00:08:49.160><c> with</c><00:08:49.520><c> collections</c><00:08:50.000><c> and</c><00:08:50.800><c> as</c><00:08:51.800><c> we'll</c>

00:08:52.030 --> 00:08:52.040 align:start position:0%
dealing with collections and as we'll
 

00:08:52.040 --> 00:08:53.500 align:start position:0%
dealing with collections and as we'll
see<00:08:52.160><c> in</c><00:08:52.220><c> a</c><00:08:52.310><c> bit</c><00:08:52.340><c> many</c><00:08:52.760><c> of</c><00:08:52.850><c> these</c><00:08:52.940><c> are</c><00:08:53.150><c> central</c>

00:08:53.500 --> 00:08:53.510 align:start position:0%
see in a bit many of these are central
 

00:08:53.510 --> 00:08:55.450 align:start position:0%
see in a bit many of these are central
pieces<00:08:53.930><c> of</c><00:08:54.080><c> the</c><00:08:54.140><c> property</c><00:08:54.740><c> list</c><00:08:54.920><c> mechanism</c>

00:08:55.450 --> 00:08:55.460 align:start position:0%
pieces of the property list mechanism
 

00:08:55.460 --> 00:08:58.090 align:start position:0%
pieces of the property list mechanism
core<00:08:55.760><c> foundation</c><00:08:56.420><c> but</c><00:08:57.380><c> for</c><00:08:57.590><c> now</c><00:08:57.710><c> I'm</c><00:08:57.860><c> going</c><00:08:58.010><c> to</c>

00:08:58.090 --> 00:08:58.100 align:start position:0%
core foundation but for now I'm going to
 

00:08:58.100 --> 00:08:59.530 align:start position:0%
core foundation but for now I'm going to
talk<00:08:58.250><c> about</c><00:08:58.460><c> the</c><00:08:58.880><c> collection</c><00:08:59.330><c> data</c>

00:08:59.530 --> 00:08:59.540 align:start position:0%
talk about the collection data
 

00:08:59.540 --> 00:09:02.910 align:start position:0%
talk about the collection data
structures<00:09:00.080><c> in</c><00:09:00.440><c> C</c><00:09:00.770><c> F</c><00:09:00.920><c> core</c><00:09:01.850><c> Foundation</c><00:09:02.420><c> a</c>

00:09:02.910 --> 00:09:02.920 align:start position:0%
structures in C F core Foundation a
 

00:09:02.920 --> 00:09:05.170 align:start position:0%
structures in C F core Foundation a
collection<00:09:03.920><c> is</c><00:09:04.010><c> something</c><00:09:04.430><c> that</c><00:09:04.700><c> groups</c>

00:09:05.170 --> 00:09:05.180 align:start position:0%
collection is something that groups
 

00:09:05.180 --> 00:09:07.330 align:start position:0%
collection is something that groups
together<00:09:05.540><c> other</c><00:09:05.900><c> objects</c><00:09:06.650><c> and</c><00:09:06.800><c> it</c><00:09:06.950><c> generally</c>

00:09:07.330 --> 00:09:07.340 align:start position:0%
together other objects and it generally
 

00:09:07.340 --> 00:09:09.580 align:start position:0%
together other objects and it generally
does<00:09:07.520><c> not</c><00:09:07.550><c> matter</c><00:09:08.120><c> what</c><00:09:08.630><c> the</c><00:09:08.750><c> type</c><00:09:09.080><c> of</c><00:09:09.410><c> those</c>

00:09:09.580 --> 00:09:09.590 align:start position:0%
does not matter what the type of those
 

00:09:09.590 --> 00:09:13.990 align:start position:0%
does not matter what the type of those
other<00:09:09.830><c> objects</c><00:09:10.610><c> is</c><00:09:11.830><c> in</c><00:09:12.830><c> the</c><00:09:13.040><c> case</c><00:09:13.250><c> of</c><00:09:13.550><c> the</c><00:09:13.820><c> core</c>

00:09:13.990 --> 00:09:14.000 align:start position:0%
other objects is in the case of the core
 

00:09:14.000 --> 00:09:15.550 align:start position:0%
other objects is in the case of the core
foundation<00:09:14.120><c> collections</c><00:09:14.960><c> it</c><00:09:15.110><c> is</c><00:09:15.200><c> most</c>

00:09:15.550 --> 00:09:15.560 align:start position:0%
foundation collections it is most
 

00:09:15.560 --> 00:09:17.230 align:start position:0%
foundation collections it is most
convenient<00:09:16.040><c> to</c><00:09:16.250><c> store</c><00:09:16.520><c> other</c><00:09:16.850><c> core</c>

00:09:17.230 --> 00:09:17.240 align:start position:0%
convenient to store other core
 

00:09:17.240 --> 00:09:20.260 align:start position:0%
convenient to store other core
foundation<00:09:17.780><c> objects</c><00:09:18.970><c> however</c><00:09:19.970><c> the</c>

00:09:20.260 --> 00:09:20.270 align:start position:0%
foundation objects however the
 

00:09:20.270 --> 00:09:22.000 align:start position:0%
foundation objects however the
operations<00:09:20.810><c> of</c><00:09:20.900><c> the</c><00:09:20.990><c> collections</c><00:09:21.500><c> with</c>

00:09:22.000 --> 00:09:22.010 align:start position:0%
operations of the collections with
 

00:09:22.010 --> 00:09:24.130 align:start position:0%
operations of the collections with
respect<00:09:22.820><c> to</c><00:09:22.910><c> the</c><00:09:23.000><c> type</c><00:09:23.210><c> of</c><00:09:23.420><c> data</c><00:09:23.750><c> that</c><00:09:23.870><c> they</c>

00:09:24.130 --> 00:09:24.140 align:start position:0%
respect to the type of data that they
 

00:09:24.140 --> 00:09:26.830 align:start position:0%
respect to the type of data that they
can<00:09:24.320><c> hold</c><00:09:24.560><c> can</c><00:09:25.490><c> be</c><00:09:25.670><c> configured</c><00:09:25.970><c> with</c><00:09:26.150><c> callback</c>

00:09:26.830 --> 00:09:26.840 align:start position:0%
can hold can be configured with callback
 

00:09:26.840 --> 00:09:28.870 align:start position:0%
can hold can be configured with callback
functions<00:09:27.380><c> to</c><00:09:27.560><c> hold</c><00:09:27.770><c> any</c><00:09:28.070><c> pointer</c><00:09:28.640><c> size</c>

00:09:28.870 --> 00:09:28.880 align:start position:0%
functions to hold any pointer size
 

00:09:28.880 --> 00:09:32.890 align:start position:0%
functions to hold any pointer size
values<00:09:30.010><c> for</c><00:09:31.010><c> example</c><00:09:31.490><c> you</c><00:09:32.360><c> can</c><00:09:32.540><c> configure</c><00:09:32.780><c> a</c>

00:09:32.890 --> 00:09:32.900 align:start position:0%
values for example you can configure a
 

00:09:32.900 --> 00:09:35.860 align:start position:0%
values for example you can configure a
collection<00:09:33.410><c> to</c><00:09:33.500><c> hold</c><00:09:33.620><c> integers</c><00:09:34.510><c> the</c><00:09:35.510><c> callback</c>

00:09:35.860 --> 00:09:35.870 align:start position:0%
collection to hold integers the callback
 

00:09:35.870 --> 00:09:37.870 align:start position:0%
collection to hold integers the callback
functions<00:09:36.350><c> determine</c><00:09:36.920><c> what</c><00:09:37.340><c> happens</c><00:09:37.700><c> when</c>

00:09:37.870 --> 00:09:37.880 align:start position:0%
functions determine what happens when
 

00:09:37.880 --> 00:09:40.540 align:start position:0%
functions determine what happens when
custom<00:09:38.270><c> values</c><00:09:38.630><c> are</c><00:09:38.810><c> added</c><00:09:39.020><c> and</c><00:09:39.440><c> removed</c><00:09:39.550><c> and</c>

00:09:40.540 --> 00:09:40.550 align:start position:0%
custom values are added and removed and
 

00:09:40.550 --> 00:09:42.700 align:start position:0%
custom values are added and removed and
how<00:09:41.480><c> they</c><00:09:41.690><c> are</c><00:09:41.810><c> compared</c>

00:09:42.700 --> 00:09:42.710 align:start position:0%
how they are compared
 

00:09:42.710 --> 00:09:45.400 align:start position:0%
how they are compared
when<00:09:43.270><c> comparison</c><00:09:44.270><c> type</c><00:09:44.510><c> operations</c><00:09:45.200><c> are</c>

00:09:45.400 --> 00:09:45.410 align:start position:0%
when comparison type operations are
 

00:09:45.410 --> 00:09:49.210 align:start position:0%
when comparison type operations are
applied<00:09:46.000><c> to</c><00:09:47.000><c> a</c><00:09:47.030><c> collection</c>

00:09:49.210 --> 00:09:49.220 align:start position:0%
applied to a collection
 

00:09:49.220 --> 00:09:51.850 align:start position:0%
applied to a collection
the<00:09:49.760><c> usefulness</c><00:09:50.150><c> of</c><00:09:50.360><c> these</c><00:09:51.050><c> collections</c><00:09:51.650><c> is</c>

00:09:51.850 --> 00:09:51.860 align:start position:0%
the usefulness of these collections is
 

00:09:51.860 --> 00:09:53.680 align:start position:0%
the usefulness of these collections is
that<00:09:52.100><c> they</c><00:09:52.220><c> can</c><00:09:52.400><c> manage</c><00:09:52.730><c> the</c><00:09:52.880><c> memory</c><00:09:53.210><c> for</c><00:09:53.510><c> you</c>

00:09:53.680 --> 00:09:53.690 align:start position:0%
that they can manage the memory for you
 

00:09:53.690 --> 00:09:55.570 align:start position:0%
that they can manage the memory for you
and<00:09:53.930><c> I'm</c><00:09:54.320><c> going</c><00:09:54.470><c> to</c><00:09:54.530><c> begin</c><00:09:54.680><c> by</c><00:09:55.070><c> talking</c><00:09:55.130><c> about</c>

00:09:55.570 --> 00:09:55.580 align:start position:0%
and I'm going to begin by talking about
 

00:09:55.580 --> 00:09:58.000 align:start position:0%
and I'm going to begin by talking about
to<00:09:56.060><c> the</c><00:09:56.240><c> collections</c><00:09:56.720><c> CF</c><00:09:57.290><c> array</c><00:09:57.590><c> and</c><00:09:57.770><c> CF</c>

00:09:58.000 --> 00:09:58.010 align:start position:0%
to the collections CF array and CF
 

00:09:58.010 --> 00:10:00.940 align:start position:0%
to the collections CF array and CF
dictionary<00:09:58.930><c> first</c><00:09:59.930><c> we</c><00:10:00.080><c> have</c><00:10:00.230><c> the</c><00:10:00.380><c> CF</c><00:10:00.650><c> array</c>

00:10:00.940 --> 00:10:00.950 align:start position:0%
dictionary first we have the CF array
 

00:10:00.950 --> 00:10:04.030 align:start position:0%
dictionary first we have the CF array
like<00:10:01.940><c> an</c><00:10:02.060><c> array</c><00:10:02.330><c> in</c><00:10:02.600><c> the</c><00:10:02.720><c> C</c><00:10:02.930><c> language</c><00:10:03.110><c> the</c>

00:10:04.030 --> 00:10:04.040 align:start position:0%
like an array in the C language the
 

00:10:04.040 --> 00:10:06.970 align:start position:0%
like an array in the C language the
values<00:10:04.430><c> are</c><00:10:04.580><c> kept</c><00:10:04.880><c> in</c><00:10:05.150><c> order</c><00:10:05.750><c> and</c><00:10:05.980><c> are</c>

00:10:06.970 --> 00:10:06.980 align:start position:0%
values are kept in order and are
 

00:10:06.980 --> 00:10:09.190 align:start position:0%
values are kept in order and are
retrieved<00:10:07.460><c> out</c><00:10:07.760><c> of</c><00:10:07.910><c> the</c><00:10:07.970><c> CF</c><00:10:08.240><c> array</c><00:10:08.540><c> using</c><00:10:08.900><c> a</c>

00:10:09.190 --> 00:10:09.200 align:start position:0%
retrieved out of the CF array using a
 

00:10:09.200 --> 00:10:13.480 align:start position:0%
retrieved out of the CF array using a
zero-based<00:10:09.730><c> integer</c><00:10:10.730><c> index</c><00:10:11.950><c> the</c><00:10:12.950><c> diagram</c><00:10:13.340><c> on</c>

00:10:13.480 --> 00:10:13.490 align:start position:0%
zero-based integer index the diagram on
 

00:10:13.490 --> 00:10:16.090 align:start position:0%
zero-based integer index the diagram on
the<00:10:13.520><c> right</c><00:10:13.580><c> is</c><00:10:14.540><c> showing</c><00:10:14.600><c> this</c><00:10:15.230><c> mapping</c><00:10:15.920><c> from</c>

00:10:16.090 --> 00:10:16.100 align:start position:0%
the right is showing this mapping from
 

00:10:16.100 --> 00:10:20.050 align:start position:0%
the right is showing this mapping from
indices<00:10:16.550><c> to</c><00:10:16.580><c> values</c><00:10:17.650><c> like</c><00:10:18.650><c> unlike</c><00:10:19.250><c> a</c><00:10:19.310><c> CF</c><00:10:19.730><c> array</c>

00:10:20.050 --> 00:10:20.060 align:start position:0%
indices to values like unlike a CF array
 

00:10:20.060 --> 00:10:23.770 align:start position:0%
indices to values like unlike a CF array
though<00:10:20.750><c> the</c><00:10:21.410><c> values</c><00:10:21.830><c> are</c><00:10:22.010><c> kept</c><00:10:22.340><c> compact</c><00:10:23.330><c> in</c>

00:10:23.770 --> 00:10:23.780 align:start position:0%
though the values are kept compact in
 

00:10:23.780 --> 00:10:27.100 align:start position:0%
though the values are kept compact in
that<00:10:24.530><c> if</c><00:10:24.770><c> you</c><00:10:25.010><c> remove</c><00:10:25.580><c> an</c><00:10:25.970><c> element</c><00:10:26.600><c> from</c><00:10:27.020><c> the</c>

00:10:27.100 --> 00:10:27.110 align:start position:0%
that if you remove an element from the
 

00:10:27.110 --> 00:10:29.710 align:start position:0%
that if you remove an element from the
middle<00:10:27.890><c> of</c><00:10:28.010><c> an</c><00:10:28.130><c> array</c><00:10:28.370><c> the</c><00:10:29.060><c> values</c><00:10:29.510><c> with</c>

00:10:29.710 --> 00:10:29.720 align:start position:0%
middle of an array the values with
 

00:10:29.720 --> 00:10:32.470 align:start position:0%
middle of an array the values with
higher<00:10:29.990><c> indices</c><00:10:30.440><c> are</c><00:10:30.920><c> shifted</c><00:10:31.550><c> down</c><00:10:31.790><c> one</c><00:10:31.820><c> in</c>

00:10:32.470 --> 00:10:32.480 align:start position:0%
higher indices are shifted down one in
 

00:10:32.480 --> 00:10:35.230 align:start position:0%
higher indices are shifted down one in
order<00:10:32.930><c> to</c><00:10:33.050><c> keep</c><00:10:33.260><c> the</c><00:10:33.890><c> what</c><00:10:34.820><c> you</c><00:10:34.910><c> might</c><00:10:35.060><c> call</c>

00:10:35.230 --> 00:10:35.240 align:start position:0%
order to keep the what you might call
 

00:10:35.240 --> 00:10:37.720 align:start position:0%
order to keep the what you might call
the<00:10:35.300><c> index</c><00:10:35.930><c> space</c><00:10:36.320><c> the</c><00:10:36.680><c> indices</c><00:10:37.340><c> that</c><00:10:37.400><c> you</c>

00:10:37.720 --> 00:10:37.730 align:start position:0%
the index space the indices that you
 

00:10:37.730 --> 00:10:40.260 align:start position:0%
the index space the indices that you
would<00:10:37.880><c> use</c><00:10:38.090><c> to</c><00:10:38.120><c> access</c><00:10:38.690><c> elements</c><00:10:38.920><c> keep</c><00:10:39.920><c> those</c>

00:10:40.260 --> 00:10:40.270 align:start position:0%
would use to access elements keep those
 

00:10:40.270 --> 00:10:44.800 align:start position:0%
would use to access elements keep those
contiguous<00:10:42.250><c> in</c><00:10:43.250><c> addition</c><00:10:43.730><c> to</c><00:10:44.090><c> using</c><00:10:44.330><c> a</c><00:10:44.570><c> CF</c>

00:10:44.800 --> 00:10:44.810 align:start position:0%
contiguous in addition to using a CF
 

00:10:44.810 --> 00:10:47.920 align:start position:0%
contiguous in addition to using a CF
array<00:10:45.080><c> like</c><00:10:45.380><c> an</c><00:10:45.710><c> array</c><00:10:46.070><c> it</c><00:10:46.730><c> is</c><00:10:46.790><c> quite</c><00:10:47.510><c> common</c>

00:10:47.920 --> 00:10:47.930 align:start position:0%
array like an array it is quite common
 

00:10:47.930 --> 00:10:53.890 align:start position:0%
array like an array it is quite common
to<00:10:47.960><c> use</c><00:10:48.230><c> them</c><00:10:48.500><c> as</c><00:10:48.710><c> stacks</c><00:10:49.310><c> and</c><00:10:49.700><c> queues</c><00:10:52.900><c> the</c>

00:10:53.890 --> 00:10:53.900 align:start position:0%
to use them as stacks and queues the
 

00:10:53.900 --> 00:10:55.150 align:start position:0%
to use them as stacks and queues the
other<00:10:54.050><c> collection</c><00:10:54.470><c> I'm</c><00:10:54.530><c> going</c><00:10:54.650><c> to</c><00:10:54.710><c> review</c>

00:10:55.150 --> 00:10:55.160 align:start position:0%
other collection I'm going to review
 

00:10:55.160 --> 00:10:59.040 align:start position:0%
other collection I'm going to review
today<00:10:55.430><c> is</c><00:10:55.700><c> CF</c><00:10:56.000><c> dictionary</c><00:10:56.680><c> with</c><00:10:57.680><c> a</c><00:10:57.710><c> CF</c><00:10:58.190><c> array</c>

00:10:59.040 --> 00:10:59.050 align:start position:0%
today is CF dictionary with a CF array
 

00:10:59.050 --> 00:11:01.780 align:start position:0%
today is CF dictionary with a CF array
the<00:11:00.050><c> pointer</c><00:11:00.410><c> size</c><00:11:00.620><c> values</c><00:11:01.130><c> were</c><00:11:01.280><c> indexed</c><00:11:01.640><c> by</c>

00:11:01.780 --> 00:11:01.790 align:start position:0%
the pointer size values were indexed by
 

00:11:01.790 --> 00:11:05.290 align:start position:0%
the pointer size values were indexed by
integer<00:11:02.300><c> in</c><00:11:03.050><c> a</c><00:11:03.560><c> CF</c><00:11:03.800><c> dictionary</c><00:11:04.340><c> the</c><00:11:04.880><c> values</c>

00:11:05.290 --> 00:11:05.300 align:start position:0%
integer in a CF dictionary the values
 

00:11:05.300 --> 00:11:07.810 align:start position:0%
integer in a CF dictionary the values
are<00:11:05.450><c> indexed</c><00:11:05.870><c> by</c><00:11:05.930><c> keys</c><00:11:06.440><c> and</c><00:11:06.890><c> you</c><00:11:07.400><c> can</c><00:11:07.520><c> see</c><00:11:07.670><c> this</c>

00:11:07.810 --> 00:11:07.820 align:start position:0%
are indexed by keys and you can see this
 

00:11:07.820 --> 00:11:10.720 align:start position:0%
are indexed by keys and you can see this
in<00:11:08.000><c> the</c><00:11:08.090><c> diagram</c><00:11:08.600><c> which</c><00:11:09.350><c> are</c><00:11:09.730><c> themselves</c>

00:11:10.720 --> 00:11:10.730 align:start position:0%
in the diagram which are themselves
 

00:11:10.730 --> 00:11:12.490 align:start position:0%
in the diagram which are themselves
often<00:11:11.510><c> see</c><00:11:12.110><c> other</c>

00:11:12.490 --> 00:11:12.500 align:start position:0%
often see other
 

00:11:12.500 --> 00:11:15.490 align:start position:0%
often see other
corefoundation<00:11:13.460><c> objects</c><00:11:14.330><c> but</c><00:11:14.750><c> can</c><00:11:15.110><c> be</c><00:11:15.290><c> any</c>

00:11:15.490 --> 00:11:15.500 align:start position:0%
corefoundation objects but can be any
 

00:11:15.500 --> 00:11:19.870 align:start position:0%
corefoundation objects but can be any
pointer<00:11:16.100><c> sized</c><00:11:16.370><c> values</c><00:11:17.000><c> in</c><00:11:17.530><c> the</c><00:11:18.530><c> diagram</c><00:11:18.980><c> the</c>

00:11:19.870 --> 00:11:19.880 align:start position:0%
pointer sized values in the diagram the
 

00:11:19.880 --> 00:11:22.840 align:start position:0%
pointer sized values in the diagram the
strings<00:11:20.180><c> are</c><00:11:20.330><c> being</c><00:11:20.510><c> used</c><00:11:20.720><c> as</c><00:11:20.960><c> the</c><00:11:21.200><c> keys</c><00:11:21.530><c> if</c><00:11:22.400><c> I</c>

00:11:22.840 --> 00:11:22.850 align:start position:0%
strings are being used as the keys if I
 

00:11:22.850 --> 00:11:25.720 align:start position:0%
strings are being used as the keys if I
asked<00:11:23.270><c> for</c><00:11:23.500><c> the</c><00:11:24.500><c> value</c><00:11:24.890><c> with</c><00:11:25.040><c> the</c><00:11:25.160><c> name</c><00:11:25.370><c> key</c>

00:11:25.720 --> 00:11:25.730 align:start position:0%
asked for the value with the name key
 

00:11:25.730 --> 00:11:28.050 align:start position:0%
asked for the value with the name key
for<00:11:26.210><c> example</c><00:11:26.720><c> at</c><00:11:26.870><c> the</c><00:11:26.960><c> top</c><00:11:27.140><c> there</c><00:11:27.500><c> the</c>

00:11:28.050 --> 00:11:28.060 align:start position:0%
for example at the top there the
 

00:11:28.060 --> 00:11:32.320 align:start position:0%
for example at the top there the
dictionary<00:11:29.060><c> would</c><00:11:29.240><c> return</c><00:11:29.600><c> me</c><00:11:29.870><c> value</c><00:11:30.350><c> 1</c><00:11:30.620><c> a</c><00:11:31.330><c> CF</c>

00:11:32.320 --> 00:11:32.330 align:start position:0%
dictionary would return me value 1 a CF
 

00:11:32.330 --> 00:11:34.600 align:start position:0%
dictionary would return me value 1 a CF
dictionary<00:11:32.810><c> is</c><00:11:32.960><c> somewhat</c><00:11:33.589><c> like</c><00:11:33.740><c> a</c><00:11:33.800><c> struct</c><00:11:34.339><c> in</c>

00:11:34.600 --> 00:11:34.610 align:start position:0%
dictionary is somewhat like a struct in
 

00:11:34.610 --> 00:11:36.700 align:start position:0%
dictionary is somewhat like a struct in
C<00:11:34.940><c> although</c><00:11:35.510><c> you</c><00:11:35.570><c> don't</c><00:11:35.900><c> want</c><00:11:36.080><c> to</c><00:11:36.170><c> go</c><00:11:36.320><c> and</c>

00:11:36.700 --> 00:11:36.710 align:start position:0%
C although you don't want to go and
 

00:11:36.710 --> 00:11:38.890 align:start position:0%
C although you don't want to go and
change<00:11:37.490><c> all</c><00:11:37.760><c> your</c><00:11:37.880><c> structures</c><00:11:38.360><c> in</c><00:11:38.570><c> your</c><00:11:38.600><c> C</c>

00:11:38.890 --> 00:11:38.900 align:start position:0%
change all your structures in your C
 

00:11:38.900 --> 00:11:43.270 align:start position:0%
change all your structures in your C
code<00:11:39.170><c> to</c><00:11:39.470><c> use</c><00:11:39.589><c> CF</c><00:11:39.890><c> dictionaries</c><00:11:42.160><c> there's</c><00:11:43.160><c> a</c>

00:11:43.270 --> 00:11:43.280 align:start position:0%
code to use CF dictionaries there's a
 

00:11:43.280 --> 00:11:46.210 align:start position:0%
code to use CF dictionaries there's a
time<00:11:43.970><c> and</c><00:11:44.180><c> a</c><00:11:44.210><c> place</c><00:11:44.240><c> for</c><00:11:44.480><c> CF</c><00:11:45.470><c> dictionaries</c><00:11:46.070><c> and</c>

00:11:46.210 --> 00:11:46.220 align:start position:0%
time and a place for CF dictionaries and
 

00:11:46.220 --> 00:11:49.840 align:start position:0%
time and a place for CF dictionaries and
for<00:11:46.400><c> Struck's</c><00:11:47.710><c> also</c><00:11:48.710><c> unlike</c><00:11:49.040><c> a</c><00:11:49.070><c> CF</c><00:11:49.430><c> array</c><00:11:49.670><c> the</c>

00:11:49.840 --> 00:11:49.850 align:start position:0%
for Struck's also unlike a CF array the
 

00:11:49.850 --> 00:11:51.210 align:start position:0%
for Struck's also unlike a CF array the
values<00:11:50.300><c> in</c><00:11:50.420><c> the</c><00:11:50.510><c> dictionary</c>

00:11:51.210 --> 00:11:51.220 align:start position:0%
values in the dictionary
 

00:11:51.220 --> 00:11:54.700 align:start position:0%
values in the dictionary
in<00:11:52.220><c> any</c><00:11:52.670><c> particular</c><00:11:52.940><c> order</c><00:11:53.330><c> and</c><00:11:53.900><c> this</c><00:11:54.560><c> is</c>

00:11:54.700 --> 00:11:54.710 align:start position:0%
in any particular order and this is
 

00:11:54.710 --> 00:11:56.170 align:start position:0%
in any particular order and this is
because<00:11:55.010><c> CF</c><00:11:55.280><c> dictionary</c><00:11:55.700><c> is</c><00:11:55.790><c> based</c><00:11:56.000><c> on</c>

00:11:56.170 --> 00:11:56.180 align:start position:0%
because CF dictionary is based on
 

00:11:56.180 --> 00:11:59.320 align:start position:0%
because CF dictionary is based on
hashing<00:11:56.870><c> for</c><00:11:57.470><c> fast</c><00:11:57.890><c> access</c><00:11:58.520><c> performance</c><00:11:58.760><c> to</c>

00:11:59.320 --> 00:11:59.330 align:start position:0%
hashing for fast access performance to
 

00:11:59.330 --> 00:12:00.530 align:start position:0%
hashing for fast access performance to
the<00:11:59.450><c> elements</c>

00:12:00.530 --> 00:12:00.540 align:start position:0%
the elements
 

00:12:00.540 --> 00:12:04.290 align:start position:0%
the elements
and<00:12:02.010><c> again</c><00:12:03.010><c> to</c><00:12:03.220><c> reiterate</c><00:12:03.430><c> one</c><00:12:04.060><c> of</c><00:12:04.210><c> the</c>

00:12:04.290 --> 00:12:04.300 align:start position:0%
and again to reiterate one of the
 

00:12:04.300 --> 00:12:06.720 align:start position:0%
and again to reiterate one of the
principal<00:12:04.960><c> values</c><00:12:05.500><c> of</c><00:12:05.740><c> these</c><00:12:05.860><c> collections</c><00:12:06.220><c> is</c>

00:12:06.720 --> 00:12:06.730 align:start position:0%
principal values of these collections is
 

00:12:06.730 --> 00:12:08.130 align:start position:0%
principal values of these collections is
that<00:12:06.970><c> they</c><00:12:07.089><c> take</c><00:12:07.330><c> care</c><00:12:07.600><c> of</c><00:12:07.690><c> the</c><00:12:07.779><c> memory</c>

00:12:08.130 --> 00:12:08.140 align:start position:0%
that they take care of the memory
 

00:12:08.140 --> 00:12:11.280 align:start position:0%
that they take care of the memory
storage<00:12:08.440><c> and</c><00:12:08.770><c> algorithms</c><00:12:09.580><c> for</c><00:12:09.880><c> you</c>

00:12:11.280 --> 00:12:11.290 align:start position:0%
storage and algorithms for you
 

00:12:11.290 --> 00:12:13.650 align:start position:0%
storage and algorithms for you
çf<00:12:11.770><c> dictionary</c><00:12:12.310><c> and</c><00:12:12.520><c> CFR</c><00:12:12.910><c> rate</c><00:12:13.060><c> are</c><00:12:13.270><c> both</c>

00:12:13.650 --> 00:12:13.660 align:start position:0%
çf dictionary and CFR rate are both
 

00:12:13.660 --> 00:12:15.810 align:start position:0%
çf dictionary and CFR rate are both
heavily<00:12:14.140><c> used</c><00:12:14.560><c> in</c><00:12:14.860><c> the</c><00:12:15.190><c> frameworks</c><00:12:15.640><c> and</c>

00:12:15.810 --> 00:12:15.820 align:start position:0%
heavily used in the frameworks and
 

00:12:15.820 --> 00:12:19.170 align:start position:0%
heavily used in the frameworks and
applications<00:12:16.480><c> of</c><00:12:16.660><c> Mac</c><00:12:16.839><c> OS</c><00:12:16.870><c> 10</c><00:12:17.080><c> and</c><00:12:18.029><c> though</c><00:12:19.029><c> it</c>

00:12:19.170 --> 00:12:19.180 align:start position:0%
applications of Mac OS 10 and though it
 

00:12:19.180 --> 00:12:20.880 align:start position:0%
applications of Mac OS 10 and though it
might<00:12:19.510><c> surprise</c><00:12:19.779><c> you</c><00:12:20.110><c> see</c><00:12:20.410><c> if</c><00:12:20.500><c> dictionary</c>

00:12:20.880 --> 00:12:20.890 align:start position:0%
might surprise you see if dictionary
 

00:12:20.890 --> 00:12:22.740 align:start position:0%
might surprise you see if dictionary
actually<00:12:21.190><c> tends</c><00:12:21.430><c> to</c><00:12:21.640><c> be</c><00:12:21.790><c> more</c><00:12:22.060><c> popular</c><00:12:22.360><c> than</c>

00:12:22.740 --> 00:12:22.750 align:start position:0%
actually tends to be more popular than
 

00:12:22.750 --> 00:12:26.130 align:start position:0%
actually tends to be more popular than
CF<00:12:23.200><c> array</c><00:12:24.000><c> dictionary</c><00:12:25.000><c> just</c><00:12:25.270><c> turns</c><00:12:25.810><c> out</c><00:12:25.990><c> to</c><00:12:26.110><c> be</c>

00:12:26.130 --> 00:12:26.140 align:start position:0%
CF array dictionary just turns out to be
 

00:12:26.140 --> 00:12:28.320 align:start position:0%
CF array dictionary just turns out to be
a<00:12:26.230><c> very</c><00:12:26.560><c> convenient</c><00:12:27.040><c> way</c><00:12:27.310><c> to</c><00:12:27.339><c> structure</c><00:12:27.910><c> data</c>

00:12:28.320 --> 00:12:28.330 align:start position:0%
a very convenient way to structure data
 

00:12:28.330 --> 00:12:33.750 align:start position:0%
a very convenient way to structure data
inside<00:12:29.020><c> of</c><00:12:29.050><c> an</c><00:12:29.230><c> application</c><00:12:32.430><c> one</c><00:12:33.430><c> of</c><00:12:33.520><c> the</c><00:12:33.580><c> ways</c>

00:12:33.750 --> 00:12:33.760 align:start position:0%
inside of an application one of the ways
 

00:12:33.760 --> 00:12:35.519 align:start position:0%
inside of an application one of the ways
in<00:12:33.940><c> which</c><00:12:33.970><c> core</c><00:12:34.330><c> foundation</c><00:12:34.930><c> uses</c><00:12:35.350><c> these</c>

00:12:35.519 --> 00:12:35.529 align:start position:0%
in which core foundation uses these
 

00:12:35.529 --> 00:12:37.380 align:start position:0%
in which core foundation uses these
basic<00:12:36.070><c> data</c><00:12:36.370><c> types</c><00:12:36.490><c> and</c><00:12:36.940><c> collections</c>

00:12:37.380 --> 00:12:37.390 align:start position:0%
basic data types and collections
 

00:12:37.390 --> 00:12:41.070 align:start position:0%
basic data types and collections
together<00:12:37.630><c> is</c><00:12:38.200><c> in</c><00:12:38.709><c> property</c><00:12:39.310><c> lists</c><00:12:39.670><c> a</c><00:12:40.080><c> property</c>

00:12:41.070 --> 00:12:41.080 align:start position:0%
together is in property lists a property
 

00:12:41.080 --> 00:12:44.010 align:start position:0%
together is in property lists a property
list<00:12:41.200><c> is</c><00:12:41.410><c> a</c><00:12:41.440><c> group</c><00:12:41.740><c> of</c><00:12:41.860><c> CF</c><00:12:42.190><c> objects</c><00:12:42.790><c> of</c><00:12:43.020><c> these</c>

00:12:44.010 --> 00:12:44.020 align:start position:0%
list is a group of CF objects of these
 

00:12:44.020 --> 00:12:47.820 align:start position:0%
list is a group of CF objects of these
types<00:12:44.410><c> CF</c><00:12:44.920><c> string</c><00:12:45.270><c> CF</c><00:12:46.270><c> data</c><00:12:46.510><c> CF</c><00:12:47.200><c> number</c><00:12:47.529><c> CF</c>

00:12:47.820 --> 00:12:47.830 align:start position:0%
types CF string CF data CF number CF
 

00:12:47.830 --> 00:12:51.570 align:start position:0%
types CF string CF data CF number CF
boolean<00:12:48.300><c> CF</c><00:12:49.300><c> date</c><00:12:49.630><c> CF</c><00:12:50.470><c> array</c><00:12:50.770><c> and</c><00:12:51.070><c> CF</c>

00:12:51.570 --> 00:12:51.580 align:start position:0%
boolean CF date CF array and CF
 

00:12:51.580 --> 00:12:55.710 align:start position:0%
boolean CF date CF array and CF
dictionary<00:12:52.120><c> and</c><00:12:53.130><c> only</c><00:12:54.130><c> objects</c><00:12:54.910><c> of</c><00:12:55.120><c> those</c>

00:12:55.710 --> 00:12:55.720 align:start position:0%
dictionary and only objects of those
 

00:12:55.720 --> 00:13:00.210 align:start position:0%
dictionary and only objects of those
seven<00:12:56.470><c> types</c><00:12:57.330><c> an</c><00:12:58.560><c> additional</c><00:12:59.560><c> restriction</c><00:12:59.860><c> is</c>

00:13:00.210 --> 00:13:00.220 align:start position:0%
seven types an additional restriction is
 

00:13:00.220 --> 00:13:02.639 align:start position:0%
seven types an additional restriction is
that<00:13:00.250><c> keys</c><00:13:00.880><c> of</c><00:13:01.120><c> a</c><00:13:01.180><c> dictionary</c><00:13:01.390><c> in</c><00:13:02.050><c> a</c><00:13:02.230><c> property</c>

00:13:02.639 --> 00:13:02.649 align:start position:0%
that keys of a dictionary in a property
 

00:13:02.649 --> 00:13:05.579 align:start position:0%
that keys of a dictionary in a property
list<00:13:02.890><c> must</c><00:13:03.490><c> be</c><00:13:03.820><c> CF</c><00:13:04.330><c> strings</c><00:13:04.779><c> that</c><00:13:05.260><c> any</c>

00:13:05.579 --> 00:13:05.589 align:start position:0%
list must be CF strings that any
 

00:13:05.589 --> 00:13:08.100 align:start position:0%
list must be CF strings that any
dictionary<00:13:05.920><c> within</c><00:13:06.610><c> a</c><00:13:06.670><c> property</c><00:13:07.120><c> lists</c><00:13:07.360><c> so</c>

00:13:08.100 --> 00:13:08.110 align:start position:0%
dictionary within a property lists so
 

00:13:08.110 --> 00:13:11.340 align:start position:0%
dictionary within a property lists so
any<00:13:08.440><c> object</c><00:13:08.950><c> or</c><00:13:09.070><c> group</c><00:13:09.640><c> of</c><00:13:09.850><c> objects</c><00:13:10.390><c> which</c>

00:13:11.340 --> 00:13:11.350 align:start position:0%
any object or group of objects which
 

00:13:11.350 --> 00:13:13.769 align:start position:0%
any object or group of objects which
satisfies<00:13:12.100><c> these</c><00:13:12.490><c> constraints</c><00:13:13.120><c> is</c><00:13:13.270><c> a</c>

00:13:13.769 --> 00:13:13.779 align:start position:0%
satisfies these constraints is a
 

00:13:13.779 --> 00:13:17.550 align:start position:0%
satisfies these constraints is a
property<00:13:14.350><c> list</c><00:13:14.850><c> for</c><00:13:15.850><c> example</c><00:13:15.910><c> a</c><00:13:16.480><c> single</c><00:13:17.140><c> CF</c>

00:13:17.550 --> 00:13:17.560 align:start position:0%
property list for example a single CF
 

00:13:17.560 --> 00:13:20.510 align:start position:0%
property list for example a single CF
string<00:13:17.860><c> is</c><00:13:18.010><c> a</c><00:13:18.040><c> property</c><00:13:18.550><c> list</c><00:13:18.700><c> a</c><00:13:19.089><c> single</c><00:13:19.750><c> CF</c>

00:13:20.510 --> 00:13:20.520 align:start position:0%
string is a property list a single CF
 

00:13:20.520 --> 00:13:24.540 align:start position:0%
string is a property list a single CF
number<00:13:21.520><c> is</c><00:13:21.670><c> a</c><00:13:22.120><c> property</c><00:13:22.630><c> list</c><00:13:22.890><c> but</c><00:13:23.890><c> more</c><00:13:24.339><c> often</c>

00:13:24.540 --> 00:13:24.550 align:start position:0%
number is a property list but more often
 

00:13:24.550 --> 00:13:28.250 align:start position:0%
number is a property list but more often
a<00:13:25.029><c> property</c><00:13:25.810><c> list</c><00:13:26.020><c> is</c><00:13:26.440><c> a</c><00:13:26.770><c> collection</c><00:13:27.100><c> or</c>

00:13:28.250 --> 00:13:28.260 align:start position:0%
a property list is a collection or
 

00:13:28.260 --> 00:13:30.449 align:start position:0%
a property list is a collection or
collection<00:13:29.260><c> of</c><00:13:29.320><c> collections</c><00:13:29.890><c> for</c><00:13:30.040><c> example</c>

00:13:30.449 --> 00:13:30.459 align:start position:0%
collection of collections for example
 

00:13:30.459 --> 00:13:32.720 align:start position:0%
collection of collections for example
you<00:13:30.580><c> might</c><00:13:30.730><c> have</c><00:13:30.790><c> an</c><00:13:31.150><c> array</c><00:13:31.839><c> with</c>

00:13:32.720 --> 00:13:32.730 align:start position:0%
you might have an array with
 

00:13:32.730 --> 00:13:34.769 align:start position:0%
you might have an array with
dictionaries<00:13:33.730><c> in</c><00:13:33.880><c> it</c><00:13:34.000><c> and</c><00:13:34.240><c> the</c><00:13:34.360><c> dictionaries</c>

00:13:34.769 --> 00:13:34.779 align:start position:0%
dictionaries in it and the dictionaries
 

00:13:34.779 --> 00:13:36.420 align:start position:0%
dictionaries in it and the dictionaries
may<00:13:34.930><c> have</c><00:13:35.110><c> dictionaries</c><00:13:35.650><c> inside</c><00:13:35.950><c> them</c><00:13:36.220><c> and</c>

00:13:36.420 --> 00:13:36.430 align:start position:0%
may have dictionaries inside them and
 

00:13:36.430 --> 00:13:39.150 align:start position:0%
may have dictionaries inside them and
they<00:13:36.520><c> have</c><00:13:36.730><c> keys</c><00:13:37.000><c> and</c><00:13:37.270><c> values</c><00:13:38.010><c> which</c><00:13:39.010><c> are</c>

00:13:39.150 --> 00:13:39.160 align:start position:0%
they have keys and values which are
 

00:13:39.160 --> 00:13:42.630 align:start position:0%
they have keys and values which are
numbers<00:13:39.550><c> and</c><00:13:39.580><c> boolean's</c><00:13:40.240><c> and</c><00:13:40.420><c> so</c><00:13:40.839><c> on</c><00:13:41.640><c> the</c>

00:13:42.630 --> 00:13:42.640 align:start position:0%
numbers and boolean's and so on the
 

00:13:42.640 --> 00:13:44.960 align:start position:0%
numbers and boolean's and so on the
special<00:13:42.970><c> thing</c><00:13:43.180><c> about</c><00:13:43.209><c> property</c><00:13:43.990><c> lists</c><00:13:44.320><c> this</c>

00:13:44.960 --> 00:13:44.970 align:start position:0%
special thing about property lists this
 

00:13:44.970 --> 00:13:48.990 align:start position:0%
special thing about property lists this
group<00:13:45.970><c> of</c><00:13:46.180><c> objects</c><00:13:46.779><c> special</c><00:13:47.529><c> type</c><00:13:48.010><c> of</c><00:13:48.220><c> group</c>

00:13:48.990 --> 00:13:49.000 align:start position:0%
group of objects special type of group
 

00:13:49.000 --> 00:13:52.440 align:start position:0%
group of objects special type of group
is<00:13:49.240><c> that</c><00:13:50.110><c> there</c><00:13:50.290><c> is</c><00:13:50.380><c> a</c><00:13:50.410><c> persistent</c><00:13:51.450><c> sometimes</c>

00:13:52.440 --> 00:13:52.450 align:start position:0%
is that there is a persistent sometimes
 

00:13:52.450 --> 00:13:56.220 align:start position:0%
is that there is a persistent sometimes
called<00:13:52.660><c> flattened</c><00:13:53.459><c> representation</c><00:13:55.200><c> which</c><00:13:56.200><c> is</c>

00:13:56.220 --> 00:13:56.230 align:start position:0%
called flattened representation which is
 

00:13:56.230 --> 00:13:59.760 align:start position:0%
called flattened representation which is
an<00:13:56.620><c> xml-based</c><00:13:57.630><c> representation</c><00:13:58.630><c> so</c><00:13:59.529><c> if</c><00:13:59.680><c> you</c>

00:13:59.760 --> 00:13:59.770 align:start position:0%
an xml-based representation so if you
 

00:13:59.770 --> 00:14:03.329 align:start position:0%
an xml-based representation so if you
have<00:14:00.070><c> a</c><00:14:00.100><c> property</c><00:14:00.700><c> list</c><00:14:00.910><c> in</c><00:14:01.089><c> memory</c><00:14:01.740><c> you</c><00:14:02.740><c> can</c>

00:14:03.329 --> 00:14:03.339 align:start position:0%
have a property list in memory you can
 

00:14:03.339 --> 00:14:06.389 align:start position:0%
have a property list in memory you can
easily<00:14:03.490><c> flatten</c><00:14:04.089><c> it</c><00:14:04.209><c> oh</c><00:14:04.360><c> and</c><00:14:05.350><c> write</c><00:14:06.160><c> it</c><00:14:06.279><c> to</c><00:14:06.310><c> a</c>

00:14:06.389 --> 00:14:06.399 align:start position:0%
easily flatten it oh and write it to a
 

00:14:06.399 --> 00:14:09.660 align:start position:0%
easily flatten it oh and write it to a
file<00:14:06.640><c> for</c><00:14:06.970><c> example</c><00:14:07.060><c> or</c><00:14:08.279><c> send</c><00:14:09.279><c> it</c><00:14:09.430><c> to</c><00:14:09.579><c> another</c>

00:14:09.660 --> 00:14:09.670 align:start position:0%
file for example or send it to another
 

00:14:09.670 --> 00:14:11.120 align:start position:0%
file for example or send it to another
application

00:14:11.120 --> 00:14:11.130 align:start position:0%
application
 

00:14:11.130 --> 00:14:13.760 align:start position:0%
application
later<00:14:11.970><c> you</c><00:14:12.330><c> can</c><00:14:12.570><c> for</c><00:14:13.200><c> example</c><00:14:13.560><c> if</c><00:14:13.650><c> you've</c>

00:14:13.760 --> 00:14:13.770 align:start position:0%
later you can for example if you've
 

00:14:13.770 --> 00:14:16.010 align:start position:0%
later you can for example if you've
written<00:14:13.950><c> it</c><00:14:14.100><c> to</c><00:14:14.220><c> a</c><00:14:14.250><c> file</c><00:14:14.550><c> read</c><00:14:15.390><c> the</c><00:14:15.540><c> file</c><00:14:15.750><c> back</c>

00:14:16.010 --> 00:14:16.020 align:start position:0%
written it to a file read the file back
 

00:14:16.020 --> 00:14:18.440 align:start position:0%
written it to a file read the file back
in<00:14:16.350><c> and</c><00:14:16.650><c> reproduce</c><00:14:17.610><c> the</c><00:14:17.820><c> original</c><00:14:18.210><c> object</c>

00:14:18.440 --> 00:14:18.450 align:start position:0%
in and reproduce the original object
 

00:14:18.450 --> 00:14:23.270 align:start position:0%
in and reproduce the original object
graph<00:14:19.400><c> by</c><00:14:20.400><c> using</c><00:14:20.900><c> corefoundation</c><00:14:21.900><c> to</c><00:14:22.470><c> decode</c>

00:14:23.270 --> 00:14:23.280 align:start position:0%
graph by using corefoundation to decode
 

00:14:23.280 --> 00:14:25.550 align:start position:0%
graph by using corefoundation to decode
the<00:14:23.460><c> xml</c><00:14:23.880><c> representation</c><00:14:24.330><c> back</c><00:14:24.990><c> into</c><00:14:25.380><c> the</c>

00:14:25.550 --> 00:14:25.560 align:start position:0%
the xml representation back into the
 

00:14:25.560 --> 00:14:29.630 align:start position:0%
the xml representation back into the
original<00:14:26.400><c> objects</c><00:14:27.170><c> a</c><00:14:28.170><c> file</c><00:14:28.740><c> which</c><00:14:28.980><c> contains</c><00:14:29.160><c> a</c>

00:14:29.630 --> 00:14:29.640 align:start position:0%
original objects a file which contains a
 

00:14:29.640 --> 00:14:33.200 align:start position:0%
original objects a file which contains a
flattened<00:14:30.000><c> property</c><00:14:30.480><c> list</c><00:14:31.010><c> is</c><00:14:32.010><c> itself</c><00:14:32.550><c> often</c>

00:14:33.200 --> 00:14:33.210 align:start position:0%
flattened property list is itself often
 

00:14:33.210 --> 00:14:36.140 align:start position:0%
flattened property list is itself often
referred<00:14:33.810><c> to</c><00:14:33.840><c> as</c><00:14:34.320><c> a</c><00:14:34.350><c> property</c><00:14:35.100><c> list</c><00:14:35.370><c> and</c><00:14:35.820><c> so</c>

00:14:36.140 --> 00:14:36.150 align:start position:0%
referred to as a property list and so
 

00:14:36.150 --> 00:14:39.350 align:start position:0%
referred to as a property list and so
the<00:14:36.660><c> term</c><00:14:36.900><c> is</c><00:14:37.080><c> used</c><00:14:37.380><c> for</c><00:14:37.800><c> both</c><00:14:37.980><c> on</c><00:14:38.700><c> disk</c>

00:14:39.350 --> 00:14:39.360 align:start position:0%
the term is used for both on disk
 

00:14:39.360 --> 00:14:41.870 align:start position:0%
the term is used for both on disk
representations<00:14:40.260><c> of</c><00:14:40.440><c> property</c><00:14:40.830><c> list</c><00:14:41.010><c> and</c><00:14:41.340><c> the</c>

00:14:41.870 --> 00:14:41.880 align:start position:0%
representations of property list and the
 

00:14:41.880 --> 00:14:43.640 align:start position:0%
representations of property list and the
in-memory<00:14:42.270><c> representation</c><00:14:42.960><c> the</c><00:14:43.380><c> actual</c>

00:14:43.640 --> 00:14:43.650 align:start position:0%
in-memory representation the actual
 

00:14:43.650 --> 00:14:47.270 align:start position:0%
in-memory representation the actual
objects<00:14:44.190><c> in</c><00:14:45.060><c> use</c><00:14:45.950><c> property</c><00:14:46.950><c> lists</c><00:14:47.190><c> are</c><00:14:47.250><c> used</c>

00:14:47.270 --> 00:14:47.280 align:start position:0%
objects in use property lists are used
 

00:14:47.280 --> 00:14:49.070 align:start position:0%
objects in use property lists are used
extensively<00:14:47.760><c> in</c><00:14:48.120><c> Mac</c><00:14:48.390><c> OS</c><00:14:48.570><c> 10</c><00:14:48.600><c> as</c>

00:14:49.070 --> 00:14:49.080 align:start position:0%
extensively in Mac OS 10 as
 

00:14:49.080 --> 00:14:52.070 align:start position:0%
extensively in Mac OS 10 as
configuration<00:14:49.980><c> files</c><00:14:50.490><c> and</c><00:14:50.850><c> for</c><00:14:51.390><c> storage</c><00:14:51.990><c> of</c>

00:14:52.070 --> 00:14:52.080 align:start position:0%
configuration files and for storage of
 

00:14:52.080 --> 00:14:55.130 align:start position:0%
configuration files and for storage of
preferences<00:14:52.740><c> and</c><00:14:53.190><c> similar</c><00:14:53.580><c> things</c><00:14:54.140><c> for</c>

00:14:55.130 --> 00:14:55.140 align:start position:0%
preferences and similar things for
 

00:14:55.140 --> 00:14:58.430 align:start position:0%
preferences and similar things for
example<00:14:56.300><c> applications</c><00:14:57.300><c> in</c><00:14:57.630><c> Mac</c><00:14:57.900><c> OS</c><00:14:58.080><c> 10</c><00:14:58.110><c> are</c>

00:14:58.430 --> 00:14:58.440 align:start position:0%
example applications in Mac OS 10 are
 

00:14:58.440 --> 00:15:01.310 align:start position:0%
example applications in Mac OS 10 are
bundles<00:14:59.430><c> which</c><00:14:59.910><c> are</c><00:15:00.180><c> represented</c><00:15:00.750><c> by</c><00:15:00.780><c> CF</c>

00:15:01.310 --> 00:15:01.320 align:start position:0%
bundles which are represented by CF
 

00:15:01.320 --> 00:15:05.150 align:start position:0%
bundles which are represented by CF
bundle<00:15:01.740><c> and</c><00:15:02.780><c> inside</c><00:15:03.780><c> of</c><00:15:03.990><c> a</c><00:15:04.050><c> bundle</c><00:15:04.500><c> is</c><00:15:04.710><c> a</c>

00:15:05.150 --> 00:15:05.160 align:start position:0%
bundle and inside of a bundle is a
 

00:15:05.160 --> 00:15:07.420 align:start position:0%
bundle and inside of a bundle is a
property<00:15:05.760><c> list</c><00:15:05.970><c> which</c><00:15:06.390><c> is</c><00:15:06.660><c> the</c><00:15:06.900><c> configuration</c>

00:15:07.420 --> 00:15:07.430 align:start position:0%
property list which is the configuration
 

00:15:07.430 --> 00:15:10.070 align:start position:0%
property list which is the configuration
information<00:15:08.430><c> for</c><00:15:08.730><c> that</c><00:15:08.760><c> CF</c><00:15:09.330><c> bundle</c><00:15:09.720><c> for</c><00:15:09.930><c> that</c>

00:15:10.070 --> 00:15:10.080 align:start position:0%
information for that CF bundle for that
 

00:15:10.080 --> 00:15:13.310 align:start position:0%
information for that CF bundle for that
application<00:15:11.090><c> will</c><00:15:12.090><c> be</c><00:15:12.180><c> discussing</c><00:15:12.540><c> CF</c><00:15:12.930><c> bundle</c>

00:15:13.310 --> 00:15:13.320 align:start position:0%
application will be discussing CF bundle
 

00:15:13.320 --> 00:15:15.410 align:start position:0%
application will be discussing CF bundle
later<00:15:13.500><c> in</c><00:15:13.680><c> this</c><00:15:13.800><c> talk</c><00:15:14.100><c> I'm</c><00:15:14.370><c> not</c><00:15:14.520><c> going</c><00:15:15.210><c> to</c><00:15:15.300><c> go</c>

00:15:15.410 --> 00:15:15.420 align:start position:0%
later in this talk I'm not going to go
 

00:15:15.420 --> 00:15:19.220 align:start position:0%
later in this talk I'm not going to go
into<00:15:15.600><c> it</c><00:15:15.780><c> more</c><00:15:15.990><c> right</c><00:15:16.260><c> now</c><00:15:17.930><c> populus</c><00:15:18.930><c> are</c><00:15:19.080><c> also</c>

00:15:19.220 --> 00:15:19.230 align:start position:0%
into it more right now populus are also
 

00:15:19.230 --> 00:15:21.440 align:start position:0%
into it more right now populus are also
often<00:15:19.800><c> simply</c><00:15:20.190><c> a</c><00:15:20.220><c> useful</c><00:15:20.700><c> way</c><00:15:20.850><c> of</c><00:15:20.880><c> modeling</c>

00:15:21.440 --> 00:15:21.450 align:start position:0%
often simply a useful way of modeling
 

00:15:21.450 --> 00:15:23.990 align:start position:0%
often simply a useful way of modeling
information<00:15:22.230><c> in</c><00:15:22.350><c> an</c><00:15:22.470><c> application</c><00:15:23.000><c> for</c>

00:15:23.990 --> 00:15:24.000 align:start position:0%
information in an application for
 

00:15:24.000 --> 00:15:26.380 align:start position:0%
information in an application for
example<00:15:24.780><c> a</c><00:15:24.810><c> property</c><00:15:25.260><c> list</c><00:15:25.410><c> could</c><00:15:25.890><c> describe</c>

00:15:26.380 --> 00:15:26.390 align:start position:0%
example a property list could describe
 

00:15:26.390 --> 00:15:30.260 align:start position:0%
example a property list could describe
print<00:15:27.390><c> job</c><00:15:27.660><c> and</c><00:15:27.930><c> a</c><00:15:28.920><c> print</c><00:15:29.190><c> server</c><00:15:29.430><c> might</c><00:15:29.910><c> keep</c>

00:15:30.260 --> 00:15:30.270 align:start position:0%
print job and a print server might keep
 

00:15:30.270 --> 00:15:34.730 align:start position:0%
print job and a print server might keep
a<00:15:30.660><c> CF</c><00:15:31.200><c> array</c><00:15:31.560><c> as</c><00:15:31.890><c> a</c><00:15:32.000><c> queue</c><00:15:33.000><c> of</c><00:15:33.210><c> print</c><00:15:34.110><c> jobs</c><00:15:34.410><c> that</c>

00:15:34.730 --> 00:15:34.740 align:start position:0%
a CF array as a queue of print jobs that
 

00:15:34.740 --> 00:15:37.760 align:start position:0%
a CF array as a queue of print jobs that
need<00:15:34.920><c> to</c><00:15:35.040><c> be</c><00:15:35.130><c> serviced</c><00:15:35.990><c> here</c><00:15:36.990><c> we</c><00:15:37.170><c> have</c><00:15:37.350><c> just</c><00:15:37.680><c> a</c>

00:15:37.760 --> 00:15:37.770 align:start position:0%
need to be serviced here we have just a
 

00:15:37.770 --> 00:15:39.500 align:start position:0%
need to be serviced here we have just a
few<00:15:38.070><c> of</c><00:15:38.160><c> the</c><00:15:38.190><c> property</c><00:15:38.730><c> lists</c><00:15:39.090><c> of</c><00:15:39.180><c> a</c>

00:15:39.500 --> 00:15:39.510 align:start position:0%
few of the property lists of a
 

00:15:39.510 --> 00:15:42.680 align:start position:0%
few of the property lists of a
fictitious<00:15:39.960><c> print</c><00:15:40.830><c> job</c><00:15:41.070><c> this</c><00:15:41.910><c> is</c><00:15:42.060><c> not</c><00:15:42.210><c> taken</c>

00:15:42.680 --> 00:15:42.690 align:start position:0%
fictitious print job this is not taken
 

00:15:42.690 --> 00:15:47.480 align:start position:0%
fictitious print job this is not taken
from<00:15:42.720><c> any</c><00:15:43.710><c> actual</c><00:15:44.190><c> use</c><00:15:45.180><c> on</c><00:15:45.450><c> Mac</c><00:15:45.720><c> OS</c><00:15:45.960><c> 10</c><00:15:46.490><c> note</c>

00:15:47.480 --> 00:15:47.490 align:start position:0%
from any actual use on Mac OS 10 note
 

00:15:47.490 --> 00:15:48.800 align:start position:0%
from any actual use on Mac OS 10 note
that<00:15:47.670><c> all</c><00:15:47.820><c> of</c><00:15:47.940><c> the</c><00:15:48.000><c> keys</c><00:15:48.270><c> in</c><00:15:48.600><c> the</c><00:15:48.630><c> dictionary</c>

00:15:48.800 --> 00:15:48.810 align:start position:0%
that all of the keys in the dictionary
 

00:15:48.810 --> 00:15:52.400 align:start position:0%
that all of the keys in the dictionary
are<00:15:49.200><c> strings</c><00:15:49.820><c> the</c><00:15:50.820><c> keys</c><00:15:51.030><c> are</c><00:15:51.180><c> on</c><00:15:51.240><c> the</c><00:15:51.300><c> left</c><00:15:51.660><c> but</c>

00:15:52.400 --> 00:15:52.410 align:start position:0%
are strings the keys are on the left but
 

00:15:52.410 --> 00:15:54.500 align:start position:0%
are strings the keys are on the left but
the<00:15:52.560><c> values</c><00:15:53.100><c> over</c><00:15:53.460><c> on</c><00:15:53.580><c> the</c><00:15:53.700><c> right</c><00:15:53.910><c> are</c><00:15:54.210><c> a</c>

00:15:54.500 --> 00:15:54.510 align:start position:0%
the values over on the right are a
 

00:15:54.510 --> 00:15:57.560 align:start position:0%
the values over on the right are a
mixture<00:15:54.810><c> strings</c><00:15:55.320><c> and</c><00:15:55.800><c> dates</c><00:15:56.220><c> and</c><00:15:56.610><c> boolean</c>

00:15:57.560 --> 00:15:57.570 align:start position:0%
mixture strings and dates and boolean
 

00:15:57.570 --> 00:16:01.220 align:start position:0%
mixture strings and dates and boolean
zand<00:15:58.140><c> numbers</c><00:15:59.360><c> the</c><00:16:00.360><c> dictionary</c><00:16:00.930><c> could</c><00:16:01.080><c> also</c>

00:16:01.220 --> 00:16:01.230 align:start position:0%
zand numbers the dictionary could also
 

00:16:01.230 --> 00:16:03.770 align:start position:0%
zand numbers the dictionary could also
contain<00:16:01.650><c> values</c><00:16:02.160><c> which</c><00:16:02.400><c> are</c><00:16:02.640><c> arrays</c><00:16:03.030><c> or</c><00:16:03.390><c> other</c>

00:16:03.770 --> 00:16:03.780 align:start position:0%
contain values which are arrays or other
 

00:16:03.780 --> 00:16:05.990 align:start position:0%
contain values which are arrays or other
dictionaries<00:16:04.140><c> but</c><00:16:04.890><c> for</c><00:16:05.190><c> space</c><00:16:05.400><c> reasons</c><00:16:05.700><c> we</c>

00:16:05.990 --> 00:16:06.000 align:start position:0%
dictionaries but for space reasons we
 

00:16:06.000 --> 00:16:10.980 align:start position:0%
dictionaries but for space reasons we
haven't<00:16:06.330><c> shown</c><00:16:06.510><c> that</c><00:16:06.750><c> in</c><00:16:06.900><c> this</c><00:16:06.990><c> diagram</c><00:16:09.080><c> okay</c>

00:16:10.980 --> 00:16:10.990 align:start position:0%
haven't shown that in this diagram okay
 

00:16:10.990 --> 00:16:17.020 align:start position:0%
haven't shown that in this diagram okay
let<00:16:11.770><c> me</c><00:16:11.860><c> get</c><00:16:12.040><c> that</c>

00:16:17.020 --> 00:16:17.030 align:start position:0%
 
 

00:16:17.030 --> 00:16:19.360 align:start position:0%
 
now<00:16:17.630><c> that</c><00:16:17.840><c> you've</c><00:16:17.960><c> seen</c><00:16:18.140><c> some</c><00:16:18.350><c> examples</c><00:16:18.530><c> of</c>

00:16:19.360 --> 00:16:19.370 align:start position:0%
now that you've seen some examples of
 

00:16:19.370 --> 00:16:22.930 align:start position:0%
now that you've seen some examples of
what<00:16:19.760><c> core</c><00:16:20.030><c> foundation</c><00:16:20.510><c> contains</c><00:16:21.550><c> let's</c><00:16:22.550><c> talk</c>

00:16:22.930 --> 00:16:22.940 align:start position:0%
what core foundation contains let's talk
 

00:16:22.940 --> 00:16:24.930 align:start position:0%
what core foundation contains let's talk
about<00:16:23.300><c> some</c><00:16:23.540><c> of</c><00:16:23.630><c> the</c><00:16:23.690><c> overriding</c>

00:16:24.930 --> 00:16:24.940 align:start position:0%
about some of the overriding
 

00:16:24.940 --> 00:16:28.630 align:start position:0%
about some of the overriding
philosophies<00:16:26.530><c> concepts</c><00:16:27.530><c> and</c><00:16:27.860><c> conventions</c>

00:16:28.630 --> 00:16:28.640 align:start position:0%
philosophies concepts and conventions
 

00:16:28.640 --> 00:16:31.690 align:start position:0%
philosophies concepts and conventions
used<00:16:28.850><c> in</c><00:16:29.060><c> core</c><00:16:29.270><c> foundation</c><00:16:30.370><c> these</c><00:16:31.370><c> are</c><00:16:31.430><c> the</c>

00:16:31.690 --> 00:16:31.700 align:start position:0%
used in core foundation these are the
 

00:16:31.700 --> 00:16:34.420 align:start position:0%
used in core foundation these are the
keys<00:16:32.150><c> to</c><00:16:32.540><c> understanding</c><00:16:32.720><c> core</c><00:16:33.680><c> foundation</c>

00:16:34.420 --> 00:16:34.430 align:start position:0%
keys to understanding core foundation
 

00:16:34.430 --> 00:16:36.730 align:start position:0%
keys to understanding core foundation
really<00:16:34.640><c> because</c><00:16:35.210><c> once</c><00:16:35.810><c> you</c><00:16:35.960><c> understand</c><00:16:36.500><c> these</c>

00:16:36.730 --> 00:16:36.740 align:start position:0%
really because once you understand these
 

00:16:36.740 --> 00:16:38.950 align:start position:0%
really because once you understand these
you<00:16:37.040><c> understand</c><00:16:37.490><c> the</c><00:16:37.640><c> basic</c><00:16:38.120><c> operation</c><00:16:38.840><c> of</c>

00:16:38.950 --> 00:16:38.960 align:start position:0%
you understand the basic operation of
 

00:16:38.960 --> 00:16:42.190 align:start position:0%
you understand the basic operation of
all<00:16:39.170><c> core</c><00:16:39.530><c> foundation</c><00:16:40.130><c> api's</c><00:16:41.200><c> often</c>

00:16:42.190 --> 00:16:42.200 align:start position:0%
all core foundation api's often
 

00:16:42.200 --> 00:16:44.590 align:start position:0%
all core foundation api's often
higher-level<00:16:42.710><c> api's</c><00:16:43.340><c> which</c><00:16:43.880><c> are</c><00:16:44.120><c> based</c><00:16:44.420><c> upon</c>

00:16:44.590 --> 00:16:44.600 align:start position:0%
higher-level api's which are based upon
 

00:16:44.600 --> 00:16:47.020 align:start position:0%
higher-level api's which are based upon
core<00:16:45.020><c> foundation</c><00:16:45.650><c> have</c><00:16:45.890><c> also</c><00:16:46.160><c> adopted</c><00:16:46.640><c> these</c>

00:16:47.020 --> 00:16:47.030 align:start position:0%
core foundation have also adopted these
 

00:16:47.030 --> 00:16:50.080 align:start position:0%
core foundation have also adopted these
conventions<00:16:47.750><c> and</c><00:16:48.160><c> picking</c><00:16:49.160><c> up</c><00:16:49.250><c> a</c><00:16:49.400><c> new</c><00:16:49.610><c> bit</c><00:16:49.910><c> of</c>

00:16:50.080 --> 00:16:50.090 align:start position:0%
conventions and picking up a new bit of
 

00:16:50.090 --> 00:16:52.030 align:start position:0%
conventions and picking up a new bit of
core<00:16:50.330><c> foundation</c><00:16:50.870><c> api's</c><00:16:51.410><c> or</c><00:16:51.800><c> those</c>

00:16:52.030 --> 00:16:52.040 align:start position:0%
core foundation api's or those
 

00:16:52.040 --> 00:16:53.950 align:start position:0%
core foundation api's or those
higher-level<00:16:52.580><c> api's</c><00:16:53.120><c> which</c><00:16:53.360><c> use</c><00:16:53.570><c> the</c><00:16:53.750><c> same</c>

00:16:53.950 --> 00:16:53.960 align:start position:0%
higher-level api's which use the same
 

00:16:53.960 --> 00:16:58.180 align:start position:0%
higher-level api's which use the same
conventions<00:16:54.650><c> is</c><00:16:55.610><c> thus</c><00:16:56.000><c> much</c><00:16:56.930><c> simpler</c><00:16:57.410><c> and</c><00:16:57.800><c> you</c>

00:16:58.180 --> 00:16:58.190 align:start position:0%
conventions is thus much simpler and you
 

00:16:58.190 --> 00:16:59.830 align:start position:0%
conventions is thus much simpler and you
only<00:16:58.340><c> have</c><00:16:58.520><c> to</c><00:16:58.610><c> really</c><00:16:58.850><c> concentrate</c><00:16:59.000><c> on</c><00:16:59.420><c> what</c>

00:16:59.830 --> 00:16:59.840 align:start position:0%
only have to really concentrate on what
 

00:16:59.840 --> 00:17:03.970 align:start position:0%
only have to really concentrate on what
those<00:17:00.470><c> specific</c><00:17:00.790><c> api's</c><00:17:01.790><c> do</c><00:17:02.830><c> what</c><00:17:03.830><c> their</c>

00:17:03.970 --> 00:17:03.980 align:start position:0%
those specific api's do what their
 

00:17:03.980 --> 00:17:09.460 align:start position:0%
those specific api's do what their
specific<00:17:04.430><c> behaviors</c><00:17:05.000><c> are</c><00:17:05.360><c> and</c><00:17:05.720><c> not</c><00:17:08.319><c> have</c><00:17:09.319><c> to</c>

00:17:09.460 --> 00:17:09.470 align:start position:0%
specific behaviors are and not have to
 

00:17:09.470 --> 00:17:11.230 align:start position:0%
specific behaviors are and not have to
worry<00:17:09.709><c> about</c><00:17:09.800><c> figuring</c><00:17:10.220><c> out</c><00:17:10.459><c> what</c><00:17:10.640><c> the</c><00:17:10.850><c> memory</c>

00:17:11.230 --> 00:17:11.240 align:start position:0%
worry about figuring out what the memory
 

00:17:11.240 --> 00:17:13.630 align:start position:0%
worry about figuring out what the memory
management<00:17:11.720><c> conventions</c><00:17:12.410><c> are</c><00:17:12.620><c> for</c><00:17:13.189><c> example</c>

00:17:13.630 --> 00:17:13.640 align:start position:0%
management conventions are for example
 

00:17:13.640 --> 00:17:16.720 align:start position:0%
management conventions are for example
for<00:17:13.819><c> those</c><00:17:13.910><c> api's</c><00:17:14.650><c> in</c><00:17:15.650><c> particular</c><00:17:16.010><c> it</c><00:17:16.670><c> is</c>

00:17:16.720 --> 00:17:16.730 align:start position:0%
for those api's in particular it is
 

00:17:16.730 --> 00:17:18.340 align:start position:0%
for those api's in particular it is
important<00:17:17.240><c> to</c><00:17:17.270><c> understand</c><00:17:17.810><c> the</c><00:17:18.020><c> memory</c>

00:17:18.340 --> 00:17:18.350 align:start position:0%
important to understand the memory
 

00:17:18.350 --> 00:17:20.470 align:start position:0%
important to understand the memory
management<00:17:18.709><c> strategy</c><00:17:19.430><c> and</c><00:17:19.459><c> conventions</c><00:17:20.360><c> of</c>

00:17:20.470 --> 00:17:20.480 align:start position:0%
management strategy and conventions of
 

00:17:20.480 --> 00:17:22.569 align:start position:0%
management strategy and conventions of
core<00:17:20.720><c> foundation</c><00:17:21.319><c> because</c><00:17:22.280><c> without</c><00:17:22.400><c> that</c>

00:17:22.569 --> 00:17:22.579 align:start position:0%
core foundation because without that
 

00:17:22.579 --> 00:17:24.370 align:start position:0%
core foundation because without that
understanding<00:17:23.420><c> you</c><00:17:23.510><c> really</c><00:17:23.780><c> cannot</c><00:17:24.079><c> make</c>

00:17:24.370 --> 00:17:24.380 align:start position:0%
understanding you really cannot make
 

00:17:24.380 --> 00:17:29.410 align:start position:0%
understanding you really cannot make
proper<00:17:24.980><c> use</c><00:17:25.010><c> of</c><00:17:25.220><c> core</c><00:17:25.640><c> foundation</c><00:17:28.420><c> the</c>

00:17:29.410 --> 00:17:29.420 align:start position:0%
proper use of core foundation the
 

00:17:29.420 --> 00:17:30.910 align:start position:0%
proper use of core foundation the
general<00:17:29.750><c> philosophy</c><00:17:29.990><c> behind</c><00:17:30.530><c> core</c>

00:17:30.910 --> 00:17:30.920 align:start position:0%
general philosophy behind core
 

00:17:30.920 --> 00:17:32.370 align:start position:0%
general philosophy behind core
foundation<00:17:31.550><c> was</c><00:17:31.820><c> to</c><00:17:32.060><c> create</c><00:17:32.270><c> a</c>

00:17:32.370 --> 00:17:32.380 align:start position:0%
foundation was to create a
 

00:17:32.380 --> 00:17:35.790 align:start position:0%
foundation was to create a
high-performance<00:17:33.380><c> general</c><00:17:34.250><c> utility</c><00:17:34.550><c> API</c>

00:17:35.790 --> 00:17:35.800 align:start position:0%
high-performance general utility API
 

00:17:35.800 --> 00:17:38.920 align:start position:0%
high-performance general utility API
that<00:17:36.800><c> could</c><00:17:37.130><c> be</c><00:17:37.310><c> used</c><00:17:37.580><c> as</c><00:17:37.790><c> a</c><00:17:37.820><c> substrate</c><00:17:38.540><c> that</c>

00:17:38.920 --> 00:17:38.930 align:start position:0%
that could be used as a substrate that
 

00:17:38.930 --> 00:17:41.530 align:start position:0%
that could be used as a substrate that
is<00:17:39.440><c> an</c><00:17:39.650><c> underlying</c><00:17:40.130><c> layer</c><00:17:40.490><c> beneath</c><00:17:41.300><c> both</c>

00:17:41.530 --> 00:17:41.540 align:start position:0%
is an underlying layer beneath both
 

00:17:41.540 --> 00:17:45.550 align:start position:0%
is an underlying layer beneath both
carbon<00:17:42.200><c> and</c><00:17:42.380><c> cocoa</c><00:17:43.600><c> we</c><00:17:44.600><c> took</c><00:17:44.780><c> many</c><00:17:44.930><c> concepts</c>

00:17:45.550 --> 00:17:45.560 align:start position:0%
carbon and cocoa we took many concepts
 

00:17:45.560 --> 00:17:49.270 align:start position:0%
carbon and cocoa we took many concepts
that<00:17:45.650><c> were</c><00:17:45.830><c> already</c><00:17:46.310><c> in</c><00:17:46.670><c> cocoa</c><00:17:47.330><c> and</c><00:17:48.280><c> recast</c>

00:17:49.270 --> 00:17:49.280 align:start position:0%
that were already in cocoa and recast
 

00:17:49.280 --> 00:17:52.630 align:start position:0%
that were already in cocoa and recast
them<00:17:49.640><c> down</c><00:17:50.030><c> into</c><00:17:50.420><c> a</c><00:17:50.570><c> C</c><00:17:50.930><c> API</c><00:17:51.110><c> which</c><00:17:51.980><c> could</c><00:17:52.460><c> have</c>

00:17:52.630 --> 00:17:52.640 align:start position:0%
them down into a C API which could have
 

00:17:52.640 --> 00:17:56.770 align:start position:0%
them down into a C API which could have
wider<00:17:53.540><c> utility</c><00:17:54.880><c> more</c><00:17:55.880><c> people</c><00:17:56.240><c> could</c><00:17:56.390><c> make</c><00:17:56.540><c> use</c>

00:17:56.770 --> 00:17:56.780 align:start position:0%
wider utility more people could make use
 

00:17:56.780 --> 00:17:59.200 align:start position:0%
wider utility more people could make use
of<00:17:56.810><c> it</c><00:17:57.080><c> and</c><00:17:57.350><c> at</c><00:17:57.860><c> the</c><00:17:57.950><c> same</c><00:17:58.160><c> time</c><00:17:58.430><c> we</c><00:17:58.670><c> extended</c>

00:17:59.200 --> 00:17:59.210 align:start position:0%
of it and at the same time we extended
 

00:17:59.210 --> 00:18:01.990 align:start position:0%
of it and at the same time we extended
them<00:17:59.390><c> with</c><00:17:59.660><c> some</c><00:17:59.840><c> additional</c><00:18:00.260><c> features</c><00:18:01.000><c> the</c>

00:18:01.990 --> 00:18:02.000 align:start position:0%
them with some additional features the
 

00:18:02.000 --> 00:18:05.170 align:start position:0%
them with some additional features the
most<00:18:02.150><c> important</c><00:18:02.690><c> aspect</c><00:18:03.350><c> to</c><00:18:03.440><c> the</c><00:18:03.620><c> design</c><00:18:04.180><c> was</c>

00:18:05.170 --> 00:18:05.180 align:start position:0%
most important aspect to the design was
 

00:18:05.180 --> 00:18:06.910 align:start position:0%
most important aspect to the design was
that<00:18:05.210><c> the</c><00:18:05.480><c> core</c><00:18:05.660><c> foundation</c><00:18:06.110><c> API</c><00:18:06.440><c> should</c><00:18:06.530><c> be</c>

00:18:06.910 --> 00:18:06.920 align:start position:0%
that the core foundation API should be
 

00:18:06.920 --> 00:18:10.480 align:start position:0%
that the core foundation API should be
consistent<00:18:07.430><c> an</c><00:18:08.110><c> API</c><00:18:09.110><c> with</c><00:18:09.620><c> a</c><00:18:09.860><c> high</c><00:18:10.160><c> degree</c><00:18:10.340><c> of</c>

00:18:10.480 --> 00:18:10.490 align:start position:0%
consistent an API with a high degree of
 

00:18:10.490 --> 00:18:13.750 align:start position:0%
consistent an API with a high degree of
consistency<00:18:11.710><c> feels</c><00:18:12.710><c> like</c><00:18:12.890><c> a</c><00:18:12.920><c> more</c><00:18:13.220><c> unified</c>

00:18:13.750 --> 00:18:13.760 align:start position:0%
consistency feels like a more unified
 

00:18:13.760 --> 00:18:17.260 align:start position:0%
consistency feels like a more unified
and<00:18:13.790><c> cohesive</c><00:18:14.410><c> API</c><00:18:15.580><c> than</c><00:18:16.580><c> one</c><00:18:16.850><c> without</c>

00:18:17.260 --> 00:18:17.270 align:start position:0%
and cohesive API than one without
 

00:18:17.270 --> 00:18:20.080 align:start position:0%
and cohesive API than one without
consistency<00:18:17.840><c> and</c><00:18:18.500><c> it</c><00:18:19.010><c> is</c><00:18:19.130><c> much</c><00:18:19.370><c> simpler</c><00:18:19.970><c> to</c>

00:18:20.080 --> 00:18:20.090 align:start position:0%
consistency and it is much simpler to
 

00:18:20.090 --> 00:18:25.180 align:start position:0%
consistency and it is much simpler to
use<00:18:20.890><c> cohesive</c><00:18:21.890><c> API</c><00:18:22.280><c> much</c><00:18:22.790><c> much</c><00:18:23.090><c> more</c><00:18:24.190><c> natural</c>

00:18:25.180 --> 00:18:25.190 align:start position:0%
use cohesive API much much more natural
 

00:18:25.190 --> 00:18:28.180 align:start position:0%
use cohesive API much much more natural
again<00:18:25.520><c> to</c><00:18:25.670><c> pick</c><00:18:25.850><c> up</c><00:18:26.090><c> new</c><00:18:26.480><c> API</c><00:18:26.960><c> bits</c><00:18:27.620><c> of</c><00:18:27.740><c> the</c><00:18:27.830><c> API</c>

00:18:28.180 --> 00:18:28.190 align:start position:0%
again to pick up new API bits of the API
 

00:18:28.190 --> 00:18:31.920 align:start position:0%
again to pick up new API bits of the API
when<00:18:29.030><c> the</c><00:18:29.300><c> API</c><00:18:29.600><c> is</c><00:18:29.750><c> going</c>

00:18:31.920 --> 00:18:31.930 align:start position:0%
when the API is going
 

00:18:31.930 --> 00:18:35.140 align:start position:0%
when the API is going
we<00:18:32.930><c> also</c><00:18:33.110><c> decided</c><00:18:33.530><c> to</c><00:18:33.650><c> design</c><00:18:33.980><c> a</c><00:18:34.040><c> peer</c><00:18:34.370><c> API</c>

00:18:35.140 --> 00:18:35.150 align:start position:0%
we also decided to design a peer API
 

00:18:35.150 --> 00:18:38.410 align:start position:0%
we also decided to design a peer API
around<00:18:35.740><c> object-oriented</c><00:18:36.740><c> models</c><00:18:37.250><c> this</c><00:18:38.150><c> gave</c>

00:18:38.410 --> 00:18:38.420 align:start position:0%
around object-oriented models this gave
 

00:18:38.420 --> 00:18:40.450 align:start position:0%
around object-oriented models this gave
us<00:18:38.450><c> a</c><00:18:38.660><c> way</c><00:18:38.750><c> to</c><00:18:38.780><c> logically</c><00:18:39.620><c> structure</c><00:18:40.040><c> the</c><00:18:40.160><c> API</c>

00:18:40.450 --> 00:18:40.460 align:start position:0%
us a way to logically structure the API
 

00:18:40.460 --> 00:18:43.540 align:start position:0%
us a way to logically structure the API
and<00:18:41.140><c> means</c><00:18:42.140><c> to</c><00:18:42.290><c> more</c><00:18:42.590><c> easily</c><00:18:42.770><c> separate</c>

00:18:43.540 --> 00:18:43.550 align:start position:0%
and means to more easily separate
 

00:18:43.550 --> 00:18:47.230 align:start position:0%
and means to more easily separate
interface<00:18:44.210><c> from</c><00:18:45.020><c> implementation</c><00:18:46.240><c> for</c>

00:18:47.230 --> 00:18:47.240 align:start position:0%
interface from implementation for
 

00:18:47.240 --> 00:18:49.360 align:start position:0%
interface from implementation for
example<00:18:47.690><c> nearly</c><00:18:48.230><c> all</c><00:18:48.410><c> data</c><00:18:48.710><c> types</c><00:18:49.010><c> and</c><00:18:49.190><c> core</c>

00:18:49.360 --> 00:18:49.370 align:start position:0%
example nearly all data types and core
 

00:18:49.370 --> 00:18:52.570 align:start position:0%
example nearly all data types and core
foundation<00:18:49.970><c> are</c><00:18:50.240><c> opaque</c><00:18:50.990><c> and</c><00:18:51.320><c> you</c><00:18:52.250><c> don't</c><00:18:52.460><c> know</c>

00:18:52.570 --> 00:18:52.580 align:start position:0%
foundation are opaque and you don't know
 

00:18:52.580 --> 00:18:55.330 align:start position:0%
foundation are opaque and you don't know
how<00:18:52.760><c> they</c><00:18:53.000><c> are</c><00:18:53.120><c> implemented</c><00:18:54.130><c> this</c><00:18:55.130><c> also</c>

00:18:55.330 --> 00:18:55.340 align:start position:0%
how they are implemented this also
 

00:18:55.340 --> 00:18:57.220 align:start position:0%
how they are implemented this also
allows<00:18:55.670><c> ample</c><00:18:55.910><c> to</c><00:18:56.210><c> make</c><00:18:56.330><c> improvements</c><00:18:56.660><c> in</c><00:18:57.110><c> the</c>

00:18:57.220 --> 00:18:57.230 align:start position:0%
allows ample to make improvements in the
 

00:18:57.230 --> 00:18:59.890 align:start position:0%
allows ample to make improvements in the
implementation<00:18:58.070><c> over</c><00:18:58.310><c> time</c><00:18:58.640><c> without</c><00:18:59.480><c> being</c>

00:18:59.890 --> 00:18:59.900 align:start position:0%
implementation over time without being
 

00:18:59.900 --> 00:19:02.250 align:start position:0%
implementation over time without being
constrained<00:19:00.200><c> by</c><00:19:00.800><c> open</c><00:19:01.250><c> data</c><00:19:01.460><c> structures</c>

00:19:02.250 --> 00:19:02.260 align:start position:0%
constrained by open data structures
 

00:19:02.260 --> 00:19:06.250 align:start position:0%
constrained by open data structures
however<00:19:03.260><c> it</c><00:19:03.320><c> also</c><00:19:03.470><c> means</c><00:19:03.920><c> that</c><00:19:04.780><c> all</c><00:19:05.780><c> core</c>

00:19:06.250 --> 00:19:06.260 align:start position:0%
however it also means that all core
 

00:19:06.260 --> 00:19:08.950 align:start position:0%
however it also means that all core
foundation<00:19:06.860><c> a</c><00:19:06.980><c> objects</c><00:19:07.790><c> are</c><00:19:08.060><c> essentially</c>

00:19:08.950 --> 00:19:08.960 align:start position:0%
foundation a objects are essentially
 

00:19:08.960 --> 00:19:13.780 align:start position:0%
foundation a objects are essentially
going<00:19:09.230><c> to</c><00:19:09.350><c> be</c><00:19:09.500><c> allocated</c><00:19:10.280><c> off</c><00:19:10.400><c> the</c><00:19:10.580><c> heap</c><00:19:12.790><c> in</c>

00:19:13.780 --> 00:19:13.790 align:start position:0%
going to be allocated off the heap in
 

00:19:13.790 --> 00:19:16.420 align:start position:0%
going to be allocated off the heap in
part<00:19:14.750><c> to</c><00:19:15.440><c> achieve</c><00:19:15.740><c> the</c><00:19:15.890><c> goal</c><00:19:16.160><c> of</c>

00:19:16.420 --> 00:19:16.430 align:start position:0%
part to achieve the goal of
 

00:19:16.430 --> 00:19:17.350 align:start position:0%
part to achieve the goal of
high-performance

00:19:17.350 --> 00:19:17.360 align:start position:0%
high-performance
 

00:19:17.360 --> 00:19:20.640 align:start position:0%
high-performance
API<00:19:17.960><c> we</c><00:19:18.650><c> decided</c><00:19:19.130><c> to</c><00:19:19.220><c> limit</c><00:19:19.460><c> the</c><00:19:19.730><c> types</c><00:19:20.030><c> of</c>

00:19:20.640 --> 00:19:20.650 align:start position:0%
API we decided to limit the types of
 

00:19:20.650 --> 00:19:23.440 align:start position:0%
API we decided to limit the types of
validation<00:19:21.650><c> and</c><00:19:21.890><c> checking</c><00:19:22.550><c> that</c><00:19:22.880><c> the</c><00:19:23.060><c> API</c>

00:19:23.440 --> 00:19:23.450 align:start position:0%
validation and checking that the API
 

00:19:23.450 --> 00:19:27.640 align:start position:0%
validation and checking that the API
does<00:19:24.130><c> limit</c><00:19:25.130><c> those</c><00:19:25.310><c> to</c><00:19:25.610><c> runtime</c><00:19:26.390><c> errors</c><00:19:26.900><c> thus</c>

00:19:27.640 --> 00:19:27.650 align:start position:0%
does limit those to runtime errors thus
 

00:19:27.650 --> 00:19:28.920 align:start position:0%
does limit those to runtime errors thus
there's<00:19:27.890><c> very</c><00:19:28.130><c> little</c><00:19:28.310><c> checking</c><00:19:28.730><c> of</c>

00:19:28.920 --> 00:19:28.930 align:start position:0%
there's very little checking of
 

00:19:28.930 --> 00:19:32.290 align:start position:0%
there's very little checking of
programming<00:19:29.930><c> errors</c><00:19:30.350><c> like</c><00:19:30.710><c> passing</c><00:19:31.610><c> in</c><00:19:31.820><c> wrong</c>

00:19:32.290 --> 00:19:32.300 align:start position:0%
programming errors like passing in wrong
 

00:19:32.300 --> 00:19:35.800 align:start position:0%
programming errors like passing in wrong
parameters<00:19:33.050><c> in</c><00:19:33.850><c> the</c><00:19:34.850><c> production</c><00:19:35.150><c> version</c><00:19:35.480><c> of</c>

00:19:35.800 --> 00:19:35.810 align:start position:0%
parameters in the production version of
 

00:19:35.810 --> 00:19:41.170 align:start position:0%
parameters in the production version of
the<00:19:35.960><c> library</c><00:19:37.330><c> which</c><00:19:38.330><c> is</c><00:19:39.490><c> the</c><00:19:40.490><c> one</c><00:19:40.640><c> normally</c>

00:19:41.170 --> 00:19:41.180 align:start position:0%
the library which is the one normally
 

00:19:41.180 --> 00:19:43.570 align:start position:0%
the library which is the one normally
that<00:19:41.510><c> users</c><00:19:41.840><c> are</c><00:19:41.990><c> running</c><00:19:42.140><c> it</c><00:19:42.380><c> against</c><00:19:42.830><c> we</c>

00:19:43.570 --> 00:19:43.580 align:start position:0%
that users are running it against we
 

00:19:43.580 --> 00:19:45.790 align:start position:0%
that users are running it against we
don't<00:19:43.820><c> have</c><00:19:44.120><c> a</c><00:19:44.540><c> lot</c><00:19:44.870><c> of</c><00:19:44.900><c> these</c><00:19:45.110><c> any</c>

00:19:45.790 --> 00:19:45.800 align:start position:0%
don't have a lot of these any
 

00:19:45.800 --> 00:19:49.690 align:start position:0%
don't have a lot of these any
programming<00:19:46.580><c> error</c><00:19:47.180><c> type</c><00:19:47.930><c> checks</c><00:19:48.460><c> we</c><00:19:49.460><c> put</c>

00:19:49.690 --> 00:19:49.700 align:start position:0%
programming error type checks we put
 

00:19:49.700 --> 00:19:51.520 align:start position:0%
programming error type checks we put
these<00:19:49.910><c> instead</c><00:19:50.330><c> in</c><00:19:50.570><c> the</c><00:19:50.720><c> debug</c><00:19:51.080><c> version</c><00:19:51.290><c> of</c>

00:19:51.520 --> 00:19:51.530 align:start position:0%
these instead in the debug version of
 

00:19:51.530 --> 00:19:54.340 align:start position:0%
these instead in the debug version of
the<00:19:51.590><c> library</c><00:19:51.740><c> which</c><00:19:52.730><c> uses</c><00:19:53.420><c> assertions</c><00:19:54.050><c> and</c>

00:19:54.340 --> 00:19:54.350 align:start position:0%
the library which uses assertions and
 

00:19:54.350 --> 00:19:56.890 align:start position:0%
the library which uses assertions and
other<00:19:54.980><c> checks</c><00:19:55.430><c> to</c><00:19:55.850><c> you</c><00:19:56.000><c> look</c><00:19:56.360><c> for</c><00:19:56.510><c> these</c><00:19:56.630><c> sorts</c>

00:19:56.890 --> 00:19:56.900 align:start position:0%
other checks to you look for these sorts
 

00:19:56.900 --> 00:19:59.710 align:start position:0%
other checks to you look for these sorts
of<00:19:56.990><c> programming</c><00:19:57.530><c> errors</c><00:19:57.860><c> like</c><00:19:58.060><c> passing</c><00:19:59.060><c> in</c>

00:19:59.710 --> 00:19:59.720 align:start position:0%
of programming errors like passing in
 

00:19:59.720 --> 00:20:03.340 align:start position:0%
of programming errors like passing in
bad<00:20:00.530><c> type</c><00:20:00.800><c> of</c><00:20:00.950><c> object</c><00:20:01.460><c> or</c><00:20:01.870><c> what</c><00:20:02.870><c> have</c><00:20:03.020><c> you</c>

00:20:03.340 --> 00:20:03.350 align:start position:0%
bad type of object or what have you
 

00:20:03.350 --> 00:20:05.860 align:start position:0%
bad type of object or what have you
one<00:20:04.280><c> of</c><00:20:04.370><c> the</c><00:20:04.430><c> ways</c><00:20:04.610><c> to</c><00:20:04.850><c> run</c><00:20:05.090><c> against</c><00:20:05.450><c> the</c><00:20:05.510><c> debug</c>

00:20:05.860 --> 00:20:05.870 align:start position:0%
one of the ways to run against the debug
 

00:20:05.870 --> 00:20:08.860 align:start position:0%
one of the ways to run against the debug
version<00:20:06.620><c> of</c><00:20:06.710><c> the</c><00:20:06.800><c> library</c><00:20:07.400><c> is</c><00:20:07.730><c> explained</c><00:20:08.660><c> in</c>

00:20:08.860 --> 00:20:08.870 align:start position:0%
version of the library is explained in
 

00:20:08.870 --> 00:20:10.960 align:start position:0%
version of the library is explained in
the<00:20:09.050><c> core</c><00:20:09.320><c> foundation</c><00:20:09.890><c> release</c><00:20:10.220><c> notes</c><00:20:10.490><c> on</c><00:20:10.790><c> the</c>

00:20:10.960 --> 00:20:10.970 align:start position:0%
the core foundation release notes on the
 

00:20:10.970 --> 00:20:15.130 align:start position:0%
the core foundation release notes on the
system

00:20:15.130 --> 00:20:15.140 align:start position:0%
 
 

00:20:15.140 --> 00:20:18.400 align:start position:0%
 
to<00:20:15.920><c> ensure</c><00:20:16.190><c> consistency</c><00:20:16.940><c> we</c><00:20:17.690><c> adopted</c><00:20:18.140><c> several</c>

00:20:18.400 --> 00:20:18.410 align:start position:0%
to ensure consistency we adopted several
 

00:20:18.410 --> 00:20:21.880 align:start position:0%
to ensure consistency we adopted several
naming<00:20:18.890><c> and</c><00:20:19.040><c> argument</c><00:20:19.520><c> conventions</c><00:20:20.170><c> a</c><00:20:21.170><c> few</c><00:20:21.650><c> of</c>

00:20:21.880 --> 00:20:21.890 align:start position:0%
naming and argument conventions a few of
 

00:20:21.890 --> 00:20:23.440 align:start position:0%
naming and argument conventions a few of
them<00:20:22.100><c> are</c><00:20:22.310><c> listed</c><00:20:22.340><c> here</c><00:20:22.700><c> not</c><00:20:23.030><c> all</c><00:20:23.060><c> of</c><00:20:23.330><c> them</c>

00:20:23.440 --> 00:20:23.450 align:start position:0%
them are listed here not all of them
 

00:20:23.450 --> 00:20:26.200 align:start position:0%
them are listed here not all of them
certainly<00:20:23.890><c> the</c><00:20:24.890><c> abstract</c><00:20:25.250><c> data</c><00:20:25.460><c> types</c><00:20:25.850><c> and</c>

00:20:26.200 --> 00:20:26.210 align:start position:0%
certainly the abstract data types and
 

00:20:26.210 --> 00:20:28.390 align:start position:0%
certainly the abstract data types and
most<00:20:26.690><c> higher-level</c><00:20:27.530><c> functionality</c><00:20:28.310><c> is</c>

00:20:28.390 --> 00:20:28.400 align:start position:0%
most higher-level functionality is
 

00:20:28.400 --> 00:20:32.350 align:start position:0%
most higher-level functionality is
grouped<00:20:28.730><c> into</c><00:20:29.170><c> classes</c><00:20:30.170><c> or</c><00:20:30.610><c> modules</c><00:20:31.610><c> like</c><00:20:32.150><c> in</c>

00:20:32.350 --> 00:20:32.360 align:start position:0%
grouped into classes or modules like in
 

00:20:32.360 --> 00:20:34.270 align:start position:0%
grouped into classes or modules like in
many<00:20:32.510><c> object-oriented</c><00:20:33.440><c> or</c><00:20:33.650><c> modular</c>

00:20:34.270 --> 00:20:34.280 align:start position:0%
many object-oriented or modular
 

00:20:34.280 --> 00:20:36.700 align:start position:0%
many object-oriented or modular
languages<00:20:34.960><c> we've</c><00:20:35.960><c> seen</c><00:20:36.200><c> several</c><00:20:36.470><c> examples</c>

00:20:36.700 --> 00:20:36.710 align:start position:0%
languages we've seen several examples
 

00:20:36.710 --> 00:20:41.050 align:start position:0%
languages we've seen several examples
already<00:20:37.490><c> like</c><00:20:37.790><c> CF</c><00:20:38.210><c> string</c><00:20:38.660><c> and</c><00:20:39.020><c> CF</c><00:20:39.290><c> number</c><00:20:40.060><c> the</c>

00:20:41.050 --> 00:20:41.060 align:start position:0%
already like CF string and CF number the
 

00:20:41.060 --> 00:20:43.150 align:start position:0%
already like CF string and CF number the
type<00:20:41.300><c> of</c><00:20:41.510><c> an</c><00:20:41.630><c> instance</c><00:20:42.050><c> of</c><00:20:42.260><c> such</c><00:20:42.470><c> a</c><00:20:42.500><c> class</c><00:20:42.830><c> is</c>

00:20:43.150 --> 00:20:43.160 align:start position:0%
type of an instance of such a class is
 

00:20:43.160 --> 00:20:46.120 align:start position:0%
type of an instance of such a class is
named<00:20:43.400><c> with</c><00:20:43.640><c> the</c><00:20:43.910><c> class</c><00:20:44.180><c> name</c><00:20:44.680><c> plus</c><00:20:45.680><c> the</c><00:20:45.710><c> term</c>

00:20:46.120 --> 00:20:46.130 align:start position:0%
named with the class name plus the term
 

00:20:46.130 --> 00:20:49.870 align:start position:0%
named with the class name plus the term
ref<00:20:46.760><c> and</c><00:20:47.320><c> that</c><00:20:48.320><c> is</c><00:20:48.470><c> an</c><00:20:48.620><c> opaque</c><00:20:48.950><c> reference</c><00:20:49.550><c> to</c>

00:20:49.870 --> 00:20:49.880 align:start position:0%
ref and that is an opaque reference to
 

00:20:49.880 --> 00:20:53.920 align:start position:0%
ref and that is an opaque reference to
an<00:20:50.000><c> object</c><00:20:50.180><c> of</c><00:20:50.780><c> that</c><00:20:50.810><c> class</c><00:20:52.360><c> the</c><00:20:53.360><c> operations</c>

00:20:53.920 --> 00:20:53.930 align:start position:0%
an object of that class the operations
 

00:20:53.930 --> 00:20:57.070 align:start position:0%
an object of that class the operations
on<00:20:54.080><c> that</c><00:20:54.230><c> type</c><00:20:54.500><c> are</c><00:20:54.850><c> functions</c><00:20:55.850><c> then</c><00:20:56.480><c> that</c>

00:20:57.070 --> 00:20:57.080 align:start position:0%
on that type are functions then that
 

00:20:57.080 --> 00:20:59.830 align:start position:0%
on that type are functions then that
begin<00:20:57.680><c> with</c><00:20:57.890><c> the</c><00:20:58.100><c> class</c><00:20:58.340><c> name</c><00:20:58.700><c> just</c><00:20:59.600><c> as</c><00:20:59.720><c> the</c>

00:20:59.830 --> 00:20:59.840 align:start position:0%
begin with the class name just as the
 

00:20:59.840 --> 00:21:03.730 align:start position:0%
begin with the class name just as the
type<00:21:00.050><c> does</c><00:21:00.350><c> and</c><00:21:00.620><c> then</c><00:21:01.370><c> name</c><00:21:01.640><c> the</c><00:21:01.880><c> operation</c><00:21:02.780><c> so</c>

00:21:03.730 --> 00:21:03.740 align:start position:0%
type does and then name the operation so
 

00:21:03.740 --> 00:21:06.490 align:start position:0%
type does and then name the operation so
in<00:21:04.070><c> this</c><00:21:04.280><c> example</c><00:21:04.460><c> on</c><00:21:04.970><c> the</c><00:21:05.060><c> slide</c><00:21:05.300><c> we</c><00:21:05.570><c> have</c><00:21:05.780><c> CF</c>

00:21:06.490 --> 00:21:06.500 align:start position:0%
in this example on the slide we have CF
 

00:21:06.500 --> 00:21:07.800 align:start position:0%
in this example on the slide we have CF
string<00:21:06.830><c> which</c><00:21:06.980><c> is</c><00:21:07.100><c> the</c><00:21:07.190><c> name</c><00:21:07.340><c> of</c><00:21:07.370><c> the</c><00:21:07.520><c> class</c>

00:21:07.800 --> 00:21:07.810 align:start position:0%
string which is the name of the class
 

00:21:07.810 --> 00:21:10.300 align:start position:0%
string which is the name of the class
append<00:21:08.810><c> format</c><00:21:09.380><c> which</c><00:21:09.650><c> is</c><00:21:09.830><c> the</c><00:21:09.950><c> name</c><00:21:10.070><c> of</c><00:21:10.100><c> the</c>

00:21:10.300 --> 00:21:10.310 align:start position:0%
append format which is the name of the
 

00:21:10.310 --> 00:21:14.380 align:start position:0%
append format which is the name of the
operation<00:21:11.140><c> another</c><00:21:12.140><c> example</c><00:21:12.740><c> would</c><00:21:13.040><c> be</c><00:21:13.390><c> CF</c>

00:21:14.380 --> 00:21:14.390 align:start position:0%
operation another example would be CF
 

00:21:14.390 --> 00:21:18.070 align:start position:0%
operation another example would be CF
array<00:21:15.160><c> get</c><00:21:16.160><c> count</c><00:21:16.640><c> which</c><00:21:17.210><c> would</c><00:21:17.540><c> return</c><00:21:17.900><c> the</c>

00:21:18.070 --> 00:21:18.080 align:start position:0%
array get count which would return the
 

00:21:18.080 --> 00:21:20.680 align:start position:0%
array get count which would return the
number<00:21:18.260><c> of</c><00:21:18.530><c> elements</c><00:21:19.280><c> number</c><00:21:19.970><c> of</c><00:21:20.030><c> values</c><00:21:20.450><c> in</c>

00:21:20.680 --> 00:21:20.690 align:start position:0%
number of elements number of values in
 

00:21:20.690 --> 00:21:23.860 align:start position:0%
number of elements number of values in
the<00:21:21.110><c> CF</c><00:21:21.440><c> array</c><00:21:21.880><c> at</c><00:21:22.880><c> the</c><00:21:22.970><c> time</c><00:21:23.270><c> you</c><00:21:23.420><c> called</c><00:21:23.690><c> that</c>

00:21:23.860 --> 00:21:23.870 align:start position:0%
the CF array at the time you called that
 

00:21:23.870 --> 00:21:28.090 align:start position:0%
the CF array at the time you called that
function<00:21:25.240><c> also</c><00:21:26.240><c> in</c><00:21:27.110><c> this</c><00:21:27.320><c> object-oriented</c>

00:21:28.090 --> 00:21:28.100 align:start position:0%
function also in this object-oriented
 

00:21:28.100 --> 00:21:30.280 align:start position:0%
function also in this object-oriented
way<00:21:28.240><c> the</c><00:21:29.240><c> first</c><00:21:29.540><c> argument</c><00:21:29.810><c> to</c><00:21:30.170><c> these</c>

00:21:30.280 --> 00:21:30.290 align:start position:0%
way the first argument to these
 

00:21:30.290 --> 00:21:32.590 align:start position:0%
way the first argument to these
operations<00:21:30.920><c> is</c><00:21:31.130><c> always</c><00:21:31.550><c> the</c><00:21:31.700><c> object</c><00:21:32.270><c> which</c><00:21:32.570><c> is</c>

00:21:32.590 --> 00:21:32.600 align:start position:0%
operations is always the object which is
 

00:21:32.600 --> 00:21:37.000 align:start position:0%
operations is always the object which is
to<00:21:32.900><c> be</c><00:21:33.020><c> operated</c><00:21:33.560><c> upon</c><00:21:34.210><c> so</c><00:21:35.210><c> for</c><00:21:35.570><c> example</c><00:21:36.050><c> in</c><00:21:36.320><c> CF</c>

00:21:37.000 --> 00:21:37.010 align:start position:0%
to be operated upon so for example in CF
 

00:21:37.010 --> 00:21:40.210 align:start position:0%
to be operated upon so for example in CF
string<00:21:37.310><c> append</c><00:21:37.550><c> format</c><00:21:38.090><c> you</c><00:21:38.660><c> know</c><00:21:39.070><c> that</c><00:21:40.070><c> the</c>

00:21:40.210 --> 00:21:40.220 align:start position:0%
string append format you know that the
 

00:21:40.220 --> 00:21:42.340 align:start position:0%
string append format you know that the
first<00:21:40.430><c> argument</c><00:21:40.640><c> is</c><00:21:41.090><c> going</c><00:21:41.420><c> to</c><00:21:41.540><c> be</c><00:21:41.660><c> a</c><00:21:41.870><c> CF</c>

00:21:42.340 --> 00:21:42.350 align:start position:0%
first argument is going to be a CF
 

00:21:42.350 --> 00:21:46.720 align:start position:0%
first argument is going to be a CF
string<00:21:44.230><c> the</c><00:21:45.230><c> exception</c><00:21:46.070><c> of</c><00:21:46.130><c> course</c><00:21:46.190><c> is</c>

00:21:46.720 --> 00:21:46.730 align:start position:0%
string the exception of course is
 

00:21:46.730 --> 00:21:49.930 align:start position:0%
string the exception of course is
functions<00:21:47.330><c> which</c><00:21:47.510><c> create</c><00:21:47.900><c> new</c><00:21:48.140><c> objects</c><00:21:48.940><c> we</c>

00:21:49.930 --> 00:21:49.940 align:start position:0%
functions which create new objects we
 

00:21:49.940 --> 00:21:54.130 align:start position:0%
functions which create new objects we
call<00:21:50.180><c> these</c><00:21:50.330><c> create</c><00:21:50.810><c> functions</c><00:21:53.140><c> obviously</c>

00:21:54.130 --> 00:21:54.140 align:start position:0%
call these create functions obviously
 

00:21:54.140 --> 00:21:56.470 align:start position:0%
call these create functions obviously
there's<00:21:54.320><c> no</c><00:21:54.530><c> in</c><00:21:55.070><c> that</c><00:21:55.760><c> case</c><00:21:56.030><c> there's</c><00:21:56.330><c> no</c>

00:21:56.470 --> 00:21:56.480 align:start position:0%
there's no in that case there's no
 

00:21:56.480 --> 00:21:58.180 align:start position:0%
there's no in that case there's no
object<00:21:56.690><c> for</c><00:21:57.080><c> them</c><00:21:57.200><c> to</c><00:21:57.320><c> operate</c><00:21:57.470><c> upon</c><00:21:57.830><c> they're</c>

00:21:58.180 --> 00:21:58.190 align:start position:0%
object for them to operate upon they're
 

00:21:58.190 --> 00:22:02.840 align:start position:0%
object for them to operate upon they're
creating<00:21:58.580><c> a</c><00:21:58.670><c> new</c><00:21:58.820><c> object</c>

00:22:02.840 --> 00:22:02.850 align:start position:0%
 
 

00:22:02.850 --> 00:22:05.330 align:start position:0%
 
to<00:22:03.540><c> other</c><00:22:03.780><c> object</c><00:22:04.290><c> jointed</c><00:22:04.590><c> concepts</c><00:22:05.160><c> we</c>

00:22:05.330 --> 00:22:05.340 align:start position:0%
to other object jointed concepts we
 

00:22:05.340 --> 00:22:09.020 align:start position:0%
to other object jointed concepts we
adopted<00:22:05.970><c> in</c><00:22:06.290><c> corefoundation</c><00:22:07.290><c> to</c><00:22:08.070><c> limited</c>

00:22:09.020 --> 00:22:09.030 align:start position:0%
adopted in corefoundation to limited
 

00:22:09.030 --> 00:22:12.020 align:start position:0%
adopted in corefoundation to limited
extents<00:22:10.430><c> because</c><00:22:11.430><c> of</c><00:22:11.670><c> course</c><00:22:11.850><c> we're</c>

00:22:12.020 --> 00:22:12.030 align:start position:0%
extents because of course we're
 

00:22:12.030 --> 00:22:14.770 align:start position:0%
extents because of course we're
operating<00:22:12.510><c> in</c><00:22:12.990><c> the</c><00:22:13.350><c> C</c><00:22:13.590><c> language</c><00:22:13.800><c> which</c><00:22:14.250><c> is</c><00:22:14.400><c> not</c>

00:22:14.770 --> 00:22:14.780 align:start position:0%
operating in the C language which is not
 

00:22:14.780 --> 00:22:18.370 align:start position:0%
operating in the C language which is not
naturally<00:22:15.780><c> object-oriented</c><00:22:16.500><c> our</c>

00:22:18.370 --> 00:22:18.380 align:start position:0%
naturally object-oriented our
 

00:22:18.380 --> 00:22:21.340 align:start position:0%
naturally object-oriented our
polymorphism<00:22:19.380><c> and</c><00:22:19.650><c> introspection</c><00:22:20.520><c> a</c>

00:22:21.340 --> 00:22:21.350 align:start position:0%
polymorphism and introspection a
 

00:22:21.350 --> 00:22:23.630 align:start position:0%
polymorphism and introspection a
polymorphic<00:22:22.350><c> function</c><00:22:22.800><c> is</c><00:22:22.920><c> one</c><00:22:23.190><c> which</c><00:22:23.430><c> can</c>

00:22:23.630 --> 00:22:23.640 align:start position:0%
polymorphic function is one which can
 

00:22:23.640 --> 00:22:25.160 align:start position:0%
polymorphic function is one which can
operate<00:22:23.790><c> on</c><00:22:24.120><c> many</c><00:22:24.360><c> different</c><00:22:24.720><c> types</c><00:22:24.960><c> of</c>

00:22:25.160 --> 00:22:25.170 align:start position:0%
operate on many different types of
 

00:22:25.170 --> 00:22:29.410 align:start position:0%
operate on many different types of
values<00:22:25.620><c> in</c><00:22:26.120><c> corefoundation</c><00:22:27.120><c> we</c><00:22:27.810><c> have</c><00:22:28.190><c> eight</c>

00:22:29.410 --> 00:22:29.420 align:start position:0%
values in corefoundation we have eight
 

00:22:29.420 --> 00:22:32.540 align:start position:0%
values in corefoundation we have eight
functions<00:22:30.420><c> which</c><00:22:30.990><c> can</c><00:22:31.020><c> accept</c><00:22:31.500><c> references</c><00:22:32.220><c> to</c>

00:22:32.540 --> 00:22:32.550 align:start position:0%
functions which can accept references to
 

00:22:32.550 --> 00:22:38.180 align:start position:0%
functions which can accept references to
any<00:22:32.940><c> type</c><00:22:33.330><c> any</c><00:22:33.990><c> type</c><00:22:34.800><c> of</c><00:22:34.830><c> CF</c><00:22:35.400><c> object</c><00:22:35.940><c> as</c><00:22:37.190><c> their</c>

00:22:38.180 --> 00:22:38.190 align:start position:0%
any type any type of CF object as their
 

00:22:38.190 --> 00:22:40.670 align:start position:0%
any type any type of CF object as their
parameters<00:22:38.700><c> and</c><00:22:39.000><c> of</c><00:22:39.120><c> course</c><00:22:39.330><c> in</c><00:22:40.200><c> some</c><00:22:40.440><c> cases</c>

00:22:40.670 --> 00:22:40.680 align:start position:0%
parameters and of course in some cases
 

00:22:40.680 --> 00:22:44.540 align:start position:0%
parameters and of course in some cases
they<00:22:40.950><c> also</c><00:22:40.980><c> return</c><00:22:42.050><c> CF</c><00:22:43.050><c> types</c><00:22:43.740><c> which</c><00:22:44.070><c> are</c><00:22:44.220><c> CF</c>

00:22:44.540 --> 00:22:44.550 align:start position:0%
they also return CF types which are CF
 

00:22:44.550 --> 00:22:48.020 align:start position:0%
they also return CF types which are CF
objects<00:22:46.220><c> these</c><00:22:47.220><c> are</c><00:22:47.370><c> used</c><00:22:47.550><c> to</c><00:22:47.670><c> provide</c>

00:22:48.020 --> 00:22:48.030 align:start position:0%
objects these are used to provide
 

00:22:48.030 --> 00:22:51.380 align:start position:0%
objects these are used to provide
general<00:22:48.360><c> functionality</c><00:22:49.280><c> across</c><00:22:50.280><c> all</c><00:22:50.790><c> of</c><00:22:51.240><c> the</c>

00:22:51.380 --> 00:22:51.390 align:start position:0%
general functionality across all of the
 

00:22:51.390 --> 00:22:54.920 align:start position:0%
general functionality across all of the
core<00:22:51.600><c> foundation</c><00:22:51.750><c> types</c><00:22:53.390><c> let's</c><00:22:54.390><c> see</c><00:22:54.600><c> as</c><00:22:54.750><c> an</c>

00:22:54.920 --> 00:22:54.930 align:start position:0%
core foundation types let's see as an
 

00:22:54.930 --> 00:22:58.400 align:start position:0%
core foundation types let's see as an
example<00:22:55.320><c> to</c><00:22:56.310><c> find</c><00:22:56.490><c> out</c><00:22:56.730><c> what</c><00:22:56.940><c> type</c><00:22:57.330><c> an</c><00:22:57.630><c> object</c>

00:22:58.400 --> 00:22:58.410 align:start position:0%
example to find out what type an object
 

00:22:58.410 --> 00:23:01.340 align:start position:0%
example to find out what type an object
is<00:22:58.710><c> you</c><00:22:58.980><c> would</c><00:22:59.130><c> use</c><00:22:59.340><c> the</c><00:22:59.580><c> function</c><00:23:00.080><c> CF</c><00:23:01.080><c> get</c>

00:23:01.340 --> 00:23:01.350 align:start position:0%
is you would use the function CF get
 

00:23:01.350 --> 00:23:03.980 align:start position:0%
is you would use the function CF get
type<00:23:01.680><c> ID</c><00:23:01.950><c> the</c><00:23:02.610><c> introspection</c><00:23:03.150><c> function</c><00:23:03.810><c> there</c>

00:23:03.980 --> 00:23:03.990 align:start position:0%
type ID the introspection function there
 

00:23:03.990 --> 00:23:08.210 align:start position:0%
type ID the introspection function there
in<00:23:04.080><c> the</c><00:23:04.170><c> middle</c><00:23:04.410><c> C</c><00:23:05.190><c> if</c><00:23:05.280><c> get</c><00:23:05.460><c> type</c><00:23:05.730><c> ID</c><00:23:06.000><c> and</c><00:23:07.220><c> pass</c>

00:23:08.210 --> 00:23:08.220 align:start position:0%
in the middle C if get type ID and pass
 

00:23:08.220 --> 00:23:11.450 align:start position:0%
in the middle C if get type ID and pass
it<00:23:08.520><c> as</c><00:23:08.670><c> an</c><00:23:09.480><c> argument</c><00:23:09.600><c> a</c><00:23:10.110><c> CF</c><00:23:10.470><c> object</c><00:23:10.980><c> or</c><00:23:11.220><c> what</c>

00:23:11.450 --> 00:23:11.460 align:start position:0%
it as an argument a CF object or what
 

00:23:11.460 --> 00:23:14.210 align:start position:0%
it as an argument a CF object or what
you<00:23:11.640><c> believe</c><00:23:12.330><c> to</c><00:23:12.480><c> be</c><00:23:12.510><c> a</c><00:23:12.630><c> CF</c><00:23:12.900><c> object</c><00:23:13.410><c> and</c><00:23:13.680><c> you</c>

00:23:14.210 --> 00:23:14.220 align:start position:0%
you believe to be a CF object and you
 

00:23:14.220 --> 00:23:16.100 align:start position:0%
you believe to be a CF object and you
would<00:23:14.340><c> compare</c><00:23:14.700><c> its</c><00:23:14.940><c> return</c><00:23:15.360><c> value</c><00:23:15.390><c> it</c>

00:23:16.100 --> 00:23:16.110 align:start position:0%
would compare its return value it
 

00:23:16.110 --> 00:23:18.680 align:start position:0%
would compare its return value it
returns<00:23:16.200><c> a</c><00:23:16.560><c> code</c><00:23:16.860><c> type</c><00:23:17.400><c> code</c><00:23:17.700><c> you'd</c><00:23:18.330><c> compare</c>

00:23:18.680 --> 00:23:18.690 align:start position:0%
returns a code type code you'd compare
 

00:23:18.690 --> 00:23:21.290 align:start position:0%
returns a code type code you'd compare
that<00:23:18.840><c> return</c><00:23:19.200><c> value</c><00:23:19.520><c> with</c><00:23:20.520><c> the</c><00:23:20.820><c> type</c><00:23:21.000><c> codes</c>

00:23:21.290 --> 00:23:21.300 align:start position:0%
that return value with the type codes
 

00:23:21.300 --> 00:23:23.960 align:start position:0%
that return value with the type codes
published<00:23:21.870><c> by</c><00:23:22.050><c> every</c><00:23:22.500><c> core</c><00:23:22.800><c> foundation</c><00:23:23.520><c> type</c>

00:23:23.960 --> 00:23:23.970 align:start position:0%
published by every core foundation type
 

00:23:23.970 --> 00:23:30.740 align:start position:0%
published by every core foundation type
in<00:23:24.480><c> its</c><00:23:25.170><c> API</c><00:23:27.620><c> so</c><00:23:28.700><c> as</c><00:23:29.700><c> I</c><00:23:29.880><c> said</c><00:23:30.090><c> earlier</c><00:23:30.450><c> one</c><00:23:30.720><c> of</c>

00:23:30.740 --> 00:23:30.750 align:start position:0%
in its API so as I said earlier one of
 

00:23:30.750 --> 00:23:32.750 align:start position:0%
in its API so as I said earlier one of
the<00:23:30.870><c> most</c><00:23:31.080><c> important</c><00:23:31.800><c> things</c><00:23:32.070><c> to</c><00:23:32.250><c> understand</c>

00:23:32.750 --> 00:23:32.760 align:start position:0%
the most important things to understand
 

00:23:32.760 --> 00:23:35.060 align:start position:0%
the most important things to understand
about<00:23:32.910><c> core</c><00:23:33.300><c> foundation</c><00:23:34.020><c> is</c><00:23:34.200><c> its</c><00:23:34.650><c> memory</c>

00:23:35.060 --> 00:23:35.070 align:start position:0%
about core foundation is its memory
 

00:23:35.070 --> 00:23:38.960 align:start position:0%
about core foundation is its memory
management<00:23:35.430><c> strategy</c><00:23:37.580><c> reference</c><00:23:38.580><c> counting</c>

00:23:38.960 --> 00:23:38.970 align:start position:0%
management strategy reference counting
 

00:23:38.970 --> 00:23:42.070 align:start position:0%
management strategy reference counting
is<00:23:39.060><c> used</c><00:23:39.390><c> on</c><00:23:39.630><c> all</c><00:23:40.200><c> core</c><00:23:40.800><c> foundation</c><00:23:41.340><c> objects</c>

00:23:42.070 --> 00:23:42.080 align:start position:0%
is used on all core foundation objects
 

00:23:42.080 --> 00:23:45.560 align:start position:0%
is used on all core foundation objects
for<00:23:43.080><c> those</c><00:23:43.260><c> of</c><00:23:43.470><c> you</c><00:23:43.590><c> who</c><00:23:44.240><c> don't</c><00:23:45.240><c> know</c><00:23:45.330><c> what</c>

00:23:45.560 --> 00:23:45.570 align:start position:0%
for those of you who don't know what
 

00:23:45.570 --> 00:23:47.650 align:start position:0%
for those of you who don't know what
that<00:23:45.750><c> means</c>

00:23:47.650 --> 00:23:47.660 align:start position:0%
that means
 

00:23:47.660 --> 00:23:51.950 align:start position:0%
that means
in<00:23:48.660><c> short</c><00:23:48.990><c> reference</c><00:23:49.650><c> counting</c><00:23:50.130><c> is</c><00:23:50.960><c> means</c>

00:23:51.950 --> 00:23:51.960 align:start position:0%
in short reference counting is means
 

00:23:51.960 --> 00:23:54.020 align:start position:0%
in short reference counting is means
that<00:23:52.050><c> each</c><00:23:52.500><c> object</c><00:23:52.860><c> keeps</c><00:23:53.340><c> track</c><00:23:53.730><c> of</c><00:23:53.760><c> the</c>

00:23:54.020 --> 00:23:54.030 align:start position:0%
that each object keeps track of the
 

00:23:54.030 --> 00:23:57.170 align:start position:0%
that each object keeps track of the
number<00:23:54.360><c> of</c><00:23:54.540><c> owners</c><00:23:54.780><c> that</c><00:23:55.380><c> it</c><00:23:55.530><c> has</c><00:23:55.910><c> that's</c><00:23:56.910><c> one</c>

00:23:57.170 --> 00:23:57.180 align:start position:0%
number of owners that it has that's one
 

00:23:57.180 --> 00:23:58.730 align:start position:0%
number of owners that it has that's one
way<00:23:57.330><c> to</c><00:23:57.360><c> think</c><00:23:57.600><c> about</c><00:23:57.750><c> it</c><00:23:57.990><c> at</c><00:23:58.110><c> least</c><00:23:58.260><c> when</c><00:23:58.590><c> the</c>

00:23:58.730 --> 00:23:58.740 align:start position:0%
way to think about it at least when the
 

00:23:58.740 --> 00:24:01.120 align:start position:0%
way to think about it at least when the
number<00:23:58.980><c> of</c><00:23:59.100><c> owners</c><00:23:59.340><c> of</c><00:23:59.850><c> an</c><00:24:00.270><c> object</c><00:24:00.660><c> is</c><00:24:00.750><c> zero</c>

00:24:01.120 --> 00:24:01.130 align:start position:0%
number of owners of an object is zero
 

00:24:01.130 --> 00:24:06.110 align:start position:0%
number of owners of an object is zero
the<00:24:02.130><c> object</c><00:24:02.670><c> can</c><00:24:03.000><c> be</c><00:24:03.210><c> destroyed</c><00:24:04.700><c> an</c><00:24:05.700><c> object</c>

00:24:06.110 --> 00:24:06.120 align:start position:0%
the object can be destroyed an object
 

00:24:06.120 --> 00:24:08.480 align:start position:0%
the object can be destroyed an object
may<00:24:06.240><c> have</c><00:24:06.270><c> many</c><00:24:06.930><c> different</c><00:24:07.500><c> logical</c><00:24:08.040><c> owners</c>

00:24:08.480 --> 00:24:08.490 align:start position:0%
may have many different logical owners
 

00:24:08.490 --> 00:24:10.930 align:start position:0%
may have many different logical owners
in<00:24:08.760><c> different</c><00:24:09.180><c> parts</c><00:24:09.390><c> of</c><00:24:09.480><c> an</c><00:24:09.600><c> application</c><00:24:10.290><c> and</c>

00:24:10.930 --> 00:24:10.940 align:start position:0%
in different parts of an application and
 

00:24:10.940 --> 00:24:13.160 align:start position:0%
in different parts of an application and
generally<00:24:11.940><c> they</c><00:24:12.120><c> don't</c><00:24:12.270><c> know</c><00:24:12.540><c> about</c><00:24:12.960><c> one</c>

00:24:13.160 --> 00:24:13.170 align:start position:0%
generally they don't know about one
 

00:24:13.170 --> 00:24:14.940 align:start position:0%
generally they don't know about one
another<00:24:13.440><c> so</c><00:24:13.710><c> reference</c><00:24:14.130><c> counting</c><00:24:14.580><c> is</c>

00:24:14.940 --> 00:24:14.950 align:start position:0%
another so reference counting is
 

00:24:14.950 --> 00:24:19.470 align:start position:0%
another so reference counting is
way<00:24:15.900><c> to</c><00:24:16.900><c> make</c><00:24:17.230><c> sure</c><00:24:17.590><c> that</c><00:24:17.890><c> an</c><00:24:18.640><c> object</c><00:24:19.180><c> does</c><00:24:19.300><c> not</c>

00:24:19.470 --> 00:24:19.480 align:start position:0%
way to make sure that an object does not
 

00:24:19.480 --> 00:24:22.500 align:start position:0%
way to make sure that an object does not
get<00:24:19.780><c> destroyed</c><00:24:20.200><c> before</c><00:24:21.060><c> while</c><00:24:22.060><c> it</c><00:24:22.210><c> is</c><00:24:22.330><c> still</c>

00:24:22.500 --> 00:24:22.510 align:start position:0%
get destroyed before while it is still
 

00:24:22.510 --> 00:24:29.000 align:start position:0%
get destroyed before while it is still
in<00:24:22.630><c> use</c><00:24:22.780><c> before</c><00:24:23.020><c> it</c><00:24:23.680><c> is</c><00:24:24.460><c> no</c><00:24:24.700><c> longer</c><00:24:25.060><c> useful</c>

00:24:29.000 --> 00:24:29.010 align:start position:0%
 
 

00:24:29.010 --> 00:24:32.850 align:start position:0%
 
so<00:24:30.010><c> CF</c><00:24:30.610><c> retain</c><00:24:31.260><c> which</c><00:24:32.260><c> is</c><00:24:32.410><c> one</c><00:24:32.710><c> of</c><00:24:32.800><c> the</c>

00:24:32.850 --> 00:24:32.860 align:start position:0%
so CF retain which is one of the
 

00:24:32.860 --> 00:24:36.630 align:start position:0%
so CF retain which is one of the
polymorphic<00:24:33.430><c> functions</c><00:24:33.940><c> is</c><00:24:34.180><c> used</c><00:24:34.690><c> to</c><00:24:35.550><c> what</c><00:24:36.550><c> we</c>

00:24:36.630 --> 00:24:36.640 align:start position:0%
polymorphic functions is used to what we
 

00:24:36.640 --> 00:24:40.020 align:start position:0%
polymorphic functions is used to what we
call<00:24:36.820><c> take</c><00:24:37.120><c> a</c><00:24:37.150><c> reference</c><00:24:37.720><c> or</c><00:24:38.400><c> increment</c><00:24:39.400><c> the</c>

00:24:40.020 --> 00:24:40.030 align:start position:0%
call take a reference or increment the
 

00:24:40.030 --> 00:24:44.130 align:start position:0%
call take a reference or increment the
reference<00:24:40.450><c> count</c><00:24:40.750><c> of</c><00:24:41.020><c> a</c><00:24:41.290><c> CF</c><00:24:41.560><c> object</c><00:24:42.960><c> this</c><00:24:43.960><c> is</c>

00:24:44.130 --> 00:24:44.140 align:start position:0%
reference count of a CF object this is
 

00:24:44.140 --> 00:24:47.760 align:start position:0%
reference count of a CF object this is
sometimes<00:24:44.350><c> called</c><00:24:45.510><c> having</c><00:24:46.510><c> a</c><00:24:46.690><c> retain</c><00:24:47.230><c> on</c><00:24:47.710><c> the</c>

00:24:47.760 --> 00:24:47.770 align:start position:0%
sometimes called having a retain on the
 

00:24:47.770 --> 00:24:52.440 align:start position:0%
sometimes called having a retain on the
object<00:24:48.730><c> as</c><00:24:48.910><c> well</c><00:24:49.110><c> because</c><00:24:50.110><c> it's</c><00:24:50.830><c> CF</c><00:24:51.550><c> retain</c><00:24:52.060><c> is</c>

00:24:52.440 --> 00:24:52.450 align:start position:0%
object as well because it's CF retain is
 

00:24:52.450 --> 00:24:56.150 align:start position:0%
object as well because it's CF retain is
used<00:24:52.750><c> to</c><00:24:54.060><c> increment</c><00:24:55.060><c> the</c><00:24:55.150><c> reference</c><00:24:55.510><c> count</c>

00:24:56.150 --> 00:24:56.160 align:start position:0%
used to increment the reference count
 

00:24:56.160 --> 00:24:58.980 align:start position:0%
used to increment the reference count
the<00:24:57.160><c> function</c><00:24:57.490><c> CF</c><00:24:57.730><c> release</c><00:24:58.120><c> is</c><00:24:58.390><c> used</c><00:24:58.690><c> to</c><00:24:58.840><c> give</c>

00:24:58.980 --> 00:24:58.990 align:start position:0%
the function CF release is used to give
 

00:24:58.990 --> 00:25:01.830 align:start position:0%
the function CF release is used to give
up<00:24:59.170><c> your</c><00:24:59.350><c> part</c><00:24:59.650><c> ownership</c><00:25:00.100><c> in</c><00:25:00.250><c> an</c><00:25:00.340><c> object</c><00:25:00.840><c> core</c>

00:25:01.830 --> 00:25:01.840 align:start position:0%
up your part ownership in an object core
 

00:25:01.840 --> 00:25:04.710 align:start position:0%
up your part ownership in an object core
foundations<00:25:02.470><c> objects</c><00:25:03.720><c> automatically</c>

00:25:04.710 --> 00:25:04.720 align:start position:0%
foundations objects automatically
 

00:25:04.720 --> 00:25:06.630 align:start position:0%
foundations objects automatically
destroy<00:25:05.140><c> themselves</c><00:25:05.410><c> when</c><00:25:06.100><c> their</c><00:25:06.310><c> reference</c>

00:25:06.630 --> 00:25:06.640 align:start position:0%
destroy themselves when their reference
 

00:25:06.640 --> 00:25:08.580 align:start position:0%
destroy themselves when their reference
count<00:25:06.910><c> drops</c><00:25:07.210><c> to</c><00:25:07.420><c> zero</c><00:25:07.720><c> you</c><00:25:07.960><c> don't</c><00:25:08.140><c> need</c><00:25:08.290><c> to</c><00:25:08.440><c> do</c>

00:25:08.580 --> 00:25:08.590 align:start position:0%
count drops to zero you don't need to do
 

00:25:08.590 --> 00:25:11.700 align:start position:0%
count drops to zero you don't need to do
that<00:25:08.740><c> but</c><00:25:09.730><c> you</c><00:25:10.060><c> do</c><00:25:10.270><c> need</c><00:25:10.480><c> to</c><00:25:10.540><c> get</c><00:25:10.990><c> rid</c><00:25:11.230><c> of</c><00:25:11.380><c> any</c>

00:25:11.700 --> 00:25:11.710 align:start position:0%
that but you do need to get rid of any
 

00:25:11.710 --> 00:25:13.560 align:start position:0%
that but you do need to get rid of any
references<00:25:12.400><c> that</c><00:25:12.550><c> you</c><00:25:12.610><c> do</c><00:25:12.850><c> have</c><00:25:13.090><c> and</c><00:25:13.390><c> I'll</c><00:25:13.450><c> be</c>

00:25:13.560 --> 00:25:13.570 align:start position:0%
references that you do have and I'll be
 

00:25:13.570 --> 00:25:16.620 align:start position:0%
references that you do have and I'll be
talking<00:25:13.990><c> about</c><00:25:14.080><c> that</c><00:25:15.150><c> if</c><00:25:16.150><c> you</c><00:25:16.330><c> have</c><00:25:16.600><c> a</c>

00:25:16.620 --> 00:25:16.630 align:start position:0%
talking about that if you have a
 

00:25:16.630 --> 00:25:19.470 align:start position:0%
talking about that if you have a
variable<00:25:17.230><c> which</c><00:25:17.980><c> is</c><00:25:18.280><c> referencing</c><00:25:19.150><c> a</c><00:25:19.240><c> core</c>

00:25:19.470 --> 00:25:19.480 align:start position:0%
variable which is referencing a core
 

00:25:19.480 --> 00:25:22.890 align:start position:0%
variable which is referencing a core
foundation<00:25:19.630><c> object</c><00:25:20.530><c> but</c><00:25:20.740><c> no</c><00:25:21.150><c> retain</c><00:25:22.150><c> on</c><00:25:22.540><c> the</c>

00:25:22.890 --> 00:25:22.900 align:start position:0%
foundation object but no retain on the
 

00:25:22.900 --> 00:25:25.590 align:start position:0%
foundation object but no retain on the
object<00:25:23.440><c> it</c><00:25:24.220><c> could</c><00:25:24.580><c> be</c><00:25:24.760><c> destroyed</c><00:25:25.210><c> out</c><00:25:25.390><c> from</c>

00:25:25.590 --> 00:25:25.600 align:start position:0%
object it could be destroyed out from
 

00:25:25.600 --> 00:25:27.150 align:start position:0%
object it could be destroyed out from
under<00:25:25.870><c> you</c><00:25:25.930><c> at</c><00:25:26.050><c> any</c><00:25:26.200><c> time</c><00:25:26.500><c> and</c><00:25:26.890><c> there</c><00:25:27.040><c> is</c>

00:25:27.150 --> 00:25:27.160 align:start position:0%
under you at any time and there is
 

00:25:27.160 --> 00:25:29.070 align:start position:0%
under you at any time and there is
really<00:25:27.460><c> no</c><00:25:27.700><c> way</c><00:25:27.880><c> to</c><00:25:27.940><c> find</c><00:25:28.270><c> out</c><00:25:28.510><c> that</c><00:25:28.750><c> this</c><00:25:28.900><c> has</c>

00:25:29.070 --> 00:25:29.080 align:start position:0%
really no way to find out that this has
 

00:25:29.080 --> 00:25:32.610 align:start position:0%
really no way to find out that this has
happened<00:25:30.000><c> there</c><00:25:31.000><c> is</c><00:25:31.090><c> a</c><00:25:31.120><c> date</c><00:25:31.390><c> that's</c><00:25:32.260><c> called</c><00:25:32.530><c> a</c>

00:25:32.610 --> 00:25:32.620 align:start position:0%
happened there is a date that's called a
 

00:25:32.620 --> 00:25:35.190 align:start position:0%
happened there is a date that's called a
dangling<00:25:33.010><c> reference</c><00:25:33.460><c> and</c><00:25:34.200><c> dangling</c>

00:25:35.190 --> 00:25:35.200 align:start position:0%
dangling reference and dangling
 

00:25:35.200 --> 00:25:37.890 align:start position:0%
dangling reference and dangling
references<00:25:35.740><c> just</c><00:25:36.640><c> as</c><00:25:36.760><c> in</c><00:25:36.940><c> you</c><00:25:37.150><c> know</c><00:25:37.240><c> Mac</c><00:25:37.480><c> OS</c><00:25:37.660><c> 9</c>

00:25:37.890 --> 00:25:37.900 align:start position:0%
references just as in you know Mac OS 9
 

00:25:37.900 --> 00:25:41.450 align:start position:0%
references just as in you know Mac OS 9
or<00:25:38.410><c> any</c><00:25:38.680><c> other</c><00:25:38.860><c> system</c><00:25:39.240><c> can</c><00:25:40.240><c> cause</c><00:25:40.630><c> app</c>

00:25:41.450 --> 00:25:41.460 align:start position:0%
or any other system can cause app
 

00:25:41.460 --> 00:25:46.980 align:start position:0%
or any other system can cause app
misbehavior<00:25:42.460><c> or</c><00:25:42.490><c> a</c><00:25:43.330><c> crash</c><00:25:45.840><c> sometimes</c><00:25:46.840><c> an</c>

00:25:46.980 --> 00:25:46.990 align:start position:0%
misbehavior or a crash sometimes an
 

00:25:46.990 --> 00:25:52.290 align:start position:0%
misbehavior or a crash sometimes an
retain<00:25:47.560><c> is</c><00:25:48.090><c> automatically</c><00:25:49.090><c> given</c><00:25:49.450><c> to</c><00:25:49.960><c> you</c><00:25:51.300><c> see</c>

00:25:52.290 --> 00:25:52.300 align:start position:0%
retain is automatically given to you see
 

00:25:52.300 --> 00:25:54.330 align:start position:0%
retain is automatically given to you see
if<00:25:52.390><c> retain</c><00:25:52.780><c> is</c><00:25:53.050><c> used</c><00:25:53.290><c> to</c><00:25:53.470><c> explicitly</c><00:25:54.100><c> take</c><00:25:54.310><c> a</c>

00:25:54.330 --> 00:25:54.340 align:start position:0%
if retain is used to explicitly take a
 

00:25:54.340 --> 00:25:56.430 align:start position:0%
if retain is used to explicitly take a
reference<00:25:54.700><c> but</c><00:25:54.820><c> sometimes</c><00:25:55.240><c> a</c><00:25:55.570><c> retain</c><00:25:56.290><c> is</c>

00:25:56.430 --> 00:25:56.440 align:start position:0%
reference but sometimes a retain is
 

00:25:56.440 --> 00:26:00.270 align:start position:0%
reference but sometimes a retain is
automatically<00:25:56.980><c> given</c><00:25:57.490><c> to</c><00:25:57.760><c> you</c><00:25:58.770><c> when</c><00:25:59.770><c> you</c><00:26:00.070><c> get</c>

00:26:00.270 --> 00:26:00.280 align:start position:0%
automatically given to you when you get
 

00:26:00.280 --> 00:26:03.810 align:start position:0%
automatically given to you when you get
an<00:26:00.400><c> object</c><00:26:00.520><c> say</c><00:26:01.120><c> as</c><00:26:01.390><c> a</c><00:26:01.420><c> return</c><00:26:01.990><c> value</c><00:26:02.820><c> these</c>

00:26:03.810 --> 00:26:03.820 align:start position:0%
an object say as a return value these
 

00:26:03.820 --> 00:26:06.570 align:start position:0%
an object say as a return value these
automatic<00:26:04.360><c> retains</c><00:26:04.840><c> in</c><00:26:05.380><c> addition</c><00:26:06.070><c> to</c><00:26:06.460><c> the</c>

00:26:06.570 --> 00:26:06.580 align:start position:0%
automatic retains in addition to the
 

00:26:06.580 --> 00:26:09.240 align:start position:0%
automatic retains in addition to the
ones<00:26:06.790><c> you</c><00:26:07.030><c> explicitly</c><00:26:07.750><c> do</c><00:26:07.930><c> with</c><00:26:08.140><c> CF</c><00:26:08.410><c> retain</c>

00:26:09.240 --> 00:26:09.250 align:start position:0%
ones you explicitly do with CF retain
 

00:26:09.250 --> 00:26:11.490 align:start position:0%
ones you explicitly do with CF retain
must<00:26:09.970><c> be</c><00:26:10.150><c> released</c><00:26:10.450><c> later</c><00:26:10.810><c> when</c><00:26:11.200><c> you</c><00:26:11.320><c> no</c>

00:26:11.490 --> 00:26:11.500 align:start position:0%
must be released later when you no
 

00:26:11.500 --> 00:26:14.910 align:start position:0%
must be released later when you no
longer<00:26:11.710><c> need</c><00:26:12.160><c> the</c><00:26:12.190><c> object</c><00:26:13.350><c> if</c><00:26:14.350><c> you</c><00:26:14.530><c> don't</c><00:26:14.740><c> do</c>

00:26:14.910 --> 00:26:14.920 align:start position:0%
longer need the object if you don't do
 

00:26:14.920 --> 00:26:16.710 align:start position:0%
longer need the object if you don't do
that<00:26:15.100><c> the</c><00:26:15.610><c> memory</c><00:26:15.910><c> is</c><00:26:15.970><c> not</c><00:26:16.120><c> going</c><00:26:16.270><c> to</c><00:26:16.330><c> be</c><00:26:16.420><c> freed</c>

00:26:16.710 --> 00:26:16.720 align:start position:0%
that the memory is not going to be freed
 

00:26:16.720 --> 00:26:19.110 align:start position:0%
that the memory is not going to be freed
and<00:26:16.960><c> you're</c><00:26:17.560><c> gonna</c><00:26:17.650><c> have</c><00:26:17.890><c> a</c><00:26:17.920><c> leak</c><00:26:18.250><c> which</c><00:26:18.910><c> will</c>

00:26:19.110 --> 00:26:19.120 align:start position:0%
and you're gonna have a leak which will
 

00:26:19.120 --> 00:26:20.790 align:start position:0%
and you're gonna have a leak which will
cause<00:26:19.300><c> your</c><00:26:19.540><c> app</c><00:26:19.660><c> to</c><00:26:19.900><c> use</c><00:26:20.020><c> more</c><00:26:20.320><c> memory</c><00:26:20.500><c> than</c>

00:26:20.790 --> 00:26:20.800 align:start position:0%
cause your app to use more memory than
 

00:26:20.800 --> 00:26:24.360 align:start position:0%
cause your app to use more memory than
it<00:26:21.100><c> needs</c><00:26:21.280><c> to</c><00:26:22.350><c> so</c><00:26:23.350><c> you</c><00:26:23.410><c> have</c><00:26:23.680><c> to</c><00:26:23.860><c> know</c><00:26:23.980><c> when</c><00:26:24.250><c> you</c>

00:26:24.360 --> 00:26:24.370 align:start position:0%
it needs to so you have to know when you
 

00:26:24.370 --> 00:26:26.040 align:start position:0%
it needs to so you have to know when you
need<00:26:24.490><c> to</c><00:26:24.640><c> explicitly</c><00:26:25.000><c> make</c><00:26:25.510><c> yourself</c><00:26:25.900><c> an</c>

00:26:26.040 --> 00:26:26.050 align:start position:0%
need to explicitly make yourself an
 

00:26:26.050 --> 00:26:26.810 align:start position:0%
need to explicitly make yourself an
owner<00:26:26.230><c> of</c><00:26:26.440><c> a</c>

00:26:26.810 --> 00:26:26.820 align:start position:0%
owner of a
 

00:26:26.820 --> 00:26:29.659 align:start position:0%
owner of a
object<00:26:27.210><c> and</c><00:26:27.480><c> know</c><00:26:28.230><c> when</c><00:26:28.470><c> you</c><00:26:28.559><c> have</c><00:26:28.830><c> been</c><00:26:29.039><c> given</c>

00:26:29.659 --> 00:26:29.669 align:start position:0%
object and know when you have been given
 

00:26:29.669 --> 00:26:32.570 align:start position:0%
object and know when you have been given
an<00:26:29.880><c> ownership</c><00:26:30.360><c> in</c><00:26:30.720><c> an</c><00:26:30.840><c> object</c><00:26:31.320><c> and</c><00:26:32.009><c> this</c><00:26:32.429><c> is</c><00:26:32.549><c> a</c>

00:26:32.570 --> 00:26:32.580 align:start position:0%
an ownership in an object and this is a
 

00:26:32.580 --> 00:26:34.519 align:start position:0%
an ownership in an object and this is a
fundamental<00:26:33.120><c> question</c><00:26:33.149><c> that</c><00:26:33.870><c> arises</c><00:26:34.080><c> for</c><00:26:34.470><c> a</c>

00:26:34.519 --> 00:26:34.529 align:start position:0%
fundamental question that arises for a
 

00:26:34.529 --> 00:26:37.639 align:start position:0%
fundamental question that arises for a
developer<00:26:34.919><c> how</c><00:26:35.159><c> to</c><00:26:35.220><c> do</c><00:26:36.000><c> I</c><00:26:36.029><c> own</c><00:26:36.649><c> this</c>

00:26:37.639 --> 00:26:37.649 align:start position:0%
developer how to do I own this
 

00:26:37.649 --> 00:26:40.460 align:start position:0%
developer how to do I own this
particular<00:26:37.980><c> object</c><00:26:39.110><c> to</c><00:26:40.110><c> answer</c><00:26:40.350><c> that</c>

00:26:40.460 --> 00:26:40.470 align:start position:0%
particular object to answer that
 

00:26:40.470 --> 00:26:42.409 align:start position:0%
particular object to answer that
question<00:26:40.919><c> we</c><00:26:41.070><c> develop</c><00:26:41.429><c> conventions</c><00:26:42.059><c> for</c><00:26:42.210><c> core</c>

00:26:42.409 --> 00:26:42.419 align:start position:0%
question we develop conventions for core
 

00:26:42.419 --> 00:26:44.840 align:start position:0%
question we develop conventions for core
foundation<00:26:43.080><c> as</c><00:26:43.289><c> our</c><00:26:44.039><c> example</c><00:26:44.519><c> we're</c><00:26:44.669><c> going</c><00:26:44.789><c> to</c>

00:26:44.840 --> 00:26:44.850 align:start position:0%
foundation as our example we're going to
 

00:26:44.850 --> 00:26:46.720 align:start position:0%
foundation as our example we're going to
look<00:26:45.029><c> at</c><00:26:45.149><c> the</c><00:26:45.269><c> naming</c><00:26:45.750><c> convention</c><00:26:46.380><c> for</c>

00:26:46.720 --> 00:26:46.730 align:start position:0%
look at the naming convention for
 

00:26:46.730 --> 00:26:49.310 align:start position:0%
look at the naming convention for
functions<00:26:47.730><c> which</c><00:26:47.940><c> return</c><00:26:47.970><c> core</c><00:26:48.690><c> foundation</c>

00:26:49.310 --> 00:26:49.320 align:start position:0%
functions which return core foundation
 

00:26:49.320 --> 00:26:51.620 align:start position:0%
functions which return core foundation
objects<00:26:49.799><c> as</c><00:26:49.950><c> that</c><00:26:50.580><c> is</c><00:26:50.759><c> by</c><00:26:50.940><c> far</c><00:26:51.299><c> the</c><00:26:51.360><c> most</c>

00:26:51.620 --> 00:26:51.630 align:start position:0%
objects as that is by far the most
 

00:26:51.630 --> 00:26:55.009 align:start position:0%
objects as that is by far the most
significant<00:26:52.440><c> convention</c><00:26:53.450><c> by</c><00:26:54.450><c> convention</c><00:26:54.960><c> in</c>

00:26:55.009 --> 00:26:55.019 align:start position:0%
significant convention by convention in
 

00:26:55.019 --> 00:26:57.169 align:start position:0%
significant convention by convention in
core<00:26:55.230><c> foundation</c><00:26:55.860><c> if</c><00:26:56.070><c> a</c><00:26:56.220><c> function</c><00:26:56.639><c> returns</c><00:26:57.029><c> an</c>

00:26:57.169 --> 00:26:57.179 align:start position:0%
core foundation if a function returns an
 

00:26:57.179 --> 00:27:00.409 align:start position:0%
core foundation if a function returns an
object<00:26:57.330><c> of</c><00:26:57.899><c> a</c><00:26:57.990><c> core</c><00:26:58.169><c> foundation</c><00:26:58.620><c> type</c><00:26:58.919><c> it</c><00:26:59.879><c> uses</c>

00:27:00.409 --> 00:27:00.419 align:start position:0%
object of a core foundation type it uses
 

00:27:00.419 --> 00:27:03.409 align:start position:0%
object of a core foundation type it uses
the<00:27:00.570><c> verb</c><00:27:00.809><c> get</c><00:27:01.470><c> if</c><00:27:02.220><c> it</c><00:27:02.549><c> is</c><00:27:02.669><c> returning</c><00:27:03.120><c> the</c>

00:27:03.409 --> 00:27:03.419 align:start position:0%
the verb get if it is returning the
 

00:27:03.419 --> 00:27:07.369 align:start position:0%
the verb get if it is returning the
object<00:27:04.080><c> to</c><00:27:04.289><c> you</c><00:27:04.559><c> but</c><00:27:05.220><c> not</c><00:27:05.580><c> giving</c><00:27:06.389><c> a</c><00:27:06.600><c> retain</c><00:27:07.110><c> on</c>

00:27:07.369 --> 00:27:07.379 align:start position:0%
object to you but not giving a retain on
 

00:27:07.379 --> 00:27:09.289 align:start position:0%
object to you but not giving a retain on
that<00:27:07.590><c> object</c><00:27:08.070><c> to</c><00:27:08.220><c> you</c><00:27:08.370><c> as</c><00:27:08.580><c> well</c>

00:27:09.289 --> 00:27:09.299 align:start position:0%
that object to you as well
 

00:27:09.299 --> 00:27:11.990 align:start position:0%
that object to you as well
that<00:27:10.289><c> is</c><00:27:10.529><c> it</c><00:27:10.769><c> is</c><00:27:10.889><c> not</c><00:27:11.000><c> automatically</c>

00:27:11.990 --> 00:27:12.000 align:start position:0%
that is it is not automatically
 

00:27:12.000 --> 00:27:14.299 align:start position:0%
that is it is not automatically
returning<00:27:12.899><c> a</c><00:27:13.019><c> part</c><00:27:13.440><c> ownership</c><00:27:14.039><c> in</c><00:27:14.279><c> that</c>

00:27:14.299 --> 00:27:14.309 align:start position:0%
returning a part ownership in that
 

00:27:14.309 --> 00:27:18.830 align:start position:0%
returning a part ownership in that
object<00:27:14.940><c> to</c><00:27:15.000><c> you</c><00:27:15.679><c> for</c><00:27:16.679><c> example</c><00:27:17.210><c> CF</c><00:27:18.210><c> Dictionary</c>

00:27:18.830 --> 00:27:18.840 align:start position:0%
object to you for example CF Dictionary
 

00:27:18.840 --> 00:27:23.749 align:start position:0%
object to you for example CF Dictionary
get<00:27:19.679><c> value</c><00:27:21.529><c> would</c><00:27:22.529><c> return</c><00:27:23.039><c> the</c><00:27:23.250><c> value</c><00:27:23.580><c> out</c><00:27:23.610><c> of</c>

00:27:23.749 --> 00:27:23.759 align:start position:0%
get value would return the value out of
 

00:27:23.759 --> 00:27:28.269 align:start position:0%
get value would return the value out of
a<00:27:23.909><c> CF</c><00:27:24.149><c> dictionary</c><00:27:24.690><c> but</c><00:27:25.559><c> would</c><00:27:25.950><c> not</c><00:27:26.159><c> give</c><00:27:26.580><c> you</c><00:27:26.789><c> a</c>

00:27:28.269 --> 00:27:28.279 align:start position:0%
a CF dictionary but would not give you a
 

00:27:28.279 --> 00:27:31.340 align:start position:0%
a CF dictionary but would not give you a
retain<00:27:29.659><c> increment</c><00:27:30.659><c> the</c><00:27:30.779><c> reference</c><00:27:31.110><c> count</c>

00:27:31.340 --> 00:27:31.350 align:start position:0%
retain increment the reference count
 

00:27:31.350 --> 00:27:33.590 align:start position:0%
retain increment the reference count
automatically<00:27:31.950><c> on</c><00:27:32.100><c> that</c><00:27:32.279><c> object</c><00:27:32.490><c> and</c><00:27:33.059><c> you</c>

00:27:33.590 --> 00:27:33.600 align:start position:0%
automatically on that object and you
 

00:27:33.600 --> 00:27:35.570 align:start position:0%
automatically on that object and you
should<00:27:33.809><c> not</c><00:27:34.080><c> release</c><00:27:34.559><c> values</c><00:27:35.100><c> which</c><00:27:35.370><c> are</c>

00:27:35.570 --> 00:27:35.580 align:start position:0%
should not release values which are
 

00:27:35.580 --> 00:27:38.269 align:start position:0%
should not release values which are
returned<00:27:36.090><c> from</c><00:27:36.389><c> get</c><00:27:36.720><c> functions</c><00:27:37.470><c> or</c><00:27:37.740><c> you</c><00:27:38.159><c> will</c>

00:27:38.269 --> 00:27:38.279 align:start position:0%
returned from get functions or you will
 

00:27:38.279 --> 00:27:41.659 align:start position:0%
returned from get functions or you will
create<00:27:38.460><c> a</c><00:27:38.549><c> dangling</c><00:27:39.000><c> reference</c><00:27:40.669><c> functions</c>

00:27:41.659 --> 00:27:41.669 align:start position:0%
create a dangling reference functions
 

00:27:41.669 --> 00:27:44.869 align:start position:0%
create a dangling reference functions
which<00:27:41.850><c> automatically</c><00:27:42.539><c> do</c><00:27:43.139><c> retain</c><00:27:44.129><c> a</c><00:27:44.429><c> returned</c>

00:27:44.869 --> 00:27:44.879 align:start position:0%
which automatically do retain a returned
 

00:27:44.879 --> 00:27:47.810 align:start position:0%
which automatically do retain a returned
object<00:27:45.389><c> for</c><00:27:45.629><c> you</c><00:27:45.779><c> use</c><00:27:46.620><c> either</c><00:27:46.860><c> the</c><00:27:47.129><c> verbs</c><00:27:47.370><c> copy</c>

00:27:47.810 --> 00:27:47.820 align:start position:0%
object for you use either the verbs copy
 

00:27:47.820 --> 00:27:51.680 align:start position:0%
object for you use either the verbs copy
or<00:27:48.240><c> create</c><00:27:49.970><c> depending</c><00:27:50.970><c> on</c><00:27:51.059><c> what</c><00:27:51.210><c> the</c><00:27:51.330><c> function</c>

00:27:51.680 --> 00:27:51.690 align:start position:0%
or create depending on what the function
 

00:27:51.690 --> 00:27:54.019 align:start position:0%
or create depending on what the function
is<00:27:51.720><c> doing</c><00:27:52.399><c> functions</c><00:27:53.399><c> which</c><00:27:53.549><c> create</c><00:27:53.820><c> new</c>

00:27:54.019 --> 00:27:54.029 align:start position:0%
is doing functions which create new
 

00:27:54.029 --> 00:27:58.490 align:start position:0%
is doing functions which create new
instances<00:27:54.860><c> use</c><00:27:55.860><c> create</c><00:27:56.549><c> for</c><00:27:57.120><c> example</c><00:27:57.659><c> the</c>

00:27:58.490 --> 00:27:58.500 align:start position:0%
instances use create for example the
 

00:27:58.500 --> 00:28:00.919 align:start position:0%
instances use create for example the
objects<00:27:58.980><c> you</c><00:27:59.159><c> receive</c><00:27:59.639><c> by</c><00:27:59.879><c> calling</c><00:28:00.419><c> a</c><00:28:00.539><c> create</c>

00:28:00.919 --> 00:28:00.929 align:start position:0%
objects you receive by calling a create
 

00:28:00.929 --> 00:28:03.950 align:start position:0%
objects you receive by calling a create
or<00:28:01.080><c> copy</c><00:28:01.350><c> function</c><00:28:01.710><c> must</c><00:28:02.610><c> have</c><00:28:03.000><c> that</c><00:28:03.360><c> retain</c>

00:28:03.950 --> 00:28:03.960 align:start position:0%
or copy function must have that retain
 

00:28:03.960 --> 00:28:07.279 align:start position:0%
or copy function must have that retain
released<00:28:04.950><c> by</c><00:28:05.309><c> you</c><00:28:05.370><c> when</c><00:28:06.179><c> you</c><00:28:06.629><c> are</c><00:28:06.779><c> done</c><00:28:07.080><c> with</c>

00:28:07.279 --> 00:28:07.289 align:start position:0%
released by you when you are done with
 

00:28:07.289 --> 00:28:09.350 align:start position:0%
released by you when you are done with
that<00:28:07.350><c> object</c><00:28:08.039><c> or</c><00:28:08.279><c> you're</c><00:28:09.000><c> going</c><00:28:09.120><c> to</c><00:28:09.179><c> have</c><00:28:09.299><c> a</c>

00:28:09.350 --> 00:28:09.360 align:start position:0%
that object or you're going to have a
 

00:28:09.360 --> 00:28:12.860 align:start position:0%
that object or you're going to have a
leak<00:28:10.580><c> this</c><00:28:11.580><c> is</c><00:28:11.759><c> so</c><00:28:11.879><c> important</c><00:28:12.330><c> it</c><00:28:12.450><c> really</c>

00:28:12.860 --> 00:28:12.870 align:start position:0%
leak this is so important it really
 

00:28:12.870 --> 00:28:16.029 align:start position:0%
leak this is so important it really
deserves<00:28:13.230><c> repeating</c><00:28:13.769><c> get</c><00:28:14.610><c> functions</c><00:28:15.210><c> never</c>

00:28:16.029 --> 00:28:16.039 align:start position:0%
deserves repeating get functions never
 

00:28:16.039 --> 00:28:19.100 align:start position:0%
deserves repeating get functions never
automatically<00:28:17.450><c> increment</c><00:28:18.450><c> the</c><00:28:18.720><c> reference</c>

00:28:19.100 --> 00:28:19.110 align:start position:0%
automatically increment the reference
 

00:28:19.110 --> 00:28:22.999 align:start position:0%
automatically increment the reference
count<00:28:20.600><c> create</c><00:28:21.600><c> functions</c><00:28:22.259><c> and</c><00:28:22.529><c> copy</c>

00:28:22.999 --> 00:28:23.009 align:start position:0%
count create functions and copy
 

00:28:23.009 --> 00:28:25.759 align:start position:0%
count create functions and copy
functions<00:28:23.639><c> always</c><00:28:24.289><c> increment</c><00:28:25.289><c> the</c><00:28:25.409><c> reference</c>

00:28:25.759 --> 00:28:25.769 align:start position:0%
functions always increment the reference
 

00:28:25.769 --> 00:28:31.470 align:start position:0%
functions always increment the reference
count<00:28:26.070><c> of</c><00:28:26.279><c> objects</c><00:28:27.210><c> that</c><00:28:27.240><c> they</c><00:28:27.450><c> are</c><00:28:27.570><c> returning</c>

00:28:31.470 --> 00:28:31.480 align:start position:0%
 
 

00:28:31.480 --> 00:28:34.660 align:start position:0%
 
so<00:28:32.480><c> these</c><00:28:33.470><c> conventions</c><00:28:34.130><c> are</c><00:28:34.310><c> for</c><00:28:34.610><c> the</c>

00:28:34.660 --> 00:28:34.670 align:start position:0%
so these conventions are for the
 

00:28:34.670 --> 00:28:37.090 align:start position:0%
so these conventions are for the
programmers<00:28:35.300><c> benefit</c><00:28:35.870><c> they're</c><00:28:36.200><c> easy</c><00:28:36.800><c> to</c>

00:28:37.090 --> 00:28:37.100 align:start position:0%
programmers benefit they're easy to
 

00:28:37.100 --> 00:28:41.890 align:start position:0%
programmers benefit they're easy to
remember<00:28:37.430><c> and</c><00:28:39.280><c> they're</c><00:28:40.280><c> you</c><00:28:41.210><c> know</c><00:28:41.240><c> ways</c><00:28:41.600><c> for</c>

00:28:41.890 --> 00:28:41.900 align:start position:0%
remember and they're you know ways for
 

00:28:41.900 --> 00:28:43.780 align:start position:0%
remember and they're you know ways for
you<00:28:42.020><c> to</c><00:28:42.050><c> know</c><00:28:42.290><c> automatically</c><00:28:43.250><c> when</c><00:28:43.490><c> you</c><00:28:43.610><c> see</c>

00:28:43.780 --> 00:28:43.790 align:start position:0%
you to know automatically when you see
 

00:28:43.790 --> 00:28:46.390 align:start position:0%
you to know automatically when you see
an<00:28:43.880><c> API</c><00:28:44.240><c> what</c><00:28:45.110><c> is</c><00:28:45.230><c> happening</c><00:28:45.770><c> with</c><00:28:45.980><c> respect</c><00:28:46.010><c> to</c>

00:28:46.390 --> 00:28:46.400 align:start position:0%
an API what is happening with respect to
 

00:28:46.400 --> 00:28:48.010 align:start position:0%
an API what is happening with respect to
the<00:28:46.490><c> memory</c><00:28:46.790><c> management</c><00:28:47.120><c> of</c><00:28:47.420><c> that</c><00:28:47.600><c> returned</c>

00:28:48.010 --> 00:28:48.020 align:start position:0%
the memory management of that returned
 

00:28:48.020 --> 00:28:51.280 align:start position:0%
the memory management of that returned
object<00:28:48.940><c> but</c><00:28:49.940><c> the</c><00:28:50.330><c> use</c><00:28:50.480><c> of</c><00:28:50.600><c> the</c><00:28:50.660><c> copy</c><00:28:50.900><c> and</c>

00:28:51.280 --> 00:28:51.290 align:start position:0%
object but the use of the copy and
 

00:28:51.290 --> 00:28:54.880 align:start position:0%
object but the use of the copy and
create<00:28:51.980><c> as</c><00:28:52.220><c> verbs</c><00:28:53.120><c> should</c><00:28:53.300><c> not</c><00:28:53.690><c> be</c><00:28:54.230><c> taken</c><00:28:54.770><c> to</c>

00:28:54.880 --> 00:28:54.890 align:start position:0%
create as verbs should not be taken to
 

00:28:54.890 --> 00:28:56.260 align:start position:0%
create as verbs should not be taken to
mean<00:28:55.040><c> that</c><00:28:55.190><c> objects</c><00:28:55.580><c> are</c><00:28:55.700><c> always</c><00:28:56.060><c> being</c>

00:28:56.260 --> 00:28:56.270 align:start position:0%
mean that objects are always being
 

00:28:56.270 --> 00:29:00.580 align:start position:0%
mean that objects are always being
copied<00:28:56.570><c> or</c><00:28:56.930><c> created</c><00:28:57.520><c> a</c><00:28:58.520><c> copy</c><00:28:59.030><c> or</c><00:28:59.480><c> a</c><00:28:59.540><c> new</c><00:29:00.020><c> object</c>

00:29:00.580 --> 00:29:00.590 align:start position:0%
copied or created a copy or a new object
 

00:29:00.590 --> 00:29:03.910 align:start position:0%
copied or created a copy or a new object
would<00:29:01.550><c> not</c><00:29:01.760><c> be</c><00:29:02.000><c> created</c><00:29:02.480><c> when</c><00:29:02.750><c> it's</c><00:29:02.930><c> not</c>

00:29:03.910 --> 00:29:03.920 align:start position:0%
would not be created when it's not
 

00:29:03.920 --> 00:29:07.600 align:start position:0%
would not be created when it's not
appropriate<00:29:04.180><c> for</c><00:29:05.650><c> example</c><00:29:06.650><c> sometimes</c><00:29:07.220><c> it's</c>

00:29:07.600 --> 00:29:07.610 align:start position:0%
appropriate for example sometimes it's
 

00:29:07.610 --> 00:29:11.080 align:start position:0%
appropriate for example sometimes it's
done<00:29:07.820><c> for</c><00:29:08.090><c> efficiency</c><00:29:09.610><c> another</c><00:29:10.610><c> example</c>

00:29:11.080 --> 00:29:11.090 align:start position:0%
done for efficiency another example
 

00:29:11.090 --> 00:29:14.590 align:start position:0%
done for efficiency another example
would<00:29:11.270><c> be</c><00:29:11.330><c> a</c><00:29:11.480><c> type</c><00:29:11.840><c> which</c><00:29:12.730><c> kept</c><00:29:13.730><c> a</c><00:29:13.850><c> cache</c><00:29:14.240><c> of</c>

00:29:14.590 --> 00:29:14.600 align:start position:0%
would be a type which kept a cache of
 

00:29:14.600 --> 00:29:17.560 align:start position:0%
would be a type which kept a cache of
all<00:29:14.780><c> the</c><00:29:14.930><c> objects</c><00:29:15.680><c> for</c><00:29:16.430><c> example</c><00:29:16.490><c> that</c><00:29:17.090><c> hit</c><00:29:17.330><c> it</c>

00:29:17.560 --> 00:29:17.570 align:start position:0%
all the objects for example that hit it
 

00:29:17.570 --> 00:29:20.710 align:start position:0%
all the objects for example that hit it
had<00:29:17.810><c> created</c><00:29:18.550><c> because</c><00:29:19.550><c> it</c><00:29:19.700><c> was</c><00:29:19.910><c> unique</c><00:29:20.540><c> in</c>

00:29:20.710 --> 00:29:20.720 align:start position:0%
had created because it was unique in
 

00:29:20.720 --> 00:29:24.070 align:start position:0%
had created because it was unique in
them<00:29:20.900><c> in</c><00:29:21.080><c> some</c><00:29:21.290><c> way</c><00:29:22.450><c> create</c><00:29:23.450><c> function</c><00:29:23.870><c> might</c>

00:29:24.070 --> 00:29:24.080 align:start position:0%
them in some way create function might
 

00:29:24.080 --> 00:29:26.770 align:start position:0%
them in some way create function might
return<00:29:24.440><c> an</c><00:29:24.680><c> object</c><00:29:25.550><c> out</c><00:29:25.730><c> of</c><00:29:25.760><c> the</c><00:29:25.910><c> cache</c><00:29:26.210><c> rather</c>

00:29:26.770 --> 00:29:26.780 align:start position:0%
return an object out of the cache rather
 

00:29:26.780 --> 00:29:30.880 align:start position:0%
return an object out of the cache rather
than<00:29:27.260><c> making</c><00:29:27.560><c> a</c><00:29:27.770><c> new</c><00:29:27.950><c> one</c><00:29:28.840><c> but</c><00:29:29.840><c> the</c><00:29:30.560><c> reference</c>

00:29:30.880 --> 00:29:30.890 align:start position:0%
than making a new one but the reference
 

00:29:30.890 --> 00:29:33.120 align:start position:0%
than making a new one but the reference
count<00:29:31.190><c> on</c><00:29:31.430><c> that</c><00:29:31.640><c> returned</c><00:29:32.090><c> object</c><00:29:32.600><c> is</c><00:29:32.780><c> always</c>

00:29:33.120 --> 00:29:33.130 align:start position:0%
count on that returned object is always
 

00:29:33.130 --> 00:29:36.460 align:start position:0%
count on that returned object is always
incremented<00:29:34.130><c> whether</c><00:29:34.760><c> it's</c><00:29:35.300><c> a</c><00:29:35.480><c> cached</c><00:29:35.780><c> object</c>

00:29:36.460 --> 00:29:36.470 align:start position:0%
incremented whether it's a cached object
 

00:29:36.470 --> 00:29:41.170 align:start position:0%
incremented whether it's a cached object
or<00:29:36.620><c> a</c><00:29:37.040><c> new</c><00:29:37.340><c> one</c><00:29:39.190><c> well</c><00:29:40.190><c> and</c><00:29:40.400><c> by</c><00:29:40.700><c> the</c><00:29:40.730><c> way</c><00:29:40.910><c> such</c><00:29:41.150><c> a</c>

00:29:41.170 --> 00:29:41.180 align:start position:0%
or a new one well and by the way such a
 

00:29:41.180 --> 00:29:44.440 align:start position:0%
or a new one well and by the way such a
cache<00:29:41.510><c> will</c><00:29:41.780><c> probably</c><00:29:42.320><c> be</c><00:29:42.730><c> implemented</c><00:29:43.730><c> often</c>

00:29:44.440 --> 00:29:44.450 align:start position:0%
cache will probably be implemented often
 

00:29:44.450 --> 00:29:46.630 align:start position:0%
cache will probably be implemented often
be<00:29:44.570><c> implemented</c><00:29:45.080><c> by</c><00:29:45.230><c> using</c><00:29:45.530><c> a</c><00:29:45.740><c> CF</c><00:29:46.040><c> dictionary</c>

00:29:46.630 --> 00:29:46.640 align:start position:0%
be implemented by using a CF dictionary
 

00:29:46.640 --> 00:29:52.210 align:start position:0%
be implemented by using a CF dictionary
as<00:29:46.850><c> I</c><00:29:47.600><c> discussed</c><00:29:48.020><c> earlier</c><00:29:50.920><c> okay</c><00:29:51.920><c> there's</c><00:29:52.160><c> one</c>

00:29:52.210 --> 00:29:52.220 align:start position:0%
as I discussed earlier okay there's one
 

00:29:52.220 --> 00:29:54.250 align:start position:0%
as I discussed earlier okay there's one
final<00:29:52.730><c> general</c><00:29:53.120><c> facility</c><00:29:53.660><c> that</c><00:29:53.840><c> I'm</c><00:29:53.960><c> going</c><00:29:54.200><c> to</c>

00:29:54.250 --> 00:29:54.260 align:start position:0%
final general facility that I'm going to
 

00:29:54.260 --> 00:29:55.750 align:start position:0%
final general facility that I'm going to
discuss<00:29:54.590><c> before</c><00:29:54.950><c> we</c><00:29:55.070><c> move</c><00:29:55.220><c> on</c><00:29:55.400><c> to</c><00:29:55.550><c> talking</c>

00:29:55.750 --> 00:29:55.760 align:start position:0%
discuss before we move on to talking
 

00:29:55.760 --> 00:29:56.700 align:start position:0%
discuss before we move on to talking
about<00:29:55.910><c> some</c><00:29:56.240><c> of</c><00:29:56.270><c> the</c><00:29:56.420><c> higher-level</c>

00:29:56.700 --> 00:29:56.710 align:start position:0%
about some of the higher-level
 

00:29:56.710 --> 00:29:59.430 align:start position:0%
about some of the higher-level
application<00:29:57.710><c> services</c><00:29:58.190><c> in</c><00:29:58.370><c> corefoundation</c>

00:29:59.430 --> 00:29:59.440 align:start position:0%
application services in corefoundation
 

00:29:59.440 --> 00:30:01.900 align:start position:0%
application services in corefoundation
that's<00:30:00.440><c> what</c><00:30:00.650><c> we</c><00:30:00.770><c> call</c><00:30:00.980><c> toll-free</c><00:30:01.310><c> bridging</c>

00:30:01.900 --> 00:30:01.910 align:start position:0%
that's what we call toll-free bridging
 

00:30:01.910 --> 00:30:04.750 align:start position:0%
that's what we call toll-free bridging
this<00:30:02.870><c> is</c><00:30:03.080><c> mostly</c><00:30:03.500><c> a</c><00:30:03.620><c> benefit</c><00:30:04.100><c> for</c><00:30:04.310><c> cocoa</c>

00:30:04.750 --> 00:30:04.760 align:start position:0%
this is mostly a benefit for cocoa
 

00:30:04.760 --> 00:30:08.320 align:start position:0%
this is mostly a benefit for cocoa
applications<00:30:05.600><c> and</c><00:30:06.130><c> frameworks</c><00:30:07.130><c> but</c><00:30:07.970><c> it</c><00:30:08.180><c> also</c>

00:30:08.320 --> 00:30:08.330 align:start position:0%
applications and frameworks but it also
 

00:30:08.330 --> 00:30:11.290 align:start position:0%
applications and frameworks but it also
helps<00:30:08.690><c> a</c><00:30:08.750><c> lot</c><00:30:08.930><c> in</c><00:30:09.230><c> a</c><00:30:09.650><c> mixed</c><00:30:10.190><c> cocoa</c><00:30:10.640><c> and</c><00:30:10.850><c> carbon</c>

00:30:11.290 --> 00:30:11.300 align:start position:0%
helps a lot in a mixed cocoa and carbon
 

00:30:11.300 --> 00:30:14.710 align:start position:0%
helps a lot in a mixed cocoa and carbon
environment<00:30:12.640><c> some</c><00:30:13.640><c> of</c><00:30:13.760><c> the</c><00:30:13.820><c> basic</c><00:30:14.180><c> data</c><00:30:14.330><c> types</c>

00:30:14.710 --> 00:30:14.720 align:start position:0%
environment some of the basic data types
 

00:30:14.720 --> 00:30:18.520 align:start position:0%
environment some of the basic data types
and<00:30:14.960><c> core</c><00:30:15.140><c> foundation</c><00:30:15.770><c> are</c><00:30:16.240><c> bridged</c><00:30:17.380><c> to</c><00:30:18.380><c> their</c>

00:30:18.520 --> 00:30:18.530 align:start position:0%
and core foundation are bridged to their
 

00:30:18.530 --> 00:30:20.860 align:start position:0%
and core foundation are bridged to their
cocoa<00:30:18.920><c> counterparts</c><00:30:19.580><c> such</c><00:30:20.240><c> that</c><00:30:20.480><c> the</c><00:30:20.600><c> core</c>

00:30:20.860 --> 00:30:20.870 align:start position:0%
cocoa counterparts such that the core
 

00:30:20.870 --> 00:30:24.000 align:start position:0%
cocoa counterparts such that the core
foundation<00:30:21.440><c> type</c><00:30:21.740><c> and</c><00:30:22.040><c> the</c><00:30:22.820><c> cocoa</c><00:30:23.360><c> type</c><00:30:23.630><c> are</c>

00:30:24.000 --> 00:30:24.010 align:start position:0%
foundation type and the cocoa type are
 

00:30:24.010 --> 00:30:27.940 align:start position:0%
foundation type and the cocoa type are
interchangeable<00:30:25.510><c> as</c><00:30:26.510><c> the</c><00:30:27.320><c> example</c><00:30:27.770><c> at</c><00:30:27.860><c> the</c>

00:30:27.940 --> 00:30:27.950 align:start position:0%
interchangeable as the example at the
 

00:30:27.950 --> 00:30:31.870 align:start position:0%
interchangeable as the example at the
bottom<00:30:28.100><c> shows</c><00:30:28.610><c> a</c><00:30:29.620><c> simple</c><00:30:30.620><c> cast</c><00:30:31.100><c> is</c><00:30:31.550><c> all</c><00:30:31.700><c> that's</c>

00:30:31.870 --> 00:30:31.880 align:start position:0%
bottom shows a simple cast is all that's
 

00:30:31.880 --> 00:30:36.000 align:start position:0%
bottom shows a simple cast is all that's
needed<00:30:32.150><c> to</c><00:30:32.570><c> convert</c><00:30:33.080><c> the</c><00:30:33.440><c> cocoa</c><00:30:34.250><c> and</c><00:30:34.490><c> a</c><00:30:35.270><c> string</c>

00:30:36.000 --> 00:30:36.010 align:start position:0%
needed to convert the cocoa and a string
 

00:30:36.010 --> 00:30:39.870 align:start position:0%
needed to convert the cocoa and a string
to<00:30:37.010><c> a</c><00:30:37.250><c> core</c><00:30:38.030><c> foundation</c><00:30:38.180><c> CF</c><00:30:38.960><c> string</c><00:30:39.290><c> ref</c><00:30:39.530><c> and</c>

00:30:39.870 --> 00:30:39.880 align:start position:0%
to a core foundation CF string ref and
 

00:30:39.880 --> 00:30:42.909 align:start position:0%
to a core foundation CF string ref and
vice-versa<00:30:40.880><c> to</c><00:30:41.150><c> convert</c><00:30:41.450><c> a</c><00:30:41.480><c> CF</c><00:30:41.810><c> string</c>

00:30:42.909 --> 00:30:42.919 align:start position:0%
vice-versa to convert a CF string
 

00:30:42.919 --> 00:30:47.259 align:start position:0%
vice-versa to convert a CF string
a<00:30:42.980><c> cocoa</c><00:30:43.519><c> NS</c><00:30:43.850><c> string</c><00:30:44.409><c> this</c><00:30:45.409><c> allows</c><00:30:45.799><c> these</c><00:30:46.269><c> core</c>

00:30:47.259 --> 00:30:47.269 align:start position:0%
a cocoa NS string this allows these core
 

00:30:47.269 --> 00:30:49.450 align:start position:0%
a cocoa NS string this allows these core
foundation<00:30:47.899><c> and</c><00:30:48.259><c> cocoa</c><00:30:48.679><c> objects</c><00:30:49.279><c> to</c><00:30:49.369><c> be</c>

00:30:49.450 --> 00:30:49.460 align:start position:0%
foundation and cocoa objects to be
 

00:30:49.460 --> 00:30:51.999 align:start position:0%
foundation and cocoa objects to be
easily<00:30:49.789><c> shared</c><00:30:50.179><c> and</c><00:30:50.570><c> passed</c><00:30:51.499><c> around</c><00:30:51.859><c> the</c>

00:30:51.999 --> 00:30:52.009 align:start position:0%
easily shared and passed around the
 

00:30:52.009 --> 00:30:53.609 align:start position:0%
easily shared and passed around the
different<00:30:52.340><c> layers</c><00:30:52.580><c> in</c><00:30:53.029><c> the</c><00:30:53.179><c> Mac</c><00:30:53.359><c> os10</c>

00:30:53.609 --> 00:30:53.619 align:start position:0%
different layers in the Mac os10
 

00:30:53.619 --> 00:30:57.279 align:start position:0%
different layers in the Mac os10
architecture<00:30:55.239><c> the</c><00:30:56.239><c> list</c><00:30:56.419><c> of</c><00:30:56.539><c> core</c><00:30:56.690><c> foundation</c>

00:30:57.279 --> 00:30:57.289 align:start position:0%
architecture the list of core foundation
 

00:30:57.289 --> 00:31:00.220 align:start position:0%
architecture the list of core foundation
bridge<00:30:57.830><c> types</c><00:30:58.220><c> is</c><00:30:58.700><c> in</c><00:30:59.389><c> the</c><00:30:59.659><c> foundation</c>

00:31:00.220 --> 00:31:00.230 align:start position:0%
bridge types is in the foundation
 

00:31:00.230 --> 00:31:02.739 align:start position:0%
bridge types is in the foundation
release<00:31:00.499><c> notes</c><00:31:00.799><c> on</c><00:31:01.070><c> the</c><00:31:01.220><c> system</c>

00:31:02.739 --> 00:31:02.749 align:start position:0%
release notes on the system
 

00:31:02.749 --> 00:31:07.720 align:start position:0%
release notes on the system
I<00:31:02.779><c> haven't</c><00:31:03.379><c> listed</c><00:31:03.559><c> them</c><00:31:03.830><c> here</c><00:31:06.340><c> okay</c><00:31:07.340><c> now</c><00:31:07.609><c> I'd</c>

00:31:07.720 --> 00:31:07.730 align:start position:0%
I haven't listed them here okay now I'd
 

00:31:07.730 --> 00:31:10.389 align:start position:0%
I haven't listed them here okay now I'd
like<00:31:07.909><c> to</c><00:31:08.059><c> introduce</c><00:31:08.269><c> Doug</c><00:31:08.989><c> Davidson</c><00:31:09.619><c> who</c><00:31:10.249><c> will</c>

00:31:10.389 --> 00:31:10.399 align:start position:0%
like to introduce Doug Davidson who will
 

00:31:10.399 --> 00:31:12.190 align:start position:0%
like to introduce Doug Davidson who will
take<00:31:10.639><c> us</c><00:31:10.789><c> through</c><00:31:10.850><c> some</c><00:31:11.029><c> of</c><00:31:11.330><c> the</c><00:31:11.419><c> application</c>

00:31:12.190 --> 00:31:12.200 align:start position:0%
take us through some of the application
 

00:31:12.200 --> 00:31:14.789 align:start position:0%
take us through some of the application
services<00:31:12.710><c> available</c><00:31:13.159><c> from</c><00:31:13.700><c> core</c><00:31:13.940><c> foundation</c>

00:31:14.789 --> 00:31:14.799 align:start position:0%
services available from core foundation
 

00:31:14.799 --> 00:31:21.570 align:start position:0%
services available from core foundation
Doug

00:31:21.570 --> 00:31:21.580 align:start position:0%
 
 

00:31:21.580 --> 00:31:25.900 align:start position:0%
 
thanks<00:31:22.580><c> Chris</c><00:31:23.110><c> so</c><00:31:24.280><c> first</c><00:31:25.280><c> I'm</c><00:31:25.460><c> going</c><00:31:25.640><c> to</c><00:31:25.730><c> talk</c>

00:31:25.900 --> 00:31:25.910 align:start position:0%
thanks Chris so first I'm going to talk
 

00:31:25.910 --> 00:31:28.750 align:start position:0%
thanks Chris so first I'm going to talk
briefly<00:31:25.940><c> about</c><00:31:26.690><c> some</c><00:31:27.200><c> basic</c><00:31:28.160><c> application</c>

00:31:28.750 --> 00:31:28.760 align:start position:0%
briefly about some basic application
 

00:31:28.760 --> 00:31:31.720 align:start position:0%
briefly about some basic application
services<00:31:29.300><c> available</c><00:31:30.170><c> on</c><00:31:30.530><c> both</c><00:31:30.830><c> Mac</c><00:31:31.250><c> OS</c><00:31:31.490><c> 9</c><00:31:31.550><c> and</c>

00:31:31.720 --> 00:31:31.730 align:start position:0%
services available on both Mac OS 9 and
 

00:31:31.730 --> 00:31:34.210 align:start position:0%
services available on both Mac OS 9 and
Mac<00:31:32.120><c> OS</c><00:31:32.150><c> 10</c><00:31:32.420><c> that</c><00:31:33.320><c> probably</c><00:31:33.890><c> most</c>

00:31:34.210 --> 00:31:34.220 align:start position:0%
Mac OS 10 that probably most
 

00:31:34.220 --> 00:31:35.650 align:start position:0%
Mac OS 10 that probably most
applications<00:31:34.850><c> are</c><00:31:34.970><c> going</c><00:31:35.000><c> to</c><00:31:35.150><c> want</c><00:31:35.300><c> to</c><00:31:35.450><c> use</c>

00:31:35.650 --> 00:31:35.660 align:start position:0%
applications are going to want to use
 

00:31:35.660 --> 00:31:38.230 align:start position:0%
applications are going to want to use
and<00:31:36.100><c> then</c><00:31:37.100><c> I'm</c><00:31:37.340><c> going</c><00:31:37.490><c> to</c><00:31:37.580><c> go</c><00:31:37.730><c> into</c><00:31:37.970><c> a</c><00:31:38.000><c> little</c>

00:31:38.230 --> 00:31:38.240 align:start position:0%
and then I'm going to go into a little
 

00:31:38.240 --> 00:31:40.390 align:start position:0%
and then I'm going to go into a little
more<00:31:38.360><c> depth</c><00:31:38.660><c> on</c><00:31:38.930><c> some</c><00:31:39.080><c> advanced</c><00:31:39.890><c> application</c>

00:31:40.390 --> 00:31:40.400 align:start position:0%
more depth on some advanced application
 

00:31:40.400 --> 00:31:42.640 align:start position:0%
more depth on some advanced application
services<00:31:40.850><c> that</c><00:31:41.660><c> core</c><00:31:41.870><c> foundation</c><00:31:42.320><c> provides</c>

00:31:42.640 --> 00:31:42.650 align:start position:0%
services that core foundation provides
 

00:31:42.650 --> 00:31:48.460 align:start position:0%
services that core foundation provides
on<00:31:42.860><c> Mac</c><00:31:43.040><c> OS</c><00:31:43.310><c> 10</c><00:31:46.840><c> so</c><00:31:47.840><c> let's</c><00:31:47.870><c> start</c><00:31:48.260><c> with</c><00:31:48.380><c> the</c>

00:31:48.460 --> 00:31:48.470 align:start position:0%
on Mac OS 10 so let's start with the
 

00:31:48.470 --> 00:31:50.830 align:start position:0%
on Mac OS 10 so let's start with the
basic<00:31:48.860><c> application</c><00:31:49.430><c> services</c><00:31:49.940><c> yep</c><00:31:50.210><c> bundle</c><00:31:50.630><c> C</c>

00:31:50.830 --> 00:31:50.840 align:start position:0%
basic application services yep bundle C
 

00:31:50.840 --> 00:31:55.090 align:start position:0%
basic application services yep bundle C
up<00:31:50.930><c> plugins</c><00:31:51.380><c> yep</c><00:31:51.650><c> preferences</c><00:31:53.170><c> so</c><00:31:54.170><c> what</c><00:31:54.980><c> is</c><00:31:55.070><c> a</c>

00:31:55.090 --> 00:31:55.100 align:start position:0%
up plugins yep preferences so what is a
 

00:31:55.100 --> 00:31:58.150 align:start position:0%
up plugins yep preferences so what is a
bundle<00:31:55.610><c> a</c><00:31:56.260><c> bundle</c><00:31:57.260><c> is</c><00:31:57.440><c> a</c><00:31:57.500><c> way</c><00:31:57.770><c> of</c><00:31:57.950><c> collecting</c>

00:31:58.150 --> 00:31:58.160 align:start position:0%
bundle a bundle is a way of collecting
 

00:31:58.160 --> 00:32:00.850 align:start position:0%
bundle a bundle is a way of collecting
all<00:31:58.760><c> the</c><00:31:59.060><c> resources</c><00:31:59.570><c> associated</c><00:32:00.020><c> with</c><00:32:00.470><c> an</c>

00:32:00.850 --> 00:32:00.860 align:start position:0%
all the resources associated with an
 

00:32:00.860 --> 00:32:04.030 align:start position:0%
all the resources associated with an
executable<00:32:01.400><c> into</c><00:32:01.670><c> a</c><00:32:01.760><c> single</c><00:32:02.240><c> object</c><00:32:02.890><c> what</c><00:32:03.890><c> can</c>

00:32:04.030 --> 00:32:04.040 align:start position:0%
executable into a single object what can
 

00:32:04.040 --> 00:32:06.420 align:start position:0%
executable into a single object what can
you<00:32:04.130><c> put</c><00:32:04.340><c> in</c><00:32:04.430><c> a</c><00:32:04.520><c> bundle</c><00:32:04.880><c> you</c><00:32:05.750><c> can</c><00:32:05.930><c> put</c><00:32:06.110><c> in</c>

00:32:06.420 --> 00:32:06.430 align:start position:0%
you put in a bundle you can put in
 

00:32:06.430 --> 00:32:08.650 align:start position:0%
you put in a bundle you can put in
executables<00:32:07.430><c> obviously</c><00:32:07.970><c> multiple</c>

00:32:08.650 --> 00:32:08.660 align:start position:0%
executables obviously multiple
 

00:32:08.660 --> 00:32:10.780 align:start position:0%
executables obviously multiple
executables<00:32:09.410><c> perhaps</c><00:32:09.770><c> you</c><00:32:10.430><c> can</c><00:32:10.610><c> have</c>

00:32:10.780 --> 00:32:10.790 align:start position:0%
executables perhaps you can have
 

00:32:10.790 --> 00:32:12.760 align:start position:0%
executables perhaps you can have
different<00:32:11.390><c> versions</c><00:32:11.840><c> of</c><00:32:11.930><c> your</c><00:32:11.990><c> executables</c>

00:32:12.760 --> 00:32:12.770 align:start position:0%
different versions of your executables
 

00:32:12.770 --> 00:32:18.310 align:start position:0%
different versions of your executables
for<00:32:12.980><c> Mac</c><00:32:13.910><c> OS</c><00:32:14.210><c> 9</c><00:32:14.570><c> and</c><00:32:14.740><c> 4</c><00:32:15.740><c> and</c><00:32:16.010><c> for</c><00:32:16.220><c> Mac</c><00:32:16.340><c> OS</c><00:32:16.580><c> 10</c><00:32:17.320><c> you</c>

00:32:18.310 --> 00:32:18.320 align:start position:0%
for Mac OS 9 and 4 and for Mac OS 10 you
 

00:32:18.320 --> 00:32:20.500 align:start position:0%
for Mac OS 9 and 4 and for Mac OS 10 you
can<00:32:18.470><c> have</c><00:32:18.730><c> resources</c><00:32:19.730><c> of</c><00:32:19.850><c> various</c><00:32:20.150><c> types</c><00:32:20.390><c> you</c>

00:32:20.500 --> 00:32:20.510 align:start position:0%
can have resources of various types you
 

00:32:20.510 --> 00:32:24.010 align:start position:0%
can have resources of various types you
can<00:32:20.660><c> have</c><00:32:20.870><c> resource</c><00:32:21.830><c> files</c><00:32:22.390><c> both</c><00:32:23.390><c> localized</c>

00:32:24.010 --> 00:32:24.020 align:start position:0%
can have resource files both localized
 

00:32:24.020 --> 00:32:26.350 align:start position:0%
can have resource files both localized
and<00:32:24.320><c> non</c><00:32:24.500><c> localized</c><00:32:25.010><c> you</c><00:32:25.430><c> can</c><00:32:25.610><c> have</c><00:32:25.760><c> resource</c>

00:32:26.350 --> 00:32:26.360 align:start position:0%
and non localized you can have resource
 

00:32:26.360 --> 00:32:28.630 align:start position:0%
and non localized you can have resource
manager<00:32:26.930><c> style</c><00:32:27.170><c> resources</c><00:32:27.800><c> again</c><00:32:28.400><c> both</c>

00:32:28.630 --> 00:32:28.640 align:start position:0%
manager style resources again both
 

00:32:28.640 --> 00:32:31.840 align:start position:0%
manager style resources again both
localized<00:32:29.240><c> and</c><00:32:29.540><c> non</c><00:32:29.690><c> localized</c><00:32:30.200><c> and</c><00:32:30.530><c> in</c><00:32:31.400><c> any</c>

00:32:31.840 --> 00:32:31.850 align:start position:0%
localized and non localized and in any
 

00:32:31.850 --> 00:32:36.490 align:start position:0%
localized and non localized and in any
number<00:32:32.270><c> of</c><00:32:32.390><c> localizations</c><00:32:33.520><c> you</c><00:32:34.520><c> can</c><00:32:34.730><c> have</c><00:32:35.500><c> you</c>

00:32:36.490 --> 00:32:36.500 align:start position:0%
number of localizations you can have you
 

00:32:36.500 --> 00:32:40.060 align:start position:0%
number of localizations you can have you
have<00:32:36.710><c> a</c><00:32:37.780><c> property</c><00:32:38.780><c> list</c><00:32:39.020><c> the</c><00:32:39.230><c> info</c><00:32:39.560><c> dictionary</c>

00:32:40.060 --> 00:32:40.070 align:start position:0%
have a property list the info dictionary
 

00:32:40.070 --> 00:32:41.890 align:start position:0%
have a property list the info dictionary
for<00:32:40.280><c> the</c><00:32:40.310><c> bundle</c><00:32:40.610><c> which</c><00:32:41.300><c> can</c><00:32:41.540><c> contain</c>

00:32:41.890 --> 00:32:41.900 align:start position:0%
for the bundle which can contain
 

00:32:41.900 --> 00:32:44.140 align:start position:0%
for the bundle which can contain
essentially<00:32:42.500><c> arbitrary</c><00:32:42.710><c> metadata</c><00:32:43.700><c> about</c>

00:32:44.140 --> 00:32:44.150 align:start position:0%
essentially arbitrary metadata about
 

00:32:44.150 --> 00:32:48.220 align:start position:0%
essentially arbitrary metadata about
that<00:32:44.360><c> bundle</c><00:32:45.010><c> you</c><00:32:46.010><c> can</c><00:32:46.040><c> have</c><00:32:46.990><c> libraries</c><00:32:47.990><c> you</c>

00:32:48.220 --> 00:32:48.230 align:start position:0%
that bundle you can have libraries you
 

00:32:48.230 --> 00:32:49.720 align:start position:0%
that bundle you can have libraries you
can<00:32:48.380><c> have</c><00:32:48.500><c> plugins</c><00:32:48.800><c> you</c><00:32:49.130><c> can</c><00:32:49.310><c> put</c><00:32:49.550><c> in</c>

00:32:49.720 --> 00:32:49.730 align:start position:0%
can have plugins you can put in
 

00:32:49.730 --> 00:32:52.450 align:start position:0%
can have plugins you can put in
essentially<00:32:50.360><c> any</c><00:32:51.020><c> kind</c><00:32:51.470><c> of</c><00:32:51.590><c> file</c><00:32:51.890><c> of</c><00:32:52.070><c> folders</c>

00:32:52.450 --> 00:32:52.460 align:start position:0%
essentially any kind of file of folders
 

00:32:52.460 --> 00:32:57.970 align:start position:0%
essentially any kind of file of folders
you<00:32:52.610><c> want</c><00:32:52.820><c> into</c><00:32:53.150><c> the</c><00:32:53.240><c> bundle</c><00:32:53.420><c> and</c><00:32:56.530><c> CF</c><00:32:57.530><c> bundle</c>

00:32:57.970 --> 00:32:57.980 align:start position:0%
you want into the bundle and CF bundle
 

00:32:57.980 --> 00:32:59.710 align:start position:0%
you want into the bundle and CF bundle
is<00:32:58.160><c> the</c><00:32:58.460><c> programmatic</c><00:32:58.760><c> interface</c><00:32:59.450><c> for</c>

00:32:59.710 --> 00:32:59.720 align:start position:0%
is the programmatic interface for
 

00:32:59.720 --> 00:33:02.260 align:start position:0%
is the programmatic interface for
dealing<00:32:59.930><c> with</c><00:33:00.080><c> bundles</c><00:33:00.380><c> it</c><00:33:00.980><c> has</c><00:33:01.700><c> functions</c>

00:33:02.260 --> 00:33:02.270 align:start position:0%
dealing with bundles it has functions
 

00:33:02.270 --> 00:33:04.360 align:start position:0%
dealing with bundles it has functions
that<00:33:02.390><c> allow</c><00:33:02.540><c> you</c><00:33:02.690><c> to</c><00:33:02.810><c> locate</c><00:33:03.770><c> any</c><00:33:04.070><c> of</c><00:33:04.250><c> these</c>

00:33:04.360 --> 00:33:04.370 align:start position:0%
that allow you to locate any of these
 

00:33:04.370 --> 00:33:09.520 align:start position:0%
that allow you to locate any of these
objects<00:33:04.880><c> within</c><00:33:05.090><c> the</c><00:33:05.240><c> bundle</c><00:33:07.840><c> C</c><00:33:08.840><c> a</c><00:33:08.870><c> bundle</c><00:33:09.350><c> is</c>

00:33:09.520 --> 00:33:09.530 align:start position:0%
objects within the bundle C a bundle is
 

00:33:09.530 --> 00:33:13.210 align:start position:0%
objects within the bundle C a bundle is
the<00:33:09.830><c> heart</c><00:33:10.400><c> of</c><00:33:10.640><c> our</c><00:33:11.680><c> localization</c><00:33:12.680><c> strategy</c>

00:33:13.210 --> 00:33:13.220 align:start position:0%
the heart of our localization strategy
 

00:33:13.220 --> 00:33:16.230 align:start position:0%
the heart of our localization strategy
this<00:33:13.850><c> is</c><00:33:13.910><c> what</c><00:33:14.150><c> allows</c><00:33:14.420><c> us</c><00:33:14.450><c> to</c><00:33:15.110><c> ship</c><00:33:15.350><c> back</c><00:33:15.530><c> os10</c>

00:33:16.230 --> 00:33:16.240 align:start position:0%
this is what allows us to ship back os10
 

00:33:16.240 --> 00:33:17.920 align:start position:0%
this is what allows us to ship back os10
simultaneously<00:33:17.240><c> in</c><00:33:17.450><c> many</c><00:33:17.720><c> different</c>

00:33:17.920 --> 00:33:17.930 align:start position:0%
simultaneously in many different
 

00:33:17.930 --> 00:33:21.280 align:start position:0%
simultaneously in many different
languages<00:33:19.330><c> because</c><00:33:20.330><c> what</c><00:33:20.540><c> C</c><00:33:20.720><c> a</c><00:33:20.750><c> bundle</c><00:33:21.170><c> will</c>

00:33:21.280 --> 00:33:21.290 align:start position:0%
languages because what C a bundle will
 

00:33:21.290 --> 00:33:24.370 align:start position:0%
languages because what C a bundle will
do<00:33:21.470><c> is</c><00:33:22.510><c> automatically</c><00:33:23.510><c> provide</c><00:33:23.930><c> you</c><00:33:24.140><c> with</c><00:33:24.290><c> the</c>

00:33:24.370 --> 00:33:24.380 align:start position:0%
do is automatically provide you with the
 

00:33:24.380 --> 00:33:26.470 align:start position:0%
do is automatically provide you with the
correctly<00:33:25.100><c> localized</c><00:33:25.670><c> version</c><00:33:26.210><c> of</c><00:33:26.360><c> any</c>

00:33:26.470 --> 00:33:26.480 align:start position:0%
correctly localized version of any
 

00:33:26.480 --> 00:33:29.680 align:start position:0%
correctly localized version of any
particular<00:33:26.810><c> resource</c><00:33:27.400><c> based</c><00:33:28.400><c> on</c><00:33:28.730><c> the</c><00:33:29.330><c> user's</c>

00:33:29.680 --> 00:33:29.690 align:start position:0%
particular resource based on the user's
 

00:33:29.690 --> 00:33:31.860 align:start position:0%
particular resource based on the user's
preferences

00:33:31.860 --> 00:33:31.870 align:start position:0%
preferences
 

00:33:31.870 --> 00:33:35.070 align:start position:0%
preferences
see<00:33:32.620><c> a</c><00:33:32.650><c> bundle</c><00:33:33.130><c> also</c><00:33:33.580><c> has</c><00:33:34.090><c> some</c><00:33:34.510><c> basic</c><00:33:34.870><c> code</c>

00:33:35.070 --> 00:33:35.080 align:start position:0%
see a bundle also has some basic code
 

00:33:35.080 --> 00:33:39.779 align:start position:0%
see a bundle also has some basic code
loading<00:33:35.350><c> facilities</c><00:33:37.679><c> that</c><00:33:38.679><c> is</c><00:33:38.980><c> it</c><00:33:39.400><c> can</c><00:33:39.580><c> load</c>

00:33:39.779 --> 00:33:39.789 align:start position:0%
loading facilities that is it can load
 

00:33:39.789 --> 00:33:41.580 align:start position:0%
loading facilities that is it can load
code<00:33:40.090><c> and</c><00:33:40.480><c> allow</c><00:33:40.720><c> you</c><00:33:40.779><c> to</c><00:33:40.960><c> look</c><00:33:41.080><c> up</c><00:33:41.230><c> symbols</c>

00:33:41.580 --> 00:33:41.590 align:start position:0%
code and allow you to look up symbols
 

00:33:41.590 --> 00:33:44.250 align:start position:0%
code and allow you to look up symbols
within<00:33:41.890><c> it</c><00:33:42.010><c> and</c><00:33:42.760><c> in</c><00:33:43.299><c> particular</c><00:33:43.450><c> it</c><00:33:43.960><c> can</c><00:33:44.110><c> do</c>

00:33:44.250 --> 00:33:44.260 align:start position:0%
within it and in particular it can do
 

00:33:44.260 --> 00:33:48.630 align:start position:0%
within it and in particular it can do
this<00:33:45.750><c> transparently</c><00:33:47.190><c> whether</c><00:33:48.190><c> the</c><00:33:48.429><c> code</c>

00:33:48.630 --> 00:33:48.640 align:start position:0%
this transparently whether the code
 

00:33:48.640 --> 00:33:50.100 align:start position:0%
this transparently whether the code
you're<00:33:48.820><c> loading</c><00:33:49.270><c> or</c><00:33:49.419><c> whether</c><00:33:49.600><c> the</c><00:33:49.750><c> code</c><00:33:49.900><c> that</c>

00:33:50.100 --> 00:33:50.110 align:start position:0%
you're loading or whether the code that
 

00:33:50.110 --> 00:33:53.250 align:start position:0%
you're loading or whether the code that
is<00:33:50.380><c> doing</c><00:33:50.710><c> the</c><00:33:50.830><c> loading</c><00:33:51.159><c> is</c><00:33:51.760><c> mokou</c><00:33:52.330><c> or</c><00:33:52.510><c> CFM</c><00:33:52.990><c> on</c>

00:33:53.250 --> 00:33:53.260 align:start position:0%
is doing the loading is mokou or CFM on
 

00:33:53.260 --> 00:33:55.769 align:start position:0%
is doing the loading is mokou or CFM on
Mac<00:33:53.470><c> OS</c><00:33:53.710><c> 10</c><00:33:54.150><c> some</c><00:33:55.150><c> of</c><00:33:55.330><c> you</c><00:33:55.450><c> have</c><00:33:55.600><c> probably</c>

00:33:55.769 --> 00:33:55.779 align:start position:0%
Mac OS 10 some of you have probably
 

00:33:55.779 --> 00:33:58.440 align:start position:0%
Mac OS 10 some of you have probably
already<00:33:56.049><c> use</c><00:33:56.559><c> this</c><00:33:56.740><c> facility</c><00:33:56.919><c> for</c><00:33:57.460><c> example</c><00:33:57.909><c> to</c>

00:33:58.440 --> 00:33:58.450 align:start position:0%
already use this facility for example to
 

00:33:58.450 --> 00:34:02.279 align:start position:0%
already use this facility for example to
allow<00:33:58.799><c> CFM</c><00:33:59.799><c> executables</c><00:34:00.580><c> on</c><00:34:00.789><c> Mac</c><00:34:01.029><c> OS</c><00:34:01.299><c> 10</c><00:34:01.330><c> to</c>

00:34:02.279 --> 00:34:02.289 align:start position:0%
allow CFM executables on Mac OS 10 to
 

00:34:02.289 --> 00:34:03.779 align:start position:0%
allow CFM executables on Mac OS 10 to
use<00:34:02.409><c> functionalities</c><00:34:03.130><c> from</c><00:34:03.370><c> Mach</c><00:34:03.610><c> o</c>

00:34:03.779 --> 00:34:03.789 align:start position:0%
use functionalities from Mach o
 

00:34:03.789 --> 00:34:09.990 align:start position:0%
use functionalities from Mach o
frameworks<00:34:05.850><c> now</c><00:34:07.889><c> the</c><00:34:08.889><c> functionality</c><00:34:09.760><c> to</c><00:34:09.849><c> see</c>

00:34:09.990 --> 00:34:10.000 align:start position:0%
frameworks now the functionality to see
 

00:34:10.000 --> 00:34:12.329 align:start position:0%
frameworks now the functionality to see
a<00:34:10.030><c> bundle</c><00:34:10.389><c> provides</c><00:34:10.690><c> is</c><00:34:10.990><c> enough</c><00:34:11.409><c> for</c><00:34:11.619><c> basic</c>

00:34:12.329 --> 00:34:12.339 align:start position:0%
a bundle provides is enough for basic
 

00:34:12.339 --> 00:34:14.609 align:start position:0%
a bundle provides is enough for basic
loading<00:34:13.300><c> of</c><00:34:13.419><c> plugins</c><00:34:13.659><c> that</c><00:34:13.960><c> is</c><00:34:14.169><c> you</c><00:34:14.290><c> can</c><00:34:14.409><c> load</c>

00:34:14.609 --> 00:34:14.619 align:start position:0%
loading of plugins that is you can load
 

00:34:14.619 --> 00:34:15.960 align:start position:0%
loading of plugins that is you can load
it<00:34:14.770><c> and</c><00:34:14.980><c> you</c><00:34:15.099><c> can</c><00:34:15.220><c> look</c><00:34:15.310><c> up</c><00:34:15.460><c> entry</c><00:34:15.700><c> points</c>

00:34:15.960 --> 00:34:15.970 align:start position:0%
it and you can look up entry points
 

00:34:15.970 --> 00:34:19.230 align:start position:0%
it and you can look up entry points
within<00:34:16.179><c> it</c><00:34:16.560><c> but</c><00:34:17.639><c> what</c><00:34:18.639><c> it</c><00:34:18.730><c> doesn't</c><00:34:18.909><c> do</c><00:34:19.210><c> is</c>

00:34:19.230 --> 00:34:19.240 align:start position:0%
within it but what it doesn't do is
 

00:34:19.240 --> 00:34:22.020 align:start position:0%
within it but what it doesn't do is
manage<00:34:19.869><c> the</c><00:34:20.679><c> interface</c><00:34:21.129><c> between</c><00:34:21.490><c> the</c><00:34:21.849><c> host</c>

00:34:22.020 --> 00:34:22.030 align:start position:0%
manage the interface between the host
 

00:34:22.030 --> 00:34:24.510 align:start position:0%
manage the interface between the host
and<00:34:22.210><c> the</c><00:34:22.300><c> plug-in</c><00:34:22.570><c> for</c><00:34:22.960><c> you</c><00:34:23.139><c> for</c><00:34:23.950><c> that</c><00:34:24.099><c> we</c><00:34:24.310><c> have</c>

00:34:24.510 --> 00:34:24.520 align:start position:0%
and the plug-in for you for that we have
 

00:34:24.520 --> 00:34:26.460 align:start position:0%
and the plug-in for you for that we have
a<00:34:24.820><c> specialized</c><00:34:25.599><c> kind</c><00:34:25.810><c> of</c><00:34:25.960><c> see</c><00:34:26.050><c> a</c><00:34:26.080><c> bundle</c>

00:34:26.460 --> 00:34:26.470 align:start position:0%
a specialized kind of see a bundle
 

00:34:26.470 --> 00:34:26.820 align:start position:0%
a specialized kind of see a bundle
called

00:34:26.820 --> 00:34:26.830 align:start position:0%
called
 

00:34:26.830 --> 00:34:30.480 align:start position:0%
called
CF<00:34:27.190><c> plug-in</c><00:34:28.230><c> now</c><00:34:29.230><c> it's</c><00:34:29.800><c> possible</c><00:34:30.280><c> you</c><00:34:30.369><c> may</c>

00:34:30.480 --> 00:34:30.490 align:start position:0%
CF plug-in now it's possible you may
 

00:34:30.490 --> 00:34:35.700 align:start position:0%
CF plug-in now it's possible you may
already<00:34:30.730><c> have</c><00:34:32.730><c> an</c><00:34:33.730><c> interface</c><00:34:33.970><c> between</c><00:34:34.869><c> host</c>

00:34:35.700 --> 00:34:35.710 align:start position:0%
already have an interface between host
 

00:34:35.710 --> 00:34:38.849 align:start position:0%
already have an interface between host
and<00:34:35.889><c> plugin</c><00:34:36.700><c> that</c><00:34:37.450><c> you</c><00:34:37.659><c> use</c><00:34:37.960><c> and</c><00:34:38.349><c> in</c><00:34:38.530><c> that</c><00:34:38.649><c> case</c>

00:34:38.849 --> 00:34:38.859 align:start position:0%
and plugin that you use and in that case
 

00:34:38.859 --> 00:34:40.349 align:start position:0%
and plugin that you use and in that case
you<00:34:39.220><c> might</c><00:34:39.369><c> not</c><00:34:39.550><c> be</c><00:34:39.700><c> interested</c><00:34:40.119><c> in</c><00:34:40.179><c> see</c><00:34:40.330><c> a</c>

00:34:40.349 --> 00:34:40.359 align:start position:0%
you might not be interested in see a
 

00:34:40.359 --> 00:34:42.180 align:start position:0%
you might not be interested in see a
plug-in<00:34:40.869><c> but</c><00:34:41.320><c> if</c><00:34:41.409><c> you're</c><00:34:41.560><c> looking</c><00:34:41.830><c> for</c><00:34:41.980><c> such</c><00:34:42.159><c> a</c>

00:34:42.180 --> 00:34:42.190 align:start position:0%
plug-in but if you're looking for such a
 

00:34:42.190 --> 00:34:44.310 align:start position:0%
plug-in but if you're looking for such a
thing<00:34:42.460><c> you</c><00:34:43.240><c> might</c><00:34:43.419><c> want</c><00:34:43.599><c> to</c><00:34:43.629><c> consider</c><00:34:43.929><c> CF</c>

00:34:44.310 --> 00:34:44.320 align:start position:0%
thing you might want to consider CF
 

00:34:44.320 --> 00:34:47.129 align:start position:0%
thing you might want to consider CF
plugin<00:34:44.800><c> I'm</c><00:34:45.790><c> not</c><00:34:46.089><c> gonna</c><00:34:46.240><c> explain</c><00:34:46.599><c> in</c><00:34:46.780><c> detail</c>

00:34:47.129 --> 00:34:47.139 align:start position:0%
plugin I'm not gonna explain in detail
 

00:34:47.139 --> 00:34:52.200 align:start position:0%
plugin I'm not gonna explain in detail
how<00:34:47.169><c> it</c><00:34:47.440><c> works</c><00:34:47.619><c> now</c><00:34:47.919><c> it</c><00:34:48.909><c> works</c><00:34:49.800><c> the</c><00:34:50.800><c> the</c><00:34:51.399><c> host</c>

00:34:52.200 --> 00:34:52.210 align:start position:0%
how it works now it works the the host
 

00:34:52.210 --> 00:34:55.859 align:start position:0%
how it works now it works the the host
looks<00:34:52.599><c> up</c><00:34:53.369><c> interfaces</c><00:34:54.369><c> by</c><00:34:54.760><c> you</c><00:34:55.060><c> you</c><00:34:55.210><c> IDs</c><00:34:55.540><c> where</c>

00:34:55.859 --> 00:34:55.869 align:start position:0%
looks up interfaces by you you IDs where
 

00:34:55.869 --> 00:34:59.370 align:start position:0%
looks up interfaces by you you IDs where
the<00:34:55.960><c> interfaces</c><00:34:56.619><c> are</c><00:34:57.210><c> C++</c><00:34:58.210><c> or</c><00:34:58.420><c> com</c><00:34:58.900><c> style</c>

00:34:59.370 --> 00:34:59.380 align:start position:0%
the interfaces are C++ or com style
 

00:34:59.380 --> 00:35:02.040 align:start position:0%
the interfaces are C++ or com style
tables<00:35:00.130><c> of</c><00:35:00.280><c> function</c><00:35:00.640><c> pointers</c><00:35:01.089><c> those</c><00:35:01.780><c> get</c>

00:35:02.040 --> 00:35:02.050 align:start position:0%
tables of function pointers those get
 

00:35:02.050 --> 00:35:04.530 align:start position:0%
tables of function pointers those get
passed<00:35:02.290><c> back</c><00:35:02.790><c> the</c><00:35:03.790><c> best</c><00:35:04.000><c> place</c><00:35:04.300><c> to</c><00:35:04.330><c> learn</c>

00:35:04.530 --> 00:35:04.540 align:start position:0%
passed back the best place to learn
 

00:35:04.540 --> 00:35:06.270 align:start position:0%
passed back the best place to learn
about<00:35:04.810><c> this</c><00:35:05.050><c> is</c><00:35:05.290><c> through</c><00:35:05.500><c> some</c><00:35:05.650><c> examples</c><00:35:06.220><c> that</c>

00:35:06.270 --> 00:35:06.280 align:start position:0%
about this is through some examples that
 

00:35:06.280 --> 00:35:08.910 align:start position:0%
about this is through some examples that
we<00:35:06.430><c> have</c><00:35:06.670><c> both</c><00:35:07.630><c> in</c><00:35:07.930><c> the</c><00:35:08.140><c> core</c><00:35:08.500><c> foundation</c>

00:35:08.910 --> 00:35:08.920 align:start position:0%
we have both in the core foundation
 

00:35:08.920 --> 00:35:11.460 align:start position:0%
we have both in the core foundation
documentation<00:35:09.730><c> on</c><00:35:09.849><c> Mac</c><00:35:10.030><c> OS</c><00:35:10.270><c> 10</c><00:35:10.300><c> and</c><00:35:10.869><c> in</c><00:35:11.349><c> the</c>

00:35:11.460 --> 00:35:11.470 align:start position:0%
documentation on Mac OS 10 and in the
 

00:35:11.470 --> 00:35:14.670 align:start position:0%
documentation on Mac OS 10 and in the
carbon<00:35:11.859><c> Lib</c><00:35:11.980><c> SDK</c><00:35:12.780><c> you'll</c><00:35:13.780><c> also</c><00:35:13.990><c> find</c><00:35:14.320><c> that</c>

00:35:14.670 --> 00:35:14.680 align:start position:0%
carbon Lib SDK you'll also find that
 

00:35:14.680 --> 00:35:16.380 align:start position:0%
carbon Lib SDK you'll also find that
there<00:35:15.160><c> are</c><00:35:15.250><c> a</c><00:35:15.310><c> few</c><00:35:15.369><c> places</c><00:35:15.700><c> on</c><00:35:15.910><c> the</c><00:35:16.030><c> system</c>

00:35:16.380 --> 00:35:16.390 align:start position:0%
there are a few places on the system
 

00:35:16.390 --> 00:35:21.270 align:start position:0%
there are a few places on the system
where<00:35:17.490><c> we</c><00:35:18.490><c> use</c><00:35:18.810><c> CF</c><00:35:19.810><c> plug-in</c><00:35:20.290><c> as</c><00:35:20.740><c> our</c><00:35:20.920><c> interface</c>

00:35:21.270 --> 00:35:21.280 align:start position:0%
where we use CF plug-in as our interface
 

00:35:21.280 --> 00:35:23.220 align:start position:0%
where we use CF plug-in as our interface
for<00:35:21.430><c> plugins</c><00:35:21.760><c> for</c><00:35:21.940><c> example</c><00:35:22.330><c> for</c><00:35:22.510><c> plugins</c><00:35:22.900><c> for</c>

00:35:23.220 --> 00:35:23.230 align:start position:0%
for plugins for example for plugins for
 

00:35:23.230 --> 00:35:28.290 align:start position:0%
for plugins for example for plugins for
the<00:35:23.380><c> printing</c><00:35:23.710><c> subsystem</c><00:35:24.310><c> on</c><00:35:24.430><c> Mac</c><00:35:24.640><c> OS</c><00:35:24.880><c> 10</c>

00:35:28.290 --> 00:35:28.300 align:start position:0%
 
 

00:35:28.300 --> 00:35:32.290 align:start position:0%
 
and<00:35:29.300><c> finally</c><00:35:29.690><c> CF</c><00:35:30.080><c> preferences</c><00:35:30.910><c> this</c><00:35:31.910><c> is</c><00:35:32.150><c> our</c>

00:35:32.290 --> 00:35:32.300 align:start position:0%
and finally CF preferences this is our
 

00:35:32.300 --> 00:35:36.160 align:start position:0%
and finally CF preferences this is our
general<00:35:32.780><c> facility</c><00:35:33.320><c> for</c><00:35:34.390><c> small</c><00:35:35.390><c> flexible</c>

00:35:36.160 --> 00:35:36.170 align:start position:0%
general facility for small flexible
 

00:35:36.170 --> 00:35:39.910 align:start position:0%
general facility for small flexible
application<00:35:36.880><c> preference</c><00:35:37.880><c> storage</c><00:35:38.330><c> and</c><00:35:38.920><c> these</c>

00:35:39.910 --> 00:35:39.920 align:start position:0%
application preference storage and these
 

00:35:39.920 --> 00:35:41.890 align:start position:0%
application preference storage and these
preferences<00:35:40.520><c> are</c><00:35:40.670><c> usually</c><00:35:41.030><c> both</c><00:35:41.240><c> per</c><00:35:41.600><c> user</c>

00:35:41.890 --> 00:35:41.900 align:start position:0%
preferences are usually both per user
 

00:35:41.900 --> 00:35:43.900 align:start position:0%
preferences are usually both per user
and<00:35:42.080><c> per</c><00:35:42.590><c> application</c><00:35:43.070><c> although</c><00:35:43.640><c> there</c><00:35:43.820><c> are</c>

00:35:43.900 --> 00:35:43.910 align:start position:0%
and per application although there are
 

00:35:43.910 --> 00:35:46.420 align:start position:0%
and per application although there are
other<00:35:44.090><c> possibilities</c><00:35:44.540><c> and</c><00:35:45.190><c> the</c><00:35:46.190><c> way</c><00:35:46.280><c> this</c>

00:35:46.420 --> 00:35:46.430 align:start position:0%
other possibilities and the way this
 

00:35:46.430 --> 00:35:48.520 align:start position:0%
other possibilities and the way this
works<00:35:46.700><c> is</c><00:35:46.880><c> that</c><00:35:46.940><c> any</c><00:35:47.540><c> particular</c><00:35:47.720><c> preference</c>

00:35:48.520 --> 00:35:48.530 align:start position:0%
works is that any particular preference
 

00:35:48.530 --> 00:35:51.460 align:start position:0%
works is that any particular preference
is<00:35:49.190><c> referred</c><00:35:49.670><c> to</c><00:35:49.700><c> by</c><00:35:50.270><c> a</c><00:35:50.300><c> name</c><00:35:50.690><c> which</c><00:35:51.080><c> is</c><00:35:51.230><c> just</c><00:35:51.410><c> a</c>

00:35:51.460 --> 00:35:51.470 align:start position:0%
is referred to by a name which is just a
 

00:35:51.470 --> 00:35:55.900 align:start position:0%
is referred to by a name which is just a
CF<00:35:51.770><c> string</c><00:35:52.070><c> key</c><00:35:52.940><c> and</c><00:35:54.160><c> the</c><00:35:55.160><c> value</c><00:35:55.640><c> of</c><00:35:55.670><c> the</c>

00:35:55.900 --> 00:35:55.910 align:start position:0%
CF string key and the value of the
 

00:35:55.910 --> 00:35:58.510 align:start position:0%
CF string key and the value of the
preference<00:35:56.360><c> can</c><00:35:56.810><c> be</c><00:35:56.990><c> any</c><00:35:57.380><c> property</c><00:35:58.040><c> list</c><00:35:58.250><c> type</c>

00:35:58.510 --> 00:35:58.520 align:start position:0%
preference can be any property list type
 

00:35:58.520 --> 00:36:01.720 align:start position:0%
preference can be any property list type
so<00:35:58.910><c> it's</c><00:35:59.060><c> very</c><00:35:59.150><c> flexible</c><00:35:59.920><c> all</c><00:36:00.920><c> you</c><00:36:01.100><c> do</c><00:36:01.280><c> to</c>

00:36:01.720 --> 00:36:01.730 align:start position:0%
so it's very flexible all you do to
 

00:36:01.730 --> 00:36:03.850 align:start position:0%
so it's very flexible all you do to
store<00:36:02.000><c> a</c><00:36:02.030><c> preference</c><00:36:02.510><c> is</c><00:36:02.720><c> just</c><00:36:03.050><c> set</c><00:36:03.650><c> that</c>

00:36:03.850 --> 00:36:03.860 align:start position:0%
store a preference is just set that
 

00:36:03.860 --> 00:36:06.460 align:start position:0%
store a preference is just set that
preference<00:36:04.340><c> for</c><00:36:04.670><c> the</c><00:36:04.880><c> name</c><00:36:05.060><c> key</c><00:36:05.420><c> the</c><00:36:05.960><c> name</c><00:36:06.170><c> and</c>

00:36:06.460 --> 00:36:06.470 align:start position:0%
preference for the name key the name and
 

00:36:06.470 --> 00:36:08.770 align:start position:0%
preference for the name key the name and
you<00:36:07.400><c> just</c><00:36:07.610><c> look</c><00:36:07.850><c> it</c><00:36:07.970><c> up</c><00:36:08.060><c> by</c><00:36:08.270><c> name</c><00:36:08.480><c> when</c><00:36:08.690><c> you</c>

00:36:08.770 --> 00:36:08.780 align:start position:0%
you just look it up by name when you
 

00:36:08.780 --> 00:36:10.720 align:start position:0%
you just look it up by name when you
want<00:36:09.020><c> it</c><00:36:09.140><c> and</c><00:36:09.260><c> see</c><00:36:09.860><c> a</c><00:36:09.890><c> preference</c><00:36:10.370><c> this</c><00:36:10.490><c> takes</c>

00:36:10.720 --> 00:36:10.730 align:start position:0%
want it and see a preference this takes
 

00:36:10.730 --> 00:36:12.610 align:start position:0%
want it and see a preference this takes
care<00:36:10.910><c> of</c><00:36:10.970><c> everything</c><00:36:11.240><c> else</c><00:36:11.450><c> handles</c><00:36:12.380><c> all</c><00:36:12.530><c> the</c>

00:36:12.610 --> 00:36:12.620 align:start position:0%
care of everything else handles all the
 

00:36:12.620 --> 00:36:15.280 align:start position:0%
care of everything else handles all the
storage<00:36:12.920><c> for</c><00:36:13.250><c> you</c><00:36:13.750><c> currently</c><00:36:14.750><c> they're</c><00:36:14.960><c> stored</c>

00:36:15.280 --> 00:36:15.290 align:start position:0%
storage for you currently they're stored
 

00:36:15.290 --> 00:36:17.650 align:start position:0%
storage for you currently they're stored
using<00:36:15.740><c> the</c><00:36:16.310><c> flattened</c><00:36:16.820><c> XML</c><00:36:17.240><c> representation</c>

00:36:17.650 --> 00:36:17.660 align:start position:0%
using the flattened XML representation
 

00:36:17.660 --> 00:36:21.190 align:start position:0%
using the flattened XML representation
for<00:36:18.170><c> property</c><00:36:18.560><c> lists</c><00:36:19.750><c> there</c><00:36:20.750><c> are</c><00:36:20.840><c> a</c><00:36:20.900><c> couple</c><00:36:21.050><c> of</c>

00:36:21.190 --> 00:36:21.200 align:start position:0%
for property lists there are a couple of
 

00:36:21.200 --> 00:36:24.340 align:start position:0%
for property lists there are a couple of
caveats<00:36:21.410><c> this</c><00:36:22.010><c> is</c><00:36:22.130><c> not</c><00:36:22.280><c> intended</c><00:36:22.610><c> for</c><00:36:23.350><c> huge</c>

00:36:24.340 --> 00:36:24.350 align:start position:0%
caveats this is not intended for huge
 

00:36:24.350 --> 00:36:26.680 align:start position:0%
caveats this is not intended for huge
caches<00:36:24.980><c> or</c><00:36:25.220><c> large</c><00:36:25.460><c> chunks</c><00:36:25.820><c> of</c><00:36:25.940><c> binary</c><00:36:26.300><c> data</c><00:36:26.480><c> or</c>

00:36:26.680 --> 00:36:26.690 align:start position:0%
caches or large chunks of binary data or
 

00:36:26.690 --> 00:36:31.810 align:start position:0%
caches or large chunks of binary data or
anything<00:36:26.870><c> like</c><00:36:27.080><c> that</c><00:36:29.080><c> also</c><00:36:30.490><c> you</c><00:36:31.490><c> need</c><00:36:31.640><c> to</c><00:36:31.700><c> be</c>

00:36:31.810 --> 00:36:31.820 align:start position:0%
anything like that also you need to be
 

00:36:31.820 --> 00:36:34.150 align:start position:0%
anything like that also you need to be
sure<00:36:32.090><c> that</c><00:36:32.470><c> anything</c><00:36:33.470><c> your</c><00:36:33.710><c> application</c>

00:36:34.150 --> 00:36:34.160 align:start position:0%
sure that anything your application
 

00:36:34.160 --> 00:36:37.060 align:start position:0%
sure that anything your application
absolutely<00:36:34.640><c> relies</c><00:36:34.970><c> on</c><00:36:35.020><c> is</c><00:36:36.020><c> not</c><00:36:36.350><c> stored</c><00:36:36.710><c> here</c>

00:36:37.060 --> 00:36:37.070 align:start position:0%
absolutely relies on is not stored here
 

00:36:37.070 --> 00:36:38.650 align:start position:0%
absolutely relies on is not stored here
these<00:36:37.430><c> are</c><00:36:37.730><c> stored</c><00:36:37.970><c> external</c><00:36:38.480><c> to</c><00:36:38.570><c> the</c>

00:36:38.650 --> 00:36:38.660 align:start position:0%
these are stored external to the
 

00:36:38.660 --> 00:36:42.280 align:start position:0%
these are stored external to the
application<00:36:39.290><c> and</c><00:36:39.530><c> it's</c><00:36:40.040><c> possible</c><00:36:40.550><c> that</c><00:36:41.290><c> users</c>

00:36:42.280 --> 00:36:42.290 align:start position:0%
application and it's possible that users
 

00:36:42.290 --> 00:36:44.770 align:start position:0%
application and it's possible that users
could<00:36:42.440><c> erase</c><00:36:42.830><c> their</c><00:36:43.040><c> preferences</c><00:36:43.610><c> you</c><00:36:44.600><c> should</c>

00:36:44.770 --> 00:36:44.780 align:start position:0%
could erase their preferences you should
 

00:36:44.780 --> 00:36:46.060 align:start position:0%
could erase their preferences you should
be<00:36:44.900><c> prepared</c><00:36:45.290><c> for</c><00:36:45.350><c> the</c><00:36:45.470><c> possibility</c><00:36:45.530><c> that</c>

00:36:46.060 --> 00:36:46.070 align:start position:0%
be prepared for the possibility that
 

00:36:46.070 --> 00:36:47.620 align:start position:0%
be prepared for the possibility that
preferences<00:36:46.580><c> are</c><00:36:46.730><c> missing</c><00:36:47.030><c> or</c><00:36:47.210><c> corrupt</c><00:36:47.360><c> it</c>

00:36:47.620 --> 00:36:47.630 align:start position:0%
preferences are missing or corrupt it
 

00:36:47.630 --> 00:36:51.040 align:start position:0%
preferences are missing or corrupt it
for<00:36:47.810><c> some</c><00:36:47.960><c> reason</c><00:36:49.390><c> but</c><00:36:50.390><c> it</c><00:36:50.540><c> is</c><00:36:50.660><c> a</c><00:36:50.690><c> very</c>

00:36:51.040 --> 00:36:51.050 align:start position:0%
for some reason but it is a very
 

00:36:51.050 --> 00:36:53.050 align:start position:0%
for some reason but it is a very
valuable<00:36:51.290><c> general</c><00:36:51.830><c> facility</c><00:36:52.280><c> we</c><00:36:52.610><c> use</c><00:36:52.790><c> it</c><00:36:52.940><c> all</c>

00:36:53.050 --> 00:36:53.060 align:start position:0%
valuable general facility we use it all
 

00:36:53.060 --> 00:36:53.860 align:start position:0%
valuable general facility we use it all
over<00:36:53.270><c> the</c><00:36:53.360><c> place</c>

00:36:53.860 --> 00:36:53.870 align:start position:0%
over the place
 

00:36:53.870 --> 00:36:56.170 align:start position:0%
over the place
many<00:36:54.860><c> of</c><00:36:55.010><c> our</c><00:36:55.100><c> system</c><00:36:55.580><c> preferences</c><00:36:56.030><c> are</c>

00:36:56.170 --> 00:36:56.180 align:start position:0%
many of our system preferences are
 

00:36:56.180 --> 00:36:58.210 align:start position:0%
many of our system preferences are
stored<00:36:56.450><c> in</c><00:36:56.540><c> this</c><00:36:56.630><c> play</c><00:36:56.870><c> for</c><00:36:57.470><c> example</c><00:36:57.920><c> the</c>

00:36:58.210 --> 00:36:58.220 align:start position:0%
stored in this play for example the
 

00:36:58.220 --> 00:36:59.770 align:start position:0%
stored in this play for example the
users<00:36:58.550><c> language</c><00:36:58.760><c> preferences</c><00:36:59.420><c> that</c><00:36:59.750><c> I</c>

00:36:59.770 --> 00:36:59.780 align:start position:0%
users language preferences that I
 

00:36:59.780 --> 00:37:02.380 align:start position:0%
users language preferences that I
mentioned<00:37:00.230><c> in</c><00:37:00.830><c> the</c><00:37:00.950><c> case</c><00:37:01.100><c> of</c><00:37:01.310><c> CF</c><00:37:01.550><c> bundle</c><00:37:01.970><c> are</c>

00:37:02.380 --> 00:37:02.390 align:start position:0%
mentioned in the case of CF bundle are
 

00:37:02.390 --> 00:37:07.690 align:start position:0%
mentioned in the case of CF bundle are
stored<00:37:02.750><c> using</c><00:37:02.990><c> CF</c><00:37:03.410><c> preferences</c><00:37:06.340><c> okay</c><00:37:07.340><c> next</c><00:37:07.550><c> I</c>

00:37:07.690 --> 00:37:07.700 align:start position:0%
stored using CF preferences okay next I
 

00:37:07.700 --> 00:37:09.940 align:start position:0%
stored using CF preferences okay next I
want<00:37:07.910><c> to</c><00:37:07.970><c> go</c><00:37:08.090><c> on</c><00:37:08.270><c> to</c><00:37:09.110><c> some</c><00:37:09.380><c> advanced</c>

00:37:09.940 --> 00:37:09.950 align:start position:0%
want to go on to some advanced
 

00:37:09.950 --> 00:37:12.870 align:start position:0%
want to go on to some advanced
application<00:37:10.490><c> services</c><00:37:11.000><c> in</c><00:37:11.660><c> Mac</c><00:37:11.870><c> OS</c><00:37:12.110><c> 10</c>

00:37:12.870 --> 00:37:12.880 align:start position:0%
application services in Mac OS 10
 

00:37:12.880 --> 00:37:16.210 align:start position:0%
application services in Mac OS 10
starting<00:37:13.880><c> with</c><00:37:14.090><c> CF</c><00:37:14.540><c> run</c><00:37:14.780><c> loop</c><00:37:15.020><c> which</c><00:37:15.920><c> is</c><00:37:16.100><c> the</c>

00:37:16.210 --> 00:37:16.220 align:start position:0%
starting with CF run loop which is the
 

00:37:16.220 --> 00:37:19.150 align:start position:0%
starting with CF run loop which is the
basis<00:37:16.700><c> for</c><00:37:16.730><c> the</c><00:37:17.000><c> rest</c><00:37:17.210><c> of</c><00:37:17.360><c> these</c><00:37:17.480><c> and</c><00:37:18.160><c> then</c>

00:37:19.150 --> 00:37:19.160 align:start position:0%
basis for the rest of these and then
 

00:37:19.160 --> 00:37:20.470 align:start position:0%
basis for the rest of these and then
I'll<00:37:19.280><c> discuss</c><00:37:19.580><c> some</c><00:37:19.790><c> things</c><00:37:19.970><c> that</c><00:37:20.150><c> our</c><00:37:20.240><c> name</c>

00:37:20.470 --> 00:37:20.480 align:start position:0%
I'll discuss some things that our name
 

00:37:20.480 --> 00:37:23.680 align:start position:0%
I'll discuss some things that our name
will<00:37:20.660><c> bias</c><00:37:20.930><c> the</c><00:37:21.170><c> front</c><00:37:21.500><c> loop</c><00:37:22.420><c> another</c><00:37:23.420><c> run</c>

00:37:23.680 --> 00:37:23.690 align:start position:0%
will bias the front loop another run
 

00:37:23.690 --> 00:37:28.779 align:start position:0%
will bias the front loop another run
loop<00:37:23.900><c> what</c><00:37:24.590><c> is</c><00:37:24.710><c> a</c><00:37:24.740><c> run</c><00:37:25.010><c> loop</c>

00:37:28.779 --> 00:37:28.789 align:start position:0%
 
 

00:37:28.789 --> 00:37:31.220 align:start position:0%
 
Carbon<00:37:29.789><c> event-based</c><00:37:30.059><c> applications</c><00:37:30.960><c> and</c>

00:37:31.220 --> 00:37:31.230 align:start position:0%
Carbon event-based applications and
 

00:37:31.230 --> 00:37:33.440 align:start position:0%
Carbon event-based applications and
cocoa<00:37:31.500><c> applications</c><00:37:32.309><c> have</c><00:37:32.640><c> something</c><00:37:33.329><c> in</c>

00:37:33.440 --> 00:37:33.450 align:start position:0%
cocoa applications have something in
 

00:37:33.450 --> 00:37:35.240 align:start position:0%
cocoa applications have something in
common<00:37:33.690><c> that</c><00:37:34.079><c> is</c><00:37:34.680><c> they're</c><00:37:35.069><c> both</c>

00:37:35.240 --> 00:37:35.250 align:start position:0%
common that is they're both
 

00:37:35.250 --> 00:37:38.269 align:start position:0%
common that is they're both
fundamentally<00:37:36.240><c> event-driven</c><00:37:36.980><c> the</c><00:37:37.980><c> way</c><00:37:38.130><c> they</c>

00:37:38.269 --> 00:37:38.279 align:start position:0%
fundamentally event-driven the way they
 

00:37:38.279 --> 00:37:41.150 align:start position:0%
fundamentally event-driven the way they
work<00:37:38.460><c> is</c><00:37:38.819><c> events</c><00:37:39.660><c> come</c><00:37:39.900><c> in</c><00:37:40.170><c> and</c><00:37:40.440><c> pass</c><00:37:40.769><c> to</c><00:37:41.039><c> the</c>

00:37:41.150 --> 00:37:41.160 align:start position:0%
work is events come in and pass to the
 

00:37:41.160 --> 00:37:43.400 align:start position:0%
work is events come in and pass to the
application<00:37:41.670><c> to</c><00:37:41.700><c> be</c><00:37:41.880><c> handled</c><00:37:42.420><c> the</c><00:37:42.930><c> controls</c>

00:37:43.400 --> 00:37:43.410 align:start position:0%
application to be handled the controls
 

00:37:43.410 --> 00:37:45.049 align:start position:0%
application to be handled the controls
return<00:37:43.799><c> you</c><00:37:44.039><c> wait</c><00:37:44.279><c> for</c><00:37:44.519><c> something</c><00:37:44.700><c> else</c><00:37:44.940><c> to</c>

00:37:45.049 --> 00:37:45.059 align:start position:0%
return you wait for something else to
 

00:37:45.059 --> 00:37:47.870 align:start position:0%
return you wait for something else to
happen<00:37:45.089><c> again</c><00:37:45.710><c> the</c><00:37:46.710><c> fundamental</c><00:37:46.920><c> mechanism</c>

00:37:47.870 --> 00:37:47.880 align:start position:0%
happen again the fundamental mechanism
 

00:37:47.880 --> 00:37:49.940 align:start position:0%
happen again the fundamental mechanism
that<00:37:48.059><c> underlies</c><00:37:48.119><c> this</c><00:37:48.750><c> in</c><00:37:48.930><c> both</c><00:37:49.049><c> cases</c><00:37:49.380><c> is</c><00:37:49.769><c> the</c>

00:37:49.940 --> 00:37:49.950 align:start position:0%
that underlies this in both cases is the
 

00:37:49.950 --> 00:37:53.299 align:start position:0%
that underlies this in both cases is the
run<00:37:50.099><c> loop</c><00:37:50.660><c> now</c><00:37:51.660><c> we</c><00:37:52.410><c> call</c><00:37:52.650><c> it</c><00:37:52.799><c> a</c><00:37:52.859><c> run</c><00:37:53.069><c> loop</c>

00:37:53.299 --> 00:37:53.309 align:start position:0%
run loop now we call it a run loop
 

00:37:53.309 --> 00:37:55.339 align:start position:0%
run loop now we call it a run loop
because<00:37:53.730><c> we</c><00:37:53.880><c> say</c><00:37:54.059><c> that</c><00:37:54.240><c> it</c><00:37:54.329><c> runs</c><00:37:54.690><c> and</c><00:37:55.140><c> that</c><00:37:55.230><c> of</c>

00:37:55.339 --> 00:37:55.349 align:start position:0%
because we say that it runs and that of
 

00:37:55.349 --> 00:37:58.130 align:start position:0%
because we say that it runs and that of
loops<00:37:55.619><c> but</c><00:37:56.369><c> mainly</c><00:37:56.970><c> what</c><00:37:57.119><c> it</c><00:37:57.210><c> does</c><00:37:57.420><c> is</c><00:37:57.900><c> it</c>

00:37:58.130 --> 00:37:58.140 align:start position:0%
loops but mainly what it does is it
 

00:37:58.140 --> 00:38:00.859 align:start position:0%
loops but mainly what it does is it
waits<00:37:58.549><c> it</c><00:37:59.549><c> waits</c><00:37:59.880><c> for</c><00:38:00.059><c> something</c><00:38:00.480><c> interesting</c>

00:38:00.859 --> 00:38:00.869 align:start position:0%
waits it waits for something interesting
 

00:38:00.869 --> 00:38:03.740 align:start position:0%
waits it waits for something interesting
to<00:38:00.960><c> happen</c><00:38:01.349><c> tells</c><00:38:02.190><c> you</c><00:38:02.430><c> about</c><00:38:02.519><c> it</c><00:38:02.700><c> you</c><00:38:03.329><c> handle</c>

00:38:03.740 --> 00:38:03.750 align:start position:0%
to happen tells you about it you handle
 

00:38:03.750 --> 00:38:06.339 align:start position:0%
to happen tells you about it you handle
it<00:38:03.839><c> then</c><00:38:04.349><c> it</c><00:38:04.470><c> goes</c><00:38:04.619><c> back</c><00:38:04.829><c> and</c><00:38:05.130><c> waits</c><00:38:05.339><c> again</c><00:38:05.730><c> and</c>

00:38:06.339 --> 00:38:06.349 align:start position:0%
it then it goes back and waits again and
 

00:38:06.349 --> 00:38:09.200 align:start position:0%
it then it goes back and waits again and
the<00:38:07.349><c> thing</c><00:38:07.529><c> it</c><00:38:07.650><c> waits</c><00:38:07.859><c> for</c><00:38:08.009><c> can</c><00:38:08.609><c> be</c><00:38:08.640><c> any</c><00:38:08.970><c> of</c><00:38:09.059><c> a</c>

00:38:09.200 --> 00:38:09.210 align:start position:0%
the thing it waits for can be any of a
 

00:38:09.210 --> 00:38:11.809 align:start position:0%
the thing it waits for can be any of a
wide<00:38:09.240><c> variety</c><00:38:09.660><c> of</c><00:38:10.049><c> things</c><00:38:10.140><c> it</c><00:38:10.619><c> might</c><00:38:10.769><c> be</c><00:38:11.099><c> the</c>

00:38:11.809 --> 00:38:11.819 align:start position:0%
wide variety of things it might be the
 

00:38:11.819 --> 00:38:14.059 align:start position:0%
wide variety of things it might be the
arrival<00:38:12.180><c> of</c><00:38:12.240><c> a</c><00:38:12.359><c> mock</c><00:38:12.569><c> message</c><00:38:13.049><c> might</c><00:38:13.710><c> be</c>

00:38:14.059 --> 00:38:14.069 align:start position:0%
arrival of a mock message might be
 

00:38:14.069 --> 00:38:16.329 align:start position:0%
arrival of a mock message might be
perhaps<00:38:14.430><c> the</c><00:38:14.700><c> arrival</c><00:38:15.180><c> of</c><00:38:15.269><c> a</c><00:38:15.390><c> network</c><00:38:15.720><c> packet</c>

00:38:16.329 --> 00:38:16.339 align:start position:0%
perhaps the arrival of a network packet
 

00:38:16.339 --> 00:38:19.130 align:start position:0%
perhaps the arrival of a network packet
it<00:38:17.339><c> might</c><00:38:17.640><c> be</c><00:38:17.849><c> just</c><00:38:18.299><c> the</c><00:38:18.359><c> arrival</c><00:38:18.839><c> of</c><00:38:18.869><c> some</c>

00:38:19.130 --> 00:38:19.140 align:start position:0%
it might be just the arrival of some
 

00:38:19.140 --> 00:38:23.059 align:start position:0%
it might be just the arrival of some
specific<00:38:19.829><c> time</c><00:38:21.140><c> but</c><00:38:22.140><c> the</c><00:38:22.529><c> important</c><00:38:22.920><c> thing</c>

00:38:23.059 --> 00:38:23.069 align:start position:0%
specific time but the important thing
 

00:38:23.069 --> 00:38:24.559 align:start position:0%
specific time but the important thing
about<00:38:23.160><c> the</c><00:38:23.369><c> run</c><00:38:23.519><c> loop</c><00:38:23.730><c> is</c><00:38:23.880><c> that</c><00:38:24.089><c> it</c><00:38:24.210><c> can</c><00:38:24.359><c> wait</c>

00:38:24.559 --> 00:38:24.569 align:start position:0%
about the run loop is that it can wait
 

00:38:24.569 --> 00:38:27.079 align:start position:0%
about the run loop is that it can wait
for<00:38:25.170><c> all</c><00:38:25.380><c> these</c><00:38:25.680><c> things</c><00:38:25.980><c> a</c><00:38:26.220><c> wide</c><00:38:26.640><c> variety</c><00:38:26.880><c> of</c>

00:38:27.079 --> 00:38:27.089 align:start position:0%
for all these things a wide variety of
 

00:38:27.089 --> 00:38:30.130 align:start position:0%
for all these things a wide variety of
things<00:38:27.329><c> simultaneously</c><00:38:28.339><c> efficiently</c><00:38:29.339><c> easily</c>

00:38:30.130 --> 00:38:30.140 align:start position:0%
things simultaneously efficiently easily
 

00:38:30.140 --> 00:38:32.450 align:start position:0%
things simultaneously efficiently easily
without<00:38:31.140><c> pulling</c><00:38:31.440><c> without</c><00:38:31.890><c> using</c><00:38:32.279><c> the</c>

00:38:32.450 --> 00:38:32.460 align:start position:0%
without pulling without using the
 

00:38:32.460 --> 00:38:34.970 align:start position:0%
without pulling without using the
processor<00:38:32.940><c> resources</c><00:38:33.569><c> this</c><00:38:34.349><c> turns</c><00:38:34.559><c> out</c><00:38:34.710><c> to</c><00:38:34.769><c> be</c>

00:38:34.970 --> 00:38:34.980 align:start position:0%
processor resources this turns out to be
 

00:38:34.980 --> 00:38:41.260 align:start position:0%
processor resources this turns out to be
a<00:38:35.009><c> very</c><00:38:35.190><c> powerful</c><00:38:35.670><c> concept</c><00:38:39.319><c> now</c>

00:38:41.260 --> 00:38:41.270 align:start position:0%
a very powerful concept now
 

00:38:41.270 --> 00:38:43.990 align:start position:0%
a very powerful concept now
each<00:38:41.840><c> thread</c><00:38:42.170><c> has</c><00:38:42.530><c> exactly</c><00:38:43.130><c> one</c><00:38:43.430><c> run</c><00:38:43.760><c> loop</c>

00:38:43.990 --> 00:38:44.000 align:start position:0%
each thread has exactly one run loop
 

00:38:44.000 --> 00:38:47.050 align:start position:0%
each thread has exactly one run loop
object<00:38:44.540><c> now</c><00:38:45.500><c> there</c><00:38:45.890><c> may</c><00:38:46.040><c> be</c><00:38:46.070><c> many</c><00:38:46.430><c> interfaces</c>

00:38:47.050 --> 00:38:47.060 align:start position:0%
object now there may be many interfaces
 

00:38:47.060 --> 00:38:50.410 align:start position:0%
object now there may be many interfaces
to<00:38:47.270><c> it</c><00:38:48.220><c> corefoundation</c><00:38:49.220><c> through</c><00:38:49.910><c> carbon</c>

00:38:50.410 --> 00:38:50.420 align:start position:0%
to it corefoundation through carbon
 

00:38:50.420 --> 00:38:52.150 align:start position:0%
to it corefoundation through carbon
through<00:38:50.600><c> cocoa</c><00:38:51.020><c> they're</c><00:38:51.470><c> all</c><00:38:51.650><c> dealing</c><00:38:52.040><c> with</c>

00:38:52.150 --> 00:38:52.160 align:start position:0%
through cocoa they're all dealing with
 

00:38:52.160 --> 00:38:53.800 align:start position:0%
through cocoa they're all dealing with
the<00:38:52.250><c> same</c><00:38:52.460><c> underlying</c><00:38:52.790><c> object</c><00:38:53.360><c> you</c><00:38:53.480><c> can</c><00:38:53.660><c> use</c>

00:38:53.800 --> 00:38:53.810 align:start position:0%
the same underlying object you can use
 

00:38:53.810 --> 00:38:57.340 align:start position:0%
the same underlying object you can use
any<00:38:54.020><c> or</c><00:38:54.170><c> all</c><00:38:54.200><c> of</c><00:38:54.410><c> them</c><00:38:55.600><c> typically</c><00:38:56.600><c> you</c><00:38:57.200><c> would</c>

00:38:57.340 --> 00:38:57.350 align:start position:0%
any or all of them typically you would
 

00:38:57.350 --> 00:38:59.230 align:start position:0%
any or all of them typically you would
want<00:38:57.560><c> to</c><00:38:57.650><c> use</c><00:38:57.800><c> the</c><00:38:58.040><c> highest</c><00:38:58.370><c> level</c><00:38:58.640><c> interfaces</c>

00:38:59.230 --> 00:38:59.240 align:start position:0%
want to use the highest level interfaces
 

00:38:59.240 --> 00:39:03.430 align:start position:0%
want to use the highest level interfaces
suit<00:38:59.450><c> your</c><00:38:59.600><c> purposes</c><00:39:02.170><c> often</c><00:39:03.170><c> you</c><00:39:03.260><c> will</c><00:39:03.320><c> be</c>

00:39:03.430 --> 00:39:03.440 align:start position:0%
suit your purposes often you will be
 

00:39:03.440 --> 00:39:06.010 align:start position:0%
suit your purposes often you will be
using<00:39:03.710><c> it</c><00:39:03.800><c> through</c><00:39:03.980><c> carbon</c><00:39:04.250><c> or</c><00:39:04.490><c> cocoa</c><00:39:04.940><c> but</c><00:39:05.630><c> if</c>

00:39:06.010 --> 00:39:06.020 align:start position:0%
using it through carbon or cocoa but if
 

00:39:06.020 --> 00:39:08.050 align:start position:0%
using it through carbon or cocoa but if
you<00:39:06.260><c> happen</c><00:39:06.590><c> to</c><00:39:06.620><c> be</c><00:39:06.710><c> using</c><00:39:06.920><c> a</c><00:39:07.160><c> core</c><00:39:07.400><c> foundation</c>

00:39:08.050 --> 00:39:08.060 align:start position:0%
you happen to be using a core foundation
 

00:39:08.060 --> 00:39:11.530 align:start position:0%
you happen to be using a core foundation
level<00:39:08.840><c> source</c><00:39:09.700><c> something</c><00:39:10.700><c> that</c><00:39:11.120><c> the</c><00:39:11.300><c> core</c>

00:39:11.530 --> 00:39:11.540 align:start position:0%
level source something that the core
 

00:39:11.540 --> 00:39:13.000 align:start position:0%
level source something that the core
foundation<00:39:12.080><c> level</c><00:39:12.230><c> does</c><00:39:12.500><c> the</c><00:39:12.590><c> run</c><00:39:12.710><c> that</c><00:39:12.830><c> can</c>

00:39:13.000 --> 00:39:13.010 align:start position:0%
foundation level does the run that can
 

00:39:13.010 --> 00:39:14.980 align:start position:0%
foundation level does the run that can
wait<00:39:13.130><c> for</c><00:39:13.430><c> then</c><00:39:14.180><c> you</c><00:39:14.300><c> would</c><00:39:14.420><c> want</c><00:39:14.630><c> to</c><00:39:14.720><c> use</c><00:39:14.840><c> the</c>

00:39:14.980 --> 00:39:14.990 align:start position:0%
wait for then you would want to use the
 

00:39:14.990 --> 00:39:17.110 align:start position:0%
wait for then you would want to use the
core<00:39:15.200><c> foundation</c><00:39:15.770><c> interface</c><00:39:16.190><c> to</c><00:39:16.430><c> it</c><00:39:16.580><c> which</c><00:39:17.090><c> is</c>

00:39:17.110 --> 00:39:17.120 align:start position:0%
core foundation interface to it which is
 

00:39:17.120 --> 00:39:23.740 align:start position:0%
core foundation interface to it which is
CF<00:39:17.600><c> run</c><00:39:17.840><c> Luke</c><00:39:20.440><c> now</c><00:39:21.970><c> one</c><00:39:22.970><c> thing</c><00:39:23.120><c> about</c><00:39:23.240><c> run</c><00:39:23.570><c> ups</c>

00:39:23.740 --> 00:39:23.750 align:start position:0%
CF run Luke now one thing about run ups
 

00:39:23.750 --> 00:39:25.930 align:start position:0%
CF run Luke now one thing about run ups
is<00:39:23.900><c> that</c><00:39:24.020><c> you</c><00:39:24.140><c> may</c><00:39:24.290><c> not</c><00:39:24.440><c> want</c><00:39:24.500><c> to</c><00:39:24.740><c> wait</c><00:39:25.040><c> for</c><00:39:25.640><c> any</c>

00:39:25.930 --> 00:39:25.940 align:start position:0%
is that you may not want to wait for any
 

00:39:25.940 --> 00:39:28.930 align:start position:0%
is that you may not want to wait for any
possible<00:39:26.690><c> type</c><00:39:27.170><c> of</c><00:39:27.380><c> event</c><00:39:27.590><c> source</c><00:39:27.920><c> at</c><00:39:28.670><c> any</c>

00:39:28.930 --> 00:39:28.940 align:start position:0%
possible type of event source at any
 

00:39:28.940 --> 00:39:31.360 align:start position:0%
possible type of event source at any
given<00:39:29.210><c> time</c><00:39:29.450><c> for</c><00:39:29.900><c> example</c><00:39:30.050><c> you</c><00:39:30.980><c> might</c><00:39:31.160><c> not</c>

00:39:31.360 --> 00:39:31.370 align:start position:0%
given time for example you might not
 

00:39:31.370 --> 00:39:33.190 align:start position:0%
given time for example you might not
want<00:39:31.610><c> a</c><00:39:31.670><c> certain</c><00:39:31.910><c> timer</c><00:39:32.240><c> to</c><00:39:32.510><c> fire</c><00:39:32.750><c> while</c><00:39:33.170><c> you</c>

00:39:33.190 --> 00:39:33.200 align:start position:0%
want a certain timer to fire while you
 

00:39:33.200 --> 00:39:35.260 align:start position:0%
want a certain timer to fire while you
are<00:39:33.620><c> tracking</c><00:39:34.130><c> Mouse</c><00:39:34.490><c> moves</c><00:39:34.790><c> or</c><00:39:35.030><c> something</c>

00:39:35.260 --> 00:39:35.270 align:start position:0%
are tracking Mouse moves or something
 

00:39:35.270 --> 00:39:38.950 align:start position:0%
are tracking Mouse moves or something
like<00:39:35.650><c> so</c><00:39:36.700><c> run</c><00:39:37.700><c> loops</c><00:39:37.910><c> have</c><00:39:38.150><c> something</c><00:39:38.780><c> called</c>

00:39:38.950 --> 00:39:38.960 align:start position:0%
like so run loops have something called
 

00:39:38.960 --> 00:39:42.220 align:start position:0%
like so run loops have something called
modes<00:39:39.380><c> at</c><00:39:39.950><c> any</c><00:39:40.850><c> given</c><00:39:41.060><c> time</c><00:39:41.270><c> the</c><00:39:41.780><c> run</c><00:39:41.960><c> up</c><00:39:42.110><c> is</c>

00:39:42.220 --> 00:39:42.230 align:start position:0%
modes at any given time the run up is
 

00:39:42.230 --> 00:39:44.320 align:start position:0%
modes at any given time the run up is
running<00:39:42.500><c> in</c><00:39:42.590><c> a</c><00:39:42.650><c> specific</c><00:39:43.070><c> mode</c><00:39:43.370><c> and</c><00:39:43.700><c> any</c>

00:39:44.320 --> 00:39:44.330 align:start position:0%
running in a specific mode and any
 

00:39:44.330 --> 00:39:46.600 align:start position:0%
running in a specific mode and any
particular<00:39:44.870><c> source</c><00:39:45.230><c> is</c><00:39:45.560><c> registered</c><00:39:46.460><c> with</c><00:39:46.490><c> a</c>

00:39:46.600 --> 00:39:46.610 align:start position:0%
particular source is registered with a
 

00:39:46.610 --> 00:39:50.100 align:start position:0%
particular source is registered with a
run<00:39:46.850><c> loop</c><00:39:47.030><c> for</c><00:39:47.270><c> only</c><00:39:47.450><c> a</c><00:39:47.630><c> certain</c><00:39:48.080><c> set</c><00:39:48.860><c> of</c><00:39:49.070><c> modes</c>

00:39:50.100 --> 00:39:50.110 align:start position:0%
run loop for only a certain set of modes
 

00:39:50.110 --> 00:39:55.540 align:start position:0%
run loop for only a certain set of modes
so<00:39:51.110><c> for</c><00:39:51.440><c> example</c><00:39:51.920><c> in</c><00:39:52.310><c> cocoa</c><00:39:54.310><c> there</c><00:39:55.310><c> are</c><00:39:55.490><c> a</c>

00:39:55.540 --> 00:39:55.550 align:start position:0%
so for example in cocoa there are a
 

00:39:55.550 --> 00:39:57.310 align:start position:0%
so for example in cocoa there are a
couple<00:39:55.760><c> of</c><00:39:55.940><c> specific</c><00:39:56.180><c> defined</c><00:39:56.720><c> modes</c><00:39:57.080><c> that</c>

00:39:57.310 --> 00:39:57.320 align:start position:0%
couple of specific defined modes that
 

00:39:57.320 --> 00:40:00.400 align:start position:0%
couple of specific defined modes that
cocoa<00:39:57.650><c> use</c><00:39:57.830><c> this</c><00:39:58.040><c> one</c><00:39:58.370><c> the</c><00:39:59.150><c> modalpanel</c><00:39:59.870><c> run</c>

00:40:00.400 --> 00:40:00.410 align:start position:0%
cocoa use this one the modalpanel run
 

00:40:00.410 --> 00:40:01.900 align:start position:0%
cocoa use this one the modalpanel run
loop<00:40:00.560><c> mode</c><00:40:00.740><c> is</c><00:40:00.950><c> used</c><00:40:01.160><c> when</c><00:40:01.460><c> it</c><00:40:01.610><c> there</c><00:40:01.820><c> are</c>

00:40:01.900 --> 00:40:01.910 align:start position:0%
loop mode is used when it there are
 

00:40:01.910 --> 00:40:03.490 align:start position:0%
loop mode is used when it there are
modal<00:40:02.240><c> panels</c><00:40:02.600><c> up</c><00:40:02.810><c> and</c><00:40:02.990><c> it's</c><00:40:03.110><c> waiting</c><00:40:03.350><c> on</c><00:40:03.470><c> that</c>

00:40:03.490 --> 00:40:03.500 align:start position:0%
modal panels up and it's waiting on that
 

00:40:03.500 --> 00:40:05.620 align:start position:0%
modal panels up and it's waiting on that
there's<00:40:04.340><c> another</c><00:40:04.610><c> one</c><00:40:04.850><c> that's</c><00:40:04.970><c> used</c><00:40:05.270><c> when</c>

00:40:05.620 --> 00:40:05.630 align:start position:0%
there's another one that's used when
 

00:40:05.630 --> 00:40:07.480 align:start position:0%
there's another one that's used when
typically<00:40:06.620><c> when</c><00:40:06.770><c> the</c><00:40:06.890><c> mouse</c><00:40:07.070><c> is</c><00:40:07.280><c> being</c>

00:40:07.480 --> 00:40:07.490 align:start position:0%
typically when the mouse is being
 

00:40:07.490 --> 00:40:10.930 align:start position:0%
typically when the mouse is being
tracked<00:40:08.230><c> but</c><00:40:09.230><c> normally</c><00:40:09.950><c> the</c><00:40:10.520><c> run</c><00:40:10.700><c> won't</c><00:40:10.820><c> be</c>

00:40:10.930 --> 00:40:10.940 align:start position:0%
tracked but normally the run won't be
 

00:40:10.940 --> 00:40:14.440 align:start position:0%
tracked but normally the run won't be
used<00:40:11.360><c> and</c><00:40:11.510><c> run</c><00:40:11.660><c> in</c><00:40:11.810><c> the</c><00:40:11.900><c> default</c><00:40:12.320><c> mode</c><00:40:13.450><c> and</c>

00:40:14.440 --> 00:40:14.450 align:start position:0%
used and run in the default mode and
 

00:40:14.450 --> 00:40:16.360 align:start position:0%
used and run in the default mode and
when<00:40:14.720><c> you</c><00:40:14.810><c> register</c><00:40:15.290><c> a</c><00:40:15.320><c> source</c><00:40:15.740><c> with</c><00:40:16.070><c> the</c><00:40:16.190><c> run</c>

00:40:16.360 --> 00:40:16.370 align:start position:0%
when you register a source with the run
 

00:40:16.370 --> 00:40:19.060 align:start position:0%
when you register a source with the run
loop<00:40:16.840><c> you</c><00:40:17.840><c> can</c><00:40:18.050><c> register</c><00:40:18.290><c> it</c><00:40:18.680><c> with</c><00:40:18.800><c> a</c><00:40:18.830><c> specific</c>

00:40:19.060 --> 00:40:19.070 align:start position:0%
loop you can register it with a specific
 

00:40:19.070 --> 00:40:21.040 align:start position:0%
loop you can register it with a specific
mode<00:40:19.460><c> or</c><00:40:19.700><c> set</c><00:40:19.910><c> of</c><00:40:20.030><c> modes</c><00:40:20.210><c> or</c><00:40:20.540><c> you</c><00:40:20.750><c> can</c><00:40:20.900><c> choose</c>

00:40:21.040 --> 00:40:21.050 align:start position:0%
mode or set of modes or you can choose
 

00:40:21.050 --> 00:40:22.900 align:start position:0%
mode or set of modes or you can choose
to<00:40:21.230><c> register</c><00:40:21.380><c> what</c><00:40:21.830><c> this</c><00:40:22.040><c> will</c><00:40:22.220><c> call</c><00:40:22.400><c> common</c>

00:40:22.900 --> 00:40:22.910 align:start position:0%
to register what this will call common
 

00:40:22.910 --> 00:40:26.650 align:start position:0%
to register what this will call common
modes<00:40:23.150><c> which</c><00:40:24.140><c> is</c><00:40:24.950><c> a</c><00:40:25.010><c> set</c><00:40:25.280><c> of</c><00:40:25.400><c> modes</c><00:40:25.660><c> determined</c>

00:40:26.650 --> 00:40:26.660 align:start position:0%
modes which is a set of modes determined
 

00:40:26.660 --> 00:40:28.540 align:start position:0%
modes which is a set of modes determined
by<00:40:26.810><c> your</c><00:40:27.050><c> application</c><00:40:27.230><c> environment</c><00:40:28.040><c> in</c><00:40:28.160><c> cocoa</c>

00:40:28.540 --> 00:40:28.550 align:start position:0%
by your application environment in cocoa
 

00:40:28.550 --> 00:40:31.180 align:start position:0%
by your application environment in cocoa
would<00:40:28.760><c> be</c><00:40:28.970><c> the</c><00:40:29.840><c> default</c><00:40:30.110><c> mode</c><00:40:30.350><c> plus</c><00:40:30.710><c> the</c><00:40:30.920><c> modal</c>

00:40:31.180 --> 00:40:31.190 align:start position:0%
would be the default mode plus the modal
 

00:40:31.190 --> 00:40:36.340 align:start position:0%
would be the default mode plus the modal
panel<00:40:31.550><c> and</c><00:40:31.700><c> event</c><00:40:32.270><c> tracking</c><00:40:32.660><c> modes</c><00:40:34.660><c> now</c><00:40:35.660><c> the</c>

00:40:36.340 --> 00:40:36.350 align:start position:0%
panel and event tracking modes now the
 

00:40:36.350 --> 00:40:37.900 align:start position:0%
panel and event tracking modes now the
run<00:40:36.530><c> loop</c><00:40:36.680><c> by</c><00:40:36.830><c> itself</c><00:40:37.160><c> is</c><00:40:37.400><c> not</c><00:40:37.580><c> terribly</c>

00:40:37.900 --> 00:40:37.910 align:start position:0%
run loop by itself is not terribly
 

00:40:37.910 --> 00:40:39.700 align:start position:0%
run loop by itself is not terribly
interesting<00:40:38.300><c> what's</c><00:40:38.480><c> interesting</c><00:40:38.750><c> are</c><00:40:39.560><c> the</c>

00:40:39.700 --> 00:40:39.710 align:start position:0%
interesting what's interesting are the
 

00:40:39.710 --> 00:40:40.930 align:start position:0%
interesting what's interesting are the
things<00:40:39.920><c> that</c><00:40:40.010><c> it</c><00:40:40.160><c> enables</c><00:40:40.580><c> the</c><00:40:40.640><c> things</c><00:40:40.850><c> you</c>

00:40:40.930 --> 00:40:40.940 align:start position:0%
things that it enables the things you
 

00:40:40.940 --> 00:40:43.810 align:start position:0%
things that it enables the things you
can<00:40:41.090><c> do</c><00:40:41.240><c> with</c><00:40:41.420><c> it</c><00:40:42.220><c> primarily</c><00:40:43.220><c> the</c><00:40:43.490><c> things</c><00:40:43.670><c> that</c>

00:40:43.810 --> 00:40:43.820 align:start position:0%
can do with it primarily the things that
 

00:40:43.820 --> 00:40:47.650 align:start position:0%
can do with it primarily the things that
can<00:40:43.970><c> wait</c><00:40:44.120><c> for</c><00:40:44.560><c> so</c><00:40:45.670><c> at</c><00:40:46.670><c> the</c><00:40:46.880><c> core</c><00:40:47.060><c> foundation</c>

00:40:47.650 --> 00:40:47.660 align:start position:0%
can wait for so at the core foundation
 

00:40:47.660 --> 00:40:49.450 align:start position:0%
can wait for so at the core foundation
level<00:40:47.840><c> some</c><00:40:48.620><c> of</c><00:40:48.710><c> the</c><00:40:48.800><c> things</c><00:40:48.980><c> that</c><00:40:49.130><c> could</c><00:40:49.250><c> wait</c>

00:40:49.450 --> 00:40:49.460 align:start position:0%
level some of the things that could wait
 

00:40:49.460 --> 00:40:51.830 align:start position:0%
level some of the things that could wait
for<00:40:49.760><c> are</c>

00:40:51.830 --> 00:40:51.840 align:start position:0%
for are
 

00:40:51.840 --> 00:40:54.560 align:start position:0%
for are
well<00:40:52.350><c> first</c><00:40:52.710><c> of</c><00:40:52.860><c> all</c><00:40:53.010><c> you</c><00:40:53.760><c> can</c><00:40:53.940><c> use</c><00:40:53.970><c> it</c><00:40:54.240><c> to</c><00:40:54.360><c> wait</c>

00:40:54.560 --> 00:40:54.570 align:start position:0%
well first of all you can use it to wait
 

00:40:54.570 --> 00:40:58.760 align:start position:0%
well first of all you can use it to wait
for<00:40:54.930><c> raw</c><00:40:55.710><c> mock</c><00:40:56.100><c> messages</c><00:40:56.700><c> or</c><00:40:57.260><c> raw</c><00:40:58.260><c> network</c>

00:40:58.760 --> 00:40:58.770 align:start position:0%
for raw mock messages or raw network
 

00:40:58.770 --> 00:41:01.160 align:start position:0%
for raw mock messages or raw network
packets<00:40:59.310><c> now</c><00:40:59.520><c> if</c><00:41:00.360><c> you</c><00:41:00.450><c> want</c><00:41:00.630><c> to</c><00:41:00.720><c> do</c><00:41:00.840><c> that</c><00:41:00.990><c> you</c>

00:41:01.160 --> 00:41:01.170 align:start position:0%
packets now if you want to do that you
 

00:41:01.170 --> 00:41:03.440 align:start position:0%
packets now if you want to do that you
can<00:41:01.320><c> we</c><00:41:01.590><c> have</c><00:41:01.770><c> a</c><00:41:01.800><c> CF</c><00:41:02.280><c> mock</c><00:41:02.550><c> port</c><00:41:02.880><c> for</c><00:41:03.210><c> waiting</c>

00:41:03.440 --> 00:41:03.450 align:start position:0%
can we have a CF mock port for waiting
 

00:41:03.450 --> 00:41:05.360 align:start position:0%
can we have a CF mock port for waiting
for<00:41:03.630><c> raw</c><00:41:03.750><c> mock</c><00:41:03.990><c> messages</c><00:41:04.470><c> or</c><00:41:04.590><c> CF</c><00:41:04.890><c> Saka</c>

00:41:05.360 --> 00:41:05.370 align:start position:0%
for raw mock messages or CF Saka
 

00:41:05.370 --> 00:41:10.390 align:start position:0%
for raw mock messages or CF Saka
for<00:41:06.030><c> waiting</c><00:41:06.330><c> for</c><00:41:07.100><c> events</c><00:41:08.100><c> on</c><00:41:08.220><c> a</c><00:41:08.250><c> socket</c>

00:41:10.390 --> 00:41:10.400 align:start position:0%
for waiting for events on a socket
 

00:41:10.400 --> 00:41:14.090 align:start position:0%
for waiting for events on a socket
that's<00:41:11.400><c> useful</c><00:41:11.940><c> for</c><00:41:12.060><c> example</c><00:41:12.360><c> if</c><00:41:12.720><c> you</c><00:41:13.500><c> have</c><00:41:13.740><c> if</c>

00:41:14.090 --> 00:41:14.100 align:start position:0%
that's useful for example if you have if
 

00:41:14.100 --> 00:41:18.560 align:start position:0%
that's useful for example if you have if
you<00:41:14.340><c> are</c><00:41:14.370><c> in</c><00:41:14.760><c> a</c><00:41:15.380><c> carbon</c><00:41:16.380><c> or</c><00:41:16.500><c> cocoa</c><00:41:17.570><c> application</c>

00:41:18.560 --> 00:41:18.570 align:start position:0%
you are in a carbon or cocoa application
 

00:41:18.570 --> 00:41:20.360 align:start position:0%
you are in a carbon or cocoa application
and<00:41:18.810><c> you</c><00:41:19.230><c> want</c><00:41:19.470><c> to</c><00:41:19.590><c> wait</c><00:41:19.770><c> for</c><00:41:20.010><c> these</c><00:41:20.130><c> things</c>

00:41:20.360 --> 00:41:20.370 align:start position:0%
and you want to wait for these things
 

00:41:20.370 --> 00:41:22.850 align:start position:0%
and you want to wait for these things
you<00:41:21.300><c> don't</c><00:41:21.330><c> have</c><00:41:21.720><c> to</c><00:41:21.960><c> spawn</c><00:41:22.350><c> a</c><00:41:22.380><c> separate</c>

00:41:22.850 --> 00:41:22.860 align:start position:0%
you don't have to spawn a separate
 

00:41:22.860 --> 00:41:24.440 align:start position:0%
you don't have to spawn a separate
thread<00:41:23.100><c> to</c><00:41:23.310><c> do</c><00:41:23.430><c> that</c><00:41:23.610><c> you</c><00:41:23.880><c> can</c><00:41:24.030><c> simply</c><00:41:24.330><c> be</c>

00:41:24.440 --> 00:41:24.450 align:start position:0%
thread to do that you can simply be
 

00:41:24.450 --> 00:41:26.030 align:start position:0%
thread to do that you can simply be
notified<00:41:24.900><c> you</c><00:41:25.200><c> can</c><00:41:25.320><c> get</c><00:41:25.410><c> a</c><00:41:25.440><c> function</c><00:41:25.800><c> callback</c>

00:41:26.030 --> 00:41:26.040 align:start position:0%
notified you can get a function callback
 

00:41:26.040 --> 00:41:33.350 align:start position:0%
notified you can get a function callback
within<00:41:26.940><c> your</c><00:41:27.090><c> main</c><00:41:27.240><c> event</c><00:41:27.390><c> loop</c><00:41:30.410><c> and</c><00:41:32.360><c> I'm</c>

00:41:33.350 --> 00:41:33.360 align:start position:0%
within your main event loop and I'm
 

00:41:33.360 --> 00:41:36.560 align:start position:0%
within your main event loop and I'm
going<00:41:33.570><c> to</c><00:41:33.630><c> go</c><00:41:33.720><c> into</c><00:41:33.930><c> some</c><00:41:34.290><c> other</c><00:41:35.270><c> Co</c><00:41:36.270><c> front</c>

00:41:36.560 --> 00:41:36.570 align:start position:0%
going to go into some other Co front
 

00:41:36.570 --> 00:41:39.050 align:start position:0%
going to go into some other Co front
loop<00:41:36.690><c> sources</c><00:41:37.200><c> in</c><00:41:37.380><c> just</c><00:41:37.410><c> a</c><00:41:37.620><c> moment</c><00:41:37.920><c> you</c><00:41:38.760><c> can</c>

00:41:39.050 --> 00:41:39.060 align:start position:0%
loop sources in just a moment you can
 

00:41:39.060 --> 00:41:41.000 align:start position:0%
loop sources in just a moment you can
create<00:41:39.450><c> your</c><00:41:39.660><c> own</c><00:41:39.720><c> it</c><00:41:40.230><c> is</c><00:41:40.410><c> a</c><00:41:40.440><c> little</c><00:41:40.680><c> tricky</c><00:41:40.980><c> to</c>

00:41:41.000 --> 00:41:41.010 align:start position:0%
create your own it is a little tricky to
 

00:41:41.010 --> 00:41:44.660 align:start position:0%
create your own it is a little tricky to
do<00:41:41.250><c> so</c><00:41:41.810><c> so</c><00:41:43.010><c> another</c><00:41:44.010><c> thing</c><00:41:44.100><c> I</c><00:41:44.310><c> said</c><00:41:44.490><c> is</c><00:41:44.580><c> you</c>

00:41:44.660 --> 00:41:44.670 align:start position:0%
do so so another thing I said is you
 

00:41:44.670 --> 00:41:46.640 align:start position:0%
do so so another thing I said is you
could<00:41:44.820><c> wait</c><00:41:45.000><c> for</c><00:41:45.270><c> it's</c><00:41:45.810><c> just</c><00:41:46.080><c> the</c><00:41:46.200><c> arrival</c><00:41:46.560><c> in</c>

00:41:46.640 --> 00:41:46.650 align:start position:0%
could wait for it's just the arrival in
 

00:41:46.650 --> 00:41:49.730 align:start position:0%
could wait for it's just the arrival in
a<00:41:46.710><c> specific</c><00:41:47.130><c> time</c><00:41:47.370><c> and</c><00:41:47.790><c> you</c><00:41:48.720><c> can</c><00:41:48.870><c> wait</c><00:41:49.080><c> for</c><00:41:49.110><c> a</c>

00:41:49.730 --> 00:41:49.740 align:start position:0%
a specific time and you can wait for a
 

00:41:49.740 --> 00:41:52.040 align:start position:0%
a specific time and you can wait for a
single<00:41:50.310><c> time</c><00:41:50.520><c> or</c><00:41:50.820><c> repeating</c><00:41:51.540><c> sequence</c><00:41:51.930><c> of</c>

00:41:52.040 --> 00:41:52.050 align:start position:0%
single time or repeating sequence of
 

00:41:52.050 --> 00:41:55.700 align:start position:0%
single time or repeating sequence of
times<00:41:52.290><c> with</c><00:41:52.920><c> a</c><00:41:52.950><c> CF</c><00:41:53.310><c> remove</c><00:41:53.700><c> timer</c><00:41:54.440><c> what</c><00:41:55.440><c> you</c><00:41:55.560><c> do</c>

00:41:55.700 --> 00:41:55.710 align:start position:0%
times with a CF remove timer what you do
 

00:41:55.710 --> 00:41:57.590 align:start position:0%
times with a CF remove timer what you do
is<00:41:55.860><c> you</c><00:41:55.950><c> create</c><00:41:56.100><c> the</c><00:41:56.370><c> timer</c><00:41:56.640><c> tell</c><00:41:57.300><c> it</c><00:41:57.450><c> what</c>

00:41:57.590 --> 00:41:57.600 align:start position:0%
is you create the timer tell it what
 

00:41:57.600 --> 00:42:01.040 align:start position:0%
is you create the timer tell it what
time<00:41:57.870><c> or</c><00:41:58.170><c> times</c><00:41:58.440><c> to</c><00:41:58.680><c> wait</c><00:41:58.830><c> for</c><00:41:59.130><c> and</c><00:41:59.780><c> you</c><00:42:00.780><c> tell</c>

00:42:01.040 --> 00:42:01.050 align:start position:0%
time or times to wait for and you tell
 

00:42:01.050 --> 00:42:03.350 align:start position:0%
time or times to wait for and you tell
it<00:42:01.200><c> what</c><00:42:02.040><c> function</c><00:42:02.490><c> will</c><00:42:02.760><c> be</c><00:42:02.850><c> called</c><00:42:03.030><c> back</c><00:42:03.330><c> on</c>

00:42:03.350 --> 00:42:03.360 align:start position:0%
it what function will be called back on
 

00:42:03.360 --> 00:42:06.860 align:start position:0%
it what function will be called back on
that<00:42:03.690><c> time</c><00:42:03.840><c> arise</c><00:42:04.170><c> if</c><00:42:04.950><c> then</c><00:42:05.280><c> you</c><00:42:05.520><c> attach</c><00:42:06.510><c> it</c><00:42:06.720><c> to</c>

00:42:06.860 --> 00:42:06.870 align:start position:0%
that time arise if then you attach it to
 

00:42:06.870 --> 00:42:10.040 align:start position:0%
that time arise if then you attach it to
run<00:42:07.110><c> loop</c><00:42:07.350><c> in</c><00:42:08.340><c> a</c><00:42:08.730><c> given</c><00:42:09.150><c> mode</c><00:42:09.330><c> or</c><00:42:09.570><c> set</c><00:42:09.750><c> of</c><00:42:09.840><c> modes</c>

00:42:10.040 --> 00:42:10.050 align:start position:0%
run loop in a given mode or set of modes
 

00:42:10.050 --> 00:42:12.650 align:start position:0%
run loop in a given mode or set of modes
and<00:42:10.410><c> when</c><00:42:11.400><c> the</c><00:42:11.520><c> run</c><00:42:11.670><c> loop</c><00:42:11.880><c> is</c><00:42:12.060><c> waiting</c><00:42:12.420><c> in</c><00:42:12.510><c> one</c>

00:42:12.650 --> 00:42:12.660 align:start position:0%
and when the run loop is waiting in one
 

00:42:12.660 --> 00:42:15.080 align:start position:0%
and when the run loop is waiting in one
of<00:42:12.750><c> those</c><00:42:12.840><c> modes</c><00:42:13.200><c> it</c><00:42:13.740><c> checks</c><00:42:14.130><c> to</c><00:42:14.310><c> see</c><00:42:14.430><c> if</c><00:42:14.820><c> your</c>

00:42:15.080 --> 00:42:15.090 align:start position:0%
of those modes it checks to see if your
 

00:42:15.090 --> 00:42:17.690 align:start position:0%
of those modes it checks to see if your
time<00:42:15.390><c> has</c><00:42:15.720><c> arrived</c><00:42:16.050><c> and</c><00:42:16.680><c> if</c><00:42:17.190><c> your</c><00:42:17.310><c> time</c><00:42:17.520><c> has</c>

00:42:17.690 --> 00:42:17.700 align:start position:0%
time has arrived and if your time has
 

00:42:17.700 --> 00:42:23.480 align:start position:0%
time has arrived and if your time has
arrived<00:42:18.060><c> then</c><00:42:18.420><c> you</c><00:42:18.540><c> get</c><00:42:18.690><c> a</c><00:42:18.720><c> callback</c><00:42:20.600><c> now</c><00:42:22.490><c> if</c>

00:42:23.480 --> 00:42:23.490 align:start position:0%
arrived then you get a callback now if
 

00:42:23.490 --> 00:42:24.920 align:start position:0%
arrived then you get a callback now if
you're<00:42:23.730><c> waiting</c><00:42:23.880><c> for</c><00:42:24.030><c> a</c><00:42:24.150><c> single</c><00:42:24.480><c> time</c><00:42:24.660><c> then</c>

00:42:24.920 --> 00:42:24.930 align:start position:0%
you're waiting for a single time then
 

00:42:24.930 --> 00:42:26.570 align:start position:0%
you're waiting for a single time then
the<00:42:25.020><c> timer</c><00:42:25.230><c> is</c><00:42:25.410><c> automatically</c><00:42:25.950><c> and</c><00:42:26.100><c> validated</c>

00:42:26.570 --> 00:42:26.580 align:start position:0%
the timer is automatically and validated
 

00:42:26.580 --> 00:42:27.770 align:start position:0%
the timer is automatically and validated
after<00:42:26.910><c> that</c><00:42:27.030><c> time</c><00:42:27.210><c> has</c><00:42:27.360><c> arrived</c><00:42:27.570><c> and</c><00:42:27.720><c> the</c>

00:42:27.770 --> 00:42:27.780 align:start position:0%
after that time has arrived and the
 

00:42:27.780 --> 00:42:29.690 align:start position:0%
after that time has arrived and the
timer<00:42:28.050><c> is</c><00:42:28.200><c> fired</c><00:42:28.470><c> if</c><00:42:28.770><c> you're</c><00:42:28.920><c> waiting</c><00:42:29.100><c> for</c><00:42:29.280><c> a</c>

00:42:29.690 --> 00:42:29.700 align:start position:0%
timer is fired if you're waiting for a
 

00:42:29.700 --> 00:42:32.150 align:start position:0%
timer is fired if you're waiting for a
repeating<00:42:30.330><c> sequence</c><00:42:30.720><c> of</c><00:42:30.840><c> times</c><00:42:31.080><c> then</c><00:42:31.920><c> you</c>

00:42:32.150 --> 00:42:32.160 align:start position:0%
repeating sequence of times then you
 

00:42:32.160 --> 00:42:33.710 align:start position:0%
repeating sequence of times then you
would<00:42:32.310><c> have</c><00:42:32.400><c> to</c><00:42:32.610><c> invalidate</c><00:42:33.390><c> the</c><00:42:33.510><c> timer</c>

00:42:33.710 --> 00:42:33.720 align:start position:0%
would have to invalidate the timer
 

00:42:33.720 --> 00:42:38.450 align:start position:0%
would have to invalidate the timer
yourself<00:42:34.530><c> when</c><00:42:34.860><c> you're</c><00:42:35.010><c> done</c><00:42:35.160><c> with</c><00:42:35.310><c> it</c><00:42:35.460><c> now</c><00:42:37.460><c> I</c>

00:42:38.450 --> 00:42:38.460 align:start position:0%
yourself when you're done with it now I
 

00:42:38.460 --> 00:42:42.380 align:start position:0%
yourself when you're done with it now I
talked<00:42:39.120><c> about</c><00:42:39.740><c> romic</c><00:42:40.740><c> messages</c><00:42:41.310><c> they</c><00:42:42.210><c> have</c><00:42:42.360><c> a</c>

00:42:42.380 --> 00:42:42.390 align:start position:0%
talked about romic messages they have a
 

00:42:42.390 --> 00:42:44.480 align:start position:0%
talked about romic messages they have a
lot<00:42:42.600><c> of</c><00:42:42.630><c> advantages</c><00:42:42.990><c> there</c><00:42:43.800><c> the</c><00:42:44.160><c> the</c>

00:42:44.480 --> 00:42:44.490 align:start position:0%
lot of advantages there the the
 

00:42:44.490 --> 00:42:47.180 align:start position:0%
lot of advantages there the the
fundamental<00:42:44.790><c> low</c><00:42:45.720><c> level</c><00:42:46.110><c> local</c><00:42:46.320><c> IPC</c>

00:42:47.180 --> 00:42:47.190 align:start position:0%
fundamental low level local IPC
 

00:42:47.190 --> 00:42:49.900 align:start position:0%
fundamental low level local IPC
mechanism<00:42:47.370><c> and</c><00:42:47.940><c> Mac</c><00:42:48.090><c> OS</c><00:42:48.300><c> 10</c><00:42:48.470><c> but</c><00:42:49.470><c> and</c><00:42:49.800><c> that</c>

00:42:49.900 --> 00:42:49.910 align:start position:0%
mechanism and Mac OS 10 but and that
 

00:42:49.910 --> 00:42:51.890 align:start position:0%
mechanism and Mac OS 10 but and that
they're<00:42:50.910><c> very</c><00:42:51.120><c> powerful</c><00:42:51.390><c> in</c><00:42:51.750><c> high</c>

00:42:51.890 --> 00:42:51.900 align:start position:0%
they're very powerful in high
 

00:42:51.900 --> 00:42:52.970 align:start position:0%
they're very powerful in high
performance<00:42:52.080><c> and</c><00:42:52.590><c> they</c><00:42:52.650><c> have</c><00:42:52.770><c> a</c><00:42:52.800><c> lot</c><00:42:52.950><c> of</c>

00:42:52.970 --> 00:42:52.980 align:start position:0%
performance and they have a lot of
 

00:42:52.980 --> 00:42:56.150 align:start position:0%
performance and they have a lot of
flexibility<00:42:53.640><c> but</c><00:42:54.300><c> they</c><00:42:54.690><c> can</c><00:42:54.900><c> be</c><00:42:55.160><c> difficult</c>

00:42:56.150 --> 00:42:56.160 align:start position:0%
flexibility but they can be difficult
 

00:42:56.160 --> 00:42:59.770 align:start position:0%
flexibility but they can be difficult
and<00:42:56.340><c> tricky</c><00:42:56.490><c> to</c><00:42:56.760><c> use</c><00:42:56.930><c> so</c><00:42:57.930><c> we</c><00:42:58.140><c> also</c><00:42:58.380><c> have</c><00:42:58.800><c> a</c>

00:42:59.770 --> 00:42:59.780 align:start position:0%
and tricky to use so we also have a
 

00:42:59.780 --> 00:43:03.410 align:start position:0%
and tricky to use so we also have a
slightly<00:43:00.780><c> just</c><00:43:01.230><c> one</c><00:43:01.380><c> higher</c><00:43:01.620><c> level</c><00:43:02.010><c> one</c><00:43:03.000><c> level</c>

00:43:03.410 --> 00:43:03.420 align:start position:0%
slightly just one higher level one level
 

00:43:03.420 --> 00:43:05.150 align:start position:0%
slightly just one higher level one level
up<00:43:03.690><c> mechanism</c><00:43:04.620><c> built</c>

00:43:05.150 --> 00:43:05.160 align:start position:0%
up mechanism built
 

00:43:05.160 --> 00:43:07.430 align:start position:0%
up mechanism built
top<00:43:05.400><c> of</c><00:43:05.609><c> them</c><00:43:05.700><c> in</c><00:43:05.880><c> core</c><00:43:06.119><c> foundation</c><00:43:06.690><c> called</c><00:43:07.079><c> CF</c>

00:43:07.430 --> 00:43:07.440 align:start position:0%
top of them in core foundation called CF
 

00:43:07.440 --> 00:43:11.329 align:start position:0%
top of them in core foundation called CF
message<00:43:07.829><c> port</c><00:43:08.210><c> which</c><00:43:09.210><c> is</c><00:43:09.240><c> a</c><00:43:10.339><c> high-performance</c>

00:43:11.329 --> 00:43:11.339 align:start position:0%
message port which is a high-performance
 

00:43:11.339 --> 00:43:17.270 align:start position:0%
message port which is a high-performance
low<00:43:12.180><c> overhead</c><00:43:12.630><c> local</c><00:43:13.200><c> IPC</c><00:43:13.770><c> mechanism</c><00:43:14.240><c> and</c><00:43:16.280><c> you</c>

00:43:17.270 --> 00:43:17.280 align:start position:0%
low overhead local IPC mechanism and you
 

00:43:17.280 --> 00:43:20.089 align:start position:0%
low overhead local IPC mechanism and you
can<00:43:17.460><c> use</c><00:43:17.609><c> it</c><00:43:17.819><c> either</c><00:43:18.619><c> asynchronously</c><00:43:19.619><c> sending</c>

00:43:20.089 --> 00:43:20.099 align:start position:0%
can use it either asynchronously sending
 

00:43:20.099 --> 00:43:22.640 align:start position:0%
can use it either asynchronously sending
messages<00:43:20.460><c> one-way</c><00:43:20.910><c> or</c><00:43:21.650><c> synchronously</c>

00:43:22.640 --> 00:43:22.650 align:start position:0%
messages one-way or synchronously
 

00:43:22.650 --> 00:43:26.599 align:start position:0%
messages one-way or synchronously
sending<00:43:23.099><c> a</c><00:43:23.190><c> message</c><00:43:23.490><c> in</c><00:43:23.640><c> getting</c><00:43:23.880><c> a</c><00:43:23.940><c> reply</c><00:43:25.609><c> the</c>

00:43:26.599 --> 00:43:26.609 align:start position:0%
sending a message in getting a reply the
 

00:43:26.609 --> 00:43:29.569 align:start position:0%
sending a message in getting a reply the
way<00:43:26.730><c> you</c><00:43:26.789><c> use</c><00:43:27.089><c> CF</c><00:43:27.450><c> message</c><00:43:27.780><c> port</c><00:43:28.079><c> is</c><00:43:28.289><c> that</c><00:43:28.920><c> you</c>

00:43:29.569 --> 00:43:29.579 align:start position:0%
way you use CF message port is that you
 

00:43:29.579 --> 00:43:32.630 align:start position:0%
way you use CF message port is that you
create<00:43:30.089><c> a</c><00:43:30.660><c> local</c><00:43:31.289><c> message</c><00:43:31.740><c> port</c><00:43:32.069><c> on</c><00:43:32.250><c> one</c><00:43:32.430><c> end</c>

00:43:32.630 --> 00:43:32.640 align:start position:0%
create a local message port on one end
 

00:43:32.640 --> 00:43:36.500 align:start position:0%
create a local message port on one end
and<00:43:34.369><c> that</c><00:43:35.369><c> these</c><00:43:35.609><c> pill</c><00:43:35.849><c> ports</c><00:43:36.240><c> can</c><00:43:36.450><c> be</c>

00:43:36.500 --> 00:43:36.510 align:start position:0%
and that these pill ports can be
 

00:43:36.510 --> 00:43:39.589 align:start position:0%
and that these pill ports can be
advertised<00:43:37.369><c> to</c><00:43:38.369><c> other</c><00:43:38.760><c> processes</c><00:43:39.420><c> on</c><00:43:39.569><c> the</c>

00:43:39.589 --> 00:43:39.599 align:start position:0%
advertised to other processes on the
 

00:43:39.599 --> 00:43:41.539 align:start position:0%
advertised to other processes on the
system<00:43:39.690><c> with</c><00:43:40.319><c> a</c><00:43:40.349><c> name</c><00:43:40.680><c> which</c><00:43:40.950><c> again</c><00:43:41.160><c> is</c><00:43:41.309><c> just</c><00:43:41.339><c> a</c>

00:43:41.539 --> 00:43:41.549 align:start position:0%
system with a name which again is just a
 

00:43:41.549 --> 00:43:44.299 align:start position:0%
system with a name which again is just a
CF<00:43:41.819><c> string</c><00:43:42.180><c> and</c><00:43:42.559><c> you</c><00:43:43.559><c> create</c><00:43:43.859><c> a</c><00:43:43.890><c> remote</c>

00:43:44.299 --> 00:43:44.309 align:start position:0%
CF string and you create a remote
 

00:43:44.309 --> 00:43:46.760 align:start position:0%
CF string and you create a remote
message<00:43:44.730><c> port</c><00:43:45.030><c> looked</c><00:43:45.510><c> up</c><00:43:45.660><c> by</c><00:43:45.809><c> name</c><00:43:46.049><c> to</c>

00:43:46.760 --> 00:43:46.770 align:start position:0%
message port looked up by name to
 

00:43:46.770 --> 00:43:49.730 align:start position:0%
message port looked up by name to
represent<00:43:46.890><c> the</c><00:43:47.880><c> other</c><00:43:48.030><c> end</c><00:43:48.380><c> the</c><00:43:49.380><c> end</c><00:43:49.500><c> what</c>

00:43:49.730 --> 00:43:49.740 align:start position:0%
represent the other end the end what
 

00:43:49.740 --> 00:43:52.849 align:start position:0%
represent the other end the end what
you're<00:43:49.920><c> sending</c><00:43:50.960><c> does</c><00:43:51.960><c> the</c><00:43:52.170><c> message</c><00:43:52.530><c> that</c><00:43:52.710><c> you</c>

00:43:52.849 --> 00:43:52.859 align:start position:0%
you're sending does the message that you
 

00:43:52.859 --> 00:43:55.910 align:start position:0%
you're sending does the message that you
send<00:43:53.190><c> is</c><00:43:53.599><c> just</c><00:43:54.599><c> a</c><00:43:54.750><c> CF</c><00:43:55.079><c> data</c><00:43:55.319><c> that</c><00:43:55.740><c> is</c><00:43:55.890><c> a</c>

00:43:55.910 --> 00:43:55.920 align:start position:0%
send is just a CF data that is a
 

00:43:55.920 --> 00:43:58.549 align:start position:0%
send is just a CF data that is a
collection<00:43:56.339><c> of</c><00:43:56.520><c> bytes</c><00:43:56.760><c> plus</c><00:43:57.530><c> optionally</c><00:43:58.530><c> a</c>

00:43:58.549 --> 00:43:58.559 align:start position:0%
collection of bytes plus optionally a
 

00:43:58.559 --> 00:44:02.510 align:start position:0%
collection of bytes plus optionally a
message<00:43:58.920><c> ID</c><00:43:59.190><c> manager</c><00:44:00.030><c> and</c><00:44:00.500><c> the</c><00:44:01.500><c> reply</c><00:44:01.890><c> if</c><00:44:02.309><c> you</c>

00:44:02.510 --> 00:44:02.520 align:start position:0%
message ID manager and the reply if you
 

00:44:02.520 --> 00:44:06.309 align:start position:0%
message ID manager and the reply if you
want<00:44:02.700><c> to</c><00:44:02.789><c> get</c><00:44:02.970><c> a</c><00:44:03.030><c> reply</c><00:44:03.539><c> back</c><00:44:03.780><c> is</c><00:44:04.020><c> a</c><00:44:04.049><c> CF</c><00:44:04.410><c> data</c><00:44:05.119><c> so</c>

00:44:06.309 --> 00:44:06.319 align:start position:0%
want to get a reply back is a CF data so
 

00:44:06.319 --> 00:44:09.559 align:start position:0%
want to get a reply back is a CF data so
what<00:44:07.319><c> the</c><00:44:07.880><c> intended</c><00:44:08.880><c> receiver</c><00:44:09.270><c> of</c><00:44:09.539><c> the</c>

00:44:09.559 --> 00:44:09.569 align:start position:0%
what the intended receiver of the
 

00:44:09.569 --> 00:44:13.700 align:start position:0%
what the intended receiver of the
message<00:44:09.630><c> will</c><00:44:10.049><c> do</c><00:44:10.200><c> is</c><00:44:10.770><c> to</c><00:44:11.279><c> publish</c><00:44:11.730><c> as</c><00:44:11.970><c> API</c><00:44:12.710><c> the</c>

00:44:13.700 --> 00:44:13.710 align:start position:0%
message will do is to publish as API the
 

00:44:13.710 --> 00:44:19.130 align:start position:0%
message will do is to publish as API the
protocol<00:44:14.400><c> for</c><00:44:14.640><c> this</c><00:44:14.730><c> message</c><00:44:16.430><c> that</c><00:44:17.430><c> is</c><00:44:18.079><c> how</c><00:44:19.079><c> to</c>

00:44:19.130 --> 00:44:19.140 align:start position:0%
protocol for this message that is how to
 

00:44:19.140 --> 00:44:22.609 align:start position:0%
protocol for this message that is how to
interpret<00:44:19.500><c> the</c><00:44:19.799><c> data</c><00:44:20.630><c> or</c><00:44:21.630><c> the</c><00:44:21.839><c> message</c><00:44:22.170><c> ID</c><00:44:22.410><c> of</c>

00:44:22.609 --> 00:44:22.619 align:start position:0%
interpret the data or the message ID of
 

00:44:22.619 --> 00:44:24.829 align:start position:0%
interpret the data or the message ID of
both<00:44:22.799><c> and</c><00:44:23.160><c> whether</c><00:44:23.940><c> they'll</c><00:44:24.150><c> be</c><00:44:24.210><c> apply</c><00:44:24.599><c> and</c>

00:44:24.829 --> 00:44:24.839 align:start position:0%
both and whether they'll be apply and
 

00:44:24.839 --> 00:44:27.349 align:start position:0%
both and whether they'll be apply and
how<00:44:24.960><c> that</c><00:44:25.140><c> should</c><00:44:25.319><c> be</c><00:44:25.380><c> interpreted</c><00:44:26.359><c> the</c>

00:44:27.349 --> 00:44:27.359 align:start position:0%
how that should be interpreted the
 

00:44:27.359 --> 00:44:31.339 align:start position:0%
how that should be interpreted the
sender<00:44:27.869><c> would</c><00:44:28.470><c> create</c><00:44:29.400><c> a</c><00:44:29.960><c> remote</c><00:44:30.960><c> message</c>

00:44:31.339 --> 00:44:31.349 align:start position:0%
sender would create a remote message
 

00:44:31.349 --> 00:44:32.960 align:start position:0%
sender would create a remote message
port<00:44:31.650><c> to</c><00:44:31.799><c> represent</c><00:44:32.220><c> the</c><00:44:32.309><c> port</c><00:44:32.549><c> the</c>

00:44:32.960 --> 00:44:32.970 align:start position:0%
port to represent the port the
 

00:44:32.970 --> 00:44:36.019 align:start position:0%
port to represent the port the
destination<00:44:33.690><c> of</c><00:44:33.779><c> the</c><00:44:33.839><c> message</c><00:44:34.170><c> and</c><00:44:34.670><c> call</c><00:44:35.670><c> CF</c>

00:44:36.019 --> 00:44:36.029 align:start position:0%
destination of the message and call CF
 

00:44:36.029 --> 00:44:38.450 align:start position:0%
destination of the message and call CF
message<00:44:36.329><c> ports</c><00:44:36.660><c> and</c><00:44:36.930><c> requests</c><00:44:37.430><c> with</c><00:44:38.430><c> a</c>

00:44:38.450 --> 00:44:38.460 align:start position:0%
message ports and requests with a
 

00:44:38.460 --> 00:44:42.079 align:start position:0%
message ports and requests with a
message<00:44:38.819><c> to</c><00:44:38.970><c> be</c><00:44:39.089><c> sent</c><00:44:39.740><c> then</c><00:44:40.760><c> the</c><00:44:41.760><c> receiver</c>

00:44:42.079 --> 00:44:42.089 align:start position:0%
message to be sent then the receiver
 

00:44:42.089 --> 00:44:44.120 align:start position:0%
message to be sent then the receiver
will<00:44:42.359><c> be</c><00:44:42.480><c> notified</c><00:44:42.960><c> within</c><00:44:43.470><c> its</c><00:44:43.740><c> run</c><00:44:43.950><c> loop</c>

00:44:44.120 --> 00:44:44.130 align:start position:0%
will be notified within its run loop
 

00:44:44.130 --> 00:44:47.000 align:start position:0%
will be notified within its run loop
getting<00:44:44.460><c> a</c><00:44:44.549><c> callback</c><00:44:44.760><c> and</c><00:44:45.450><c> then</c><00:44:46.380><c> if</c><00:44:46.710><c> there's</c><00:44:46.950><c> a</c>

00:44:47.000 --> 00:44:47.010 align:start position:0%
getting a callback and then if there's a
 

00:44:47.010 --> 00:44:48.710 align:start position:0%
getting a callback and then if there's a
reply<00:44:47.400><c> the</c><00:44:47.460><c> receiver</c><00:44:48.029><c> would</c><00:44:48.150><c> return</c><00:44:48.539><c> there</c>

00:44:48.710 --> 00:44:48.720 align:start position:0%
reply the receiver would return there
 

00:44:48.720 --> 00:44:51.079 align:start position:0%
reply the receiver would return there
apply<00:44:48.990><c> and</c><00:44:49.349><c> then</c><00:44:50.190><c> the</c><00:44:50.309><c> sender</c><00:44:50.700><c> would</c><00:44:50.880><c> get</c>

00:44:51.079 --> 00:44:51.089 align:start position:0%
apply and then the sender would get
 

00:44:51.089 --> 00:44:52.970 align:start position:0%
apply and then the sender would get
their<00:44:51.210><c> reply</c><00:44:51.480><c> and</c><00:44:51.779><c> the</c><00:44:52.049><c> message</c><00:44:52.470><c> port</c><00:44:52.740><c> send</c>

00:44:52.970 --> 00:44:52.980 align:start position:0%
their reply and the message port send
 

00:44:52.980 --> 00:44:56.840 align:start position:0%
their reply and the message port send
would<00:44:53.339><c> return</c>

00:44:56.840 --> 00:44:56.850 align:start position:0%
 
 

00:44:56.850 --> 00:45:00.260 align:start position:0%
 
now<00:44:57.480><c> there's</c><00:44:58.110><c> also</c><00:44:58.320><c> another</c><00:44:58.680><c> mechanism</c><00:44:59.270><c> that</c>

00:45:00.260 --> 00:45:00.270 align:start position:0%
now there's also another mechanism that
 

00:45:00.270 --> 00:45:03.380 align:start position:0%
now there's also another mechanism that
we<00:45:00.480><c> have</c><00:45:00.740><c> built</c><00:45:01.740><c> on</c><00:45:01.920><c> top</c><00:45:02.160><c> of</c><00:45:02.220><c> these</c><00:45:02.490><c> which</c><00:45:03.360><c> is</c>

00:45:03.380 --> 00:45:03.390 align:start position:0%
we have built on top of these which is
 

00:45:03.390 --> 00:45:06.410 align:start position:0%
we have built on top of these which is
perhaps<00:45:03.690><c> lesser</c><00:45:04.140><c> known</c><00:45:04.320><c> but</c><00:45:05.130><c> very</c><00:45:05.670><c> useful</c><00:45:05.730><c> and</c>

00:45:06.410 --> 00:45:06.420 align:start position:0%
perhaps lesser known but very useful and
 

00:45:06.420 --> 00:45:10.070 align:start position:0%
perhaps lesser known but very useful and
this<00:45:07.050><c> is</c><00:45:07.290><c> a</c><00:45:07.500><c> broadcast</c><00:45:08.490><c> local</c><00:45:09.420><c> IPC</c><00:45:09.900><c> mechanism</c>

00:45:10.070 --> 00:45:10.080 align:start position:0%
this is a broadcast local IPC mechanism
 

00:45:10.080 --> 00:45:15.230 align:start position:0%
this is a broadcast local IPC mechanism
CF<00:45:10.920><c> notification</c><00:45:11.580><c> center</c><00:45:13.040><c> and</c><00:45:14.120><c> what</c><00:45:15.120><c> this</c>

00:45:15.230 --> 00:45:15.240 align:start position:0%
CF notification center and what this
 

00:45:15.240 --> 00:45:18.710 align:start position:0%
CF notification center and what this
allows<00:45:15.510><c> you</c><00:45:15.690><c> to</c><00:45:15.840><c> do</c><00:45:16.020><c> is</c><00:45:16.260><c> to</c><00:45:16.920><c> post</c><00:45:17.720><c> happenings</c>

00:45:18.710 --> 00:45:18.720 align:start position:0%
allows you to do is to post happenings
 

00:45:18.720 --> 00:45:23.390 align:start position:0%
allows you to do is to post happenings
of<00:45:19.080><c> any</c><00:45:19.320><c> sort</c><00:45:19.560><c> to</c><00:45:21.260><c> an</c><00:45:22.260><c> arbitrary</c><00:45:22.890><c> possibly</c>

00:45:23.390 --> 00:45:23.400 align:start position:0%
of any sort to an arbitrary possibly
 

00:45:23.400 --> 00:45:28.610 align:start position:0%
of any sort to an arbitrary possibly
unknown<00:45:23.820><c> set</c><00:45:24.360><c> of</c><00:45:24.450><c> receivers</c><00:45:27.620><c> these</c>

00:45:28.610 --> 00:45:28.620 align:start position:0%
unknown set of receivers these
 

00:45:28.620 --> 00:45:31.160 align:start position:0%
unknown set of receivers these
notifications<00:45:29.220><c> are</c><00:45:30.030><c> identified</c><00:45:30.780><c> by</c><00:45:31.020><c> their</c>

00:45:31.160 --> 00:45:31.170 align:start position:0%
notifications are identified by their
 

00:45:31.170 --> 00:45:34.550 align:start position:0%
notifications are identified by their
name<00:45:31.470><c> and</c><00:45:31.910><c> optionally</c><00:45:32.910><c> also</c><00:45:32.940><c> by</c><00:45:33.560><c> another</c>

00:45:34.550 --> 00:45:34.560 align:start position:0%
name and optionally also by another
 

00:45:34.560 --> 00:45:36.680 align:start position:0%
name and optionally also by another
string<00:45:34.950><c> that</c><00:45:35.310><c> the</c><00:45:35.520><c> name</c><00:45:35.700><c> again</c><00:45:36.030><c> is</c><00:45:36.180><c> just</c><00:45:36.210><c> a</c><00:45:36.450><c> CF</c>

00:45:36.680 --> 00:45:36.690 align:start position:0%
string that the name again is just a CF
 

00:45:36.690 --> 00:45:39.080 align:start position:0%
string that the name again is just a CF
string<00:45:37.050><c> optionally</c><00:45:38.040><c> also</c><00:45:38.100><c> by</c><00:45:38.460><c> another</c><00:45:38.730><c> string</c>

00:45:39.080 --> 00:45:39.090 align:start position:0%
string optionally also by another string
 

00:45:39.090 --> 00:45:40.850 align:start position:0%
string optionally also by another string
representing<00:45:39.810><c> the</c><00:45:39.900><c> object</c><00:45:40.050><c> that</c><00:45:40.410><c> sends</c><00:45:40.740><c> them</c>

00:45:40.850 --> 00:45:40.860 align:start position:0%
representing the object that sends them
 

00:45:40.860 --> 00:45:43.130 align:start position:0%
representing the object that sends them
and<00:45:41.190><c> they</c><00:45:41.430><c> can</c><00:45:41.550><c> carry</c><00:45:41.730><c> with</c><00:45:42.000><c> them</c>

00:45:43.130 --> 00:45:43.140 align:start position:0%
and they can carry with them
 

00:45:43.140 --> 00:45:45.800 align:start position:0%
and they can carry with them
essentially<00:45:43.950><c> arbitrary</c><00:45:44.580><c> data</c><00:45:45.090><c> again</c><00:45:45.570><c> a</c>

00:45:45.800 --> 00:45:45.810 align:start position:0%
essentially arbitrary data again a
 

00:45:45.810 --> 00:45:49.880 align:start position:0%
essentially arbitrary data again a
property<00:45:46.500><c> list</c><00:45:47.780><c> in</c><00:45:48.780><c> this</c><00:45:49.020><c> case</c><00:45:49.290><c> the</c><00:45:49.590><c> sender</c>

00:45:49.880 --> 00:45:49.890 align:start position:0%
property list in this case the sender
 

00:45:49.890 --> 00:45:53.030 align:start position:0%
property list in this case the sender
would<00:45:50.880><c> specify</c><00:45:51.180><c> what</c><00:45:51.990><c> sort</c><00:45:52.290><c> of</c><00:45:52.350><c> notifications</c>

00:45:53.030 --> 00:45:53.040 align:start position:0%
would specify what sort of notifications
 

00:45:53.040 --> 00:45:54.650 align:start position:0%
would specify what sort of notifications
it's<00:45:53.220><c> going</c><00:45:53.430><c> to</c><00:45:53.520><c> send</c><00:45:53.730><c> out</c><00:45:53.910><c> what</c><00:45:54.300><c> their</c><00:45:54.450><c> names</c>

00:45:54.650 --> 00:45:54.660 align:start position:0%
it's going to send out what their names
 

00:45:54.660 --> 00:45:57.470 align:start position:0%
it's going to send out what their names
would<00:45:54.930><c> be</c><00:45:55.110><c> and</c><00:45:55.610><c> what</c><00:45:56.610><c> sort</c><00:45:56.940><c> of</c><00:45:56.970><c> information</c>

00:45:57.470 --> 00:45:57.480 align:start position:0%
would be and what sort of information
 

00:45:57.480 --> 00:46:00.320 align:start position:0%
would be and what sort of information
they<00:45:57.600><c> would</c><00:45:57.690><c> carry</c><00:45:57.960><c> with</c><00:45:58.020><c> them</c><00:45:58.380><c> and</c><00:45:59.240><c> when</c><00:46:00.240><c> the</c>

00:46:00.320 --> 00:46:00.330 align:start position:0%
they would carry with them and when the
 

00:46:00.330 --> 00:46:01.370 align:start position:0%
they would carry with them and when the
sender<00:46:00.510><c> wants</c><00:46:00.690><c> to</c><00:46:00.840><c> send</c><00:46:00.930><c> one</c><00:46:01.230><c> of</c><00:46:01.260><c> these</c>

00:46:01.370 --> 00:46:01.380 align:start position:0%
sender wants to send one of these
 

00:46:01.380 --> 00:46:02.270 align:start position:0%
sender wants to send one of these
notifications

00:46:02.270 --> 00:46:02.280 align:start position:0%
notifications
 

00:46:02.280 --> 00:46:06.370 align:start position:0%
notifications
it<00:46:02.760><c> simply</c><00:46:03.270><c> posts</c><00:46:04.110><c> it</c><00:46:04.260><c> and</c><00:46:04.440><c> goes</c><00:46:04.650><c> on</c><00:46:04.860><c> its</c><00:46:05.250><c> way</c>

00:46:06.370 --> 00:46:06.380 align:start position:0%
it simply posts it and goes on its way
 

00:46:06.380 --> 00:46:09.050 align:start position:0%
it simply posts it and goes on its way
it<00:46:07.380><c> may</c><00:46:07.620><c> choose</c><00:46:07.920><c> whether</c><00:46:08.310><c> the</c><00:46:08.460><c> notifications</c>

00:46:09.050 --> 00:46:09.060 align:start position:0%
it may choose whether the notifications
 

00:46:09.060 --> 00:46:10.370 align:start position:0%
it may choose whether the notifications
are<00:46:09.150><c> going</c><00:46:09.300><c> to</c><00:46:09.360><c> be</c><00:46:09.420><c> delivered</c><00:46:09.780><c> immediately</c><00:46:09.870><c> or</c>

00:46:10.370 --> 00:46:10.380 align:start position:0%
are going to be delivered immediately or
 

00:46:10.380 --> 00:46:15.560 align:start position:0%
are going to be delivered immediately or
not<00:46:11.930><c> the</c><00:46:12.930><c> receivers</c><00:46:13.830><c> if</c><00:46:14.220><c> anyone</c><00:46:14.550><c> anyone</c><00:46:15.090><c> on</c>

00:46:15.560 --> 00:46:15.570 align:start position:0%
not the receivers if anyone anyone on
 

00:46:15.570 --> 00:46:17.030 align:start position:0%
not the receivers if anyone anyone on
the<00:46:15.660><c> system</c><00:46:15.900><c> who</c><00:46:15.990><c> wants</c><00:46:16.260><c> to</c><00:46:16.380><c> receive</c><00:46:16.560><c> such</c><00:46:17.010><c> a</c>

00:46:17.030 --> 00:46:17.040 align:start position:0%
the system who wants to receive such a
 

00:46:17.040 --> 00:46:19.730 align:start position:0%
the system who wants to receive such a
notification<00:46:17.600><c> simply</c><00:46:18.600><c> registers</c><00:46:19.260><c> to</c><00:46:19.410><c> receive</c>

00:46:19.730 --> 00:46:19.740 align:start position:0%
notification simply registers to receive
 

00:46:19.740 --> 00:46:21.470 align:start position:0%
notification simply registers to receive
it<00:46:19.950><c> senator</c><00:46:20.760><c> doesn't</c><00:46:21.030><c> have</c><00:46:21.240><c> to</c><00:46:21.360><c> know</c><00:46:21.450><c> anything</c>

00:46:21.470 --> 00:46:21.480 align:start position:0%
it senator doesn't have to know anything
 

00:46:21.480 --> 00:46:25.490 align:start position:0%
it senator doesn't have to know anything
about<00:46:21.840><c> them</c><00:46:23.030><c> you</c><00:46:24.030><c> register</c><00:46:24.510><c> based</c><00:46:24.780><c> on</c><00:46:25.110><c> the</c>

00:46:25.490 --> 00:46:25.500 align:start position:0%
about them you register based on the
 

00:46:25.500 --> 00:46:29.270 align:start position:0%
about them you register based on the
name<00:46:25.680><c> optionally</c><00:46:26.610><c> also</c><00:46:26.840><c> the</c><00:46:28.280><c> string</c>

00:46:29.270 --> 00:46:29.280 align:start position:0%
name optionally also the string
 

00:46:29.280 --> 00:46:31.850 align:start position:0%
name optionally also the string
representing<00:46:29.730><c> the</c><00:46:29.820><c> sender</c><00:46:30.150><c> and</c><00:46:30.680><c> you</c><00:46:31.680><c> can</c>

00:46:31.850 --> 00:46:31.860 align:start position:0%
representing the sender and you can
 

00:46:31.860 --> 00:46:34.250 align:start position:0%
representing the sender and you can
choose<00:46:32.180><c> whether</c><00:46:33.180><c> you</c><00:46:33.390><c> want</c><00:46:33.570><c> to</c><00:46:33.690><c> receive</c><00:46:34.110><c> these</c>

00:46:34.250 --> 00:46:34.260 align:start position:0%
choose whether you want to receive these
 

00:46:34.260 --> 00:46:37.520 align:start position:0%
choose whether you want to receive these
notifications<00:46:34.550><c> immediately</c><00:46:35.550><c> or</c><00:46:36.410><c> whether</c><00:46:37.410><c> you</c>

00:46:37.520 --> 00:46:37.530 align:start position:0%
notifications immediately or whether you
 

00:46:37.530 --> 00:46:39.140 align:start position:0%
notifications immediately or whether you
want<00:46:37.710><c> them</c><00:46:37.800><c> to</c><00:46:37.920><c> be</c><00:46:38.010><c> delayed</c><00:46:38.310><c> because</c>

00:46:39.140 --> 00:46:39.150 align:start position:0%
want them to be delayed because
 

00:46:39.150 --> 00:46:42.590 align:start position:0%
want them to be delayed because
typically<00:46:40.160><c> it's</c><00:46:41.160><c> not</c><00:46:41.220><c> necessary</c><00:46:41.910><c> for</c><00:46:42.180><c> all</c><00:46:42.330><c> the</c>

00:46:42.590 --> 00:46:42.600 align:start position:0%
typically it's not necessary for all the
 

00:46:42.600 --> 00:46:44.750 align:start position:0%
typically it's not necessary for all the
receivers<00:46:43.110><c> to</c><00:46:43.830><c> get</c><00:46:44.010><c> the</c><00:46:44.130><c> notification</c><00:46:44.670><c> at</c>

00:46:44.750 --> 00:46:44.760 align:start position:0%
receivers to get the notification at
 

00:46:44.760 --> 00:46:46.340 align:start position:0%
receivers to get the notification at
once<00:46:44.970><c> and</c><00:46:45.210><c> it's</c><00:46:45.300><c> rather</c><00:46:45.480><c> expensive</c><00:46:45.870><c> to</c><00:46:46.200><c> wake</c>

00:46:46.340 --> 00:46:46.350 align:start position:0%
once and it's rather expensive to wake
 

00:46:46.350 --> 00:46:48.530 align:start position:0%
once and it's rather expensive to wake
them<00:46:46.500><c> all</c><00:46:46.680><c> up</c><00:46:46.920><c> wake</c><00:46:47.580><c> up</c><00:46:47.730><c> all</c><00:46:47.940><c> these</c><00:46:48.090><c> processes</c>

00:46:48.530 --> 00:46:48.540 align:start position:0%
them all up wake up all these processes
 

00:46:48.540 --> 00:46:50.210 align:start position:0%
them all up wake up all these processes
at<00:46:48.630><c> once</c><00:46:48.900><c> to</c><00:46:49.170><c> deliver</c><00:46:49.440><c> the</c><00:46:49.560><c> notification</c>

00:46:50.210 --> 00:46:50.220 align:start position:0%
at once to deliver the notification
 

00:46:50.220 --> 00:46:54.020 align:start position:0%
at once to deliver the notification
often<00:46:51.060><c> it's</c><00:46:51.270><c> enough</c><00:46:51.570><c> if</c><00:46:52.230><c> you</c><00:46:52.650><c> will</c><00:46:53.580><c> simply</c><00:46:53.760><c> get</c>

00:46:54.020 --> 00:46:54.030 align:start position:0%
often it's enough if you will simply get
 

00:46:54.030 --> 00:46:55.520 align:start position:0%
often it's enough if you will simply get
this<00:46:54.210><c> notification</c><00:46:54.510><c> the</c><00:46:55.020><c> next</c><00:46:55.230><c> time</c><00:46:55.410><c> you</c>

00:46:55.520 --> 00:46:55.530 align:start position:0%
this notification the next time you
 

00:46:55.530 --> 00:46:59.930 align:start position:0%
this notification the next time you
become<00:46:55.800><c> active</c><00:46:56.300><c> and</c><00:46:57.590><c> if</c><00:46:58.590><c> you</c><00:46:58.740><c> a</c><00:46:59.160><c> notification</c>

00:46:59.930 --> 00:46:59.940 align:start position:0%
become active and if you a notification
 

00:46:59.940 --> 00:47:02.030 align:start position:0%
become active and if you a notification
might<00:47:00.360><c> be</c><00:47:00.480><c> send</c><00:47:00.660><c> multiple</c><00:47:00.840><c> times</c><00:47:01.320><c> you</c><00:47:01.770><c> can</c>

00:47:02.030 --> 00:47:02.040 align:start position:0%
might be send multiple times you can
 

00:47:02.040 --> 00:47:03.680 align:start position:0%
might be send multiple times you can
choose<00:47:02.250><c> to</c><00:47:02.430><c> have</c><00:47:02.550><c> those</c><00:47:02.790><c> coalesced</c><00:47:03.390><c> if</c><00:47:03.600><c> you</c>

00:47:03.680 --> 00:47:03.690 align:start position:0%
choose to have those coalesced if you
 

00:47:03.690 --> 00:47:05.819 align:start position:0%
choose to have those coalesced if you
like

00:47:05.819 --> 00:47:05.829 align:start position:0%
like
 

00:47:05.829 --> 00:47:09.670 align:start position:0%
like
so<00:47:07.299><c> this</c><00:47:08.299><c> is</c><00:47:08.420><c> very</c><00:47:08.599><c> useful</c><00:47:08.720><c> mechanism</c><00:47:09.500><c> it's</c>

00:47:09.670 --> 00:47:09.680 align:start position:0%
so this is very useful mechanism it's
 

00:47:09.680 --> 00:47:12.519 align:start position:0%
so this is very useful mechanism it's
not<00:47:09.920><c> intended</c><00:47:10.910><c> for</c><00:47:11.089><c> large</c><00:47:11.779><c> amounts</c><00:47:12.259><c> of</c><00:47:12.349><c> data</c>

00:47:12.519 --> 00:47:12.529 align:start position:0%
not intended for large amounts of data
 

00:47:12.529 --> 00:47:18.870 align:start position:0%
not intended for large amounts of data
or<00:47:12.890><c> very</c><00:47:13.730><c> high</c><00:47:14.170><c> volume</c><00:47:15.170><c> of</c><00:47:15.289><c> frequency</c><00:47:17.710><c> but</c>

00:47:18.870 --> 00:47:18.880 align:start position:0%
or very high volume of frequency but
 

00:47:18.880 --> 00:47:21.039 align:start position:0%
or very high volume of frequency but
it's<00:47:19.880><c> useful</c><00:47:20.420><c> in</c><00:47:20.539><c> a</c><00:47:20.569><c> variety</c><00:47:20.720><c> of</c>

00:47:21.039 --> 00:47:21.049 align:start position:0%
it's useful in a variety of
 

00:47:21.049 --> 00:47:24.759 align:start position:0%
it's useful in a variety of
circumstances<00:47:22.180><c> especially</c><00:47:23.230><c> for</c><00:47:24.230><c> example</c><00:47:24.650><c> in</c>

00:47:24.759 --> 00:47:24.769 align:start position:0%
circumstances especially for example in
 

00:47:24.769 --> 00:47:26.289 align:start position:0%
circumstances especially for example in
combination<00:47:25.369><c> with</c><00:47:25.519><c> other</c><00:47:25.549><c> channels</c><00:47:26.059><c> of</c>

00:47:26.289 --> 00:47:26.299 align:start position:0%
combination with other channels of
 

00:47:26.299 --> 00:47:28.809 align:start position:0%
combination with other channels of
information<00:47:26.480><c> for</c><00:47:26.990><c> example</c><00:47:27.440><c> if</c><00:47:28.009><c> you</c><00:47:28.220><c> had</c><00:47:28.460><c> a</c>

00:47:28.809 --> 00:47:28.819 align:start position:0%
information for example if you had a
 

00:47:28.819 --> 00:47:30.759 align:start position:0%
information for example if you had a
suite<00:47:29.240><c> of</c><00:47:29.359><c> applications</c><00:47:29.450><c> on</c><00:47:30.109><c> the</c><00:47:30.200><c> system</c><00:47:30.559><c> that</c>

00:47:30.759 --> 00:47:30.769 align:start position:0%
suite of applications on the system that
 

00:47:30.769 --> 00:47:34.749 align:start position:0%
suite of applications on the system that
all<00:47:30.980><c> shared</c><00:47:31.400><c> a</c><00:47:31.759><c> set</c><00:47:32.420><c> of</c><00:47:32.509><c> preferences</c><00:47:32.750><c> and</c><00:47:33.759><c> one</c>

00:47:34.749 --> 00:47:34.759 align:start position:0%
all shared a set of preferences and one
 

00:47:34.759 --> 00:47:36.190 align:start position:0%
all shared a set of preferences and one
application<00:47:35.390><c> was</c><00:47:35.509><c> going</c><00:47:35.660><c> to</c><00:47:35.750><c> change</c><00:47:35.990><c> those</c>

00:47:36.190 --> 00:47:36.200 align:start position:0%
application was going to change those
 

00:47:36.200 --> 00:47:37.749 align:start position:0%
application was going to change those
preferences<00:47:36.470><c> it</c><00:47:37.190><c> could</c><00:47:37.430><c> send</c><00:47:37.640><c> out</c><00:47:37.730><c> a</c>

00:47:37.749 --> 00:47:37.759 align:start position:0%
preferences it could send out a
 

00:47:37.759 --> 00:47:39.789 align:start position:0%
preferences it could send out a
notification<00:47:38.170><c> to</c><00:47:39.170><c> let</c><00:47:39.200><c> all</c><00:47:39.619><c> the</c><00:47:39.769><c> other</c>

00:47:39.789 --> 00:47:39.799 align:start position:0%
notification to let all the other
 

00:47:39.799 --> 00:47:42.279 align:start position:0%
notification to let all the other
applications<00:47:40.609><c> in</c><00:47:40.730><c> the</c><00:47:40.849><c> suite</c><00:47:40.970><c> know</c><00:47:41.960><c> the</c>

00:47:42.279 --> 00:47:42.289 align:start position:0%
applications in the suite know the
 

00:47:42.289 --> 00:47:43.809 align:start position:0%
applications in the suite know the
preferences<00:47:42.740><c> have</c><00:47:42.829><c> changed</c><00:47:43.279><c> and</c><00:47:43.549><c> then</c><00:47:43.700><c> at</c>

00:47:43.809 --> 00:47:43.819 align:start position:0%
preferences have changed and then at
 

00:47:43.819 --> 00:47:45.430 align:start position:0%
preferences have changed and then at
their<00:47:43.940><c> convenience</c><00:47:44.269><c> they</c><00:47:44.869><c> can</c><00:47:45.049><c> look</c><00:47:45.170><c> up</c><00:47:45.319><c> the</c>

00:47:45.430 --> 00:47:45.440 align:start position:0%
their convenience they can look up the
 

00:47:45.440 --> 00:47:49.779 align:start position:0%
their convenience they can look up the
change<00:47:45.680><c> value</c><00:47:46.160><c> or</c><00:47:46.400><c> if</c><00:47:47.240><c> you</c><00:47:47.359><c> had</c><00:47:47.539><c> some</c><00:47:48.609><c> area</c><00:47:49.609><c> on</c>

00:47:49.779 --> 00:47:49.789 align:start position:0%
change value or if you had some area on
 

00:47:49.789 --> 00:47:51.370 align:start position:0%
change value or if you had some area on
the<00:47:49.880><c> file</c><00:47:50.089><c> system</c><00:47:50.359><c> that</c><00:47:50.779><c> you</c><00:47:50.930><c> were</c><00:47:51.019><c> working</c>

00:47:51.370 --> 00:47:51.380 align:start position:0%
the file system that you were working
 

00:47:51.380 --> 00:47:53.230 align:start position:0%
the file system that you were working
with<00:47:51.410><c> you</c><00:47:51.950><c> changed</c><00:47:52.400><c> it</c><00:47:52.579><c> you</c><00:47:52.759><c> could</c><00:47:52.910><c> send</c><00:47:53.119><c> out</c><00:47:53.210><c> a</c>

00:47:53.230 --> 00:47:53.240 align:start position:0%
with you changed it you could send out a
 

00:47:53.240 --> 00:47:55.180 align:start position:0%
with you changed it you could send out a
notification<00:47:53.569><c> to</c><00:47:54.200><c> let</c><00:47:54.230><c> any</c><00:47:54.559><c> interested</c><00:47:55.009><c> party</c>

00:47:55.180 --> 00:47:55.190 align:start position:0%
notification to let any interested party
 

00:47:55.190 --> 00:47:57.130 align:start position:0%
notification to let any interested party
know<00:47:55.490><c> that</c><00:47:55.670><c> it</c><00:47:55.759><c> had</c><00:47:55.880><c> changed</c><00:47:56.089><c> and</c><00:47:56.869><c> that</c><00:47:56.990><c> they</c>

00:47:57.130 --> 00:47:57.140 align:start position:0%
know that it had changed and that they
 

00:47:57.140 --> 00:47:58.960 align:start position:0%
know that it had changed and that they
should<00:47:57.289><c> go</c><00:47:57.440><c> and</c><00:47:57.559><c> look</c><00:47:57.680><c> it</c><00:47:57.829><c> up</c><00:47:57.920><c> and</c><00:47:57.980><c> see</c><00:47:58.819><c> what</c>

00:47:58.960 --> 00:47:58.970 align:start position:0%
should go and look it up and see what
 

00:47:58.970 --> 00:48:04.829 align:start position:0%
should go and look it up and see what
had<00:47:59.059><c> happened</c><00:48:02.349><c> all</c><00:48:03.349><c> right</c><00:48:03.380><c> so</c><00:48:04.220><c> now</c><00:48:04.460><c> let's</c>

00:48:04.829 --> 00:48:04.839 align:start position:0%
had happened all right so now let's
 

00:48:04.839 --> 00:48:06.910 align:start position:0%
had happened all right so now let's
discuss<00:48:05.839><c> where</c><00:48:06.170><c> you</c><00:48:06.259><c> can</c><00:48:06.380><c> go</c><00:48:06.529><c> for</c><00:48:06.740><c> more</c>

00:48:06.910 --> 00:48:06.920 align:start position:0%
discuss where you can go for more
 

00:48:06.920 --> 00:48:10.900 align:start position:0%
discuss where you can go for more
information<00:48:07.430><c> about</c><00:48:07.519><c> corefoundation</c><00:48:09.910><c> there</c>

00:48:10.900 --> 00:48:10.910 align:start position:0%
information about corefoundation there
 

00:48:10.910 --> 00:48:12.759 align:start position:0%
information about corefoundation there
is<00:48:11.089><c> documentation</c><00:48:11.509><c> on</c><00:48:12.019><c> your</c><00:48:12.200><c> system</c><00:48:12.559><c> and</c>

00:48:12.759 --> 00:48:12.769 align:start position:0%
is documentation on your system and
 

00:48:12.769 --> 00:48:15.420 align:start position:0%
is documentation on your system and
online<00:48:13.480><c> there</c><00:48:14.480><c> are</c><00:48:14.660><c> a</c><00:48:14.720><c> number</c><00:48:14.869><c> of</c><00:48:14.960><c> examples</c>

00:48:15.420 --> 00:48:15.430 align:start position:0%
online there are a number of examples
 

00:48:15.430 --> 00:48:18.670 align:start position:0%
online there are a number of examples
both<00:48:16.430><c> with</c><00:48:16.910><c> your</c><00:48:17.059><c> Mac</c><00:48:17.269><c> os10</c><00:48:17.509><c> developer</c><00:48:18.079><c> CD</c><00:48:18.440><c> and</c>

00:48:18.670 --> 00:48:18.680 align:start position:0%
both with your Mac os10 developer CD and
 

00:48:18.680 --> 00:48:22.870 align:start position:0%
both with your Mac os10 developer CD and
then<00:48:18.920><c> the</c><00:48:19.009><c> carbon</c><00:48:19.220><c> Live</c><00:48:19.460><c> SDKs</c><00:48:19.970><c> and</c><00:48:21.700><c> you</c><00:48:22.700><c> should</c>

00:48:22.870 --> 00:48:22.880 align:start position:0%
then the carbon Live SDKs and you should
 

00:48:22.880 --> 00:48:24.539 align:start position:0%
then the carbon Live SDKs and you should
not<00:48:23.000><c> forget</c><00:48:23.119><c> to</c><00:48:23.450><c> look</c><00:48:23.599><c> at</c><00:48:23.809><c> the</c><00:48:23.960><c> release</c><00:48:24.230><c> notes</c>

00:48:24.539 --> 00:48:24.549 align:start position:0%
not forget to look at the release notes
 

00:48:24.549 --> 00:48:27.849 align:start position:0%
not forget to look at the release notes
which<00:48:25.549><c> describe</c><00:48:26.119><c> anything</c><00:48:26.960><c> new</c><00:48:27.289><c> or</c><00:48:27.559><c> anything</c>

00:48:27.849 --> 00:48:27.859 align:start position:0%
which describe anything new or anything
 

00:48:27.859 --> 00:48:29.740 align:start position:0%
which describe anything new or anything
that<00:48:27.980><c> has</c><00:48:28.130><c> changed</c><00:48:28.400><c> in</c><00:48:28.789><c> corefoundation</c><00:48:29.119><c> and</c>

00:48:29.740 --> 00:48:29.750 align:start position:0%
that has changed in corefoundation and
 

00:48:29.750 --> 00:48:31.870 align:start position:0%
that has changed in corefoundation and
there<00:48:30.559><c> are</c><00:48:30.650><c> some</c><00:48:30.799><c> specialized</c><00:48:31.369><c> release</c><00:48:31.670><c> notes</c>

00:48:31.870 --> 00:48:31.880 align:start position:0%
there are some specialized release notes
 

00:48:31.880 --> 00:48:35.230 align:start position:0%
there are some specialized release notes
that<00:48:32.180><c> are</c><00:48:32.299><c> more</c><00:48:32.480><c> like</c><00:48:33.069><c> discussions</c><00:48:34.069><c> of</c><00:48:34.400><c> topics</c>

00:48:35.230 --> 00:48:35.240 align:start position:0%
that are more like discussions of topics
 

00:48:35.240 --> 00:48:37.599 align:start position:0%
that are more like discussions of topics
and<00:48:35.390><c> depth</c><00:48:35.690><c> one</c><00:48:36.500><c> on</c><00:48:36.650><c> C</c><00:48:36.859><c> a</c><00:48:36.890><c> bundle</c><00:48:37.369><c> and</c><00:48:37.430><c> C</c><00:48:37.579><c> a</c>

00:48:37.599 --> 00:48:37.609 align:start position:0%
and depth one on C a bundle and C a
 

00:48:37.609 --> 00:48:40.150 align:start position:0%
and depth one on C a bundle and C a
plug-in<00:48:38.119><c> with</c><00:48:38.420><c> some</c><00:48:38.630><c> detailed</c><00:48:39.049><c> examples</c><00:48:39.589><c> C</c><00:48:40.130><c> a</c>

00:48:40.150 --> 00:48:40.160 align:start position:0%
plug-in with some detailed examples C a
 

00:48:40.160 --> 00:48:43.960 align:start position:0%
plug-in with some detailed examples C a
plug<00:48:40.490><c> in</c><00:48:41.230><c> one</c><00:48:42.230><c> describing</c><00:48:42.950><c> the</c><00:48:43.640><c> info</c>

00:48:43.960 --> 00:48:43.970 align:start position:0%
plug in one describing the info
 

00:48:43.970 --> 00:48:45.970 align:start position:0%
plug in one describing the info
dictionary<00:48:44.180><c> and</c><00:48:44.690><c> a</c><00:48:44.779><c> bundle</c><00:48:44.990><c> in</c><00:48:45.319><c> detail</c><00:48:45.680><c> and</c>

00:48:45.970 --> 00:48:45.980 align:start position:0%
dictionary and a bundle in detail and
 

00:48:45.980 --> 00:48:50.289 align:start position:0%
dictionary and a bundle in detail and
one<00:48:46.549><c> on</c><00:48:46.910><c> localization</c><00:48:48.609><c> and</c><00:48:49.609><c> now</c><00:48:50.000><c> I'd</c><00:48:50.119><c> like</c><00:48:50.240><c> to</c>

00:48:50.289 --> 00:48:50.299 align:start position:0%
one on localization and now I'd like to
 

00:48:50.299 --> 00:48:54.599 align:start position:0%
one on localization and now I'd like to
bring<00:48:50.509><c> mark</c><00:48:50.750><c> Turner</c><00:48:50.960><c> back</c>

00:48:54.599 --> 00:48:54.609 align:start position:0%
 
 

00:48:54.609 --> 00:49:09.930 align:start position:0%
 
to<00:48:55.329><c> wrap</c><00:48:55.509><c> things</c><00:48:55.749><c> up</c><00:48:55.869><c> and</c><00:48:56.019><c> star</c><00:48:56.289><c> a</c><00:48:56.319><c> QA</c><00:48:56.619><c> Oh</c><00:49:08.940><c> we'll</c>

00:49:09.930 --> 00:49:09.940 align:start position:0%
to wrap things up and star a QA Oh we'll
 

00:49:09.940 --> 00:49:13.170 align:start position:0%
to wrap things up and star a QA Oh we'll
take<00:49:10.119><c> a</c><00:49:10.180><c> quick</c><00:49:10.480><c> look</c><00:49:10.660><c> at</c><00:49:11.700><c> well</c><00:49:12.700><c> I</c><00:49:12.880><c> was</c><00:49:13.089><c> gonna</c>

00:49:13.170 --> 00:49:13.180 align:start position:0%
take a quick look at well I was gonna
 

00:49:13.180 --> 00:49:15.390 align:start position:0%
take a quick look at well I was gonna
say<00:49:13.420><c> what</c><00:49:13.599><c> the</c><00:49:13.690><c> roadmap</c><00:49:13.960><c> is</c><00:49:13.989><c> but</c><00:49:14.349><c> let's</c><00:49:15.249><c> talk</c>

00:49:15.390 --> 00:49:15.400 align:start position:0%
say what the roadmap is but let's talk
 

00:49:15.400 --> 00:49:19.380 align:start position:0%
say what the roadmap is but let's talk
about<00:49:15.579><c> this</c><00:49:17.339><c> so</c><00:49:18.339><c> yeah</c><00:49:18.549><c> as</c><00:49:18.730><c> I</c><00:49:18.849><c> said</c><00:49:19.150><c> I'm</c><00:49:19.359><c> the</c>

00:49:19.380 --> 00:49:19.390 align:start position:0%
about this so yeah as I said I'm the
 

00:49:19.390 --> 00:49:21.509 align:start position:0%
about this so yeah as I said I'm the
carbon<00:49:19.749><c> technology</c><00:49:20.200><c> manager</c><00:49:20.589><c> although</c><00:49:21.130><c> a</c>

00:49:21.509 --> 00:49:21.519 align:start position:0%
carbon technology manager although a
 

00:49:21.519 --> 00:49:23.460 align:start position:0%
carbon technology manager although a
core<00:49:21.849><c> foundation</c><00:49:21.970><c> is</c><00:49:22.480><c> obviously</c><00:49:22.900><c> not</c><00:49:23.170><c> a</c>

00:49:23.460 --> 00:49:23.470 align:start position:0%
core foundation is obviously not a
 

00:49:23.470 --> 00:49:26.400 align:start position:0%
core foundation is obviously not a
carbon<00:49:24.279><c> specific</c><00:49:24.759><c> technology</c><00:49:25.269><c> I'll</c><00:49:25.960><c> be</c><00:49:26.109><c> happy</c>

00:49:26.400 --> 00:49:26.410 align:start position:0%
carbon specific technology I'll be happy
 

00:49:26.410 --> 00:49:29.460 align:start position:0%
carbon specific technology I'll be happy
to<00:49:27.089><c> take</c><00:49:28.089><c> your</c><00:49:28.239><c> questions</c><00:49:28.720><c> or</c><00:49:28.869><c> comments</c><00:49:29.349><c> about</c>

00:49:29.460 --> 00:49:29.470 align:start position:0%
to take your questions or comments about
 

00:49:29.470 --> 00:49:32.579 align:start position:0%
to take your questions or comments about
core<00:49:30.069><c> foundation</c><00:49:30.579><c> you</c><00:49:30.670><c> can</c><00:49:30.819><c> email</c><00:49:30.999><c> me</c><00:49:31.150><c> at</c><00:49:31.589><c> mark</c>

00:49:32.579 --> 00:49:32.589 align:start position:0%
core foundation you can email me at mark
 

00:49:32.589 --> 00:49:33.559 align:start position:0%
core foundation you can email me at mark
at<00:49:32.710><c> apple.com</c>

00:49:33.559 --> 00:49:33.569 align:start position:0%
at apple.com
 

00:49:33.569 --> 00:49:37.979 align:start position:0%
at apple.com
there<00:49:34.569><c> is</c><00:49:34.720><c> the</c><00:49:35.759><c> email</c><00:49:36.759><c> address</c><00:49:36.819><c> here</c><00:49:37.480><c> which</c><00:49:37.660><c> is</c>

00:49:37.979 --> 00:49:37.989 align:start position:0%
there is the email address here which is
 

00:49:37.989 --> 00:49:39.839 align:start position:0%
there is the email address here which is
read<00:49:38.230><c> by</c><00:49:38.440><c> the</c><00:49:38.499><c> engineering</c><00:49:38.980><c> team</c><00:49:39.249><c> so</c><00:49:39.759><c> that's</c>

00:49:39.839 --> 00:49:39.849 align:start position:0%
read by the engineering team so that's
 

00:49:39.849 --> 00:49:41.009 align:start position:0%
read by the engineering team so that's
another<00:49:40.089><c> great</c><00:49:40.329><c> place</c><00:49:40.509><c> to</c><00:49:40.690><c> send</c><00:49:40.930><c> your</c>

00:49:41.009 --> 00:49:41.019 align:start position:0%
another great place to send your
 

00:49:41.019 --> 00:49:44.880 align:start position:0%
another great place to send your
feedback<00:49:41.309><c> and</c><00:49:42.809><c> these</c><00:49:43.809><c> two</c><00:49:44.019><c> mailing</c><00:49:44.380><c> lists</c><00:49:44.739><c> I</c>

00:49:44.880 --> 00:49:44.890 align:start position:0%
feedback and these two mailing lists I
 

00:49:44.890 --> 00:49:47.160 align:start position:0%
feedback and these two mailing lists I
encourage<00:49:45.339><c> you</c><00:49:45.519><c> to</c><00:49:45.549><c> to</c><00:49:46.450><c> get</c><00:49:46.630><c> on</c><00:49:46.809><c> if</c><00:49:47.019><c> you're</c><00:49:47.140><c> not</c>

00:49:47.160 --> 00:49:47.170 align:start position:0%
encourage you to to get on if you're not
 

00:49:47.170 --> 00:49:50.519 align:start position:0%
encourage you to to get on if you're not
already<00:49:48.809><c> it's</c><00:49:49.809><c> a</c><00:49:49.869><c> great</c><00:49:50.049><c> place</c><00:49:50.200><c> to</c><00:49:50.230><c> get</c><00:49:50.440><c> your</c>

00:49:50.519 --> 00:49:50.529 align:start position:0%
already it's a great place to get your
 

00:49:50.529 --> 00:49:52.920 align:start position:0%
already it's a great place to get your
questions<00:49:50.920><c> answered</c><00:49:51.420><c> and</c><00:49:52.420><c> share</c><00:49:52.779><c> your</c>

00:49:52.920 --> 00:49:52.930 align:start position:0%
questions answered and share your
 

00:49:52.930 --> 00:49:54.870 align:start position:0%
questions answered and share your
knowledge<00:49:53.079><c> about</c><00:49:53.619><c> carbon</c><00:49:54.249><c> cocoa</c><00:49:54.670><c> and</c>

00:49:54.870 --> 00:49:54.880 align:start position:0%
knowledge about carbon cocoa and
 

00:49:54.880 --> 00:49:57.170 align:start position:0%
knowledge about carbon cocoa and
corefoundation<00:49:55.450><c> these</c><00:49:56.319><c> lists</c><00:49:56.739><c> are</c><00:49:56.859><c> available</c>

00:49:57.170 --> 00:49:57.180 align:start position:0%
corefoundation these lists are available
 

00:49:57.180 --> 00:49:59.970 align:start position:0%
corefoundation these lists are available
if<00:49:58.180><c> you</c><00:49:58.299><c> haven't</c><00:49:58.930><c> been</c><00:49:59.019><c> there</c><00:49:59.230><c> before</c><00:49:59.499><c> there's</c>

00:49:59.970 --> 00:49:59.980 align:start position:0%
if you haven't been there before there's
 

00:49:59.980 --> 00:50:03.269 align:start position:0%
if you haven't been there before there's
a<00:50:00.039><c> webpage</c><00:50:00.970><c> at</c><00:50:01.239><c> lists</c><00:50:01.630><c> Apple</c><00:50:02.170><c> comm</c><00:50:02.559><c> where</c><00:50:03.220><c> you</c>

00:50:03.269 --> 00:50:03.279 align:start position:0%
a webpage at lists Apple comm where you
 

00:50:03.279 --> 00:50:05.910 align:start position:0%
a webpage at lists Apple comm where you
could<00:50:03.430><c> sign</c><00:50:03.670><c> up</c><00:50:03.700><c> for</c><00:50:04.059><c> a</c><00:50:04.749><c> great</c><00:50:05.319><c> many</c><00:50:05.499><c> Apple</c>

00:50:05.910 --> 00:50:05.920 align:start position:0%
could sign up for a great many Apple
 

00:50:05.920 --> 00:50:14.549 align:start position:0%
could sign up for a great many Apple
mailing<00:50:06.220><c> lists</c><00:50:06.579><c> and</c><00:50:09.029><c> now</c><00:50:11.339><c> so</c><00:50:12.339><c> here</c><00:50:12.579><c> we</c><00:50:12.700><c> are</c><00:50:13.559><c> 10</c>

00:50:14.549 --> 00:50:14.559 align:start position:0%
mailing lists and now so here we are 10
 

00:50:14.559 --> 00:50:15.660 align:start position:0%
mailing lists and now so here we are 10
o'clock<00:50:14.769><c> Friday</c><00:50:15.190><c> morning</c>

00:50:15.660 --> 00:50:15.670 align:start position:0%
o'clock Friday morning
 

00:50:15.670 --> 00:50:18.359 align:start position:0%
o'clock Friday morning
most<00:50:16.089><c> of</c><00:50:16.210><c> these</c><00:50:16.269><c> sessions</c><00:50:16.569><c> have</c><00:50:16.779><c> gone</c><00:50:17.369><c> by</c>

00:50:18.359 --> 00:50:18.369 align:start position:0%
most of these sessions have gone by
 

00:50:18.369 --> 00:50:20.430 align:start position:0%
most of these sessions have gone by
already<00:50:18.519><c> but</c><00:50:18.970><c> I'd</c><00:50:19.059><c> like</c><00:50:19.210><c> you</c><00:50:19.359><c> to</c><00:50:19.539><c> I'd</c><00:50:20.230><c> like</c><00:50:20.349><c> to</c>

00:50:20.430 --> 00:50:20.440 align:start position:0%
already but I'd like you to I'd like to
 

00:50:20.440 --> 00:50:22.349 align:start position:0%
already but I'd like you to I'd like to
highlight<00:50:20.739><c> them</c><00:50:20.890><c> for</c><00:50:21.099><c> you</c><00:50:21.190><c> so</c><00:50:21.369><c> that</c><00:50:21.519><c> you</c><00:50:21.910><c> can</c>

00:50:22.349 --> 00:50:22.359 align:start position:0%
highlight them for you so that you can
 

00:50:22.359 --> 00:50:25.890 align:start position:0%
highlight them for you so that you can
look<00:50:22.509><c> at</c><00:50:22.630><c> them</c><00:50:22.779><c> on</c><00:50:22.930><c> a</c><00:50:22.960><c> DC</c><00:50:23.380><c> TV</c><00:50:23.589><c> or</c><00:50:23.980><c> on</c><00:50:24.549><c> the</c><00:50:24.900><c> DVDs</c>

00:50:25.890 --> 00:50:25.900 align:start position:0%
look at them on a DC TV or on the DVDs
 

00:50:25.900 --> 00:50:28.799 align:start position:0%
look at them on a DC TV or on the DVDs
when<00:50:26.109><c> you</c><00:50:26.170><c> get</c><00:50:26.319><c> them</c><00:50:27.150><c> first</c><00:50:28.150><c> being</c><00:50:28.390><c> the</c><00:50:28.509><c> cocoa</c>

00:50:28.799 --> 00:50:28.809 align:start position:0%
when you get them first being the cocoa
 

00:50:28.809 --> 00:50:32.910 align:start position:0%
when you get them first being the cocoa
overview<00:50:30.059><c> that's</c><00:50:31.059><c> a</c><00:50:31.509><c> great</c><00:50:32.200><c> session</c><00:50:32.440><c> just</c><00:50:32.829><c> for</c>

00:50:32.910 --> 00:50:32.920 align:start position:0%
overview that's a great session just for
 

00:50:32.920 --> 00:50:34.410 align:start position:0%
overview that's a great session just for
those<00:50:33.249><c> of</c><00:50:33.309><c> you</c><00:50:33.460><c> who</c><00:50:33.519><c> haven't</c><00:50:33.759><c> gotten</c><00:50:34.180><c> started</c>

00:50:34.410 --> 00:50:34.420 align:start position:0%
those of you who haven't gotten started
 

00:50:34.420 --> 00:50:37.410 align:start position:0%
those of you who haven't gotten started
yet<00:50:34.569><c> with</c><00:50:34.749><c> cocoa</c><00:50:35.519><c> the</c><00:50:36.519><c> carbon</c><00:50:36.759><c> event</c><00:50:36.999><c> manager</c>

00:50:37.410 --> 00:50:37.420 align:start position:0%
yet with cocoa the carbon event manager
 

00:50:37.420 --> 00:50:40.079 align:start position:0%
yet with cocoa the carbon event manager
is<00:50:37.690><c> another</c><00:50:37.960><c> overview</c><00:50:38.410><c> session</c><00:50:38.759><c> for</c><00:50:39.759><c> carbon</c>

00:50:40.079 --> 00:50:40.089 align:start position:0%
is another overview session for carbon
 

00:50:40.089 --> 00:50:41.549 align:start position:0%
is another overview session for carbon
developers<00:50:40.569><c> we</c><00:50:40.779><c> really</c><00:50:41.049><c> encourage</c><00:50:41.170><c> you</c><00:50:41.529><c> to</c>

00:50:41.549 --> 00:50:41.559 align:start position:0%
developers we really encourage you to
 

00:50:41.559 --> 00:50:43.529 align:start position:0%
developers we really encourage you to
look<00:50:42.309><c> into</c><00:50:42.549><c> the</c><00:50:42.609><c> carbon</c><00:50:42.849><c> event</c><00:50:43.089><c> manager</c><00:50:43.420><c> it</c>

00:50:43.529 --> 00:50:43.539 align:start position:0%
look into the carbon event manager it
 

00:50:43.539 --> 00:50:45.690 align:start position:0%
look into the carbon event manager it
simplifies<00:50:44.079><c> your</c><00:50:44.109><c> code</c><00:50:44.559><c> and</c><00:50:44.859><c> gets</c><00:50:45.430><c> you</c><00:50:45.549><c> much</c>

00:50:45.690 --> 00:50:45.700 align:start position:0%
simplifies your code and gets you much
 

00:50:45.700 --> 00:50:47.989 align:start position:0%
simplifies your code and gets you much
better<00:50:45.849><c> performance</c><00:50:46.480><c> on</c><00:50:46.690><c> Mac</c><00:50:47.259><c> os10</c>

00:50:47.989 --> 00:50:47.999 align:start position:0%
better performance on Mac os10
 

00:50:47.999 --> 00:50:51.089 align:start position:0%
better performance on Mac os10
and<00:50:48.999><c> then</c><00:50:49.720><c> the</c><00:50:49.839><c> advanced</c><00:50:50.170><c> cocoa</c><00:50:50.650><c> topics</c>

00:50:51.089 --> 00:50:51.099 align:start position:0%
and then the advanced cocoa topics
 

00:50:51.099 --> 00:50:54.630 align:start position:0%
and then the advanced cocoa topics
session<00:50:51.630><c> which</c><00:50:52.630><c> we</c><00:50:52.779><c> had</c><00:50:52.989><c> yesterday</c><00:50:53.460><c> for</c><00:50:54.460><c> more</c>

00:50:54.630 --> 00:50:54.640 align:start position:0%
session which we had yesterday for more
 

00:50:54.640 --> 00:50:56.789 align:start position:0%
session which we had yesterday for more
information<00:50:55.059><c> about</c><00:50:55.150><c> the</c><00:50:55.390><c> run</c><00:50:55.569><c> loop</c><00:50:55.749><c> and</c><00:50:56.650><c> other</c>

00:50:56.789 --> 00:50:56.799 align:start position:0%
information about the run loop and other
 

00:50:56.799 --> 00:51:01.289 align:start position:0%
information about the run loop and other
things<00:50:57.039><c> that</c><00:50:57.160><c> Doug</c><00:50:57.309><c> mentioned</c><00:50:59.130><c> and</c><00:51:00.130><c> if</c><00:51:00.609><c> you're</c>

00:51:01.289 --> 00:51:01.299 align:start position:0%
things that Doug mentioned and if you're
 

00:51:01.299 --> 00:51:04.380 align:start position:0%
things that Doug mentioned and if you're
here<00:51:02.049><c> this</c><00:51:02.170><c> afternoon</c><00:51:02.549><c> the</c><00:51:03.549><c> cocoa</c><00:51:03.999><c> feedback</c>

00:51:04.380 --> 00:51:04.390 align:start position:0%
here this afternoon the cocoa feedback
 

00:51:04.390 --> 00:51:06.750 align:start position:0%
here this afternoon the cocoa feedback
forum<00:51:04.720><c> would</c><00:51:05.170><c> be</c><00:51:05.319><c> a</c><00:51:05.349><c> great</c><00:51:05.529><c> place</c><00:51:05.739><c> to</c>

00:51:06.750 --> 00:51:06.760 align:start position:0%
forum would be a great place to
 

00:51:06.760 --> 00:51:09.750 align:start position:0%
forum would be a great place to
bring<00:51:06.850><c> your</c><00:51:07.000><c> questions</c><00:51:07.870><c> about</c><00:51:08.230><c> cocoa</c><00:51:08.800><c> and</c><00:51:09.070><c> of</c>

00:51:09.750 --> 00:51:09.760 align:start position:0%
bring your questions about cocoa and of
 

00:51:09.760 --> 00:51:11.970 align:start position:0%
bring your questions about cocoa and of
course<00:51:10.090><c> corefoundation</c><00:51:10.510><c> because</c><00:51:11.140><c> many</c><00:51:11.890><c> of</c>

00:51:11.970 --> 00:51:11.980 align:start position:0%
course corefoundation because many of
 

00:51:11.980 --> 00:51:22.530 align:start position:0%
course corefoundation because many of
the<00:51:12.100><c> same</c><00:51:12.640><c> people</c><00:51:12.820><c> will</c><00:51:13.060><c> be</c><00:51:13.150><c> there</c>

00:51:22.530 --> 00:51:22.540 align:start position:0%
 
 

00:51:22.540 --> 00:51:24.600 align:start position:0%
 
you

