WEBVTT
Kind: captions
Language: en

00:00:04.100 --> 00:00:11.230 align:start position:0%
 
I<00:00:07.149><c> will</c><00:00:08.149><c> not</c><00:00:08.240><c> waste</c><00:00:08.360><c> any</c><00:00:08.510><c> time</c><00:00:09.610><c> so</c><00:00:10.610><c> the</c><00:00:10.969><c> goal</c><00:00:11.120><c> of</c>

00:00:11.230 --> 00:00:11.240 align:start position:0%
I will not waste any time so the goal of
 

00:00:11.240 --> 00:00:13.570 align:start position:0%
I will not waste any time so the goal of
this<00:00:11.330><c> session</c><00:00:11.510><c> is</c><00:00:11.900><c> to</c><00:00:12.410><c> get</c><00:00:12.559><c> the</c><00:00:13.369><c> best</c>

00:00:13.570 --> 00:00:13.580 align:start position:0%
this session is to get the best
 

00:00:13.580 --> 00:00:15.400 align:start position:0%
this session is to get the best
performance<00:00:13.730><c> out</c><00:00:14.119><c> of</c><00:00:14.180><c> your</c><00:00:14.299><c> java</c><00:00:14.779><c> application</c>

00:00:15.400 --> 00:00:15.410 align:start position:0%
performance out of your java application
 

00:00:15.410 --> 00:00:17.830 align:start position:0%
performance out of your java application
on<00:00:15.590><c> Mac</c><00:00:15.799><c> OS</c><00:00:16.010><c> 10</c><00:00:16.210><c> whether</c><00:00:17.210><c> you're</c><00:00:17.420><c> writing</c><00:00:17.720><c> a</c>

00:00:17.830 --> 00:00:17.840 align:start position:0%
on Mac OS 10 whether you're writing a
 

00:00:17.840 --> 00:00:19.300 align:start position:0%
on Mac OS 10 whether you're writing a
new<00:00:17.960><c> one</c><00:00:18.170><c> or</c><00:00:18.410><c> whether</c><00:00:18.619><c> you</c><00:00:18.770><c> already</c><00:00:19.010><c> have</c><00:00:19.130><c> one</c>

00:00:19.300 --> 00:00:19.310 align:start position:0%
new one or whether you already have one
 

00:00:19.310 --> 00:00:21.280 align:start position:0%
new one or whether you already have one
that<00:00:19.460><c> you're</c><00:00:19.550><c> porting</c><00:00:19.789><c> for</c><00:00:19.970><c> a</c><00:00:20.000><c> Mac</c><00:00:20.150><c> OS</c><00:00:20.360><c> 9</c><00:00:20.960><c> or</c>

00:00:21.280 --> 00:00:21.290 align:start position:0%
that you're porting for a Mac OS 9 or
 

00:00:21.290 --> 00:00:24.520 align:start position:0%
that you're porting for a Mac OS 9 or
some<00:00:21.530><c> other</c><00:00:21.910><c> platform</c><00:00:22.910><c> so</c><00:00:23.750><c> what</c><00:00:23.930><c> we'll</c><00:00:24.080><c> cover</c>

00:00:24.520 --> 00:00:24.530 align:start position:0%
some other platform so what we'll cover
 

00:00:24.530 --> 00:00:27.609 align:start position:0%
some other platform so what we'll cover
in<00:00:24.680><c> this</c><00:00:24.890><c> session</c><00:00:25.100><c> is</c><00:00:26.289><c> try</c><00:00:27.289><c> and</c><00:00:27.380><c> give</c><00:00:27.470><c> you</c><00:00:27.500><c> an</c>

00:00:27.609 --> 00:00:27.619 align:start position:0%
in this session is try and give you an
 

00:00:27.619 --> 00:00:30.220 align:start position:0%
in this session is try and give you an
understanding<00:00:27.740><c> of</c><00:00:28.310><c> the</c><00:00:29.080><c> characteristics</c><00:00:30.080><c> of</c>

00:00:30.220 --> 00:00:30.230 align:start position:0%
understanding of the characteristics of
 

00:00:30.230 --> 00:00:35.380 align:start position:0%
understanding of the characteristics of
the<00:00:30.350><c> Mac</c><00:00:30.500><c> OS</c><00:00:30.710><c> 10</c><00:00:30.740><c> Java</c><00:00:31.300><c> performance</c><00:00:34.390><c> some</c>

00:00:35.380 --> 00:00:35.390 align:start position:0%
the Mac OS 10 Java performance some
 

00:00:35.390 --> 00:00:37.090 align:start position:0%
the Mac OS 10 Java performance some
techniques<00:00:35.750><c> and</c><00:00:35.960><c> patents</c><00:00:36.289><c> you</c><00:00:36.409><c> can</c><00:00:36.589><c> use</c><00:00:36.829><c> in</c>

00:00:37.090 --> 00:00:37.100 align:start position:0%
techniques and patents you can use in
 

00:00:37.100 --> 00:00:38.709 align:start position:0%
techniques and patents you can use in
your<00:00:37.129><c> code</c><00:00:37.519><c> to</c><00:00:37.969><c> try</c><00:00:38.149><c> and</c><00:00:38.269><c> get</c><00:00:38.359><c> optimal</c>

00:00:38.709 --> 00:00:38.719 align:start position:0%
your code to try and get optimal
 

00:00:38.719 --> 00:00:42.399 align:start position:0%
your code to try and get optimal
performance<00:00:38.839><c> on</c><00:00:39.469><c> 10</c><00:00:40.989><c> point</c><00:00:41.989><c> out</c><00:00:42.140><c> why</c>

00:00:42.399 --> 00:00:42.409 align:start position:0%
performance on 10 point out why
 

00:00:42.409 --> 00:00:44.290 align:start position:0%
performance on 10 point out why
measurement<00:00:43.010><c> is</c><00:00:43.159><c> critically</c><00:00:43.729><c> important</c>

00:00:44.290 --> 00:00:44.300 align:start position:0%
measurement is critically important
 

00:00:44.300 --> 00:00:46.139 align:start position:0%
measurement is critically important
important<00:00:44.899><c> whenever</c><00:00:45.409><c> you're</c><00:00:45.589><c> trying</c><00:00:45.890><c> to</c><00:00:45.979><c> do</c>

00:00:46.139 --> 00:00:46.149 align:start position:0%
important whenever you're trying to do
 

00:00:46.149 --> 00:00:49.450 align:start position:0%
important whenever you're trying to do
optimization<00:00:47.149><c> and</c><00:00:47.710><c> then</c><00:00:48.710><c> lastly</c><00:00:49.129><c> we'll</c><00:00:49.339><c> have</c>

00:00:49.450 --> 00:00:49.460 align:start position:0%
optimization and then lastly we'll have
 

00:00:49.460 --> 00:00:50.829 align:start position:0%
optimization and then lastly we'll have
a<00:00:49.489><c> demonstration</c><00:00:50.030><c> of</c><00:00:50.239><c> some</c><00:00:50.269><c> performance</c>

00:00:50.829 --> 00:00:50.839 align:start position:0%
a demonstration of some performance
 

00:00:50.839 --> 00:00:53.529 align:start position:0%
a demonstration of some performance
analysis<00:00:51.350><c> to</c><00:00:52.129><c> give</c><00:00:52.999><c> you</c><00:00:53.059><c> an</c><00:00:53.120><c> idea</c><00:00:53.210><c> of</c><00:00:53.389><c> what</c>

00:00:53.529 --> 00:00:53.539 align:start position:0%
analysis to give you an idea of what
 

00:00:53.539 --> 00:00:54.969 align:start position:0%
analysis to give you an idea of what
sort<00:00:53.690><c> of</c><00:00:53.780><c> tools</c><00:00:53.960><c> will</c><00:00:54.229><c> be</c><00:00:54.350><c> available</c><00:00:54.710><c> on</c><00:00:54.859><c> Mac</c>

00:00:54.969 --> 00:00:54.979 align:start position:0%
sort of tools will be available on Mac
 

00:00:54.979 --> 00:01:00.009 align:start position:0%
sort of tools will be available on Mac
OS<00:00:55.219><c> 10</c><00:00:56.920><c> so</c><00:00:57.920><c> without</c><00:00:58.159><c> further</c><00:00:58.719><c> rammus</c><00:00:59.719><c> i'll</c>

00:01:00.009 --> 00:01:00.019 align:start position:0%
OS 10 so without further rammus i'll
 

00:01:00.019 --> 00:01:01.599 align:start position:0%
OS 10 so without further rammus i'll
introduce<00:01:00.379><c> even</c><00:01:00.739><c> possible</c>

00:01:01.599 --> 00:01:01.609 align:start position:0%
introduce even possible
 

00:01:01.609 --> 00:01:04.390 align:start position:0%
introduce even possible
from<00:01:02.149><c> the</c><00:01:02.299><c> java</c><00:01:03.079><c> vm</c><00:01:03.260><c> team</c><00:01:03.559><c> he's</c><00:01:03.859><c> our</c><00:01:04.010><c> tech</c><00:01:04.159><c> lead</c>

00:01:04.390 --> 00:01:04.400 align:start position:0%
from the java vm team he's our tech lead
 

00:01:04.400 --> 00:01:06.430 align:start position:0%
from the java vm team he's our tech lead
thank<00:01:05.150><c> you</c>

00:01:06.430 --> 00:01:06.440 align:start position:0%
thank you
 

00:01:06.440 --> 00:01:11.010 align:start position:0%
thank you
[Applause]

00:01:11.010 --> 00:01:11.020 align:start position:0%
[Applause]
 

00:01:11.020 --> 00:01:14.380 align:start position:0%
[Applause]
well<00:01:12.020><c> what</c><00:01:12.259><c> I</c><00:01:12.500><c> wanted</c><00:01:12.920><c> to</c><00:01:13.070><c> question</c><00:01:13.939><c> first</c>

00:01:14.380 --> 00:01:14.390 align:start position:0%
well what I wanted to question first
 

00:01:14.390 --> 00:01:17.050 align:start position:0%
well what I wanted to question first
said<00:01:14.630><c> what</c><00:01:14.990><c> are</c><00:01:15.170><c> the</c><00:01:15.860><c> Java</c><00:01:16.369><c> performance</c>

00:01:17.050 --> 00:01:17.060 align:start position:0%
said what are the Java performance
 

00:01:17.060 --> 00:01:20.740 align:start position:0%
said what are the Java performance
factors<00:01:17.869><c> well</c><00:01:18.649><c> first</c><00:01:19.310><c> of</c><00:01:19.490><c> all</c><00:01:19.579><c> it's</c><00:01:20.000><c> your</c>

00:01:20.740 --> 00:01:20.750 align:start position:0%
factors well first of all it's your
 

00:01:20.750 --> 00:01:23.410 align:start position:0%
factors well first of all it's your
application<00:01:21.380><c> design</c><00:01:21.710><c> and</c><00:01:21.890><c> implementation</c><00:01:22.430><c> if</c>

00:01:23.410 --> 00:01:23.420 align:start position:0%
application design and implementation if
 

00:01:23.420 --> 00:01:26.740 align:start position:0%
application design and implementation if
you<00:01:24.140><c> have</c><00:01:24.609><c> algorithms</c><00:01:25.609><c> that</c><00:01:26.030><c> don't</c><00:01:26.240><c> scale</c><00:01:26.539><c> to</c>

00:01:26.740 --> 00:01:26.750 align:start position:0%
you have algorithms that don't scale to
 

00:01:26.750 --> 00:01:29.980 align:start position:0%
you have algorithms that don't scale to
your<00:01:26.840><c> problem</c><00:01:27.259><c> set</c><00:01:27.530><c> there</c><00:01:27.829><c> is</c><00:01:27.920><c> no</c><00:01:28.990><c> performance</c>

00:01:29.980 --> 00:01:29.990 align:start position:0%
your problem set there is no performance
 

00:01:29.990 --> 00:01:32.590 align:start position:0%
your problem set there is no performance
tuning<00:01:30.200><c> we</c><00:01:30.409><c> can</c><00:01:30.530><c> do</c><00:01:30.649><c> in</c><00:01:30.799><c> the</c><00:01:30.890><c> VM</c><00:01:31.189><c> at</c><00:01:31.520><c> any</c><00:01:32.329><c> rate</c>

00:01:32.590 --> 00:01:32.600 align:start position:0%
tuning we can do in the VM at any rate
 

00:01:32.600 --> 00:01:35.440 align:start position:0%
tuning we can do in the VM at any rate
that<00:01:32.899><c> will</c><00:01:33.020><c> improve</c><00:01:33.320><c> your</c><00:01:33.530><c> app</c><00:01:33.880><c> so</c><00:01:34.880><c> you</c><00:01:35.329><c> have</c>

00:01:35.440 --> 00:01:35.450 align:start position:0%
that will improve your app so you have
 

00:01:35.450 --> 00:01:36.550 align:start position:0%
that will improve your app so you have
to<00:01:35.539><c> make</c><00:01:35.689><c> sure</c><00:01:35.719><c> that</c><00:01:35.990><c> you</c><00:01:36.079><c> don't</c><00:01:36.200><c> have</c><00:01:36.409><c> n</c>

00:01:36.550 --> 00:01:36.560 align:start position:0%
to make sure that you don't have n
 

00:01:36.560 --> 00:01:38.169 align:start position:0%
to make sure that you don't have n
square<00:01:36.740><c> algorithms</c><00:01:37.460><c> or</c><00:01:37.640><c> anything</c><00:01:37.850><c> like</c><00:01:38.119><c> that</c>

00:01:38.169 --> 00:01:38.179 align:start position:0%
square algorithms or anything like that
 

00:01:38.179 --> 00:01:38.919 align:start position:0%
square algorithms or anything like that
in<00:01:38.570><c> there</c>

00:01:38.919 --> 00:01:38.929 align:start position:0%
in there
 

00:01:38.929 --> 00:01:41.410 align:start position:0%
in there
the<00:01:39.770><c> second</c><00:01:40.159><c> factor</c><00:01:40.549><c> is</c><00:01:40.579><c> the</c><00:01:40.939><c> amount</c><00:01:41.329><c> of</c>

00:01:41.410 --> 00:01:41.420 align:start position:0%
the second factor is the amount of
 

00:01:41.420 --> 00:01:46.419 align:start position:0%
the second factor is the amount of
memory<00:01:41.719><c> your</c><00:01:42.700><c> application</c><00:01:43.700><c> is</c><00:01:43.969><c> consuming</c><00:01:45.429><c> the</c>

00:01:46.419 --> 00:01:46.429 align:start position:0%
memory your application is consuming the
 

00:01:46.429 --> 00:01:48.760 align:start position:0%
memory your application is consuming the
more<00:01:46.640><c> memory</c><00:01:46.909><c> you</c><00:01:46.969><c> can</c><00:01:47.240><c> the</c><00:01:47.719><c> more</c><00:01:48.409><c> memory</c><00:01:48.710><c> you</c>

00:01:48.760 --> 00:01:48.770 align:start position:0%
more memory you can the more memory you
 

00:01:48.770 --> 00:01:50.499 align:start position:0%
more memory you can the more memory you
use<00:01:49.159><c> the</c><00:01:49.520><c> more</c><00:01:49.700><c> likely</c><00:01:50.060><c> you</c><00:01:50.149><c> are</c><00:01:50.210><c> to</c><00:01:50.270><c> be</c>

00:01:50.499 --> 00:01:50.509 align:start position:0%
use the more likely you are to be
 

00:01:50.509 --> 00:01:53.440 align:start position:0%
use the more likely you are to be
swapping<00:01:50.869><c> out</c><00:01:51.109><c> to</c><00:01:51.320><c> be</c><00:01:51.439><c> paging</c><00:01:52.270><c> the</c><00:01:53.270><c> more</c>

00:01:53.440 --> 00:01:53.450 align:start position:0%
swapping out to be paging the more
 

00:01:53.450 --> 00:01:55.749 align:start position:0%
swapping out to be paging the more
stress<00:01:53.780><c> you're</c><00:01:53.990><c> putting</c><00:01:54.289><c> on</c><00:01:54.409><c> the</c><00:01:54.560><c> VM</c><00:01:55.310><c> memory</c>

00:01:55.749 --> 00:01:55.759 align:start position:0%
stress you're putting on the VM memory
 

00:01:55.759 --> 00:01:58.480 align:start position:0%
stress you're putting on the VM memory
subsystem<00:01:56.060><c> and</c><00:01:56.710><c> the</c><00:01:57.710><c> less</c><00:01:57.890><c> likely</c><00:01:58.310><c> are</c>

00:01:58.480 --> 00:01:58.490 align:start position:0%
subsystem and the less likely are
 

00:01:58.490 --> 00:02:01.179 align:start position:0%
subsystem and the less likely are
benefiting<00:01:59.090><c> from</c><00:01:59.119><c> caches</c><00:01:59.899><c> data</c><00:02:00.679><c> cache</c><00:02:00.950><c> and</c>

00:02:01.179 --> 00:02:01.189 align:start position:0%
benefiting from caches data cache and
 

00:02:01.189 --> 00:02:04.359 align:start position:0%
benefiting from caches data cache and
instruction<00:02:01.700><c> cache</c><00:02:02.259><c> then</c><00:02:03.259><c> the</c><00:02:03.649><c> next</c><00:02:03.979><c> factor</c>

00:02:04.359 --> 00:02:04.369 align:start position:0%
instruction cache then the next factor
 

00:02:04.369 --> 00:02:06.849 align:start position:0%
instruction cache then the next factor
down<00:02:04.490><c> is</c><00:02:04.789><c> bytecode</c><00:02:05.749><c> execution</c><00:02:06.350><c> performance</c>

00:02:06.849 --> 00:02:06.859 align:start position:0%
down is bytecode execution performance
 

00:02:06.859 --> 00:02:09.460 align:start position:0%
down is bytecode execution performance
it<00:02:07.069><c> is</c><00:02:07.369><c> at</c><00:02:07.579><c> what</c><00:02:08.149><c> speed</c><00:02:08.300><c> does</c><00:02:08.750><c> the</c><00:02:08.869><c> job</c><00:02:09.050><c> of</c><00:02:09.229><c> VM</c>

00:02:09.460 --> 00:02:09.470 align:start position:0%
it is at what speed does the job of VM
 

00:02:09.470 --> 00:02:13.060 align:start position:0%
it is at what speed does the job of VM
execute<00:02:10.190><c> your</c><00:02:10.460><c> Java</c><00:02:10.729><c> code</c><00:02:11.020><c> Jim</c><00:02:12.020><c> we'll</c><00:02:12.320><c> talk</c>

00:02:13.060 --> 00:02:13.070 align:start position:0%
execute your Java code Jim we'll talk
 

00:02:13.070 --> 00:02:15.949 align:start position:0%
execute your Java code Jim we'll talk
about<00:02:13.250><c> tips</c><00:02:13.850><c> and</c><00:02:14.000><c> tricks</c><00:02:14.360><c> do's</c><00:02:14.720><c> and</c><00:02:14.750><c> don'ts</c>

00:02:15.949 --> 00:02:15.959 align:start position:0%
about tips and tricks do's and don'ts
 

00:02:15.959 --> 00:02:19.070 align:start position:0%
about tips and tricks do's and don'ts
in<00:02:16.290><c> the</c><00:02:16.440><c> in</c><00:02:16.709><c> the</c><00:02:16.860><c> second</c><00:02:17.220><c> part</c><00:02:17.430><c> of</c><00:02:17.610><c> his</c><00:02:17.730><c> talk</c><00:02:18.080><c> on</c>

00:02:19.070 --> 00:02:19.080 align:start position:0%
in the in the second part of his talk on
 

00:02:19.080 --> 00:02:21.830 align:start position:0%
in the in the second part of his talk on
what<00:02:19.650><c> you</c><00:02:19.739><c> can</c><00:02:19.890><c> do</c><00:02:20.040><c> in</c><00:02:20.310><c> this</c><00:02:20.760><c> area</c><00:02:21.120><c> I</c><00:02:21.330><c> will</c>

00:02:21.830 --> 00:02:21.840 align:start position:0%
what you can do in this area I will
 

00:02:21.840 --> 00:02:24.580 align:start position:0%
what you can do in this area I will
concentrate<00:02:22.290><c> more</c><00:02:22.709><c> in</c><00:02:22.860><c> Java</c><00:02:23.069><c> VM</c><00:02:23.310><c> efficiency</c>

00:02:24.580 --> 00:02:24.590 align:start position:0%
concentrate more in Java VM efficiency
 

00:02:24.590 --> 00:02:27.289 align:start position:0%
concentrate more in Java VM efficiency
in<00:02:25.590><c> the</c><00:02:25.739><c> first</c><00:02:25.950><c> part</c><00:02:26.220><c> of</c><00:02:26.280><c> this</c><00:02:26.400><c> talk</c><00:02:26.700><c> there</c><00:02:27.180><c> are</c>

00:02:27.289 --> 00:02:27.299 align:start position:0%
in the first part of this talk there are
 

00:02:27.299 --> 00:02:29.119 align:start position:0%
in the first part of this talk there are
two<00:02:27.480><c> other</c><00:02:27.629><c> factors</c><00:02:27.750><c> that</c><00:02:28.230><c> influence</c><00:02:28.860><c> Java</c>

00:02:29.119 --> 00:02:29.129 align:start position:0%
two other factors that influence Java
 

00:02:29.129 --> 00:02:31.759 align:start position:0%
two other factors that influence Java
performance<00:02:29.790><c> one</c><00:02:30.480><c> is</c><00:02:30.659><c> the</c><00:02:30.989><c> speed</c><00:02:31.260><c> of</c><00:02:31.500><c> the</c>

00:02:31.759 --> 00:02:31.769 align:start position:0%
performance one is the speed of the
 

00:02:31.769 --> 00:02:35.000 align:start position:0%
performance one is the speed of the
underlying<00:02:32.190><c> OS</c><00:02:32.690><c> we</c><00:02:33.690><c> cannot</c><00:02:34.019><c> entry</c><00:02:34.319><c> we</c><00:02:34.680><c> are</c><00:02:34.829><c> not</c>

00:02:35.000 --> 00:02:35.010 align:start position:0%
underlying OS we cannot entry we are not
 

00:02:35.010 --> 00:02:37.460 align:start position:0%
underlying OS we cannot entry we are not
touching<00:02:35.250><c> this</c><00:02:35.579><c> in</c><00:02:35.819><c> this</c><00:02:36.060><c> talk</c><00:02:36.329><c> and</c><00:02:36.629><c> then</c>

00:02:37.460 --> 00:02:37.470 align:start position:0%
touching this in this talk and then
 

00:02:37.470 --> 00:02:39.410 align:start position:0%
touching this in this talk and then
there<00:02:37.620><c> is</c><00:02:37.709><c> all</c><00:02:37.890><c> obviously</c><00:02:38.519><c> the</c><00:02:38.640><c> speed</c><00:02:38.819><c> of</c><00:02:39.239><c> the</c>

00:02:39.410 --> 00:02:39.420 align:start position:0%
there is all obviously the speed of the
 

00:02:39.420 --> 00:02:41.020 align:start position:0%
there is all obviously the speed of the
harder<00:02:39.750><c> you're</c><00:02:40.170><c> running</c><00:02:40.440><c> on</c>

00:02:41.020 --> 00:02:41.030 align:start position:0%
harder you're running on
 

00:02:41.030 --> 00:02:44.360 align:start position:0%
harder you're running on
so<00:02:42.030><c> let's</c><00:02:42.569><c> look</c><00:02:42.720><c> what</c><00:02:42.959><c> let's</c><00:02:43.920><c> look</c><00:02:44.099><c> at</c><00:02:44.220><c> what</c>

00:02:44.360 --> 00:02:44.370 align:start position:0%
so let's look what let's look at what
 

00:02:44.370 --> 00:02:48.220 align:start position:0%
so let's look what let's look at what
Java<00:02:44.700><c> VM</c><00:02:44.970><c> efficiency</c><00:02:45.690><c> means</c><00:02:45.930><c> there</c><00:02:46.829><c> are</c><00:02:47.090><c> two</c>

00:02:48.220 --> 00:02:48.230 align:start position:0%
Java VM efficiency means there are two
 

00:02:48.230 --> 00:02:53.180 align:start position:0%
Java VM efficiency means there are two
most<00:02:49.230><c> cited</c><00:02:50.299><c> most</c><00:02:51.299><c> cited</c><00:02:51.750><c> issues</c><00:02:52.200><c> that</c>

00:02:53.180 --> 00:02:53.190 align:start position:0%
most cited most cited issues that
 

00:02:53.190 --> 00:02:56.509 align:start position:0%
most cited most cited issues that
influence<00:02:53.609><c> job</c><00:02:54.470><c> performance</c><00:02:55.470><c> at</c><00:02:55.680><c> runtime</c><00:02:55.890><c> one</c>

00:02:56.509 --> 00:02:56.519 align:start position:0%
influence job performance at runtime one
 

00:02:56.519 --> 00:02:59.150 align:start position:0%
influence job performance at runtime one
of<00:02:56.670><c> them</c><00:02:56.790><c> is</c><00:02:57.030><c> memory</c><00:02:57.629><c> management</c><00:02:58.170><c> there</c><00:02:59.129><c> is</c>

00:02:59.150 --> 00:02:59.160 align:start position:0%
of them is memory management there is
 

00:02:59.160 --> 00:03:01.160 align:start position:0%
of them is memory management there is
the<00:02:59.400><c> footprint</c><00:02:59.910><c> of</c><00:03:00.030><c> your</c><00:03:00.180><c> application</c><00:03:00.870><c> the</c>

00:03:01.160 --> 00:03:01.170 align:start position:0%
the footprint of your application the
 

00:03:01.170 --> 00:03:03.020 align:start position:0%
the footprint of your application the
footprint<00:03:01.590><c> of</c><00:03:01.650><c> your</c><00:03:01.829><c> java</c><00:03:02.250><c> process</c><00:03:02.790><c> running</c>

00:03:03.020 --> 00:03:03.030 align:start position:0%
footprint of your java process running
 

00:03:03.030 --> 00:03:06.440 align:start position:0%
footprint of your java process running
that<00:03:03.840><c> includes</c><00:03:04.200><c> your</c><00:03:04.709><c> Java</c><00:03:05.010><c> heap</c><00:03:05.310><c> once</c><00:03:05.790><c> that</c>

00:03:06.440 --> 00:03:06.450 align:start position:0%
that includes your Java heap once that
 

00:03:06.450 --> 00:03:08.660 align:start position:0%
that includes your Java heap once that
includes<00:03:06.840><c> all</c><00:03:07.109><c> the</c><00:03:07.140><c> supporting</c><00:03:07.799><c> java</c><00:03:08.370><c> vm</c>

00:03:08.660 --> 00:03:08.670 align:start position:0%
includes all the supporting java vm
 

00:03:08.670 --> 00:03:11.270 align:start position:0%
includes all the supporting java vm
memory<00:03:09.629><c> structures</c><00:03:10.409><c> we</c><00:03:10.620><c> are</c><00:03:10.650><c> actually</c><00:03:10.799><c> using</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
memory structures we are actually using
 

00:03:11.280 --> 00:03:13.399 align:start position:0%
memory structures we are actually using
the<00:03:11.370><c> Java</c><00:03:11.579><c> heap</c><00:03:11.849><c> for</c><00:03:12.060><c> that</c><00:03:12.209><c> as</c><00:03:12.390><c> well</c><00:03:12.569><c> it</c>

00:03:13.399 --> 00:03:13.409 align:start position:0%
the Java heap for that as well it
 

00:03:13.409 --> 00:03:18.440 align:start position:0%
the Java heap for that as well it
includes<00:03:15.079><c> parts</c><00:03:16.079><c> for</c><00:03:16.620><c> the</c><00:03:16.739><c> OS</c><00:03:17.069><c> parts</c><00:03:17.730><c> for</c><00:03:18.329><c> the</c>

00:03:18.440 --> 00:03:18.450 align:start position:0%
includes parts for the OS parts for the
 

00:03:18.450 --> 00:03:22.759 align:start position:0%
includes parts for the OS parts for the
code<00:03:18.659><c> for</c><00:03:18.930><c> the</c><00:03:19.049><c> VM</c><00:03:19.319><c> and</c><00:03:19.530><c> so</c><00:03:19.650><c> on</c><00:03:20.840><c> then</c><00:03:21.840><c> second</c><00:03:22.590><c> is</c>

00:03:22.759 --> 00:03:22.769 align:start position:0%
code for the VM and so on then second is
 

00:03:22.769 --> 00:03:25.789 align:start position:0%
code for the VM and so on then second is
the<00:03:23.609><c> speed</c><00:03:24.060><c> of</c><00:03:24.359><c> allocation</c><00:03:25.200><c> Java</c><00:03:25.590><c> is</c><00:03:25.739><c> very</c>

00:03:25.789 --> 00:03:25.799 align:start position:0%
the speed of allocation Java is very
 

00:03:25.799 --> 00:03:27.559 align:start position:0%
the speed of allocation Java is very
object<00:03:26.160><c> heavy</c><00:03:26.549><c> you</c><00:03:26.760><c> allocate</c><00:03:27.209><c> a</c><00:03:27.269><c> lot</c><00:03:27.480><c> of</c>

00:03:27.559 --> 00:03:27.569 align:start position:0%
object heavy you allocate a lot of
 

00:03:27.569 --> 00:03:29.180 align:start position:0%
object heavy you allocate a lot of
temporary<00:03:27.930><c> objects</c><00:03:28.560><c> so</c><00:03:28.620><c> you</c><00:03:28.680><c> need</c><00:03:28.859><c> to</c><00:03:28.980><c> be</c><00:03:29.069><c> able</c>

00:03:29.180 --> 00:03:29.190 align:start position:0%
temporary objects so you need to be able
 

00:03:29.190 --> 00:03:30.789 align:start position:0%
temporary objects so you need to be able
to<00:03:29.340><c> allocate</c><00:03:29.819><c> those</c><00:03:29.910><c> objects</c><00:03:30.359><c> very</c><00:03:30.510><c> quickly</c>

00:03:30.789 --> 00:03:30.799 align:start position:0%
to allocate those objects very quickly
 

00:03:30.799 --> 00:03:34.009 align:start position:0%
to allocate those objects very quickly
well<00:03:31.799><c> to</c><00:03:32.549><c> keep</c><00:03:32.730><c> your</c><00:03:32.760><c> footprint</c><00:03:33.389><c> down</c><00:03:33.540><c> if</c><00:03:33.900><c> you</c>

00:03:34.009 --> 00:03:34.019 align:start position:0%
well to keep your footprint down if you
 

00:03:34.019 --> 00:03:36.500 align:start position:0%
well to keep your footprint down if you
just<00:03:34.260><c> allocate</c><00:03:35.129><c> very</c><00:03:35.340><c> quickly</c><00:03:35.639><c> and</c><00:03:35.970><c> never</c>

00:03:36.500 --> 00:03:36.510 align:start position:0%
just allocate very quickly and never
 

00:03:36.510 --> 00:03:38.659 align:start position:0%
just allocate very quickly and never
reclaim<00:03:37.019><c> you</c><00:03:37.620><c> would</c><00:03:37.769><c> grow</c><00:03:38.310><c> your</c><00:03:38.489><c> foot</c>

00:03:38.659 --> 00:03:38.669 align:start position:0%
reclaim you would grow your foot
 

00:03:38.669 --> 00:03:40.460 align:start position:0%
reclaim you would grow your foot
footprint<00:03:39.180><c> to</c><00:03:39.299><c> infinity</c><00:03:39.750><c> so</c><00:03:40.079><c> that's</c><00:03:40.290><c> why</c><00:03:40.410><c> you</c>

00:03:40.460 --> 00:03:40.470 align:start position:0%
footprint to infinity so that's why you
 

00:03:40.470 --> 00:03:42.229 align:start position:0%
footprint to infinity so that's why you
have<00:03:40.680><c> to</c><00:03:40.799><c> reclaim</c><00:03:41.129><c> very</c><00:03:41.430><c> efficiently</c><00:03:41.910><c> as</c><00:03:42.060><c> well</c>

00:03:42.229 --> 00:03:42.239 align:start position:0%
have to reclaim very efficiently as well
 

00:03:42.239 --> 00:03:45.289 align:start position:0%
have to reclaim very efficiently as well
I<00:03:42.419><c> will</c><00:03:42.829><c> touch</c><00:03:43.829><c> briefly</c><00:03:44.129><c> on</c><00:03:44.340><c> what</c><00:03:44.609><c> what</c><00:03:45.060><c> we</c><00:03:45.180><c> do</c>

00:03:45.289 --> 00:03:45.299 align:start position:0%
I will touch briefly on what what we do
 

00:03:45.299 --> 00:03:48.140 align:start position:0%
I will touch briefly on what what we do
there<00:03:45.540><c> or</c><00:03:45.780><c> how</c><00:03:46.769><c> you</c><00:03:46.829><c> can</c><00:03:47.040><c> actually</c><00:03:47.400><c> help</c><00:03:47.579><c> us</c><00:03:47.910><c> as</c>

00:03:48.140 --> 00:03:48.150 align:start position:0%
there or how you can actually help us as
 

00:03:48.150 --> 00:03:51.650 align:start position:0%
there or how you can actually help us as
Java<00:03:48.540><c> programmers</c><00:03:49.319><c> in</c><00:03:49.470><c> that</c><00:03:49.680><c> area</c><00:03:50.299><c> the</c><00:03:51.299><c> second</c>

00:03:51.650 --> 00:03:51.660 align:start position:0%
Java programmers in that area the second
 

00:03:51.660 --> 00:03:54.979 align:start position:0%
Java programmers in that area the second
part<00:03:51.900><c> is</c><00:03:52.699><c> synchronization</c><00:03:53.810><c> Java</c><00:03:54.810><c> has</c>

00:03:54.979 --> 00:03:54.989 align:start position:0%
part is synchronization Java has
 

00:03:54.989 --> 00:03:58.580 align:start position:0%
part is synchronization Java has
built-in<00:03:55.410><c> support</c><00:03:55.590><c> for</c><00:03:57.410><c> multi-threading</c><00:03:58.410><c> in</c>

00:03:58.580 --> 00:03:58.590 align:start position:0%
built-in support for multi-threading in
 

00:03:58.590 --> 00:04:03.110 align:start position:0%
built-in support for multi-threading in
the<00:03:58.829><c> language</c><00:03:59.870><c> what</c><00:04:00.870><c> to</c><00:04:01.799><c> make</c><00:04:01.949><c> that</c><00:04:02.129><c> viable</c>

00:04:03.110 --> 00:04:03.120 align:start position:0%
the language what to make that viable
 

00:04:03.120 --> 00:04:05.360 align:start position:0%
the language what to make that viable
use<00:04:03.359><c> we</c><00:04:04.230><c> actually</c><00:04:04.590><c> have</c><00:04:04.709><c> to</c><00:04:04.859><c> make</c><00:04:05.010><c> sure</c><00:04:05.190><c> that</c>

00:04:05.360 --> 00:04:05.370 align:start position:0%
use we actually have to make sure that
 

00:04:05.370 --> 00:04:07.309 align:start position:0%
use we actually have to make sure that
the<00:04:05.489><c> synchronization</c><00:04:06.180><c> primitives</c><00:04:06.870><c> are</c>

00:04:07.309 --> 00:04:07.319 align:start position:0%
the synchronization primitives are
 

00:04:07.319 --> 00:04:09.259 align:start position:0%
the synchronization primitives are
implemented<00:04:08.250><c> in</c><00:04:08.370><c> a</c><00:04:08.489><c> very</c><00:04:08.639><c> efficient</c><00:04:09.120><c> manner</c>

00:04:09.259 --> 00:04:09.269 align:start position:0%
implemented in a very efficient manner
 

00:04:09.269 --> 00:04:13.490 align:start position:0%
implemented in a very efficient manner
inside<00:04:09.840><c> the</c><00:04:09.989><c> VM</c><00:04:11.810><c> another</c><00:04:12.810><c> part</c><00:04:13.019><c> is</c><00:04:13.169><c> startup</c>

00:04:13.490 --> 00:04:13.500 align:start position:0%
inside the VM another part is startup
 

00:04:13.500 --> 00:04:16.939 align:start position:0%
inside the VM another part is startup
performance<00:04:14.389><c> there</c><00:04:15.389><c> must</c><00:04:15.720><c> be</c><00:04:15.900><c> hundreds</c><00:04:16.709><c> of</c>

00:04:16.939 --> 00:04:16.949 align:start position:0%
performance there must be hundreds of
 

00:04:16.949 --> 00:04:18.560 align:start position:0%
performance there must be hundreds of
Java<00:04:17.190><c> benchmarks</c><00:04:17.820><c> out</c><00:04:17.970><c> there</c><00:04:18.180><c> on</c><00:04:18.269><c> the</c><00:04:18.389><c> web</c>

00:04:18.560 --> 00:04:18.570 align:start position:0%
Java benchmarks out there on the web
 

00:04:18.570 --> 00:04:21.500 align:start position:0%
Java benchmarks out there on the web
small<00:04:19.109><c> and</c><00:04:19.349><c> big</c><00:04:19.560><c> and</c><00:04:19.979><c> some</c><00:04:20.430><c> useful</c><00:04:20.729><c> some</c><00:04:21.269><c> less</c>

00:04:21.500 --> 00:04:21.510 align:start position:0%
small and big and some useful some less
 

00:04:21.510 --> 00:04:23.930 align:start position:0%
small and big and some useful some less
but<00:04:22.470><c> I've</c><00:04:22.680><c> never</c><00:04:22.919><c> seen</c><00:04:23.190><c> one</c><00:04:23.430><c> that</c><00:04:23.460><c> actually</c>

00:04:23.930 --> 00:04:23.940 align:start position:0%
but I've never seen one that actually
 

00:04:23.940 --> 00:04:27.350 align:start position:0%
but I've never seen one that actually
measures<00:04:24.090><c> Java</c><00:04:24.659><c> startup</c><00:04:25.080><c> performance</c><00:04:26.360><c> you</c>

00:04:27.350 --> 00:04:27.360 align:start position:0%
measures Java startup performance you
 

00:04:27.360 --> 00:04:29.450 align:start position:0%
measures Java startup performance you
don't<00:04:27.539><c> want</c><00:04:27.690><c> your</c><00:04:28.140><c> application</c><00:04:28.320><c> to</c>

00:04:29.450 --> 00:04:29.460 align:start position:0%
don't want your application to
 

00:04:29.460 --> 00:04:30.770 align:start position:0%
don't want your application to
start<00:04:29.639><c> up</c><00:04:29.789><c> for</c><00:04:29.970><c> a</c><00:04:30.030><c> minute</c><00:04:30.360><c> or</c><00:04:30.509><c> two</c><00:04:30.539><c> minutes</c>

00:04:30.770 --> 00:04:30.780 align:start position:0%
start up for a minute or two minutes
 

00:04:30.780 --> 00:04:33.439 align:start position:0%
start up for a minute or two minutes
seeing<00:04:31.470><c> the</c><00:04:31.590><c> bouncing</c><00:04:31.949><c> icon</c><00:04:32.250><c> in</c><00:04:32.370><c> the</c><00:04:32.490><c> dock</c><00:04:32.639><c> so</c>

00:04:33.439 --> 00:04:33.449 align:start position:0%
seeing the bouncing icon in the dock so
 

00:04:33.449 --> 00:04:36.830 align:start position:0%
seeing the bouncing icon in the dock so
I<00:04:33.919><c> will</c><00:04:34.919><c> touch</c><00:04:35.130><c> some</c><00:04:35.430><c> of</c><00:04:35.460><c> the</c><00:04:35.699><c> issues</c><00:04:36.660><c> we</c><00:04:36.810><c> have</c>

00:04:36.830 --> 00:04:36.840 align:start position:0%
I will touch some of the issues we have
 

00:04:36.840 --> 00:04:40.570 align:start position:0%
I will touch some of the issues we have
done<00:04:37.229><c> to</c><00:04:37.590><c> address</c><00:04:37.860><c> that</c><00:04:38.039><c> issue</c><00:04:38.660><c> most</c><00:04:39.660><c> notably</c>

00:04:40.570 --> 00:04:40.580 align:start position:0%
done to address that issue most notably
 

00:04:40.580 --> 00:04:44.029 align:start position:0%
done to address that issue most notably
reducing<00:04:41.580><c> class</c><00:04:41.789><c> loading</c><00:04:42.530><c> class</c><00:04:43.530><c> loading</c><00:04:43.919><c> is</c>

00:04:44.029 --> 00:04:44.039 align:start position:0%
reducing class loading class loading is
 

00:04:44.039 --> 00:04:46.969 align:start position:0%
reducing class loading class loading is
about<00:04:44.280><c> 40%</c><00:04:45.060><c> of</c><00:04:45.210><c> your</c><00:04:45.360><c> start</c><00:04:45.720><c> Java</c><00:04:46.110><c> VM</c><00:04:46.349><c> startup</c>

00:04:46.969 --> 00:04:46.979 align:start position:0%
about 40% of your start Java VM startup
 

00:04:46.979 --> 00:04:50.870 align:start position:0%
about 40% of your start Java VM startup
and<00:04:47.720><c> I</c><00:04:48.720><c> will</c><00:04:48.990><c> touch</c><00:04:49.229><c> on</c><00:04:49.349><c> what</c><00:04:49.560><c> you</c><00:04:49.680><c> can</c><00:04:49.830><c> do</c><00:04:50.039><c> to</c>

00:04:50.870 --> 00:04:50.880 align:start position:0%
and I will touch on what you can do to
 

00:04:50.880 --> 00:04:54.909 align:start position:0%
and I will touch on what you can do to
prevent<00:04:51.470><c> or</c><00:04:52.470><c> actually</c><00:04:52.860><c> to</c><00:04:52.949><c> help</c><00:04:53.130><c> us</c><00:04:53.280><c> out</c><00:04:53.430><c> with</c>

00:04:54.909 --> 00:04:54.919 align:start position:0%
prevent or actually to help us out with
 

00:04:54.919 --> 00:04:57.230 align:start position:0%
prevent or actually to help us out with
startup<00:04:55.919><c> performance</c><00:04:56.069><c> so</c><00:04:56.669><c> let's</c><00:04:57.030><c> go</c><00:04:57.180><c> to</c>

00:04:57.230 --> 00:04:57.240 align:start position:0%
startup performance so let's go to
 

00:04:57.240 --> 00:05:00.529 align:start position:0%
startup performance so let's go to
memory<00:04:57.569><c> management</c><00:04:58.050><c> first</c><00:04:58.849><c> the</c><00:04:59.849><c> hotspot</c><00:05:00.270><c> VM</c>

00:05:00.529 --> 00:05:00.539 align:start position:0%
memory management first the hotspot VM
 

00:05:00.539 --> 00:05:03.439 align:start position:0%
memory management first the hotspot VM
that<00:05:00.569><c> we</c><00:05:00.900><c> ship</c><00:05:01.199><c> on</c><00:05:01.410><c> Mac</c><00:05:01.800><c> OS</c><00:05:02.070><c> 10</c><00:05:02.300><c> has</c><00:05:03.300><c> an</c>

00:05:03.439 --> 00:05:03.449 align:start position:0%
that we ship on Mac OS 10 has an
 

00:05:03.449 --> 00:05:05.270 align:start position:0%
that we ship on Mac OS 10 has an
accurate<00:05:03.900><c> compacting</c><00:05:04.800><c> generally</c>

00:05:05.270 --> 00:05:05.280 align:start position:0%
accurate compacting generally
 

00:05:05.280 --> 00:05:07.640 align:start position:0%
accurate compacting generally
generational<00:05:06.270><c> copying</c><00:05:06.810><c> garbage</c><00:05:06.840><c> collector</c>

00:05:07.640 --> 00:05:07.650 align:start position:0%
generational copying garbage collector
 

00:05:07.650 --> 00:05:09.830 align:start position:0%
generational copying garbage collector
what<00:05:08.280><c> do</c><00:05:08.400><c> those</c><00:05:08.520><c> buzzwords</c><00:05:08.880><c> mean</c><00:05:09.270><c> accurate</c>

00:05:09.830 --> 00:05:09.840 align:start position:0%
what do those buzzwords mean accurate
 

00:05:09.840 --> 00:05:12.529 align:start position:0%
what do those buzzwords mean accurate
means<00:05:10.110><c> we</c><00:05:10.650><c> know</c><00:05:10.770><c> at</c><00:05:10.919><c> all</c><00:05:10.949><c> times</c><00:05:11.190><c> where</c><00:05:11.910><c> in</c><00:05:12.449><c> the</c>

00:05:12.529 --> 00:05:12.539 align:start position:0%
means we know at all times where in the
 

00:05:12.539 --> 00:05:16.430 align:start position:0%
means we know at all times where in the
VM<00:05:12.810><c> you</c><00:05:12.960><c> have</c><00:05:13.080><c> references</c><00:05:13.680><c> to</c><00:05:13.860><c> your</c><00:05:14.070><c> object</c><00:05:15.440><c> we</c>

00:05:16.430 --> 00:05:16.440 align:start position:0%
VM you have references to your object we
 

00:05:16.440 --> 00:05:19.010 align:start position:0%
VM you have references to your object we
can<00:05:16.620><c> distinguish</c><00:05:17.190><c> between</c><00:05:17.490><c> real</c><00:05:18.389><c> references</c>

00:05:19.010 --> 00:05:19.020 align:start position:0%
can distinguish between real references
 

00:05:19.020 --> 00:05:21.379 align:start position:0%
can distinguish between real references
to<00:05:19.169><c> objects</c><00:05:19.620><c> and</c><00:05:19.860><c> just</c><00:05:20.460><c> memory</c><00:05:20.759><c> location</c><00:05:21.240><c> that</c>

00:05:21.379 --> 00:05:21.389 align:start position:0%
to objects and just memory location that
 

00:05:21.389 --> 00:05:23.920 align:start position:0%
to objects and just memory location that
look<00:05:21.630><c> like</c><00:05:21.840><c> references</c><00:05:22.500><c> to</c><00:05:22.650><c> objects</c>

00:05:23.920 --> 00:05:23.930 align:start position:0%
look like references to objects
 

00:05:23.930 --> 00:05:28.159 align:start position:0%
look like references to objects
compacting<00:05:24.930><c> is</c><00:05:25.139><c> also</c><00:05:26.060><c> means</c><00:05:27.060><c> that</c><00:05:27.210><c> we</c><00:05:27.449><c> compact</c>

00:05:28.159 --> 00:05:28.169 align:start position:0%
compacting is also means that we compact
 

00:05:28.169 --> 00:05:30.800 align:start position:0%
compacting is also means that we compact
the<00:05:28.349><c> heap</c><00:05:28.560><c> we</c><00:05:29.099><c> don't</c><00:05:29.280><c> leave</c><00:05:29.490><c> any</c><00:05:29.699><c> holes</c><00:05:30.000><c> in</c><00:05:30.300><c> the</c>

00:05:30.800 --> 00:05:30.810 align:start position:0%
the heap we don't leave any holes in the
 

00:05:30.810 --> 00:05:35.860 align:start position:0%
the heap we don't leave any holes in the
heap<00:05:31.190><c> meaning</c><00:05:32.990><c> all</c><00:05:33.990><c> the</c><00:05:34.320><c> memory</c><00:05:34.590><c> use</c><00:05:34.979><c> is</c>

00:05:35.860 --> 00:05:35.870 align:start position:0%
heap meaning all the memory use is
 

00:05:35.870 --> 00:05:40.070 align:start position:0%
heap meaning all the memory use is
basically<00:05:36.870><c> move</c><00:05:37.620><c> together</c><00:05:38.090><c> compacted</c><00:05:39.090><c> well</c>

00:05:40.070 --> 00:05:40.080 align:start position:0%
basically move together compacted well
 

00:05:40.080 --> 00:05:43.640 align:start position:0%
basically move together compacted well
as<00:05:40.289><c> it</c><00:05:40.530><c> says</c><00:05:40.770><c> and</c><00:05:41.720><c> that</c><00:05:42.720><c> improves</c><00:05:43.169><c> both</c><00:05:43.470><c> the</c>

00:05:43.640 --> 00:05:43.650 align:start position:0%
as it says and that improves both the
 

00:05:43.650 --> 00:05:48.370 align:start position:0%
as it says and that improves both the
footprint<00:05:44.280><c> and</c><00:05:44.460><c> the</c><00:05:45.120><c> locality</c><00:05:45.599><c> of</c><00:05:45.630><c> reference</c>

00:05:48.370 --> 00:05:48.380 align:start position:0%
 
 

00:05:48.380 --> 00:05:52.399 align:start position:0%
 
generational<00:05:49.380><c> copying</c><00:05:49.949><c> is</c><00:05:50.690><c> means</c><00:05:51.690><c> that</c><00:05:51.900><c> we</c>

00:05:52.399 --> 00:05:52.409 align:start position:0%
generational copying is means that we
 

00:05:52.409 --> 00:05:56.390 align:start position:0%
generational copying is means that we
allocate<00:05:53.449><c> objects</c><00:05:54.500><c> for</c><00:05:55.500><c> a</c><00:05:55.530><c> first</c><00:05:55.800><c> time</c><00:05:56.130><c> in</c><00:05:56.280><c> a</c>

00:05:56.390 --> 00:05:56.400 align:start position:0%
allocate objects for a first time in a
 

00:05:56.400 --> 00:05:58.999 align:start position:0%
allocate objects for a first time in a
in<00:05:56.669><c> a</c><00:05:56.820><c> new</c><00:05:56.969><c> generation</c><00:05:57.150><c> and</c><00:05:57.810><c> only</c><00:05:58.740><c> when</c><00:05:58.889><c> they</c>

00:05:58.999 --> 00:05:59.009 align:start position:0%
in a new generation and only when they
 

00:05:59.009 --> 00:06:00.950 align:start position:0%
in a new generation and only when they
survive<00:05:59.370><c> for</c><00:05:59.639><c> a</c><00:05:59.669><c> certain</c><00:05:59.969><c> amount</c><00:06:00.060><c> of</c><00:06:00.300><c> time</c><00:06:00.659><c> we</c>

00:06:00.950 --> 00:06:00.960 align:start position:0%
survive for a certain amount of time we
 

00:06:00.960 --> 00:06:02.839 align:start position:0%
survive for a certain amount of time we
actually<00:06:01.650><c> copy</c><00:06:02.009><c> them</c><00:06:02.250><c> into</c><00:06:02.400><c> an</c><00:06:02.580><c> older</c>

00:06:02.839 --> 00:06:02.849 align:start position:0%
actually copy them into an older
 

00:06:02.849 --> 00:06:05.810 align:start position:0%
actually copy them into an older
generation<00:06:03.120><c> which</c><00:06:04.080><c> we</c><00:06:04.400><c> handle</c><00:06:05.400><c> very</c><00:06:05.610><c> less</c>

00:06:05.810 --> 00:06:05.820 align:start position:0%
generation which we handle very less
 

00:06:05.820 --> 00:06:11.420 align:start position:0%
generation which we handle very less
we're<00:06:06.509><c> much</c><00:06:07.199><c> more</c><00:06:08.389><c> less</c><00:06:09.389><c> frequently</c><00:06:09.990><c> than</c><00:06:10.680><c> the</c>

00:06:11.420 --> 00:06:11.430 align:start position:0%
we're much more less frequently than the
 

00:06:11.430 --> 00:06:16.070 align:start position:0%
we're much more less frequently than the
Nuge<00:06:11.699><c> newly</c><00:06:12.539><c> allocated</c><00:06:12.690><c> objects</c><00:06:13.520><c> so</c><00:06:14.780><c> we</c><00:06:15.780><c> spend</c>

00:06:16.070 --> 00:06:16.080 align:start position:0%
Nuge newly allocated objects so we spend
 

00:06:16.080 --> 00:06:17.570 align:start position:0%
Nuge newly allocated objects so we spend
a<00:06:16.139><c> lot</c><00:06:16.259><c> of</c><00:06:16.289><c> cycles</c><00:06:16.830><c> on</c><00:06:16.979><c> newly</c><00:06:17.400><c> allocated</c>

00:06:17.570 --> 00:06:17.580 align:start position:0%
a lot of cycles on newly allocated
 

00:06:17.580 --> 00:06:19.189 align:start position:0%
a lot of cycles on newly allocated
objects<00:06:18.360><c> collecting</c><00:06:18.810><c> newly</c><00:06:19.080><c> allocated</c>

00:06:19.189 --> 00:06:19.199 align:start position:0%
objects collecting newly allocated
 

00:06:19.199 --> 00:06:22.189 align:start position:0%
objects collecting newly allocated
objects<00:06:20.009><c> for</c><00:06:20.460><c> all</c><00:06:20.580><c> their</c><00:06:20.789><c> objects</c><00:06:21.509><c> we</c><00:06:22.020><c> don't</c>

00:06:22.189 --> 00:06:22.199 align:start position:0%
objects for all their objects we don't
 

00:06:22.199 --> 00:06:24.980 align:start position:0%
objects for all their objects we don't
spend<00:06:22.409><c> that</c><00:06:22.620><c> time</c><00:06:22.849><c> so</c><00:06:23.849><c> there</c><00:06:24.090><c> is</c><00:06:24.210><c> one</c><00:06:24.750><c> thing</c>

00:06:24.980 --> 00:06:24.990 align:start position:0%
spend that time so there is one thing
 

00:06:24.990 --> 00:06:27.020 align:start position:0%
spend that time so there is one thing
lifetime<00:06:25.500><c> of</c><00:06:25.650><c> your</c><00:06:25.770><c> object</c><00:06:26.159><c> is</c><00:06:26.280><c> important</c><00:06:26.849><c> if</c>

00:06:27.020 --> 00:06:27.030 align:start position:0%
lifetime of your object is important if
 

00:06:27.030 --> 00:06:28.670 align:start position:0%
lifetime of your object is important if
you<00:06:27.419><c> have</c><00:06:27.449><c> objects</c><00:06:27.960><c> that</c><00:06:28.050><c> you're</c><00:06:28.289><c> not</c><00:06:28.440><c> going</c>

00:06:28.670 --> 00:06:28.680 align:start position:0%
you have objects that you're not going
 

00:06:28.680 --> 00:06:30.409 align:start position:0%
you have objects that you're not going
to<00:06:28.770><c> use</c><00:06:28.919><c> you</c><00:06:29.669><c> have</c><00:06:29.699><c> to</c><00:06:29.849><c> know</c><00:06:30.090><c> like</c><00:06:30.270><c> the</c>

00:06:30.409 --> 00:06:30.419 align:start position:0%
to use you have to know like the
 

00:06:30.419 --> 00:06:31.850 align:start position:0%
to use you have to know like the
references<00:06:30.960><c> if</c><00:06:31.110><c> you</c><00:06:31.259><c> have</c><00:06:31.380><c> object</c>

00:06:31.850 --> 00:06:31.860 align:start position:0%
references if you have object
 

00:06:31.860 --> 00:06:33.589 align:start position:0%
references if you have object
hierarchies<00:06:32.370><c> that</c><00:06:32.909><c> you're</c><00:06:33.060><c> not</c><00:06:33.210><c> using</c>

00:06:33.589 --> 00:06:33.599 align:start position:0%
hierarchies that you're not using
 

00:06:33.599 --> 00:06:35.240 align:start position:0%
hierarchies that you're not using
anymore<00:06:33.840><c> not</c><00:06:34.440><c> allow</c><00:06:34.590><c> the</c><00:06:34.650><c> reference</c><00:06:35.099><c> to</c><00:06:35.219><c> that</c>

00:06:35.240 --> 00:06:35.250 align:start position:0%
anymore not allow the reference to that
 

00:06:35.250 --> 00:06:37.820 align:start position:0%
anymore not allow the reference to that
object<00:06:35.820><c> hierarchy</c><00:06:36.060><c> to</c><00:06:36.719><c> actually</c><00:06:37.139><c> give</c><00:06:37.650><c> the</c>

00:06:37.820 --> 00:06:37.830 align:start position:0%
object hierarchy to actually give the
 

00:06:37.830 --> 00:06:39.920 align:start position:0%
object hierarchy to actually give the
garbage<00:06:38.130><c> collector</c><00:06:38.490><c> an</c><00:06:38.610><c> opportunity</c><00:06:39.270><c> to</c>

00:06:39.920 --> 00:06:39.930 align:start position:0%
garbage collector an opportunity to
 

00:06:39.930 --> 00:06:42.149 align:start position:0%
garbage collector an opportunity to
remove<00:06:40.620><c> all</c><00:06:40.889><c> the</c><00:06:41.130><c> space</c><00:06:41.370><c> that</c><00:06:41.400><c> is</c><00:06:41.669><c> Alec</c>

00:06:42.149 --> 00:06:42.159 align:start position:0%
remove all the space that is Alec
 

00:06:42.159 --> 00:06:46.589 align:start position:0%
remove all the space that is Alec
for<00:06:42.819><c> those</c><00:06:43.409><c> object</c><00:06:44.409><c> hierarchies</c><00:06:44.889><c> then</c><00:06:45.819><c> the</c>

00:06:46.589 --> 00:06:46.599 align:start position:0%
for those object hierarchies then the
 

00:06:46.599 --> 00:06:50.219 align:start position:0%
for those object hierarchies then the
second<00:06:46.959><c> part</c><00:06:47.169><c> is</c><00:06:47.409><c> if</c><00:06:47.679><c> you</c><00:06:47.889><c> use</c><00:06:48.959><c> if</c><00:06:49.959><c> you</c><00:06:50.199><c> use</c>

00:06:50.219 --> 00:06:50.229 align:start position:0%
second part is if you use if you use
 

00:06:50.229 --> 00:06:53.729 align:start position:0%
second part is if you use if you use
some<00:06:50.759><c> caches</c><00:06:51.759><c> or</c><00:06:52.149><c> have</c><00:06:52.899><c> objects</c><00:06:53.409><c> that</c><00:06:53.469><c> can</c><00:06:53.709><c> be</c>

00:06:53.729 --> 00:06:53.739 align:start position:0%
some caches or have objects that can be
 

00:06:53.739 --> 00:06:57.779 align:start position:0%
some caches or have objects that can be
recreated<00:06:54.219><c> at</c><00:06:54.550><c> a</c><00:06:54.580><c> later</c><00:06:54.849><c> time</c><00:06:55.289><c> you</c><00:06:56.759><c> can</c><00:06:57.759><c> use</c>

00:06:57.779 --> 00:06:57.789 align:start position:0%
recreated at a later time you can use
 

00:06:57.789 --> 00:06:59.790 align:start position:0%
recreated at a later time you can use
the<00:06:58.059><c> weak</c><00:06:58.300><c> reference</c><00:06:58.809><c> class</c><00:06:59.080><c> or</c><00:06:59.379><c> soft</c>

00:06:59.790 --> 00:06:59.800 align:start position:0%
the weak reference class or soft
 

00:06:59.800 --> 00:07:03.179 align:start position:0%
the weak reference class or soft
reference<00:07:00.249><c> class</c><00:07:00.459><c> to</c><00:07:01.439><c> give</c><00:07:02.439><c> give</c><00:07:03.069><c> the</c>

00:07:03.179 --> 00:07:03.189 align:start position:0%
reference class to give give the
 

00:07:03.189 --> 00:07:05.459 align:start position:0%
reference class to give give the
collector<00:07:03.639><c> a</c><00:07:03.669><c> hint</c><00:07:04.119><c> or</c><00:07:04.419><c> an</c><00:07:04.839><c> opportunity</c><00:07:05.080><c> to</c>

00:07:05.459 --> 00:07:05.469 align:start position:0%
collector a hint or an opportunity to
 

00:07:05.469 --> 00:07:07.799 align:start position:0%
collector a hint or an opportunity to
remove<00:07:06.309><c> objects</c><00:07:06.819><c> out</c><00:07:06.999><c> of</c><00:07:07.119><c> your</c><00:07:07.239><c> working</c><00:07:07.419><c> set</c>

00:07:07.799 --> 00:07:07.809 align:start position:0%
remove objects out of your working set
 

00:07:07.809 --> 00:07:11.549 align:start position:0%
remove objects out of your working set
if<00:07:08.050><c> the</c><00:07:08.349><c> memory</c><00:07:08.860><c> is</c><00:07:08.949><c> getting</c><00:07:09.939><c> tight</c><00:07:10.559><c> then</c>

00:07:11.549 --> 00:07:11.559 align:start position:0%
if the memory is getting tight then
 

00:07:11.559 --> 00:07:14.820 align:start position:0%
if the memory is getting tight then
avoid<00:07:12.369><c> finalizes</c><00:07:13.209><c> where</c><00:07:13.419><c> you</c><00:07:13.539><c> can</c><00:07:13.830><c> finalize</c>

00:07:14.820 --> 00:07:14.830 align:start position:0%
avoid finalizes where you can finalize
 

00:07:14.830 --> 00:07:18.019 align:start position:0%
avoid finalizes where you can finalize
objects<00:07:15.490><c> that</c><00:07:15.550><c> can</c><00:07:15.729><c> be</c><00:07:15.759><c> finalized</c><00:07:16.449><c> need</c><00:07:17.199><c> to</c><00:07:17.379><c> be</c>

00:07:18.019 --> 00:07:18.029 align:start position:0%
objects that can be finalized need to be
 

00:07:18.029 --> 00:07:21.059 align:start position:0%
objects that can be finalized need to be
handled<00:07:19.029><c> specially</c><00:07:19.509><c> in</c><00:07:19.629><c> the</c><00:07:19.749><c> VM</c><00:07:20.019><c> they</c><00:07:20.589><c> we</c><00:07:20.919><c> need</c>

00:07:21.059 --> 00:07:21.069 align:start position:0%
handled specially in the VM they we need
 

00:07:21.069 --> 00:07:23.969 align:start position:0%
handled specially in the VM they we need
to<00:07:21.189><c> actually</c><00:07:21.550><c> call</c><00:07:21.879><c> the</c><00:07:22.149><c> runtime</c><00:07:22.979><c> from</c>

00:07:23.969 --> 00:07:23.979 align:start position:0%
to actually call the runtime from
 

00:07:23.979 --> 00:07:26.100 align:start position:0%
to actually call the runtime from
interpreted<00:07:24.580><c> or</c><00:07:24.729><c> compiled</c><00:07:25.240><c> code</c><00:07:25.509><c> to</c><00:07:25.689><c> allocate</c>

00:07:26.100 --> 00:07:26.110 align:start position:0%
interpreted or compiled code to allocate
 

00:07:26.110 --> 00:07:28.169 align:start position:0%
interpreted or compiled code to allocate
objects<00:07:26.529><c> with</c><00:07:26.679><c> finalized</c><00:07:27.129><c> errs</c><00:07:27.339><c> because</c><00:07:28.059><c> we</c>

00:07:28.169 --> 00:07:28.179 align:start position:0%
objects with finalized errs because we
 

00:07:28.179 --> 00:07:31.169 align:start position:0%
objects with finalized errs because we
have<00:07:28.300><c> to</c><00:07:28.419><c> keep</c><00:07:28.599><c> track</c><00:07:28.899><c> of</c><00:07:29.080><c> them</c><00:07:29.259><c> and</c><00:07:30.179><c> that</c>

00:07:31.169 --> 00:07:31.179 align:start position:0%
have to keep track of them and that
 

00:07:31.179 --> 00:07:34.169 align:start position:0%
have to keep track of them and that
makes<00:07:31.419><c> it</c><00:07:31.539><c> very</c><00:07:31.689><c> hard</c><00:07:32.279><c> to</c><00:07:33.279><c> allocate</c><00:07:33.759><c> quickly</c>

00:07:34.169 --> 00:07:34.179 align:start position:0%
makes it very hard to allocate quickly
 

00:07:34.179 --> 00:07:36.269 align:start position:0%
makes it very hard to allocate quickly
all<00:07:34.329><c> other</c><00:07:34.629><c> allocation</c><00:07:35.319><c> is</c><00:07:35.469><c> done</c><00:07:35.499><c> in</c><00:07:35.860><c> line</c><00:07:36.069><c> in</c>

00:07:36.269 --> 00:07:36.279 align:start position:0%
all other allocation is done in line in
 

00:07:36.279 --> 00:07:38.699 align:start position:0%
all other allocation is done in line in
interpreted<00:07:36.849><c> and</c><00:07:36.969><c> compiled</c><00:07:37.509><c> code</c><00:07:37.809><c> for</c><00:07:38.529><c> fine</c>

00:07:38.699 --> 00:07:38.709 align:start position:0%
interpreted and compiled code for fine
 

00:07:38.709 --> 00:07:41.159 align:start position:0%
interpreted and compiled code for fine
fine<00:07:39.219><c> Eliza</c><00:07:39.490><c> Ballabh</c><00:07:39.789><c> jex</c><00:07:40.059><c> we</c><00:07:40.659><c> first</c><00:07:40.929><c> have</c><00:07:41.139><c> to</c>

00:07:41.159 --> 00:07:41.169 align:start position:0%
fine Eliza Ballabh jex we first have to
 

00:07:41.169 --> 00:07:43.919 align:start position:0%
fine Eliza Ballabh jex we first have to
keep<00:07:41.469><c> track</c><00:07:41.739><c> of</c><00:07:41.769><c> them</c><00:07:42.099><c> by</c><00:07:43.029><c> allocating</c><00:07:43.449><c> through</c>

00:07:43.919 --> 00:07:43.929 align:start position:0%
keep track of them by allocating through
 

00:07:43.929 --> 00:07:45.540 align:start position:0%
keep track of them by allocating through
through<00:07:44.289><c> the</c><00:07:44.319><c> runtime</c><00:07:44.800><c> and</c><00:07:44.979><c> then</c><00:07:45.189><c> we</c><00:07:45.399><c> actually</c>

00:07:45.540 --> 00:07:45.550 align:start position:0%
through the runtime and then we actually
 

00:07:45.550 --> 00:07:47.639 align:start position:0%
through the runtime and then we actually
have<00:07:45.879><c> when</c><00:07:46.149><c> we're</c><00:07:46.329><c> throwing</c><00:07:46.599><c> them</c><00:07:46.749><c> away</c><00:07:46.899><c> we</c>

00:07:47.639 --> 00:07:47.649 align:start position:0%
have when we're throwing them away we
 

00:07:47.649 --> 00:07:49.589 align:start position:0%
have when we're throwing them away we
have<00:07:47.800><c> to</c><00:07:47.919><c> make</c><00:07:48.069><c> sure</c><00:07:48.249><c> to</c><00:07:48.399><c> call</c><00:07:48.579><c> the</c><00:07:48.610><c> finalizes</c>

00:07:49.589 --> 00:07:49.599 align:start position:0%
have to make sure to call the finalizes
 

00:07:49.599 --> 00:07:51.209 align:start position:0%
have to make sure to call the finalizes
when<00:07:49.779><c> you're</c><00:07:49.899><c> done</c><00:07:50.079><c> so</c><00:07:50.679><c> if</c><00:07:50.769><c> you</c><00:07:50.860><c> can</c><00:07:51.039><c> avoid</c>

00:07:51.209 --> 00:07:51.219 align:start position:0%
when you're done so if you can avoid
 

00:07:51.219 --> 00:07:55.769 align:start position:0%
when you're done so if you can avoid
finalizes<00:07:52.089><c> please</c><00:07:52.360><c> do</c><00:07:52.709><c> then</c><00:07:54.329><c> to</c><00:07:55.329><c> reduce</c><00:07:55.599><c> your</c>

00:07:55.769 --> 00:07:55.779 align:start position:0%
finalizes please do then to reduce your
 

00:07:55.779 --> 00:07:58.679 align:start position:0%
finalizes please do then to reduce your
footprint<00:07:56.259><c> it</c><00:07:56.529><c> is</c><00:07:57.099><c> helpful</c><00:07:57.429><c> to</c><00:07:57.669><c> do</c><00:07:57.939><c> lazy</c><00:07:58.240><c> hours</c>

00:07:58.679 --> 00:07:58.689 align:start position:0%
footprint it is helpful to do lazy hours
 

00:07:58.689 --> 00:08:01.889 align:start position:0%
footprint it is helpful to do lazy hours
initialization<00:07:59.649><c> and</c><00:07:59.769><c> allocation</c><00:08:00.389><c> so</c><00:08:01.389><c> that</c>

00:08:01.889 --> 00:08:01.899 align:start position:0%
initialization and allocation so that
 

00:08:01.899 --> 00:08:04.529 align:start position:0%
initialization and allocation so that
way<00:08:02.110><c> you</c><00:08:02.169><c> reduce</c><00:08:02.740><c> your</c><00:08:03.249><c> footprint</c><00:08:03.849><c> as</c><00:08:03.999><c> well</c><00:08:04.329><c> as</c>

00:08:04.529 --> 00:08:04.539 align:start position:0%
way you reduce your footprint as well as
 

00:08:04.539 --> 00:08:06.619 align:start position:0%
way you reduce your footprint as well as
reduce<00:08:05.019><c> your</c><00:08:05.050><c> startup</c><00:08:05.559><c> performance</c><00:08:06.099><c> and</c>

00:08:06.619 --> 00:08:06.629 align:start position:0%
reduce your startup performance and
 

00:08:06.629 --> 00:08:08.909 align:start position:0%
reduce your startup performance and
startup<00:08:07.629><c> time</c><00:08:07.899><c> to</c><00:08:08.110><c> increase</c><00:08:08.319><c> the</c><00:08:08.439><c> startup</c>

00:08:08.909 --> 00:08:08.919 align:start position:0%
startup time to increase the startup
 

00:08:08.919 --> 00:08:13.649 align:start position:0%
startup time to increase the startup
performance<00:08:10.349><c> so</c><00:08:11.759><c> what</c><00:08:12.759><c> did</c><00:08:12.909><c> we</c><00:08:13.029><c> do</c><00:08:13.149><c> to</c><00:08:13.329><c> memory</c>

00:08:13.649 --> 00:08:13.659 align:start position:0%
performance so what did we do to memory
 

00:08:13.659 --> 00:08:16.079 align:start position:0%
performance so what did we do to memory
management<00:08:14.019><c> to</c><00:08:14.319><c> improve</c><00:08:14.679><c> some</c><00:08:15.579><c> footprint</c>

00:08:16.079 --> 00:08:16.089 align:start position:0%
management to improve some footprint
 

00:08:16.089 --> 00:08:18.059 align:start position:0%
management to improve some footprint
issues<00:08:16.449><c> what</c><00:08:17.019><c> we</c><00:08:17.169><c> introduced</c><00:08:17.619><c> a</c><00:08:17.800><c> shared</c>

00:08:18.059 --> 00:08:18.069 align:start position:0%
issues what we introduced a shared
 

00:08:18.069 --> 00:08:21.959 align:start position:0%
issues what we introduced a shared
generation<00:08:18.789><c> that</c><00:08:19.199><c> stores</c><00:08:20.199><c> the</c><00:08:20.649><c> most</c><00:08:21.399><c> often</c>

00:08:21.959 --> 00:08:21.969 align:start position:0%
generation that stores the most often
 

00:08:21.969 --> 00:08:24.839 align:start position:0%
generation that stores the most often
used<00:08:22.240><c> classes</c><00:08:23.169><c> and</c><00:08:23.409><c> methods</c><00:08:23.729><c> including</c><00:08:24.729><c> their</c>

00:08:24.839 --> 00:08:24.849 align:start position:0%
used classes and methods including their
 

00:08:24.849 --> 00:08:28.709 align:start position:0%
used classes and methods including their
byte<00:08:25.029><c> codes</c><00:08:25.360><c> and</c><00:08:25.569><c> so</c><00:08:25.719><c> on</c><00:08:25.869><c> and</c><00:08:27.419><c> this</c><00:08:28.419><c> shared</c>

00:08:28.709 --> 00:08:28.719 align:start position:0%
byte codes and so on and this shared
 

00:08:28.719 --> 00:08:32.219 align:start position:0%
byte codes and so on and this shared
generation<00:08:29.259><c> is</c><00:08:29.409><c> mapped</c><00:08:29.800><c> in</c><00:08:30.159><c> from</c><00:08:31.059><c> a</c><00:08:31.089><c> file</c><00:08:31.449><c> so</c>

00:08:32.219 --> 00:08:32.229 align:start position:0%
generation is mapped in from a file so
 

00:08:32.229 --> 00:08:34.649 align:start position:0%
generation is mapped in from a file so
we<00:08:32.380><c> used</c><00:08:32.589><c> mark</c><00:08:32.949><c> underlying</c><00:08:33.880><c> mark</c><00:08:34.180><c> virtual</c>

00:08:34.649 --> 00:08:34.659 align:start position:0%
we used mark underlying mark virtual
 

00:08:34.659 --> 00:08:38.249 align:start position:0%
we used mark underlying mark virtual
memory<00:08:34.810><c> system</c><00:08:35.409><c> to</c><00:08:36.099><c> just</c><00:08:36.819><c> bring</c><00:08:37.089><c> that</c><00:08:37.259><c> memory</c>

00:08:38.249 --> 00:08:38.259 align:start position:0%
memory system to just bring that memory
 

00:08:38.259 --> 00:08:41.159 align:start position:0%
memory system to just bring that memory
into<00:08:38.620><c> the</c><00:08:38.740><c> VM</c><00:08:38.939><c> we</c><00:08:39.939><c> reduce</c><00:08:40.240><c> the</c><00:08:40.419><c> GC</c><00:08:40.870><c> time</c>

00:08:41.159 --> 00:08:41.169 align:start position:0%
into the VM we reduce the GC time
 

00:08:41.169 --> 00:08:43.499 align:start position:0%
into the VM we reduce the GC time
because<00:08:41.680><c> we</c><00:08:41.889><c> never</c><00:08:42.069><c> try</c><00:08:42.759><c> to</c><00:08:42.789><c> collect</c>

00:08:43.499 --> 00:08:43.509 align:start position:0%
because we never try to collect
 

00:08:43.509 --> 00:08:46.230 align:start position:0%
because we never try to collect
reclaim<00:08:44.139><c> that</c><00:08:44.410><c> memory</c><00:08:44.740><c> it</c><00:08:44.980><c> is</c><00:08:45.490><c> basically</c><00:08:45.880><c> free</c>

00:08:46.230 --> 00:08:46.240 align:start position:0%
reclaim that memory it is basically free
 

00:08:46.240 --> 00:08:48.569 align:start position:0%
reclaim that memory it is basically free
because<00:08:46.750><c> we</c><00:08:47.470><c> read</c><00:08:47.680><c> it</c><00:08:47.829><c> from</c><00:08:48.009><c> a</c><00:08:48.100><c> file</c>

00:08:48.569 --> 00:08:48.579 align:start position:0%
because we read it from a file
 

00:08:48.579 --> 00:08:50.699 align:start position:0%
because we read it from a file
we<00:08:49.029><c> are</c><00:08:49.149><c> never</c><00:08:49.360><c> touching</c><00:08:49.779><c> it</c><00:08:49.899><c> so</c><00:08:49.930><c> we</c><00:08:50.199><c> share</c><00:08:50.529><c> it</c>

00:08:50.699 --> 00:08:50.709 align:start position:0%
we are never touching it so we share it
 

00:08:50.709 --> 00:08:53.460 align:start position:0%
we are never touching it so we share it
across<00:08:51.100><c> multiple</c><00:08:51.509><c> running</c><00:08:52.509><c> Java</c><00:08:52.779><c> processes</c>

00:08:53.460 --> 00:08:53.470 align:start position:0%
across multiple running Java processes
 

00:08:53.470 --> 00:08:56.040 align:start position:0%
across multiple running Java processes
the<00:08:54.459><c> thing</c><00:08:54.639><c> you</c><00:08:54.759><c> can</c><00:08:54.910><c> help</c><00:08:55.089><c> us</c><00:08:55.269><c> there</c><00:08:55.509><c> is</c>

00:08:56.040 --> 00:08:56.050 align:start position:0%
the thing you can help us there is
 

00:08:56.050 --> 00:08:57.990 align:start position:0%
the thing you can help us there is
well<00:08:56.260><c> don't</c><00:08:56.380><c> break</c><00:08:56.680><c> it</c><00:08:56.860><c> don't</c><00:08:57.070><c> change</c><00:08:57.700><c> your</c>

00:08:57.990 --> 00:08:58.000 align:start position:0%
well don't break it don't change your
 

00:08:58.000 --> 00:09:01.350 align:start position:0%
well don't break it don't change your
boot<00:08:58.149><c> classpath</c><00:08:59.160><c> do</c><00:09:00.160><c> not</c><00:09:00.339><c> modify</c><00:09:00.640><c> the</c><00:09:00.790><c> systems</c>

00:09:01.350 --> 00:09:01.360 align:start position:0%
boot classpath do not modify the systems
 

00:09:01.360 --> 00:09:02.730 align:start position:0%
boot classpath do not modify the systems
are<00:09:01.510><c> files</c><00:09:01.779><c> that</c><00:09:01.870><c> are</c><00:09:02.050><c> installed</c><00:09:02.410><c> on</c><00:09:02.589><c> the</c>

00:09:02.730 --> 00:09:02.740 align:start position:0%
are files that are installed on the
 

00:09:02.740 --> 00:09:05.850 align:start position:0%
are files that are installed on the
system<00:09:03.130><c> and</c><00:09:03.990><c> that</c><00:09:04.990><c> way</c><00:09:05.200><c> we</c><00:09:05.380><c> can</c><00:09:05.529><c> always</c><00:09:05.830><c> use</c>

00:09:05.850 --> 00:09:05.860 align:start position:0%
system and that way we can always use
 

00:09:05.860 --> 00:09:07.680 align:start position:0%
system and that way we can always use
the<00:09:06.279><c> share</c><00:09:06.490><c> generation</c><00:09:07.000><c> when</c><00:09:07.149><c> we</c><00:09:07.270><c> start</c><00:09:07.570><c> the</c>

00:09:07.680 --> 00:09:07.690 align:start position:0%
the share generation when we start the
 

00:09:07.690 --> 00:09:11.940 align:start position:0%
the share generation when we start the
VM<00:09:08.850><c> it</c><00:09:09.850><c> has</c><00:09:10.089><c> additional</c><00:09:10.570><c> benefit</c><00:09:11.020><c> in</c><00:09:11.260><c> start-up</c>

00:09:11.940 --> 00:09:11.950 align:start position:0%
VM it has additional benefit in start-up
 

00:09:11.950 --> 00:09:15.650 align:start position:0%
VM it has additional benefit in start-up
time<00:09:12.160><c> which</c><00:09:12.850><c> I'm</c><00:09:13.029><c> going</c><00:09:13.149><c> to</c><00:09:13.240><c> touch</c><00:09:13.420><c> now</c><00:09:14.040><c> avoid</c>

00:09:15.650 --> 00:09:15.660 align:start position:0%
time which I'm going to touch now avoid
 

00:09:15.660 --> 00:09:18.180 align:start position:0%
time which I'm going to touch now avoid
eager<00:09:16.660><c> class</c><00:09:16.959><c> loading</c><00:09:17.620><c> and</c><00:09:17.830><c> class</c>

00:09:18.180 --> 00:09:18.190 align:start position:0%
eager class loading and class
 

00:09:18.190 --> 00:09:21.510 align:start position:0%
eager class loading and class
initialization<00:09:19.140><c> but</c><00:09:20.140><c> it</c><00:09:20.380><c> has</c><00:09:20.620><c> both</c><00:09:20.860><c> effect</c><00:09:21.310><c> on</c>

00:09:21.510 --> 00:09:21.520 align:start position:0%
initialization but it has both effect on
 

00:09:21.520 --> 00:09:24.510 align:start position:0%
initialization but it has both effect on
startup<00:09:22.300><c> time</c><00:09:22.600><c> as</c><00:09:23.380><c> well</c><00:09:23.680><c> as</c><00:09:23.830><c> your</c><00:09:24.220><c> memory</c>

00:09:24.510 --> 00:09:24.520 align:start position:0%
startup time as well as your memory
 

00:09:24.520 --> 00:09:26.310 align:start position:0%
startup time as well as your memory
footprint<00:09:24.970><c> if</c><00:09:25.120><c> you</c><00:09:25.209><c> don't</c><00:09:25.390><c> load</c><00:09:26.020><c> those</c>

00:09:26.310 --> 00:09:26.320 align:start position:0%
footprint if you don't load those
 

00:09:26.320 --> 00:09:28.949 align:start position:0%
footprint if you don't load those
classes<00:09:26.880><c> when</c><00:09:27.880><c> you</c><00:09:28.000><c> don't</c><00:09:28.180><c> need</c><00:09:28.330><c> them</c><00:09:28.390><c> you're</c>

00:09:28.949 --> 00:09:28.959 align:start position:0%
classes when you don't need them you're
 

00:09:28.959 --> 00:09:31.560 align:start position:0%
classes when you don't need them you're
not<00:09:29.140><c> you're</c><00:09:29.920><c> not</c><00:09:29.950><c> using</c><00:09:30.399><c> the</c><00:09:30.520><c> memory</c><00:09:30.700><c> as</c><00:09:31.000><c> well</c>

00:09:31.560 --> 00:09:31.570 align:start position:0%
not you're not using the memory as well
 

00:09:31.570 --> 00:09:33.780 align:start position:0%
not you're not using the memory as well
as<00:09:31.660><c> you're</c><00:09:32.320><c> spending</c><00:09:32.800><c> cycles</c><00:09:33.279><c> to</c><00:09:33.399><c> actually</c>

00:09:33.780 --> 00:09:33.790 align:start position:0%
as you're spending cycles to actually
 

00:09:33.790 --> 00:09:35.760 align:start position:0%
as you're spending cycles to actually
load<00:09:34.330><c> them</c><00:09:34.480><c> from</c><00:09:34.660><c> the</c><00:09:34.750><c> class</c><00:09:34.959><c> file</c><00:09:35.290><c> decode</c>

00:09:35.760 --> 00:09:35.770 align:start position:0%
load them from the class file decode
 

00:09:35.770 --> 00:09:38.699 align:start position:0%
load them from the class file decode
them<00:09:36.010><c> bring</c><00:09:36.550><c> them</c><00:09:36.730><c> into</c><00:09:36.880><c> memory</c><00:09:37.709><c> initialize</c>

00:09:38.699 --> 00:09:38.709 align:start position:0%
them bring them into memory initialize
 

00:09:38.709 --> 00:09:42.960 align:start position:0%
them bring them into memory initialize
and<00:09:39.160><c> so</c><00:09:39.730><c> on</c><00:09:39.880><c> so</c><00:09:40.570><c> if</c><00:09:41.200><c> you</c><00:09:42.100><c> want</c><00:09:42.160><c> to</c><00:09:42.370><c> see</c><00:09:42.610><c> which</c>

00:09:42.960 --> 00:09:42.970 align:start position:0%
and so on so if you want to see which
 

00:09:42.970 --> 00:09:45.449 align:start position:0%
and so on so if you want to see which
classes<00:09:43.510><c> are</c><00:09:43.540><c> loaded</c><00:09:43.990><c> at</c><00:09:44.140><c> what</c><00:09:44.320><c> time</c><00:09:44.649><c> you</c><00:09:45.279><c> can</c>

00:09:45.449 --> 00:09:45.459 align:start position:0%
classes are loaded at what time you can
 

00:09:45.459 --> 00:09:48.840 align:start position:0%
classes are loaded at what time you can
use<00:09:45.610><c> the</c><00:09:45.850><c> -</c><00:09:46.690><c> verbose</c><00:09:47.170><c> callin</c><00:09:47.950><c> class</c><00:09:48.190><c> flag</c><00:09:48.580><c> on</c>

00:09:48.840 --> 00:09:48.850 align:start position:0%
use the - verbose callin class flag on
 

00:09:48.850 --> 00:09:51.060 align:start position:0%
use the - verbose callin class flag on
the<00:09:48.970><c> command</c><00:09:49.300><c> line</c><00:09:49.390><c> to</c><00:09:50.170><c> see</c><00:09:50.380><c> what</c><00:09:50.589><c> is</c><00:09:50.709><c> loaded</c>

00:09:51.060 --> 00:09:51.070 align:start position:0%
the command line to see what is loaded
 

00:09:51.070 --> 00:09:54.990 align:start position:0%
the command line to see what is loaded
at<00:09:51.220><c> what</c><00:09:51.550><c> time</c><00:09:51.880><c> and</c><00:09:52.209><c> in</c><00:09:52.630><c> which</c><00:09:52.810><c> order</c><00:09:53.790><c> so</c><00:09:54.790><c> as</c><00:09:54.910><c> I</c>

00:09:54.990 --> 00:09:55.000 align:start position:0%
at what time and in which order so as I
 

00:09:55.000 --> 00:09:56.880 align:start position:0%
at what time and in which order so as I
mentioned<00:09:55.360><c> before</c><00:09:55.480><c> the</c><00:09:55.990><c> shared</c><00:09:56.230><c> generation</c>

00:09:56.880 --> 00:09:56.890 align:start position:0%
mentioned before the shared generation
 

00:09:56.890 --> 00:10:00.060 align:start position:0%
mentioned before the shared generation
reduces<00:09:57.399><c> class</c><00:09:57.670><c> load</c><00:09:57.970><c> time</c><00:09:58.270><c> because</c><00:09:59.050><c> most</c><00:09:59.950><c> of</c>

00:10:00.060 --> 00:10:00.070 align:start position:0%
reduces class load time because most of
 

00:10:00.070 --> 00:10:01.920 align:start position:0%
reduces class load time because most of
the<00:10:00.190><c> classes</c><00:10:00.579><c> are</c><00:10:00.670><c> going</c><00:10:00.880><c> to</c><00:10:00.970><c> use</c><00:10:01.120><c> out</c><00:10:01.390><c> of</c><00:10:01.570><c> Java</c>

00:10:01.920 --> 00:10:01.930 align:start position:0%
the classes are going to use out of Java
 

00:10:01.930 --> 00:10:05.250 align:start position:0%
the classes are going to use out of Java
and<00:10:02.260><c> Java</c><00:10:02.470><c> net</c><00:10:02.740><c> swing</c><00:10:03.399><c> and</c><00:10:03.730><c> so</c><00:10:04.329><c> on</c><00:10:04.510><c> have</c><00:10:05.230><c> been</c>

00:10:05.250 --> 00:10:05.260 align:start position:0%
and Java net swing and so on have been
 

00:10:05.260 --> 00:10:07.050 align:start position:0%
and Java net swing and so on have been
preloaded<00:10:05.709><c> for</c><00:10:06.279><c> you</c><00:10:06.430><c> in</c><00:10:06.610><c> that</c><00:10:06.730><c> shared</c>

00:10:07.050 --> 00:10:07.060 align:start position:0%
preloaded for you in that shared
 

00:10:07.060 --> 00:10:08.730 align:start position:0%
preloaded for you in that shared
generation<00:10:07.600><c> and</c><00:10:07.750><c> our</c><00:10:07.899><c> mapped</c><00:10:08.200><c> from</c><00:10:08.410><c> the</c><00:10:08.529><c> file</c>

00:10:08.730 --> 00:10:08.740 align:start position:0%
generation and our mapped from the file
 

00:10:08.740 --> 00:10:12.110 align:start position:0%
generation and our mapped from the file
when<00:10:08.920><c> you</c><00:10:08.950><c> actually</c><00:10:10.200><c> when</c><00:10:11.200><c> you</c><00:10:11.320><c> start</c><00:10:11.560><c> the</c><00:10:11.680><c> VM</c>

00:10:12.110 --> 00:10:12.120 align:start position:0%
when you actually when you start the VM
 

00:10:12.120 --> 00:10:15.000 align:start position:0%
when you actually when you start the VM
so<00:10:13.120><c> when</c><00:10:13.450><c> you</c><00:10:13.570><c> run</c><00:10:13.839><c> the</c><00:10:14.050><c> above</c><00:10:14.290><c> command</c><00:10:14.709><c> that</c><00:10:14.890><c> I</c>

00:10:15.000 --> 00:10:15.010 align:start position:0%
so when you run the above command that I
 

00:10:15.010 --> 00:10:17.310 align:start position:0%
so when you run the above command that I
that<00:10:15.459><c> i</c><00:10:15.490><c> mentioned</c><00:10:15.970><c> java</c><00:10:16.270><c> -</c><00:10:16.540><c> verbose</c><00:10:16.959><c> class</c>

00:10:17.310 --> 00:10:17.320 align:start position:0%
that i mentioned java - verbose class
 

00:10:17.320 --> 00:10:19.980 align:start position:0%
that i mentioned java - verbose class
with<00:10:18.070><c> version</c><00:10:18.310><c> you</c><00:10:19.270><c> don't</c><00:10:19.300><c> see</c><00:10:19.600><c> any</c><00:10:19.750><c> class</c>

00:10:19.980 --> 00:10:19.990 align:start position:0%
with version you don't see any class
 

00:10:19.990 --> 00:10:23.310 align:start position:0%
with version you don't see any class
loading<00:10:20.380><c> going</c><00:10:20.649><c> on</c><00:10:20.800><c> at</c><00:10:20.980><c> all</c><00:10:22.079><c> so</c><00:10:23.079><c> the</c><00:10:23.200><c> other</c>

00:10:23.310 --> 00:10:23.320 align:start position:0%
loading going on at all so the other
 

00:10:23.320 --> 00:10:29.819 align:start position:0%
loading going on at all so the other
part<00:10:23.589><c> was</c><00:10:23.800><c> synchronization</c><00:10:24.700><c> the</c><00:10:26.339><c> VM</c><00:10:28.829><c> the</c>

00:10:29.819 --> 00:10:29.829 align:start position:0%
part was synchronization the VM the
 

00:10:29.829 --> 00:10:32.250 align:start position:0%
part was synchronization the VM the
hotspot<00:10:30.220><c> VM</c><00:10:30.490><c> we</c><00:10:30.670><c> are</c><00:10:30.730><c> using</c><00:10:30.970><c> has</c><00:10:31.660><c> very</c><00:10:31.930><c> fast</c>

00:10:32.250 --> 00:10:32.260 align:start position:0%
hotspot VM we are using has very fast
 

00:10:32.260 --> 00:10:34.230 align:start position:0%
hotspot VM we are using has very fast
synchronization<00:10:33.130><c> in</c><00:10:33.279><c> the</c><00:10:33.399><c> on</c><00:10:33.520><c> contended</c><00:10:34.060><c> case</c>

00:10:34.230 --> 00:10:34.240 align:start position:0%
synchronization in the on contended case
 

00:10:34.240 --> 00:10:36.980 align:start position:0%
synchronization in the on contended case
what<00:10:34.570><c> does</c><00:10:34.690><c> a</c><00:10:34.750><c> none</c><00:10:34.990><c> contended</c><00:10:35.500><c> case</c><00:10:35.680><c> mean</c><00:10:35.950><c> is</c>

00:10:36.980 --> 00:10:36.990 align:start position:0%
what does a none contended case mean is
 

00:10:36.990 --> 00:10:41.880 align:start position:0%
what does a none contended case mean is
when<00:10:37.990><c> you</c><00:10:38.130><c> synchronize</c><00:10:39.130><c> on</c><00:10:39.459><c> an</c><00:10:39.640><c> object</c><00:10:40.890><c> one</c>

00:10:41.880 --> 00:10:41.890 align:start position:0%
when you synchronize on an object one
 

00:10:41.890 --> 00:10:45.300 align:start position:0%
when you synchronize on an object one
thread<00:10:42.220><c> at</c><00:10:42.370><c> a</c><00:10:42.430><c> time</c><00:10:42.700><c> so</c><00:10:43.120><c> that</c><00:10:43.990><c> is</c><00:10:44.140><c> most</c><00:10:44.380><c> that</c><00:10:45.160><c> is</c>

00:10:45.300 --> 00:10:45.310 align:start position:0%
thread at a time so that is most that is
 

00:10:45.310 --> 00:10:47.550 align:start position:0%
thread at a time so that is most that is
most<00:10:45.550><c> often</c><00:10:45.760><c> the</c><00:10:45.940><c> case</c><00:10:46.180><c> that</c><00:10:46.480><c> you</c><00:10:46.870><c> don't</c><00:10:47.260><c> you</c>

00:10:47.550 --> 00:10:47.560 align:start position:0%
most often the case that you don't you
 

00:10:47.560 --> 00:10:50.220 align:start position:0%
most often the case that you don't you
don't<00:10:47.680><c> have</c><00:10:47.920><c> any</c><00:10:48.070><c> locking</c><00:10:49.060><c> really</c><00:10:49.839><c> going</c><00:10:50.110><c> on</c>

00:10:50.220 --> 00:10:50.230 align:start position:0%
don't have any locking really going on
 

00:10:50.230 --> 00:10:52.260 align:start position:0%
don't have any locking really going on
but<00:10:50.440><c> you</c><00:10:50.500><c> want</c><00:10:50.680><c> to</c><00:10:50.740><c> protect</c><00:10:51.130><c> if</c><00:10:51.370><c> some</c><00:10:52.120><c> other</c>

00:10:52.260 --> 00:10:52.270 align:start position:0%
but you want to protect if some other
 

00:10:52.270 --> 00:10:54.060 align:start position:0%
but you want to protect if some other
thread<00:10:52.480><c> happened</c><00:10:53.140><c> to</c><00:10:53.230><c> be</c><00:10:53.350><c> in</c><00:10:53.500><c> that</c><00:10:53.649><c> in</c><00:10:53.860><c> that</c>

00:10:54.060 --> 00:10:54.070 align:start position:0%
thread happened to be in that in that
 

00:10:54.070 --> 00:10:57.240 align:start position:0%
thread happened to be in that in that
code<00:10:54.310><c> so</c><00:10:55.240><c> for</c><00:10:55.990><c> this</c><00:10:56.110><c> we</c><00:10:56.290><c> have</c><00:10:56.320><c> a</c><00:10:56.470><c> constant</c><00:10:57.010><c> time</c>

00:10:57.240 --> 00:10:57.250 align:start position:0%
code so for this we have a constant time
 

00:10:57.250 --> 00:11:00.510 align:start position:0%
code so for this we have a constant time
overhead<00:10:57.760><c> done</c><00:10:58.000><c> the</c><00:10:58.839><c> in</c><00:10:59.020><c> line</c><00:10:59.520><c> implementation</c>

00:11:00.510 --> 00:11:00.520 align:start position:0%
overhead done the in line implementation
 

00:11:00.520 --> 00:11:02.930 align:start position:0%
overhead done the in line implementation
of<00:11:00.579><c> the</c><00:11:00.670><c> compiler</c><00:11:01.240><c> or</c><00:11:01.390><c> in</c><00:11:01.779><c> the</c><00:11:01.899><c> interpreter</c>

00:11:02.930 --> 00:11:02.940 align:start position:0%
of the compiler or in the interpreter
 

00:11:02.940 --> 00:11:06.540 align:start position:0%
of the compiler or in the interpreter
takes<00:11:03.940><c> about</c><00:11:04.120><c> eight</c><00:11:04.930><c> to</c><00:11:05.170><c> ten</c><00:11:05.350><c> eight</c><00:11:06.220><c> to</c><00:11:06.370><c> ten</c>

00:11:06.540 --> 00:11:06.550 align:start position:0%
takes about eight to ten eight to ten
 

00:11:06.550 --> 00:11:08.819 align:start position:0%
takes about eight to ten eight to ten
instructions<00:11:07.209><c> it</c><00:11:07.839><c> has</c><00:11:08.050><c> very</c><00:11:08.260><c> low</c><00:11:08.440><c> memory</c>

00:11:08.819 --> 00:11:08.829 align:start position:0%
instructions it has very low memory
 

00:11:08.829 --> 00:11:10.800 align:start position:0%
instructions it has very low memory
overhead

00:11:10.800 --> 00:11:10.810 align:start position:0%
overhead
 

00:11:10.810 --> 00:11:13.850 align:start position:0%
overhead
we<00:11:11.380><c> don't</c><00:11:11.560><c> allocate</c><00:11:11.800><c> any</c><00:11:12.250><c> space</c><00:11:12.610><c> for</c><00:11:12.910><c> these</c>

00:11:13.850 --> 00:11:13.860 align:start position:0%
we don't allocate any space for these
 

00:11:13.860 --> 00:11:16.050 align:start position:0%
we don't allocate any space for these
object<00:11:14.860><c> locks</c><00:11:15.130><c> on</c><00:11:15.370><c> the</c><00:11:15.520><c> heap</c><00:11:15.730><c> they're</c><00:11:15.940><c> all</c>

00:11:16.050 --> 00:11:16.060 align:start position:0%
object locks on the heap they're all
 

00:11:16.060 --> 00:11:19.830 align:start position:0%
object locks on the heap they're all
stack<00:11:16.420><c> allocated</c><00:11:17.050><c> in</c><00:11:17.350><c> the</c><00:11:17.980><c> stack</c><00:11:18.610><c> frame</c><00:11:19.600><c> that</c>

00:11:19.830 --> 00:11:19.840 align:start position:0%
stack allocated in the stack frame that
 

00:11:19.840 --> 00:11:21.420 align:start position:0%
stack allocated in the stack frame that
you're<00:11:19.930><c> actually</c><00:11:20.170><c> running</c><00:11:20.560><c> this</c><00:11:20.800><c> that</c><00:11:21.310><c> you're</c>

00:11:21.420 --> 00:11:21.430 align:start position:0%
you're actually running this that you're
 

00:11:21.430 --> 00:11:24.060 align:start position:0%
you're actually running this that you're
locking<00:11:21.700><c> this</c><00:11:22.500><c> object</c><00:11:23.500><c> that</c><00:11:23.920><c> you're</c>

00:11:24.060 --> 00:11:24.070 align:start position:0%
locking this object that you're
 

00:11:24.070 --> 00:11:26.460 align:start position:0%
locking this object that you're
synchronizing<00:11:24.400><c> on</c><00:11:24.850><c> and</c><00:11:25.240><c> we</c><00:11:25.510><c> don't</c><00:11:25.690><c> use</c><00:11:25.990><c> any</c><00:11:26.320><c> of</c>

00:11:26.460 --> 00:11:26.470 align:start position:0%
synchronizing on and we don't use any of
 

00:11:26.470 --> 00:11:28.620 align:start position:0%
synchronizing on and we don't use any of
the<00:11:26.680><c> underlying</c><00:11:27.070><c> OS</c><00:11:27.310><c> resources</c><00:11:28.150><c> because</c><00:11:28.450><c> that</c>

00:11:28.620 --> 00:11:28.630 align:start position:0%
the underlying OS resources because that
 

00:11:28.630 --> 00:11:30.780 align:start position:0%
the underlying OS resources because that
is<00:11:28.750><c> expensive</c><00:11:29.110><c> that</c><00:11:29.470><c> ties</c><00:11:29.680><c> down</c><00:11:29.920><c> memory</c>

00:11:30.780 --> 00:11:30.790 align:start position:0%
is expensive that ties down memory
 

00:11:30.790 --> 00:11:33.030 align:start position:0%
is expensive that ties down memory
sometimes<00:11:31.330><c> even</c><00:11:31.750><c> in</c><00:11:31.840><c> the</c><00:11:31.870><c> kernel</c><00:11:32.350><c> which</c><00:11:32.860><c> you</c>

00:11:33.030 --> 00:11:33.040 align:start position:0%
sometimes even in the kernel which you
 

00:11:33.040 --> 00:11:35.940 align:start position:0%
sometimes even in the kernel which you
want<00:11:33.220><c> to</c><00:11:33.340><c> avoid</c><00:11:33.520><c> the</c><00:11:34.330><c> contended</c><00:11:34.780><c> case</c><00:11:34.990><c> is</c><00:11:35.290><c> rare</c>

00:11:35.940 --> 00:11:35.950 align:start position:0%
want to avoid the contended case is rare
 

00:11:35.950 --> 00:11:39.210 align:start position:0%
want to avoid the contended case is rare
for<00:11:36.880><c> that</c><00:11:37.350><c> but</c><00:11:38.350><c> since</c><00:11:38.530><c> it</c><00:11:38.680><c> happens</c>

00:11:39.210 --> 00:11:39.220 align:start position:0%
for that but since it happens
 

00:11:39.220 --> 00:11:41.370 align:start position:0%
for that but since it happens
for<00:11:39.580><c> that</c><00:11:39.700><c> we</c><00:11:39.910><c> use</c><00:11:39.940><c> mark</c><00:11:40.510><c> printed</c><00:11:40.870><c> primitives</c>

00:11:41.370 --> 00:11:41.380 align:start position:0%
for that we use mark printed primitives
 

00:11:41.380 --> 00:11:44.730 align:start position:0%
for that we use mark printed primitives
directly<00:11:42.010><c> to</c><00:11:42.840><c> speed</c><00:11:43.840><c> up</c><00:11:44.020><c> to</c><00:11:44.320><c> get</c><00:11:44.440><c> as</c><00:11:44.560><c> much</c>

00:11:44.730 --> 00:11:44.740 align:start position:0%
directly to speed up to get as much
 

00:11:44.740 --> 00:11:46.050 align:start position:0%
directly to speed up to get as much
performance<00:11:45.010><c> as</c><00:11:45.460><c> we</c><00:11:45.610><c> can</c>

00:11:46.050 --> 00:11:46.060 align:start position:0%
performance as we can
 

00:11:46.060 --> 00:11:49.200 align:start position:0%
performance as we can
so<00:11:46.900><c> before</c><00:11:47.170><c> I</c><00:11:47.200><c> want</c><00:11:47.440><c> to</c><00:11:47.500><c> hand</c><00:11:47.800><c> over</c><00:11:48.160><c> this</c><00:11:48.940><c> talk</c>

00:11:49.200 --> 00:11:49.210 align:start position:0%
so before I want to hand over this talk
 

00:11:49.210 --> 00:11:51.780 align:start position:0%
so before I want to hand over this talk
to<00:11:49.360><c> Jim</c><00:11:49.630><c> I</c><00:11:49.870><c> wanted</c><00:11:50.620><c> to</c><00:11:50.710><c> see</c><00:11:50.950><c> to</c><00:11:51.460><c> tell</c><00:11:51.670><c> you</c>

00:11:51.780 --> 00:11:51.790 align:start position:0%
to Jim I wanted to see to tell you
 

00:11:51.790 --> 00:11:55.620 align:start position:0%
to Jim I wanted to see to tell you
what's<00:11:51.970><c> new</c><00:11:52.090><c> in</c><00:11:52.680><c> 2001</c><00:11:53.680><c> so</c><00:11:54.210><c> we</c><00:11:55.210><c> shipped</c><00:11:55.420><c> Mike</c>

00:11:55.620 --> 00:11:55.630 align:start position:0%
what's new in 2001 so we shipped Mike
 

00:11:55.630 --> 00:11:59.400 align:start position:0%
what's new in 2001 so we shipped Mike
Weston<00:11:56.110><c> it</c><00:11:56.350><c> has</c><00:11:56.740><c> a</c><00:11:56.770><c> shared</c><00:11:57.130><c> generation</c><00:11:58.410><c> that</c>

00:11:59.400 --> 00:11:59.410 align:start position:0%
Weston it has a shared generation that
 

00:11:59.410 --> 00:12:02.060 align:start position:0%
Weston it has a shared generation that
is<00:11:59.470><c> one</c><00:11:59.710><c> of</c><00:11:59.830><c> the</c><00:11:59.920><c> big</c><00:12:00.240><c> improvements</c><00:12:01.240><c> we</c><00:12:01.360><c> did</c><00:12:01.540><c> to</c>

00:12:02.060 --> 00:12:02.070 align:start position:0%
is one of the big improvements we did to
 

00:12:02.070 --> 00:12:05.580 align:start position:0%
is one of the big improvements we did to
the<00:12:03.070><c> java</c><00:12:03.340><c> virtual</c><00:12:03.580><c> machine</c><00:12:03.990><c> we</c><00:12:04.990><c> get</c><00:12:05.170><c> from</c><00:12:05.350><c> sun</c>

00:12:05.580 --> 00:12:05.590 align:start position:0%
the java virtual machine we get from sun
 

00:12:05.590 --> 00:12:10.200 align:start position:0%
the java virtual machine we get from sun
in<00:12:06.100><c> the</c><00:12:07.030><c> 131</c><00:12:07.630><c> Developer</c><00:12:08.110><c> Preview</c><00:12:09.210><c> we're</c>

00:12:10.200 --> 00:12:10.210 align:start position:0%
in the 131 Developer Preview we're
 

00:12:10.210 --> 00:12:13.320 align:start position:0%
in the 131 Developer Preview we're
working<00:12:10.570><c> on</c><00:12:10.690><c> or</c><00:12:10.930><c> that</c><00:12:11.140><c> should</c><00:12:11.590><c> be</c><00:12:11.680><c> ready</c><00:12:12.330><c> we</c>

00:12:13.320 --> 00:12:13.330 align:start position:0%
working on or that should be ready we
 

00:12:13.330 --> 00:12:15.660 align:start position:0%
working on or that should be ready we
did<00:12:13.720><c> in</c><00:12:13.930><c> line</c><00:12:14.170><c> interpreter</c><00:12:14.530><c> allocation</c><00:12:15.370><c> this</c>

00:12:15.660 --> 00:12:15.670 align:start position:0%
did in line interpreter allocation this
 

00:12:15.670 --> 00:12:18.390 align:start position:0%
did in line interpreter allocation this
was<00:12:15.910><c> not</c><00:12:16.150><c> in</c><00:12:16.330><c> Mac</c><00:12:16.510><c> OS</c><00:12:16.720><c> 10</c><00:12:16.950><c> we're</c><00:12:17.950><c> working</c><00:12:18.280><c> on</c>

00:12:18.390 --> 00:12:18.400 align:start position:0%
was not in Mac OS 10 we're working on
 

00:12:18.400 --> 00:12:21.330 align:start position:0%
was not in Mac OS 10 we're working on
thread<00:12:18.670><c> local</c><00:12:18.850><c> allocation</c><00:12:19.660><c> we</c><00:12:20.500><c> were</c><00:12:20.680><c> we</c><00:12:21.130><c> have</c>

00:12:21.330 --> 00:12:21.340 align:start position:0%
thread local allocation we were we have
 

00:12:21.340 --> 00:12:24.300 align:start position:0%
thread local allocation we were we have
a<00:12:21.370><c> faster</c><00:12:21.910><c> instance</c><00:12:22.390><c> off</c><00:12:22.570><c> and</c><00:12:23.040><c> faster</c><00:12:24.040><c> array</c>

00:12:24.300 --> 00:12:24.310 align:start position:0%
a faster instance off and faster array
 

00:12:24.310 --> 00:12:27.420 align:start position:0%
a faster instance off and faster array
copy<00:12:24.610><c> that</c><00:12:24.880><c> is</c><00:12:25.000><c> tuned</c><00:12:25.270><c> to</c><00:12:25.540><c> g4</c><00:12:26.280><c> with</c><00:12:27.280><c> the</c>

00:12:27.420 --> 00:12:27.430 align:start position:0%
copy that is tuned to g4 with the
 

00:12:27.430 --> 00:12:30.180 align:start position:0%
copy that is tuned to g4 with the
velocity<00:12:27.610><c> engine</c><00:12:28.410><c> we</c><00:12:29.410><c> use</c><00:12:29.560><c> the</c><00:12:29.770><c> same</c><00:12:29.980><c> code</c>

00:12:30.180 --> 00:12:30.190 align:start position:0%
velocity engine we use the same code
 

00:12:30.190 --> 00:12:33.450 align:start position:0%
velocity engine we use the same code
actually<00:12:30.460><c> for</c><00:12:31.290><c> the</c><00:12:32.290><c> code</c><00:12:32.830><c> we</c><00:12:32.980><c> used</c><00:12:33.160><c> for</c><00:12:33.340><c> our</c>

00:12:33.450 --> 00:12:33.460 align:start position:0%
actually for the code we used for our
 

00:12:33.460 --> 00:12:36.180 align:start position:0%
actually for the code we used for our
array<00:12:33.910><c> cup</c><00:12:34.150><c> we</c><00:12:34.390><c> are</c><00:12:34.450><c> also</c><00:12:34.600><c> using</c><00:12:34.870><c> inside</c><00:12:35.620><c> the</c>

00:12:36.180 --> 00:12:36.190 align:start position:0%
array cup we are also using inside the
 

00:12:36.190 --> 00:12:39.360 align:start position:0%
array cup we are also using inside the
GC<00:12:36.670><c> to</c><00:12:37.270><c> copy</c><00:12:38.200><c> the</c><00:12:38.440><c> objects</c><00:12:38.980><c> between</c><00:12:39.250><c> the</c>

00:12:39.360 --> 00:12:39.370 align:start position:0%
GC to copy the objects between the
 

00:12:39.370 --> 00:12:41.760 align:start position:0%
GC to copy the objects between the
generations<00:12:40.000><c> so</c><00:12:40.660><c> we're</c><00:12:40.810><c> making</c><00:12:41.140><c> use</c><00:12:41.500><c> of</c><00:12:41.560><c> that</c>

00:12:41.760 --> 00:12:41.770 align:start position:0%
generations so we're making use of that
 

00:12:41.770 --> 00:12:44.640 align:start position:0%
generations so we're making use of that
code<00:12:42.070><c> in</c><00:12:42.220><c> multiple</c><00:12:42.670><c> areas</c><00:12:42.900><c> so</c><00:12:43.900><c> now</c><00:12:44.110><c> I</c><00:12:44.380><c> would</c>

00:12:44.640 --> 00:12:44.650 align:start position:0%
code in multiple areas so now I would
 

00:12:44.650 --> 00:12:47.610 align:start position:0%
code in multiple areas so now I would
walk<00:12:44.860><c> wanted</c><00:12:45.520><c> to</c><00:12:45.670><c> give</c><00:12:46.510><c> this</c><00:12:46.690><c> over</c><00:12:46.990><c> to</c><00:12:47.110><c> Jen</c>

00:12:47.610 --> 00:12:47.620 align:start position:0%
walk wanted to give this over to Jen
 

00:12:47.620 --> 00:12:54.889 align:start position:0%
walk wanted to give this over to Jen
thanks

00:12:54.889 --> 00:12:54.899 align:start position:0%
 
 

00:12:54.899 --> 00:12:58.920 align:start position:0%
 
so<00:12:55.899><c> memory</c><00:12:56.829><c> management</c><00:12:57.550><c> and</c><00:12:57.940><c> synchronization</c>

00:12:58.920 --> 00:12:58.930 align:start position:0%
so memory management and synchronization
 

00:12:58.930 --> 00:13:01.980 align:start position:0%
so memory management and synchronization
is<00:12:59.230><c> a</c><00:12:59.350><c> crucial</c><00:12:59.860><c> part</c><00:13:00.040><c> of</c><00:13:00.629><c> what</c><00:13:01.629><c> affects</c><00:13:01.930><c> the</c>

00:13:01.980 --> 00:13:01.990 align:start position:0%
is a crucial part of what affects the
 

00:13:01.990 --> 00:13:04.199 align:start position:0%
is a crucial part of what affects the
performance<00:13:02.199><c> of</c><00:13:02.620><c> your</c><00:13:02.740><c> application</c><00:13:03.339><c> but</c><00:13:04.000><c> I</c>

00:13:04.199 --> 00:13:04.209 align:start position:0%
performance of your application but I
 

00:13:04.209 --> 00:13:05.369 align:start position:0%
performance of your application but I
think<00:13:04.420><c> fundamentally</c><00:13:04.600><c> when</c><00:13:05.079><c> we're</c><00:13:05.230><c> working</c>

00:13:05.369 --> 00:13:05.379 align:start position:0%
think fundamentally when we're working
 

00:13:05.379 --> 00:13:08.579 align:start position:0%
think fundamentally when we're working
with<00:13:06.180><c> with</c><00:13:07.180><c> Java</c><00:13:07.660><c> code</c><00:13:07.899><c> we</c><00:13:08.050><c> think</c><00:13:08.259><c> of</c><00:13:08.379><c> in</c><00:13:08.560><c> terms</c>

00:13:08.579 --> 00:13:08.589 align:start position:0%
with with Java code we think of in terms
 

00:13:08.589 --> 00:13:10.980 align:start position:0%
with with Java code we think of in terms
of<00:13:08.980><c> the</c><00:13:09.160><c> speed</c><00:13:09.430><c> of</c><00:13:09.569><c> speed</c><00:13:10.569><c> of</c><00:13:10.720><c> the</c><00:13:10.810><c> code</c>

00:13:10.980 --> 00:13:10.990 align:start position:0%
of the speed of speed of the code
 

00:13:10.990 --> 00:13:13.939 align:start position:0%
of the speed of speed of the code
execution<00:13:11.439><c> as</c><00:13:11.709><c> being</c><00:13:12.040><c> the</c><00:13:12.160><c> key</c><00:13:12.459><c> factor</c><00:13:12.910><c> in</c>

00:13:13.939 --> 00:13:13.949 align:start position:0%
execution as being the key factor in
 

00:13:13.949 --> 00:13:17.730 align:start position:0%
execution as being the key factor in
determining<00:13:14.949><c> what</c><00:13:16.050><c> you</c><00:13:17.050><c> know</c><00:13:17.170><c> what</c><00:13:17.620><c> is</c>

00:13:17.730 --> 00:13:17.740 align:start position:0%
determining what you know what is
 

00:13:17.740 --> 00:13:19.019 align:start position:0%
determining what you know what is
actually<00:13:18.040><c> slowing</c><00:13:18.220><c> down</c><00:13:18.399><c> our</c><00:13:18.699><c> particular</c>

00:13:19.019 --> 00:13:19.029 align:start position:0%
actually slowing down our particular
 

00:13:19.029 --> 00:13:22.590 align:start position:0%
actually slowing down our particular
application<00:13:19.889><c> so</c><00:13:21.120><c> what</c><00:13:22.120><c> I'm</c><00:13:22.209><c> going</c><00:13:22.360><c> to</c><00:13:22.389><c> try</c><00:13:22.569><c> to</c>

00:13:22.590 --> 00:13:22.600 align:start position:0%
application so what I'm going to try to
 

00:13:22.600 --> 00:13:25.259 align:start position:0%
application so what I'm going to try to
do<00:13:22.810><c> in</c><00:13:23.050><c> this</c><00:13:23.170><c> talk</c><00:13:23.769><c> is</c><00:13:23.829><c> just</c><00:13:24.430><c> describe</c><00:13:25.029><c> how</c>

00:13:25.259 --> 00:13:25.269 align:start position:0%
do in this talk is just describe how
 

00:13:25.269 --> 00:13:27.090 align:start position:0%
do in this talk is just describe how
things<00:13:25.600><c> get</c><00:13:25.750><c> interpreted</c><00:13:26.350><c> how</c><00:13:26.829><c> they</c><00:13:26.980><c> get</c>

00:13:27.090 --> 00:13:27.100 align:start position:0%
things get interpreted how they get
 

00:13:27.100 --> 00:13:29.249 align:start position:0%
things get interpreted how they get
compiled<00:13:27.550><c> when</c><00:13:28.449><c> they</c><00:13:28.660><c> get</c><00:13:28.810><c> interpreted</c><00:13:29.170><c> when</c>

00:13:29.249 --> 00:13:29.259 align:start position:0%
compiled when they get interpreted when
 

00:13:29.259 --> 00:13:33.480 align:start position:0%
compiled when they get interpreted when
they<00:13:29.379><c> get</c><00:13:29.500><c> compiled</c><00:13:30.120><c> and</c><00:13:32.220><c> give</c><00:13:33.220><c> you</c><00:13:33.310><c> some</c>

00:13:33.480 --> 00:13:33.490 align:start position:0%
they get compiled and give you some
 

00:13:33.490 --> 00:13:34.920 align:start position:0%
they get compiled and give you some
ideas<00:13:33.879><c> and</c><00:13:33.910><c> some</c><00:13:34.180><c> of</c><00:13:34.269><c> the</c><00:13:34.329><c> coding</c><00:13:34.629><c> hints</c><00:13:34.839><c> that</c>

00:13:34.920 --> 00:13:34.930 align:start position:0%
ideas and some of the coding hints that
 

00:13:34.930 --> 00:13:36.300 align:start position:0%
ideas and some of the coding hints that
you<00:13:34.990><c> can</c><00:13:35.170><c> use</c><00:13:35.379><c> to</c><00:13:35.620><c> speed</c><00:13:35.889><c> up</c><00:13:36.009><c> the</c><00:13:36.069><c> performance</c>

00:13:36.300 --> 00:13:36.310 align:start position:0%
you can use to speed up the performance
 

00:13:36.310 --> 00:13:37.710 align:start position:0%
you can use to speed up the performance
once<00:13:36.910><c> you</c><00:13:37.000><c> find</c><00:13:37.180><c> out</c><00:13:37.300><c> what</c><00:13:37.449><c> kinds</c><00:13:37.689><c> of</c>

00:13:37.710 --> 00:13:37.720 align:start position:0%
once you find out what kinds of
 

00:13:37.720 --> 00:13:39.689 align:start position:0%
once you find out what kinds of
weaknesses<00:13:38.170><c> you</c><00:13:38.259><c> have</c><00:13:38.410><c> in</c><00:13:38.500><c> your</c><00:13:38.620><c> code</c><00:13:38.800><c> and</c><00:13:39.040><c> I'm</c>

00:13:39.689 --> 00:13:39.699 align:start position:0%
weaknesses you have in your code and I'm
 

00:13:39.699 --> 00:13:41.069 align:start position:0%
weaknesses you have in your code and I'm
also<00:13:39.850><c> going</c><00:13:40.029><c> to</c><00:13:40.120><c> run</c><00:13:40.240><c> through</c><00:13:40.509><c> a</c><00:13:40.779><c> few</c><00:13:41.019><c> things</c>

00:13:41.069 --> 00:13:41.079 align:start position:0%
also going to run through a few things
 

00:13:41.079 --> 00:13:43.889 align:start position:0%
also going to run through a few things
that<00:13:41.560><c> have</c><00:13:41.800><c> changed</c><00:13:41.920><c> in</c><00:13:42.490><c> the</c><00:13:42.610><c> last</c><00:13:42.759><c> year</c><00:13:43.209><c> since</c>

00:13:43.889 --> 00:13:43.899 align:start position:0%
that have changed in the last year since
 

00:13:43.899 --> 00:13:47.040 align:start position:0%
that have changed in the last year since
our<00:13:44.110><c> talk</c><00:13:44.560><c> last</c><00:13:44.829><c> year</c><00:13:45.569><c> so</c><00:13:46.569><c> first</c><00:13:46.779><c> of</c><00:13:46.899><c> all</c><00:13:46.959><c> I</c>

00:13:47.040 --> 00:13:47.050 align:start position:0%
our talk last year so first of all I
 

00:13:47.050 --> 00:13:50.490 align:start position:0%
our talk last year so first of all I
want<00:13:47.230><c> to</c><00:13:47.290><c> point</c><00:13:47.350><c> out</c><00:13:47.649><c> that</c><00:13:48.689><c> you</c><00:13:49.689><c> know</c><00:13:49.779><c> people</c>

00:13:50.490 --> 00:13:50.500 align:start position:0%
want to point out that you know people
 

00:13:50.500 --> 00:13:52.470 align:start position:0%
want to point out that you know people
often<00:13:51.129><c> question</c><00:13:51.279><c> well</c><00:13:51.639><c> why</c><00:13:51.790><c> don't</c><00:13:51.850><c> we</c><00:13:52.060><c> compile</c>

00:13:52.470 --> 00:13:52.480 align:start position:0%
often question well why don't we compile
 

00:13:52.480 --> 00:13:53.850 align:start position:0%
often question well why don't we compile
everything<00:13:52.810><c> obviously</c><00:13:53.139><c> if</c><00:13:53.529><c> you</c><00:13:53.620><c> could</c><00:13:53.709><c> turn</c>

00:13:53.850 --> 00:13:53.860 align:start position:0%
everything obviously if you could turn
 

00:13:53.860 --> 00:13:57.480 align:start position:0%
everything obviously if you could turn
everything<00:13:54.250><c> into</c><00:13:54.490><c> into</c><00:13:55.269><c> native</c><00:13:55.689><c> code</c><00:13:56.490><c> it's</c>

00:13:57.480 --> 00:13:57.490 align:start position:0%
everything into into native code it's
 

00:13:57.490 --> 00:13:59.309 align:start position:0%
everything into into native code it's
going<00:13:57.639><c> to</c><00:13:57.699><c> run</c><00:13:57.850><c> a</c><00:13:57.880><c> lot</c><00:13:58.000><c> faster</c><00:13:58.060><c> than</c><00:13:58.630><c> if</c><00:13:58.779><c> we</c><00:13:58.930><c> if</c>

00:13:59.309 --> 00:13:59.319 align:start position:0%
going to run a lot faster than if we if
 

00:13:59.319 --> 00:14:02.249 align:start position:0%
going to run a lot faster than if we if
we<00:13:59.410><c> interpret</c><00:13:59.829><c> it</c><00:14:00.100><c> but</c><00:14:01.089><c> because</c><00:14:01.269><c> the</c><00:14:02.050><c> Java</c>

00:14:02.249 --> 00:14:02.259 align:start position:0%
we interpret it but because the Java
 

00:14:02.259 --> 00:14:05.550 align:start position:0%
we interpret it but because the Java
environment<00:14:03.060><c> compiles</c><00:14:04.060><c> code</c><00:14:04.990><c> on</c><00:14:05.199><c> the</c><00:14:05.350><c> fly</c>

00:14:05.550 --> 00:14:05.560 align:start position:0%
environment compiles code on the fly
 

00:14:05.560 --> 00:14:07.889 align:start position:0%
environment compiles code on the fly
using<00:14:05.800><c> just-in-time</c><00:14:06.250><c> compilers</c><00:14:06.899><c> it's</c>

00:14:07.889 --> 00:14:07.899 align:start position:0%
using just-in-time compilers it's
 

00:14:07.899 --> 00:14:10.019 align:start position:0%
using just-in-time compilers it's
there's<00:14:08.319><c> a</c><00:14:08.380><c> certain</c><00:14:08.649><c> amount</c><00:14:08.769><c> of</c><00:14:08.889><c> cost</c><00:14:09.189><c> at</c><00:14:09.819><c> both</c>

00:14:10.019 --> 00:14:10.029 align:start position:0%
there's a certain amount of cost at both
 

00:14:10.029 --> 00:14:12.120 align:start position:0%
there's a certain amount of cost at both
in<00:14:10.149><c> CPU</c><00:14:10.569><c> and</c><00:14:10.720><c> memory</c><00:14:10.839><c> usage</c><00:14:11.290><c> in</c><00:14:11.470><c> order</c><00:14:11.889><c> to</c><00:14:11.980><c> get</c>

00:14:12.120 --> 00:14:12.130 align:start position:0%
in CPU and memory usage in order to get
 

00:14:12.130 --> 00:14:15.179 align:start position:0%
in CPU and memory usage in order to get
things<00:14:12.339><c> compiled</c><00:14:12.850><c> and</c><00:14:13.620><c> when</c><00:14:14.620><c> you're</c><00:14:14.740><c> doing</c>

00:14:15.179 --> 00:14:15.189 align:start position:0%
things compiled and when you're doing
 

00:14:15.189 --> 00:14:17.189 align:start position:0%
things compiled and when you're doing
some<00:14:15.339><c> analysis</c><00:14:15.819><c> of</c><00:14:15.970><c> the</c><00:14:16.180><c> actual</c><00:14:16.569><c> VM</c><00:14:16.810><c> you</c><00:14:16.839><c> find</c>

00:14:17.189 --> 00:14:17.199 align:start position:0%
some analysis of the actual VM you find
 

00:14:17.199 --> 00:14:19.379 align:start position:0%
some analysis of the actual VM you find
out<00:14:17.319><c> that</c><00:14:17.470><c> it's</c><00:14:17.860><c> actually</c><00:14:18.009><c> cheaper</c><00:14:18.730><c> to</c>

00:14:19.379 --> 00:14:19.389 align:start position:0%
out that it's actually cheaper to
 

00:14:19.389 --> 00:14:20.610 align:start position:0%
out that it's actually cheaper to
interpret<00:14:19.839><c> the</c><00:14:19.959><c> code</c><00:14:20.139><c> because</c><00:14:20.500><c> the</c>

00:14:20.610 --> 00:14:20.620 align:start position:0%
interpret the code because the
 

00:14:20.620 --> 00:14:22.740 align:start position:0%
interpret the code because the
interpreter<00:14:21.009><c> is</c><00:14:21.160><c> fairly</c><00:14:21.790><c> fast</c><00:14:22.029><c> cheaper</c><00:14:22.660><c> to</c>

00:14:22.740 --> 00:14:22.750 align:start position:0%
interpreter is fairly fast cheaper to
 

00:14:22.750 --> 00:14:24.240 align:start position:0%
interpreter is fairly fast cheaper to
interpret<00:14:23.139><c> the</c><00:14:23.230><c> code</c><00:14:23.380><c> then</c><00:14:23.649><c> actually</c><00:14:23.949><c> go</c><00:14:24.069><c> off</c>

00:14:24.240 --> 00:14:24.250 align:start position:0%
interpret the code then actually go off
 

00:14:24.250 --> 00:14:27.300 align:start position:0%
interpret the code then actually go off
and<00:14:24.519><c> compile</c><00:14:25.000><c> it</c><00:14:25.029><c> and</c><00:14:25.360><c> try</c><00:14:25.899><c> to</c><00:14:25.959><c> run</c><00:14:26.170><c> it</c><00:14:26.319><c> so</c><00:14:27.220><c> we</c>

00:14:27.300 --> 00:14:27.310 align:start position:0%
and compile it and try to run it so we
 

00:14:27.310 --> 00:14:30.720 align:start position:0%
and compile it and try to run it so we
have<00:14:27.459><c> to</c><00:14:27.490><c> get</c><00:14:28.089><c> a</c><00:14:28.120><c> balance</c><00:14:28.569><c> there</c><00:14:28.889><c> on</c><00:14:29.889><c> what</c>

00:14:30.720 --> 00:14:30.730 align:start position:0%
have to get a balance there on what
 

00:14:30.730 --> 00:14:32.340 align:start position:0%
have to get a balance there on what
actually<00:14:31.060><c> gets</c><00:14:31.269><c> interpreted</c><00:14:31.689><c> and</c><00:14:31.990><c> what</c><00:14:32.139><c> gets</c>

00:14:32.340 --> 00:14:32.350 align:start position:0%
actually gets interpreted and what gets
 

00:14:32.350 --> 00:14:38.100 align:start position:0%
actually gets interpreted and what gets
compiled<00:14:33.630><c> okay</c><00:14:35.370><c> so</c><00:14:36.480><c> when</c><00:14:37.480><c> does</c><00:14:37.630><c> a</c><00:14:37.660><c> method</c><00:14:37.990><c> get</c>

00:14:38.100 --> 00:14:38.110 align:start position:0%
compiled okay so when does a method get
 

00:14:38.110 --> 00:14:40.740 align:start position:0%
compiled okay so when does a method get
compiled<00:14:38.559><c> well</c><00:14:39.309><c> first</c><00:14:39.550><c> of</c><00:14:39.670><c> all</c><00:14:39.790><c> everything</c>

00:14:40.740 --> 00:14:40.750 align:start position:0%
compiled well first of all everything
 

00:14:40.750 --> 00:14:43.290 align:start position:0%
compiled well first of all everything
that<00:14:41.019><c> starts</c><00:14:41.170><c> off</c><00:14:41.439><c> in</c><00:14:41.620><c> the</c><00:14:41.649><c> VM</c><00:14:42.089><c> starts</c><00:14:43.089><c> out</c><00:14:43.180><c> in</c>

00:14:43.290 --> 00:14:43.300 align:start position:0%
that starts off in the VM starts out in
 

00:14:43.300 --> 00:14:45.780 align:start position:0%
that starts off in the VM starts out in
the<00:14:43.389><c> interpreter</c><00:14:44.220><c> we</c><00:14:45.220><c> have</c><00:14:45.370><c> to</c><00:14:45.519><c> make</c><00:14:45.639><c> the</c>

00:14:45.780 --> 00:14:45.790 align:start position:0%
the interpreter we have to make the
 

00:14:45.790 --> 00:14:47.790 align:start position:0%
the interpreter we have to make the
assumption<00:14:46.209><c> that</c><00:14:46.240><c> the</c><00:14:46.449><c> method</c><00:14:46.779><c> will</c><00:14:47.319><c> run</c><00:14:47.559><c> best</c>

00:14:47.790 --> 00:14:47.800 align:start position:0%
assumption that the method will run best
 

00:14:47.800 --> 00:14:49.949 align:start position:0%
assumption that the method will run best
in<00:14:48.040><c> the</c><00:14:48.129><c> interpreter</c><00:14:48.579><c> the</c><00:14:49.389><c> first</c><00:14:49.569><c> few</c><00:14:49.779><c> times</c>

00:14:49.949 --> 00:14:49.959 align:start position:0%
in the interpreter the first few times
 

00:14:49.959 --> 00:14:52.679 align:start position:0%
in the interpreter the first few times
at<00:14:50.290><c> least</c><00:14:50.439><c> and</c><00:14:50.800><c> try</c><00:14:51.730><c> to</c><00:14:51.790><c> get</c><00:14:52.000><c> a</c><00:14:52.029><c> feel</c><00:14:52.329><c> for</c><00:14:52.509><c> what</c>

00:14:52.679 --> 00:14:52.689 align:start position:0%
at least and try to get a feel for what
 

00:14:52.689 --> 00:14:57.119 align:start position:0%
at least and try to get a feel for what
the<00:14:52.779><c> method</c><00:14:53.079><c> is</c><00:14:53.819><c> is</c><00:14:54.819><c> about</c><00:14:55.029><c> if</c><00:14:55.930><c> we</c><00:14:56.319><c> within</c><00:14:57.009><c> the</c>

00:14:57.119 --> 00:14:57.129 align:start position:0%
the method is is about if we within the
 

00:14:57.129 --> 00:14:58.439 align:start position:0%
the method is is about if we within the
interpreter<00:14:57.519><c> we</c><00:14:57.610><c> actually</c><00:14:57.879><c> have</c><00:14:58.000><c> monitor</c>

00:14:58.439 --> 00:14:58.449 align:start position:0%
interpreter we actually have monitor
 

00:14:58.449 --> 00:15:01.740 align:start position:0%
interpreter we actually have monitor
monitoring<00:14:59.339><c> tools</c><00:15:00.339><c> which</c><00:15:00.639><c> count</c><00:15:01.360><c> the</c><00:15:01.509><c> number</c>

00:15:01.740 --> 00:15:01.750 align:start position:0%
monitoring tools which count the number
 

00:15:01.750 --> 00:15:03.190 align:start position:0%
monitoring tools which count the number
of<00:15:01.839><c> times</c><00:15:02.050><c> a</c><00:15:02.199><c> particular</c><00:15:02.290><c> method</c>

00:15:03.190 --> 00:15:03.200 align:start position:0%
of times a particular method
 

00:15:03.200 --> 00:15:06.370 align:start position:0%
of times a particular method
and<00:15:03.320><c> vote</c><00:15:03.560><c> and</c><00:15:04.240><c> once</c><00:15:05.240><c> the</c><00:15:05.660><c> method</c><00:15:06.110><c> is</c><00:15:06.230><c> invoked</c>

00:15:06.370 --> 00:15:06.380 align:start position:0%
and vote and once the method is invoked
 

00:15:06.380 --> 00:15:07.960 align:start position:0%
and vote and once the method is invoked
a<00:15:06.650><c> few</c><00:15:06.830><c> times</c><00:15:07.070><c> and</c><00:15:07.340><c> in</c><00:15:07.520><c> the</c><00:15:07.550><c> case</c><00:15:07.730><c> of</c><00:15:07.910><c> the</c>

00:15:07.960 --> 00:15:07.970 align:start position:0%
a few times and in the case of the
 

00:15:07.970 --> 00:15:10.360 align:start position:0%
a few times and in the case of the
hotspot<00:15:08.300><c> VM</c><00:15:08.570><c> client</c><00:15:08.900><c> vm</c><00:15:09.020><c> once</c><00:15:09.800><c> it's</c><00:15:09.950><c> invoked</c><00:15:10.250><c> a</c>

00:15:10.360 --> 00:15:10.370 align:start position:0%
hotspot VM client vm once it's invoked a
 

00:15:10.370 --> 00:15:11.290 align:start position:0%
hotspot VM client vm once it's invoked a
thousand<00:15:10.760><c> times</c>

00:15:11.290 --> 00:15:11.300 align:start position:0%
thousand times
 

00:15:11.300 --> 00:15:15.340 align:start position:0%
thousand times
then<00:15:11.840><c> we</c><00:15:12.310><c> siphon</c><00:15:13.310><c> it</c><00:15:13.400><c> off</c><00:15:13.550><c> to</c><00:15:13.790><c> the</c><00:15:14.260><c> to</c><00:15:15.260><c> the</c>

00:15:15.340 --> 00:15:15.350 align:start position:0%
then we siphon it off to the to the
 

00:15:15.350 --> 00:15:17.110 align:start position:0%
then we siphon it off to the to the
compiler<00:15:15.620><c> and</c><00:15:16.220><c> the</c><00:15:16.310><c> compiler</c><00:15:16.640><c> generates</c>

00:15:17.110 --> 00:15:17.120 align:start position:0%
compiler and the compiler generates
 

00:15:17.120 --> 00:15:19.690 align:start position:0%
compiler and the compiler generates
native<00:15:17.780><c> code</c><00:15:17.990><c> so</c><00:15:18.800><c> that</c><00:15:18.830><c> so</c><00:15:19.430><c> the</c><00:15:19.550><c> one</c>

00:15:19.690 --> 00:15:19.700 align:start position:0%
native code so that so the one
 

00:15:19.700 --> 00:15:22.750 align:start position:0%
native code so that so the one
thousandth<00:15:20.600><c> and</c><00:15:20.810><c> first</c><00:15:21.050><c> time</c><00:15:21.290><c> that</c><00:15:21.980><c> the</c>

00:15:22.750 --> 00:15:22.760 align:start position:0%
thousandth and first time that the
 

00:15:22.760 --> 00:15:26.380 align:start position:0%
thousandth and first time that the
method<00:15:23.330><c> is</c><00:15:23.420><c> invoked</c><00:15:24.310><c> we</c><00:15:25.310><c> we</c><00:15:25.790><c> fire</c><00:15:26.030><c> off</c><00:15:26.060><c> it</c>

00:15:26.380 --> 00:15:26.390 align:start position:0%
method is invoked we we fire off it
 

00:15:26.390 --> 00:15:28.690 align:start position:0%
method is invoked we we fire off it
fired<00:15:26.690><c> off</c><00:15:26.900><c> to</c><00:15:27.080><c> the</c><00:15:27.200><c> native</c><00:15:27.800><c> code</c><00:15:27.950><c> so</c><00:15:28.400><c> hands</c><00:15:28.580><c> it</c>

00:15:28.690 --> 00:15:28.700 align:start position:0%
fired off to the native code so hands it
 

00:15:28.700 --> 00:15:31.810 align:start position:0%
fired off to the native code so hands it
starts<00:15:28.940><c> running</c><00:15:29.060><c> faster</c><00:15:29.960><c> at</c><00:15:30.050><c> that</c><00:15:30.110><c> point</c><00:15:30.820><c> now</c>

00:15:31.810 --> 00:15:31.820 align:start position:0%
starts running faster at that point now
 

00:15:31.820 --> 00:15:34.420 align:start position:0%
starts running faster at that point now
the<00:15:32.050><c> invocation</c><00:15:33.050><c> count</c><00:15:33.290><c> is</c><00:15:33.440><c> not</c><00:15:33.620><c> sufficient</c>

00:15:34.420 --> 00:15:34.430 align:start position:0%
the invocation count is not sufficient
 

00:15:34.430 --> 00:15:37.210 align:start position:0%
the invocation count is not sufficient
in<00:15:34.700><c> to</c><00:15:35.540><c> determine</c><00:15:36.110><c> whether</c><00:15:36.260><c> a</c><00:15:36.350><c> method</c><00:15:36.680><c> is</c><00:15:36.830><c> is</c>

00:15:37.210 --> 00:15:37.220 align:start position:0%
in to determine whether a method is is
 

00:15:37.220 --> 00:15:40.690 align:start position:0%
in to determine whether a method is is
hot<00:15:37.520><c> or</c><00:15:37.820><c> is</c><00:15:38.120><c> readily</c><00:15:38.660><c> used</c><00:15:39.020><c> or</c><00:15:40.010><c> used</c><00:15:40.220><c> fairly</c>

00:15:40.690 --> 00:15:40.700 align:start position:0%
hot or is readily used or used fairly
 

00:15:40.700 --> 00:15:43.600 align:start position:0%
hot or is readily used or used fairly
often<00:15:40.940><c> so</c><00:15:41.210><c> we</c><00:15:42.020><c> also</c><00:15:42.170><c> keep</c><00:15:42.440><c> a</c><00:15:42.560><c> track</c><00:15:43.070><c> of</c><00:15:43.400><c> the</c>

00:15:43.600 --> 00:15:43.610 align:start position:0%
often so we also keep a track of the
 

00:15:43.610 --> 00:15:46.360 align:start position:0%
often so we also keep a track of the
number<00:15:43.850><c> of</c><00:15:43.970><c> time</c><00:15:44.210><c> as</c><00:15:44.480><c> a</c><00:15:44.510><c> method</c><00:15:44.870><c> loops</c><00:15:45.370><c> so</c>

00:15:46.360 --> 00:15:46.370 align:start position:0%
number of time as a method loops so
 

00:15:46.370 --> 00:15:48.010 align:start position:0%
number of time as a method loops so
within<00:15:46.700><c> within</c><00:15:47.030><c> the</c><00:15:47.270><c> loop</c><00:15:47.420><c> code</c><00:15:47.660><c> within</c><00:15:47.900><c> the</c>

00:15:48.010 --> 00:15:48.020 align:start position:0%
within within the loop code within the
 

00:15:48.020 --> 00:15:49.750 align:start position:0%
within within the loop code within the
turf<00:15:48.290><c> the</c><00:15:48.560><c> interpreter</c><00:15:48.950><c> every</c><00:15:49.130><c> time</c><00:15:49.310><c> a</c><00:15:49.340><c> method</c>

00:15:49.750 --> 00:15:49.760 align:start position:0%
turf the interpreter every time a method
 

00:15:49.760 --> 00:15:52.210 align:start position:0%
turf the interpreter every time a method
loops<00:15:50.000><c> we</c><00:15:50.210><c> also</c><00:15:50.390><c> increment</c><00:15:50.960><c> the</c><00:15:51.800><c> invocation</c>

00:15:52.210 --> 00:15:52.220 align:start position:0%
loops we also increment the invocation
 

00:15:52.220 --> 00:15:55.870 align:start position:0%
loops we also increment the invocation
counter<00:15:52.700><c> so</c><00:15:53.830><c> so</c><00:15:54.830><c> that</c><00:15:54.980><c> a</c><00:15:55.010><c> method</c><00:15:55.310><c> that</c><00:15:55.460><c> loops</c><00:15:55.760><c> a</c>

00:15:55.870 --> 00:15:55.880 align:start position:0%
counter so so that a method that loops a
 

00:15:55.880 --> 00:15:57.220 align:start position:0%
counter so so that a method that loops a
lot<00:15:56.060><c> is</c><00:15:56.300><c> going</c><00:15:56.510><c> to</c><00:15:56.570><c> get</c><00:15:56.690><c> compiled</c><00:15:56.960><c> a</c><00:15:57.080><c> lot</c>

00:15:57.220 --> 00:15:57.230 align:start position:0%
lot is going to get compiled a lot
 

00:15:57.230 --> 00:15:59.020 align:start position:0%
lot is going to get compiled a lot
quicker<00:15:57.470><c> so</c><00:15:57.590><c> if</c><00:15:57.830><c> you</c><00:15:57.920><c> have</c><00:15:58.100><c> a</c><00:15:58.130><c> method</c><00:15:58.520><c> that</c><00:15:58.700><c> has</c>

00:15:59.020 --> 00:15:59.030 align:start position:0%
quicker so if you have a method that has
 

00:15:59.030 --> 00:16:00.970 align:start position:0%
quicker so if you have a method that has
a<00:15:59.360><c> loop</c><00:15:59.780><c> that</c><00:15:59.990><c> iterates</c><00:16:00.080><c> a</c><00:16:00.380><c> hundred</c><00:16:00.710><c> times</c>

00:16:00.970 --> 00:16:00.980 align:start position:0%
a loop that iterates a hundred times
 

00:16:00.980 --> 00:16:02.860 align:start position:0%
a loop that iterates a hundred times
then<00:16:01.850><c> it's</c><00:16:02.030><c> only</c><00:16:02.090><c> going</c><00:16:02.270><c> to</c><00:16:02.330><c> take</c><00:16:02.420><c> ten</c>

00:16:02.860 --> 00:16:02.870 align:start position:0%
then it's only going to take ten
 

00:16:02.870 --> 00:16:05.440 align:start position:0%
then it's only going to take ten
invocations<00:16:03.470><c> of</c><00:16:03.890><c> that</c><00:16:04.550><c> method</c><00:16:04.910><c> to</c><00:16:05.030><c> actually</c>

00:16:05.440 --> 00:16:05.450 align:start position:0%
invocations of that method to actually
 

00:16:05.450 --> 00:16:08.040 align:start position:0%
invocations of that method to actually
trigger<00:16:05.900><c> the</c><00:16:06.020><c> fact</c><00:16:06.320><c> that</c><00:16:06.410><c> it</c><00:16:06.560><c> gets</c><00:16:06.650><c> compiled</c>

00:16:08.040 --> 00:16:08.050 align:start position:0%
trigger the fact that it gets compiled
 

00:16:08.050 --> 00:16:11.590 align:start position:0%
trigger the fact that it gets compiled
now<00:16:09.050><c> there</c><00:16:09.200><c> are</c><00:16:09.260><c> certain</c><00:16:09.500><c> methods</c><00:16:09.860><c> that</c><00:16:10.600><c> that</c>

00:16:11.590 --> 00:16:11.600 align:start position:0%
now there are certain methods that that
 

00:16:11.600 --> 00:16:13.420 align:start position:0%
now there are certain methods that that
tend<00:16:12.140><c> to</c><00:16:12.200><c> loop</c><00:16:12.470><c> for</c><00:16:12.650><c> a</c><00:16:12.710><c> long</c><00:16:12.860><c> period</c><00:16:13.220><c> of</c><00:16:13.250><c> time</c>

00:16:13.420 --> 00:16:13.430 align:start position:0%
tend to loop for a long period of time
 

00:16:13.430 --> 00:16:15.700 align:start position:0%
tend to loop for a long period of time
maybe<00:16:13.670><c> ten</c><00:16:13.910><c> thousand</c><00:16:14.360><c> times</c><00:16:14.510><c> or</c><00:16:14.930><c> a</c><00:16:15.170><c> hundred</c>

00:16:15.700 --> 00:16:15.710 align:start position:0%
maybe ten thousand times or a hundred
 

00:16:15.710 --> 00:16:17.380 align:start position:0%
maybe ten thousand times or a hundred
thousand<00:16:16.340><c> times</c><00:16:16.430><c> depending</c><00:16:16.880><c> on</c><00:16:17.000><c> or</c><00:16:17.240><c> maybe</c>

00:16:17.380 --> 00:16:17.390 align:start position:0%
thousand times depending on or maybe
 

00:16:17.390 --> 00:16:18.640 align:start position:0%
thousand times depending on or maybe
forever<00:16:17.660><c> depending</c><00:16:18.320><c> on</c><00:16:18.410><c> the</c><00:16:18.500><c> type</c><00:16:18.620><c> of</c>

00:16:18.640 --> 00:16:18.650 align:start position:0%
forever depending on the type of
 

00:16:18.650 --> 00:16:21.970 align:start position:0%
forever depending on the type of
application<00:16:18.890><c> you</c><00:16:19.400><c> have</c><00:16:19.430><c> and</c><00:16:20.800><c> one</c><00:16:21.800><c> of</c><00:16:21.830><c> the</c>

00:16:21.970 --> 00:16:21.980 align:start position:0%
application you have and one of the
 

00:16:21.980 --> 00:16:23.680 align:start position:0%
application you have and one of the
things<00:16:22.190><c> that</c><00:16:22.310><c> we've</c><00:16:22.400><c> added</c><00:16:22.610><c> in</c><00:16:22.970><c> in</c><00:16:23.360><c> the</c><00:16:23.480><c> last</c>

00:16:23.680 --> 00:16:23.690 align:start position:0%
things that we've added in in the last
 

00:16:23.690 --> 00:16:24.760 align:start position:0%
things that we've added in in the last
year<00:16:23.930><c> is</c><00:16:24.050><c> something</c><00:16:24.200><c> called</c><00:16:24.440><c> on</c><00:16:24.560><c> stack</c>

00:16:24.760 --> 00:16:24.770 align:start position:0%
year is something called on stack
 

00:16:24.770 --> 00:16:27.640 align:start position:0%
year is something called on stack
replacement<00:16:25.340><c> which</c><00:16:25.490><c> allows</c><00:16:25.820><c> us</c><00:16:26.090><c> to</c><00:16:26.620><c> take</c><00:16:27.620><c> a</c>

00:16:27.640 --> 00:16:27.650 align:start position:0%
replacement which allows us to take a
 

00:16:27.650 --> 00:16:30.070 align:start position:0%
replacement which allows us to take a
method<00:16:27.890><c> that</c><00:16:28.190><c> is</c><00:16:28.310><c> hot</c><00:16:28.550><c> and</c><00:16:29.120><c> is</c><00:16:29.900><c> actually</c>

00:16:30.070 --> 00:16:30.080 align:start position:0%
method that is hot and is actually
 

00:16:30.080 --> 00:16:34.150 align:start position:0%
method that is hot and is actually
looping<00:16:30.800><c> around</c><00:16:32.200><c> create</c><00:16:33.200><c> compile</c><00:16:33.560><c> code</c><00:16:33.830><c> for</c>

00:16:34.150 --> 00:16:34.160 align:start position:0%
looping around create compile code for
 

00:16:34.160 --> 00:16:37.060 align:start position:0%
looping around create compile code for
it<00:16:34.310><c> and</c><00:16:35.050><c> replace</c><00:16:36.050><c> the</c><00:16:36.230><c> interpreted</c><00:16:36.710><c> version</c>

00:16:37.060 --> 00:16:37.070 align:start position:0%
it and replace the interpreted version
 

00:16:37.070 --> 00:16:40.330 align:start position:0%
it and replace the interpreted version
of<00:16:37.190><c> that</c><00:16:38.140><c> invocation</c><00:16:39.140><c> into</c><00:16:39.890><c> a</c><00:16:39.920><c> compiled</c>

00:16:40.330 --> 00:16:40.340 align:start position:0%
of that invocation into a compiled
 

00:16:40.340 --> 00:16:41.920 align:start position:0%
of that invocation into a compiled
version<00:16:40.670><c> we</c><00:16:40.760><c> can</c><00:16:40.910><c> continue</c><00:16:41.240><c> on</c><00:16:41.390><c> in</c><00:16:41.570><c> a</c><00:16:41.630><c> compiled</c>

00:16:41.920 --> 00:16:41.930 align:start position:0%
version we can continue on in a compiled
 

00:16:41.930 --> 00:16:46.210 align:start position:0%
version we can continue on in a compiled
code<00:16:42.200><c> so</c><00:16:42.830><c> this</c><00:16:42.980><c> is</c><00:16:43.780><c> pretty</c><00:16:44.780><c> neat</c><00:16:45.050><c> a</c><00:16:45.100><c> notion</c><00:16:46.100><c> and</c>

00:16:46.210 --> 00:16:46.220 align:start position:0%
code so this is pretty neat a notion and
 

00:16:46.220 --> 00:16:49.360 align:start position:0%
code so this is pretty neat a notion and
hence<00:16:47.110><c> almost</c><00:16:48.110><c> all</c><00:16:48.350><c> the</c><00:16:48.860><c> things</c><00:16:48.890><c> that</c><00:16:49.250><c> are</c>

00:16:49.360 --> 00:16:49.370 align:start position:0%
hence almost all the things that are
 

00:16:49.370 --> 00:16:51.430 align:start position:0%
hence almost all the things that are
hotspots<00:16:49.550><c> in</c><00:16:50.060><c> your</c><00:16:50.330><c> application</c><00:16:51.260><c> get</c>

00:16:51.430 --> 00:16:51.440 align:start position:0%
hotspots in your application get
 

00:16:51.440 --> 00:16:55.570 align:start position:0%
hotspots in your application get
compiled<00:16:52.040><c> to</c><00:16:53.740><c> get</c><00:16:54.740><c> compiled</c><00:16:55.100><c> when</c><00:16:55.310><c> they</c><00:16:55.430><c> need</c>

00:16:55.570 --> 00:16:55.580 align:start position:0%
compiled to get compiled when they need
 

00:16:55.580 --> 00:16:58.510 align:start position:0%
compiled to get compiled when they need
to<00:16:55.700><c> be</c><00:16:55.870><c> yeah</c><00:16:56.870><c> last</c><00:16:57.230><c> year</c><00:16:57.350><c> I</c><00:16:57.470><c> had</c><00:16:57.740><c> a</c><00:16:57.770><c> list</c><00:16:58.370><c> of</c>

00:16:58.510 --> 00:16:58.520 align:start position:0%
to be yeah last year I had a list of
 

00:16:58.520 --> 00:17:00.100 align:start position:0%
to be yeah last year I had a list of
things<00:16:58.700><c> that</c><00:16:58.850><c> don't</c><00:16:58.970><c> get</c><00:16:59.120><c> compiled</c><00:16:59.480><c> at</c><00:16:59.750><c> this</c>

00:17:00.100 --> 00:17:00.110 align:start position:0%
things that don't get compiled at this
 

00:17:00.110 --> 00:17:01.750 align:start position:0%
things that don't get compiled at this
point<00:17:00.380><c> almost</c><00:17:00.680><c> anything</c><00:17:01.160><c> that's</c><00:17:01.400><c> a</c><00:17:01.460><c> good</c>

00:17:01.750 --> 00:17:01.760 align:start position:0%
point almost anything that's a good
 

00:17:01.760 --> 00:17:03.400 align:start position:0%
point almost anything that's a good
candidate<00:17:02.150><c> or</c><00:17:02.420><c> as</c><00:17:02.570><c> a</c><00:17:02.600><c> hot</c><00:17:02.780><c> spot</c><00:17:02.990><c> in</c><00:17:03.140><c> your</c><00:17:03.170><c> code</c>

00:17:03.400 --> 00:17:03.410 align:start position:0%
candidate or as a hot spot in your code
 

00:17:03.410 --> 00:17:04.990 align:start position:0%
candidate or as a hot spot in your code
will<00:17:03.620><c> get</c><00:17:03.740><c> compiled</c><00:17:04.100><c> and</c><00:17:04.339><c> there's</c><00:17:04.760><c> very</c><00:17:04.940><c> few</c>

00:17:04.990 --> 00:17:05.000 align:start position:0%
will get compiled and there's very few
 

00:17:05.000 --> 00:17:07.710 align:start position:0%
will get compiled and there's very few
things<00:17:05.270><c> like</c><00:17:05.449><c> a</c><00:17:05.510><c> couple</c><00:17:05.959><c> of</c><00:17:06.020><c> Java</c><00:17:06.490><c> assembler</c>

00:17:07.710 --> 00:17:07.720 align:start position:0%
things like a couple of Java assembler
 

00:17:07.720 --> 00:17:10.300 align:start position:0%
things like a couple of Java assembler
concoctions<00:17:08.720><c> that</c><00:17:08.810><c> that</c><00:17:09.380><c> don't</c><00:17:09.530><c> get</c><00:17:09.680><c> get</c>

00:17:10.300 --> 00:17:10.310 align:start position:0%
concoctions that that don't get get
 

00:17:10.310 --> 00:17:15.130 align:start position:0%
concoctions that that don't get get
compiled<00:17:10.640><c> in</c><00:17:10.880><c> the</c><00:17:11.000><c> jck</c><00:17:12.160><c> so</c><00:17:13.160><c> using</c><00:17:14.150><c> these</c><00:17:14.270><c> the</c>

00:17:15.130 --> 00:17:15.140 align:start position:0%
compiled in the jck so using these the
 

00:17:15.140 --> 00:17:17.260 align:start position:0%
compiled in the jck so using these the
criteria<00:17:15.680><c> of</c><00:17:15.920><c> a</c><00:17:16.699><c> number</c><00:17:16.939><c> of</c>

00:17:17.260 --> 00:17:17.270 align:start position:0%
criteria of a number of
 

00:17:17.270 --> 00:17:19.600 align:start position:0%
criteria of a number of
occasions<00:17:17.660><c> the</c><00:17:17.720><c> number</c><00:17:17.930><c> times</c><00:17:18.140><c> it</c><00:17:18.320><c> loops</c><00:17:18.610><c> we</c>

00:17:19.600 --> 00:17:19.610 align:start position:0%
occasions the number times it loops we
 

00:17:19.610 --> 00:17:22.840 align:start position:0%
occasions the number times it loops we
can<00:17:19.760><c> actually</c><00:17:20.890><c> sort</c><00:17:21.890><c> of</c><00:17:21.980><c> find</c><00:17:22.250><c> out</c><00:17:22.370><c> what</c><00:17:22.580><c> is</c><00:17:22.820><c> a</c>

00:17:22.840 --> 00:17:22.850 align:start position:0%
can actually sort of find out what is a
 

00:17:22.850 --> 00:17:24.790 align:start position:0%
can actually sort of find out what is a
what<00:17:23.480><c> is</c><00:17:23.660><c> actually</c><00:17:24.050><c> hot</c><00:17:24.230><c> in</c><00:17:24.410><c> your</c><00:17:24.440><c> in</c><00:17:24.770><c> your</c>

00:17:24.790 --> 00:17:24.800 align:start position:0%
what is actually hot in your in your
 

00:17:24.800 --> 00:17:26.620 align:start position:0%
what is actually hot in your in your
code<00:17:25.100><c> and</c><00:17:25.459><c> we</c><00:17:25.550><c> find</c><00:17:25.730><c> out</c><00:17:25.850><c> it's</c><00:17:26.030><c> only</c><00:17:26.089><c> about</c><00:17:26.209><c> 5%</c>

00:17:26.620 --> 00:17:26.630 align:start position:0%
code and we find out it's only about 5%
 

00:17:26.630 --> 00:17:28.030 align:start position:0%
code and we find out it's only about 5%
of<00:17:26.870><c> the</c><00:17:26.959><c> byte</c><00:17:27.110><c> codes</c><00:17:27.350><c> at</c><00:17:27.530><c> 5%</c><00:17:27.950><c> of</c><00:17:28.010><c> your</c>

00:17:28.030 --> 00:17:28.040 align:start position:0%
of the byte codes at 5% of your
 

00:17:28.040 --> 00:17:31.480 align:start position:0%
of the byte codes at 5% of your
applications<00:17:28.580><c> or</c><00:17:28.970><c> methods</c><00:17:29.600><c> that</c><00:17:29.890><c> that</c><00:17:30.890><c> need</c>

00:17:31.480 --> 00:17:31.490 align:start position:0%
applications or methods that that need
 

00:17:31.490 --> 00:17:33.160 align:start position:0%
applications or methods that that need
to<00:17:31.610><c> be</c><00:17:31.730><c> compiled</c><00:17:32.120><c> and</c><00:17:32.270><c> hints</c><00:17:32.540><c> are</c><00:17:32.660><c> hot</c><00:17:32.870><c> in</c><00:17:33.140><c> your</c>

00:17:33.160 --> 00:17:33.170 align:start position:0%
to be compiled and hints are hot in your
 

00:17:33.170 --> 00:17:35.800 align:start position:0%
to be compiled and hints are hot in your
application<00:17:33.860><c> and</c><00:17:34.180><c> Andy</c><00:17:35.180><c> will</c><00:17:35.330><c> be</c><00:17:35.360><c> going</c><00:17:35.570><c> over</c>

00:17:35.800 --> 00:17:35.810 align:start position:0%
application and Andy will be going over
 

00:17:35.810 --> 00:17:38.410 align:start position:0%
application and Andy will be going over
some<00:17:35.840><c> of</c><00:17:36.020><c> the</c><00:17:36.110><c> tools</c><00:17:36.320><c> that</c><00:17:37.060><c> will</c><00:17:38.060><c> to</c><00:17:38.180><c> allow</c><00:17:38.270><c> you</c>

00:17:38.410 --> 00:17:38.420 align:start position:0%
some of the tools that will to allow you
 

00:17:38.420 --> 00:17:40.060 align:start position:0%
some of the tools that will to allow you
to<00:17:38.630><c> determine</c><00:17:39.110><c> which</c><00:17:39.290><c> of</c><00:17:39.320><c> those</c><00:17:39.470><c> methods</c><00:17:39.920><c> are</c>

00:17:40.060 --> 00:17:40.070 align:start position:0%
to determine which of those methods are
 

00:17:40.070 --> 00:17:41.650 align:start position:0%
to determine which of those methods are
actually<00:17:40.670><c> getting</c><00:17:40.940><c> compiled</c><00:17:41.300><c> the</c><00:17:41.420><c> native</c>

00:17:41.650 --> 00:17:41.660 align:start position:0%
actually getting compiled the native
 

00:17:41.660 --> 00:17:45.280 align:start position:0%
actually getting compiled the native
code<00:17:41.780><c> native</c><00:17:42.260><c> code</c><00:17:42.440><c> and</c><00:17:42.620><c> we</c><00:17:43.130><c> can</c><00:17:44.170><c> once</c><00:17:45.170><c> we've</c>

00:17:45.280 --> 00:17:45.290 align:start position:0%
code native code and we can once we've
 

00:17:45.290 --> 00:17:47.170 align:start position:0%
code native code and we can once we've
got<00:17:45.410><c> that</c><00:17:45.530><c> information</c><00:17:45.680><c> we</c><00:17:46.190><c> can</c><00:17:46.370><c> start</c>

00:17:47.170 --> 00:17:47.180 align:start position:0%
got that information we can start
 

00:17:47.180 --> 00:17:48.370 align:start position:0%
got that information we can start
tweaking<00:17:47.420><c> those</c><00:17:47.660><c> particular</c><00:17:47.960><c> methods</c>

00:17:48.370 --> 00:17:48.380 align:start position:0%
tweaking those particular methods
 

00:17:48.380 --> 00:17:49.330 align:start position:0%
tweaking those particular methods
because<00:17:48.530><c> those</c><00:17:48.650><c> are</c><00:17:48.740><c> the</c><00:17:48.800><c> methods</c><00:17:49.100><c> that</c><00:17:49.190><c> are</c>

00:17:49.330 --> 00:17:49.340 align:start position:0%
because those are the methods that are
 

00:17:49.340 --> 00:17:53.230 align:start position:0%
because those are the methods that are
that<00:17:49.850><c> are</c><00:17:49.970><c> going</c><00:17:50.090><c> to</c><00:17:50.180><c> be</c><00:17:51.140><c> problematic</c><00:17:51.940><c> so</c><00:17:52.940><c> I'm</c>

00:17:53.230 --> 00:17:53.240 align:start position:0%
that are going to be problematic so I'm
 

00:17:53.240 --> 00:17:56.200 align:start position:0%
that are going to be problematic so I'm
just<00:17:53.540><c> going</c><00:17:53.660><c> to</c><00:17:53.750><c> go</c><00:17:53.810><c> through</c><00:17:54.020><c> and</c><00:17:55.180><c> discuss</c><00:17:56.180><c> a</c>

00:17:56.200 --> 00:17:56.210 align:start position:0%
just going to go through and discuss a
 

00:17:56.210 --> 00:17:59.440 align:start position:0%
just going to go through and discuss a
few<00:17:56.480><c> things</c><00:17:56.900><c> that</c><00:17:57.140><c> you</c><00:17:57.230><c> can</c><00:17:57.260><c> do</c><00:17:58.160><c> to</c><00:17:58.520><c> to</c><00:17:59.210><c> get</c><00:17:59.330><c> the</c>

00:17:59.440 --> 00:17:59.450 align:start position:0%
few things that you can do to to get the
 

00:17:59.450 --> 00:18:01.690 align:start position:0%
few things that you can do to to get the
best<00:17:59.570><c> performance</c><00:17:59.750><c> out</c><00:18:00.200><c> of</c><00:18:00.260><c> your</c><00:18:00.700><c> application</c>

00:18:01.690 --> 00:18:01.700 align:start position:0%
best performance out of your application
 

00:18:01.700 --> 00:18:05.040 align:start position:0%
best performance out of your application
and<00:18:01.850><c> types</c><00:18:02.420><c> of</c><00:18:02.540><c> things</c><00:18:02.720><c> that</c><00:18:02.900><c> you</c><00:18:03.410><c> can</c>

00:18:05.040 --> 00:18:05.050 align:start position:0%
and types of things that you can
 

00:18:05.050 --> 00:18:07.060 align:start position:0%
and types of things that you can
concentrate<00:18:06.050><c> on</c><00:18:06.230><c> once</c><00:18:06.560><c> you</c><00:18:06.650><c> find</c><00:18:06.830><c> out</c><00:18:06.890><c> what's</c>

00:18:07.060 --> 00:18:07.070 align:start position:0%
concentrate on once you find out what's
 

00:18:07.070 --> 00:18:09.700 align:start position:0%
concentrate on once you find out what's
hot<00:18:07.250><c> in</c><00:18:07.580><c> your</c><00:18:07.790><c> application</c><00:18:08.540><c> the</c><00:18:08.990><c> first</c><00:18:09.200><c> the</c>

00:18:09.700 --> 00:18:09.710 align:start position:0%
hot in your application the first the
 

00:18:09.710 --> 00:18:13.390 align:start position:0%
hot in your application the first the
most<00:18:09.980><c> important</c><00:18:10.400><c> thing</c><00:18:10.490><c> that's</c><00:18:12.400><c> constantly</c>

00:18:13.390 --> 00:18:13.400 align:start position:0%
most important thing that's constantly
 

00:18:13.400 --> 00:18:15.130 align:start position:0%
most important thing that's constantly
repeating<00:18:13.730><c> this</c><00:18:13.790><c> but</c><00:18:13.910><c> the</c><00:18:14.210><c> most</c><00:18:14.660><c> important</c>

00:18:15.130 --> 00:18:15.140 align:start position:0%
repeating this but the most important
 

00:18:15.140 --> 00:18:17.800 align:start position:0%
repeating this but the most important
thing<00:18:15.320><c> is</c><00:18:15.500><c> that</c><00:18:15.860><c> because</c><00:18:16.520><c> compilation</c><00:18:17.510><c> takes</c>

00:18:17.800 --> 00:18:17.810 align:start position:0%
thing is that because compilation takes
 

00:18:17.810 --> 00:18:21.160 align:start position:0%
thing is that because compilation takes
up<00:18:17.990><c> a</c><00:18:18.110><c> lot</c><00:18:18.320><c> of</c><00:18:18.760><c> resources</c><00:18:19.760><c> CPU</c><00:18:20.600><c> time</c><00:18:20.780><c> memory</c>

00:18:21.160 --> 00:18:21.170 align:start position:0%
up a lot of resources CPU time memory
 

00:18:21.170 --> 00:18:23.650 align:start position:0%
up a lot of resources CPU time memory
it's<00:18:21.680><c> it's</c><00:18:21.980><c> best</c><00:18:22.220><c> to</c><00:18:22.340><c> try</c><00:18:22.520><c> to</c><00:18:22.610><c> keep</c><00:18:22.820><c> down</c><00:18:22.850><c> the</c>

00:18:23.650 --> 00:18:23.660 align:start position:0%
it's it's best to try to keep down the
 

00:18:23.660 --> 00:18:26.610 align:start position:0%
it's it's best to try to keep down the
size<00:18:24.020><c> of</c><00:18:24.110><c> your</c><00:18:24.200><c> methods</c><00:18:24.830><c> down</c><00:18:25.240><c> because</c><00:18:26.240><c> then</c>

00:18:26.610 --> 00:18:26.620 align:start position:0%
size of your methods down because then
 

00:18:26.620 --> 00:18:28.780 align:start position:0%
size of your methods down because then
the<00:18:27.620><c> compiler</c><00:18:28.010><c> can</c><00:18:28.250><c> get</c><00:18:28.370><c> through</c><00:18:28.520><c> them</c><00:18:28.670><c> fairly</c>

00:18:28.780 --> 00:18:28.790 align:start position:0%
the compiler can get through them fairly
 

00:18:28.790 --> 00:18:31.570 align:start position:0%
the compiler can get through them fairly
quickly<00:18:28.970><c> and</c><00:18:29.510><c> if</c><00:18:29.930><c> only</c><00:18:30.620><c> a</c><00:18:30.650><c> small</c><00:18:31.100><c> portion</c><00:18:31.310><c> of</c>

00:18:31.570 --> 00:18:31.580 align:start position:0%
quickly and if only a small portion of
 

00:18:31.580 --> 00:18:33.250 align:start position:0%
quickly and if only a small portion of
your<00:18:31.640><c> if</c><00:18:32.360><c> your</c><00:18:32.510><c> method</c><00:18:32.750><c> is</c><00:18:32.870><c> actually</c><00:18:32.960><c> being</c>

00:18:33.250 --> 00:18:33.260 align:start position:0%
your if your method is actually being
 

00:18:33.260 --> 00:18:34.750 align:start position:0%
your if your method is actually being
used<00:18:33.590><c> all</c><00:18:33.830><c> the</c><00:18:33.980><c> time</c><00:18:34.160><c> maybe</c><00:18:34.340><c> you</c><00:18:34.490><c> have</c><00:18:34.610><c> some</c>

00:18:34.750 --> 00:18:34.760 align:start position:0%
used all the time maybe you have some
 

00:18:34.760 --> 00:18:36.880 align:start position:0%
used all the time maybe you have some
exception<00:18:35.210><c> code</c><00:18:35.450><c> in</c><00:18:35.660><c> there</c><00:18:35.840><c> or</c><00:18:35.990><c> some</c><00:18:36.560><c> special</c>

00:18:36.880 --> 00:18:36.890 align:start position:0%
exception code in there or some special
 

00:18:36.890 --> 00:18:40.690 align:start position:0%
exception code in there or some special
case<00:18:37.070><c> code</c><00:18:37.690><c> it's</c><00:18:38.690><c> doing</c><00:18:39.050><c> a</c><00:18:39.110><c> disservice</c><00:18:39.320><c> to</c><00:18:39.700><c> the</c>

00:18:40.690 --> 00:18:40.700 align:start position:0%
case code it's doing a disservice to the
 

00:18:40.700 --> 00:18:42.550 align:start position:0%
case code it's doing a disservice to the
compilation<00:18:41.240><c> process</c><00:18:41.390><c> by</c><00:18:41.780><c> having</c><00:18:42.290><c> it</c>

00:18:42.550 --> 00:18:42.560 align:start position:0%
compilation process by having it
 

00:18:42.560 --> 00:18:45.040 align:start position:0%
compilation process by having it
embedded<00:18:43.520><c> in</c><00:18:43.760><c> your</c><00:18:43.910><c> in</c><00:18:44.120><c> your</c><00:18:44.150><c> method</c><00:18:44.570><c> so</c><00:18:45.020><c> you</c>

00:18:45.040 --> 00:18:45.050 align:start position:0%
embedded in your in your method so you
 

00:18:45.050 --> 00:18:47.110 align:start position:0%
embedded in your in your method so you
should<00:18:45.320><c> try</c><00:18:45.410><c> to</c><00:18:45.470><c> break</c><00:18:45.740><c> that</c><00:18:45.890><c> code</c><00:18:46.160><c> out</c><00:18:46.730><c> into</c>

00:18:47.110 --> 00:18:47.120 align:start position:0%
should try to break that code out into
 

00:18:47.120 --> 00:18:49.060 align:start position:0%
should try to break that code out into
separate<00:18:47.720><c> separate</c><00:18:48.230><c> methods</c><00:18:48.530><c> and</c><00:18:48.710><c> try</c><00:18:49.010><c> to</c>

00:18:49.060 --> 00:18:49.070 align:start position:0%
separate separate methods and try to
 

00:18:49.070 --> 00:18:51.130 align:start position:0%
separate separate methods and try to
keep<00:18:49.340><c> your</c><00:18:49.520><c> method</c><00:18:49.880><c> focused</c><00:18:50.330><c> small</c><00:18:50.960><c> and</c>

00:18:51.130 --> 00:18:51.140 align:start position:0%
keep your method focused small and
 

00:18:51.140 --> 00:18:53.710 align:start position:0%
keep your method focused small and
focused<00:18:51.290><c> so</c><00:18:52.040><c> that</c><00:18:52.070><c> it</c><00:18:52.760><c> can</c><00:18:52.940><c> compile</c><00:18:53.300><c> quickly</c>

00:18:53.710 --> 00:18:53.720 align:start position:0%
focused so that it can compile quickly
 

00:18:53.720 --> 00:18:55.480 align:start position:0%
focused so that it can compile quickly
and<00:18:53.840><c> then</c><00:18:53.960><c> go</c><00:18:54.290><c> off</c><00:18:54.440><c> and</c><00:18:54.470><c> execute</c><00:18:54.950><c> and</c><00:18:55.310><c> then</c><00:18:55.400><c> you</c>

00:18:55.480 --> 00:18:55.490 align:start position:0%
and then go off and execute and then you
 

00:18:55.490 --> 00:18:57.550 align:start position:0%
and then go off and execute and then you
get<00:18:55.610><c> a</c><00:18:55.640><c> good</c><00:18:56.120><c> locality</c><00:18:56.660><c> also</c><00:18:56.990><c> two</c><00:18:57.050><c> of</c><00:18:57.410><c> the</c>

00:18:57.550 --> 00:18:57.560 align:start position:0%
get a good locality also two of the
 

00:18:57.560 --> 00:18:59.950 align:start position:0%
get a good locality also two of the
execution<00:18:58.010><c> of</c><00:18:58.070><c> the</c><00:18:58.160><c> code</c><00:18:58.340><c> so</c><00:18:59.330><c> as</c><00:18:59.570><c> I</c><00:18:59.660><c> say</c><00:18:59.780><c> rep</c>

00:18:59.950 --> 00:18:59.960 align:start position:0%
execution of the code so as I say rep
 

00:18:59.960 --> 00:19:02.320 align:start position:0%
execution of the code so as I say rep
separate<00:19:00.860><c> rarely</c><00:19:01.400><c> use</c><00:19:01.580><c> code</c><00:19:01.880><c> out</c><00:19:02.090><c> in</c><00:19:02.240><c> two</c>

00:19:02.320 --> 00:19:02.330 align:start position:0%
separate rarely use code out in two
 

00:19:02.330 --> 00:19:05.800 align:start position:0%
separate rarely use code out in two
separate<00:19:02.600><c> methods</c><00:19:03.520><c> as</c><00:19:04.520><c> far</c><00:19:04.760><c> as</c><00:19:04.880><c> saying</c><00:19:05.660><c> to</c>

00:19:05.800 --> 00:19:05.810 align:start position:0%
separate methods as far as saying to
 

00:19:05.810 --> 00:19:07.360 align:start position:0%
separate methods as far as saying to
yourself<00:19:06.140><c> well</c><00:19:06.320><c> you</c><00:19:06.560><c> know</c><00:19:06.710><c> like</c><00:19:06.830><c> if</c><00:19:06.920><c> I</c><00:19:07.070><c> put</c><00:19:07.280><c> it</c>

00:19:07.360 --> 00:19:07.370 align:start position:0%
yourself well you know like if I put it
 

00:19:07.370 --> 00:19:10.660 align:start position:0%
yourself well you know like if I put it
in<00:19:07.460><c> a</c><00:19:07.490><c> lot</c><00:19:07.670><c> of</c><00:19:08.290><c> into</c><00:19:09.290><c> a</c><00:19:09.320><c> separate</c><00:19:09.620><c> method</c><00:19:10.010><c> then</c>

00:19:10.660 --> 00:19:10.670 align:start position:0%
in a lot of into a separate method then
 

00:19:10.670 --> 00:19:13.510 align:start position:0%
in a lot of into a separate method then
it's<00:19:11.540><c> gonna</c><00:19:11.720><c> we're</c><00:19:11.960><c> going</c><00:19:12.110><c> to</c><00:19:12.170><c> incur</c><00:19:13.100><c> the</c><00:19:13.130><c> cost</c>

00:19:13.510 --> 00:19:13.520 align:start position:0%
it's gonna we're going to incur the cost
 

00:19:13.520 --> 00:19:16.540 align:start position:0%
it's gonna we're going to incur the cost
of<00:19:13.880><c> calling</c><00:19:14.780><c> that</c><00:19:14.810><c> method</c><00:19:15.220><c> you</c><00:19:16.220><c> know</c>

00:19:16.540 --> 00:19:16.550 align:start position:0%
of calling that method you know
 

00:19:16.550 --> 00:19:17.770 align:start position:0%
of calling that method you know
basically<00:19:16.820><c> pushing</c><00:19:17.120><c> parameters</c><00:19:17.480><c> and</c><00:19:17.600><c> so</c><00:19:17.660><c> on</c>

00:19:17.770 --> 00:19:17.780 align:start position:0%
basically pushing parameters and so on
 

00:19:17.780 --> 00:19:18.160 align:start position:0%
basically pushing parameters and so on
so<00:19:17.900><c> forth</c>

00:19:18.160 --> 00:19:18.170 align:start position:0%
so forth
 

00:19:18.170 --> 00:19:20.200 align:start position:0%
so forth
but<00:19:18.470><c> you</c><00:19:18.590><c> find</c><00:19:18.800><c> that</c><00:19:18.950><c> in</c><00:19:19.100><c> in</c><00:19:19.460><c> the</c><00:19:19.580><c> VM</c><00:19:19.910><c> will</c>

00:19:20.200 --> 00:19:20.210 align:start position:0%
but you find that in in the VM will
 

00:19:20.210 --> 00:19:23.020 align:start position:0%
but you find that in in the VM will
actually<00:19:20.570><c> in</c><00:19:20.720><c> lines</c><00:19:21.050><c> things</c><00:19:21.890><c> that</c><00:19:22.610><c> make</c><00:19:22.790><c> sense</c>

00:19:23.020 --> 00:19:23.030 align:start position:0%
actually in lines things that make sense
 

00:19:23.030 --> 00:19:25.330 align:start position:0%
actually in lines things that make sense
to<00:19:23.240><c> in</c><00:19:23.360><c> line</c><00:19:23.600><c> if</c><00:19:24.230><c> we</c><00:19:24.410><c> can</c><00:19:24.560><c> make</c><00:19:24.710><c> more</c><00:19:24.920><c> optimal</c>

00:19:25.330 --> 00:19:25.340 align:start position:0%
to in line if we can make more optimal
 

00:19:25.340 --> 00:19:27.150 align:start position:0%
to in line if we can make more optimal
use<00:19:25.520><c> of</c><00:19:25.550><c> the</c><00:19:26.330><c> code</c><00:19:26.510><c> by</c><00:19:26.810><c> in</c>

00:19:27.150 --> 00:19:27.160 align:start position:0%
use of the code by in
 

00:19:27.160 --> 00:19:28.710 align:start position:0%
use of the code by in
as<00:19:27.460><c> opposed</c><00:19:27.730><c> to</c><00:19:27.820><c> having</c><00:19:28.030><c> it</c><00:19:28.180><c> separately</c><00:19:28.570><c> so</c>

00:19:28.710 --> 00:19:28.720 align:start position:0%
as opposed to having it separately so
 

00:19:28.720 --> 00:19:30.450 align:start position:0%
as opposed to having it separately so
don't<00:19:29.080><c> worry</c><00:19:29.200><c> about</c><00:19:29.380><c> that</c><00:19:29.650><c> and</c><00:19:29.800><c> in</c><00:19:30.250><c> particular</c>

00:19:30.450 --> 00:19:30.460 align:start position:0%
don't worry about that and in particular
 

00:19:30.460 --> 00:19:33.450 align:start position:0%
don't worry about that and in particular
accessor<00:19:31.240><c> methods</c><00:19:31.600><c> are</c><00:19:31.690><c> always</c><00:19:31.960><c> in</c><00:19:32.590><c> line</c><00:19:32.860><c> so</c>

00:19:33.450 --> 00:19:33.460 align:start position:0%
accessor methods are always in line so
 

00:19:33.460 --> 00:19:35.610 align:start position:0%
accessor methods are always in line so
you<00:19:33.520><c> don't</c><00:19:33.730><c> have</c><00:19:33.850><c> to</c><00:19:34.030><c> worry</c><00:19:34.210><c> about</c><00:19:34.380><c> the</c><00:19:35.380><c> fact</c>

00:19:35.610 --> 00:19:35.620 align:start position:0%
you don't have to worry about the fact
 

00:19:35.620 --> 00:19:36.990 align:start position:0%
you don't have to worry about the fact
that<00:19:35.680><c> well</c><00:19:35.950><c> I've</c><00:19:36.070><c> got</c><00:19:36.190><c> a</c><00:19:36.220><c> very</c><00:19:36.400><c> tiny</c><00:19:36.610><c> method</c>

00:19:36.990 --> 00:19:37.000 align:start position:0%
that well I've got a very tiny method
 

00:19:37.000 --> 00:19:38.760 align:start position:0%
that well I've got a very tiny method
and<00:19:37.090><c> all</c><00:19:37.150><c> it</c><00:19:37.300><c> does</c><00:19:37.420><c> is</c><00:19:37.570><c> extracts</c><00:19:38.020><c> the</c><00:19:38.140><c> field</c><00:19:38.380><c> so</c>

00:19:38.760 --> 00:19:38.770 align:start position:0%
and all it does is extracts the field so
 

00:19:38.770 --> 00:19:41.580 align:start position:0%
and all it does is extracts the field so
and<00:19:39.670><c> with</c><00:19:40.540><c> the</c><00:19:40.630><c> 1-3-1</c><00:19:41.080><c> code</c><00:19:41.290><c> we've</c><00:19:41.440><c> actually</c>

00:19:41.580 --> 00:19:41.590 align:start position:0%
and with the 1-3-1 code we've actually
 

00:19:41.590 --> 00:19:43.200 align:start position:0%
and with the 1-3-1 code we've actually
have<00:19:41.860><c> a</c><00:19:41.890><c> much</c><00:19:42.070><c> tighter</c><00:19:42.310><c> implementation</c><00:19:43.060><c> of</c>

00:19:43.200 --> 00:19:43.210 align:start position:0%
have a much tighter implementation of
 

00:19:43.210 --> 00:19:49.860 align:start position:0%
have a much tighter implementation of
accessors<00:19:43.930><c> so</c><00:19:44.320><c> they</c><00:19:44.920><c> are</c><00:19:45.340><c> very</c><00:19:45.580><c> fast</c><00:19:48.720><c> one</c><00:19:49.720><c> of</c>

00:19:49.860 --> 00:19:49.870 align:start position:0%
accessors so they are very fast one of
 

00:19:49.870 --> 00:19:52.440 align:start position:0%
accessors so they are very fast one of
the<00:19:49.930><c> things</c><00:19:50.140><c> that</c><00:19:50.350><c> I</c><00:19:51.310><c> like</c><00:19:51.910><c> to</c><00:19:51.940><c> do</c><00:19:52.150><c> is</c><00:19:52.300><c> actually</c>

00:19:52.440 --> 00:19:52.450 align:start position:0%
the things that I like to do is actually
 

00:19:52.450 --> 00:19:54.720 align:start position:0%
the things that I like to do is actually
try<00:19:53.170><c> to</c><00:19:53.290><c> find</c><00:19:53.620><c> which</c><00:19:53.830><c> methods</c><00:19:54.220><c> that</c><00:19:54.310><c> are</c><00:19:54.460><c> used</c>

00:19:54.720 --> 00:19:54.730 align:start position:0%
try to find which methods that are used
 

00:19:54.730 --> 00:19:57.120 align:start position:0%
try to find which methods that are used
fairly<00:19:55.000><c> frequently</c><00:19:55.480><c> and</c><00:19:55.570><c> in</c><00:19:56.440><c> the</c><00:19:56.740><c> class</c>

00:19:57.120 --> 00:19:57.130 align:start position:0%
fairly frequently and in the class
 

00:19:57.130 --> 00:19:59.520 align:start position:0%
fairly frequently and in the class
libraries<00:19:57.580><c> and</c><00:19:58.170><c> tweak</c><00:19:59.170><c> the</c><00:19:59.290><c> codes</c>

00:19:59.520 --> 00:19:59.530 align:start position:0%
libraries and tweak the codes
 

00:19:59.530 --> 00:20:01.650 align:start position:0%
libraries and tweak the codes
specifically<00:20:00.130><c> to</c><00:20:00.370><c> handle</c><00:20:01.240><c> those</c><00:20:01.330><c> because</c>

00:20:01.650 --> 00:20:01.660 align:start position:0%
specifically to handle those because
 

00:20:01.660 --> 00:20:03.150 align:start position:0%
specifically to handle those because
those<00:20:01.780><c> are</c><00:20:01.840><c> the</c><00:20:01.990><c> the</c><00:20:02.440><c> routines</c><00:20:02.740><c> that</c><00:20:02.830><c> are</c><00:20:02.980><c> used</c>

00:20:03.150 --> 00:20:03.160 align:start position:0%
those are the the routines that are used
 

00:20:03.160 --> 00:20:05.520 align:start position:0%
those are the the routines that are used
a<00:20:03.250><c> lot</c><00:20:03.280><c> by</c><00:20:03.640><c> everybody</c><00:20:04.150><c> and</c><00:20:04.390><c> we</c><00:20:05.140><c> want</c><00:20:05.290><c> to</c><00:20:05.350><c> try</c><00:20:05.470><c> to</c>

00:20:05.520 --> 00:20:05.530 align:start position:0%
a lot by everybody and we want to try to
 

00:20:05.530 --> 00:20:09.420 align:start position:0%
a lot by everybody and we want to try to
get<00:20:05.650><c> to</c><00:20:05.830><c> try</c><00:20:06.280><c> to</c><00:20:06.340><c> get</c><00:20:06.610><c> good</c><00:20:07.270><c> performance</c><00:20:08.430><c> for</c>

00:20:09.420 --> 00:20:09.430 align:start position:0%
get to try to get good performance for
 

00:20:09.430 --> 00:20:11.580 align:start position:0%
get to try to get good performance for
those<00:20:09.550><c> particular</c><00:20:09.820><c> methods</c><00:20:10.330><c> so</c><00:20:10.900><c> trust</c><00:20:11.500><c> the</c>

00:20:11.580 --> 00:20:11.590 align:start position:0%
those particular methods so trust the
 

00:20:11.590 --> 00:20:14.220 align:start position:0%
those particular methods so trust the
supplied<00:20:11.890><c> classes</c><00:20:12.720><c> you</c><00:20:13.720><c> may</c><00:20:13.840><c> have</c><00:20:13.990><c> the</c><00:20:14.110><c> urge</c>

00:20:14.220 --> 00:20:14.230 align:start position:0%
supplied classes you may have the urge
 

00:20:14.230 --> 00:20:15.870 align:start position:0%
supplied classes you may have the urge
to<00:20:14.470><c> go</c><00:20:14.590><c> out</c><00:20:14.740><c> and</c><00:20:14.950><c> rewrite</c><00:20:15.250><c> the</c><00:20:15.370><c> vector</c><00:20:15.640><c> class</c>

00:20:15.870 --> 00:20:15.880 align:start position:0%
to go out and rewrite the vector class
 

00:20:15.880 --> 00:20:17.670 align:start position:0%
to go out and rewrite the vector class
because<00:20:16.270><c> it</c><00:20:16.420><c> synchronizes</c><00:20:16.810><c> every</c><00:20:17.350><c> time</c><00:20:17.530><c> you</c>

00:20:17.670 --> 00:20:17.680 align:start position:0%
because it synchronizes every time you
 

00:20:17.680 --> 00:20:21.780 align:start position:0%
because it synchronizes every time you
access<00:20:17.860><c> it</c><00:20:18.220><c> and</c><00:20:18.370><c> and</c><00:20:18.780><c> there's</c><00:20:19.780><c> an</c><00:20:20.170><c> object</c><00:20:20.790><c> you</c>

00:20:21.780 --> 00:20:21.790 align:start position:0%
access it and and there's an object you
 

00:20:21.790 --> 00:20:25.130 align:start position:0%
access it and and there's an object you
know<00:20:22.110><c> check</c><00:20:23.110><c> cast</c><00:20:23.350><c> every</c><00:20:24.310><c> time</c><00:20:24.490><c> you</c><00:20:24.610><c> do</c><00:20:24.760><c> a</c>

00:20:25.130 --> 00:20:25.140 align:start position:0%
know check cast every time you do a
 

00:20:25.140 --> 00:20:28.830 align:start position:0%
know check cast every time you do a
extraction<00:20:26.140><c> from</c><00:20:26.260><c> it</c><00:20:27.360><c> you</c><00:20:28.360><c> know</c><00:20:28.480><c> these</c><00:20:28.690><c> are</c>

00:20:28.830 --> 00:20:28.840 align:start position:0%
extraction from it you know these are
 

00:20:28.840 --> 00:20:30.240 align:start position:0%
extraction from it you know these are
the<00:20:28.930><c> sorts</c><00:20:29.170><c> of</c><00:20:29.230><c> things</c><00:20:29.440><c> that</c><00:20:29.500><c> we</c><00:20:29.680><c> notice</c><00:20:30.070><c> that</c>

00:20:30.240 --> 00:20:30.250 align:start position:0%
the sorts of things that we notice that
 

00:20:30.250 --> 00:20:33.240 align:start position:0%
the sorts of things that we notice that
are<00:20:30.400><c> used</c><00:20:30.730><c> a</c><00:20:30.880><c> lot</c><00:20:31.120><c> so</c><00:20:31.510><c> we</c><00:20:31.690><c> we</c><00:20:32.140><c> hand</c><00:20:32.380><c> tool</c><00:20:32.650><c> or</c><00:20:33.040><c> not</c>

00:20:33.240 --> 00:20:33.250 align:start position:0%
are used a lot so we we hand tool or not
 

00:20:33.250 --> 00:20:36.480 align:start position:0%
are used a lot so we we hand tool or not
hand<00:20:33.520><c> tool</c><00:20:33.670><c> but</c><00:20:33.910><c> we</c><00:20:34.210><c> provide</c><00:20:35.140><c> special</c><00:20:36.040><c> service</c>

00:20:36.480 --> 00:20:36.490 align:start position:0%
hand tool but we provide special service
 

00:20:36.490 --> 00:20:38.460 align:start position:0%
hand tool but we provide special service
this<00:20:36.640><c> service</c><00:20:37.000><c> for</c><00:20:37.660><c> those</c><00:20:37.810><c> particular</c><00:20:38.140><c> types</c>

00:20:38.460 --> 00:20:38.470 align:start position:0%
this service for those particular types
 

00:20:38.470 --> 00:20:39.510 align:start position:0%
this service for those particular types
of<00:20:38.590><c> methods</c><00:20:38.890><c> that</c><00:20:38.920><c> are</c><00:20:39.100><c> used</c><00:20:39.130><c> fairly</c>

00:20:39.510 --> 00:20:39.520 align:start position:0%
of methods that are used fairly
 

00:20:39.520 --> 00:20:41.460 align:start position:0%
of methods that are used fairly
frequently<00:20:39.940><c> so</c><00:20:40.660><c> instead</c><00:20:40.900><c> of</c><00:20:40.960><c> going</c><00:20:41.110><c> off</c><00:20:41.350><c> and</c>

00:20:41.460 --> 00:20:41.470 align:start position:0%
frequently so instead of going off and
 

00:20:41.470 --> 00:20:43.650 align:start position:0%
frequently so instead of going off and
writing<00:20:41.740><c> your</c><00:20:41.860><c> own</c><00:20:42.010><c> try</c><00:20:42.670><c> trust</c><00:20:43.300><c> the</c><00:20:43.390><c> supply</c>

00:20:43.650 --> 00:20:43.660 align:start position:0%
writing your own try trust the supply
 

00:20:43.660 --> 00:20:45.780 align:start position:0%
writing your own try trust the supply
classes<00:20:44.110><c> so</c><00:20:44.230><c> classes</c><00:20:44.620><c> such</c><00:20:45.160><c> as</c><00:20:45.310><c> string</c><00:20:45.550><c> string</c>

00:20:45.780 --> 00:20:45.790 align:start position:0%
classes so classes such as string string
 

00:20:45.790 --> 00:20:48.180 align:start position:0%
classes so classes such as string string
buffer<00:20:45.970><c> vector</c><00:20:46.960><c> and</c><00:20:47.260><c> the</c><00:20:47.710><c> collection</c><00:20:48.010><c> class</c>

00:20:48.180 --> 00:20:48.190 align:start position:0%
buffer vector and the collection class
 

00:20:48.190 --> 00:20:50.550 align:start position:0%
buffer vector and the collection class
is<00:20:48.460><c> you</c><00:20:49.360><c> know</c><00:20:49.450><c> use</c><00:20:49.660><c> what's</c><00:20:49.900><c> there</c><00:20:50.140><c> because</c>

00:20:50.550 --> 00:20:50.560 align:start position:0%
is you know use what's there because
 

00:20:50.560 --> 00:20:52.410 align:start position:0%
is you know use what's there because
we're<00:20:50.920><c> gonna</c><00:20:51.010><c> you</c><00:20:51.550><c> know</c><00:20:51.640><c> get</c><00:20:51.880><c> the</c><00:20:52.000><c> performance</c>

00:20:52.410 --> 00:20:52.420 align:start position:0%
we're gonna you know get the performance
 

00:20:52.420 --> 00:20:55.680 align:start position:0%
we're gonna you know get the performance
up<00:20:52.540><c> for</c><00:20:53.260><c> you</c><00:20:53.380><c> and</c><00:20:53.940><c> we've</c><00:20:54.940><c> added</c><00:20:55.300><c> some</c><00:20:55.540><c> more</c>

00:20:55.680 --> 00:20:55.690 align:start position:0%
up for you and we've added some more
 

00:20:55.690 --> 00:20:58.230 align:start position:0%
up for you and we've added some more
optimization<00:20:56.470><c> or</c><00:20:56.590><c> more</c><00:20:57.010><c> special</c><00:20:57.850><c> cases</c><00:20:58.210><c> for</c>

00:20:58.230 --> 00:20:58.240 align:start position:0%
optimization or more special cases for
 

00:20:58.240 --> 00:21:02.550 align:start position:0%
optimization or more special cases for
those<00:20:58.570><c> in</c><00:20:58.780><c> the</c><00:20:58.900><c> no.13</c><00:20:59.380><c> one</c><00:21:00.810><c> if</c><00:21:01.810><c> you</c><00:21:02.380><c> have</c><00:21:02.530><c> a</c>

00:21:02.550 --> 00:21:02.560 align:start position:0%
those in the no.13 one if you have a
 

00:21:02.560 --> 00:21:04.560 align:start position:0%
those in the no.13 one if you have a
copy<00:21:03.220><c> that</c><00:21:03.580><c> your</c><00:21:03.700><c> copy</c><00:21:03.880><c> from</c><00:21:04.090><c> one</c><00:21:04.300><c> array</c><00:21:04.510><c> to</c>

00:21:04.560 --> 00:21:04.570 align:start position:0%
copy that your copy from one array to
 

00:21:04.570 --> 00:21:06.900 align:start position:0%
copy that your copy from one array to
another<00:21:04.930><c> user</c><00:21:05.200><c> rate</c><00:21:05.440><c> copy</c><00:21:05.680><c> because</c><00:21:06.010><c> it's</c><00:21:06.700><c> a</c>

00:21:06.900 --> 00:21:06.910 align:start position:0%
another user rate copy because it's a
 

00:21:06.910 --> 00:21:08.820 align:start position:0%
another user rate copy because it's a
Yvonne<00:21:07.390><c> mentioned</c><00:21:07.810><c> that</c><00:21:07.870><c> we're</c><00:21:08.050><c> using</c><00:21:08.440><c> G</c><00:21:08.650><c> for</c>

00:21:08.820 --> 00:21:08.830 align:start position:0%
Yvonne mentioned that we're using G for
 

00:21:08.830 --> 00:21:11.850 align:start position:0%
Yvonne mentioned that we're using G for
acceleration<00:21:09.310><c> on</c><00:21:10.180><c> the</c><00:21:10.660><c> array</c><00:21:10.840><c> copy</c><00:21:11.080><c> and</c><00:21:11.440><c> hence</c>

00:21:11.850 --> 00:21:11.860 align:start position:0%
acceleration on the array copy and hence
 

00:21:11.860 --> 00:21:12.930 align:start position:0%
acceleration on the array copy and hence
it's<00:21:12.010><c> going</c><00:21:12.130><c> to</c><00:21:12.190><c> be</c><00:21:12.280><c> the</c><00:21:12.370><c> fastest</c><00:21:12.700><c> way</c><00:21:12.820><c> of</c>

00:21:12.930 --> 00:21:12.940 align:start position:0%
it's going to be the fastest way of
 

00:21:12.940 --> 00:21:14.220 align:start position:0%
it's going to be the fastest way of
doing<00:21:13.150><c> it</c><00:21:13.240><c> so</c><00:21:13.270><c> instead</c><00:21:13.600><c> of</c><00:21:13.660><c> having</c><00:21:13.810><c> a</c><00:21:14.050><c> loop</c>

00:21:14.220 --> 00:21:14.230 align:start position:0%
doing it so instead of having a loop
 

00:21:14.230 --> 00:21:17.100 align:start position:0%
doing it so instead of having a loop
that<00:21:14.380><c> iterates</c><00:21:14.530><c> through</c><00:21:15.300><c> user</c><00:21:16.300><c> rate</c><00:21:16.570><c> copy</c><00:21:16.780><c> and</c>

00:21:17.100 --> 00:21:17.110 align:start position:0%
that iterates through user rate copy and
 

00:21:17.110 --> 00:21:18.600 align:start position:0%
that iterates through user rate copy and
then<00:21:17.560><c> of</c><00:21:17.680><c> course</c><00:21:17.710><c> there's</c><00:21:18.040><c> certain</c><00:21:18.250><c> functions</c>

00:21:18.600 --> 00:21:18.610 align:start position:0%
then of course there's certain functions
 

00:21:18.610 --> 00:21:22.080 align:start position:0%
then of course there's certain functions
like<00:21:18.760><c> sine</c><00:21:19.000><c> cosine</c><00:21:19.210><c> and</c><00:21:19.450><c> tangent</c><00:21:20.790><c> ation</c><00:21:21.790><c> so</c>

00:21:22.080 --> 00:21:22.090 align:start position:0%
like sine cosine and tangent ation so
 

00:21:22.090 --> 00:21:24.660 align:start position:0%
like sine cosine and tangent ation so
it's<00:21:22.810><c> best</c><00:21:23.080><c> to</c><00:21:23.170><c> use</c><00:21:23.260><c> you</c><00:21:23.950><c> know</c><00:21:24.160><c> what's</c><00:21:24.340><c> applied</c>

00:21:24.660 --> 00:21:24.670 align:start position:0%
it's best to use you know what's applied
 

00:21:24.670 --> 00:21:26.790 align:start position:0%
it's best to use you know what's applied
and<00:21:24.940><c> not</c><00:21:25.030><c> go</c><00:21:25.720><c> off</c><00:21:25.870><c> and</c><00:21:26.050><c> run</c><00:21:26.140><c> your</c><00:21:26.260><c> own</c><00:21:26.320><c> gianna</c>

00:21:26.790 --> 00:21:26.800 align:start position:0%
and not go off and run your own gianna
 

00:21:26.800 --> 00:21:29.640 align:start position:0%
and not go off and run your own gianna
write<00:21:27.550><c> your</c><00:21:27.670><c> own</c><00:21:27.760><c> J&amp;I</c><00:21:28.120><c> routines</c><00:21:28.900><c> to</c><00:21:29.020><c> deal</c><00:21:29.530><c> with</c>

00:21:29.640 --> 00:21:29.650 align:start position:0%
write your own J&amp;I routines to deal with
 

00:21:29.650 --> 00:21:33.390 align:start position:0%
write your own J&amp;I routines to deal with
it<00:21:30.690><c> make</c><00:21:31.690><c> the</c><00:21:31.840><c> best</c><00:21:31.930><c> use</c><00:21:32.080><c> of</c><00:21:32.230><c> the</c><00:21:33.100><c> native</c>

00:21:33.390 --> 00:21:33.400 align:start position:0%
it make the best use of the native
 

00:21:33.400 --> 00:21:38.049 align:start position:0%
it make the best use of the native
datatypes<00:21:34.500><c> again</c>

00:21:38.049 --> 00:21:38.059 align:start position:0%
 
 

00:21:38.059 --> 00:21:41.560 align:start position:0%
 
the<00:21:38.840><c> g4</c><00:21:39.289><c> is</c><00:21:39.320><c> not</c><00:21:39.619><c> a</c><00:21:39.649><c> 64-bit</c><00:21:40.340><c> processor</c><00:21:40.969><c> so</c>

00:21:41.560 --> 00:21:41.570 align:start position:0%
the g4 is not a 64-bit processor so
 

00:21:41.570 --> 00:21:43.719 align:start position:0%
the g4 is not a 64-bit processor so
whenever<00:21:41.749><c> you</c><00:21:42.019><c> have</c><00:21:42.169><c> a</c><00:21:42.499><c> long</c><00:21:42.679><c> arithmetic</c><00:21:43.279><c> it</c>

00:21:43.719 --> 00:21:43.729 align:start position:0%
whenever you have a long arithmetic it
 

00:21:43.729 --> 00:21:45.999 align:start position:0%
whenever you have a long arithmetic it
has<00:21:44.239><c> a</c><00:21:44.269><c> certain</c><00:21:44.629><c> amount</c><00:21:44.690><c> of</c><00:21:44.869><c> costs</c><00:21:45.320><c> associated</c>

00:21:45.999 --> 00:21:46.009 align:start position:0%
has a certain amount of costs associated
 

00:21:46.009 --> 00:21:48.369 align:start position:0%
has a certain amount of costs associated
with<00:21:46.190><c> it</c><00:21:46.639><c> some</c><00:21:47.479><c> of</c><00:21:47.570><c> the</c><00:21:47.629><c> basic</c><00:21:47.929><c> operations</c>

00:21:48.369 --> 00:21:48.379 align:start position:0%
with it some of the basic operations
 

00:21:48.379 --> 00:21:51.729 align:start position:0%
with it some of the basic operations
look<00:21:48.529><c> at</c><00:21:48.679><c> and</c><00:21:49.070><c> add</c><00:21:49.879><c> and</c><00:21:50.299><c> subtract</c><00:21:50.840><c> or</c><00:21:50.989><c> and</c><00:21:51.169><c> and</c>

00:21:51.729 --> 00:21:51.739 align:start position:0%
look at and add and subtract or and and
 

00:21:51.739 --> 00:21:53.440 align:start position:0%
look at and add and subtract or and and
or<00:21:51.919><c> whatever</c><00:21:52.129><c> they're</c><00:21:52.429><c> reasonably</c><00:21:53.029><c> cheap</c><00:21:53.239><c> but</c>

00:21:53.440 --> 00:21:53.450 align:start position:0%
or whatever they're reasonably cheap but
 

00:21:53.450 --> 00:21:57.039 align:start position:0%
or whatever they're reasonably cheap but
when<00:21:53.779><c> you</c><00:21:53.869><c> get</c><00:21:53.989><c> into</c><00:21:54.109><c> shifting</c><00:21:55.039><c> or</c><00:21:56.019><c> divide</c><00:21:57.019><c> or</c>

00:21:57.039 --> 00:21:57.049 align:start position:0%
when you get into shifting or divide or
 

00:21:57.049 --> 00:21:58.539 align:start position:0%
when you get into shifting or divide or
that<00:21:57.559><c> sort</c><00:21:57.769><c> of</c><00:21:57.830><c> thing</c><00:21:57.979><c> that's</c><00:21:58.099><c> it</c><00:21:58.309><c> can</c><00:21:58.429><c> be</c>

00:21:58.539 --> 00:21:58.549 align:start position:0%
that sort of thing that's it can be
 

00:21:58.549 --> 00:22:00.310 align:start position:0%
that sort of thing that's it can be
fairly<00:21:58.759><c> costly</c><00:21:59.090><c> so</c><00:21:59.659><c> if</c><00:21:59.749><c> you</c><00:21:59.840><c> don't</c><00:21:59.989><c> need</c><00:22:00.169><c> all</c>

00:22:00.310 --> 00:22:00.320 align:start position:0%
fairly costly so if you don't need all
 

00:22:00.320 --> 00:22:02.349 align:start position:0%
fairly costly so if you don't need all
that<00:22:00.349><c> precision</c><00:22:00.769><c> stick</c><00:22:01.399><c> with</c><00:22:01.549><c> ants</c><00:22:01.879><c> for</c><00:22:02.299><c> the</c>

00:22:02.349 --> 00:22:02.359 align:start position:0%
that precision stick with ants for the
 

00:22:02.359 --> 00:22:04.509 align:start position:0%
that precision stick with ants for the
time<00:22:02.539><c> being</c><00:22:02.749><c> and</c><00:22:02.960><c> then</c><00:22:03.710><c> also</c><00:22:03.859><c> consider</c><00:22:04.129><c> using</c>

00:22:04.509 --> 00:22:04.519 align:start position:0%
time being and then also consider using
 

00:22:04.519 --> 00:22:06.669 align:start position:0%
time being and then also consider using
floats<00:22:04.940><c> instead</c><00:22:05.269><c> of</c><00:22:05.359><c> doubles</c><00:22:05.690><c> not</c><00:22:06.229><c> not</c>

00:22:06.669 --> 00:22:06.679 align:start position:0%
floats instead of doubles not not
 

00:22:06.679 --> 00:22:08.409 align:start position:0%
floats instead of doubles not not
necessarily<00:22:07.279><c> in</c><00:22:07.369><c> your</c><00:22:07.519><c> computation</c><00:22:07.820><c> because</c>

00:22:08.409 --> 00:22:08.419 align:start position:0%
necessarily in your computation because
 

00:22:08.419 --> 00:22:09.759 align:start position:0%
necessarily in your computation because
sometimes<00:22:08.749><c> you</c><00:22:08.869><c> just</c><00:22:08.899><c> need</c><00:22:09.200><c> that</c><00:22:09.259><c> you</c><00:22:09.649><c> need</c>

00:22:09.759 --> 00:22:09.769 align:start position:0%
sometimes you just need that you need
 

00:22:09.769 --> 00:22:12.549 align:start position:0%
sometimes you just need that you need
the<00:22:09.859><c> precision</c><00:22:10.309><c> but</c><00:22:10.909><c> when</c><00:22:11.839><c> you're</c><00:22:12.049><c> dealing</c>

00:22:12.549 --> 00:22:12.559 align:start position:0%
the precision but when you're dealing
 

00:22:12.559 --> 00:22:15.489 align:start position:0%
the precision but when you're dealing
with<00:22:12.739><c> arrays</c><00:22:13.099><c> of</c><00:22:13.719><c> values</c><00:22:14.719><c> it's</c><00:22:14.960><c> best</c><00:22:15.169><c> to</c><00:22:15.259><c> keep</c>

00:22:15.489 --> 00:22:15.499 align:start position:0%
with arrays of values it's best to keep
 

00:22:15.499 --> 00:22:17.169 align:start position:0%
with arrays of values it's best to keep
the<00:22:15.649><c> size</c><00:22:15.889><c> of</c><00:22:16.190><c> your</c><00:22:16.339><c> arrays</c><00:22:16.549><c> down</c><00:22:16.820><c> by</c><00:22:16.969><c> using</c>

00:22:17.169 --> 00:22:17.179 align:start position:0%
the size of your arrays down by using
 

00:22:17.179 --> 00:22:19.680 align:start position:0%
the size of your arrays down by using
floats<00:22:17.570><c> and</c><00:22:17.809><c> there</c><00:22:18.679><c> are</c><00:22:18.799><c> quite</c><00:22:19.070><c> a</c><00:22:19.099><c> you</c><00:22:19.460><c> know</c>

00:22:19.680 --> 00:22:19.690 align:start position:0%
floats and there are quite a you know
 

00:22:19.690 --> 00:22:22.089 align:start position:0%
floats and there are quite a you know
quite<00:22:20.690><c> well-known</c><00:22:20.869><c> techniques</c><00:22:21.469><c> for</c><00:22:21.679><c> actually</c>

00:22:22.089 --> 00:22:22.099 align:start position:0%
quite well-known techniques for actually
 

00:22:22.099 --> 00:22:23.979 align:start position:0%
quite well-known techniques for actually
keeping<00:22:22.369><c> a</c><00:22:22.609><c> precision</c><00:22:23.029><c> even</c><00:22:23.450><c> though</c><00:22:23.809><c> you're</c>

00:22:23.979 --> 00:22:23.989 align:start position:0%
keeping a precision even though you're
 

00:22:23.989 --> 00:22:27.700 align:start position:0%
keeping a precision even though you're
using<00:22:24.229><c> a</c><00:22:24.349><c> 32-bit</c><00:22:24.499><c> value</c><00:22:25.779><c> and</c><00:22:26.779><c> then</c><00:22:27.229><c> new</c><00:22:27.379><c> to</c><00:22:27.409><c> the</c>

00:22:27.700 --> 00:22:27.710 align:start position:0%
using a 32-bit value and then new to the
 

00:22:27.710 --> 00:22:30.279 align:start position:0%
using a 32-bit value and then new to the
131<00:22:28.519><c> we've</c><00:22:28.729><c> added</c><00:22:28.940><c> better</c><00:22:29.869><c> register</c>

00:22:30.279 --> 00:22:30.289 align:start position:0%
131 we've added better register
 

00:22:30.289 --> 00:22:32.829 align:start position:0%
131 we've added better register
allocation<00:22:30.679><c> for</c><00:22:31.190><c> law</c><00:22:32.059><c> and</c><00:22:32.299><c> floats</c><00:22:32.629><c> and</c>

00:22:32.829 --> 00:22:32.839 align:start position:0%
allocation for law and floats and
 

00:22:32.839 --> 00:22:35.259 align:start position:0%
allocation for law and floats and
doubles<00:22:32.899><c> so</c><00:22:33.679><c> you'll</c><00:22:34.099><c> find</c><00:22:34.369><c> that</c><00:22:34.549><c> some</c><00:22:35.059><c> of</c><00:22:35.149><c> the</c>

00:22:35.259 --> 00:22:35.269 align:start position:0%
doubles so you'll find that some of the
 

00:22:35.269 --> 00:22:37.479 align:start position:0%
doubles so you'll find that some of the
say<00:22:36.229><c> especially</c><00:22:36.769><c> if</c><00:22:36.830><c> you're</c><00:22:36.919><c> doing</c><00:22:37.009><c> a</c><00:22:37.159><c> looping</c>

00:22:37.479 --> 00:22:37.489 align:start position:0%
say especially if you're doing a looping
 

00:22:37.489 --> 00:22:39.789 align:start position:0%
say especially if you're doing a looping
type<00:22:38.239><c> calculation</c><00:22:38.899><c> that</c><00:22:38.929><c> performance</c><00:22:39.679><c> will</c>

00:22:39.789 --> 00:22:39.799 align:start position:0%
type calculation that performance will
 

00:22:39.799 --> 00:22:43.509 align:start position:0%
type calculation that performance will
be<00:22:39.919><c> improved</c><00:22:40.219><c> on</c><00:22:40.369><c> that</c><00:22:40.429><c> I</c><00:22:41.739><c> try</c><00:22:42.739><c> try</c><00:22:43.099><c> to</c><00:22:43.190><c> avoid</c>

00:22:43.509 --> 00:22:43.519 align:start position:0%
be improved on that I try try to avoid
 

00:22:43.519 --> 00:22:45.489 align:start position:0%
be improved on that I try try to avoid
using<00:22:43.759><c> the</c><00:22:43.940><c> generic</c><00:22:44.570><c> data</c><00:22:44.719><c> types</c><00:22:45.109><c> because</c>

00:22:45.489 --> 00:22:45.499 align:start position:0%
using the generic data types because
 

00:22:45.499 --> 00:22:47.560 align:start position:0%
using the generic data types because
there<00:22:45.619><c> is</c><00:22:45.739><c> a</c><00:22:45.769><c> cost</c><00:22:45.979><c> and</c><00:22:46.429><c> assigning</c><00:22:47.179><c> say</c><00:22:47.539><c> a</c>

00:22:47.560 --> 00:22:47.570 align:start position:0%
there is a cost and assigning say a
 

00:22:47.570 --> 00:22:49.839 align:start position:0%
there is a cost and assigning say a
generic<00:22:48.019><c> data</c><00:22:48.139><c> type</c><00:22:48.469><c> to</c><00:22:48.739><c> a</c><00:22:48.950><c> specific</c><00:22:49.669><c> data</c>

00:22:49.839 --> 00:22:49.849 align:start position:0%
generic data type to a specific data
 

00:22:49.849 --> 00:22:51.669 align:start position:0%
generic data type to a specific data
type<00:22:50.119><c> we</c><00:22:50.330><c> have</c><00:22:50.359><c> to</c><00:22:50.539><c> go</c><00:22:50.629><c> through</c><00:22:50.809><c> a</c><00:22:50.869><c> check</c><00:22:51.139><c> check</c>

00:22:51.669 --> 00:22:51.679 align:start position:0%
type we have to go through a check check
 

00:22:51.679 --> 00:22:53.799 align:start position:0%
type we have to go through a check check
cast<00:22:52.219><c> Yvonne</c><00:22:52.940><c> mentioned</c><00:22:53.389><c> that</c><00:22:53.450><c> we've</c><00:22:53.599><c> done</c>

00:22:53.799 --> 00:22:53.809 align:start position:0%
cast Yvonne mentioned that we've done
 

00:22:53.809 --> 00:22:56.649 align:start position:0%
cast Yvonne mentioned that we've done
some<00:22:54.229><c> performance</c><00:22:54.769><c> improvements</c><00:22:55.249><c> in</c><00:22:55.399><c> 131</c><00:22:56.389><c> -</c>

00:22:56.649 --> 00:22:56.659 align:start position:0%
some performance improvements in 131 -
 

00:22:56.659 --> 00:22:58.779 align:start position:0%
some performance improvements in 131 -
to<00:22:57.019><c> deal</c><00:22:57.169><c> with</c><00:22:57.320><c> instance</c><00:22:57.710><c> of</c><00:22:57.889><c> and</c><00:22:58.159><c> Chuck</c><00:22:58.580><c> gasps</c>

00:22:58.779 --> 00:22:58.789 align:start position:0%
to deal with instance of and Chuck gasps
 

00:22:58.789 --> 00:23:02.589 align:start position:0%
to deal with instance of and Chuck gasps
Chuck<00:22:58.839><c> cast</c><00:23:00.039><c> but</c><00:23:01.039><c> it's</c><00:23:01.159><c> still</c><00:23:01.279><c> a</c><00:23:01.339><c> cost</c><00:23:01.639><c> case</c>

00:23:02.589 --> 00:23:02.599 align:start position:0%
Chuck cast but it's still a cost case
 

00:23:02.599 --> 00:23:03.909 align:start position:0%
Chuck cast but it's still a cost case
instead<00:23:02.960><c> of</c><00:23:03.049><c> at</c><00:23:03.139><c> a</c><00:23:03.200><c> simple</c><00:23:03.440><c> assignment</c><00:23:03.859><c> we</c>

00:23:03.909 --> 00:23:03.919 align:start position:0%
instead of at a simple assignment we
 

00:23:03.919 --> 00:23:05.320 align:start position:0%
instead of at a simple assignment we
have<00:23:03.950><c> to</c><00:23:04.159><c> go</c><00:23:04.249><c> off</c><00:23:04.460><c> and</c><00:23:04.669><c> do</c><00:23:04.820><c> this</c><00:23:04.999><c> to</c><00:23:05.179><c> make</c><00:23:05.299><c> sure</c>

00:23:05.320 --> 00:23:05.330 align:start position:0%
have to go off and do this to make sure
 

00:23:05.330 --> 00:23:06.700 align:start position:0%
have to go off and do this to make sure
that<00:23:05.599><c> it's</c><00:23:05.749><c> the</c><00:23:05.839><c> right</c><00:23:05.869><c> class</c><00:23:06.169><c> for</c><00:23:06.440><c> doing</c><00:23:06.619><c> that</c>

00:23:06.700 --> 00:23:06.710 align:start position:0%
that it's the right class for doing that
 

00:23:06.710 --> 00:23:08.649 align:start position:0%
that it's the right class for doing that
so<00:23:06.889><c> try</c><00:23:07.249><c> to</c><00:23:07.279><c> avoid</c><00:23:07.460><c> using</c><00:23:07.759><c> generic</c><00:23:08.179><c> types</c><00:23:08.389><c> and</c>

00:23:08.649 --> 00:23:08.659 align:start position:0%
so try to avoid using generic types and
 

00:23:08.659 --> 00:23:11.769 align:start position:0%
so try to avoid using generic types and
use<00:23:08.899><c> subtyping</c><00:23:09.499><c> or</c><00:23:09.859><c> sub</c><00:23:10.159><c> classing</c><00:23:10.690><c> you</c><00:23:11.690><c> know</c>

00:23:11.769 --> 00:23:11.779 align:start position:0%
use subtyping or sub classing you know
 

00:23:11.779 --> 00:23:13.419 align:start position:0%
use subtyping or sub classing you know
in<00:23:12.019><c> these</c><00:23:12.229><c> circumstances</c><00:23:12.589><c> because</c><00:23:13.159><c> then</c><00:23:13.279><c> that</c>

00:23:13.419 --> 00:23:13.429 align:start position:0%
in these circumstances because then that
 

00:23:13.429 --> 00:23:15.459 align:start position:0%
in these circumstances because then that
way<00:23:13.519><c> you</c><00:23:13.580><c> can</c><00:23:13.759><c> avoid</c><00:23:13.879><c> making</c><00:23:14.839><c> assignments</c>

00:23:15.459 --> 00:23:15.469 align:start position:0%
way you can avoid making assignments
 

00:23:15.469 --> 00:23:20.829 align:start position:0%
way you can avoid making assignments
that<00:23:16.009><c> require</c><00:23:16.070><c> these</c><00:23:16.639><c> these</c><00:23:17.269><c> context</c><00:23:17.899><c> I</c><00:23:19.839><c> try</c>

00:23:20.829 --> 00:23:20.839 align:start position:0%
that require these these context I try
 

00:23:20.839 --> 00:23:22.779 align:start position:0%
that require these these context I try
to<00:23:20.899><c> work</c><00:23:21.080><c> with</c><00:23:21.259><c> local</c><00:23:21.589><c> copies</c><00:23:22.009><c> now</c><00:23:22.429><c> one</c><00:23:22.669><c> of</c><00:23:22.729><c> the</c>

00:23:22.779 --> 00:23:22.789 align:start position:0%
to work with local copies now one of the
 

00:23:22.789 --> 00:23:25.239 align:start position:0%
to work with local copies now one of the
things<00:23:22.940><c> about</c><00:23:23.239><c> people</c><00:23:24.169><c> have</c><00:23:24.289><c> been</c><00:23:24.649><c> asking</c>

00:23:25.239 --> 00:23:25.249 align:start position:0%
things about people have been asking
 

00:23:25.249 --> 00:23:28.499 align:start position:0%
things about people have been asking
about<00:23:25.339><c> was</c><00:23:25.639><c> why</c><00:23:25.879><c> is</c><00:23:25.940><c> the</c><00:23:26.269><c> code</c><00:23:26.649><c> generated</c><00:23:27.649><c> by</c>

00:23:28.499 --> 00:23:28.509 align:start position:0%
about was why is the code generated by
 

00:23:28.509 --> 00:23:32.950 align:start position:0%
about was why is the code generated by
hotspot<00:23:29.509><c> client</c><00:23:30.940><c> slower</c><00:23:31.940><c> let's</c><00:23:32.479><c> say</c><00:23:32.659><c> then</c>

00:23:32.950 --> 00:23:32.960 align:start position:0%
hotspot client slower let's say then
 

00:23:32.960 --> 00:23:34.899 align:start position:0%
hotspot client slower let's say then
maybe<00:23:33.559><c> the</c><00:23:33.799><c> server</c><00:23:34.009><c> version</c><00:23:34.249><c> and</c><00:23:34.489><c> so</c><00:23:34.580><c> forth</c>

00:23:34.899 --> 00:23:34.909 align:start position:0%
maybe the server version and so forth
 

00:23:34.909 --> 00:23:36.700 align:start position:0%
maybe the server version and so forth
well<00:23:35.299><c> some</c><00:23:35.479><c> of</c><00:23:35.509><c> the</c><00:23:35.659><c> optimizations</c><00:23:36.409><c> you</c><00:23:36.559><c> get</c>

00:23:36.700 --> 00:23:36.710 align:start position:0%
well some of the optimizations you get
 

00:23:36.710 --> 00:23:38.489 align:start position:0%
well some of the optimizations you get
in<00:23:36.830><c> the</c><00:23:36.889><c> server</c><00:23:37.099><c> version</c><00:23:37.339><c> of</c><00:23:37.729><c> the</c><00:23:37.909><c> compiler</c>

00:23:38.489 --> 00:23:38.499 align:start position:0%
in the server version of the compiler
 

00:23:38.499 --> 00:23:42.190 align:start position:0%
in the server version of the compiler
are<00:23:39.499><c> very</c><00:23:39.769><c> sophisticated</c><00:23:40.099><c> and</c><00:23:41.080><c> they're</c><00:23:42.080><c> not</c>

00:23:42.190 --> 00:23:42.200 align:start position:0%
are very sophisticated and they're not
 

00:23:42.200 --> 00:23:43.810 align:start position:0%
are very sophisticated and they're not
there<00:23:42.499><c> in</c><00:23:42.799><c> the</c><00:23:42.889><c> client</c><00:23:43.219><c> because</c><00:23:43.309><c> again</c><00:23:43.700><c> we</c>

00:23:43.810 --> 00:23:43.820 align:start position:0%
there in the client because again we
 

00:23:43.820 --> 00:23:45.129 align:start position:0%
there in the client because again we
want<00:23:43.969><c> to</c><00:23:43.999><c> try</c><00:23:44.119><c> to</c><00:23:44.179><c> compile</c><00:23:44.539><c> things</c><00:23:44.839><c> fairly</c>

00:23:45.129 --> 00:23:45.139 align:start position:0%
want to try to compile things fairly
 

00:23:45.139 --> 00:23:47.219 align:start position:0%
want to try to compile things fairly
quickly<00:23:45.349><c> and</c><00:23:45.559><c> get</c><00:23:45.710><c> them</c><00:23:45.889><c> up</c><00:23:46.009><c> and</c><00:23:46.099><c> running</c><00:23:46.190><c> so</c>

00:23:47.219 --> 00:23:47.229 align:start position:0%
quickly and get them up and running so
 

00:23:47.229 --> 00:23:51.100 align:start position:0%
quickly and get them up and running so
if<00:23:48.229><c> you</c><00:23:48.409><c> have</c><00:23:48.619><c> a</c><00:23:48.649><c> array</c><00:23:49.519><c> access</c>

00:23:51.100 --> 00:23:51.110 align:start position:0%
if you have a array access
 

00:23:51.110 --> 00:23:52.510 align:start position:0%
if you have a array access
and<00:23:51.200><c> you're</c><00:23:51.380><c> working</c><00:23:51.500><c> with</c><00:23:51.740><c> that</c><00:23:51.770><c> array</c><00:23:52.130><c> value</c>

00:23:52.510 --> 00:23:52.520 align:start position:0%
and you're working with that array value
 

00:23:52.520 --> 00:23:54.970 align:start position:0%
and you're working with that array value
it's<00:23:52.880><c> best</c><00:23:53.210><c> to</c><00:23:53.360><c> make</c><00:23:53.540><c> a</c><00:23:53.809><c> copy</c><00:23:54.320><c> of</c><00:23:54.500><c> that</c><00:23:54.590><c> value</c>

00:23:54.970 --> 00:23:54.980 align:start position:0%
it's best to make a copy of that value
 

00:23:54.980 --> 00:23:58.030 align:start position:0%
it's best to make a copy of that value
and<00:23:55.040><c> work</c><00:23:55.190><c> with</c><00:23:55.340><c> that</c><00:23:55.370><c> copy</c><00:23:55.700><c> and</c><00:23:56.799><c> put</c><00:23:57.799><c> it</c><00:23:57.920><c> back</c>

00:23:58.030 --> 00:23:58.040 align:start position:0%
and work with that copy and put it back
 

00:23:58.040 --> 00:24:00.490 align:start position:0%
and work with that copy and put it back
in<00:23:58.250><c> again</c><00:23:58.460><c> in</c><00:23:58.670><c> this</c><00:23:59.000><c> particular</c><00:23:59.299><c> example</c><00:23:59.870><c> you</c>

00:24:00.490 --> 00:24:00.500 align:start position:0%
in again in this particular example you
 

00:24:00.500 --> 00:24:02.680 align:start position:0%
in again in this particular example you
have<00:24:01.220><c> three</c><00:24:01.429><c> accesses</c><00:24:01.940><c> to</c><00:24:01.970><c> that</c><00:24:02.240><c> array</c><00:24:02.480><c> that</c>

00:24:02.680 --> 00:24:02.690 align:start position:0%
have three accesses to that array that
 

00:24:02.690 --> 00:24:04.360 align:start position:0%
have three accesses to that array that
means<00:24:02.870><c> we</c><00:24:03.080><c> have</c><00:24:03.170><c> to</c><00:24:03.290><c> do</c><00:24:03.380><c> three</c><00:24:03.679><c> bounds</c><00:24:04.040><c> checks</c>

00:24:04.360 --> 00:24:04.370 align:start position:0%
means we have to do three bounds checks
 

00:24:04.370 --> 00:24:07.480 align:start position:0%
means we have to do three bounds checks
and<00:24:05.559><c> three</c><00:24:06.559><c> null</c><00:24:06.710><c> checks</c><00:24:07.010><c> to</c><00:24:07.130><c> see</c><00:24:07.250><c> on</c><00:24:07.400><c> the</c>

00:24:07.480 --> 00:24:07.490 align:start position:0%
and three null checks to see on the
 

00:24:07.490 --> 00:24:09.520 align:start position:0%
and three null checks to see on the
table<00:24:07.790><c> itself</c><00:24:08.120><c> whereas</c><00:24:08.900><c> if</c><00:24:08.990><c> we</c><00:24:09.080><c> make</c><00:24:09.230><c> a</c><00:24:09.260><c> copy</c>

00:24:09.520 --> 00:24:09.530 align:start position:0%
table itself whereas if we make a copy
 

00:24:09.530 --> 00:24:11.020 align:start position:0%
table itself whereas if we make a copy
of<00:24:09.740><c> that</c><00:24:09.830><c> we</c><00:24:10.010><c> only</c><00:24:10.130><c> have</c><00:24:10.309><c> to</c><00:24:10.460><c> do</c><00:24:10.580><c> two</c><00:24:10.760><c> in</c><00:24:10.940><c> this</c>

00:24:11.020 --> 00:24:11.030 align:start position:0%
of that we only have to do two in this
 

00:24:11.030 --> 00:24:13.030 align:start position:0%
of that we only have to do two in this
case<00:24:11.090><c> and</c><00:24:11.540><c> then</c><00:24:11.960><c> plus</c><00:24:12.140><c> you</c><00:24:12.290><c> get</c><00:24:12.380><c> the</c><00:24:12.530><c> locality</c>

00:24:13.030 --> 00:24:13.040 align:start position:0%
case and then plus you get the locality
 

00:24:13.040 --> 00:24:14.470 align:start position:0%
case and then plus you get the locality
issues<00:24:13.460><c> where</c><00:24:13.670><c> if</c><00:24:13.940><c> you're</c><00:24:14.059><c> working</c><00:24:14.210><c> with</c><00:24:14.360><c> the</c>

00:24:14.470 --> 00:24:14.480 align:start position:0%
issues where if you're working with the
 

00:24:14.480 --> 00:24:17.140 align:start position:0%
issues where if you're working with the
value<00:24:14.809><c> in</c><00:24:15.170><c> registers</c><00:24:15.830><c> in</c><00:24:16.400><c> this</c><00:24:16.549><c> cases</c><00:24:16.760><c> what</c>

00:24:17.140 --> 00:24:17.150 align:start position:0%
value in registers in this cases what
 

00:24:17.150 --> 00:24:18.730 align:start position:0%
value in registers in this cases what
happiness<00:24:17.480><c> value</c><00:24:17.870><c> will</c><00:24:18.350><c> be</c><00:24:18.470><c> assigned</c><00:24:18.710><c> to</c>

00:24:18.730 --> 00:24:18.740 align:start position:0%
happiness value will be assigned to
 

00:24:18.740 --> 00:24:20.740 align:start position:0%
happiness value will be assigned to
register<00:24:19.190><c> as</c><00:24:19.340><c> opposed</c><00:24:20.090><c> to</c><00:24:20.120><c> going</c><00:24:20.299><c> back</c><00:24:20.450><c> to</c><00:24:20.480><c> the</c>

00:24:20.740 --> 00:24:20.750 align:start position:0%
register as opposed to going back to the
 

00:24:20.750 --> 00:24:22.630 align:start position:0%
register as opposed to going back to the
array<00:24:20.929><c> that</c><00:24:21.440><c> you</c><00:24:21.830><c> get</c><00:24:22.040><c> performance</c><00:24:22.250><c> boost</c>

00:24:22.630 --> 00:24:22.640 align:start position:0%
array that you get performance boost
 

00:24:22.640 --> 00:24:26.289 align:start position:0%
array that you get performance boost
there<00:24:22.820><c> as</c><00:24:22.940><c> well</c><00:24:24.610><c> this</c><00:24:25.610><c> is</c><00:24:25.730><c> sort</c><00:24:25.910><c> of</c><00:24:25.940><c> a</c><00:24:26.059><c> Dee</c>

00:24:26.289 --> 00:24:26.299 align:start position:0%
there as well this is sort of a Dee
 

00:24:26.299 --> 00:24:29.860 align:start position:0%
there as well this is sort of a Dee
Optima<00:24:26.750><c> D</c><00:24:27.460><c> of</c><00:24:28.460><c> the</c><00:24:28.549><c> code</c><00:24:28.790><c> one</c><00:24:29.540><c> of</c><00:24:29.630><c> the</c><00:24:29.720><c> things</c>

00:24:29.860 --> 00:24:29.870 align:start position:0%
Optima D of the code one of the things
 

00:24:29.870 --> 00:24:31.900 align:start position:0%
Optima D of the code one of the things
that<00:24:30.049><c> people</c><00:24:30.290><c> run</c><00:24:30.440><c> into</c><00:24:30.500><c> especially</c><00:24:31.220><c> on</c><00:24:31.580><c> MP</c>

00:24:31.900 --> 00:24:31.910 align:start position:0%
that people run into especially on MP
 

00:24:31.910 --> 00:24:34.780 align:start position:0%
that people run into especially on MP
machines<00:24:32.330><c> is</c><00:24:32.600><c> with</c><00:24:33.140><c> a</c><00:24:33.169><c> lot</c><00:24:33.410><c> of</c><00:24:33.559><c> threading</c><00:24:34.010><c> if</c>

00:24:34.780 --> 00:24:34.790 align:start position:0%
machines is with a lot of threading if
 

00:24:34.790 --> 00:24:36.610 align:start position:0%
machines is with a lot of threading if
you<00:24:34.940><c> have</c><00:24:35.120><c> access</c><00:24:35.480><c> to</c><00:24:35.570><c> your</c><00:24:35.660><c> two</c><00:24:36.320><c> global</c>

00:24:36.610 --> 00:24:36.620 align:start position:0%
you have access to your two global
 

00:24:36.620 --> 00:24:38.230 align:start position:0%
you have access to your two global
values<00:24:36.980><c> they're</c><00:24:37.460><c> kind</c><00:24:37.640><c> of</c><00:24:37.700><c> wondering</c><00:24:38.030><c> why</c><00:24:38.179><c> the</c>

00:24:38.230 --> 00:24:38.240 align:start position:0%
values they're kind of wondering why the
 

00:24:38.240 --> 00:24:39.730 align:start position:0%
values they're kind of wondering why the
values<00:24:38.690><c> are</c><00:24:38.870><c> sort</c><00:24:39.080><c> of</c><00:24:39.110><c> changing</c><00:24:39.559><c> or</c><00:24:39.710><c> not</c>

00:24:39.730 --> 00:24:39.740 align:start position:0%
values are sort of changing or not
 

00:24:39.740 --> 00:24:42.549 align:start position:0%
values are sort of changing or not
changing<00:24:39.890><c> up</c><00:24:40.309><c> from</c><00:24:40.490><c> underneath</c><00:24:40.730><c> them</c><00:24:41.559><c> make</c>

00:24:42.549 --> 00:24:42.559 align:start position:0%
changing up from underneath them make
 

00:24:42.559 --> 00:24:44.560 align:start position:0%
changing up from underneath them make
sure<00:24:42.590><c> that</c><00:24:42.980><c> if</c><00:24:43.100><c> you</c><00:24:43.220><c> have</c><00:24:43.429><c> a</c><00:24:43.460><c> global</c><00:24:44.120><c> value</c>

00:24:44.560 --> 00:24:44.570 align:start position:0%
sure that if you have a global value
 

00:24:44.570 --> 00:24:46.659 align:start position:0%
sure that if you have a global value
that<00:24:44.840><c> a</c><00:24:45.260><c> global</c><00:24:45.710><c> static</c><00:24:46.220><c> that's</c><00:24:46.370><c> being</c>

00:24:46.659 --> 00:24:46.669 align:start position:0%
that a global static that's being
 

00:24:46.669 --> 00:24:49.750 align:start position:0%
that a global static that's being
accessed<00:24:47.799><c> from</c><00:24:48.799><c> several</c><00:24:49.190><c> different</c><00:24:49.340><c> threads</c>

00:24:49.750 --> 00:24:49.760 align:start position:0%
accessed from several different threads
 

00:24:49.760 --> 00:24:52.390 align:start position:0%
accessed from several different threads
or<00:24:50.000><c> written</c><00:24:50.330><c> to</c><00:24:50.450><c> both</c><00:24:50.990><c> other</c><00:24:51.500><c> threads</c><00:24:51.860><c> that</c>

00:24:52.390 --> 00:24:52.400 align:start position:0%
or written to both other threads that
 

00:24:52.400 --> 00:24:55.330 align:start position:0%
or written to both other threads that
use<00:24:52.880><c> a</c><00:24:52.910><c> keyword</c><00:24:53.210><c> volatile</c><00:24:54.190><c> one</c><00:24:55.190><c> of</c><00:24:55.280><c> the</c>

00:24:55.330 --> 00:24:55.340 align:start position:0%
use a keyword volatile one of the
 

00:24:55.340 --> 00:24:57.039 align:start position:0%
use a keyword volatile one of the
optimizations<00:24:55.940><c> a</c><00:24:56.030><c> compiler</c><00:24:56.450><c> will</c><00:24:56.600><c> do</c><00:24:56.780><c> is</c><00:24:56.929><c> say</c>

00:24:57.039 --> 00:24:57.049 align:start position:0%
optimizations a compiler will do is say
 

00:24:57.049 --> 00:24:58.270 align:start position:0%
optimizations a compiler will do is say
well<00:24:57.230><c> this</c><00:24:57.320><c> is</c><00:24:57.470><c> a</c><00:24:57.500><c> value</c><00:24:57.860><c> that</c><00:24:57.890><c> I've</c><00:24:58.130><c> already</c>

00:24:58.270 --> 00:24:58.280 align:start position:0%
well this is a value that I've already
 

00:24:58.280 --> 00:25:00.400 align:start position:0%
well this is a value that I've already
got<00:24:58.490><c> a</c><00:24:58.520><c> copy</c><00:24:58.760><c> of</c><00:24:59.090><c> why</c><00:24:59.480><c> should</c><00:24:59.750><c> I</c><00:24:59.840><c> go</c><00:24:59.960><c> back</c><00:24:59.990><c> and</c>

00:25:00.400 --> 00:25:00.410 align:start position:0%
got a copy of why should I go back and
 

00:25:00.410 --> 00:25:02.950 align:start position:0%
got a copy of why should I go back and
get<00:25:00.530><c> the</c><00:25:00.620><c> original</c><00:25:01.240><c> if</c><00:25:02.240><c> you</c><00:25:02.390><c> put</c><00:25:02.540><c> the</c><00:25:02.630><c> keyword</c>

00:25:02.950 --> 00:25:02.960 align:start position:0%
get the original if you put the keyword
 

00:25:02.960 --> 00:25:05.680 align:start position:0%
get the original if you put the keyword
volatile<00:25:03.530><c> this</c><00:25:03.710><c> will</c><00:25:03.890><c> be</c><00:25:04.010><c> aren</c><00:25:04.280><c> t</c><00:25:04.490><c> that</c><00:25:04.690><c> things</c>

00:25:05.680 --> 00:25:05.690 align:start position:0%
volatile this will be aren t that things
 

00:25:05.690 --> 00:25:07.750 align:start position:0%
volatile this will be aren t that things
will<00:25:05.870><c> get</c><00:25:05.990><c> reloaded</c><00:25:06.830><c> every</c><00:25:07.160><c> time</c><00:25:07.340><c> you</c><00:25:07.460><c> access</c>

00:25:07.750 --> 00:25:07.760 align:start position:0%
will get reloaded every time you access
 

00:25:07.760 --> 00:25:13.030 align:start position:0%
will get reloaded every time you access
the<00:25:07.910><c> variable</c><00:25:11.080><c> use</c><00:25:12.080><c> final</c><00:25:12.470><c> constant</c><00:25:12.799><c> of</c>

00:25:13.030 --> 00:25:13.040 align:start position:0%
the variable use final constant of
 

00:25:13.040 --> 00:25:16.720 align:start position:0%
the variable use final constant of
Static<00:25:13.790><c> finals</c><00:25:14.530><c> this</c><00:25:15.530><c> basically</c><00:25:16.160><c> specifies</c>

00:25:16.720 --> 00:25:16.730 align:start position:0%
Static finals this basically specifies
 

00:25:16.730 --> 00:25:20.260 align:start position:0%
Static finals this basically specifies
that<00:25:17.200><c> that</c><00:25:18.200><c> the</c><00:25:18.410><c> the</c><00:25:18.610><c> variable</c><00:25:19.610><c> let's</c><00:25:20.090><c> say</c><00:25:20.120><c> in</c>

00:25:20.260 --> 00:25:20.270 align:start position:0%
that that the the variable let's say in
 

00:25:20.270 --> 00:25:22.570 align:start position:0%
that that the the variable let's say in
this<00:25:20.360><c> case</c><00:25:20.419><c> buffer</c><00:25:20.840><c> size</c><00:25:21.020><c> is</c><00:25:21.200><c> is</c><00:25:21.770><c> a</c><00:25:21.860><c> constant</c>

00:25:22.570 --> 00:25:22.580 align:start position:0%
this case buffer size is is a constant
 

00:25:22.580 --> 00:25:24.280 align:start position:0%
this case buffer size is is a constant
and<00:25:22.760><c> the</c><00:25:23.000><c> compiler</c><00:25:23.480><c> can</c><00:25:23.660><c> treat</c><00:25:23.960><c> that</c><00:25:24.080><c> as</c><00:25:24.260><c> a</c>

00:25:24.280 --> 00:25:24.290 align:start position:0%
and the compiler can treat that as a
 

00:25:24.290 --> 00:25:25.600 align:start position:0%
and the compiler can treat that as a
constant<00:25:24.770><c> all</c><00:25:24.860><c> the</c><00:25:24.890><c> way</c><00:25:25.070><c> through</c><00:25:25.309><c> the</c><00:25:25.429><c> code</c>

00:25:25.600 --> 00:25:25.610 align:start position:0%
constant all the way through the code
 

00:25:25.610 --> 00:25:28.960 align:start position:0%
constant all the way through the code
and<00:25:25.640><c> optimize</c><00:25:26.150><c> do</c><00:25:26.630><c> constant</c><00:25:27.080><c> folding</c><00:25:27.470><c> in</c><00:25:28.400><c> this</c>

00:25:28.960 --> 00:25:28.970 align:start position:0%
and optimize do constant folding in this
 

00:25:28.970 --> 00:25:31.450 align:start position:0%
and optimize do constant folding in this
example<00:25:29.330><c> we</c><00:25:29.690><c> know</c><00:25:29.870><c> that</c><00:25:30.169><c> the</c><00:25:30.530><c> the</c><00:25:31.100><c> character</c>

00:25:31.450 --> 00:25:31.460 align:start position:0%
example we know that the the character
 

00:25:31.460 --> 00:25:32.980 align:start position:0%
example we know that the the character
array<00:25:31.610><c> that</c><00:25:31.790><c> we're</c><00:25:31.910><c> allocating</c><00:25:32.450><c> is</c><00:25:32.570><c> a</c><00:25:32.600><c> fixed</c>

00:25:32.980 --> 00:25:32.990 align:start position:0%
array that we're allocating is a fixed
 

00:25:32.990 --> 00:25:36.340 align:start position:0%
array that we're allocating is a fixed
size<00:25:33.169><c> we</c><00:25:33.740><c> know</c><00:25:33.919><c> that</c><00:25:34.370><c> the</c><00:25:35.169><c> initialization</c><00:25:36.169><c> of</c>

00:25:36.340 --> 00:25:36.350 align:start position:0%
size we know that the initialization of
 

00:25:36.350 --> 00:25:40.060 align:start position:0%
size we know that the initialization of
the<00:25:37.070><c> of</c><00:25:37.549><c> the</c><00:25:37.700><c> buffer</c><00:25:38.110><c> in</c><00:25:39.110><c> the</c><00:25:39.290><c> loop</c><00:25:39.500><c> is</c><00:25:39.770><c> going</c>

00:25:40.060 --> 00:25:40.070 align:start position:0%
the of the buffer in the loop is going
 

00:25:40.070 --> 00:25:41.440 align:start position:0%
the of the buffer in the loop is going
to<00:25:40.190><c> iterate</c><00:25:40.309><c> a</c><00:25:40.520><c> fixed</c><00:25:40.850><c> the</c><00:25:40.940><c> number</c><00:25:41.059><c> of</c><00:25:41.240><c> times</c>

00:25:41.440 --> 00:25:41.450 align:start position:0%
to iterate a fixed the number of times
 

00:25:41.450 --> 00:25:44.620 align:start position:0%
to iterate a fixed the number of times
so<00:25:41.950><c> take</c><00:25:42.950><c> advantage</c><00:25:43.400><c> of</c><00:25:43.549><c> that</c><00:25:43.669><c> by</c><00:25:44.059><c> making</c><00:25:44.450><c> sure</c>

00:25:44.620 --> 00:25:44.630 align:start position:0%
so take advantage of that by making sure
 

00:25:44.630 --> 00:25:46.480 align:start position:0%
so take advantage of that by making sure
that<00:25:44.809><c> you</c><00:25:45.230><c> just</c><00:25:45.410><c> clear</c><00:25:45.679><c> your</c><00:25:45.710><c> statics</c><00:25:46.370><c> is</c>

00:25:46.480 --> 00:25:46.490 align:start position:0%
that you just clear your statics is
 

00:25:46.490 --> 00:25:47.770 align:start position:0%
that you just clear your statics is
final<00:25:46.820><c> if</c><00:25:46.970><c> they're</c><00:25:47.120><c> going</c><00:25:47.270><c> to</c><00:25:47.330><c> be</c><00:25:47.390><c> constant</c>

00:25:47.770 --> 00:25:47.780 align:start position:0%
final if they're going to be constant
 

00:25:47.780 --> 00:25:53.320 align:start position:0%
final if they're going to be constant
throughout<00:25:48.290><c> your</c><00:25:49.070><c> execution</c><00:25:52.270><c> there's</c><00:25:53.270><c> a</c>

00:25:53.320 --> 00:25:53.330 align:start position:0%
throughout your execution there's a
 

00:25:53.330 --> 00:25:55.780 align:start position:0%
throughout your execution there's a
certain<00:25:53.690><c> cost</c><00:25:53.960><c> involved</c><00:25:54.440><c> in</c><00:25:55.070><c> invoking</c>

00:25:55.780 --> 00:25:55.790 align:start position:0%
certain cost involved in invoking
 

00:25:55.790 --> 00:25:58.630 align:start position:0%
certain cost involved in invoking
anything<00:25:56.419><c> which</c><00:25:56.600><c> is</c><00:25:56.720><c> a</c><00:25:56.750><c> virtual</c><00:25:56.990><c> call</c><00:25:57.410><c> or</c><00:25:57.770><c> a</c><00:25:58.280><c> an</c>

00:25:58.630 --> 00:25:58.640 align:start position:0%
anything which is a virtual call or a an
 

00:25:58.640 --> 00:26:01.180 align:start position:0%
anything which is a virtual call or a an
interface<00:25:59.059><c> call</c><00:25:59.620><c> in</c><00:26:00.620><c> the</c><00:26:00.679><c> case</c><00:26:00.830><c> of</c><00:26:00.980><c> virtual</c>

00:26:01.180 --> 00:26:01.190 align:start position:0%
interface call in the case of virtual
 

00:26:01.190 --> 00:26:02.890 align:start position:0%
interface call in the case of virtual
calls<00:26:01.580><c> we</c><00:26:01.820><c> have</c><00:26:01.850><c> to</c><00:26:02.059><c> do</c>

00:26:02.890 --> 00:26:02.900 align:start position:0%
calls we have to do
 

00:26:02.900 --> 00:26:05.500 align:start position:0%
calls we have to do
a<00:26:03.070><c> index</c><00:26:04.070><c> index</c><00:26:04.490><c> into</c><00:26:04.700><c> a</c><00:26:04.730><c> table</c><00:26:04.910><c> to</c><00:26:05.180><c> find</c><00:26:05.360><c> the</c>

00:26:05.500 --> 00:26:05.510 align:start position:0%
a index index into a table to find the
 

00:26:05.510 --> 00:26:06.760 align:start position:0%
a index index into a table to find the
address<00:26:05.810><c> of</c><00:26:05.960><c> the</c><00:26:06.050><c> method</c><00:26:06.320><c> that</c><00:26:06.470><c> we</c><00:26:06.560><c> want</c><00:26:06.650><c> to</c>

00:26:06.760 --> 00:26:06.770 align:start position:0%
address of the method that we want to
 

00:26:06.770 --> 00:26:10.690 align:start position:0%
address of the method that we want to
dispatch<00:26:07.130><c> to</c><00:26:07.960><c> in</c><00:26:08.960><c> interfaces</c><00:26:09.830><c> it's</c><00:26:10.460><c> a</c><00:26:10.550><c> little</c>

00:26:10.690 --> 00:26:10.700 align:start position:0%
dispatch to in interfaces it's a little
 

00:26:10.700 --> 00:26:11.800 align:start position:0%
dispatch to in interfaces it's a little
bit<00:26:10.820><c> more</c><00:26:10.940><c> complicated</c><00:26:11.240><c> because</c><00:26:11.480><c> we</c><00:26:11.660><c> actually</c>

00:26:11.800 --> 00:26:11.810 align:start position:0%
bit more complicated because we actually
 

00:26:11.810 --> 00:26:13.810 align:start position:0%
bit more complicated because we actually
have<00:26:12.020><c> to</c><00:26:12.050><c> do</c><00:26:12.200><c> a</c><00:26:12.230><c> match</c><00:26:12.530><c> and</c><00:26:13.190><c> make</c><00:26:13.370><c> sure</c><00:26:13.550><c> that</c><00:26:13.700><c> we</c>

00:26:13.810 --> 00:26:13.820 align:start position:0%
have to do a match and make sure that we
 

00:26:13.820 --> 00:26:16.690 align:start position:0%
have to do a match and make sure that we
we<00:26:14.120><c> match</c><00:26:14.360><c> the</c><00:26:14.630><c> class</c><00:26:14.900><c> that</c><00:26:15.350><c> we're</c><00:26:15.500><c> of</c><00:26:16.190><c> the</c>

00:26:16.690 --> 00:26:16.700 align:start position:0%
we match the class that we're of the
 

00:26:16.700 --> 00:26:18.010 align:start position:0%
we match the class that we're of the
class<00:26:16.880><c> of</c><00:26:17.120><c> the</c><00:26:17.330><c> method</c><00:26:17.600><c> that</c><00:26:17.660><c> we</c><00:26:17.780><c> want</c><00:26:17.900><c> to</c>

00:26:18.010 --> 00:26:18.020 align:start position:0%
class of the method that we want to
 

00:26:18.020 --> 00:26:21.220 align:start position:0%
class of the method that we want to
invoke<00:26:18.290><c> so</c><00:26:19.070><c> virtuals</c><00:26:20.090><c> a</c><00:26:20.300><c> little</c><00:26:20.960><c> bit</c><00:26:21.080><c> cheaper</c>

00:26:21.220 --> 00:26:21.230 align:start position:0%
invoke so virtuals a little bit cheaper
 

00:26:21.230 --> 00:26:24.100 align:start position:0%
invoke so virtuals a little bit cheaper
than<00:26:21.830><c> then</c><00:26:22.640><c> interfaces</c><00:26:23.390><c> so</c><00:26:23.720><c> if</c><00:26:23.840><c> you</c><00:26:23.930><c> have</c><00:26:24.080><c> a</c>

00:26:24.100 --> 00:26:24.110 align:start position:0%
than then interfaces so if you have a
 

00:26:24.110 --> 00:26:26.770 align:start position:0%
than then interfaces so if you have a
choice<00:26:24.440><c> try</c><00:26:25.040><c> to</c><00:26:25.100><c> stick</c><00:26:25.880><c> with</c><00:26:26.060><c> subclassing</c><00:26:26.690><c> as</c>

00:26:26.770 --> 00:26:26.780 align:start position:0%
choice try to stick with subclassing as
 

00:26:26.780 --> 00:26:29.560 align:start position:0%
choice try to stick with subclassing as
opposed<00:26:27.410><c> to</c><00:26:27.560><c> creating</c><00:26:28.040><c> interfaces</c><00:26:28.700><c> and</c><00:26:28.850><c> you</c>

00:26:29.560 --> 00:26:29.570 align:start position:0%
opposed to creating interfaces and you
 

00:26:29.570 --> 00:26:32.800 align:start position:0%
opposed to creating interfaces and you
get<00:26:29.720><c> better</c><00:26:30.140><c> performance</c><00:26:30.290><c> that</c><00:26:30.770><c> way</c><00:26:31.300><c> in</c><00:26:32.300><c> the</c>

00:26:32.800 --> 00:26:32.810 align:start position:0%
get better performance that way in the
 

00:26:32.810 --> 00:26:35.680 align:start position:0%
get better performance that way in the
hotspot<00:26:33.410><c> VM</c><00:26:33.770><c> we</c><00:26:33.980><c> actually</c><00:26:34.370><c> cache</c><00:26:34.640><c> the</c><00:26:35.090><c> call</c><00:26:35.330><c> so</c>

00:26:35.680 --> 00:26:35.690 align:start position:0%
hotspot VM we actually cache the call so
 

00:26:35.690 --> 00:26:38.320 align:start position:0%
hotspot VM we actually cache the call so
that<00:26:35.870><c> from</c><00:26:35.990><c> any</c><00:26:36.140><c> particular</c><00:26:36.440><c> call</c><00:26:36.770><c> site</c><00:26:37.040><c> we</c><00:26:37.940><c> we</c>

00:26:38.320 --> 00:26:38.330 align:start position:0%
that from any particular call site we we
 

00:26:38.330 --> 00:26:40.120 align:start position:0%
that from any particular call site we we
know<00:26:38.570><c> which</c><00:26:38.930><c> method</c><00:26:39.170><c> worked</c><00:26:39.590><c> for</c><00:26:39.830><c> us</c><00:26:39.920><c> last</c>

00:26:40.120 --> 00:26:40.130 align:start position:0%
know which method worked for us last
 

00:26:40.130 --> 00:26:42.250 align:start position:0%
know which method worked for us last
time<00:26:40.280><c> we</c><00:26:40.580><c> try</c><00:26:40.760><c> to</c><00:26:41.240><c> reuse</c><00:26:41.600><c> that</c><00:26:41.810><c> so</c><00:26:41.990><c> we</c><00:26:42.080><c> don't</c>

00:26:42.250 --> 00:26:42.260 align:start position:0%
time we try to reuse that so we don't
 

00:26:42.260 --> 00:26:47.320 align:start position:0%
time we try to reuse that so we don't
actually<00:26:42.980><c> do</c><00:26:43.280><c> a</c><00:26:43.310><c> lookup</c><00:26:43.840><c> each</c><00:26:44.840><c> time</c><00:26:45.230><c> but</c><00:26:46.330><c> there</c>

00:26:47.320 --> 00:26:47.330 align:start position:0%
actually do a lookup each time but there
 

00:26:47.330 --> 00:26:49.060 align:start position:0%
actually do a lookup each time but there
is<00:26:47.450><c> still</c><00:26:47.630><c> a</c><00:26:47.660><c> cost</c><00:26:47.930><c> and</c><00:26:48.230><c> that</c><00:26:48.290><c> initial</c><00:26:48.740><c> lookup</c>

00:26:49.060 --> 00:26:49.070 align:start position:0%
is still a cost and that initial lookup
 

00:26:49.070 --> 00:26:51.250 align:start position:0%
is still a cost and that initial lookup
and<00:26:49.220><c> whatnot</c><00:26:49.490><c> so</c><00:26:49.630><c> try</c><00:26:50.630><c> to</c><00:26:50.690><c> use</c><00:26:50.870><c> virtuals</c>

00:26:51.250 --> 00:26:51.260 align:start position:0%
and whatnot so try to use virtuals
 

00:26:51.260 --> 00:26:55.390 align:start position:0%
and whatnot so try to use virtuals
versus<00:26:51.860><c> interfaces</c><00:26:54.220><c> one</c><00:26:55.220><c> of</c><00:26:55.310><c> the</c>

00:26:55.390 --> 00:26:55.400 align:start position:0%
versus interfaces one of the
 

00:26:55.400 --> 00:26:57.250 align:start position:0%
versus interfaces one of the
optimizations<00:26:56.060><c> that</c><00:26:56.150><c> we've</c><00:26:56.360><c> done</c><00:26:56.570><c> in</c><00:26:57.050><c> the</c>

00:26:57.250 --> 00:26:57.260 align:start position:0%
optimizations that we've done in the
 

00:26:57.260 --> 00:27:00.670 align:start position:0%
optimizations that we've done in the
hotspot<00:26:57.620><c> compiler</c><00:26:58.070><c> is</c><00:26:58.420><c> is</c><00:26:59.420><c> to</c><00:27:00.350><c> dealing</c><00:27:00.650><c> with</c>

00:27:00.670 --> 00:27:00.680 align:start position:0%
hotspot compiler is is to dealing with
 

00:27:00.680 --> 00:27:05.620 align:start position:0%
hotspot compiler is is to dealing with
switches<00:27:03.100><c> you</c><00:27:04.100><c> can</c><00:27:04.130><c> create</c><00:27:04.940><c> the</c><00:27:05.210><c> switch</c>

00:27:05.620 --> 00:27:05.630 align:start position:0%
switches you can create the switch
 

00:27:05.630 --> 00:27:09.070 align:start position:0%
switches you can create the switch
statements<00:27:06.080><c> with</c><00:27:06.230><c> fairly</c><00:27:07.160><c> sparse</c><00:27:08.030><c> values</c><00:27:08.840><c> in</c>

00:27:09.070 --> 00:27:09.080 align:start position:0%
statements with fairly sparse values in
 

00:27:09.080 --> 00:27:12.130 align:start position:0%
statements with fairly sparse values in
your<00:27:09.200><c> cases</c><00:27:09.760><c> in</c><00:27:10.760><c> traditional</c><00:27:11.270><c> compilation</c>

00:27:12.130 --> 00:27:12.140 align:start position:0%
your cases in traditional compilation
 

00:27:12.140 --> 00:27:13.630 align:start position:0%
your cases in traditional compilation
what<00:27:12.290><c> they</c><00:27:12.470><c> would</c><00:27:12.620><c> that</c><00:27:12.980><c> would</c><00:27:13.130><c> happen</c><00:27:13.520><c> in</c>

00:27:13.630 --> 00:27:13.640 align:start position:0%
what they would that would happen in
 

00:27:13.640 --> 00:27:15.010 align:start position:0%
what they would that would happen in
those<00:27:13.760><c> situations</c><00:27:14.270><c> is</c><00:27:14.420><c> that</c><00:27:14.450><c> we</c><00:27:14.660><c> they</c><00:27:14.900><c> would</c>

00:27:15.010 --> 00:27:15.020 align:start position:0%
those situations is that we they would
 

00:27:15.020 --> 00:27:17.950 align:start position:0%
those situations is that we they would
create<00:27:15.260><c> a</c><00:27:15.350><c> big</c><00:27:15.560><c> if-then-else</c><00:27:16.570><c> we</c><00:27:17.570><c> were</c><00:27:17.690><c> using</c>

00:27:17.950 --> 00:27:17.960 align:start position:0%
create a big if-then-else we were using
 

00:27:17.960 --> 00:27:19.450 align:start position:0%
create a big if-then-else we were using
a<00:27:18.050><c> technique</c><00:27:18.350><c> of</c><00:27:18.530><c> double</c><00:27:18.830><c> indexing</c><00:27:19.310><c> which</c>

00:27:19.450 --> 00:27:19.460 align:start position:0%
a technique of double indexing which
 

00:27:19.460 --> 00:27:24.370 align:start position:0%
a technique of double indexing which
will<00:27:19.640><c> allow</c><00:27:19.790><c> us</c><00:27:20.060><c> to</c><00:27:20.180><c> actually</c><00:27:22.060><c> just</c><00:27:23.380><c> dispatch</c>

00:27:24.370 --> 00:27:24.380 align:start position:0%
will allow us to actually just dispatch
 

00:27:24.380 --> 00:27:26.530 align:start position:0%
will allow us to actually just dispatch
basically<00:27:24.860><c> fairly</c><00:27:25.250><c> quickly</c><00:27:25.490><c> on</c><00:27:25.610><c> any</c><00:27:26.270><c> switch</c>

00:27:26.530 --> 00:27:26.540 align:start position:0%
basically fairly quickly on any switch
 

00:27:26.540 --> 00:27:29.770 align:start position:0%
basically fairly quickly on any switch
it's<00:27:26.750><c> not</c><00:27:26.900><c> the</c><00:27:27.170><c> nested-if</c><00:27:27.670><c> combination</c><00:27:28.670><c> so</c><00:27:29.210><c> if</c>

00:27:29.770 --> 00:27:29.780 align:start position:0%
it's not the nested-if combination so if
 

00:27:29.780 --> 00:27:32.020 align:start position:0%
it's not the nested-if combination so if
you're<00:27:30.110><c> comparing</c><00:27:31.010><c> a</c><00:27:31.190><c> single</c><00:27:31.760><c> variable</c>

00:27:32.020 --> 00:27:32.030 align:start position:0%
you're comparing a single variable
 

00:27:32.030 --> 00:27:36.700 align:start position:0%
you're comparing a single variable
against<00:27:32.600><c> a</c><00:27:33.790><c> an</c><00:27:34.790><c> integer</c><00:27:35.480><c> datatype</c><00:27:35.870><c> utilize</c>

00:27:36.700 --> 00:27:36.710 align:start position:0%
against a an integer datatype utilize
 

00:27:36.710 --> 00:27:43.600 align:start position:0%
against a an integer datatype utilize
switches<00:27:37.610><c> over</c><00:27:37.730><c> if</c><00:27:38.450><c> statements</c><00:27:42.460><c> more</c><00:27:43.460><c> and</c>

00:27:43.600 --> 00:27:43.610 align:start position:0%
switches over if statements more and
 

00:27:43.610 --> 00:27:44.950 align:start position:0%
switches over if statements more and
more<00:27:43.760><c> you</c><00:27:44.150><c> know</c><00:27:44.270><c> as</c><00:27:44.390><c> more</c><00:27:44.570><c> and</c><00:27:44.660><c> more</c><00:27:44.780><c> people</c>

00:27:44.950 --> 00:27:44.960 align:start position:0%
more you know as more and more people
 

00:27:44.960 --> 00:27:47.920 align:start position:0%
more you know as more and more people
are<00:27:45.170><c> learning</c><00:27:45.590><c> the</c><00:27:45.800><c> program</c><00:27:46.630><c> some</c><00:27:47.630><c> of</c><00:27:47.660><c> the</c><00:27:47.720><c> new</c>

00:27:47.920 --> 00:27:47.930 align:start position:0%
are learning the program some of the new
 

00:27:47.930 --> 00:27:50.020 align:start position:0%
are learning the program some of the new
people<00:27:48.110><c> new</c><00:27:48.380><c> to</c><00:27:48.500><c> programming</c><00:27:48.650><c> are</c><00:27:49.250><c> have</c><00:27:50.000><c> a</c>

00:27:50.020 --> 00:27:50.030 align:start position:0%
people new to programming are have a
 

00:27:50.030 --> 00:27:52.840 align:start position:0%
people new to programming are have a
tendency<00:27:50.480><c> to</c><00:27:50.510><c> use</c><00:27:50.750><c> exceptions</c><00:27:51.320><c> for</c><00:27:51.980><c> control</c>

00:27:52.840 --> 00:27:52.850 align:start position:0%
tendency to use exceptions for control
 

00:27:52.850 --> 00:27:56.590 align:start position:0%
tendency to use exceptions for control
of<00:27:53.120><c> their</c><00:27:53.480><c> program</c><00:27:54.410><c> flow</c><00:27:54.850><c> you</c><00:27:55.850><c> really</c><00:27:56.360><c> should</c>

00:27:56.590 --> 00:27:56.600 align:start position:0%
of their program flow you really should
 

00:27:56.600 --> 00:28:00.130 align:start position:0%
of their program flow you really should
try<00:27:56.780><c> to</c><00:27:58.120><c> use</c><00:27:59.120><c> exceptions</c><00:27:59.690><c> for</c><00:28:00.020><c> the</c>

00:28:00.130 --> 00:28:00.140 align:start position:0%
try to use exceptions for the
 

00:28:00.140 --> 00:28:02.950 align:start position:0%
try to use exceptions for the
exceptional<00:28:00.590><c> cases</c><00:28:01.040><c> and</c><00:28:01.220><c> not</c><00:28:01.370><c> for</c><00:28:01.760><c> for</c><00:28:02.720><c> actual</c>

00:28:02.950 --> 00:28:02.960 align:start position:0%
exceptional cases and not for for actual
 

00:28:02.960 --> 00:28:06.010 align:start position:0%
exceptional cases and not for for actual
flow<00:28:03.200><c> of</c><00:28:03.260><c> your</c><00:28:03.830><c> program</c><00:28:04.250><c> so</c><00:28:04.850><c> because</c><00:28:05.810><c> there</c><00:28:05.930><c> is</c>

00:28:06.010 --> 00:28:06.020 align:start position:0%
flow of your program so because there is
 

00:28:06.020 --> 00:28:07.780 align:start position:0%
flow of your program so because there is
a<00:28:06.050><c> quite</c><00:28:06.500><c> a</c><00:28:06.530><c> bit</c><00:28:06.680><c> of</c><00:28:06.710><c> cost</c><00:28:07.010><c> in</c><00:28:07.400><c> the</c><00:28:07.490><c> VM</c><00:28:07.760><c> to</c>

00:28:07.780 --> 00:28:07.790 align:start position:0%
a quite a bit of cost in the VM to
 

00:28:07.790 --> 00:28:10.900 align:start position:0%
a quite a bit of cost in the VM to
actually<00:28:08.360><c> handle</c><00:28:08.720><c> that</c><00:28:08.750><c> exception</c><00:28:09.320><c> so</c><00:28:10.070><c> if</c>

00:28:10.900 --> 00:28:10.910 align:start position:0%
actually handle that exception so if
 

00:28:10.910 --> 00:28:12.730 align:start position:0%
actually handle that exception so if
you're<00:28:11.180><c> going</c><00:28:11.360><c> to</c><00:28:11.480><c> if</c><00:28:11.990><c> there's</c><00:28:12.230><c> a</c><00:28:12.290><c> good</c>

00:28:12.730 --> 00:28:12.740 align:start position:0%
you're going to if there's a good
 

00:28:12.740 --> 00:28:14.380 align:start position:0%
you're going to if there's a good
likelihood<00:28:12.950><c> that</c>

00:28:14.380 --> 00:28:14.390 align:start position:0%
likelihood that
 

00:28:14.390 --> 00:28:16.090 align:start position:0%
likelihood that
that<00:28:14.540><c> the</c><00:28:14.870><c> routine</c><00:28:15.200><c> you're</c><00:28:15.350><c> calling</c><00:28:15.770><c> is</c><00:28:15.890><c> going</c>

00:28:16.090 --> 00:28:16.100 align:start position:0%
that the routine you're calling is going
 

00:28:16.100 --> 00:28:18.010 align:start position:0%
that the routine you're calling is going
to<00:28:16.190><c> produce</c><00:28:16.340><c> an</c><00:28:16.640><c> error</c><00:28:16.850><c> then</c><00:28:17.690><c> you</c><00:28:17.870><c> should</c>

00:28:18.010 --> 00:28:18.020 align:start position:0%
to produce an error then you should
 

00:28:18.020 --> 00:28:19.720 align:start position:0%
to produce an error then you should
probably<00:28:18.080><c> use</c><00:28:18.380><c> error</c><00:28:18.680><c> codes</c><00:28:19.040><c> and</c><00:28:19.340><c> test</c><00:28:19.550><c> the</c>

00:28:19.720 --> 00:28:19.730 align:start position:0%
probably use error codes and test the
 

00:28:19.730 --> 00:28:21.280 align:start position:0%
probably use error codes and test the
result<00:28:20.090><c> when</c><00:28:20.270><c> you</c><00:28:20.360><c> come</c><00:28:20.510><c> back</c><00:28:20.660><c> as</c><00:28:20.900><c> opposed</c><00:28:21.170><c> to</c>

00:28:21.280 --> 00:28:21.290 align:start position:0%
result when you come back as opposed to
 

00:28:21.290 --> 00:28:22.840 align:start position:0%
result when you come back as opposed to
throwing<00:28:21.440><c> the</c><00:28:21.620><c> exception</c><00:28:22.070><c> because</c><00:28:22.610><c> that</c>

00:28:22.840 --> 00:28:22.850 align:start position:0%
throwing the exception because that
 

00:28:22.850 --> 00:28:24.970 align:start position:0%
throwing the exception because that
would<00:28:23.000><c> be</c><00:28:23.090><c> faster</c><00:28:24.020><c> than</c><00:28:24.170><c> and</c><00:28:24.530><c> then</c><00:28:24.680><c> actually</c>

00:28:24.970 --> 00:28:24.980 align:start position:0%
would be faster than and then actually
 

00:28:24.980 --> 00:28:27.340 align:start position:0%
would be faster than and then actually
throwing<00:28:25.910><c> the</c><00:28:26.060><c> exception</c><00:28:26.450><c> and</c><00:28:26.570><c> in</c><00:28:26.780><c> it</c><00:28:26.960><c> and</c>

00:28:27.340 --> 00:28:27.350 align:start position:0%
throwing the exception and in it and
 

00:28:27.350 --> 00:28:32.560 align:start position:0%
throwing the exception and in it and
having<00:28:27.590><c> the</c><00:28:27.680><c> VM</c><00:28:27.860><c> deal</c><00:28:28.040><c> with</c><00:28:28.190><c> it</c><00:28:30.910><c> and</c><00:28:31.910><c> finally</c><00:28:32.540><c> I</c>

00:28:32.560 --> 00:28:32.570 align:start position:0%
having the VM deal with it and finally I
 

00:28:32.570 --> 00:28:38.080 align:start position:0%
having the VM deal with it and finally I
think<00:28:32.750><c> you</c><00:28:33.350><c> should</c><00:28:33.530><c> think</c><00:28:33.740><c> Pierre</c><00:28:34.700><c> Java</c><00:28:37.090><c> in</c>

00:28:38.080 --> 00:28:38.090 align:start position:0%
think you should think Pierre Java in
 

00:28:38.090 --> 00:28:39.940 align:start position:0%
think you should think Pierre Java in
the<00:28:38.600><c> 1-3-1</c><00:28:39.110><c> code</c><00:28:39.320><c> we've</c><00:28:39.560><c> implemented</c>

00:28:39.940 --> 00:28:39.950 align:start position:0%
the 1-3-1 code we've implemented
 

00:28:39.950 --> 00:28:41.950 align:start position:0%
the 1-3-1 code we've implemented
something<00:28:40.460><c> called</c><00:28:40.670><c> compiled</c><00:28:41.360><c> natives</c><00:28:41.720><c> which</c>

00:28:41.950 --> 00:28:41.960 align:start position:0%
something called compiled natives which
 

00:28:41.960 --> 00:28:44.890 align:start position:0%
something called compiled natives which
allow<00:28:42.260><c> you</c><00:28:42.320><c> to</c><00:28:42.530><c> call</c><00:28:43.100><c> J&amp;I</c><00:28:43.580><c> code</c><00:28:44.510><c> fairly</c>

00:28:44.890 --> 00:28:44.900 align:start position:0%
allow you to call J&amp;I code fairly
 

00:28:44.900 --> 00:28:46.840 align:start position:0%
allow you to call J&amp;I code fairly
efficiently<00:28:45.890><c> we</c><00:28:46.100><c> don't</c><00:28:46.250><c> have</c><00:28:46.400><c> to</c><00:28:46.490><c> go</c><00:28:46.610><c> through</c>

00:28:46.840 --> 00:28:46.850 align:start position:0%
efficiently we don't have to go through
 

00:28:46.850 --> 00:28:50.380 align:start position:0%
efficiently we don't have to go through
any<00:28:47.270><c> kind</c><00:28:47.540><c> of</c><00:28:48.910><c> marshalling</c><00:28:49.910><c> code</c><00:28:50.120><c> which</c>

00:28:50.380 --> 00:28:50.390 align:start position:0%
any kind of marshalling code which
 

00:28:50.390 --> 00:28:51.970 align:start position:0%
any kind of marshalling code which
marshals<00:28:50.900><c> up</c><00:28:51.020><c> the</c><00:28:51.140><c> parameters</c><00:28:51.620><c> and</c><00:28:51.680><c> then</c><00:28:51.800><c> goes</c>

00:28:51.970 --> 00:28:51.980 align:start position:0%
marshals up the parameters and then goes
 

00:28:51.980 --> 00:28:54.490 align:start position:0%
marshals up the parameters and then goes
off<00:28:52.160><c> and</c><00:28:52.460><c> calls</c><00:28:53.300><c> the</c><00:28:53.420><c> routine</c><00:28:53.720><c> what</c><00:28:54.170><c> happens</c>

00:28:54.490 --> 00:28:54.500 align:start position:0%
off and calls the routine what happens
 

00:28:54.500 --> 00:28:56.530 align:start position:0%
off and calls the routine what happens
with<00:28:54.650><c> these</c><00:28:55.160><c> compiled</c><00:28:55.760><c> natives</c><00:28:56.120><c> is</c><00:28:56.270><c> that</c><00:28:56.420><c> we</c>

00:28:56.530 --> 00:28:56.540 align:start position:0%
with these compiled natives is that we
 

00:28:56.540 --> 00:28:58.810 align:start position:0%
with these compiled natives is that we
can<00:28:56.720><c> actually</c><00:28:57.130><c> have</c><00:28:58.130><c> we</c><00:28:58.460><c> actually</c><00:28:58.700><c> have</c><00:28:58.790><c> a</c>

00:28:58.810 --> 00:28:58.820 align:start position:0%
can actually have we actually have a
 

00:28:58.820 --> 00:29:00.910 align:start position:0%
can actually have we actually have a
thunking<00:28:59.180><c> layer</c><00:28:59.330><c> which</c><00:28:59.570><c> just</c><00:28:59.780><c> already</c><00:29:00.650><c> knows</c>

00:29:00.910 --> 00:29:00.920 align:start position:0%
thunking layer which just already knows
 

00:29:00.920 --> 00:29:01.900 align:start position:0%
thunking layer which just already knows
what<00:29:01.100><c> the</c><00:29:01.190><c> parameters</c><00:29:01.520><c> are</c><00:29:01.580><c> going</c><00:29:01.760><c> to</c><00:29:01.820><c> look</c>

00:29:01.900 --> 00:29:01.910 align:start position:0%
what the parameters are going to look
 

00:29:01.910 --> 00:29:05.470 align:start position:0%
what the parameters are going to look
like<00:29:01.970><c> and</c><00:29:02.510><c> assembles</c><00:29:03.290><c> the</c><00:29:03.440><c> parameters</c><00:29:04.280><c> for</c><00:29:05.030><c> a</c>

00:29:05.470 --> 00:29:05.480 align:start position:0%
like and assembles the parameters for a
 

00:29:05.480 --> 00:29:09.790 align:start position:0%
like and assembles the parameters for a
call<00:29:05.990><c> to</c><00:29:06.170><c> the</c><00:29:06.260><c> J&amp;I</c><00:29:06.650><c> routine</c><00:29:08.170><c> so</c><00:29:09.170><c> that</c><00:29:09.380><c> so</c>

00:29:09.790 --> 00:29:09.800 align:start position:0%
call to the J&amp;I routine so that so
 

00:29:09.800 --> 00:29:12.100 align:start position:0%
call to the J&amp;I routine so that so
you're<00:29:09.980><c> on</c><00:29:10.400><c> one</c><00:29:10.580><c> side</c><00:29:10.760><c> your</c><00:29:10.940><c> J&amp;I</c><00:29:11.240><c> calls</c><00:29:11.900><c> are</c>

00:29:12.100 --> 00:29:12.110 align:start position:0%
you're on one side your J&amp;I calls are
 

00:29:12.110 --> 00:29:14.410 align:start position:0%
you're on one side your J&amp;I calls are
going<00:29:12.230><c> to</c><00:29:12.470><c> be</c><00:29:12.860><c> a</c><00:29:12.890><c> little</c><00:29:13.280><c> bit</c><00:29:13.430><c> more</c><00:29:13.520><c> more</c>

00:29:14.410 --> 00:29:14.420 align:start position:0%
going to be a little bit more more
 

00:29:14.420 --> 00:29:16.480 align:start position:0%
going to be a little bit more more
efficient<00:29:14.810><c> and</c><00:29:14.870><c> faster</c><00:29:15.020><c> and</c><00:29:15.500><c> once</c><00:29:16.190><c> we</c><00:29:16.310><c> want</c>

00:29:16.480 --> 00:29:16.490 align:start position:0%
efficient and faster and once we want
 

00:29:16.490 --> 00:29:18.760 align:start position:0%
efficient and faster and once we want
but<00:29:16.940><c> on</c><00:29:17.090><c> the</c><00:29:17.210><c> other</c><00:29:17.630><c> side</c><00:29:17.900><c> there</c><00:29:18.350><c> still</c><00:29:18.590><c> is</c><00:29:18.740><c> a</c>

00:29:18.760 --> 00:29:18.770 align:start position:0%
but on the other side there still is a
 

00:29:18.770 --> 00:29:22.750 align:start position:0%
but on the other side there still is a
cost<00:29:19.040><c> in</c><00:29:20.000><c> using</c><00:29:20.470><c> j'ni</c><00:29:21.470><c> or</c><00:29:21.830><c> or</c><00:29:22.070><c> je</c><00:29:22.280><c> direct</c><00:29:22.610><c> which</c>

00:29:22.750 --> 00:29:22.760 align:start position:0%
cost in using j'ni or or je direct which
 

00:29:22.760 --> 00:29:24.820 align:start position:0%
cost in using j'ni or or je direct which
is<00:29:22.940><c> built</c><00:29:23.150><c> on</c><00:29:23.420><c> top</c><00:29:23.480><c> of</c><00:29:23.750><c> je</c><00:29:24.050><c> and</c><00:29:24.170><c> I</c><00:29:24.230><c> there's</c><00:29:24.680><c> this</c>

00:29:24.820 --> 00:29:24.830 align:start position:0%
is built on top of je and I there's this
 

00:29:24.830 --> 00:29:27.880 align:start position:0%
is built on top of je and I there's this
translation<00:29:25.460><c> of</c><00:29:25.580><c> later</c><00:29:25.880><c> involved</c><00:29:26.540><c> and</c><00:29:26.890><c> it</c>

00:29:27.880 --> 00:29:27.890 align:start position:0%
translation of later involved and it
 

00:29:27.890 --> 00:29:30.820 align:start position:0%
translation of later involved and it
costs<00:29:28.670><c> and</c><00:29:29.570><c> then</c><00:29:30.080><c> also</c><00:29:30.230><c> if</c><00:29:30.410><c> you're</c><00:29:30.530><c> doing</c><00:29:30.560><c> will</c>

00:29:30.820 --> 00:29:30.830 align:start position:0%
costs and then also if you're doing will
 

00:29:30.830 --> 00:29:32.410 align:start position:0%
costs and then also if you're doing will
call<00:29:31.040><c> dealing</c><00:29:31.550><c> with</c><00:29:31.640><c> callbacks</c><00:29:32.030><c> that's</c><00:29:32.300><c> going</c>

00:29:32.410 --> 00:29:32.420 align:start position:0%
call dealing with callbacks that's going
 

00:29:32.420 --> 00:29:35.110 align:start position:0%
call dealing with callbacks that's going
to<00:29:32.480><c> require</c><00:29:33.230><c> some</c><00:29:34.010><c> kind</c><00:29:34.130><c> of</c><00:29:34.220><c> lookup</c><00:29:34.580><c> so</c><00:29:35.000><c> you</c>

00:29:35.110 --> 00:29:35.120 align:start position:0%
to require some kind of lookup so you
 

00:29:35.120 --> 00:29:37.360 align:start position:0%
to require some kind of lookup so you
should<00:29:35.270><c> try</c><00:29:35.390><c> to</c><00:29:35.480><c> use</c><00:29:35.600><c> Java</c><00:29:36.200><c> wherever</c><00:29:37.010><c> you</c>

00:29:37.360 --> 00:29:37.370 align:start position:0%
should try to use Java wherever you
 

00:29:37.370 --> 00:29:40.030 align:start position:0%
should try to use Java wherever you
possibly<00:29:37.760><c> can</c><00:29:38.110><c> and</c><00:29:39.110><c> you</c><00:29:39.470><c> know</c><00:29:39.590><c> try</c><00:29:39.740><c> to</c><00:29:39.800><c> avoid</c>

00:29:40.030 --> 00:29:40.040 align:start position:0%
possibly can and you know try to avoid
 

00:29:40.040 --> 00:29:42.340 align:start position:0%
possibly can and you know try to avoid
going<00:29:40.220><c> off</c><00:29:40.490><c> and</c><00:29:40.700><c> as</c><00:29:41.090><c> time</c><00:29:41.300><c> wear</c><00:29:41.480><c> goes</c><00:29:41.930><c> on</c><00:29:42.110><c> we're</c>

00:29:42.340 --> 00:29:42.350 align:start position:0%
going off and as time wear goes on we're
 

00:29:42.350 --> 00:29:44.470 align:start position:0%
going off and as time wear goes on we're
going<00:29:42.530><c> to</c><00:29:42.680><c> get</c><00:29:43.010><c> the</c><00:29:43.130><c> compiler</c><00:29:43.580><c> faster</c><00:29:44.330><c> and</c>

00:29:44.470 --> 00:29:44.480 align:start position:0%
going to get the compiler faster and
 

00:29:44.480 --> 00:29:47.500 align:start position:0%
going to get the compiler faster and
faster<00:29:44.600><c> and</c><00:29:44.990><c> you</c><00:29:45.890><c> can</c><00:29:46.700><c> forget</c><00:29:46.940><c> about</c><00:29:47.000><c> C</c><00:29:47.360><c> and</c>

00:29:47.500 --> 00:29:47.510 align:start position:0%
faster and you can forget about C and
 

00:29:47.510 --> 00:29:51.370 align:start position:0%
faster and you can forget about C and
C++<00:29:49.690><c> okay</c><00:29:50.690><c> with</c><00:29:50.900><c> that</c>

00:29:51.370 --> 00:29:51.380 align:start position:0%
C++ okay with that
 

00:29:51.380 --> 00:29:59.720 align:start position:0%
C++ okay with that
I'll<00:29:51.650><c> pass</c><00:29:51.860><c> it</c><00:29:52.010><c> on</c><00:29:52.130><c> to</c><00:29:52.160><c> Andy</c><00:29:57.820><c> hi</c>

00:29:59.720 --> 00:29:59.730 align:start position:0%
I'll pass it on to Andy hi
 

00:29:59.730 --> 00:30:02.330 align:start position:0%
I'll pass it on to Andy hi
so<00:30:00.570><c> I</c><00:30:00.600><c> get</c><00:30:00.990><c> to</c><00:30:01.110><c> do</c><00:30:01.289><c> my</c><00:30:01.320><c> little</c><00:30:01.710><c> bit</c><00:30:01.919><c> now</c><00:30:02.100><c> where</c><00:30:02.309><c> I</c>

00:30:02.330 --> 00:30:02.340 align:start position:0%
so I get to do my little bit now where I
 

00:30:02.340 --> 00:30:04.580 align:start position:0%
so I get to do my little bit now where I
talk<00:30:03.059><c> about</c><00:30:03.090><c> how</c><00:30:03.450><c> important</c><00:30:03.929><c> measuring</c><00:30:04.350><c> is</c><00:30:04.470><c> so</c>

00:30:04.580 --> 00:30:04.590 align:start position:0%
talk about how important measuring is so
 

00:30:04.590 --> 00:30:07.310 align:start position:0%
talk about how important measuring is so
all<00:30:04.740><c> of</c><00:30:04.830><c> this</c><00:30:05.419><c> all</c><00:30:06.419><c> of</c><00:30:06.480><c> the</c><00:30:06.720><c> information</c><00:30:06.929><c> that</c>

00:30:07.310 --> 00:30:07.320 align:start position:0%
all of this all of the information that
 

00:30:07.320 --> 00:30:08.870 align:start position:0%
all of this all of the information that
we've<00:30:07.440><c> been</c><00:30:07.559><c> giving</c><00:30:07.889><c> you</c><00:30:08.039><c> is</c><00:30:08.250><c> kind</c><00:30:08.490><c> of</c><00:30:08.549><c> useless</c>

00:30:08.870 --> 00:30:08.880 align:start position:0%
we've been giving you is kind of useless
 

00:30:08.880 --> 00:30:10.730 align:start position:0%
we've been giving you is kind of useless
if<00:30:09.179><c> you</c><00:30:09.210><c> then</c><00:30:09.870><c> go</c><00:30:09.899><c> and</c><00:30:10.019><c> apply</c><00:30:10.260><c> it</c><00:30:10.380><c> willy-nilly</c>

00:30:10.730 --> 00:30:10.740 align:start position:0%
if you then go and apply it willy-nilly
 

00:30:10.740 --> 00:30:13.899 align:start position:0%
if you then go and apply it willy-nilly
to<00:30:11.100><c> your</c><00:30:11.279><c> entire</c><00:30:11.610><c> 60</c><00:30:12.059><c> mega</c><00:30:12.240><c> byte</c><00:30:12.419><c> code</c><00:30:12.659><c> base</c>

00:30:13.899 --> 00:30:13.909 align:start position:0%
to your entire 60 mega byte code base
 

00:30:13.909 --> 00:30:16.220 align:start position:0%
to your entire 60 mega byte code base
it's<00:30:14.909><c> really</c><00:30:15.149><c> important</c><00:30:15.539><c> all</c><00:30:15.690><c> the</c><00:30:15.899><c> textbook</c>

00:30:16.220 --> 00:30:16.230 align:start position:0%
it's really important all the textbook
 

00:30:16.230 --> 00:30:18.049 align:start position:0%
it's really important all the textbook
advice<00:30:16.620><c> that</c><00:30:16.889><c> says</c><00:30:17.100><c> don't</c><00:30:17.789><c> optimize</c>

00:30:18.049 --> 00:30:18.059 align:start position:0%
advice that says don't optimize
 

00:30:18.059 --> 00:30:21.680 align:start position:0%
advice that says don't optimize
prematurely<00:30:18.950><c> it's</c><00:30:19.950><c> really</c><00:30:20.190><c> true</c><00:30:20.570><c> what</c><00:30:21.570><c> you</c>

00:30:21.680 --> 00:30:21.690 align:start position:0%
prematurely it's really true what you
 

00:30:21.690 --> 00:30:23.299 align:start position:0%
prematurely it's really true what you
should<00:30:21.840><c> be</c><00:30:21.929><c> doing</c><00:30:22.230><c> is</c><00:30:22.350><c> measuring</c><00:30:22.590><c> finding</c><00:30:23.220><c> the</c>

00:30:23.299 --> 00:30:23.309 align:start position:0%
should be doing is measuring finding the
 

00:30:23.309 --> 00:30:25.070 align:start position:0%
should be doing is measuring finding the
major<00:30:23.460><c> bottlenecks</c><00:30:24.029><c> optimizing</c><00:30:24.990><c> those</c>

00:30:25.070 --> 00:30:25.080 align:start position:0%
major bottlenecks optimizing those
 

00:30:25.080 --> 00:30:26.840 align:start position:0%
major bottlenecks optimizing those
bottlenecks<00:30:25.649><c> making</c><00:30:26.070><c> sure</c><00:30:26.279><c> that</c><00:30:26.490><c> it</c><00:30:26.639><c> actually</c>

00:30:26.840 --> 00:30:26.850 align:start position:0%
bottlenecks making sure that it actually
 

00:30:26.850 --> 00:30:29.480 align:start position:0%
bottlenecks making sure that it actually
worked<00:30:27.330><c> because</c><00:30:28.230><c> we've</c><00:30:28.500><c> seen</c><00:30:28.710><c> optimizations</c>

00:30:29.480 --> 00:30:29.490 align:start position:0%
worked because we've seen optimizations
 

00:30:29.490 --> 00:30:32.029 align:start position:0%
worked because we've seen optimizations
that<00:30:30.049><c> have</c><00:30:31.049><c> actually</c><00:30:31.380><c> slowed</c><00:30:31.559><c> things</c><00:30:31.740><c> down</c>

00:30:32.029 --> 00:30:32.039 align:start position:0%
that have actually slowed things down
 

00:30:32.039 --> 00:30:35.000 align:start position:0%
that have actually slowed things down
I<00:30:32.389><c> also</c><00:30:33.389><c> go</c><00:30:33.630><c> through</c><00:30:33.899><c> what</c><00:30:34.620><c> you</c><00:30:34.740><c> should</c><00:30:34.889><c> try</c>

00:30:35.000 --> 00:30:35.010 align:start position:0%
I also go through what you should try
 

00:30:35.010 --> 00:30:38.750 align:start position:0%
I also go through what you should try
and<00:30:35.220><c> measure</c><00:30:35.870><c> how</c><00:30:36.870><c> with</c><00:30:37.350><c> the</c><00:30:37.529><c> the</c><00:30:37.980><c> 1-3-1</c><00:30:38.490><c> java</c>

00:30:38.750 --> 00:30:38.760 align:start position:0%
and measure how with the the 1-3-1 java
 

00:30:38.760 --> 00:30:40.340 align:start position:0%
and measure how with the the 1-3-1 java
vm<00:30:38.970><c> we've</c><00:30:39.240><c> improved</c><00:30:39.600><c> things</c><00:30:39.899><c> and</c><00:30:40.169><c> how</c><00:30:40.230><c> you've</c>

00:30:40.340 --> 00:30:40.350 align:start position:0%
vm we've improved things and how you've
 

00:30:40.350 --> 00:30:42.320 align:start position:0%
vm we've improved things and how you've
actually<00:30:40.470><c> got</c><00:30:40.710><c> tools</c><00:30:40.980><c> to</c><00:30:41.730><c> enable</c><00:30:42.059><c> you</c><00:30:42.299><c> to</c>

00:30:42.320 --> 00:30:42.330 align:start position:0%
actually got tools to enable you to
 

00:30:42.330 --> 00:30:44.180 align:start position:0%
actually got tools to enable you to
measure<00:30:42.570><c> those</c><00:30:42.809><c> things</c><00:30:43.110><c> and</c><00:30:43.350><c> then</c><00:30:43.950><c> I'll</c><00:30:44.039><c> just</c>

00:30:44.180 --> 00:30:44.190 align:start position:0%
measure those things and then I'll just
 

00:30:44.190 --> 00:30:46.659 align:start position:0%
measure those things and then I'll just
cover<00:30:44.429><c> a</c><00:30:44.519><c> few</c><00:30:44.789><c> little</c><00:30:44.970><c> myths</c><00:30:45.330><c> that's</c><00:30:45.570><c> still</c>

00:30:46.659 --> 00:30:46.669 align:start position:0%
cover a few little myths that's still
 

00:30:46.669 --> 00:30:49.909 align:start position:0%
cover a few little myths that's still
still<00:30:47.669><c> around</c><00:30:47.940><c> in</c><00:30:48.149><c> all</c><00:30:48.240><c> those</c><00:30:48.360><c> textbooks</c><00:30:48.919><c> that</c>

00:30:49.909 --> 00:30:49.919 align:start position:0%
still around in all those textbooks that
 

00:30:49.919 --> 00:30:53.960 align:start position:0%
still around in all those textbooks that
are<00:30:49.980><c> not</c><00:30:50.519><c> quite</c><00:30:50.610><c> true</c><00:30:50.909><c> on</c><00:30:51.149><c> Mac</c><00:30:51.330><c> OS</c><00:30:51.570><c> 10</c><00:30:52.850><c> so</c><00:30:53.850><c> the</c>

00:30:53.960 --> 00:30:53.970 align:start position:0%
are not quite true on Mac OS 10 so the
 

00:30:53.970 --> 00:30:56.060 align:start position:0%
are not quite true on Mac OS 10 so the
first<00:30:54.149><c> obvious</c><00:30:54.360><c> thing</c><00:30:54.570><c> that</c><00:30:55.110><c> you</c><00:30:55.889><c> always</c>

00:30:56.060 --> 00:30:56.070 align:start position:0%
first obvious thing that you always
 

00:30:56.070 --> 00:30:57.980 align:start position:0%
first obvious thing that you always
think<00:30:56.370><c> of</c><00:30:56.490><c> is</c><00:30:56.700><c> how</c><00:30:56.850><c> fast</c><00:30:57.120><c> is</c><00:30:57.240><c> my</c><00:30:57.389><c> program</c><00:30:57.779><c> going</c>

00:30:57.980 --> 00:30:57.990 align:start position:0%
think of is how fast is my program going
 

00:30:57.990 --> 00:31:01.070 align:start position:0%
think of is how fast is my program going
you<00:30:58.710><c> look</c><00:30:58.830><c> at</c><00:30:58.950><c> the</c><00:30:59.039><c> CPU</c><00:30:59.490><c> meter</c><00:30:59.639><c> on</c><00:30:59.940><c> Mac</c><00:31:00.779><c> OS</c><00:31:01.049><c> 10</c>

00:31:01.070 --> 00:31:01.080 align:start position:0%
you look at the CPU meter on Mac OS 10
 

00:31:01.080 --> 00:31:03.740 align:start position:0%
you look at the CPU meter on Mac OS 10
and<00:31:01.559><c> it's</c><00:31:01.679><c> tagged</c><00:31:01.919><c> 100%</c><00:31:02.789><c> so</c><00:31:03.179><c> obviously</c><00:31:03.630><c> you</c>

00:31:03.740 --> 00:31:03.750 align:start position:0%
and it's tagged 100% so obviously you
 

00:31:03.750 --> 00:31:06.440 align:start position:0%
and it's tagged 100% so obviously you
should<00:31:03.929><c> be</c><00:31:04.019><c> looking</c><00:31:04.169><c> at</c><00:31:04.669><c> where</c><00:31:05.669><c> the</c><00:31:05.789><c> CPU</c><00:31:06.000><c> time</c>

00:31:06.440 --> 00:31:06.450 align:start position:0%
should be looking at where the CPU time
 

00:31:06.450 --> 00:31:08.600 align:start position:0%
should be looking at where the CPU time
is<00:31:06.630><c> going</c><00:31:06.899><c> your</c><00:31:07.110><c> your</c><00:31:07.440><c> your</c><00:31:07.860><c> program</c><00:31:08.309><c> whatever</c>

00:31:08.600 --> 00:31:08.610 align:start position:0%
is going your your your program whatever
 

00:31:08.610 --> 00:31:13.639 align:start position:0%
is going your your your program whatever
it's<00:31:08.730><c> doing</c><00:31:09.000><c> is</c><00:31:09.090><c> CPU</c><00:31:09.480><c> limited</c><00:31:12.380><c> the</c><00:31:13.380><c> first</c>

00:31:13.639 --> 00:31:13.649 align:start position:0%
it's doing is CPU limited the first
 

00:31:13.649 --> 00:31:15.500 align:start position:0%
it's doing is CPU limited the first
thing<00:31:13.889><c> that</c><00:31:13.919><c> we</c><00:31:14.130><c> do</c><00:31:14.309><c> for</c><00:31:14.610><c> you</c><00:31:14.789><c> in</c><00:31:14.909><c> hotspot</c><00:31:15.360><c> is</c>

00:31:15.500 --> 00:31:15.510 align:start position:0%
thing that we do for you in hotspot is
 

00:31:15.510 --> 00:31:17.210 align:start position:0%
thing that we do for you in hotspot is
we<00:31:15.659><c> compile</c><00:31:16.110><c> all</c><00:31:16.289><c> those</c><00:31:16.440><c> hot</c><00:31:16.620><c> methods</c><00:31:16.830><c> we're</c>

00:31:17.210 --> 00:31:17.220 align:start position:0%
we compile all those hot methods we're
 

00:31:17.220 --> 00:31:18.980 align:start position:0%
we compile all those hot methods we're
counting<00:31:17.639><c> which</c><00:31:17.789><c> one</c><00:31:17.970><c> gets</c><00:31:18.179><c> used</c><00:31:18.389><c> most</c><00:31:18.659><c> and</c>

00:31:18.980 --> 00:31:18.990 align:start position:0%
counting which one gets used most and
 

00:31:18.990 --> 00:31:20.990 align:start position:0%
counting which one gets used most and
we're<00:31:19.919><c> compiling</c><00:31:20.159><c> the</c><00:31:20.399><c> ones</c><00:31:20.580><c> that</c><00:31:20.820><c> get</c><00:31:20.970><c> you</c>

00:31:20.990 --> 00:31:21.000 align:start position:0%
we're compiling the ones that get you
 

00:31:21.000 --> 00:31:22.519 align:start position:0%
we're compiling the ones that get you
you<00:31:21.210><c> get</c><00:31:21.419><c> used</c><00:31:21.720><c> to</c><00:31:21.870><c> it</c><00:31:21.960><c> called</c><00:31:22.289><c> most</c>

00:31:22.519 --> 00:31:22.529 align:start position:0%
you get used to it called most
 

00:31:22.529 --> 00:31:27.110 align:start position:0%
you get used to it called most
frequently<00:31:22.980><c> so</c><00:31:24.740><c> obviously</c><00:31:25.740><c> look</c><00:31:26.730><c> at</c><00:31:26.789><c> the</c><00:31:26.940><c> hot</c>

00:31:27.110 --> 00:31:27.120 align:start position:0%
frequently so obviously look at the hot
 

00:31:27.120 --> 00:31:28.430 align:start position:0%
frequently so obviously look at the hot
method<00:31:27.480><c> look</c><00:31:27.630><c> at</c><00:31:27.750><c> those</c><00:31:27.870><c> ones</c><00:31:28.110><c> that</c><00:31:28.260><c> are</c><00:31:28.350><c> being</c>

00:31:28.430 --> 00:31:28.440 align:start position:0%
method look at those ones that are being
 

00:31:28.440 --> 00:31:31.220 align:start position:0%
method look at those ones that are being
compiled<00:31:28.830><c> and</c><00:31:29.610><c> I'll</c><00:31:29.730><c> cover</c><00:31:30.210><c> use</c><00:31:30.450><c> it</c><00:31:30.600><c> how</c><00:31:30.840><c> using</c>

00:31:31.220 --> 00:31:31.230 align:start position:0%
compiled and I'll cover use it how using
 

00:31:31.230 --> 00:31:32.930 align:start position:0%
compiled and I'll cover use it how using
X<00:31:31.380><c> prof</c><00:31:31.649><c> will</c><00:31:31.860><c> actually</c><00:31:32.100><c> tell</c><00:31:32.309><c> you</c><00:31:32.460><c> which</c><00:31:32.730><c> ones</c>

00:31:32.930 --> 00:31:32.940 align:start position:0%
X prof will actually tell you which ones
 

00:31:32.940 --> 00:31:35.620 align:start position:0%
X prof will actually tell you which ones
are<00:31:33.059><c> being</c><00:31:33.149><c> compiled</c><00:31:34.010><c> now</c><00:31:35.010><c> secondly</c>

00:31:35.620 --> 00:31:35.630 align:start position:0%
are being compiled now secondly
 

00:31:35.630 --> 00:31:39.680 align:start position:0%
are being compiled now secondly
depending<00:31:36.630><c> on</c><00:31:36.779><c> where</c><00:31:37.289><c> that</c><00:31:37.320><c> CPU</c><00:31:37.950><c> measure</c><00:31:38.690><c> the</c>

00:31:39.680 --> 00:31:39.690 align:start position:0%
depending on where that CPU measure the
 

00:31:39.690 --> 00:31:42.159 align:start position:0%
depending on where that CPU measure the
CPU<00:31:40.049><c> meter</c><00:31:40.169><c> is</c><00:31:40.470><c> reading</c><00:31:40.860><c> you</c><00:31:41.519><c> might</c><00:31:41.700><c> be</c><00:31:41.820><c> using</c>

00:31:42.159 --> 00:31:42.169 align:start position:0%
CPU meter is reading you might be using
 

00:31:42.169 --> 00:31:45.500 align:start position:0%
CPU meter is reading you might be using
system<00:31:43.169><c> CPU</c><00:31:43.380><c> and</c><00:31:43.769><c> not</c><00:31:43.919><c> use</c><00:31:44.130><c> a</c><00:31:44.159><c> CPU</c><00:31:44.639><c> in</c><00:31:45.389><c> which</c>

00:31:45.500 --> 00:31:45.510 align:start position:0%
system CPU and not use a CPU in which
 

00:31:45.510 --> 00:31:48.259 align:start position:0%
system CPU and not use a CPU in which
case<00:31:45.690><c> you</c><00:31:45.809><c> might</c><00:31:46.019><c> be</c><00:31:46.340><c> paging</c><00:31:47.340><c> and</c><00:31:47.610><c> the</c><00:31:48.120><c> poor</c>

00:31:48.259 --> 00:31:48.269 align:start position:0%
case you might be paging and the poor
 

00:31:48.269 --> 00:31:49.850 align:start position:0%
case you might be paging and the poor
old<00:31:48.389><c> OS</c><00:31:48.720><c> is</c><00:31:48.929><c> trying</c><00:31:49.169><c> to</c><00:31:49.230><c> just</c><00:31:49.409><c> read</c><00:31:49.590><c> things</c>

00:31:49.850 --> 00:31:49.860 align:start position:0%
old OS is trying to just read things
 

00:31:49.860 --> 00:31:51.169 align:start position:0%
old OS is trying to just read things
read<00:31:50.159><c> and</c><00:31:50.250><c> write</c><00:31:50.340><c> things</c><00:31:50.490><c> from</c><00:31:50.669><c> disk</c><00:31:50.909><c> and</c>

00:31:51.169 --> 00:31:51.179 align:start position:0%
read and write things from disk and
 

00:31:51.179 --> 00:31:52.970 align:start position:0%
read and write things from disk and
shuffle<00:31:51.779><c> things</c><00:31:51.870><c> around</c><00:31:52.019><c> in</c><00:31:52.320><c> the</c><00:31:52.380><c> VM</c><00:31:52.620><c> system</c>

00:31:52.970 --> 00:31:52.980 align:start position:0%
shuffle things around in the VM system
 

00:31:52.980 --> 00:31:56.840 align:start position:0%
shuffle things around in the VM system
paging<00:31:53.850><c> is</c><00:31:54.059><c> really</c><00:31:54.360><c> expensive</c><00:31:54.659><c> so</c><00:31:55.559><c> if</c><00:31:55.919><c> you're</c>

00:31:56.840 --> 00:31:56.850 align:start position:0%
paging is really expensive so if you're
 

00:31:56.850 --> 00:31:59.810 align:start position:0%
paging is really expensive so if you're
um<00:31:57.240><c> if</c><00:31:57.690><c> you're</c><00:31:57.990><c> running</c><00:31:58.169><c> on</c><00:31:58.380><c> a</c><00:31:58.409><c> 128</c><00:31:59.159><c> Meg</c><00:31:59.460><c> system</c>

00:31:59.810 --> 00:31:59.820 align:start position:0%
um if you're running on a 128 Meg system
 

00:31:59.820 --> 00:32:03.019 align:start position:0%
um if you're running on a 128 Meg system
and<00:32:00.000><c> you</c><00:32:00.389><c> set</c><00:32:00.600><c> your</c><00:32:00.720><c> heap</c><00:32:00.899><c> to</c><00:32:01.260><c> 256</c><00:32:02.039><c> Meg's</c><00:32:02.429><c> well</c>

00:32:03.019 --> 00:32:03.029 align:start position:0%
and you set your heap to 256 Meg's well
 

00:32:03.029 --> 00:32:05.240 align:start position:0%
and you set your heap to 256 Meg's well
we<00:32:03.510><c> think</c><00:32:03.750><c> you've</c><00:32:03.899><c> got</c><00:32:04.049><c> 256</c><00:32:04.649><c> Meg's</c><00:32:04.950><c> so</c><00:32:05.130><c> we'll</c>

00:32:05.240 --> 00:32:05.250 align:start position:0%
we think you've got 256 Meg's so we'll
 

00:32:05.250 --> 00:32:07.909 align:start position:0%
we think you've got 256 Meg's so we'll
happily<00:32:05.460><c> go</c><00:32:05.820><c> and</c><00:32:05.940><c> allocate</c><00:32:06.779><c> and</c><00:32:06.929><c> we</c><00:32:07.019><c> won't</c><00:32:07.230><c> do</c>

00:32:07.909 --> 00:32:07.919 align:start position:0%
happily go and allocate and we won't do
 

00:32:07.919 --> 00:32:09.649 align:start position:0%
happily go and allocate and we won't do
full<00:32:08.220><c> GCS</c><00:32:08.700><c> until</c><00:32:09.000><c> we</c><00:32:09.090><c> think</c><00:32:09.269><c> we've</c><00:32:09.389><c> run</c><00:32:09.510><c> out</c><00:32:09.629><c> of</c>

00:32:09.649 --> 00:32:09.659 align:start position:0%
full GCS until we think we've run out of
 

00:32:09.659 --> 00:32:11.029 align:start position:0%
full GCS until we think we've run out of
heap<00:32:09.929><c> but</c><00:32:10.200><c> in</c><00:32:10.289><c> the</c><00:32:10.350><c> meantime</c><00:32:10.529><c> you'll</c><00:32:10.919><c> be</c>

00:32:11.029 --> 00:32:11.039 align:start position:0%
heap but in the meantime you'll be
 

00:32:11.039 --> 00:32:13.629 align:start position:0%
heap but in the meantime you'll be
paging<00:32:11.429><c> madly</c>

00:32:13.629 --> 00:32:13.639 align:start position:0%
paging madly
 

00:32:13.639 --> 00:32:16.210 align:start position:0%
paging madly
think<00:32:14.179><c> think</c><00:32:14.690><c> very</c><00:32:14.840><c> much</c><00:32:15.049><c> about</c><00:32:15.350><c> controlling</c>

00:32:16.210 --> 00:32:16.220 align:start position:0%
think think very much about controlling
 

00:32:16.220 --> 00:32:20.649 align:start position:0%
think think very much about controlling
your<00:32:16.490><c> footprint</c><00:32:16.970><c> and</c><00:32:17.210><c> heap</c><00:32:18.049><c> usage</c><00:32:19.450><c> now</c><00:32:20.450><c> other</c>

00:32:20.649 --> 00:32:20.659 align:start position:0%
your footprint and heap usage now other
 

00:32:20.659 --> 00:32:22.570 align:start position:0%
your footprint and heap usage now other
times<00:32:20.929><c> you</c><00:32:21.110><c> get</c><00:32:21.259><c> into</c><00:32:21.470><c> situations</c><00:32:21.679><c> where</c><00:32:22.220><c> your</c>

00:32:22.570 --> 00:32:22.580 align:start position:0%
times you get into situations where your
 

00:32:22.580 --> 00:32:25.930 align:start position:0%
times you get into situations where your
CPU<00:32:23.029><c> isn't</c><00:32:23.299><c> pegged</c><00:32:23.509><c> and</c><00:32:24.169><c> in</c><00:32:24.320><c> fact</c><00:32:24.610><c> at</c><00:32:25.610><c> first</c>

00:32:25.930 --> 00:32:25.940 align:start position:0%
CPU isn't pegged and in fact at first
 

00:32:25.940 --> 00:32:27.879 align:start position:0%
CPU isn't pegged and in fact at first
glance<00:32:26.210><c> your</c><00:32:26.600><c> program</c><00:32:27.169><c> seems</c><00:32:27.499><c> to</c><00:32:27.590><c> be</c><00:32:27.649><c> doing</c>

00:32:27.879 --> 00:32:27.889 align:start position:0%
glance your program seems to be doing
 

00:32:27.889 --> 00:32:29.200 align:start position:0%
glance your program seems to be doing
nothing<00:32:28.009><c> and</c><00:32:28.340><c> that's</c><00:32:28.519><c> probably</c><00:32:28.850><c> what</c><00:32:28.970><c> it</c><00:32:28.999><c> is</c>

00:32:29.200 --> 00:32:29.210 align:start position:0%
nothing and that's probably what it is
 

00:32:29.210 --> 00:32:30.759 align:start position:0%
nothing and that's probably what it is
doing<00:32:29.480><c> it's</c><00:32:29.629><c> probably</c><00:32:30.019><c> waiting</c><00:32:30.350><c> for</c><00:32:30.379><c> the</c><00:32:30.590><c> disk</c>

00:32:30.759 --> 00:32:30.769 align:start position:0%
doing it's probably waiting for the disk
 

00:32:30.769 --> 00:32:34.360 align:start position:0%
doing it's probably waiting for the disk
or<00:32:30.950><c> the</c><00:32:30.980><c> network</c><00:32:31.190><c> to</c><00:32:32.059><c> reply</c><00:32:33.100><c> so</c><00:32:34.100><c> there</c><00:32:34.279><c> are</c>

00:32:34.360 --> 00:32:34.370 align:start position:0%
or the network to reply so there are
 

00:32:34.370 --> 00:32:36.610 align:start position:0%
or the network to reply so there are
some<00:32:34.490><c> tools</c><00:32:34.700><c> on</c><00:32:34.999><c> Mac</c><00:32:35.389><c> os10</c><00:32:35.690><c> some</c><00:32:36.259><c> of</c><00:32:36.379><c> which</c><00:32:36.499><c> are</c>

00:32:36.610 --> 00:32:36.620 align:start position:0%
some tools on Mac os10 some of which are
 

00:32:36.620 --> 00:32:38.499 align:start position:0%
some tools on Mac os10 some of which are
covered<00:32:36.799><c> I</c><00:32:37.100><c> will</c><00:32:37.730><c> mention</c><00:32:37.909><c> here</c><00:32:38.090><c> some</c><00:32:38.480><c> of</c>

00:32:38.499 --> 00:32:38.509 align:start position:0%
covered I will mention here some of
 

00:32:38.509 --> 00:32:39.759 align:start position:0%
covered I will mention here some of
which<00:32:38.720><c> are</c><00:32:38.840><c> covered</c><00:32:39.019><c> in</c><00:32:39.200><c> the</c><00:32:39.289><c> performance</c>

00:32:39.759 --> 00:32:39.769 align:start position:0%
which are covered in the performance
 

00:32:39.769 --> 00:32:42.039 align:start position:0%
which are covered in the performance
tools<00:32:39.980><c> talk</c><00:32:40.249><c> later</c><00:32:40.519><c> that</c><00:32:41.240><c> allow</c><00:32:41.509><c> you</c><00:32:41.570><c> to</c><00:32:41.720><c> look</c>

00:32:42.039 --> 00:32:42.049 align:start position:0%
tools talk later that allow you to look
 

00:32:42.049 --> 00:32:44.409 align:start position:0%
tools talk later that allow you to look
at<00:32:42.230><c> what</c><00:32:42.769><c> your</c><00:32:42.919><c> program</c><00:32:43.429><c> is</c><00:32:43.580><c> doing</c><00:32:43.610><c> IO</c><00:32:43.999><c> wise</c>

00:32:44.409 --> 00:32:44.419 align:start position:0%
at what your program is doing IO wise
 

00:32:44.419 --> 00:32:48.580 align:start position:0%
at what your program is doing IO wise
and<00:32:44.720><c> network</c><00:32:45.350><c> wise</c><00:32:46.720><c> and</c><00:32:47.720><c> then</c><00:32:47.869><c> lastly</c><00:32:48.289><c> one</c><00:32:48.559><c> of</c>

00:32:48.580 --> 00:32:48.590 align:start position:0%
and network wise and then lastly one of
 

00:32:48.590 --> 00:32:49.450 align:start position:0%
and network wise and then lastly one of
the<00:32:48.740><c> things</c><00:32:48.950><c> that</c><00:32:49.070><c> we</c><00:32:49.129><c> talked</c><00:32:49.369><c> about</c>

00:32:49.450 --> 00:32:49.460 align:start position:0%
the things that we talked about
 

00:32:49.460 --> 00:32:53.289 align:start position:0%
the things that we talked about
synchronization<00:32:51.639><c> monitor</c><00:32:52.639><c> contention</c><00:32:53.149><c> can</c>

00:32:53.289 --> 00:32:53.299 align:start position:0%
synchronization monitor contention can
 

00:32:53.299 --> 00:32:55.239 align:start position:0%
synchronization monitor contention can
get<00:32:53.450><c> very</c><00:32:53.629><c> expensive</c><00:32:53.659><c> and</c><00:32:54.350><c> the</c><00:32:54.950><c> reason</c><00:32:55.220><c> for</c>

00:32:55.239 --> 00:32:55.249 align:start position:0%
get very expensive and the reason for
 

00:32:55.249 --> 00:32:58.840 align:start position:0%
get very expensive and the reason for
that<00:32:55.399><c> is</c><00:32:55.879><c> that</c><00:32:56.360><c> especially</c><00:32:57.289><c> on</c><00:32:57.320><c> 10</c><00:32:57.740><c> if</c><00:32:58.580><c> you're</c>

00:32:58.840 --> 00:32:58.850 align:start position:0%
that is that especially on 10 if you're
 

00:32:58.850 --> 00:33:00.999 align:start position:0%
that is that especially on 10 if you're
if<00:32:59.119><c> you're</c><00:32:59.269><c> used</c><00:32:59.450><c> to</c><00:32:59.480><c> Mac</c><00:32:59.659><c> OS</c><00:32:59.690><c> 9</c><00:33:00.009><c> switching</c>

00:33:00.999 --> 00:33:01.009 align:start position:0%
if you're used to Mac OS 9 switching
 

00:33:01.009 --> 00:33:03.279 align:start position:0%
if you're used to Mac OS 9 switching
threads<00:33:01.340><c> and</c><00:33:01.580><c> processes</c><00:33:01.879><c> was</c><00:33:02.539><c> relatively</c>

00:33:03.279 --> 00:33:03.289 align:start position:0%
threads and processes was relatively
 

00:33:03.289 --> 00:33:05.070 align:start position:0%
threads and processes was relatively
expensive<00:33:03.679><c> because</c><00:33:04.070><c> it</c><00:33:04.249><c> didn't</c><00:33:04.460><c> have</c><00:33:04.639><c> the</c>

00:33:05.070 --> 00:33:05.080 align:start position:0%
expensive because it didn't have the
 

00:33:05.080 --> 00:33:08.739 align:start position:0%
expensive because it didn't have the
memory<00:33:06.080><c> protection</c><00:33:06.710><c> and</c><00:33:07.269><c> preemption</c><00:33:08.269><c> behind</c>

00:33:08.739 --> 00:33:08.749 align:start position:0%
memory protection and preemption behind
 

00:33:08.749 --> 00:33:09.039 align:start position:0%
memory protection and preemption behind
it

00:33:09.039 --> 00:33:09.049 align:start position:0%
it
 

00:33:09.049 --> 00:33:11.379 align:start position:0%
it
whereas<00:33:09.559><c> on</c><00:33:09.710><c> 10</c><00:33:09.950><c> you</c><00:33:10.610><c> know</c><00:33:10.669><c> when</c><00:33:10.850><c> we</c><00:33:10.970><c> switches</c>

00:33:11.379 --> 00:33:11.389 align:start position:0%
whereas on 10 you know when we switches
 

00:33:11.389 --> 00:33:13.060 align:start position:0%
whereas on 10 you know when we switches
thread<00:33:11.659><c> there's</c><00:33:11.960><c> a</c><00:33:12.049><c> there's</c><00:33:12.529><c> all</c><00:33:12.649><c> the</c><00:33:12.740><c> state</c>

00:33:13.060 --> 00:33:13.070 align:start position:0%
thread there's a there's all the state
 

00:33:13.070 --> 00:33:15.369 align:start position:0%
thread there's a there's all the state
in<00:33:13.340><c> the</c><00:33:13.700><c> processor</c><00:33:14.389><c> that</c><00:33:14.690><c> has</c><00:33:14.749><c> to</c><00:33:15.019><c> be</c><00:33:15.110><c> saved</c>

00:33:15.369 --> 00:33:15.379 align:start position:0%
in the processor that has to be saved
 

00:33:15.379 --> 00:33:17.649 align:start position:0%
in the processor that has to be saved
out<00:33:15.590><c> to</c><00:33:15.769><c> memory</c><00:33:16.039><c> and</c><00:33:16.330><c> when</c><00:33:17.330><c> we</c><00:33:17.419><c> switch</c>

00:33:17.649 --> 00:33:17.659 align:start position:0%
out to memory and when we switch
 

00:33:17.659 --> 00:33:20.139 align:start position:0%
out to memory and when we switch
processes<00:33:18.289><c> I</c><00:33:18.499><c> threads</c><00:33:19.369><c> between</c><00:33:19.549><c> processes</c>

00:33:20.139 --> 00:33:20.149 align:start position:0%
processes I threads between processes
 

00:33:20.149 --> 00:33:22.330 align:start position:0%
processes I threads between processes
you've<00:33:20.899><c> got</c><00:33:21.080><c> to</c><00:33:21.169><c> save</c><00:33:21.350><c> all</c><00:33:21.559><c> of</c><00:33:21.679><c> that</c><00:33:21.799><c> context</c>

00:33:22.330 --> 00:33:22.340 align:start position:0%
you've got to save all of that context
 

00:33:22.340 --> 00:33:22.840 align:start position:0%
you've got to save all of that context
as<00:33:22.429><c> well</c>

00:33:22.840 --> 00:33:22.850 align:start position:0%
as well
 

00:33:22.850 --> 00:33:25.450 align:start position:0%
as well
so<00:33:23.440><c> it's</c><00:33:24.440><c> a</c><00:33:24.499><c> lot</c><00:33:24.619><c> more</c><00:33:24.830><c> expensive</c><00:33:25.159><c> than</c>

00:33:25.450 --> 00:33:25.460 align:start position:0%
so it's a lot more expensive than
 

00:33:25.460 --> 00:33:26.499 align:start position:0%
so it's a lot more expensive than
knowing<00:33:25.639><c> so</c><00:33:25.820><c> that's</c><00:33:25.940><c> one</c><00:33:26.090><c> thing</c><00:33:26.210><c> to</c><00:33:26.299><c> bear</c><00:33:26.480><c> in</c>

00:33:26.499 --> 00:33:26.509 align:start position:0%
knowing so that's one thing to bear in
 

00:33:26.509 --> 00:33:31.149 align:start position:0%
knowing so that's one thing to bear in
mind<00:33:29.200><c> so</c><00:33:30.200><c> how</c><00:33:30.350><c> do</c><00:33:30.409><c> you</c><00:33:30.529><c> go</c><00:33:30.679><c> about</c><00:33:30.799><c> measuring</c>

00:33:31.149 --> 00:33:31.159 align:start position:0%
mind so how do you go about measuring
 

00:33:31.159 --> 00:33:32.489 align:start position:0%
mind so how do you go about measuring
all<00:33:31.490><c> of</c><00:33:31.610><c> the</c><00:33:31.669><c> things</c><00:33:31.909><c> that</c><00:33:31.999><c> I've</c><00:33:32.179><c> talked</c><00:33:32.389><c> about</c>

00:33:32.489 --> 00:33:32.499 align:start position:0%
all of the things that I've talked about
 

00:33:32.499 --> 00:33:35.230 align:start position:0%
all of the things that I've talked about
the<00:33:33.499><c> best</c><00:33:33.710><c> thing</c><00:33:33.919><c> is</c><00:33:34.100><c> from</c><00:33:34.940><c> your</c><00:33:35.090><c> perspective</c>

00:33:35.230 --> 00:33:35.240 align:start position:0%
the best thing is from your perspective
 

00:33:35.240 --> 00:33:37.799 align:start position:0%
the best thing is from your perspective
is<00:33:35.749><c> to</c><00:33:35.869><c> use</c><00:33:35.990><c> a</c><00:33:36.019><c> commercial</c><00:33:36.559><c> performance</c><00:33:36.740><c> tool</c>

00:33:37.799 --> 00:33:37.809 align:start position:0%
is to use a commercial performance tool
 

00:33:37.809 --> 00:33:40.269 align:start position:0%
is to use a commercial performance tool
one<00:33:38.809><c> example</c><00:33:39.139><c> of</c><00:33:39.289><c> which</c><00:33:39.440><c> is</c><00:33:39.499><c> optimize</c><00:33:40.070><c> it</c>

00:33:40.269 --> 00:33:40.279 align:start position:0%
one example of which is optimize it
 

00:33:40.279 --> 00:33:42.940 align:start position:0%
one example of which is optimize it
which<00:33:40.460><c> Scott</c><00:33:40.970><c> will</c><00:33:41.149><c> be</c><00:33:41.269><c> demoing</c><00:33:41.679><c> just</c><00:33:42.679><c> after</c>

00:33:42.940 --> 00:33:42.950 align:start position:0%
which Scott will be demoing just after
 

00:33:42.950 --> 00:33:46.629 align:start position:0%
which Scott will be demoing just after
I've<00:33:43.070><c> talked</c><00:33:43.869><c> it</c><00:33:44.869><c> provides</c><00:33:45.440><c> CPU</c><00:33:45.950><c> profiling</c>

00:33:46.629 --> 00:33:46.639 align:start position:0%
I've talked it provides CPU profiling
 

00:33:46.639 --> 00:33:49.629 align:start position:0%
I've talked it provides CPU profiling
and/or<00:33:47.059><c> sampling</c><00:33:47.629><c> so</c><00:33:48.409><c> profiling</c><00:33:49.100><c> is</c><00:33:49.220><c> a</c><00:33:49.249><c> way</c><00:33:49.460><c> of</c>

00:33:49.629 --> 00:33:49.639 align:start position:0%
and/or sampling so profiling is a way of
 

00:33:49.639 --> 00:33:51.879 align:start position:0%
and/or sampling so profiling is a way of
tracking<00:33:50.210><c> each</c><00:33:50.570><c> and</c><00:33:50.809><c> every</c><00:33:51.019><c> time</c><00:33:51.259><c> methods</c><00:33:51.740><c> get</c>

00:33:51.879 --> 00:33:51.889 align:start position:0%
tracking each and every time methods get
 

00:33:51.889 --> 00:33:54.879 align:start position:0%
tracking each and every time methods get
called<00:33:52.629><c> sampling</c><00:33:53.629><c> does</c><00:33:54.139><c> a</c><00:33:54.169><c> statistical</c>

00:33:54.879 --> 00:33:54.889 align:start position:0%
called sampling does a statistical
 

00:33:54.889 --> 00:33:56.980 align:start position:0%
called sampling does a statistical
analysis<00:33:55.429><c> there</c><00:33:56.090><c> are</c><00:33:56.119><c> pros</c><00:33:56.389><c> and</c><00:33:56.570><c> cons</c><00:33:56.749><c> of</c><00:33:56.899><c> each</c>

00:33:56.980 --> 00:33:56.990 align:start position:0%
analysis there are pros and cons of each
 

00:33:56.990 --> 00:33:58.419 align:start position:0%
analysis there are pros and cons of each
profiling<00:33:57.590><c> gives</c><00:33:57.740><c> you</c><00:33:57.799><c> a</c><00:33:57.830><c> very</c><00:33:58.039><c> precise</c>

00:33:58.419 --> 00:33:58.429 align:start position:0%
profiling gives you a very precise
 

00:33:58.429 --> 00:34:00.190 align:start position:0%
profiling gives you a very precise
measure<00:33:58.789><c> of</c><00:33:58.970><c> exactly</c><00:33:59.389><c> how</c><00:33:59.570><c> often</c><00:33:59.840><c> things</c><00:33:59.960><c> that</c>

00:34:00.190 --> 00:34:00.200 align:start position:0%
measure of exactly how often things that
 

00:34:00.200 --> 00:34:03.310 align:start position:0%
measure of exactly how often things that
called<00:34:00.440><c> sampling</c><00:34:01.309><c> is</c><00:34:01.549><c> less</c><00:34:01.789><c> invasive</c><00:34:02.320><c> your</c>

00:34:03.310 --> 00:34:03.320 align:start position:0%
called sampling is less invasive your
 

00:34:03.320 --> 00:34:04.810 align:start position:0%
called sampling is less invasive your
program<00:34:03.679><c> doesn't</c><00:34:03.860><c> slow</c><00:34:04.129><c> down</c><00:34:04.309><c> so</c><00:34:04.490><c> much</c><00:34:04.610><c> so</c>

00:34:04.810 --> 00:34:04.820 align:start position:0%
program doesn't slow down so much so
 

00:34:04.820 --> 00:34:06.129 align:start position:0%
program doesn't slow down so much so
depending<00:34:05.149><c> on</c><00:34:05.240><c> what</c><00:34:05.389><c> you're</c><00:34:05.509><c> doing</c><00:34:05.779><c> one</c><00:34:05.990><c> or</c>

00:34:06.129 --> 00:34:06.139 align:start position:0%
depending on what you're doing one or
 

00:34:06.139 --> 00:34:09.280 align:start position:0%
depending on what you're doing one or
the<00:34:06.230><c> other</c><00:34:06.350><c> is</c><00:34:06.559><c> better</c><00:34:07.659><c> you</c><00:34:08.659><c> can</c><00:34:08.810><c> also</c><00:34:08.960><c> look</c><00:34:09.169><c> at</c>

00:34:09.280 --> 00:34:09.290 align:start position:0%
the other is better you can also look at
 

00:34:09.290 --> 00:34:10.659 align:start position:0%
the other is better you can also look at
object<00:34:09.619><c> allocation</c><00:34:10.129><c> which</c><00:34:10.220><c> objects</c><00:34:10.579><c> are</c>

00:34:10.659 --> 00:34:10.669 align:start position:0%
object allocation which objects are
 

00:34:10.669 --> 00:34:11.800 align:start position:0%
object allocation which objects are
getting<00:34:10.909><c> allocated</c><00:34:11.389><c> where</c><00:34:11.510><c> they</c><00:34:11.720><c> get</c>

00:34:11.800 --> 00:34:11.810 align:start position:0%
getting allocated where they get
 

00:34:11.810 --> 00:34:14.050 align:start position:0%
getting allocated where they get
allocated<00:34:12.169><c> etc</c><00:34:12.679><c> Scott</c><00:34:13.369><c> will</c><00:34:13.520><c> cover</c><00:34:13.730><c> a</c><00:34:13.819><c> lot</c><00:34:14.030><c> of</c>

00:34:14.050 --> 00:34:14.060 align:start position:0%
allocated etc Scott will cover a lot of
 

00:34:14.060 --> 00:34:17.889 align:start position:0%
allocated etc Scott will cover a lot of
them<00:34:14.270><c> in</c><00:34:14.419><c> the</c><00:34:14.629><c> demonstration</c><00:34:15.530><c> I</c><00:34:15.619><c> think</c><00:34:16.899><c> the</c>

00:34:17.889 --> 00:34:17.899 align:start position:0%
them in the demonstration I think the
 

00:34:17.899 --> 00:34:21.940 align:start position:0%
them in the demonstration I think the
other<00:34:18.020><c> thing</c><00:34:18.169><c> you</c><00:34:18.260><c> can</c><00:34:18.409><c> do</c><00:34:18.560><c> with</c><00:34:20.470><c> with</c><00:34:21.470><c> hotspot</c>

00:34:21.940 --> 00:34:21.950 align:start position:0%
other thing you can do with with hotspot
 

00:34:21.950 --> 00:34:24.940 align:start position:0%
other thing you can do with with hotspot
that<00:34:22.069><c> we</c><00:34:22.159><c> provide</c><00:34:22.549><c> in</c><00:34:22.879><c> the</c><00:34:23.810><c> 1-3-1</c><00:34:24.440><c> developer</c>

00:34:24.940 --> 00:34:24.950 align:start position:0%
that we provide in the 1-3-1 developer
 

00:34:24.950 --> 00:34:25.870 align:start position:0%
that we provide in the 1-3-1 developer
preview

00:34:25.870 --> 00:34:25.880 align:start position:0%
preview
 

00:34:25.880 --> 00:34:28.870 align:start position:0%
preview
each<00:34:26.510><c> probe</c><00:34:26.960><c> is</c><00:34:27.260><c> now</c><00:34:27.290><c> functional</c><00:34:27.980><c> it</c><00:34:28.490><c> wasn't</c>

00:34:28.870 --> 00:34:28.880 align:start position:0%
each probe is now functional it wasn't
 

00:34:28.880 --> 00:34:33.880 align:start position:0%
each probe is now functional it wasn't
in<00:34:29.030><c> cheater</c><00:34:30.340><c> and</c><00:34:31.570><c> that's</c><00:34:32.570><c> a</c><00:34:33.080><c> trough</c><00:34:33.740><c> is</c>

00:34:33.880 --> 00:34:33.890 align:start position:0%
in cheater and that's a trough is
 

00:34:33.890 --> 00:34:36.640 align:start position:0%
in cheater and that's a trough is
implemented<00:34:34.460><c> as</c><00:34:34.580><c> a</c><00:34:35.140><c> library</c><00:34:36.140><c> loaded</c><00:34:36.530><c> at</c>

00:34:36.640 --> 00:34:36.650 align:start position:0%
implemented as a library loaded at
 

00:34:36.650 --> 00:34:39.070 align:start position:0%
implemented as a library loaded at
runtime<00:34:36.890><c> that</c><00:34:37.610><c> uses</c><00:34:37.880><c> the</c><00:34:38.000><c> JVM</c><00:34:38.420><c> p.i</c><00:34:38.600><c> interface</c>

00:34:39.070 --> 00:34:39.080 align:start position:0%
runtime that uses the JVM p.i interface
 

00:34:39.080 --> 00:34:42.580 align:start position:0%
runtime that uses the JVM p.i interface
in<00:34:39.290><c> hotspot</c><00:34:40.660><c> secondly</c><00:34:41.660><c> you</c><00:34:41.750><c> can</c><00:34:41.870><c> use</c><00:34:42.020><c> X</c><00:34:42.290><c> probe</c>

00:34:42.580 --> 00:34:42.590 align:start position:0%
in hotspot secondly you can use X probe
 

00:34:42.590 --> 00:34:45.100 align:start position:0%
in hotspot secondly you can use X probe
which<00:34:43.160><c> is</c><00:34:43.340><c> a</c><00:34:43.370><c> per</c><00:34:44.000><c> thread</c><00:34:44.360><c> kind</c><00:34:45.020><c> of</c>

00:34:45.100 --> 00:34:45.110 align:start position:0%
which is a per thread kind of
 

00:34:45.110 --> 00:34:48.640 align:start position:0%
which is a per thread kind of
measurement<00:34:45.560><c> and</c><00:34:45.940><c> there's</c><00:34:46.940><c> minus</c><00:34:47.930><c> X</c><00:34:48.170><c> a</c><00:34:48.380><c> proc</c>

00:34:48.640 --> 00:34:48.650 align:start position:0%
measurement and there's minus X a proc
 

00:34:48.650 --> 00:34:53.350 align:start position:0%
measurement and there's minus X a proc
issue<00:34:48.860><c> allocation</c><00:34:49.870><c> information</c><00:34:52.030><c> so</c><00:34:53.030><c> as</c><00:34:53.240><c> I</c>

00:34:53.350 --> 00:34:53.360 align:start position:0%
issue allocation information so as I
 

00:34:53.360 --> 00:34:55.860 align:start position:0%
issue allocation information so as I
mentioned<00:34:53.840><c> each</c><00:34:54.050><c> probe</c><00:34:54.470><c> comes</c><00:34:54.800><c> with</c><00:34:55.100><c> the</c>

00:34:55.860 --> 00:34:55.870 align:start position:0%
mentioned each probe comes with the
 

00:34:55.870 --> 00:34:58.390 align:start position:0%
mentioned each probe comes with the
Developer<00:34:56.870><c> Preview</c><00:34:57.050><c> one</c><00:34:57.410><c> of</c><00:34:57.680><c> that's</c>

00:34:58.390 --> 00:34:58.400 align:start position:0%
Developer Preview one of that's
 

00:34:58.400 --> 00:35:01.000 align:start position:0%
Developer Preview one of that's
available<00:34:58.610><c> on</c><00:34:58.910><c> the</c><00:34:58.940><c> website</c><00:34:59.470><c> it's</c><00:35:00.470><c> a</c><00:35:00.620><c> basic</c>

00:35:01.000 --> 00:35:01.010 align:start position:0%
available on the website it's a basic
 

00:35:01.010 --> 00:35:03.220 align:start position:0%
available on the website it's a basic
CPU<00:35:01.400><c> and</c><00:35:01.520><c> monitor</c><00:35:01.820><c> profiling</c><00:35:02.330><c> tool</c><00:35:02.510><c> so</c><00:35:02.750><c> it</c>

00:35:03.220 --> 00:35:03.230 align:start position:0%
CPU and monitor profiling tool so it
 

00:35:03.230 --> 00:35:05.920 align:start position:0%
CPU and monitor profiling tool so it
doesn't<00:35:03.470><c> give</c><00:35:03.560><c> you</c><00:35:03.620><c> a</c><00:35:03.710><c> lot</c><00:35:03.950><c> of</c><00:35:04.660><c> it</c><00:35:05.660><c> gives</c><00:35:05.810><c> you</c><00:35:05.870><c> a</c>

00:35:05.920 --> 00:35:05.930 align:start position:0%
doesn't give you a lot of it gives you a
 

00:35:05.930 --> 00:35:07.540 align:start position:0%
doesn't give you a lot of it gives you a
lot<00:35:06.080><c> of</c><00:35:06.110><c> nitty-gritty</c><00:35:06.380><c> detail</c><00:35:07.040><c> and</c><00:35:07.250><c> not</c><00:35:07.370><c> a</c><00:35:07.400><c> lot</c>

00:35:07.540 --> 00:35:07.550 align:start position:0%
lot of nitty-gritty detail and not a lot
 

00:35:07.550 --> 00:35:10.630 align:start position:0%
lot of nitty-gritty detail and not a lot
of<00:35:07.610><c> analysis</c><00:35:08.320><c> there's</c><00:35:09.320><c> a</c><00:35:09.440><c> relatively</c><00:35:10.370><c> simple</c>

00:35:10.630 --> 00:35:10.640 align:start position:0%
of analysis there's a relatively simple
 

00:35:10.640 --> 00:35:13.630 align:start position:0%
of analysis there's a relatively simple
UI<00:35:10.970><c> available</c><00:35:11.660><c> from</c><00:35:11.900><c> Java</c><00:35:12.440><c> software</c><00:35:12.710><c> that</c>

00:35:13.630 --> 00:35:13.640 align:start position:0%
UI available from Java software that
 

00:35:13.640 --> 00:35:15.370 align:start position:0%
UI available from Java software that
gives<00:35:13.820><c> you</c><00:35:13.910><c> a</c><00:35:13.940><c> primitive</c><00:35:14.420><c> GUI</c><00:35:14.630><c> on</c><00:35:14.840><c> top</c><00:35:15.140><c> and</c>

00:35:15.370 --> 00:35:15.380 align:start position:0%
gives you a primitive GUI on top and
 

00:35:15.380 --> 00:35:17.140 align:start position:0%
gives you a primitive GUI on top and
lets<00:35:15.560><c> you</c><00:35:15.710><c> drill</c><00:35:16.310><c> down</c><00:35:16.340><c> a</c><00:35:16.520><c> little</c><00:35:16.790><c> bit</c><00:35:17.000><c> and</c>

00:35:17.140 --> 00:35:17.150 align:start position:0%
lets you drill down a little bit and
 

00:35:17.150 --> 00:35:19.210 align:start position:0%
lets you drill down a little bit and
I've<00:35:17.270><c> used</c><00:35:17.420><c> that</c><00:35:17.660><c> to</c><00:35:18.290><c> a</c><00:35:18.320><c> certain</c><00:35:18.680><c> extent</c><00:35:19.070><c> and</c>

00:35:19.210 --> 00:35:19.220 align:start position:0%
I've used that to a certain extent and
 

00:35:19.220 --> 00:35:22.210 align:start position:0%
I've used that to a certain extent and
that's<00:35:19.370><c> quite</c><00:35:19.610><c> helpful</c><00:35:20.830><c> it's</c><00:35:21.830><c> relatively</c>

00:35:22.210 --> 00:35:22.220 align:start position:0%
that's quite helpful it's relatively
 

00:35:22.220 --> 00:35:23.710 align:start position:0%
that's quite helpful it's relatively
simple<00:35:22.460><c> to</c><00:35:22.640><c> use</c><00:35:22.910><c> you</c><00:35:23.060><c> just</c><00:35:23.090><c> passed</c><00:35:23.450><c> a</c><00:35:23.570><c> couple</c>

00:35:23.710 --> 00:35:23.720 align:start position:0%
simple to use you just passed a couple
 

00:35:23.720 --> 00:35:25.690 align:start position:0%
simple to use you just passed a couple
of<00:35:23.900><c> command</c><00:35:24.530><c> line</c><00:35:24.620><c> parameters</c><00:35:25.280><c> and</c><00:35:25.430><c> you</c><00:35:25.490><c> tell</c>

00:35:25.690 --> 00:35:25.700 align:start position:0%
of command line parameters and you tell
 

00:35:25.700 --> 00:35:27.970 align:start position:0%
of command line parameters and you tell
it<00:35:25.820><c> whether</c><00:35:25.970><c> you</c><00:35:26.150><c> want</c><00:35:26.330><c> to</c><00:35:26.420><c> sample</c><00:35:26.690><c> or</c><00:35:27.080><c> look</c><00:35:27.830><c> at</c>

00:35:27.970 --> 00:35:27.980 align:start position:0%
it whether you want to sample or look at
 

00:35:27.980 --> 00:35:34.530 align:start position:0%
it whether you want to sample or look at
monitor<00:35:28.160><c> contention</c><00:35:28.940><c> etc</c><00:35:29.680><c> and</c><00:35:32.410><c> this</c><00:35:33.410><c> is</c><00:35:33.620><c> the</c>

00:35:34.530 --> 00:35:34.540 align:start position:0%
monitor contention etc and this is the
 

00:35:34.540 --> 00:35:37.240 align:start position:0%
monitor contention etc and this is the
it<00:35:35.540><c> turns</c><00:35:35.780><c> out</c><00:35:35.990><c> that</c><00:35:36.140><c> the</c><00:35:36.290><c> the</c><00:35:36.320><c> perf</c><00:35:36.770><c> final</c>

00:35:37.240 --> 00:35:37.250 align:start position:0%
it turns out that the the perf final
 

00:35:37.250 --> 00:35:40.420 align:start position:0%
it turns out that the the perf final
tool<00:35:37.550><c> only</c><00:35:38.300><c> works</c><00:35:38.840><c> with</c><00:35:39.170><c> CPU</c><00:35:39.800><c> sampling</c><00:35:40.310><c> it</c>

00:35:40.420 --> 00:35:40.430 align:start position:0%
tool only works with CPU sampling it
 

00:35:40.430 --> 00:35:41.650 align:start position:0%
tool only works with CPU sampling it
doesn't<00:35:40.670><c> doesn't</c><00:35:41.060><c> work</c><00:35:41.300><c> if</c><00:35:41.510><c> you</c><00:35:41.570><c> use</c>

00:35:41.650 --> 00:35:41.660 align:start position:0%
doesn't doesn't work if you use
 

00:35:41.660 --> 00:35:46.540 align:start position:0%
doesn't doesn't work if you use
profiling<00:35:42.290><c> so</c><00:35:43.270><c> should</c><00:35:44.270><c> use</c><00:35:44.480><c> the</c><00:35:45.550><c> first</c>

00:35:46.540 --> 00:35:46.550 align:start position:0%
profiling so should use the first
 

00:35:46.550 --> 00:35:49.660 align:start position:0%
profiling so should use the first
example<00:35:47.620><c> the</c><00:35:48.620><c> monarch</c><00:35:48.980><c> the</c><00:35:49.010><c> contention</c><00:35:49.580><c> will</c>

00:35:49.660 --> 00:35:49.670 align:start position:0%
example the monarch the contention will
 

00:35:49.670 --> 00:35:51.370 align:start position:0%
example the monarch the contention will
give<00:35:49.820><c> you</c><00:35:49.880><c> a</c><00:35:49.940><c> little</c><00:35:50.060><c> bit</c><00:35:50.270><c> information</c><00:35:50.750><c> about</c>

00:35:51.370 --> 00:35:51.380 align:start position:0%
give you a little bit information about
 

00:35:51.380 --> 00:35:53.890 align:start position:0%
give you a little bit information about
how<00:35:51.590><c> much</c><00:35:51.800><c> time</c><00:35:52.130><c> each</c><00:35:52.550><c> thread</c><00:35:53.000><c> spends</c><00:35:53.450><c> waiting</c>

00:35:53.890 --> 00:35:53.900 align:start position:0%
how much time each thread spends waiting
 

00:35:53.900 --> 00:35:55.720 align:start position:0%
how much time each thread spends waiting
on<00:35:54.020><c> a</c><00:35:54.050><c> particular</c><00:35:54.350><c> monitor</c><00:35:54.800><c> so</c><00:35:55.400><c> if</c><00:35:55.580><c> you're</c>

00:35:55.720 --> 00:35:55.730 align:start position:0%
on a particular monitor so if you're
 

00:35:55.730 --> 00:36:00.250 align:start position:0%
on a particular monitor so if you're
seeing<00:35:56.440><c> Oh</c><00:35:57.440><c> an</c><00:35:58.750><c> application</c><00:35:59.750><c> that</c><00:35:59.930><c> you</c><00:36:00.050><c> you</c>

00:36:00.250 --> 00:36:00.260 align:start position:0%
seeing Oh an application that you you
 

00:36:00.260 --> 00:36:03.340 align:start position:0%
seeing Oh an application that you you
can't<00:36:00.530><c> really</c><00:36:00.680><c> see</c><00:36:00.980><c> why</c><00:36:01.250><c> it's</c><00:36:01.520><c> slow</c><00:36:02.120><c> but</c><00:36:03.050><c> there</c>

00:36:03.340 --> 00:36:03.350 align:start position:0%
can't really see why it's slow but there
 

00:36:03.350 --> 00:36:06.160 align:start position:0%
can't really see why it's slow but there
seems<00:36:03.530><c> to</c><00:36:03.590><c> be</c><00:36:03.680><c> a</c><00:36:03.770><c> lot</c><00:36:03.920><c> going</c><00:36:04.190><c> on</c><00:36:04.810><c> you</c>

00:36:06.160 --> 00:36:06.170 align:start position:0%
seems to be a lot going on you
 

00:36:06.170 --> 00:36:07.780 align:start position:0%
seems to be a lot going on you
probably<00:36:07.010><c> one</c><00:36:07.160><c> of</c><00:36:07.190><c> the</c><00:36:07.280><c> first</c><00:36:07.460><c> things</c><00:36:07.670><c> you</c>

00:36:07.780 --> 00:36:07.790 align:start position:0%
probably one of the first things you
 

00:36:07.790 --> 00:36:09.010 align:start position:0%
probably one of the first things you
should<00:36:08.270><c> do</c><00:36:08.420><c> as</c><00:36:08.540><c> a</c><00:36:08.570><c> look</c><00:36:08.750><c> at</c><00:36:08.840><c> monitor</c>

00:36:09.010 --> 00:36:09.020 align:start position:0%
should do as a look at monitor
 

00:36:09.020 --> 00:36:11.530 align:start position:0%
should do as a look at monitor
contention<00:36:09.760><c> you</c><00:36:10.760><c> can</c><00:36:10.880><c> see</c><00:36:11.060><c> dramatic</c>

00:36:11.530 --> 00:36:11.540 align:start position:0%
contention you can see dramatic
 

00:36:11.540 --> 00:36:14.760 align:start position:0%
contention you can see dramatic
performance<00:36:11.990><c> improvements</c><00:36:12.080><c> there</c><00:36:12.710><c> because</c>

00:36:14.760 --> 00:36:14.770 align:start position:0%
performance improvements there because
 

00:36:14.770 --> 00:36:17.680 align:start position:0%
performance improvements there because
when<00:36:15.770><c> when</c><00:36:16.490><c> we</c><00:36:16.640><c> get</c><00:36:16.790><c> contention</c><00:36:17.330><c> as</c><00:36:17.480><c> to</c><00:36:17.600><c> the</c>

00:36:17.680 --> 00:36:17.690 align:start position:0%
when when we get contention as to the
 

00:36:17.690 --> 00:36:20.080 align:start position:0%
when when we get contention as to the
cases<00:36:17.990><c> where</c><00:36:18.170><c> we</c><00:36:18.200><c> don't</c><00:36:18.830><c> have</c><00:36:19.460><c> an</c><00:36:19.640><c> explained</c>

00:36:20.080 --> 00:36:20.090 align:start position:0%
cases where we don't have an explained
 

00:36:20.090 --> 00:36:22.480 align:start position:0%
cases where we don't have an explained
earlier<00:36:20.270><c> it's</c><00:36:20.960><c> a</c><00:36:21.140><c> it's</c><00:36:21.380><c> a</c><00:36:21.500><c> case</c><00:36:21.680><c> of</c><00:36:21.860><c> going</c>

00:36:22.480 --> 00:36:22.490 align:start position:0%
earlier it's a it's a case of going
 

00:36:22.490 --> 00:36:25.060 align:start position:0%
earlier it's a it's a case of going
through<00:36:22.820><c> ten</c><00:36:23.360><c> instructions</c><00:36:24.020><c> in</c><00:36:24.290><c> line</c><00:36:24.770><c> in</c><00:36:24.950><c> the</c>

00:36:25.060 --> 00:36:25.070 align:start position:0%
through ten instructions in line in the
 

00:36:25.070 --> 00:36:27.040 align:start position:0%
through ten instructions in line in the
interpreter<00:36:25.580><c> oral</c><00:36:25.850><c> the</c><00:36:26.000><c> compiler</c><00:36:26.480><c> versus</c>

00:36:27.040 --> 00:36:27.050 align:start position:0%
interpreter oral the compiler versus
 

00:36:27.050 --> 00:36:29.140 align:start position:0%
interpreter oral the compiler versus
several<00:36:27.800><c> thousand</c><00:36:28.250><c> cycles</c><00:36:28.490><c> going</c><00:36:28.880><c> into</c><00:36:29.060><c> the</c>

00:36:29.140 --> 00:36:29.150 align:start position:0%
several thousand cycles going into the
 

00:36:29.150 --> 00:36:30.610 align:start position:0%
several thousand cycles going into the
kernel<00:36:29.330><c> and</c><00:36:29.720><c> doing</c><00:36:29.930><c> context</c><00:36:30.290><c> which</c><00:36:30.470><c> isn't</c>

00:36:30.610 --> 00:36:30.620 align:start position:0%
kernel and doing context which isn't
 

00:36:30.620 --> 00:36:34.750 align:start position:0%
kernel and doing context which isn't
like<00:36:30.920><c> so</c><00:36:31.130><c> that's</c><00:36:31.310><c> why</c><00:36:31.430><c> it's</c><00:36:31.550><c> expensive</c><00:36:33.490><c> -</c><00:36:34.490><c> like</c>

00:36:34.750 --> 00:36:34.760 align:start position:0%
like so that's why it's expensive - like
 

00:36:34.760 --> 00:36:36.730 align:start position:0%
like so that's why it's expensive - like
say<00:36:34.910><c> prof.</c><00:36:35.180><c> will</c><00:36:35.630><c> give</c><00:36:35.810><c> you</c><00:36:35.900><c> a</c><00:36:35.990><c> simple</c>

00:36:36.730 --> 00:36:36.740 align:start position:0%
say prof. will give you a simple
 

00:36:36.740 --> 00:36:38.800 align:start position:0%
say prof. will give you a simple
allocation<00:36:37.430><c> profile</c><00:36:37.910><c> so</c><00:36:38.390><c> you</c><00:36:38.450><c> run</c><00:36:38.690><c> your</c>

00:36:38.800 --> 00:36:38.810 align:start position:0%
allocation profile so you run your
 

00:36:38.810 --> 00:36:39.490 align:start position:0%
allocation profile so you run your
program<00:36:39.230><c> and</c>

00:36:39.490 --> 00:36:39.500 align:start position:0%
program and
 

00:36:39.500 --> 00:36:41.200 align:start position:0%
program and
at<00:36:39.680><c> the</c><00:36:39.770><c> end</c><00:36:39.890><c> it'll</c><00:36:40.010><c> just</c><00:36:40.250><c> when</c><00:36:40.820><c> it</c><00:36:40.940><c> exits</c>

00:36:41.200 --> 00:36:41.210 align:start position:0%
at the end it'll just when it exits
 

00:36:41.210 --> 00:36:42.730 align:start position:0%
at the end it'll just when it exits
it'll<00:36:41.480><c> spit</c><00:36:41.750><c> out</c><00:36:41.780><c> this</c><00:36:42.050><c> dump</c><00:36:42.290><c> of</c><00:36:42.440><c> all</c><00:36:42.560><c> the</c>

00:36:42.730 --> 00:36:42.740 align:start position:0%
it'll spit out this dump of all the
 

00:36:42.740 --> 00:36:44.290 align:start position:0%
it'll spit out this dump of all the
objects<00:36:43.130><c> that</c><00:36:43.160><c> got</c><00:36:43.490><c> allocated</c><00:36:44.030><c> how</c><00:36:44.150><c> much</c>

00:36:44.290 --> 00:36:44.300 align:start position:0%
objects that got allocated how much
 

00:36:44.300 --> 00:36:46.870 align:start position:0%
objects that got allocated how much
space<00:36:44.510><c> they</c><00:36:44.690><c> took</c><00:36:44.810><c> up</c><00:36:45.220><c> the</c><00:36:46.220><c> average</c><00:36:46.369><c> instance</c>

00:36:46.870 --> 00:36:46.880 align:start position:0%
space they took up the average instance
 

00:36:46.880 --> 00:36:50.230 align:start position:0%
space they took up the average instance
size<00:36:47.090><c> etc</c><00:36:47.869><c> and</c><00:36:48.080><c> you</c><00:36:48.890><c> can</c><00:36:49.070><c> from</c><00:36:49.760><c> just</c><00:36:50.000><c> from</c><00:36:50.119><c> that</c>

00:36:50.230 --> 00:36:50.240 align:start position:0%
size etc and you can from just from that
 

00:36:50.240 --> 00:36:52.300 align:start position:0%
size etc and you can from just from that
information<00:36:50.840><c> you</c><00:36:50.960><c> can</c><00:36:50.990><c> say</c><00:36:51.320><c> well</c><00:36:51.680><c> maybe</c><00:36:52.130><c> I</c>

00:36:52.300 --> 00:36:52.310 align:start position:0%
information you can say well maybe I
 

00:36:52.310 --> 00:36:53.710 align:start position:0%
information you can say well maybe I
shouldn't<00:36:52.580><c> be</c><00:36:52.640><c> allocating</c><00:36:53.150><c> so</c><00:36:53.300><c> many</c><00:36:53.540><c> vectors</c>

00:36:53.710 --> 00:36:53.720 align:start position:0%
shouldn't be allocating so many vectors
 

00:36:53.720 --> 00:36:57.490 align:start position:0%
shouldn't be allocating so many vectors
or<00:36:54.200><c> hash</c><00:36:54.380><c> tables</c><00:36:54.800><c> or</c><00:36:54.980><c> etc</c><00:36:55.960><c> but</c><00:36:56.960><c> it</c><00:36:57.200><c> doesn't</c>

00:36:57.490 --> 00:36:57.500 align:start position:0%
or hash tables or etc but it doesn't
 

00:36:57.500 --> 00:36:58.839 align:start position:0%
or hash tables or etc but it doesn't
give<00:36:57.619><c> you</c><00:36:57.740><c> any</c><00:36:57.800><c> information</c><00:36:58.460><c> about</c><00:36:58.550><c> where</c>

00:36:58.839 --> 00:36:58.849 align:start position:0%
give you any information about where
 

00:36:58.849 --> 00:37:00.730 align:start position:0%
give you any information about where
they<00:36:58.970><c> got</c><00:36:59.150><c> allocated</c><00:36:59.720><c> which</c><00:36:59.869><c> is</c><00:37:00.020><c> why</c><00:37:00.170><c> it's</c><00:37:00.380><c> you</c>

00:37:00.730 --> 00:37:00.740 align:start position:0%
they got allocated which is why it's you
 

00:37:00.740 --> 00:37:02.080 align:start position:0%
they got allocated which is why it's you
know<00:37:00.770><c> optimize</c><00:37:01.369><c> it</c><00:37:01.520><c> or</c><00:37:01.640><c> something</c><00:37:01.910><c> like</c><00:37:02.030><c> that</c>

00:37:02.080 --> 00:37:02.090 align:start position:0%
know optimize it or something like that
 

00:37:02.090 --> 00:37:06.520 align:start position:0%
know optimize it or something like that
is<00:37:02.300><c> much</c><00:37:02.480><c> more</c><00:37:02.660><c> useful</c><00:37:03.849><c> -</c><00:37:04.849><c> X</c><00:37:05.030><c> prof</c><00:37:05.300><c> is</c><00:37:05.480><c> is</c><00:37:05.720><c> of</c>

00:37:06.520 --> 00:37:06.530 align:start position:0%
is much more useful - X prof is is of
 

00:37:06.530 --> 00:37:10.300 align:start position:0%
is much more useful - X prof is is of
somewhat<00:37:07.130><c> limited</c><00:37:07.609><c> use</c><00:37:08.650><c> because</c><00:37:09.650><c> it</c><00:37:09.800><c> gives</c>

00:37:10.300 --> 00:37:10.310 align:start position:0%
somewhat limited use because it gives
 

00:37:10.310 --> 00:37:11.980 align:start position:0%
somewhat limited use because it gives
you<00:37:10.550><c> per</c><00:37:10.849><c> thread</c><00:37:11.150><c> information</c><00:37:11.720><c> so</c><00:37:11.840><c> if</c><00:37:11.900><c> you</c>

00:37:11.980 --> 00:37:11.990 align:start position:0%
you per thread information so if you
 

00:37:11.990 --> 00:37:13.839 align:start position:0%
you per thread information so if you
have<00:37:12.080><c> a</c><00:37:12.140><c> program</c><00:37:12.410><c> that</c><00:37:12.619><c> Forks</c><00:37:13.070><c> 400</c><00:37:13.520><c> threads</c>

00:37:13.839 --> 00:37:13.849 align:start position:0%
have a program that Forks 400 threads
 

00:37:13.849 --> 00:37:15.130 align:start position:0%
have a program that Forks 400 threads
like

00:37:15.130 --> 00:37:15.140 align:start position:0%
like
 

00:37:15.140 --> 00:37:16.990 align:start position:0%
like
Vilano<00:37:15.470><c> mark</c><00:37:15.800><c> or</c><00:37:15.920><c> something</c><00:37:16.190><c> that</c><00:37:16.340><c> I</c><00:37:16.430><c> tend</c><00:37:16.940><c> to</c>

00:37:16.990 --> 00:37:17.000 align:start position:0%
Vilano mark or something that I tend to
 

00:37:17.000 --> 00:37:19.480 align:start position:0%
Vilano mark or something that I tend to
run<00:37:17.180><c> err</c><00:37:17.240><c> on</c><00:37:17.510><c> or</c><00:37:17.990><c> off</c><00:37:18.109><c> at</c><00:37:18.980><c> the</c><00:37:19.099><c> end</c><00:37:19.220><c> of</c><00:37:19.340><c> the</c>

00:37:19.480 --> 00:37:19.490 align:start position:0%
run err on or off at the end of the
 

00:37:19.490 --> 00:37:21.640 align:start position:0%
run err on or off at the end of the
program<00:37:20.119><c> when</c><00:37:20.240><c> it</c><00:37:20.330><c> exits</c><00:37:20.690><c> it</c><00:37:20.810><c> spits</c><00:37:21.050><c> out</c><00:37:21.170><c> 400</c>

00:37:21.640 --> 00:37:21.650 align:start position:0%
program when it exits it spits out 400
 

00:37:21.650 --> 00:37:23.500 align:start position:0%
program when it exits it spits out 400
copies<00:37:21.830><c> of</c><00:37:22.190><c> the</c><00:37:22.640><c> information</c><00:37:23.119><c> which</c><00:37:23.270><c> is</c><00:37:23.390><c> not</c>

00:37:23.500 --> 00:37:23.510 align:start position:0%
copies of the information which is not
 

00:37:23.510 --> 00:37:27.339 align:start position:0%
copies of the information which is not
very<00:37:23.720><c> useful</c><00:37:24.070><c> but</c><00:37:25.210><c> it</c><00:37:26.210><c> is</c><00:37:26.450><c> the</c><00:37:26.690><c> only</c><00:37:27.140><c> way</c><00:37:27.320><c> that</c>

00:37:27.339 --> 00:37:27.349 align:start position:0%
very useful but it is the only way that
 

00:37:27.349 --> 00:37:30.700 align:start position:0%
very useful but it is the only way that
I<00:37:27.650><c> know</c><00:37:27.770><c> of</c><00:37:28.450><c> where</c><00:37:29.450><c> we</c><00:37:29.780><c> actually</c><00:37:30.080><c> list</c><00:37:30.320><c> out</c><00:37:30.530><c> the</c>

00:37:30.700 --> 00:37:30.710 align:start position:0%
I know of where we actually list out the
 

00:37:30.710 --> 00:37:32.620 align:start position:0%
I know of where we actually list out the
methods<00:37:31.099><c> we've</c><00:37:31.460><c> got</c><00:37:31.609><c> compiled</c><00:37:32.210><c> versus</c><00:37:32.540><c> the</c>

00:37:32.620 --> 00:37:32.630 align:start position:0%
methods we've got compiled versus the
 

00:37:32.630 --> 00:37:34.089 align:start position:0%
methods we've got compiled versus the
ones<00:37:32.810><c> that</c><00:37:32.960><c> get</c><00:37:33.080><c> interpreted</c><00:37:33.650><c> and</c><00:37:33.830><c> how</c><00:37:33.950><c> much</c>

00:37:34.089 --> 00:37:34.099 align:start position:0%
ones that get interpreted and how much
 

00:37:34.099 --> 00:37:35.980 align:start position:0%
ones that get interpreted and how much
time<00:37:34.340><c> we</c><00:37:34.490><c> spend</c><00:37:34.760><c> an</c><00:37:34.880><c> interpreter</c><00:37:35.359><c> code</c><00:37:35.570><c> versus</c>

00:37:35.980 --> 00:37:35.990 align:start position:0%
time we spend an interpreter code versus
 

00:37:35.990 --> 00:37:37.720 align:start position:0%
time we spend an interpreter code versus
native<00:37:36.230><c> code</c><00:37:36.500><c> versus</c><00:37:36.830><c> compiled</c><00:37:37.190><c> code</c><00:37:37.400><c> and</c><00:37:37.670><c> how</c>

00:37:37.720 --> 00:37:37.730 align:start position:0%
native code versus compiled code and how
 

00:37:37.730 --> 00:37:41.080 align:start position:0%
native code versus compiled code and how
much<00:37:37.880><c> time</c><00:37:38.060><c> we</c><00:37:38.210><c> spend</c><00:37:38.450><c> in</c><00:37:38.570><c> GC</c><00:37:38.960><c> etc</c><00:37:39.560><c> so</c><00:37:40.520><c> that</c><00:37:40.820><c> can</c>

00:37:41.080 --> 00:37:41.090 align:start position:0%
much time we spend in GC etc so that can
 

00:37:41.090 --> 00:37:42.760 align:start position:0%
much time we spend in GC etc so that can
give<00:37:41.210><c> you</c><00:37:41.300><c> some</c><00:37:41.480><c> very</c><00:37:41.510><c> useful</c><00:37:41.930><c> insight</c><00:37:42.500><c> on</c>

00:37:42.760 --> 00:37:42.770 align:start position:0%
give you some very useful insight on
 

00:37:42.770 --> 00:37:45.720 align:start position:0%
give you some very useful insight on
first<00:37:43.130><c> of</c><00:37:43.280><c> all</c><00:37:43.599><c> which</c><00:37:44.599><c> methods</c><00:37:45.020><c> got</c><00:37:45.200><c> compiled</c>

00:37:45.720 --> 00:37:45.730 align:start position:0%
first of all which methods got compiled
 

00:37:45.730 --> 00:37:48.400 align:start position:0%
first of all which methods got compiled
and<00:37:46.730><c> you</c><00:37:47.330><c> might</c><00:37:47.480><c> look</c><00:37:47.570><c> at</c><00:37:47.690><c> it</c><00:37:47.780><c> and</c><00:37:47.839><c> say</c><00:37:48.050><c> hang</c><00:37:48.349><c> on</c>

00:37:48.400 --> 00:37:48.410 align:start position:0%
and you might look at it and say hang on
 

00:37:48.410 --> 00:37:50.500 align:start position:0%
and you might look at it and say hang on
a<00:37:48.470><c> minute</c><00:37:48.589><c> I</c><00:37:48.830><c> expected</c><00:37:49.460><c> method</c><00:37:49.849><c> a</c><00:37:50.030><c> to</c><00:37:50.089><c> get</c>

00:37:50.500 --> 00:37:50.510 align:start position:0%
a minute I expected method a to get
 

00:37:50.510 --> 00:37:52.150 align:start position:0%
a minute I expected method a to get
compiled<00:37:50.900><c> because</c><00:37:51.260><c> I</c><00:37:51.380><c> I</c><00:37:51.589><c> was</c><00:37:51.950><c> under</c><00:37:52.130><c> the</c>

00:37:52.150 --> 00:37:52.160 align:start position:0%
compiled because I I was under the
 

00:37:52.160 --> 00:37:53.530 align:start position:0%
compiled because I I was under the
impression<00:37:52.310><c> that</c><00:37:52.760><c> this</c><00:37:53.000><c> was</c><00:37:53.060><c> my</c><00:37:53.359><c> most</c>

00:37:53.530 --> 00:37:53.540 align:start position:0%
impression that this was my most
 

00:37:53.540 --> 00:37:55.780 align:start position:0%
impression that this was my most
expensive<00:37:53.900><c> method</c><00:37:54.410><c> but</c><00:37:54.980><c> it</c><00:37:55.250><c> turns</c><00:37:55.490><c> out</c><00:37:55.700><c> that</c>

00:37:55.780 --> 00:37:55.790 align:start position:0%
expensive method but it turns out that
 

00:37:55.790 --> 00:37:57.339 align:start position:0%
expensive method but it turns out that
in<00:37:56.030><c> fact</c><00:37:56.270><c> we</c><00:37:56.450><c> didn't</c><00:37:56.720><c> go</c><00:37:56.780><c> anywhere</c><00:37:56.990><c> near</c><00:37:57.109><c> that</c>

00:37:57.339 --> 00:37:57.349 align:start position:0%
in fact we didn't go anywhere near that
 

00:37:57.349 --> 00:37:59.589 align:start position:0%
in fact we didn't go anywhere near that
we<00:37:57.770><c> didn't</c><00:37:57.980><c> compile</c><00:37:58.280><c> it</c><00:37:58.460><c> or</c><00:37:58.849><c> maybe</c><00:37:59.060><c> we</c><00:37:59.240><c> did</c><00:37:59.450><c> and</c>

00:37:59.589 --> 00:37:59.599 align:start position:0%
we didn't compile it or maybe we did and
 

00:37:59.599 --> 00:38:00.760 align:start position:0%
we didn't compile it or maybe we did and
we<00:37:59.660><c> couldn't</c><00:37:59.839><c> compile</c><00:38:00.200><c> it</c><00:38:00.349><c> because</c><00:38:00.500><c> it's</c><00:38:00.619><c> got</c>

00:38:00.760 --> 00:38:00.770 align:start position:0%
we couldn't compile it because it's got
 

00:38:00.770 --> 00:38:02.680 align:start position:0%
we couldn't compile it because it's got
some<00:38:00.920><c> funny</c><00:38:01.130><c> assembler</c><00:38:01.640><c> or</c><00:38:01.700><c> some</c><00:38:02.150><c> construct</c>

00:38:02.680 --> 00:38:02.690 align:start position:0%
some funny assembler or some construct
 

00:38:02.690 --> 00:38:07.030 align:start position:0%
some funny assembler or some construct
or<00:38:02.839><c> it's</c><00:38:02.960><c> too</c><00:38:03.109><c> big</c><00:38:03.520><c> etc</c><00:38:04.599><c> so</c><00:38:05.599><c> that</c><00:38:05.960><c> that</c><00:38:06.920><c> will</c>

00:38:07.030 --> 00:38:07.040 align:start position:0%
or it's too big etc so that that will
 

00:38:07.040 --> 00:38:09.099 align:start position:0%
or it's too big etc so that that will
that<00:38:07.460><c> will</c><00:38:07.520><c> pinpoint</c><00:38:07.910><c> which</c><00:38:08.570><c> methods</c><00:38:08.990><c> are</c>

00:38:09.099 --> 00:38:09.109 align:start position:0%
that will pinpoint which methods are
 

00:38:09.109 --> 00:38:11.589 align:start position:0%
that will pinpoint which methods are
getting<00:38:09.380><c> compiled</c><00:38:09.859><c> you</c><00:38:10.700><c> can</c><00:38:10.880><c> sanity</c><00:38:11.330><c> check</c>

00:38:11.589 --> 00:38:11.599 align:start position:0%
getting compiled you can sanity check
 

00:38:11.599 --> 00:38:12.910 align:start position:0%
getting compiled you can sanity check
that<00:38:11.630><c> the</c><00:38:11.839><c> ones</c><00:38:12.020><c> your</c><00:38:12.260><c> that</c><00:38:12.619><c> are</c><00:38:12.740><c> getting</c>

00:38:12.910 --> 00:38:12.920 align:start position:0%
that the ones your that are getting
 

00:38:12.920 --> 00:38:16.230 align:start position:0%
that the ones your that are getting
compiled<00:38:13.280><c> are</c><00:38:13.430><c> the</c><00:38:13.490><c> ones</c><00:38:13.670><c> you</c><00:38:13.790><c> expect</c><00:38:14.270><c> and</c>

00:38:16.230 --> 00:38:16.240 align:start position:0%
compiled are the ones you expect and
 

00:38:16.240 --> 00:38:18.099 align:start position:0%
compiled are the ones you expect and
once<00:38:17.240><c> you</c><00:38:17.390><c> know</c><00:38:17.510><c> the</c><00:38:17.630><c> ones</c><00:38:17.780><c> that</c><00:38:17.930><c> are</c><00:38:18.020><c> getting</c>

00:38:18.099 --> 00:38:18.109 align:start position:0%
once you know the ones that are getting
 

00:38:18.109 --> 00:38:19.770 align:start position:0%
once you know the ones that are getting
compiled<00:38:18.589><c> you</c><00:38:18.800><c> can</c><00:38:18.980><c> then</c><00:38:19.099><c> focus</c><00:38:19.310><c> your</c>

00:38:19.770 --> 00:38:19.780 align:start position:0%
compiled you can then focus your
 

00:38:19.780 --> 00:38:23.770 align:start position:0%
compiled you can then focus your
optimizations<00:38:20.780><c> on</c><00:38:21.080><c> those</c><00:38:21.290><c> methods</c><00:38:21.740><c> and</c><00:38:22.780><c> it's</c>

00:38:23.770 --> 00:38:23.780 align:start position:0%
optimizations on those methods and it's
 

00:38:23.780 --> 00:38:25.630 align:start position:0%
optimizations on those methods and it's
a<00:38:23.869><c> little</c><00:38:24.109><c> example</c><00:38:24.710><c> use</c><00:38:25.099><c> down</c><00:38:25.310><c> at</c><00:38:25.339><c> the</c><00:38:25.490><c> bottom</c>

00:38:25.630 --> 00:38:25.640 align:start position:0%
a little example use down at the bottom
 

00:38:25.640 --> 00:38:28.030 align:start position:0%
a little example use down at the bottom
it's<00:38:25.910><c> very</c><00:38:26.089><c> simple</c><00:38:26.390><c> to</c><00:38:26.510><c> use</c><00:38:26.720><c> but</c><00:38:26.930><c> like</c><00:38:27.740><c> I</c><00:38:27.859><c> said</c>

00:38:28.030 --> 00:38:28.040 align:start position:0%
it's very simple to use but like I said
 

00:38:28.040 --> 00:38:30.010 align:start position:0%
it's very simple to use but like I said
don't<00:38:28.160><c> try</c><00:38:28.430><c> it</c><00:38:28.490><c> with</c><00:38:28.730><c> 400</c><00:38:29.150><c> threads</c><00:38:29.480><c> just</c><00:38:29.750><c> do</c><00:38:29.900><c> it</c>

00:38:30.010 --> 00:38:30.020 align:start position:0%
don't try it with 400 threads just do it
 

00:38:30.020 --> 00:38:33.849 align:start position:0%
don't try it with 400 threads just do it
on<00:38:30.109><c> something</c><00:38:30.470><c> with</c><00:38:30.589><c> a</c><00:38:30.619><c> minimal</c><00:38:30.980><c> number</c><00:38:32.859><c> now</c>

00:38:33.849 --> 00:38:33.859 align:start position:0%
on something with a minimal number now
 

00:38:33.859 --> 00:38:35.710 align:start position:0%
on something with a minimal number now
measuring<00:38:34.160><c> memories</c><00:38:34.640><c> is</c><00:38:34.849><c> a</c><00:38:34.910><c> little</c><00:38:35.240><c> harder</c>

00:38:35.710 --> 00:38:35.720 align:start position:0%
measuring memories is a little harder
 

00:38:35.720 --> 00:38:39.520 align:start position:0%
measuring memories is a little harder
because<00:38:36.760><c> the</c><00:38:37.760><c> the</c><00:38:38.330><c> Java</c><00:38:38.570><c> VM</c><00:38:38.810><c> has</c><00:38:39.170><c> several</c>

00:38:39.520 --> 00:38:39.530 align:start position:0%
because the the Java VM has several
 

00:38:39.530 --> 00:38:41.829 align:start position:0%
because the the Java VM has several
different<00:38:40.150><c> perspectives</c><00:38:41.150><c> on</c><00:38:41.210><c> what</c><00:38:41.270><c> memory</c><00:38:41.750><c> is</c>

00:38:41.829 --> 00:38:41.839 align:start position:0%
different perspectives on what memory is
 

00:38:41.839 --> 00:38:43.930 align:start position:0%
different perspectives on what memory is
as<00:38:42.500><c> far</c><00:38:42.920><c> as</c><00:38:43.040><c> you</c><00:38:43.220><c> are</c><00:38:43.339><c> concerned</c><00:38:43.700><c> the</c><00:38:43.910><c> only</c>

00:38:43.930 --> 00:38:43.940 align:start position:0%
as far as you are concerned the only
 

00:38:43.940 --> 00:38:45.520 align:start position:0%
as far as you are concerned the only
memory<00:38:44.390><c> you</c><00:38:44.510><c> can</c><00:38:44.660><c> really</c><00:38:44.900><c> have</c><00:38:44.990><c> any</c><00:38:45.170><c> control</c>

00:38:45.520 --> 00:38:45.530 align:start position:0%
memory you can really have any control
 

00:38:45.530 --> 00:38:47.579 align:start position:0%
memory you can really have any control
of<00:38:45.710><c> is</c><00:38:45.890><c> the</c><00:38:46.070><c> memory</c><00:38:46.310><c> in</c><00:38:46.430><c> the</c><00:38:46.609><c> Java</c><00:38:47.000><c> heap</c><00:38:47.240><c> and</c>

00:38:47.579 --> 00:38:47.589 align:start position:0%
of is the memory in the Java heap and
 

00:38:47.589 --> 00:38:50.680 align:start position:0%
of is the memory in the Java heap and
the<00:38:48.589><c> tips</c><00:38:48.890><c> that</c><00:38:49.160><c> some</c><00:38:49.430><c> if</c><00:38:49.940><c> I</c><00:38:50.089><c> unexplained</c>

00:38:50.680 --> 00:38:50.690 align:start position:0%
the tips that some if I unexplained
 

00:38:50.690 --> 00:38:53.280 align:start position:0%
the tips that some if I unexplained
whereby<00:38:51.140><c> you</c><00:38:51.200><c> you</c><00:38:51.890><c> know</c><00:38:52.040><c> that</c><00:38:52.220><c> references</c><00:38:52.790><c> you</c>

00:38:53.280 --> 00:38:53.290 align:start position:0%
whereby you you know that references you
 

00:38:53.290 --> 00:38:54.780 align:start position:0%
whereby you you know that references you
avoid<00:38:53.590><c> using</c><00:38:53.620><c> finalizes</c><00:38:54.370><c> cetera</c><00:38:54.640><c> that's</c>

00:38:54.780 --> 00:38:54.790 align:start position:0%
avoid using finalizes cetera that's
 

00:38:54.790 --> 00:38:57.230 align:start position:0%
avoid using finalizes cetera that's
that's<00:38:55.090><c> the</c><00:38:55.150><c> kind</c><00:38:55.330><c> of</c><00:38:55.360><c> thing</c><00:38:55.510><c> you</c><00:38:55.630><c> can</c><00:38:55.720><c> control</c>

00:38:57.230 --> 00:38:57.240 align:start position:0%
that's the kind of thing you can control
 

00:38:57.240 --> 00:39:00.660 align:start position:0%
that's the kind of thing you can control
other<00:38:58.240><c> than</c><00:38:58.480><c> that</c><00:38:58.740><c> so</c><00:38:59.740><c> you</c><00:38:59.950><c> can</c><00:39:00.190><c> you</c><00:39:00.370><c> can</c><00:39:00.490><c> watch</c>

00:39:00.660 --> 00:39:00.670 align:start position:0%
other than that so you can you can watch
 

00:39:00.670 --> 00:39:04.260 align:start position:0%
other than that so you can you can watch
the<00:39:00.850><c> heap</c><00:39:01.980><c> as</c><00:39:02.980><c> it</c><00:39:03.190><c> grows</c><00:39:03.430><c> and</c><00:39:03.580><c> shrinks</c><00:39:03.760><c> using</c>

00:39:04.260 --> 00:39:04.270 align:start position:0%
the heap as it grows and shrinks using
 

00:39:04.270 --> 00:39:08.370 align:start position:0%
the heap as it grows and shrinks using
the<00:39:04.360><c> voice</c><00:39:04.480><c> chief</c><00:39:04.960><c> see</c><00:39:05.230><c> flag</c><00:39:05.500><c> as</c><00:39:06.960><c> we</c><00:39:07.960><c> mentioned</c>

00:39:08.370 --> 00:39:08.380 align:start position:0%
the voice chief see flag as we mentioned
 

00:39:08.380 --> 00:39:09.750 align:start position:0%
the voice chief see flag as we mentioned
for<00:39:08.440><c> most</c><00:39:08.710><c> class</c><00:39:09.040><c> will</c><00:39:09.340><c> show</c><00:39:09.520><c> you</c><00:39:09.580><c> what</c>

00:39:09.750 --> 00:39:09.760 align:start position:0%
for most class will show you what
 

00:39:09.760 --> 00:39:12.960 align:start position:0%
for most class will show you what
classes<00:39:10.330><c> as</c><00:39:10.480><c> they</c><00:39:10.630><c> get</c><00:39:10.750><c> loaded</c><00:39:11.310><c> if</c><00:39:12.310><c> you</c><00:39:12.520><c> you</c>

00:39:12.960 --> 00:39:12.970 align:start position:0%
classes as they get loaded if you you
 

00:39:12.970 --> 00:39:15.150 align:start position:0%
classes as they get loaded if you you
might<00:39:13.150><c> see</c><00:39:13.450><c> classes</c><00:39:14.050><c> getting</c><00:39:14.230><c> loaded</c><00:39:14.710><c> before</c>

00:39:15.150 --> 00:39:15.160 align:start position:0%
might see classes getting loaded before
 

00:39:15.160 --> 00:39:16.710 align:start position:0%
might see classes getting loaded before
you<00:39:15.490><c> think</c><00:39:15.760><c> you</c><00:39:15.850><c> should</c><00:39:16.030><c> be</c><00:39:16.150><c> using</c><00:39:16.360><c> them</c><00:39:16.570><c> and</c>

00:39:16.710 --> 00:39:16.720 align:start position:0%
you think you should be using them and
 

00:39:16.720 --> 00:39:17.940 align:start position:0%
you think you should be using them and
that's<00:39:16.870><c> an</c><00:39:16.960><c> example</c><00:39:17.200><c> where</c><00:39:17.410><c> you</c><00:39:17.530><c> should</c><00:39:17.680><c> sort</c>

00:39:17.940 --> 00:39:17.950 align:start position:0%
that's an example where you should sort
 

00:39:17.950 --> 00:39:19.350 align:start position:0%
that's an example where you should sort
of<00:39:18.040><c> go</c><00:39:18.160><c> in</c><00:39:18.280><c> and</c><00:39:18.460><c> pinpoint</c><00:39:18.850><c> why</c><00:39:19.120><c> they're</c>

00:39:19.350 --> 00:39:19.360 align:start position:0%
of go in and pinpoint why they're
 

00:39:19.360 --> 00:39:21.240 align:start position:0%
of go in and pinpoint why they're
getting<00:39:19.420><c> pulled</c><00:39:19.780><c> in</c><00:39:19.960><c> and</c><00:39:20.170><c> maybe</c><00:39:20.770><c> you</c><00:39:20.890><c> can</c><00:39:21.040><c> load</c>

00:39:21.240 --> 00:39:21.250 align:start position:0%
getting pulled in and maybe you can load
 

00:39:21.250 --> 00:39:24.600 align:start position:0%
getting pulled in and maybe you can load
them<00:39:21.370><c> a</c><00:39:21.460><c> bit</c><00:39:21.580><c> later</c><00:39:23.190><c> there's</c><00:39:24.190><c> a</c><00:39:24.250><c> command</c>

00:39:24.600 --> 00:39:24.610 align:start position:0%
them a bit later there's a command
 

00:39:24.610 --> 00:39:26.820 align:start position:0%
them a bit later there's a command
called<00:39:24.880><c> top</c><00:39:25.330><c> which</c><00:39:26.170><c> will</c><00:39:26.380><c> give</c><00:39:26.560><c> you</c><00:39:26.680><c> an</c>

00:39:26.820 --> 00:39:26.830 align:start position:0%
called top which will give you an
 

00:39:26.830 --> 00:39:30.600 align:start position:0%
called top which will give you an
overall<00:39:27.100><c> memory</c><00:39:28.590><c> view</c><00:39:29.590><c> of</c><00:39:29.860><c> the</c><00:39:30.010><c> whole</c><00:39:30.160><c> system</c>

00:39:30.600 --> 00:39:30.610 align:start position:0%
overall memory view of the whole system
 

00:39:30.610 --> 00:39:34.440 align:start position:0%
overall memory view of the whole system
and<00:39:30.990><c> that's</c><00:39:31.990><c> good</c><00:39:32.290><c> for</c><00:39:32.320><c> splitting</c><00:39:32.830><c> out</c><00:39:33.450><c> memory</c>

00:39:34.440 --> 00:39:34.450 align:start position:0%
and that's good for splitting out memory
 

00:39:34.450 --> 00:39:37.380 align:start position:0%
and that's good for splitting out memory
that's<00:39:34.690><c> being</c><00:39:35.200><c> shared</c><00:39:35.650><c> for</c><00:39:35.980><c> example</c><00:39:36.430><c> when</c><00:39:37.300><c> you</c>

00:39:37.380 --> 00:39:37.390 align:start position:0%
that's being shared for example when you
 

00:39:37.390 --> 00:39:40.050 align:start position:0%
that's being shared for example when you
run<00:39:37.540><c> multiple</c><00:39:37.690><c> java</c><00:39:38.110><c> processes</c><00:39:38.910><c> some</c><00:39:39.910><c> of</c><00:39:40.000><c> the</c>

00:39:40.050 --> 00:39:40.060 align:start position:0%
run multiple java processes some of the
 

00:39:40.060 --> 00:39:41.340 align:start position:0%
run multiple java processes some of the
memory<00:39:40.420><c> that</c><00:39:40.450><c> we</c><00:39:40.630><c> pull</c><00:39:40.810><c> in</c><00:39:40.900><c> from</c><00:39:41.050><c> the</c><00:39:41.110><c> shared</c>

00:39:41.340 --> 00:39:41.350 align:start position:0%
memory that we pull in from the shared
 

00:39:41.350 --> 00:39:43.140 align:start position:0%
memory that we pull in from the shared
generation<00:39:41.920><c> is</c><00:39:42.160><c> shared</c><00:39:42.550><c> between</c><00:39:42.640><c> several</c>

00:39:43.140 --> 00:39:43.150 align:start position:0%
generation is shared between several
 

00:39:43.150 --> 00:39:44.940 align:start position:0%
generation is shared between several
processes<00:39:43.660><c> and</c><00:39:43.840><c> you</c><00:39:44.200><c> can</c><00:39:44.350><c> tell</c><00:39:44.560><c> the</c>

00:39:44.940 --> 00:39:44.950 align:start position:0%
processes and you can tell the
 

00:39:44.950 --> 00:39:46.080 align:start position:0%
processes and you can tell the
difference<00:39:45.250><c> between</c><00:39:45.370><c> memory</c><00:39:45.850><c> that's</c>

00:39:46.080 --> 00:39:46.090 align:start position:0%
difference between memory that's
 

00:39:46.090 --> 00:39:48.660 align:start position:0%
difference between memory that's
privately<00:39:46.630><c> allocated</c><00:39:47.260><c> I</c><00:39:47.410><c> used</c><00:39:48.010><c> in</c><00:39:48.190><c> the</c><00:39:48.460><c> heap</c>

00:39:48.660 --> 00:39:48.670 align:start position:0%
privately allocated I used in the heap
 

00:39:48.670 --> 00:39:52.680 align:start position:0%
privately allocated I used in the heap
for<00:39:48.940><c> you</c><00:39:49.840><c> versus</c><00:39:50.710><c> memory</c><00:39:51.040><c> that's</c><00:39:51.690><c> being</c>

00:39:52.680 --> 00:39:52.690 align:start position:0%
for you versus memory that's being
 

00:39:52.690 --> 00:39:54.150 align:start position:0%
for you versus memory that's being
shared<00:39:52.960><c> in</c><00:39:53.110><c> the</c><00:39:53.170><c> shared</c><00:39:53.410><c> generation</c><00:39:53.950><c> or</c><00:39:54.040><c> is</c>

00:39:54.150 --> 00:39:54.160 align:start position:0%
shared in the shared generation or is
 

00:39:54.160 --> 00:39:55.980 align:start position:0%
shared in the shared generation or is
being<00:39:54.370><c> shared</c><00:39:54.610><c> because</c><00:39:54.850><c> of</c><00:39:55.090><c> dynamic</c>

00:39:55.980 --> 00:39:55.990 align:start position:0%
being shared because of dynamic
 

00:39:55.990 --> 00:39:57.300 align:start position:0%
being shared because of dynamic
libraries<00:39:56.350><c> that</c><00:39:56.470><c> are</c><00:39:56.530><c> being</c><00:39:56.710><c> pulled</c><00:39:56.980><c> in</c><00:39:57.130><c> by</c>

00:39:57.300 --> 00:39:57.310 align:start position:0%
libraries that are being pulled in by
 

00:39:57.310 --> 00:40:00.780 align:start position:0%
libraries that are being pulled in by
native<00:39:57.850><c> code</c><00:39:58.090><c> either</c><00:39:58.390><c> your</c><00:39:58.630><c> code</c><00:39:58.840><c> or</c><00:39:58.870><c> our</c><00:39:59.790><c> VM</c>

00:40:00.780 --> 00:40:00.790 align:start position:0%
native code either your code or our VM
 

00:40:00.790 --> 00:40:03.300 align:start position:0%
native code either your code or our VM
map<00:40:01.060><c> is</c><00:40:01.350><c> another</c><00:40:02.350><c> command-line</c><00:40:02.800><c> utility</c>

00:40:03.300 --> 00:40:03.310 align:start position:0%
map is another command-line utility
 

00:40:03.310 --> 00:40:05.910 align:start position:0%
map is another command-line utility
gives<00:40:03.820><c> you</c><00:40:03.970><c> a</c><00:40:04.180><c> lot</c><00:40:04.450><c> more</c><00:40:04.480><c> specific</c><00:40:05.290><c> insight</c><00:40:05.680><c> on</c>

00:40:05.910 --> 00:40:05.920 align:start position:0%
gives you a lot more specific insight on
 

00:40:05.920 --> 00:40:07.920 align:start position:0%
gives you a lot more specific insight on
the<00:40:06.070><c> the</c><00:40:06.670><c> intricacies</c><00:40:07.420><c> of</c><00:40:07.450><c> the</c><00:40:07.630><c> virtual</c>

00:40:07.920 --> 00:40:07.930 align:start position:0%
the the intricacies of the virtual
 

00:40:07.930 --> 00:40:10.920 align:start position:0%
the the intricacies of the virtual
memory<00:40:08.080><c> being</c><00:40:08.470><c> used</c><00:40:08.770><c> and</c><00:40:09.600><c> it's</c><00:40:10.600><c> it's</c>

00:40:10.920 --> 00:40:10.930 align:start position:0%
memory being used and it's it's
 

00:40:10.930 --> 00:40:12.660 align:start position:0%
memory being used and it's it's
relatively<00:40:11.440><c> complicated</c><00:40:11.800><c> if</c><00:40:12.250><c> you</c><00:40:12.280><c> if</c><00:40:12.550><c> you</c>

00:40:12.660 --> 00:40:12.670 align:start position:0%
relatively complicated if you if you
 

00:40:12.670 --> 00:40:13.770 align:start position:0%
relatively complicated if you if you
want<00:40:12.820><c> to</c><00:40:12.880><c> learn</c><00:40:13.000><c> a</c><00:40:13.030><c> bit</c><00:40:13.210><c> more</c><00:40:13.240><c> about</c><00:40:13.540><c> it</c><00:40:13.600><c> they</c>

00:40:13.770 --> 00:40:13.780 align:start position:0%
want to learn a bit more about it they
 

00:40:13.780 --> 00:40:15.230 align:start position:0%
want to learn a bit more about it they
might<00:40:13.930><c> cover</c><00:40:14.170><c> it</c><00:40:14.320><c> in</c><00:40:14.410><c> the</c><00:40:14.470><c> performance</c><00:40:14.920><c> tools</c>

00:40:15.230 --> 00:40:15.240 align:start position:0%
might cover it in the performance tools
 

00:40:15.240 --> 00:40:18.030 align:start position:0%
might cover it in the performance tools
it<00:40:16.240><c> turns</c><00:40:16.510><c> out</c><00:40:16.720><c> that</c><00:40:16.960><c> Java</c><00:40:17.500><c> vm's</c><00:40:17.890><c> are</c>

00:40:18.030 --> 00:40:18.040 align:start position:0%
it turns out that Java vm's are
 

00:40:18.040 --> 00:40:19.700 align:start position:0%
it turns out that Java vm's are
improving<00:40:18.430><c> faster</c><00:40:19.090><c> than</c><00:40:19.210><c> the</c><00:40:19.300><c> books</c><00:40:19.480><c> about</c>

00:40:19.700 --> 00:40:19.710 align:start position:0%
improving faster than the books about
 

00:40:19.710 --> 00:40:23.220 align:start position:0%
improving faster than the books about
performance<00:40:20.710><c> in</c><00:40:20.830><c> Java</c><00:40:21.250><c> can</c><00:40:21.970><c> be</c><00:40:22.060><c> written</c><00:40:22.330><c> so</c>

00:40:23.220 --> 00:40:23.230 align:start position:0%
performance in Java can be written so
 

00:40:23.230 --> 00:40:25.200 align:start position:0%
performance in Java can be written so
there<00:40:23.770><c> are</c><00:40:23.890><c> there</c><00:40:24.190><c> are</c><00:40:24.220><c> quite</c><00:40:24.610><c> a</c><00:40:24.640><c> few</c><00:40:24.700><c> books</c>

00:40:25.200 --> 00:40:25.210 align:start position:0%
there are there are quite a few books
 

00:40:25.210 --> 00:40:26.670 align:start position:0%
there are there are quite a few books
out<00:40:25.450><c> there</c><00:40:25.600><c> most</c><00:40:25.750><c> of</c><00:40:25.840><c> which</c><00:40:25.990><c> is</c><00:40:26.110><c> containing</c>

00:40:26.670 --> 00:40:26.680 align:start position:0%
out there most of which is containing
 

00:40:26.680 --> 00:40:28.140 align:start position:0%
out there most of which is containing
extremely<00:40:27.040><c> good</c><00:40:27.190><c> advice</c><00:40:27.490><c> but</c><00:40:27.730><c> some</c><00:40:27.940><c> of</c><00:40:28.030><c> their</c>

00:40:28.140 --> 00:40:28.150 align:start position:0%
extremely good advice but some of their
 

00:40:28.150 --> 00:40:31.380 align:start position:0%
extremely good advice but some of their
tips<00:40:28.450><c> just</c><00:40:29.310><c> become</c><00:40:30.310><c> outdated</c><00:40:30.490><c> with</c><00:40:30.970><c> time</c><00:40:31.210><c> as</c>

00:40:31.380 --> 00:40:31.390 align:start position:0%
tips just become outdated with time as
 

00:40:31.390 --> 00:40:36.530 align:start position:0%
tips just become outdated with time as
the<00:40:31.480><c> technology</c><00:40:31.990><c> rolls</c><00:40:32.200><c> on</c><00:40:35.160><c> traditionally</c><00:40:36.160><c> in</c>

00:40:36.530 --> 00:40:36.540 align:start position:0%
the technology rolls on traditionally in
 

00:40:36.540 --> 00:40:41.040 align:start position:0%
the technology rolls on traditionally in
1.0<00:40:37.830><c> vm's</c><00:40:38.830><c> 1.1</c><00:40:39.460><c> VMs</c><00:40:39.880><c> allocation</c><00:40:40.750><c> was</c><00:40:40.870><c> very</c>

00:40:41.040 --> 00:40:41.050 align:start position:0%
1.0 vm's 1.1 VMs allocation was very
 

00:40:41.050 --> 00:40:41.580 align:start position:0%
1.0 vm's 1.1 VMs allocation was very
slow

00:40:41.580 --> 00:40:41.590 align:start position:0%
slow
 

00:40:41.590 --> 00:40:43.710 align:start position:0%
slow
they<00:40:41.710><c> had</c><00:40:41.830><c> a</c><00:40:42.090><c> malloc</c><00:40:43.090><c> space</c><00:40:43.270><c> via</c><00:40:43.480><c> an</c>

00:40:43.710 --> 00:40:43.720 align:start position:0%
they had a malloc space via an
 

00:40:43.720 --> 00:40:45.660 align:start position:0%
they had a malloc space via an
allocation<00:40:44.260><c> scheme</c><00:40:44.590><c> or</c><00:40:44.710><c> something</c><00:40:45.010><c> our</c>

00:40:45.660 --> 00:40:45.670 align:start position:0%
allocation scheme or something our
 

00:40:45.670 --> 00:40:48.780 align:start position:0%
allocation scheme or something our
allocation<00:40:46.240><c> is</c><00:40:46.330><c> now</c><00:40:46.450><c> extremely</c><00:40:46.930><c> cheap</c><00:40:47.790><c> now</c>

00:40:48.780 --> 00:40:48.790 align:start position:0%
allocation is now extremely cheap now
 

00:40:48.790 --> 00:40:50.640 align:start position:0%
allocation is now extremely cheap now
the<00:40:48.850><c> initialization</c><00:40:49.360><c> of</c><00:40:49.720><c> an</c><00:40:49.840><c> object</c><00:40:50.200><c> may</c><00:40:50.470><c> not</c>

00:40:50.640 --> 00:40:50.650 align:start position:0%
the initialization of an object may not
 

00:40:50.650 --> 00:40:54.050 align:start position:0%
the initialization of an object may not
be<00:40:50.830><c> but</c><00:40:51.190><c> allocating</c><00:40:51.760><c> it</c><00:40:51.910><c> is</c><00:40:52.470><c> few</c><00:40:53.470><c> instructions</c>

00:40:54.050 --> 00:40:54.060 align:start position:0%
be but allocating it is few instructions
 

00:40:54.060 --> 00:40:57.840 align:start position:0%
be but allocating it is few instructions
as<00:40:55.110><c> a</c><00:40:56.110><c> result</c><00:40:56.410><c> of</c><00:40:56.560><c> that</c><00:40:56.680><c> and</c><00:40:56.920><c> as</c><00:40:57.310><c> a</c><00:40:57.340><c> result</c><00:40:57.490><c> of</c><00:40:57.790><c> a</c>

00:40:57.840 --> 00:40:57.850 align:start position:0%
as a result of that and as a result of a
 

00:40:57.850 --> 00:40:59.430 align:start position:0%
as a result of that and as a result of a
scavenging<00:40:58.300><c> short</c><00:40:58.600><c> live</c><00:40:58.750><c> objects</c><00:40:59.080><c> are</c><00:40:59.230><c> very</c>

00:40:59.430 --> 00:40:59.440 align:start position:0%
scavenging short live objects are very
 

00:40:59.440 --> 00:41:02.220 align:start position:0%
scavenging short live objects are very
cheap<00:40:59.680><c> to</c><00:40:59.830><c> jeast</c><00:41:00.420><c> GC</c><00:41:01.420><c> because</c><00:41:01.720><c> we</c><00:41:01.810><c> essentially</c>

00:41:02.220 --> 00:41:02.230 align:start position:0%
cheap to jeast GC because we essentially
 

00:41:02.230 --> 00:41:03.360 align:start position:0%
cheap to jeast GC because we essentially
don't<00:41:02.350><c> do</c><00:41:02.560><c> anything</c><00:41:02.770><c> with</c><00:41:03.010><c> them</c><00:41:03.130><c> we</c><00:41:03.220><c> just</c>

00:41:03.360 --> 00:41:03.370 align:start position:0%
don't do anything with them we just
 

00:41:03.370 --> 00:41:04.890 align:start position:0%
don't do anything with them we just
throw<00:41:03.520><c> them</c><00:41:03.670><c> away</c><00:41:03.760><c> at</c><00:41:03.940><c> the</c><00:41:04.060><c> end</c><00:41:04.150><c> of</c><00:41:04.270><c> the</c><00:41:04.390><c> their</c>

00:41:04.890 --> 00:41:04.900 align:start position:0%
throw them away at the end of the their
 

00:41:04.900 --> 00:41:06.550 align:start position:0%
throw them away at the end of the their
lifecycle<00:41:05.470><c> so</c>

00:41:06.550 --> 00:41:06.560 align:start position:0%
lifecycle so
 

00:41:06.560 --> 00:41:08.320 align:start position:0%
lifecycle so
karai's<00:41:06.770><c> methods</c><00:41:07.190><c> costs</c><00:41:07.520><c> are</c><00:41:07.640><c> small</c><00:41:07.880><c> as</c><00:41:08.150><c> if</c><00:41:08.270><c> I</c>

00:41:08.320 --> 00:41:08.330 align:start position:0%
karai's methods costs are small as if I
 

00:41:08.330 --> 00:41:12.190 align:start position:0%
karai's methods costs are small as if I
mentioned<00:41:09.820><c> and</c><00:41:10.820><c> the</c><00:41:11.360><c> contending</c><00:41:11.840><c> case</c><00:41:12.020><c> is</c>

00:41:12.190 --> 00:41:12.200 align:start position:0%
mentioned and the contending case is
 

00:41:12.200 --> 00:41:15.670 align:start position:0%
mentioned and the contending case is
still<00:41:12.410><c> expensive</c><00:41:12.910><c> now</c><00:41:13.910><c> lastly</c><00:41:14.360><c> as</c><00:41:14.720><c> I</c><00:41:14.900><c> hinted</c>

00:41:15.670 --> 00:41:15.680 align:start position:0%
still expensive now lastly as I hinted
 

00:41:15.680 --> 00:41:18.550 align:start position:0%
still expensive now lastly as I hinted
at<00:41:15.980><c> before</c><00:41:16.150><c> system</c><00:41:17.150><c> calls</c><00:41:17.420><c> which</c><00:41:18.140><c> involve</c>

00:41:18.550 --> 00:41:18.560 align:start position:0%
at before system calls which involve
 

00:41:18.560 --> 00:41:21.280 align:start position:0%
at before system calls which involve
entry<00:41:19.430><c> into</c><00:41:19.640><c> the</c><00:41:19.760><c> kernel</c><00:41:19.970><c> just</c><00:41:20.840><c> because</c><00:41:21.170><c> of</c>

00:41:21.280 --> 00:41:21.290 align:start position:0%
entry into the kernel just because of
 

00:41:21.290 --> 00:41:22.750 align:start position:0%
entry into the kernel just because of
the<00:41:21.410><c> whole</c><00:41:21.530><c> context</c><00:41:22.040><c> switching</c><00:41:22.460><c> and</c><00:41:22.550><c> a</c><00:41:22.580><c> little</c>

00:41:22.750 --> 00:41:22.760 align:start position:0%
the whole context switching and a little
 

00:41:22.760 --> 00:41:24.790 align:start position:0%
the whole context switching and a little
bit<00:41:22.880><c> more</c><00:41:23.030><c> weight</c><00:41:23.270><c> involved</c><00:41:23.900><c> with</c><00:41:24.140><c> Mac</c><00:41:24.350><c> OS</c><00:41:24.380><c> 9</c>

00:41:24.790 --> 00:41:24.800 align:start position:0%
bit more weight involved with Mac OS 9
 

00:41:24.800 --> 00:41:27.640 align:start position:0%
bit more weight involved with Mac OS 9
they<00:41:25.700><c> are</c><00:41:25.850><c> expensive</c><00:41:26.300><c> there</c><00:41:26.900><c> are</c><00:41:27.110><c> there</c><00:41:27.560><c> are</c>

00:41:27.640 --> 00:41:27.650 align:start position:0%
they are expensive there are there are
 

00:41:27.650 --> 00:41:29.080 align:start position:0%
they are expensive there are there are
certain<00:41:27.770><c> things</c><00:41:27.920><c> that</c><00:41:28.160><c> we</c><00:41:28.400><c> do</c><00:41:28.580><c> on</c><00:41:28.760><c> your</c><00:41:28.940><c> behalf</c>

00:41:29.080 --> 00:41:29.090 align:start position:0%
certain things that we do on your behalf
 

00:41:29.090 --> 00:41:32.380 align:start position:0%
certain things that we do on your behalf
as<00:41:29.870><c> part</c><00:41:30.200><c> of</c><00:41:30.290><c> the</c><00:41:30.380><c> Java</c><00:41:30.620><c> API</c><00:41:30.800><c> s</c><00:41:31.130><c> that</c><00:41:32.090><c> involve</c>

00:41:32.380 --> 00:41:32.390 align:start position:0%
as part of the Java API s that involve
 

00:41:32.390 --> 00:41:33.940 align:start position:0%
as part of the Java API s that involve
system<00:41:32.750><c> calls</c><00:41:32.960><c> network</c><00:41:33.290><c> operations</c><00:41:33.800><c> i/o</c>

00:41:33.940 --> 00:41:33.950 align:start position:0%
system calls network operations i/o
 

00:41:33.950 --> 00:41:36.130 align:start position:0%
system calls network operations i/o
operations<00:41:34.550><c> things</c><00:41:34.760><c> like</c><00:41:34.880><c> that</c><00:41:35.060><c> thread</c><00:41:35.810><c> yield</c>

00:41:36.130 --> 00:41:36.140 align:start position:0%
operations things like that thread yield
 

00:41:36.140 --> 00:41:38.350 align:start position:0%
operations things like that thread yield
all<00:41:36.650><c> of</c><00:41:36.830><c> those</c><00:41:36.950><c> system</c><00:41:37.490><c> calls</c><00:41:37.700><c> so</c><00:41:37.970><c> if</c><00:41:38.210><c> you</c>

00:41:38.350 --> 00:41:38.360 align:start position:0%
all of those system calls so if you
 

00:41:38.360 --> 00:41:40.240 align:start position:0%
all of those system calls so if you
don't<00:41:38.540><c> need</c><00:41:38.660><c> to</c><00:41:38.720><c> do</c><00:41:38.900><c> things</c><00:41:39.110><c> like</c><00:41:39.290><c> that</c><00:41:39.530><c> avoid</c>

00:41:40.240 --> 00:41:40.250 align:start position:0%
don't need to do things like that avoid
 

00:41:40.250 --> 00:41:43.150 align:start position:0%
don't need to do things like that avoid
them<00:41:41.410><c> so</c><00:41:42.410><c> there's</c><00:41:42.530><c> a</c><00:41:42.590><c> quick</c><00:41:42.740><c> graph</c><00:41:42.980><c> which</c>

00:41:43.150 --> 00:41:43.160 align:start position:0%
them so there's a quick graph which
 

00:41:43.160 --> 00:41:46.360 align:start position:0%
them so there's a quick graph which
you've<00:41:43.340><c> seen</c><00:41:43.370><c> before</c><00:41:44.770><c> this</c><00:41:45.770><c> is</c><00:41:45.920><c> the</c><00:41:46.070><c> peak</c>

00:41:46.360 --> 00:41:46.370 align:start position:0%
you've seen before this is the peak
 

00:41:46.370 --> 00:41:47.920 align:start position:0%
you've seen before this is the peak
allocation<00:41:46.970><c> performance</c><00:41:47.480><c> from</c><00:41:47.630><c> various</c>

00:41:47.920 --> 00:41:47.930 align:start position:0%
allocation performance from various
 

00:41:47.930 --> 00:41:48.970 align:start position:0%
allocation performance from various
different<00:41:48.230><c> technologies</c>

00:41:48.970 --> 00:41:48.980 align:start position:0%
different technologies
 

00:41:48.980 --> 00:41:50.440 align:start position:0%
different technologies
I<00:41:49.010><c> think</c><00:41:49.340><c> Blaine</c><00:41:49.580><c> showed</c><00:41:49.820><c> it</c><00:41:49.970><c> and</c><00:41:50.060><c> his</c><00:41:50.210><c> talk</c>

00:41:50.440 --> 00:41:50.450 align:start position:0%
I think Blaine showed it and his talk
 

00:41:50.450 --> 00:41:53.080 align:start position:0%
I think Blaine showed it and his talk
and<00:41:50.690><c> you</c><00:41:51.500><c> can</c><00:41:51.620><c> see</c><00:41:51.800><c> that</c><00:41:51.980><c> and</c><00:41:52.400><c> this</c><00:41:52.610><c> includes</c>

00:41:53.080 --> 00:41:53.090 align:start position:0%
and you can see that and this includes
 

00:41:53.090 --> 00:41:55.450 align:start position:0%
and you can see that and this includes
the<00:41:53.720><c> garbage</c><00:41:54.230><c> collection</c><00:41:54.680><c> side</c><00:41:54.890><c> of</c><00:41:55.040><c> things</c><00:41:55.280><c> so</c>

00:41:55.450 --> 00:41:55.460 align:start position:0%
the garbage collection side of things so
 

00:41:55.460 --> 00:41:57.400 align:start position:0%
the garbage collection side of things so
it's<00:41:55.610><c> not</c><00:41:55.670><c> just</c><00:41:55.760><c> allocation</c><00:41:56.660><c> and</c><00:41:56.840><c> you</c><00:41:57.230><c> see</c>

00:41:57.400 --> 00:41:57.410 align:start position:0%
it's not just allocation and you see
 

00:41:57.410 --> 00:41:59.140 align:start position:0%
it's not just allocation and you see
that<00:41:57.560><c> compiled</c><00:41:57.920><c> Java</c><00:41:58.280><c> which</c><00:41:58.520><c> is</c><00:41:58.640><c> the</c><00:41:58.760><c> tall</c><00:41:58.940><c> one</c>

00:41:59.140 --> 00:41:59.150 align:start position:0%
that compiled Java which is the tall one
 

00:41:59.150 --> 00:42:01.450 align:start position:0%
that compiled Java which is the tall one
is<00:41:59.660><c> just</c><00:41:59.960><c> way</c><00:42:00.470><c> faster</c><00:42:01.010><c> than</c><00:42:01.040><c> any</c><00:42:01.250><c> other</c>

00:42:01.450 --> 00:42:01.460 align:start position:0%
is just way faster than any other
 

00:42:01.460 --> 00:42:06.400 align:start position:0%
is just way faster than any other
technology<00:42:03.820><c> now</c><00:42:04.820><c> so</c><00:42:05.690><c> here's</c><00:42:05.840><c> an</c><00:42:05.960><c> example</c><00:42:06.200><c> that</c>

00:42:06.400 --> 00:42:06.410 align:start position:0%
technology now so here's an example that
 

00:42:06.410 --> 00:42:08.050 align:start position:0%
technology now so here's an example that
I<00:42:06.530><c> pulled</c><00:42:06.800><c> from</c><00:42:06.950><c> a</c><00:42:07.070><c> performance</c><00:42:07.610><c> book</c>

00:42:08.050 --> 00:42:08.060 align:start position:0%
I pulled from a performance book
 

00:42:08.060 --> 00:42:11.890 align:start position:0%
I pulled from a performance book
published<00:42:08.990><c> a</c><00:42:09.380><c> year</c><00:42:09.620><c> or</c><00:42:09.890><c> two</c><00:42:10.010><c> ago</c><00:42:10.480><c> they</c><00:42:11.480><c> gave</c><00:42:11.720><c> us</c>

00:42:11.890 --> 00:42:11.900 align:start position:0%
published a year or two ago they gave us
 

00:42:11.900 --> 00:42:13.480 align:start position:0%
published a year or two ago they gave us
an<00:42:11.990><c> example</c><00:42:12.320><c> of</c><00:42:12.620><c> one</c><00:42:12.800><c> thing</c><00:42:12.980><c> you</c><00:42:13.070><c> can</c><00:42:13.220><c> do</c><00:42:13.340><c> to</c>

00:42:13.480 --> 00:42:13.490 align:start position:0%
an example of one thing you can do to
 

00:42:13.490 --> 00:42:17.830 align:start position:0%
an example of one thing you can do to
improve<00:42:13.700><c> performance</c><00:42:14.110><c> pooling</c><00:42:15.110><c> objects</c><00:42:16.840><c> so</c>

00:42:17.830 --> 00:42:17.840 align:start position:0%
improve performance pooling objects so
 

00:42:17.840 --> 00:42:20.770 align:start position:0%
improve performance pooling objects so
that<00:42:18.220><c> you</c><00:42:19.220><c> avoid</c><00:42:19.370><c> that</c><00:42:19.730><c> by</c><00:42:20.000><c> recycling</c><00:42:20.630><c> them</c>

00:42:20.770 --> 00:42:20.780 align:start position:0%
that you avoid that by recycling them
 

00:42:20.780 --> 00:42:22.480 align:start position:0%
that you avoid that by recycling them
you<00:42:20.900><c> avoid</c><00:42:21.140><c> the</c><00:42:21.290><c> cost</c><00:42:21.500><c> of</c><00:42:21.620><c> allocating</c><00:42:22.220><c> and</c><00:42:22.370><c> G</c>

00:42:22.480 --> 00:42:22.490 align:start position:0%
you avoid the cost of allocating and G
 

00:42:22.490 --> 00:42:24.580 align:start position:0%
you avoid the cost of allocating and G
seeing<00:42:22.760><c> them</c><00:42:23.140><c> so</c><00:42:24.140><c> I</c><00:42:24.170><c> wrote</c><00:42:24.380><c> a</c><00:42:24.410><c> little</c>

00:42:24.580 --> 00:42:24.590 align:start position:0%
seeing them so I wrote a little
 

00:42:24.590 --> 00:42:28.930 align:start position:0%
seeing them so I wrote a little
benchmark<00:42:25.160><c> and</c><00:42:25.430><c> I</c><00:42:25.690><c> ran</c><00:42:26.690><c> it</c><00:42:26.870><c> on</c><00:42:26.990><c> my</c><00:42:27.550><c> G</c><00:42:28.550><c> for</c><00:42:28.730><c> power</c>

00:42:28.930 --> 00:42:28.940 align:start position:0%
benchmark and I ran it on my G for power
 

00:42:28.940 --> 00:42:32.740 align:start position:0%
benchmark and I ran it on my G for power
book<00:42:30.340><c> and</c><00:42:31.340><c> I</c><00:42:31.430><c> got</c><00:42:31.610><c> this</c><00:42:31.760><c> sort</c><00:42:32.000><c> of</c><00:42:32.090><c> description</c>

00:42:32.740 --> 00:42:32.750 align:start position:0%
book and I got this sort of description
 

00:42:32.750 --> 00:42:34.390 align:start position:0%
book and I got this sort of description
so<00:42:32.990><c> as</c><00:42:33.140><c> I</c><00:42:33.230><c> increase</c><00:42:33.380><c> the</c><00:42:33.560><c> number</c><00:42:33.920><c> of</c><00:42:33.950><c> threads</c>

00:42:34.390 --> 00:42:34.400 align:start position:0%
so as I increase the number of threads
 

00:42:34.400 --> 00:42:37.900 align:start position:0%
so as I increase the number of threads
you<00:42:35.270><c> can</c><00:42:35.300><c> see</c><00:42:35.510><c> for</c><00:42:35.720><c> the</c><00:42:35.840><c> for</c><00:42:36.410><c> the</c><00:42:37.370><c> single</c><00:42:37.730><c> and</c>

00:42:37.900 --> 00:42:37.910 align:start position:0%
you can see for the for the single and
 

00:42:37.910 --> 00:42:40.570 align:start position:0%
you can see for the for the single and
two<00:42:38.240><c> threaded</c><00:42:38.540><c> cases</c><00:42:39.140><c> you</c><00:42:40.130><c> know</c><00:42:40.280><c> the</c><00:42:40.370><c> pooling</c>

00:42:40.570 --> 00:42:40.580 align:start position:0%
two threaded cases you know the pooling
 

00:42:40.580 --> 00:42:42.490 align:start position:0%
two threaded cases you know the pooling
is<00:42:40.820><c> just</c><00:42:41.000><c> slightly</c><00:42:41.210><c> faster</c><00:42:41.780><c> so</c><00:42:42.410><c> I'm</c>

00:42:42.490 --> 00:42:42.500 align:start position:0%
is just slightly faster so I'm
 

00:42:42.500 --> 00:42:45.090 align:start position:0%
is just slightly faster so I'm
allocating<00:42:42.890><c> hundred</c><00:42:43.280><c> thousand</c><00:42:43.670><c> and</c><00:42:43.790><c> then</c>

00:42:45.090 --> 00:42:45.100 align:start position:0%
allocating hundred thousand and then
 

00:42:45.100 --> 00:42:46.960 align:start position:0%
allocating hundred thousand and then
filling<00:42:46.100><c> them</c><00:42:46.280><c> up</c><00:42:46.370><c> and</c><00:42:46.550><c> then</c><00:42:46.670><c> throwing</c><00:42:46.850><c> them</c>

00:42:46.960 --> 00:42:46.970 align:start position:0%
filling them up and then throwing them
 

00:42:46.970 --> 00:42:50.440 align:start position:0%
filling them up and then throwing them
away<00:42:47.060><c> etcetera</c><00:42:47.770><c> but</c><00:42:48.770><c> when</c><00:42:48.890><c> you</c><00:42:48.980><c> get</c><00:42:49.100><c> too</c><00:42:49.450><c> large</c>

00:42:50.440 --> 00:42:50.450 align:start position:0%
away etcetera but when you get too large
 

00:42:50.450 --> 00:42:52.030 align:start position:0%
away etcetera but when you get too large
a<00:42:50.660><c> number</c><00:42:50.930><c> of</c><00:42:51.050><c> threads</c><00:42:51.320><c> you</c><00:42:51.500><c> can</c><00:42:51.620><c> see</c><00:42:51.770><c> that</c><00:42:51.920><c> the</c>

00:42:52.030 --> 00:42:52.040 align:start position:0%
a number of threads you can see that the
 

00:42:52.040 --> 00:42:55.660 align:start position:0%
a number of threads you can see that the
time<00:42:52.700><c> taken</c><00:42:53.120><c> to</c><00:42:53.150><c> actually</c><00:42:54.520><c> recycle</c><00:42:55.520><c> these</c>

00:42:55.660 --> 00:42:55.670 align:start position:0%
time taken to actually recycle these
 

00:42:55.670 --> 00:42:58.240 align:start position:0%
time taken to actually recycle these
vectors<00:42:56.090><c> is</c><00:42:56.270><c> actually</c><00:42:56.780><c> longer</c><00:42:57.230><c> than</c><00:42:57.440><c> it</c><00:42:58.100><c> took</c>

00:42:58.240 --> 00:42:58.250 align:start position:0%
vectors is actually longer than it took
 

00:42:58.250 --> 00:43:02.670 align:start position:0%
vectors is actually longer than it took
to<00:42:58.310><c> create</c><00:42:58.850><c> them</c><00:42:59.000><c> in</c><00:42:59.030><c> GC</c><00:42:59.420><c> them</c><00:43:00.880><c> now</c><00:43:01.880><c> in</c><00:43:02.210><c> the</c>

00:43:02.670 --> 00:43:02.680 align:start position:0%
to create them in GC them now in the
 

00:43:02.680 --> 00:43:05.530 align:start position:0%
to create them in GC them now in the
jewel<00:43:03.680><c> processor</c><00:43:04.190><c> case</c><00:43:04.400><c> it</c><00:43:04.730><c> actually</c><00:43:05.180><c> is</c><00:43:05.270><c> the</c>

00:43:05.530 --> 00:43:05.540 align:start position:0%
jewel processor case it actually is the
 

00:43:05.540 --> 00:43:07.240 align:start position:0%
jewel processor case it actually is the
moment<00:43:05.930><c> you</c><00:43:06.110><c> go</c><00:43:06.290><c> to</c><00:43:06.350><c> anything</c><00:43:06.860><c> other</c><00:43:07.100><c> than</c>

00:43:07.240 --> 00:43:07.250 align:start position:0%
moment you go to anything other than
 

00:43:07.250 --> 00:43:11.950 align:start position:0%
moment you go to anything other than
single<00:43:08.180><c> threaded</c><00:43:08.480><c> the</c><00:43:09.440><c> the</c><00:43:10.010><c> simple</c><00:43:10.960><c> allocate</c>

00:43:11.950 --> 00:43:11.960 align:start position:0%
single threaded the the simple allocate
 

00:43:11.960 --> 00:43:14.130 align:start position:0%
single threaded the the simple allocate
and<00:43:12.140><c> throw</c><00:43:12.380><c> away</c><00:43:12.470><c> mechanism</c><00:43:13.190><c> is</c><00:43:13.310><c> faster</c><00:43:13.730><c> and</c>

00:43:14.130 --> 00:43:14.140 align:start position:0%
and throw away mechanism is faster and
 

00:43:14.140 --> 00:43:16.270 align:start position:0%
and throw away mechanism is faster and
the<00:43:15.140><c> point</c><00:43:15.380><c> being</c><00:43:15.590><c> is</c><00:43:15.740><c> that</c><00:43:15.800><c> you</c><00:43:15.950><c> don't</c><00:43:16.190><c> have</c>

00:43:16.270 --> 00:43:16.280 align:start position:0%
the point being is that you don't have
 

00:43:16.280 --> 00:43:18.250 align:start position:0%
the point being is that you don't have
to<00:43:16.430><c> incorporate</c><00:43:16.730><c> any</c><00:43:17.150><c> complicated</c><00:43:17.750><c> pooling</c>

00:43:18.250 --> 00:43:18.260 align:start position:0%
to incorporate any complicated pooling
 

00:43:18.260 --> 00:43:20.260 align:start position:0%
to incorporate any complicated pooling
code<00:43:18.470><c> if</c><00:43:18.680><c> you</c><00:43:18.770><c> just</c><00:43:18.950><c> do</c><00:43:19.460><c> the</c><00:43:19.580><c> brain-dead</c><00:43:19.970><c> thing</c>

00:43:20.260 --> 00:43:20.270 align:start position:0%
code if you just do the brain-dead thing
 

00:43:20.270 --> 00:43:20.470 align:start position:0%
code if you just do the brain-dead thing
in

00:43:20.470 --> 00:43:20.480 align:start position:0%
in
 

00:43:20.480 --> 00:43:23.650 align:start position:0%
in
just<00:43:20.630><c> a</c><00:43:20.720><c> lie</c><00:43:20.780><c> came</c><00:43:20.990><c> throw</c><00:43:21.230><c> it</c><00:43:21.320><c> away</c><00:43:21.410><c> so</c><00:43:22.510><c> this</c><00:43:23.510><c> is</c>

00:43:23.650 --> 00:43:23.660 align:start position:0%
just a lie came throw it away so this is
 

00:43:23.660 --> 00:43:25.690 align:start position:0%
just a lie came throw it away so this is
this<00:43:24.109><c> is</c><00:43:24.260><c> one</c><00:43:24.440><c> example</c><00:43:24.560><c> where</c><00:43:24.950><c> the</c><00:43:25.190><c> technology</c>

00:43:25.690 --> 00:43:25.700 align:start position:0%
this is one example where the technology
 

00:43:25.700 --> 00:43:28.720 align:start position:0%
this is one example where the technology
has<00:43:25.820><c> just</c><00:43:26.000><c> moved</c><00:43:26.240><c> on</c><00:43:26.540><c> and</c><00:43:27.010><c> that</c><00:43:28.010><c> little</c><00:43:28.490><c> truth</c>

00:43:28.720 --> 00:43:28.730 align:start position:0%
has just moved on and that little truth
 

00:43:28.730 --> 00:43:31.120 align:start position:0%
has just moved on and that little truth
about<00:43:29.030><c> pooling</c><00:43:29.840><c> things</c><00:43:30.260><c> is</c><00:43:30.500><c> it's</c><00:43:30.740><c> not</c><00:43:30.859><c> quite</c>

00:43:31.120 --> 00:43:31.130 align:start position:0%
about pooling things is it's not quite
 

00:43:31.130 --> 00:43:36.130 align:start position:0%
about pooling things is it's not quite
so<00:43:31.160><c> true</c><00:43:31.990><c> now</c><00:43:33.250><c> on</c><00:43:34.250><c> the</c><00:43:34.670><c> other</c><00:43:34.790><c> hand</c><00:43:35.000><c> if</c><00:43:35.960><c> you</c>

00:43:36.130 --> 00:43:36.140 align:start position:0%
so true now on the other hand if you
 

00:43:36.140 --> 00:43:37.810 align:start position:0%
so true now on the other hand if you
have<00:43:36.350><c> an</c><00:43:36.530><c> object</c><00:43:36.950><c> and</c><00:43:37.160><c> in</c><00:43:37.520><c> this</c><00:43:37.609><c> particular</c>

00:43:37.810 --> 00:43:37.820 align:start position:0%
have an object and in this particular
 

00:43:37.820 --> 00:43:40.000 align:start position:0%
have an object and in this particular
example<00:43:38.600><c> I'm</c><00:43:38.690><c> talking</c><00:43:38.960><c> about</c><00:43:39.020><c> a</c><00:43:39.170><c> java</c><00:43:39.680><c> thread</c>

00:43:40.000 --> 00:43:40.010 align:start position:0%
example I'm talking about a java thread
 

00:43:40.010 --> 00:43:43.030 align:start position:0%
example I'm talking about a java thread
that<00:43:40.940><c> is</c><00:43:41.060><c> extremely</c><00:43:41.540><c> expensive</c><00:43:41.810><c> to</c><00:43:42.230><c> create</c>

00:43:43.030 --> 00:43:43.040 align:start position:0%
that is extremely expensive to create
 

00:43:43.040 --> 00:43:45.640 align:start position:0%
that is extremely expensive to create
and<00:43:43.609><c> initialize</c><00:43:43.900><c> that</c><00:43:44.900><c> the</c><00:43:45.109><c> expense</c><00:43:45.500><c> of</c>

00:43:45.640 --> 00:43:45.650 align:start position:0%
and initialize that the expense of
 

00:43:45.650 --> 00:43:47.260 align:start position:0%
and initialize that the expense of
creating<00:43:45.770><c> a</c><00:43:46.100><c> thread</c><00:43:46.340><c> involves</c><00:43:46.910><c> you</c><00:43:47.119><c> know</c><00:43:47.210><c> a</c>

00:43:47.260 --> 00:43:47.270 align:start position:0%
creating a thread involves you know a
 

00:43:47.270 --> 00:43:48.849 align:start position:0%
creating a thread involves you know a
couple<00:43:47.600><c> of</c><00:43:47.660><c> kernel</c><00:43:48.020><c> trips</c><00:43:48.320><c> to</c><00:43:48.470><c> create</c><00:43:48.770><c> the</c>

00:43:48.849 --> 00:43:48.859 align:start position:0%
couple of kernel trips to create the
 

00:43:48.859 --> 00:43:52.690 align:start position:0%
couple of kernel trips to create the
instant<00:43:49.220><c> internal</c><00:43:49.580><c> data</c><00:43:49.760><c> structures</c><00:43:51.700><c> they</c>

00:43:52.690 --> 00:43:52.700 align:start position:0%
instant internal data structures they
 

00:43:52.700 --> 00:43:56.170 align:start position:0%
instant internal data structures they
can<00:43:52.910><c> obviously</c><00:43:53.210><c> be</c><00:43:53.830><c> cheap</c><00:43:54.830><c> Teresa</c><00:43:55.310><c> they</c><00:43:55.880><c> it</c>

00:43:56.170 --> 00:43:56.180 align:start position:0%
can obviously be cheap Teresa they it
 

00:43:56.180 --> 00:43:57.880 align:start position:0%
can obviously be cheap Teresa they it
can<00:43:56.420><c> obviously</c><00:43:56.630><c> be</c><00:43:56.810><c> beneficial</c><00:43:57.410><c> to</c><00:43:57.560><c> recycle</c>

00:43:57.880 --> 00:43:57.890 align:start position:0%
can obviously be beneficial to recycle
 

00:43:57.890 --> 00:44:02.890 align:start position:0%
can obviously be beneficial to recycle
those<00:43:58.480><c> the</c><00:44:01.090><c> the</c><00:44:02.090><c> corollary</c><00:44:02.510><c> is</c><00:44:02.869><c> that</c>

00:44:02.890 --> 00:44:02.900 align:start position:0%
those the the corollary is that
 

00:44:02.900 --> 00:44:05.320 align:start position:0%
those the the corollary is that
sometimes<00:44:03.790><c> especially</c><00:44:04.790><c> with</c><00:44:04.970><c> something</c><00:44:05.210><c> like</c>

00:44:05.320 --> 00:44:05.330 align:start position:0%
sometimes especially with something like
 

00:44:05.330 --> 00:44:06.970 align:start position:0%
sometimes especially with something like
a<00:44:05.450><c> thread</c><00:44:05.840><c> which</c><00:44:06.109><c> involves</c><00:44:06.500><c> a</c><00:44:06.560><c> kernel</c><00:44:06.890><c> data</c>

00:44:06.970 --> 00:44:06.980 align:start position:0%
a thread which involves a kernel data
 

00:44:06.980 --> 00:44:09.220 align:start position:0%
a thread which involves a kernel data
structure<00:44:07.580><c> it</c><00:44:08.330><c> can</c><00:44:08.510><c> actually</c><00:44:08.660><c> be</c><00:44:08.869><c> costly</c><00:44:09.200><c> to</c>

00:44:09.220 --> 00:44:09.230 align:start position:0%
structure it can actually be costly to
 

00:44:09.230 --> 00:44:12.640 align:start position:0%
structure it can actually be costly to
keep<00:44:09.500><c> them</c><00:44:09.680><c> around</c><00:44:09.800><c> as</c><00:44:10.280><c> well</c><00:44:10.780><c> so</c><00:44:11.780><c> you</c><00:44:12.500><c> have</c>

00:44:12.640 --> 00:44:12.650 align:start position:0%
keep them around as well so you have
 

00:44:12.650 --> 00:44:15.220 align:start position:0%
keep them around as well so you have
this<00:44:12.770><c> trade-off</c><00:44:13.400><c> between</c><00:44:13.840><c> some</c><00:44:14.840><c> things</c><00:44:15.050><c> get</c>

00:44:15.220 --> 00:44:15.230 align:start position:0%
this trade-off between some things get
 

00:44:15.230 --> 00:44:16.630 align:start position:0%
this trade-off between some things get
more<00:44:15.410><c> performant</c><00:44:15.890><c> but</c><00:44:16.070><c> on</c><00:44:16.190><c> the</c><00:44:16.310><c> other</c><00:44:16.460><c> hand</c>

00:44:16.630 --> 00:44:16.640 align:start position:0%
more performant but on the other hand
 

00:44:16.640 --> 00:44:18.280 align:start position:0%
more performant but on the other hand
you<00:44:16.820><c> you</c><00:44:17.270><c> have</c><00:44:17.390><c> to</c><00:44:17.480><c> pay</c><00:44:17.630><c> the</c><00:44:17.750><c> penalty</c><00:44:17.900><c> of</c>

00:44:18.280 --> 00:44:18.290 align:start position:0%
you you have to pay the penalty of
 

00:44:18.290 --> 00:44:19.960 align:start position:0%
you you have to pay the penalty of
keeping<00:44:18.590><c> the</c><00:44:18.740><c> kernel</c><00:44:19.190><c> wide</c><00:44:19.340><c> memory</c><00:44:19.730><c> around</c>

00:44:19.960 --> 00:44:19.970 align:start position:0%
keeping the kernel wide memory around
 

00:44:19.970 --> 00:44:23.530 align:start position:0%
keeping the kernel wide memory around
and<00:44:20.810><c> the</c><00:44:21.230><c> extra</c><00:44:21.500><c> stack</c><00:44:21.740><c> etc</c><00:44:22.130><c> so</c><00:44:23.000><c> this</c><00:44:23.210><c> this</c>

00:44:23.530 --> 00:44:23.540 align:start position:0%
and the extra stack etc so this this
 

00:44:23.540 --> 00:44:27.190 align:start position:0%
and the extra stack etc so this this
little<00:44:23.810><c> graph</c><00:44:24.020><c> just</c><00:44:25.060><c> there's</c><00:44:26.060><c> an</c><00:44:26.210><c> example</c><00:44:26.869><c> web</c>

00:44:27.190 --> 00:44:27.200 align:start position:0%
little graph just there's an example web
 

00:44:27.200 --> 00:44:33.070 align:start position:0%
little graph just there's an example web
server<00:44:27.470><c> on</c><00:44:27.619><c> some</c><00:44:28.010><c> site</c><00:44:28.869><c> which</c><00:44:32.080><c> brain-dead</c>

00:44:33.070 --> 00:44:33.080 align:start position:0%
server on some site which brain-dead
 

00:44:33.080 --> 00:44:40.050 align:start position:0%
server on some site which brain-dead
simple<00:44:33.470><c> it</c><00:44:33.590><c> just</c><00:44:36.310><c> sits</c><00:44:37.310><c> in</c><00:44:37.490><c> a</c><00:44:38.680><c> sits</c><00:44:39.680><c> in</c><00:44:39.800><c> a</c>

00:44:40.050 --> 00:44:40.060 align:start position:0%
simple it just sits in a sits in a
 

00:44:40.060 --> 00:44:42.940 align:start position:0%
simple it just sits in a sits in a
socket<00:44:41.060><c> listening</c><00:44:41.660><c> for</c><00:44:41.810><c> a</c><00:44:41.840><c> request</c><00:44:42.140><c> gets</c><00:44:42.859><c> a</c>

00:44:42.940 --> 00:44:42.950 align:start position:0%
socket listening for a request gets a
 

00:44:42.950 --> 00:44:45.490 align:start position:0%
socket listening for a request gets a
request<00:44:43.220><c> it</c><00:44:43.609><c> hands</c><00:44:44.090><c> it</c><00:44:44.210><c> off</c><00:44:44.390><c> to</c><00:44:44.420><c> her</c><00:44:44.660><c> a</c><00:44:44.720><c> thread</c>

00:44:45.490 --> 00:44:45.500 align:start position:0%
request it hands it off to her a thread
 

00:44:45.500 --> 00:44:47.349 align:start position:0%
request it hands it off to her a thread
to<00:44:45.680><c> respond</c><00:44:46.070><c> to</c><00:44:46.190><c> it</c><00:44:46.340><c> and</c><00:44:46.520><c> serves</c><00:44:47.090><c> back</c><00:44:47.330><c> a</c>

00:44:47.349 --> 00:44:47.359 align:start position:0%
to respond to it and serves back a
 

00:44:47.359 --> 00:44:50.800 align:start position:0%
to respond to it and serves back a
response<00:44:47.690><c> so</c><00:44:48.530><c> I</c><00:44:48.890><c> took</c><00:44:49.670><c> that</c><00:44:50.000><c> example</c><00:44:50.390><c> and</c><00:44:50.690><c> I</c>

00:44:50.800 --> 00:44:50.810 align:start position:0%
response so I took that example and I
 

00:44:50.810 --> 00:44:53.530 align:start position:0%
response so I took that example and I
and<00:44:51.140><c> I</c><00:44:51.230><c> produce</c><00:44:51.680><c> three</c><00:44:51.980><c> variants</c><00:44:52.520><c> one</c><00:44:53.420><c> of</c>

00:44:53.530 --> 00:44:53.540 align:start position:0%
and I produce three variants one of
 

00:44:53.540 --> 00:44:55.300 align:start position:0%
and I produce three variants one of
which<00:44:53.720><c> Forks</c><00:44:54.320><c> a</c><00:44:54.410><c> new</c><00:44:54.560><c> thread</c><00:44:54.890><c> for</c><00:44:55.100><c> every</c>

00:44:55.300 --> 00:44:55.310 align:start position:0%
which Forks a new thread for every
 

00:44:55.310 --> 00:44:58.000 align:start position:0%
which Forks a new thread for every
request<00:44:55.640><c> the</c><00:44:56.210><c> second</c><00:44:56.630><c> one</c><00:44:56.810><c> which</c><00:44:57.500><c> uses</c><00:44:57.980><c> a</c>

00:44:58.000 --> 00:44:58.010 align:start position:0%
request the second one which uses a
 

00:44:58.010 --> 00:45:00.910 align:start position:0%
request the second one which uses a
pulled<00:44:58.760><c> collection</c><00:44:59.600><c> of</c><00:44:59.720><c> threads</c><00:45:00.050><c> and</c><00:45:00.320><c> then</c><00:45:00.890><c> a</c>

00:45:00.910 --> 00:45:00.920 align:start position:0%
pulled collection of threads and then a
 

00:45:00.920 --> 00:45:03.490 align:start position:0%
pulled collection of threads and then a
third<00:45:01.220><c> one</c><00:45:01.250><c> where</c><00:45:02.150><c> all</c><00:45:02.480><c> the</c><00:45:02.869><c> work</c><00:45:03.080><c> of</c><00:45:03.260><c> threads</c>

00:45:03.490 --> 00:45:03.500 align:start position:0%
third one where all the work of threads
 

00:45:03.500 --> 00:45:05.380 align:start position:0%
third one where all the work of threads
themselves<00:45:04.040><c> actually</c><00:45:04.220><c> sit</c><00:45:04.580><c> and</c><00:45:04.700><c> accept</c><00:45:05.150><c> and</c>

00:45:05.380 --> 00:45:05.390 align:start position:0%
themselves actually sit and accept and
 

00:45:05.390 --> 00:45:07.840 align:start position:0%
themselves actually sit and accept and
handle<00:45:05.990><c> their</c><00:45:06.140><c> the</c><00:45:06.740><c> requests</c><00:45:07.160><c> directly</c><00:45:07.369><c> so</c>

00:45:07.840 --> 00:45:07.850 align:start position:0%
handle their the requests directly so
 

00:45:07.850 --> 00:45:10.840 align:start position:0%
handle their the requests directly so
there<00:45:07.970><c> is</c><00:45:08.060><c> no</c><00:45:08.180><c> listing</c><00:45:08.510><c> thread</c><00:45:08.810><c> and</c><00:45:09.400><c> the</c><00:45:10.400><c> the</c>

00:45:10.840 --> 00:45:10.850 align:start position:0%
there is no listing thread and the the
 

00:45:10.850 --> 00:45:15.790 align:start position:0%
there is no listing thread and the the
the<00:45:11.630><c> purple</c><00:45:12.140><c> sorry</c><00:45:12.859><c> the</c><00:45:13.040><c> the</c><00:45:13.310><c> line</c><00:45:14.650><c> well</c><00:45:15.650><c> this</c>

00:45:15.790 --> 00:45:15.800 align:start position:0%
the purple sorry the the line well this
 

00:45:15.800 --> 00:45:17.230 align:start position:0%
the purple sorry the the line well this
is<00:45:15.920><c> the</c><00:45:16.010><c> response</c><00:45:16.400><c> time</c><00:45:16.640><c> as</c><00:45:16.880><c> seen</c><00:45:17.060><c> by</c><00:45:17.180><c> the</c>

00:45:17.230 --> 00:45:17.240 align:start position:0%
is the response time as seen by the
 

00:45:17.240 --> 00:45:20.740 align:start position:0%
is the response time as seen by the
client<00:45:17.750><c> so</c><00:45:18.740><c> with</c><00:45:19.070><c> the</c><00:45:19.220><c> version</c><00:45:19.609><c> that</c><00:45:19.820><c> Forks</c><00:45:20.570><c> a</c>

00:45:20.740 --> 00:45:20.750 align:start position:0%
client so with the version that Forks a
 

00:45:20.750 --> 00:45:23.260 align:start position:0%
client so with the version that Forks a
different<00:45:21.140><c> thread</c><00:45:21.470><c> for</c><00:45:21.740><c> every</c><00:45:21.920><c> request</c><00:45:22.270><c> the</c>

00:45:23.260 --> 00:45:23.270 align:start position:0%
different thread for every request the
 

00:45:23.270 --> 00:45:25.390 align:start position:0%
different thread for every request the
it<00:45:23.930><c> just</c><00:45:24.170><c> doesn't</c><00:45:24.500><c> scale</c><00:45:24.770><c> as</c><00:45:25.010><c> the</c><00:45:25.100><c> number</c><00:45:25.310><c> of</c>

00:45:25.390 --> 00:45:25.400 align:start position:0%
it just doesn't scale as the number of
 

00:45:25.400 --> 00:45:27.280 align:start position:0%
it just doesn't scale as the number of
requests<00:45:25.700><c> go</c><00:45:25.910><c> up</c><00:45:26.000><c> you</c><00:45:26.119><c> just</c><00:45:26.270><c> see</c><00:45:26.420><c> a</c><00:45:26.450><c> response</c>

00:45:27.280 --> 00:45:27.290 align:start position:0%
requests go up you just see a response
 

00:45:27.290 --> 00:45:31.090 align:start position:0%
requests go up you just see a response
time<00:45:27.500><c> that</c><00:45:27.710><c> degrades</c><00:45:28.240><c> purport</c><00:45:29.240><c> sort</c><00:45:29.780><c> of</c><00:45:30.100><c> with</c>

00:45:31.090 --> 00:45:31.100 align:start position:0%
time that degrades purport sort of with
 

00:45:31.100 --> 00:45:33.460 align:start position:0%
time that degrades purport sort of with
N<00:45:31.580><c> squared</c><00:45:32.570><c> according</c><00:45:33.020><c> to</c><00:45:33.109><c> the</c><00:45:33.230><c> number</c><00:45:33.440><c> of</c>

00:45:33.460 --> 00:45:33.470 align:start position:0%
N squared according to the number of
 

00:45:33.470 --> 00:45:34.650 align:start position:0%
N squared according to the number of
clients

00:45:34.650 --> 00:45:34.660 align:start position:0%
clients
 

00:45:34.660 --> 00:45:36.850 align:start position:0%
clients
the<00:45:35.660><c> elves</c><00:45:35.870><c> degrade</c><00:45:36.200><c> as</c><00:45:36.380><c> well</c><00:45:36.530><c> but</c><00:45:36.770><c> they</c>

00:45:36.850 --> 00:45:36.860 align:start position:0%
the elves degrade as well but they
 

00:45:36.860 --> 00:45:39.610 align:start position:0%
the elves degrade as well but they
degrade<00:45:37.250><c> much</c><00:45:37.460><c> more</c><00:45:37.670><c> gracefully</c><00:45:38.620><c> now</c>

00:45:39.610 --> 00:45:39.620 align:start position:0%
degrade much more gracefully now
 

00:45:39.620 --> 00:45:45.250 align:start position:0%
degrade much more gracefully now
interestingly<00:45:39.920><c> I</c><00:45:43.180><c> had</c><00:45:44.180><c> kind</c><00:45:44.420><c> of</c><00:45:44.600><c> expected</c>

00:45:45.250 --> 00:45:45.260 align:start position:0%
interestingly I had kind of expected
 

00:45:45.260 --> 00:45:47.530 align:start position:0%
interestingly I had kind of expected
when<00:45:45.380><c> I</c><00:45:45.440><c> did</c><00:45:45.650><c> this</c><00:45:45.740><c> exercise</c><00:45:46.000><c> that</c><00:45:47.000><c> the</c>

00:45:47.530 --> 00:45:47.540 align:start position:0%
when I did this exercise that the
 

00:45:47.540 --> 00:45:49.150 align:start position:0%
when I did this exercise that the
version<00:45:47.900><c> running</c><00:45:48.140><c> multiple</c><00:45:48.590><c> threads</c><00:45:48.890><c> in</c>

00:45:49.150 --> 00:45:49.160 align:start position:0%
version running multiple threads in
 

00:45:49.160 --> 00:45:52.390 align:start position:0%
version running multiple threads in
accept<00:45:49.820><c> would</c><00:45:50.660><c> scale</c><00:45:51.500><c> even</c><00:45:51.770><c> better</c><00:45:52.070><c> than</c><00:45:52.310><c> the</c>

00:45:52.390 --> 00:45:52.400 align:start position:0%
accept would scale even better than the
 

00:45:52.400 --> 00:45:54.940 align:start position:0%
accept would scale even better than the
pooled<00:45:52.610><c> version</c><00:45:53.060><c> and</c><00:45:53.240><c> lo</c><00:45:54.170><c> and</c><00:45:54.320><c> behold</c><00:45:54.410><c> it</c>

00:45:54.940 --> 00:45:54.950 align:start position:0%
pooled version and lo and behold it
 

00:45:54.950 --> 00:45:56.520 align:start position:0%
pooled version and lo and behold it
isn't<00:45:55.340><c> actually</c><00:45:55.700><c> that</c><00:45:55.880><c> true</c>

00:45:56.520 --> 00:45:56.530 align:start position:0%
isn't actually that true
 

00:45:56.530 --> 00:46:00.400 align:start position:0%
isn't actually that true
so<00:45:57.530><c> that's</c><00:45:57.740><c> actually</c><00:45:57.890><c> a</c><00:45:58.870><c> III</c><00:45:59.870><c> what</c><00:46:00.230><c> really</c>

00:46:00.400 --> 00:46:00.410 align:start position:0%
so that's actually a III what really
 

00:46:00.410 --> 00:46:01.540 align:start position:0%
so that's actually a III what really
wanted<00:46:00.680><c> to</c><00:46:00.740><c> include</c><00:46:00.950><c> this</c><00:46:01.190><c> slide</c><00:46:01.400><c> because</c>

00:46:01.540 --> 00:46:01.550 align:start position:0%
wanted to include this slide because
 

00:46:01.550 --> 00:46:03.040 align:start position:0%
wanted to include this slide because
it's<00:46:01.820><c> an</c><00:46:01.880><c> indication</c><00:46:02.210><c> of</c><00:46:02.360><c> why</c><00:46:02.540><c> you</c><00:46:02.600><c> should</c><00:46:02.900><c> be</c>

00:46:03.040 --> 00:46:03.050 align:start position:0%
it's an indication of why you should be
 

00:46:03.050 --> 00:46:08.110 align:start position:0%
it's an indication of why you should be
measuring<00:46:04.990><c> because</c><00:46:05.990><c> I</c><00:46:06.220><c> my</c><00:46:07.220><c> expectations</c><00:46:07.940><c> were</c>

00:46:08.110 --> 00:46:08.120 align:start position:0%
measuring because I my expectations were
 

00:46:08.120 --> 00:46:10.540 align:start position:0%
measuring because I my expectations were
dashed<00:46:08.380><c> now</c><00:46:09.380><c> on</c><00:46:09.500><c> a</c><00:46:09.530><c> dual</c><00:46:09.800><c> processor</c><00:46:10.400><c> it's</c>

00:46:10.540 --> 00:46:10.550 align:start position:0%
dashed now on a dual processor it's
 

00:46:10.550 --> 00:46:14.710 align:start position:0%
dashed now on a dual processor it's
really<00:46:10.820><c> interesting</c><00:46:11.120><c> as</c><00:46:11.390><c> well</c><00:46:11.540><c> because</c><00:46:13.720><c> the</c>

00:46:14.710 --> 00:46:14.720 align:start position:0%
really interesting as well because the
 

00:46:14.720 --> 00:46:17.620 align:start position:0%
really interesting as well because the
the<00:46:15.260><c> per</c><00:46:15.470><c> thread</c><00:46:15.880><c> one</c><00:46:16.880><c> seems</c><00:46:17.210><c> to</c><00:46:17.330><c> be</c><00:46:17.420><c> doing</c>

00:46:17.620 --> 00:46:17.630 align:start position:0%
the per thread one seems to be doing
 

00:46:17.630 --> 00:46:20.620 align:start position:0%
the per thread one seems to be doing
almost<00:46:17.810><c> as</c><00:46:18.140><c> well</c><00:46:18.320><c> as</c><00:46:18.380><c> the</c><00:46:19.390><c> the</c><00:46:20.390><c> pulled</c>

00:46:20.620 --> 00:46:20.630 align:start position:0%
almost as well as the the pulled
 

00:46:20.630 --> 00:46:26.130 align:start position:0%
almost as well as the the pulled
versions<00:46:22.000><c> so</c><00:46:23.000><c> that</c><00:46:24.100><c> was</c><00:46:25.100><c> somewhat</c><00:46:25.670><c> unexpected</c>

00:46:26.130 --> 00:46:26.140 align:start position:0%
versions so that was somewhat unexpected
 

00:46:26.140 --> 00:46:28.120 align:start position:0%
versions so that was somewhat unexpected
but<00:46:27.140><c> then</c><00:46:27.260><c> I</c><00:46:27.350><c> realized</c><00:46:27.740><c> that</c><00:46:27.920><c> what's</c>

00:46:28.120 --> 00:46:28.130 align:start position:0%
but then I realized that what's
 

00:46:28.130 --> 00:46:29.650 align:start position:0%
but then I realized that what's
happening<00:46:28.520><c> in</c><00:46:28.640><c> the</c><00:46:28.730><c> pulled</c><00:46:28.940><c> versions</c><00:46:29.390><c> is</c><00:46:29.540><c> as</c>

00:46:29.650 --> 00:46:29.660 align:start position:0%
happening in the pulled versions is as
 

00:46:29.660 --> 00:46:30.970 align:start position:0%
happening in the pulled versions is as
I'm<00:46:29.810><c> getting</c><00:46:30.050><c> a</c><00:46:30.110><c> lot</c><00:46:30.230><c> more</c><00:46:30.260><c> contention</c>

00:46:30.970 --> 00:46:30.980 align:start position:0%
I'm getting a lot more contention
 

00:46:30.980 --> 00:46:34.870 align:start position:0%
I'm getting a lot more contention
because<00:46:31.460><c> I'm</c><00:46:31.580><c> on</c><00:46:31.730><c> an</c><00:46:31.820><c> MP</c><00:46:32.120><c> system</c><00:46:32.570><c> so</c><00:46:33.490><c> the</c><00:46:34.490><c> the</c>

00:46:34.870 --> 00:46:34.880 align:start position:0%
because I'm on an MP system so the the
 

00:46:34.880 --> 00:46:36.880 align:start position:0%
because I'm on an MP system so the the
version<00:46:35.060><c> where</c><00:46:35.480><c> I'm</c><00:46:35.630><c> running</c><00:46:35.780><c> multiple</c><00:46:36.590><c> work</c>

00:46:36.880 --> 00:46:36.890 align:start position:0%
version where I'm running multiple work
 

00:46:36.890 --> 00:46:38.770 align:start position:0%
version where I'm running multiple work
is<00:46:37.070><c> in</c><00:46:37.220><c> accept</c><00:46:37.640><c> is</c><00:46:37.850><c> actually</c><00:46:38.450><c> the</c><00:46:38.570><c> best</c>

00:46:38.770 --> 00:46:38.780 align:start position:0%
is in accept is actually the best
 

00:46:38.780 --> 00:46:43.000 align:start position:0%
is in accept is actually the best
performing<00:46:39.230><c> one</c><00:46:41.530><c> and</c><00:46:42.530><c> the</c><00:46:42.620><c> reason</c><00:46:42.710><c> for</c><00:46:42.860><c> that</c>

00:46:43.000 --> 00:46:43.010 align:start position:0%
performing one and the reason for that
 

00:46:43.010 --> 00:46:46.210 align:start position:0%
performing one and the reason for that
is<00:46:43.280><c> because</c><00:46:43.310><c> all</c><00:46:43.760><c> of</c><00:46:43.790><c> the</c><00:46:45.010><c> contention</c><00:46:46.010><c> is</c>

00:46:46.210 --> 00:46:46.220 align:start position:0%
is because all of the contention is
 

00:46:46.220 --> 00:46:48.130 align:start position:0%
is because all of the contention is
handled<00:46:46.760><c> right</c><00:46:47.210><c> in</c><00:46:47.330><c> the</c><00:46:47.420><c> kernel</c><00:46:47.780><c> writer</c><00:46:47.960><c> the</c>

00:46:48.130 --> 00:46:48.140 align:start position:0%
handled right in the kernel writer the
 

00:46:48.140 --> 00:46:51.580 align:start position:0%
handled right in the kernel writer the
accept<00:46:48.500><c> call</c><00:46:48.770><c> rather</c><00:46:49.520><c> than</c><00:46:50.590><c> everything</c>

00:46:51.580 --> 00:46:51.590 align:start position:0%
accept call rather than everything
 

00:46:51.590 --> 00:46:57.270 align:start position:0%
accept call rather than everything
coming<00:46:51.980><c> out</c><00:46:52.100><c> and</c><00:46:52.220><c> fighting</c><00:46:52.550><c> over</c><00:46:53.360><c> the</c><00:46:53.650><c> socket</c>

00:46:57.270 --> 00:46:57.280 align:start position:0%
 
 

00:46:57.280 --> 00:47:02.170 align:start position:0%
 
so<00:46:58.300><c> our</c><00:46:59.300><c> conclusion</c><00:46:59.870><c> is</c><00:46:59.960><c> very</c><00:47:00.170><c> simple</c><00:47:01.180><c> your</c>

00:47:02.170 --> 00:47:02.180 align:start position:0%
so our conclusion is very simple your
 

00:47:02.180 --> 00:47:04.030 align:start position:0%
so our conclusion is very simple your
application<00:47:02.810><c> design</c><00:47:03.110><c> is</c><00:47:03.380><c> paramount</c><00:47:03.830><c> that's</c>

00:47:04.030 --> 00:47:04.040 align:start position:0%
application design is paramount that's
 

00:47:04.040 --> 00:47:05.650 align:start position:0%
application design is paramount that's
the<00:47:04.130><c> most</c><00:47:04.310><c> important</c><00:47:04.820><c> part</c><00:47:04.970><c> of</c><00:47:05.510><c> the</c>

00:47:05.650 --> 00:47:05.660 align:start position:0%
the most important part of the
 

00:47:05.660 --> 00:47:09.760 align:start position:0%
the most important part of the
performance<00:47:06.110><c> of</c><00:47:06.260><c> your</c><00:47:06.410><c> app</c><00:47:08.350><c> there's</c><00:47:09.350><c> a</c><00:47:09.440><c> lot</c><00:47:09.620><c> of</c>

00:47:09.760 --> 00:47:09.770 align:start position:0%
performance of your app there's a lot of
 

00:47:09.770 --> 00:47:12.640 align:start position:0%
performance of your app there's a lot of
new<00:47:09.950><c> stuff</c><00:47:10.280><c> in</c><00:47:10.580><c> recent</c><00:47:11.240><c> VMs</c><00:47:11.780><c> and</c><00:47:11.960><c> in</c><00:47:12.110><c> hotspot</c>

00:47:12.640 --> 00:47:12.650 align:start position:0%
new stuff in recent VMs and in hotspot
 

00:47:12.650 --> 00:47:15.550 align:start position:0%
new stuff in recent VMs and in hotspot
and<00:47:12.860><c> on</c><00:47:12.980><c> Mac</c><00:47:13.220><c> OS</c><00:47:13.430><c> 10</c><00:47:13.460><c> that</c><00:47:14.300><c> have</c><00:47:14.450><c> improved</c><00:47:15.380><c> some</c>

00:47:15.550 --> 00:47:15.560 align:start position:0%
and on Mac OS 10 that have improved some
 

00:47:15.560 --> 00:47:19.060 align:start position:0%
and on Mac OS 10 that have improved some
of<00:47:15.680><c> those</c><00:47:15.740><c> bottlenecks</c><00:47:16.840><c> if</c><00:47:17.840><c> you</c><00:47:18.710><c> follow</c><00:47:18.980><c> our</c>

00:47:19.060 --> 00:47:19.070 align:start position:0%
of those bottlenecks if you follow our
 

00:47:19.070 --> 00:47:21.910 align:start position:0%
of those bottlenecks if you follow our
advice<00:47:19.550><c> you'll</c><00:47:20.300><c> get</c><00:47:20.570><c> better</c><00:47:21.140><c> compiled</c><00:47:21.650><c> code</c>

00:47:21.910 --> 00:47:21.920 align:start position:0%
advice you'll get better compiled code
 

00:47:21.920 --> 00:47:24.720 align:start position:0%
advice you'll get better compiled code
and<00:47:22.310><c> so</c><00:47:23.090><c> your</c><00:47:23.210><c> app</c><00:47:23.330><c> will</c><00:47:23.510><c> run</c><00:47:23.630><c> faster</c><00:47:23.810><c> and</c>

00:47:24.720 --> 00:47:24.730 align:start position:0%
and so your app will run faster and
 

00:47:24.730 --> 00:47:27.010 align:start position:0%
and so your app will run faster and
where<00:47:25.730><c> you</c><00:47:25.820><c> are</c><00:47:26.000><c> seeing</c><00:47:26.210><c> bottlenecks</c><00:47:26.750><c> just</c>

00:47:27.010 --> 00:47:27.020 align:start position:0%
where you are seeing bottlenecks just
 

00:47:27.020 --> 00:47:28.300 align:start position:0%
where you are seeing bottlenecks just
keep<00:47:27.170><c> measuring</c><00:47:27.410><c> and</c><00:47:27.740><c> improving</c><00:47:27.800><c> those</c>

00:47:28.300 --> 00:47:28.310 align:start position:0%
keep measuring and improving those
 

00:47:28.310 --> 00:47:34.180 align:start position:0%
keep measuring and improving those
things<00:47:28.610><c> and</c><00:47:28.850><c> you'll</c><00:47:29.210><c> see</c><00:47:29.420><c> results</c><00:47:33.100><c> so</c><00:47:34.100><c> what</c>

00:47:34.180 --> 00:47:34.190 align:start position:0%
things and you'll see results so what
 

00:47:34.190 --> 00:47:35.380 align:start position:0%
things and you'll see results so what
we're<00:47:34.280><c> going</c><00:47:34.370><c> to</c><00:47:34.430><c> do</c><00:47:34.550><c> now</c><00:47:34.730><c> Scott's</c><00:47:35.090><c> going</c><00:47:35.330><c> to</c>

00:47:35.380 --> 00:47:35.390 align:start position:0%
we're going to do now Scott's going to
 

00:47:35.390 --> 00:47:37.900 align:start position:0%
we're going to do now Scott's going to
come<00:47:35.540><c> up</c><00:47:35.690><c> and</c><00:47:36.130><c> give</c><00:47:37.130><c> a</c><00:47:37.160><c> demonstration</c><00:47:37.700><c> of</c>

00:47:37.900 --> 00:47:37.910 align:start position:0%
come up and give a demonstration of
 

00:47:37.910 --> 00:47:41.620 align:start position:0%
come up and give a demonstration of
optimize<00:47:38.330><c> it</c><00:47:39.400><c> so</c><00:47:40.400><c> I'm</c><00:47:41.300><c> going</c><00:47:41.450><c> to</c><00:47:41.510><c> show</c><00:47:41.600><c> you</c>

00:47:41.620 --> 00:47:41.630 align:start position:0%
optimize it so I'm going to show you
 

00:47:41.630 --> 00:47:44.110 align:start position:0%
optimize it so I'm going to show you
optimize<00:47:42.080><c> it</c><00:47:42.290><c> I</c><00:47:42.470><c> showed</c><00:47:42.920><c> the</c><00:47:43.340><c> memory</c><00:47:43.790><c> portion</c>

00:47:44.110 --> 00:47:44.120 align:start position:0%
optimize it I showed the memory portion
 

00:47:44.120 --> 00:47:45.880 align:start position:0%
optimize it I showed the memory portion
of<00:47:44.180><c> optimize</c><00:47:44.600><c> it</c><00:47:44.780><c> at</c><00:47:44.900><c> the</c><00:47:45.050><c> Java</c><00:47:45.440><c> development</c>

00:47:45.880 --> 00:47:45.890 align:start position:0%
of optimize it at the Java development
 

00:47:45.890 --> 00:47:46.820 align:start position:0%
of optimize it at the Java development
tools

00:47:46.820 --> 00:47:46.830 align:start position:0%
tools
 

00:47:46.830 --> 00:47:49.060 align:start position:0%
tools
session<00:47:47.430><c> so</c><00:47:47.520><c> I'm</c><00:47:47.640><c> gonna</c><00:47:47.760><c> concentrate</c><00:47:48.180><c> on</c><00:47:48.570><c> the</c>

00:47:49.060 --> 00:47:49.070 align:start position:0%
session so I'm gonna concentrate on the
 

00:47:49.070 --> 00:47:52.430 align:start position:0%
session so I'm gonna concentrate on the
the<00:47:50.070><c> profiling</c><00:47:50.490><c> portion</c><00:47:51.330><c> it's</c><00:47:52.170><c> a</c><00:47:52.260><c> tool</c>

00:47:52.430 --> 00:47:52.440 align:start position:0%
the profiling portion it's a tool
 

00:47:52.440 --> 00:47:54.950 align:start position:0%
the profiling portion it's a tool
written<00:47:52.980><c> by</c><00:47:53.250><c> a</c><00:47:53.640><c> company</c><00:47:53.970><c> called</c><00:47:54.030><c> VM</c><00:47:54.510><c> beer</c><00:47:54.810><c> they</c>

00:47:54.950 --> 00:47:54.960 align:start position:0%
written by a company called VM beer they
 

00:47:54.960 --> 00:47:56.720 align:start position:0%
written by a company called VM beer they
used<00:47:55.110><c> to</c><00:47:55.170><c> be</c><00:47:55.260><c> called</c><00:47:55.470><c> intuitive</c><00:47:56.010><c> it's</c><00:47:56.520><c> a</c><00:47:56.580><c> pure</c>

00:47:56.720 --> 00:47:56.730 align:start position:0%
used to be called intuitive it's a pure
 

00:47:56.730 --> 00:47:59.240 align:start position:0%
used to be called intuitive it's a pure
Java<00:47:56.970><c> tool</c><00:47:57.270><c> uses</c><00:47:57.870><c> just</c><00:47:57.990><c> a</c><00:47:58.140><c> tiny</c><00:47:58.470><c> little</c><00:47:58.800><c> bit</c><00:47:59.010><c> of</c>

00:47:59.240 --> 00:47:59.250 align:start position:0%
Java tool uses just a tiny little bit of
 

00:47:59.250 --> 00:48:03.320 align:start position:0%
Java tool uses just a tiny little bit of
native<00:47:59.940><c> code</c><00:48:00.150><c> so</c><00:48:00.450><c> it's</c><00:48:00.690><c> mostly</c><00:48:01.260><c> pure</c><00:48:01.590><c> and</c><00:48:02.400><c> it's</c>

00:48:03.320 --> 00:48:03.330 align:start position:0%
native code so it's mostly pure and it's
 

00:48:03.330 --> 00:48:05.090 align:start position:0%
native code so it's mostly pure and it's
the<00:48:04.020><c> way</c><00:48:04.110><c> it</c><00:48:04.200><c> works</c><00:48:04.380><c> it</c><00:48:04.560><c> just</c><00:48:04.680><c> sort</c><00:48:05.070><c> of</c>

00:48:05.090 --> 00:48:05.100 align:start position:0%
the way it works it just sort of
 

00:48:05.100 --> 00:48:08.270 align:start position:0%
the way it works it just sort of
instantiates<00:48:05.760><c> its</c><00:48:06.060><c> own</c><00:48:06.300><c> hooks</c><00:48:06.780><c> into</c><00:48:07.280><c> between</c>

00:48:08.270 --> 00:48:08.280 align:start position:0%
instantiates its own hooks into between
 

00:48:08.280 --> 00:48:09.950 align:start position:0%
instantiates its own hooks into between
the<00:48:08.400><c> U</c><00:48:08.520><c> and</c><00:48:08.640><c> the</c><00:48:08.700><c> VM</c><00:48:09.000><c> and</c><00:48:09.030><c> then</c><00:48:09.360><c> you</c><00:48:09.630><c> run</c><00:48:09.840><c> your</c>

00:48:09.950 --> 00:48:09.960 align:start position:0%
the U and the VM and then you run your
 

00:48:09.960 --> 00:48:12.080 align:start position:0%
the U and the VM and then you run your
application<00:48:10.440><c> on</c><00:48:10.530><c> top</c><00:48:10.800><c> of</c><00:48:10.980><c> it</c><00:48:11.100><c> and</c><00:48:11.280><c> then</c><00:48:11.910><c> you're</c>

00:48:12.080 --> 00:48:12.090 align:start position:0%
application on top of it and then you're
 

00:48:12.090 --> 00:48:13.550 align:start position:0%
application on top of it and then you're
able<00:48:12.180><c> to</c><00:48:12.330><c> just</c><00:48:12.540><c> look</c><00:48:12.780><c> at</c><00:48:12.900><c> all</c><00:48:12.990><c> the</c><00:48:13.140><c> same</c><00:48:13.350><c> kind</c>

00:48:13.550 --> 00:48:13.560 align:start position:0%
able to just look at all the same kind
 

00:48:13.560 --> 00:48:15.080 align:start position:0%
able to just look at all the same kind
of<00:48:13.620><c> profiling</c><00:48:13.980><c> stuff</c><00:48:14.280><c> that</c><00:48:14.430><c> you</c><00:48:14.490><c> see</c><00:48:14.700><c> and</c><00:48:14.940><c> like</c>

00:48:15.080 --> 00:48:15.090 align:start position:0%
of profiling stuff that you see and like
 

00:48:15.090 --> 00:48:17.660 align:start position:0%
of profiling stuff that you see and like
X<00:48:15.270><c> prof</c><00:48:15.540><c> and</c><00:48:15.900><c> and</c><00:48:16.080><c> memory</c><00:48:16.890><c> profiling</c><00:48:17.460><c> and</c><00:48:17.610><c> all</c>

00:48:17.660 --> 00:48:17.670 align:start position:0%
X prof and and memory profiling and all
 

00:48:17.670 --> 00:48:20.240 align:start position:0%
X prof and and memory profiling and all
that<00:48:17.790><c> stuff</c><00:48:17.970><c> it's</c><00:48:18.960><c> really</c><00:48:19.050><c> cool</c><00:48:19.470><c> we</c><00:48:19.710><c> use</c><00:48:19.890><c> it</c><00:48:20.100><c> at</c>

00:48:20.240 --> 00:48:20.250 align:start position:0%
that stuff it's really cool we use it at
 

00:48:20.250 --> 00:48:21.620 align:start position:0%
that stuff it's really cool we use it at
Apple<00:48:20.640><c> we've</c><00:48:20.760><c> been</c><00:48:20.880><c> helping</c><00:48:21.030><c> them</c><00:48:21.210><c> get</c><00:48:21.360><c> it</c><00:48:21.510><c> up</c>

00:48:21.620 --> 00:48:21.630 align:start position:0%
Apple we've been helping them get it up
 

00:48:21.630 --> 00:48:23.000 align:start position:0%
Apple we've been helping them get it up
and<00:48:21.810><c> running</c><00:48:22.020><c> and</c><00:48:22.230><c> we've</c><00:48:22.440><c> been</c><00:48:22.590><c> using</c><00:48:22.770><c> it</c><00:48:22.980><c> to</c>

00:48:23.000 --> 00:48:23.010 align:start position:0%
and running and we've been using it to
 

00:48:23.010 --> 00:48:25.100 align:start position:0%
and running and we've been using it to
actually<00:48:23.400><c> work</c><00:48:23.730><c> on</c><00:48:23.850><c> all</c><00:48:24.000><c> of</c><00:48:24.090><c> our</c><00:48:24.150><c> AWT</c><00:48:24.690><c> work</c><00:48:24.900><c> and</c>

00:48:25.100 --> 00:48:25.110 align:start position:0%
actually work on all of our AWT work and
 

00:48:25.110 --> 00:48:26.720 align:start position:0%
actually work on all of our AWT work and
swing<00:48:25.350><c> work</c><00:48:25.560><c> to</c><00:48:25.920><c> find</c><00:48:26.190><c> all</c><00:48:26.550><c> of</c><00:48:26.580><c> our</c>

00:48:26.720 --> 00:48:26.730 align:start position:0%
swing work to find all of our
 

00:48:26.730 --> 00:48:28.790 align:start position:0%
swing work to find all of our
bottlenecks<00:48:27.270><c> and</c><00:48:27.570><c> I</c><00:48:27.840><c> mean</c><00:48:28.080><c> it</c><00:48:28.170><c> saved</c><00:48:28.380><c> us</c><00:48:28.500><c> tons</c>

00:48:28.790 --> 00:48:28.800 align:start position:0%
bottlenecks and I mean it saved us tons
 

00:48:28.800 --> 00:48:32.360 align:start position:0%
bottlenecks and I mean it saved us tons
of<00:48:29.040><c> time</c><00:48:29.250><c> and</c><00:48:30.050><c> we're</c><00:48:31.050><c> hoping</c><00:48:31.380><c> that</c><00:48:31.440><c> we</c><00:48:31.890><c> can</c>

00:48:32.360 --> 00:48:32.370 align:start position:0%
of time and we're hoping that we can
 

00:48:32.370 --> 00:48:33.650 align:start position:0%
of time and we're hoping that we can
convince<00:48:32.640><c> them</c><00:48:32.820><c> to</c><00:48:32.880><c> get</c><00:48:33.030><c> a</c><00:48:33.090><c> developer</c><00:48:33.480><c> release</c>

00:48:33.650 --> 00:48:33.660 align:start position:0%
convince them to get a developer release
 

00:48:33.660 --> 00:48:36.230 align:start position:0%
convince them to get a developer release
out<00:48:33.930><c> for</c><00:48:34.230><c> you</c><00:48:34.320><c> guys</c><00:48:34.530><c> they've</c><00:48:35.310><c> committed</c><00:48:35.910><c> to</c><00:48:36.210><c> a</c>

00:48:36.230 --> 00:48:36.240 align:start position:0%
out for you guys they've committed to a
 

00:48:36.240 --> 00:48:38.270 align:start position:0%
out for you guys they've committed to a
fourth-quarter<00:48:37.140><c> release</c><00:48:37.500><c> so</c><00:48:37.710><c> that's</c><00:48:37.890><c> that's</c>

00:48:38.270 --> 00:48:38.280 align:start position:0%
fourth-quarter release so that's that's
 

00:48:38.280 --> 00:48:39.500 align:start position:0%
fourth-quarter release so that's that's
good<00:48:38.520><c> that</c><00:48:38.700><c> we</c><00:48:38.790><c> haven't</c><00:48:39.090><c> coming</c><00:48:39.390><c> out</c>

00:48:39.500 --> 00:48:39.510 align:start position:0%
good that we haven't coming out
 

00:48:39.510 --> 00:48:42.860 align:start position:0%
good that we haven't coming out
eventually<00:48:40.130><c> so</c><00:48:41.210><c> let</c><00:48:42.210><c> me</c><00:48:42.270><c> just</c><00:48:42.450><c> go</c><00:48:42.570><c> right</c><00:48:42.750><c> to</c><00:48:42.840><c> my</c>

00:48:42.860 --> 00:48:42.870 align:start position:0%
eventually so let me just go right to my
 

00:48:42.870 --> 00:48:44.750 align:start position:0%
eventually so let me just go right to my
demo<00:48:43.200><c> machine</c><00:48:43.350><c> there's</c><00:48:44.070><c> not</c><00:48:44.280><c> that</c><00:48:44.430><c> much</c><00:48:44.610><c> I</c>

00:48:44.750 --> 00:48:44.760 align:start position:0%
demo machine there's not that much I
 

00:48:44.760 --> 00:48:48.860 align:start position:0%
demo machine there's not that much I
have<00:48:44.850><c> to</c><00:48:44.880><c> say</c><00:48:44.970><c> about</c><00:48:45.180><c> how</c><00:48:47.030><c> about</c><00:48:48.030><c> it</c><00:48:48.210><c> but</c><00:48:48.480><c> this</c>

00:48:48.860 --> 00:48:48.870 align:start position:0%
have to say about how about it but this
 

00:48:48.870 --> 00:48:51.770 align:start position:0%
have to say about how about it but this
is<00:48:49.050><c> my</c><00:48:49.250><c> mic</c><00:48:50.250><c> and</c><00:48:50.280><c> sorting</c><00:48:50.940><c> table</c><00:48:51.330><c> demo</c><00:48:51.480><c> this</c><00:48:51.690><c> is</c>

00:48:51.770 --> 00:48:51.780 align:start position:0%
is my mic and sorting table demo this is
 

00:48:51.780 --> 00:48:54.680 align:start position:0%
is my mic and sorting table demo this is
right<00:48:52.020><c> out</c><00:48:52.050><c> of</c><00:48:52.290><c> swing</c><00:48:53.220><c> set</c><00:48:53.490><c> I</c><00:48:53.850><c> just</c><00:48:54.300><c> put</c><00:48:54.570><c> in</c>

00:48:54.680 --> 00:48:54.690 align:start position:0%
right out of swing set I just put in
 

00:48:54.690 --> 00:48:56.420 align:start position:0%
right out of swing set I just put in
names<00:48:54.900><c> of</c><00:48:55.050><c> people</c><00:48:55.170><c> on</c><00:48:55.350><c> our</c><00:48:55.410><c> team</c><00:48:55.530><c> and</c><00:48:56.010><c> I</c><00:48:56.280><c> added</c>

00:48:56.420 --> 00:48:56.430 align:start position:0%
names of people on our team and I added
 

00:48:56.430 --> 00:48:59.000 align:start position:0%
names of people on our team and I added
some<00:48:56.640><c> sorting</c><00:48:57.000><c> to</c><00:48:57.150><c> it</c><00:48:57.270><c> I</c><00:48:57.420><c> didn't</c><00:48:58.290><c> use</c><00:48:58.680><c> any</c><00:48:58.950><c> of</c>

00:48:59.000 --> 00:48:59.010 align:start position:0%
some sorting to it I didn't use any of
 

00:48:59.010 --> 00:49:00.410 align:start position:0%
some sorting to it I didn't use any of
the<00:48:59.100><c> collection</c><00:48:59.490><c> classes</c><00:48:59.730><c> I</c><00:49:00.000><c> wrote</c><00:49:00.150><c> my</c><00:49:00.270><c> own</c>

00:49:00.410 --> 00:49:00.420 align:start position:0%
the collection classes I wrote my own
 

00:49:00.420 --> 00:49:04.310 align:start position:0%
the collection classes I wrote my own
sort<00:49:01.460><c> so</c><00:49:02.460><c> I</c><00:49:02.520><c> wrote</c><00:49:03.180><c> the</c><00:49:03.390><c> worst</c><00:49:03.570><c> sort</c><00:49:03.780><c> possible</c>

00:49:04.310 --> 00:49:04.320 align:start position:0%
sort so I wrote the worst sort possible
 

00:49:04.320 --> 00:49:08.030 align:start position:0%
sort so I wrote the worst sort possible
I<00:49:04.350><c> do</c><00:49:04.680><c> a</c><00:49:04.800><c> little</c><00:49:05.010><c> bubble</c><00:49:05.340><c> sort</c><00:49:05.490><c> here</c><00:49:05.850><c> and</c><00:49:07.040><c> so</c>

00:49:08.030 --> 00:49:08.040 align:start position:0%
I do a little bubble sort here and so
 

00:49:08.040 --> 00:49:10.340 align:start position:0%
I do a little bubble sort here and so
it's<00:49:08.370><c> kind</c><00:49:08.610><c> of</c><00:49:08.700><c> slow</c><00:49:08.910><c> so</c><00:49:09.240><c> I</c><00:49:09.270><c> click</c><00:49:10.020><c> here</c><00:49:10.170><c> and</c><00:49:10.230><c> I</c>

00:49:10.340 --> 00:49:10.350 align:start position:0%
it's kind of slow so I click here and I
 

00:49:10.350 --> 00:49:12.590 align:start position:0%
it's kind of slow so I click here and I
sort<00:49:10.530><c> my</c><00:49:10.680><c> first</c><00:49:10.920><c> name</c><00:49:11.160><c> and</c><00:49:11.400><c> that's</c><00:49:12.150><c> sorted</c><00:49:12.540><c> and</c>

00:49:12.590 --> 00:49:12.600 align:start position:0%
sort my first name and that's sorted and
 

00:49:12.600 --> 00:49:15.620 align:start position:0%
sort my first name and that's sorted and
that's<00:49:12.750><c> only</c><00:49:13.130><c> 58</c><00:49:14.130><c> items</c><00:49:14.640><c> that</c><00:49:14.790><c> I</c><00:49:14.880><c> sorted</c><00:49:15.330><c> by</c>

00:49:15.620 --> 00:49:15.630 align:start position:0%
that's only 58 items that I sorted by
 

00:49:15.630 --> 00:49:17.450 align:start position:0%
that's only 58 items that I sorted by
first<00:49:15.900><c> name</c><00:49:16.110><c> and</c><00:49:16.260><c> I</c><00:49:16.350><c> sort</c><00:49:16.620><c> by</c><00:49:16.800><c> last</c><00:49:16.950><c> name</c><00:49:17.310><c> and</c>

00:49:17.450 --> 00:49:17.460 align:start position:0%
first name and I sort by last name and
 

00:49:17.460 --> 00:49:18.980 align:start position:0%
first name and I sort by last name and
so<00:49:17.910><c> that's</c><00:49:18.120><c> that's</c><00:49:18.300><c> not</c><00:49:18.480><c> really</c><00:49:18.690><c> good</c><00:49:18.840><c> and</c><00:49:18.960><c> I</c>

00:49:18.980 --> 00:49:18.990 align:start position:0%
so that's that's not really good and I
 

00:49:18.990 --> 00:49:20.930 align:start position:0%
so that's that's not really good and I
actually<00:49:19.110><c> pause</c><00:49:19.530><c> all</c><00:49:19.950><c> of</c><00:49:20.160><c> the</c><00:49:20.280><c> UI</c><00:49:20.430><c> while</c><00:49:20.820><c> I'm</c>

00:49:20.930 --> 00:49:20.940 align:start position:0%
actually pause all of the UI while I'm
 

00:49:20.940 --> 00:49:23.210 align:start position:0%
actually pause all of the UI while I'm
sorting<00:49:21.360><c> so</c><00:49:21.720><c> I</c><00:49:21.960><c> want</c><00:49:22.710><c> to</c><00:49:22.770><c> figure</c><00:49:22.920><c> out</c><00:49:22.980><c> what's</c>

00:49:23.210 --> 00:49:23.220 align:start position:0%
sorting so I want to figure out what's
 

00:49:23.220 --> 00:49:25.640 align:start position:0%
sorting so I want to figure out what's
going<00:49:23.400><c> on</c><00:49:23.610><c> why</c><00:49:23.910><c> is</c><00:49:23.970><c> this</c><00:49:24.300><c> taking</c><00:49:24.990><c> so</c><00:49:25.290><c> long</c><00:49:25.320><c> so</c>

00:49:25.640 --> 00:49:25.650 align:start position:0%
going on why is this taking so long so
 

00:49:25.650 --> 00:49:26.750 align:start position:0%
going on why is this taking so long so
what<00:49:25.770><c> I'm</c><00:49:25.860><c> gonna</c><00:49:25.950><c> do</c><00:49:26.160><c> is</c><00:49:26.250><c> I'm</c><00:49:26.370><c> gonna</c><00:49:26.430><c> go</c><00:49:26.670><c> over</c>

00:49:26.750 --> 00:49:26.760 align:start position:0%
what I'm gonna do is I'm gonna go over
 

00:49:26.760 --> 00:49:28.940 align:start position:0%
what I'm gonna do is I'm gonna go over
to<00:49:26.880><c> optimize</c><00:49:27.390><c> it</c><00:49:27.600><c> which</c><00:49:27.780><c> I've</c><00:49:28.710><c> already</c>

00:49:28.940 --> 00:49:28.950 align:start position:0%
to optimize it which I've already
 

00:49:28.950 --> 00:49:31.130 align:start position:0%
to optimize it which I've already
launched<00:49:29.430><c> and</c><00:49:29.790><c> if</c><00:49:30.030><c> I</c><00:49:30.120><c> want</c><00:49:30.300><c> to</c><00:49:30.360><c> hook</c><00:49:30.450><c> into</c><00:49:30.690><c> this</c>

00:49:31.130 --> 00:49:31.140 align:start position:0%
launched and if I want to hook into this
 

00:49:31.140 --> 00:49:33.710 align:start position:0%
launched and if I want to hook into this
I<00:49:31.170><c> started</c><00:49:31.740><c> this</c><00:49:31.860><c> other</c><00:49:32.070><c> app</c><00:49:32.360><c> using</c><00:49:33.360><c> optimize</c>

00:49:33.710 --> 00:49:33.720 align:start position:0%
I started this other app using optimize
 

00:49:33.720 --> 00:49:35.270 align:start position:0%
I started this other app using optimize
the<00:49:33.840><c> stubs</c><00:49:34.200><c> and</c><00:49:34.530><c> I'm</c><00:49:34.650><c> gonna</c><00:49:34.770><c> do</c><00:49:34.920><c> this</c><00:49:35.040><c> through</c>

00:49:35.270 --> 00:49:35.280 align:start position:0%
the stubs and I'm gonna do this through
 

00:49:35.280 --> 00:49:36.980 align:start position:0%
the stubs and I'm gonna do this through
remote<00:49:35.610><c> debugging</c><00:49:35.970><c> you</c><00:49:36.270><c> can</c><00:49:36.420><c> do</c><00:49:36.540><c> it</c><00:49:36.660><c> you</c><00:49:36.840><c> can</c>

00:49:36.980 --> 00:49:36.990 align:start position:0%
remote debugging you can do it you can
 

00:49:36.990 --> 00:49:38.360 align:start position:0%
remote debugging you can do it you can
launch<00:49:37.140><c> it</c><00:49:37.290><c> all</c><00:49:37.380><c> through</c><00:49:37.530><c> here</c><00:49:37.740><c> but</c><00:49:37.950><c> I</c><00:49:37.980><c> just</c><00:49:38.160><c> I</c>

00:49:38.360 --> 00:49:38.370 align:start position:0%
launch it all through here but I just I
 

00:49:38.370 --> 00:49:39.620 align:start position:0%
launch it all through here but I just I
kind<00:49:38.730><c> of</c><00:49:38.850><c> like</c><00:49:38.940><c> doing</c><00:49:39.090><c> the</c><00:49:39.180><c> remote</c><00:49:39.450><c> thing</c>

00:49:39.620 --> 00:49:39.630 align:start position:0%
kind of like doing the remote thing
 

00:49:39.630 --> 00:49:40.610 align:start position:0%
kind of like doing the remote thing
because<00:49:39.780><c> it</c><00:49:39.870><c> shows</c><00:49:40.050><c> you</c><00:49:40.170><c> can</c><00:49:40.290><c> do</c><00:49:40.410><c> it</c><00:49:40.500><c> on</c><00:49:40.590><c> a</c>

00:49:40.610 --> 00:49:40.620 align:start position:0%
because it shows you can do it on a
 

00:49:40.620 --> 00:49:43.670 align:start position:0%
because it shows you can do it on a
separate<00:49:41.340><c> machine</c><00:49:41.510><c> so</c><00:49:42.510><c> I'm</c><00:49:43.320><c> gonna</c><00:49:43.470><c> go</c><00:49:43.620><c> to</c>

00:49:43.670 --> 00:49:43.680 align:start position:0%
separate machine so I'm gonna go to
 

00:49:43.680 --> 00:49:45.590 align:start position:0%
separate machine so I'm gonna go to
remote<00:49:43.980><c> application</c><00:49:44.610><c> it's</c><00:49:45.030><c> already</c><00:49:45.300><c> been</c><00:49:45.420><c> set</c>

00:49:45.590 --> 00:49:45.600 align:start position:0%
remote application it's already been set
 

00:49:45.600 --> 00:49:47.660 align:start position:0%
remote application it's already been set
up<00:49:45.630><c> on</c><00:49:45.960><c> this</c><00:49:46.200><c> machine</c><00:49:46.530><c> on</c><00:49:46.650><c> this</c><00:49:46.800><c> port</c><00:49:47.070><c> I</c><00:49:47.310><c> have</c>

00:49:47.660 --> 00:49:47.670 align:start position:0%
up on this machine on this port I have
 

00:49:47.670 --> 00:49:49.070 align:start position:0%
up on this machine on this port I have
my<00:49:47.790><c> source</c><00:49:48.000><c> path</c><00:49:48.240><c> set</c><00:49:48.510><c> up</c><00:49:48.660><c> so</c><00:49:48.840><c> I'll</c><00:49:48.960><c> just</c>

00:49:49.070 --> 00:49:49.080 align:start position:0%
my source path set up so I'll just
 

00:49:49.080 --> 00:49:52.010 align:start position:0%
my source path set up so I'll just
attach<00:49:49.380><c> to</c><00:49:49.410><c> that</c><00:49:50.420><c> and</c><00:49:51.420><c> it'll</c><00:49:51.720><c> just</c><00:49:51.840><c> take</c><00:49:51.960><c> a</c>

00:49:52.010 --> 00:49:52.020 align:start position:0%
attach to that and it'll just take a
 

00:49:52.020 --> 00:49:54.290 align:start position:0%
attach to that and it'll just take a
second<00:49:52.410><c> for</c><00:49:52.530><c> it</c><00:49:52.590><c> to</c><00:49:52.650><c> connect</c><00:49:52.980><c> up</c><00:49:53.160><c> it</c><00:49:53.430><c> gets</c><00:49:53.580><c> I</c>

00:49:54.290 --> 00:49:54.300 align:start position:0%
second for it to connect up it gets I
 

00:49:54.300 --> 00:49:56.150 align:start position:0%
second for it to connect up it gets I
have<00:49:54.750><c> this</c><00:49:54.840><c> all</c><00:49:54.990><c> set</c><00:49:55.170><c> up</c><00:49:55.230><c> for</c><00:49:55.410><c> my</c><00:49:55.500><c> demo</c><00:49:55.950><c> this</c>

00:49:56.150 --> 00:49:56.160 align:start position:0%
have this all set up for my demo this
 

00:49:56.160 --> 00:49:59.000 align:start position:0%
have this all set up for my demo this
morning<00:49:56.460><c> so</c><00:49:56.640><c> this</c><00:49:56.760><c> is</c><00:49:56.880><c> the</c><00:49:57.000><c> memory</c><00:49:57.890><c> the</c><00:49:58.890><c> memory</c>

00:49:59.000 --> 00:49:59.010 align:start position:0%
morning so this is the memory the memory
 

00:49:59.010 --> 00:50:00.290 align:start position:0%
morning so this is the memory the memory
profile<00:49:59.550><c> of</c><00:49:59.790><c> every</c>

00:50:00.290 --> 00:50:00.300 align:start position:0%
profile of every
 

00:50:00.300 --> 00:50:01.760 align:start position:0%
profile of every
all<00:50:00.780><c> the</c><00:50:00.960><c> objects</c><00:50:01.230><c> have</c><00:50:01.380><c> been</c><00:50:01.440><c> instantiated</c>

00:50:01.760 --> 00:50:01.770 align:start position:0%
all the objects have been instantiated
 

00:50:01.770 --> 00:50:03.260 align:start position:0%
all the objects have been instantiated
and<00:50:02.220><c> there's</c><00:50:02.340><c> a</c><00:50:02.400><c> lot</c><00:50:02.580><c> of</c><00:50:02.610><c> cool</c><00:50:02.850><c> stuff</c><00:50:03.090><c> in</c><00:50:03.240><c> here</c>

00:50:03.260 --> 00:50:03.270 align:start position:0%
and there's a lot of cool stuff in here
 

00:50:03.270 --> 00:50:06.470 align:start position:0%
and there's a lot of cool stuff in here
but<00:50:04.170><c> I'm</c><00:50:04.920><c> gonna</c><00:50:05.040><c> go</c><00:50:05.190><c> into</c><00:50:05.370><c> the</c><00:50:05.460><c> CPU</c><00:50:05.820><c> profiler</c>

00:50:06.470 --> 00:50:06.480 align:start position:0%
but I'm gonna go into the CPU profiler
 

00:50:06.480 --> 00:50:09.860 align:start position:0%
but I'm gonna go into the CPU profiler
so<00:50:07.380><c> the</c><00:50:07.500><c> CPU</c><00:50:07.650><c> profiler</c><00:50:08.780><c> hasn't</c><00:50:09.780><c> been</c>

00:50:09.860 --> 00:50:09.870 align:start position:0%
so the CPU profiler hasn't been
 

00:50:09.870 --> 00:50:11.420 align:start position:0%
so the CPU profiler hasn't been
profiling<00:50:10.350><c> until</c><00:50:10.590><c> you</c><00:50:10.650><c> tell</c><00:50:10.860><c> it</c><00:50:10.980><c> to</c><00:50:11.100><c> so</c><00:50:11.280><c> that's</c>

00:50:11.420 --> 00:50:11.430 align:start position:0%
profiling until you tell it to so that's
 

00:50:11.430 --> 00:50:12.800 align:start position:0%
profiling until you tell it to so that's
one<00:50:11.580><c> of</c><00:50:11.670><c> the</c><00:50:11.730><c> big</c><00:50:11.880><c> differences</c><00:50:12.090><c> between</c><00:50:12.360><c> this</c>

00:50:12.800 --> 00:50:12.810 align:start position:0%
one of the big differences between this
 

00:50:12.810 --> 00:50:15.170 align:start position:0%
one of the big differences between this
and<00:50:13.140><c> like</c><00:50:13.380><c> X</c><00:50:13.590><c> prof</c><00:50:13.830><c> is</c><00:50:13.860><c> you</c><00:50:14.460><c> get</c><00:50:14.610><c> to</c><00:50:14.760><c> profile</c>

00:50:15.170 --> 00:50:15.180 align:start position:0%
and like X prof is you get to profile
 

00:50:15.180 --> 00:50:17.540 align:start position:0%
and like X prof is you get to profile
just<00:50:15.450><c> a</c><00:50:15.630><c> segment</c><00:50:16.050><c> of</c><00:50:16.230><c> the</c><00:50:16.680><c> application</c><00:50:17.430><c> that</c>

00:50:17.540 --> 00:50:17.550 align:start position:0%
just a segment of the application that
 

00:50:17.550 --> 00:50:19.580 align:start position:0%
just a segment of the application that
you<00:50:17.640><c> want</c><00:50:17.850><c> and</c><00:50:18.150><c> you</c><00:50:18.210><c> can</c><00:50:18.240><c> turn</c><00:50:18.570><c> it</c><00:50:18.690><c> on</c><00:50:18.810><c> do</c><00:50:19.440><c> your</c>

00:50:19.580 --> 00:50:19.590 align:start position:0%
you want and you can turn it on do your
 

00:50:19.590 --> 00:50:21.830 align:start position:0%
you want and you can turn it on do your
work<00:50:19.740><c> turn</c><00:50:20.070><c> it</c><00:50:20.190><c> back</c><00:50:20.310><c> off</c><00:50:20.490><c> so</c><00:50:21.240><c> what</c><00:50:21.630><c> I'm</c><00:50:21.720><c> gonna</c>

00:50:21.830 --> 00:50:21.840 align:start position:0%
work turn it back off so what I'm gonna
 

00:50:21.840 --> 00:50:24.320 align:start position:0%
work turn it back off so what I'm gonna
do<00:50:22.050><c> is</c><00:50:22.260><c> I'm</c><00:50:22.380><c> gonna</c><00:50:22.530><c> press</c><00:50:22.800><c> on</c><00:50:22.950><c> the</c><00:50:23.070><c> button</c><00:50:23.330><c> go</c>

00:50:24.320 --> 00:50:24.330 align:start position:0%
do is I'm gonna press on the button go
 

00:50:24.330 --> 00:50:27.730 align:start position:0%
do is I'm gonna press on the button go
to<00:50:24.360><c> my</c><00:50:24.570><c> application</c><00:50:25.170><c> and</c><00:50:25.400><c> click</c><00:50:26.400><c> sort</c><00:50:27.060><c> and</c>

00:50:27.730 --> 00:50:27.740 align:start position:0%
to my application and click sort and
 

00:50:27.740 --> 00:50:31.000 align:start position:0%
to my application and click sort and
click<00:50:28.740><c> sort</c><00:50:29.040><c> again</c><00:50:29.480><c> let's</c><00:50:30.480><c> do</c><00:50:30.660><c> another</c><00:50:30.780><c> one</c>

00:50:31.000 --> 00:50:31.010 align:start position:0%
click sort again let's do another one
 

00:50:31.010 --> 00:50:35.380 align:start position:0%
click sort again let's do another one
then<00:50:32.010><c> I'll</c><00:50:32.100><c> go</c><00:50:32.220><c> back</c><00:50:32.250><c> here</c><00:50:32.700><c> and</c><00:50:32.850><c> I'll</c><00:50:32.940><c> stop</c><00:50:33.920><c> so</c>

00:50:35.380 --> 00:50:35.390 align:start position:0%
then I'll go back here and I'll stop so
 

00:50:35.390 --> 00:50:37.850 align:start position:0%
then I'll go back here and I'll stop so
here's<00:50:36.390><c> one</c><00:50:36.660><c> of</c><00:50:36.690><c> the</c><00:50:36.810><c> cool</c><00:50:36.930><c> things</c><00:50:36.960><c> here</c><00:50:37.740><c> are</c>

00:50:37.850 --> 00:50:37.860 align:start position:0%
here's one of the cool things here are
 

00:50:37.860 --> 00:50:42.140 align:start position:0%
here's one of the cool things here are
all<00:50:37.950><c> of</c><00:50:37.980><c> our</c><00:50:38.130><c> threads</c><00:50:39.080><c> read</c><00:50:40.080><c> is</c><00:50:40.470><c> idle</c><00:50:41.460><c> Green</c><00:50:41.940><c> is</c>

00:50:42.140 --> 00:50:42.150 align:start position:0%
all of our threads read is idle Green is
 

00:50:42.150 --> 00:50:44.180 align:start position:0%
all of our threads read is idle Green is
active<00:50:42.600><c> so</c><00:50:42.840><c> and</c><00:50:43.530><c> there</c><00:50:43.620><c> are</c><00:50:43.680><c> even</c><00:50:43.860><c> groups</c><00:50:44.040><c> of</c>

00:50:44.180 --> 00:50:44.190 align:start position:0%
active so and there are even groups of
 

00:50:44.190 --> 00:50:45.980 align:start position:0%
active so and there are even groups of
threads<00:50:44.460><c> like</c><00:50:44.670><c> main</c><00:50:44.970><c> system</c><00:50:45.540><c> so</c><00:50:45.660><c> if</c><00:50:45.750><c> I</c><00:50:45.840><c> just</c>

00:50:45.980 --> 00:50:45.990 align:start position:0%
threads like main system so if I just
 

00:50:45.990 --> 00:50:48.470 align:start position:0%
threads like main system so if I just
start<00:50:46.260><c> by</c><00:50:47.130><c> just</c><00:50:47.490><c> staring</c><00:50:47.850><c> generally</c><00:50:48.240><c> at</c><00:50:48.450><c> the</c>

00:50:48.470 --> 00:50:48.480 align:start position:0%
start by just staring generally at the
 

00:50:48.480 --> 00:50:50.510 align:start position:0%
start by just staring generally at the
main<00:50:48.830><c> thread</c><00:50:49.830><c> and</c><00:50:49.860><c> I'm</c><00:50:50.160><c> looking</c><00:50:50.430><c> around</c>

00:50:50.510 --> 00:50:50.520 align:start position:0%
main thread and I'm looking around
 

00:50:50.520 --> 00:50:53.360 align:start position:0%
main thread and I'm looking around
trying<00:50:50.910><c> to</c><00:50:50.940><c> see</c><00:50:51.060><c> what's</c><00:50:51.210><c> going</c><00:50:51.420><c> on</c><00:50:51.540><c> and</c><00:50:51.890><c> let</c><00:50:52.890><c> me</c>

00:50:53.360 --> 00:50:53.370 align:start position:0%
trying to see what's going on and let me
 

00:50:53.370 --> 00:50:55.370 align:start position:0%
trying to see what's going on and let me
flip<00:50:53.610><c> this</c><00:50:53.760><c> around</c><00:50:53.910><c> into</c><00:50:54.630><c> the</c><00:50:55.020><c> normal</c>

00:50:55.370 --> 00:50:55.380 align:start position:0%
flip this around into the normal
 

00:50:55.380 --> 00:50:57.530 align:start position:0%
flip this around into the normal
execution<00:50:55.680><c> path</c><00:50:56.190><c> so</c><00:50:56.550><c> what</c><00:50:57.090><c> we</c><00:50:57.210><c> have</c><00:50:57.330><c> right</c><00:50:57.480><c> now</c>

00:50:57.530 --> 00:50:57.540 align:start position:0%
execution path so what we have right now
 

00:50:57.540 --> 00:50:59.750 align:start position:0%
execution path so what we have right now
is<00:50:57.900><c> 49%</c><00:50:58.770><c> of</c><00:50:58.860><c> this</c><00:50:59.010><c> happen</c><00:50:59.370><c> through</c><00:50:59.520><c> event</c>

00:50:59.750 --> 00:50:59.760 align:start position:0%
is 49% of this happen through event
 

00:50:59.760 --> 00:51:01.550 align:start position:0%
is 49% of this happen through event
dispatch<00:51:00.120><c> which</c><00:51:00.390><c> makes</c><00:51:00.900><c> sense</c><00:51:01.080><c> because</c><00:51:01.260><c> we</c>

00:51:01.550 --> 00:51:01.560 align:start position:0%
dispatch which makes sense because we
 

00:51:01.560 --> 00:51:02.960 align:start position:0%
dispatch which makes sense because we
clicked<00:51:01.800><c> on</c><00:51:01.890><c> buttons</c><00:51:02.220><c> to</c><00:51:02.460><c> do</c><00:51:02.580><c> most</c><00:51:02.790><c> of</c><00:51:02.880><c> our</c>

00:51:02.960 --> 00:51:02.970 align:start position:0%
clicked on buttons to do most of our
 

00:51:02.970 --> 00:51:06.290 align:start position:0%
clicked on buttons to do most of our
work<00:51:03.260><c> and</c><00:51:04.260><c> then</c><00:51:04.640><c> 34%</c><00:51:05.640><c> of</c><00:51:05.730><c> it</c><00:51:05.820><c> was</c><00:51:05.940><c> in</c><00:51:06.060><c> thread</c>

00:51:06.290 --> 00:51:06.300 align:start position:0%
work and then 34% of it was in thread
 

00:51:06.300 --> 00:51:07.160 align:start position:0%
work and then 34% of it was in thread
run<00:51:06.540><c> now</c>

00:51:07.160 --> 00:51:07.170 align:start position:0%
run now
 

00:51:07.170 --> 00:51:09.020 align:start position:0%
run now
I<00:51:07.200><c> know</c><00:51:07.680><c> I</c><00:51:07.770><c> wrote</c><00:51:07.980><c> this</c><00:51:08.130><c> application</c><00:51:08.340><c> and</c><00:51:08.910><c> I</c>

00:51:09.020 --> 00:51:09.030 align:start position:0%
I know I wrote this application and I
 

00:51:09.030 --> 00:51:10.760 align:start position:0%
I know I wrote this application and I
have<00:51:09.390><c> a</c><00:51:09.420><c> separate</c><00:51:09.840><c> thread</c><00:51:10.110><c> that</c><00:51:10.350><c> gets</c><00:51:10.500><c> spawned</c>

00:51:10.760 --> 00:51:10.770 align:start position:0%
have a separate thread that gets spawned
 

00:51:10.770 --> 00:51:12.110 align:start position:0%
have a separate thread that gets spawned
off<00:51:10.950><c> every</c><00:51:11.280><c> time</c><00:51:11.460><c> I</c><00:51:11.490><c> saw</c><00:51:11.730><c> it</c><00:51:11.760><c> I</c><00:51:12.000><c> actually</c>

00:51:12.110 --> 00:51:12.120 align:start position:0%
off every time I saw it I actually
 

00:51:12.120 --> 00:51:14.000 align:start position:0%
off every time I saw it I actually
created<00:51:12.450><c> a</c><00:51:12.510><c> new</c><00:51:12.630><c> thread</c><00:51:12.900><c> I'm</c><00:51:13.050><c> I</c><00:51:13.560><c> wrote</c><00:51:13.920><c> this</c>

00:51:14.000 --> 00:51:14.010 align:start position:0%
created a new thread I'm I wrote this
 

00:51:14.010 --> 00:51:17.030 align:start position:0%
created a new thread I'm I wrote this
really<00:51:14.190><c> badly</c><00:51:14.490><c> so</c><00:51:14.670><c> I</c><00:51:15.660><c> spawned</c><00:51:16.530><c> a</c><00:51:16.620><c> new</c><00:51:16.740><c> thread</c>

00:51:17.030 --> 00:51:17.040 align:start position:0%
really badly so I spawned a new thread
 

00:51:17.040 --> 00:51:19.280 align:start position:0%
really badly so I spawned a new thread
and<00:51:17.310><c> I</c><00:51:17.970><c> run</c><00:51:18.150><c> my</c><00:51:18.270><c> sort</c><00:51:18.510><c> so</c><00:51:18.780><c> if</c><00:51:18.930><c> I</c><00:51:19.050><c> look</c><00:51:19.260><c> through</c>

00:51:19.280 --> 00:51:19.290 align:start position:0%
and I run my sort so if I look through
 

00:51:19.290 --> 00:51:22.610 align:start position:0%
and I run my sort so if I look through
here<00:51:19.770><c> and</c><00:51:19.920><c> I</c><00:51:20.580><c> can</c><00:51:20.760><c> see</c><00:51:20.940><c> that</c><00:51:21.330><c> I</c><00:51:21.780><c> have</c><00:51:22.200><c> my</c><00:51:22.320><c> sort</c>

00:51:22.610 --> 00:51:22.620 align:start position:0%
here and I can see that I have my sort
 

00:51:22.620 --> 00:51:24.080 align:start position:0%
here and I can see that I have my sort
and<00:51:22.920><c> it</c><00:51:22.980><c> ends</c><00:51:23.160><c> up</c><00:51:23.250><c> calling</c><00:51:23.430><c> greater</c><00:51:23.820><c> than</c>

00:51:24.080 --> 00:51:24.090 align:start position:0%
and it ends up calling greater than
 

00:51:24.090 --> 00:51:25.760 align:start position:0%
and it ends up calling greater than
because<00:51:24.420><c> I'm</c><00:51:24.540><c> doing</c><00:51:24.690><c> an</c><00:51:24.960><c> excellent</c><00:51:25.350><c> single</c>

00:51:25.760 --> 00:51:25.770 align:start position:0%
because I'm doing an excellent single
 

00:51:25.770 --> 00:51:29.720 align:start position:0%
because I'm doing an excellent single
directional<00:51:25.980><c> bubble</c><00:51:26.550><c> sort</c><00:51:26.700><c> and</c><00:51:27.500><c> I</c><00:51:28.700><c> have</c><00:51:29.700><c> a</c>

00:51:29.720 --> 00:51:29.730 align:start position:0%
directional bubble sort and I have a
 

00:51:29.730 --> 00:51:32.030 align:start position:0%
directional bubble sort and I have a
greater<00:51:30.000><c> than</c><00:51:30.090><c> and</c><00:51:30.540><c> I</c><00:51:30.960><c> have</c><00:51:31.350><c> some</c><00:51:31.740><c> my</c><00:51:31.860><c> time</c>

00:51:32.030 --> 00:51:32.040 align:start position:0%
greater than and I have some my time
 

00:51:32.040 --> 00:51:33.830 align:start position:0%
greater than and I have some my time
into<00:51:32.220><c> string</c><00:51:32.610><c> but</c><00:51:32.910><c> let's</c><00:51:33.180><c> see</c><00:51:33.270><c> what's</c><00:51:33.420><c> going</c>

00:51:33.830 --> 00:51:33.840 align:start position:0%
into string but let's see what's going
 

00:51:33.840 --> 00:51:35.720 align:start position:0%
into string but let's see what's going
on<00:51:33.990><c> inside</c><00:51:34.230><c> of</c><00:51:34.380><c> greater</c><00:51:34.560><c> than</c><00:51:34.620><c> I've</c><00:51:35.490><c> got</c><00:51:35.700><c> a</c>

00:51:35.720 --> 00:51:35.730 align:start position:0%
on inside of greater than I've got a
 

00:51:35.730 --> 00:51:37.130 align:start position:0%
on inside of greater than I've got a
compare<00:51:36.090><c> inside</c><00:51:36.420><c> a</c><00:51:36.450><c> greater</c><00:51:36.690><c> than</c><00:51:36.900><c> and</c>

00:51:37.130 --> 00:51:37.140 align:start position:0%
compare inside a greater than and
 

00:51:37.140 --> 00:51:39.380 align:start position:0%
compare inside a greater than and
there's<00:51:38.010><c> something</c><00:51:38.340><c> called</c><00:51:38.460><c> to</c><00:51:38.730><c> lowercase</c><00:51:39.030><c> so</c>

00:51:39.380 --> 00:51:39.390 align:start position:0%
there's something called to lowercase so
 

00:51:39.390 --> 00:51:41.090 align:start position:0%
there's something called to lowercase so
that<00:51:39.600><c> immediately</c><00:51:39.930><c> is</c><00:51:40.380><c> there's</c><00:51:40.830><c> something</c>

00:51:41.090 --> 00:51:41.100 align:start position:0%
that immediately is there's something
 

00:51:41.100 --> 00:51:43.010 align:start position:0%
that immediately is there's something
going<00:51:41.310><c> on</c><00:51:41.400><c> here</c><00:51:41.730><c> and</c><00:51:41.880><c> I</c><00:51:41.970><c> can</c><00:51:42.120><c> look</c><00:51:42.300><c> if</c><00:51:42.720><c> I</c><00:51:42.810><c> just</c>

00:51:43.010 --> 00:51:43.020 align:start position:0%
going on here and I can look if I just
 

00:51:43.020 --> 00:51:44.330 align:start position:0%
going on here and I can look if I just
click<00:51:43.200><c> here</c><00:51:43.410><c> and</c><00:51:43.650><c> I</c><00:51:43.710><c> double</c><00:51:43.980><c> click</c><00:51:44.130><c> on</c><00:51:44.280><c> this</c>

00:51:44.330 --> 00:51:44.340 align:start position:0%
click here and I double click on this
 

00:51:44.340 --> 00:51:47.240 align:start position:0%
click here and I double click on this
it'll<00:51:44.850><c> bring</c><00:51:45.030><c> up</c><00:51:45.180><c> my</c><00:51:45.470><c> source</c><00:51:46.470><c> code</c><00:51:46.560><c> viewer</c><00:51:46.980><c> and</c>

00:51:47.240 --> 00:51:47.250 align:start position:0%
it'll bring up my source code viewer and
 

00:51:47.250 --> 00:51:49.490 align:start position:0%
it'll bring up my source code viewer and
I<00:51:47.820><c> see</c><00:51:48.000><c> there's</c><00:51:48.180><c> some</c><00:51:48.240><c> to</c><00:51:48.510><c> lowercase</c><00:51:48.810><c> that's</c>

00:51:49.490 --> 00:51:49.500 align:start position:0%
I see there's some to lowercase that's
 

00:51:49.500 --> 00:51:52.190 align:start position:0%
I see there's some to lowercase that's
inside<00:51:50.160><c> of</c><00:51:50.310><c> the</c><00:51:50.460><c> AWT</c><00:51:51.210><c> code</c><00:51:51.450><c> and</c><00:51:51.690><c> you</c><00:51:52.110><c> know</c><00:51:52.170><c> I</c>

00:51:52.190 --> 00:51:52.200 align:start position:0%
inside of the AWT code and you know I
 

00:51:52.200 --> 00:51:53.990 align:start position:0%
inside of the AWT code and you know I
don't<00:51:52.350><c> care</c><00:51:52.530><c> that</c><00:51:52.680><c> much</c><00:51:52.770><c> about</c><00:51:52.830><c> it</c><00:51:53.160><c> but</c><00:51:53.280><c> what</c>

00:51:53.990 --> 00:51:54.000 align:start position:0%
don't care that much about it but what
 

00:51:54.000 --> 00:51:56.150 align:start position:0%
don't care that much about it but what
to<00:51:54.300><c> lowercase</c><00:51:54.540><c> is</c><00:51:55.290><c> taking</c><00:51:55.620><c> up</c><00:51:55.680><c> a</c><00:51:55.770><c> lot</c><00:51:55.890><c> of</c><00:51:55.920><c> time</c>

00:51:56.150 --> 00:51:56.160 align:start position:0%
to lowercase is taking up a lot of time
 

00:51:56.160 --> 00:51:59.060 align:start position:0%
to lowercase is taking up a lot of time
and<00:51:56.550><c> that's</c><00:51:56.880><c> inside</c><00:51:57.330><c> of</c><00:51:57.860><c> there's</c><00:51:58.860><c> a</c><00:51:58.920><c> whole</c>

00:51:59.060 --> 00:51:59.070 align:start position:0%
and that's inside of there's a whole
 

00:51:59.070 --> 00:52:00.650 align:start position:0%
and that's inside of there's a whole
bunch<00:51:59.160><c> of</c><00:51:59.250><c> things</c><00:51:59.370><c> inside</c><00:51:59.610><c> of</c><00:51:59.670><c> a</c><00:51:59.790><c> we</c><00:51:59.880><c> did</c><00:52:00.000><c> a</c><00:52:00.180><c> WT</c>

00:52:00.650 --> 00:52:00.660 align:start position:0%
bunch of things inside of a we did a WT
 

00:52:00.660 --> 00:52:03.140 align:start position:0%
bunch of things inside of a we did a WT
but<00:52:01.020><c> I</c><00:52:01.200><c> want</c><00:52:01.680><c> to</c><00:52:01.740><c> see</c><00:52:01.860><c> my</c><00:52:02.130><c> stuff</c><00:52:02.460><c> so</c><00:52:02.490><c> mine</c><00:52:02.850><c> sort</c>

00:52:03.140 --> 00:52:03.150 align:start position:0%
but I want to see my stuff so mine sort
 

00:52:03.150 --> 00:52:05.210 align:start position:0%
but I want to see my stuff so mine sort
data<00:52:03.330><c> is</c><00:52:03.540><c> my</c><00:52:03.720><c> class</c><00:52:03.990><c> and</c><00:52:04.290><c> let's</c><00:52:04.920><c> see</c><00:52:05.040><c> what's</c>

00:52:05.210 --> 00:52:05.220 align:start position:0%
data is my class and let's see what's
 

00:52:05.220 --> 00:52:07.640 align:start position:0%
data is my class and let's see what's
going<00:52:05.370><c> on</c><00:52:05.580><c> in</c><00:52:05.700><c> my</c><00:52:05.790><c> compare</c><00:52:06.210><c> I</c><00:52:06.450><c> can</c><00:52:07.350><c> see</c><00:52:07.470><c> right</c>

00:52:07.640 --> 00:52:07.650 align:start position:0%
going on in my compare I can see right
 

00:52:07.650 --> 00:52:09.410 align:start position:0%
going on in my compare I can see right
here<00:52:07.680><c> that</c><00:52:07.920><c> I</c><00:52:08.340><c> get</c><00:52:08.670><c> two</c><00:52:08.820><c> strings</c><00:52:09.150><c> and</c><00:52:09.360><c> to</c>

00:52:09.410 --> 00:52:09.420 align:start position:0%
here that I get two strings and to
 

00:52:09.420 --> 00:52:11.180 align:start position:0%
here that I get two strings and to
compare<00:52:09.720><c> them</c><00:52:09.810><c> I</c><00:52:09.960><c> turn</c><00:52:10.470><c> them</c><00:52:10.590><c> into</c><00:52:10.680><c> lowercase</c>

00:52:11.180 --> 00:52:11.190 align:start position:0%
compare them I turn them into lowercase
 

00:52:11.190 --> 00:52:13.580 align:start position:0%
compare them I turn them into lowercase
first<00:52:11.550><c> because</c><00:52:11.940><c> I</c><00:52:12.060><c> wanted</c><00:52:12.300><c> to</c><00:52:12.390><c> be</c>

00:52:13.580 --> 00:52:13.590 align:start position:0%
first because I wanted to be
 

00:52:13.590 --> 00:52:15.590 align:start position:0%
first because I wanted to be
I<00:52:13.680><c> want</c><00:52:14.130><c> it</c><00:52:14.220><c> to</c><00:52:14.310><c> be</c><00:52:14.430><c> case-insensitive</c><00:52:14.790><c> and</c>

00:52:15.590 --> 00:52:15.600 align:start position:0%
I want it to be case-insensitive and
 

00:52:15.600 --> 00:52:17.060 align:start position:0%
I want it to be case-insensitive and
then<00:52:15.990><c> I</c><00:52:16.020><c> compare</c><00:52:16.470><c> them</c><00:52:16.530><c> character</c><00:52:16.920><c> by</c>

00:52:17.060 --> 00:52:17.070 align:start position:0%
then I compare them character by
 

00:52:17.070 --> 00:52:21.140 align:start position:0%
then I compare them character by
character<00:52:17.100><c> and</c><00:52:19.040><c> okay</c><00:52:20.040><c> so</c><00:52:20.340><c> so</c><00:52:20.790><c> you</c><00:52:20.850><c> know</c><00:52:21.000><c> that's</c>

00:52:21.140 --> 00:52:21.150 align:start position:0%
character and okay so so you know that's
 

00:52:21.150 --> 00:52:22.300 align:start position:0%
character and okay so so you know that's
really<00:52:21.390><c> bad</c>

00:52:22.300 --> 00:52:22.310 align:start position:0%
really bad
 

00:52:22.310 --> 00:52:24.680 align:start position:0%
really bad
you<00:52:23.310><c> know</c><00:52:23.400><c> actually</c><00:52:23.730><c> I've</c><00:52:23.880><c> had</c><00:52:24.240><c> an</c><00:52:24.390><c> engineer</c>

00:52:24.680 --> 00:52:24.690 align:start position:0%
you know actually I've had an engineer
 

00:52:24.690 --> 00:52:25.940 align:start position:0%
you know actually I've had an engineer
who's<00:52:24.810><c> done</c><00:52:25.110><c> this</c><00:52:25.260><c> before</c><00:52:25.440><c> at</c><00:52:25.710><c> another</c>

00:52:25.940 --> 00:52:25.950 align:start position:0%
who's done this before at another
 

00:52:25.950 --> 00:52:30.020 align:start position:0%
who's done this before at another
company<00:52:26.160><c> I</c><00:52:26.370><c> was</c><00:52:26.490><c> at</c><00:52:26.610><c> so</c><00:52:28.130><c> so</c><00:52:29.130><c> so</c><00:52:29.820><c> there</c><00:52:29.940><c> are</c><00:52:30.000><c> a</c>

00:52:30.020 --> 00:52:30.030 align:start position:0%
company I was at so so so there are a
 

00:52:30.030 --> 00:52:31.070 align:start position:0%
company I was at so so so there are a
lot<00:52:30.120><c> of</c><00:52:30.150><c> things</c><00:52:30.420><c> that</c><00:52:30.570><c> you</c><00:52:30.630><c> could</c><00:52:30.750><c> this</c>

00:52:31.070 --> 00:52:31.080 align:start position:0%
lot of things that you could this
 

00:52:31.080 --> 00:52:32.420 align:start position:0%
lot of things that you could this
immediately<00:52:31.560><c> drives</c><00:52:31.860><c> you</c><00:52:31.950><c> there</c><00:52:32.070><c> now</c>

00:52:32.420 --> 00:52:32.430 align:start position:0%
immediately drives you there now
 

00:52:32.430 --> 00:52:34.310 align:start position:0%
immediately drives you there now
I<00:52:32.460><c> sort</c><00:52:33.300><c> of</c><00:52:33.360><c> dov'è</c><00:52:33.630><c> round</c><00:52:33.780><c> here</c><00:52:33.930><c> cuz</c><00:52:34.050><c> I</c><00:52:34.080><c> wanted</c>

00:52:34.310 --> 00:52:34.320 align:start position:0%
I sort of dov'è round here cuz I wanted
 

00:52:34.320 --> 00:52:36.110 align:start position:0%
I sort of dov'è round here cuz I wanted
you<00:52:34.410><c> to</c><00:52:34.470><c> see</c><00:52:34.590><c> this</c><00:52:34.710><c> allocation</c><00:52:35.130><c> graph</c><00:52:35.790><c> it's</c>

00:52:36.110 --> 00:52:36.120 align:start position:0%
you to see this allocation graph it's
 

00:52:36.120 --> 00:52:37.760 align:start position:0%
you to see this allocation graph it's
it's<00:52:36.330><c> pretty</c><00:52:36.510><c> cool</c><00:52:36.750><c> it</c><00:52:36.960><c> shows</c><00:52:37.140><c> you</c><00:52:37.380><c> you</c><00:52:37.710><c> know</c>

00:52:37.760 --> 00:52:37.770 align:start position:0%
it's pretty cool it shows you you know
 

00:52:37.770 --> 00:52:40.040 align:start position:0%
it's pretty cool it shows you you know
each<00:52:38.160><c> allocation</c><00:52:38.820><c> entry</c><00:52:39.330><c> point</c><00:52:39.600><c> and</c><00:52:39.780><c> how</c><00:52:39.900><c> much</c>

00:52:40.040 --> 00:52:40.050 align:start position:0%
each allocation entry point and how much
 

00:52:40.050 --> 00:52:42.590 align:start position:0%
each allocation entry point and how much
time<00:52:40.320><c> is</c><00:52:40.500><c> spent</c><00:52:40.590><c> you</c><00:52:41.190><c> can</c><00:52:41.340><c> even</c><00:52:41.970><c> get</c><00:52:42.150><c> sub</c>

00:52:42.590 --> 00:52:42.600 align:start position:0%
time is spent you can even get sub
 

00:52:42.600 --> 00:52:45.470 align:start position:0%
time is spent you can even get sub
percentages<00:52:43.170><c> so</c><00:52:43.350><c> if</c><00:52:43.440><c> I</c><00:52:43.530><c> select</c><00:52:43.740><c> here</c><00:52:44.280><c> I</c><00:52:44.480><c> think</c>

00:52:45.470 --> 00:52:45.480 align:start position:0%
percentages so if I select here I think
 

00:52:45.480 --> 00:52:47.780 align:start position:0%
percentages so if I select here I think
if<00:52:45.870><c> I</c><00:52:45.960><c> mouse</c><00:52:46.140><c> over</c><00:52:46.260><c> here</c><00:52:46.410><c> it</c><00:52:46.710><c> says</c><00:52:46.920><c> that</c><00:52:47.190><c> ninety</c>

00:52:47.780 --> 00:52:47.790 align:start position:0%
if I mouse over here it says that ninety
 

00:52:47.790 --> 00:52:49.280 align:start position:0%
if I mouse over here it says that ninety
nine<00:52:47.910><c> point</c><00:52:48.120><c> two</c><00:52:48.300><c> five</c><00:52:48.480><c> percent</c><00:52:48.540><c> of</c><00:52:48.990><c> the</c><00:52:49.080><c> time</c>

00:52:49.280 --> 00:52:49.290 align:start position:0%
nine point two five percent of the time
 

00:52:49.290 --> 00:52:51.380 align:start position:0%
nine point two five percent of the time
is<00:52:49.560><c> spent</c><00:52:49.590><c> inside</c><00:52:50.100><c> of</c><00:52:50.670><c> this</c><00:52:50.760><c> compare</c><00:52:51.150><c> and</c>

00:52:51.380 --> 00:52:51.390 align:start position:0%
is spent inside of this compare and
 

00:52:51.390 --> 00:52:53.120 align:start position:0%
is spent inside of this compare and
that's<00:52:51.840><c> that's</c><00:52:52.080><c> just</c><00:52:52.140><c> my</c><00:52:52.380><c> compare</c><00:52:52.740><c> that's</c><00:52:52.950><c> not</c>

00:52:53.120 --> 00:52:53.130 align:start position:0%
that's that's just my compare that's not
 

00:52:53.130 --> 00:52:56.750 align:start position:0%
that's that's just my compare that's not
anything<00:52:53.490><c> else</c><00:52:53.670><c> going</c><00:52:53.910><c> on</c><00:52:54.000><c> so</c><00:52:54.980><c> so</c><00:52:55.980><c> what</c><00:52:56.520><c> I</c><00:52:56.550><c> can</c>

00:52:56.750 --> 00:52:56.760 align:start position:0%
anything else going on so so what I can
 

00:52:56.760 --> 00:53:00.590 align:start position:0%
anything else going on so so what I can
do<00:52:57.000><c> is</c><00:52:57.770><c> I</c><00:52:58.770><c> can</c><00:52:59.490><c> actually</c><00:52:59.790><c> if</c><00:53:00.090><c> I</c><00:53:00.180><c> want</c><00:53:00.360><c> to</c><00:53:00.420><c> see</c>

00:53:00.590 --> 00:53:00.600 align:start position:0%
do is I can actually if I want to see
 

00:53:00.600 --> 00:53:01.940 align:start position:0%
do is I can actually if I want to see
right<00:53:00.960><c> down</c><00:53:01.140><c> here</c><00:53:01.350><c> this</c><00:53:01.530><c> would</c><00:53:01.680><c> tell</c><00:53:01.860><c> me</c>

00:53:01.940 --> 00:53:01.950 align:start position:0%
right down here this would tell me
 

00:53:01.950 --> 00:53:03.650 align:start position:0%
right down here this would tell me
immediately<00:53:02.550><c> what</c><00:53:03.030><c> the</c><00:53:03.120><c> problems</c><00:53:03.390><c> are</c><00:53:03.450><c> these</c>

00:53:03.650 --> 00:53:03.660 align:start position:0%
immediately what the problems are these
 

00:53:03.660 --> 00:53:05.930 align:start position:0%
immediately what the problems are these
are<00:53:03.780><c> my</c><00:53:03.810><c> hot</c><00:53:04.050><c> spots</c><00:53:04.350><c> and</c><00:53:04.680><c> this</c><00:53:05.460><c> is</c><00:53:05.580><c> just</c><00:53:05.760><c> taking</c>

00:53:05.930 --> 00:53:05.940 align:start position:0%
are my hot spots and this is just taking
 

00:53:05.940 --> 00:53:07.940 align:start position:0%
are my hot spots and this is just taking
the<00:53:06.510><c> individual</c><00:53:06.990><c> methods</c><00:53:07.380><c> no</c><00:53:07.560><c> matter</c><00:53:07.710><c> who</c>

00:53:07.940 --> 00:53:07.950 align:start position:0%
the individual methods no matter who
 

00:53:07.950 --> 00:53:09.200 align:start position:0%
the individual methods no matter who
called<00:53:08.280><c> them</c><00:53:08.430><c> whatever</c><00:53:08.640><c> Direction</c><00:53:09.120><c> is</c>

00:53:09.200 --> 00:53:09.210 align:start position:0%
called them whatever Direction is
 

00:53:09.210 --> 00:53:10.550 align:start position:0%
called them whatever Direction is
showing<00:53:09.480><c> you</c><00:53:09.570><c> how</c><00:53:09.780><c> what</c><00:53:10.020><c> percentage</c><00:53:10.170><c> of</c><00:53:10.500><c> your</c>

00:53:10.550 --> 00:53:10.560 align:start position:0%
showing you how what percentage of your
 

00:53:10.560 --> 00:53:13.970 align:start position:0%
showing you how what percentage of your
time<00:53:10.860><c> is</c><00:53:11.400><c> spent</c><00:53:12.060><c> in</c><00:53:12.420><c> those</c><00:53:12.720><c> hot</c><00:53:12.930><c> spots</c><00:53:13.080><c> and</c><00:53:13.500><c> if</c>

00:53:13.970 --> 00:53:13.980 align:start position:0%
time is spent in those hot spots and if
 

00:53:13.980 --> 00:53:16.460 align:start position:0%
time is spent in those hot spots and if
you<00:53:14.070><c> flip</c><00:53:14.310><c> the</c><00:53:14.430><c> graph</c><00:53:14.610><c> back</c><00:53:14.820><c> around</c><00:53:15.320><c> you</c><00:53:16.320><c> can</c>

00:53:16.460 --> 00:53:16.470 align:start position:0%
you flip the graph back around you can
 

00:53:16.470 --> 00:53:18.140 align:start position:0%
you flip the graph back around you can
start<00:53:16.710><c> from</c><00:53:16.830><c> the</c><00:53:16.920><c> hot</c><00:53:17.070><c> spots</c><00:53:17.370><c> back</c><00:53:17.580><c> down</c><00:53:17.880><c> and</c>

00:53:18.140 --> 00:53:18.150 align:start position:0%
start from the hot spots back down and
 

00:53:18.150 --> 00:53:20.000 align:start position:0%
start from the hot spots back down and
you<00:53:18.210><c> can</c><00:53:18.330><c> see</c><00:53:18.480><c> who's</c><00:53:18.720><c> calling</c><00:53:19.110><c> H</c><00:53:19.230><c> hot</c><00:53:19.440><c> spot</c><00:53:19.710><c> and</c>

00:53:20.000 --> 00:53:20.010 align:start position:0%
you can see who's calling H hot spot and
 

00:53:20.010 --> 00:53:22.010 align:start position:0%
you can see who's calling H hot spot and
you<00:53:20.130><c> can</c><00:53:20.310><c> look</c><00:53:20.580><c> and</c><00:53:20.790><c> see</c><00:53:20.970><c> that</c><00:53:21.000><c> -</c><00:53:21.300><c> lower</c><00:53:21.480><c> case</c>

00:53:22.010 --> 00:53:22.020 align:start position:0%
you can look and see that - lower case
 

00:53:22.020 --> 00:53:23.840 align:start position:0%
you can look and see that - lower case
okay<00:53:22.290><c> who's</c><00:53:22.470><c> calling</c><00:53:22.800><c> that</c><00:53:22.920><c> and</c><00:53:23.220><c> it</c><00:53:23.610><c> really</c><00:53:23.790><c> is</c>

00:53:23.840 --> 00:53:23.850 align:start position:0%
okay who's calling that and it really is
 

00:53:23.850 --> 00:53:25.220 align:start position:0%
okay who's calling that and it really is
only<00:53:23.940><c> from</c><00:53:24.120><c> one</c><00:53:24.300><c> place</c><00:53:24.480><c> is</c><00:53:24.660><c> from</c><00:53:24.780><c> my</c><00:53:24.870><c> sorter</c>

00:53:25.220 --> 00:53:25.230 align:start position:0%
only from one place is from my sorter
 

00:53:25.230 --> 00:53:29.000 align:start position:0%
only from one place is from my sorter
but<00:53:25.440><c> so</c><00:53:26.340><c> that's</c><00:53:26.850><c> kind</c><00:53:27.150><c> of</c><00:53:27.210><c> cool</c><00:53:27.270><c> and</c><00:53:27.660><c> I</c><00:53:28.410><c> found</c>

00:53:29.000 --> 00:53:29.010 align:start position:0%
but so that's kind of cool and I found
 

00:53:29.010 --> 00:53:30.680 align:start position:0%
but so that's kind of cool and I found
that<00:53:29.130><c> pretty</c><00:53:29.280><c> easily</c><00:53:29.550><c> here</c><00:53:29.850><c> just</c><00:53:30.360><c> on</c><00:53:30.450><c> the</c><00:53:30.540><c> main</c>

00:53:30.680 --> 00:53:30.690 align:start position:0%
that pretty easily here just on the main
 

00:53:30.690 --> 00:53:32.510 align:start position:0%
that pretty easily here just on the main
thread<00:53:30.900><c> but</c><00:53:31.170><c> you</c><00:53:31.500><c> can</c><00:53:31.620><c> also</c><00:53:31.770><c> go</c><00:53:32.070><c> into</c><00:53:32.280><c> your</c>

00:53:32.510 --> 00:53:32.520 align:start position:0%
thread but you can also go into your
 

00:53:32.520 --> 00:53:34.370 align:start position:0%
thread but you can also go into your
individual<00:53:33.000><c> threads</c><00:53:33.330><c> and</c><00:53:33.480><c> I</c><00:53:33.540><c> can</c><00:53:33.690><c> say</c><00:53:33.870><c> let's</c>

00:53:34.370 --> 00:53:34.380 align:start position:0%
individual threads and I can say let's
 

00:53:34.380 --> 00:53:36.260 align:start position:0%
individual threads and I can say let's
just<00:53:34.590><c> look</c><00:53:34.710><c> exactly</c><00:53:35.220><c> a</c><00:53:35.430><c> disorder</c><00:53:35.940><c> you</c><00:53:36.150><c> know</c><00:53:36.180><c> I</c>

00:53:36.260 --> 00:53:36.270 align:start position:0%
just look exactly a disorder you know I
 

00:53:36.270 --> 00:53:38.510 align:start position:0%
just look exactly a disorder you know I
looked<00:53:36.540><c> at</c><00:53:36.690><c> the</c><00:53:36.900><c> whole</c><00:53:37.140><c> main</c><00:53:37.950><c> thing</c><00:53:38.400><c> and</c>

00:53:38.510 --> 00:53:38.520 align:start position:0%
looked at the whole main thing and
 

00:53:38.520 --> 00:53:40.610 align:start position:0%
looked at the whole main thing and
included<00:53:38.910><c> all</c><00:53:38.970><c> my</c><00:53:39.150><c> event</c><00:53:39.480><c> loops</c><00:53:39.690><c> and</c><00:53:39.900><c> stuff</c><00:53:39.960><c> so</c>

00:53:40.610 --> 00:53:40.620 align:start position:0%
included all my event loops and stuff so
 

00:53:40.620 --> 00:53:43.190 align:start position:0%
included all my event loops and stuff so
if<00:53:40.680><c> we</c><00:53:40.770><c> look</c><00:53:40.890><c> at</c><00:53:40.950><c> my</c><00:53:41.100><c> sorter</c><00:53:41.520><c> my</c><00:53:42.480><c> sorters</c><00:53:42.840><c> even</c>

00:53:43.190 --> 00:53:43.200 align:start position:0%
if we look at my sorter my sorters even
 

00:53:43.200 --> 00:53:45.830 align:start position:0%
if we look at my sorter my sorters even
worse<00:53:43.470><c> it's</c><00:53:43.830><c> got</c><00:53:44.040><c> 60%</c><00:53:44.460><c> spent</c><00:53:45.030><c> in</c><00:53:45.210><c> there</c><00:53:45.360><c> so</c><00:53:45.570><c> if</c>

00:53:45.830 --> 00:53:45.840 align:start position:0%
worse it's got 60% spent in there so if
 

00:53:45.840 --> 00:53:47.450 align:start position:0%
worse it's got 60% spent in there so if
I<00:53:45.900><c> actually</c><00:53:46.050><c> had</c><00:53:46.260><c> a</c><00:53:46.290><c> big</c><00:53:46.560><c> list</c><00:53:46.950><c> I</c><00:53:47.130><c> was</c><00:53:47.250><c> trying</c>

00:53:47.450 --> 00:53:47.460 align:start position:0%
I actually had a big list I was trying
 

00:53:47.460 --> 00:53:49.670 align:start position:0%
I actually had a big list I was trying
to<00:53:47.550><c> sort</c><00:53:47.790><c> or</c><00:53:48.000><c> something</c><00:53:48.240><c> I</c><00:53:48.300><c> could</c><00:53:48.360><c> I</c><00:53:49.170><c> could</c><00:53:49.620><c> do</c>

00:53:49.670 --> 00:53:49.680 align:start position:0%
to sort or something I could I could do
 

00:53:49.680 --> 00:53:53.240 align:start position:0%
to sort or something I could I could do
a<00:53:49.710><c> little</c><00:53:49.830><c> better</c><00:53:49.980><c> so</c><00:53:50.250><c> without</c><00:53:51.500><c> I'm</c><00:53:52.500><c> gonna</c><00:53:52.740><c> re</c>

00:53:53.240 --> 00:53:53.250 align:start position:0%
a little better so without I'm gonna re
 

00:53:53.250 --> 00:53:55.700 align:start position:0%
a little better so without I'm gonna re
profile<00:53:53.730><c> again</c><00:53:54.060><c> let</c><00:53:54.660><c> me</c><00:53:54.690><c> go</c><00:53:54.900><c> back</c><00:53:55.020><c> here</c><00:53:55.320><c> so</c><00:53:55.470><c> I</c>

00:53:55.700 --> 00:53:55.710 align:start position:0%
profile again let me go back here so I
 

00:53:55.710 --> 00:53:57.530 align:start position:0%
profile again let me go back here so I
have<00:53:55.980><c> this</c><00:53:56.100><c> thing</c><00:53:56.280><c> called</c><00:53:56.400><c> fix</c><00:53:56.760><c> it</c><00:53:56.910><c> now</c><00:53:57.150><c> this</c>

00:53:57.530 --> 00:53:57.540 align:start position:0%
have this thing called fix it now this
 

00:53:57.540 --> 00:53:58.820 align:start position:0%
have this thing called fix it now this
really<00:53:57.720><c> shouldn't</c><00:53:57.990><c> be</c><00:53:58.110><c> called</c><00:53:58.260><c> fix</c><00:53:58.530><c> it</c><00:53:58.710><c> this</c>

00:53:58.820 --> 00:53:58.830 align:start position:0%
really shouldn't be called fix it this
 

00:53:58.830 --> 00:54:01.040 align:start position:0%
really shouldn't be called fix it this
should<00:53:59.070><c> be</c><00:53:59.190><c> like</c><00:53:59.460><c> don't</c><00:53:59.640><c> be</c><00:53:59.820><c> so</c><00:53:59.850><c> stupid</c><00:54:00.300><c> which</c>

00:54:01.040 --> 00:54:01.050 align:start position:0%
should be like don't be so stupid which
 

00:54:01.050 --> 00:54:03.770 align:start position:0%
should be like don't be so stupid which
is<00:54:01.400><c> what</c><00:54:02.400><c> this</c><00:54:02.520><c> is</c><00:54:02.670><c> doing</c><00:54:02.790><c> is</c><00:54:02.940><c> it's</c><00:54:03.090><c> not</c><00:54:03.420><c> doing</c>

00:54:03.770 --> 00:54:03.780 align:start position:0%
is what this is doing is it's not doing
 

00:54:03.780 --> 00:54:05.930 align:start position:0%
is what this is doing is it's not doing
a<00:54:04.140><c> whole</c><00:54:04.560><c> to</c><00:54:04.770><c> lower</c><00:54:04.950><c> it's</c><00:54:05.250><c> getting</c><00:54:05.820><c> each</c>

00:54:05.930 --> 00:54:05.940 align:start position:0%
a whole to lower it's getting each
 

00:54:05.940 --> 00:54:07.400 align:start position:0%
a whole to lower it's getting each
character<00:54:06.390><c> lower</c><00:54:06.600><c> casing</c><00:54:06.960><c> the</c><00:54:07.020><c> characters</c>

00:54:07.400 --> 00:54:07.410 align:start position:0%
character lower casing the characters
 

00:54:07.410 --> 00:54:09.620 align:start position:0%
character lower casing the characters
and<00:54:07.650><c> testing</c><00:54:08.280><c> yes</c><00:54:08.460><c> those</c><00:54:08.700><c> that's</c><00:54:09.210><c> a</c><00:54:09.390><c> little</c>

00:54:09.620 --> 00:54:09.630 align:start position:0%
and testing yes those that's a little
 

00:54:09.630 --> 00:54:14.620 align:start position:0%
and testing yes those that's a little
better<00:54:09.810><c> so</c><00:54:10.140><c> I'll</c><00:54:10.410><c> turn</c><00:54:11.040><c> that</c><00:54:11.220><c> on</c><00:54:11.460><c> and</c><00:54:12.950><c> I'll</c>

00:54:14.620 --> 00:54:14.630 align:start position:0%
better so I'll turn that on and I'll
 

00:54:14.630 --> 00:54:19.040 align:start position:0%
better so I'll turn that on and I'll
read<00:54:15.630><c> profile</c><00:54:16.080><c> again</c><00:54:17.030><c> do</c><00:54:18.030><c> a</c><00:54:18.090><c> sort</c><00:54:18.360><c> by</c><00:54:18.510><c> first</c><00:54:18.810><c> no</c>

00:54:19.040 --> 00:54:19.050 align:start position:0%
read profile again do a sort by first no
 

00:54:19.050 --> 00:54:21.710 align:start position:0%
read profile again do a sort by first no
I<00:54:19.080><c> already</c><00:54:19.620><c> did</c><00:54:19.770><c> that</c><00:54:20.180><c> so</c><00:54:21.180><c> I'll</c><00:54:21.270><c> click</c><00:54:21.420><c> these</c><00:54:21.600><c> a</c>

00:54:21.710 --> 00:54:21.720 align:start position:0%
I already did that so I'll click these a
 

00:54:21.720 --> 00:54:28.540 align:start position:0%
I already did that so I'll click these a
couple<00:54:21.840><c> times</c><00:54:22.020><c> back</c><00:54:22.440><c> and</c><00:54:22.650><c> forth</c>

00:54:28.540 --> 00:54:28.550 align:start position:0%
 
 

00:54:28.550 --> 00:54:31.790 align:start position:0%
 
and<00:54:29.550><c> we'll</c><00:54:29.910><c> see</c><00:54:30.090><c> that</c><00:54:30.260><c> now</c><00:54:31.260><c> we</c><00:54:31.320><c> don't</c><00:54:31.680><c> even</c>

00:54:31.790 --> 00:54:31.800 align:start position:0%
and we'll see that now we don't even
 

00:54:31.800 --> 00:54:33.080 align:start position:0%
and we'll see that now we don't even
have<00:54:31.980><c> to</c><00:54:32.190><c> lower</c><00:54:32.370><c> we</c><00:54:32.520><c> don't</c><00:54:32.670><c> have</c><00:54:32.850><c> anything</c>

00:54:33.080 --> 00:54:33.090 align:start position:0%
have to lower we don't have anything
 

00:54:33.090 --> 00:54:36.920 align:start position:0%
have to lower we don't have anything
about<00:54:33.300><c> lowercase</c><00:54:33.810><c> in</c><00:54:34.080><c> our</c><00:54:35.660><c> let</c><00:54:36.660><c> me</c><00:54:36.720><c> get</c><00:54:36.840><c> up</c>

00:54:36.920 --> 00:54:36.930 align:start position:0%
about lowercase in our let me get up
 

00:54:36.930 --> 00:54:39.200 align:start position:0%
about lowercase in our let me get up
here<00:54:36.960><c> actually</c><00:54:37.320><c> sorry</c><00:54:37.800><c> we'll</c><00:54:38.790><c> see</c><00:54:38.940><c> some</c>

00:54:39.200 --> 00:54:39.210 align:start position:0%
here actually sorry we'll see some
 

00:54:39.210 --> 00:54:40.910 align:start position:0%
here actually sorry we'll see some
lowercase<00:54:39.690><c> in</c><00:54:39.960><c> here</c><00:54:40.200><c> but</c><00:54:40.470><c> it's</c><00:54:40.590><c> not</c><00:54:40.740><c> going</c><00:54:40.830><c> to</c>

00:54:40.910 --> 00:54:40.920 align:start position:0%
lowercase in here but it's not going to
 

00:54:40.920 --> 00:54:43.790 align:start position:0%
lowercase in here but it's not going to
be<00:54:40.980><c> as</c><00:54:41.070><c> huge</c><00:54:41.310><c> I</c><00:54:41.940><c> can't</c><00:54:42.750><c> even</c><00:54:43.050><c> find</c><00:54:43.410><c> it</c><00:54:43.560><c> right</c>

00:54:43.790 --> 00:54:43.800 align:start position:0%
be as huge I can't even find it right
 

00:54:43.800 --> 00:54:45.890 align:start position:0%
be as huge I can't even find it right
now<00:54:43.950><c> so</c><00:54:44.220><c> that's</c><00:54:44.820><c> that's</c><00:54:45.180><c> pretty</c><00:54:45.390><c> cool</c><00:54:45.570><c> is</c><00:54:45.840><c> that</c>

00:54:45.890 --> 00:54:45.900 align:start position:0%
now so that's that's pretty cool is that
 

00:54:45.900 --> 00:54:48.080 align:start position:0%
now so that's that's pretty cool is that
now<00:54:46.320><c> our</c><00:54:46.350><c> compare</c><00:54:47.010><c> is</c><00:54:47.190><c> no</c><00:54:47.340><c> longer</c><00:54:47.580><c> the</c><00:54:47.790><c> huge</c>

00:54:48.080 --> 00:54:48.090 align:start position:0%
now our compare is no longer the huge
 

00:54:48.090 --> 00:54:50.450 align:start position:0%
now our compare is no longer the huge
portion<00:54:48.540><c> of</c><00:54:48.630><c> this</c><00:54:48.780><c> whole</c><00:54:48.960><c> thing</c><00:54:49.200><c> we</c><00:54:49.800><c> can</c><00:54:49.980><c> we</c>

00:54:50.450 --> 00:54:50.460 align:start position:0%
portion of this whole thing we can we
 

00:54:50.460 --> 00:54:51.860 align:start position:0%
portion of this whole thing we can we
see<00:54:50.610><c> that</c><00:54:50.760><c> there's</c><00:54:51.000><c> some</c><00:54:51.240><c> something</c><00:54:51.570><c> about</c>

00:54:51.860 --> 00:54:51.870 align:start position:0%
see that there's some something about
 

00:54:51.870 --> 00:54:54.440 align:start position:0%
see that there's some something about
app<00:54:52.080><c> context</c><00:54:52.800><c> and</c><00:54:52.980><c> graphics</c><00:54:53.550><c> which</c><00:54:53.850><c> if</c><00:54:54.150><c> you're</c>

00:54:54.440 --> 00:54:54.450 align:start position:0%
app context and graphics which if you're
 

00:54:54.450 --> 00:54:55.790 align:start position:0%
app context and graphics which if you're
using<00:54:54.630><c> the</c><00:54:54.780><c> hardware</c><00:54:54.960><c> accelerated</c><00:54:55.500><c> would</c><00:54:55.710><c> be</c>

00:54:55.790 --> 00:54:55.800 align:start position:0%
using the hardware accelerated would be
 

00:54:55.800 --> 00:54:58.460 align:start position:0%
using the hardware accelerated would be
a<00:54:55.830><c> lot</c><00:54:55.980><c> lower</c><00:54:56.190><c> than</c><00:54:56.340><c> this</c><00:54:56.670><c> so</c><00:54:57.030><c> so</c><00:54:57.960><c> this</c><00:54:58.290><c> is</c><00:54:58.350><c> a</c>

00:54:58.460 --> 00:54:58.470 align:start position:0%
a lot lower than this so so this is a
 

00:54:58.470 --> 00:55:00.080 align:start position:0%
a lot lower than this so so this is a
really<00:54:58.710><c> cool</c><00:54:58.860><c> way</c><00:54:59.070><c> for</c><00:54:59.100><c> you</c><00:54:59.340><c> to</c><00:54:59.400><c> find</c><00:54:59.640><c> out</c><00:54:59.790><c> like</c>

00:55:00.080 --> 00:55:00.090 align:start position:0%
really cool way for you to find out like
 

00:55:00.090 --> 00:55:02.410 align:start position:0%
really cool way for you to find out like
what<00:55:00.330><c> actually</c><00:55:01.170><c> is</c><00:55:01.290><c> your</c><00:55:01.440><c> bottleneck</c>

00:55:02.410 --> 00:55:02.420 align:start position:0%
what actually is your bottleneck
 

00:55:02.420 --> 00:55:04.640 align:start position:0%
what actually is your bottleneck
obviously<00:55:03.420><c> you</c><00:55:03.510><c> wouldn't</c><00:55:03.750><c> be</c><00:55:03.840><c> writing</c><00:55:04.050><c> these</c>

00:55:04.640 --> 00:55:04.650 align:start position:0%
obviously you wouldn't be writing these
 

00:55:04.650 --> 00:55:06.260 align:start position:0%
obviously you wouldn't be writing these
really<00:55:04.890><c> bad</c><00:55:05.010><c> short</c><00:55:05.340><c> routines</c><00:55:05.670><c> but</c><00:55:05.910><c> who</c><00:55:06.090><c> knows</c>

00:55:06.260 --> 00:55:06.270 align:start position:0%
really bad short routines but who knows
 

00:55:06.270 --> 00:55:07.850 align:start position:0%
really bad short routines but who knows
where<00:55:06.510><c> things</c><00:55:06.660><c> might</c><00:55:06.870><c> pop</c><00:55:07.110><c> up</c><00:55:07.140><c> like</c><00:55:07.440><c> this</c><00:55:07.680><c> if</c>

00:55:07.850 --> 00:55:07.860 align:start position:0%
where things might pop up like this if
 

00:55:07.860 --> 00:55:09.620 align:start position:0%
where things might pop up like this if
you<00:55:07.950><c> have</c><00:55:08.160><c> you</c><00:55:08.730><c> know</c><00:55:08.820><c> if</c><00:55:09.090><c> you're</c><00:55:09.270><c> using</c><00:55:09.300><c> a</c>

00:55:09.620 --> 00:55:09.630 align:start position:0%
you have you know if you're using a
 

00:55:09.630 --> 00:55:10.700 align:start position:0%
you have you know if you're using a
library<00:55:09.780><c> from</c><00:55:10.110><c> someone</c><00:55:10.380><c> else</c><00:55:10.500><c> you'll</c>

00:55:10.700 --> 00:55:10.710 align:start position:0%
library from someone else you'll
 

00:55:10.710 --> 00:55:12.860 align:start position:0%
library from someone else you'll
actually<00:55:10.890><c> see</c><00:55:11.340><c> what</c><00:55:12.060><c> parts</c><00:55:12.330><c> of</c><00:55:12.420><c> their</c><00:55:12.570><c> library</c>

00:55:12.860 --> 00:55:12.870 align:start position:0%
actually see what parts of their library
 

00:55:12.870 --> 00:55:14.960 align:start position:0%
actually see what parts of their library
as<00:55:13.170><c> long</c><00:55:13.350><c> as</c><00:55:13.470><c> it's</c><00:55:13.590><c> not</c><00:55:13.740><c> been</c><00:55:14.100><c> obfuscated</c><00:55:14.820><c> or</c>

00:55:14.960 --> 00:55:14.970 align:start position:0%
as long as it's not been obfuscated or
 

00:55:14.970 --> 00:55:15.920 align:start position:0%
as long as it's not been obfuscated or
something<00:55:15.150><c> like</c><00:55:15.240><c> that</c><00:55:15.360><c> what</c><00:55:15.480><c> parts</c><00:55:15.690><c> of</c><00:55:15.750><c> their</c>

00:55:15.920 --> 00:55:15.930 align:start position:0%
something like that what parts of their
 

00:55:15.930 --> 00:55:17.780 align:start position:0%
something like that what parts of their
library<00:55:16.290><c> are</c><00:55:16.410><c> slow</c><00:55:16.620><c> you</c><00:55:16.650><c> can</c><00:55:16.920><c> even</c><00:55:17.070><c> see</c><00:55:17.670><c> into</c>

00:55:17.780 --> 00:55:17.790 align:start position:0%
library are slow you can even see into
 

00:55:17.790 --> 00:55:19.070 align:start position:0%
library are slow you can even see into
our<00:55:17.880><c> libraries</c><00:55:18.390><c> and</c><00:55:18.570><c> see</c><00:55:18.660><c> what's</c><00:55:18.810><c> going</c><00:55:18.960><c> on</c>

00:55:19.070 --> 00:55:19.080 align:start position:0%
our libraries and see what's going on
 

00:55:19.080 --> 00:55:20.690 align:start position:0%
our libraries and see what's going on
inside<00:55:19.200><c> of</c><00:55:19.380><c> graphics</c><00:55:20.130><c> and</c><00:55:20.370><c> things</c><00:55:20.460><c> like</c><00:55:20.640><c> that</c>

00:55:20.690 --> 00:55:20.700 align:start position:0%
inside of graphics and things like that
 

00:55:20.700 --> 00:55:22.400 align:start position:0%
inside of graphics and things like that
but<00:55:21.030><c> you</c><00:55:21.270><c> don't</c><00:55:21.690><c> necessarily</c><00:55:21.810><c> want</c><00:55:22.200><c> to</c><00:55:22.290><c> do</c>

00:55:22.400 --> 00:55:22.410 align:start position:0%
but you don't necessarily want to do
 

00:55:22.410 --> 00:55:25.010 align:start position:0%
but you don't necessarily want to do
that<00:55:22.590><c> but</c><00:55:23.190><c> sometimes</c><00:55:24.120><c> it's</c><00:55:24.270><c> fun</c><00:55:24.330><c> to</c><00:55:24.570><c> do</c><00:55:24.720><c> and</c>

00:55:25.010 --> 00:55:25.020 align:start position:0%
that but sometimes it's fun to do and
 

00:55:25.020 --> 00:55:27.680 align:start position:0%
that but sometimes it's fun to do and
we've<00:55:25.620><c> actually</c><00:55:25.860><c> used</c><00:55:26.070><c> this</c><00:55:26.580><c> a</c><00:55:26.880><c> lot</c><00:55:27.450><c> of</c><00:55:27.480><c> our</c>

00:55:27.680 --> 00:55:27.690 align:start position:0%
we've actually used this a lot of our
 

00:55:27.690 --> 00:55:30.560 align:start position:0%
we've actually used this a lot of our
graphics<00:55:28.170><c> code</c><00:55:28.380><c> is</c><00:55:28.500><c> written</c><00:55:28.770><c> in</c><00:55:29.190><c> Java</c><00:55:29.640><c> so</c><00:55:30.180><c> we</c>

00:55:30.560 --> 00:55:30.570 align:start position:0%
graphics code is written in Java so we
 

00:55:30.570 --> 00:55:32.360 align:start position:0%
graphics code is written in Java so we
use<00:55:30.930><c> this</c><00:55:31.140><c> all</c><00:55:31.350><c> the</c><00:55:31.620><c> time</c><00:55:31.800><c> I</c><00:55:32.040><c> mean</c><00:55:32.160><c> I</c><00:55:32.220><c> have</c>

00:55:32.360 --> 00:55:32.370 align:start position:0%
use this all the time I mean I have
 

00:55:32.370 --> 00:55:35.030 align:start position:0%
use this all the time I mean I have
engineers<00:55:33.020><c> other</c><00:55:34.020><c> co-workers</c><00:55:34.650><c> of</c><00:55:34.680><c> mine</c><00:55:34.860><c> are</c>

00:55:35.030 --> 00:55:35.040 align:start position:0%
engineers other co-workers of mine are
 

00:55:35.040 --> 00:55:37.430 align:start position:0%
engineers other co-workers of mine are
coming<00:55:35.190><c> in</c><00:55:35.460><c> and</c><00:55:35.730><c> saying</c><00:55:35.910><c> you</c><00:55:36.120><c> know</c><00:55:36.210><c> I</c><00:55:36.440><c> made</c>

00:55:37.430 --> 00:55:37.440 align:start position:0%
coming in and saying you know I made
 

00:55:37.440 --> 00:55:38.870 align:start position:0%
coming in and saying you know I made
some<00:55:37.470><c> changes</c><00:55:37.800><c> of</c><00:55:38.130><c> the</c><00:55:38.190><c> past</c><00:55:38.430><c> week</c><00:55:38.640><c> and</c>

00:55:38.870 --> 00:55:38.880 align:start position:0%
some changes of the past week and
 

00:55:38.880 --> 00:55:40.430 align:start position:0%
some changes of the past week and
everything<00:55:39.180><c> just</c><00:55:39.390><c> slowed</c><00:55:39.690><c> down</c><00:55:39.930><c> like</c>

00:55:40.430 --> 00:55:40.440 align:start position:0%
everything just slowed down like
 

00:55:40.440 --> 00:55:41.930 align:start position:0%
everything just slowed down like
jbuilder<00:55:40.740><c> doesn't</c><00:55:41.190><c> run</c><00:55:41.310><c> very</c><00:55:41.430><c> fast</c><00:55:41.640><c> what's</c>

00:55:41.930 --> 00:55:41.940 align:start position:0%
jbuilder doesn't run very fast what's
 

00:55:41.940 --> 00:55:43.370 align:start position:0%
jbuilder doesn't run very fast what's
going<00:55:42.180><c> on</c><00:55:42.300><c> and</c><00:55:42.480><c> we</c><00:55:42.570><c> haven't</c><00:55:42.780><c> changed</c><00:55:43.140><c> anything</c>

00:55:43.370 --> 00:55:43.380 align:start position:0%
going on and we haven't changed anything
 

00:55:43.380 --> 00:55:45.170 align:start position:0%
going on and we haven't changed anything
and<00:55:43.980><c> we</c><00:55:44.070><c> run</c><00:55:44.220><c> it</c><00:55:44.340><c> through</c><00:55:44.370><c> here</c><00:55:44.550><c> and</c><00:55:44.790><c> we</c><00:55:44.850><c> find</c>

00:55:45.170 --> 00:55:45.180 align:start position:0%
and we run it through here and we find
 

00:55:45.180 --> 00:55:48.080 align:start position:0%
and we run it through here and we find
that<00:55:45.480><c> yeah</c><00:55:46.110><c> it</c><00:55:46.230><c> was</c><00:55:46.410><c> someone</c><00:55:46.950><c> did</c><00:55:47.820><c> a</c><00:55:47.850><c> really</c>

00:55:48.080 --> 00:55:48.090 align:start position:0%
that yeah it was someone did a really
 

00:55:48.090 --> 00:55:49.610 align:start position:0%
that yeah it was someone did a really
bad<00:55:48.270><c> draw</c><00:55:48.630><c> a</c><00:55:48.660><c> circle</c><00:55:49.080><c> or</c><00:55:49.200><c> something</c><00:55:49.470><c> like</c><00:55:49.560><c> that</c>

00:55:49.610 --> 00:55:49.620 align:start position:0%
bad draw a circle or something like that
 

00:55:49.620 --> 00:55:52.010 align:start position:0%
bad draw a circle or something like that
and<00:55:49.950><c> so</c><00:55:50.430><c> we</c><00:55:50.580><c> optimized</c><00:55:51.210><c> that</c><00:55:51.330><c> and</c><00:55:51.510><c> we</c><00:55:51.570><c> get</c><00:55:51.720><c> back</c>

00:55:52.010 --> 00:55:52.020 align:start position:0%
and so we optimized that and we get back
 

00:55:52.020 --> 00:55:54.320 align:start position:0%
and so we optimized that and we get back
our<00:55:52.200><c> 10</c><00:55:52.440><c> times</c><00:55:52.620><c> improvement</c><00:55:52.770><c> so</c><00:55:53.430><c> it's</c><00:55:54.030><c> it's</c>

00:55:54.320 --> 00:55:54.330 align:start position:0%
our 10 times improvement so it's it's
 

00:55:54.330 --> 00:55:56.420 align:start position:0%
our 10 times improvement so it's it's
pretty<00:55:54.540><c> cool</c><00:55:54.830><c> let</c><00:55:55.830><c> me</c><00:55:55.890><c> just</c><00:55:56.040><c> show</c><00:55:56.100><c> you</c><00:55:56.190><c> another</c>

00:55:56.420 --> 00:55:56.430 align:start position:0%
pretty cool let me just show you another
 

00:55:56.430 --> 00:55:59.690 align:start position:0%
pretty cool let me just show you another
thing<00:55:56.730><c> which</c><00:55:56.910><c> is</c><00:55:56.940><c> useful</c><00:55:57.660><c> this</c><00:55:57.810><c> is</c><00:55:58.520><c> this</c><00:55:59.520><c> is</c>

00:55:59.690 --> 00:55:59.700 align:start position:0%
thing which is useful this is this is
 

00:55:59.700 --> 00:56:01.550 align:start position:0%
thing which is useful this is this is
the<00:55:59.820><c> VM</c><00:56:00.150><c> statistics</c><00:56:00.840><c> I've</c><00:56:00.960><c> had</c><00:56:01.080><c> this</c><00:56:01.200><c> running</c>

00:56:01.550 --> 00:56:01.560 align:start position:0%
the VM statistics I've had this running
 

00:56:01.560 --> 00:56:03.590 align:start position:0%
the VM statistics I've had this running
the<00:56:01.650><c> whole</c><00:56:01.800><c> time</c><00:56:02.010><c> and</c><00:56:02.310><c> it</c><00:56:02.700><c> shows</c><00:56:03.060><c> you</c><00:56:03.300><c> things</c>

00:56:03.590 --> 00:56:03.600 align:start position:0%
the whole time and it shows you things
 

00:56:03.600 --> 00:56:06.500 align:start position:0%
the whole time and it shows you things
that<00:56:03.990><c> lead</c><00:56:04.860><c> into</c><00:56:05.010><c> what</c><00:56:05.270><c> the</c><00:56:06.270><c> other</c><00:56:06.390><c> people</c>

00:56:06.500 --> 00:56:06.510 align:start position:0%
that lead into what the other people
 

00:56:06.510 --> 00:56:07.940 align:start position:0%
that lead into what the other people
before<00:56:06.870><c> me</c><00:56:06.900><c> all</c><00:56:07.110><c> we're</c><00:56:07.260><c> talking</c><00:56:07.410><c> about</c><00:56:07.740><c> which</c>

00:56:07.940 --> 00:56:07.950 align:start position:0%
before me all we're talking about which
 

00:56:07.950 --> 00:56:09.320 align:start position:0%
before me all we're talking about which
is<00:56:08.190><c> you</c><00:56:08.700><c> don't</c><00:56:08.850><c> want</c><00:56:08.970><c> to</c><00:56:09.000><c> load</c><00:56:09.120><c> all</c><00:56:09.300><c> your</c>

00:56:09.320 --> 00:56:09.330 align:start position:0%
is you don't want to load all your
 

00:56:09.330 --> 00:56:10.850 align:start position:0%
is you don't want to load all your
classes<00:56:09.810><c> right</c><00:56:09.930><c> away</c><00:56:09.990><c> so</c><00:56:10.200><c> you</c><00:56:10.380><c> can</c><00:56:10.560><c> turn</c><00:56:10.710><c> this</c>

00:56:10.850 --> 00:56:10.860 align:start position:0%
classes right away so you can turn this
 

00:56:10.860 --> 00:56:12.980 align:start position:0%
classes right away so you can turn this
on<00:56:11.040><c> at</c><00:56:11.190><c> startup</c><00:56:11.640><c> and</c><00:56:12.180><c> you</c><00:56:12.540><c> can</c><00:56:12.690><c> see</c><00:56:12.840><c> your</c>

00:56:12.980 --> 00:56:12.990 align:start position:0%
on at startup and you can see your
 

00:56:12.990 --> 00:56:14.720 align:start position:0%
on at startup and you can see your
classes<00:56:13.350><c> being</c><00:56:13.560><c> loaded</c><00:56:13.770><c> and</c><00:56:14.010><c> it'll</c><00:56:14.520><c> show</c><00:56:14.550><c> you</c>

00:56:14.720 --> 00:56:14.730 align:start position:0%
classes being loaded and it'll show you
 

00:56:14.730 --> 00:56:16.790 align:start position:0%
classes being loaded and it'll show you
as<00:56:15.060><c> you</c><00:56:15.240><c> do</c><00:56:15.390><c> different</c><00:56:15.690><c> things</c><00:56:15.750><c> so</c><00:56:16.170><c> if</c><00:56:16.470><c> you</c>

00:56:16.790 --> 00:56:16.800 align:start position:0%
as you do different things so if you
 

00:56:16.800 --> 00:56:18.200 align:start position:0%
as you do different things so if you
actually<00:56:17.010><c> have</c><00:56:17.190><c> dynamically</c><00:56:17.850><c> loading</c>

00:56:18.200 --> 00:56:18.210 align:start position:0%
actually have dynamically loading
 

00:56:18.210 --> 00:56:19.820 align:start position:0%
actually have dynamically loading
classes<00:56:18.810><c> which</c><00:56:19.020><c> is</c><00:56:19.050><c> what</c><00:56:19.320><c> you</c><00:56:19.410><c> want</c><00:56:19.620><c> you</c><00:56:19.740><c> want</c>

00:56:19.820 --> 00:56:19.830 align:start position:0%
classes which is what you want you want
 

00:56:19.830 --> 00:56:21.680 align:start position:0%
classes which is what you want you want
to<00:56:19.950><c> load</c><00:56:20.100><c> them</c><00:56:20.220><c> slowly</c><00:56:20.550><c> as</c><00:56:20.850><c> users</c><00:56:21.390><c> get</c><00:56:21.570><c> to</c>

00:56:21.680 --> 00:56:21.690 align:start position:0%
to load them slowly as users get to
 

00:56:21.690 --> 00:56:23.270 align:start position:0%
to load them slowly as users get to
different<00:56:21.780><c> portions</c><00:56:22.290><c> of</c><00:56:22.380><c> graph</c><00:56:22.620><c> you'll</c><00:56:23.220><c> see</c>

00:56:23.270 --> 00:56:23.280 align:start position:0%
different portions of graph you'll see
 

00:56:23.280 --> 00:56:25.760 align:start position:0%
different portions of graph you'll see
your<00:56:23.610><c> classes</c><00:56:24.000><c> going</c><00:56:24.150><c> up</c><00:56:24.360><c> and</c><00:56:24.540><c> up</c><00:56:24.600><c> and</c><00:56:24.720><c> up</c><00:56:24.780><c> plus</c>

00:56:25.760 --> 00:56:25.770 align:start position:0%
your classes going up and up and up plus
 

00:56:25.770 --> 00:56:27.620 align:start position:0%
your classes going up and up and up plus
threads<00:56:26.130><c> actives</c><00:56:26.610><c> so</c><00:56:26.820><c> if</c><00:56:26.940><c> I</c><00:56:27.060><c> were</c><00:56:27.210><c> to</c><00:56:27.240><c> go</c><00:56:27.450><c> over</c>

00:56:27.620 --> 00:56:27.630 align:start position:0%
threads actives so if I were to go over
 

00:56:27.630 --> 00:56:30.230 align:start position:0%
threads actives so if I were to go over
here<00:56:27.840><c> and</c><00:56:28.080><c> I</c><00:56:28.140><c> actually</c><00:56:28.290><c> say</c><00:56:28.710><c> sort</c><00:56:29.670><c> first</c><00:56:29.970><c> name</c>

00:56:30.230 --> 00:56:30.240 align:start position:0%
here and I actually say sort first name
 

00:56:30.240 --> 00:56:34.550 align:start position:0%
here and I actually say sort first name
oh<00:56:31.140><c> it</c><00:56:32.330><c> probably</c><00:56:33.330><c> went</c><00:56:33.660><c> way</c><00:56:33.780><c> too</c><00:56:33.810><c> fast</c><00:56:34.170><c> to</c><00:56:34.380><c> even</c>

00:56:34.550 --> 00:56:34.560 align:start position:0%
oh it probably went way too fast to even
 

00:56:34.560 --> 00:56:36.050 align:start position:0%
oh it probably went way too fast to even
see<00:56:34.680><c> the</c><00:56:34.800><c> thread</c><00:56:35.010><c> yeah</c><00:56:35.490><c> so</c><00:56:35.610><c> there</c><00:56:35.760><c> are</c><00:56:35.790><c> thread</c>

00:56:36.050 --> 00:56:36.060 align:start position:0%
see the thread yeah so there are thread
 

00:56:36.060 --> 00:56:38.480 align:start position:0%
see the thread yeah so there are thread
came<00:56:36.240><c> in</c><00:56:36.420><c> sorted</c><00:56:36.870><c> and</c><00:56:36.930><c> went</c><00:56:37.110><c> away</c><00:56:37.170><c> so</c><00:56:37.320><c> it</c><00:56:38.100><c> shows</c>

00:56:38.480 --> 00:56:38.490 align:start position:0%
came in sorted and went away so it shows
 

00:56:38.490 --> 00:56:39.470 align:start position:0%
came in sorted and went away so it shows
you<00:56:38.640><c> in</c><00:56:38.760><c> the</c><00:56:38.850><c> in</c><00:56:38.910><c> your</c><00:56:39.030><c> heaps</c>

00:56:39.470 --> 00:56:39.480 align:start position:0%
you in the in your heaps
 

00:56:39.480 --> 00:56:41.030 align:start position:0%
you in the in your heaps
so<00:56:39.750><c> you</c><00:56:39.839><c> can</c><00:56:39.960><c> see</c><00:56:40.140><c> what</c><00:56:40.410><c> actual</c><00:56:40.829><c> amount</c><00:56:41.010><c> of</c>

00:56:41.030 --> 00:56:41.040 align:start position:0%
so you can see what actual amount of
 

00:56:41.040 --> 00:56:42.920 align:start position:0%
so you can see what actual amount of
memory<00:56:41.220><c> you</c><00:56:41.339><c> have</c><00:56:41.549><c> and</c><00:56:41.849><c> you</c><00:56:41.910><c> can</c><00:56:41.940><c> kick</c><00:56:42.599><c> off</c><00:56:42.780><c> the</c>

00:56:42.920 --> 00:56:42.930 align:start position:0%
memory you have and you can kick off the
 

00:56:42.930 --> 00:56:45.230 align:start position:0%
memory you have and you can kick off the
garbage<00:56:43.230><c> collector</c><00:56:43.680><c> and</c><00:56:43.950><c> now</c><00:56:44.700><c> all</c><00:56:44.880><c> the</c><00:56:45.030><c> stuff</c>

00:56:45.230 --> 00:56:45.240 align:start position:0%
garbage collector and now all the stuff
 

00:56:45.240 --> 00:56:46.490 align:start position:0%
garbage collector and now all the stuff
that's<00:56:45.450><c> just</c><00:56:45.510><c> been</c><00:56:45.750><c> sitting</c><00:56:45.990><c> around</c><00:56:46.049><c> because</c>

00:56:46.490 --> 00:56:46.500 align:start position:0%
that's just been sitting around because
 

00:56:46.500 --> 00:56:47.870 align:start position:0%
that's just been sitting around because
the<00:56:46.799><c> garbage</c><00:56:46.950><c> culture</c><00:56:47.250><c> hasn't</c><00:56:47.460><c> needed</c><00:56:47.549><c> to</c><00:56:47.730><c> run</c>

00:56:47.870 --> 00:56:47.880 align:start position:0%
the garbage culture hasn't needed to run
 

00:56:47.880 --> 00:56:50.089 align:start position:0%
the garbage culture hasn't needed to run
is<00:56:48.150><c> collected</c><00:56:48.839><c> and</c><00:56:49.020><c> you</c><00:56:49.589><c> can</c><00:56:49.710><c> do</c><00:56:49.770><c> a</c><00:56:49.799><c> lot</c><00:56:50.010><c> of</c>

00:56:50.089 --> 00:56:50.099 align:start position:0%
is collected and you can do a lot of
 

00:56:50.099 --> 00:56:51.920 align:start position:0%
is collected and you can do a lot of
cool<00:56:50.280><c> things</c><00:56:50.339><c> let</c><00:56:51.270><c> me</c><00:56:51.359><c> just</c><00:56:51.510><c> show</c><00:56:51.630><c> you</c><00:56:51.720><c> really</c>

00:56:51.920 --> 00:56:51.930 align:start position:0%
cool things let me just show you really
 

00:56:51.930 --> 00:56:53.539 align:start position:0%
cool things let me just show you really
quickly<00:56:52.319><c> for</c><00:56:52.799><c> the</c><00:56:52.859><c> people</c><00:56:53.130><c> who</c><00:56:53.190><c> haven't</c><00:56:53.430><c> seen</c>

00:56:53.539 --> 00:56:53.549 align:start position:0%
quickly for the people who haven't seen
 

00:56:53.549 --> 00:56:56.240 align:start position:0%
quickly for the people who haven't seen
the<00:56:53.760><c> memory</c><00:56:54.030><c> profiler</c><00:56:54.480><c> just</c><00:56:55.290><c> one</c><00:56:56.099><c> or</c><00:56:56.220><c> two</c>

00:56:56.240 --> 00:56:56.250 align:start position:0%
the memory profiler just one or two
 

00:56:56.250 --> 00:56:58.400 align:start position:0%
the memory profiler just one or two
little<00:56:56.520><c> things</c><00:56:56.670><c> the</c><00:56:57.630><c> memory</c><00:56:57.900><c> profiler</c><00:56:58.290><c> you</c>

00:56:58.400 --> 00:56:58.410 align:start position:0%
little things the memory profiler you
 

00:56:58.410 --> 00:57:00.589 align:start position:0%
little things the memory profiler you
can<00:56:58.619><c> just</c><00:56:58.770><c> look</c><00:56:58.950><c> at</c><00:56:59.160><c> all</c><00:56:59.369><c> your</c><00:56:59.549><c> instances</c><00:57:00.000><c> you</c>

00:57:00.589 --> 00:57:00.599 align:start position:0%
can just look at all your instances you
 

00:57:00.599 --> 00:57:03.530 align:start position:0%
can just look at all your instances you
can<00:57:00.780><c> mark</c><00:57:01.049><c> a</c><00:57:01.230><c> certain</c><00:57:01.890><c> instance</c><00:57:02.280><c> and</c><00:57:02.520><c> then</c><00:57:03.420><c> you</c>

00:57:03.530 --> 00:57:03.540 align:start position:0%
can mark a certain instance and then you
 

00:57:03.540 --> 00:57:06.680 align:start position:0%
can mark a certain instance and then you
can<00:57:03.690><c> go</c><00:57:03.930><c> do</c><00:57:04.650><c> something</c><00:57:04.680><c> in</c><00:57:05.069><c> your</c><00:57:05.190><c> app</c><00:57:05.480><c> like</c><00:57:06.480><c> a</c>

00:57:06.680 --> 00:57:06.690 align:start position:0%
can go do something in your app like a
 

00:57:06.690 --> 00:57:10.190 align:start position:0%
can go do something in your app like a
sort<00:57:07.819><c> or</c><00:57:08.819><c> something</c><00:57:09.240><c> that's</c><00:57:09.720><c> gonna</c><00:57:09.900><c> be</c><00:57:10.049><c> really</c>

00:57:10.190 --> 00:57:10.200 align:start position:0%
sort or something that's gonna be really
 

00:57:10.200 --> 00:57:13.039 align:start position:0%
sort or something that's gonna be really
slow<00:57:10.530><c> here</c><00:57:10.829><c> like</c><00:57:11.069><c> resizing</c><00:57:11.910><c> these</c><00:57:12.450><c> things</c><00:57:12.780><c> and</c>

00:57:13.039 --> 00:57:13.049 align:start position:0%
slow here like resizing these things and
 

00:57:13.049 --> 00:57:15.559 align:start position:0%
slow here like resizing these things and
you<00:57:13.440><c> can</c><00:57:13.470><c> see</c><00:57:13.829><c> what's</c><00:57:14.760><c> changed</c><00:57:14.849><c> since</c><00:57:15.329><c> you</c><00:57:15.420><c> did</c>

00:57:15.559 --> 00:57:15.569 align:start position:0%
you can see what's changed since you did
 

00:57:15.569 --> 00:57:16.640 align:start position:0%
you can see what's changed since you did
that<00:57:15.720><c> and</c><00:57:15.869><c> you</c><00:57:15.960><c> can</c><00:57:16.170><c> see</c><00:57:16.290><c> that</c><00:57:16.440><c> a</c><00:57:16.500><c> whole</c><00:57:16.619><c> bunch</c>

00:57:16.640 --> 00:57:16.650 align:start position:0%
that and you can see that a whole bunch
 

00:57:16.650 --> 00:57:18.799 align:start position:0%
that and you can see that a whole bunch
of<00:57:16.829><c> char</c><00:57:17.069><c> arrays</c><00:57:17.309><c> were</c><00:57:17.490><c> allocated</c><00:57:17.970><c> rectangles</c>

00:57:18.799 --> 00:57:18.809 align:start position:0%
of char arrays were allocated rectangles
 

00:57:18.809 --> 00:57:20.390 align:start position:0%
of char arrays were allocated rectangles
obviously<00:57:19.380><c> we</c><00:57:19.440><c> use</c><00:57:19.559><c> a</c><00:57:19.589><c> lot</c><00:57:19.799><c> of</c><00:57:19.829><c> rectangles</c><00:57:20.309><c> and</c>

00:57:20.390 --> 00:57:20.400 align:start position:0%
obviously we use a lot of rectangles and
 

00:57:20.400 --> 00:57:22.400 align:start position:0%
obviously we use a lot of rectangles and
graphics<00:57:20.790><c> and</c><00:57:21.000><c> they</c><00:57:21.390><c> should</c><00:57:21.660><c> mostly</c><00:57:22.049><c> go</c><00:57:22.170><c> away</c>

00:57:22.400 --> 00:57:22.410 align:start position:0%
graphics and they should mostly go away
 

00:57:22.410 --> 00:57:24.410 align:start position:0%
graphics and they should mostly go away
when<00:57:22.740><c> you</c><00:57:22.859><c> run</c><00:57:23.040><c> a</c><00:57:23.069><c> garbage</c><00:57:23.400><c> collector</c><00:57:23.670><c> so</c><00:57:24.390><c> I</c>

00:57:24.410 --> 00:57:24.420 align:start position:0%
when you run a garbage collector so I
 

00:57:24.420 --> 00:57:26.599 align:start position:0%
when you run a garbage collector so I
hit<00:57:24.690><c> the</c><00:57:24.780><c> garbage</c><00:57:24.960><c> collector</c><00:57:25.410><c> and</c><00:57:25.619><c> we</c><00:57:26.460><c> see</c>

00:57:26.599 --> 00:57:26.609 align:start position:0%
hit the garbage collector and we see
 

00:57:26.609 --> 00:57:28.069 align:start position:0%
hit the garbage collector and we see
that<00:57:26.760><c> rectangle</c><00:57:27.240><c> went</c><00:57:27.390><c> down</c><00:57:27.510><c> to</c><00:57:27.630><c> none</c><00:57:27.780><c> so</c><00:57:27.990><c> we</c>

00:57:28.069 --> 00:57:28.079 align:start position:0%
that rectangle went down to none so we
 

00:57:28.079 --> 00:57:30.829 align:start position:0%
that rectangle went down to none so we
did<00:57:28.200><c> a</c><00:57:28.230><c> good</c><00:57:28.410><c> job</c><00:57:28.819><c> there's</c><00:57:29.819><c> something</c><00:57:30.660><c> going</c>

00:57:30.829 --> 00:57:30.839 align:start position:0%
did a good job there's something going
 

00:57:30.839 --> 00:57:32.000 align:start position:0%
did a good job there's something going
on<00:57:30.930><c> with</c><00:57:31.079><c> this</c><00:57:31.170><c> one</c><00:57:31.380><c> string</c><00:57:31.740><c> and</c><00:57:31.890><c> one</c>

00:57:32.000 --> 00:57:32.010 align:start position:0%
on with this one string and one
 

00:57:32.010 --> 00:57:33.530 align:start position:0%
on with this one string and one
character<00:57:32.609><c> and</c><00:57:32.700><c> we</c><00:57:32.760><c> might</c><00:57:32.910><c> go</c><00:57:33.119><c> hunt</c><00:57:33.359><c> those</c>

00:57:33.530 --> 00:57:33.540 align:start position:0%
character and we might go hunt those
 

00:57:33.540 --> 00:57:35.720 align:start position:0%
character and we might go hunt those
down<00:57:33.750><c> for</c><00:57:33.990><c> references</c><00:57:34.470><c> or</c><00:57:34.619><c> something</c><00:57:34.890><c> but</c>

00:57:35.720 --> 00:57:35.730 align:start position:0%
down for references or something but
 

00:57:35.730 --> 00:57:37.910 align:start position:0%
down for references or something but
that's<00:57:36.660><c> basically</c><00:57:37.020><c> what</c><00:57:37.349><c> you</c><00:57:37.410><c> have</c><00:57:37.589><c> there's</c><00:57:37.859><c> a</c>

00:57:37.910 --> 00:57:37.920 align:start position:0%
that's basically what you have there's a
 

00:57:37.920 --> 00:57:40.760 align:start position:0%
that's basically what you have there's a
lot<00:57:37.950><c> of</c><00:57:38.309><c> different</c><00:57:38.640><c> things</c><00:57:38.819><c> in</c><00:57:39.270><c> this</c><00:57:39.660><c> in</c><00:57:40.559><c> this</c>

00:57:40.760 --> 00:57:40.770 align:start position:0%
lot of different things in this in this
 

00:57:40.770 --> 00:57:44.650 align:start position:0%
lot of different things in this in this
sampler<00:57:41.730><c> you</c><00:57:41.940><c> actually</c><00:57:42.809><c> can</c><00:57:42.990><c> do</c><00:57:43.230><c> let's</c><00:57:44.190><c> see</c>

00:57:44.650 --> 00:57:44.660 align:start position:0%
sampler you actually can do let's see
 

00:57:44.660 --> 00:57:47.450 align:start position:0%
sampler you actually can do let's see
there<00:57:45.660><c> go</c><00:57:45.780><c> there</c><00:57:46.170><c> it</c><00:57:46.230><c> is</c><00:57:46.319><c> so</c><00:57:46.920><c> you</c><00:57:47.190><c> have</c>

00:57:47.450 --> 00:57:47.460 align:start position:0%
there go there it is so you have
 

00:57:47.460 --> 00:57:49.430 align:start position:0%
there go there it is so you have
different<00:57:47.760><c> types</c><00:57:47.910><c> of</c><00:57:48.030><c> profiling</c><00:57:48.480><c> you</c><00:57:48.869><c> can</c><00:57:49.109><c> I</c>

00:57:49.430 --> 00:57:49.440 align:start position:0%
different types of profiling you can I
 

00:57:49.440 --> 00:57:50.750 align:start position:0%
different types of profiling you can I
did<00:57:49.829><c> this</c><00:57:49.920><c> all</c><00:57:50.069><c> this</c><00:57:50.160><c> profiling</c><00:57:50.640><c> using</c>

00:57:50.750 --> 00:57:50.760 align:start position:0%
did this all this profiling using
 

00:57:50.760 --> 00:57:52.910 align:start position:0%
did this all this profiling using
sampling<00:57:51.270><c> so</c><00:57:51.569><c> every</c><00:57:51.809><c> 5</c><00:57:52.020><c> milliseconds</c><00:57:52.650><c> I</c><00:57:52.710><c> tried</c>

00:57:52.910 --> 00:57:52.920 align:start position:0%
sampling so every 5 milliseconds I tried
 

00:57:52.920 --> 00:57:55.130 align:start position:0%
sampling so every 5 milliseconds I tried
to<00:57:53.040><c> get</c><00:57:53.190><c> what</c><00:57:53.490><c> routine</c><00:57:54.180><c> we</c><00:57:54.299><c> are</c><00:57:54.420><c> using</c><00:57:54.599><c> I</c><00:57:54.869><c> could</c>

00:57:55.130 --> 00:57:55.140 align:start position:0%
to get what routine we are using I could
 

00:57:55.140 --> 00:57:57.349 align:start position:0%
to get what routine we are using I could
crank<00:57:55.349><c> this</c><00:57:55.530><c> down</c><00:57:55.589><c> or</c><00:57:56.160><c> up</c><00:57:56.309><c> I</c><00:57:56.609><c> could</c><00:57:56.970><c> also</c><00:57:57.089><c> go</c><00:57:57.299><c> to</c>

00:57:57.349 --> 00:57:57.359 align:start position:0%
crank this down or up I could also go to
 

00:57:57.359 --> 00:57:58.970 align:start position:0%
crank this down or up I could also go to
this<00:57:57.540><c> method</c><00:57:58.049><c> called</c><00:57:58.170><c> instrumentation</c><00:57:58.829><c> which</c>

00:57:58.970 --> 00:57:58.980 align:start position:0%
this method called instrumentation which
 

00:57:58.980 --> 00:58:02.120 align:start position:0%
this method called instrumentation which
is<00:57:59.160><c> every</c><00:57:59.760><c> single</c><00:58:00.000><c> instruction</c><00:58:00.740><c> every</c><00:58:01.740><c> single</c>

00:58:02.120 --> 00:58:02.130 align:start position:0%
is every single instruction every single
 

00:58:02.130 --> 00:58:04.700 align:start position:0%
is every single instruction every single
call<00:58:02.369><c> is</c><00:58:02.609><c> being</c><00:58:02.819><c> calculated</c><00:58:03.720><c> so</c><00:58:04.200><c> that</c><00:58:04.380><c> you</c>

00:58:04.700 --> 00:58:04.710 align:start position:0%
call is being calculated so that you
 

00:58:04.710 --> 00:58:06.200 align:start position:0%
call is being calculated so that you
don't<00:58:05.130><c> miss</c><00:58:05.309><c> anything</c><00:58:05.609><c> because</c><00:58:05.819><c> it</c><00:58:06.059><c> only</c>

00:58:06.200 --> 00:58:06.210 align:start position:0%
don't miss anything because it only
 

00:58:06.210 --> 00:58:07.789 align:start position:0%
don't miss anything because it only
happened<00:58:06.569><c> for</c><00:58:06.720><c> half</c><00:58:06.930><c> a</c><00:58:07.020><c> millisecond</c><00:58:07.589><c> and</c><00:58:07.650><c> you</c>

00:58:07.789 --> 00:58:07.799 align:start position:0%
happened for half a millisecond and you
 

00:58:07.799 --> 00:58:09.109 align:start position:0%
happened for half a millisecond and you
happen<00:58:08.190><c> to</c><00:58:08.220><c> always</c><00:58:08.490><c> miss</c><00:58:08.700><c> that</c><00:58:08.730><c> half</c><00:58:09.030><c> a</c>

00:58:09.109 --> 00:58:09.119 align:start position:0%
happen to always miss that half a
 

00:58:09.119 --> 00:58:10.789 align:start position:0%
happen to always miss that half a
millisecond<00:58:09.690><c> sampling</c><00:58:10.380><c> usually</c><00:58:10.650><c> works</c>

00:58:10.789 --> 00:58:10.799 align:start position:0%
millisecond sampling usually works
 

00:58:10.799 --> 00:58:12.170 align:start position:0%
millisecond sampling usually works
pretty<00:58:10.950><c> well</c><00:58:11.040><c> instrumentation</c><00:58:11.910><c> will</c><00:58:12.030><c> slow</c>

00:58:12.170 --> 00:58:12.180 align:start position:0%
pretty well instrumentation will slow
 

00:58:12.180 --> 00:58:15.650 align:start position:0%
pretty well instrumentation will slow
your<00:58:12.299><c> app</c><00:58:12.450><c> down</c><00:58:12.660><c> even</c><00:58:12.930><c> more</c><00:58:13.250><c> a</c><00:58:14.480><c> couple</c><00:58:15.480><c> things</c>

00:58:15.650 --> 00:58:15.660 align:start position:0%
your app down even more a couple things
 

00:58:15.660 --> 00:58:18.819 align:start position:0%
your app down even more a couple things
about<00:58:16.339><c> running</c><00:58:17.339><c> this</c><00:58:17.490><c> this</c><00:58:18.000><c> requires</c><00:58:18.420><c> the</c>

00:58:18.819 --> 00:58:18.829 align:start position:0%
about running this this requires the
 

00:58:18.829 --> 00:58:22.700 align:start position:0%
about running this this requires the
1:31<00:58:19.829><c> interpreter</c><00:58:20.730><c> or</c><00:58:20.849><c> hotspot</c><00:58:21.710><c> version</c>

00:58:22.700 --> 00:58:22.710 align:start position:0%
1:31 interpreter or hotspot version
 

00:58:22.710 --> 00:58:25.640 align:start position:0%
1:31 interpreter or hotspot version
that's<00:58:23.520><c> in</c><00:58:23.640><c> DP</c><00:58:23.940><c> one</c><00:58:24.119><c> I'm</c><00:58:24.869><c> running</c><00:58:25.230><c> this</c><00:58:25.349><c> all</c><00:58:25.500><c> on</c>

00:58:25.640 --> 00:58:25.650 align:start position:0%
that's in DP one I'm running this all on
 

00:58:25.650 --> 00:58:27.559 align:start position:0%
that's in DP one I'm running this all on
the<00:58:25.740><c> interpreter</c><00:58:26.220><c> from</c><00:58:26.430><c> a</c><00:58:26.579><c> pre</c><00:58:26.970><c> DP</c><00:58:27.359><c> one</c>

00:58:27.559 --> 00:58:27.569 align:start position:0%
the interpreter from a pre DP one
 

00:58:27.569 --> 00:58:29.359 align:start position:0%
the interpreter from a pre DP one
release<00:58:27.930><c> that's</c><00:58:28.170><c> why</c><00:58:28.290><c> my</c><00:58:28.530><c> app</c><00:58:28.710><c> is</c><00:58:28.829><c> even</c><00:58:29.069><c> slower</c>

00:58:29.359 --> 00:58:29.369 align:start position:0%
release that's why my app is even slower
 

00:58:29.369 --> 00:58:31.190 align:start position:0%
release that's why my app is even slower
but<00:58:29.609><c> it</c><00:58:29.849><c> worked</c><00:58:30.059><c> pretty</c><00:58:30.180><c> well</c><00:58:30.299><c> for</c><00:58:30.420><c> this</c><00:58:30.630><c> sort</c>

00:58:31.190 --> 00:58:31.200 align:start position:0%
but it worked pretty well for this sort
 

00:58:31.200 --> 00:58:35.990 align:start position:0%
but it worked pretty well for this sort
demo<00:58:31.500><c> and</c><00:58:33.140><c> the</c><00:58:34.140><c> the</c><00:58:34.859><c> other</c><00:58:34.980><c> thing</c><00:58:35.250><c> is</c><00:58:35.490><c> that</c><00:58:35.760><c> I</c>

00:58:35.990 --> 00:58:36.000 align:start position:0%
demo and the the other thing is that I
 

00:58:36.000 --> 00:58:37.970 align:start position:0%
demo and the the other thing is that I
just<00:58:36.299><c> wanted</c><00:58:36.540><c> to</c><00:58:36.630><c> mention</c><00:58:36.720><c> again</c><00:58:36.869><c> this</c><00:58:37.020><c> UI</c><00:58:37.319><c> was</c>

00:58:37.970 --> 00:58:37.980 align:start position:0%
just wanted to mention again this UI was
 

00:58:37.980 --> 00:58:40.760 align:start position:0%
just wanted to mention again this UI was
done<00:58:38.160><c> in</c><00:58:38.280><c> IFC</c><00:58:38.760><c> the</c><00:58:39.089><c> guy</c><00:58:39.240><c> who</c><00:58:39.299><c> writes</c><00:58:40.079><c> optimize</c>

00:58:40.760 --> 00:58:40.770 align:start position:0%
done in IFC the guy who writes optimize
 

00:58:40.770 --> 00:58:42.890 align:start position:0%
done in IFC the guy who writes optimize
it<00:58:40.950><c> wrote</c><00:58:41.190><c> IFC</c><00:58:41.640><c> so</c><00:58:41.819><c> he</c><00:58:41.940><c> loves</c><00:58:42.240><c> it</c>

00:58:42.890 --> 00:58:42.900 align:start position:0%
it wrote IFC so he loves it
 

00:58:42.900 --> 00:58:44.630 align:start position:0%
it wrote IFC so he loves it
but<00:58:43.230><c> that's</c><00:58:43.500><c> why</c><00:58:43.619><c> it's</c><00:58:43.740><c> not</c><00:58:43.859><c> an</c><00:58:44.099><c> aqua</c><00:58:44.369><c> look</c><00:58:44.520><c> and</c>

00:58:44.630 --> 00:58:44.640 align:start position:0%
but that's why it's not an aqua look and
 

00:58:44.640 --> 00:58:46.730 align:start position:0%
but that's why it's not an aqua look and
feel<00:58:44.819><c> because</c><00:58:44.970><c> his</c><00:58:45.270><c> own</c><00:58:45.480><c> UI</c><00:58:46.020><c> inside</c><00:58:46.500><c> of</c><00:58:46.589><c> there</c>

00:58:46.730 --> 00:58:46.740 align:start position:0%
feel because his own UI inside of there
 

00:58:46.740 --> 00:58:49.430 align:start position:0%
feel because his own UI inside of there
and<00:58:47.730><c> if</c><00:58:47.880><c> you're</c><00:58:48.000><c> interested</c><00:58:48.390><c> on</c><00:58:48.569><c> finding</c><00:58:49.319><c> out</c>

00:58:49.430 --> 00:58:49.440 align:start position:0%
and if you're interested on finding out
 

00:58:49.440 --> 00:58:52.430 align:start position:0%
and if you're interested on finding out
when<00:58:49.740><c> it's</c><00:58:49.890><c> going</c><00:58:50.040><c> to</c><00:58:50.099><c> be</c><00:58:50.190><c> available</c><00:58:50.809><c> and</c><00:58:51.809><c> how</c>

00:58:52.430 --> 00:58:52.440 align:start position:0%
when it's going to be available and how
 

00:58:52.440 --> 00:58:53.240 align:start position:0%
when it's going to be available and how
much<00:58:52.589><c> it's</c><00:58:52.740><c> going</c><00:58:52.829><c> to</c><00:58:52.890><c> cost</c>

00:58:53.240 --> 00:58:53.250 align:start position:0%
much it's going to cost
 

00:58:53.250 --> 00:58:56.570 align:start position:0%
much it's going to cost
all<00:58:53.340><c> that</c><00:58:53.580><c> contact</c><00:58:54.420><c> vm</c><00:58:54.810><c> gear</c><00:58:55.140><c> its</c><00:58:56.070><c> vm</c><00:58:56.340><c> gear</c>

00:58:56.570 --> 00:58:56.580 align:start position:0%
all that contact vm gear its vm gear
 

00:58:56.580 --> 00:58:59.720 align:start position:0%
all that contact vm gear its vm gear
calm<00:58:57.000><c> and</c><00:58:57.390><c> I'm</c><00:58:58.380><c> sure</c><00:58:58.590><c> they'd</c><00:58:58.830><c> love</c><00:58:58.860><c> to</c><00:58:59.340><c> hear</c>

00:58:59.720 --> 00:58:59.730 align:start position:0%
calm and I'm sure they'd love to hear
 

00:58:59.730 --> 00:59:02.030 align:start position:0%
calm and I'm sure they'd love to hear
from<00:58:59.820><c> all</c><00:59:00.000><c> you</c><00:59:00.150><c> guys</c><00:59:00.300><c> because</c><00:59:00.750><c> they</c><00:59:01.260><c> they</c><00:59:01.860><c> got</c>

00:59:02.030 --> 00:59:02.040 align:start position:0%
from all you guys because they they got
 

00:59:02.040 --> 00:59:03.440 align:start position:0%
from all you guys because they they got
this<00:59:02.220><c> up</c><00:59:02.430><c> and</c><00:59:02.580><c> working</c><00:59:02.760><c> and</c><00:59:03.030><c> they're</c><00:59:03.150><c> excited</c>

00:59:03.440 --> 00:59:03.450 align:start position:0%
this up and working and they're excited
 

00:59:03.450 --> 00:59:05.510 align:start position:0%
this up and working and they're excited
to<00:59:03.630><c> have</c><00:59:03.870><c> a</c><00:59:03.900><c> whole</c><00:59:04.230><c> bunch</c><00:59:04.260><c> of</c><00:59:04.500><c> sales</c><00:59:04.710><c> to</c><00:59:05.040><c> Java</c>

00:59:05.510 --> 00:59:05.520 align:start position:0%
to have a whole bunch of sales to Java
 

00:59:05.520 --> 00:59:12.890 align:start position:0%
to have a whole bunch of sales to Java
programmers<00:59:06.120><c> so</c><00:59:06.710><c> that's</c><00:59:07.710><c> about</c><00:59:07.830><c> it</c><00:59:11.840><c> there's</c><00:59:12.840><c> a</c>

00:59:12.890 --> 00:59:12.900 align:start position:0%
programmers so that's about it there's a
 

00:59:12.900 --> 00:59:14.300 align:start position:0%
programmers so that's about it there's a
little<00:59:13.110><c> slide</c><00:59:13.380><c> with</c><00:59:13.590><c> the</c><00:59:13.680><c> roadmap</c><00:59:13.890><c> of</c><00:59:14.250><c> the</c>

00:59:14.300 --> 00:59:14.310 align:start position:0%
little slide with the roadmap of the
 

00:59:14.310 --> 00:59:15.730 align:start position:0%
little slide with the roadmap of the
relevant<00:59:14.700><c> talks</c><00:59:14.940><c> that</c><00:59:15.180><c> are</c><00:59:15.270><c> coming</c><00:59:15.570><c> up</c>

00:59:15.730 --> 00:59:15.740 align:start position:0%
relevant talks that are coming up
 

00:59:15.740 --> 00:59:18.610 align:start position:0%
relevant talks that are coming up
following<00:59:16.740><c> this</c><00:59:16.980><c> one</c><00:59:17.190><c> there's</c><00:59:18.030><c> a</c>

00:59:18.610 --> 00:59:18.620 align:start position:0%
following this one there's a
 

00:59:18.620 --> 00:59:20.750 align:start position:0%
following this one there's a
demonstration<00:59:19.620><c> and</c><00:59:19.920><c> talk</c><00:59:20.100><c> of</c><00:59:20.280><c> jet</c><00:59:20.490><c> about</c>

00:59:20.750 --> 00:59:20.760 align:start position:0%
demonstration and talk of jet about
 

00:59:20.760 --> 00:59:24.350 align:start position:0%
demonstration and talk of jet about
jbuilder<00:59:21.120><c> that</c><00:59:21.690><c> you</c><00:59:21.750><c> might</c><00:59:21.900><c> want</c><00:59:22.050><c> to</c><00:59:22.110><c> go</c><00:59:22.230><c> to</c><00:59:23.360><c> in</c>

00:59:24.350 --> 00:59:24.360 align:start position:0%
jbuilder that you might want to go to in
 

00:59:24.360 --> 00:59:25.910 align:start position:0%
jbuilder that you might want to go to in
the<00:59:24.510><c> Civic</c><00:59:24.780><c> Center</c><00:59:25.080><c> just</c><00:59:25.320><c> like</c><00:59:25.380><c> just</c><00:59:25.770><c> after</c>

00:59:25.910 --> 00:59:25.920 align:start position:0%
the Civic Center just like just after
 

00:59:25.920 --> 00:59:29.240 align:start position:0%
the Civic Center just like just after
this<00:59:26.160><c> talk</c><00:59:26.460><c> and</c><00:59:26.700><c> then</c><00:59:28.040><c> some</c><00:59:29.040><c> of</c><00:59:29.130><c> the</c><00:59:29.220><c> other</c>

00:59:29.240 --> 00:59:29.250 align:start position:0%
this talk and then some of the other
 

00:59:29.250 --> 00:59:31.430 align:start position:0%
this talk and then some of the other
ones<00:59:29.520><c> QuickTime</c><00:59:30.000><c> for</c><00:59:30.210><c> Java</c><00:59:30.420><c> as</c><00:59:30.870><c> I</c><00:59:31.050><c> mentioned</c>

00:59:31.430 --> 00:59:31.440 align:start position:0%
ones QuickTime for Java as I mentioned
 

00:59:31.440 --> 00:59:34.670 align:start position:0%
ones QuickTime for Java as I mentioned
in<00:59:31.530><c> my</c><00:59:31.560><c> in</c><00:59:32.040><c> my</c><00:59:32.400><c> bit</c><00:59:33.020><c> Apple</c><00:59:34.020><c> performance</c><00:59:34.500><c> tools</c>

00:59:34.670 --> 00:59:34.680 align:start position:0%
in my in my bit Apple performance tools
 

00:59:34.680 --> 00:59:36.020 align:start position:0%
in my in my bit Apple performance tools
that'll<00:59:35.010><c> give</c><00:59:35.100><c> you</c><00:59:35.190><c> more</c><00:59:35.220><c> information</c><00:59:35.910><c> about</c>

00:59:36.020 --> 00:59:36.030 align:start position:0%
that'll give you more information about
 

00:59:36.030 --> 00:59:37.640 align:start position:0%
that'll give you more information about
the<00:59:36.240><c> performance</c><00:59:36.390><c> tools</c><00:59:36.960><c> if</c><00:59:37.380><c> you're</c>

00:59:37.640 --> 00:59:37.650 align:start position:0%
the performance tools if you're
 

00:59:37.650 --> 00:59:40.820 align:start position:0%
the performance tools if you're
specifically<00:59:38.190><c> interested</c><00:59:38.310><c> in</c><00:59:38.850><c> that</c><00:59:39.710><c> so</c><00:59:40.710><c> what</c>

00:59:40.820 --> 00:59:40.830 align:start position:0%
specifically interested in that so what
 

00:59:40.830 --> 00:59:42.950 align:start position:0%
specifically interested in that so what
we'll<00:59:40.920><c> do</c><00:59:41.010><c> now</c><00:59:41.040><c> is</c><00:59:41.190><c> we'll</c><00:59:41.430><c> have</c><00:59:41.490><c> a</c><00:59:41.720><c> quick</c><00:59:42.720><c> queen</c>

00:59:42.950 --> 00:59:42.960 align:start position:0%
we'll do now is we'll have a quick queen
 

00:59:42.960 --> 00:59:54.289 align:start position:0%
we'll do now is we'll have a quick queen
Q&amp;A<00:59:43.650><c> session</c><00:59:44.130><c> I'll</c><00:59:45.000><c> invite</c><00:59:45.360><c> the</c><00:59:45.570><c> rest</c><00:59:45.750><c> of</c><00:59:45.960><c> the</c>

00:59:54.289 --> 00:59:54.299 align:start position:0%
 
 

00:59:54.299 --> 00:59:56.359 align:start position:0%
 
you

