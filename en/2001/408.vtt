WEBVTT
Kind: captions
Language: en

00:00:01.050 --> 00:00:03.800 align:start position:0%
 
good<00:00:01.860><c> morning</c><00:00:02.130><c> everyone</c><00:00:02.610><c> to</c><00:00:03.120><c> present</c><00:00:03.450><c> session</c>

00:00:03.800 --> 00:00:03.810 align:start position:0%
good morning everyone to present session
 

00:00:03.810 --> 00:00:06.920 align:start position:0%
good morning everyone to present session
408<00:00:04.800><c> OpenGL</c><00:00:05.760><c> advanced</c><00:00:06.120><c> optimizations</c><00:00:06.870><c> that</c>

00:00:06.920 --> 00:00:06.930 align:start position:0%
408 OpenGL advanced optimizations that
 

00:00:06.930 --> 00:00:13.339 align:start position:0%
408 OpenGL advanced optimizations that
Elektra<00:00:07.349><c> introduced</c><00:00:08.629><c> OpenGL</c><00:00:11.089><c> manager</c><00:00:12.349><c> John</c>

00:00:13.339 --> 00:00:13.349 align:start position:0%
Elektra introduced OpenGL manager John
 

00:00:13.349 --> 00:00:21.410 align:start position:0%
Elektra introduced OpenGL manager John
Stauffer<00:00:19.070><c> hi</c><00:00:20.070><c> so</c><00:00:20.670><c> today</c><00:00:20.699><c> we're</c><00:00:21.029><c> gonna</c><00:00:21.090><c> talk</c>

00:00:21.410 --> 00:00:21.420 align:start position:0%
Stauffer hi so today we're gonna talk
 

00:00:21.420 --> 00:00:24.470 align:start position:0%
Stauffer hi so today we're gonna talk
about<00:00:22.369><c> advanced</c><00:00:23.369><c> optimizations</c><00:00:24.029><c> in</c><00:00:24.090><c> OpenGL</c>

00:00:24.470 --> 00:00:24.480 align:start position:0%
about advanced optimizations in OpenGL
 

00:00:24.480 --> 00:00:26.900 align:start position:0%
about advanced optimizations in OpenGL
so<00:00:25.410><c> hopefully</c><00:00:25.830><c> we'll</c><00:00:25.980><c> learn</c><00:00:26.009><c> a</c><00:00:26.490><c> few</c><00:00:26.849><c> things</c>

00:00:26.900 --> 00:00:26.910 align:start position:0%
so hopefully we'll learn a few things
 

00:00:26.910 --> 00:00:30.230 align:start position:0%
so hopefully we'll learn a few things
about<00:00:27.500><c> how</c><00:00:28.500><c> OpenGL</c><00:00:28.890><c> works</c><00:00:29.160><c> and</c><00:00:29.730><c> things</c><00:00:30.119><c> you</c>

00:00:30.230 --> 00:00:30.240 align:start position:0%
about how OpenGL works and things you
 

00:00:30.240 --> 00:00:32.089 align:start position:0%
about how OpenGL works and things you
can<00:00:30.390><c> do</c><00:00:30.509><c> to</c><00:00:30.750><c> try</c><00:00:31.050><c> to</c><00:00:31.080><c> tune</c><00:00:31.349><c> your</c><00:00:31.529><c> applications</c>

00:00:32.089 --> 00:00:32.099 align:start position:0%
can do to try to tune your applications
 

00:00:32.099 --> 00:00:41.900 align:start position:0%
can do to try to tune your applications
so<00:00:38.090><c> so</c><00:00:39.090><c> what</c><00:00:39.870><c> we'll</c><00:00:39.990><c> learn</c><00:00:40.110><c> is</c><00:00:40.640><c> the</c><00:00:41.640><c> key</c>

00:00:41.900 --> 00:00:41.910 align:start position:0%
so so what we'll learn is the key
 

00:00:41.910 --> 00:00:43.640 align:start position:0%
so so what we'll learn is the key
components<00:00:42.450><c> that</c><00:00:42.510><c> you</c><00:00:42.990><c> need</c><00:00:43.020><c> to</c><00:00:43.200><c> look</c><00:00:43.320><c> at</c><00:00:43.500><c> when</c>

00:00:43.640 --> 00:00:43.650 align:start position:0%
components that you need to look at when
 

00:00:43.650 --> 00:00:45.290 align:start position:0%
components that you need to look at when
you're<00:00:43.800><c> trying</c><00:00:44.130><c> to</c><00:00:44.370><c> tune</c><00:00:44.730><c> your</c><00:00:44.850><c> application</c>

00:00:45.290 --> 00:00:45.300 align:start position:0%
you're trying to tune your application
 

00:00:45.300 --> 00:00:47.780 align:start position:0%
you're trying to tune your application
for<00:00:45.450><c> higher</c><00:00:45.630><c> frame</c><00:00:45.900><c> rates</c><00:00:46.280><c> the</c><00:00:47.280><c> thing</c><00:00:47.640><c> that</c><00:00:47.760><c> I</c>

00:00:47.780 --> 00:00:47.790 align:start position:0%
for higher frame rates the thing that I
 

00:00:47.790 --> 00:00:49.520 align:start position:0%
for higher frame rates the thing that I
always<00:00:47.880><c> like</c><00:00:48.180><c> to</c><00:00:48.210><c> start</c><00:00:48.450><c> talking</c><00:00:48.720><c> about</c><00:00:49.020><c> is</c>

00:00:49.520 --> 00:00:49.530 align:start position:0%
always like to start talking about is
 

00:00:49.530 --> 00:00:53.690 align:start position:0%
always like to start talking about is
application<00:00:50.690><c> component</c><00:00:51.690><c> and</c><00:00:52.340><c> the</c><00:00:53.340><c> reason</c><00:00:53.610><c> for</c>

00:00:53.690 --> 00:00:53.700 align:start position:0%
application component and the reason for
 

00:00:53.700 --> 00:00:56.630 align:start position:0%
application component and the reason for
that<00:00:53.760><c> is</c><00:00:54.030><c> that</c><00:00:54.260><c> about</c><00:00:55.260><c> 75%</c><00:00:56.130><c> of</c><00:00:56.160><c> the</c><00:00:56.220><c> time</c><00:00:56.400><c> is</c>

00:00:56.630 --> 00:00:56.640 align:start position:0%
that is that about 75% of the time is
 

00:00:56.640 --> 00:00:59.060 align:start position:0%
that is that about 75% of the time is
spent<00:00:56.760><c> in</c><00:00:57.150><c> the</c><00:00:57.780><c> application</c><00:00:58.350><c> in</c><00:00:58.590><c> a</c><00:00:58.740><c> comedy</c>

00:00:59.060 --> 00:00:59.070 align:start position:0%
spent in the application in a comedy
 

00:00:59.070 --> 00:01:02.810 align:start position:0%
spent in the application in a comedy
OpenGL<00:00:59.370><c> app</c><00:00:59.700><c> and</c><00:01:00.510><c> so</c><00:01:01.290><c> therefore</c><00:01:01.440><c> since</c><00:01:02.100><c> 75%</c>

00:01:02.810 --> 00:01:02.820 align:start position:0%
OpenGL app and so therefore since 75%
 

00:01:02.820 --> 00:01:05.240 align:start position:0%
OpenGL app and so therefore since 75%
the<00:01:02.880><c> time</c><00:01:03.060><c> is</c><00:01:03.210><c> spent</c><00:01:03.450><c> there</c><00:01:03.949><c> that's</c><00:01:04.949><c> where</c><00:01:05.129><c> you</c>

00:01:05.240 --> 00:01:05.250 align:start position:0%
the time is spent there that's where you
 

00:01:05.250 --> 00:01:06.889 align:start position:0%
the time is spent there that's where you
have<00:01:05.429><c> the</c><00:01:05.759><c> potential</c><00:01:06.149><c> for</c><00:01:06.479><c> getting</c><00:01:06.570><c> the</c><00:01:06.750><c> most</c>

00:01:06.889 --> 00:01:06.899 align:start position:0%
have the potential for getting the most
 

00:01:06.899 --> 00:01:08.690 align:start position:0%
have the potential for getting the most
benefit<00:01:07.289><c> so</c><00:01:07.979><c> if</c><00:01:08.100><c> you</c><00:01:08.189><c> don't</c><00:01:08.369><c> tune</c><00:01:08.549><c> your</c>

00:01:08.690 --> 00:01:08.700 align:start position:0%
benefit so if you don't tune your
 

00:01:08.700 --> 00:01:10.340 align:start position:0%
benefit so if you don't tune your
application<00:01:09.210><c> obviously</c><00:01:09.630><c> you're</c><00:01:10.020><c> not</c><00:01:10.200><c> going</c>

00:01:10.340 --> 00:01:10.350 align:start position:0%
application obviously you're not going
 

00:01:10.350 --> 00:01:11.810 align:start position:0%
application obviously you're not going
to<00:01:10.409><c> get</c><00:01:10.560><c> a</c><00:01:10.590><c> lot</c><00:01:10.799><c> out</c><00:01:10.979><c> of</c><00:01:11.009><c> OpenGL</c><00:01:11.340><c> because</c>

00:01:11.810 --> 00:01:11.820 align:start position:0%
to get a lot out of OpenGL because
 

00:01:11.820 --> 00:01:14.120 align:start position:0%
to get a lot out of OpenGL because
you'll<00:01:11.969><c> spend</c><00:01:12.299><c> too</c><00:01:13.049><c> much</c><00:01:13.170><c> time</c><00:01:13.229><c> in</c><00:01:13.469><c> navigation</c>

00:01:14.120 --> 00:01:14.130 align:start position:0%
you'll spend too much time in navigation
 

00:01:14.130 --> 00:01:15.620 align:start position:0%
you'll spend too much time in navigation
so<00:01:14.670><c> we'll</c><00:01:14.820><c> spend</c><00:01:15.000><c> some</c><00:01:15.060><c> time</c><00:01:15.270><c> just</c><00:01:15.299><c> talking</c>

00:01:15.620 --> 00:01:15.630 align:start position:0%
so we'll spend some time just talking
 

00:01:15.630 --> 00:01:17.929 align:start position:0%
so we'll spend some time just talking
about<00:01:16.340><c> techniques</c><00:01:17.340><c> for</c><00:01:17.579><c> tuning</c><00:01:17.850><c> your</c>

00:01:17.929 --> 00:01:17.939 align:start position:0%
about techniques for tuning your
 

00:01:17.939 --> 00:01:19.429 align:start position:0%
about techniques for tuning your
application<00:01:18.420><c> to</c><00:01:18.570><c> drive</c><00:01:18.780><c> up</c><00:01:18.960><c> in</c><00:01:19.049><c> jail</c><00:01:19.140><c> better</c>

00:01:19.429 --> 00:01:19.439 align:start position:0%
application to drive up in jail better
 

00:01:19.439 --> 00:01:23.300 align:start position:0%
application to drive up in jail better
and<00:01:20.450><c> some</c><00:01:21.450><c> hints</c><00:01:21.659><c> on</c><00:01:21.869><c> and</c><00:01:22.259><c> tips</c><00:01:22.799><c> on</c><00:01:22.950><c> how</c><00:01:23.070><c> to</c><00:01:23.100><c> do</c>

00:01:23.300 --> 00:01:23.310 align:start position:0%
and some hints on and tips on how to do
 

00:01:23.310 --> 00:01:26.300 align:start position:0%
and some hints on and tips on how to do
that<00:01:23.460><c> the</c><00:01:24.329><c> second</c><00:01:24.600><c> thing</c><00:01:24.749><c> is</c><00:01:24.929><c> setup</c><00:01:25.229><c> so</c><00:01:25.590><c> how</c><00:01:26.249><c> to</c>

00:01:26.300 --> 00:01:26.310 align:start position:0%
that the second thing is setup so how to
 

00:01:26.310 --> 00:01:29.690 align:start position:0%
that the second thing is setup so how to
properly<00:01:26.939><c> setup</c><00:01:27.240><c> OpenGL</c><00:01:27.810><c> how</c><00:01:28.020><c> to</c><00:01:28.079><c> get</c><00:01:28.700><c> some</c>

00:01:29.690 --> 00:01:29.700 align:start position:0%
properly setup OpenGL how to get some
 

00:01:29.700 --> 00:01:32.050 align:start position:0%
properly setup OpenGL how to get some
machine<00:01:30.270><c> information</c><00:01:30.840><c> how</c><00:01:31.049><c> to</c><00:01:31.079><c> properly</c>

00:01:32.050 --> 00:01:32.060 align:start position:0%
machine information how to properly
 

00:01:32.060 --> 00:01:34.630 align:start position:0%
machine information how to properly
configure<00:01:33.060><c> and</c><00:01:33.600><c> scale</c><00:01:33.899><c> your</c><00:01:34.140><c> application</c>

00:01:34.630 --> 00:01:34.640 align:start position:0%
configure and scale your application
 

00:01:34.640 --> 00:01:37.459 align:start position:0%
configure and scale your application
such<00:01:35.640><c> that</c><00:01:35.909><c> it</c><00:01:36.420><c> will</c><00:01:36.630><c> run</c><00:01:36.810><c> well</c><00:01:37.170><c> on</c><00:01:37.350><c> the</c>

00:01:37.459 --> 00:01:37.469 align:start position:0%
such that it will run well on the
 

00:01:37.469 --> 00:01:40.130 align:start position:0%
such that it will run well on the
machine<00:01:37.740><c> that</c><00:01:37.859><c> you're</c><00:01:37.979><c> targeting</c><00:01:38.189><c> the</c><00:01:39.140><c> third</c>

00:01:40.130 --> 00:01:40.140 align:start position:0%
machine that you're targeting the third
 

00:01:40.140 --> 00:01:41.690 align:start position:0%
machine that you're targeting the third
thing<00:01:40.380><c> is</c><00:01:40.499><c> state</c><00:01:40.710><c> management</c><00:01:41.130><c> so</c><00:01:41.490><c> state</c>

00:01:41.690 --> 00:01:41.700 align:start position:0%
thing is state management so state
 

00:01:41.700 --> 00:01:46.160 align:start position:0%
thing is state management so state
management<00:01:42.149><c> basically</c><00:01:42.390><c> is</c><00:01:44.240><c> where</c><00:01:45.240><c> a</c><00:01:45.600><c> large</c>

00:01:46.160 --> 00:01:46.170 align:start position:0%
management basically is where a large
 

00:01:46.170 --> 00:01:49.370 align:start position:0%
management basically is where a large
percent<00:01:46.560><c> of</c><00:01:46.619><c> the</c><00:01:46.679><c> time</c><00:01:46.889><c> that</c><00:01:47.130><c> is</c><00:01:47.280><c> spent</c><00:01:48.229><c> in</c><00:01:49.229><c> the</c>

00:01:49.370 --> 00:01:49.380 align:start position:0%
percent of the time that is spent in the
 

00:01:49.380 --> 00:01:51.919 align:start position:0%
percent of the time that is spent in the
actual<00:01:49.649><c> OpenGL</c><00:01:50.159><c> time</c><00:01:50.729><c> frame</c><00:01:51.090><c> is</c><00:01:51.299><c> spent</c><00:01:51.810><c> in</c>

00:01:51.919 --> 00:01:51.929 align:start position:0%
actual OpenGL time frame is spent in
 

00:01:51.929 --> 00:01:53.149 align:start position:0%
actual OpenGL time frame is spent in
state<00:01:52.079><c> management</c><00:01:52.380><c> so</c><00:01:52.679><c> state</c><00:01:52.920><c> management</c>

00:01:53.149 --> 00:01:53.159 align:start position:0%
state management so state management
 

00:01:53.159 --> 00:01:54.980 align:start position:0%
state management so state management
actually<00:01:53.369><c> is</c><00:01:53.609><c> more</c><00:01:53.789><c> important</c><00:01:54.119><c> than</c><00:01:54.210><c> a</c><00:01:54.450><c> lot</c><00:01:54.899><c> of</c>

00:01:54.980 --> 00:01:54.990 align:start position:0%
actually is more important than a lot of
 

00:01:54.990 --> 00:01:57.800 align:start position:0%
actually is more important than a lot of
people<00:01:55.200><c> think</c><00:01:55.409><c> if</c><00:01:55.560><c> you</c><00:01:56.509><c> do</c><00:01:57.509><c> a</c><00:01:57.539><c> lot</c><00:01:57.749><c> of</c>

00:01:57.800 --> 00:01:57.810 align:start position:0%
people think if you do a lot of
 

00:01:57.810 --> 00:02:01.489 align:start position:0%
people think if you do a lot of
thrashing<00:01:58.590><c> of</c><00:01:58.920><c> state</c><00:01:59.189><c> in</c><00:01:59.939><c> OpenGL</c><00:02:00.479><c> you</c><00:02:01.020><c> can</c>

00:02:01.489 --> 00:02:01.499 align:start position:0%
thrashing of state in OpenGL you can
 

00:02:01.499 --> 00:02:03.230 align:start position:0%
thrashing of state in OpenGL you can
actually<00:02:01.829><c> decrease</c><00:02:02.579><c> your</c><00:02:02.729><c> performance</c><00:02:03.090><c> quite</c>

00:02:03.230 --> 00:02:03.240 align:start position:0%
actually decrease your performance quite
 

00:02:03.240 --> 00:02:05.989 align:start position:0%
actually decrease your performance quite
a<00:02:03.270><c> bit</c><00:02:03.530><c> texture</c><00:02:04.530><c> management</c><00:02:04.999><c> texture</c>

00:02:05.989 --> 00:02:05.999 align:start position:0%
a bit texture management texture
 

00:02:05.999 --> 00:02:07.669 align:start position:0%
a bit texture management texture
management<00:02:06.359><c> is</c><00:02:06.420><c> important</c><00:02:06.810><c> to</c><00:02:06.990><c> keep</c><00:02:07.350><c> your</c>

00:02:07.669 --> 00:02:07.679 align:start position:0%
management is important to keep your
 

00:02:07.679 --> 00:02:10.280 align:start position:0%
management is important to keep your
application<00:02:08.090><c> correct</c><00:02:09.119><c> correctly</c><00:02:09.720><c> scaled</c><00:02:09.840><c> for</c>

00:02:10.280 --> 00:02:10.290 align:start position:0%
application correct correctly scaled for
 

00:02:10.290 --> 00:02:13.580 align:start position:0%
application correct correctly scaled for
the<00:02:10.350><c> hardware</c><00:02:10.580><c> so</c><00:02:11.580><c> that</c><00:02:11.790><c> you're</c><00:02:11.940><c> not</c><00:02:12.530><c> paging</c><00:02:13.530><c> a</c>

00:02:13.580 --> 00:02:13.590 align:start position:0%
the hardware so that you're not paging a
 

00:02:13.590 --> 00:02:14.630 align:start position:0%
the hardware so that you're not paging a
lot<00:02:13.770><c> you're</c><00:02:13.980><c> not</c><00:02:14.100><c> spending</c><00:02:14.310><c> a</c><00:02:14.460><c> lot</c>

00:02:14.630 --> 00:02:14.640 align:start position:0%
lot you're not spending a lot
 

00:02:14.640 --> 00:02:19.160 align:start position:0%
lot you're not spending a lot
time<00:02:16.700><c> running</c><00:02:17.700><c> out</c><00:02:17.970><c> of</c><00:02:18.210><c> video</c><00:02:18.540><c> memory</c><00:02:18.840><c> and</c>

00:02:19.160 --> 00:02:19.170 align:start position:0%
time running out of video memory and
 

00:02:19.170 --> 00:02:22.160 align:start position:0%
time running out of video memory and
paging<00:02:19.500><c> on</c><00:02:19.620><c> and</c><00:02:19.770><c> off</c><00:02:20.060><c> vertex</c><00:02:21.060><c> operations</c><00:02:21.630><c> so</c>

00:02:22.160 --> 00:02:22.170 align:start position:0%
paging on and off vertex operations so
 

00:02:22.170 --> 00:02:24.559 align:start position:0%
paging on and off vertex operations so
vertex<00:02:22.530><c> operations</c><00:02:23.130><c> are</c><00:02:23.569><c> important</c>

00:02:24.559 --> 00:02:24.569 align:start position:0%
vertex operations are important
 

00:02:24.569 --> 00:02:26.390 align:start position:0%
vertex operations are important
obviously<00:02:24.660><c> to</c><00:02:25.080><c> be</c><00:02:25.740><c> able</c><00:02:25.830><c> to</c><00:02:25.950><c> get</c><00:02:26.069><c> a</c><00:02:26.100><c> lot</c><00:02:26.280><c> of</c>

00:02:26.390 --> 00:02:26.400 align:start position:0%
obviously to be able to get a lot of
 

00:02:26.400 --> 00:02:28.370 align:start position:0%
obviously to be able to get a lot of
data<00:02:26.520><c> to</c><00:02:26.730><c> the</c><00:02:26.819><c> card</c><00:02:27.060><c> have</c><00:02:27.390><c> an</c><00:02:27.510><c> optimal</c><00:02:27.990><c> format</c>

00:02:28.370 --> 00:02:28.380 align:start position:0%
data to the card have an optimal format
 

00:02:28.380 --> 00:02:31.550 align:start position:0%
data to the card have an optimal format
for<00:02:28.740><c> sending</c><00:02:29.310><c> the</c><00:02:29.400><c> data</c><00:02:30.200><c> keeping</c><00:02:31.200><c> the</c><00:02:31.350><c> data</c>

00:02:31.550 --> 00:02:31.560 align:start position:0%
for sending the data keeping the data
 

00:02:31.560 --> 00:02:35.680 align:start position:0%
for sending the data keeping the data
flow<00:02:31.800><c> moving</c><00:02:32.130><c> quickly</c><00:02:32.610><c> to</c><00:02:32.820><c> the</c><00:02:32.910><c> card</c><00:02:33.150><c> and</c>

00:02:35.680 --> 00:02:35.690 align:start position:0%
flow moving quickly to the card and
 

00:02:35.690 --> 00:02:38.150 align:start position:0%
flow moving quickly to the card and
per-fragment<00:02:36.690><c> operations</c><00:02:37.440><c> so</c><00:02:37.590><c> per</c><00:02:37.740><c> fragment</c>

00:02:38.150 --> 00:02:38.160 align:start position:0%
per-fragment operations so per fragment
 

00:02:38.160 --> 00:02:40.040 align:start position:0%
per-fragment operations so per fragment
operations<00:02:38.610><c> are</c><00:02:39.209><c> their</c><00:02:39.390><c> operations</c><00:02:39.840><c> that</c><00:02:39.930><c> the</c>

00:02:40.040 --> 00:02:40.050 align:start position:0%
operations are their operations that the
 

00:02:40.050 --> 00:02:41.420 align:start position:0%
operations are their operations that the
card<00:02:40.260><c> itself</c><00:02:40.560><c> is</c><00:02:40.620><c> going</c><00:02:40.739><c> to</c><00:02:40.800><c> do</c><00:02:40.950><c> so</c><00:02:41.160><c> it's</c><00:02:41.310><c> not</c>

00:02:41.420 --> 00:02:41.430 align:start position:0%
card itself is going to do so it's not
 

00:02:41.430 --> 00:02:43.880 align:start position:0%
card itself is going to do so it's not
CP<00:02:41.880><c> related</c><00:02:42.270><c> but</c><00:02:42.450><c> it's</c><00:02:42.600><c> car.the</c><00:02:43.050><c> it's</c><00:02:43.709><c> what</c>

00:02:43.880 --> 00:02:43.890 align:start position:0%
CP related but it's car.the it's what
 

00:02:43.890 --> 00:02:45.350 align:start position:0%
CP related but it's car.the it's what
the<00:02:43.980><c> graphics</c><00:02:44.550><c> card</c><00:02:44.760><c> is</c><00:02:44.819><c> going</c><00:02:45.000><c> to</c><00:02:45.060><c> have</c><00:02:45.150><c> to</c><00:02:45.239><c> do</c>

00:02:45.350 --> 00:02:45.360 align:start position:0%
the graphics card is going to have to do
 

00:02:45.360 --> 00:02:47.900 align:start position:0%
the graphics card is going to have to do
to<00:02:45.569><c> generate</c><00:02:46.110><c> your</c><00:02:46.290><c> final</c><00:02:46.620><c> image</c><00:02:46.770><c> and</c><00:02:47.280><c> there's</c>

00:02:47.900 --> 00:02:47.910 align:start position:0%
to generate your final image and there's
 

00:02:47.910 --> 00:02:49.570 align:start position:0%
to generate your final image and there's
some<00:02:48.060><c> trip</c><00:02:48.300><c> there's</c><00:02:48.630><c> some</c><00:02:48.780><c> tips</c><00:02:48.930><c> there</c><00:02:49.170><c> to</c>

00:02:49.570 --> 00:02:49.580 align:start position:0%
some trip there's some tips there to
 

00:02:49.580 --> 00:02:51.470 align:start position:0%
some trip there's some tips there to
offload<00:02:50.580><c> some</c><00:02:50.730><c> of</c><00:02:50.790><c> the</c><00:02:50.910><c> work</c><00:02:51.030><c> the</c><00:02:51.150><c> graphics</c>

00:02:51.470 --> 00:02:51.480 align:start position:0%
offload some of the work the graphics
 

00:02:51.480 --> 00:02:55.580 align:start position:0%
offload some of the work the graphics
card<00:02:51.690><c> is</c><00:02:51.750><c> going</c><00:02:51.900><c> to</c><00:02:51.959><c> need</c><00:02:52.110><c> to</c><00:02:52.200><c> do</c><00:02:54.590><c> extensions</c>

00:02:55.580 --> 00:02:55.590 align:start position:0%
card is going to need to do extensions
 

00:02:55.590 --> 00:02:58.729 align:start position:0%
card is going to need to do extensions
so<00:02:56.190><c> a</c><00:02:56.550><c> lot</c><00:02:57.300><c> of</c><00:02:57.390><c> times</c><00:02:57.600><c> there's</c><00:02:57.900><c> extensions</c>

00:02:58.729 --> 00:02:58.739 align:start position:0%
so a lot of times there's extensions
 

00:02:58.739 --> 00:03:00.590 align:start position:0%
so a lot of times there's extensions
that<00:02:58.920><c> you</c><00:02:59.010><c> can</c><00:02:59.160><c> utilize</c><00:02:59.310><c> that</c><00:02:59.519><c> are</c><00:03:00.450><c> either</c>

00:03:00.590 --> 00:03:00.600 align:start position:0%
that you can utilize that are either
 

00:03:00.600 --> 00:03:02.900 align:start position:0%
that you can utilize that are either
directly<00:03:01.170><c> geared</c><00:03:02.010><c> towards</c><00:03:02.310><c> optimizing</c><00:03:02.880><c> your</c>

00:03:02.900 --> 00:03:02.910 align:start position:0%
directly geared towards optimizing your
 

00:03:02.910 --> 00:03:06.199 align:start position:0%
directly geared towards optimizing your
application<00:03:03.420><c> or</c><00:03:03.600><c> will</c><00:03:04.560><c> help</c><00:03:04.830><c> you</c><00:03:05.060><c> get</c><00:03:06.060><c> the</c>

00:03:06.199 --> 00:03:06.209 align:start position:0%
application or will help you get the
 

00:03:06.209 --> 00:03:09.380 align:start position:0%
application or will help you get the
animation<00:03:06.600><c> effect</c><00:03:07.560><c> you're</c><00:03:07.709><c> looking</c><00:03:08.010><c> for</c><00:03:08.390><c> with</c>

00:03:09.380 --> 00:03:09.390 align:start position:0%
animation effect you're looking for with
 

00:03:09.390 --> 00:03:11.270 align:start position:0%
animation effect you're looking for with
a<00:03:09.420><c> simpler</c><00:03:10.080><c> path</c><00:03:10.350><c> so</c><00:03:10.680><c> you</c><00:03:10.769><c> won't</c><00:03:10.920><c> have</c><00:03:11.010><c> to</c><00:03:11.190><c> do</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
a simpler path so you won't have to do
 

00:03:11.280 --> 00:03:14.240 align:start position:0%
a simpler path so you won't have to do
all<00:03:11.640><c> you</c><00:03:12.030><c> can</c><00:03:12.150><c> simplify</c><00:03:12.510><c> your</c><00:03:12.690><c> CPU</c><00:03:13.320><c> work</c><00:03:13.560><c> by</c>

00:03:14.240 --> 00:03:14.250 align:start position:0%
all you can simplify your CPU work by
 

00:03:14.250 --> 00:03:17.930 align:start position:0%
all you can simplify your CPU work by
utilizing<00:03:15.239><c> an</c><00:03:15.360><c> extension</c><00:03:15.920><c> multi</c><00:03:16.920><c> CPU</c><00:03:17.670><c> or</c>

00:03:17.930 --> 00:03:17.940 align:start position:0%
utilizing an extension multi CPU or
 

00:03:17.940 --> 00:03:20.930 align:start position:0%
utilizing an extension multi CPU or
multi<00:03:18.450><c> thread</c><00:03:18.720><c> utilization</c><00:03:19.820><c> obviously</c><00:03:20.820><c> if</c>

00:03:20.930 --> 00:03:20.940 align:start position:0%
multi thread utilization obviously if
 

00:03:20.940 --> 00:03:25.009 align:start position:0%
multi thread utilization obviously if
there's<00:03:21.239><c> a</c><00:03:21.299><c> machine</c><00:03:21.570><c> that</c><00:03:22.160><c> has</c><00:03:23.160><c> two</c><00:03:23.970><c> CPUs</c><00:03:24.180><c> it's</c>

00:03:25.009 --> 00:03:25.019 align:start position:0%
there's a machine that has two CPUs it's
 

00:03:25.019 --> 00:03:28.250 align:start position:0%
there's a machine that has two CPUs it's
an<00:03:25.200><c> ideal</c><00:03:25.739><c> situation</c><00:03:25.950><c> to</c><00:03:27.079><c> spawn</c><00:03:28.079><c> another</c>

00:03:28.250 --> 00:03:28.260 align:start position:0%
an ideal situation to spawn another
 

00:03:28.260 --> 00:03:29.870 align:start position:0%
an ideal situation to spawn another
thread<00:03:28.650><c> maybe</c><00:03:28.890><c> move</c><00:03:29.130><c> your</c><00:03:29.250><c> graphics</c><00:03:29.610><c> off</c><00:03:29.760><c> to</c>

00:03:29.870 --> 00:03:29.880 align:start position:0%
thread maybe move your graphics off to
 

00:03:29.880 --> 00:03:33.500 align:start position:0%
thread maybe move your graphics off to
that<00:03:30.000><c> other</c><00:03:30.120><c> CPU</c><00:03:31.079><c> and</c><00:03:32.120><c> lastly</c><00:03:33.120><c> what</c><00:03:33.329><c> we'll</c>

00:03:33.500 --> 00:03:33.510 align:start position:0%
that other CPU and lastly what we'll
 

00:03:33.510 --> 00:03:35.390 align:start position:0%
that other CPU and lastly what we'll
talk<00:03:33.989><c> about</c><00:03:34.200><c> briefly</c><00:03:34.350><c> is</c><00:03:34.620><c> where</c><00:03:34.829><c> to</c><00:03:34.950><c> look</c><00:03:35.070><c> for</c>

00:03:35.390 --> 00:03:35.400 align:start position:0%
talk about briefly is where to look for
 

00:03:35.400 --> 00:03:39.470 align:start position:0%
talk about briefly is where to look for
more<00:03:36.030><c> information</c><00:03:37.250><c> so</c><00:03:38.329><c> starting</c><00:03:39.329><c> off</c><00:03:39.420><c> here</c>

00:03:39.470 --> 00:03:39.480 align:start position:0%
more information so starting off here
 

00:03:39.480 --> 00:03:44.810 align:start position:0%
more information so starting off here
just<00:03:40.260><c> to</c><00:03:41.180><c> get</c><00:03:42.180><c> the</c><00:03:42.360><c> the</c><00:03:43.019><c> image</c><00:03:43.739><c> of</c><00:03:43.950><c> what</c><00:03:44.130><c> OpenGL</c>

00:03:44.810 --> 00:03:44.820 align:start position:0%
just to get the the image of what OpenGL
 

00:03:44.820 --> 00:03:46.370 align:start position:0%
just to get the the image of what OpenGL
looks<00:03:45.000><c> like</c><00:03:45.180><c> and</c><00:03:45.390><c> how</c><00:03:45.510><c> data</c><00:03:45.810><c> goes</c><00:03:46.079><c> to</c><00:03:46.110><c> OpenGL</c>

00:03:46.370 --> 00:03:46.380 align:start position:0%
looks like and how data goes to OpenGL
 

00:03:46.380 --> 00:03:48.560 align:start position:0%
looks like and how data goes to OpenGL
it's<00:03:47.310><c> important</c><00:03:47.790><c> to</c><00:03:47.880><c> think</c><00:03:48.030><c> about</c><00:03:48.120><c> in</c><00:03:48.329><c> jail</c><00:03:48.450><c> is</c>

00:03:48.560 --> 00:03:48.570 align:start position:0%
it's important to think about in jail is
 

00:03:48.570 --> 00:03:51.319 align:start position:0%
it's important to think about in jail is
a<00:03:48.630><c> data</c><00:03:48.810><c> stream</c><00:03:49.079><c> so</c><00:03:49.410><c> OpenGL</c><00:03:50.269><c> fundamentally</c><00:03:51.269><c> is</c>

00:03:51.319 --> 00:03:51.329 align:start position:0%
a data stream so OpenGL fundamentally is
 

00:03:51.329 --> 00:03:54.199 align:start position:0%
a data stream so OpenGL fundamentally is
a<00:03:51.420><c> data</c><00:03:51.630><c> stream</c><00:03:51.840><c> going</c><00:03:52.019><c> to</c><00:03:52.110><c> the</c><00:03:52.230><c> card</c><00:03:52.470><c> and</c><00:03:53.209><c> how</c>

00:03:54.199 --> 00:03:54.209 align:start position:0%
a data stream going to the card and how
 

00:03:54.209 --> 00:03:56.330 align:start position:0%
a data stream going to the card and how
the<00:03:54.269><c> data</c><00:03:54.630><c> is</c><00:03:54.720><c> organized</c><00:03:55.170><c> in</c><00:03:55.530><c> that</c><00:03:55.799><c> stream</c><00:03:56.160><c> is</c>

00:03:56.330 --> 00:03:56.340 align:start position:0%
the data is organized in that stream is
 

00:03:56.340 --> 00:03:58.610 align:start position:0%
the data is organized in that stream is
very<00:03:56.519><c> important</c><00:03:56.940><c> because</c><00:03:57.810><c> it</c><00:03:58.140><c> will</c><00:03:58.230><c> give</c><00:03:58.290><c> you</c>

00:03:58.610 --> 00:03:58.620 align:start position:0%
very important because it will give you
 

00:03:58.620 --> 00:04:00.710 align:start position:0%
very important because it will give you
hesitations<00:03:59.400><c> if</c><00:03:59.579><c> you</c><00:03:59.760><c> have</c><00:04:00.329><c> too</c><00:04:00.630><c> many</c>

00:04:00.710 --> 00:04:00.720 align:start position:0%
hesitations if you have too many
 

00:04:00.720 --> 00:04:03.920 align:start position:0%
hesitations if you have too many
operations<00:04:01.549><c> of</c><00:04:02.549><c> one</c><00:04:02.790><c> type</c><00:04:03.090><c> or</c><00:04:03.299><c> if</c><00:04:03.780><c> you're</c>

00:04:03.920 --> 00:04:03.930 align:start position:0%
operations of one type or if you're
 

00:04:03.930 --> 00:04:06.800 align:start position:0%
operations of one type or if you're
flushing<00:04:04.320><c> and</c><00:04:05.090><c> breaking</c><00:04:06.090><c> that</c><00:04:06.180><c> stream</c><00:04:06.570><c> and</c>

00:04:06.800 --> 00:04:06.810 align:start position:0%
flushing and breaking that stream and
 

00:04:06.810 --> 00:04:08.750 align:start position:0%
flushing and breaking that stream and
causing<00:04:07.290><c> discontinuities</c><00:04:07.950><c> so</c><00:04:08.610><c> the</c>

00:04:08.750 --> 00:04:08.760 align:start position:0%
causing discontinuities so the
 

00:04:08.760 --> 00:04:10.400 align:start position:0%
causing discontinuities so the
fundamental<00:04:09.209><c> type</c><00:04:09.390><c> of</c><00:04:09.510><c> data</c><00:04:09.660><c> that</c><00:04:09.750><c> goes</c><00:04:10.049><c> to</c><00:04:10.320><c> up</c>

00:04:10.400 --> 00:04:10.410 align:start position:0%
fundamental type of data that goes to up
 

00:04:10.410 --> 00:04:13.490 align:start position:0%
fundamental type of data that goes to up
Jill<00:04:10.680><c> is</c><00:04:11.390><c> vertices</c><00:04:12.390><c> which</c><00:04:12.780><c> is</c><00:04:12.900><c> your</c><00:04:13.019><c> 3d</c><00:04:13.350><c> data</c>

00:04:13.490 --> 00:04:13.500 align:start position:0%
Jill is vertices which is your 3d data
 

00:04:13.500 --> 00:04:15.949 align:start position:0%
Jill is vertices which is your 3d data
in<00:04:13.709><c> state</c><00:04:13.950><c> so</c><00:04:14.880><c> you</c><00:04:14.940><c> can</c><00:04:15.150><c> fundamentally</c><00:04:15.420><c> this</c>

00:04:15.949 --> 00:04:15.959 align:start position:0%
in state so you can fundamentally this
 

00:04:15.959 --> 00:04:17.000 align:start position:0%
in state so you can fundamentally this
is<00:04:16.019><c> a</c><00:04:16.109><c> simplistic</c><00:04:16.320><c> view</c><00:04:16.590><c> but</c><00:04:16.829><c> you</c><00:04:16.859><c> can</c>

00:04:17.000 --> 00:04:17.010 align:start position:0%
is a simplistic view but you can
 

00:04:17.010 --> 00:04:18.110 align:start position:0%
is a simplistic view but you can
fundamentally<00:04:17.190><c> break</c><00:04:17.609><c> it</c><00:04:17.729><c> down</c><00:04:17.820><c> and</c><00:04:18.030><c> those</c>

00:04:18.110 --> 00:04:18.120 align:start position:0%
fundamentally break it down and those
 

00:04:18.120 --> 00:04:20.870 align:start position:0%
fundamentally break it down and those
two<00:04:18.419><c> types</c><00:04:18.660><c> of</c><00:04:18.900><c> our</c><00:04:19.070><c> data</c><00:04:20.070><c> sets</c><00:04:20.489><c> that</c><00:04:20.669><c> go</c><00:04:20.729><c> to</c>

00:04:20.870 --> 00:04:20.880 align:start position:0%
two types of our data sets that go to
 

00:04:20.880 --> 00:04:24.560 align:start position:0%
two types of our data sets that go to
the<00:04:21.030><c> card</c><00:04:21.260><c> and</c><00:04:22.669><c> how</c><00:04:23.669><c> that</c><00:04:23.880><c> data</c><00:04:24.060><c> again</c><00:04:24.360><c> gets</c>

00:04:24.560 --> 00:04:24.570 align:start position:0%
the card and how that data again gets
 

00:04:24.570 --> 00:04:26.570 align:start position:0%
the card and how that data again gets
organized<00:04:24.990><c> and</c><00:04:25.200><c> sent</c><00:04:25.380><c> to</c><00:04:25.440><c> the</c><00:04:25.530><c> card</c><00:04:25.740><c> can</c><00:04:26.430><c> make</c>

00:04:26.570 --> 00:04:26.580 align:start position:0%
organized and sent to the card can make
 

00:04:26.580 --> 00:04:28.340 align:start position:0%
organized and sent to the card can make
a<00:04:26.610><c> big</c><00:04:26.789><c> difference</c>

00:04:28.340 --> 00:04:28.350 align:start position:0%
a big difference
 

00:04:28.350 --> 00:04:33.840 align:start position:0%
a big difference
so<00:04:29.350><c> application</c><00:04:30.840><c> so</c><00:04:32.400><c> the</c><00:04:33.400><c> thing</c><00:04:33.580><c> to</c><00:04:33.730><c> remember</c>

00:04:33.840 --> 00:04:33.850 align:start position:0%
so application so the thing to remember
 

00:04:33.850 --> 00:04:36.690 align:start position:0%
so application so the thing to remember
when<00:04:34.240><c> you're</c><00:04:34.390><c> looking</c><00:04:35.050><c> at</c><00:04:35.400><c> writing</c><00:04:36.400><c> an</c><00:04:36.490><c> OpenGL</c>

00:04:36.690 --> 00:04:36.700 align:start position:0%
when you're looking at writing an OpenGL
 

00:04:36.700 --> 00:04:39.210 align:start position:0%
when you're looking at writing an OpenGL
application<00:04:37.270><c> is</c><00:04:37.560><c> first</c><00:04:38.560><c> you</c><00:04:38.890><c> have</c><00:04:38.980><c> to</c><00:04:39.040><c> decide</c>

00:04:39.210 --> 00:04:39.220 align:start position:0%
application is first you have to decide
 

00:04:39.220 --> 00:04:40.650 align:start position:0%
application is first you have to decide
obviously<00:04:39.790><c> what</c><00:04:39.970><c> type</c><00:04:40.150><c> of</c><00:04:40.180><c> performance</c>

00:04:40.650 --> 00:04:40.660 align:start position:0%
obviously what type of performance
 

00:04:40.660 --> 00:04:43.800 align:start position:0%
obviously what type of performance
you're<00:04:40.750><c> looking</c><00:04:40.990><c> for</c><00:04:41.200><c> and</c><00:04:42.180><c> to</c><00:04:43.180><c> do</c><00:04:43.300><c> that</c><00:04:43.510><c> you</c>

00:04:43.800 --> 00:04:43.810 align:start position:0%
you're looking for and to do that you
 

00:04:43.810 --> 00:04:46.740 align:start position:0%
you're looking for and to do that you
need<00:04:43.960><c> to</c><00:04:44.020><c> obviously</c><00:04:44.800><c> decide</c><00:04:45.510><c> what</c><00:04:46.510><c> type</c><00:04:46.720><c> of</c>

00:04:46.740 --> 00:04:46.750 align:start position:0%
need to obviously decide what type of
 

00:04:46.750 --> 00:04:50.070 align:start position:0%
need to obviously decide what type of
user<00:04:47.080><c> interaction</c><00:04:47.380><c> there's</c><00:04:47.770><c> going</c><00:04:47.920><c> to</c><00:04:47.980><c> be</c><00:04:49.080><c> you</c>

00:04:50.070 --> 00:04:50.080 align:start position:0%
user interaction there's going to be you
 

00:04:50.080 --> 00:04:51.360 align:start position:0%
user interaction there's going to be you
know<00:04:50.170><c> whether</c><00:04:50.350><c> you</c><00:04:50.530><c> need</c><00:04:50.680><c> high</c><00:04:50.890><c> frame</c><00:04:51.130><c> rates</c>

00:04:51.360 --> 00:04:51.370 align:start position:0%
know whether you need high frame rates
 

00:04:51.370 --> 00:04:54.000 align:start position:0%
know whether you need high frame rates
because<00:04:51.670><c> the</c><00:04:51.760><c> user</c><00:04:52.060><c> needs</c><00:04:52.360><c> a</c><00:04:52.630><c> fast</c><00:04:53.590><c> response</c>

00:04:54.000 --> 00:04:54.010 align:start position:0%
because the user needs a fast response
 

00:04:54.010 --> 00:04:57.450 align:start position:0%
because the user needs a fast response
time<00:04:54.310><c> on</c><00:04:54.340><c> the</c><00:04:54.820><c> graphical</c><00:04:55.240><c> feedback</c><00:04:56.250><c> which</c><00:04:57.250><c> may</c>

00:04:57.450 --> 00:04:57.460 align:start position:0%
time on the graphical feedback which may
 

00:04:57.460 --> 00:05:00.180 align:start position:0%
time on the graphical feedback which may
mean<00:04:57.670><c> you</c><00:04:57.790><c> need</c><00:04:57.970><c> 30</c><00:04:58.300><c> 50</c><00:04:58.990><c> 60</c><00:04:59.440><c> frames</c><00:04:59.680><c> a</c><00:04:59.830><c> second</c>

00:05:00.180 --> 00:05:00.190 align:start position:0%
mean you need 30 50 60 frames a second
 

00:05:00.190 --> 00:05:03.360 align:start position:0%
mean you need 30 50 60 frames a second
to<00:05:00.370><c> get</c><00:05:00.490><c> the</c><00:05:00.640><c> proper</c><00:05:01.030><c> feel</c><00:05:02.160><c> quality</c><00:05:03.160><c> display</c>

00:05:03.360 --> 00:05:03.370 align:start position:0%
to get the proper feel quality display
 

00:05:03.370 --> 00:05:05.220 align:start position:0%
to get the proper feel quality display
so<00:05:03.970><c> you'll</c><00:05:04.180><c> need</c><00:05:04.360><c> to</c><00:05:04.450><c> decide</c><00:05:04.630><c> what</c><00:05:04.960><c> kind</c><00:05:05.170><c> of</c>

00:05:05.220 --> 00:05:05.230 align:start position:0%
so you'll need to decide what kind of
 

00:05:05.230 --> 00:05:07.710 align:start position:0%
so you'll need to decide what kind of
quality<00:05:05.560><c> display</c><00:05:06.030><c> in</c><00:05:07.030><c> your</c><00:05:07.240><c> application</c>

00:05:07.710 --> 00:05:07.720 align:start position:0%
quality display in your application
 

00:05:07.720 --> 00:05:10.110 align:start position:0%
quality display in your application
you're<00:05:07.810><c> going</c><00:05:07.960><c> to</c><00:05:08.020><c> need</c><00:05:08.430><c> and</c><00:05:09.430><c> obviously</c><00:05:09.910><c> those</c>

00:05:10.110 --> 00:05:10.120 align:start position:0%
you're going to need and obviously those
 

00:05:10.120 --> 00:05:12.060 align:start position:0%
you're going to need and obviously those
two<00:05:10.300><c> things</c><00:05:10.450><c> can</c><00:05:10.630><c> be</c><00:05:10.720><c> related</c><00:05:11.110><c> so</c><00:05:11.350><c> adjusting</c>

00:05:12.060 --> 00:05:12.070 align:start position:0%
two things can be related so adjusting
 

00:05:12.070 --> 00:05:14.850 align:start position:0%
two things can be related so adjusting
the<00:05:12.580><c> right</c><00:05:12.790><c> quality</c><00:05:13.270><c> with</c><00:05:14.080><c> the</c><00:05:14.260><c> frame</c><00:05:14.470><c> rate</c><00:05:14.680><c> is</c>

00:05:14.850 --> 00:05:14.860 align:start position:0%
the right quality with the frame rate is
 

00:05:14.860 --> 00:05:17.310 align:start position:0%
the right quality with the frame rate is
going<00:05:15.580><c> to</c><00:05:15.790><c> give</c><00:05:16.540><c> your</c><00:05:16.720><c> user</c><00:05:16.960><c> the</c><00:05:17.170><c> best</c>

00:05:17.310 --> 00:05:17.320 align:start position:0%
going to give your user the best
 

00:05:17.320 --> 00:05:19.260 align:start position:0%
going to give your user the best
experience<00:05:17.800><c> so</c><00:05:18.730><c> it's</c><00:05:18.850><c> important</c><00:05:19.120><c> to</c><00:05:19.180><c> keep</c>

00:05:19.260 --> 00:05:19.270 align:start position:0%
experience so it's important to keep
 

00:05:19.270 --> 00:05:22.710 align:start position:0%
experience so it's important to keep
those<00:05:19.420><c> in</c><00:05:19.480><c> mind</c><00:05:20.460><c> your</c><00:05:21.460><c> target</c><00:05:21.760><c> platform</c><00:05:22.180><c> so</c>

00:05:22.710 --> 00:05:22.720 align:start position:0%
those in mind your target platform so
 

00:05:22.720 --> 00:05:25.980 align:start position:0%
those in mind your target platform so
deciding<00:05:23.700><c> what</c><00:05:24.700><c> your</c><00:05:25.150><c> ideal</c><00:05:25.540><c> platform</c><00:05:25.750><c> is</c>

00:05:25.980 --> 00:05:25.990 align:start position:0%
deciding what your ideal platform is
 

00:05:25.990 --> 00:05:27.630 align:start position:0%
deciding what your ideal platform is
going<00:05:26.110><c> to</c><00:05:26.200><c> be</c><00:05:26.350><c> and</c><00:05:26.560><c> what</c><00:05:26.830><c> you're</c><00:05:26.950><c> going</c><00:05:27.220><c> to</c><00:05:27.280><c> run</c>

00:05:27.630 --> 00:05:27.640 align:start position:0%
going to be and what you're going to run
 

00:05:27.640 --> 00:05:30.450 align:start position:0%
going to be and what you're going to run
best<00:05:27.940><c> on</c><00:05:28.150><c> is</c><00:05:28.870><c> going</c><00:05:29.110><c> to</c><00:05:29.200><c> be</c><00:05:29.290><c> important</c><00:05:29.710><c> so</c><00:05:29.890><c> that</c>

00:05:30.450 --> 00:05:30.460 align:start position:0%
best on is going to be important so that
 

00:05:30.460 --> 00:05:32.490 align:start position:0%
best on is going to be important so that
you<00:05:30.610><c> can</c><00:05:30.870><c> potentially</c><00:05:31.870><c> scale</c><00:05:32.320><c> your</c>

00:05:32.490 --> 00:05:32.500 align:start position:0%
you can potentially scale your
 

00:05:32.500 --> 00:05:34.530 align:start position:0%
you can potentially scale your
application<00:05:32.530><c> to</c><00:05:33.250><c> run</c><00:05:33.490><c> well</c><00:05:33.730><c> on</c><00:05:33.760><c> those</c><00:05:34.060><c> those</c>

00:05:34.530 --> 00:05:34.540 align:start position:0%
application to run well on those those
 

00:05:34.540 --> 00:05:36.690 align:start position:0%
application to run well on those those
target<00:05:34.900><c> platforms</c><00:05:35.320><c> and</c><00:05:35.770><c> the</c><00:05:36.370><c> things</c><00:05:36.550><c> to</c>

00:05:36.690 --> 00:05:36.700 align:start position:0%
target platforms and the things to
 

00:05:36.700 --> 00:05:38.340 align:start position:0%
target platforms and the things to
remember<00:05:36.910><c> about</c><00:05:37.060><c> the</c><00:05:37.510><c> target</c><00:05:37.870><c> platform</c><00:05:37.960><c> are</c>

00:05:38.340 --> 00:05:38.350 align:start position:0%
remember about the target platform are
 

00:05:38.350 --> 00:05:41.010 align:start position:0%
remember about the target platform are
video<00:05:38.770><c> memory</c><00:05:39.010><c> size</c><00:05:39.450><c> how</c><00:05:40.450><c> much</c><00:05:40.540><c> system</c><00:05:40.900><c> memory</c>

00:05:41.010 --> 00:05:41.020 align:start position:0%
video memory size how much system memory
 

00:05:41.020 --> 00:05:42.360 align:start position:0%
video memory size how much system memory
you're<00:05:41.260><c> going</c><00:05:41.500><c> to</c><00:05:41.620><c> be</c><00:05:41.740><c> needing</c><00:05:42.130><c> for</c><00:05:42.160><c> the</c>

00:05:42.360 --> 00:05:42.370 align:start position:0%
you're going to be needing for the
 

00:05:42.370 --> 00:05:44.550 align:start position:0%
you're going to be needing for the
application<00:05:42.970><c> and</c><00:05:43.540><c> potentially</c><00:05:44.440><c> what</c>

00:05:44.550 --> 00:05:44.560 align:start position:0%
application and potentially what
 

00:05:44.560 --> 00:05:46.230 align:start position:0%
application and potentially what
graphics<00:05:44.890><c> cards</c><00:05:45.160><c> in</c><00:05:45.250><c> the</c><00:05:45.310><c> system</c><00:05:45.610><c> so</c><00:05:45.970><c> that</c><00:05:46.000><c> you</c>

00:05:46.230 --> 00:05:46.240 align:start position:0%
graphics cards in the system so that you
 

00:05:46.240 --> 00:05:49.140 align:start position:0%
graphics cards in the system so that you
can<00:05:46.510><c> have</c><00:05:47.500><c> the</c><00:05:47.830><c> animation</c><00:05:48.520><c> effects</c><00:05:48.970><c> that</c>

00:05:49.140 --> 00:05:49.150 align:start position:0%
can have the animation effects that
 

00:05:49.150 --> 00:05:54.060 align:start position:0%
can have the animation effects that
you're<00:05:49.270><c> looking</c><00:05:49.540><c> for</c><00:05:51.540><c> so</c><00:05:52.540><c> the</c><00:05:53.350><c> thing</c><00:05:53.830><c> that</c><00:05:54.040><c> a</c>

00:05:54.060 --> 00:05:54.070 align:start position:0%
you're looking for so the thing that a
 

00:05:54.070 --> 00:05:55.560 align:start position:0%
you're looking for so the thing that a
lot<00:05:54.220><c> of</c><00:05:54.310><c> applications</c><00:05:54.790><c> provide</c><00:05:55.030><c> obviously</c><00:05:55.420><c> is</c>

00:05:55.560 --> 00:05:55.570 align:start position:0%
lot of applications provide obviously is
 

00:05:55.570 --> 00:05:58.740 align:start position:0%
lot of applications provide obviously is
a<00:05:55.600><c> mechanism</c><00:05:56.410><c> for</c><00:05:56.740><c> users</c><00:05:57.070><c> to</c><00:05:57.430><c> to</c><00:05:58.150><c> adjust</c><00:05:58.300><c> the</c>

00:05:58.740 --> 00:05:58.750 align:start position:0%
a mechanism for users to to adjust the
 

00:05:58.750 --> 00:06:01.800 align:start position:0%
a mechanism for users to to adjust the
quality<00:05:59.880><c> settings</c><00:06:00.880><c> within</c><00:06:01.180><c> the</c><00:06:01.360><c> application</c>

00:06:01.800 --> 00:06:01.810 align:start position:0%
quality settings within the application
 

00:06:01.810 --> 00:06:04.350 align:start position:0%
quality settings within the application
and<00:06:02.170><c> this</c><00:06:03.100><c> is</c><00:06:03.250><c> usually</c><00:06:03.550><c> important</c><00:06:03.940><c> such</c><00:06:04.150><c> that</c>

00:06:04.350 --> 00:06:04.360 align:start position:0%
and this is usually important such that
 

00:06:04.360 --> 00:06:08.040 align:start position:0%
and this is usually important such that
an<00:06:04.630><c> application</c><00:06:05.350><c> or</c><00:06:05.410><c> user</c><00:06:05.890><c> can</c><00:06:06.450><c> himself</c><00:06:07.450><c> or</c>

00:06:08.040 --> 00:06:08.050 align:start position:0%
an application or user can himself or
 

00:06:08.050 --> 00:06:10.830 align:start position:0%
an application or user can himself or
herself<00:06:08.200><c> select</c><00:06:09.040><c> the</c><00:06:09.520><c> trade-off</c><00:06:10.390><c> they</c><00:06:10.600><c> want</c>

00:06:10.830 --> 00:06:10.840 align:start position:0%
herself select the trade-off they want
 

00:06:10.840 --> 00:06:13.380 align:start position:0%
herself select the trade-off they want
between<00:06:11.070><c> performance</c><00:06:12.070><c> and</c><00:06:12.130><c> quality</c><00:06:12.390><c> such</c>

00:06:13.380 --> 00:06:13.390 align:start position:0%
between performance and quality such
 

00:06:13.390 --> 00:06:15.810 align:start position:0%
between performance and quality such
that<00:06:13.630><c> they</c><00:06:13.780><c> can</c><00:06:14.110><c> have</c><00:06:14.890><c> some</c><00:06:15.190><c> influence</c><00:06:15.460><c> on</c>

00:06:15.810 --> 00:06:15.820 align:start position:0%
that they can have some influence on
 

00:06:15.820 --> 00:06:19.320 align:start position:0%
that they can have some influence on
their<00:06:16.750><c> preferences</c><00:06:17.350><c> as</c><00:06:17.560><c> to</c><00:06:17.980><c> how</c><00:06:18.910><c> fast</c><00:06:19.120><c> the</c>

00:06:19.320 --> 00:06:19.330 align:start position:0%
their preferences as to how fast the
 

00:06:19.330 --> 00:06:20.670 align:start position:0%
their preferences as to how fast the
application<00:06:19.750><c> will</c><00:06:19.840><c> run</c><00:06:19.960><c> or</c><00:06:20.110><c> what</c><00:06:20.260><c> the</c><00:06:20.350><c> quality</c>

00:06:20.670 --> 00:06:20.680 align:start position:0%
application will run or what the quality
 

00:06:20.680 --> 00:06:26.400 align:start position:0%
application will run or what the quality
will<00:06:20.770><c> look</c><00:06:20.920><c> like</c><00:06:24.420><c> so</c><00:06:25.420><c> the</c><00:06:25.810><c> first</c><00:06:25.990><c> thing</c><00:06:26.140><c> we</c><00:06:26.230><c> do</c>

00:06:26.400 --> 00:06:26.410 align:start position:0%
will look like so the first thing we do
 

00:06:26.410 --> 00:06:29.010 align:start position:0%
will look like so the first thing we do
and<00:06:27.100><c> we</c><00:06:27.820><c> do</c><00:06:27.940><c> this</c><00:06:28.030><c> a</c><00:06:28.090><c> lot</c><00:06:28.150><c> at</c><00:06:28.420><c> Apple's</c><00:06:28.720><c> we'll</c>

00:06:29.010 --> 00:06:29.020 align:start position:0%
and we do this a lot at Apple's we'll
 

00:06:29.020 --> 00:06:31.200 align:start position:0%
and we do this a lot at Apple's we'll
take<00:06:29.260><c> an</c><00:06:29.410><c> application</c><00:06:29.550><c> to</c><00:06:30.550><c> try</c><00:06:30.730><c> to</c><00:06:30.790><c> analyze</c>

00:06:31.200 --> 00:06:31.210 align:start position:0%
take an application to try to analyze
 

00:06:31.210 --> 00:06:34.050 align:start position:0%
take an application to try to analyze
where<00:06:31.870><c> the</c><00:06:32.440><c> time</c><00:06:32.620><c> is</c><00:06:32.740><c> being</c><00:06:32.890><c> spent</c><00:06:32.980><c> we'll</c><00:06:33.910><c> take</c>

00:06:34.050 --> 00:06:34.060 align:start position:0%
where the time is being spent we'll take
 

00:06:34.060 --> 00:06:35.660 align:start position:0%
where the time is being spent we'll take
the<00:06:34.180><c> app</c><00:06:34.270><c> of</c><00:06:34.390><c> the</c><00:06:34.480><c> application</c><00:06:34.960><c> and</c><00:06:35.050><c> we</c><00:06:35.170><c> will</c>

00:06:35.660 --> 00:06:35.670 align:start position:0%
the app of the application and we will
 

00:06:35.670 --> 00:06:38.520 align:start position:0%
the app of the application and we will
run<00:06:36.670><c> it</c><00:06:36.790><c> with</c><00:06:36.970><c> a</c><00:06:37.000><c> null</c><00:06:37.300><c> layer</c><00:06:37.570><c> of</c><00:06:37.750><c> OpenGL</c><00:06:38.020><c> we'll</c>

00:06:38.520 --> 00:06:38.530 align:start position:0%
run it with a null layer of OpenGL we'll
 

00:06:38.530 --> 00:06:41.549 align:start position:0%
run it with a null layer of OpenGL we'll
try<00:06:38.680><c> to</c><00:06:38.740><c> figure</c><00:06:38.890><c> out</c><00:06:39.070><c> how</c><00:06:39.250><c> fast</c><00:06:40.260><c> OpenGL</c>

00:06:41.549 --> 00:06:41.559 align:start position:0%
try to figure out how fast OpenGL
 

00:06:41.559 --> 00:06:43.769 align:start position:0%
try to figure out how fast OpenGL
with<00:06:41.949><c> you</c><00:06:42.219><c> if</c><00:06:42.639><c> OpenGL</c><00:06:42.999><c> was</c><00:06:43.119><c> infinitely</c><00:06:43.419><c> fast</c>

00:06:43.769 --> 00:06:43.779 align:start position:0%
with you if OpenGL was infinitely fast
 

00:06:43.779 --> 00:06:45.449 align:start position:0%
with you if OpenGL was infinitely fast
how<00:06:44.019><c> fast</c><00:06:44.289><c> will</c><00:06:44.379><c> an</c><00:06:44.469><c> application</c><00:06:44.919><c> run</c><00:06:45.039><c> and</c>

00:06:45.449 --> 00:06:45.459 align:start position:0%
how fast will an application run and
 

00:06:45.459 --> 00:06:47.339 align:start position:0%
how fast will an application run and
this<00:06:45.699><c> gives</c><00:06:45.879><c> us</c><00:06:45.999><c> an</c><00:06:46.149><c> upper</c><00:06:46.329><c> bounds</c><00:06:46.749><c> and</c><00:06:47.109><c> this</c>

00:06:47.339 --> 00:06:47.349 align:start position:0%
this gives us an upper bounds and this
 

00:06:47.349 --> 00:06:49.739 align:start position:0%
this gives us an upper bounds and this
helps<00:06:47.619><c> us</c><00:06:47.679><c> understand</c><00:06:48.209><c> what</c><00:06:49.209><c> the</c><00:06:49.329><c> application</c>

00:06:49.739 --> 00:06:49.749 align:start position:0%
helps us understand what the application
 

00:06:49.749 --> 00:06:51.649 align:start position:0%
helps us understand what the application
itself<00:06:49.989><c> is</c><00:06:50.169><c> doing</c><00:06:50.319><c> and</c><00:06:50.559><c> what</c><00:06:50.859><c> the</c><00:06:50.979><c> application</c>

00:06:51.649 --> 00:06:51.659 align:start position:0%
itself is doing and what the application
 

00:06:51.659 --> 00:06:54.499 align:start position:0%
itself is doing and what the application
what<00:06:52.659><c> profiling</c><00:06:53.229><c> may</c><00:06:53.349><c> be</c><00:06:53.409><c> needed</c><00:06:54.309><c> to</c><00:06:54.339><c> be</c>

00:06:54.499 --> 00:06:54.509 align:start position:0%
what profiling may be needed to be
 

00:06:54.509 --> 00:06:56.759 align:start position:0%
what profiling may be needed to be
further<00:06:55.509><c> done</c><00:06:55.839><c> in</c><00:06:55.989><c> the</c><00:06:56.049><c> application</c><00:06:56.499><c> to</c><00:06:56.589><c> tune</c>

00:06:56.759 --> 00:06:56.769 align:start position:0%
further done in the application to tune
 

00:06:56.769 --> 00:07:00.539 align:start position:0%
further done in the application to tune
it<00:06:56.889><c> so</c><00:06:57.119><c> two</c><00:06:58.119><c> ways</c><00:06:58.299><c> -</c><00:06:59.339><c> depending</c><00:07:00.339><c> on</c><00:07:00.459><c> your</c>

00:07:00.539 --> 00:07:00.549 align:start position:0%
it so two ways - depending on your
 

00:07:00.549 --> 00:07:03.029 align:start position:0%
it so two ways - depending on your
programming<00:07:00.969><c> environment</c><00:07:01.799><c> and</c><00:07:02.799><c> it</c><00:07:02.889><c> just</c>

00:07:03.029 --> 00:07:03.039 align:start position:0%
programming environment and it just
 

00:07:03.039 --> 00:07:04.499 align:start position:0%
programming environment and it just
reminder<00:07:03.399><c> actually</c><00:07:03.699><c> all</c><00:07:04.029><c> the</c><00:07:04.119><c> code</c><00:07:04.299><c> that</c><00:07:04.329><c> I'll</c>

00:07:04.499 --> 00:07:04.509 align:start position:0%
reminder actually all the code that I'll
 

00:07:04.509 --> 00:07:06.929 align:start position:0%
reminder actually all the code that I'll
be<00:07:04.629><c> showing</c><00:07:04.779><c> today</c><00:07:04.989><c> is</c><00:07:05.649><c> Mac</c><00:07:05.949><c> OS</c><00:07:06.189><c> 10</c><00:07:06.219><c> cocoa</c>

00:07:06.929 --> 00:07:06.939 align:start position:0%
be showing today is Mac OS 10 cocoa
 

00:07:06.939 --> 00:07:10.679 align:start position:0%
be showing today is Mac OS 10 cocoa
based<00:07:08.009><c> I'm</c><00:07:09.009><c> going</c><00:07:09.279><c> to</c><00:07:09.339><c> since</c><00:07:10.059><c> we</c><00:07:10.149><c> have</c><00:07:10.359><c> limited</c>

00:07:10.679 --> 00:07:10.689 align:start position:0%
based I'm going to since we have limited
 

00:07:10.689 --> 00:07:12.169 align:start position:0%
based I'm going to since we have limited
slide<00:07:10.959><c> space</c><00:07:11.199><c> I'm</c><00:07:11.349><c> going</c><00:07:11.379><c> to</c><00:07:11.529><c> stick</c><00:07:11.679><c> to</c><00:07:11.769><c> those</c>

00:07:12.169 --> 00:07:12.179 align:start position:0%
slide space I'm going to stick to those
 

00:07:12.179 --> 00:07:15.689 align:start position:0%
slide space I'm going to stick to those
function<00:07:13.179><c> calls</c><00:07:13.389><c> so</c><00:07:14.229><c> to</c><00:07:14.919><c> know</c><00:07:15.189><c> about</c><00:07:15.339><c> the</c>

00:07:15.689 --> 00:07:15.699 align:start position:0%
function calls so to know about the
 

00:07:15.699 --> 00:07:16.799 align:start position:0%
function calls so to know about the
OpenGL<00:07:15.999><c> layer</c><00:07:16.149><c> there's</c><00:07:16.389><c> a</c><00:07:16.419><c> couple</c><00:07:16.599><c> ways</c><00:07:16.689><c> you</c>

00:07:16.799 --> 00:07:16.809 align:start position:0%
OpenGL layer there's a couple ways you
 

00:07:16.809 --> 00:07:18.409 align:start position:0%
OpenGL layer there's a couple ways you
can<00:07:16.899><c> do</c><00:07:17.049><c> it</c><00:07:17.079><c> your</c><00:07:17.229><c> application</c><00:07:17.649><c> very</c><00:07:17.739><c> easily</c>

00:07:18.409 --> 00:07:18.419 align:start position:0%
can do it your application very easily
 

00:07:18.419 --> 00:07:20.579 align:start position:0%
can do it your application very easily
for<00:07:19.419><c> the</c><00:07:19.479><c> CGI</c><00:07:19.839><c> layer</c><00:07:20.019><c> if</c><00:07:20.139><c> you're</c><00:07:20.229><c> programming</c>

00:07:20.579 --> 00:07:20.589 align:start position:0%
for the CGI layer if you're programming
 

00:07:20.589 --> 00:07:22.799 align:start position:0%
for the CGI layer if you're programming
straight<00:07:20.949><c> to</c><00:07:21.099><c> the</c><00:07:21.219><c> the</c><00:07:21.639><c> core</c><00:07:22.149><c> OpenGL</c><00:07:22.629><c> layer</c>

00:07:22.799 --> 00:07:22.809 align:start position:0%
straight to the the core OpenGL layer
 

00:07:22.809 --> 00:07:25.079 align:start position:0%
straight to the the core OpenGL layer
you<00:07:23.349><c> can</c><00:07:23.469><c> simply</c><00:07:23.769><c> set</c><00:07:24.069><c> your</c><00:07:24.189><c> OpenGL</c><00:07:24.609><c> context</c>

00:07:25.079 --> 00:07:25.089 align:start position:0%
you can simply set your OpenGL context
 

00:07:25.089 --> 00:07:26.849 align:start position:0%
you can simply set your OpenGL context
to<00:07:25.209><c> null</c><00:07:25.389><c> and</c><00:07:25.659><c> what</c><00:07:26.349><c> that</c><00:07:26.499><c> does</c><00:07:26.709><c> is</c><00:07:26.829><c> that</c>

00:07:26.849 --> 00:07:26.859 align:start position:0%
to null and what that does is that
 

00:07:26.859 --> 00:07:29.029 align:start position:0%
to null and what that does is that
actually<00:07:27.309><c> internal</c><00:07:27.999><c> to</c><00:07:28.089><c> opengl</c><00:07:28.419><c> that</c><00:07:28.629><c> will</c>

00:07:29.029 --> 00:07:29.039 align:start position:0%
actually internal to opengl that will
 

00:07:29.039 --> 00:07:31.649 align:start position:0%
actually internal to opengl that will
have<00:07:30.039><c> opens</c><00:07:30.399><c> you'll</c><00:07:30.519><c> set</c><00:07:31.149><c> all</c><00:07:31.299><c> the</c><00:07:31.449><c> entry</c>

00:07:31.649 --> 00:07:31.659 align:start position:0%
have opens you'll set all the entry
 

00:07:31.659 --> 00:07:33.299 align:start position:0%
have opens you'll set all the entry
points<00:07:31.899><c> to</c><00:07:32.049><c> a</c><00:07:32.079><c> no</c><00:07:32.319><c> op</c><00:07:32.499><c> so</c><00:07:32.949><c> they</c><00:07:33.069><c> will</c><00:07:33.219><c> do</c>

00:07:33.299 --> 00:07:33.309 align:start position:0%
points to a no op so they will do
 

00:07:33.309 --> 00:07:37.079 align:start position:0%
points to a no op so they will do
nothing<00:07:35.039><c> and</c><00:07:36.039><c> if</c><00:07:36.429><c> you're</c><00:07:36.549><c> at</c><00:07:36.669><c> the</c><00:07:36.759><c> applicant</c>

00:07:37.079 --> 00:07:37.089 align:start position:0%
nothing and if you're at the applicant
 

00:07:37.089 --> 00:07:39.179 align:start position:0%
nothing and if you're at the applicant
layer<00:07:37.239><c> then</c><00:07:37.629><c> you</c><00:07:37.749><c> can</c><00:07:37.899><c> use</c><00:07:38.139><c> an</c><00:07:38.829><c> applicator</c>

00:07:39.179 --> 00:07:39.189 align:start position:0%
layer then you can use an applicator
 

00:07:39.189 --> 00:07:41.639 align:start position:0%
layer then you can use an applicator
call<00:07:39.399><c> just</c><00:07:40.239><c> to</c><00:07:40.359><c> clear</c><00:07:40.749><c> the</c><00:07:40.779><c> current</c><00:07:41.049><c> context</c>

00:07:41.639 --> 00:07:41.649 align:start position:0%
call just to clear the current context
 

00:07:41.649 --> 00:07:43.139 align:start position:0%
call just to clear the current context
and<00:07:41.889><c> it's</c><00:07:42.039><c> equivalent</c><00:07:42.639><c> to</c><00:07:42.699><c> setting</c><00:07:42.849><c> it</c><00:07:43.059><c> to</c>

00:07:43.139 --> 00:07:43.149 align:start position:0%
and it's equivalent to setting it to
 

00:07:43.149 --> 00:07:45.029 align:start position:0%
and it's equivalent to setting it to
null<00:07:43.329><c> and</c><00:07:43.539><c> again</c><00:07:44.349><c> that</c><00:07:44.529><c> will</c><00:07:44.649><c> just</c><00:07:44.799><c> set</c><00:07:44.919><c> all</c>

00:07:45.029 --> 00:07:45.039 align:start position:0%
null and again that will just set all
 

00:07:45.039 --> 00:07:48.769 align:start position:0%
null and again that will just set all
the<00:07:45.159><c> entry</c><00:07:45.669><c> points</c><00:07:45.879><c> and</c><00:07:45.939><c> dull</c><00:07:46.499><c> to</c><00:07:47.499><c> no</c><00:07:47.619><c> ops</c><00:07:47.799><c> and</c>

00:07:48.769 --> 00:07:48.779 align:start position:0%
the entry points and dull to no ops and
 

00:07:48.779 --> 00:07:51.149 align:start position:0%
the entry points and dull to no ops and
so<00:07:49.779><c> what</c><00:07:49.929><c> you</c><00:07:50.019><c> want</c><00:07:50.169><c> to</c><00:07:50.229><c> do</c><00:07:50.379><c> once</c><00:07:50.860><c> you've</c><00:07:51.009><c> done</c>

00:07:51.149 --> 00:07:51.159 align:start position:0%
so what you want to do once you've done
 

00:07:51.159 --> 00:07:54.179 align:start position:0%
so what you want to do once you've done
that<00:07:51.219><c> is</c><00:07:51.579><c> you</c><00:07:52.209><c> want</c><00:07:52.389><c> to</c><00:07:52.799><c> measure</c><00:07:53.799><c> the</c><00:07:54.009><c> time</c>

00:07:54.179 --> 00:07:54.189 align:start position:0%
that is you want to measure the time
 

00:07:54.189 --> 00:07:56.039 align:start position:0%
that is you want to measure the time
that's<00:07:54.489><c> spent</c><00:07:54.610><c> in</c><00:07:54.909><c> your</c><00:07:54.999><c> application</c><00:07:55.449><c> to</c><00:07:55.659><c> get</c>

00:07:56.039 --> 00:07:56.049 align:start position:0%
that's spent in your application to get
 

00:07:56.049 --> 00:07:59.219 align:start position:0%
that's spent in your application to get
a<00:07:56.079><c> feel</c><00:07:56.319><c> for</c><00:07:57.839><c> what</c><00:07:58.839><c> level</c><00:07:59.079><c> of</c><00:07:59.110><c> performance</c>

00:07:59.219 --> 00:07:59.229 align:start position:0%
a feel for what level of performance
 

00:07:59.229 --> 00:08:02.249 align:start position:0%
a feel for what level of performance
your<00:07:59.709><c> applications</c><00:08:00.279><c> had</c><00:08:00.429><c> and</c><00:08:00.989><c> here</c><00:08:01.989><c> we</c><00:08:02.110><c> see</c><00:08:02.229><c> a</c>

00:08:02.249 --> 00:08:02.259 align:start position:0%
your applications had and here we see a
 

00:08:02.259 --> 00:08:03.869 align:start position:0%
your applications had and here we see a
little<00:08:02.469><c> code</c><00:08:02.709><c> snippet</c><00:08:02.739><c> using</c><00:08:03.459><c> get</c><00:08:03.639><c> time</c><00:08:03.849><c> of</c>

00:08:03.869 --> 00:08:03.879 align:start position:0%
little code snippet using get time of
 

00:08:03.879 --> 00:08:07.079 align:start position:0%
little code snippet using get time of
day<00:08:04.119><c> to</c><00:08:05.019><c> just</c><00:08:05.529><c> quickly</c><00:08:05.949><c> calculate</c><00:08:06.549><c> time</c><00:08:06.789><c> spent</c>

00:08:07.079 --> 00:08:07.089 align:start position:0%
day to just quickly calculate time spent
 

00:08:07.089 --> 00:08:09.239 align:start position:0%
day to just quickly calculate time spent
in<00:08:07.179><c> application</c><00:08:07.829><c> so</c><00:08:08.829><c> once</c><00:08:08.979><c> we've</c><00:08:09.099><c> done</c><00:08:09.129><c> that</c>

00:08:09.239 --> 00:08:09.249 align:start position:0%
in application so once we've done that
 

00:08:09.249 --> 00:08:12.119 align:start position:0%
in application so once we've done that
we<00:08:09.519><c> can</c><00:08:09.669><c> calculate</c><00:08:09.909><c> an</c><00:08:10.149><c> open</c><00:08:10.479><c> loop</c><00:08:10.949><c> OpenGL</c><00:08:11.949><c> no</c>

00:08:12.119 --> 00:08:12.129 align:start position:0%
we can calculate an open loop OpenGL no
 

00:08:12.129 --> 00:08:14.519 align:start position:0%
we can calculate an open loop OpenGL no
op<00:08:12.329><c> frames</c><00:08:13.329><c> per</c><00:08:13.509><c> second</c><00:08:13.869><c> that</c><00:08:14.049><c> your</c>

00:08:14.519 --> 00:08:14.529 align:start position:0%
op frames per second that your
 

00:08:14.529 --> 00:08:16.919 align:start position:0%
op frames per second that your
application<00:08:14.949><c> is</c><00:08:14.979><c> capable</c><00:08:15.369><c> of</c><00:08:15.659><c> so</c><00:08:16.659><c> obviously</c>

00:08:16.919 --> 00:08:16.929 align:start position:0%
application is capable of so obviously
 

00:08:16.929 --> 00:08:18.659 align:start position:0%
application is capable of so obviously
if<00:08:17.169><c> you're</c><00:08:17.379><c> once</c><00:08:18.189><c> you've</c><00:08:18.309><c> gotten</c><00:08:18.489><c> to</c><00:08:18.579><c> this</c>

00:08:18.659 --> 00:08:18.669 align:start position:0%
if you're once you've gotten to this
 

00:08:18.669 --> 00:08:21.179 align:start position:0%
if you're once you've gotten to this
point<00:08:18.879><c> you</c><00:08:19.119><c> realize</c><00:08:19.419><c> that</c><00:08:19.589><c> you've</c><00:08:20.589><c> no</c><00:08:20.799><c> op</c><00:08:20.919><c> open</c>

00:08:21.179 --> 00:08:21.189 align:start position:0%
point you realize that you've no op open
 

00:08:21.189 --> 00:08:23.599 align:start position:0%
point you realize that you've no op open
G<00:08:21.309><c> allowed</c><00:08:21.519><c> it's</c><00:08:22.059><c> a</c><00:08:22.179><c> it's</c><00:08:22.539><c> infinitely</c><00:08:22.869><c> fast</c>

00:08:23.599 --> 00:08:23.609 align:start position:0%
G allowed it's a it's infinitely fast
 

00:08:23.609 --> 00:08:26.129 align:start position:0%
G allowed it's a it's infinitely fast
and<00:08:24.609><c> you're</c><00:08:24.849><c> not</c><00:08:24.999><c> achieving</c><00:08:25.539><c> the</c><00:08:25.569><c> frame</c><00:08:25.899><c> rates</c>

00:08:26.129 --> 00:08:26.139 align:start position:0%
and you're not achieving the frame rates
 

00:08:26.139 --> 00:08:28.739 align:start position:0%
and you're not achieving the frame rates
that<00:08:26.409><c> that</c><00:08:27.339><c> you</c><00:08:27.549><c> would</c><00:08:27.669><c> like</c><00:08:27.819><c> to</c><00:08:27.939><c> be</c><00:08:28.059><c> at</c><00:08:28.149><c> you</c>

00:08:28.739 --> 00:08:28.749 align:start position:0%
that that you would like to be at you
 

00:08:28.749 --> 00:08:32.339 align:start position:0%
that that you would like to be at you
can<00:08:28.899><c> immediately</c><00:08:29.079><c> start</c><00:08:30.239><c> you</c><00:08:31.239><c> know</c><00:08:31.349><c> thinking</c>

00:08:32.339 --> 00:08:32.349 align:start position:0%
can immediately start you know thinking
 

00:08:32.349 --> 00:08:33.929 align:start position:0%
can immediately start you know thinking
about<00:08:32.649><c> going</c><00:08:32.919><c> into</c><00:08:33.189><c> your</c><00:08:33.309><c> application</c><00:08:33.789><c> and</c>

00:08:33.929 --> 00:08:33.939 align:start position:0%
about going into your application and
 

00:08:33.939 --> 00:08:38.519 align:start position:0%
about going into your application and
tuning<00:08:34.209><c> your</c><00:08:34.300><c> application</c><00:08:36.749><c> what</c><00:08:37.749><c> we</c><00:08:37.839><c> do</c><00:08:38.050><c> is</c>

00:08:38.519 --> 00:08:38.529 align:start position:0%
tuning your application what we do is
 

00:08:38.529 --> 00:08:40.889 align:start position:0%
tuning your application what we do is
you<00:08:39.039><c> can</c><00:08:39.159><c> do</c><00:08:39.219><c> a</c><00:08:39.249><c> quick</c><00:08:39.459><c> calculation</c><00:08:39.899><c> assuming</c>

00:08:40.889 --> 00:08:40.899 align:start position:0%
you can do a quick calculation assuming
 

00:08:40.899 --> 00:08:42.929 align:start position:0%
you can do a quick calculation assuming
an<00:08:41.019><c> average</c><00:08:41.139><c> application</c><00:08:41.800><c> spends</c><00:08:42.039><c> about</c><00:08:42.099><c> 25%</c>

00:08:42.929 --> 00:08:42.939 align:start position:0%
an average application spends about 25%
 

00:08:42.939 --> 00:08:45.960 align:start position:0%
an average application spends about 25%
of<00:08:42.999><c> the</c><00:08:43.089><c> time</c><00:08:43.300><c> in</c><00:08:44.050><c> OpenGL</c><00:08:44.800><c> you</c><00:08:45.490><c> can</c><00:08:45.610><c> take</c><00:08:45.790><c> that</c>

00:08:45.960 --> 00:08:45.970 align:start position:0%
of the time in OpenGL you can take that
 

00:08:45.970 --> 00:08:49.230 align:start position:0%
of the time in OpenGL you can take that
open<00:08:46.720><c> loop</c><00:08:46.870><c> frame</c><00:08:47.800><c> rates</c><00:08:48.009><c> per</c><00:08:48.220><c> second</c><00:08:48.610><c> and</c>

00:08:49.230 --> 00:08:49.240 align:start position:0%
open loop frame rates per second and
 

00:08:49.240 --> 00:08:51.869 align:start position:0%
open loop frame rates per second and
just<00:08:49.569><c> multiply</c><00:08:49.689><c> by</c><00:08:50.079><c> 0.75</c><00:08:50.620><c> so</c><00:08:51.370><c> lower</c><00:08:51.670><c> that</c>

00:08:51.869 --> 00:08:51.879 align:start position:0%
just multiply by 0.75 so lower that
 

00:08:51.879 --> 00:08:54.150 align:start position:0%
just multiply by 0.75 so lower that
frame<00:08:52.089><c> rate</c><00:08:52.120><c> down</c><00:08:52.420><c> and</c><00:08:52.750><c> get</c><00:08:53.649><c> an</c><00:08:53.769><c> estimate</c><00:08:53.889><c> of</c>

00:08:54.150 --> 00:08:54.160 align:start position:0%
frame rate down and get an estimate of
 

00:08:54.160 --> 00:08:55.199 align:start position:0%
frame rate down and get an estimate of
what<00:08:54.279><c> you're</c><00:08:54.699><c> going</c><00:08:54.850><c> to</c><00:08:54.910><c> run</c>

00:08:55.199 --> 00:08:55.209 align:start position:0%
what you're going to run
 

00:08:55.209 --> 00:08:56.549 align:start position:0%
what you're going to run
what<00:08:55.689><c> your</c><00:08:55.809><c> performance</c><00:08:56.019><c> is</c><00:08:56.290><c> going</c><00:08:56.319><c> to</c><00:08:56.470><c> be</c>

00:08:56.549 --> 00:08:56.559 align:start position:0%
what your performance is going to be
 

00:08:56.559 --> 00:09:01.499 align:start position:0%
what your performance is going to be
once<00:08:57.279><c> you</c><00:08:57.369><c> enable</c><00:08:57.550><c> open</c><00:08:57.790><c> Jill</c><00:08:58.059><c> and</c><00:09:00.240><c> if</c><00:09:01.240><c> this</c>

00:09:01.499 --> 00:09:01.509 align:start position:0%
once you enable open Jill and if this
 

00:09:01.509 --> 00:09:03.419 align:start position:0%
once you enable open Jill and if this
estimated<00:09:02.019><c> frames</c><00:09:02.199><c> per</c><00:09:02.589><c> second</c><00:09:02.980><c> isn't</c><00:09:03.129><c> where</c>

00:09:03.419 --> 00:09:03.429 align:start position:0%
estimated frames per second isn't where
 

00:09:03.429 --> 00:09:06.449 align:start position:0%
estimated frames per second isn't where
you<00:09:03.459><c> want</c><00:09:03.699><c> to</c><00:09:03.819><c> be</c><00:09:03.879><c> again</c><00:09:05.189><c> you're</c><00:09:06.189><c> gonna</c><00:09:06.309><c> have</c>

00:09:06.449 --> 00:09:06.459 align:start position:0%
you want to be again you're gonna have
 

00:09:06.459 --> 00:09:08.069 align:start position:0%
you want to be again you're gonna have
to<00:09:06.550><c> start</c><00:09:06.730><c> looking</c><00:09:06.850><c> at</c><00:09:07.119><c> either</c><00:09:07.269><c> OpenGL</c><00:09:07.869><c> or</c>

00:09:08.069 --> 00:09:08.079 align:start position:0%
to start looking at either OpenGL or
 

00:09:08.079 --> 00:09:09.509 align:start position:0%
to start looking at either OpenGL or
you're<00:09:08.199><c> gonna</c><00:09:08.290><c> have</c><00:09:08.350><c> to</c><00:09:08.470><c> start</c><00:09:08.619><c> looking</c><00:09:08.920><c> at</c><00:09:09.040><c> at</c>

00:09:09.509 --> 00:09:09.519 align:start position:0%
you're gonna have to start looking at at
 

00:09:09.519 --> 00:09:12.780 align:start position:0%
you're gonna have to start looking at at
your<00:09:09.639><c> application</c><00:09:09.990><c> so</c><00:09:11.189><c> to</c><00:09:12.189><c> start</c><00:09:12.399><c> tuning</c><00:09:12.579><c> your</c>

00:09:12.780 --> 00:09:12.790 align:start position:0%
your application so to start tuning your
 

00:09:12.790 --> 00:09:15.269 align:start position:0%
your application so to start tuning your
application<00:09:13.240><c> on</c><00:09:13.839><c> OS</c><00:09:14.050><c> 10</c><00:09:14.259><c> there's</c><00:09:14.559><c> a</c><00:09:14.829><c> variety</c>

00:09:15.269 --> 00:09:15.279 align:start position:0%
application on OS 10 there's a variety
 

00:09:15.279 --> 00:09:17.669 align:start position:0%
application on OS 10 there's a variety
of<00:09:15.579><c> tools</c><00:09:15.819><c> to</c><00:09:15.999><c> do</c><00:09:16.179><c> this</c><00:09:16.329><c> one</c><00:09:17.319><c> tool</c><00:09:17.470><c> that's</c><00:09:17.619><c> very</c>

00:09:17.669 --> 00:09:17.679 align:start position:0%
of tools to do this one tool that's very
 

00:09:17.679 --> 00:09:20.369 align:start position:0%
of tools to do this one tool that's very
useful<00:09:18.100><c> is</c><00:09:18.249><c> called</c><00:09:18.459><c> sampler</c><00:09:19.079><c> for</c><00:09:20.079><c> anybody</c>

00:09:20.369 --> 00:09:20.379 align:start position:0%
useful is called sampler for anybody
 

00:09:20.379 --> 00:09:25.650 align:start position:0%
useful is called sampler for anybody
that<00:09:20.470><c> hasn't</c><00:09:20.649><c> used</c><00:09:20.860><c> sampler</c><00:09:21.540><c> it's</c><00:09:22.540><c> a</c><00:09:22.869><c> a</c><00:09:24.660><c> tool</c>

00:09:25.650 --> 00:09:25.660 align:start position:0%
that hasn't used sampler it's a a tool
 

00:09:25.660 --> 00:09:30.509 align:start position:0%
that hasn't used sampler it's a a tool
that<00:09:26.019><c> will</c><00:09:27.720><c> thread</c><00:09:28.949><c> it's</c><00:09:29.949><c> a</c><00:09:30.009><c> threaded</c><00:09:30.339><c> tool</c>

00:09:30.509 --> 00:09:30.519 align:start position:0%
that will thread it's a threaded tool
 

00:09:30.519 --> 00:09:31.859 align:start position:0%
that will thread it's a threaded tool
that<00:09:30.730><c> will</c><00:09:30.819><c> go</c><00:09:30.910><c> out</c><00:09:30.970><c> and</c><00:09:31.209><c> look</c><00:09:31.420><c> where</c><00:09:31.629><c> your</c>

00:09:31.859 --> 00:09:31.869 align:start position:0%
that will go out and look where your
 

00:09:31.869 --> 00:09:33.900 align:start position:0%
that will go out and look where your
call<00:09:32.170><c> stack</c><00:09:32.439><c> is</c><00:09:32.619><c> at</c><00:09:32.769><c> any</c><00:09:32.889><c> given</c><00:09:33.129><c> time</c><00:09:33.309><c> and</c><00:09:33.550><c> it</c>

00:09:33.900 --> 00:09:33.910 align:start position:0%
call stack is at any given time and it
 

00:09:33.910 --> 00:09:35.939 align:start position:0%
call stack is at any given time and it
will<00:09:34.089><c> generate</c><00:09:34.300><c> a</c><00:09:34.569><c> sample</c><00:09:35.139><c> and</c><00:09:35.259><c> heuristic</c><00:09:35.769><c> of</c>

00:09:35.939 --> 00:09:35.949 align:start position:0%
will generate a sample and heuristic of
 

00:09:35.949 --> 00:09:37.739 align:start position:0%
will generate a sample and heuristic of
where<00:09:36.610><c> the</c><00:09:36.759><c> time</c><00:09:36.970><c> is</c><00:09:36.999><c> being</c><00:09:37.240><c> spent</c><00:09:37.540><c> in</c><00:09:37.689><c> the</c>

00:09:37.739 --> 00:09:37.749 align:start position:0%
where the time is being spent in the
 

00:09:37.749 --> 00:09:40.230 align:start position:0%
where the time is being spent in the
application<00:09:38.170><c> so</c><00:09:38.920><c> this</c><00:09:39.670><c> tool</c><00:09:39.879><c> actually</c><00:09:40.029><c> is</c>

00:09:40.230 --> 00:09:40.240 align:start position:0%
application so this tool actually is
 

00:09:40.240 --> 00:09:42.059 align:start position:0%
application so this tool actually is
very<00:09:40.389><c> useful</c><00:09:40.660><c> it</c><00:09:40.809><c> works</c><00:09:40.990><c> for</c><00:09:41.199><c> CFM</c><00:09:41.649><c> apps</c><00:09:41.860><c> and</c>

00:09:42.059 --> 00:09:42.069 align:start position:0%
very useful it works for CFM apps and
 

00:09:42.069 --> 00:09:45.119 align:start position:0%
very useful it works for CFM apps and
Mach<00:09:42.189><c> Oh</c><00:09:42.339><c> apps</c><00:09:42.550><c> and</c><00:09:43.360><c> it's</c><00:09:44.230><c> part</c><00:09:45.009><c> of</c><00:09:45.040><c> the</c>

00:09:45.119 --> 00:09:45.129 align:start position:0%
Mach Oh apps and it's part of the
 

00:09:45.129 --> 00:09:46.829 align:start position:0%
Mach Oh apps and it's part of the
developer<00:09:45.490><c> install</c><00:09:45.759><c> so</c><00:09:46.089><c> it's</c><00:09:46.269><c> on</c><00:09:46.449><c> your</c><00:09:46.629><c> disk</c>

00:09:46.829 --> 00:09:46.839 align:start position:0%
developer install so it's on your disk
 

00:09:46.839 --> 00:09:49.549 align:start position:0%
developer install so it's on your disk
at<00:09:47.259><c> developer</c><00:09:47.860><c> applications</c><00:09:48.369><c> sampler</c><00:09:48.759><c> and</c>

00:09:49.549 --> 00:09:49.559 align:start position:0%
at developer applications sampler and
 

00:09:49.559 --> 00:09:51.239 align:start position:0%
at developer applications sampler and
it's<00:09:50.559><c> a</c><00:09:50.649><c> very</c><00:09:50.829><c> useful</c><00:09:50.920><c> tool</c>

00:09:51.239 --> 00:09:51.249 align:start position:0%
it's a very useful tool
 

00:09:51.249 --> 00:09:53.519 align:start position:0%
it's a very useful tool
we<00:09:51.579><c> suggest</c><00:09:51.999><c> everybody</c><00:09:52.389><c> become</c><00:09:53.259><c> familiar</c>

00:09:53.519 --> 00:09:53.529 align:start position:0%
we suggest everybody become familiar
 

00:09:53.529 --> 00:09:55.230 align:start position:0%
we suggest everybody become familiar
with<00:09:53.679><c> how</c><00:09:53.769><c> to</c><00:09:53.800><c> use</c><00:09:53.920><c> it</c><00:09:54.220><c> and</c><00:09:54.339><c> it</c><00:09:54.879><c> will</c><00:09:54.970><c> show</c><00:09:55.029><c> you</c>

00:09:55.230 --> 00:09:55.240 align:start position:0%
with how to use it and it will show you
 

00:09:55.240 --> 00:09:56.429 align:start position:0%
with how to use it and it will show you
where<00:09:55.420><c> all</c><00:09:55.449><c> the</c><00:09:55.600><c> hot</c><00:09:55.720><c> spots</c><00:09:56.019><c> are</c><00:09:56.199><c> and</c><00:09:56.319><c> you're</c>

00:09:56.429 --> 00:09:56.439 align:start position:0%
where all the hot spots are and you're
 

00:09:56.439 --> 00:09:58.679 align:start position:0%
where all the hot spots are and you're
in<00:09:56.709><c> your</c><00:09:56.920><c> application</c><00:09:57.550><c> code</c><00:09:57.730><c> it'll</c><00:09:58.300><c> even</c><00:09:58.540><c> show</c>

00:09:58.679 --> 00:09:58.689 align:start position:0%
in your application code it'll even show
 

00:09:58.689 --> 00:09:59.730 align:start position:0%
in your application code it'll even show
you<00:09:58.779><c> where</c><00:09:58.899><c> the</c><00:09:58.990><c> hot</c><00:09:59.079><c> spots</c><00:09:59.350><c> are</c><00:09:59.439><c> in</c><00:09:59.499><c> the</c><00:09:59.649><c> app</c>

00:09:59.730 --> 00:09:59.740 align:start position:0%
you where the hot spots are in the app
 

00:09:59.740 --> 00:10:02.970 align:start position:0%
you where the hot spots are in the app
in<00:09:59.860><c> the</c><00:10:00.129><c> operating</c><00:10:00.579><c> system</c><00:10:00.850><c> itself</c><00:10:01.799><c> but</c><00:10:02.799><c> you</c>

00:10:02.970 --> 00:10:02.980 align:start position:0%
in the operating system itself but you
 

00:10:02.980 --> 00:10:05.579 align:start position:0%
in the operating system itself but you
may<00:10:03.069><c> want</c><00:10:03.279><c> to</c><00:10:03.309><c> run</c><00:10:03.459><c> this</c><00:10:03.639><c> with</c><00:10:04.079><c> without</c><00:10:05.079><c> OpenGL</c>

00:10:05.579 --> 00:10:05.589 align:start position:0%
may want to run this with without OpenGL
 

00:10:05.589 --> 00:10:07.829 align:start position:0%
may want to run this with without OpenGL
and<00:10:05.829><c> just</c><00:10:06.339><c> run</c><00:10:06.610><c> your</c><00:10:06.639><c> application</c><00:10:07.449><c> open</c><00:10:07.689><c> loop</c>

00:10:07.829 --> 00:10:07.839 align:start position:0%
and just run your application open loop
 

00:10:07.839 --> 00:10:09.509 align:start position:0%
and just run your application open loop
and<00:10:08.410><c> just</c><00:10:08.470><c> stress</c><00:10:08.799><c> your</c><00:10:08.980><c> application</c><00:10:09.429><c> and</c>

00:10:09.509 --> 00:10:09.519 align:start position:0%
and just stress your application and
 

00:10:09.519 --> 00:10:14.400 align:start position:0%
and just stress your application and
find<00:10:09.730><c> out</c><00:10:09.850><c> where</c><00:10:09.970><c> the</c><00:10:10.029><c> hot</c><00:10:10.149><c> spots</c><00:10:10.420><c> are</c><00:10:13.199><c> okay</c><00:10:14.199><c> so</c>

00:10:14.400 --> 00:10:14.410 align:start position:0%
find out where the hot spots are okay so
 

00:10:14.410 --> 00:10:15.989 align:start position:0%
find out where the hot spots are okay so
that's<00:10:15.249><c> enough</c><00:10:15.369><c> talking</c><00:10:15.759><c> about</c><00:10:15.879><c> the</c>

00:10:15.989 --> 00:10:15.999 align:start position:0%
that's enough talking about the
 

00:10:15.999 --> 00:10:20.519 align:start position:0%
that's enough talking about the
application<00:10:16.420><c> so</c><00:10:17.139><c> setting</c><00:10:17.470><c> up</c><00:10:17.529><c> Open</c><00:10:17.829><c> GL</c><00:10:19.529><c> the</c>

00:10:20.519 --> 00:10:20.529 align:start position:0%
application so setting up Open GL the
 

00:10:20.529 --> 00:10:21.600 align:start position:0%
application so setting up Open GL the
first<00:10:20.709><c> thing</c><00:10:20.829><c> you</c><00:10:20.889><c> need</c><00:10:20.980><c> to</c><00:10:21.040><c> do</c><00:10:21.189><c> obviously</c><00:10:21.369><c> is</c>

00:10:21.600 --> 00:10:21.610 align:start position:0%
first thing you need to do obviously is
 

00:10:21.610 --> 00:10:25.049 align:start position:0%
first thing you need to do obviously is
to<00:10:21.970><c> go</c><00:10:22.299><c> out</c><00:10:22.449><c> and</c><00:10:22.600><c> query</c><00:10:22.899><c> for</c><00:10:23.290><c> devices</c><00:10:23.740><c> and</c><00:10:24.059><c> find</c>

00:10:25.049 --> 00:10:25.059 align:start position:0%
to go out and query for devices and find
 

00:10:25.059 --> 00:10:28.769 align:start position:0%
to go out and query for devices and find
what's<00:10:25.420><c> what</c><00:10:26.049><c> you're</c><00:10:27.299><c> what</c><00:10:28.299><c> devices</c><00:10:28.540><c> you</c><00:10:28.689><c> have</c>

00:10:28.769 --> 00:10:28.779 align:start position:0%
what's what you're what devices you have
 

00:10:28.779 --> 00:10:31.799 align:start position:0%
what's what you're what devices you have
how<00:10:29.259><c> many</c><00:10:29.319><c> devices</c><00:10:29.709><c> and</c><00:10:30.009><c> such</c><00:10:30.220><c> so</c><00:10:30.999><c> I've</c><00:10:31.600><c> got</c><00:10:31.779><c> a</c>

00:10:31.799 --> 00:10:31.809 align:start position:0%
how many devices and such so I've got a
 

00:10:31.809 --> 00:10:34.049 align:start position:0%
how many devices and such so I've got a
couple<00:10:32.049><c> code</c><00:10:32.290><c> snippets</c><00:10:32.679><c> up</c><00:10:32.829><c> here</c><00:10:33.040><c> that</c><00:10:33.369><c> will</c>

00:10:34.049 --> 00:10:34.059 align:start position:0%
couple code snippets up here that will
 

00:10:34.059 --> 00:10:38.460 align:start position:0%
couple code snippets up here that will
show<00:10:34.240><c> you</c><00:10:34.299><c> in</c><00:10:35.639><c> core</c><00:10:36.639><c> graphics</c><00:10:37.119><c> how</c><00:10:37.869><c> to</c><00:10:37.929><c> get</c>

00:10:38.460 --> 00:10:38.470 align:start position:0%
show you in core graphics how to get
 

00:10:38.470 --> 00:10:41.519 align:start position:0%
show you in core graphics how to get
your<00:10:38.589><c> device</c><00:10:39.329><c> at</c><00:10:40.329><c> your</c><00:10:40.449><c> main</c><00:10:40.569><c> device</c><00:10:40.809><c> and</c><00:10:41.170><c> how</c>

00:10:41.519 --> 00:10:41.529 align:start position:0%
your device at your main device and how
 

00:10:41.529 --> 00:10:43.919 align:start position:0%
your device at your main device and how
to<00:10:41.610><c> from</c><00:10:42.610><c> the</c><00:10:42.730><c> main</c><00:10:42.850><c> device</c><00:10:43.029><c> generate</c><00:10:43.779><c> an</c>

00:10:43.919 --> 00:10:43.929 align:start position:0%
to from the main device generate an
 

00:10:43.929 --> 00:10:47.160 align:start position:0%
to from the main device generate an
OpenGL<00:10:44.230><c> display</c><00:10:44.649><c> mask</c><00:10:45.059><c> so</c><00:10:46.059><c> the</c><00:10:46.809><c> first</c><00:10:47.019><c> code</c>

00:10:47.160 --> 00:10:47.170 align:start position:0%
OpenGL display mask so the first code
 

00:10:47.170 --> 00:10:49.650 align:start position:0%
OpenGL display mask so the first code
snippet<00:10:47.499><c> here</c><00:10:47.529><c> is</c><00:10:47.889><c> just</c><00:10:48.579><c> the</c><00:10:48.670><c> main</c><00:10:48.790><c> device</c><00:10:49.059><c> if</c>

00:10:49.650 --> 00:10:49.660 align:start position:0%
snippet here is just the main device if
 

00:10:49.660 --> 00:10:50.850 align:start position:0%
snippet here is just the main device if
you<00:10:49.809><c> wanted</c><00:10:50.019><c> to</c><00:10:50.110><c> go</c><00:10:50.199><c> through</c><00:10:50.379><c> all</c><00:10:50.499><c> the</c><00:10:50.619><c> devices</c>

00:10:50.850 --> 00:10:50.860 align:start position:0%
you wanted to go through all the devices
 

00:10:50.860 --> 00:10:54.989 align:start position:0%
you wanted to go through all the devices
you<00:10:51.249><c> could</c><00:10:52.799><c> get</c><00:10:53.799><c> all</c><00:10:54.189><c> the</c><00:10:54.459><c> active</c><00:10:54.699><c> display</c>

00:10:54.989 --> 00:10:54.999 align:start position:0%
you could get all the active display
 

00:10:54.999 --> 00:10:57.150 align:start position:0%
you could get all the active display
devices<00:10:55.299><c> from</c><00:10:55.540><c> core</c><00:10:55.809><c> graphics</c><00:10:56.019><c> loop</c><00:10:56.920><c> through</c>

00:10:57.150 --> 00:10:57.160 align:start position:0%
devices from core graphics loop through
 

00:10:57.160 --> 00:10:59.579 align:start position:0%
devices from core graphics loop through
them<00:10:57.369><c> generate</c><00:10:57.939><c> a</c><00:10:57.970><c> display</c><00:10:58.569><c> mask</c><00:10:58.839><c> that</c>

00:10:59.579 --> 00:10:59.589 align:start position:0%
them generate a display mask that
 

00:10:59.589 --> 00:11:03.090 align:start position:0%
them generate a display mask that
represents<00:11:00.369><c> all</c><00:11:01.149><c> of</c><00:11:01.209><c> the</c><00:11:01.449><c> all</c><00:11:02.439><c> the</c><00:11:02.679><c> devices</c><00:11:03.009><c> on</c>

00:11:03.090 --> 00:11:03.100 align:start position:0%
represents all of the all the devices on
 

00:11:03.100 --> 00:11:04.860 align:start position:0%
represents all of the all the devices on
the<00:11:03.189><c> system</c><00:11:03.309><c> and</c><00:11:03.699><c> really</c><00:11:04.419><c> it's</c><00:11:04.600><c> going</c><00:11:04.779><c> to</c>

00:11:04.860 --> 00:11:04.870 align:start position:0%
the system and really it's going to
 

00:11:04.870 --> 00:11:06.780 align:start position:0%
the system and really it's going to
depend<00:11:05.139><c> on</c><00:11:05.410><c> whether</c><00:11:05.980><c> you're</c><00:11:06.220><c> a</c><00:11:06.279><c> full</c><00:11:06.519><c> screen</c>

00:11:06.780 --> 00:11:06.790 align:start position:0%
depend on whether you're a full screen
 

00:11:06.790 --> 00:11:08.410 align:start position:0%
depend on whether you're a full screen
or<00:11:06.850><c> window</c><00:11:07.209><c> to</c><00:11:07.360><c> application</c>

00:11:08.410 --> 00:11:08.420 align:start position:0%
or window to application
 

00:11:08.420 --> 00:11:11.530 align:start position:0%
or window to application
as<00:11:08.899><c> to</c><00:11:09.320><c> what</c><00:11:10.040><c> you're</c><00:11:10.250><c> going</c><00:11:10.329><c> what</c><00:11:11.329><c> the</c><00:11:11.420><c> right</c>

00:11:11.530 --> 00:11:11.540 align:start position:0%
as to what you're going what the right
 

00:11:11.540 --> 00:11:18.400 align:start position:0%
as to what you're going what the right
thing<00:11:11.690><c> for</c><00:11:11.720><c> you</c><00:11:11.959><c> to</c><00:11:12.079><c> do</c><00:11:12.230><c> is</c><00:11:16.630><c> so</c><00:11:17.630><c> what</c><00:11:18.110><c> we</c><00:11:18.200><c> can</c><00:11:18.320><c> do</c>

00:11:18.400 --> 00:11:18.410 align:start position:0%
thing for you to do is so what we can do
 

00:11:18.410 --> 00:11:20.680 align:start position:0%
thing for you to do is so what we can do
with<00:11:18.529><c> this</c><00:11:18.589><c> information</c><00:11:18.829><c> is</c><00:11:19.250><c> we</c><00:11:20.180><c> can</c><00:11:20.329><c> find</c><00:11:20.540><c> out</c>

00:11:20.680 --> 00:11:20.690 align:start position:0%
with this information is we can find out
 

00:11:20.690 --> 00:11:22.810 align:start position:0%
with this information is we can find out
how<00:11:20.810><c> much</c><00:11:20.930><c> video</c><00:11:21.110><c> memories</c><00:11:21.500><c> in</c><00:11:21.620><c> the</c><00:11:21.680><c> system</c><00:11:21.980><c> on</c>

00:11:22.810 --> 00:11:22.820 align:start position:0%
how much video memories in the system on
 

00:11:22.820 --> 00:11:25.960 align:start position:0%
how much video memories in the system on
each<00:11:22.970><c> graphics</c><00:11:23.389><c> card</c><00:11:23.630><c> so</c><00:11:24.279><c> here</c><00:11:25.279><c> we've</c><00:11:25.430><c> got</c><00:11:25.579><c> a</c><00:11:25.639><c> a</c>

00:11:25.960 --> 00:11:25.970 align:start position:0%
each graphics card so here we've got a a
 

00:11:25.970 --> 00:11:29.740 align:start position:0%
each graphics card so here we've got a a
code<00:11:26.480><c> snippet</c><00:11:26.630><c> that</c><00:11:27.170><c> will</c><00:11:28.570><c> query</c><00:11:29.570><c> the</c>

00:11:29.740 --> 00:11:29.750 align:start position:0%
code snippet that will query the
 

00:11:29.750 --> 00:11:33.310 align:start position:0%
code snippet that will query the
renderer<00:11:30.680><c> so</c><00:11:31.130><c> for</c><00:11:32.120><c> video</c><00:11:32.360><c> memory</c><00:11:32.720><c> and</c><00:11:33.110><c> it</c><00:11:33.199><c> goes</c>

00:11:33.310 --> 00:11:33.320 align:start position:0%
renderer so for video memory and it goes
 

00:11:33.320 --> 00:11:34.960 align:start position:0%
renderer so for video memory and it goes
through<00:11:33.529><c> the</c><00:11:33.589><c> loop</c><00:11:33.769><c> and</c><00:11:33.949><c> it</c><00:11:34.070><c> will</c><00:11:34.339><c> look</c><00:11:34.790><c> at</c>

00:11:34.960 --> 00:11:34.970 align:start position:0%
through the loop and it will look at
 

00:11:34.970 --> 00:11:37.300 align:start position:0%
through the loop and it will look at
each<00:11:35.120><c> device</c><00:11:35.510><c> querying</c><00:11:36.440><c> it</c><00:11:36.649><c> for</c><00:11:36.829><c> video</c><00:11:36.980><c> memory</c>

00:11:37.300 --> 00:11:37.310 align:start position:0%
each device querying it for video memory
 

00:11:37.310 --> 00:11:39.519 align:start position:0%
each device querying it for video memory
size<00:11:37.490><c> and</c><00:11:38.180><c> this</c><00:11:38.839><c> is</c><00:11:38.930><c> going</c><00:11:39.019><c> to</c><00:11:39.079><c> be</c><00:11:39.170><c> important</c>

00:11:39.519 --> 00:11:39.529 align:start position:0%
size and this is going to be important
 

00:11:39.529 --> 00:11:43.120 align:start position:0%
size and this is going to be important
because<00:11:39.680><c> as</c><00:11:39.980><c> we</c><00:11:40.899><c> start</c><00:11:41.899><c> to</c><00:11:42.230><c> try</c><00:11:42.529><c> to</c><00:11:42.589><c> adjust</c><00:11:42.740><c> or</c>

00:11:43.120 --> 00:11:43.130 align:start position:0%
because as we start to try to adjust or
 

00:11:43.130 --> 00:11:44.530 align:start position:0%
because as we start to try to adjust or
tune<00:11:43.519><c> our</c><00:11:43.639><c> application</c><00:11:44.089><c> we're</c><00:11:44.209><c> going</c><00:11:44.360><c> to</c><00:11:44.420><c> want</c>

00:11:44.530 --> 00:11:44.540 align:start position:0%
tune our application we're going to want
 

00:11:44.540 --> 00:11:46.180 align:start position:0%
tune our application we're going to want
to<00:11:44.570><c> make</c><00:11:44.690><c> sure</c><00:11:44.750><c> that</c><00:11:45.139><c> the</c><00:11:45.620><c> amount</c><00:11:45.800><c> of</c><00:11:45.860><c> textures</c>

00:11:46.180 --> 00:11:46.190 align:start position:0%
to make sure that the amount of textures
 

00:11:46.190 --> 00:11:48.129 align:start position:0%
to make sure that the amount of textures
we<00:11:46.310><c> have</c><00:11:46.519><c> the</c><00:11:47.420><c> resources</c><00:11:47.750><c> we're</c><00:11:47.899><c> going</c><00:11:48.019><c> to</c><00:11:48.079><c> be</c>

00:11:48.129 --> 00:11:48.139 align:start position:0%
we have the resources we're going to be
 

00:11:48.139 --> 00:11:49.569 align:start position:0%
we have the resources we're going to be
consuming<00:11:48.470><c> on</c><00:11:48.560><c> the</c><00:11:48.649><c> card</c><00:11:48.860><c> are</c><00:11:49.040><c> gonna</c><00:11:49.160><c> fit</c><00:11:49.430><c> in</c>

00:11:49.569 --> 00:11:49.579 align:start position:0%
consuming on the card are gonna fit in
 

00:11:49.579 --> 00:11:52.180 align:start position:0%
consuming on the card are gonna fit in
video<00:11:49.790><c> memory</c><00:11:50.290><c> so</c><00:11:51.290><c> we're</c><00:11:51.800><c> going</c><00:11:51.889><c> to</c><00:11:51.980><c> want</c><00:11:52.100><c> to</c>

00:11:52.180 --> 00:11:52.190 align:start position:0%
video memory so we're going to want to
 

00:11:52.190 --> 00:11:55.389 align:start position:0%
video memory so we're going to want to
know<00:11:52.310><c> this</c><00:11:52.600><c> usually</c><00:11:53.600><c> upfront</c><00:11:53.980><c> if</c><00:11:54.980><c> we</c><00:11:55.220><c> have</c><00:11:55.370><c> a</c>

00:11:55.389 --> 00:11:55.399 align:start position:0%
know this usually upfront if we have a
 

00:11:55.399 --> 00:12:05.129 align:start position:0%
know this usually upfront if we have a
texture<00:11:55.910><c> intensive</c><00:11:57.430><c> application</c><00:12:02.230><c> okay</c><00:12:03.230><c> so</c>

00:12:05.129 --> 00:12:05.139 align:start position:0%
texture intensive application okay so
 

00:12:05.139 --> 00:12:08.139 align:start position:0%
texture intensive application okay so
when<00:12:06.139><c> we</c><00:12:06.320><c> look</c><00:12:06.980><c> at</c><00:12:07.070><c> the</c><00:12:07.130><c> video</c><00:12:07.339><c> memory</c><00:12:07.880><c> size</c>

00:12:08.139 --> 00:12:08.149 align:start position:0%
when we look at the video memory size
 

00:12:08.149 --> 00:12:11.500 align:start position:0%
when we look at the video memory size
there's<00:12:08.990><c> several</c><00:12:09.230><c> things</c><00:12:09.470><c> that</c><00:12:10.209><c> we</c><00:12:11.209><c> may</c><00:12:11.329><c> want</c>

00:12:11.500 --> 00:12:11.510 align:start position:0%
there's several things that we may want
 

00:12:11.510 --> 00:12:12.699 align:start position:0%
there's several things that we may want
to<00:12:11.540><c> adjust</c><00:12:11.630><c> again</c><00:12:12.110><c> we</c><00:12:12.260><c> may</c><00:12:12.410><c> want</c><00:12:12.589><c> to</c><00:12:12.620><c> adjust</c>

00:12:12.699 --> 00:12:12.709 align:start position:0%
to adjust again we may want to adjust
 

00:12:12.709 --> 00:12:15.460 align:start position:0%
to adjust again we may want to adjust
exercises<00:12:13.579><c> but</c><00:12:14.000><c> we</c><00:12:14.120><c> may</c><00:12:14.240><c> also</c><00:12:14.269><c> want</c><00:12:14.839><c> to</c><00:12:15.260><c> adjust</c>

00:12:15.460 --> 00:12:15.470 align:start position:0%
exercises but we may also want to adjust
 

00:12:15.470 --> 00:12:17.050 align:start position:0%
exercises but we may also want to adjust
the<00:12:15.860><c> screen</c><00:12:16.010><c> resolution</c><00:12:16.250><c> if</c><00:12:16.670><c> we're</c><00:12:16.820><c> going</c><00:12:16.940><c> to</c>

00:12:17.050 --> 00:12:17.060 align:start position:0%
the screen resolution if we're going to
 

00:12:17.060 --> 00:12:19.180 align:start position:0%
the screen resolution if we're going to
be<00:12:17.149><c> switching</c><00:12:17.620><c> into</c><00:12:18.620><c> a</c><00:12:18.649><c> full-screen</c><00:12:19.100><c> mode</c>

00:12:19.180 --> 00:12:19.190 align:start position:0%
be switching into a full-screen mode
 

00:12:19.190 --> 00:12:20.650 align:start position:0%
be switching into a full-screen mode
let's<00:12:19.670><c> say</c><00:12:19.820><c> we're</c><00:12:20.029><c> going</c><00:12:20.149><c> to</c><00:12:20.240><c> have</c><00:12:20.480><c> the</c>

00:12:20.650 --> 00:12:20.660 align:start position:0%
let's say we're going to have the
 

00:12:20.660 --> 00:12:23.019 align:start position:0%
let's say we're going to have the
opportunity<00:12:20.899><c> for</c><00:12:21.800><c> picking</c><00:12:22.190><c> a</c><00:12:22.399><c> screen</c><00:12:22.820><c> depth</c>

00:12:23.019 --> 00:12:23.029 align:start position:0%
opportunity for picking a screen depth
 

00:12:23.029 --> 00:12:26.350 align:start position:0%
opportunity for picking a screen depth
in<00:12:23.209><c> a</c><00:12:23.300><c> screen</c><00:12:23.570><c> resolution</c><00:12:24.220><c> if</c><00:12:25.220><c> you</c><00:12:25.640><c> have</c>

00:12:26.350 --> 00:12:26.360 align:start position:0%
in a screen resolution if you have
 

00:12:26.360 --> 00:12:30.340 align:start position:0%
in a screen resolution if you have
determined<00:12:26.839><c> your</c><00:12:27.079><c> application</c><00:12:27.620><c> needs</c><00:12:29.350><c> more</c>

00:12:30.340 --> 00:12:30.350 align:start position:0%
determined your application needs more
 

00:12:30.350 --> 00:12:31.569 align:start position:0%
determined your application needs more
video<00:12:30.649><c> memory</c><00:12:30.829><c> and</c><00:12:31.040><c> it's</c><00:12:31.160><c> potentially</c>

00:12:31.569 --> 00:12:31.579 align:start position:0%
video memory and it's potentially
 

00:12:31.579 --> 00:12:32.769 align:start position:0%
video memory and it's potentially
available<00:12:32.000><c> in</c><00:12:32.060><c> the</c><00:12:32.120><c> current</c><00:12:32.269><c> display</c><00:12:32.600><c> mode</c>

00:12:32.769 --> 00:12:32.779 align:start position:0%
available in the current display mode
 

00:12:32.779 --> 00:12:34.329 align:start position:0%
available in the current display mode
then<00:12:33.320><c> you'll</c><00:12:33.470><c> want</c><00:12:33.649><c> to</c><00:12:33.740><c> switch</c><00:12:33.949><c> it</c><00:12:33.980><c> down</c><00:12:34.100><c> to</c><00:12:34.310><c> a</c>

00:12:34.329 --> 00:12:34.339 align:start position:0%
then you'll want to switch it down to a
 

00:12:34.339 --> 00:12:36.639 align:start position:0%
then you'll want to switch it down to a
16-bit<00:12:34.760><c> color</c><00:12:35.120><c> potentially</c><00:12:35.690><c> or</c><00:12:35.899><c> you'll</c><00:12:36.440><c> want</c>

00:12:36.639 --> 00:12:36.649 align:start position:0%
16-bit color potentially or you'll want
 

00:12:36.649 --> 00:12:38.590 align:start position:0%
16-bit color potentially or you'll want
to<00:12:36.740><c> switch</c><00:12:36.980><c> down</c><00:12:37.190><c> the</c><00:12:37.310><c> resolution</c><00:12:37.820><c> give</c><00:12:38.449><c> the</c>

00:12:38.590 --> 00:12:38.600 align:start position:0%
to switch down the resolution give the
 

00:12:38.600 --> 00:12:40.150 align:start position:0%
to switch down the resolution give the
application<00:12:39.050><c> more</c><00:12:39.230><c> breathing</c><00:12:39.709><c> room</c><00:12:39.740><c> on</c><00:12:40.070><c> the</c>

00:12:40.150 --> 00:12:40.160 align:start position:0%
application more breathing room on the
 

00:12:40.160 --> 00:12:42.990 align:start position:0%
application more breathing room on the
graphics<00:12:40.519><c> card</c><00:12:40.760><c> and</c><00:12:40.970><c> that</c><00:12:41.870><c> will</c><00:12:41.990><c> help</c><00:12:42.140><c> with</c>

00:12:42.990 --> 00:12:43.000 align:start position:0%
graphics card and that will help with
 

00:12:43.000 --> 00:12:45.069 align:start position:0%
graphics card and that will help with
keeping<00:12:44.000><c> your</c><00:12:44.060><c> application</c><00:12:44.540><c> out</c><00:12:44.630><c> of</c><00:12:44.779><c> a</c><00:12:44.839><c> text</c>

00:12:45.069 --> 00:12:45.079 align:start position:0%
keeping your application out of a text
 

00:12:45.079 --> 00:12:47.560 align:start position:0%
keeping your application out of a text
or<00:12:45.199><c> paging</c><00:12:45.500><c> mode</c><00:12:45.649><c> and</c><00:12:45.980><c> give</c><00:12:46.100><c> the</c><00:12:46.250><c> a</c><00:12:46.880><c> higher</c>

00:12:47.560 --> 00:12:47.570 align:start position:0%
or paging mode and give the a higher
 

00:12:47.570 --> 00:12:49.540 align:start position:0%
or paging mode and give the a higher
frame<00:12:47.930><c> rate</c><00:12:48.199><c> during</c><00:12:48.589><c> the</c><00:12:48.740><c> running</c><00:12:49.399><c> in</c><00:12:49.490><c> the</c>

00:12:49.540 --> 00:12:49.550 align:start position:0%
frame rate during the running in the
 

00:12:49.550 --> 00:12:53.199 align:start position:0%
frame rate during the running in the
application<00:12:50.860><c> so</c><00:12:51.860><c> the</c><00:12:52.760><c> other</c><00:12:52.880><c> thing</c><00:12:53.060><c> you'll</c>

00:12:53.199 --> 00:12:53.209 align:start position:0%
application so the other thing you'll
 

00:12:53.209 --> 00:12:55.480 align:start position:0%
application so the other thing you'll
want<00:12:53.360><c> to</c><00:12:53.420><c> do</c><00:12:53.569><c> is</c><00:12:53.750><c> to</c><00:12:54.560><c> find</c><00:12:54.800><c> out</c><00:12:54.949><c> what</c><00:12:55.130><c> CPU</c>

00:12:55.480 --> 00:12:55.490 align:start position:0%
want to do is to find out what CPU
 

00:12:55.490 --> 00:12:57.910 align:start position:0%
want to do is to find out what CPU
you're<00:12:55.699><c> on</c><00:12:56.019><c> one</c><00:12:57.019><c> thing</c><00:12:57.230><c> that</c><00:12:57.380><c> we</c><00:12:57.470><c> find</c><00:12:57.769><c> very</c>

00:12:57.910 --> 00:12:57.920 align:start position:0%
you're on one thing that we find very
 

00:12:57.920 --> 00:13:00.100 align:start position:0%
you're on one thing that we find very
useful<00:12:58.130><c> is</c><00:12:58.750><c> internally</c><00:12:59.750><c> the</c><00:12:59.810><c> open</c><00:12:59.990><c> till</c>

00:13:00.100 --> 00:13:00.110 align:start position:0%
useful is internally the open till
 

00:13:00.110 --> 00:13:03.309 align:start position:0%
useful is internally the open till
obviously<00:13:00.500><c> is</c><00:13:00.620><c> using</c><00:13:01.310><c> altivec</c><00:13:01.760><c> and</c><00:13:02.319><c> altivec</c>

00:13:03.309 --> 00:13:03.319 align:start position:0%
obviously is using altivec and altivec
 

00:13:03.319 --> 00:13:05.439 align:start position:0%
obviously is using altivec and altivec
can<00:13:04.190><c> give</c><00:13:04.459><c> you</c><00:13:04.579><c> substantial</c><00:13:05.089><c> performance</c>

00:13:05.439 --> 00:13:05.449 align:start position:0%
can give you substantial performance
 

00:13:05.449 --> 00:13:07.689 align:start position:0%
can give you substantial performance
boosts<00:13:05.779><c> if</c><00:13:05.870><c> you</c><00:13:05.990><c> utilize</c><00:13:06.380><c> it</c><00:13:06.560><c> so</c><00:13:07.220><c> finding</c><00:13:07.610><c> out</c>

00:13:07.689 --> 00:13:07.699 align:start position:0%
boosts if you utilize it so finding out
 

00:13:07.699 --> 00:13:10.379 align:start position:0%
boosts if you utilize it so finding out
if<00:13:07.819><c> you're</c><00:13:07.940><c> on</c><00:13:08.060><c> a</c><00:13:08.089><c> g3</c><00:13:08.720><c> or</c><00:13:08.750><c> a</c><00:13:08.959><c> g4</c><00:13:09.500><c> is</c><00:13:09.649><c> very</c><00:13:09.860><c> useful</c>

00:13:10.379 --> 00:13:10.389 align:start position:0%
if you're on a g3 or a g4 is very useful
 

00:13:10.389 --> 00:13:14.530 align:start position:0%
if you're on a g3 or a g4 is very useful
and<00:13:11.389><c> tuning</c><00:13:12.260><c> to</c><00:13:12.380><c> that</c><00:13:12.500><c> condition</c><00:13:12.920><c> can</c><00:13:13.579><c> be</c><00:13:13.610><c> very</c>

00:13:14.530 --> 00:13:14.540 align:start position:0%
and tuning to that condition can be very
 

00:13:14.540 --> 00:13:16.300 align:start position:0%
and tuning to that condition can be very
beneficial<00:13:14.920><c> the</c><00:13:15.920><c> other</c><00:13:16.040><c> thing</c><00:13:16.190><c> to</c><00:13:16.279><c> remember</c>

00:13:16.300 --> 00:13:16.310 align:start position:0%
beneficial the other thing to remember
 

00:13:16.310 --> 00:13:18.250 align:start position:0%
beneficial the other thing to remember
about<00:13:16.579><c> that</c><00:13:16.940><c> is</c><00:13:17.089><c> that</c><00:13:17.269><c> typically</c><00:13:17.959><c> the</c>

00:13:18.250 --> 00:13:18.260 align:start position:0%
about that is that typically the
 

00:13:18.260 --> 00:13:20.230 align:start position:0%
about that is that typically the
difference<00:13:18.589><c> between</c><00:13:18.680><c> g3</c><00:13:19.130><c> and</c><00:13:19.190><c> g4</c><00:13:19.279><c> is</c><00:13:19.699><c> that</c><00:13:19.819><c> g4</c>

00:13:20.230 --> 00:13:20.240 align:start position:0%
difference between g3 and g4 is that g4
 

00:13:20.240 --> 00:13:21.160 align:start position:0%
difference between g3 and g4 is that g4
systems<00:13:20.690><c> are</c><00:13:20.810><c> going</c><00:13:20.930><c> to</c>

00:13:21.160 --> 00:13:21.170 align:start position:0%
systems are going to
 

00:13:21.170 --> 00:13:23.259 align:start position:0%
systems are going to
faster<00:13:21.620><c> and</c><00:13:21.740><c> you</c><00:13:22.070><c> may</c><00:13:22.160><c> want</c><00:13:22.430><c> to</c><00:13:22.519><c> think</c><00:13:22.820><c> about</c>

00:13:23.259 --> 00:13:23.269 align:start position:0%
faster and you may want to think about
 

00:13:23.269 --> 00:13:25.680 align:start position:0%
faster and you may want to think about
adjusting<00:13:23.810><c> your</c><00:13:23.899><c> data</c><00:13:24.170><c> set</c><00:13:24.440><c> size</c><00:13:24.680><c> to</c>

00:13:25.680 --> 00:13:25.690 align:start position:0%
adjusting your data set size to
 

00:13:25.690 --> 00:13:31.090 align:start position:0%
adjusting your data set size to
accommodate<00:13:26.690><c> faster</c><00:13:27.260><c> systems</c><00:13:29.649><c> so</c><00:13:30.649><c> quickly</c>

00:13:31.090 --> 00:13:31.100 align:start position:0%
accommodate faster systems so quickly
 

00:13:31.100 --> 00:13:34.509 align:start position:0%
accommodate faster systems so quickly
talking<00:13:31.370><c> about</c><00:13:31.959><c> state</c><00:13:32.959><c> management</c><00:13:33.339><c> so</c><00:13:34.339><c> state</c>

00:13:34.509 --> 00:13:34.519 align:start position:0%
talking about state management so state
 

00:13:34.519 --> 00:13:37.540 align:start position:0%
talking about state management so state
management<00:13:34.820><c> again</c><00:13:35.300><c> is</c><00:13:35.510><c> is</c><00:13:35.720><c> the</c><00:13:36.279><c> process</c><00:13:37.279><c> of</c>

00:13:37.540 --> 00:13:37.550 align:start position:0%
management again is is the process of
 

00:13:37.550 --> 00:13:40.360 align:start position:0%
management again is is the process of
switching<00:13:38.420><c> wet</c><00:13:38.990><c> mud</c><00:13:39.230><c> OpenGL</c><00:13:39.800><c> is</c><00:13:39.920><c> running</c><00:13:40.250><c> in</c>

00:13:40.360 --> 00:13:40.370 align:start position:0%
switching wet mud OpenGL is running in
 

00:13:40.370 --> 00:13:43.870 align:start position:0%
switching wet mud OpenGL is running in
to<00:13:40.760><c> get</c><00:13:41.149><c> your</c><00:13:41.329><c> proper</c><00:13:42.730><c> configuration</c><00:13:43.730><c> for</c>

00:13:43.870 --> 00:13:43.880 align:start position:0%
to get your proper configuration for
 

00:13:43.880 --> 00:13:47.920 align:start position:0%
to get your proper configuration for
drawing<00:13:44.300><c> your</c><00:13:44.449><c> graphics</c><00:13:45.430><c> the</c><00:13:46.810><c> thing</c><00:13:47.810><c> to</c>

00:13:47.920 --> 00:13:47.930 align:start position:0%
drawing your graphics the thing to
 

00:13:47.930 --> 00:13:49.090 align:start position:0%
drawing your graphics the thing to
remember<00:13:48.230><c> a</c><00:13:48.260><c> state</c><00:13:48.470><c> changes</c><00:13:48.709><c> you</c><00:13:48.829><c> want</c><00:13:49.010><c> to</c>

00:13:49.090 --> 00:13:49.100 align:start position:0%
remember a state changes you want to
 

00:13:49.100 --> 00:13:51.699 align:start position:0%
remember a state changes you want to
minimize<00:13:49.430><c> those</c><00:13:50.019><c> what</c><00:13:51.019><c> we</c><00:13:51.110><c> have</c><00:13:51.260><c> found</c><00:13:51.500><c> is</c>

00:13:51.699 --> 00:13:51.709 align:start position:0%
minimize those what we have found is
 

00:13:51.709 --> 00:13:54.370 align:start position:0%
minimize those what we have found is
that<00:13:51.740><c> in</c><00:13:52.010><c> a</c><00:13:52.070><c> lot</c><00:13:52.190><c> of</c><00:13:52.220><c> applications</c><00:13:52.880><c> the</c><00:13:53.810><c> amount</c>

00:13:54.370 --> 00:13:54.380 align:start position:0%
that in a lot of applications the amount
 

00:13:54.380 --> 00:13:56.170 align:start position:0%
that in a lot of applications the amount
of<00:13:54.470><c> time</c><00:13:54.680><c> that's</c><00:13:54.889><c> actually</c><00:13:55.190><c> spending</c><00:13:55.430><c> OpenGL</c>

00:13:56.170 --> 00:13:56.180 align:start position:0%
of time that's actually spending OpenGL
 

00:13:56.180 --> 00:13:57.699 align:start position:0%
of time that's actually spending OpenGL
a<00:13:56.209><c> considerable</c><00:13:56.930><c> portion</c><00:13:57.199><c> of</c><00:13:57.410><c> that</c><00:13:57.529><c> is</c>

00:13:57.699 --> 00:13:57.709 align:start position:0%
a considerable portion of that is
 

00:13:57.709 --> 00:14:00.370 align:start position:0%
a considerable portion of that is
actually<00:13:58.040><c> in</c><00:13:58.130><c> doing</c><00:13:58.399><c> state</c><00:13:58.670><c> management</c><00:13:59.380><c> and</c>

00:14:00.370 --> 00:14:00.380 align:start position:0%
actually in doing state management and
 

00:14:00.380 --> 00:14:05.079 align:start position:0%
actually in doing state management and
if<00:14:00.649><c> you</c><00:14:02.769><c> unnecessarily</c><00:14:03.769><c> change</c><00:14:04.250><c> state</c><00:14:04.550><c> you</c>

00:14:05.079 --> 00:14:05.089 align:start position:0%
if you unnecessarily change state you
 

00:14:05.089 --> 00:14:06.939 align:start position:0%
if you unnecessarily change state you
can<00:14:05.269><c> cause</c><00:14:05.449><c> a</c><00:14:05.480><c> lot</c><00:14:05.600><c> of</c><00:14:05.750><c> thrashing</c><00:14:06.110><c> down</c><00:14:06.740><c> on</c><00:14:06.860><c> the</c>

00:14:06.939 --> 00:14:06.949 align:start position:0%
can cause a lot of thrashing down on the
 

00:14:06.949 --> 00:14:09.280 align:start position:0%
can cause a lot of thrashing down on the
card<00:14:07.160><c> because</c><00:14:07.690><c> OpenGL</c><00:14:08.690><c> has</c><00:14:08.870><c> to</c><00:14:08.990><c> go</c><00:14:09.079><c> through</c><00:14:09.230><c> a</c>

00:14:09.280 --> 00:14:09.290 align:start position:0%
card because OpenGL has to go through a
 

00:14:09.290 --> 00:14:12.069 align:start position:0%
card because OpenGL has to go through a
lot<00:14:09.470><c> of</c><00:14:09.500><c> setup</c><00:14:09.800><c> to</c><00:14:10.300><c> properly</c><00:14:11.300><c> configure</c><00:14:11.930><c> the</c>

00:14:12.069 --> 00:14:12.079 align:start position:0%
lot of setup to properly configure the
 

00:14:12.079 --> 00:14:14.829 align:start position:0%
lot of setup to properly configure the
graphics<00:14:12.470><c> card</c><00:14:12.709><c> for</c><00:14:13.070><c> each</c><00:14:13.100><c> state</c><00:14:13.459><c> change</c><00:14:13.839><c> some</c>

00:14:14.829 --> 00:14:14.839 align:start position:0%
graphics card for each state change some
 

00:14:14.839 --> 00:14:16.900 align:start position:0%
graphics card for each state change some
state<00:14:15.320><c> changes</c><00:14:15.620><c> are</c><00:14:15.709><c> obviously</c><00:14:16.070><c> more</c>

00:14:16.900 --> 00:14:16.910 align:start position:0%
state changes are obviously more
 

00:14:16.910 --> 00:14:19.329 align:start position:0%
state changes are obviously more
expensive<00:14:17.630><c> than</c><00:14:18.260><c> others</c><00:14:18.470><c> and</c><00:14:19.070><c> we'll</c><00:14:19.220><c> go</c>

00:14:19.329 --> 00:14:19.339 align:start position:0%
expensive than others and we'll go
 

00:14:19.339 --> 00:14:21.730 align:start position:0%
expensive than others and we'll go
through<00:14:19.550><c> a</c><00:14:19.579><c> few</c><00:14:19.639><c> of</c><00:14:19.910><c> those</c><00:14:20.380><c> which</c><00:14:21.380><c> ones</c><00:14:21.620><c> to</c>

00:14:21.730 --> 00:14:21.740 align:start position:0%
through a few of those which ones to
 

00:14:21.740 --> 00:14:24.160 align:start position:0%
through a few of those which ones to
avoid<00:14:21.829><c> but</c><00:14:22.760><c> in</c><00:14:23.029><c> general</c><00:14:23.420><c> you</c><00:14:23.570><c> want</c><00:14:23.720><c> to</c><00:14:23.839><c> group</c>

00:14:24.160 --> 00:14:24.170 align:start position:0%
avoid but in general you want to group
 

00:14:24.170 --> 00:14:26.819 align:start position:0%
avoid but in general you want to group
your<00:14:24.290><c> data</c><00:14:24.500><c> to</c><00:14:24.680><c> minimize</c><00:14:25.010><c> state</c><00:14:25.250><c> changes</c><00:14:25.640><c> and</c>

00:14:26.819 --> 00:14:26.829 align:start position:0%
your data to minimize state changes and
 

00:14:26.829 --> 00:14:29.560 align:start position:0%
your data to minimize state changes and
that<00:14:27.829><c> will</c><00:14:28.220><c> have</c><00:14:28.399><c> a</c><00:14:28.430><c> significant</c><00:14:29.120><c> impact</c><00:14:29.209><c> on</c>

00:14:29.560 --> 00:14:29.570 align:start position:0%
that will have a significant impact on
 

00:14:29.570 --> 00:14:30.550 align:start position:0%
that will have a significant impact on
what<00:14:29.720><c> performance</c><00:14:30.110><c> you</c><00:14:30.199><c> can</c><00:14:30.350><c> ultimately</c>

00:14:30.550 --> 00:14:30.560 align:start position:0%
what performance you can ultimately
 

00:14:30.560 --> 00:14:36.550 align:start position:0%
what performance you can ultimately
achieve<00:14:31.420><c> so</c><00:14:33.220><c> some</c><00:14:34.220><c> general</c><00:14:35.199><c> calls</c><00:14:36.199><c> you</c><00:14:36.380><c> want</c>

00:14:36.550 --> 00:14:36.560 align:start position:0%
achieve so some general calls you want
 

00:14:36.560 --> 00:14:40.720 align:start position:0%
achieve so some general calls you want
to<00:14:36.649><c> avoid</c><00:14:36.860><c> geo</c><00:14:37.790><c> flush</c><00:14:38.149><c> so</c><00:14:39.310><c> you</c><00:14:40.310><c> want</c><00:14:40.459><c> to</c><00:14:40.519><c> avoid</c>

00:14:40.720 --> 00:14:40.730 align:start position:0%
to avoid geo flush so you want to avoid
 

00:14:40.730 --> 00:14:44.620 align:start position:0%
to avoid geo flush so you want to avoid
geo<00:14:41.060><c> flush</c><00:14:42.220><c> because</c><00:14:43.220><c> what</c><00:14:44.029><c> it</c><00:14:44.120><c> actually</c><00:14:44.329><c> does</c>

00:14:44.620 --> 00:14:44.630 align:start position:0%
geo flush because what it actually does
 

00:14:44.630 --> 00:14:47.439 align:start position:0%
geo flush because what it actually does
is<00:14:44.899><c> if</c><00:14:45.260><c> you</c><00:14:45.709><c> again</c><00:14:46.250><c> think</c><00:14:46.579><c> about</c><00:14:46.670><c> OpenGL</c><00:14:47.060><c> as</c><00:14:47.329><c> a</c>

00:14:47.439 --> 00:14:47.449 align:start position:0%
is if you again think about OpenGL as a
 

00:14:47.449 --> 00:14:48.880 align:start position:0%
is if you again think about OpenGL as a
command<00:14:47.779><c> stream</c><00:14:48.110><c> going</c><00:14:48.320><c> to</c><00:14:48.410><c> the</c><00:14:48.529><c> graphics</c>

00:14:48.880 --> 00:14:48.890 align:start position:0%
command stream going to the graphics
 

00:14:48.890 --> 00:14:51.100 align:start position:0%
command stream going to the graphics
card<00:14:49.100><c> geo</c><00:14:49.820><c> flush</c><00:14:50.149><c> tells</c><00:14:50.449><c> the</c><00:14:50.540><c> graphics</c><00:14:50.870><c> card</c>

00:14:51.100 --> 00:14:51.110 align:start position:0%
card geo flush tells the graphics card
 

00:14:51.110 --> 00:14:52.720 align:start position:0%
card geo flush tells the graphics card
terminate<00:14:51.920><c> the</c><00:14:52.010><c> current</c><00:14:52.250><c> command</c><00:14:52.519><c> stream</c>

00:14:52.720 --> 00:14:52.730 align:start position:0%
terminate the current command stream
 

00:14:52.730 --> 00:14:54.790 align:start position:0%
terminate the current command stream
send<00:14:53.690><c> it</c><00:14:53.779><c> to</c><00:14:53.839><c> the</c><00:14:53.930><c> graphics</c><00:14:54.260><c> card</c><00:14:54.470><c> and</c><00:14:54.560><c> start</c>

00:14:54.790 --> 00:14:54.800 align:start position:0%
send it to the graphics card and start
 

00:14:54.800 --> 00:14:57.130 align:start position:0%
send it to the graphics card and start
me<00:14:54.920><c> a</c><00:14:54.949><c> new</c><00:14:55.130><c> one</c><00:14:55.310><c> so</c><00:14:56.089><c> you've</c><00:14:56.300><c> just</c><00:14:56.329><c> chopped</c><00:14:56.959><c> that</c>

00:14:57.130 --> 00:14:57.140 align:start position:0%
me a new one so you've just chopped that
 

00:14:57.140 --> 00:15:00.340 align:start position:0%
me a new one so you've just chopped that
command<00:14:57.500><c> stream</c><00:14:57.740><c> and</c><00:14:58.570><c> and</c><00:14:59.570><c> sent</c><00:15:00.079><c> it</c><00:15:00.199><c> on</c><00:15:00.290><c> its</c>

00:15:00.340 --> 00:15:00.350 align:start position:0%
command stream and and sent it on its
 

00:15:00.350 --> 00:15:02.860 align:start position:0%
command stream and and sent it on its
way<00:15:01.060><c> and</c><00:15:02.060><c> the</c><00:15:02.120><c> reason</c><00:15:02.540><c> that</c><00:15:02.570><c> you</c><00:15:02.720><c> don't</c><00:15:02.779><c> want</c>

00:15:02.860 --> 00:15:02.870 align:start position:0%
way and the reason that you don't want
 

00:15:02.870 --> 00:15:05.290 align:start position:0%
way and the reason that you don't want
to<00:15:03.019><c> do</c><00:15:03.140><c> this</c><00:15:03.260><c> necessarily</c><00:15:03.980><c> is</c><00:15:04.300><c> because</c>

00:15:05.290 --> 00:15:05.300 align:start position:0%
to do this necessarily is because
 

00:15:05.300 --> 00:15:08.350 align:start position:0%
to do this necessarily is because
there's<00:15:05.899><c> only</c><00:15:06.490><c> so</c><00:15:07.490><c> many</c><00:15:07.670><c> command</c><00:15:08.060><c> buffers</c>

00:15:08.350 --> 00:15:08.360 align:start position:0%
there's only so many command buffers
 

00:15:08.360 --> 00:15:10.210 align:start position:0%
there's only so many command buffers
that<00:15:08.390><c> you</c><00:15:08.690><c> can</c><00:15:08.870><c> have</c><00:15:09.079><c> allocated</c><00:15:09.949><c> your</c>

00:15:10.210 --> 00:15:10.220 align:start position:0%
that you can have allocated your
 

00:15:10.220 --> 00:15:12.069 align:start position:0%
that you can have allocated your
application<00:15:10.610><c> in</c><00:15:10.699><c> a</c><00:15:10.730><c> given</c><00:15:10.970><c> time</c><00:15:11.000><c> so</c><00:15:11.839><c> if</c><00:15:11.959><c> you</c>

00:15:12.069 --> 00:15:12.079 align:start position:0%
application in a given time so if you
 

00:15:12.079 --> 00:15:15.040 align:start position:0%
application in a given time so if you
sit<00:15:12.290><c> there</c><00:15:12.319><c> and</c><00:15:12.589><c> call</c><00:15:13.430><c> Gio</c><00:15:13.670><c> flush</c><00:15:13.940><c> a</c><00:15:13.970><c> lot</c><00:15:14.240><c> you</c>

00:15:15.040 --> 00:15:15.050 align:start position:0%
sit there and call Gio flush a lot you
 

00:15:15.050 --> 00:15:16.269 align:start position:0%
sit there and call Gio flush a lot you
will<00:15:15.170><c> use</c><00:15:15.350><c> up</c><00:15:15.529><c> the</c><00:15:15.649><c> buffers</c><00:15:15.920><c> that</c><00:15:16.069><c> you</c><00:15:16.160><c> have</c>

00:15:16.269 --> 00:15:16.279 align:start position:0%
will use up the buffers that you have
 

00:15:16.279 --> 00:15:17.680 align:start position:0%
will use up the buffers that you have
available<00:15:16.670><c> to</c><00:15:16.760><c> your</c><00:15:16.819><c> application</c><00:15:17.329><c> and</c><00:15:17.540><c> your</c>

00:15:17.680 --> 00:15:17.690 align:start position:0%
available to your application and your
 

00:15:17.690 --> 00:15:19.600 align:start position:0%
available to your application and your
application<00:15:18.110><c> may</c><00:15:18.230><c> be</c><00:15:18.260><c> starved</c><00:15:18.829><c> for</c><00:15:19.100><c> available</c>

00:15:19.600 --> 00:15:19.610 align:start position:0%
application may be starved for available
 

00:15:19.610 --> 00:15:21.610 align:start position:0%
application may be starved for available
space<00:15:19.850><c> to</c><00:15:20.089><c> stick</c><00:15:20.420><c> you</c><00:15:20.959><c> know</c><00:15:20.990><c> put</c><00:15:21.260><c> data</c><00:15:21.440><c> on</c><00:15:21.560><c> the</c>

00:15:21.610 --> 00:15:21.620 align:start position:0%
space to stick you know put data on the
 

00:15:21.620 --> 00:15:23.889 align:start position:0%
space to stick you know put data on the
stream<00:15:22.029><c> so</c><00:15:23.029><c> unless</c><00:15:23.180><c> you</c><00:15:23.300><c> have</c><00:15:23.360><c> to</c>

00:15:23.889 --> 00:15:23.899 align:start position:0%
stream so unless you have to
 

00:15:23.899 --> 00:15:28.090 align:start position:0%
stream so unless you have to
don't<00:15:24.410><c> call</c><00:15:24.560><c> Gio</c><00:15:24.740><c> flush</c><00:15:25.010><c> and</c><00:15:27.100><c> there's</c>

00:15:28.090 --> 00:15:28.100 align:start position:0%
don't call Gio flush and there's
 

00:15:28.100 --> 00:15:29.439 align:start position:0%
don't call Gio flush and there's
actually<00:15:28.370><c> very</c><00:15:28.399><c> few</c><00:15:28.579><c> reasons</c><00:15:28.910><c> to</c><00:15:29.120><c> ever</c><00:15:29.240><c> call</c>

00:15:29.439 --> 00:15:29.449 align:start position:0%
actually very few reasons to ever call
 

00:15:29.449 --> 00:15:31.540 align:start position:0%
actually very few reasons to ever call
it<00:15:29.680><c> usually</c><00:15:30.680><c> you</c><00:15:30.769><c> can</c><00:15:30.890><c> find</c><00:15:31.100><c> some</c><00:15:31.279><c> other</c><00:15:31.399><c> way</c>

00:15:31.540 --> 00:15:31.550 align:start position:0%
it usually you can find some other way
 

00:15:31.550 --> 00:15:33.130 align:start position:0%
it usually you can find some other way
to<00:15:31.610><c> do</c><00:15:31.850><c> what</c><00:15:32.000><c> you're</c><00:15:32.149><c> looking</c><00:15:32.360><c> to</c><00:15:32.420><c> do</c><00:15:32.569><c> if</c><00:15:32.690><c> if</c>

00:15:33.130 --> 00:15:33.140 align:start position:0%
to do what you're looking to do if if
 

00:15:33.140 --> 00:15:34.530 align:start position:0%
to do what you're looking to do if if
you<00:15:33.290><c> want</c><00:15:33.529><c> the</c><00:15:33.620><c> user</c>

00:15:34.530 --> 00:15:34.540 align:start position:0%
you want the user
 

00:15:34.540 --> 00:15:38.640 align:start position:0%
you want the user
to<00:15:34.630><c> see</c><00:15:34.900><c> something</c><00:15:35.170><c> immediately</c><00:15:37.530><c> usually</c><00:15:38.530><c> you</c>

00:15:38.640 --> 00:15:38.650 align:start position:0%
to see something immediately usually you
 

00:15:38.650 --> 00:15:40.770 align:start position:0%
to see something immediately usually you
just<00:15:38.680><c> call</c><00:15:38.980><c> swap</c><00:15:39.250><c> buffers</c><00:15:39.460><c> to</c><00:15:39.640><c> get</c><00:15:40.120><c> the</c><00:15:40.300><c> data</c>

00:15:40.770 --> 00:15:40.780 align:start position:0%
just call swap buffers to get the data
 

00:15:40.780 --> 00:15:42.450 align:start position:0%
just call swap buffers to get the data
swap<00:15:41.080><c> of</c><00:15:41.230><c> the</c><00:15:41.290><c> screen</c><00:15:41.560><c> and</c><00:15:42.070><c> swap</c><00:15:42.280><c> buffers</c>

00:15:42.450 --> 00:15:42.460 align:start position:0%
swap of the screen and swap buffers
 

00:15:42.460 --> 00:15:45.840 align:start position:0%
swap of the screen and swap buffers
actually<00:15:43.000><c> calls</c><00:15:43.620><c> is</c><00:15:44.620><c> implicitly</c><00:15:45.370><c> calls</c><00:15:45.670><c> a</c>

00:15:45.840 --> 00:15:45.850 align:start position:0%
actually calls is implicitly calls a
 

00:15:45.850 --> 00:15:47.310 align:start position:0%
actually calls is implicitly calls a
flush<00:15:46.120><c> so</c><00:15:46.450><c> when</c><00:15:46.570><c> you</c><00:15:46.630><c> call</c><00:15:46.780><c> swap</c><00:15:47.050><c> it</c>

00:15:47.310 --> 00:15:47.320 align:start position:0%
flush so when you call swap it
 

00:15:47.320 --> 00:15:48.870 align:start position:0%
flush so when you call swap it
terminates<00:15:47.710><c> a</c><00:15:47.770><c> stream</c><00:15:48.040><c> sends</c><00:15:48.430><c> it</c><00:15:48.490><c> to</c><00:15:48.580><c> the</c><00:15:48.670><c> card</c>

00:15:48.870 --> 00:15:48.880 align:start position:0%
terminates a stream sends it to the card
 

00:15:48.880 --> 00:15:53.400 align:start position:0%
terminates a stream sends it to the card
and<00:15:51.060><c> so</c><00:15:52.060><c> you</c><00:15:52.690><c> don't</c><00:15:52.870><c> necessarily</c><00:15:53.290><c> have</c><00:15:53.380><c> to</c>

00:15:53.400 --> 00:15:53.410 align:start position:0%
and so you don't necessarily have to
 

00:15:53.410 --> 00:15:55.350 align:start position:0%
and so you don't necessarily have to
call<00:15:53.560><c> geo</c><00:15:53.740><c> flush</c><00:15:53.950><c> yourself</c><00:15:54.120><c> another</c><00:15:55.120><c> call</c>

00:15:55.350 --> 00:15:55.360 align:start position:0%
call geo flush yourself another call
 

00:15:55.360 --> 00:15:57.060 align:start position:0%
call geo flush yourself another call
that's<00:15:55.600><c> even</c><00:15:55.960><c> more</c><00:15:56.080><c> expensive</c><00:15:56.290><c> is</c><00:15:56.560><c> geo</c><00:15:56.710><c> finish</c>

00:15:57.060 --> 00:15:57.070 align:start position:0%
that's even more expensive is geo finish
 

00:15:57.070 --> 00:15:59.700 align:start position:0%
that's even more expensive is geo finish
so<00:15:57.700><c> geo</c><00:15:57.880><c> finish</c><00:15:58.150><c> is</c><00:15:58.240><c> like</c><00:15:58.360><c> a</c><00:15:58.390><c> GL</c><00:15:58.660><c> flush</c><00:15:58.900><c> except</c>

00:15:59.700 --> 00:15:59.710 align:start position:0%
so geo finish is like a GL flush except
 

00:15:59.710 --> 00:16:01.650 align:start position:0%
so geo finish is like a GL flush except
for<00:15:59.860><c> it</c><00:16:00.040><c> sends</c><00:16:00.490><c> the</c><00:16:00.550><c> data</c><00:16:00.670><c> to</c><00:16:00.910><c> the</c><00:16:00.940><c> card</c><00:16:01.210><c> and</c><00:16:01.480><c> it</c>

00:16:01.650 --> 00:16:01.660 align:start position:0%
for it sends the data to the card and it
 

00:16:01.660 --> 00:16:03.960 align:start position:0%
for it sends the data to the card and it
actually<00:16:01.810><c> both</c><00:16:02.170><c> block</c><00:16:03.160><c> they're</c><00:16:03.490><c> waiting</c><00:16:03.940><c> for</c>

00:16:03.960 --> 00:16:03.970 align:start position:0%
actually both block they're waiting for
 

00:16:03.970 --> 00:16:05.850 align:start position:0%
actually both block they're waiting for
the<00:16:04.450><c> graphics</c><00:16:04.810><c> card</c><00:16:05.050><c> to</c><00:16:05.140><c> finish</c><00:16:05.320><c> its</c><00:16:05.590><c> drawing</c>

00:16:05.850 --> 00:16:05.860 align:start position:0%
the graphics card to finish its drawing
 

00:16:05.860 --> 00:16:08.220 align:start position:0%
the graphics card to finish its drawing
so<00:16:06.580><c> once</c><00:16:06.850><c> all</c><00:16:07.090><c> the</c><00:16:07.210><c> commands</c><00:16:07.480><c> have</c><00:16:07.630><c> gone</c><00:16:08.110><c> to</c>

00:16:08.220 --> 00:16:08.230 align:start position:0%
so once all the commands have gone to
 

00:16:08.230 --> 00:16:09.750 align:start position:0%
so once all the commands have gone to
the<00:16:08.320><c> graphics</c><00:16:08.650><c> card</c><00:16:08.890><c> finish</c><00:16:09.310><c> to</c><00:16:09.430><c> come</c><00:16:09.580><c> back</c>

00:16:09.750 --> 00:16:09.760 align:start position:0%
the graphics card finish to come back
 

00:16:09.760 --> 00:16:11.790 align:start position:0%
the graphics card finish to come back
and<00:16:09.970><c> return</c><00:16:10.090><c> then</c><00:16:10.900><c> GL</c><00:16:11.140><c> finish</c><00:16:11.410><c> will</c><00:16:11.530><c> actually</c>

00:16:11.790 --> 00:16:11.800 align:start position:0%
and return then GL finish will actually
 

00:16:11.800 --> 00:16:13.650 align:start position:0%
and return then GL finish will actually
return<00:16:12.010><c> to</c><00:16:12.160><c> your</c><00:16:12.220><c> application</c><00:16:12.670><c> so</c><00:16:13.480><c> an</c>

00:16:13.650 --> 00:16:13.660 align:start position:0%
return to your application so an
 

00:16:13.660 --> 00:16:16.920 align:start position:0%
return to your application so an
important<00:16:14.020><c> performance</c><00:16:15.510><c> thing</c><00:16:16.510><c> to</c><00:16:16.660><c> keep</c><00:16:16.810><c> in</c>

00:16:16.920 --> 00:16:16.930 align:start position:0%
important performance thing to keep in
 

00:16:16.930 --> 00:16:18.630 align:start position:0%
important performance thing to keep in
mind<00:16:16.990><c> is</c><00:16:17.290><c> that</c><00:16:17.320><c> geo</c><00:16:17.650><c> finish</c><00:16:18.010><c> is</c><00:16:18.160><c> it's</c><00:16:18.520><c> very</c>

00:16:18.630 --> 00:16:18.640 align:start position:0%
mind is that geo finish is it's very
 

00:16:18.640 --> 00:16:23.340 align:start position:0%
mind is that geo finish is it's very
expensive<00:16:19.090><c> it</c><00:16:19.840><c> can</c><00:16:19.990><c> be</c><00:16:20.140><c> a</c><00:16:21.780><c> blocking</c><00:16:22.780><c> call</c><00:16:22.810><c> that</c>

00:16:23.340 --> 00:16:23.350 align:start position:0%
expensive it can be a blocking call that
 

00:16:23.350 --> 00:16:28.520 align:start position:0%
expensive it can be a blocking call that
can<00:16:23.530><c> take</c><00:16:23.740><c> quite</c><00:16:23.890><c> a</c><00:16:23.950><c> while</c><00:16:24.010><c> to</c><00:16:24.160><c> return</c><00:16:27.180><c> so</c><00:16:28.180><c> you</c>

00:16:28.520 --> 00:16:28.530 align:start position:0%
can take quite a while to return so you
 

00:16:28.530 --> 00:16:30.750 align:start position:0%
can take quite a while to return so you
want<00:16:29.530><c> to</c><00:16:29.620><c> avoid</c><00:16:29.710><c> reading</c><00:16:30.190><c> data</c><00:16:30.490><c> back</c><00:16:30.730><c> from</c>

00:16:30.750 --> 00:16:30.760 align:start position:0%
want to avoid reading data back from
 

00:16:30.760 --> 00:16:33.960 align:start position:0%
want to avoid reading data back from
OpenGL<00:16:31.270><c> and</c><00:16:32.280><c> when</c><00:16:33.280><c> it</c><00:16:33.370><c> comes</c><00:16:33.580><c> to</c><00:16:33.730><c> state</c>

00:16:33.960 --> 00:16:33.970 align:start position:0%
OpenGL and when it comes to state
 

00:16:33.970 --> 00:16:35.730 align:start position:0%
OpenGL and when it comes to state
management<00:16:34.330><c> typically</c><00:16:35.260><c> what</c><00:16:35.410><c> you</c><00:16:35.470><c> want</c><00:16:35.530><c> to</c><00:16:35.650><c> do</c>

00:16:35.730 --> 00:16:35.740 align:start position:0%
management typically what you want to do
 

00:16:35.740 --> 00:16:38.640 align:start position:0%
management typically what you want to do
is<00:16:35.830><c> you</c><00:16:35.890><c> want</c><00:16:36.040><c> to</c><00:16:36.100><c> keep</c><00:16:36.550><c> the</c><00:16:36.700><c> data</c><00:16:37.230><c> in</c><00:16:38.230><c> the</c>

00:16:38.640 --> 00:16:38.650 align:start position:0%
is you want to keep the data in the
 

00:16:38.650 --> 00:16:40.380 align:start position:0%
is you want to keep the data in the
application<00:16:38.800><c> that</c><00:16:39.220><c> you</c><00:16:39.340><c> will</c><00:16:39.490><c> need</c><00:16:39.760><c> later</c><00:16:40.090><c> and</c>

00:16:40.380 --> 00:16:40.390 align:start position:0%
application that you will need later and
 

00:16:40.390 --> 00:16:45.510 align:start position:0%
application that you will need later and
not<00:16:41.020><c> ask</c><00:16:41.230><c> OpenGL</c><00:16:41.830><c> for</c><00:16:42.040><c> back</c><00:16:42.840><c> depending</c><00:16:43.840><c> on</c><00:16:44.520><c> the</c>

00:16:45.510 --> 00:16:45.520 align:start position:0%
not ask OpenGL for back depending on the
 

00:16:45.520 --> 00:16:47.910 align:start position:0%
not ask OpenGL for back depending on the
driver<00:16:45.850><c> and</c><00:16:46.360><c> what</c><00:16:46.690><c> you're</c><00:16:46.810><c> reading</c><00:16:46.960><c> back</c><00:16:47.260><c> they</c>

00:16:47.910 --> 00:16:47.920 align:start position:0%
driver and what you're reading back they
 

00:16:47.920 --> 00:16:50.460 align:start position:0%
driver and what you're reading back they
can<00:16:48.040><c> get</c><00:16:48.130><c> very</c><00:16:48.310><c> expensive</c><00:16:49.140><c> reading</c><00:16:50.140><c> back</c><00:16:50.260><c> data</c>

00:16:50.460 --> 00:16:50.470 align:start position:0%
can get very expensive reading back data
 

00:16:50.470 --> 00:16:53.190 align:start position:0%
can get very expensive reading back data
can<00:16:50.620><c> actually</c><00:16:50.920><c> be</c><00:16:51.100><c> the</c><00:16:51.130><c> same</c><00:16:51.550><c> cost</c><00:16:52.270><c> of</c><00:16:52.630><c> calling</c>

00:16:53.190 --> 00:16:53.200 align:start position:0%
can actually be the same cost of calling
 

00:16:53.200 --> 00:16:55.290 align:start position:0%
can actually be the same cost of calling
a<00:16:53.290><c> GL</c><00:16:53.500><c> finish</c><00:16:53.860><c> because</c><00:16:54.490><c> if</c><00:16:54.970><c> you're</c><00:16:55.150><c> reading</c>

00:16:55.290 --> 00:16:55.300 align:start position:0%
a GL finish because if you're reading
 

00:16:55.300 --> 00:16:57.510 align:start position:0%
a GL finish because if you're reading
pixels<00:16:55.750><c> back</c><00:16:55.930><c> for</c><00:16:56.260><c> instance</c><00:16:56.590><c> the</c><00:16:57.160><c> pixels</c>

00:16:57.510 --> 00:16:57.520 align:start position:0%
pixels back for instance the pixels
 

00:16:57.520 --> 00:16:59.280 align:start position:0%
pixels back for instance the pixels
actually<00:16:57.820><c> had</c><00:16:57.940><c> to</c><00:16:58.060><c> be</c><00:16:58.180><c> represent</c><00:16:58.870><c> the</c><00:16:59.080><c> current</c>

00:16:59.280 --> 00:16:59.290 align:start position:0%
actually had to be represent the current
 

00:16:59.290 --> 00:17:03.120 align:start position:0%
actually had to be represent the current
state<00:16:59.710><c> that</c><00:17:00.900><c> you</c><00:17:01.900><c> are</c><00:17:02.290><c> expecting</c><00:17:02.770><c> and</c><00:17:02.890><c> that</c><00:17:02.920><c> is</c>

00:17:03.120 --> 00:17:03.130 align:start position:0%
state that you are expecting and that is
 

00:17:03.130 --> 00:17:04.319 align:start position:0%
state that you are expecting and that is
you've<00:17:03.340><c> drawn</c><00:17:03.610><c> all</c><00:17:03.730><c> these</c><00:17:03.880><c> command</c><00:17:04.209><c> you</c>

00:17:04.319 --> 00:17:04.329 align:start position:0%
you've drawn all these command you
 

00:17:04.329 --> 00:17:06.270 align:start position:0%
you've drawn all these command you
issued<00:17:04.870><c> always</c><00:17:05.079><c> drawing</c><00:17:05.290><c> commands</c><00:17:05.620><c> you're</c>

00:17:06.270 --> 00:17:06.280 align:start position:0%
issued always drawing commands you're
 

00:17:06.280 --> 00:17:08.010 align:start position:0%
issued always drawing commands you're
expecting<00:17:06.760><c> the</c><00:17:06.820><c> pixels</c><00:17:07.120><c> to</c><00:17:07.209><c> be</c><00:17:07.300><c> in</c><00:17:07.420><c> the</c><00:17:07.570><c> in</c><00:17:07.750><c> the</c>

00:17:08.010 --> 00:17:08.020 align:start position:0%
expecting the pixels to be in the in the
 

00:17:08.020 --> 00:17:09.990 align:start position:0%
expecting the pixels to be in the in the
buffer<00:17:08.320><c> well</c><00:17:08.949><c> so</c><00:17:09.160><c> opens</c><00:17:09.400><c> you'll</c><00:17:09.490><c> realizes</c>

00:17:09.990 --> 00:17:10.000 align:start position:0%
buffer well so opens you'll realizes
 

00:17:10.000 --> 00:17:11.490 align:start position:0%
buffer well so opens you'll realizes
this<00:17:10.150><c> and</c><00:17:10.360><c> it</c><00:17:10.449><c> when</c><00:17:10.810><c> you</c><00:17:10.900><c> try</c><00:17:11.140><c> to</c><00:17:11.170><c> read</c><00:17:11.320><c> some</c>

00:17:11.490 --> 00:17:11.500 align:start position:0%
this and it when you try to read some
 

00:17:11.500 --> 00:17:13.290 align:start position:0%
this and it when you try to read some
pixels<00:17:11.770><c> back</c><00:17:11.949><c> it's</c><00:17:12.520><c> going</c><00:17:12.730><c> to</c><00:17:12.820><c> have</c><00:17:12.940><c> to</c><00:17:13.120><c> call</c>

00:17:13.290 --> 00:17:13.300 align:start position:0%
pixels back it's going to have to call
 

00:17:13.300 --> 00:17:14.579 align:start position:0%
pixels back it's going to have to call
finish<00:17:13.660><c> wait</c><00:17:13.930><c> till</c><00:17:14.079><c> all</c><00:17:14.140><c> the</c><00:17:14.230><c> commands</c><00:17:14.470><c> are</c>

00:17:14.579 --> 00:17:14.589 align:start position:0%
finish wait till all the commands are
 

00:17:14.589 --> 00:17:15.750 align:start position:0%
finish wait till all the commands are
finished<00:17:14.829><c> wait</c><00:17:14.980><c> till</c><00:17:15.100><c> it's</c><00:17:15.220><c> drawn</c><00:17:15.490><c> everything</c>

00:17:15.750 --> 00:17:15.760 align:start position:0%
finished wait till it's drawn everything
 

00:17:15.760 --> 00:17:17.550 align:start position:0%
finished wait till it's drawn everything
before<00:17:16.510><c> it</c><00:17:16.570><c> and</c><00:17:16.660><c> give</c><00:17:16.750><c> you</c><00:17:16.839><c> the</c><00:17:16.900><c> valid</c><00:17:17.260><c> pixels</c>

00:17:17.550 --> 00:17:17.560 align:start position:0%
before it and give you the valid pixels
 

00:17:17.560 --> 00:17:20.460 align:start position:0%
before it and give you the valid pixels
back<00:17:17.709><c> so</c><00:17:18.400><c> so</c><00:17:19.360><c> you</c><00:17:19.449><c> don't</c><00:17:19.480><c> want</c><00:17:19.750><c> to</c><00:17:19.810><c> read</c><00:17:19.959><c> the</c>

00:17:20.460 --> 00:17:20.470 align:start position:0%
back so so you don't want to read the
 

00:17:20.470 --> 00:17:24.030 align:start position:0%
back so so you don't want to read the
frame<00:17:20.709><c> buffer</c><00:17:20.920><c> unless</c><00:17:21.430><c> you</c><00:17:21.520><c> have</c><00:17:21.699><c> to</c><00:17:23.040><c> you</c>

00:17:24.030 --> 00:17:24.040 align:start position:0%
frame buffer unless you have to you
 

00:17:24.040 --> 00:17:26.130 align:start position:0%
frame buffer unless you have to you
don't<00:17:24.160><c> want</c><00:17:24.459><c> to</c><00:17:24.670><c> be</c><00:17:25.180><c> reading</c><00:17:25.360><c> state</c><00:17:25.690><c> some</c>

00:17:26.130 --> 00:17:26.140 align:start position:0%
don't want to be reading state some
 

00:17:26.140 --> 00:17:27.720 align:start position:0%
don't want to be reading state some
state<00:17:26.350><c> could</c><00:17:26.500><c> be</c><00:17:26.560><c> expensive</c><00:17:27.010><c> to</c><00:17:27.040><c> read</c><00:17:27.250><c> and</c><00:17:27.490><c> you</c>

00:17:27.720 --> 00:17:27.730 align:start position:0%
state could be expensive to read and you
 

00:17:27.730 --> 00:17:30.030 align:start position:0%
state could be expensive to read and you
don't<00:17:27.880><c> want</c><00:17:28.030><c> to</c><00:17:28.089><c> read</c><00:17:28.209><c> textures</c><00:17:28.950><c> unless</c><00:17:29.950><c> you</c>

00:17:30.030 --> 00:17:30.040 align:start position:0%
don't want to read textures unless you
 

00:17:30.040 --> 00:17:32.820 align:start position:0%
don't want to read textures unless you
have<00:17:30.220><c> to</c><00:17:31.020><c> they</c><00:17:32.020><c> all</c><00:17:32.170><c> can</c><00:17:32.290><c> have</c><00:17:32.440><c> varying</c>

00:17:32.820 --> 00:17:32.830 align:start position:0%
have to they all can have varying
 

00:17:32.830 --> 00:17:33.990 align:start position:0%
have to they all can have varying
penalties<00:17:33.250><c> depending</c><00:17:33.610><c> on</c><00:17:33.670><c> what</c><00:17:33.760><c> mode</c><00:17:33.880><c> you're</c>

00:17:33.990 --> 00:17:34.000 align:start position:0%
penalties depending on what mode you're
 

00:17:34.000 --> 00:17:38.370 align:start position:0%
penalties depending on what mode you're
running<00:17:34.270><c> in</c><00:17:35.460><c> so</c><00:17:36.840><c> what</c><00:17:37.840><c> you</c><00:17:37.900><c> also</c><00:17:38.080><c> want</c><00:17:38.320><c> to</c>

00:17:38.370 --> 00:17:38.380 align:start position:0%
running in so what you also want to
 

00:17:38.380 --> 00:17:39.900 align:start position:0%
running in so what you also want to
think<00:17:38.830><c> up</c><00:17:39.130><c> think</c><00:17:39.490><c> about</c><00:17:39.670><c> when</c><00:17:39.790><c> you're</c><00:17:39.880><c> writing</c>

00:17:39.900 --> 00:17:39.910 align:start position:0%
think up think about when you're writing
 

00:17:39.910 --> 00:17:44.940 align:start position:0%
think up think about when you're writing
up<00:17:40.210><c> gels</c><00:17:40.480><c> avoid</c><00:17:41.370><c> complex</c><00:17:42.370><c> state</c><00:17:42.670><c> settings</c><00:17:43.950><c> if</c>

00:17:44.940 --> 00:17:44.950 align:start position:0%
up gels avoid complex state settings if
 

00:17:44.950 --> 00:17:48.960 align:start position:0%
up gels avoid complex state settings if
you<00:17:45.190><c> don't</c><00:17:45.790><c> know</c><00:17:45.970><c> what</c><00:17:46.150><c> a</c><00:17:46.180><c> state</c><00:17:46.450><c> setting</c><00:17:46.810><c> does</c>

00:17:48.960 --> 00:17:48.970 align:start position:0%
you don't know what a state setting does
 

00:17:48.970 --> 00:17:51.310 align:start position:0%
you don't know what a state setting does
usually<00:17:49.970><c> it's</c><00:17:50.090><c> a</c><00:17:50.180><c> bad</c><00:17:50.720><c> idea</c><00:17:50.750><c> to</c><00:17:51.290><c> just</c>

00:17:51.310 --> 00:17:51.320 align:start position:0%
usually it's a bad idea to just
 

00:17:51.320 --> 00:17:54.460 align:start position:0%
usually it's a bad idea to just
arbitrarily<00:17:51.830><c> throw</c><00:17:52.190><c> state</c><00:17:53.170><c> changes</c><00:17:54.170><c> in</c><00:17:54.290><c> there</c>

00:17:54.460 --> 00:17:54.470 align:start position:0%
arbitrarily throw state changes in there
 

00:17:54.470 --> 00:17:56.890 align:start position:0%
arbitrarily throw state changes in there
what<00:17:55.160><c> you</c><00:17:55.250><c> want</c><00:17:55.460><c> to</c><00:17:55.550><c> do</c><00:17:55.670><c> is</c><00:17:55.910><c> keep</c><00:17:56.360><c> the</c><00:17:56.540><c> state</c><00:17:56.750><c> as</c>

00:17:56.890 --> 00:17:56.900 align:start position:0%
what you want to do is keep the state as
 

00:17:56.900 --> 00:17:59.110 align:start position:0%
what you want to do is keep the state as
simple<00:17:57.170><c> as</c><00:17:57.260><c> possible</c><00:17:57.710><c> because</c><00:17:58.700><c> this</c><00:17:58.940><c> will</c>

00:17:59.110 --> 00:17:59.120 align:start position:0%
simple as possible because this will
 

00:17:59.120 --> 00:18:00.730 align:start position:0%
simple as possible because this will
help<00:17:59.330><c> the</c><00:17:59.480><c> graphics</c><00:17:59.810><c> card</c><00:18:00.080><c> run</c><00:18:00.320><c> in</c><00:18:00.440><c> its</c><00:18:00.560><c> most</c>

00:18:00.730 --> 00:18:00.740 align:start position:0%
help the graphics card run in its most
 

00:18:00.740 --> 00:18:04.000 align:start position:0%
help the graphics card run in its most
optimal<00:18:01.190><c> mode</c><00:18:01.630><c> this</c><00:18:02.630><c> will</c><00:18:02.810><c> also</c><00:18:02.960><c> usually</c><00:18:03.620><c> lead</c>

00:18:04.000 --> 00:18:04.010 align:start position:0%
optimal mode this will also usually lead
 

00:18:04.010 --> 00:18:05.950 align:start position:0%
optimal mode this will also usually lead
to<00:18:04.040><c> less</c><00:18:04.460><c> state</c><00:18:04.730><c> thrashing</c><00:18:05.300><c> when</c><00:18:05.570><c> you</c><00:18:05.750><c> are</c>

00:18:05.950 --> 00:18:05.960 align:start position:0%
to less state thrashing when you are
 

00:18:05.960 --> 00:18:07.960 align:start position:0%
to less state thrashing when you are
trying<00:18:06.800><c> to</c><00:18:06.890><c> transition</c><00:18:07.310><c> from</c><00:18:07.490><c> one</c><00:18:07.640><c> drawing</c>

00:18:07.960 --> 00:18:07.970 align:start position:0%
trying to transition from one drawing
 

00:18:07.970 --> 00:18:09.340 align:start position:0%
trying to transition from one drawing
routine<00:18:08.360><c> to</c><00:18:08.450><c> another</c><00:18:08.690><c> you</c><00:18:08.870><c> won't</c><00:18:09.020><c> have</c><00:18:09.170><c> to</c><00:18:09.260><c> do</c>

00:18:09.340 --> 00:18:09.350 align:start position:0%
routine to another you won't have to do
 

00:18:09.350 --> 00:18:10.810 align:start position:0%
routine to another you won't have to do
as<00:18:09.440><c> much</c><00:18:09.530><c> state</c><00:18:09.800><c> setup</c><00:18:10.190><c> and</c><00:18:10.310><c> teardown</c>

00:18:10.810 --> 00:18:10.820 align:start position:0%
as much state setup and teardown
 

00:18:10.820 --> 00:18:12.760 align:start position:0%
as much state setup and teardown
so<00:18:11.300><c> it'll</c><00:18:11.480><c> lead</c><00:18:11.660><c> to</c><00:18:11.690><c> less</c><00:18:11.960><c> state</c><00:18:12.200><c> transition</c>

00:18:12.760 --> 00:18:12.770 align:start position:0%
so it'll lead to less state transition
 

00:18:12.770 --> 00:18:14.140 align:start position:0%
so it'll lead to less state transition
so<00:18:13.340><c> keeping</c><00:18:13.610><c> it</c><00:18:13.760><c> simple</c>

00:18:14.140 --> 00:18:14.150 align:start position:0%
so keeping it simple
 

00:18:14.150 --> 00:18:17.230 align:start position:0%
so keeping it simple
it's<00:18:14.450><c> obviously</c><00:18:14.750><c> a</c><00:18:15.610><c> simplistic</c><00:18:16.610><c> concept</c><00:18:17.120><c> but</c>

00:18:17.230 --> 00:18:17.240 align:start position:0%
it's obviously a simplistic concept but
 

00:18:17.240 --> 00:18:21.610 align:start position:0%
it's obviously a simplistic concept but
it's<00:18:17.390><c> something</c><00:18:17.630><c> to</c><00:18:17.930><c> keep</c><00:18:18.380><c> in</c><00:18:18.530><c> mind</c><00:18:19.630><c> so</c><00:18:20.630><c> some</c>

00:18:21.610 --> 00:18:21.620 align:start position:0%
it's something to keep in mind so some
 

00:18:21.620 --> 00:18:23.470 align:start position:0%
it's something to keep in mind so some
basic<00:18:21.730><c> complex</c><00:18:22.730><c> states</c><00:18:22.970><c> that</c><00:18:23.090><c> you</c><00:18:23.210><c> want</c><00:18:23.390><c> to</c>

00:18:23.470 --> 00:18:23.480 align:start position:0%
basic complex states that you want to
 

00:18:23.480 --> 00:18:26.890 align:start position:0%
basic complex states that you want to
avoid<00:18:23.720><c> are</c><00:18:24.670><c> lighting</c><00:18:25.670><c> user</c><00:18:26.210><c> clipping</c><00:18:26.630><c> planes</c>

00:18:26.890 --> 00:18:26.900 align:start position:0%
avoid are lighting user clipping planes
 

00:18:26.900 --> 00:18:29.740 align:start position:0%
avoid are lighting user clipping planes
and<00:18:27.680><c> and</c><00:18:28.250><c> full</c><00:18:28.430><c> scene</c><00:18:28.670><c> well</c><00:18:28.910><c> anti-aliasing</c>

00:18:29.740 --> 00:18:29.750 align:start position:0%
and and full scene well anti-aliasing
 

00:18:29.750 --> 00:18:32.200 align:start position:0%
and and full scene well anti-aliasing
like<00:18:30.020><c> anti-alias</c><00:18:30.650><c> lines</c><00:18:30.890><c> and</c><00:18:31.220><c> dailies</c><00:18:31.850><c> points</c>

00:18:32.200 --> 00:18:32.210 align:start position:0%
like anti-alias lines and dailies points
 

00:18:32.210 --> 00:18:33.880 align:start position:0%
like anti-alias lines and dailies points
polygons<00:18:32.660><c> and</c><00:18:33.320><c> the</c><00:18:33.440><c> reason</c><00:18:33.650><c> you</c><00:18:33.710><c> want</c><00:18:33.860><c> to</c>

00:18:33.880 --> 00:18:33.890 align:start position:0%
polygons and the reason you want to
 

00:18:33.890 --> 00:18:35.380 align:start position:0%
polygons and the reason you want to
avoid<00:18:34.010><c> those</c><00:18:34.220><c> is</c><00:18:34.370><c> because</c><00:18:34.490><c> they</c><00:18:34.850><c> can</c><00:18:35.060><c> be</c><00:18:35.150><c> very</c>

00:18:35.380 --> 00:18:35.390 align:start position:0%
avoid those is because they can be very
 

00:18:35.390 --> 00:18:39.250 align:start position:0%
avoid those is because they can be very
expensive<00:18:35.780><c> to</c><00:18:36.020><c> do</c><00:18:37.780><c> with</c><00:18:38.780><c> modern</c><00:18:38.960><c> hardware</c>

00:18:39.250 --> 00:18:39.260 align:start position:0%
expensive to do with modern hardware
 

00:18:39.260 --> 00:18:41.170 align:start position:0%
expensive to do with modern hardware
lighting<00:18:40.160><c> and</c><00:18:40.280><c> user</c><00:18:40.400><c> clipping</c><00:18:40.730><c> planes</c><00:18:40.940><c> and</c>

00:18:41.170 --> 00:18:41.180 align:start position:0%
lighting and user clipping planes and
 

00:18:41.180 --> 00:18:42.670 align:start position:0%
lighting and user clipping planes and
even<00:18:41.270><c> anti</c><00:18:41.600><c> aliased</c><00:18:41.840><c> lines</c><00:18:42.020><c> are</c><00:18:42.230><c> pretty</c><00:18:42.380><c> fast</c>

00:18:42.670 --> 00:18:42.680 align:start position:0%
even anti aliased lines are pretty fast
 

00:18:42.680 --> 00:18:45.130 align:start position:0%
even anti aliased lines are pretty fast
so<00:18:43.610><c> again</c><00:18:43.820><c> it</c><00:18:43.970><c> may</c><00:18:44.150><c> depend</c><00:18:44.600><c> on</c><00:18:44.720><c> the</c><00:18:44.900><c> particular</c>

00:18:45.130 --> 00:18:45.140 align:start position:0%
so again it may depend on the particular
 

00:18:45.140 --> 00:18:48.160 align:start position:0%
so again it may depend on the particular
graphics<00:18:45.590><c> card</c><00:18:45.800><c> you're</c><00:18:45.920><c> running</c><00:18:46.160><c> on</c><00:18:46.270><c> but</c><00:18:47.270><c> in</c>

00:18:48.160 --> 00:18:48.170 align:start position:0%
graphics card you're running on but in
 

00:18:48.170 --> 00:18:50.650 align:start position:0%
graphics card you're running on but in
general<00:18:48.650><c> lighting</c><00:18:49.070><c> is</c><00:18:49.310><c> very</c><00:18:49.760><c> computationally</c>

00:18:50.650 --> 00:18:50.660 align:start position:0%
general lighting is very computationally
 

00:18:50.660 --> 00:18:52.510 align:start position:0%
general lighting is very computationally
expensive<00:18:50.780><c> and</c><00:18:51.350><c> unless</c><00:18:51.770><c> you</c><00:18:52.010><c> have</c><00:18:52.040><c> a</c><00:18:52.250><c> real</c>

00:18:52.510 --> 00:18:52.520 align:start position:0%
expensive and unless you have a real
 

00:18:52.520 --> 00:18:54.160 align:start position:0%
expensive and unless you have a real
need<00:18:52.730><c> for</c><00:18:52.760><c> it</c><00:18:53.060><c> you'll</c><00:18:53.600><c> want</c><00:18:53.810><c> to</c><00:18:53.870><c> keep</c><00:18:53.990><c> that</c>

00:18:54.160 --> 00:18:54.170 align:start position:0%
need for it you'll want to keep that
 

00:18:54.170 --> 00:18:56.410 align:start position:0%
need for it you'll want to keep that
disabled<00:18:54.700><c> even</c><00:18:55.700><c> on</c><00:18:55.790><c> the</c><00:18:55.850><c> high</c><00:18:56.000><c> power</c><00:18:56.240><c> graphics</c>

00:18:56.410 --> 00:18:56.420 align:start position:0%
disabled even on the high power graphics
 

00:18:56.420 --> 00:18:58.000 align:start position:0%
disabled even on the high power graphics
cards<00:18:56.900><c> today</c><00:18:57.170><c> if</c><00:18:57.350><c> you</c><00:18:57.470><c> start</c><00:18:57.710><c> an</c><00:18:57.770><c> able</c>

00:18:58.000 --> 00:18:58.010 align:start position:0%
cards today if you start an able
 

00:18:58.010 --> 00:19:00.490 align:start position:0%
cards today if you start an able
lighting<00:18:58.400><c> you</c><00:18:58.970><c> will</c><00:18:59.120><c> you</c><00:19:00.110><c> will</c><00:19:00.260><c> cause</c><00:19:00.470><c> a</c>

00:19:00.490 --> 00:19:00.500 align:start position:0%
lighting you will you will cause a
 

00:19:00.500 --> 00:19:02.110 align:start position:0%
lighting you will you will cause a
graphics<00:19:00.920><c> card</c><00:19:01.100><c> to</c><00:19:01.160><c> do</c><00:19:01.280><c> more</c><00:19:01.430><c> processing</c><00:19:01.970><c> and</c>

00:19:02.110 --> 00:19:02.120 align:start position:0%
graphics card to do more processing and
 

00:19:02.120 --> 00:19:03.160 align:start position:0%
graphics card to do more processing and
you<00:19:02.180><c> will</c><00:19:02.330><c> ultimately</c><00:19:02.780><c> lower</c><00:19:02.990><c> the</c>

00:19:03.160 --> 00:19:03.170 align:start position:0%
you will ultimately lower the
 

00:19:03.170 --> 00:19:05.140 align:start position:0%
you will ultimately lower the
performance<00:19:03.620><c> now</c><00:19:04.280><c> whether</c><00:19:04.520><c> you</c><00:19:04.640><c> actually</c><00:19:04.820><c> see</c>

00:19:05.140 --> 00:19:05.150 align:start position:0%
performance now whether you actually see
 

00:19:05.150 --> 00:19:08.230 align:start position:0%
performance now whether you actually see
that<00:19:05.830><c> will</c><00:19:06.830><c> depend</c><00:19:07.100><c> on</c><00:19:07.130><c> how</c><00:19:07.340><c> fast</c><00:19:07.610><c> you</c><00:19:08.150><c> know</c>

00:19:08.230 --> 00:19:08.240 align:start position:0%
that will depend on how fast you know
 

00:19:08.240 --> 00:19:10.240 align:start position:0%
that will depend on how fast you know
what<00:19:08.630><c> kind</c><00:19:08.840><c> of</c><00:19:08.930><c> demands</c><00:19:09.650><c> your</c><00:19:09.800><c> applications</c>

00:19:10.240 --> 00:19:10.250 align:start position:0%
what kind of demands your applications
 

00:19:10.250 --> 00:19:13.930 align:start position:0%
what kind of demands your applications
putting<00:19:10.550><c> on</c><00:19:10.670><c> the</c><00:19:10.790><c> graphics</c><00:19:11.120><c> card</c><00:19:11.380><c> but</c><00:19:12.940><c> those</c>

00:19:13.930 --> 00:19:13.940 align:start position:0%
putting on the graphics card but those
 

00:19:13.940 --> 00:19:15.820 align:start position:0%
putting on the graphics card but those
are<00:19:14.120><c> very</c><00:19:14.390><c> complex</c><00:19:14.870><c> operations</c><00:19:15.530><c> for</c><00:19:15.740><c> the</c>

00:19:15.820 --> 00:19:15.830 align:start position:0%
are very complex operations for the
 

00:19:15.830 --> 00:19:20.950 align:start position:0%
are very complex operations for the
graphics<00:19:16.130><c> card</c><00:19:16.340><c> to</c><00:19:16.400><c> perform</c><00:19:19.570><c> so</c><00:19:20.570><c> texture</c>

00:19:20.950 --> 00:19:20.960 align:start position:0%
graphics card to perform so texture
 

00:19:20.960 --> 00:19:23.410 align:start position:0%
graphics card to perform so texture
management<00:19:21.730><c> so</c><00:19:22.730><c> this</c><00:19:22.820><c> is</c><00:19:22.910><c> a</c><00:19:22.940><c> very</c><00:19:23.060><c> important</c>

00:19:23.410 --> 00:19:23.420 align:start position:0%
management so this is a very important
 

00:19:23.420 --> 00:19:25.120 align:start position:0%
management so this is a very important
topic<00:19:23.510><c> because</c><00:19:23.810><c> a</c><00:19:23.960><c> lot</c><00:19:24.140><c> of</c><00:19:24.170><c> games</c><00:19:24.410><c> nowadays</c><00:19:24.620><c> or</c>

00:19:25.120 --> 00:19:25.130 align:start position:0%
topic because a lot of games nowadays or
 

00:19:25.130 --> 00:19:27.010 align:start position:0%
topic because a lot of games nowadays or
applications<00:19:26.030><c> in</c><00:19:26.150><c> general</c><00:19:26.390><c> using</c><00:19:26.600><c> a</c><00:19:26.750><c> lot</c><00:19:26.900><c> of</c>

00:19:27.010 --> 00:19:27.020 align:start position:0%
applications in general using a lot of
 

00:19:27.020 --> 00:19:29.170 align:start position:0%
applications in general using a lot of
textures<00:19:27.410><c> and</c><00:19:27.620><c> how</c><00:19:28.490><c> to</c><00:19:28.550><c> properly</c><00:19:28.970><c> manage</c>

00:19:29.170 --> 00:19:29.180 align:start position:0%
textures and how to properly manage
 

00:19:29.180 --> 00:19:33.040 align:start position:0%
textures and how to properly manage
those<00:19:30.490><c> can</c><00:19:31.490><c> be</c><00:19:31.670><c> making</c><00:19:32.450><c> a</c><00:19:32.540><c> big</c><00:19:32.690><c> difference</c><00:19:32.960><c> in</c>

00:19:33.040 --> 00:19:33.050 align:start position:0%
those can be making a big difference in
 

00:19:33.050 --> 00:19:36.340 align:start position:0%
those can be making a big difference in
the<00:19:33.140><c> applications</c><00:19:33.620><c> performance</c><00:19:35.020><c> so</c><00:19:36.020><c> several</c>

00:19:36.340 --> 00:19:36.350 align:start position:0%
the applications performance so several
 

00:19:36.350 --> 00:19:38.980 align:start position:0%
the applications performance so several
things<00:19:36.440><c> to</c><00:19:36.620><c> remember</c><00:19:37.390><c> avoid</c><00:19:38.390><c> uploading</c><00:19:38.690><c> the</c>

00:19:38.980 --> 00:19:38.990 align:start position:0%
things to remember avoid uploading the
 

00:19:38.990 --> 00:19:41.650 align:start position:0%
things to remember avoid uploading the
texture<00:19:39.290><c> more</c><00:19:39.470><c> than</c><00:19:39.650><c> once</c><00:19:40.390><c> ideally</c><00:19:41.390><c> what</c><00:19:41.540><c> you</c>

00:19:41.650 --> 00:19:41.660 align:start position:0%
texture more than once ideally what you
 

00:19:41.660 --> 00:19:42.760 align:start position:0%
texture more than once ideally what you
want<00:19:41.780><c> to</c><00:19:41.900><c> do</c><00:19:42.020><c> is</c><00:19:42.110><c> you</c><00:19:42.200><c> want</c><00:19:42.350><c> to</c><00:19:42.380><c> give</c><00:19:42.500><c> up</c><00:19:42.620><c> until</c>

00:19:42.760 --> 00:19:42.770 align:start position:0%
want to do is you want to give up until
 

00:19:42.770 --> 00:19:47.500 align:start position:0%
want to do is you want to give up until
the<00:19:42.950><c> texture</c><00:19:43.480><c> and</c><00:19:45.520><c> not</c><00:19:46.520><c> keep</c><00:19:46.790><c> handing</c><00:19:47.330><c> it</c><00:19:47.480><c> to</c>

00:19:47.500 --> 00:19:47.510 align:start position:0%
the texture and not keep handing it to
 

00:19:47.510 --> 00:19:50.110 align:start position:0%
the texture and not keep handing it to
OpenGL<00:19:47.780><c> not</c><00:19:48.380><c> don't</c><00:19:48.710><c> delete</c><00:19:49.010><c> it</c><00:19:49.160><c> and</c><00:19:49.250><c> then</c><00:19:49.400><c> give</c>

00:19:50.110 --> 00:19:50.120 align:start position:0%
OpenGL not don't delete it and then give
 

00:19:50.120 --> 00:19:51.640 align:start position:0%
OpenGL not don't delete it and then give
it<00:19:50.150><c> to</c><00:19:50.270><c> back</c><00:19:50.570><c> to</c><00:19:50.720><c> it</c><00:19:50.810><c> later</c><00:19:50.840><c> if</c><00:19:51.260><c> at</c><00:19:51.590><c> all</c>

00:19:51.640 --> 00:19:51.650 align:start position:0%
it to back to it later if at all
 

00:19:51.650 --> 00:19:53.950 align:start position:0%
it to back to it later if at all
possible<00:19:51.710><c> and</c><00:19:52.550><c> instead</c><00:19:53.000><c> let</c><00:19:53.180><c> OpenGL</c><00:19:53.630><c> do</c><00:19:53.780><c> the</c>

00:19:53.950 --> 00:19:53.960 align:start position:0%
possible and instead let OpenGL do the
 

00:19:53.960 --> 00:19:56.080 align:start position:0%
possible and instead let OpenGL do the
management<00:19:54.560><c> the</c><00:19:54.680><c> bookkeeping</c><00:19:55.160><c> of</c><00:19:55.370><c> whether</c>

00:19:56.080 --> 00:19:56.090 align:start position:0%
management the bookkeeping of whether
 

00:19:56.090 --> 00:19:57.760 align:start position:0%
management the bookkeeping of whether
the<00:19:56.300><c> texture</c><00:19:56.630><c> should</c><00:19:56.780><c> be</c><00:19:56.900><c> in</c><00:19:56.990><c> video</c><00:19:57.170><c> memory</c><00:19:57.590><c> or</c>

00:19:57.760 --> 00:19:57.770 align:start position:0%
the texture should be in video memory or
 

00:19:57.770 --> 00:20:01.270 align:start position:0%
the texture should be in video memory or
not<00:19:59.470><c> avoid</c><00:20:00.470><c> so</c><00:20:00.980><c> again</c>

00:20:01.270 --> 00:20:01.280 align:start position:0%
not avoid so again
 

00:20:01.280 --> 00:20:05.880 align:start position:0%
not avoid so again
avoid<00:20:01.490><c> keeping</c><00:20:01.670><c> a</c><00:20:01.880><c> copy</c><00:20:02.060><c> and</c><00:20:02.420><c> that</c><00:20:02.540><c> will</c><00:20:02.690><c> save</c>

00:20:05.880 --> 00:20:05.890 align:start position:0%
 
 

00:20:05.890 --> 00:20:07.780 align:start position:0%
 
avoiding<00:20:06.890><c> keeping</c><00:20:07.310><c> a</c><00:20:07.400><c> copy</c><00:20:07.580><c> in</c><00:20:07.730><c> the</c>

00:20:07.780 --> 00:20:07.790 align:start position:0%
avoiding keeping a copy in the
 

00:20:07.790 --> 00:20:09.700 align:start position:0%
avoiding keeping a copy in the
application<00:20:08.210><c> will</c><00:20:08.330><c> save</c><00:20:08.540><c> your</c><00:20:08.810><c> safe</c><00:20:09.320><c> system</c>

00:20:09.700 --> 00:20:09.710 align:start position:0%
application will save your safe system
 

00:20:09.710 --> 00:20:11.620 align:start position:0%
application will save your safe system
memory<00:20:09.880><c> the</c><00:20:10.880><c> thing</c><00:20:11.030><c> to</c><00:20:11.120><c> remember</c><00:20:11.300><c> here</c><00:20:11.420><c> is</c>

00:20:11.620 --> 00:20:11.630 align:start position:0%
memory the thing to remember here is
 

00:20:11.630 --> 00:20:14.200 align:start position:0%
memory the thing to remember here is
that<00:20:11.660><c> OpenGL</c><00:20:12.230><c> will</c><00:20:12.380><c> keep</c><00:20:12.530><c> a</c><00:20:12.650><c> copy</c><00:20:12.800><c> and</c><00:20:13.340><c> so</c>

00:20:14.200 --> 00:20:14.210 align:start position:0%
that OpenGL will keep a copy and so
 

00:20:14.210 --> 00:20:15.580 align:start position:0%
that OpenGL will keep a copy and so
you're<00:20:14.480><c> gonna</c><00:20:14.570><c> have</c><00:20:14.750><c> two</c><00:20:14.900><c> copies</c><00:20:15.230><c> if</c><00:20:15.350><c> you</c><00:20:15.440><c> keep</c>

00:20:15.580 --> 00:20:15.590 align:start position:0%
you're gonna have two copies if you keep
 

00:20:15.590 --> 00:20:16.900 align:start position:0%
you're gonna have two copies if you keep
one<00:20:15.710><c> in</c><00:20:15.770><c> the</c><00:20:15.860><c> application</c><00:20:16.280><c> and</c><00:20:16.430><c> one</c><00:20:16.610><c> in</c><00:20:16.700><c> open</c>

00:20:16.900 --> 00:20:16.910 align:start position:0%
one in the application and one in open
 

00:20:16.910 --> 00:20:18.430 align:start position:0%
one in the application and one in open
and<00:20:17.030><c> one</c><00:20:17.240><c> is</c><00:20:17.510><c> gonna</c><00:20:17.720><c> be</c><00:20:17.810><c> kept</c><00:20:17.990><c> in</c><00:20:18.080><c> OpenGL</c>

00:20:18.430 --> 00:20:18.440 align:start position:0%
and one is gonna be kept in OpenGL
 

00:20:18.440 --> 00:20:21.250 align:start position:0%
and one is gonna be kept in OpenGL
you're<00:20:19.100><c> gonna</c><00:20:19.190><c> have</c><00:20:19.430><c> two</c><00:20:19.970><c> times</c><00:20:20.270><c> that</c><00:20:20.570><c> texture</c>

00:20:21.250 --> 00:20:21.260 align:start position:0%
you're gonna have two times that texture
 

00:20:21.260 --> 00:20:23.890 align:start position:0%
you're gonna have two times that texture
that<00:20:21.410><c> texture</c><00:20:21.830><c> size</c><00:20:22.040><c> so</c><00:20:22.880><c> it's</c><00:20:23.390><c> best</c><00:20:23.660><c> if</c><00:20:23.810><c> you</c>

00:20:23.890 --> 00:20:23.900 align:start position:0%
that texture size so it's best if you
 

00:20:23.900 --> 00:20:27.820 align:start position:0%
that texture size so it's best if you
delete<00:20:24.200><c> yours</c><00:20:24.440><c> if</c><00:20:24.770><c> possible</c><00:20:26.260><c> so</c><00:20:27.260><c> ways</c><00:20:27.530><c> to</c><00:20:27.710><c> get</c>

00:20:27.820 --> 00:20:27.830 align:start position:0%
delete yours if possible so ways to get
 

00:20:27.830 --> 00:20:31.120 align:start position:0%
delete yours if possible so ways to get
data<00:20:28.240><c> textures</c><00:20:29.240><c> data</c><00:20:29.680><c> into</c><00:20:30.680><c> the</c><00:20:30.770><c> graphics</c>

00:20:31.120 --> 00:20:31.130 align:start position:0%
data textures data into the graphics
 

00:20:31.130 --> 00:20:35.200 align:start position:0%
data textures data into the graphics
card<00:20:31.310><c> or</c><00:20:31.400><c> into</c><00:20:31.550><c> the</c><00:20:31.640><c> driver</c><00:20:31.850><c> fast</c><00:20:33.100><c> there</c><00:20:34.100><c> is</c><00:20:34.280><c> an</c>

00:20:35.200 --> 00:20:35.210 align:start position:0%
card or into the driver fast there is an
 

00:20:35.210 --> 00:20:37.450 align:start position:0%
card or into the driver fast there is an
extension<00:20:35.840><c> called</c><00:20:36.110><c> Apple</c><00:20:36.410><c> Apple</c><00:20:37.250><c> packed</c>

00:20:37.450 --> 00:20:37.460 align:start position:0%
extension called Apple Apple packed
 

00:20:37.460 --> 00:20:41.640 align:start position:0%
extension called Apple Apple packed
pixel<00:20:37.910><c> so</c><00:20:38.570><c> this</c><00:20:38.720><c> is</c><00:20:38.870><c> the</c><00:20:39.020><c> fastest</c><00:20:39.620><c> way</c><00:20:39.710><c> to</c><00:20:39.740><c> get</c>

00:20:41.640 --> 00:20:41.650 align:start position:0%
pixel so this is the fastest way to get
 

00:20:41.650 --> 00:20:44.980 align:start position:0%
pixel so this is the fastest way to get
pixel<00:20:42.650><c> data</c><00:20:42.830><c> into</c><00:20:43.250><c> OpenGL</c><00:20:43.730><c> and</c><00:20:43.970><c> it's</c><00:20:44.780><c> a</c><00:20:44.840><c> very</c>

00:20:44.980 --> 00:20:44.990 align:start position:0%
pixel data into OpenGL and it's a very
 

00:20:44.990 --> 00:20:47.170 align:start position:0%
pixel data into OpenGL and it's a very
flexible<00:20:45.680><c> format</c><00:20:46.250><c> it'll</c><00:20:46.520><c> support</c><00:20:46.760><c> all</c><00:20:46.970><c> the</c>

00:20:47.170 --> 00:20:47.180 align:start position:0%
flexible format it'll support all the
 

00:20:47.180 --> 00:20:51.760 align:start position:0%
flexible format it'll support all the
standard<00:20:47.780><c> OpenGL</c><00:20:48.760><c> pixel</c><00:20:49.760><c> types</c><00:20:50.350><c> by</c><00:20:51.350><c> Apple</c>

00:20:51.760 --> 00:20:51.770 align:start position:0%
standard OpenGL pixel types by Apple
 

00:20:51.770 --> 00:20:53.140 align:start position:0%
standard OpenGL pixel types by Apple
pixel<00:20:52.070><c> type</c><00:20:52.220><c> so</c><00:20:52.400><c> it'll</c><00:20:52.550><c> also</c><00:20:52.640><c> support</c><00:20:53.120><c> a</c>

00:20:53.140 --> 00:20:53.150 align:start position:0%
pixel type so it'll also support a
 

00:20:53.150 --> 00:20:56.470 align:start position:0%
pixel type so it'll also support a
number<00:20:53.420><c> of</c><00:20:53.720><c> rather</c><00:20:54.760><c> odd</c><00:20:55.760><c> types</c><00:20:56.120><c> that</c><00:20:56.300><c> may</c><00:20:56.420><c> be</c>

00:20:56.470 --> 00:20:56.480 align:start position:0%
number of rather odd types that may be
 

00:20:56.480 --> 00:20:58.780 align:start position:0%
number of rather odd types that may be
useful<00:20:56.660><c> for</c><00:20:56.840><c> you</c>

00:20:58.780 --> 00:20:58.790 align:start position:0%
useful for you
 

00:20:58.790 --> 00:21:00.790 align:start position:0%
useful for you
you<00:20:59.390><c> know</c><00:20:59.450><c> like</c><00:20:59.570><c> five</c><00:20:59.780><c> six</c><00:20:59.990><c> five</c><00:21:00.200><c> or</c><00:21:00.590><c> three</c>

00:21:00.790 --> 00:21:00.800 align:start position:0%
you know like five six five or three
 

00:21:00.800 --> 00:21:03.790 align:start position:0%
you know like five six five or three
three<00:21:01.040><c> two</c><00:21:01.250><c> depending</c><00:21:01.820><c> on</c><00:21:01.910><c> what</c><00:21:02.260><c> your</c><00:21:03.260><c> quality</c>

00:21:03.790 --> 00:21:03.800 align:start position:0%
three two depending on what your quality
 

00:21:03.800 --> 00:21:06.610 align:start position:0%
three two depending on what your quality
requirement<00:21:04.310><c> is</c><00:21:04.400><c> or</c><00:21:04.580><c> whether</c><00:21:04.790><c> you</c><00:21:05.470><c> don't</c><00:21:06.470><c> need</c>

00:21:06.610 --> 00:21:06.620 align:start position:0%
requirement is or whether you don't need
 

00:21:06.620 --> 00:21:08.980 align:start position:0%
requirement is or whether you don't need
a<00:21:06.650><c> high</c><00:21:06.830><c> R</c><00:21:06.860><c> it</c><00:21:07.040><c> don't</c><00:21:07.280><c> need</c><00:21:07.430><c> a</c><00:21:07.460><c> deep</c><00:21:07.780><c> bit</c><00:21:08.780><c> depth</c>

00:21:08.980 --> 00:21:08.990 align:start position:0%
a high R it don't need a deep bit depth
 

00:21:08.990 --> 00:21:10.450 align:start position:0%
a high R it don't need a deep bit depth
per<00:21:09.230><c> component</c><00:21:09.680><c> you</c><00:21:09.770><c> can</c><00:21:09.800><c> get</c><00:21:10.010><c> away</c><00:21:10.100><c> with</c><00:21:10.310><c> some</c>

00:21:10.450 --> 00:21:10.460 align:start position:0%
per component you can get away with some
 

00:21:10.460 --> 00:21:14.220 align:start position:0%
per component you can get away with some
of<00:21:10.490><c> the</c><00:21:10.640><c> smaller</c><00:21:12.310><c> bites</c><00:21:13.310><c> bits</c><00:21:13.940><c> per</c><00:21:14.150><c> pixel</c>

00:21:14.220 --> 00:21:14.230 align:start position:0%
of the smaller bites bits per pixel
 

00:21:14.230 --> 00:21:21.340 align:start position:0%
of the smaller bites bits per pixel
components<00:21:18.010><c> minimize</c><00:21:19.010><c> the</c><00:21:19.900><c> how</c><00:21:20.900><c> often</c><00:21:21.260><c> you</c>

00:21:21.340 --> 00:21:21.350 align:start position:0%
components minimize the how often you
 

00:21:21.350 --> 00:21:23.680 align:start position:0%
components minimize the how often you
change<00:21:21.380><c> your</c><00:21:21.800><c> current</c><00:21:21.920><c> texture</c><00:21:22.340><c> so</c><00:21:23.090><c> changing</c>

00:21:23.680 --> 00:21:23.690 align:start position:0%
change your current texture so changing
 

00:21:23.690 --> 00:21:25.690 align:start position:0%
change your current texture so changing
your<00:21:23.810><c> current</c><00:21:23.990><c> texture</c><00:21:24.260><c> is</c><00:21:24.530><c> actually</c><00:21:25.460><c> one</c><00:21:25.670><c> of</c>

00:21:25.690 --> 00:21:25.700 align:start position:0%
your current texture is actually one of
 

00:21:25.700 --> 00:21:27.730 align:start position:0%
your current texture is actually one of
the<00:21:25.790><c> most</c><00:21:25.910><c> expensive</c><00:21:26.350><c> operations</c><00:21:27.350><c> you</c><00:21:27.470><c> can</c><00:21:27.590><c> do</c>

00:21:27.730 --> 00:21:27.740 align:start position:0%
the most expensive operations you can do
 

00:21:27.740 --> 00:21:31.090 align:start position:0%
the most expensive operations you can do
and<00:21:29.020><c> what</c><00:21:30.020><c> that</c><00:21:30.170><c> means</c><00:21:30.320><c> is</c><00:21:30.560><c> that</c><00:21:30.590><c> changing</c>

00:21:31.090 --> 00:21:31.100 align:start position:0%
and what that means is that changing
 

00:21:31.100 --> 00:21:33.130 align:start position:0%
and what that means is that changing
your<00:21:31.130><c> current</c><00:21:31.400><c> texture</c><00:21:31.640><c> is</c><00:21:31.880><c> a</c><00:21:32.120><c> GL</c><00:21:32.630><c> bind</c><00:21:32.840><c> call</c>

00:21:33.130 --> 00:21:33.140 align:start position:0%
your current texture is a GL bind call
 

00:21:33.140 --> 00:21:35.170 align:start position:0%
your current texture is a GL bind call
and<00:21:33.560><c> when</c><00:21:34.280><c> you</c><00:21:34.370><c> when</c><00:21:34.670><c> you</c><00:21:34.730><c> bind</c><00:21:34.880><c> from</c><00:21:35.060><c> one</c>

00:21:35.170 --> 00:21:35.180 align:start position:0%
and when you when you bind from one
 

00:21:35.180 --> 00:21:37.030 align:start position:0%
and when you when you bind from one
touch<00:21:35.330><c> to</c><00:21:35.480><c> another</c><00:21:35.750><c> you're</c><00:21:36.350><c> you're</c><00:21:36.830><c> basically</c>

00:21:37.030 --> 00:21:37.040 align:start position:0%
touch to another you're you're basically
 

00:21:37.040 --> 00:21:39.760 align:start position:0%
touch to another you're you're basically
just<00:21:37.520><c> causing</c><00:21:38.120><c> OpenGL</c><00:21:38.540><c> to</c><00:21:38.770><c> potentially</c>

00:21:39.760 --> 00:21:39.770 align:start position:0%
just causing OpenGL to potentially
 

00:21:39.770 --> 00:21:41.770 align:start position:0%
just causing OpenGL to potentially
reconfigure<00:21:40.280><c> all</c><00:21:40.430><c> of</c><00:21:40.550><c> its</c><00:21:40.700><c> texture</c><00:21:41.330><c> combiners</c>

00:21:41.770 --> 00:21:41.780 align:start position:0%
reconfigure all of its texture combiners
 

00:21:41.780 --> 00:21:43.540 align:start position:0%
reconfigure all of its texture combiners
in<00:21:41.930><c> the</c><00:21:42.020><c> hardware</c><00:21:42.320><c> for</c><00:21:42.950><c> the</c><00:21:43.040><c> new</c><00:21:43.160><c> texture</c>

00:21:43.540 --> 00:21:43.550 align:start position:0%
in the hardware for the new texture
 

00:21:43.550 --> 00:21:45.130 align:start position:0%
in the hardware for the new texture
because<00:21:43.910><c> the</c><00:21:43.970><c> new</c><00:21:44.090><c> texture</c><00:21:44.420><c> it's</c><00:21:44.960><c> going</c><00:21:45.080><c> to</c>

00:21:45.130 --> 00:21:45.140 align:start position:0%
because the new texture it's going to
 

00:21:45.140 --> 00:21:49.360 align:start position:0%
because the new texture it's going to
require<00:21:45.380><c> different</c><00:21:45.700><c> blending</c><00:21:46.700><c> modes</c><00:21:46.910><c> and</c><00:21:48.370><c> it</c>

00:21:49.360 --> 00:21:49.370 align:start position:0%
require different blending modes and it
 

00:21:49.370 --> 00:21:51.040 align:start position:0%
require different blending modes and it
can<00:21:49.520><c> be</c><00:21:49.610><c> fairly</c><00:21:49.940><c> expensive</c><00:21:50.270><c> to</c><00:21:50.480><c> do</c><00:21:50.570><c> that</c><00:21:50.600><c> setup</c>

00:21:51.040 --> 00:21:51.050 align:start position:0%
can be fairly expensive to do that setup
 

00:21:51.050 --> 00:21:53.530 align:start position:0%
can be fairly expensive to do that setup
so<00:21:51.820><c> typically</c><00:21:52.820><c> what</c><00:21:53.000><c> you</c><00:21:53.090><c> want</c><00:21:53.150><c> to</c><00:21:53.270><c> do</c><00:21:53.330><c> in</c><00:21:53.450><c> the</c>

00:21:53.530 --> 00:21:53.540 align:start position:0%
so typically what you want to do in the
 

00:21:53.540 --> 00:21:54.970 align:start position:0%
so typically what you want to do in the
application<00:21:53.990><c> if</c><00:21:54.140><c> you</c><00:21:54.170><c> have</c><00:21:54.260><c> a</c><00:21:54.380><c> lot</c><00:21:54.590><c> of</c><00:21:54.620><c> data</c><00:21:54.800><c> is</c>

00:21:54.970 --> 00:21:54.980 align:start position:0%
application if you have a lot of data is
 

00:21:54.980 --> 00:21:57.100 align:start position:0%
application if you have a lot of data is
you<00:21:55.100><c> want</c><00:21:55.250><c> to</c><00:21:55.280><c> group</c><00:21:55.460><c> your</c><00:21:55.640><c> data</c><00:21:55.850><c> in</c><00:21:56.110><c> groups</c>

00:21:57.100 --> 00:21:57.110 align:start position:0%
you want to group your data in groups
 

00:21:57.110 --> 00:22:00.520 align:start position:0%
you want to group your data in groups
comp<00:21:57.680><c> with</c><00:21:57.860><c> common</c><00:21:58.280><c> texture</c><00:21:58.610><c> types</c><00:21:59.380><c> so</c><00:22:00.380><c> that's</c>

00:22:00.520 --> 00:22:00.530 align:start position:0%
comp with common texture types so that's
 

00:22:00.530 --> 00:22:02.170 align:start position:0%
comp with common texture types so that's
the<00:22:00.710><c> the</c><00:22:01.010><c> best</c><00:22:01.220><c> way</c><00:22:01.370><c> to</c><00:22:01.430><c> group</c><00:22:01.580><c> the</c><00:22:01.700><c> data</c><00:22:01.730><c> such</c>

00:22:02.170 --> 00:22:02.180 align:start position:0%
the the best way to group the data such
 

00:22:02.180 --> 00:22:06.570 align:start position:0%
the the best way to group the data such
that<00:22:02.210><c> you</c><00:22:02.480><c> minimize</c><00:22:02.660><c> your</c><00:22:03.050><c> texture</c><00:22:03.350><c> changes</c>

00:22:06.570 --> 00:22:06.580 align:start position:0%
 
 

00:22:06.580 --> 00:22:10.090 align:start position:0%
 
so<00:22:07.580><c> scale</c><00:22:08.030><c> textures</c><00:22:08.500><c> to</c><00:22:09.500><c> your</c><00:22:09.620><c> Hardware</c><00:22:09.920><c> size</c>

00:22:10.090 --> 00:22:10.100 align:start position:0%
so scale textures to your Hardware size
 

00:22:10.100 --> 00:22:14.170 align:start position:0%
so scale textures to your Hardware size
so<00:22:11.030><c> again</c><00:22:11.960><c> earlier</c><00:22:12.800><c> we</c><00:22:12.950><c> looked</c><00:22:13.190><c> at</c><00:22:13.310><c> finding</c>

00:22:14.170 --> 00:22:14.180 align:start position:0%
so again earlier we looked at finding
 

00:22:14.180 --> 00:22:14.950 align:start position:0%
so again earlier we looked at finding
the<00:22:14.240><c> vram</c><00:22:14.510><c> size</c>

00:22:14.950 --> 00:22:14.960 align:start position:0%
the vram size
 

00:22:14.960 --> 00:22:16.960 align:start position:0%
the vram size
so<00:22:15.500><c> what</c><00:22:15.650><c> you</c><00:22:15.740><c> want</c><00:22:15.920><c> to</c><00:22:16.010><c> do</c><00:22:16.130><c> is</c><00:22:16.280><c> you</c><00:22:16.430><c> can</c><00:22:16.670><c> do</c>

00:22:16.960 --> 00:22:16.970 align:start position:0%
so what you want to do is you can do
 

00:22:16.970 --> 00:22:19.000 align:start position:0%
so what you want to do is you can do
some<00:22:17.180><c> basic</c><00:22:17.870><c> rudimentary</c><00:22:18.380><c> math</c><00:22:18.710><c> in</c><00:22:18.920><c> your</c>

00:22:19.000 --> 00:22:19.010 align:start position:0%
some basic rudimentary math in your
 

00:22:19.010 --> 00:22:21.250 align:start position:0%
some basic rudimentary math in your
application<00:22:19.520><c> and</c><00:22:19.730><c> just</c><00:22:20.110><c> fundamentally</c><00:22:21.110><c> try</c>

00:22:21.250 --> 00:22:21.260 align:start position:0%
application and just fundamentally try
 

00:22:21.260 --> 00:22:23.410 align:start position:0%
application and just fundamentally try
to<00:22:21.320><c> scale</c><00:22:21.590><c> your</c><00:22:21.800><c> your</c><00:22:22.190><c> application</c><00:22:22.880><c> to</c><00:22:22.970><c> fit</c><00:22:23.120><c> on</c>

00:22:23.410 --> 00:22:23.420 align:start position:0%
to scale your your application to fit on
 

00:22:23.420 --> 00:22:25.570 align:start position:0%
to scale your your application to fit on
the<00:22:23.690><c> graphics</c><00:22:24.380><c> card</c><00:22:24.440><c> so</c><00:22:24.800><c> if</c><00:22:25.250><c> you</c><00:22:25.310><c> have</c><00:22:25.400><c> a</c><00:22:25.460><c> lot</c>

00:22:25.570 --> 00:22:25.580 align:start position:0%
the graphics card so if you have a lot
 

00:22:25.580 --> 00:22:27.310 align:start position:0%
the graphics card so if you have a lot
of<00:22:25.610><c> textures</c><00:22:26.030><c> you'll</c><00:22:26.270><c> need</c><00:22:26.420><c> to</c><00:22:26.570><c> calculate</c><00:22:26.930><c> how</c>

00:22:27.310 --> 00:22:27.320 align:start position:0%
of textures you'll need to calculate how
 

00:22:27.320 --> 00:22:28.720 align:start position:0%
of textures you'll need to calculate how
many<00:22:27.380><c> you're</c><00:22:27.680><c> going</c><00:22:27.830><c> to</c><00:22:27.890><c> need</c><00:22:28.040><c> necessarily</c><00:22:28.640><c> on</c>

00:22:28.720 --> 00:22:28.730 align:start position:0%
many you're going to need necessarily on
 

00:22:28.730 --> 00:22:32.320 align:start position:0%
many you're going to need necessarily on
the<00:22:28.760><c> graphics</c><00:22:29.090><c> card</c><00:22:29.150><c> anytime</c><00:22:30.430><c> it's</c><00:22:31.430><c> not</c><00:22:31.610><c> it's</c>

00:22:32.320 --> 00:22:32.330 align:start position:0%
the graphics card anytime it's not it's
 

00:22:32.330 --> 00:22:34.090 align:start position:0%
the graphics card anytime it's not it's
not<00:22:32.480><c> terribly</c><00:22:33.140><c> important</c><00:22:33.470><c> to</c><00:22:33.500><c> get</c><00:22:33.620><c> it</c><00:22:33.740><c> exact</c>

00:22:34.090 --> 00:22:34.100 align:start position:0%
not terribly important to get it exact
 

00:22:34.100 --> 00:22:36.580 align:start position:0%
not terribly important to get it exact
but<00:22:34.820><c> you</c><00:22:35.180><c> would</c><00:22:35.300><c> like</c><00:22:35.510><c> to</c><00:22:35.720><c> keep</c><00:22:36.050><c> it</c><00:22:36.200><c> within</c><00:22:36.380><c> a</c>

00:22:36.580 --> 00:22:36.590 align:start position:0%
but you would like to keep it within a
 

00:22:36.590 --> 00:22:38.980 align:start position:0%
but you would like to keep it within a
reasonable<00:22:36.620><c> bounds</c><00:22:37.780><c> OpenGL</c><00:22:38.780><c> is</c><00:22:38.840><c> very</c>

00:22:38.980 --> 00:22:38.990 align:start position:0%
reasonable bounds OpenGL is very
 

00:22:38.990 --> 00:22:42.730 align:start position:0%
reasonable bounds OpenGL is very
efficient<00:22:39.410><c> that</c><00:22:40.300><c> paging</c><00:22:41.300><c> so</c><00:22:42.230><c> what</c><00:22:42.380><c> you'll</c><00:22:42.500><c> not</c>

00:22:42.730 --> 00:22:42.740 align:start position:0%
efficient that paging so what you'll not
 

00:22:42.740 --> 00:22:45.820 align:start position:0%
efficient that paging so what you'll not
want<00:22:42.890><c> to</c><00:22:43.040><c> do</c><00:22:43.160><c> is</c><00:22:43.370><c> is</c><00:22:43.640><c> try</c><00:22:44.120><c> to</c><00:22:44.380><c> keep</c><00:22:45.380><c> OpenGL</c>

00:22:45.820 --> 00:22:45.830 align:start position:0%
want to do is is try to keep OpenGL
 

00:22:45.830 --> 00:22:47.170 align:start position:0%
want to do is is try to keep OpenGL
always<00:22:46.160><c> out</c><00:22:46.280><c> of</c><00:22:46.310><c> a</c><00:22:46.430><c> paging</c><00:22:46.760><c> mode</c><00:22:46.910><c> you</c><00:22:47.090><c> don't</c>

00:22:47.170 --> 00:22:47.180 align:start position:0%
always out of a paging mode you don't
 

00:22:47.180 --> 00:22:51.040 align:start position:0%
always out of a paging mode you don't
want<00:22:47.390><c> to</c><00:22:47.450><c> try</c><00:22:47.990><c> to</c><00:22:48.020><c> second-guess</c><00:22:49.540><c> the</c><00:22:50.540><c> exact</c>

00:22:51.040 --> 00:22:51.050 align:start position:0%
want to try to second-guess the exact
 

00:22:51.050 --> 00:22:52.750 align:start position:0%
want to try to second-guess the exact
size<00:22:51.380><c> of</c><00:22:51.500><c> the</c><00:22:51.560><c> video</c><00:22:51.680><c> memory</c><00:22:51.980><c> available</c><00:22:52.520><c> and</c>

00:22:52.750 --> 00:22:52.760 align:start position:0%
size of the video memory available and
 

00:22:52.760 --> 00:22:54.730 align:start position:0%
size of the video memory available and
wearing<00:22:53.600><c> exactly</c><00:22:53.750><c> OpenGL</c><00:22:54.380><c> is</c><00:22:54.470><c> going</c><00:22:54.620><c> to</c><00:22:54.680><c> go</c>

00:22:54.730 --> 00:22:54.740 align:start position:0%
wearing exactly OpenGL is going to go
 

00:22:54.740 --> 00:22:56.530 align:start position:0%
wearing exactly OpenGL is going to go
into<00:22:54.920><c> paging</c><00:22:55.220><c> mode</c><00:22:55.400><c> because</c><00:22:56.270><c> if</c><00:22:56.360><c> you</c><00:22:56.420><c> do</c><00:22:56.510><c> that</c>

00:22:56.530 --> 00:22:56.540 align:start position:0%
into paging mode because if you do that
 

00:22:56.540 --> 00:22:59.170 align:start position:0%
into paging mode because if you do that
you're<00:22:56.810><c> not</c><00:22:56.900><c> gonna</c><00:22:57.050><c> let</c><00:22:57.170><c> OpenGL</c><00:22:57.530><c> grow</c><00:22:58.180><c> and</c>

00:22:59.170 --> 00:22:59.180 align:start position:0%
you're not gonna let OpenGL grow and
 

00:22:59.180 --> 00:23:00.360 align:start position:0%
you're not gonna let OpenGL grow and
utilize<00:22:59.900><c> some</c><00:23:00.080><c> of</c><00:23:00.170><c> the</c><00:23:00.230><c> mechanisms</c>

00:23:00.360 --> 00:23:00.370 align:start position:0%
utilize some of the mechanisms
 

00:23:00.370 --> 00:23:02.710 align:start position:0%
utilize some of the mechanisms
internally<00:23:01.370><c> to</c><00:23:01.550><c> the</c><00:23:01.640><c> driver</c><00:23:01.880><c> that</c><00:23:02.120><c> will</c><00:23:02.420><c> try</c>

00:23:02.710 --> 00:23:02.720 align:start position:0%
internally to the driver that will try
 

00:23:02.720 --> 00:23:05.890 align:start position:0%
internally to the driver that will try
to<00:23:02.750><c> optimally</c><00:23:03.230><c> page</c><00:23:03.470><c> textures</c><00:23:03.890><c> on</c><00:23:04.010><c> and</c><00:23:04.130><c> off</c><00:23:04.900><c> so</c>

00:23:05.890 --> 00:23:05.900 align:start position:0%
to optimally page textures on and off so
 

00:23:05.900 --> 00:23:09.640 align:start position:0%
to optimally page textures on and off so
up<00:23:06.020><c> until</c><00:23:06.110><c> uses</c><00:23:06.620><c> the</c><00:23:07.510><c> internally</c><00:23:08.510><c> for</c><00:23:08.900><c> paging</c>

00:23:09.640 --> 00:23:09.650 align:start position:0%
up until uses the internally for paging
 

00:23:09.650 --> 00:23:11.620 align:start position:0%
up until uses the internally for paging
textures<00:23:09.920><c> on</c><00:23:10.010><c> and</c><00:23:10.130><c> off</c><00:23:10.220><c> it's</c><00:23:10.430><c> called</c><00:23:10.640><c> LR</c><00:23:10.970><c> um</c><00:23:11.390><c> ru</c>

00:23:11.620 --> 00:23:11.630 align:start position:0%
textures on and off it's called LR um ru
 

00:23:11.630 --> 00:23:13.390 align:start position:0%
textures on and off it's called LR um ru
algorithm<00:23:12.110><c> that</c><00:23:12.710><c> stands</c><00:23:12.980><c> for</c><00:23:13.100><c> at</c><00:23:13.280><c> least</c>

00:23:13.390 --> 00:23:13.400 align:start position:0%
algorithm that stands for at least
 

00:23:13.400 --> 00:23:15.820 align:start position:0%
algorithm that stands for at least
recently<00:23:13.820><c> used</c><00:23:13.910><c> most</c><00:23:14.420><c> recently</c><00:23:14.780><c> used</c><00:23:15.020><c> so</c>

00:23:15.820 --> 00:23:15.830 align:start position:0%
recently used most recently used so
 

00:23:15.830 --> 00:23:19.540 align:start position:0%
recently used most recently used so
depending<00:23:16.280><c> on</c><00:23:16.400><c> how</c><00:23:16.790><c> committed</c><00:23:17.780><c> you</c><00:23:18.050><c> are</c><00:23:18.550><c> how</c>

00:23:19.540 --> 00:23:19.550 align:start position:0%
depending on how committed you are how
 

00:23:19.550 --> 00:23:21.270 align:start position:0%
depending on how committed you are how
many<00:23:19.610><c> textures</c><00:23:20.210><c> are</c><00:23:20.360><c> committed</c><00:23:20.630><c> per</c><00:23:20.750><c> scene</c>

00:23:21.270 --> 00:23:21.280 align:start position:0%
many textures are committed per scene
 

00:23:21.280 --> 00:23:23.890 align:start position:0%
many textures are committed per scene
whether<00:23:22.280><c> you're</c><00:23:22.520><c> over</c><00:23:22.730><c> committed</c><00:23:23.180><c> that</c><00:23:23.510><c> scene</c>

00:23:23.890 --> 00:23:23.900 align:start position:0%
whether you're over committed that scene
 

00:23:23.900 --> 00:23:26.200 align:start position:0%
whether you're over committed that scene
it<00:23:24.620><c> will</c><00:23:24.740><c> actually</c><00:23:24.950><c> switch</c><00:23:25.820><c> to</c><00:23:25.850><c> different</c>

00:23:26.200 --> 00:23:26.210 align:start position:0%
it will actually switch to different
 

00:23:26.210 --> 00:23:28.240 align:start position:0%
it will actually switch to different
mechanisms<00:23:27.140><c> for</c><00:23:27.320><c> paging</c><00:23:27.710><c> textures</c><00:23:28.040><c> on</c><00:23:28.130><c> and</c>

00:23:28.240 --> 00:23:28.250 align:start position:0%
mechanisms for paging textures on and
 

00:23:28.250 --> 00:23:31.660 align:start position:0%
mechanisms for paging textures on and
off<00:23:28.340><c> trying</c><00:23:28.730><c> to</c><00:23:29.860><c> optimally</c><00:23:30.860><c> keep</c><00:23:31.370><c> the</c><00:23:31.520><c> right</c>

00:23:31.660 --> 00:23:31.670 align:start position:0%
off trying to optimally keep the right
 

00:23:31.670 --> 00:23:34.960 align:start position:0%
off trying to optimally keep the right
set<00:23:32.000><c> on</c><00:23:32.180><c> the</c><00:23:32.330><c> graphics</c><00:23:32.660><c> card</c><00:23:32.720><c> and</c><00:23:33.140><c> not</c><00:23:33.970><c> unduly</c>

00:23:34.960 --> 00:23:34.970 align:start position:0%
set on the graphics card and not unduly
 

00:23:34.970 --> 00:23:36.430 align:start position:0%
set on the graphics card and not unduly
page<00:23:35.450><c> off</c><00:23:35.690><c> ones</c><00:23:35.960><c> that</c><00:23:36.110><c> are</c><00:23:36.170><c> going</c><00:23:36.260><c> to</c><00:23:36.350><c> be</c>

00:23:36.430 --> 00:23:36.440 align:start position:0%
page off ones that are going to be
 

00:23:36.440 --> 00:23:39.130 align:start position:0%
page off ones that are going to be
needed<00:23:36.740><c> again</c><00:23:37.390><c> so</c><00:23:38.390><c> that</c><00:23:38.630><c> that</c><00:23:38.840><c> algorithm</c>

00:23:39.130 --> 00:23:39.140 align:start position:0%
needed again so that that algorithm
 

00:23:39.140 --> 00:23:42.310 align:start position:0%
needed again so that that algorithm
actually<00:23:39.410><c> works</c><00:23:39.710><c> pretty</c><00:23:39.830><c> well</c><00:23:41.320><c> also</c>

00:23:42.310 --> 00:23:42.320 align:start position:0%
actually works pretty well also
 

00:23:42.320 --> 00:23:44.980 align:start position:0%
actually works pretty well also
particular<00:23:43.070><c> to</c><00:23:43.220><c> us</c><00:23:43.370><c> 10</c><00:23:43.670><c> is</c><00:23:43.910><c> we've</c><00:23:44.690><c> built</c><00:23:44.840><c> the</c>

00:23:44.980 --> 00:23:44.990 align:start position:0%
particular to us 10 is we've built the
 

00:23:44.990 --> 00:23:48.520 align:start position:0%
particular to us 10 is we've built the
mechanism<00:23:45.380><c> that</c><00:23:45.730><c> causes</c><00:23:46.730><c> almost</c><00:23:47.420><c> no</c><00:23:47.840><c> CPU</c><00:23:48.320><c> work</c>

00:23:48.520 --> 00:23:48.530 align:start position:0%
mechanism that causes almost no CPU work
 

00:23:48.530 --> 00:23:50.530 align:start position:0%
mechanism that causes almost no CPU work
to<00:23:48.770><c> page</c><00:23:48.950><c> a</c><00:23:48.980><c> texture</c><00:23:49.400><c> so</c><00:23:49.970><c> once</c><00:23:50.120><c> the</c><00:23:50.210><c> texture</c><00:23:50.450><c> is</c>

00:23:50.530 --> 00:23:50.540 align:start position:0%
to page a texture so once the texture is
 

00:23:50.540 --> 00:23:52.900 align:start position:0%
to page a texture so once the texture is
in<00:23:50.630><c> OpenGL</c><00:23:51.110><c> and</c><00:23:51.350><c> had</c><00:23:51.860><c> to</c><00:23:51.920><c> get</c><00:23:52.040><c> paged</c><00:23:52.220><c> off</c><00:23:52.430><c> it</c>

00:23:52.900 --> 00:23:52.910 align:start position:0%
in OpenGL and had to get paged off it
 

00:23:52.910 --> 00:23:54.760 align:start position:0%
in OpenGL and had to get paged off it
back<00:23:53.210><c> in</c><00:23:53.330><c> the</c><00:23:53.390><c> system</c><00:23:53.540><c> memory</c><00:23:53.840><c> let's</c><00:23:54.020><c> say</c><00:23:54.200><c> it</c>

00:23:54.760 --> 00:23:54.770 align:start position:0%
back in the system memory let's say it
 

00:23:54.770 --> 00:23:56.650 align:start position:0%
back in the system memory let's say it
costs<00:23:55.010><c> very</c><00:23:55.220><c> little</c><00:23:55.250><c> CPU</c><00:23:56.000><c> work</c><00:23:56.210><c> to</c><00:23:56.420><c> get</c><00:23:56.570><c> it</c>

00:23:56.650 --> 00:23:56.660 align:start position:0%
costs very little CPU work to get it
 

00:23:56.660 --> 00:23:58.600 align:start position:0%
costs very little CPU work to get it
back<00:23:56.840><c> into</c><00:23:57.170><c> the</c><00:23:57.290><c> in</c><00:23:57.530><c> the</c><00:23:57.710><c> stream</c><00:23:58.040><c> and</c><00:23:58.220><c> back</c>

00:23:58.600 --> 00:23:58.610 align:start position:0%
back into the in the stream and back
 

00:23:58.610 --> 00:24:01.900 align:start position:0%
back into the in the stream and back
uploaded<00:23:59.150><c> on</c><00:23:59.270><c> to</c><00:23:59.360><c> OpenGL</c><00:23:59.570><c> so</c><00:24:00.640><c> while</c><00:24:01.640><c> it</c><00:24:01.820><c> will</c>

00:24:01.900 --> 00:24:01.910 align:start position:0%
uploaded on to OpenGL so while it will
 

00:24:01.910 --> 00:24:03.490 align:start position:0%
uploaded on to OpenGL so while it will
cost<00:24:02.240><c> a</c><00:24:02.420><c> little</c><00:24:02.510><c> bit</c><00:24:02.660><c> of</c><00:24:02.840><c> memory</c><00:24:02.990><c> bandwidth</c>

00:24:03.490 --> 00:24:03.500 align:start position:0%
cost a little bit of memory bandwidth
 

00:24:03.500 --> 00:24:05.440 align:start position:0%
cost a little bit of memory bandwidth
while<00:24:04.460><c> it's</c><00:24:04.610><c> getting</c><00:24:04.820><c> read</c><00:24:05.030><c> and</c><00:24:05.240><c> it's</c><00:24:05.360><c> going</c>

00:24:05.440 --> 00:24:05.450 align:start position:0%
while it's getting read and it's going
 

00:24:05.450 --> 00:24:08.200 align:start position:0%
while it's getting read and it's going
to<00:24:05.570><c> cause</c><00:24:05.690><c> some</c><00:24:05.720><c> AGP</c><00:24:06.200><c> traffic</c><00:24:06.650><c> the</c><00:24:07.430><c> CPU</c><00:24:07.820><c> cycles</c>

00:24:08.200 --> 00:24:08.210 align:start position:0%
to cause some AGP traffic the CPU cycles
 

00:24:08.210 --> 00:24:10.870 align:start position:0%
to cause some AGP traffic the CPU cycles
spent<00:24:08.480><c> or</c><00:24:08.690><c> gonna</c><00:24:08.780><c> be</c><00:24:08.930><c> pretty</c><00:24:09.170><c> minimal</c><00:24:09.760><c> so</c><00:24:10.760><c> we</c>

00:24:10.870 --> 00:24:10.880 align:start position:0%
spent or gonna be pretty minimal so we
 

00:24:10.880 --> 00:24:13.060 align:start position:0%
spent or gonna be pretty minimal so we
find<00:24:11.150><c> that</c><00:24:11.330><c> letting</c><00:24:12.020><c> OpenGL</c><00:24:12.410><c> do</c><00:24:12.560><c> the</c><00:24:12.680><c> paging</c>

00:24:13.060 --> 00:24:13.070 align:start position:0%
find that letting OpenGL do the paging
 

00:24:13.070 --> 00:24:15.610 align:start position:0%
find that letting OpenGL do the paging
isn't<00:24:14.030><c> expensive</c><00:24:14.390><c> for</c><00:24:14.660><c> the</c><00:24:14.720><c> CPU</c><00:24:15.110><c> to</c><00:24:15.200><c> CPU</c><00:24:15.500><c> can</c>

00:24:15.610 --> 00:24:15.620 align:start position:0%
isn't expensive for the CPU to CPU can
 

00:24:15.620 --> 00:24:19.450 align:start position:0%
isn't expensive for the CPU to CPU can
keep<00:24:15.800><c> on</c><00:24:15.950><c> going</c><00:24:16.450><c> and</c><00:24:17.450><c> as</c><00:24:17.840><c> long</c><00:24:18.050><c> as</c><00:24:18.430><c> you're</c><00:24:19.430><c> not</c>

00:24:19.450 --> 00:24:19.460 align:start position:0%
keep on going and as long as you're not
 

00:24:19.460 --> 00:24:21.490 align:start position:0%
keep on going and as long as you're not
causing<00:24:20.330><c> too</c><00:24:20.570><c> much</c><00:24:20.690><c> bandwidth</c><00:24:21.110><c> across</c><00:24:21.230><c> the</c>

00:24:21.490 --> 00:24:21.500 align:start position:0%
causing too much bandwidth across the
 

00:24:21.500 --> 00:24:23.650 align:start position:0%
causing too much bandwidth across the
AGP<00:24:21.830><c> you</c><00:24:22.070><c> can</c><00:24:22.190><c> get</c><00:24:22.310><c> away</c><00:24:22.490><c> with</c><00:24:22.670><c> a</c><00:24:23.180><c> fair</c><00:24:23.570><c> amount</c>

00:24:23.650 --> 00:24:23.660 align:start position:0%
AGP you can get away with a fair amount
 

00:24:23.660 --> 00:24:26.200 align:start position:0%
AGP you can get away with a fair amount
of<00:24:23.780><c> paging</c><00:24:24.850><c> so</c>

00:24:26.200 --> 00:24:26.210 align:start position:0%
of paging so
 

00:24:26.210 --> 00:24:28.310 align:start position:0%
of paging so
depending<00:24:27.210><c> on</c><00:24:27.269><c> what</c><00:24:27.360><c> you're</c><00:24:27.510><c> doing</c><00:24:27.539><c> you're</c>

00:24:28.310 --> 00:24:28.320 align:start position:0%
depending on what you're doing you're
 

00:24:28.320 --> 00:24:29.149 align:start position:0%
depending on what you're doing you're
going<00:24:28.409><c> to</c><00:24:28.470><c> also</c><00:24:28.590><c> want</c><00:24:28.710><c> to</c><00:24:28.919><c> split</c><00:24:29.100><c> your</c>

00:24:29.149 --> 00:24:29.159 align:start position:0%
going to also want to split your
 

00:24:29.159 --> 00:24:32.389 align:start position:0%
going to also want to split your
textures<00:24:29.610><c> into</c><00:24:29.760><c> tiles</c><00:24:30.590><c> for</c><00:24:31.590><c> and</c><00:24:31.980><c> I've</c><00:24:32.220><c> got</c><00:24:32.370><c> a</c>

00:24:32.389 --> 00:24:32.399 align:start position:0%
textures into tiles for and I've got a
 

00:24:32.399 --> 00:24:34.639 align:start position:0%
textures into tiles for and I've got a
demo<00:24:32.669><c> of</c><00:24:32.789><c> this</c><00:24:33.029><c> in</c><00:24:33.210><c> a</c><00:24:33.299><c> bit</c><00:24:33.330><c> where</c><00:24:34.289><c> if</c><00:24:34.500><c> you're</c>

00:24:34.639 --> 00:24:34.649 align:start position:0%
demo of this in a bit where if you're
 

00:24:34.649 --> 00:24:36.620 align:start position:0%
demo of this in a bit where if you're
doing<00:24:34.679><c> wanting</c><00:24:35.399><c> to</c><00:24:35.519><c> do</c><00:24:35.669><c> smooth</c><00:24:35.970><c> animations</c><00:24:36.510><c> of</c>

00:24:36.620 --> 00:24:36.630 align:start position:0%
doing wanting to do smooth animations of
 

00:24:36.630 --> 00:24:38.000 align:start position:0%
doing wanting to do smooth animations of
some<00:24:36.840><c> sort</c>

00:24:38.000 --> 00:24:38.010 align:start position:0%
some sort
 

00:24:38.010 --> 00:24:41.600 align:start position:0%
some sort
trying<00:24:38.700><c> to</c><00:24:38.909><c> amortize</c><00:24:39.289><c> the</c><00:24:40.289><c> data</c><00:24:40.620><c> stream</c><00:24:40.950><c> as</c><00:24:41.429><c> it</c>

00:24:41.600 --> 00:24:41.610 align:start position:0%
trying to amortize the data stream as it
 

00:24:41.610 --> 00:24:44.450 align:start position:0%
trying to amortize the data stream as it
goes<00:24:41.760><c> to</c><00:24:41.850><c> the</c><00:24:41.940><c> card</c><00:24:42.179><c> and</c><00:24:42.389><c> trying</c><00:24:42.659><c> to</c><00:24:42.809><c> keep</c><00:24:43.460><c> the</c>

00:24:44.450 --> 00:24:44.460 align:start position:0%
goes to the card and trying to keep the
 

00:24:44.460 --> 00:24:46.789 align:start position:0%
goes to the card and trying to keep the
drawing<00:24:45.149><c> moving</c><00:24:45.600><c> while</c><00:24:45.870><c> large</c><00:24:46.200><c> images</c><00:24:46.679><c> are</c>

00:24:46.789 --> 00:24:46.799 align:start position:0%
drawing moving while large images are
 

00:24:46.799 --> 00:24:48.620 align:start position:0%
drawing moving while large images are
moving<00:24:47.039><c> up</c><00:24:47.190><c> the</c><00:24:47.340><c> stream</c><00:24:47.610><c> so</c><00:24:48.210><c> again</c><00:24:48.419><c> if</c><00:24:48.539><c> you</c>

00:24:48.620 --> 00:24:48.630 align:start position:0%
moving up the stream so again if you
 

00:24:48.630 --> 00:24:50.600 align:start position:0%
moving up the stream so again if you
look<00:24:48.750><c> at</c><00:24:48.870><c> the</c><00:24:48.960><c> whole</c><00:24:49.110><c> process</c><00:24:49.529><c> of</c><00:24:49.889><c> OpenGL</c><00:24:50.309><c> is</c><00:24:50.460><c> a</c>

00:24:50.600 --> 00:24:50.610 align:start position:0%
look at the whole process of OpenGL is a
 

00:24:50.610 --> 00:24:53.149 align:start position:0%
look at the whole process of OpenGL is a
big<00:24:50.909><c> data</c><00:24:51.149><c> stream</c><00:24:51.529><c> if</c><00:24:52.529><c> you</c><00:24:52.710><c> have</c><00:24:52.860><c> a</c><00:24:52.889><c> four</c>

00:24:53.149 --> 00:24:53.159 align:start position:0%
big data stream if you have a four
 

00:24:53.159 --> 00:24:55.129 align:start position:0%
big data stream if you have a four
megabyte<00:24:53.490><c> texture</c><00:24:53.880><c> that's</c><00:24:54.450><c> a</c><00:24:54.600><c> big</c><00:24:54.809><c> block</c><00:24:55.110><c> of</c>

00:24:55.129 --> 00:24:55.139 align:start position:0%
megabyte texture that's a big block of
 

00:24:55.139 --> 00:24:57.470 align:start position:0%
megabyte texture that's a big block of
data<00:24:55.350><c> in</c><00:24:55.529><c> the</c><00:24:55.620><c> middle</c><00:24:55.830><c> of</c><00:24:55.919><c> your</c><00:24:55.980><c> stream</c><00:24:56.309><c> so</c><00:24:56.820><c> you</c>

00:24:57.470 --> 00:24:57.480 align:start position:0%
data in the middle of your stream so you
 

00:24:57.480 --> 00:24:58.669 align:start position:0%
data in the middle of your stream so you
can<00:24:57.630><c> envision</c><00:24:57.870><c> that</c><00:24:58.169><c> under</c><00:24:58.500><c> some</c>

00:24:58.669 --> 00:24:58.679 align:start position:0%
can envision that under some
 

00:24:58.679 --> 00:25:01.399 align:start position:0%
can envision that under some
circumstances<00:24:59.340><c> it'd</c><00:24:59.610><c> be</c><00:24:59.760><c> good</c><00:24:59.909><c> to</c><00:25:00.409><c> interlace</c>

00:25:01.399 --> 00:25:01.409 align:start position:0%
circumstances it'd be good to interlace
 

00:25:01.409 --> 00:25:03.560 align:start position:0%
circumstances it'd be good to interlace
that<00:25:01.649><c> upload</c><00:25:02.010><c> with</c><00:25:02.399><c> some</c><00:25:02.610><c> polygon</c><00:25:03.299><c> drawing</c>

00:25:03.560 --> 00:25:03.570 align:start position:0%
that upload with some polygon drawing
 

00:25:03.570 --> 00:25:06.680 align:start position:0%
that upload with some polygon drawing
maybe<00:25:03.899><c> a</c><00:25:04.169><c> frame</c><00:25:04.940><c> here</c><00:25:05.940><c> and</c><00:25:06.000><c> there</c><00:25:06.240><c> such</c><00:25:06.539><c> you</c>

00:25:06.680 --> 00:25:06.690 align:start position:0%
maybe a frame here and there such you
 

00:25:06.690 --> 00:25:09.320 align:start position:0%
maybe a frame here and there such you
can<00:25:06.840><c> amortize</c><00:25:07.169><c> the</c><00:25:07.889><c> texture</c><00:25:08.760><c> upload</c><00:25:09.090><c> time</c>

00:25:09.320 --> 00:25:09.330 align:start position:0%
can amortize the texture upload time
 

00:25:09.330 --> 00:25:12.590 align:start position:0%
can amortize the texture upload time
going<00:25:09.539><c> across</c><00:25:09.690><c> the</c><00:25:10.019><c> bus</c><00:25:10.200><c> and</c><00:25:11.000><c> keep</c><00:25:12.000><c> animations</c>

00:25:12.590 --> 00:25:12.600 align:start position:0%
going across the bus and keep animations
 

00:25:12.600 --> 00:25:17.299 align:start position:0%
going across the bus and keep animations
flowing<00:25:14.570><c> so</c><00:25:15.799><c> so</c><00:25:16.799><c> here's</c><00:25:16.980><c> a</c><00:25:17.039><c> little</c><00:25:17.220><c> diagram</c>

00:25:17.299 --> 00:25:17.309 align:start position:0%
flowing so so here's a little diagram
 

00:25:17.309 --> 00:25:22.159 align:start position:0%
flowing so so here's a little diagram
for<00:25:17.880><c> texture</c><00:25:18.659><c> management</c><00:25:20.269><c> one</c><00:25:21.269><c> thing</c><00:25:21.450><c> that</c><00:25:21.630><c> we</c>

00:25:22.159 --> 00:25:22.169 align:start position:0%
for texture management one thing that we
 

00:25:22.169 --> 00:25:24.590 align:start position:0%
for texture management one thing that we
recommend<00:25:22.320><c> on</c><00:25:22.830><c> OS</c><00:25:23.429><c> 10</c><00:25:23.700><c> is</c><00:25:23.909><c> to</c><00:25:24.090><c> split</c><00:25:24.419><c> your</c>

00:25:24.590 --> 00:25:24.600 align:start position:0%
recommend on OS 10 is to split your
 

00:25:24.600 --> 00:25:26.060 align:start position:0%
recommend on OS 10 is to split your
texture<00:25:24.990><c> loading</c><00:25:25.260><c> off</c><00:25:25.380><c> to</c><00:25:25.559><c> a</c><00:25:25.590><c> separate</c><00:25:25.889><c> thread</c>

00:25:26.060 --> 00:25:26.070 align:start position:0%
texture loading off to a separate thread
 

00:25:26.070 --> 00:25:27.620 align:start position:0%
texture loading off to a separate thread
if<00:25:26.730><c> you're</c><00:25:26.880><c> going</c><00:25:27.000><c> to</c><00:25:27.059><c> be</c><00:25:27.120><c> spooling</c><00:25:27.389><c> through</c><00:25:27.570><c> a</c>

00:25:27.620 --> 00:25:27.630 align:start position:0%
if you're going to be spooling through a
 

00:25:27.630 --> 00:25:29.779 align:start position:0%
if you're going to be spooling through a
lot<00:25:27.840><c> of</c><00:25:27.929><c> textures</c><00:25:28.320><c> it's</c><00:25:28.919><c> a</c><00:25:28.980><c> good</c><00:25:29.130><c> idea</c><00:25:29.279><c> to</c>

00:25:29.779 --> 00:25:29.789 align:start position:0%
lot of textures it's a good idea to
 

00:25:29.789 --> 00:25:31.759 align:start position:0%
lot of textures it's a good idea to
maybe<00:25:30.570><c> spawn</c><00:25:30.960><c> a</c><00:25:30.990><c> thread</c><00:25:31.320><c> that</c><00:25:31.440><c> will</c><00:25:31.559><c> do</c><00:25:31.679><c> that</c>

00:25:31.759 --> 00:25:31.769 align:start position:0%
maybe spawn a thread that will do that
 

00:25:31.769 --> 00:25:34.759 align:start position:0%
maybe spawn a thread that will do that
work<00:25:31.919><c> for</c><00:25:32.159><c> you</c><00:25:32.480><c> and</c><00:25:33.480><c> the</c><00:25:34.139><c> reason</c><00:25:34.380><c> for</c><00:25:34.500><c> that</c><00:25:34.559><c> is</c>

00:25:34.759 --> 00:25:34.769 align:start position:0%
work for you and the reason for that is
 

00:25:34.769 --> 00:25:36.110 align:start position:0%
work for you and the reason for that is
that<00:25:34.799><c> there's</c><00:25:35.370><c> couple</c><00:25:35.519><c> reasons</c><00:25:35.669><c> one</c><00:25:35.880><c> is</c><00:25:36.029><c> you</c>

00:25:36.110 --> 00:25:36.120 align:start position:0%
that there's couple reasons one is you
 

00:25:36.120 --> 00:25:38.389 align:start position:0%
that there's couple reasons one is you
can<00:25:36.269><c> utilize</c><00:25:36.389><c> a</c><00:25:36.600><c> second</c><00:25:36.960><c> CPU</c><00:25:37.289><c> and</c><00:25:37.500><c> two</c><00:25:37.740><c> you</c><00:25:38.279><c> can</c>

00:25:38.389 --> 00:25:38.399 align:start position:0%
can utilize a second CPU and two you can
 

00:25:38.399 --> 00:25:42.500 align:start position:0%
can utilize a second CPU and two you can
utilize<00:25:38.519><c> pre-emptive</c><00:25:39.389><c> multitasking</c><00:25:39.510><c> to</c><00:25:41.510><c> to</c>

00:25:42.500 --> 00:25:42.510 align:start position:0%
utilize pre-emptive multitasking to to
 

00:25:42.510 --> 00:25:45.049 align:start position:0%
utilize pre-emptive multitasking to to
balance<00:25:43.409><c> out</c><00:25:43.559><c> the</c><00:25:43.590><c> loading</c><00:25:44.130><c> the</c><00:25:44.340><c> act</c><00:25:44.519><c> of</c><00:25:44.820><c> maybe</c>

00:25:45.049 --> 00:25:45.059 align:start position:0%
balance out the loading the act of maybe
 

00:25:45.059 --> 00:25:48.830 align:start position:0%
balance out the loading the act of maybe
reading<00:25:45.450><c> a</c><00:25:45.750><c> texture</c><00:25:46.320><c> from</c><00:25:46.470><c> disk</c><00:25:47.059><c> the</c><00:25:48.059><c> cost</c><00:25:48.570><c> of</c>

00:25:48.830 --> 00:25:48.840 align:start position:0%
reading a texture from disk the cost of
 

00:25:48.840 --> 00:25:51.379 align:start position:0%
reading a texture from disk the cost of
loading<00:25:49.139><c> it</c><00:25:49.230><c> in</c><00:25:49.289><c> OpenGL</c><00:25:49.649><c> you</c><00:25:49.919><c> can</c><00:25:50.519><c> you</c><00:25:50.760><c> can</c><00:25:50.940><c> use</c>

00:25:51.379 --> 00:25:51.389 align:start position:0%
loading it in OpenGL you can you can use
 

00:25:51.389 --> 00:25:54.019 align:start position:0%
loading it in OpenGL you can you can use
the<00:25:51.539><c> pre-emptive</c><00:25:52.760><c> capability</c><00:25:53.760><c> as</c><00:25:53.820><c> well</c><00:25:53.850><c> as</c>

00:25:54.019 --> 00:25:54.029 align:start position:0%
the pre-emptive capability as well as
 

00:25:54.029 --> 00:25:56.090 align:start position:0%
the pre-emptive capability as well as
tend<00:25:54.330><c> to</c><00:25:54.600><c> spread</c><00:25:55.049><c> that</c><00:25:55.260><c> cost</c><00:25:55.500><c> out</c><00:25:55.830><c> so</c><00:25:56.010><c> you</c>

00:25:56.090 --> 00:25:56.100 align:start position:0%
tend to spread that cost out so you
 

00:25:56.100 --> 00:25:59.360 align:start position:0%
tend to spread that cost out so you
don't<00:25:56.250><c> end</c><00:25:56.370><c> up</c><00:25:56.549><c> with</c><00:25:56.580><c> a</c><00:25:56.730><c> a</c><00:25:57.200><c> single</c><00:25:58.200><c> point</c><00:25:59.190><c> in</c>

00:25:59.360 --> 00:25:59.370 align:start position:0%
don't end up with a a single point in
 

00:25:59.370 --> 00:26:01.610 align:start position:0%
don't end up with a a single point in
your<00:25:59.460><c> open</c><00:25:59.789><c> Junt</c><00:25:59.940><c> your</c><00:26:00.029><c> rendering</c><00:26:00.389><c> stream</c><00:26:00.779><c> or</c>

00:26:01.610 --> 00:26:01.620 align:start position:0%
your open Junt your rendering stream or
 

00:26:01.620 --> 00:26:05.090 align:start position:0%
your open Junt your rendering stream or
your<00:26:02.130><c> in</c><00:26:02.399><c> your</c><00:26:02.519><c> CPU</c><00:26:02.850><c> cycles</c><00:26:03.269><c> that</c><00:26:03.480><c> are</c><00:26:04.100><c> blocked</c>

00:26:05.090 --> 00:26:05.100 align:start position:0%
your in your CPU cycles that are blocked
 

00:26:05.100 --> 00:26:07.310 align:start position:0%
your in your CPU cycles that are blocked
trying<00:26:05.700><c> to</c><00:26:05.760><c> get</c><00:26:05.850><c> this</c><00:26:06.000><c> texture</c><00:26:06.299><c> uploaded</c><00:26:07.200><c> and</c>

00:26:07.310 --> 00:26:07.320 align:start position:0%
trying to get this texture uploaded and
 

00:26:07.320 --> 00:26:09.500 align:start position:0%
trying to get this texture uploaded and
processed<00:26:07.519><c> so</c><00:26:08.519><c> it's</c><00:26:08.639><c> a</c><00:26:08.669><c> good</c><00:26:08.760><c> idea</c><00:26:08.880><c> so</c><00:26:09.179><c> if</c><00:26:09.389><c> we</c>

00:26:09.500 --> 00:26:09.510 align:start position:0%
processed so it's a good idea so if we
 

00:26:09.510 --> 00:26:11.570 align:start position:0%
processed so it's a good idea so if we
look<00:26:09.659><c> at</c><00:26:09.750><c> this</c><00:26:09.929><c> this</c><00:26:10.559><c> is</c><00:26:10.710><c> a</c><00:26:10.769><c> basic</c><00:26:11.070><c> diagram</c><00:26:11.399><c> of</c>

00:26:11.570 --> 00:26:11.580 align:start position:0%
look at this this is a basic diagram of
 

00:26:11.580 --> 00:26:13.669 align:start position:0%
look at this this is a basic diagram of
how<00:26:11.610><c> to</c><00:26:11.760><c> set</c><00:26:12.330><c> up</c><00:26:12.419><c> a</c><00:26:12.539><c> two</c><00:26:12.750><c> threaded</c><00:26:13.230><c> or</c><00:26:13.470><c> what</c>

00:26:13.669 --> 00:26:13.679 align:start position:0%
how to set up a two threaded or what
 

00:26:13.679 --> 00:26:15.669 align:start position:0%
how to set up a two threaded or what
happens<00:26:14.010><c> when</c><00:26:14.159><c> you</c><00:26:14.220><c> set</c><00:26:14.370><c> up</c><00:26:14.429><c> a</c><00:26:14.519><c> two</c><00:26:14.669><c> threaded</c>

00:26:15.669 --> 00:26:15.679 align:start position:0%
happens when you set up a two threaded
 

00:26:15.679 --> 00:26:18.529 align:start position:0%
happens when you set up a two threaded
application<00:26:16.679><c> one</c><00:26:17.010><c> loading</c><00:26:17.490><c> the</c><00:26:17.789><c> OpenGL</c>

00:26:18.529 --> 00:26:18.539 align:start position:0%
application one loading the OpenGL
 

00:26:18.539 --> 00:26:21.860 align:start position:0%
application one loading the OpenGL
textures<00:26:19.110><c> and</c><00:26:19.320><c> one</c><00:26:20.070><c> doing</c><00:26:20.340><c> the</c><00:26:20.399><c> drawing</c><00:26:20.870><c> so</c>

00:26:21.860 --> 00:26:21.870 align:start position:0%
textures and one doing the drawing so
 

00:26:21.870 --> 00:26:24.049 align:start position:0%
textures and one doing the drawing so
what<00:26:21.990><c> happens</c><00:26:22.230><c> is</c><00:26:22.380><c> the</c><00:26:22.860><c> first</c><00:26:23.519><c> thread</c><00:26:23.820><c> is</c>

00:26:24.049 --> 00:26:24.059 align:start position:0%
what happens is the first thread is
 

00:26:24.059 --> 00:26:25.940 align:start position:0%
what happens is the first thread is
loading<00:26:24.510><c> the</c><00:26:24.570><c> textures</c><00:26:24.960><c> and</c><00:26:25.320><c> those</c><00:26:25.679><c> textures</c>

00:26:25.940 --> 00:26:25.950 align:start position:0%
loading the textures and those textures
 

00:26:25.950 --> 00:26:29.330 align:start position:0%
loading the textures and those textures
will<00:26:26.460><c> get</c><00:26:26.850><c> processed</c><00:26:27.389><c> and</c><00:26:27.630><c> put</c><00:26:28.470><c> into</c><00:26:28.980><c> the</c>

00:26:29.330 --> 00:26:29.340 align:start position:0%
will get processed and put into the
 

00:26:29.340 --> 00:26:30.889 align:start position:0%
will get processed and put into the
driver<00:26:29.639><c> into</c><00:26:29.880><c> the</c><00:26:30.000><c> kernel</c><00:26:30.269><c> driver</c><00:26:30.480><c> so</c><00:26:30.809><c> the</c>

00:26:30.889 --> 00:26:30.899 align:start position:0%
driver into the kernel driver so the
 

00:26:30.899 --> 00:26:32.480 align:start position:0%
driver into the kernel driver so the
kernel<00:26:31.200><c> will</c><00:26:31.409><c> have</c><00:26:31.620><c> them</c><00:26:31.830><c> at</c><00:26:31.950><c> this</c><00:26:32.039><c> point</c><00:26:32.250><c> and</c>

00:26:32.480 --> 00:26:32.490 align:start position:0%
kernel will have them at this point and
 

00:26:32.490 --> 00:26:33.860 align:start position:0%
kernel will have them at this point and
they<00:26:33.059><c> will</c><00:26:33.179><c> be</c><00:26:33.269><c> sitting</c><00:26:33.419><c> in</c><00:26:33.539><c> the</c><00:26:33.630><c> kernel</c>

00:26:33.860 --> 00:26:33.870 align:start position:0%
they will be sitting in the kernel
 

00:26:33.870 --> 00:26:35.690 align:start position:0%
they will be sitting in the kernel
waiting<00:26:34.169><c> to</c><00:26:34.260><c> be</c><00:26:34.350><c> uploaded</c><00:26:34.740><c> to</c><00:26:34.769><c> the</c><00:26:34.919><c> card</c><00:26:35.100><c> so</c>

00:26:35.690 --> 00:26:35.700 align:start position:0%
waiting to be uploaded to the card so
 

00:26:35.700 --> 00:26:37.820 align:start position:0%
waiting to be uploaded to the card so
you'll<00:26:35.879><c> have</c><00:26:36.029><c> done</c><00:26:36.299><c> most</c><00:26:36.450><c> the</c><00:26:36.629><c> work</c><00:26:36.809><c> of</c><00:26:37.049><c> CPU</c>

00:26:37.820 --> 00:26:37.830 align:start position:0%
you'll have done most the work of CPU
 

00:26:37.830 --> 00:26:39.030 align:start position:0%
you'll have done most the work of CPU
cycles

00:26:39.030 --> 00:26:39.040 align:start position:0%
cycles
 

00:26:39.040 --> 00:26:41.490 align:start position:0%
cycles
on<00:26:39.460><c> the</c><00:26:39.640><c> other</c><00:26:40.150><c> on</c><00:26:40.390><c> the</c><00:26:40.540><c> primary</c><00:26:40.960><c> thread</c><00:26:41.320><c> of</c>

00:26:41.490 --> 00:26:41.500 align:start position:0%
on the other on the primary thread of
 

00:26:41.500 --> 00:26:44.220 align:start position:0%
on the other on the primary thread of
getting<00:26:42.040><c> the</c><00:26:42.190><c> data</c><00:26:42.490><c> into</c><00:26:42.820><c> the</c><00:26:43.690><c> kernel</c><00:26:44.050><c> and</c>

00:26:44.220 --> 00:26:44.230 align:start position:0%
getting the data into the kernel and
 

00:26:44.230 --> 00:26:45.870 align:start position:0%
getting the data into the kernel and
then<00:26:44.770><c> you</c><00:26:44.890><c> could</c><00:26:45.040><c> have</c><00:26:45.130><c> your</c><00:26:45.190><c> second</c><00:26:45.670><c> thread</c>

00:26:45.870 --> 00:26:45.880 align:start position:0%
then you could have your second thread
 

00:26:45.880 --> 00:26:47.910 align:start position:0%
then you could have your second thread
come<00:26:46.060><c> along</c><00:26:46.300><c> and</c><00:26:46.630><c> issue</c><00:26:47.500><c> the</c><00:26:47.710><c> drawing</c>

00:26:47.910 --> 00:26:47.920 align:start position:0%
come along and issue the drawing
 

00:26:47.920 --> 00:26:48.900 align:start position:0%
come along and issue the drawing
commands

00:26:48.900 --> 00:26:48.910 align:start position:0%
commands
 

00:26:48.910 --> 00:26:51.660 align:start position:0%
commands
and<00:26:49.180><c> as</c><00:26:50.110><c> long</c><00:26:50.710><c> as</c><00:26:50.860><c> you</c><00:26:50.950><c> have</c><00:26:51.130><c> your</c><00:26:51.160><c> thread</c>

00:26:51.660 --> 00:26:51.670 align:start position:0%
and as long as you have your thread
 

00:26:51.670 --> 00:26:54.720 align:start position:0%
and as long as you have your thread
synchronization<00:26:51.850><c> correctly</c><00:26:53.280><c> organized</c><00:26:54.280><c> then</c>

00:26:54.720 --> 00:26:54.730 align:start position:0%
synchronization correctly organized then
 

00:26:54.730 --> 00:26:56.460 align:start position:0%
synchronization correctly organized then
your<00:26:55.270><c> data</c><00:26:55.450><c> will</c><00:26:55.660><c> be</c><00:26:55.780><c> there</c><00:26:55.930><c> by</c><00:26:56.080><c> the</c><00:26:56.170><c> time</c><00:26:56.320><c> you</c>

00:26:56.460 --> 00:26:56.470 align:start position:0%
your data will be there by the time you
 

00:26:56.470 --> 00:26:59.640 align:start position:0%
your data will be there by the time you
need<00:26:56.620><c> it</c><00:26:56.650><c> and</c><00:26:58.170><c> everything</c><00:26:59.170><c> will</c><00:26:59.320><c> just</c><00:26:59.350><c> flow</c>

00:26:59.640 --> 00:26:59.650 align:start position:0%
need it and everything will just flow
 

00:26:59.650 --> 00:27:03.570 align:start position:0%
need it and everything will just flow
much<00:26:59.860><c> smoother</c><00:27:01.410><c> so</c><00:27:02.410><c> I've</c><00:27:02.800><c> got</c><00:27:02.980><c> a</c><00:27:03.010><c> demo</c><00:27:03.310><c> of</c><00:27:03.430><c> this</c>

00:27:03.570 --> 00:27:03.580 align:start position:0%
much smoother so I've got a demo of this
 

00:27:03.580 --> 00:27:07.830 align:start position:0%
much smoother so I've got a demo of this
and<00:27:04.950><c> this</c><00:27:05.950><c> demo</c><00:27:06.280><c> shows</c><00:27:06.310><c> this</c><00:27:07.000><c> basic</c><00:27:07.390><c> concept</c>

00:27:07.830 --> 00:27:07.840 align:start position:0%
and this demo shows this basic concept
 

00:27:07.840 --> 00:27:22.620 align:start position:0%
and this demo shows this basic concept
that<00:27:08.280><c> the</c><00:27:09.280><c> diagram</c><00:27:09.700><c> had</c><00:27:09.910><c> there</c><00:27:21.150><c> so</c><00:27:22.150><c> what</c><00:27:22.540><c> this</c>

00:27:22.620 --> 00:27:22.630 align:start position:0%
that the diagram had there so what this
 

00:27:22.630 --> 00:27:26.460 align:start position:0%
that the diagram had there so what this
demo<00:27:22.900><c> tries</c><00:27:23.110><c> to</c><00:27:23.230><c> show</c><00:27:23.410><c> is</c><00:27:23.620><c> a</c><00:27:25.110><c> couple</c><00:27:26.110><c> concepts</c>

00:27:26.460 --> 00:27:26.470 align:start position:0%
demo tries to show is a couple concepts
 

00:27:26.470 --> 00:27:31.950 align:start position:0%
demo tries to show is a couple concepts
one<00:27:26.710><c> is</c><00:27:26.890><c> how</c><00:27:27.400><c> to</c><00:27:27.870><c> balance</c><00:27:28.870><c> the</c><00:27:30.960><c> requirements</c>

00:27:31.950 --> 00:27:31.960 align:start position:0%
one is how to balance the requirements
 

00:27:31.960 --> 00:27:33.920 align:start position:0%
one is how to balance the requirements
of<00:27:32.050><c> your</c><00:27:32.080><c> application</c><00:27:32.620><c> with</c><00:27:32.980><c> quality</c><00:27:33.490><c> and</c>

00:27:33.920 --> 00:27:33.930 align:start position:0%
of your application with quality and
 

00:27:33.930 --> 00:27:37.170 align:start position:0%
of your application with quality and
smoothness<00:27:34.930><c> of</c><00:27:35.230><c> frame</c><00:27:35.500><c> rate</c><00:27:35.710><c> so</c><00:27:35.910><c> what</c><00:27:36.910><c> we</c><00:27:37.000><c> have</c>

00:27:37.170 --> 00:27:37.180 align:start position:0%
smoothness of frame rate so what we have
 

00:27:37.180 --> 00:27:40.920 align:start position:0%
smoothness of frame rate so what we have
here<00:27:37.210><c> on</c><00:27:37.660><c> the</c><00:27:39.090><c> left</c><00:27:40.090><c> is</c><00:27:40.330><c> we</c><00:27:40.450><c> have</c><00:27:40.600><c> a</c><00:27:40.630><c> slider</c>

00:27:40.920 --> 00:27:40.930 align:start position:0%
here on the left is we have a slider
 

00:27:40.930 --> 00:27:42.360 align:start position:0%
here on the left is we have a slider
that<00:27:41.140><c> will</c><00:27:41.260><c> adjust</c><00:27:41.350><c> the</c><00:27:41.650><c> quality</c><00:27:42.040><c> of</c><00:27:42.220><c> these</c>

00:27:42.360 --> 00:27:42.370 align:start position:0%
that will adjust the quality of these
 

00:27:42.370 --> 00:27:45.150 align:start position:0%
that will adjust the quality of these
images<00:27:42.930><c> so</c><00:27:43.930><c> for</c><00:27:44.140><c> instance</c><00:27:44.470><c> down</c><00:27:44.860><c> here</c><00:27:45.040><c> at</c><00:27:45.100><c> the</c>

00:27:45.150 --> 00:27:45.160 align:start position:0%
images so for instance down here at the
 

00:27:45.160 --> 00:27:48.060 align:start position:0%
images so for instance down here at the
bottom<00:27:45.250><c> I</c><00:27:45.460><c> can</c><00:27:45.610><c> get</c><00:27:45.700><c> 64</c><00:27:46.210><c> by</c><00:27:46.450><c> 64</c><00:27:46.480><c> textures</c><00:27:47.380><c> and</c>

00:27:48.060 --> 00:27:48.070 align:start position:0%
bottom I can get 64 by 64 textures and
 

00:27:48.070 --> 00:27:50.220 align:start position:0%
bottom I can get 64 by 64 textures and
up<00:27:48.190><c> on</c><00:27:48.280><c> the</c><00:27:48.340><c> top</c><00:27:48.520><c> I</c><00:27:48.640><c> get</c><00:27:48.790><c> 1024</c><00:27:49.390><c> by</c><00:27:49.510><c> 1024</c>

00:27:50.220 --> 00:27:50.230 align:start position:0%
up on the top I get 1024 by 1024
 

00:27:50.230 --> 00:27:54.330 align:start position:0%
up on the top I get 1024 by 1024
and<00:27:50.440><c> everything</c><00:27:51.310><c> in</c><00:27:51.430><c> between</c><00:27:51.580><c> so</c><00:27:53.340><c> what's</c>

00:27:54.330 --> 00:27:54.340 align:start position:0%
and everything in between so what's
 

00:27:54.340 --> 00:27:57.210 align:start position:0%
and everything in between so what's
interesting<00:27:54.490><c> to</c><00:27:54.940><c> to</c><00:27:55.600><c> look</c><00:27:55.780><c> at</c><00:27:55.930><c> here</c><00:27:56.230><c> is</c><00:27:56.410><c> if</c>

00:27:57.210 --> 00:27:57.220 align:start position:0%
interesting to to look at here is if
 

00:27:57.220 --> 00:27:58.590 align:start position:0%
interesting to to look at here is if
you're<00:27:57.370><c> trying</c><00:27:57.610><c> to</c><00:27:57.670><c> say</c><00:27:57.910><c> write</c><00:27:58.270><c> a</c><00:27:58.300><c> screen</c>

00:27:58.590 --> 00:27:58.600 align:start position:0%
you're trying to say write a screen
 

00:27:58.600 --> 00:28:01.980 align:start position:0%
you're trying to say write a screen
saver<00:27:58.830><c> for</c><00:27:59.830><c> instance</c><00:28:00.190><c> and</c><00:28:01.000><c> you're</c><00:28:01.600><c> trying</c><00:28:01.930><c> to</c>

00:28:01.980 --> 00:28:01.990 align:start position:0%
saver for instance and you're trying to
 

00:28:01.990 --> 00:28:04.140 align:start position:0%
saver for instance and you're trying to
get<00:28:02.380><c> these</c><00:28:02.500><c> images</c><00:28:02.950><c> up</c><00:28:03.100><c> to</c><00:28:03.130><c> the</c><00:28:03.580><c> graphics</c><00:28:03.910><c> card</c>

00:28:04.140 --> 00:28:04.150 align:start position:0%
get these images up to the graphics card
 

00:28:04.150 --> 00:28:05.880 align:start position:0%
get these images up to the graphics card
while<00:28:04.540><c> maintaining</c><00:28:04.810><c> smooth</c><00:28:05.410><c> animation</c>

00:28:05.880 --> 00:28:05.890 align:start position:0%
while maintaining smooth animation
 

00:28:05.890 --> 00:28:08.160 align:start position:0%
while maintaining smooth animation
you'll<00:28:06.670><c> see</c><00:28:06.820><c> that</c><00:28:06.910><c> we</c><00:28:07.000><c> get</c><00:28:07.120><c> a</c><00:28:07.180><c> hesitation</c><00:28:07.780><c> and</c>

00:28:08.160 --> 00:28:08.170 align:start position:0%
you'll see that we get a hesitation and
 

00:28:08.170 --> 00:28:11.520 align:start position:0%
you'll see that we get a hesitation and
that<00:28:09.160><c> hesitation</c><00:28:09.490><c> is</c><00:28:10.030><c> because</c><00:28:11.020><c> one</c><00:28:11.260><c> we</c><00:28:11.410><c> only</c>

00:28:11.520 --> 00:28:11.530 align:start position:0%
that hesitation is because one we only
 

00:28:11.530 --> 00:28:13.590 align:start position:0%
that hesitation is because one we only
have<00:28:11.770><c> one</c><00:28:12.010><c> thread</c><00:28:12.310><c> doing</c><00:28:12.700><c> the</c><00:28:12.850><c> loading</c><00:28:13.390><c> and</c>

00:28:13.590 --> 00:28:13.600 align:start position:0%
have one thread doing the loading and
 

00:28:13.600 --> 00:28:14.880 align:start position:0%
have one thread doing the loading and
the<00:28:13.690><c> animation</c><00:28:14.110><c> so</c><00:28:14.350><c> we</c><00:28:14.440><c> get</c><00:28:14.590><c> a</c><00:28:14.620><c> large</c>

00:28:14.880 --> 00:28:14.890 align:start position:0%
the animation so we get a large
 

00:28:14.890 --> 00:28:16.800 align:start position:0%
the animation so we get a large
hesitation<00:28:15.490><c> while</c><00:28:15.670><c> we</c><00:28:15.790><c> spool</c><00:28:16.390><c> the</c><00:28:16.540><c> texture</c>

00:28:16.800 --> 00:28:16.810 align:start position:0%
hesitation while we spool the texture
 

00:28:16.810 --> 00:28:19.260 align:start position:0%
hesitation while we spool the texture
off<00:28:16.930><c> disk</c><00:28:17.230><c> we</c><00:28:17.860><c> decompress</c><00:28:18.370><c> that</c><00:28:18.400><c> JPEG</c><00:28:18.940><c> and</c><00:28:19.000><c> we</c>

00:28:19.260 --> 00:28:19.270 align:start position:0%
off disk we decompress that JPEG and we
 

00:28:19.270 --> 00:28:21.750 align:start position:0%
off disk we decompress that JPEG and we
load<00:28:19.810><c> it</c><00:28:19.930><c> into</c><00:28:20.080><c> OpenGL</c><00:28:20.350><c> and</c><00:28:20.830><c> give</c><00:28:21.520><c> it</c><00:28:21.610><c> to</c><00:28:21.700><c> the</c>

00:28:21.750 --> 00:28:21.760 align:start position:0%
load it into OpenGL and give it to the
 

00:28:21.760 --> 00:28:25.170 align:start position:0%
load it into OpenGL and give it to the
driver<00:28:21.880><c> so</c><00:28:22.950><c> we</c><00:28:23.950><c> can</c><00:28:24.130><c> see</c><00:28:24.310><c> that</c><00:28:24.520><c> that</c><00:28:25.060><c> this</c>

00:28:25.170 --> 00:28:25.180 align:start position:0%
driver so we can see that that this
 

00:28:25.180 --> 00:28:26.250 align:start position:0%
driver so we can see that that this
isn't<00:28:25.360><c> going</c><00:28:25.540><c> to</c><00:28:25.630><c> lead</c><00:28:25.750><c> to</c><00:28:25.900><c> a</c><00:28:25.930><c> very</c><00:28:26.110><c> nice</c>

00:28:26.250 --> 00:28:26.260 align:start position:0%
isn't going to lead to a very nice
 

00:28:26.260 --> 00:28:28.470 align:start position:0%
isn't going to lead to a very nice
screensaver<00:28:26.800><c> so</c><00:28:27.730><c> we</c><00:28:27.880><c> start</c><00:28:28.090><c> looking</c><00:28:28.300><c> for</c>

00:28:28.470 --> 00:28:28.480 align:start position:0%
screensaver so we start looking for
 

00:28:28.480 --> 00:28:31.230 align:start position:0%
screensaver so we start looking for
techniques<00:28:28.900><c> to</c><00:28:29.170><c> smooth</c><00:28:29.770><c> that</c><00:28:29.920><c> out</c><00:28:30.090><c> and</c><00:28:31.090><c> one</c>

00:28:31.230 --> 00:28:31.240 align:start position:0%
techniques to smooth that out and one
 

00:28:31.240 --> 00:28:33.720 align:start position:0%
techniques to smooth that out and one
thing<00:28:31.390><c> we</c><00:28:31.510><c> can</c><00:28:31.630><c> do</c><00:28:31.750><c> is</c><00:28:31.930><c> we</c><00:28:32.890><c> can</c><00:28:33.070><c> spawn</c><00:28:33.400><c> a</c><00:28:33.430><c> thread</c>

00:28:33.720 --> 00:28:33.730 align:start position:0%
thing we can do is we can spawn a thread
 

00:28:33.730 --> 00:28:37.830 align:start position:0%
thing we can do is we can spawn a thread
and<00:28:34.710><c> we</c><00:28:35.710><c> can</c><00:28:35.950><c> give</c><00:28:36.280><c> the</c><00:28:36.490><c> that</c><00:28:37.090><c> thread</c><00:28:37.450><c> the</c><00:28:37.600><c> job</c>

00:28:37.830 --> 00:28:37.840 align:start position:0%
and we can give the that thread the job
 

00:28:37.840 --> 00:28:40.020 align:start position:0%
and we can give the that thread the job
of<00:28:38.170><c> spooling</c><00:28:38.680><c> the</c><00:28:38.830><c> texture</c><00:28:39.310><c> off</c><00:28:39.430><c> of</c><00:28:39.580><c> disk</c><00:28:39.790><c> and</c>

00:28:40.020 --> 00:28:40.030 align:start position:0%
of spooling the texture off of disk and
 

00:28:40.030 --> 00:28:43.800 align:start position:0%
of spooling the texture off of disk and
loading<00:28:40.900><c> it</c><00:28:40.960><c> into</c><00:28:41.170><c> a</c><00:28:41.260><c> pill</c><00:28:41.790><c> so</c><00:28:42.790><c> what</c><00:28:43.540><c> we</c><00:28:43.630><c> see</c>

00:28:43.800 --> 00:28:43.810 align:start position:0%
loading it into a pill so what we see
 

00:28:43.810 --> 00:28:46.020 align:start position:0%
loading it into a pill so what we see
now<00:28:43.990><c> is</c><00:28:44.170><c> we</c><00:28:44.290><c> see</c><00:28:44.500><c> that</c><00:28:44.710><c> it's</c><00:28:45.430><c> a</c><00:28:45.520><c> lot</c><00:28:45.640><c> smoother</c>

00:28:46.020 --> 00:28:46.030 align:start position:0%
now is we see that it's a lot smoother
 

00:28:46.030 --> 00:28:47.450 align:start position:0%
now is we see that it's a lot smoother
but<00:28:46.210><c> it's</c><00:28:46.330><c> not</c><00:28:46.450><c> perfect</c>

00:28:47.450 --> 00:28:47.460 align:start position:0%
but it's not perfect
 

00:28:47.460 --> 00:28:50.520 align:start position:0%
but it's not perfect
so<00:28:48.460><c> here's</c><00:28:48.670><c> where</c><00:28:48.880><c> you</c><00:28:49.750><c> can</c><00:28:49.870><c> start</c><00:28:50.080><c> deciding</c>

00:28:50.520 --> 00:28:50.530 align:start position:0%
so here's where you can start deciding
 

00:28:50.530 --> 00:28:51.990 align:start position:0%
so here's where you can start deciding
whether

00:28:51.990 --> 00:28:52.000 align:start position:0%
whether
 

00:28:52.000 --> 00:28:55.660 align:start position:0%
whether
frame<00:28:53.000><c> rate</c><00:28:53.210><c> and</c><00:28:53.390><c> quality</c><00:28:53.930><c> are</c><00:28:54.080><c> important</c><00:28:54.670><c> one</c>

00:28:55.660 --> 00:28:55.670 align:start position:0%
frame rate and quality are important one
 

00:28:55.670 --> 00:28:58.270 align:start position:0%
frame rate and quality are important one
thing<00:28:55.850><c> you</c><00:28:56.000><c> can</c><00:28:56.180><c> do</c><00:28:56.330><c> is</c><00:28:56.750><c> obviously</c><00:28:57.170><c> if</c><00:28:58.130><c> you're</c>

00:28:58.270 --> 00:28:58.280 align:start position:0%
thing you can do is obviously if you're
 

00:28:58.280 --> 00:29:01.990 align:start position:0%
thing you can do is obviously if you're
not<00:28:58.430><c> needing</c><00:28:58.790><c> to</c><00:29:00.340><c> achieve</c><00:29:01.340><c> those</c><00:29:01.580><c> kinds</c><00:29:01.940><c> of</c>

00:29:01.990 --> 00:29:02.000 align:start position:0%
not needing to achieve those kinds of
 

00:29:02.000 --> 00:29:05.290 align:start position:0%
not needing to achieve those kinds of
rates<00:29:02.240><c> of</c><00:29:02.510><c> uploading</c><00:29:03.440><c> and</c><00:29:03.740><c> animating</c><00:29:04.310><c> you</c><00:29:05.150><c> can</c>

00:29:05.290 --> 00:29:05.300 align:start position:0%
rates of uploading and animating you can
 

00:29:05.300 --> 00:29:09.490 align:start position:0%
rates of uploading and animating you can
slow<00:29:05.480><c> it</c><00:29:05.510><c> down</c><00:29:06.010><c> and</c><00:29:07.870><c> the</c><00:29:08.870><c> hiccups</c><00:29:09.200><c> are</c><00:29:09.320><c> almost</c>

00:29:09.490 --> 00:29:09.500 align:start position:0%
slow it down and the hiccups are almost
 

00:29:09.500 --> 00:29:11.350 align:start position:0%
slow it down and the hiccups are almost
gone<00:29:09.710><c> another</c><00:29:10.580><c> thing</c><00:29:10.790><c> you</c><00:29:10.910><c> can</c><00:29:11.000><c> do</c><00:29:11.150><c> obviously</c>

00:29:11.350 --> 00:29:11.360 align:start position:0%
gone another thing you can do obviously
 

00:29:11.360 --> 00:29:14.740 align:start position:0%
gone another thing you can do obviously
is<00:29:11.840><c> if</c><00:29:12.350><c> you</c><00:29:12.500><c> want</c><00:29:12.710><c> to</c><00:29:12.800><c> stay</c><00:29:12.980><c> relatively</c><00:29:13.940><c> fast</c>

00:29:14.740 --> 00:29:14.750 align:start position:0%
is if you want to stay relatively fast
 

00:29:14.750 --> 00:29:16.240 align:start position:0%
is if you want to stay relatively fast
animations<00:29:15.290><c> is</c><00:29:15.440><c> you</c><00:29:15.530><c> can</c><00:29:15.680><c> lower</c><00:29:15.860><c> your</c><00:29:16.070><c> image</c>

00:29:16.240 --> 00:29:16.250 align:start position:0%
animations is you can lower your image
 

00:29:16.250 --> 00:29:21.670 align:start position:0%
animations is you can lower your image
quality<00:29:16.400><c> so</c><00:29:20.080><c> we're</c><00:29:21.080><c> still</c><00:29:21.260><c> going</c><00:29:21.380><c> a</c><00:29:21.470><c> little</c>

00:29:21.670 --> 00:29:21.680 align:start position:0%
quality so we're still going a little
 

00:29:21.680 --> 00:29:23.860 align:start position:0%
quality so we're still going a little
bit<00:29:21.770><c> too</c><00:29:21.890><c> fast</c><00:29:22.070><c> to</c><00:29:22.370><c> get</c><00:29:22.570><c> absolutely</c><00:29:23.570><c> smooth</c>

00:29:23.860 --> 00:29:23.870 align:start position:0%
bit too fast to get absolutely smooth
 

00:29:23.870 --> 00:29:29.560 align:start position:0%
bit too fast to get absolutely smooth
animation<00:29:27.640><c> but</c><00:29:28.640><c> so</c><00:29:28.910><c> you</c><00:29:28.970><c> can</c><00:29:29.240><c> see</c><00:29:29.360><c> what</c><00:29:29.480><c> this</c>

00:29:29.560 --> 00:29:29.570 align:start position:0%
animation but so you can see what this
 

00:29:29.570 --> 00:29:32.950 align:start position:0%
animation but so you can see what this
technique<00:29:29.960><c> we've</c><00:29:30.740><c> basically</c><00:29:31.840><c> eliminated</c><00:29:32.840><c> the</c>

00:29:32.950 --> 00:29:32.960 align:start position:0%
technique we've basically eliminated the
 

00:29:32.960 --> 00:29:35.740 align:start position:0%
technique we've basically eliminated the
pauses<00:29:33.650><c> in</c><00:29:33.860><c> the</c><00:29:34.100><c> animation</c><00:29:34.400><c> stream</c><00:29:34.820><c> and</c><00:29:35.000><c> we're</c>

00:29:35.740 --> 00:29:35.750 align:start position:0%
pauses in the animation stream and we're
 

00:29:35.750 --> 00:29:37.420 align:start position:0%
pauses in the animation stream and we're
able<00:29:35.870><c> to</c><00:29:36.050><c> get</c><00:29:36.230><c> smooth</c><00:29:36.530><c> animations</c><00:29:37.070><c> while</c>

00:29:37.420 --> 00:29:37.430 align:start position:0%
able to get smooth animations while
 

00:29:37.430 --> 00:29:38.920 align:start position:0%
able to get smooth animations while
we're<00:29:37.640><c> spooling</c><00:29:37.910><c> through</c><00:29:38.270><c> a</c><00:29:38.300><c> large</c><00:29:38.630><c> quantity</c>

00:29:38.920 --> 00:29:38.930 align:start position:0%
we're spooling through a large quantity
 

00:29:38.930 --> 00:29:41.590 align:start position:0%
we're spooling through a large quantity
of<00:29:39.170><c> textures</c><00:29:39.940><c> this</c><00:29:40.940><c> demo</c><00:29:41.150><c> actually</c><00:29:41.450><c> will</c>

00:29:41.590 --> 00:29:41.600 align:start position:0%
of textures this demo actually will
 

00:29:41.600 --> 00:29:43.210 align:start position:0%
of textures this demo actually will
spool<00:29:41.840><c> through</c><00:29:42.050><c> 200</c><00:29:42.440><c> megabytes</c><00:29:42.770><c> of</c><00:29:42.860><c> textures</c>

00:29:43.210 --> 00:29:43.220 align:start position:0%
spool through 200 megabytes of textures
 

00:29:43.220 --> 00:29:47.020 align:start position:0%
spool through 200 megabytes of textures
simulating<00:29:43.970><c> a</c><00:29:44.030><c> fairly</c><00:29:44.360><c> large</c><00:29:44.540><c> scenario</c><00:29:46.030><c> and</c>

00:29:47.020 --> 00:29:47.030 align:start position:0%
simulating a fairly large scenario and
 

00:29:47.030 --> 00:29:49.690 align:start position:0%
simulating a fairly large scenario and
then<00:29:47.540><c> the</c><00:29:47.660><c> third</c><00:29:47.840><c> thing</c><00:29:48.050><c> we</c><00:29:48.170><c> can</c><00:29:48.350><c> do</c><00:29:48.610><c> after</c><00:29:49.610><c> we</c>

00:29:49.690 --> 00:29:49.700 align:start position:0%
then the third thing we can do after we
 

00:29:49.700 --> 00:29:53.050 align:start position:0%
then the third thing we can do after we
decided<00:29:49.970><c> of</c><00:29:50.210><c> frame</c><00:29:50.780><c> rate</c><00:29:50.810><c> quality</c><00:29:51.910><c> we</c><00:29:52.910><c> can</c>

00:29:53.050 --> 00:29:53.060 align:start position:0%
decided of frame rate quality we can
 

00:29:53.060 --> 00:29:56.230 align:start position:0%
decided of frame rate quality we can
also<00:29:53.210><c> go</c><00:29:54.140><c> to</c><00:29:54.200><c> a</c><00:29:54.440><c> tiled</c><00:29:54.890><c> mode</c><00:29:55.160><c> so</c><00:29:55.730><c> a</c><00:29:55.760><c> tile</c><00:29:55.970><c> mode</c>

00:29:56.230 --> 00:29:56.240 align:start position:0%
also go to a tiled mode so a tile mode
 

00:29:56.240 --> 00:29:59.860 align:start position:0%
also go to a tiled mode so a tile mode
is<00:29:56.570><c> an</c><00:29:57.320><c> attempt</c><00:29:57.860><c> to</c><00:29:58.180><c> split</c><00:29:59.180><c> the</c><00:29:59.300><c> texture</c><00:29:59.630><c> into</c>

00:29:59.860 --> 00:29:59.870 align:start position:0%
is an attempt to split the texture into
 

00:29:59.870 --> 00:30:02.950 align:start position:0%
is an attempt to split the texture into
many<00:30:00.080><c> pieces</c><00:30:00.260><c> and</c><00:30:00.740><c> to</c><00:30:01.010><c> amortize</c><00:30:01.640><c> the</c><00:30:01.970><c> cost</c><00:30:02.690><c> of</c>

00:30:02.950 --> 00:30:02.960 align:start position:0%
many pieces and to amortize the cost of
 

00:30:02.960 --> 00:30:05.620 align:start position:0%
many pieces and to amortize the cost of
uploading<00:30:03.290><c> that</c><00:30:03.500><c> across</c><00:30:03.830><c> the</c><00:30:04.130><c> bus</c><00:30:04.450><c> I've</c><00:30:05.450><c> had</c><00:30:05.600><c> a</c>

00:30:05.620 --> 00:30:05.630 align:start position:0%
uploading that across the bus I've had a
 

00:30:05.630 --> 00:30:06.790 align:start position:0%
uploading that across the bus I've had a
little<00:30:05.900><c> bit</c><00:30:05.990><c> of</c><00:30:06.050><c> problem</c><00:30:06.380><c> with</c><00:30:06.410><c> the</c><00:30:06.530><c> tiling</c>

00:30:06.790 --> 00:30:06.800 align:start position:0%
little bit of problem with the tiling
 

00:30:06.800 --> 00:30:07.780 align:start position:0%
little bit of problem with the tiling
mode<00:30:06.920><c> so</c><00:30:07.070><c> we're</c><00:30:07.190><c> gonna</c><00:30:07.280><c> give</c><00:30:07.490><c> it</c><00:30:07.580><c> a</c><00:30:07.610><c> shot</c>

00:30:07.780 --> 00:30:07.790 align:start position:0%
mode so we're gonna give it a shot
 

00:30:07.790 --> 00:30:10.380 align:start position:0%
mode so we're gonna give it a shot
though

00:30:10.380 --> 00:30:10.390 align:start position:0%
 
 

00:30:10.390 --> 00:30:14.400 align:start position:0%
 
so<00:30:11.390><c> the</c><00:30:11.480><c> tiling</c><00:30:11.840><c> both</c><00:30:11.990><c> theoretically</c><00:30:12.590><c> now</c><00:30:12.830><c> is</c>

00:30:14.400 --> 00:30:14.410 align:start position:0%
so the tiling both theoretically now is
 

00:30:14.410 --> 00:30:18.550 align:start position:0%
so the tiling both theoretically now is
using<00:30:15.410><c> the</c><00:30:15.560><c> primary</c><00:30:15.920><c> thread</c><00:30:16.460><c> to</c><00:30:17.410><c> load</c><00:30:18.410><c> the</c>

00:30:18.550 --> 00:30:18.560 align:start position:0%
using the primary thread to load the
 

00:30:18.560 --> 00:30:24.820 align:start position:0%
using the primary thread to load the
images<00:30:20.380><c> and</c><00:30:21.760><c> and</c><00:30:23.110><c> then</c><00:30:24.110><c> the</c><00:30:24.200><c> drawing</c><00:30:24.560><c> thread</c>

00:30:24.820 --> 00:30:24.830 align:start position:0%
images and and then the drawing thread
 

00:30:24.830 --> 00:30:28.570 align:start position:0%
images and and then the drawing thread
is<00:30:25.010><c> is</c><00:30:25.250><c> well</c><00:30:26.090><c> there</c><00:30:26.330><c> we</c><00:30:26.420><c> go</c><00:30:27.190><c> so</c><00:30:28.190><c> I've</c><00:30:28.280><c> got</c><00:30:28.430><c> some</c>

00:30:28.570 --> 00:30:28.580 align:start position:0%
is is well there we go so I've got some
 

00:30:28.580 --> 00:30:32.620 align:start position:0%
is is well there we go so I've got some
thread<00:30:28.820><c> synchronization</c><00:30:29.000><c> issues</c><00:30:31.510><c> it's</c><00:30:32.510><c> an</c>

00:30:32.620 --> 00:30:32.630 align:start position:0%
thread synchronization issues it's an
 

00:30:32.630 --> 00:30:35.670 align:start position:0%
thread synchronization issues it's an
attempt<00:30:32.930><c> to</c><00:30:32.990><c> try</c><00:30:33.140><c> to</c><00:30:33.440><c> amortize</c><00:30:34.280><c> the</c><00:30:34.760><c> cost</c><00:30:35.060><c> of</c>

00:30:35.670 --> 00:30:35.680 align:start position:0%
attempt to try to amortize the cost of
 

00:30:35.680 --> 00:30:38.560 align:start position:0%
attempt to try to amortize the cost of
moving<00:30:36.680><c> the</c><00:30:36.770><c> data</c><00:30:36.890><c> across</c><00:30:37.280><c> to</c><00:30:37.490><c> the</c><00:30:37.550><c> card</c><00:30:37.820><c> so</c>

00:30:38.560 --> 00:30:38.570 align:start position:0%
moving the data across to the card so
 

00:30:38.570 --> 00:30:41.380 align:start position:0%
moving the data across to the card so
with<00:30:39.380><c> the</c><00:30:39.470><c> MP</c><00:30:39.770><c> case</c><00:30:40.040><c> when</c><00:30:40.850><c> it</c><00:30:40.940><c> Susan</c><00:30:41.120><c> went</c><00:30:41.300><c> to</c>

00:30:41.380 --> 00:30:41.390 align:start position:0%
with the MP case when it Susan went to
 

00:30:41.390 --> 00:30:45.160 align:start position:0%
with the MP case when it Susan went to
the<00:30:41.600><c> multi-threaded</c><00:30:42.530><c> case</c><00:30:42.710><c> we</c><00:30:44.050><c> offloaded</c><00:30:45.050><c> the</c>

00:30:45.160 --> 00:30:45.170 align:start position:0%
the multi-threaded case we offloaded the
 

00:30:45.170 --> 00:30:48.040 align:start position:0%
the multi-threaded case we offloaded the
the<00:30:45.440><c> main</c><00:30:45.710><c> thread</c><00:30:46.010><c> its</c><00:30:46.700><c> job</c><00:30:47.000><c> of</c><00:30:47.030><c> loading</c><00:30:47.900><c> all</c>

00:30:48.040 --> 00:30:48.050 align:start position:0%
the main thread its job of loading all
 

00:30:48.050 --> 00:30:51.310 align:start position:0%
the main thread its job of loading all
of<00:30:48.200><c> the</c><00:30:48.490><c> data</c><00:30:49.490><c> from</c><00:30:49.730><c> disk</c><00:30:50.030><c> and</c><00:30:50.270><c> then</c><00:30:50.390><c> giving</c><00:30:51.230><c> it</c>

00:30:51.310 --> 00:30:51.320 align:start position:0%
of the data from disk and then giving it
 

00:30:51.320 --> 00:30:53.050 align:start position:0%
of the data from disk and then giving it
open<00:30:51.530><c> Jill</c><00:30:51.680><c> but</c><00:30:52.190><c> what</c><00:30:52.340><c> we</c><00:30:52.460><c> were</c><00:30:52.640><c> not</c><00:30:52.760><c> able</c><00:30:53.000><c> to</c>

00:30:53.050 --> 00:30:53.060 align:start position:0%
open Jill but what we were not able to
 

00:30:53.060 --> 00:30:54.730 align:start position:0%
open Jill but what we were not able to
do<00:30:53.270><c> in</c><00:30:53.480><c> the</c><00:30:53.570><c> multi-threaded</c><00:30:54.170><c> cases</c><00:30:54.500><c> we're</c><00:30:54.620><c> not</c>

00:30:54.730 --> 00:30:54.740 align:start position:0%
do in the multi-threaded cases we're not
 

00:30:54.740 --> 00:30:58.570 align:start position:0%
do in the multi-threaded cases we're not
able<00:30:54.920><c> to</c><00:30:55.330><c> amortize</c><00:30:56.330><c> the</c><00:30:56.690><c> cost</c><00:30:56.930><c> of</c><00:30:57.460><c> moving</c><00:30:58.460><c> that</c>

00:30:58.570 --> 00:30:58.580 align:start position:0%
able to amortize the cost of moving that
 

00:30:58.580 --> 00:31:01.060 align:start position:0%
able to amortize the cost of moving that
image<00:30:59.000><c> across</c><00:30:59.240><c> the</c><00:30:59.570><c> bus</c><00:30:59.720><c> across</c><00:30:59.960><c> a</c><00:31:00.170><c> GP</c><00:31:00.470><c> up</c><00:31:00.740><c> to</c>

00:31:01.060 --> 00:31:01.070 align:start position:0%
image across the bus across a GP up to
 

00:31:01.070 --> 00:31:04.450 align:start position:0%
image across the bus across a GP up to
the<00:31:01.610><c> video</c><00:31:01.820><c> memory</c><00:31:02.000><c> so</c><00:31:02.980><c> so</c><00:31:03.980><c> we</c><00:31:04.100><c> still</c><00:31:04.280><c> see</c><00:31:04.310><c> a</c>

00:31:04.450 --> 00:31:04.460 align:start position:0%
the video memory so so we still see a
 

00:31:04.460 --> 00:31:05.590 align:start position:0%
the video memory so so we still see a
small<00:31:04.730><c> hiccup</c><00:31:04.970><c> in</c><00:31:05.060><c> the</c><00:31:05.090><c> MP</c><00:31:05.270><c> case</c>

00:31:05.590 --> 00:31:05.600 align:start position:0%
small hiccup in the MP case
 

00:31:05.600 --> 00:31:07.419 align:start position:0%
small hiccup in the MP case
so<00:31:05.750><c> as</c><00:31:06.140><c> soon</c><00:31:06.289><c> as</c><00:31:06.350><c> we</c><00:31:06.440><c> go</c><00:31:06.530><c> to</c><00:31:06.590><c> tile</c><00:31:06.799><c> mode</c><00:31:07.039><c> what</c>

00:31:07.419 --> 00:31:07.429 align:start position:0%
so as soon as we go to tile mode what
 

00:31:07.429 --> 00:31:11.470 align:start position:0%
so as soon as we go to tile mode what
I've<00:31:07.520><c> done</c><00:31:07.760><c> here</c><00:31:08.090><c> is</c><00:31:08.270><c> I've</c><00:31:08.960><c> taken</c><00:31:09.309><c> a</c><00:31:10.480><c> small</c>

00:31:11.470 --> 00:31:11.480 align:start position:0%
I've done here is I've taken a small
 

00:31:11.480 --> 00:31:13.330 align:start position:0%
I've done here is I've taken a small
piece<00:31:11.870><c> of</c><00:31:11.900><c> the</c><00:31:12.110><c> tile</c><00:31:12.350><c> a</c><00:31:12.590><c> small</c><00:31:12.919><c> piece</c><00:31:13.130><c> of</c><00:31:13.160><c> the</c>

00:31:13.330 --> 00:31:13.340 align:start position:0%
piece of the tile a small piece of the
 

00:31:13.340 --> 00:31:15.520 align:start position:0%
piece of the tile a small piece of the
texture<00:31:13.669><c> and</c><00:31:13.850><c> I've</c><00:31:14.360><c> uploaded</c><00:31:14.960><c> one</c><00:31:15.320><c> small</c>

00:31:15.520 --> 00:31:15.530 align:start position:0%
texture and I've uploaded one small
 

00:31:15.530 --> 00:31:16.150 align:start position:0%
texture and I've uploaded one small
piece<00:31:15.710><c> at</c><00:31:15.830><c> a</c><00:31:15.890><c> time</c>

00:31:16.150 --> 00:31:16.160 align:start position:0%
piece at a time
 

00:31:16.160 --> 00:31:18.100 align:start position:0%
piece at a time
so<00:31:16.880><c> I'm</c><00:31:16.970><c> able</c><00:31:17.090><c> to</c><00:31:17.299><c> upload</c><00:31:17.510><c> one</c><00:31:17.720><c> small</c><00:31:17.929><c> piece</c>

00:31:18.100 --> 00:31:18.110 align:start position:0%
so I'm able to upload one small piece
 

00:31:18.110 --> 00:31:20.590 align:start position:0%
so I'm able to upload one small piece
per<00:31:18.320><c> frame</c><00:31:18.650><c> and</c><00:31:18.980><c> that</c><00:31:19.340><c> way</c><00:31:19.460><c> not</c><00:31:19.669><c> see</c><00:31:19.910><c> a</c><00:31:19.940><c> big</c><00:31:20.270><c> 4</c>

00:31:20.590 --> 00:31:20.600 align:start position:0%
per frame and that way not see a big 4
 

00:31:20.600 --> 00:31:22.450 align:start position:0%
per frame and that way not see a big 4
megabyte<00:31:21.020><c> chunk</c><00:31:21.620><c> of</c><00:31:21.740><c> data</c><00:31:21.860><c> in</c><00:31:22.160><c> the</c><00:31:22.280><c> data</c>

00:31:22.450 --> 00:31:22.460 align:start position:0%
megabyte chunk of data in the data
 

00:31:22.460 --> 00:31:23.890 align:start position:0%
megabyte chunk of data in the data
stream<00:31:22.700><c> as</c><00:31:22.850><c> it</c><00:31:22.880><c> goes</c><00:31:23.090><c> to</c><00:31:23.270><c> the</c><00:31:23.360><c> graphics</c><00:31:23.690><c> card</c>

00:31:23.890 --> 00:31:23.900 align:start position:0%
stream as it goes to the graphics card
 

00:31:23.900 --> 00:31:28.000 align:start position:0%
stream as it goes to the graphics card
and<00:31:24.400><c> done</c><00:31:25.400><c> correctly</c><00:31:25.760><c> you</c><00:31:26.059><c> can</c><00:31:26.660><c> make</c><00:31:26.980><c> get</c><00:31:27.980><c> a</c>

00:31:28.000 --> 00:31:28.010 align:start position:0%
and done correctly you can make get a
 

00:31:28.010 --> 00:31:30.760 align:start position:0%
and done correctly you can make get a
lot<00:31:28.190><c> of</c><00:31:28.280><c> data</c><00:31:28.429><c> up</c><00:31:28.640><c> in</c><00:31:28.760><c> the</c><00:31:28.820><c> system</c><00:31:29.000><c> with</c><00:31:29.840><c> very</c>

00:31:30.760 --> 00:31:30.770 align:start position:0%
lot of data up in the system with very
 

00:31:30.770 --> 00:31:34.000 align:start position:0%
lot of data up in the system with very
smooth<00:31:30.950><c> animations</c><00:31:31.750><c> so</c><00:31:32.750><c> again</c><00:31:33.590><c> if</c><00:31:33.770><c> you</c><00:31:33.860><c> look</c>

00:31:34.000 --> 00:31:34.010 align:start position:0%
smooth animations so again if you look
 

00:31:34.010 --> 00:31:36.430 align:start position:0%
smooth animations so again if you look
at<00:31:34.450><c> the</c><00:31:35.450><c> different</c><00:31:35.750><c> scenarios</c><00:31:35.840><c> looking</c><00:31:36.350><c> at</c>

00:31:36.430 --> 00:31:36.440 align:start position:0%
at the different scenarios looking at
 

00:31:36.440 --> 00:31:40.230 align:start position:0%
at the different scenarios looking at
the<00:31:36.530><c> stream</c><00:31:36.799><c> case</c><00:31:37.039><c> so</c><00:31:37.250><c> there</c><00:31:37.400><c> it</c><00:31:37.490><c> is</c>

00:31:40.230 --> 00:31:40.240 align:start position:0%
 
 

00:31:40.240 --> 00:31:45.270 align:start position:0%
 
multi-threaded<00:31:41.240><c> it's</c><00:31:41.929><c> a</c><00:31:41.960><c> lot</c><00:31:42.110><c> smoother</c><00:31:42.500><c> and</c>

00:31:45.270 --> 00:31:45.280 align:start position:0%
 
 

00:31:45.280 --> 00:31:50.470 align:start position:0%
 
if<00:31:46.280><c> we</c><00:31:46.370><c> go</c><00:31:46.460><c> tiled</c><00:31:49.000><c> so</c><00:31:50.000><c> that's</c><00:31:50.179><c> a</c><00:31:50.270><c> little</c>

00:31:50.470 --> 00:31:50.480 align:start position:0%
if we go tiled so that's a little
 

00:31:50.480 --> 00:31:52.390 align:start position:0%
if we go tiled so that's a little
example<00:31:50.809><c> of</c><00:31:51.049><c> how</c><00:31:51.380><c> to</c><00:31:51.440><c> try</c><00:31:51.890><c> to</c><00:31:51.950><c> get</c><00:31:52.130><c> through</c><00:31:52.340><c> a</c>

00:31:52.390 --> 00:31:52.400 align:start position:0%
example of how to try to get through a
 

00:31:52.400 --> 00:31:54.700 align:start position:0%
example of how to try to get through a
large<00:31:52.669><c> large</c><00:31:53.659><c> amount</c><00:31:53.870><c> of</c><00:31:53.929><c> texture</c><00:31:54.140><c> data</c><00:31:54.380><c> and</c>

00:31:54.700 --> 00:31:54.710 align:start position:0%
large large amount of texture data and
 

00:31:54.710 --> 00:31:57.360 align:start position:0%
large large amount of texture data and
techniques<00:31:55.610><c> to</c><00:31:55.850><c> get</c><00:31:56.600><c> it</c><00:31:56.750><c> through</c><00:31:56.870><c> the</c><00:31:56.900><c> system</c>

00:31:57.360 --> 00:31:57.370 align:start position:0%
techniques to get it through the system
 

00:31:57.370 --> 00:32:01.210 align:start position:0%
techniques to get it through the system
without<00:31:58.370><c> hesitating</c><00:31:59.330><c> your</c><00:31:59.659><c> animation</c><00:32:00.220><c> okay</c>

00:32:01.210 --> 00:32:01.220 align:start position:0%
without hesitating your animation okay
 

00:32:01.220 --> 00:32:02.799 align:start position:0%
without hesitating your animation okay
so<00:32:01.400><c> now</c><00:32:01.940><c> we're</c><00:32:02.030><c> going</c><00:32:02.120><c> to</c><00:32:02.210><c> talk</c><00:32:02.299><c> about</c><00:32:02.419><c> vertex</c>

00:32:02.799 --> 00:32:02.809 align:start position:0%
so now we're going to talk about vertex
 

00:32:02.809 --> 00:32:04.930 align:start position:0%
so now we're going to talk about vertex
operations<00:32:03.320><c> so</c><00:32:04.070><c> vertex</c><00:32:04.429><c> operations</c>

00:32:04.930 --> 00:32:04.940 align:start position:0%
operations so vertex operations
 

00:32:04.940 --> 00:32:06.549 align:start position:0%
operations so vertex operations
obviously<00:32:05.809><c> are</c><00:32:05.900><c> the</c><00:32:05.960><c> process</c><00:32:06.320><c> of</c><00:32:06.440><c> getting</c>

00:32:06.549 --> 00:32:06.559 align:start position:0%
obviously are the process of getting
 

00:32:06.559 --> 00:32:08.470 align:start position:0%
obviously are the process of getting
actually<00:32:06.950><c> getting</c><00:32:07.159><c> a</c><00:32:07.250><c> 3d</c><00:32:07.549><c> data</c><00:32:07.760><c> to</c><00:32:08.390><c> the</c>

00:32:08.470 --> 00:32:08.480 align:start position:0%
actually getting a 3d data to the
 

00:32:08.480 --> 00:32:13.149 align:start position:0%
actually getting a 3d data to the
graphics<00:32:08.809><c> card</c><00:32:09.580><c> and</c><00:32:10.900><c> there's</c><00:32:11.900><c> a</c><00:32:11.960><c> lots</c><00:32:12.830><c> of</c><00:32:12.950><c> good</c>

00:32:13.149 --> 00:32:13.159 align:start position:0%
graphics card and there's a lots of good
 

00:32:13.159 --> 00:32:14.649 align:start position:0%
graphics card and there's a lots of good
information<00:32:13.549><c> about</c><00:32:13.820><c> how</c><00:32:13.970><c> to</c><00:32:14.179><c> do</c><00:32:14.510><c> that</c>

00:32:14.649 --> 00:32:14.659 align:start position:0%
information about how to do that
 

00:32:14.659 --> 00:32:16.570 align:start position:0%
information about how to do that
correctly<00:32:14.809><c> and</c><00:32:15.409><c> it'll</c><00:32:15.950><c> vary</c><00:32:16.100><c> depending</c><00:32:16.340><c> on</c>

00:32:16.570 --> 00:32:16.580 align:start position:0%
correctly and it'll vary depending on
 

00:32:16.580 --> 00:32:18.190 align:start position:0%
correctly and it'll vary depending on
how<00:32:16.820><c> the</c><00:32:17.030><c> data</c><00:32:17.179><c> is</c><00:32:17.299><c> organized</c><00:32:17.690><c> for</c><00:32:18.110><c> your</c>

00:32:18.190 --> 00:32:18.200 align:start position:0%
how the data is organized for your
 

00:32:18.200 --> 00:32:22.390 align:start position:0%
how the data is organized for your
application<00:32:18.650><c> and</c><00:32:20.740><c> potentially</c><00:32:21.740><c> you</c><00:32:22.309><c> know</c>

00:32:22.390 --> 00:32:22.400 align:start position:0%
application and potentially you know
 

00:32:22.400 --> 00:32:24.430 align:start position:0%
application and potentially you know
what's<00:32:22.610><c> best</c><00:32:22.880><c> for</c><00:32:23.030><c> your</c><00:32:23.929><c> animation</c>

00:32:24.430 --> 00:32:24.440 align:start position:0%
what's best for your animation
 

00:32:24.440 --> 00:32:26.380 align:start position:0%
what's best for your animation
technically<00:32:25.010><c> or</c><00:32:25.070><c> what</c><00:32:25.220><c> you're</c><00:32:25.340><c> animating</c><00:32:25.640><c> so</c>

00:32:26.380 --> 00:32:26.390 align:start position:0%
technically or what you're animating so
 

00:32:26.390 --> 00:32:28.930 align:start position:0%
technically or what you're animating so
if<00:32:27.230><c> we</c><00:32:27.409><c> look</c><00:32:27.559><c> at</c><00:32:27.710><c> the</c><00:32:28.100><c> standard</c><00:32:28.460><c> opengl</c><00:32:28.760><c> path</c>

00:32:28.930 --> 00:32:28.940 align:start position:0%
if we look at the standard opengl path
 

00:32:28.940 --> 00:32:30.130 align:start position:0%
if we look at the standard opengl path
which<00:32:29.179><c> is</c><00:32:29.210><c> called</c><00:32:29.480><c> the</c><00:32:29.570><c> media</c><00:32:29.780><c> mode</c><00:32:29.929><c> path</c>

00:32:30.130 --> 00:32:30.140 align:start position:0%
which is called the media mode path
 

00:32:30.140 --> 00:32:32.409 align:start position:0%
which is called the media mode path
which<00:32:30.470><c> uses</c><00:32:30.799><c> a</c><00:32:30.830><c> Geel</c><00:32:31.070><c> begin</c><00:32:31.370><c> end</c><00:32:31.580><c> the</c><00:32:32.150><c> thing</c><00:32:32.330><c> to</c>

00:32:32.409 --> 00:32:32.419 align:start position:0%
which uses a Geel begin end the thing to
 

00:32:32.419 --> 00:32:34.390 align:start position:0%
which uses a Geel begin end the thing to
remember<00:32:32.480><c> with</c><00:32:32.720><c> GL</c><00:32:32.990><c> begin</c><00:32:33.289><c> end</c><00:32:33.470><c> always</c><00:32:33.890><c> is</c>

00:32:34.390 --> 00:32:34.400 align:start position:0%
remember with GL begin end always is
 

00:32:34.400 --> 00:32:36.430 align:start position:0%
remember with GL begin end always is
that<00:32:34.669><c> you</c><00:32:35.210><c> want</c><00:32:35.360><c> to</c><00:32:35.419><c> pass</c><00:32:35.539><c> as</c><00:32:35.750><c> much</c><00:32:36.020><c> data</c><00:32:36.260><c> as</c>

00:32:36.430 --> 00:32:36.440 align:start position:0%
that you want to pass as much data as
 

00:32:36.440 --> 00:32:38.169 align:start position:0%
that you want to pass as much data as
possible<00:32:36.470><c> between</c><00:32:37.010><c> the</c><00:32:37.370><c> jail</c><00:32:37.549><c> begin</c><00:32:37.880><c> and</c><00:32:38.030><c> end</c>

00:32:38.169 --> 00:32:38.179 align:start position:0%
possible between the jail begin and end
 

00:32:38.179 --> 00:32:40.240 align:start position:0%
possible between the jail begin and end
you<00:32:38.929><c> want</c><00:32:39.110><c> to</c><00:32:39.200><c> call</c><00:32:39.409><c> jail</c><00:32:39.620><c> begin</c><00:32:39.919><c> end</c><00:32:40.100><c> as</c>

00:32:40.240 --> 00:32:40.250 align:start position:0%
you want to call jail begin end as
 

00:32:40.250 --> 00:32:43.510 align:start position:0%
you want to call jail begin end as
infrequently<00:32:40.760><c> as</c><00:32:41.000><c> possible</c><00:32:41.890><c> and</c><00:32:42.890><c> the</c><00:32:43.309><c> reason</c>

00:32:43.510 --> 00:32:43.520 align:start position:0%
infrequently as possible and the reason
 

00:32:43.520 --> 00:32:46.000 align:start position:0%
infrequently as possible and the reason
for<00:32:43.640><c> that</c><00:32:43.730><c> is</c><00:32:43.909><c> that</c><00:32:44.740><c> there's</c><00:32:45.740><c> a</c><00:32:45.799><c> lot</c><00:32:45.919><c> of</c>

00:32:46.000 --> 00:32:46.010 align:start position:0%
for that is that there's a lot of
 

00:32:46.010 --> 00:32:48.700 align:start position:0%
for that is that there's a lot of
function<00:32:46.370><c> call</c><00:32:46.520><c> overhead</c><00:32:46.549><c> gl</c><00:32:47.419><c> begin</c><00:32:47.840><c> will</c><00:32:48.530><c> try</c>

00:32:48.700 --> 00:32:48.710 align:start position:0%
function call overhead gl begin will try
 

00:32:48.710 --> 00:32:51.279 align:start position:0%
function call overhead gl begin will try
to<00:32:48.740><c> do</c><00:32:48.980><c> some</c><00:32:49.309><c> card</c><00:32:50.150><c> management</c><00:32:50.570><c> some</c><00:32:51.020><c> state</c>

00:32:51.279 --> 00:32:51.289 align:start position:0%
to do some card management some state
 

00:32:51.289 --> 00:32:56.860 align:start position:0%
to do some card management some state
management<00:32:51.650><c> and</c><00:32:53.679><c> it</c><00:32:54.679><c> will</c><00:32:55.059><c> induce</c><00:32:56.059><c> function</c>

00:32:56.860 --> 00:32:56.870 align:start position:0%
management and it will induce function
 

00:32:56.870 --> 00:32:58.840 align:start position:0%
management and it will induce function
calls<00:32:57.080><c> to</c><00:32:57.260><c> the</c><00:32:57.350><c> lower-level</c><00:32:57.740><c> system</c><00:32:58.250><c> so</c>

00:32:58.840 --> 00:32:58.850 align:start position:0%
calls to the lower-level system so
 

00:32:58.850 --> 00:33:01.870 align:start position:0%
calls to the lower-level system so
reducing<00:32:59.390><c> the</c><00:32:59.510><c> begin</c><00:32:59.809><c> end</c><00:33:00.049><c> is</c><00:33:00.640><c> the</c><00:33:01.640><c> first</c>

00:33:01.870 --> 00:33:01.880 align:start position:0%
reducing the begin end is the first
 

00:33:01.880 --> 00:33:02.950 align:start position:0%
reducing the begin end is the first
thing<00:33:02.059><c> you</c><00:33:02.240><c> can</c><00:33:02.360><c> do</c><00:33:02.480><c> to</c><00:33:02.659><c> get</c><00:33:02.780><c> better</c>

00:33:02.950 --> 00:33:02.960 align:start position:0%
thing you can do to get better
 

00:33:02.960 --> 00:33:06.159 align:start position:0%
thing you can do to get better
performance<00:33:03.730><c> and</c><00:33:04.750><c> I'll</c><00:33:05.750><c> go</c><00:33:05.900><c> through</c><00:33:06.080><c> an</c>

00:33:06.159 --> 00:33:06.169 align:start position:0%
performance and I'll go through an
 

00:33:06.169 --> 00:33:07.720 align:start position:0%
performance and I'll go through an
example<00:33:06.559><c> a</c><00:33:06.590><c> little</c><00:33:06.740><c> bit</c><00:33:06.830><c> of</c><00:33:06.980><c> code</c><00:33:07.220><c> a</c><00:33:07.490><c> little</c>

00:33:07.720 --> 00:33:07.730 align:start position:0%
example a little bit of code a little
 

00:33:07.730 --> 00:33:09.520 align:start position:0%
example a little bit of code a little
bit<00:33:07.820><c> after</c><00:33:08.510><c> these</c><00:33:08.630><c> couple</c><00:33:08.960><c> slides</c><00:33:09.110><c> here</c><00:33:09.260><c> that</c>

00:33:09.520 --> 00:33:09.530 align:start position:0%
bit after these couple slides here that
 

00:33:09.530 --> 00:33:12.340 align:start position:0%
bit after these couple slides here that
shows<00:33:09.770><c> how</c><00:33:10.010><c> to</c><00:33:10.070><c> do</c><00:33:10.250><c> that</c><00:33:10.720><c> so</c><00:33:11.720><c> use</c><00:33:11.929><c> efficient</c>

00:33:12.340 --> 00:33:12.350 align:start position:0%
shows how to do that so use efficient
 

00:33:12.350 --> 00:33:13.919 align:start position:0%
shows how to do that so use efficient
primitives<00:33:12.740><c> is</c><00:33:12.919><c> the</c><00:33:12.980><c> next</c><00:33:13.190><c> thing</c><00:33:13.220><c> to</c><00:33:13.370><c> remember</c>

00:33:13.919 --> 00:33:13.929 align:start position:0%
primitives is the next thing to remember
 

00:33:13.929 --> 00:33:17.140 align:start position:0%
primitives is the next thing to remember
triangle<00:33:14.929><c> strips</c><00:33:15.200><c> are</c><00:33:15.590><c> obviously</c><00:33:15.980><c> the</c><00:33:16.280><c> a</c><00:33:16.549><c> good</c>

00:33:17.140 --> 00:33:17.150 align:start position:0%
triangle strips are obviously the a good
 

00:33:17.150 --> 00:33:18.549 align:start position:0%
triangle strips are obviously the a good
primitive<00:33:17.540><c> to</c><00:33:17.630><c> use</c><00:33:17.809><c> because</c><00:33:17.990><c> you</c><00:33:18.110><c> get</c><00:33:18.320><c> a</c><00:33:18.350><c> lot</c>

00:33:18.549 --> 00:33:18.559 align:start position:0%
primitive to use because you get a lot
 

00:33:18.559 --> 00:33:19.330 align:start position:0%
primitive to use because you get a lot
of<00:33:18.620><c> triangles</c>

00:33:19.330 --> 00:33:19.340 align:start position:0%
of triangles
 

00:33:19.340 --> 00:33:21.850 align:start position:0%
of triangles
pervert<00:33:19.879><c> text</c><00:33:20.240><c> if</c><00:33:21.019><c> you're</c><00:33:21.139><c> using</c><00:33:21.320><c> individual</c>

00:33:21.850 --> 00:33:21.860 align:start position:0%
pervert text if you're using individual
 

00:33:21.860 --> 00:33:23.860 align:start position:0%
pervert text if you're using individual
quads<00:33:22.100><c> or</c><00:33:22.340><c> individual</c><00:33:22.789><c> Verdean</c><00:33:23.509><c> dividual</c>

00:33:23.860 --> 00:33:23.870 align:start position:0%
quads or individual Verdean dividual
 

00:33:23.870 --> 00:33:25.690 align:start position:0%
quads or individual Verdean dividual
triangles<00:33:24.289><c> you're</c><00:33:24.889><c> gonna</c><00:33:25.009><c> get</c><00:33:25.190><c> about</c><00:33:25.399><c> three</c>

00:33:25.690 --> 00:33:25.700 align:start position:0%
triangles you're gonna get about three
 

00:33:25.700 --> 00:33:27.279 align:start position:0%
triangles you're gonna get about three
times<00:33:26.059><c> the</c><00:33:26.330><c> amount</c><00:33:26.450><c> of</c><00:33:26.539><c> vertex</c><00:33:26.840><c> data</c><00:33:26.990><c> going</c>

00:33:27.279 --> 00:33:27.289 align:start position:0%
times the amount of vertex data going
 

00:33:27.289 --> 00:33:29.769 align:start position:0%
times the amount of vertex data going
through<00:33:27.440><c> the</c><00:33:27.499><c> system</c><00:33:27.830><c> and</c><00:33:28.370><c> it</c><00:33:28.999><c> will</c><00:33:29.269><c> hurt</c><00:33:29.629><c> your</c>

00:33:29.769 --> 00:33:29.779 align:start position:0%
through the system and it will hurt your
 

00:33:29.779 --> 00:33:33.190 align:start position:0%
through the system and it will hurt your
performance<00:33:29.899><c> quite</c><00:33:30.350><c> a</c><00:33:30.379><c> bit</c><00:33:30.559><c> if</c><00:33:31.929><c> in</c><00:33:32.929><c> some</c>

00:33:33.190 --> 00:33:33.200 align:start position:0%
performance quite a bit if in some
 

00:33:33.200 --> 00:33:37.180 align:start position:0%
performance quite a bit if in some
scenarios<00:33:33.350><c> where</c><00:33:33.620><c> you</c><00:33:33.919><c> are</c><00:33:34.100><c> cpu</c><00:33:34.669><c> limited</c><00:33:36.190><c> use</c>

00:33:37.180 --> 00:33:37.190 align:start position:0%
scenarios where you are cpu limited use
 

00:33:37.190 --> 00:33:40.749 align:start position:0%
scenarios where you are cpu limited use
vertex<00:33:37.519><c> arrays</c><00:33:37.789><c> so</c><00:33:38.059><c> vertex</c><00:33:38.659><c> raises</c><00:33:39.049><c> the</c><00:33:39.759><c> API</c>

00:33:40.749 --> 00:33:40.759 align:start position:0%
vertex arrays so vertex raises the API
 

00:33:40.759 --> 00:33:43.119 align:start position:0%
vertex arrays so vertex raises the API
for<00:33:40.879><c> passing</c><00:33:41.659><c> a</c><00:33:41.870><c> whole</c><00:33:42.289><c> strip</c><00:33:42.649><c> of</c><00:33:42.769><c> data</c><00:33:42.950><c> to</c>

00:33:43.119 --> 00:33:43.129 align:start position:0%
for passing a whole strip of data to
 

00:33:43.129 --> 00:33:45.580 align:start position:0%
for passing a whole strip of data to
OpenGL<00:33:43.340><c> once</c><00:33:43.669><c> so</c><00:33:44.419><c> it</c><00:33:44.570><c> has</c><00:33:45.110><c> the</c><00:33:45.230><c> benefit</c><00:33:45.559><c> of</c>

00:33:45.580 --> 00:33:45.590 align:start position:0%
OpenGL once so it has the benefit of
 

00:33:45.590 --> 00:33:48.549 align:start position:0%
OpenGL once so it has the benefit of
reducing<00:33:46.309><c> the</c><00:33:47.149><c> number</c><00:33:48.139><c> of</c><00:33:48.169><c> function</c><00:33:48.470><c> calls</c>

00:33:48.549 --> 00:33:48.559 align:start position:0%
reducing the number of function calls
 

00:33:48.559 --> 00:33:51.220 align:start position:0%
reducing the number of function calls
you're<00:33:48.769><c> making</c><00:33:49.330><c> so</c><00:33:50.330><c> you</c><00:33:50.389><c> you</c><00:33:50.749><c> save</c><00:33:51.019><c> right</c>

00:33:51.220 --> 00:33:51.230 align:start position:0%
you're making so you you save right
 

00:33:51.230 --> 00:33:52.629 align:start position:0%
you're making so you you save right
there<00:33:51.499><c> but</c><00:33:51.740><c> it</c><00:33:51.830><c> also</c><00:33:51.889><c> gives</c><00:33:52.129><c> OpenGL</c><00:33:52.549><c> the</c>

00:33:52.629 --> 00:33:52.639 align:start position:0%
there but it also gives OpenGL the
 

00:33:52.639 --> 00:33:54.399 align:start position:0%
there but it also gives OpenGL the
opportunity<00:33:53.179><c> to</c><00:33:53.450><c> optimize</c><00:33:53.809><c> how</c><00:33:54.110><c> the</c><00:33:54.169><c> data</c><00:33:54.379><c> is</c>

00:33:54.399 --> 00:33:54.409 align:start position:0%
opportunity to optimize how the data is
 

00:33:54.409 --> 00:33:58.509 align:start position:0%
opportunity to optimize how the data is
moving<00:33:54.679><c> into</c><00:33:54.919><c> the</c><00:33:55.129><c> stream</c><00:33:55.399><c> and</c><00:33:57.340><c> there</c><00:33:58.340><c> can</c><00:33:58.490><c> be</c>

00:33:58.509 --> 00:33:58.519 align:start position:0%
moving into the stream and there can be
 

00:33:58.519 --> 00:34:01.299 align:start position:0%
moving into the stream and there can be
a<00:33:58.580><c> big</c><00:33:58.759><c> win</c><00:33:58.940><c> there</c><00:33:59.230><c> so</c><00:34:00.230><c> the</c><00:34:00.919><c> other</c><00:34:01.039><c> thing</c><00:34:01.279><c> that</c>

00:34:01.299 --> 00:34:01.309 align:start position:0%
a big win there so the other thing that
 

00:34:01.309 --> 00:34:03.310 align:start position:0%
a big win there so the other thing that
you<00:34:01.549><c> can</c><00:34:01.669><c> use</c><00:34:01.879><c> in</c><00:34:02.149><c> conjunction</c><00:34:02.539><c> with</c><00:34:02.840><c> vertex</c>

00:34:03.310 --> 00:34:03.320 align:start position:0%
you can use in conjunction with vertex
 

00:34:03.320 --> 00:34:06.430 align:start position:0%
you can use in conjunction with vertex
arrays<00:34:04.309><c> is</c><00:34:04.700><c> compiled</c><00:34:05.029><c> vertex</c><00:34:05.330><c> array</c><00:34:05.539><c> so</c>

00:34:06.430 --> 00:34:06.440 align:start position:0%
arrays is compiled vertex array so
 

00:34:06.440 --> 00:34:09.669 align:start position:0%
arrays is compiled vertex array so
compile<00:34:06.740><c> vertex</c><00:34:07.070><c> array</c><00:34:07.510><c> is</c><00:34:08.510><c> probably</c><00:34:09.319><c> one</c><00:34:09.649><c> of</c>

00:34:09.669 --> 00:34:09.679 align:start position:0%
compile vertex array is probably one of
 

00:34:09.679 --> 00:34:11.619 align:start position:0%
compile vertex array is probably one of
the<00:34:09.770><c> most</c><00:34:09.980><c> optimized</c><00:34:10.669><c> paths</c><00:34:10.970><c> and</c><00:34:11.149><c> OpenGL</c><00:34:11.480><c> for</c>

00:34:11.619 --> 00:34:11.629 align:start position:0%
the most optimized paths and OpenGL for
 

00:34:11.629 --> 00:34:12.639 align:start position:0%
the most optimized paths and OpenGL for
getting<00:34:11.839><c> data</c><00:34:12.020><c> through</c><00:34:12.260><c> the</c><00:34:12.319><c> system</c>

00:34:12.639 --> 00:34:12.649 align:start position:0%
getting data through the system
 

00:34:12.649 --> 00:34:16.569 align:start position:0%
getting data through the system
currently<00:34:12.859><c> and</c><00:34:14.409><c> it</c><00:34:15.409><c> has</c><00:34:15.619><c> the</c><00:34:15.889><c> benefit</c><00:34:16.550><c> of</c>

00:34:16.569 --> 00:34:16.579 align:start position:0%
currently and it has the benefit of
 

00:34:16.579 --> 00:34:18.909 align:start position:0%
currently and it has the benefit of
highly<00:34:16.970><c> optimized</c><00:34:17.389><c> assembly</c><00:34:18.169><c> code</c><00:34:18.319><c> runtime</c>

00:34:18.909 --> 00:34:18.919 align:start position:0%
highly optimized assembly code runtime
 

00:34:18.919 --> 00:34:21.970 align:start position:0%
highly optimized assembly code runtime
generated<00:34:19.339><c> assembly</c><00:34:19.609><c> code</c><00:34:20.409><c> the</c><00:34:21.409><c> deficit</c><00:34:21.859><c> is</c>

00:34:21.970 --> 00:34:21.980 align:start position:0%
generated assembly code the deficit is
 

00:34:21.980 --> 00:34:24.460 align:start position:0%
generated assembly code the deficit is
is<00:34:22.129><c> that</c><00:34:22.310><c> if</c><00:34:22.490><c> you</c><00:34:22.760><c> are</c><00:34:22.790><c> passing</c><00:34:23.450><c> small</c><00:34:24.169><c> amounts</c>

00:34:24.460 --> 00:34:24.470 align:start position:0%
is that if you are passing small amounts
 

00:34:24.470 --> 00:34:26.470 align:start position:0%
is that if you are passing small amounts
of<00:34:24.530><c> data</c><00:34:24.649><c> there's</c><00:34:24.950><c> a</c><00:34:25.040><c> little</c><00:34:25.250><c> bit</c><00:34:25.369><c> of</c><00:34:25.480><c> overhead</c>

00:34:26.470 --> 00:34:26.480 align:start position:0%
of data there's a little bit of overhead
 

00:34:26.480 --> 00:34:30.099 align:start position:0%
of data there's a little bit of overhead
of<00:34:26.720><c> logic</c><00:34:27.319><c> to</c><00:34:27.649><c> get</c><00:34:27.950><c> into</c><00:34:28.220><c> the</c><00:34:28.750><c> routines</c><00:34:29.750><c> so</c>

00:34:30.099 --> 00:34:30.109 align:start position:0%
of logic to get into the routines so
 

00:34:30.109 --> 00:34:30.970 align:start position:0%
of logic to get into the routines so
you're<00:34:30.290><c> not</c><00:34:30.349><c> going</c><00:34:30.470><c> to</c><00:34:30.589><c> want</c><00:34:30.710><c> to</c><00:34:30.800><c> call</c><00:34:30.950><c> a</c>

00:34:30.970 --> 00:34:30.980 align:start position:0%
you're not going to want to call a
 

00:34:30.980 --> 00:34:33.129 align:start position:0%
you're not going to want to call a
compiled<00:34:31.280><c> vertex</c><00:34:31.639><c> array</c><00:34:31.760><c> with</c><00:34:32.450><c> three</c>

00:34:33.129 --> 00:34:33.139 align:start position:0%
compiled vertex array with three
 

00:34:33.139 --> 00:34:35.290 align:start position:0%
compiled vertex array with three
vertices<00:34:33.319><c> because</c><00:34:34.220><c> you're</c><00:34:34.790><c> better</c><00:34:34.940><c> off</c><00:34:35.060><c> going</c>

00:34:35.290 --> 00:34:35.300 align:start position:0%
vertices because you're better off going
 

00:34:35.300 --> 00:34:37.450 align:start position:0%
vertices because you're better off going
to<00:34:35.419><c> GL</c><00:34:35.720><c> begin</c><00:34:36.020><c> end</c><00:34:36.230><c> because</c><00:34:36.919><c> that's</c><00:34:37.099><c> lower</c>

00:34:37.450 --> 00:34:37.460 align:start position:0%
to GL begin end because that's lower
 

00:34:37.460 --> 00:34:39.700 align:start position:0%
to GL begin end because that's lower
overhead<00:34:37.819><c> for</c><00:34:38.720><c> a</c><00:34:38.750><c> small</c><00:34:38.990><c> amount</c><00:34:39.109><c> of</c><00:34:39.319><c> data</c><00:34:39.440><c> so</c>

00:34:39.700 --> 00:34:39.710 align:start position:0%
overhead for a small amount of data so
 

00:34:39.710 --> 00:34:42.399 align:start position:0%
overhead for a small amount of data so
if<00:34:40.579><c> you</c><00:34:40.669><c> have</c><00:34:40.819><c> large</c><00:34:41.119><c> bolt</c><00:34:41.450><c> large</c><00:34:41.990><c> arrays</c><00:34:42.260><c> of</c>

00:34:42.399 --> 00:34:42.409 align:start position:0%
if you have large bolt large arrays of
 

00:34:42.409 --> 00:34:44.349 align:start position:0%
if you have large bolt large arrays of
data<00:34:42.560><c> let's</c><00:34:43.190><c> say</c><00:34:43.490><c> greater</c><00:34:43.730><c> than</c><00:34:43.849><c> sixteen</c>

00:34:44.349 --> 00:34:44.359 align:start position:0%
data let's say greater than sixteen
 

00:34:44.359 --> 00:34:46.149 align:start position:0%
data let's say greater than sixteen
sixteen<00:34:44.839><c> may</c><00:34:45.020><c> be</c><00:34:45.079><c> pushing</c><00:34:45.530><c> the</c><00:34:45.679><c> smaller</c><00:34:45.950><c> end</c>

00:34:46.149 --> 00:34:46.159 align:start position:0%
sixteen may be pushing the smaller end
 

00:34:46.159 --> 00:34:48.819 align:start position:0%
sixteen may be pushing the smaller end
of<00:34:46.250><c> it</c><00:34:46.339><c> but</c><00:34:46.460><c> say</c><00:34:46.760><c> greater</c><00:34:47.000><c> in</c><00:34:47.149><c> 16</c><00:34:47.569><c> vertices</c><00:34:48.169><c> per</c>

00:34:48.819 --> 00:34:48.829 align:start position:0%
of it but say greater in 16 vertices per
 

00:34:48.829 --> 00:34:49.930 align:start position:0%
of it but say greater in 16 vertices per
array

00:34:49.930 --> 00:34:49.940 align:start position:0%
array
 

00:34:49.940 --> 00:34:52.000 align:start position:0%
array
try<00:34:50.659><c> using</c><00:34:50.810><c> compiled</c><00:34:51.109><c> vertex</c><00:34:51.440><c> array</c><00:34:51.649><c> to</c>

00:34:52.000 --> 00:34:52.010 align:start position:0%
try using compiled vertex array to
 

00:34:52.010 --> 00:34:55.599 align:start position:0%
try using compiled vertex array to
probably<00:34:52.310><c> get</c><00:34:52.429><c> you</c><00:34:52.579><c> some</c><00:34:52.730><c> benefit</c><00:34:54.280><c> so</c><00:34:55.280><c> looking</c>

00:34:55.599 --> 00:34:55.609 align:start position:0%
probably get you some benefit so looking
 

00:34:55.609 --> 00:34:58.920 align:start position:0%
probably get you some benefit so looking
at<00:34:55.760><c> a</c><00:34:56.380><c> chart</c><00:34:57.380><c> here</c><00:34:57.440><c> that</c><00:34:57.800><c> shows</c><00:34:58.010><c> you</c>

00:34:58.920 --> 00:34:58.930 align:start position:0%
at a chart here that shows you
 

00:34:58.930 --> 00:35:03.040 align:start position:0%
at a chart here that shows you
primitives<00:34:59.930><c> along</c><00:35:00.770><c> the</c><00:35:00.980><c> x-axis</c><00:35:01.550><c> and</c><00:35:02.050><c> number</c>

00:35:03.040 --> 00:35:03.050 align:start position:0%
primitives along the x-axis and number
 

00:35:03.050 --> 00:35:04.540 align:start position:0%
primitives along the x-axis and number
of<00:35:03.079><c> triangles</c><00:35:03.920><c> that</c><00:35:03.950><c> you</c><00:35:04.040><c> can</c><00:35:04.160><c> render</c><00:35:04.339><c> per</c>

00:35:04.540 --> 00:35:04.550 align:start position:0%
of triangles that you can render per
 

00:35:04.550 --> 00:35:07.839 align:start position:0%
of triangles that you can render per
second<00:35:04.940><c> along</c><00:35:05.089><c> the</c><00:35:05.359><c> Y</c><00:35:05.510><c> you</c><00:35:05.810><c> can</c><00:35:06.530><c> see</c><00:35:06.680><c> that</c><00:35:06.890><c> that</c>

00:35:07.839 --> 00:35:07.849 align:start position:0%
second along the Y you can see that that
 

00:35:07.849 --> 00:35:09.819 align:start position:0%
second along the Y you can see that that
the<00:35:08.089><c> type</c><00:35:08.270><c> of</c><00:35:08.300><c> primitive</c><00:35:08.569><c> can</c><00:35:09.020><c> make</c><00:35:09.290><c> a</c><00:35:09.319><c> large</c>

00:35:09.819 --> 00:35:09.829 align:start position:0%
the type of primitive can make a large
 

00:35:09.829 --> 00:35:11.859 align:start position:0%
the type of primitive can make a large
impact<00:35:10.190><c> and</c><00:35:10.460><c> the</c><00:35:10.550><c> number</c><00:35:10.849><c> of</c><00:35:11.030><c> triangles</c><00:35:11.690><c> that</c>

00:35:11.859 --> 00:35:11.869 align:start position:0%
impact and the number of triangles that
 

00:35:11.869 --> 00:35:13.780 align:start position:0%
impact and the number of triangles that
you<00:35:11.960><c> can</c><00:35:12.140><c> send</c><00:35:12.319><c> through</c><00:35:12.410><c> the</c><00:35:12.530><c> system</c><00:35:12.859><c> so</c><00:35:13.579><c> down</c>

00:35:13.780 --> 00:35:13.790 align:start position:0%
you can send through the system so down
 

00:35:13.790 --> 00:35:16.180 align:start position:0%
you can send through the system so down
at<00:35:13.880><c> the</c><00:35:13.970><c> very</c><00:35:14.089><c> bottom</c><00:35:14.240><c> is</c><00:35:14.480><c> polygons</c><00:35:15.190><c> polygons</c>

00:35:16.180 --> 00:35:16.190 align:start position:0%
at the very bottom is polygons polygons
 

00:35:16.190 --> 00:35:19.300 align:start position:0%
at the very bottom is polygons polygons
is<00:35:16.369><c> a</c><00:35:16.839><c> most</c><00:35:17.839><c> rudimentary</c><00:35:18.109><c> way</c><00:35:18.380><c> to</c><00:35:18.530><c> send</c><00:35:18.800><c> data</c>

00:35:19.300 --> 00:35:19.310 align:start position:0%
is a most rudimentary way to send data
 

00:35:19.310 --> 00:35:24.370 align:start position:0%
is a most rudimentary way to send data
to<00:35:19.430><c> OpenGL</c><00:35:19.670><c> and</c><00:35:20.000><c> then</c><00:35:22.270><c> near</c><00:35:23.270><c> the</c><00:35:23.450><c> upper</c><00:35:24.020><c> end</c><00:35:24.290><c> of</c>

00:35:24.370 --> 00:35:24.380 align:start position:0%
to OpenGL and then near the upper end of
 

00:35:24.380 --> 00:35:25.780 align:start position:0%
to OpenGL and then near the upper end of
the<00:35:24.440><c> spectrum</c><00:35:24.800><c> as</c><00:35:24.950><c> triangle</c><00:35:25.339><c> strips</c><00:35:25.579><c> so</c>

00:35:25.780 --> 00:35:25.790 align:start position:0%
the spectrum as triangle strips so
 

00:35:25.790 --> 00:35:27.160 align:start position:0%
the spectrum as triangle strips so
triangle<00:35:26.150><c> strips</c><00:35:26.359><c> is</c><00:35:26.480><c> the</c><00:35:26.540><c> best</c><00:35:26.720><c> way</c><00:35:26.869><c> to</c><00:35:26.900><c> send</c>

00:35:27.160 --> 00:35:27.170 align:start position:0%
triangle strips is the best way to send
 

00:35:27.170 --> 00:35:29.890 align:start position:0%
triangle strips is the best way to send
data<00:35:27.290><c> through</c><00:35:27.589><c> the</c><00:35:28.130><c> begin</c><00:35:28.400><c> in</c><00:35:28.780><c> immediate</c><00:35:29.780><c> mode</c>

00:35:29.890 --> 00:35:29.900 align:start position:0%
data through the begin in immediate mode
 

00:35:29.900 --> 00:35:33.160 align:start position:0%
data through the begin in immediate mode
path<00:35:30.140><c> and</c><00:35:30.650><c> then</c><00:35:31.430><c> at</c><00:35:31.549><c> the</c><00:35:31.670><c> very</c><00:35:31.700><c> far</c><00:35:32.089><c> right</c><00:35:32.150><c> is</c>

00:35:33.160 --> 00:35:33.170 align:start position:0%
path and then at the very far right is
 

00:35:33.170 --> 00:35:35.349 align:start position:0%
path and then at the very far right is
compiled<00:35:33.680><c> vertex</c><00:35:34.040><c> array</c><00:35:34.250><c> so</c><00:35:34.819><c> you</c><00:35:34.880><c> can</c><00:35:35.180><c> see</c>

00:35:35.349 --> 00:35:35.359 align:start position:0%
compiled vertex array so you can see
 

00:35:35.359 --> 00:35:37.839 align:start position:0%
compiled vertex array so you can see
that<00:35:35.599><c> Kapaa</c><00:35:36.200><c> vertex</c><00:35:36.589><c> array</c><00:35:36.710><c> if</c><00:35:37.130><c> fed</c><00:35:37.400><c> correctly</c>

00:35:37.839 --> 00:35:37.849 align:start position:0%
that Kapaa vertex array if fed correctly
 

00:35:37.849 --> 00:35:40.359 align:start position:0%
that Kapaa vertex array if fed correctly
can<00:35:38.510><c> give</c><00:35:38.660><c> you</c><00:35:39.040><c> substantial</c><00:35:40.040><c> boost</c><00:35:40.160><c> in</c>

00:35:40.359 --> 00:35:40.369 align:start position:0%
can give you substantial boost in
 

00:35:40.369 --> 00:35:43.450 align:start position:0%
can give you substantial boost in
performance<00:35:40.780><c> now</c><00:35:41.780><c> the</c><00:35:41.839><c> green</c><00:35:42.140><c> bar</c><00:35:42.380><c> shows</c><00:35:42.799><c> what</c>

00:35:43.450 --> 00:35:43.460 align:start position:0%
performance now the green bar shows what
 

00:35:43.460 --> 00:35:45.400 align:start position:0%
performance now the green bar shows what
you<00:35:43.549><c> can</c><00:35:43.700><c> do</c><00:35:43.760><c> on</c><00:35:43.790><c> a</c><00:35:43.910><c> g3</c><00:35:44.390><c> and</c><00:35:44.569><c> the</c><00:35:44.780><c> blue</c><00:35:44.960><c> and</c><00:35:45.200><c> the</c>

00:35:45.400 --> 00:35:45.410 align:start position:0%
you can do on a g3 and the blue and the
 

00:35:45.410 --> 00:35:49.599 align:start position:0%
you can do on a g3 and the blue and the
orange<00:35:45.589><c> bar</c><00:35:45.859><c> shows</c><00:35:46.099><c> you</c><00:35:46.250><c> on</c><00:35:46.400><c> a</c><00:35:46.430><c> g4</c><00:35:48.430><c> there's</c><00:35:49.430><c> not</c>

00:35:49.599 --> 00:35:49.609 align:start position:0%
orange bar shows you on a g4 there's not
 

00:35:49.609 --> 00:35:52.569 align:start position:0%
orange bar shows you on a g4 there's not
a<00:35:49.640><c> huge</c><00:35:49.880><c> difference</c><00:35:50.030><c> but</c><00:35:50.980><c> it</c><00:35:51.980><c> can</c><00:35:52.190><c> make</c><00:35:52.369><c> a</c><00:35:52.400><c> big</c>

00:35:52.569 --> 00:35:52.579 align:start position:0%
a huge difference but it can make a big
 

00:35:52.579 --> 00:35:54.280 align:start position:0%
a huge difference but it can make a big
difference<00:35:52.750><c> ultimately</c><00:35:53.750><c> in</c><00:35:54.170><c> your</c>

00:35:54.280 --> 00:35:54.290 align:start position:0%
difference ultimately in your
 

00:35:54.290 --> 00:35:57.819 align:start position:0%
difference ultimately in your
performance<00:35:55.630><c> and</c><00:35:56.630><c> that's</c><00:35:56.780><c> primarily</c><00:35:57.230><c> these</c>

00:35:57.819 --> 00:35:57.829 align:start position:0%
performance and that's primarily these
 

00:35:57.829 --> 00:35:59.920 align:start position:0%
performance and that's primarily these
numbers<00:35:58.339><c> are</c><00:35:58.430><c> actually</c><00:35:58.670><c> were</c><00:35:58.760><c> on</c><00:35:58.910><c> a</c><00:35:58.940><c> graphics</c>

00:35:59.920 --> 00:35:59.930 align:start position:0%
numbers are actually were on a graphics
 

00:35:59.930 --> 00:36:02.530 align:start position:0%
numbers are actually were on a graphics
card<00:36:00.140><c> that</c><00:36:00.200><c> we're</c><00:36:00.380><c> not</c><00:36:01.210><c> did</c><00:36:02.210><c> not</c><00:36:02.329><c> have</c>

00:36:02.530 --> 00:36:02.540 align:start position:0%
card that we're not did not have
 

00:36:02.540 --> 00:36:03.849 align:start position:0%
card that we're not did not have
transformer<00:36:03.109><c> lighting</c><00:36:03.380><c> on</c><00:36:03.470><c> the</c><00:36:03.530><c> graphics</c>

00:36:03.849 --> 00:36:03.859 align:start position:0%
transformer lighting on the graphics
 

00:36:03.859 --> 00:36:06.910 align:start position:0%
transformer lighting on the graphics
card<00:36:04.099><c> so</c><00:36:05.079><c> for</c><00:36:06.079><c> a</c><00:36:06.109><c> card</c><00:36:06.410><c> that</c><00:36:06.559><c> does</c><00:36:06.710><c> do</c>

00:36:06.910 --> 00:36:06.920 align:start position:0%
card so for a card that does do
 

00:36:06.920 --> 00:36:08.859 align:start position:0%
card so for a card that does do
transformer<00:36:07.369><c> lighting</c><00:36:07.730><c> it'll</c><00:36:08.480><c> make</c><00:36:08.569><c> less</c><00:36:08.750><c> of</c>

00:36:08.859 --> 00:36:08.869 align:start position:0%
transformer lighting it'll make less of
 

00:36:08.869 --> 00:36:14.170 align:start position:0%
transformer lighting it'll make less of
a<00:36:08.930><c> difference</c><00:36:09.200><c> if</c><00:36:09.410><c> you</c><00:36:09.559><c> have</c><00:36:09.829><c> a</c><00:36:09.859><c> g3</c><00:36:10.460><c> or</c><00:36:10.490><c> g4</c><00:36:13.180><c> okay</c>

00:36:14.170 --> 00:36:14.180 align:start position:0%
a difference if you have a g3 or g4 okay
 

00:36:14.180 --> 00:36:15.760 align:start position:0%
a difference if you have a g3 or g4 okay
so<00:36:14.450><c> looking</c><00:36:14.900><c> at</c><00:36:15.020><c> how</c><00:36:15.140><c> to</c><00:36:15.200><c> potentially</c>

00:36:15.760 --> 00:36:15.770 align:start position:0%
so looking at how to potentially
 

00:36:15.770 --> 00:36:18.430 align:start position:0%
so looking at how to potentially
optimize<00:36:16.430><c> OpenGL</c><00:36:16.960><c> I've</c><00:36:17.960><c> got</c><00:36:18.109><c> a</c><00:36:18.140><c> number</c><00:36:18.260><c> of</c>

00:36:18.430 --> 00:36:18.440 align:start position:0%
optimize OpenGL I've got a number of
 

00:36:18.440 --> 00:36:20.109 align:start position:0%
optimize OpenGL I've got a number of
slides<00:36:18.650><c> here</c><00:36:18.859><c> to</c><00:36:19.040><c> just</c><00:36:19.250><c> basically</c><00:36:19.880><c> walk</c>

00:36:20.109 --> 00:36:20.119 align:start position:0%
slides here to just basically walk
 

00:36:20.119 --> 00:36:21.400 align:start position:0%
slides here to just basically walk
through<00:36:20.510><c> the</c><00:36:20.630><c> process</c><00:36:21.049><c> that</c><00:36:21.079><c> every</c><00:36:21.319><c> one</c>

00:36:21.400 --> 00:36:21.410 align:start position:0%
through the process that every one
 

00:36:21.410 --> 00:36:22.839 align:start position:0%
through the process that every one
should<00:36:21.440><c> look</c><00:36:21.680><c> at</c><00:36:21.829><c> and</c><00:36:22.130><c> when</c><00:36:22.339><c> when</c><00:36:22.730><c> they're</c>

00:36:22.839 --> 00:36:22.849 align:start position:0%
should look at and when when they're
 

00:36:22.849 --> 00:36:24.670 align:start position:0%
should look at and when when they're
trying<00:36:23.270><c> to</c><00:36:23.359><c> figure</c><00:36:24.049><c> out</c><00:36:24.200><c> how</c><00:36:24.290><c> to</c><00:36:24.319><c> simplify</c>

00:36:24.670 --> 00:36:24.680 align:start position:0%
trying to figure out how to simplify
 

00:36:24.680 --> 00:36:27.160 align:start position:0%
trying to figure out how to simplify
their<00:36:25.040><c> code</c><00:36:25.280><c> and</c><00:36:25.549><c> how</c><00:36:25.640><c> to</c><00:36:25.930><c> make</c><00:36:26.930><c> it</c><00:36:27.049><c> more</c>

00:36:27.160 --> 00:36:27.170 align:start position:0%
their code and how to make it more
 

00:36:27.170 --> 00:36:30.940 align:start position:0%
their code and how to make it more
optimal<00:36:27.589><c> so</c><00:36:28.490><c> we</c><00:36:28.790><c> start</c><00:36:29.030><c> off</c><00:36:29.150><c> with</c><00:36:29.390><c> a</c><00:36:29.950><c> basic</c>

00:36:30.940 --> 00:36:30.950 align:start position:0%
optimal so we start off with a basic
 

00:36:30.950 --> 00:36:33.700 align:start position:0%
optimal so we start off with a basic
loop<00:36:31.250><c> that</c><00:36:31.640><c> is</c><00:36:31.910><c> going</c><00:36:32.359><c> through</c><00:36:32.660><c> setting</c><00:36:33.470><c> up</c><00:36:33.559><c> a</c>

00:36:33.700 --> 00:36:33.710 align:start position:0%
loop that is going through setting up a
 

00:36:33.710 --> 00:36:35.200 align:start position:0%
loop that is going through setting up a
smooth<00:36:33.950><c> shaded</c><00:36:34.280><c> color</c><00:36:34.460><c> mode</c><00:36:34.700><c> setting</c><00:36:35.059><c> up</c><00:36:35.150><c> a</c>

00:36:35.200 --> 00:36:35.210 align:start position:0%
smooth shaded color mode setting up a
 

00:36:35.210 --> 00:36:36.700 align:start position:0%
smooth shaded color mode setting up a
color<00:36:35.420><c> and</c><00:36:35.630><c> then</c><00:36:35.690><c> going</c><00:36:35.990><c> and</c><00:36:36.200><c> then</c><00:36:36.380><c> drawing</c><00:36:36.589><c> a</c>

00:36:36.700 --> 00:36:36.710 align:start position:0%
color and then going and then drawing a
 

00:36:36.710 --> 00:36:38.859 align:start position:0%
color and then going and then drawing a
triangle<00:36:36.950><c> so</c><00:36:37.849><c> we're</c><00:36:38.030><c> doing</c><00:36:38.119><c> this</c><00:36:38.329><c> every</c><00:36:38.660><c> time</c>

00:36:38.859 --> 00:36:38.869 align:start position:0%
triangle so we're doing this every time
 

00:36:38.869 --> 00:36:40.180 align:start position:0%
triangle so we're doing this every time
through<00:36:39.079><c> the</c><00:36:39.200><c> loop</c><00:36:39.319><c> so</c><00:36:39.650><c> we're</c><00:36:39.770><c> drawing</c><00:36:39.920><c> one</c>

00:36:40.180 --> 00:36:40.190 align:start position:0%
through the loop so we're drawing one
 

00:36:40.190 --> 00:36:42.039 align:start position:0%
through the loop so we're drawing one
triangle<00:36:40.549><c> we're</c><00:36:41.119><c> doing</c><00:36:41.270><c> a</c><00:36:41.329><c> state</c><00:36:41.540><c> change</c><00:36:41.750><c> per</c>

00:36:42.039 --> 00:36:42.049 align:start position:0%
triangle we're doing a state change per
 

00:36:42.049 --> 00:36:45.130 align:start position:0%
triangle we're doing a state change per
triangle<00:36:42.670><c> and</c><00:36:43.670><c> obviously</c><00:36:44.660><c> we're</c><00:36:44.839><c> not</c><00:36:44.990><c> going</c>

00:36:45.130 --> 00:36:45.140 align:start position:0%
triangle and obviously we're not going
 

00:36:45.140 --> 00:36:47.380 align:start position:0%
triangle and obviously we're not going
to<00:36:45.170><c> get</c><00:36:45.380><c> a</c><00:36:45.619><c> lot</c><00:36:46.160><c> of</c><00:36:46.309><c> data</c><00:36:46.910><c> through</c><00:36:47.240><c> this</c>

00:36:47.380 --> 00:36:47.390 align:start position:0%
to get a lot of data through this
 

00:36:47.390 --> 00:36:49.000 align:start position:0%
to get a lot of data through this
because<00:36:47.720><c> it</c><00:36:47.809><c> breaks</c><00:36:48.020><c> every</c><00:36:48.260><c> rule</c><00:36:48.410><c> we</c><00:36:48.440><c> have</c><00:36:48.740><c> and</c>

00:36:49.000 --> 00:36:49.010 align:start position:0%
because it breaks every rule we have and
 

00:36:49.010 --> 00:36:51.700 align:start position:0%
because it breaks every rule we have and
that<00:36:49.099><c> is</c><00:36:49.130><c> you're</c><00:36:50.059><c> giving</c><00:36:50.960><c> Steve</c><00:36:51.140><c> changes</c><00:36:51.530><c> and</c>

00:36:51.700 --> 00:36:51.710 align:start position:0%
that is you're giving Steve changes and
 

00:36:51.710 --> 00:36:53.289 align:start position:0%
that is you're giving Steve changes and
you're<00:36:51.799><c> not</c><00:36:51.950><c> passing</c><00:36:52.579><c> a</c><00:36:52.609><c> lot</c><00:36:52.700><c> of</c><00:36:52.760><c> data</c><00:36:53.000><c> per</c>

00:36:53.289 --> 00:36:53.299 align:start position:0%
you're not passing a lot of data per
 

00:36:53.299 --> 00:36:56.859 align:start position:0%
you're not passing a lot of data per
begin<00:36:53.599><c> end</c><00:36:55.210><c> so</c><00:36:56.210><c> the</c><00:36:56.329><c> first</c><00:36:56.480><c> thing</c><00:36:56.569><c> we</c><00:36:56.660><c> do</c><00:36:56.780><c> is</c>

00:36:56.859 --> 00:36:56.869 align:start position:0%
begin end so the first thing we do is
 

00:36:56.869 --> 00:36:58.809 align:start position:0%
begin end so the first thing we do is
remove<00:36:56.960><c> state</c><00:36:57.410><c> changes</c><00:36:57.710><c> out</c><00:36:57.829><c> of</c><00:36:57.950><c> the</c><00:36:58.040><c> loop</c><00:36:58.220><c> and</c>

00:36:58.809 --> 00:36:58.819 align:start position:0%
remove state changes out of the loop and
 

00:36:58.819 --> 00:37:02.440 align:start position:0%
remove state changes out of the loop and
that<00:36:59.390><c> will</c><00:36:59.599><c> obviously</c><00:37:00.230><c> give</c><00:37:01.160><c> you</c><00:37:01.400><c> the</c><00:37:02.089><c> benefit</c>

00:37:02.440 --> 00:37:02.450 align:start position:0%
that will obviously give you the benefit
 

00:37:02.450 --> 00:37:03.910 align:start position:0%
that will obviously give you the benefit
that<00:37:02.480><c> now</c><00:37:02.690><c> we're</c><00:37:02.869><c> we're</c><00:37:03.290><c> passing</c><00:37:03.740><c> a</c><00:37:03.770><c> lot</c><00:37:03.859><c> of</c>

00:37:03.910 --> 00:37:03.920 align:start position:0%
that now we're we're passing a lot of
 

00:37:03.920 --> 00:37:05.680 align:start position:0%
that now we're we're passing a lot of
data<00:37:04.130><c> we're</c><00:37:04.339><c> not</c><00:37:04.430><c> changing</c><00:37:04.640><c> the</c><00:37:04.910><c> state</c><00:37:05.510><c> and</c>

00:37:05.680 --> 00:37:05.690 align:start position:0%
data we're not changing the state and
 

00:37:05.690 --> 00:37:06.880 align:start position:0%
data we're not changing the state and
we're<00:37:05.839><c> not</c><00:37:05.930><c> causing</c><00:37:06.230><c> global</c><00:37:06.290><c> jail</c><00:37:06.530><c> to</c><00:37:06.650><c> have</c><00:37:06.770><c> to</c>

00:37:06.880 --> 00:37:06.890 align:start position:0%
we're not causing global jail to have to
 

00:37:06.890 --> 00:37:09.940 align:start position:0%
we're not causing global jail to have to
do<00:37:06.980><c> a</c><00:37:07.010><c> lot</c><00:37:07.220><c> of</c><00:37:07.250><c> state</c><00:37:07.790><c> management</c><00:37:08.089><c> below</c><00:37:08.950><c> but</c>

00:37:09.940 --> 00:37:09.950 align:start position:0%
do a lot of state management below but
 

00:37:09.950 --> 00:37:12.490 align:start position:0%
do a lot of state management below but
we<00:37:09.980><c> still</c><00:37:10.369><c> haven't</c><00:37:10.900><c> pulled</c><00:37:11.900><c> any</c><00:37:12.079><c> you</c><00:37:12.380><c> know</c>

00:37:12.490 --> 00:37:12.500 align:start position:0%
we still haven't pulled any you know
 

00:37:12.500 --> 00:37:14.109 align:start position:0%
we still haven't pulled any you know
done<00:37:12.859><c> in</c><00:37:12.980><c> the</c><00:37:13.040><c> optimizations</c><00:37:13.609><c> with</c><00:37:13.790><c> how</c><00:37:13.970><c> we're</c>

00:37:14.109 --> 00:37:14.119 align:start position:0%
done in the optimizations with how we're
 

00:37:14.119 --> 00:37:16.720 align:start position:0%
done in the optimizations with how we're
passing<00:37:14.450><c> vertex</c><00:37:14.780><c> data</c><00:37:14.950><c> so</c><00:37:15.950><c> the</c><00:37:16.309><c> next</c><00:37:16.490><c> thing</c><00:37:16.640><c> we</c>

00:37:16.720 --> 00:37:16.730 align:start position:0%
passing vertex data so the next thing we
 

00:37:16.730 --> 00:37:20.200 align:start position:0%
passing vertex data so the next thing we
do<00:37:16.849><c> then</c><00:37:17.089><c> is</c><00:37:18.160><c> well</c><00:37:19.160><c> actually</c><00:37:19.520><c> we</c><00:37:19.760><c> simplify</c><00:37:20.150><c> the</c>

00:37:20.200 --> 00:37:20.210 align:start position:0%
do then is well actually we simplify the
 

00:37:20.210 --> 00:37:22.480 align:start position:0%
do then is well actually we simplify the
state<00:37:20.450><c> and</c><00:37:21.319><c> we</c><00:37:21.470><c> simplify</c><00:37:21.829><c> by</c><00:37:21.859><c> just</c><00:37:22.220><c> going</c><00:37:22.369><c> to</c><00:37:22.430><c> a</c>

00:37:22.480 --> 00:37:22.490 align:start position:0%
state and we simplify by just going to a
 

00:37:22.490 --> 00:37:23.740 align:start position:0%
state and we simplify by just going to a
flat<00:37:22.700><c> shaded</c><00:37:23.030><c> so</c><00:37:23.180><c> we</c><00:37:23.299><c> notice</c><00:37:23.510><c> that</c><00:37:23.569><c> we're</c><00:37:23.690><c> not</c>

00:37:23.740 --> 00:37:23.750 align:start position:0%
flat shaded so we notice that we're not
 

00:37:23.750 --> 00:37:26.559 align:start position:0%
flat shaded so we notice that we're not
passing<00:37:24.109><c> a</c><00:37:24.200><c> color</c><00:37:24.920><c> per</c><00:37:25.099><c> vertex</c><00:37:25.250><c> meaning</c><00:37:26.150><c> the</c>

00:37:26.559 --> 00:37:26.569 align:start position:0%
passing a color per vertex meaning the
 

00:37:26.569 --> 00:37:29.020 align:start position:0%
passing a color per vertex meaning the
colors<00:37:26.869><c> flat</c><00:37:27.170><c> shaded</c><00:37:27.559><c> triangles</c><00:37:28.339><c> so</c><00:37:28.880><c> we're</c>

00:37:29.020 --> 00:37:29.030 align:start position:0%
colors flat shaded triangles so we're
 

00:37:29.030 --> 00:37:31.809 align:start position:0%
colors flat shaded triangles so we're
gonna<00:37:29.150><c> change</c><00:37:29.420><c> that</c><00:37:29.569><c> to</c><00:37:29.690><c> flatten</c><00:37:30.609><c> but</c><00:37:31.609><c> then</c><00:37:31.730><c> we</c>

00:37:31.809 --> 00:37:31.819 align:start position:0%
gonna change that to flatten but then we
 

00:37:31.819 --> 00:37:33.460 align:start position:0%
gonna change that to flatten but then we
pull<00:37:31.970><c> the</c><00:37:32.059><c> triangles</c><00:37:32.420><c> out</c><00:37:32.510><c> of</c><00:37:32.630><c> the</c><00:37:32.690><c> loop</c><00:37:32.869><c> and</c>

00:37:33.460 --> 00:37:33.470 align:start position:0%
pull the triangles out of the loop and
 

00:37:33.470 --> 00:37:36.370 align:start position:0%
pull the triangles out of the loop and
that's<00:37:34.040><c> an</c><00:37:34.130><c> attempt</c><00:37:34.430><c> to</c><00:37:35.049><c> maximize</c><00:37:36.049><c> the</c><00:37:36.200><c> amount</c>

00:37:36.370 --> 00:37:36.380 align:start position:0%
that's an attempt to maximize the amount
 

00:37:36.380 --> 00:37:38.980 align:start position:0%
that's an attempt to maximize the amount
of<00:37:36.410><c> data</c><00:37:36.589><c> per</c><00:37:36.799><c> begin</c><00:37:37.490><c> end</c><00:37:37.670><c> and</c><00:37:38.420><c> by</c><00:37:38.630><c> doing</c><00:37:38.869><c> this</c>

00:37:38.980 --> 00:37:38.990 align:start position:0%
of data per begin end and by doing this
 

00:37:38.990 --> 00:37:42.099 align:start position:0%
of data per begin end and by doing this
we<00:37:39.260><c> can</c><00:37:39.290><c> increase</c><00:37:40.280><c> the</c><00:37:40.720><c> performance</c><00:37:41.720><c> by</c><00:37:41.839><c> quite</c>

00:37:42.099 --> 00:37:42.109 align:start position:0%
we can increase the performance by quite
 

00:37:42.109 --> 00:37:44.170 align:start position:0%
we can increase the performance by quite
a<00:37:42.140><c> bit</c><00:37:42.230><c> and</c><00:37:42.530><c> in</c><00:37:43.490><c> fact</c><00:37:43.640><c> after</c><00:37:43.819><c> this</c><00:37:44.030><c> I</c><00:37:44.150><c> have</c>

00:37:44.170 --> 00:37:44.180 align:start position:0%
a bit and in fact after this I have
 

00:37:44.180 --> 00:37:45.520 align:start position:0%
a bit and in fact after this I have
another<00:37:44.420><c> demonstration</c><00:37:44.630><c> to</c><00:37:44.960><c> show</c><00:37:45.020><c> you</c><00:37:45.170><c> the</c>

00:37:45.520 --> 00:37:45.530 align:start position:0%
another demonstration to show you the
 

00:37:45.530 --> 00:37:46.810 align:start position:0%
another demonstration to show you the
effect<00:37:45.799><c> of</c><00:37:45.950><c> that</c>

00:37:46.810 --> 00:37:46.820 align:start position:0%
effect of that
 

00:37:46.820 --> 00:37:48.400 align:start position:0%
effect of that
it<00:37:46.970><c> can</c><00:37:47.090><c> be</c><00:37:47.150><c> pretty</c><00:37:47.300><c> dramatic</c><00:37:47.450><c> just</c><00:37:48.200><c> doing</c>

00:37:48.400 --> 00:37:48.410 align:start position:0%
it can be pretty dramatic just doing
 

00:37:48.410 --> 00:37:52.890 align:start position:0%
it can be pretty dramatic just doing
that<00:37:48.560><c> step</c><00:37:48.830><c> alone</c><00:37:50.500><c> then</c><00:37:51.500><c> what</c><00:37:51.650><c> we</c><00:37:51.740><c> do</c><00:37:51.890><c> is</c><00:37:52.100><c> we</c>

00:37:52.890 --> 00:37:52.900 align:start position:0%
that step alone then what we do is we
 

00:37:52.900 --> 00:37:56.200 align:start position:0%
that step alone then what we do is we
try<00:37:53.900><c> to</c><00:37:53.930><c> simplify</c><00:37:54.350><c> the</c><00:37:54.760><c> API</c><00:37:55.760><c> that</c><00:37:56.060><c> we're</c>

00:37:56.200 --> 00:37:56.210 align:start position:0%
try to simplify the API that we're
 

00:37:56.210 --> 00:37:58.510 align:start position:0%
try to simplify the API that we're
utilizing<00:37:56.800><c> instead</c><00:37:57.800><c> of</c><00:37:57.890><c> passing</c><00:37:58.280><c> all</c><00:37:58.400><c> the</c>

00:37:58.510 --> 00:37:58.520 align:start position:0%
utilizing instead of passing all the
 

00:37:58.520 --> 00:38:00.130 align:start position:0%
utilizing instead of passing all the
data<00:37:58.670><c> through</c><00:37:58.850><c> registers</c><00:37:59.210><c> we</c><00:37:59.390><c> pass</c><00:37:59.600><c> a</c><00:37:59.810><c> vertex</c>

00:38:00.130 --> 00:38:00.140 align:start position:0%
data through registers we pass a vertex
 

00:38:00.140 --> 00:38:02.620 align:start position:0%
data through registers we pass a vertex
a<00:38:00.410><c> pointer</c><00:38:01.370><c> to</c><00:38:01.400><c> the</c><00:38:01.610><c> data</c><00:38:01.790><c> and</c><00:38:02.060><c> it</c><00:38:02.450><c> allows</c>

00:38:02.620 --> 00:38:02.630 align:start position:0%
a pointer to the data and it allows
 

00:38:02.630 --> 00:38:04.390 align:start position:0%
a pointer to the data and it allows
OpenGL<00:38:03.110><c> to</c><00:38:03.290><c> potentially</c><00:38:03.710><c> optimize</c><00:38:04.070><c> how</c><00:38:04.250><c> it's</c>

00:38:04.390 --> 00:38:04.400 align:start position:0%
OpenGL to potentially optimize how it's
 

00:38:04.400 --> 00:38:06.370 align:start position:0%
OpenGL to potentially optimize how it's
copying<00:38:04.760><c> the</c><00:38:04.880><c> data</c><00:38:05.030><c> you're</c><00:38:05.960><c> not</c><00:38:06.080><c> doing</c><00:38:06.290><c> a</c><00:38:06.350><c> lot</c>

00:38:06.370 --> 00:38:06.380 align:start position:0%
copying the data you're not doing a lot
 

00:38:06.380 --> 00:38:08.770 align:start position:0%
copying the data you're not doing a lot
of<00:38:06.500><c> register</c><00:38:06.890><c> setup</c><00:38:07.390><c> to</c><00:38:08.390><c> get</c><00:38:08.540><c> the</c><00:38:08.630><c> data</c>

00:38:08.770 --> 00:38:08.780 align:start position:0%
of register setup to get the data
 

00:38:08.780 --> 00:38:11.950 align:start position:0%
of register setup to get the data
through<00:38:10.060><c> then</c><00:38:11.060><c> we</c><00:38:11.210><c> take</c><00:38:11.450><c> the</c><00:38:11.600><c> step</c><00:38:11.810><c> of</c>

00:38:11.950 --> 00:38:11.960 align:start position:0%
through then we take the step of
 

00:38:11.960 --> 00:38:13.150 align:start position:0%
through then we take the step of
realizing<00:38:12.500><c> that</c><00:38:12.620><c> what</c><00:38:12.770><c> we're</c><00:38:12.890><c> actually</c>

00:38:13.150 --> 00:38:13.160 align:start position:0%
realizing that what we're actually
 

00:38:13.160 --> 00:38:16.120 align:start position:0%
realizing that what we're actually
passing<00:38:13.580><c> is</c><00:38:13.700><c> a</c><00:38:13.730><c> triangle</c><00:38:14.030><c> strip</c><00:38:14.330><c> so</c><00:38:15.200><c> we</c><00:38:15.530><c> we</c>

00:38:16.120 --> 00:38:16.130 align:start position:0%
passing is a triangle strip so we we
 

00:38:16.130 --> 00:38:17.770 align:start position:0%
passing is a triangle strip so we we
change<00:38:16.430><c> the</c><00:38:16.610><c> type</c><00:38:16.850><c> to</c><00:38:16.970><c> triangle</c><00:38:17.300><c> strip</c><00:38:17.510><c> and</c><00:38:17.690><c> we</c>

00:38:17.770 --> 00:38:17.780 align:start position:0%
change the type to triangle strip and we
 

00:38:17.780 --> 00:38:20.290 align:start position:0%
change the type to triangle strip and we
reorganize<00:38:18.410><c> how</c><00:38:18.620><c> we're</c><00:38:18.770><c> passing</c><00:38:19.130><c> it</c><00:38:19.250><c> and</c><00:38:19.520><c> so</c>

00:38:20.290 --> 00:38:20.300 align:start position:0%
reorganize how we're passing it and so
 

00:38:20.300 --> 00:38:21.700 align:start position:0%
reorganize how we're passing it and so
now<00:38:20.480><c> we've</c><00:38:20.660><c> just</c><00:38:20.990><c> reduced</c><00:38:21.320><c> the</c><00:38:21.440><c> amount</c><00:38:21.620><c> of</c>

00:38:21.700 --> 00:38:21.710 align:start position:0%
now we've just reduced the amount of
 

00:38:21.710 --> 00:38:23.740 align:start position:0%
now we've just reduced the amount of
data<00:38:21.860><c> going</c><00:38:22.070><c> to</c><00:38:22.280><c> open</c><00:38:22.370><c> jail</c><00:38:22.640><c> by</c><00:38:23.210><c> a</c><00:38:23.240><c> factor</c><00:38:23.690><c> of</c>

00:38:23.740 --> 00:38:23.750 align:start position:0%
data going to open jail by a factor of
 

00:38:23.750 --> 00:38:26.410 align:start position:0%
data going to open jail by a factor of
three<00:38:24.050><c> again</c><00:38:25.010><c> getting</c><00:38:25.640><c> a</c><00:38:25.790><c> big</c><00:38:25.970><c> performance</c>

00:38:26.410 --> 00:38:26.420 align:start position:0%
three again getting a big performance
 

00:38:26.420 --> 00:38:31.480 align:start position:0%
three again getting a big performance
boost<00:38:26.630><c> out</c><00:38:26.780><c> of</c><00:38:26.900><c> doing</c><00:38:27.080><c> a</c><00:38:27.140><c> step</c><00:38:27.320><c> like</c><00:38:27.500><c> that</c><00:38:30.490><c> and</c>

00:38:31.480 --> 00:38:31.490 align:start position:0%
boost out of doing a step like that and
 

00:38:31.490 --> 00:38:34.000 align:start position:0%
boost out of doing a step like that and
then<00:38:31.640><c> what</c><00:38:31.760><c> we</c><00:38:31.850><c> do</c><00:38:32.000><c> is</c><00:38:32.420><c> we</c><00:38:33.200><c> realize</c><00:38:33.470><c> that</c><00:38:33.500><c> we</c>

00:38:34.000 --> 00:38:34.010 align:start position:0%
then what we do is we realize that we
 

00:38:34.010 --> 00:38:35.560 align:start position:0%
then what we do is we realize that we
have<00:38:34.250><c> all</c><00:38:34.520><c> the</c><00:38:34.610><c> data</c><00:38:34.760><c> actually</c><00:38:35.150><c> in</c><00:38:35.210><c> an</c><00:38:35.300><c> array</c>

00:38:35.560 --> 00:38:35.570 align:start position:0%
have all the data actually in an array
 

00:38:35.570 --> 00:38:39.220 align:start position:0%
have all the data actually in an array
so<00:38:35.630><c> we</c><00:38:36.200><c> start</c><00:38:36.680><c> using</c><00:38:36.830><c> a</c><00:38:37.100><c> vertex</c><00:38:37.550><c> array</c><00:38:38.510><c> and</c>

00:38:39.220 --> 00:38:39.230 align:start position:0%
so we start using a vertex array and
 

00:38:39.230 --> 00:38:41.410 align:start position:0%
so we start using a vertex array and
using<00:38:40.070><c> draw</c><00:38:40.250><c> elements</c><00:38:40.670><c> to</c><00:38:40.760><c> draw</c><00:38:40.970><c> out</c><00:38:41.180><c> of</c><00:38:41.330><c> that</c>

00:38:41.410 --> 00:38:41.420 align:start position:0%
using draw elements to draw out of that
 

00:38:41.420 --> 00:38:43.540 align:start position:0%
using draw elements to draw out of that
array<00:38:41.690><c> so</c><00:38:42.440><c> now</c><00:38:42.530><c> we've</c><00:38:42.680><c> eliminated</c><00:38:42.920><c> the</c><00:38:43.400><c> loop</c>

00:38:43.540 --> 00:38:43.550 align:start position:0%
array so now we've eliminated the loop
 

00:38:43.550 --> 00:38:46.150 align:start position:0%
array so now we've eliminated the loop
all<00:38:43.760><c> together</c><00:38:43.910><c> and</c><00:38:44.570><c> we</c><00:38:45.350><c> are</c><00:38:45.470><c> simply</c><00:38:45.650><c> making</c>

00:38:46.150 --> 00:38:46.160 align:start position:0%
all together and we are simply making
 

00:38:46.160 --> 00:38:48.640 align:start position:0%
all together and we are simply making
five<00:38:47.150><c> function</c><00:38:47.570><c> calls</c><00:38:47.780><c> to</c><00:38:48.080><c> handle</c><00:38:48.440><c> all</c><00:38:48.530><c> the</c>

00:38:48.640 --> 00:38:48.650 align:start position:0%
five function calls to handle all the
 

00:38:48.650 --> 00:38:50.830 align:start position:0%
five function calls to handle all the
drawing<00:38:49.300><c> whereas</c><00:38:50.300><c> if</c><00:38:50.420><c> we</c><00:38:50.450><c> looked</c><00:38:50.660><c> at</c><00:38:50.780><c> the</c>

00:38:50.830 --> 00:38:50.840 align:start position:0%
drawing whereas if we looked at the
 

00:38:50.840 --> 00:38:52.180 align:start position:0%
drawing whereas if we looked at the
beginning<00:38:50.990><c> of</c><00:38:51.320><c> the</c><00:38:51.380><c> slides</c><00:38:51.620><c> we</c><00:38:51.800><c> were</c><00:38:51.980><c> probably</c>

00:38:52.180 --> 00:38:52.190 align:start position:0%
beginning of the slides we were probably
 

00:38:52.190 --> 00:38:55.690 align:start position:0%
beginning of the slides we were probably
making<00:38:52.430><c> hundreds</c><00:38:52.970><c> or</c><00:38:53.300><c> thousands</c><00:38:54.580><c> so</c><00:38:55.580><c> we've</c>

00:38:55.690 --> 00:38:55.700 align:start position:0%
making hundreds or thousands so we've
 

00:38:55.700 --> 00:38:56.800 align:start position:0%
making hundreds or thousands so we've
eliminated<00:38:55.910><c> all</c><00:38:56.270><c> the</c><00:38:56.330><c> function</c><00:38:56.660><c> call</c>

00:38:56.800 --> 00:38:56.810 align:start position:0%
eliminated all the function call
 

00:38:56.810 --> 00:38:58.840 align:start position:0%
eliminated all the function call
overhead<00:38:56.840><c> and</c><00:38:57.500><c> we</c><00:38:57.890><c> have</c><00:38:58.040><c> given</c><00:38:58.370><c> open</c><00:38:58.580><c> GL</c><00:38:58.790><c> an</c>

00:38:58.840 --> 00:38:58.850 align:start position:0%
overhead and we have given open GL an
 

00:38:58.850 --> 00:39:00.570 align:start position:0%
overhead and we have given open GL an
opportunity<00:38:59.360><c> to</c><00:38:59.570><c> try</c><00:38:59.810><c> to</c><00:38:59.840><c> optimize</c>

00:39:00.570 --> 00:39:00.580 align:start position:0%
opportunity to try to optimize
 

00:39:00.580 --> 00:39:02.860 align:start position:0%
opportunity to try to optimize
maternally<00:39:01.580><c> for</c><00:39:01.820><c> how</c><00:39:02.000><c> it's</c><00:39:02.210><c> going</c><00:39:02.420><c> to</c><00:39:02.570><c> want</c><00:39:02.810><c> to</c>

00:39:02.860 --> 00:39:02.870 align:start position:0%
maternally for how it's going to want to
 

00:39:02.870 --> 00:39:07.150 align:start position:0%
maternally for how it's going to want to
get<00:39:03.200><c> the</c><00:39:03.290><c> data</c><00:39:03.470><c> into</c><00:39:04.340><c> the</c><00:39:04.430><c> command</c><00:39:04.670><c> stream</c><00:39:06.160><c> so</c>

00:39:07.150 --> 00:39:07.160 align:start position:0%
get the data into the command stream so
 

00:39:07.160 --> 00:39:09.070 align:start position:0%
get the data into the command stream so
now<00:39:07.280><c> I</c><00:39:07.310><c> have</c><00:39:07.490><c> another</c><00:39:07.670><c> demo</c><00:39:07.970><c> showing</c><00:39:08.720><c> some</c><00:39:09.050><c> of</c>

00:39:09.070 --> 00:39:09.080 align:start position:0%
now I have another demo showing some of
 

00:39:09.080 --> 00:39:15.130 align:start position:0%
now I have another demo showing some of
that<00:39:09.200><c> effect</c><00:39:13.360><c> this</c><00:39:14.360><c> is</c><00:39:14.510><c> actually</c><00:39:14.780><c> a</c><00:39:14.810><c> pretty</c>

00:39:15.130 --> 00:39:15.140 align:start position:0%
that effect this is actually a pretty
 

00:39:15.140 --> 00:39:22.660 align:start position:0%
that effect this is actually a pretty
neat<00:39:15.350><c> demo</c><00:39:17.770><c> and</c><00:39:20.860><c> so</c><00:39:21.860><c> what</c><00:39:21.950><c> this</c><00:39:22.070><c> data</c><00:39:22.280><c> what</c>

00:39:22.660 --> 00:39:22.670 align:start position:0%
neat demo and so what this data what
 

00:39:22.670 --> 00:39:26.890 align:start position:0%
neat demo and so what this data what
what<00:39:22.940><c> this</c><00:39:23.090><c> demo</c><00:39:23.420><c> is</c><00:39:23.540><c> is</c><00:39:23.780><c> a</c><00:39:25.570><c> spherical</c><00:39:26.570><c> map</c>

00:39:26.890 --> 00:39:26.900 align:start position:0%
what this demo is is a spherical map
 

00:39:26.900 --> 00:39:29.620 align:start position:0%
what this demo is is a spherical map
mesh<00:39:27.770><c> that's</c><00:39:28.190><c> being</c><00:39:28.460><c> animated</c><00:39:28.820><c> with</c><00:39:29.150><c> a</c><00:39:29.180><c> wave</c>

00:39:29.620 --> 00:39:29.630 align:start position:0%
mesh that's being animated with a wave
 

00:39:29.630 --> 00:39:33.820 align:start position:0%
mesh that's being animated with a wave
motion<00:39:30.070><c> and</c><00:39:31.750><c> where</c><00:39:32.750><c> we</c><00:39:32.870><c> start</c><00:39:33.140><c> this</c><00:39:33.320><c> this</c>

00:39:33.820 --> 00:39:33.830 align:start position:0%
motion and where we start this this
 

00:39:33.830 --> 00:39:36.120 align:start position:0%
motion and where we start this this
application<00:39:34.580><c> right</c><00:39:34.670><c> now</c><00:39:34.730><c> is</c><00:39:35.030><c> in</c><00:39:35.180><c> a</c><00:39:35.270><c> mode</c><00:39:35.480><c> where</c>

00:39:36.120 --> 00:39:36.130 align:start position:0%
application right now is in a mode where
 

00:39:36.130 --> 00:39:38.620 align:start position:0%
application right now is in a mode where
the<00:39:37.130><c> application</c><00:39:37.610><c> hasn't</c><00:39:37.790><c> been</c><00:39:38.000><c> tuned</c><00:39:38.270><c> and</c>

00:39:38.620 --> 00:39:38.630 align:start position:0%
the application hasn't been tuned and
 

00:39:38.630 --> 00:39:40.720 align:start position:0%
the application hasn't been tuned and
the<00:39:39.380><c> rendering</c><00:39:39.560><c> hasn't</c><00:39:39.890><c> been</c><00:39:39.980><c> tuned</c><00:39:40.190><c> and</c><00:39:40.640><c> the</c>

00:39:40.720 --> 00:39:40.730 align:start position:0%
the rendering hasn't been tuned and the
 

00:39:40.730 --> 00:39:42.150 align:start position:0%
the rendering hasn't been tuned and the
way<00:39:40.820><c> we</c><00:39:40.940><c> can</c><00:39:41.060><c> tell</c><00:39:41.180><c> that</c><00:39:41.300><c> is</c><00:39:41.450><c> that</c><00:39:41.600><c> the</c><00:39:41.720><c> red</c><00:39:41.900><c> bar</c>

00:39:42.150 --> 00:39:42.160 align:start position:0%
way we can tell that is that the red bar
 

00:39:42.160 --> 00:39:44.650 align:start position:0%
way we can tell that is that the red bar
represents<00:39:43.160><c> the</c><00:39:43.220><c> the</c><00:39:43.730><c> time</c><00:39:44.090><c> being</c><00:39:44.330><c> spent</c><00:39:44.420><c> in</c>

00:39:44.650 --> 00:39:44.660 align:start position:0%
represents the the time being spent in
 

00:39:44.660 --> 00:39:46.510 align:start position:0%
represents the the time being spent in
the<00:39:44.750><c> application</c><00:39:45.230><c> the</c><00:39:45.830><c> green</c><00:39:46.010><c> bar</c><00:39:46.190><c> spent</c>

00:39:46.510 --> 00:39:46.520 align:start position:0%
the application the green bar spent
 

00:39:46.520 --> 00:39:48.240 align:start position:0%
the application the green bar spent
simulates<00:39:47.360><c> the</c><00:39:47.450><c> time</c><00:39:47.690><c> being</c><00:39:47.930><c> spent</c>

00:39:48.240 --> 00:39:48.250 align:start position:0%
simulates the time being spent
 

00:39:48.250 --> 00:39:51.280 align:start position:0%
simulates the time being spent
calculating<00:39:49.250><c> the</c><00:39:49.370><c> wave</c><00:39:49.520><c> motion</c><00:39:49.820><c> and</c><00:39:50.150><c> the</c><00:39:50.960><c> blue</c>

00:39:51.280 --> 00:39:51.290 align:start position:0%
calculating the wave motion and the blue
 

00:39:51.290 --> 00:39:53.800 align:start position:0%
calculating the wave motion and the blue
bar<00:39:51.470><c> is</c><00:39:51.500><c> the</c><00:39:51.740><c> time</c><00:39:51.920><c> being</c><00:39:52.160><c> spent</c><00:39:52.490><c> in</c><00:39:52.610><c> OpenGL</c><00:39:53.030><c> so</c>

00:39:53.800 --> 00:39:53.810 align:start position:0%
bar is the time being spent in OpenGL so
 

00:39:53.810 --> 00:39:55.810 align:start position:0%
bar is the time being spent in OpenGL so
we<00:39:53.900><c> can</c><00:39:54.050><c> see</c><00:39:54.170><c> where</c><00:39:54.380><c> we're</c><00:39:55.190><c> spending</c><00:39:55.310><c> quite</c><00:39:55.760><c> a</c>

00:39:55.810 --> 00:39:55.820 align:start position:0%
we can see where we're spending quite a
 

00:39:55.820 --> 00:39:57.610 align:start position:0%
we can see where we're spending quite a
bit<00:39:55.910><c> quite</c><00:39:56.540><c> a</c><00:39:56.600><c> bit</c><00:39:56.750><c> of</c><00:39:56.840><c> time</c><00:39:56.990><c> at</c><00:39:57.110><c> all</c><00:39:57.170><c> these</c><00:39:57.320><c> for</c>

00:39:57.610 --> 00:39:57.620 align:start position:0%
bit quite a bit of time at all these for
 

00:39:57.620 --> 00:39:59.020 align:start position:0%
bit quite a bit of time at all these for
spending<00:39:57.890><c> most</c><00:39:57.980><c> of</c><00:39:58.130><c> time</c><00:39:58.280><c> in</c><00:39:58.460><c> the</c><00:39:58.550><c> application</c>

00:39:59.020 --> 00:39:59.030 align:start position:0%
spending most of time in the application
 

00:39:59.030 --> 00:40:00.000 align:start position:0%
spending most of time in the application
so

00:40:00.000 --> 00:40:00.010 align:start position:0%
so
 

00:40:00.010 --> 00:40:01.890 align:start position:0%
so
a<00:40:00.070><c> little</c><00:40:00.640><c> experiment</c><00:40:01.180><c> that's</c><00:40:01.390><c> interesting</c>

00:40:01.890 --> 00:40:01.900 align:start position:0%
a little experiment that's interesting
 

00:40:01.900 --> 00:40:04.290 align:start position:0%
a little experiment that's interesting
to<00:40:02.020><c> run</c><00:40:02.200><c> as</c><00:40:02.920><c> if</c><00:40:03.130><c> I</c><00:40:03.310><c> take</c><00:40:03.610><c> this</c><00:40:03.790><c> application</c>

00:40:04.290 --> 00:40:04.300 align:start position:0%
to run as if I take this application
 

00:40:04.300 --> 00:40:06.390 align:start position:0%
to run as if I take this application
tuning<00:40:05.050><c> slider</c><00:40:05.320><c> and</c><00:40:05.530><c> I</c><00:40:05.620><c> bump</c><00:40:06.040><c> it</c><00:40:06.130><c> all</c><00:40:06.220><c> the</c><00:40:06.310><c> way</c>

00:40:06.390 --> 00:40:06.400 align:start position:0%
tuning slider and I bump it all the way
 

00:40:06.400 --> 00:40:08.010 align:start position:0%
tuning slider and I bump it all the way
up<00:40:06.550><c> so</c><00:40:06.790><c> that</c><00:40:06.910><c> the</c><00:40:07.120><c> application</c><00:40:07.510><c> becomes</c><00:40:07.720><c> tuned</c>

00:40:08.010 --> 00:40:08.020 align:start position:0%
up so that the application becomes tuned
 

00:40:08.020 --> 00:40:12.000 align:start position:0%
up so that the application becomes tuned
we<00:40:08.980><c> can</c><00:40:09.100><c> see</c><00:40:09.250><c> we</c><00:40:09.400><c> get</c><00:40:09.550><c> about</c><00:40:09.790><c> we</c><00:40:10.570><c> go</c><00:40:10.750><c> from</c><00:40:11.080><c> 20</c>

00:40:12.000 --> 00:40:12.010 align:start position:0%
we can see we get about we go from 20
 

00:40:12.010 --> 00:40:14.700 align:start position:0%
we can see we get about we go from 20
frames<00:40:12.220><c> per</c><00:40:12.370><c> second</c><00:40:12.670><c> almost</c><00:40:12.820><c> a</c><00:40:13.000><c> 40</c><00:40:13.590><c> so</c><00:40:14.590><c> we</c>

00:40:14.700 --> 00:40:14.710 align:start position:0%
frames per second almost a 40 so we
 

00:40:14.710 --> 00:40:16.200 align:start position:0%
frames per second almost a 40 so we
almost<00:40:14.860><c> double</c><00:40:15.250><c> our</c><00:40:15.340><c> frame</c><00:40:15.610><c> rate</c><00:40:15.760><c> by</c><00:40:15.910><c> doing</c>

00:40:16.200 --> 00:40:16.210 align:start position:0%
almost double our frame rate by doing
 

00:40:16.210 --> 00:40:19.590 align:start position:0%
almost double our frame rate by doing
that<00:40:17.490><c> ok</c><00:40:18.490><c> so</c><00:40:18.760><c> now</c><00:40:18.880><c> if</c><00:40:19.000><c> I</c><00:40:19.060><c> move</c><00:40:19.240><c> this</c><00:40:19.360><c> slider</c>

00:40:19.590 --> 00:40:19.600 align:start position:0%
that ok so now if I move this slider
 

00:40:19.600 --> 00:40:21.090 align:start position:0%
that ok so now if I move this slider
over<00:40:19.780><c> here</c><00:40:19.990><c> which</c><00:40:20.140><c> simulates</c><00:40:20.590><c> optimizing</c>

00:40:21.090 --> 00:40:21.100 align:start position:0%
over here which simulates optimizing
 

00:40:21.100 --> 00:40:22.770 align:start position:0%
over here which simulates optimizing
OpenGL<00:40:21.550><c> through</c><00:40:21.790><c> the</c><00:40:21.910><c> basic</c><00:40:22.270><c> steps</c><00:40:22.480><c> I</c><00:40:22.630><c> just</c>

00:40:22.770 --> 00:40:22.780 align:start position:0%
OpenGL through the basic steps I just
 

00:40:22.780 --> 00:40:24.750 align:start position:0%
OpenGL through the basic steps I just
went<00:40:22.930><c> through</c><00:40:22.990><c> the</c><00:40:23.800><c> first</c><00:40:24.010><c> one</c><00:40:24.190><c> is</c><00:40:24.280><c> individual</c>

00:40:24.750 --> 00:40:24.760 align:start position:0%
went through the first one is individual
 

00:40:24.760 --> 00:40:29.070 align:start position:0%
went through the first one is individual
triangles<00:40:25.320><c> the</c><00:40:26.320><c> second</c><00:40:26.770><c> one</c><00:40:26.890><c> here</c><00:40:27.690><c> has</c><00:40:28.690><c> now</c>

00:40:29.070 --> 00:40:29.080 align:start position:0%
triangles the second one here has now
 

00:40:29.080 --> 00:40:32.520 align:start position:0%
triangles the second one here has now
Pat<00:40:29.410><c> is</c><00:40:29.680><c> passing</c><00:40:30.600><c> moved</c><00:40:31.600><c> the</c><00:40:31.840><c> begin</c><00:40:32.350><c> end</c>

00:40:32.520 --> 00:40:32.530 align:start position:0%
Pat is passing moved the begin end
 

00:40:32.530 --> 00:40:34.470 align:start position:0%
Pat is passing moved the begin end
outside<00:40:32.950><c> the</c><00:40:33.160><c> loop</c><00:40:33.400><c> and</c><00:40:33.670><c> it's</c><00:40:34.000><c> passing</c><00:40:34.390><c> as</c>

00:40:34.470 --> 00:40:34.480 align:start position:0%
outside the loop and it's passing as
 

00:40:34.480 --> 00:40:36.810 align:start position:0%
outside the loop and it's passing as
much<00:40:34.630><c> data</c><00:40:34.810><c> as</c><00:40:34.870><c> possible</c><00:40:34.960><c> per</c><00:40:35.560><c> begin</c><00:40:35.830><c> end</c><00:40:35.980><c> so</c>

00:40:36.810 --> 00:40:36.820 align:start position:0%
much data as possible per begin end so
 

00:40:36.820 --> 00:40:39.870 align:start position:0%
much data as possible per begin end so
we<00:40:36.940><c> can</c><00:40:37.090><c> see</c><00:40:37.860><c> that</c><00:40:38.860><c> we</c><00:40:39.070><c> immediately</c><00:40:39.460><c> get</c><00:40:39.700><c> some</c>

00:40:39.870 --> 00:40:39.880 align:start position:0%
we can see that we immediately get some
 

00:40:39.880 --> 00:40:41.670 align:start position:0%
we can see that we immediately get some
performance<00:40:40.030><c> out</c><00:40:40.420><c> of</c><00:40:40.450><c> that</c><00:40:40.540><c> we</c><00:40:41.350><c> can</c><00:40:41.470><c> see</c><00:40:41.590><c> the</c>

00:40:41.670 --> 00:40:41.680 align:start position:0%
performance out of that we can see the
 

00:40:41.680 --> 00:40:44.810 align:start position:0%
performance out of that we can see the
blue<00:40:41.830><c> bars</c><00:40:42.070><c> changing</c><00:40:42.810><c> by</c><00:40:43.810><c> about</c><00:40:44.020><c> a</c><00:40:44.080><c> factor</c><00:40:44.290><c> 2</c>

00:40:44.810 --> 00:40:44.820 align:start position:0%
blue bars changing by about a factor 2
 

00:40:44.820 --> 00:40:47.910 align:start position:0%
blue bars changing by about a factor 2
but<00:40:45.820><c> OpenGL</c><00:40:46.180><c> performance</c><00:40:46.720><c> hasn't</c><00:40:47.050><c> changed</c><00:40:47.650><c> a</c>

00:40:47.910 --> 00:40:47.920 align:start position:0%
but OpenGL performance hasn't changed a
 

00:40:47.920 --> 00:40:51.030 align:start position:0%
but OpenGL performance hasn't changed a
whole<00:40:48.040><c> lot</c><00:40:48.220><c> it</c><00:40:48.520><c> only</c><00:40:48.700><c> went</c><00:40:48.880><c> up</c><00:40:49.170><c> about</c><00:40:50.170><c> 5</c><00:40:50.620><c> frames</c>

00:40:51.030 --> 00:40:51.040 align:start position:0%
whole lot it only went up about 5 frames
 

00:40:51.040 --> 00:40:52.830 align:start position:0%
whole lot it only went up about 5 frames
so<00:40:51.520><c> by</c><00:40:51.940><c> doing</c><00:40:52.000><c> that</c><00:40:52.210><c> step</c><00:40:52.480><c> we</c><00:40:52.570><c> didn't</c><00:40:52.720><c> get</c><00:40:52.780><c> a</c>

00:40:52.830 --> 00:40:52.840 align:start position:0%
so by doing that step we didn't get a
 

00:40:52.840 --> 00:40:54.810 align:start position:0%
so by doing that step we didn't get a
whole<00:40:52.960><c> lot</c><00:40:53.040><c> now</c><00:40:54.040><c> if</c><00:40:54.130><c> we</c><00:40:54.220><c> go</c><00:40:54.340><c> to</c><00:40:54.400><c> the</c><00:40:54.490><c> top</c><00:40:54.670><c> one</c>

00:40:54.810 --> 00:40:54.820 align:start position:0%
whole lot now if we go to the top one
 

00:40:54.820 --> 00:40:57.210 align:start position:0%
whole lot now if we go to the top one
that's<00:40:54.970><c> using</c><00:40:55.240><c> vertex</c><00:40:55.630><c> arrays</c><00:40:55.870><c> and</c><00:40:56.800><c> again</c><00:40:57.100><c> it</c>

00:40:57.210 --> 00:40:57.220 align:start position:0%
that's using vertex arrays and again it
 

00:40:57.220 --> 00:41:00.960 align:start position:0%
that's using vertex arrays and again it
didn't<00:40:57.430><c> change</c><00:40:57.580><c> a</c><00:40:57.670><c> whole</c><00:40:57.790><c> lot</c><00:40:57.850><c> so</c><00:40:59.970><c> the</c>

00:41:00.960 --> 00:41:00.970 align:start position:0%
didn't change a whole lot so the
 

00:41:00.970 --> 00:41:02.340 align:start position:0%
didn't change a whole lot so the
interesting<00:41:01.210><c> thing</c><00:41:01.390><c> to</c><00:41:01.630><c> learn</c><00:41:01.720><c> about</c><00:41:01.780><c> this</c><00:41:02.170><c> is</c>

00:41:02.340 --> 00:41:02.350 align:start position:0%
interesting thing to learn about this is
 

00:41:02.350 --> 00:41:03.900 align:start position:0%
interesting thing to learn about this is
that<00:41:02.500><c> if</c><00:41:02.590><c> we</c><00:41:02.680><c> take</c><00:41:03.040><c> the</c><00:41:03.220><c> slider</c><00:41:03.490><c> and</c><00:41:03.640><c> we</c><00:41:03.730><c> move</c>

00:41:03.900 --> 00:41:03.910 align:start position:0%
that if we take the slider and we move
 

00:41:03.910 --> 00:41:06.210 align:start position:0%
that if we take the slider and we move
it<00:41:04.030><c> up</c><00:41:04.180><c> for</c><00:41:04.540><c> the</c><00:41:04.600><c> application</c><00:41:05.110><c> now</c><00:41:05.890><c> we</c><00:41:05.950><c> realize</c>

00:41:06.210 --> 00:41:06.220 align:start position:0%
it up for the application now we realize
 

00:41:06.220 --> 00:41:11.090 align:start position:0%
it up for the application now we realize
that<00:41:06.400><c> we</c><00:41:07.060><c> have</c><00:41:07.090><c> gotten</c><00:41:08.640><c> 100%</c><00:41:09.640><c> improvement</c><00:41:09.850><c> on</c>

00:41:11.090 --> 00:41:11.100 align:start position:0%
that we have gotten 100% improvement on
 

00:41:11.100 --> 00:41:13.380 align:start position:0%
that we have gotten 100% improvement on
just<00:41:12.100><c> optimizing</c><00:41:12.670><c> the</c><00:41:12.730><c> applications</c><00:41:13.210><c> so</c>

00:41:13.380 --> 00:41:13.390 align:start position:0%
just optimizing the applications so
 

00:41:13.390 --> 00:41:15.950 align:start position:0%
just optimizing the applications so
optimizing<00:41:13.870><c> one</c><00:41:14.230><c> or</c><00:41:14.380><c> the</c><00:41:14.470><c> other</c><00:41:14.650><c> only</c><00:41:15.280><c> got</c><00:41:15.550><c> us</c>

00:41:15.950 --> 00:41:15.960 align:start position:0%
optimizing one or the other only got us
 

00:41:15.960 --> 00:41:19.200 align:start position:0%
optimizing one or the other only got us
a<00:41:16.960><c> marginal</c><00:41:17.800><c> improvement</c><00:41:18.220><c> to</c><00:41:18.370><c> 2x</c><00:41:19.150><c> improvement</c>

00:41:19.200 --> 00:41:19.210 align:start position:0%
a marginal improvement to 2x improvement
 

00:41:19.210 --> 00:41:23.130 align:start position:0%
a marginal improvement to 2x improvement
but<00:41:19.720><c> if</c><00:41:19.840><c> I</c><00:41:19.960><c> optimize</c><00:41:20.440><c> both</c><00:41:20.710><c> I</c><00:41:21.670><c> go</c><00:41:22.570><c> from</c><00:41:22.870><c> 20</c>

00:41:23.130 --> 00:41:23.140 align:start position:0%
but if I optimize both I go from 20
 

00:41:23.140 --> 00:41:25.110 align:start position:0%
but if I optimize both I go from 20
frames<00:41:23.350><c> a</c><00:41:23.440><c> second</c><00:41:23.680><c> to</c><00:41:23.740><c> 60</c><00:41:24.070><c> so</c><00:41:24.490><c> I</c><00:41:24.520><c> get</c><00:41:24.730><c> a</c><00:41:24.760><c> 3x</c>

00:41:25.110 --> 00:41:25.120 align:start position:0%
frames a second to 60 so I get a 3x
 

00:41:25.120 --> 00:41:27.060 align:start position:0%
frames a second to 60 so I get a 3x
improvement<00:41:25.540><c> so</c><00:41:26.050><c> the</c><00:41:26.230><c> combined</c><00:41:26.590><c> effect</c><00:41:26.920><c> is</c>

00:41:27.060 --> 00:41:27.070 align:start position:0%
improvement so the combined effect is
 

00:41:27.070 --> 00:41:30.000 align:start position:0%
improvement so the combined effect is
very<00:41:27.250><c> important</c><00:41:27.810><c> so</c><00:41:28.810><c> it's</c><00:41:28.960><c> important</c><00:41:29.350><c> to</c><00:41:29.530><c> to</c>

00:41:30.000 --> 00:41:30.010 align:start position:0%
very important so it's important to to
 

00:41:30.010 --> 00:41:33.180 align:start position:0%
very important so it's important to to
realize<00:41:30.310><c> that</c><00:41:31.380><c> where</c><00:41:32.380><c> the</c><00:41:32.470><c> x</c><00:41:32.650><c> means</c><00:41:32.890><c> spin</c><00:41:33.010><c> is</c>

00:41:33.180 --> 00:41:33.190 align:start position:0%
realize that where the x means spin is
 

00:41:33.190 --> 00:41:37.320 align:start position:0%
realize that where the x means spin is
is<00:41:34.200><c> can't</c><00:41:35.200><c> be</c><00:41:35.260><c> the</c><00:41:35.380><c> application</c><00:41:35.860><c> or</c><00:41:36.040><c> OpenGL</c><00:41:36.520><c> so</c>

00:41:37.320 --> 00:41:37.330 align:start position:0%
is can't be the application or OpenGL so
 

00:41:37.330 --> 00:41:39.060 align:start position:0%
is can't be the application or OpenGL so
the<00:41:37.420><c> second</c><00:41:37.720><c> thing</c><00:41:37.810><c> we</c><00:41:37.930><c> can</c><00:41:38.080><c> do</c><00:41:38.170><c> then</c><00:41:38.320><c> is</c><00:41:38.350><c> like</c>

00:41:39.060 --> 00:41:39.070 align:start position:0%
the second thing we can do then is like
 

00:41:39.070 --> 00:41:41.160 align:start position:0%
the second thing we can do then is like
we've<00:41:39.220><c> been</c><00:41:39.370><c> showing</c><00:41:39.610><c> here</c><00:41:39.910><c> is</c><00:41:40.570><c> to</c><00:41:40.870><c> spawn</c><00:41:41.140><c> a</c>

00:41:41.160 --> 00:41:41.170 align:start position:0%
we've been showing here is to spawn a
 

00:41:41.170 --> 00:41:43.950 align:start position:0%
we've been showing here is to spawn a
thread<00:41:41.500><c> now</c><00:41:42.490><c> if</c><00:41:42.550><c> we</c><00:41:42.670><c> spawn</c><00:41:42.880><c> a</c><00:41:42.910><c> thread</c><00:41:43.210><c> and</c><00:41:43.510><c> we</c>

00:41:43.950 --> 00:41:43.960 align:start position:0%
thread now if we spawn a thread and we
 

00:41:43.960 --> 00:41:47.100 align:start position:0%
thread now if we spawn a thread and we
move<00:41:44.200><c> the</c><00:41:44.500><c> green</c><00:41:44.710><c> bar</c><00:41:44.890><c> on</c><00:41:44.920><c> to</c><00:41:45.160><c> the</c><00:41:45.190><c> thread</c><00:41:46.110><c> we</c>

00:41:47.100 --> 00:41:47.110 align:start position:0%
move the green bar on to the thread we
 

00:41:47.110 --> 00:41:49.890 align:start position:0%
move the green bar on to the thread we
can<00:41:47.260><c> see</c><00:41:47.470><c> that</c><00:41:47.680><c> now</c><00:41:48.610><c> we</c><00:41:49.060><c> are</c><00:41:49.180><c> utilizing</c><00:41:49.360><c> both</c>

00:41:49.890 --> 00:41:49.900 align:start position:0%
can see that now we are utilizing both
 

00:41:49.900 --> 00:41:52.230 align:start position:0%
can see that now we are utilizing both
see<00:41:50.050><c> both</c><00:41:50.410><c> CPUs</c><00:41:50.770><c> in</c><00:41:50.800><c> this</c><00:41:50.980><c> this</c><00:41:51.310><c> machine</c><00:41:51.670><c> this</c>

00:41:52.230 --> 00:41:52.240 align:start position:0%
see both CPUs in this this machine this
 

00:41:52.240 --> 00:41:55.710 align:start position:0%
see both CPUs in this this machine this
machine<00:41:52.570><c> is</c><00:41:52.630><c> a</c><00:41:52.720><c> dual</c><00:41:52.930><c> 500</c><00:41:54.480><c> so</c><00:41:55.480><c> now</c><00:41:55.570><c> we're</c>

00:41:55.710 --> 00:41:55.720 align:start position:0%
machine is a dual 500 so now we're
 

00:41:55.720 --> 00:41:58.530 align:start position:0%
machine is a dual 500 so now we're
animating<00:41:56.050><c> at</c><00:41:56.290><c> 200</c><00:41:56.710><c> frames</c><00:41:56.860><c> a</c><00:41:56.950><c> second</c><00:41:57.310><c> and</c><00:41:57.580><c> we</c>

00:41:58.530 --> 00:41:58.540 align:start position:0%
animating at 200 frames a second and we
 

00:41:58.540 --> 00:42:01.050 align:start position:0%
animating at 200 frames a second and we
started<00:41:58.780><c> off</c><00:41:58.930><c> at</c><00:41:59.110><c> 20</c><00:41:59.490><c> so</c><00:42:00.490><c> we</c><00:42:00.580><c> got</c><00:42:00.700><c> a</c><00:42:00.730><c> 10x</c>

00:42:01.050 --> 00:42:01.060 align:start position:0%
started off at 20 so we got a 10x
 

00:42:01.060 --> 00:42:04.710 align:start position:0%
started off at 20 so we got a 10x
improvement<00:42:01.180><c> out</c><00:42:01.810><c> of</c><00:42:01.990><c> this</c><00:42:02.430><c> and</c><00:42:03.430><c> so</c><00:42:04.420><c> now</c><00:42:04.540><c> it's</c>

00:42:04.710 --> 00:42:04.720 align:start position:0%
improvement out of this and so now it's
 

00:42:04.720 --> 00:42:07.560 align:start position:0%
improvement out of this and so now it's
animating<00:42:05.340><c> silky-smooth</c><00:42:06.340><c> whereas</c><00:42:06.820><c> before</c><00:42:07.150><c> it</c>

00:42:07.560 --> 00:42:07.570 align:start position:0%
animating silky-smooth whereas before it
 

00:42:07.570 --> 00:42:09.450 align:start position:0%
animating silky-smooth whereas before it
was<00:42:07.750><c> barely</c><00:42:08.140><c> crawling</c><00:42:08.440><c> along</c><00:42:08.620><c> at</c><00:42:08.950><c> 20</c><00:42:09.160><c> frames</c><00:42:09.250><c> a</c>

00:42:09.450 --> 00:42:09.460 align:start position:0%
was barely crawling along at 20 frames a
 

00:42:09.460 --> 00:42:13.860 align:start position:0%
was barely crawling along at 20 frames a
second<00:42:11.400><c> so</c><00:42:12.400><c> this</c><00:42:12.670><c> is</c><00:42:12.790><c> a</c><00:42:12.820><c> good</c><00:42:12.910><c> example</c><00:42:13.210><c> of</c>

00:42:13.860 --> 00:42:13.870 align:start position:0%
second so this is a good example of
 

00:42:13.870 --> 00:42:17.100 align:start position:0%
second so this is a good example of
example<00:42:14.470><c> of</c><00:42:14.970><c> where</c><00:42:15.970><c> you</c><00:42:16.120><c> can</c><00:42:16.270><c> start</c><00:42:16.750><c> from</c><00:42:17.020><c> a</c>

00:42:17.100 --> 00:42:17.110 align:start position:0%
example of where you can start from a
 

00:42:17.110 --> 00:42:19.590 align:start position:0%
example of where you can start from a
pretty<00:42:17.470><c> dismal</c><00:42:17.920><c> performance</c><00:42:18.070><c> and</c><00:42:18.700><c> do</c><00:42:19.420><c> some</c>

00:42:19.590 --> 00:42:19.600 align:start position:0%
pretty dismal performance and do some
 

00:42:19.600 --> 00:42:22.770 align:start position:0%
pretty dismal performance and do some
simple<00:42:19.900><c> things</c><00:42:20.140><c> and</c><00:42:21.270><c> all</c><00:42:22.270><c> of</c><00:42:22.330><c> a</c><00:42:22.480><c> sudden</c><00:42:22.540><c> the</c>

00:42:22.770 --> 00:42:22.780 align:start position:0%
simple things and all of a sudden the
 

00:42:22.780 --> 00:42:24.780 align:start position:0%
simple things and all of a sudden the
whole<00:42:22.900><c> application</c><00:42:23.410><c> comes</c><00:42:23.560><c> alive</c><00:42:23.800><c> and</c><00:42:24.130><c> you're</c>

00:42:24.780 --> 00:42:24.790 align:start position:0%
whole application comes alive and you're
 

00:42:24.790 --> 00:42:26.910 align:start position:0%
whole application comes alive and you're
getting<00:42:24.970><c> you</c><00:42:25.480><c> know</c><00:42:25.510><c> 1.5</c><00:42:26.110><c> million</c><00:42:26.410><c> triangles</c><00:42:26.860><c> a</c>

00:42:26.910 --> 00:42:26.920 align:start position:0%
getting you know 1.5 million triangles a
 

00:42:26.920 --> 00:42:31.140 align:start position:0%
getting you know 1.5 million triangles a
second<00:42:27.310><c> and</c><00:42:28.920><c> able</c><00:42:29.920><c> to</c><00:42:30.070><c> deliver</c><00:42:30.640><c> a</c><00:42:30.760><c> much</c><00:42:30.910><c> better</c>

00:42:31.140 --> 00:42:31.150 align:start position:0%
second and able to deliver a much better
 

00:42:31.150 --> 00:42:47.070 align:start position:0%
second and able to deliver a much better
application<00:42:34.170><c> okay</c><00:42:44.310><c> so</c><00:42:45.510><c> okay</c><00:42:46.510><c> so</c><00:42:46.690><c> now</c><00:42:46.930><c> we've</c>

00:42:47.070 --> 00:42:47.080 align:start position:0%
application okay so okay so now we've
 

00:42:47.080 --> 00:42:49.320 align:start position:0%
application okay so okay so now we've
kind<00:42:47.290><c> of</c><00:42:47.350><c> talked</c><00:42:47.560><c> about</c><00:42:47.820><c> the</c><00:42:48.820><c> application</c>

00:42:49.320 --> 00:42:49.330 align:start position:0%
kind of talked about the application
 

00:42:49.330 --> 00:42:54.360 align:start position:0%
kind of talked about the application
setup<00:42:51.690><c> basically</c><00:42:52.690><c> how</c><00:42:53.110><c> to</c><00:42:53.140><c> drive</c><00:42:53.620><c> OpenGL</c><00:42:54.160><c> and</c>

00:42:54.360 --> 00:42:54.370 align:start position:0%
setup basically how to drive OpenGL and
 

00:42:54.370 --> 00:42:57.740 align:start position:0%
setup basically how to drive OpenGL and
all<00:42:54.850><c> those</c><00:42:55.000><c> things</c><00:42:55.210><c> are</c><00:42:55.330><c> fundamentally</c><00:42:55.540><c> CPU</c>

00:42:57.740 --> 00:42:57.750 align:start position:0%
all those things are fundamentally CPU
 

00:42:57.750 --> 00:43:00.600 align:start position:0%
all those things are fundamentally CPU
oriented<00:42:58.750><c> operations</c><00:42:59.500><c> and</c><00:42:59.890><c> that's</c><00:43:00.040><c> a</c><00:43:00.160><c> process</c>

00:43:00.600 --> 00:43:00.610 align:start position:0%
oriented operations and that's a process
 

00:43:00.610 --> 00:43:02.910 align:start position:0%
oriented operations and that's a process
of<00:43:00.880><c> optimizing</c><00:43:01.240><c> how</c><00:43:01.960><c> effectively</c><00:43:02.680><c> you're</c>

00:43:02.910 --> 00:43:02.920 align:start position:0%
of optimizing how effectively you're
 

00:43:02.920 --> 00:43:05.490 align:start position:0%
of optimizing how effectively you're
utilizing<00:43:03.070><c> the</c><00:43:03.520><c> CPU</c><00:43:04.200><c> so</c><00:43:05.200><c> we're</c><00:43:05.320><c> now</c><00:43:05.410><c> we're</c>

00:43:05.490 --> 00:43:05.500 align:start position:0%
utilizing the CPU so we're now we're
 

00:43:05.500 --> 00:43:06.690 align:start position:0%
utilizing the CPU so we're now we're
going<00:43:05.620><c> to</c><00:43:05.680><c> talk</c><00:43:05.830><c> about</c><00:43:05.980><c> per</c><00:43:06.220><c> fragment</c>

00:43:06.690 --> 00:43:06.700 align:start position:0%
going to talk about per fragment
 

00:43:06.700 --> 00:43:08.490 align:start position:0%
going to talk about per fragment
operations<00:43:07.150><c> a</c><00:43:07.210><c> little</c><00:43:07.390><c> bit</c><00:43:07.510><c> per-fragment</c>

00:43:08.490 --> 00:43:08.500 align:start position:0%
operations a little bit per-fragment
 

00:43:08.500 --> 00:43:10.200 align:start position:0%
operations a little bit per-fragment
operations<00:43:09.160><c> are</c><00:43:09.340><c> fundamentally</c><00:43:10.030><c> what</c><00:43:10.150><c> the</c>

00:43:10.200 --> 00:43:10.210 align:start position:0%
operations are fundamentally what the
 

00:43:10.210 --> 00:43:11.610 align:start position:0%
operations are fundamentally what the
graphics<00:43:10.540><c> card</c><00:43:10.750><c> is</c><00:43:10.810><c> going</c><00:43:10.930><c> to</c><00:43:10.990><c> have</c><00:43:11.080><c> to</c><00:43:11.140><c> do</c><00:43:11.290><c> to</c>

00:43:11.610 --> 00:43:11.620 align:start position:0%
graphics card is going to have to do to
 

00:43:11.620 --> 00:43:15.540 align:start position:0%
graphics card is going to have to do to
convert<00:43:12.520><c> your</c><00:43:12.700><c> data</c><00:43:12.940><c> from</c><00:43:13.870><c> a</c><00:43:13.900><c> triangle</c><00:43:14.530><c> to</c><00:43:14.980><c> the</c>

00:43:15.540 --> 00:43:15.550 align:start position:0%
convert your data from a triangle to the
 

00:43:15.550 --> 00:43:17.730 align:start position:0%
convert your data from a triangle to the
image<00:43:16.060><c> that</c><00:43:16.240><c> you</c><00:43:16.330><c> see</c><00:43:16.390><c> into</c><00:43:17.200><c> the</c><00:43:17.380><c> frame</c><00:43:17.560><c> buffer</c>

00:43:17.730 --> 00:43:17.740 align:start position:0%
image that you see into the frame buffer
 

00:43:17.740 --> 00:43:21.540 align:start position:0%
image that you see into the frame buffer
and<00:43:18.700><c> what</c><00:43:19.000><c> types</c><00:43:19.870><c> of</c><00:43:20.080><c> blending</c><00:43:20.980><c> or</c><00:43:21.130><c> texturing</c>

00:43:21.540 --> 00:43:21.550 align:start position:0%
and what types of blending or texturing
 

00:43:21.550 --> 00:43:23.280 align:start position:0%
and what types of blending or texturing
operations<00:43:22.000><c> need</c><00:43:22.180><c> to</c><00:43:22.240><c> be</c><00:43:22.330><c> done</c><00:43:22.480><c> and</c><00:43:22.720><c> there's</c><00:43:23.200><c> a</c>

00:43:23.280 --> 00:43:23.290 align:start position:0%
operations need to be done and there's a
 

00:43:23.290 --> 00:43:24.330 align:start position:0%
operations need to be done and there's a
few<00:43:23.440><c> things</c><00:43:23.590><c> just</c><00:43:23.680><c> to</c><00:43:23.830><c> keep</c><00:43:23.950><c> in</c><00:43:24.070><c> mind</c><00:43:24.190><c> while</c>

00:43:24.330 --> 00:43:24.340 align:start position:0%
few things just to keep in mind while
 

00:43:24.340 --> 00:43:26.130 align:start position:0%
few things just to keep in mind while
you're<00:43:24.400><c> doing</c><00:43:24.670><c> this</c><00:43:24.990><c> while</c><00:43:25.990><c> you're</c>

00:43:26.130 --> 00:43:26.140 align:start position:0%
you're doing this while you're
 

00:43:26.140 --> 00:43:30.420 align:start position:0%
you're doing this while you're
programming<00:43:27.300><c> one</c><00:43:28.300><c> is</c><00:43:28.450><c> to</c><00:43:28.720><c> utilize</c><00:43:29.430><c> multi</c>

00:43:30.420 --> 00:43:30.430 align:start position:0%
programming one is to utilize multi
 

00:43:30.430 --> 00:43:32.370 align:start position:0%
programming one is to utilize multi
texture<00:43:30.820><c> instead</c><00:43:31.330><c> of</c><00:43:31.510><c> multi</c><00:43:31.720><c> pass</c><00:43:31.900><c> so</c>

00:43:32.370 --> 00:43:32.380 align:start position:0%
texture instead of multi pass so
 

00:43:32.380 --> 00:43:34.770 align:start position:0%
texture instead of multi pass so
basically<00:43:33.370><c> all</c><00:43:33.490><c> the</c><00:43:33.790><c> graphics</c><00:43:34.150><c> cards</c><00:43:34.450><c> on</c><00:43:34.570><c> OS</c>

00:43:34.770 --> 00:43:34.780 align:start position:0%
basically all the graphics cards on OS
 

00:43:34.780 --> 00:43:38.210 align:start position:0%
basically all the graphics cards on OS
10<00:43:35.020><c> that</c><00:43:35.890><c> are</c><00:43:36.240><c> accelerated</c><00:43:37.240><c> on</c><00:43:37.360><c> OS</c><00:43:37.540><c> 10</c><00:43:37.720><c> today</c>

00:43:38.210 --> 00:43:38.220 align:start position:0%
10 that are accelerated on OS 10 today
 

00:43:38.220 --> 00:43:40.590 align:start position:0%
10 that are accelerated on OS 10 today
have<00:43:39.220><c> multi</c><00:43:39.580><c> texture</c><00:43:39.910><c> multiple</c><00:43:40.300><c> texture</c>

00:43:40.590 --> 00:43:40.600 align:start position:0%
have multi texture multiple texture
 

00:43:40.600 --> 00:43:42.030 align:start position:0%
have multi texture multiple texture
units<00:43:40.750><c> so</c><00:43:41.350><c> if</c><00:43:41.440><c> you</c><00:43:41.530><c> want</c><00:43:41.710><c> to</c><00:43:41.770><c> apply</c><00:43:41.950><c> two</c>

00:43:42.030 --> 00:43:42.040 align:start position:0%
units so if you want to apply two
 

00:43:42.040 --> 00:43:44.460 align:start position:0%
units so if you want to apply two
textures<00:43:42.700><c> let's</c><00:43:43.690><c> say</c><00:43:43.840><c> you</c><00:43:43.900><c> can</c><00:43:44.110><c> do</c><00:43:44.170><c> it</c><00:43:44.260><c> in</c><00:43:44.350><c> one</c>

00:43:44.460 --> 00:43:44.470 align:start position:0%
textures let's say you can do it in one
 

00:43:44.470 --> 00:43:47.010 align:start position:0%
textures let's say you can do it in one
pass<00:43:44.680><c> you</c><00:43:44.710><c> can</c><00:43:45.070><c> load</c><00:43:45.250><c> two</c><00:43:45.430><c> textures</c><00:43:46.020><c> one</c>

00:43:47.010 --> 00:43:47.020 align:start position:0%
pass you can load two textures one
 

00:43:47.020 --> 00:43:48.810 align:start position:0%
pass you can load two textures one
intersection<00:43:47.350><c> unit-01</c><00:43:47.650><c> detection</c><00:43:48.460><c> unit</c><00:43:48.640><c> one</c>

00:43:48.810 --> 00:43:48.820 align:start position:0%
intersection unit-01 detection unit one
 

00:43:48.820 --> 00:43:51.020 align:start position:0%
intersection unit-01 detection unit one
and<00:43:48.850><c> you</c><00:43:49.090><c> can</c><00:43:49.270><c> apply</c><00:43:49.720><c> both</c><00:43:50.020><c> textures</c>

00:43:51.020 --> 00:43:51.030 align:start position:0%
and you can apply both textures
 

00:43:51.030 --> 00:43:53.790 align:start position:0%
and you can apply both textures
simultaneously<00:43:52.030><c> and</c><00:43:52.750><c> this</c><00:43:52.810><c> actually</c><00:43:53.140><c> has</c><00:43:53.260><c> two</c>

00:43:53.790 --> 00:43:53.800 align:start position:0%
simultaneously and this actually has two
 

00:43:53.800 --> 00:43:56.010 align:start position:0%
simultaneously and this actually has two
benefits<00:43:54.190><c> one</c><00:43:54.430><c> is</c><00:43:54.550><c> that</c><00:43:54.730><c> again</c><00:43:55.210><c> lowers</c><00:43:55.900><c> the</c>

00:43:56.010 --> 00:43:56.020 align:start position:0%
benefits one is that again lowers the
 

00:43:56.020 --> 00:43:57.450 align:start position:0%
benefits one is that again lowers the
CPU<00:43:56.350><c> overhead</c><00:43:56.560><c> because</c><00:43:56.740><c> your</c><00:43:56.920><c> application</c><00:43:57.370><c> is</c>

00:43:57.450 --> 00:43:57.460 align:start position:0%
CPU overhead because your application is
 

00:43:57.460 --> 00:43:58.920 align:start position:0%
CPU overhead because your application is
not<00:43:57.580><c> having</c><00:43:57.850><c> to</c><00:43:58.060><c> loop</c><00:43:58.240><c> through</c><00:43:58.480><c> the</c><00:43:58.600><c> rendering</c>

00:43:58.920 --> 00:43:58.930 align:start position:0%
not having to loop through the rendering
 

00:43:58.930 --> 00:44:01.650 align:start position:0%
not having to loop through the rendering
twice<00:43:59.170><c> and</c><00:43:59.580><c> reissue</c><00:44:00.580><c> drawing</c><00:44:00.970><c> commands</c><00:44:01.270><c> to</c><00:44:01.510><c> do</c>

00:44:01.650 --> 00:44:01.660 align:start position:0%
twice and reissue drawing commands to do
 

00:44:01.660 --> 00:44:04.380 align:start position:0%
twice and reissue drawing commands to do
the<00:44:01.780><c> second</c><00:44:02.080><c> pass</c><00:44:02.550><c> but</c><00:44:03.550><c> the</c><00:44:03.640><c> second</c><00:44:03.940><c> one</c><00:44:04.030><c> is</c><00:44:04.060><c> is</c>

00:44:04.380 --> 00:44:04.390 align:start position:0%
the second pass but the second one is is
 

00:44:04.390 --> 00:44:06.720 align:start position:0%
the second pass but the second one is is
that<00:44:04.720><c> it</c><00:44:05.140><c> helps</c><00:44:05.290><c> the</c><00:44:05.440><c> graphics</c><00:44:05.770><c> card</c><00:44:06.010><c> optimize</c>

00:44:06.720 --> 00:44:06.730 align:start position:0%
that it helps the graphics card optimize
 

00:44:06.730 --> 00:44:09.840 align:start position:0%
that it helps the graphics card optimize
its<00:44:07.120><c> memory</c><00:44:07.420><c> traffic</c><00:44:07.800><c> because</c><00:44:08.800><c> you're</c><00:44:09.670><c> not</c>

00:44:09.840 --> 00:44:09.850 align:start position:0%
its memory traffic because you're not
 

00:44:09.850 --> 00:44:12.180 align:start position:0%
its memory traffic because you're not
writing<00:44:10.360><c> to</c><00:44:10.570><c> the</c><00:44:10.660><c> frame</c><00:44:10.870><c> buffer</c><00:44:11.080><c> on</c><00:44:11.410><c> one</c><00:44:11.950><c> pass</c>

00:44:12.180 --> 00:44:12.190 align:start position:0%
writing to the frame buffer on one pass
 

00:44:12.190 --> 00:44:14.220 align:start position:0%
writing to the frame buffer on one pass
and<00:44:12.520><c> then</c><00:44:12.880><c> having</c><00:44:13.180><c> to</c><00:44:13.450><c> come</c><00:44:13.690><c> back</c><00:44:13.720><c> on</c><00:44:13.960><c> a</c><00:44:14.020><c> second</c>

00:44:14.220 --> 00:44:14.230 align:start position:0%
and then having to come back on a second
 

00:44:14.230 --> 00:44:16.050 align:start position:0%
and then having to come back on a second
pass<00:44:14.350><c> or</c><00:44:14.500><c> write</c><00:44:14.710><c> the</c><00:44:14.830><c> pixel</c><00:44:15.100><c> again</c><00:44:15.310><c> instead</c>

00:44:16.050 --> 00:44:16.060 align:start position:0%
pass or write the pixel again instead
 

00:44:16.060 --> 00:44:17.850 align:start position:0%
pass or write the pixel again instead
you're<00:44:16.210><c> allowing</c><00:44:16.390><c> the</c><00:44:16.600><c> app</c><00:44:16.690><c> the</c><00:44:17.110><c> the</c><00:44:17.440><c> graphics</c>

00:44:17.850 --> 00:44:17.860 align:start position:0%
you're allowing the app the the graphics
 

00:44:17.860 --> 00:44:19.950 align:start position:0%
you're allowing the app the the graphics
card<00:44:18.100><c> to</c><00:44:18.280><c> read</c><00:44:18.910><c> to</c><00:44:19.150><c> text</c><00:44:19.480><c> tools</c><00:44:19.660><c> out</c><00:44:19.840><c> of</c><00:44:19.870><c> the</c>

00:44:19.950 --> 00:44:19.960 align:start position:0%
card to read to text tools out of the
 

00:44:19.960 --> 00:44:21.630 align:start position:0%
card to read to text tools out of the
texture<00:44:20.320><c> units</c><00:44:20.470><c> out</c><00:44:21.010><c> of</c><00:44:21.130><c> the</c><00:44:21.190><c> textures</c><00:44:21.490><c> you've</c>

00:44:21.630 --> 00:44:21.640 align:start position:0%
texture units out of the textures you've
 

00:44:21.640 --> 00:44:23.670 align:start position:0%
texture units out of the textures you've
defined<00:44:21.970><c> combined</c><00:44:22.840><c> them</c><00:44:23.050><c> and</c><00:44:23.200><c> write</c><00:44:23.350><c> it</c><00:44:23.470><c> once</c>

00:44:23.670 --> 00:44:23.680 align:start position:0%
defined combined them and write it once
 

00:44:23.680 --> 00:44:25.880 align:start position:0%
defined combined them and write it once
out<00:44:23.890><c> to</c><00:44:24.010><c> the</c><00:44:24.070><c> frame</c><00:44:24.250><c> buffer</c><00:44:24.430><c> so</c><00:44:25.210><c> it</c><00:44:25.330><c> lowers</c><00:44:25.630><c> the</c>

00:44:25.880 --> 00:44:25.890 align:start position:0%
out to the frame buffer so it lowers the
 

00:44:25.890 --> 00:44:27.359 align:start position:0%
out to the frame buffer so it lowers the
ultimate<00:44:26.890><c> band</c>

00:44:27.359 --> 00:44:27.369 align:start position:0%
ultimate band
 

00:44:27.369 --> 00:44:28.589 align:start position:0%
ultimate band
that<00:44:27.579><c> you're</c><00:44:27.670><c> consuming</c><00:44:27.940><c> on</c><00:44:28.180><c> the</c><00:44:28.240><c> graphics</c>

00:44:28.589 --> 00:44:28.599 align:start position:0%
that you're consuming on the graphics
 

00:44:28.599 --> 00:44:31.710 align:start position:0%
that you're consuming on the graphics
card<00:44:28.809><c> so</c><00:44:29.019><c> you</c><00:44:29.499><c> can</c><00:44:30.089><c> you</c><00:44:31.089><c> can</c><00:44:31.210><c> get</c><00:44:31.269><c> performance</c>

00:44:31.710 --> 00:44:31.720 align:start position:0%
card so you can you can get performance
 

00:44:31.720 --> 00:44:33.749 align:start position:0%
card so you can you can get performance
a<00:44:31.779><c> couple</c><00:44:32.019><c> ways</c><00:44:32.109><c> by</c><00:44:32.380><c> going</c><00:44:33.009><c> to</c><00:44:33.190><c> a</c><00:44:33.220><c> multi</c>

00:44:33.749 --> 00:44:33.759 align:start position:0%
a couple ways by going to a multi
 

00:44:33.759 --> 00:44:38.420 align:start position:0%
a couple ways by going to a multi
texture<00:44:34.029><c> instead</c><00:44:34.240><c> of</c><00:44:34.390><c> multi</c><00:44:34.599><c> pass</c><00:44:36.180><c> so</c><00:44:37.380><c> avoid</c>

00:44:38.420 --> 00:44:38.430 align:start position:0%
texture instead of multi pass so avoid
 

00:44:38.430 --> 00:44:41.069 align:start position:0%
texture instead of multi pass so avoid
when<00:44:39.430><c> possible</c><00:44:39.779><c> obviously</c><00:44:40.779><c> anything</c><00:44:40.930><c> I'm</c>

00:44:41.069 --> 00:44:41.079 align:start position:0%
when possible obviously anything I'm
 

00:44:41.079 --> 00:44:43.319 align:start position:0%
when possible obviously anything I'm
going<00:44:41.170><c> to</c><00:44:41.230><c> say</c><00:44:41.349><c> here</c><00:44:41.559><c> is</c><00:44:42.130><c> just</c><00:44:42.880><c> a</c><00:44:42.940><c> suggestion</c>

00:44:43.319 --> 00:44:43.329 align:start position:0%
going to say here is just a suggestion
 

00:44:43.329 --> 00:44:45.539 align:start position:0%
going to say here is just a suggestion
of<00:44:43.660><c> things</c><00:44:44.289><c> to</c><00:44:44.470><c> try</c><00:44:44.650><c> to</c><00:44:44.680><c> work</c><00:44:45.160><c> your</c><00:44:45.220><c> way</c><00:44:45.430><c> around</c>

00:44:45.539 --> 00:44:45.549 align:start position:0%
of things to try to work your way around
 

00:44:45.549 --> 00:44:47.279 align:start position:0%
of things to try to work your way around
and<00:44:46.029><c> sometimes</c><00:44:46.690><c> you're</c><00:44:46.839><c> looking</c><00:44:46.990><c> for</c><00:44:47.230><c> an</c>

00:44:47.279 --> 00:44:47.289 align:start position:0%
and sometimes you're looking for an
 

00:44:47.289 --> 00:44:48.180 align:start position:0%
and sometimes you're looking for an
effect<00:44:47.559><c> and</c><00:44:47.680><c> you</c><00:44:47.740><c> have</c><00:44:47.859><c> to</c><00:44:47.980><c> do</c><00:44:48.069><c> these</c>

00:44:48.180 --> 00:44:48.190 align:start position:0%
effect and you have to do these
 

00:44:48.190 --> 00:44:50.249 align:start position:0%
effect and you have to do these
operations<00:44:48.369><c> but</c><00:44:48.880><c> avoid</c><00:44:49.539><c> read-modify-write</c>

00:44:50.249 --> 00:44:50.259 align:start position:0%
operations but avoid read-modify-write
 

00:44:50.259 --> 00:44:52.829 align:start position:0%
operations but avoid read-modify-write
operations<00:44:51.220><c> on</c><00:44:51.519><c> the</c><00:44:51.759><c> frame</c><00:44:51.940><c> buffer</c><00:44:52.119><c> so</c>

00:44:52.829 --> 00:44:52.839 align:start position:0%
operations on the frame buffer so
 

00:44:52.839 --> 00:44:54.359 align:start position:0%
operations on the frame buffer so
read-modify-write<00:44:53.170><c> operations</c><00:44:54.130><c> are</c>

00:44:54.359 --> 00:44:54.369 align:start position:0%
read-modify-write operations are
 

00:44:54.369 --> 00:44:57.029 align:start position:0%
read-modify-write operations are
anything<00:44:54.970><c> that</c><00:44:55.329><c> will</c><00:44:55.509><c> requires</c><00:44:56.410><c> the</c><00:44:56.710><c> frame</c>

00:44:57.029 --> 00:44:57.039 align:start position:0%
anything that will requires the frame
 

00:44:57.039 --> 00:45:01.019 align:start position:0%
anything that will requires the frame
buffer<00:44:57.249><c> value</c><00:44:58.119><c> to</c><00:44:58.779><c> participate</c><00:44:59.680><c> in</c><00:44:59.890><c> the</c><00:45:00.160><c> value</c>

00:45:01.019 --> 00:45:01.029 align:start position:0%
buffer value to participate in the value
 

00:45:01.029 --> 00:45:04.589 align:start position:0%
buffer value to participate in the value
that<00:45:02.940><c> participated</c><00:45:03.940><c> in</c><00:45:03.999><c> the</c><00:45:04.089><c> color</c>

00:45:04.589 --> 00:45:04.599 align:start position:0%
that participated in the color
 

00:45:04.599 --> 00:45:07.769 align:start position:0%
that participated in the color
calculation<00:45:05.289><c> that</c><00:45:05.319><c> will</c><00:45:05.880><c> result</c><00:45:06.880><c> and</c><00:45:07.210><c> be</c>

00:45:07.769 --> 00:45:07.779 align:start position:0%
calculation that will result and be
 

00:45:07.779 --> 00:45:09.089 align:start position:0%
calculation that will result and be
finally<00:45:08.019><c> put</c><00:45:08.259><c> back</c><00:45:08.440><c> into</c><00:45:08.650><c> the</c><00:45:08.710><c> frame</c><00:45:08.920><c> buffer</c>

00:45:09.089 --> 00:45:09.099 align:start position:0%
finally put back into the frame buffer
 

00:45:09.099 --> 00:45:12.299 align:start position:0%
finally put back into the frame buffer
so<00:45:09.910><c> things</c><00:45:10.539><c> that</c><00:45:10.690><c> do</c><00:45:10.809><c> that</c><00:45:10.990><c> are</c><00:45:11.230><c> blending</c><00:45:12.009><c> so</c>

00:45:12.299 --> 00:45:12.309 align:start position:0%
so things that do that are blending so
 

00:45:12.309 --> 00:45:13.920 align:start position:0%
so things that do that are blending so
if<00:45:12.430><c> you're</c><00:45:12.549><c> blending</c><00:45:12.759><c> with</c><00:45:13.059><c> the</c><00:45:13.210><c> final</c>

00:45:13.920 --> 00:45:13.930 align:start position:0%
if you're blending with the final
 

00:45:13.930 --> 00:45:16.769 align:start position:0%
if you're blending with the final
destination<00:45:14.109><c> of</c><00:45:14.680><c> the</c><00:45:14.769><c> frame</c><00:45:14.980><c> buffer</c><00:45:15.779><c> it's</c>

00:45:16.769 --> 00:45:16.779 align:start position:0%
destination of the frame buffer it's
 

00:45:16.779 --> 00:45:18.059 align:start position:0%
destination of the frame buffer it's
gonna<00:45:16.900><c> have</c><00:45:17.049><c> to</c><00:45:17.109><c> read</c><00:45:17.259><c> the</c><00:45:17.380><c> frame</c><00:45:17.559><c> buffer</c><00:45:17.769><c> it's</c>

00:45:18.059 --> 00:45:18.069 align:start position:0%
gonna have to read the frame buffer it's
 

00:45:18.069 --> 00:45:19.380 align:start position:0%
gonna have to read the frame buffer it's
gonna<00:45:18.160><c> have</c><00:45:18.339><c> to</c><00:45:18.430><c> read</c><00:45:18.579><c> its</c><00:45:18.730><c> textures</c><00:45:19.180><c> it's</c>

00:45:19.380 --> 00:45:19.390 align:start position:0%
gonna have to read its textures it's
 

00:45:19.390 --> 00:45:20.609 align:start position:0%
gonna have to read its textures it's
going<00:45:19.539><c> to</c><00:45:19.630><c> combine</c><00:45:19.779><c> it</c><00:45:20.079><c> all</c><00:45:20.170><c> then</c><00:45:20.349><c> write</c><00:45:20.499><c> it</c>

00:45:20.609 --> 00:45:20.619 align:start position:0%
going to combine it all then write it
 

00:45:20.619 --> 00:45:22.589 align:start position:0%
going to combine it all then write it
back<00:45:20.740><c> out</c><00:45:20.950><c> so</c><00:45:21.579><c> you're</c><00:45:21.700><c> gonna</c><00:45:21.759><c> get</c><00:45:21.999><c> 2x</c><00:45:22.390><c> the</c>

00:45:22.589 --> 00:45:22.599 align:start position:0%
back out so you're gonna get 2x the
 

00:45:22.599 --> 00:45:26.970 align:start position:0%
back out so you're gonna get 2x the
bandwidth<00:45:25.170><c> utilized</c><00:45:26.170><c> on</c><00:45:26.470><c> the</c><00:45:26.589><c> graphics</c><00:45:26.920><c> card</c>

00:45:26.970 --> 00:45:26.980 align:start position:0%
bandwidth utilized on the graphics card
 

00:45:26.980 --> 00:45:29.759 align:start position:0%
bandwidth utilized on the graphics card
of<00:45:27.279><c> the</c><00:45:27.339><c> frame</c><00:45:27.490><c> buffer</c><00:45:27.749><c> as</c><00:45:28.749><c> opposed</c><00:45:29.319><c> to</c><00:45:29.529><c> an</c>

00:45:29.759 --> 00:45:29.769 align:start position:0%
of the frame buffer as opposed to an
 

00:45:29.769 --> 00:45:31.319 align:start position:0%
of the frame buffer as opposed to an
algorithm<00:45:30.009><c> that</c><00:45:30.190><c> say</c><00:45:30.400><c> didn't</c><00:45:30.759><c> use</c><00:45:30.910><c> a</c><00:45:30.940><c> blending</c>

00:45:31.319 --> 00:45:31.329 align:start position:0%
algorithm that say didn't use a blending
 

00:45:31.329 --> 00:45:34.710 align:start position:0%
algorithm that say didn't use a blending
mode<00:45:31.450><c> now</c><00:45:32.380><c> again</c><00:45:33.089><c> blending</c><00:45:34.089><c> is</c><00:45:34.210><c> pretty</c><00:45:34.359><c> common</c>

00:45:34.710 --> 00:45:34.720 align:start position:0%
mode now again blending is pretty common
 

00:45:34.720 --> 00:45:38.430 align:start position:0%
mode now again blending is pretty common
so<00:45:36.420><c> obviously</c><00:45:37.420><c> if</c><00:45:37.660><c> your</c><00:45:37.809><c> application</c>

00:45:38.430 --> 00:45:38.440 align:start position:0%
so obviously if your application
 

00:45:38.440 --> 00:45:40.109 align:start position:0%
so obviously if your application
requires<00:45:38.680><c> it</c><00:45:38.859><c> you'll</c><00:45:38.980><c> have</c><00:45:39.099><c> to</c><00:45:39.249><c> use</c><00:45:39.339><c> it</c><00:45:39.489><c> Z</c>

00:45:40.109 --> 00:45:40.119 align:start position:0%
requires it you'll have to use it Z
 

00:45:40.119 --> 00:45:41.789 align:start position:0%
requires it you'll have to use it Z
buffering<00:45:40.480><c> is</c><00:45:40.630><c> another</c><00:45:40.839><c> thing</c><00:45:41.049><c> that</c><00:45:41.259><c> Italy</c>

00:45:41.789 --> 00:45:41.799 align:start position:0%
buffering is another thing that Italy
 

00:45:41.799 --> 00:45:43.499 align:start position:0%
buffering is another thing that Italy
usually<00:45:42.369><c> will</c><00:45:42.519><c> result</c><00:45:42.940><c> in</c><00:45:43.059><c> a</c><00:45:43.150><c> read</c><00:45:43.329><c> modify</c>

00:45:43.499 --> 00:45:43.509 align:start position:0%
usually will result in a read modify
 

00:45:43.509 --> 00:45:47.299 align:start position:0%
usually will result in a read modify
write<00:45:44.130><c> and</c><00:45:45.130><c> when</c><00:45:45.999><c> possible</c><00:45:46.299><c> just</c><00:45:46.720><c> eliminate</c>

00:45:47.299 --> 00:45:47.309 align:start position:0%
write and when possible just eliminate
 

00:45:47.309 --> 00:45:49.400 align:start position:0%
write and when possible just eliminate
enabling<00:45:48.309><c> Z</c><00:45:48.430><c> buffer</c><00:45:48.579><c> so</c><00:45:48.940><c> that</c><00:45:48.970><c> you're</c><00:45:49.180><c> not</c>

00:45:49.400 --> 00:45:49.410 align:start position:0%
enabling Z buffer so that you're not
 

00:45:49.410 --> 00:45:51.839 align:start position:0%
enabling Z buffer so that you're not
doing<00:45:50.410><c> a</c><00:45:50.619><c> read</c><00:45:50.769><c> modify</c><00:45:50.980><c> write</c><00:45:51.160><c> on</c><00:45:51.519><c> that</c><00:45:51.549><c> Z</c>

00:45:51.839 --> 00:45:51.849 align:start position:0%
doing a read modify write on that Z
 

00:45:51.849 --> 00:45:59.390 align:start position:0%
doing a read modify write on that Z
buffer<00:45:56.220><c> okay</c><00:45:57.220><c> no</c><00:45:57.400><c> thing</c><00:45:57.640><c> that's</c><00:45:57.880><c> important</c><00:45:58.420><c> to</c>

00:45:59.390 --> 00:45:59.400 align:start position:0%
buffer okay no thing that's important to
 

00:45:59.400 --> 00:46:02.279 align:start position:0%
buffer okay no thing that's important to
to<00:46:00.400><c> keep</c><00:46:00.759><c> in</c><00:46:00.910><c> mind</c><00:46:01.089><c> is</c><00:46:01.299><c> that</c><00:46:01.480><c> modern</c><00:46:01.869><c> graphics</c>

00:46:02.279 --> 00:46:02.289 align:start position:0%
to keep in mind is that modern graphics
 

00:46:02.289 --> 00:46:05.759 align:start position:0%
to keep in mind is that modern graphics
cards<00:46:02.589><c> have</c><00:46:03.749><c> the</c><00:46:04.749><c> ability</c><00:46:05.170><c> to</c><00:46:05.200><c> do</c><00:46:05.529><c> high-level</c>

00:46:05.759 --> 00:46:05.769 align:start position:0%
cards have the ability to do high-level
 

00:46:05.769 --> 00:46:07.410 align:start position:0%
cards have the ability to do high-level
coding<00:46:06.249><c> for</c><00:46:06.460><c> you</c><00:46:06.609><c> so</c><00:46:06.789><c> if</c><00:46:06.880><c> you're</c><00:46:06.970><c> drawing</c><00:46:07.180><c> lots</c>

00:46:07.410 --> 00:46:07.420 align:start position:0%
coding for you so if you're drawing lots
 

00:46:07.420 --> 00:46:08.130 align:start position:0%
coding for you so if you're drawing lots
of<00:46:07.509><c> triangles</c>

00:46:08.130 --> 00:46:08.140 align:start position:0%
of triangles
 

00:46:08.140 --> 00:46:11.400 align:start position:0%
of triangles
it<00:46:08.890><c> can</c><00:46:09.749><c> ahead</c><00:46:10.749><c> of</c><00:46:10.869><c> time</c>

00:46:11.400 --> 00:46:11.410 align:start position:0%
it can ahead of time
 

00:46:11.410 --> 00:46:13.710 align:start position:0%
it can ahead of time
:<00:46:12.130><c> goes</c><00:46:12.519><c> out</c><00:46:12.670><c> and</c><00:46:12.819><c> it's</c><00:46:12.970><c> called</c><00:46:13.180><c> hierarchical</c>

00:46:13.710 --> 00:46:13.720 align:start position:0%
: goes out and it's called hierarchical
 

00:46:13.720 --> 00:46:19.620 align:start position:0%
: goes out and it's called hierarchical
Z<00:46:14.170><c> and</c><00:46:14.440><c> hierarchical</c><00:46:15.400><c> Z</c><00:46:15.789><c> will</c><00:46:18.299><c> very</c><00:46:19.299><c> quickly</c>

00:46:19.620 --> 00:46:19.630 align:start position:0%
Z and hierarchical Z will very quickly
 

00:46:19.630 --> 00:46:21.450 align:start position:0%
Z and hierarchical Z will very quickly
take<00:46:20.079><c> a</c><00:46:20.319><c> primitive</c><00:46:20.829><c> that</c><00:46:20.950><c> you're</c><00:46:21.039><c> drawing</c><00:46:21.279><c> and</c>

00:46:21.450 --> 00:46:21.460 align:start position:0%
take a primitive that you're drawing and
 

00:46:21.460 --> 00:46:23.430 align:start position:0%
take a primitive that you're drawing and
throw<00:46:21.609><c> it</c><00:46:21.730><c> out</c><00:46:21.819><c> and</c><00:46:22.059><c> it</c><00:46:22.239><c> won't</c><00:46:22.420><c> result</c><00:46:23.200><c> in</c><00:46:23.380><c> a</c>

00:46:23.430 --> 00:46:23.440 align:start position:0%
throw it out and it won't result in a
 

00:46:23.440 --> 00:46:24.749 align:start position:0%
throw it out and it won't result in a
read<00:46:23.589><c> modified</c><00:46:24.009><c> right</c><00:46:24.220><c> to</c><00:46:24.339><c> the</c><00:46:24.430><c> frame</c><00:46:24.579><c> buffer</c>

00:46:24.749 --> 00:46:24.759 align:start position:0%
read modified right to the frame buffer
 

00:46:24.759 --> 00:46:26.819 align:start position:0%
read modified right to the frame buffer
because<00:46:25.569><c> it</c><00:46:25.720><c> knows</c><00:46:25.930><c> that</c><00:46:25.960><c> that's</c><00:46:26.200><c> occluded</c>

00:46:26.819 --> 00:46:26.829 align:start position:0%
because it knows that that's occluded
 

00:46:26.829 --> 00:46:29.309 align:start position:0%
because it knows that that's occluded
through<00:46:27.489><c> some</c><00:46:27.940><c> varying</c><00:46:28.509><c> techniques</c><00:46:29.049><c> in</c><00:46:29.259><c> the</c>

00:46:29.309 --> 00:46:29.319 align:start position:0%
through some varying techniques in the
 

00:46:29.319 --> 00:46:31.140 align:start position:0%
through some varying techniques in the
graphics<00:46:29.680><c> card</c><00:46:29.859><c> and</c><00:46:30.039><c> it</c><00:46:30.640><c> will</c><00:46:30.819><c> save</c><00:46:31.119><c> you</c>

00:46:31.140 --> 00:46:31.150 align:start position:0%
graphics card and it will save you
 

00:46:31.150 --> 00:46:32.819 align:start position:0%
graphics card and it will save you
memory<00:46:31.539><c> memory</c><00:46:32.170><c> bandwidth</c><00:46:32.499><c> on</c><00:46:32.619><c> to</c><00:46:32.739><c> the</c>

00:46:32.819 --> 00:46:32.829 align:start position:0%
memory memory bandwidth on to the
 

00:46:32.829 --> 00:46:35.249 align:start position:0%
memory memory bandwidth on to the
graphics<00:46:33.130><c> card</c><00:46:33.309><c> so</c><00:46:33.519><c> the</c><00:46:34.450><c> way</c><00:46:34.569><c> to</c><00:46:34.599><c> utilize</c><00:46:35.049><c> this</c>

00:46:35.249 --> 00:46:35.259 align:start position:0%
graphics card so the way to utilize this
 

00:46:35.259 --> 00:46:39.630 align:start position:0%
graphics card so the way to utilize this
is<00:46:35.470><c> to</c><00:46:36.130><c> render</c><00:46:36.999><c> front</c><00:46:37.359><c> to</c><00:46:37.420><c> back</c><00:46:37.630><c> and</c><00:46:38.640><c> the</c>

00:46:39.630 --> 00:46:39.640 align:start position:0%
is to render front to back and the
 

00:46:39.640 --> 00:46:40.650 align:start position:0%
is to render front to back and the
reason<00:46:39.849><c> you</c><00:46:39.910><c> render</c><00:46:40.119><c> front</c><00:46:40.269><c> to</c><00:46:40.329><c> back</c><00:46:40.480><c> is</c>

00:46:40.650 --> 00:46:40.660 align:start position:0%
reason you render front to back is
 

00:46:40.660 --> 00:46:40.980 align:start position:0%
reason you render front to back is
because

00:46:40.980 --> 00:46:40.990 align:start position:0%
because
 

00:46:40.990 --> 00:46:42.120 align:start position:0%
because
want<00:46:41.140><c> to</c><00:46:41.200><c> draw</c><00:46:41.320><c> things</c><00:46:41.500><c> that</c><00:46:41.650><c> are</c><00:46:41.740><c> near</c><00:46:41.920><c> you</c>

00:46:42.120 --> 00:46:42.130 align:start position:0%
want to draw things that are near you
 

00:46:42.130 --> 00:46:44.010 align:start position:0%
want to draw things that are near you
and<00:46:42.369><c> then</c><00:46:43.090><c> when</c><00:46:43.270><c> you</c><00:46:43.330><c> draw</c><00:46:43.480><c> something</c><00:46:43.750><c> that's</c>

00:46:44.010 --> 00:46:44.020 align:start position:0%
and then when you draw something that's
 

00:46:44.020 --> 00:46:45.750 align:start position:0%
and then when you draw something that's
behind<00:46:44.230><c> it</c><00:46:44.470><c> the</c><00:46:44.650><c> graphics</c><00:46:44.980><c> card</c><00:46:45.220><c> will</c><00:46:45.520><c> has</c>

00:46:45.750 --> 00:46:45.760 align:start position:0%
behind it the graphics card will has
 

00:46:45.760 --> 00:46:48.870 align:start position:0%
behind it the graphics card will has
techniques<00:46:46.240><c> for</c><00:46:47.220><c> really</c><00:46:48.220><c> very</c><00:46:48.550><c> early</c>

00:46:48.870 --> 00:46:48.880 align:start position:0%
techniques for really very early
 

00:46:48.880 --> 00:46:50.220 align:start position:0%
techniques for really very early
determining<00:46:49.330><c> if</c><00:46:49.420><c> that's</c><00:46:49.570><c> behind</c><00:46:49.960><c> something</c>

00:46:50.220 --> 00:46:50.230 align:start position:0%
determining if that's behind something
 

00:46:50.230 --> 00:46:52.170 align:start position:0%
determining if that's behind something
already<00:46:50.650><c> and</c><00:46:50.890><c> discard</c><00:46:51.550><c> it</c><00:46:51.640><c> very</c><00:46:51.790><c> early</c><00:46:51.910><c> before</c>

00:46:52.170 --> 00:46:52.180 align:start position:0%
already and discard it very early before
 

00:46:52.180 --> 00:46:53.880 align:start position:0%
already and discard it very early before
it<00:46:52.480><c> has</c><00:46:52.600><c> to</c><00:46:52.810><c> do</c><00:46:52.990><c> a</c><00:46:53.230><c> read-modify-write</c>

00:46:53.880 --> 00:46:53.890 align:start position:0%
it has to do a read-modify-write
 

00:46:53.890 --> 00:46:57.750 align:start position:0%
it has to do a read-modify-write
operation<00:46:54.760><c> on</c><00:46:54.850><c> the</c><00:46:54.940><c> z-buffer</c><00:46:55.530><c> and</c><00:46:56.580><c> this</c><00:46:57.580><c> is</c>

00:46:57.750 --> 00:46:57.760 align:start position:0%
operation on the z-buffer and this is
 

00:46:57.760 --> 00:47:00.180 align:start position:0%
operation on the z-buffer and this is
the<00:46:57.880><c> most</c><00:46:58.180><c> effective</c><00:46:58.450><c> way</c><00:46:58.660><c> to</c><00:46:59.130><c> let</c><00:47:00.130><c> the</c>

00:47:00.180 --> 00:47:00.190 align:start position:0%
the most effective way to let the
 

00:47:00.190 --> 00:47:03.000 align:start position:0%
the most effective way to let the
graphics<00:47:00.520><c> card</c><00:47:00.730><c> do</c><00:47:00.820><c> its</c><00:47:00.970><c> job</c><00:47:01.180><c> of</c><00:47:02.010><c> utilizing</c>

00:47:03.000 --> 00:47:03.010 align:start position:0%
graphics card do its job of utilizing
 

00:47:03.010 --> 00:47:06.300 align:start position:0%
graphics card do its job of utilizing
these<00:47:04.230><c> silicon</c><00:47:05.230><c> gates</c><00:47:05.470><c> that</c><00:47:05.770><c> have</c><00:47:06.190><c> been</c>

00:47:06.300 --> 00:47:06.310 align:start position:0%
these silicon gates that have been
 

00:47:06.310 --> 00:47:08.280 align:start position:0%
these silicon gates that have been
dedicated<00:47:06.490><c> to</c><00:47:06.820><c> this</c><00:47:06.940><c> and</c><00:47:07.180><c> can</c><00:47:08.080><c> be</c><00:47:08.140><c> quite</c>

00:47:08.280 --> 00:47:08.290 align:start position:0%
dedicated to this and can be quite
 

00:47:08.290 --> 00:47:11.960 align:start position:0%
dedicated to this and can be quite
effective<00:47:08.410><c> if</c><00:47:08.800><c> you</c><00:47:08.920><c> do</c><00:47:09.100><c> render</c><00:47:09.430><c> front</c><00:47:09.730><c> to</c><00:47:09.790><c> back</c>

00:47:11.960 --> 00:47:11.970 align:start position:0%
 
 

00:47:11.970 --> 00:47:15.810 align:start position:0%
 
so<00:47:13.770><c> so</c><00:47:14.770><c> some</c><00:47:15.070><c> of</c><00:47:15.130><c> this</c><00:47:15.220><c> is</c><00:47:15.340><c> a</c><00:47:15.369><c> review</c><00:47:15.670><c> we're</c>

00:47:15.810 --> 00:47:15.820 align:start position:0%
so so some of this is a review we're
 

00:47:15.820 --> 00:47:18.000 align:start position:0%
so so some of this is a review we're
gonna<00:47:15.910><c> talk</c><00:47:16.750><c> about</c><00:47:16.780><c> opengl</c><00:47:17.350><c> extensions</c><00:47:17.800><c> and</c>

00:47:18.000 --> 00:47:18.010 align:start position:0%
gonna talk about opengl extensions and
 

00:47:18.010 --> 00:47:19.859 align:start position:0%
gonna talk about opengl extensions and
what<00:47:18.340><c> OpenGL</c><00:47:18.700><c> extensions</c><00:47:19.090><c> can</c><00:47:19.240><c> can</c><00:47:19.570><c> help</c><00:47:19.720><c> you</c>

00:47:19.859 --> 00:47:19.869 align:start position:0%
what OpenGL extensions can can help you
 

00:47:19.869 --> 00:47:21.960 align:start position:0%
what OpenGL extensions can can help you
we<00:47:20.650><c> already</c><00:47:20.770><c> talked</c><00:47:21.040><c> about</c><00:47:21.130><c> compile</c><00:47:21.610><c> vertex</c>

00:47:21.960 --> 00:47:21.970 align:start position:0%
we already talked about compile vertex
 

00:47:21.970 --> 00:47:25.130 align:start position:0%
we already talked about compile vertex
array<00:47:22.770><c> but</c><00:47:23.770><c> just</c><00:47:23.950><c> review</c><00:47:24.280><c> really</c><00:47:24.430><c> quickly</c>

00:47:25.130 --> 00:47:25.140 align:start position:0%
array but just review really quickly
 

00:47:25.140 --> 00:47:27.570 align:start position:0%
array but just review really quickly
this<00:47:26.140><c> is</c><00:47:26.200><c> good</c><00:47:26.470><c> for</c><00:47:26.740><c> large</c><00:47:27.310><c> number</c><00:47:27.520><c> of</c>

00:47:27.570 --> 00:47:27.580 align:start position:0%
this is good for large number of
 

00:47:27.580 --> 00:47:28.950 align:start position:0%
this is good for large number of
vertices<00:47:27.820><c> it</c><00:47:28.210><c> reduces</c><00:47:28.600><c> a</c><00:47:28.660><c> number</c><00:47:28.869><c> of</c>

00:47:28.950 --> 00:47:28.960 align:start position:0%
vertices it reduces a number of
 

00:47:28.960 --> 00:47:31.200 align:start position:0%
vertices it reduces a number of
transformations<00:47:29.550><c> it</c><00:47:30.550><c> reduces</c><00:47:30.910><c> memory</c>

00:47:31.200 --> 00:47:31.210 align:start position:0%
transformations it reduces memory
 

00:47:31.210 --> 00:47:33.840 align:start position:0%
transformations it reduces memory
traffic<00:47:31.690><c> it</c><00:47:32.410><c> allows</c><00:47:32.650><c> OpenGL</c><00:47:33.190><c> to</c><00:47:33.340><c> pre</c><00:47:33.550><c> compile</c>

00:47:33.840 --> 00:47:33.850 align:start position:0%
traffic it allows OpenGL to pre compile
 

00:47:33.850 --> 00:47:36.090 align:start position:0%
traffic it allows OpenGL to pre compile
data<00:47:34.090><c> into</c><00:47:34.450><c> a</c><00:47:34.480><c> frame</c><00:47:34.930><c> into</c><00:47:35.350><c> an</c><00:47:35.470><c> AGP</c><00:47:35.800><c> buffer</c>

00:47:36.090 --> 00:47:36.100 align:start position:0%
data into a frame into an AGP buffer
 

00:47:36.100 --> 00:47:38.460 align:start position:0%
data into a frame into an AGP buffer
ready<00:47:36.280><c> for</c><00:47:36.490><c> transmitting</c><00:47:36.910><c> to</c><00:47:37.090><c> the</c><00:47:37.180><c> card</c><00:47:37.470><c> so</c>

00:47:38.460 --> 00:47:38.470 align:start position:0%
ready for transmitting to the card so
 

00:47:38.470 --> 00:47:40.290 align:start position:0%
ready for transmitting to the card so
whenever<00:47:38.950><c> possible</c><00:47:39.160><c> again</c><00:47:39.550><c> use</c><00:47:39.730><c> kapal</c><00:47:39.970><c> vertex</c>

00:47:40.290 --> 00:47:40.300 align:start position:0%
whenever possible again use kapal vertex
 

00:47:40.300 --> 00:47:43.109 align:start position:0%
whenever possible again use kapal vertex
array<00:47:40.920><c> texture</c><00:47:41.920><c> compression</c><00:47:42.160><c> texture</c>

00:47:43.109 --> 00:47:43.119 align:start position:0%
array texture compression texture
 

00:47:43.119 --> 00:47:44.580 align:start position:0%
array texture compression texture
compression<00:47:43.330><c> is</c><00:47:43.600><c> also</c><00:47:43.660><c> very</c><00:47:44.050><c> good</c><00:47:44.170><c> extension</c>

00:47:44.580 --> 00:47:44.590 align:start position:0%
compression is also very good extension
 

00:47:44.590 --> 00:47:48.900 align:start position:0%
compression is also very good extension
to<00:47:44.650><c> use</c><00:47:45.060><c> it</c><00:47:46.060><c> allows</c><00:47:46.359><c> to</c><00:47:46.780><c> you</c><00:47:47.170><c> to</c><00:47:47.580><c> minimize</c><00:47:48.580><c> the</c>

00:47:48.900 --> 00:47:48.910 align:start position:0%
to use it allows to you to minimize the
 

00:47:48.910 --> 00:47:51.030 align:start position:0%
to use it allows to you to minimize the
system<00:47:49.900><c> memory</c><00:47:49.990><c> bandwidth</c><00:47:50.440><c> of</c><00:47:50.590><c> moving</c><00:47:50.920><c> that</c>

00:47:51.030 --> 00:47:51.040 align:start position:0%
system memory bandwidth of moving that
 

00:47:51.040 --> 00:47:53.190 align:start position:0%
system memory bandwidth of moving that
texture<00:47:51.310><c> around</c><00:47:51.490><c> it</c><00:47:51.820><c> saves</c><00:47:52.150><c> you</c><00:47:52.359><c> system</c>

00:47:53.190 --> 00:47:53.200 align:start position:0%
texture around it saves you system
 

00:47:53.200 --> 00:47:53.820 align:start position:0%
texture around it saves you system
memory<00:47:53.410><c> itself</c>

00:47:53.820 --> 00:47:53.830 align:start position:0%
memory itself
 

00:47:53.830 --> 00:47:56.580 align:start position:0%
memory itself
it<00:47:54.400><c> saves</c><00:47:55.180><c> the</c><00:47:55.420><c> bandwidth</c><00:47:55.810><c> of</c><00:47:56.020><c> moving</c><00:47:56.470><c> that</c>

00:47:56.580 --> 00:47:56.590 align:start position:0%
it saves the bandwidth of moving that
 

00:47:56.590 --> 00:47:58.440 align:start position:0%
it saves the bandwidth of moving that
texture<00:47:56.920><c> up</c><00:47:57.040><c> to</c><00:47:57.130><c> the</c><00:47:57.190><c> graphics</c><00:47:57.520><c> card</c><00:47:57.760><c> and</c><00:47:57.970><c> it</c>

00:47:58.440 --> 00:47:58.450 align:start position:0%
texture up to the graphics card and it
 

00:47:58.450 --> 00:48:01.440 align:start position:0%
texture up to the graphics card and it
also<00:47:58.600><c> saves</c><00:47:59.340><c> can</c><00:48:00.340><c> benefit</c><00:48:00.850><c> the</c><00:48:00.940><c> graphics</c><00:48:01.240><c> card</c>

00:48:01.440 --> 00:48:01.450 align:start position:0%
also saves can benefit the graphics card
 

00:48:01.450 --> 00:48:06.330 align:start position:0%
also saves can benefit the graphics card
itself<00:48:01.750><c> by</c><00:48:04.200><c> lowering</c><00:48:05.200><c> the</c><00:48:05.530><c> bandwidth</c><00:48:06.130><c> it</c>

00:48:06.330 --> 00:48:06.340 align:start position:0%
itself by lowering the bandwidth it
 

00:48:06.340 --> 00:48:08.580 align:start position:0%
itself by lowering the bandwidth it
takes<00:48:06.550><c> to</c><00:48:06.730><c> read</c><00:48:06.910><c> the</c><00:48:07.030><c> texture</c><00:48:07.390><c> a</c><00:48:07.540><c> text</c><00:48:08.320><c> aloud</c>

00:48:08.580 --> 00:48:08.590 align:start position:0%
takes to read the texture a text aloud
 

00:48:08.590 --> 00:48:12.030 align:start position:0%
takes to read the texture a text aloud
and<00:48:08.859><c> to</c><00:48:09.640><c> render</c><00:48:09.940><c> with</c><00:48:10.060><c> it</c><00:48:10.240><c> and</c><00:48:10.859><c> because</c><00:48:11.859><c> it</c>

00:48:12.030 --> 00:48:12.040 align:start position:0%
and to render with it and because it
 

00:48:12.040 --> 00:48:14.640 align:start position:0%
and to render with it and because it
will<00:48:12.160><c> do</c><00:48:12.310><c> on-the-fly</c><00:48:12.990><c> texture</c><00:48:13.990><c> decompression</c>

00:48:14.640 --> 00:48:14.650 align:start position:0%
will do on-the-fly texture decompression
 

00:48:14.650 --> 00:48:17.220 align:start position:0%
will do on-the-fly texture decompression
and<00:48:14.770><c> it</c><00:48:15.520><c> will</c><00:48:15.640><c> better</c><00:48:15.820><c> utilize</c><00:48:16.450><c> the</c><00:48:16.750><c> on</c><00:48:16.900><c> cache</c>

00:48:17.220 --> 00:48:17.230 align:start position:0%
and it will better utilize the on cache
 

00:48:17.230 --> 00:48:20.070 align:start position:0%
and it will better utilize the on cache
memory<00:48:18.130><c> on</c><00:48:18.220><c> the</c><00:48:18.310><c> graphics</c><00:48:18.640><c> card</c><00:48:18.700><c> so</c><00:48:19.080><c> texture</c>

00:48:20.070 --> 00:48:20.080 align:start position:0%
memory on the graphics card so texture
 

00:48:20.080 --> 00:48:22.740 align:start position:0%
memory on the graphics card so texture
compression<00:48:20.290><c> can</c><00:48:20.800><c> be</c><00:48:20.920><c> effective</c><00:48:21.540><c> it's</c><00:48:22.540><c> really</c>

00:48:22.740 --> 00:48:22.750 align:start position:0%
compression can be effective it's really
 

00:48:22.750 --> 00:48:24.870 align:start position:0%
compression can be effective it's really
gonna<00:48:22.869><c> depend</c><00:48:22.960><c> on</c><00:48:23.440><c> where</c><00:48:23.830><c> your</c><00:48:23.980><c> limitations</c>

00:48:24.870 --> 00:48:24.880 align:start position:0%
gonna depend on where your limitations
 

00:48:24.880 --> 00:48:27.510 align:start position:0%
gonna depend on where your limitations
your<00:48:25.720><c> where</c><00:48:26.350><c> your</c><00:48:26.470><c> performance</c><00:48:26.830><c> bottlenecks</c>

00:48:27.510 --> 00:48:27.520 align:start position:0%
your where your performance bottlenecks
 

00:48:27.520 --> 00:48:29.400 align:start position:0%
your where your performance bottlenecks
are<00:48:27.640><c> in</c><00:48:27.730><c> your</c><00:48:27.820><c> application</c><00:48:28.240><c> but</c><00:48:29.050><c> it's</c><00:48:29.260><c> a</c><00:48:29.290><c> good</c>

00:48:29.400 --> 00:48:29.410 align:start position:0%
are in your application but it's a good
 

00:48:29.410 --> 00:48:32.580 align:start position:0%
are in your application but it's a good
one<00:48:29.530><c> to</c><00:48:29.650><c> keep</c><00:48:29.710><c> in</c><00:48:29.890><c> mind</c><00:48:30.930><c> multi</c><00:48:31.930><c> texture</c><00:48:32.260><c> is</c><00:48:32.410><c> the</c>

00:48:32.580 --> 00:48:32.590 align:start position:0%
one to keep in mind multi texture is the
 

00:48:32.590 --> 00:48:36.630 align:start position:0%
one to keep in mind multi texture is the
extension<00:48:33.250><c> for</c><00:48:33.690><c> doing</c><00:48:34.690><c> multi</c><00:48:34.990><c> texturing</c><00:48:35.640><c> like</c>

00:48:36.630 --> 00:48:36.640 align:start position:0%
extension for doing multi texturing like
 

00:48:36.640 --> 00:48:38.340 align:start position:0%
extension for doing multi texturing like
we've<00:48:36.790><c> mentioned</c><00:48:37.000><c> utilizing</c><00:48:37.930><c> more</c><00:48:38.080><c> than</c><00:48:38.230><c> one</c>

00:48:38.340 --> 00:48:38.350 align:start position:0%
we've mentioned utilizing more than one
 

00:48:38.350 --> 00:48:41.940 align:start position:0%
we've mentioned utilizing more than one
texture<00:48:38.650><c> unit</c><00:48:39.810><c> Apple</c><00:48:40.810><c> pack</c><00:48:40.960><c> pixel</c><00:48:41.320><c> again</c><00:48:41.800><c> is</c>

00:48:41.940 --> 00:48:41.950 align:start position:0%
texture unit Apple pack pixel again is
 

00:48:41.950 --> 00:48:46.290 align:start position:0%
texture unit Apple pack pixel again is
the<00:48:42.100><c> extension</c><00:48:43.090><c> for</c><00:48:44.100><c> the</c><00:48:45.100><c> best</c><00:48:45.430><c> way</c><00:48:45.790><c> to</c><00:48:45.850><c> pass</c>

00:48:46.290 --> 00:48:46.300 align:start position:0%
the extension for the best way to pass
 

00:48:46.300 --> 00:48:48.960 align:start position:0%
the extension for the best way to pass
pixel<00:48:46.960><c> data</c><00:48:47.140><c> two</c><00:48:47.770><c> of</c><00:48:47.890><c> them</c><00:48:47.980><c> Jill</c><00:48:48.160><c> and</c><00:48:48.609><c> allows</c>

00:48:48.960 --> 00:48:48.970 align:start position:0%
pixel data two of them Jill and allows
 

00:48:48.970 --> 00:48:52.920 align:start position:0%
pixel data two of them Jill and allows
you<00:48:49.210><c> to</c><00:48:49.710><c> get</c><00:48:50.710><c> the</c><00:48:51.130><c> the</c><00:48:51.520><c> most</c><00:48:51.760><c> data</c><00:48:52.090><c> the</c><00:48:52.480><c> best</c>

00:48:52.920 --> 00:48:52.930 align:start position:0%
you to get the the most data the best
 

00:48:52.930 --> 00:48:54.589 align:start position:0%
you to get the the most data the best
bandwidth<00:48:53.380><c> utilization</c><00:48:53.530><c> of</c>

00:48:54.589 --> 00:48:54.599 align:start position:0%
bandwidth utilization of
 

00:48:54.599 --> 00:48:58.700 align:start position:0%
bandwidth utilization of
pixal<00:48:55.289><c> data</c><00:48:55.440><c> to</c><00:48:55.650><c> the</c><00:48:55.769><c> OpenGL</c><00:48:56.400><c> system</c><00:48:57.019><c> and</c><00:48:58.019><c> the</c>

00:48:58.700 --> 00:48:58.710 align:start position:0%
pixal data to the OpenGL system and the
 

00:48:58.710 --> 00:49:00.049 align:start position:0%
pixal data to the OpenGL system and the
other<00:48:58.799><c> thing</c><00:48:58.979><c> it</c><00:48:59.099><c> does</c><00:48:59.130><c> actually</c><00:48:59.489><c> is</c><00:48:59.700><c> it</c><00:48:59.819><c> saves</c>

00:49:00.049 --> 00:49:00.059 align:start position:0%
other thing it does actually is it saves
 

00:49:00.059 --> 00:49:01.400 align:start position:0%
other thing it does actually is it saves
system<00:49:00.359><c> memory</c><00:49:00.450><c> so</c><00:49:00.660><c> if</c><00:49:00.779><c> you're</c><00:49:00.900><c> able</c><00:49:01.109><c> to</c><00:49:01.140><c> store</c>

00:49:01.400 --> 00:49:01.410 align:start position:0%
system memory so if you're able to store
 

00:49:01.410 --> 00:49:03.859 align:start position:0%
system memory so if you're able to store
a<00:49:01.440><c> texture</c><00:49:01.799><c> in</c><00:49:02.640><c> a</c><00:49:02.729><c> more</c><00:49:02.940><c> optimal</c><00:49:03.269><c> format</c><00:49:03.660><c> for</c>

00:49:03.859 --> 00:49:03.869 align:start position:0%
a texture in a more optimal format for
 

00:49:03.869 --> 00:49:06.799 align:start position:0%
a texture in a more optimal format for
your<00:49:03.960><c> your</c><00:49:04.529><c> application</c><00:49:04.979><c> let's</c><00:49:05.279><c> say</c><00:49:05.599><c> one</c><00:49:06.599><c> five</c>

00:49:06.799 --> 00:49:06.809 align:start position:0%
your your application let's say one five
 

00:49:06.809 --> 00:49:09.859 align:start position:0%
your your application let's say one five
five<00:49:07.019><c> five</c><00:49:08.420><c> obviously</c><00:49:09.420><c> that's</c><00:49:09.599><c> going</c><00:49:09.690><c> to</c><00:49:09.779><c> be</c>

00:49:09.859 --> 00:49:09.869 align:start position:0%
five five obviously that's going to be
 

00:49:09.869 --> 00:49:12.410 align:start position:0%
five five obviously that's going to be
half<00:49:10.529><c> the</c><00:49:10.710><c> memory</c><00:49:10.890><c> utilization</c><00:49:11.339><c> of</c><00:49:11.999><c> an</c><00:49:12.239><c> eight</c>

00:49:12.410 --> 00:49:12.420 align:start position:0%
half the memory utilization of an eight
 

00:49:12.420 --> 00:49:15.039 align:start position:0%
half the memory utilization of an eight
component<00:49:12.979><c> eight</c><00:49:13.979><c> bits</c><00:49:14.220><c> per</c><00:49:14.400><c> component</c>

00:49:15.039 --> 00:49:15.049 align:start position:0%
component eight bits per component
 

00:49:15.049 --> 00:49:18.440 align:start position:0%
component eight bits per component
texture<00:49:16.049><c> so</c><00:49:16.380><c> that</c><00:49:16.799><c> will</c><00:49:16.950><c> give</c><00:49:17.099><c> you</c><00:49:17.450><c> some</c>

00:49:18.440 --> 00:49:18.450 align:start position:0%
texture so that will give you some
 

00:49:18.450 --> 00:49:19.789 align:start position:0%
texture so that will give you some
system<00:49:18.749><c> memory</c><00:49:18.869><c> savings</c><00:49:19.319><c> some</c><00:49:19.440><c> bandwidth</c>

00:49:19.789 --> 00:49:19.799 align:start position:0%
system memory savings some bandwidth
 

00:49:19.799 --> 00:49:22.729 align:start position:0%
system memory savings some bandwidth
savings<00:49:20.160><c> and</c><00:49:20.400><c> it'll</c><00:49:20.549><c> also</c><00:49:20.759><c> save</c><00:49:21.440><c> video</c><00:49:22.440><c> memory</c>

00:49:22.729 --> 00:49:22.739 align:start position:0%
savings and it'll also save video memory
 

00:49:22.739 --> 00:49:28.640 align:start position:0%
savings and it'll also save video memory
on<00:49:22.950><c> the</c><00:49:23.039><c> graphics</c><00:49:23.369><c> card</c><00:49:25.579><c> so</c><00:49:26.930><c> quick</c><00:49:27.930><c> summary</c><00:49:28.109><c> so</c>

00:49:28.640 --> 00:49:28.650 align:start position:0%
on the graphics card so quick summary so
 

00:49:28.650 --> 00:49:32.930 align:start position:0%
on the graphics card so quick summary so
again<00:49:29.369><c> going</c><00:49:29.729><c> over</c><00:49:31.309><c> some</c><00:49:32.309><c> of</c><00:49:32.339><c> the</c><00:49:32.460><c> priorities</c>

00:49:32.930 --> 00:49:32.940 align:start position:0%
again going over some of the priorities
 

00:49:32.940 --> 00:49:35.450 align:start position:0%
again going over some of the priorities
so<00:49:33.410><c> the</c><00:49:34.410><c> thing</c><00:49:34.589><c> we</c><00:49:34.710><c> always</c><00:49:34.920><c> tell</c><00:49:35.099><c> people</c><00:49:35.130><c> as</c>

00:49:35.450 --> 00:49:35.460 align:start position:0%
so the thing we always tell people as
 

00:49:35.460 --> 00:49:36.979 align:start position:0%
so the thing we always tell people as
they<00:49:35.609><c> again</c><00:49:36.059><c> need</c><00:49:36.420><c> to</c><00:49:36.509><c> optimize</c><00:49:36.839><c> their</c>

00:49:36.979 --> 00:49:36.989 align:start position:0%
they again need to optimize their
 

00:49:36.989 --> 00:49:39.499 align:start position:0%
they again need to optimize their
application<00:49:37.440><c> because</c><00:49:37.950><c> 75%</c><00:49:38.789><c> of</c><00:49:38.819><c> the</c><00:49:38.910><c> time</c><00:49:39.059><c> is</c>

00:49:39.499 --> 00:49:39.509 align:start position:0%
application because 75% of the time is
 

00:49:39.509 --> 00:49:41.930 align:start position:0%
application because 75% of the time is
typically<00:49:39.960><c> spent</c><00:49:40.289><c> in</c><00:49:40.410><c> the</c><00:49:40.499><c> application</c><00:49:41.009><c> as</c>

00:49:41.930 --> 00:49:41.940 align:start position:0%
typically spent in the application as
 

00:49:41.940 --> 00:49:45.410 align:start position:0%
typically spent in the application as
and<00:49:42.329><c> 25%</c><00:49:42.869><c> in</c><00:49:43.289><c> the</c><00:49:43.410><c> OpenGL</c><00:49:43.829><c> so</c><00:49:44.670><c> optimizing</c><00:49:45.390><c> your</c>

00:49:45.410 --> 00:49:45.420 align:start position:0%
and 25% in the OpenGL so optimizing your
 

00:49:45.420 --> 00:49:47.779 align:start position:0%
and 25% in the OpenGL so optimizing your
application<00:49:45.869><c> is</c><00:49:45.960><c> going</c><00:49:46.079><c> to</c><00:49:46.170><c> be</c><00:49:46.289><c> important</c><00:49:46.789><c> and</c>

00:49:47.779 --> 00:49:47.789 align:start position:0%
application is going to be important and
 

00:49:47.789 --> 00:49:49.549 align:start position:0%
application is going to be important and
you<00:49:48.450><c> won't</c><00:49:48.599><c> get</c><00:49:48.690><c> good</c><00:49:48.839><c> performance</c><00:49:49.019><c> until</c>

00:49:49.549 --> 00:49:49.559 align:start position:0%
you won't get good performance until
 

00:49:49.559 --> 00:49:51.469 align:start position:0%
you won't get good performance until
you've<00:49:49.739><c> gotten</c><00:49:50.190><c> back</c><00:49:50.489><c> to</c><00:49:50.759><c> us</c><00:49:50.880><c> an</c><00:49:51.029><c> acceptable</c>

00:49:51.469 --> 00:49:51.479 align:start position:0%
you've gotten back to us an acceptable
 

00:49:51.479 --> 00:49:54.289 align:start position:0%
you've gotten back to us an acceptable
level<00:49:52.369><c> scale</c><00:49:53.369><c> your</c><00:49:53.579><c> application</c><00:49:54.059><c> to</c><00:49:54.269><c> the</c>

00:49:54.289 --> 00:49:54.299 align:start position:0%
level scale your application to the
 

00:49:54.299 --> 00:49:57.829 align:start position:0%
level scale your application to the
target<00:49:55.109><c> platform</c><00:49:56.059><c> try</c><00:49:57.059><c> to</c><00:49:57.119><c> determine</c><00:49:57.569><c> your</c>

00:49:57.829 --> 00:49:57.839 align:start position:0%
target platform try to determine your
 

00:49:57.839 --> 00:50:00.759 align:start position:0%
target platform try to determine your
vram<00:49:58.200><c> how</c><00:49:58.559><c> much</c><00:49:58.680><c> video</c><00:49:58.829><c> memory</c><00:49:59.160><c> is</c><00:49:59.219><c> available</c>

00:50:00.759 --> 00:50:00.769 align:start position:0%
vram how much video memory is available
 

00:50:00.769 --> 00:50:02.509 align:start position:0%
vram how much video memory is available
determine<00:50:01.769><c> how</c><00:50:01.859><c> much</c><00:50:01.920><c> system</c><00:50:02.279><c> memory</c><00:50:02.400><c> is</c>

00:50:02.509 --> 00:50:02.519 align:start position:0%
determine how much system memory is
 

00:50:02.519 --> 00:50:04.099 align:start position:0%
determine how much system memory is
available<00:50:02.609><c> try</c><00:50:03.119><c> to</c><00:50:03.180><c> stay</c><00:50:03.390><c> within</c><00:50:03.569><c> acceptable</c>

00:50:04.099 --> 00:50:04.109 align:start position:0%
available try to stay within acceptable
 

00:50:04.109 --> 00:50:05.779 align:start position:0%
available try to stay within acceptable
bounds<00:50:04.469><c> that</c><00:50:04.680><c> won't</c><00:50:05.130><c> cause</c><00:50:05.339><c> the</c><00:50:05.369><c> system</c>

00:50:05.779 --> 00:50:05.789 align:start position:0%
bounds that won't cause the system
 

00:50:05.789 --> 00:50:08.719 align:start position:0%
bounds that won't cause the system
memory<00:50:05.910><c> to</c><00:50:06.089><c> go</c><00:50:06.180><c> into</c><00:50:06.359><c> paging</c><00:50:07.519><c> determine</c><00:50:08.519><c> maybe</c>

00:50:08.719 --> 00:50:08.729 align:start position:0%
memory to go into paging determine maybe
 

00:50:08.729 --> 00:50:09.859 align:start position:0%
memory to go into paging determine maybe
the<00:50:08.880><c> number</c><00:50:09.119><c> of</c><00:50:09.210><c> texture</c><00:50:09.479><c> units</c><00:50:09.630><c> on</c><00:50:09.809><c> the</c>

00:50:09.859 --> 00:50:09.869 align:start position:0%
the number of texture units on the
 

00:50:09.869 --> 00:50:11.839 align:start position:0%
the number of texture units on the
graphics<00:50:10.229><c> card</c><00:50:10.499><c> so</c><00:50:10.710><c> you</c><00:50:11.130><c> can</c><00:50:11.400><c> do</c><00:50:11.519><c> multi</c>

00:50:11.839 --> 00:50:11.849 align:start position:0%
graphics card so you can do multi
 

00:50:11.849 --> 00:50:14.690 align:start position:0%
graphics card so you can do multi
texturing<00:50:12.329><c> instead</c><00:50:12.599><c> of</c><00:50:12.690><c> multi</c><00:50:12.960><c> pass</c><00:50:13.609><c> look</c><00:50:14.609><c> at</c>

00:50:14.690 --> 00:50:14.700 align:start position:0%
texturing instead of multi pass look at
 

00:50:14.700 --> 00:50:16.099 align:start position:0%
texturing instead of multi pass look at
your<00:50:14.789><c> CPU</c><00:50:15.119><c> type</c>

00:50:16.099 --> 00:50:16.109 align:start position:0%
your CPU type
 

00:50:16.109 --> 00:50:19.039 align:start position:0%
your CPU type
try<00:50:16.529><c> to</c><00:50:16.589><c> try</c><00:50:17.369><c> to</c><00:50:17.430><c> utilize</c><00:50:17.609><c> a</c><00:50:18.180><c> number</c><00:50:18.719><c> of</c><00:50:18.809><c> OpenGL</c>

00:50:19.039 --> 00:50:19.049 align:start position:0%
try to try to utilize a number of OpenGL
 

00:50:19.049 --> 00:50:20.719 align:start position:0%
try to try to utilize a number of OpenGL
extensions<00:50:19.559><c> that</c><00:50:19.710><c> will</c><00:50:19.799><c> help</c><00:50:19.979><c> simplify</c><00:50:20.400><c> how</c>

00:50:20.719 --> 00:50:20.729 align:start position:0%
extensions that will help simplify how
 

00:50:20.729 --> 00:50:22.819 align:start position:0%
extensions that will help simplify how
the<00:50:20.789><c> data</c><00:50:20.999><c> is</c><00:50:21.059><c> being</c><00:50:21.119><c> passed</c><00:50:21.390><c> OpenGL</c><00:50:21.930><c> as</c><00:50:22.559><c> well</c>

00:50:22.819 --> 00:50:22.829 align:start position:0%
the data is being passed OpenGL as well
 

00:50:22.829 --> 00:50:26.589 align:start position:0%
the data is being passed OpenGL as well
as<00:50:23.900><c> potentially</c><00:50:24.900><c> give</c><00:50:25.079><c> you</c><00:50:25.170><c> better</c><00:50:25.410><c> effects</c>

00:50:26.589 --> 00:50:26.599 align:start position:0%
as potentially give you better effects
 

00:50:26.599 --> 00:50:29.690 align:start position:0%
as potentially give you better effects
allow<00:50:27.599><c> the</c><00:50:27.660><c> user</c><00:50:27.930><c> to</c><00:50:28.049><c> adjust</c><00:50:28.769><c> the</c><00:50:29.160><c> graphics</c>

00:50:29.690 --> 00:50:29.700 align:start position:0%
allow the user to adjust the graphics
 

00:50:29.700 --> 00:50:31.999 align:start position:0%
allow the user to adjust the graphics
settings<00:50:30.200><c> such</c><00:50:31.200><c> that</c><00:50:31.440><c> if</c><00:50:31.559><c> the</c><00:50:31.680><c> user</c><00:50:31.890><c> is</c>

00:50:31.999 --> 00:50:32.009 align:start position:0%
settings such that if the user is
 

00:50:32.009 --> 00:50:33.499 align:start position:0%
settings such that if the user is
experiencing<00:50:32.670><c> problems</c><00:50:33.029><c> on</c><00:50:33.119><c> a</c><00:50:33.150><c> particular</c>

00:50:33.499 --> 00:50:33.509 align:start position:0%
experiencing problems on a particular
 

00:50:33.509 --> 00:50:34.630 align:start position:0%
experiencing problems on a particular
platform<00:50:33.719><c> from</c><00:50:34.140><c> one</c><00:50:34.259><c> reason</c><00:50:34.499><c> or</c><00:50:34.529><c> another</c>

00:50:34.630 --> 00:50:34.640 align:start position:0%
platform from one reason or another
 

00:50:34.640 --> 00:50:38.269 align:start position:0%
platform from one reason or another
allowing<00:50:35.640><c> the</c><00:50:35.759><c> user</c><00:50:35.940><c> to</c><00:50:36.650><c> vary</c><00:50:37.650><c> the</c><00:50:37.829><c> quality</c>

00:50:38.269 --> 00:50:38.279 align:start position:0%
allowing the user to vary the quality
 

00:50:38.279 --> 00:50:40.130 align:start position:0%
allowing the user to vary the quality
settings<00:50:39.239><c> such</c><00:50:39.539><c> that</c><00:50:39.690><c> they</c><00:50:39.749><c> can</c><00:50:39.900><c> get</c><00:50:39.989><c> the</c>

00:50:40.130 --> 00:50:40.140 align:start position:0%
settings such that they can get the
 

00:50:40.140 --> 00:50:41.269 align:start position:0%
settings such that they can get the
performance<00:50:40.529><c> that</c><00:50:40.559><c> they're</c><00:50:40.739><c> looking</c><00:50:40.920><c> for</c>

00:50:41.269 --> 00:50:41.279 align:start position:0%
performance that they're looking for
 

00:50:41.279 --> 00:50:45.589 align:start position:0%
performance that they're looking for
obviously<00:50:42.029><c> is</c><00:50:42.509><c> it's</c><00:50:43.170><c> gonna</c><00:50:43.349><c> be</c><00:50:43.819><c> a</c><00:50:44.819><c> friendly</c>

00:50:45.589 --> 00:50:45.599 align:start position:0%
obviously is it's gonna be a friendly
 

00:50:45.599 --> 00:50:47.420 align:start position:0%
obviously is it's gonna be a friendly
thing<00:50:45.809><c> to</c><00:50:45.930><c> do</c><00:50:46.049><c> for</c><00:50:46.289><c> the</c><00:50:46.410><c> user</c><00:50:46.619><c> it</c><00:50:47.190><c> will</c><00:50:47.219><c> give</c>

00:50:47.420 --> 00:50:47.430 align:start position:0%
thing to do for the user it will give
 

00:50:47.430 --> 00:50:49.089 align:start position:0%
thing to do for the user it will give
the<00:50:47.549><c> user</c><00:50:47.579><c> control</c><00:50:48.239><c> over</c><00:50:48.479><c> some</c><00:50:48.719><c> of</c><00:50:48.809><c> the</c>

00:50:49.089 --> 00:50:49.099 align:start position:0%
the user control over some of the
 

00:50:49.099 --> 00:50:53.180 align:start position:0%
the user control over some of the
aspects<00:50:50.099><c> of</c><00:50:50.219><c> how</c><00:50:50.339><c> the</c><00:50:50.400><c> application</c><00:50:50.910><c> runs</c><00:50:52.190><c> so</c>

00:50:53.180 --> 00:50:53.190 align:start position:0%
aspects of how the application runs so
 

00:50:53.190 --> 00:50:56.420 align:start position:0%
aspects of how the application runs so
for<00:50:53.430><c> more</c><00:50:53.549><c> information</c><00:50:54.769><c> there's</c><00:50:55.769><c> two</c><00:50:56.249><c> good</c>

00:50:56.420 --> 00:50:56.430 align:start position:0%
for more information there's two good
 

00:50:56.430 --> 00:50:59.089 align:start position:0%
for more information there's two good
books<00:50:56.609><c> on</c><00:50:56.910><c> OpenGL</c><00:50:57.420><c> and</c><00:50:57.989><c> anybody</c><00:50:58.859><c> that's</c><00:50:59.009><c> doing</c>

00:50:59.089 --> 00:50:59.099 align:start position:0%
books on OpenGL and anybody that's doing
 

00:50:59.099 --> 00:51:00.380 align:start position:0%
books on OpenGL and anybody that's doing
OpenGL<00:50:59.489><c> programming</c><00:50:59.819><c> should</c><00:51:00.089><c> have</c><00:51:00.210><c> these</c>

00:51:00.380 --> 00:51:00.390 align:start position:0%
OpenGL programming should have these
 

00:51:00.390 --> 00:51:03.890 align:start position:0%
OpenGL programming should have these
books<00:51:00.890><c> one</c><00:51:01.890><c> is</c><00:51:02.039><c> the</c><00:51:02.190><c> the</c><00:51:02.670><c> OpenGL</c><00:51:03.569><c> programming</c>

00:51:03.890 --> 00:51:03.900 align:start position:0%
books one is the the OpenGL programming
 

00:51:03.900 --> 00:51:06.469 align:start position:0%
books one is the the OpenGL programming
guide<00:51:04.170><c> and</c><00:51:04.499><c> the</c><00:51:05.099><c> other</c><00:51:05.219><c> one</c><00:51:05.339><c> is</c><00:51:05.460><c> the</c><00:51:05.670><c> reference</c>

00:51:06.469 --> 00:51:06.479 align:start position:0%
guide and the other one is the reference
 

00:51:06.479 --> 00:51:07.410 align:start position:0%
guide and the other one is the reference
manual

00:51:07.410 --> 00:51:07.420 align:start position:0%
manual
 

00:51:07.420 --> 00:51:08.730 align:start position:0%
manual
so<00:51:07.630><c> these</c><00:51:07.720><c> books</c><00:51:07.960><c> are</c><00:51:08.079><c> invaluable</c><00:51:08.260><c> they're</c>

00:51:08.730 --> 00:51:08.740 align:start position:0%
so these books are invaluable they're
 

00:51:08.740 --> 00:51:11.519 align:start position:0%
so these books are invaluable they're
very<00:51:09.130><c> well</c><00:51:09.309><c> written</c><00:51:09.460><c> and</c><00:51:10.380><c> if</c><00:51:11.380><c> you're</c><00:51:11.500><c> just</c>

00:51:11.519 --> 00:51:11.529 align:start position:0%
very well written and if you're just
 

00:51:11.529 --> 00:51:12.900 align:start position:0%
very well written and if you're just
starting<00:51:11.740><c> to</c><00:51:11.920><c> OpenGL</c><00:51:12.130><c> or</c><00:51:12.369><c> whether</c><00:51:12.549><c> you're</c><00:51:12.819><c> an</c>

00:51:12.900 --> 00:51:12.910 align:start position:0%
starting to OpenGL or whether you're an
 

00:51:12.910 --> 00:51:16.620 align:start position:0%
starting to OpenGL or whether you're an
expert<00:51:14.339><c> these</c><00:51:15.339><c> books</c><00:51:15.549><c> are</c><00:51:16.240><c> always</c><00:51:16.390><c> sitting</c>

00:51:16.620 --> 00:51:16.630 align:start position:0%
expert these books are always sitting
 

00:51:16.630 --> 00:51:19.799 align:start position:0%
expert these books are always sitting
right<00:51:16.809><c> next</c><00:51:16.930><c> to</c><00:51:17.049><c> me</c><00:51:17.140><c> on</c><00:51:17.170><c> my</c><00:51:17.380><c> desk</c><00:51:18.630><c> so</c><00:51:19.630><c> for</c>

00:51:19.799 --> 00:51:19.809 align:start position:0%
right next to me on my desk so for
 

00:51:19.809 --> 00:51:22.220 align:start position:0%
right next to me on my desk so for
online<00:51:20.140><c> help</c><00:51:20.440><c> there's</c><00:51:20.950><c> some</c><00:51:21.460><c> good</c><00:51:21.609><c> resources</c>

00:51:22.220 --> 00:51:22.230 align:start position:0%
online help there's some good resources
 

00:51:22.230 --> 00:51:26.160 align:start position:0%
online help there's some good resources
you'll<00:51:23.230><c> want</c><00:51:23.410><c> to</c><00:51:23.440><c> go</c><00:51:23.589><c> to</c><00:51:24.510><c> WWF</c><00:51:25.510><c> injeel'</c><00:51:25.750><c> org</c>

00:51:26.160 --> 00:51:26.170 align:start position:0%
you'll want to go to WWF injeel' org
 

00:51:26.170 --> 00:51:30.960 align:start position:0%
you'll want to go to WWF injeel' org
this<00:51:27.069><c> is</c><00:51:27.309><c> the</c><00:51:27.460><c> official</c><00:51:28.150><c> opengl</c><00:51:29.099><c> web</c><00:51:30.099><c> page</c><00:51:30.369><c> and</c>

00:51:30.960 --> 00:51:30.970 align:start position:0%
this is the official opengl web page and
 

00:51:30.970 --> 00:51:32.670 align:start position:0%
this is the official opengl web page and
it's<00:51:31.599><c> got</c><00:51:31.809><c> all</c><00:51:31.930><c> kinds</c><00:51:31.960><c> of</c><00:51:32.289><c> neat</c><00:51:32.470><c> news</c>

00:51:32.670 --> 00:51:32.680 align:start position:0%
it's got all kinds of neat news
 

00:51:32.680 --> 00:51:36.059 align:start position:0%
it's got all kinds of neat news
announcements<00:51:33.900><c> resources</c><00:51:34.900><c> it</c><00:51:35.230><c> has</c><00:51:35.260><c> lists</c><00:51:35.980><c> of</c>

00:51:36.059 --> 00:51:36.069 align:start position:0%
announcements resources it has lists of
 

00:51:36.069 --> 00:51:38.509 align:start position:0%
announcements resources it has lists of
applications<00:51:36.670><c> that</c><00:51:36.730><c> are</c><00:51:36.880><c> utilizing</c><00:51:37.269><c> opengl</c>

00:51:38.509 --> 00:51:38.519 align:start position:0%
applications that are utilizing opengl
 

00:51:38.519 --> 00:51:42.480 align:start position:0%
applications that are utilizing opengl
documentation<00:51:39.869><c> it's</c><00:51:40.869><c> got</c><00:51:41.079><c> all</c><00:51:41.769><c> the</c><00:51:42.069><c> all</c><00:51:42.369><c> the</c>

00:51:42.480 --> 00:51:42.490 align:start position:0%
documentation it's got all the all the
 

00:51:42.490 --> 00:51:44.099 align:start position:0%
documentation it's got all the all the
resources<00:51:42.880><c> you'll</c><00:51:43.089><c> need</c><00:51:43.119><c> for</c><00:51:43.630><c> finding</c><00:51:44.019><c> out</c>

00:51:44.099 --> 00:51:44.109 align:start position:0%
resources you'll need for finding out
 

00:51:44.109 --> 00:51:47.250 align:start position:0%
resources you'll need for finding out
what's<00:51:44.319><c> the</c><00:51:44.650><c> latest</c><00:51:44.859><c> in</c><00:51:45.279><c> OpenGL</c><00:51:46.089><c> and</c><00:51:46.390><c> then</c>

00:51:47.250 --> 00:51:47.260 align:start position:0%
what's the latest in OpenGL and then
 

00:51:47.260 --> 00:51:50.250 align:start position:0%
what's the latest in OpenGL and then
there's<00:51:47.529><c> the</c><00:51:47.680><c> lists</c><00:51:48.190><c> at</c><00:51:48.339><c> Apple</c><00:51:48.760><c> comm</c><00:51:49.260><c> where</c>

00:51:50.250 --> 00:51:50.260 align:start position:0%
there's the lists at Apple comm where
 

00:51:50.260 --> 00:51:53.759 align:start position:0%
there's the lists at Apple comm where
you<00:51:50.380><c> can</c><00:51:50.500><c> join</c><00:51:50.740><c> the</c><00:51:51.010><c> Apple</c><00:51:52.000><c> Open</c><00:51:52.750><c> GL</c><00:51:52.900><c> list</c><00:51:53.260><c> and</c>

00:51:53.759 --> 00:51:53.769 align:start position:0%
you can join the Apple Open GL list and
 

00:51:53.769 --> 00:51:56.190 align:start position:0%
you can join the Apple Open GL list and
there's<00:51:54.309><c> lots</c><00:51:54.519><c> of</c><00:51:54.670><c> Macintosh</c><00:51:55.359><c> specific</c>

00:51:56.190 --> 00:51:56.200 align:start position:0%
there's lots of Macintosh specific
 

00:51:56.200 --> 00:51:58.410 align:start position:0%
there's lots of Macintosh specific
discussions<00:51:56.890><c> going</c><00:51:57.039><c> on</c><00:51:57.220><c> in</c><00:51:57.369><c> that</c><00:51:57.400><c> list</c><00:51:57.730><c> where</c>

00:51:58.410 --> 00:51:58.420 align:start position:0%
discussions going on in that list where
 

00:51:58.420 --> 00:52:02.220 align:start position:0%
discussions going on in that list where
you<00:51:58.599><c> can</c><00:51:58.809><c> participate</c><00:51:59.079><c> or</c><00:51:59.650><c> learn</c><00:52:00.510><c> from</c><00:52:01.510><c> some</c>

00:52:02.220 --> 00:52:02.230 align:start position:0%
you can participate or learn from some
 

00:52:02.230 --> 00:52:03.210 align:start position:0%
you can participate or learn from some
of<00:52:02.319><c> the</c><00:52:02.380><c> discussions</c><00:52:02.769><c> that</c><00:52:02.799><c> are</c><00:52:02.890><c> going</c><00:52:03.039><c> on</c>

00:52:03.210 --> 00:52:03.220 align:start position:0%
of the discussions that are going on
 

00:52:03.220 --> 00:52:05.279 align:start position:0%
of the discussions that are going on
there<00:52:03.460><c> or</c><00:52:03.670><c> send</c><00:52:04.359><c> an</c><00:52:04.510><c> email</c><00:52:04.630><c> of</c><00:52:04.900><c> your</c><00:52:04.960><c> own</c><00:52:05.170><c> and</c>

00:52:05.279 --> 00:52:05.289 align:start position:0%
there or send an email of your own and
 

00:52:05.289 --> 00:52:07.589 align:start position:0%
there or send an email of your own and
ask<00:52:05.470><c> a</c><00:52:05.829><c> particularly</c><00:52:06.279><c> difficult</c><00:52:07.119><c> problem</c>

00:52:07.589 --> 00:52:07.599 align:start position:0%
ask a particularly difficult problem
 

00:52:07.599 --> 00:52:14.700 align:start position:0%
ask a particularly difficult problem
that<00:52:07.750><c> you</c><00:52:07.980><c> need</c><00:52:08.980><c> answered</c><00:52:11.130><c> and</c><00:52:12.390><c> lastly</c><00:52:13.529><c> we</c><00:52:14.529><c> met</c>

00:52:14.700 --> 00:52:14.710 align:start position:0%
that you need answered and lastly we met
 

00:52:14.710 --> 00:52:17.009 align:start position:0%
that you need answered and lastly we met
Sergio<00:52:15.069><c> at</c><00:52:15.160><c> the</c><00:52:15.220><c> beginning</c><00:52:15.519><c> here</c><00:52:15.700><c> so</c><00:52:16.029><c> if</c><00:52:16.299><c> you</c>

00:52:17.009 --> 00:52:17.019 align:start position:0%
Sergio at the beginning here so if you
 

00:52:17.019 --> 00:52:19.799 align:start position:0%
Sergio at the beginning here so if you
have<00:52:17.440><c> any</c><00:52:17.880><c> questions</c><00:52:18.880><c> about</c><00:52:18.970><c> OpenGL</c><00:52:19.299><c> at</c><00:52:19.509><c> Apple</c>

00:52:19.799 --> 00:52:19.809 align:start position:0%
have any questions about OpenGL at Apple
 

00:52:19.809 --> 00:52:22.170 align:start position:0%
have any questions about OpenGL at Apple
you<00:52:19.960><c> can</c><00:52:20.109><c> contact</c><00:52:20.440><c> Sergio</c><00:52:20.890><c> and</c><00:52:21.099><c> here's</c><00:52:22.029><c> his</c>

00:52:22.170 --> 00:52:22.180 align:start position:0%
you can contact Sergio and here's his
 

00:52:22.180 --> 00:52:26.999 align:start position:0%
you can contact Sergio and here's his
contact<00:52:22.630><c> information</c><00:52:23.940><c> Sergio</c><00:52:24.940><c> is</c><00:52:25.119><c> our</c><00:52:26.009><c> our</c>

00:52:26.999 --> 00:52:27.009 align:start position:0%
contact information Sergio is our our
 

00:52:27.009 --> 00:52:29.910 align:start position:0%
contact information Sergio is our our
product<00:52:27.759><c> representative</c><00:52:28.329><c> Apple</c><00:52:28.750><c> and</c><00:52:28.930><c> he</c><00:52:29.710><c> can</c>

00:52:29.910 --> 00:52:29.920 align:start position:0%
product representative Apple and he can
 

00:52:29.920 --> 00:52:31.829 align:start position:0%
product representative Apple and he can
direct<00:52:30.849><c> you</c><00:52:31.150><c> to</c><00:52:31.359><c> somebody</c>

00:52:31.829 --> 00:52:31.839 align:start position:0%
direct you to somebody
 

00:52:31.839 --> 00:52:34.230 align:start position:0%
direct you to somebody
in<00:52:32.410><c> Apple</c><00:52:32.710><c> if</c><00:52:32.859><c> he's</c><00:52:33.339><c> not</c><00:52:33.460><c> the</c><00:52:33.609><c> right</c><00:52:33.670><c> person</c><00:52:33.730><c> or</c>

00:52:34.230 --> 00:52:34.240 align:start position:0%
in Apple if he's not the right person or
 

00:52:34.240 --> 00:52:39.109 align:start position:0%
in Apple if he's not the right person or
help<00:52:35.170><c> you</c><00:52:35.349><c> with</c><00:52:35.589><c> some</c><00:52:36.430><c> of</c><00:52:36.460><c> your</c><00:52:36.579><c> product</c><00:52:37.000><c> needs</c>

00:52:39.109 --> 00:52:39.119 align:start position:0%
help you with some of your product needs
 

00:52:39.119 --> 00:52:43.740 align:start position:0%
help you with some of your product needs
and<00:52:40.230><c> lastly</c><00:52:41.230><c> we</c><00:52:41.740><c> have</c><00:52:41.980><c> after</c><00:52:42.730><c> this</c><00:52:42.849><c> session</c><00:52:43.029><c> we</c>

00:52:43.740 --> 00:52:43.750 align:start position:0%
and lastly we have after this session we
 

00:52:43.750 --> 00:52:46.079 align:start position:0%
and lastly we have after this session we
have<00:52:44.160><c> advanced</c><00:52:45.160><c> OpenGL</c><00:52:45.789><c> rendering</c>

00:52:46.079 --> 00:52:46.089 align:start position:0%
have advanced OpenGL rendering
 

00:52:46.089 --> 00:52:47.789 align:start position:0%
have advanced OpenGL rendering
techniques<00:52:46.509><c> it's</c><00:52:47.170><c> a</c><00:52:47.319><c> very</c><00:52:47.500><c> interesting</c>

00:52:47.789 --> 00:52:47.799 align:start position:0%
techniques it's a very interesting
 

00:52:47.799 --> 00:52:52.019 align:start position:0%
techniques it's a very interesting
presentation<00:52:48.220><c> that</c><00:52:49.170><c> will</c><00:52:50.170><c> go</c><00:52:50.319><c> into</c><00:52:51.029><c> utilizing</c>

00:52:52.019 --> 00:52:52.029 align:start position:0%
presentation that will go into utilizing
 

00:52:52.029 --> 00:52:53.640 align:start position:0%
presentation that will go into utilizing
some<00:52:52.390><c> OpenGL</c><00:52:52.720><c> extensions</c><00:52:53.170><c> for</c><00:52:53.410><c> doing</c>

00:52:53.640 --> 00:52:53.650 align:start position:0%
some OpenGL extensions for doing
 

00:52:53.650 --> 00:52:55.950 align:start position:0%
some OpenGL extensions for doing
advanced<00:52:54.009><c> rendering</c><00:52:54.190><c> I</c><00:52:55.000><c> highly</c><00:52:55.450><c> suggest</c><00:52:55.599><c> it</c>

00:52:55.950 --> 00:52:55.960 align:start position:0%
advanced rendering I highly suggest it
 

00:52:55.960 --> 00:53:00.029 align:start position:0%
advanced rendering I highly suggest it
for<00:52:55.990><c> people</c><00:52:56.259><c> that</c><00:52:57.390><c> are</c><00:52:58.390><c> looking</c><00:52:58.720><c> for</c><00:52:59.039><c> new</c>

00:53:00.029 --> 00:53:00.039 align:start position:0%
for people that are looking for new
 

00:53:00.039 --> 00:53:02.609 align:start position:0%
for people that are looking for new
techniques<00:53:00.460><c> and</c><00:53:00.900><c> some</c><00:53:01.900><c> capabilities</c><00:53:02.440><c> of</c>

00:53:02.609 --> 00:53:02.619 align:start position:0%
techniques and some capabilities of
 

00:53:02.619 --> 00:53:05.749 align:start position:0%
techniques and some capabilities of
graphics<00:53:03.400><c> cards</c><00:53:03.700><c> today</c><00:53:04.079><c> it'll</c><00:53:05.079><c> show</c><00:53:05.349><c> you</c><00:53:05.410><c> some</c>

00:53:05.749 --> 00:53:05.759 align:start position:0%
graphics cards today it'll show you some
 

00:53:05.759 --> 00:53:15.830 align:start position:0%
graphics cards today it'll show you some
interesting<00:53:06.759><c> demos</c><00:53:07.359><c> and</c><00:53:07.569><c> some</c><00:53:07.779><c> nice</c><00:53:07.900><c> effects</c>

00:53:15.830 --> 00:53:15.840 align:start position:0%
 
 

00:53:15.840 --> 00:53:17.900 align:start position:0%
 
you

