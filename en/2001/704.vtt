WEBVTT
Kind: captions
Language: en

00:00:03.790 --> 00:00:05.110 align:start position:0%
 
thank<00:00:04.790><c> you</c>

00:00:05.110 --> 00:00:05.120 align:start position:0%
thank you
 

00:00:05.120 --> 00:00:06.820 align:start position:0%
thank you
and<00:00:05.269><c> thank</c><00:00:05.660><c> you</c><00:00:05.720><c> for</c><00:00:05.779><c> it</c><00:00:06.200><c> for</c><00:00:06.470><c> coming</c><00:00:06.740><c> this</c>

00:00:06.820 --> 00:00:06.830 align:start position:0%
and thank you for it for coming this
 

00:00:06.830 --> 00:00:09.250 align:start position:0%
and thank you for it for coming this
morning<00:00:07.010><c> we're</c><00:00:07.939><c> on</c><00:00:08.090><c> the</c><00:00:08.149><c> fourth</c><00:00:08.389><c> day</c><00:00:08.540><c> at</c><00:00:08.660><c> WWDC</c>

00:00:09.250 --> 00:00:09.260 align:start position:0%
morning we're on the fourth day at WWDC
 

00:00:09.260 --> 00:00:11.050 align:start position:0%
morning we're on the fourth day at WWDC
I<00:00:09.440><c> imagine</c><00:00:10.009><c> a</c><00:00:10.070><c> lot</c><00:00:10.220><c> of</c><00:00:10.250><c> you</c><00:00:10.430><c> are</c><00:00:10.580><c> beginning</c><00:00:10.700><c> to</c>

00:00:11.050 --> 00:00:11.060 align:start position:0%
I imagine a lot of you are beginning to
 

00:00:11.060 --> 00:00:13.509 align:start position:0%
I imagine a lot of you are beginning to
hit<00:00:11.150><c> information</c><00:00:11.870><c> overload</c><00:00:12.260><c> I</c><00:00:12.530><c> hope</c><00:00:13.370><c> you</c>

00:00:13.509 --> 00:00:13.519 align:start position:0%
hit information overload I hope you
 

00:00:13.519 --> 00:00:14.799 align:start position:0%
hit information overload I hope you
still<00:00:13.790><c> have</c><00:00:13.820><c> a</c><00:00:13.940><c> lot</c><00:00:14.090><c> of</c><00:00:14.120><c> energy</c><00:00:14.330><c> because</c><00:00:14.690><c> we</c>

00:00:14.799 --> 00:00:14.809 align:start position:0%
still have a lot of energy because we
 

00:00:14.809 --> 00:00:17.070 align:start position:0%
still have a lot of energy because we
have<00:00:14.930><c> a</c><00:00:14.960><c> lot</c><00:00:15.200><c> to</c><00:00:15.230><c> present</c><00:00:15.650><c> in</c><00:00:15.769><c> this</c><00:00:15.889><c> session</c>

00:00:17.070 --> 00:00:17.080 align:start position:0%
have a lot to present in this session
 

00:00:17.080 --> 00:00:19.510 align:start position:0%
have a lot to present in this session
compilers<00:00:18.080><c> and</c><00:00:18.320><c> compilers</c><00:00:19.100><c> are</c><00:00:19.130><c> such</c><00:00:19.400><c> an</c>

00:00:19.510 --> 00:00:19.520 align:start position:0%
compilers and compilers are such an
 

00:00:19.520 --> 00:00:21.100 align:start position:0%
compilers and compilers are such an
essential<00:00:19.789><c> part</c><00:00:20.119><c> of</c><00:00:20.240><c> development</c><00:00:20.630><c> tools</c><00:00:20.930><c> were</c>

00:00:21.100 --> 00:00:21.110 align:start position:0%
essential part of development tools were
 

00:00:21.110 --> 00:00:22.900 align:start position:0%
essential part of development tools were
all<00:00:21.289><c> affected</c><00:00:21.619><c> by</c><00:00:21.860><c> their</c><00:00:22.100><c> performance</c><00:00:22.279><c> we</c>

00:00:22.900 --> 00:00:22.910 align:start position:0%
all affected by their performance we
 

00:00:22.910 --> 00:00:24.340 align:start position:0%
all affected by their performance we
have<00:00:22.940><c> a</c><00:00:23.060><c> lot</c><00:00:23.270><c> of</c><00:00:23.360><c> things</c><00:00:23.539><c> to</c><00:00:23.690><c> say</c><00:00:23.840><c> about</c><00:00:24.080><c> that</c>

00:00:24.340 --> 00:00:24.350 align:start position:0%
have a lot of things to say about that
 

00:00:24.350 --> 00:00:25.960 align:start position:0%
have a lot of things to say about that
we'd<00:00:24.859><c> be</c><00:00:24.980><c> interested</c><00:00:25.190><c> to</c><00:00:25.520><c> know</c><00:00:25.550><c> how</c><00:00:25.699><c> many</c>

00:00:25.960 --> 00:00:25.970 align:start position:0%
we'd be interested to know how many
 

00:00:25.970 --> 00:00:27.970 align:start position:0%
we'd be interested to know how many
people<00:00:26.150><c> in</c><00:00:26.449><c> the</c><00:00:26.539><c> audience</c><00:00:26.660><c> have</c><00:00:27.109><c> downloaded</c>

00:00:27.970 --> 00:00:27.980 align:start position:0%
people in the audience have downloaded
 

00:00:27.980 --> 00:00:31.660 align:start position:0%
people in the audience have downloaded
the<00:00:28.189><c> Darwin</c><00:00:28.580><c> the</c><00:00:29.150><c> darwin</c><00:00:29.480><c> source</c><00:00:30.170><c> set</c><00:00:30.670><c> just</c>

00:00:31.660 --> 00:00:31.670 align:start position:0%
the Darwin the darwin source set just
 

00:00:31.670 --> 00:00:33.729 align:start position:0%
the Darwin the darwin source set just
raise<00:00:31.850><c> your</c><00:00:31.880><c> hands</c><00:00:32.269><c> how</c><00:00:32.599><c> about</c><00:00:32.809><c> half</c><00:00:33.050><c> two</c>

00:00:33.729 --> 00:00:33.739 align:start position:0%
raise your hands how about half two
 

00:00:33.739 --> 00:00:35.680 align:start position:0%
raise your hands how about half two
thirds<00:00:34.030><c> okay</c><00:00:35.030><c> how</c><00:00:35.180><c> many</c><00:00:35.270><c> people</c><00:00:35.390><c> actually</c>

00:00:35.680 --> 00:00:35.690 align:start position:0%
thirds okay how many people actually
 

00:00:35.690 --> 00:00:41.190 align:start position:0%
thirds okay how many people actually
contribute<00:00:36.380><c> to</c><00:00:36.500><c> the</c><00:00:36.620><c> Darwin</c><00:00:37.630><c> repositories</c><00:00:38.630><c> a</c>

00:00:41.190 --> 00:00:41.200 align:start position:0%
 
 

00:00:41.200 --> 00:00:44.590 align:start position:0%
 
lot<00:00:42.200><c> fewer</c><00:00:42.469><c> okay</c><00:00:43.340><c> with</c><00:00:43.820><c> no</c><00:00:43.969><c> further</c><00:00:44.180><c> ado</c><00:00:44.510><c> I'd</c>

00:00:44.590 --> 00:00:44.600 align:start position:0%
lot fewer okay with no further ado I'd
 

00:00:44.600 --> 00:00:46.869 align:start position:0%
lot fewer okay with no further ado I'd
like<00:00:44.630><c> to</c><00:00:44.809><c> introduce</c><00:00:45.010><c> John</c><00:00:46.010><c> Graziano</c><00:00:46.520><c> the</c>

00:00:46.869 --> 00:00:46.879 align:start position:0%
like to introduce John Graziano the
 

00:00:46.879 --> 00:01:01.510 align:start position:0%
like to introduce John Graziano the
manager<00:00:47.329><c> of</c><00:00:47.360><c> the</c><00:00:47.690><c> compiler</c><00:00:48.079><c> team</c><00:01:00.309><c> so</c><00:01:01.309><c> today</c>

00:01:01.510 --> 00:01:01.520 align:start position:0%
manager of the compiler team so today
 

00:01:01.520 --> 00:01:03.880 align:start position:0%
manager of the compiler team so today
we're<00:01:01.610><c> going</c><00:01:01.730><c> to</c><00:01:01.789><c> be</c><00:01:01.850><c> talking</c><00:01:02.149><c> about</c><00:01:02.680><c> Mac</c><00:01:03.680><c> OS</c>

00:01:03.880 --> 00:01:03.890 align:start position:0%
we're going to be talking about Mac OS
 

00:01:03.890 --> 00:01:05.499 align:start position:0%
we're going to be talking about Mac OS
10<00:01:03.920><c> compiler</c><00:01:04.460><c> technologies</c><00:01:05.089><c> and</c><00:01:05.299><c> I</c><00:01:05.329><c> just</c>

00:01:05.499 --> 00:01:05.509 align:start position:0%
10 compiler technologies and I just
 

00:01:05.509 --> 00:01:07.330 align:start position:0%
10 compiler technologies and I just
wanted<00:01:05.689><c> to</c><00:01:05.869><c> say</c><00:01:06.560><c> a</c><00:01:06.590><c> little</c><00:01:06.740><c> bit</c><00:01:06.920><c> about</c><00:01:07.100><c> what</c>

00:01:07.330 --> 00:01:07.340 align:start position:0%
wanted to say a little bit about what
 

00:01:07.340 --> 00:01:11.289 align:start position:0%
wanted to say a little bit about what
those<00:01:07.520><c> are</c><00:01:07.789><c> on</c><00:01:08.090><c> my</c><00:01:09.020><c> team</c><00:01:09.850><c> we</c><00:01:10.850><c> handle</c><00:01:11.240><c> the</c>

00:01:11.289 --> 00:01:11.299 align:start position:0%
those are on my team we handle the
 

00:01:11.299 --> 00:01:15.399 align:start position:0%
those are on my team we handle the
compiler<00:01:11.779><c> which</c><00:01:11.929><c> is</c><00:01:12.049><c> GCC</c><00:01:12.649><c> the</c><00:01:13.840><c> assembler</c><00:01:14.840><c> the</c>

00:01:15.399 --> 00:01:15.409 align:start position:0%
compiler which is GCC the assembler the
 

00:01:15.409 --> 00:01:18.879 align:start position:0%
compiler which is GCC the assembler the
linker<00:01:16.119><c> the</c><00:01:17.119><c> dynamic</c><00:01:17.599><c> loader</c><00:01:17.840><c> which</c><00:01:18.139><c> is</c>

00:01:18.879 --> 00:01:18.889 align:start position:0%
linker the dynamic loader which is
 

00:01:18.889 --> 00:01:20.349 align:start position:0%
linker the dynamic loader which is
responsible<00:01:19.459><c> for</c><00:01:19.729><c> starting</c><00:01:20.209><c> up</c><00:01:20.329><c> your</c>

00:01:20.349 --> 00:01:20.359 align:start position:0%
responsible for starting up your
 

00:01:20.359 --> 00:01:23.289 align:start position:0%
responsible for starting up your
application<00:01:20.630><c> and</c><00:01:21.229><c> a</c><00:01:22.189><c> lot</c><00:01:22.369><c> of</c><00:01:22.520><c> utilities</c><00:01:23.029><c> like</c>

00:01:23.289 --> 00:01:23.299 align:start position:0%
application and a lot of utilities like
 

00:01:23.299 --> 00:01:28.510 align:start position:0%
application and a lot of utilities like
strip<00:01:23.659><c> nm</c><00:01:24.279><c> o'toole</c><00:01:25.279><c> and</c><00:01:25.609><c> a</c><00:01:25.639><c> few</c><00:01:25.849><c> others</c><00:01:27.520><c> the</c>

00:01:28.510 --> 00:01:28.520 align:start position:0%
strip nm o'toole and a few others the
 

00:01:28.520 --> 00:01:29.859 align:start position:0%
strip nm o'toole and a few others the
point<00:01:28.819><c> that</c><00:01:28.909><c> we</c><00:01:29.029><c> want</c><00:01:29.240><c> to</c><00:01:29.329><c> make</c><00:01:29.479><c> throughout</c>

00:01:29.859 --> 00:01:29.869 align:start position:0%
point that we want to make throughout
 

00:01:29.869 --> 00:01:31.839 align:start position:0%
point that we want to make throughout
this<00:01:30.049><c> talk</c><00:01:30.319><c> is</c><00:01:30.529><c> that</c><00:01:30.709><c> while</c><00:01:31.130><c> all</c><00:01:31.369><c> of</c><00:01:31.520><c> these</c><00:01:31.639><c> are</c>

00:01:31.839 --> 00:01:31.849 align:start position:0%
this talk is that while all of these are
 

00:01:31.849 --> 00:01:35.529 align:start position:0%
this talk is that while all of these are
usable<00:01:32.359><c> as</c><00:01:32.889><c> command-line</c><00:01:33.889><c> tools</c><00:01:34.539><c> the</c>

00:01:35.529 --> 00:01:35.539 align:start position:0%
usable as command-line tools the
 

00:01:35.539 --> 00:01:37.629 align:start position:0%
usable as command-line tools the
recommended<00:01:36.079><c> way</c><00:01:36.259><c> that</c><00:01:36.499><c> we</c><00:01:36.649><c> want</c><00:01:36.889><c> for</c><00:01:37.579><c> people</c>

00:01:37.629 --> 00:01:37.639 align:start position:0%
recommended way that we want for people
 

00:01:37.639 --> 00:01:40.300 align:start position:0%
recommended way that we want for people
to<00:01:37.939><c> use</c><00:01:38.179><c> GCC</c><00:01:39.109><c> is</c><00:01:39.289><c> through</c><00:01:39.560><c> project</c><00:01:40.039><c> builder</c>

00:01:40.300 --> 00:01:40.310 align:start position:0%
to use GCC is through project builder
 

00:01:40.310 --> 00:01:41.559 align:start position:0%
to use GCC is through project builder
we've<00:01:40.459><c> got</c><00:01:40.639><c> a</c><00:01:40.669><c> lot</c><00:01:40.880><c> of</c><00:01:40.909><c> nice</c><00:01:41.119><c> things</c><00:01:41.450><c> in</c>

00:01:41.559 --> 00:01:41.569 align:start position:0%
we've got a lot of nice things in
 

00:01:41.569 --> 00:01:45.580 align:start position:0%
we've got a lot of nice things in
project<00:01:41.959><c> builder</c><00:01:42.169><c> to</c><00:01:42.259><c> integrate</c><00:01:42.619><c> with</c><00:01:42.740><c> it</c><00:01:44.590><c> so</c>

00:01:45.580 --> 00:01:45.590 align:start position:0%
project builder to integrate with it so
 

00:01:45.590 --> 00:01:46.719 align:start position:0%
project builder to integrate with it so
we're<00:01:45.709><c> not</c><00:01:45.739><c> going</c><00:01:45.919><c> to</c><00:01:46.009><c> cover</c><00:01:46.130><c> all</c><00:01:46.249><c> of</c><00:01:46.459><c> these</c>

00:01:46.719 --> 00:01:46.729 align:start position:0%
we're not going to cover all of these
 

00:01:46.729 --> 00:01:48.969 align:start position:0%
we're not going to cover all of these
things<00:01:47.029><c> today</c><00:01:47.239><c> but</c><00:01:47.630><c> what</c><00:01:48.289><c> we</c><00:01:48.409><c> will</c><00:01:48.529><c> talk</c><00:01:48.799><c> about</c>

00:01:48.969 --> 00:01:48.979 align:start position:0%
things today but what we will talk about
 

00:01:48.979 --> 00:01:52.690 align:start position:0%
things today but what we will talk about
is<00:01:49.899><c> how</c><00:01:50.899><c> to</c><00:01:50.929><c> use</c><00:01:51.229><c> GCC</c><00:01:51.919><c> and</c><00:01:52.310><c> give</c><00:01:52.459><c> you</c><00:01:52.549><c> a</c><00:01:52.579><c> little</c>

00:01:52.690 --> 00:01:52.700 align:start position:0%
is how to use GCC and give you a little
 

00:01:52.700 --> 00:01:55.059 align:start position:0%
is how to use GCC and give you a little
overview<00:01:52.880><c> of</c><00:01:53.179><c> the</c><00:01:53.270><c> architecture</c><00:01:54.039><c> touch</c><00:01:55.039><c> a</c>

00:01:55.059 --> 00:01:55.069 align:start position:0%
overview of the architecture touch a
 

00:01:55.069 --> 00:01:57.129 align:start position:0%
overview of the architecture touch a
little<00:01:55.399><c> bit</c><00:01:55.520><c> on</c><00:01:55.669><c> dynamic</c><00:01:56.450><c> linking</c><00:01:56.810><c> and</c><00:01:56.959><c> pre</c>

00:01:57.129 --> 00:01:57.139 align:start position:0%
little bit on dynamic linking and pre
 

00:01:57.139 --> 00:02:03.399 align:start position:0%
little bit on dynamic linking and pre
binding<00:01:59.770><c> popular</c><00:02:00.770><c> subject</c><00:02:01.329><c> and</c><00:02:02.329><c> also</c><00:02:03.200><c> talk</c>

00:02:03.399 --> 00:02:03.409 align:start position:0%
binding popular subject and also talk
 

00:02:03.409 --> 00:02:08.520 align:start position:0%
binding popular subject and also talk
about<00:02:03.679><c> some</c><00:02:04.369><c> of</c><00:02:04.399><c> the</c><00:02:04.669><c> upcoming</c><00:02:05.059><c> features</c>

00:02:08.520 --> 00:02:08.530 align:start position:0%
 
 

00:02:08.530 --> 00:02:15.630 align:start position:0%
 
Thanks<00:02:13.800><c> okay</c><00:02:14.800><c> there's</c><00:02:15.010><c> two</c><00:02:15.190><c> slides</c><00:02:15.459><c> on</c>

00:02:15.630 --> 00:02:15.640 align:start position:0%
Thanks okay there's two slides on
 

00:02:15.640 --> 00:02:16.740 align:start position:0%
Thanks okay there's two slides on
upcoming<00:02:16.000><c> features</c><00:02:16.300><c> they</c><00:02:16.420><c> don't</c><00:02:16.569><c> get</c><00:02:16.660><c> too</c>

00:02:16.740 --> 00:02:16.750 align:start position:0%
upcoming features they don't get too
 

00:02:16.750 --> 00:02:19.430 align:start position:0%
upcoming features they don't get too
excited

00:02:19.430 --> 00:02:19.440 align:start position:0%
 
 

00:02:19.440 --> 00:02:23.910 align:start position:0%
 
so<00:02:20.440><c> the</c><00:02:20.650><c> the</c><00:02:20.950><c> GNU</c><00:02:21.160><c> C</c><00:02:21.370><c> compiler</c><00:02:22.620><c> this</c><00:02:23.620><c> is</c><00:02:23.770><c> this</c>

00:02:23.910 --> 00:02:23.920 align:start position:0%
so the the GNU C compiler this is this
 

00:02:23.920 --> 00:02:26.130 align:start position:0%
so the the GNU C compiler this is this
the<00:02:24.280><c> main</c><00:02:24.430><c> compiler</c><00:02:24.970><c> for</c><00:02:25.120><c> Mac</c><00:02:25.270><c> OS</c><00:02:25.540><c> 10</c><00:02:25.569><c> and</c><00:02:25.989><c> for</c>

00:02:26.130 --> 00:02:26.140 align:start position:0%
the main compiler for Mac OS 10 and for
 

00:02:26.140 --> 00:02:27.720 align:start position:0%
the main compiler for Mac OS 10 and for
those<00:02:26.230><c> of</c><00:02:26.410><c> you</c><00:02:26.500><c> that</c><00:02:26.680><c> are</c><00:02:26.830><c> curious</c><00:02:27.280><c> looking</c>

00:02:27.720 --> 00:02:27.730 align:start position:0%
those of you that are curious looking
 

00:02:27.730 --> 00:02:30.449 align:start position:0%
those of you that are curious looking
for<00:02:28.000><c> it</c><00:02:28.120><c> it's</c><00:02:28.330><c> a</c><00:02:28.450><c> basically</c><00:02:29.230><c> user</c><00:02:29.500><c> bin</c><00:02:29.770><c> CC</c><00:02:30.220><c> for</c>

00:02:30.449 --> 00:02:30.459 align:start position:0%
for it it's a basically user bin CC for
 

00:02:30.459 --> 00:02:33.030 align:start position:0%
for it it's a basically user bin CC for
UNIX<00:02:30.730><c> heads</c><00:02:30.910><c> in</c><00:02:31.060><c> the</c><00:02:31.150><c> audience</c><00:02:31.739><c> it's</c><00:02:32.739><c> free</c>

00:02:33.030 --> 00:02:33.040 align:start position:0%
UNIX heads in the audience it's free
 

00:02:33.040 --> 00:02:35.900 align:start position:0%
UNIX heads in the audience it's free
software<00:02:34.020><c> by</c><00:02:35.020><c> the</c><00:02:35.080><c> free</c><00:02:35.410><c> software</c><00:02:35.590><c> foundation</c>

00:02:35.900 --> 00:02:35.910 align:start position:0%
software by the free software foundation
 

00:02:35.910 --> 00:02:38.130 align:start position:0%
software by the free software foundation
if<00:02:36.910><c> you're</c><00:02:37.030><c> curious</c><00:02:37.239><c> about</c><00:02:37.450><c> that</c><00:02:37.750><c> you</c><00:02:37.900><c> can</c><00:02:38.020><c> go</c>

00:02:38.130 --> 00:02:38.140 align:start position:0%
if you're curious about that you can go
 

00:02:38.140 --> 00:02:39.990 align:start position:0%
if you're curious about that you can go
to<00:02:38.170><c> the</c><00:02:38.380><c> new</c><00:02:38.500><c> org</c><00:02:38.950><c> on</c><00:02:39.160><c> the</c><00:02:39.310><c> web</c><00:02:39.489><c> and</c><00:02:39.970><c> look</c>

00:02:39.990 --> 00:02:40.000 align:start position:0%
to the new org on the web and look
 

00:02:40.000 --> 00:02:41.250 align:start position:0%
to the new org on the web and look
around<00:02:40.360><c> there</c>

00:02:41.250 --> 00:02:41.260 align:start position:0%
around there
 

00:02:41.260 --> 00:02:44.750 align:start position:0%
around there
it<00:02:41.920><c> supports</c><00:02:42.340><c> ANSI</c><00:02:42.730><c> C</c><00:02:42.910><c> C++</c><00:02:43.269><c> and</c><00:02:43.780><c> Objective</c><00:02:44.200><c> C</c>

00:02:44.750 --> 00:02:44.760 align:start position:0%
it supports ANSI C C++ and Objective C
 

00:02:44.760 --> 00:02:47.430 align:start position:0%
it supports ANSI C C++ and Objective C
it's<00:02:45.760><c> got</c><00:02:45.940><c> a</c><00:02:45.970><c> very</c><00:02:46.269><c> robust</c><00:02:46.720><c> C++</c>

00:02:47.430 --> 00:02:47.440 align:start position:0%
it's got a very robust C++
 

00:02:47.440 --> 00:02:49.770 align:start position:0%
it's got a very robust C++
implementation<00:02:47.650><c> very</c><00:02:48.370><c> robust</c><00:02:48.640><c> C++</c><00:02:49.269><c> front-end</c>

00:02:49.770 --> 00:02:49.780 align:start position:0%
implementation very robust C++ front-end
 

00:02:49.780 --> 00:02:52.560 align:start position:0%
implementation very robust C++ front-end
it's<00:02:50.739><c> got</c><00:02:50.890><c> many</c><00:02:51.070><c> years</c><00:02:51.430><c> of</c><00:02:51.640><c> work</c><00:02:51.880><c> and</c><00:02:52.090><c> testing</c>

00:02:52.560 --> 00:02:52.570 align:start position:0%
it's got many years of work and testing
 

00:02:52.570 --> 00:02:54.780 align:start position:0%
it's got many years of work and testing
compiles<00:02:53.170><c> for</c><00:02:53.380><c> tons</c><00:02:53.680><c> and</c><00:02:53.950><c> tons</c><00:02:53.980><c> of</c><00:02:54.220><c> platforms</c>

00:02:54.780 --> 00:02:54.790 align:start position:0%
compiles for tons and tons of platforms
 

00:02:54.790 --> 00:02:56.940 align:start position:0%
compiles for tons and tons of platforms
it's<00:02:55.510><c> basically</c><00:02:55.900><c> the</c><00:02:56.080><c> reference</c><00:02:56.470><c> compiler</c>

00:02:56.940 --> 00:02:56.950 align:start position:0%
it's basically the reference compiler
 

00:02:56.950 --> 00:02:59.070 align:start position:0%
it's basically the reference compiler
for<00:02:57.160><c> many</c><00:02:57.310><c> developers</c><00:02:57.880><c> it's</c><00:02:58.120><c> used</c><00:02:58.390><c> in</c>

00:02:59.070 --> 00:02:59.080 align:start position:0%
for many developers it's used in
 

00:02:59.080 --> 00:03:01.830 align:start position:0%
for many developers it's used in
education<00:02:59.739><c> all</c><00:02:59.860><c> over</c><00:02:59.890><c> the</c><00:03:00.130><c> place</c><00:03:00.450><c> and</c><00:03:01.450><c> the</c>

00:03:01.830 --> 00:03:01.840 align:start position:0%
education all over the place and the
 

00:03:01.840 --> 00:03:03.870 align:start position:0%
education all over the place and the
most<00:03:01.959><c> important</c><00:03:02.410><c> thing</c><00:03:02.530><c> is</c><00:03:02.709><c> it</c><00:03:02.830><c> compiles</c><00:03:03.610><c> all</c>

00:03:03.870 --> 00:03:03.880 align:start position:0%
most important thing is it compiles all
 

00:03:03.880 --> 00:03:06.059 align:start position:0%
most important thing is it compiles all
of<00:03:04.150><c> Mac</c><00:03:04.330><c> OS</c><00:03:04.360><c> 10</c><00:03:04.630><c> every</c><00:03:05.200><c> piece</c><00:03:05.410><c> of</c><00:03:05.440><c> source</c><00:03:05.769><c> code</c>

00:03:06.059 --> 00:03:06.069 align:start position:0%
of Mac OS 10 every piece of source code
 

00:03:06.069 --> 00:03:11.120 align:start position:0%
of Mac OS 10 every piece of source code
that<00:03:07.060><c> runs</c><00:03:07.300><c> on</c><00:03:07.569><c> Mac</c><00:03:07.750><c> OS</c><00:03:08.019><c> 10</c><00:03:08.050><c> goes</c><00:03:08.769><c> through</c><00:03:09.040><c> GCC</c>

00:03:11.120 --> 00:03:11.130 align:start position:0%
that runs on Mac OS 10 goes through GCC
 

00:03:11.130 --> 00:03:14.160 align:start position:0%
that runs on Mac OS 10 goes through GCC
so<00:03:12.130><c> a</c><00:03:12.160><c> little</c><00:03:12.459><c> overview</c><00:03:12.790><c> of</c><00:03:13.000><c> GCC</c><00:03:13.690><c> for</c><00:03:13.930><c> those</c><00:03:14.049><c> of</c>

00:03:14.160 --> 00:03:14.170 align:start position:0%
so a little overview of GCC for those of
 

00:03:14.170 --> 00:03:15.509 align:start position:0%
so a little overview of GCC for those of
you<00:03:14.260><c> that</c><00:03:14.410><c> aren't</c><00:03:14.530><c> familiar</c><00:03:14.739><c> with</c><00:03:15.100><c> it</c><00:03:15.280><c> it</c><00:03:15.370><c> is</c><00:03:15.400><c> a</c>

00:03:15.509 --> 00:03:15.519 align:start position:0%
you that aren't familiar with it it is a
 

00:03:15.519 --> 00:03:19.890 align:start position:0%
you that aren't familiar with it it is a
command-line<00:03:16.000><c> tool</c><00:03:17.100><c> and</c><00:03:18.239><c> it</c><00:03:19.239><c> basically</c><00:03:19.660><c> takes</c>

00:03:19.890 --> 00:03:19.900 align:start position:0%
command-line tool and it basically takes
 

00:03:19.900 --> 00:03:23.280 align:start position:0%
command-line tool and it basically takes
C<00:03:20.140><c> files</c><00:03:20.410><c> for</c><00:03:21.250><c> and</c><00:03:21.610><c> puts</c><00:03:21.970><c> out</c><00:03:22.150><c> dot</c><00:03:22.690><c> o</c><00:03:22.720><c> files</c><00:03:23.110><c> or</c>

00:03:23.280 --> 00:03:23.290 align:start position:0%
C files for and puts out dot o files or
 

00:03:23.290 --> 00:03:24.720 align:start position:0%
C files for and puts out dot o files or
object<00:03:23.650><c> files</c><00:03:23.829><c> which</c><00:03:24.070><c> we</c><00:03:24.160><c> then</c><00:03:24.310><c> send</c><00:03:24.579><c> to</c><00:03:24.610><c> the</c>

00:03:24.720 --> 00:03:24.730 align:start position:0%
object files which we then send to the
 

00:03:24.730 --> 00:03:27.240 align:start position:0%
object files which we then send to the
linker<00:03:25.060><c> but</c><00:03:25.959><c> behind</c><00:03:26.620><c> the</c><00:03:26.799><c> scenes</c><00:03:26.829><c> which</c>

00:03:27.240 --> 00:03:27.250 align:start position:0%
linker but behind the scenes which
 

00:03:27.250 --> 00:03:29.069 align:start position:0%
linker but behind the scenes which
actually<00:03:27.549><c> going</c><00:03:27.700><c> on</c><00:03:27.880><c> is</c><00:03:28.060><c> GCC</c><00:03:28.510><c> is</c><00:03:28.600><c> a</c><00:03:28.630><c> driver</c>

00:03:29.069 --> 00:03:29.079 align:start position:0%
actually going on is GCC is a driver
 

00:03:29.079 --> 00:03:37.229 align:start position:0%
actually going on is GCC is a driver
that<00:03:29.470><c> first</c><00:03:30.370><c> invokes</c><00:03:34.739><c> there</c><00:03:35.739><c> we</c><00:03:35.829><c> go</c><00:03:36.150><c> it's</c><00:03:37.150><c> the</c>

00:03:37.229 --> 00:03:37.239 align:start position:0%
that first invokes there we go it's the
 

00:03:37.239 --> 00:03:39.030 align:start position:0%
that first invokes there we go it's the
only<00:03:37.390><c> graphic</c><00:03:37.900><c> I</c><00:03:38.049><c> have</c><00:03:38.260><c> today</c><00:03:38.620><c> I</c><00:03:38.680><c> want</c><00:03:38.859><c> it</c><00:03:38.950><c> to</c>

00:03:39.030 --> 00:03:39.040 align:start position:0%
only graphic I have today I want it to
 

00:03:39.040 --> 00:03:41.520 align:start position:0%
only graphic I have today I want it to
work<00:03:39.420><c> if</c><00:03:40.420><c> first</c><00:03:40.720><c> invokes</c><00:03:40.989><c> a</c><00:03:41.109><c> preprocessor</c>

00:03:41.520 --> 00:03:41.530 align:start position:0%
work if first invokes a preprocessor
 

00:03:41.530 --> 00:03:45.680 align:start position:0%
work if first invokes a preprocessor
which<00:03:42.130><c> outputs</c><00:03:42.579><c> pre-process</c><00:03:43.239><c> source</c><00:03:43.480><c> code</c>

00:03:45.680 --> 00:03:45.690 align:start position:0%
which outputs pre-process source code
 

00:03:45.690 --> 00:03:48.569 align:start position:0%
which outputs pre-process source code
that<00:03:46.690><c> then</c><00:03:46.930><c> is</c><00:03:47.049><c> fed</c><00:03:47.260><c> into</c><00:03:47.470><c> the</c><00:03:47.620><c> compiler</c><00:03:48.100><c> which</c>

00:03:48.569 --> 00:03:48.579 align:start position:0%
that then is fed into the compiler which
 

00:03:48.579 --> 00:03:50.849 align:start position:0%
that then is fed into the compiler which
outputs<00:03:49.000><c> assembler</c><00:03:49.359><c> code</c><00:03:49.390><c> it</c><00:03:50.350><c> then</c><00:03:50.530><c> invokes</c>

00:03:50.849 --> 00:03:50.859 align:start position:0%
outputs assembler code it then invokes
 

00:03:50.859 --> 00:03:53.340 align:start position:0%
outputs assembler code it then invokes
the<00:03:51.010><c> link</c><00:03:51.220><c> the</c><00:03:51.459><c> assembler</c><00:03:51.910><c> which</c><00:03:52.900><c> outputs</c>

00:03:53.340 --> 00:03:53.350 align:start position:0%
the link the assembler which outputs
 

00:03:53.350 --> 00:03:55.770 align:start position:0%
the link the assembler which outputs
object<00:03:53.769><c> code</c><00:03:53.980><c> and</c><00:03:54.220><c> finally</c><00:03:55.209><c> that</c><00:03:55.359><c> goes</c><00:03:55.540><c> to</c><00:03:55.690><c> the</c>

00:03:55.770 --> 00:03:55.780 align:start position:0%
object code and finally that goes to the
 

00:03:55.780 --> 00:03:57.030 align:start position:0%
object code and finally that goes to the
linker<00:03:56.049><c> which</c><00:03:56.230><c> binds</c><00:03:56.530><c> everything</c><00:03:56.799><c> together</c>

00:03:57.030 --> 00:03:57.040 align:start position:0%
linker which binds everything together
 

00:03:57.040 --> 00:03:59.009 align:start position:0%
linker which binds everything together
and<00:03:57.459><c> creates</c><00:03:58.209><c> your</c><00:03:58.299><c> application</c><00:03:58.870><c> or</c><00:03:58.989><c> your</c>

00:03:59.009 --> 00:03:59.019 align:start position:0%
and creates your application or your
 

00:03:59.019 --> 00:04:00.720 align:start position:0%
and creates your application or your
library<00:03:59.260><c> or</c><00:03:59.530><c> whatever</c><00:03:59.799><c> your</c><00:04:00.040><c> you're</c><00:04:00.370><c> making</c>

00:04:00.720 --> 00:04:00.730 align:start position:0%
library or whatever your you're making
 

00:04:00.730 --> 00:04:03.000 align:start position:0%
library or whatever your you're making
all<00:04:01.329><c> this</c><00:04:01.570><c> happens</c><00:04:01.959><c> behind</c><00:04:02.140><c> the</c><00:04:02.410><c> scenes</c><00:04:02.500><c> but</c>

00:04:03.000 --> 00:04:03.010 align:start position:0%
all this happens behind the scenes but
 

00:04:03.010 --> 00:04:04.470 align:start position:0%
all this happens behind the scenes but
the<00:04:03.160><c> important</c><00:04:03.549><c> thing</c><00:04:03.579><c> to</c><00:04:03.760><c> keep</c><00:04:03.850><c> in</c><00:04:04.000><c> mind</c><00:04:04.269><c> is</c>

00:04:04.470 --> 00:04:04.480 align:start position:0%
the important thing to keep in mind is
 

00:04:04.480 --> 00:04:06.090 align:start position:0%
the important thing to keep in mind is
that<00:04:04.630><c> there</c><00:04:04.810><c> are</c><00:04:04.900><c> a</c><00:04:04.930><c> lot</c><00:04:05.140><c> of</c><00:04:05.170><c> switches</c><00:04:05.829><c> if</c><00:04:06.010><c> you</c>

00:04:06.090 --> 00:04:06.100 align:start position:0%
that there are a lot of switches if you
 

00:04:06.100 --> 00:04:08.370 align:start position:0%
that there are a lot of switches if you
look<00:04:06.280><c> at</c><00:04:06.400><c> the</c><00:04:06.489><c> documentation</c><00:04:07.000><c> that</c><00:04:07.329><c> can</c><00:04:08.260><c> be</c>

00:04:08.370 --> 00:04:08.380 align:start position:0%
look at the documentation that can be
 

00:04:08.380 --> 00:04:11.930 align:start position:0%
look at the documentation that can be
sent<00:04:08.650><c> to</c><00:04:08.739><c> any</c><00:04:08.829><c> portion</c><00:04:09.370><c> of</c><00:04:09.609><c> these</c><00:04:10.109><c> these</c><00:04:11.109><c> sub</c>

00:04:11.930 --> 00:04:11.940 align:start position:0%
sent to any portion of these these sub
 

00:04:11.940 --> 00:04:15.479 align:start position:0%
sent to any portion of these these sub
processes<00:04:13.170><c> to</c><00:04:14.170><c> control</c><00:04:14.590><c> a</c><00:04:14.620><c> lot</c><00:04:15.010><c> of</c><00:04:15.040><c> what</c><00:04:15.280><c> goes</c>

00:04:15.479 --> 00:04:15.489 align:start position:0%
processes to control a lot of what goes
 

00:04:15.489 --> 00:04:19.620 align:start position:0%
processes to control a lot of what goes
on<00:04:15.670><c> during</c><00:04:16.090><c> this</c><00:04:16.299><c> process</c><00:04:18.299><c> so</c><00:04:19.299><c> what</c><00:04:19.479><c> we've</c>

00:04:19.620 --> 00:04:19.630 align:start position:0%
on during this process so what we've
 

00:04:19.630 --> 00:04:22.110 align:start position:0%
on during this process so what we've
done<00:04:19.780><c> at</c><00:04:19.959><c> Apple</c><00:04:20.320><c> is</c><00:04:20.500><c> we've</c><00:04:21.039><c> taken</c><00:04:21.280><c> C</c>

00:04:22.110 --> 00:04:22.120 align:start position:0%
done at Apple is we've taken C
 

00:04:22.120 --> 00:04:24.200 align:start position:0%
done at Apple is we've taken C
see<00:04:22.300><c> and</c><00:04:22.630><c> we've</c><00:04:22.750><c> extended</c><00:04:23.110><c> it</c><00:04:23.380><c> in</c><00:04:23.650><c> a</c><00:04:23.800><c> few</c><00:04:24.010><c> ways</c>

00:04:24.200 --> 00:04:24.210 align:start position:0%
see and we've extended it in a few ways
 

00:04:24.210 --> 00:04:27.080 align:start position:0%
see and we've extended it in a few ways
we've<00:04:25.210><c> added</c><00:04:25.389><c> project</c><00:04:25.870><c> builder</c><00:04:26.080><c> integration</c>

00:04:27.080 --> 00:04:27.090 align:start position:0%
we've added project builder integration
 

00:04:27.090 --> 00:04:29.490 align:start position:0%
we've added project builder integration
we've<00:04:28.090><c> added</c><00:04:28.300><c> objective-c</c><00:04:28.870><c> this</c><00:04:29.260><c> has</c><00:04:29.380><c> been</c>

00:04:29.490 --> 00:04:29.500 align:start position:0%
we've added objective-c this has been
 

00:04:29.500 --> 00:04:31.969 align:start position:0%
we've added objective-c this has been
added<00:04:29.770><c> for</c><00:04:29.949><c> a</c><00:04:29.979><c> while</c><00:04:30.220><c> but</c><00:04:31.150><c> now</c><00:04:31.330><c> I'd</c><00:04:31.690><c> like</c><00:04:31.810><c> to</c>

00:04:31.969 --> 00:04:31.979 align:start position:0%
added for a while but now I'd like to
 

00:04:31.979 --> 00:04:34.710 align:start position:0%
added for a while but now I'd like to
I'm<00:04:32.979><c> happy</c><00:04:33.310><c> to</c><00:04:33.400><c> say</c><00:04:33.580><c> that</c><00:04:33.610><c> we</c><00:04:34.000><c> are</c><00:04:34.210><c> the</c><00:04:34.240><c> owners</c>

00:04:34.710 --> 00:04:34.720 align:start position:0%
I'm happy to say that we are the owners
 

00:04:34.720 --> 00:04:37.080 align:start position:0%
I'm happy to say that we are the owners
of<00:04:34.750><c> Objective</c><00:04:35.290><c> C</c><00:04:35.320><c> for</c><00:04:35.740><c> the</c><00:04:36.729><c> Free</c><00:04:36.940><c> Software</c>

00:04:37.080 --> 00:04:37.090 align:start position:0%
of Objective C for the Free Software
 

00:04:37.090 --> 00:04:40.379 align:start position:0%
of Objective C for the Free Software
Foundation<00:04:37.360><c> we're</c><00:04:37.960><c> the</c><00:04:38.080><c> maintainer</c><00:04:38.470><c> --zz</c><00:04:39.389><c> we</c>

00:04:40.379 --> 00:04:40.389 align:start position:0%
Foundation we're the maintainer --zz we
 

00:04:40.389 --> 00:04:43.680 align:start position:0%
Foundation we're the maintainer --zz we
support<00:04:40.780><c> our</c><00:04:41.020><c> frameworks</c><00:04:42.030><c> we</c><00:04:43.030><c> support</c><00:04:43.449><c> our</c>

00:04:43.680 --> 00:04:43.690 align:start position:0%
support our frameworks we support our
 

00:04:43.690 --> 00:04:46.680 align:start position:0%
support our frameworks we support our
version<00:04:44.050><c> of</c><00:04:44.110><c> precompiled</c><00:04:44.710><c> headers</c><00:04:45.540><c> we</c><00:04:46.540><c> have</c>

00:04:46.680 --> 00:04:46.690 align:start position:0%
version of precompiled headers we have
 

00:04:46.690 --> 00:04:48.480 align:start position:0%
version of precompiled headers we have
support<00:04:47.050><c> in</c><00:04:47.139><c> for</c><00:04:47.440><c> the</c><00:04:47.530><c> velocity</c><00:04:48.010><c> engine</c><00:04:48.340><c> which</c>

00:04:48.480 --> 00:04:48.490 align:start position:0%
support in for the velocity engine which
 

00:04:48.490 --> 00:04:49.650 align:start position:0%
support in for the velocity engine which
most<00:04:48.760><c> of</c><00:04:48.820><c> the</c><00:04:48.880><c> compiler</c><00:04:49.270><c> people</c><00:04:49.510><c> in</c><00:04:49.600><c> the</c>

00:04:49.650 --> 00:04:49.660 align:start position:0%
most of the compiler people in the
 

00:04:49.660 --> 00:04:52.200 align:start position:0%
most of the compiler people in the
audience<00:04:49.810><c> know</c><00:04:50.110><c> is</c><00:04:50.260><c> altivec</c><00:04:50.770><c> and</c><00:04:51.040><c> of</c><00:04:51.970><c> course</c>

00:04:52.200 --> 00:04:52.210 align:start position:0%
audience know is altivec and of course
 

00:04:52.210 --> 00:04:54.330 align:start position:0%
audience know is altivec and of course
we<00:04:52.330><c> support</c><00:04:52.479><c> our</c><00:04:52.780><c> Mach</c><00:04:52.990><c> ole</c><00:04:53.169><c> object</c><00:04:54.160><c> file</c>

00:04:54.330 --> 00:04:54.340 align:start position:0%
we support our Mach ole object file
 

00:04:54.340 --> 00:04:57.510 align:start position:0%
we support our Mach ole object file
format<00:04:55.500><c> there's</c><00:04:56.500><c> a</c><00:04:56.590><c> few</c><00:04:56.740><c> differences</c><00:04:57.070><c> that</c>

00:04:57.510 --> 00:04:57.520 align:start position:0%
format there's a few differences that
 

00:04:57.520 --> 00:04:59.310 align:start position:0%
format there's a few differences that
you<00:04:57.669><c> have</c><00:04:57.850><c> to</c><00:04:58.060><c> be</c><00:04:58.300><c> that</c><00:04:58.690><c> you</c><00:04:58.720><c> have</c><00:04:58.930><c> to</c><00:04:59.020><c> keep</c><00:04:59.139><c> in</c>

00:04:59.310 --> 00:04:59.320 align:start position:0%
you have to be that you have to keep in
 

00:04:59.320 --> 00:05:05.010 align:start position:0%
you have to be that you have to keep in
mind<00:05:00.060><c> for</c><00:05:01.060><c> GCC</c><00:05:01.770><c> the</c><00:05:02.770><c> first</c><00:05:03.010><c> one</c><00:05:03.220><c> is</c><00:05:03.490><c> that</c><00:05:04.210><c> we</c>

00:05:05.010 --> 00:05:05.020 align:start position:0%
mind for GCC the first one is that we
 

00:05:05.020 --> 00:05:08.189 align:start position:0%
mind for GCC the first one is that we
have<00:05:05.169><c> some</c><00:05:05.350><c> stricter</c><00:05:05.800><c> an</c><00:05:06.010><c> C</c><00:05:06.340><c> C++</c><00:05:07.199><c> compliance</c>

00:05:08.189 --> 00:05:08.199 align:start position:0%
have some stricter an C C++ compliance
 

00:05:08.199 --> 00:05:11.100 align:start position:0%
have some stricter an C C++ compliance
so<00:05:08.830><c> if</c><00:05:09.010><c> you're</c><00:05:09.160><c> used</c><00:05:09.370><c> to</c><00:05:09.610><c> compiling</c><00:05:10.510><c> on</c><00:05:10.720><c> Mac</c><00:05:10.870><c> OS</c>

00:05:11.100 --> 00:05:11.110 align:start position:0%
so if you're used to compiling on Mac OS
 

00:05:11.110 --> 00:05:12.420 align:start position:0%
so if you're used to compiling on Mac OS
9<00:05:11.229><c> you</c><00:05:11.410><c> may</c><00:05:11.530><c> find</c><00:05:11.740><c> out</c><00:05:11.889><c> that</c><00:05:11.919><c> you</c><00:05:12.100><c> get</c><00:05:12.160><c> a</c><00:05:12.220><c> few</c>

00:05:12.420 --> 00:05:12.430 align:start position:0%
9 you may find out that you get a few
 

00:05:12.430 --> 00:05:13.590 align:start position:0%
9 you may find out that you get a few
more<00:05:12.520><c> warnings</c><00:05:12.970><c> and</c><00:05:13.090><c> maybe</c><00:05:13.240><c> a</c><00:05:13.330><c> few</c><00:05:13.479><c> more</c>

00:05:13.590 --> 00:05:13.600 align:start position:0%
more warnings and maybe a few more
 

00:05:13.600 --> 00:05:16.230 align:start position:0%
more warnings and maybe a few more
errors<00:05:14.020><c> compiling</c><00:05:14.889><c> your</c><00:05:15.039><c> source</c><00:05:15.370><c> code</c><00:05:15.669><c> on</c><00:05:15.910><c> Mac</c>

00:05:16.230 --> 00:05:16.240 align:start position:0%
errors compiling your source code on Mac
 

00:05:16.240 --> 00:05:20.219 align:start position:0%
errors compiling your source code on Mac
OS<00:05:16.510><c> 10</c><00:05:17.100><c> mostly</c><00:05:18.100><c> in</c><00:05:18.190><c> the</c><00:05:18.280><c> area</c><00:05:18.550><c> of</c><00:05:18.820><c> C++</c><00:05:19.449><c> syntax</c>

00:05:20.219 --> 00:05:20.229 align:start position:0%
OS 10 mostly in the area of C++ syntax
 

00:05:20.229 --> 00:05:22.770 align:start position:0%
OS 10 mostly in the area of C++ syntax
and<00:05:20.560><c> especially</c><00:05:20.860><c> type</c><00:05:21.220><c> checking</c><00:05:21.780><c> another</c>

00:05:22.770 --> 00:05:22.780 align:start position:0%
and especially type checking another
 

00:05:22.780 --> 00:05:24.750 align:start position:0%
and especially type checking another
thing<00:05:23.020><c> to</c><00:05:23.080><c> keep</c><00:05:23.199><c> in</c><00:05:23.350><c> mind</c><00:05:23.410><c> that</c><00:05:23.770><c> will</c><00:05:24.220><c> bite</c><00:05:24.729><c> a</c>

00:05:24.750 --> 00:05:24.760 align:start position:0%
thing to keep in mind that will bite a
 

00:05:24.760 --> 00:05:27.089 align:start position:0%
thing to keep in mind that will bite a
few<00:05:25.090><c> people</c><00:05:25.449><c> rarely</c><00:05:25.720><c> is</c><00:05:26.080><c> that</c><00:05:26.620><c> our</c><00:05:26.770><c> static</c>

00:05:27.089 --> 00:05:27.099 align:start position:0%
few people rarely is that our static
 

00:05:27.099 --> 00:05:29.490 align:start position:0%
few people rarely is that our static
initializers<00:05:27.760><c> will</c><00:05:27.970><c> execute</c><00:05:28.300><c> possibly</c><00:05:29.260><c> in</c><00:05:29.410><c> a</c>

00:05:29.490 --> 00:05:29.500 align:start position:0%
initializers will execute possibly in a
 

00:05:29.500 --> 00:05:35.010 align:start position:0%
initializers will execute possibly in a
different<00:05:29.919><c> order</c><00:05:30.450><c> from</c><00:05:31.450><c> mac</c><00:05:32.050><c> os9</c><00:05:33.870><c> because</c><00:05:34.870><c> of</c>

00:05:35.010 --> 00:05:35.020 align:start position:0%
different order from mac os9 because of
 

00:05:35.020 --> 00:05:36.719 align:start position:0%
different order from mac os9 because of
the<00:05:35.110><c> way</c><00:05:35.229><c> that</c><00:05:35.380><c> we</c><00:05:35.500><c> link</c><00:05:35.740><c> because</c><00:05:36.160><c> of</c><00:05:36.340><c> the</c><00:05:36.520><c> fact</c>

00:05:36.719 --> 00:05:36.729 align:start position:0%
the way that we link because of the fact
 

00:05:36.729 --> 00:05:37.860 align:start position:0%
the way that we link because of the fact
that<00:05:36.789><c> we</c><00:05:36.940><c> have</c><00:05:37.030><c> pre</c><00:05:37.210><c> binding</c><00:05:37.510><c> which</c><00:05:37.599><c> I'll</c><00:05:37.750><c> talk</c>

00:05:37.860 --> 00:05:37.870 align:start position:0%
that we have pre binding which I'll talk
 

00:05:37.870 --> 00:05:39.540 align:start position:0%
that we have pre binding which I'll talk
about<00:05:37.930><c> a</c><00:05:38.200><c> little</c><00:05:38.260><c> bit</c><00:05:38.470><c> later</c><00:05:38.710><c> if</c><00:05:39.340><c> you</c><00:05:39.460><c> have</c>

00:05:39.540 --> 00:05:39.550 align:start position:0%
about a little bit later if you have
 

00:05:39.550 --> 00:05:42.770 align:start position:0%
about a little bit later if you have
static<00:05:39.910><c> initializers</c><00:05:40.599><c> which</c><00:05:41.500><c> have</c><00:05:41.740><c> implicit</c>

00:05:42.770 --> 00:05:42.780 align:start position:0%
static initializers which have implicit
 

00:05:42.780 --> 00:05:45.510 align:start position:0%
static initializers which have implicit
reliance<00:05:43.780><c> on</c><00:05:44.080><c> one</c><00:05:44.260><c> another's</c><00:05:44.560><c> not</c><00:05:44.770><c> explicit</c>

00:05:45.510 --> 00:05:45.520 align:start position:0%
reliance on one another's not explicit
 

00:05:45.520 --> 00:05:46.890 align:start position:0%
reliance on one another's not explicit
if<00:05:45.610><c> you</c><00:05:45.729><c> have</c><00:05:45.880><c> a</c><00:05:45.910><c> dependency</c><00:05:46.450><c> graph</c><00:05:46.630><c> that</c><00:05:46.780><c> we</c>

00:05:46.890 --> 00:05:46.900 align:start position:0%
if you have a dependency graph that we
 

00:05:46.900 --> 00:05:48.270 align:start position:0%
if you have a dependency graph that we
can<00:05:46.930><c> follow</c><00:05:47.229><c> we</c><00:05:47.440><c> get</c><00:05:47.590><c> that</c><00:05:47.770><c> right</c><00:05:47.979><c> but</c><00:05:48.130><c> if</c><00:05:48.160><c> you</c>

00:05:48.270 --> 00:05:48.280 align:start position:0%
can follow we get that right but if you
 

00:05:48.280 --> 00:05:50.070 align:start position:0%
can follow we get that right but if you
have<00:05:48.400><c> implicit</c><00:05:48.840><c> dependencies</c><00:05:49.840><c> through</c>

00:05:50.070 --> 00:05:50.080 align:start position:0%
have implicit dependencies through
 

00:05:50.080 --> 00:05:51.719 align:start position:0%
have implicit dependencies through
global<00:05:50.410><c> variables</c><00:05:50.830><c> or</c><00:05:50.949><c> something</c><00:05:51.220><c> you</c><00:05:51.610><c> may</c>

00:05:51.719 --> 00:05:51.729 align:start position:0%
global variables or something you may
 

00:05:51.729 --> 00:05:53.400 align:start position:0%
global variables or something you may
find<00:05:51.940><c> out</c><00:05:52.060><c> that</c><00:05:52.120><c> the</c><00:05:52.360><c> behavior</c><00:05:52.780><c> will</c><00:05:53.050><c> be</c><00:05:53.380><c> a</c>

00:05:53.400 --> 00:05:53.410 align:start position:0%
find out that the behavior will be a
 

00:05:53.410 --> 00:05:54.870 align:start position:0%
find out that the behavior will be a
little<00:05:53.590><c> different</c><00:05:53.830><c> when</c><00:05:54.070><c> you</c><00:05:54.220><c> build</c><00:05:54.639><c> and</c><00:05:54.789><c> run</c>

00:05:54.870 --> 00:05:54.880 align:start position:0%
little different when you build and run
 

00:05:54.880 --> 00:05:56.310 align:start position:0%
little different when you build and run
on<00:05:55.030><c> Mac</c><00:05:55.210><c> OS</c><00:05:55.479><c> 10</c><00:05:55.510><c> so</c><00:05:55.780><c> that's</c><00:05:55.870><c> something</c><00:05:56.080><c> to</c><00:05:56.229><c> be</c>

00:05:56.310 --> 00:05:56.320 align:start position:0%
on Mac OS 10 so that's something to be
 

00:05:56.320 --> 00:06:01.770 align:start position:0%
on Mac OS 10 so that's something to be
careful<00:05:56.650><c> about</c><00:05:58.440><c> so</c><00:05:59.470><c> since</c><00:05:59.889><c> public</c><00:06:00.340><c> beta</c><00:06:00.780><c> we've</c>

00:06:01.770 --> 00:06:01.780 align:start position:0%
careful about so since public beta we've
 

00:06:01.780 --> 00:06:03.659 align:start position:0%
careful about so since public beta we've
added<00:06:01.960><c> a</c><00:06:02.139><c> few</c><00:06:02.320><c> things</c><00:06:02.380><c> and</c><00:06:02.919><c> done</c><00:06:03.250><c> a</c><00:06:03.280><c> lot</c><00:06:03.400><c> of</c>

00:06:03.659 --> 00:06:03.669 align:start position:0%
added a few things and done a lot of
 

00:06:03.669 --> 00:06:06.750 align:start position:0%
added a few things and done a lot of
work<00:06:03.849><c> on</c><00:06:04.060><c> GCC</c><00:06:04.979><c> the</c><00:06:05.979><c> first</c><00:06:06.190><c> thing</c><00:06:06.400><c> is</c><00:06:06.550><c> we're</c>

00:06:06.750 --> 00:06:06.760 align:start position:0%
work on GCC the first thing is we're
 

00:06:06.760 --> 00:06:11.460 align:start position:0%
work on GCC the first thing is we're
fully<00:06:07.060><c> based</c><00:06:07.330><c> now</c><00:06:07.630><c> on</c><00:06:07.930><c> GCC</c><00:06:08.889><c> tu-95</c><00:06:09.520><c> 2</c><00:06:10.260><c> we</c><00:06:11.260><c> used</c>

00:06:11.460 --> 00:06:11.470 align:start position:0%
fully based now on GCC tu-95 2 we used
 

00:06:11.470 --> 00:06:13.379 align:start position:0%
fully based now on GCC tu-95 2 we used
to<00:06:11.650><c> be</c><00:06:11.800><c> running</c><00:06:12.160><c> then</c><00:06:12.340><c> think</c><00:06:12.520><c> the</c><00:06:12.610><c> driver</c><00:06:12.940><c> and</c>

00:06:13.379 --> 00:06:13.389 align:start position:0%
to be running then think the driver and
 

00:06:13.389 --> 00:06:17.550 align:start position:0%
to be running then think the driver and
the<00:06:13.720><c> preprocessor</c><00:06:14.380><c> from</c><00:06:15.240><c> 272</c><00:06:16.240><c> and</c><00:06:16.449><c> now</c><00:06:17.320><c> we're</c>

00:06:17.550 --> 00:06:17.560 align:start position:0%
the preprocessor from 272 and now we're
 

00:06:17.560 --> 00:06:19.650 align:start position:0%
the preprocessor from 272 and now we're
running<00:06:17.860><c> everything</c><00:06:18.190><c> in</c><00:06:18.520><c> the</c><00:06:18.610><c> 295</c><00:06:19.150><c> to</c><00:06:19.389><c> code</c>

00:06:19.650 --> 00:06:19.660 align:start position:0%
running everything in the 295 to code
 

00:06:19.660 --> 00:06:21.830 align:start position:0%
running everything in the 295 to code
base<00:06:19.900><c> we've</c><00:06:20.560><c> also</c><00:06:20.710><c> added</c><00:06:20.979><c> a</c><00:06:21.160><c> lot</c><00:06:21.340><c> of</c><00:06:21.370><c> C++</c>

00:06:21.830 --> 00:06:21.840 align:start position:0%
base we've also added a lot of C++
 

00:06:21.840 --> 00:06:25.230 align:start position:0%
base we've also added a lot of C++
improvements<00:06:22.840><c> coalesce</c><00:06:23.680><c> symbols</c><00:06:24.240><c> zero</c>

00:06:25.230 --> 00:06:25.240 align:start position:0%
improvements coalesce symbols zero
 

00:06:25.240 --> 00:06:27.300 align:start position:0%
improvements coalesce symbols zero
overhead<00:06:25.570><c> exceptions</c><00:06:26.110><c> and</c><00:06:26.260><c> we've</c><00:06:26.889><c> made</c><00:06:27.039><c> pre</c>

00:06:27.300 --> 00:06:27.310 align:start position:0%
overhead exceptions and we've made pre
 

00:06:27.310 --> 00:06:29.939 align:start position:0%
overhead exceptions and we've made pre
comps<00:06:27.669><c> usable</c><00:06:28.270><c> from</c><00:06:28.840><c> C++</c><00:06:29.139><c> which</c><00:06:29.770><c> has</c><00:06:29.919><c> a</c>

00:06:29.939 --> 00:06:29.949 align:start position:0%
comps usable from C++ which has a
 

00:06:29.949 --> 00:06:33.140 align:start position:0%
comps usable from C++ which has a
dramatic<00:06:30.400><c> effect</c><00:06:30.490><c> on</c><00:06:30.789><c> compile</c><00:06:31.150><c> time</c><00:06:31.390><c> for</c><00:06:31.599><c> C++</c>

00:06:33.140 --> 00:06:33.150 align:start position:0%
dramatic effect on compile time for C++
 

00:06:33.150 --> 00:06:35.399 align:start position:0%
dramatic effect on compile time for C++
the<00:06:34.150><c> first</c><00:06:34.360><c> thing</c><00:06:34.510><c> we</c><00:06:34.599><c> added</c><00:06:34.750><c> is</c><00:06:34.990><c> coalesce</c>

00:06:35.399 --> 00:06:35.409 align:start position:0%
the first thing we added is coalesce
 

00:06:35.409 --> 00:06:35.940 align:start position:0%
the first thing we added is coalesce
symbols

00:06:35.940 --> 00:06:35.950 align:start position:0%
symbols
 

00:06:35.950 --> 00:06:39.300 align:start position:0%
symbols
what<00:06:36.370><c> this</c><00:06:36.490><c> does</c><00:06:36.790><c> is</c><00:06:37.090><c> removes</c><00:06:38.310><c> multiple</c>

00:06:39.300 --> 00:06:39.310 align:start position:0%
what this does is removes multiple
 

00:06:39.310 --> 00:06:42.990 align:start position:0%
what this does is removes multiple
copies<00:06:39.550><c> of</c><00:06:39.990><c> functions</c><00:06:40.990><c> that</c><00:06:41.800><c> has</c><00:06:42.760><c> been</c>

00:06:42.990 --> 00:06:43.000 align:start position:0%
copies of functions that has been
 

00:06:43.000 --> 00:06:46.010 align:start position:0%
copies of functions that has been
created<00:06:43.390><c> through</c><00:06:43.540><c> inlining</c><00:06:44.200><c> and</c><00:06:44.350><c> templates</c>

00:06:46.010 --> 00:06:46.020 align:start position:0%
created through inlining and templates
 

00:06:46.020 --> 00:06:48.510 align:start position:0%
created through inlining and templates
what<00:06:47.020><c> we've</c><00:06:47.140><c> seen</c><00:06:47.320><c> is</c><00:06:47.440><c> a</c><00:06:47.470><c> finder</c><00:06:47.890><c> binary</c><00:06:48.310><c> went</c>

00:06:48.510 --> 00:06:48.520 align:start position:0%
what we've seen is a finder binary went
 

00:06:48.520 --> 00:06:50.880 align:start position:0%
what we've seen is a finder binary went
down<00:06:48.670><c> about</c><00:06:48.910><c> 300k</c><00:06:49.480><c> from</c><00:06:49.780><c> two</c><00:06:49.960><c> megabytes</c><00:06:50.440><c> to</c>

00:06:50.880 --> 00:06:50.890 align:start position:0%
down about 300k from two megabytes to
 

00:06:50.890 --> 00:06:54.090 align:start position:0%
down about 300k from two megabytes to
1.7<00:06:51.640><c> megabytes</c><00:06:52.290><c> and</c><00:06:53.290><c> we've</c><00:06:53.560><c> seen</c><00:06:53.740><c> similar</c>

00:06:54.090 --> 00:06:54.100 align:start position:0%
1.7 megabytes and we've seen similar
 

00:06:54.100 --> 00:06:56.040 align:start position:0%
1.7 megabytes and we've seen similar
reductions<00:06:54.610><c> in</c><00:06:54.820><c> other</c><00:06:54.910><c> C++</c><00:06:55.630><c> programs</c>

00:06:56.040 --> 00:06:56.050 align:start position:0%
reductions in other C++ programs
 

00:06:56.050 --> 00:06:58.620 align:start position:0%
reductions in other C++ programs
especially<00:06:56.320><c> power</c><00:06:56.710><c> client</c><00:06:57.010><c> programs</c><00:06:57.630><c> and</c>

00:06:58.620 --> 00:06:58.630 align:start position:0%
especially power client programs and
 

00:06:58.630 --> 00:07:01.680 align:start position:0%
especially power client programs and
this<00:06:59.440><c> is</c><00:07:00.000><c> giving</c><00:07:01.000><c> us</c><00:07:01.120><c> an</c><00:07:01.240><c> overall</c><00:07:01.540><c> reduction</c>

00:07:01.680 --> 00:07:01.690 align:start position:0%
this is giving us an overall reduction
 

00:07:01.690 --> 00:07:03.390 align:start position:0%
this is giving us an overall reduction
in<00:07:02.050><c> the</c><00:07:02.200><c> system</c><00:07:02.530><c> memory</c><00:07:02.710><c> footprint</c><00:07:03.250><c> and</c>

00:07:03.390 --> 00:07:03.400 align:start position:0%
in the system memory footprint and
 

00:07:03.400 --> 00:07:04.860 align:start position:0%
in the system memory footprint and
you're<00:07:03.490><c> going</c><00:07:03.610><c> to</c><00:07:03.640><c> hear</c><00:07:03.820><c> this</c><00:07:04.000><c> theme</c><00:07:04.300><c> return</c><00:07:04.660><c> -</c>

00:07:04.860 --> 00:07:04.870 align:start position:0%
you're going to hear this theme return -
 

00:07:04.870 --> 00:07:06.780 align:start position:0%
you're going to hear this theme return -
over<00:07:05.200><c> and</c><00:07:05.320><c> over</c><00:07:05.530><c> through</c><00:07:05.740><c> this</c><00:07:05.830><c> talk</c><00:07:06.130><c> the</c><00:07:06.610><c> most</c>

00:07:06.780 --> 00:07:06.790 align:start position:0%
over and over through this talk the most
 

00:07:06.790 --> 00:07:08.070 align:start position:0%
over and over through this talk the most
important<00:07:07.270><c> thing</c><00:07:07.420><c> you</c><00:07:07.540><c> can</c><00:07:07.660><c> do</c><00:07:07.810><c> to</c><00:07:07.930><c> optimize</c>

00:07:08.070 --> 00:07:08.080 align:start position:0%
important thing you can do to optimize
 

00:07:08.080 --> 00:07:09.840 align:start position:0%
important thing you can do to optimize
your<00:07:08.500><c> application</c><00:07:08.650><c> on</c><00:07:09.160><c> Mac</c><00:07:09.310><c> os10</c>

00:07:09.840 --> 00:07:09.850 align:start position:0%
your application on Mac os10
 

00:07:09.850 --> 00:07:12.960 align:start position:0%
your application on Mac os10
to<00:07:10.270><c> make</c><00:07:10.420><c> it</c><00:07:10.570><c> run</c><00:07:10.750><c> really</c><00:07:11.080><c> fast</c><00:07:11.550><c> is</c><00:07:12.550><c> to</c><00:07:12.790><c> reduce</c>

00:07:12.960 --> 00:07:12.970 align:start position:0%
to make it run really fast is to reduce
 

00:07:12.970 --> 00:07:14.400 align:start position:0%
to make it run really fast is to reduce
the<00:07:13.120><c> system</c><00:07:13.330><c> memory</c><00:07:13.720><c> footprint</c><00:07:14.050><c> reduce</c><00:07:14.320><c> the</c>

00:07:14.400 --> 00:07:14.410 align:start position:0%
the system memory footprint reduce the
 

00:07:14.410 --> 00:07:16.740 align:start position:0%
the system memory footprint reduce the
working<00:07:14.710><c> set</c><00:07:14.860><c> in</c><00:07:15.040><c> memory</c><00:07:15.310><c> because</c><00:07:16.300><c> you</c><00:07:16.660><c> know</c>

00:07:16.740 --> 00:07:16.750 align:start position:0%
working set in memory because you know
 

00:07:16.750 --> 00:07:18.900 align:start position:0%
working set in memory because you know
you<00:07:16.810><c> can</c><00:07:17.020><c> optimize</c><00:07:17.320><c> the</c><00:07:17.680><c> CPU</c><00:07:18.100><c> uses</c><00:07:18.490><c> as</c><00:07:18.610><c> much</c><00:07:18.640><c> as</c>

00:07:18.900 --> 00:07:18.910 align:start position:0%
you can optimize the CPU uses as much as
 

00:07:18.910 --> 00:07:20.280 align:start position:0%
you can optimize the CPU uses as much as
you<00:07:19.030><c> want</c><00:07:19.240><c> but</c><00:07:19.390><c> as</c><00:07:19.510><c> soon</c><00:07:19.630><c> as</c><00:07:19.720><c> your</c><00:07:19.870><c> app</c><00:07:19.990><c> starts</c>

00:07:20.280 --> 00:07:20.290 align:start position:0%
you want but as soon as your app starts
 

00:07:20.290 --> 00:07:21.570 align:start position:0%
you want but as soon as your app starts
paging<00:07:20.740><c> in</c><00:07:20.830><c> and</c><00:07:20.950><c> out</c><00:07:21.040><c> through</c><00:07:21.370><c> the</c><00:07:21.430><c> virtual</c>

00:07:21.570 --> 00:07:21.580 align:start position:0%
paging in and out through the virtual
 

00:07:21.580 --> 00:07:26.880 align:start position:0%
paging in and out through the virtual
memory<00:07:21.820><c> system</c><00:07:22.330><c> you're</c><00:07:23.050><c> gonna</c><00:07:23.110><c> get</c><00:07:23.320><c> slower</c><00:07:25.890><c> so</c>

00:07:26.880 --> 00:07:26.890 align:start position:0%
memory system you're gonna get slower so
 

00:07:26.890 --> 00:07:28.080 align:start position:0%
memory system you're gonna get slower so
another<00:07:27.130><c> thing</c><00:07:27.340><c> we've</c><00:07:27.490><c> done</c><00:07:27.640><c> along</c><00:07:27.940><c> this</c>

00:07:28.080 --> 00:07:28.090 align:start position:0%
another thing we've done along this
 

00:07:28.090 --> 00:07:31.670 align:start position:0%
another thing we've done along this
route<00:07:28.840><c> is</c><00:07:29.310><c> added</c><00:07:30.310><c> zero</c><00:07:30.340><c> overhead</c><00:07:30.820><c> exceptions</c>

00:07:31.670 --> 00:07:31.680 align:start position:0%
route is added zero overhead exceptions
 

00:07:31.680 --> 00:07:34.380 align:start position:0%
route is added zero overhead exceptions
before<00:07:32.680><c> what</c><00:07:32.830><c> we</c><00:07:32.920><c> do</c><00:07:33.100><c> is</c><00:07:33.220><c> put</c><00:07:33.400><c> a</c><00:07:33.430><c> set</c><00:07:33.700><c> jump</c><00:07:34.000><c> in</c><00:07:34.210><c> a</c>

00:07:34.380 --> 00:07:34.390 align:start position:0%
before what we do is put a set jump in a
 

00:07:34.390 --> 00:07:36.500 align:start position:0%
before what we do is put a set jump in a
system<00:07:34.810><c> call</c><00:07:35.020><c> when</c><00:07:35.260><c> you'd</c><00:07:35.380><c> have</c><00:07:35.500><c> a</c><00:07:35.560><c> try</c><00:07:35.830><c> block</c>

00:07:36.500 --> 00:07:36.510 align:start position:0%
system call when you'd have a try block
 

00:07:36.510 --> 00:07:39.210 align:start position:0%
system call when you'd have a try block
now<00:07:37.510><c> we've</c><00:07:37.720><c> removed</c><00:07:37.900><c> that</c><00:07:38.380><c> so</c><00:07:38.680><c> tribe</c><00:07:38.950><c> locks</c>

00:07:39.210 --> 00:07:39.220 align:start position:0%
now we've removed that so tribe locks
 

00:07:39.220 --> 00:07:41.940 align:start position:0%
now we've removed that so tribe locks
are<00:07:39.400><c> basically</c><00:07:39.820><c> free</c><00:07:40.360><c> as</c><00:07:40.660><c> free</c><00:07:41.470><c> is</c><00:07:41.590><c> you</c><00:07:41.830><c> know</c>

00:07:41.940 --> 00:07:41.950 align:start position:0%
are basically free as free is you know
 

00:07:41.950 --> 00:07:43.350 align:start position:0%
are basically free as free is you know
any<00:07:42.130><c> code</c><00:07:42.370><c> that's</c><00:07:42.580><c> not</c><00:07:42.610><c> inside</c><00:07:42.970><c> of</c><00:07:43.090><c> a</c><00:07:43.180><c> try</c>

00:07:43.350 --> 00:07:43.360 align:start position:0%
any code that's not inside of a try
 

00:07:43.360 --> 00:07:46.620 align:start position:0%
any code that's not inside of a try
block<00:07:43.560><c> the</c><00:07:44.560><c> common</c><00:07:44.920><c> case</c><00:07:45.130><c> is</c><00:07:45.400><c> very</c><00:07:45.850><c> fast</c><00:07:46.180><c> so</c>

00:07:46.620 --> 00:07:46.630 align:start position:0%
block the common case is very fast so
 

00:07:46.630 --> 00:07:48.330 align:start position:0%
block the common case is very fast so
we've<00:07:46.780><c> seen</c><00:07:46.960><c> in</c><00:07:47.110><c> about</c><00:07:47.230><c> 2x</c><00:07:47.650><c> improvement</c><00:07:48.220><c> in</c>

00:07:48.330 --> 00:07:48.340 align:start position:0%
we've seen in about 2x improvement in
 

00:07:48.340 --> 00:07:50.370 align:start position:0%
we've seen in about 2x improvement in
some<00:07:48.520><c> real-world</c><00:07:48.790><c> apps</c><00:07:49.240><c> for</c><00:07:49.780><c> leaf</c><00:07:49.960><c> functions</c>

00:07:50.370 --> 00:07:50.380 align:start position:0%
some real-world apps for leaf functions
 

00:07:50.380 --> 00:07:51.840 align:start position:0%
some real-world apps for leaf functions
we've<00:07:50.560><c> actually</c><00:07:50.740><c> seen</c><00:07:51.040><c> about</c><00:07:51.250><c> a</c><00:07:51.310><c> 20x</c>

00:07:51.840 --> 00:07:51.850 align:start position:0%
we've actually seen about a 20x
 

00:07:51.850 --> 00:07:53.070 align:start position:0%
we've actually seen about a 20x
improvement<00:07:52.390><c> if</c><00:07:52.480><c> it's</c><00:07:52.630><c> just</c><00:07:52.780><c> a</c><00:07:52.840><c> barely</c>

00:07:53.070 --> 00:07:53.080 align:start position:0%
improvement if it's just a barely
 

00:07:53.080 --> 00:07:55.670 align:start position:0%
improvement if it's just a barely
function<00:07:53.620><c> that</c><00:07:53.710><c> has</c><00:07:53.830><c> a</c><00:07:53.860><c> try</c><00:07:54.070><c> block</c><00:07:54.310><c> in</c><00:07:54.460><c> it</c>

00:07:55.670 --> 00:07:55.680 align:start position:0%
function that has a try block in it
 

00:07:55.680 --> 00:07:58.140 align:start position:0%
function that has a try block in it
we've<00:07:56.680><c> also</c><00:07:56.860><c> seen</c><00:07:57.160><c> size</c><00:07:57.460><c> reduction</c><00:07:58.030><c> we</c>

00:07:58.140 --> 00:07:58.150 align:start position:0%
we've also seen size reduction we
 

00:07:58.150 --> 00:07:59.940 align:start position:0%
we've also seen size reduction we
knocked<00:07:58.600><c> the</c><00:07:58.780><c> finder</c><00:07:59.110><c> size</c><00:07:59.320><c> down</c><00:07:59.620><c> by</c><00:07:59.830><c> an</c>

00:07:59.940 --> 00:07:59.950 align:start position:0%
knocked the finder size down by an
 

00:07:59.950 --> 00:08:02.070 align:start position:0%
knocked the finder size down by an
additional<00:08:00.400><c> 400</c><00:08:01.240><c> K</c><00:08:01.450><c> when</c><00:08:01.690><c> we</c><00:08:01.780><c> added</c><00:08:02.050><c> zero</c>

00:08:02.070 --> 00:08:02.080 align:start position:0%
additional 400 K when we added zero
 

00:08:02.080 --> 00:08:04.860 align:start position:0%
additional 400 K when we added zero
overhead<00:08:02.470><c> exceptions</c><00:08:03.450><c> the</c><00:08:04.450><c> big</c><00:08:04.600><c> thing</c><00:08:04.780><c> to</c>

00:08:04.860 --> 00:08:04.870 align:start position:0%
overhead exceptions the big thing to
 

00:08:04.870 --> 00:08:06.900 align:start position:0%
overhead exceptions the big thing to
keep<00:08:04.930><c> in</c><00:08:05.110><c> mind</c><00:08:05.320><c> though</c><00:08:05.530><c> is</c><00:08:05.710><c> for</c><00:08:05.920><c> throws</c><00:08:06.250><c> this</c>

00:08:06.900 --> 00:08:06.910 align:start position:0%
keep in mind though is for throws this
 

00:08:06.910 --> 00:08:09.810 align:start position:0%
keep in mind though is for throws this
will<00:08:07.240><c> add</c><00:08:07.510><c> a</c><00:08:07.840><c> memory</c><00:08:08.770><c> penalty</c><00:08:09.220><c> and</c><00:08:09.430><c> a</c><00:08:09.550><c> speed</c>

00:08:09.810 --> 00:08:09.820 align:start position:0%
will add a memory penalty and a speed
 

00:08:09.820 --> 00:08:12.990 align:start position:0%
will add a memory penalty and a speed
penalty<00:08:11.250><c> especially</c><00:08:12.250><c> for</c><00:08:12.400><c> the</c><00:08:12.490><c> first</c><00:08:12.730><c> time</c>

00:08:12.990 --> 00:08:13.000 align:start position:0%
penalty especially for the first time
 

00:08:13.000 --> 00:08:14.790 align:start position:0%
penalty especially for the first time
you<00:08:13.150><c> throw</c><00:08:13.450><c> because</c><00:08:13.750><c> we</c><00:08:13.870><c> do</c><00:08:13.990><c> page</c><00:08:14.260><c> in</c><00:08:14.500><c> a</c><00:08:14.590><c> lot</c><00:08:14.770><c> of</c>

00:08:14.790 --> 00:08:14.800 align:start position:0%
you throw because we do page in a lot of
 

00:08:14.800 --> 00:08:17.810 align:start position:0%
you throw because we do page in a lot of
code<00:08:15.400><c> to</c><00:08:15.430><c> unwind</c><00:08:16.180><c> the</c><00:08:16.390><c> stack</c><00:08:16.660><c> at</c><00:08:16.930><c> that</c><00:08:17.080><c> point</c>

00:08:17.810 --> 00:08:17.820 align:start position:0%
code to unwind the stack at that point
 

00:08:17.820 --> 00:08:21.360 align:start position:0%
code to unwind the stack at that point
so<00:08:18.820><c> what</c><00:08:19.660><c> would</c><00:08:19.810><c> our</c><00:08:20.110><c> basic</c><00:08:20.680><c> policy</c><00:08:20.830><c> is</c><00:08:21.190><c> we</c>

00:08:21.360 --> 00:08:21.370 align:start position:0%
so what would our basic policy is we
 

00:08:21.370 --> 00:08:22.800 align:start position:0%
so what would our basic policy is we
treat<00:08:21.610><c> exceptions</c><00:08:22.120><c> as</c><00:08:22.270><c> exceptional</c>

00:08:22.800 --> 00:08:22.810 align:start position:0%
treat exceptions as exceptional
 

00:08:22.810 --> 00:08:24.570 align:start position:0%
treat exceptions as exceptional
conditions<00:08:23.290><c> for</c><00:08:23.620><c> error</c><00:08:23.770><c> messages</c><00:08:24.280><c> if</c><00:08:24.490><c> you</c>

00:08:24.570 --> 00:08:24.580 align:start position:0%
conditions for error messages if you
 

00:08:24.580 --> 00:08:26.190 align:start position:0%
conditions for error messages if you
have<00:08:24.790><c> something</c><00:08:25.150><c> that's</c><00:08:25.240><c> in</c><00:08:25.450><c> your</c><00:08:25.570><c> main</c><00:08:25.870><c> line</c>

00:08:26.190 --> 00:08:26.200 align:start position:0%
have something that's in your main line
 

00:08:26.200 --> 00:08:29.310 align:start position:0%
have something that's in your main line
of<00:08:26.640><c> processing</c><00:08:27.640><c> that</c><00:08:27.670><c> uses</c><00:08:28.180><c> C++</c><00:08:28.780><c> exceptions</c>

00:08:29.310 --> 00:08:29.320 align:start position:0%
of processing that uses C++ exceptions
 

00:08:29.320 --> 00:08:31.969 align:start position:0%
of processing that uses C++ exceptions
you<00:08:29.710><c> may</c><00:08:29.890><c> see</c><00:08:29.950><c> a</c><00:08:30.460><c> slight</c><00:08:30.970><c> performance</c><00:08:31.150><c> lose</c>

00:08:31.969 --> 00:08:31.979 align:start position:0%
you may see a slight performance lose
 

00:08:31.979 --> 00:08:34.290 align:start position:0%
you may see a slight performance lose
with<00:08:32.979><c> zero</c><00:08:33.250><c> overhead</c><00:08:33.490><c> exceptions</c><00:08:34.030><c> but</c><00:08:34.180><c> the</c>

00:08:34.290 --> 00:08:34.300 align:start position:0%
with zero overhead exceptions but the
 

00:08:34.300 --> 00:08:35.670 align:start position:0%
with zero overhead exceptions but the
vast<00:08:34.450><c> majority</c><00:08:34.630><c> of</c><00:08:34.960><c> people</c><00:08:35.290><c> are</c><00:08:35.380><c> going</c><00:08:35.410><c> to</c><00:08:35.530><c> see</c>

00:08:35.670 --> 00:08:35.680 align:start position:0%
vast majority of people are going to see
 

00:08:35.680 --> 00:08:39.839 align:start position:0%
vast majority of people are going to see
a<00:08:35.710><c> big</c><00:08:35.919><c> win</c>

00:08:39.839 --> 00:08:39.849 align:start position:0%
 
 

00:08:39.849 --> 00:08:43.269 align:start position:0%
 
what<00:08:40.849><c> we've</c><00:08:40.969><c> also</c><00:08:41.149><c> added</c><00:08:41.479><c> our</c><00:08:42.279><c> precompiled</c>

00:08:43.269 --> 00:08:43.279 align:start position:0%
what we've also added our precompiled
 

00:08:43.279 --> 00:08:47.740 align:start position:0%
what we've also added our precompiled
headers<00:08:43.669><c> usable</c><00:08:44.660><c> from</c><00:08:44.779><c> C++</c><00:08:46.360><c> what</c><00:08:47.360><c> we've</c><00:08:47.540><c> seen</c>

00:08:47.740 --> 00:08:47.750 align:start position:0%
headers usable from C++ what we've seen
 

00:08:47.750 --> 00:08:50.200 align:start position:0%
headers usable from C++ what we've seen
in<00:08:47.930><c> here</c><00:08:48.170><c> is</c><00:08:48.290><c> a</c><00:08:48.320><c> compile</c><00:08:49.010><c> times</c><00:08:49.370><c> improve</c><00:08:50.000><c> as</c>

00:08:50.200 --> 00:08:50.210 align:start position:0%
in here is a compile times improve as
 

00:08:50.210 --> 00:08:54.910 align:start position:0%
in here is a compile times improve as
much<00:08:50.390><c> as</c><00:08:50.600><c> 5x</c><00:08:51.230><c> four-carbon</c><00:08:52.130><c> applications</c><00:08:53.920><c> good</c>

00:08:54.910 --> 00:08:54.920 align:start position:0%
much as 5x four-carbon applications good
 

00:08:54.920 --> 00:08:57.300 align:start position:0%
much as 5x four-carbon applications good
so<00:08:55.100><c> the</c><00:08:55.880><c> way</c><00:08:56.000><c> that</c><00:08:56.029><c> we</c><00:08:56.209><c> did</c><00:08:56.360><c> this</c><00:08:56.480><c> is</c><00:08:56.540><c> pre</c><00:08:56.810><c> comps</c>

00:08:57.300 --> 00:08:57.310 align:start position:0%
so the way that we did this is pre comps
 

00:08:57.310 --> 00:09:00.370 align:start position:0%
so the way that we did this is pre comps
can<00:08:58.310><c> be</c><00:08:58.430><c> accessed</c><00:08:58.910><c> from</c><00:08:59.000><c> C++</c><00:08:59.330><c> now</c><00:08:59.930><c> we</c><00:08:59.990><c> have</c><00:09:00.200><c> an</c>

00:09:00.370 --> 00:09:00.380 align:start position:0%
can be accessed from C++ now we have an
 

00:09:00.380 --> 00:09:05.019 align:start position:0%
can be accessed from C++ now we have an
extra<00:09:01.810><c> C++</c><00:09:02.810><c> aware</c><00:09:03.550><c> precompiled</c><00:09:04.550><c> header</c><00:09:04.760><c> and</c>

00:09:05.019 --> 00:09:05.029 align:start position:0%
extra C++ aware precompiled header and
 

00:09:05.029 --> 00:09:07.750 align:start position:0%
extra C++ aware precompiled header and
all<00:09:05.149><c> of</c><00:09:05.300><c> our</c><00:09:05.450><c> umbrella</c><00:09:06.200><c> frameworks</c><00:09:06.709><c> but</c><00:09:07.610><c> they</c>

00:09:07.750 --> 00:09:07.760 align:start position:0%
all of our umbrella frameworks but they
 

00:09:07.760 --> 00:09:10.389 align:start position:0%
all of our umbrella frameworks but they
cannot<00:09:08.209><c> contain</c><00:09:08.720><c> C++</c><00:09:09.470><c> syntax</c><00:09:10.010><c> due</c><00:09:10.250><c> to</c><00:09:10.370><c> a</c>

00:09:10.389 --> 00:09:10.399 align:start position:0%
cannot contain C++ syntax due to a
 

00:09:10.399 --> 00:09:12.070 align:start position:0%
cannot contain C++ syntax due to a
limitation<00:09:11.000><c> on</c><00:09:11.180><c> the</c><00:09:11.540><c> way</c><00:09:11.660><c> that</c><00:09:11.810><c> we</c><00:09:11.930><c> do</c>

00:09:12.070 --> 00:09:12.080 align:start position:0%
limitation on the way that we do
 

00:09:12.080 --> 00:09:14.680 align:start position:0%
limitation on the way that we do
precompiled<00:09:12.709><c> headers</c><00:09:12.980><c> and</c><00:09:13.330><c> the</c><00:09:14.330><c> other</c><00:09:14.450><c> thing</c>

00:09:14.680 --> 00:09:14.690 align:start position:0%
precompiled headers and the other thing
 

00:09:14.690 --> 00:09:17.350 align:start position:0%
precompiled headers and the other thing
is<00:09:14.810><c> is</c><00:09:14.959><c> that</c><00:09:15.279><c> macros</c><00:09:16.279><c> and</c><00:09:16.580><c> compiler</c><00:09:17.029><c> flags</c>

00:09:17.350 --> 00:09:17.360 align:start position:0%
is is that macros and compiler flags
 

00:09:17.360 --> 00:09:19.690 align:start position:0%
is is that macros and compiler flags
have<00:09:17.630><c> to</c><00:09:17.810><c> match</c><00:09:17.990><c> as</c><00:09:18.230><c> with</c><00:09:18.380><c> most</c><00:09:18.589><c> as</c><00:09:18.980><c> with</c><00:09:19.310><c> most</c>

00:09:19.690 --> 00:09:19.700 align:start position:0%
have to match as with most as with most
 

00:09:19.700 --> 00:09:21.970 align:start position:0%
have to match as with most as with most
precompiled<00:09:20.360><c> headers</c><00:09:20.630><c> if</c><00:09:21.200><c> you</c><00:09:21.350><c> change</c><00:09:21.709><c> a</c>

00:09:21.970 --> 00:09:21.980 align:start position:0%
precompiled headers if you change a
 

00:09:21.980 --> 00:09:24.340 align:start position:0%
precompiled headers if you change a
macro<00:09:22.520><c> setting</c><00:09:22.910><c> the</c><00:09:23.630><c> precompiled</c><00:09:24.170><c> header</c>

00:09:24.340 --> 00:09:24.350 align:start position:0%
macro setting the precompiled header
 

00:09:24.350 --> 00:09:25.870 align:start position:0%
macro setting the precompiled header
will<00:09:24.800><c> not</c><00:09:24.980><c> be</c><00:09:25.100><c> able</c><00:09:25.220><c> to</c><00:09:25.279><c> be</c><00:09:25.399><c> used</c><00:09:25.550><c> we'll</c><00:09:25.760><c> have</c>

00:09:25.870 --> 00:09:25.880 align:start position:0%
will not be able to be used we'll have
 

00:09:25.880 --> 00:09:27.790 align:start position:0%
will not be able to be used we'll have
to<00:09:25.970><c> go</c><00:09:26.089><c> back</c><00:09:26.270><c> to</c><00:09:26.510><c> the</c><00:09:26.750><c> the</c><00:09:27.020><c> standard</c><00:09:27.440><c> text</c>

00:09:27.790 --> 00:09:27.800 align:start position:0%
to go back to the the standard text
 

00:09:27.800 --> 00:09:32.139 align:start position:0%
to go back to the the standard text
header<00:09:30.250><c> so</c><00:09:31.250><c> I'd</c><00:09:31.339><c> like</c><00:09:31.430><c> to</c><00:09:31.490><c> talk</c><00:09:31.700><c> a</c><00:09:31.760><c> little</c><00:09:31.970><c> bit</c>

00:09:32.139 --> 00:09:32.149 align:start position:0%
header so I'd like to talk a little bit
 

00:09:32.149 --> 00:09:38.380 align:start position:0%
header so I'd like to talk a little bit
about<00:09:32.290><c> how</c><00:09:33.290><c> we</c><00:09:33.350><c> use</c><00:09:33.500><c> GCC</c><00:09:34.250><c> on</c><00:09:34.430><c> Mac</c><00:09:34.610><c> OS</c><00:09:34.880><c> 10</c><00:09:37.270><c> so</c><00:09:38.270><c> in</c>

00:09:38.380 --> 00:09:38.390 align:start position:0%
about how we use GCC on Mac OS 10 so in
 

00:09:38.390 --> 00:09:39.280 align:start position:0%
about how we use GCC on Mac OS 10 so in
some<00:09:38.510><c> of</c><00:09:38.570><c> the</c><00:09:38.660><c> things</c><00:09:38.810><c> I'm</c><00:09:38.930><c> going</c><00:09:39.020><c> to</c><00:09:39.110><c> cover</c>

00:09:39.280 --> 00:09:39.290 align:start position:0%
some of the things I'm going to cover
 

00:09:39.290 --> 00:09:42.100 align:start position:0%
some of the things I'm going to cover
just<00:09:39.410><c> project</c><00:09:40.310><c> builder</c><00:09:40.730><c> integration</c><00:09:41.240><c> how</c><00:09:42.050><c> you</c>

00:09:42.100 --> 00:09:42.110 align:start position:0%
just project builder integration how you
 

00:09:42.110 --> 00:09:43.630 align:start position:0%
just project builder integration how you
can<00:09:42.380><c> use</c><00:09:42.680><c> and</c><00:09:42.950><c> take</c><00:09:43.070><c> advantage</c><00:09:43.339><c> of</c>

00:09:43.630 --> 00:09:43.640 align:start position:0%
can use and take advantage of
 

00:09:43.640 --> 00:09:47.170 align:start position:0%
can use and take advantage of
precompiled<00:09:44.150><c> headers</c><00:09:45.970><c> optimization</c><00:09:46.970><c> and</c>

00:09:47.170 --> 00:09:47.180 align:start position:0%
precompiled headers optimization and
 

00:09:47.180 --> 00:09:49.329 align:start position:0%
precompiled headers optimization and
I'll<00:09:47.990><c> touch</c><00:09:48.170><c> a</c><00:09:48.200><c> little</c><00:09:48.410><c> bit</c><00:09:48.500><c> on</c><00:09:48.620><c> altivec</c><00:09:49.130><c> as</c>

00:09:49.329 --> 00:09:49.339 align:start position:0%
I'll touch a little bit on altivec as
 

00:09:49.339 --> 00:09:55.900 align:start position:0%
I'll touch a little bit on altivec as
well<00:09:52.930><c> so</c><00:09:53.930><c> GCC</c><00:09:54.620><c> and</c><00:09:54.830><c> project</c><00:09:55.370><c> builder</c><00:09:55.670><c> have</c>

00:09:55.900 --> 00:09:55.910 align:start position:0%
well so GCC and project builder have
 

00:09:55.910 --> 00:09:58.690 align:start position:0%
well so GCC and project builder have
been<00:09:56.380><c> designed</c><00:09:57.380><c> for</c><00:09:57.620><c> a</c><00:09:57.680><c> while</c><00:09:57.860><c> to</c><00:09:58.160><c> work</c><00:09:58.339><c> very</c>

00:09:58.690 --> 00:09:58.700 align:start position:0%
been designed for a while to work very
 

00:09:58.700 --> 00:10:00.940 align:start position:0%
been designed for a while to work very
well<00:09:58.730><c> together</c><00:09:59.410><c> project</c><00:10:00.410><c> builder</c><00:10:00.680><c> is</c><00:10:00.800><c> our</c>

00:10:00.940 --> 00:10:00.950 align:start position:0%
well together project builder is our
 

00:10:00.950 --> 00:10:03.310 align:start position:0%
well together project builder is our
preferred<00:10:01.279><c> way</c><00:10:01.550><c> to</c><00:10:01.610><c> use</c><00:10:02.029><c> GCC</c><00:10:02.630><c> on</c><00:10:02.810><c> Mac</c><00:10:02.990><c> OS</c><00:10:03.290><c> 10</c>

00:10:03.310 --> 00:10:03.320 align:start position:0%
preferred way to use GCC on Mac OS 10
 

00:10:03.320 --> 00:10:05.800 align:start position:0%
preferred way to use GCC on Mac OS 10
it's<00:10:04.220><c> got</c><00:10:04.370><c> a</c><00:10:04.400><c> lot</c><00:10:04.610><c> of</c><00:10:04.640><c> nice</c><00:10:04.880><c> integration</c><00:10:05.540><c> for</c>

00:10:05.800 --> 00:10:05.810 align:start position:0%
it's got a lot of nice integration for
 

00:10:05.810 --> 00:10:06.100 align:start position:0%
it's got a lot of nice integration for
you

00:10:06.100 --> 00:10:06.110 align:start position:0%
you
 

00:10:06.110 --> 00:10:09.220 align:start position:0%
you
it<00:10:07.089><c> handles</c><00:10:08.089><c> most</c><00:10:08.510><c> of</c><00:10:08.690><c> the</c><00:10:08.779><c> command-line</c>

00:10:09.220 --> 00:10:09.230 align:start position:0%
it handles most of the command-line
 

00:10:09.230 --> 00:10:11.290 align:start position:0%
it handles most of the command-line
switches<00:10:09.620><c> with</c><00:10:10.010><c> with</c><00:10:10.490><c> gooeys</c><00:10:10.880><c> most</c><00:10:11.089><c> of</c><00:10:11.209><c> the</c>

00:10:11.290 --> 00:10:11.300 align:start position:0%
switches with with gooeys most of the
 

00:10:11.300 --> 00:10:12.760 align:start position:0%
switches with with gooeys most of the
most<00:10:11.420><c> common</c><00:10:11.839><c> command</c><00:10:12.080><c> line</c><00:10:12.230><c> switches</c><00:10:12.350><c> and</c>

00:10:12.760 --> 00:10:12.770 align:start position:0%
most common command line switches and
 

00:10:12.770 --> 00:10:14.680 align:start position:0%
most common command line switches and
there's<00:10:13.370><c> also</c><00:10:13.520><c> ways</c><00:10:13.760><c> to</c><00:10:13.970><c> access</c><00:10:14.150><c> some</c><00:10:14.570><c> of</c><00:10:14.600><c> the</c>

00:10:14.680 --> 00:10:14.690 align:start position:0%
there's also ways to access some of the
 

00:10:14.690 --> 00:10:16.240 align:start position:0%
there's also ways to access some of the
uncommon<00:10:15.260><c> pan</c><00:10:15.440><c> alliance</c><00:10:15.709><c> which</c><00:10:15.830><c> is</c><00:10:15.980><c> directly</c>

00:10:16.240 --> 00:10:16.250 align:start position:0%
uncommon pan alliance which is directly
 

00:10:16.250 --> 00:10:18.130 align:start position:0%
uncommon pan alliance which is directly
from<00:10:16.459><c> project</c><00:10:16.850><c> builder</c><00:10:17.120><c> it</c><00:10:17.600><c> has</c><00:10:17.779><c> integrated</c>

00:10:18.130 --> 00:10:18.140 align:start position:0%
from project builder it has integrated
 

00:10:18.140 --> 00:10:21.850 align:start position:0%
from project builder it has integrated
error<00:10:18.470><c> messages</c><00:10:19.100><c> so</c><00:10:19.940><c> that</c><00:10:19.970><c> when</c><00:10:20.420><c> GCC</c><00:10:20.959><c> has</c><00:10:21.620><c> an</c>

00:10:21.850 --> 00:10:21.860 align:start position:0%
error messages so that when GCC has an
 

00:10:21.860 --> 00:10:23.560 align:start position:0%
error messages so that when GCC has an
error<00:10:22.040><c> syntax</c><00:10:22.610><c> error</c><00:10:22.880><c> it</c><00:10:23.000><c> comes</c><00:10:23.240><c> up</c><00:10:23.420><c> in</c>

00:10:23.560 --> 00:10:23.570 align:start position:0%
error syntax error it comes up in
 

00:10:23.570 --> 00:10:24.940 align:start position:0%
error syntax error it comes up in
project<00:10:23.959><c> builder</c><00:10:24.170><c> and</c><00:10:24.320><c> those</c><00:10:24.589><c> of</c><00:10:24.740><c> you</c><00:10:24.829><c> have</c>

00:10:24.940 --> 00:10:24.950 align:start position:0%
project builder and those of you have
 

00:10:24.950 --> 00:10:26.290 align:start position:0%
project builder and those of you have
been<00:10:25.130><c> at</c><00:10:25.250><c> the</c><00:10:25.310><c> project</c><00:10:25.670><c> builder</c><00:10:25.880><c> session</c><00:10:26.180><c> how</c>

00:10:26.290 --> 00:10:26.300 align:start position:0%
been at the project builder session how
 

00:10:26.300 --> 00:10:27.519 align:start position:0%
been at the project builder session how
many<00:10:26.450><c> of</c><00:10:26.510><c> you</c><00:10:26.600><c> have</c><00:10:26.750><c> been</c><00:10:26.959><c> at</c><00:10:27.110><c> the</c><00:10:27.170><c> project</c>

00:10:27.519 --> 00:10:27.529 align:start position:0%
many of you have been at the project
 

00:10:27.529 --> 00:10:30.940 align:start position:0%
many of you have been at the project
builder<00:10:27.740><c> session</c><00:10:28.959><c> so</c><00:10:29.959><c> we</c><00:10:30.380><c> didn't</c><00:10:30.650><c> you</c><00:10:30.860><c> know</c>

00:10:30.940 --> 00:10:30.950 align:start position:0%
builder session so we didn't you know
 

00:10:30.950 --> 00:10:32.829 align:start position:0%
builder session so we didn't you know
call<00:10:31.279><c> that</c><00:10:31.520><c> out</c><00:10:31.700><c> this</c><00:10:32.209><c> year</c><00:10:32.540><c> just</c><00:10:32.720><c> because</c>

00:10:32.829 --> 00:10:32.839 align:start position:0%
call that out this year just because
 

00:10:32.839 --> 00:10:36.579 align:start position:0%
call that out this year just because
it's<00:10:33.800><c> been</c><00:10:34.010><c> around</c><00:10:34.040><c> for</c><00:10:34.490><c> a</c><00:10:34.520><c> while</c><00:10:34.579><c> now</c><00:10:35.589><c> but</c>

00:10:36.579 --> 00:10:36.589 align:start position:0%
it's been around for a while now but
 

00:10:36.589 --> 00:10:39.069 align:start position:0%
it's been around for a while now but
basically<00:10:37.339><c> GCC</c><00:10:38.060><c> actually</c><00:10:38.390><c> sends</c><00:10:38.660><c> a</c><00:10:38.720><c> message</c>

00:10:39.069 --> 00:10:39.079 align:start position:0%
basically GCC actually sends a message
 

00:10:39.079 --> 00:10:41.139 align:start position:0%
basically GCC actually sends a message
up<00:10:39.320><c> to</c><00:10:39.649><c> project</c><00:10:40.190><c> builder</c><00:10:40.459><c> and</c><00:10:40.760><c> project</c>

00:10:41.139 --> 00:10:41.149 align:start position:0%
up to project builder and project
 

00:10:41.149 --> 00:10:42.310 align:start position:0%
up to project builder and project
builder<00:10:41.329><c> will</c><00:10:41.450><c> display</c><00:10:41.720><c> the</c><00:10:41.870><c> error</c><00:10:41.959><c> message</c>

00:10:42.310 --> 00:10:42.320 align:start position:0%
builder will display the error message
 

00:10:42.320 --> 00:10:43.990 align:start position:0%
builder will display the error message
and<00:10:42.440><c> jump</c><00:10:42.680><c> to</c><00:10:42.800><c> the</c><00:10:42.920><c> jump</c><00:10:43.399><c> to</c><00:10:43.520><c> the</c><00:10:43.610><c> line</c><00:10:43.820><c> and</c>

00:10:43.990 --> 00:10:44.000 align:start position:0%
and jump to the jump to the line and
 

00:10:44.000 --> 00:10:49.329 align:start position:0%
and jump to the jump to the line and
source<00:10:44.209><c> code</c><00:10:46.570><c> GCC</c><00:10:47.570><c> also</c><00:10:47.959><c> provides</c><00:10:48.350><c> source</c>

00:10:49.329 --> 00:10:49.339 align:start position:0%
source code GCC also provides source
 

00:10:49.339 --> 00:10:51.790 align:start position:0%
source code GCC also provides source
code<00:10:49.610><c> indexing</c><00:10:50.120><c> information</c><00:10:50.660><c> to</c><00:10:51.260><c> project</c>

00:10:51.790 --> 00:10:51.800 align:start position:0%
code indexing information to project
 

00:10:51.800 --> 00:10:53.560 align:start position:0%
code indexing information to project
builder<00:10:52.130><c> so</c><00:10:52.790><c> for</c><00:10:53.120><c> any</c>

00:10:53.560 --> 00:10:53.570 align:start position:0%
builder so for any
 

00:10:53.570 --> 00:10:55.420 align:start position:0%
builder so for any
reference<00:10:54.200><c> information</c><00:10:54.500><c> that</c><00:10:55.130><c> you</c><00:10:55.250><c> need</c>

00:10:55.420 --> 00:10:55.430 align:start position:0%
reference information that you need
 

00:10:55.430 --> 00:10:57.730 align:start position:0%
reference information that you need
doing<00:10:55.670><c> global</c><00:10:56.150><c> searches</c><00:10:56.420><c> or</c><00:10:56.990><c> running</c><00:10:57.290><c> the</c><00:10:57.380><c> new</c>

00:10:57.730 --> 00:10:57.740 align:start position:0%
doing global searches or running the new
 

00:10:57.740 --> 00:10:59.380 align:start position:0%
doing global searches or running the new
class<00:10:58.040><c> browser</c><00:10:58.370><c> that</c><00:10:58.610><c> we</c><00:10:58.730><c> have</c><00:10:58.880><c> in</c><00:10:59.000><c> project</c>

00:10:59.380 --> 00:10:59.390 align:start position:0%
class browser that we have in project
 

00:10:59.390 --> 00:11:03.280 align:start position:0%
class browser that we have in project
builder<00:10:59.920><c> all</c><00:11:00.920><c> of</c><00:11:01.340><c> that</c><00:11:01.750><c> comes</c><00:11:02.750><c> off</c><00:11:03.020><c> of</c>

00:11:03.280 --> 00:11:03.290 align:start position:0%
builder all of that comes off of
 

00:11:03.290 --> 00:11:07.440 align:start position:0%
builder all of that comes off of
information<00:11:04.220><c> that</c><00:11:04.310><c> the</c><00:11:04.430><c> compiler</c><00:11:04.730><c> supplies</c>

00:11:07.440 --> 00:11:07.450 align:start position:0%
 
 

00:11:07.450 --> 00:11:09.250 align:start position:0%
 
let's<00:11:08.450><c> talk</c><00:11:08.570><c> a</c><00:11:08.600><c> little</c><00:11:08.660><c> bit</c><00:11:08.900><c> about</c><00:11:08.930><c> the</c><00:11:09.110><c> pre</c>

00:11:09.250 --> 00:11:09.260 align:start position:0%
let's talk a little bit about the pre
 

00:11:09.260 --> 00:11:13.180 align:start position:0%
let's talk a little bit about the pre
compiler<00:11:09.760><c> the</c><00:11:10.760><c> pre</c><00:11:10.910><c> compiler</c><00:11:11.290><c> creates</c><00:11:12.290><c> a</c><00:11:12.680><c> file</c>

00:11:13.180 --> 00:11:13.190 align:start position:0%
compiler the pre compiler creates a file
 

00:11:13.190 --> 00:11:15.580 align:start position:0%
compiler the pre compiler creates a file
of<00:11:13.550><c> pre</c><00:11:13.820><c> process</c><00:11:14.300><c> and</c><00:11:14.540><c> tokenized</c><00:11:15.020><c> headers</c><00:11:15.410><c> so</c>

00:11:15.580 --> 00:11:15.590 align:start position:0%
of pre process and tokenized headers so
 

00:11:15.590 --> 00:11:18.310 align:start position:0%
of pre process and tokenized headers so
it<00:11:15.680><c> basically</c><00:11:15.800><c> takes</c><00:11:16.310><c> the</c><00:11:16.580><c> the</c><00:11:17.170><c> group</c><00:11:18.170><c> of</c>

00:11:18.310 --> 00:11:18.320 align:start position:0%
it basically takes the the group of
 

00:11:18.320 --> 00:11:20.350 align:start position:0%
it basically takes the the group of
headers<00:11:18.620><c> that</c><00:11:18.860><c> we</c><00:11:19.010><c> have</c><00:11:19.220><c> for</c><00:11:19.550><c> say</c><00:11:19.790><c> carbon</c><00:11:20.240><c> or</c>

00:11:20.350 --> 00:11:20.360 align:start position:0%
headers that we have for say carbon or
 

00:11:20.360 --> 00:11:23.290 align:start position:0%
headers that we have for say carbon or
cocoa<00:11:20.720><c> and</c><00:11:20.920><c> it</c><00:11:21.920><c> token</c><00:11:22.400><c> eise's</c><00:11:22.730><c> them</c><00:11:22.910><c> and</c><00:11:23.120><c> puts</c>

00:11:23.290 --> 00:11:23.300 align:start position:0%
cocoa and it token eise's them and puts
 

00:11:23.300 --> 00:11:25.600 align:start position:0%
cocoa and it token eise's them and puts
them<00:11:23.420><c> all</c><00:11:23.570><c> into</c><00:11:23.720><c> one</c><00:11:23.960><c> big</c><00:11:24.170><c> file</c><00:11:24.470><c> that</c><00:11:25.370><c> we</c><00:11:25.460><c> can</c>

00:11:25.600 --> 00:11:25.610 align:start position:0%
them all into one big file that we can
 

00:11:25.610 --> 00:11:28.270 align:start position:0%
them all into one big file that we can
then<00:11:25.700><c> access</c><00:11:26.050><c> the</c><00:11:27.050><c> big</c><00:11:27.260><c> thing</c><00:11:27.500><c> for</c><00:11:27.680><c> us</c><00:11:27.740><c> is</c><00:11:28.220><c> that</c>

00:11:28.270 --> 00:11:28.280 align:start position:0%
then access the big thing for us is that
 

00:11:28.280 --> 00:11:30.250 align:start position:0%
then access the big thing for us is that
it<00:11:28.760><c> not</c><00:11:28.880><c> only</c><00:11:29.120><c> does</c><00:11:29.330><c> this</c><00:11:29.510><c> which</c><00:11:29.660><c> reduces</c><00:11:30.080><c> some</c>

00:11:30.250 --> 00:11:30.260 align:start position:0%
it not only does this which reduces some
 

00:11:30.260 --> 00:11:32.770 align:start position:0%
it not only does this which reduces some
of<00:11:30.350><c> our</c><00:11:30.470><c> I</c><00:11:30.530><c> o</c><00:11:30.620><c> costs</c><00:11:31.280><c> and</c><00:11:31.550><c> reduces</c><00:11:32.420><c> some</c><00:11:32.540><c> of</c><00:11:32.600><c> our</c>

00:11:32.770 --> 00:11:32.780 align:start position:0%
of our I o costs and reduces some of our
 

00:11:32.780 --> 00:11:36.480 align:start position:0%
of our I o costs and reduces some of our
lexing<00:11:33.200><c> costs</c><00:11:33.560><c> but</c><00:11:34.460><c> it</c><00:11:34.610><c> also</c><00:11:34.850><c> at</c><00:11:35.450><c> compile</c><00:11:36.410><c> time</c>

00:11:36.480 --> 00:11:36.490 align:start position:0%
lexing costs but it also at compile time
 

00:11:36.490 --> 00:11:42.490 align:start position:0%
lexing costs but it also at compile time
selectively<00:11:37.490><c> unpark</c><00:11:38.560><c> own</c><00:11:39.670><c> what's</c><00:11:40.670><c> used</c><00:11:41.500><c> some</c>

00:11:42.490 --> 00:11:42.500 align:start position:0%
selectively unpark own what's used some
 

00:11:42.500 --> 00:11:44.740 align:start position:0%
selectively unpark own what's used some
of<00:11:42.530><c> our</c><00:11:42.680><c> measurements</c><00:11:43.250><c> when</c><00:11:43.640><c> we're</c><00:11:43.880><c> working</c>

00:11:44.740 --> 00:11:44.750 align:start position:0%
of our measurements when we're working
 

00:11:44.750 --> 00:11:47.860 align:start position:0%
of our measurements when we're working
on<00:11:44.870><c> compile</c><00:11:45.230><c> time</c><00:11:45.530><c> we</c><00:11:46.070><c> see</c><00:11:46.280><c> that</c><00:11:46.400><c> 174</c><00:11:47.360><c> thousand</c>

00:11:47.860 --> 00:11:47.870 align:start position:0%
on compile time we see that 174 thousand
 

00:11:47.870 --> 00:11:50.320 align:start position:0%
on compile time we see that 174 thousand
lines<00:11:48.050><c> of</c><00:11:48.260><c> declarations</c><00:11:48.920><c> get</c><00:11:49.910><c> brought</c><00:11:50.150><c> in</c>

00:11:50.320 --> 00:11:50.330 align:start position:0%
lines of declarations get brought in
 

00:11:50.330 --> 00:11:54.100 align:start position:0%
lines of declarations get brought in
from<00:11:50.510><c> carbon</c><00:11:51.580><c> so</c><00:11:52.580><c> not</c><00:11:53.360><c> everyone</c><00:11:53.690><c> uses</c>

00:11:54.100 --> 00:11:54.110 align:start position:0%
from carbon so not everyone uses
 

00:11:54.110 --> 00:11:56.830 align:start position:0%
from carbon so not everyone uses
obviously<00:11:54.620><c> even</c><00:11:54.860><c> even</c><00:11:55.370><c> a</c><00:11:55.490><c> small</c><00:11:56.240><c> fraction</c><00:11:56.750><c> of</c>

00:11:56.830 --> 00:11:56.840 align:start position:0%
obviously even even a small fraction of
 

00:11:56.840 --> 00:11:59.230 align:start position:0%
obviously even even a small fraction of
that<00:11:57.050><c> so</c><00:11:57.710><c> the</c><00:11:58.190><c> big</c><00:11:58.340><c> win</c><00:11:58.550><c> and</c><00:11:58.640><c> the</c><00:11:58.730><c> pre</c><00:11:58.880><c> compiler</c>

00:11:59.230 --> 00:11:59.240 align:start position:0%
that so the big win and the pre compiler
 

00:11:59.240 --> 00:12:02.080 align:start position:0%
that so the big win and the pre compiler
is<00:11:59.420><c> it</c><00:11:59.600><c> can</c><00:11:59.750><c> selectively</c><00:12:00.380><c> pull</c><00:12:00.890><c> in</c><00:12:01.130><c> those</c>

00:12:02.080 --> 00:12:02.090 align:start position:0%
is it can selectively pull in those
 

00:12:02.090 --> 00:12:04.210 align:start position:0%
is it can selectively pull in those
declarations<00:12:02.810><c> that</c><00:12:03.290><c> you're</c><00:12:03.530><c> using</c><00:12:03.800><c> what</c><00:12:04.070><c> this</c>

00:12:04.210 --> 00:12:04.220 align:start position:0%
declarations that you're using what this
 

00:12:04.220 --> 00:12:06.280 align:start position:0%
declarations that you're using what this
does<00:12:04.460><c> is</c><00:12:04.610><c> it</c><00:12:04.730><c> reduces</c><00:12:05.210><c> the</c><00:12:05.420><c> size</c><00:12:05.630><c> of</c><00:12:05.870><c> that</c><00:12:06.020><c> pre</c>

00:12:06.280 --> 00:12:06.290 align:start position:0%
does is it reduces the size of that pre
 

00:12:06.290 --> 00:12:08.050 align:start position:0%
does is it reduces the size of that pre
processed<00:12:06.800><c> file</c><00:12:07.070><c> that</c><00:12:07.370><c> we</c><00:12:07.460><c> generate</c><00:12:07.940><c> and</c>

00:12:08.050 --> 00:12:08.060 align:start position:0%
processed file that we generate and
 

00:12:08.060 --> 00:12:10.450 align:start position:0%
processed file that we generate and
reduces<00:12:09.050><c> the</c><00:12:09.170><c> overall</c><00:12:09.500><c> memory</c><00:12:09.800><c> footprint</c><00:12:10.310><c> of</c>

00:12:10.450 --> 00:12:10.460 align:start position:0%
reduces the overall memory footprint of
 

00:12:10.460 --> 00:12:12.070 align:start position:0%
reduces the overall memory footprint of
the<00:12:10.580><c> compiler</c><00:12:11.060><c> itself</c><00:12:11.180><c> so</c><00:12:11.630><c> it</c><00:12:11.720><c> doesn't</c><00:12:11.960><c> have</c>

00:12:12.070 --> 00:12:12.080 align:start position:0%
the compiler itself so it doesn't have
 

00:12:12.080 --> 00:12:14.680 align:start position:0%
the compiler itself so it doesn't have
to<00:12:12.200><c> push</c><00:12:12.440><c> out</c><00:12:12.650><c> the</c><00:12:12.800><c> IDE</c><00:12:13.130><c> to</c><00:12:13.370><c> make</c><00:12:13.520><c> room</c><00:12:13.790><c> for</c><00:12:13.820><c> for</c>

00:12:14.680 --> 00:12:14.690 align:start position:0%
to push out the IDE to make room for for
 

00:12:14.690 --> 00:12:20.590 align:start position:0%
to push out the IDE to make room for for
the<00:12:14.780><c> parsing</c><00:12:15.170><c> that</c><00:12:15.260><c> it</c><00:12:15.380><c> has</c><00:12:15.500><c> to</c><00:12:15.650><c> do</c><00:12:19.450><c> so</c><00:12:20.450><c> when</c>

00:12:20.590 --> 00:12:20.600 align:start position:0%
the parsing that it has to do so when
 

00:12:20.600 --> 00:12:23.050 align:start position:0%
the parsing that it has to do so when
we're<00:12:20.690><c> using</c><00:12:20.870><c> precompiled</c><00:12:21.560><c> headers</c><00:12:22.060><c> we</c>

00:12:23.050 --> 00:12:23.060 align:start position:0%
we're using precompiled headers we
 

00:12:23.060 --> 00:12:24.970 align:start position:0%
we're using precompiled headers we
already<00:12:23.390><c> supply</c><00:12:23.870><c> you</c><00:12:23.930><c> with</c><00:12:24.320><c> precompiled</c>

00:12:24.970 --> 00:12:24.980 align:start position:0%
already supply you with precompiled
 

00:12:24.980 --> 00:12:27.850 align:start position:0%
already supply you with precompiled
headers<00:12:25.280><c> for</c><00:12:26.120><c> the</c><00:12:26.300><c> frameworks</c><00:12:26.810><c> that</c><00:12:27.230><c> we</c><00:12:27.590><c> ship</c>

00:12:27.850 --> 00:12:27.860 align:start position:0%
headers for the frameworks that we ship
 

00:12:27.860 --> 00:12:29.140 align:start position:0%
headers for the frameworks that we ship
for<00:12:28.010><c> the</c><00:12:28.100><c> major</c><00:12:28.280><c> umbrella</c><00:12:28.640><c> frameworks</c><00:12:29.030><c> so</c>

00:12:29.140 --> 00:12:29.150 align:start position:0%
for the major umbrella frameworks so
 

00:12:29.150 --> 00:12:30.760 align:start position:0%
for the major umbrella frameworks so
carbon<00:12:29.390><c> and</c><00:12:29.600><c> cocoa</c><00:12:29.930><c> already</c><00:12:30.320><c> have</c><00:12:30.530><c> their</c>

00:12:30.760 --> 00:12:30.770 align:start position:0%
carbon and cocoa already have their
 

00:12:30.770 --> 00:12:32.470 align:start position:0%
carbon and cocoa already have their
precompiled<00:12:31.310><c> headers</c><00:12:31.580><c> if</c><00:12:31.760><c> you</c><00:12:31.850><c> if</c><00:12:32.030><c> anybody's</c>

00:12:32.470 --> 00:12:32.480 align:start position:0%
precompiled headers if you if anybody's
 

00:12:32.480 --> 00:12:34.390 align:start position:0%
precompiled headers if you if anybody's
gone<00:12:32.630><c> nosing</c><00:12:33.080><c> around</c><00:12:33.200><c> inside</c><00:12:33.620><c> of</c><00:12:33.680><c> the</c><00:12:33.890><c> the</c>

00:12:34.390 --> 00:12:34.400 align:start position:0%
gone nosing around inside of the the
 

00:12:34.400 --> 00:12:36.460 align:start position:0%
gone nosing around inside of the the
framework<00:12:34.850><c> you'll</c><00:12:35.000><c> see</c><00:12:35.150><c> a</c><00:12:35.180><c> dot</c><00:12:35.420><c> P</c><00:12:35.720><c> file</c><00:12:35.990><c> living</c>

00:12:36.460 --> 00:12:36.470 align:start position:0%
framework you'll see a dot P file living
 

00:12:36.470 --> 00:12:39.460 align:start position:0%
framework you'll see a dot P file living
in<00:12:36.590><c> there</c><00:12:36.770><c> and</c><00:12:36.950><c> now</c><00:12:37.820><c> a</c><00:12:37.850><c> dot</c><00:12:38.240><c> PP</c><00:12:38.780><c> file</c><00:12:39.020><c> which</c><00:12:39.290><c> is</c>

00:12:39.460 --> 00:12:39.470 align:start position:0%
in there and now a dot PP file which is
 

00:12:39.470 --> 00:12:42.190 align:start position:0%
in there and now a dot PP file which is
the<00:12:39.940><c> C++</c><00:12:40.940><c> version</c><00:12:41.180><c> of</c><00:12:41.480><c> those</c><00:12:41.600><c> precompiled</c>

00:12:42.190 --> 00:12:42.200 align:start position:0%
the C++ version of those precompiled
 

00:12:42.200 --> 00:12:45.490 align:start position:0%
the C++ version of those precompiled
headers<00:12:43.540><c> project</c><00:12:44.540><c> builder</c><00:12:44.780><c> also</c><00:12:44.930><c> supports</c>

00:12:45.490 --> 00:12:45.500 align:start position:0%
headers project builder also supports
 

00:12:45.500 --> 00:12:47.350 align:start position:0%
headers project builder also supports
creating<00:12:45.920><c> your</c><00:12:46.070><c> own</c><00:12:46.160><c> set</c><00:12:46.580><c> of</c><00:12:46.610><c> precompiled</c>

00:12:47.350 --> 00:12:47.360 align:start position:0%
creating your own set of precompiled
 

00:12:47.360 --> 00:12:48.550 align:start position:0%
creating your own set of precompiled
headers<00:12:47.600><c> you</c><00:12:47.720><c> can</c><00:12:47.780><c> actually</c><00:12:48.110><c> have</c><00:12:48.230><c> more</c><00:12:48.410><c> than</c>

00:12:48.550 --> 00:12:48.560 align:start position:0%
headers you can actually have more than
 

00:12:48.560 --> 00:12:50.440 align:start position:0%
headers you can actually have more than
one<00:12:48.740><c> precompiled</c><00:12:49.340><c> header</c><00:12:49.490><c> and</c><00:12:49.970><c> in</c><00:12:50.270><c> a</c><00:12:50.360><c> minute</c>

00:12:50.440 --> 00:12:50.450 align:start position:0%
one precompiled header and in a minute
 

00:12:50.450 --> 00:12:53.140 align:start position:0%
one precompiled header and in a minute
I'll<00:12:50.690><c> bring</c><00:12:50.930><c> dabangg</c><00:12:51.710><c> up</c><00:12:51.920><c> to</c><00:12:52.040><c> show</c><00:12:52.250><c> how</c><00:12:52.850><c> we</c><00:12:52.910><c> do</c>

00:12:53.140 --> 00:12:53.150 align:start position:0%
I'll bring dabangg up to show how we do
 

00:12:53.150 --> 00:12:56.680 align:start position:0%
I'll bring dabangg up to show how we do
that<00:12:53.360><c> and</c><00:12:53.980><c> the</c><00:12:54.980><c> preprocessor</c><00:12:55.690><c> will</c>

00:12:56.680 --> 00:12:56.690 align:start position:0%
that and the preprocessor will
 

00:12:56.690 --> 00:12:58.240 align:start position:0%
that and the preprocessor will
automatically<00:12:57.200><c> find</c><00:12:57.470><c> these</c><00:12:57.650><c> precompiled</c>

00:12:58.240 --> 00:12:58.250 align:start position:0%
automatically find these precompiled
 

00:12:58.250 --> 00:12:59.500 align:start position:0%
automatically find these precompiled
headers<00:12:58.490><c> so</c><00:12:58.610><c> you</c><00:12:58.700><c> don't</c><00:12:58.880><c> have</c><00:12:59.030><c> to</c><00:12:59.180><c> worry</c><00:12:59.360><c> about</c>

00:12:59.500 --> 00:12:59.510 align:start position:0%
headers so you don't have to worry about
 

00:12:59.510 --> 00:13:01.870 align:start position:0%
headers so you don't have to worry about
you<00:13:00.020><c> know</c><00:13:00.050><c> telling</c><00:13:00.620><c> project</c><00:13:01.130><c> builder</c><00:13:01.460><c> or</c>

00:13:01.870 --> 00:13:01.880 align:start position:0%
you know telling project builder or
 

00:13:01.880 --> 00:13:03.490 align:start position:0%
you know telling project builder or
telling<00:13:02.300><c> the</c><00:13:02.390><c> preprocessor</c><00:13:02.720><c> where</c><00:13:03.320><c> these</c>

00:13:03.490 --> 00:13:03.500 align:start position:0%
telling the preprocessor where these
 

00:13:03.500 --> 00:13:05.320 align:start position:0%
telling the preprocessor where these
headers<00:13:04.100><c> are</c><00:13:04.310><c> it</c><00:13:04.520><c> will</c><00:13:04.700><c> look</c><00:13:04.910><c> for</c><00:13:05.090><c> them</c><00:13:05.210><c> if</c>

00:13:05.320 --> 00:13:05.330 align:start position:0%
headers are it will look for them if
 

00:13:05.330 --> 00:13:05.560 align:start position:0%
headers are it will look for them if
they're<00:13:05.450><c> in</c>

00:13:05.560 --> 00:13:05.570 align:start position:0%
they're in
 

00:13:05.570 --> 00:13:07.930 align:start position:0%
they're in
same<00:13:05.840><c> spot</c><00:13:06.170><c> as</c><00:13:06.380><c> the</c><00:13:06.410><c> dot</c><00:13:06.950><c> H</c><00:13:07.130><c> that</c><00:13:07.400><c> was</c><00:13:07.520><c> created</c>

00:13:07.930 --> 00:13:07.940 align:start position:0%
same spot as the dot H that was created
 

00:13:07.940 --> 00:13:12.220 align:start position:0%
same spot as the dot H that was created
from<00:13:09.400><c> so</c><00:13:10.400><c> again</c><00:13:10.700><c> there</c><00:13:11.510><c> are</c><00:13:11.630><c> some</c><00:13:11.810><c> limitations</c>

00:13:12.220 --> 00:13:12.230 align:start position:0%
from so again there are some limitations
 

00:13:12.230 --> 00:13:14.860 align:start position:0%
from so again there are some limitations
to<00:13:12.560><c> precompiled</c><00:13:13.250><c> headers</c><00:13:13.520><c> the</c><00:13:14.480><c> macro</c>

00:13:14.860 --> 00:13:14.870 align:start position:0%
to precompiled headers the macro
 

00:13:14.870 --> 00:13:18.070 align:start position:0%
to precompiled headers the macro
settings<00:13:15.700><c> compiler</c><00:13:16.700><c> settings</c><00:13:17.150><c> and</c><00:13:17.420><c> the</c><00:13:17.840><c> time</c>

00:13:18.070 --> 00:13:18.080 align:start position:0%
settings compiler settings and the time
 

00:13:18.080 --> 00:13:20.560 align:start position:0%
settings compiler settings and the time
stamps<00:13:18.620><c> that</c><00:13:18.800><c> they</c><00:13:19.160><c> were</c><00:13:19.220><c> built</c><00:13:19.490><c> on</c><00:13:19.670><c> have</c><00:13:20.360><c> to</c>

00:13:20.560 --> 00:13:20.570 align:start position:0%
stamps that they were built on have to
 

00:13:20.570 --> 00:13:24.310 align:start position:0%
stamps that they were built on have to
match<00:13:20.830><c> if</c><00:13:21.830><c> there's</c><00:13:22.100><c> a</c><00:13:22.190><c> change</c><00:13:22.820><c> in</c><00:13:23.030><c> them</c><00:13:23.320><c> we</c>

00:13:24.310 --> 00:13:24.320 align:start position:0%
match if there's a change in them we
 

00:13:24.320 --> 00:13:25.810 align:start position:0%
match if there's a change in them we
have<00:13:24.470><c> a</c><00:13:24.500><c> fallback</c><00:13:24.740><c> position</c><00:13:25.040><c> where</c><00:13:25.490><c> we</c><00:13:25.610><c> go</c><00:13:25.760><c> to</c>

00:13:25.810 --> 00:13:25.820 align:start position:0%
have a fallback position where we go to
 

00:13:25.820 --> 00:13:28.510 align:start position:0%
have a fallback position where we go to
using<00:13:26.360><c> the</c><00:13:26.450><c> text-based</c><00:13:26.840><c> header</c><00:13:27.620><c> which</c><00:13:28.310><c> is</c>

00:13:28.510 --> 00:13:28.520 align:start position:0%
using the text-based header which is
 

00:13:28.520 --> 00:13:29.920 align:start position:0%
using the text-based header which is
going<00:13:28.790><c> to</c><00:13:28.850><c> slow</c><00:13:29.030><c> down</c><00:13:29.060><c> your</c><00:13:29.210><c> compile</c><00:13:29.630><c> times</c>

00:13:29.920 --> 00:13:29.930 align:start position:0%
going to slow down your compile times
 

00:13:29.930 --> 00:13:34.060 align:start position:0%
going to slow down your compile times
they<00:13:30.680><c> can</c><00:13:30.830><c> be</c><00:13:30.920><c> included</c><00:13:31.280><c> from</c><00:13:31.760><c> C++</c><00:13:32.630><c> files</c><00:13:33.070><c> but</c>

00:13:34.060 --> 00:13:34.070 align:start position:0%
they can be included from C++ files but
 

00:13:34.070 --> 00:13:39.970 align:start position:0%
they can be included from C++ files but
they<00:13:34.340><c> cannot</c><00:13:34.730><c> contain</c><00:13:35.260><c> C++</c><00:13:36.260><c> syntax</c><00:13:38.890><c> so</c><00:13:39.890><c> now</c>

00:13:39.970 --> 00:13:39.980 align:start position:0%
they cannot contain C++ syntax so now
 

00:13:39.980 --> 00:13:41.830 align:start position:0%
they cannot contain C++ syntax so now
I'd<00:13:40.040><c> like</c><00:13:40.190><c> to</c><00:13:40.250><c> bring</c><00:13:40.490><c> up</c><00:13:40.610><c> the</c><00:13:40.790><c> vein</c><00:13:40.970><c> patel</c><00:13:41.570><c> and</c>

00:13:41.830 --> 00:13:41.840 align:start position:0%
I'd like to bring up the vein patel and
 

00:13:41.840 --> 00:13:44.020 align:start position:0%
I'd like to bring up the vein patel and
we're<00:13:42.830><c> going</c><00:13:42.950><c> to</c><00:13:42.980><c> go</c><00:13:43.130><c> through</c><00:13:43.460><c> how</c><00:13:43.640><c> you</c><00:13:43.700><c> create</c>

00:13:44.020 --> 00:13:44.030 align:start position:0%
we're going to go through how you create
 

00:13:44.030 --> 00:13:46.330 align:start position:0%
we're going to go through how you create
your<00:13:44.060><c> own</c><00:13:44.180><c> precompiled</c><00:13:44.930><c> header</c><00:13:45.110><c> with</c><00:13:45.920><c> project</c>

00:13:46.330 --> 00:13:46.340 align:start position:0%
your own precompiled header with project
 

00:13:46.340 --> 00:13:50.750 align:start position:0%
your own precompiled header with project
builder

00:13:50.750 --> 00:13:50.760 align:start position:0%
 
 

00:13:50.760 --> 00:13:55.770 align:start position:0%
 
[Applause]

00:13:55.770 --> 00:13:55.780 align:start position:0%
[Applause]
 

00:13:55.780 --> 00:13:59.710 align:start position:0%
[Applause]
my<00:13:56.780><c> demo</c><00:13:57.020><c> script</c><00:13:57.350><c> here</c><00:13:57.700><c> so</c><00:13:58.700><c> can</c><00:13:58.850><c> we</c><00:13:58.970><c> have</c><00:13:59.000><c> demo</c>

00:13:59.710 --> 00:13:59.720 align:start position:0%
my demo script here so can we have demo
 

00:13:59.720 --> 00:14:03.870 align:start position:0%
my demo script here so can we have demo
2<00:14:00.020><c> up</c><00:14:00.200><c> on</c><00:14:00.380><c> both</c><00:14:00.860><c> of</c><00:14:00.890><c> the</c><00:14:01.070><c> screens</c><00:14:01.370><c> here</c><00:14:02.380><c> great</c>

00:14:03.870 --> 00:14:03.880 align:start position:0%
2 up on both of the screens here great
 

00:14:03.880 --> 00:14:06.400 align:start position:0%
2 up on both of the screens here great
so<00:14:04.880><c> what</c><00:14:04.970><c> we</c><00:14:05.090><c> have</c><00:14:05.270><c> is</c><00:14:05.390><c> just</c><00:14:05.420><c> the</c><00:14:05.750><c> example</c>

00:14:06.400 --> 00:14:06.410 align:start position:0%
so what we have is just the example
 

00:14:06.410 --> 00:14:09.880 align:start position:0%
so what we have is just the example
project<00:14:07.660><c> appearance</c><00:14:08.660><c> sample</c><00:14:09.080><c> and</c><00:14:09.260><c> we</c><00:14:09.680><c> brought</c>

00:14:09.880 --> 00:14:09.890 align:start position:0%
project appearance sample and we brought
 

00:14:09.890 --> 00:14:12.610 align:start position:0%
project appearance sample and we brought
it<00:14:10.040><c> up</c><00:14:10.160><c> in</c><00:14:10.280><c> project</c><00:14:10.700><c> builder</c><00:14:11.230><c> and</c><00:14:12.230><c> the</c><00:14:12.410><c> first</c>

00:14:12.610 --> 00:14:12.620 align:start position:0%
it up in project builder and the first
 

00:14:12.620 --> 00:14:14.860 align:start position:0%
it up in project builder and the first
thing<00:14:12.770><c> we've</c><00:14:12.920><c> done</c><00:14:13.130><c> is</c><00:14:13.370><c> we've</c><00:14:13.600><c> precooked</c><00:14:14.600><c> a</c>

00:14:14.860 --> 00:14:14.870 align:start position:0%
thing we've done is we've precooked a
 

00:14:14.870 --> 00:14:17.860 align:start position:0%
thing we've done is we've precooked a
small<00:14:15.650><c> header</c><00:14:15.920><c> and</c><00:14:16.270><c> if</c><00:14:17.270><c> those</c><00:14:17.420><c> of</c><00:14:17.450><c> you</c><00:14:17.690><c> can</c>

00:14:17.860 --> 00:14:17.870 align:start position:0%
small header and if those of you can
 

00:14:17.870 --> 00:14:19.450 align:start position:0%
small header and if those of you can
read<00:14:18.050><c> this</c><00:14:18.200><c> what</c><00:14:18.500><c> devane's</c><00:14:18.860><c> gone</c><00:14:19.130><c> in</c><00:14:19.250><c> and</c><00:14:19.400><c> done</c>

00:14:19.450 --> 00:14:19.460 align:start position:0%
read this what devane's gone in and done
 

00:14:19.460 --> 00:14:23.350 align:start position:0%
read this what devane's gone in and done
is<00:14:19.700><c> set</c><00:14:19.990><c> set</c><00:14:20.990><c> a</c><00:14:21.050><c> macro</c><00:14:21.500><c> to</c><00:14:21.530><c> be</c><00:14:21.980><c> debug</c><00:14:22.790><c> level</c><00:14:22.970><c> 2</c>

00:14:23.350 --> 00:14:23.360 align:start position:0%
is set set a macro to be debug level 2
 

00:14:23.360 --> 00:14:27.450 align:start position:0%
is set set a macro to be debug level 2
what<00:14:24.230><c> this</c><00:14:24.380><c> is</c><00:14:24.500><c> going</c><00:14:24.680><c> to</c><00:14:24.770><c> do</c><00:14:24.980><c> is</c><00:14:25.840><c> basically</c>

00:14:27.450 --> 00:14:27.460 align:start position:0%
what this is going to do is basically
 

00:14:27.460 --> 00:14:30.370 align:start position:0%
what this is going to do is basically
break<00:14:28.460><c> the</c><00:14:28.640><c> relationship</c><00:14:29.210><c> between</c><00:14:30.050><c> this</c>

00:14:30.370 --> 00:14:30.380 align:start position:0%
break the relationship between this
 

00:14:30.380 --> 00:14:32.140 align:start position:0%
break the relationship between this
project<00:14:30.860><c> and</c><00:14:31.070><c> the</c><00:14:31.190><c> precompiled</c><00:14:31.820><c> header</c><00:14:31.970><c> that</c>

00:14:32.140 --> 00:14:32.150 align:start position:0%
project and the precompiled header that
 

00:14:32.150 --> 00:14:36.070 align:start position:0%
project and the precompiled header that
we<00:14:32.270><c> ship</c><00:14:32.540><c> with</c><00:14:33.440><c> the</c><00:14:34.160><c> carbon</c><00:14:34.520><c> framework</c><00:14:34.910><c> so</c><00:14:35.840><c> the</c>

00:14:36.070 --> 00:14:36.080 align:start position:0%
we ship with the carbon framework so the
 

00:14:36.080 --> 00:14:37.960 align:start position:0%
we ship with the carbon framework so the
compiler<00:14:36.500><c> will</c><00:14:36.620><c> fall</c><00:14:36.920><c> back</c><00:14:37.160><c> on</c><00:14:37.460><c> using</c><00:14:37.700><c> the</c>

00:14:37.960 --> 00:14:37.970 align:start position:0%
compiler will fall back on using the
 

00:14:37.970 --> 00:14:39.720 align:start position:0%
compiler will fall back on using the
text<00:14:38.300><c> base</c><00:14:38.510><c> header</c><00:14:38.780><c> and</c><00:14:38.960><c> bring</c><00:14:39.140><c> in</c><00:14:39.260><c> all</c>

00:14:39.720 --> 00:14:39.730 align:start position:0%
text base header and bring in all
 

00:14:39.730 --> 00:14:42.430 align:start position:0%
text base header and bring in all
174,000<00:14:40.730><c> lines</c><00:14:40.880><c> and</c><00:14:41.060><c> declarations</c><00:14:41.630><c> so</c><00:14:42.230><c> let's</c>

00:14:42.430 --> 00:14:42.440 align:start position:0%
174,000 lines and declarations so let's
 

00:14:42.440 --> 00:14:43.840 align:start position:0%
174,000 lines and declarations so let's
see<00:14:42.560><c> what</c><00:14:42.710><c> that</c><00:14:42.740><c> looks</c><00:14:43.010><c> like</c><00:14:43.100><c> we've</c><00:14:43.640><c> basically</c>

00:14:43.840 --> 00:14:43.850 align:start position:0%
see what that looks like we've basically
 

00:14:43.850 --> 00:14:51.250 align:start position:0%
see what that looks like we've basically
just<00:14:44.360><c> tweaked</c><00:14:44.660><c> one</c><00:14:45.440><c> file</c><00:14:48.370><c> and</c><00:14:49.960><c> let's</c><00:14:50.960><c> go</c><00:14:51.110><c> ahead</c>

00:14:51.250 --> 00:14:51.260 align:start position:0%
just tweaked one file and let's go ahead
 

00:14:51.260 --> 00:14:54.499 align:start position:0%
just tweaked one file and let's go ahead
and<00:14:51.380><c> build</c><00:14:51.500><c> that</c>

00:14:54.499 --> 00:14:54.509 align:start position:0%
 
 

00:14:54.509 --> 00:14:56.549 align:start position:0%
 
so<00:14:55.509><c> we're</c><00:14:55.660><c> going</c><00:14:55.779><c> ahead</c><00:14:55.930><c> and</c><00:14:56.110><c> building</c><00:14:56.439><c> that</c>

00:14:56.549 --> 00:14:56.559 align:start position:0%
so we're going ahead and building that
 

00:14:56.559 --> 00:14:58.259 align:start position:0%
so we're going ahead and building that
and<00:14:56.769><c> you're</c><00:14:56.860><c> seeing</c><00:14:57.160><c> as</c><00:14:57.430><c> this</c><00:14:57.699><c> happens</c><00:14:58.120><c> that</c>

00:14:58.259 --> 00:14:58.269 align:start position:0%
and you're seeing as this happens that
 

00:14:58.269 --> 00:15:00.480 align:start position:0%
and you're seeing as this happens that
we<00:14:58.360><c> get</c><00:14:58.480><c> a</c><00:14:58.509><c> lot</c><00:14:58.720><c> of</c><00:14:58.749><c> warnings</c><00:14:59.319><c> saying</c><00:15:00.100><c> that</c><00:15:00.370><c> we</c>

00:15:00.480 --> 00:15:00.490 align:start position:0%
we get a lot of warnings saying that we
 

00:15:00.490 --> 00:15:03.920 align:start position:0%
we get a lot of warnings saying that we
can't<00:15:00.819><c> use</c><00:15:01.180><c> the</c><00:15:01.839><c> precompiled</c><00:15:02.499><c> header</c><00:15:02.680><c> and</c>

00:15:03.920 --> 00:15:03.930 align:start position:0%
can't use the precompiled header and
 

00:15:03.930 --> 00:15:06.090 align:start position:0%
can't use the precompiled header and
there<00:15:04.930><c> we're</c><00:15:05.110><c> done</c><00:15:05.230><c> and</c><00:15:05.350><c> that</c><00:15:05.470><c> was</c><00:15:05.589><c> one</c><00:15:05.800><c> file</c>

00:15:06.090 --> 00:15:06.100 align:start position:0%
there we're done and that was one file
 

00:15:06.100 --> 00:15:07.559 align:start position:0%
there we're done and that was one file
just<00:15:06.579><c> to</c><00:15:06.730><c> compile</c><00:15:07.059><c> all</c><00:15:07.329><c> of</c><00:15:07.360><c> those</c>

00:15:07.559 --> 00:15:07.569 align:start position:0%
just to compile all of those
 

00:15:07.569 --> 00:15:14.549 align:start position:0%
just to compile all of those
declarations<00:15:11.490><c> so</c><00:15:12.959><c> what</c><00:15:13.959><c> to</c><00:15:14.079><c> look</c><00:15:14.230><c> for</c><00:15:14.470><c> if</c>

00:15:14.549 --> 00:15:14.559 align:start position:0%
declarations so what to look for if
 

00:15:14.559 --> 00:15:16.710 align:start position:0%
declarations so what to look for if
you're<00:15:14.589><c> seeing</c><00:15:14.980><c> slow</c><00:15:15.759><c> compile</c><00:15:16.209><c> times</c><00:15:16.540><c> with</c>

00:15:16.710 --> 00:15:16.720 align:start position:0%
you're seeing slow compile times with
 

00:15:16.720 --> 00:15:18.329 align:start position:0%
you're seeing slow compile times with
C++<00:15:17.319><c> is</c><00:15:17.499><c> definitely</c><00:15:17.920><c> look</c><00:15:18.069><c> for</c><00:15:18.220><c> those</c>

00:15:18.329 --> 00:15:18.339 align:start position:0%
C++ is definitely look for those
 

00:15:18.339 --> 00:15:20.999 align:start position:0%
C++ is definitely look for those
warnings<00:15:18.790><c> make</c><00:15:19.449><c> sure</c><00:15:19.600><c> that</c><00:15:19.809><c> you're</c><00:15:19.990><c> using</c><00:15:20.019><c> the</c>

00:15:20.999 --> 00:15:21.009 align:start position:0%
warnings make sure that you're using the
 

00:15:21.009 --> 00:15:23.670 align:start position:0%
warnings make sure that you're using the
precompiled<00:15:21.850><c> header</c><00:15:22.319><c> now</c><00:15:23.319><c> what</c><00:15:23.470><c> we're</c><00:15:23.559><c> going</c>

00:15:23.670 --> 00:15:23.680 align:start position:0%
precompiled header now what we're going
 

00:15:23.680 --> 00:15:25.170 align:start position:0%
precompiled header now what we're going
to<00:15:23.709><c> do</c><00:15:23.860><c> is</c><00:15:23.980><c> go</c><00:15:24.129><c> to</c><00:15:24.160><c> the</c><00:15:24.399><c> the</c><00:15:24.699><c> build</c><00:15:24.910><c> settings</c>

00:15:25.170 --> 00:15:25.180 align:start position:0%
to do is go to the the build settings
 

00:15:25.180 --> 00:15:27.449 align:start position:0%
to do is go to the the build settings
for<00:15:25.509><c> this</c><00:15:25.660><c> target</c><00:15:25.930><c> and</c><00:15:26.230><c> actually</c><00:15:27.009><c> make</c><00:15:27.249><c> our</c>

00:15:27.449 --> 00:15:27.459 align:start position:0%
for this target and actually make our
 

00:15:27.459 --> 00:15:29.429 align:start position:0%
for this target and actually make our
own<00:15:27.490><c> precompiled</c><00:15:28.269><c> header</c><00:15:28.449><c> now</c><00:15:29.079><c> the</c><00:15:29.139><c> first</c>

00:15:29.429 --> 00:15:29.439 align:start position:0%
own precompiled header now the first
 

00:15:29.439 --> 00:15:31.379 align:start position:0%
own precompiled header now the first
thing<00:15:29.620><c> that's</c><00:15:29.829><c> done</c><00:15:30.129><c> that's</c><00:15:30.970><c> a</c><00:15:31.089><c> new</c><00:15:31.209><c> feature</c>

00:15:31.379 --> 00:15:31.389 align:start position:0%
thing that's done that's a new feature
 

00:15:31.389 --> 00:15:33.210 align:start position:0%
thing that's done that's a new feature
in<00:15:31.540><c> project</c><00:15:32.019><c> builder</c><00:15:32.290><c> is</c><00:15:32.439><c> that</c><00:15:32.980><c> you</c><00:15:33.069><c> can</c>

00:15:33.210 --> 00:15:33.220 align:start position:0%
in project builder is that you can
 

00:15:33.220 --> 00:15:34.769 align:start position:0%
in project builder is that you can
actually<00:15:33.370><c> add</c><00:15:33.639><c> an</c><00:15:33.790><c> implicitly</c><00:15:34.209><c> included</c>

00:15:34.769 --> 00:15:34.779 align:start position:0%
actually add an implicitly included
 

00:15:34.779 --> 00:15:36.509 align:start position:0%
actually add an implicitly included
header<00:15:34.990><c> so</c><00:15:35.259><c> that</c><00:15:35.290><c> every</c><00:15:35.620><c> header</c><00:15:35.829><c> comes</c><00:15:36.160><c> into</c>

00:15:36.509 --> 00:15:36.519 align:start position:0%
header so that every header comes into
 

00:15:36.519 --> 00:15:39.299 align:start position:0%
header so that every header comes into
the<00:15:36.610><c> project</c><00:15:37.120><c> so</c><00:15:37.329><c> that</c><00:15:37.930><c> every</c><00:15:38.499><c> source</c><00:15:38.980><c> file</c><00:15:39.160><c> in</c>

00:15:39.299 --> 00:15:39.309 align:start position:0%
the project so that every source file in
 

00:15:39.309 --> 00:15:43.019 align:start position:0%
the project so that every source file in
the<00:15:39.370><c> project</c><00:15:39.790><c> uses</c><00:15:40.149><c> this</c><00:15:40.300><c> header</c><00:15:41.730><c> some</c><00:15:42.730><c> people</c>

00:15:43.019 --> 00:15:43.029 align:start position:0%
the project uses this header some people
 

00:15:43.029 --> 00:15:44.939 align:start position:0%
the project uses this header some people
are<00:15:43.120><c> softly</c><00:15:43.720><c> clapping</c><00:15:44.170><c> this</c><00:15:44.439><c> is</c><00:15:44.559><c> a</c><00:15:44.589><c> good</c><00:15:44.769><c> thing</c>

00:15:44.939 --> 00:15:44.949 align:start position:0%
are softly clapping this is a good thing
 

00:15:44.949 --> 00:15:46.829 align:start position:0%
are softly clapping this is a good thing
the<00:15:45.699><c> other</c><00:15:45.819><c> thing</c><00:15:46.029><c> that</c><00:15:46.059><c> we</c><00:15:46.329><c> have</c><00:15:46.509><c> is</c><00:15:46.689><c> we've</c>

00:15:46.829 --> 00:15:46.839 align:start position:0%
the other thing that we have is we've
 

00:15:46.839 --> 00:15:48.059 align:start position:0%
the other thing that we have is we've
got<00:15:47.019><c> a</c><00:15:47.050><c> switch</c><00:15:47.350><c> that</c><00:15:47.379><c> you</c><00:15:47.529><c> can</c><00:15:47.620><c> just</c><00:15:47.889><c> click</c><00:15:48.040><c> and</c>

00:15:48.059 --> 00:15:48.069 align:start position:0%
got a switch that you can just click and
 

00:15:48.069 --> 00:15:49.410 align:start position:0%
got a switch that you can just click and
you<00:15:48.220><c> can</c><00:15:48.279><c> pre-compile</c><00:15:48.819><c> this</c><00:15:48.999><c> a</c><00:15:49.089><c> turn</c><00:15:49.209><c> you</c><00:15:49.269><c> can</c>

00:15:49.410 --> 00:15:49.420 align:start position:0%
you can pre-compile this a turn you can
 

00:15:49.420 --> 00:15:51.119 align:start position:0%
you can pre-compile this a turn you can
obviously<00:15:49.689><c> add</c><00:15:49.839><c> you</c><00:15:50.319><c> know</c><00:15:50.410><c> as</c><00:15:50.559><c> many</c><00:15:50.829><c> of</c><00:15:51.009><c> these</c>

00:15:51.119 --> 00:15:51.129 align:start position:0%
obviously add you know as many of these
 

00:15:51.129 --> 00:15:53.970 align:start position:0%
obviously add you know as many of these
as<00:15:51.189><c> you</c><00:15:51.459><c> want</c><00:15:51.970><c> to</c><00:15:52.779><c> this</c><00:15:52.930><c> table</c><00:15:53.259><c> and</c><00:15:53.589><c> you</c><00:15:53.860><c> can</c>

00:15:53.970 --> 00:15:53.980 align:start position:0%
as you want to this table and you can
 

00:15:53.980 --> 00:15:56.759 align:start position:0%
as you want to this table and you can
pre<00:15:54.129><c> compile</c><00:15:54.459><c> all</c><00:15:54.699><c> of</c><00:15:54.730><c> them</c><00:15:54.970><c> so</c><00:15:55.720><c> well</c><00:15:56.439><c> what</c>

00:15:56.759 --> 00:15:56.769 align:start position:0%
pre compile all of them so well what
 

00:15:56.769 --> 00:15:57.869 align:start position:0%
pre compile all of them so well what
dabangg<00:15:57.040><c> has</c><00:15:57.220><c> done</c><00:15:57.399><c> is</c><00:15:57.519><c> he's</c><00:15:57.670><c> actually</c>

00:15:57.869 --> 00:15:57.879 align:start position:0%
dabangg has done is he's actually
 

00:15:57.879 --> 00:16:00.090 align:start position:0%
dabangg has done is he's actually
clicked<00:15:58.389><c> that</c><00:15:59.259><c> he's</c><00:15:59.439><c> going</c><00:15:59.559><c> to</c><00:15:59.620><c> pre</c><00:15:59.769><c> compile</c>

00:16:00.090 --> 00:16:00.100 align:start position:0%
clicked that he's going to pre compile
 

00:16:00.100 --> 00:16:02.189 align:start position:0%
clicked that he's going to pre compile
this<00:16:00.309><c> and</c><00:16:00.370><c> what</c><00:16:00.610><c> we'll</c><00:16:00.730><c> go</c><00:16:00.879><c> do</c><00:16:01.660><c> is</c><00:16:01.779><c> go</c><00:16:01.959><c> back</c><00:16:02.170><c> and</c>

00:16:02.189 --> 00:16:02.199 align:start position:0%
this and what we'll go do is go back and
 

00:16:02.199 --> 00:16:04.919 align:start position:0%
this and what we'll go do is go back and
click<00:16:02.769><c> build</c><00:16:03.009><c> again</c><00:16:03.339><c> and</c><00:16:03.579><c> you'll</c><00:16:04.240><c> see</c><00:16:04.449><c> that</c><00:16:04.629><c> in</c>

00:16:04.919 --> 00:16:04.929 align:start position:0%
click build again and you'll see that in
 

00:16:04.929 --> 00:16:06.689 align:start position:0%
click build again and you'll see that in
addition<00:16:05.079><c> to</c><00:16:05.379><c> doing</c><00:16:05.829><c> some</c><00:16:06.339><c> of</c><00:16:06.370><c> the</c><00:16:06.490><c> prep</c><00:16:06.670><c> work</c>

00:16:06.689 --> 00:16:06.699 align:start position:0%
addition to doing some of the prep work
 

00:16:06.699 --> 00:16:08.549 align:start position:0%
addition to doing some of the prep work
what<00:16:06.999><c> it's</c><00:16:07.120><c> saying</c><00:16:07.300><c> now</c><00:16:07.480><c> is</c><00:16:07.660><c> it's</c><00:16:07.839><c> running</c>

00:16:08.549 --> 00:16:08.559 align:start position:0%
what it's saying now is it's running
 

00:16:08.559 --> 00:16:11.579 align:start position:0%
what it's saying now is it's running
pre-compile<00:16:09.220><c> header</c><00:16:09.519><c> and</c><00:16:10.290><c> it's</c><00:16:11.290><c> actually</c>

00:16:11.579 --> 00:16:11.589 align:start position:0%
pre-compile header and it's actually
 

00:16:11.589 --> 00:16:14.160 align:start position:0%
pre-compile header and it's actually
creating<00:16:12.129><c> the</c><00:16:12.939><c> two</c><00:16:13.089><c> pre</c><00:16:13.329><c> comps</c><00:16:13.720><c> that</c><00:16:13.749><c> we</c><00:16:13.959><c> use</c>

00:16:14.160 --> 00:16:14.170 align:start position:0%
creating the two pre comps that we use
 

00:16:14.170 --> 00:16:18.389 align:start position:0%
creating the two pre comps that we use
that<00:16:14.410><c> we'll</c><00:16:14.559><c> use</c><00:16:14.589><c> in</c><00:16:15.129><c> this</c><00:16:15.279><c> project</c><00:16:15.550><c> so</c><00:16:17.399><c> that's</c>

00:16:18.389 --> 00:16:18.399 align:start position:0%
that we'll use in this project so that's
 

00:16:18.399 --> 00:16:21.509 align:start position:0%
that we'll use in this project so that's
done<00:16:18.759><c> so</c><00:16:19.660><c> now</c><00:16:19.779><c> let's</c><00:16:19.990><c> go</c><00:16:20.139><c> back</c><00:16:20.170><c> and</c><00:16:20.620><c> run</c><00:16:21.370><c> the</c>

00:16:21.509 --> 00:16:21.519 align:start position:0%
done so now let's go back and run the
 

00:16:21.519 --> 00:16:24.449 align:start position:0%
done so now let's go back and run the
same<00:16:21.699><c> build</c><00:16:21.999><c> again</c><00:16:22.949><c> so</c><00:16:23.949><c> debating</c><00:16:24.279><c> is</c><00:16:24.339><c> just</c>

00:16:24.449 --> 00:16:24.459 align:start position:0%
same build again so debating is just
 

00:16:24.459 --> 00:16:27.949 align:start position:0%
same build again so debating is just
going<00:16:24.579><c> to</c><00:16:24.670><c> tweak</c><00:16:24.850><c> this</c><00:16:25.059><c> a</c><00:16:25.120><c> little</c><00:16:25.209><c> bit</c><00:16:25.980><c> and</c>

00:16:27.949 --> 00:16:27.959 align:start position:0%
going to tweak this a little bit and
 

00:16:27.959 --> 00:16:32.800 align:start position:0%
going to tweak this a little bit and
command<00:16:28.959><c> s</c>

00:16:32.800 --> 00:16:32.810 align:start position:0%
 
 

00:16:32.810 --> 00:16:37.720 align:start position:0%
 
and<00:16:33.680><c> there</c><00:16:34.310><c> we</c><00:16:34.400><c> go</c><00:16:35.920><c> so</c><00:16:36.920><c> what</c><00:16:37.160><c> we're</c><00:16:37.280><c> seeing</c><00:16:37.490><c> is</c>

00:16:37.720 --> 00:16:37.730 align:start position:0%
and there we go so what we're seeing is
 

00:16:37.730 --> 00:16:39.790 align:start position:0%
and there we go so what we're seeing is
on<00:16:37.880><c> average</c><00:16:38.240><c> about</c><00:16:38.360><c> 5x</c><00:16:39.020><c> improvement</c><00:16:39.590><c> in</c><00:16:39.680><c> your</c>

00:16:39.790 --> 00:16:39.800 align:start position:0%
on average about 5x improvement in your
 

00:16:39.800 --> 00:16:41.140 align:start position:0%
on average about 5x improvement in your
compile<00:16:40.130><c> times</c><00:16:40.430><c> when</c><00:16:40.700><c> you're</c><00:16:40.820><c> using</c><00:16:40.970><c> a</c>

00:16:41.140 --> 00:16:41.150 align:start position:0%
compile times when you're using a
 

00:16:41.150 --> 00:16:44.230 align:start position:0%
compile times when you're using a
precompiled<00:16:41.690><c> header</c><00:16:42.100><c> and</c><00:16:43.100><c> this</c><00:16:43.610><c> is</c><00:16:43.850><c> you</c><00:16:44.150><c> know</c>

00:16:44.230 --> 00:16:44.240 align:start position:0%
precompiled header and this is you know
 

00:16:44.240 --> 00:16:47.290 align:start position:0%
precompiled header and this is you know
the<00:16:44.390><c> the</c><00:16:44.780><c> sort</c><00:16:45.260><c> of</c><00:16:45.320><c> preferred</c><00:16:45.620><c> way</c><00:16:45.860><c> that</c><00:16:46.610><c> a</c><00:16:46.970><c> lot</c>

00:16:47.290 --> 00:16:47.300 align:start position:0%
the the sort of preferred way that a lot
 

00:16:47.300 --> 00:16:50.380 align:start position:0%
the the sort of preferred way that a lot
of<00:16:47.420><c> ideas</c><00:16:48.160><c> get</c><00:16:49.160><c> to</c><00:16:49.280><c> compile</c><00:16:49.550><c> times</c><00:16:49.850><c> up</c><00:16:50.090><c> is</c><00:16:50.240><c> by</c>

00:16:50.380 --> 00:16:50.390 align:start position:0%
of ideas get to compile times up is by
 

00:16:50.390 --> 00:16:52.570 align:start position:0%
of ideas get to compile times up is by
building<00:16:50.570><c> precompiled</c><00:16:51.260><c> headers</c><00:16:51.530><c> and</c><00:16:51.710><c> the</c><00:16:52.430><c> big</c>

00:16:52.570 --> 00:16:52.580 align:start position:0%
building precompiled headers and the big
 

00:16:52.580 --> 00:16:55.030 align:start position:0%
building precompiled headers and the big
thing<00:16:52.850><c> for</c><00:16:53.420><c> you</c><00:16:53.600><c> is</c><00:16:53.810><c> getting</c><00:16:54.050><c> getting</c><00:16:54.620><c> out</c><00:16:54.740><c> the</c>

00:16:55.030 --> 00:16:55.040 align:start position:0%
thing for you is getting getting out the
 

00:16:55.040 --> 00:16:56.680 align:start position:0%
thing for you is getting getting out the
the<00:16:55.310><c> you</c><00:16:55.580><c> know</c><00:16:55.610><c> the</c><00:16:55.730><c> huge</c><00:16:56.360><c> amount</c><00:16:56.630><c> of</c>

00:16:56.680 --> 00:16:56.690 align:start position:0%
the you know the huge amount of
 

00:16:56.690 --> 00:16:58.450 align:start position:0%
the you know the huge amount of
declarations<00:16:57.290><c> we</c><00:16:57.350><c> have</c><00:16:57.500><c> in</c><00:16:57.620><c> carbon</c><00:16:58.040><c> and</c><00:16:58.130><c> and</c>

00:16:58.450 --> 00:16:58.460 align:start position:0%
declarations we have in carbon and and
 

00:16:58.460 --> 00:17:02.350 align:start position:0%
declarations we have in carbon and and
and<00:16:58.790><c> cocoa</c><00:16:59.210><c> and</c><00:16:59.440><c> being</c><00:17:00.440><c> able</c><00:17:00.590><c> to</c><00:17:01.000><c> get</c><00:17:02.000><c> those</c><00:17:02.210><c> in</c>

00:17:02.350 --> 00:17:02.360 align:start position:0%
and cocoa and being able to get those in
 

00:17:02.360 --> 00:17:03.970 align:start position:0%
and cocoa and being able to get those in
a<00:17:02.420><c> tokenized</c><00:17:02.870><c> fashion</c><00:17:03.320><c> you</c><00:17:03.410><c> can</c><00:17:03.500><c> selectively</c>

00:17:03.970 --> 00:17:03.980 align:start position:0%
a tokenized fashion you can selectively
 

00:17:03.980 --> 00:17:07.930 align:start position:0%
a tokenized fashion you can selectively
use<00:17:04.250><c> them</c><00:17:04.460><c> and</c><00:17:05.140><c> and</c><00:17:06.430><c> speed</c><00:17:07.430><c> up</c><00:17:07.520><c> your</c><00:17:07.610><c> compile</c>

00:17:07.930 --> 00:17:07.940 align:start position:0%
use them and and speed up your compile
 

00:17:07.940 --> 00:17:09.520 align:start position:0%
use them and and speed up your compile
time<00:17:08.150><c> significantly</c><00:17:08.750><c> now</c><00:17:09.140><c> the</c><00:17:09.200><c> other</c><00:17:09.350><c> thing</c>

00:17:09.520 --> 00:17:09.530 align:start position:0%
time significantly now the other thing
 

00:17:09.530 --> 00:17:10.900 align:start position:0%
time significantly now the other thing
that<00:17:09.560><c> Devane</c><00:17:09.950><c> is</c><00:17:09.980><c> highlighting</c><00:17:10.670><c> because</c><00:17:10.730><c> we</c>

00:17:10.900 --> 00:17:10.910 align:start position:0%
that Devane is highlighting because we
 

00:17:10.910 --> 00:17:12.970 align:start position:0%
that Devane is highlighting because we
didn't<00:17:11.060><c> have</c><00:17:11.150><c> a</c><00:17:11.210><c> slide</c><00:17:11.450><c> on</c><00:17:11.480><c> this</c><00:17:11.810><c> is</c><00:17:11.960><c> for</c><00:17:12.890><c> those</c>

00:17:12.970 --> 00:17:12.980 align:start position:0%
didn't have a slide on this is for those
 

00:17:12.980 --> 00:17:14.170 align:start position:0%
didn't have a slide on this is for those
of<00:17:13.040><c> you</c><00:17:13.250><c> that</c><00:17:13.370><c> are</c><00:17:13.460><c> interested</c><00:17:13.910><c> there's</c><00:17:14.120><c> a</c>

00:17:14.170 --> 00:17:14.180 align:start position:0%
of you that are interested there's a
 

00:17:14.180 --> 00:17:16.780 align:start position:0%
of you that are interested there's a
there<00:17:14.720><c> is</c><00:17:14.930><c> a</c><00:17:15.110><c> command</c><00:17:15.740><c> line</c><00:17:15.800><c> tool</c><00:17:16.070><c> called</c><00:17:16.520><c> P</c>

00:17:16.780 --> 00:17:16.790 align:start position:0%
there is a command line tool called P
 

00:17:16.790 --> 00:17:18.940 align:start position:0%
there is a command line tool called P
dump<00:17:17.030><c> if</c><00:17:17.900><c> you're</c><00:17:18.080><c> not</c><00:17:18.230><c> able</c><00:17:18.470><c> to</c><00:17:18.590><c> use</c><00:17:18.830><c> your</c>

00:17:18.940 --> 00:17:18.950 align:start position:0%
dump if you're not able to use your
 

00:17:18.950 --> 00:17:20.590 align:start position:0%
dump if you're not able to use your
precompiled<00:17:19.550><c> header</c><00:17:19.730><c> for</c><00:17:20.000><c> some</c><00:17:20.180><c> reason</c><00:17:20.510><c> you</c>

00:17:20.590 --> 00:17:20.600 align:start position:0%
precompiled header for some reason you
 

00:17:20.600 --> 00:17:21.490 align:start position:0%
precompiled header for some reason you
can't<00:17:20.810><c> figure</c><00:17:21.020><c> it</c><00:17:21.200><c> out</c>

00:17:21.490 --> 00:17:21.500 align:start position:0%
can't figure it out
 

00:17:21.500 --> 00:17:22.720 align:start position:0%
can't figure it out
or<00:17:21.830><c> if</c><00:17:21.950><c> you</c><00:17:22.070><c> just</c><00:17:22.100><c> want</c><00:17:22.430><c> to</c><00:17:22.490><c> poke</c><00:17:22.700><c> around</c>

00:17:22.720 --> 00:17:22.730 align:start position:0%
or if you just want to poke around
 

00:17:22.730 --> 00:17:25.090 align:start position:0%
or if you just want to poke around
inside<00:17:23.360><c> of</c><00:17:23.870><c> the</c><00:17:23.990><c> pre-comp</c><00:17:24.440><c> and</c><00:17:24.620><c> see</c><00:17:24.740><c> what's</c><00:17:24.920><c> in</c>

00:17:25.090 --> 00:17:25.100 align:start position:0%
inside of the pre-comp and see what's in
 

00:17:25.100 --> 00:17:29.610 align:start position:0%
inside of the pre-comp and see what's in
there<00:17:25.630><c> you</c><00:17:26.630><c> can</c><00:17:26.810><c> use</c><00:17:27.520><c> you</c><00:17:28.520><c> can</c><00:17:28.550><c> use</c><00:17:28.820><c> P</c><00:17:29.180><c> dump</c><00:17:29.420><c> and</c>

00:17:29.610 --> 00:17:29.620 align:start position:0%
there you can use you can use P dump and
 

00:17:29.620 --> 00:17:33.340 align:start position:0%
there you can use you can use P dump and
P<00:17:30.620><c> dump</c><00:17:30.800><c> -</c><00:17:31.040><c> help</c><00:17:31.400><c> -</c><00:17:31.820><c> -</c><00:17:32.030><c> help</c><00:17:32.360><c> which</c><00:17:32.990><c> will</c><00:17:33.020><c> give</c>

00:17:33.340 --> 00:17:33.350 align:start position:0%
P dump - help - - help which will give
 

00:17:33.350 --> 00:17:35.350 align:start position:0%
P dump - help - - help which will give
you<00:17:33.500><c> a</c><00:17:33.530><c> lot</c><00:17:33.740><c> of</c><00:17:33.860><c> information</c><00:17:34.370><c> on</c><00:17:34.520><c> what</c><00:17:35.210><c> you</c><00:17:35.330><c> can</c>

00:17:35.350 --> 00:17:35.360 align:start position:0%
you a lot of information on what you can
 

00:17:35.360 --> 00:17:36.820 align:start position:0%
you a lot of information on what you can
pull<00:17:35.720><c> out</c><00:17:35.900><c> of</c><00:17:35.930><c> there</c><00:17:36.170><c> so</c><00:17:36.350><c> it</c><00:17:36.500><c> might</c><00:17:36.590><c> be</c><00:17:36.650><c> an</c>

00:17:36.820 --> 00:17:36.830 align:start position:0%
pull out of there so it might be an
 

00:17:36.830 --> 00:17:38.280 align:start position:0%
pull out of there so it might be an
interesting<00:17:37.220><c> exercise</c><00:17:37.460><c> just</c><00:17:37.910><c> to</c><00:17:38.030><c> poke</c><00:17:38.210><c> around</c>

00:17:38.280 --> 00:17:38.290 align:start position:0%
interesting exercise just to poke around
 

00:17:38.290 --> 00:17:41.050 align:start position:0%
interesting exercise just to poke around
inside<00:17:39.290><c> the</c><00:17:39.440><c> pre-comp</c><00:17:39.800><c> and</c><00:17:39.980><c> see</c><00:17:40.190><c> what's</c><00:17:40.880><c> in</c>

00:17:41.050 --> 00:17:41.060 align:start position:0%
inside the pre-comp and see what's in
 

00:17:41.060 --> 00:17:43.030 align:start position:0%
inside the pre-comp and see what's in
there<00:17:41.210><c> and</c><00:17:41.360><c> how</c><00:17:41.480><c> this</c><00:17:41.660><c> stuff</c><00:17:41.900><c> is</c><00:17:42.020><c> is</c><00:17:42.380><c> recorded</c>

00:17:43.030 --> 00:17:43.040 align:start position:0%
there and how this stuff is is recorded
 

00:17:43.040 --> 00:17:50.520 align:start position:0%
there and how this stuff is is recorded
so<00:17:47.320><c> that's</c><00:17:48.320><c> it</c><00:17:48.470><c> for</c><00:17:48.650><c> the</c><00:17:48.770><c> demo</c><00:17:49.070><c> thanks</c><00:17:49.400><c> to</c><00:17:49.490><c> bang</c>

00:17:50.520 --> 00:17:50.530 align:start position:0%
so that's it for the demo thanks to bang
 

00:17:50.530 --> 00:17:58.370 align:start position:0%
so that's it for the demo thanks to bang
[Applause]

00:17:58.370 --> 00:17:58.380 align:start position:0%
 
 

00:17:58.380 --> 00:18:04.770 align:start position:0%
 
let's<00:17:59.380><c> talk</c><00:17:59.530><c> about</c><00:17:59.680><c> optimization</c><00:18:03.540><c> so</c><00:18:04.540><c> the</c><00:18:04.660><c> two</c>

00:18:04.770 --> 00:18:04.780 align:start position:0%
let's talk about optimization so the two
 

00:18:04.780 --> 00:18:06.470 align:start position:0%
let's talk about optimization so the two
things<00:18:04.930><c> I</c><00:18:05.080><c> want</c><00:18:05.230><c> to</c><00:18:05.260><c> talk</c><00:18:05.410><c> about</c><00:18:05.590><c> here</c><00:18:06.010><c> are</c>

00:18:06.470 --> 00:18:06.480 align:start position:0%
things I want to talk about here are
 

00:18:06.480 --> 00:18:10.050 align:start position:0%
things I want to talk about here are
controlling<00:18:07.560><c> the</c><00:18:08.560><c> compiler</c><00:18:09.190><c> optimization</c>

00:18:10.050 --> 00:18:10.060 align:start position:0%
controlling the compiler optimization
 

00:18:10.060 --> 00:18:14.870 align:start position:0%
controlling the compiler optimization
levels<00:18:10.480><c> and</c><00:18:11.760><c> actually</c><00:18:12.760><c> what</c><00:18:12.940><c> they</c><00:18:13.090><c> do</c>

00:18:14.870 --> 00:18:14.880 align:start position:0%
levels and actually what they do
 

00:18:14.880 --> 00:18:17.400 align:start position:0%
levels and actually what they do
so<00:18:15.880><c> I'll</c><00:18:16.030><c> warn</c><00:18:16.240><c> you</c><00:18:16.390><c> this</c><00:18:16.570><c> will</c><00:18:16.960><c> descend</c><00:18:17.320><c> a</c>

00:18:17.400 --> 00:18:17.410 align:start position:0%
so I'll warn you this will descend a
 

00:18:17.410 --> 00:18:19.230 align:start position:0%
so I'll warn you this will descend a
little<00:18:17.650><c> bit</c><00:18:17.800><c> into</c><00:18:18.040><c> compiler</c><00:18:18.460><c> D</c><00:18:18.640><c> curry</c><00:18:18.850><c> but</c><00:18:19.060><c> not</c>

00:18:19.230 --> 00:18:19.240 align:start position:0%
little bit into compiler D curry but not
 

00:18:19.240 --> 00:18:22.880 align:start position:0%
little bit into compiler D curry but not
not<00:18:20.110><c> much</c><00:18:20.970><c> so</c><00:18:21.970><c> the</c><00:18:22.180><c> first</c><00:18:22.390><c> one</c><00:18:22.630><c> is</c>

00:18:22.880 --> 00:18:22.890 align:start position:0%
not much so the first one is
 

00:18:22.890 --> 00:18:25.980 align:start position:0%
not much so the first one is
optimization<00:18:23.890><c> level</c><00:18:24.190><c> 0</c><00:18:24.460><c> it's</c><00:18:25.420><c> basically</c><00:18:25.780><c> the</c>

00:18:25.980 --> 00:18:25.990 align:start position:0%
optimization level 0 it's basically the
 

00:18:25.990 --> 00:18:28.320 align:start position:0%
optimization level 0 it's basically the
default<00:18:26.560><c> for</c><00:18:26.950><c> GCC</c><00:18:27.280><c> if</c><00:18:27.550><c> you</c><00:18:27.670><c> pass</c><00:18:28.120><c> no</c>

00:18:28.320 --> 00:18:28.330 align:start position:0%
default for GCC if you pass no
 

00:18:28.330 --> 00:18:29.910 align:start position:0%
default for GCC if you pass no
optimization<00:18:28.720><c> flag</c><00:18:29.140><c> on</c><00:18:29.350><c> the</c><00:18:29.440><c> command</c><00:18:29.740><c> line</c>

00:18:29.910 --> 00:18:29.920 align:start position:0%
optimization flag on the command line
 

00:18:29.920 --> 00:18:31.500 align:start position:0%
optimization flag on the command line
you<00:18:29.950><c> get</c><00:18:30.190><c> no</c><00:18:30.430><c> optimization</c><00:18:30.820><c> you</c><00:18:31.270><c> can</c><00:18:31.390><c> also</c>

00:18:31.500 --> 00:18:31.510 align:start position:0%
you get no optimization you can also
 

00:18:31.510 --> 00:18:34.830 align:start position:0%
you get no optimization you can also
pass<00:18:31.840><c> -</c><00:18:32.560><c> oh</c><00:18:32.770><c> is</c><00:18:32.920><c> zero</c><00:18:33.420><c> the</c><00:18:34.420><c> reason</c><00:18:34.660><c> they</c><00:18:34.720><c> have</c>

00:18:34.830 --> 00:18:34.840 align:start position:0%
pass - oh is zero the reason they have
 

00:18:34.840 --> 00:18:36.300 align:start position:0%
pass - oh is zero the reason they have
that<00:18:34.870><c> is</c><00:18:35.230><c> allows</c><00:18:35.500><c> you</c><00:18:35.530><c> to</c><00:18:35.830><c> override</c><00:18:36.130><c> a</c>

00:18:36.300 --> 00:18:36.310 align:start position:0%
that is allows you to override a
 

00:18:36.310 --> 00:18:39.450 align:start position:0%
that is allows you to override a
previous<00:18:37.180><c> previously</c><00:18:38.020><c> passed</c><00:18:38.460><c> optimization</c>

00:18:39.450 --> 00:18:39.460 align:start position:0%
previous previously passed optimization
 

00:18:39.460 --> 00:18:42.960 align:start position:0%
previous previously passed optimization
flag<00:18:39.730><c> it</c><00:18:40.510><c> does</c><00:18:40.660><c> no</c><00:18:40.900><c> optimization</c><00:18:41.610><c> so</c><00:18:42.610><c> what</c><00:18:42.850><c> you</c>

00:18:42.960 --> 00:18:42.970 align:start position:0%
flag it does no optimization so what you
 

00:18:42.970 --> 00:18:46.980 align:start position:0%
flag it does no optimization so what you
get<00:18:43.180><c> is</c><00:18:43.600><c> slower</c><00:18:44.260><c> and</c><00:18:44.560><c> bigger</c><00:18:45.160><c> code</c><00:18:45.690><c> but</c><00:18:46.690><c> code</c>

00:18:46.980 --> 00:18:46.990 align:start position:0%
get is slower and bigger code but code
 

00:18:46.990 --> 00:18:51.240 align:start position:0%
get is slower and bigger code but code
that<00:18:47.350><c> you</c><00:18:47.560><c> can</c><00:18:49.530><c> easily</c><00:18:50.530><c> follow</c><00:18:50.770><c> in</c><00:18:51.130><c> the</c>

00:18:51.240 --> 00:18:51.250 align:start position:0%
that you can easily follow in the
 

00:18:51.250 --> 00:18:54.600 align:start position:0%
that you can easily follow in the
debugger<00:18:52.260><c> it</c><00:18:53.260><c> also</c><00:18:53.470><c> gives</c><00:18:53.800><c> you</c><00:18:53.950><c> the</c><00:18:53.980><c> fastest</c>

00:18:54.600 --> 00:18:54.610 align:start position:0%
debugger it also gives you the fastest
 

00:18:54.610 --> 00:18:57.360 align:start position:0%
debugger it also gives you the fastest
turnaround<00:18:54.820><c> time</c><00:18:55.860><c> but</c><00:18:56.860><c> compared</c><00:18:57.310><c> to</c>

00:18:57.360 --> 00:18:57.370 align:start position:0%
turnaround time but compared to
 

00:18:57.370 --> 00:18:58.650 align:start position:0%
turnaround time but compared to
something<00:18:57.580><c> like</c><00:18:57.820><c> using</c><00:18:58.000><c> a</c><00:18:58.150><c> precompiled</c>

00:18:58.650 --> 00:18:58.660 align:start position:0%
something like using a precompiled
 

00:18:58.660 --> 00:19:00.060 align:start position:0%
something like using a precompiled
header<00:18:58.810><c> versus</c><00:18:59.140><c> not</c><00:18:59.290><c> using</c><00:18:59.530><c> precompiled</c>

00:19:00.060 --> 00:19:00.070 align:start position:0%
header versus not using precompiled
 

00:19:00.070 --> 00:19:02.910 align:start position:0%
header versus not using precompiled
header<00:19:00.220><c> it's</c><00:19:00.400><c> basically</c><00:19:00.730><c> in</c><00:19:00.910><c> the</c><00:19:01.000><c> noise</c><00:19:01.920><c> and</c>

00:19:02.910 --> 00:19:02.920 align:start position:0%
header it's basically in the noise and
 

00:19:02.920 --> 00:19:05.340 align:start position:0%
header it's basically in the noise and
it's<00:19:03.310><c> a</c><00:19:03.460><c> default</c><00:19:03.790><c> setting</c><00:19:04.210><c> for</c><00:19:04.480><c> a</c><00:19:04.900><c> project</c>

00:19:05.340 --> 00:19:05.350 align:start position:0%
it's a default setting for a project
 

00:19:05.350 --> 00:19:07.500 align:start position:0%
it's a default setting for a project
builder<00:19:05.590><c> deployment</c><00:19:06.130><c> build</c><00:19:06.310><c> so</c><00:19:06.610><c> our</c><00:19:07.000><c> project</c>

00:19:07.500 --> 00:19:07.510 align:start position:0%
builder deployment build so our project
 

00:19:07.510 --> 00:19:08.700 align:start position:0%
builder deployment build so our project
builder<00:19:07.720><c> development</c><00:19:08.170><c> build</c><00:19:08.320><c> so</c><00:19:08.500><c> when</c><00:19:08.620><c> you</c>

00:19:08.700 --> 00:19:08.710 align:start position:0%
builder development build so when you
 

00:19:08.710 --> 00:19:10.470 align:start position:0%
builder development build so when you
set<00:19:08.950><c> the</c><00:19:09.130><c> build</c><00:19:09.340><c> style</c><00:19:09.670><c> and</c><00:19:09.850><c> project</c><00:19:10.240><c> builder</c>

00:19:10.470 --> 00:19:10.480 align:start position:0%
set the build style and project builder
 

00:19:10.480 --> 00:19:14.070 align:start position:0%
set the build style and project builder
to<00:19:10.660><c> be</c><00:19:11.070><c> the</c><00:19:12.070><c> development</c><00:19:12.610><c> build</c><00:19:12.880><c> what</c><00:19:13.660><c> you</c><00:19:13.810><c> get</c>

00:19:14.070 --> 00:19:14.080 align:start position:0%
to be the development build what you get
 

00:19:14.080 --> 00:19:20.430 align:start position:0%
to be the development build what you get
is<00:19:14.440><c> unoptimized</c><00:19:14.920><c> code</c><00:19:18.810><c> so</c><00:19:19.810><c> optimization</c>

00:19:20.430 --> 00:19:20.440 align:start position:0%
is unoptimized code so optimization
 

00:19:20.440 --> 00:19:23.820 align:start position:0%
is unoptimized code so optimization
level<00:19:20.770><c> 1</c><00:19:21.180><c> basically</c><00:19:22.180><c> -</c><00:19:22.450><c> code</c><00:19:22.720><c> or</c><00:19:23.020><c> -</c><00:19:23.230><c> oh</c><00:19:23.410><c> 1</c><00:19:23.680><c> on</c>

00:19:23.820 --> 00:19:23.830 align:start position:0%
level 1 basically - code or - oh 1 on
 

00:19:23.830 --> 00:19:25.680 align:start position:0%
level 1 basically - code or - oh 1 on
the<00:19:23.950><c> command</c><00:19:24.250><c> line</c><00:19:24.340><c> turns</c><00:19:25.090><c> on</c><00:19:25.300><c> a</c><00:19:25.330><c> bunch</c><00:19:25.600><c> of</c>

00:19:25.680 --> 00:19:25.690 align:start position:0%
the command line turns on a bunch of
 

00:19:25.690 --> 00:19:27.780 align:start position:0%
the command line turns on a bunch of
basic<00:19:26.080><c> optimizations</c><00:19:26.800><c> it</c><00:19:26.950><c> turns</c><00:19:27.130><c> on</c><00:19:27.310><c> register</c>

00:19:27.780 --> 00:19:27.790 align:start position:0%
basic optimizations it turns on register
 

00:19:27.790 --> 00:19:29.580 align:start position:0%
basic optimizations it turns on register
allocation<00:19:28.180><c> turns</c><00:19:28.480><c> on</c><00:19:28.630><c> data</c><00:19:28.840><c> flow</c><00:19:29.080><c> analysis</c>

00:19:29.580 --> 00:19:29.590 align:start position:0%
allocation turns on data flow analysis
 

00:19:29.590 --> 00:19:32.580 align:start position:0%
allocation turns on data flow analysis
dead<00:19:30.370><c> code</c><00:19:30.640><c> elimination</c><00:19:31.320><c> some</c><00:19:32.320><c> jump</c>

00:19:32.580 --> 00:19:32.590 align:start position:0%
dead code elimination some jump
 

00:19:32.590 --> 00:19:34.770 align:start position:0%
dead code elimination some jump
optimizations<00:19:33.400><c> and</c><00:19:33.640><c> also</c><00:19:34.330><c> peephole</c>

00:19:34.770 --> 00:19:34.780 align:start position:0%
optimizations and also peephole
 

00:19:34.780 --> 00:19:37.920 align:start position:0%
optimizations and also peephole
optimization<00:19:35.560><c> I</c><00:19:36.190><c> won't</c><00:19:36.820><c> get</c><00:19:36.970><c> into</c><00:19:37.120><c> for</c><00:19:37.810><c> those</c>

00:19:37.920 --> 00:19:37.930 align:start position:0%
optimization I won't get into for those
 

00:19:37.930 --> 00:19:38.820 align:start position:0%
optimization I won't get into for those
of<00:19:38.020><c> you</c><00:19:38.110><c> that</c><00:19:38.200><c> don't</c><00:19:38.320><c> know</c><00:19:38.410><c> what</c><00:19:38.590><c> that</c><00:19:38.710><c> is</c>

00:19:38.820 --> 00:19:38.830 align:start position:0%
of you that don't know what that is
 

00:19:38.830 --> 00:19:41.330 align:start position:0%
of you that don't know what that is
don't<00:19:39.070><c> worry</c><00:19:39.220><c> about</c><00:19:39.340><c> it</c><00:19:39.610><c> basically</c><00:19:39.790><c> turns</c><00:19:40.450><c> on</c>

00:19:41.330 --> 00:19:41.340 align:start position:0%
don't worry about it basically turns on
 

00:19:41.340 --> 00:19:44.250 align:start position:0%
don't worry about it basically turns on
some<00:19:42.340><c> sort</c><00:19:42.700><c> of</c><00:19:42.760><c> basic</c><00:19:43.210><c> level</c><00:19:43.420><c> of</c><00:19:43.690><c> statement</c>

00:19:44.250 --> 00:19:44.260 align:start position:0%
some sort of basic level of statement
 

00:19:44.260 --> 00:19:47.580 align:start position:0%
some sort of basic level of statement
level<00:19:44.530><c> optimization</c><00:19:45.630><c> the</c><00:19:46.630><c> key</c><00:19:46.840><c> point</c><00:19:47.110><c> here</c><00:19:47.470><c> is</c>

00:19:47.580 --> 00:19:47.590 align:start position:0%
level optimization the key point here is
 

00:19:47.590 --> 00:19:49.890 align:start position:0%
level optimization the key point here is
it<00:19:47.770><c> it</c><00:19:48.040><c> results</c><00:19:48.640><c> in</c><00:19:48.760><c> much</c><00:19:48.970><c> smaller</c><00:19:49.240><c> and</c><00:19:49.690><c> faster</c>

00:19:49.890 --> 00:19:49.900 align:start position:0%
it it results in much smaller and faster
 

00:19:49.900 --> 00:19:54.510 align:start position:0%
it it results in much smaller and faster
code<00:19:50.380><c> than</c><00:19:50.650><c> level</c><00:19:50.950><c> 0</c><00:19:51.600><c> so</c><00:19:53.010><c> for</c><00:19:54.010><c> those</c><00:19:54.190><c> of</c><00:19:54.250><c> you</c>

00:19:54.510 --> 00:19:54.520 align:start position:0%
code than level 0 so for those of you
 

00:19:54.520 --> 00:19:57.030 align:start position:0%
code than level 0 so for those of you
that<00:19:54.850><c> can</c><00:19:55.510><c> read</c><00:19:55.750><c> the</c><00:19:55.780><c> bottom</c><00:19:56.230><c> the</c><00:19:56.590><c> bottom</c><00:19:56.710><c> line</c>

00:19:57.030 --> 00:19:57.040 align:start position:0%
that can read the bottom the bottom line
 

00:19:57.040 --> 00:19:59.130 align:start position:0%
that can read the bottom the bottom line
here<00:19:57.310><c> it</c><00:19:57.400><c> says</c><00:19:57.610><c> a</c><00:19:57.640><c> binary</c><00:19:58.030><c> sizes</c><00:19:58.600><c> can</c><00:19:58.840><c> reduce</c>

00:19:59.130 --> 00:19:59.140 align:start position:0%
here it says a binary sizes can reduce
 

00:19:59.140 --> 00:20:01.290 align:start position:0%
here it says a binary sizes can reduce
as<00:19:59.350><c> much</c><00:19:59.380><c> as</c><00:19:59.770><c> 50%</c><00:20:00.190><c> we</c><00:20:00.760><c> did</c><00:20:00.940><c> some</c><00:20:01.150><c> initial</c>

00:20:01.290 --> 00:20:01.300 align:start position:0%
as much as 50% we did some initial
 

00:20:01.300 --> 00:20:03.210 align:start position:0%
as much as 50% we did some initial
testing<00:20:01.930><c> on</c><00:20:02.080><c> the</c><00:20:02.200><c> finder</c><00:20:02.560><c> front-end</c><00:20:02.980><c> and</c><00:20:03.130><c> a</c>

00:20:03.210 --> 00:20:03.220 align:start position:0%
testing on the finder front-end and a
 

00:20:03.220 --> 00:20:04.710 align:start position:0%
testing on the finder front-end and a
couple<00:20:03.460><c> other</c><00:20:03.700><c> things</c><00:20:03.940><c> we</c><00:20:04.450><c> built</c><00:20:04.660><c> them</c>

00:20:04.710 --> 00:20:04.720 align:start position:0%
couple other things we built them
 

00:20:04.720 --> 00:20:06.570 align:start position:0%
couple other things we built them
unoptimized<00:20:04.990><c> we</c><00:20:05.410><c> built</c><00:20:05.590><c> them</c><00:20:05.710><c> with</c><00:20:05.740><c> -</c><00:20:06.010><c> o1</c><00:20:06.430><c> and</c>

00:20:06.570 --> 00:20:06.580 align:start position:0%
unoptimized we built them with - o1 and
 

00:20:06.580 --> 00:20:08.549 align:start position:0%
unoptimized we built them with - o1 and
the<00:20:07.570><c> size</c><00:20:07.840><c> of</c><00:20:08.050><c> the</c><00:20:08.110><c> binary</c>

00:20:08.549 --> 00:20:08.559 align:start position:0%
the size of the binary
 

00:20:08.559 --> 00:20:11.789 align:start position:0%
the size of the binary
I<00:20:08.590><c> went</c><00:20:09.370><c> down</c><00:20:09.549><c> by</c><00:20:09.759><c> 50%</c><00:20:10.120><c> and</c><00:20:10.629><c> you</c><00:20:11.139><c> should</c><00:20:11.320><c> expect</c>

00:20:11.789 --> 00:20:11.799 align:start position:0%
I went down by 50% and you should expect
 

00:20:11.799 --> 00:20:15.869 align:start position:0%
I went down by 50% and you should expect
that<00:20:12.460><c> your</c><00:20:12.879><c> code</c><00:20:13.269><c> execution</c><00:20:14.249><c> just</c><00:20:15.249><c> raw</c><00:20:15.429><c> CPU</c>

00:20:15.869 --> 00:20:15.879 align:start position:0%
that your code execution just raw CPU
 

00:20:15.879 --> 00:20:18.149 align:start position:0%
that your code execution just raw CPU
throughput<00:20:16.360><c> will</c><00:20:16.570><c> will</c><00:20:16.929><c> go</c><00:20:17.110><c> up</c><00:20:17.320><c> by</c><00:20:17.830><c> about</c><00:20:18.100><c> a</c>

00:20:18.149 --> 00:20:18.159 align:start position:0%
throughput will will go up by about a
 

00:20:18.159 --> 00:20:20.659 align:start position:0%
throughput will will go up by about a
factor<00:20:18.429><c> of</c><00:20:18.700><c> 2</c><00:20:18.909><c> between</c><00:20:19.120><c> unoptimized</c><00:20:19.659><c> code</c><00:20:20.080><c> and</c>

00:20:20.659 --> 00:20:20.669 align:start position:0%
factor of 2 between unoptimized code and
 

00:20:20.669 --> 00:20:30.180 align:start position:0%
factor of 2 between unoptimized code and
optimizing<00:20:21.669><c> it</c><00:20:21.789><c> at</c><00:20:22.029><c> -</c><00:20:22.480><c> oh</c><00:20:22.690><c> 1</c><00:20:28.769><c> for</c><00:20:29.769><c> optimization</c>

00:20:30.180 --> 00:20:30.190 align:start position:0%
optimizing it at - oh 1 for optimization
 

00:20:30.190 --> 00:20:34.320 align:start position:0%
optimizing it at - oh 1 for optimization
level<00:20:30.639><c> 2</c><00:20:31.799><c> this</c><00:20:32.799><c> provides</c><00:20:33.249><c> a</c><00:20:33.429><c> sort</c><00:20:33.879><c> of</c><00:20:33.909><c> function</c>

00:20:34.320 --> 00:20:34.330 align:start position:0%
level 2 this provides a sort of function
 

00:20:34.330 --> 00:20:36.960 align:start position:0%
level 2 this provides a sort of function
level<00:20:34.629><c> optimizations</c><00:20:34.779><c> it</c><00:20:35.499><c> brings</c><00:20:36.100><c> in</c><00:20:36.340><c> common</c>

00:20:36.960 --> 00:20:36.970 align:start position:0%
level optimizations it brings in common
 

00:20:36.970 --> 00:20:38.999 align:start position:0%
level optimizations it brings in common
sub-expression<00:20:37.570><c> elimination</c><00:20:38.009><c> loop</c>

00:20:38.999 --> 00:20:39.009 align:start position:0%
sub-expression elimination loop
 

00:20:39.009 --> 00:20:42.180 align:start position:0%
sub-expression elimination loop
optimization<00:20:40.139><c> strength</c><00:20:41.139><c> reduction</c><00:20:41.470><c> and</c><00:20:41.889><c> it</c>

00:20:42.180 --> 00:20:42.190 align:start position:0%
optimization strength reduction and it
 

00:20:42.190 --> 00:20:45.810 align:start position:0%
optimization strength reduction and it
turns<00:20:42.399><c> on</c><00:20:42.549><c> the</c><00:20:42.700><c> instruction</c><00:20:43.210><c> scheduler</c><00:20:44.820><c> it</c>

00:20:45.810 --> 00:20:45.820 align:start position:0%
turns on the instruction scheduler it
 

00:20:45.820 --> 00:20:47.489 align:start position:0%
turns on the instruction scheduler it
produces<00:20:46.299><c> faster</c><00:20:46.720><c> they're</c><00:20:46.899><c> not</c><00:20:47.019><c> necessarily</c>

00:20:47.489 --> 00:20:47.499 align:start position:0%
produces faster they're not necessarily
 

00:20:47.499 --> 00:20:49.769 align:start position:0%
produces faster they're not necessarily
smaller<00:20:47.950><c> code</c><00:20:48.249><c> than</c><00:20:48.610><c> -</c><00:20:48.789><c> oh</c><00:20:48.999><c> 1</c><00:20:49.240><c> so</c><00:20:49.480><c> we'll</c><00:20:49.629><c> see</c>

00:20:49.769 --> 00:20:49.779 align:start position:0%
smaller code than - oh 1 so we'll see
 

00:20:49.779 --> 00:20:51.419 align:start position:0%
smaller code than - oh 1 so we'll see
some<00:20:50.049><c> benchmarks</c><00:20:50.619><c> that</c><00:20:50.679><c> rely</c><00:20:51.070><c> on</c><00:20:51.100><c> these</c>

00:20:51.419 --> 00:20:51.429 align:start position:0%
some benchmarks that rely on these
 

00:20:51.429 --> 00:20:54.060 align:start position:0%
some benchmarks that rely on these
optimizations<00:20:52.179><c> going</c><00:20:52.929><c> up</c><00:20:53.139><c> by</c><00:20:53.559><c> about</c><00:20:53.649><c> 10</c><00:20:53.950><c> to</c>

00:20:54.060 --> 00:20:54.070 align:start position:0%
optimizations going up by about 10 to
 

00:20:54.070 --> 00:20:58.350 align:start position:0%
optimizations going up by about 10 to
15%<00:20:55.350><c> but</c><00:20:56.350><c> the</c><00:20:56.470><c> code</c><00:20:56.740><c> will</c><00:20:57.220><c> not</c><00:20:57.249><c> get</c><00:20:57.700><c> that</c><00:20:58.119><c> much</c>

00:20:58.350 --> 00:20:58.360 align:start position:0%
15% but the code will not get that much
 

00:20:58.360 --> 00:21:00.149 align:start position:0%
15% but the code will not get that much
smaller<00:20:58.629><c> and</c><00:20:58.869><c> in</c><00:20:58.990><c> fact</c><00:20:59.139><c> in</c><00:20:59.289><c> some</c><00:20:59.350><c> cases</c><00:20:59.499><c> if</c><00:21:00.039><c> you</c>

00:21:00.149 --> 00:21:00.159 align:start position:0%
smaller and in fact in some cases if you
 

00:21:00.159 --> 00:21:01.980 align:start position:0%
smaller and in fact in some cases if you
have<00:21:00.340><c> a</c><00:21:00.639><c> lot</c><00:21:00.850><c> of</c><00:21:00.879><c> loop</c><00:21:01.149><c> unrolling</c><00:21:01.330><c> going</c><00:21:01.840><c> on</c>

00:21:01.980 --> 00:21:01.990 align:start position:0%
have a lot of loop unrolling going on
 

00:21:01.990 --> 00:21:04.730 align:start position:0%
have a lot of loop unrolling going on
the<00:21:02.110><c> code</c><00:21:02.289><c> actually</c><00:21:02.440><c> grows</c><00:21:03.309><c> by</c><00:21:03.610><c> a</c><00:21:03.639><c> little</c><00:21:03.970><c> bit</c>

00:21:04.730 --> 00:21:04.740 align:start position:0%
the code actually grows by a little bit
 

00:21:04.740 --> 00:21:06.810 align:start position:0%
the code actually grows by a little bit
the<00:21:05.740><c> other</c><00:21:05.860><c> thing</c><00:21:06.100><c> is</c><00:21:06.220><c> because</c><00:21:06.519><c> we're</c><00:21:06.700><c> doing</c>

00:21:06.810 --> 00:21:06.820 align:start position:0%
the other thing is because we're doing
 

00:21:06.820 --> 00:21:09.389 align:start position:0%
the other thing is because we're doing
doing<00:21:07.629><c> statement</c><00:21:08.230><c> level</c><00:21:08.440><c> optimization</c><00:21:09.279><c> at</c>

00:21:09.389 --> 00:21:09.399 align:start position:0%
doing statement level optimization at
 

00:21:09.399 --> 00:21:10.859 align:start position:0%
doing statement level optimization at
this<00:21:09.549><c> point</c><00:21:09.789><c> we're</c><00:21:09.940><c> doing</c><00:21:10.210><c> things</c><00:21:10.509><c> which</c>

00:21:10.859 --> 00:21:10.869 align:start position:0%
this point we're doing things which
 

00:21:10.869 --> 00:21:13.649 align:start position:0%
this point we're doing things which
which<00:21:11.649><c> will</c><00:21:12.399><c> move</c><00:21:12.610><c> statements</c><00:21:13.179><c> around</c><00:21:13.269><c> will</c>

00:21:13.649 --> 00:21:13.659 align:start position:0%
which will move statements around will
 

00:21:13.659 --> 00:21:15.509 align:start position:0%
which will move statements around will
move<00:21:13.840><c> variable</c><00:21:14.320><c> settings</c><00:21:14.679><c> outside</c><00:21:14.889><c> of</c><00:21:15.279><c> loops</c>

00:21:15.509 --> 00:21:15.519 align:start position:0%
move variable settings outside of loops
 

00:21:15.519 --> 00:21:18.960 align:start position:0%
move variable settings outside of loops
to<00:21:16.179><c> it</c><00:21:17.139><c> what</c><00:21:17.710><c> you'll</c><00:21:17.830><c> see</c><00:21:18.070><c> in</c><00:21:18.309><c> the</c><00:21:18.399><c> debugger</c><00:21:18.730><c> is</c>

00:21:18.960 --> 00:21:18.970 align:start position:0%
to it what you'll see in the debugger is
 

00:21:18.970 --> 00:21:22.379 align:start position:0%
to it what you'll see in the debugger is
that<00:21:19.210><c> sometimes</c><00:21:19.779><c> as</c><00:21:20.470><c> you're</c><00:21:20.740><c> stepping</c><00:21:21.389><c> you</c>

00:21:22.379 --> 00:21:22.389 align:start position:0%
that sometimes as you're stepping you
 

00:21:22.389 --> 00:21:25.139 align:start position:0%
that sometimes as you're stepping you
may<00:21:22.600><c> not</c><00:21:22.840><c> go</c><00:21:23.470><c> exactly</c><00:21:24.009><c> where</c><00:21:24.639><c> you</c><00:21:24.850><c> think</c><00:21:25.059><c> the</c>

00:21:25.139 --> 00:21:25.149 align:start position:0%
may not go exactly where you think the
 

00:21:25.149 --> 00:21:27.570 align:start position:0%
may not go exactly where you think the
source<00:21:25.360><c> code</c><00:21:25.570><c> is</c><00:21:25.690><c> going</c><00:21:25.869><c> to</c><00:21:25.960><c> go</c><00:21:26.110><c> you</c><00:21:27.039><c> also</c><00:21:27.220><c> may</c>

00:21:27.570 --> 00:21:27.580 align:start position:0%
source code is going to go you also may
 

00:21:27.580 --> 00:21:29.249 align:start position:0%
source code is going to go you also may
have<00:21:27.610><c> trouble</c><00:21:28.240><c> finding</c><00:21:28.450><c> variables</c><00:21:29.049><c> that</c><00:21:29.169><c> have</c>

00:21:29.249 --> 00:21:29.259 align:start position:0%
have trouble finding variables that have
 

00:21:29.259 --> 00:21:36.119 align:start position:0%
have trouble finding variables that have
been<00:21:29.350><c> hoisted</c><00:21:29.740><c> into</c><00:21:29.860><c> registers</c><00:21:34.830><c> so</c><00:21:35.830><c> the</c><00:21:36.009><c> other</c>

00:21:36.119 --> 00:21:36.129 align:start position:0%
been hoisted into registers so the other
 

00:21:36.129 --> 00:21:38.090 align:start position:0%
been hoisted into registers so the other
optimization<00:21:36.700><c> level</c><00:21:36.940><c> that</c><00:21:37.029><c> we</c><00:21:37.119><c> support</c>

00:21:38.090 --> 00:21:38.100 align:start position:0%
optimization level that we support
 

00:21:38.100 --> 00:21:42.899 align:start position:0%
optimization level that we support
inside<00:21:39.100><c> of</c><00:21:39.309><c> GCC</c><00:21:39.639><c> is</c><00:21:40.950><c> optimization</c><00:21:41.950><c> level</c><00:21:42.279><c> 3</c>

00:21:42.899 --> 00:21:42.909 align:start position:0%
inside of GCC is optimization level 3
 

00:21:42.909 --> 00:21:44.519 align:start position:0%
inside of GCC is optimization level 3
which<00:21:43.090><c> turns</c><00:21:43.360><c> on</c><00:21:43.509><c> the</c><00:21:43.659><c> inline</c><00:21:43.960><c> ER</c><00:21:44.019><c> so</c><00:21:44.259><c> this</c><00:21:44.379><c> is</c>

00:21:44.519 --> 00:21:44.529 align:start position:0%
which turns on the inline ER so this is
 

00:21:44.529 --> 00:21:46.169 align:start position:0%
which turns on the inline ER so this is
automatic<00:21:45.039><c> function</c><00:21:45.399><c> inlining</c><00:21:45.700><c> not</c><00:21:45.970><c> just</c>

00:21:46.169 --> 00:21:46.179 align:start position:0%
automatic function inlining not just
 

00:21:46.179 --> 00:21:50.369 align:start position:0%
automatic function inlining not just
when<00:21:46.330><c> you</c><00:21:46.419><c> say</c><00:21:46.629><c> inline</c><00:21:47.230><c> inside</c><00:21:47.769><c> of</c><00:21:48.029><c> C++</c><00:21:49.259><c> so</c><00:21:50.259><c> in</c>

00:21:50.369 --> 00:21:50.379 align:start position:0%
when you say inline inside of C++ so in
 

00:21:50.379 --> 00:21:52.230 align:start position:0%
when you say inline inside of C++ so in
some<00:21:50.590><c> cases</c><00:21:50.769><c> this</c><00:21:51.190><c> can</c><00:21:51.399><c> result</c><00:21:51.519><c> in</c><00:21:51.820><c> faster</c>

00:21:52.230 --> 00:21:52.240 align:start position:0%
some cases this can result in faster
 

00:21:52.240 --> 00:21:54.029 align:start position:0%
some cases this can result in faster
code<00:21:52.480><c> but</c><00:21:52.779><c> the</c><00:21:52.929><c> thing</c><00:21:53.110><c> to</c><00:21:53.200><c> keep</c><00:21:53.320><c> in</c><00:21:53.470><c> mind</c><00:21:53.710><c> is</c><00:21:53.889><c> it</c>

00:21:54.029 --> 00:21:54.039 align:start position:0%
code but the thing to keep in mind is it
 

00:21:54.039 --> 00:21:56.970 align:start position:0%
code but the thing to keep in mind is it
might<00:21:54.190><c> increase</c><00:21:54.429><c> your</c><00:21:54.639><c> binary</c><00:21:54.850><c> size</c><00:21:55.499><c> so</c><00:21:56.499><c> you</c>

00:21:56.970 --> 00:21:56.980 align:start position:0%
might increase your binary size so you
 

00:21:56.980 --> 00:21:59.249 align:start position:0%
might increase your binary size so you
may<00:21:57.129><c> get</c><00:21:57.340><c> faster</c><00:21:57.879><c> code</c><00:21:58.149><c> on</c><00:21:58.450><c> a</c><00:21:58.509><c> benchmark</c><00:21:59.139><c> or</c>

00:21:59.249 --> 00:21:59.259 align:start position:0%
may get faster code on a benchmark or
 

00:21:59.259 --> 00:22:01.320 align:start position:0%
may get faster code on a benchmark or
faster<00:21:59.619><c> code</c><00:21:59.860><c> when</c><00:22:00.100><c> you</c><00:22:00.129><c> test</c><00:22:00.490><c> one</c><00:22:00.759><c> particular</c>

00:22:01.320 --> 00:22:01.330 align:start position:0%
faster code when you test one particular
 

00:22:01.330 --> 00:22:04.859 align:start position:0%
faster code when you test one particular
piece<00:22:02.080><c> of</c><00:22:02.320><c> of</c><00:22:02.830><c> your</c><00:22:03.159><c> application</c><00:22:03.730><c> but</c><00:22:04.480><c> overall</c>

00:22:04.859 --> 00:22:04.869 align:start position:0%
piece of of your application but overall
 

00:22:04.869 --> 00:22:07.560 align:start position:0%
piece of of your application but overall
you<00:22:05.679><c> may</c><00:22:05.830><c> bloat</c><00:22:06.159><c> your</c><00:22:06.190><c> binary</c><00:22:06.580><c> enough</c><00:22:07.119><c> that</c>

00:22:07.560 --> 00:22:07.570 align:start position:0%
you may bloat your binary enough that
 

00:22:07.570 --> 00:22:09.600 align:start position:0%
you may bloat your binary enough that
you<00:22:08.200><c> start</c><00:22:08.470><c> paging</c><00:22:08.889><c> a</c><00:22:08.950><c> little</c><00:22:09.159><c> more</c><00:22:09.340><c> and</c>

00:22:09.600 --> 00:22:09.610 align:start position:0%
you start paging a little more and
 

00:22:09.610 --> 00:22:11.820 align:start position:0%
you start paging a little more and
cancel<00:22:10.240><c> out</c><00:22:10.360><c> the</c><00:22:10.539><c> results</c><00:22:10.960><c> of</c><00:22:11.110><c> getting</c><00:22:11.740><c> this</c>

00:22:11.820 --> 00:22:11.830 align:start position:0%
cancel out the results of getting this
 

00:22:11.830 --> 00:22:15.180 align:start position:0%
cancel out the results of getting this
extra<00:22:12.009><c> inlining</c><00:22:12.580><c> so</c><00:22:13.980><c> profiling</c><00:22:14.980><c> is</c><00:22:15.039><c> very</c>

00:22:15.180 --> 00:22:15.190 align:start position:0%
extra inlining so profiling is very
 

00:22:15.190 --> 00:22:16.499 align:start position:0%
extra inlining so profiling is very
important<00:22:15.610><c> measuring</c><00:22:15.999><c> this</c><00:22:16.149><c> is</c><00:22:16.299><c> very</c>

00:22:16.499 --> 00:22:16.509 align:start position:0%
important measuring this is very
 

00:22:16.509 --> 00:22:18.869 align:start position:0%
important measuring this is very
important<00:22:16.990><c> to</c><00:22:17.110><c> see</c><00:22:17.639><c> what</c><00:22:18.639><c> kind</c><00:22:18.850><c> of</c>

00:22:18.869 --> 00:22:18.879 align:start position:0%
important to see what kind of
 

00:22:18.879 --> 00:22:19.950 align:start position:0%
important to see what kind of
performance<00:22:19.360><c> you're</c><00:22:19.450><c> getting</c><00:22:19.750><c> if</c><00:22:19.840><c> you're</c>

00:22:19.950 --> 00:22:19.960 align:start position:0%
performance you're getting if you're
 

00:22:19.960 --> 00:22:22.109 align:start position:0%
performance you're getting if you're
using<00:22:20.110><c> -</c><00:22:20.409><c> oh</c><00:22:20.559><c> 3</c><00:22:20.919><c> just</c><00:22:21.429><c> to</c><00:22:21.519><c> make</c><00:22:21.639><c> sure</c><00:22:21.820><c> that</c><00:22:22.000><c> you</c>

00:22:22.109 --> 00:22:22.119 align:start position:0%
using - oh 3 just to make sure that you
 

00:22:22.119 --> 00:22:22.290 align:start position:0%
using - oh 3 just to make sure that you
do

00:22:22.290 --> 00:22:22.300 align:start position:0%
do
 

00:22:22.300 --> 00:22:24.120 align:start position:0%
do
doing<00:22:22.480><c> the</c><00:22:23.050><c> right</c><00:22:23.260><c> thing</c><00:22:23.560><c> for</c><00:22:23.590><c> your</c>

00:22:24.120 --> 00:22:24.130 align:start position:0%
doing the right thing for your
 

00:22:24.130 --> 00:22:26.670 align:start position:0%
doing the right thing for your
particular<00:22:24.550><c> application</c><00:22:24.760><c> and</c><00:22:25.470><c> I'll</c><00:22:26.470><c> point</c>

00:22:26.670 --> 00:22:26.680 align:start position:0%
particular application and I'll point
 

00:22:26.680 --> 00:22:27.960 align:start position:0%
particular application and I'll point
you<00:22:26.830><c> to</c><00:22:26.920><c> a</c><00:22:26.950><c> session</c><00:22:27.310><c> that's</c><00:22:27.460><c> happening</c><00:22:27.850><c> in</c>

00:22:27.960 --> 00:22:27.970 align:start position:0%
you to a session that's happening in
 

00:22:27.970 --> 00:22:29.310 align:start position:0%
you to a session that's happening in
here<00:22:28.120><c> at</c><00:22:28.240><c> five</c><00:22:28.390><c> o'clock</c><00:22:28.750><c> today</c><00:22:28.780><c> on</c><00:22:29.230><c> the</c>

00:22:29.310 --> 00:22:29.320 align:start position:0%
here at five o'clock today on the
 

00:22:29.320 --> 00:22:30.900 align:start position:0%
here at five o'clock today on the
performance<00:22:29.770><c> tools</c><00:22:30.010><c> or</c><00:22:30.160><c> Robert</c><00:22:30.430><c> voltage</c><00:22:30.760><c> is</c>

00:22:30.900 --> 00:22:30.910 align:start position:0%
performance tools or Robert voltage is
 

00:22:30.910 --> 00:22:32.340 align:start position:0%
performance tools or Robert voltage is
going<00:22:31.060><c> to</c><00:22:31.210><c> get</c><00:22:31.420><c> up</c><00:22:31.540><c> and</c><00:22:31.690><c> talk</c><00:22:31.810><c> about</c><00:22:31.990><c> some</c><00:22:32.260><c> of</c>

00:22:32.340 --> 00:22:32.350 align:start position:0%
going to get up and talk about some of
 

00:22:32.350 --> 00:22:34.050 align:start position:0%
going to get up and talk about some of
the<00:22:32.440><c> tools</c><00:22:32.560><c> you</c><00:22:32.800><c> can</c><00:22:32.950><c> use</c><00:22:32.980><c> to</c><00:22:33.610><c> measure</c><00:22:33.790><c> your</c>

00:22:34.050 --> 00:22:34.060 align:start position:0%
the tools you can use to measure your
 

00:22:34.060 --> 00:22:37.110 align:start position:0%
the tools you can use to measure your
application<00:22:35.310><c> and</c><00:22:36.310><c> of</c><00:22:36.490><c> course</c><00:22:36.790><c> when</c><00:22:37.000><c> we're</c>

00:22:37.110 --> 00:22:37.120 align:start position:0%
application and of course when we're
 

00:22:37.120 --> 00:22:39.440 align:start position:0%
application and of course when we're
talking<00:22:37.270><c> about</c><00:22:37.570><c> doing</c><00:22:38.350><c> automatic</c><00:22:38.650><c> inlining</c>

00:22:39.440 --> 00:22:39.450 align:start position:0%
talking about doing automatic inlining
 

00:22:39.450 --> 00:22:42.240 align:start position:0%
talking about doing automatic inlining
debugging<00:22:40.450><c> we'll</c><00:22:40.630><c> get</c><00:22:40.840><c> again</c><00:22:41.590><c> a</c><00:22:41.770><c> little</c><00:22:42.040><c> more</c>

00:22:42.240 --> 00:22:42.250 align:start position:0%
debugging we'll get again a little more
 

00:22:42.250 --> 00:22:43.920 align:start position:0%
debugging we'll get again a little more
difficult<00:22:42.760><c> for</c><00:22:42.910><c> you</c><00:22:43.360><c> when</c><00:22:43.540><c> you're</c><00:22:43.660><c> tracing</c>

00:22:43.920 --> 00:22:43.930 align:start position:0%
difficult for you when you're tracing
 

00:22:43.930 --> 00:22:52.950 align:start position:0%
difficult for you when you're tracing
through<00:22:44.290><c> inside</c><00:22:44.680><c> of</c><00:22:44.860><c> the</c><00:22:45.610><c> debugger</c><00:22:51.690><c> so</c><00:22:52.690><c> some</c>

00:22:52.950 --> 00:22:52.960 align:start position:0%
through inside of the debugger so some
 

00:22:52.960 --> 00:22:57.660 align:start position:0%
through inside of the debugger so some
recommendations<00:22:53.530><c> are</c><00:22:53.710><c> for</c><00:22:53.740><c> optimization</c><00:22:56.670><c> we</c>

00:22:57.660 --> 00:22:57.670 align:start position:0%
recommendations are for optimization we
 

00:22:57.670 --> 00:23:00.950 align:start position:0%
recommendations are for optimization we
always<00:22:58.180><c> use</c><00:22:58.800><c> internally</c><00:22:59.800><c> no</c><00:23:00.430><c> optimization</c>

00:23:00.950 --> 00:23:00.960 align:start position:0%
always use internally no optimization
 

00:23:00.960 --> 00:23:03.750 align:start position:0%
always use internally no optimization
when<00:23:01.960><c> we're</c><00:23:02.140><c> building</c><00:23:02.290><c> when</c><00:23:03.190><c> we're</c><00:23:03.640><c> just</c>

00:23:03.750 --> 00:23:03.760 align:start position:0%
when we're building when we're just
 

00:23:03.760 --> 00:23:05.820 align:start position:0%
when we're building when we're just
doing<00:23:03.970><c> development</c><00:23:04.300><c> builds</c><00:23:04.840><c> this</c><00:23:05.530><c> lets</c><00:23:05.740><c> us</c>

00:23:05.820 --> 00:23:05.830 align:start position:0%
doing development builds this lets us
 

00:23:05.830 --> 00:23:07.800 align:start position:0%
doing development builds this lets us
get<00:23:06.280><c> access</c><00:23:06.730><c> to</c><00:23:06.940><c> all</c><00:23:07.120><c> the</c><00:23:07.330><c> stuff</c><00:23:07.540><c> in</c><00:23:07.720><c> the</c>

00:23:07.800 --> 00:23:07.810 align:start position:0%
get access to all the stuff in the
 

00:23:07.810 --> 00:23:10.560 align:start position:0%
get access to all the stuff in the
debugger<00:23:08.190><c> there's</c><00:23:09.190><c> no</c><00:23:09.400><c> statement</c><00:23:10.030><c> movement</c>

00:23:10.560 --> 00:23:10.570 align:start position:0%
debugger there's no statement movement
 

00:23:10.570 --> 00:23:12.810 align:start position:0%
debugger there's no statement movement
or<00:23:10.630><c> anything</c><00:23:10.810><c> that</c><00:23:10.960><c> confuses</c><00:23:11.800><c> us</c><00:23:11.980><c> it</c><00:23:12.190><c> gives</c><00:23:12.610><c> us</c>

00:23:12.810 --> 00:23:12.820 align:start position:0%
or anything that confuses us it gives us
 

00:23:12.820 --> 00:23:18.000 align:start position:0%
or anything that confuses us it gives us
the<00:23:13.240><c> the</c><00:23:13.540><c> best</c><00:23:13.750><c> turnaround</c><00:23:14.620><c> time</c><00:23:14.890><c> and</c><00:23:17.010><c> it's</c>

00:23:18.000 --> 00:23:18.010 align:start position:0%
the the best turnaround time and it's
 

00:23:18.010 --> 00:23:20.910 align:start position:0%
the the best turnaround time and it's
it's<00:23:18.430><c> generally</c><00:23:18.970><c> you</c><00:23:19.240><c> know</c><00:23:19.800><c> what</c><00:23:20.800><c> we</c>

00:23:20.910 --> 00:23:20.920 align:start position:0%
it's generally you know what we
 

00:23:20.920 --> 00:23:22.920 align:start position:0%
it's generally you know what we
recommend<00:23:21.430><c> for</c><00:23:21.760><c> external</c><00:23:22.210><c> developers</c><00:23:22.750><c> as</c>

00:23:22.920 --> 00:23:22.930 align:start position:0%
recommend for external developers as
 

00:23:22.930 --> 00:23:26.330 align:start position:0%
recommend for external developers as
well<00:23:23.130><c> our</c><00:23:24.130><c> build</c><00:23:24.430><c> style</c><00:23:24.760><c> gives</c><00:23:25.270><c> you</c><00:23:25.510><c> -</c><00:23:25.750><c> oh</c><00:23:25.930><c> 0</c>

00:23:26.330 --> 00:23:26.340 align:start position:0%
well our build style gives you - oh 0
 

00:23:26.340 --> 00:23:28.560 align:start position:0%
well our build style gives you - oh 0
when<00:23:27.340><c> you</c><00:23:27.430><c> choose</c><00:23:27.670><c> the</c><00:23:27.910><c> development</c><00:23:28.390><c> build</c>

00:23:28.560 --> 00:23:28.570 align:start position:0%
when you choose the development build
 

00:23:28.570 --> 00:23:29.300 align:start position:0%
when you choose the development build
style

00:23:29.300 --> 00:23:29.310 align:start position:0%
style
 

00:23:29.310 --> 00:23:32.640 align:start position:0%
style
we<00:23:30.310><c> also</c><00:23:30.460><c> recommend</c><00:23:30.820><c> for</c><00:23:31.390><c> deployment</c><00:23:32.200><c> builds</c>

00:23:32.640 --> 00:23:32.650 align:start position:0%
we also recommend for deployment builds
 

00:23:32.650 --> 00:23:36.480 align:start position:0%
we also recommend for deployment builds
for<00:23:33.010><c> most</c><00:23:33.220><c> people</c><00:23:33.670><c> to</c><00:23:34.090><c> use</c><00:23:34.330><c> -</c><00:23:34.690><c> OH</c><00:23:34.900><c> -</c><00:23:35.130><c> it</c><00:23:36.130><c> doesn't</c>

00:23:36.480 --> 00:23:36.490 align:start position:0%
for most people to use - OH - it doesn't
 

00:23:36.490 --> 00:23:40.160 align:start position:0%
for most people to use - OH - it doesn't
have<00:23:37.020><c> it</c><00:23:38.020><c> doesn't</c><00:23:38.530><c> have</c><00:23:38.620><c> a</c><00:23:38.680><c> big</c><00:23:38.890><c> effect</c><00:23:39.220><c> on</c><00:23:39.340><c> the</c>

00:23:40.160 --> 00:23:40.170 align:start position:0%
have it doesn't have a big effect on the
 

00:23:40.170 --> 00:23:43.530 align:start position:0%
have it doesn't have a big effect on the
size<00:23:41.170><c> of</c><00:23:41.590><c> your</c><00:23:41.620><c> binary</c><00:23:42.010><c> but</c><00:23:42.820><c> what</c><00:23:42.970><c> it</c><00:23:43.090><c> does</c><00:23:43.270><c> do</c>

00:23:43.530 --> 00:23:43.540 align:start position:0%
size of your binary but what it does do
 

00:23:43.540 --> 00:23:47.670 align:start position:0%
size of your binary but what it does do
is<00:23:44.880><c> decides</c><00:23:45.880><c> your</c><00:23:46.060><c> binary</c><00:23:46.240><c> /</c><00:23:46.600><c> -</c><00:23:46.780><c> l1</c><00:23:47.200><c> but</c>

00:23:47.670 --> 00:23:47.680 align:start position:0%
is decides your binary / - l1 but
 

00:23:47.680 --> 00:23:49.560 align:start position:0%
is decides your binary / - l1 but
turning<00:23:47.890><c> on</c><00:23:48.070><c> any</c><00:23:48.250><c> optimization</c><00:23:48.940><c> is</c><00:23:49.030><c> a</c><00:23:49.060><c> big</c><00:23:49.300><c> win</c>

00:23:49.560 --> 00:23:49.570 align:start position:0%
turning on any optimization is a big win
 

00:23:49.570 --> 00:23:51.690 align:start position:0%
turning on any optimization is a big win
turning<00:23:49.870><c> on</c><00:23:49.960><c> -</c><00:23:50.140><c> OH</c><00:23:50.320><c> -</c><00:23:50.350><c> gives</c><00:23:50.800><c> it</c><00:23:50.950><c> a</c><00:23:51.040><c> extra</c><00:23:51.430><c> 10</c><00:23:51.610><c> to</c>

00:23:51.690 --> 00:23:51.700 align:start position:0%
turning on - OH - gives it a extra 10 to
 

00:23:51.700 --> 00:23:54.960 align:start position:0%
turning on - OH - gives it a extra 10 to
15%<00:23:52.380><c> again</c><00:23:53.380><c> it</c><00:23:53.560><c> has</c><00:23:53.980><c> that</c><00:23:54.010><c> trade-off</c><00:23:54.490><c> that</c><00:23:54.850><c> if</c>

00:23:54.960 --> 00:23:54.970 align:start position:0%
15% again it has that trade-off that if
 

00:23:54.970 --> 00:23:56.640 align:start position:0%
15% again it has that trade-off that if
you're<00:23:55.120><c> using</c><00:23:55.480><c> -</c><00:23:55.750><c> oh</c><00:23:55.960><c> -</c><00:23:56.020><c> and</c><00:23:56.230><c> then</c><00:23:56.350><c> trying</c><00:23:56.590><c> to</c>

00:23:56.640 --> 00:23:56.650 align:start position:0%
you're using - oh - and then trying to
 

00:23:56.650 --> 00:23:58.050 align:start position:0%
you're using - oh - and then trying to
debug<00:23:56.920><c> it</c><00:23:57.070><c> you</c><00:23:57.160><c> may</c><00:23:57.310><c> run</c><00:23:57.640><c> into</c><00:23:57.790><c> a</c><00:23:57.880><c> couple</c>

00:23:58.050 --> 00:23:58.060 align:start position:0%
debug it you may run into a couple
 

00:23:58.060 --> 00:24:02.130 align:start position:0%
debug it you may run into a couple
confusing<00:23:58.990><c> situations</c><00:23:59.670><c> and</c><00:24:00.750><c> again</c><00:24:01.750><c> -</c><00:24:01.990><c> oh</c>

00:24:02.130 --> 00:24:02.140 align:start position:0%
confusing situations and again - oh
 

00:24:02.140 --> 00:24:03.990 align:start position:0%
confusing situations and again - oh
three<00:24:02.530><c> when</c><00:24:02.710><c> you</c><00:24:02.800><c> have</c><00:24:02.950><c> CPU</c><00:24:03.370><c> critical</c><00:24:03.790><c> cases</c>

00:24:03.990 --> 00:24:04.000 align:start position:0%
three when you have CPU critical cases
 

00:24:04.000 --> 00:24:06.270 align:start position:0%
three when you have CPU critical cases
when<00:24:04.900><c> you're</c><00:24:05.050><c> trying</c><00:24:05.290><c> to</c><00:24:05.470><c> get</c><00:24:05.890><c> you</c><00:24:06.160><c> know</c><00:24:06.250><c> that</c>

00:24:06.270 --> 00:24:06.280 align:start position:0%
when you're trying to get you know that
 

00:24:06.280 --> 00:24:08.460 align:start position:0%
when you're trying to get you know that
last<00:24:06.640><c> ounce</c><00:24:06.970><c> of</c><00:24:07.150><c> performance</c><00:24:07.360><c> out</c><00:24:07.930><c> of</c><00:24:07.960><c> it</c><00:24:08.170><c> but</c>

00:24:08.460 --> 00:24:08.470 align:start position:0%
last ounce of performance out of it but
 

00:24:08.470 --> 00:24:10.530 align:start position:0%
last ounce of performance out of it but
definitely<00:24:08.890><c> make</c><00:24:09.340><c> sure</c><00:24:09.400><c> that</c><00:24:09.670><c> you're</c><00:24:10.390><c> not</c>

00:24:10.530 --> 00:24:10.540 align:start position:0%
definitely make sure that you're not
 

00:24:10.540 --> 00:24:13.190 align:start position:0%
definitely make sure that you're not
loading<00:24:10.990><c> your</c><00:24:11.230><c> binary</c><00:24:11.470><c> to</c><00:24:11.800><c> the</c><00:24:11.890><c> point</c><00:24:12.130><c> where</c>

00:24:13.190 --> 00:24:13.200 align:start position:0%
loading your binary to the point where
 

00:24:13.200 --> 00:24:16.830 align:start position:0%
loading your binary to the point where
it's<00:24:14.200><c> not</c><00:24:14.940><c> it's</c><00:24:15.940><c> it's</c><00:24:16.180><c> cancelling</c><00:24:16.720><c> out</c><00:24:16.810><c> the</c>

00:24:16.830 --> 00:24:16.840 align:start position:0%
it's not it's it's cancelling out the
 

00:24:16.840 --> 00:24:23.790 align:start position:0%
it's not it's it's cancelling out the
results<00:24:17.320><c> of</c><00:24:17.500><c> the</c><00:24:18.310><c> change</c><00:24:22.290><c> so</c><00:24:23.290><c> just</c><00:24:23.320><c> a</c><00:24:23.650><c> little</c>

00:24:23.790 --> 00:24:23.800 align:start position:0%
results of the change so just a little
 

00:24:23.800 --> 00:24:30.780 align:start position:0%
results of the change so just a little
bit<00:24:24.040><c> on</c><00:24:24.190><c> altivec</c><00:24:25.150><c> in</c><00:24:25.440><c> GCC</c><00:24:26.700><c> the</c><00:24:29.430><c> big</c><00:24:30.430><c> thing</c><00:24:30.640><c> to</c>

00:24:30.780 --> 00:24:30.790 align:start position:0%
bit on altivec in GCC the big thing to
 

00:24:30.790 --> 00:24:34.110 align:start position:0%
bit on altivec in GCC the big thing to
keep<00:24:31.270><c> keep</c><00:24:32.020><c> in</c><00:24:32.140><c> mind</c><00:24:32.320><c> is</c><00:24:32.440><c> that</c><00:24:32.590><c> we</c><00:24:32.740><c> support</c><00:24:33.640><c> all</c>

00:24:34.110 --> 00:24:34.120 align:start position:0%
keep keep in mind is that we support all
 

00:24:34.120 --> 00:24:36.899 align:start position:0%
keep keep in mind is that we support all
of<00:24:34.450><c> the</c><00:24:34.570><c> altivec</c><00:24:34.990><c> intrinsics</c><00:24:35.560><c> and</c><00:24:35.740><c> GCC</c>

00:24:36.899 --> 00:24:36.909 align:start position:0%
of the altivec intrinsics and GCC
 

00:24:36.909 --> 00:24:38.909 align:start position:0%
of the altivec intrinsics and GCC
so<00:24:37.299><c> if</c><00:24:37.690><c> you're</c><00:24:37.900><c> used</c><00:24:38.110><c> to</c><00:24:38.200><c> using</c><00:24:38.260><c> altivec</c>

00:24:38.909 --> 00:24:38.919 align:start position:0%
so if you're used to using altivec
 

00:24:38.919 --> 00:24:40.680 align:start position:0%
so if you're used to using altivec
through<00:24:39.190><c> Cold</c><00:24:39.429><c> War</c><00:24:39.640><c> the</c><00:24:39.940><c> same</c><00:24:40.179><c> thing</c><00:24:40.419><c> applies</c>

00:24:40.680 --> 00:24:40.690 align:start position:0%
through Cold War the same thing applies
 

00:24:40.690 --> 00:24:42.060 align:start position:0%
through Cold War the same thing applies
you'll<00:24:40.929><c> be</c><00:24:41.049><c> able</c><00:24:41.140><c> to</c><00:24:41.260><c> use</c><00:24:41.380><c> that</c><00:24:41.530><c> same</c><00:24:41.770><c> code</c>

00:24:42.060 --> 00:24:42.070 align:start position:0%
you'll be able to use that same code
 

00:24:42.070 --> 00:24:44.600 align:start position:0%
you'll be able to use that same code
inside<00:24:43.000><c> a</c><00:24:43.059><c> project</c><00:24:43.299><c> builder</c><00:24:43.750><c> inside</c><00:24:44.080><c> of</c><00:24:44.169><c> GCC</c>

00:24:44.600 --> 00:24:44.610 align:start position:0%
inside a project builder inside of GCC
 

00:24:44.610 --> 00:24:47.880 align:start position:0%
inside a project builder inside of GCC
and<00:24:45.610><c> again</c><00:24:45.909><c> it</c><00:24:46.840><c> requires</c><00:24:47.260><c> though</c><00:24:47.590><c> that</c><00:24:47.799><c> you</c>

00:24:47.880 --> 00:24:47.890 align:start position:0%
and again it requires though that you
 

00:24:47.890 --> 00:24:50.850 align:start position:0%
and again it requires though that you
pass<00:24:48.130><c> a</c><00:24:48.159><c> -</c><00:24:48.490><c> a</c><00:24:48.700><c> fault</c><00:24:48.970><c> of</c><00:24:49.120><c> that</c><00:24:49.270><c> flag</c><00:24:49.900><c> -</c><00:24:50.620><c> project</c>

00:24:50.850 --> 00:24:50.860 align:start position:0%
pass a - a fault of that flag - project
 

00:24:50.860 --> 00:24:53.460 align:start position:0%
pass a - a fault of that flag - project
builder<00:24:51.340><c> which</c><00:24:52.150><c> we</c><00:24:52.630><c> can</c><00:24:52.780><c> show</c><00:24:52.929><c> you</c><00:24:52.960><c> how</c><00:24:53.110><c> to</c><00:24:53.200><c> do</c>

00:24:53.460 --> 00:24:53.470 align:start position:0%
builder which we can show you how to do
 

00:24:53.470 --> 00:24:58.950 align:start position:0%
builder which we can show you how to do
if<00:24:54.220><c> I</c><00:24:54.340><c> can</c><00:24:54.460><c> bring</c><00:24:54.580><c> the</c><00:24:54.730><c> van</c><00:24:54.880><c> back</c><00:24:55.090><c> up</c><00:24:55.240><c> here</c><00:24:57.960><c> so</c>

00:24:58.950 --> 00:24:58.960 align:start position:0%
if I can bring the van back up here so
 

00:24:58.960 --> 00:25:00.649 align:start position:0%
if I can bring the van back up here so
we're<00:24:59.110><c> going</c><00:24:59.200><c> to</c><00:24:59.260><c> do</c><00:24:59.350><c> a</c><00:24:59.380><c> quick</c><00:24:59.620><c> demo</c><00:24:59.950><c> now</c><00:25:00.130><c> on</c>

00:25:00.649 --> 00:25:00.659 align:start position:0%
we're going to do a quick demo now on
 

00:25:00.659 --> 00:25:03.090 align:start position:0%
we're going to do a quick demo now on
compiler<00:25:01.659><c> settings</c><00:25:02.140><c> inside</c><00:25:02.830><c> a</c><00:25:02.860><c> project</c>

00:25:03.090 --> 00:25:03.100 align:start position:0%
compiler settings inside a project
 

00:25:03.100 --> 00:25:05.909 align:start position:0%
compiler settings inside a project
village<00:25:03.549><c> so</c><00:25:04.140><c> sending</c><00:25:05.140><c> those</c><00:25:05.260><c> optimization</c>

00:25:05.909 --> 00:25:05.919 align:start position:0%
village so sending those optimization
 

00:25:05.919 --> 00:25:07.409 align:start position:0%
village so sending those optimization
flags<00:25:06.159><c> how</c><00:25:06.730><c> you</c><00:25:06.789><c> would</c><00:25:07.000><c> set</c><00:25:07.150><c> the</c><00:25:07.299><c> ultimate</c>

00:25:07.409 --> 00:25:07.419 align:start position:0%
flags how you would set the ultimate
 

00:25:07.419 --> 00:25:09.090 align:start position:0%
flags how you would set the ultimate
flag<00:25:07.929><c> how</c><00:25:08.140><c> you</c><00:25:08.200><c> would</c><00:25:08.409><c> set</c><00:25:08.590><c> up</c><00:25:08.620><c> some</c><00:25:08.919><c> of</c><00:25:08.950><c> the</c>

00:25:09.090 --> 00:25:09.100 align:start position:0%
flag how you would set up some of the
 

00:25:09.100 --> 00:25:10.919 align:start position:0%
flag how you would set up some of the
other<00:25:09.130><c> flags</c><00:25:10.059><c> that</c><00:25:10.240><c> you</c><00:25:10.360><c> used</c><00:25:10.510><c> to</c><00:25:10.570><c> setting</c>

00:25:10.919 --> 00:25:10.929 align:start position:0%
other flags that you used to setting
 

00:25:10.929 --> 00:25:12.960 align:start position:0%
other flags that you used to setting
from<00:25:11.080><c> the</c><00:25:11.169><c> command</c><00:25:11.470><c> line</c><00:25:11.530><c> on</c><00:25:11.799><c> GCC</c><00:25:12.340><c> or</c><00:25:12.549><c> for</c>

00:25:12.960 --> 00:25:12.970 align:start position:0%
from the command line on GCC or for
 

00:25:12.970 --> 00:25:14.460 align:start position:0%
from the command line on GCC or for
those<00:25:13.059><c> of</c><00:25:13.210><c> you</c><00:25:13.299><c> that</c><00:25:13.450><c> are</c><00:25:13.510><c> not</c><00:25:13.630><c> using</c><00:25:13.840><c> GCC</c><00:25:14.230><c> how</c>

00:25:14.460 --> 00:25:14.470 align:start position:0%
those of you that are not using GCC how
 

00:25:14.470 --> 00:25:17.250 align:start position:0%
those of you that are not using GCC how
you<00:25:14.530><c> can</c><00:25:14.710><c> avoid</c><00:25:14.980><c> having</c><00:25:15.780><c> to</c><00:25:16.780><c> access</c><00:25:17.140><c> the</c>

00:25:17.250 --> 00:25:17.260 align:start position:0%
you can avoid having to access the
 

00:25:17.260 --> 00:25:18.270 align:start position:0%
you can avoid having to access the
command<00:25:17.590><c> line</c><00:25:17.679><c> or</c><00:25:17.710><c> having</c><00:25:17.980><c> to</c><00:25:18.039><c> worry</c><00:25:18.220><c> about</c>

00:25:18.270 --> 00:25:18.280 align:start position:0%
command line or having to worry about
 

00:25:18.280 --> 00:25:20.310 align:start position:0%
command line or having to worry about
the<00:25:18.520><c> command</c><00:25:18.789><c> line</c><00:25:18.970><c> so</c><00:25:19.630><c> what</c><00:25:19.750><c> devane's</c><00:25:20.049><c> done</c>

00:25:20.310 --> 00:25:20.320 align:start position:0%
the command line so what devane's done
 

00:25:20.320 --> 00:25:22.470 align:start position:0%
the command line so what devane's done
is<00:25:20.500><c> brought</c><00:25:20.770><c> up</c><00:25:20.980><c> again</c><00:25:21.520><c> the</c><00:25:21.669><c> target</c><00:25:21.940><c> editor</c>

00:25:22.470 --> 00:25:22.480 align:start position:0%
is brought up again the target editor
 

00:25:22.480 --> 00:25:24.380 align:start position:0%
is brought up again the target editor
and<00:25:22.720><c> he's</c><00:25:22.840><c> clicked</c><00:25:23.110><c> on</c><00:25:23.230><c> the</c><00:25:23.320><c> build</c><00:25:23.530><c> settings</c>

00:25:24.380 --> 00:25:24.390 align:start position:0%
and he's clicked on the build settings
 

00:25:24.390 --> 00:25:27.060 align:start position:0%
and he's clicked on the build settings
pane<00:25:25.390><c> of</c><00:25:25.600><c> the</c><00:25:25.690><c> target</c><00:25:26.049><c> editor</c><00:25:26.320><c> and</c><00:25:26.500><c> we've</c><00:25:26.890><c> got</c>

00:25:27.060 --> 00:25:27.070 align:start position:0%
pane of the target editor and we've got
 

00:25:27.070 --> 00:25:28.950 align:start position:0%
pane of the target editor and we've got
a<00:25:27.100><c> lot</c><00:25:27.400><c> of</c><00:25:27.429><c> things</c><00:25:27.880><c> in</c><00:25:28.120><c> here</c><00:25:28.360><c> to</c><00:25:28.419><c> control</c><00:25:28.900><c> the</c>

00:25:28.950 --> 00:25:28.960 align:start position:0%
a lot of things in here to control the
 

00:25:28.960 --> 00:25:30.299 align:start position:0%
a lot of things in here to control the
compiler<00:25:29.470><c> settings</c><00:25:29.799><c> you</c><00:25:29.890><c> can</c><00:25:30.010><c> just</c><00:25:30.159><c> look</c>

00:25:30.299 --> 00:25:30.309 align:start position:0%
compiler settings you can just look
 

00:25:30.309 --> 00:25:31.919 align:start position:0%
compiler settings you can just look
there's<00:25:30.520><c> a</c><00:25:30.580><c> big</c><00:25:30.700><c> section</c><00:25:31.090><c> labeled</c><00:25:31.330><c> compiler</c>

00:25:31.919 --> 00:25:31.929 align:start position:0%
there's a big section labeled compiler
 

00:25:31.929 --> 00:25:34.680 align:start position:0%
there's a big section labeled compiler
settings<00:25:33.000><c> the</c><00:25:34.000><c> first</c><00:25:34.210><c> thing</c><00:25:34.360><c> that</c><00:25:34.390><c> we</c><00:25:34.570><c> can</c>

00:25:34.680 --> 00:25:34.690 align:start position:0%
settings the first thing that we can
 

00:25:34.690 --> 00:25:36.090 align:start position:0%
settings the first thing that we can
control<00:25:34.929><c> is</c><00:25:35.110><c> optimization</c><00:25:35.740><c> so</c><00:25:35.860><c> you</c><00:25:35.950><c> basically</c>

00:25:36.090 --> 00:25:36.100 align:start position:0%
control is optimization so you basically
 

00:25:36.100 --> 00:25:38.370 align:start position:0%
control is optimization so you basically
can<00:25:36.460><c> just</c><00:25:36.610><c> go</c><00:25:36.730><c> to</c><00:25:36.820><c> this</c><00:25:36.909><c> pop-up</c><00:25:37.179><c> and</c><00:25:37.450><c> set</c><00:25:37.690><c> no</c>

00:25:38.370 --> 00:25:38.380 align:start position:0%
can just go to this pop-up and set no
 

00:25:38.380 --> 00:25:39.779 align:start position:0%
can just go to this pop-up and set no
optimization<00:25:38.830><c> which</c><00:25:39.309><c> of</c><00:25:39.429><c> course</c><00:25:39.460><c> is</c><00:25:39.760><c> the</c>

00:25:39.779 --> 00:25:39.789 align:start position:0%
optimization which of course is the
 

00:25:39.789 --> 00:25:41.970 align:start position:0%
optimization which of course is the
default<00:25:40.210><c> for</c><00:25:40.870><c> development</c><00:25:41.289><c> builds</c><00:25:41.590><c> all</c><00:25:41.740><c> the</c>

00:25:41.970 --> 00:25:41.980 align:start position:0%
default for development builds all the
 

00:25:41.980 --> 00:25:44.520 align:start position:0%
default for development builds all the
way<00:25:42.190><c> up</c><00:25:42.309><c> to</c><00:25:42.460><c> optimization</c><00:25:43.059><c> level</c><00:25:43.360><c> three</c><00:25:43.659><c> for</c>

00:25:44.520 --> 00:25:44.530 align:start position:0%
way up to optimization level three for
 

00:25:44.530 --> 00:25:45.539 align:start position:0%
way up to optimization level three for
the<00:25:44.679><c> particular</c><00:25:45.010><c> thing</c><00:25:45.280><c> that</c><00:25:45.309><c> you're</c>

00:25:45.539 --> 00:25:45.549 align:start position:0%
the particular thing that you're
 

00:25:45.549 --> 00:25:48.060 align:start position:0%
the particular thing that you're
building<00:25:46.289><c> you</c><00:25:47.289><c> can</c><00:25:47.409><c> turn</c><00:25:47.650><c> on</c><00:25:47.830><c> and</c><00:25:47.980><c> off</c>

00:25:48.060 --> 00:25:48.070 align:start position:0%
building you can turn on and off
 

00:25:48.070 --> 00:25:49.560 align:start position:0%
building you can turn on and off
debugging<00:25:48.610><c> information</c><00:25:49.120><c> if</c><00:25:49.210><c> you</c><00:25:49.299><c> want</c><00:25:49.480><c> to</c>

00:25:49.560 --> 00:25:49.570 align:start position:0%
debugging information if you want to
 

00:25:49.570 --> 00:25:50.789 align:start position:0%
debugging information if you want to
generate<00:25:49.659><c> debugging</c><00:25:50.260><c> information</c><00:25:50.679><c> if</c><00:25:50.740><c> you</c>

00:25:50.789 --> 00:25:50.799 align:start position:0%
generate debugging information if you
 

00:25:50.799 --> 00:25:51.930 align:start position:0%
generate debugging information if you
don't<00:25:51.010><c> want</c><00:25:51.159><c> to</c><00:25:51.220><c> generate</c><00:25:51.520><c> debugging</c>

00:25:51.930 --> 00:25:51.940 align:start position:0%
don't want to generate debugging
 

00:25:51.940 --> 00:25:53.880 align:start position:0%
don't want to generate debugging
information<00:25:52.419><c> for</c><00:25:52.840><c> though</c><00:25:52.960><c> for</c><00:25:53.380><c> those</c><00:25:53.559><c> of</c><00:25:53.740><c> you</c>

00:25:53.880 --> 00:25:53.890 align:start position:0%
information for though for those of you
 

00:25:53.890 --> 00:25:56.520 align:start position:0%
information for though for those of you
that<00:25:54.130><c> are</c><00:25:54.460><c> looking</c><00:25:54.970><c> at</c><00:25:55.330><c> deployment</c><00:25:55.960><c> binaries</c>

00:25:56.520 --> 00:25:56.530 align:start position:0%
that are looking at deployment binaries
 

00:25:56.530 --> 00:25:58.169 align:start position:0%
that are looking at deployment binaries
and<00:25:56.770><c> wondering</c><00:25:57.280><c> why</c><00:25:57.400><c> they're</c><00:25:57.640><c> so</c><00:25:57.789><c> big</c><00:25:58.030><c> you</c>

00:25:58.169 --> 00:25:58.179 align:start position:0%
and wondering why they're so big you
 

00:25:58.179 --> 00:25:59.669 align:start position:0%
and wondering why they're so big you
might<00:25:58.330><c> want</c><00:25:58.480><c> to</c><00:25:58.539><c> checks</c><00:25:58.809><c> that</c><00:25:58.990><c> flag</c><00:25:59.320><c> because</c>

00:25:59.669 --> 00:25:59.679 align:start position:0%
might want to checks that flag because
 

00:25:59.679 --> 00:26:01.320 align:start position:0%
might want to checks that flag because
there's<00:25:59.890><c> a</c><00:25:59.950><c> lot</c><00:26:00.190><c> of</c><00:26:00.220><c> debugging</c><00:26:00.490><c> information</c>

00:26:01.320 --> 00:26:01.330 align:start position:0%
there's a lot of debugging information
 

00:26:01.330 --> 00:26:03.779 align:start position:0%
there's a lot of debugging information
that<00:26:01.809><c> goes</c><00:26:02.169><c> into</c><00:26:02.200><c> a</c><00:26:02.620><c> binary</c><00:26:02.950><c> if</c><00:26:03.280><c> you</c><00:26:03.400><c> turn</c><00:26:03.610><c> this</c>

00:26:03.779 --> 00:26:03.789 align:start position:0%
that goes into a binary if you turn this
 

00:26:03.789 --> 00:26:05.460 align:start position:0%
that goes into a binary if you turn this
on<00:26:04.000><c> you</c><00:26:04.240><c> definitely</c><00:26:04.900><c> want</c><00:26:05.020><c> to</c><00:26:05.080><c> make</c><00:26:05.200><c> sure</c><00:26:05.230><c> that</c>

00:26:05.460 --> 00:26:05.470 align:start position:0%
on you definitely want to make sure that
 

00:26:05.470 --> 00:26:07.919 align:start position:0%
on you definitely want to make sure that
that's<00:26:05.650><c> off</c><00:26:05.860><c> for</c><00:26:06.669><c> the</c><00:26:07.150><c> binaries</c><00:26:07.690><c> that</c><00:26:07.720><c> you're</c>

00:26:07.919 --> 00:26:07.929 align:start position:0%
that's off for the binaries that you're
 

00:26:07.929 --> 00:26:12.270 align:start position:0%
that's off for the binaries that you're
deploying<00:26:09.690><c> we</c><00:26:10.690><c> also</c><00:26:10.960><c> again</c><00:26:11.230><c> have</c><00:26:11.260><c> whoa</c><00:26:11.799><c> we</c>

00:26:12.270 --> 00:26:12.280 align:start position:0%
deploying we also again have whoa we
 

00:26:12.280 --> 00:26:15.090 align:start position:0%
deploying we also again have whoa we
also<00:26:12.429><c> again</c><00:26:12.700><c> have</c><00:26:12.970><c> the</c><00:26:13.299><c> the</c><00:26:14.230><c> implicitly</c>

00:26:15.090 --> 00:26:15.100 align:start position:0%
also again have the the implicitly
 

00:26:15.100 --> 00:26:16.770 align:start position:0%
also again have the the implicitly
included<00:26:15.610><c> headers</c><00:26:15.940><c> and</c><00:26:16.150><c> again</c><00:26:16.419><c> you</c><00:26:16.510><c> can</c><00:26:16.659><c> add</c>

00:26:16.770 --> 00:26:16.780 align:start position:0%
included headers and again you can add
 

00:26:16.780 --> 00:26:18.120 align:start position:0%
included headers and again you can add
as<00:26:16.900><c> many</c><00:26:17.020><c> of</c><00:26:17.230><c> those</c><00:26:17.320><c> as</c><00:26:17.530><c> you</c><00:26:17.559><c> want</c><00:26:17.860><c> and</c><00:26:18.010><c> you</c><00:26:18.070><c> can</c>

00:26:18.120 --> 00:26:18.130 align:start position:0%
as many of those as you want and you can
 

00:26:18.130 --> 00:26:22.740 align:start position:0%
as many of those as you want and you can
pre<00:26:18.400><c> compile</c><00:26:18.730><c> them</c><00:26:19.289><c> and</c><00:26:20.289><c> also</c><00:26:20.909><c> to</c><00:26:21.909><c> set</c><00:26:22.179><c> some</c><00:26:22.630><c> of</c>

00:26:22.740 --> 00:26:22.750 align:start position:0%
pre compile them and also to set some of
 

00:26:22.750 --> 00:26:24.899 align:start position:0%
pre compile them and also to set some of
the<00:26:22.809><c> preprocessor</c><00:26:23.200><c> flags</c><00:26:23.890><c> what</c><00:26:24.730><c> are</c><00:26:24.850><c> the</c>

00:26:24.899 --> 00:26:24.909 align:start position:0%
the preprocessor flags what are the
 

00:26:24.909 --> 00:26:26.880 align:start position:0%
the preprocessor flags what are the
search<00:26:25.120><c> paths</c><00:26:25.419><c> where</c><00:26:26.080><c> we</c><00:26:26.200><c> look</c><00:26:26.380><c> for</c><00:26:26.590><c> headers</c>

00:26:26.880 --> 00:26:26.890 align:start position:0%
search paths where we look for headers
 

00:26:26.890 --> 00:26:31.730 align:start position:0%
search paths where we look for headers
and<00:26:27.669><c> you</c><00:26:27.880><c> can</c><00:26:28.000><c> set</c><00:26:28.179><c> all</c><00:26:28.330><c> that</c><00:26:28.480><c> up</c><00:26:28.950><c> so</c><00:26:29.950><c> down</c><00:26:30.159><c> here</c>

00:26:31.730 --> 00:26:31.740 align:start position:0%
and you can set all that up so down here
 

00:26:31.740 --> 00:26:35.430 align:start position:0%
and you can set all that up so down here
in<00:26:32.940><c> there's</c><00:26:33.940><c> a</c><00:26:34.000><c> sort</c><00:26:34.299><c> of</c><00:26:34.360><c> a</c><00:26:34.450><c> general</c><00:26:34.690><c> table</c>

00:26:35.430 --> 00:26:35.440 align:start position:0%
in there's a sort of a general table
 

00:26:35.440 --> 00:26:38.760 align:start position:0%
in there's a sort of a general table
called<00:26:35.740><c> build</c><00:26:36.130><c> settings</c><00:26:36.789><c> and</c><00:26:37.650><c> for</c><00:26:38.650><c> the</c>

00:26:38.760 --> 00:26:38.770 align:start position:0%
called build settings and for the
 

00:26:38.770 --> 00:26:40.159 align:start position:0%
called build settings and for the
compiler<00:26:39.220><c> flags</c><00:26:39.520><c> that</c><00:26:39.700><c> aren't</c><00:26:40.000><c> represented</c>

00:26:40.159 --> 00:26:40.169 align:start position:0%
compiler flags that aren't represented
 

00:26:40.169 --> 00:26:44.250 align:start position:0%
compiler flags that aren't represented
inside<00:26:41.169><c> of</c><00:26:41.320><c> GUI</c><00:26:42.240><c> you</c><00:26:43.240><c> can</c><00:26:43.419><c> actually</c><00:26:43.750><c> get</c><00:26:44.049><c> at</c>

00:26:44.250 --> 00:26:44.260 align:start position:0%
inside of GUI you can actually get at
 

00:26:44.260 --> 00:26:47.130 align:start position:0%
inside of GUI you can actually get at
these<00:26:44.500><c> through</c><00:26:45.190><c> this</c><00:26:45.370><c> table</c><00:26:45.760><c> this</c><00:26:46.750><c> is</c><00:26:46.929><c> sort</c><00:26:47.110><c> of</c>

00:26:47.130 --> 00:26:47.140 align:start position:0%
these through this table this is sort of
 

00:26:47.140 --> 00:26:49.919 align:start position:0%
these through this table this is sort of
an<00:26:47.260><c> expert</c><00:26:47.770><c> view</c><00:26:48.190><c> for</c><00:26:48.700><c> people</c>

00:26:49.919 --> 00:26:49.929 align:start position:0%
an expert view for people
 

00:26:49.929 --> 00:26:52.440 align:start position:0%
an expert view for people
but<00:26:50.590><c> all</c><00:26:50.799><c> these</c><00:26:51.070><c> flags</c><00:26:51.309><c> basically</c><00:26:51.909><c> correspond</c>

00:26:52.440 --> 00:26:52.450 align:start position:0%
but all these flags basically correspond
 

00:26:52.450 --> 00:26:55.440 align:start position:0%
but all these flags basically correspond
all<00:26:52.659><c> of</c><00:26:52.749><c> these</c><00:26:53.009><c> uppercase</c><00:26:54.009><c> variables</c><00:26:54.610><c> on</c><00:26:54.850><c> the</c>

00:26:55.440 --> 00:26:55.450 align:start position:0%
all of these uppercase variables on the
 

00:26:55.450 --> 00:26:58.680 align:start position:0%
all of these uppercase variables on the
left<00:26:55.659><c> hand</c><00:26:55.840><c> side</c><00:26:56.190><c> correspond</c><00:26:57.190><c> to</c><00:26:57.690><c> variables</c>

00:26:58.680 --> 00:26:58.690 align:start position:0%
left hand side correspond to variables
 

00:26:58.690 --> 00:27:00.210 align:start position:0%
left hand side correspond to variables
that<00:26:58.809><c> get</c><00:26:58.960><c> passed</c><00:26:59.230><c> into</c><00:26:59.529><c> our</c><00:26:59.649><c> build</c><00:26:59.980><c> system</c>

00:27:00.210 --> 00:27:00.220 align:start position:0%
that get passed into our build system
 

00:27:00.220 --> 00:27:02.100 align:start position:0%
that get passed into our build system
and<00:27:00.580><c> expanded</c><00:27:01.179><c> some</c><00:27:01.659><c> of</c><00:27:01.779><c> the</c><00:27:01.840><c> stuff</c><00:27:02.080><c> that</c>

00:27:02.100 --> 00:27:02.110 align:start position:0%
and expanded some of the stuff that
 

00:27:02.110 --> 00:27:03.269 align:start position:0%
and expanded some of the stuff that
you're<00:27:02.320><c> going</c><00:27:02.470><c> to</c><00:27:02.499><c> be</c><00:27:02.649><c> interested</c><00:27:03.070><c> in</c><00:27:03.129><c> looking</c>

00:27:03.269 --> 00:27:03.279 align:start position:0%
you're going to be interested in looking
 

00:27:03.279 --> 00:27:07.560 align:start position:0%
you're going to be interested in looking
at<00:27:03.639><c> our</c><00:27:04.139><c> other</c><00:27:05.139><c> C</c><00:27:05.559><c> flags</c><00:27:05.889><c> and</c><00:27:06.190><c> other</c><00:27:06.759><c> LD</c><00:27:07.210><c> flags</c>

00:27:07.560 --> 00:27:07.570 align:start position:0%
at our other C flags and other LD flags
 

00:27:07.570 --> 00:27:11.789 align:start position:0%
at our other C flags and other LD flags
and<00:27:07.929><c> then</c><00:27:08.649><c> optimization</c><00:27:09.490><c> C</c><00:27:09.730><c> Flags</c><00:27:10.679><c> what</c><00:27:11.679><c> you</c>

00:27:11.789 --> 00:27:11.799 align:start position:0%
and then optimization C Flags what you
 

00:27:11.799 --> 00:27:14.460 align:start position:0%
and then optimization C Flags what you
can<00:27:11.950><c> do</c><00:27:12.129><c> there</c><00:27:12.369><c> is</c><00:27:12.610><c> basically</c><00:27:13.269><c> set</c><00:27:13.690><c> here</c>

00:27:14.460 --> 00:27:14.470 align:start position:0%
can do there is basically set here
 

00:27:14.470 --> 00:27:16.230 align:start position:0%
can do there is basically set here
dabangg<00:27:14.799><c> is</c><00:27:14.980><c> setting</c><00:27:15.249><c> the</c><00:27:15.340><c> dash</c><00:27:15.519><c> F</c><00:27:15.759><c> altivec</c>

00:27:16.230 --> 00:27:16.240 align:start position:0%
dabangg is setting the dash F altivec
 

00:27:16.240 --> 00:27:17.940 align:start position:0%
dabangg is setting the dash F altivec
flag<00:27:16.539><c> for</c><00:27:16.749><c> those</c><00:27:16.869><c> of</c><00:27:17.019><c> you</c><00:27:17.110><c> that</c><00:27:17.230><c> can</c><00:27:17.379><c> can</c><00:27:17.769><c> see</c>

00:27:17.940 --> 00:27:17.950 align:start position:0%
flag for those of you that can can see
 

00:27:17.950 --> 00:27:21.149 align:start position:0%
flag for those of you that can can see
the<00:27:18.100><c> font</c><00:27:19.200><c> the</c><00:27:20.200><c> other</c><00:27:20.320><c> thing</c><00:27:20.590><c> that's</c><00:27:20.769><c> nice</c><00:27:20.919><c> if</c>

00:27:21.149 --> 00:27:21.159 align:start position:0%
the font the other thing that's nice if
 

00:27:21.159 --> 00:27:22.590 align:start position:0%
the font the other thing that's nice if
you<00:27:21.249><c> really</c><00:27:21.549><c> if</c><00:27:21.730><c> you're</c><00:27:21.970><c> really</c><00:27:22.179><c> a</c><00:27:22.299><c> gearhead</c>

00:27:22.590 --> 00:27:22.600 align:start position:0%
you really if you're really a gearhead
 

00:27:22.600 --> 00:27:26.190 align:start position:0%
you really if you're really a gearhead
is<00:27:22.899><c> you</c><00:27:23.019><c> can</c><00:27:23.169><c> pass</c><00:27:23.440><c> in</c><00:27:24.179><c> flags</c><00:27:25.179><c> that</c><00:27:25.539><c> turn</c><00:27:25.990><c> on</c>

00:27:26.190 --> 00:27:26.200 align:start position:0%
is you can pass in flags that turn on
 

00:27:26.200 --> 00:27:27.720 align:start position:0%
is you can pass in flags that turn on
and<00:27:26.409><c> off</c><00:27:26.470><c> any</c><00:27:26.769><c> of</c><00:27:26.919><c> the</c><00:27:27.039><c> individual</c>

00:27:27.720 --> 00:27:27.730 align:start position:0%
and off any of the individual
 

00:27:27.730 --> 00:27:30.509 align:start position:0%
and off any of the individual
optimization<00:27:28.570><c> passes</c><00:27:29.080><c> that</c><00:27:29.200><c> GCC</c><00:27:29.559><c> does</c><00:27:30.249><c> so</c><00:27:30.460><c> if</c>

00:27:30.509 --> 00:27:30.519 align:start position:0%
optimization passes that GCC does so if
 

00:27:30.519 --> 00:27:32.070 align:start position:0%
optimization passes that GCC does so if
you<00:27:30.610><c> want</c><00:27:30.759><c> to</c><00:27:30.820><c> turn</c><00:27:30.999><c> on</c><00:27:31.179><c> loop</c><00:27:31.419><c> unrolling</c><00:27:31.629><c> but</c>

00:27:32.070 --> 00:27:32.080 align:start position:0%
you want to turn on loop unrolling but
 

00:27:32.080 --> 00:27:32.909 align:start position:0%
you want to turn on loop unrolling but
you<00:27:32.169><c> don't</c><00:27:32.350><c> want</c><00:27:32.470><c> to</c><00:27:32.529><c> have</c><00:27:32.649><c> strength</c>

00:27:32.909 --> 00:27:32.919 align:start position:0%
you don't want to have strength
 

00:27:32.919 --> 00:27:35.279 align:start position:0%
you don't want to have strength
reduction<00:27:33.429><c> for</c><00:27:33.580><c> example</c><00:27:33.999><c> you</c><00:27:34.480><c> can</c><00:27:34.690><c> pass</c><00:27:35.049><c> in</c>

00:27:35.279 --> 00:27:35.289 align:start position:0%
reduction for example you can pass in
 

00:27:35.289 --> 00:27:38.340 align:start position:0%
reduction for example you can pass in
the<00:27:35.379><c> individual</c><00:27:35.919><c> flags</c><00:27:36.840><c> inside</c><00:27:37.840><c> of</c><00:27:37.960><c> these</c><00:27:38.080><c> C</c>

00:27:38.340 --> 00:27:38.350 align:start position:0%
the individual flags inside of these C
 

00:27:38.350 --> 00:27:40.499 align:start position:0%
the individual flags inside of these C
flags<00:27:38.970><c> for</c><00:27:39.970><c> those</c><00:27:40.119><c> of</c><00:27:40.240><c> you</c><00:27:40.360><c> that</c><00:27:40.419><c> are</c>

00:27:40.499 --> 00:27:40.509 align:start position:0%
flags for those of you that are
 

00:27:40.509 --> 00:27:41.609 align:start position:0%
flags for those of you that are
wondering<00:27:40.629><c> where</c><00:27:40.990><c> are</c><00:27:41.110><c> all</c><00:27:41.230><c> these</c><00:27:41.409><c> things</c>

00:27:41.609 --> 00:27:41.619 align:start position:0%
wondering where are all these things
 

00:27:41.619 --> 00:27:44.039 align:start position:0%
wondering where are all these things
documented<00:27:42.249><c> in</c><00:27:42.730><c> the</c><00:27:42.909><c> in</c><00:27:43.179><c> the</c><00:27:43.330><c> project</c><00:27:43.809><c> builder</c>

00:27:44.039 --> 00:27:44.049 align:start position:0%
documented in the in the project builder
 

00:27:44.049 --> 00:27:46.289 align:start position:0%
documented in the in the project builder
release<00:27:44.350><c> notes</c><00:27:44.619><c> there's</c><00:27:45.070><c> a</c><00:27:45.129><c> build</c><00:27:45.490><c> a</c><00:27:45.879><c> CH</c><00:27:45.909><c> tml</c>

00:27:46.289 --> 00:27:46.299 align:start position:0%
release notes there's a build a CH tml
 

00:27:46.299 --> 00:27:48.629 align:start position:0%
release notes there's a build a CH tml
file<00:27:46.570><c> and</c><00:27:46.840><c> if</c><00:27:46.899><c> you</c><00:27:46.990><c> go</c><00:27:47.110><c> and</c><00:27:47.259><c> look</c><00:27:47.379><c> at</c><00:27:47.499><c> that</c><00:27:47.639><c> the</c>

00:27:48.629 --> 00:27:48.639 align:start position:0%
file and if you go and look at that the
 

00:27:48.639 --> 00:27:50.639 align:start position:0%
file and if you go and look at that the
settings<00:27:49.029><c> that</c><00:27:49.119><c> are</c><00:27:49.330><c> listed</c><00:27:49.539><c> here</c><00:27:49.749><c> are</c><00:27:50.440><c> all</c>

00:27:50.639 --> 00:27:50.649 align:start position:0%
settings that are listed here are all
 

00:27:50.649 --> 00:27:52.350 align:start position:0%
settings that are listed here are all
documented<00:27:51.340><c> so</c><00:27:51.519><c> you</c><00:27:51.580><c> know</c><00:27:51.850><c> what's</c><00:27:52.149><c> going</c><00:27:52.330><c> to</c>

00:27:52.350 --> 00:27:52.360 align:start position:0%
documented so you know what's going to
 

00:27:52.360 --> 00:27:52.799 align:start position:0%
documented so you know what's going to
happen

00:27:52.799 --> 00:27:52.809 align:start position:0%
happen
 

00:27:52.809 --> 00:27:55.259 align:start position:0%
happen
when<00:27:53.529><c> you</c><00:27:53.619><c> set</c><00:27:53.889><c> some</c><00:27:54.610><c> of</c><00:27:54.700><c> these</c><00:27:54.820><c> different</c>

00:27:55.259 --> 00:27:55.269 align:start position:0%
when you set some of these different
 

00:27:55.269 --> 00:27:58.259 align:start position:0%
when you set some of these different
some<00:27:55.779><c> of</c><00:27:55.869><c> these</c><00:27:55.929><c> different</c><00:27:56.230><c> settings</c><00:27:57.269><c> again</c>

00:27:58.259 --> 00:27:58.269 align:start position:0%
some of these different settings again
 

00:27:58.269 --> 00:28:01.350 align:start position:0%
some of these different settings again
this<00:27:58.629><c> is</c><00:27:58.779><c> just</c><00:27:59.080><c> basically</c><00:27:59.799><c> an</c><00:27:59.980><c> expert</c><00:28:00.490><c> view</c>

00:28:01.350 --> 00:28:01.360 align:start position:0%
this is just basically an expert view
 

00:28:01.360 --> 00:28:03.899 align:start position:0%
this is just basically an expert view
but<00:28:01.899><c> if</c><00:28:02.049><c> there</c><00:28:02.769><c> are</c><00:28:02.799><c> flags</c><00:28:03.249><c> that</c><00:28:03.490><c> you</c><00:28:03.549><c> want</c><00:28:03.820><c> to</c>

00:28:03.899 --> 00:28:03.909 align:start position:0%
but if there are flags that you want to
 

00:28:03.909 --> 00:28:05.159 align:start position:0%
but if there are flags that you want to
get<00:28:04.059><c> at</c><00:28:04.210><c> that</c><00:28:04.240><c> aren't</c><00:28:04.600><c> represented</c><00:28:05.019><c> in</c><00:28:05.110><c> the</c>

00:28:05.159 --> 00:28:05.169 align:start position:0%
get at that aren't represented in the
 

00:28:05.169 --> 00:28:07.169 align:start position:0%
get at that aren't represented in the
GUI<00:28:05.350><c> this</c><00:28:05.590><c> is</c><00:28:05.710><c> where</c><00:28:05.889><c> you</c><00:28:05.980><c> go</c><00:28:06.159><c> and</c><00:28:06.369><c> you</c><00:28:06.999><c> should</c>

00:28:07.169 --> 00:28:07.179 align:start position:0%
GUI this is where you go and you should
 

00:28:07.179 --> 00:28:09.810 align:start position:0%
GUI this is where you go and you should
be<00:28:07.330><c> able</c><00:28:07.419><c> to</c><00:28:07.600><c> basically</c><00:28:08.379><c> you</c><00:28:09.369><c> know</c><00:28:09.399><c> for</c><00:28:09.669><c> people</c>

00:28:09.810 --> 00:28:09.820 align:start position:0%
be able to basically you know for people
 

00:28:09.820 --> 00:28:11.249 align:start position:0%
be able to basically you know for people
who<00:28:09.970><c> are</c><00:28:10.119><c> used</c><00:28:10.330><c> to</c><00:28:10.389><c> using</c><00:28:10.570><c> GCC</c><00:28:10.929><c> from</c><00:28:11.169><c> the</c>

00:28:11.249 --> 00:28:11.259 align:start position:0%
who are used to using GCC from the
 

00:28:11.259 --> 00:28:12.450 align:start position:0%
who are used to using GCC from the
command-line<00:28:11.590><c> this</c><00:28:11.830><c> gives</c><00:28:11.980><c> you</c><00:28:12.070><c> access</c><00:28:12.249><c> to</c>

00:28:12.450 --> 00:28:12.460 align:start position:0%
command-line this gives you access to
 

00:28:12.460 --> 00:28:17.009 align:start position:0%
command-line this gives you access to
all<00:28:12.580><c> the</c><00:28:12.730><c> flags</c><00:28:13.090><c> that</c><00:28:13.299><c> you</c><00:28:13.749><c> want</c><00:28:13.929><c> to</c><00:28:14.019><c> use</c><00:28:16.019><c> so</c>

00:28:17.009 --> 00:28:17.019 align:start position:0%
all the flags that you want to use so
 

00:28:17.019 --> 00:28:27.989 align:start position:0%
all the flags that you want to use so
thanks<00:28:17.440><c> to</c><00:28:17.470><c> me</c><00:28:26.460><c> so</c><00:28:27.460><c> I</c><00:28:27.490><c> want</c><00:28:27.610><c> to</c><00:28:27.669><c> say</c><00:28:27.759><c> a</c><00:28:27.789><c> couple</c>

00:28:27.989 --> 00:28:27.999 align:start position:0%
thanks to me so I want to say a couple
 

00:28:27.999 --> 00:28:32.249 align:start position:0%
thanks to me so I want to say a couple
things<00:28:28.179><c> on</c><00:28:28.919><c> dynamic</c><00:28:29.919><c> linking</c><00:28:31.019><c> this</c><00:28:32.019><c> is</c>

00:28:32.249 --> 00:28:32.259 align:start position:0%
things on dynamic linking this is
 

00:28:32.259 --> 00:28:33.720 align:start position:0%
things on dynamic linking this is
something<00:28:32.799><c> that</c><00:28:32.830><c> happens</c><00:28:33.159><c> outside</c><00:28:33.519><c> of</c><00:28:33.639><c> the</c>

00:28:33.720 --> 00:28:33.730 align:start position:0%
something that happens outside of the
 

00:28:33.730 --> 00:28:35.909 align:start position:0%
something that happens outside of the
compiler<00:28:34.059><c> this</c><00:28:34.299><c> happens</c><00:28:34.749><c> with</c><00:28:35.259><c> our</c><00:28:35.499><c> dynamic</c>

00:28:35.909 --> 00:28:35.919 align:start position:0%
compiler this happens with our dynamic
 

00:28:35.919 --> 00:28:40.080 align:start position:0%
compiler this happens with our dynamic
linking<00:28:36.809><c> process</c><00:28:37.809><c> called</c><00:28:38.019><c> D</c><00:28:38.169><c> yld</c><00:28:38.679><c> and</c><00:28:39.279><c> this</c><00:28:39.940><c> is</c>

00:28:40.080 --> 00:28:40.090 align:start position:0%
linking process called D yld and this is
 

00:28:40.090 --> 00:28:44.310 align:start position:0%
linking process called D yld and this is
how<00:28:40.240><c> your</c><00:28:40.480><c> app</c><00:28:40.600><c> starts</c><00:28:41.080><c> up</c><00:28:42.090><c> basically</c><00:28:43.320><c> when</c>

00:28:44.310 --> 00:28:44.320 align:start position:0%
how your app starts up basically when
 

00:28:44.320 --> 00:28:46.830 align:start position:0%
how your app starts up basically when
your<00:28:44.440><c> app</c><00:28:44.559><c> is</c><00:28:44.710><c> compiled</c><00:28:45.129><c> the</c><00:28:45.909><c> references</c><00:28:46.450><c> are</c>

00:28:46.830 --> 00:28:46.840 align:start position:0%
your app is compiled the references are
 

00:28:46.840 --> 00:28:49.980 align:start position:0%
your app is compiled the references are
not<00:28:47.169><c> resolved</c><00:28:48.029><c> and</c><00:28:49.029><c> this</c><00:28:49.389><c> is</c><00:28:49.509><c> how</c><00:28:49.690><c> we</c><00:28:49.749><c> actually</c>

00:28:49.980 --> 00:28:49.990 align:start position:0%
not resolved and this is how we actually
 

00:28:49.990 --> 00:28:53.070 align:start position:0%
not resolved and this is how we actually
use<00:28:50.399><c> shared</c><00:28:51.399><c> libraries</c><00:28:51.970><c> basically</c><00:28:52.899><c> if</c><00:28:52.990><c> you</c>

00:28:53.070 --> 00:28:53.080 align:start position:0%
use shared libraries basically if you
 

00:28:53.080 --> 00:28:54.359 align:start position:0%
use shared libraries basically if you
compile<00:28:53.440><c> your</c><00:28:53.619><c> app</c><00:28:53.769><c> that</c><00:28:54.009><c> has</c><00:28:54.129><c> dynamic</c>

00:28:54.359 --> 00:28:54.369 align:start position:0%
compile your app that has dynamic
 

00:28:54.369 --> 00:28:56.279 align:start position:0%
compile your app that has dynamic
references<00:28:55.029><c> into</c><00:28:55.240><c> shared</c><00:28:55.450><c> libraries</c><00:28:55.899><c> when</c>

00:28:56.279 --> 00:28:56.289 align:start position:0%
references into shared libraries when
 

00:28:56.289 --> 00:28:59.279 align:start position:0%
references into shared libraries when
your<00:28:56.440><c> app</c><00:28:56.529><c> starts</c><00:28:56.919><c> up</c><00:28:57.299><c> what</c><00:28:58.299><c> happens</c><00:28:58.659><c> is</c><00:28:58.809><c> we</c>

00:28:59.279 --> 00:28:59.289 align:start position:0%
your app starts up what happens is we
 

00:28:59.289 --> 00:29:01.200 align:start position:0%
your app starts up what happens is we
first<00:28:59.559><c> bind</c><00:28:59.950><c> the</c><00:29:00.039><c> references</c><00:29:00.580><c> to</c><00:29:00.730><c> functions</c>

00:29:01.200 --> 00:29:01.210 align:start position:0%
first bind the references to functions
 

00:29:01.210 --> 00:29:03.090 align:start position:0%
first bind the references to functions
and<00:29:01.419><c> data</c><00:29:02.230><c> at</c>

00:29:03.090 --> 00:29:03.100 align:start position:0%
and data at
 

00:29:03.100 --> 00:29:07.080 align:start position:0%
and data at
startup<00:29:03.429><c> time</c><00:29:05.130><c> the</c><00:29:06.130><c> function</c><00:29:06.400><c> references</c>

00:29:07.080 --> 00:29:07.090 align:start position:0%
startup time the function references
 

00:29:07.090 --> 00:29:10.799 align:start position:0%
startup time the function references
allow<00:29:07.480><c> us</c><00:29:07.660><c> to</c><00:29:07.780><c> do</c><00:29:07.900><c> lazy</c><00:29:08.140><c> initialization</c><00:29:08.760><c> so</c><00:29:09.809><c> in</c>

00:29:10.799 --> 00:29:10.809 align:start position:0%
allow us to do lazy initialization so in
 

00:29:10.809 --> 00:29:14.370 align:start position:0%
allow us to do lazy initialization so in
the<00:29:11.049><c> basic</c><00:29:11.500><c> case</c><00:29:12.750><c> when</c><00:29:13.750><c> you</c><00:29:13.870><c> start</c><00:29:14.169><c> up</c><00:29:14.260><c> your</c>

00:29:14.370 --> 00:29:14.380 align:start position:0%
the basic case when you start up your
 

00:29:14.380 --> 00:29:16.529 align:start position:0%
the basic case when you start up your
application<00:29:14.580><c> the</c><00:29:15.580><c> function</c><00:29:15.940><c> references</c><00:29:16.360><c> are</c>

00:29:16.529 --> 00:29:16.539 align:start position:0%
application the function references are
 

00:29:16.539 --> 00:29:18.000 align:start position:0%
application the function references are
not<00:29:16.660><c> resolved</c><00:29:17.140><c> until</c><00:29:17.260><c> you</c><00:29:17.440><c> actually</c><00:29:17.590><c> call</c>

00:29:18.000 --> 00:29:18.010 align:start position:0%
not resolved until you actually call
 

00:29:18.010 --> 00:29:20.730 align:start position:0%
not resolved until you actually call
through<00:29:18.340><c> to</c><00:29:18.370><c> those</c><00:29:18.610><c> functions</c><00:29:19.410><c> the</c><00:29:20.410><c> thing</c><00:29:20.620><c> to</c>

00:29:20.730 --> 00:29:20.740 align:start position:0%
through to those functions the thing to
 

00:29:20.740 --> 00:29:22.529 align:start position:0%
through to those functions the thing to
keep<00:29:20.860><c> in</c><00:29:20.980><c> mind</c><00:29:21.190><c> is</c><00:29:21.400><c> that</c><00:29:21.520><c> any</c><00:29:21.669><c> data</c><00:29:21.970><c> references</c>

00:29:22.529 --> 00:29:22.539 align:start position:0%
keep in mind is that any data references
 

00:29:22.539 --> 00:29:24.870 align:start position:0%
keep in mind is that any data references
if<00:29:22.660><c> you're</c><00:29:22.780><c> referencing</c><00:29:23.230><c> global</c><00:29:23.620><c> data</c><00:29:23.880><c> those</c>

00:29:24.870 --> 00:29:24.880 align:start position:0%
if you're referencing global data those
 

00:29:24.880 --> 00:29:26.760 align:start position:0%
if you're referencing global data those
references<00:29:25.360><c> have</c><00:29:25.720><c> to</c><00:29:25.960><c> be</c><00:29:26.080><c> resolved</c><00:29:26.650><c> at</c>

00:29:26.760 --> 00:29:26.770 align:start position:0%
references have to be resolved at
 

00:29:26.770 --> 00:29:29.039 align:start position:0%
references have to be resolved at
startup<00:29:27.640><c> time</c><00:29:27.850><c> before</c><00:29:28.210><c> you</c><00:29:28.330><c> hit</c><00:29:28.450><c> main</c><00:29:28.720><c> because</c>

00:29:29.039 --> 00:29:29.049 align:start position:0%
startup time before you hit main because
 

00:29:29.049 --> 00:29:31.350 align:start position:0%
startup time before you hit main because
we<00:29:29.200><c> have</c><00:29:29.350><c> no</c><00:29:29.559><c> way</c><00:29:29.740><c> to</c><00:29:29.770><c> trap</c><00:29:30.250><c> on</c><00:29:30.460><c> first</c><00:29:30.760><c> use</c><00:29:31.120><c> and</c>

00:29:31.350 --> 00:29:31.360 align:start position:0%
we have no way to trap on first use and
 

00:29:31.360 --> 00:29:33.690 align:start position:0%
we have no way to trap on first use and
go<00:29:32.049><c> and</c><00:29:32.200><c> run</c><00:29:32.380><c> any</c><00:29:32.590><c> initialization</c><00:29:33.039><c> routines</c>

00:29:33.690 --> 00:29:33.700 align:start position:0%
go and run any initialization routines
 

00:29:33.700 --> 00:29:34.650 align:start position:0%
go and run any initialization routines
that<00:29:33.789><c> have</c><00:29:33.910><c> to</c><00:29:34.179><c> happen</c>

00:29:34.650 --> 00:29:34.660 align:start position:0%
that have to happen
 

00:29:34.660 --> 00:29:37.409 align:start position:0%
that have to happen
so<00:29:35.080><c> if</c><00:29:35.169><c> you're</c><00:29:35.289><c> accessing</c><00:29:35.650><c> data</c><00:29:36.070><c> some</c><00:29:37.000><c> library</c>

00:29:37.409 --> 00:29:37.419 align:start position:0%
so if you're accessing data some library
 

00:29:37.419 --> 00:29:39.049 align:start position:0%
so if you're accessing data some library
and<00:29:37.510><c> it</c><00:29:37.570><c> routines</c><00:29:37.900><c> may</c><00:29:38.110><c> have</c><00:29:38.320><c> to</c><00:29:38.470><c> be</c><00:29:38.590><c> run</c>

00:29:39.049 --> 00:29:39.059 align:start position:0%
and it routines may have to be run
 

00:29:39.059 --> 00:29:44.250 align:start position:0%
and it routines may have to be run
before<00:29:40.620><c> main</c><00:29:41.620><c> actually</c><00:29:42.010><c> starts</c><00:29:42.340><c> up</c><00:29:43.169><c> so</c><00:29:44.169><c> the</c>

00:29:44.250 --> 00:29:44.260 align:start position:0%
before main actually starts up so the
 

00:29:44.260 --> 00:29:45.480 align:start position:0%
before main actually starts up so the
reason<00:29:44.500><c> we're</c><00:29:44.590><c> talking</c><00:29:44.620><c> about</c><00:29:45.100><c> this</c><00:29:45.280><c> is</c>

00:29:45.480 --> 00:29:45.490 align:start position:0%
reason we're talking about this is
 

00:29:45.490 --> 00:29:47.789 align:start position:0%
reason we're talking about this is
because<00:29:45.520><c> I</c><00:29:45.789><c> also</c><00:29:46.030><c> want</c><00:29:46.330><c> to</c><00:29:46.390><c> mention</c><00:29:47.020><c> this</c>

00:29:47.789 --> 00:29:47.799 align:start position:0%
because I also want to mention this
 

00:29:47.799 --> 00:29:50.580 align:start position:0%
because I also want to mention this
thing<00:29:47.980><c> we</c><00:29:48.100><c> have</c><00:29:48.250><c> called</c><00:29:48.460><c> pre</c><00:29:48.700><c> binding</c><00:29:49.590><c> what</c>

00:29:50.580 --> 00:29:50.590 align:start position:0%
thing we have called pre binding what
 

00:29:50.590 --> 00:29:52.919 align:start position:0%
thing we have called pre binding what
pre<00:29:50.770><c> binding</c><00:29:51.130><c> does</c><00:29:51.280><c> is</c><00:29:51.580><c> it</c><00:29:51.760><c> actually</c><00:29:52.179><c> sets</c><00:29:52.539><c> the</c>

00:29:52.919 --> 00:29:52.929 align:start position:0%
pre binding does is it actually sets the
 

00:29:52.929 --> 00:29:55.049 align:start position:0%
pre binding does is it actually sets the
dynamic<00:29:53.380><c> link</c><00:29:53.559><c> addresses</c><00:29:54.130><c> at</c><00:29:54.280><c> static</c><00:29:54.820><c> link</c>

00:29:55.049 --> 00:29:55.059 align:start position:0%
dynamic link addresses at static link
 

00:29:55.059 --> 00:29:57.270 align:start position:0%
dynamic link addresses at static link
time<00:29:55.299><c> so</c><00:29:55.870><c> if</c><00:29:56.110><c> you're</c><00:29:56.289><c> running</c><00:29:56.500><c> against</c><00:29:57.010><c> a</c>

00:29:57.270 --> 00:29:57.280 align:start position:0%
time so if you're running against a
 

00:29:57.280 --> 00:29:59.850 align:start position:0%
time so if you're running against a
shared<00:29:57.850><c> library</c><00:29:58.230><c> the</c><00:29:59.230><c> linker</c><00:29:59.470><c> will</c><00:29:59.590><c> actually</c>

00:29:59.850 --> 00:29:59.860 align:start position:0%
shared library the linker will actually
 

00:29:59.860 --> 00:30:01.950 align:start position:0%
shared library the linker will actually
go<00:29:59.980><c> out</c><00:30:00.159><c> and</c><00:30:00.190><c> grab</c><00:30:00.520><c> those</c><00:30:00.760><c> addresses</c><00:30:01.179><c> and</c><00:30:01.690><c> set</c>

00:30:01.950 --> 00:30:01.960 align:start position:0%
go out and grab those addresses and set
 

00:30:01.960 --> 00:30:04.560 align:start position:0%
go out and grab those addresses and set
them<00:30:02.140><c> up</c><00:30:02.260><c> at</c><00:30:02.380><c> static</c><00:30:02.770><c> link</c><00:30:02.980><c> time</c><00:30:03.360><c> this</c><00:30:04.360><c> can</c>

00:30:04.560 --> 00:30:04.570 align:start position:0%
them up at static link time this can
 

00:30:04.570 --> 00:30:05.970 align:start position:0%
them up at static link time this can
give<00:30:04.750><c> you</c><00:30:04.900><c> a</c><00:30:04.960><c> dramatic</c><00:30:05.440><c> improvement</c><00:30:05.919><c> in</c>

00:30:05.970 --> 00:30:05.980 align:start position:0%
give you a dramatic improvement in
 

00:30:05.980 --> 00:30:07.710 align:start position:0%
give you a dramatic improvement in
launch<00:30:06.220><c> times</c><00:30:06.580><c> because</c><00:30:07.120><c> you're</c><00:30:07.360><c> not</c><00:30:07.480><c> having</c>

00:30:07.710 --> 00:30:07.720 align:start position:0%
launch times because you're not having
 

00:30:07.720 --> 00:30:09.240 align:start position:0%
launch times because you're not having
to<00:30:07.929><c> search</c><00:30:08.140><c> through</c><00:30:08.350><c> the</c><00:30:08.409><c> symbol</c><00:30:08.770><c> tables</c><00:30:09.130><c> of</c>

00:30:09.240 --> 00:30:09.250 align:start position:0%
to search through the symbol tables of
 

00:30:09.250 --> 00:30:11.669 align:start position:0%
to search through the symbol tables of
the<00:30:09.340><c> libraries</c><00:30:09.820><c> at</c><00:30:10.030><c> all</c><00:30:10.350><c> and</c><00:30:11.350><c> most</c>

00:30:11.669 --> 00:30:11.679 align:start position:0%
the libraries at all and most
 

00:30:11.679 --> 00:30:13.500 align:start position:0%
the libraries at all and most
importantly<00:30:12.250><c> again</c><00:30:12.850><c> getting</c><00:30:13.150><c> back</c><00:30:13.299><c> to</c><00:30:13.419><c> the</c>

00:30:13.500 --> 00:30:13.510 align:start position:0%
importantly again getting back to the
 

00:30:13.510 --> 00:30:15.240 align:start position:0%
importantly again getting back to the
memory<00:30:13.780><c> theme</c><00:30:14.020><c> you're</c><00:30:14.409><c> not</c><00:30:14.559><c> having</c><00:30:14.919><c> to</c><00:30:14.980><c> page</c>

00:30:15.240 --> 00:30:15.250 align:start position:0%
memory theme you're not having to page
 

00:30:15.250 --> 00:30:18.950 align:start position:0%
memory theme you're not having to page
in<00:30:15.490><c> those</c><00:30:15.640><c> symbol</c><00:30:16.000><c> tables</c><00:30:16.360><c> to</c><00:30:16.510><c> do</c><00:30:16.690><c> the</c><00:30:16.840><c> search</c>

00:30:18.950 --> 00:30:18.960 align:start position:0%
in those symbol tables to do the search
 

00:30:18.960 --> 00:30:21.539 align:start position:0%
in those symbol tables to do the search
the<00:30:19.960><c> trade-off</c><00:30:20.409><c> is</c><00:30:20.440><c> this</c><00:30:20.830><c> gives</c><00:30:21.010><c> you</c><00:30:21.130><c> no</c><00:30:21.309><c> lazy</c>

00:30:21.539 --> 00:30:21.549 align:start position:0%
the trade-off is this gives you no lazy
 

00:30:21.549 --> 00:30:23.909 align:start position:0%
the trade-off is this gives you no lazy
initialization<00:30:21.900><c> all</c><00:30:22.900><c> this</c><00:30:23.289><c> stuff</c><00:30:23.500><c> has</c><00:30:23.710><c> to</c><00:30:23.890><c> be</c>

00:30:23.909 --> 00:30:23.919 align:start position:0%
initialization all this stuff has to be
 

00:30:23.919 --> 00:30:28.110 align:start position:0%
initialization all this stuff has to be
set<00:30:24.280><c> up</c><00:30:24.309><c> at</c><00:30:25.320><c> compile</c><00:30:26.320><c> time</c><00:30:26.640><c> so</c><00:30:27.640><c> we're</c><00:30:28.090><c> just</c>

00:30:28.110 --> 00:30:28.120 align:start position:0%
set up at compile time so we're just
 

00:30:28.120 --> 00:30:29.760 align:start position:0%
set up at compile time so we're just
going<00:30:28.419><c> out</c><00:30:28.690><c> through</c><00:30:28.929><c> addresses</c><00:30:29.470><c> at</c><00:30:29.620><c> that</c>

00:30:29.760 --> 00:30:29.770 align:start position:0%
going out through addresses at that
 

00:30:29.770 --> 00:30:32.100 align:start position:0%
going out through addresses at that
point<00:30:30.070><c> so</c><00:30:30.250><c> we</c><00:30:30.280><c> can't</c><00:30:30.610><c> trap</c><00:30:30.880><c> on</c><00:30:31.059><c> first</c><00:30:31.330><c> use</c><00:30:31.600><c> so</c>

00:30:32.100 --> 00:30:32.110 align:start position:0%
point so we can't trap on first use so
 

00:30:32.110 --> 00:30:33.419 align:start position:0%
point so we can't trap on first use so
we<00:30:32.260><c> have</c><00:30:32.409><c> to</c><00:30:32.559><c> actually</c><00:30:32.830><c> initialize</c><00:30:33.280><c> the</c>

00:30:33.419 --> 00:30:33.429 align:start position:0%
we have to actually initialize the
 

00:30:33.429 --> 00:30:37.710 align:start position:0%
we have to actually initialize the
libraries<00:30:33.909><c> and</c><00:30:34.030><c> the</c><00:30:34.090><c> modules</c><00:30:34.570><c> before</c><00:30:36.720><c> before</c>

00:30:37.710 --> 00:30:37.720 align:start position:0%
libraries and the modules before before
 

00:30:37.720 --> 00:30:42.419 align:start position:0%
libraries and the modules before before
the<00:30:37.900><c> app</c><00:30:38.200><c> actually</c><00:30:38.500><c> hits</c><00:30:38.830><c> main</c><00:30:40.650><c> in</c><00:30:41.650><c> in</c><00:30:41.950><c> a</c><00:30:42.190><c> lot</c>

00:30:42.419 --> 00:30:42.429 align:start position:0%
the app actually hits main in in a lot
 

00:30:42.429 --> 00:30:44.490 align:start position:0%
the app actually hits main in in a lot
of<00:30:42.549><c> cases</c><00:30:42.760><c> this</c><00:30:43.179><c> doesn't</c><00:30:43.780><c> give</c><00:30:43.900><c> your</c><00:30:44.020><c> dramatic</c>

00:30:44.490 --> 00:30:44.500 align:start position:0%
of cases this doesn't give your dramatic
 

00:30:44.500 --> 00:30:46.230 align:start position:0%
of cases this doesn't give your dramatic
slowdown<00:30:44.740><c> it's</c><00:30:45.070><c> still</c><00:30:45.250><c> a</c><00:30:45.280><c> big</c><00:30:45.520><c> win</c><00:30:45.730><c> to</c><00:30:45.880><c> do</c><00:30:46.000><c> pre</c>

00:30:46.230 --> 00:30:46.240 align:start position:0%
slowdown it's still a big win to do pre
 

00:30:46.240 --> 00:30:48.360 align:start position:0%
slowdown it's still a big win to do pre
binding<00:30:46.630><c> but</c><00:30:47.559><c> that's</c><00:30:47.770><c> definitely</c><00:30:48.130><c> something</c>

00:30:48.360 --> 00:30:48.370 align:start position:0%
binding but that's definitely something
 

00:30:48.370 --> 00:30:53.010 align:start position:0%
binding but that's definitely something
that<00:30:48.720><c> is</c><00:30:49.720><c> a</c><00:30:49.780><c> trade</c><00:30:50.140><c> off</c><00:30:51.870><c> applications</c><00:30:52.870><c> are</c>

00:30:53.010 --> 00:30:53.020 align:start position:0%
that is a trade off applications are
 

00:30:53.020 --> 00:30:55.860 align:start position:0%
that is a trade off applications are
built<00:30:53.230><c> by</c><00:30:53.740><c> default</c><00:30:54.159><c> pre</c><00:30:54.549><c> bound</c><00:30:54.760><c> in</c><00:30:55.000><c> project</c>

00:30:55.860 --> 00:30:55.870 align:start position:0%
built by default pre bound in project
 

00:30:55.870 --> 00:30:58.289 align:start position:0%
built by default pre bound in project
builder<00:30:56.490><c> so</c><00:30:57.490><c> this</c><00:30:57.669><c> will</c><00:30:57.850><c> give</c><00:30:58.000><c> you</c><00:30:58.120><c> pre</c>

00:30:58.289 --> 00:30:58.299 align:start position:0%
builder so this will give you pre
 

00:30:58.299 --> 00:30:59.399 align:start position:0%
builder so this will give you pre
binding<00:30:58.539><c> if</c><00:30:58.600><c> you're</c><00:30:58.690><c> building</c><00:30:58.809><c> application</c>

00:30:59.399 --> 00:30:59.409 align:start position:0%
binding if you're building application
 

00:30:59.409 --> 00:31:00.750 align:start position:0%
binding if you're building application
that<00:30:59.500><c> links</c><00:30:59.710><c> against</c><00:30:59.919><c> the</c><00:31:00.039><c> system</c><00:31:00.340><c> libraries</c>

00:31:00.750 --> 00:31:00.760 align:start position:0%
that links against the system libraries
 

00:31:00.760 --> 00:31:01.649 align:start position:0%
that links against the system libraries
this<00:31:00.880><c> will</c><00:31:01.030><c> give</c><00:31:01.179><c> you</c><00:31:01.270><c> a</c><00:31:01.330><c> pre-bout</c>

00:31:01.649 --> 00:31:01.659 align:start position:0%
this will give you a pre-bout
 

00:31:01.659 --> 00:31:05.700 align:start position:0%
this will give you a pre-bout
application<00:31:03.960><c> but</c><00:31:04.960><c> the</c><00:31:05.049><c> big</c><00:31:05.200><c> thing</c><00:31:05.230><c> to</c><00:31:05.440><c> keep</c><00:31:05.500><c> in</c>

00:31:05.700 --> 00:31:05.710 align:start position:0%
application but the big thing to keep in
 

00:31:05.710 --> 00:31:07.680 align:start position:0%
application but the big thing to keep in
mind<00:31:05.950><c> is</c><00:31:06.220><c> that</c><00:31:06.280><c> binaries</c><00:31:07.150><c> which</c><00:31:07.270><c> are</c><00:31:07.450><c> pre</c>

00:31:07.680 --> 00:31:07.690 align:start position:0%
mind is that binaries which are pre
 

00:31:07.690 --> 00:31:10.529 align:start position:0%
mind is that binaries which are pre
bound<00:31:07.929><c> have</c><00:31:08.890><c> to</c><00:31:09.070><c> be</c><00:31:09.190><c> updated</c><00:31:09.880><c> when</c><00:31:10.390><c> the</c>

00:31:10.529 --> 00:31:10.539 align:start position:0%
bound have to be updated when the
 

00:31:10.539 --> 00:31:15.060 align:start position:0%
bound have to be updated when the
libraries<00:31:10.990><c> change</c><00:31:12.210><c> so</c><00:31:13.559><c> for</c><00:31:14.559><c> those</c><00:31:14.710><c> of</c><00:31:14.770><c> you</c>

00:31:15.060 --> 00:31:15.070 align:start position:0%
libraries change so for those of you
 

00:31:15.070 --> 00:31:16.260 align:start position:0%
libraries change so for those of you
that<00:31:15.190><c> have</c><00:31:15.340><c> been</c><00:31:15.490><c> poking</c><00:31:15.820><c> around</c><00:31:15.880><c> the</c><00:31:16.090><c> web</c><00:31:16.240><c> and</c>

00:31:16.260 --> 00:31:16.270 align:start position:0%
that have been poking around the web and
 

00:31:16.270 --> 00:31:16.870 align:start position:0%
that have been poking around the web and
seeing

00:31:16.870 --> 00:31:16.880 align:start position:0%
seeing
 

00:31:16.880 --> 00:31:19.300 align:start position:0%
seeing
this<00:31:17.030><c> thing</c><00:31:17.270><c> on</c><00:31:17.510><c> what</c><00:31:18.350><c> is</c><00:31:18.470><c> all</c><00:31:18.650><c> the</c><00:31:18.770><c> system</c>

00:31:19.300 --> 00:31:19.310 align:start position:0%
this thing on what is all the system
 

00:31:19.310 --> 00:31:21.490 align:start position:0%
this thing on what is all the system
optimization<00:31:20.060><c> that's</c><00:31:20.270><c> going</c><00:31:20.600><c> on</c><00:31:20.720><c> I</c><00:31:20.990><c> just</c>

00:31:21.490 --> 00:31:21.500 align:start position:0%
optimization that's going on I just
 

00:31:21.500 --> 00:31:23.200 align:start position:0%
optimization that's going on I just
downloaded<00:31:22.100><c> the</c><00:31:22.160><c> developer</c><00:31:22.550><c> package</c><00:31:22.730><c> and</c>

00:31:23.200 --> 00:31:23.210 align:start position:0%
downloaded the developer package and
 

00:31:23.210 --> 00:31:25.000 align:start position:0%
downloaded the developer package and
it's<00:31:23.330><c> optimizing</c><00:31:23.870><c> my</c><00:31:23.900><c> system</c><00:31:24.320><c> again</c><00:31:24.500><c> it's</c>

00:31:25.000 --> 00:31:25.010 align:start position:0%
it's optimizing my system again it's
 

00:31:25.010 --> 00:31:26.560 align:start position:0%
it's optimizing my system again it's
basically<00:31:25.160><c> happening</c><00:31:25.520><c> is</c><00:31:25.910><c> it's</c><00:31:26.360><c> going</c>

00:31:26.560 --> 00:31:26.570 align:start position:0%
basically happening is it's going
 

00:31:26.570 --> 00:31:29.080 align:start position:0%
basically happening is it's going
through<00:31:26.900><c> and</c><00:31:27.170><c> it's</c><00:31:27.640><c> reprimanding</c><00:31:28.640><c> those</c>

00:31:29.080 --> 00:31:29.090 align:start position:0%
through and it's reprimanding those
 

00:31:29.090 --> 00:31:31.600 align:start position:0%
through and it's reprimanding those
binaries<00:31:29.750><c> so</c><00:31:30.020><c> it</c><00:31:30.590><c> goes</c><00:31:30.740><c> through</c><00:31:31.040><c> it</c><00:31:31.160><c> looks</c><00:31:31.430><c> for</c>

00:31:31.600 --> 00:31:31.610 align:start position:0%
binaries so it goes through it looks for
 

00:31:31.610 --> 00:31:33.250 align:start position:0%
binaries so it goes through it looks for
binaries<00:31:32.060><c> on</c><00:31:32.180><c> the</c><00:31:32.300><c> system</c><00:31:32.660><c> and</c><00:31:32.810><c> it</c><00:31:33.110><c> basically</c>

00:31:33.250 --> 00:31:33.260 align:start position:0%
binaries on the system and it basically
 

00:31:33.260 --> 00:31:35.980 align:start position:0%
binaries on the system and it basically
fixes<00:31:33.950><c> up</c><00:31:34.100><c> the</c><00:31:34.220><c> addresses</c><00:31:34.850><c> to</c><00:31:35.390><c> the</c><00:31:35.510><c> libraries</c>

00:31:35.980 --> 00:31:35.990 align:start position:0%
fixes up the addresses to the libraries
 

00:31:35.990 --> 00:31:40.960 align:start position:0%
fixes up the addresses to the libraries
as<00:31:36.200><c> they've</c><00:31:36.530><c> been</c><00:31:36.680><c> updated</c><00:31:38.050><c> so</c><00:31:39.050><c> you</c><00:31:39.680><c> know</c><00:31:39.970><c> once</c>

00:31:40.960 --> 00:31:40.970 align:start position:0%
as they've been updated so you know once
 

00:31:40.970 --> 00:31:43.720 align:start position:0%
as they've been updated so you know once
that's<00:31:41.180><c> been</c><00:31:41.360><c> run</c><00:31:41.950><c> the</c><00:31:42.950><c> libraries</c><00:31:43.370><c> are</c><00:31:43.490><c> pre</c>

00:31:43.720 --> 00:31:43.730 align:start position:0%
that's been run the libraries are pre
 

00:31:43.730 --> 00:31:47.410 align:start position:0%
that's been run the libraries are pre
bound<00:31:43.990><c> the</c><00:31:44.990><c> Mac</c><00:31:45.620><c> OS</c><00:31:45.650><c> 10</c><00:31:45.890><c> GM</c><00:31:46.310><c> ship</c><00:31:46.700><c> free</c><00:31:46.970><c> bond</c><00:31:47.150><c> so</c>

00:31:47.410 --> 00:31:47.420 align:start position:0%
bound the Mac OS 10 GM ship free bond so
 

00:31:47.420 --> 00:31:49.870 align:start position:0%
bound the Mac OS 10 GM ship free bond so
running<00:31:47.780><c> that</c><00:31:47.960><c> on</c><00:31:48.140><c> a</c><00:31:48.170><c> stock</c><00:31:48.920><c> Mac</c><00:31:49.190><c> OS</c><00:31:49.430><c> 10</c><00:31:49.460><c> GM</c>

00:31:49.870 --> 00:31:49.880 align:start position:0%
running that on a stock Mac OS 10 GM
 

00:31:49.880 --> 00:31:52.110 align:start position:0%
running that on a stock Mac OS 10 GM
system<00:31:50.360><c> isn't</c><00:31:50.480><c> going</c><00:31:50.600><c> to</c><00:31:50.750><c> get</c><00:31:50.870><c> you</c><00:31:51.020><c> anything</c>

00:31:52.110 --> 00:31:52.120 align:start position:0%
system isn't going to get you anything
 

00:31:52.120 --> 00:31:54.910 align:start position:0%
system isn't going to get you anything
but<00:31:53.120><c> when</c><00:31:53.570><c> libraries</c><00:31:54.020><c> are</c><00:31:54.140><c> updated</c><00:31:54.650><c> going</c>

00:31:54.910 --> 00:31:54.920 align:start position:0%
but when libraries are updated going
 

00:31:54.920 --> 00:31:57.640 align:start position:0%
but when libraries are updated going
through<00:31:55.220><c> and</c><00:31:55.430><c> reap</c><00:31:55.910><c> rebinding</c><00:31:56.540><c> this</c><00:31:56.750><c> actually</c>

00:31:57.640 --> 00:31:57.650 align:start position:0%
through and reap rebinding this actually
 

00:31:57.650 --> 00:31:59.110 align:start position:0%
through and reap rebinding this actually
is<00:31:57.770><c> a</c><00:31:57.800><c> way</c><00:31:57.980><c> that</c><00:31:58.190><c> helps</c><00:31:58.430><c> us</c><00:31:58.550><c> fix</c><00:31:58.820><c> up</c><00:31:58.970><c> our</c>

00:31:59.110 --> 00:31:59.120 align:start position:0%
is a way that helps us fix up our
 

00:31:59.120 --> 00:32:01.330 align:start position:0%
is a way that helps us fix up our
binaries<00:31:59.720><c> so</c><00:31:59.930><c> that</c><00:32:00.140><c> they</c><00:32:00.290><c> run</c><00:32:00.500><c> as</c><00:32:00.710><c> fast</c><00:32:01.160><c> as</c>

00:32:01.330 --> 00:32:01.340 align:start position:0%
binaries so that they run as fast as
 

00:32:01.340 --> 00:32:06.610 align:start position:0%
binaries so that they run as fast as
possible<00:32:05.020><c> let's</c><00:32:06.020><c> talk</c><00:32:06.140><c> a</c><00:32:06.170><c> little</c><00:32:06.290><c> bit</c><00:32:06.590><c> about</c>

00:32:06.610 --> 00:32:06.620 align:start position:0%
possible let's talk a little bit about
 

00:32:06.620 --> 00:32:10.210 align:start position:0%
possible let's talk a little bit about
upcoming<00:32:07.460><c> features</c><00:32:07.820><c> in</c><00:32:08.600><c> the</c><00:32:09.470><c> compiler</c><00:32:09.950><c> and</c><00:32:10.100><c> in</c>

00:32:10.210 --> 00:32:10.220 align:start position:0%
upcoming features in the compiler and in
 

00:32:10.220 --> 00:32:13.210 align:start position:0%
upcoming features in the compiler and in
the<00:32:10.280><c> compiler</c><00:32:10.640><c> tool</c><00:32:10.820><c> chain</c><00:32:11.830><c> so</c><00:32:12.830><c> the</c><00:32:13.040><c> first</c>

00:32:13.210 --> 00:32:13.220 align:start position:0%
the compiler tool chain so the first
 

00:32:13.220 --> 00:32:14.950 align:start position:0%
the compiler tool chain so the first
thing<00:32:13.310><c> we're</c><00:32:13.400><c> going</c><00:32:13.490><c> to</c><00:32:13.550><c> talk</c><00:32:13.670><c> about</c><00:32:13.730><c> is</c><00:32:14.030><c> GCC</c><00:32:14.540><c> 3</c>

00:32:14.950 --> 00:32:14.960 align:start position:0%
thing we're going to talk about is GCC 3
 

00:32:14.960 --> 00:32:17.800 align:start position:0%
thing we're going to talk about is GCC 3
what's<00:32:15.860><c> coming</c><00:32:16.190><c> with</c><00:32:16.280><c> that</c><00:32:16.390><c> we'll</c><00:32:17.390><c> talk</c><00:32:17.570><c> about</c>

00:32:17.800 --> 00:32:17.810 align:start position:0%
what's coming with that we'll talk about
 

00:32:17.810 --> 00:32:19.540 align:start position:0%
what's coming with that we'll talk about
a<00:32:17.840><c> feature</c><00:32:18.110><c> in</c><00:32:18.350><c> the</c><00:32:18.440><c> linker</c><00:32:18.770><c> called</c><00:32:19.070><c> two-level</c>

00:32:19.540 --> 00:32:19.550 align:start position:0%
a feature in the linker called two-level
 

00:32:19.550 --> 00:32:21.580 align:start position:0%
a feature in the linker called two-level
namespace<00:32:20.060><c> which</c><00:32:20.450><c> most</c><00:32:21.050><c> of</c><00:32:21.200><c> you</c><00:32:21.320><c> who</c><00:32:21.470><c> have</c>

00:32:21.580 --> 00:32:21.590 align:start position:0%
namespace which most of you who have
 

00:32:21.590 --> 00:32:23.350 align:start position:0%
namespace which most of you who have
worked<00:32:21.800><c> in</c><00:32:21.920><c> the</c><00:32:22.040><c> CFM</c><00:32:22.520><c> world</c><00:32:22.760><c> are</c><00:32:22.910><c> already</c><00:32:23.150><c> used</c>

00:32:23.350 --> 00:32:23.360 align:start position:0%
worked in the CFM world are already used
 

00:32:23.360 --> 00:32:25.390 align:start position:0%
worked in the CFM world are already used
to<00:32:23.510><c> and</c><00:32:23.720><c> of</c><00:32:24.170><c> course</c><00:32:24.410><c> what</c><00:32:24.830><c> a</c><00:32:24.860><c> lot</c><00:32:25.040><c> of</c><00:32:25.070><c> you</c><00:32:25.310><c> are</c>

00:32:25.390 --> 00:32:25.400 align:start position:0%
to and of course what a lot of you are
 

00:32:25.400 --> 00:32:27.580 align:start position:0%
to and of course what a lot of you are
here<00:32:25.640><c> to</c><00:32:25.760><c> hear</c><00:32:25.910><c> about</c><00:32:26.030><c> is</c><00:32:26.270><c> Objective</c><00:32:26.720><c> C</c><00:32:26.750><c> plus</c>

00:32:27.580 --> 00:32:27.590 align:start position:0%
here to hear about is Objective C plus
 

00:32:27.590 --> 00:32:29.350 align:start position:0%
here to hear about is Objective C plus
plus<00:32:27.860><c> and</c><00:32:28.100><c> then</c><00:32:28.520><c> we'll</c><00:32:28.790><c> talk</c><00:32:28.940><c> about</c><00:32:29.120><c> some</c>

00:32:29.350 --> 00:32:29.360 align:start position:0%
plus and then we'll talk about some
 

00:32:29.360 --> 00:32:30.610 align:start position:0%
plus and then we'll talk about some
things<00:32:29.510><c> that</c><00:32:29.630><c> are</c><00:32:29.780><c> coming</c><00:32:29.930><c> further</c><00:32:30.320><c> down</c><00:32:30.500><c> the</c>

00:32:30.610 --> 00:32:30.620 align:start position:0%
things that are coming further down the
 

00:32:30.620 --> 00:32:32.950 align:start position:0%
things that are coming further down the
running<00:32:30.970><c> soft</c><00:32:31.970><c> applause</c><00:32:32.270><c> for</c><00:32:32.540><c> Objective</c><00:32:32.870><c> C</c>

00:32:32.950 --> 00:32:32.960 align:start position:0%
running soft applause for Objective C
 

00:32:32.960 --> 00:32:36.310 align:start position:0%
running soft applause for Objective C
plus<00:32:33.200><c> plus</c><00:32:33.970><c> so</c><00:32:34.970><c> GCC</c><00:32:35.480><c> 3</c><00:32:35.840><c> is</c><00:32:35.960><c> what</c><00:32:36.200><c> we're</c>

00:32:36.310 --> 00:32:36.320 align:start position:0%
plus plus so GCC 3 is what we're
 

00:32:36.320 --> 00:32:37.540 align:start position:0%
plus plus so GCC 3 is what we're
currently<00:32:36.500><c> working</c><00:32:36.740><c> on</c><00:32:37.160><c> we've</c><00:32:37.370><c> got</c><00:32:37.520><c> a</c>

00:32:37.540 --> 00:32:37.550 align:start position:0%
currently working on we've got a
 

00:32:37.550 --> 00:32:40.060 align:start position:0%
currently working on we've got a
building<00:32:38.030><c> some</c><00:32:38.720><c> of</c><00:32:38.870><c> Mac</c><00:32:39.050><c> OS</c><00:32:39.080><c> 10</c><00:32:39.350><c> but</c><00:32:39.710><c> not</c><00:32:39.860><c> all</c>

00:32:40.060 --> 00:32:40.070 align:start position:0%
building some of Mac OS 10 but not all
 

00:32:40.070 --> 00:32:41.560 align:start position:0%
building some of Mac OS 10 but not all
of<00:32:40.100><c> it</c><00:32:40.310><c> right</c><00:32:40.520><c> away</c>

00:32:41.560 --> 00:32:41.570 align:start position:0%
of it right away
 

00:32:41.570 --> 00:32:44.350 align:start position:0%
of it right away
what<00:32:42.020><c> this</c><00:32:42.170><c> gives</c><00:32:42.410><c> us</c><00:32:42.680><c> is</c><00:32:42.920><c> an</c><00:32:43.880><c> integrated</c>

00:32:44.350 --> 00:32:44.360 align:start position:0%
what this gives us is an integrated
 

00:32:44.360 --> 00:32:47.920 align:start position:0%
what this gives us is an integrated
preprocessor<00:32:45.250><c> it</c><00:32:46.250><c> gives</c><00:32:46.520><c> us</c><00:32:46.700><c> some</c><00:32:46.910><c> better</c><00:32:47.090><c> C++</c>

00:32:47.920 --> 00:32:47.930 align:start position:0%
preprocessor it gives us some better C++
 

00:32:47.930 --> 00:32:51.190 align:start position:0%
preprocessor it gives us some better C++
support<00:32:48.350><c> better</c><00:32:48.560><c> C++</c><00:32:49.190><c> compliance</c><00:32:50.020><c> it</c><00:32:51.020><c> has</c><00:32:51.170><c> a</c>

00:32:51.190 --> 00:32:51.200 align:start position:0%
support better C++ compliance it has a
 

00:32:51.200 --> 00:32:52.960 align:start position:0%
support better C++ compliance it has a
lot<00:32:51.500><c> of</c><00:32:51.530><c> cogent</c><00:32:52.040><c> improvements</c><00:32:52.550><c> especially</c>

00:32:52.960 --> 00:32:52.970 align:start position:0%
lot of cogent improvements especially
 

00:32:52.970 --> 00:32:56.380 align:start position:0%
lot of cogent improvements especially
for<00:32:53.150><c> the</c><00:32:53.480><c> PowerPC</c><00:32:54.670><c> and</c><00:32:55.670><c> something</c><00:32:56.060><c> keep</c><00:32:56.270><c> in</c>

00:32:56.380 --> 00:32:56.390 align:start position:0%
for the PowerPC and something keep in
 

00:32:56.390 --> 00:32:57.730 align:start position:0%
for the PowerPC and something keep in
mind<00:32:56.600><c> for</c><00:32:56.750><c> people</c><00:32:56.900><c> as</c><00:32:57.200><c> we're</c><00:32:57.350><c> rolling</c><00:32:57.500><c> this</c>

00:32:57.730 --> 00:32:57.740 align:start position:0%
mind for people as we're rolling this
 

00:32:57.740 --> 00:33:01.300 align:start position:0%
mind for people as we're rolling this
out<00:32:57.890><c> is</c><00:32:58.070><c> it</c><00:32:58.190><c> does</c><00:32:58.370><c> give</c><00:32:58.610><c> you</c><00:32:59.230><c> C++</c><00:33:00.230><c> ABI</c><00:33:00.440><c> changes</c>

00:33:01.300 --> 00:33:01.310 align:start position:0%
out is it does give you C++ ABI changes
 

00:33:01.310 --> 00:33:03.460 align:start position:0%
out is it does give you C++ ABI changes
so<00:33:01.490><c> if</c><00:33:01.610><c> you're</c><00:33:01.760><c> using</c><00:33:01.970><c> a</c><00:33:02.150><c> shared</c><00:33:02.360><c> library</c><00:33:02.660><c> that</c>

00:33:03.460 --> 00:33:03.470 align:start position:0%
so if you're using a shared library that
 

00:33:03.470 --> 00:33:07.000 align:start position:0%
so if you're using a shared library that
contains<00:33:03.820><c> exported</c><00:33:04.820><c> C++</c><00:33:05.690><c> calls</c><00:33:05.960><c> exported</c><00:33:06.470><c> C++</c>

00:33:07.000 --> 00:33:07.010 align:start position:0%
contains exported C++ calls exported C++
 

00:33:07.010 --> 00:33:09.400 align:start position:0%
contains exported C++ calls exported C++
classes<00:33:07.310><c> or</c><00:33:07.820><c> anything</c><00:33:08.300><c> like</c><00:33:08.540><c> that</c>

00:33:09.400 --> 00:33:09.410 align:start position:0%
classes or anything like that
 

00:33:09.410 --> 00:33:11.740 align:start position:0%
classes or anything like that
there<00:33:10.040><c> will</c><00:33:10.280><c> be</c><00:33:10.310><c> ABI</c><00:33:10.700><c> changes</c><00:33:11.240><c> you'll</c><00:33:11.390><c> have</c><00:33:11.570><c> to</c>

00:33:11.740 --> 00:33:11.750 align:start position:0%
there will be ABI changes you'll have to
 

00:33:11.750 --> 00:33:14.380 align:start position:0%
there will be ABI changes you'll have to
ship<00:33:11.960><c> a</c><00:33:12.110><c> new</c><00:33:12.590><c> binary</c><00:33:12.860><c> for</c><00:33:13.280><c> that</c><00:33:13.460><c> if</c><00:33:14.240><c> you</c>

00:33:14.380 --> 00:33:14.390 align:start position:0%
ship a new binary for that if you
 

00:33:14.390 --> 00:33:20.200 align:start position:0%
ship a new binary for that if you
compile<00:33:14.780><c> it</c><00:33:15.020><c> with</c><00:33:15.320><c> GCC</c><00:33:15.980><c> 3.0</c><00:33:16.670><c> the</c><00:33:19.000><c> other</c><00:33:20.000><c> thing</c>

00:33:20.200 --> 00:33:20.210 align:start position:0%
compile it with GCC 3.0 the other thing
 

00:33:20.210 --> 00:33:22.740 align:start position:0%
compile it with GCC 3.0 the other thing
we've<00:33:20.330><c> added</c><00:33:20.510><c> is</c><00:33:20.720><c> two</c><00:33:20.900><c> level</c><00:33:21.170><c> namespace</c>

00:33:22.740 --> 00:33:22.750 align:start position:0%
we've added is two level namespace
 

00:33:22.750 --> 00:33:26.339 align:start position:0%
we've added is two level namespace
before<00:33:23.750><c> what</c><00:33:23.930><c> we</c><00:33:24.050><c> had</c><00:33:24.260><c> on</c><00:33:24.440><c> Mac</c><00:33:24.650><c> OS</c><00:33:24.920><c> 10</c>

00:33:26.339 --> 00:33:26.349 align:start position:0%
before what we had on Mac OS 10
 

00:33:26.349 --> 00:33:29.609 align:start position:0%
before what we had on Mac OS 10
public<00:33:27.039><c> beta</c><00:33:27.219><c> and</c><00:33:27.519><c> on</c><00:33:27.700><c> GM</c><00:33:28.119><c> is</c><00:33:28.359><c> a</c><00:33:29.019><c> flat</c>

00:33:29.609 --> 00:33:29.619 align:start position:0%
public beta and on GM is a flat
 

00:33:29.619 --> 00:33:31.560 align:start position:0%
public beta and on GM is a flat
namespace<00:33:30.159><c> so</c><00:33:30.369><c> all</c><00:33:30.519><c> of</c><00:33:30.609><c> your</c><00:33:30.700><c> libraries</c><00:33:31.299><c> and</c>

00:33:31.560 --> 00:33:31.570 align:start position:0%
namespace so all of your libraries and
 

00:33:31.570 --> 00:33:33.389 align:start position:0%
namespace so all of your libraries and
all<00:33:31.749><c> of</c><00:33:31.869><c> your</c><00:33:32.019><c> and</c><00:33:32.200><c> all</c><00:33:32.649><c> your</c><00:33:32.830><c> application</c>

00:33:33.389 --> 00:33:33.399 align:start position:0%
all of your and all your application
 

00:33:33.399 --> 00:33:34.919 align:start position:0%
all of your and all your application
just<00:33:33.429><c> basically</c><00:33:34.119><c> all</c><00:33:34.269><c> the</c><00:33:34.359><c> symbols</c><00:33:34.690><c> went</c><00:33:34.840><c> up</c>

00:33:34.919 --> 00:33:34.929 align:start position:0%
just basically all the symbols went up
 

00:33:34.929 --> 00:33:37.469 align:start position:0%
just basically all the symbols went up
into<00:33:35.080><c> a</c><00:33:35.169><c> big</c><00:33:35.409><c> pool</c><00:33:36.129><c> and</c><00:33:36.489><c> if</c><00:33:37.269><c> there</c><00:33:37.389><c> were</c><00:33:37.450><c> any</c>

00:33:37.469 --> 00:33:37.479 align:start position:0%
into a big pool and if there were any
 

00:33:37.479 --> 00:33:39.389 align:start position:0%
into a big pool and if there were any
name<00:33:37.809><c> collisions</c><00:33:38.169><c> you</c><00:33:38.469><c> basically</c><00:33:38.830><c> lost</c><00:33:39.129><c> at</c>

00:33:39.389 --> 00:33:39.399 align:start position:0%
name collisions you basically lost at
 

00:33:39.399 --> 00:33:41.459 align:start position:0%
name collisions you basically lost at
that<00:33:39.519><c> point</c><00:33:39.849><c> the</c><00:33:40.690><c> thing</c><00:33:40.840><c> to</c><00:33:40.929><c> keep</c><00:33:40.989><c> in</c><00:33:41.109><c> mind</c><00:33:41.169><c> is</c>

00:33:41.459 --> 00:33:41.469 align:start position:0%
that point the thing to keep in mind is
 

00:33:41.469 --> 00:33:42.659 align:start position:0%
that point the thing to keep in mind is
that<00:33:41.619><c> if</c><00:33:41.710><c> you're</c><00:33:41.830><c> loading</c><00:33:41.950><c> bundles</c><00:33:42.460><c> if</c><00:33:42.549><c> you're</c>

00:33:42.659 --> 00:33:42.669 align:start position:0%
that if you're loading bundles if you're
 

00:33:42.669 --> 00:33:44.009 align:start position:0%
that if you're loading bundles if you're
loading<00:33:42.879><c> plugins</c><00:33:43.299><c> we</c><00:33:43.419><c> actually</c><00:33:43.779><c> have</c><00:33:43.989><c> a</c>

00:33:44.009 --> 00:33:44.019 align:start position:0%
loading plugins we actually have a
 

00:33:44.019 --> 00:33:45.749 align:start position:0%
loading plugins we actually have a
two-level<00:33:44.679><c> namespace</c><00:33:45.099><c> implemented</c><00:33:45.639><c> for</c>

00:33:45.749 --> 00:33:45.759 align:start position:0%
two-level namespace implemented for
 

00:33:45.759 --> 00:33:47.430 align:start position:0%
two-level namespace implemented for
plugins<00:33:46.179><c> so</c><00:33:46.389><c> things</c><00:33:46.749><c> like</c><00:33:46.899><c> QuickTime</c><00:33:47.409><c> and</c>

00:33:47.430 --> 00:33:47.440 align:start position:0%
plugins so things like QuickTime and
 

00:33:47.440 --> 00:33:49.769 align:start position:0%
plugins so things like QuickTime and
other<00:33:48.249><c> applications</c><00:33:48.669><c> with</c><00:33:48.999><c> load</c><00:33:49.330><c> plugins</c>

00:33:49.769 --> 00:33:49.779 align:start position:0%
other applications with load plugins
 

00:33:49.779 --> 00:33:51.810 align:start position:0%
other applications with load plugins
already<00:33:49.960><c> can</c><00:33:50.169><c> take</c><00:33:50.289><c> advantage</c><00:33:50.739><c> of</c><00:33:50.859><c> this</c><00:33:51.009><c> what</c>

00:33:51.810 --> 00:33:51.820 align:start position:0%
already can take advantage of this what
 

00:33:51.820 --> 00:33:53.549 align:start position:0%
already can take advantage of this what
we're<00:33:51.940><c> doing</c><00:33:52.239><c> is</c><00:33:52.359><c> having</c><00:33:52.479><c> is</c><00:33:52.809><c> expanding</c><00:33:53.440><c> this</c>

00:33:53.549 --> 00:33:53.559 align:start position:0%
we're doing is having is expanding this
 

00:33:53.559 --> 00:33:57.659 align:start position:0%
we're doing is having is expanding this
feature<00:33:53.769><c> to</c><00:33:54.549><c> the</c><00:33:55.029><c> rest</c><00:33:55.330><c> of</c><00:33:55.599><c> your</c><00:33:56.440><c> binary</c><00:33:56.710><c> the</c>

00:33:57.659 --> 00:33:57.669 align:start position:0%
feature to the rest of your binary the
 

00:33:57.669 --> 00:33:59.789 align:start position:0%
feature to the rest of your binary the
way<00:33:57.789><c> that</c><00:33:57.969><c> it</c><00:33:58.029><c> works</c><00:33:58.179><c> on</c><00:33:58.330><c> Mac</c><00:33:58.509><c> OS</c><00:33:58.779><c> 9</c><00:33:58.960><c> so</c><00:33:59.649><c> we</c>

00:33:59.789 --> 00:33:59.799 align:start position:0%
way that it works on Mac OS 9 so we
 

00:33:59.799 --> 00:34:01.619 align:start position:0%
way that it works on Mac OS 9 so we
linked<00:34:00.039><c> now</c><00:34:00.219><c> by</c><00:34:00.460><c> symbol</c><00:34:00.969><c> name</c><00:34:01.149><c> and</c><00:34:01.179><c> library</c>

00:34:01.619 --> 00:34:01.629 align:start position:0%
linked now by symbol name and library
 

00:34:01.629 --> 00:34:05.009 align:start position:0%
linked now by symbol name and library
name<00:34:02.940><c> what</c><00:34:03.940><c> this</c><00:34:04.089><c> does</c><00:34:04.299><c> is</c><00:34:04.479><c> it</c><00:34:04.629><c> protects</c>

00:34:05.009 --> 00:34:05.019 align:start position:0%
name what this does is it protects
 

00:34:05.019 --> 00:34:07.379 align:start position:0%
name what this does is it protects
against<00:34:05.499><c> name</c><00:34:05.979><c> collisions</c><00:34:06.279><c> in</c><00:34:06.580><c> modules</c><00:34:07.029><c> so</c><00:34:07.239><c> if</c>

00:34:07.379 --> 00:34:07.389 align:start position:0%
against name collisions in modules so if
 

00:34:07.389 --> 00:34:10.409 align:start position:0%
against name collisions in modules so if
we<00:34:07.690><c> add</c><00:34:07.929><c> a</c><00:34:08.260><c> new</c><00:34:08.529><c> API</c><00:34:08.919><c> to</c><00:34:09.099><c> our</c><00:34:09.549><c> libraries</c><00:34:10.210><c> that</c>

00:34:10.409 --> 00:34:10.419 align:start position:0%
we add a new API to our libraries that
 

00:34:10.419 --> 00:34:12.419 align:start position:0%
we add a new API to our libraries that
conflicts<00:34:10.809><c> with</c><00:34:10.929><c> a</c><00:34:11.349><c> function</c><00:34:12.010><c> that</c><00:34:12.039><c> you</c><00:34:12.129><c> call</c>

00:34:12.419 --> 00:34:12.429 align:start position:0%
conflicts with a function that you call
 

00:34:12.429 --> 00:34:14.250 align:start position:0%
conflicts with a function that you call
in<00:34:12.579><c> your</c><00:34:12.700><c> application</c><00:34:13.270><c> it</c><00:34:13.450><c> doesn't</c><00:34:14.139><c> break</c>

00:34:14.250 --> 00:34:14.260 align:start position:0%
in your application it doesn't break
 

00:34:14.260 --> 00:34:15.839 align:start position:0%
in your application it doesn't break
your<00:34:14.440><c> applicationnow</c><00:34:15.010><c> so</c><00:34:15.309><c> as</c><00:34:15.429><c> we</c><00:34:15.669><c> update</c>

00:34:15.839 --> 00:34:15.849 align:start position:0%
your applicationnow so as we update
 

00:34:15.849 --> 00:34:18.779 align:start position:0%
your applicationnow so as we update
libraries<00:34:16.510><c> moving</c><00:34:16.839><c> forward</c><00:34:17.289><c> it</c><00:34:17.500><c> won't</c><00:34:18.309><c> mess</c>

00:34:18.779 --> 00:34:18.789 align:start position:0%
libraries moving forward it won't mess
 

00:34:18.789 --> 00:34:20.190 align:start position:0%
libraries moving forward it won't mess
up<00:34:19.000><c> the</c><00:34:19.149><c> applications</c><00:34:19.690><c> that</c><00:34:19.750><c> you</c><00:34:19.929><c> already</c>

00:34:20.190 --> 00:34:20.200 align:start position:0%
up the applications that you already
 

00:34:20.200 --> 00:34:23.909 align:start position:0%
up the applications that you already
have<00:34:21.299><c> this</c><00:34:22.299><c> also</c><00:34:22.629><c> speeds</c><00:34:23.020><c> dynamic</c><00:34:23.500><c> linking</c>

00:34:23.909 --> 00:34:23.919 align:start position:0%
have this also speeds dynamic linking
 

00:34:23.919 --> 00:34:26.190 align:start position:0%
have this also speeds dynamic linking
for<00:34:24.520><c> non</c><00:34:24.669><c> pre</c><00:34:24.940><c> bound</c><00:34:25.149><c> applications</c><00:34:25.809><c> because</c>

00:34:26.190 --> 00:34:26.200 align:start position:0%
for non pre bound applications because
 

00:34:26.200 --> 00:34:28.369 align:start position:0%
for non pre bound applications because
instead<00:34:26.589><c> of</c><00:34:26.649><c> having</c><00:34:26.740><c> to</c><00:34:27.069><c> search</c><00:34:27.339><c> the</c><00:34:27.909><c> entire</c>

00:34:28.369 --> 00:34:28.379 align:start position:0%
instead of having to search the entire
 

00:34:28.379 --> 00:34:30.809 align:start position:0%
instead of having to search the entire
set<00:34:29.379><c> of</c><00:34:29.409><c> symbol</c><00:34:29.889><c> tables</c><00:34:30.159><c> we</c><00:34:30.279><c> go</c><00:34:30.399><c> right</c><00:34:30.609><c> to</c><00:34:30.730><c> the</c>

00:34:30.809 --> 00:34:30.819 align:start position:0%
set of symbol tables we go right to the
 

00:34:30.819 --> 00:34:33.480 align:start position:0%
set of symbol tables we go right to the
library<00:34:31.240><c> and</c><00:34:31.480><c> we</c><00:34:31.720><c> look</c><00:34:31.899><c> for</c><00:34:32.079><c> it</c><00:34:32.139><c> there</c><00:34:32.490><c> the</c>

00:34:33.480 --> 00:34:33.490 align:start position:0%
library and we look for it there the
 

00:34:33.490 --> 00:34:34.799 align:start position:0%
library and we look for it there the
thing<00:34:33.639><c> to</c><00:34:33.730><c> keep</c><00:34:33.849><c> in</c><00:34:33.970><c> mind</c><00:34:34.029><c> for</c><00:34:34.329><c> people</c><00:34:34.480><c> who</c><00:34:34.720><c> are</c>

00:34:34.799 --> 00:34:34.809 align:start position:0%
thing to keep in mind for people who are
 

00:34:34.809 --> 00:34:36.990 align:start position:0%
thing to keep in mind for people who are
used<00:34:34.960><c> to</c><00:34:35.020><c> compiling</c><00:34:35.440><c> and</c><00:34:36.099><c> the</c><00:34:36.220><c> flat</c><00:34:36.460><c> namespace</c>

00:34:36.990 --> 00:34:37.000 align:start position:0%
used to compiling and the flat namespace
 

00:34:37.000 --> 00:34:39.629 align:start position:0%
used to compiling and the flat namespace
coming<00:34:37.419><c> over</c><00:34:37.690><c> from</c><00:34:37.929><c> Mac</c><00:34:38.559><c> os10</c><00:34:38.829><c> server</c><00:34:39.339><c> or</c>

00:34:39.629 --> 00:34:39.639 align:start position:0%
coming over from Mac os10 server or
 

00:34:39.639 --> 00:34:41.760 align:start position:0%
coming over from Mac os10 server or
having<00:34:40.210><c> done</c><00:34:40.389><c> some</c><00:34:40.629><c> other</c><00:34:40.750><c> unix</c><00:34:41.139><c> applications</c>

00:34:41.760 --> 00:34:41.770 align:start position:0%
having done some other unix applications
 

00:34:41.770 --> 00:34:43.619 align:start position:0%
having done some other unix applications
there<00:34:42.460><c> is</c><00:34:42.579><c> one</c><00:34:42.819><c> restriction</c><00:34:43.149><c> that</c><00:34:43.419><c> you</c><00:34:43.510><c> have</c>

00:34:43.619 --> 00:34:43.629 align:start position:0%
there is one restriction that you have
 

00:34:43.629 --> 00:34:45.389 align:start position:0%
there is one restriction that you have
to<00:34:43.750><c> keep</c><00:34:43.869><c> in</c><00:34:44.020><c> mind</c><00:34:44.230><c> that</c><00:34:44.710><c> if</c><00:34:44.829><c> you</c><00:34:44.919><c> reference</c><00:34:45.309><c> a</c>

00:34:45.389 --> 00:34:45.399 align:start position:0%
to keep in mind that if you reference a
 

00:34:45.399 --> 00:34:47.099 align:start position:0%
to keep in mind that if you reference a
symbol<00:34:45.730><c> now</c><00:34:45.849><c> out</c><00:34:46.089><c> of</c><00:34:46.119><c> a</c><00:34:46.329><c> library</c><00:34:46.750><c> you</c><00:34:46.839><c> have</c><00:34:46.899><c> to</c>

00:34:47.099 --> 00:34:47.109 align:start position:0%
symbol now out of a library you have to
 

00:34:47.109 --> 00:34:53.329 align:start position:0%
symbol now out of a library you have to
explicitly<00:34:47.730><c> include</c><00:34:48.730><c> it</c><00:34:48.909><c> on</c><00:34:49.089><c> the</c><00:34:49.179><c> link</c><00:34:49.990><c> line</c>

00:34:53.329 --> 00:34:53.339 align:start position:0%
 
 

00:34:53.339 --> 00:34:55.289 align:start position:0%
 
so<00:34:54.339><c> in</c><00:34:54.549><c> case</c><00:34:54.700><c> you're</c><00:34:54.849><c> wondering</c><00:34:54.940><c> about</c>

00:34:55.289 --> 00:34:55.299 align:start position:0%
so in case you're wondering about
 

00:34:55.299 --> 00:35:00.089 align:start position:0%
so in case you're wondering about
compatibility<00:34:56.819><c> Mac</c><00:34:57.819><c> OS</c><00:34:58.089><c> 10</c><00:34:58.119><c> GM</c><00:34:58.569><c> apps</c><00:34:59.099><c> work</c>

00:35:00.089 --> 00:35:00.099 align:start position:0%
compatibility Mac OS 10 GM apps work
 

00:35:00.099 --> 00:35:01.589 align:start position:0%
compatibility Mac OS 10 GM apps work
just<00:35:00.339><c> fine</c><00:35:00.549><c> on</c><00:35:00.609><c> the</c><00:35:00.789><c> GNU</c><00:35:00.910><c> system</c><00:35:00.940><c> so</c><00:35:01.450><c> we'll</c>

00:35:01.589 --> 00:35:01.599 align:start position:0%
just fine on the GNU system so we'll
 

00:35:01.599 --> 00:35:05.309 align:start position:0%
just fine on the GNU system so we'll
have<00:35:01.720><c> a</c><00:35:01.750><c> two-level</c><00:35:02.319><c> namespace</c><00:35:02.799><c> system</c><00:35:04.319><c> things</c>

00:35:05.309 --> 00:35:05.319 align:start position:0%
have a two-level namespace system things
 

00:35:05.319 --> 00:35:06.960 align:start position:0%
have a two-level namespace system things
that<00:35:05.440><c> have</c><00:35:05.559><c> shipped</c><00:35:05.770><c> for</c><00:35:05.920><c> Mac</c><00:35:06.039><c> OS</c><00:35:06.279><c> 10</c><00:35:06.309><c> GM</c><00:35:06.670><c> will</c>

00:35:06.960 --> 00:35:06.970 align:start position:0%
that have shipped for Mac OS 10 GM will
 

00:35:06.970 --> 00:35:08.430 align:start position:0%
that have shipped for Mac OS 10 GM will
work<00:35:07.150><c> just</c><00:35:07.180><c> fine</c>

00:35:08.430 --> 00:35:08.440 align:start position:0%
work just fine
 

00:35:08.440 --> 00:35:10.410 align:start position:0%
work just fine
two<00:35:08.770><c> level</c><00:35:09.039><c> apps</c><00:35:09.220><c> will</c><00:35:09.579><c> also</c><00:35:09.910><c> work</c><00:35:10.059><c> just</c><00:35:10.089><c> fine</c>

00:35:10.410 --> 00:35:10.420 align:start position:0%
two level apps will also work just fine
 

00:35:10.420 --> 00:35:13.019 align:start position:0%
two level apps will also work just fine
on<00:35:10.480><c> GM</c><00:35:10.839><c> system</c><00:35:11.230><c> so</c><00:35:11.380><c> you</c><00:35:11.440><c> build</c><00:35:11.859><c> your</c><00:35:12.460><c> app</c><00:35:12.730><c> for</c>

00:35:13.019 --> 00:35:13.029 align:start position:0%
on GM system so you build your app for
 

00:35:13.029 --> 00:35:14.519 align:start position:0%
on GM system so you build your app for
two-level<00:35:13.420><c> namespace</c><00:35:13.839><c> when</c><00:35:14.049><c> this</c><00:35:14.170><c> is</c><00:35:14.289><c> rolled</c>

00:35:14.519 --> 00:35:14.529 align:start position:0%
two-level namespace when this is rolled
 

00:35:14.529 --> 00:35:17.839 align:start position:0%
two-level namespace when this is rolled
out<00:35:14.710><c> and</c><00:35:14.920><c> it'll</c><00:35:15.640><c> run</c><00:35:15.940><c> fine</c><00:35:16.299><c> on</c><00:35:16.599><c> Mac</c><00:35:17.049><c> OS</c><00:35:17.319><c> 10</c><00:35:17.349><c> GM</c>

00:35:17.839 --> 00:35:17.849 align:start position:0%
out and it'll run fine on Mac OS 10 GM
 

00:35:17.849 --> 00:35:21.510 align:start position:0%
out and it'll run fine on Mac OS 10 GM
and<00:35:18.849><c> any</c><00:35:19.720><c> combination</c><00:35:20.380><c> of</c><00:35:20.950><c> flat</c><00:35:21.490><c> and</c>

00:35:21.510 --> 00:35:21.520 align:start position:0%
and any combination of flat and
 

00:35:21.520 --> 00:35:23.339 align:start position:0%
and any combination of flat and
two-level<00:35:22.180><c> libraries</c><00:35:22.599><c> will</c><00:35:22.809><c> work</c><00:35:22.960><c> as</c><00:35:23.109><c> well</c><00:35:23.140><c> so</c>

00:35:23.339 --> 00:35:23.349 align:start position:0%
two-level libraries will work as well so
 

00:35:23.349 --> 00:35:25.019 align:start position:0%
two-level libraries will work as well so
you<00:35:23.529><c> can</c><00:35:23.619><c> have</c><00:35:23.680><c> a</c><00:35:23.799><c> two-level</c><00:35:24.250><c> app</c><00:35:24.430><c> the</c><00:35:24.819><c> links</c>

00:35:25.019 --> 00:35:25.029 align:start position:0%
you can have a two-level app the links
 

00:35:25.029 --> 00:35:26.849 align:start position:0%
you can have a two-level app the links
against<00:35:25.240><c> a</c><00:35:25.329><c> flat</c><00:35:25.839><c> library</c><00:35:26.470><c> that</c><00:35:26.619><c> links</c>

00:35:26.849 --> 00:35:26.859 align:start position:0%
against a flat library that links
 

00:35:26.859 --> 00:35:28.230 align:start position:0%
against a flat library that links
against<00:35:27.160><c> another</c><00:35:27.460><c> you</c><00:35:27.730><c> know</c><00:35:27.849><c> our</c><00:35:28.000><c> system</c>

00:35:28.230 --> 00:35:28.240 align:start position:0%
against another you know our system
 

00:35:28.240 --> 00:35:29.789 align:start position:0%
against another you know our system
libraries<00:35:28.839><c> which</c><00:35:28.990><c> will</c><00:35:29.109><c> be</c><00:35:29.200><c> two-level</c><00:35:29.710><c> at</c>

00:35:29.789 --> 00:35:29.799 align:start position:0%
libraries which will be two-level at
 

00:35:29.799 --> 00:35:32.450 align:start position:0%
libraries which will be two-level at
that<00:35:29.950><c> point</c><00:35:30.220><c> and</c><00:35:30.369><c> that</c><00:35:31.359><c> will</c><00:35:31.510><c> all</c><00:35:31.660><c> work</c><00:35:31.869><c> just</c>

00:35:32.450 --> 00:35:32.460 align:start position:0%
that point and that will all work just
 

00:35:32.460 --> 00:35:33.930 align:start position:0%
that point and that will all work just
just<00:35:33.460><c> fine</c>

00:35:33.930 --> 00:35:33.940 align:start position:0%
just fine
 

00:35:33.940 --> 00:35:36.450 align:start position:0%
just fine
so<00:35:34.240><c> Kevin</c><00:35:34.480><c> under</c><00:35:34.720><c> B</c><00:35:34.839><c> is</c><00:35:34.990><c> the</c><00:35:35.250><c> engineer</c><00:35:36.250><c> that</c>

00:35:36.450 --> 00:35:36.460 align:start position:0%
so Kevin under B is the engineer that
 

00:35:36.460 --> 00:35:38.339 align:start position:0%
so Kevin under B is the engineer that
that<00:35:36.760><c> that</c><00:35:37.420><c> worked</c><00:35:37.660><c> on</c><00:35:37.779><c> this</c><00:35:37.930><c> and</c><00:35:38.109><c> you</c><00:35:38.170><c> did</c><00:35:38.319><c> a</c>

00:35:38.339 --> 00:35:38.349 align:start position:0%
that that worked on this and you did a
 

00:35:38.349 --> 00:35:39.660 align:start position:0%
that that worked on this and you did a
really<00:35:38.380><c> good</c><00:35:38.740><c> job</c><00:35:38.890><c> making</c><00:35:38.950><c> sure</c><00:35:39.369><c> that</c><00:35:39.490><c> all</c>

00:35:39.660 --> 00:35:39.670 align:start position:0%
really good job making sure that all
 

00:35:39.670 --> 00:35:41.339 align:start position:0%
really good job making sure that all
these<00:35:39.819><c> corner</c><00:35:40.150><c> cases</c><00:35:40.329><c> got</c><00:35:40.660><c> covered</c><00:35:41.049><c> he'll</c><00:35:41.230><c> be</c>

00:35:41.339 --> 00:35:41.349 align:start position:0%
these corner cases got covered he'll be
 

00:35:41.349 --> 00:35:44.099 align:start position:0%
these corner cases got covered he'll be
on<00:35:41.470><c> stage</c><00:35:41.799><c> later</c><00:35:42.490><c> so</c><00:35:42.849><c> you</c><00:35:42.910><c> can</c><00:35:43.119><c> ask</c><00:35:43.750><c> him</c><00:35:43.930><c> some</c>

00:35:44.099 --> 00:35:44.109 align:start position:0%
on stage later so you can ask him some
 

00:35:44.109 --> 00:35:48.539 align:start position:0%
on stage later so you can ask him some
questions<00:35:44.440><c> about</c><00:35:44.530><c> this</c><00:35:47.190><c> so</c><00:35:48.190><c> now</c><00:35:48.309><c> what</c><00:35:48.460><c> I'd</c>

00:35:48.539 --> 00:35:48.549 align:start position:0%
questions about this so now what I'd
 

00:35:48.549 --> 00:35:50.490 align:start position:0%
questions about this so now what I'd
like<00:35:48.670><c> to</c><00:35:48.730><c> do</c><00:35:48.970><c> is</c><00:35:49.119><c> bring</c><00:35:49.359><c> up</c><00:35:49.540><c> zem</c><00:35:49.839><c> Lasky</c><00:35:50.290><c> who</c><00:35:50.440><c> is</c>

00:35:50.490 --> 00:35:50.500 align:start position:0%
like to do is bring up zem Lasky who is
 

00:35:50.500 --> 00:35:52.589 align:start position:0%
like to do is bring up zem Lasky who is
the<00:35:50.710><c> responsible</c><00:35:51.040><c> engineer</c><00:35:51.640><c> for</c><00:35:52.150><c> objective</c>

00:35:52.589 --> 00:35:52.599 align:start position:0%
the responsible engineer for objective
 

00:35:52.599 --> 00:35:55.170 align:start position:0%
the responsible engineer for objective
C++<00:35:53.230><c> and</c><00:35:53.470><c> he's</c><00:35:54.220><c> going</c><00:35:54.369><c> to</c><00:35:54.460><c> walk</c><00:35:54.640><c> you</c><00:35:54.849><c> through</c>

00:35:55.170 --> 00:35:55.180 align:start position:0%
C++ and he's going to walk you through
 

00:35:55.180 --> 00:35:58.710 align:start position:0%
C++ and he's going to walk you through
what<00:35:56.160><c> we've</c><00:35:57.160><c> been</c><00:35:57.309><c> doing</c><00:35:57.579><c> our</c><00:35:57.670><c> objective</c><00:35:58.089><c> C++</c>

00:35:58.710 --> 00:35:58.720 align:start position:0%
what we've been doing our objective C++
 

00:35:58.720 --> 00:36:00.750 align:start position:0%
what we've been doing our objective C++
and<00:35:58.990><c> what</c><00:35:59.140><c> some</c><00:35:59.710><c> of</c><00:35:59.740><c> the</c><00:35:59.829><c> details</c><00:36:00.160><c> are</c><00:36:00.400><c> there</c>

00:36:00.750 --> 00:36:00.760 align:start position:0%
and what some of the details are there
 

00:36:00.760 --> 00:36:09.270 align:start position:0%
and what some of the details are there
so<00:36:01.119><c> welcome</c><00:36:01.420><c> Sam</c><00:36:07.170><c> thank</c><00:36:08.170><c> you</c><00:36:08.380><c> well</c><00:36:08.890><c> as</c><00:36:09.010><c> John</c>

00:36:09.270 --> 00:36:09.280 align:start position:0%
so welcome Sam thank you well as John
 

00:36:09.280 --> 00:36:12.030 align:start position:0%
so welcome Sam thank you well as John
mentioned<00:36:09.490><c> I</c><00:36:10.240><c> did</c><00:36:10.660><c> do</c><00:36:11.260><c> most</c><00:36:11.470><c> of</c><00:36:11.559><c> the</c><00:36:11.680><c> work</c><00:36:11.710><c> so</c>

00:36:12.030 --> 00:36:12.040 align:start position:0%
mentioned I did do most of the work so
 

00:36:12.040 --> 00:36:13.770 align:start position:0%
mentioned I did do most of the work so
at<00:36:12.160><c> least</c><00:36:12.250><c> for</c><00:36:12.430><c> the</c><00:36:12.520><c> initial</c><00:36:12.880><c> release</c><00:36:13.030><c> if</c>

00:36:13.770 --> 00:36:13.780 align:start position:0%
at least for the initial release if
 

00:36:13.780 --> 00:36:16.549 align:start position:0%
at least for the initial release if
things<00:36:14.109><c> break</c><00:36:14.319><c> you</c><00:36:14.650><c> can</c><00:36:14.770><c> blame</c><00:36:14.980><c> me</c><00:36:15.040><c> so</c>

00:36:16.549 --> 00:36:16.559 align:start position:0%
things break you can blame me so
 

00:36:16.559 --> 00:36:18.450 align:start position:0%
things break you can blame me so
basically<00:36:17.559><c> what</c><00:36:17.710><c> I'd</c><00:36:17.799><c> like</c><00:36:17.920><c> to</c><00:36:18.069><c> do</c><00:36:18.190><c> is</c><00:36:18.309><c> just</c>

00:36:18.450 --> 00:36:18.460 align:start position:0%
basically what I'd like to do is just
 

00:36:18.460 --> 00:36:20.069 align:start position:0%
basically what I'd like to do is just
give<00:36:18.640><c> you</c><00:36:18.760><c> a</c><00:36:18.790><c> really</c><00:36:19.089><c> broad</c><00:36:19.450><c> a</c><00:36:19.510><c> really</c><00:36:19.869><c> quick</c>

00:36:20.069 --> 00:36:20.079 align:start position:0%
give you a really broad a really quick
 

00:36:20.079 --> 00:36:22.589 align:start position:0%
give you a really broad a really quick
overview<00:36:20.589><c> of</c><00:36:20.619><c> what</c><00:36:20.950><c> objective</c><00:36:21.549><c> C++</c><00:36:22.030><c> is</c><00:36:22.240><c> and</c>

00:36:22.589 --> 00:36:22.599 align:start position:0%
overview of what objective C++ is and
 

00:36:22.599 --> 00:36:25.680 align:start position:0%
overview of what objective C++ is and
what<00:36:22.780><c> it</c><00:36:22.900><c> is</c><00:36:23.020><c> not</c><00:36:24.000><c> so</c><00:36:25.000><c> the</c><00:36:25.089><c> most</c><00:36:25.240><c> important</c>

00:36:25.680 --> 00:36:25.690 align:start position:0%
what it is not so the most important
 

00:36:25.690 --> 00:36:27.450 align:start position:0%
what it is not so the most important
thing<00:36:25.869><c> to</c><00:36:25.960><c> remember</c><00:36:26.079><c> actually</c><00:36:26.440><c> are</c><00:36:26.650><c> two</c><00:36:26.829><c> very</c>

00:36:27.450 --> 00:36:27.460 align:start position:0%
thing to remember actually are two very
 

00:36:27.460 --> 00:36:28.980 align:start position:0%
thing to remember actually are two very
important<00:36:27.880><c> things</c><00:36:28.089><c> the</c><00:36:28.299><c> first</c><00:36:28.450><c> one</c><00:36:28.690><c> is</c><00:36:28.839><c> that</c>

00:36:28.980 --> 00:36:28.990 align:start position:0%
important things the first one is that
 

00:36:28.990 --> 00:36:31.109 align:start position:0%
important things the first one is that
it's<00:36:29.109><c> really</c><00:36:29.290><c> just</c><00:36:29.619><c> a</c><00:36:30.069><c> combination</c><00:36:30.309><c> of</c><00:36:30.790><c> C++</c>

00:36:31.109 --> 00:36:31.119 align:start position:0%
it's really just a combination of C++
 

00:36:31.119 --> 00:36:33.569 align:start position:0%
it's really just a combination of C++
and<00:36:31.750><c> Objective</c><00:36:32.260><c> C</c><00:36:32.290><c> or</c><00:36:32.920><c> perhaps</c><00:36:33.309><c> more</c>

00:36:33.569 --> 00:36:33.579 align:start position:0%
and Objective C or perhaps more
 

00:36:33.579 --> 00:36:35.760 align:start position:0%
and Objective C or perhaps more
accurately<00:36:33.660><c> it's</c><00:36:34.660><c> a</c><00:36:34.809><c> superimposition</c><00:36:35.650><c> of</c>

00:36:35.760 --> 00:36:35.770 align:start position:0%
accurately it's a superimposition of
 

00:36:35.770 --> 00:36:38.430 align:start position:0%
accurately it's a superimposition of
objective-c<00:36:36.280><c> on</c><00:36:36.640><c> C++</c><00:36:37.450><c> with</c><00:36:37.690><c> C++</c><00:36:37.900><c> sort</c><00:36:38.380><c> of</c>

00:36:38.430 --> 00:36:38.440 align:start position:0%
objective-c on C++ with C++ sort of
 

00:36:38.440 --> 00:36:42.000 align:start position:0%
objective-c on C++ with C++ sort of
being<00:36:38.650><c> the</c><00:36:38.740><c> senior</c><00:36:39.010><c> partner</c><00:36:39.780><c> and</c><00:36:40.780><c> the</c><00:36:41.710><c> reason</c>

00:36:42.000 --> 00:36:42.010 align:start position:0%
being the senior partner and the reason
 

00:36:42.010 --> 00:36:45.120 align:start position:0%
being the senior partner and the reason
we<00:36:42.099><c> did</c><00:36:42.309><c> this</c><00:36:42.490><c> is</c><00:36:42.730><c> is</c><00:36:43.390><c> very</c><00:36:43.660><c> simple</c><00:36:44.109><c> we</c><00:36:45.010><c> would</c>

00:36:45.120 --> 00:36:45.130 align:start position:0%
we did this is is very simple we would
 

00:36:45.130 --> 00:36:48.000 align:start position:0%
we did this is is very simple we would
like<00:36:45.309><c> to</c><00:36:45.490><c> allow</c><00:36:45.700><c> C++</c><00:36:46.390><c> programmers</c><00:36:46.960><c> to</c><00:36:47.619><c> utilize</c>

00:36:48.000 --> 00:36:48.010 align:start position:0%
like to allow C++ programmers to utilize
 

00:36:48.010 --> 00:36:49.799 align:start position:0%
like to allow C++ programmers to utilize
the<00:36:48.280><c> numerous</c><00:36:48.609><c> objective-c</c><00:36:49.119><c> frameworks</c><00:36:49.720><c> that</c>

00:36:49.799 --> 00:36:49.809 align:start position:0%
the numerous objective-c frameworks that
 

00:36:49.809 --> 00:36:53.900 align:start position:0%
the numerous objective-c frameworks that
we<00:36:49.960><c> have</c><00:36:50.140><c> on</c><00:36:50.260><c> the</c><00:36:50.349><c> system</c><00:36:50.710><c> most</c><00:36:51.430><c> notably</c><00:36:52.000><c> cocoa</c>

00:36:53.900 --> 00:36:53.910 align:start position:0%
we have on the system most notably cocoa
 

00:36:53.910 --> 00:36:56.880 align:start position:0%
we have on the system most notably cocoa
in<00:36:54.910><c> conjunction</c><00:36:55.869><c> with</c><00:36:56.079><c> this</c><00:36:56.319><c> rollout</c><00:36:56.680><c> we</c>

00:36:56.880 --> 00:36:56.890 align:start position:0%
in conjunction with this rollout we
 

00:36:56.890 --> 00:37:00.240 align:start position:0%
in conjunction with this rollout we
concocted<00:36:57.819><c> a</c><00:36:57.910><c> new</c><00:36:58.059><c> file</c><00:36:58.240><c> extension</c><00:36:58.839><c> dot</c><00:36:59.710><c> mm</c>

00:37:00.240 --> 00:37:00.250 align:start position:0%
concocted a new file extension dot mm
 

00:37:00.250 --> 00:37:02.430 align:start position:0%
concocted a new file extension dot mm
which<00:37:00.730><c> should</c><00:37:00.940><c> be</c><00:37:01.059><c> used</c><00:37:01.270><c> for</c><00:37:01.390><c> objective</c><00:37:01.869><c> C++</c>

00:37:02.430 --> 00:37:02.440 align:start position:0%
which should be used for objective C++
 

00:37:02.440 --> 00:37:09.150 align:start position:0%
which should be used for objective C++
source<00:37:03.190><c> code</c><00:37:05.970><c> there's</c><00:37:06.970><c> a</c><00:37:07.059><c> timer</c><00:37:07.329><c> here</c><00:37:08.010><c> some</c><00:37:09.010><c> of</c>

00:37:09.150 --> 00:37:09.160 align:start position:0%
source code there's a timer here some of
 

00:37:09.160 --> 00:37:11.579 align:start position:0%
source code there's a timer here some of
you<00:37:09.280><c> who</c><00:37:09.460><c> are</c><00:37:10.180><c> coming</c><00:37:10.750><c> over</c><00:37:11.020><c> from</c><00:37:11.170><c> the</c><00:37:11.260><c> next</c>

00:37:11.579 --> 00:37:11.589 align:start position:0%
you who are coming over from the next
 

00:37:11.589 --> 00:37:15.089 align:start position:0%
you who are coming over from the next
days<00:37:11.770><c> might</c><00:37:12.460><c> also</c><00:37:12.670><c> have</c><00:37:12.940><c> seen</c><00:37:13.180><c> that</c><00:37:14.109><c> dot</c><00:37:14.500><c> cap</c><00:37:14.829><c> M</c>

00:37:15.089 --> 00:37:15.099 align:start position:0%
days might also have seen that dot cap M
 

00:37:15.099 --> 00:37:18.480 align:start position:0%
days might also have seen that dot cap M
as<00:37:15.339><c> an</c><00:37:15.549><c> extension</c><00:37:16.119><c> but</c><00:37:16.540><c> we</c><00:37:17.130><c> hereby</c><00:37:18.130><c> declare</c>

00:37:18.480 --> 00:37:18.490 align:start position:0%
as an extension but we hereby declare
 

00:37:18.490 --> 00:37:20.720 align:start position:0%
as an extension but we hereby declare
this<00:37:18.609><c> to</c><00:37:18.849><c> be</c><00:37:19.030><c> no</c><00:37:19.180><c> longer</c><00:37:19.359><c> politically</c><00:37:19.869><c> correct</c>

00:37:20.720 --> 00:37:20.730 align:start position:0%
this to be no longer politically correct
 

00:37:20.730 --> 00:37:24.000 align:start position:0%
this to be no longer politically correct
the<00:37:21.730><c> HFS</c><00:37:22.180><c> file</c><00:37:22.390><c> system</c><00:37:22.809><c> is</c><00:37:22.960><c> case</c><00:37:23.380><c> preserving</c>

00:37:24.000 --> 00:37:24.010 align:start position:0%
the HFS file system is case preserving
 

00:37:24.010 --> 00:37:25.410 align:start position:0%
the HFS file system is case preserving
but<00:37:24.160><c> not</c><00:37:24.339><c> case-sensitive</c><00:37:24.579><c> there</c><00:37:25.270><c> are</c><00:37:25.329><c> also</c>

00:37:25.410 --> 00:37:25.420 align:start position:0%
but not case-sensitive there are also
 

00:37:25.420 --> 00:37:27.480 align:start position:0%
but not case-sensitive there are also
other<00:37:25.690><c> issues</c><00:37:25.780><c> so</c><00:37:26.319><c> we</c><00:37:26.470><c> certainly</c><00:37:27.010><c> encourage</c>

00:37:27.480 --> 00:37:27.490 align:start position:0%
other issues so we certainly encourage
 

00:37:27.490 --> 00:37:31.289 align:start position:0%
other issues so we certainly encourage
you<00:37:27.520><c> to</c><00:37:27.730><c> move</c><00:37:27.880><c> away</c><00:37:28.030><c> from</c><00:37:28.150><c> dot</c><00:37:28.839><c> cap</c><00:37:29.079><c> am</c><00:37:29.260><c> a</c><00:37:30.299><c> few</c>

00:37:31.289 --> 00:37:31.299 align:start position:0%
you to move away from dot cap am a few
 

00:37:31.299 --> 00:37:32.670 align:start position:0%
you to move away from dot cap am a few
words<00:37:31.480><c> about</c><00:37:31.569><c> the</c><00:37:31.809><c> implementation</c><00:37:32.049><c> as</c><00:37:32.589><c> it</c>

00:37:32.670 --> 00:37:32.680 align:start position:0%
words about the implementation as it
 

00:37:32.680 --> 00:37:35.339 align:start position:0%
words about the implementation as it
currently<00:37:32.920><c> exists</c><00:37:33.660><c> it</c><00:37:34.660><c> is</c><00:37:34.720><c> a</c><00:37:34.900><c> separate</c>

00:37:35.339 --> 00:37:35.349 align:start position:0%
currently exists it is a separate
 

00:37:35.349 --> 00:37:38.609 align:start position:0%
currently exists it is a separate
compiler<00:37:35.770><c> a</c><00:37:36.040><c> separate</c><00:37:36.460><c> front-end</c><00:37:37.410><c> that</c><00:37:38.410><c> I</c><00:37:38.440><c> was</c>

00:37:38.609 --> 00:37:38.619 align:start position:0%
compiler a separate front-end that I was
 

00:37:38.619 --> 00:37:40.230 align:start position:0%
compiler a separate front-end that I was
working<00:37:38.950><c> on</c><00:37:39.099><c> which</c><00:37:39.579><c> is</c><00:37:39.609><c> separate</c><00:37:40.030><c> from</c><00:37:40.119><c> the</c>

00:37:40.230 --> 00:37:40.240 align:start position:0%
working on which is separate from the
 

00:37:40.240 --> 00:37:44.370 align:start position:0%
working on which is separate from the
C++<00:37:40.720><c> front-end</c><00:37:41.079><c> and</c><00:37:41.440><c> the</c><00:37:41.530><c> other</c><00:37:41.650><c> ones</c><00:37:42.299><c> and</c><00:37:43.380><c> now</c>

00:37:44.370 --> 00:37:44.380 align:start position:0%
C++ front-end and the other ones and now
 

00:37:44.380 --> 00:37:46.589 align:start position:0%
C++ front-end and the other ones and now
I<00:37:44.410><c> come</c><00:37:44.710><c> to</c><00:37:44.859><c> the</c><00:37:44.980><c> second</c><00:37:45.369><c> important</c><00:37:45.849><c> point</c><00:37:46.059><c> the</c>

00:37:46.589 --> 00:37:46.599 align:start position:0%
I come to the second important point the
 

00:37:46.599 --> 00:37:48.150 align:start position:0%
I come to the second important point the
first<00:37:46.869><c> one</c><00:37:47.020><c> being</c><00:37:47.349><c> the</c><00:37:47.500><c> combination</c><00:37:48.010><c> of</c><00:37:48.040><c> the</c>

00:37:48.150 --> 00:37:48.160 align:start position:0%
first one being the combination of the
 

00:37:48.160 --> 00:37:50.130 align:start position:0%
first one being the combination of the
two<00:37:48.280><c> languages</c><00:37:48.640><c> the</c><00:37:49.180><c> second</c><00:37:49.540><c> important</c><00:37:49.960><c> point</c>

00:37:50.130 --> 00:37:50.140 align:start position:0%
two languages the second important point
 

00:37:50.140 --> 00:37:53.070 align:start position:0%
two languages the second important point
is<00:37:50.380><c> that</c><00:37:50.410><c> an</c><00:37:51.160><c> object</c><00:37:51.670><c> for</c><00:37:51.819><c> C++</c><00:37:52.329><c> program</c>

00:37:53.070 --> 00:37:53.080 align:start position:0%
is that an object for C++ program
 

00:37:53.080 --> 00:37:55.230 align:start position:0%
is that an object for C++ program
once<00:37:53.440><c> you</c><00:37:53.590><c> compile</c><00:37:53.950><c> and</c><00:37:54.160><c> run</c><00:37:54.220><c> it</c><00:37:54.460><c> interacts</c>

00:37:55.230 --> 00:37:55.240 align:start position:0%
once you compile and run it interacts
 

00:37:55.240 --> 00:37:58.230 align:start position:0%
once you compile and run it interacts
with<00:37:55.330><c> two</c><00:37:55.690><c> runtimes</c><00:37:56.320><c> the</c><00:37:56.920><c> C++</c><00:37:57.520><c> runtime</c><00:37:57.640><c> and</c>

00:37:58.230 --> 00:37:58.240 align:start position:0%
with two runtimes the C++ runtime and
 

00:37:58.240 --> 00:38:00.630 align:start position:0%
with two runtimes the C++ runtime and
the<00:37:58.660><c> objective-c</c><00:37:59.140><c> runtime</c><00:37:59.370><c> now</c><00:38:00.370><c> I'm</c><00:38:00.460><c> not</c><00:38:00.610><c> sure</c>

00:38:00.630 --> 00:38:00.640 align:start position:0%
the objective-c runtime now I'm not sure
 

00:38:00.640 --> 00:38:03.000 align:start position:0%
the objective-c runtime now I'm not sure
how<00:38:01.120><c> much</c><00:38:01.630><c> you're</c><00:38:01.900><c> a</c><00:38:01.930><c> way</c><00:38:02.080><c> of</c><00:38:02.530><c> one</c><00:38:02.770><c> or</c><00:38:02.890><c> the</c>

00:38:03.000 --> 00:38:03.010 align:start position:0%
how much you're a way of one or the
 

00:38:03.010 --> 00:38:04.560 align:start position:0%
how much you're a way of one or the
other<00:38:03.190><c> which</c><00:38:03.580><c> direction</c><00:38:03.910><c> you're</c><00:38:04.150><c> coming</c><00:38:04.450><c> from</c>

00:38:04.560 --> 00:38:04.570 align:start position:0%
other which direction you're coming from
 

00:38:04.570 --> 00:38:05.790 align:start position:0%
other which direction you're coming from
if<00:38:04.810><c> you're</c><00:38:04.930><c> coming</c><00:38:05.110><c> from</c><00:38:05.260><c> this</c><00:38:05.380><c> plus</c><00:38:05.620><c> plus</c>

00:38:05.790 --> 00:38:05.800 align:start position:0%
if you're coming from this plus plus
 

00:38:05.800 --> 00:38:07.380 align:start position:0%
if you're coming from this plus plus
world<00:38:06.070><c> then</c><00:38:06.640><c> you</c><00:38:06.760><c> probably</c><00:38:06.880><c> know</c><00:38:07.120><c> more</c><00:38:07.330><c> about</c>

00:38:07.380 --> 00:38:07.390 align:start position:0%
world then you probably know more about
 

00:38:07.390 --> 00:38:08.820 align:start position:0%
world then you probably know more about
the<00:38:07.630><c> person</c><00:38:07.960><c> one</c><00:38:08.050><c> if</c><00:38:08.170><c> you're</c><00:38:08.320><c> coming</c><00:38:08.500><c> from</c><00:38:08.590><c> the</c>

00:38:08.820 --> 00:38:08.830 align:start position:0%
the person one if you're coming from the
 

00:38:08.830 --> 00:38:11.250 align:start position:0%
the person one if you're coming from the
coco<00:38:09.190><c> slash</c><00:38:10.060><c> next</c><00:38:10.420><c> step</c><00:38:10.600><c> world</c><00:38:10.840><c> we</c><00:38:11.080><c> probably</c>

00:38:11.250 --> 00:38:11.260 align:start position:0%
coco slash next step world we probably
 

00:38:11.260 --> 00:38:13.110 align:start position:0%
coco slash next step world we probably
know<00:38:11.500><c> a</c><00:38:11.530><c> bit</c><00:38:11.710><c> more</c><00:38:11.740><c> about</c><00:38:11.980><c> the</c><00:38:12.100><c> second</c><00:38:12.430><c> one</c><00:38:12.580><c> but</c>

00:38:13.110 --> 00:38:13.120 align:start position:0%
know a bit more about the second one but
 

00:38:13.120 --> 00:38:14.580 align:start position:0%
know a bit more about the second one but
the<00:38:13.300><c> important</c><00:38:13.690><c> thing</c><00:38:13.720><c> here</c><00:38:14.110><c> is</c><00:38:14.140><c> that</c><00:38:14.410><c> these</c>

00:38:14.580 --> 00:38:14.590 align:start position:0%
the important thing here is that these
 

00:38:14.590 --> 00:38:17.250 align:start position:0%
the important thing here is that these
two<00:38:14.650><c> runtimes</c><00:38:15.480><c> are</c><00:38:16.480><c> separate</c><00:38:16.990><c> they</c><00:38:17.020><c> are</c>

00:38:17.250 --> 00:38:17.260 align:start position:0%
two runtimes are separate they are
 

00:38:17.260 --> 00:38:18.750 align:start position:0%
two runtimes are separate they are
different<00:38:17.680><c> they</c><00:38:17.800><c> have</c><00:38:17.920><c> different</c><00:38:17.950><c> semantics</c>

00:38:18.750 --> 00:38:18.760 align:start position:0%
different they have different semantics
 

00:38:18.760 --> 00:38:21.510 align:start position:0%
different they have different semantics
at<00:38:19.390><c> at</c><00:38:19.630><c> least</c><00:38:19.840><c> at</c><00:38:19.990><c> present</c><00:38:20.500><c> they</c><00:38:20.800><c> are</c><00:38:20.830><c> mutually</c>

00:38:21.510 --> 00:38:21.520 align:start position:0%
at at least at present they are mutually
 

00:38:21.520 --> 00:38:23.580 align:start position:0%
at at least at present they are mutually
unaware<00:38:22.180><c> of</c><00:38:22.300><c> one</c><00:38:22.690><c> another</c><00:38:22.900><c> or</c><00:38:23.080><c> as</c><00:38:23.200><c> I</c><00:38:23.290><c> like</c><00:38:23.470><c> to</c>

00:38:23.580 --> 00:38:23.590 align:start position:0%
unaware of one another or as I like to
 

00:38:23.590 --> 00:38:26.690 align:start position:0%
unaware of one another or as I like to
say<00:38:23.620><c> nutri</c><00:38:24.040><c> oblivious</c><00:38:24.520><c> of</c><00:38:24.640><c> one</c><00:38:24.820><c> another</c>

00:38:26.690 --> 00:38:26.700 align:start position:0%
say nutri oblivious of one another
 

00:38:26.700 --> 00:38:29.820 align:start position:0%
say nutri oblivious of one another
syntactically<00:38:27.700><c> the</c><00:38:28.570><c> the</c><00:38:28.840><c> objective-c</c>

00:38:29.820 --> 00:38:29.830 align:start position:0%
syntactically the the objective-c
 

00:38:29.830 --> 00:38:31.890 align:start position:0%
syntactically the the objective-c
constructs<00:38:30.400><c> and</c><00:38:30.610><c> C++</c><00:38:31.090><c> constructs</c><00:38:31.540><c> are</c><00:38:31.720><c> also</c>

00:38:31.890 --> 00:38:31.900 align:start position:0%
constructs and C++ constructs are also
 

00:38:31.900 --> 00:38:34.170 align:start position:0%
constructs and C++ constructs are also
separate<00:38:32.500><c> in</c><00:38:33.280><c> the</c><00:38:33.520><c> sense</c><00:38:33.760><c> that</c><00:38:33.850><c> you</c><00:38:34.030><c> can</c>

00:38:34.170 --> 00:38:34.180 align:start position:0%
separate in the sense that you can
 

00:38:34.180 --> 00:38:35.700 align:start position:0%
separate in the sense that you can
easily<00:38:34.360><c> tell</c><00:38:34.780><c> just</c><00:38:35.110><c> by</c><00:38:35.170><c> looking</c><00:38:35.260><c> at</c><00:38:35.650><c> a</c>

00:38:35.700 --> 00:38:35.710 align:start position:0%
easily tell just by looking at a
 

00:38:35.710 --> 00:38:37.710 align:start position:0%
easily tell just by looking at a
construct<00:38:36.250><c> which</c><00:38:36.700><c> languages</c><00:38:37.150><c> belongs</c><00:38:37.480><c> to</c>

00:38:37.710 --> 00:38:37.720 align:start position:0%
construct which languages belongs to
 

00:38:37.720 --> 00:38:39.360 align:start position:0%
construct which languages belongs to
which<00:38:38.260><c> is</c><00:38:38.380><c> of</c><00:38:38.500><c> course</c><00:38:38.620><c> makes</c><00:38:38.890><c> life</c><00:38:39.160><c> a</c><00:38:39.250><c> lot</c>

00:38:39.360 --> 00:38:39.370 align:start position:0%
which is of course makes life a lot
 

00:38:39.370 --> 00:38:40.950 align:start position:0%
which is of course makes life a lot
easier<00:38:39.430><c> for</c><00:38:39.760><c> us</c><00:38:39.910><c> and</c><00:38:40.120><c> implementing</c><00:38:40.630><c> it</c><00:38:40.750><c> and</c>

00:38:40.950 --> 00:38:40.960 align:start position:0%
easier for us and implementing it and
 

00:38:40.960 --> 00:38:43.050 align:start position:0%
easier for us and implementing it and
also<00:38:41.500><c> for</c><00:38:41.800><c> you</c><00:38:41.950><c> in</c><00:38:42.190><c> terms</c><00:38:42.400><c> of</c><00:38:42.550><c> figuring</c><00:38:42.730><c> out</c>

00:38:43.050 --> 00:38:43.060 align:start position:0%
also for you in terms of figuring out
 

00:38:43.060 --> 00:38:45.510 align:start position:0%
also for you in terms of figuring out
what<00:38:43.810><c> is</c><00:38:43.960><c> what</c><00:38:44.110><c> and</c><00:38:44.380><c> what</c><00:38:44.530><c> semantics</c><00:38:45.190><c> go</c><00:38:45.340><c> with</c>

00:38:45.510 --> 00:38:45.520 align:start position:0%
what is what and what semantics go with
 

00:38:45.520 --> 00:38:51.300 align:start position:0%
what is what and what semantics go with
it<00:38:46.980><c> so</c><00:38:48.540><c> first</c><00:38:49.540><c> off</c><00:38:49.810><c> I'd</c><00:38:50.740><c> like</c><00:38:50.800><c> to</c><00:38:51.040><c> give</c><00:38:51.280><c> you</c>

00:38:51.300 --> 00:38:51.310 align:start position:0%
it so first off I'd like to give you
 

00:38:51.310 --> 00:38:53.280 align:start position:0%
it so first off I'd like to give you
sort<00:38:51.520><c> of</c><00:38:51.610><c> the</c><00:38:51.700><c> good</c><00:38:51.910><c> news</c><00:38:52.120><c> the</c><00:38:52.660><c> ways</c><00:38:52.840><c> and</c><00:38:53.200><c> you</c>

00:38:53.280 --> 00:38:53.290 align:start position:0%
sort of the good news the ways and you
 

00:38:53.290 --> 00:38:56.490 align:start position:0%
sort of the good news the ways and you
can<00:38:53.440><c> mix</c><00:38:53.970><c> C++</c><00:38:54.970><c> and</c><00:38:55.150><c> Objective</c><00:38:55.540><c> C</c><00:38:55.570><c> code</c><00:38:55.870><c> so</c>

00:38:56.490 --> 00:38:56.500 align:start position:0%
can mix C++ and Objective C code so
 

00:38:56.500 --> 00:38:58.290 align:start position:0%
can mix C++ and Objective C code so
first<00:38:56.740><c> of</c><00:38:56.890><c> all</c><00:38:56.950><c> you</c><00:38:57.070><c> can</c><00:38:57.220><c> declare</c><00:38:57.550><c> an</c><00:38:57.820><c> instance</c>

00:38:58.290 --> 00:38:58.300 align:start position:0%
first of all you can declare an instance
 

00:38:58.300 --> 00:38:59.210 align:start position:0%
first of all you can declare an instance
of<00:38:58.420><c> an</c><00:38:58.540><c> objective-c</c>

00:38:59.210 --> 00:38:59.220 align:start position:0%
of an objective-c
 

00:38:59.220 --> 00:39:01.470 align:start position:0%
of an objective-c
object<00:39:00.220><c> which</c><00:39:00.370><c> is</c><00:39:00.520><c> really</c><00:39:00.700><c> a</c><00:39:00.730><c> reference</c><00:39:01.030><c> or</c><00:39:01.420><c> a</c>

00:39:01.470 --> 00:39:01.480 align:start position:0%
object which is really a reference or a
 

00:39:01.480 --> 00:39:03.570 align:start position:0%
object which is really a reference or a
pointer<00:39:01.810><c> to</c><00:39:01.840><c> that</c><00:39:01.960><c> object</c><00:39:02.140><c> like</c><00:39:02.560><c> in</c><00:39:02.680><c> Java</c><00:39:02.920><c> you</c>

00:39:03.570 --> 00:39:03.580 align:start position:0%
pointer to that object like in Java you
 

00:39:03.580 --> 00:39:06.060 align:start position:0%
pointer to that object like in Java you
can<00:39:03.760><c> declare</c><00:39:03.910><c> that</c><00:39:04.180><c> anywhere</c><00:39:04.570><c> you</c><00:39:04.630><c> have</c><00:39:04.990><c> a</c><00:39:05.290><c> C++</c>

00:39:06.060 --> 00:39:06.070 align:start position:0%
can declare that anywhere you have a C++
 

00:39:06.070 --> 00:39:09.060 align:start position:0%
can declare that anywhere you have a C++
declaration<00:39:06.670><c> so</c><00:39:07.540><c> wherever</c><00:39:08.020><c> you</c><00:39:08.350><c> can</c><00:39:08.500><c> declare</c>

00:39:09.060 --> 00:39:09.070 align:start position:0%
declaration so wherever you can declare
 

00:39:09.070 --> 00:39:10.920 align:start position:0%
declaration so wherever you can declare
C++<00:39:09.580><c> variable</c><00:39:09.970><c> you</c><00:39:10.090><c> can</c><00:39:10.270><c> declare</c><00:39:10.870><c> the</c>

00:39:10.920 --> 00:39:10.930 align:start position:0%
C++ variable you can declare the
 

00:39:10.930 --> 00:39:14.640 align:start position:0%
C++ variable you can declare the
objective-c<00:39:11.470><c> variables</c><00:39:12.270><c> secondly</c><00:39:13.650><c> Objective</c>

00:39:14.640 --> 00:39:14.650 align:start position:0%
objective-c variables secondly Objective
 

00:39:14.650 --> 00:39:17.070 align:start position:0%
objective-c variables secondly Objective
C<00:39:14.680><c> classes</c><00:39:15.340><c> the</c><00:39:15.940><c> declarations</c><00:39:16.930><c> of</c><00:39:17.020><c> the</c>

00:39:17.070 --> 00:39:17.080 align:start position:0%
C classes the declarations of the
 

00:39:17.080 --> 00:39:18.660 align:start position:0%
C classes the declarations of the
classes<00:39:17.410><c> themselves</c><00:39:17.530><c> may</c><00:39:18.010><c> contain</c><00:39:18.430><c> within</c>

00:39:18.660 --> 00:39:18.670 align:start position:0%
classes themselves may contain within
 

00:39:18.670 --> 00:39:24.120 align:start position:0%
classes themselves may contain within
them<00:39:19.290><c> C++</c><00:39:20.290><c> classes</c><00:39:20.590><c> or</c><00:39:21.010><c> c</c><00:39:21.940><c> structs</c><00:39:23.040><c> there</c><00:39:24.040><c> are</c>

00:39:24.120 --> 00:39:24.130 align:start position:0%
them C++ classes or c structs there are
 

00:39:24.130 --> 00:39:25.740 align:start position:0%
them C++ classes or c structs there are
some<00:39:24.280><c> exceptions</c><00:39:24.580><c> to</c><00:39:24.850><c> that</c><00:39:24.970><c> which</c><00:39:25.360><c> I</c><00:39:25.480><c> will</c><00:39:25.630><c> get</c>

00:39:25.740 --> 00:39:25.750 align:start position:0%
some exceptions to that which I will get
 

00:39:25.750 --> 00:39:29.850 align:start position:0%
some exceptions to that which I will get
into<00:39:25.990><c> later</c><00:39:27.900><c> Objective</c><00:39:28.900><c> C</c><00:39:28.930><c> message</c><00:39:29.560><c> sense</c>

00:39:29.850 --> 00:39:29.860 align:start position:0%
into later Objective C message sense
 

00:39:29.860 --> 00:39:31.530 align:start position:0%
into later Objective C message sense
which<00:39:30.280><c> you</c><00:39:30.430><c> see</c><00:39:30.640><c> in</c><00:39:30.700><c> the</c><00:39:30.850><c> square</c><00:39:31.180><c> bracket</c>

00:39:31.530 --> 00:39:31.540 align:start position:0%
which you see in the square bracket
 

00:39:31.540 --> 00:39:33.090 align:start position:0%
which you see in the square bracket
notation<00:39:31.570><c> there</c><00:39:32.230><c> if</c><00:39:32.410><c> you</c><00:39:32.620><c> haven't</c><00:39:32.770><c> seen</c><00:39:33.010><c> this</c>

00:39:33.090 --> 00:39:33.100 align:start position:0%
notation there if you haven't seen this
 

00:39:33.100 --> 00:39:35.460 align:start position:0%
notation there if you haven't seen this
before<00:39:33.160><c> this</c><00:39:34.120><c> really</c><00:39:34.420><c> is</c><00:39:34.510><c> a</c><00:39:34.570><c> typed</c><00:39:34.870><c> expression</c>

00:39:35.460 --> 00:39:35.470 align:start position:0%
before this really is a typed expression
 

00:39:35.470 --> 00:39:38.040 align:start position:0%
before this really is a typed expression
so<00:39:36.010><c> you</c><00:39:36.040><c> can</c><00:39:36.400><c> use</c><00:39:36.580><c> that</c><00:39:36.790><c> anywhere</c><00:39:37.210><c> you</c><00:39:38.020><c> have</c>

00:39:38.040 --> 00:39:38.050 align:start position:0%
so you can use that anywhere you have
 

00:39:38.050 --> 00:39:40.190 align:start position:0%
so you can use that anywhere you have
C++<00:39:38.650><c> expressions</c><00:39:39.130><c> in</c><00:39:39.250><c> your</c><00:39:39.340><c> code</c><00:39:39.520><c> and</c><00:39:39.760><c> an</c>

00:39:40.190 --> 00:39:40.200 align:start position:0%
C++ expressions in your code and an
 

00:39:40.200 --> 00:39:41.790 align:start position:0%
C++ expressions in your code and an
examples<00:39:41.200><c> forthcoming</c>

00:39:41.790 --> 00:39:41.800 align:start position:0%
examples forthcoming
 

00:39:41.800 --> 00:39:45.870 align:start position:0%
examples forthcoming
and<00:39:42.210><c> finally</c><00:39:43.210><c> objective</c><00:39:43.750><c> C++</c><00:39:44.380><c> relies</c><00:39:45.280><c> on</c><00:39:45.310><c> the</c>

00:39:45.870 --> 00:39:45.880 align:start position:0%
and finally objective C++ relies on the
 

00:39:45.880 --> 00:39:49.170 align:start position:0%
and finally objective C++ relies on the
C++<00:39:46.660><c> type</c><00:39:47.650><c> checking</c><00:39:47.950><c> semantics</c><00:39:48.640><c> for</c><00:39:48.730><c> some</c><00:39:49.030><c> of</c>

00:39:49.170 --> 00:39:49.180 align:start position:0%
C++ type checking semantics for some of
 

00:39:49.180 --> 00:39:51.540 align:start position:0%
C++ type checking semantics for some of
the<00:39:49.330><c> lower-level</c><00:39:50.110><c> type</c><00:39:50.620><c> checking</c><00:39:50.920><c> and</c><00:39:51.280><c> the</c>

00:39:51.540 --> 00:39:51.550 align:start position:0%
the lower-level type checking and the
 

00:39:51.550 --> 00:39:53.610 align:start position:0%
the lower-level type checking and the
reason<00:39:51.820><c> I</c><00:39:51.910><c> bring</c><00:39:52.120><c> this</c><00:39:52.180><c> up</c><00:39:52.510><c> is</c><00:39:52.780><c> that</c><00:39:52.930><c> if</c><00:39:53.200><c> you're</c>

00:39:53.610 --> 00:39:53.620 align:start position:0%
reason I bring this up is that if you're
 

00:39:53.620 --> 00:39:57.000 align:start position:0%
reason I bring this up is that if you're
used<00:39:53.800><c> to</c><00:39:53.920><c> objective-c</c><00:39:54.660><c> coding</c><00:39:55.660><c> it</c><00:39:56.380><c> relies</c><00:39:56.800><c> on</c>

00:39:57.000 --> 00:39:57.010 align:start position:0%
used to objective-c coding it relies on
 

00:39:57.010 --> 00:39:59.550 align:start position:0%
used to objective-c coding it relies on
C<00:39:57.400><c> type</c><00:39:58.030><c> checking</c><00:39:58.330><c> so</c><00:39:58.810><c> for</c><00:39:58.990><c> instance</c><00:39:59.350><c> if</c><00:39:59.470><c> you</c>

00:39:59.550 --> 00:39:59.560 align:start position:0%
C type checking so for instance if you
 

00:39:59.560 --> 00:40:02.400 align:start position:0%
C type checking so for instance if you
have<00:39:59.740><c> a</c><00:39:59.770><c> sign</c><00:40:00.670><c> character</c><00:40:01.000><c> and</c><00:40:01.510><c> you</c><00:40:02.080><c> assign</c><00:40:02.380><c> it</c>

00:40:02.400 --> 00:40:02.410 align:start position:0%
have a sign character and you assign it
 

00:40:02.410 --> 00:40:05.400 align:start position:0%
have a sign character and you assign it
to<00:40:02.560><c> an</c><00:40:02.740><c> unsigned</c><00:40:03.220><c> character</c><00:40:03.700><c> in</c><00:40:03.880><c> C</c><00:40:04.450><c> that's</c>

00:40:05.400 --> 00:40:05.410 align:start position:0%
to an unsigned character in C that's
 

00:40:05.410 --> 00:40:06.760 align:start position:0%
to an unsigned character in C that's
usually<00:40:05.740><c> fine</c>

00:40:06.760 --> 00:40:06.770 align:start position:0%
usually fine
 

00:40:06.770 --> 00:40:08.680 align:start position:0%
usually fine
the<00:40:06.920><c> C</c><00:40:07.070><c> compiler</c><00:40:07.340><c> would</c><00:40:07.610><c> not</c><00:40:07.730><c> complain</c><00:40:08.060><c> what</c>

00:40:08.680 --> 00:40:08.690 align:start position:0%
the C compiler would not complain what
 

00:40:08.690 --> 00:40:10.660 align:start position:0%
the C compiler would not complain what
you'll<00:40:08.869><c> find</c><00:40:09.170><c> here</c><00:40:09.500><c> is</c><00:40:09.650><c> that</c><00:40:09.830><c> the</c><00:40:10.280><c> seat</c><00:40:10.520><c> you</c>

00:40:10.660 --> 00:40:10.670 align:start position:0%
you'll find here is that the seat you
 

00:40:10.670 --> 00:40:13.690 align:start position:0%
you'll find here is that the seat you
know<00:40:10.760><c> the</c><00:40:10.910><c> C++</c><00:40:11.450><c> part</c><00:40:11.780><c> of</c><00:40:12.410><c> objective</c><00:40:12.980><c> C++</c><00:40:13.520><c> will</c>

00:40:13.690 --> 00:40:13.700 align:start position:0%
know the C++ part of objective C++ will
 

00:40:13.700 --> 00:40:16.870 align:start position:0%
know the C++ part of objective C++ will
you<00:40:14.060><c> know</c><00:40:14.180><c> raise</c><00:40:14.810><c> its</c><00:40:15.020><c> head</c><00:40:15.080><c> and</c><00:40:15.470><c> complain</c><00:40:15.980><c> in</c>

00:40:16.870 --> 00:40:16.880 align:start position:0%
you know raise its head and complain in
 

00:40:16.880 --> 00:40:18.880 align:start position:0%
you know raise its head and complain in
other<00:40:17.030><c> words</c><00:40:17.210><c> some</c><00:40:17.780><c> objective</c><00:40:18.290><c> some</c><00:40:18.560><c> code</c>

00:40:18.880 --> 00:40:18.890 align:start position:0%
other words some objective some code
 

00:40:18.890 --> 00:40:20.620 align:start position:0%
other words some objective some code
that<00:40:18.920><c> is</c><00:40:19.160><c> valid</c><00:40:19.369><c> Objective</c><00:40:19.850><c> C</c><00:40:19.880><c> code</c><00:40:20.210><c> might</c><00:40:20.480><c> not</c>

00:40:20.620 --> 00:40:20.630 align:start position:0%
that is valid Objective C code might not
 

00:40:20.630 --> 00:40:23.109 align:start position:0%
that is valid Objective C code might not
necessarily<00:40:20.780><c> be</c><00:40:21.260><c> valid</c><00:40:22.070><c> objective</c><00:40:22.340><c> C++</c><00:40:22.910><c> code</c>

00:40:23.109 --> 00:40:23.119 align:start position:0%
necessarily be valid objective C++ code
 

00:40:23.119 --> 00:40:26.040 align:start position:0%
necessarily be valid objective C++ code
because<00:40:23.450><c> of</c><00:40:23.630><c> the</c><00:40:23.930><c> increased</c><00:40:24.410><c> C++</c><00:40:24.980><c> strictness</c>

00:40:26.040 --> 00:40:26.050 align:start position:0%
because of the increased C++ strictness
 

00:40:26.050 --> 00:40:29.500 align:start position:0%
because of the increased C++ strictness
so<00:40:27.050><c> here</c><00:40:27.230><c> I</c><00:40:27.290><c> I</c><00:40:27.820><c> concocted</c><00:40:28.820><c> sort</c><00:40:29.210><c> of</c><00:40:29.270><c> a</c><00:40:29.330><c> too</c>

00:40:29.500 --> 00:40:29.510 align:start position:0%
so here I I concocted sort of a too
 

00:40:29.510 --> 00:40:31.270 align:start position:0%
so here I I concocted sort of a too
slight<00:40:29.720><c> example</c><00:40:30.290><c> showing</c><00:40:30.500><c> you</c><00:40:30.770><c> what</c><00:40:31.190><c> an</c>

00:40:31.270 --> 00:40:31.280 align:start position:0%
slight example showing you what an
 

00:40:31.280 --> 00:40:33.760 align:start position:0%
slight example showing you what an
objective<00:40:31.430><c> C++</c><00:40:32.119><c> program</c><00:40:32.450><c> looks</c><00:40:32.660><c> like</c><00:40:32.840><c> and</c><00:40:33.050><c> for</c>

00:40:33.760 --> 00:40:33.770 align:start position:0%
objective C++ program looks like and for
 

00:40:33.770 --> 00:40:35.980 align:start position:0%
objective C++ program looks like and for
ease<00:40:33.950><c> of</c><00:40:34.250><c> understanding</c><00:40:34.670><c> I've</c><00:40:35.630><c> color-coded</c>

00:40:35.980 --> 00:40:35.990 align:start position:0%
ease of understanding I've color-coded
 

00:40:35.990 --> 00:40:38.830 align:start position:0%
ease of understanding I've color-coded
it<00:40:36.410><c> so</c><00:40:36.619><c> that</c><00:40:36.770><c> the</c><00:40:37.400><c> Objective</c><00:40:37.880><c> C</c><00:40:37.910><c> part</c><00:40:38.420><c> of</c><00:40:38.570><c> it</c><00:40:38.690><c> is</c>

00:40:38.830 --> 00:40:38.840 align:start position:0%
it so that the Objective C part of it is
 

00:40:38.840 --> 00:40:42.400 align:start position:0%
it so that the Objective C part of it is
in<00:40:38.960><c> blue</c><00:40:39.170><c> and</c><00:40:39.410><c> the</c><00:40:39.530><c> C++</c><00:40:40.250><c> part</c><00:40:40.520><c> is</c><00:40:40.640><c> in</c><00:40:40.790><c> yellow</c><00:40:41.410><c> so</c>

00:40:42.400 --> 00:40:42.410 align:start position:0%
in blue and the C++ part is in yellow so
 

00:40:42.410 --> 00:40:44.350 align:start position:0%
in blue and the C++ part is in yellow so
you<00:40:42.470><c> see</c><00:40:43.070><c> first</c><00:40:43.310><c> off</c><00:40:43.550><c> we</c><00:40:43.790><c> you</c><00:40:44.000><c> know</c><00:40:44.090><c> we</c><00:40:44.210><c> call</c>

00:40:44.350 --> 00:40:44.360 align:start position:0%
you see first off we you know we call
 

00:40:44.360 --> 00:40:46.560 align:start position:0%
you see first off we you know we call
this<00:40:44.480><c> hello</c><00:40:44.750><c> world</c><00:40:45.020><c> as</c><00:40:45.260><c> we</c><00:40:45.770><c> always</c><00:40:46.040><c> should</c>

00:40:46.560 --> 00:40:46.570 align:start position:0%
this hello world as we always should
 

00:40:46.570 --> 00:40:49.870 align:start position:0%
this hello world as we always should
then<00:40:47.570><c> we</c><00:40:47.720><c> import</c><00:40:48.290><c> cocoa</c><00:40:48.680><c> cocoa</c><00:40:49.190><c> that</c><00:40:49.400><c> H</c><00:40:49.610><c> that's</c>

00:40:49.870 --> 00:40:49.880 align:start position:0%
then we import cocoa cocoa that H that's
 

00:40:49.880 --> 00:40:52.570 align:start position:0%
then we import cocoa cocoa that H that's
a<00:40:50.000><c> typical</c><00:40:50.540><c> Objective</c><00:40:51.140><c> C</c><00:40:51.170><c> thing</c><00:40:51.530><c> and</c><00:40:51.770><c> by</c><00:40:52.520><c> the</c>

00:40:52.570 --> 00:40:52.580 align:start position:0%
a typical Objective C thing and by the
 

00:40:52.580 --> 00:40:55.540 align:start position:0%
a typical Objective C thing and by the
way<00:40:53.290><c> John</c><00:40:54.290><c> mentioned</c><00:40:54.710><c> before</c><00:40:54.980><c> that</c><00:40:55.010><c> you</c><00:40:55.310><c> can</c>

00:40:55.540 --> 00:40:55.550 align:start position:0%
way John mentioned before that you can
 

00:40:55.550 --> 00:40:58.600 align:start position:0%
way John mentioned before that you can
use<00:40:55.750><c> precompiled</c><00:40:56.750><c> headers</c><00:40:56.960><c> with</c><00:40:57.140><c> c++</c><00:40:57.860><c> now</c><00:40:58.070><c> you</c>

00:40:58.600 --> 00:40:58.610 align:start position:0%
use precompiled headers with c++ now you
 

00:40:58.610 --> 00:40:59.800 align:start position:0%
use precompiled headers with c++ now you
will<00:40:58.730><c> also</c><00:40:59.030><c> be</c><00:40:59.150><c> able</c><00:40:59.240><c> to</c><00:40:59.360><c> use</c><00:40:59.570><c> it</c><00:40:59.720><c> with</c>

00:40:59.800 --> 00:40:59.810 align:start position:0%
will also be able to use it with
 

00:40:59.810 --> 00:41:01.900 align:start position:0%
will also be able to use it with
objective<00:41:00.260><c> c++</c><00:41:00.770><c> so</c><00:41:00.980><c> you</c><00:41:01.490><c> know</c><00:41:01.580><c> there</c><00:41:01.730><c> will</c><00:41:01.850><c> be</c>

00:41:01.900 --> 00:41:01.910 align:start position:0%
objective c++ so you know there will be
 

00:41:01.910 --> 00:41:05.140 align:start position:0%
objective c++ so you know there will be
a<00:41:02.030><c> cocoa</c><00:41:02.690><c> PP</c><00:41:03.290><c> on</c><00:41:04.130><c> your</c><00:41:04.340><c> system</c><00:41:04.730><c> and</c><00:41:04.820><c> this</c><00:41:04.970><c> whole</c>

00:41:05.140 --> 00:41:05.150 align:start position:0%
a cocoa PP on your system and this whole
 

00:41:05.150 --> 00:41:06.850 align:start position:0%
a cocoa PP on your system and this whole
thing<00:41:05.300><c> is</c><00:41:05.330><c> released</c><00:41:05.720><c> so</c><00:41:05.840><c> this</c><00:41:05.990><c> will</c><00:41:06.140><c> go</c><00:41:06.260><c> very</c>

00:41:06.850 --> 00:41:06.860 align:start position:0%
thing is released so this will go very
 

00:41:06.860 --> 00:41:09.370 align:start position:0%
thing is released so this will go very
fast<00:41:07.100><c> Danny</c><00:41:08.090><c> in</c><00:41:08.360><c> yellow</c><00:41:08.690><c> you</c><00:41:08.750><c> see</c><00:41:08.840><c> a</c><00:41:09.020><c> four</c><00:41:09.290><c> word</c>

00:41:09.370 --> 00:41:09.380 align:start position:0%
fast Danny in yellow you see a four word
 

00:41:09.380 --> 00:41:12.400 align:start position:0%
fast Danny in yellow you see a four word
declaration<00:41:09.950><c> of</c><00:41:10.100><c> a</c><00:41:10.250><c> c++</c><00:41:10.970><c> class</c><00:41:11.210><c> then</c><00:41:12.080><c> we</c><00:41:12.109><c> get</c>

00:41:12.400 --> 00:41:12.410 align:start position:0%
declaration of a c++ class then we get
 

00:41:12.410 --> 00:41:16.150 align:start position:0%
declaration of a c++ class then we get
to<00:41:13.210><c> a</c><00:41:14.210><c> declaration</c><00:41:14.750><c> of</c><00:41:15.260><c> an</c><00:41:15.410><c> objective-c</c><00:41:15.859><c> class</c>

00:41:16.150 --> 00:41:16.160 align:start position:0%
to a declaration of an objective-c class
 

00:41:16.160 --> 00:41:18.220 align:start position:0%
to a declaration of an objective-c class
which<00:41:16.580><c> we</c><00:41:16.730><c> called</c><00:41:16.940><c> print</c><00:41:17.210><c> log</c><00:41:17.420><c> we</c><00:41:17.750><c> derive</c><00:41:18.050><c> it</c>

00:41:18.220 --> 00:41:18.230 align:start position:0%
which we called print log we derive it
 

00:41:18.230 --> 00:41:19.599 align:start position:0%
which we called print log we derive it
from<00:41:18.320><c> Anna's</c><00:41:18.619><c> object</c><00:41:19.040><c> which</c><00:41:19.130><c> is</c><00:41:19.280><c> sort</c><00:41:19.430><c> of</c><00:41:19.460><c> the</c>

00:41:19.599 --> 00:41:19.609 align:start position:0%
from Anna's object which is sort of the
 

00:41:19.609 --> 00:41:22.540 align:start position:0%
from Anna's object which is sort of the
root<00:41:19.760><c> of</c><00:41:19.910><c> the</c><00:41:20.230><c> cocoa</c><00:41:21.230><c> object</c><00:41:21.830><c> hierarchy</c><00:41:21.980><c> and</c>

00:41:22.540 --> 00:41:22.550 align:start position:0%
root of the cocoa object hierarchy and
 

00:41:22.550 --> 00:41:24.609 align:start position:0%
root of the cocoa object hierarchy and
we<00:41:22.850><c> have</c><00:41:22.970><c> a</c><00:41:23.000><c> pointer</c><00:41:23.420><c> to</c><00:41:23.450><c> the</c><00:41:23.690><c> C++</c><00:41:24.170><c> class</c><00:41:24.410><c> we</c>

00:41:24.609 --> 00:41:24.619 align:start position:0%
we have a pointer to the C++ class we
 

00:41:24.619 --> 00:41:26.590 align:start position:0%
we have a pointer to the C++ class we
previously<00:41:25.070><c> mentioned</c><00:41:25.430><c> and</c><00:41:25.820><c> then</c><00:41:26.180><c> we</c><00:41:26.359><c> you</c>

00:41:26.590 --> 00:41:26.600 align:start position:0%
previously mentioned and then we you
 

00:41:26.600 --> 00:41:28.060 align:start position:0%
previously mentioned and then we you
know<00:41:26.630><c> declare</c><00:41:26.990><c> prototypes</c><00:41:27.440><c> for</c><00:41:27.590><c> two</c><00:41:27.740><c> methods</c>

00:41:28.060 --> 00:41:28.070 align:start position:0%
know declare prototypes for two methods
 

00:41:28.070 --> 00:41:31.930 align:start position:0%
know declare prototypes for two methods
in<00:41:28.910><c> Objective</c><00:41:29.330><c> C</c><00:41:29.950><c> then</c><00:41:30.950><c> here</c><00:41:31.340><c> this</c><00:41:31.670><c> is</c><00:41:31.790><c> the</c>

00:41:31.930 --> 00:41:31.940 align:start position:0%
in Objective C then here this is the
 

00:41:31.940 --> 00:41:36.250 align:start position:0%
in Objective C then here this is the
second<00:41:32.240><c> part</c><00:41:32.450><c> of</c><00:41:32.480><c> the</c><00:41:32.570><c> example</c><00:41:33.550><c> first</c><00:41:34.550><c> we</c><00:41:35.260><c> you</c>

00:41:36.250 --> 00:41:36.260 align:start position:0%
second part of the example first we you
 

00:41:36.260 --> 00:41:38.620 align:start position:0%
second part of the example first we you
know<00:41:36.350><c> flash</c><00:41:36.619><c> out</c><00:41:36.800><c> the</c><00:41:37.010><c> C++</c><00:41:37.820><c> class</c><00:41:38.090><c> so</c><00:41:38.390><c> you</c><00:41:38.450><c> have</c>

00:41:38.620 --> 00:41:38.630 align:start position:0%
know flash out the C++ class so you have
 

00:41:38.630 --> 00:41:42.520 align:start position:0%
know flash out the C++ class so you have
fellow<00:41:38.869><c> world</c><00:41:39.080><c> here</c><00:41:39.740><c> we</c><00:41:39.980><c> have</c><00:41:40.190><c> an</c><00:41:40.310><c> ID</c><00:41:40.550><c> and</c><00:41:41.530><c> you</c>

00:41:42.520 --> 00:41:42.530 align:start position:0%
fellow world here we have an ID and you
 

00:41:42.530 --> 00:41:44.349 align:start position:0%
fellow world here we have an ID and you
know<00:41:42.650><c> a</c><00:41:42.680><c> member</c><00:41:43.010><c> variable</c><00:41:43.550><c> of</c><00:41:43.640><c> type</c><00:41:43.820><c> ID</c><00:41:44.060><c> which</c>

00:41:44.349 --> 00:41:44.359 align:start position:0%
know a member variable of type ID which
 

00:41:44.359 --> 00:41:48.580 align:start position:0%
know a member variable of type ID which
is<00:41:44.510><c> sort</c><00:41:44.660><c> of</c><00:41:45.640><c> analogous</c><00:41:46.640><c> to</c><00:41:47.140><c> java.lang</c><00:41:48.140><c> object</c>

00:41:48.580 --> 00:41:48.590 align:start position:0%
is sort of analogous to java.lang object
 

00:41:48.590 --> 00:41:49.810 align:start position:0%
is sort of analogous to java.lang object
if<00:41:48.710><c> you've</c><00:41:48.830><c> used</c><00:41:48.980><c> java</c><00:41:49.250><c> it's</c><00:41:49.520><c> sort</c><00:41:49.670><c> of</c><00:41:49.700><c> a</c>

00:41:49.810 --> 00:41:49.820 align:start position:0%
if you've used java it's sort of a
 

00:41:49.820 --> 00:41:51.180 align:start position:0%
if you've used java it's sort of a
generic<00:41:50.090><c> pointer</c><00:41:50.480><c> that</c><00:41:50.630><c> can</c><00:41:50.750><c> point</c><00:41:50.960><c> to</c><00:41:51.080><c> any</c>

00:41:51.180 --> 00:41:51.190 align:start position:0%
generic pointer that can point to any
 

00:41:51.190 --> 00:41:54.730 align:start position:0%
generic pointer that can point to any
objective-c<00:41:52.190><c> object</c><00:41:52.990><c> and</c><00:41:53.990><c> we</c><00:41:54.109><c> define</c><00:41:54.440><c> any</c><00:41:54.619><c> now</c>

00:41:54.730 --> 00:41:54.740 align:start position:0%
objective-c object and we define any now
 

00:41:54.740 --> 00:41:56.620 align:start position:0%
objective-c object and we define any now
I<00:41:54.770><c> can</c><00:41:54.980><c> structure</c><00:41:55.250><c> an</c><00:41:55.430><c> instructor</c><00:41:55.970><c> so</c><00:41:56.000><c> you</c><00:41:56.300><c> can</c>

00:41:56.620 --> 00:41:56.630 align:start position:0%
I can structure an instructor so you can
 

00:41:56.630 --> 00:41:58.540 align:start position:0%
I can structure an instructor so you can
see<00:41:56.780><c> in</c><00:41:56.900><c> a</c><00:41:56.990><c> constructor</c><00:41:57.560><c> for</c><00:41:57.710><c> this</c><00:41:57.859><c> c++</c><00:41:58.369><c> class</c>

00:41:58.540 --> 00:41:58.550 align:start position:0%
see in a constructor for this c++ class
 

00:41:58.550 --> 00:42:01.090 align:start position:0%
see in a constructor for this c++ class
we<00:41:58.820><c> actually</c><00:41:58.850><c> allocate</c><00:41:59.240><c> an</c><00:41:59.630><c> init</c><00:42:00.100><c> the</c>

00:42:01.090 --> 00:42:01.100 align:start position:0%
we actually allocate an init the
 

00:42:01.100 --> 00:42:02.950 align:start position:0%
we actually allocate an init the
corresponding<00:42:01.820><c> objective-c</c><00:42:02.270><c> class</c><00:42:02.660><c> and</c><00:42:02.869><c> that</c>

00:42:02.950 --> 00:42:02.960 align:start position:0%
corresponding objective-c class and that
 

00:42:02.960 --> 00:42:05.109 align:start position:0%
corresponding objective-c class and that
is<00:42:03.080><c> by</c><00:42:03.200><c> the</c><00:42:03.260><c> way</c><00:42:03.500><c> how</c><00:42:04.100><c> you</c><00:42:04.160><c> usually</c><00:42:04.430><c> create</c><00:42:04.940><c> an</c>

00:42:05.109 --> 00:42:05.119 align:start position:0%
is by the way how you usually create an
 

00:42:05.119 --> 00:42:06.820 align:start position:0%
is by the way how you usually create an
objective-c<00:42:05.540><c> object</c><00:42:06.050><c> to</c><00:42:06.109><c> this</c><00:42:06.230><c> alloc</c><00:42:06.560><c> init</c>

00:42:06.820 --> 00:42:06.830 align:start position:0%
objective-c object to this alloc init
 

00:42:06.830 --> 00:42:10.480 align:start position:0%
objective-c object to this alloc init
idiom<00:42:07.609><c> and</c><00:42:07.850><c> then</c><00:42:08.540><c> we</c><00:42:08.660><c> sort</c><00:42:08.869><c> of</c><00:42:08.960><c> you</c><00:42:09.320><c> know</c><00:42:09.490><c> we</c>

00:42:10.480 --> 00:42:10.490 align:start position:0%
idiom and then we sort of you know we
 

00:42:10.490 --> 00:42:12.370 align:start position:0%
idiom and then we sort of you know we
you<00:42:10.850><c> know</c><00:42:10.940><c> we</c><00:42:11.240><c> say</c><00:42:11.390><c> hi</c><00:42:11.570><c> so</c><00:42:11.869><c> we</c><00:42:11.960><c> call</c><00:42:12.109><c> printf</c>

00:42:12.370 --> 00:42:12.380 align:start position:0%
you know we say hi so we call printf
 

00:42:12.380 --> 00:42:16.800 align:start position:0%
you know we say hi so we call printf
which<00:42:12.650><c> is</c><00:42:12.800><c> a</c><00:42:12.830><c> standard</c><00:42:13.760><c> C</c><00:42:13.970><c> function</c><00:42:14.000><c> of</c><00:42:14.450><c> course</c>

00:42:16.800 --> 00:42:16.810 align:start position:0%
 
 

00:42:16.810 --> 00:42:18.910 align:start position:0%
 
then<00:42:17.810><c> you</c><00:42:17.900><c> have</c><00:42:17.930><c> say</c><00:42:18.230><c> hello</c><00:42:18.560><c> which</c><00:42:18.710><c> basically</c>

00:42:18.910 --> 00:42:18.920 align:start position:0%
then you have say hello which basically
 

00:42:18.920 --> 00:42:20.560 align:start position:0%
then you have say hello which basically
caught<00:42:19.220><c> you</c><00:42:19.369><c> know</c><00:42:19.460><c> turns</c><00:42:19.820><c> around</c><00:42:19.940><c> and</c>

00:42:20.560 --> 00:42:20.570 align:start position:0%
caught you know turns around and
 

00:42:20.570 --> 00:42:22.990 align:start position:0%
caught you know turns around and
folks<00:42:20.840><c> a</c><00:42:20.960><c> method</c><00:42:21.290><c> called</c><00:42:21.560><c> say</c><00:42:21.770><c> hi</c><00:42:21.950><c> in</c><00:42:22.730><c> the</c>

00:42:22.990 --> 00:42:23.000 align:start position:0%
folks a method called say hi in the
 

00:42:23.000 --> 00:42:25.600 align:start position:0%
folks a method called say hi in the
objective-c<00:42:23.570><c> class</c><00:42:23.930><c> and</c><00:42:24.200><c> then</c><00:42:24.470><c> below</c><00:42:24.800><c> we</c><00:42:25.100><c> have</c>

00:42:25.600 --> 00:42:25.610 align:start position:0%
objective-c class and then below we have
 

00:42:25.610 --> 00:42:27.910 align:start position:0%
objective-c class and then below we have
a<00:42:25.670><c> an</c><00:42:26.260><c> implementation</c><00:42:27.260><c> of</c><00:42:27.350><c> the</c><00:42:27.470><c> projective</c>

00:42:27.910 --> 00:42:27.920 align:start position:0%
a an implementation of the projective
 

00:42:27.920 --> 00:42:30.760 align:start position:0%
a an implementation of the projective
c-class<00:42:28.310><c> which</c><00:42:29.240><c> is</c><00:42:29.390><c> in</c><00:42:29.510><c> blue</c><00:42:29.630><c> so</c><00:42:30.380><c> you</c><00:42:30.440><c> can</c><00:42:30.620><c> sort</c>

00:42:30.760 --> 00:42:30.770 align:start position:0%
c-class which is in blue so you can sort
 

00:42:30.770 --> 00:42:34.510 align:start position:0%
c-class which is in blue so you can sort
of<00:42:30.860><c> see</c><00:42:31.010><c> the</c><00:42:31.070><c> notation</c><00:42:31.400><c> here</c><00:42:33.010><c> you</c><00:42:34.010><c> know</c><00:42:34.070><c> NS</c><00:42:34.340><c> log</c>

00:42:34.510 --> 00:42:34.520 align:start position:0%
of see the notation here you know NS log
 

00:42:34.520 --> 00:42:36.970 align:start position:0%
of see the notation here you know NS log
is<00:42:34.760><c> also</c><00:42:35.060><c> a</c><00:42:35.090><c> standard</c><00:42:35.420><c> Cocoa</c><00:42:35.860><c> function</c><00:42:36.860><c> it's</c>

00:42:36.970 --> 00:42:36.980 align:start position:0%
is also a standard Cocoa function it's
 

00:42:36.980 --> 00:42:38.830 align:start position:0%
is also a standard Cocoa function it's
actually<00:42:37.250><c> a</c><00:42:37.280><c> C</c><00:42:37.460><c> function</c><00:42:37.880><c> if</c><00:42:38.030><c> you</c><00:42:38.120><c> look</c><00:42:38.390><c> at</c><00:42:38.540><c> it</c>

00:42:38.830 --> 00:42:38.840 align:start position:0%
actually a C function if you look at it
 

00:42:38.840 --> 00:42:40.360 align:start position:0%
actually a C function if you look at it
so<00:42:39.230><c> it</c><00:42:39.320><c> basically</c><00:42:39.410><c> prints</c><00:42:39.830><c> hello</c><00:42:39.980><c> world</c><00:42:40.070><c> on</c>

00:42:40.360 --> 00:42:40.370 align:start position:0%
so it basically prints hello world on
 

00:42:40.370 --> 00:42:42.610 align:start position:0%
so it basically prints hello world on
the<00:42:40.430><c> screen</c><00:42:40.580><c> and</c><00:42:41.000><c> the</c><00:42:41.900><c> example</c><00:42:42.320><c> is</c><00:42:42.380><c> sort</c><00:42:42.530><c> of</c>

00:42:42.610 --> 00:42:42.620 align:start position:0%
the screen and the example is sort of
 

00:42:42.620 --> 00:42:44.200 align:start position:0%
the screen and the example is sort of
silly<00:42:42.830><c> as</c><00:42:43.010><c> all</c><00:42:43.190><c> examples</c><00:42:43.670><c> are</c><00:42:43.790><c> but</c><00:42:43.970><c> it</c><00:42:44.030><c> kind</c><00:42:44.150><c> of</c>

00:42:44.200 --> 00:42:44.210 align:start position:0%
silly as all examples are but it kind of
 

00:42:44.210 --> 00:42:45.670 align:start position:0%
silly as all examples are but it kind of
shows<00:42:44.390><c> you</c><00:42:44.540><c> how</c><00:42:44.630><c> you</c><00:42:44.690><c> can</c><00:42:44.840><c> mix</c><00:42:45.020><c> and</c><00:42:45.110><c> match</c><00:42:45.320><c> so</c>

00:42:45.670 --> 00:42:45.680 align:start position:0%
shows you how you can mix and match so
 

00:42:45.680 --> 00:42:47.530 align:start position:0%
shows you how you can mix and match so
you<00:42:46.070><c> can</c><00:42:46.250><c> see</c><00:42:46.430><c> within</c><00:42:46.640><c> the</c><00:42:46.850><c> Objective</c><00:42:47.210><c> C</c><00:42:47.240><c> we</c>

00:42:47.530 --> 00:42:47.540 align:start position:0%
you can see within the Objective C we
 

00:42:47.540 --> 00:42:50.140 align:start position:0%
you can see within the Objective C we
actually<00:42:47.810><c> use</c><00:42:47.930><c> P</c><00:42:48.290><c> arrow</c><00:42:48.800><c> say</c><00:42:49.190><c> hi</c><00:42:49.400><c> to</c><00:42:49.730><c> call</c><00:42:49.940><c> the</c>

00:42:50.140 --> 00:42:50.150 align:start position:0%
actually use P arrow say hi to call the
 

00:42:50.150 --> 00:42:53.350 align:start position:0%
actually use P arrow say hi to call the
C++<00:42:51.080><c> method</c><00:42:51.500><c> and</c><00:42:51.680><c> vice-versa</c><00:42:52.460><c> on</c><00:42:52.640><c> CL</c><00:42:53.120><c> from</c><00:42:53.210><c> a</c>

00:42:53.350 --> 00:42:53.360 align:start position:0%
C++ method and vice-versa on CL from a
 

00:42:53.360 --> 00:42:55.300 align:start position:0%
C++ method and vice-versa on CL from a
C++<00:42:53.780><c> class</c><00:42:53.990><c> you</c><00:42:54.110><c> can</c><00:42:54.230><c> invoke</c><00:42:54.470><c> an</c><00:42:54.830><c> objective-c</c>

00:42:55.300 --> 00:42:55.310 align:start position:0%
C++ class you can invoke an objective-c
 

00:42:55.310 --> 00:43:00.400 align:start position:0%
C++ class you can invoke an objective-c
method<00:42:56.740><c> right</c><00:42:58.360><c> okay</c><00:42:59.360><c> and</c><00:42:59.570><c> now</c><00:42:59.720><c> we</c><00:42:59.780><c> get</c><00:43:00.200><c> to</c><00:43:00.380><c> the</c>

00:43:00.400 --> 00:43:00.410 align:start position:0%
method right okay and now we get to the
 

00:43:00.410 --> 00:43:04.110 align:start position:0%
method right okay and now we get to the
sort<00:43:00.740><c> of</c><00:43:00.770><c> the</c><00:43:02.320><c> important</c><00:43:03.320><c> part</c><00:43:03.530><c> of</c><00:43:03.620><c> this</c><00:43:03.740><c> talk</c>

00:43:04.110 --> 00:43:04.120 align:start position:0%
sort of the important part of this talk
 

00:43:04.120 --> 00:43:07.840 align:start position:0%
sort of the important part of this talk
in<00:43:05.120><c> the</c><00:43:05.630><c> sense</c><00:43:05.900><c> that</c><00:43:06.220><c> we'd</c><00:43:07.220><c> like</c><00:43:07.400><c> to</c><00:43:07.580><c> sort</c><00:43:07.790><c> of</c>

00:43:07.840 --> 00:43:07.850 align:start position:0%
in the sense that we'd like to sort of
 

00:43:07.850 --> 00:43:10.270 align:start position:0%
in the sense that we'd like to sort of
emphasize<00:43:08.090><c> why</c><00:43:09.050><c> certain</c><00:43:09.470><c> things</c><00:43:09.710><c> cannot</c><00:43:10.070><c> be</c>

00:43:10.270 --> 00:43:10.280 align:start position:0%
emphasize why certain things cannot be
 

00:43:10.280 --> 00:43:13.450 align:start position:0%
emphasize why certain things cannot be
done<00:43:10.310><c> in</c><00:43:10.900><c> Objective</c><00:43:11.900><c> C</c><00:43:11.930><c> plus</c><00:43:12.230><c> plus</c><00:43:12.470><c> and</c><00:43:12.650><c> the</c>

00:43:13.450 --> 00:43:13.460 align:start position:0%
done in Objective C plus plus and the
 

00:43:13.460 --> 00:43:14.920 align:start position:0%
done in Objective C plus plus and the
reason<00:43:13.850><c> most</c><00:43:14.000><c> of</c><00:43:14.150><c> these</c><00:43:14.270><c> things</c><00:43:14.510><c> cannot</c><00:43:14.750><c> be</c>

00:43:14.920 --> 00:43:14.930 align:start position:0%
reason most of these things cannot be
 

00:43:14.930 --> 00:43:16.480 align:start position:0%
reason most of these things cannot be
done<00:43:15.110><c> is</c><00:43:15.350><c> what</c><00:43:15.800><c> I</c><00:43:15.860><c> mentioned</c><00:43:16.310><c> at</c><00:43:16.370><c> the</c><00:43:16.400><c> outset</c>

00:43:16.480 --> 00:43:16.490 align:start position:0%
done is what I mentioned at the outset
 

00:43:16.490 --> 00:43:18.100 align:start position:0%
done is what I mentioned at the outset
is<00:43:16.940><c> that</c><00:43:17.060><c> the</c><00:43:17.150><c> runtimes</c><00:43:17.540><c> are</c><00:43:17.690><c> separate</c>

00:43:18.100 --> 00:43:18.110 align:start position:0%
is that the runtimes are separate
 

00:43:18.110 --> 00:43:20.110 align:start position:0%
is that the runtimes are separate
because<00:43:18.800><c> they</c><00:43:19.070><c> are</c><00:43:19.190><c> separate</c><00:43:19.580><c> they</c><00:43:19.790><c> do</c><00:43:19.850><c> not</c>

00:43:20.110 --> 00:43:20.120 align:start position:0%
because they are separate they do not
 

00:43:20.120 --> 00:43:21.550 align:start position:0%
because they are separate they do not
know<00:43:20.420><c> of</c><00:43:20.600><c> one</c><00:43:20.750><c> another</c><00:43:21.020><c> and</c><00:43:21.350><c> therefore</c>

00:43:21.550 --> 00:43:21.560 align:start position:0%
know of one another and therefore
 

00:43:21.560 --> 00:43:23.620 align:start position:0%
know of one another and therefore
certain<00:43:21.950><c> things</c><00:43:22.160><c> really</c><00:43:22.340><c> cannot</c><00:43:22.610><c> happen</c><00:43:22.820><c> so</c>

00:43:23.620 --> 00:43:23.630 align:start position:0%
certain things really cannot happen so
 

00:43:23.630 --> 00:43:25.270 align:start position:0%
certain things really cannot happen so
you<00:43:24.020><c> know</c><00:43:24.110><c> the</c><00:43:24.440><c> number</c><00:43:24.680><c> one</c><00:43:24.830><c> obviously</c><00:43:25.190><c> you</c>

00:43:25.270 --> 00:43:25.280 align:start position:0%
you know the number one obviously you
 

00:43:25.280 --> 00:43:27.490 align:start position:0%
you know the number one obviously you
can't<00:43:25.520><c> do</c><00:43:25.670><c> is</c><00:43:25.790><c> mix</c><00:43:26.030><c> up</c><00:43:26.240><c> class</c><00:43:26.840><c> hierarchies</c><00:43:27.320><c> if</c>

00:43:27.490 --> 00:43:27.500 align:start position:0%
can't do is mix up class hierarchies if
 

00:43:27.500 --> 00:43:28.750 align:start position:0%
can't do is mix up class hierarchies if
you<00:43:27.620><c> have</c><00:43:27.740><c> a</c><00:43:27.770><c> you</c><00:43:27.980><c> know</c><00:43:28.070><c> higher</c><00:43:28.340><c> gifts</c><00:43:28.670><c> you've</c>

00:43:28.750 --> 00:43:28.760 align:start position:0%
you have a you know higher gifts you've
 

00:43:28.760 --> 00:43:30.700 align:start position:0%
you have a you know higher gifts you've
got<00:43:28.880><c> class</c><00:43:29.060><c> objects</c><00:43:29.540><c> that's</c><00:43:30.200><c> fine</c><00:43:30.470><c> if</c><00:43:30.680><c> you</c>

00:43:30.700 --> 00:43:30.710 align:start position:0%
got class objects that's fine if you
 

00:43:30.710 --> 00:43:32.140 align:start position:0%
got class objects that's fine if you
have<00:43:30.920><c> a</c><00:43:30.950><c> you</c><00:43:31.130><c> know</c><00:43:31.220><c> a</c><00:43:31.460><c> hierarchy</c><00:43:32.030><c> of</c>

00:43:32.140 --> 00:43:32.150 align:start position:0%
have a you know a hierarchy of
 

00:43:32.150 --> 00:43:33.550 align:start position:0%
have a you know a hierarchy of
objective-c<00:43:32.600><c> objects</c><00:43:33.050><c> that's</c><00:43:33.170><c> fine</c><00:43:33.350><c> too</c><00:43:33.530><c> you</c>

00:43:33.550 --> 00:43:33.560 align:start position:0%
objective-c objects that's fine too you
 

00:43:33.560 --> 00:43:36.610 align:start position:0%
objective-c objects that's fine too you
cannot<00:43:33.890><c> mix</c><00:43:34.100><c> them</c><00:43:34.450><c> because</c><00:43:35.450><c> it</c><00:43:35.600><c> will</c><00:43:35.720><c> just</c><00:43:35.900><c> be</c>

00:43:36.610 --> 00:43:36.620 align:start position:0%
cannot mix them because it will just be
 

00:43:36.620 --> 00:43:38.050 align:start position:0%
cannot mix them because it will just be
very<00:43:36.830><c> confusing</c><00:43:37.250><c> for</c><00:43:37.460><c> the</c><00:43:37.520><c> compiler</c><00:43:37.820><c> in</c><00:43:37.970><c> the</c>

00:43:38.050 --> 00:43:38.060 align:start position:0%
very confusing for the compiler in the
 

00:43:38.060 --> 00:43:41.830 align:start position:0%
very confusing for the compiler in the
runtime<00:43:38.770><c> as</c><00:43:39.770><c> far</c><00:43:40.040><c> as</c><00:43:40.130><c> exception</c><00:43:40.580><c> handling</c><00:43:40.840><c> we</c>

00:43:41.830 --> 00:43:41.840 align:start position:0%
runtime as far as exception handling we
 

00:43:41.840 --> 00:43:44.170 align:start position:0%
runtime as far as exception handling we
really<00:43:42.140><c> encourage</c><00:43:42.290><c> you</c><00:43:42.680><c> to</c><00:43:42.830><c> use</c><00:43:43.010><c> the</c><00:43:43.490><c> C++</c>

00:43:44.170 --> 00:43:44.180 align:start position:0%
really encourage you to use the C++
 

00:43:44.180 --> 00:43:48.010 align:start position:0%
really encourage you to use the C++
runtime<00:43:45.340><c> for</c><00:43:46.340><c> this</c><00:43:46.520><c> the</c><00:43:46.910><c> you</c><00:43:47.570><c> know</c><00:43:47.660><c> the</c><00:43:47.780><c> try</c>

00:43:48.010 --> 00:43:48.020 align:start position:0%
runtime for this the you know the try
 

00:43:48.020 --> 00:43:50.980 align:start position:0%
runtime for this the you know the try
throw<00:43:48.470><c> catch</c><00:43:48.710><c> paradigm</c><00:43:49.670><c> objective-c</c><00:43:50.600><c> does</c>

00:43:50.980 --> 00:43:50.990 align:start position:0%
throw catch paradigm objective-c does
 

00:43:50.990 --> 00:43:53.230 align:start position:0%
throw catch paradigm objective-c does
have<00:43:51.230><c> some</c><00:43:51.530><c> set</c><00:43:52.190><c> some</c><00:43:52.460><c> long</c><00:43:52.730><c> jump</c><00:43:53.000><c> based</c>

00:43:53.230 --> 00:43:53.240 align:start position:0%
have some set some long jump based
 

00:43:53.240 --> 00:43:55.780 align:start position:0%
have some set some long jump based
exceptions<00:43:54.230><c> which</c><00:43:54.950><c> are</c><00:43:55.070><c> basically</c><00:43:55.310><c> macros</c>

00:43:55.780 --> 00:43:55.790 align:start position:0%
exceptions which are basically macros
 

00:43:55.790 --> 00:43:57.600 align:start position:0%
exceptions which are basically macros
that<00:43:55.910><c> expand</c><00:43:56.300><c> and</c><00:43:56.540><c> we</c><00:43:56.780><c> really</c><00:43:57.050><c> do</c><00:43:57.170><c> not</c>

00:43:57.600 --> 00:43:57.610 align:start position:0%
that expand and we really do not
 

00:43:57.610 --> 00:43:59.470 align:start position:0%
that expand and we really do not
discourage<00:43:58.610><c> you</c><00:43:58.700><c> from</c><00:43:58.730><c> using</c><00:43:59.000><c> this</c><00:43:59.270><c> because</c>

00:43:59.470 --> 00:43:59.480 align:start position:0%
discourage you from using this because
 

00:43:59.480 --> 00:44:01.300 align:start position:0%
discourage you from using this because
C++<00:44:00.170><c> just</c><00:44:00.350><c> won't</c><00:44:00.500><c> know</c><00:44:00.530><c> what's</c><00:44:00.770><c> going</c><00:44:00.980><c> on</c><00:44:01.070><c> when</c>

00:44:01.300 --> 00:44:01.310 align:start position:0%
C++ just won't know what's going on when
 

00:44:01.310 --> 00:44:03.880 align:start position:0%
C++ just won't know what's going on when
you<00:44:01.400><c> when</c><00:44:01.670><c> you</c><00:44:01.790><c> do</c><00:44:01.910><c> this</c><00:44:02.290><c> and</c><00:44:03.290><c> one</c><00:44:03.620><c> thing</c><00:44:03.650><c> to</c>

00:44:03.880 --> 00:44:03.890 align:start position:0%
you when you do this and one thing to
 

00:44:03.890 --> 00:44:05.410 align:start position:0%
you when you do this and one thing to
keep<00:44:03.980><c> in</c><00:44:04.100><c> mind</c><00:44:04.340><c> is</c><00:44:04.490><c> that</c><00:44:04.520><c> when</c><00:44:04.790><c> you</c><00:44:04.880><c> use</c><00:44:05.090><c> C++</c>

00:44:05.410 --> 00:44:05.420 align:start position:0%
keep in mind is that when you use C++
 

00:44:05.420 --> 00:44:07.750 align:start position:0%
keep in mind is that when you use C++
exceptions<00:44:06.230><c> you</c><00:44:06.800><c> have</c><00:44:06.980><c> to</c><00:44:07.130><c> clean</c><00:44:07.370><c> up</c><00:44:07.550><c> any</c>

00:44:07.750 --> 00:44:07.760 align:start position:0%
exceptions you have to clean up any
 

00:44:07.760 --> 00:44:09.820 align:start position:0%
exceptions you have to clean up any
objective-c<00:44:08.480><c> objects</c><00:44:09.080><c> that</c><00:44:09.170><c> you</c><00:44:09.290><c> have</c><00:44:09.320><c> flying</c>

00:44:09.820 --> 00:44:09.830 align:start position:0%
objective-c objects that you have flying
 

00:44:09.830 --> 00:44:12.100 align:start position:0%
objective-c objects that you have flying
around<00:44:10.100><c> so</c><00:44:10.760><c> here</c><00:44:10.970><c> you</c><00:44:11.120><c> have</c><00:44:11.300><c> a</c><00:44:11.330><c> try</c><00:44:11.870><c> block</c>

00:44:12.100 --> 00:44:12.110 align:start position:0%
around so here you have a try block
 

00:44:12.110 --> 00:44:14.230 align:start position:0%
around so here you have a try block
where<00:44:12.410><c> we</c><00:44:12.530><c> you</c><00:44:12.950><c> know</c><00:44:13.120><c> instantiate</c><00:44:14.120><c> an</c>

00:44:14.230 --> 00:44:14.240 align:start position:0%
where we you know instantiate an
 

00:44:14.240 --> 00:44:16.270 align:start position:0%
where we you know instantiate an
objective-c<00:44:14.660><c> object</c><00:44:15.230><c> and</c><00:44:15.440><c> then</c><00:44:16.040><c> we</c><00:44:16.100><c> have</c><00:44:16.250><c> a</c>

00:44:16.270 --> 00:44:16.280 align:start position:0%
objective-c object and then we have a
 

00:44:16.280 --> 00:44:18.940 align:start position:0%
objective-c object and then we have a
catch<00:44:16.520><c> clause</c><00:44:16.820><c> which</c><00:44:17.120><c> frees</c><00:44:17.960><c> it</c><00:44:18.200><c> and</c><00:44:18.410><c> then</c><00:44:18.830><c> you</c>

00:44:18.940 --> 00:44:18.950 align:start position:0%
catch clause which frees it and then you
 

00:44:18.950 --> 00:44:20.710 align:start position:0%
catch clause which frees it and then you
re<00:44:19.100><c> throw</c><00:44:19.310><c> the</c><00:44:19.460><c> C++</c><00:44:19.940><c> exception</c><00:44:20.480><c> to</c><00:44:20.600><c> be</c>

00:44:20.710 --> 00:44:20.720 align:start position:0%
re throw the C++ exception to be
 

00:44:20.720 --> 00:44:22.960 align:start position:0%
re throw the C++ exception to be
possibly<00:44:21.410><c> caught</c><00:44:21.650><c> by</c><00:44:21.830><c> some</c><00:44:22.010><c> other</c><00:44:22.160><c> handler</c><00:44:22.550><c> in</c>

00:44:22.960 --> 00:44:22.970 align:start position:0%
possibly caught by some other handler in
 

00:44:22.970 --> 00:44:24.820 align:start position:0%
possibly caught by some other handler in
an<00:44:23.150><c> enclosing</c><00:44:23.420><c> scope</c><00:44:23.870><c> or</c><00:44:24.200><c> you</c><00:44:24.290><c> know</c><00:44:24.410><c> in</c><00:44:24.650><c> your</c>

00:44:24.820 --> 00:44:24.830 align:start position:0%
an enclosing scope or you know in your
 

00:44:24.830 --> 00:44:26.890 align:start position:0%
an enclosing scope or you know in your
in<00:44:24.980><c> your</c><00:44:25.010><c> stack</c><00:44:25.390><c> you</c><00:44:26.390><c> have</c><00:44:26.420><c> to</c><00:44:26.660><c> do</c><00:44:26.780><c> this</c>

00:44:26.890 --> 00:44:26.900 align:start position:0%
in your stack you have to do this
 

00:44:26.900 --> 00:44:28.690 align:start position:0%
in your stack you have to do this
because<00:44:27.200><c> again</c><00:44:27.350><c> the</c><00:44:27.620><c> C++</c><00:44:28.070><c> runtime</c><00:44:28.160><c> will</c><00:44:28.550><c> not</c>

00:44:28.690 --> 00:44:28.700 align:start position:0%
because again the C++ runtime will not
 

00:44:28.700 --> 00:44:30.610 align:start position:0%
because again the C++ runtime will not
know<00:44:28.880><c> about</c><00:44:29.030><c> my</c><00:44:29.690><c> objects</c><00:44:30.260><c> that</c><00:44:30.350><c> it's</c><00:44:30.500><c> an</c>

00:44:30.610 --> 00:44:30.620 align:start position:0%
know about my objects that it's an
 

00:44:30.620 --> 00:44:33.190 align:start position:0%
know about my objects that it's an
objective-c<00:44:31.130><c> class</c><00:44:31.430><c> or</c><00:44:31.700><c> what</c><00:44:31.790><c> to</c><00:44:31.910><c> do</c><00:44:32.000><c> with</c><00:44:32.150><c> it</c>

00:44:33.190 --> 00:44:33.200 align:start position:0%
objective-c class or what to do with it
 

00:44:33.200 --> 00:44:36.400 align:start position:0%
objective-c class or what to do with it
this<00:44:33.830><c> is</c><00:44:33.950><c> a</c><00:44:33.980><c> recurring</c><00:44:34.310><c> theme</c><00:44:35.170><c> C++</c><00:44:36.170><c> classes</c>

00:44:36.400 --> 00:44:36.410 align:start position:0%
this is a recurring theme C++ classes
 

00:44:36.410 --> 00:44:38.230 align:start position:0%
this is a recurring theme C++ classes
cannot<00:44:36.830><c> receive</c><00:44:37.130><c> objective-c</c><00:44:37.610><c> messages</c><00:44:38.120><c> or</c>

00:44:38.230 --> 00:44:38.240 align:start position:0%
cannot receive objective-c messages or
 

00:44:38.240 --> 00:44:41.950 align:start position:0%
cannot receive objective-c messages or
vice-versa<00:44:38.500><c> this</c><00:44:39.500><c> is</c><00:44:40.030><c> fairly</c><00:44:41.030><c> trivial</c><00:44:41.300><c> I</c><00:44:41.720><c> mean</c>

00:44:41.950 --> 00:44:41.960 align:start position:0%
vice-versa this is fairly trivial I mean
 

00:44:41.960 --> 00:44:44.680 align:start position:0%
vice-versa this is fairly trivial I mean
you<00:44:42.050><c> cannot</c><00:44:42.320><c> the</c><00:44:42.730><c> functions</c><00:44:43.730><c> in</c><00:44:43.880><c> c++</c><00:44:44.060><c> that</c><00:44:44.630><c> you</c>

00:44:44.680 --> 00:44:44.690 align:start position:0%
you cannot the functions in c++ that you
 

00:44:44.690 --> 00:44:46.600 align:start position:0%
you cannot the functions in c++ that you
call<00:44:44.870><c> an</c><00:44:45.020><c> object</c><00:44:45.410><c> and</c><00:44:45.590><c> the</c><00:44:45.770><c> methods</c><00:44:46.400><c> in</c><00:44:46.520><c> the</c>

00:44:46.600 --> 00:44:46.610 align:start position:0%
call an object and the methods in the
 

00:44:46.610 --> 00:44:49.150 align:start position:0%
call an object and the methods in the
objective-c<00:44:47.060><c> land</c><00:44:47.930><c> are</c><00:44:48.350><c> really</c><00:44:48.590><c> semantically</c>

00:44:49.150 --> 00:44:49.160 align:start position:0%
objective-c land are really semantically
 

00:44:49.160 --> 00:44:51.160 align:start position:0%
objective-c land are really semantically
different<00:44:49.520><c> you</c><00:44:49.610><c> cannot</c><00:44:49.880><c> treat</c><00:44:50.480><c> one</c><00:44:50.780><c> as</c><00:44:50.930><c> if</c><00:44:51.080><c> it</c>

00:44:51.160 --> 00:44:51.170 align:start position:0%
different you cannot treat one as if it
 

00:44:51.170 --> 00:44:52.930 align:start position:0%
different you cannot treat one as if it
were<00:44:51.290><c> the</c><00:44:51.440><c> other</c><00:44:51.620><c> did</c><00:44:52.100><c> this</c><00:44:52.250><c> but</c><00:44:52.400><c> reckon</c><00:44:52.730><c> ISM</c>

00:44:52.930 --> 00:44:52.940 align:start position:0%
were the other did this but reckon ISM
 

00:44:52.940 --> 00:44:55.660 align:start position:0%
were the other did this but reckon ISM
is<00:44:53.030><c> different</c><00:44:53.420><c> it's</c><00:44:53.930><c> it</c><00:44:54.440><c> they</c><00:44:54.830><c> do</c><00:44:54.950><c> not</c><00:44:55.100><c> mix</c><00:44:55.310><c> so</c>

00:44:55.660 --> 00:44:55.670 align:start position:0%
is different it's it they do not mix so
 

00:44:55.670 --> 00:44:57.190 align:start position:0%
is different it's it they do not mix so
I<00:44:55.940><c> mean</c><00:44:56.090><c> and</c><00:44:56.210><c> the</c><00:44:56.270><c> compiler</c><00:44:56.660><c> will</c><00:44:56.810><c> diagnose</c>

00:44:57.190 --> 00:44:57.200 align:start position:0%
I mean and the compiler will diagnose
 

00:44:57.200 --> 00:44:59.230 align:start position:0%
I mean and the compiler will diagnose
this<00:44:57.320><c> correctly</c><00:44:57.680><c> so</c><00:44:57.800><c> you</c><00:44:58.250><c> shouldn't</c><00:44:58.880><c> run</c><00:44:59.030><c> into</c>

00:44:59.230 --> 00:44:59.240 align:start position:0%
this correctly so you shouldn't run into
 

00:44:59.240 --> 00:45:00.760 align:start position:0%
this correctly so you shouldn't run into
any<00:44:59.360><c> problems</c><00:44:59.510><c> there</c>

00:45:00.760 --> 00:45:00.770 align:start position:0%
any problems there
 

00:45:00.770 --> 00:45:03.490 align:start position:0%
any problems there
you<00:45:01.100><c> cannot</c><00:45:01.310><c> statically</c><00:45:01.910><c> allocate</c><00:45:02.510><c> new</c><00:45:03.230><c> or</c>

00:45:03.490 --> 00:45:03.500 align:start position:0%
you cannot statically allocate new or
 

00:45:03.500 --> 00:45:06.340 align:start position:0%
you cannot statically allocate new or
delete<00:45:04.130><c> Objective</c><00:45:04.880><c> C</c><00:45:04.910><c> objects</c><00:45:05.510><c> and</c><00:45:05.660><c> actually</c>

00:45:06.340 --> 00:45:06.350 align:start position:0%
delete Objective C objects and actually
 

00:45:06.350 --> 00:45:07.990 align:start position:0%
delete Objective C objects and actually
the<00:45:06.440><c> UN</c><00:45:06.740><c> delete</c><00:45:07.010><c> keyword</c><00:45:07.400><c> should</c><00:45:07.700><c> be</c><00:45:07.760><c> in</c>

00:45:07.990 --> 00:45:08.000 align:start position:0%
the UN delete keyword should be in
 

00:45:08.000 --> 00:45:10.780 align:start position:0%
the UN delete keyword should be in
yellow<00:45:08.300><c> because</c><00:45:08.600><c> that's</c><00:45:08.840><c> in</c><00:45:08.990><c> C++</c><00:45:09.790><c> construct</c>

00:45:10.780 --> 00:45:10.790 align:start position:0%
yellow because that's in C++ construct
 

00:45:10.790 --> 00:45:13.750 align:start position:0%
yellow because that's in C++ construct
and<00:45:11.000><c> the</c><00:45:11.450><c> reason</c><00:45:11.720><c> again</c><00:45:11.810><c> is</c><00:45:12.100><c> if</c><00:45:13.100><c> you</c><00:45:13.310><c> if</c><00:45:13.640><c> you</c>

00:45:13.750 --> 00:45:13.760 align:start position:0%
and the reason again is if you if you
 

00:45:13.760 --> 00:45:17.440 align:start position:0%
and the reason again is if you if you
create<00:45:14.060><c> an</c><00:45:14.150><c> object</c><00:45:14.950><c> in</c><00:45:16.270><c> you</c><00:45:17.270><c> have</c><00:45:17.420><c> to</c>

00:45:17.440 --> 00:45:17.450 align:start position:0%
create an object in you have to
 

00:45:17.450 --> 00:45:20.050 align:start position:0%
create an object in you have to
initialize<00:45:18.260><c> the</c><00:45:18.560><c> Objective</c><00:45:19.370><c> C</c><00:45:19.400><c> object</c><00:45:19.880><c> which</c>

00:45:20.050 --> 00:45:20.060 align:start position:0%
initialize the Objective C object which
 

00:45:20.060 --> 00:45:22.620 align:start position:0%
initialize the Objective C object which
the<00:45:20.210><c> C++</c><00:45:20.690><c> runtime</c><00:45:20.750><c> wouldn't</c><00:45:21.320><c> know</c><00:45:21.380><c> how</c><00:45:21.530><c> to</c><00:45:21.560><c> do</c>

00:45:22.620 --> 00:45:22.630 align:start position:0%
the C++ runtime wouldn't know how to do
 

00:45:22.630 --> 00:45:25.270 align:start position:0%
the C++ runtime wouldn't know how to do
if<00:45:23.630><c> you're</c><00:45:23.840><c> familiar</c><00:45:23.990><c> with</c><00:45:24.280><c> virtual</c>

00:45:25.270 --> 00:45:25.280 align:start position:0%
if you're familiar with virtual
 

00:45:25.280 --> 00:45:28.600 align:start position:0%
if you're familiar with virtual
functions<00:45:25.780><c> in</c><00:45:26.780><c> c++</c><00:45:27.050><c> there</c><00:45:27.770><c> is</c><00:45:27.860><c> always</c><00:45:28.340><c> sort</c><00:45:28.490><c> of</c>

00:45:28.600 --> 00:45:28.610 align:start position:0%
functions in c++ there is always sort of
 

00:45:28.610 --> 00:45:30.160 align:start position:0%
functions in c++ there is always sort of
a<00:45:28.700><c> v</c><00:45:28.880><c> table</c><00:45:29.180><c> pointer</c><00:45:29.330><c> at</c><00:45:29.600><c> the</c><00:45:29.660><c> beginning</c><00:45:30.080><c> of</c>

00:45:30.160 --> 00:45:30.170 align:start position:0%
a v table pointer at the beginning of
 

00:45:30.170 --> 00:45:32.260 align:start position:0%
a v table pointer at the beginning of
your<00:45:30.260><c> object</c><00:45:30.680><c> Objective</c><00:45:31.550><c> C</c><00:45:31.580><c> has</c><00:45:32.000><c> something</c>

00:45:32.260 --> 00:45:32.270 align:start position:0%
your object Objective C has something
 

00:45:32.270 --> 00:45:33.430 align:start position:0%
your object Objective C has something
analogous<00:45:32.630><c> that</c><00:45:32.930><c> needs</c><00:45:33.080><c> to</c><00:45:33.170><c> be</c><00:45:33.260><c> initialized</c>

00:45:33.430 --> 00:45:33.440 align:start position:0%
analogous that needs to be initialized
 

00:45:33.440 --> 00:45:36.670 align:start position:0%
analogous that needs to be initialized
and<00:45:34.330><c> C++</c><00:45:35.330><c> you</c><00:45:35.600><c> know</c><00:45:35.720><c> wouldn't</c><00:45:36.080><c> know</c><00:45:36.200><c> what</c><00:45:36.590><c> to</c>

00:45:36.670 --> 00:45:36.680 align:start position:0%
and C++ you know wouldn't know what to
 

00:45:36.680 --> 00:45:40.080 align:start position:0%
and C++ you know wouldn't know what to
do<00:45:36.800><c> with</c><00:45:36.920><c> that</c><00:45:37.240><c> I</c><00:45:38.290><c> believe</c><00:45:39.290><c> this</c><00:45:39.380><c> is</c><00:45:39.440><c> my</c><00:45:39.650><c> final</c>

00:45:40.080 --> 00:45:40.090 align:start position:0%
do with that I believe this is my final
 

00:45:40.090 --> 00:45:43.990 align:start position:0%
do with that I believe this is my final
restriction<00:45:41.090><c> type</c><00:45:41.420><c> slide</c><00:45:41.720><c> I</c><00:45:43.000><c> mentioned</c>

00:45:43.990 --> 00:45:44.000 align:start position:0%
restriction type slide I mentioned
 

00:45:44.000 --> 00:45:47.050 align:start position:0%
restriction type slide I mentioned
earlier<00:45:44.720><c> that</c><00:45:44.780><c> you</c><00:45:44.960><c> can</c><00:45:44.990><c> embed</c><00:45:45.730><c> C++</c><00:45:46.730><c> classes</c>

00:45:47.050 --> 00:45:47.060 align:start position:0%
earlier that you can embed C++ classes
 

00:45:47.060 --> 00:45:49.900 align:start position:0%
earlier that you can embed C++ classes
within<00:45:48.040><c> Objective</c><00:45:49.040><c> C</c><00:45:49.070><c> classes</c><00:45:49.550><c> but</c><00:45:49.670><c> there</c><00:45:49.820><c> is</c>

00:45:49.900 --> 00:45:49.910 align:start position:0%
within Objective C classes but there is
 

00:45:49.910 --> 00:45:51.970 align:start position:0%
within Objective C classes but there is
a<00:45:49.940><c> there</c><00:45:50.360><c> is</c><00:45:50.390><c> a</c><00:45:50.480><c> catch</c><00:45:50.720><c> you</c><00:45:51.020><c> may</c><00:45:51.500><c> not</c><00:45:51.650><c> do</c><00:45:51.830><c> this</c>

00:45:51.970 --> 00:45:51.980 align:start position:0%
a there is a catch you may not do this
 

00:45:51.980 --> 00:45:54.220 align:start position:0%
a there is a catch you may not do this
if<00:45:52.190><c> you</c><00:45:52.250><c> have</c><00:45:52.280><c> any</c><00:45:52.550><c> virtual</c><00:45:53.000><c> functions</c><00:45:53.420><c> again</c>

00:45:54.220 --> 00:45:54.230 align:start position:0%
if you have any virtual functions again
 

00:45:54.230 --> 00:45:55.810 align:start position:0%
if you have any virtual functions again
this<00:45:54.440><c> is</c><00:45:54.560><c> because</c><00:45:54.890><c> you</c><00:45:55.040><c> would</c><00:45:55.160><c> have</c><00:45:55.190><c> a</c><00:45:55.340><c> V</c><00:45:55.550><c> table</c>

00:45:55.810 --> 00:45:55.820 align:start position:0%
this is because you would have a V table
 

00:45:55.820 --> 00:45:57.370 align:start position:0%
this is because you would have a V table
pointer<00:45:56.090><c> and</c><00:45:56.240><c> and</c><00:45:56.450><c> in</c><00:45:56.840><c> this</c><00:45:56.990><c> case</c><00:45:57.230><c> the</c>

00:45:57.370 --> 00:45:57.380 align:start position:0%
pointer and and in this case the
 

00:45:57.380 --> 00:45:58.900 align:start position:0%
pointer and and in this case the
objective-c<00:45:57.830><c> runtime</c><00:45:57.980><c> wouldn't</c><00:45:58.670><c> know</c><00:45:58.790><c> what</c>

00:45:58.900 --> 00:45:58.910 align:start position:0%
objective-c runtime wouldn't know what
 

00:45:58.910 --> 00:46:00.970 align:start position:0%
objective-c runtime wouldn't know what
to<00:45:59.030><c> do</c><00:45:59.120><c> with</c><00:45:59.270><c> the</c><00:45:59.360><c> v</c><00:45:59.480><c> table</c><00:45:59.780><c> pointer</c><00:45:59.930><c> so</c><00:46:00.590><c> this</c>

00:46:00.970 --> 00:46:00.980 align:start position:0%
to do with the v table pointer so this
 

00:46:00.980 --> 00:46:02.890 align:start position:0%
to do with the v table pointer so this
really<00:46:01.280><c> goes</c><00:46:01.490><c> both</c><00:46:01.700><c> ways</c><00:46:01.730><c> if</c><00:46:02.270><c> you</c><00:46:02.720><c> have</c><00:46:02.870><c> a</c>

00:46:02.890 --> 00:46:02.900 align:start position:0%
really goes both ways if you have a
 

00:46:02.900 --> 00:46:05.680 align:start position:0%
really goes both ways if you have a
non-virtual<00:46:04.150><c> constructor</c><00:46:05.150><c> like</c><00:46:05.300><c> in</c><00:46:05.600><c> the</c>

00:46:05.680 --> 00:46:05.690 align:start position:0%
non-virtual constructor like in the
 

00:46:05.690 --> 00:46:08.620 align:start position:0%
non-virtual constructor like in the
struct<00:46:05.990><c> class</c><00:46:06.200><c> two</c><00:46:06.410><c> example</c><00:46:06.890><c> there</c><00:46:07.510><c> we</c><00:46:08.510><c> will</c>

00:46:08.620 --> 00:46:08.630 align:start position:0%
struct class two example there we will
 

00:46:08.630 --> 00:46:09.400 align:start position:0%
struct class two example there we will
let<00:46:08.810><c> it</c><00:46:08.930><c> slide</c>

00:46:09.400 --> 00:46:09.410 align:start position:0%
let it slide
 

00:46:09.410 --> 00:46:10.810 align:start position:0%
let it slide
however<00:46:09.710><c> we</c><00:46:10.100><c> will</c><00:46:10.280><c> give</c><00:46:10.460><c> you</c><00:46:10.580><c> a</c><00:46:10.610><c> warning</c>

00:46:10.810 --> 00:46:10.820 align:start position:0%
however we will give you a warning
 

00:46:10.820 --> 00:46:13.000 align:start position:0%
however we will give you a warning
because<00:46:11.090><c> that</c><00:46:11.990><c> constructor</c><00:46:12.530><c> won't</c><00:46:12.710><c> be</c><00:46:12.800><c> called</c>

00:46:13.000 --> 00:46:13.010 align:start position:0%
because that constructor won't be called
 

00:46:13.010 --> 00:46:15.850 align:start position:0%
because that constructor won't be called
so<00:46:13.820><c> if</c><00:46:13.940><c> you're</c><00:46:14.060><c> expecting</c><00:46:14.330><c> to</c><00:46:14.690><c> have</c><00:46:15.440><c> the</c><00:46:15.650><c> class</c>

00:46:15.850 --> 00:46:15.860 align:start position:0%
so if you're expecting to have the class
 

00:46:15.860 --> 00:46:19.210 align:start position:0%
so if you're expecting to have the class
two<00:46:16.300><c> member</c><00:46:17.300><c> initialized</c><00:46:17.840><c> that</c><00:46:18.440><c> won't</c><00:46:18.620><c> happen</c>

00:46:19.210 --> 00:46:19.220 align:start position:0%
two member initialized that won't happen
 

00:46:19.220 --> 00:46:21.640 align:start position:0%
two member initialized that won't happen
and<00:46:19.850><c> the</c><00:46:20.510><c> reason</c><00:46:20.750><c> we</c><00:46:20.840><c> allow</c><00:46:21.020><c> this</c><00:46:21.230><c> is</c><00:46:21.350><c> because</c>

00:46:21.640 --> 00:46:21.650 align:start position:0%
and the reason we allow this is because
 

00:46:21.650 --> 00:46:24.550 align:start position:0%
and the reason we allow this is because
in<00:46:21.800><c> the</c><00:46:21.890><c> objective-c</c><00:46:22.310><c> you</c><00:46:23.030><c> can</c><00:46:23.240><c> put</c><00:46:23.510><c> C</c><00:46:24.080><c> structs</c>

00:46:24.550 --> 00:46:24.560 align:start position:0%
in the objective-c you can put C structs
 

00:46:24.560 --> 00:46:25.960 align:start position:0%
in the objective-c you can put C structs
in<00:46:24.680><c> like</c><00:46:24.920><c> this</c><00:46:25.100><c> and</c><00:46:25.160><c> of</c><00:46:25.370><c> course</c><00:46:25.550><c> that's</c><00:46:25.700><c> fine</c>

00:46:25.960 --> 00:46:25.970 align:start position:0%
in like this and of course that's fine
 

00:46:25.970 --> 00:46:27.190 align:start position:0%
in like this and of course that's fine
because<00:46:26.240><c> you</c><00:46:26.450><c> don't</c><00:46:26.600><c> expect</c><00:46:26.930><c> any</c>

00:46:27.190 --> 00:46:27.200 align:start position:0%
because you don't expect any
 

00:46:27.200 --> 00:46:30.850 align:start position:0%
because you don't expect any
initialization<00:46:28.100><c> semantics</c><00:46:28.820><c> and</c><00:46:29.060><c> C</c><00:46:29.620><c> is</c><00:46:30.620><c> this</c>

00:46:30.850 --> 00:46:30.860 align:start position:0%
initialization semantics and C is this
 

00:46:30.860 --> 00:46:33.670 align:start position:0%
initialization semantics and C is this
my<00:46:31.010><c> final</c><00:46:31.160><c> example</c><00:46:31.760><c> I</c><00:46:31.990><c> believe</c><00:46:32.990><c> so</c><00:46:33.170><c> so</c><00:46:33.530><c> this</c><00:46:33.620><c> is</c>

00:46:33.670 --> 00:46:33.680 align:start position:0%
my final example I believe so so this is
 

00:46:33.680 --> 00:46:36.010 align:start position:0%
my final example I believe so so this is
the<00:46:33.890><c> most</c><00:46:34.010><c> important</c><00:46:34.460><c> slide</c><00:46:34.670><c> probably</c><00:46:35.020><c> how</c>

00:46:36.010 --> 00:46:36.020 align:start position:0%
the most important slide probably how
 

00:46:36.020 --> 00:46:38.800 align:start position:0%
the most important slide probably how
you<00:46:36.080><c> get</c><00:46:36.290><c> your</c><00:46:36.410><c> hands</c><00:46:36.680><c> on</c><00:46:36.740><c> this</c><00:46:36.860><c> stuff</c><00:46:37.660><c> we</c><00:46:38.660><c> are</c>

00:46:38.800 --> 00:46:38.810 align:start position:0%
you get your hands on this stuff we are
 

00:46:38.810 --> 00:46:40.450 align:start position:0%
you get your hands on this stuff we are
really<00:46:39.080><c> very</c><00:46:39.290><c> close</c><00:46:39.560><c> to</c><00:46:39.770><c> starting</c><00:46:40.040><c> seeding</c>

00:46:40.450 --> 00:46:40.460 align:start position:0%
really very close to starting seeding
 

00:46:40.460 --> 00:46:42.640 align:start position:0%
really very close to starting seeding
this<00:46:40.610><c> thing</c><00:46:40.820><c> having</c><00:46:41.480><c> people</c><00:46:41.660><c> try</c><00:46:42.110><c> it</c><00:46:42.170><c> out</c><00:46:42.380><c> and</c>

00:46:42.640 --> 00:46:42.650 align:start position:0%
this thing having people try it out and
 

00:46:42.650 --> 00:46:46.520 align:start position:0%
this thing having people try it out and
if<00:46:43.250><c> you're</c><00:46:43.430><c> interested</c><00:46:43.790><c> in</c><00:46:44.380><c> being</c><00:46:45.380><c> one</c><00:46:45.620><c> of</c><00:46:45.650><c> our</c>

00:46:46.520 --> 00:46:46.530 align:start position:0%
if you're interested in being one of our
 

00:46:46.530 --> 00:46:48.440 align:start position:0%
if you're interested in being one of our
early<00:46:46.890><c> victims</c><00:46:47.250><c> and</c><00:46:47.460><c> I'm</c><00:46:47.550><c> really</c><00:46:47.910><c> joking</c><00:46:48.300><c> it's</c>

00:46:48.440 --> 00:46:48.450 align:start position:0%
early victims and I'm really joking it's
 

00:46:48.450 --> 00:46:49.640 align:start position:0%
early victims and I'm really joking it's
actually<00:46:48.690><c> quite</c><00:46:48.840><c> stable</c><00:46:49.110><c> at</c><00:46:49.320><c> this</c><00:46:49.410><c> point</c>

00:46:49.640 --> 00:46:49.650 align:start position:0%
actually quite stable at this point
 

00:46:49.650 --> 00:46:51.890 align:start position:0%
actually quite stable at this point
we've<00:46:50.250><c> used</c><00:46:50.520><c> it</c><00:46:50.640><c> as</c><00:46:50.730><c> a</c><00:46:50.760><c> C++</c><00:46:51.300><c> compiler</c><00:46:51.660><c> on</c><00:46:51.810><c> our</c>

00:46:51.890 --> 00:46:51.900 align:start position:0%
we've used it as a C++ compiler on our
 

00:46:51.900 --> 00:46:54.170 align:start position:0%
we've used it as a C++ compiler on our
system<00:46:52.200><c> very</c><00:46:52.230><c> successfully</c><00:46:52.950><c> so</c><00:46:53.130><c> it's</c><00:46:53.280><c> it's</c>

00:46:54.170 --> 00:46:54.180 align:start position:0%
system very successfully so it's it's
 

00:46:54.180 --> 00:46:55.820 align:start position:0%
system very successfully so it's it's
you<00:46:54.480><c> know</c><00:46:54.570><c> I'm</c><00:46:54.660><c> really</c><00:46:54.960><c> proud</c><00:46:55.200><c> of</c><00:46:55.260><c> it</c><00:46:55.470><c> anyway</c>

00:46:55.820 --> 00:46:55.830 align:start position:0%
you know I'm really proud of it anyway
 

00:46:55.830 --> 00:46:57.920 align:start position:0%
you know I'm really proud of it anyway
if<00:46:55.980><c> you're</c><00:46:56.100><c> interested</c><00:46:56.190><c> in</c><00:46:56.790><c> becoming</c><00:46:57.420><c> a</c><00:46:57.750><c> seek</c>

00:46:57.920 --> 00:46:57.930 align:start position:0%
if you're interested in becoming a seek
 

00:46:57.930 --> 00:46:59.870 align:start position:0%
if you're interested in becoming a seek
partner<00:46:58.200><c> with</c><00:46:58.320><c> us</c><00:46:58.440><c> please</c><00:46:59.040><c> approach</c><00:46:59.340><c> Godfrey</c>

00:46:59.870 --> 00:46:59.880 align:start position:0%
partner with us please approach Godfrey
 

00:46:59.880 --> 00:47:02.170 align:start position:0%
partner with us please approach Godfrey
our<00:47:00.060><c> session</c><00:47:00.420><c> manager</c><00:47:00.810><c> at</c><00:47:01.080><c> the</c><00:47:01.290><c> end</c><00:47:01.440><c> of</c><00:47:01.680><c> our</c>

00:47:02.170 --> 00:47:02.180 align:start position:0%
our session manager at the end of our
 

00:47:02.180 --> 00:47:05.330 align:start position:0%
our session manager at the end of our
session<00:47:03.180><c> here</c><00:47:03.540><c> after</c><00:47:03.900><c> the</c><00:47:04.020><c> Q&amp;A</c><00:47:04.200><c> and</c><00:47:04.560><c> now</c><00:47:05.160><c> I'll</c>

00:47:05.330 --> 00:47:05.340 align:start position:0%
session here after the Q&amp;A and now I'll
 

00:47:05.340 --> 00:47:08.000 align:start position:0%
session here after the Q&amp;A and now I'll
hand<00:47:05.580><c> it</c><00:47:05.700><c> back</c><00:47:05.730><c> to</c><00:47:06.090><c> John</c><00:47:06.690><c> for</c><00:47:06.960><c> some</c><00:47:07.140><c> closing</c>

00:47:08.000 --> 00:47:08.010 align:start position:0%
hand it back to John for some closing
 

00:47:08.010 --> 00:47:17.240 align:start position:0%
hand it back to John for some closing
thoughts<00:47:14.690><c> thanks</c><00:47:15.690><c> to</c><00:47:15.750><c> them</c><00:47:15.930><c> I</c><00:47:16.080><c> I</c><00:47:16.500><c> just</c><00:47:16.770><c> want</c><00:47:17.160><c> to</c>

00:47:17.240 --> 00:47:17.250 align:start position:0%
thoughts thanks to them I I just want to
 

00:47:17.250 --> 00:47:19.970 align:start position:0%
thoughts thanks to them I I just want to
say<00:47:17.430><c> that</c><00:47:17.670><c> we</c><00:47:18.360><c> brought</c><00:47:18.540><c> them</c><00:47:18.810><c> on</c><00:47:18.840><c> in</c><00:47:19.350><c> February</c>

00:47:19.970 --> 00:47:19.980 align:start position:0%
say that we brought them on in February
 

00:47:19.980 --> 00:47:22.460 align:start position:0%
say that we brought them on in February
and<00:47:20.970><c> he</c><00:47:21.150><c> started</c><00:47:21.660><c> on</c><00:47:21.780><c> this</c><00:47:21.960><c> in</c><00:47:22.200><c> March</c>

00:47:22.460 --> 00:47:22.470 align:start position:0%
and he started on this in March
 

00:47:22.470 --> 00:47:25.120 align:start position:0%
and he started on this in March
basically<00:47:23.010><c> using</c><00:47:23.310><c> the</c><00:47:23.400><c> old</c><00:47:23.520><c> crufty</c><00:47:24.110><c> 2.72</c>

00:47:25.120 --> 00:47:25.130 align:start position:0%
basically using the old crufty 2.72
 

00:47:25.130 --> 00:47:27.830 align:start position:0%
basically using the old crufty 2.72
objective<00:47:26.130><c> C++</c><00:47:26.790><c> implementation</c><00:47:26.970><c> crufty</c>

00:47:27.830 --> 00:47:27.840 align:start position:0%
objective C++ implementation crufty
 

00:47:27.840 --> 00:47:30.880 align:start position:0%
objective C++ implementation crufty
because<00:47:28.110><c> the</c><00:47:28.350><c> 2.72</c><00:47:29.100><c> C++</c><00:47:29.880><c> implementation</c><00:47:30.090><c> in</c>

00:47:30.880 --> 00:47:30.890 align:start position:0%
because the 2.72 C++ implementation in
 

00:47:30.890 --> 00:47:34.160 align:start position:0%
because the 2.72 C++ implementation in
GCC<00:47:31.890><c> was</c><00:47:32.040><c> pretty</c><00:47:32.340><c> pretty</c><00:47:32.700><c> bad</c><00:47:32.990><c> and</c><00:47:33.990><c> he</c>

00:47:34.160 --> 00:47:34.170 align:start position:0%
GCC was pretty pretty bad and he
 

00:47:34.170 --> 00:47:35.690 align:start position:0%
GCC was pretty pretty bad and he
actually<00:47:34.320><c> got</c><00:47:34.590><c> this</c><00:47:34.740><c> up</c><00:47:34.950><c> and</c><00:47:35.100><c> running</c><00:47:35.460><c> and</c>

00:47:35.690 --> 00:47:35.700 align:start position:0%
actually got this up and running and
 

00:47:35.700 --> 00:47:37.880 align:start position:0%
actually got this up and running and
just<00:47:36.420><c> last</c><00:47:36.660><c> week</c><00:47:36.930><c> we</c><00:47:37.140><c> were</c><00:47:37.200><c> able</c><00:47:37.290><c> to</c><00:47:37.530><c> compile</c>

00:47:37.880 --> 00:47:37.890 align:start position:0%
just last week we were able to compile
 

00:47:37.890 --> 00:47:40.160 align:start position:0%
just last week we were able to compile
the<00:47:38.310><c> the</c><00:47:38.520><c> full</c><00:47:38.910><c> finder</c><00:47:39.420><c> codebase</c><00:47:39.840><c> which</c><00:47:40.050><c> is</c>

00:47:40.160 --> 00:47:40.170 align:start position:0%
the the full finder codebase which is
 

00:47:40.170 --> 00:47:42.800 align:start position:0%
the the full finder codebase which is
all<00:47:40.320><c> powerplant</c><00:47:40.950><c> as</c><00:47:41.130><c> well</c><00:47:41.600><c> with</c><00:47:42.600><c> this</c>

00:47:42.800 --> 00:47:42.810 align:start position:0%
all powerplant as well with this
 

00:47:42.810 --> 00:47:44.780 align:start position:0%
all powerplant as well with this
compiler<00:47:43.200><c> so</c><00:47:43.530><c> it's</c><00:47:43.680><c> not</c><00:47:43.800><c> only</c><00:47:44.040><c> compiling</c><00:47:44.550><c> all</c>

00:47:44.780 --> 00:47:44.790 align:start position:0%
compiler so it's not only compiling all
 

00:47:44.790 --> 00:47:47.330 align:start position:0%
compiler so it's not only compiling all
of<00:47:44.910><c> our</c><00:47:45.030><c> objective</c><00:47:45.390><c> C++</c><00:47:45.990><c> code</c><00:47:46.260><c> but</c><00:47:46.950><c> it's</c><00:47:47.130><c> also</c>

00:47:47.330 --> 00:47:47.340 align:start position:0%
of our objective C++ code but it's also
 

00:47:47.340 --> 00:47:51.440 align:start position:0%
of our objective C++ code but it's also
a<00:47:47.520><c> real</c><00:47:48.090><c> honest-to-god</c><00:47:48.720><c> C++</c><00:47:49.470><c> compiler</c><00:47:50.040><c> so</c><00:47:50.850><c> zem</c>

00:47:51.440 --> 00:47:51.450 align:start position:0%
a real honest-to-god C++ compiler so zem
 

00:47:51.450 --> 00:47:52.700 align:start position:0%
a real honest-to-god C++ compiler so zem
did<00:47:51.630><c> a</c><00:47:51.690><c> great</c><00:47:51.870><c> job</c><00:47:51.900><c> and</c><00:47:52.380><c> I</c><00:47:52.440><c> think</c><00:47:52.470><c> we</c><00:47:52.650><c> should</c>

00:47:52.700 --> 00:47:52.710 align:start position:0%
did a great job and I think we should
 

00:47:52.710 --> 00:47:59.200 align:start position:0%
did a great job and I think we should
give<00:47:52.920><c> him</c><00:47:52.980><c> a</c><00:47:53.070><c> hand</c><00:47:53.310><c> for</c><00:47:53.490><c> a</c><00:47:53.550><c> cream</c>

00:47:59.200 --> 00:47:59.210 align:start position:0%
 
 

00:47:59.210 --> 00:48:01.870 align:start position:0%
 
so<00:47:59.810><c> all</c><00:48:00.020><c> of</c><00:48:00.170><c> you</c><00:48:00.320><c> who</c><00:48:00.530><c> are</c><00:48:00.620><c> who</c><00:48:01.190><c> are</c><00:48:01.220><c> interested</c>

00:48:01.870 --> 00:48:01.880 align:start position:0%
so all of you who are who are interested
 

00:48:01.880 --> 00:48:04.180 align:start position:0%
so all of you who are who are interested
in<00:48:02.030><c> those</c><00:48:02.510><c> guys</c><00:48:02.720><c> like</c><00:48:02.930><c> you</c><00:48:03.050><c> too</c><00:48:03.200><c> so</c><00:48:03.590><c> all</c><00:48:03.890><c> of</c><00:48:04.040><c> you</c>

00:48:04.180 --> 00:48:04.190 align:start position:0%
in those guys like you too so all of you
 

00:48:04.190 --> 00:48:08.790 align:start position:0%
in those guys like you too so all of you
that<00:48:04.220><c> are</c><00:48:04.460><c> interested</c><00:48:04.940><c> in</c><00:48:05.090><c> bringing</c><00:48:06.460><c> your</c><00:48:07.780><c> C++</c>

00:48:08.790 --> 00:48:08.800 align:start position:0%
that are interested in bringing your C++
 

00:48:08.800 --> 00:48:12.370 align:start position:0%
that are interested in bringing your C++
applications<00:48:09.800><c> your</c><00:48:09.950><c> c++</c><00:48:10.640><c> UNIX</c><00:48:11.210><c> tools</c><00:48:11.930><c> and</c>

00:48:12.370 --> 00:48:12.380 align:start position:0%
applications your c++ UNIX tools and
 

00:48:12.380 --> 00:48:14.890 align:start position:0%
applications your c++ UNIX tools and
putting<00:48:12.890><c> a</c><00:48:12.980><c> cocoa</c><00:48:13.370><c> front-end</c><00:48:13.820><c> on</c><00:48:14.000><c> them</c><00:48:14.180><c> this</c>

00:48:14.890 --> 00:48:14.900 align:start position:0%
putting a cocoa front-end on them this
 

00:48:14.900 --> 00:48:16.840 align:start position:0%
putting a cocoa front-end on them this
is<00:48:14.960><c> your</c><00:48:15.140><c> path</c><00:48:15.530><c> to</c><00:48:15.830><c> success</c><00:48:16.010><c> this</c><00:48:16.460><c> will</c><00:48:16.670><c> get</c>

00:48:16.840 --> 00:48:16.850 align:start position:0%
is your path to success this will get
 

00:48:16.850 --> 00:48:18.910 align:start position:0%
is your path to success this will get
you<00:48:17.000><c> there</c><00:48:17.180><c> and</c><00:48:17.420><c> it's</c><00:48:17.840><c> a</c><00:48:17.930><c> very</c><00:48:18.200><c> nice</c><00:48:18.380><c> thing</c><00:48:18.740><c> I</c>

00:48:18.910 --> 00:48:18.920 align:start position:0%
you there and it's a very nice thing I
 

00:48:18.920 --> 00:48:20.230 align:start position:0%
you there and it's a very nice thing I
personally<00:48:19.430><c> have</c><00:48:19.520><c> written</c><00:48:19.730><c> a</c><00:48:19.850><c> lot</c><00:48:20.060><c> of</c>

00:48:20.230 --> 00:48:20.240 align:start position:0%
personally have written a lot of
 

00:48:20.240 --> 00:48:22.150 align:start position:0%
personally have written a lot of
objective<00:48:20.630><c> C++</c><00:48:21.230><c> code</c><00:48:21.500><c> using</c><00:48:21.890><c> the</c><00:48:21.920><c> old</c>

00:48:22.150 --> 00:48:22.160 align:start position:0%
objective C++ code using the old
 

00:48:22.160 --> 00:48:24.280 align:start position:0%
objective C++ code using the old
compiler<00:48:22.670><c> and</c><00:48:22.970><c> I'm</c><00:48:23.390><c> really</c><00:48:23.750><c> looking</c><00:48:24.020><c> forward</c>

00:48:24.280 --> 00:48:24.290 align:start position:0%
compiler and I'm really looking forward
 

00:48:24.290 --> 00:48:25.870 align:start position:0%
compiler and I'm really looking forward
to<00:48:24.440><c> being</c><00:48:24.650><c> able</c><00:48:24.770><c> to</c><00:48:24.890><c> use</c><00:48:25.010><c> this</c><00:48:25.310><c> at</c><00:48:25.520><c> this</c><00:48:25.700><c> new</c>

00:48:25.870 --> 00:48:25.880 align:start position:0%
to being able to use this at this new
 

00:48:25.880 --> 00:48:30.360 align:start position:0%
to being able to use this at this new
compiler<00:48:26.210><c> it's</c><00:48:26.510><c> gonna</c><00:48:26.600><c> be</c><00:48:26.750><c> really</c><00:48:26.930><c> great</c><00:48:29.170><c> so</c>

00:48:30.360 --> 00:48:30.370 align:start position:0%
compiler it's gonna be really great so
 

00:48:30.370 --> 00:48:34.000 align:start position:0%
compiler it's gonna be really great so
just<00:48:31.370><c> a</c><00:48:31.880><c> couple</c><00:48:32.720><c> notes</c><00:48:33.020><c> on</c><00:48:33.260><c> what</c><00:48:33.470><c> we're</c><00:48:33.620><c> still</c>

00:48:34.000 --> 00:48:34.010 align:start position:0%
just a couple notes on what we're still
 

00:48:34.010 --> 00:48:37.930 align:start position:0%
just a couple notes on what we're still
going<00:48:34.310><c> to</c><00:48:34.400><c> be</c><00:48:34.870><c> working</c><00:48:35.870><c> on</c><00:48:36.130><c> the</c><00:48:37.130><c> biggest</c><00:48:37.490><c> thing</c>

00:48:37.930 --> 00:48:37.940 align:start position:0%
going to be working on the biggest thing
 

00:48:37.940 --> 00:48:39.760 align:start position:0%
going to be working on the biggest thing
on<00:48:38.180><c> our</c><00:48:38.480><c> player</c><00:48:38.750><c> right</c><00:48:38.960><c> now</c><00:48:39.080><c> is</c><00:48:39.350><c> still</c>

00:48:39.760 --> 00:48:39.770 align:start position:0%
on our player right now is still
 

00:48:39.770 --> 00:48:41.920 align:start position:0%
on our player right now is still
reducing<00:48:40.190><c> compile</c><00:48:40.580><c> time</c><00:48:40.850><c> so</c><00:48:41.000><c> I</c><00:48:41.060><c> think</c><00:48:41.240><c> the</c><00:48:41.330><c> C++</c>

00:48:41.920 --> 00:48:41.930 align:start position:0%
reducing compile time so I think the C++
 

00:48:41.930 --> 00:48:43.750 align:start position:0%
reducing compile time so I think the C++
pre<00:48:42.200><c> comps</c><00:48:42.620><c> have</c><00:48:42.740><c> been</c><00:48:42.950><c> huge</c><00:48:43.280><c> they've</c><00:48:43.520><c> done</c><00:48:43.730><c> a</c>

00:48:43.750 --> 00:48:43.760 align:start position:0%
pre comps have been huge they've done a
 

00:48:43.760 --> 00:48:46.540 align:start position:0%
pre comps have been huge they've done a
lot<00:48:43.850><c> of</c><00:48:44.210><c> good</c><00:48:44.390><c> to</c><00:48:44.630><c> getting</c><00:48:45.190><c> removing</c><00:48:46.190><c> most</c><00:48:46.400><c> of</c>

00:48:46.540 --> 00:48:46.550 align:start position:0%
lot of good to getting removing most of
 

00:48:46.550 --> 00:48:48.160 align:start position:0%
lot of good to getting removing most of
the<00:48:46.640><c> pain</c><00:48:46.850><c> involved</c><00:48:47.420><c> with</c><00:48:47.570><c> doing</c><00:48:47.930><c> you</c><00:48:48.020><c> know</c><00:48:48.140><c> a</c>

00:48:48.160 --> 00:48:48.170 align:start position:0%
the pain involved with doing you know a
 

00:48:48.170 --> 00:48:52.960 align:start position:0%
the pain involved with doing you know a
full<00:48:48.440><c> carbon</c><00:48:48.830><c> C++</c><00:48:50.380><c> build</c><00:48:51.380><c> but</c><00:48:52.220><c> again</c><00:48:52.670><c> you</c><00:48:52.790><c> saw</c>

00:48:52.960 --> 00:48:52.970 align:start position:0%
full carbon C++ build but again you saw
 

00:48:52.970 --> 00:48:54.040 align:start position:0%
full carbon C++ build but again you saw
that<00:48:53.090><c> restriction</c><00:48:53.480><c> where</c><00:48:53.690><c> we</c><00:48:53.780><c> currently</c>

00:48:54.040 --> 00:48:54.050 align:start position:0%
that restriction where we currently
 

00:48:54.050 --> 00:48:57.430 align:start position:0%
that restriction where we currently
cannot<00:48:54.680><c> handle</c><00:48:55.210><c> C++</c><00:48:56.210><c> code</c><00:48:56.480><c> in</c><00:48:56.720><c> there</c><00:48:57.170><c> so</c><00:48:57.350><c> if</c>

00:48:57.430 --> 00:48:57.440 align:start position:0%
cannot handle C++ code in there so if
 

00:48:57.440 --> 00:48:59.020 align:start position:0%
cannot handle C++ code in there so if
you<00:48:57.530><c> want</c><00:48:57.710><c> to</c><00:48:57.830><c> have</c><00:48:57.950><c> your</c><00:48:58.190><c> power</c><00:48:58.430><c> plant</c><00:48:58.760><c> pre</c>

00:48:59.020 --> 00:48:59.030 align:start position:0%
you want to have your power plant pre
 

00:48:59.030 --> 00:49:01.660 align:start position:0%
you want to have your power plant pre
comp<00:48:59.300><c> we</c><00:49:00.230><c> can't</c><00:49:00.470><c> do</c><00:49:00.650><c> that</c><00:49:00.800><c> right</c><00:49:00.980><c> now</c><00:49:01.160><c> in</c><00:49:01.310><c> GCC</c>

00:49:01.660 --> 00:49:01.670 align:start position:0%
comp we can't do that right now in GCC
 

00:49:01.670 --> 00:49:03.550 align:start position:0%
comp we can't do that right now in GCC
so<00:49:02.270><c> the</c><00:49:02.390><c> first</c><00:49:02.600><c> thing</c><00:49:02.720><c> we're</c><00:49:02.870><c> working</c><00:49:03.230><c> on</c><00:49:03.380><c> is</c>

00:49:03.550 --> 00:49:03.560 align:start position:0%
so the first thing we're working on is
 

00:49:03.560 --> 00:49:06.670 align:start position:0%
so the first thing we're working on is
getting<00:49:03.770><c> that</c><00:49:04.070><c> capability</c><00:49:04.610><c> into</c><00:49:05.060><c> GCC</c><00:49:06.020><c> so</c><00:49:06.590><c> you</c>

00:49:06.670 --> 00:49:06.680 align:start position:0%
getting that capability into GCC so you
 

00:49:06.680 --> 00:49:11.230 align:start position:0%
getting that capability into GCC so you
can<00:49:06.980><c> have</c><00:49:07.870><c> precompiled</c><00:49:09.070><c> compile</c><00:49:10.070><c> times</c><00:49:10.430><c> with</c>

00:49:11.230 --> 00:49:11.240 align:start position:0%
can have precompiled compile times with
 

00:49:11.240 --> 00:49:15.370 align:start position:0%
can have precompiled compile times with
large<00:49:12.200><c> C++</c><00:49:13.070><c> code</c><00:49:13.310><c> bases</c><00:49:13.900><c> the</c><00:49:14.900><c> next</c><00:49:15.110><c> thing</c><00:49:15.230><c> is</c>

00:49:15.370 --> 00:49:15.380 align:start position:0%
large C++ code bases the next thing is
 

00:49:15.380 --> 00:49:17.440 align:start position:0%
large C++ code bases the next thing is
we're<00:49:15.530><c> continuing</c><00:49:16.220><c> to</c><00:49:16.400><c> work</c><00:49:16.550><c> on</c><00:49:16.730><c> code</c><00:49:17.000><c> quality</c>

00:49:17.440 --> 00:49:17.450 align:start position:0%
we're continuing to work on code quality
 

00:49:17.450 --> 00:49:19.720 align:start position:0%
we're continuing to work on code quality
improvements<00:49:18.020><c> GCC</c><00:49:18.470><c> 300</c><00:49:18.950><c> will</c><00:49:19.130><c> get</c><00:49:19.310><c> us</c><00:49:19.460><c> there</c>

00:49:19.720 --> 00:49:19.730 align:start position:0%
improvements GCC 300 will get us there
 

00:49:19.730 --> 00:49:22.150 align:start position:0%
improvements GCC 300 will get us there
some<00:49:20.030><c> of</c><00:49:20.180><c> the</c><00:49:20.300><c> way</c><00:49:20.450><c> but</c><00:49:21.440><c> we're</c><00:49:21.590><c> also</c><00:49:21.740><c> working</c>

00:49:22.150 --> 00:49:22.160 align:start position:0%
some of the way but we're also working
 

00:49:22.160 --> 00:49:27.040 align:start position:0%
some of the way but we're also working
on<00:49:22.550><c> just</c><00:49:23.480><c> bringing</c><00:49:23.960><c> GCC</c><00:49:24.740><c> up</c><00:49:25.120><c> into</c><00:49:26.120><c> more</c><00:49:26.360><c> of</c><00:49:26.420><c> a</c>

00:49:27.040 --> 00:49:27.050 align:start position:0%
on just bringing GCC up into more of a
 

00:49:27.050 --> 00:49:29.620 align:start position:0%
on just bringing GCC up into more of a
you<00:49:27.950><c> know</c><00:49:27.980><c> getting</c><00:49:28.610><c> it</c><00:49:28.700><c> up</c><00:49:28.820><c> to</c><00:49:29.030><c> the</c><00:49:29.150><c> commercial</c>

00:49:29.620 --> 00:49:29.630 align:start position:0%
you know getting it up to the commercial
 

00:49:29.630 --> 00:49:31.000 align:start position:0%
you know getting it up to the commercial
quality<00:49:30.140><c> that</c><00:49:30.320><c> people</c><00:49:30.590><c> have</c><00:49:30.710><c> come</c><00:49:30.830><c> to</c><00:49:30.980><c> expect</c>

00:49:31.000 --> 00:49:31.010 align:start position:0%
quality that people have come to expect
 

00:49:31.010 --> 00:49:34.120 align:start position:0%
quality that people have come to expect
on<00:49:31.460><c> Mac</c><00:49:31.640><c> OS</c><00:49:31.940><c> 9</c><00:49:31.970><c> for</c><00:49:32.870><c> all</c><00:49:33.260><c> of</c><00:49:33.470><c> the</c><00:49:33.560><c> code</c><00:49:33.770><c> gen</c><00:49:33.980><c> it's</c>

00:49:34.120 --> 00:49:34.130 align:start position:0%
on Mac OS 9 for all of the code gen it's
 

00:49:34.130 --> 00:49:35.590 align:start position:0%
on Mac OS 9 for all of the code gen it's
pretty<00:49:34.340><c> good</c><00:49:34.490><c> in</c><00:49:34.640><c> most</c><00:49:34.790><c> cases</c><00:49:35.150><c> but</c><00:49:35.420><c> there's</c>

00:49:35.590 --> 00:49:35.600 align:start position:0%
pretty good in most cases but there's
 

00:49:35.600 --> 00:49:36.820 align:start position:0%
pretty good in most cases but there's
some<00:49:35.720><c> cases</c><00:49:35.900><c> where</c><00:49:36.080><c> we</c><00:49:36.290><c> leave</c><00:49:36.470><c> a</c><00:49:36.500><c> little</c><00:49:36.590><c> bit</c>

00:49:36.820 --> 00:49:36.830 align:start position:0%
some cases where we leave a little bit
 

00:49:36.830 --> 00:49:38.260 align:start position:0%
some cases where we leave a little bit
on<00:49:36.980><c> the</c><00:49:37.100><c> table</c><00:49:37.250><c> and</c><00:49:37.550><c> we're</c><00:49:37.670><c> still</c><00:49:37.850><c> working</c><00:49:38.150><c> on</c>

00:49:38.260 --> 00:49:38.270 align:start position:0%
on the table and we're still working on
 

00:49:38.270 --> 00:49:40.270 align:start position:0%
on the table and we're still working on
that<00:49:38.300><c> and</c><00:49:38.690><c> finally</c><00:49:39.410><c> we</c><00:49:39.590><c> were</c><00:49:39.680><c> working</c><00:49:40.010><c> again</c>

00:49:40.270 --> 00:49:40.280 align:start position:0%
that and finally we were working again
 

00:49:40.280 --> 00:49:41.830 align:start position:0%
that and finally we were working again
on<00:49:40.430><c> tighter</c><00:49:40.730><c> and</c><00:49:40.910><c> tighter</c><00:49:41.060><c> project</c><00:49:41.600><c> builder</c>

00:49:41.830 --> 00:49:41.840 align:start position:0%
on tighter and tighter project builder
 

00:49:41.840 --> 00:49:43.480 align:start position:0%
on tighter and tighter project builder
integration<00:49:42.350><c> being</c><00:49:42.590><c> able</c><00:49:42.710><c> to</c><00:49:42.860><c> semantically</c>

00:49:43.480 --> 00:49:43.490 align:start position:0%
integration being able to semantically
 

00:49:43.490 --> 00:49:45.460 align:start position:0%
integration being able to semantically
browse<00:49:43.880><c> through</c><00:49:44.330><c> different</c><00:49:44.690><c> language</c>

00:49:45.460 --> 00:49:45.470 align:start position:0%
browse through different language
 

00:49:45.470 --> 00:49:48.070 align:start position:0%
browse through different language
constructs<00:49:46.010><c> and</c><00:49:46.250><c> basically</c><00:49:46.910><c> using</c><00:49:47.300><c> GCC</c>

00:49:48.070 --> 00:49:48.080 align:start position:0%
constructs and basically using GCC
 

00:49:48.080 --> 00:49:50.410 align:start position:0%
constructs and basically using GCC
especially<00:49:48.680><c> the</c><00:49:48.800><c> front</c><00:49:48.980><c> end</c><00:49:49.190><c> of</c><00:49:49.280><c> GCC</c><00:49:49.760><c> to</c>

00:49:50.410 --> 00:49:50.420 align:start position:0%
especially the front end of GCC to
 

00:49:50.420 --> 00:49:53.500 align:start position:0%
especially the front end of GCC to
supply<00:49:51.020><c> as</c><00:49:51.380><c> much</c><00:49:51.440><c> of</c><00:49:52.250><c> the</c><00:49:52.730><c> semantic</c>

00:49:53.500 --> 00:49:53.510 align:start position:0%
supply as much of the semantic
 

00:49:53.510 --> 00:49:56.020 align:start position:0%
supply as much of the semantic
information<00:49:54.100><c> the</c><00:49:55.100><c> cross-referencing</c>

00:49:56.020 --> 00:49:56.030 align:start position:0%
information the cross-referencing
 

00:49:56.030 --> 00:49:58.570 align:start position:0%
information the cross-referencing
information<00:49:56.570><c> that</c><00:49:57.530><c> you</c><00:49:57.770><c> need</c><00:49:57.980><c> in</c><00:49:58.160><c> project</c>

00:49:58.570 --> 00:49:58.580 align:start position:0%
information that you need in project
 

00:49:58.580 --> 00:49:59.860 align:start position:0%
information that you need in project
builder<00:49:58.790><c> and</c><00:49:58.910><c> having</c><00:49:59.120><c> project</c><00:49:59.450><c> builder</c><00:49:59.690><c> take</c>

00:49:59.860 --> 00:49:59.870 align:start position:0%
builder and having project builder take
 

00:49:59.870 --> 00:50:03.890 align:start position:0%
builder and having project builder take
advantage<00:50:00.260><c> of</c><00:50:00.410><c> that</c>

00:50:03.890 --> 00:50:03.900 align:start position:0%
 
 

00:50:03.900 --> 00:50:07.789 align:start position:0%
 
so<00:50:04.319><c> just</c><00:50:04.920><c> to</c><00:50:05.009><c> wind</c><00:50:05.220><c> it</c><00:50:05.339><c> up</c><00:50:05.809><c> GCC</c><00:50:06.809><c> is</c><00:50:06.869><c> our</c><00:50:07.470><c> road</c>

00:50:07.789 --> 00:50:07.799 align:start position:0%
so just to wind it up GCC is our road
 

00:50:07.799 --> 00:50:10.009 align:start position:0%
so just to wind it up GCC is our road
tested<00:50:08.249><c> open</c><00:50:08.490><c> compiler</c><00:50:08.970><c> for</c><00:50:09.180><c> Mac</c><00:50:09.329><c> OS</c><00:50:09.630><c> 10</c><00:50:09.660><c> you</c>

00:50:10.009 --> 00:50:10.019 align:start position:0%
tested open compiler for Mac OS 10 you
 

00:50:10.019 --> 00:50:12.140 align:start position:0%
tested open compiler for Mac OS 10 you
can<00:50:10.140><c> go</c><00:50:10.259><c> on</c><00:50:10.349><c> and</c><00:50:10.470><c> get</c><00:50:10.529><c> the</c><00:50:10.680><c> sources</c><00:50:11.130><c> today</c><00:50:11.940><c> if</c>

00:50:12.140 --> 00:50:12.150 align:start position:0%
can go on and get the sources today if
 

00:50:12.150 --> 00:50:15.200 align:start position:0%
can go on and get the sources today if
you<00:50:12.269><c> want</c><00:50:12.480><c> them</c><00:50:12.950><c> it</c><00:50:13.950><c> works</c><00:50:14.249><c> from</c><00:50:14.700><c> the</c><00:50:14.880><c> command</c>

00:50:15.200 --> 00:50:15.210 align:start position:0%
you want them it works from the command
 

00:50:15.210 --> 00:50:17.029 align:start position:0%
you want them it works from the command
line<00:50:15.269><c> it's</c><00:50:15.539><c> a</c><00:50:15.569><c> usable</c><00:50:15.900><c> command-line</c><00:50:16.319><c> tool</c><00:50:16.589><c> it</c>

00:50:17.029 --> 00:50:17.039 align:start position:0%
line it's a usable command-line tool it
 

00:50:17.039 --> 00:50:18.710 align:start position:0%
line it's a usable command-line tool it
works<00:50:17.220><c> even</c><00:50:17.519><c> better</c><00:50:17.789><c> from</c><00:50:17.970><c> project</c><00:50:18.480><c> builder</c>

00:50:18.710 --> 00:50:18.720 align:start position:0%
works even better from project builder
 

00:50:18.720 --> 00:50:20.900 align:start position:0%
works even better from project builder
we<00:50:18.809><c> have</c><00:50:18.930><c> a</c><00:50:18.960><c> lot</c><00:50:19.259><c> of</c><00:50:19.380><c> support</c><00:50:19.799><c> in</c><00:50:19.950><c> there</c><00:50:20.160><c> that</c>

00:50:20.900 --> 00:50:20.910 align:start position:0%
we have a lot of support in there that
 

00:50:20.910 --> 00:50:22.670 align:start position:0%
we have a lot of support in there that
is<00:50:21.089><c> actually</c><00:50:21.390><c> difficult</c><00:50:21.569><c> to</c><00:50:21.900><c> access</c><00:50:22.349><c> from</c><00:50:22.499><c> the</c>

00:50:22.670 --> 00:50:22.680 align:start position:0%
is actually difficult to access from the
 

00:50:22.680 --> 00:50:25.670 align:start position:0%
is actually difficult to access from the
command<00:50:22.980><c> line</c><00:50:23.039><c> where</c><00:50:23.720><c> we</c><00:50:24.720><c> take</c><00:50:25.140><c> advantage</c><00:50:25.589><c> of</c>

00:50:25.670 --> 00:50:25.680 align:start position:0%
command line where we take advantage of
 

00:50:25.680 --> 00:50:26.779 align:start position:0%
command line where we take advantage of
a<00:50:25.769><c> lot</c><00:50:25.920><c> of</c><00:50:26.039><c> the</c><00:50:26.099><c> things</c><00:50:26.309><c> that</c><00:50:26.369><c> the</c><00:50:26.519><c> IDE</c>

00:50:26.779 --> 00:50:26.789 align:start position:0%
a lot of the things that the IDE
 

00:50:26.789 --> 00:50:30.349 align:start position:0%
a lot of the things that the IDE
provides<00:50:27.299><c> and</c><00:50:28.279><c> really</c><00:50:29.279><c> use</c><00:50:29.549><c> the</c><00:50:29.910><c> features</c><00:50:30.210><c> in</c>

00:50:30.349 --> 00:50:30.359 align:start position:0%
provides and really use the features in
 

00:50:30.359 --> 00:50:33.019 align:start position:0%
provides and really use the features in
GCC<00:50:30.690><c> and</c><00:50:31.130><c> the</c><00:50:32.130><c> big</c><00:50:32.279><c> thing</c><00:50:32.430><c> to</c><00:50:32.490><c> keep</c><00:50:32.609><c> in</c><00:50:32.700><c> mind</c><00:50:32.910><c> is</c>

00:50:33.019 --> 00:50:33.029 align:start position:0%
GCC and the big thing to keep in mind is
 

00:50:33.029 --> 00:50:35.059 align:start position:0%
GCC and the big thing to keep in mind is
that<00:50:33.150><c> Apple</c><00:50:33.480><c> is</c><00:50:33.539><c> fully</c><00:50:33.749><c> committed</c><00:50:34.079><c> to</c><00:50:34.259><c> GCC</c><00:50:34.680><c> as</c>

00:50:35.059 --> 00:50:35.069 align:start position:0%
that Apple is fully committed to GCC as
 

00:50:35.069 --> 00:50:38.029 align:start position:0%
that Apple is fully committed to GCC as
our<00:50:35.730><c> main</c><00:50:35.910><c> line</c><00:50:36.119><c> compiler</c><00:50:36.690><c> we</c><00:50:36.839><c> run</c><00:50:37.140><c> all</c><00:50:37.470><c> of</c><00:50:37.499><c> Mac</c>

00:50:38.029 --> 00:50:38.039 align:start position:0%
our main line compiler we run all of Mac
 

00:50:38.039 --> 00:50:41.269 align:start position:0%
our main line compiler we run all of Mac
OS<00:50:38.190><c> 10</c><00:50:38.339><c> through</c><00:50:39.119><c> GCC</c><00:50:39.809><c> every</c><00:50:40.289><c> binary</c><00:50:40.950><c> that</c><00:50:41.160><c> you</c>

00:50:41.269 --> 00:50:41.279 align:start position:0%
OS 10 through GCC every binary that you
 

00:50:41.279 --> 00:50:43.819 align:start position:0%
OS 10 through GCC every binary that you
bring<00:50:41.549><c> up</c><00:50:41.730><c> when</c><00:50:42.240><c> you</c><00:50:42.390><c> install</c><00:50:42.869><c> the</c><00:50:43.380><c> Mac</c><00:50:43.559><c> OS</c><00:50:43.799><c> 10</c>

00:50:43.819 --> 00:50:43.829 align:start position:0%
bring up when you install the Mac OS 10
 

00:50:43.829 --> 00:50:46.670 align:start position:0%
bring up when you install the Mac OS 10
GM<00:50:44.279><c> has</c><00:50:44.999><c> been</c><00:50:45.269><c> run</c><00:50:45.509><c> through</c><00:50:45.539><c> the</c><00:50:45.990><c> good</c><00:50:46.589><c> new</c>

00:50:46.670 --> 00:50:46.680 align:start position:0%
GM has been run through the good new
 

00:50:46.680 --> 00:50:48.950 align:start position:0%
GM has been run through the good new
compiler<00:50:47.249><c> it</c><00:50:47.430><c> does</c><00:50:47.940><c> everything</c><00:50:48.450><c> all</c><00:50:48.749><c> of</c><00:50:48.839><c> our</c>

00:50:48.950 --> 00:50:48.960 align:start position:0%
compiler it does everything all of our
 

00:50:48.960 --> 00:50:51.829 align:start position:0%
compiler it does everything all of our
Objective<00:50:49.319><c> C</c><00:50:49.349><c> C++</c><00:50:49.829><c> C</c><00:50:50.490><c> and</c><00:50:51.329><c> now</c><00:50:51.480><c> it's</c><00:50:51.660><c> going</c><00:50:51.809><c> to</c>

00:50:51.829 --> 00:50:51.839 align:start position:0%
Objective C C++ C and now it's going to
 

00:50:51.839 --> 00:50:53.630 align:start position:0%
Objective C C++ C and now it's going to
be<00:50:51.930><c> doing</c><00:50:52.049><c> all</c><00:50:52.289><c> of</c><00:50:52.319><c> our</c><00:50:52.470><c> objective</c><00:50:52.829><c> C++</c><00:50:53.430><c> as</c>

00:50:53.630 --> 00:50:53.640 align:start position:0%
be doing all of our objective C++ as
 

00:50:53.640 --> 00:50:58.009 align:start position:0%
be doing all of our objective C++ as
well<00:50:54.980><c> so</c><00:50:55.980><c> with</c><00:50:56.670><c> that</c><00:50:56.849><c> turn</c><00:50:57.569><c> it</c><00:50:57.660><c> back</c><00:50:57.779><c> over</c><00:50:57.930><c> to</c>

00:50:58.009 --> 00:50:58.019 align:start position:0%
well so with that turn it back over to
 

00:50:58.019 --> 00:51:04.940 align:start position:0%
well so with that turn it back over to
Goffe

00:51:04.940 --> 00:51:04.950 align:start position:0%
 
 

00:51:04.950 --> 00:51:10.190 align:start position:0%
 
thank<00:51:05.580><c> you</c><00:51:05.640><c> very</c><00:51:05.670><c> much</c><00:51:05.850><c> Jeff</c><00:51:06.090><c> a</c><00:51:08.870><c> big</c><00:51:09.870><c> hand</c><00:51:10.050><c> for</c>

00:51:10.190 --> 00:51:10.200 align:start position:0%
thank you very much Jeff a big hand for
 

00:51:10.200 --> 00:51:11.090 align:start position:0%
thank you very much Jeff a big hand for
the<00:51:10.260><c> team</c><00:51:10.500><c> I</c><00:51:10.620><c> think</c><00:51:10.680><c> they've</c><00:51:10.920><c> done</c><00:51:10.950><c> a</c>

00:51:11.090 --> 00:51:11.100 align:start position:0%
the team I think they've done a
 

00:51:11.100 --> 00:51:14.990 align:start position:0%
the team I think they've done a
fantastic<00:51:11.250><c> job</c><00:51:12.920><c> some</c><00:51:13.920><c> information</c><00:51:14.460><c> resources</c>

00:51:14.990 --> 00:51:15.000 align:start position:0%
fantastic job some information resources
 

00:51:15.000 --> 00:51:17.810 align:start position:0%
fantastic job some information resources
as<00:51:15.360><c> usual</c><00:51:15.870><c> information</c><00:51:16.800><c> pages</c><00:51:17.370><c> for</c><00:51:17.670><c> all</c><00:51:17.700><c> the</c>

00:51:17.810 --> 00:51:17.820 align:start position:0%
as usual information pages for all the
 

00:51:17.820 --> 00:51:18.740 align:start position:0%
as usual information pages for all the
Mac<00:51:18.180><c> os10</c>

00:51:18.740 --> 00:51:18.750 align:start position:0%
Mac os10
 

00:51:18.750 --> 00:51:20.870 align:start position:0%
Mac os10
tools<00:51:19.080><c> are</c><00:51:19.470><c> available</c><00:51:20.160><c> at</c><00:51:20.280><c> the</c><00:51:20.460><c> Apple</c>

00:51:20.870 --> 00:51:20.880 align:start position:0%
tools are available at the Apple
 

00:51:20.880 --> 00:51:22.760 align:start position:0%
tools are available at the Apple
developer<00:51:21.360><c> website</c><00:51:21.540><c> under</c><00:51:22.110><c> the</c><00:51:22.200><c> tools</c><00:51:22.410><c> area</c>

00:51:22.760 --> 00:51:22.770 align:start position:0%
developer website under the tools area
 

00:51:22.770 --> 00:51:26.360 align:start position:0%
developer website under the tools area
we<00:51:23.670><c> also</c><00:51:23.970><c> for</c><00:51:24.420><c> this</c><00:51:24.600><c> scene</c><00:51:25.110><c> because</c><00:51:25.290><c> GCC</c><00:51:26.010><c> is</c><00:51:26.190><c> an</c>

00:51:26.360 --> 00:51:26.370 align:start position:0%
we also for this scene because GCC is an
 

00:51:26.370 --> 00:51:27.830 align:start position:0%
we also for this scene because GCC is an
open<00:51:26.640><c> source</c><00:51:26.760><c> project</c><00:51:27.060><c> we</c><00:51:27.450><c> wanted</c><00:51:27.630><c> to</c><00:51:27.720><c> give</c>

00:51:27.830 --> 00:51:27.840 align:start position:0%
open source project we wanted to give
 

00:51:27.840 --> 00:51:29.780 align:start position:0%
open source project we wanted to give
you<00:51:27.870><c> the</c><00:51:28.050><c> pointer</c><00:51:28.380><c> for</c><00:51:28.650><c> open</c><00:51:28.980><c> source</c><00:51:29.160><c> at</c><00:51:29.460><c> the</c>

00:51:29.780 --> 00:51:29.790 align:start position:0%
you the pointer for open source at the
 

00:51:29.790 --> 00:51:33.050 align:start position:0%
you the pointer for open source at the
Apple<00:51:30.060><c> webpages</c><00:51:30.420><c> and</c><00:51:30.890><c> the</c><00:51:31.890><c> new</c><00:51:32.070><c> project</c><00:51:32.670><c> web</c>

00:51:33.050 --> 00:51:33.060 align:start position:0%
Apple webpages and the new project web
 

00:51:33.060 --> 00:51:35.360 align:start position:0%
Apple webpages and the new project web
sources<00:51:33.390><c> well</c><00:51:33.690><c> since</c><00:51:33.990><c> they're</c><00:51:34.200><c> the</c><00:51:34.230><c> is</c><00:51:35.190><c> their</c>

00:51:35.360 --> 00:51:35.370 align:start position:0%
sources well since they're the is their
 

00:51:35.370 --> 00:51:37.640 align:start position:0%
sources well since they're the is their
the<00:51:35.520><c> the</c><00:51:35.690><c> baseline</c><00:51:36.690><c> for</c><00:51:36.930><c> all</c><00:51:36.990><c> the</c><00:51:37.230><c> new</c><00:51:37.410><c> stuff</c>

00:51:37.640 --> 00:51:37.650 align:start position:0%
the the baseline for all the new stuff
 

00:51:37.650 --> 00:51:40.370 align:start position:0%
the the baseline for all the new stuff
and<00:51:38.180><c> another</c><00:51:39.180><c> pointer</c><00:51:39.570><c> also</c><00:51:39.870><c> to</c><00:51:39.930><c> our</c><00:51:40.050><c> mailing</c>

00:51:40.370 --> 00:51:40.380 align:start position:0%
and another pointer also to our mailing
 

00:51:40.380 --> 00:51:42.590 align:start position:0%
and another pointer also to our mailing
list<00:51:40.530><c> main</c><00:51:40.980><c> server</c><00:51:41.310><c> we</c><00:51:41.580><c> have</c><00:51:41.760><c> several</c><00:51:42.120><c> mailing</c>

00:51:42.590 --> 00:51:42.600 align:start position:0%
list main server we have several mailing
 

00:51:42.600 --> 00:51:44.690 align:start position:0%
list main server we have several mailing
lists<00:51:42.840><c> that</c><00:51:42.990><c> are</c><00:51:43.140><c> germane</c><00:51:43.350><c> to</c><00:51:43.560><c> the</c><00:51:44.190><c> to</c><00:51:44.550><c> the</c>

00:51:44.690 --> 00:51:44.700 align:start position:0%
lists that are germane to the to the
 

00:51:44.700 --> 00:51:48.740 align:start position:0%
lists that are germane to the to the
development<00:51:46.280><c> development</c><00:51:47.280><c> tasks</c><00:51:47.970><c> project</c>

00:51:48.740 --> 00:51:48.750 align:start position:0%
development development tasks project
 

00:51:48.750 --> 00:51:50.780 align:start position:0%
development development tasks project
building<00:51:48.990><c> users</c><00:51:49.350><c> is</c><00:51:49.470><c> the</c><00:51:49.500><c> one</c><00:51:49.710><c> that</c><00:51:49.920><c> has</c><00:51:50.580><c> been</c>

00:51:50.780 --> 00:51:50.790 align:start position:0%
building users is the one that has been
 

00:51:50.790 --> 00:51:53.780 align:start position:0%
building users is the one that has been
very<00:51:51.630><c> heavily</c><00:51:51.930><c> used</c><00:51:52.050><c> got</c><00:51:52.470><c> over</c><00:51:52.860><c> over</c><00:51:53.250><c> 500</c>

00:51:53.780 --> 00:51:53.790 align:start position:0%
very heavily used got over over 500
 

00:51:53.790 --> 00:51:56.660 align:start position:0%
very heavily used got over over 500
subscribers<00:51:54.330><c> now</c><00:51:54.890><c> cocoa</c><00:51:55.890><c> dev</c><00:51:56.070><c> and</c><00:51:56.250><c> carbon</c><00:51:56.550><c> to</c>

00:51:56.660 --> 00:51:56.670 align:start position:0%
subscribers now cocoa dev and carbon to
 

00:51:56.670 --> 00:52:00.350 align:start position:0%
subscribers now cocoa dev and carbon to
over<00:51:57.360><c> a</c><00:51:57.390><c> thousand</c><00:51:57.840><c> thank</c><00:51:58.050><c> you</c><00:51:58.140><c> Dave</c><00:51:59.210><c> cocoa</c><00:52:00.210><c> dev</c>

00:52:00.350 --> 00:52:00.360 align:start position:0%
over a thousand thank you Dave cocoa dev
 

00:52:00.360 --> 00:52:02.060 align:start position:0%
over a thousand thank you Dave cocoa dev
and<00:52:00.540><c> carbon</c><00:52:00.810><c> dev</c><00:52:00.930><c> are</c><00:52:01.050><c> also</c><00:52:01.200><c> getting</c>

00:52:02.060 --> 00:52:02.070 align:start position:0%
and carbon dev are also getting
 

00:52:02.070 --> 00:52:06.080 align:start position:0%
and carbon dev are also getting
populated<00:52:02.610><c> very</c><00:52:02.790><c> rapidly</c><00:52:03.180><c> as</c><00:52:03.390><c> well</c><00:52:05.090><c> roadmap</c>

00:52:06.080 --> 00:52:06.090 align:start position:0%
populated very rapidly as well roadmap
 

00:52:06.090 --> 00:52:08.180 align:start position:0%
populated very rapidly as well roadmap
for<00:52:06.330><c> more</c><00:52:06.570><c> tool</c><00:52:06.810><c> sessions</c><00:52:07.290><c> a</c><00:52:07.440><c> very</c><00:52:07.740><c> important</c>

00:52:08.180 --> 00:52:08.190 align:start position:0%
for more tool sessions a very important
 

00:52:08.190 --> 00:52:09.890 align:start position:0%
for more tool sessions a very important
session<00:52:08.520><c> this</c><00:52:08.610><c> afternoon</c><00:52:08.670><c> at</c><00:52:09.240><c> 5:00</c><00:52:09.480><c> robber</c>

00:52:09.890 --> 00:52:09.900 align:start position:0%
session this afternoon at 5:00 robber
 

00:52:09.900 --> 00:52:12.260 align:start position:0%
session this afternoon at 5:00 robber
bondage<00:52:10.320><c> in</c><00:52:10.500><c> 705</c><00:52:11.130><c> will</c><00:52:11.310><c> show</c><00:52:11.490><c> you</c><00:52:11.550><c> how</c><00:52:11.820><c> to</c><00:52:11.880><c> use</c>

00:52:12.260 --> 00:52:12.270 align:start position:0%
bondage in 705 will show you how to use
 

00:52:12.270 --> 00:52:13.550 align:start position:0%
bondage in 705 will show you how to use
the<00:52:12.450><c> performance</c><00:52:12.960><c> tools</c><00:52:13.200><c> that</c><00:52:13.440><c> we're</c>

00:52:13.550 --> 00:52:13.560 align:start position:0%
the performance tools that we're
 

00:52:13.560 --> 00:52:15.530 align:start position:0%
the performance tools that we're
supplying<00:52:13.770><c> on</c><00:52:14.100><c> disk</c><00:52:14.370><c> this</c><00:52:15.150><c> has</c><00:52:15.330><c> tremendous</c>

00:52:15.530 --> 00:52:15.540 align:start position:0%
supplying on disk this has tremendous
 

00:52:15.540 --> 00:52:17.780 align:start position:0%
supplying on disk this has tremendous
benefit<00:52:16.230><c> for</c><00:52:16.260><c> everyone</c><00:52:16.680><c> tomorrow</c>

00:52:17.780 --> 00:52:17.790 align:start position:0%
benefit for everyone tomorrow
 

00:52:17.790 --> 00:52:20.320 align:start position:0%
benefit for everyone tomorrow
7:06<00:52:18.630><c> in</c><00:52:18.780><c> the</c><00:52:18.990><c> main</c><00:52:19.140><c> hall</c><00:52:19.440><c> at</c><00:52:19.710><c> nine</c><00:52:19.890><c> o'clock</c>

00:52:20.320 --> 00:52:20.330 align:start position:0%
7:06 in the main hall at nine o'clock
 

00:52:20.330 --> 00:52:23.900 align:start position:0%
7:06 in the main hall at nine o'clock
debugging<00:52:21.330><c> on</c><00:52:21.420><c> Mac</c><00:52:21.600><c> OS</c><00:52:21.870><c> 10</c><00:52:21.900><c> using</c><00:52:22.470><c> gdb</c><00:52:22.910><c> the</c>

00:52:23.900 --> 00:52:23.910 align:start position:0%
debugging on Mac OS 10 using gdb the
 

00:52:23.910 --> 00:52:26.930 align:start position:0%
debugging on Mac OS 10 using gdb the
darwin<00:52:24.360><c> documentation</c><00:52:25.050><c> project</c><00:52:25.530><c> and</c><00:52:25.940><c> also</c>

00:52:26.930 --> 00:52:26.940 align:start position:0%
darwin documentation project and also
 

00:52:26.940 --> 00:52:28.520 align:start position:0%
darwin documentation project and also
the<00:52:27.180><c> feedback</c><00:52:27.360><c> form</c><00:52:27.840><c> tomorrow</c><00:52:28.140><c> afternoon</c><00:52:28.470><c> are</c>

00:52:28.520 --> 00:52:28.530 align:start position:0%
the feedback form tomorrow afternoon are
 

00:52:28.530 --> 00:52:30.110 align:start position:0%
the feedback form tomorrow afternoon are
also<00:52:28.770><c> very</c><00:52:29.070><c> good</c><00:52:29.220><c> opportunities</c><00:52:29.790><c> for</c><00:52:29.820><c> you</c><00:52:30.090><c> to</c>

00:52:30.110 --> 00:52:30.120 align:start position:0%
also very good opportunities for you to
 

00:52:30.120 --> 00:52:32.090 align:start position:0%
also very good opportunities for you to
for<00:52:30.840><c> you</c><00:52:30.900><c> to</c><00:52:31.050><c> talk</c><00:52:31.410><c> to</c><00:52:31.590><c> the</c><00:52:31.680><c> development</c><00:52:32.070><c> team</c>

00:52:32.090 --> 00:52:32.100 align:start position:0%
for you to talk to the development team
 

00:52:32.100 --> 00:52:36.140 align:start position:0%
for you to talk to the development team
and<00:52:32.430><c> get</c><00:52:33.030><c> more</c><00:52:33.570><c> questions</c><00:52:33.750><c> and</c><00:52:34.140><c> answers</c><00:52:35.150><c> with</c>

00:52:36.140 --> 00:52:36.150 align:start position:0%
and get more questions and answers with
 

00:52:36.150 --> 00:52:38.060 align:start position:0%
and get more questions and answers with
that<00:52:36.330><c> and</c><00:52:36.540><c> especially</c><00:52:37.290><c> for</c><00:52:37.680><c> the</c><00:52:37.770><c> objective</c>

00:52:38.060 --> 00:52:38.070 align:start position:0%
that and especially for the objective
 

00:52:38.070 --> 00:52:40.760 align:start position:0%
that and especially for the objective
c++<00:52:38.820><c> seeding</c><00:52:39.240><c> this</c><00:52:40.080><c> is</c><00:52:40.200><c> my</c><00:52:40.350><c> contact</c>

00:52:40.760 --> 00:52:40.770 align:start position:0%
c++ seeding this is my contact
 

00:52:40.770 --> 00:52:43.820 align:start position:0%
c++ seeding this is my contact
information<00:52:40.920><c> on</c><00:52:41.520><c> top</c><00:52:41.820><c> I</c><00:52:42.390><c> would</c><00:52:42.960><c> ask</c><00:52:43.170><c> again</c><00:52:43.620><c> as</c>

00:52:43.820 --> 00:52:43.830 align:start position:0%
information on top I would ask again as
 

00:52:43.830 --> 00:52:46.040 align:start position:0%
information on top I would ask again as
we<00:52:43.950><c> put</c><00:52:44.130><c> in</c><00:52:44.250><c> the</c><00:52:44.370><c> slide</c><00:52:44.640><c> if</c><00:52:44.970><c> you're</c><00:52:45.120><c> looking</c><00:52:45.600><c> to</c>

00:52:46.040 --> 00:52:46.050 align:start position:0%
we put in the slide if you're looking to
 

00:52:46.050 --> 00:52:48.530 align:start position:0%
we put in the slide if you're looking to
be<00:52:46.200><c> a</c><00:52:46.230><c> candidate</c><00:52:46.800><c> for</c><00:52:46.860><c> as</c><00:52:47.280><c> an</c><00:52:47.550><c> objective-c</c><00:52:48.030><c> e</c><00:52:48.240><c> C</c>

00:52:48.530 --> 00:52:48.540 align:start position:0%
be a candidate for as an objective-c e C
 

00:52:48.540 --> 00:52:52.700 align:start position:0%
be a candidate for as an objective-c e C
and<00:52:48.860><c> Objective</c><00:52:49.860><c> C</c><00:52:49.890><c> +</c><00:52:50.520><c> +</c><00:52:50.550><c> seed</c><00:52:51.480><c> site</c><00:52:51.900><c> that's</c><00:52:52.560><c> a</c>

00:52:52.700 --> 00:52:52.710 align:start position:0%
and Objective C + + seed site that's a
 

00:52:52.710 --> 00:52:55.880 align:start position:0%
and Objective C + + seed site that's a
mouthful<00:52:53.570><c> please</c><00:52:54.570><c> put</c><00:52:54.870><c> that</c><00:52:54.900><c> in</c><00:52:55.290><c> the</c><00:52:55.440><c> subject</c>

00:52:55.880 --> 00:52:55.890 align:start position:0%
mouthful please put that in the subject
 

00:52:55.890 --> 00:52:57.620 align:start position:0%
mouthful please put that in the subject
line<00:52:55.950><c> so</c><00:52:56.310><c> that</c><00:52:56.430><c> I</c><00:52:56.490><c> can</c><00:52:56.610><c> identify</c><00:52:56.730><c> them</c><00:52:57.360><c> easily</c>

00:52:57.620 --> 00:52:57.630 align:start position:0%
line so that I can identify them easily
 

00:52:57.630 --> 00:52:59.900 align:start position:0%
line so that I can identify them easily
and<00:52:57.990><c> manage</c><00:52:58.770><c> the</c><00:52:58.920><c> seed</c><00:52:59.100><c> program</c><00:52:59.490><c> my</c><00:52:59.670><c> group</c>

00:52:59.900 --> 00:52:59.910 align:start position:0%
and manage the seed program my group
 

00:52:59.910 --> 00:53:01.460 align:start position:0%
and manage the seed program my group
technology<00:53:00.480><c> management</c><00:53:00.780><c> does</c><00:53:01.110><c> all</c><00:53:01.320><c> the</c>

00:53:01.460 --> 00:53:01.470 align:start position:0%
technology management does all the
 

00:53:01.470 --> 00:53:03.440 align:start position:0%
technology management does all the
management<00:53:01.740><c> of</c><00:53:02.010><c> a</c><00:53:02.070><c> seeding</c><00:53:02.520><c> for</c><00:53:03.120><c> Apple</c>

00:53:03.440 --> 00:53:03.450 align:start position:0%
management of a seeding for Apple
 

00:53:03.450 --> 00:53:07.040 align:start position:0%
management of a seeding for Apple
Computer<00:53:04.400><c> the</c><00:53:05.400><c> Mac</c><00:53:05.610><c> OS</c><00:53:05.880><c> 10</c><00:53:05.910><c> tools</c><00:53:06.420><c> feedback</c>

00:53:07.040 --> 00:53:07.050 align:start position:0%
Computer the Mac OS 10 tools feedback
 

00:53:07.050 --> 00:53:09.650 align:start position:0%
Computer the Mac OS 10 tools feedback
address<00:53:07.560><c> sends</c><00:53:08.190><c> your</c><00:53:08.310><c> email</c><00:53:08.730><c> directly</c><00:53:09.120><c> to</c><00:53:09.480><c> the</c>

00:53:09.650 --> 00:53:09.660 align:start position:0%
address sends your email directly to the
 

00:53:09.660 --> 00:53:12.290 align:start position:0%
address sends your email directly to the
Keith<00:53:10.620><c> key</c><00:53:11.070><c> personnel</c><00:53:11.550><c> in</c><00:53:11.760><c> the</c><00:53:11.880><c> development</c>

00:53:12.290 --> 00:53:12.300 align:start position:0%
Keith key personnel in the development
 

00:53:12.300 --> 00:53:14.840 align:start position:0%
Keith key personnel in the development
teams<00:53:12.570><c> in</c><00:53:12.810><c> our</c><00:53:13.320><c> tools</c><00:53:13.560><c> groups</c><00:53:13.920><c> as</c><00:53:14.160><c> a</c><00:53:14.460><c> good</c><00:53:14.730><c> way</c>

00:53:14.840 --> 00:53:14.850 align:start position:0%
teams in our tools groups as a good way
 

00:53:14.850 --> 00:53:18.410 align:start position:0%
teams in our tools groups as a good way
to<00:53:14.910><c> get</c><00:53:15.150><c> feature</c><00:53:15.900><c> enhancements</c><00:53:16.770><c> ideas</c>

00:53:18.410 --> 00:53:18.420 align:start position:0%
to get feature enhancements ideas
 

00:53:18.420 --> 00:53:21.410 align:start position:0%
to get feature enhancements ideas
Express<00:53:19.019><c> directly</c><00:53:19.470><c> to</c><00:53:19.680><c> us</c><00:53:19.710><c> and</c><00:53:20.099><c> the</c><00:53:20.940><c> URL</c><00:53:21.119><c> at</c>

00:53:21.410 --> 00:53:21.420 align:start position:0%
Express directly to us and the URL at
 

00:53:21.420 --> 00:53:22.849 align:start position:0%
Express directly to us and the URL at
the<00:53:21.450><c> bottom</c><00:53:21.539><c> of</c><00:53:21.839><c> the</c><00:53:21.900><c> screen</c><00:53:22.049><c> which</c><00:53:22.260><c> reappears</c>

00:53:22.849 --> 00:53:22.859 align:start position:0%
the bottom of the screen which reappears
 

00:53:22.859 --> 00:53:24.799 align:start position:0%
the bottom of the screen which reappears
on<00:53:23.039><c> the</c><00:53:23.190><c> on</c><00:53:23.460><c> the</c><00:53:23.609><c> QA</c>

00:53:24.799 --> 00:53:24.809 align:start position:0%
on the on the QA
 

00:53:24.809 --> 00:53:28.029 align:start position:0%
on the on the QA
slide<00:53:25.650><c> is</c><00:53:25.920><c> a</c><00:53:26.220><c> master</c><00:53:26.700><c> page</c><00:53:26.940><c> of</c><00:53:27.210><c> all</c><00:53:27.420><c> the</c><00:53:27.569><c> URLs</c>

00:53:28.029 --> 00:53:28.039 align:start position:0%
slide is a master page of all the URLs
 

00:53:28.039 --> 00:53:31.849 align:start position:0%
slide is a master page of all the URLs
organized<00:53:29.039><c> by</c><00:53:29.369><c> session</c><00:53:29.700><c> for</c><00:53:30.150><c> the</c><00:53:30.269><c> show</c><00:53:30.450><c> so</c><00:53:31.079><c> if</c>

00:53:31.849 --> 00:53:31.859 align:start position:0%
organized by session for the show so if
 

00:53:31.859 --> 00:53:33.319 align:start position:0%
organized by session for the show so if
there's<00:53:32.130><c> one</c><00:53:32.369><c> URL</c><00:53:32.640><c> that</c><00:53:32.910><c> you</c><00:53:33.000><c> should</c><00:53:33.150><c> write</c>

00:53:33.319 --> 00:53:33.329 align:start position:0%
there's one URL that you should write
 

00:53:33.329 --> 00:53:35.180 align:start position:0%
there's one URL that you should write
down<00:53:33.359><c> you</c><00:53:33.990><c> should</c><00:53:34.200><c> write</c><00:53:34.410><c> down</c><00:53:34.440><c> the</c><00:53:34.740><c> last</c><00:53:34.920><c> one</c>

00:53:35.180 --> 00:53:35.190 align:start position:0%
down you should write down the last one
 

00:53:35.190 --> 00:53:36.440 align:start position:0%
down you should write down the last one
because<00:53:35.460><c> that</c><00:53:35.609><c> will</c><00:53:35.760><c> allow</c><00:53:35.880><c> you</c><00:53:36.000><c> to</c><00:53:36.150><c> get</c><00:53:36.390><c> to</c>

00:53:36.440 --> 00:53:36.450 align:start position:0%
because that will allow you to get to
 

00:53:36.450 --> 00:53:38.390 align:start position:0%
because that will allow you to get to
all<00:53:36.869><c> the</c><00:53:37.079><c> all</c><00:53:37.380><c> the</c><00:53:37.529><c> URLs</c><00:53:37.920><c> and</c><00:53:38.130><c> all</c><00:53:38.250><c> the</c>

00:53:38.390 --> 00:53:38.400 align:start position:0%
all the all the URLs and all the
 

00:53:38.400 --> 00:53:40.220 align:start position:0%
all the all the URLs and all the
information<00:53:38.880><c> resources</c><00:53:39.420><c> that</c><00:53:39.869><c> we</c><00:53:39.990><c> distribute</c>

00:53:40.220 --> 00:53:40.230 align:start position:0%
information resources that we distribute
 

00:53:40.230 --> 00:53:48.780 align:start position:0%
information resources that we distribute
throughout<00:53:40.650><c> the</c><00:53:40.769><c> entire</c><00:53:41.039><c> show</c>

00:53:48.780 --> 00:53:48.790 align:start position:0%
 
 

00:53:48.790 --> 00:53:50.850 align:start position:0%
 
you

